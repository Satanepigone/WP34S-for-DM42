ARM GAS  /tmp/ccT3noyS.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"complex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.cmplxDivideRealBy,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	cmplxDivideRealBy:
  27              	.LVL0:
  28              	.LFB5:
  29              		.file 1 "src/complex.c"
   1:src/complex.c **** /* This file is part of 34S.
   2:src/complex.c ****  * 
   3:src/complex.c ****  * 34S is free software: you can redistribute it and/or modify
   4:src/complex.c ****  * it under the terms of the GNU General Public License as published by
   5:src/complex.c ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/complex.c ****  * (at your option) any later version.
   7:src/complex.c ****  * 
   8:src/complex.c ****  * 34S is distributed in the hope that it will be useful,
   9:src/complex.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/complex.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/complex.c ****  * GNU General Public License for more details.
  12:src/complex.c ****  * 
  13:src/complex.c ****  * You should have received a copy of the GNU General Public License
  14:src/complex.c ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/complex.c ****  */
  16:src/complex.c **** 
  17:src/complex.c **** #include "decn.h"
  18:src/complex.c **** #include "complex.h"
  19:src/complex.c **** #include "xeq.h"
  20:src/complex.c **** #include "consts.h"
  21:src/complex.c **** 
  22:src/complex.c **** #if 0
  23:src/complex.c **** #include <stdio.h>
  24:src/complex.c **** static FILE *debugf = NULL;
  25:src/complex.c **** 
  26:src/complex.c **** static void open_debug(void) {
  27:src/complex.c **** 	if (debugf == NULL) {
  28:src/complex.c **** 		debugf = fopen("/dev/ttys000", "w");
  29:src/complex.c **** 	}
ARM GAS  /tmp/ccT3noyS.s 			page 2


  30:src/complex.c **** }
  31:src/complex.c **** static void dump1(const decNumber *a, const char *msg) {
  32:src/complex.c **** 	char b[100];
  33:src/complex.c **** 
  34:src/complex.c **** 	open_debug();
  35:src/complex.c **** 	decNumberToString(a, b);
  36:src/complex.c **** 	fprintf(debugf, "%s: %s\n", msg, b);
  37:src/complex.c **** }
  38:src/complex.c **** 
  39:src/complex.c **** static void dump2(const decNumber *a, const decNumber *b, const char *msg) {
  40:src/complex.c **** 	char b1[100], b2[100];
  41:src/complex.c **** 
  42:src/complex.c **** 	open_debug();
  43:src/complex.c **** 	decNumberToString(a, b1);
  44:src/complex.c **** 	decNumberToString(b, b2);
  45:src/complex.c **** 	fprintf(debugf, "%s: %s / %s\n", msg, b1, b2);
  46:src/complex.c **** }
  47:src/complex.c **** #endif
  48:src/complex.c **** 
  49:src/complex.c **** #define COMPLEX_DIGITS	72
  50:src/complex.c **** 
  51:src/complex.c **** typedef struct {
  52:src/complex.c **** 	decNumber n;
  53:src/complex.c **** 	decNumberUnit extra[((COMPLEX_DIGITS-DECNUMDIGITS+DECDPUN-1)/DECDPUN)];
  54:src/complex.c **** } complexNumber;
  55:src/complex.c **** 
  56:src/complex.c **** static int setComplexContext(void) {
  57:src/complex.c **** 	int digits = Ctx.digits;
  58:src/complex.c **** 	if (is_dblmode())
  59:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
  60:src/complex.c **** 	return digits;
  61:src/complex.c **** }
  62:src/complex.c **** 
  63:src/complex.c **** static void resetComplexContext(int x) {
  64:src/complex.c **** 	Ctx.digits = x;
  65:src/complex.c **** }
  66:src/complex.c **** 
  67:src/complex.c **** static void complexResult(decNumber *x, decNumber *y, complexNumber *xin, complexNumber *yin, int s
  68:src/complex.c **** 	resetComplexContext(saved);
  69:src/complex.c **** 	dn_plus(x, &xin->n);
  70:src/complex.c **** 	dn_plus(y, &yin->n);
  71:src/complex.c **** }
  72:src/complex.c **** 
  73:src/complex.c **** 
  74:src/complex.c **** 
  75:src/complex.c **** void cmplx_NaN(decNumber *x, decNumber *y) {
  76:src/complex.c **** 	set_NaN(x);
  77:src/complex.c **** 	set_NaN(y);
  78:src/complex.c **** }
  79:src/complex.c **** 
  80:src/complex.c **** #ifndef TINY_BUILD
  81:src/complex.c **** // r - (a + i b) = (r - a) - i b
  82:src/complex.c **** #if 0
  83:src/complex.c **** static void cmplxSubtractFromReal(decNumber *rx, decNumber *ry,
  84:src/complex.c **** 		const decNumber *r,
  85:src/complex.c **** 		const decNumber *a, const decNumber *b) {
  86:src/complex.c **** 	dn_subtract(rx, r, a);
ARM GAS  /tmp/ccT3noyS.s 			page 3


  87:src/complex.c **** 	dn_minus(ry, b);
  88:src/complex.c **** }
  89:src/complex.c **** #endif
  90:src/complex.c **** 
  91:src/complex.c **** // (a + i b) * r = (a * r) + i (b * r)
  92:src/complex.c **** static void cmplxMultiplyReal(decNumber *rx, decNumber *ry,
  93:src/complex.c **** 		const decNumber *a, const decNumber *b,
  94:src/complex.c **** 		const decNumber *r) {
  95:src/complex.c **** 	dn_multiply(rx, a, r);
  96:src/complex.c **** 	dn_multiply(ry, b, r);
  97:src/complex.c **** }
  98:src/complex.c **** 
  99:src/complex.c **** #if 0
 100:src/complex.c **** static void cmplxDiv2(decNumber *rx, decNumber *ry,
 101:src/complex.c **** 		const decNumber *a, const decNumber *b) {
 102:src/complex.c **** 	cmplxMultiplyReal(rx, ry, a, b, &const_0_5);
 103:src/complex.c **** }
 104:src/complex.c **** #endif
 105:src/complex.c **** 
 106:src/complex.c **** #if 0
 107:src/complex.c **** // (a + i b) / c = ( a / r ) + i ( b / r)
 108:src/complex.c **** static void cmplxDivideReal(decNumber *rx, decNumber *ry,
 109:src/complex.c **** 		const decNumber *a, const decNumber *b,
 110:src/complex.c **** 		const decNumber *r) {
 111:src/complex.c **** 	dn_divide(rx, a, r);
 112:src/complex.c **** 	dn_divide(ry, b, r);
 113:src/complex.c **** }
 114:src/complex.c **** #endif
 115:src/complex.c **** 
 116:src/complex.c **** // a / (c + i d) = (a*c) / (c*c + d*d) + i (- a*d) / (c*c + d*d)
 117:src/complex.c **** static void cmplxDivideRealBy(decNumber *rx, decNumber *ry,
 118:src/complex.c **** 		const decNumber *a,
 119:src/complex.c **** 		const decNumber *c, const decNumber *d) {
  30              		.loc 1 119 43 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 144
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 120:src/complex.c **** 	decNumber t1, t2, t3, den;
  34              		.loc 1 120 2 view .LVU1
 121:src/complex.c **** 
 122:src/complex.c **** 	dn_multiply(&t1, c, c);
  35              		.loc 1 122 2 view .LVU2
 119:src/complex.c **** 	decNumber t1, t2, t3, den;
  36              		.loc 1 119 43 is_stmt 0 view .LVU3
  37 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  38              		.cfi_def_cfa_offset 24
  39              		.cfi_offset 4, -24
  40              		.cfi_offset 5, -20
  41              		.cfi_offset 6, -16
  42              		.cfi_offset 7, -12
  43              		.cfi_offset 8, -8
  44              		.cfi_offset 14, -4
  45 0004 A4B0     		sub	sp, sp, #144
  46              		.cfi_def_cfa_offset 168
 119:src/complex.c **** 	decNumber t1, t2, t3, den;
  47              		.loc 1 119 43 view .LVU4
  48 0006 1546     		mov	r5, r2
ARM GAS  /tmp/ccT3noyS.s 			page 4


  49 0008 2A9F     		ldr	r7, [sp, #168]
  50              		.loc 1 122 2 view .LVU5
  51 000a 1A46     		mov	r2, r3
  52              	.LVL1:
 119:src/complex.c **** 	decNumber t1, t2, t3, den;
  53              		.loc 1 119 43 view .LVU6
  54 000c 8046     		mov	r8, r0
  55 000e 0E46     		mov	r6, r1
  56              		.loc 1 122 2 view .LVU7
  57 0010 6846     		mov	r0, sp
  58              	.LVL2:
  59              		.loc 1 122 2 view .LVU8
  60 0012 1946     		mov	r1, r3
  61              	.LVL3:
 119:src/complex.c **** 	decNumber t1, t2, t3, den;
  62              		.loc 1 119 43 view .LVU9
  63 0014 1C46     		mov	r4, r3
  64              		.loc 1 122 2 view .LVU10
  65 0016 FFF7FEFF 		bl	dn_multiply
  66              	.LVL4:
 123:src/complex.c **** 	dn_multiply(&t2, d, d);
  67              		.loc 1 123 2 is_stmt 1 view .LVU11
  68 001a 3A46     		mov	r2, r7
  69 001c 3946     		mov	r1, r7
  70 001e 09A8     		add	r0, sp, #36
  71 0020 FFF7FEFF 		bl	dn_multiply
  72              	.LVL5:
 124:src/complex.c **** 	dn_add(&den, &t1, &t2);
  73              		.loc 1 124 2 view .LVU12
  74 0024 09AA     		add	r2, sp, #36
  75 0026 6946     		mov	r1, sp
  76 0028 1BA8     		add	r0, sp, #108
  77 002a FFF7FEFF 		bl	dn_add
  78              	.LVL6:
 125:src/complex.c **** 
 126:src/complex.c **** 	dn_multiply(&t1, a, c);
  79              		.loc 1 126 2 view .LVU13
  80 002e 2246     		mov	r2, r4
  81 0030 2946     		mov	r1, r5
  82 0032 6846     		mov	r0, sp
  83 0034 FFF7FEFF 		bl	dn_multiply
  84              	.LVL7:
 127:src/complex.c **** 	dn_divide(rx, &t1, &den);
  85              		.loc 1 127 2 view .LVU14
  86 0038 1BAA     		add	r2, sp, #108
  87 003a 6946     		mov	r1, sp
  88 003c 4046     		mov	r0, r8
  89 003e FFF7FEFF 		bl	dn_divide
  90              	.LVL8:
 128:src/complex.c **** 
 129:src/complex.c **** 	dn_multiply(&t2, a, d);
  91              		.loc 1 129 2 view .LVU15
  92 0042 3A46     		mov	r2, r7
  93 0044 2946     		mov	r1, r5
  94 0046 09A8     		add	r0, sp, #36
  95 0048 FFF7FEFF 		bl	dn_multiply
  96              	.LVL9:
ARM GAS  /tmp/ccT3noyS.s 			page 5


 130:src/complex.c **** 	dn_minus(&t3, &t2);
  97              		.loc 1 130 2 view .LVU16
  98 004c 09A9     		add	r1, sp, #36
  99 004e 12A8     		add	r0, sp, #72
 100 0050 FFF7FEFF 		bl	dn_minus
 101              	.LVL10:
 131:src/complex.c **** 	dn_divide(ry, &t3, &den);
 102              		.loc 1 131 2 view .LVU17
 103 0054 1BAA     		add	r2, sp, #108
 104 0056 12A9     		add	r1, sp, #72
 105 0058 3046     		mov	r0, r6
 106 005a FFF7FEFF 		bl	dn_divide
 107              	.LVL11:
 132:src/complex.c **** }
 108              		.loc 1 132 1 is_stmt 0 view .LVU18
 109 005e 24B0     		add	sp, sp, #144
 110              		.cfi_def_cfa_offset 24
 111              		@ sp needed
 112 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 113              		.loc 1 132 1 view .LVU19
 114              		.cfi_endproc
 115              	.LFE5:
 117              		.section	.text.cmplx_sincos,"ax",%progbits
 118              		.align	1
 119              		.p2align 2,,3
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	cmplx_sincos:
 126              	.LVL12:
 127              	.LFB23:
 133:src/complex.c **** #endif
 134:src/complex.c **** 
 135:src/complex.c **** // (a + i b) + (c + i d) = (a + c) + i (b + d)
 136:src/complex.c **** void cmplxAdd(decNumber *rx, decNumber *ry,
 137:src/complex.c **** 		const decNumber *a, const decNumber *b,
 138:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 139:src/complex.c **** 	dn_add(rx, a, c);
 140:src/complex.c **** 	dn_add(ry, b, d);
 141:src/complex.c **** }
 142:src/complex.c **** 
 143:src/complex.c **** // (a + i b) - (c + i d) = (a - c) + i (b - d)
 144:src/complex.c **** void cmplxSubtract(decNumber *rx, decNumber *ry,
 145:src/complex.c **** 		const decNumber *a, const decNumber *b,
 146:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 147:src/complex.c **** 	dn_subtract(rx, a, c);
 148:src/complex.c **** 	dn_subtract(ry, b, d);
 149:src/complex.c **** }
 150:src/complex.c **** 
 151:src/complex.c **** // (a + i b) * (c + i d) = (a * c - b * d) + i (a * d + b * c)
 152:src/complex.c **** void cmplxMultiply(decNumber *rx, decNumber *ry,
 153:src/complex.c **** 		const decNumber *a, const decNumber *b,
 154:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 155:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 156:src/complex.c **** 
 157:src/complex.c **** 	const int save = setComplexContext();
ARM GAS  /tmp/ccT3noyS.s 			page 6


 158:src/complex.c **** 	dn_multiply(&t1.n, a, c);
 159:src/complex.c **** 	dn_multiply(&t2.n, b, d);
 160:src/complex.c **** 	dn_subtract(&x.n, &t1.n, &t2.n);
 161:src/complex.c **** 
 162:src/complex.c **** 	dn_multiply(&u1.n, a, d);
 163:src/complex.c **** 	dn_multiply(&u2.n, b, c);
 164:src/complex.c **** 	dn_add(&y.n, &u1.n, &u2.n);
 165:src/complex.c **** 
 166:src/complex.c **** 	complexResult(rx, ry, &x, &y, save);
 167:src/complex.c **** }
 168:src/complex.c **** 
 169:src/complex.c **** #ifdef INCLUDE_C_LOCK
 170:src/complex.c **** 
 171:src/complex.c **** // (a + i b) . (c + i d) = (a * c) + i (b * d)
 172:src/complex.c **** void cpx_dot(decNumber *rx, decNumber *ry,
 173:src/complex.c **** 		const decNumber *a, const decNumber *b,
 174:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 175:src/complex.c **** 	complexNumber x, y;
 176:src/complex.c **** 
 177:src/complex.c **** 	const int save = setComplexContext();
 178:src/complex.c **** 	dn_multiply(&x.n, a, c);
 179:src/complex.c **** 	dn_multiply(&y.n, b, d);
 180:src/complex.c **** 
 181:src/complex.c **** 	complexResult(rx, ry, &x, &y, save);
 182:src/complex.c **** }
 183:src/complex.c **** 
 184:src/complex.c **** // (a + i b) ./ (c + i d) = (a / c) + i (b / d)
 185:src/complex.c **** void cpx_dotdiv(decNumber *rx, decNumber *ry,
 186:src/complex.c **** 		const decNumber *a, const decNumber *b,
 187:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 188:src/complex.c **** 	complexNumber x, y;
 189:src/complex.c **** 
 190:src/complex.c **** 	const int save = setComplexContext();
 191:src/complex.c **** 	if (dn_eq0(c)) {
 192:src/complex.c **** 		dn_divide(&x.n, a, &const_1);
 193:src/complex.c **** 	}
 194:src/complex.c **** 	else {
 195:src/complex.c **** 		dn_divide(&x.n, a, c);
 196:src/complex.c **** 	}
 197:src/complex.c **** 	if (dn_eq0(d)) {
 198:src/complex.c **** 		dn_divide(&y.n, b, &const_1);
 199:src/complex.c **** 	}
 200:src/complex.c **** 	else {
 201:src/complex.c **** 		dn_divide(&y.n, b, d);
 202:src/complex.c **** 	}
 203:src/complex.c **** 
 204:src/complex.c **** 	complexResult(rx, ry, &x, &y, save);
 205:src/complex.c **** }
 206:src/complex.c **** 
 207:src/complex.c **** #endif
 208:src/complex.c **** 
 209:src/complex.c **** // (a + i b) / (c + i d) = (a*c + b*d) / (c*c + d*d) + i (b*c - a*d) / (c*c + d*d)
 210:src/complex.c **** void cmplxDivide(decNumber *rx, decNumber *ry,
 211:src/complex.c **** 		const decNumber *a, const decNumber *b,
 212:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 213:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 214:src/complex.c **** 
ARM GAS  /tmp/ccT3noyS.s 			page 7


 215:src/complex.c **** 	const int save = setComplexContext();
 216:src/complex.c **** 	dn_multiply(&t1.n, c, c);
 217:src/complex.c **** 	dn_multiply(&t2.n, d, d);
 218:src/complex.c **** 	dn_add(&den.n, &t1.n, &t2.n);
 219:src/complex.c **** 
 220:src/complex.c **** 	dn_multiply(&t3.n, a, c);
 221:src/complex.c **** 	dn_multiply(&t2.n, b, d);
 222:src/complex.c **** 	dn_add(&t1.n, &t3.n, &t2.n);
 223:src/complex.c **** 
 224:src/complex.c **** 	dn_multiply(&t4.n, b, c);
 225:src/complex.c **** 	dn_multiply(&t2.n, a, d);
 226:src/complex.c **** 	dn_subtract(&t3.n, &t4.n, &t2.n);
 227:src/complex.c **** 
 228:src/complex.c **** 	dn_divide(&t2.n, &t1.n, &den.n);
 229:src/complex.c **** 	dn_divide(&t4.n, &t3.n, &den.n);
 230:src/complex.c **** 
 231:src/complex.c **** 	complexResult(rx, ry, &t2, &t4, save);
 232:src/complex.c **** }
 233:src/complex.c **** 
 234:src/complex.c **** void cmplxArg(decNumber *arg, const decNumber *a, const decNumber *b) {
 235:src/complex.c **** 	do_atan2(arg, b, a);
 236:src/complex.c **** }
 237:src/complex.c **** 
 238:src/complex.c **** void cmplxR(decNumber *r, const decNumber *a, const decNumber *b) {
 239:src/complex.c **** 	complexNumber a2, b2, s;
 240:src/complex.c **** 
 241:src/complex.c **** 	dn_multiply(&a2.n, a, a);
 242:src/complex.c **** 	dn_multiply(&b2.n, b, b);
 243:src/complex.c **** 	dn_add(&s.n, &a2.n, &b2.n);
 244:src/complex.c **** 	dn_sqrt(r, &s.n);
 245:src/complex.c **** }
 246:src/complex.c **** 
 247:src/complex.c **** //void cmplxFromPolar(decNumber *x, decNumber *y, const decNumber *r, const decNumber *t) {
 248:src/complex.c **** //	decNumber s, c
 249:src/complex.c **** 
 250:src/complex.c **** //	dn_sincos(t, &s, &c);
 251:src/complex.c **** //	dn_multiply(x, r, &c);
 252:src/complex.c **** //	dn_multiply(y, r, &s);
 253:src/complex.c **** //}
 254:src/complex.c **** 
 255:src/complex.c **** void cmplxToPolar(decNumber *r, decNumber *t, const decNumber *x, const decNumber *y) {
 256:src/complex.c **** 	do_atan2(t, y, x);
 257:src/complex.c **** 	cmplxR(r, y, x);
 258:src/complex.c **** }
 259:src/complex.c **** 
 260:src/complex.c **** 
 261:src/complex.c **** 
 262:src/complex.c **** #ifndef TINY_BUILD
 263:src/complex.c **** // ( a + i * b ) ^ r
 264:src/complex.c **** static void cmplxPowerReal(decNumber *rx, decNumber *ry,
 265:src/complex.c **** 		const decNumber *a, const decNumber *b,
 266:src/complex.c **** 		const decNumber *r) {
 267:src/complex.c **** 	cmplxPower(rx, ry, a, b, r, &const_0);
 268:src/complex.c **** }
 269:src/complex.c **** #endif
 270:src/complex.c **** 
 271:src/complex.c **** // a ^ b = e ^ (b ln(a))
ARM GAS  /tmp/ccT3noyS.s 			page 8


 272:src/complex.c **** void cmplxPower(decNumber *rx, decNumber *ry,
 273:src/complex.c **** 		const decNumber *a, const decNumber *b,
 274:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 275:src/complex.c **** #ifndef TINY_BUILD
 276:src/complex.c **** 	decNumber e1, e2, f1, f2;
 277:src/complex.c **** 
 278:src/complex.c **** 	if (dn_eq0(a) && dn_eq0(b)) {
 279:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 280:src/complex.c **** 			cmplx_NaN(rx, ry);
 281:src/complex.c **** 		else {
 282:src/complex.c **** 			decNumberZero(rx);
 283:src/complex.c **** 			decNumberZero(ry);
 284:src/complex.c **** 		}
 285:src/complex.c **** 	} else {
 286:src/complex.c **** 		cmplxLn(&e1, &e2, a, b);
 287:src/complex.c **** 		cmplxMultiply(&f1, &f2, &e1, &e2, c, d);
 288:src/complex.c **** 		cmplxExp(rx, ry, &f1, &f2);
 289:src/complex.c **** 	}
 290:src/complex.c **** #endif
 291:src/complex.c **** }
 292:src/complex.c **** 
 293:src/complex.c **** #ifdef INCLUDE_XROOT
 294:src/complex.c **** // (a, b) ^ 1 / (c, d)
 295:src/complex.c **** void cmplxXRoot(decNumber *rx, decNumber *ry,
 296:src/complex.c **** 		const decNumber *a, const decNumber *b,
 297:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 298:src/complex.c **** 	decNumber g, h;
 299:src/complex.c **** 
 300:src/complex.c **** 	cmplxRecip(&g, &h, c, d);
 301:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 302:src/complex.c **** }
 303:src/complex.c **** #endif
 304:src/complex.c **** 
 305:src/complex.c **** 
 306:src/complex.c **** // abs(a + i b) = sqrt(a^2 + b^2)
 307:src/complex.c **** void cmplxAbs(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 308:src/complex.c **** 	cmplxR(rx, a, b);
 309:src/complex.c **** 	decNumberZero(ry);
 310:src/complex.c **** }
 311:src/complex.c **** 
 312:src/complex.c **** // - (a + i b) = - a - i b
 313:src/complex.c **** void cmplxMinus(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 314:src/complex.c **** 	dn_minus(rx, a);
 315:src/complex.c **** 	dn_minus(ry, b);
 316:src/complex.c **** }
 317:src/complex.c **** 
 318:src/complex.c **** // 1 / (c + i d) = c / (c*c + d*d) + i (- d) / (c*c + d*d)
 319:src/complex.c **** void cmplxRecip(decNumber *rx, decNumber *ry, const decNumber *c, const decNumber *d) {
 320:src/complex.c **** #ifndef TINY_BUILD
 321:src/complex.c **** 	complexNumber t, u, v, den;
 322:src/complex.c **** 
 323:src/complex.c **** 	const int save = setComplexContext();
 324:src/complex.c **** 
 325:src/complex.c **** 	dn_multiply(&u.n, c, c);
 326:src/complex.c **** 	dn_multiply(&v.n, d, d);
 327:src/complex.c **** 	dn_add(&den.n, &u.n, &v.n);
 328:src/complex.c **** 	dn_minus(&t.n, d);
ARM GAS  /tmp/ccT3noyS.s 			page 9


 329:src/complex.c **** 
 330:src/complex.c **** 	dn_divide(&u.n, c, &den.n);
 331:src/complex.c **** 	dn_divide(&v.n, &t.n, &den.n);
 332:src/complex.c **** 
 333:src/complex.c **** 	complexResult(rx, ry, &u, &v, save);
 334:src/complex.c **** #endif
 335:src/complex.c **** }
 336:src/complex.c **** 
 337:src/complex.c **** // sqrt(a + i b) = +- (sqrt(r + a) + i sqrt(r - a) sign(b)) sqrt(2) / 2
 338:src/complex.c **** //		where r = sqrt(a^2 + b^2)
 339:src/complex.c **** void cmplxSqrt(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 340:src/complex.c **** #ifndef TINY_BUILD
 341:src/complex.c **** 	complexNumber fac, t1, u, v, x, y;
 342:src/complex.c **** 
 343:src/complex.c **** 	if (dn_eq0(b)) {
 344:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 345:src/complex.c **** 		if (decNumberIsNegative(a)) {
 346:src/complex.c **** 			dn_minus(&t1.n, a);
 347:src/complex.c **** 			dn_sqrt(ry, &t1.n);
 348:src/complex.c **** 			decNumberZero(rx);
 349:src/complex.c **** 		} else {
 350:src/complex.c **** 			dn_sqrt(rx, a);
 351:src/complex.c **** 			decNumberZero(ry);
 352:src/complex.c **** 		}
 353:src/complex.c **** 		return;
 354:src/complex.c **** 	} else {
 355:src/complex.c **** 		const int save = setComplexContext();
 356:src/complex.c **** 		cmplxR(&fac.n, a, b);
 357:src/complex.c **** 
 358:src/complex.c **** 		dn_subtract(&v.n, &fac.n, a);
 359:src/complex.c **** 		dn_sqrt(&u.n, &v.n);
 360:src/complex.c **** 		dn_add(&v.n, &fac.n, a);
 361:src/complex.c **** 		if (decNumberIsNegative(b)) {
 362:src/complex.c **** 			dn_minus(&t1.n, &u.n);
 363:src/complex.c **** 			dn_multiply(&y.n, &t1.n, &const_root2on2);
 364:src/complex.c **** 		} else
 365:src/complex.c **** 			dn_multiply(&y.n, &u.n, &const_root2on2);
 366:src/complex.c **** 
 367:src/complex.c **** 		dn_sqrt(&t1.n, &v.n);
 368:src/complex.c **** 		dn_multiply(&x.n, &t1.n, &const_root2on2);
 369:src/complex.c **** 
 370:src/complex.c **** 		complexResult(rx, ry, &x, &y, save);
 371:src/complex.c **** 	}
 372:src/complex.c **** #endif
 373:src/complex.c **** }
 374:src/complex.c **** 
 375:src/complex.c **** // Fairly naive implementation...
 376:src/complex.c **** void cmplxCubeRoot(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 377:src/complex.c **** #ifndef TINY_BUILD
 378:src/complex.c **** 	decNumber t;
 379:src/complex.c **** 
 380:src/complex.c **** 	decNumberRecip(&t, &const_3);
 381:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 382:src/complex.c **** #endif
 383:src/complex.c **** }
 384:src/complex.c **** 
 385:src/complex.c **** 
ARM GAS  /tmp/ccT3noyS.s 			page 10


 386:src/complex.c **** // sin(a + i b) = sin(a) cosh(b) + i cos(a) sinh(b)
 387:src/complex.c **** // cos(a + i b) = cos(a) cosh(b) - i sin(a) sinh(b)
 388:src/complex.c **** static void cmplx_sincos(const decNumber *a, const decNumber *b, decNumber *sx, decNumber *sy, decN
 128              		.loc 1 388 126 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 8, pretend = 0, frame = 144
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 389:src/complex.c **** 	decNumber sa, ca, sb, cb;
 132              		.loc 1 389 2 view .LVU21
 390:src/complex.c **** 
 391:src/complex.c **** 	if (dn_eq0(a) && decNumberIsInfinite(b)) {
 133              		.loc 1 391 2 view .LVU22
 388:src/complex.c **** 	decNumber sa, ca, sb, cb;
 134              		.loc 1 388 126 is_stmt 0 view .LVU23
 135 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 136              		.cfi_def_cfa_offset 20
 137              		.cfi_offset 4, -20
 138              		.cfi_offset 5, -16
 139              		.cfi_offset 6, -12
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 A5B0     		sub	sp, sp, #148
 143              		.cfi_def_cfa_offset 168
 388:src/complex.c **** 	decNumber sa, ca, sb, cb;
 144              		.loc 1 388 126 view .LVU24
 145 0004 0C46     		mov	r4, r1
 146 0006 1646     		mov	r6, r2
 147 0008 1D46     		mov	r5, r3
 148 000a 0746     		mov	r7, r0
 149              		.loc 1 391 6 view .LVU25
 150 000c FFF7FEFF 		bl	dn_eq0
 151              	.LVL13:
 152              		.loc 1 391 5 view .LVU26
 153 0010 10B1     		cbz	r0, .L5
 154              		.loc 1 391 16 discriminator 1 view .LVU27
 155 0012 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 156 0014 5B06     		lsls	r3, r3, #25
 157 0016 23D4     		bmi	.L14
 158              	.L5:
 392:src/complex.c **** 		decNumberZero(sx);
 393:src/complex.c **** 		decNumberCopy(sy, b);
 394:src/complex.c **** 		set_inf(cx);
 395:src/complex.c **** 		decNumberZero(cy);
 396:src/complex.c **** 	} else {
 397:src/complex.c **** 		dn_sincos(a, &sa, &ca);
 159              		.loc 1 397 3 is_stmt 1 view .LVU28
 160 0018 3846     		mov	r0, r7
 161 001a 09AA     		add	r2, sp, #36
 162 001c 6946     		mov	r1, sp
 163 001e FFF7FEFF 		bl	dn_sincos
 164              	.LVL14:
 398:src/complex.c **** 		dn_sinhcosh(b, &sb, &cb);
 165              		.loc 1 398 3 view .LVU29
 166 0022 2046     		mov	r0, r4
 167 0024 1BAA     		add	r2, sp, #108
 168 0026 12A9     		add	r1, sp, #72
 169 0028 FFF7FEFF 		bl	dn_sinhcosh
ARM GAS  /tmp/ccT3noyS.s 			page 11


 170              	.LVL15:
 399:src/complex.c **** 
 400:src/complex.c **** 		dn_multiply(sx, &sa, &cb);
 171              		.loc 1 400 3 view .LVU30
 172 002c 1BAA     		add	r2, sp, #108
 173 002e 6946     		mov	r1, sp
 174 0030 3046     		mov	r0, r6
 175 0032 FFF7FEFF 		bl	dn_multiply
 176              	.LVL16:
 401:src/complex.c **** 		dn_multiply(sy, &ca, &sb);
 177              		.loc 1 401 3 view .LVU31
 178 0036 12AA     		add	r2, sp, #72
 179 0038 09A9     		add	r1, sp, #36
 180 003a 2846     		mov	r0, r5
 181 003c FFF7FEFF 		bl	dn_multiply
 182              	.LVL17:
 402:src/complex.c **** 		dn_multiply(cx, &ca, &cb);
 183              		.loc 1 402 3 view .LVU32
 184 0040 1BAA     		add	r2, sp, #108
 185 0042 09A9     		add	r1, sp, #36
 186 0044 2A98     		ldr	r0, [sp, #168]
 187 0046 FFF7FEFF 		bl	dn_multiply
 188              	.LVL18:
 403:src/complex.c **** 		dn_multiply(&ca, &sa, &sb);
 189              		.loc 1 403 3 view .LVU33
 190 004a 12AA     		add	r2, sp, #72
 191 004c 6946     		mov	r1, sp
 192 004e 09A8     		add	r0, sp, #36
 193 0050 FFF7FEFF 		bl	dn_multiply
 194              	.LVL19:
 404:src/complex.c **** 		dn_minus(cy, &ca);
 195              		.loc 1 404 3 view .LVU34
 196 0054 2B98     		ldr	r0, [sp, #172]
 197 0056 09A9     		add	r1, sp, #36
 198 0058 FFF7FEFF 		bl	dn_minus
 199              	.LVL20:
 405:src/complex.c **** 	}
 406:src/complex.c **** }
 200              		.loc 1 406 1 is_stmt 0 view .LVU35
 201 005c 25B0     		add	sp, sp, #148
 202              		.cfi_remember_state
 203              		.cfi_def_cfa_offset 20
 204              		@ sp needed
 205 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 206              	.LVL21:
 207              	.L14:
 208              		.cfi_restore_state
 392:src/complex.c **** 		decNumberCopy(sy, b);
 209              		.loc 1 392 3 is_stmt 1 view .LVU36
 210 0060 3046     		mov	r0, r6
 211 0062 FFF7FEFF 		bl	decNumberZero
 212              	.LVL22:
 393:src/complex.c **** 		set_inf(cx);
 213              		.loc 1 393 3 view .LVU37
 214 0066 2146     		mov	r1, r4
 215 0068 2846     		mov	r0, r5
 216 006a FFF7FEFF 		bl	decNumberCopy
ARM GAS  /tmp/ccT3noyS.s 			page 12


 217              	.LVL23:
 394:src/complex.c **** 		decNumberZero(cy);
 218              		.loc 1 394 3 view .LVU38
 219 006e 2A98     		ldr	r0, [sp, #168]
 220 0070 FFF7FEFF 		bl	set_inf
 221              	.LVL24:
 395:src/complex.c **** 	} else {
 222              		.loc 1 395 3 view .LVU39
 223 0074 2B98     		ldr	r0, [sp, #172]
 224 0076 FFF7FEFF 		bl	decNumberZero
 225              	.LVL25:
 226              		.loc 1 406 1 is_stmt 0 view .LVU40
 227 007a 25B0     		add	sp, sp, #148
 228              		.cfi_def_cfa_offset 20
 229              		@ sp needed
 230 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 231              		.loc 1 406 1 view .LVU41
 232              		.cfi_endproc
 233              	.LFE23:
 235 007e 00BF     		.section	.text.cmplx_sinhcosh,"ax",%progbits
 236              		.align	1
 237              		.p2align 2,,3
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	cmplx_sinhcosh:
 244              	.LVL26:
 245              	.LFB28:
 407:src/complex.c **** 
 408:src/complex.c **** // sin(a + i b) = sin(a) cosh(b) + i cos(a) sinh(b)
 409:src/complex.c **** void cmplxSin(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 410:src/complex.c **** 	decNumber z;
 411:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 412:src/complex.c **** }
 413:src/complex.c **** 
 414:src/complex.c **** // cos(a + i b) = cos(a) cosh(b) - i sin(a) sinh(b)
 415:src/complex.c **** void cmplxCos(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 416:src/complex.c **** 	decNumber z;
 417:src/complex.c **** 	cmplx_sincos(a, b, &z, &z, rx, ry);
 418:src/complex.c **** }
 419:src/complex.c **** 
 420:src/complex.c **** // tan(a + i b) = (sin(a) cosh(b) + i cos(a) sinh(b)) / (cos(a) cosh(b) - i sin(a) sinh(b))
 421:src/complex.c **** void cmplxTan(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 422:src/complex.c **** #ifndef TINY_BUILD
 423:src/complex.c **** 	decNumber c1, c2, s1, s2;
 424:src/complex.c **** 
 425:src/complex.c **** 	if (dn_eq0(a) && decNumberIsInfinite(b)) {
 426:src/complex.c **** 		decNumberZero(rx);
 427:src/complex.c **** 		if (decNumberIsNegative(b))
 428:src/complex.c **** 			dn__1(ry);
 429:src/complex.c **** 		else
 430:src/complex.c **** 			dn_1(ry);
 431:src/complex.c **** 	} else {
 432:src/complex.c **** 		cmplx_sincos(a, b, &s1, &s2, &c1, &c2);
 433:src/complex.c **** 		cmplxDivide(rx, ry, &s1, &s2, &c1, &c2);
 434:src/complex.c **** 	}
ARM GAS  /tmp/ccT3noyS.s 			page 13


 435:src/complex.c **** #endif
 436:src/complex.c **** }
 437:src/complex.c **** 
 438:src/complex.c **** 
 439:src/complex.c **** // sinc(a + i b) = sin(a + i b) / (a + i b)
 440:src/complex.c **** void cmplxSinc(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 441:src/complex.c **** #ifndef TINY_BUILD
 442:src/complex.c **** 	decNumber s1, s2;
 443:src/complex.c **** 
 444:src/complex.c **** 	if (dn_eq0(b)) {
 445:src/complex.c **** 		decNumberSinc(rx, a);
 446:src/complex.c **** 		decNumberZero(ry);
 447:src/complex.c **** 	} else {
 448:src/complex.c **** 		cmplxSin(&s1, &s2, a, b);
 449:src/complex.c **** 		cmplxDivide(rx, ry, &s1, &s2, a, b);
 450:src/complex.c **** 	}
 451:src/complex.c **** #endif
 452:src/complex.c **** }
 453:src/complex.c **** 
 454:src/complex.c **** // sinh(a + i b) = sinh(a) cos(b) + i cosh(a) sin(b)
 455:src/complex.c **** // cosh(a + i b) = cosh(a) cos(b) + i sinh(a) sin(b)
 456:src/complex.c **** static void cmplx_sinhcosh(const decNumber *a, const decNumber *b, decNumber *sx, decNumber *sy, de
 246              		.loc 1 456 128 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 8, pretend = 0, frame = 144
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 457:src/complex.c **** 	decNumber sa, ca, sb, cb;
 250              		.loc 1 457 2 view .LVU43
 458:src/complex.c **** 
 459:src/complex.c **** 	dn_sinhcosh(a, &sa, &ca);
 251              		.loc 1 459 2 view .LVU44
 456:src/complex.c **** 	decNumber sa, ca, sb, cb;
 252              		.loc 1 456 128 is_stmt 0 view .LVU45
 253 0000 70B5     		push	{r4, r5, r6, lr}
 254              		.cfi_def_cfa_offset 16
 255              		.cfi_offset 4, -16
 256              		.cfi_offset 5, -12
 257              		.cfi_offset 6, -8
 258              		.cfi_offset 14, -4
 259 0002 A4B0     		sub	sp, sp, #144
 260              		.cfi_def_cfa_offset 160
 456:src/complex.c **** 	decNumber sa, ca, sb, cb;
 261              		.loc 1 456 128 view .LVU46
 262 0004 0E46     		mov	r6, r1
 263 0006 1546     		mov	r5, r2
 264              		.loc 1 459 2 view .LVU47
 265 0008 6946     		mov	r1, sp
 266              	.LVL27:
 267              		.loc 1 459 2 view .LVU48
 268 000a 09AA     		add	r2, sp, #36
 269              	.LVL28:
 456:src/complex.c **** 	decNumber sa, ca, sb, cb;
 270              		.loc 1 456 128 view .LVU49
 271 000c 1C46     		mov	r4, r3
 272              		.loc 1 459 2 view .LVU50
 273 000e FFF7FEFF 		bl	dn_sinhcosh
 274              	.LVL29:
ARM GAS  /tmp/ccT3noyS.s 			page 14


 460:src/complex.c **** 	dn_sincos(b, &sb, &cb);
 275              		.loc 1 460 2 is_stmt 1 view .LVU51
 276 0012 3046     		mov	r0, r6
 277 0014 1BAA     		add	r2, sp, #108
 278 0016 12A9     		add	r1, sp, #72
 279 0018 FFF7FEFF 		bl	dn_sincos
 280              	.LVL30:
 461:src/complex.c **** 
 462:src/complex.c **** 	dn_multiply(sx, &sa, &cb);
 281              		.loc 1 462 2 view .LVU52
 282 001c 1BAA     		add	r2, sp, #108
 283 001e 6946     		mov	r1, sp
 284 0020 2846     		mov	r0, r5
 285 0022 FFF7FEFF 		bl	dn_multiply
 286              	.LVL31:
 463:src/complex.c **** 	dn_multiply(sy, &ca, &sb);
 287              		.loc 1 463 2 view .LVU53
 288 0026 12AA     		add	r2, sp, #72
 289 0028 09A9     		add	r1, sp, #36
 290 002a 2046     		mov	r0, r4
 291 002c FFF7FEFF 		bl	dn_multiply
 292              	.LVL32:
 464:src/complex.c **** 	dn_multiply(cx, &ca, &cb);
 293              		.loc 1 464 2 view .LVU54
 294 0030 1BAA     		add	r2, sp, #108
 295 0032 09A9     		add	r1, sp, #36
 296 0034 2898     		ldr	r0, [sp, #160]
 297 0036 FFF7FEFF 		bl	dn_multiply
 298              	.LVL33:
 465:src/complex.c **** 	dn_multiply(cy, &sa, &sb);
 299              		.loc 1 465 2 view .LVU55
 300 003a 2998     		ldr	r0, [sp, #164]
 301 003c 12AA     		add	r2, sp, #72
 302 003e 6946     		mov	r1, sp
 303 0040 FFF7FEFF 		bl	dn_multiply
 304              	.LVL34:
 466:src/complex.c **** }
 305              		.loc 1 466 1 is_stmt 0 view .LVU56
 306 0044 24B0     		add	sp, sp, #144
 307              		.cfi_def_cfa_offset 16
 308              		@ sp needed
 309 0046 70BD     		pop	{r4, r5, r6, pc}
 310              		.loc 1 466 1 view .LVU57
 311              		.cfi_endproc
 312              	.LFE28:
 314              		.section	.text.cmplx_NaN,"ax",%progbits
 315              		.align	1
 316              		.p2align 2,,3
 317              		.global	cmplx_NaN
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	cmplx_NaN:
 324              	.LVL35:
 325              	.LFB3:
  75:src/complex.c **** 	set_NaN(x);
ARM GAS  /tmp/ccT3noyS.s 			page 15


 326              		.loc 1 75 44 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
  76:src/complex.c **** 	set_NaN(y);
 330              		.loc 1 76 2 view .LVU59
  75:src/complex.c **** 	set_NaN(x);
 331              		.loc 1 75 44 is_stmt 0 view .LVU60
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
  75:src/complex.c **** 	set_NaN(x);
 336              		.loc 1 75 44 view .LVU61
 337 0002 0C46     		mov	r4, r1
  76:src/complex.c **** 	set_NaN(y);
 338              		.loc 1 76 2 view .LVU62
 339 0004 FFF7FEFF 		bl	set_NaN
 340              	.LVL36:
  77:src/complex.c **** }
 341              		.loc 1 77 2 is_stmt 1 view .LVU63
 342 0008 2046     		mov	r0, r4
  78:src/complex.c **** 
 343              		.loc 1 78 1 is_stmt 0 view .LVU64
 344 000a BDE81040 		pop	{r4, lr}
 345              		.cfi_restore 14
 346              		.cfi_restore 4
 347              		.cfi_def_cfa_offset 0
 348              	.LVL37:
  77:src/complex.c **** }
 349              		.loc 1 77 2 view .LVU65
 350 000e FFF7FEBF 		b	set_NaN
 351              	.LVL38:
  77:src/complex.c **** }
 352              		.loc 1 77 2 view .LVU66
 353              		.cfi_endproc
 354              	.LFE3:
 356 0012 00BF     		.section	.text.cmplxAdd,"ax",%progbits
 357              		.align	1
 358              		.p2align 2,,3
 359              		.global	cmplxAdd
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
 365              	cmplxAdd:
 366              	.LVL39:
 367              	.LFB6:
 138:src/complex.c **** 	dn_add(rx, a, c);
 368              		.loc 1 138 43 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 8, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 139:src/complex.c **** 	dn_add(ry, b, d);
 372              		.loc 1 139 2 view .LVU68
 138:src/complex.c **** 	dn_add(rx, a, c);
 373              		.loc 1 138 43 is_stmt 0 view .LVU69
ARM GAS  /tmp/ccT3noyS.s 			page 16


 374 0000 70B5     		push	{r4, r5, r6, lr}
 375              		.cfi_def_cfa_offset 16
 376              		.cfi_offset 4, -16
 377              		.cfi_offset 5, -12
 378              		.cfi_offset 6, -8
 379              		.cfi_offset 14, -4
 138:src/complex.c **** 	dn_add(rx, a, c);
 380              		.loc 1 138 43 view .LVU70
 381 0002 0C46     		mov	r4, r1
 139:src/complex.c **** 	dn_add(ry, b, d);
 382              		.loc 1 139 2 view .LVU71
 383 0004 1146     		mov	r1, r2
 384              	.LVL40:
 139:src/complex.c **** 	dn_add(ry, b, d);
 385              		.loc 1 139 2 view .LVU72
 386 0006 DDE90426 		ldrd	r2, r6, [sp, #16]
 387              	.LVL41:
 138:src/complex.c **** 	dn_add(rx, a, c);
 388              		.loc 1 138 43 view .LVU73
 389 000a 1D46     		mov	r5, r3
 139:src/complex.c **** 	dn_add(ry, b, d);
 390              		.loc 1 139 2 view .LVU74
 391 000c FFF7FEFF 		bl	dn_add
 392              	.LVL42:
 140:src/complex.c **** }
 393              		.loc 1 140 2 is_stmt 1 view .LVU75
 394 0010 3246     		mov	r2, r6
 395 0012 2946     		mov	r1, r5
 396 0014 2046     		mov	r0, r4
 141:src/complex.c **** 
 397              		.loc 1 141 1 is_stmt 0 view .LVU76
 398 0016 BDE87040 		pop	{r4, r5, r6, lr}
 399              		.cfi_restore 14
 400              		.cfi_restore 6
 401              		.cfi_restore 5
 402              		.cfi_restore 4
 403              		.cfi_def_cfa_offset 0
 404              	.LVL43:
 140:src/complex.c **** }
 405              		.loc 1 140 2 view .LVU77
 406 001a FFF7FEBF 		b	dn_add
 407              	.LVL44:
 140:src/complex.c **** }
 408              		.loc 1 140 2 view .LVU78
 409              		.cfi_endproc
 410              	.LFE6:
 412 001e 00BF     		.section	.text.cmplxSubtract,"ax",%progbits
 413              		.align	1
 414              		.p2align 2,,3
 415              		.global	cmplxSubtract
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv4-sp-d16
 421              	cmplxSubtract:
 422              	.LVL45:
 423              	.LFB7:
ARM GAS  /tmp/ccT3noyS.s 			page 17


 146:src/complex.c **** 	dn_subtract(rx, a, c);
 424              		.loc 1 146 43 is_stmt 1 view -0
 425              		.cfi_startproc
 426              		@ args = 8, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 428              		.loc 1 147 2 view .LVU80
 146:src/complex.c **** 	dn_subtract(rx, a, c);
 429              		.loc 1 146 43 is_stmt 0 view .LVU81
 430 0000 70B5     		push	{r4, r5, r6, lr}
 431              		.cfi_def_cfa_offset 16
 432              		.cfi_offset 4, -16
 433              		.cfi_offset 5, -12
 434              		.cfi_offset 6, -8
 435              		.cfi_offset 14, -4
 146:src/complex.c **** 	dn_subtract(rx, a, c);
 436              		.loc 1 146 43 view .LVU82
 437 0002 0C46     		mov	r4, r1
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 438              		.loc 1 147 2 view .LVU83
 439 0004 1146     		mov	r1, r2
 440              	.LVL46:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 441              		.loc 1 147 2 view .LVU84
 442 0006 DDE90426 		ldrd	r2, r6, [sp, #16]
 443              	.LVL47:
 146:src/complex.c **** 	dn_subtract(rx, a, c);
 444              		.loc 1 146 43 view .LVU85
 445 000a 1D46     		mov	r5, r3
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 446              		.loc 1 147 2 view .LVU86
 447 000c FFF7FEFF 		bl	dn_subtract
 448              	.LVL48:
 148:src/complex.c **** }
 449              		.loc 1 148 2 is_stmt 1 view .LVU87
 450 0010 3246     		mov	r2, r6
 451 0012 2946     		mov	r1, r5
 452 0014 2046     		mov	r0, r4
 149:src/complex.c **** 
 453              		.loc 1 149 1 is_stmt 0 view .LVU88
 454 0016 BDE87040 		pop	{r4, r5, r6, lr}
 455              		.cfi_restore 14
 456              		.cfi_restore 6
 457              		.cfi_restore 5
 458              		.cfi_restore 4
 459              		.cfi_def_cfa_offset 0
 460              	.LVL49:
 148:src/complex.c **** }
 461              		.loc 1 148 2 view .LVU89
 462 001a FFF7FEBF 		b	dn_subtract
 463              	.LVL50:
 148:src/complex.c **** }
 464              		.loc 1 148 2 view .LVU90
 465              		.cfi_endproc
 466              	.LFE7:
 468 001e 00BF     		.section	.text.cmplxMultiply,"ax",%progbits
 469              		.align	1
ARM GAS  /tmp/ccT3noyS.s 			page 18


 470              		.p2align 2,,3
 471              		.global	cmplxMultiply
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu fpv4-sp-d16
 477              	cmplxMultiply:
 478              	.LVL51:
 479              	.LFB8:
 154:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 480              		.loc 1 154 43 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 8, pretend = 0, frame = 360
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 155:src/complex.c **** 
 484              		.loc 1 155 2 view .LVU92
 157:src/complex.c **** 	dn_multiply(&t1.n, a, c);
 485              		.loc 1 157 2 view .LVU93
 486              	.LBB82:
 487              	.LBI82:
  56:src/complex.c **** 	int digits = Ctx.digits;
 488              		.loc 1 56 12 view .LVU94
 489              	.LBB83:
  57:src/complex.c **** 	if (is_dblmode())
 490              		.loc 1 57 2 view .LVU95
 491              	.LBE83:
 492              	.LBE82:
 154:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 493              		.loc 1 154 43 is_stmt 0 view .LVU96
 494 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 495              		.cfi_def_cfa_offset 36
 496              		.cfi_offset 4, -36
 497              		.cfi_offset 5, -32
 498              		.cfi_offset 6, -28
 499              		.cfi_offset 7, -24
 500              		.cfi_offset 8, -20
 501              		.cfi_offset 9, -16
 502              		.cfi_offset 10, -12
 503              		.cfi_offset 11, -8
 504              		.cfi_offset 14, -4
 505              	.LBB87:
 506              	.LBB84:
  57:src/complex.c **** 	if (is_dblmode())
 507              		.loc 1 57 6 view .LVU97
 508 0004 DFF87880 		ldr	r8, .L29
 509              	.LBE84:
 510              	.LBE87:
 154:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 511              		.loc 1 154 43 view .LVU98
 512 0008 DBB0     		sub	sp, sp, #364
 513              		.cfi_def_cfa_offset 400
 514              	.LBB88:
 515              	.LBB85:
  57:src/complex.c **** 	if (is_dblmode())
 516              		.loc 1 57 6 view .LVU99
 517 000a D8F800B0 		ldr	fp, [r8]
 518              	.LVL52:
ARM GAS  /tmp/ccT3noyS.s 			page 19


  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 519              		.loc 1 58 2 is_stmt 1 view .LVU100
 520              	.LBE85:
 521              	.LBE88:
 154:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 522              		.loc 1 154 43 is_stmt 0 view .LVU101
 523 000e DDF89091 		ldr	r9, [sp, #400]
 524 0012 DDF894A1 		ldr	r10, [sp, #404]
 525 0016 0746     		mov	r7, r0
 526 0018 0E46     		mov	r6, r1
 527 001a 1546     		mov	r5, r2
 528 001c 1C46     		mov	r4, r3
 529              	.LBB89:
 530              	.LBB86:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 531              		.loc 1 58 6 view .LVU102
 532 001e FFF7FEFF 		bl	is_dblmode
 533              	.LVL53:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 534              		.loc 1 58 5 view .LVU103
 535 0022 10B1     		cbz	r0, .L24
  59:src/complex.c **** 	return digits;
 536              		.loc 1 59 3 is_stmt 1 view .LVU104
  59:src/complex.c **** 	return digits;
 537              		.loc 1 59 14 is_stmt 0 view .LVU105
 538 0024 4823     		movs	r3, #72
 539 0026 C8F80030 		str	r3, [r8]
 540              	.L24:
  60:src/complex.c **** }
 541              		.loc 1 60 2 is_stmt 1 view .LVU106
 542              	.LVL54:
  60:src/complex.c **** }
 543              		.loc 1 60 2 is_stmt 0 view .LVU107
 544              	.LBE86:
 545              	.LBE89:
 158:src/complex.c **** 	dn_multiply(&t2.n, b, d);
 546              		.loc 1 158 2 is_stmt 1 view .LVU108
 547 002a 4A46     		mov	r2, r9
 548 002c 2946     		mov	r1, r5
 549 002e 6846     		mov	r0, sp
 550 0030 FFF7FEFF 		bl	dn_multiply
 551              	.LVL55:
 159:src/complex.c **** 	dn_subtract(&x.n, &t1.n, &t2.n);
 552              		.loc 1 159 2 view .LVU109
 553 0034 5246     		mov	r2, r10
 554 0036 2146     		mov	r1, r4
 555 0038 0FA8     		add	r0, sp, #60
 556 003a FFF7FEFF 		bl	dn_multiply
 557              	.LVL56:
 160:src/complex.c **** 
 558              		.loc 1 160 2 view .LVU110
 559 003e 0FAA     		add	r2, sp, #60
 560 0040 6946     		mov	r1, sp
 561 0042 3CA8     		add	r0, sp, #240
 562 0044 FFF7FEFF 		bl	dn_subtract
 563              	.LVL57:
 162:src/complex.c **** 	dn_multiply(&u2.n, b, c);
ARM GAS  /tmp/ccT3noyS.s 			page 20


 564              		.loc 1 162 2 view .LVU111
 565 0048 5246     		mov	r2, r10
 566 004a 2946     		mov	r1, r5
 567 004c 1EA8     		add	r0, sp, #120
 568 004e FFF7FEFF 		bl	dn_multiply
 569              	.LVL58:
 163:src/complex.c **** 	dn_add(&y.n, &u1.n, &u2.n);
 570              		.loc 1 163 2 view .LVU112
 571 0052 4A46     		mov	r2, r9
 572 0054 2146     		mov	r1, r4
 573 0056 2DA8     		add	r0, sp, #180
 574 0058 FFF7FEFF 		bl	dn_multiply
 575              	.LVL59:
 164:src/complex.c **** 
 576              		.loc 1 164 2 view .LVU113
 577 005c 2DAA     		add	r2, sp, #180
 578 005e 1EA9     		add	r1, sp, #120
 579 0060 4BA8     		add	r0, sp, #300
 580 0062 FFF7FEFF 		bl	dn_add
 581              	.LVL60:
 166:src/complex.c **** }
 582              		.loc 1 166 2 view .LVU114
 583              	.LBB90:
 584              	.LBI90:
  67:src/complex.c **** 	resetComplexContext(saved);
 585              		.loc 1 67 13 view .LVU115
 586              	.LBB91:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 587              		.loc 1 68 2 view .LVU116
 588              	.LBB92:
 589              	.LBI92:
  63:src/complex.c **** 	Ctx.digits = x;
 590              		.loc 1 63 13 view .LVU117
 591              	.LBB93:
  64:src/complex.c **** }
 592              		.loc 1 64 2 view .LVU118
 593              	.LBE93:
 594              	.LBE92:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 595              		.loc 1 69 2 is_stmt 0 view .LVU119
 596 0066 3CA9     		add	r1, sp, #240
 597              	.LVL61:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 598              		.loc 1 69 2 view .LVU120
 599 0068 3846     		mov	r0, r7
 600              	.LBB95:
 601              	.LBB94:
  64:src/complex.c **** }
 602              		.loc 1 64 13 view .LVU121
 603 006a C8F800B0 		str	fp, [r8]
 604              	.LVL62:
  64:src/complex.c **** }
 605              		.loc 1 64 13 view .LVU122
 606              	.LBE94:
 607              	.LBE95:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 608              		.loc 1 69 2 is_stmt 1 view .LVU123
ARM GAS  /tmp/ccT3noyS.s 			page 21


 609 006e FFF7FEFF 		bl	dn_plus
 610              	.LVL63:
  70:src/complex.c **** }
 611              		.loc 1 70 2 view .LVU124
 612 0072 4BA9     		add	r1, sp, #300
 613              	.LVL64:
  70:src/complex.c **** }
 614              		.loc 1 70 2 is_stmt 0 view .LVU125
 615 0074 3046     		mov	r0, r6
 616 0076 FFF7FEFF 		bl	dn_plus
 617              	.LVL65:
  70:src/complex.c **** }
 618              		.loc 1 70 2 view .LVU126
 619              	.LBE91:
 620              	.LBE90:
 167:src/complex.c **** 
 621              		.loc 1 167 1 view .LVU127
 622 007a 5BB0     		add	sp, sp, #364
 623              		.cfi_def_cfa_offset 36
 624              		@ sp needed
 625 007c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 626              	.LVL66:
 627              	.L30:
 167:src/complex.c **** 
 628              		.loc 1 167 1 view .LVU128
 629              		.align	2
 630              	.L29:
 631 0080 00000000 		.word	Ctx
 632              		.cfi_endproc
 633              	.LFE8:
 635              		.section	.text.cpx_dot,"ax",%progbits
 636              		.align	1
 637              		.p2align 2,,3
 638              		.global	cpx_dot
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu fpv4-sp-d16
 644              	cpx_dot:
 645              	.LVL67:
 646              	.LFB9:
 174:src/complex.c **** 	complexNumber x, y;
 647              		.loc 1 174 43 is_stmt 1 view -0
 648              		.cfi_startproc
 649              		@ args = 8, pretend = 0, frame = 128
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 175:src/complex.c **** 
 651              		.loc 1 175 2 view .LVU130
 177:src/complex.c **** 	dn_multiply(&x.n, a, c);
 652              		.loc 1 177 2 view .LVU131
 653              	.LBB96:
 654              	.LBI96:
  56:src/complex.c **** 	int digits = Ctx.digits;
 655              		.loc 1 56 12 view .LVU132
 656              	.LBB97:
  57:src/complex.c **** 	if (is_dblmode())
 657              		.loc 1 57 2 view .LVU133
ARM GAS  /tmp/ccT3noyS.s 			page 22


 658              	.LBE97:
 659              	.LBE96:
 174:src/complex.c **** 	complexNumber x, y;
 660              		.loc 1 174 43 is_stmt 0 view .LVU134
 661 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 662              		.cfi_def_cfa_offset 24
 663              		.cfi_offset 4, -24
 664              		.cfi_offset 5, -20
 665              		.cfi_offset 6, -16
 666              		.cfi_offset 7, -12
 667              		.cfi_offset 8, -8
 668              		.cfi_offset 14, -4
 669              	.LBB101:
 670              	.LBB98:
  57:src/complex.c **** 	if (is_dblmode())
 671              		.loc 1 57 6 view .LVU135
 672 0004 114F     		ldr	r7, .L37
 673              	.LBE98:
 674              	.LBE101:
 174:src/complex.c **** 	complexNumber x, y;
 675              		.loc 1 174 43 view .LVU136
 676 0006 A0B0     		sub	sp, sp, #128
 677              		.cfi_def_cfa_offset 152
 174:src/complex.c **** 	complexNumber x, y;
 678              		.loc 1 174 43 view .LVU137
 679 0008 0C46     		mov	r4, r1
 680              	.LBB102:
 681              	.LBB99:
  57:src/complex.c **** 	if (is_dblmode())
 682              		.loc 1 57 6 view .LVU138
 683 000a D7F80080 		ldr	r8, [r7]
 684              	.LVL68:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 685              		.loc 1 58 2 is_stmt 1 view .LVU139
 686              	.LBE99:
 687              	.LBE102:
 174:src/complex.c **** 	complexNumber x, y;
 688              		.loc 1 174 43 is_stmt 0 view .LVU140
 689 000e 0192     		str	r2, [sp, #4]
 690 0010 0546     		mov	r5, r0
 691 0012 1E46     		mov	r6, r3
 692              	.LBB103:
 693              	.LBB100:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 694              		.loc 1 58 6 view .LVU141
 695 0014 FFF7FEFF 		bl	is_dblmode
 696              	.LVL69:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 697              		.loc 1 58 5 view .LVU142
 698 0018 0199     		ldr	r1, [sp, #4]
 699 001a 08B1     		cbz	r0, .L32
  59:src/complex.c **** 	return digits;
 700              		.loc 1 59 3 is_stmt 1 view .LVU143
  59:src/complex.c **** 	return digits;
 701              		.loc 1 59 14 is_stmt 0 view .LVU144
 702 001c 4823     		movs	r3, #72
 703 001e 3B60     		str	r3, [r7]
ARM GAS  /tmp/ccT3noyS.s 			page 23


 704              	.L32:
  60:src/complex.c **** }
 705              		.loc 1 60 2 is_stmt 1 view .LVU145
 706              	.LVL70:
  60:src/complex.c **** }
 707              		.loc 1 60 2 is_stmt 0 view .LVU146
 708              	.LBE100:
 709              	.LBE103:
 178:src/complex.c **** 	dn_multiply(&y.n, b, d);
 710              		.loc 1 178 2 is_stmt 1 view .LVU147
 711 0020 269A     		ldr	r2, [sp, #152]
 712 0022 02A8     		add	r0, sp, #8
 713 0024 FFF7FEFF 		bl	dn_multiply
 714              	.LVL71:
 179:src/complex.c **** 
 715              		.loc 1 179 2 view .LVU148
 716 0028 279A     		ldr	r2, [sp, #156]
 717 002a 3146     		mov	r1, r6
 718 002c 11A8     		add	r0, sp, #68
 719 002e FFF7FEFF 		bl	dn_multiply
 720              	.LVL72:
 181:src/complex.c **** }
 721              		.loc 1 181 2 view .LVU149
 722              	.LBB104:
 723              	.LBI104:
  67:src/complex.c **** 	resetComplexContext(saved);
 724              		.loc 1 67 13 view .LVU150
 725              	.LBB105:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 726              		.loc 1 68 2 view .LVU151
 727              	.LBB106:
 728              	.LBI106:
  63:src/complex.c **** 	Ctx.digits = x;
 729              		.loc 1 63 13 view .LVU152
 730              	.LBB107:
  64:src/complex.c **** }
 731              		.loc 1 64 2 view .LVU153
 732              	.LBE107:
 733              	.LBE106:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 734              		.loc 1 69 2 is_stmt 0 view .LVU154
 735 0032 02A9     		add	r1, sp, #8
 736              	.LVL73:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 737              		.loc 1 69 2 view .LVU155
 738 0034 2846     		mov	r0, r5
 739              	.LBB109:
 740              	.LBB108:
  64:src/complex.c **** }
 741              		.loc 1 64 13 view .LVU156
 742 0036 C7F80080 		str	r8, [r7]
 743              	.LVL74:
  64:src/complex.c **** }
 744              		.loc 1 64 13 view .LVU157
 745              	.LBE108:
 746              	.LBE109:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
ARM GAS  /tmp/ccT3noyS.s 			page 24


 747              		.loc 1 69 2 is_stmt 1 view .LVU158
 748 003a FFF7FEFF 		bl	dn_plus
 749              	.LVL75:
  70:src/complex.c **** }
 750              		.loc 1 70 2 view .LVU159
 751 003e 11A9     		add	r1, sp, #68
 752              	.LVL76:
  70:src/complex.c **** }
 753              		.loc 1 70 2 is_stmt 0 view .LVU160
 754 0040 2046     		mov	r0, r4
 755 0042 FFF7FEFF 		bl	dn_plus
 756              	.LVL77:
  70:src/complex.c **** }
 757              		.loc 1 70 2 view .LVU161
 758              	.LBE105:
 759              	.LBE104:
 182:src/complex.c **** 
 760              		.loc 1 182 1 view .LVU162
 761 0046 20B0     		add	sp, sp, #128
 762              		.cfi_def_cfa_offset 24
 763              		@ sp needed
 764 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 765              	.LVL78:
 766              	.L38:
 182:src/complex.c **** 
 767              		.loc 1 182 1 view .LVU163
 768              		.align	2
 769              	.L37:
 770 004c 00000000 		.word	Ctx
 771              		.cfi_endproc
 772              	.LFE9:
 774              		.section	.text.cpx_dotdiv,"ax",%progbits
 775              		.align	1
 776              		.p2align 2,,3
 777              		.global	cpx_dotdiv
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu fpv4-sp-d16
 783              	cpx_dotdiv:
 784              	.LVL79:
 785              	.LFB10:
 187:src/complex.c **** 	complexNumber x, y;
 786              		.loc 1 187 43 is_stmt 1 view -0
 787              		.cfi_startproc
 788              		@ args = 8, pretend = 0, frame = 128
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 188:src/complex.c **** 
 790              		.loc 1 188 2 view .LVU165
 190:src/complex.c **** 	if (dn_eq0(c)) {
 791              		.loc 1 190 2 view .LVU166
 792              	.LBB110:
 793              	.LBI110:
  56:src/complex.c **** 	int digits = Ctx.digits;
 794              		.loc 1 56 12 view .LVU167
 795              	.LBB111:
  57:src/complex.c **** 	if (is_dblmode())
ARM GAS  /tmp/ccT3noyS.s 			page 25


 796              		.loc 1 57 2 view .LVU168
 797              	.LBE111:
 798              	.LBE110:
 187:src/complex.c **** 	complexNumber x, y;
 799              		.loc 1 187 43 is_stmt 0 view .LVU169
 800 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 801              		.cfi_def_cfa_offset 36
 802              		.cfi_offset 4, -36
 803              		.cfi_offset 5, -32
 804              		.cfi_offset 6, -28
 805              		.cfi_offset 7, -24
 806              		.cfi_offset 8, -20
 807              		.cfi_offset 9, -16
 808              		.cfi_offset 10, -12
 809              		.cfi_offset 11, -8
 810              		.cfi_offset 14, -4
 811              	.LBB115:
 812              	.LBB112:
  57:src/complex.c **** 	if (is_dblmode())
 813              		.loc 1 57 6 view .LVU170
 814 0004 234F     		ldr	r7, .L50
 815              	.LBE112:
 816              	.LBE115:
 187:src/complex.c **** 	complexNumber x, y;
 817              		.loc 1 187 43 view .LVU171
 818 0006 A1B0     		sub	sp, sp, #132
 819              		.cfi_def_cfa_offset 168
 187:src/complex.c **** 	complexNumber x, y;
 820              		.loc 1 187 43 view .LVU172
 821 0008 0C46     		mov	r4, r1
 822 000a DDF8A8A0 		ldr	r10, [sp, #168]
 823              	.LBB116:
 824              	.LBB113:
  57:src/complex.c **** 	if (is_dblmode())
 825              		.loc 1 57 6 view .LVU173
 826 000e D7F800B0 		ldr	fp, [r7]
 827              	.LVL80:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 828              		.loc 1 58 2 is_stmt 1 view .LVU174
 829              	.LBE113:
 830              	.LBE116:
 187:src/complex.c **** 	complexNumber x, y;
 831              		.loc 1 187 43 is_stmt 0 view .LVU175
 832 0012 DDF8AC90 		ldr	r9, [sp, #172]
 833 0016 0192     		str	r2, [sp, #4]
 834 0018 0546     		mov	r5, r0
 835 001a 1E46     		mov	r6, r3
 836              	.LBB117:
 837              	.LBB114:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 838              		.loc 1 58 6 view .LVU176
 839 001c FFF7FEFF 		bl	is_dblmode
 840              	.LVL81:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 841              		.loc 1 58 5 view .LVU177
 842 0020 0199     		ldr	r1, [sp, #4]
 843 0022 08B1     		cbz	r0, .L40
ARM GAS  /tmp/ccT3noyS.s 			page 26


  59:src/complex.c **** 	return digits;
 844              		.loc 1 59 3 is_stmt 1 view .LVU178
  59:src/complex.c **** 	return digits;
 845              		.loc 1 59 14 is_stmt 0 view .LVU179
 846 0024 4823     		movs	r3, #72
 847 0026 3B60     		str	r3, [r7]
 848              	.L40:
  60:src/complex.c **** }
 849              		.loc 1 60 2 is_stmt 1 view .LVU180
 850              	.LVL82:
  60:src/complex.c **** }
 851              		.loc 1 60 2 is_stmt 0 view .LVU181
 852              	.LBE114:
 853              	.LBE117:
 191:src/complex.c **** 		dn_divide(&x.n, a, &const_1);
 854              		.loc 1 191 2 is_stmt 1 view .LVU182
 191:src/complex.c **** 		dn_divide(&x.n, a, &const_1);
 855              		.loc 1 191 6 is_stmt 0 view .LVU183
 856 0028 5046     		mov	r0, r10
 857 002a 0191     		str	r1, [sp, #4]
 858              	.LVL83:
 191:src/complex.c **** 		dn_divide(&x.n, a, &const_1);
 859              		.loc 1 191 6 view .LVU184
 860 002c FFF7FEFF 		bl	dn_eq0
 861              	.LVL84:
 192:src/complex.c **** 	}
 862              		.loc 1 192 3 view .LVU185
 863 0030 0DF10808 		add	r8, sp, #8
 191:src/complex.c **** 		dn_divide(&x.n, a, &const_1);
 864              		.loc 1 191 5 view .LVU186
 865 0034 0199     		ldr	r1, [sp, #4]
 866 0036 D8B1     		cbz	r0, .L41
 192:src/complex.c **** 	}
 867              		.loc 1 192 3 is_stmt 1 view .LVU187
 868 0038 174A     		ldr	r2, .L50+4
 869 003a 4046     		mov	r0, r8
 870 003c FFF7FEFF 		bl	dn_divide
 871              	.LVL85:
 197:src/complex.c **** 		dn_divide(&y.n, b, &const_1);
 872              		.loc 1 197 2 view .LVU188
 197:src/complex.c **** 		dn_divide(&y.n, b, &const_1);
 873              		.loc 1 197 6 is_stmt 0 view .LVU189
 874 0040 4846     		mov	r0, r9
 875 0042 FFF7FEFF 		bl	dn_eq0
 876              	.LVL86:
 198:src/complex.c **** 	}
 877              		.loc 1 198 3 view .LVU190
 878 0046 0DF1440A 		add	r10, sp, #68
 197:src/complex.c **** 		dn_divide(&y.n, b, &const_1);
 879              		.loc 1 197 5 view .LVU191
 880 004a E0B1     		cbz	r0, .L43
 881              	.L49:
 198:src/complex.c **** 	}
 882              		.loc 1 198 3 is_stmt 1 view .LVU192
 883 004c 124A     		ldr	r2, .L50+4
 884 004e 3146     		mov	r1, r6
 885 0050 5046     		mov	r0, r10
ARM GAS  /tmp/ccT3noyS.s 			page 27


 886 0052 FFF7FEFF 		bl	dn_divide
 887              	.LVL87:
 888              	.L44:
 204:src/complex.c **** }
 889              		.loc 1 204 2 view .LVU193
 890              	.LBB118:
 891              	.LBI118:
  67:src/complex.c **** 	resetComplexContext(saved);
 892              		.loc 1 67 13 view .LVU194
 893              	.LBB119:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 894              		.loc 1 68 2 view .LVU195
 895              	.LBB120:
 896              	.LBI120:
  63:src/complex.c **** 	Ctx.digits = x;
 897              		.loc 1 63 13 view .LVU196
 898              	.LBB121:
  64:src/complex.c **** }
 899              		.loc 1 64 2 view .LVU197
 900              	.LBE121:
 901              	.LBE120:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 902              		.loc 1 69 2 is_stmt 0 view .LVU198
 903 0056 4146     		mov	r1, r8
 904 0058 2846     		mov	r0, r5
 905              	.LBB123:
 906              	.LBB122:
  64:src/complex.c **** }
 907              		.loc 1 64 13 view .LVU199
 908 005a C7F800B0 		str	fp, [r7]
 909              	.LVL88:
  64:src/complex.c **** }
 910              		.loc 1 64 13 view .LVU200
 911              	.LBE122:
 912              	.LBE123:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 913              		.loc 1 69 2 is_stmt 1 view .LVU201
 914 005e FFF7FEFF 		bl	dn_plus
 915              	.LVL89:
  70:src/complex.c **** }
 916              		.loc 1 70 2 view .LVU202
 917 0062 5146     		mov	r1, r10
 918 0064 2046     		mov	r0, r4
 919 0066 FFF7FEFF 		bl	dn_plus
 920              	.LVL90:
  70:src/complex.c **** }
 921              		.loc 1 70 2 is_stmt 0 view .LVU203
 922              	.LBE119:
 923              	.LBE118:
 205:src/complex.c **** 
 924              		.loc 1 205 1 view .LVU204
 925 006a 21B0     		add	sp, sp, #132
 926              		.cfi_remember_state
 927              		.cfi_def_cfa_offset 36
 928              		@ sp needed
 929 006c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 930              	.LVL91:
ARM GAS  /tmp/ccT3noyS.s 			page 28


 931              	.L41:
 932              		.cfi_restore_state
 195:src/complex.c **** 	}
 933              		.loc 1 195 3 is_stmt 1 view .LVU205
 934 0070 5246     		mov	r2, r10
 935 0072 4046     		mov	r0, r8
 936 0074 FFF7FEFF 		bl	dn_divide
 937              	.LVL92:
 197:src/complex.c **** 		dn_divide(&y.n, b, &const_1);
 938              		.loc 1 197 2 view .LVU206
 197:src/complex.c **** 		dn_divide(&y.n, b, &const_1);
 939              		.loc 1 197 6 is_stmt 0 view .LVU207
 940 0078 4846     		mov	r0, r9
 941 007a FFF7FEFF 		bl	dn_eq0
 942              	.LVL93:
 198:src/complex.c **** 	}
 943              		.loc 1 198 3 view .LVU208
 944 007e 0DF1440A 		add	r10, sp, #68
 197:src/complex.c **** 		dn_divide(&y.n, b, &const_1);
 945              		.loc 1 197 5 view .LVU209
 946 0082 0028     		cmp	r0, #0
 947 0084 E2D1     		bne	.L49
 948              	.L43:
 201:src/complex.c **** 	}
 949              		.loc 1 201 3 is_stmt 1 view .LVU210
 950 0086 4A46     		mov	r2, r9
 951 0088 3146     		mov	r1, r6
 952 008a 5046     		mov	r0, r10
 953 008c FFF7FEFF 		bl	dn_divide
 954              	.LVL94:
 955 0090 E1E7     		b	.L44
 956              	.L51:
 957 0092 00BF     		.align	2
 958              	.L50:
 959 0094 00000000 		.word	Ctx
 960 0098 00000000 		.word	const_1
 961              		.cfi_endproc
 962              	.LFE10:
 964              		.section	.text.cmplxDivide,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.global	cmplxDivide
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu fpv4-sp-d16
 973              	cmplxDivide:
 974              	.LVL95:
 975              	.LFB11:
 212:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 976              		.loc 1 212 43 view -0
 977              		.cfi_startproc
 978              		@ args = 8, pretend = 0, frame = 304
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 213:src/complex.c **** 
 980              		.loc 1 213 2 view .LVU212
 215:src/complex.c **** 	dn_multiply(&t1.n, c, c);
ARM GAS  /tmp/ccT3noyS.s 			page 29


 981              		.loc 1 215 2 view .LVU213
 982              	.LBB124:
 983              	.LBI124:
  56:src/complex.c **** 	int digits = Ctx.digits;
 984              		.loc 1 56 12 view .LVU214
 985              	.LBB125:
  57:src/complex.c **** 	if (is_dblmode())
 986              		.loc 1 57 2 view .LVU215
 987              	.LBE125:
 988              	.LBE124:
 212:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 989              		.loc 1 212 43 is_stmt 0 view .LVU216
 990 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 991              		.cfi_def_cfa_offset 36
 992              		.cfi_offset 4, -36
 993              		.cfi_offset 5, -32
 994              		.cfi_offset 6, -28
 995              		.cfi_offset 7, -24
 996              		.cfi_offset 8, -20
 997              		.cfi_offset 9, -16
 998              		.cfi_offset 10, -12
 999              		.cfi_offset 11, -8
 1000              		.cfi_offset 14, -4
 1001              	.LBB129:
 1002              	.LBB126:
  57:src/complex.c **** 	if (is_dblmode())
 1003              		.loc 1 57 6 view .LVU217
 1004 0004 DFF8A8A0 		ldr	r10, .L58
 1005              	.LBE126:
 1006              	.LBE129:
 212:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 1007              		.loc 1 212 43 view .LVU218
 1008 0008 CDB0     		sub	sp, sp, #308
 1009              		.cfi_def_cfa_offset 344
 1010              	.LBB130:
 1011              	.LBB127:
  57:src/complex.c **** 	if (is_dblmode())
 1012              		.loc 1 57 6 view .LVU219
 1013 000a DAF800B0 		ldr	fp, [r10]
 1014              	.LVL96:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1015              		.loc 1 58 2 is_stmt 1 view .LVU220
 1016              	.LBE127:
 1017              	.LBE130:
 212:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 1018              		.loc 1 212 43 is_stmt 0 view .LVU221
 1019 000e 569F     		ldr	r7, [sp, #344]
 1020 0010 579D     		ldr	r5, [sp, #348]
 1021 0012 8146     		mov	r9, r0
 1022 0014 8846     		mov	r8, r1
 1023 0016 1446     		mov	r4, r2
 1024 0018 1E46     		mov	r6, r3
 1025              	.LBB131:
 1026              	.LBB128:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1027              		.loc 1 58 6 view .LVU222
 1028 001a FFF7FEFF 		bl	is_dblmode
ARM GAS  /tmp/ccT3noyS.s 			page 30


 1029              	.LVL97:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1030              		.loc 1 58 5 view .LVU223
 1031 001e 10B1     		cbz	r0, .L53
  59:src/complex.c **** 	return digits;
 1032              		.loc 1 59 3 is_stmt 1 view .LVU224
  59:src/complex.c **** 	return digits;
 1033              		.loc 1 59 14 is_stmt 0 view .LVU225
 1034 0020 4823     		movs	r3, #72
 1035 0022 CAF80030 		str	r3, [r10]
 1036              	.L53:
  60:src/complex.c **** }
 1037              		.loc 1 60 2 is_stmt 1 view .LVU226
 1038              	.LVL98:
  60:src/complex.c **** }
 1039              		.loc 1 60 2 is_stmt 0 view .LVU227
 1040              	.LBE128:
 1041              	.LBE131:
 216:src/complex.c **** 	dn_multiply(&t2.n, d, d);
 1042              		.loc 1 216 2 is_stmt 1 view .LVU228
 1043 0026 3A46     		mov	r2, r7
 1044 0028 3946     		mov	r1, r7
 1045 002a 01A8     		add	r0, sp, #4
 1046 002c FFF7FEFF 		bl	dn_multiply
 1047              	.LVL99:
 217:src/complex.c **** 	dn_add(&den.n, &t1.n, &t2.n);
 1048              		.loc 1 217 2 view .LVU229
 1049 0030 2A46     		mov	r2, r5
 1050 0032 2946     		mov	r1, r5
 1051 0034 10A8     		add	r0, sp, #64
 1052 0036 FFF7FEFF 		bl	dn_multiply
 1053              	.LVL100:
 218:src/complex.c **** 
 1054              		.loc 1 218 2 view .LVU230
 1055 003a 10AA     		add	r2, sp, #64
 1056 003c 01A9     		add	r1, sp, #4
 1057 003e 3DA8     		add	r0, sp, #244
 1058 0040 FFF7FEFF 		bl	dn_add
 1059              	.LVL101:
 220:src/complex.c **** 	dn_multiply(&t2.n, b, d);
 1060              		.loc 1 220 2 view .LVU231
 1061 0044 3A46     		mov	r2, r7
 1062 0046 2146     		mov	r1, r4
 1063 0048 1FA8     		add	r0, sp, #124
 1064 004a FFF7FEFF 		bl	dn_multiply
 1065              	.LVL102:
 221:src/complex.c **** 	dn_add(&t1.n, &t3.n, &t2.n);
 1066              		.loc 1 221 2 view .LVU232
 1067 004e 2A46     		mov	r2, r5
 1068 0050 3146     		mov	r1, r6
 1069 0052 10A8     		add	r0, sp, #64
 1070 0054 FFF7FEFF 		bl	dn_multiply
 1071              	.LVL103:
 222:src/complex.c **** 
 1072              		.loc 1 222 2 view .LVU233
 1073 0058 10AA     		add	r2, sp, #64
 1074 005a 1FA9     		add	r1, sp, #124
ARM GAS  /tmp/ccT3noyS.s 			page 31


 1075 005c 01A8     		add	r0, sp, #4
 1076 005e FFF7FEFF 		bl	dn_add
 1077              	.LVL104:
 224:src/complex.c **** 	dn_multiply(&t2.n, a, d);
 1078              		.loc 1 224 2 view .LVU234
 1079 0062 3A46     		mov	r2, r7
 1080 0064 3146     		mov	r1, r6
 1081 0066 2EA8     		add	r0, sp, #184
 1082 0068 FFF7FEFF 		bl	dn_multiply
 1083              	.LVL105:
 225:src/complex.c **** 	dn_subtract(&t3.n, &t4.n, &t2.n);
 1084              		.loc 1 225 2 view .LVU235
 1085 006c 2A46     		mov	r2, r5
 1086 006e 2146     		mov	r1, r4
 1087 0070 10A8     		add	r0, sp, #64
 1088 0072 FFF7FEFF 		bl	dn_multiply
 1089              	.LVL106:
 226:src/complex.c **** 
 1090              		.loc 1 226 2 view .LVU236
 1091 0076 10AA     		add	r2, sp, #64
 1092 0078 2EA9     		add	r1, sp, #184
 1093 007a 1FA8     		add	r0, sp, #124
 1094 007c FFF7FEFF 		bl	dn_subtract
 1095              	.LVL107:
 228:src/complex.c **** 	dn_divide(&t4.n, &t3.n, &den.n);
 1096              		.loc 1 228 2 view .LVU237
 1097 0080 3DAA     		add	r2, sp, #244
 1098 0082 01A9     		add	r1, sp, #4
 1099 0084 10A8     		add	r0, sp, #64
 1100 0086 FFF7FEFF 		bl	dn_divide
 1101              	.LVL108:
 229:src/complex.c **** 
 1102              		.loc 1 229 2 view .LVU238
 1103 008a 3DAA     		add	r2, sp, #244
 1104 008c 1FA9     		add	r1, sp, #124
 1105 008e 2EA8     		add	r0, sp, #184
 1106 0090 FFF7FEFF 		bl	dn_divide
 1107              	.LVL109:
 231:src/complex.c **** }
 1108              		.loc 1 231 2 view .LVU239
 1109              	.LBB132:
 1110              	.LBI132:
  67:src/complex.c **** 	resetComplexContext(saved);
 1111              		.loc 1 67 13 view .LVU240
 1112              	.LBB133:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 1113              		.loc 1 68 2 view .LVU241
 1114              	.LBB134:
 1115              	.LBI134:
  63:src/complex.c **** 	Ctx.digits = x;
 1116              		.loc 1 63 13 view .LVU242
 1117              	.LBB135:
  64:src/complex.c **** }
 1118              		.loc 1 64 2 view .LVU243
 1119              	.LBE135:
 1120              	.LBE134:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
ARM GAS  /tmp/ccT3noyS.s 			page 32


 1121              		.loc 1 69 2 is_stmt 0 view .LVU244
 1122 0094 10A9     		add	r1, sp, #64
 1123              	.LVL110:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1124              		.loc 1 69 2 view .LVU245
 1125 0096 4846     		mov	r0, r9
 1126              	.LBB137:
 1127              	.LBB136:
  64:src/complex.c **** }
 1128              		.loc 1 64 13 view .LVU246
 1129 0098 CAF800B0 		str	fp, [r10]
 1130              	.LVL111:
  64:src/complex.c **** }
 1131              		.loc 1 64 13 view .LVU247
 1132              	.LBE136:
 1133              	.LBE137:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1134              		.loc 1 69 2 is_stmt 1 view .LVU248
 1135 009c FFF7FEFF 		bl	dn_plus
 1136              	.LVL112:
  70:src/complex.c **** }
 1137              		.loc 1 70 2 view .LVU249
 1138 00a0 2EA9     		add	r1, sp, #184
 1139              	.LVL113:
  70:src/complex.c **** }
 1140              		.loc 1 70 2 is_stmt 0 view .LVU250
 1141 00a2 4046     		mov	r0, r8
 1142 00a4 FFF7FEFF 		bl	dn_plus
 1143              	.LVL114:
  70:src/complex.c **** }
 1144              		.loc 1 70 2 view .LVU251
 1145              	.LBE133:
 1146              	.LBE132:
 232:src/complex.c **** 
 1147              		.loc 1 232 1 view .LVU252
 1148 00a8 4DB0     		add	sp, sp, #308
 1149              		.cfi_def_cfa_offset 36
 1150              		@ sp needed
 1151 00aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1152              	.LVL115:
 1153              	.L59:
 232:src/complex.c **** 
 1154              		.loc 1 232 1 view .LVU253
 1155 00ae 00BF     		.align	2
 1156              	.L58:
 1157 00b0 00000000 		.word	Ctx
 1158              		.cfi_endproc
 1159              	.LFE11:
 1161              		.section	.text.cmplxArg,"ax",%progbits
 1162              		.align	1
 1163              		.p2align 2,,3
 1164              		.global	cmplxArg
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1168              		.fpu fpv4-sp-d16
 1170              	cmplxArg:
ARM GAS  /tmp/ccT3noyS.s 			page 33


 1171              	.LVL116:
 1172              	.LFB12:
 234:src/complex.c **** 	do_atan2(arg, b, a);
 1173              		.loc 1 234 71 is_stmt 1 view -0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              		@ link register save eliminated.
 235:src/complex.c **** }
 1178              		.loc 1 235 2 view .LVU255
 234:src/complex.c **** 	do_atan2(arg, b, a);
 1179              		.loc 1 234 71 is_stmt 0 view .LVU256
 1180 0000 0B46     		mov	r3, r1
 235:src/complex.c **** }
 1181              		.loc 1 235 2 view .LVU257
 1182 0002 1146     		mov	r1, r2
 1183              	.LVL117:
 235:src/complex.c **** }
 1184              		.loc 1 235 2 view .LVU258
 1185 0004 1A46     		mov	r2, r3
 1186              	.LVL118:
 235:src/complex.c **** }
 1187              		.loc 1 235 2 view .LVU259
 1188 0006 FFF7FEBF 		b	do_atan2
 1189              	.LVL119:
 235:src/complex.c **** }
 1190              		.loc 1 235 2 view .LVU260
 1191              		.cfi_endproc
 1192              	.LFE12:
 1194 000a 00BF     		.section	.text.cmplxR,"ax",%progbits
 1195              		.align	1
 1196              		.p2align 2,,3
 1197              		.global	cmplxR
 1198              		.syntax unified
 1199              		.thumb
 1200              		.thumb_func
 1201              		.fpu fpv4-sp-d16
 1203              	cmplxR:
 1204              	.LVL120:
 1205              	.LFB13:
 238:src/complex.c **** 	complexNumber a2, b2, s;
 1206              		.loc 1 238 67 is_stmt 1 view -0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 184
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 239:src/complex.c **** 
 1210              		.loc 1 239 2 view .LVU262
 241:src/complex.c **** 	dn_multiply(&b2.n, b, b);
 1211              		.loc 1 241 2 view .LVU263
 238:src/complex.c **** 	complexNumber a2, b2, s;
 1212              		.loc 1 238 67 is_stmt 0 view .LVU264
 1213 0000 30B5     		push	{r4, r5, lr}
 1214              		.cfi_def_cfa_offset 12
 1215              		.cfi_offset 4, -12
 1216              		.cfi_offset 5, -8
 1217              		.cfi_offset 14, -4
 1218 0002 AFB0     		sub	sp, sp, #188
ARM GAS  /tmp/ccT3noyS.s 			page 34


 1219              		.cfi_def_cfa_offset 200
 238:src/complex.c **** 	complexNumber a2, b2, s;
 1220              		.loc 1 238 67 view .LVU265
 1221 0004 1546     		mov	r5, r2
 1222 0006 0446     		mov	r4, r0
 1223 0008 0A46     		mov	r2, r1
 1224              	.LVL121:
 241:src/complex.c **** 	dn_multiply(&b2.n, b, b);
 1225              		.loc 1 241 2 view .LVU266
 1226 000a 01A8     		add	r0, sp, #4
 1227              	.LVL122:
 241:src/complex.c **** 	dn_multiply(&b2.n, b, b);
 1228              		.loc 1 241 2 view .LVU267
 1229 000c FFF7FEFF 		bl	dn_multiply
 1230              	.LVL123:
 242:src/complex.c **** 	dn_add(&s.n, &a2.n, &b2.n);
 1231              		.loc 1 242 2 is_stmt 1 view .LVU268
 1232 0010 2A46     		mov	r2, r5
 1233 0012 2946     		mov	r1, r5
 1234 0014 10A8     		add	r0, sp, #64
 1235 0016 FFF7FEFF 		bl	dn_multiply
 1236              	.LVL124:
 243:src/complex.c **** 	dn_sqrt(r, &s.n);
 1237              		.loc 1 243 2 view .LVU269
 1238 001a 10AA     		add	r2, sp, #64
 1239 001c 01A9     		add	r1, sp, #4
 1240 001e 1FA8     		add	r0, sp, #124
 1241 0020 FFF7FEFF 		bl	dn_add
 1242              	.LVL125:
 244:src/complex.c **** }
 1243              		.loc 1 244 2 view .LVU270
 1244 0024 1FA9     		add	r1, sp, #124
 1245 0026 2046     		mov	r0, r4
 1246 0028 FFF7FEFF 		bl	dn_sqrt
 1247              	.LVL126:
 245:src/complex.c **** 
 1248              		.loc 1 245 1 is_stmt 0 view .LVU271
 1249 002c 2FB0     		add	sp, sp, #188
 1250              		.cfi_def_cfa_offset 12
 1251              		@ sp needed
 1252 002e 30BD     		pop	{r4, r5, pc}
 245:src/complex.c **** 
 1253              		.loc 1 245 1 view .LVU272
 1254              		.cfi_endproc
 1255              	.LFE13:
 1257              		.section	.text.cmplxToPolar,"ax",%progbits
 1258              		.align	1
 1259              		.p2align 2,,3
 1260              		.global	cmplxToPolar
 1261              		.syntax unified
 1262              		.thumb
 1263              		.thumb_func
 1264              		.fpu fpv4-sp-d16
 1266              	cmplxToPolar:
 1267              	.LVL127:
 1268              	.LFB14:
 255:src/complex.c **** 	do_atan2(t, y, x);
ARM GAS  /tmp/ccT3noyS.s 			page 35


 1269              		.loc 1 255 87 is_stmt 1 view -0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 256:src/complex.c **** 	cmplxR(r, y, x);
 1273              		.loc 1 256 2 view .LVU274
 255:src/complex.c **** 	do_atan2(t, y, x);
 1274              		.loc 1 255 87 is_stmt 0 view .LVU275
 1275 0000 70B5     		push	{r4, r5, r6, lr}
 1276              		.cfi_def_cfa_offset 16
 1277              		.cfi_offset 4, -16
 1278              		.cfi_offset 5, -12
 1279              		.cfi_offset 6, -8
 1280              		.cfi_offset 14, -4
 255:src/complex.c **** 	do_atan2(t, y, x);
 1281              		.loc 1 255 87 view .LVU276
 1282 0002 1C46     		mov	r4, r3
 1283 0004 0546     		mov	r5, r0
 1284 0006 1646     		mov	r6, r2
 256:src/complex.c **** 	cmplxR(r, y, x);
 1285              		.loc 1 256 2 view .LVU277
 1286 0008 0846     		mov	r0, r1
 1287              	.LVL128:
 256:src/complex.c **** 	cmplxR(r, y, x);
 1288              		.loc 1 256 2 view .LVU278
 1289 000a 1946     		mov	r1, r3
 1290              	.LVL129:
 256:src/complex.c **** 	cmplxR(r, y, x);
 1291              		.loc 1 256 2 view .LVU279
 1292 000c FFF7FEFF 		bl	do_atan2
 1293              	.LVL130:
 257:src/complex.c **** }
 1294              		.loc 1 257 2 is_stmt 1 view .LVU280
 1295 0010 3246     		mov	r2, r6
 1296 0012 2146     		mov	r1, r4
 1297 0014 2846     		mov	r0, r5
 258:src/complex.c **** 
 1298              		.loc 1 258 1 is_stmt 0 view .LVU281
 1299 0016 BDE87040 		pop	{r4, r5, r6, lr}
 1300              		.cfi_restore 14
 1301              		.cfi_restore 6
 1302              		.cfi_restore 5
 1303              		.cfi_restore 4
 1304              		.cfi_def_cfa_offset 0
 1305              	.LVL131:
 257:src/complex.c **** }
 1306              		.loc 1 257 2 view .LVU282
 1307 001a FFF7FEBF 		b	cmplxR
 1308              	.LVL132:
 257:src/complex.c **** }
 1309              		.loc 1 257 2 view .LVU283
 1310              		.cfi_endproc
 1311              	.LFE14:
 1313 001e 00BF     		.section	.text.cmplxAbs,"ax",%progbits
 1314              		.align	1
 1315              		.p2align 2,,3
 1316              		.global	cmplxAbs
ARM GAS  /tmp/ccT3noyS.s 			page 36


 1317              		.syntax unified
 1318              		.thumb
 1319              		.thumb_func
 1320              		.fpu fpv4-sp-d16
 1322              	cmplxAbs:
 1323              	.LVL133:
 1324              	.LFB18:
 307:src/complex.c **** 	cmplxR(rx, a, b);
 1325              		.loc 1 307 85 is_stmt 1 view -0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 308:src/complex.c **** 	decNumberZero(ry);
 1329              		.loc 1 308 2 view .LVU285
 307:src/complex.c **** 	cmplxR(rx, a, b);
 1330              		.loc 1 307 85 is_stmt 0 view .LVU286
 1331 0000 10B5     		push	{r4, lr}
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 4, -8
 1334              		.cfi_offset 14, -4
 307:src/complex.c **** 	cmplxR(rx, a, b);
 1335              		.loc 1 307 85 view .LVU287
 1336 0002 0C46     		mov	r4, r1
 308:src/complex.c **** 	decNumberZero(ry);
 1337              		.loc 1 308 2 view .LVU288
 1338 0004 1146     		mov	r1, r2
 1339              	.LVL134:
 308:src/complex.c **** 	decNumberZero(ry);
 1340              		.loc 1 308 2 view .LVU289
 1341 0006 1A46     		mov	r2, r3
 1342              	.LVL135:
 308:src/complex.c **** 	decNumberZero(ry);
 1343              		.loc 1 308 2 view .LVU290
 1344 0008 FFF7FEFF 		bl	cmplxR
 1345              	.LVL136:
 309:src/complex.c **** }
 1346              		.loc 1 309 2 is_stmt 1 view .LVU291
 1347 000c 2046     		mov	r0, r4
 310:src/complex.c **** 
 1348              		.loc 1 310 1 is_stmt 0 view .LVU292
 1349 000e BDE81040 		pop	{r4, lr}
 1350              		.cfi_restore 14
 1351              		.cfi_restore 4
 1352              		.cfi_def_cfa_offset 0
 1353              	.LVL137:
 309:src/complex.c **** }
 1354              		.loc 1 309 2 view .LVU293
 1355 0012 FFF7FEBF 		b	decNumberZero
 1356              	.LVL138:
 309:src/complex.c **** }
 1357              		.loc 1 309 2 view .LVU294
 1358              		.cfi_endproc
 1359              	.LFE18:
 1361 0016 00BF     		.section	.text.cmplxMinus,"ax",%progbits
 1362              		.align	1
 1363              		.p2align 2,,3
 1364              		.global	cmplxMinus
ARM GAS  /tmp/ccT3noyS.s 			page 37


 1365              		.syntax unified
 1366              		.thumb
 1367              		.thumb_func
 1368              		.fpu fpv4-sp-d16
 1370              	cmplxMinus:
 1371              	.LVL139:
 1372              	.LFB19:
 313:src/complex.c **** 	dn_minus(rx, a);
 1373              		.loc 1 313 87 is_stmt 1 view -0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 0
 1376              		@ frame_needed = 0, uses_anonymous_args = 0
 314:src/complex.c **** 	dn_minus(ry, b);
 1377              		.loc 1 314 2 view .LVU296
 313:src/complex.c **** 	dn_minus(rx, a);
 1378              		.loc 1 313 87 is_stmt 0 view .LVU297
 1379 0000 38B5     		push	{r3, r4, r5, lr}
 1380              		.cfi_def_cfa_offset 16
 1381              		.cfi_offset 3, -16
 1382              		.cfi_offset 4, -12
 1383              		.cfi_offset 5, -8
 1384              		.cfi_offset 14, -4
 313:src/complex.c **** 	dn_minus(rx, a);
 1385              		.loc 1 313 87 view .LVU298
 1386 0002 0C46     		mov	r4, r1
 1387 0004 1D46     		mov	r5, r3
 314:src/complex.c **** 	dn_minus(ry, b);
 1388              		.loc 1 314 2 view .LVU299
 1389 0006 1146     		mov	r1, r2
 1390              	.LVL140:
 314:src/complex.c **** 	dn_minus(ry, b);
 1391              		.loc 1 314 2 view .LVU300
 1392 0008 FFF7FEFF 		bl	dn_minus
 1393              	.LVL141:
 315:src/complex.c **** }
 1394              		.loc 1 315 2 is_stmt 1 view .LVU301
 1395 000c 2946     		mov	r1, r5
 1396 000e 2046     		mov	r0, r4
 316:src/complex.c **** 
 1397              		.loc 1 316 1 is_stmt 0 view .LVU302
 1398 0010 BDE83840 		pop	{r3, r4, r5, lr}
 1399              		.cfi_restore 14
 1400              		.cfi_restore 5
 1401              		.cfi_restore 4
 1402              		.cfi_restore 3
 1403              		.cfi_def_cfa_offset 0
 1404              	.LVL142:
 315:src/complex.c **** }
 1405              		.loc 1 315 2 view .LVU303
 1406 0014 FFF7FEBF 		b	dn_minus
 1407              	.LVL143:
 315:src/complex.c **** }
 1408              		.loc 1 315 2 view .LVU304
 1409              		.cfi_endproc
 1410              	.LFE19:
 1412              		.section	.text.cmplxRecip,"ax",%progbits
 1413              		.align	1
ARM GAS  /tmp/ccT3noyS.s 			page 38


 1414              		.p2align 2,,3
 1415              		.global	cmplxRecip
 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1419              		.fpu fpv4-sp-d16
 1421              	cmplxRecip:
 1422              	.LVL144:
 1423              	.LFB20:
 319:src/complex.c **** #ifndef TINY_BUILD
 1424              		.loc 1 319 87 is_stmt 1 view -0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 240
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 321:src/complex.c **** 
 1428              		.loc 1 321 2 view .LVU306
 323:src/complex.c **** 
 1429              		.loc 1 323 2 view .LVU307
 1430              	.LBB138:
 1431              	.LBI138:
  56:src/complex.c **** 	int digits = Ctx.digits;
 1432              		.loc 1 56 12 view .LVU308
 1433              	.LBB139:
  57:src/complex.c **** 	if (is_dblmode())
 1434              		.loc 1 57 2 view .LVU309
 1435              	.LBE139:
 1436              	.LBE138:
 319:src/complex.c **** #ifndef TINY_BUILD
 1437              		.loc 1 319 87 is_stmt 0 view .LVU310
 1438 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1439              		.cfi_def_cfa_offset 28
 1440              		.cfi_offset 4, -28
 1441              		.cfi_offset 5, -24
 1442              		.cfi_offset 6, -20
 1443              		.cfi_offset 7, -16
 1444              		.cfi_offset 8, -12
 1445              		.cfi_offset 9, -8
 1446              		.cfi_offset 14, -4
 1447              	.LBB143:
 1448              	.LBB140:
  57:src/complex.c **** 	if (is_dblmode())
 1449              		.loc 1 57 6 view .LVU311
 1450 0004 DFF87080 		ldr	r8, .L75
 1451              	.LBE140:
 1452              	.LBE143:
 319:src/complex.c **** #ifndef TINY_BUILD
 1453              		.loc 1 319 87 view .LVU312
 1454 0008 BDB0     		sub	sp, sp, #244
 1455              		.cfi_def_cfa_offset 272
 1456              	.LBB144:
 1457              	.LBB141:
  57:src/complex.c **** 	if (is_dblmode())
 1458              		.loc 1 57 6 view .LVU313
 1459 000a D8F80090 		ldr	r9, [r8]
 1460              	.LVL145:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1461              		.loc 1 58 2 is_stmt 1 view .LVU314
ARM GAS  /tmp/ccT3noyS.s 			page 39


 1462              	.LBE141:
 1463              	.LBE144:
 319:src/complex.c **** #ifndef TINY_BUILD
 1464              		.loc 1 319 87 is_stmt 0 view .LVU315
 1465 000e 0746     		mov	r7, r0
 1466 0010 0E46     		mov	r6, r1
 1467 0012 1446     		mov	r4, r2
 1468 0014 1D46     		mov	r5, r3
 1469              	.LBB145:
 1470              	.LBB142:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1471              		.loc 1 58 6 view .LVU316
 1472 0016 FFF7FEFF 		bl	is_dblmode
 1473              	.LVL146:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1474              		.loc 1 58 5 view .LVU317
 1475 001a 10B1     		cbz	r0, .L70
  59:src/complex.c **** 	return digits;
 1476              		.loc 1 59 3 is_stmt 1 view .LVU318
  59:src/complex.c **** 	return digits;
 1477              		.loc 1 59 14 is_stmt 0 view .LVU319
 1478 001c 4823     		movs	r3, #72
 1479 001e C8F80030 		str	r3, [r8]
 1480              	.L70:
  60:src/complex.c **** }
 1481              		.loc 1 60 2 is_stmt 1 view .LVU320
 1482              	.LVL147:
  60:src/complex.c **** }
 1483              		.loc 1 60 2 is_stmt 0 view .LVU321
 1484              	.LBE142:
 1485              	.LBE145:
 325:src/complex.c **** 	dn_multiply(&v.n, d, d);
 1486              		.loc 1 325 2 is_stmt 1 view .LVU322
 1487 0022 2246     		mov	r2, r4
 1488 0024 2146     		mov	r1, r4
 1489 0026 0FA8     		add	r0, sp, #60
 1490 0028 FFF7FEFF 		bl	dn_multiply
 1491              	.LVL148:
 326:src/complex.c **** 	dn_add(&den.n, &u.n, &v.n);
 1492              		.loc 1 326 2 view .LVU323
 1493 002c 2A46     		mov	r2, r5
 1494 002e 2946     		mov	r1, r5
 1495 0030 1EA8     		add	r0, sp, #120
 1496 0032 FFF7FEFF 		bl	dn_multiply
 1497              	.LVL149:
 327:src/complex.c **** 	dn_minus(&t.n, d);
 1498              		.loc 1 327 2 view .LVU324
 1499 0036 1EAA     		add	r2, sp, #120
 1500 0038 0FA9     		add	r1, sp, #60
 1501 003a 2DA8     		add	r0, sp, #180
 1502 003c FFF7FEFF 		bl	dn_add
 1503              	.LVL150:
 328:src/complex.c **** 
 1504              		.loc 1 328 2 view .LVU325
 1505 0040 2946     		mov	r1, r5
 1506 0042 6846     		mov	r0, sp
 1507 0044 FFF7FEFF 		bl	dn_minus
ARM GAS  /tmp/ccT3noyS.s 			page 40


 1508              	.LVL151:
 330:src/complex.c **** 	dn_divide(&v.n, &t.n, &den.n);
 1509              		.loc 1 330 2 view .LVU326
 1510 0048 2DAA     		add	r2, sp, #180
 1511 004a 2146     		mov	r1, r4
 1512 004c 0FA8     		add	r0, sp, #60
 1513 004e FFF7FEFF 		bl	dn_divide
 1514              	.LVL152:
 331:src/complex.c **** 
 1515              		.loc 1 331 2 view .LVU327
 1516 0052 2DAA     		add	r2, sp, #180
 1517 0054 6946     		mov	r1, sp
 1518 0056 1EA8     		add	r0, sp, #120
 1519 0058 FFF7FEFF 		bl	dn_divide
 1520              	.LVL153:
 333:src/complex.c **** #endif
 1521              		.loc 1 333 2 view .LVU328
 1522              	.LBB146:
 1523              	.LBI146:
  67:src/complex.c **** 	resetComplexContext(saved);
 1524              		.loc 1 67 13 view .LVU329
 1525              	.LBB147:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 1526              		.loc 1 68 2 view .LVU330
 1527              	.LBB148:
 1528              	.LBI148:
  63:src/complex.c **** 	Ctx.digits = x;
 1529              		.loc 1 63 13 view .LVU331
 1530              	.LBB149:
  64:src/complex.c **** }
 1531              		.loc 1 64 2 view .LVU332
 1532              	.LBE149:
 1533              	.LBE148:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1534              		.loc 1 69 2 is_stmt 0 view .LVU333
 1535 005c 0FA9     		add	r1, sp, #60
 1536              	.LVL154:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1537              		.loc 1 69 2 view .LVU334
 1538 005e 3846     		mov	r0, r7
 1539              	.LBB151:
 1540              	.LBB150:
  64:src/complex.c **** }
 1541              		.loc 1 64 13 view .LVU335
 1542 0060 C8F80090 		str	r9, [r8]
 1543              	.LVL155:
  64:src/complex.c **** }
 1544              		.loc 1 64 13 view .LVU336
 1545              	.LBE150:
 1546              	.LBE151:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1547              		.loc 1 69 2 is_stmt 1 view .LVU337
 1548 0064 FFF7FEFF 		bl	dn_plus
 1549              	.LVL156:
  70:src/complex.c **** }
 1550              		.loc 1 70 2 view .LVU338
 1551 0068 1EA9     		add	r1, sp, #120
ARM GAS  /tmp/ccT3noyS.s 			page 41


 1552              	.LVL157:
  70:src/complex.c **** }
 1553              		.loc 1 70 2 is_stmt 0 view .LVU339
 1554 006a 3046     		mov	r0, r6
 1555 006c FFF7FEFF 		bl	dn_plus
 1556              	.LVL158:
  70:src/complex.c **** }
 1557              		.loc 1 70 2 view .LVU340
 1558              	.LBE147:
 1559              	.LBE146:
 335:src/complex.c **** 
 1560              		.loc 1 335 1 view .LVU341
 1561 0070 3DB0     		add	sp, sp, #244
 1562              		.cfi_def_cfa_offset 28
 1563              		@ sp needed
 1564 0072 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1565              	.LVL159:
 1566              	.L76:
 335:src/complex.c **** 
 1567              		.loc 1 335 1 view .LVU342
 1568 0076 00BF     		.align	2
 1569              	.L75:
 1570 0078 00000000 		.word	Ctx
 1571              		.cfi_endproc
 1572              	.LFE20:
 1574              		.section	.text.cmplxSqrt,"ax",%progbits
 1575              		.align	1
 1576              		.p2align 2,,3
 1577              		.global	cmplxSqrt
 1578              		.syntax unified
 1579              		.thumb
 1580              		.thumb_func
 1581              		.fpu fpv4-sp-d16
 1583              	cmplxSqrt:
 1584              	.LVL160:
 1585              	.LFB21:
 339:src/complex.c **** #ifndef TINY_BUILD
 1586              		.loc 1 339 86 is_stmt 1 view -0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 360
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 341:src/complex.c **** 
 1590              		.loc 1 341 2 view .LVU344
 343:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 1591              		.loc 1 343 2 view .LVU345
 339:src/complex.c **** #ifndef TINY_BUILD
 1592              		.loc 1 339 86 is_stmt 0 view .LVU346
 1593 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1594              		.cfi_def_cfa_offset 28
 1595              		.cfi_offset 4, -28
 1596              		.cfi_offset 5, -24
 1597              		.cfi_offset 6, -20
 1598              		.cfi_offset 7, -16
 1599              		.cfi_offset 8, -12
 1600              		.cfi_offset 9, -8
 1601              		.cfi_offset 14, -4
 1602 0004 0746     		mov	r7, r0
ARM GAS  /tmp/ccT3noyS.s 			page 42


 1603 0006 DBB0     		sub	sp, sp, #364
 1604              		.cfi_def_cfa_offset 392
 343:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 1605              		.loc 1 343 6 view .LVU347
 1606 0008 1846     		mov	r0, r3
 1607              	.LVL161:
 339:src/complex.c **** #ifndef TINY_BUILD
 1608              		.loc 1 339 86 view .LVU348
 1609 000a 1D46     		mov	r5, r3
 1610 000c 0E46     		mov	r6, r1
 1611 000e 1446     		mov	r4, r2
 343:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 1612              		.loc 1 343 6 view .LVU349
 1613 0010 FFF7FEFF 		bl	dn_eq0
 1614              	.LVL162:
 343:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 1615              		.loc 1 343 5 view .LVU350
 1616 0014 D0B1     		cbz	r0, .L78
 345:src/complex.c **** 			dn_minus(&t1.n, a);
 1617              		.loc 1 345 3 is_stmt 1 view .LVU351
 345:src/complex.c **** 			dn_minus(&t1.n, a);
 1618              		.loc 1 345 6 is_stmt 0 view .LVU352
 1619 0016 94F90830 		ldrsb	r3, [r4, #8]
 1620 001a 002B     		cmp	r3, #0
 346:src/complex.c **** 			dn_sqrt(ry, &t1.n);
 1621              		.loc 1 346 4 view .LVU353
 1622 001c 2146     		mov	r1, r4
 345:src/complex.c **** 			dn_minus(&t1.n, a);
 1623              		.loc 1 345 6 view .LVU354
 1624 001e 08DB     		blt	.L89
 350:src/complex.c **** 			decNumberZero(ry);
 1625              		.loc 1 350 4 is_stmt 1 view .LVU355
 1626 0020 3846     		mov	r0, r7
 1627 0022 FFF7FEFF 		bl	dn_sqrt
 1628              	.LVL163:
 351:src/complex.c **** 		}
 1629              		.loc 1 351 4 view .LVU356
 1630 0026 3046     		mov	r0, r6
 1631 0028 FFF7FEFF 		bl	decNumberZero
 1632              	.LVL164:
 353:src/complex.c **** 	} else {
 1633              		.loc 1 353 3 view .LVU357
 373:src/complex.c **** 
 1634              		.loc 1 373 1 is_stmt 0 view .LVU358
 1635 002c 5BB0     		add	sp, sp, #364
 1636              		.cfi_remember_state
 1637              		.cfi_def_cfa_offset 28
 1638              		@ sp needed
 1639 002e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1640              	.LVL165:
 1641              	.L89:
 1642              		.cfi_restore_state
 346:src/complex.c **** 			dn_sqrt(ry, &t1.n);
 1643              		.loc 1 346 4 is_stmt 1 view .LVU359
 1644 0032 0FA8     		add	r0, sp, #60
 1645 0034 FFF7FEFF 		bl	dn_minus
 1646              	.LVL166:
ARM GAS  /tmp/ccT3noyS.s 			page 43


 347:src/complex.c **** 			decNumberZero(rx);
 1647              		.loc 1 347 4 view .LVU360
 1648 0038 0FA9     		add	r1, sp, #60
 1649 003a 3046     		mov	r0, r6
 1650 003c FFF7FEFF 		bl	dn_sqrt
 1651              	.LVL167:
 348:src/complex.c **** 		} else {
 1652              		.loc 1 348 4 view .LVU361
 1653 0040 3846     		mov	r0, r7
 1654 0042 FFF7FEFF 		bl	decNumberZero
 1655              	.LVL168:
 373:src/complex.c **** 
 1656              		.loc 1 373 1 is_stmt 0 view .LVU362
 1657 0046 5BB0     		add	sp, sp, #364
 1658              		.cfi_remember_state
 1659              		.cfi_def_cfa_offset 28
 1660              		@ sp needed
 1661 0048 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1662              	.LVL169:
 1663              	.L78:
 1664              		.cfi_restore_state
 1665              	.LBB152:
 355:src/complex.c **** 		cmplxR(&fac.n, a, b);
 1666              		.loc 1 355 3 is_stmt 1 view .LVU363
 1667              	.LBB153:
 1668              	.LBI153:
  56:src/complex.c **** 	int digits = Ctx.digits;
 1669              		.loc 1 56 12 view .LVU364
 1670              	.LBB154:
  57:src/complex.c **** 	if (is_dblmode())
 1671              		.loc 1 57 2 view .LVU365
  57:src/complex.c **** 	if (is_dblmode())
 1672              		.loc 1 57 6 is_stmt 0 view .LVU366
 1673 004c DFF89480 		ldr	r8, .L91+4
 1674 0050 D8F80090 		ldr	r9, [r8]
 1675              	.LVL170:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1676              		.loc 1 58 2 is_stmt 1 view .LVU367
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1677              		.loc 1 58 6 is_stmt 0 view .LVU368
 1678 0054 FFF7FEFF 		bl	is_dblmode
 1679              	.LVL171:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1680              		.loc 1 58 5 view .LVU369
 1681 0058 10B1     		cbz	r0, .L82
  59:src/complex.c **** 	return digits;
 1682              		.loc 1 59 3 is_stmt 1 view .LVU370
  59:src/complex.c **** 	return digits;
 1683              		.loc 1 59 14 is_stmt 0 view .LVU371
 1684 005a 4823     		movs	r3, #72
 1685 005c C8F80030 		str	r3, [r8]
 1686              	.L82:
  60:src/complex.c **** }
 1687              		.loc 1 60 2 is_stmt 1 view .LVU372
 1688              	.LVL172:
  60:src/complex.c **** }
 1689              		.loc 1 60 2 is_stmt 0 view .LVU373
ARM GAS  /tmp/ccT3noyS.s 			page 44


 1690              	.LBE154:
 1691              	.LBE153:
 356:src/complex.c **** 
 1692              		.loc 1 356 3 is_stmt 1 view .LVU374
 1693 0060 6846     		mov	r0, sp
 1694 0062 2A46     		mov	r2, r5
 1695 0064 2146     		mov	r1, r4
 1696 0066 FFF7FEFF 		bl	cmplxR
 1697              	.LVL173:
 358:src/complex.c **** 		dn_sqrt(&u.n, &v.n);
 1698              		.loc 1 358 3 view .LVU375
 1699 006a 2246     		mov	r2, r4
 1700 006c 6946     		mov	r1, sp
 1701 006e 2DA8     		add	r0, sp, #180
 1702 0070 FFF7FEFF 		bl	dn_subtract
 1703              	.LVL174:
 359:src/complex.c **** 		dn_add(&v.n, &fac.n, a);
 1704              		.loc 1 359 3 view .LVU376
 1705 0074 2DA9     		add	r1, sp, #180
 1706 0076 1EA8     		add	r0, sp, #120
 1707 0078 FFF7FEFF 		bl	dn_sqrt
 1708              	.LVL175:
 360:src/complex.c **** 		if (decNumberIsNegative(b)) {
 1709              		.loc 1 360 3 view .LVU377
 1710 007c 2246     		mov	r2, r4
 1711 007e 6946     		mov	r1, sp
 1712 0080 2DA8     		add	r0, sp, #180
 1713 0082 FFF7FEFF 		bl	dn_add
 1714              	.LVL176:
 361:src/complex.c **** 			dn_minus(&t1.n, &u.n);
 1715              		.loc 1 361 3 view .LVU378
 361:src/complex.c **** 			dn_minus(&t1.n, &u.n);
 1716              		.loc 1 361 6 is_stmt 0 view .LVU379
 1717 0086 95F90830 		ldrsb	r3, [r5, #8]
 1718 008a 002B     		cmp	r3, #0
 1719 008c 1CDB     		blt	.L90
 365:src/complex.c **** 
 1720              		.loc 1 365 4 is_stmt 1 view .LVU380
 1721 008e 4BAD     		add	r5, sp, #300
 1722              	.LVL177:
 365:src/complex.c **** 
 1723              		.loc 1 365 4 is_stmt 0 view .LVU381
 1724 0090 134A     		ldr	r2, .L91
 1725 0092 1EA9     		add	r1, sp, #120
 1726 0094 2846     		mov	r0, r5
 1727 0096 FFF7FEFF 		bl	dn_multiply
 1728              	.LVL178:
 1729 009a 0FAC     		add	r4, sp, #60
 1730              	.LVL179:
 1731              	.L84:
 367:src/complex.c **** 		dn_multiply(&x.n, &t1.n, &const_root2on2);
 1732              		.loc 1 367 3 is_stmt 1 view .LVU382
 1733 009c 2DA9     		add	r1, sp, #180
 1734 009e 2046     		mov	r0, r4
 1735 00a0 FFF7FEFF 		bl	dn_sqrt
 1736              	.LVL180:
 368:src/complex.c **** 
ARM GAS  /tmp/ccT3noyS.s 			page 45


 1737              		.loc 1 368 3 view .LVU383
 1738 00a4 0E4A     		ldr	r2, .L91
 1739 00a6 2146     		mov	r1, r4
 1740 00a8 3CA8     		add	r0, sp, #240
 1741 00aa FFF7FEFF 		bl	dn_multiply
 1742              	.LVL181:
 370:src/complex.c **** 	}
 1743              		.loc 1 370 3 view .LVU384
 1744              	.LBB155:
 1745              	.LBI155:
  67:src/complex.c **** 	resetComplexContext(saved);
 1746              		.loc 1 67 13 view .LVU385
 1747              	.LBB156:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 1748              		.loc 1 68 2 view .LVU386
 1749              	.LBB157:
 1750              	.LBI157:
  63:src/complex.c **** 	Ctx.digits = x;
 1751              		.loc 1 63 13 view .LVU387
 1752              	.LBB158:
  64:src/complex.c **** }
 1753              		.loc 1 64 2 view .LVU388
 1754              	.LBE158:
 1755              	.LBE157:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1756              		.loc 1 69 2 is_stmt 0 view .LVU389
 1757 00ae 3CA9     		add	r1, sp, #240
 1758              	.LVL182:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1759              		.loc 1 69 2 view .LVU390
 1760 00b0 3846     		mov	r0, r7
 1761              	.LBB160:
 1762              	.LBB159:
  64:src/complex.c **** }
 1763              		.loc 1 64 13 view .LVU391
 1764 00b2 C8F80090 		str	r9, [r8]
 1765              	.LVL183:
  64:src/complex.c **** }
 1766              		.loc 1 64 13 view .LVU392
 1767              	.LBE159:
 1768              	.LBE160:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1769              		.loc 1 69 2 is_stmt 1 view .LVU393
 1770 00b6 FFF7FEFF 		bl	dn_plus
 1771              	.LVL184:
  70:src/complex.c **** }
 1772              		.loc 1 70 2 view .LVU394
 1773 00ba 2946     		mov	r1, r5
 1774 00bc 3046     		mov	r0, r6
 1775 00be FFF7FEFF 		bl	dn_plus
 1776              	.LVL185:
  70:src/complex.c **** }
 1777              		.loc 1 70 2 is_stmt 0 view .LVU395
 1778              	.LBE156:
 1779              	.LBE155:
 1780              	.LBE152:
 373:src/complex.c **** 
ARM GAS  /tmp/ccT3noyS.s 			page 46


 1781              		.loc 1 373 1 view .LVU396
 1782 00c2 5BB0     		add	sp, sp, #364
 1783              		.cfi_remember_state
 1784              		.cfi_def_cfa_offset 28
 1785              		@ sp needed
 1786 00c4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1787              	.LVL186:
 1788              	.L90:
 1789              		.cfi_restore_state
 1790              	.LBB161:
 362:src/complex.c **** 			dn_multiply(&y.n, &t1.n, &const_root2on2);
 1791              		.loc 1 362 4 is_stmt 1 view .LVU397
 1792 00c8 0FAC     		add	r4, sp, #60
 1793              	.LVL187:
 362:src/complex.c **** 			dn_multiply(&y.n, &t1.n, &const_root2on2);
 1794              		.loc 1 362 4 is_stmt 0 view .LVU398
 1795 00ca 1EA9     		add	r1, sp, #120
 1796 00cc 2046     		mov	r0, r4
 363:src/complex.c **** 		} else
 1797              		.loc 1 363 4 view .LVU399
 1798 00ce 4BAD     		add	r5, sp, #300
 1799              	.LVL188:
 362:src/complex.c **** 			dn_multiply(&y.n, &t1.n, &const_root2on2);
 1800              		.loc 1 362 4 view .LVU400
 1801 00d0 FFF7FEFF 		bl	dn_minus
 1802              	.LVL189:
 363:src/complex.c **** 		} else
 1803              		.loc 1 363 4 is_stmt 1 view .LVU401
 1804 00d4 024A     		ldr	r2, .L91
 1805 00d6 2146     		mov	r1, r4
 1806 00d8 2846     		mov	r0, r5
 1807 00da FFF7FEFF 		bl	dn_multiply
 1808              	.LVL190:
 1809 00de DDE7     		b	.L84
 1810              	.L92:
 1811              		.align	2
 1812              	.L91:
 1813 00e0 00000000 		.word	const_root2on2
 1814 00e4 00000000 		.word	Ctx
 1815              	.LBE161:
 1816              		.cfi_endproc
 1817              	.LFE21:
 1819              		.section	.text.cmplxSin,"ax",%progbits
 1820              		.align	1
 1821              		.p2align 2,,3
 1822              		.global	cmplxSin
 1823              		.syntax unified
 1824              		.thumb
 1825              		.thumb_func
 1826              		.fpu fpv4-sp-d16
 1828              	cmplxSin:
 1829              	.LVL191:
 1830              	.LFB24:
 409:src/complex.c **** 	decNumber z;
 1831              		.loc 1 409 85 view -0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 40
ARM GAS  /tmp/ccT3noyS.s 			page 47


 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 410:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 1835              		.loc 1 410 2 view .LVU403
 411:src/complex.c **** }
 1836              		.loc 1 411 2 view .LVU404
 409:src/complex.c **** 	decNumber z;
 1837              		.loc 1 409 85 is_stmt 0 view .LVU405
 1838 0000 70B5     		push	{r4, r5, r6, lr}
 1839              		.cfi_def_cfa_offset 16
 1840              		.cfi_offset 4, -16
 1841              		.cfi_offset 5, -12
 1842              		.cfi_offset 6, -8
 1843              		.cfi_offset 14, -4
 1844 0002 8CB0     		sub	sp, sp, #48
 1845              		.cfi_def_cfa_offset 64
 409:src/complex.c **** 	decNumber z;
 1846              		.loc 1 409 85 view .LVU406
 1847 0004 0646     		mov	r6, r0
 1848 0006 0D46     		mov	r5, r1
 411:src/complex.c **** }
 1849              		.loc 1 411 2 view .LVU407
 1850 0008 03AC     		add	r4, sp, #12
 409:src/complex.c **** 	decNumber z;
 1851              		.loc 1 409 85 view .LVU408
 1852 000a 1046     		mov	r0, r2
 1853              	.LVL192:
 409:src/complex.c **** 	decNumber z;
 1854              		.loc 1 409 85 view .LVU409
 1855 000c 1946     		mov	r1, r3
 1856              	.LVL193:
 411:src/complex.c **** }
 1857              		.loc 1 411 2 view .LVU410
 1858 000e CDE90044 		strd	r4, r4, [sp]
 1859 0012 3246     		mov	r2, r6
 1860              	.LVL194:
 411:src/complex.c **** }
 1861              		.loc 1 411 2 view .LVU411
 1862 0014 2B46     		mov	r3, r5
 1863              	.LVL195:
 411:src/complex.c **** }
 1864              		.loc 1 411 2 view .LVU412
 1865 0016 FFF7FEFF 		bl	cmplx_sincos
 1866              	.LVL196:
 412:src/complex.c **** 
 1867              		.loc 1 412 1 view .LVU413
 1868 001a 0CB0     		add	sp, sp, #48
 1869              		.cfi_def_cfa_offset 16
 1870              		@ sp needed
 1871 001c 70BD     		pop	{r4, r5, r6, pc}
 412:src/complex.c **** 
 1872              		.loc 1 412 1 view .LVU414
 1873              		.cfi_endproc
 1874              	.LFE24:
 1876 001e 00BF     		.section	.text.cmplxCos,"ax",%progbits
 1877              		.align	1
 1878              		.p2align 2,,3
 1879              		.global	cmplxCos
ARM GAS  /tmp/ccT3noyS.s 			page 48


 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu fpv4-sp-d16
 1885              	cmplxCos:
 1886              	.LVL197:
 1887              	.LFB25:
 415:src/complex.c **** 	decNumber z;
 1888              		.loc 1 415 85 is_stmt 1 view -0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 40
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 416:src/complex.c **** 	cmplx_sincos(a, b, &z, &z, rx, ry);
 1892              		.loc 1 416 2 view .LVU416
 417:src/complex.c **** }
 1893              		.loc 1 417 2 view .LVU417
 415:src/complex.c **** 	decNumber z;
 1894              		.loc 1 415 85 is_stmt 0 view .LVU418
 1895 0000 00B5     		push	{lr}
 1896              		.cfi_def_cfa_offset 4
 1897              		.cfi_offset 14, -4
 1898 0002 8DB0     		sub	sp, sp, #52
 1899              		.cfi_def_cfa_offset 56
 417:src/complex.c **** }
 1900              		.loc 1 417 2 view .LVU419
 1901 0004 CDE90001 		strd	r0, r1, [sp]
 1902 0008 1946     		mov	r1, r3
 1903              	.LVL198:
 417:src/complex.c **** }
 1904              		.loc 1 417 2 view .LVU420
 1905 000a 03AB     		add	r3, sp, #12
 1906              	.LVL199:
 417:src/complex.c **** }
 1907              		.loc 1 417 2 view .LVU421
 1908 000c 1046     		mov	r0, r2
 1909              	.LVL200:
 417:src/complex.c **** }
 1910              		.loc 1 417 2 view .LVU422
 1911 000e 1A46     		mov	r2, r3
 1912              	.LVL201:
 417:src/complex.c **** }
 1913              		.loc 1 417 2 view .LVU423
 1914 0010 FFF7FEFF 		bl	cmplx_sincos
 1915              	.LVL202:
 418:src/complex.c **** 
 1916              		.loc 1 418 1 view .LVU424
 1917 0014 0DB0     		add	sp, sp, #52
 1918              		.cfi_def_cfa_offset 4
 1919              		@ sp needed
 1920 0016 5DF804FB 		ldr	pc, [sp], #4
 1921              		.cfi_endproc
 1922              	.LFE25:
 1924 001a 00BF     		.section	.text.cmplxTan,"ax",%progbits
 1925              		.align	1
 1926              		.p2align 2,,3
 1927              		.global	cmplxTan
 1928              		.syntax unified
ARM GAS  /tmp/ccT3noyS.s 			page 49


 1929              		.thumb
 1930              		.thumb_func
 1931              		.fpu fpv4-sp-d16
 1933              	cmplxTan:
 1934              	.LVL203:
 1935              	.LFB26:
 421:src/complex.c **** #ifndef TINY_BUILD
 1936              		.loc 1 421 85 is_stmt 1 view -0
 1937              		.cfi_startproc
 1938              		@ args = 0, pretend = 0, frame = 144
 1939              		@ frame_needed = 0, uses_anonymous_args = 0
 423:src/complex.c **** 
 1940              		.loc 1 423 2 view .LVU426
 425:src/complex.c **** 		decNumberZero(rx);
 1941              		.loc 1 425 2 view .LVU427
 421:src/complex.c **** #ifndef TINY_BUILD
 1942              		.loc 1 421 85 is_stmt 0 view .LVU428
 1943 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1944              		.cfi_def_cfa_offset 28
 1945              		.cfi_offset 4, -28
 1946              		.cfi_offset 5, -24
 1947              		.cfi_offset 6, -20
 1948              		.cfi_offset 7, -16
 1949              		.cfi_offset 8, -12
 1950              		.cfi_offset 9, -8
 1951              		.cfi_offset 14, -4
 1952 0004 8046     		mov	r8, r0
 1953 0006 A7B0     		sub	sp, sp, #156
 1954              		.cfi_def_cfa_offset 184
 425:src/complex.c **** 		decNumberZero(rx);
 1955              		.loc 1 425 6 view .LVU429
 1956 0008 1046     		mov	r0, r2
 1957              	.LVL204:
 421:src/complex.c **** #ifndef TINY_BUILD
 1958              		.loc 1 421 85 view .LVU430
 1959 000a 1446     		mov	r4, r2
 1960 000c 8946     		mov	r9, r1
 1961 000e 1D46     		mov	r5, r3
 425:src/complex.c **** 		decNumberZero(rx);
 1962              		.loc 1 425 6 view .LVU431
 1963 0010 FFF7FEFF 		bl	dn_eq0
 1964              	.LVL205:
 425:src/complex.c **** 		decNumberZero(rx);
 1965              		.loc 1 425 5 view .LVU432
 1966 0014 10B1     		cbz	r0, .L98
 425:src/complex.c **** 		decNumberZero(rx);
 1967              		.loc 1 425 16 discriminator 1 view .LVU433
 1968 0016 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 1969 0018 5B06     		lsls	r3, r3, #25
 1970 001a 14D4     		bmi	.L108
 1971              	.L98:
 432:src/complex.c **** 		cmplxDivide(rx, ry, &s1, &s2, &c1, &c2);
 1972              		.loc 1 432 3 is_stmt 1 view .LVU434
 1973 001c 0BAF     		add	r7, sp, #44
 1974 001e 02AE     		add	r6, sp, #8
 1975 0020 2946     		mov	r1, r5
 1976 0022 2046     		mov	r0, r4
ARM GAS  /tmp/ccT3noyS.s 			page 50


 1977 0024 1DAB     		add	r3, sp, #116
 1978 0026 14AA     		add	r2, sp, #80
 1979 0028 CDE90067 		strd	r6, r7, [sp]
 1980 002c FFF7FEFF 		bl	cmplx_sincos
 1981              	.LVL206:
 433:src/complex.c **** 	}
 1982              		.loc 1 433 3 view .LVU435
 1983 0030 CDE90067 		strd	r6, r7, [sp]
 1984 0034 1DAB     		add	r3, sp, #116
 1985 0036 14AA     		add	r2, sp, #80
 1986 0038 4946     		mov	r1, r9
 1987 003a 4046     		mov	r0, r8
 1988 003c FFF7FEFF 		bl	cmplxDivide
 1989              	.LVL207:
 1990              	.L97:
 436:src/complex.c **** 
 1991              		.loc 1 436 1 is_stmt 0 view .LVU436
 1992 0040 27B0     		add	sp, sp, #156
 1993              		.cfi_remember_state
 1994              		.cfi_def_cfa_offset 28
 1995              		@ sp needed
 1996 0042 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1997              	.LVL208:
 1998              	.L108:
 1999              		.cfi_restore_state
 426:src/complex.c **** 		if (decNumberIsNegative(b))
 2000              		.loc 1 426 3 is_stmt 1 view .LVU437
 2001 0046 4046     		mov	r0, r8
 2002 0048 FFF7FEFF 		bl	decNumberZero
 2003              	.LVL209:
 427:src/complex.c **** 			dn__1(ry);
 2004              		.loc 1 427 3 view .LVU438
 427:src/complex.c **** 			dn__1(ry);
 2005              		.loc 1 427 6 is_stmt 0 view .LVU439
 2006 004c 95F90830 		ldrsb	r3, [r5, #8]
 2007 0050 002B     		cmp	r3, #0
 428:src/complex.c **** 		else
 2008              		.loc 1 428 4 view .LVU440
 2009 0052 4846     		mov	r0, r9
 427:src/complex.c **** 			dn__1(ry);
 2010              		.loc 1 427 6 view .LVU441
 2011 0054 04DB     		blt	.L109
 2012              	.LVL210:
 430:src/complex.c **** 	} else {
 2013              		.loc 1 430 4 is_stmt 1 view .LVU442
 2014 0056 FFF7FEFF 		bl	dn_1
 2015              	.LVL211:
 436:src/complex.c **** 
 2016              		.loc 1 436 1 is_stmt 0 view .LVU443
 2017 005a 27B0     		add	sp, sp, #156
 2018              		.cfi_remember_state
 2019              		.cfi_def_cfa_offset 28
 2020              		@ sp needed
 2021 005c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2022              	.LVL212:
 2023              	.L109:
 2024              		.cfi_restore_state
ARM GAS  /tmp/ccT3noyS.s 			page 51


 428:src/complex.c **** 		else
 2025              		.loc 1 428 4 is_stmt 1 view .LVU444
 2026 0060 FFF7FEFF 		bl	dn__1
 2027              	.LVL213:
 428:src/complex.c **** 		else
 2028              		.loc 1 428 4 is_stmt 0 view .LVU445
 2029 0064 ECE7     		b	.L97
 2030              		.cfi_endproc
 2031              	.LFE26:
 2033 0066 00BF     		.section	.text.cmplxSinc,"ax",%progbits
 2034              		.align	1
 2035              		.p2align 2,,3
 2036              		.global	cmplxSinc
 2037              		.syntax unified
 2038              		.thumb
 2039              		.thumb_func
 2040              		.fpu fpv4-sp-d16
 2042              	cmplxSinc:
 2043              	.LVL214:
 2044              	.LFB27:
 440:src/complex.c **** #ifndef TINY_BUILD
 2045              		.loc 1 440 86 is_stmt 1 view -0
 2046              		.cfi_startproc
 2047              		@ args = 0, pretend = 0, frame = 112
 2048              		@ frame_needed = 0, uses_anonymous_args = 0
 442:src/complex.c **** 
 2049              		.loc 1 442 2 view .LVU447
 444:src/complex.c **** 		decNumberSinc(rx, a);
 2050              		.loc 1 444 2 view .LVU448
 440:src/complex.c **** #ifndef TINY_BUILD
 2051              		.loc 1 440 86 is_stmt 0 view .LVU449
 2052 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2053              		.cfi_def_cfa_offset 20
 2054              		.cfi_offset 4, -20
 2055              		.cfi_offset 5, -16
 2056              		.cfi_offset 6, -12
 2057              		.cfi_offset 7, -8
 2058              		.cfi_offset 14, -4
 2059 0002 0646     		mov	r6, r0
 2060 0004 9FB0     		sub	sp, sp, #124
 2061              		.cfi_def_cfa_offset 144
 444:src/complex.c **** 		decNumberSinc(rx, a);
 2062              		.loc 1 444 6 view .LVU450
 2063 0006 1846     		mov	r0, r3
 2064              	.LVL215:
 440:src/complex.c **** #ifndef TINY_BUILD
 2065              		.loc 1 440 86 view .LVU451
 2066 0008 1C46     		mov	r4, r3
 2067 000a 0F46     		mov	r7, r1
 2068 000c 1546     		mov	r5, r2
 444:src/complex.c **** 		decNumberSinc(rx, a);
 2069              		.loc 1 444 6 view .LVU452
 2070 000e FFF7FEFF 		bl	dn_eq0
 2071              	.LVL216:
 444:src/complex.c **** 		decNumberSinc(rx, a);
 2072              		.loc 1 444 5 view .LVU453
 2073 0012 40B1     		cbz	r0, .L111
ARM GAS  /tmp/ccT3noyS.s 			page 52


 445:src/complex.c **** 		decNumberZero(ry);
 2074              		.loc 1 445 3 is_stmt 1 view .LVU454
 2075 0014 2946     		mov	r1, r5
 2076 0016 3046     		mov	r0, r6
 2077 0018 FFF7FEFF 		bl	decNumberSinc
 2078              	.LVL217:
 446:src/complex.c **** 	} else {
 2079              		.loc 1 446 3 view .LVU455
 2080 001c 3846     		mov	r0, r7
 2081 001e FFF7FEFF 		bl	decNumberZero
 2082              	.LVL218:
 452:src/complex.c **** 
 2083              		.loc 1 452 1 is_stmt 0 view .LVU456
 2084 0022 1FB0     		add	sp, sp, #124
 2085              		.cfi_remember_state
 2086              		.cfi_def_cfa_offset 20
 2087              		@ sp needed
 2088 0024 F0BD     		pop	{r4, r5, r6, r7, pc}
 2089              	.LVL219:
 2090              	.L111:
 2091              		.cfi_restore_state
 448:src/complex.c **** 		cmplxDivide(rx, ry, &s1, &s2, a, b);
 2092              		.loc 1 448 3 is_stmt 1 view .LVU457
 2093              	.LBB162:
 2094              	.LBI162:
 409:src/complex.c **** 	decNumber z;
 2095              		.loc 1 409 6 view .LVU458
 2096              	.LBB163:
 410:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 2097              		.loc 1 410 2 view .LVU459
 411:src/complex.c **** }
 2098              		.loc 1 411 2 view .LVU460
 2099 0026 15A9     		add	r1, sp, #84
 2100 0028 CDE90011 		strd	r1, r1, [sp]
 2101 002c 0CAB     		add	r3, sp, #48
 2102              	.LVL220:
 411:src/complex.c **** }
 2103              		.loc 1 411 2 is_stmt 0 view .LVU461
 2104 002e 03AA     		add	r2, sp, #12
 2105              	.LVL221:
 411:src/complex.c **** }
 2106              		.loc 1 411 2 view .LVU462
 2107 0030 2146     		mov	r1, r4
 2108 0032 2846     		mov	r0, r5
 2109 0034 FFF7FEFF 		bl	cmplx_sincos
 2110              	.LVL222:
 411:src/complex.c **** }
 2111              		.loc 1 411 2 view .LVU463
 2112              	.LBE163:
 2113              	.LBE162:
 449:src/complex.c **** 	}
 2114              		.loc 1 449 3 is_stmt 1 view .LVU464
 2115 0038 CDE90054 		strd	r5, r4, [sp]
 2116 003c 0CAB     		add	r3, sp, #48
 2117 003e 03AA     		add	r2, sp, #12
 2118 0040 3946     		mov	r1, r7
 2119 0042 3046     		mov	r0, r6
ARM GAS  /tmp/ccT3noyS.s 			page 53


 2120 0044 FFF7FEFF 		bl	cmplxDivide
 2121              	.LVL223:
 452:src/complex.c **** 
 2122              		.loc 1 452 1 is_stmt 0 view .LVU465
 2123 0048 1FB0     		add	sp, sp, #124
 2124              		.cfi_def_cfa_offset 20
 2125              		@ sp needed
 2126 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 452:src/complex.c **** 
 2127              		.loc 1 452 1 view .LVU466
 2128              		.cfi_endproc
 2129              	.LFE27:
 2131              		.section	.text.cmplxSinh,"ax",%progbits
 2132              		.align	1
 2133              		.p2align 2,,3
 2134              		.global	cmplxSinh
 2135              		.syntax unified
 2136              		.thumb
 2137              		.thumb_func
 2138              		.fpu fpv4-sp-d16
 2140              	cmplxSinh:
 2141              	.LVL224:
 2142              	.LFB29:
 467:src/complex.c **** 
 468:src/complex.c **** // sinh(a + i b) = sinh(a) cos(b) + i cosh(a) sin(b)
 469:src/complex.c **** void cmplxSinh(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 2143              		.loc 1 469 86 is_stmt 1 view -0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 40
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
 470:src/complex.c **** 	decNumber z;
 2147              		.loc 1 470 2 view .LVU468
 471:src/complex.c **** 	cmplx_sinhcosh(a, b, rx, ry, &z, &z);
 2148              		.loc 1 471 2 view .LVU469
 469:src/complex.c **** 	decNumber z;
 2149              		.loc 1 469 86 is_stmt 0 view .LVU470
 2150 0000 70B5     		push	{r4, r5, r6, lr}
 2151              		.cfi_def_cfa_offset 16
 2152              		.cfi_offset 4, -16
 2153              		.cfi_offset 5, -12
 2154              		.cfi_offset 6, -8
 2155              		.cfi_offset 14, -4
 2156 0002 8CB0     		sub	sp, sp, #48
 2157              		.cfi_def_cfa_offset 64
 469:src/complex.c **** 	decNumber z;
 2158              		.loc 1 469 86 view .LVU471
 2159 0004 0646     		mov	r6, r0
 2160 0006 0D46     		mov	r5, r1
 2161              		.loc 1 471 2 view .LVU472
 2162 0008 03AC     		add	r4, sp, #12
 469:src/complex.c **** 	decNumber z;
 2163              		.loc 1 469 86 view .LVU473
 2164 000a 1046     		mov	r0, r2
 2165              	.LVL225:
 469:src/complex.c **** 	decNumber z;
 2166              		.loc 1 469 86 view .LVU474
 2167 000c 1946     		mov	r1, r3
ARM GAS  /tmp/ccT3noyS.s 			page 54


 2168              	.LVL226:
 2169              		.loc 1 471 2 view .LVU475
 2170 000e CDE90044 		strd	r4, r4, [sp]
 2171 0012 3246     		mov	r2, r6
 2172              	.LVL227:
 2173              		.loc 1 471 2 view .LVU476
 2174 0014 2B46     		mov	r3, r5
 2175              	.LVL228:
 2176              		.loc 1 471 2 view .LVU477
 2177 0016 FFF7FEFF 		bl	cmplx_sinhcosh
 2178              	.LVL229:
 472:src/complex.c **** }
 2179              		.loc 1 472 1 view .LVU478
 2180 001a 0CB0     		add	sp, sp, #48
 2181              		.cfi_def_cfa_offset 16
 2182              		@ sp needed
 2183 001c 70BD     		pop	{r4, r5, r6, pc}
 2184              		.loc 1 472 1 view .LVU479
 2185              		.cfi_endproc
 2186              	.LFE29:
 2188 001e 00BF     		.section	.text.cmplxCosh,"ax",%progbits
 2189              		.align	1
 2190              		.p2align 2,,3
 2191              		.global	cmplxCosh
 2192              		.syntax unified
 2193              		.thumb
 2194              		.thumb_func
 2195              		.fpu fpv4-sp-d16
 2197              	cmplxCosh:
 2198              	.LVL230:
 2199              	.LFB30:
 473:src/complex.c **** 
 474:src/complex.c **** // cosh(a + i b) = cosh(a) cos(b) + i sinh(a) sin(b)
 475:src/complex.c **** void cmplxCosh(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 2200              		.loc 1 475 86 is_stmt 1 view -0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 40
 2203              		@ frame_needed = 0, uses_anonymous_args = 0
 476:src/complex.c **** 	decNumber z;
 2204              		.loc 1 476 2 view .LVU481
 477:src/complex.c **** 	cmplx_sinhcosh(a, b, &z, &z, rx, ry);
 2205              		.loc 1 477 2 view .LVU482
 475:src/complex.c **** 	decNumber z;
 2206              		.loc 1 475 86 is_stmt 0 view .LVU483
 2207 0000 00B5     		push	{lr}
 2208              		.cfi_def_cfa_offset 4
 2209              		.cfi_offset 14, -4
 2210 0002 8DB0     		sub	sp, sp, #52
 2211              		.cfi_def_cfa_offset 56
 2212              		.loc 1 477 2 view .LVU484
 2213 0004 CDE90001 		strd	r0, r1, [sp]
 2214 0008 1946     		mov	r1, r3
 2215              	.LVL231:
 2216              		.loc 1 477 2 view .LVU485
 2217 000a 03AB     		add	r3, sp, #12
 2218              	.LVL232:
 2219              		.loc 1 477 2 view .LVU486
ARM GAS  /tmp/ccT3noyS.s 			page 55


 2220 000c 1046     		mov	r0, r2
 2221              	.LVL233:
 2222              		.loc 1 477 2 view .LVU487
 2223 000e 1A46     		mov	r2, r3
 2224              	.LVL234:
 2225              		.loc 1 477 2 view .LVU488
 2226 0010 FFF7FEFF 		bl	cmplx_sinhcosh
 2227              	.LVL235:
 478:src/complex.c **** }
 2228              		.loc 1 478 1 view .LVU489
 2229 0014 0DB0     		add	sp, sp, #52
 2230              		.cfi_def_cfa_offset 4
 2231              		@ sp needed
 2232 0016 5DF804FB 		ldr	pc, [sp], #4
 2233              		.cfi_endproc
 2234              	.LFE30:
 2236 001a 00BF     		.section	.text.cmplxTanh,"ax",%progbits
 2237              		.align	1
 2238              		.p2align 2,,3
 2239              		.global	cmplxTanh
 2240              		.syntax unified
 2241              		.thumb
 2242              		.thumb_func
 2243              		.fpu fpv4-sp-d16
 2245              	cmplxTanh:
 2246              	.LVL236:
 2247              	.LFB31:
 479:src/complex.c **** 
 480:src/complex.c **** // tanh(a + i b) = (tanh(a) + i tan(b))/(1 + i tanh(a) tan(b))
 481:src/complex.c **** void cmplxTanh(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 2248              		.loc 1 481 86 is_stmt 1 view -0
 2249              		.cfi_startproc
 2250              		@ args = 0, pretend = 0, frame = 112
 2251              		@ frame_needed = 0, uses_anonymous_args = 0
 482:src/complex.c **** #ifndef TINY_BUILD
 483:src/complex.c **** 	decNumber ta, tb, t2;
 2252              		.loc 1 483 2 view .LVU491
 484:src/complex.c **** 
 485:src/complex.c **** 	if (dn_eq0(b)) {
 2253              		.loc 1 485 2 view .LVU492
 481:src/complex.c **** #ifndef TINY_BUILD
 2254              		.loc 1 481 86 is_stmt 0 view .LVU493
 2255 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2256              		.cfi_def_cfa_offset 24
 2257              		.cfi_offset 4, -24
 2258              		.cfi_offset 5, -20
 2259              		.cfi_offset 6, -16
 2260              		.cfi_offset 7, -12
 2261              		.cfi_offset 8, -8
 2262              		.cfi_offset 14, -4
 2263 0004 0546     		mov	r5, r0
 2264 0006 9EB0     		sub	sp, sp, #120
 2265              		.cfi_def_cfa_offset 144
 2266              		.loc 1 485 6 view .LVU494
 2267 0008 1846     		mov	r0, r3
 2268              	.LVL237:
 481:src/complex.c **** #ifndef TINY_BUILD
ARM GAS  /tmp/ccT3noyS.s 			page 56


 2269              		.loc 1 481 86 view .LVU495
 2270 000a 1C46     		mov	r4, r3
 2271 000c 0E46     		mov	r6, r1
 2272 000e 1746     		mov	r7, r2
 2273              		.loc 1 485 6 view .LVU496
 2274 0010 FFF7FEFF 		bl	dn_eq0
 2275              	.LVL238:
 2276              		.loc 1 485 5 view .LVU497
 2277 0014 48B1     		cbz	r0, .L119
 486:src/complex.c **** 		decNumberTanh(rx, a);
 2278              		.loc 1 486 3 is_stmt 1 view .LVU498
 2279 0016 3946     		mov	r1, r7
 2280 0018 2846     		mov	r0, r5
 2281 001a FFF7FEFF 		bl	decNumberTanh
 2282              	.LVL239:
 487:src/complex.c **** 		decNumberZero(ry);
 2283              		.loc 1 487 3 view .LVU499
 2284 001e 3046     		mov	r0, r6
 2285 0020 FFF7FEFF 		bl	decNumberZero
 2286              	.LVL240:
 488:src/complex.c **** 	} else {
 489:src/complex.c **** 		dn_sincos(b, &ta, &t2);
 490:src/complex.c **** 		dn_divide(&tb, &ta, &t2);
 491:src/complex.c **** 		decNumberTanh(&ta, a);
 492:src/complex.c **** 
 493:src/complex.c **** 		dn_multiply(&t2, &ta, &tb);
 494:src/complex.c **** 
 495:src/complex.c **** 		cmplxDivide(rx, ry, &ta, &tb, &const_1, &t2);
 496:src/complex.c **** 	}
 497:src/complex.c **** #endif
 498:src/complex.c **** }
 2287              		.loc 1 498 1 is_stmt 0 view .LVU500
 2288 0024 1EB0     		add	sp, sp, #120
 2289              		.cfi_remember_state
 2290              		.cfi_def_cfa_offset 24
 2291              		@ sp needed
 2292 0026 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2293              	.LVL241:
 2294              	.L119:
 2295              		.cfi_restore_state
 489:src/complex.c **** 		dn_divide(&tb, &ta, &t2);
 2296              		.loc 1 489 3 is_stmt 1 view .LVU501
 2297 002a 0DF15408 		add	r8, sp, #84
 2298 002e 2046     		mov	r0, r4
 2299 0030 4246     		mov	r2, r8
 2300 0032 03A9     		add	r1, sp, #12
 2301 0034 FFF7FEFF 		bl	dn_sincos
 2302              	.LVL242:
 490:src/complex.c **** 		decNumberTanh(&ta, a);
 2303              		.loc 1 490 3 view .LVU502
 2304 0038 4246     		mov	r2, r8
 2305 003a 03A9     		add	r1, sp, #12
 2306 003c 0CA8     		add	r0, sp, #48
 2307 003e FFF7FEFF 		bl	dn_divide
 2308              	.LVL243:
 491:src/complex.c **** 
 2309              		.loc 1 491 3 view .LVU503
ARM GAS  /tmp/ccT3noyS.s 			page 57


 2310 0042 3946     		mov	r1, r7
 2311 0044 03A8     		add	r0, sp, #12
 2312 0046 FFF7FEFF 		bl	decNumberTanh
 2313              	.LVL244:
 493:src/complex.c **** 
 2314              		.loc 1 493 3 view .LVU504
 495:src/complex.c **** 	}
 2315              		.loc 1 495 3 is_stmt 0 view .LVU505
 2316 004a 094C     		ldr	r4, .L122
 2317              	.LVL245:
 493:src/complex.c **** 
 2318              		.loc 1 493 3 view .LVU506
 2319 004c 0CAA     		add	r2, sp, #48
 2320 004e 03A9     		add	r1, sp, #12
 2321 0050 4046     		mov	r0, r8
 2322 0052 FFF7FEFF 		bl	dn_multiply
 2323              	.LVL246:
 495:src/complex.c **** 	}
 2324              		.loc 1 495 3 is_stmt 1 view .LVU507
 2325 0056 CDF80480 		str	r8, [sp, #4]
 2326 005a 0CAB     		add	r3, sp, #48
 2327 005c 03AA     		add	r2, sp, #12
 2328 005e 3146     		mov	r1, r6
 2329 0060 2846     		mov	r0, r5
 2330 0062 0094     		str	r4, [sp]
 2331 0064 FFF7FEFF 		bl	cmplxDivide
 2332              	.LVL247:
 2333              		.loc 1 498 1 is_stmt 0 view .LVU508
 2334 0068 1EB0     		add	sp, sp, #120
 2335              		.cfi_def_cfa_offset 24
 2336              		@ sp needed
 2337 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2338              	.LVL248:
 2339              	.L123:
 2340              		.loc 1 498 1 view .LVU509
 2341 006e 00BF     		.align	2
 2342              	.L122:
 2343 0070 00000000 		.word	const_1
 2344              		.cfi_endproc
 2345              	.LFE31:
 2347              		.section	.text.cmplx_1x,"ax",%progbits
 2348              		.align	1
 2349              		.p2align 2,,3
 2350              		.global	cmplx_1x
 2351              		.syntax unified
 2352              		.thumb
 2353              		.thumb_func
 2354              		.fpu fpv4-sp-d16
 2356              	cmplx_1x:
 2357              	.LVL249:
 2358              	.LFB32:
 499:src/complex.c **** 
 500:src/complex.c **** 
 501:src/complex.c **** void cmplx_1x(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 2359              		.loc 1 501 85 is_stmt 1 view -0
 2360              		.cfi_startproc
 2361              		@ args = 0, pretend = 0, frame = 144
ARM GAS  /tmp/ccT3noyS.s 			page 58


 2362              		@ frame_needed = 0, uses_anonymous_args = 0
 502:src/complex.c **** 	decNumber t, u, s, c;
 2363              		.loc 1 502 2 view .LVU511
 503:src/complex.c **** 
 504:src/complex.c **** 	decNumberMod(&u, a, &const_2);
 2364              		.loc 1 504 2 view .LVU512
 501:src/complex.c **** 	decNumber t, u, s, c;
 2365              		.loc 1 501 85 is_stmt 0 view .LVU513
 2366 0000 70B5     		push	{r4, r5, r6, lr}
 2367              		.cfi_def_cfa_offset 16
 2368              		.cfi_offset 4, -16
 2369              		.cfi_offset 5, -12
 2370              		.cfi_offset 6, -8
 2371              		.cfi_offset 14, -4
 2372 0002 A4B0     		sub	sp, sp, #144
 2373              		.cfi_def_cfa_offset 160
 501:src/complex.c **** 	decNumber t, u, s, c;
 2374              		.loc 1 501 85 view .LVU514
 2375 0004 0546     		mov	r5, r0
 2376 0006 0C46     		mov	r4, r1
 2377              		.loc 1 504 2 view .LVU515
 2378 0008 09A8     		add	r0, sp, #36
 2379              	.LVL250:
 2380              		.loc 1 504 2 view .LVU516
 2381 000a 1146     		mov	r1, r2
 2382              	.LVL251:
 2383              		.loc 1 504 2 view .LVU517
 2384 000c 124A     		ldr	r2, .L126
 2385              	.LVL252:
 501:src/complex.c **** 	decNumber t, u, s, c;
 2386              		.loc 1 501 85 view .LVU518
 2387 000e 1E46     		mov	r6, r3
 2388              		.loc 1 504 2 view .LVU519
 2389 0010 FFF7FEFF 		bl	decNumberMod
 2390              	.LVL253:
 505:src/complex.c **** 	dn_mulPI(&t, &u);
 2391              		.loc 1 505 2 is_stmt 1 view .LVU520
 2392 0014 09A9     		add	r1, sp, #36
 2393 0016 6846     		mov	r0, sp
 2394 0018 FFF7FEFF 		bl	dn_mulPI
 2395              	.LVL254:
 506:src/complex.c **** 	sincosTaylor(&t, &s, &c);
 2396              		.loc 1 506 2 view .LVU521
 2397 001c 1BAA     		add	r2, sp, #108
 2398 001e 6846     		mov	r0, sp
 2399 0020 12A9     		add	r1, sp, #72
 2400 0022 FFF7FEFF 		bl	sincosTaylor
 2401              	.LVL255:
 507:src/complex.c **** 	dn_mulPI(&u, b);
 2402              		.loc 1 507 2 view .LVU522
 2403 0026 3146     		mov	r1, r6
 2404 0028 09A8     		add	r0, sp, #36
 2405 002a FFF7FEFF 		bl	dn_mulPI
 2406              	.LVL256:
 508:src/complex.c **** 	dn_minus(&t, &u);
 2407              		.loc 1 508 2 view .LVU523
 2408 002e 09A9     		add	r1, sp, #36
ARM GAS  /tmp/ccT3noyS.s 			page 59


 2409 0030 6846     		mov	r0, sp
 2410 0032 FFF7FEFF 		bl	dn_minus
 2411              	.LVL257:
 509:src/complex.c **** 	dn_exp(&u, &t);
 2412              		.loc 1 509 2 view .LVU524
 2413 0036 6946     		mov	r1, sp
 2414 0038 09A8     		add	r0, sp, #36
 2415 003a FFF7FEFF 		bl	dn_exp
 2416              	.LVL258:
 510:src/complex.c **** 	cmplxMultiplyReal(rx, ry, &c, &s, &u);
 2417              		.loc 1 510 2 view .LVU525
 2418              	.LBB164:
 2419              	.LBI164:
  92:src/complex.c **** 		const decNumber *a, const decNumber *b,
 2420              		.loc 1 92 13 view .LVU526
 2421              	.LBB165:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 2422              		.loc 1 95 2 view .LVU527
 2423 003e 09AA     		add	r2, sp, #36
 2424              	.LVL259:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 2425              		.loc 1 95 2 is_stmt 0 view .LVU528
 2426 0040 1BA9     		add	r1, sp, #108
 2427              	.LVL260:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 2428              		.loc 1 95 2 view .LVU529
 2429 0042 2846     		mov	r0, r5
 2430 0044 FFF7FEFF 		bl	dn_multiply
 2431              	.LVL261:
  96:src/complex.c **** }
 2432              		.loc 1 96 2 is_stmt 1 view .LVU530
 2433 0048 09AA     		add	r2, sp, #36
 2434              	.LVL262:
  96:src/complex.c **** }
 2435              		.loc 1 96 2 is_stmt 0 view .LVU531
 2436 004a 12A9     		add	r1, sp, #72
 2437              	.LVL263:
  96:src/complex.c **** }
 2438              		.loc 1 96 2 view .LVU532
 2439 004c 2046     		mov	r0, r4
 2440 004e FFF7FEFF 		bl	dn_multiply
 2441              	.LVL264:
  96:src/complex.c **** }
 2442              		.loc 1 96 2 view .LVU533
 2443              	.LBE165:
 2444              	.LBE164:
 511:src/complex.c **** }
 2445              		.loc 1 511 1 view .LVU534
 2446 0052 24B0     		add	sp, sp, #144
 2447              		.cfi_def_cfa_offset 16
 2448              		@ sp needed
 2449 0054 70BD     		pop	{r4, r5, r6, pc}
 2450              	.LVL265:
 2451              	.L127:
 2452              		.loc 1 511 1 view .LVU535
 2453 0056 00BF     		.align	2
 2454              	.L126:
ARM GAS  /tmp/ccT3noyS.s 			page 60


 2455 0058 00000000 		.word	const_2
 2456              		.cfi_endproc
 2457              	.LFE32:
 2459              		.section	.text.cmplxLn,"ax",%progbits
 2460              		.align	1
 2461              		.p2align 2,,3
 2462              		.global	cmplxLn
 2463              		.syntax unified
 2464              		.thumb
 2465              		.thumb_func
 2466              		.fpu fpv4-sp-d16
 2468              	cmplxLn:
 2469              	.LVL266:
 2470              	.LFB33:
 512:src/complex.c **** 
 513:src/complex.c **** // ln(a + i b) = ln(sqrt(a*a + b*b)) + i (2*arctan(signum(b)) - arctan(a/b))
 514:src/complex.c **** // signum(b) = 1 if b>0, 0 if b=0, -1 if b<0, atan(1) = pi/4
 515:src/complex.c **** void cmplxLn(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 2471              		.loc 1 515 84 is_stmt 1 view -0
 2472              		.cfi_startproc
 2473              		@ args = 0, pretend = 0, frame = 40
 2474              		@ frame_needed = 0, uses_anonymous_args = 0
 516:src/complex.c **** #ifndef TINY_BUILD
 517:src/complex.c **** 	decNumber u;
 2475              		.loc 1 517 2 view .LVU537
 518:src/complex.c **** 
 519:src/complex.c **** 	if (dn_eq0(b)) {
 2476              		.loc 1 519 2 view .LVU538
 515:src/complex.c **** #ifndef TINY_BUILD
 2477              		.loc 1 515 84 is_stmt 0 view .LVU539
 2478 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2479              		.cfi_def_cfa_offset 20
 2480              		.cfi_offset 4, -20
 2481              		.cfi_offset 5, -16
 2482              		.cfi_offset 6, -12
 2483              		.cfi_offset 7, -8
 2484              		.cfi_offset 14, -4
 2485 0002 0646     		mov	r6, r0
 2486 0004 8BB0     		sub	sp, sp, #44
 2487              		.cfi_def_cfa_offset 64
 2488              		.loc 1 519 6 view .LVU540
 2489 0006 1846     		mov	r0, r3
 2490              	.LVL267:
 515:src/complex.c **** #ifndef TINY_BUILD
 2491              		.loc 1 515 84 view .LVU541
 2492 0008 1C46     		mov	r4, r3
 2493 000a 0F46     		mov	r7, r1
 2494 000c 1546     		mov	r5, r2
 2495              		.loc 1 519 6 view .LVU542
 2496 000e FFF7FEFF 		bl	dn_eq0
 2497              	.LVL268:
 2498              		.loc 1 519 5 view .LVU543
 2499 0012 A0B9     		cbnz	r0, .L139
 520:src/complex.c **** 		if (dn_eq0(a)) {
 521:src/complex.c **** 			cmplx_NaN(rx, ry);
 522:src/complex.c **** 		} else if (decNumberIsNegative(a)) {
 523:src/complex.c **** 			dn_minus(&u, a);
ARM GAS  /tmp/ccT3noyS.s 			page 61


 524:src/complex.c **** 			dn_ln(rx, &u);
 525:src/complex.c **** 			decNumberPI(ry);
 526:src/complex.c **** 		} else {
 527:src/complex.c **** 			decNumberZero(ry);
 528:src/complex.c **** 			dn_ln(rx, a);
 529:src/complex.c **** 		}
 530:src/complex.c **** 		return;
 531:src/complex.c **** 	}
 532:src/complex.c **** 	if (decNumberIsSpecial(a)  || decNumberIsSpecial(b)) {
 2500              		.loc 1 532 2 is_stmt 1 view .LVU544
 2501              		.loc 1 532 6 is_stmt 0 view .LVU545
 2502 0014 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 2503              		.loc 1 532 5 view .LVU546
 2504 0016 13F0700F 		tst	r3, #112
 2505 001a 1CD0     		beq	.L140
 2506              	.L133:
 533:src/complex.c **** 		if (decNumberIsNaN(a) || decNumberIsNaN(b)) {
 2507              		.loc 1 533 3 is_stmt 1 view .LVU547
 2508              		.loc 1 533 6 is_stmt 0 view .LVU548
 2509 001c 13F0300F 		tst	r3, #48
 2510 0020 11D1     		bne	.L135
 2511              		.loc 1 533 28 discriminator 1 view .LVU549
 2512 0022 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2513              		.loc 1 533 25 discriminator 1 view .LVU550
 2514 0024 13F0300F 		tst	r3, #48
 2515 0028 0DD1     		bne	.L135
 534:src/complex.c **** 			cmplx_NaN(rx, ry);
 535:src/complex.c **** 		} else {
 536:src/complex.c **** 			if (decNumberIsNegative(b))
 2516              		.loc 1 536 4 is_stmt 1 view .LVU551
 2517              		.loc 1 536 7 is_stmt 0 view .LVU552
 2518 002a 1B06     		lsls	r3, r3, #24
 537:src/complex.c **** 				set_neginf(ry);
 2519              		.loc 1 537 5 view .LVU553
 2520 002c 3846     		mov	r0, r7
 536:src/complex.c **** 				set_neginf(ry);
 2521              		.loc 1 536 7 view .LVU554
 2522 002e 32D4     		bmi	.L141
 2523              	.LVL269:
 538:src/complex.c **** 			else
 539:src/complex.c **** 				set_inf(ry);
 2524              		.loc 1 539 5 is_stmt 1 view .LVU555
 2525 0030 FFF7FEFF 		bl	set_inf
 2526              	.LVL270:
 2527              	.L137:
 540:src/complex.c **** 			set_inf(rx);
 2528              		.loc 1 540 4 view .LVU556
 2529 0034 3046     		mov	r0, r6
 2530 0036 FFF7FEFF 		bl	set_inf
 2531              	.LVL271:
 541:src/complex.c **** 		}
 542:src/complex.c **** 	} else {
 543:src/complex.c **** 		cmplxToPolar(&u, ry, a, b);
 544:src/complex.c **** 		dn_ln(rx, &u);
 545:src/complex.c **** 	}
 546:src/complex.c **** #endif
 547:src/complex.c **** }
ARM GAS  /tmp/ccT3noyS.s 			page 62


 2532              		.loc 1 547 1 is_stmt 0 view .LVU557
 2533 003a 0BB0     		add	sp, sp, #44
 2534              		.cfi_remember_state
 2535              		.cfi_def_cfa_offset 20
 2536              		@ sp needed
 2537 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 2538              	.LVL272:
 2539              	.L139:
 2540              		.cfi_restore_state
 520:src/complex.c **** 			cmplx_NaN(rx, ry);
 2541              		.loc 1 520 3 is_stmt 1 view .LVU558
 520:src/complex.c **** 			cmplx_NaN(rx, ry);
 2542              		.loc 1 520 7 is_stmt 0 view .LVU559
 2543 003e 2846     		mov	r0, r5
 2544 0040 FFF7FEFF 		bl	dn_eq0
 2545              	.LVL273:
 520:src/complex.c **** 			cmplx_NaN(rx, ry);
 2546              		.loc 1 520 6 view .LVU560
 2547 0044 D8B1     		cbz	r0, .L130
 2548              	.L135:
 521:src/complex.c **** 		} else if (decNumberIsNegative(a)) {
 2549              		.loc 1 521 4 is_stmt 1 view .LVU561
 2550              	.LVL274:
 2551              	.LBB166:
 2552              	.LBI166:
  75:src/complex.c **** 	set_NaN(x);
 2553              		.loc 1 75 6 view .LVU562
 2554              	.LBB167:
  76:src/complex.c **** 	set_NaN(y);
 2555              		.loc 1 76 2 view .LVU563
 2556 0046 3046     		mov	r0, r6
 2557 0048 FFF7FEFF 		bl	set_NaN
 2558              	.LVL275:
  77:src/complex.c **** }
 2559              		.loc 1 77 2 view .LVU564
 2560 004c 3846     		mov	r0, r7
 2561 004e FFF7FEFF 		bl	set_NaN
 2562              	.LVL276:
 2563              	.L128:
  77:src/complex.c **** }
 2564              		.loc 1 77 2 is_stmt 0 view .LVU565
 2565              	.LBE167:
 2566              	.LBE166:
 2567              		.loc 1 547 1 view .LVU566
 2568 0052 0BB0     		add	sp, sp, #44
 2569              		.cfi_remember_state
 2570              		.cfi_def_cfa_offset 20
 2571              		@ sp needed
 2572 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 2573              	.LVL277:
 2574              	.L140:
 2575              		.cfi_restore_state
 532:src/complex.c **** 		if (decNumberIsNaN(a) || decNumberIsNaN(b)) {
 2576              		.loc 1 532 29 discriminator 1 view .LVU567
 2577 0056 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 2578 0058 12F0700F 		tst	r2, #112
 2579 005c DED1     		bne	.L133
ARM GAS  /tmp/ccT3noyS.s 			page 63


 543:src/complex.c **** 		dn_ln(rx, &u);
 2580              		.loc 1 543 3 is_stmt 1 view .LVU568
 2581              	.LVL278:
 2582              	.LBB168:
 2583              	.LBI168:
 255:src/complex.c **** 	do_atan2(t, y, x);
 2584              		.loc 1 255 6 view .LVU569
 2585              	.LBB169:
 256:src/complex.c **** 	cmplxR(r, y, x);
 2586              		.loc 1 256 2 view .LVU570
 2587 005e 2A46     		mov	r2, r5
 2588 0060 2146     		mov	r1, r4
 2589 0062 3846     		mov	r0, r7
 2590 0064 FFF7FEFF 		bl	do_atan2
 2591              	.LVL279:
 257:src/complex.c **** }
 2592              		.loc 1 257 2 view .LVU571
 2593 0068 2A46     		mov	r2, r5
 2594 006a 2146     		mov	r1, r4
 2595 006c 01A8     		add	r0, sp, #4
 2596              	.LVL280:
 257:src/complex.c **** }
 2597              		.loc 1 257 2 is_stmt 0 view .LVU572
 2598 006e FFF7FEFF 		bl	cmplxR
 2599              	.LVL281:
 257:src/complex.c **** }
 2600              		.loc 1 257 2 view .LVU573
 2601              	.LBE169:
 2602              	.LBE168:
 544:src/complex.c **** 	}
 2603              		.loc 1 544 3 is_stmt 1 view .LVU574
 2604 0072 01A9     		add	r1, sp, #4
 2605 0074 3046     		mov	r0, r6
 2606 0076 FFF7FEFF 		bl	dn_ln
 2607              	.LVL282:
 2608              		.loc 1 547 1 is_stmt 0 view .LVU575
 2609 007a 0BB0     		add	sp, sp, #44
 2610              		.cfi_remember_state
 2611              		.cfi_def_cfa_offset 20
 2612              		@ sp needed
 2613 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 2614              	.LVL283:
 2615              	.L130:
 2616              		.cfi_restore_state
 522:src/complex.c **** 			dn_minus(&u, a);
 2617              		.loc 1 522 10 is_stmt 1 view .LVU576
 522:src/complex.c **** 			dn_minus(&u, a);
 2618              		.loc 1 522 13 is_stmt 0 view .LVU577
 2619 007e 95F90830 		ldrsb	r3, [r5, #8]
 2620 0082 002B     		cmp	r3, #0
 2621 0084 0ADB     		blt	.L142
 527:src/complex.c **** 			dn_ln(rx, a);
 2622              		.loc 1 527 4 is_stmt 1 view .LVU578
 2623 0086 3846     		mov	r0, r7
 2624 0088 FFF7FEFF 		bl	decNumberZero
 2625              	.LVL284:
 528:src/complex.c **** 		}
ARM GAS  /tmp/ccT3noyS.s 			page 64


 2626              		.loc 1 528 4 view .LVU579
 2627 008c 2946     		mov	r1, r5
 2628 008e 3046     		mov	r0, r6
 2629 0090 FFF7FEFF 		bl	dn_ln
 2630              	.LVL285:
 530:src/complex.c **** 	}
 2631              		.loc 1 530 3 view .LVU580
 2632 0094 DDE7     		b	.L128
 2633              	.LVL286:
 2634              	.L141:
 537:src/complex.c **** 			else
 2635              		.loc 1 537 5 view .LVU581
 2636 0096 FFF7FEFF 		bl	set_neginf
 2637              	.LVL287:
 537:src/complex.c **** 			else
 2638              		.loc 1 537 5 is_stmt 0 view .LVU582
 2639 009a CBE7     		b	.L137
 2640              	.L142:
 523:src/complex.c **** 			dn_ln(rx, &u);
 2641              		.loc 1 523 4 is_stmt 1 view .LVU583
 2642 009c 2946     		mov	r1, r5
 2643 009e 01A8     		add	r0, sp, #4
 2644 00a0 FFF7FEFF 		bl	dn_minus
 2645              	.LVL288:
 524:src/complex.c **** 			decNumberPI(ry);
 2646              		.loc 1 524 4 view .LVU584
 2647 00a4 01A9     		add	r1, sp, #4
 2648 00a6 3046     		mov	r0, r6
 2649 00a8 FFF7FEFF 		bl	dn_ln
 2650              	.LVL289:
 525:src/complex.c **** 		} else {
 2651              		.loc 1 525 4 view .LVU585
 2652 00ac 3846     		mov	r0, r7
 2653 00ae FFF7FEFF 		bl	decNumberPI
 2654              	.LVL290:
 2655 00b2 CEE7     		b	.L128
 2656              		.cfi_endproc
 2657              	.LFE33:
 2659              		.section	.text.cmplxExp,"ax",%progbits
 2660              		.align	1
 2661              		.p2align 2,,3
 2662              		.global	cmplxExp
 2663              		.syntax unified
 2664              		.thumb
 2665              		.thumb_func
 2666              		.fpu fpv4-sp-d16
 2668              	cmplxExp:
 2669              	.LVL291:
 2670              	.LFB34:
 548:src/complex.c **** 
 549:src/complex.c **** // e ^ ( a + i b ) = e^a cos(b) + i e^a sin(b)
 550:src/complex.c **** void cmplxExp(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 2671              		.loc 1 550 85 view -0
 2672              		.cfi_startproc
 2673              		@ args = 0, pretend = 0, frame = 112
 2674              		@ frame_needed = 0, uses_anonymous_args = 0
 551:src/complex.c **** #ifndef TINY_BUILD
ARM GAS  /tmp/ccT3noyS.s 			page 65


 552:src/complex.c **** 	decNumber e, s, c;
 2675              		.loc 1 552 2 view .LVU587
 553:src/complex.c **** 
 554:src/complex.c **** 	if (dn_eq0(b)) {
 2676              		.loc 1 554 2 view .LVU588
 550:src/complex.c **** #ifndef TINY_BUILD
 2677              		.loc 1 550 85 is_stmt 0 view .LVU589
 2678 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2679              		.cfi_def_cfa_offset 20
 2680              		.cfi_offset 4, -20
 2681              		.cfi_offset 5, -16
 2682              		.cfi_offset 6, -12
 2683              		.cfi_offset 7, -8
 2684              		.cfi_offset 14, -4
 2685 0002 0746     		mov	r7, r0
 2686 0004 9DB0     		sub	sp, sp, #116
 2687              		.cfi_def_cfa_offset 136
 2688              		.loc 1 554 6 view .LVU590
 2689 0006 1846     		mov	r0, r3
 2690              	.LVL292:
 550:src/complex.c **** #ifndef TINY_BUILD
 2691              		.loc 1 550 85 view .LVU591
 2692 0008 1C46     		mov	r4, r3
 2693 000a 0E46     		mov	r6, r1
 2694 000c 1546     		mov	r5, r2
 2695              		.loc 1 554 6 view .LVU592
 2696 000e FFF7FEFF 		bl	dn_eq0
 2697              	.LVL293:
 2698              		.loc 1 554 5 view .LVU593
 2699 0012 78B9     		cbnz	r0, .L149
 555:src/complex.c **** 		dn_exp(rx, a);
 556:src/complex.c **** 		decNumberZero(ry);
 557:src/complex.c **** 	} else if (decNumberIsSpecial(a) || decNumberIsSpecial(b)) {
 2700              		.loc 1 557 9 is_stmt 1 view .LVU594
 2701              		.loc 1 557 12 is_stmt 0 view .LVU595
 2702 0014 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 2703 0016 13F0700F 		tst	r3, #112
 2704 001a 03D1     		bne	.L146
 2705              		.loc 1 557 35 discriminator 1 view .LVU596
 2706 001c 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2707 001e 13F0700F 		tst	r3, #112
 2708 0022 10D0     		beq	.L147
 2709              	.L146:
 558:src/complex.c **** 		cmplx_NaN(rx, ry);
 2710              		.loc 1 558 3 is_stmt 1 view .LVU597
 2711              	.LVL294:
 2712              	.LBB176:
 2713              	.LBI176:
  75:src/complex.c **** 	set_NaN(x);
 2714              		.loc 1 75 6 view .LVU598
 2715              	.LBB177:
  76:src/complex.c **** 	set_NaN(y);
 2716              		.loc 1 76 2 view .LVU599
 2717 0024 3846     		mov	r0, r7
 2718 0026 FFF7FEFF 		bl	set_NaN
 2719              	.LVL295:
  77:src/complex.c **** }
ARM GAS  /tmp/ccT3noyS.s 			page 66


 2720              		.loc 1 77 2 view .LVU600
 2721 002a 3046     		mov	r0, r6
 2722 002c FFF7FEFF 		bl	set_NaN
 2723              	.LVL296:
 2724              	.LBE177:
 2725              	.LBE176:
 559:src/complex.c **** 	} else {
 560:src/complex.c **** 		dn_exp(&e, a);
 561:src/complex.c **** 		dn_sincos(b, &s, &c);
 562:src/complex.c **** 		dn_multiply(rx, &e, &c);
 563:src/complex.c **** 		dn_multiply(ry, &e, &s);
 564:src/complex.c **** 	}
 565:src/complex.c **** #endif
 566:src/complex.c **** }
 2726              		.loc 1 566 1 is_stmt 0 view .LVU601
 2727 0030 1DB0     		add	sp, sp, #116
 2728              		.cfi_remember_state
 2729              		.cfi_def_cfa_offset 20
 2730              		@ sp needed
 2731 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 2732              	.LVL297:
 2733              	.L149:
 2734              		.cfi_restore_state
 555:src/complex.c **** 		decNumberZero(ry);
 2735              		.loc 1 555 3 is_stmt 1 view .LVU602
 2736 0034 2946     		mov	r1, r5
 2737 0036 3846     		mov	r0, r7
 2738 0038 FFF7FEFF 		bl	dn_exp
 2739              	.LVL298:
 556:src/complex.c **** 	} else if (decNumberIsSpecial(a) || decNumberIsSpecial(b)) {
 2740              		.loc 1 556 3 view .LVU603
 2741 003c 3046     		mov	r0, r6
 2742 003e FFF7FEFF 		bl	decNumberZero
 2743              	.LVL299:
 2744              		.loc 1 566 1 is_stmt 0 view .LVU604
 2745 0042 1DB0     		add	sp, sp, #116
 2746              		.cfi_remember_state
 2747              		.cfi_def_cfa_offset 20
 2748              		@ sp needed
 2749 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 2750              	.LVL300:
 2751              	.L147:
 2752              		.cfi_restore_state
 2753              	.LBB178:
 2754              	.LBI178:
 550:src/complex.c **** #ifndef TINY_BUILD
 2755              		.loc 1 550 6 is_stmt 1 view .LVU605
 2756              	.LBB179:
 560:src/complex.c **** 		dn_sincos(b, &s, &c);
 2757              		.loc 1 560 3 view .LVU606
 2758 0046 2946     		mov	r1, r5
 2759 0048 01A8     		add	r0, sp, #4
 2760 004a FFF7FEFF 		bl	dn_exp
 2761              	.LVL301:
 561:src/complex.c **** 		dn_multiply(rx, &e, &c);
 2762              		.loc 1 561 3 view .LVU607
 2763 004e 2046     		mov	r0, r4
ARM GAS  /tmp/ccT3noyS.s 			page 67


 2764 0050 13AA     		add	r2, sp, #76
 2765 0052 0AA9     		add	r1, sp, #40
 2766 0054 FFF7FEFF 		bl	dn_sincos
 2767              	.LVL302:
 562:src/complex.c **** 		dn_multiply(ry, &e, &s);
 2768              		.loc 1 562 3 view .LVU608
 2769 0058 13AA     		add	r2, sp, #76
 2770 005a 01A9     		add	r1, sp, #4
 2771 005c 3846     		mov	r0, r7
 2772 005e FFF7FEFF 		bl	dn_multiply
 2773              	.LVL303:
 563:src/complex.c **** 	}
 2774              		.loc 1 563 3 view .LVU609
 2775 0062 0AAA     		add	r2, sp, #40
 2776 0064 01A9     		add	r1, sp, #4
 2777 0066 3046     		mov	r0, r6
 2778 0068 FFF7FEFF 		bl	dn_multiply
 2779              	.LVL304:
 563:src/complex.c **** 	}
 2780              		.loc 1 563 3 is_stmt 0 view .LVU610
 2781              	.LBE179:
 2782              	.LBE178:
 2783              		.loc 1 566 1 view .LVU611
 2784 006c 1DB0     		add	sp, sp, #116
 2785              		.cfi_def_cfa_offset 20
 2786              		@ sp needed
 2787 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 2788              		.loc 1 566 1 view .LVU612
 2789              		.cfi_endproc
 2790              	.LFE34:
 2792              		.section	.text.cmplxPower,"ax",%progbits
 2793              		.align	1
 2794              		.p2align 2,,3
 2795              		.global	cmplxPower
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2799              		.fpu fpv4-sp-d16
 2801              	cmplxPower:
 2802              	.LVL305:
 2803              	.LFB16:
 274:src/complex.c **** #ifndef TINY_BUILD
 2804              		.loc 1 274 43 is_stmt 1 view -0
 2805              		.cfi_startproc
 2806              		@ args = 8, pretend = 0, frame = 144
 2807              		@ frame_needed = 0, uses_anonymous_args = 0
 274:src/complex.c **** #ifndef TINY_BUILD
 2808              		.loc 1 274 43 is_stmt 0 view .LVU614
 2809 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2810              		.cfi_def_cfa_offset 20
 2811              		.cfi_offset 4, -20
 2812              		.cfi_offset 5, -16
 2813              		.cfi_offset 6, -12
 2814              		.cfi_offset 7, -8
 2815              		.cfi_offset 14, -4
 2816 0002 0546     		mov	r5, r0
 2817 0004 A7B0     		sub	sp, sp, #156
ARM GAS  /tmp/ccT3noyS.s 			page 68


 2818              		.cfi_def_cfa_offset 176
 278:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2819              		.loc 1 278 6 view .LVU615
 2820 0006 1046     		mov	r0, r2
 2821              	.LVL306:
 274:src/complex.c **** #ifndef TINY_BUILD
 2822              		.loc 1 274 43 view .LVU616
 2823 0008 1646     		mov	r6, r2
 2824 000a 0C46     		mov	r4, r1
 276:src/complex.c **** 
 2825              		.loc 1 276 2 is_stmt 1 view .LVU617
 278:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2826              		.loc 1 278 2 view .LVU618
 274:src/complex.c **** #ifndef TINY_BUILD
 2827              		.loc 1 274 43 is_stmt 0 view .LVU619
 2828 000c 1F46     		mov	r7, r3
 278:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2829              		.loc 1 278 6 view .LVU620
 2830 000e FFF7FEFF 		bl	dn_eq0
 2831              	.LVL307:
 278:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2832              		.loc 1 278 5 view .LVU621
 2833 0012 18B1     		cbz	r0, .L151
 278:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2834              		.loc 1 278 19 discriminator 1 view .LVU622
 2835 0014 3846     		mov	r0, r7
 2836 0016 FFF7FEFF 		bl	dn_eq0
 2837              	.LVL308:
 278:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2838              		.loc 1 278 16 discriminator 1 view .LVU623
 2839 001a B8B9     		cbnz	r0, .L167
 2840              	.L151:
 286:src/complex.c **** 		cmplxMultiply(&f1, &f2, &e1, &e2, c, d);
 2841              		.loc 1 286 3 is_stmt 1 view .LVU624
 2842 001c 3B46     		mov	r3, r7
 2843 001e 3246     		mov	r2, r6
 2844 0020 0BA9     		add	r1, sp, #44
 2845 0022 02A8     		add	r0, sp, #8
 2846 0024 FFF7FEFF 		bl	cmplxLn
 2847              	.LVL309:
 287:src/complex.c **** 		cmplxExp(rx, ry, &f1, &f2);
 2848              		.loc 1 287 3 view .LVU625
 2849 0028 2D99     		ldr	r1, [sp, #180]
 2850 002a 0191     		str	r1, [sp, #4]
 2851 002c 2C99     		ldr	r1, [sp, #176]
 2852 002e 0091     		str	r1, [sp]
 2853 0030 0BAB     		add	r3, sp, #44
 2854 0032 02AA     		add	r2, sp, #8
 2855 0034 1DA9     		add	r1, sp, #116
 2856 0036 14A8     		add	r0, sp, #80
 2857 0038 FFF7FEFF 		bl	cmplxMultiply
 2858              	.LVL310:
 288:src/complex.c **** 	}
 2859              		.loc 1 288 3 view .LVU626
 2860 003c 1DAB     		add	r3, sp, #116
 2861 003e 14AA     		add	r2, sp, #80
 2862 0040 2146     		mov	r1, r4
ARM GAS  /tmp/ccT3noyS.s 			page 69


 2863 0042 2846     		mov	r0, r5
 2864 0044 FFF7FEFF 		bl	cmplxExp
 2865              	.LVL311:
 2866              	.L150:
 291:src/complex.c **** 
 2867              		.loc 1 291 1 is_stmt 0 view .LVU627
 2868 0048 27B0     		add	sp, sp, #156
 2869              		.cfi_remember_state
 2870              		.cfi_def_cfa_offset 20
 2871              		@ sp needed
 2872 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 2873              	.LVL312:
 2874              	.L167:
 2875              		.cfi_restore_state
 2876              	.LBB184:
 2877              	.LBI184:
 272:src/complex.c **** 		const decNumber *a, const decNumber *b,
 2878              		.loc 1 272 6 is_stmt 1 view .LVU628
 2879              	.LBB185:
 279:src/complex.c **** 			cmplx_NaN(rx, ry);
 2880              		.loc 1 279 3 view .LVU629
 279:src/complex.c **** 			cmplx_NaN(rx, ry);
 2881              		.loc 1 279 7 is_stmt 0 view .LVU630
 2882 004c 2C98     		ldr	r0, [sp, #176]
 2883 004e FFF7FEFF 		bl	dn_eq0
 2884              	.LVL313:
 279:src/complex.c **** 			cmplx_NaN(rx, ry);
 2885              		.loc 1 279 6 view .LVU631
 2886 0052 18B1     		cbz	r0, .L152
 279:src/complex.c **** 			cmplx_NaN(rx, ry);
 2887              		.loc 1 279 20 view .LVU632
 2888 0054 2D98     		ldr	r0, [sp, #180]
 2889 0056 FFF7FEFF 		bl	dn_eq0
 2890              	.LVL314:
 279:src/complex.c **** 			cmplx_NaN(rx, ry);
 2891              		.loc 1 279 17 view .LVU633
 2892 005a 38B9     		cbnz	r0, .L168
 2893              	.L152:
 282:src/complex.c **** 			decNumberZero(ry);
 2894              		.loc 1 282 4 is_stmt 1 view .LVU634
 2895 005c 2846     		mov	r0, r5
 2896 005e FFF7FEFF 		bl	decNumberZero
 2897              	.LVL315:
 283:src/complex.c **** 		}
 2898              		.loc 1 283 4 view .LVU635
 2899 0062 2046     		mov	r0, r4
 2900 0064 FFF7FEFF 		bl	decNumberZero
 2901              	.LVL316:
 2902              	.LBE185:
 2903              	.LBE184:
 291:src/complex.c **** 
 2904              		.loc 1 291 1 is_stmt 0 view .LVU636
 2905 0068 27B0     		add	sp, sp, #156
 2906              		.cfi_remember_state
 2907              		.cfi_def_cfa_offset 20
 2908              		@ sp needed
 2909 006a F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccT3noyS.s 			page 70


 2910              	.LVL317:
 2911              	.L168:
 2912              		.cfi_restore_state
 2913              	.LBB189:
 2914              	.LBB188:
 280:src/complex.c **** 		else {
 2915              		.loc 1 280 4 is_stmt 1 view .LVU637
 2916              	.LBB186:
 2917              	.LBI186:
  75:src/complex.c **** 	set_NaN(x);
 2918              		.loc 1 75 6 view .LVU638
 2919              	.LBB187:
  76:src/complex.c **** 	set_NaN(y);
 2920              		.loc 1 76 2 view .LVU639
 2921 006c 2846     		mov	r0, r5
 2922 006e FFF7FEFF 		bl	set_NaN
 2923              	.LVL318:
  77:src/complex.c **** }
 2924              		.loc 1 77 2 view .LVU640
 2925 0072 2046     		mov	r0, r4
 2926 0074 FFF7FEFF 		bl	set_NaN
 2927              	.LVL319:
  78:src/complex.c **** 
 2928              		.loc 1 78 1 is_stmt 0 view .LVU641
 2929 0078 E6E7     		b	.L150
 2930              	.LBE187:
 2931              	.LBE186:
 2932              	.LBE188:
 2933              	.LBE189:
 2934              		.cfi_endproc
 2935              	.LFE16:
 2937 007a 00BF     		.section	.text.cmplxXRoot,"ax",%progbits
 2938              		.align	1
 2939              		.p2align 2,,3
 2940              		.global	cmplxXRoot
 2941              		.syntax unified
 2942              		.thumb
 2943              		.thumb_func
 2944              		.fpu fpv4-sp-d16
 2946              	cmplxXRoot:
 2947              	.LVL320:
 2948              	.LFB17:
 297:src/complex.c **** 	decNumber g, h;
 2949              		.loc 1 297 43 is_stmt 1 view -0
 2950              		.cfi_startproc
 2951              		@ args = 8, pretend = 0, frame = 72
 2952              		@ frame_needed = 0, uses_anonymous_args = 0
 298:src/complex.c **** 
 2953              		.loc 1 298 2 view .LVU643
 300:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2954              		.loc 1 300 2 view .LVU644
 297:src/complex.c **** 	decNumber g, h;
 2955              		.loc 1 297 43 is_stmt 0 view .LVU645
 2956 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2957              		.cfi_def_cfa_offset 28
 2958              		.cfi_offset 4, -28
 2959              		.cfi_offset 5, -24
ARM GAS  /tmp/ccT3noyS.s 			page 71


 2960              		.cfi_offset 6, -20
 2961              		.cfi_offset 7, -16
 2962              		.cfi_offset 8, -12
 2963              		.cfi_offset 9, -8
 2964              		.cfi_offset 14, -4
 2965 0004 95B0     		sub	sp, sp, #84
 2966              		.cfi_def_cfa_offset 112
 300:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2967              		.loc 1 300 2 view .LVU646
 2968 0006 0DF12C09 		add	r9, sp, #44
 2969 000a 0DF10808 		add	r8, sp, #8
 297:src/complex.c **** 	decNumber g, h;
 2970              		.loc 1 297 43 view .LVU647
 2971 000e 0446     		mov	r4, r0
 2972 0010 0D46     		mov	r5, r1
 2973 0012 1646     		mov	r6, r2
 2974 0014 1F46     		mov	r7, r3
 300:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2975              		.loc 1 300 2 view .LVU648
 2976 0016 4946     		mov	r1, r9
 2977              	.LVL321:
 300:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2978              		.loc 1 300 2 view .LVU649
 2979 0018 DDE91C23 		ldrd	r2, r3, [sp, #112]
 2980              	.LVL322:
 300:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2981              		.loc 1 300 2 view .LVU650
 2982 001c 4046     		mov	r0, r8
 2983              	.LVL323:
 300:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2984              		.loc 1 300 2 view .LVU651
 2985 001e FFF7FEFF 		bl	cmplxRecip
 2986              	.LVL324:
 301:src/complex.c **** }
 2987              		.loc 1 301 2 is_stmt 1 view .LVU652
 2988 0022 CDE90089 		strd	r8, r9, [sp]
 2989 0026 3B46     		mov	r3, r7
 2990 0028 3246     		mov	r2, r6
 2991 002a 2946     		mov	r1, r5
 2992 002c 2046     		mov	r0, r4
 2993 002e FFF7FEFF 		bl	cmplxPower
 2994              	.LVL325:
 302:src/complex.c **** #endif
 2995              		.loc 1 302 1 is_stmt 0 view .LVU653
 2996 0032 15B0     		add	sp, sp, #84
 2997              		.cfi_def_cfa_offset 28
 2998              		@ sp needed
 2999 0034 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 302:src/complex.c **** #endif
 3000              		.loc 1 302 1 view .LVU654
 3001              		.cfi_endproc
 3002              	.LFE17:
 3004              		.section	.text.cmplxCubeRoot,"ax",%progbits
 3005              		.align	1
 3006              		.p2align 2,,3
 3007              		.global	cmplxCubeRoot
 3008              		.syntax unified
ARM GAS  /tmp/ccT3noyS.s 			page 72


 3009              		.thumb
 3010              		.thumb_func
 3011              		.fpu fpv4-sp-d16
 3013              	cmplxCubeRoot:
 3014              	.LVL326:
 3015              	.LFB22:
 376:src/complex.c **** #ifndef TINY_BUILD
 3016              		.loc 1 376 90 is_stmt 1 view -0
 3017              		.cfi_startproc
 3018              		@ args = 0, pretend = 0, frame = 48
 3019              		@ frame_needed = 0, uses_anonymous_args = 0
 378:src/complex.c **** 
 3020              		.loc 1 378 2 view .LVU656
 380:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 3021              		.loc 1 380 2 view .LVU657
 376:src/complex.c **** #ifndef TINY_BUILD
 3022              		.loc 1 376 90 is_stmt 0 view .LVU658
 3023 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3024              		.cfi_def_cfa_offset 20
 3025              		.cfi_offset 4, -20
 3026              		.cfi_offset 5, -16
 3027              		.cfi_offset 6, -12
 3028              		.cfi_offset 7, -8
 3029              		.cfi_offset 14, -4
 3030 0002 8FB0     		sub	sp, sp, #60
 3031              		.cfi_def_cfa_offset 80
 380:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 3032              		.loc 1 380 2 view .LVU659
 3033 0004 05AE     		add	r6, sp, #20
 376:src/complex.c **** #ifndef TINY_BUILD
 3034              		.loc 1 376 90 view .LVU660
 3035 0006 0446     		mov	r4, r0
 3036 0008 0D46     		mov	r5, r1
 3037              	.LBB190:
 3038              	.LBB191:
 267:src/complex.c **** }
 3039              		.loc 1 267 2 view .LVU661
 3040 000a 084F     		ldr	r7, .L173
 3041              	.LBE191:
 3042              	.LBE190:
 380:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 3043              		.loc 1 380 2 view .LVU662
 3044 000c 0849     		ldr	r1, .L173+4
 3045              	.LVL327:
 380:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 3046              		.loc 1 380 2 view .LVU663
 3047 000e 3046     		mov	r0, r6
 3048              	.LVL328:
 376:src/complex.c **** #ifndef TINY_BUILD
 3049              		.loc 1 376 90 view .LVU664
 3050 0010 CDE90232 		strd	r3, r2, [sp, #8]
 380:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 3051              		.loc 1 380 2 view .LVU665
 3052 0014 FFF7FEFF 		bl	decNumberRecip
 3053              	.LVL329:
 381:src/complex.c **** #endif
 3054              		.loc 1 381 2 is_stmt 1 view .LVU666
ARM GAS  /tmp/ccT3noyS.s 			page 73


 3055              	.LBB193:
 3056              	.LBI190:
 264:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3057              		.loc 1 264 13 view .LVU667
 3058              	.LBB192:
 267:src/complex.c **** }
 3059              		.loc 1 267 2 view .LVU668
 3060 0018 DDE90232 		ldrd	r3, r2, [sp, #8]
 3061 001c 0096     		str	r6, [sp]
 3062 001e 2946     		mov	r1, r5
 3063 0020 2046     		mov	r0, r4
 3064 0022 0197     		str	r7, [sp, #4]
 3065 0024 FFF7FEFF 		bl	cmplxPower
 3066              	.LVL330:
 267:src/complex.c **** }
 3067              		.loc 1 267 2 is_stmt 0 view .LVU669
 3068              	.LBE192:
 3069              	.LBE193:
 383:src/complex.c **** 
 3070              		.loc 1 383 1 view .LVU670
 3071 0028 0FB0     		add	sp, sp, #60
 3072              		.cfi_def_cfa_offset 20
 3073              		@ sp needed
 3074 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 3075              	.LVL331:
 3076              	.L174:
 383:src/complex.c **** 
 3077              		.loc 1 383 1 view .LVU671
 3078              		.align	2
 3079              	.L173:
 3080 002c 00000000 		.word	const_0
 3081 0030 00000000 		.word	const_3
 3082              		.cfi_endproc
 3083              	.LFE22:
 3085              		.section	.text.cmplxGamma_LnGamma,"ax",%progbits
 3086              		.align	1
 3087              		.p2align 2,,3
 3088              		.syntax unified
 3089              		.thumb
 3090              		.thumb_func
 3091              		.fpu fpv4-sp-d16
 3093              	cmplxGamma_LnGamma:
 3094              	.LVL332:
 3095              	.LFB36:
 567:src/complex.c **** 
 568:src/complex.c **** #ifndef TINY_BUILD
 569:src/complex.c **** static void c_lg(decNumber *rx, decNumber *ry, const decNumber *x, const decNumber *y) {
 570:src/complex.c **** 	decNumber s1, s2, t1, u1, u2, v1, v2, r;
 571:src/complex.c **** 	int k;
 572:src/complex.c **** 
 573:src/complex.c **** 	decNumberZero(&u1);
 574:src/complex.c **** 	decNumberZero(&u2);
 575:src/complex.c **** 	dn_add(&t1, x, &const_21);		// (t1, y)
 576:src/complex.c **** 	for (k=20; k>=0; k--) {
 577:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 578:src/complex.c **** 		cmplxDivideRealBy(&s1, &s2, gamma_consts[k], &t1, y);
 579:src/complex.c **** 		dn_dec(&t1);
ARM GAS  /tmp/ccT3noyS.s 			page 74


 580:src/complex.c **** 		cmplxAdd(&u1, &u2, &u1, &u2, &s1, &s2);
 581:src/complex.c **** 	}
 582:src/complex.c **** 	dn_add(&t1, &u1, &const_gammaC00);	// (t1, u2)
 583:src/complex.c **** 	cmplxLn(&s1, &s2, &t1, &u2);		// (s1, s2)
 584:src/complex.c **** 
 585:src/complex.c **** 	dn_add(&r, x, &const_gammaR);		// (r, y)
 586:src/complex.c **** 	cmplxLn(&u1, &u2, &r, y);
 587:src/complex.c **** 	dn_add(&t1, x, &const_0_5);		// (t1, y)
 588:src/complex.c **** 	cmplxMultiply(&v1, &v2, &t1, y, &u1, &u2);
 589:src/complex.c **** 	cmplxSubtract(&u1, &u2, &v1, &v2, &r, y);
 590:src/complex.c **** 	cmplxAdd(rx, ry, &u1, &u2, &s1, &s2);
 591:src/complex.c **** }
 592:src/complex.c **** #endif
 593:src/complex.c **** 
 594:src/complex.c **** static void cmplxGamma_LnGamma(decNumber *rx, decNumber *ry, const decNumber *xin, const decNumber 
 3096              		.loc 1 594 118 is_stmt 1 view -0
 3097              		.cfi_startproc
 3098              		@ args = 4, pretend = 0, frame = 408
 3099              		@ frame_needed = 0, uses_anonymous_args = 0
 595:src/complex.c **** #ifndef TINY_BUILD
 596:src/complex.c **** 	decNumber x, s1, s2, t1, t2, u1, u2;
 3100              		.loc 1 596 2 view .LVU673
 597:src/complex.c **** 	int reflec = 0;
 3101              		.loc 1 597 2 view .LVU674
 598:src/complex.c **** 
 599:src/complex.c **** 	// Check for special cases
 600:src/complex.c **** 	if (decNumberIsSpecial(xin) || decNumberIsSpecial(y)) {
 3102              		.loc 1 600 2 view .LVU675
 594:src/complex.c **** #ifndef TINY_BUILD
 3103              		.loc 1 594 118 is_stmt 0 view .LVU676
 3104 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3105              		.cfi_def_cfa_offset 36
 3106              		.cfi_offset 4, -36
 3107              		.cfi_offset 5, -32
 3108              		.cfi_offset 6, -28
 3109              		.cfi_offset 7, -24
 3110              		.cfi_offset 8, -20
 3111              		.cfi_offset 9, -16
 3112              		.cfi_offset 10, -12
 3113              		.cfi_offset 11, -8
 3114              		.cfi_offset 14, -4
 3115 0004 E9B0     		sub	sp, sp, #420
 3116              		.cfi_def_cfa_offset 456
 594:src/complex.c **** #ifndef TINY_BUILD
 3117              		.loc 1 594 118 view .LVU677
 3118 0006 0646     		mov	r6, r0
 3119 0008 0292     		str	r2, [sp, #8]
 3120              		.loc 1 600 6 view .LVU678
 3121 000a 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 3122              	.LVL333:
 3123              		.loc 1 600 5 view .LVU679
 3124 000c 12F0700F 		tst	r2, #112
 594:src/complex.c **** #ifndef TINY_BUILD
 3125              		.loc 1 594 118 view .LVU680
 3126 0010 0F46     		mov	r7, r1
 3127 0012 9B46     		mov	fp, r3
 3128              		.loc 1 600 5 view .LVU681
ARM GAS  /tmp/ccT3noyS.s 			page 75


 3129 0014 7BD1     		bne	.L176
 3130              		.loc 1 600 30 discriminator 1 view .LVU682
 3131 0016 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 3132              	.LVL334:
 3133              		.loc 1 600 30 discriminator 1 view .LVU683
 3134 0018 13F07004 		ands	r4, r3, #112
 3135 001c 77D1     		bne	.L176
 601:src/complex.c **** 		if (decNumberIsNaN(xin) || decNumberIsNaN(y))
 602:src/complex.c **** 			cmplx_NaN(rx, ry);
 603:src/complex.c **** 		else {
 604:src/complex.c **** 			if (decNumberIsInfinite(xin)) {
 605:src/complex.c **** 				if (decNumberIsInfinite(y))
 606:src/complex.c **** 					cmplx_NaN(rx, ry);
 607:src/complex.c **** 				else if (decNumberIsNegative(xin))
 608:src/complex.c **** 					cmplx_NaN(rx, ry);
 609:src/complex.c **** 				else {
 610:src/complex.c **** 					set_inf(rx);
 611:src/complex.c **** 					decNumberZero(ry);
 612:src/complex.c **** 				}
 613:src/complex.c **** 			} else {
 614:src/complex.c **** 				decNumberZero(rx);
 615:src/complex.c **** 				decNumberZero(ry);
 616:src/complex.c **** 			}
 617:src/complex.c **** 		}
 618:src/complex.c **** 		return;
 619:src/complex.c **** 	}
 620:src/complex.c **** 
 621:src/complex.c **** 	// Correct out argument and begin the inversion if it is negative
 622:src/complex.c **** 	if (decNumberIsNegative(xin)) {
 3136              		.loc 1 622 2 is_stmt 1 view .LVU684
 3137              		.loc 1 622 5 is_stmt 0 view .LVU685
 3138 001e 1306     		lsls	r3, r2, #24
 3139 0020 00F19480 		bmi	.L195
 623:src/complex.c **** 		reflec = 1;
 624:src/complex.c **** 		dn_1m(&t1, xin);
 625:src/complex.c **** 		if (dn_eq0(y) && is_int(&t1)) {
 626:src/complex.c **** 			cmplx_NaN(rx, ry);
 627:src/complex.c **** 			return;
 628:src/complex.c **** 		}
 629:src/complex.c **** 		dn_m1(&x, &t1);
 630:src/complex.c **** 		dn_minus(&t2, y);
 631:src/complex.c **** 	} else {
 632:src/complex.c **** 		dn_m1(&x, xin);
 3140              		.loc 1 632 3 is_stmt 1 view .LVU686
 3141 0024 0DF1140A 		add	r10, sp, #20
 3142 0028 0299     		ldr	r1, [sp, #8]
 3143              	.LVL335:
 3144              		.loc 1 632 3 is_stmt 0 view .LVU687
 3145 002a 5046     		mov	r0, r10
 3146              	.LVL336:
 633:src/complex.c ****         	decNumberCopy(&t2, y);
 3147              		.loc 1 633 10 view .LVU688
 3148 002c 0DF15C09 		add	r9, sp, #92
 632:src/complex.c ****         	decNumberCopy(&t2, y);
 3149              		.loc 1 632 3 view .LVU689
 3150 0030 FFF7FEFF 		bl	dn_m1
 3151              	.LVL337:
ARM GAS  /tmp/ccT3noyS.s 			page 76


 3152              		.loc 1 633 10 is_stmt 1 view .LVU690
 3153 0034 4846     		mov	r0, r9
 3154 0036 5946     		mov	r1, fp
 3155 0038 FFF7FEFF 		bl	decNumberCopy
 3156              	.LVL338:
 597:src/complex.c **** 
 3157              		.loc 1 597 6 is_stmt 0 view .LVU691
 3158 003c 0394     		str	r4, [sp, #12]
 3159              	.LVL339:
 3160              	.L184:
 634:src/complex.c **** 	}
 635:src/complex.c **** 
 636:src/complex.c **** 	// Sum the series
 637:src/complex.c **** 	c_lg(rx, ry, &x, &t2);
 3161              		.loc 1 637 2 is_stmt 1 view .LVU692
 3162              	.LBB217:
 3163              	.LBI217:
 569:src/complex.c **** 	decNumber s1, s2, t1, u1, u2, v1, v2, r;
 3164              		.loc 1 569 13 view .LVU693
 3165              	.LBB218:
 570:src/complex.c **** 	int k;
 3166              		.loc 1 570 2 view .LVU694
 571:src/complex.c **** 
 3167              		.loc 1 571 2 view .LVU695
 573:src/complex.c **** 	decNumberZero(&u2);
 3168              		.loc 1 573 2 view .LVU696
 3169 003e 3BAD     		add	r5, sp, #236
 3170 0040 2846     		mov	r0, r5
 574:src/complex.c **** 	dn_add(&t1, x, &const_21);		// (t1, y)
 3171              		.loc 1 574 2 is_stmt 0 view .LVU697
 3172 0042 44AC     		add	r4, sp, #272
 573:src/complex.c **** 	decNumberZero(&u2);
 3173              		.loc 1 573 2 view .LVU698
 3174 0044 FFF7FEFF 		bl	decNumberZero
 3175              	.LVL340:
 574:src/complex.c **** 	dn_add(&t1, x, &const_21);		// (t1, y)
 3176              		.loc 1 574 2 is_stmt 1 view .LVU699
 3177 0048 2046     		mov	r0, r4
 3178 004a FFF7FEFF 		bl	decNumberZero
 3179              	.LVL341:
 575:src/complex.c **** 	for (k=20; k>=0; k--) {
 3180              		.loc 1 575 2 view .LVU700
 3181 004e 7D4A     		ldr	r2, .L197
 3182 0050 DFF80882 		ldr	r8, .L197+24
 3183 0054 32A8     		add	r0, sp, #200
 3184 0056 5146     		mov	r1, r10
 3185 0058 FFF7FEFF 		bl	dn_add
 3186              	.LVL342:
 576:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 3187              		.loc 1 576 2 view .LVU701
 576:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 3188              		.loc 1 576 13 view .LVU702
 3189              	.L185:
 3190              	.LBB219:
 577:src/complex.c **** 		cmplxDivideRealBy(&s1, &s2, gamma_consts[k], &t1, y);
 3191              		.loc 1 577 3 view .LVU703
 578:src/complex.c **** 		dn_dec(&t1);
ARM GAS  /tmp/ccT3noyS.s 			page 77


 3192              		.loc 1 578 3 view .LVU704
 3193 005c 32AB     		add	r3, sp, #200
 3194 005e 58F8042D 		ldr	r2, [r8, #-4]!
 3195 0062 CDF80090 		str	r9, [sp]
 3196 0066 29A9     		add	r1, sp, #164
 3197 0068 20A8     		add	r0, sp, #128
 3198 006a FFF7FEFF 		bl	cmplxDivideRealBy
 3199              	.LVL343:
 579:src/complex.c **** 		cmplxAdd(&u1, &u2, &u1, &u2, &s1, &s2);
 3200              		.loc 1 579 3 view .LVU705
 3201 006e 32A8     		add	r0, sp, #200
 3202 0070 FFF7FEFF 		bl	dn_dec
 3203              	.LVL344:
 580:src/complex.c **** 	}
 3204              		.loc 1 580 3 view .LVU706
 3205              	.LBB220:
 3206              	.LBI220:
 136:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3207              		.loc 1 136 6 view .LVU707
 3208              	.LBB221:
 139:src/complex.c **** 	dn_add(ry, b, d);
 3209              		.loc 1 139 2 view .LVU708
 3210 0074 20AA     		add	r2, sp, #128
 3211              	.LVL345:
 139:src/complex.c **** 	dn_add(ry, b, d);
 3212              		.loc 1 139 2 is_stmt 0 view .LVU709
 3213 0076 2946     		mov	r1, r5
 3214 0078 2846     		mov	r0, r5
 3215 007a FFF7FEFF 		bl	dn_add
 3216              	.LVL346:
 140:src/complex.c **** }
 3217              		.loc 1 140 2 is_stmt 1 view .LVU710
 3218 007e 29AA     		add	r2, sp, #164
 3219              	.LVL347:
 140:src/complex.c **** }
 3220              		.loc 1 140 2 is_stmt 0 view .LVU711
 3221 0080 2146     		mov	r1, r4
 3222 0082 2046     		mov	r0, r4
 3223 0084 FFF7FEFF 		bl	dn_add
 3224              	.LVL348:
 140:src/complex.c **** }
 3225              		.loc 1 140 2 view .LVU712
 3226              	.LBE221:
 3227              	.LBE220:
 3228              	.LBE219:
 576:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 3229              		.loc 1 576 19 is_stmt 1 view .LVU713
 576:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 3230              		.loc 1 576 13 view .LVU714
 576:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 3231              		.loc 1 576 2 is_stmt 0 view .LVU715
 3232 0088 6F4B     		ldr	r3, .L197+4
 3233 008a 4345     		cmp	r3, r8
 3234 008c E6D1     		bne	.L185
 582:src/complex.c **** 	cmplxLn(&s1, &s2, &t1, &u2);		// (s1, s2)
 3235              		.loc 1 582 2 is_stmt 1 view .LVU716
 3236 008e 6F4A     		ldr	r2, .L197+8
ARM GAS  /tmp/ccT3noyS.s 			page 78


 3237 0090 2946     		mov	r1, r5
 3238 0092 32A8     		add	r0, sp, #200
 3239 0094 FFF7FEFF 		bl	dn_add
 3240              	.LVL349:
 583:src/complex.c **** 
 3241              		.loc 1 583 2 view .LVU717
 3242 0098 2346     		mov	r3, r4
 3243 009a 32AA     		add	r2, sp, #200
 3244 009c 29A9     		add	r1, sp, #164
 3245 009e 20A8     		add	r0, sp, #128
 3246 00a0 FFF7FEFF 		bl	cmplxLn
 3247              	.LVL350:
 585:src/complex.c **** 	cmplxLn(&u1, &u2, &r, y);
 3248              		.loc 1 585 2 view .LVU718
 3249 00a4 6A4A     		ldr	r2, .L197+12
 3250 00a6 5146     		mov	r1, r10
 3251 00a8 5FA8     		add	r0, sp, #380
 3252 00aa FFF7FEFF 		bl	dn_add
 3253              	.LVL351:
 586:src/complex.c **** 	dn_add(&t1, x, &const_0_5);		// (t1, y)
 3254              		.loc 1 586 2 view .LVU719
 3255 00ae 4B46     		mov	r3, r9
 3256 00b0 5FAA     		add	r2, sp, #380
 3257 00b2 2146     		mov	r1, r4
 3258 00b4 2846     		mov	r0, r5
 3259 00b6 FFF7FEFF 		bl	cmplxLn
 3260              	.LVL352:
 587:src/complex.c **** 	cmplxMultiply(&v1, &v2, &t1, y, &u1, &u2);
 3261              		.loc 1 587 2 view .LVU720
 3262 00ba 664A     		ldr	r2, .L197+16
 3263 00bc 5146     		mov	r1, r10
 3264 00be 32A8     		add	r0, sp, #200
 3265 00c0 FFF7FEFF 		bl	dn_add
 3266              	.LVL353:
 588:src/complex.c **** 	cmplxSubtract(&u1, &u2, &v1, &v2, &r, y);
 3267              		.loc 1 588 2 view .LVU721
 3268 00c4 4B46     		mov	r3, r9
 3269 00c6 32AA     		add	r2, sp, #200
 3270 00c8 56A9     		add	r1, sp, #344
 3271 00ca 4DA8     		add	r0, sp, #308
 3272 00cc CDE90054 		strd	r5, r4, [sp]
 3273 00d0 FFF7FEFF 		bl	cmplxMultiply
 3274              	.LVL354:
 589:src/complex.c **** 	cmplxAdd(rx, ry, &u1, &u2, &s1, &s2);
 3275              		.loc 1 589 2 view .LVU722
 3276              	.LBB222:
 3277              	.LBI222:
 144:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3278              		.loc 1 144 6 view .LVU723
 3279              	.LBB223:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 3280              		.loc 1 147 2 view .LVU724
 3281 00d4 5FAA     		add	r2, sp, #380
 3282              	.LVL355:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 3283              		.loc 1 147 2 is_stmt 0 view .LVU725
 3284 00d6 4DA9     		add	r1, sp, #308
ARM GAS  /tmp/ccT3noyS.s 			page 79


 3285              	.LVL356:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 3286              		.loc 1 147 2 view .LVU726
 3287 00d8 2846     		mov	r0, r5
 3288 00da FFF7FEFF 		bl	dn_subtract
 3289              	.LVL357:
 148:src/complex.c **** }
 3290              		.loc 1 148 2 is_stmt 1 view .LVU727
 3291 00de 4A46     		mov	r2, r9
 3292 00e0 56A9     		add	r1, sp, #344
 3293              	.LVL358:
 148:src/complex.c **** }
 3294              		.loc 1 148 2 is_stmt 0 view .LVU728
 3295 00e2 2046     		mov	r0, r4
 3296 00e4 FFF7FEFF 		bl	dn_subtract
 3297              	.LVL359:
 148:src/complex.c **** }
 3298              		.loc 1 148 2 view .LVU729
 3299              	.LBE223:
 3300              	.LBE222:
 590:src/complex.c **** }
 3301              		.loc 1 590 2 is_stmt 1 view .LVU730
 3302              	.LBB224:
 3303              	.LBI224:
 136:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3304              		.loc 1 136 6 view .LVU731
 3305              	.LBB225:
 139:src/complex.c **** 	dn_add(ry, b, d);
 3306              		.loc 1 139 2 view .LVU732
 3307 00e8 20AA     		add	r2, sp, #128
 3308              	.LVL360:
 139:src/complex.c **** 	dn_add(ry, b, d);
 3309              		.loc 1 139 2 is_stmt 0 view .LVU733
 3310 00ea 2946     		mov	r1, r5
 3311 00ec 3046     		mov	r0, r6
 3312 00ee FFF7FEFF 		bl	dn_add
 3313              	.LVL361:
 140:src/complex.c **** }
 3314              		.loc 1 140 2 is_stmt 1 view .LVU734
 3315 00f2 29AA     		add	r2, sp, #164
 3316              	.LVL362:
 140:src/complex.c **** }
 3317              		.loc 1 140 2 is_stmt 0 view .LVU735
 3318 00f4 2146     		mov	r1, r4
 3319 00f6 3846     		mov	r0, r7
 3320 00f8 FFF7FEFF 		bl	dn_add
 3321              	.LVL363:
 140:src/complex.c **** }
 3322              		.loc 1 140 2 view .LVU736
 3323              	.LBE225:
 3324              	.LBE224:
 3325              	.LBE218:
 3326              	.LBE217:
 638:src/complex.c **** 	if (!ln)
 3327              		.loc 1 638 2 is_stmt 1 view .LVU737
 3328              		.loc 1 638 5 is_stmt 0 view .LVU738
 3329 00fc 729B     		ldr	r3, [sp, #456]
ARM GAS  /tmp/ccT3noyS.s 			page 80


 3330 00fe 002B     		cmp	r3, #0
 3331 0100 40D0     		beq	.L196
 639:src/complex.c **** 		cmplxExp(rx, ry, rx, ry);
 640:src/complex.c **** 
 641:src/complex.c **** 	// Finally invert if we started with a negative argument
 642:src/complex.c **** 	if (reflec) {
 3332              		.loc 1 642 2 is_stmt 1 view .LVU739
 3333              		.loc 1 642 5 is_stmt 0 view .LVU740
 3334 0102 039B     		ldr	r3, [sp, #12]
 3335 0104 002B     		cmp	r3, #0
 3336 0106 6AD1     		bne	.L188
 3337              	.LVL364:
 3338              	.L175:
 643:src/complex.c **** 		cmplxMultiplyReal(&t1, &t2, xin, y, &const_PI);
 644:src/complex.c **** 		cmplxSin(&s1, &s2, &t1, &t2);
 645:src/complex.c **** 		if (!ln) {
 646:src/complex.c **** 			cmplxMultiply(&u1, &u2, &s1, &s2, rx, ry);
 647:src/complex.c **** 			cmplxDivideRealBy(rx, ry, &const_PI, &u1, &u2);
 648:src/complex.c **** 		} else {
 649:src/complex.c **** 			cmplxDivideRealBy(&u1, &u2, &const_PI, &s1, &s2);
 650:src/complex.c **** 			cmplxLn(&t1, &t2, &u1, &u2);
 651:src/complex.c **** 			cmplxSubtract(rx, ry, &t1, &t2, rx, ry);
 652:src/complex.c **** 		}
 653:src/complex.c **** 	}
 654:src/complex.c **** #endif
 655:src/complex.c **** }
 3339              		.loc 1 655 1 view .LVU741
 3340 0108 69B0     		add	sp, sp, #420
 3341              		.cfi_remember_state
 3342              		.cfi_def_cfa_offset 36
 3343              		@ sp needed
 3344 010a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3345              	.LVL365:
 3346              	.L176:
 3347              		.cfi_restore_state
 601:src/complex.c **** 			cmplx_NaN(rx, ry);
 3348              		.loc 1 601 3 is_stmt 1 view .LVU742
 601:src/complex.c **** 			cmplx_NaN(rx, ry);
 3349              		.loc 1 601 6 is_stmt 0 view .LVU743
 3350 010e 12F0300F 		tst	r2, #48
 3351 0112 12D1     		bne	.L178
 601:src/complex.c **** 			cmplx_NaN(rx, ry);
 3352              		.loc 1 601 30 discriminator 1 view .LVU744
 3353 0114 9BF80830 		ldrb	r3, [fp, #8]	@ zero_extendqisi2
 601:src/complex.c **** 			cmplx_NaN(rx, ry);
 3354              		.loc 1 601 27 discriminator 1 view .LVU745
 3355 0118 13F0300F 		tst	r3, #48
 3356 011c 0DD1     		bne	.L178
 604:src/complex.c **** 				if (decNumberIsInfinite(y))
 3357              		.loc 1 604 4 is_stmt 1 view .LVU746
 604:src/complex.c **** 				if (decNumberIsInfinite(y))
 3358              		.loc 1 604 7 is_stmt 0 view .LVU747
 3359 011e 5006     		lsls	r0, r2, #25
 3360              	.LVL366:
 604:src/complex.c **** 				if (decNumberIsInfinite(y))
 3361              		.loc 1 604 7 view .LVU748
 3362 0120 40F18980 		bpl	.L181
ARM GAS  /tmp/ccT3noyS.s 			page 81


 605:src/complex.c **** 					cmplx_NaN(rx, ry);
 3363              		.loc 1 605 5 is_stmt 1 view .LVU749
 605:src/complex.c **** 					cmplx_NaN(rx, ry);
 3364              		.loc 1 605 8 is_stmt 0 view .LVU750
 3365 0124 5906     		lsls	r1, r3, #25
 3366              	.LVL367:
 605:src/complex.c **** 					cmplx_NaN(rx, ry);
 3367              		.loc 1 605 8 view .LVU751
 3368 0126 08D4     		bmi	.L178
 607:src/complex.c **** 					cmplx_NaN(rx, ry);
 3369              		.loc 1 607 10 is_stmt 1 view .LVU752
 607:src/complex.c **** 					cmplx_NaN(rx, ry);
 3370              		.loc 1 607 13 is_stmt 0 view .LVU753
 3371 0128 1206     		lsls	r2, r2, #24
 3372 012a 06D4     		bmi	.L178
 610:src/complex.c **** 					decNumberZero(ry);
 3373              		.loc 1 610 6 is_stmt 1 view .LVU754
 3374 012c 3046     		mov	r0, r6
 3375 012e FFF7FEFF 		bl	set_inf
 3376              	.LVL368:
 611:src/complex.c **** 				}
 3377              		.loc 1 611 6 view .LVU755
 3378 0132 3846     		mov	r0, r7
 3379 0134 FFF7FEFF 		bl	decNumberZero
 3380              	.LVL369:
 3381 0138 E6E7     		b	.L175
 3382              	.LVL370:
 3383              	.L178:
 602:src/complex.c **** 		else {
 3384              		.loc 1 602 4 view .LVU756
 3385              	.LBB226:
 3386              	.LBI226:
  75:src/complex.c **** 	set_NaN(x);
 3387              		.loc 1 75 6 view .LVU757
 3388              	.LBB227:
  76:src/complex.c **** 	set_NaN(y);
 3389              		.loc 1 76 2 view .LVU758
 3390 013a 3046     		mov	r0, r6
 3391 013c FFF7FEFF 		bl	set_NaN
 3392              	.LVL371:
  77:src/complex.c **** }
 3393              		.loc 1 77 2 view .LVU759
 3394 0140 3846     		mov	r0, r7
 3395 0142 FFF7FEFF 		bl	set_NaN
 3396              	.LVL372:
 3397              	.LBE227:
 3398              	.LBE226:
 3399              		.loc 1 655 1 is_stmt 0 view .LVU760
 3400 0146 69B0     		add	sp, sp, #420
 3401              		.cfi_remember_state
 3402              		.cfi_def_cfa_offset 36
 3403              		@ sp needed
 3404 0148 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3405              	.LVL373:
 3406              	.L195:
 3407              		.cfi_restore_state
 623:src/complex.c **** 		dn_1m(&t1, xin);
ARM GAS  /tmp/ccT3noyS.s 			page 82


 3408              		.loc 1 623 3 is_stmt 1 view .LVU761
 624:src/complex.c **** 		if (dn_eq0(y) && is_int(&t1)) {
 3409              		.loc 1 624 3 view .LVU762
 3410 014c 0299     		ldr	r1, [sp, #8]
 3411              	.LVL374:
 624:src/complex.c **** 		if (dn_eq0(y) && is_int(&t1)) {
 3412              		.loc 1 624 3 is_stmt 0 view .LVU763
 3413 014e 0EA8     		add	r0, sp, #56
 3414              	.LVL375:
 624:src/complex.c **** 		if (dn_eq0(y) && is_int(&t1)) {
 3415              		.loc 1 624 3 view .LVU764
 3416 0150 FFF7FEFF 		bl	dn_1m
 3417              	.LVL376:
 625:src/complex.c **** 			cmplx_NaN(rx, ry);
 3418              		.loc 1 625 3 is_stmt 1 view .LVU765
 625:src/complex.c **** 			cmplx_NaN(rx, ry);
 3419              		.loc 1 625 7 is_stmt 0 view .LVU766
 3420 0154 5846     		mov	r0, fp
 3421 0156 FFF7FEFF 		bl	dn_eq0
 3422              	.LVL377:
 625:src/complex.c **** 			cmplx_NaN(rx, ry);
 3423              		.loc 1 625 6 view .LVU767
 3424 015a 20B1     		cbz	r0, .L183
 625:src/complex.c **** 			cmplx_NaN(rx, ry);
 3425              		.loc 1 625 20 discriminator 1 view .LVU768
 3426 015c 0EA8     		add	r0, sp, #56
 3427 015e FFF7FEFF 		bl	is_int
 3428              	.LVL378:
 625:src/complex.c **** 			cmplx_NaN(rx, ry);
 3429              		.loc 1 625 17 discriminator 1 view .LVU769
 3430 0162 0028     		cmp	r0, #0
 3431 0164 E9D1     		bne	.L178
 3432              	.L183:
 629:src/complex.c **** 		dn_minus(&t2, y);
 3433              		.loc 1 629 3 is_stmt 1 view .LVU770
 3434 0166 0DF1140A 		add	r10, sp, #20
 3435 016a 0EA9     		add	r1, sp, #56
 3436 016c 5046     		mov	r0, r10
 630:src/complex.c **** 	} else {
 3437              		.loc 1 630 3 is_stmt 0 view .LVU771
 3438 016e 0DF15C09 		add	r9, sp, #92
 629:src/complex.c **** 		dn_minus(&t2, y);
 3439              		.loc 1 629 3 view .LVU772
 3440 0172 FFF7FEFF 		bl	dn_m1
 3441              	.LVL379:
 630:src/complex.c **** 	} else {
 3442              		.loc 1 630 3 is_stmt 1 view .LVU773
 3443 0176 4846     		mov	r0, r9
 3444 0178 5946     		mov	r1, fp
 3445 017a FFF7FEFF 		bl	dn_minus
 3446              	.LVL380:
 623:src/complex.c **** 		dn_1m(&t1, xin);
 3447              		.loc 1 623 10 is_stmt 0 view .LVU774
 3448 017e 0123     		movs	r3, #1
 3449 0180 0393     		str	r3, [sp, #12]
 3450 0182 5CE7     		b	.L184
 3451              	.LVL381:
ARM GAS  /tmp/ccT3noyS.s 			page 83


 3452              	.L196:
 639:src/complex.c **** 
 3453              		.loc 1 639 3 is_stmt 1 view .LVU775
 3454 0184 3B46     		mov	r3, r7
 3455 0186 3246     		mov	r2, r6
 3456 0188 3946     		mov	r1, r7
 3457 018a 3046     		mov	r0, r6
 3458 018c FFF7FEFF 		bl	cmplxExp
 3459              	.LVL382:
 642:src/complex.c **** 		cmplxMultiplyReal(&t1, &t2, xin, y, &const_PI);
 3460              		.loc 1 642 2 view .LVU776
 642:src/complex.c **** 		cmplxMultiplyReal(&t1, &t2, xin, y, &const_PI);
 3461              		.loc 1 642 5 is_stmt 0 view .LVU777
 3462 0190 039B     		ldr	r3, [sp, #12]
 3463 0192 002B     		cmp	r3, #0
 3464 0194 B8D0     		beq	.L175
 643:src/complex.c **** 		cmplxSin(&s1, &s2, &t1, &t2);
 3465              		.loc 1 643 3 is_stmt 1 view .LVU778
 3466              	.LVL383:
 3467              	.LBB228:
 3468              	.LBI228:
  92:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3469              		.loc 1 92 13 view .LVU779
 3470              	.LBB229:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 3471              		.loc 1 95 2 view .LVU780
 3472 0196 0299     		ldr	r1, [sp, #8]
 3473 0198 2F4A     		ldr	r2, .L197+20
 3474 019a 0EA8     		add	r0, sp, #56
 3475              	.LVL384:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 3476              		.loc 1 95 2 is_stmt 0 view .LVU781
 3477 019c FFF7FEFF 		bl	dn_multiply
 3478              	.LVL385:
  96:src/complex.c **** }
 3479              		.loc 1 96 2 is_stmt 1 view .LVU782
 3480 01a0 5946     		mov	r1, fp
 3481 01a2 2D4A     		ldr	r2, .L197+20
 3482 01a4 4846     		mov	r0, r9
 3483 01a6 FFF7FEFF 		bl	dn_multiply
 3484              	.LVL386:
  96:src/complex.c **** }
 3485              		.loc 1 96 2 is_stmt 0 view .LVU783
 3486              	.LBE229:
 3487              	.LBE228:
 644:src/complex.c **** 		if (!ln) {
 3488              		.loc 1 644 3 is_stmt 1 view .LVU784
 3489              	.LBB231:
 3490              	.LBI231:
 409:src/complex.c **** 	decNumber z;
 3491              		.loc 1 409 6 view .LVU785
 3492              	.LBB232:
 410:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 3493              		.loc 1 410 2 view .LVU786
 411:src/complex.c **** }
 3494              		.loc 1 411 2 view .LVU787
 3495 01aa 5FAB     		add	r3, sp, #380
ARM GAS  /tmp/ccT3noyS.s 			page 84


 3496 01ac CDE90033 		strd	r3, r3, [sp]
 3497 01b0 0EA8     		add	r0, sp, #56
 3498              	.LVL387:
 411:src/complex.c **** }
 3499              		.loc 1 411 2 is_stmt 0 view .LVU788
 3500 01b2 4946     		mov	r1, r9
 3501 01b4 4DAB     		add	r3, sp, #308
 3502              	.LVL388:
 411:src/complex.c **** }
 3503              		.loc 1 411 2 view .LVU789
 3504 01b6 2246     		mov	r2, r4
 3505 01b8 FFF7FEFF 		bl	cmplx_sincos
 3506              	.LVL389:
 411:src/complex.c **** }
 3507              		.loc 1 411 2 view .LVU790
 3508              	.LBE232:
 3509              	.LBE231:
 645:src/complex.c **** 			cmplxMultiply(&u1, &u2, &s1, &s2, rx, ry);
 3510              		.loc 1 645 3 is_stmt 1 view .LVU791
 646:src/complex.c **** 			cmplxDivideRealBy(rx, ry, &const_PI, &u1, &u2);
 3511              		.loc 1 646 4 view .LVU792
 3512 01bc 4DAB     		add	r3, sp, #308
 3513 01be 2246     		mov	r2, r4
 3514 01c0 5FA9     		add	r1, sp, #380
 3515 01c2 56A8     		add	r0, sp, #344
 3516 01c4 CDE90067 		strd	r6, r7, [sp]
 3517 01c8 FFF7FEFF 		bl	cmplxMultiply
 3518              	.LVL390:
 647:src/complex.c **** 		} else {
 3519              		.loc 1 647 4 view .LVU793
 3520 01cc 5FAB     		add	r3, sp, #380
 3521 01ce 0093     		str	r3, [sp]
 3522 01d0 214A     		ldr	r2, .L197+20
 3523 01d2 56AB     		add	r3, sp, #344
 3524 01d4 3946     		mov	r1, r7
 3525 01d6 3046     		mov	r0, r6
 3526 01d8 FFF7FEFF 		bl	cmplxDivideRealBy
 3527              	.LVL391:
 3528 01dc 94E7     		b	.L175
 3529              	.L188:
 643:src/complex.c **** 		cmplxSin(&s1, &s2, &t1, &t2);
 3530              		.loc 1 643 3 view .LVU794
 3531              	.LVL392:
 3532              	.LBB234:
  92:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3533              		.loc 1 92 13 view .LVU795
 3534              	.LBB230:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 3535              		.loc 1 95 2 view .LVU796
 3536 01de 0299     		ldr	r1, [sp, #8]
 3537 01e0 1D4A     		ldr	r2, .L197+20
 3538 01e2 0EA8     		add	r0, sp, #56
 3539              	.LVL393:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 3540              		.loc 1 95 2 is_stmt 0 view .LVU797
 3541 01e4 FFF7FEFF 		bl	dn_multiply
 3542              	.LVL394:
ARM GAS  /tmp/ccT3noyS.s 			page 85


  96:src/complex.c **** }
 3543              		.loc 1 96 2 is_stmt 1 view .LVU798
 3544 01e8 5946     		mov	r1, fp
 3545 01ea 1B4A     		ldr	r2, .L197+20
 3546 01ec 4846     		mov	r0, r9
 3547 01ee FFF7FEFF 		bl	dn_multiply
 3548              	.LVL395:
  96:src/complex.c **** }
 3549              		.loc 1 96 2 is_stmt 0 view .LVU799
 3550              	.LBE230:
 3551              	.LBE234:
 644:src/complex.c **** 		if (!ln) {
 3552              		.loc 1 644 3 is_stmt 1 view .LVU800
 3553              	.LBB235:
 409:src/complex.c **** 	decNumber z;
 3554              		.loc 1 409 6 view .LVU801
 3555              	.LBB233:
 410:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 3556              		.loc 1 410 2 view .LVU802
 411:src/complex.c **** }
 3557              		.loc 1 411 2 view .LVU803
 3558 01f2 5FAB     		add	r3, sp, #380
 3559 01f4 CDE90033 		strd	r3, r3, [sp]
 3560 01f8 0EA8     		add	r0, sp, #56
 3561              	.LVL396:
 411:src/complex.c **** }
 3562              		.loc 1 411 2 is_stmt 0 view .LVU804
 3563 01fa 4DAB     		add	r3, sp, #308
 3564              	.LVL397:
 411:src/complex.c **** }
 3565              		.loc 1 411 2 view .LVU805
 3566 01fc 2246     		mov	r2, r4
 3567 01fe 4946     		mov	r1, r9
 3568 0200 FFF7FEFF 		bl	cmplx_sincos
 3569              	.LVL398:
 411:src/complex.c **** }
 3570              		.loc 1 411 2 view .LVU806
 3571              	.LBE233:
 3572              	.LBE235:
 645:src/complex.c **** 			cmplxMultiply(&u1, &u2, &s1, &s2, rx, ry);
 3573              		.loc 1 645 3 is_stmt 1 view .LVU807
 649:src/complex.c **** 			cmplxLn(&t1, &t2, &u1, &u2);
 3574              		.loc 1 649 4 view .LVU808
 3575 0204 4DAB     		add	r3, sp, #308
 3576 0206 0093     		str	r3, [sp]
 3577 0208 5FA9     		add	r1, sp, #380
 3578 020a 2346     		mov	r3, r4
 3579 020c 56A8     		add	r0, sp, #344
 3580 020e 124A     		ldr	r2, .L197+20
 3581 0210 FFF7FEFF 		bl	cmplxDivideRealBy
 3582              	.LVL399:
 650:src/complex.c **** 			cmplxSubtract(rx, ry, &t1, &t2, rx, ry);
 3583              		.loc 1 650 4 view .LVU809
 3584 0214 5FAB     		add	r3, sp, #380
 3585 0216 56AA     		add	r2, sp, #344
 3586 0218 4946     		mov	r1, r9
 3587 021a 0EA8     		add	r0, sp, #56
ARM GAS  /tmp/ccT3noyS.s 			page 86


 3588 021c FFF7FEFF 		bl	cmplxLn
 3589              	.LVL400:
 651:src/complex.c **** 		}
 3590              		.loc 1 651 4 view .LVU810
 3591              	.LBB236:
 3592              	.LBI236:
 144:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3593              		.loc 1 144 6 view .LVU811
 3594              	.LBB237:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 3595              		.loc 1 147 2 view .LVU812
 3596 0220 3246     		mov	r2, r6
 3597 0222 0EA9     		add	r1, sp, #56
 3598              	.LVL401:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 3599              		.loc 1 147 2 is_stmt 0 view .LVU813
 3600 0224 3046     		mov	r0, r6
 3601 0226 FFF7FEFF 		bl	dn_subtract
 3602              	.LVL402:
 148:src/complex.c **** }
 3603              		.loc 1 148 2 is_stmt 1 view .LVU814
 3604 022a 3A46     		mov	r2, r7
 3605 022c 4946     		mov	r1, r9
 3606 022e 3846     		mov	r0, r7
 3607 0230 FFF7FEFF 		bl	dn_subtract
 3608              	.LVL403:
 149:src/complex.c **** 
 3609              		.loc 1 149 1 is_stmt 0 view .LVU815
 3610 0234 68E7     		b	.L175
 3611              	.LVL404:
 3612              	.L181:
 149:src/complex.c **** 
 3613              		.loc 1 149 1 view .LVU816
 3614              	.LBE237:
 3615              	.LBE236:
 614:src/complex.c **** 				decNumberZero(ry);
 3616              		.loc 1 614 5 is_stmt 1 view .LVU817
 3617 0236 3046     		mov	r0, r6
 3618 0238 FFF7FEFF 		bl	decNumberZero
 3619              	.LVL405:
 615:src/complex.c **** 			}
 3620              		.loc 1 615 5 view .LVU818
 3621 023c 3846     		mov	r0, r7
 3622 023e FFF7FEFF 		bl	decNumberZero
 3623              	.LVL406:
 3624 0242 61E7     		b	.L175
 3625              	.L198:
 3626              		.align	2
 3627              	.L197:
 3628 0244 00000000 		.word	const_21
 3629 0248 00000000 		.word	gamma_consts
 3630 024c 00000000 		.word	const_gammaC00
 3631 0250 00000000 		.word	const_gammaR
 3632 0254 00000000 		.word	const_0_5
 3633 0258 00000000 		.word	const_PI
 3634 025c 54000000 		.word	gamma_consts+84
 3635              		.cfi_endproc
ARM GAS  /tmp/ccT3noyS.s 			page 87


 3636              	.LFE36:
 3638              		.section	.text.cmplxGamma,"ax",%progbits
 3639              		.align	1
 3640              		.p2align 2,,3
 3641              		.global	cmplxGamma
 3642              		.syntax unified
 3643              		.thumb
 3644              		.thumb_func
 3645              		.fpu fpv4-sp-d16
 3647              	cmplxGamma:
 3648              	.LVL407:
 3649              	.LFB37:
 656:src/complex.c **** 
 657:src/complex.c **** void cmplxGamma(decNumber *rx, decNumber *ry, const decNumber *x, const decNumber *y) {
 3650              		.loc 1 657 87 view -0
 3651              		.cfi_startproc
 3652              		@ args = 0, pretend = 0, frame = 0
 3653              		@ frame_needed = 0, uses_anonymous_args = 0
 658:src/complex.c **** 	cmplxGamma_LnGamma(rx, ry, x, y, 0);
 3654              		.loc 1 658 2 view .LVU820
 657:src/complex.c **** 	cmplxGamma_LnGamma(rx, ry, x, y, 0);
 3655              		.loc 1 657 87 is_stmt 0 view .LVU821
 3656 0000 10B5     		push	{r4, lr}
 3657              		.cfi_def_cfa_offset 8
 3658              		.cfi_offset 4, -8
 3659              		.cfi_offset 14, -4
 3660 0002 82B0     		sub	sp, sp, #8
 3661              		.cfi_def_cfa_offset 16
 3662              		.loc 1 658 2 view .LVU822
 3663 0004 0024     		movs	r4, #0
 3664 0006 0094     		str	r4, [sp]
 3665 0008 FFF7FEFF 		bl	cmplxGamma_LnGamma
 3666              	.LVL408:
 659:src/complex.c **** }
 3667              		.loc 1 659 1 view .LVU823
 3668 000c 02B0     		add	sp, sp, #8
 3669              		.cfi_def_cfa_offset 8
 3670              		@ sp needed
 3671 000e 10BD     		pop	{r4, pc}
 3672              		.cfi_endproc
 3673              	.LFE37:
 3675              		.section	.text.cmplxLnGamma,"ax",%progbits
 3676              		.align	1
 3677              		.p2align 2,,3
 3678              		.global	cmplxLnGamma
 3679              		.syntax unified
 3680              		.thumb
 3681              		.thumb_func
 3682              		.fpu fpv4-sp-d16
 3684              	cmplxLnGamma:
 3685              	.LVL409:
 3686              	.LFB38:
 660:src/complex.c **** 
 661:src/complex.c **** void cmplxLnGamma(decNumber *rx, decNumber *ry, const decNumber *x, const decNumber *y) {
 3687              		.loc 1 661 89 is_stmt 1 view -0
 3688              		.cfi_startproc
 3689              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccT3noyS.s 			page 88


 3690              		@ frame_needed = 0, uses_anonymous_args = 0
 662:src/complex.c **** 	cmplxGamma_LnGamma(rx, ry, x, y, 1);
 3691              		.loc 1 662 2 view .LVU825
 661:src/complex.c **** 	cmplxGamma_LnGamma(rx, ry, x, y, 1);
 3692              		.loc 1 661 89 is_stmt 0 view .LVU826
 3693 0000 10B5     		push	{r4, lr}
 3694              		.cfi_def_cfa_offset 8
 3695              		.cfi_offset 4, -8
 3696              		.cfi_offset 14, -4
 3697 0002 82B0     		sub	sp, sp, #8
 3698              		.cfi_def_cfa_offset 16
 3699              		.loc 1 662 2 view .LVU827
 3700 0004 0124     		movs	r4, #1
 3701 0006 0094     		str	r4, [sp]
 3702 0008 FFF7FEFF 		bl	cmplxGamma_LnGamma
 3703              	.LVL410:
 663:src/complex.c **** }
 3704              		.loc 1 663 1 view .LVU828
 3705 000c 02B0     		add	sp, sp, #8
 3706              		.cfi_def_cfa_offset 8
 3707              		@ sp needed
 3708 000e 10BD     		pop	{r4, pc}
 3709              		.cfi_endproc
 3710              	.LFE38:
 3712              		.text
 3713              	.Letext0:
 3714              		.file 2 "src/decNumber/decContext.h"
 3715              		.file 3 "src/decNumber/decNumber.h"
 3716              		.file 4 "src/decNumber/decimal64.h"
 3717              		.file 5 "src/decNumber/decimal128.h"
 3718              		.file 6 "src/xeq.h"
 3719              		.file 7 "src/data.h"
 3720              		.file 8 "src/consts.h"
 3721              		.file 9 "src/decn.h"
ARM GAS  /tmp/ccT3noyS.s 			page 89


DEFINED SYMBOLS
                            *ABS*:0000000000000000 complex.c
     /tmp/ccT3noyS.s:18     .text.cmplxDivideRealBy:0000000000000000 $t
     /tmp/ccT3noyS.s:26     .text.cmplxDivideRealBy:0000000000000000 cmplxDivideRealBy
     /tmp/ccT3noyS.s:118    .text.cmplx_sincos:0000000000000000 $t
     /tmp/ccT3noyS.s:125    .text.cmplx_sincos:0000000000000000 cmplx_sincos
     /tmp/ccT3noyS.s:236    .text.cmplx_sinhcosh:0000000000000000 $t
     /tmp/ccT3noyS.s:243    .text.cmplx_sinhcosh:0000000000000000 cmplx_sinhcosh
     /tmp/ccT3noyS.s:315    .text.cmplx_NaN:0000000000000000 $t
     /tmp/ccT3noyS.s:323    .text.cmplx_NaN:0000000000000000 cmplx_NaN
     /tmp/ccT3noyS.s:357    .text.cmplxAdd:0000000000000000 $t
     /tmp/ccT3noyS.s:365    .text.cmplxAdd:0000000000000000 cmplxAdd
     /tmp/ccT3noyS.s:413    .text.cmplxSubtract:0000000000000000 $t
     /tmp/ccT3noyS.s:421    .text.cmplxSubtract:0000000000000000 cmplxSubtract
     /tmp/ccT3noyS.s:469    .text.cmplxMultiply:0000000000000000 $t
     /tmp/ccT3noyS.s:477    .text.cmplxMultiply:0000000000000000 cmplxMultiply
     /tmp/ccT3noyS.s:631    .text.cmplxMultiply:0000000000000080 $d
     /tmp/ccT3noyS.s:636    .text.cpx_dot:0000000000000000 $t
     /tmp/ccT3noyS.s:644    .text.cpx_dot:0000000000000000 cpx_dot
     /tmp/ccT3noyS.s:770    .text.cpx_dot:000000000000004c $d
     /tmp/ccT3noyS.s:775    .text.cpx_dotdiv:0000000000000000 $t
     /tmp/ccT3noyS.s:783    .text.cpx_dotdiv:0000000000000000 cpx_dotdiv
     /tmp/ccT3noyS.s:959    .text.cpx_dotdiv:0000000000000094 $d
     /tmp/ccT3noyS.s:965    .text.cmplxDivide:0000000000000000 $t
     /tmp/ccT3noyS.s:973    .text.cmplxDivide:0000000000000000 cmplxDivide
     /tmp/ccT3noyS.s:1157   .text.cmplxDivide:00000000000000b0 $d
     /tmp/ccT3noyS.s:1162   .text.cmplxArg:0000000000000000 $t
     /tmp/ccT3noyS.s:1170   .text.cmplxArg:0000000000000000 cmplxArg
     /tmp/ccT3noyS.s:1195   .text.cmplxR:0000000000000000 $t
     /tmp/ccT3noyS.s:1203   .text.cmplxR:0000000000000000 cmplxR
     /tmp/ccT3noyS.s:1258   .text.cmplxToPolar:0000000000000000 $t
     /tmp/ccT3noyS.s:1266   .text.cmplxToPolar:0000000000000000 cmplxToPolar
     /tmp/ccT3noyS.s:1314   .text.cmplxAbs:0000000000000000 $t
     /tmp/ccT3noyS.s:1322   .text.cmplxAbs:0000000000000000 cmplxAbs
     /tmp/ccT3noyS.s:1362   .text.cmplxMinus:0000000000000000 $t
     /tmp/ccT3noyS.s:1370   .text.cmplxMinus:0000000000000000 cmplxMinus
     /tmp/ccT3noyS.s:1413   .text.cmplxRecip:0000000000000000 $t
     /tmp/ccT3noyS.s:1421   .text.cmplxRecip:0000000000000000 cmplxRecip
     /tmp/ccT3noyS.s:1570   .text.cmplxRecip:0000000000000078 $d
     /tmp/ccT3noyS.s:1575   .text.cmplxSqrt:0000000000000000 $t
     /tmp/ccT3noyS.s:1583   .text.cmplxSqrt:0000000000000000 cmplxSqrt
     /tmp/ccT3noyS.s:1813   .text.cmplxSqrt:00000000000000e0 $d
     /tmp/ccT3noyS.s:1820   .text.cmplxSin:0000000000000000 $t
     /tmp/ccT3noyS.s:1828   .text.cmplxSin:0000000000000000 cmplxSin
     /tmp/ccT3noyS.s:1877   .text.cmplxCos:0000000000000000 $t
     /tmp/ccT3noyS.s:1885   .text.cmplxCos:0000000000000000 cmplxCos
     /tmp/ccT3noyS.s:1925   .text.cmplxTan:0000000000000000 $t
     /tmp/ccT3noyS.s:1933   .text.cmplxTan:0000000000000000 cmplxTan
     /tmp/ccT3noyS.s:2034   .text.cmplxSinc:0000000000000000 $t
     /tmp/ccT3noyS.s:2042   .text.cmplxSinc:0000000000000000 cmplxSinc
     /tmp/ccT3noyS.s:2132   .text.cmplxSinh:0000000000000000 $t
     /tmp/ccT3noyS.s:2140   .text.cmplxSinh:0000000000000000 cmplxSinh
     /tmp/ccT3noyS.s:2189   .text.cmplxCosh:0000000000000000 $t
     /tmp/ccT3noyS.s:2197   .text.cmplxCosh:0000000000000000 cmplxCosh
     /tmp/ccT3noyS.s:2237   .text.cmplxTanh:0000000000000000 $t
     /tmp/ccT3noyS.s:2245   .text.cmplxTanh:0000000000000000 cmplxTanh
     /tmp/ccT3noyS.s:2343   .text.cmplxTanh:0000000000000070 $d
ARM GAS  /tmp/ccT3noyS.s 			page 90


     /tmp/ccT3noyS.s:2348   .text.cmplx_1x:0000000000000000 $t
     /tmp/ccT3noyS.s:2356   .text.cmplx_1x:0000000000000000 cmplx_1x
     /tmp/ccT3noyS.s:2455   .text.cmplx_1x:0000000000000058 $d
     /tmp/ccT3noyS.s:2460   .text.cmplxLn:0000000000000000 $t
     /tmp/ccT3noyS.s:2468   .text.cmplxLn:0000000000000000 cmplxLn
     /tmp/ccT3noyS.s:2660   .text.cmplxExp:0000000000000000 $t
     /tmp/ccT3noyS.s:2668   .text.cmplxExp:0000000000000000 cmplxExp
     /tmp/ccT3noyS.s:2793   .text.cmplxPower:0000000000000000 $t
     /tmp/ccT3noyS.s:2801   .text.cmplxPower:0000000000000000 cmplxPower
     /tmp/ccT3noyS.s:2938   .text.cmplxXRoot:0000000000000000 $t
     /tmp/ccT3noyS.s:2946   .text.cmplxXRoot:0000000000000000 cmplxXRoot
     /tmp/ccT3noyS.s:3005   .text.cmplxCubeRoot:0000000000000000 $t
     /tmp/ccT3noyS.s:3013   .text.cmplxCubeRoot:0000000000000000 cmplxCubeRoot
     /tmp/ccT3noyS.s:3080   .text.cmplxCubeRoot:000000000000002c $d
     /tmp/ccT3noyS.s:3086   .text.cmplxGamma_LnGamma:0000000000000000 $t
     /tmp/ccT3noyS.s:3093   .text.cmplxGamma_LnGamma:0000000000000000 cmplxGamma_LnGamma
     /tmp/ccT3noyS.s:3628   .text.cmplxGamma_LnGamma:0000000000000244 $d
     /tmp/ccT3noyS.s:3639   .text.cmplxGamma:0000000000000000 $t
     /tmp/ccT3noyS.s:3647   .text.cmplxGamma:0000000000000000 cmplxGamma
     /tmp/ccT3noyS.s:3676   .text.cmplxLnGamma:0000000000000000 $t
     /tmp/ccT3noyS.s:3684   .text.cmplxLnGamma:0000000000000000 cmplxLnGamma

UNDEFINED SYMBOLS
dn_multiply
dn_add
dn_divide
dn_minus
dn_eq0
dn_sincos
dn_sinhcosh
decNumberZero
decNumberCopy
set_inf
set_NaN
dn_subtract
is_dblmode
dn_plus
Ctx
const_1
do_atan2
dn_sqrt
const_root2on2
dn_1
dn__1
decNumberSinc
decNumberTanh
decNumberMod
dn_mulPI
sincosTaylor
dn_exp
const_2
dn_ln
set_neginf
decNumberPI
decNumberRecip
const_0
const_3
ARM GAS  /tmp/ccT3noyS.s 			page 91


dn_m1
dn_dec
dn_1m
is_int
const_21
gamma_consts
const_gammaC00
const_gammaR
const_0_5
const_PI

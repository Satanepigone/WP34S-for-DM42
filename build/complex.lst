ARM GAS  /tmp/ccFQ6cnP.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"complex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.cmplxDivideRealBy,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	cmplxDivideRealBy:
  27              	.LVL0:
  28              	.LFB5:
  29              		.file 1 "src/complex.c"
   1:src/complex.c **** /* This file is part of 34S.
   2:src/complex.c ****  * 
   3:src/complex.c ****  * 34S is free software: you can redistribute it and/or modify
   4:src/complex.c ****  * it under the terms of the GNU General Public License as published by
   5:src/complex.c ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/complex.c ****  * (at your option) any later version.
   7:src/complex.c ****  * 
   8:src/complex.c ****  * 34S is distributed in the hope that it will be useful,
   9:src/complex.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/complex.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/complex.c ****  * GNU General Public License for more details.
  12:src/complex.c ****  * 
  13:src/complex.c ****  * You should have received a copy of the GNU General Public License
  14:src/complex.c ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/complex.c ****  */
  16:src/complex.c **** 
  17:src/complex.c **** #include "decn.h"
  18:src/complex.c **** #include "complex.h"
  19:src/complex.c **** #include "xeq.h"
  20:src/complex.c **** #include "consts.h"
  21:src/complex.c **** 
  22:src/complex.c **** #if 0
  23:src/complex.c **** #include <stdio.h>
  24:src/complex.c **** static FILE *debugf = NULL;
  25:src/complex.c **** 
  26:src/complex.c **** static void open_debug(void) {
  27:src/complex.c **** 	if (debugf == NULL) {
  28:src/complex.c **** 		debugf = fopen("/dev/ttys000", "w");
  29:src/complex.c **** 	}
ARM GAS  /tmp/ccFQ6cnP.s 			page 2


  30:src/complex.c **** }
  31:src/complex.c **** static void dump1(const decNumber *a, const char *msg) {
  32:src/complex.c **** 	char b[100];
  33:src/complex.c **** 
  34:src/complex.c **** 	open_debug();
  35:src/complex.c **** 	decNumberToString(a, b);
  36:src/complex.c **** 	fprintf(debugf, "%s: %s\n", msg, b);
  37:src/complex.c **** }
  38:src/complex.c **** 
  39:src/complex.c **** static void dump2(const decNumber *a, const decNumber *b, const char *msg) {
  40:src/complex.c **** 	char b1[100], b2[100];
  41:src/complex.c **** 
  42:src/complex.c **** 	open_debug();
  43:src/complex.c **** 	decNumberToString(a, b1);
  44:src/complex.c **** 	decNumberToString(b, b2);
  45:src/complex.c **** 	fprintf(debugf, "%s: %s / %s\n", msg, b1, b2);
  46:src/complex.c **** }
  47:src/complex.c **** #endif
  48:src/complex.c **** 
  49:src/complex.c **** #define COMPLEX_DIGITS	72
  50:src/complex.c **** 
  51:src/complex.c **** typedef struct {
  52:src/complex.c **** 	decNumber n;
  53:src/complex.c **** 	decNumberUnit extra[((COMPLEX_DIGITS-DECNUMDIGITS+DECDPUN-1)/DECDPUN)];
  54:src/complex.c **** } complexNumber;
  55:src/complex.c **** 
  56:src/complex.c **** static int setComplexContext(void) {
  57:src/complex.c **** 	int digits = Ctx.digits;
  58:src/complex.c **** 	if (is_dblmode())
  59:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
  60:src/complex.c **** 	return digits;
  61:src/complex.c **** }
  62:src/complex.c **** 
  63:src/complex.c **** static void resetComplexContext(int x) {
  64:src/complex.c **** 	Ctx.digits = x;
  65:src/complex.c **** }
  66:src/complex.c **** 
  67:src/complex.c **** static void complexResult(decNumber *x, decNumber *y, complexNumber *xin, complexNumber *yin, int s
  68:src/complex.c **** 	resetComplexContext(saved);
  69:src/complex.c **** 	dn_plus(x, &xin->n);
  70:src/complex.c **** 	dn_plus(y, &yin->n);
  71:src/complex.c **** }
  72:src/complex.c **** 
  73:src/complex.c **** 
  74:src/complex.c **** 
  75:src/complex.c **** void cmplx_NaN(decNumber *x, decNumber *y) {
  76:src/complex.c **** 	set_NaN(x);
  77:src/complex.c **** 	set_NaN(y);
  78:src/complex.c **** }
  79:src/complex.c **** 
  80:src/complex.c **** #ifndef TINY_BUILD
  81:src/complex.c **** // r - (a + i b) = (r - a) - i b
  82:src/complex.c **** #if 0
  83:src/complex.c **** static void cmplxSubtractFromReal(decNumber *rx, decNumber *ry,
  84:src/complex.c **** 		const decNumber *r,
  85:src/complex.c **** 		const decNumber *a, const decNumber *b) {
  86:src/complex.c **** 	dn_subtract(rx, r, a);
ARM GAS  /tmp/ccFQ6cnP.s 			page 3


  87:src/complex.c **** 	dn_minus(ry, b);
  88:src/complex.c **** }
  89:src/complex.c **** #endif
  90:src/complex.c **** 
  91:src/complex.c **** // (a + i b) * r = (a * r) + i (b * r)
  92:src/complex.c **** static void cmplxMultiplyReal(decNumber *rx, decNumber *ry,
  93:src/complex.c **** 		const decNumber *a, const decNumber *b,
  94:src/complex.c **** 		const decNumber *r) {
  95:src/complex.c **** 	dn_multiply(rx, a, r);
  96:src/complex.c **** 	dn_multiply(ry, b, r);
  97:src/complex.c **** }
  98:src/complex.c **** 
  99:src/complex.c **** #if 0
 100:src/complex.c **** static void cmplxDiv2(decNumber *rx, decNumber *ry,
 101:src/complex.c **** 		const decNumber *a, const decNumber *b) {
 102:src/complex.c **** 	cmplxMultiplyReal(rx, ry, a, b, &const_0_5);
 103:src/complex.c **** }
 104:src/complex.c **** #endif
 105:src/complex.c **** 
 106:src/complex.c **** #if 0
 107:src/complex.c **** // (a + i b) / c = ( a / r ) + i ( b / r)
 108:src/complex.c **** static void cmplxDivideReal(decNumber *rx, decNumber *ry,
 109:src/complex.c **** 		const decNumber *a, const decNumber *b,
 110:src/complex.c **** 		const decNumber *r) {
 111:src/complex.c **** 	dn_divide(rx, a, r);
 112:src/complex.c **** 	dn_divide(ry, b, r);
 113:src/complex.c **** }
 114:src/complex.c **** #endif
 115:src/complex.c **** 
 116:src/complex.c **** // a / (c + i d) = (a*c) / (c*c + d*d) + i (- a*d) / (c*c + d*d)
 117:src/complex.c **** static void cmplxDivideRealBy(decNumber *rx, decNumber *ry,
 118:src/complex.c **** 		const decNumber *a,
 119:src/complex.c **** 		const decNumber *c, const decNumber *d) {
  30              		.loc 1 119 43 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 144
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 120:src/complex.c **** 	decNumber t1, t2, t3, den;
  34              		.loc 1 120 2 view .LVU1
 121:src/complex.c **** 
 122:src/complex.c **** 	dn_multiply(&t1, c, c);
  35              		.loc 1 122 2 view .LVU2
 119:src/complex.c **** 	decNumber t1, t2, t3, den;
  36              		.loc 1 119 43 is_stmt 0 view .LVU3
  37 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  38              		.cfi_def_cfa_offset 24
  39              		.cfi_offset 4, -24
  40              		.cfi_offset 5, -20
  41              		.cfi_offset 6, -16
  42              		.cfi_offset 7, -12
  43              		.cfi_offset 8, -8
  44              		.cfi_offset 14, -4
  45 0004 A4B0     		sub	sp, sp, #144
  46              		.cfi_def_cfa_offset 168
 119:src/complex.c **** 	decNumber t1, t2, t3, den;
  47              		.loc 1 119 43 view .LVU4
  48 0006 1546     		mov	r5, r2
ARM GAS  /tmp/ccFQ6cnP.s 			page 4


  49 0008 2A9F     		ldr	r7, [sp, #168]
  50              		.loc 1 122 2 view .LVU5
  51 000a 1A46     		mov	r2, r3
  52              	.LVL1:
 119:src/complex.c **** 	decNumber t1, t2, t3, den;
  53              		.loc 1 119 43 view .LVU6
  54 000c 8046     		mov	r8, r0
  55 000e 0E46     		mov	r6, r1
  56              		.loc 1 122 2 view .LVU7
  57 0010 6846     		mov	r0, sp
  58              	.LVL2:
  59              		.loc 1 122 2 view .LVU8
  60 0012 1946     		mov	r1, r3
  61              	.LVL3:
 119:src/complex.c **** 	decNumber t1, t2, t3, den;
  62              		.loc 1 119 43 view .LVU9
  63 0014 1C46     		mov	r4, r3
  64              		.loc 1 122 2 view .LVU10
  65 0016 FFF7FEFF 		bl	dn_multiply
  66              	.LVL4:
 123:src/complex.c **** 	dn_multiply(&t2, d, d);
  67              		.loc 1 123 2 is_stmt 1 view .LVU11
  68 001a 3A46     		mov	r2, r7
  69 001c 3946     		mov	r1, r7
  70 001e 09A8     		add	r0, sp, #36
  71 0020 FFF7FEFF 		bl	dn_multiply
  72              	.LVL5:
 124:src/complex.c **** 	dn_add(&den, &t1, &t2);
  73              		.loc 1 124 2 view .LVU12
  74 0024 09AA     		add	r2, sp, #36
  75 0026 6946     		mov	r1, sp
  76 0028 1BA8     		add	r0, sp, #108
  77 002a FFF7FEFF 		bl	dn_add
  78              	.LVL6:
 125:src/complex.c **** 
 126:src/complex.c **** 	dn_multiply(&t1, a, c);
  79              		.loc 1 126 2 view .LVU13
  80 002e 2246     		mov	r2, r4
  81 0030 2946     		mov	r1, r5
  82 0032 6846     		mov	r0, sp
  83 0034 FFF7FEFF 		bl	dn_multiply
  84              	.LVL7:
 127:src/complex.c **** 	dn_divide(rx, &t1, &den);
  85              		.loc 1 127 2 view .LVU14
  86 0038 1BAA     		add	r2, sp, #108
  87 003a 6946     		mov	r1, sp
  88 003c 4046     		mov	r0, r8
  89 003e FFF7FEFF 		bl	dn_divide
  90              	.LVL8:
 128:src/complex.c **** 
 129:src/complex.c **** 	dn_multiply(&t2, a, d);
  91              		.loc 1 129 2 view .LVU15
  92 0042 3A46     		mov	r2, r7
  93 0044 2946     		mov	r1, r5
  94 0046 09A8     		add	r0, sp, #36
  95 0048 FFF7FEFF 		bl	dn_multiply
  96              	.LVL9:
ARM GAS  /tmp/ccFQ6cnP.s 			page 5


 130:src/complex.c **** 	dn_minus(&t3, &t2);
  97              		.loc 1 130 2 view .LVU16
  98 004c 09A9     		add	r1, sp, #36
  99 004e 12A8     		add	r0, sp, #72
 100 0050 FFF7FEFF 		bl	dn_minus
 101              	.LVL10:
 131:src/complex.c **** 	dn_divide(ry, &t3, &den);
 102              		.loc 1 131 2 view .LVU17
 103 0054 1BAA     		add	r2, sp, #108
 104 0056 12A9     		add	r1, sp, #72
 105 0058 3046     		mov	r0, r6
 106 005a FFF7FEFF 		bl	dn_divide
 107              	.LVL11:
 132:src/complex.c **** }
 108              		.loc 1 132 1 is_stmt 0 view .LVU18
 109 005e 24B0     		add	sp, sp, #144
 110              		.cfi_def_cfa_offset 24
 111              		@ sp needed
 112 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 113              		.loc 1 132 1 view .LVU19
 114              		.cfi_endproc
 115              	.LFE5:
 117              		.section	.text.cmplx_sincos,"ax",%progbits
 118              		.align	1
 119              		.p2align 2,,3
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	cmplx_sincos:
 126              	.LVL12:
 127              	.LFB21:
 133:src/complex.c **** #endif
 134:src/complex.c **** 
 135:src/complex.c **** // (a + i b) + (c + i d) = (a + c) + i (b + d)
 136:src/complex.c **** void cmplxAdd(decNumber *rx, decNumber *ry,
 137:src/complex.c **** 		const decNumber *a, const decNumber *b,
 138:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 139:src/complex.c **** 	dn_add(rx, a, c);
 140:src/complex.c **** 	dn_add(ry, b, d);
 141:src/complex.c **** }
 142:src/complex.c **** 
 143:src/complex.c **** // (a + i b) - (c + i d) = (a - c) + i (b - d)
 144:src/complex.c **** void cmplxSubtract(decNumber *rx, decNumber *ry,
 145:src/complex.c **** 		const decNumber *a, const decNumber *b,
 146:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 147:src/complex.c **** 	dn_subtract(rx, a, c);
 148:src/complex.c **** 	dn_subtract(ry, b, d);
 149:src/complex.c **** }
 150:src/complex.c **** 
 151:src/complex.c **** // (a + i b) * (c + i d) = (a * c - b * d) + i (a * d + b * c)
 152:src/complex.c **** void cmplxMultiply(decNumber *rx, decNumber *ry,
 153:src/complex.c **** 		const decNumber *a, const decNumber *b,
 154:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 155:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 156:src/complex.c **** 
 157:src/complex.c **** 	const int save = setComplexContext();
ARM GAS  /tmp/ccFQ6cnP.s 			page 6


 158:src/complex.c **** 	dn_multiply(&t1.n, a, c);
 159:src/complex.c **** 	dn_multiply(&t2.n, b, d);
 160:src/complex.c **** 	dn_subtract(&x.n, &t1.n, &t2.n);
 161:src/complex.c **** 
 162:src/complex.c **** 	dn_multiply(&u1.n, a, d);
 163:src/complex.c **** 	dn_multiply(&u2.n, b, c);
 164:src/complex.c **** 	dn_add(&y.n, &u1.n, &u2.n);
 165:src/complex.c **** 
 166:src/complex.c **** 	complexResult(rx, ry, &x, &y, save);
 167:src/complex.c **** }
 168:src/complex.c **** 
 169:src/complex.c **** // (a + i b) / (c + i d) = (a*c + b*d) / (c*c + d*d) + i (b*c - a*d) / (c*c + d*d)
 170:src/complex.c **** void cmplxDivide(decNumber *rx, decNumber *ry,
 171:src/complex.c **** 		const decNumber *a, const decNumber *b,
 172:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 173:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 174:src/complex.c **** 
 175:src/complex.c **** 	const int save = setComplexContext();
 176:src/complex.c **** 	dn_multiply(&t1.n, c, c);
 177:src/complex.c **** 	dn_multiply(&t2.n, d, d);
 178:src/complex.c **** 	dn_add(&den.n, &t1.n, &t2.n);
 179:src/complex.c **** 
 180:src/complex.c **** 	dn_multiply(&t3.n, a, c);
 181:src/complex.c **** 	dn_multiply(&t2.n, b, d);
 182:src/complex.c **** 	dn_add(&t1.n, &t3.n, &t2.n);
 183:src/complex.c **** 
 184:src/complex.c **** 	dn_multiply(&t4.n, b, c);
 185:src/complex.c **** 	dn_multiply(&t2.n, a, d);
 186:src/complex.c **** 	dn_subtract(&t3.n, &t4.n, &t2.n);
 187:src/complex.c **** 
 188:src/complex.c **** 	dn_divide(&t2.n, &t1.n, &den.n);
 189:src/complex.c **** 	dn_divide(&t4.n, &t3.n, &den.n);
 190:src/complex.c **** 
 191:src/complex.c **** 	complexResult(rx, ry, &t2, &t4, save);
 192:src/complex.c **** }
 193:src/complex.c **** 
 194:src/complex.c **** void cmplxArg(decNumber *arg, const decNumber *a, const decNumber *b) {
 195:src/complex.c **** 	do_atan2(arg, b, a);
 196:src/complex.c **** }
 197:src/complex.c **** 
 198:src/complex.c **** void cmplxR(decNumber *r, const decNumber *a, const decNumber *b) {
 199:src/complex.c **** 	complexNumber a2, b2, s;
 200:src/complex.c **** 
 201:src/complex.c **** 	dn_multiply(&a2.n, a, a);
 202:src/complex.c **** 	dn_multiply(&b2.n, b, b);
 203:src/complex.c **** 	dn_add(&s.n, &a2.n, &b2.n);
 204:src/complex.c **** 	dn_sqrt(r, &s.n);
 205:src/complex.c **** }
 206:src/complex.c **** 
 207:src/complex.c **** //void cmplxFromPolar(decNumber *x, decNumber *y, const decNumber *r, const decNumber *t) {
 208:src/complex.c **** //	decNumber s, c
 209:src/complex.c **** 
 210:src/complex.c **** //	dn_sincos(t, &s, &c);
 211:src/complex.c **** //	dn_multiply(x, r, &c);
 212:src/complex.c **** //	dn_multiply(y, r, &s);
 213:src/complex.c **** //}
 214:src/complex.c **** 
ARM GAS  /tmp/ccFQ6cnP.s 			page 7


 215:src/complex.c **** void cmplxToPolar(decNumber *r, decNumber *t, const decNumber *x, const decNumber *y) {
 216:src/complex.c **** 	do_atan2(t, y, x);
 217:src/complex.c **** 	cmplxR(r, y, x);
 218:src/complex.c **** }
 219:src/complex.c **** 
 220:src/complex.c **** 
 221:src/complex.c **** 
 222:src/complex.c **** #ifndef TINY_BUILD
 223:src/complex.c **** // ( a + i * b ) ^ r
 224:src/complex.c **** static void cmplxPowerReal(decNumber *rx, decNumber *ry,
 225:src/complex.c **** 		const decNumber *a, const decNumber *b,
 226:src/complex.c **** 		const decNumber *r) {
 227:src/complex.c **** 	cmplxPower(rx, ry, a, b, r, &const_0);
 228:src/complex.c **** }
 229:src/complex.c **** #endif
 230:src/complex.c **** 
 231:src/complex.c **** // a ^ b = e ^ (b ln(a))
 232:src/complex.c **** void cmplxPower(decNumber *rx, decNumber *ry,
 233:src/complex.c **** 		const decNumber *a, const decNumber *b,
 234:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 235:src/complex.c **** #ifndef TINY_BUILD
 236:src/complex.c **** 	decNumber e1, e2, f1, f2;
 237:src/complex.c **** 
 238:src/complex.c **** 	if (dn_eq0(a) && dn_eq0(b)) {
 239:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 240:src/complex.c **** 			cmplx_NaN(rx, ry);
 241:src/complex.c **** 		else {
 242:src/complex.c **** 			decNumberZero(rx);
 243:src/complex.c **** 			decNumberZero(ry);
 244:src/complex.c **** 		}
 245:src/complex.c **** 	} else {
 246:src/complex.c **** 		cmplxLn(&e1, &e2, a, b);
 247:src/complex.c **** 		cmplxMultiply(&f1, &f2, &e1, &e2, c, d);
 248:src/complex.c **** 		cmplxExp(rx, ry, &f1, &f2);
 249:src/complex.c **** 	}
 250:src/complex.c **** #endif
 251:src/complex.c **** }
 252:src/complex.c **** 
 253:src/complex.c **** #ifdef INCLUDE_XROOT
 254:src/complex.c **** // (a, b) ^ 1 / (c, d)
 255:src/complex.c **** void cmplxXRoot(decNumber *rx, decNumber *ry,
 256:src/complex.c **** 		const decNumber *a, const decNumber *b,
 257:src/complex.c **** 		const decNumber *c, const decNumber *d) {
 258:src/complex.c **** 	decNumber g, h;
 259:src/complex.c **** 
 260:src/complex.c **** 	cmplxRecip(&g, &h, c, d);
 261:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 262:src/complex.c **** }
 263:src/complex.c **** #endif
 264:src/complex.c **** 
 265:src/complex.c **** 
 266:src/complex.c **** // abs(a + i b) = sqrt(a^2 + b^2)
 267:src/complex.c **** void cmplxAbs(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 268:src/complex.c **** 	cmplxR(rx, a, b);
 269:src/complex.c **** 	decNumberZero(ry);
 270:src/complex.c **** }
 271:src/complex.c **** 
ARM GAS  /tmp/ccFQ6cnP.s 			page 8


 272:src/complex.c **** // - (a + i b) = - a - i b
 273:src/complex.c **** void cmplxMinus(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 274:src/complex.c **** 	dn_minus(rx, a);
 275:src/complex.c **** 	dn_minus(ry, b);
 276:src/complex.c **** }
 277:src/complex.c **** 
 278:src/complex.c **** // 1 / (c + i d) = c / (c*c + d*d) + i (- d) / (c*c + d*d)
 279:src/complex.c **** void cmplxRecip(decNumber *rx, decNumber *ry, const decNumber *c, const decNumber *d) {
 280:src/complex.c **** #ifndef TINY_BUILD
 281:src/complex.c **** 	complexNumber t, u, v, den;
 282:src/complex.c **** 
 283:src/complex.c **** 	const int save = setComplexContext();
 284:src/complex.c **** 
 285:src/complex.c **** 	dn_multiply(&u.n, c, c);
 286:src/complex.c **** 	dn_multiply(&v.n, d, d);
 287:src/complex.c **** 	dn_add(&den.n, &u.n, &v.n);
 288:src/complex.c **** 	dn_minus(&t.n, d);
 289:src/complex.c **** 
 290:src/complex.c **** 	dn_divide(&u.n, c, &den.n);
 291:src/complex.c **** 	dn_divide(&v.n, &t.n, &den.n);
 292:src/complex.c **** 
 293:src/complex.c **** 	complexResult(rx, ry, &u, &v, save);
 294:src/complex.c **** #endif
 295:src/complex.c **** }
 296:src/complex.c **** 
 297:src/complex.c **** // sqrt(a + i b) = +- (sqrt(r + a) + i sqrt(r - a) sign(b)) sqrt(2) / 2
 298:src/complex.c **** //		where r = sqrt(a^2 + b^2)
 299:src/complex.c **** void cmplxSqrt(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 300:src/complex.c **** #ifndef TINY_BUILD
 301:src/complex.c **** 	complexNumber fac, t1, u, v, x, y;
 302:src/complex.c **** 
 303:src/complex.c **** 	if (dn_eq0(b)) {
 304:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 305:src/complex.c **** 		if (decNumberIsNegative(a)) {
 306:src/complex.c **** 			dn_minus(&t1.n, a);
 307:src/complex.c **** 			dn_sqrt(ry, &t1.n);
 308:src/complex.c **** 			decNumberZero(rx);
 309:src/complex.c **** 		} else {
 310:src/complex.c **** 			dn_sqrt(rx, a);
 311:src/complex.c **** 			decNumberZero(ry);
 312:src/complex.c **** 		}
 313:src/complex.c **** 		return;
 314:src/complex.c **** 	} else {
 315:src/complex.c **** 		const int save = setComplexContext();
 316:src/complex.c **** 		cmplxR(&fac.n, a, b);
 317:src/complex.c **** 
 318:src/complex.c **** 		dn_subtract(&v.n, &fac.n, a);
 319:src/complex.c **** 		dn_sqrt(&u.n, &v.n);
 320:src/complex.c **** 		dn_add(&v.n, &fac.n, a);
 321:src/complex.c **** 		if (decNumberIsNegative(b)) {
 322:src/complex.c **** 			dn_minus(&t1.n, &u.n);
 323:src/complex.c **** 			dn_multiply(&y.n, &t1.n, &const_root2on2);
 324:src/complex.c **** 		} else
 325:src/complex.c **** 			dn_multiply(&y.n, &u.n, &const_root2on2);
 326:src/complex.c **** 
 327:src/complex.c **** 		dn_sqrt(&t1.n, &v.n);
 328:src/complex.c **** 		dn_multiply(&x.n, &t1.n, &const_root2on2);
ARM GAS  /tmp/ccFQ6cnP.s 			page 9


 329:src/complex.c **** 
 330:src/complex.c **** 		complexResult(rx, ry, &x, &y, save);
 331:src/complex.c **** 	}
 332:src/complex.c **** #endif
 333:src/complex.c **** }
 334:src/complex.c **** 
 335:src/complex.c **** // Fairly naive implementation...
 336:src/complex.c **** void cmplxCubeRoot(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 337:src/complex.c **** #ifndef TINY_BUILD
 338:src/complex.c **** 	decNumber t;
 339:src/complex.c **** 
 340:src/complex.c **** 	decNumberRecip(&t, &const_3);
 341:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 342:src/complex.c **** #endif
 343:src/complex.c **** }
 344:src/complex.c **** 
 345:src/complex.c **** 
 346:src/complex.c **** // sin(a + i b) = sin(a) cosh(b) + i cos(a) sinh(b)
 347:src/complex.c **** // cos(a + i b) = cos(a) cosh(b) - i sin(a) sinh(b)
 348:src/complex.c **** static void cmplx_sincos(const decNumber *a, const decNumber *b, decNumber *sx, decNumber *sy, decN
 128              		.loc 1 348 126 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 8, pretend = 0, frame = 144
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 349:src/complex.c **** 	decNumber sa, ca, sb, cb;
 132              		.loc 1 349 2 view .LVU21
 350:src/complex.c **** 
 351:src/complex.c **** 	if (dn_eq0(a) && decNumberIsInfinite(b)) {
 133              		.loc 1 351 2 view .LVU22
 348:src/complex.c **** 	decNumber sa, ca, sb, cb;
 134              		.loc 1 348 126 is_stmt 0 view .LVU23
 135 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 136              		.cfi_def_cfa_offset 20
 137              		.cfi_offset 4, -20
 138              		.cfi_offset 5, -16
 139              		.cfi_offset 6, -12
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 A5B0     		sub	sp, sp, #148
 143              		.cfi_def_cfa_offset 168
 348:src/complex.c **** 	decNumber sa, ca, sb, cb;
 144              		.loc 1 348 126 view .LVU24
 145 0004 0C46     		mov	r4, r1
 146 0006 1646     		mov	r6, r2
 147 0008 1D46     		mov	r5, r3
 148 000a 0746     		mov	r7, r0
 149              		.loc 1 351 6 view .LVU25
 150 000c FFF7FEFF 		bl	dn_eq0
 151              	.LVL13:
 152              		.loc 1 351 5 view .LVU26
 153 0010 10B1     		cbz	r0, .L5
 154              		.loc 1 351 16 discriminator 1 view .LVU27
 155 0012 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 156 0014 5B06     		lsls	r3, r3, #25
 157 0016 23D4     		bmi	.L14
 158              	.L5:
 352:src/complex.c **** 		decNumberZero(sx);
ARM GAS  /tmp/ccFQ6cnP.s 			page 10


 353:src/complex.c **** 		decNumberCopy(sy, b);
 354:src/complex.c **** 		set_inf(cx);
 355:src/complex.c **** 		decNumberZero(cy);
 356:src/complex.c **** 	} else {
 357:src/complex.c **** 		dn_sincos(a, &sa, &ca);
 159              		.loc 1 357 3 is_stmt 1 view .LVU28
 160 0018 3846     		mov	r0, r7
 161 001a 09AA     		add	r2, sp, #36
 162 001c 6946     		mov	r1, sp
 163 001e FFF7FEFF 		bl	dn_sincos
 164              	.LVL14:
 358:src/complex.c **** 		dn_sinhcosh(b, &sb, &cb);
 165              		.loc 1 358 3 view .LVU29
 166 0022 2046     		mov	r0, r4
 167 0024 1BAA     		add	r2, sp, #108
 168 0026 12A9     		add	r1, sp, #72
 169 0028 FFF7FEFF 		bl	dn_sinhcosh
 170              	.LVL15:
 359:src/complex.c **** 
 360:src/complex.c **** 		dn_multiply(sx, &sa, &cb);
 171              		.loc 1 360 3 view .LVU30
 172 002c 1BAA     		add	r2, sp, #108
 173 002e 6946     		mov	r1, sp
 174 0030 3046     		mov	r0, r6
 175 0032 FFF7FEFF 		bl	dn_multiply
 176              	.LVL16:
 361:src/complex.c **** 		dn_multiply(sy, &ca, &sb);
 177              		.loc 1 361 3 view .LVU31
 178 0036 12AA     		add	r2, sp, #72
 179 0038 09A9     		add	r1, sp, #36
 180 003a 2846     		mov	r0, r5
 181 003c FFF7FEFF 		bl	dn_multiply
 182              	.LVL17:
 362:src/complex.c **** 		dn_multiply(cx, &ca, &cb);
 183              		.loc 1 362 3 view .LVU32
 184 0040 1BAA     		add	r2, sp, #108
 185 0042 09A9     		add	r1, sp, #36
 186 0044 2A98     		ldr	r0, [sp, #168]
 187 0046 FFF7FEFF 		bl	dn_multiply
 188              	.LVL18:
 363:src/complex.c **** 		dn_multiply(&ca, &sa, &sb);
 189              		.loc 1 363 3 view .LVU33
 190 004a 12AA     		add	r2, sp, #72
 191 004c 6946     		mov	r1, sp
 192 004e 09A8     		add	r0, sp, #36
 193 0050 FFF7FEFF 		bl	dn_multiply
 194              	.LVL19:
 364:src/complex.c **** 		dn_minus(cy, &ca);
 195              		.loc 1 364 3 view .LVU34
 196 0054 2B98     		ldr	r0, [sp, #172]
 197 0056 09A9     		add	r1, sp, #36
 198 0058 FFF7FEFF 		bl	dn_minus
 199              	.LVL20:
 365:src/complex.c **** 	}
 366:src/complex.c **** }
 200              		.loc 1 366 1 is_stmt 0 view .LVU35
 201 005c 25B0     		add	sp, sp, #148
ARM GAS  /tmp/ccFQ6cnP.s 			page 11


 202              		.cfi_remember_state
 203              		.cfi_def_cfa_offset 20
 204              		@ sp needed
 205 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 206              	.LVL21:
 207              	.L14:
 208              		.cfi_restore_state
 352:src/complex.c **** 		decNumberCopy(sy, b);
 209              		.loc 1 352 3 is_stmt 1 view .LVU36
 210 0060 3046     		mov	r0, r6
 211 0062 FFF7FEFF 		bl	decNumberZero
 212              	.LVL22:
 353:src/complex.c **** 		set_inf(cx);
 213              		.loc 1 353 3 view .LVU37
 214 0066 2146     		mov	r1, r4
 215 0068 2846     		mov	r0, r5
 216 006a FFF7FEFF 		bl	decNumberCopy
 217              	.LVL23:
 354:src/complex.c **** 		decNumberZero(cy);
 218              		.loc 1 354 3 view .LVU38
 219 006e 2A98     		ldr	r0, [sp, #168]
 220 0070 FFF7FEFF 		bl	set_inf
 221              	.LVL24:
 355:src/complex.c **** 	} else {
 222              		.loc 1 355 3 view .LVU39
 223 0074 2B98     		ldr	r0, [sp, #172]
 224 0076 FFF7FEFF 		bl	decNumberZero
 225              	.LVL25:
 226              		.loc 1 366 1 is_stmt 0 view .LVU40
 227 007a 25B0     		add	sp, sp, #148
 228              		.cfi_def_cfa_offset 20
 229              		@ sp needed
 230 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 231              		.loc 1 366 1 view .LVU41
 232              		.cfi_endproc
 233              	.LFE21:
 235 007e 00BF     		.section	.text.cmplx_sinhcosh,"ax",%progbits
 236              		.align	1
 237              		.p2align 2,,3
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	cmplx_sinhcosh:
 244              	.LVL26:
 245              	.LFB26:
 367:src/complex.c **** 
 368:src/complex.c **** // sin(a + i b) = sin(a) cosh(b) + i cos(a) sinh(b)
 369:src/complex.c **** void cmplxSin(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 370:src/complex.c **** 	decNumber z;
 371:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 372:src/complex.c **** }
 373:src/complex.c **** 
 374:src/complex.c **** // cos(a + i b) = cos(a) cosh(b) - i sin(a) sinh(b)
 375:src/complex.c **** void cmplxCos(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 376:src/complex.c **** 	decNumber z;
 377:src/complex.c **** 	cmplx_sincos(a, b, &z, &z, rx, ry);
ARM GAS  /tmp/ccFQ6cnP.s 			page 12


 378:src/complex.c **** }
 379:src/complex.c **** 
 380:src/complex.c **** // tan(a + i b) = (sin(a) cosh(b) + i cos(a) sinh(b)) / (cos(a) cosh(b) - i sin(a) sinh(b))
 381:src/complex.c **** void cmplxTan(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 382:src/complex.c **** #ifndef TINY_BUILD
 383:src/complex.c **** 	decNumber c1, c2, s1, s2;
 384:src/complex.c **** 
 385:src/complex.c **** 	if (dn_eq0(a) && decNumberIsInfinite(b)) {
 386:src/complex.c **** 		decNumberZero(rx);
 387:src/complex.c **** 		if (decNumberIsNegative(b))
 388:src/complex.c **** 			dn__1(ry);
 389:src/complex.c **** 		else
 390:src/complex.c **** 			dn_1(ry);
 391:src/complex.c **** 	} else {
 392:src/complex.c **** 		cmplx_sincos(a, b, &s1, &s2, &c1, &c2);
 393:src/complex.c **** 		cmplxDivide(rx, ry, &s1, &s2, &c1, &c2);
 394:src/complex.c **** 	}
 395:src/complex.c **** #endif
 396:src/complex.c **** }
 397:src/complex.c **** 
 398:src/complex.c **** 
 399:src/complex.c **** // sinc(a + i b) = sin(a + i b) / (a + i b)
 400:src/complex.c **** void cmplxSinc(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 401:src/complex.c **** #ifndef TINY_BUILD
 402:src/complex.c **** 	decNumber s1, s2;
 403:src/complex.c **** 
 404:src/complex.c **** 	if (dn_eq0(b)) {
 405:src/complex.c **** 		decNumberSinc(rx, a);
 406:src/complex.c **** 		decNumberZero(ry);
 407:src/complex.c **** 	} else {
 408:src/complex.c **** 		cmplxSin(&s1, &s2, a, b);
 409:src/complex.c **** 		cmplxDivide(rx, ry, &s1, &s2, a, b);
 410:src/complex.c **** 	}
 411:src/complex.c **** #endif
 412:src/complex.c **** }
 413:src/complex.c **** 
 414:src/complex.c **** // sinh(a + i b) = sinh(a) cos(b) + i cosh(a) sin(b)
 415:src/complex.c **** // cosh(a + i b) = cosh(a) cos(b) + i sinh(a) sin(b)
 416:src/complex.c **** static void cmplx_sinhcosh(const decNumber *a, const decNumber *b, decNumber *sx, decNumber *sy, de
 246              		.loc 1 416 128 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 8, pretend = 0, frame = 144
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 417:src/complex.c **** 	decNumber sa, ca, sb, cb;
 250              		.loc 1 417 2 view .LVU43
 418:src/complex.c **** 
 419:src/complex.c **** 	dn_sinhcosh(a, &sa, &ca);
 251              		.loc 1 419 2 view .LVU44
 416:src/complex.c **** 	decNumber sa, ca, sb, cb;
 252              		.loc 1 416 128 is_stmt 0 view .LVU45
 253 0000 70B5     		push	{r4, r5, r6, lr}
 254              		.cfi_def_cfa_offset 16
 255              		.cfi_offset 4, -16
 256              		.cfi_offset 5, -12
 257              		.cfi_offset 6, -8
 258              		.cfi_offset 14, -4
 259 0002 A4B0     		sub	sp, sp, #144
ARM GAS  /tmp/ccFQ6cnP.s 			page 13


 260              		.cfi_def_cfa_offset 160
 416:src/complex.c **** 	decNumber sa, ca, sb, cb;
 261              		.loc 1 416 128 view .LVU46
 262 0004 0E46     		mov	r6, r1
 263 0006 1546     		mov	r5, r2
 264              		.loc 1 419 2 view .LVU47
 265 0008 6946     		mov	r1, sp
 266              	.LVL27:
 267              		.loc 1 419 2 view .LVU48
 268 000a 09AA     		add	r2, sp, #36
 269              	.LVL28:
 416:src/complex.c **** 	decNumber sa, ca, sb, cb;
 270              		.loc 1 416 128 view .LVU49
 271 000c 1C46     		mov	r4, r3
 272              		.loc 1 419 2 view .LVU50
 273 000e FFF7FEFF 		bl	dn_sinhcosh
 274              	.LVL29:
 420:src/complex.c **** 	dn_sincos(b, &sb, &cb);
 275              		.loc 1 420 2 is_stmt 1 view .LVU51
 276 0012 3046     		mov	r0, r6
 277 0014 1BAA     		add	r2, sp, #108
 278 0016 12A9     		add	r1, sp, #72
 279 0018 FFF7FEFF 		bl	dn_sincos
 280              	.LVL30:
 421:src/complex.c **** 
 422:src/complex.c **** 	dn_multiply(sx, &sa, &cb);
 281              		.loc 1 422 2 view .LVU52
 282 001c 1BAA     		add	r2, sp, #108
 283 001e 6946     		mov	r1, sp
 284 0020 2846     		mov	r0, r5
 285 0022 FFF7FEFF 		bl	dn_multiply
 286              	.LVL31:
 423:src/complex.c **** 	dn_multiply(sy, &ca, &sb);
 287              		.loc 1 423 2 view .LVU53
 288 0026 12AA     		add	r2, sp, #72
 289 0028 09A9     		add	r1, sp, #36
 290 002a 2046     		mov	r0, r4
 291 002c FFF7FEFF 		bl	dn_multiply
 292              	.LVL32:
 424:src/complex.c **** 	dn_multiply(cx, &ca, &cb);
 293              		.loc 1 424 2 view .LVU54
 294 0030 1BAA     		add	r2, sp, #108
 295 0032 09A9     		add	r1, sp, #36
 296 0034 2898     		ldr	r0, [sp, #160]
 297 0036 FFF7FEFF 		bl	dn_multiply
 298              	.LVL33:
 425:src/complex.c **** 	dn_multiply(cy, &sa, &sb);
 299              		.loc 1 425 2 view .LVU55
 300 003a 2998     		ldr	r0, [sp, #164]
 301 003c 12AA     		add	r2, sp, #72
 302 003e 6946     		mov	r1, sp
 303 0040 FFF7FEFF 		bl	dn_multiply
 304              	.LVL34:
 426:src/complex.c **** }
 305              		.loc 1 426 1 is_stmt 0 view .LVU56
 306 0044 24B0     		add	sp, sp, #144
 307              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccFQ6cnP.s 			page 14


 308              		@ sp needed
 309 0046 70BD     		pop	{r4, r5, r6, pc}
 310              		.loc 1 426 1 view .LVU57
 311              		.cfi_endproc
 312              	.LFE26:
 314              		.section	.text.cmplx_NaN,"ax",%progbits
 315              		.align	1
 316              		.p2align 2,,3
 317              		.global	cmplx_NaN
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	cmplx_NaN:
 324              	.LVL35:
 325              	.LFB3:
  75:src/complex.c **** 	set_NaN(x);
 326              		.loc 1 75 44 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
  76:src/complex.c **** 	set_NaN(y);
 330              		.loc 1 76 2 view .LVU59
  75:src/complex.c **** 	set_NaN(x);
 331              		.loc 1 75 44 is_stmt 0 view .LVU60
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
  75:src/complex.c **** 	set_NaN(x);
 336              		.loc 1 75 44 view .LVU61
 337 0002 0C46     		mov	r4, r1
  76:src/complex.c **** 	set_NaN(y);
 338              		.loc 1 76 2 view .LVU62
 339 0004 FFF7FEFF 		bl	set_NaN
 340              	.LVL36:
  77:src/complex.c **** }
 341              		.loc 1 77 2 is_stmt 1 view .LVU63
 342 0008 2046     		mov	r0, r4
  78:src/complex.c **** 
 343              		.loc 1 78 1 is_stmt 0 view .LVU64
 344 000a BDE81040 		pop	{r4, lr}
 345              		.cfi_restore 14
 346              		.cfi_restore 4
 347              		.cfi_def_cfa_offset 0
 348              	.LVL37:
  77:src/complex.c **** }
 349              		.loc 1 77 2 view .LVU65
 350 000e FFF7FEBF 		b	set_NaN
 351              	.LVL38:
  77:src/complex.c **** }
 352              		.loc 1 77 2 view .LVU66
 353              		.cfi_endproc
 354              	.LFE3:
 356 0012 00BF     		.section	.text.cmplxAdd,"ax",%progbits
 357              		.align	1
 358              		.p2align 2,,3
ARM GAS  /tmp/ccFQ6cnP.s 			page 15


 359              		.global	cmplxAdd
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
 365              	cmplxAdd:
 366              	.LVL39:
 367              	.LFB6:
 138:src/complex.c **** 	dn_add(rx, a, c);
 368              		.loc 1 138 43 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 8, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 139:src/complex.c **** 	dn_add(ry, b, d);
 372              		.loc 1 139 2 view .LVU68
 138:src/complex.c **** 	dn_add(rx, a, c);
 373              		.loc 1 138 43 is_stmt 0 view .LVU69
 374 0000 70B5     		push	{r4, r5, r6, lr}
 375              		.cfi_def_cfa_offset 16
 376              		.cfi_offset 4, -16
 377              		.cfi_offset 5, -12
 378              		.cfi_offset 6, -8
 379              		.cfi_offset 14, -4
 138:src/complex.c **** 	dn_add(rx, a, c);
 380              		.loc 1 138 43 view .LVU70
 381 0002 0C46     		mov	r4, r1
 139:src/complex.c **** 	dn_add(ry, b, d);
 382              		.loc 1 139 2 view .LVU71
 383 0004 1146     		mov	r1, r2
 384              	.LVL40:
 139:src/complex.c **** 	dn_add(ry, b, d);
 385              		.loc 1 139 2 view .LVU72
 386 0006 DDE90426 		ldrd	r2, r6, [sp, #16]
 387              	.LVL41:
 138:src/complex.c **** 	dn_add(rx, a, c);
 388              		.loc 1 138 43 view .LVU73
 389 000a 1D46     		mov	r5, r3
 139:src/complex.c **** 	dn_add(ry, b, d);
 390              		.loc 1 139 2 view .LVU74
 391 000c FFF7FEFF 		bl	dn_add
 392              	.LVL42:
 140:src/complex.c **** }
 393              		.loc 1 140 2 is_stmt 1 view .LVU75
 394 0010 3246     		mov	r2, r6
 395 0012 2946     		mov	r1, r5
 396 0014 2046     		mov	r0, r4
 141:src/complex.c **** 
 397              		.loc 1 141 1 is_stmt 0 view .LVU76
 398 0016 BDE87040 		pop	{r4, r5, r6, lr}
 399              		.cfi_restore 14
 400              		.cfi_restore 6
 401              		.cfi_restore 5
 402              		.cfi_restore 4
 403              		.cfi_def_cfa_offset 0
 404              	.LVL43:
 140:src/complex.c **** }
 405              		.loc 1 140 2 view .LVU77
ARM GAS  /tmp/ccFQ6cnP.s 			page 16


 406 001a FFF7FEBF 		b	dn_add
 407              	.LVL44:
 140:src/complex.c **** }
 408              		.loc 1 140 2 view .LVU78
 409              		.cfi_endproc
 410              	.LFE6:
 412 001e 00BF     		.section	.text.cmplxSubtract,"ax",%progbits
 413              		.align	1
 414              		.p2align 2,,3
 415              		.global	cmplxSubtract
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv4-sp-d16
 421              	cmplxSubtract:
 422              	.LVL45:
 423              	.LFB7:
 146:src/complex.c **** 	dn_subtract(rx, a, c);
 424              		.loc 1 146 43 is_stmt 1 view -0
 425              		.cfi_startproc
 426              		@ args = 8, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 428              		.loc 1 147 2 view .LVU80
 146:src/complex.c **** 	dn_subtract(rx, a, c);
 429              		.loc 1 146 43 is_stmt 0 view .LVU81
 430 0000 70B5     		push	{r4, r5, r6, lr}
 431              		.cfi_def_cfa_offset 16
 432              		.cfi_offset 4, -16
 433              		.cfi_offset 5, -12
 434              		.cfi_offset 6, -8
 435              		.cfi_offset 14, -4
 146:src/complex.c **** 	dn_subtract(rx, a, c);
 436              		.loc 1 146 43 view .LVU82
 437 0002 0C46     		mov	r4, r1
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 438              		.loc 1 147 2 view .LVU83
 439 0004 1146     		mov	r1, r2
 440              	.LVL46:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 441              		.loc 1 147 2 view .LVU84
 442 0006 DDE90426 		ldrd	r2, r6, [sp, #16]
 443              	.LVL47:
 146:src/complex.c **** 	dn_subtract(rx, a, c);
 444              		.loc 1 146 43 view .LVU85
 445 000a 1D46     		mov	r5, r3
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 446              		.loc 1 147 2 view .LVU86
 447 000c FFF7FEFF 		bl	dn_subtract
 448              	.LVL48:
 148:src/complex.c **** }
 449              		.loc 1 148 2 is_stmt 1 view .LVU87
 450 0010 3246     		mov	r2, r6
 451 0012 2946     		mov	r1, r5
 452 0014 2046     		mov	r0, r4
 149:src/complex.c **** 
 453              		.loc 1 149 1 is_stmt 0 view .LVU88
ARM GAS  /tmp/ccFQ6cnP.s 			page 17


 454 0016 BDE87040 		pop	{r4, r5, r6, lr}
 455              		.cfi_restore 14
 456              		.cfi_restore 6
 457              		.cfi_restore 5
 458              		.cfi_restore 4
 459              		.cfi_def_cfa_offset 0
 460              	.LVL49:
 148:src/complex.c **** }
 461              		.loc 1 148 2 view .LVU89
 462 001a FFF7FEBF 		b	dn_subtract
 463              	.LVL50:
 148:src/complex.c **** }
 464              		.loc 1 148 2 view .LVU90
 465              		.cfi_endproc
 466              	.LFE7:
 468 001e 00BF     		.section	.text.cmplxMultiply,"ax",%progbits
 469              		.align	1
 470              		.p2align 2,,3
 471              		.global	cmplxMultiply
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu fpv4-sp-d16
 477              	cmplxMultiply:
 478              	.LVL51:
 479              	.LFB8:
 154:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 480              		.loc 1 154 43 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 8, pretend = 0, frame = 360
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 155:src/complex.c **** 
 484              		.loc 1 155 2 view .LVU92
 157:src/complex.c **** 	dn_multiply(&t1.n, a, c);
 485              		.loc 1 157 2 view .LVU93
 486              	.LBB70:
 487              	.LBI70:
  56:src/complex.c **** 	int digits = Ctx.digits;
 488              		.loc 1 56 12 view .LVU94
 489              	.LBB71:
  57:src/complex.c **** 	if (is_dblmode())
 490              		.loc 1 57 2 view .LVU95
 491              	.LBE71:
 492              	.LBE70:
 154:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 493              		.loc 1 154 43 is_stmt 0 view .LVU96
 494 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 495              		.cfi_def_cfa_offset 36
 496              		.cfi_offset 4, -36
 497              		.cfi_offset 5, -32
 498              		.cfi_offset 6, -28
 499              		.cfi_offset 7, -24
 500              		.cfi_offset 8, -20
 501              		.cfi_offset 9, -16
 502              		.cfi_offset 10, -12
 503              		.cfi_offset 11, -8
 504              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFQ6cnP.s 			page 18


 505              	.LBB75:
 506              	.LBB72:
  57:src/complex.c **** 	if (is_dblmode())
 507              		.loc 1 57 6 view .LVU97
 508 0004 DFF87880 		ldr	r8, .L29
 509              	.LBE72:
 510              	.LBE75:
 154:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 511              		.loc 1 154 43 view .LVU98
 512 0008 DBB0     		sub	sp, sp, #364
 513              		.cfi_def_cfa_offset 400
 514              	.LBB76:
 515              	.LBB73:
  57:src/complex.c **** 	if (is_dblmode())
 516              		.loc 1 57 6 view .LVU99
 517 000a D8F800B0 		ldr	fp, [r8]
 518              	.LVL52:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 519              		.loc 1 58 2 is_stmt 1 view .LVU100
 520              	.LBE73:
 521              	.LBE76:
 154:src/complex.c **** 	complexNumber t1, t2, u1, u2, x, y;
 522              		.loc 1 154 43 is_stmt 0 view .LVU101
 523 000e DDF89091 		ldr	r9, [sp, #400]
 524 0012 DDF894A1 		ldr	r10, [sp, #404]
 525 0016 0746     		mov	r7, r0
 526 0018 0E46     		mov	r6, r1
 527 001a 1546     		mov	r5, r2
 528 001c 1C46     		mov	r4, r3
 529              	.LBB77:
 530              	.LBB74:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 531              		.loc 1 58 6 view .LVU102
 532 001e FFF7FEFF 		bl	is_dblmode
 533              	.LVL53:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 534              		.loc 1 58 5 view .LVU103
 535 0022 10B1     		cbz	r0, .L24
  59:src/complex.c **** 	return digits;
 536              		.loc 1 59 3 is_stmt 1 view .LVU104
  59:src/complex.c **** 	return digits;
 537              		.loc 1 59 14 is_stmt 0 view .LVU105
 538 0024 4823     		movs	r3, #72
 539 0026 C8F80030 		str	r3, [r8]
 540              	.L24:
  60:src/complex.c **** }
 541              		.loc 1 60 2 is_stmt 1 view .LVU106
 542              	.LVL54:
  60:src/complex.c **** }
 543              		.loc 1 60 2 is_stmt 0 view .LVU107
 544              	.LBE74:
 545              	.LBE77:
 158:src/complex.c **** 	dn_multiply(&t2.n, b, d);
 546              		.loc 1 158 2 is_stmt 1 view .LVU108
 547 002a 4A46     		mov	r2, r9
 548 002c 2946     		mov	r1, r5
 549 002e 6846     		mov	r0, sp
ARM GAS  /tmp/ccFQ6cnP.s 			page 19


 550 0030 FFF7FEFF 		bl	dn_multiply
 551              	.LVL55:
 159:src/complex.c **** 	dn_subtract(&x.n, &t1.n, &t2.n);
 552              		.loc 1 159 2 view .LVU109
 553 0034 5246     		mov	r2, r10
 554 0036 2146     		mov	r1, r4
 555 0038 0FA8     		add	r0, sp, #60
 556 003a FFF7FEFF 		bl	dn_multiply
 557              	.LVL56:
 160:src/complex.c **** 
 558              		.loc 1 160 2 view .LVU110
 559 003e 0FAA     		add	r2, sp, #60
 560 0040 6946     		mov	r1, sp
 561 0042 3CA8     		add	r0, sp, #240
 562 0044 FFF7FEFF 		bl	dn_subtract
 563              	.LVL57:
 162:src/complex.c **** 	dn_multiply(&u2.n, b, c);
 564              		.loc 1 162 2 view .LVU111
 565 0048 5246     		mov	r2, r10
 566 004a 2946     		mov	r1, r5
 567 004c 1EA8     		add	r0, sp, #120
 568 004e FFF7FEFF 		bl	dn_multiply
 569              	.LVL58:
 163:src/complex.c **** 	dn_add(&y.n, &u1.n, &u2.n);
 570              		.loc 1 163 2 view .LVU112
 571 0052 4A46     		mov	r2, r9
 572 0054 2146     		mov	r1, r4
 573 0056 2DA8     		add	r0, sp, #180
 574 0058 FFF7FEFF 		bl	dn_multiply
 575              	.LVL59:
 164:src/complex.c **** 
 576              		.loc 1 164 2 view .LVU113
 577 005c 2DAA     		add	r2, sp, #180
 578 005e 1EA9     		add	r1, sp, #120
 579 0060 4BA8     		add	r0, sp, #300
 580 0062 FFF7FEFF 		bl	dn_add
 581              	.LVL60:
 166:src/complex.c **** }
 582              		.loc 1 166 2 view .LVU114
 583              	.LBB78:
 584              	.LBI78:
  67:src/complex.c **** 	resetComplexContext(saved);
 585              		.loc 1 67 13 view .LVU115
 586              	.LBB79:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 587              		.loc 1 68 2 view .LVU116
 588              	.LBB80:
 589              	.LBI80:
  63:src/complex.c **** 	Ctx.digits = x;
 590              		.loc 1 63 13 view .LVU117
 591              	.LBB81:
  64:src/complex.c **** }
 592              		.loc 1 64 2 view .LVU118
 593              	.LBE81:
 594              	.LBE80:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 595              		.loc 1 69 2 is_stmt 0 view .LVU119
ARM GAS  /tmp/ccFQ6cnP.s 			page 20


 596 0066 3CA9     		add	r1, sp, #240
 597              	.LVL61:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 598              		.loc 1 69 2 view .LVU120
 599 0068 3846     		mov	r0, r7
 600              	.LBB83:
 601              	.LBB82:
  64:src/complex.c **** }
 602              		.loc 1 64 13 view .LVU121
 603 006a C8F800B0 		str	fp, [r8]
 604              	.LVL62:
  64:src/complex.c **** }
 605              		.loc 1 64 13 view .LVU122
 606              	.LBE82:
 607              	.LBE83:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 608              		.loc 1 69 2 is_stmt 1 view .LVU123
 609 006e FFF7FEFF 		bl	dn_plus
 610              	.LVL63:
  70:src/complex.c **** }
 611              		.loc 1 70 2 view .LVU124
 612 0072 4BA9     		add	r1, sp, #300
 613              	.LVL64:
  70:src/complex.c **** }
 614              		.loc 1 70 2 is_stmt 0 view .LVU125
 615 0074 3046     		mov	r0, r6
 616 0076 FFF7FEFF 		bl	dn_plus
 617              	.LVL65:
  70:src/complex.c **** }
 618              		.loc 1 70 2 view .LVU126
 619              	.LBE79:
 620              	.LBE78:
 167:src/complex.c **** 
 621              		.loc 1 167 1 view .LVU127
 622 007a 5BB0     		add	sp, sp, #364
 623              		.cfi_def_cfa_offset 36
 624              		@ sp needed
 625 007c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 626              	.LVL66:
 627              	.L30:
 167:src/complex.c **** 
 628              		.loc 1 167 1 view .LVU128
 629              		.align	2
 630              	.L29:
 631 0080 00000000 		.word	Ctx
 632              		.cfi_endproc
 633              	.LFE8:
 635              		.section	.text.cmplxDivide,"ax",%progbits
 636              		.align	1
 637              		.p2align 2,,3
 638              		.global	cmplxDivide
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu fpv4-sp-d16
 644              	cmplxDivide:
 645              	.LVL67:
ARM GAS  /tmp/ccFQ6cnP.s 			page 21


 646              	.LFB9:
 172:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 647              		.loc 1 172 43 is_stmt 1 view -0
 648              		.cfi_startproc
 649              		@ args = 8, pretend = 0, frame = 304
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 173:src/complex.c **** 
 651              		.loc 1 173 2 view .LVU130
 175:src/complex.c **** 	dn_multiply(&t1.n, c, c);
 652              		.loc 1 175 2 view .LVU131
 653              	.LBB84:
 654              	.LBI84:
  56:src/complex.c **** 	int digits = Ctx.digits;
 655              		.loc 1 56 12 view .LVU132
 656              	.LBB85:
  57:src/complex.c **** 	if (is_dblmode())
 657              		.loc 1 57 2 view .LVU133
 658              	.LBE85:
 659              	.LBE84:
 172:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 660              		.loc 1 172 43 is_stmt 0 view .LVU134
 661 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 662              		.cfi_def_cfa_offset 36
 663              		.cfi_offset 4, -36
 664              		.cfi_offset 5, -32
 665              		.cfi_offset 6, -28
 666              		.cfi_offset 7, -24
 667              		.cfi_offset 8, -20
 668              		.cfi_offset 9, -16
 669              		.cfi_offset 10, -12
 670              		.cfi_offset 11, -8
 671              		.cfi_offset 14, -4
 672              	.LBB89:
 673              	.LBB86:
  57:src/complex.c **** 	if (is_dblmode())
 674              		.loc 1 57 6 view .LVU135
 675 0004 DFF8A8A0 		ldr	r10, .L37
 676              	.LBE86:
 677              	.LBE89:
 172:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 678              		.loc 1 172 43 view .LVU136
 679 0008 CDB0     		sub	sp, sp, #308
 680              		.cfi_def_cfa_offset 344
 681              	.LBB90:
 682              	.LBB87:
  57:src/complex.c **** 	if (is_dblmode())
 683              		.loc 1 57 6 view .LVU137
 684 000a DAF800B0 		ldr	fp, [r10]
 685              	.LVL68:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 686              		.loc 1 58 2 is_stmt 1 view .LVU138
 687              	.LBE87:
 688              	.LBE90:
 172:src/complex.c **** 	complexNumber t1, t2, t3, t4, den;
 689              		.loc 1 172 43 is_stmt 0 view .LVU139
 690 000e 569F     		ldr	r7, [sp, #344]
 691 0010 579D     		ldr	r5, [sp, #348]
ARM GAS  /tmp/ccFQ6cnP.s 			page 22


 692 0012 8146     		mov	r9, r0
 693 0014 8846     		mov	r8, r1
 694 0016 1446     		mov	r4, r2
 695 0018 1E46     		mov	r6, r3
 696              	.LBB91:
 697              	.LBB88:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 698              		.loc 1 58 6 view .LVU140
 699 001a FFF7FEFF 		bl	is_dblmode
 700              	.LVL69:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 701              		.loc 1 58 5 view .LVU141
 702 001e 10B1     		cbz	r0, .L32
  59:src/complex.c **** 	return digits;
 703              		.loc 1 59 3 is_stmt 1 view .LVU142
  59:src/complex.c **** 	return digits;
 704              		.loc 1 59 14 is_stmt 0 view .LVU143
 705 0020 4823     		movs	r3, #72
 706 0022 CAF80030 		str	r3, [r10]
 707              	.L32:
  60:src/complex.c **** }
 708              		.loc 1 60 2 is_stmt 1 view .LVU144
 709              	.LVL70:
  60:src/complex.c **** }
 710              		.loc 1 60 2 is_stmt 0 view .LVU145
 711              	.LBE88:
 712              	.LBE91:
 176:src/complex.c **** 	dn_multiply(&t2.n, d, d);
 713              		.loc 1 176 2 is_stmt 1 view .LVU146
 714 0026 3A46     		mov	r2, r7
 715 0028 3946     		mov	r1, r7
 716 002a 01A8     		add	r0, sp, #4
 717 002c FFF7FEFF 		bl	dn_multiply
 718              	.LVL71:
 177:src/complex.c **** 	dn_add(&den.n, &t1.n, &t2.n);
 719              		.loc 1 177 2 view .LVU147
 720 0030 2A46     		mov	r2, r5
 721 0032 2946     		mov	r1, r5
 722 0034 10A8     		add	r0, sp, #64
 723 0036 FFF7FEFF 		bl	dn_multiply
 724              	.LVL72:
 178:src/complex.c **** 
 725              		.loc 1 178 2 view .LVU148
 726 003a 10AA     		add	r2, sp, #64
 727 003c 01A9     		add	r1, sp, #4
 728 003e 3DA8     		add	r0, sp, #244
 729 0040 FFF7FEFF 		bl	dn_add
 730              	.LVL73:
 180:src/complex.c **** 	dn_multiply(&t2.n, b, d);
 731              		.loc 1 180 2 view .LVU149
 732 0044 3A46     		mov	r2, r7
 733 0046 2146     		mov	r1, r4
 734 0048 1FA8     		add	r0, sp, #124
 735 004a FFF7FEFF 		bl	dn_multiply
 736              	.LVL74:
 181:src/complex.c **** 	dn_add(&t1.n, &t3.n, &t2.n);
 737              		.loc 1 181 2 view .LVU150
ARM GAS  /tmp/ccFQ6cnP.s 			page 23


 738 004e 2A46     		mov	r2, r5
 739 0050 3146     		mov	r1, r6
 740 0052 10A8     		add	r0, sp, #64
 741 0054 FFF7FEFF 		bl	dn_multiply
 742              	.LVL75:
 182:src/complex.c **** 
 743              		.loc 1 182 2 view .LVU151
 744 0058 10AA     		add	r2, sp, #64
 745 005a 1FA9     		add	r1, sp, #124
 746 005c 01A8     		add	r0, sp, #4
 747 005e FFF7FEFF 		bl	dn_add
 748              	.LVL76:
 184:src/complex.c **** 	dn_multiply(&t2.n, a, d);
 749              		.loc 1 184 2 view .LVU152
 750 0062 3A46     		mov	r2, r7
 751 0064 3146     		mov	r1, r6
 752 0066 2EA8     		add	r0, sp, #184
 753 0068 FFF7FEFF 		bl	dn_multiply
 754              	.LVL77:
 185:src/complex.c **** 	dn_subtract(&t3.n, &t4.n, &t2.n);
 755              		.loc 1 185 2 view .LVU153
 756 006c 2A46     		mov	r2, r5
 757 006e 2146     		mov	r1, r4
 758 0070 10A8     		add	r0, sp, #64
 759 0072 FFF7FEFF 		bl	dn_multiply
 760              	.LVL78:
 186:src/complex.c **** 
 761              		.loc 1 186 2 view .LVU154
 762 0076 10AA     		add	r2, sp, #64
 763 0078 2EA9     		add	r1, sp, #184
 764 007a 1FA8     		add	r0, sp, #124
 765 007c FFF7FEFF 		bl	dn_subtract
 766              	.LVL79:
 188:src/complex.c **** 	dn_divide(&t4.n, &t3.n, &den.n);
 767              		.loc 1 188 2 view .LVU155
 768 0080 3DAA     		add	r2, sp, #244
 769 0082 01A9     		add	r1, sp, #4
 770 0084 10A8     		add	r0, sp, #64
 771 0086 FFF7FEFF 		bl	dn_divide
 772              	.LVL80:
 189:src/complex.c **** 
 773              		.loc 1 189 2 view .LVU156
 774 008a 3DAA     		add	r2, sp, #244
 775 008c 1FA9     		add	r1, sp, #124
 776 008e 2EA8     		add	r0, sp, #184
 777 0090 FFF7FEFF 		bl	dn_divide
 778              	.LVL81:
 191:src/complex.c **** }
 779              		.loc 1 191 2 view .LVU157
 780              	.LBB92:
 781              	.LBI92:
  67:src/complex.c **** 	resetComplexContext(saved);
 782              		.loc 1 67 13 view .LVU158
 783              	.LBB93:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 784              		.loc 1 68 2 view .LVU159
 785              	.LBB94:
ARM GAS  /tmp/ccFQ6cnP.s 			page 24


 786              	.LBI94:
  63:src/complex.c **** 	Ctx.digits = x;
 787              		.loc 1 63 13 view .LVU160
 788              	.LBB95:
  64:src/complex.c **** }
 789              		.loc 1 64 2 view .LVU161
 790              	.LBE95:
 791              	.LBE94:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 792              		.loc 1 69 2 is_stmt 0 view .LVU162
 793 0094 10A9     		add	r1, sp, #64
 794              	.LVL82:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 795              		.loc 1 69 2 view .LVU163
 796 0096 4846     		mov	r0, r9
 797              	.LBB97:
 798              	.LBB96:
  64:src/complex.c **** }
 799              		.loc 1 64 13 view .LVU164
 800 0098 CAF800B0 		str	fp, [r10]
 801              	.LVL83:
  64:src/complex.c **** }
 802              		.loc 1 64 13 view .LVU165
 803              	.LBE96:
 804              	.LBE97:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 805              		.loc 1 69 2 is_stmt 1 view .LVU166
 806 009c FFF7FEFF 		bl	dn_plus
 807              	.LVL84:
  70:src/complex.c **** }
 808              		.loc 1 70 2 view .LVU167
 809 00a0 2EA9     		add	r1, sp, #184
 810              	.LVL85:
  70:src/complex.c **** }
 811              		.loc 1 70 2 is_stmt 0 view .LVU168
 812 00a2 4046     		mov	r0, r8
 813 00a4 FFF7FEFF 		bl	dn_plus
 814              	.LVL86:
  70:src/complex.c **** }
 815              		.loc 1 70 2 view .LVU169
 816              	.LBE93:
 817              	.LBE92:
 192:src/complex.c **** 
 818              		.loc 1 192 1 view .LVU170
 819 00a8 4DB0     		add	sp, sp, #308
 820              		.cfi_def_cfa_offset 36
 821              		@ sp needed
 822 00aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 823              	.LVL87:
 824              	.L38:
 192:src/complex.c **** 
 825              		.loc 1 192 1 view .LVU171
 826 00ae 00BF     		.align	2
 827              	.L37:
 828 00b0 00000000 		.word	Ctx
 829              		.cfi_endproc
 830              	.LFE9:
ARM GAS  /tmp/ccFQ6cnP.s 			page 25


 832              		.section	.text.cmplxArg,"ax",%progbits
 833              		.align	1
 834              		.p2align 2,,3
 835              		.global	cmplxArg
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 839              		.fpu fpv4-sp-d16
 841              	cmplxArg:
 842              	.LVL88:
 843              	.LFB10:
 194:src/complex.c **** 	do_atan2(arg, b, a);
 844              		.loc 1 194 71 is_stmt 1 view -0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 195:src/complex.c **** }
 849              		.loc 1 195 2 view .LVU173
 194:src/complex.c **** 	do_atan2(arg, b, a);
 850              		.loc 1 194 71 is_stmt 0 view .LVU174
 851 0000 0B46     		mov	r3, r1
 195:src/complex.c **** }
 852              		.loc 1 195 2 view .LVU175
 853 0002 1146     		mov	r1, r2
 854              	.LVL89:
 195:src/complex.c **** }
 855              		.loc 1 195 2 view .LVU176
 856 0004 1A46     		mov	r2, r3
 857              	.LVL90:
 195:src/complex.c **** }
 858              		.loc 1 195 2 view .LVU177
 859 0006 FFF7FEBF 		b	do_atan2
 860              	.LVL91:
 195:src/complex.c **** }
 861              		.loc 1 195 2 view .LVU178
 862              		.cfi_endproc
 863              	.LFE10:
 865 000a 00BF     		.section	.text.cmplxR,"ax",%progbits
 866              		.align	1
 867              		.p2align 2,,3
 868              		.global	cmplxR
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	cmplxR:
 875              	.LVL92:
 876              	.LFB11:
 198:src/complex.c **** 	complexNumber a2, b2, s;
 877              		.loc 1 198 67 is_stmt 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 184
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 199:src/complex.c **** 
 881              		.loc 1 199 2 view .LVU180
 201:src/complex.c **** 	dn_multiply(&b2.n, b, b);
ARM GAS  /tmp/ccFQ6cnP.s 			page 26


 882              		.loc 1 201 2 view .LVU181
 198:src/complex.c **** 	complexNumber a2, b2, s;
 883              		.loc 1 198 67 is_stmt 0 view .LVU182
 884 0000 30B5     		push	{r4, r5, lr}
 885              		.cfi_def_cfa_offset 12
 886              		.cfi_offset 4, -12
 887              		.cfi_offset 5, -8
 888              		.cfi_offset 14, -4
 889 0002 AFB0     		sub	sp, sp, #188
 890              		.cfi_def_cfa_offset 200
 198:src/complex.c **** 	complexNumber a2, b2, s;
 891              		.loc 1 198 67 view .LVU183
 892 0004 1546     		mov	r5, r2
 893 0006 0446     		mov	r4, r0
 894 0008 0A46     		mov	r2, r1
 895              	.LVL93:
 201:src/complex.c **** 	dn_multiply(&b2.n, b, b);
 896              		.loc 1 201 2 view .LVU184
 897 000a 01A8     		add	r0, sp, #4
 898              	.LVL94:
 201:src/complex.c **** 	dn_multiply(&b2.n, b, b);
 899              		.loc 1 201 2 view .LVU185
 900 000c FFF7FEFF 		bl	dn_multiply
 901              	.LVL95:
 202:src/complex.c **** 	dn_add(&s.n, &a2.n, &b2.n);
 902              		.loc 1 202 2 is_stmt 1 view .LVU186
 903 0010 2A46     		mov	r2, r5
 904 0012 2946     		mov	r1, r5
 905 0014 10A8     		add	r0, sp, #64
 906 0016 FFF7FEFF 		bl	dn_multiply
 907              	.LVL96:
 203:src/complex.c **** 	dn_sqrt(r, &s.n);
 908              		.loc 1 203 2 view .LVU187
 909 001a 10AA     		add	r2, sp, #64
 910 001c 01A9     		add	r1, sp, #4
 911 001e 1FA8     		add	r0, sp, #124
 912 0020 FFF7FEFF 		bl	dn_add
 913              	.LVL97:
 204:src/complex.c **** }
 914              		.loc 1 204 2 view .LVU188
 915 0024 1FA9     		add	r1, sp, #124
 916 0026 2046     		mov	r0, r4
 917 0028 FFF7FEFF 		bl	dn_sqrt
 918              	.LVL98:
 205:src/complex.c **** 
 919              		.loc 1 205 1 is_stmt 0 view .LVU189
 920 002c 2FB0     		add	sp, sp, #188
 921              		.cfi_def_cfa_offset 12
 922              		@ sp needed
 923 002e 30BD     		pop	{r4, r5, pc}
 205:src/complex.c **** 
 924              		.loc 1 205 1 view .LVU190
 925              		.cfi_endproc
 926              	.LFE11:
 928              		.section	.text.cmplxToPolar,"ax",%progbits
 929              		.align	1
 930              		.p2align 2,,3
ARM GAS  /tmp/ccFQ6cnP.s 			page 27


 931              		.global	cmplxToPolar
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu fpv4-sp-d16
 937              	cmplxToPolar:
 938              	.LVL99:
 939              	.LFB12:
 215:src/complex.c **** 	do_atan2(t, y, x);
 940              		.loc 1 215 87 is_stmt 1 view -0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 216:src/complex.c **** 	cmplxR(r, y, x);
 944              		.loc 1 216 2 view .LVU192
 215:src/complex.c **** 	do_atan2(t, y, x);
 945              		.loc 1 215 87 is_stmt 0 view .LVU193
 946 0000 70B5     		push	{r4, r5, r6, lr}
 947              		.cfi_def_cfa_offset 16
 948              		.cfi_offset 4, -16
 949              		.cfi_offset 5, -12
 950              		.cfi_offset 6, -8
 951              		.cfi_offset 14, -4
 215:src/complex.c **** 	do_atan2(t, y, x);
 952              		.loc 1 215 87 view .LVU194
 953 0002 1C46     		mov	r4, r3
 954 0004 0546     		mov	r5, r0
 955 0006 1646     		mov	r6, r2
 216:src/complex.c **** 	cmplxR(r, y, x);
 956              		.loc 1 216 2 view .LVU195
 957 0008 0846     		mov	r0, r1
 958              	.LVL100:
 216:src/complex.c **** 	cmplxR(r, y, x);
 959              		.loc 1 216 2 view .LVU196
 960 000a 1946     		mov	r1, r3
 961              	.LVL101:
 216:src/complex.c **** 	cmplxR(r, y, x);
 962              		.loc 1 216 2 view .LVU197
 963 000c FFF7FEFF 		bl	do_atan2
 964              	.LVL102:
 217:src/complex.c **** }
 965              		.loc 1 217 2 is_stmt 1 view .LVU198
 966 0010 3246     		mov	r2, r6
 967 0012 2146     		mov	r1, r4
 968 0014 2846     		mov	r0, r5
 218:src/complex.c **** 
 969              		.loc 1 218 1 is_stmt 0 view .LVU199
 970 0016 BDE87040 		pop	{r4, r5, r6, lr}
 971              		.cfi_restore 14
 972              		.cfi_restore 6
 973              		.cfi_restore 5
 974              		.cfi_restore 4
 975              		.cfi_def_cfa_offset 0
 976              	.LVL103:
 217:src/complex.c **** }
 977              		.loc 1 217 2 view .LVU200
 978 001a FFF7FEBF 		b	cmplxR
ARM GAS  /tmp/ccFQ6cnP.s 			page 28


 979              	.LVL104:
 217:src/complex.c **** }
 980              		.loc 1 217 2 view .LVU201
 981              		.cfi_endproc
 982              	.LFE12:
 984 001e 00BF     		.section	.text.cmplxAbs,"ax",%progbits
 985              		.align	1
 986              		.p2align 2,,3
 987              		.global	cmplxAbs
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu fpv4-sp-d16
 993              	cmplxAbs:
 994              	.LVL105:
 995              	.LFB16:
 267:src/complex.c **** 	cmplxR(rx, a, b);
 996              		.loc 1 267 85 is_stmt 1 view -0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 268:src/complex.c **** 	decNumberZero(ry);
 1000              		.loc 1 268 2 view .LVU203
 267:src/complex.c **** 	cmplxR(rx, a, b);
 1001              		.loc 1 267 85 is_stmt 0 view .LVU204
 1002 0000 10B5     		push	{r4, lr}
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 4, -8
 1005              		.cfi_offset 14, -4
 267:src/complex.c **** 	cmplxR(rx, a, b);
 1006              		.loc 1 267 85 view .LVU205
 1007 0002 0C46     		mov	r4, r1
 268:src/complex.c **** 	decNumberZero(ry);
 1008              		.loc 1 268 2 view .LVU206
 1009 0004 1146     		mov	r1, r2
 1010              	.LVL106:
 268:src/complex.c **** 	decNumberZero(ry);
 1011              		.loc 1 268 2 view .LVU207
 1012 0006 1A46     		mov	r2, r3
 1013              	.LVL107:
 268:src/complex.c **** 	decNumberZero(ry);
 1014              		.loc 1 268 2 view .LVU208
 1015 0008 FFF7FEFF 		bl	cmplxR
 1016              	.LVL108:
 269:src/complex.c **** }
 1017              		.loc 1 269 2 is_stmt 1 view .LVU209
 1018 000c 2046     		mov	r0, r4
 270:src/complex.c **** 
 1019              		.loc 1 270 1 is_stmt 0 view .LVU210
 1020 000e BDE81040 		pop	{r4, lr}
 1021              		.cfi_restore 14
 1022              		.cfi_restore 4
 1023              		.cfi_def_cfa_offset 0
 1024              	.LVL109:
 269:src/complex.c **** }
 1025              		.loc 1 269 2 view .LVU211
 1026 0012 FFF7FEBF 		b	decNumberZero
ARM GAS  /tmp/ccFQ6cnP.s 			page 29


 1027              	.LVL110:
 269:src/complex.c **** }
 1028              		.loc 1 269 2 view .LVU212
 1029              		.cfi_endproc
 1030              	.LFE16:
 1032 0016 00BF     		.section	.text.cmplxMinus,"ax",%progbits
 1033              		.align	1
 1034              		.p2align 2,,3
 1035              		.global	cmplxMinus
 1036              		.syntax unified
 1037              		.thumb
 1038              		.thumb_func
 1039              		.fpu fpv4-sp-d16
 1041              	cmplxMinus:
 1042              	.LVL111:
 1043              	.LFB17:
 273:src/complex.c **** 	dn_minus(rx, a);
 1044              		.loc 1 273 87 is_stmt 1 view -0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 274:src/complex.c **** 	dn_minus(ry, b);
 1048              		.loc 1 274 2 view .LVU214
 273:src/complex.c **** 	dn_minus(rx, a);
 1049              		.loc 1 273 87 is_stmt 0 view .LVU215
 1050 0000 38B5     		push	{r3, r4, r5, lr}
 1051              		.cfi_def_cfa_offset 16
 1052              		.cfi_offset 3, -16
 1053              		.cfi_offset 4, -12
 1054              		.cfi_offset 5, -8
 1055              		.cfi_offset 14, -4
 273:src/complex.c **** 	dn_minus(rx, a);
 1056              		.loc 1 273 87 view .LVU216
 1057 0002 0C46     		mov	r4, r1
 1058 0004 1D46     		mov	r5, r3
 274:src/complex.c **** 	dn_minus(ry, b);
 1059              		.loc 1 274 2 view .LVU217
 1060 0006 1146     		mov	r1, r2
 1061              	.LVL112:
 274:src/complex.c **** 	dn_minus(ry, b);
 1062              		.loc 1 274 2 view .LVU218
 1063 0008 FFF7FEFF 		bl	dn_minus
 1064              	.LVL113:
 275:src/complex.c **** }
 1065              		.loc 1 275 2 is_stmt 1 view .LVU219
 1066 000c 2946     		mov	r1, r5
 1067 000e 2046     		mov	r0, r4
 276:src/complex.c **** 
 1068              		.loc 1 276 1 is_stmt 0 view .LVU220
 1069 0010 BDE83840 		pop	{r3, r4, r5, lr}
 1070              		.cfi_restore 14
 1071              		.cfi_restore 5
 1072              		.cfi_restore 4
 1073              		.cfi_restore 3
 1074              		.cfi_def_cfa_offset 0
 1075              	.LVL114:
 275:src/complex.c **** }
ARM GAS  /tmp/ccFQ6cnP.s 			page 30


 1076              		.loc 1 275 2 view .LVU221
 1077 0014 FFF7FEBF 		b	dn_minus
 1078              	.LVL115:
 275:src/complex.c **** }
 1079              		.loc 1 275 2 view .LVU222
 1080              		.cfi_endproc
 1081              	.LFE17:
 1083              		.section	.text.cmplxRecip,"ax",%progbits
 1084              		.align	1
 1085              		.p2align 2,,3
 1086              		.global	cmplxRecip
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1090              		.fpu fpv4-sp-d16
 1092              	cmplxRecip:
 1093              	.LVL116:
 1094              	.LFB18:
 279:src/complex.c **** #ifndef TINY_BUILD
 1095              		.loc 1 279 87 is_stmt 1 view -0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 240
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 281:src/complex.c **** 
 1099              		.loc 1 281 2 view .LVU224
 283:src/complex.c **** 
 1100              		.loc 1 283 2 view .LVU225
 1101              	.LBB98:
 1102              	.LBI98:
  56:src/complex.c **** 	int digits = Ctx.digits;
 1103              		.loc 1 56 12 view .LVU226
 1104              	.LBB99:
  57:src/complex.c **** 	if (is_dblmode())
 1105              		.loc 1 57 2 view .LVU227
 1106              	.LBE99:
 1107              	.LBE98:
 279:src/complex.c **** #ifndef TINY_BUILD
 1108              		.loc 1 279 87 is_stmt 0 view .LVU228
 1109 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1110              		.cfi_def_cfa_offset 28
 1111              		.cfi_offset 4, -28
 1112              		.cfi_offset 5, -24
 1113              		.cfi_offset 6, -20
 1114              		.cfi_offset 7, -16
 1115              		.cfi_offset 8, -12
 1116              		.cfi_offset 9, -8
 1117              		.cfi_offset 14, -4
 1118              	.LBB103:
 1119              	.LBB100:
  57:src/complex.c **** 	if (is_dblmode())
 1120              		.loc 1 57 6 view .LVU229
 1121 0004 DFF87080 		ldr	r8, .L54
 1122              	.LBE100:
 1123              	.LBE103:
 279:src/complex.c **** #ifndef TINY_BUILD
 1124              		.loc 1 279 87 view .LVU230
 1125 0008 BDB0     		sub	sp, sp, #244
ARM GAS  /tmp/ccFQ6cnP.s 			page 31


 1126              		.cfi_def_cfa_offset 272
 1127              	.LBB104:
 1128              	.LBB101:
  57:src/complex.c **** 	if (is_dblmode())
 1129              		.loc 1 57 6 view .LVU231
 1130 000a D8F80090 		ldr	r9, [r8]
 1131              	.LVL117:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1132              		.loc 1 58 2 is_stmt 1 view .LVU232
 1133              	.LBE101:
 1134              	.LBE104:
 279:src/complex.c **** #ifndef TINY_BUILD
 1135              		.loc 1 279 87 is_stmt 0 view .LVU233
 1136 000e 0746     		mov	r7, r0
 1137 0010 0E46     		mov	r6, r1
 1138 0012 1446     		mov	r4, r2
 1139 0014 1D46     		mov	r5, r3
 1140              	.LBB105:
 1141              	.LBB102:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1142              		.loc 1 58 6 view .LVU234
 1143 0016 FFF7FEFF 		bl	is_dblmode
 1144              	.LVL118:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1145              		.loc 1 58 5 view .LVU235
 1146 001a 10B1     		cbz	r0, .L49
  59:src/complex.c **** 	return digits;
 1147              		.loc 1 59 3 is_stmt 1 view .LVU236
  59:src/complex.c **** 	return digits;
 1148              		.loc 1 59 14 is_stmt 0 view .LVU237
 1149 001c 4823     		movs	r3, #72
 1150 001e C8F80030 		str	r3, [r8]
 1151              	.L49:
  60:src/complex.c **** }
 1152              		.loc 1 60 2 is_stmt 1 view .LVU238
 1153              	.LVL119:
  60:src/complex.c **** }
 1154              		.loc 1 60 2 is_stmt 0 view .LVU239
 1155              	.LBE102:
 1156              	.LBE105:
 285:src/complex.c **** 	dn_multiply(&v.n, d, d);
 1157              		.loc 1 285 2 is_stmt 1 view .LVU240
 1158 0022 2246     		mov	r2, r4
 1159 0024 2146     		mov	r1, r4
 1160 0026 0FA8     		add	r0, sp, #60
 1161 0028 FFF7FEFF 		bl	dn_multiply
 1162              	.LVL120:
 286:src/complex.c **** 	dn_add(&den.n, &u.n, &v.n);
 1163              		.loc 1 286 2 view .LVU241
 1164 002c 2A46     		mov	r2, r5
 1165 002e 2946     		mov	r1, r5
 1166 0030 1EA8     		add	r0, sp, #120
 1167 0032 FFF7FEFF 		bl	dn_multiply
 1168              	.LVL121:
 287:src/complex.c **** 	dn_minus(&t.n, d);
 1169              		.loc 1 287 2 view .LVU242
 1170 0036 1EAA     		add	r2, sp, #120
ARM GAS  /tmp/ccFQ6cnP.s 			page 32


 1171 0038 0FA9     		add	r1, sp, #60
 1172 003a 2DA8     		add	r0, sp, #180
 1173 003c FFF7FEFF 		bl	dn_add
 1174              	.LVL122:
 288:src/complex.c **** 
 1175              		.loc 1 288 2 view .LVU243
 1176 0040 2946     		mov	r1, r5
 1177 0042 6846     		mov	r0, sp
 1178 0044 FFF7FEFF 		bl	dn_minus
 1179              	.LVL123:
 290:src/complex.c **** 	dn_divide(&v.n, &t.n, &den.n);
 1180              		.loc 1 290 2 view .LVU244
 1181 0048 2DAA     		add	r2, sp, #180
 1182 004a 2146     		mov	r1, r4
 1183 004c 0FA8     		add	r0, sp, #60
 1184 004e FFF7FEFF 		bl	dn_divide
 1185              	.LVL124:
 291:src/complex.c **** 
 1186              		.loc 1 291 2 view .LVU245
 1187 0052 2DAA     		add	r2, sp, #180
 1188 0054 6946     		mov	r1, sp
 1189 0056 1EA8     		add	r0, sp, #120
 1190 0058 FFF7FEFF 		bl	dn_divide
 1191              	.LVL125:
 293:src/complex.c **** #endif
 1192              		.loc 1 293 2 view .LVU246
 1193              	.LBB106:
 1194              	.LBI106:
  67:src/complex.c **** 	resetComplexContext(saved);
 1195              		.loc 1 67 13 view .LVU247
 1196              	.LBB107:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 1197              		.loc 1 68 2 view .LVU248
 1198              	.LBB108:
 1199              	.LBI108:
  63:src/complex.c **** 	Ctx.digits = x;
 1200              		.loc 1 63 13 view .LVU249
 1201              	.LBB109:
  64:src/complex.c **** }
 1202              		.loc 1 64 2 view .LVU250
 1203              	.LBE109:
 1204              	.LBE108:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1205              		.loc 1 69 2 is_stmt 0 view .LVU251
 1206 005c 0FA9     		add	r1, sp, #60
 1207              	.LVL126:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1208              		.loc 1 69 2 view .LVU252
 1209 005e 3846     		mov	r0, r7
 1210              	.LBB111:
 1211              	.LBB110:
  64:src/complex.c **** }
 1212              		.loc 1 64 13 view .LVU253
 1213 0060 C8F80090 		str	r9, [r8]
 1214              	.LVL127:
  64:src/complex.c **** }
 1215              		.loc 1 64 13 view .LVU254
ARM GAS  /tmp/ccFQ6cnP.s 			page 33


 1216              	.LBE110:
 1217              	.LBE111:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1218              		.loc 1 69 2 is_stmt 1 view .LVU255
 1219 0064 FFF7FEFF 		bl	dn_plus
 1220              	.LVL128:
  70:src/complex.c **** }
 1221              		.loc 1 70 2 view .LVU256
 1222 0068 1EA9     		add	r1, sp, #120
 1223              	.LVL129:
  70:src/complex.c **** }
 1224              		.loc 1 70 2 is_stmt 0 view .LVU257
 1225 006a 3046     		mov	r0, r6
 1226 006c FFF7FEFF 		bl	dn_plus
 1227              	.LVL130:
  70:src/complex.c **** }
 1228              		.loc 1 70 2 view .LVU258
 1229              	.LBE107:
 1230              	.LBE106:
 295:src/complex.c **** 
 1231              		.loc 1 295 1 view .LVU259
 1232 0070 3DB0     		add	sp, sp, #244
 1233              		.cfi_def_cfa_offset 28
 1234              		@ sp needed
 1235 0072 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1236              	.LVL131:
 1237              	.L55:
 295:src/complex.c **** 
 1238              		.loc 1 295 1 view .LVU260
 1239 0076 00BF     		.align	2
 1240              	.L54:
 1241 0078 00000000 		.word	Ctx
 1242              		.cfi_endproc
 1243              	.LFE18:
 1245              		.section	.text.cmplxSqrt,"ax",%progbits
 1246              		.align	1
 1247              		.p2align 2,,3
 1248              		.global	cmplxSqrt
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu fpv4-sp-d16
 1254              	cmplxSqrt:
 1255              	.LVL132:
 1256              	.LFB19:
 299:src/complex.c **** #ifndef TINY_BUILD
 1257              		.loc 1 299 86 is_stmt 1 view -0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 360
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 301:src/complex.c **** 
 1261              		.loc 1 301 2 view .LVU262
 303:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 1262              		.loc 1 303 2 view .LVU263
 299:src/complex.c **** #ifndef TINY_BUILD
 1263              		.loc 1 299 86 is_stmt 0 view .LVU264
 1264 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
ARM GAS  /tmp/ccFQ6cnP.s 			page 34


 1265              		.cfi_def_cfa_offset 28
 1266              		.cfi_offset 4, -28
 1267              		.cfi_offset 5, -24
 1268              		.cfi_offset 6, -20
 1269              		.cfi_offset 7, -16
 1270              		.cfi_offset 8, -12
 1271              		.cfi_offset 9, -8
 1272              		.cfi_offset 14, -4
 1273 0004 0746     		mov	r7, r0
 1274 0006 DBB0     		sub	sp, sp, #364
 1275              		.cfi_def_cfa_offset 392
 303:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 1276              		.loc 1 303 6 view .LVU265
 1277 0008 1846     		mov	r0, r3
 1278              	.LVL133:
 299:src/complex.c **** #ifndef TINY_BUILD
 1279              		.loc 1 299 86 view .LVU266
 1280 000a 1D46     		mov	r5, r3
 1281 000c 0E46     		mov	r6, r1
 1282 000e 1446     		mov	r4, r2
 303:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 1283              		.loc 1 303 6 view .LVU267
 1284 0010 FFF7FEFF 		bl	dn_eq0
 1285              	.LVL134:
 303:src/complex.c **** 		// Detect a purely real input and shortcut the computation
 1286              		.loc 1 303 5 view .LVU268
 1287 0014 D0B1     		cbz	r0, .L57
 305:src/complex.c **** 			dn_minus(&t1.n, a);
 1288              		.loc 1 305 3 is_stmt 1 view .LVU269
 305:src/complex.c **** 			dn_minus(&t1.n, a);
 1289              		.loc 1 305 6 is_stmt 0 view .LVU270
 1290 0016 94F90830 		ldrsb	r3, [r4, #8]
 1291 001a 002B     		cmp	r3, #0
 306:src/complex.c **** 			dn_sqrt(ry, &t1.n);
 1292              		.loc 1 306 4 view .LVU271
 1293 001c 2146     		mov	r1, r4
 305:src/complex.c **** 			dn_minus(&t1.n, a);
 1294              		.loc 1 305 6 view .LVU272
 1295 001e 08DB     		blt	.L68
 310:src/complex.c **** 			decNumberZero(ry);
 1296              		.loc 1 310 4 is_stmt 1 view .LVU273
 1297 0020 3846     		mov	r0, r7
 1298 0022 FFF7FEFF 		bl	dn_sqrt
 1299              	.LVL135:
 311:src/complex.c **** 		}
 1300              		.loc 1 311 4 view .LVU274
 1301 0026 3046     		mov	r0, r6
 1302 0028 FFF7FEFF 		bl	decNumberZero
 1303              	.LVL136:
 313:src/complex.c **** 	} else {
 1304              		.loc 1 313 3 view .LVU275
 333:src/complex.c **** 
 1305              		.loc 1 333 1 is_stmt 0 view .LVU276
 1306 002c 5BB0     		add	sp, sp, #364
 1307              		.cfi_remember_state
 1308              		.cfi_def_cfa_offset 28
 1309              		@ sp needed
ARM GAS  /tmp/ccFQ6cnP.s 			page 35


 1310 002e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1311              	.LVL137:
 1312              	.L68:
 1313              		.cfi_restore_state
 306:src/complex.c **** 			dn_sqrt(ry, &t1.n);
 1314              		.loc 1 306 4 is_stmt 1 view .LVU277
 1315 0032 0FA8     		add	r0, sp, #60
 1316 0034 FFF7FEFF 		bl	dn_minus
 1317              	.LVL138:
 307:src/complex.c **** 			decNumberZero(rx);
 1318              		.loc 1 307 4 view .LVU278
 1319 0038 0FA9     		add	r1, sp, #60
 1320 003a 3046     		mov	r0, r6
 1321 003c FFF7FEFF 		bl	dn_sqrt
 1322              	.LVL139:
 308:src/complex.c **** 		} else {
 1323              		.loc 1 308 4 view .LVU279
 1324 0040 3846     		mov	r0, r7
 1325 0042 FFF7FEFF 		bl	decNumberZero
 1326              	.LVL140:
 333:src/complex.c **** 
 1327              		.loc 1 333 1 is_stmt 0 view .LVU280
 1328 0046 5BB0     		add	sp, sp, #364
 1329              		.cfi_remember_state
 1330              		.cfi_def_cfa_offset 28
 1331              		@ sp needed
 1332 0048 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1333              	.LVL141:
 1334              	.L57:
 1335              		.cfi_restore_state
 1336              	.LBB112:
 315:src/complex.c **** 		cmplxR(&fac.n, a, b);
 1337              		.loc 1 315 3 is_stmt 1 view .LVU281
 1338              	.LBB113:
 1339              	.LBI113:
  56:src/complex.c **** 	int digits = Ctx.digits;
 1340              		.loc 1 56 12 view .LVU282
 1341              	.LBB114:
  57:src/complex.c **** 	if (is_dblmode())
 1342              		.loc 1 57 2 view .LVU283
  57:src/complex.c **** 	if (is_dblmode())
 1343              		.loc 1 57 6 is_stmt 0 view .LVU284
 1344 004c DFF89480 		ldr	r8, .L70+4
 1345 0050 D8F80090 		ldr	r9, [r8]
 1346              	.LVL142:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1347              		.loc 1 58 2 is_stmt 1 view .LVU285
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1348              		.loc 1 58 6 is_stmt 0 view .LVU286
 1349 0054 FFF7FEFF 		bl	is_dblmode
 1350              	.LVL143:
  58:src/complex.c **** 		Ctx.digits = COMPLEX_DIGITS;
 1351              		.loc 1 58 5 view .LVU287
 1352 0058 10B1     		cbz	r0, .L61
  59:src/complex.c **** 	return digits;
 1353              		.loc 1 59 3 is_stmt 1 view .LVU288
  59:src/complex.c **** 	return digits;
ARM GAS  /tmp/ccFQ6cnP.s 			page 36


 1354              		.loc 1 59 14 is_stmt 0 view .LVU289
 1355 005a 4823     		movs	r3, #72
 1356 005c C8F80030 		str	r3, [r8]
 1357              	.L61:
  60:src/complex.c **** }
 1358              		.loc 1 60 2 is_stmt 1 view .LVU290
 1359              	.LVL144:
  60:src/complex.c **** }
 1360              		.loc 1 60 2 is_stmt 0 view .LVU291
 1361              	.LBE114:
 1362              	.LBE113:
 316:src/complex.c **** 
 1363              		.loc 1 316 3 is_stmt 1 view .LVU292
 1364 0060 6846     		mov	r0, sp
 1365 0062 2A46     		mov	r2, r5
 1366 0064 2146     		mov	r1, r4
 1367 0066 FFF7FEFF 		bl	cmplxR
 1368              	.LVL145:
 318:src/complex.c **** 		dn_sqrt(&u.n, &v.n);
 1369              		.loc 1 318 3 view .LVU293
 1370 006a 2246     		mov	r2, r4
 1371 006c 6946     		mov	r1, sp
 1372 006e 2DA8     		add	r0, sp, #180
 1373 0070 FFF7FEFF 		bl	dn_subtract
 1374              	.LVL146:
 319:src/complex.c **** 		dn_add(&v.n, &fac.n, a);
 1375              		.loc 1 319 3 view .LVU294
 1376 0074 2DA9     		add	r1, sp, #180
 1377 0076 1EA8     		add	r0, sp, #120
 1378 0078 FFF7FEFF 		bl	dn_sqrt
 1379              	.LVL147:
 320:src/complex.c **** 		if (decNumberIsNegative(b)) {
 1380              		.loc 1 320 3 view .LVU295
 1381 007c 2246     		mov	r2, r4
 1382 007e 6946     		mov	r1, sp
 1383 0080 2DA8     		add	r0, sp, #180
 1384 0082 FFF7FEFF 		bl	dn_add
 1385              	.LVL148:
 321:src/complex.c **** 			dn_minus(&t1.n, &u.n);
 1386              		.loc 1 321 3 view .LVU296
 321:src/complex.c **** 			dn_minus(&t1.n, &u.n);
 1387              		.loc 1 321 6 is_stmt 0 view .LVU297
 1388 0086 95F90830 		ldrsb	r3, [r5, #8]
 1389 008a 002B     		cmp	r3, #0
 1390 008c 1CDB     		blt	.L69
 325:src/complex.c **** 
 1391              		.loc 1 325 4 is_stmt 1 view .LVU298
 1392 008e 4BAD     		add	r5, sp, #300
 1393              	.LVL149:
 325:src/complex.c **** 
 1394              		.loc 1 325 4 is_stmt 0 view .LVU299
 1395 0090 134A     		ldr	r2, .L70
 1396 0092 1EA9     		add	r1, sp, #120
 1397 0094 2846     		mov	r0, r5
 1398 0096 FFF7FEFF 		bl	dn_multiply
 1399              	.LVL150:
 1400 009a 0FAC     		add	r4, sp, #60
ARM GAS  /tmp/ccFQ6cnP.s 			page 37


 1401              	.LVL151:
 1402              	.L63:
 327:src/complex.c **** 		dn_multiply(&x.n, &t1.n, &const_root2on2);
 1403              		.loc 1 327 3 is_stmt 1 view .LVU300
 1404 009c 2DA9     		add	r1, sp, #180
 1405 009e 2046     		mov	r0, r4
 1406 00a0 FFF7FEFF 		bl	dn_sqrt
 1407              	.LVL152:
 328:src/complex.c **** 
 1408              		.loc 1 328 3 view .LVU301
 1409 00a4 0E4A     		ldr	r2, .L70
 1410 00a6 2146     		mov	r1, r4
 1411 00a8 3CA8     		add	r0, sp, #240
 1412 00aa FFF7FEFF 		bl	dn_multiply
 1413              	.LVL153:
 330:src/complex.c **** 	}
 1414              		.loc 1 330 3 view .LVU302
 1415              	.LBB115:
 1416              	.LBI115:
  67:src/complex.c **** 	resetComplexContext(saved);
 1417              		.loc 1 67 13 view .LVU303
 1418              	.LBB116:
  68:src/complex.c **** 	dn_plus(x, &xin->n);
 1419              		.loc 1 68 2 view .LVU304
 1420              	.LBB117:
 1421              	.LBI117:
  63:src/complex.c **** 	Ctx.digits = x;
 1422              		.loc 1 63 13 view .LVU305
 1423              	.LBB118:
  64:src/complex.c **** }
 1424              		.loc 1 64 2 view .LVU306
 1425              	.LBE118:
 1426              	.LBE117:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1427              		.loc 1 69 2 is_stmt 0 view .LVU307
 1428 00ae 3CA9     		add	r1, sp, #240
 1429              	.LVL154:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1430              		.loc 1 69 2 view .LVU308
 1431 00b0 3846     		mov	r0, r7
 1432              	.LBB120:
 1433              	.LBB119:
  64:src/complex.c **** }
 1434              		.loc 1 64 13 view .LVU309
 1435 00b2 C8F80090 		str	r9, [r8]
 1436              	.LVL155:
  64:src/complex.c **** }
 1437              		.loc 1 64 13 view .LVU310
 1438              	.LBE119:
 1439              	.LBE120:
  69:src/complex.c **** 	dn_plus(y, &yin->n);
 1440              		.loc 1 69 2 is_stmt 1 view .LVU311
 1441 00b6 FFF7FEFF 		bl	dn_plus
 1442              	.LVL156:
  70:src/complex.c **** }
 1443              		.loc 1 70 2 view .LVU312
 1444 00ba 2946     		mov	r1, r5
ARM GAS  /tmp/ccFQ6cnP.s 			page 38


 1445 00bc 3046     		mov	r0, r6
 1446 00be FFF7FEFF 		bl	dn_plus
 1447              	.LVL157:
  70:src/complex.c **** }
 1448              		.loc 1 70 2 is_stmt 0 view .LVU313
 1449              	.LBE116:
 1450              	.LBE115:
 1451              	.LBE112:
 333:src/complex.c **** 
 1452              		.loc 1 333 1 view .LVU314
 1453 00c2 5BB0     		add	sp, sp, #364
 1454              		.cfi_remember_state
 1455              		.cfi_def_cfa_offset 28
 1456              		@ sp needed
 1457 00c4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1458              	.LVL158:
 1459              	.L69:
 1460              		.cfi_restore_state
 1461              	.LBB121:
 322:src/complex.c **** 			dn_multiply(&y.n, &t1.n, &const_root2on2);
 1462              		.loc 1 322 4 is_stmt 1 view .LVU315
 1463 00c8 0FAC     		add	r4, sp, #60
 1464              	.LVL159:
 322:src/complex.c **** 			dn_multiply(&y.n, &t1.n, &const_root2on2);
 1465              		.loc 1 322 4 is_stmt 0 view .LVU316
 1466 00ca 1EA9     		add	r1, sp, #120
 1467 00cc 2046     		mov	r0, r4
 323:src/complex.c **** 		} else
 1468              		.loc 1 323 4 view .LVU317
 1469 00ce 4BAD     		add	r5, sp, #300
 1470              	.LVL160:
 322:src/complex.c **** 			dn_multiply(&y.n, &t1.n, &const_root2on2);
 1471              		.loc 1 322 4 view .LVU318
 1472 00d0 FFF7FEFF 		bl	dn_minus
 1473              	.LVL161:
 323:src/complex.c **** 		} else
 1474              		.loc 1 323 4 is_stmt 1 view .LVU319
 1475 00d4 024A     		ldr	r2, .L70
 1476 00d6 2146     		mov	r1, r4
 1477 00d8 2846     		mov	r0, r5
 1478 00da FFF7FEFF 		bl	dn_multiply
 1479              	.LVL162:
 1480 00de DDE7     		b	.L63
 1481              	.L71:
 1482              		.align	2
 1483              	.L70:
 1484 00e0 00000000 		.word	const_root2on2
 1485 00e4 00000000 		.word	Ctx
 1486              	.LBE121:
 1487              		.cfi_endproc
 1488              	.LFE19:
 1490              		.section	.text.cmplxSin,"ax",%progbits
 1491              		.align	1
 1492              		.p2align 2,,3
 1493              		.global	cmplxSin
 1494              		.syntax unified
 1495              		.thumb
ARM GAS  /tmp/ccFQ6cnP.s 			page 39


 1496              		.thumb_func
 1497              		.fpu fpv4-sp-d16
 1499              	cmplxSin:
 1500              	.LVL163:
 1501              	.LFB22:
 369:src/complex.c **** 	decNumber z;
 1502              		.loc 1 369 85 view -0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 40
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 370:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 1506              		.loc 1 370 2 view .LVU321
 371:src/complex.c **** }
 1507              		.loc 1 371 2 view .LVU322
 369:src/complex.c **** 	decNumber z;
 1508              		.loc 1 369 85 is_stmt 0 view .LVU323
 1509 0000 70B5     		push	{r4, r5, r6, lr}
 1510              		.cfi_def_cfa_offset 16
 1511              		.cfi_offset 4, -16
 1512              		.cfi_offset 5, -12
 1513              		.cfi_offset 6, -8
 1514              		.cfi_offset 14, -4
 1515 0002 8CB0     		sub	sp, sp, #48
 1516              		.cfi_def_cfa_offset 64
 369:src/complex.c **** 	decNumber z;
 1517              		.loc 1 369 85 view .LVU324
 1518 0004 0646     		mov	r6, r0
 1519 0006 0D46     		mov	r5, r1
 371:src/complex.c **** }
 1520              		.loc 1 371 2 view .LVU325
 1521 0008 03AC     		add	r4, sp, #12
 369:src/complex.c **** 	decNumber z;
 1522              		.loc 1 369 85 view .LVU326
 1523 000a 1046     		mov	r0, r2
 1524              	.LVL164:
 369:src/complex.c **** 	decNumber z;
 1525              		.loc 1 369 85 view .LVU327
 1526 000c 1946     		mov	r1, r3
 1527              	.LVL165:
 371:src/complex.c **** }
 1528              		.loc 1 371 2 view .LVU328
 1529 000e CDE90044 		strd	r4, r4, [sp]
 1530 0012 3246     		mov	r2, r6
 1531              	.LVL166:
 371:src/complex.c **** }
 1532              		.loc 1 371 2 view .LVU329
 1533 0014 2B46     		mov	r3, r5
 1534              	.LVL167:
 371:src/complex.c **** }
 1535              		.loc 1 371 2 view .LVU330
 1536 0016 FFF7FEFF 		bl	cmplx_sincos
 1537              	.LVL168:
 372:src/complex.c **** 
 1538              		.loc 1 372 1 view .LVU331
 1539 001a 0CB0     		add	sp, sp, #48
 1540              		.cfi_def_cfa_offset 16
 1541              		@ sp needed
ARM GAS  /tmp/ccFQ6cnP.s 			page 40


 1542 001c 70BD     		pop	{r4, r5, r6, pc}
 372:src/complex.c **** 
 1543              		.loc 1 372 1 view .LVU332
 1544              		.cfi_endproc
 1545              	.LFE22:
 1547 001e 00BF     		.section	.text.cmplxCos,"ax",%progbits
 1548              		.align	1
 1549              		.p2align 2,,3
 1550              		.global	cmplxCos
 1551              		.syntax unified
 1552              		.thumb
 1553              		.thumb_func
 1554              		.fpu fpv4-sp-d16
 1556              	cmplxCos:
 1557              	.LVL169:
 1558              	.LFB23:
 375:src/complex.c **** 	decNumber z;
 1559              		.loc 1 375 85 is_stmt 1 view -0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 40
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 376:src/complex.c **** 	cmplx_sincos(a, b, &z, &z, rx, ry);
 1563              		.loc 1 376 2 view .LVU334
 377:src/complex.c **** }
 1564              		.loc 1 377 2 view .LVU335
 375:src/complex.c **** 	decNumber z;
 1565              		.loc 1 375 85 is_stmt 0 view .LVU336
 1566 0000 00B5     		push	{lr}
 1567              		.cfi_def_cfa_offset 4
 1568              		.cfi_offset 14, -4
 1569 0002 8DB0     		sub	sp, sp, #52
 1570              		.cfi_def_cfa_offset 56
 377:src/complex.c **** }
 1571              		.loc 1 377 2 view .LVU337
 1572 0004 CDE90001 		strd	r0, r1, [sp]
 1573 0008 1946     		mov	r1, r3
 1574              	.LVL170:
 377:src/complex.c **** }
 1575              		.loc 1 377 2 view .LVU338
 1576 000a 03AB     		add	r3, sp, #12
 1577              	.LVL171:
 377:src/complex.c **** }
 1578              		.loc 1 377 2 view .LVU339
 1579 000c 1046     		mov	r0, r2
 1580              	.LVL172:
 377:src/complex.c **** }
 1581              		.loc 1 377 2 view .LVU340
 1582 000e 1A46     		mov	r2, r3
 1583              	.LVL173:
 377:src/complex.c **** }
 1584              		.loc 1 377 2 view .LVU341
 1585 0010 FFF7FEFF 		bl	cmplx_sincos
 1586              	.LVL174:
 378:src/complex.c **** 
 1587              		.loc 1 378 1 view .LVU342
 1588 0014 0DB0     		add	sp, sp, #52
 1589              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccFQ6cnP.s 			page 41


 1590              		@ sp needed
 1591 0016 5DF804FB 		ldr	pc, [sp], #4
 1592              		.cfi_endproc
 1593              	.LFE23:
 1595 001a 00BF     		.section	.text.cmplxTan,"ax",%progbits
 1596              		.align	1
 1597              		.p2align 2,,3
 1598              		.global	cmplxTan
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu fpv4-sp-d16
 1604              	cmplxTan:
 1605              	.LVL175:
 1606              	.LFB24:
 381:src/complex.c **** #ifndef TINY_BUILD
 1607              		.loc 1 381 85 is_stmt 1 view -0
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 144
 1610              		@ frame_needed = 0, uses_anonymous_args = 0
 383:src/complex.c **** 
 1611              		.loc 1 383 2 view .LVU344
 385:src/complex.c **** 		decNumberZero(rx);
 1612              		.loc 1 385 2 view .LVU345
 381:src/complex.c **** #ifndef TINY_BUILD
 1613              		.loc 1 381 85 is_stmt 0 view .LVU346
 1614 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1615              		.cfi_def_cfa_offset 28
 1616              		.cfi_offset 4, -28
 1617              		.cfi_offset 5, -24
 1618              		.cfi_offset 6, -20
 1619              		.cfi_offset 7, -16
 1620              		.cfi_offset 8, -12
 1621              		.cfi_offset 9, -8
 1622              		.cfi_offset 14, -4
 1623 0004 8046     		mov	r8, r0
 1624 0006 A7B0     		sub	sp, sp, #156
 1625              		.cfi_def_cfa_offset 184
 385:src/complex.c **** 		decNumberZero(rx);
 1626              		.loc 1 385 6 view .LVU347
 1627 0008 1046     		mov	r0, r2
 1628              	.LVL176:
 381:src/complex.c **** #ifndef TINY_BUILD
 1629              		.loc 1 381 85 view .LVU348
 1630 000a 1446     		mov	r4, r2
 1631 000c 8946     		mov	r9, r1
 1632 000e 1D46     		mov	r5, r3
 385:src/complex.c **** 		decNumberZero(rx);
 1633              		.loc 1 385 6 view .LVU349
 1634 0010 FFF7FEFF 		bl	dn_eq0
 1635              	.LVL177:
 385:src/complex.c **** 		decNumberZero(rx);
 1636              		.loc 1 385 5 view .LVU350
 1637 0014 10B1     		cbz	r0, .L77
 385:src/complex.c **** 		decNumberZero(rx);
 1638              		.loc 1 385 16 discriminator 1 view .LVU351
 1639 0016 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
ARM GAS  /tmp/ccFQ6cnP.s 			page 42


 1640 0018 5B06     		lsls	r3, r3, #25
 1641 001a 14D4     		bmi	.L87
 1642              	.L77:
 392:src/complex.c **** 		cmplxDivide(rx, ry, &s1, &s2, &c1, &c2);
 1643              		.loc 1 392 3 is_stmt 1 view .LVU352
 1644 001c 0BAF     		add	r7, sp, #44
 1645 001e 02AE     		add	r6, sp, #8
 1646 0020 2946     		mov	r1, r5
 1647 0022 2046     		mov	r0, r4
 1648 0024 1DAB     		add	r3, sp, #116
 1649 0026 14AA     		add	r2, sp, #80
 1650 0028 CDE90067 		strd	r6, r7, [sp]
 1651 002c FFF7FEFF 		bl	cmplx_sincos
 1652              	.LVL178:
 393:src/complex.c **** 	}
 1653              		.loc 1 393 3 view .LVU353
 1654 0030 CDE90067 		strd	r6, r7, [sp]
 1655 0034 1DAB     		add	r3, sp, #116
 1656 0036 14AA     		add	r2, sp, #80
 1657 0038 4946     		mov	r1, r9
 1658 003a 4046     		mov	r0, r8
 1659 003c FFF7FEFF 		bl	cmplxDivide
 1660              	.LVL179:
 1661              	.L76:
 396:src/complex.c **** 
 1662              		.loc 1 396 1 is_stmt 0 view .LVU354
 1663 0040 27B0     		add	sp, sp, #156
 1664              		.cfi_remember_state
 1665              		.cfi_def_cfa_offset 28
 1666              		@ sp needed
 1667 0042 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1668              	.LVL180:
 1669              	.L87:
 1670              		.cfi_restore_state
 386:src/complex.c **** 		if (decNumberIsNegative(b))
 1671              		.loc 1 386 3 is_stmt 1 view .LVU355
 1672 0046 4046     		mov	r0, r8
 1673 0048 FFF7FEFF 		bl	decNumberZero
 1674              	.LVL181:
 387:src/complex.c **** 			dn__1(ry);
 1675              		.loc 1 387 3 view .LVU356
 387:src/complex.c **** 			dn__1(ry);
 1676              		.loc 1 387 6 is_stmt 0 view .LVU357
 1677 004c 95F90830 		ldrsb	r3, [r5, #8]
 1678 0050 002B     		cmp	r3, #0
 388:src/complex.c **** 		else
 1679              		.loc 1 388 4 view .LVU358
 1680 0052 4846     		mov	r0, r9
 387:src/complex.c **** 			dn__1(ry);
 1681              		.loc 1 387 6 view .LVU359
 1682 0054 04DB     		blt	.L88
 1683              	.LVL182:
 390:src/complex.c **** 	} else {
 1684              		.loc 1 390 4 is_stmt 1 view .LVU360
 1685 0056 FFF7FEFF 		bl	dn_1
 1686              	.LVL183:
 396:src/complex.c **** 
ARM GAS  /tmp/ccFQ6cnP.s 			page 43


 1687              		.loc 1 396 1 is_stmt 0 view .LVU361
 1688 005a 27B0     		add	sp, sp, #156
 1689              		.cfi_remember_state
 1690              		.cfi_def_cfa_offset 28
 1691              		@ sp needed
 1692 005c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1693              	.LVL184:
 1694              	.L88:
 1695              		.cfi_restore_state
 388:src/complex.c **** 		else
 1696              		.loc 1 388 4 is_stmt 1 view .LVU362
 1697 0060 FFF7FEFF 		bl	dn__1
 1698              	.LVL185:
 388:src/complex.c **** 		else
 1699              		.loc 1 388 4 is_stmt 0 view .LVU363
 1700 0064 ECE7     		b	.L76
 1701              		.cfi_endproc
 1702              	.LFE24:
 1704 0066 00BF     		.section	.text.cmplxSinc,"ax",%progbits
 1705              		.align	1
 1706              		.p2align 2,,3
 1707              		.global	cmplxSinc
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv4-sp-d16
 1713              	cmplxSinc:
 1714              	.LVL186:
 1715              	.LFB25:
 400:src/complex.c **** #ifndef TINY_BUILD
 1716              		.loc 1 400 86 is_stmt 1 view -0
 1717              		.cfi_startproc
 1718              		@ args = 0, pretend = 0, frame = 112
 1719              		@ frame_needed = 0, uses_anonymous_args = 0
 402:src/complex.c **** 
 1720              		.loc 1 402 2 view .LVU365
 404:src/complex.c **** 		decNumberSinc(rx, a);
 1721              		.loc 1 404 2 view .LVU366
 400:src/complex.c **** #ifndef TINY_BUILD
 1722              		.loc 1 400 86 is_stmt 0 view .LVU367
 1723 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1724              		.cfi_def_cfa_offset 20
 1725              		.cfi_offset 4, -20
 1726              		.cfi_offset 5, -16
 1727              		.cfi_offset 6, -12
 1728              		.cfi_offset 7, -8
 1729              		.cfi_offset 14, -4
 1730 0002 0646     		mov	r6, r0
 1731 0004 9FB0     		sub	sp, sp, #124
 1732              		.cfi_def_cfa_offset 144
 404:src/complex.c **** 		decNumberSinc(rx, a);
 1733              		.loc 1 404 6 view .LVU368
 1734 0006 1846     		mov	r0, r3
 1735              	.LVL187:
 400:src/complex.c **** #ifndef TINY_BUILD
 1736              		.loc 1 400 86 view .LVU369
 1737 0008 1C46     		mov	r4, r3
ARM GAS  /tmp/ccFQ6cnP.s 			page 44


 1738 000a 0F46     		mov	r7, r1
 1739 000c 1546     		mov	r5, r2
 404:src/complex.c **** 		decNumberSinc(rx, a);
 1740              		.loc 1 404 6 view .LVU370
 1741 000e FFF7FEFF 		bl	dn_eq0
 1742              	.LVL188:
 404:src/complex.c **** 		decNumberSinc(rx, a);
 1743              		.loc 1 404 5 view .LVU371
 1744 0012 40B1     		cbz	r0, .L90
 405:src/complex.c **** 		decNumberZero(ry);
 1745              		.loc 1 405 3 is_stmt 1 view .LVU372
 1746 0014 2946     		mov	r1, r5
 1747 0016 3046     		mov	r0, r6
 1748 0018 FFF7FEFF 		bl	decNumberSinc
 1749              	.LVL189:
 406:src/complex.c **** 	} else {
 1750              		.loc 1 406 3 view .LVU373
 1751 001c 3846     		mov	r0, r7
 1752 001e FFF7FEFF 		bl	decNumberZero
 1753              	.LVL190:
 412:src/complex.c **** 
 1754              		.loc 1 412 1 is_stmt 0 view .LVU374
 1755 0022 1FB0     		add	sp, sp, #124
 1756              		.cfi_remember_state
 1757              		.cfi_def_cfa_offset 20
 1758              		@ sp needed
 1759 0024 F0BD     		pop	{r4, r5, r6, r7, pc}
 1760              	.LVL191:
 1761              	.L90:
 1762              		.cfi_restore_state
 408:src/complex.c **** 		cmplxDivide(rx, ry, &s1, &s2, a, b);
 1763              		.loc 1 408 3 is_stmt 1 view .LVU375
 1764              	.LBB122:
 1765              	.LBI122:
 369:src/complex.c **** 	decNumber z;
 1766              		.loc 1 369 6 view .LVU376
 1767              	.LBB123:
 370:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 1768              		.loc 1 370 2 view .LVU377
 371:src/complex.c **** }
 1769              		.loc 1 371 2 view .LVU378
 1770 0026 15A9     		add	r1, sp, #84
 1771 0028 CDE90011 		strd	r1, r1, [sp]
 1772 002c 0CAB     		add	r3, sp, #48
 1773              	.LVL192:
 371:src/complex.c **** }
 1774              		.loc 1 371 2 is_stmt 0 view .LVU379
 1775 002e 03AA     		add	r2, sp, #12
 1776              	.LVL193:
 371:src/complex.c **** }
 1777              		.loc 1 371 2 view .LVU380
 1778 0030 2146     		mov	r1, r4
 1779 0032 2846     		mov	r0, r5
 1780 0034 FFF7FEFF 		bl	cmplx_sincos
 1781              	.LVL194:
 371:src/complex.c **** }
 1782              		.loc 1 371 2 view .LVU381
ARM GAS  /tmp/ccFQ6cnP.s 			page 45


 1783              	.LBE123:
 1784              	.LBE122:
 409:src/complex.c **** 	}
 1785              		.loc 1 409 3 is_stmt 1 view .LVU382
 1786 0038 CDE90054 		strd	r5, r4, [sp]
 1787 003c 0CAB     		add	r3, sp, #48
 1788 003e 03AA     		add	r2, sp, #12
 1789 0040 3946     		mov	r1, r7
 1790 0042 3046     		mov	r0, r6
 1791 0044 FFF7FEFF 		bl	cmplxDivide
 1792              	.LVL195:
 412:src/complex.c **** 
 1793              		.loc 1 412 1 is_stmt 0 view .LVU383
 1794 0048 1FB0     		add	sp, sp, #124
 1795              		.cfi_def_cfa_offset 20
 1796              		@ sp needed
 1797 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 412:src/complex.c **** 
 1798              		.loc 1 412 1 view .LVU384
 1799              		.cfi_endproc
 1800              	.LFE25:
 1802              		.section	.text.cmplxSinh,"ax",%progbits
 1803              		.align	1
 1804              		.p2align 2,,3
 1805              		.global	cmplxSinh
 1806              		.syntax unified
 1807              		.thumb
 1808              		.thumb_func
 1809              		.fpu fpv4-sp-d16
 1811              	cmplxSinh:
 1812              	.LVL196:
 1813              	.LFB27:
 427:src/complex.c **** 
 428:src/complex.c **** // sinh(a + i b) = sinh(a) cos(b) + i cosh(a) sin(b)
 429:src/complex.c **** void cmplxSinh(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 1814              		.loc 1 429 86 is_stmt 1 view -0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 40
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 430:src/complex.c **** 	decNumber z;
 1818              		.loc 1 430 2 view .LVU386
 431:src/complex.c **** 	cmplx_sinhcosh(a, b, rx, ry, &z, &z);
 1819              		.loc 1 431 2 view .LVU387
 429:src/complex.c **** 	decNumber z;
 1820              		.loc 1 429 86 is_stmt 0 view .LVU388
 1821 0000 70B5     		push	{r4, r5, r6, lr}
 1822              		.cfi_def_cfa_offset 16
 1823              		.cfi_offset 4, -16
 1824              		.cfi_offset 5, -12
 1825              		.cfi_offset 6, -8
 1826              		.cfi_offset 14, -4
 1827 0002 8CB0     		sub	sp, sp, #48
 1828              		.cfi_def_cfa_offset 64
 429:src/complex.c **** 	decNumber z;
 1829              		.loc 1 429 86 view .LVU389
 1830 0004 0646     		mov	r6, r0
 1831 0006 0D46     		mov	r5, r1
ARM GAS  /tmp/ccFQ6cnP.s 			page 46


 1832              		.loc 1 431 2 view .LVU390
 1833 0008 03AC     		add	r4, sp, #12
 429:src/complex.c **** 	decNumber z;
 1834              		.loc 1 429 86 view .LVU391
 1835 000a 1046     		mov	r0, r2
 1836              	.LVL197:
 429:src/complex.c **** 	decNumber z;
 1837              		.loc 1 429 86 view .LVU392
 1838 000c 1946     		mov	r1, r3
 1839              	.LVL198:
 1840              		.loc 1 431 2 view .LVU393
 1841 000e CDE90044 		strd	r4, r4, [sp]
 1842 0012 3246     		mov	r2, r6
 1843              	.LVL199:
 1844              		.loc 1 431 2 view .LVU394
 1845 0014 2B46     		mov	r3, r5
 1846              	.LVL200:
 1847              		.loc 1 431 2 view .LVU395
 1848 0016 FFF7FEFF 		bl	cmplx_sinhcosh
 1849              	.LVL201:
 432:src/complex.c **** }
 1850              		.loc 1 432 1 view .LVU396
 1851 001a 0CB0     		add	sp, sp, #48
 1852              		.cfi_def_cfa_offset 16
 1853              		@ sp needed
 1854 001c 70BD     		pop	{r4, r5, r6, pc}
 1855              		.loc 1 432 1 view .LVU397
 1856              		.cfi_endproc
 1857              	.LFE27:
 1859 001e 00BF     		.section	.text.cmplxCosh,"ax",%progbits
 1860              		.align	1
 1861              		.p2align 2,,3
 1862              		.global	cmplxCosh
 1863              		.syntax unified
 1864              		.thumb
 1865              		.thumb_func
 1866              		.fpu fpv4-sp-d16
 1868              	cmplxCosh:
 1869              	.LVL202:
 1870              	.LFB28:
 433:src/complex.c **** 
 434:src/complex.c **** // cosh(a + i b) = cosh(a) cos(b) + i sinh(a) sin(b)
 435:src/complex.c **** void cmplxCosh(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 1871              		.loc 1 435 86 is_stmt 1 view -0
 1872              		.cfi_startproc
 1873              		@ args = 0, pretend = 0, frame = 40
 1874              		@ frame_needed = 0, uses_anonymous_args = 0
 436:src/complex.c **** 	decNumber z;
 1875              		.loc 1 436 2 view .LVU399
 437:src/complex.c **** 	cmplx_sinhcosh(a, b, &z, &z, rx, ry);
 1876              		.loc 1 437 2 view .LVU400
 435:src/complex.c **** 	decNumber z;
 1877              		.loc 1 435 86 is_stmt 0 view .LVU401
 1878 0000 00B5     		push	{lr}
 1879              		.cfi_def_cfa_offset 4
 1880              		.cfi_offset 14, -4
 1881 0002 8DB0     		sub	sp, sp, #52
ARM GAS  /tmp/ccFQ6cnP.s 			page 47


 1882              		.cfi_def_cfa_offset 56
 1883              		.loc 1 437 2 view .LVU402
 1884 0004 CDE90001 		strd	r0, r1, [sp]
 1885 0008 1946     		mov	r1, r3
 1886              	.LVL203:
 1887              		.loc 1 437 2 view .LVU403
 1888 000a 03AB     		add	r3, sp, #12
 1889              	.LVL204:
 1890              		.loc 1 437 2 view .LVU404
 1891 000c 1046     		mov	r0, r2
 1892              	.LVL205:
 1893              		.loc 1 437 2 view .LVU405
 1894 000e 1A46     		mov	r2, r3
 1895              	.LVL206:
 1896              		.loc 1 437 2 view .LVU406
 1897 0010 FFF7FEFF 		bl	cmplx_sinhcosh
 1898              	.LVL207:
 438:src/complex.c **** }
 1899              		.loc 1 438 1 view .LVU407
 1900 0014 0DB0     		add	sp, sp, #52
 1901              		.cfi_def_cfa_offset 4
 1902              		@ sp needed
 1903 0016 5DF804FB 		ldr	pc, [sp], #4
 1904              		.cfi_endproc
 1905              	.LFE28:
 1907 001a 00BF     		.section	.text.cmplxTanh,"ax",%progbits
 1908              		.align	1
 1909              		.p2align 2,,3
 1910              		.global	cmplxTanh
 1911              		.syntax unified
 1912              		.thumb
 1913              		.thumb_func
 1914              		.fpu fpv4-sp-d16
 1916              	cmplxTanh:
 1917              	.LVL208:
 1918              	.LFB29:
 439:src/complex.c **** 
 440:src/complex.c **** // tanh(a + i b) = (tanh(a) + i tan(b))/(1 + i tanh(a) tan(b))
 441:src/complex.c **** void cmplxTanh(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 1919              		.loc 1 441 86 is_stmt 1 view -0
 1920              		.cfi_startproc
 1921              		@ args = 0, pretend = 0, frame = 112
 1922              		@ frame_needed = 0, uses_anonymous_args = 0
 442:src/complex.c **** #ifndef TINY_BUILD
 443:src/complex.c **** 	decNumber ta, tb, t2;
 1923              		.loc 1 443 2 view .LVU409
 444:src/complex.c **** 
 445:src/complex.c **** 	if (dn_eq0(b)) {
 1924              		.loc 1 445 2 view .LVU410
 441:src/complex.c **** #ifndef TINY_BUILD
 1925              		.loc 1 441 86 is_stmt 0 view .LVU411
 1926 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1927              		.cfi_def_cfa_offset 24
 1928              		.cfi_offset 4, -24
 1929              		.cfi_offset 5, -20
 1930              		.cfi_offset 6, -16
 1931              		.cfi_offset 7, -12
ARM GAS  /tmp/ccFQ6cnP.s 			page 48


 1932              		.cfi_offset 8, -8
 1933              		.cfi_offset 14, -4
 1934 0004 0546     		mov	r5, r0
 1935 0006 9EB0     		sub	sp, sp, #120
 1936              		.cfi_def_cfa_offset 144
 1937              		.loc 1 445 6 view .LVU412
 1938 0008 1846     		mov	r0, r3
 1939              	.LVL209:
 441:src/complex.c **** #ifndef TINY_BUILD
 1940              		.loc 1 441 86 view .LVU413
 1941 000a 1C46     		mov	r4, r3
 1942 000c 0E46     		mov	r6, r1
 1943 000e 1746     		mov	r7, r2
 1944              		.loc 1 445 6 view .LVU414
 1945 0010 FFF7FEFF 		bl	dn_eq0
 1946              	.LVL210:
 1947              		.loc 1 445 5 view .LVU415
 1948 0014 48B1     		cbz	r0, .L98
 446:src/complex.c **** 		decNumberTanh(rx, a);
 1949              		.loc 1 446 3 is_stmt 1 view .LVU416
 1950 0016 3946     		mov	r1, r7
 1951 0018 2846     		mov	r0, r5
 1952 001a FFF7FEFF 		bl	decNumberTanh
 1953              	.LVL211:
 447:src/complex.c **** 		decNumberZero(ry);
 1954              		.loc 1 447 3 view .LVU417
 1955 001e 3046     		mov	r0, r6
 1956 0020 FFF7FEFF 		bl	decNumberZero
 1957              	.LVL212:
 448:src/complex.c **** 	} else {
 449:src/complex.c **** 		dn_sincos(b, &ta, &t2);
 450:src/complex.c **** 		dn_divide(&tb, &ta, &t2);
 451:src/complex.c **** 		decNumberTanh(&ta, a);
 452:src/complex.c **** 
 453:src/complex.c **** 		dn_multiply(&t2, &ta, &tb);
 454:src/complex.c **** 
 455:src/complex.c **** 		cmplxDivide(rx, ry, &ta, &tb, &const_1, &t2);
 456:src/complex.c **** 	}
 457:src/complex.c **** #endif
 458:src/complex.c **** }
 1958              		.loc 1 458 1 is_stmt 0 view .LVU418
 1959 0024 1EB0     		add	sp, sp, #120
 1960              		.cfi_remember_state
 1961              		.cfi_def_cfa_offset 24
 1962              		@ sp needed
 1963 0026 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1964              	.LVL213:
 1965              	.L98:
 1966              		.cfi_restore_state
 449:src/complex.c **** 		dn_divide(&tb, &ta, &t2);
 1967              		.loc 1 449 3 is_stmt 1 view .LVU419
 1968 002a 0DF15408 		add	r8, sp, #84
 1969 002e 2046     		mov	r0, r4
 1970 0030 4246     		mov	r2, r8
 1971 0032 03A9     		add	r1, sp, #12
 1972 0034 FFF7FEFF 		bl	dn_sincos
 1973              	.LVL214:
ARM GAS  /tmp/ccFQ6cnP.s 			page 49


 450:src/complex.c **** 		decNumberTanh(&ta, a);
 1974              		.loc 1 450 3 view .LVU420
 1975 0038 4246     		mov	r2, r8
 1976 003a 03A9     		add	r1, sp, #12
 1977 003c 0CA8     		add	r0, sp, #48
 1978 003e FFF7FEFF 		bl	dn_divide
 1979              	.LVL215:
 451:src/complex.c **** 
 1980              		.loc 1 451 3 view .LVU421
 1981 0042 3946     		mov	r1, r7
 1982 0044 03A8     		add	r0, sp, #12
 1983 0046 FFF7FEFF 		bl	decNumberTanh
 1984              	.LVL216:
 453:src/complex.c **** 
 1985              		.loc 1 453 3 view .LVU422
 455:src/complex.c **** 	}
 1986              		.loc 1 455 3 is_stmt 0 view .LVU423
 1987 004a 094C     		ldr	r4, .L101
 1988              	.LVL217:
 453:src/complex.c **** 
 1989              		.loc 1 453 3 view .LVU424
 1990 004c 0CAA     		add	r2, sp, #48
 1991 004e 03A9     		add	r1, sp, #12
 1992 0050 4046     		mov	r0, r8
 1993 0052 FFF7FEFF 		bl	dn_multiply
 1994              	.LVL218:
 455:src/complex.c **** 	}
 1995              		.loc 1 455 3 is_stmt 1 view .LVU425
 1996 0056 CDF80480 		str	r8, [sp, #4]
 1997 005a 0CAB     		add	r3, sp, #48
 1998 005c 03AA     		add	r2, sp, #12
 1999 005e 3146     		mov	r1, r6
 2000 0060 2846     		mov	r0, r5
 2001 0062 0094     		str	r4, [sp]
 2002 0064 FFF7FEFF 		bl	cmplxDivide
 2003              	.LVL219:
 2004              		.loc 1 458 1 is_stmt 0 view .LVU426
 2005 0068 1EB0     		add	sp, sp, #120
 2006              		.cfi_def_cfa_offset 24
 2007              		@ sp needed
 2008 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2009              	.LVL220:
 2010              	.L102:
 2011              		.loc 1 458 1 view .LVU427
 2012 006e 00BF     		.align	2
 2013              	.L101:
 2014 0070 00000000 		.word	const_1
 2015              		.cfi_endproc
 2016              	.LFE29:
 2018              		.section	.text.cmplx_1x,"ax",%progbits
 2019              		.align	1
 2020              		.p2align 2,,3
 2021              		.global	cmplx_1x
 2022              		.syntax unified
 2023              		.thumb
 2024              		.thumb_func
 2025              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccFQ6cnP.s 			page 50


 2027              	cmplx_1x:
 2028              	.LVL221:
 2029              	.LFB30:
 459:src/complex.c **** 
 460:src/complex.c **** 
 461:src/complex.c **** void cmplx_1x(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 2030              		.loc 1 461 85 is_stmt 1 view -0
 2031              		.cfi_startproc
 2032              		@ args = 0, pretend = 0, frame = 144
 2033              		@ frame_needed = 0, uses_anonymous_args = 0
 462:src/complex.c **** 	decNumber t, u, s, c;
 2034              		.loc 1 462 2 view .LVU429
 463:src/complex.c **** 
 464:src/complex.c **** 	decNumberMod(&u, a, &const_2);
 2035              		.loc 1 464 2 view .LVU430
 461:src/complex.c **** 	decNumber t, u, s, c;
 2036              		.loc 1 461 85 is_stmt 0 view .LVU431
 2037 0000 70B5     		push	{r4, r5, r6, lr}
 2038              		.cfi_def_cfa_offset 16
 2039              		.cfi_offset 4, -16
 2040              		.cfi_offset 5, -12
 2041              		.cfi_offset 6, -8
 2042              		.cfi_offset 14, -4
 2043 0002 A4B0     		sub	sp, sp, #144
 2044              		.cfi_def_cfa_offset 160
 461:src/complex.c **** 	decNumber t, u, s, c;
 2045              		.loc 1 461 85 view .LVU432
 2046 0004 0546     		mov	r5, r0
 2047 0006 0C46     		mov	r4, r1
 2048              		.loc 1 464 2 view .LVU433
 2049 0008 09A8     		add	r0, sp, #36
 2050              	.LVL222:
 2051              		.loc 1 464 2 view .LVU434
 2052 000a 1146     		mov	r1, r2
 2053              	.LVL223:
 2054              		.loc 1 464 2 view .LVU435
 2055 000c 124A     		ldr	r2, .L105
 2056              	.LVL224:
 461:src/complex.c **** 	decNumber t, u, s, c;
 2057              		.loc 1 461 85 view .LVU436
 2058 000e 1E46     		mov	r6, r3
 2059              		.loc 1 464 2 view .LVU437
 2060 0010 FFF7FEFF 		bl	decNumberMod
 2061              	.LVL225:
 465:src/complex.c **** 	dn_mulPI(&t, &u);
 2062              		.loc 1 465 2 is_stmt 1 view .LVU438
 2063 0014 09A9     		add	r1, sp, #36
 2064 0016 6846     		mov	r0, sp
 2065 0018 FFF7FEFF 		bl	dn_mulPI
 2066              	.LVL226:
 466:src/complex.c **** 	sincosTaylor(&t, &s, &c);
 2067              		.loc 1 466 2 view .LVU439
 2068 001c 1BAA     		add	r2, sp, #108
 2069 001e 6846     		mov	r0, sp
 2070 0020 12A9     		add	r1, sp, #72
 2071 0022 FFF7FEFF 		bl	sincosTaylor
 2072              	.LVL227:
ARM GAS  /tmp/ccFQ6cnP.s 			page 51


 467:src/complex.c **** 	dn_mulPI(&u, b);
 2073              		.loc 1 467 2 view .LVU440
 2074 0026 3146     		mov	r1, r6
 2075 0028 09A8     		add	r0, sp, #36
 2076 002a FFF7FEFF 		bl	dn_mulPI
 2077              	.LVL228:
 468:src/complex.c **** 	dn_minus(&t, &u);
 2078              		.loc 1 468 2 view .LVU441
 2079 002e 09A9     		add	r1, sp, #36
 2080 0030 6846     		mov	r0, sp
 2081 0032 FFF7FEFF 		bl	dn_minus
 2082              	.LVL229:
 469:src/complex.c **** 	dn_exp(&u, &t);
 2083              		.loc 1 469 2 view .LVU442
 2084 0036 6946     		mov	r1, sp
 2085 0038 09A8     		add	r0, sp, #36
 2086 003a FFF7FEFF 		bl	dn_exp
 2087              	.LVL230:
 470:src/complex.c **** 	cmplxMultiplyReal(rx, ry, &c, &s, &u);
 2088              		.loc 1 470 2 view .LVU443
 2089              	.LBB124:
 2090              	.LBI124:
  92:src/complex.c **** 		const decNumber *a, const decNumber *b,
 2091              		.loc 1 92 13 view .LVU444
 2092              	.LBB125:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 2093              		.loc 1 95 2 view .LVU445
 2094 003e 09AA     		add	r2, sp, #36
 2095              	.LVL231:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 2096              		.loc 1 95 2 is_stmt 0 view .LVU446
 2097 0040 1BA9     		add	r1, sp, #108
 2098              	.LVL232:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 2099              		.loc 1 95 2 view .LVU447
 2100 0042 2846     		mov	r0, r5
 2101 0044 FFF7FEFF 		bl	dn_multiply
 2102              	.LVL233:
  96:src/complex.c **** }
 2103              		.loc 1 96 2 is_stmt 1 view .LVU448
 2104 0048 09AA     		add	r2, sp, #36
 2105              	.LVL234:
  96:src/complex.c **** }
 2106              		.loc 1 96 2 is_stmt 0 view .LVU449
 2107 004a 12A9     		add	r1, sp, #72
 2108              	.LVL235:
  96:src/complex.c **** }
 2109              		.loc 1 96 2 view .LVU450
 2110 004c 2046     		mov	r0, r4
 2111 004e FFF7FEFF 		bl	dn_multiply
 2112              	.LVL236:
  96:src/complex.c **** }
 2113              		.loc 1 96 2 view .LVU451
 2114              	.LBE125:
 2115              	.LBE124:
 471:src/complex.c **** }
 2116              		.loc 1 471 1 view .LVU452
ARM GAS  /tmp/ccFQ6cnP.s 			page 52


 2117 0052 24B0     		add	sp, sp, #144
 2118              		.cfi_def_cfa_offset 16
 2119              		@ sp needed
 2120 0054 70BD     		pop	{r4, r5, r6, pc}
 2121              	.LVL237:
 2122              	.L106:
 2123              		.loc 1 471 1 view .LVU453
 2124 0056 00BF     		.align	2
 2125              	.L105:
 2126 0058 00000000 		.word	const_2
 2127              		.cfi_endproc
 2128              	.LFE30:
 2130              		.section	.text.cmplxLn,"ax",%progbits
 2131              		.align	1
 2132              		.p2align 2,,3
 2133              		.global	cmplxLn
 2134              		.syntax unified
 2135              		.thumb
 2136              		.thumb_func
 2137              		.fpu fpv4-sp-d16
 2139              	cmplxLn:
 2140              	.LVL238:
 2141              	.LFB31:
 472:src/complex.c **** 
 473:src/complex.c **** // ln(a + i b) = ln(sqrt(a*a + b*b)) + i (2*arctan(signum(b)) - arctan(a/b))
 474:src/complex.c **** // signum(b) = 1 if b>0, 0 if b=0, -1 if b<0, atan(1) = pi/4
 475:src/complex.c **** void cmplxLn(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 2142              		.loc 1 475 84 is_stmt 1 view -0
 2143              		.cfi_startproc
 2144              		@ args = 0, pretend = 0, frame = 40
 2145              		@ frame_needed = 0, uses_anonymous_args = 0
 476:src/complex.c **** #ifndef TINY_BUILD
 477:src/complex.c **** 	decNumber u;
 2146              		.loc 1 477 2 view .LVU455
 478:src/complex.c **** 
 479:src/complex.c **** 	if (dn_eq0(b)) {
 2147              		.loc 1 479 2 view .LVU456
 475:src/complex.c **** #ifndef TINY_BUILD
 2148              		.loc 1 475 84 is_stmt 0 view .LVU457
 2149 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2150              		.cfi_def_cfa_offset 20
 2151              		.cfi_offset 4, -20
 2152              		.cfi_offset 5, -16
 2153              		.cfi_offset 6, -12
 2154              		.cfi_offset 7, -8
 2155              		.cfi_offset 14, -4
 2156 0002 0646     		mov	r6, r0
 2157 0004 8BB0     		sub	sp, sp, #44
 2158              		.cfi_def_cfa_offset 64
 2159              		.loc 1 479 6 view .LVU458
 2160 0006 1846     		mov	r0, r3
 2161              	.LVL239:
 475:src/complex.c **** #ifndef TINY_BUILD
 2162              		.loc 1 475 84 view .LVU459
 2163 0008 1C46     		mov	r4, r3
 2164 000a 0F46     		mov	r7, r1
 2165 000c 1546     		mov	r5, r2
ARM GAS  /tmp/ccFQ6cnP.s 			page 53


 2166              		.loc 1 479 6 view .LVU460
 2167 000e FFF7FEFF 		bl	dn_eq0
 2168              	.LVL240:
 2169              		.loc 1 479 5 view .LVU461
 2170 0012 A0B9     		cbnz	r0, .L118
 480:src/complex.c **** 		if (dn_eq0(a)) {
 481:src/complex.c **** 			cmplx_NaN(rx, ry);
 482:src/complex.c **** 		} else if (decNumberIsNegative(a)) {
 483:src/complex.c **** 			dn_minus(&u, a);
 484:src/complex.c **** 			dn_ln(rx, &u);
 485:src/complex.c **** 			decNumberPI(ry);
 486:src/complex.c **** 		} else {
 487:src/complex.c **** 			decNumberZero(ry);
 488:src/complex.c **** 			dn_ln(rx, a);
 489:src/complex.c **** 		}
 490:src/complex.c **** 		return;
 491:src/complex.c **** 	}
 492:src/complex.c **** 	if (decNumberIsSpecial(a)  || decNumberIsSpecial(b)) {
 2171              		.loc 1 492 2 is_stmt 1 view .LVU462
 2172              		.loc 1 492 6 is_stmt 0 view .LVU463
 2173 0014 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 2174              		.loc 1 492 5 view .LVU464
 2175 0016 13F0700F 		tst	r3, #112
 2176 001a 1CD0     		beq	.L119
 2177              	.L112:
 493:src/complex.c **** 		if (decNumberIsNaN(a) || decNumberIsNaN(b)) {
 2178              		.loc 1 493 3 is_stmt 1 view .LVU465
 2179              		.loc 1 493 6 is_stmt 0 view .LVU466
 2180 001c 13F0300F 		tst	r3, #48
 2181 0020 11D1     		bne	.L114
 2182              		.loc 1 493 28 discriminator 1 view .LVU467
 2183 0022 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2184              		.loc 1 493 25 discriminator 1 view .LVU468
 2185 0024 13F0300F 		tst	r3, #48
 2186 0028 0DD1     		bne	.L114
 494:src/complex.c **** 			cmplx_NaN(rx, ry);
 495:src/complex.c **** 		} else {
 496:src/complex.c **** 			if (decNumberIsNegative(b))
 2187              		.loc 1 496 4 is_stmt 1 view .LVU469
 2188              		.loc 1 496 7 is_stmt 0 view .LVU470
 2189 002a 1B06     		lsls	r3, r3, #24
 497:src/complex.c **** 				set_neginf(ry);
 2190              		.loc 1 497 5 view .LVU471
 2191 002c 3846     		mov	r0, r7
 496:src/complex.c **** 				set_neginf(ry);
 2192              		.loc 1 496 7 view .LVU472
 2193 002e 32D4     		bmi	.L120
 2194              	.LVL241:
 498:src/complex.c **** 			else
 499:src/complex.c **** 				set_inf(ry);
 2195              		.loc 1 499 5 is_stmt 1 view .LVU473
 2196 0030 FFF7FEFF 		bl	set_inf
 2197              	.LVL242:
 2198              	.L116:
 500:src/complex.c **** 			set_inf(rx);
 2199              		.loc 1 500 4 view .LVU474
 2200 0034 3046     		mov	r0, r6
ARM GAS  /tmp/ccFQ6cnP.s 			page 54


 2201 0036 FFF7FEFF 		bl	set_inf
 2202              	.LVL243:
 501:src/complex.c **** 		}
 502:src/complex.c **** 	} else {
 503:src/complex.c **** 		cmplxToPolar(&u, ry, a, b);
 504:src/complex.c **** 		dn_ln(rx, &u);
 505:src/complex.c **** 	}
 506:src/complex.c **** #endif
 507:src/complex.c **** }
 2203              		.loc 1 507 1 is_stmt 0 view .LVU475
 2204 003a 0BB0     		add	sp, sp, #44
 2205              		.cfi_remember_state
 2206              		.cfi_def_cfa_offset 20
 2207              		@ sp needed
 2208 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 2209              	.LVL244:
 2210              	.L118:
 2211              		.cfi_restore_state
 480:src/complex.c **** 			cmplx_NaN(rx, ry);
 2212              		.loc 1 480 3 is_stmt 1 view .LVU476
 480:src/complex.c **** 			cmplx_NaN(rx, ry);
 2213              		.loc 1 480 7 is_stmt 0 view .LVU477
 2214 003e 2846     		mov	r0, r5
 2215 0040 FFF7FEFF 		bl	dn_eq0
 2216              	.LVL245:
 480:src/complex.c **** 			cmplx_NaN(rx, ry);
 2217              		.loc 1 480 6 view .LVU478
 2218 0044 D8B1     		cbz	r0, .L109
 2219              	.L114:
 481:src/complex.c **** 		} else if (decNumberIsNegative(a)) {
 2220              		.loc 1 481 4 is_stmt 1 view .LVU479
 2221              	.LVL246:
 2222              	.LBB126:
 2223              	.LBI126:
  75:src/complex.c **** 	set_NaN(x);
 2224              		.loc 1 75 6 view .LVU480
 2225              	.LBB127:
  76:src/complex.c **** 	set_NaN(y);
 2226              		.loc 1 76 2 view .LVU481
 2227 0046 3046     		mov	r0, r6
 2228 0048 FFF7FEFF 		bl	set_NaN
 2229              	.LVL247:
  77:src/complex.c **** }
 2230              		.loc 1 77 2 view .LVU482
 2231 004c 3846     		mov	r0, r7
 2232 004e FFF7FEFF 		bl	set_NaN
 2233              	.LVL248:
 2234              	.L107:
  77:src/complex.c **** }
 2235              		.loc 1 77 2 is_stmt 0 view .LVU483
 2236              	.LBE127:
 2237              	.LBE126:
 2238              		.loc 1 507 1 view .LVU484
 2239 0052 0BB0     		add	sp, sp, #44
 2240              		.cfi_remember_state
 2241              		.cfi_def_cfa_offset 20
 2242              		@ sp needed
ARM GAS  /tmp/ccFQ6cnP.s 			page 55


 2243 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 2244              	.LVL249:
 2245              	.L119:
 2246              		.cfi_restore_state
 492:src/complex.c **** 		if (decNumberIsNaN(a) || decNumberIsNaN(b)) {
 2247              		.loc 1 492 29 discriminator 1 view .LVU485
 2248 0056 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 2249 0058 12F0700F 		tst	r2, #112
 2250 005c DED1     		bne	.L112
 503:src/complex.c **** 		dn_ln(rx, &u);
 2251              		.loc 1 503 3 is_stmt 1 view .LVU486
 2252              	.LVL250:
 2253              	.LBB128:
 2254              	.LBI128:
 215:src/complex.c **** 	do_atan2(t, y, x);
 2255              		.loc 1 215 6 view .LVU487
 2256              	.LBB129:
 216:src/complex.c **** 	cmplxR(r, y, x);
 2257              		.loc 1 216 2 view .LVU488
 2258 005e 2A46     		mov	r2, r5
 2259 0060 2146     		mov	r1, r4
 2260 0062 3846     		mov	r0, r7
 2261 0064 FFF7FEFF 		bl	do_atan2
 2262              	.LVL251:
 217:src/complex.c **** }
 2263              		.loc 1 217 2 view .LVU489
 2264 0068 2A46     		mov	r2, r5
 2265 006a 2146     		mov	r1, r4
 2266 006c 01A8     		add	r0, sp, #4
 2267              	.LVL252:
 217:src/complex.c **** }
 2268              		.loc 1 217 2 is_stmt 0 view .LVU490
 2269 006e FFF7FEFF 		bl	cmplxR
 2270              	.LVL253:
 217:src/complex.c **** }
 2271              		.loc 1 217 2 view .LVU491
 2272              	.LBE129:
 2273              	.LBE128:
 504:src/complex.c **** 	}
 2274              		.loc 1 504 3 is_stmt 1 view .LVU492
 2275 0072 01A9     		add	r1, sp, #4
 2276 0074 3046     		mov	r0, r6
 2277 0076 FFF7FEFF 		bl	dn_ln
 2278              	.LVL254:
 2279              		.loc 1 507 1 is_stmt 0 view .LVU493
 2280 007a 0BB0     		add	sp, sp, #44
 2281              		.cfi_remember_state
 2282              		.cfi_def_cfa_offset 20
 2283              		@ sp needed
 2284 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 2285              	.LVL255:
 2286              	.L109:
 2287              		.cfi_restore_state
 482:src/complex.c **** 			dn_minus(&u, a);
 2288              		.loc 1 482 10 is_stmt 1 view .LVU494
 482:src/complex.c **** 			dn_minus(&u, a);
 2289              		.loc 1 482 13 is_stmt 0 view .LVU495
ARM GAS  /tmp/ccFQ6cnP.s 			page 56


 2290 007e 95F90830 		ldrsb	r3, [r5, #8]
 2291 0082 002B     		cmp	r3, #0
 2292 0084 0ADB     		blt	.L121
 487:src/complex.c **** 			dn_ln(rx, a);
 2293              		.loc 1 487 4 is_stmt 1 view .LVU496
 2294 0086 3846     		mov	r0, r7
 2295 0088 FFF7FEFF 		bl	decNumberZero
 2296              	.LVL256:
 488:src/complex.c **** 		}
 2297              		.loc 1 488 4 view .LVU497
 2298 008c 2946     		mov	r1, r5
 2299 008e 3046     		mov	r0, r6
 2300 0090 FFF7FEFF 		bl	dn_ln
 2301              	.LVL257:
 490:src/complex.c **** 	}
 2302              		.loc 1 490 3 view .LVU498
 2303 0094 DDE7     		b	.L107
 2304              	.LVL258:
 2305              	.L120:
 497:src/complex.c **** 			else
 2306              		.loc 1 497 5 view .LVU499
 2307 0096 FFF7FEFF 		bl	set_neginf
 2308              	.LVL259:
 497:src/complex.c **** 			else
 2309              		.loc 1 497 5 is_stmt 0 view .LVU500
 2310 009a CBE7     		b	.L116
 2311              	.L121:
 483:src/complex.c **** 			dn_ln(rx, &u);
 2312              		.loc 1 483 4 is_stmt 1 view .LVU501
 2313 009c 2946     		mov	r1, r5
 2314 009e 01A8     		add	r0, sp, #4
 2315 00a0 FFF7FEFF 		bl	dn_minus
 2316              	.LVL260:
 484:src/complex.c **** 			decNumberPI(ry);
 2317              		.loc 1 484 4 view .LVU502
 2318 00a4 01A9     		add	r1, sp, #4
 2319 00a6 3046     		mov	r0, r6
 2320 00a8 FFF7FEFF 		bl	dn_ln
 2321              	.LVL261:
 485:src/complex.c **** 		} else {
 2322              		.loc 1 485 4 view .LVU503
 2323 00ac 3846     		mov	r0, r7
 2324 00ae FFF7FEFF 		bl	decNumberPI
 2325              	.LVL262:
 2326 00b2 CEE7     		b	.L107
 2327              		.cfi_endproc
 2328              	.LFE31:
 2330              		.section	.text.cmplxExp,"ax",%progbits
 2331              		.align	1
 2332              		.p2align 2,,3
 2333              		.global	cmplxExp
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2337              		.fpu fpv4-sp-d16
 2339              	cmplxExp:
 2340              	.LVL263:
ARM GAS  /tmp/ccFQ6cnP.s 			page 57


 2341              	.LFB32:
 508:src/complex.c **** 
 509:src/complex.c **** // e ^ ( a + i b ) = e^a cos(b) + i e^a sin(b)
 510:src/complex.c **** void cmplxExp(decNumber *rx, decNumber *ry, const decNumber *a, const decNumber *b) {
 2342              		.loc 1 510 85 view -0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 112
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 511:src/complex.c **** #ifndef TINY_BUILD
 512:src/complex.c **** 	decNumber e, s, c;
 2346              		.loc 1 512 2 view .LVU505
 513:src/complex.c **** 
 514:src/complex.c **** 	if (dn_eq0(b)) {
 2347              		.loc 1 514 2 view .LVU506
 510:src/complex.c **** #ifndef TINY_BUILD
 2348              		.loc 1 510 85 is_stmt 0 view .LVU507
 2349 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2350              		.cfi_def_cfa_offset 20
 2351              		.cfi_offset 4, -20
 2352              		.cfi_offset 5, -16
 2353              		.cfi_offset 6, -12
 2354              		.cfi_offset 7, -8
 2355              		.cfi_offset 14, -4
 2356 0002 0746     		mov	r7, r0
 2357 0004 9DB0     		sub	sp, sp, #116
 2358              		.cfi_def_cfa_offset 136
 2359              		.loc 1 514 6 view .LVU508
 2360 0006 1846     		mov	r0, r3
 2361              	.LVL264:
 510:src/complex.c **** #ifndef TINY_BUILD
 2362              		.loc 1 510 85 view .LVU509
 2363 0008 1C46     		mov	r4, r3
 2364 000a 0E46     		mov	r6, r1
 2365 000c 1546     		mov	r5, r2
 2366              		.loc 1 514 6 view .LVU510
 2367 000e FFF7FEFF 		bl	dn_eq0
 2368              	.LVL265:
 2369              		.loc 1 514 5 view .LVU511
 2370 0012 78B9     		cbnz	r0, .L128
 515:src/complex.c **** 		dn_exp(rx, a);
 516:src/complex.c **** 		decNumberZero(ry);
 517:src/complex.c **** 	} else if (decNumberIsSpecial(a) || decNumberIsSpecial(b)) {
 2371              		.loc 1 517 9 is_stmt 1 view .LVU512
 2372              		.loc 1 517 12 is_stmt 0 view .LVU513
 2373 0014 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 2374 0016 13F0700F 		tst	r3, #112
 2375 001a 03D1     		bne	.L125
 2376              		.loc 1 517 35 discriminator 1 view .LVU514
 2377 001c 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2378 001e 13F0700F 		tst	r3, #112
 2379 0022 10D0     		beq	.L126
 2380              	.L125:
 518:src/complex.c **** 		cmplx_NaN(rx, ry);
 2381              		.loc 1 518 3 is_stmt 1 view .LVU515
 2382              	.LVL266:
 2383              	.LBB136:
 2384              	.LBI136:
ARM GAS  /tmp/ccFQ6cnP.s 			page 58


  75:src/complex.c **** 	set_NaN(x);
 2385              		.loc 1 75 6 view .LVU516
 2386              	.LBB137:
  76:src/complex.c **** 	set_NaN(y);
 2387              		.loc 1 76 2 view .LVU517
 2388 0024 3846     		mov	r0, r7
 2389 0026 FFF7FEFF 		bl	set_NaN
 2390              	.LVL267:
  77:src/complex.c **** }
 2391              		.loc 1 77 2 view .LVU518
 2392 002a 3046     		mov	r0, r6
 2393 002c FFF7FEFF 		bl	set_NaN
 2394              	.LVL268:
 2395              	.LBE137:
 2396              	.LBE136:
 519:src/complex.c **** 	} else {
 520:src/complex.c **** 		dn_exp(&e, a);
 521:src/complex.c **** 		dn_sincos(b, &s, &c);
 522:src/complex.c **** 		dn_multiply(rx, &e, &c);
 523:src/complex.c **** 		dn_multiply(ry, &e, &s);
 524:src/complex.c **** 	}
 525:src/complex.c **** #endif
 526:src/complex.c **** }
 2397              		.loc 1 526 1 is_stmt 0 view .LVU519
 2398 0030 1DB0     		add	sp, sp, #116
 2399              		.cfi_remember_state
 2400              		.cfi_def_cfa_offset 20
 2401              		@ sp needed
 2402 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 2403              	.LVL269:
 2404              	.L128:
 2405              		.cfi_restore_state
 515:src/complex.c **** 		decNumberZero(ry);
 2406              		.loc 1 515 3 is_stmt 1 view .LVU520
 2407 0034 2946     		mov	r1, r5
 2408 0036 3846     		mov	r0, r7
 2409 0038 FFF7FEFF 		bl	dn_exp
 2410              	.LVL270:
 516:src/complex.c **** 	} else if (decNumberIsSpecial(a) || decNumberIsSpecial(b)) {
 2411              		.loc 1 516 3 view .LVU521
 2412 003c 3046     		mov	r0, r6
 2413 003e FFF7FEFF 		bl	decNumberZero
 2414              	.LVL271:
 2415              		.loc 1 526 1 is_stmt 0 view .LVU522
 2416 0042 1DB0     		add	sp, sp, #116
 2417              		.cfi_remember_state
 2418              		.cfi_def_cfa_offset 20
 2419              		@ sp needed
 2420 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 2421              	.LVL272:
 2422              	.L126:
 2423              		.cfi_restore_state
 2424              	.LBB138:
 2425              	.LBI138:
 510:src/complex.c **** #ifndef TINY_BUILD
 2426              		.loc 1 510 6 is_stmt 1 view .LVU523
 2427              	.LBB139:
ARM GAS  /tmp/ccFQ6cnP.s 			page 59


 520:src/complex.c **** 		dn_sincos(b, &s, &c);
 2428              		.loc 1 520 3 view .LVU524
 2429 0046 2946     		mov	r1, r5
 2430 0048 01A8     		add	r0, sp, #4
 2431 004a FFF7FEFF 		bl	dn_exp
 2432              	.LVL273:
 521:src/complex.c **** 		dn_multiply(rx, &e, &c);
 2433              		.loc 1 521 3 view .LVU525
 2434 004e 2046     		mov	r0, r4
 2435 0050 13AA     		add	r2, sp, #76
 2436 0052 0AA9     		add	r1, sp, #40
 2437 0054 FFF7FEFF 		bl	dn_sincos
 2438              	.LVL274:
 522:src/complex.c **** 		dn_multiply(ry, &e, &s);
 2439              		.loc 1 522 3 view .LVU526
 2440 0058 13AA     		add	r2, sp, #76
 2441 005a 01A9     		add	r1, sp, #4
 2442 005c 3846     		mov	r0, r7
 2443 005e FFF7FEFF 		bl	dn_multiply
 2444              	.LVL275:
 523:src/complex.c **** 	}
 2445              		.loc 1 523 3 view .LVU527
 2446 0062 0AAA     		add	r2, sp, #40
 2447 0064 01A9     		add	r1, sp, #4
 2448 0066 3046     		mov	r0, r6
 2449 0068 FFF7FEFF 		bl	dn_multiply
 2450              	.LVL276:
 523:src/complex.c **** 	}
 2451              		.loc 1 523 3 is_stmt 0 view .LVU528
 2452              	.LBE139:
 2453              	.LBE138:
 2454              		.loc 1 526 1 view .LVU529
 2455 006c 1DB0     		add	sp, sp, #116
 2456              		.cfi_def_cfa_offset 20
 2457              		@ sp needed
 2458 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 2459              		.loc 1 526 1 view .LVU530
 2460              		.cfi_endproc
 2461              	.LFE32:
 2463              		.section	.text.cmplxPower,"ax",%progbits
 2464              		.align	1
 2465              		.p2align 2,,3
 2466              		.global	cmplxPower
 2467              		.syntax unified
 2468              		.thumb
 2469              		.thumb_func
 2470              		.fpu fpv4-sp-d16
 2472              	cmplxPower:
 2473              	.LVL277:
 2474              	.LFB14:
 234:src/complex.c **** #ifndef TINY_BUILD
 2475              		.loc 1 234 43 is_stmt 1 view -0
 2476              		.cfi_startproc
 2477              		@ args = 8, pretend = 0, frame = 144
 2478              		@ frame_needed = 0, uses_anonymous_args = 0
 234:src/complex.c **** #ifndef TINY_BUILD
 2479              		.loc 1 234 43 is_stmt 0 view .LVU532
ARM GAS  /tmp/ccFQ6cnP.s 			page 60


 2480 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2481              		.cfi_def_cfa_offset 20
 2482              		.cfi_offset 4, -20
 2483              		.cfi_offset 5, -16
 2484              		.cfi_offset 6, -12
 2485              		.cfi_offset 7, -8
 2486              		.cfi_offset 14, -4
 2487 0002 0546     		mov	r5, r0
 2488 0004 A7B0     		sub	sp, sp, #156
 2489              		.cfi_def_cfa_offset 176
 238:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2490              		.loc 1 238 6 view .LVU533
 2491 0006 1046     		mov	r0, r2
 2492              	.LVL278:
 234:src/complex.c **** #ifndef TINY_BUILD
 2493              		.loc 1 234 43 view .LVU534
 2494 0008 1646     		mov	r6, r2
 2495 000a 0C46     		mov	r4, r1
 236:src/complex.c **** 
 2496              		.loc 1 236 2 is_stmt 1 view .LVU535
 238:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2497              		.loc 1 238 2 view .LVU536
 234:src/complex.c **** #ifndef TINY_BUILD
 2498              		.loc 1 234 43 is_stmt 0 view .LVU537
 2499 000c 1F46     		mov	r7, r3
 238:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2500              		.loc 1 238 6 view .LVU538
 2501 000e FFF7FEFF 		bl	dn_eq0
 2502              	.LVL279:
 238:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2503              		.loc 1 238 5 view .LVU539
 2504 0012 18B1     		cbz	r0, .L130
 238:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2505              		.loc 1 238 19 discriminator 1 view .LVU540
 2506 0014 3846     		mov	r0, r7
 2507 0016 FFF7FEFF 		bl	dn_eq0
 2508              	.LVL280:
 238:src/complex.c **** 		if (dn_eq0(c) && dn_eq0(d))
 2509              		.loc 1 238 16 discriminator 1 view .LVU541
 2510 001a B8B9     		cbnz	r0, .L146
 2511              	.L130:
 246:src/complex.c **** 		cmplxMultiply(&f1, &f2, &e1, &e2, c, d);
 2512              		.loc 1 246 3 is_stmt 1 view .LVU542
 2513 001c 3B46     		mov	r3, r7
 2514 001e 3246     		mov	r2, r6
 2515 0020 0BA9     		add	r1, sp, #44
 2516 0022 02A8     		add	r0, sp, #8
 2517 0024 FFF7FEFF 		bl	cmplxLn
 2518              	.LVL281:
 247:src/complex.c **** 		cmplxExp(rx, ry, &f1, &f2);
 2519              		.loc 1 247 3 view .LVU543
 2520 0028 2D99     		ldr	r1, [sp, #180]
 2521 002a 0191     		str	r1, [sp, #4]
 2522 002c 2C99     		ldr	r1, [sp, #176]
 2523 002e 0091     		str	r1, [sp]
 2524 0030 0BAB     		add	r3, sp, #44
 2525 0032 02AA     		add	r2, sp, #8
ARM GAS  /tmp/ccFQ6cnP.s 			page 61


 2526 0034 1DA9     		add	r1, sp, #116
 2527 0036 14A8     		add	r0, sp, #80
 2528 0038 FFF7FEFF 		bl	cmplxMultiply
 2529              	.LVL282:
 248:src/complex.c **** 	}
 2530              		.loc 1 248 3 view .LVU544
 2531 003c 1DAB     		add	r3, sp, #116
 2532 003e 14AA     		add	r2, sp, #80
 2533 0040 2146     		mov	r1, r4
 2534 0042 2846     		mov	r0, r5
 2535 0044 FFF7FEFF 		bl	cmplxExp
 2536              	.LVL283:
 2537              	.L129:
 251:src/complex.c **** 
 2538              		.loc 1 251 1 is_stmt 0 view .LVU545
 2539 0048 27B0     		add	sp, sp, #156
 2540              		.cfi_remember_state
 2541              		.cfi_def_cfa_offset 20
 2542              		@ sp needed
 2543 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 2544              	.LVL284:
 2545              	.L146:
 2546              		.cfi_restore_state
 2547              	.LBB144:
 2548              	.LBI144:
 232:src/complex.c **** 		const decNumber *a, const decNumber *b,
 2549              		.loc 1 232 6 is_stmt 1 view .LVU546
 2550              	.LBB145:
 239:src/complex.c **** 			cmplx_NaN(rx, ry);
 2551              		.loc 1 239 3 view .LVU547
 239:src/complex.c **** 			cmplx_NaN(rx, ry);
 2552              		.loc 1 239 7 is_stmt 0 view .LVU548
 2553 004c 2C98     		ldr	r0, [sp, #176]
 2554 004e FFF7FEFF 		bl	dn_eq0
 2555              	.LVL285:
 239:src/complex.c **** 			cmplx_NaN(rx, ry);
 2556              		.loc 1 239 6 view .LVU549
 2557 0052 18B1     		cbz	r0, .L131
 239:src/complex.c **** 			cmplx_NaN(rx, ry);
 2558              		.loc 1 239 20 view .LVU550
 2559 0054 2D98     		ldr	r0, [sp, #180]
 2560 0056 FFF7FEFF 		bl	dn_eq0
 2561              	.LVL286:
 239:src/complex.c **** 			cmplx_NaN(rx, ry);
 2562              		.loc 1 239 17 view .LVU551
 2563 005a 38B9     		cbnz	r0, .L147
 2564              	.L131:
 242:src/complex.c **** 			decNumberZero(ry);
 2565              		.loc 1 242 4 is_stmt 1 view .LVU552
 2566 005c 2846     		mov	r0, r5
 2567 005e FFF7FEFF 		bl	decNumberZero
 2568              	.LVL287:
 243:src/complex.c **** 		}
 2569              		.loc 1 243 4 view .LVU553
 2570 0062 2046     		mov	r0, r4
 2571 0064 FFF7FEFF 		bl	decNumberZero
 2572              	.LVL288:
ARM GAS  /tmp/ccFQ6cnP.s 			page 62


 2573              	.LBE145:
 2574              	.LBE144:
 251:src/complex.c **** 
 2575              		.loc 1 251 1 is_stmt 0 view .LVU554
 2576 0068 27B0     		add	sp, sp, #156
 2577              		.cfi_remember_state
 2578              		.cfi_def_cfa_offset 20
 2579              		@ sp needed
 2580 006a F0BD     		pop	{r4, r5, r6, r7, pc}
 2581              	.LVL289:
 2582              	.L147:
 2583              		.cfi_restore_state
 2584              	.LBB149:
 2585              	.LBB148:
 240:src/complex.c **** 		else {
 2586              		.loc 1 240 4 is_stmt 1 view .LVU555
 2587              	.LBB146:
 2588              	.LBI146:
  75:src/complex.c **** 	set_NaN(x);
 2589              		.loc 1 75 6 view .LVU556
 2590              	.LBB147:
  76:src/complex.c **** 	set_NaN(y);
 2591              		.loc 1 76 2 view .LVU557
 2592 006c 2846     		mov	r0, r5
 2593 006e FFF7FEFF 		bl	set_NaN
 2594              	.LVL290:
  77:src/complex.c **** }
 2595              		.loc 1 77 2 view .LVU558
 2596 0072 2046     		mov	r0, r4
 2597 0074 FFF7FEFF 		bl	set_NaN
 2598              	.LVL291:
  78:src/complex.c **** 
 2599              		.loc 1 78 1 is_stmt 0 view .LVU559
 2600 0078 E6E7     		b	.L129
 2601              	.LBE147:
 2602              	.LBE146:
 2603              	.LBE148:
 2604              	.LBE149:
 2605              		.cfi_endproc
 2606              	.LFE14:
 2608 007a 00BF     		.section	.text.cmplxXRoot,"ax",%progbits
 2609              		.align	1
 2610              		.p2align 2,,3
 2611              		.global	cmplxXRoot
 2612              		.syntax unified
 2613              		.thumb
 2614              		.thumb_func
 2615              		.fpu fpv4-sp-d16
 2617              	cmplxXRoot:
 2618              	.LVL292:
 2619              	.LFB15:
 257:src/complex.c **** 	decNumber g, h;
 2620              		.loc 1 257 43 is_stmt 1 view -0
 2621              		.cfi_startproc
 2622              		@ args = 8, pretend = 0, frame = 72
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
 258:src/complex.c **** 
ARM GAS  /tmp/ccFQ6cnP.s 			page 63


 2624              		.loc 1 258 2 view .LVU561
 260:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2625              		.loc 1 260 2 view .LVU562
 257:src/complex.c **** 	decNumber g, h;
 2626              		.loc 1 257 43 is_stmt 0 view .LVU563
 2627 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2628              		.cfi_def_cfa_offset 28
 2629              		.cfi_offset 4, -28
 2630              		.cfi_offset 5, -24
 2631              		.cfi_offset 6, -20
 2632              		.cfi_offset 7, -16
 2633              		.cfi_offset 8, -12
 2634              		.cfi_offset 9, -8
 2635              		.cfi_offset 14, -4
 2636 0004 95B0     		sub	sp, sp, #84
 2637              		.cfi_def_cfa_offset 112
 260:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2638              		.loc 1 260 2 view .LVU564
 2639 0006 0DF12C09 		add	r9, sp, #44
 2640 000a 0DF10808 		add	r8, sp, #8
 257:src/complex.c **** 	decNumber g, h;
 2641              		.loc 1 257 43 view .LVU565
 2642 000e 0446     		mov	r4, r0
 2643 0010 0D46     		mov	r5, r1
 2644 0012 1646     		mov	r6, r2
 2645 0014 1F46     		mov	r7, r3
 260:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2646              		.loc 1 260 2 view .LVU566
 2647 0016 4946     		mov	r1, r9
 2648              	.LVL293:
 260:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2649              		.loc 1 260 2 view .LVU567
 2650 0018 DDE91C23 		ldrd	r2, r3, [sp, #112]
 2651              	.LVL294:
 260:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2652              		.loc 1 260 2 view .LVU568
 2653 001c 4046     		mov	r0, r8
 2654              	.LVL295:
 260:src/complex.c **** 	cmplxPower(rx, ry, a, b, &g, &h);
 2655              		.loc 1 260 2 view .LVU569
 2656 001e FFF7FEFF 		bl	cmplxRecip
 2657              	.LVL296:
 261:src/complex.c **** }
 2658              		.loc 1 261 2 is_stmt 1 view .LVU570
 2659 0022 CDE90089 		strd	r8, r9, [sp]
 2660 0026 3B46     		mov	r3, r7
 2661 0028 3246     		mov	r2, r6
 2662 002a 2946     		mov	r1, r5
 2663 002c 2046     		mov	r0, r4
 2664 002e FFF7FEFF 		bl	cmplxPower
 2665              	.LVL297:
 262:src/complex.c **** #endif
 2666              		.loc 1 262 1 is_stmt 0 view .LVU571
 2667 0032 15B0     		add	sp, sp, #84
 2668              		.cfi_def_cfa_offset 28
 2669              		@ sp needed
 2670 0034 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccFQ6cnP.s 			page 64


 262:src/complex.c **** #endif
 2671              		.loc 1 262 1 view .LVU572
 2672              		.cfi_endproc
 2673              	.LFE15:
 2675              		.section	.text.cmplxCubeRoot,"ax",%progbits
 2676              		.align	1
 2677              		.p2align 2,,3
 2678              		.global	cmplxCubeRoot
 2679              		.syntax unified
 2680              		.thumb
 2681              		.thumb_func
 2682              		.fpu fpv4-sp-d16
 2684              	cmplxCubeRoot:
 2685              	.LVL298:
 2686              	.LFB20:
 336:src/complex.c **** #ifndef TINY_BUILD
 2687              		.loc 1 336 90 is_stmt 1 view -0
 2688              		.cfi_startproc
 2689              		@ args = 0, pretend = 0, frame = 48
 2690              		@ frame_needed = 0, uses_anonymous_args = 0
 338:src/complex.c **** 
 2691              		.loc 1 338 2 view .LVU574
 340:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 2692              		.loc 1 340 2 view .LVU575
 336:src/complex.c **** #ifndef TINY_BUILD
 2693              		.loc 1 336 90 is_stmt 0 view .LVU576
 2694 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2695              		.cfi_def_cfa_offset 20
 2696              		.cfi_offset 4, -20
 2697              		.cfi_offset 5, -16
 2698              		.cfi_offset 6, -12
 2699              		.cfi_offset 7, -8
 2700              		.cfi_offset 14, -4
 2701 0002 8FB0     		sub	sp, sp, #60
 2702              		.cfi_def_cfa_offset 80
 340:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 2703              		.loc 1 340 2 view .LVU577
 2704 0004 05AE     		add	r6, sp, #20
 336:src/complex.c **** #ifndef TINY_BUILD
 2705              		.loc 1 336 90 view .LVU578
 2706 0006 0446     		mov	r4, r0
 2707 0008 0D46     		mov	r5, r1
 2708              	.LBB150:
 2709              	.LBB151:
 227:src/complex.c **** }
 2710              		.loc 1 227 2 view .LVU579
 2711 000a 084F     		ldr	r7, .L152
 2712              	.LBE151:
 2713              	.LBE150:
 340:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 2714              		.loc 1 340 2 view .LVU580
 2715 000c 0849     		ldr	r1, .L152+4
 2716              	.LVL299:
 340:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 2717              		.loc 1 340 2 view .LVU581
 2718 000e 3046     		mov	r0, r6
 2719              	.LVL300:
ARM GAS  /tmp/ccFQ6cnP.s 			page 65


 336:src/complex.c **** #ifndef TINY_BUILD
 2720              		.loc 1 336 90 view .LVU582
 2721 0010 CDE90232 		strd	r3, r2, [sp, #8]
 340:src/complex.c **** 	cmplxPowerReal(rx, ry, a, b, &t);
 2722              		.loc 1 340 2 view .LVU583
 2723 0014 FFF7FEFF 		bl	decNumberRecip
 2724              	.LVL301:
 341:src/complex.c **** #endif
 2725              		.loc 1 341 2 is_stmt 1 view .LVU584
 2726              	.LBB153:
 2727              	.LBI150:
 224:src/complex.c **** 		const decNumber *a, const decNumber *b,
 2728              		.loc 1 224 13 view .LVU585
 2729              	.LBB152:
 227:src/complex.c **** }
 2730              		.loc 1 227 2 view .LVU586
 2731 0018 DDE90232 		ldrd	r3, r2, [sp, #8]
 2732 001c 0096     		str	r6, [sp]
 2733 001e 2946     		mov	r1, r5
 2734 0020 2046     		mov	r0, r4
 2735 0022 0197     		str	r7, [sp, #4]
 2736 0024 FFF7FEFF 		bl	cmplxPower
 2737              	.LVL302:
 227:src/complex.c **** }
 2738              		.loc 1 227 2 is_stmt 0 view .LVU587
 2739              	.LBE152:
 2740              	.LBE153:
 343:src/complex.c **** 
 2741              		.loc 1 343 1 view .LVU588
 2742 0028 0FB0     		add	sp, sp, #60
 2743              		.cfi_def_cfa_offset 20
 2744              		@ sp needed
 2745 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 2746              	.LVL303:
 2747              	.L153:
 343:src/complex.c **** 
 2748              		.loc 1 343 1 view .LVU589
 2749              		.align	2
 2750              	.L152:
 2751 002c 00000000 		.word	const_0
 2752 0030 00000000 		.word	const_3
 2753              		.cfi_endproc
 2754              	.LFE20:
 2756              		.section	.text.cmplxGamma_LnGamma,"ax",%progbits
 2757              		.align	1
 2758              		.p2align 2,,3
 2759              		.syntax unified
 2760              		.thumb
 2761              		.thumb_func
 2762              		.fpu fpv4-sp-d16
 2764              	cmplxGamma_LnGamma:
 2765              	.LVL304:
 2766              	.LFB34:
 527:src/complex.c **** 
 528:src/complex.c **** #ifndef TINY_BUILD
 529:src/complex.c **** static void c_lg(decNumber *rx, decNumber *ry, const decNumber *x, const decNumber *y) {
 530:src/complex.c **** 	decNumber s1, s2, t1, u1, u2, v1, v2, r;
ARM GAS  /tmp/ccFQ6cnP.s 			page 66


 531:src/complex.c **** 	int k;
 532:src/complex.c **** 
 533:src/complex.c **** 	decNumberZero(&u1);
 534:src/complex.c **** 	decNumberZero(&u2);
 535:src/complex.c **** 	dn_add(&t1, x, &const_21);		// (t1, y)
 536:src/complex.c **** 	for (k=20; k>=0; k--) {
 537:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 538:src/complex.c **** 		cmplxDivideRealBy(&s1, &s2, gamma_consts[k], &t1, y);
 539:src/complex.c **** 		dn_dec(&t1);
 540:src/complex.c **** 		cmplxAdd(&u1, &u2, &u1, &u2, &s1, &s2);
 541:src/complex.c **** 	}
 542:src/complex.c **** 	dn_add(&t1, &u1, &const_gammaC00);	// (t1, u2)
 543:src/complex.c **** 	cmplxLn(&s1, &s2, &t1, &u2);		// (s1, s2)
 544:src/complex.c **** 
 545:src/complex.c **** 	dn_add(&r, x, &const_gammaR);		// (r, y)
 546:src/complex.c **** 	cmplxLn(&u1, &u2, &r, y);
 547:src/complex.c **** 	dn_add(&t1, x, &const_0_5);		// (t1, y)
 548:src/complex.c **** 	cmplxMultiply(&v1, &v2, &t1, y, &u1, &u2);
 549:src/complex.c **** 	cmplxSubtract(&u1, &u2, &v1, &v2, &r, y);
 550:src/complex.c **** 	cmplxAdd(rx, ry, &u1, &u2, &s1, &s2);
 551:src/complex.c **** }
 552:src/complex.c **** #endif
 553:src/complex.c **** 
 554:src/complex.c **** static void cmplxGamma_LnGamma(decNumber *rx, decNumber *ry, const decNumber *xin, const decNumber 
 2767              		.loc 1 554 118 is_stmt 1 view -0
 2768              		.cfi_startproc
 2769              		@ args = 4, pretend = 0, frame = 408
 2770              		@ frame_needed = 0, uses_anonymous_args = 0
 555:src/complex.c **** #ifndef TINY_BUILD
 556:src/complex.c **** 	decNumber x, s1, s2, t1, t2, u1, u2;
 2771              		.loc 1 556 2 view .LVU591
 557:src/complex.c **** 	int reflec = 0;
 2772              		.loc 1 557 2 view .LVU592
 558:src/complex.c **** 
 559:src/complex.c **** 	// Check for special cases
 560:src/complex.c **** 	if (decNumberIsSpecial(xin) || decNumberIsSpecial(y)) {
 2773              		.loc 1 560 2 view .LVU593
 554:src/complex.c **** #ifndef TINY_BUILD
 2774              		.loc 1 554 118 is_stmt 0 view .LVU594
 2775 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2776              		.cfi_def_cfa_offset 36
 2777              		.cfi_offset 4, -36
 2778              		.cfi_offset 5, -32
 2779              		.cfi_offset 6, -28
 2780              		.cfi_offset 7, -24
 2781              		.cfi_offset 8, -20
 2782              		.cfi_offset 9, -16
 2783              		.cfi_offset 10, -12
 2784              		.cfi_offset 11, -8
 2785              		.cfi_offset 14, -4
 2786 0004 E9B0     		sub	sp, sp, #420
 2787              		.cfi_def_cfa_offset 456
 554:src/complex.c **** #ifndef TINY_BUILD
 2788              		.loc 1 554 118 view .LVU595
 2789 0006 0646     		mov	r6, r0
 2790 0008 0292     		str	r2, [sp, #8]
 2791              		.loc 1 560 6 view .LVU596
ARM GAS  /tmp/ccFQ6cnP.s 			page 67


 2792 000a 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 2793              	.LVL305:
 2794              		.loc 1 560 5 view .LVU597
 2795 000c 12F0700F 		tst	r2, #112
 554:src/complex.c **** #ifndef TINY_BUILD
 2796              		.loc 1 554 118 view .LVU598
 2797 0010 0F46     		mov	r7, r1
 2798 0012 9B46     		mov	fp, r3
 2799              		.loc 1 560 5 view .LVU599
 2800 0014 7BD1     		bne	.L155
 2801              		.loc 1 560 30 discriminator 1 view .LVU600
 2802 0016 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2803              	.LVL306:
 2804              		.loc 1 560 30 discriminator 1 view .LVU601
 2805 0018 13F07004 		ands	r4, r3, #112
 2806 001c 77D1     		bne	.L155
 561:src/complex.c **** 		if (decNumberIsNaN(xin) || decNumberIsNaN(y))
 562:src/complex.c **** 			cmplx_NaN(rx, ry);
 563:src/complex.c **** 		else {
 564:src/complex.c **** 			if (decNumberIsInfinite(xin)) {
 565:src/complex.c **** 				if (decNumberIsInfinite(y))
 566:src/complex.c **** 					cmplx_NaN(rx, ry);
 567:src/complex.c **** 				else if (decNumberIsNegative(xin))
 568:src/complex.c **** 					cmplx_NaN(rx, ry);
 569:src/complex.c **** 				else {
 570:src/complex.c **** 					set_inf(rx);
 571:src/complex.c **** 					decNumberZero(ry);
 572:src/complex.c **** 				}
 573:src/complex.c **** 			} else {
 574:src/complex.c **** 				decNumberZero(rx);
 575:src/complex.c **** 				decNumberZero(ry);
 576:src/complex.c **** 			}
 577:src/complex.c **** 		}
 578:src/complex.c **** 		return;
 579:src/complex.c **** 	}
 580:src/complex.c **** 
 581:src/complex.c **** 	// Correct out argument and begin the inversion if it is negative
 582:src/complex.c **** 	if (decNumberIsNegative(xin)) {
 2807              		.loc 1 582 2 is_stmt 1 view .LVU602
 2808              		.loc 1 582 5 is_stmt 0 view .LVU603
 2809 001e 1306     		lsls	r3, r2, #24
 2810 0020 00F19480 		bmi	.L174
 583:src/complex.c **** 		reflec = 1;
 584:src/complex.c **** 		dn_1m(&t1, xin);
 585:src/complex.c **** 		if (dn_eq0(y) && is_int(&t1)) {
 586:src/complex.c **** 			cmplx_NaN(rx, ry);
 587:src/complex.c **** 			return;
 588:src/complex.c **** 		}
 589:src/complex.c **** 		dn_m1(&x, &t1);
 590:src/complex.c **** 		dn_minus(&t2, y);
 591:src/complex.c **** 	} else {
 592:src/complex.c **** 		dn_m1(&x, xin);
 2811              		.loc 1 592 3 is_stmt 1 view .LVU604
 2812 0024 0DF1140A 		add	r10, sp, #20
 2813 0028 0299     		ldr	r1, [sp, #8]
 2814              	.LVL307:
 2815              		.loc 1 592 3 is_stmt 0 view .LVU605
ARM GAS  /tmp/ccFQ6cnP.s 			page 68


 2816 002a 5046     		mov	r0, r10
 2817              	.LVL308:
 593:src/complex.c ****         	decNumberCopy(&t2, y);
 2818              		.loc 1 593 10 view .LVU606
 2819 002c 0DF15C09 		add	r9, sp, #92
 592:src/complex.c ****         	decNumberCopy(&t2, y);
 2820              		.loc 1 592 3 view .LVU607
 2821 0030 FFF7FEFF 		bl	dn_m1
 2822              	.LVL309:
 2823              		.loc 1 593 10 is_stmt 1 view .LVU608
 2824 0034 4846     		mov	r0, r9
 2825 0036 5946     		mov	r1, fp
 2826 0038 FFF7FEFF 		bl	decNumberCopy
 2827              	.LVL310:
 557:src/complex.c **** 
 2828              		.loc 1 557 6 is_stmt 0 view .LVU609
 2829 003c 0394     		str	r4, [sp, #12]
 2830              	.LVL311:
 2831              	.L163:
 594:src/complex.c **** 	}
 595:src/complex.c **** 
 596:src/complex.c **** 	// Sum the series
 597:src/complex.c **** 	c_lg(rx, ry, &x, &t2);
 2832              		.loc 1 597 2 is_stmt 1 view .LVU610
 2833              	.LBB177:
 2834              	.LBI177:
 529:src/complex.c **** 	decNumber s1, s2, t1, u1, u2, v1, v2, r;
 2835              		.loc 1 529 13 view .LVU611
 2836              	.LBB178:
 530:src/complex.c **** 	int k;
 2837              		.loc 1 530 2 view .LVU612
 531:src/complex.c **** 
 2838              		.loc 1 531 2 view .LVU613
 533:src/complex.c **** 	decNumberZero(&u2);
 2839              		.loc 1 533 2 view .LVU614
 2840 003e 3BAD     		add	r5, sp, #236
 2841 0040 2846     		mov	r0, r5
 534:src/complex.c **** 	dn_add(&t1, x, &const_21);		// (t1, y)
 2842              		.loc 1 534 2 is_stmt 0 view .LVU615
 2843 0042 44AC     		add	r4, sp, #272
 533:src/complex.c **** 	decNumberZero(&u2);
 2844              		.loc 1 533 2 view .LVU616
 2845 0044 FFF7FEFF 		bl	decNumberZero
 2846              	.LVL312:
 534:src/complex.c **** 	dn_add(&t1, x, &const_21);		// (t1, y)
 2847              		.loc 1 534 2 is_stmt 1 view .LVU617
 2848 0048 2046     		mov	r0, r4
 2849 004a FFF7FEFF 		bl	decNumberZero
 2850              	.LVL313:
 535:src/complex.c **** 	for (k=20; k>=0; k--) {
 2851              		.loc 1 535 2 view .LVU618
 2852 004e 7D4A     		ldr	r2, .L176
 2853 0050 DFF80882 		ldr	r8, .L176+24
 2854 0054 32A8     		add	r0, sp, #200
 2855 0056 5146     		mov	r1, r10
 2856 0058 FFF7FEFF 		bl	dn_add
 2857              	.LVL314:
ARM GAS  /tmp/ccFQ6cnP.s 			page 69


 536:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 2858              		.loc 1 536 2 view .LVU619
 536:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 2859              		.loc 1 536 13 view .LVU620
 2860              	.L164:
 2861              	.LBB179:
 537:src/complex.c **** 		cmplxDivideRealBy(&s1, &s2, gamma_consts[k], &t1, y);
 2862              		.loc 1 537 3 view .LVU621
 538:src/complex.c **** 		dn_dec(&t1);
 2863              		.loc 1 538 3 view .LVU622
 2864 005c 32AB     		add	r3, sp, #200
 2865 005e 58F8042D 		ldr	r2, [r8, #-4]!
 2866 0062 CDF80090 		str	r9, [sp]
 2867 0066 29A9     		add	r1, sp, #164
 2868 0068 20A8     		add	r0, sp, #128
 2869 006a FFF7FEFF 		bl	cmplxDivideRealBy
 2870              	.LVL315:
 539:src/complex.c **** 		cmplxAdd(&u1, &u2, &u1, &u2, &s1, &s2);
 2871              		.loc 1 539 3 view .LVU623
 2872 006e 32A8     		add	r0, sp, #200
 2873 0070 FFF7FEFF 		bl	dn_dec
 2874              	.LVL316:
 540:src/complex.c **** 	}
 2875              		.loc 1 540 3 view .LVU624
 2876              	.LBB180:
 2877              	.LBI180:
 136:src/complex.c **** 		const decNumber *a, const decNumber *b,
 2878              		.loc 1 136 6 view .LVU625
 2879              	.LBB181:
 139:src/complex.c **** 	dn_add(ry, b, d);
 2880              		.loc 1 139 2 view .LVU626
 2881 0074 20AA     		add	r2, sp, #128
 2882              	.LVL317:
 139:src/complex.c **** 	dn_add(ry, b, d);
 2883              		.loc 1 139 2 is_stmt 0 view .LVU627
 2884 0076 2946     		mov	r1, r5
 2885 0078 2846     		mov	r0, r5
 2886 007a FFF7FEFF 		bl	dn_add
 2887              	.LVL318:
 140:src/complex.c **** }
 2888              		.loc 1 140 2 is_stmt 1 view .LVU628
 2889 007e 29AA     		add	r2, sp, #164
 2890              	.LVL319:
 140:src/complex.c **** }
 2891              		.loc 1 140 2 is_stmt 0 view .LVU629
 2892 0080 2146     		mov	r1, r4
 2893 0082 2046     		mov	r0, r4
 2894 0084 FFF7FEFF 		bl	dn_add
 2895              	.LVL320:
 140:src/complex.c **** }
 2896              		.loc 1 140 2 view .LVU630
 2897              	.LBE181:
 2898              	.LBE180:
 2899              	.LBE179:
 536:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 2900              		.loc 1 536 19 is_stmt 1 view .LVU631
 536:src/complex.c **** 		extern const decNumber *const gamma_consts[];
ARM GAS  /tmp/ccFQ6cnP.s 			page 70


 2901              		.loc 1 536 13 view .LVU632
 536:src/complex.c **** 		extern const decNumber *const gamma_consts[];
 2902              		.loc 1 536 2 is_stmt 0 view .LVU633
 2903 0088 6F4B     		ldr	r3, .L176+4
 2904 008a 4345     		cmp	r3, r8
 2905 008c E6D1     		bne	.L164
 542:src/complex.c **** 	cmplxLn(&s1, &s2, &t1, &u2);		// (s1, s2)
 2906              		.loc 1 542 2 is_stmt 1 view .LVU634
 2907 008e 6F4A     		ldr	r2, .L176+8
 2908 0090 2946     		mov	r1, r5
 2909 0092 32A8     		add	r0, sp, #200
 2910 0094 FFF7FEFF 		bl	dn_add
 2911              	.LVL321:
 543:src/complex.c **** 
 2912              		.loc 1 543 2 view .LVU635
 2913 0098 2346     		mov	r3, r4
 2914 009a 32AA     		add	r2, sp, #200
 2915 009c 29A9     		add	r1, sp, #164
 2916 009e 20A8     		add	r0, sp, #128
 2917 00a0 FFF7FEFF 		bl	cmplxLn
 2918              	.LVL322:
 545:src/complex.c **** 	cmplxLn(&u1, &u2, &r, y);
 2919              		.loc 1 545 2 view .LVU636
 2920 00a4 6A4A     		ldr	r2, .L176+12
 2921 00a6 5146     		mov	r1, r10
 2922 00a8 5FA8     		add	r0, sp, #380
 2923 00aa FFF7FEFF 		bl	dn_add
 2924              	.LVL323:
 546:src/complex.c **** 	dn_add(&t1, x, &const_0_5);		// (t1, y)
 2925              		.loc 1 546 2 view .LVU637
 2926 00ae 4B46     		mov	r3, r9
 2927 00b0 5FAA     		add	r2, sp, #380
 2928 00b2 2146     		mov	r1, r4
 2929 00b4 2846     		mov	r0, r5
 2930 00b6 FFF7FEFF 		bl	cmplxLn
 2931              	.LVL324:
 547:src/complex.c **** 	cmplxMultiply(&v1, &v2, &t1, y, &u1, &u2);
 2932              		.loc 1 547 2 view .LVU638
 2933 00ba 664A     		ldr	r2, .L176+16
 2934 00bc 5146     		mov	r1, r10
 2935 00be 32A8     		add	r0, sp, #200
 2936 00c0 FFF7FEFF 		bl	dn_add
 2937              	.LVL325:
 548:src/complex.c **** 	cmplxSubtract(&u1, &u2, &v1, &v2, &r, y);
 2938              		.loc 1 548 2 view .LVU639
 2939 00c4 4B46     		mov	r3, r9
 2940 00c6 32AA     		add	r2, sp, #200
 2941 00c8 56A9     		add	r1, sp, #344
 2942 00ca 4DA8     		add	r0, sp, #308
 2943 00cc CDE90054 		strd	r5, r4, [sp]
 2944 00d0 FFF7FEFF 		bl	cmplxMultiply
 2945              	.LVL326:
 549:src/complex.c **** 	cmplxAdd(rx, ry, &u1, &u2, &s1, &s2);
 2946              		.loc 1 549 2 view .LVU640
 2947              	.LBB182:
 2948              	.LBI182:
 144:src/complex.c **** 		const decNumber *a, const decNumber *b,
ARM GAS  /tmp/ccFQ6cnP.s 			page 71


 2949              		.loc 1 144 6 view .LVU641
 2950              	.LBB183:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 2951              		.loc 1 147 2 view .LVU642
 2952 00d4 5FAA     		add	r2, sp, #380
 2953              	.LVL327:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 2954              		.loc 1 147 2 is_stmt 0 view .LVU643
 2955 00d6 4DA9     		add	r1, sp, #308
 2956              	.LVL328:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 2957              		.loc 1 147 2 view .LVU644
 2958 00d8 2846     		mov	r0, r5
 2959 00da FFF7FEFF 		bl	dn_subtract
 2960              	.LVL329:
 148:src/complex.c **** }
 2961              		.loc 1 148 2 is_stmt 1 view .LVU645
 2962 00de 4A46     		mov	r2, r9
 2963 00e0 56A9     		add	r1, sp, #344
 2964              	.LVL330:
 148:src/complex.c **** }
 2965              		.loc 1 148 2 is_stmt 0 view .LVU646
 2966 00e2 2046     		mov	r0, r4
 2967 00e4 FFF7FEFF 		bl	dn_subtract
 2968              	.LVL331:
 148:src/complex.c **** }
 2969              		.loc 1 148 2 view .LVU647
 2970              	.LBE183:
 2971              	.LBE182:
 550:src/complex.c **** }
 2972              		.loc 1 550 2 is_stmt 1 view .LVU648
 2973              	.LBB184:
 2974              	.LBI184:
 136:src/complex.c **** 		const decNumber *a, const decNumber *b,
 2975              		.loc 1 136 6 view .LVU649
 2976              	.LBB185:
 139:src/complex.c **** 	dn_add(ry, b, d);
 2977              		.loc 1 139 2 view .LVU650
 2978 00e8 20AA     		add	r2, sp, #128
 2979              	.LVL332:
 139:src/complex.c **** 	dn_add(ry, b, d);
 2980              		.loc 1 139 2 is_stmt 0 view .LVU651
 2981 00ea 2946     		mov	r1, r5
 2982 00ec 3046     		mov	r0, r6
 2983 00ee FFF7FEFF 		bl	dn_add
 2984              	.LVL333:
 140:src/complex.c **** }
 2985              		.loc 1 140 2 is_stmt 1 view .LVU652
 2986 00f2 29AA     		add	r2, sp, #164
 2987              	.LVL334:
 140:src/complex.c **** }
 2988              		.loc 1 140 2 is_stmt 0 view .LVU653
 2989 00f4 2146     		mov	r1, r4
 2990 00f6 3846     		mov	r0, r7
 2991 00f8 FFF7FEFF 		bl	dn_add
 2992              	.LVL335:
 140:src/complex.c **** }
ARM GAS  /tmp/ccFQ6cnP.s 			page 72


 2993              		.loc 1 140 2 view .LVU654
 2994              	.LBE185:
 2995              	.LBE184:
 2996              	.LBE178:
 2997              	.LBE177:
 598:src/complex.c **** 	if (!ln)
 2998              		.loc 1 598 2 is_stmt 1 view .LVU655
 2999              		.loc 1 598 5 is_stmt 0 view .LVU656
 3000 00fc 729B     		ldr	r3, [sp, #456]
 3001 00fe 002B     		cmp	r3, #0
 3002 0100 40D0     		beq	.L175
 599:src/complex.c **** 		cmplxExp(rx, ry, rx, ry);
 600:src/complex.c **** 
 601:src/complex.c **** 	// Finally invert if we started with a negative argument
 602:src/complex.c **** 	if (reflec) {
 3003              		.loc 1 602 2 is_stmt 1 view .LVU657
 3004              		.loc 1 602 5 is_stmt 0 view .LVU658
 3005 0102 039B     		ldr	r3, [sp, #12]
 3006 0104 002B     		cmp	r3, #0
 3007 0106 6AD1     		bne	.L167
 3008              	.LVL336:
 3009              	.L154:
 603:src/complex.c **** 		cmplxMultiplyReal(&t1, &t2, xin, y, &const_PI);
 604:src/complex.c **** 		cmplxSin(&s1, &s2, &t1, &t2);
 605:src/complex.c **** 		if (!ln) {
 606:src/complex.c **** 			cmplxMultiply(&u1, &u2, &s1, &s2, rx, ry);
 607:src/complex.c **** 			cmplxDivideRealBy(rx, ry, &const_PI, &u1, &u2);
 608:src/complex.c **** 		} else {
 609:src/complex.c **** 			cmplxDivideRealBy(&u1, &u2, &const_PI, &s1, &s2);
 610:src/complex.c **** 			cmplxLn(&t1, &t2, &u1, &u2);
 611:src/complex.c **** 			cmplxSubtract(rx, ry, &t1, &t2, rx, ry);
 612:src/complex.c **** 		}
 613:src/complex.c **** 	}
 614:src/complex.c **** #endif
 615:src/complex.c **** }
 3010              		.loc 1 615 1 view .LVU659
 3011 0108 69B0     		add	sp, sp, #420
 3012              		.cfi_remember_state
 3013              		.cfi_def_cfa_offset 36
 3014              		@ sp needed
 3015 010a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3016              	.LVL337:
 3017              	.L155:
 3018              		.cfi_restore_state
 561:src/complex.c **** 			cmplx_NaN(rx, ry);
 3019              		.loc 1 561 3 is_stmt 1 view .LVU660
 561:src/complex.c **** 			cmplx_NaN(rx, ry);
 3020              		.loc 1 561 6 is_stmt 0 view .LVU661
 3021 010e 12F0300F 		tst	r2, #48
 3022 0112 12D1     		bne	.L157
 561:src/complex.c **** 			cmplx_NaN(rx, ry);
 3023              		.loc 1 561 30 discriminator 1 view .LVU662
 3024 0114 9BF80830 		ldrb	r3, [fp, #8]	@ zero_extendqisi2
 561:src/complex.c **** 			cmplx_NaN(rx, ry);
 3025              		.loc 1 561 27 discriminator 1 view .LVU663
 3026 0118 13F0300F 		tst	r3, #48
 3027 011c 0DD1     		bne	.L157
ARM GAS  /tmp/ccFQ6cnP.s 			page 73


 564:src/complex.c **** 				if (decNumberIsInfinite(y))
 3028              		.loc 1 564 4 is_stmt 1 view .LVU664
 564:src/complex.c **** 				if (decNumberIsInfinite(y))
 3029              		.loc 1 564 7 is_stmt 0 view .LVU665
 3030 011e 5006     		lsls	r0, r2, #25
 3031              	.LVL338:
 564:src/complex.c **** 				if (decNumberIsInfinite(y))
 3032              		.loc 1 564 7 view .LVU666
 3033 0120 40F18980 		bpl	.L160
 565:src/complex.c **** 					cmplx_NaN(rx, ry);
 3034              		.loc 1 565 5 is_stmt 1 view .LVU667
 565:src/complex.c **** 					cmplx_NaN(rx, ry);
 3035              		.loc 1 565 8 is_stmt 0 view .LVU668
 3036 0124 5906     		lsls	r1, r3, #25
 3037              	.LVL339:
 565:src/complex.c **** 					cmplx_NaN(rx, ry);
 3038              		.loc 1 565 8 view .LVU669
 3039 0126 08D4     		bmi	.L157
 567:src/complex.c **** 					cmplx_NaN(rx, ry);
 3040              		.loc 1 567 10 is_stmt 1 view .LVU670
 567:src/complex.c **** 					cmplx_NaN(rx, ry);
 3041              		.loc 1 567 13 is_stmt 0 view .LVU671
 3042 0128 1206     		lsls	r2, r2, #24
 3043 012a 06D4     		bmi	.L157
 570:src/complex.c **** 					decNumberZero(ry);
 3044              		.loc 1 570 6 is_stmt 1 view .LVU672
 3045 012c 3046     		mov	r0, r6
 3046 012e FFF7FEFF 		bl	set_inf
 3047              	.LVL340:
 571:src/complex.c **** 				}
 3048              		.loc 1 571 6 view .LVU673
 3049 0132 3846     		mov	r0, r7
 3050 0134 FFF7FEFF 		bl	decNumberZero
 3051              	.LVL341:
 3052 0138 E6E7     		b	.L154
 3053              	.LVL342:
 3054              	.L157:
 562:src/complex.c **** 		else {
 3055              		.loc 1 562 4 view .LVU674
 3056              	.LBB186:
 3057              	.LBI186:
  75:src/complex.c **** 	set_NaN(x);
 3058              		.loc 1 75 6 view .LVU675
 3059              	.LBB187:
  76:src/complex.c **** 	set_NaN(y);
 3060              		.loc 1 76 2 view .LVU676
 3061 013a 3046     		mov	r0, r6
 3062 013c FFF7FEFF 		bl	set_NaN
 3063              	.LVL343:
  77:src/complex.c **** }
 3064              		.loc 1 77 2 view .LVU677
 3065 0140 3846     		mov	r0, r7
 3066 0142 FFF7FEFF 		bl	set_NaN
 3067              	.LVL344:
 3068              	.LBE187:
 3069              	.LBE186:
 3070              		.loc 1 615 1 is_stmt 0 view .LVU678
ARM GAS  /tmp/ccFQ6cnP.s 			page 74


 3071 0146 69B0     		add	sp, sp, #420
 3072              		.cfi_remember_state
 3073              		.cfi_def_cfa_offset 36
 3074              		@ sp needed
 3075 0148 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3076              	.LVL345:
 3077              	.L174:
 3078              		.cfi_restore_state
 583:src/complex.c **** 		dn_1m(&t1, xin);
 3079              		.loc 1 583 3 is_stmt 1 view .LVU679
 584:src/complex.c **** 		if (dn_eq0(y) && is_int(&t1)) {
 3080              		.loc 1 584 3 view .LVU680
 3081 014c 0299     		ldr	r1, [sp, #8]
 3082              	.LVL346:
 584:src/complex.c **** 		if (dn_eq0(y) && is_int(&t1)) {
 3083              		.loc 1 584 3 is_stmt 0 view .LVU681
 3084 014e 0EA8     		add	r0, sp, #56
 3085              	.LVL347:
 584:src/complex.c **** 		if (dn_eq0(y) && is_int(&t1)) {
 3086              		.loc 1 584 3 view .LVU682
 3087 0150 FFF7FEFF 		bl	dn_1m
 3088              	.LVL348:
 585:src/complex.c **** 			cmplx_NaN(rx, ry);
 3089              		.loc 1 585 3 is_stmt 1 view .LVU683
 585:src/complex.c **** 			cmplx_NaN(rx, ry);
 3090              		.loc 1 585 7 is_stmt 0 view .LVU684
 3091 0154 5846     		mov	r0, fp
 3092 0156 FFF7FEFF 		bl	dn_eq0
 3093              	.LVL349:
 585:src/complex.c **** 			cmplx_NaN(rx, ry);
 3094              		.loc 1 585 6 view .LVU685
 3095 015a 20B1     		cbz	r0, .L162
 585:src/complex.c **** 			cmplx_NaN(rx, ry);
 3096              		.loc 1 585 20 discriminator 1 view .LVU686
 3097 015c 0EA8     		add	r0, sp, #56
 3098 015e FFF7FEFF 		bl	is_int
 3099              	.LVL350:
 585:src/complex.c **** 			cmplx_NaN(rx, ry);
 3100              		.loc 1 585 17 discriminator 1 view .LVU687
 3101 0162 0028     		cmp	r0, #0
 3102 0164 E9D1     		bne	.L157
 3103              	.L162:
 589:src/complex.c **** 		dn_minus(&t2, y);
 3104              		.loc 1 589 3 is_stmt 1 view .LVU688
 3105 0166 0DF1140A 		add	r10, sp, #20
 3106 016a 0EA9     		add	r1, sp, #56
 3107 016c 5046     		mov	r0, r10
 590:src/complex.c **** 	} else {
 3108              		.loc 1 590 3 is_stmt 0 view .LVU689
 3109 016e 0DF15C09 		add	r9, sp, #92
 589:src/complex.c **** 		dn_minus(&t2, y);
 3110              		.loc 1 589 3 view .LVU690
 3111 0172 FFF7FEFF 		bl	dn_m1
 3112              	.LVL351:
 590:src/complex.c **** 	} else {
 3113              		.loc 1 590 3 is_stmt 1 view .LVU691
 3114 0176 4846     		mov	r0, r9
ARM GAS  /tmp/ccFQ6cnP.s 			page 75


 3115 0178 5946     		mov	r1, fp
 3116 017a FFF7FEFF 		bl	dn_minus
 3117              	.LVL352:
 583:src/complex.c **** 		dn_1m(&t1, xin);
 3118              		.loc 1 583 10 is_stmt 0 view .LVU692
 3119 017e 0123     		movs	r3, #1
 3120 0180 0393     		str	r3, [sp, #12]
 3121 0182 5CE7     		b	.L163
 3122              	.LVL353:
 3123              	.L175:
 599:src/complex.c **** 
 3124              		.loc 1 599 3 is_stmt 1 view .LVU693
 3125 0184 3B46     		mov	r3, r7
 3126 0186 3246     		mov	r2, r6
 3127 0188 3946     		mov	r1, r7
 3128 018a 3046     		mov	r0, r6
 3129 018c FFF7FEFF 		bl	cmplxExp
 3130              	.LVL354:
 602:src/complex.c **** 		cmplxMultiplyReal(&t1, &t2, xin, y, &const_PI);
 3131              		.loc 1 602 2 view .LVU694
 602:src/complex.c **** 		cmplxMultiplyReal(&t1, &t2, xin, y, &const_PI);
 3132              		.loc 1 602 5 is_stmt 0 view .LVU695
 3133 0190 039B     		ldr	r3, [sp, #12]
 3134 0192 002B     		cmp	r3, #0
 3135 0194 B8D0     		beq	.L154
 603:src/complex.c **** 		cmplxSin(&s1, &s2, &t1, &t2);
 3136              		.loc 1 603 3 is_stmt 1 view .LVU696
 3137              	.LVL355:
 3138              	.LBB188:
 3139              	.LBI188:
  92:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3140              		.loc 1 92 13 view .LVU697
 3141              	.LBB189:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 3142              		.loc 1 95 2 view .LVU698
 3143 0196 0299     		ldr	r1, [sp, #8]
 3144 0198 2F4A     		ldr	r2, .L176+20
 3145 019a 0EA8     		add	r0, sp, #56
 3146              	.LVL356:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 3147              		.loc 1 95 2 is_stmt 0 view .LVU699
 3148 019c FFF7FEFF 		bl	dn_multiply
 3149              	.LVL357:
  96:src/complex.c **** }
 3150              		.loc 1 96 2 is_stmt 1 view .LVU700
 3151 01a0 5946     		mov	r1, fp
 3152 01a2 2D4A     		ldr	r2, .L176+20
 3153 01a4 4846     		mov	r0, r9
 3154 01a6 FFF7FEFF 		bl	dn_multiply
 3155              	.LVL358:
  96:src/complex.c **** }
 3156              		.loc 1 96 2 is_stmt 0 view .LVU701
 3157              	.LBE189:
 3158              	.LBE188:
 604:src/complex.c **** 		if (!ln) {
 3159              		.loc 1 604 3 is_stmt 1 view .LVU702
 3160              	.LBB191:
ARM GAS  /tmp/ccFQ6cnP.s 			page 76


 3161              	.LBI191:
 369:src/complex.c **** 	decNumber z;
 3162              		.loc 1 369 6 view .LVU703
 3163              	.LBB192:
 370:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 3164              		.loc 1 370 2 view .LVU704
 371:src/complex.c **** }
 3165              		.loc 1 371 2 view .LVU705
 3166 01aa 5FAB     		add	r3, sp, #380
 3167 01ac CDE90033 		strd	r3, r3, [sp]
 3168 01b0 0EA8     		add	r0, sp, #56
 3169              	.LVL359:
 371:src/complex.c **** }
 3170              		.loc 1 371 2 is_stmt 0 view .LVU706
 3171 01b2 4946     		mov	r1, r9
 3172 01b4 4DAB     		add	r3, sp, #308
 3173              	.LVL360:
 371:src/complex.c **** }
 3174              		.loc 1 371 2 view .LVU707
 3175 01b6 2246     		mov	r2, r4
 3176 01b8 FFF7FEFF 		bl	cmplx_sincos
 3177              	.LVL361:
 371:src/complex.c **** }
 3178              		.loc 1 371 2 view .LVU708
 3179              	.LBE192:
 3180              	.LBE191:
 605:src/complex.c **** 			cmplxMultiply(&u1, &u2, &s1, &s2, rx, ry);
 3181              		.loc 1 605 3 is_stmt 1 view .LVU709
 606:src/complex.c **** 			cmplxDivideRealBy(rx, ry, &const_PI, &u1, &u2);
 3182              		.loc 1 606 4 view .LVU710
 3183 01bc 4DAB     		add	r3, sp, #308
 3184 01be 2246     		mov	r2, r4
 3185 01c0 5FA9     		add	r1, sp, #380
 3186 01c2 56A8     		add	r0, sp, #344
 3187 01c4 CDE90067 		strd	r6, r7, [sp]
 3188 01c8 FFF7FEFF 		bl	cmplxMultiply
 3189              	.LVL362:
 607:src/complex.c **** 		} else {
 3190              		.loc 1 607 4 view .LVU711
 3191 01cc 5FAB     		add	r3, sp, #380
 3192 01ce 0093     		str	r3, [sp]
 3193 01d0 214A     		ldr	r2, .L176+20
 3194 01d2 56AB     		add	r3, sp, #344
 3195 01d4 3946     		mov	r1, r7
 3196 01d6 3046     		mov	r0, r6
 3197 01d8 FFF7FEFF 		bl	cmplxDivideRealBy
 3198              	.LVL363:
 3199 01dc 94E7     		b	.L154
 3200              	.L167:
 603:src/complex.c **** 		cmplxSin(&s1, &s2, &t1, &t2);
 3201              		.loc 1 603 3 view .LVU712
 3202              	.LVL364:
 3203              	.LBB194:
  92:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3204              		.loc 1 92 13 view .LVU713
 3205              	.LBB190:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
ARM GAS  /tmp/ccFQ6cnP.s 			page 77


 3206              		.loc 1 95 2 view .LVU714
 3207 01de 0299     		ldr	r1, [sp, #8]
 3208 01e0 1D4A     		ldr	r2, .L176+20
 3209 01e2 0EA8     		add	r0, sp, #56
 3210              	.LVL365:
  95:src/complex.c **** 	dn_multiply(ry, b, r);
 3211              		.loc 1 95 2 is_stmt 0 view .LVU715
 3212 01e4 FFF7FEFF 		bl	dn_multiply
 3213              	.LVL366:
  96:src/complex.c **** }
 3214              		.loc 1 96 2 is_stmt 1 view .LVU716
 3215 01e8 5946     		mov	r1, fp
 3216 01ea 1B4A     		ldr	r2, .L176+20
 3217 01ec 4846     		mov	r0, r9
 3218 01ee FFF7FEFF 		bl	dn_multiply
 3219              	.LVL367:
  96:src/complex.c **** }
 3220              		.loc 1 96 2 is_stmt 0 view .LVU717
 3221              	.LBE190:
 3222              	.LBE194:
 604:src/complex.c **** 		if (!ln) {
 3223              		.loc 1 604 3 is_stmt 1 view .LVU718
 3224              	.LBB195:
 369:src/complex.c **** 	decNumber z;
 3225              		.loc 1 369 6 view .LVU719
 3226              	.LBB193:
 370:src/complex.c **** 	cmplx_sincos(a, b, rx, ry, &z, &z);
 3227              		.loc 1 370 2 view .LVU720
 371:src/complex.c **** }
 3228              		.loc 1 371 2 view .LVU721
 3229 01f2 5FAB     		add	r3, sp, #380
 3230 01f4 CDE90033 		strd	r3, r3, [sp]
 3231 01f8 0EA8     		add	r0, sp, #56
 3232              	.LVL368:
 371:src/complex.c **** }
 3233              		.loc 1 371 2 is_stmt 0 view .LVU722
 3234 01fa 4DAB     		add	r3, sp, #308
 3235              	.LVL369:
 371:src/complex.c **** }
 3236              		.loc 1 371 2 view .LVU723
 3237 01fc 2246     		mov	r2, r4
 3238 01fe 4946     		mov	r1, r9
 3239 0200 FFF7FEFF 		bl	cmplx_sincos
 3240              	.LVL370:
 371:src/complex.c **** }
 3241              		.loc 1 371 2 view .LVU724
 3242              	.LBE193:
 3243              	.LBE195:
 605:src/complex.c **** 			cmplxMultiply(&u1, &u2, &s1, &s2, rx, ry);
 3244              		.loc 1 605 3 is_stmt 1 view .LVU725
 609:src/complex.c **** 			cmplxLn(&t1, &t2, &u1, &u2);
 3245              		.loc 1 609 4 view .LVU726
 3246 0204 4DAB     		add	r3, sp, #308
 3247 0206 0093     		str	r3, [sp]
 3248 0208 5FA9     		add	r1, sp, #380
 3249 020a 2346     		mov	r3, r4
 3250 020c 56A8     		add	r0, sp, #344
ARM GAS  /tmp/ccFQ6cnP.s 			page 78


 3251 020e 124A     		ldr	r2, .L176+20
 3252 0210 FFF7FEFF 		bl	cmplxDivideRealBy
 3253              	.LVL371:
 610:src/complex.c **** 			cmplxSubtract(rx, ry, &t1, &t2, rx, ry);
 3254              		.loc 1 610 4 view .LVU727
 3255 0214 5FAB     		add	r3, sp, #380
 3256 0216 56AA     		add	r2, sp, #344
 3257 0218 4946     		mov	r1, r9
 3258 021a 0EA8     		add	r0, sp, #56
 3259 021c FFF7FEFF 		bl	cmplxLn
 3260              	.LVL372:
 611:src/complex.c **** 		}
 3261              		.loc 1 611 4 view .LVU728
 3262              	.LBB196:
 3263              	.LBI196:
 144:src/complex.c **** 		const decNumber *a, const decNumber *b,
 3264              		.loc 1 144 6 view .LVU729
 3265              	.LBB197:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 3266              		.loc 1 147 2 view .LVU730
 3267 0220 3246     		mov	r2, r6
 3268 0222 0EA9     		add	r1, sp, #56
 3269              	.LVL373:
 147:src/complex.c **** 	dn_subtract(ry, b, d);
 3270              		.loc 1 147 2 is_stmt 0 view .LVU731
 3271 0224 3046     		mov	r0, r6
 3272 0226 FFF7FEFF 		bl	dn_subtract
 3273              	.LVL374:
 148:src/complex.c **** }
 3274              		.loc 1 148 2 is_stmt 1 view .LVU732
 3275 022a 3A46     		mov	r2, r7
 3276 022c 4946     		mov	r1, r9
 3277 022e 3846     		mov	r0, r7
 3278 0230 FFF7FEFF 		bl	dn_subtract
 3279              	.LVL375:
 149:src/complex.c **** 
 3280              		.loc 1 149 1 is_stmt 0 view .LVU733
 3281 0234 68E7     		b	.L154
 3282              	.LVL376:
 3283              	.L160:
 149:src/complex.c **** 
 3284              		.loc 1 149 1 view .LVU734
 3285              	.LBE197:
 3286              	.LBE196:
 574:src/complex.c **** 				decNumberZero(ry);
 3287              		.loc 1 574 5 is_stmt 1 view .LVU735
 3288 0236 3046     		mov	r0, r6
 3289 0238 FFF7FEFF 		bl	decNumberZero
 3290              	.LVL377:
 575:src/complex.c **** 			}
 3291              		.loc 1 575 5 view .LVU736
 3292 023c 3846     		mov	r0, r7
 3293 023e FFF7FEFF 		bl	decNumberZero
 3294              	.LVL378:
 3295 0242 61E7     		b	.L154
 3296              	.L177:
 3297              		.align	2
ARM GAS  /tmp/ccFQ6cnP.s 			page 79


 3298              	.L176:
 3299 0244 00000000 		.word	const_21
 3300 0248 00000000 		.word	gamma_consts
 3301 024c 00000000 		.word	const_gammaC00
 3302 0250 00000000 		.word	const_gammaR
 3303 0254 00000000 		.word	const_0_5
 3304 0258 00000000 		.word	const_PI
 3305 025c 54000000 		.word	gamma_consts+84
 3306              		.cfi_endproc
 3307              	.LFE34:
 3309              		.section	.text.cmplxGamma,"ax",%progbits
 3310              		.align	1
 3311              		.p2align 2,,3
 3312              		.global	cmplxGamma
 3313              		.syntax unified
 3314              		.thumb
 3315              		.thumb_func
 3316              		.fpu fpv4-sp-d16
 3318              	cmplxGamma:
 3319              	.LVL379:
 3320              	.LFB35:
 616:src/complex.c **** 
 617:src/complex.c **** void cmplxGamma(decNumber *rx, decNumber *ry, const decNumber *x, const decNumber *y) {
 3321              		.loc 1 617 87 view -0
 3322              		.cfi_startproc
 3323              		@ args = 0, pretend = 0, frame = 0
 3324              		@ frame_needed = 0, uses_anonymous_args = 0
 618:src/complex.c **** 	cmplxGamma_LnGamma(rx, ry, x, y, 0);
 3325              		.loc 1 618 2 view .LVU738
 617:src/complex.c **** 	cmplxGamma_LnGamma(rx, ry, x, y, 0);
 3326              		.loc 1 617 87 is_stmt 0 view .LVU739
 3327 0000 10B5     		push	{r4, lr}
 3328              		.cfi_def_cfa_offset 8
 3329              		.cfi_offset 4, -8
 3330              		.cfi_offset 14, -4
 3331 0002 82B0     		sub	sp, sp, #8
 3332              		.cfi_def_cfa_offset 16
 3333              		.loc 1 618 2 view .LVU740
 3334 0004 0024     		movs	r4, #0
 3335 0006 0094     		str	r4, [sp]
 3336 0008 FFF7FEFF 		bl	cmplxGamma_LnGamma
 3337              	.LVL380:
 619:src/complex.c **** }
 3338              		.loc 1 619 1 view .LVU741
 3339 000c 02B0     		add	sp, sp, #8
 3340              		.cfi_def_cfa_offset 8
 3341              		@ sp needed
 3342 000e 10BD     		pop	{r4, pc}
 3343              		.cfi_endproc
 3344              	.LFE35:
 3346              		.section	.text.cmplxLnGamma,"ax",%progbits
 3347              		.align	1
 3348              		.p2align 2,,3
 3349              		.global	cmplxLnGamma
 3350              		.syntax unified
 3351              		.thumb
 3352              		.thumb_func
ARM GAS  /tmp/ccFQ6cnP.s 			page 80


 3353              		.fpu fpv4-sp-d16
 3355              	cmplxLnGamma:
 3356              	.LVL381:
 3357              	.LFB36:
 620:src/complex.c **** 
 621:src/complex.c **** void cmplxLnGamma(decNumber *rx, decNumber *ry, const decNumber *x, const decNumber *y) {
 3358              		.loc 1 621 89 is_stmt 1 view -0
 3359              		.cfi_startproc
 3360              		@ args = 0, pretend = 0, frame = 0
 3361              		@ frame_needed = 0, uses_anonymous_args = 0
 622:src/complex.c **** 	cmplxGamma_LnGamma(rx, ry, x, y, 1);
 3362              		.loc 1 622 2 view .LVU743
 621:src/complex.c **** 	cmplxGamma_LnGamma(rx, ry, x, y, 1);
 3363              		.loc 1 621 89 is_stmt 0 view .LVU744
 3364 0000 10B5     		push	{r4, lr}
 3365              		.cfi_def_cfa_offset 8
 3366              		.cfi_offset 4, -8
 3367              		.cfi_offset 14, -4
 3368 0002 82B0     		sub	sp, sp, #8
 3369              		.cfi_def_cfa_offset 16
 3370              		.loc 1 622 2 view .LVU745
 3371 0004 0124     		movs	r4, #1
 3372 0006 0094     		str	r4, [sp]
 3373 0008 FFF7FEFF 		bl	cmplxGamma_LnGamma
 3374              	.LVL382:
 623:src/complex.c **** }
 3375              		.loc 1 623 1 view .LVU746
 3376 000c 02B0     		add	sp, sp, #8
 3377              		.cfi_def_cfa_offset 8
 3378              		@ sp needed
 3379 000e 10BD     		pop	{r4, pc}
 3380              		.cfi_endproc
 3381              	.LFE36:
 3383              		.text
 3384              	.Letext0:
 3385              		.file 2 "src/decNumber/decContext.h"
 3386              		.file 3 "src/decNumber/decNumber.h"
 3387              		.file 4 "src/decNumber/decimal64.h"
 3388              		.file 5 "src/decNumber/decimal128.h"
 3389              		.file 6 "src/xeq.h"
 3390              		.file 7 "src/data.h"
 3391              		.file 8 "src/consts.h"
 3392              		.file 9 "src/decn.h"
ARM GAS  /tmp/ccFQ6cnP.s 			page 81


DEFINED SYMBOLS
                            *ABS*:0000000000000000 complex.c
     /tmp/ccFQ6cnP.s:18     .text.cmplxDivideRealBy:0000000000000000 $t
     /tmp/ccFQ6cnP.s:26     .text.cmplxDivideRealBy:0000000000000000 cmplxDivideRealBy
     /tmp/ccFQ6cnP.s:118    .text.cmplx_sincos:0000000000000000 $t
     /tmp/ccFQ6cnP.s:125    .text.cmplx_sincos:0000000000000000 cmplx_sincos
     /tmp/ccFQ6cnP.s:236    .text.cmplx_sinhcosh:0000000000000000 $t
     /tmp/ccFQ6cnP.s:243    .text.cmplx_sinhcosh:0000000000000000 cmplx_sinhcosh
     /tmp/ccFQ6cnP.s:315    .text.cmplx_NaN:0000000000000000 $t
     /tmp/ccFQ6cnP.s:323    .text.cmplx_NaN:0000000000000000 cmplx_NaN
     /tmp/ccFQ6cnP.s:357    .text.cmplxAdd:0000000000000000 $t
     /tmp/ccFQ6cnP.s:365    .text.cmplxAdd:0000000000000000 cmplxAdd
     /tmp/ccFQ6cnP.s:413    .text.cmplxSubtract:0000000000000000 $t
     /tmp/ccFQ6cnP.s:421    .text.cmplxSubtract:0000000000000000 cmplxSubtract
     /tmp/ccFQ6cnP.s:469    .text.cmplxMultiply:0000000000000000 $t
     /tmp/ccFQ6cnP.s:477    .text.cmplxMultiply:0000000000000000 cmplxMultiply
     /tmp/ccFQ6cnP.s:631    .text.cmplxMultiply:0000000000000080 $d
     /tmp/ccFQ6cnP.s:636    .text.cmplxDivide:0000000000000000 $t
     /tmp/ccFQ6cnP.s:644    .text.cmplxDivide:0000000000000000 cmplxDivide
     /tmp/ccFQ6cnP.s:828    .text.cmplxDivide:00000000000000b0 $d
     /tmp/ccFQ6cnP.s:833    .text.cmplxArg:0000000000000000 $t
     /tmp/ccFQ6cnP.s:841    .text.cmplxArg:0000000000000000 cmplxArg
     /tmp/ccFQ6cnP.s:866    .text.cmplxR:0000000000000000 $t
     /tmp/ccFQ6cnP.s:874    .text.cmplxR:0000000000000000 cmplxR
     /tmp/ccFQ6cnP.s:929    .text.cmplxToPolar:0000000000000000 $t
     /tmp/ccFQ6cnP.s:937    .text.cmplxToPolar:0000000000000000 cmplxToPolar
     /tmp/ccFQ6cnP.s:985    .text.cmplxAbs:0000000000000000 $t
     /tmp/ccFQ6cnP.s:993    .text.cmplxAbs:0000000000000000 cmplxAbs
     /tmp/ccFQ6cnP.s:1033   .text.cmplxMinus:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1041   .text.cmplxMinus:0000000000000000 cmplxMinus
     /tmp/ccFQ6cnP.s:1084   .text.cmplxRecip:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1092   .text.cmplxRecip:0000000000000000 cmplxRecip
     /tmp/ccFQ6cnP.s:1241   .text.cmplxRecip:0000000000000078 $d
     /tmp/ccFQ6cnP.s:1246   .text.cmplxSqrt:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1254   .text.cmplxSqrt:0000000000000000 cmplxSqrt
     /tmp/ccFQ6cnP.s:1484   .text.cmplxSqrt:00000000000000e0 $d
     /tmp/ccFQ6cnP.s:1491   .text.cmplxSin:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1499   .text.cmplxSin:0000000000000000 cmplxSin
     /tmp/ccFQ6cnP.s:1548   .text.cmplxCos:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1556   .text.cmplxCos:0000000000000000 cmplxCos
     /tmp/ccFQ6cnP.s:1596   .text.cmplxTan:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1604   .text.cmplxTan:0000000000000000 cmplxTan
     /tmp/ccFQ6cnP.s:1705   .text.cmplxSinc:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1713   .text.cmplxSinc:0000000000000000 cmplxSinc
     /tmp/ccFQ6cnP.s:1803   .text.cmplxSinh:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1811   .text.cmplxSinh:0000000000000000 cmplxSinh
     /tmp/ccFQ6cnP.s:1860   .text.cmplxCosh:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1868   .text.cmplxCosh:0000000000000000 cmplxCosh
     /tmp/ccFQ6cnP.s:1908   .text.cmplxTanh:0000000000000000 $t
     /tmp/ccFQ6cnP.s:1916   .text.cmplxTanh:0000000000000000 cmplxTanh
     /tmp/ccFQ6cnP.s:2014   .text.cmplxTanh:0000000000000070 $d
     /tmp/ccFQ6cnP.s:2019   .text.cmplx_1x:0000000000000000 $t
     /tmp/ccFQ6cnP.s:2027   .text.cmplx_1x:0000000000000000 cmplx_1x
     /tmp/ccFQ6cnP.s:2126   .text.cmplx_1x:0000000000000058 $d
     /tmp/ccFQ6cnP.s:2131   .text.cmplxLn:0000000000000000 $t
     /tmp/ccFQ6cnP.s:2139   .text.cmplxLn:0000000000000000 cmplxLn
     /tmp/ccFQ6cnP.s:2331   .text.cmplxExp:0000000000000000 $t
ARM GAS  /tmp/ccFQ6cnP.s 			page 82


     /tmp/ccFQ6cnP.s:2339   .text.cmplxExp:0000000000000000 cmplxExp
     /tmp/ccFQ6cnP.s:2464   .text.cmplxPower:0000000000000000 $t
     /tmp/ccFQ6cnP.s:2472   .text.cmplxPower:0000000000000000 cmplxPower
     /tmp/ccFQ6cnP.s:2609   .text.cmplxXRoot:0000000000000000 $t
     /tmp/ccFQ6cnP.s:2617   .text.cmplxXRoot:0000000000000000 cmplxXRoot
     /tmp/ccFQ6cnP.s:2676   .text.cmplxCubeRoot:0000000000000000 $t
     /tmp/ccFQ6cnP.s:2684   .text.cmplxCubeRoot:0000000000000000 cmplxCubeRoot
     /tmp/ccFQ6cnP.s:2751   .text.cmplxCubeRoot:000000000000002c $d
     /tmp/ccFQ6cnP.s:2757   .text.cmplxGamma_LnGamma:0000000000000000 $t
     /tmp/ccFQ6cnP.s:2764   .text.cmplxGamma_LnGamma:0000000000000000 cmplxGamma_LnGamma
     /tmp/ccFQ6cnP.s:3299   .text.cmplxGamma_LnGamma:0000000000000244 $d
     /tmp/ccFQ6cnP.s:3310   .text.cmplxGamma:0000000000000000 $t
     /tmp/ccFQ6cnP.s:3318   .text.cmplxGamma:0000000000000000 cmplxGamma
     /tmp/ccFQ6cnP.s:3347   .text.cmplxLnGamma:0000000000000000 $t
     /tmp/ccFQ6cnP.s:3355   .text.cmplxLnGamma:0000000000000000 cmplxLnGamma

UNDEFINED SYMBOLS
dn_multiply
dn_add
dn_divide
dn_minus
dn_eq0
dn_sincos
dn_sinhcosh
decNumberZero
decNumberCopy
set_inf
set_NaN
dn_subtract
is_dblmode
dn_plus
Ctx
do_atan2
dn_sqrt
const_root2on2
dn_1
dn__1
decNumberSinc
decNumberTanh
const_1
decNumberMod
dn_mulPI
sincosTaylor
dn_exp
const_2
dn_ln
set_neginf
decNumberPI
decNumberRecip
const_0
const_3
dn_m1
dn_dec
dn_1m
is_int
const_21
gamma_consts
ARM GAS  /tmp/ccFQ6cnP.s 			page 83


const_gammaC00
const_gammaR
const_0_5
const_PI

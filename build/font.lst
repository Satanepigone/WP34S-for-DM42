ARM GAS  /tmp/ccOl1yZi.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"font.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.charlengths,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	charlengths
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	charlengths:
  28              	.LVL0:
  29              	.LFB0:
  30              		.file 1 "src/font.c"
   1:src/font.c    **** /* This file is part of 34S.
   2:src/font.c    ****  * 
   3:src/font.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/font.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/font.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/font.c    ****  * (at your option) any later version.
   7:src/font.c    ****  * 
   8:src/font.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/font.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/font.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/font.c    ****  * GNU General Public License for more details.
  12:src/font.c    ****  * 
  13:src/font.c    ****  * You should have received a copy of the GNU General Public License
  14:src/font.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/font.c    ****  * 
  16:src/font.c    ****  * 
  17:src/font.c    ****  * This file is automatically generated.
  18:src/font.c    ****  * Changes will not be preserved.
  19:src/font.c    ****  */
  20:src/font.c    **** 
  21:src/font.c    **** /* Function to return the length of a specific character in pixels
  22:src/font.c    ****  */
  23:src/font.c    **** 
  24:src/font.c    **** unsigned int charlengths(unsigned int c) {
  31              		.loc 1 24 42 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccOl1yZi.s 			page 2


  35              		@ link register save eliminated.
  25:src/font.c    **** 	static const unsigned char widths[171] = {
  36              		.loc 1 25 2 view .LVU1
  26:src/font.c    **** 		162, 143, 210, 208, 215, 179, 100, 209, 130, 167, 178, 199,
  27:src/font.c    **** 		215,  85, 107, 123, 160, 172, 172,  88, 178, 177, 208, 208,
  28:src/font.c    **** 		166, 208, 179, 173, 209, 215, 130, 165, 170, 172, 172, 165,
  29:src/font.c    **** 		177, 172, 172, 214, 171, 117, 131, 209, 143, 215, 131, 178,
  30:src/font.c    **** 		215, 213, 143, 201, 213, 179, 172, 214, 170, 172, 215, 209,
  31:src/font.c    **** 		215,  95, 129, 129, 172, 172, 172, 172, 129, 207, 215, 136,
  32:src/font.c    **** 		172, 208, 173, 172, 172, 172, 136, 129, 172, 172, 166, 172,
  33:src/font.c    **** 		172, 112, 135, 147, 129, 171, 130, 129, 176, 131, 141, 208,
  34:src/font.c    **** 		115, 143,  82, 140,  50,  93, 129, 129,  57, 128, 165, 129,
  35:src/font.c    **** 		129,  57, 135, 137, 171, 129, 135,  93, 123, 123, 129, 129,
  36:src/font.c    **** 		 87, 195, 129, 129, 129, 131,  57, 135, 141, 172, 171, 131,
  37:src/font.c    **** 		207, 165, 202, 177,  93, 167, 178, 135, 165, 124, 129, 177,
  38:src/font.c    **** 		136, 142, 143,  86, 129, 129, 129, 129, 129,  87, 165, 129,
  39:src/font.c    **** 		129, 129, 129, 129, 129, 129, 129, 129, 123, 129, 129, 129,
  40:src/font.c    **** 		129, 129,  21
  41:src/font.c    **** 	};
  42:src/font.c    **** 	static const unsigned char divs[3] = { 1, 6, 36 };
  37              		.loc 1 42 2 view .LVU2
  43:src/font.c    **** 	return (widths[c/3] / divs[c%3]) % 6 + 1;
  38              		.loc 1 43 2 view .LVU3
  39              		.loc 1 43 18 is_stmt 0 view .LVU4
  40 0000 0D4B     		ldr	r3, .L4
  41 0002 A3FB0012 		umull	r1, r2, r3, r0
  42              		.loc 1 43 30 view .LVU5
  43 0006 22F00101 		bic	r1, r2, #1
  44 000a 01EB5201 		add	r1, r1, r2, lsr #1
  24:src/font.c    **** 	static const unsigned char widths[171] = {
  45              		.loc 1 24 42 view .LVU6
  46 000e 30B4     		push	{r4, r5}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 4, -8
  49              		.cfi_offset 5, -4
  50              		.loc 1 43 30 view .LVU7
  51 0010 401A     		subs	r0, r0, r1
  52              	.LVL1:
  53              		.loc 1 43 28 view .LVU8
  54 0012 0A4D     		ldr	r5, .L4+4
  55              		.loc 1 43 16 view .LVU9
  56 0014 0A4C     		ldr	r4, .L4+8
  57              		.loc 1 43 35 view .LVU10
  58 0016 295C     		ldrb	r1, [r5, r0]	@ zero_extendqisi2
  59              		.loc 1 43 18 view .LVU11
  60 0018 5208     		lsrs	r2, r2, #1
  61              		.loc 1 43 35 view .LVU12
  62 001a A05C     		ldrb	r0, [r4, r2]	@ zero_extendqisi2
  63 001c B0FBF1F0 		udiv	r0, r0, r1
  64 0020 A3FB0023 		umull	r2, r3, r3, r0
  65 0024 9B08     		lsrs	r3, r3, #2
  66 0026 03EB4303 		add	r3, r3, r3, lsl #1
  67 002a A0EB4303 		sub	r3, r0, r3, lsl #1
  68 002e D8B2     		uxtb	r0, r3
  44:src/font.c    **** }
  69              		.loc 1 44 1 view .LVU13
  70 0030 0130     		adds	r0, r0, #1
ARM GAS  /tmp/ccOl1yZi.s 			page 3


  71 0032 30BC     		pop	{r4, r5}
  72              		.cfi_restore 5
  73              		.cfi_restore 4
  74              		.cfi_def_cfa_offset 0
  75 0034 7047     		bx	lr
  76              	.L5:
  77 0036 00BF     		.align	2
  78              	.L4:
  79 0038 ABAAAAAA 		.word	-1431655765
  80 003c 00000000 		.word	.LANCHOR1
  81 0040 00000000 		.word	.LANCHOR0
  82              		.cfi_endproc
  83              	.LFE0:
  85              		.section	.text.findlengths,"ax",%progbits
  86              		.align	1
  87              		.p2align 2,,3
  88              		.global	findlengths
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	findlengths:
  95              	.LVL2:
  96              	.LFB1:
  45:src/font.c    **** 
  46:src/font.c    **** void findlengths(unsigned short int posns[257], int smallp) {
  97              		.loc 1 46 61 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
  47:src/font.c    **** 	const int mask = smallp ? 256 : 0;
 101              		.loc 1 47 32 is_stmt 0 view .LVU15
 102 0000 0029     		cmp	r1, #0
 103 0002 18BF     		it	ne
 104 0004 4FF48071 		movne	r1, #256
 105              	.LVL3:
  48:src/font.c    **** 	int i;
  49:src/font.c    **** 
  50:src/font.c    **** 	posns[0] = 0;
 106              		.loc 1 50 11 view .LVU16
 107 0008 4FF0000C 		mov	ip, #0
  46:src/font.c    **** 	const int mask = smallp ? 256 : 0;
 108              		.loc 1 46 61 view .LVU17
 109 000c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 110              		.cfi_def_cfa_offset 24
 111              		.cfi_offset 4, -24
 112              		.cfi_offset 5, -20
 113              		.cfi_offset 6, -16
 114              		.cfi_offset 7, -12
 115              		.cfi_offset 8, -8
 116              		.cfi_offset 14, -4
  47:src/font.c    **** 	const int mask = smallp ? 256 : 0;
 117              		.loc 1 47 32 view .LVU18
 118 0010 18BF     		it	ne
 119 0012 0622     		movne	r2, #6
 120 0014 01F10104 		add	r4, r1, #1
 121              	.LBB4:
ARM GAS  /tmp/ccOl1yZi.s 			page 4


 122              	.LBB5:
  43:src/font.c    **** }
 123              		.loc 1 43 35 view .LVU19
 124 0018 144D     		ldr	r5, .L14
 125 001a 154F     		ldr	r7, .L14+4
 126 001c 154E     		ldr	r6, .L14+8
 127              	.LBE5:
 128              	.LBE4:
 129              		.loc 1 50 11 view .LVU20
 130 001e A0F800C0 		strh	ip, [r0]	@ movhi
  47:src/font.c    **** 	int i;
 131              		.loc 1 47 32 view .LVU21
 132 0022 0ABF     		itet	eq
 133 0024 0122     		moveq	r2, #1
  47:src/font.c    **** 	int i;
 134              		.loc 1 47 2 is_stmt 1 view .LVU22
 135              	.LVL4:
  48:src/font.c    **** 
 136              		.loc 1 48 2 view .LVU23
 137              		.loc 1 50 2 view .LVU24
  51:src/font.c    **** 	for(i=0; i<256; i++)
 138              		.loc 1 51 2 view .LVU25
 139              		.loc 1 51 11 view .LVU26
  47:src/font.c    **** 	int i;
 140              		.loc 1 47 32 is_stmt 0 view .LVU27
 141 0026 7023     		movne	r3, #112
 142 0028 A223     		moveq	r3, #162
 143 002a 01F58071 		add	r1, r1, #256
 144 002e 03E0     		b	.L9
 145              	.LVL5:
 146              	.L13:
  47:src/font.c    **** 	int i;
 147              		.loc 1 47 32 view .LVU28
 148 0030 BB5C     		ldrb	r3, [r7, r2]	@ zero_extendqisi2
 149 0032 16F80E20 		ldrb	r2, [r6, lr]	@ zero_extendqisi2
 150 0036 0134     		adds	r4, r4, #1
 151              	.LVL6:
 152              	.L9:
  52:src/font.c    **** 		posns[i+1] = posns[i] + charlengths(i + mask) - 1;
 153              		.loc 1 52 3 is_stmt 1 discriminator 3 view .LVU29
 154              	.LBB7:
 155              	.LBI4:
  24:src/font.c    **** 	static const unsigned char widths[171] = {
 156              		.loc 1 24 14 discriminator 3 view .LVU30
 157              	.LBB6:
  25:src/font.c    **** 		162, 143, 210, 208, 215, 179, 100, 209, 130, 167, 178, 199,
 158              		.loc 1 25 2 discriminator 3 view .LVU31
  42:src/font.c    **** 	return (widths[c/3] / divs[c%3]) % 6 + 1;
 159              		.loc 1 42 2 discriminator 3 view .LVU32
  43:src/font.c    **** }
 160              		.loc 1 43 2 discriminator 3 view .LVU33
  43:src/font.c    **** }
 161              		.loc 1 43 35 is_stmt 0 discriminator 3 view .LVU34
 162 0038 B3FBF2F3 		udiv	r3, r3, r2
 163 003c A5FB03E2 		umull	lr, r2, r5, r3
 164 0040 9208     		lsrs	r2, r2, #2
 165 0042 02EB420E 		add	lr, r2, r2, lsl #1
ARM GAS  /tmp/ccOl1yZi.s 			page 5


 166 0046 A3EB4E03 		sub	r3, r3, lr, lsl #1
 167 004a A5FB0482 		umull	r8, r2, r5, r4
 168 004e 5208     		lsrs	r2, r2, #1
 169              	.LBE6:
 170              	.LBE7:
 171              		.loc 1 52 49 discriminator 3 view .LVU35
 172 0050 5CFA83F3 		uxtab	r3, ip, r3
 173 0054 02EB420E 		add	lr, r2, r2, lsl #1
 174 0058 1FFA83FC 		uxth	ip, r3
  51:src/font.c    **** 		posns[i+1] = posns[i] + charlengths(i + mask) - 1;
 175              		.loc 1 51 2 discriminator 3 view .LVU36
 176 005c 8C42     		cmp	r4, r1
 177              		.loc 1 52 14 discriminator 3 view .LVU37
 178 005e 20F802CF 		strh	ip, [r0, #2]!	@ movhi
  51:src/font.c    **** 		posns[i+1] = posns[i] + charlengths(i + mask) - 1;
 179              		.loc 1 51 18 is_stmt 1 discriminator 3 view .LVU38
 180              	.LVL7:
  51:src/font.c    **** 		posns[i+1] = posns[i] + charlengths(i + mask) - 1;
 181              		.loc 1 51 11 discriminator 3 view .LVU39
 182 0062 A4EB0E0E 		sub	lr, r4, lr
  51:src/font.c    **** 		posns[i+1] = posns[i] + charlengths(i + mask) - 1;
 183              		.loc 1 51 2 is_stmt 0 discriminator 3 view .LVU40
 184 0066 E3D1     		bne	.L13
  53:src/font.c    **** }
 185              		.loc 1 53 1 view .LVU41
 186 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 187              	.LVL8:
 188              	.L15:
 189              		.loc 1 53 1 view .LVU42
 190              		.align	2
 191              	.L14:
 192 006c ABAAAAAA 		.word	-1431655765
 193 0070 00000000 		.word	.LANCHOR0
 194 0074 00000000 		.word	.LANCHOR1
 195              		.cfi_endproc
 196              	.LFE1:
 198              		.section	.text.unpackchar,"ax",%progbits
 199              		.align	1
 200              		.p2align 2,,3
 201              		.global	unpackchar
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	unpackchar:
 208              	.LVL9:
 209              	.LFB2:
  54:src/font.c    **** 
  55:src/font.c    **** void unpackchar(unsigned int c, unsigned char d[6], int smallp, const unsigned short int posns[257]
 210              		.loc 1 55 102 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
  56:src/font.c    **** 	static const unsigned char bm_large[6][127] = {
 214              		.loc 1 56 2 view .LVU44
  57:src/font.c    **** 		{
  58:src/font.c    **** 			127, 142, 238,   0,   6, 224,   0,   0, 192,  44, 123,  16,
ARM GAS  /tmp/ccOl1yZi.s 			page 6


  59:src/font.c    **** 			 38,   1,   0,  69,  88,  64, 128, 105,  10,   0, 104, 218,
  60:src/font.c    **** 			215, 219, 155,   1,   0, 152, 179, 179, 247, 239, 242, 152,
  61:src/font.c    **** 			 17, 163,  59, 119, 246,  51, 198,  24, 255, 185,  32,   8,
  62:src/font.c    **** 			 64,  96,   8,  49,   6,   0,   0,   0,   4,   0,   0, 128,
  63:src/font.c    **** 			 15, 104, 224, 201,  67, 112,  30,  16, 224, 193, 215, 239,
  64:src/font.c    **** 			 64,   0, 113, 192,  65, 161,   0,  64, 128, 224, 129,   1,
  65:src/font.c    **** 			  2, 224,   1,   0,   0,   0,   0,   0,   0,   0,   0, 134,
  66:src/font.c    **** 			 63, 141, 223, 134,  63, 231, 247,   7, 118, 234,  31, 195,
  67:src/font.c    **** 			159, 134, 212,  15, 191,  18,  63,  12, 127, 205, 239,  15,
  68:src/font.c    **** 			127, 190,  99, 248, 147,  56,  15, 
  69:src/font.c    **** 		},
  70:src/font.c    **** 		{
  71:src/font.c    **** 			  0,  66,  27,   8,   9,  18, 132,  16,  66,  42, 101, 248,
  72:src/font.c    **** 			217,   2, 168,  42,  88, 229, 103, 154, 132,   0, 152,  39,
  73:src/font.c    **** 			 86,   4, 102,  62, 130,  96, 204,  76,  25,  17,  83,  88,
  74:src/font.c    **** 			177, 103, 204, 152,  73,  50,  70, 165,  48,  97,  65,   8,
  75:src/font.c    **** 			 64,  16,  15,  32,   4,   0,   0,   0,   4,   0,   0, 128,
  76:src/font.c    **** 			 74,  92,  32, 137, 228, 136,   5,  16,   0,  92,  58, 161,
  77:src/font.c    **** 			224,  64, 141,   0, 129, 240,   3, 160,  84,  12,  65,   2,
  78:src/font.c    **** 			  4, 128,  28,   0,   0, 128, 179,   0,   0,   0,   0,   0,
  79:src/font.c    **** 			  0,   0,  32,   1,   0,   0,   0,   0,   0,   0,   0,   0,
  80:src/font.c    **** 			  0,  64,   0,   0,   0,   0, 128,   1,   0,   0,   0,   0,
  81:src/font.c    **** 			  0,   0,   0,   0,   0,   0,   0, 
  82:src/font.c    **** 		},
  83:src/font.c    **** 		{
  84:src/font.c    **** 			 77,  66, 222, 190, 208, 119,  72,  16, 231, 238,  87,  23,
  85:src/font.c    **** 			  7, 128, 150,  56, 136,  95, 150, 145, 159,   0, 212,  34,
  86:src/font.c    **** 			213,  29,  89,  14, 125,  97, 205,  11, 121,  23,  94,  56,
  87:src/font.c    **** 			 81, 107, 204, 152,  66,  82,  85,  66,  40,  34,   0,  63,
  88:src/font.c    **** 			115, 147, 188,  57, 245, 206, 206, 219,  63,  99, 108,  94,
  89:src/font.c    **** 			178, 130,  32, 212,  69, 136, 221,  43, 192,  98,  86, 178,
  90:src/font.c    **** 			 81,  65, 141, 128,  64, 167,  80, 246, 138, 130,  90, 170,
  91:src/font.c    **** 			 41, 211, 235, 231, 254, 103, 101,  85, 193,   3,   0, 204,
  92:src/font.c    **** 			204, 204,  61, 254, 255, 255,  63, 157, 115, 238,  28, 153,
  93:src/font.c    **** 			153,  25, 227, 187, 187, 187,  89, 152, 153, 109, 219, 153,
  94:src/font.c    **** 			153, 181,  35,  51,  51,  51,  15, 
  95:src/font.c    **** 		},
  96:src/font.c    **** 		{
  97:src/font.c    **** 			210,  66, 144, 200,  63,  57, 255, 215,  74, 168, 212,  70,
  98:src/font.c    **** 			217,   2, 193,  17,   8, 229,  72, 150, 228, 127, 180,  18,
  99:src/font.c    **** 			 62,  38, 165, 179,   0,  82, 255,  12,  25, 145,  83,  56,
 100:src/font.c    **** 			 81, 115, 188, 122,  68,  82,  85,  66,  36,  34, 128, 204,
 101:src/font.c    **** 			200,  62,  79, 241,  84,  51,  51,  71,  36,  99, 149,  82,
 102:src/font.c    **** 			 18, 225,  32, 148, 116, 252, 167, 170,  22, 106,   2, 242,
 103:src/font.c    **** 			 95, 191, 139, 235,  21, 160, 171,  41, 201,  69, 164, 111,
 104:src/font.c    **** 			 40, 147, 190, 146,  73, 100,  37,  53, 126, 254,  56,  50,
 105:src/font.c    **** 			 51,  51,  34, 238, 238,  36, 105,  99, 140,  49,  71, 153,
 106:src/font.c    **** 			153, 169,  20, 101, 102, 102,  68, 116, 119,  75,  82, 102,
 107:src/font.c    **** 			102, 142,  52,  51,  51,  85,   9, 
 108:src/font.c    **** 		},
 109:src/font.c    **** 		{
 110:src/font.c    **** 			 34,  83, 224,   0, 192,  23,  72,  56,  66,   6, 204, 253,
 111:src/font.c    **** 			 47, 189, 170,  56, 128,  79, 117, 146, 138, 136, 147,  74,
 112:src/font.c    **** 			 18, 166,  36, 238, 255,  71, 200,  76,  25,  17,  83,  89,
 113:src/font.c    **** 			 17,  99, 140,  84,  73, 146, 108,  69,  34,  36, 128, 204,
 114:src/font.c    **** 			200,  17,  76, 177,  84,  51, 207, 131,  36,  85,  21, 137,
 115:src/font.c    **** 			 10,  28,  53, 162,  76, 143, 165,  69,   9,  98,   2,  17,
ARM GAS  /tmp/ccOl1yZi.s 			page 7


 116:src/font.c    **** 			239,  32,  81,  63,  42, 128, 172, 233,  40, 211, 101, 170,
 117:src/font.c    **** 			244, 203, 171, 114,  73, 164,  51, 174,  86, 101, 127, 255,
 118:src/font.c    **** 			255,  63, 194,  35,  34,  36, 169,  99, 140, 241, 248, 153,
 119:src/font.c    **** 			153,  73, 136, 100, 102, 102, 132, 207, 204,  72,  82, 102,
 120:src/font.c    **** 			102,   6,  45,  51,  51, 137,   4, 
 121:src/font.c    **** 		},
 122:src/font.c    **** 		{
 123:src/font.c    **** 			 29,  34,   0, 254, 191, 224, 132,  16,   2,   0, 188,  67,
 124:src/font.c    **** 			 81,  85, 212,  19,   8, 245, 178, 101, 128, 132,  99, 190,
 125:src/font.c    **** 			209, 153, 152,  29,   0, 144, 203, 179, 247, 225, 242, 150,
 126:src/font.c    **** 			 31, 163,  11, 155,  70, 140, 196,  72, 254,  60,  30,  63,
 127:src/font.c    **** 			119, 147, 203,  47,  95, 211,   2, 227, 216, 137, 234, 184,
 128:src/font.c    **** 			 15,   8,  42, 254, 115, 119, 221, 199, 234,  93, 130, 255,
 129:src/font.c    **** 			 73,   0, 217,  15,  20, 128,  84,  54, 200,  12, 161,  57,
 130:src/font.c    **** 			 51,   6, 157,  30, 198,  28, 105,  68, 221, 223, 205,  51,
 131:src/font.c    **** 			 51, 211, 125, 254, 255, 255,  63, 157, 115,  46, 175, 102,
 132:src/font.c    **** 			102,  70, 200, 187, 187, 187, 251, 152, 153, 253, 127, 154,
 133:src/font.c    **** 			153, 197, 213, 221, 221, 103,  28, 
 134:src/font.c    **** 		},
 135:src/font.c    **** 	};
 136:src/font.c    **** 	static const unsigned char bm_small[6][101] = {
 215              		.loc 1 136 2 view .LVU45
 137:src/font.c    **** 		{
 138:src/font.c    **** 			191, 251,  46,  70,  46,  36, 217, 217, 131, 152,   4, 160,
 139:src/font.c    **** 			 22, 173, 242, 185, 166,   0, 104, 255, 222, 255,  65, 228,
 140:src/font.c    **** 			166, 121, 191, 155, 153, 152, 191, 157, 223, 102, 251, 179,
 141:src/font.c    **** 			 16,   2, 194,  72,  38,   0,   0, 128,   0,   0, 192,   7,
 142:src/font.c    **** 			 26,  56,  26, 193,  28,   8, 120, 112, 189, 193, 161,  26,
 143:src/font.c    **** 			 48,  40,  10,   0, 129, 124,  56,  48, 224,   0,   0,   0,
 144:src/font.c    **** 			  0,   0,   0,   0, 128, 249, 149, 239, 249, 253, 247, 231,
 145:src/font.c    **** 			247, 199, 252, 202, 253, 252, 202, 199, 252, 238, 247, 243,
 146:src/font.c    **** 			251,  99, 126, 229,  30, 
 147:src/font.c    **** 		},
 148:src/font.c    **** 		{
 149:src/font.c    **** 			128, 168, 113, 233,  65, 162, 235,  47, 251, 111,  11,  90,
 150:src/font.c    **** 			226, 236,  47, 172,  73,   4, 216, 201,  38, 108, 161, 139,
 151:src/font.c    **** 			217, 166,  73, 154, 149, 189, 109,  86, 212, 102, 203,  98,
 152:src/font.c    **** 			161,  99,  90,  14, 180, 183, 253, 254, 219, 216,  94, 165,
 153:src/font.c    **** 			 23,   8, 171,  35, 203,  11,   0, 215, 138, 161, 162,  38,
 154:src/font.c    **** 			 32, 208, 158, 210, 106, 194, 171, 202,  86, 238, 217, 191,
 155:src/font.c    **** 			174,  85,   1,   0,   0,   0,   0,  16,   0,   0,   0,   0,
 156:src/font.c    **** 			  0,   0,   0,   0,   0,   0,   0,  48,   0,   0,   0,   0,
 157:src/font.c    **** 			  0,   0,   0,   0,   0, 
 158:src/font.c    **** 		},
 159:src/font.c    **** 		{
 160:src/font.c    **** 			173, 232, 173,  95, 247,  47, 157, 189, 182,  24,   0,   4,
 161:src/font.c    **** 			 71, 132, 114,  18, 249, 207,  84, 237, 255, 252,  27, 208,
 162:src/font.c    **** 			253, 165,  91, 159, 147, 218, 125, 142, 212, 166, 164,  36,
 163:src/font.c    **** 			 64, 159, 247, 125, 174, 218, 182, 153, 218, 170, 122,  93,
 164:src/font.c    **** 			 32, 136, 110, 225, 191,  22, 176,  88, 209, 163, 222,  37,
 165:src/font.c    **** 			 16,  40,  74, 173, 149,  44, 245, 198, 246, 181, 180, 164,
 166:src/font.c    **** 			181,  53, 194,  49,   0,  73, 210, 159, 255,  55, 105, 255,
 167:src/font.c    **** 			127,  70, 219, 182, 157, 109, 251, 207, 255,  43, 105, 219,
 168:src/font.c    **** 			102, 163, 109, 219,  14, 
 169:src/font.c    **** 		},
 170:src/font.c    **** 		{
 171:src/font.c    **** 			250,   8,   9, 224,  65, 114, 105,  96,  46, 106, 251, 170,
ARM GAS  /tmp/ccOl1yZi.s 			page 8


 172:src/font.c    **** 			226, 192, 167, 105,  73,   4,  84,  67, 178,  42, 161,  11,
 173:src/font.c    **** 			209, 166,  73, 187, 149, 152,  77,  21,  85, 125, 149,  36,
 174:src/font.c    **** 			 64, 155,  78, 111, 182, 218, 254, 161, 250,  42,  71,   5,
 175:src/font.c    **** 			120,  77, 106,  49, 171, 181, 133,  90,  72, 222, 145, 216,
 176:src/font.c    **** 			186,   2, 120, 173,  82,  19, 173, 234,  78, 191, 188, 164,
 177:src/font.c    **** 			 85, 174, 126, 239, 222, 255, 127, 146, 109,  51, 169, 219,
 178:src/font.c    **** 			118,  82, 219,  86,  82, 219,  54, 201, 182,  41, 169, 109,
 179:src/font.c    **** 			 27, 181, 109, 251,  11, 
 180:src/font.c    **** 		},
 181:src/font.c    **** 		{
 182:src/font.c    **** 			165,   8, 254,  95,  46,  36,   1, 224, 221, 191,  84,  81,
 183:src/font.c    **** 			 79, 132, 122,  60, 166,  32,  51, 127, 254, 250,  74,  68,
 184:src/font.c    **** 			222, 121, 207, 251, 249, 152, 143, 230, 116, 101, 245,  57,
 185:src/font.c    **** 			128, 239,  91, 236, 246,  90, 135, 185,  45,  85, 222,   7,
 186:src/font.c    **** 			 71, 205, 155, 221, 218,  87, 250,  88, 252, 159, 128, 252,
 187:src/font.c    **** 			 79,   5, 168, 210, 209, 125, 188, 219, 239, 181,  69, 108,
 188:src/font.c    **** 			174,  68, 213,  90, 223, 182, 237, 239, 255,  55,  41, 255,
 189:src/font.c    **** 			191, 251, 255,  95, 242, 255, 223, 182, 109, 123, 187, 182,
 190:src/font.c    **** 			157, 205, 182,  77,  26, 
 191:src/font.c    **** 		},
 192:src/font.c    **** 		{
 193:src/font.c    **** 			 24,  12,   0,   0,   0,   0,   0,   0,   0,  74,  85,   1,
 194:src/font.c    **** 			  0,   0,   0,  64,   0,  16,   2,   0,   0,   0,   4,   0,
 195:src/font.c    **** 			  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,
 196:src/font.c    **** 			 14,   0,   0,   3,   3,   0, 132,   0,   0, 128,   1,   1,
 197:src/font.c    **** 			130,   2,   0,  28,   0, 160,   2,   7,   0,  16,   0, 192,
 198:src/font.c    **** 			131,   2,   0, 128,  16,  64,   4, 128, 128,  14,   6,   0,
 199:src/font.c    **** 			164,   4, 220, 119,  99,   0,   0,  48,   0,   0,   0,   0,
 200:src/font.c    **** 			  0,  40,   0,   0,   0,   0,   0,  24,   0,   0,   0,   0,
 201:src/font.c    **** 			  0,  20,   0, 176,   1, 
 202:src/font.c    **** 		},
 203:src/font.c    **** 	};
 204:src/font.c    **** 	unsigned int n = posns[c&255];
 216              		.loc 1 204 2 view .LVU46
 217              		.loc 1 204 26 is_stmt 0 view .LVU47
 218 0000 C0B2     		uxtb	r0, r0
 219              	.LVL10:
  55:src/font.c    **** 	static const unsigned char bm_large[6][127] = {
 220              		.loc 1 55 102 view .LVU48
 221 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 222              		.cfi_def_cfa_offset 36
 223              		.cfi_offset 4, -36
 224              		.cfi_offset 5, -32
 225              		.cfi_offset 6, -28
 226              		.cfi_offset 7, -24
 227              		.cfi_offset 8, -20
 228              		.cfi_offset 9, -16
 229              		.cfi_offset 10, -12
 230              		.cfi_offset 11, -8
 231              		.cfi_offset 14, -4
 205:src/font.c    **** 	const unsigned int fin = posns[(c&255)+1];
 232              		.loc 1 205 32 view .LVU49
 233 0006 03EB4004 		add	r4, r3, r0, lsl #1
 204:src/font.c    **** 	const unsigned int fin = posns[(c&255)+1];
 234              		.loc 1 204 15 view .LVU50
 235 000a 33F81070 		ldrh	r7, [r3, r0, lsl #1]
 236              	.LVL11:
ARM GAS  /tmp/ccOl1yZi.s 			page 9


 237              		.loc 1 205 2 is_stmt 1 view .LVU51
 238              		.loc 1 205 21 is_stmt 0 view .LVU52
 239 000e B4F802B0 		ldrh	fp, [r4, #2]
 240              	.LVL12:
 206:src/font.c    **** 	unsigned int i, j;
 241              		.loc 1 206 2 is_stmt 1 view .LVU53
 207:src/font.c    **** 
 208:src/font.c    **** 	for(i=0; i<6; i++) d[i] = 0;
 242              		.loc 1 208 2 view .LVU54
 243              		.loc 1 208 11 view .LVU55
 244 0012 4B1E     		subs	r3, r1, #1
 245              	.LVL13:
 246              		.loc 1 208 11 is_stmt 0 view .LVU56
 247 0014 4C1D     		adds	r4, r1, #5
 248              		.loc 1 208 26 view .LVU57
 249 0016 0020     		movs	r0, #0
 250              	.LVL14:
 251              	.L17:
 252              		.loc 1 208 21 is_stmt 1 discriminator 3 view .LVU58
 253              		.loc 1 208 26 is_stmt 0 discriminator 3 view .LVU59
 254 0018 03F8010F 		strb	r0, [r3, #1]!
 255              		.loc 1 208 16 is_stmt 1 discriminator 3 view .LVU60
 256              		.loc 1 208 11 discriminator 3 view .LVU61
 257              		.loc 1 208 2 is_stmt 0 discriminator 3 view .LVU62
 258 001c A342     		cmp	r3, r4
 259 001e FBD1     		bne	.L17
 260              	.LVL15:
 209:src/font.c    **** 	for (i=0; n < fin; i++,n++) {
 261              		.loc 1 209 12 is_stmt 1 view .LVU63
 262              		.loc 1 209 2 is_stmt 0 view .LVU64
 263 0020 5F45     		cmp	r7, fp
 264 0022 2CD2     		bcs	.L16
 265              		.loc 1 209 8 view .LVU65
 266 0024 4FF00009 		mov	r9, #0
 267 0028 4FF0010A 		mov	r10, #1
 268              	.LBB8:
 210:src/font.c    **** 		for (j=0; j<6; j++) {
 211:src/font.c    **** 			const unsigned char z = smallp ? (bm_small[j][n>>3]) : (bm_large[j][n>>3]);
 269              		.loc 1 211 24 view .LVU66
 270 002c 4FF0650C 		mov	ip, #101
 271              	.LVL16:
 272              	.L18:
 273              		.loc 1 211 24 view .LVU67
 274 0030 1448     		ldr	r0, .L34
 275 0032 00EBD70E 		add	lr, r0, r7, lsr #3
 276 0036 1448     		ldr	r0, .L34+4
 212:src/font.c    **** 			if (z & (1 << (n&7)))
 277              		.loc 1 212 20 view .LVU68
 278 0038 07F00704 		and	r4, r7, #7
 213:src/font.c    **** 				d[j] |= 1 << i;
 279              		.loc 1 213 15 view .LVU69
 280 003c 0AFA09F5 		lsl	r5, r10, r9
 281 0040 0AFA04F4 		lsl	r4, r10, r4
 282              		.loc 1 213 10 view .LVU70
 283 0044 6DB2     		sxtb	r5, r5
 284              	.LBE8:
 210:src/font.c    **** 		for (j=0; j<6; j++) {
ARM GAS  /tmp/ccOl1yZi.s 			page 10


 285              		.loc 1 210 9 view .LVU71
 286 0046 0023     		movs	r3, #0
 287              	.LBB9:
 211:src/font.c    **** 			if (z & (1 << (n&7)))
 288              		.loc 1 211 24 view .LVU72
 289 0048 00EBD706 		add	r6, r0, r7, lsr #3
 290 004c 09E0     		b	.L22
 291              	.LVL17:
 292              	.L33:
 211:src/font.c    **** 			if (z & (1 << (n&7)))
 293              		.loc 1 211 24 discriminator 1 view .LVU73
 294 004e 16F80800 		ldrb	r0, [r6, r8]	@ zero_extendqisi2
 295              	.L20:
 296              	.LVL18:
 212:src/font.c    **** 			if (z & (1 << (n&7)))
 297              		.loc 1 212 4 is_stmt 1 discriminator 4 view .LVU74
 298              		.loc 1 213 5 discriminator 4 view .LVU75
 299              	.LBE9:
 210:src/font.c    **** 			const unsigned char z = smallp ? (bm_small[j][n>>3]) : (bm_large[j][n>>3]);
 300              		.loc 1 210 18 discriminator 4 view .LVU76
 301              	.LBB10:
 212:src/font.c    **** 				d[j] |= 1 << i;
 302              		.loc 1 212 7 is_stmt 0 discriminator 4 view .LVU77
 303 0052 2042     		tst	r0, r4
 304 0054 02D0     		beq	.L21
 305              		.loc 1 213 10 view .LVU78
 306 0056 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 307              	.LVL19:
 308              		.loc 1 213 10 view .LVU79
 309 0058 2843     		orrs	r0, r0, r5
 310 005a C854     		strb	r0, [r1, r3]
 311              	.L21:
 312              		.loc 1 213 10 view .LVU80
 313              	.LBE10:
 210:src/font.c    **** 			const unsigned char z = smallp ? (bm_small[j][n>>3]) : (bm_large[j][n>>3]);
 314              		.loc 1 210 19 discriminator 2 view .LVU81
 315 005c 0133     		adds	r3, r3, #1
 316              	.LVL20:
 210:src/font.c    **** 			const unsigned char z = smallp ? (bm_small[j][n>>3]) : (bm_large[j][n>>3]);
 317              		.loc 1 210 13 is_stmt 1 discriminator 2 view .LVU82
 210:src/font.c    **** 			const unsigned char z = smallp ? (bm_small[j][n>>3]) : (bm_large[j][n>>3]);
 318              		.loc 1 210 3 is_stmt 0 discriminator 2 view .LVU83
 319 005e 062B     		cmp	r3, #6
 320 0060 08D0     		beq	.L32
 321              	.LVL21:
 322              	.L22:
 323              	.LBB11:
 211:src/font.c    **** 			if (z & (1 << (n&7)))
 324              		.loc 1 211 4 is_stmt 1 view .LVU84
 211:src/font.c    **** 			if (z & (1 << (n&7)))
 325              		.loc 1 211 24 is_stmt 0 view .LVU85
 326 0062 0CFB03F8 		mul	r8, ip, r3
 327 0066 C3EBC310 		rsb	r0, r3, r3, lsl #7
 328 006a 002A     		cmp	r2, #0
 329 006c EFD1     		bne	.L33
 211:src/font.c    **** 			if (z & (1 << (n&7)))
 330              		.loc 1 211 24 discriminator 2 view .LVU86
ARM GAS  /tmp/ccOl1yZi.s 			page 11


 331 006e 1EF80000 		ldrb	r0, [lr, r0]	@ zero_extendqisi2
 332 0072 EEE7     		b	.L20
 333              	.L32:
 211:src/font.c    **** 			if (z & (1 << (n&7)))
 334              		.loc 1 211 24 discriminator 2 view .LVU87
 335              	.LBE11:
 209:src/font.c    **** 		for (j=0; j<6; j++) {
 336              		.loc 1 209 21 is_stmt 1 discriminator 2 view .LVU88
 209:src/font.c    **** 		for (j=0; j<6; j++) {
 337              		.loc 1 209 26 is_stmt 0 discriminator 2 view .LVU89
 338 0074 0137     		adds	r7, r7, #1
 339              	.LVL22:
 209:src/font.c    **** 		for (j=0; j<6; j++) {
 340              		.loc 1 209 2 discriminator 2 view .LVU90
 341 0076 BB45     		cmp	fp, r7
 209:src/font.c    **** 		for (j=0; j<6; j++) {
 342              		.loc 1 209 22 discriminator 2 view .LVU91
 343 0078 09F10109 		add	r9, r9, #1
 344              	.LVL23:
 209:src/font.c    **** 		for (j=0; j<6; j++) {
 345              		.loc 1 209 12 is_stmt 1 discriminator 2 view .LVU92
 209:src/font.c    **** 		for (j=0; j<6; j++) {
 346              		.loc 1 209 2 is_stmt 0 discriminator 2 view .LVU93
 347 007c D8D1     		bne	.L18
 348              	.LVL24:
 349              	.L16:
 214:src/font.c    **** 		}
 215:src/font.c    **** 	}
 216:src/font.c    **** }
 350              		.loc 1 216 1 view .LVU94
 351 007e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 352              	.LVL25:
 353              	.L35:
 354              		.loc 1 216 1 view .LVU95
 355 0082 00BF     		.align	2
 356              	.L34:
 357 0084 00000000 		.word	.LANCHOR3
 358 0088 00000000 		.word	.LANCHOR2
 359              		.cfi_endproc
 360              	.LFE2:
 362              		.section	.rodata.bm_large.5521,"a"
 363              		.align	2
 364              		.set	.LANCHOR3,. + 0
 367              	bm_large.5521:
 368 0000 7F8EEE00 		.ascii	"\177\216\356\000\006\340\000\000\300,{\020&\001\000"
 368      06E00000 
 368      C02C7B10 
 368      260100
 369 000f 45584080 		.ascii	"EX@\200i\012\000h\332\327\333\233\001\000\230\263\263"
 369      690A0068 
 369      DAD7DB9B 
 369      010098B3 
 369      B3
 370 0020 F7EFF298 		.ascii	"\367\357\362\230\021\243;w\3663\306\030\377\271 \010"
 370      11A33B77 
 370      F633C618 
 370      FFB92008 
ARM GAS  /tmp/ccOl1yZi.s 			page 12


 371 0030 40600831 		.ascii	"@`\0101\006\000\000\000\004\000\000\200\017h\340\311"
 371      06000000 
 371      04000080 
 371      0F68E0C9 
 372 0040 43701E10 		.ascii	"Cp\036\020\340\301\327\357@\000q\300A\241\000@\200\340"
 372      E0C1D7EF 
 372      400071C0 
 372      41A10040 
 372      80E0
 373 0052 810102E0 		.ascii	"\201\001\002\340\001\000\000\000\000\000\000\000\000"
 373      01000000 
 373      00000000 
 373      00
 374 005f 863F8DDF 		.ascii	"\206?\215\337\206?\347\367\007v\352\037\303\237\206"
 374      863FE7F7 
 374      0776EA1F 
 374      C39F86
 375 006e D40FBF12 		.ascii	"\324\017\277\022?\014\177\315\357\017\177\276c\370\223"
 375      3F0C7FCD 
 375      EF0F7FBE 
 375      63F893
 376 007d 380F     		.ascii	"8\017"
 377 007f 00421B08 		.ascii	"\000B\033\010\011\022\204\020B*e\370\331\002\250*X\345"
 377      09128410 
 377      422A65F8 
 377      D902A82A 
 377      58E5
 378 0091 679A8400 		.ascii	"g\232\204\000\230'V\004f>\202`\314L\031\021SX\261g\314"
 378      98275604 
 378      663E8260 
 378      CC4C1911 
 378      5358B167 
 379 00a6 98493246 		.ascii	"\230I2F\2450aA\010@\020\017 \004\000\000\000\004\000"
 379      A5306141 
 379      0840100F 
 379      20040000 
 379      000400
 380 00b9 00804A5C 		.ascii	"\000\200J\\ \211\344\210\005\020\000\\:\241\340@\215"
 380      2089E488 
 380      0510005C 
 380      3AA1E040 
 380      8D
 381 00ca 0081F003 		.ascii	"\000\201\360\003\240T\014A\002\004\200\034\000\000\200"
 381      A0540C41 
 381      0204801C 
 381      000080
 382 00d9 B3000000 		.ascii	"\263\000\000\000\000\000\000\000 \001\000\000\000\000"
 382      00000000 
 382      20010000 
 382      0000
 383 00e7 00000000 		.ascii	"\000\000\000\000\000@\000\000\000\000\200\001\000\000"
 383      00400000 
 383      00008001 
 383      0000
 384 00f5 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000"
 384      00000000 
 384      00
ARM GAS  /tmp/ccOl1yZi.s 			page 13


 385 00fe 4D42DEBE 		.ascii	"MB\336\276\320wH\020\347\356W\027\007\200\2268\210_"
 385      D0774810 
 385      E7EE5717 
 385      07809638 
 385      885F
 386 0110 96919F00 		.ascii	"\226\221\237\000\324\"\325\035Y\016}a\315\013y\027^"
 386      D422D51D 
 386      590E7D61 
 386      CD0B7917 
 386      5E
 387 0121 38516BCC 		.ascii	"8Qk\314\230BRUB(\"\000?s\223\2749\365\316\316\333?c"
 387      98425255 
 387      42282200 
 387      3F7393BC 
 387      39F5CECE 
 388 0138 6C5EB282 		.ascii	"l^\262\202 \324E\210\335+\300bV\262QA\215\200@\247P"
 388      20D44588 
 388      DD2BC062 
 388      56B25141 
 388      8D8040A7 
 389 014d F68A825A 		.ascii	"\366\212\202Z\252)\323\353\347\376geU\301\003\000\314"
 389      AA29D3EB 
 389      E7FE6765 
 389      55C10300 
 389      CC
 390 015e CCCC3DFE 		.ascii	"\314\314=\376\377\377?\235s\356\034\231\231\031\343"
 390      FFFF3F9D 
 390      73EE1C99 
 390      9919E3
 391 016d BBBBBB59 		.ascii	"\273\273\273Y\230\231m\333\231\231\265#333\017"
 391      98996DDB 
 391      9999B523 
 391      3333330F 
 392 017d D24290C8 		.ascii	"\322B\220\310?9\377\327J\250\324F\331\002\301\021\010"
 392      3F39FFD7 
 392      4AA8D446 
 392      D902C111 
 392      08
 393 018e E54896E4 		.ascii	"\345H\226\344\177\264\022>&\245\263\000R\377\014\031"
 393      7FB4123E 
 393      26A5B300 
 393      52FF0C19 
 394 019e 91533851 		.ascii	"\221S8Qs\274zDRUB$\"\200\314\310>O\361T33G$c\225R\022"
 394      73BC7A44 
 394      52554224 
 394      2280CCC8 
 394      3E4FF154 
 395 01ba E1209474 		.ascii	"\341 \224t\374\247\252\026j\002\362_\277\213\353\025"
 395      FCA7AA16 
 395      6A02F25F 
 395      BF8BEB15 
 396 01ca A0AB29C9 		.ascii	"\240\253)\311E\244o(\223\276\222Id%5~\3768233\"\356"
 396      45A46F28 
 396      93BE9249 
 396      6425357E 
 396      FE383233 
 397 01e1 EE246963 		.ascii	"\356$ic\2141G\231\231\251\024effDtwKRff\216433U\011"
ARM GAS  /tmp/ccOl1yZi.s 			page 14


 397      8C314799 
 397      99A91465 
 397      66664474 
 397      774B5266 
 398 01fc 2253E000 		.ascii	"\"S\340\000\300\027H8B\006\314\375/\275\2528\200Ou\222"
 398      C0174838 
 398      4206CCFD 
 398      2FBDAA38 
 398      804F7592 
 399 0210 8A88934A 		.ascii	"\212\210\223J\022\246$\356\377G\310L\031\021SY\021c"
 399      12A624EE 
 399      FF47C84C 
 399      19115359 
 399      1163
 400 0222 8C544992 		.ascii	"\214TI\222lE\"$\200\314\310\021L\261T3\317\203$U\025"
 400      6C452224 
 400      80CCC811 
 400      4CB15433 
 400      CF832455 
 401 0237 890A1C35 		.ascii	"\211\012\0345\242L\217\245E\011b\002\021\357 Q?*\200"
 401      A24C8FA5 
 401      45096202 
 401      11EF2051 
 401      3F2A80
 402 024a ACE928D3 		.ascii	"\254\351(\323e\252\364\313\253rI\2443\256Ve\177\377"
 402      65AAF4CB 
 402      AB7249A4 
 402      33AE5665 
 402      7FFF
 403 025c FF3FC223 		.ascii	"\377?\302#\"$\251c\214\361\370\231\231I\210dff\204\317"
 403      2224A963 
 403      8CF1F899 
 403      99498864 
 403      666684CF 
 404 0270 CC485266 		.ascii	"\314HRff\006-33\211\004"
 404      66062D33 
 404      338904
 405 027b 1D2200FE 		.ascii	"\035\"\000\376\277\340\204\020\002\000\274CQU\324\023"
 405      BFE08410 
 405      0200BC43 
 405      5155D413 
 406 028b 08F5B265 		.ascii	"\010\365\262e\200\204c\276\321\231\230\035\000\220\313"
 406      808463BE 
 406      D199981D 
 406      0090CB
 407 029a B3F7E1F2 		.ascii	"\263\367\341\362\226\037\243\013\233F\214\304H\376<"
 407      961FA30B 
 407      9B468CC4 
 407      48FE3C
 408 02a9 1E3F7793 		.ascii	"\036?w\223\313/_\323\002\343\330\211\352\270\017\010"
 408      CB2F5FD3 
 408      02E3D889 
 408      EAB80F08 
 409 02b9 2AFE7377 		.ascii	"*\376sw\335\307\352]\202\377I\000\331\017\024\200T6"
 409      DDC7EA5D 
 409      82FF4900 
 409      D90F1480 
ARM GAS  /tmp/ccOl1yZi.s 			page 15


 409      5436
 410 02cb C80CA139 		.ascii	"\310\014\24193\006\235\036\306\034iD\335\337\31533\323"
 410      33069D1E 
 410      C61C6944 
 410      DDDFCD33 
 410      33D3
 411 02dd 7DFEFFFF 		.ascii	"}\376\377\377?\235s.\257ffF\310\273\273\273\373\230"
 411      3F9D732E 
 411      AF666646 
 411      C8BBBBBB 
 411      FB98
 412 02ef 99FD7F9A 		.ascii	"\231\375\177\232\231\305\325\335\335g\034"
 412      99C5D5DD 
 412      DD671C
 413              		.section	.rodata.bm_small.5522,"a"
 414              		.align	2
 415              		.set	.LANCHOR2,. + 0
 418              	bm_small.5522:
 419 0000 BFFB2E46 		.ascii	"\277\373.F.$\331\331\203\230\004\240\026\255\362\271"
 419      2E24D9D9 
 419      839804A0 
 419      16ADF2B9 
 420 0010 A60068FF 		.ascii	"\246\000h\377\336\377A\344\246y\277\233\231\230\277"
 420      DEFF41E4 
 420      A679BF9B 
 420      9998BF
 421 001f 9DDF66FB 		.ascii	"\235\337f\373\263\020\002\302H&\000\000\200\000\000"
 421      B31002C2 
 421      48260000 
 421      800000
 422 002e C0071A38 		.ascii	"\300\007\0328\032\301\034\010xp\275\301\241\0320(\012"
 422      1AC11C08 
 422      7870BDC1 
 422      A11A3028 
 422      0A
 423 003f 00817C38 		.ascii	"\000\201|80\340\000\000\000\000\000\000\000\200\371"
 423      30E00000 
 423      00000000 
 423      0080F9
 424 004e 95EFF9FD 		.ascii	"\225\357\371\375\367\347\367\307\374\312\375\374\312"
 424      F7E7F7C7 
 424      FCCAFDFC 
 424      CA
 425 005b C7FCEEF7 		.ascii	"\307\374\356\367\363\373c~\345\036"
 425      F3FB637E 
 425      E51E
 426 0065 80A871E9 		.ascii	"\200\250q\351A\242\353/\373o\013Z\342\354/\254I\004"
 426      41A2EB2F 
 426      FB6F0B5A 
 426      E2EC2FAC 
 426      4904
 427 0077 D8C9266C 		.ascii	"\330\311&l\241\213\331\246I\232\225\275mV\324f\313b"
 427      A18BD9A6 
 427      499A95BD 
 427      6D56D466 
 427      CB62
 428 0089 A1635A0E 		.ascii	"\241cZ\016\264\267\375\376\333\330^\245\027\010\253"
ARM GAS  /tmp/ccOl1yZi.s 			page 16


 428      B4B7FDFE 
 428      DBD85EA5 
 428      1708AB
 429 0098 23CB0B00 		.ascii	"#\313\013\000\327\212\241\242& \320\236\322j\302\253"
 429      D78AA1A2 
 429      2620D09E 
 429      D26AC2AB 
 430 00a8 CA56EED9 		.ascii	"\312V\356\331\277\256U\001\000\000\000\000\020\000\000"
 430      BFAE5501 
 430      00000000 
 430      100000
 431 00b7 00000000 		.ascii	"\000\000\000\000\000\000\000\000\0000\000\000\000\000"
 431      00000000 
 431      00300000 
 431      0000
 432 00c5 00000000 		.ascii	"\000\000\000\000\000"
 432      00
 433 00ca ADE8AD5F 		.ascii	"\255\350\255_\367/\235\275\266\030\000\004G\204r\022"
 433      F72F9DBD 
 433      B6180004 
 433      47847212 
 434 00da F9CF54ED 		.ascii	"\371\317T\355\377\374\033\320\375\245[\237\223\332}"
 434      FFFC1BD0 
 434      FDA55B9F 
 434      93DA7D
 435 00e9 8ED4A6A4 		.ascii	"\216\324\246\244$@\237\367}\256\332\266\231\332\252"
 435      24409FF7 
 435      7DAEDAB6 
 435      99DAAA
 436 00f8 7A5D2088 		.ascii	"z] \210n\341\277\026\260X\321\243\336%\020(J\255\225"
 436      6EE1BF16 
 436      B058D1A3 
 436      DE251028 
 436      4AAD95
 437 010b 2CF5C6F6 		.ascii	",\365\306\366\265\264\244\2655\3021\000I\322\237\377"
 437      B5B4A4B5 
 437      35C23100 
 437      49D29FFF 
 438 011b 3769FF7F 		.ascii	"7i\377\177F\333\266\235m\373\317\377+i\333f\243m\333"
 438      46DBB69D 
 438      6DFBCFFF 
 438      2B69DB66 
 438      A36DDB
 439 012e 0E       		.ascii	"\016"
 440 012f FA0809E0 		.ascii	"\372\010\011\340Ari`.j\373\252\342\300\247iI\004TC\262"
 440      41726960 
 440      2E6AFBAA 
 440      E2C0A769 
 440      49045443 
 441 0144 2AA10BD1 		.ascii	"*\241\013\321\246I\273\225\230M\025U}\225$@\233No\266"
 441      A649BB95 
 441      984D1555 
 441      7D952440 
 441      9B4E6FB6 
 442 0158 DAFEA1FA 		.ascii	"\332\376\241\372*G\005xMj1\253\265\205ZH\336\221\330"
 442      2A470578 
 442      4D6A31AB 
ARM GAS  /tmp/ccOl1yZi.s 			page 17


 442      B5855A48 
 442      DE91D8
 443 016b BA0278AD 		.ascii	"\272\002x\255R\023\255\352N\277\274\244U\256~\357\336"
 443      5213ADEA 
 443      4EBFBCA4 
 443      55AE7EEF 
 443      DE
 444 017c FF7F926D 		.ascii	"\377\177\222m3\251\333vR\333VR\3336\311\266)\251m\033"
 444      33A9DB76 
 444      52DB5652 
 444      DB36C9B6 
 444      29A96D1B 
 445 0190 B56DFB0B 		.ascii	"\265m\373\013"
 446 0194 A508FE5F 		.ascii	"\245\010\376_.$\001\340\335\277TQO\204z<\246 3\177\376"
 446      2E2401E0 
 446      DDBF5451 
 446      4F847A3C 
 446      A620337F 
 447 01a9 FA4A44DE 		.ascii	"\372JD\336y\317\373\371\230\217\346te\3659\200\357["
 447      79CFFBF9 
 447      988FE674 
 447      65F53980 
 447      EF5B
 448 01bb ECF65A87 		.ascii	"\354\366Z\207\271-U\336\007G\315\233\335\332W\372X\374"
 448      B92D55DE 
 448      0747CD9B 
 448      DDDA57FA 
 448      58FC
 449 01cd 9F80FC4F 		.ascii	"\237\200\374O\005\250\322\321}\274\333\357\265El\256"
 449      05A8D2D1 
 449      7DBCDBEF 
 449      B5456CAE 
 450 01dd 44D55ADF 		.ascii	"D\325Z\337\266\355\357\3777)\377\277\373\377_\362\377"
 450      B6EDEFFF 
 450      3729FFBF 
 450      FBFF5FF2 
 450      FF
 451 01ee DFB66D7B 		.ascii	"\337\266m{\273\266\235\315\266M\032"
 451      BBB69DCD 
 451      B64D1A
 452 01f9 180C0000 		.ascii	"\030\014\000\000\000\000\000\000\000JU\001\000\000\000"
 452      00000000 
 452      004A5501 
 452      000000
 453 0208 40001002 		.ascii	"@\000\020\002\000\000\000\004\000\000\000\000\000\000"
 453      00000004 
 453      00000000 
 453      0000
 454 0216 00000000 		.ascii	"\000\000\000\000\000\000\010\016\000\000\003\003\000"
 454      0000080E 
 454      00000303 
 454      00
 455 0223 84000080 		.ascii	"\204\000\000\200\001\001\202\002\000\034\000\240\002"
 455      01018202 
 455      001C00A0 
 455      02
 456 0230 07001000 		.ascii	"\007\000\020\000\300\203\002\000\200\020@\004\200\200"
ARM GAS  /tmp/ccOl1yZi.s 			page 18


 456      C0830200 
 456      80104004 
 456      8080
 457 023e 0E0600A4 		.ascii	"\016\006\000\244\004\334wc\000\0000\000\000\000\000"
 457      04DC7763 
 457      00003000 
 457      000000
 458 024d 00280000 		.ascii	"\000(\000\000\000\000\000\030\000\000\000\000\000\024"
 458      00000018 
 458      00000000 
 458      0014
 459 025b 00B001   		.ascii	"\000\260\001"
 460              		.section	.rodata.divs.5505,"a"
 461              		.align	2
 462              		.set	.LANCHOR1,. + 0
 465              	divs.5505:
 466 0000 010624   		.ascii	"\001\006$"
 467              		.section	.rodata.widths.5504,"a"
 468              		.align	2
 469              		.set	.LANCHOR0,. + 0
 472              	widths.5504:
 473 0000 A28FD2D0 		.ascii	"\242\217\322\320\327\263d\321\202\247\262\307\327Uk"
 473      D7B364D1 
 473      82A7B2C7 
 473      D7556B
 474 000f 7BA0ACAC 		.ascii	"{\240\254\254X\262\261\320\320\246\320\263\255\321\327"
 474      58B2B1D0 
 474      D0A6D0B3 
 474      ADD1D7
 475 001e 82A5AAAC 		.ascii	"\202\245\252\254\254\245\261\254\254\326\253u\203\321"
 475      ACA5B1AC 
 475      ACD6AB75 
 475      83D1
 476 002c 8FD783B2 		.ascii	"\217\327\203\262\327\325\217\311\325\263\254\326\252"
 476      D7D58FC9 
 476      D5B3ACD6 
 476      AA
 477 0039 ACD7D1D7 		.ascii	"\254\327\321\327_\201\201\254\254\254\254\201\317\327"
 477      5F8181AC 
 477      ACACAC81 
 477      CFD7
 478 0047 88ACD0AD 		.ascii	"\210\254\320\255\254\254\254\210\201\254\254\246\254"
 478      ACACAC88 
 478      81ACACA6 
 478      AC
 479 0054 AC708793 		.ascii	"\254p\207\223\201\253\202\201\260\203\215\320s\217R"
 479      81AB8281 
 479      B0838DD0 
 479      738F52
 480 0063 8C325D81 		.ascii	"\2142]\201\2019\200\245\201\2019\207\211\253\201\207"
 480      813980A5 
 480      81813987 
 480      89AB8187 
 481 0073 5D7B7B81 		.ascii	"]{{\201\201W\303\201\201\201\2039\207\215\254\253\203"
 481      8157C381 
 481      81818339 
 481      878DACAB 
ARM GAS  /tmp/ccOl1yZi.s 			page 19


 481      83
 482 0084 CFA5CAB1 		.ascii	"\317\245\312\261]\247\262\207\245|\201\261\210\216\217"
 482      5DA7B287 
 482      A57C81B1 
 482      888E8F
 483 0093 56818181 		.ascii	"V\201\201\201\201\201W\245\201\201\201\201\201\201\201"
 483      818157A5 
 483      81818181 
 483      818181
 484 00a2 81817B81 		.ascii	"\201\201{\201\201\201\201\201\025"
 484      81818181 
 484      15
 485              		.text
 486              	.Letext0:
ARM GAS  /tmp/ccOl1yZi.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 font.c
     /tmp/ccOl1yZi.s:18     .text.charlengths:0000000000000000 $t
     /tmp/ccOl1yZi.s:27     .text.charlengths:0000000000000000 charlengths
     /tmp/ccOl1yZi.s:79     .text.charlengths:0000000000000038 $d
     /tmp/ccOl1yZi.s:86     .text.findlengths:0000000000000000 $t
     /tmp/ccOl1yZi.s:94     .text.findlengths:0000000000000000 findlengths
     /tmp/ccOl1yZi.s:192    .text.findlengths:000000000000006c $d
     /tmp/ccOl1yZi.s:199    .text.unpackchar:0000000000000000 $t
     /tmp/ccOl1yZi.s:207    .text.unpackchar:0000000000000000 unpackchar
     /tmp/ccOl1yZi.s:357    .text.unpackchar:0000000000000084 $d
     /tmp/ccOl1yZi.s:363    .rodata.bm_large.5521:0000000000000000 $d
     /tmp/ccOl1yZi.s:367    .rodata.bm_large.5521:0000000000000000 bm_large.5521
     /tmp/ccOl1yZi.s:414    .rodata.bm_small.5522:0000000000000000 $d
     /tmp/ccOl1yZi.s:418    .rodata.bm_small.5522:0000000000000000 bm_small.5522
     /tmp/ccOl1yZi.s:461    .rodata.divs.5505:0000000000000000 $d
     /tmp/ccOl1yZi.s:465    .rodata.divs.5505:0000000000000000 divs.5505
     /tmp/ccOl1yZi.s:468    .rodata.widths.5504:0000000000000000 $d
     /tmp/ccOl1yZi.s:472    .rodata.widths.5504:0000000000000000 widths.5504

NO UNDEFINED SYMBOLS

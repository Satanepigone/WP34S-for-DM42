ARM GAS  /tmp/ccJb2xJE.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"alpha.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.add_char,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	add_char:
  27              	.LVL0:
  28              	.LFB1:
  29              		.file 1 "src/alpha.c"
   1:src/alpha.c   **** /* This file is part of 34S.
   2:src/alpha.c   ****  * 
   3:src/alpha.c   ****  * 34S is free software: you can redistribute it and/or modify
   4:src/alpha.c   ****  * it under the terms of the GNU General Public License as published by
   5:src/alpha.c   ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/alpha.c   ****  * (at your option) any later version.
   7:src/alpha.c   ****  * 
   8:src/alpha.c   ****  * 34S is distributed in the hope that it will be useful,
   9:src/alpha.c   ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/alpha.c   ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/alpha.c   ****  * GNU General Public License for more details.
  12:src/alpha.c   ****  * 
  13:src/alpha.c   ****  * You should have received a copy of the GNU General Public License
  14:src/alpha.c   ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/alpha.c   ****  */
  16:src/alpha.c   **** 
  17:src/alpha.c   **** #include "alpha.h"
  18:src/alpha.c   **** #include "xeq.h"
  19:src/alpha.c   **** #include "decn.h"
  20:src/alpha.c   **** #include "display.h"
  21:src/alpha.c   **** #include "int.h"
  22:src/alpha.c   **** #include "consts.h"
  23:src/alpha.c   **** 
  24:src/alpha.c   **** 
  25:src/alpha.c   **** /* Append a single character to the alpha register
  26:src/alpha.c   ****  */
  27:src/alpha.c   **** static char *internal_add_char(char *a, char c) {
  28:src/alpha.c   **** 	if (a == Alpha+NUMALPHA)
  29:src/alpha.c   **** 		*scopy(Alpha, Alpha+1) = c;
ARM GAS  /tmp/ccJb2xJE.s 			page 2


  30:src/alpha.c   **** 	else {
  31:src/alpha.c   **** 		*a++ = c;
  32:src/alpha.c   **** 		*a = '\0';
  33:src/alpha.c   **** 	}
  34:src/alpha.c   **** 	return a;
  35:src/alpha.c   **** }
  36:src/alpha.c   **** 
  37:src/alpha.c   **** static void add_char(char c) {
  30              		.loc 1 37 30 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  38:src/alpha.c   **** 	internal_add_char(find_char(Alpha, '\0'), c);
  34              		.loc 1 38 2 view .LVU1
  37:src/alpha.c   **** 	internal_add_char(find_char(Alpha, '\0'), c);
  35              		.loc 1 37 30 is_stmt 0 view .LVU2
  36 0000 10B5     		push	{r4, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 38 2 view .LVU3
  41 0002 0021     		movs	r1, #0
  37:src/alpha.c   **** 	internal_add_char(find_char(Alpha, '\0'), c);
  42              		.loc 1 37 30 view .LVU4
  43 0004 0446     		mov	r4, r0
  44              		.loc 1 38 2 view .LVU5
  45 0006 0848     		ldr	r0, .L7
  46              	.LVL1:
  47              		.loc 1 38 2 view .LVU6
  48 0008 FFF7FEFF 		bl	find_char
  49              	.LVL2:
  50              	.LBB26:
  51              	.LBB27:
  28:src/alpha.c   **** 		*scopy(Alpha, Alpha+1) = c;
  52              		.loc 1 28 5 view .LVU7
  53 000c 074B     		ldr	r3, .L7+4
  54              	.LVL3:
  28:src/alpha.c   **** 		*scopy(Alpha, Alpha+1) = c;
  55              		.loc 1 28 5 view .LVU8
  56              	.LBE27:
  57              	.LBI26:
  27:src/alpha.c   **** 	if (a == Alpha+NUMALPHA)
  58              		.loc 1 27 14 is_stmt 1 view .LVU9
  59              	.LBB30:
  28:src/alpha.c   **** 		*scopy(Alpha, Alpha+1) = c;
  60              		.loc 1 28 2 view .LVU10
  28:src/alpha.c   **** 		*scopy(Alpha, Alpha+1) = c;
  61              		.loc 1 28 5 is_stmt 0 view .LVU11
  62 000e 9842     		cmp	r0, r3
  63 0010 03D0     		beq	.L6
  31:src/alpha.c   **** 		*a = '\0';
  64              		.loc 1 31 3 is_stmt 1 view .LVU12
  65              	.LVL4:
  32:src/alpha.c   **** 	}
  66              		.loc 1 32 6 is_stmt 0 view .LVU13
  67 0012 0023     		movs	r3, #0
  31:src/alpha.c   **** 		*a = '\0';
ARM GAS  /tmp/ccJb2xJE.s 			page 3


  68              		.loc 1 31 8 view .LVU14
  69 0014 0470     		strb	r4, [r0]
  32:src/alpha.c   **** 	}
  70              		.loc 1 32 3 is_stmt 1 view .LVU15
  32:src/alpha.c   **** 	}
  71              		.loc 1 32 6 is_stmt 0 view .LVU16
  72 0016 4370     		strb	r3, [r0, #1]
  73              	.LVL5:
  34:src/alpha.c   **** }
  74              		.loc 1 34 2 is_stmt 1 view .LVU17
  34:src/alpha.c   **** }
  75              		.loc 1 34 2 is_stmt 0 view .LVU18
  76              	.LBE30:
  77              	.LBE26:
  39:src/alpha.c   **** }
  78              		.loc 1 39 1 view .LVU19
  79 0018 10BD     		pop	{r4, pc}
  80              	.LVL6:
  81              	.L6:
  82              	.LBB32:
  83              	.LBB31:
  84              	.LBB28:
  85              	.LBI28:
  27:src/alpha.c   **** 	if (a == Alpha+NUMALPHA)
  86              		.loc 1 27 14 is_stmt 1 view .LVU20
  87              	.LBB29:
  29:src/alpha.c   **** 	else {
  88              		.loc 1 29 3 view .LVU21
  29:src/alpha.c   **** 	else {
  89              		.loc 1 29 4 is_stmt 0 view .LVU22
  90 001a A0F11D01 		sub	r1, r0, #29
  91 001e 1E38     		subs	r0, r0, #30
  92              	.LVL7:
  29:src/alpha.c   **** 	else {
  93              		.loc 1 29 4 view .LVU23
  94 0020 FFF7FEFF 		bl	scopy
  95              	.LVL8:
  29:src/alpha.c   **** 	else {
  96              		.loc 1 29 26 view .LVU24
  97 0024 0470     		strb	r4, [r0]
  34:src/alpha.c   **** }
  98              		.loc 1 34 2 is_stmt 1 view .LVU25
  99              	.LBE29:
 100              	.LBE28:
 101              	.LBE31:
 102              	.LBE32:
 103              		.loc 1 39 1 is_stmt 0 view .LVU26
 104 0026 10BD     		pop	{r4, pc}
 105              	.LVL9:
 106              	.L8:
 107              		.loc 1 39 1 view .LVU27
 108              		.align	2
 109              	.L7:
 110 0028 B0070000 		.word	PersistentRam+1968
 111 002c CE070000 		.word	PersistentRam+1998
 112              		.cfi_endproc
 113              	.LFE1:
ARM GAS  /tmp/ccJb2xJE.s 			page 4


 115              		.section	.text.add_string,"ax",%progbits
 116              		.align	1
 117              		.p2align 2,,3
 118              		.global	add_string
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	add_string:
 125              	.LVL10:
 126              	.LFB2:
  40:src/alpha.c   **** 
  41:src/alpha.c   **** 
  42:src/alpha.c   **** /* Append a string to the Alpha register.
  43:src/alpha.c   ****  */
  44:src/alpha.c   **** void add_string(const char *s) {
 127              		.loc 1 44 32 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
  45:src/alpha.c   **** 	char *a = find_char(Alpha, '\0');
 131              		.loc 1 45 2 view .LVU29
  44:src/alpha.c   **** 	char *a = find_char(Alpha, '\0');
 132              		.loc 1 44 32 is_stmt 0 view .LVU30
 133 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 134              		.cfi_def_cfa_offset 24
 135              		.cfi_offset 4, -24
 136              		.cfi_offset 5, -20
 137              		.cfi_offset 6, -16
 138              		.cfi_offset 7, -12
 139              		.cfi_offset 8, -8
 140              		.cfi_offset 14, -4
  44:src/alpha.c   **** 	char *a = find_char(Alpha, '\0');
 141              		.loc 1 44 32 view .LVU31
 142 0004 0646     		mov	r6, r0
 143              		.loc 1 45 12 view .LVU32
 144 0006 0021     		movs	r1, #0
 145 0008 1048     		ldr	r0, .L19
 146              	.LVL11:
 147              		.loc 1 45 12 view .LVU33
 148 000a FFF7FEFF 		bl	find_char
 149              	.LVL12:
  46:src/alpha.c   **** 
  47:src/alpha.c   **** 	while (*s != '\0')
 150              		.loc 1 47 9 view .LVU34
 151 000e 3578     		ldrb	r5, [r6]	@ zero_extendqisi2
 152              	.LVL13:
 153              		.loc 1 47 2 is_stmt 1 view .LVU35
 154              		.loc 1 47 8 view .LVU36
 155 0010 D5B1     		cbz	r5, .L9
 156 0012 0F4F     		ldr	r7, .L19+4
 157 0014 0446     		mov	r4, r0
 158              	.LBB37:
 159              	.LBB38:
  32:src/alpha.c   **** 	}
 160              		.loc 1 32 6 is_stmt 0 view .LVU37
 161 0016 4FF00008 		mov	r8, #0
ARM GAS  /tmp/ccJb2xJE.s 			page 5


 162 001a 07E0     		b	.L13
 163              	.LVL14:
 164              	.L11:
  31:src/alpha.c   **** 		*a = '\0';
 165              		.loc 1 31 8 view .LVU38
 166 001c 03F8015B 		strb	r5, [r3], #1
 167              	.LVL15:
  32:src/alpha.c   **** 	}
 168              		.loc 1 32 3 is_stmt 1 view .LVU39
  32:src/alpha.c   **** 	}
 169              		.loc 1 32 6 is_stmt 0 view .LVU40
 170 0020 84F80180 		strb	r8, [r4, #1]
 171              	.LBE38:
 172              	.LBE37:
 173              		.loc 1 47 9 view .LVU41
 174 0024 16F8015F 		ldrb	r5, [r6, #1]!	@ zero_extendqisi2
 175              	.LVL16:
 176              	.LBB43:
 177              	.LBB41:
  31:src/alpha.c   **** 		*a = '\0';
 178              		.loc 1 31 5 view .LVU42
 179 0028 1C46     		mov	r4, r3
 180              	.LVL17:
  31:src/alpha.c   **** 		*a = '\0';
 181              		.loc 1 31 5 view .LVU43
 182              	.LBE41:
 183              	.LBE43:
 184              		.loc 1 47 8 is_stmt 1 view .LVU44
 185 002a 6DB1     		cbz	r5, .L9
 186              	.LVL18:
 187              	.L13:
  48:src/alpha.c   **** 		a = internal_add_char(a, *s++);
 188              		.loc 1 48 3 view .LVU45
 189              	.LBB44:
 190              	.LBI37:
  27:src/alpha.c   **** 	if (a == Alpha+NUMALPHA)
 191              		.loc 1 27 14 view .LVU46
 192              	.LBB42:
  28:src/alpha.c   **** 		*scopy(Alpha, Alpha+1) = c;
 193              		.loc 1 28 2 view .LVU47
  31:src/alpha.c   **** 		*a = '\0';
 194              		.loc 1 31 3 view .LVU48
  28:src/alpha.c   **** 		*scopy(Alpha, Alpha+1) = c;
 195              		.loc 1 28 5 is_stmt 0 view .LVU49
 196 002c BC42     		cmp	r4, r7
  31:src/alpha.c   **** 		*a = '\0';
 197              		.loc 1 31 5 view .LVU50
 198 002e 2346     		mov	r3, r4
 199              	.LVL19:
  28:src/alpha.c   **** 		*scopy(Alpha, Alpha+1) = c;
 200              		.loc 1 28 5 view .LVU51
 201 0030 F4D1     		bne	.L11
 202              	.LVL20:
 203              	.LBB39:
 204              	.LBI39:
  27:src/alpha.c   **** 	if (a == Alpha+NUMALPHA)
 205              		.loc 1 27 14 is_stmt 1 view .LVU52
ARM GAS  /tmp/ccJb2xJE.s 			page 6


 206              	.LBB40:
  29:src/alpha.c   **** 	else {
 207              		.loc 1 29 3 view .LVU53
  29:src/alpha.c   **** 	else {
 208              		.loc 1 29 4 is_stmt 0 view .LVU54
 209 0032 A4F11D01 		sub	r1, r4, #29
 210 0036 A4F11E00 		sub	r0, r4, #30
 211 003a FFF7FEFF 		bl	scopy
 212              	.LVL21:
  29:src/alpha.c   **** 	else {
 213              		.loc 1 29 26 view .LVU55
 214 003e 0570     		strb	r5, [r0]
  34:src/alpha.c   **** }
 215              		.loc 1 34 2 is_stmt 1 view .LVU56
 216              	.LVL22:
  34:src/alpha.c   **** }
 217              		.loc 1 34 2 is_stmt 0 view .LVU57
 218              	.LBE40:
 219              	.LBE39:
 220              	.LBE42:
 221              	.LBE44:
  47:src/alpha.c   **** 		a = internal_add_char(a, *s++);
 222              		.loc 1 47 8 is_stmt 1 view .LVU58
  47:src/alpha.c   **** 		a = internal_add_char(a, *s++);
 223              		.loc 1 47 9 is_stmt 0 view .LVU59
 224 0040 16F8015F 		ldrb	r5, [r6, #1]!	@ zero_extendqisi2
 225              	.LVL23:
  47:src/alpha.c   **** 		a = internal_add_char(a, *s++);
 226              		.loc 1 47 8 view .LVU60
 227 0044 002D     		cmp	r5, #0
 228 0046 F1D1     		bne	.L13
 229              	.LVL24:
 230              	.L9:
  49:src/alpha.c   **** }
 231              		.loc 1 49 1 view .LVU61
 232 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 233              	.L20:
 234              		.align	2
 235              	.L19:
 236 004c B0070000 		.word	PersistentRam+1968
 237 0050 CE070000 		.word	PersistentRam+1998
 238              		.cfi_endproc
 239              	.LFE2:
 241              		.section	.text.clralpha,"ax",%progbits
 242              		.align	1
 243              		.p2align 2,,3
 244              		.global	clralpha
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv4-sp-d16
 250              	clralpha:
 251              	.LVL25:
 252              	.LFB3:
  50:src/alpha.c   **** 
  51:src/alpha.c   **** 
  52:src/alpha.c   **** /* Clear the Alpha register
ARM GAS  /tmp/ccJb2xJE.s 			page 7


  53:src/alpha.c   ****  */
  54:src/alpha.c   **** void clralpha(enum nilop op) {
 253              		.loc 1 54 30 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
  55:src/alpha.c   **** 	DispMsg = NULL;
 258              		.loc 1 55 2 view .LVU63
 259              		.loc 1 55 10 is_stmt 0 view .LVU64
 260 0000 034B     		ldr	r3, .L22
  56:src/alpha.c   **** 	xset(Alpha, '\0', NUMALPHA);
 261              		.loc 1 56 2 view .LVU65
 262 0002 0448     		ldr	r0, .L22+4
 263              	.LVL26:
  55:src/alpha.c   **** 	DispMsg = NULL;
 264              		.loc 1 55 10 view .LVU66
 265 0004 0021     		movs	r1, #0
 266              		.loc 1 56 2 view .LVU67
 267 0006 1E22     		movs	r2, #30
  55:src/alpha.c   **** 	DispMsg = NULL;
 268              		.loc 1 55 10 view .LVU68
 269 0008 1960     		str	r1, [r3]
 270              		.loc 1 56 2 is_stmt 1 view .LVU69
 271 000a FFF7FEBF 		b	xset
 272              	.LVL27:
 273              	.L23:
 274 000e 00BF     		.align	2
 275              	.L22:
 276 0010 00000000 		.word	DispMsg
 277 0014 B0070000 		.word	PersistentRam+1968
 278              		.cfi_endproc
 279              	.LFE3:
 281              		.section	.text.alpha_view_common,"ax",%progbits
 282              		.align	1
 283              		.p2align 2,,3
 284              		.global	alpha_view_common
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	alpha_view_common:
 291              	.LVL28:
 292              	.LFB4:
  57:src/alpha.c   **** }
  58:src/alpha.c   **** 
  59:src/alpha.c   **** 
  60:src/alpha.c   **** /* Display the Alpha register
  61:src/alpha.c   ****  */
  62:src/alpha.c   **** void alpha_view_common(int reg) {
 293              		.loc 1 62 33 view -0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
  63:src/alpha.c   **** 	DispMsg = Alpha;
 298              		.loc 1 63 2 view .LVU71
ARM GAS  /tmp/ccJb2xJE.s 			page 8


  62:src/alpha.c   **** 	DispMsg = Alpha;
 299              		.loc 1 62 33 is_stmt 0 view .LVU72
 300 0000 30B4     		push	{r4, r5}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 5, -4
  64:src/alpha.c   **** 	ShowRegister = reg;
  65:src/alpha.c   **** 	State2.disp_small = 0;
 304              		.loc 1 65 20 view .LVU73
 305 0002 064B     		ldr	r3, .L26
  63:src/alpha.c   **** 	ShowRegister = reg;
 306              		.loc 1 63 10 view .LVU74
 307 0004 064C     		ldr	r4, .L26+4
 308              		.loc 1 65 20 view .LVU75
 309 0006 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
  64:src/alpha.c   **** 	ShowRegister = reg;
 310              		.loc 1 64 15 view .LVU76
 311 0008 0649     		ldr	r1, .L26+8
  63:src/alpha.c   **** 	ShowRegister = reg;
 312              		.loc 1 63 10 view .LVU77
 313 000a 074D     		ldr	r5, .L26+12
 314 000c 2560     		str	r5, [r4]
  64:src/alpha.c   **** 	ShowRegister = reg;
 315              		.loc 1 64 2 is_stmt 1 view .LVU78
 316              		.loc 1 65 20 is_stmt 0 view .LVU79
 317 000e 6FF3C712 		bfc	r2, #7, #1
  64:src/alpha.c   **** 	ShowRegister = reg;
 318              		.loc 1 64 15 view .LVU80
 319 0012 0860     		str	r0, [r1]
 320              		.loc 1 65 2 is_stmt 1 view .LVU81
 321              		.loc 1 65 20 is_stmt 0 view .LVU82
 322 0014 9A75     		strb	r2, [r3, #22]
  66:src/alpha.c   **** 	frozen_display();
 323              		.loc 1 66 2 is_stmt 1 view .LVU83
  67:src/alpha.c   **** }
 324              		.loc 1 67 1 is_stmt 0 view .LVU84
 325 0016 30BC     		pop	{r4, r5}
 326              		.cfi_restore 5
 327              		.cfi_restore 4
 328              		.cfi_def_cfa_offset 0
  66:src/alpha.c   **** 	frozen_display();
 329              		.loc 1 66 2 view .LVU85
 330 0018 FFF7FEBF 		b	frozen_display
 331              	.LVL29:
 332              	.L27:
  66:src/alpha.c   **** 	frozen_display();
 333              		.loc 1 66 2 view .LVU86
 334              		.align	2
 335              	.L26:
 336 001c 00000000 		.word	StateWhileOn
 337 0020 00000000 		.word	DispMsg
 338 0024 00000000 		.word	ShowRegister
 339 0028 B0070000 		.word	PersistentRam+1968
 340              		.cfi_endproc
 341              	.LFE4:
 343              		.section	.text.alpha_view,"ax",%progbits
 344              		.align	1
ARM GAS  /tmp/ccJb2xJE.s 			page 9


 345              		.p2align 2,,3
 346              		.global	alpha_view
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu fpv4-sp-d16
 352              	alpha_view:
 353              	.LVL30:
 354              	.LFB5:
  68:src/alpha.c   **** 
  69:src/alpha.c   **** void alpha_view(enum nilop op) {
 355              		.loc 1 69 32 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		@ link register save eliminated.
  70:src/alpha.c   **** 	alpha_view_common((unsigned int)-1);
 360              		.loc 1 70 2 view .LVU88
 361              	.LBB45:
 362              	.LBI45:
  62:src/alpha.c   **** 	DispMsg = Alpha;
 363              		.loc 1 62 6 view .LVU89
 364              	.LBB46:
  63:src/alpha.c   **** 	ShowRegister = reg;
 365              		.loc 1 63 2 view .LVU90
 366              	.LBE46:
 367              	.LBE45:
  69:src/alpha.c   **** 	alpha_view_common((unsigned int)-1);
 368              		.loc 1 69 32 is_stmt 0 view .LVU91
 369 0000 10B4     		push	{r4}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 4, -4
 372              	.LBB49:
 373              	.LBB47:
  65:src/alpha.c   **** 	frozen_display();
 374              		.loc 1 65 20 view .LVU92
 375 0002 084B     		ldr	r3, .L30
  63:src/alpha.c   **** 	ShowRegister = reg;
 376              		.loc 1 63 10 view .LVU93
 377 0004 0848     		ldr	r0, .L30+4
 378              	.LVL31:
  65:src/alpha.c   **** 	frozen_display();
 379              		.loc 1 65 20 view .LVU94
 380 0006 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
  63:src/alpha.c   **** 	ShowRegister = reg;
 381              		.loc 1 63 10 view .LVU95
 382 0008 084C     		ldr	r4, .L30+8
 383 000a 0460     		str	r4, [r0]
  64:src/alpha.c   **** 	State2.disp_small = 0;
 384              		.loc 1 64 2 is_stmt 1 view .LVU96
  65:src/alpha.c   **** 	frozen_display();
 385              		.loc 1 65 20 is_stmt 0 view .LVU97
 386 000c 6FF3C712 		bfc	r2, #7, #1
 387 0010 9A75     		strb	r2, [r3, #22]
  64:src/alpha.c   **** 	State2.disp_small = 0;
 388              		.loc 1 64 15 view .LVU98
 389 0012 0749     		ldr	r1, .L30+12
ARM GAS  /tmp/ccJb2xJE.s 			page 10


 390              	.LBE47:
 391              	.LBE49:
  71:src/alpha.c   **** }
 392              		.loc 1 71 1 view .LVU99
 393 0014 5DF8044B 		ldr	r4, [sp], #4
 394              		.cfi_restore 4
 395              		.cfi_def_cfa_offset 0
 396              	.LBB50:
 397              	.LBB48:
  64:src/alpha.c   **** 	State2.disp_small = 0;
 398              		.loc 1 64 15 view .LVU100
 399 0018 4FF0FF30 		mov	r0, #-1
 400 001c 0860     		str	r0, [r1]
  65:src/alpha.c   **** 	frozen_display();
 401              		.loc 1 65 2 is_stmt 1 view .LVU101
  66:src/alpha.c   **** }
 402              		.loc 1 66 2 view .LVU102
 403 001e FFF7FEBF 		b	frozen_display
 404              	.LVL32:
 405              	.L31:
 406 0022 00BF     		.align	2
 407              	.L30:
 408 0024 00000000 		.word	StateWhileOn
 409 0028 00000000 		.word	DispMsg
 410 002c B0070000 		.word	PersistentRam+1968
 411 0030 00000000 		.word	ShowRegister
 412              	.LBE48:
 413              	.LBE50:
 414              		.cfi_endproc
 415              	.LFE5:
 417              		.section	.text.alpha_view_reg,"ax",%progbits
 418              		.align	1
 419              		.p2align 2,,3
 420              		.global	alpha_view_reg
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	alpha_view_reg:
 427              	.LVL33:
 428              	.LFB6:
  72:src/alpha.c   **** 
  73:src/alpha.c   **** /* View a specified register
  74:src/alpha.c   ****  */
  75:src/alpha.c   **** void alpha_view_reg(unsigned int arg, enum rarg op) {
 429              		.loc 1 75 53 view -0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              		@ link register save eliminated.
  76:src/alpha.c   **** 	alpha_view_common(arg);
 434              		.loc 1 76 2 view .LVU104
  75:src/alpha.c   **** 	alpha_view_common(arg);
 435              		.loc 1 75 53 is_stmt 0 view .LVU105
 436 0000 30B4     		push	{r4, r5}
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_offset 4, -8
ARM GAS  /tmp/ccJb2xJE.s 			page 11


 439              		.cfi_offset 5, -4
 440              	.LBB51:
 441              	.LBB52:
  65:src/alpha.c   **** 	frozen_display();
 442              		.loc 1 65 20 view .LVU106
 443 0002 064B     		ldr	r3, .L34
  63:src/alpha.c   **** 	ShowRegister = reg;
 444              		.loc 1 63 10 view .LVU107
 445 0004 064C     		ldr	r4, .L34+4
  65:src/alpha.c   **** 	frozen_display();
 446              		.loc 1 65 20 view .LVU108
 447 0006 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
  64:src/alpha.c   **** 	State2.disp_small = 0;
 448              		.loc 1 64 15 view .LVU109
 449 0008 0649     		ldr	r1, .L34+8
 450              	.LVL34:
  63:src/alpha.c   **** 	ShowRegister = reg;
 451              		.loc 1 63 10 view .LVU110
 452 000a 074D     		ldr	r5, .L34+12
 453 000c 2560     		str	r5, [r4]
 454              	.LVL35:
  63:src/alpha.c   **** 	ShowRegister = reg;
 455              		.loc 1 63 10 view .LVU111
 456              	.LBE52:
 457              	.LBI51:
  62:src/alpha.c   **** 	DispMsg = Alpha;
 458              		.loc 1 62 6 is_stmt 1 view .LVU112
 459              	.LBB53:
  63:src/alpha.c   **** 	ShowRegister = reg;
 460              		.loc 1 63 2 view .LVU113
  64:src/alpha.c   **** 	State2.disp_small = 0;
 461              		.loc 1 64 2 view .LVU114
  65:src/alpha.c   **** 	frozen_display();
 462              		.loc 1 65 20 is_stmt 0 view .LVU115
 463 000e 6FF3C712 		bfc	r2, #7, #1
  64:src/alpha.c   **** 	State2.disp_small = 0;
 464              		.loc 1 64 15 view .LVU116
 465 0012 0860     		str	r0, [r1]
  65:src/alpha.c   **** 	frozen_display();
 466              		.loc 1 65 2 is_stmt 1 view .LVU117
  65:src/alpha.c   **** 	frozen_display();
 467              		.loc 1 65 20 is_stmt 0 view .LVU118
 468 0014 9A75     		strb	r2, [r3, #22]
  66:src/alpha.c   **** }
 469              		.loc 1 66 2 is_stmt 1 view .LVU119
 470              	.LBE53:
 471              	.LBE51:
  77:src/alpha.c   **** }
 472              		.loc 1 77 1 is_stmt 0 view .LVU120
 473 0016 30BC     		pop	{r4, r5}
 474              		.cfi_restore 5
 475              		.cfi_restore 4
 476              		.cfi_def_cfa_offset 0
 477              	.LBB55:
 478              	.LBB54:
  66:src/alpha.c   **** }
 479              		.loc 1 66 2 view .LVU121
ARM GAS  /tmp/ccJb2xJE.s 			page 12


 480 0018 FFF7FEBF 		b	frozen_display
 481              	.LVL36:
 482              	.L35:
  66:src/alpha.c   **** }
 483              		.loc 1 66 2 view .LVU122
 484              		.align	2
 485              	.L34:
 486 001c 00000000 		.word	StateWhileOn
 487 0020 00000000 		.word	DispMsg
 488 0024 00000000 		.word	ShowRegister
 489 0028 B0070000 		.word	PersistentRam+1968
 490              	.LBE54:
 491              	.LBE55:
 492              		.cfi_endproc
 493              	.LFE6:
 495              		.section	.text.cmdalpha,"ax",%progbits
 496              		.align	1
 497              		.p2align 2,,3
 498              		.global	cmdalpha
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv4-sp-d16
 504              	cmdalpha:
 505              	.LVL37:
 506              	.LFB7:
  78:src/alpha.c   **** 
  79:src/alpha.c   **** 
  80:src/alpha.c   **** /* Append the character from the given register or passed arg to Alpha
  81:src/alpha.c   ****  */
  82:src/alpha.c   **** void cmdalpha(unsigned int arg, enum rarg op) {
 507              		.loc 1 82 47 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
  83:src/alpha.c   **** 	add_char(arg & 0xff);
 511              		.loc 1 83 2 view .LVU124
  82:src/alpha.c   **** 	add_char(arg & 0xff);
 512              		.loc 1 82 47 is_stmt 0 view .LVU125
 513 0000 08B5     		push	{r3, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 3, -8
 516              		.cfi_offset 14, -4
 517              		.loc 1 83 2 view .LVU126
 518 0002 C0B2     		uxtb	r0, r0
 519              	.LVL38:
 520              		.loc 1 83 2 view .LVU127
 521 0004 FFF7FEFF 		bl	add_char
 522              	.LVL39:
  84:src/alpha.c   **** 	set_entry();
 523              		.loc 1 84 2 is_stmt 1 view .LVU128
  85:src/alpha.c   **** }
 524              		.loc 1 85 1 is_stmt 0 view .LVU129
 525 0008 BDE80840 		pop	{r3, lr}
 526              		.cfi_restore 14
 527              		.cfi_restore 3
 528              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccJb2xJE.s 			page 13


  84:src/alpha.c   **** 	set_entry();
 529              		.loc 1 84 2 view .LVU130
 530 000c FFF7FEBF 		b	set_entry
 531              	.LVL40:
 532              		.cfi_endproc
 533              	.LFE7:
 535              		.section	.text.multialpha,"ax",%progbits
 536              		.align	1
 537              		.p2align 2,,3
 538              		.global	multialpha
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu fpv4-sp-d16
 544              	multialpha:
 545              	.LVL41:
 546              	.LFB8:
  86:src/alpha.c   **** 
  87:src/alpha.c   **** 
  88:src/alpha.c   **** /* Multiple append to Alpha */
  89:src/alpha.c   **** void multialpha(opcode op, enum multiops mopr) {
 547              		.loc 1 89 48 is_stmt 1 view -0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 0, uses_anonymous_args = 0
  90:src/alpha.c   **** 	char buf[4];
 551              		.loc 1 90 2 view .LVU132
  91:src/alpha.c   **** 
  92:src/alpha.c   **** 	buf[0] = op & 0xff;
 552              		.loc 1 92 2 view .LVU133
  89:src/alpha.c   **** 	char buf[4];
 553              		.loc 1 89 48 is_stmt 0 view .LVU134
 554 0000 10B5     		push	{r4, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 4, -8
 557              		.cfi_offset 14, -4
 558 0002 82B0     		sub	sp, sp, #8
 559              		.cfi_def_cfa_offset 16
  89:src/alpha.c   **** 	char buf[4];
 560              		.loc 1 89 48 view .LVU135
 561 0004 0346     		mov	r3, r0
  93:src/alpha.c   **** 	buf[1] = (op >> 16) & 0xff;
  94:src/alpha.c   **** 	buf[2] = (op >> 24) & 0xff;
 562              		.loc 1 94 22 view .LVU136
 563 0006 010E     		lsrs	r1, r0, #24
 564              	.LVL42:
  93:src/alpha.c   **** 	buf[1] = (op >> 16) & 0xff;
 565              		.loc 1 93 15 view .LVU137
 566 0008 040C     		lsrs	r4, r0, #16
  95:src/alpha.c   **** 	buf[3] = '\0';
 567              		.loc 1 95 9 view .LVU138
 568 000a 0022     		movs	r2, #0
  96:src/alpha.c   **** 	add_string(buf);
 569              		.loc 1 96 2 view .LVU139
 570 000c 01A8     		add	r0, sp, #4
 571              	.LVL43:
  92:src/alpha.c   **** 	buf[1] = (op >> 16) & 0xff;
ARM GAS  /tmp/ccJb2xJE.s 			page 14


 572              		.loc 1 92 9 view .LVU140
 573 000e 8DF80430 		strb	r3, [sp, #4]
  93:src/alpha.c   **** 	buf[2] = (op >> 24) & 0xff;
 574              		.loc 1 93 2 is_stmt 1 view .LVU141
  93:src/alpha.c   **** 	buf[2] = (op >> 24) & 0xff;
 575              		.loc 1 93 9 is_stmt 0 view .LVU142
 576 0012 8DF80540 		strb	r4, [sp, #5]
  94:src/alpha.c   **** 	buf[3] = '\0';
 577              		.loc 1 94 2 is_stmt 1 view .LVU143
  94:src/alpha.c   **** 	buf[3] = '\0';
 578              		.loc 1 94 9 is_stmt 0 view .LVU144
 579 0016 8DF80610 		strb	r1, [sp, #6]
  95:src/alpha.c   **** 	add_string(buf);
 580              		.loc 1 95 2 is_stmt 1 view .LVU145
  95:src/alpha.c   **** 	add_string(buf);
 581              		.loc 1 95 9 is_stmt 0 view .LVU146
 582 001a 8DF80720 		strb	r2, [sp, #7]
 583              		.loc 1 96 2 is_stmt 1 view .LVU147
 584 001e FFF7FEFF 		bl	add_string
 585              	.LVL44:
  97:src/alpha.c   **** }
 586              		.loc 1 97 1 is_stmt 0 view .LVU148
 587 0022 02B0     		add	sp, sp, #8
 588              		.cfi_def_cfa_offset 8
 589              		@ sp needed
 590 0024 10BD     		pop	{r4, pc}
 591              		.cfi_endproc
 592              	.LFE8:
 594              		.global	__aeabi_uldivmod
 595 0026 00BF     		.section	.text.alpha_ip,"ax",%progbits
 596              		.align	1
 597              		.p2align 2,,3
 598              		.global	alpha_ip
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu fpv4-sp-d16
 604              	alpha_ip:
 605              	.LVL45:
 606              	.LFB9:
  98:src/alpha.c   **** 
  99:src/alpha.c   **** 
 100:src/alpha.c   **** /* Append integer value to Alpha
 101:src/alpha.c   ****  */
 102:src/alpha.c   **** void alpha_ip(unsigned int arg, enum rarg op) {
 607              		.loc 1 102 47 is_stmt 1 view -0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 112
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 103:src/alpha.c   **** 	char tbuf[NUMALPHA + 4], *p;
 611              		.loc 1 103 2 view .LVU150
 104:src/alpha.c   **** 	int i, sgn;
 612              		.loc 1 104 2 view .LVU151
 105:src/alpha.c   **** 
 106:src/alpha.c   **** 	p = tbuf + sizeof(tbuf) - 1;
 613              		.loc 1 106 2 view .LVU152
 102:src/alpha.c   **** 	char tbuf[NUMALPHA + 4], *p;
ARM GAS  /tmp/ccJb2xJE.s 			page 15


 614              		.loc 1 102 47 is_stmt 0 view .LVU153
 615 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 616              		.cfi_def_cfa_offset 36
 617              		.cfi_offset 4, -36
 618              		.cfi_offset 5, -32
 619              		.cfi_offset 6, -28
 620              		.cfi_offset 7, -24
 621              		.cfi_offset 8, -20
 622              		.cfi_offset 9, -16
 623              		.cfi_offset 10, -12
 624              		.cfi_offset 11, -8
 625              		.cfi_offset 14, -4
 107:src/alpha.c   **** 	*p = '\0';
 108:src/alpha.c   **** 
 109:src/alpha.c   **** 	if (is_intmode()) {
 626              		.loc 1 109 6 view .LVU154
 627 0004 374B     		ldr	r3, .L57
 628 0006 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 102:src/alpha.c   **** 	char tbuf[NUMALPHA + 4], *p;
 629              		.loc 1 102 47 view .LVU155
 630 000a 9DB0     		sub	sp, sp, #116
 631              		.cfi_def_cfa_offset 152
 632              	.LVL46:
 107:src/alpha.c   **** 	*p = '\0';
 633              		.loc 1 107 2 is_stmt 1 view .LVU156
 107:src/alpha.c   **** 	*p = '\0';
 634              		.loc 1 107 5 is_stmt 0 view .LVU157
 635 000c 0022     		movs	r2, #0
 636              		.loc 1 109 5 view .LVU158
 637 000e DB07     		lsls	r3, r3, #31
 107:src/alpha.c   **** 	*p = '\0';
 638              		.loc 1 107 5 view .LVU159
 639 0010 8DF82520 		strb	r2, [sp, #37]
 640              		.loc 1 109 2 is_stmt 1 view .LVU160
 641              		.loc 1 109 5 is_stmt 0 view .LVU161
 642 0014 30D5     		bpl	.L41
 643              	.LBB56:
 110:src/alpha.c   **** 		// should convert this using the current display mode...
 111:src/alpha.c   **** 		unsigned long long int n = extract_value(get_reg_n_int(arg), &sgn);
 644              		.loc 1 111 3 is_stmt 1 view .LVU162
 645              		.loc 1 111 30 is_stmt 0 view .LVU163
 646 0016 FFF7FEFF 		bl	get_reg_n_int
 647              	.LVL47:
 648              		.loc 1 111 30 view .LVU164
 649 001a 6A46     		mov	r2, sp
 650 001c FFF7FEFF 		bl	extract_value
 651              	.LVL48:
 652 0020 0646     		mov	r6, r0
 653 0022 0D46     		mov	r5, r1
 654              	.LVL49:
 112:src/alpha.c   **** 		unsigned int base = int_base();
 655              		.loc 1 112 3 is_stmt 1 view .LVU165
 656              		.loc 1 112 23 is_stmt 0 view .LVU166
 657 0024 FFF7FEFF 		bl	int_base
 658              	.LVL50:
 113:src/alpha.c   **** 		for (i=0; i<NUMALPHA; i++) {
 659              		.loc 1 113 3 is_stmt 1 view .LVU167
ARM GAS  /tmp/ccJb2xJE.s 			page 16


 660              		.loc 1 113 13 view .LVU168
 661 0028 2F4F     		ldr	r7, .L57+4
 662 002a 8046     		mov	r8, r0
 663 002c 4FF00009 		mov	r9, #0
 664              	.LBE56:
 106:src/alpha.c   **** 	*p = '\0';
 665              		.loc 1 106 4 is_stmt 0 view .LVU169
 666 0030 0DF12504 		add	r4, sp, #37
 667              	.LVL51:
 668              	.LBB60:
 669              		.loc 1 113 3 view .LVU170
 670 0034 0DF1070A 		add	r10, sp, #7
 671 0038 01E0     		b	.L43
 672              	.LVL52:
 673              	.L54:
 674              		.loc 1 113 3 discriminator 2 view .LVU171
 675 003a 5445     		cmp	r4, r10
 676 003c 10D0     		beq	.L42
 677              	.LVL53:
 678              	.L43:
 679              	.LBB57:
 114:src/alpha.c   **** 			unsigned int r = n % base;
 680              		.loc 1 114 4 is_stmt 1 view .LVU172
 681 003e 3046     		mov	r0, r6
 682 0040 2946     		mov	r1, r5
 683 0042 4246     		mov	r2, r8
 684 0044 4B46     		mov	r3, r9
 685 0046 FFF7FEFF 		bl	__aeabi_uldivmod
 686              	.LVL54:
 687              	.LBE57:
 113:src/alpha.c   **** 		for (i=0; i<NUMALPHA; i++) {
 688              		.loc 1 113 25 view .LVU173
 689              	.LBB58:
 115:src/alpha.c   **** 			n /= base;
 690              		.loc 1 115 4 view .LVU174
 691 004a AC46     		mov	ip, r5
 692 004c B346     		mov	fp, r6
 116:src/alpha.c   **** 			*--p = DIGITS[r];
 117:src/alpha.c   **** 			if (n == 0)
 693              		.loc 1 117 7 is_stmt 0 view .LVU175
 694 004e CC45     		cmp	ip, r9
 116:src/alpha.c   **** 			*--p = DIGITS[r];
 695              		.loc 1 116 9 view .LVU176
 696 0050 BB5C     		ldrb	r3, [r7, r2]	@ zero_extendqisi2
 697 0052 04F8013D 		strb	r3, [r4, #-1]!
 698              	.LVL55:
 116:src/alpha.c   **** 			*--p = DIGITS[r];
 699              		.loc 1 116 9 view .LVU177
 700              	.LBE58:
 113:src/alpha.c   **** 			unsigned int r = n % base;
 701              		.loc 1 113 13 is_stmt 1 view .LVU178
 702              	.LBB59:
 703              		.loc 1 117 7 is_stmt 0 view .LVU179
 704 0056 08BF     		it	eq
 705 0058 C345     		cmpeq	fp, r8
 115:src/alpha.c   **** 			n /= base;
 706              		.loc 1 115 6 view .LVU180
ARM GAS  /tmp/ccJb2xJE.s 			page 17


 707 005a 0646     		mov	r6, r0
 708 005c 0D46     		mov	r5, r1
 116:src/alpha.c   **** 			*--p = DIGITS[r];
 709              		.loc 1 116 4 is_stmt 1 view .LVU181
 710              	.LVL56:
 711              		.loc 1 117 4 view .LVU182
 712              		.loc 1 117 7 is_stmt 0 view .LVU183
 713 005e ECD2     		bcs	.L54
 714              	.LVL57:
 715              	.L42:
 716              		.loc 1 117 7 view .LVU184
 717              	.LBE59:
 718              	.LBE60:
 118:src/alpha.c   **** 				break;
 119:src/alpha.c   **** 		}
 120:src/alpha.c   **** 	} else {
 121:src/alpha.c   **** 		decNumber x, y;
 122:src/alpha.c   **** 		sgn = decNumberIsNegative(getRegister(&y, arg));
 123:src/alpha.c   **** 		if (sgn)
 124:src/alpha.c   **** 			dn_minus(&y, &y);
 125:src/alpha.c   **** 		decNumberFloor(&x, &y);
 126:src/alpha.c   **** 		for (i=0; i<NUMALPHA; i++) {
 127:src/alpha.c   **** 			decNumberMod(&y, &x, &const_10);
 128:src/alpha.c   **** 			*--p = '0' + dn_to_int(&y);
 129:src/alpha.c   **** 			decNumberFloor(&x, dn_divide(&y, &x, &const_10));
 130:src/alpha.c   **** 			if (dn_eq0(&x))
 131:src/alpha.c   **** 				break;
 132:src/alpha.c   **** 		}
 133:src/alpha.c   **** 	}
 134:src/alpha.c   **** 
 135:src/alpha.c   **** 	if (sgn)
 719              		.loc 1 135 2 is_stmt 1 view .LVU185
 720              		.loc 1 135 5 is_stmt 0 view .LVU186
 721 0060 009B     		ldr	r3, [sp]
 722 0062 1BB1     		cbz	r3, .L47
 136:src/alpha.c   **** 		*--p = '-';
 723              		.loc 1 136 3 is_stmt 1 view .LVU187
 724              	.LVL58:
 725              		.loc 1 136 8 is_stmt 0 view .LVU188
 726 0064 2D23     		movs	r3, #45
 727 0066 04F8013C 		strb	r3, [r4, #-1]
 728 006a 013C     		subs	r4, r4, #1
 729              	.LVL59:
 730              	.L47:
 137:src/alpha.c   **** 	add_string(p);
 731              		.loc 1 137 2 is_stmt 1 view .LVU189
 732 006c 2046     		mov	r0, r4
 733 006e FFF7FEFF 		bl	add_string
 734              	.LVL60:
 138:src/alpha.c   **** }
 735              		.loc 1 138 1 is_stmt 0 view .LVU190
 736 0072 1DB0     		add	sp, sp, #116
 737              		.cfi_remember_state
 738              		.cfi_def_cfa_offset 36
 739              		@ sp needed
 740 0074 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 741              	.LVL61:
ARM GAS  /tmp/ccJb2xJE.s 			page 18


 742              	.L41:
 743              		.cfi_restore_state
 744              	.LBB61:
 121:src/alpha.c   **** 		sgn = decNumberIsNegative(getRegister(&y, arg));
 745              		.loc 1 121 3 is_stmt 1 view .LVU191
 122:src/alpha.c   **** 		if (sgn)
 746              		.loc 1 122 3 view .LVU192
 747 0078 0146     		mov	r1, r0
 748              	.LVL62:
 122:src/alpha.c   **** 		if (sgn)
 749              		.loc 1 122 9 is_stmt 0 view .LVU193
 750 007a 13A8     		add	r0, sp, #76
 751              	.LVL63:
 122:src/alpha.c   **** 		if (sgn)
 752              		.loc 1 122 9 view .LVU194
 753 007c FFF7FEFF 		bl	getRegister
 754              	.LVL64:
 122:src/alpha.c   **** 		if (sgn)
 755              		.loc 1 122 9 view .LVU195
 756 0080 90F90830 		ldrsb	r3, [r0, #8]
 757 0084 DA0F     		lsrs	r2, r3, #31
 123:src/alpha.c   **** 			dn_minus(&y, &y);
 758              		.loc 1 123 6 view .LVU196
 759 0086 002B     		cmp	r3, #0
 122:src/alpha.c   **** 		if (sgn)
 760              		.loc 1 122 7 view .LVU197
 761 0088 0092     		str	r2, [sp]
 123:src/alpha.c   **** 			dn_minus(&y, &y);
 762              		.loc 1 123 3 is_stmt 1 view .LVU198
 123:src/alpha.c   **** 			dn_minus(&y, &y);
 763              		.loc 1 123 6 is_stmt 0 view .LVU199
 764 008a 26DB     		blt	.L55
 765              	.L44:
 125:src/alpha.c   **** 		for (i=0; i<NUMALPHA; i++) {
 766              		.loc 1 125 3 is_stmt 1 view .LVU200
 767 008c 0AA8     		add	r0, sp, #40
 768 008e 13A9     		add	r1, sp, #76
 769 0090 FFF7FEFF 		bl	decNumberFloor
 770              	.LVL65:
 126:src/alpha.c   **** 			decNumberMod(&y, &x, &const_10);
 771              		.loc 1 126 3 view .LVU201
 126:src/alpha.c   **** 			decNumberMod(&y, &x, &const_10);
 772              		.loc 1 126 13 view .LVU202
 127:src/alpha.c   **** 			*--p = '0' + dn_to_int(&y);
 773              		.loc 1 127 4 is_stmt 0 view .LVU203
 774 0094 154D     		ldr	r5, .L57+8
 775              	.LBE61:
 106:src/alpha.c   **** 	*p = '\0';
 776              		.loc 1 106 4 view .LVU204
 777 0096 0DF12504 		add	r4, sp, #37
 778              	.LVL66:
 779              	.LBB62:
 126:src/alpha.c   **** 			decNumberMod(&y, &x, &const_10);
 780              		.loc 1 126 3 view .LVU205
 781 009a 0DF10706 		add	r6, sp, #7
 782 009e 01E0     		b	.L46
 783              	.LVL67:
ARM GAS  /tmp/ccJb2xJE.s 			page 19


 784              	.L56:
 126:src/alpha.c   **** 			decNumberMod(&y, &x, &const_10);
 785              		.loc 1 126 3 discriminator 2 view .LVU206
 786 00a0 B442     		cmp	r4, r6
 787 00a2 DDD0     		beq	.L42
 788              	.LVL68:
 789              	.L46:
 127:src/alpha.c   **** 			*--p = '0' + dn_to_int(&y);
 790              		.loc 1 127 4 is_stmt 1 view .LVU207
 791 00a4 2A46     		mov	r2, r5
 792 00a6 0AA9     		add	r1, sp, #40
 793 00a8 13A8     		add	r0, sp, #76
 794 00aa FFF7FEFF 		bl	decNumberMod
 795              	.LVL69:
 128:src/alpha.c   **** 			decNumberFloor(&x, dn_divide(&y, &x, &const_10));
 796              		.loc 1 128 4 view .LVU208
 128:src/alpha.c   **** 			decNumberFloor(&x, dn_divide(&y, &x, &const_10));
 797              		.loc 1 128 17 is_stmt 0 view .LVU209
 798 00ae 13A8     		add	r0, sp, #76
 799 00b0 FFF7FEFF 		bl	dn_to_int
 800              	.LVL70:
 129:src/alpha.c   **** 			if (dn_eq0(&x))
 801              		.loc 1 129 23 view .LVU210
 802 00b4 2A46     		mov	r2, r5
 128:src/alpha.c   **** 			decNumberFloor(&x, dn_divide(&y, &x, &const_10));
 803              		.loc 1 128 15 view .LVU211
 804 00b6 00F13003 		add	r3, r0, #48
 129:src/alpha.c   **** 			if (dn_eq0(&x))
 805              		.loc 1 129 23 view .LVU212
 806 00ba 0AA9     		add	r1, sp, #40
 807 00bc 13A8     		add	r0, sp, #76
 128:src/alpha.c   **** 			decNumberFloor(&x, dn_divide(&y, &x, &const_10));
 808              		.loc 1 128 9 view .LVU213
 809 00be 04F8013D 		strb	r3, [r4, #-1]!
 810              	.LVL71:
 129:src/alpha.c   **** 			if (dn_eq0(&x))
 811              		.loc 1 129 4 is_stmt 1 view .LVU214
 129:src/alpha.c   **** 			if (dn_eq0(&x))
 812              		.loc 1 129 23 is_stmt 0 view .LVU215
 813 00c2 FFF7FEFF 		bl	dn_divide
 814              	.LVL72:
 815 00c6 0146     		mov	r1, r0
 129:src/alpha.c   **** 			if (dn_eq0(&x))
 816              		.loc 1 129 4 view .LVU216
 817 00c8 0AA8     		add	r0, sp, #40
 818 00ca FFF7FEFF 		bl	decNumberFloor
 819              	.LVL73:
 130:src/alpha.c   **** 				break;
 820              		.loc 1 130 4 is_stmt 1 view .LVU217
 130:src/alpha.c   **** 				break;
 821              		.loc 1 130 8 is_stmt 0 view .LVU218
 822 00ce 0AA8     		add	r0, sp, #40
 823 00d0 FFF7FEFF 		bl	dn_eq0
 824              	.LVL74:
 126:src/alpha.c   **** 			decNumberMod(&y, &x, &const_10);
 825              		.loc 1 126 25 is_stmt 1 view .LVU219
 126:src/alpha.c   **** 			decNumberMod(&y, &x, &const_10);
ARM GAS  /tmp/ccJb2xJE.s 			page 20


 826              		.loc 1 126 13 view .LVU220
 130:src/alpha.c   **** 				break;
 827              		.loc 1 130 7 is_stmt 0 view .LVU221
 828 00d4 0028     		cmp	r0, #0
 829 00d6 E3D0     		beq	.L56
 830 00d8 C2E7     		b	.L42
 831              	.LVL75:
 832              	.L55:
 124:src/alpha.c   **** 		decNumberFloor(&x, &y);
 833              		.loc 1 124 4 is_stmt 1 view .LVU222
 834 00da 13A9     		add	r1, sp, #76
 835 00dc 0846     		mov	r0, r1
 836 00de FFF7FEFF 		bl	dn_minus
 837              	.LVL76:
 838 00e2 D3E7     		b	.L44
 839              	.L58:
 840              		.align	2
 841              	.L57:
 842 00e4 00000000 		.word	PersistentRam
 843 00e8 00000000 		.word	DIGITS
 844 00ec 00000000 		.word	const_10
 845              	.LBE62:
 846              		.cfi_endproc
 847              	.LFE9:
 849              		.section	.text.alen,"ax",%progbits
 850              		.align	1
 851              		.p2align 2,,3
 852              		.global	alen
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 856              		.fpu fpv4-sp-d16
 858              	alen:
 859              	.LFB10:
 139:src/alpha.c   **** 
 140:src/alpha.c   **** 
 141:src/alpha.c   **** /* Return length of Alpha register
 142:src/alpha.c   ****  */
 143:src/alpha.c   **** unsigned int alen(void) {
 860              		.loc 1 143 25 view -0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 144:src/alpha.c   **** 	return find_char(Alpha, '\0') - Alpha;
 864              		.loc 1 144 2 view .LVU224
 143:src/alpha.c   **** 	return find_char(Alpha, '\0') - Alpha;
 865              		.loc 1 143 25 is_stmt 0 view .LVU225
 866 0000 10B5     		push	{r4, lr}
 867              		.cfi_def_cfa_offset 8
 868              		.cfi_offset 4, -8
 869              		.cfi_offset 14, -4
 870              		.loc 1 144 9 view .LVU226
 871 0002 034C     		ldr	r4, .L61
 872 0004 0021     		movs	r1, #0
 873 0006 2046     		mov	r0, r4
 874 0008 FFF7FEFF 		bl	find_char
 875              	.LVL77:
ARM GAS  /tmp/ccJb2xJE.s 			page 21


 145:src/alpha.c   **** }
 876              		.loc 1 145 1 view .LVU227
 877 000c 001B     		subs	r0, r0, r4
 878 000e 10BD     		pop	{r4, pc}
 879              	.L62:
 880              		.align	2
 881              	.L61:
 882 0010 B0070000 		.word	PersistentRam+1968
 883              		.cfi_endproc
 884              	.LFE10:
 886              		.section	.text.alpha_length,"ax",%progbits
 887              		.align	1
 888              		.p2align 2,,3
 889              		.global	alpha_length
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 893              		.fpu fpv4-sp-d16
 895              	alpha_length:
 896              	.LVL78:
 897              	.LFB11:
 146:src/alpha.c   **** 
 147:src/alpha.c   **** void alpha_length(enum nilop op) {
 898              		.loc 1 147 34 is_stmt 1 view -0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 148:src/alpha.c   **** 	setX_int_sgn(alen(), 0);
 902              		.loc 1 148 2 view .LVU229
 903              	.LBB63:
 904              	.LBI63:
 143:src/alpha.c   **** 	return find_char(Alpha, '\0') - Alpha;
 905              		.loc 1 143 14 view .LVU230
 906              	.LBB64:
 144:src/alpha.c   **** }
 907              		.loc 1 144 2 view .LVU231
 908              	.LBE64:
 909              	.LBE63:
 147:src/alpha.c   **** 	setX_int_sgn(alen(), 0);
 910              		.loc 1 147 34 is_stmt 0 view .LVU232
 911 0000 10B5     		push	{r4, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 4, -8
 914              		.cfi_offset 14, -4
 915              	.LBB66:
 916              	.LBB65:
 144:src/alpha.c   **** }
 917              		.loc 1 144 9 view .LVU233
 918 0002 064C     		ldr	r4, .L65
 919 0004 0021     		movs	r1, #0
 920 0006 2046     		mov	r0, r4
 921              	.LVL79:
 144:src/alpha.c   **** }
 922              		.loc 1 144 9 view .LVU234
 923 0008 FFF7FEFF 		bl	find_char
 924              	.LVL80:
 925              	.LBE65:
ARM GAS  /tmp/ccJb2xJE.s 			page 22


 926              	.LBE66:
 927              		.loc 1 148 2 view .LVU235
 928 000c 0022     		movs	r2, #0
 929 000e 001B     		subs	r0, r0, r4
 930 0010 1146     		mov	r1, r2
 149:src/alpha.c   **** }
 931              		.loc 1 149 1 view .LVU236
 932 0012 BDE81040 		pop	{r4, lr}
 933              		.cfi_restore 14
 934              		.cfi_restore 4
 935              		.cfi_def_cfa_offset 0
 148:src/alpha.c   **** }
 936              		.loc 1 148 2 view .LVU237
 937 0016 FFF7FEBF 		b	setX_int_sgn
 938              	.LVL81:
 939              	.L66:
 940 001a 00BF     		.align	2
 941              	.L65:
 942 001c B0070000 		.word	PersistentRam+1968
 943              		.cfi_endproc
 944              	.LFE11:
 946              		.section	.text.alpha_shift_l,"ax",%progbits
 947              		.align	1
 948              		.p2align 2,,3
 949              		.global	alpha_shift_l
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv4-sp-d16
 955              	alpha_shift_l:
 956              	.LVL82:
 957              	.LFB12:
 150:src/alpha.c   **** 
 151:src/alpha.c   **** /* Shift or rotate Alpha register arg positions
 152:src/alpha.c   ****  */
 153:src/alpha.c   **** void alpha_shift_l(unsigned int arg, enum rarg op) {
 958              		.loc 1 153 52 is_stmt 1 view -0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 154:src/alpha.c   **** 	unsigned int i;
 962              		.loc 1 154 2 view .LVU239
 155:src/alpha.c   **** 	const int rot = (op == RARG_ALRL);
 963              		.loc 1 155 2 view .LVU240
 156:src/alpha.c   **** 
 157:src/alpha.c   **** 	for (i=0; i<arg; i++) {
 964              		.loc 1 157 2 view .LVU241
 965              		.loc 1 157 12 view .LVU242
 966              		.loc 1 157 2 is_stmt 0 view .LVU243
 967 0000 C0B1     		cbz	r0, .L77
 153:src/alpha.c   **** 	unsigned int i;
 968              		.loc 1 153 52 view .LVU244
 969 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 970              		.cfi_def_cfa_offset 32
 971              		.cfi_offset 3, -32
 972              		.cfi_offset 4, -28
 973              		.cfi_offset 5, -24
ARM GAS  /tmp/ccJb2xJE.s 			page 23


 974              		.cfi_offset 6, -20
 975              		.cfi_offset 7, -16
 976              		.cfi_offset 8, -12
 977              		.cfi_offset 9, -8
 978              		.cfi_offset 14, -4
 979              	.LBB67:
 158:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 980              		.loc 1 158 14 view .LVU245
 981 0006 DFF83490 		ldr	r9, .L80+4
 982 000a 0F46     		mov	r7, r1
 983 000c 0646     		mov	r6, r0
 984              	.LBE67:
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 985              		.loc 1 157 8 view .LVU246
 986 000e 0024     		movs	r4, #0
 987              	.LBB68:
 159:src/alpha.c   **** 
 160:src/alpha.c   **** 		*scopy(Alpha, Alpha+1) = c;
 988              		.loc 1 160 4 view .LVU247
 989 0010 09F2B178 		addw	r8, r9, #1969
 990              	.LVL83:
 991              	.L70:
 158:src/alpha.c   **** 
 992              		.loc 1 158 3 is_stmt 1 view .LVU248
 158:src/alpha.c   **** 
 993              		.loc 1 158 14 is_stmt 0 view .LVU249
 994 0014 292F     		cmp	r7, #41
 995              		.loc 1 160 4 view .LVU250
 996 0016 0848     		ldr	r0, .L80
 158:src/alpha.c   **** 
 997              		.loc 1 158 14 view .LVU251
 998 0018 08BF     		it	eq
 999 001a 99F8B057 		ldrbeq	r5, [r9, #1968]	@ zero_extendqisi2
 1000              		.loc 1 160 4 view .LVU252
 1001 001e 4146     		mov	r1, r8
 158:src/alpha.c   **** 
 1002              		.loc 1 158 14 view .LVU253
 1003 0020 18BF     		it	ne
 1004 0022 0025     		movne	r5, #0
 1005              	.LVL84:
 1006              		.loc 1 160 3 is_stmt 1 view .LVU254
 1007              		.loc 1 160 4 is_stmt 0 view .LVU255
 1008 0024 FFF7FEFF 		bl	scopy
 1009              	.LVL85:
 1010              	.LBE68:
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 1011              		.loc 1 157 20 view .LVU256
 1012 0028 0134     		adds	r4, r4, #1
 1013              	.LVL86:
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 1014              		.loc 1 157 2 view .LVU257
 1015 002a A642     		cmp	r6, r4
 1016              	.LBB69:
 1017              		.loc 1 160 26 view .LVU258
 1018 002c 0570     		strb	r5, [r0]
 1019              	.LBE69:
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
ARM GAS  /tmp/ccJb2xJE.s 			page 24


 1020              		.loc 1 157 19 is_stmt 1 view .LVU259
 1021              	.LVL87:
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 1022              		.loc 1 157 12 view .LVU260
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 1023              		.loc 1 157 2 is_stmt 0 view .LVU261
 1024 002e F1D1     		bne	.L70
 161:src/alpha.c   **** 	}
 162:src/alpha.c   **** }
 1025              		.loc 1 162 1 view .LVU262
 1026 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1027              	.LVL88:
 1028              	.L77:
 1029              		.cfi_def_cfa_offset 0
 1030              		.cfi_restore 3
 1031              		.cfi_restore 4
 1032              		.cfi_restore 5
 1033              		.cfi_restore 6
 1034              		.cfi_restore 7
 1035              		.cfi_restore 8
 1036              		.cfi_restore 9
 1037              		.cfi_restore 14
 1038              		.loc 1 162 1 view .LVU263
 1039 0034 7047     		bx	lr
 1040              	.L81:
 1041 0036 00BF     		.align	2
 1042              	.L80:
 1043 0038 B0070000 		.word	PersistentRam+1968
 1044 003c 00000000 		.word	PersistentRam
 1045              		.cfi_endproc
 1046              	.LFE12:
 1048              		.section	.text.alpha_shift_r,"ax",%progbits
 1049              		.align	1
 1050              		.p2align 2,,3
 1051              		.global	alpha_shift_r
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1055              		.fpu fpv4-sp-d16
 1057              	alpha_shift_r:
 1058              	.LVL89:
 1059              	.LFB13:
 163:src/alpha.c   **** 
 164:src/alpha.c   **** void alpha_shift_r(unsigned int arg, enum rarg op) {
 1060              		.loc 1 164 52 is_stmt 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 165:src/alpha.c   **** 	unsigned int i;
 1064              		.loc 1 165 2 view .LVU265
 166:src/alpha.c   **** 
 167:src/alpha.c   **** 	for (i=0; i<arg; i++) {
 1065              		.loc 1 167 2 view .LVU266
 1066              		.loc 1 167 12 view .LVU267
 1067              		.loc 1 167 2 is_stmt 0 view .LVU268
 1068 0000 98B1     		cbz	r0, .L90
 164:src/alpha.c   **** 	unsigned int i;
ARM GAS  /tmp/ccJb2xJE.s 			page 25


 1069              		.loc 1 164 52 view .LVU269
 1070 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1071              		.cfi_def_cfa_offset 24
 1072              		.cfi_offset 4, -24
 1073              		.cfi_offset 5, -20
 1074              		.cfi_offset 6, -16
 1075              		.cfi_offset 7, -12
 1076              		.cfi_offset 8, -8
 1077              		.cfi_offset 14, -4
 1078 0006 094E     		ldr	r6, .L93
 1079 0008 0546     		mov	r5, r0
 1080              		.loc 1 167 8 view .LVU270
 1081 000a 0024     		movs	r4, #0
 168:src/alpha.c   **** 		xcopy(Alpha+1, Alpha, NUMALPHA-1);
 1082              		.loc 1 168 3 view .LVU271
 1083 000c 06F5F668 		add	r8, r6, #1968
 169:src/alpha.c   **** 		Alpha[0] = ' ';
 1084              		.loc 1 169 12 view .LVU272
 1085 0010 2027     		movs	r7, #32
 1086              	.LVL90:
 1087              	.L84:
 168:src/alpha.c   **** 		xcopy(Alpha+1, Alpha, NUMALPHA-1);
 1088              		.loc 1 168 3 is_stmt 1 discriminator 3 view .LVU273
 1089 0012 0748     		ldr	r0, .L93+4
 167:src/alpha.c   **** 		xcopy(Alpha+1, Alpha, NUMALPHA-1);
 1090              		.loc 1 167 20 is_stmt 0 discriminator 3 view .LVU274
 1091 0014 0134     		adds	r4, r4, #1
 1092              	.LVL91:
 168:src/alpha.c   **** 		xcopy(Alpha+1, Alpha, NUMALPHA-1);
 1093              		.loc 1 168 3 discriminator 3 view .LVU275
 1094 0016 1D22     		movs	r2, #29
 1095 0018 4146     		mov	r1, r8
 1096 001a FFF7FEFF 		bl	xcopy
 1097              	.LVL92:
 1098              		.loc 1 169 3 is_stmt 1 discriminator 3 view .LVU276
 167:src/alpha.c   **** 		xcopy(Alpha+1, Alpha, NUMALPHA-1);
 1099              		.loc 1 167 2 is_stmt 0 discriminator 3 view .LVU277
 1100 001e A542     		cmp	r5, r4
 1101              		.loc 1 169 12 discriminator 3 view .LVU278
 1102 0020 86F8B077 		strb	r7, [r6, #1968]
 167:src/alpha.c   **** 		xcopy(Alpha+1, Alpha, NUMALPHA-1);
 1103              		.loc 1 167 19 is_stmt 1 discriminator 3 view .LVU279
 1104              	.LVL93:
 167:src/alpha.c   **** 		xcopy(Alpha+1, Alpha, NUMALPHA-1);
 1105              		.loc 1 167 12 discriminator 3 view .LVU280
 167:src/alpha.c   **** 		xcopy(Alpha+1, Alpha, NUMALPHA-1);
 1106              		.loc 1 167 2 is_stmt 0 discriminator 3 view .LVU281
 1107 0024 F5D1     		bne	.L84
 170:src/alpha.c   **** 	}
 171:src/alpha.c   **** }
 1108              		.loc 1 171 1 view .LVU282
 1109 0026 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1110              	.LVL94:
 1111              	.L90:
 1112              		.cfi_def_cfa_offset 0
 1113              		.cfi_restore 4
 1114              		.cfi_restore 5
ARM GAS  /tmp/ccJb2xJE.s 			page 26


 1115              		.cfi_restore 6
 1116              		.cfi_restore 7
 1117              		.cfi_restore 8
 1118              		.cfi_restore 14
 1119              		.loc 1 171 1 view .LVU283
 1120 002a 7047     		bx	lr
 1121              	.L94:
 1122              		.align	2
 1123              	.L93:
 1124 002c 00000000 		.word	PersistentRam
 1125 0030 B1070000 		.word	PersistentRam+1969
 1126              		.cfi_endproc
 1127              	.LFE13:
 1129              		.section	.text.alpha_rot_r,"ax",%progbits
 1130              		.align	1
 1131              		.p2align 2,,3
 1132              		.global	alpha_rot_r
 1133              		.syntax unified
 1134              		.thumb
 1135              		.thumb_func
 1136              		.fpu fpv4-sp-d16
 1138              	alpha_rot_r:
 1139              	.LVL95:
 1140              	.LFB14:
 172:src/alpha.c   **** 
 173:src/alpha.c   **** void alpha_rot_r(unsigned int arg, enum rarg op) {
 1141              		.loc 1 173 50 is_stmt 1 view -0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 174:src/alpha.c   **** 	unsigned int i;
 1145              		.loc 1 174 2 view .LVU285
 175:src/alpha.c   **** 	const unsigned int al = alen();
 1146              		.loc 1 175 2 view .LVU286
 1147              	.LBB70:
 1148              	.LBI70:
 143:src/alpha.c   **** 	return find_char(Alpha, '\0') - Alpha;
 1149              		.loc 1 143 14 view .LVU287
 1150              	.LBB71:
 144:src/alpha.c   **** }
 1151              		.loc 1 144 2 view .LVU288
 1152              	.LBE71:
 1153              	.LBE70:
 173:src/alpha.c   **** 	unsigned int i;
 1154              		.loc 1 173 50 is_stmt 0 view .LVU289
 1155 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1156              		.cfi_def_cfa_offset 32
 1157              		.cfi_offset 4, -32
 1158              		.cfi_offset 5, -28
 1159              		.cfi_offset 6, -24
 1160              		.cfi_offset 7, -20
 1161              		.cfi_offset 8, -16
 1162              		.cfi_offset 9, -12
 1163              		.cfi_offset 10, -8
 1164              		.cfi_offset 14, -4
 1165              	.LBB74:
 1166              	.LBB72:
ARM GAS  /tmp/ccJb2xJE.s 			page 27


 144:src/alpha.c   **** }
 1167              		.loc 1 144 9 view .LVU290
 1168 0004 0F4E     		ldr	r6, .L104
 1169              	.LBE72:
 1170              	.LBE74:
 173:src/alpha.c   **** 	unsigned int i;
 1171              		.loc 1 173 50 view .LVU291
 1172 0006 8046     		mov	r8, r0
 1173              	.LBB75:
 1174              	.LBB73:
 144:src/alpha.c   **** }
 1175              		.loc 1 144 9 view .LVU292
 1176 0008 0021     		movs	r1, #0
 1177              	.LVL96:
 144:src/alpha.c   **** }
 1178              		.loc 1 144 9 view .LVU293
 1179 000a 3046     		mov	r0, r6
 1180              	.LVL97:
 144:src/alpha.c   **** }
 1181              		.loc 1 144 9 view .LVU294
 1182 000c FFF7FEFF 		bl	find_char
 1183              	.LVL98:
 144:src/alpha.c   **** }
 1184              		.loc 1 144 9 view .LVU295
 1185              	.LBE73:
 1186              	.LBE75:
 176:src/alpha.c   **** 
 177:src/alpha.c   **** 	if (al)
 1187              		.loc 1 177 2 is_stmt 1 view .LVU296
 1188              		.loc 1 177 5 is_stmt 0 view .LVU297
 1189 0010 851B     		subs	r5, r0, r6
 1190              	.LVL99:
 1191              		.loc 1 177 5 view .LVU298
 1192 0012 14D0     		beq	.L95
 1193              	.LVL100:
 178:src/alpha.c   **** 		for (i=0; i<arg; i++) {
 1194              		.loc 1 178 13 is_stmt 1 view .LVU299
 1195              		.loc 1 178 3 is_stmt 0 view .LVU300
 1196 0014 B8F1000F 		cmp	r8, #0
 1197 0018 11D0     		beq	.L95
 1198 001a 013D     		subs	r5, r5, #1
 1199              	.LVL101:
 1200              		.loc 1 178 3 view .LVU301
 1201 001c A6F5F669 		sub	r9, r6, #1968
 1202              	.LBB76:
 179:src/alpha.c   **** 			const char c = Alpha[al-1];
 1203              		.loc 1 179 15 view .LVU302
 1204 0020 09EB050A 		add	r10, r9, r5
 1205              	.LBE76:
 178:src/alpha.c   **** 		for (i=0; i<arg; i++) {
 1206              		.loc 1 178 9 view .LVU303
 1207 0024 0024     		movs	r4, #0
 1208              	.LVL102:
 1209              	.L98:
 1210              	.LBB77:
 1211              		.loc 1 179 4 is_stmt 1 discriminator 3 view .LVU304
 180:src/alpha.c   **** 			xcopy(Alpha+1, Alpha, al-1);
ARM GAS  /tmp/ccJb2xJE.s 			page 28


 1212              		.loc 1 180 4 is_stmt 0 discriminator 3 view .LVU305
 1213 0026 0848     		ldr	r0, .L104+4
 179:src/alpha.c   **** 			const char c = Alpha[al-1];
 1214              		.loc 1 179 15 discriminator 3 view .LVU306
 1215 0028 9AF8B077 		ldrb	r7, [r10, #1968]	@ zero_extendqisi2
 1216              	.LVL103:
 1217              		.loc 1 180 4 is_stmt 1 discriminator 3 view .LVU307
 1218              	.LBE77:
 178:src/alpha.c   **** 		for (i=0; i<arg; i++) {
 1219              		.loc 1 178 21 is_stmt 0 discriminator 3 view .LVU308
 1220 002c 0134     		adds	r4, r4, #1
 1221              	.LVL104:
 1222              	.LBB78:
 1223              		.loc 1 180 4 discriminator 3 view .LVU309
 1224 002e 2A46     		mov	r2, r5
 1225 0030 3146     		mov	r1, r6
 1226 0032 FFF7FEFF 		bl	xcopy
 1227              	.LVL105:
 181:src/alpha.c   **** 			Alpha[0] = c;
 1228              		.loc 1 181 4 is_stmt 1 discriminator 3 view .LVU310
 1229              	.LBE78:
 178:src/alpha.c   **** 			const char c = Alpha[al-1];
 1230              		.loc 1 178 3 is_stmt 0 discriminator 3 view .LVU311
 1231 0036 A045     		cmp	r8, r4
 1232              	.LBB79:
 1233              		.loc 1 181 13 discriminator 3 view .LVU312
 1234 0038 89F8B077 		strb	r7, [r9, #1968]
 1235              	.LBE79:
 178:src/alpha.c   **** 			const char c = Alpha[al-1];
 1236              		.loc 1 178 20 is_stmt 1 discriminator 3 view .LVU313
 1237              	.LVL106:
 178:src/alpha.c   **** 			const char c = Alpha[al-1];
 1238              		.loc 1 178 13 discriminator 3 view .LVU314
 178:src/alpha.c   **** 			const char c = Alpha[al-1];
 1239              		.loc 1 178 3 is_stmt 0 discriminator 3 view .LVU315
 1240 003c F3D1     		bne	.L98
 1241              	.LVL107:
 1242              	.L95:
 182:src/alpha.c   **** 		}
 183:src/alpha.c   **** }
 1243              		.loc 1 183 1 view .LVU316
 1244 003e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1245              	.LVL108:
 1246              	.L105:
 1247              		.loc 1 183 1 view .LVU317
 1248 0042 00BF     		.align	2
 1249              	.L104:
 1250 0044 B0070000 		.word	PersistentRam+1968
 1251 0048 B1070000 		.word	PersistentRam+1969
 1252              		.cfi_endproc
 1253              	.LFE14:
 1255              		.section	.text.alpha_tox,"ax",%progbits
 1256              		.align	1
 1257              		.p2align 2,,3
 1258              		.global	alpha_tox
 1259              		.syntax unified
 1260              		.thumb
ARM GAS  /tmp/ccJb2xJE.s 			page 29


 1261              		.thumb_func
 1262              		.fpu fpv4-sp-d16
 1264              	alpha_tox:
 1265              	.LVL109:
 1266              	.LFB15:
 184:src/alpha.c   **** 
 185:src/alpha.c   **** /* Take first character from Alpha and return its code in X.
 186:src/alpha.c   ****  * remove the character from Alpha
 187:src/alpha.c   ****  */
 188:src/alpha.c   **** void alpha_tox(enum nilop op) {
 1267              		.loc 1 188 31 is_stmt 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 189:src/alpha.c   **** 	setX_int_sgn(Alpha[0] & 0xff, 0);
 1271              		.loc 1 189 2 view .LVU319
 188:src/alpha.c   **** 	setX_int_sgn(Alpha[0] & 0xff, 0);
 1272              		.loc 1 188 31 is_stmt 0 view .LVU320
 1273 0000 10B5     		push	{r4, lr}
 1274              		.cfi_def_cfa_offset 8
 1275              		.cfi_offset 4, -8
 1276              		.cfi_offset 14, -4
 1277              		.loc 1 189 20 view .LVU321
 1278 0002 084C     		ldr	r4, .L108
 1279              		.loc 1 189 2 view .LVU322
 1280 0004 0022     		movs	r2, #0
 1281 0006 94F8B007 		ldrb	r0, [r4, #1968]	@ zero_extendqisi2
 1282              	.LVL110:
 1283              		.loc 1 189 2 view .LVU323
 1284 000a 0021     		movs	r1, #0
 1285 000c FFF7FEFF 		bl	setX_int_sgn
 1286              	.LVL111:
 190:src/alpha.c   **** 	alpha_shift_l(1, RARG_ALSL);
 1287              		.loc 1 190 2 is_stmt 1 view .LVU324
 1288              	.LBB80:
 1289              	.LBI80:
 153:src/alpha.c   **** 	unsigned int i;
 1290              		.loc 1 153 6 view .LVU325
 1291              	.LBB81:
 154:src/alpha.c   **** 	const int rot = (op == RARG_ALRL);
 1292              		.loc 1 154 2 view .LVU326
 155:src/alpha.c   **** 
 1293              		.loc 1 155 2 view .LVU327
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 1294              		.loc 1 157 2 view .LVU328
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 1295              		.loc 1 157 12 view .LVU329
 1296              	.LBB82:
 158:src/alpha.c   **** 
 1297              		.loc 1 158 3 view .LVU330
 160:src/alpha.c   **** 	}
 1298              		.loc 1 160 3 view .LVU331
 160:src/alpha.c   **** 	}
 1299              		.loc 1 160 4 is_stmt 0 view .LVU332
 1300 0010 04F2B171 		addw	r1, r4, #1969
 1301 0014 04F5F660 		add	r0, r4, #1968
 1302 0018 FFF7FEFF 		bl	scopy
ARM GAS  /tmp/ccJb2xJE.s 			page 30


 1303              	.LVL112:
 160:src/alpha.c   **** 	}
 1304              		.loc 1 160 26 view .LVU333
 1305 001c 0023     		movs	r3, #0
 1306 001e 0370     		strb	r3, [r0]
 1307              	.LBE82:
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 1308              		.loc 1 157 19 is_stmt 1 view .LVU334
 1309              	.LVL113:
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 1310              		.loc 1 157 12 view .LVU335
 157:src/alpha.c   **** 		const char c = rot?Alpha[0]:'\0';
 1311              		.loc 1 157 12 is_stmt 0 view .LVU336
 1312              	.LBE81:
 1313              	.LBE80:
 191:src/alpha.c   **** }
 1314              		.loc 1 191 1 view .LVU337
 1315 0020 10BD     		pop	{r4, pc}
 1316              	.L109:
 1317 0022 00BF     		.align	2
 1318              	.L108:
 1319 0024 00000000 		.word	PersistentRam
 1320              		.cfi_endproc
 1321              	.LFE15:
 1323              		.section	.text.alpha_fromx,"ax",%progbits
 1324              		.align	1
 1325              		.p2align 2,,3
 1326              		.global	alpha_fromx
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1330              		.fpu fpv4-sp-d16
 1332              	alpha_fromx:
 1333              	.LVL114:
 1334              	.LFB16:
 192:src/alpha.c   **** 
 193:src/alpha.c   **** void alpha_fromx(enum nilop op) {
 1335              		.loc 1 193 33 is_stmt 1 view -0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 8
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 194:src/alpha.c   **** 	int s;
 1339              		.loc 1 194 2 view .LVU339
 195:src/alpha.c   **** 	add_char(0xff & getX_int_sgn(&s));
 1340              		.loc 1 195 2 view .LVU340
 193:src/alpha.c   **** 	int s;
 1341              		.loc 1 193 33 is_stmt 0 view .LVU341
 1342 0000 00B5     		push	{lr}
 1343              		.cfi_def_cfa_offset 4
 1344              		.cfi_offset 14, -4
 1345 0002 83B0     		sub	sp, sp, #12
 1346              		.cfi_def_cfa_offset 16
 1347              		.loc 1 195 18 view .LVU342
 1348 0004 01A8     		add	r0, sp, #4
 1349              	.LVL115:
 1350              		.loc 1 195 18 view .LVU343
 1351 0006 FFF7FEFF 		bl	getX_int_sgn
ARM GAS  /tmp/ccJb2xJE.s 			page 31


 1352              	.LVL116:
 1353              		.loc 1 195 2 view .LVU344
 1354 000a C0B2     		uxtb	r0, r0
 1355 000c FFF7FEFF 		bl	add_char
 1356              	.LVL117:
 196:src/alpha.c   **** }
 1357              		.loc 1 196 1 view .LVU345
 1358 0010 03B0     		add	sp, sp, #12
 1359              		.cfi_def_cfa_offset 4
 1360              		@ sp needed
 1361 0012 5DF804FB 		ldr	pc, [sp], #4
 1362              		.cfi_endproc
 1363              	.LFE16:
 1365 0016 00BF     		.section	.text.alpha_reg,"ax",%progbits
 1366              		.align	1
 1367              		.p2align 2,,3
 1368              		.global	alpha_reg
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1372              		.fpu fpv4-sp-d16
 1374              	alpha_reg:
 1375              	.LVL118:
 1376              	.LFB17:
 197:src/alpha.c   **** 
 198:src/alpha.c   **** /* Recall a register and append to Alpha.
 199:src/alpha.c   ****  * This honours the current display mode.
 200:src/alpha.c   ****  */
 201:src/alpha.c   **** void alpha_reg(unsigned int arg, enum rarg op) {
 1377              		.loc 1 201 48 is_stmt 1 view -0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 72
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 202:src/alpha.c   **** 	char buf[65];
 1381              		.loc 1 202 2 view .LVU347
 203:src/alpha.c   **** 
 204:src/alpha.c   **** 	xset(buf, '\0', sizeof(buf));
 1382              		.loc 1 204 2 view .LVU348
 201:src/alpha.c   **** 	char buf[65];
 1383              		.loc 1 201 48 is_stmt 0 view .LVU349
 1384 0000 10B5     		push	{r4, lr}
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 4, -8
 1387              		.cfi_offset 14, -4
 1388 0002 92B0     		sub	sp, sp, #72
 1389              		.cfi_def_cfa_offset 80
 1390              		.loc 1 204 2 view .LVU350
 1391 0004 4122     		movs	r2, #65
 201:src/alpha.c   **** 	char buf[65];
 1392              		.loc 1 201 48 view .LVU351
 1393 0006 0446     		mov	r4, r0
 1394              		.loc 1 204 2 view .LVU352
 1395 0008 0021     		movs	r1, #0
 1396              	.LVL119:
 1397              		.loc 1 204 2 view .LVU353
 1398 000a 01A8     		add	r0, sp, #4
 1399              	.LVL120:
ARM GAS  /tmp/ccJb2xJE.s 			page 32


 1400              		.loc 1 204 2 view .LVU354
 1401 000c FFF7FEFF 		bl	xset
 1402              	.LVL121:
 205:src/alpha.c   **** 	format_reg(arg, buf);
 1403              		.loc 1 205 2 is_stmt 1 view .LVU355
 1404 0010 01A9     		add	r1, sp, #4
 1405 0012 2046     		mov	r0, r4
 1406 0014 FFF7FEFF 		bl	format_reg
 1407              	.LVL122:
 206:src/alpha.c   **** 	add_string(buf);
 1408              		.loc 1 206 2 view .LVU356
 1409 0018 01A8     		add	r0, sp, #4
 1410 001a FFF7FEFF 		bl	add_string
 1411              	.LVL123:
 207:src/alpha.c   **** }
 1412              		.loc 1 207 1 is_stmt 0 view .LVU357
 1413 001e 12B0     		add	sp, sp, #72
 1414              		.cfi_def_cfa_offset 8
 1415              		@ sp needed
 1416 0020 10BD     		pop	{r4, pc}
 1417              		.loc 1 207 1 view .LVU358
 1418              		.cfi_endproc
 1419              	.LFE17:
 1421 0022 00BF     		.section	.text.alpha_sto,"ax",%progbits
 1422              		.align	1
 1423              		.p2align 2,,3
 1424              		.global	alpha_sto
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu fpv4-sp-d16
 1430              	alpha_sto:
 1431              	.LVL124:
 1432              	.LFB19:
 208:src/alpha.c   **** 
 209:src/alpha.c   **** 
 210:src/alpha.c   **** /* Return the number of characters being stored in a register.
 211:src/alpha.c   ****  * For reals this is 6 to match the 41 series.  For integers, it is as
 212:src/alpha.c   ****  * many as will fit into the current sord size.
 213:src/alpha.c   ****  */
 214:src/alpha.c   **** static int char_per_reg(void) {
 215:src/alpha.c   **** 	return is_intmode()?(word_size() / 8):CHARS_IN_REG;
 216:src/alpha.c   **** }
 217:src/alpha.c   **** 
 218:src/alpha.c   **** 
 219:src/alpha.c   **** /* Sto start of Alpha register into arg
 220:src/alpha.c   ****  */
 221:src/alpha.c   **** void alpha_sto(unsigned int arg, enum rarg op) {
 1433              		.loc 1 221 48 is_stmt 1 view -0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 222:src/alpha.c   **** 	unsigned long long int z = 0;
 1437              		.loc 1 222 2 view .LVU360
 223:src/alpha.c   **** 	int i;
 1438              		.loc 1 223 2 view .LVU361
 224:src/alpha.c   **** 	const int n = char_per_reg();
ARM GAS  /tmp/ccJb2xJE.s 			page 33


 1439              		.loc 1 224 2 view .LVU362
 1440              	.LBB87:
 1441              	.LBI87:
 214:src/alpha.c   **** 	return is_intmode()?(word_size() / 8):CHARS_IN_REG;
 1442              		.loc 1 214 12 view .LVU363
 1443              	.LBB88:
 215:src/alpha.c   **** }
 1444              		.loc 1 215 2 view .LVU364
 1445              	.LBE88:
 1446              	.LBE87:
 221:src/alpha.c   **** 	unsigned long long int z = 0;
 1447              		.loc 1 221 48 is_stmt 0 view .LVU365
 1448 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1449              		.cfi_def_cfa_offset 20
 1450              		.cfi_offset 4, -20
 1451              		.cfi_offset 5, -16
 1452              		.cfi_offset 6, -12
 1453              		.cfi_offset 7, -8
 1454              		.cfi_offset 14, -4
 1455              	.LBB98:
 1456              	.LBB93:
 215:src/alpha.c   **** }
 1457              		.loc 1 215 21 view .LVU366
 1458 0002 174F     		ldr	r7, .L133
 1459 0004 97F8E837 		ldrb	r3, [r7, #2024]	@ zero_extendqisi2
 215:src/alpha.c   **** }
 1460              		.loc 1 215 39 view .LVU367
 1461 0008 DB07     		lsls	r3, r3, #31
 1462              	.LBE93:
 1463              	.LBE98:
 221:src/alpha.c   **** 	unsigned long long int z = 0;
 1464              		.loc 1 221 48 view .LVU368
 1465 000a 83B0     		sub	sp, sp, #12
 1466              		.cfi_def_cfa_offset 32
 221:src/alpha.c   **** 	unsigned long long int z = 0;
 1467              		.loc 1 221 48 view .LVU369
 1468 000c 0646     		mov	r6, r0
 1469              	.LBB99:
 1470              	.LBB94:
 215:src/alpha.c   **** }
 1471              		.loc 1 215 39 view .LVU370
 1472 000e 1CD4     		bmi	.L115
 1473              	.LVL125:
 215:src/alpha.c   **** }
 1474              		.loc 1 215 39 view .LVU371
 1475              	.LBE94:
 1476              	.LBE99:
 225:src/alpha.c   **** 
 226:src/alpha.c   **** 	for (i=0; Alpha[i] != '\0' && i<n; i++)
 1477              		.loc 1 226 2 is_stmt 1 view .LVU372
 1478              		.loc 1 226 12 view .LVU373
 1479              		.loc 1 226 17 is_stmt 0 view .LVU374
 1480 0010 97F8B047 		ldrb	r4, [r7, #1968]	@ zero_extendqisi2
 1481              	.LBB100:
 1482              	.LBB95:
 215:src/alpha.c   **** }
 1483              		.loc 1 215 39 view .LVU375
ARM GAS  /tmp/ccJb2xJE.s 			page 34


 1484 0014 0620     		movs	r0, #6
 1485              	.LVL126:
 215:src/alpha.c   **** }
 1486              		.loc 1 215 39 view .LVU376
 1487              	.LBE95:
 1488              	.LBE100:
 1489              		.loc 1 226 2 view .LVU377
 1490 0016 04B3     		cbz	r4, .L117
 1491              	.LVL127:
 1492              	.L116:
 222:src/alpha.c   **** 	int i;
 1493              		.loc 1 222 25 view .LVU378
 1494 0018 0022     		movs	r2, #0
 1495 001a 124D     		ldr	r5, .L133+4
 1496 001c 1346     		mov	r3, r2
 1497 001e 01E0     		b	.L119
 1498              	.LVL128:
 1499              	.L132:
 1500              		.loc 1 226 29 discriminator 3 view .LVU379
 1501 0020 8842     		cmp	r0, r1
 1502 0022 0BDD     		ble	.L118
 1503              	.LVL129:
 1504              	.L119:
 227:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1505              		.loc 1 227 3 is_stmt 1 discriminator 4 view .LVU380
 1506              		.loc 1 227 10 is_stmt 0 discriminator 4 view .LVU381
 1507 0024 1B02     		lsls	r3, r3, #8
 1508              	.LVL130:
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1509              		.loc 1 226 29 discriminator 4 view .LVU382
 1510 0026 A5F2AF71 		subw	r1, r5, #1967
 1511              		.loc 1 227 10 discriminator 4 view .LVU383
 1512 002a 43EA1263 		orr	r3, r3, r2, lsr #24
 1513              		.loc 1 227 5 discriminator 4 view .LVU384
 1514 002e 44EA0222 		orr	r2, r4, r2, lsl #8
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1515              		.loc 1 226 17 discriminator 4 view .LVU385
 1516 0032 15F8014F 		ldrb	r4, [r5, #1]!	@ zero_extendqisi2
 1517              	.LVL131:
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1518              		.loc 1 226 29 discriminator 4 view .LVU386
 1519 0036 C91B     		subs	r1, r1, r7
 1520              	.LVL132:
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1521              		.loc 1 226 37 is_stmt 1 discriminator 4 view .LVU387
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1522              		.loc 1 226 12 discriminator 4 view .LVU388
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1523              		.loc 1 226 2 is_stmt 0 discriminator 4 view .LVU389
 1524 0038 002C     		cmp	r4, #0
 1525 003a F1D1     		bne	.L132
 1526              	.LVL133:
 1527              	.L118:
 228:src/alpha.c   **** 	set_reg_n_int_sgn(arg, z, 0);
 1528              		.loc 1 228 2 is_stmt 1 view .LVU390
 1529 003c 0021     		movs	r1, #0
 1530 003e 3046     		mov	r0, r6
ARM GAS  /tmp/ccJb2xJE.s 			page 35


 1531 0040 0091     		str	r1, [sp]
 1532 0042 FFF7FEFF 		bl	set_reg_n_int_sgn
 1533              	.LVL134:
 229:src/alpha.c   **** }
 1534              		.loc 1 229 1 is_stmt 0 view .LVU391
 1535 0046 03B0     		add	sp, sp, #12
 1536              		.cfi_remember_state
 1537              		.cfi_def_cfa_offset 20
 1538              		@ sp needed
 1539 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 1540              	.LVL135:
 1541              	.L115:
 1542              		.cfi_restore_state
 1543              	.LBB101:
 1544              	.LBB96:
 1545              	.LBB89:
 1546              	.LBI89:
 214:src/alpha.c   **** 	return is_intmode()?(word_size() / 8):CHARS_IN_REG;
 1547              		.loc 1 214 12 is_stmt 1 view .LVU392
 1548              	.LBB90:
 215:src/alpha.c   **** }
 1549              		.loc 1 215 23 is_stmt 0 view .LVU393
 1550 004a FFF7FEFF 		bl	word_size
 1551              	.LVL136:
 215:src/alpha.c   **** }
 1552              		.loc 1 215 23 view .LVU394
 1553              	.LBE90:
 1554              	.LBE89:
 1555              	.LBE96:
 1556              	.LBE101:
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1557              		.loc 1 226 17 view .LVU395
 1558 004e 97F8B047 		ldrb	r4, [r7, #1968]	@ zero_extendqisi2
 1559              	.LBB102:
 1560              	.LBB97:
 1561              	.LBB92:
 1562              	.LBB91:
 215:src/alpha.c   **** }
 1563              		.loc 1 215 35 view .LVU396
 1564 0052 C008     		lsrs	r0, r0, #3
 1565              	.LVL137:
 215:src/alpha.c   **** }
 1566              		.loc 1 215 35 view .LVU397
 1567              	.LBE91:
 1568              	.LBE92:
 1569              	.LBE97:
 1570              	.LBE102:
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1571              		.loc 1 226 2 is_stmt 1 view .LVU398
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1572              		.loc 1 226 12 view .LVU399
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1573              		.loc 1 226 2 is_stmt 0 view .LVU400
 1574 0054 0CB1     		cbz	r4, .L117
 226:src/alpha.c   **** 		z = (z << 8) | (0xff & Alpha[i]);
 1575              		.loc 1 226 29 view .LVU401
 1576 0056 0028     		cmp	r0, #0
ARM GAS  /tmp/ccJb2xJE.s 			page 36


 1577 0058 DED1     		bne	.L116
 1578              	.LVL138:
 1579              	.L117:
 222:src/alpha.c   **** 	int i;
 1580              		.loc 1 222 25 view .LVU402
 1581 005a 0022     		movs	r2, #0
 1582 005c 1346     		mov	r3, r2
 1583 005e EDE7     		b	.L118
 1584              	.L134:
 1585              		.align	2
 1586              	.L133:
 1587 0060 00000000 		.word	PersistentRam
 1588 0064 B0070000 		.word	PersistentRam+1968
 1589              		.cfi_endproc
 1590              	.LFE19:
 1592              		.section	.text.alpha_rcl_s,"ax",%progbits
 1593              		.align	1
 1594              		.p2align 2,,3
 1595              		.global	alpha_rcl_s
 1596              		.syntax unified
 1597              		.thumb
 1598              		.thumb_func
 1599              		.fpu fpv4-sp-d16
 1601              	alpha_rcl_s:
 1602              	.LVL139:
 1603              	.LFB20:
 230:src/alpha.c   **** 
 231:src/alpha.c   **** 
 232:src/alpha.c   **** /* Alpha recall a register and convert it into the supplied
 233:src/alpha.c   ****  * buffer and return a pointer to the first character (which won't
 234:src/alpha.c   ****  * always be the start of the buffer.
 235:src/alpha.c   ****  */
 236:src/alpha.c   **** char *alpha_rcl_s(int index, char buf[12]) {
 1604              		.loc 1 236 44 is_stmt 1 view -0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 8
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 237:src/alpha.c   **** 	int i;
 1608              		.loc 1 237 2 view .LVU404
 238:src/alpha.c   **** 	unsigned long long int z = get_reg_n_int_sgn(index, &i);
 1609              		.loc 1 238 2 view .LVU405
 236:src/alpha.c   **** 	int i;
 1610              		.loc 1 236 44 is_stmt 0 view .LVU406
 1611 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1612              		.cfi_def_cfa_offset 20
 1613              		.cfi_offset 4, -20
 1614              		.cfi_offset 5, -16
 1615              		.cfi_offset 6, -12
 1616              		.cfi_offset 7, -8
 1617              		.cfi_offset 14, -4
 1618 0002 83B0     		sub	sp, sp, #12
 1619              		.cfi_def_cfa_offset 32
 236:src/alpha.c   **** 	int i;
 1620              		.loc 1 236 44 view .LVU407
 1621 0004 0F46     		mov	r7, r1
 1622              		.loc 1 238 29 view .LVU408
 1623 0006 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccJb2xJE.s 			page 37


 1624              	.LVL140:
 1625              		.loc 1 238 29 view .LVU409
 1626 0008 FFF7FEFF 		bl	get_reg_n_int_sgn
 1627              	.LVL141:
 1628              	.LBB107:
 1629              	.LBB108:
 215:src/alpha.c   **** }
 1630              		.loc 1 215 21 view .LVU410
 1631 000c 194B     		ldr	r3, .L154
 1632 000e 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 215:src/alpha.c   **** }
 1633              		.loc 1 215 39 view .LVU411
 1634 0012 13F00103 		ands	r3, r3, #1
 1635              	.LBE108:
 1636              	.LBE107:
 1637              		.loc 1 238 29 view .LVU412
 1638 0016 0446     		mov	r4, r0
 1639 0018 0D46     		mov	r5, r1
 1640              	.LVL142:
 239:src/alpha.c   **** 	char *p = buf + 11;
 1641              		.loc 1 239 2 is_stmt 1 view .LVU413
 1642              		.loc 1 239 8 is_stmt 0 view .LVU414
 1643 001a 07F10B06 		add	r6, r7, #11
 1644              	.LVL143:
 240:src/alpha.c   **** 	int n = char_per_reg();
 1645              		.loc 1 240 2 is_stmt 1 view .LVU415
 1646              	.LBB117:
 1647              	.LBI107:
 214:src/alpha.c   **** 	return is_intmode()?(word_size() / 8):CHARS_IN_REG;
 1648              		.loc 1 214 12 view .LVU416
 1649              	.LBB113:
 215:src/alpha.c   **** }
 1650              		.loc 1 215 2 view .LVU417
 215:src/alpha.c   **** }
 1651              		.loc 1 215 39 is_stmt 0 view .LVU418
 1652 001e 1CD1     		bne	.L136
 1653              	.LVL144:
 215:src/alpha.c   **** }
 1654              		.loc 1 215 39 view .LVU419
 1655              	.LBE113:
 1656              	.LBE117:
 241:src/alpha.c   **** 
 242:src/alpha.c   **** 	*p = '\0';
 1657              		.loc 1 242 2 is_stmt 1 view .LVU420
 1658              		.loc 1 242 5 is_stmt 0 view .LVU421
 1659 0020 FB72     		strb	r3, [r7, #11]
 243:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1660              		.loc 1 243 2 is_stmt 1 view .LVU422
 1661              		.loc 1 243 9 view .LVU423
 1662              		.loc 1 243 2 is_stmt 0 view .LVU424
 1663 0022 54EA0503 		orrs	r3, r4, r5
 1664              	.LBB118:
 1665              	.LBB114:
 215:src/alpha.c   **** }
 1666              		.loc 1 215 39 view .LVU425
 1667 0026 18BF     		it	ne
 1668 0028 0620     		movne	r0, #6
ARM GAS  /tmp/ccJb2xJE.s 			page 38


 1669              	.LBE114:
 1670              	.LBE118:
 1671              		.loc 1 243 2 view .LVU426
 1672 002a 04D1     		bne	.L139
 1673              	.LVL145:
 1674              	.L135:
 244:src/alpha.c   **** 		*--p = z & 0xff;
 245:src/alpha.c   **** 		z >>= 8;
 246:src/alpha.c   **** 	}
 247:src/alpha.c   **** 	return p;
 248:src/alpha.c   **** }
 1675              		.loc 1 248 1 view .LVU427
 1676 002c 3046     		mov	r0, r6
 1677 002e 03B0     		add	sp, sp, #12
 1678              		.cfi_remember_state
 1679              		.cfi_def_cfa_offset 20
 1680              		@ sp needed
 1681 0030 F0BD     		pop	{r4, r5, r6, r7, pc}
 1682              	.LVL146:
 1683              	.L153:
 1684              		.cfi_restore_state
 243:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1685              		.loc 1 243 16 discriminator 2 view .LVU428
 1686 0032 C342     		cmn	r3, r0
 1687 0034 FAD0     		beq	.L135
 1688              	.L139:
 244:src/alpha.c   **** 		*--p = z & 0xff;
 1689              		.loc 1 244 3 is_stmt 1 discriminator 3 view .LVU429
 1690              	.LVL147:
 245:src/alpha.c   **** 	}
 1691              		.loc 1 245 5 is_stmt 0 discriminator 3 view .LVU430
 1692 0036 230A     		lsrs	r3, r4, #8
 1693 0038 43EA0563 		orr	r3, r3, r5, lsl #24
 244:src/alpha.c   **** 		*--p = z & 0xff;
 1694              		.loc 1 244 8 discriminator 3 view .LVU431
 1695 003c 06F8014D 		strb	r4, [r6, #-1]!
 1696              	.LVL148:
 245:src/alpha.c   **** 	}
 1697              		.loc 1 245 3 is_stmt 1 discriminator 3 view .LVU432
 245:src/alpha.c   **** 	}
 1698              		.loc 1 245 5 is_stmt 0 discriminator 3 view .LVU433
 1699 0040 2A0A     		lsrs	r2, r5, #8
 1700 0042 1C46     		mov	r4, r3
 1701              	.LVL149:
 245:src/alpha.c   **** 	}
 1702              		.loc 1 245 5 discriminator 3 view .LVU434
 1703 0044 1546     		mov	r5, r2
 1704              	.LVL150:
 243:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1705              		.loc 1 243 24 is_stmt 1 discriminator 3 view .LVU435
 243:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1706              		.loc 1 243 9 discriminator 3 view .LVU436
 243:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1707              		.loc 1 243 16 is_stmt 0 discriminator 3 view .LVU437
 1708 0046 A6F10B03 		sub	r3, r6, #11
 243:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1709              		.loc 1 243 2 discriminator 3 view .LVU438
ARM GAS  /tmp/ccJb2xJE.s 			page 39


 1710 004a 54EA0502 		orrs	r2, r4, r5
 243:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1711              		.loc 1 243 16 discriminator 3 view .LVU439
 1712 004e A3EB0703 		sub	r3, r3, r7
 243:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1713              		.loc 1 243 2 discriminator 3 view .LVU440
 1714 0052 EED1     		bne	.L153
 1715              		.loc 1 248 1 view .LVU441
 1716 0054 3046     		mov	r0, r6
 1717 0056 03B0     		add	sp, sp, #12
 1718              		.cfi_remember_state
 1719              		.cfi_def_cfa_offset 20
 1720              		@ sp needed
 1721 0058 F0BD     		pop	{r4, r5, r6, r7, pc}
 1722              	.LVL151:
 1723              	.L136:
 1724              		.cfi_restore_state
 1725              	.LBB119:
 1726              	.LBB115:
 1727              	.LBB109:
 1728              	.LBI109:
 214:src/alpha.c   **** 	return is_intmode()?(word_size() / 8):CHARS_IN_REG;
 1729              		.loc 1 214 12 is_stmt 1 view .LVU442
 1730              	.LBB110:
 215:src/alpha.c   **** }
 1731              		.loc 1 215 23 is_stmt 0 view .LVU443
 1732 005a FFF7FEFF 		bl	word_size
 1733              	.LVL152:
 1734              	.LBE110:
 1735              	.LBE109:
 1736              	.LBE115:
 1737              	.LBE119:
 242:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1738              		.loc 1 242 5 view .LVU444
 1739 005e 0023     		movs	r3, #0
 1740 0060 FB72     		strb	r3, [r7, #11]
 243:src/alpha.c   **** 		*--p = z & 0xff;
 1741              		.loc 1 243 2 view .LVU445
 1742 0062 54EA0503 		orrs	r3, r4, r5
 1743              	.LBB120:
 1744              	.LBB116:
 1745              	.LBB112:
 1746              	.LBB111:
 215:src/alpha.c   **** }
 1747              		.loc 1 215 35 view .LVU446
 1748 0066 4FEAD000 		lsr	r0, r0, #3
 1749              	.LVL153:
 215:src/alpha.c   **** }
 1750              		.loc 1 215 35 view .LVU447
 1751              	.LBE111:
 1752              	.LBE112:
 1753              	.LBE116:
 1754              	.LBE120:
 242:src/alpha.c   **** 	for (; z != 0 && n>0; n--) {
 1755              		.loc 1 242 2 is_stmt 1 view .LVU448
 243:src/alpha.c   **** 		*--p = z & 0xff;
 1756              		.loc 1 243 2 view .LVU449
ARM GAS  /tmp/ccJb2xJE.s 			page 40


 243:src/alpha.c   **** 		*--p = z & 0xff;
 1757              		.loc 1 243 9 view .LVU450
 243:src/alpha.c   **** 		*--p = z & 0xff;
 1758              		.loc 1 243 2 is_stmt 0 view .LVU451
 1759 006a DFD0     		beq	.L135
 243:src/alpha.c   **** 		*--p = z & 0xff;
 1760              		.loc 1 243 16 view .LVU452
 1761 006c 0028     		cmp	r0, #0
 1762 006e E2D1     		bne	.L139
 1763 0070 DCE7     		b	.L135
 1764              	.L155:
 1765 0072 00BF     		.align	2
 1766              	.L154:
 1767 0074 00000000 		.word	PersistentRam
 1768              		.cfi_endproc
 1769              	.LFE20:
 1771              		.section	.text.alpha_rcl,"ax",%progbits
 1772              		.align	1
 1773              		.p2align 2,,3
 1774              		.global	alpha_rcl
 1775              		.syntax unified
 1776              		.thumb
 1777              		.thumb_func
 1778              		.fpu fpv4-sp-d16
 1780              	alpha_rcl:
 1781              	.LVL154:
 1782              	.LFB21:
 249:src/alpha.c   **** 
 250:src/alpha.c   **** /* RCL register containing alpha characters into Alpha
 251:src/alpha.c   ****  */
 252:src/alpha.c   **** void alpha_rcl(unsigned int arg, enum rarg op) {
 1783              		.loc 1 252 48 is_stmt 1 view -0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 16
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
 253:src/alpha.c   **** 	char buf[12];
 1787              		.loc 1 253 2 view .LVU454
 254:src/alpha.c   **** 
 255:src/alpha.c   **** 	add_string(alpha_rcl_s(arg, buf));
 1788              		.loc 1 255 2 view .LVU455
 252:src/alpha.c   **** 	char buf[12];
 1789              		.loc 1 252 48 is_stmt 0 view .LVU456
 1790 0000 00B5     		push	{lr}
 1791              		.cfi_def_cfa_offset 4
 1792              		.cfi_offset 14, -4
 1793 0002 85B0     		sub	sp, sp, #20
 1794              		.cfi_def_cfa_offset 24
 1795              		.loc 1 255 13 view .LVU457
 1796 0004 01A9     		add	r1, sp, #4
 1797              	.LVL155:
 1798              		.loc 1 255 13 view .LVU458
 1799 0006 FFF7FEFF 		bl	alpha_rcl_s
 1800              	.LVL156:
 1801              		.loc 1 255 2 view .LVU459
 1802 000a FFF7FEFF 		bl	add_string
 1803              	.LVL157:
 256:src/alpha.c   **** }
ARM GAS  /tmp/ccJb2xJE.s 			page 41


 1804              		.loc 1 256 1 view .LVU460
 1805 000e 05B0     		add	sp, sp, #20
 1806              		.cfi_def_cfa_offset 4
 1807              		@ sp needed
 1808 0010 5DF804FB 		ldr	pc, [sp], #4
 1809              		.cfi_endproc
 1810              	.LFE21:
 1812              		.section	.text.alpha_onoff,"ax",%progbits
 1813              		.align	1
 1814              		.p2align 2,,3
 1815              		.global	alpha_onoff
 1816              		.syntax unified
 1817              		.thumb
 1818              		.thumb_func
 1819              		.fpu fpv4-sp-d16
 1821              	alpha_onoff:
 1822              	.LVL158:
 1823              	.LFB22:
 257:src/alpha.c   **** 
 258:src/alpha.c   **** /* Turn alpha mode on and off
 259:src/alpha.c   ****  */
 260:src/alpha.c   **** void alpha_onoff(enum nilop op) {
 1824              		.loc 1 260 33 is_stmt 1 view -0
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 0
 1827              		@ frame_needed = 0, uses_anonymous_args = 0
 1828              		@ link register save eliminated.
 261:src/alpha.c   **** 	State2.alphas = (op == OP_ALPHAON) ? 1 : 0;
 1829              		.loc 1 261 2 view .LVU462
 1830              		.loc 1 261 16 is_stmt 0 view .LVU463
 1831 0000 054B     		ldr	r3, .L159
 1832              		.loc 1 261 41 view .LVU464
 1833 0002 A0F17900 		sub	r0, #121
 1834              	.LVL159:
 1835              		.loc 1 261 16 view .LVU465
 1836 0006 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 1837              		.loc 1 261 41 view .LVU466
 1838 0008 B0FA80F0 		clz	r0, r0
 1839 000c 4009     		lsrs	r0, r0, #5
 1840              		.loc 1 261 16 view .LVU467
 1841 000e 60F3C302 		bfi	r2, r0, #3, #1
 1842 0012 9A75     		strb	r2, [r3, #22]
 262:src/alpha.c   **** }
 1843              		.loc 1 262 1 view .LVU468
 1844 0014 7047     		bx	lr
 1845              	.L160:
 1846 0016 00BF     		.align	2
 1847              	.L159:
 1848 0018 00000000 		.word	StateWhileOn
 1849              		.cfi_endproc
 1850              	.LFE22:
 1852              		.text
 1853              	.Letext0:
 1854              		.file 2 "src/decNumber/decContext.h"
 1855              		.file 3 "src/decNumber/decNumber.h"
 1856              		.file 4 "src/decNumber/decimal64.h"
 1857              		.file 5 "src/decNumber/decimal128.h"
ARM GAS  /tmp/ccJb2xJE.s 			page 42


 1858              		.file 6 "src/xeq.h"
 1859              		.file 7 "src/data.h"
 1860              		.file 8 "src/display.h"
 1861              		.file 9 "src/consts.h"
 1862              		.file 10 "src/int.h"
 1863              		.file 11 "src/decn.h"
ARM GAS  /tmp/ccJb2xJE.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 alpha.c
     /tmp/ccJb2xJE.s:18     .text.add_char:0000000000000000 $t
     /tmp/ccJb2xJE.s:26     .text.add_char:0000000000000000 add_char
     /tmp/ccJb2xJE.s:110    .text.add_char:0000000000000028 $d
     /tmp/ccJb2xJE.s:116    .text.add_string:0000000000000000 $t
     /tmp/ccJb2xJE.s:124    .text.add_string:0000000000000000 add_string
     /tmp/ccJb2xJE.s:236    .text.add_string:000000000000004c $d
     /tmp/ccJb2xJE.s:242    .text.clralpha:0000000000000000 $t
     /tmp/ccJb2xJE.s:250    .text.clralpha:0000000000000000 clralpha
     /tmp/ccJb2xJE.s:276    .text.clralpha:0000000000000010 $d
     /tmp/ccJb2xJE.s:282    .text.alpha_view_common:0000000000000000 $t
     /tmp/ccJb2xJE.s:290    .text.alpha_view_common:0000000000000000 alpha_view_common
     /tmp/ccJb2xJE.s:336    .text.alpha_view_common:000000000000001c $d
     /tmp/ccJb2xJE.s:344    .text.alpha_view:0000000000000000 $t
     /tmp/ccJb2xJE.s:352    .text.alpha_view:0000000000000000 alpha_view
     /tmp/ccJb2xJE.s:408    .text.alpha_view:0000000000000024 $d
     /tmp/ccJb2xJE.s:418    .text.alpha_view_reg:0000000000000000 $t
     /tmp/ccJb2xJE.s:426    .text.alpha_view_reg:0000000000000000 alpha_view_reg
     /tmp/ccJb2xJE.s:486    .text.alpha_view_reg:000000000000001c $d
     /tmp/ccJb2xJE.s:496    .text.cmdalpha:0000000000000000 $t
     /tmp/ccJb2xJE.s:504    .text.cmdalpha:0000000000000000 cmdalpha
     /tmp/ccJb2xJE.s:536    .text.multialpha:0000000000000000 $t
     /tmp/ccJb2xJE.s:544    .text.multialpha:0000000000000000 multialpha
     /tmp/ccJb2xJE.s:596    .text.alpha_ip:0000000000000000 $t
     /tmp/ccJb2xJE.s:604    .text.alpha_ip:0000000000000000 alpha_ip
     /tmp/ccJb2xJE.s:842    .text.alpha_ip:00000000000000e4 $d
     /tmp/ccJb2xJE.s:850    .text.alen:0000000000000000 $t
     /tmp/ccJb2xJE.s:858    .text.alen:0000000000000000 alen
     /tmp/ccJb2xJE.s:882    .text.alen:0000000000000010 $d
     /tmp/ccJb2xJE.s:887    .text.alpha_length:0000000000000000 $t
     /tmp/ccJb2xJE.s:895    .text.alpha_length:0000000000000000 alpha_length
     /tmp/ccJb2xJE.s:942    .text.alpha_length:000000000000001c $d
     /tmp/ccJb2xJE.s:947    .text.alpha_shift_l:0000000000000000 $t
     /tmp/ccJb2xJE.s:955    .text.alpha_shift_l:0000000000000000 alpha_shift_l
     /tmp/ccJb2xJE.s:1043   .text.alpha_shift_l:0000000000000038 $d
     /tmp/ccJb2xJE.s:1049   .text.alpha_shift_r:0000000000000000 $t
     /tmp/ccJb2xJE.s:1057   .text.alpha_shift_r:0000000000000000 alpha_shift_r
     /tmp/ccJb2xJE.s:1124   .text.alpha_shift_r:000000000000002c $d
     /tmp/ccJb2xJE.s:1130   .text.alpha_rot_r:0000000000000000 $t
     /tmp/ccJb2xJE.s:1138   .text.alpha_rot_r:0000000000000000 alpha_rot_r
     /tmp/ccJb2xJE.s:1250   .text.alpha_rot_r:0000000000000044 $d
     /tmp/ccJb2xJE.s:1256   .text.alpha_tox:0000000000000000 $t
     /tmp/ccJb2xJE.s:1264   .text.alpha_tox:0000000000000000 alpha_tox
     /tmp/ccJb2xJE.s:1319   .text.alpha_tox:0000000000000024 $d
     /tmp/ccJb2xJE.s:1324   .text.alpha_fromx:0000000000000000 $t
     /tmp/ccJb2xJE.s:1332   .text.alpha_fromx:0000000000000000 alpha_fromx
     /tmp/ccJb2xJE.s:1366   .text.alpha_reg:0000000000000000 $t
     /tmp/ccJb2xJE.s:1374   .text.alpha_reg:0000000000000000 alpha_reg
     /tmp/ccJb2xJE.s:1422   .text.alpha_sto:0000000000000000 $t
     /tmp/ccJb2xJE.s:1430   .text.alpha_sto:0000000000000000 alpha_sto
     /tmp/ccJb2xJE.s:1587   .text.alpha_sto:0000000000000060 $d
     /tmp/ccJb2xJE.s:1593   .text.alpha_rcl_s:0000000000000000 $t
     /tmp/ccJb2xJE.s:1601   .text.alpha_rcl_s:0000000000000000 alpha_rcl_s
     /tmp/ccJb2xJE.s:1767   .text.alpha_rcl_s:0000000000000074 $d
     /tmp/ccJb2xJE.s:1772   .text.alpha_rcl:0000000000000000 $t
     /tmp/ccJb2xJE.s:1780   .text.alpha_rcl:0000000000000000 alpha_rcl
ARM GAS  /tmp/ccJb2xJE.s 			page 44


     /tmp/ccJb2xJE.s:1813   .text.alpha_onoff:0000000000000000 $t
     /tmp/ccJb2xJE.s:1821   .text.alpha_onoff:0000000000000000 alpha_onoff
     /tmp/ccJb2xJE.s:1848   .text.alpha_onoff:0000000000000018 $d

UNDEFINED SYMBOLS
find_char
scopy
PersistentRam
xset
DispMsg
frozen_display
StateWhileOn
ShowRegister
set_entry
__aeabi_uldivmod
get_reg_n_int
extract_value
int_base
getRegister
decNumberFloor
decNumberMod
dn_to_int
dn_divide
dn_eq0
dn_minus
DIGITS
const_10
setX_int_sgn
xcopy
getX_int_sgn
format_reg
set_reg_n_int_sgn
word_size
get_reg_n_int_sgn

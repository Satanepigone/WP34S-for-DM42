<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 1
=======
ARM GAS  /tmp/ccCyL0em.s 			page 1
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"console.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.menu_line_str.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC3:
  20 0000 41626F75 		.ascii	"About >\000"
  20      74203E00 
  21              		.section	.text.menu_line_str,"ax",%progbits
  22              		.align	1
  23              		.p2align 2,,3
  24              		.global	menu_line_str
  25              		.arch armv7e-m
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  29              		.fpu fpv4-sp-d16
  31              	menu_line_str:
  32              	.LVL0:
  33              	.LFB4:
  34              		.file 1 "src/menu.c"
   1:src/menu.c    **** //#include <menu.h>
   2:src/menu.c    **** extern const char SvnRevision[4];
   3:src/menu.c    **** 
   4:src/menu.c    **** struct _menu UserMenu =
   5:src/menu.c    ****   {
   6:src/menu.c    ****     "User Menu", 
   7:src/menu.c    ****     {
   8:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
   9:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
  10:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
  11:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
  12:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
  13:src/menu.c    ****       { CMPLX_KEY, { K_MULTI, DOTS }, "CPX", "" },
  14:src/menu.c    ****     }
  15:src/menu.c    ****   };
  16:src/menu.c    **** 
  17:src/menu.c    **** const char* arrow_key_string = "--\015";
  18:src/menu.c    **** const char* cmplx_key_string = "CPX";
  19:src/menu.c    **** 
  20:src/menu.c    **** menu_name current_menu = 0;
  21:src/menu.c    **** menu_name last_menu = 0;
  22:src/menu.c    **** menu_name default_menu = 0;
  23:src/menu.c    **** 
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 2
=======
ARM GAS  /tmp/ccCyL0em.s 			page 2
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  24:src/menu.c    **** static void set_menu_label (const char *str, int smallp, int dotcol, int shifted);
  25:src/menu.c    **** 
  26:src/menu.c    **** 
  27:src/menu.c    **** 
  28:src/menu.c    **** /* 
  29:src/menu.c    ****  * System menu stuff
  30:src/menu.c    ****  */
  31:src/menu.c    **** 
  32:src/menu.c    **** #define MI_ABOUT_PGM 11
  33:src/menu.c    **** 
  34:src/menu.c    **** const uint8_t mid_menu[] = {
  35:src/menu.c    ****     MI_SYSTEM_ENTER,
  36:src/menu.c    ****     MI_MSC,
  37:src/menu.c    ****     MI_ABOUT_PGM,
  38:src/menu.c    ****     0 }; // Terminator
  39:src/menu.c    **** 
  40:src/menu.c    **** const smenu_t MID_MENU = { "System!",  mid_menu,   NULL, NULL };
  41:src/menu.c    **** 
  42:src/menu.c    **** void disp_about(void);
  43:src/menu.c    **** 
  44:src/menu.c    **** int run_menu_item(uint8_t line_id) {
  45:src/menu.c    ****   int ret = 0;
  46:src/menu.c    **** 
  47:src/menu.c    ****   switch(line_id) {
  48:src/menu.c    ****     case MI_ABOUT_PGM:
  49:src/menu.c    ****       disp_about();
  50:src/menu.c    ****       break;
  51:src/menu.c    **** 
  52:src/menu.c    ****      default:
  53:src/menu.c    ****       ret = MRET_UNIMPL;
  54:src/menu.c    ****       break;
  55:src/menu.c    ****   }
  56:src/menu.c    **** 
  57:src/menu.c    ****   return ret;
  58:src/menu.c    **** }
  59:src/menu.c    **** 
  60:src/menu.c    **** const char * menu_line_str(uint8_t line_id, char * s, const int slen) {
  35              		.loc 1 60 71 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  61:src/menu.c    ****   const char * ln;
  40              		.loc 1 61 3 view .LVU1
  62:src/menu.c    **** 
  63:src/menu.c    ****   switch(line_id) {
  41              		.loc 1 63 3 view .LVU2
  64:src/menu.c    **** 
  65:src/menu.c    ****   case MI_ABOUT_PGM:    ln = "About >";              break;
  66:src/menu.c    **** 
  67:src/menu.c    ****   default:
  68:src/menu.c    ****     ln = NULL;
  42              		.loc 1 68 8 is_stmt 0 view .LVU3
  43 0000 024B     		ldr	r3, .L5
  63:src/menu.c    **** 
  44              		.loc 1 63 3 view .LVU4
  45 0002 0B28     		cmp	r0, #11
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 3
=======
ARM GAS  /tmp/ccCyL0em.s 			page 3
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  69:src/menu.c    ****     break;
  70:src/menu.c    ****   }
  71:src/menu.c    **** 
  72:src/menu.c    ****   return ln;
  73:src/menu.c    **** }
  46              		.loc 1 73 1 view .LVU5
  47 0004 0CBF     		ite	eq
  48 0006 1846     		moveq	r0, r3
  49              	.LVL1:
  50              		.loc 1 73 1 view .LVU6
  51 0008 0020     		movne	r0, #0
  52 000a 7047     		bx	lr
  53              	.L6:
  54              		.align	2
  55              	.L5:
  56 000c 00000000 		.word	.LC3
  57              		.cfi_endproc
  58              	.LFE4:
  60              		.section	.text.set_menu_label.constprop.0,"ax",%progbits
  61              		.align	1
  62              		.p2align 2,,3
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	set_menu_label.constprop.0:
  69              	.LVL2:
  70              	.LFB37:
  74:src/menu.c    **** 
  75:src/menu.c    **** void disp_about() {
  76:src/menu.c    ****   char title[] = "WP 34C calculator for DM42: v     ";
  77:src/menu.c    **** 
  78:src/menu.c    ****   xcopy ((title + 29), SvnRevision, 4);
  79:src/menu.c    **** 
  80:src/menu.c    ****   lcd_clear_buf();
  81:src/menu.c    ****   lcd_writeClr(t24);
  82:src/menu.c    **** 
  83:src/menu.c    **** 
  84:src/menu.c    ****   lcd_setXY(t24, 0, 5);
  85:src/menu.c    ****   lcd_putsR(t24, title);
  86:src/menu.c    ****   lcd_setXY(t20, t24->x, t24->y);
  87:src/menu.c    ****   t20->newln = 1;
  88:src/menu.c    **** #ifdef TOP_ROW
  89:src/menu.c    ****   lcd_puts(t20, "With longer alpha display and top row,");
  90:src/menu.c    **** #elif defined(BIGGER_DISPLAY)
  91:src/menu.c    ****   lcd_puts(t20, "With a longer alpha display,");
  92:src/menu.c    **** #else
  93:src/menu.c    ****   lcd_puts(t20, "Same display layout as the original WP34S,");
  94:src/menu.c    **** #endif
  95:src/menu.c    ****   lcd_puts(t20, "and some annunciators renamed.");
  96:src/menu.c    ****   lcd_puts(t20, "Includes printing, stopwatch,");
  97:src/menu.c    ****   lcd_puts(t20, "entry RPN, extended file handling,");
  98:src/menu.c    ****   lcd_puts(t20, "user-defined menus, and");
  99:src/menu.c    ****   lcd_puts(t20, "complex lock mode.");
 100:src/menu.c    **** 
 101:src/menu.c    ****   t20->y += 5;
 102:src/menu.c    **** 
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 4
=======
ARM GAS  /tmp/ccCyL0em.s 			page 4
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 103:src/menu.c    ****   t20->bgfill = 1;
 104:src/menu.c    ****   lcd_putsR(t20, "Neither provided by          ");
 105:src/menu.c    ****   lcd_putsR(t20, "nor supported by SwissMicros.");
 106:src/menu.c    ****   t20->bgfill = 0;
 107:src/menu.c    ****   t20->newln = 0;
 108:src/menu.c    ****   
 109:src/menu.c    ****   t24->y = LCD_Y - lcd_lineHeight(t24)-5;
 110:src/menu.c    ****   t24->x = 20;
 111:src/menu.c    ****   lcd_printR(t24, "    Press EXIT key to continue...");
 112:src/menu.c    **** 
 113:src/menu.c    ****   lcd_refresh();
 114:src/menu.c    **** 
 115:src/menu.c    ****   wait_for_key_press();
 116:src/menu.c    **** }
 117:src/menu.c    **** 
 118:src/menu.c    **** /*
 119:src/menu.c    ****  * WP34s menu code
 120:src/menu.c    ****  */
 121:src/menu.c    **** 
 122:src/menu.c    **** void set_menu ( menu_name new_menu ) {
 123:src/menu.c    ****   menu_name m = current_menu;
 124:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 125:src/menu.c    ****     current_menu = default_menu;
 126:src/menu.c    ****   }
 127:src/menu.c    ****   else if (new_menu == M_Last) { // go to last menu
 128:src/menu.c    ****     current_menu = last_menu;
 129:src/menu.c    ****   }
 130:src/menu.c    ****   else {
 131:src/menu.c    ****     current_menu = new_menu; // change to new menu
 132:src/menu.c    ****   }
 133:src/menu.c    ****   if ( (m != M_Arrow) && (m != M_Alpha) ) last_menu = m;
 134:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 135:src/menu.c    **** }
 136:src/menu.c    **** 
 137:src/menu.c    **** void set_default_menu () {
 138:src/menu.c    ****   set_menu (default_menu);
 139:src/menu.c    **** }
 140:src/menu.c    **** 
 141:src/menu.c    **** void toggle_default_menu () {
 142:src/menu.c    ****   if (current_menu == M_Blank) {
 143:src/menu.c    ****     current_menu = default_menu = M_Blank2;
 144:src/menu.c    ****     return;
 145:src/menu.c    ****   }
 146:src/menu.c    ****   else if (current_menu == M_Blank2) {
 147:src/menu.c    ****     current_menu = default_menu = M_Blank; 
 148:src/menu.c    ****   }
 149:src/menu.c    ****   else {
 150:src/menu.c    ****     set_default_menu();
 151:src/menu.c    ****   }
 152:src/menu.c    **** }
 153:src/menu.c    **** 
 154:src/menu.c    **** menu_name get_menu () {
 155:src/menu.c    ****   return current_menu;
 156:src/menu.c    **** }
 157:src/menu.c    **** 
 158:src/menu.c    **** menu_name get_last_menu () {
 159:src/menu.c    ****   return last_menu;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 5
=======
ARM GAS  /tmp/ccCyL0em.s 			page 5
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 160:src/menu.c    **** }
 161:src/menu.c    **** 
 162:src/menu.c    **** void display_current_menu () {
 163:src/menu.c    ****   display_menu (get_current_menu_ref());
 164:src/menu.c    **** }
 165:src/menu.c    **** 
 166:src/menu.c    **** void set_last_menu () {
 167:src/menu.c    ****   set_menu (M_Last);
 168:src/menu.c    **** }
 169:src/menu.c    **** 
 170:src/menu.c    **** static unsigned char mdots[200][2];
 171:src/menu.c    **** 
 172:src/menu.c    **** static const struct _menu Menus[] = {
 173:src/menu.c    ****   {
 174:src/menu.c    ****     "M_Blank", // 0
 175:src/menu.c    ****     { 
 176:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 177:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 178:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 179:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 180:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 181:src/menu.c    ****       { CMPLX_KEY, { K_MULTI, DOTS }, "CPX", "" },
 182:src/menu.c    ****     }    
 183:src/menu.c    ****   },
 184:src/menu.c    ****   {
 185:src/menu.c    ****     "M_Clear", // 1
 186:src/menu.c    ****     { 
 187:src/menu.c    ****       { { K24, 1 }, { K_OP, OP_NIL | OP_CLPALL }, "CLProg", "CLPAll" },
 188:src/menu.c    ****       { { K24, 2 }, { K_OP, OP_NIL | OP_CLREG }, "CL\221", "CLReg" },
 189:src/menu.c    ****       { { K24, 3 }, { K_OP, OP_NIL | OP_CLRALPHA }, "CLx", "CL\006\240" },
 190:src/menu.c    ****       { { K_OP, OP_NIL | OP_CLSTK }, { K_OP, OP_NIL | OP_CLALL }, "CLStk", "CLAll" },
 191:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 192:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 193:src/menu.c    ****     }    
 194:src/menu.c    ****   },
 195:src/menu.c    ****   {
 196:src/menu.c    ****     "M_Disp", // 2
 197:src/menu.c    ****     { 
 198:src/menu.c    ****       { { K00, 3 }, { K05, 1 }, "ALL", "a b/c" },
 199:src/menu.c    ****       { { K01, 3 }, { K05, 2 }, "FIX", "d/c" },
 200:src/menu.c    ****       { { K02, 3 }, { K10, 1 }, "SCI", "H.MS" },
 201:src/menu.c    ****       { { K03, 3 }, { K11, 1 }, "ENG", "H.d" },
 202:src/menu.c    ****       { ARROW_KEY, { K62, 3 }, "--\015", "./," },
 203:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 204:src/menu.c    ****     }
 205:src/menu.c    ****   },
 206:src/menu.c    ****   {
 207:src/menu.c    ****     "M_Base", // 3
 208:src/menu.c    ****     { 
 209:src/menu.c    ****       { { K22, 1 }, { K22, 3 }, "BIN", "not" },
 210:src/menu.c    ****       { { K22, 2 }, { K31, 3 }, "OCT", "and" },
 211:src/menu.c    ****       { { K23, 1 }, { K32, 3 }, "DEC", "or" },
 212:src/menu.c    ****       { { K23, 2 }, { K33, 3 }, "HEX", "xor" },
 213:src/menu.c    ****       { ARROW_KEY, { K34, 3}, "--\015", "RMDR" },
 214:src/menu.c    ****       { CMPLX_KEY, { K11, 1}, "CPX", "H.d" },
 215:src/menu.c    ****     }
 216:src/menu.c    ****   },
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 6
=======
ARM GAS  /tmp/ccCyL0em.s 			page 6
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 217:src/menu.c    ****   {
 218:src/menu.c    ****     "M_Angles", // 4
 219:src/menu.c    ****     { 
 220:src/menu.c    ****       { { K10, 2 }, { K04, 1 }, "DEG", "P\015R" },
 221:src/menu.c    ****       { { K11, 2 }, { K04, 2 }, "RAD", "R\015P" },
 222:src/menu.c    ****       { { K12, 2 }, { K00, 1 }, "GRAD", "HYP" },
 223:src/menu.c    ****       { { K10, 1 }, { K11, 1 }, "H.MS", "H.d" },
 224:src/menu.c    ****       { ARROW_KEY, { K00, 2 }, "--\015", "HYP\235" },
 225:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 226:src/menu.c    ****     }
 227:src/menu.c    ****       
 228:src/menu.c    ****   },
 229:src/menu.c    ****   {
 230:src/menu.c    ****     "M_Misc", // 5
 231:src/menu.c    ****     { 
 232:src/menu.c    ****       { { K61, 1 }, { K32, 1 }, "|X|", "2\234" },
 233:src/menu.c    ****       { { K61, 2 }, { K32, 2 }, "RND", "Log\272" },
 234:src/menu.c    ****       { { K62, 1 }, { K33, 2 }, "IPart", "Log\213" },
 235:src/menu.c    ****       { { K62, 2 }, { K34, 2 }, "FPart", "||el" },
 236:src/menu.c    ****       { ARROW_KEY, { K54, 2 }, "--\015", "\203%" },
 237:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 238:src/menu.c    ****     }
 239:src/menu.c    ****   },
 240:src/menu.c    ****   {
 241:src/menu.c    ****     "M_Swap", // 6
 242:src/menu.c    ****     { 
 243:src/menu.c    ****       { { K21, 1 }, { K_OP, RARG_BASEOP(RARG_SHUFFLE) }, "Show\016", "[\027]" },
 244:src/menu.c    ****       { { K21, 2 }, NO_KEY, "Show\015", "" },
 245:src/menu.c    ****       { { K21, 3 }, { K_OP, RARG_BASEOP(RARG_SWAPZ) }, "x\027?", "z\027?" },
 246:src/menu.c    ****       { { K_OP, RARG_BASEOP(RARG_SWAPY) }, { K_OP, RARG_BASEOP(RARG_SWAPT) }, "y\027?", "t\027?" },
 247:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 248:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 249:src/menu.c    ****     }    
 250:src/menu.c    ****   },
 251:src/menu.c    ****   {
 252:src/menu.c    ****     "M_Program", // 7
 253:src/menu.c    ****     { 
 254:src/menu.c    ****       { { K63, 1 }, { K64, 1 }, "LBL", "DSE" },
 255:src/menu.c    ****       { { K63, 2 }, { K64, 2 }, "RTN", "ISG" },
 256:src/menu.c    ****       { { K61, 3 }, { K_OP, RARG_BASEOP(RARG_DEC) }, "Pause", "DEC" },
 257:src/menu.c    ****       { { K30, 3 }, { K_OP, RARG_BASEOP(RARG_INC) }, "GTO", "INC" },
 258:src/menu.c    ****       { ARROW_KEY, { K_OP, RARG_BASEOP(RARG_BACK) }, "--\015", "BACK" },
 259:src/menu.c    ****       { CMPLX_KEY, { K_OP, RARG_BASEOP(RARG_SKIP) }, "CPX", "SKIP" },
 260:src/menu.c    ****     }
 261:src/menu.c    ****   },
 262:src/menu.c    ****   {
 263:src/menu.c    ****     "M_Setup1", // 8
 264:src/menu.c    ****     { 
 265:src/menu.c    ****       { { K_EXIT, 0}, { K_SYS, 0 }, "EXIT", "System" },
 266:src/menu.c    ****       { { K_MULTI, HELP }, NO_KEY, "HELP", "" },
 267:src/menu.c    ****       { { K_MULTI, ONSTO }, { K_MULTI, WRTST}, "OnSTO", "SvRAM" },
 268:src/menu.c    ****       { { K_MULTI, ONRCL }, { K_MULTI, LDST}, "OnRCL", "LdRAM" },
 269:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 270:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 271:src/menu.c    ****     }
 272:src/menu.c    ****   },
 273:src/menu.c    ****   {
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 7
=======
ARM GAS  /tmp/ccCyL0em.s 			page 7
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 274:src/menu.c    ****     "M_Arrow", // 9
 275:src/menu.c    ****     { 
 276:src/menu.c    ****       { { K22, 1 }, { K10, 2 }, "\015Bin", "\015DEG" },
 277:src/menu.c    ****       { { K22, 2 }, { K11, 2 }, "\015Oct", "\015RAD" },
 278:src/menu.c    ****       { { K23, 1 }, { K12, 2 }, "\015Dec", "\015Grad" },
 279:src/menu.c    ****       { { K23, 2 }, { K10, 1 }, "\015Hex", "\015HMS" },
 280:src/menu.c    ****       { ARROW_KEY, { K11, 1 }, "--\015", "HMS\015" },
 281:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 282:src/menu.c    ****     }
 283:src/menu.c    ****   },
 284:src/menu.c    ****   {
 285:src/menu.c    ****     "M_Flags", // 10
 286:src/menu.c    ****     { 
 287:src/menu.c    ****       { { K50, 1 }, { K_OP, RARG_BASEOP(RARG_FS) }, "SF_", "FS?" },
 288:src/menu.c    ****       { { K50, 2 }, { K_OP, RARG_BASEOP(RARG_FC)}, "CF_", "FC?" },
 289:src/menu.c    ****       { { K51, 1 }, { K_OP, RARG_BASEOP(RARG_TEST_LT)}, "x=?", "x<?" },
 290:src/menu.c    ****       { { K51, 2 }, { K_OP, RARG_BASEOP(RARG_TEST_LE)}, "x\013?", "x<=?" },
 291:src/menu.c    ****       { ARROW_KEY, { K_OP, RARG_BASEOP(RARG_TEST_GE)}, "--\015", "x>=?" },
 292:src/menu.c    ****       { CMPLX_KEY, { K_OP, RARG_BASEOP(RARG_TEST_GT)}, "CPX", "x>?" },
 293:src/menu.c    ****     }
 294:src/menu.c    ****   },
 295:src/menu.c    ****   {
 296:src/menu.c    ****     "M_Prob", // 11
 297:src/menu.c    ****     { 
 298:src/menu.c    ****       { { K40, 3 }, { K_OP, OP_MON | OP_LNGAMMA }, "Fact!", "Ln\006\202" },
 299:src/menu.c    ****       { { K40, 1 }, { K41, 1 }, "Cy,x", "\224" }, // phi
 300:src/menu.c    ****       { { K40, 2 }, { K41, 2 }, "Py,x", "\224\235" }, // phi^-1
 301:src/menu.c    ****       { { K12, 1 }, { K_OP, OP_NIL | OP_STORANDOM } , "RAN#", "SEED" },
 302:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 303:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 304:src/menu.c    ****     }
 305:src/menu.c    ****   },
 306:src/menu.c    ****   {
 307:src/menu.c    ****     "M_Stats", // 12
 308:src/menu.c    ****     /*
 309:src/menu.c    ****      *xbar, sd;
 310:src/menu.c    ****      *yhat, xhat;
 311:src/menu.c    ****      *corr, L.R.;
 312:src/menu.c    ****      *best, linear;
 313:src/menu.c    ****      *ln, exp;
 314:src/menu.c    ****      *cmplx, power;
 315:src/menu.c    ****      *No, sums is already on g9.
 316:src/menu.c    ****      */
 317:src/menu.c    ****     { 
 318:src/menu.c    ****       { { K42, 1 }, { K42, 2 }, "\001", "S.D." },
 319:src/menu.c    ****       { { K43, 1 }, { K_OP, OP_MON | OP_xhat }, "y-hat", "x-hat" },
 320:src/menu.c    ****       { { K_OP, OP_NIL | OP_statR}, { K_OP, OP_NIL | OP_statLR}, "CORR", "L.R." },
 321:src/menu.c    ****       { { K_OP, OP_NIL | OP_BEST}, { K_OP, OP_NIL | OP_LOGF}, "BestF", "LogFit" },
 322:src/menu.c    ****       { { K_OP, OP_NIL | OP_LINF}, { K_OP, OP_NIL | OP_EXPF}, "Linear", "ExpFit" },
 323:src/menu.c    ****       { CMPLX_KEY, { K_OP, OP_NIL | OP_PWRF }, "CPX", "PwrFit" },
 324:src/menu.c    ****     }
 325:src/menu.c    ****   },
 326:src/menu.c    ****   {
 327:src/menu.c    ****     "M_Setup2", // 13
 328:src/menu.c    ****     { 
 329:src/menu.c    ****       { { K_MULTI, WRLIB}, NO_KEY, "SvLIB", "" },
 330:src/menu.c    ****       { { K_MULTI, LLIB }, NO_KEY, "LdLIB", "" },
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 8
=======
ARM GAS  /tmp/ccCyL0em.s 			page 8
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 331:src/menu.c    ****       { { K_MULTI, SVPRG }, { K_OP, OP_NIL | OP_PSTO }, "SvCPRG", "PSTO" },
 332:src/menu.c    ****       { { K_MULTI, LDPRG }, { K_OP, OP_NIL | OP_PRCL }, "LdPRG", "PRCL" },
 333:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 334:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 335:src/menu.c    ****     }
 336:src/menu.c    ****   },
 337:src/menu.c    ****   {
 338:src/menu.c    ****     "M_Solve", // 14
 339:src/menu.c    ****     { 
 340:src/menu.c    ****       { { K52, 1 }, { K_OP, RARG_BASEOP(RARG_DERIV)}, "SLV", "f'(x)" },
 341:src/menu.c    ****       { { K52, 2 }, { K_OP, RARG_BASEOP(RARG_2DERIV)}, "\004 dx", "f''(x)" },
 342:src/menu.c    ****       { { K53, 2 }, NO_KEY, "SUM", "" },
 343:src/menu.c    ****       { { K53, 1 }, NO_KEY, "PROD", "" },
 344:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 345:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 346:src/menu.c    ****     }
 347:src/menu.c    ****   },
 348:src/menu.c    ****   {
 349:src/menu.c    ****     "M_Blank2", // 15
 350:src/menu.c    ****     { 
 351:src/menu.c    ****       { { K64, 3 }, NO_KEY, "\221+", "" },
 352:src/menu.c    ****       { { K34, 1 }, NO_KEY, "1/X", "" },
 353:src/menu.c    ****       { { K44, 1 }, NO_KEY, "\003X", "" },
 354:src/menu.c    ****       { { K31, 2 }, NO_KEY, "LOG", "" },
 355:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 356:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 357:src/menu.c    ****     }    
 358:src/menu.c    ****   },
 359:src/menu.c    ****   {
 360:src/menu.c    ****     "M_Alpha", // 16
 361:src/menu.c    ****     { 
 362:src/menu.c    ****       { { K_OP, OP_NIL | OP_XTOALPHA }, { K_OP, OP_NIL | OP_ALPHATIME }, "X->\240", "\240TIME" },
 363:src/menu.c    ****       { { K_OP, OP_NIL | OP_ALPHATOX }, { K_OP, OP_NIL | OP_ALPHADATE }, "\240->X", "\240DATE" },
 364:src/menu.c    ****       { { K_OP, RARG_BASEOP(RARG_AIP) }, { K_OP, OP_NIL | OP_ALPHADAY }, "\240IP", "\240DAY" },
 365:src/menu.c    ****       { { K_OP, OP_NIL | OP_ALPHALEN }, { K_OP, OP_NIL | OP_ALPHAMONTH }, "\240LENG", "\240MNTH" },
 366:src/menu.c    ****       { ARROW_KEY, { K_ARROW, 1 }, "--\015", "" },
 367:src/menu.c    ****       { CMPLX_KEY, { K_CMPLX, 1 }, "CPX", "" },
 368:src/menu.c    ****     }    
 369:src/menu.c    ****   },
 370:src/menu.c    ****   {
 371:src/menu.c    ****     "M_C_Lock", // 17
 372:src/menu.c    ****     { 
 373:src/menu.c    ****       { { K40, 2 }, { K04, 2 }, "POLAR", "\015 P" },
 374:src/menu.c    ****       { { K40, 1 }, { K04, 1 }, "RECT", "\015 R" },
 375:src/menu.c    ****       { { K22, 1 }, { K22, 3 }, "+/-\006Im", "+/-\006Re" },
 376:src/menu.c    ****       { { K21, 2 }, { K00, 1 }, "Re\027Im", "HYP" },
 377:src/menu.c    ****       { ARROW_KEY, { K23, 1 }, "--\015", "\021\006\257" },
 378:src/menu.c    ****       { CMPLX_KEY, { K20, 1 }, "CPX", "\021\006CNST" },
 379:src/menu.c    ****     }    
 380:src/menu.c    ****   },
 381:src/menu.c    ****   {
 382:src/menu.c    ****     "M_Clear_C", // 18
 383:src/menu.c    ****     { 
 384:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 385:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 386:src/menu.c    ****       { { K24, 3 }, { K_OP, OP_NIL | OP_CLRALPHA }, "CLx", "CL\006\240" },
 387:src/menu.c    ****       { { K_OP, OP_NIL | OP_CLSTK }, NO_KEY, "CLStk", "" },
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 9
=======
ARM GAS  /tmp/ccCyL0em.s 			page 9
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 388:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 389:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 390:src/menu.c    ****     }    
 391:src/menu.c    ****   },
 392:src/menu.c    ****   {
 393:src/menu.c    ****     "M_Swap_C", // 19
 394:src/menu.c    ****     { 
 395:src/menu.c    ****       { { K21, 1 }, NO_KEY, "Show\016", "" },
 396:src/menu.c    ****       { { K21, 2 }, NO_KEY, "Show\015", "" },
 397:src/menu.c    ****       { { K21, 3 }, NO_KEY, "x\027?", "" },
 398:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 399:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 400:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 401:src/menu.c    ****     }    
 402:src/menu.c    ****   },
 403:src/menu.c    ****   {
 404:src/menu.c    ****     "M_Arrow_C", // 20
 405:src/menu.c    ****     { 
 406:src/menu.c    ****       { NO_KEY, { K10, 2 }, "", "DEG" },
 407:src/menu.c    ****       { NO_KEY, { K11, 2 }, "", "RAD" },
 408:src/menu.c    ****       { NO_KEY, { K12, 2 }, "", "Grad" },
 409:src/menu.c    ****       { NO_KEY, { K10, 1 }, "", "\015HMS" },
 410:src/menu.c    ****       { ARROW_KEY, { K11, 1 }, "--\015", "HMS\015" },
 411:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 412:src/menu.c    ****     }
 413:src/menu.c    ****   },
 414:src/menu.c    ****   {
 415:src/menu.c    ****     "M_Prob_C", // 21
 416:src/menu.c    ****     { 
 417:src/menu.c    ****       { { K40, 3 }, { K_OP, OP_CMON | OP_LNGAMMA }, "\024\006!", "\024\006Ln\006\202" },
 418:src/menu.c    ****       { { K_OP, OP_CDYA | OP_COMB }, NO_KEY, "\024\006Cy,x", "" },
 419:src/menu.c    ****       { { K_OP, OP_CDYA | OP_PERM }, NO_KEY, "\024\006Py,x", "" },
 420:src/menu.c    ****       { NO_KEY, NO_KEY , "", "" },
 421:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 422:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 423:src/menu.c    ****     }
 424:src/menu.c    ****   },
 425:src/menu.c    ****   {
 426:src/menu.c    ****     "M_Blank2_C", // 22
 427:src/menu.c    ****     { 
 428:src/menu.c    ****       { { K00, 1 }, NO_KEY, "HYP", "" },
 429:src/menu.c    ****       { { K34, 1 }, NO_KEY, "1/X", "" },
 430:src/menu.c    ****       { { K44, 1 }, NO_KEY, "\003X", "" },
 431:src/menu.c    ****       { { K31, 2 }, NO_KEY, "LOG", "" },
 432:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 433:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 434:src/menu.c    ****     }    
 435:src/menu.c    ****   },
 436:src/menu.c    ****   {
 437:src/menu.c    ****     "M_Misc_C", // 23
 438:src/menu.c    ****     { 
 439:src/menu.c    ****       { { K61, 1 }, { K32, 1 }, "|z|", "\0242\234" },
 440:src/menu.c    ****       { { K61, 2 }, { K32, 2 }, "RND", "\024Log\272" },
 441:src/menu.c    ****       { { K62, 1 }, { K33, 2 }, "0\015Re", "\024Log\213" },
 442:src/menu.c    ****       { { K62, 2 }, { K34, 2 }, "0\015Im", "\024||el" },
 443:src/menu.c    ****       { ARROW_KEY, { K44, 3 }, "--\015", "\024.\034" },
 444:src/menu.c    ****       { CMPLX_KEY, { K34, 3 }, "CPX", "\024./" },
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 10
=======
ARM GAS  /tmp/ccCyL0em.s 			page 10
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 445:src/menu.c    ****     }
 446:src/menu.c    ****   },
 447:src/menu.c    ****   {
 448:src/menu.c    ****     "M_Usermenu", // 24
 449:src/menu.c    ****     { 
 450:src/menu.c    ****       { { K_OP, 0x0000fb00  }, NO_KEY, "UMEN", "" },
 451:src/menu.c    ****       { { K_OP, 0x314dfb55 }, { K_OP, 0x344dfb55 }, "UM1", "UM4" },
 452:src/menu.c    ****       { { K_OP, 0x324dfb55 }, { K_OP, 0x354dfb55 }, "UM2", "UM5" },
 453:src/menu.c    ****       { { K_OP, 0x334dfb55 }, { K_OP, 0x364dfb55 }, "UM3", "UM6" },
 454:src/menu.c    ****       { ARROW_KEY, { K44, 3 }, "--\015", "" },
 455:src/menu.c    ****       { CMPLX_KEY, { K34, 3 }, "CPX", "" },
 456:src/menu.c    ****     }
 457:src/menu.c    ****   },
 458:src/menu.c    ****   {
 459:src/menu.c    ****     "M_Print", // 25
 460:src/menu.c    ****     { 
 461:src/menu.c    ****       { { K_OP, OP_NIL | OP_PRINT_ON  }, { K_OP, OP_NIL | OP_PRINT_OFF }, "\222\006On", "\222\006Of
 462:src/menu.c    ****       { { K_OP, RARG_BASEOP(RARG_PMODE) }, { K_OP, RARG_BASEOP(RARG_DBLSP) }, "\222\006Mode", "\222
 463:src/menu.c    ****       { { K_OP, OP_NIL | OP_PRINT_PGM }, { K_OP, OP_NIL | OP_PRINT_REGS }, "\222\006Prog", "\222\00
 464:src/menu.c    ****       { { K_OP, OP_NIL | OP_PRINT_STACK }, { K_OP, OP_NIL | OP_PRINT_SIGMA }, "\222\006Stk", "\222\
 465:src/menu.c    ****       { ARROW_KEY, { K_OP, OP_NIL | OP_PRINT_ALPHA }, "--\015", "\222\006\240" },
 466:src/menu.c    ****       { CMPLX_KEY, { K_OP, OP_NIL | OP_PRINT_ADV }, "CPX", "\222\006ADV" },
 467:src/menu.c    ****     }
 468:src/menu.c    ****   },
 469:src/menu.c    **** 
 470:src/menu.c    **** };  
 471:src/menu.c    **** 
 472:src/menu.c    **** /* This code is the set_status_sized code with small changes
 473:src/menu.c    ****  * and non-DM42 code removed.
 474:src/menu.c    ****  * MENU_WIDTH - width of menu item in "dots", not in pixels.
 475:src/menu.c    ****  */
 476:src/menu.c    **** #define MENU_WIDTH 32
 477:src/menu.c    **** 
 478:src/menu.c    **** static void set_menu_label (const char *str, int smallp, int dotcol, int shifted) {
  71              		.loc 1 478 13 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 544
  74              		@ frame_needed = 0, uses_anonymous_args = 0
 479:src/menu.c    ****   // dotcol is the number of the starting dot column
 480:src/menu.c    ****   // shifted is 1 if shifted
 481:src/menu.c    ****   unsigned short int posns[257];
  75              		.loc 1 481 3 view .LVU8
 482:src/menu.c    **** 
 483:src/menu.c    ****   // Mark posns as uninitialized, smallp must be 0 or 1 for this to work correctly.
 484:src/menu.c    ****   int posns_state = 255;
  76              		.loc 1 484 3 view .LVU9
 485:src/menu.c    **** 
 486:src/menu.c    ****   int x = dotcol;
  77              		.loc 1 486 3 view .LVU10
 478:src/menu.c    ****   // dotcol is the number of the starting dot column
  78              		.loc 1 478 13 is_stmt 0 view .LVU11
  79 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  80              		.cfi_def_cfa_offset 36
  81              		.cfi_offset 4, -36
  82              		.cfi_offset 5, -32
  83              		.cfi_offset 6, -28
  84              		.cfi_offset 7, -24
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 11
=======
ARM GAS  /tmp/ccCyL0em.s 			page 11
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  85              		.cfi_offset 8, -20
  86              		.cfi_offset 9, -16
  87              		.cfi_offset 10, -12
  88              		.cfi_offset 11, -8
  89              		.cfi_offset 14, -4
  90 0004 ADF5097D 		sub	sp, sp, #548
  91              		.cfi_def_cfa_offset 584
 478:src/menu.c    ****   // dotcol is the number of the starting dot column
  92              		.loc 1 478 13 view .LVU12
  93 0008 CDE90102 		strd	r0, r2, [sp, #4]
 487:src/menu.c    ****   int i, j, xmax;
 488:src/menu.c    ****   xmax = ((dotcol/MENU_WIDTH)+1)*MENU_WIDTH;
  94              		.loc 1 488 18 view .LVU13
  95 000c 0029     		cmp	r1, #0
  96 000e B4BF     		ite	lt
  97 0010 01F11F03 		addlt	r3, r1, #31
  98 0014 0B46     		movge	r3, r1
 489:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 490:src/menu.c    **** 
 491:src/menu.c    ****   forceDispPlot=0;
  99              		.loc 1 491 16 view .LVU14
 100 0016 4848     		ldr	r0, .L41
 101              	.LVL3:
 478:src/menu.c    ****   // dotcol is the number of the starting dot column
 102              		.loc 1 478 13 view .LVU15
 103 0018 0F46     		mov	r7, r1
 104              	.LVL4:
 487:src/menu.c    ****   int i, j, xmax;
 105              		.loc 1 487 3 is_stmt 1 view .LVU16
 488:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 106              		.loc 1 488 3 view .LVU17
 492:src/menu.c    **** 
 493:src/menu.c    **** #ifdef RP_PREFIX
 494:src/menu.c    ****   RectPolConv = 0;
 107              		.loc 1 494 15 is_stmt 0 view .LVU18
 108 001a 4849     		ldr	r1, .L41+4
 109              	.LVL5:
 491:src/menu.c    **** 
 110              		.loc 1 491 16 view .LVU19
 111 001c 0022     		movs	r2, #0
 112              	.LVL6:
 491:src/menu.c    **** 
 113              		.loc 1 491 16 view .LVU20
 114 001e 0270     		strb	r2, [r0]
 115              		.loc 1 494 15 view .LVU21
 116 0020 0A60     		str	r2, [r1]
 495:src/menu.c    **** #endif
 496:src/menu.c    ****   while (*str != '\0' && x <= xmax )  {
 117              		.loc 1 496 10 view .LVU22
 118 0022 019A     		ldr	r2, [sp, #4]
 119 0024 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 488:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 120              		.loc 1 488 30 view .LVU23
 121 0026 23F01F03 		bic	r3, r3, #31
 488:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 122              		.loc 1 488 8 view .LVU24
 123 002a 03F12009 		add	r9, r3, #32
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 12
=======
ARM GAS  /tmp/ccCyL0em.s 			page 12
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 124              	.LVL7:
 489:src/menu.c    **** 
 125              		.loc 1 489 3 is_stmt 1 view .LVU25
 491:src/menu.c    **** 
 126              		.loc 1 491 3 view .LVU26
 494:src/menu.c    **** #endif
 127              		.loc 1 494 3 view .LVU27
 128              		.loc 1 496 3 view .LVU28
 129              		.loc 1 496 9 view .LVU29
 130 002e 002D     		cmp	r5, #0
 131 0030 78D0     		beq	.L7
 132              		.loc 1 496 23 is_stmt 0 view .LVU30
 133 0032 4F45     		cmp	r7, r9
 134 0034 76DC     		bgt	.L7
 135              	.LBB39:
 497:src/menu.c    ****     int c;
 498:src/menu.c    ****     int width;
 499:src/menu.c    ****     unsigned char cmap[6];
 500:src/menu.c    **** 
 501:src/menu.c    ****     int real_width;
 502:src/menu.c    ****     int current_smallp;
 503:src/menu.c    **** 
 504:src/menu.c    ****     // A 007 byte followed by a mode byte changes the way the following character is printed.
 505:src/menu.c    ****     // Bit 7 (MSB) of the mode byte is currently unused and should be set to 1.
 506:src/menu.c    ****     // Bits 6-5: 00 -> don't change font
 507:src/menu.c    ****     //           01 -> (not used)
 508:src/menu.c    ****     //           10 -> use big font
 509:src/menu.c    ****     //           11 -> use small font
 510:src/menu.c    ****     // Bits 4-0: character will be considered this wide
 511:src/menu.c    ****     if (str[0] == '\007') {
 136              		.loc 1 511 8 view .LVU31
 137 0036 072D     		cmp	r5, #7
 138              	.LBE39:
 484:src/menu.c    **** 
 139              		.loc 1 484 7 view .LVU32
 140 0038 4FF0FF04 		mov	r4, #255
 141              	.LVL8:
 142              	.LBB56:
 497:src/menu.c    ****     int c;
 143              		.loc 1 497 5 is_stmt 1 view .LVU33
 498:src/menu.c    ****     unsigned char cmap[6];
 144              		.loc 1 498 5 view .LVU34
 499:src/menu.c    **** 
 145              		.loc 1 499 5 view .LVU35
 501:src/menu.c    ****     int current_smallp;
 146              		.loc 1 501 5 view .LVU36
 502:src/menu.c    **** 
 147              		.loc 1 502 5 view .LVU37
 148              		.loc 1 511 5 view .LVU38
 512:src/menu.c    ****       width = str[1] & 0x1F;
 513:src/menu.c    ****       switch (str[1] & 0x60) {
 514:src/menu.c    ****       default:
 515:src/menu.c    ****       case 0x00:	current_smallp = smallp;
 516:src/menu.c    **** 	break;
 517:src/menu.c    ****       case 0x40:	current_smallp = 0;
 518:src/menu.c    **** 	break;
 519:src/menu.c    ****       case 0x60:	current_smallp = 1;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 13
=======
ARM GAS  /tmp/ccCyL0em.s 			page 13
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 149              		.loc 1 519 33 is_stmt 0 view .LVU39
 150 003c 4FF0010A 		mov	r10, #1
 511:src/menu.c    ****       width = str[1] & 0x1F;
 151              		.loc 1 511 8 view .LVU40
 152 0040 64D1     		bne	.L11
 153              	.LVL9:
 154              	.L39:
 512:src/menu.c    ****       width = str[1] & 0x1F;
 155              		.loc 1 512 7 is_stmt 1 view .LVU41
 512:src/menu.c    ****       width = str[1] & 0x1F;
 156              		.loc 1 512 18 is_stmt 0 view .LVU42
 157 0042 019B     		ldr	r3, [sp, #4]
 158 0044 5E78     		ldrb	r6, [r3, #1]	@ zero_extendqisi2
 159 0046 06F06003 		and	r3, r6, #96
 513:src/menu.c    ****       default:
 160              		.loc 1 513 7 view .LVU43
 161 004a 402B     		cmp	r3, #64
 512:src/menu.c    ****       width = str[1] & 0x1F;
 162              		.loc 1 512 13 view .LVU44
 163 004c 06F01F06 		and	r6, r6, #31
 164              	.LVL10:
 513:src/menu.c    ****       default:
 165              		.loc 1 513 7 is_stmt 1 view .LVU45
 166 0050 6CD0     		beq	.L34
 167 0052 602B     		cmp	r3, #96
 168 0054 6AD1     		bne	.L34
 169              		.loc 1 519 18 view .LVU46
 170              	.LVL11:
 520:src/menu.c    **** 	break;
 171              		.loc 1 520 2 view .LVU47
 521:src/menu.c    ****       }
 522:src/menu.c    ****       c = (unsigned char) str[2] + (current_smallp ? 256 : 0);
 172              		.loc 1 522 7 view .LVU48
 173              		.loc 1 522 11 is_stmt 0 view .LVU49
 174 0056 019B     		ldr	r3, [sp, #4]
 175 0058 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 519:src/menu.c    **** 	break;
 176              		.loc 1 519 33 view .LVU50
 177 005a 0123     		movs	r3, #1
 178 005c 0093     		str	r3, [sp]
 179 005e 00F58075 		add	r5, r0, #256
 180              	.LVL12:
 181              	.L15:
 523:src/menu.c    ****       str += 3;
 182              		.loc 1 523 7 is_stmt 1 view .LVU51
 524:src/menu.c    **** 
 525:src/menu.c    ****       real_width = charlengths(c);
 183              		.loc 1 525 20 is_stmt 0 view .LVU52
 184 0062 2846     		mov	r0, r5
 185 0064 FFF7FEFF 		bl	charlengths
 186              	.LVL13:
 523:src/menu.c    ****       str += 3;
 187              		.loc 1 523 11 view .LVU53
 188 0068 019B     		ldr	r3, [sp, #4]
 189 006a 0333     		adds	r3, r3, #3
 190 006c 0193     		str	r3, [sp, #4]
 191              	.LVL14:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 14
=======
ARM GAS  /tmp/ccCyL0em.s 			page 14
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 192              		.loc 1 525 7 is_stmt 1 view .LVU54
 526:src/menu.c    ****     } else {
 527:src/menu.c    ****       c = (unsigned char) *str++ + offset;
 528:src/menu.c    ****       real_width = width = charlengths(c);
 529:src/menu.c    ****       current_smallp = smallp;
 530:src/menu.c    ****     }
 531:src/menu.c    **** 
 532:src/menu.c    ****     if (x + real_width > xmax)
 193              		.loc 1 532 5 view .LVU55
 194              		.loc 1 532 11 is_stmt 0 view .LVU56
 195 006e C319     		adds	r3, r0, r7
 196              	.LVL15:
 197              		.loc 1 532 8 view .LVU57
 198 0070 9945     		cmp	r9, r3
 199 0072 57DB     		blt	.L7
 200              	.L40:
 533:src/menu.c    ****       break;
 534:src/menu.c    **** 
 535:src/menu.c    ****     if (posns_state != current_smallp) {
 201              		.loc 1 535 5 is_stmt 1 view .LVU58
 202              		.loc 1 535 8 is_stmt 0 view .LVU59
 203 0074 009B     		ldr	r3, [sp]
 204 0076 A342     		cmp	r3, r4
 536:src/menu.c    ****       findlengths(posns, current_smallp);
 205              		.loc 1 536 7 view .LVU60
 206 0078 07AB     		add	r3, sp, #28
 535:src/menu.c    ****       findlengths(posns, current_smallp);
 207              		.loc 1 535 8 view .LVU61
 208 007a 05D0     		beq	.L18
 209              		.loc 1 536 7 is_stmt 1 view .LVU62
 210 007c 1846     		mov	r0, r3
 211              	.LVL16:
 212              		.loc 1 536 7 is_stmt 0 view .LVU63
 213 007e 0099     		ldr	r1, [sp]
 214 0080 0393     		str	r3, [sp, #12]
 215 0082 FFF7FEFF 		bl	findlengths
 216              	.LVL17:
 217 0086 039B     		ldr	r3, [sp, #12]
 537:src/menu.c    ****       posns_state = current_smallp;
 218              		.loc 1 537 7 is_stmt 1 view .LVU64
 219              	.LVL18:
 220              	.L18:
 538:src/menu.c    ****     }
 539:src/menu.c    ****     unpackchar(c, cmap, current_smallp, posns); // cmap contains a row of c in each element
 221              		.loc 1 539 5 view .LVU65
 222 0088 009A     		ldr	r2, [sp]
 223 008a 2846     		mov	r0, r5
 224 008c 05A9     		add	r1, sp, #20
 225 008e FFF7FEFF 		bl	unpackchar
 226              	.LVL19:
 540:src/menu.c    **** 
 541:src/menu.c    ****     for (i=0; i<6; i++) {// rows
 227              		.loc 1 541 5 view .LVU66
 228              		.loc 1 541 15 view .LVU67
 229 0092 029B     		ldr	r3, [sp, #8]
 230 0094 03EB4704 		add	r4, r3, r7, lsl #1
 231 0098 294B     		ldr	r3, .L41+8
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 15
=======
ARM GAS  /tmp/ccCyL0em.s 			page 15
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 232 009a 0DF1140B 		add	fp, sp, #20
 233 009e 1C44     		add	r4, r4, r3
 539:src/menu.c    **** 
 234              		.loc 1 539 5 is_stmt 0 view .LVU68
 235 00a0 4FF0050E 		mov	lr, #5
 236 00a4 A9EB0705 		sub	r5, r9, r7
 237              	.LVL20:
 238              	.L19:
 542:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 239              		.loc 1 542 17 is_stmt 1 view .LVU69
 240              		.loc 1 542 7 is_stmt 0 view .LVU70
 241 00a8 002E     		cmp	r6, #0
 242 00aa 1FDD     		ble	.L25
 543:src/menu.c    **** 	if (x+j >= xmax)
 243              		.loc 1 543 2 is_stmt 1 view .LVU71
 244              		.loc 1 543 5 is_stmt 0 view .LVU72
 245 00ac B945     		cmp	r9, r7
 246 00ae 1DDD     		ble	.L25
 247              	.LBB40:
 248              	.LBB41:
 249              	.LBB42:
 250              	.LBB43:
 544:src/menu.c    **** 	  break;
 545:src/menu.c    **** 	mdot(x+j, 5-i, shifted, (cmap[i] & (1 << j))?1:0); // set or reset dot at col x+j, row i
 546:src/menu.c    ****       }
 547:src/menu.c    ****     }
 548:src/menu.c    ****     x += width;
 549:src/menu.c    ****   }
 550:src/menu.c    **** }
 551:src/menu.c    **** 
 552:src/menu.c    **** 
 553:src/menu.c    **** /* Determine the pixel length of the string if it were displayed.
 554:src/menu.c    **** 
 555:src/menu.c    **** int pixel_length(const char *s, int smallp)
 556:src/menu.c    **** {
 557:src/menu.c    ****   int len = 0;
 558:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 559:src/menu.c    ****   while (*s != '\0') {
 560:src/menu.c    ****     if (s[0] == '\007') {
 561:src/menu.c    ****       len += s[1] & 0x1F;
 562:src/menu.c    ****       s += 3;
 563:src/menu.c    ****       continue;
 564:src/menu.c    ****     }
 565:src/menu.c    ****     len += charlengths( (unsigned char) *s++ + offset );
 566:src/menu.c    ****   }
 567:src/menu.c    ****   return len;
 568:src/menu.c    **** }
 569:src/menu.c    **** */
 570:src/menu.c    **** 
 571:src/menu.c    **** 
 572:src/menu.c    **** void mdot(int i, int j, int s, int on) { // Column i, row j, state on
 573:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 574:src/menu.c    ****   if (on) {
 575:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 576:src/menu.c    ****   }
 577:src/menu.c    ****   else {
 578:src/menu.c    ****     mdots[i][s] &= ~( 1 << j );
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 16
=======
ARM GAS  /tmp/ccCyL0em.s 			page 16
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 251              		.loc 1 578 25 view .LVU73
 252 00b0 0AFA0EFC 		lsl	ip, r10, lr
 253              		.loc 1 578 17 view .LVU74
 254 00b4 4FFA8CFC 		sxtb	ip, ip
 255              	.LBE43:
 256              	.LBE42:
 257              	.LBE41:
 258              	.LBE40:
 545:src/menu.c    ****       }
 259              		.loc 1 545 31 view .LVU75
 260 00b8 9BF80000 		ldrb	r0, [fp]	@ zero_extendqisi2
 261              	.LBB53:
 262              	.LBB50:
 263              	.LBB47:
 264              	.LBB44:
 265              		.loc 1 578 17 view .LVU76
 266 00bc 6FEA0C08 		mvn	r8, ip
 267              	.LBE44:
 268              	.LBE47:
 269              	.LBE50:
 270              	.LBE53:
 542:src/menu.c    **** 	if (x+j >= xmax)
 271              		.loc 1 542 13 view .LVU77
 272 00c0 0023     		movs	r3, #0
 273 00c2 01E0     		b	.L20
 274              	.LVL21:
 275              	.L24:
 543:src/menu.c    **** 	  break;
 276              		.loc 1 543 5 view .LVU78
 277 00c4 9D42     		cmp	r5, r3
 278 00c6 11D0     		beq	.L25
 279              	.LVL22:
 280              	.L20:
 545:src/menu.c    ****       }
 281              		.loc 1 545 2 is_stmt 1 view .LVU79
 282              	.LBB54:
 283              	.LBI40:
 572:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 284              		.loc 1 572 6 view .LVU80
 285              	.LBB51:
 573:src/menu.c    ****   if (on) {
 286              		.loc 1 573 3 view .LVU81
 287              	.LBB48:
 288              	.LBI42:
 572:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 289              		.loc 1 572 6 view .LVU82
 290              	.LBB45:
 574:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 291              		.loc 1 574 3 view .LVU83
 292              	.LBE45:
 293              	.LBE48:
 573:src/menu.c    ****   if (on) {
 294              		.loc 1 573 6 is_stmt 0 view .LVU84
 295 00c8 DA19     		adds	r2, r3, r7
 296              	.LVL23:
 573:src/menu.c    ****   if (on) {
 297              		.loc 1 573 6 view .LVU85
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 17
=======
ARM GAS  /tmp/ccCyL0em.s 			page 17
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 298 00ca C72A     		cmp	r2, #199
 299              	.LBE51:
 300              	.LBE54:
 545:src/menu.c    ****       }
 301              		.loc 1 545 46 view .LVU86
 302 00cc 40FA03F1 		asr	r1, r0, r3
 303              	.LBB55:
 304              	.LBB52:
 573:src/menu.c    ****   if (on) {
 305              		.loc 1 573 6 view .LVU87
 306 00d0 09D8     		bhi	.L22
 307              	.LBB49:
 308              	.LBB46:
 575:src/menu.c    ****   }
 309              		.loc 1 575 5 is_stmt 1 view .LVU88
 310              		.loc 1 578 5 view .LVU89
 575:src/menu.c    ****   }
 311              		.loc 1 575 17 is_stmt 0 view .LVU90
 312 00d2 14F81320 		ldrb	r2, [r4, r3, lsl #1]	@ zero_extendqisi2
 313              	.LVL24:
 574:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 314              		.loc 1 574 6 view .LVU91
 315 00d6 C907     		lsls	r1, r1, #31
 575:src/menu.c    ****   }
 316              		.loc 1 575 17 view .LVU92
 317 00d8 4CBF     		ite	mi
 318 00da 4CEA0202 		orrmi	r2, ip, r2
 319              		.loc 1 578 17 view .LVU93
 320 00de 08EA0202 		andpl	r2, r8, r2
 321 00e2 04F81320 		strb	r2, [r4, r3, lsl #1]
 322              	.L22:
 323              	.LBE46:
 324              	.LBE49:
 325              	.LBE52:
 326              	.LBE55:
 543:src/menu.c    **** 	  break;
 327              		.loc 1 543 2 is_stmt 1 view .LVU94
 328              	.LVL25:
 542:src/menu.c    **** 	if (x+j >= xmax)
 329              		.loc 1 542 26 view .LVU95
 542:src/menu.c    **** 	if (x+j >= xmax)
 330              		.loc 1 542 27 is_stmt 0 view .LVU96
 331 00e6 0133     		adds	r3, r3, #1
 332              	.LVL26:
 542:src/menu.c    **** 	if (x+j >= xmax)
 333              		.loc 1 542 17 is_stmt 1 view .LVU97
 542:src/menu.c    **** 	if (x+j >= xmax)
 334              		.loc 1 542 7 is_stmt 0 view .LVU98
 335 00e8 B342     		cmp	r3, r6
 336 00ea EBD1     		bne	.L24
 337              	.LVL27:
 338              	.L25:
 541:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 339              		.loc 1 541 20 is_stmt 1 view .LVU99
 541:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 340              		.loc 1 541 15 view .LVU100
 341 00ec 0EF1FF3E 		add	lr, lr, #-1
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 18
=======
ARM GAS  /tmp/ccCyL0em.s 			page 18
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 541:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 342              		.loc 1 541 5 is_stmt 0 view .LVU101
 343 00f0 BEF1FF3F 		cmp	lr, #-1
 344 00f4 0BF1010B 		add	fp, fp, #1
 345              	.LVL28:
 541:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 346              		.loc 1 541 5 view .LVU102
 347 00f8 D6D1     		bne	.L19
 548:src/menu.c    ****   }
 348              		.loc 1 548 5 is_stmt 1 view .LVU103
 349              	.LBE56:
 496:src/menu.c    ****     int c;
 350              		.loc 1 496 10 is_stmt 0 view .LVU104
 351 00fa 019B     		ldr	r3, [sp, #4]
 352 00fc 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 353              	.LBB57:
 548:src/menu.c    ****   }
 354              		.loc 1 548 7 view .LVU105
 355 00fe 3744     		add	r7, r7, r6
 356              	.LVL29:
 548:src/menu.c    ****   }
 357              		.loc 1 548 7 view .LVU106
 358              	.LBE57:
 496:src/menu.c    ****     int c;
 359              		.loc 1 496 9 is_stmt 1 view .LVU107
 360 0100 85B1     		cbz	r5, .L7
 496:src/menu.c    ****     int c;
 361              		.loc 1 496 23 is_stmt 0 view .LVU108
 362 0102 B945     		cmp	r9, r7
 363 0104 0EDB     		blt	.L7
 364              	.LBB58:
 511:src/menu.c    ****       width = str[1] & 0x1F;
 365              		.loc 1 511 8 view .LVU109
 366 0106 072D     		cmp	r5, #7
 367              	.LBE58:
 368 0108 009C     		ldr	r4, [sp]
 369              	.LBB59:
 497:src/menu.c    ****     int width;
 370              		.loc 1 497 5 is_stmt 1 view .LVU110
 498:src/menu.c    ****     unsigned char cmap[6];
 371              		.loc 1 498 5 view .LVU111
 499:src/menu.c    **** 
 372              		.loc 1 499 5 view .LVU112
 501:src/menu.c    ****     int current_smallp;
 373              		.loc 1 501 5 view .LVU113
 502:src/menu.c    **** 
 374              		.loc 1 502 5 view .LVU114
 511:src/menu.c    ****       width = str[1] & 0x1F;
 375              		.loc 1 511 5 view .LVU115
 511:src/menu.c    ****       width = str[1] & 0x1F;
 376              		.loc 1 511 8 is_stmt 0 view .LVU116
 377 010a 9AD0     		beq	.L39
 378              	.LVL30:
 379              	.L11:
 527:src/menu.c    ****       real_width = width = charlengths(c);
 380              		.loc 1 527 7 is_stmt 1 view .LVU117
 528:src/menu.c    ****       current_smallp = smallp;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 19
=======
ARM GAS  /tmp/ccCyL0em.s 			page 19
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 381              		.loc 1 528 28 is_stmt 0 view .LVU118
 382 010c 2846     		mov	r0, r5
 383 010e FFF7FEFF 		bl	charlengths
 384              	.LVL31:
 527:src/menu.c    ****       real_width = width = charlengths(c);
 385              		.loc 1 527 31 view .LVU119
 386 0112 019B     		ldr	r3, [sp, #4]
 387 0114 0133     		adds	r3, r3, #1
 388 0116 0193     		str	r3, [sp, #4]
 389              	.LVL32:
 528:src/menu.c    ****       current_smallp = smallp;
 390              		.loc 1 528 7 is_stmt 1 view .LVU120
 529:src/menu.c    ****     }
 391              		.loc 1 529 7 view .LVU121
 529:src/menu.c    ****     }
 392              		.loc 1 529 22 is_stmt 0 view .LVU122
 393 0118 0023     		movs	r3, #0
 394              	.LVL33:
 529:src/menu.c    ****     }
 395              		.loc 1 529 22 view .LVU123
 396 011a 0093     		str	r3, [sp]
 397              	.LVL34:
 532:src/menu.c    ****       break;
 398              		.loc 1 532 11 view .LVU124
 399 011c C319     		adds	r3, r0, r7
 400              	.LVL35:
 532:src/menu.c    ****       break;
 401              		.loc 1 532 8 view .LVU125
 402 011e 9945     		cmp	r9, r3
 528:src/menu.c    ****       current_smallp = smallp;
 403              		.loc 1 528 28 view .LVU126
 404 0120 0646     		mov	r6, r0
 532:src/menu.c    ****       break;
 405              		.loc 1 532 5 is_stmt 1 view .LVU127
 532:src/menu.c    ****       break;
 406              		.loc 1 532 8 is_stmt 0 view .LVU128
 407 0122 A7DA     		bge	.L40
 408              	.LVL36:
 409              	.L7:
 532:src/menu.c    ****       break;
 410              		.loc 1 532 8 view .LVU129
 411              	.LBE59:
 550:src/menu.c    **** 
 412              		.loc 1 550 1 view .LVU130
 413 0124 0DF5097D 		add	sp, sp, #548
 414              		.cfi_remember_state
 415              		.cfi_def_cfa_offset 36
 416              		@ sp needed
 417 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 418              	.LVL37:
 419              	.L34:
 420              		.cfi_restore_state
 421              	.LBB60:
 522:src/menu.c    ****       str += 3;
 422              		.loc 1 522 7 is_stmt 1 view .LVU131
 522:src/menu.c    ****       str += 3;
 423              		.loc 1 522 11 is_stmt 0 view .LVU132
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 20
=======
ARM GAS  /tmp/ccCyL0em.s 			page 20
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 424 012c 019B     		ldr	r3, [sp, #4]
 425 012e 9D78     		ldrb	r5, [r3, #2]	@ zero_extendqisi2
 515:src/menu.c    **** 	break;
 426              		.loc 1 515 33 view .LVU133
 427 0130 0023     		movs	r3, #0
 428 0132 0093     		str	r3, [sp]
 429 0134 95E7     		b	.L15
 430              	.L42:
 431 0136 00BF     		.align	2
 432              	.L41:
 433 0138 00000000 		.word	forceDispPlot
 434 013c 00000000 		.word	RectPolConv
 435 0140 00000000 		.word	.LANCHOR0
 436              	.LBE60:
 437              		.cfi_endproc
 438              	.LFE37:
 440              		.section	.rodata.disp_about.str1.4,"aMS",%progbits,1
 441              		.align	2
 442              	.LC5:
 443 0000 57697468 		.ascii	"With longer alpha display and top row,\000"
 443      206C6F6E 
 443      67657220 
 443      616C7068 
 443      61206469 
 444 0027 00       		.align	2
 445              	.LC6:
 446 0028 616E6420 		.ascii	"and some annunciators renamed.\000"
 446      736F6D65 
 446      20616E6E 
 446      756E6369 
 446      61746F72 
 447 0047 00       		.align	2
 448              	.LC7:
 449 0048 496E636C 		.ascii	"Includes printing, stopwatch,\000"
 449      75646573 
 449      20707269 
 449      6E74696E 
 449      672C2073 
 450 0066 0000     		.align	2
 451              	.LC8:
 452 0068 656E7472 		.ascii	"entry RPN, extended file handling,\000"
 452      79205250 
 452      4E2C2065 
 452      7874656E 
 452      64656420 
 453 008b 00       		.align	2
 454              	.LC9:
 455 008c 75736572 		.ascii	"user-defined menus, and\000"
 455      2D646566 
 455      696E6564 
 455      206D656E 
 455      75732C20 
 456              		.align	2
 457              	.LC10:
 458 00a4 636F6D70 		.ascii	"complex lock mode.\000"
 458      6C657820 
 458      6C6F636B 
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 21
=======
ARM GAS  /tmp/ccCyL0em.s 			page 21
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 458      206D6F64 
 458      652E00
 459 00b7 00       		.align	2
 460              	.LC11:
 461 00b8 4E656974 		.ascii	"Neither provided by          \000"
 461      68657220 
 461      70726F76 
 461      69646564 
 461      20627920 
 462 00d6 0000     		.align	2
 463              	.LC12:
 464 00d8 6E6F7220 		.ascii	"nor supported by SwissMicros.\000"
 464      73757070 
 464      6F727465 
 464      64206279 
 464      20537769 
 465 00f6 0000     		.align	2
 466              	.LC13:
 467 00f8 20202020 		.ascii	"    Press EXIT key to continue...\000"
 467      50726573 
 467      73204558 
 467      4954206B 
 467      65792074 
 468 011a 0000     		.align	2
 469              	.LC4:
 470 011c 57502033 		.ascii	"WP 34C calculator for DM42: v     \000"
 470      34432063 
 470      616C6375 
 470      6C61746F 
 470      7220666F 
 471              		.section	.text.disp_about,"ax",%progbits
 472              		.align	1
 473              		.p2align 2,,3
 474              		.global	disp_about
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu fpv4-sp-d16
 480              	disp_about:
 481              	.LFB5:
  75:src/menu.c    ****   char title[] = "WP 34C calculator for DM42: v     ";
 482              		.loc 1 75 19 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 40
 485              		@ frame_needed = 0, uses_anonymous_args = 0
  76:src/menu.c    **** 
 486              		.loc 1 76 3 view .LVU135
  75:src/menu.c    ****   char title[] = "WP 34C calculator for DM42: v     ";
 487              		.loc 1 75 19 is_stmt 0 view .LVU136
 488 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 489              		.cfi_def_cfa_offset 24
 490              		.cfi_offset 4, -24
 491              		.cfi_offset 5, -20
 492              		.cfi_offset 6, -16
 493              		.cfi_offset 7, -12
 494              		.cfi_offset 8, -8
 495              		.cfi_offset 14, -4
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 22
=======
ARM GAS  /tmp/ccCyL0em.s 			page 22
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  76:src/menu.c    **** 
 496              		.loc 1 76 8 view .LVU137
 497 0004 334E     		ldr	r6, .L45
  81:src/menu.c    **** 
 498              		.loc 1 81 3 view .LVU138
 499 0006 344C     		ldr	r4, .L45+4
  84:src/menu.c    ****   lcd_putsR(t24, title);
 500              		.loc 1 84 3 view .LVU139
 501 0008 DFF81481 		ldr	r8, .L45+76
  85:src/menu.c    ****   lcd_setXY(t20, t24->x, t24->y);
 502              		.loc 1 85 3 view .LVU140
 503 000c 334F     		ldr	r7, .L45+8
  76:src/menu.c    **** 
 504              		.loc 1 76 8 view .LVU141
 505 000e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
  75:src/menu.c    ****   char title[] = "WP 34C calculator for DM42: v     ";
 506              		.loc 1 75 19 view .LVU142
 507 0010 8AB0     		sub	sp, sp, #40
 508              		.cfi_def_cfa_offset 64
  76:src/menu.c    **** 
 509              		.loc 1 76 8 view .LVU143
 510 0012 01AD     		add	r5, sp, #4
 511 0014 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 512 0016 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 513 0018 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 514 001a 3368     		ldr	r3, [r6]
 515 001c 25F8023B 		strh	r3, [r5], #2	@ movhi
  78:src/menu.c    **** 
 516              		.loc 1 78 3 view .LVU144
 517 0020 2F49     		ldr	r1, .L45+12
 518 0022 0422     		movs	r2, #4
  76:src/menu.c    **** 
 519              		.loc 1 76 8 view .LVU145
 520 0024 1B0C     		lsrs	r3, r3, #16
  78:src/menu.c    **** 
 521              		.loc 1 78 3 view .LVU146
 522 0026 0DF12100 		add	r0, sp, #33
  76:src/menu.c    **** 
 523              		.loc 1 76 8 view .LVU147
 524 002a 2B70     		strb	r3, [r5]
  78:src/menu.c    **** 
 525              		.loc 1 78 3 is_stmt 1 view .LVU148
 526 002c FFF7FEFF 		bl	xcopy
 527              	.LVL38:
  80:src/menu.c    ****   lcd_writeClr(t24);
 528              		.loc 1 80 3 view .LVU149
 529 0030 2C4B     		ldr	r3, .L45+16
 530 0032 9847     		blx	r3
 531              	.LVL39:
  81:src/menu.c    **** 
 532              		.loc 1 81 3 view .LVU150
 533 0034 2C4B     		ldr	r3, .L45+20
 534 0036 606B     		ldr	r0, [r4, #52]
 535 0038 9847     		blx	r3
 536              	.LVL40:
  84:src/menu.c    ****   lcd_putsR(t24, title);
 537              		.loc 1 84 3 view .LVU151
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 23
=======
ARM GAS  /tmp/ccCyL0em.s 			page 23
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 538 003a 606B     		ldr	r0, [r4, #52]
 539 003c 0522     		movs	r2, #5
 540 003e 0021     		movs	r1, #0
 541 0040 C047     		blx	r8
 542              	.LVL41:
  85:src/menu.c    ****   lcd_setXY(t20, t24->x, t24->y);
 543              		.loc 1 85 3 view .LVU152
  85:src/menu.c    ****   lcd_setXY(t20, t24->x, t24->y);
 544              		.loc 1 85 3 view .LVU153
 545 0042 606B     		ldr	r0, [r4, #52]
 546 0044 0125     		movs	r5, #1
 547 0046 4574     		strb	r5, [r0, #17]
  85:src/menu.c    ****   lcd_setXY(t20, t24->x, t24->y);
 548              		.loc 1 85 3 view .LVU154
 549 0048 01A9     		add	r1, sp, #4
 550 004a B847     		blx	r7
 551              	.LVL42:
  85:src/menu.c    ****   lcd_setXY(t20, t24->x, t24->y);
 552              		.loc 1 85 3 view .LVU155
 553 004c 636B     		ldr	r3, [r4, #52]
 554 004e 0026     		movs	r6, #0
 555 0050 5E74     		strb	r6, [r3, #17]
  85:src/menu.c    ****   lcd_setXY(t20, t24->x, t24->y);
 556              		.loc 1 85 3 view .LVU156
  86:src/menu.c    ****   t20->newln = 1;
 557              		.loc 1 86 3 view .LVU157
 558 0052 B3F90620 		ldrsh	r2, [r3, #6]
 559 0056 B3F90410 		ldrsh	r1, [r3, #4]
 560 005a 206B     		ldr	r0, [r4, #48]
 561 005c C047     		blx	r8
 562              	.LVL43:
  87:src/menu.c    **** #ifdef TOP_ROW
 563              		.loc 1 87 3 view .LVU158
 564 005e 206B     		ldr	r0, [r4, #48]
  89:src/menu.c    **** #elif defined(BIGGER_DISPLAY)
 565              		.loc 1 89 3 is_stmt 0 view .LVU159
 566 0060 2249     		ldr	r1, .L45+24
  87:src/menu.c    **** #ifdef TOP_ROW
 567              		.loc 1 87 14 view .LVU160
 568 0062 0575     		strb	r5, [r0, #20]
  89:src/menu.c    **** #elif defined(BIGGER_DISPLAY)
 569              		.loc 1 89 3 is_stmt 1 view .LVU161
 570 0064 B847     		blx	r7
 571              	.LVL44:
  95:src/menu.c    ****   lcd_puts(t20, "Includes printing, stopwatch,");
 572              		.loc 1 95 3 view .LVU162
 573 0066 206B     		ldr	r0, [r4, #48]
 574 0068 2149     		ldr	r1, .L45+28
 575 006a B847     		blx	r7
 576              	.LVL45:
  96:src/menu.c    ****   lcd_puts(t20, "entry RPN, extended file handling,");
 577              		.loc 1 96 3 view .LVU163
 578 006c 206B     		ldr	r0, [r4, #48]
 579 006e 2149     		ldr	r1, .L45+32
 580 0070 B847     		blx	r7
 581              	.LVL46:
  97:src/menu.c    ****   lcd_puts(t20, "user-defined menus, and");
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 24
=======
ARM GAS  /tmp/ccCyL0em.s 			page 24
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 582              		.loc 1 97 3 view .LVU164
 583 0072 206B     		ldr	r0, [r4, #48]
 584 0074 2049     		ldr	r1, .L45+36
 585 0076 B847     		blx	r7
 586              	.LVL47:
  98:src/menu.c    ****   lcd_puts(t20, "complex lock mode.");
 587              		.loc 1 98 3 view .LVU165
 588 0078 206B     		ldr	r0, [r4, #48]
 589 007a 2049     		ldr	r1, .L45+40
 590 007c B847     		blx	r7
 591              	.LVL48:
  99:src/menu.c    **** 
 592              		.loc 1 99 3 view .LVU166
 593 007e 206B     		ldr	r0, [r4, #48]
 594 0080 1F49     		ldr	r1, .L45+44
 595 0082 B847     		blx	r7
 596              	.LVL49:
 101:src/menu.c    **** 
 597              		.loc 1 101 3 view .LVU167
 598 0084 206B     		ldr	r0, [r4, #48]
 104:src/menu.c    ****   lcd_putsR(t20, "nor supported by SwissMicros.");
 599              		.loc 1 104 3 is_stmt 0 view .LVU168
 600 0086 1F49     		ldr	r1, .L45+48
 101:src/menu.c    **** 
 601              		.loc 1 101 10 view .LVU169
 602 0088 C388     		ldrh	r3, [r0, #6]
 103:src/menu.c    ****   lcd_putsR(t20, "Neither provided by          ");
 603              		.loc 1 103 15 view .LVU170
 604 008a 8574     		strb	r5, [r0, #18]
 101:src/menu.c    **** 
 605              		.loc 1 101 10 view .LVU171
 606 008c 0533     		adds	r3, r3, #5
 607 008e C380     		strh	r3, [r0, #6]	@ movhi
 103:src/menu.c    ****   lcd_putsR(t20, "Neither provided by          ");
 608              		.loc 1 103 3 is_stmt 1 view .LVU172
 104:src/menu.c    ****   lcd_putsR(t20, "nor supported by SwissMicros.");
 609              		.loc 1 104 3 view .LVU173
 104:src/menu.c    ****   lcd_putsR(t20, "nor supported by SwissMicros.");
 610              		.loc 1 104 3 view .LVU174
 104:src/menu.c    ****   lcd_putsR(t20, "nor supported by SwissMicros.");
 611              		.loc 1 104 3 view .LVU175
 612 0090 4574     		strb	r5, [r0, #17]
 613 0092 B847     		blx	r7
 614              	.LVL50:
 104:src/menu.c    ****   lcd_putsR(t20, "nor supported by SwissMicros.");
 615              		.loc 1 104 3 view .LVU176
 616 0094 206B     		ldr	r0, [r4, #48]
 104:src/menu.c    ****   lcd_putsR(t20, "nor supported by SwissMicros.");
 617              		.loc 1 104 3 view .LVU177
 105:src/menu.c    ****   t20->bgfill = 0;
 618              		.loc 1 105 3 view .LVU178
 105:src/menu.c    ****   t20->bgfill = 0;
 619              		.loc 1 105 3 view .LVU179
 620 0096 1C49     		ldr	r1, .L45+52
 621 0098 4574     		strb	r5, [r0, #17]
 105:src/menu.c    ****   t20->bgfill = 0;
 622              		.loc 1 105 3 view .LVU180
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 25
=======
ARM GAS  /tmp/ccCyL0em.s 			page 25
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 623 009a B847     		blx	r7
 624              	.LVL51:
 105:src/menu.c    ****   t20->bgfill = 0;
 625              		.loc 1 105 3 view .LVU181
 626 009c 236B     		ldr	r3, [r4, #48]
 109:src/menu.c    ****   t24->x = 20;
 627              		.loc 1 109 20 is_stmt 0 view .LVU182
 628 009e 1B4A     		ldr	r2, .L45+56
 105:src/menu.c    ****   t20->bgfill = 0;
 629              		.loc 1 105 3 view .LVU183
 630 00a0 5E74     		strb	r6, [r3, #17]
 105:src/menu.c    ****   t20->bgfill = 0;
 631              		.loc 1 105 3 is_stmt 1 view .LVU184
 106:src/menu.c    ****   t20->newln = 0;
 632              		.loc 1 106 3 view .LVU185
 106:src/menu.c    ****   t20->newln = 0;
 633              		.loc 1 106 15 is_stmt 0 view .LVU186
 634 00a2 9E74     		strb	r6, [r3, #18]
 107:src/menu.c    ****   
 635              		.loc 1 107 3 is_stmt 1 view .LVU187
 107:src/menu.c    ****   
 636              		.loc 1 107 14 is_stmt 0 view .LVU188
 637 00a4 1E75     		strb	r6, [r3, #20]
 109:src/menu.c    ****   t24->x = 20;
 638              		.loc 1 109 3 is_stmt 1 view .LVU189
 109:src/menu.c    ****   t24->x = 20;
 639              		.loc 1 109 20 is_stmt 0 view .LVU190
 640 00a6 606B     		ldr	r0, [r4, #52]
 641 00a8 9047     		blx	r2
 642              	.LVL52:
 109:src/menu.c    ****   t24->x = 20;
 643              		.loc 1 109 3 view .LVU191
 644 00aa 636B     		ldr	r3, [r4, #52]
 111:src/menu.c    **** 
 645              		.loc 1 111 3 view .LVU192
 646 00ac 184A     		ldr	r2, .L45+60
 647 00ae 5D74     		strb	r5, [r3, #17]
 109:src/menu.c    ****   t24->x = 20;
 648              		.loc 1 109 39 view .LVU193
 649 00b0 C0F1EB00 		rsb	r0, r0, #235
 110:src/menu.c    ****   lcd_printR(t24, "    Press EXIT key to continue...");
 650              		.loc 1 110 10 view .LVU194
 651 00b4 1421     		movs	r1, #20
 109:src/menu.c    ****   t24->x = 20;
 652              		.loc 1 109 10 view .LVU195
 653 00b6 D880     		strh	r0, [r3, #6]	@ movhi
 110:src/menu.c    ****   lcd_printR(t24, "    Press EXIT key to continue...");
 654              		.loc 1 110 3 is_stmt 1 view .LVU196
 110:src/menu.c    ****   lcd_printR(t24, "    Press EXIT key to continue...");
 655              		.loc 1 110 10 is_stmt 0 view .LVU197
 656 00b8 9980     		strh	r1, [r3, #4]	@ movhi
 111:src/menu.c    **** 
 657              		.loc 1 111 3 is_stmt 1 view .LVU198
 111:src/menu.c    **** 
 658              		.loc 1 111 3 view .LVU199
 111:src/menu.c    **** 
 659              		.loc 1 111 3 view .LVU200
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 26
=======
ARM GAS  /tmp/ccCyL0em.s 			page 26
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 660 00ba 1846     		mov	r0, r3
 661 00bc 1549     		ldr	r1, .L45+64
 662 00be 9047     		blx	r2
 663              	.LVL53:
 111:src/menu.c    **** 
 664              		.loc 1 111 3 view .LVU201
 665 00c0 626B     		ldr	r2, [r4, #52]
 113:src/menu.c    **** 
 666              		.loc 1 113 3 is_stmt 0 view .LVU202
 667 00c2 154B     		ldr	r3, .L45+68
 111:src/menu.c    **** 
 668              		.loc 1 111 3 view .LVU203
 669 00c4 5674     		strb	r6, [r2, #17]
 111:src/menu.c    **** 
 670              		.loc 1 111 3 is_stmt 1 view .LVU204
 113:src/menu.c    **** 
 671              		.loc 1 113 3 view .LVU205
 672 00c6 9847     		blx	r3
 673              	.LVL54:
 115:src/menu.c    **** }
 674              		.loc 1 115 3 view .LVU206
 675 00c8 144B     		ldr	r3, .L45+72
 676 00ca 9847     		blx	r3
 677              	.LVL55:
 116:src/menu.c    **** 
 678              		.loc 1 116 1 is_stmt 0 view .LVU207
 679 00cc 0AB0     		add	sp, sp, #40
 680              		.cfi_def_cfa_offset 24
 681              		@ sp needed
 682 00ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 683              	.L46:
 684 00d2 00BF     		.align	2
 685              	.L45:
 686 00d4 1C010000 		.word	.LC4
 687 00d8 00200010 		.word	268443648
 688 00dc 7D020008 		.word	134218365
 689 00e0 00000000 		.word	SvnRevision
 690 00e4 2D020008 		.word	134218285
 691 00e8 65020008 		.word	134218341
 692 00ec 00000000 		.word	.LC5
 693 00f0 28000000 		.word	.LC6
 694 00f4 48000000 		.word	.LC7
 695 00f8 68000000 		.word	.LC8
 696 00fc 8C000000 		.word	.LC9
 697 0100 A4000000 		.word	.LC10
 698 0104 B8000000 		.word	.LC11
 699 0108 D8000000 		.word	.LC12
 700 010c 71020008 		.word	134218353
 701 0110 B1020008 		.word	134218417
 702 0114 F8000000 		.word	.LC13
 703 0118 31020008 		.word	134218289
 704 011c 99030008 		.word	134218649
 705 0120 6D020008 		.word	134218349
 706              		.cfi_endproc
 707              	.LFE5:
 709              		.section	.text.run_menu_item,"ax",%progbits
 710              		.align	1
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 27
=======
ARM GAS  /tmp/ccCyL0em.s 			page 27
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 711              		.p2align 2,,3
 712              		.global	run_menu_item
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 716              		.fpu fpv4-sp-d16
 718              	run_menu_item:
 719              	.LVL56:
 720              	.LFB3:
  44:src/menu.c    ****   int ret = 0;
 721              		.loc 1 44 36 is_stmt 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
  45:src/menu.c    **** 
 725              		.loc 1 45 3 view .LVU209
  47:src/menu.c    ****     case MI_ABOUT_PGM:
 726              		.loc 1 47 3 view .LVU210
 727 0000 0B28     		cmp	r0, #11
 728 0002 04D1     		bne	.L49
  49:src/menu.c    ****       break;
 729              		.loc 1 49 7 view .LVU211
  44:src/menu.c    ****   int ret = 0;
 730              		.loc 1 44 36 is_stmt 0 view .LVU212
 731 0004 08B5     		push	{r3, lr}
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 3, -8
 734              		.cfi_offset 14, -4
  49:src/menu.c    ****       break;
 735              		.loc 1 49 7 view .LVU213
 736 0006 FFF7FEFF 		bl	disp_about
 737              	.LVL57:
  50:src/menu.c    **** 
 738              		.loc 1 50 7 is_stmt 1 view .LVU214
  45:src/menu.c    **** 
 739              		.loc 1 45 7 is_stmt 0 view .LVU215
 740 000a 0020     		movs	r0, #0
  58:src/menu.c    **** 
 741              		.loc 1 58 1 view .LVU216
 742 000c 08BD     		pop	{r3, pc}
 743              	.LVL58:
 744              	.L49:
 745              		.cfi_def_cfa_offset 0
 746              		.cfi_restore 3
 747              		.cfi_restore 14
  53:src/menu.c    ****       break;
 748              		.loc 1 53 11 view .LVU217
 749 000e 4FF0FF30 		mov	r0, #-1
 750              	.LVL59:
  57:src/menu.c    **** }
 751              		.loc 1 57 3 is_stmt 1 view .LVU218
  58:src/menu.c    **** 
 752              		.loc 1 58 1 is_stmt 0 view .LVU219
 753 0012 7047     		bx	lr
 754              		.cfi_endproc
 755              	.LFE3:
 757              		.section	.text.set_menu,"ax",%progbits
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 28
=======
ARM GAS  /tmp/ccCyL0em.s 			page 28
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 758              		.align	1
 759              		.p2align 2,,3
 760              		.global	set_menu
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv4-sp-d16
 766              	set_menu:
 767              	.LVL60:
 768              	.LFB6:
 122:src/menu.c    ****   menu_name m = current_menu;
 769              		.loc 1 122 38 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 774              		.loc 1 123 3 view .LVU221
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 775              		.loc 1 123 13 is_stmt 0 view .LVU222
 776 0000 0A4A     		ldr	r2, .L66
 777 0002 92F90030 		ldrsb	r3, [r2]
 778              	.LVL61:
 124:src/menu.c    ****     current_menu = default_menu;
 779              		.loc 1 124 3 is_stmt 1 view .LVU223
 124:src/menu.c    ****     current_menu = default_menu;
 780              		.loc 1 124 6 is_stmt 0 view .LVU224
 781 0006 8342     		cmp	r3, r0
 782 0008 0CD0     		beq	.L65
 127:src/menu.c    ****     current_menu = last_menu;
 783              		.loc 1 127 8 is_stmt 1 view .LVU225
 127:src/menu.c    ****     current_menu = last_menu;
 784              		.loc 1 127 11 is_stmt 0 view .LVU226
 785 000a 411C     		adds	r1, r0, #1
 128:src/menu.c    ****   }
 786              		.loc 1 128 5 is_stmt 1 view .LVU227
 128:src/menu.c    ****   }
 787              		.loc 1 128 18 is_stmt 0 view .LVU228
 788 000c 09BF     		itett	eq
 789 000e 0849     		ldreq	r1, .L66+4
 131:src/menu.c    ****   }
 790              		.loc 1 131 18 view .LVU229
 791 0010 1070     		strbne	r0, [r2]
 128:src/menu.c    ****   }
 792              		.loc 1 128 18 view .LVU230
 793 0012 0978     		ldrbeq	r1, [r1]	@ zero_extendqisi2
 794 0014 1170     		strbeq	r1, [r2]
 131:src/menu.c    ****   }
 795              		.loc 1 131 5 is_stmt 1 view .LVU231
 796              	.L56:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 797              		.loc 1 133 3 view .LVU232
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 798              		.loc 1 133 6 is_stmt 0 view .LVU233
 799 0016 092B     		cmp	r3, #9
 800 0018 03D0     		beq	.L54
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 29
=======
ARM GAS  /tmp/ccCyL0em.s 			page 29
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 801              		.loc 1 133 23 discriminator 1 view .LVU234
 802 001a 102B     		cmp	r3, #16
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 803              		.loc 1 133 43 is_stmt 1 discriminator 1 view .LVU235
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 804              		.loc 1 133 53 is_stmt 0 discriminator 1 view .LVU236
 805 001c 1CBF     		itt	ne
 806 001e 044A     		ldrne	r2, .L66+4
 807 0020 1370     		strbne	r3, [r2]
 808              	.L54:
 135:src/menu.c    **** 
 809              		.loc 1 135 1 view .LVU237
 810 0022 7047     		bx	lr
 811              	.L65:
 125:src/menu.c    ****   }
 812              		.loc 1 125 5 is_stmt 1 view .LVU238
 125:src/menu.c    ****   }
 813              		.loc 1 125 18 is_stmt 0 view .LVU239
 814 0024 0349     		ldr	r1, .L66+8
 815 0026 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 816 0028 1170     		strb	r1, [r2]
 817 002a F4E7     		b	.L56
 818              	.L67:
 819              		.align	2
 820              	.L66:
 821 002c 00000000 		.word	.LANCHOR1
 822 0030 00000000 		.word	.LANCHOR3
 823 0034 00000000 		.word	.LANCHOR2
 824              		.cfi_endproc
 825              	.LFE6:
 827              		.section	.text.set_default_menu,"ax",%progbits
 828              		.align	1
 829              		.p2align 2,,3
 830              		.global	set_default_menu
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 834              		.fpu fpv4-sp-d16
 836              	set_default_menu:
 837              	.LFB7:
 137:src/menu.c    ****   set_menu (default_menu);
 838              		.loc 1 137 26 is_stmt 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 138:src/menu.c    **** }
 843              		.loc 1 138 3 view .LVU241
 844 0000 0A4B     		ldr	r3, .L80
 845              	.LBB61:
 846              	.LBB62:
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 847              		.loc 1 123 13 is_stmt 0 view .LVU242
 848 0002 0B49     		ldr	r1, .L80+4
 849              	.LBE62:
 850              	.LBE61:
 138:src/menu.c    **** }
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 30
=======
ARM GAS  /tmp/ccCyL0em.s 			page 30
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 851              		.loc 1 138 3 view .LVU243
 852 0004 93F90020 		ldrsb	r2, [r3]
 853              	.LVL62:
 854              	.LBB65:
 855              	.LBI61:
 122:src/menu.c    ****   menu_name m = current_menu;
 856              		.loc 1 122 6 is_stmt 1 view .LVU244
 857              	.LBB63:
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 858              		.loc 1 123 3 view .LVU245
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 859              		.loc 1 123 13 is_stmt 0 view .LVU246
 860 0008 91F90030 		ldrsb	r3, [r1]
 861              	.LVL63:
 124:src/menu.c    ****     current_menu = default_menu;
 862              		.loc 1 124 3 is_stmt 1 view .LVU247
 124:src/menu.c    ****     current_menu = default_menu;
 863              		.loc 1 124 6 is_stmt 0 view .LVU248
 864 000c 9A42     		cmp	r2, r3
 865 000e 0BD0     		beq	.L79
 127:src/menu.c    ****     current_menu = last_menu;
 866              		.loc 1 127 8 is_stmt 1 view .LVU249
 127:src/menu.c    ****     current_menu = last_menu;
 867              		.loc 1 127 11 is_stmt 0 view .LVU250
 868 0010 501C     		adds	r0, r2, #1
 128:src/menu.c    ****   }
 869              		.loc 1 128 5 is_stmt 1 view .LVU251
 128:src/menu.c    ****   }
 870              		.loc 1 128 18 is_stmt 0 view .LVU252
 871 0012 04BF     		itt	eq
 872 0014 074A     		ldreq	r2, .L80+8
 873              	.LVL64:
 128:src/menu.c    ****   }
 874              		.loc 1 128 18 view .LVU253
 875 0016 1278     		ldrbeq	r2, [r2]	@ zero_extendqisi2
 131:src/menu.c    ****   }
 876              		.loc 1 131 5 is_stmt 1 view .LVU254
 131:src/menu.c    ****   }
 877              		.loc 1 131 18 is_stmt 0 view .LVU255
 878 0018 0A70     		strb	r2, [r1]
 879              	.LVL65:
 880              	.L70:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 881              		.loc 1 133 3 is_stmt 1 view .LVU256
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 882              		.loc 1 133 6 is_stmt 0 view .LVU257
 883 001a 092B     		cmp	r3, #9
 884 001c 03D0     		beq	.L68
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 885              		.loc 1 133 23 view .LVU258
 886 001e 102B     		cmp	r3, #16
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 887              		.loc 1 133 43 is_stmt 1 view .LVU259
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 888              		.loc 1 133 53 is_stmt 0 view .LVU260
 889 0020 1CBF     		itt	ne
 890 0022 044A     		ldrne	r2, .L80+8
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 31
=======
ARM GAS  /tmp/ccCyL0em.s 			page 31
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 891 0024 1370     		strbne	r3, [r2]
 892              	.LVL66:
 893              	.L68:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 894              		.loc 1 133 53 view .LVU261
 895              	.LBE63:
 896              	.LBE65:
 139:src/menu.c    **** 
 897              		.loc 1 139 1 view .LVU262
 898 0026 7047     		bx	lr
 899              	.LVL67:
 900              	.L79:
 901              	.LBB66:
 902              	.LBB64:
 125:src/menu.c    ****   }
 903              		.loc 1 125 5 is_stmt 1 view .LVU263
 125:src/menu.c    ****   }
 904              		.loc 1 125 18 is_stmt 0 view .LVU264
 905 0028 0B70     		strb	r3, [r1]
 906 002a F6E7     		b	.L70
 907              	.L81:
 908              		.align	2
 909              	.L80:
 910 002c 00000000 		.word	.LANCHOR2
 911 0030 00000000 		.word	.LANCHOR1
 912 0034 00000000 		.word	.LANCHOR3
 913              	.LBE64:
 914              	.LBE66:
 915              		.cfi_endproc
 916              	.LFE7:
 918              		.section	.text.toggle_default_menu,"ax",%progbits
 919              		.align	1
 920              		.p2align 2,,3
 921              		.global	toggle_default_menu
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 925              		.fpu fpv4-sp-d16
 927              	toggle_default_menu:
 928              	.LFB8:
 141:src/menu.c    ****   if (current_menu == M_Blank) {
 929              		.loc 1 141 29 is_stmt 1 view -0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 142:src/menu.c    ****     current_menu = default_menu = M_Blank2;
 934              		.loc 1 142 3 view .LVU266
 142:src/menu.c    ****     current_menu = default_menu = M_Blank2;
 935              		.loc 1 142 20 is_stmt 0 view .LVU267
 936 0000 104A     		ldr	r2, .L98
 143:src/menu.c    ****     return;
 937              		.loc 1 143 33 view .LVU268
 938 0002 1149     		ldr	r1, .L98+4
 142:src/menu.c    ****     current_menu = default_menu = M_Blank2;
 939              		.loc 1 142 20 view .LVU269
 940 0004 92F90030 		ldrsb	r3, [r2]
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 32
=======
ARM GAS  /tmp/ccCyL0em.s 			page 32
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 142:src/menu.c    ****     current_menu = default_menu = M_Blank2;
 941              		.loc 1 142 6 view .LVU270
 942 0008 ABB1     		cbz	r3, .L95
 146:src/menu.c    ****     current_menu = default_menu = M_Blank; 
 943              		.loc 1 146 8 is_stmt 1 view .LVU271
 146:src/menu.c    ****     current_menu = default_menu = M_Blank; 
 944              		.loc 1 146 11 is_stmt 0 view .LVU272
 945 000a 0F2B     		cmp	r3, #15
 946 000c 0FD0     		beq	.L96
 150:src/menu.c    ****   }
 947              		.loc 1 150 5 is_stmt 1 view .LVU273
 948              	.LBB67:
 949              	.LBI67:
 137:src/menu.c    ****   set_menu (default_menu);
 950              		.loc 1 137 6 view .LVU274
 951              	.LBB68:
 138:src/menu.c    **** }
 952              		.loc 1 138 3 view .LVU275
 953 000e 91F90010 		ldrsb	r1, [r1]
 954              	.LVL68:
 955              	.LBB69:
 956              	.LBI69:
 122:src/menu.c    ****   menu_name m = current_menu;
 957              		.loc 1 122 6 view .LVU276
 958              	.LBB70:
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 959              		.loc 1 123 3 view .LVU277
 124:src/menu.c    ****     current_menu = default_menu;
 960              		.loc 1 124 3 view .LVU278
 124:src/menu.c    ****     current_menu = default_menu;
 961              		.loc 1 124 6 is_stmt 0 view .LVU279
 962 0012 8B42     		cmp	r3, r1
 963 0014 13D0     		beq	.L97
 127:src/menu.c    ****     current_menu = last_menu;
 964              		.loc 1 127 8 is_stmt 1 view .LVU280
 127:src/menu.c    ****     current_menu = last_menu;
 965              		.loc 1 127 11 is_stmt 0 view .LVU281
 966 0016 481C     		adds	r0, r1, #1
 128:src/menu.c    ****   }
 967              		.loc 1 128 5 is_stmt 1 view .LVU282
 128:src/menu.c    ****   }
 968              		.loc 1 128 18 is_stmt 0 view .LVU283
 969 0018 04BF     		itt	eq
 970 001a 0C49     		ldreq	r1, .L98+8
 971              	.LVL69:
 128:src/menu.c    ****   }
 972              		.loc 1 128 18 view .LVU284
 973 001c 0978     		ldrbeq	r1, [r1]	@ zero_extendqisi2
 131:src/menu.c    ****   }
 974              		.loc 1 131 5 is_stmt 1 view .LVU285
 131:src/menu.c    ****   }
 975              		.loc 1 131 18 is_stmt 0 view .LVU286
 976 001e 1170     		strb	r1, [r2]
 977              	.LVL70:
 978              	.L87:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 979              		.loc 1 133 3 is_stmt 1 view .LVU287
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 33
=======
ARM GAS  /tmp/ccCyL0em.s 			page 33
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 980              		.loc 1 133 6 is_stmt 0 view .LVU288
 981 0020 092B     		cmp	r3, #9
 982 0022 03D0     		beq	.L82
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 983              		.loc 1 133 23 view .LVU289
 984 0024 102B     		cmp	r3, #16
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 985              		.loc 1 133 43 is_stmt 1 view .LVU290
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 986              		.loc 1 133 53 is_stmt 0 view .LVU291
 987 0026 1CBF     		itt	ne
 988 0028 084A     		ldrne	r2, .L98+8
 989 002a 1370     		strbne	r3, [r2]
 990              	.LVL71:
 991              	.L82:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 992              		.loc 1 133 53 view .LVU292
 993              	.LBE70:
 994              	.LBE69:
 995              	.LBE68:
 996              	.LBE67:
 152:src/menu.c    **** 
 997              		.loc 1 152 1 view .LVU293
 998 002c 7047     		bx	lr
 999              	.L96:
 147:src/menu.c    ****   }
 1000              		.loc 1 147 5 is_stmt 1 view .LVU294
 147:src/menu.c    ****   }
 1001              		.loc 1 147 33 is_stmt 0 view .LVU295
 1002 002e 0023     		movs	r3, #0
 1003 0030 0B70     		strb	r3, [r1]
 147:src/menu.c    ****   }
 1004              		.loc 1 147 18 view .LVU296
 1005 0032 1370     		strb	r3, [r2]
 1006 0034 7047     		bx	lr
 1007              	.L95:
 143:src/menu.c    ****     return;
 1008              		.loc 1 143 5 is_stmt 1 view .LVU297
 143:src/menu.c    ****     return;
 1009              		.loc 1 143 33 is_stmt 0 view .LVU298
 1010 0036 0F23     		movs	r3, #15
 1011 0038 0B70     		strb	r3, [r1]
 143:src/menu.c    ****     return;
 1012              		.loc 1 143 18 view .LVU299
 1013 003a 1370     		strb	r3, [r2]
 144:src/menu.c    ****   }
 1014              		.loc 1 144 5 is_stmt 1 view .LVU300
 1015 003c 7047     		bx	lr
 1016              	.LVL72:
 1017              	.L97:
 1018              	.LBB74:
 1019              	.LBB73:
 1020              	.LBB72:
 1021              	.LBB71:
 125:src/menu.c    ****   }
 1022              		.loc 1 125 5 view .LVU301
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 34
=======
ARM GAS  /tmp/ccCyL0em.s 			page 34
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 125:src/menu.c    ****   }
 1023              		.loc 1 125 18 is_stmt 0 view .LVU302
 1024 003e 1370     		strb	r3, [r2]
 1025 0040 EEE7     		b	.L87
 1026              	.L99:
 1027 0042 00BF     		.align	2
 1028              	.L98:
 1029 0044 00000000 		.word	.LANCHOR1
 1030 0048 00000000 		.word	.LANCHOR2
 1031 004c 00000000 		.word	.LANCHOR3
 1032              	.LBE71:
 1033              	.LBE72:
 1034              	.LBE73:
 1035              	.LBE74:
 1036              		.cfi_endproc
 1037              	.LFE8:
 1039              		.section	.text.get_menu,"ax",%progbits
 1040              		.align	1
 1041              		.p2align 2,,3
 1042              		.global	get_menu
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu fpv4-sp-d16
 1048              	get_menu:
 1049              	.LFB9:
 154:src/menu.c    ****   return current_menu;
 1050              		.loc 1 154 23 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054              		@ link register save eliminated.
 155:src/menu.c    **** }
 1055              		.loc 1 155 3 view .LVU304
 155:src/menu.c    **** }
 1056              		.loc 1 155 10 is_stmt 0 view .LVU305
 1057 0000 014B     		ldr	r3, .L101
 156:src/menu.c    **** 
 1058              		.loc 1 156 1 view .LVU306
 1059 0002 93F90000 		ldrsb	r0, [r3]
 1060 0006 7047     		bx	lr
 1061              	.L102:
 1062              		.align	2
 1063              	.L101:
 1064 0008 00000000 		.word	.LANCHOR1
 1065              		.cfi_endproc
 1066              	.LFE9:
 1068              		.section	.text.get_last_menu,"ax",%progbits
 1069              		.align	1
 1070              		.p2align 2,,3
 1071              		.global	get_last_menu
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1075              		.fpu fpv4-sp-d16
 1077              	get_last_menu:
 1078              	.LFB10:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 35
=======
ARM GAS  /tmp/ccCyL0em.s 			page 35
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 158:src/menu.c    ****   return last_menu;
 1079              		.loc 1 158 28 is_stmt 1 view -0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 159:src/menu.c    **** }
 1084              		.loc 1 159 3 view .LVU308
 159:src/menu.c    **** }
 1085              		.loc 1 159 10 is_stmt 0 view .LVU309
 1086 0000 014B     		ldr	r3, .L104
 160:src/menu.c    **** 
 1087              		.loc 1 160 1 view .LVU310
 1088 0002 93F90000 		ldrsb	r0, [r3]
 1089 0006 7047     		bx	lr
 1090              	.L105:
 1091              		.align	2
 1092              	.L104:
 1093 0008 00000000 		.word	.LANCHOR3
 1094              		.cfi_endproc
 1095              	.LFE10:
 1097              		.section	.text.set_last_menu,"ax",%progbits
 1098              		.align	1
 1099              		.p2align 2,,3
 1100              		.global	set_last_menu
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1104              		.fpu fpv4-sp-d16
 1106              	set_last_menu:
 1107              	.LFB12:
 166:src/menu.c    ****   set_menu (M_Last);
 1108              		.loc 1 166 23 is_stmt 1 view -0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 167:src/menu.c    **** }
 1113              		.loc 1 167 3 view .LVU312
 1114              	.LVL73:
 1115              	.LBB75:
 1116              	.LBI75:
 122:src/menu.c    ****   menu_name m = current_menu;
 1117              		.loc 1 122 6 view .LVU313
 1118              	.LBB76:
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 1119              		.loc 1 123 3 view .LVU314
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 1120              		.loc 1 123 13 is_stmt 0 view .LVU315
 1121 0000 0A4A     		ldr	r2, .L119
 1122 0002 92F90030 		ldrsb	r3, [r2]
 1123              	.LVL74:
 124:src/menu.c    ****     current_menu = default_menu;
 1124              		.loc 1 124 3 is_stmt 1 view .LVU316
 124:src/menu.c    ****     current_menu = default_menu;
 1125              		.loc 1 124 6 is_stmt 0 view .LVU317
 1126 0006 591C     		adds	r1, r3, #1
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 36
=======
ARM GAS  /tmp/ccCyL0em.s 			page 36
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1127 0008 09D0     		beq	.L116
 127:src/menu.c    ****     current_menu = last_menu;
 1128              		.loc 1 127 8 is_stmt 1 view .LVU318
 128:src/menu.c    ****   }
 1129              		.loc 1 128 5 view .LVU319
 128:src/menu.c    ****   }
 1130              		.loc 1 128 18 is_stmt 0 view .LVU320
 1131 000a 0949     		ldr	r1, .L119+4
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1132              		.loc 1 133 6 view .LVU321
 1133 000c 092B     		cmp	r3, #9
 128:src/menu.c    ****   }
 1134              		.loc 1 128 18 view .LVU322
 1135 000e 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1136 0010 1070     		strb	r0, [r2]
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1137              		.loc 1 133 3 is_stmt 1 view .LVU323
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1138              		.loc 1 133 6 is_stmt 0 view .LVU324
 1139 0012 00D1     		bne	.L117
 1140              	.L106:
 1141              	.LBE76:
 1142              	.LBE75:
 168:src/menu.c    **** 
 1143              		.loc 1 168 1 view .LVU325
 1144 0014 7047     		bx	lr
 1145              	.L117:
 1146              	.LBB79:
 1147              	.LBB77:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1148              		.loc 1 133 23 view .LVU326
 1149 0016 102B     		cmp	r3, #16
 1150 0018 FCD0     		beq	.L106
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1151              		.loc 1 133 43 is_stmt 1 view .LVU327
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1152              		.loc 1 133 53 is_stmt 0 view .LVU328
 1153 001a 0B70     		strb	r3, [r1]
 1154              	.LVL75:
 1155              	.L118:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1156              		.loc 1 133 53 view .LVU329
 1157              	.LBE77:
 1158              	.LBE79:
 168:src/menu.c    **** 
 1159              		.loc 1 168 1 view .LVU330
 1160 001c 7047     		bx	lr
 1161              	.LVL76:
 1162              	.L116:
 1163              	.LBB80:
 1164              	.LBB78:
 125:src/menu.c    ****   }
 1165              		.loc 1 125 5 is_stmt 1 view .LVU331
 125:src/menu.c    ****   }
 1166              		.loc 1 125 18 is_stmt 0 view .LVU332
 1167 001e 0548     		ldr	r0, .L119+8
 1168 0020 0349     		ldr	r1, .L119+4
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 37
=======
ARM GAS  /tmp/ccCyL0em.s 			page 37
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1169 0022 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1170 0024 1070     		strb	r0, [r2]
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1171              		.loc 1 133 3 is_stmt 1 view .LVU333
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1172              		.loc 1 133 43 view .LVU334
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1173              		.loc 1 133 53 is_stmt 0 view .LVU335
 1174 0026 0B70     		strb	r3, [r1]
 1175              	.LVL77:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 1176              		.loc 1 133 53 view .LVU336
 1177 0028 F8E7     		b	.L118
 1178              	.L120:
 1179 002a 00BF     		.align	2
 1180              	.L119:
 1181 002c 00000000 		.word	.LANCHOR1
 1182 0030 00000000 		.word	.LANCHOR3
 1183 0034 00000000 		.word	.LANCHOR2
 1184              	.LBE78:
 1185              	.LBE80:
 1186              		.cfi_endproc
 1187              	.LFE12:
 1189              		.section	.text.mdot,"ax",%progbits
 1190              		.align	1
 1191              		.p2align 2,,3
 1192              		.global	mdot
 1193              		.syntax unified
 1194              		.thumb
 1195              		.thumb_func
 1196              		.fpu fpv4-sp-d16
 1198              	mdot:
 1199              	.LVL78:
 1200              	.LFB14:
 572:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 1201              		.loc 1 572 40 is_stmt 1 view -0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205              		@ link register save eliminated.
 573:src/menu.c    ****   if (on) {
 1206              		.loc 1 573 3 view .LVU338
 573:src/menu.c    ****   if (on) {
 1207              		.loc 1 573 6 is_stmt 0 view .LVU339
 1208 0000 C728     		cmp	r0, #199
 1209 0002 1AD8     		bhi	.L125
 1210              	.LVL79:
 1211              	.LBB83:
 1212              	.LBI83:
 572:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 1213              		.loc 1 572 6 is_stmt 1 view .LVU340
 1214              	.LBB84:
 574:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 1215              		.loc 1 574 3 view .LVU341
 1216              	.LBE84:
 1217              	.LBE83:
 572:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 38
=======
ARM GAS  /tmp/ccCyL0em.s 			page 38
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1218              		.loc 1 572 40 is_stmt 0 view .LVU342
 1219 0004 10B4     		push	{r4}
 1220              		.cfi_def_cfa_offset 4
 1221              		.cfi_offset 4, -4
 1222              	.LBB87:
 1223              	.LBB85:
 574:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 1224              		.loc 1 574 6 view .LVU343
 1225 0006 63B9     		cbnz	r3, .L128
 1226              		.loc 1 578 5 is_stmt 1 view .LVU344
 1227              		.loc 1 578 17 is_stmt 0 view .LVU345
 1228 0008 0C4B     		ldr	r3, .L129
 1229              	.LVL80:
 1230              		.loc 1 578 17 view .LVU346
 1231 000a 03EB4000 		add	r0, r3, r0, lsl #1
 1232              	.LVL81:
 1233              		.loc 1 578 25 view .LVU347
 1234 000e 0124     		movs	r4, #1
 1235              		.loc 1 578 17 view .LVU348
 1236 0010 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 1237              		.loc 1 578 25 view .LVU349
 1238 0012 04FA01F1 		lsl	r1, r4, r1
 1239              	.LVL82:
 1240              		.loc 1 578 17 view .LVU350
 1241 0016 23EA0101 		bic	r1, r3, r1
 1242 001a 8154     		strb	r1, [r0, r2]
 1243              	.LVL83:
 1244              		.loc 1 578 17 view .LVU351
 1245              	.LBE85:
 1246              	.LBE87:
 579:src/menu.c    ****   }
 580:src/menu.c    **** }
 1247              		.loc 1 580 1 view .LVU352
 1248 001c 5DF8044B 		ldr	r4, [sp], #4
 1249              		.cfi_remember_state
 1250              		.cfi_restore 4
 1251              		.cfi_def_cfa_offset 0
 1252 0020 7047     		bx	lr
 1253              	.LVL84:
 1254              	.L128:
 1255              		.cfi_restore_state
 1256              	.LBB88:
 1257              	.LBB86:
 575:src/menu.c    ****   }
 1258              		.loc 1 575 5 is_stmt 1 view .LVU353
 575:src/menu.c    ****   }
 1259              		.loc 1 575 17 is_stmt 0 view .LVU354
 1260 0022 064B     		ldr	r3, .L129
 1261              	.LVL85:
 575:src/menu.c    ****   }
 1262              		.loc 1 575 17 view .LVU355
 1263 0024 03EB4000 		add	r0, r3, r0, lsl #1
 1264              	.LVL86:
 575:src/menu.c    ****   }
 1265              		.loc 1 575 24 view .LVU356
 1266 0028 0124     		movs	r4, #1
 575:src/menu.c    ****   }
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 39
=======
ARM GAS  /tmp/ccCyL0em.s 			page 39
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1267              		.loc 1 575 17 view .LVU357
 1268 002a 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 575:src/menu.c    ****   }
 1269              		.loc 1 575 24 view .LVU358
 1270 002c 04FA01F1 		lsl	r1, r4, r1
 1271              	.LVL87:
 575:src/menu.c    ****   }
 1272              		.loc 1 575 17 view .LVU359
 1273 0030 1943     		orrs	r1, r1, r3
 1274 0032 8154     		strb	r1, [r0, r2]
 1275              	.LBE86:
 1276              	.LBE88:
 1277              		.loc 1 580 1 view .LVU360
 1278 0034 5DF8044B 		ldr	r4, [sp], #4
 1279              		.cfi_restore 4
 1280              		.cfi_def_cfa_offset 0
 1281 0038 7047     		bx	lr
 1282              	.LVL88:
 1283              	.L125:
 1284              		.loc 1 580 1 view .LVU361
 1285 003a 7047     		bx	lr
 1286              	.L130:
 1287              		.align	2
 1288              	.L129:
 1289 003c 00000000 		.word	.LANCHOR0
 1290              		.cfi_endproc
 1291              	.LFE14:
 1293              		.section	.text.get_current_menu_ref,"ax",%progbits
 1294              		.align	1
 1295              		.p2align 2,,3
 1296              		.global	get_current_menu_ref
 1297              		.syntax unified
 1298              		.thumb
 1299              		.thumb_func
 1300              		.fpu fpv4-sp-d16
 1302              	get_current_menu_ref:
 1303              	.LVL89:
 1304              	.LFB15:
 581:src/menu.c    **** 
 582:src/menu.c    **** struct _menu get_current_menu_ref() {
 1305              		.loc 1 582 37 is_stmt 1 view -0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 583:src/menu.c    ****   int i = current_menu;
 1309              		.loc 1 583 3 view .LVU363
 582:src/menu.c    ****   int i = current_menu;
 1310              		.loc 1 582 37 is_stmt 0 view .LVU364
 1311 0000 08B5     		push	{r3, lr}
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 3, -8
 1314              		.cfi_offset 14, -4
 584:src/menu.c    ****   if (C_LOCKED)
 1315              		.loc 1 584 7 view .LVU365
 1316 0002 294B     		ldr	r3, .L147
 583:src/menu.c    ****   int i = current_menu;
 1317              		.loc 1 583 7 view .LVU366
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 40
=======
ARM GAS  /tmp/ccCyL0em.s 			page 40
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1318 0004 294A     		ldr	r2, .L147+4
 1319              		.loc 1 584 7 view .LVU367
 1320 0006 1B68     		ldr	r3, [r3]
 583:src/menu.c    ****   int i = current_menu;
 1321              		.loc 1 583 7 view .LVU368
 1322 0008 92F90010 		ldrsb	r1, [r2]
 1323              	.LVL90:
 1324              		.loc 1 584 3 is_stmt 1 view .LVU369
 1325              		.loc 1 584 7 is_stmt 0 view .LVU370
 1326 000c 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 1327              		.loc 1 584 6 view .LVU371
 1328 0010 03F04102 		and	r2, r3, #65
 1329 0014 412A     		cmp	r2, #65
 582:src/menu.c    ****   int i = current_menu;
 1330              		.loc 1 582 37 view .LVU372
 1331 0016 0346     		mov	r3, r0
 1332              		.loc 1 584 6 view .LVU373
 1333 0018 0BD0     		beq	.L145
 1334              	.LVL91:
 1335              	.L132:
 585:src/menu.c    ****     switch (current_menu) {
 586:src/menu.c    ****     case (M_Clear):
 587:src/menu.c    ****       i = M_Clear_C;
 588:src/menu.c    ****       break;
 589:src/menu.c    ****     case (M_Swap):
 590:src/menu.c    ****       i = M_Swap_C;
 591:src/menu.c    ****       break;
 592:src/menu.c    ****     case (M_Arrow):
 593:src/menu.c    ****       i = M_Arrow_C;
 594:src/menu.c    ****       break;
 595:src/menu.c    ****     case (M_Prob):
 596:src/menu.c    ****       i = M_Prob_C;
 597:src/menu.c    ****       break;
 598:src/menu.c    ****     case (M_Blank2):
 599:src/menu.c    ****       i = M_Blank2_C;
 600:src/menu.c    ****       break;
 601:src/menu.c    ****     case (M_Misc):
 602:src/menu.c    ****       i = M_Misc_C;
 603:src/menu.c    ****       break;
 604:src/menu.c    ****     case (M_Base): // These menus aren't appropriate in complex mode
 605:src/menu.c    ****     case (M_Flags):// so don't display them.
 606:src/menu.c    ****     case (M_Stats):
 607:src/menu.c    ****     case (M_Setup2):
 608:src/menu.c    ****     case (M_Solve):
 609:src/menu.c    ****     case (M_Program):
 610:src/menu.c    ****       i = M_C_Lock;
 611:src/menu.c    ****     default:;
 1336              		.loc 1 611 13 is_stmt 1 view .LVU374
 612:src/menu.c    ****     }
 613:src/menu.c    ****   if (current_menu == M_User) {
 1337              		.loc 1 613 3 view .LVU375
 1338              		.loc 1 613 6 is_stmt 0 view .LVU376
 1339 001a 6329     		cmp	r1, #99
 1340 001c 32D0     		beq	.L146
 1341              	.LVL92:
 1342              	.L137:
 614:src/menu.c    ****     return UserMenu;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 41
=======
ARM GAS  /tmp/ccCyL0em.s 			page 41
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 615:src/menu.c    ****   }
 616:src/menu.c    ****   else {
 617:src/menu.c    ****     return Menus[i];
 1343              		.loc 1 617 5 is_stmt 1 view .LVU377
 1344              		.loc 1 617 17 is_stmt 0 view .LVU378
 1345 001e 2448     		ldr	r0, .L147+8
 1346 0020 D022     		movs	r2, #208
 1347 0022 02FB0101 		mla	r1, r2, r1, r0
 1348              	.LVL93:
 1349              		.loc 1 617 17 view .LVU379
 1350 0026 1846     		mov	r0, r3
 1351 0028 FFF7FEFF 		bl	memcpy
 1352              	.LVL94:
 1353              		.loc 1 617 17 view .LVU380
 1354 002c 0346     		mov	r3, r0
 618:src/menu.c    ****   }
 619:src/menu.c    **** }
 1355              		.loc 1 619 1 view .LVU381
 1356 002e 1846     		mov	r0, r3
 1357 0030 08BD     		pop	{r3, pc}
 1358              	.LVL95:
 1359              	.L145:
 585:src/menu.c    ****     case (M_Clear):
 1360              		.loc 1 585 5 is_stmt 1 view .LVU382
 1361 0032 4A1E     		subs	r2, r1, #1
 1362 0034 0E2A     		cmp	r2, #14
 1363 0036 F0D8     		bhi	.L132
 1364 0038 01A0     		adr	r0, .L134
 1365 003a 50F822F0 		ldr	pc, [r0, r2, lsl #2]
 1366              	.LVL96:
 1367 003e 00BF     		.p2align 2
 1368              	.L134:
 1369 0040 A5000000 		.word	.L140+1
 1370 0044 1B000000 		.word	.L132+1
 1371 0048 A1000000 		.word	.L135+1
 1372 004c 1B000000 		.word	.L132+1
 1373 0050 9D000000 		.word	.L139+1
 1374 0054 81000000 		.word	.L138+1
 1375 0058 A1000000 		.word	.L135+1
 1376 005c 1B000000 		.word	.L132+1
 1377 0060 7D000000 		.word	.L143+1
 1378 0064 A1000000 		.word	.L135+1
 1379 0068 99000000 		.word	.L136+1
 1380 006c A1000000 		.word	.L135+1
 1381 0070 A1000000 		.word	.L135+1
 1382 0074 A1000000 		.word	.L135+1
 1383 0078 95000000 		.word	.L133+1
 1384              		.p2align 1
 1385              	.L143:
 593:src/menu.c    ****       break;
 1386              		.loc 1 593 9 is_stmt 0 view .LVU383
 1387 007c 1421     		movs	r1, #20
 1388              	.LVL97:
 593:src/menu.c    ****       break;
 1389              		.loc 1 593 9 view .LVU384
 1390 007e CEE7     		b	.L137
 1391              	.LVL98:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 42
=======
ARM GAS  /tmp/ccCyL0em.s 			page 42
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1392              	.L138:
 584:src/menu.c    ****     switch (current_menu) {
 1393              		.loc 1 584 6 view .LVU385
 1394 0080 1321     		movs	r1, #19
 1395              	.LVL99:
 584:src/menu.c    ****     switch (current_menu) {
 1396              		.loc 1 584 6 view .LVU386
 1397 0082 CCE7     		b	.L137
 1398              	.LVL100:
 1399              	.L146:
 614:src/menu.c    ****   }
 1400              		.loc 1 614 5 is_stmt 1 view .LVU387
 614:src/menu.c    ****   }
 1401              		.loc 1 614 12 is_stmt 0 view .LVU388
 1402 0084 0B49     		ldr	r1, .L147+12
 1403              	.LVL101:
 614:src/menu.c    ****   }
 1404              		.loc 1 614 12 view .LVU389
 1405 0086 D022     		movs	r2, #208
 1406 0088 1846     		mov	r0, r3
 1407 008a FFF7FEFF 		bl	memcpy
 1408              	.LVL102:
 614:src/menu.c    ****   }
 1409              		.loc 1 614 12 view .LVU390
 1410 008e 0346     		mov	r3, r0
 1411              		.loc 1 619 1 view .LVU391
 1412 0090 1846     		mov	r0, r3
 1413 0092 08BD     		pop	{r3, pc}
 1414              	.LVL103:
 1415              	.L133:
 599:src/menu.c    ****       break;
 1416              		.loc 1 599 7 is_stmt 1 view .LVU392
 600:src/menu.c    ****     case (M_Misc):
 1417              		.loc 1 600 7 view .LVU393
 599:src/menu.c    ****       break;
 1418              		.loc 1 599 9 is_stmt 0 view .LVU394
 1419 0094 1621     		movs	r1, #22
 600:src/menu.c    ****     case (M_Misc):
 1420              		.loc 1 600 7 view .LVU395
 1421 0096 C2E7     		b	.L137
 1422              	.LVL104:
 1423              	.L136:
 596:src/menu.c    ****       break;
 1424              		.loc 1 596 7 is_stmt 1 view .LVU396
 597:src/menu.c    ****     case (M_Blank2):
 1425              		.loc 1 597 7 view .LVU397
 596:src/menu.c    ****       break;
 1426              		.loc 1 596 9 is_stmt 0 view .LVU398
 1427 0098 1521     		movs	r1, #21
 597:src/menu.c    ****     case (M_Blank2):
 1428              		.loc 1 597 7 view .LVU399
 1429 009a C0E7     		b	.L137
 1430              	.LVL105:
 1431              	.L139:
 602:src/menu.c    ****       break;
 1432              		.loc 1 602 7 is_stmt 1 view .LVU400
 603:src/menu.c    ****     case (M_Base): // These menus aren't appropriate in complex mode
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 43
=======
ARM GAS  /tmp/ccCyL0em.s 			page 43
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1433              		.loc 1 603 7 view .LVU401
 602:src/menu.c    ****       break;
 1434              		.loc 1 602 9 is_stmt 0 view .LVU402
 1435 009c 1721     		movs	r1, #23
 603:src/menu.c    ****     case (M_Base): // These menus aren't appropriate in complex mode
 1436              		.loc 1 603 7 view .LVU403
 1437 009e BEE7     		b	.L137
 1438              	.LVL106:
 1439              	.L135:
 610:src/menu.c    ****     default:;
 1440              		.loc 1 610 7 is_stmt 1 view .LVU404
 610:src/menu.c    ****     default:;
 1441              		.loc 1 610 9 is_stmt 0 view .LVU405
 1442 00a0 1121     		movs	r1, #17
 1443 00a2 BCE7     		b	.L137
 1444              	.LVL107:
 1445              	.L140:
 587:src/menu.c    ****       break;
 1446              		.loc 1 587 9 view .LVU406
 1447 00a4 1221     		movs	r1, #18
 1448              	.LVL108:
 587:src/menu.c    ****       break;
 1449              		.loc 1 587 9 view .LVU407
 1450 00a6 BAE7     		b	.L137
 1451              	.L148:
 1452              		.align	2
 1453              	.L147:
 1454 00a8 00000000 		.word	main_ram
 1455 00ac 00000000 		.word	.LANCHOR1
 1456 00b0 00000000 		.word	Menus
 1457 00b4 00000000 		.word	.LANCHOR4
 1458              		.cfi_endproc
 1459              	.LFE15:
 1461              		.section	.text.display_menu,"ax",%progbits
 1462              		.align	1
 1463              		.p2align 2,,3
 1464              		.global	display_menu
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1468              		.fpu fpv4-sp-d16
 1470              	display_menu:
 1471              	.LFB16:
 620:src/menu.c    **** 
 621:src/menu.c    **** void display_menu (struct _menu Ref) {
 1472              		.loc 1 621 38 is_stmt 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 208, pretend = 16, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 622:src/menu.c    ****   int len = 0;
 1476              		.loc 1 622 3 view .LVU409
 1477              	.LVL109:
 623:src/menu.c    ****   lcd_fill_rect (0, 188, 400, 52, 0); // clear bottom 52 rows for menu 
 1478              		.loc 1 623 3 view .LVU410
 621:src/menu.c    ****   int len = 0;
 1479              		.loc 1 621 38 is_stmt 0 view .LVU411
 1480 0000 84B0     		sub	sp, sp, #16
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 44
=======
ARM GAS  /tmp/ccCyL0em.s 			page 44
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1481              		.cfi_def_cfa_offset 16
 1482 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1483              		.cfi_def_cfa_offset 52
 1484              		.cfi_offset 4, -52
 1485              		.cfi_offset 5, -48
 1486              		.cfi_offset 6, -44
 1487              		.cfi_offset 7, -40
 1488              		.cfi_offset 8, -36
 1489              		.cfi_offset 9, -32
 1490              		.cfi_offset 10, -28
 1491              		.cfi_offset 11, -24
 1492              		.cfi_offset 14, -20
 1493 0006 83B0     		sub	sp, sp, #12
 1494              		.cfi_def_cfa_offset 64
 1495              		.loc 1 623 3 view .LVU412
 1496 0008 0024     		movs	r4, #0
 621:src/menu.c    ****   int len = 0;
 1497              		.loc 1 621 38 view .LVU413
 1498 000a 0CAD     		add	r5, sp, #48
 1499 000c 85E80F00 		stm	r5, {r0, r1, r2, r3}
 1500              		.loc 1 623 3 view .LVU414
 1501 0010 3E4E     		ldr	r6, .L167
 1502 0012 0094     		str	r4, [sp]
 1503 0014 2046     		mov	r0, r4
 1504 0016 3423     		movs	r3, #52
 1505 0018 4FF4C872 		mov	r2, #400
 1506 001c BC21     		movs	r1, #188
 1507 001e B047     		blx	r6
 1508              	.LVL110:
 624:src/menu.c    ****   lcd_fill_rect (0, 188, 400, 1, 0xff); // lines count from line 1? No. 
 1509              		.loc 1 624 3 is_stmt 1 view .LVU415
 1510 0020 3B4D     		ldr	r5, .L167+4
 1511 0022 FF23     		movs	r3, #255
 1512 0024 0093     		str	r3, [sp]
 1513 0026 4FF4C872 		mov	r2, #400
 1514 002a 0123     		movs	r3, #1
 1515 002c BC21     		movs	r1, #188
 1516 002e 2046     		mov	r0, r4
 1517 0030 B047     		blx	r6
 1518              	.LVL111:
 625:src/menu.c    ****   //Clear previous menu
 626:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1519              		.loc 1 626 3 view .LVU416
 1520              	.LBB89:
 1521              		.loc 1 626 8 view .LVU417
 1522              		.loc 1 626 21 view .LVU418
 627:src/menu.c    ****     mdots[col][0] = 0;
 1523              		.loc 1 627 19 is_stmt 0 view .LVU419
 1524 0032 2246     		mov	r2, r4
 1525 0034 05F5C871 		add	r1, r5, #400
 1526              	.LBE89:
 624:src/menu.c    ****   lcd_fill_rect (0, 188, 400, 1, 0xff); // lines count from line 1? No. 
 1527              		.loc 1 624 3 view .LVU420
 1528 0038 2B46     		mov	r3, r5
 1529              	.LVL112:
 1530              	.L150:
 1531              	.LBB90:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 45
=======
ARM GAS  /tmp/ccCyL0em.s 			page 45
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1532              		.loc 1 627 5 is_stmt 1 discriminator 3 view .LVU421
 1533              		.loc 1 627 19 is_stmt 0 discriminator 3 view .LVU422
 1534 003a 1A70     		strb	r2, [r3]
 628:src/menu.c    ****     mdots[col][1] = 0;
 1535              		.loc 1 628 5 is_stmt 1 discriminator 3 view .LVU423
 1536              		.loc 1 628 19 is_stmt 0 discriminator 3 view .LVU424
 1537 003c 5A70     		strb	r2, [r3, #1]
 626:src/menu.c    ****     mdots[col][0] = 0;
 1538              		.loc 1 626 32 is_stmt 1 discriminator 3 view .LVU425
 626:src/menu.c    ****     mdots[col][0] = 0;
 1539              		.loc 1 626 21 discriminator 3 view .LVU426
 1540 003e 0233     		adds	r3, r3, #2
 626:src/menu.c    ****     mdots[col][0] = 0;
 1541              		.loc 1 626 3 is_stmt 0 discriminator 3 view .LVU427
 1542 0040 9942     		cmp	r1, r3
 1543 0042 FAD1     		bne	.L150
 1544 0044 14AE     		add	r6, sp, #80
 626:src/menu.c    ****     mdots[col][0] = 0;
 1545              		.loc 1 626 3 view .LVU428
 1546 0046 0024     		movs	r4, #0
 1547              	.LVL113:
 1548              	.L151:
 626:src/menu.c    ****     mdots[col][0] = 0;
 1549              		.loc 1 626 3 view .LVU429
 1550              	.LBE90:
 1551              	.LBB91:
 629:src/menu.c    ****   }
 630:src/menu.c    **** 
 631:src/menu.c    ****   // Draw menu items
 632:src/menu.c    ****   // 
 633:src/menu.c    ****   for (int item = 0; item < 6; item++ ) {
 634:src/menu.c    ****     /*
 635:src/menu.c    ****       Starting dot in the row of 200 is item*32 - no gaps; gaps will be inserted when drawing
 636:src/menu.c    ****     */
 637:src/menu.c    ****     // Label is Ref.keys[item].unshifted_label
 638:src/menu.c    ****     // Unshifted first
 639:src/menu.c    ****       len = pixel_length (Ref.keys[item].unshifted_label, 0); // 0 means not small font
 1552              		.loc 1 639 7 is_stmt 1 view .LVU430
 1553              		.loc 1 639 13 is_stmt 0 view .LVU431
 1554 0048 0021     		movs	r1, #0
 1555 004a 3046     		mov	r0, r6
 1556 004c FFF7FEFF 		bl	pixel_length
 1557              	.LVL114:
 640:src/menu.c    ****       set_menu_label ( Ref.keys[item].unshifted_label, 0, item*32 + (32 - len)/2, 0 );
 1558              		.loc 1 640 7 is_stmt 1 view .LVU432
 1559              		.loc 1 640 73 is_stmt 0 view .LVU433
 1560 0050 C0F12000 		rsb	r0, r0, #32
 1561              	.LVL115:
 1562              		.loc 1 640 79 view .LVU434
 1563 0054 00EBD070 		add	r0, r0, r0, lsr #31
 1564              		.loc 1 640 7 view .LVU435
 1565 0058 04EB6001 		add	r1, r4, r0, asr #1
 1566 005c 0022     		movs	r2, #0
 1567 005e 3046     		mov	r0, r6
 1568 0060 06F10807 		add	r7, r6, #8
 1569 0064 FFF7FEFF 		bl	set_menu_label.constprop.0
 1570              	.LVL116:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 46
=======
ARM GAS  /tmp/ccCyL0em.s 			page 46
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 641:src/menu.c    ****       // Now shifted ...	
 642:src/menu.c    ****       len = pixel_length (Ref.keys[item].shifted_label, 0); // 0 means not small font
 1571              		.loc 1 642 7 is_stmt 1 view .LVU436
 1572              		.loc 1 642 13 is_stmt 0 view .LVU437
 1573 0068 0021     		movs	r1, #0
 1574 006a 3846     		mov	r0, r7
 1575 006c FFF7FEFF 		bl	pixel_length
 1576              	.LVL117:
 643:src/menu.c    ****       len = item*32 + (32-len)/2;
 1577              		.loc 1 643 7 is_stmt 1 view .LVU438
 1578              		.loc 1 643 26 is_stmt 0 view .LVU439
 1579 0070 C0F12000 		rsb	r0, r0, #32
 1580              	.LVL118:
 1581              		.loc 1 643 31 view .LVU440
 1582 0074 00EBD070 		add	r0, r0, r0, lsr #31
 1583              	.LVL119:
 644:src/menu.c    ****       if (len<0) len = 0;
 1584              		.loc 1 644 7 is_stmt 1 view .LVU441
 643:src/menu.c    ****       len = item*32 + (32-len)/2;
 1585              		.loc 1 643 11 is_stmt 0 view .LVU442
 1586 0078 04EB6001 		add	r1, r4, r0, asr #1
 1587              	.LVL120:
 643:src/menu.c    ****       len = item*32 + (32-len)/2;
 1588              		.loc 1 643 11 view .LVU443
 1589 007c C729     		cmp	r1, #199
 1590 007e A8BF     		it	ge
 1591 0080 C721     		movge	r1, #199
 1592              	.LVL121:
 645:src/menu.c    ****       if (len>199) len = 199;
 646:src/menu.c    ****       set_menu_label ( Ref.keys[item].shifted_label, 0, len, 1 );
 1593              		.loc 1 646 7 is_stmt 1 view .LVU444
 1594 0082 21EAE171 		bic	r1, r1, r1, asr #31
 1595              	.LVL122:
 1596              		.loc 1 646 7 is_stmt 0 view .LVU445
 1597 0086 3846     		mov	r0, r7
 1598 0088 2034     		adds	r4, r4, #32
 1599 008a 0122     		movs	r2, #1
 1600 008c FFF7FEFF 		bl	set_menu_label.constprop.0
 1601              	.LVL123:
 633:src/menu.c    ****     /*
 1602              		.loc 1 633 32 is_stmt 1 view .LVU446
 633:src/menu.c    ****     /*
 1603              		.loc 1 633 22 view .LVU447
 633:src/menu.c    ****     /*
 1604              		.loc 1 633 3 is_stmt 0 view .LVU448
 1605 0090 C02C     		cmp	r4, #192
 1606 0092 06F12006 		add	r6, r6, #32
 1607 0096 D7D1     		bne	.L151
 1608 0098 1E4E     		ldr	r6, .L167+8
 1609              	.LBE91:
 1610              	.LBB92:
 1611              	.LBB93:
 647:src/menu.c    ****   }
 648:src/menu.c    **** 
 649:src/menu.c    ****   for (int col = 0; col < 196; col++) {
 650:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 651:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 47
=======
ARM GAS  /tmp/ccCyL0em.s 			page 47
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 652:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 653:src/menu.c    **** 	lcd_fill_rect( 4+col*2, 233 - row*3, 3, 3, 0xff);
 1612              		.loc 1 653 2 view .LVU449
 1613 009a DFF87090 		ldr	r9, .L167
 1614 009e C5F1040A 		rsb	r10, r5, #4
 1615 00a2 06F5C47B 		add	fp, r6, #392
 1616              	.LBE93:
 1617              	.LBE92:
 1618              	.LBB95:
 633:src/menu.c    ****     /*
 1619              		.loc 1 633 3 view .LVU450
 1620 00a6 771E     		subs	r7, r6, #1
 1621              	.LBE95:
 1622              	.LBB96:
 1623              	.LBB94:
 1624              		.loc 1 653 2 view .LVU451
 1625 00a8 4FF0FF08 		mov	r8, #255
 1626              	.L152:
 1627              	.LVL124:
 650:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 1628              		.loc 1 650 23 is_stmt 1 view .LVU452
 1629 00ac 0AEB0705 		add	r5, r10, r7
 650:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 1630              		.loc 1 650 14 is_stmt 0 view .LVU453
 1631 00b0 0024     		movs	r4, #0
 1632              	.LVL125:
 1633              	.L155:
 651:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1634              		.loc 1 651 7 is_stmt 1 view .LVU454
 1635              		.loc 1 653 2 view .LVU455
 651:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1636              		.loc 1 651 22 is_stmt 0 view .LVU456
 1637 00b2 16F8012C 		ldrb	r2, [r6, #-1]	@ zero_extendqisi2
 651:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1638              		.loc 1 651 40 view .LVU457
 1639 00b6 2241     		asrs	r2, r2, r4
 1640              		.loc 1 653 2 view .LVU458
 1641 00b8 A4EB8401 		sub	r1, r4, r4, lsl #2
 1642 00bc 0323     		movs	r3, #3
 651:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1643              		.loc 1 651 10 view .LVU459
 1644 00be 12F0010F 		tst	r2, #1
 1645              		.loc 1 653 2 view .LVU460
 1646 00c2 01F1E901 		add	r1, r1, #233
 1647 00c6 1A46     		mov	r2, r3
 1648 00c8 2846     		mov	r0, r5
 651:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1649              		.loc 1 651 10 view .LVU461
 1650 00ca 02D0     		beq	.L153
 1651              		.loc 1 653 2 view .LVU462
 1652 00cc CDF80080 		str	r8, [sp]
 1653 00d0 C847     		blx	r9
 1654              	.LVL126:
 1655              	.L153:
 654:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1656              		.loc 1 654 7 is_stmt 1 view .LVU463
 655:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - 5*3 -10 - row*3, 3, 3, 0xff);
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 48
=======
ARM GAS  /tmp/ccCyL0em.s 			page 48
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 656:src/menu.c    **** 	lcd_fill_rect( 4+col*2, 233 - 5*3 -10 - row*3, 3, 3, 0xff);
 1657              		.loc 1 656 2 view .LVU464
 654:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1658              		.loc 1 654 22 is_stmt 0 view .LVU465
 1659 00d2 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 654:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1660              		.loc 1 654 40 view .LVU466
 1661 00d4 2241     		asrs	r2, r2, r4
 1662              		.loc 1 656 2 view .LVU467
 1663 00d6 A4EB8401 		sub	r1, r4, r4, lsl #2
 1664 00da 0323     		movs	r3, #3
 654:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1665              		.loc 1 654 10 view .LVU468
 1666 00dc 12F0010F 		tst	r2, #1
 1667              		.loc 1 656 2 view .LVU469
 1668 00e0 01F1D001 		add	r1, r1, #208
 1669 00e4 1A46     		mov	r2, r3
 1670 00e6 04F10104 		add	r4, r4, #1
 1671              	.LVL127:
 1672              		.loc 1 656 2 view .LVU470
 1673 00ea 2846     		mov	r0, r5
 654:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1674              		.loc 1 654 10 view .LVU471
 1675 00ec 02D0     		beq	.L154
 1676              		.loc 1 656 2 view .LVU472
 1677 00ee CDF80080 		str	r8, [sp]
 1678 00f2 C847     		blx	r9
 1679              	.LVL128:
 1680              	.L154:
 650:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 1681              		.loc 1 650 32 is_stmt 1 discriminator 2 view .LVU473
 650:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 1682              		.loc 1 650 23 discriminator 2 view .LVU474
 650:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 1683              		.loc 1 650 5 is_stmt 0 discriminator 2 view .LVU475
 1684 00f4 062C     		cmp	r4, #6
 1685 00f6 DCD1     		bne	.L155
 1686              	.LBE94:
 649:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1687              		.loc 1 649 32 is_stmt 1 discriminator 2 view .LVU476
 649:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1688              		.loc 1 649 21 discriminator 2 view .LVU477
 1689 00f8 0236     		adds	r6, r6, #2
 649:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1690              		.loc 1 649 3 is_stmt 0 discriminator 2 view .LVU478
 1691 00fa B345     		cmp	fp, r6
 1692 00fc 07F10207 		add	r7, r7, #2
 1693 0100 D4D1     		bne	.L152
 1694              	.LBE96:
 657:src/menu.c    ****     }
 658:src/menu.c    ****   }
 659:src/menu.c    **** }
 1695              		.loc 1 659 1 view .LVU479
 1696 0102 03B0     		add	sp, sp, #12
 1697              		.cfi_def_cfa_offset 52
 1698              		@ sp needed
 1699 0104 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 49
=======
ARM GAS  /tmp/ccCyL0em.s 			page 49
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1700              		.cfi_restore 14
 1701              		.cfi_restore 11
 1702              		.cfi_restore 10
 1703              		.cfi_restore 9
 1704              		.cfi_restore 8
 1705              		.cfi_restore 7
 1706              		.cfi_restore 6
 1707              		.cfi_restore 5
 1708              		.cfi_restore 4
 1709              		.cfi_def_cfa_offset 16
 1710              	.LVL129:
 1711              		.loc 1 659 1 view .LVU480
 1712 0108 04B0     		add	sp, sp, #16
 1713              		.cfi_def_cfa_offset 0
 1714 010a 7047     		bx	lr
 1715              	.L168:
 1716              		.align	2
 1717              	.L167:
 1718 010c 3D020008 		.word	134218301
 1719 0110 00000000 		.word	.LANCHOR0
 1720 0114 01000000 		.word	.LANCHOR0+1
 1721              		.cfi_endproc
 1722              	.LFE16:
 1724              		.section	.text.display_current_menu,"ax",%progbits
 1725              		.align	1
 1726              		.p2align 2,,3
 1727              		.global	display_current_menu
 1728              		.syntax unified
 1729              		.thumb
 1730              		.thumb_func
 1731              		.fpu fpv4-sp-d16
 1733              	display_current_menu:
 1734              	.LFB11:
 162:src/menu.c    ****   display_menu (get_current_menu_ref());
 1735              		.loc 1 162 30 is_stmt 1 view -0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 208
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 163:src/menu.c    **** }
 1739              		.loc 1 163 3 view .LVU482
 162:src/menu.c    ****   display_menu (get_current_menu_ref());
 1740              		.loc 1 162 30 is_stmt 0 view .LVU483
 1741 0000 10B5     		push	{r4, lr}
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 4, -8
 1744              		.cfi_offset 14, -4
 1745 0002 E4B0     		sub	sp, sp, #400
 1746              		.cfi_def_cfa_offset 408
 163:src/menu.c    **** }
 1747              		.loc 1 163 3 view .LVU484
 1748 0004 30AC     		add	r4, sp, #192
 1749 0006 2046     		mov	r0, r4
 1750 0008 FFF7FEFF 		bl	get_current_menu_ref
 1751              	.LVL130:
 1752 000c 34A9     		add	r1, sp, #208
 1753 000e C022     		movs	r2, #192
 1754 0010 6846     		mov	r0, sp
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 50
=======
ARM GAS  /tmp/ccCyL0em.s 			page 50
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1755 0012 FFF7FEFF 		bl	memcpy
 1756              	.LVL131:
 1757 0016 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1758 001a FFF7FEFF 		bl	display_menu
 1759              	.LVL132:
 164:src/menu.c    **** 
 1760              		.loc 1 164 1 view .LVU485
 1761 001e 64B0     		add	sp, sp, #400
 1762              		.cfi_def_cfa_offset 8
 1763              		@ sp needed
 1764 0020 10BD     		pop	{r4, pc}
 1765              		.cfi_endproc
 1766              	.LFE11:
 1768 0022 00BF     		.section	.text.all_menu_dots,"ax",%progbits
 1769              		.align	1
 1770              		.p2align 2,,3
 1771              		.global	all_menu_dots
 1772              		.syntax unified
 1773              		.thumb
 1774              		.thumb_func
 1775              		.fpu fpv4-sp-d16
 1777              	all_menu_dots:
 1778              	.LFB17:
 660:src/menu.c    **** 
 661:src/menu.c    **** void all_menu_dots () {
 1779              		.loc 1 661 23 is_stmt 1 view -0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 0
 1782              		@ frame_needed = 0, uses_anonymous_args = 0
 662:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1783              		.loc 1 662 3 view .LVU487
 1784              	.LBB97:
 1785              		.loc 1 662 8 view .LVU488
 1786              	.LVL133:
 1787              		.loc 1 662 21 view .LVU489
 1788              	.LBE97:
 661:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1789              		.loc 1 661 23 is_stmt 0 view .LVU490
 1790 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1791              		.cfi_def_cfa_offset 20
 1792              		.cfi_offset 4, -20
 1793              		.cfi_offset 5, -16
 1794              		.cfi_offset 6, -12
 1795              		.cfi_offset 7, -8
 1796              		.cfi_offset 14, -4
 1797              	.LBB101:
 1798              	.LBB98:
 663:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 664:src/menu.c    **** 	lcd_fill_rect( col*2, 233 - row*3, 3, 3, 0xff);
 1799              		.loc 1 664 2 view .LVU491
 1800 0002 0D4E     		ldr	r6, .L177
 1801              	.LBE98:
 1802              	.LBE101:
 661:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1803              		.loc 1 661 23 view .LVU492
 1804 0004 83B0     		sub	sp, sp, #12
 1805              		.cfi_def_cfa_offset 32
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 51
=======
ARM GAS  /tmp/ccCyL0em.s 			page 51
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 661:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1806              		.loc 1 661 23 view .LVU493
 1807 0006 0025     		movs	r5, #0
 1808              	.LBB102:
 1809              	.LBB99:
 1810              		.loc 1 664 2 view .LVU494
 1811 0008 FF27     		movs	r7, #255
 1812              	.LVL134:
 1813              	.L172:
 663:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1814              		.loc 1 663 23 is_stmt 1 view .LVU495
 1815              	.LBE99:
 1816              	.LBE102:
 661:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1817              		.loc 1 661 23 is_stmt 0 view .LVU496
 1818 000a E924     		movs	r4, #233
 1819              	.LVL135:
 1820              	.L173:
 1821              	.LBB103:
 1822              	.LBB100:
 1823              		.loc 1 664 2 is_stmt 1 discriminator 3 view .LVU497
 1824 000c 0323     		movs	r3, #3
 1825 000e 1A46     		mov	r2, r3
 1826 0010 2146     		mov	r1, r4
 1827 0012 2846     		mov	r0, r5
 1828 0014 0097     		str	r7, [sp]
 1829 0016 B047     		blx	r6
 1830              	.LVL136:
 665:src/menu.c    **** 	lcd_fill_rect( col*2, 233 - 5*3 -10 - row*3, 3, 3, 0xff);
 1831              		.loc 1 665 2 discriminator 3 view .LVU498
 1832 0018 0323     		movs	r3, #3
 1833 001a A4F11901 		sub	r1, r4, #25
 1834 001e 0097     		str	r7, [sp]
 1835 0020 1A46     		mov	r2, r3
 1836 0022 2846     		mov	r0, r5
 1837 0024 033C     		subs	r4, r4, #3
 1838 0026 B047     		blx	r6
 1839              	.LVL137:
 663:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1840              		.loc 1 663 32 discriminator 3 view .LVU499
 663:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1841              		.loc 1 663 23 discriminator 3 view .LVU500
 663:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1842              		.loc 1 663 5 is_stmt 0 discriminator 3 view .LVU501
 1843 0028 D72C     		cmp	r4, #215
 1844 002a EFD1     		bne	.L173
 1845              	.LBE100:
 662:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1846              		.loc 1 662 32 is_stmt 1 discriminator 2 view .LVU502
 662:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1847              		.loc 1 662 21 discriminator 2 view .LVU503
 1848 002c 0235     		adds	r5, r5, #2
 662:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1849              		.loc 1 662 3 is_stmt 0 discriminator 2 view .LVU504
 1850 002e B5F5C87F 		cmp	r5, #400
 1851 0032 EAD1     		bne	.L172
 1852              	.LBE103:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 52
=======
ARM GAS  /tmp/ccCyL0em.s 			page 52
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 666:src/menu.c    ****     }
 667:src/menu.c    ****   }
 668:src/menu.c    **** }  
 1853              		.loc 1 668 1 view .LVU505
 1854 0034 03B0     		add	sp, sp, #12
 1855              		.cfi_def_cfa_offset 20
 1856              		@ sp needed
 1857 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 1858              	.L178:
 1859              		.align	2
 1860              	.L177:
 1861 0038 3D020008 		.word	134218301
 1862              		.cfi_endproc
 1863              	.LFE17:
 1865              		.section	.text.umen_store,"ax",%progbits
 1866              		.align	1
 1867              		.p2align 2,,3
 1868              		.global	umen_store
 1869              		.syntax unified
 1870              		.thumb
 1871              		.thumb_func
 1872              		.fpu fpv4-sp-d16
 1874              	umen_store:
 1875              	.LVL138:
 1876              	.LFB20:
 669:src/menu.c    **** void umen_store (int i, opcode opc, char* buf1);
 670:src/menu.c    **** 
 671:src/menu.c    **** void build_user_menu(void){
 672:src/menu.c    ****   // find the label 'MNU'
 673:src/menu.c    ****    const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'M' + ('N' << 16) + ('U' << 24);
 674:src/menu.c    ****    build_user_menu_from_program (lbl);
 675:src/menu.c    **** }
 676:src/menu.c    **** 
 677:src/menu.c    **** void build_user_menu_from_program(int lbl)
 678:src/menu.c    **** {
 679:src/menu.c    ****   // find the label 'MNU'
 680:src/menu.c    ****   // const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'M' + ('N' << 16) + ('U' << 24);
 681:src/menu.c    ****   unsigned int pc = findmultilbl(lbl, 0);
 682:src/menu.c    ****   int i=0;
 683:src/menu.c    ****   s_opcode op;
 684:src/menu.c    ****   opcode opc;
 685:src/menu.c    ****   char buf1[16];
 686:src/menu.c    ****   char *p = buf1;
 687:src/menu.c    ****   char c;
 688:src/menu.c    ****   int finished = 0;
 689:src/menu.c    **** 
 690:src/menu.c    ****   for (int j = 0; j<6; j++) { // clear user menu
 691:src/menu.c    ****       UserMenu.keys[j].unshifted_label[0] = '\0';
 692:src/menu.c    ****       UserMenu.keys[j].unshifted.shift = 0;
 693:src/menu.c    ****       UserMenu.keys[j].unshifted.key_34s = K_NOP;
 694:src/menu.c    ****       UserMenu.keys[j].shifted_label[0] = '\0';
 695:src/menu.c    ****       UserMenu.keys[j].shifted.shift = 0;
 696:src/menu.c    ****       UserMenu.keys[j].shifted.key_34s = K_NOP;
 697:src/menu.c    ****   }
 698:src/menu.c    ****   while (pc && i < 12) {
 699:src/menu.c    **** 
 700:src/menu.c    ****     pc = do_inc(pc, 0);
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 53
=======
ARM GAS  /tmp/ccCyL0em.s 			page 53
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 701:src/menu.c    ****     opc = getprog(pc);
 702:src/menu.c    ****     op = (s_opcode) opc;
 703:src/menu.c    **** 
 704:src/menu.c    ****     if (op == (OP_NIL | OP_END))
 705:src/menu.c    ****       break;
 706:src/menu.c    ****     if (op == (OP_NIL | OP_NOP)) {
 707:src/menu.c    ****       if (i==4) {
 708:src/menu.c    **** 	UserMenu.keys[i].unshifted = (struct _ndmap) {K_ARROW, -1};
 709:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, arrow_key_string,5);
 710:src/menu.c    ****       }
 711:src/menu.c    ****       else if (i==5) {
 712:src/menu.c    **** 	UserMenu.keys[i].unshifted = (struct _ndmap) {K_CMPLX, -1};
 713:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, cmplx_key_string,5);
 714:src/menu.c    ****       }
 715:src/menu.c    ****       i += 1;
 716:src/menu.c    ****       continue;
 717:src/menu.c    ****     }
 718:src/menu.c    **** 
 719:src/menu.c    ****     if (isDBL(opc) && (opDBL(opc) == DBL_ALPHA)) { // is it double alpha?
 720:src/menu.c    ****       if ( finished==1 || p - buf1 == 6 ) { // if we've already finished an alpha...
 721:src/menu.c    **** 	umen_store (i, OP_NIL | OP_NOP, buf1); // no command, so store a NOP
 722:src/menu.c    **** 	i++;
 723:src/menu.c    ****     	p = buf1;
 724:src/menu.c    **** 	finished = 0;
 725:src/menu.c    ****       } // ..and start reading the new alpha
 726:src/menu.c    ****       *p++ = opc & 0xff; // character 1
 727:src/menu.c    ****       c = (opc >> 16) & 0xff;
 728:src/menu.c    ****       if (c != '\0') { // if character 2 isn't null..
 729:src/menu.c    **** 	*p++ = c;
 730:src/menu.c    **** 	c = opc>>24;
 731:src/menu.c    **** 	if (c != '\0') // if character 3 isn't null..
 732:src/menu.c    **** 	  *p++ = c;
 733:src/menu.c    ****       }
 734:src/menu.c    ****       *p = '\0'; // no ++: next character can overwrite the 0.
 735:src/menu.c    ****       if (c == '\0' || p - buf1 == 6) {
 736:src/menu.c    **** 	finished = 1;
 737:src/menu.c    ****       }
 738:src/menu.c    ****     }
 739:src/menu.c    ****     else { // Not a DBL_ALPHA op - the usual case
 740:src/menu.c    ****       if ( p == buf1 ) { // no alpha label to use
 741:src/menu.c    **** 	if (isRARG(op) && p == buf1) {
 742:src/menu.c    **** 	  const s_opcode rarg = RARG_CMD(op);
 743:src/menu.c    **** 	  if ( rarg != RARG_ALPHA && rarg != RARG_CONV
 744:src/menu.c    **** 	       && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX
 745:src/menu.c    **** 	       && ( (op & 0xff) == 0 ) ) { // argument = 0 
 746:src/menu.c    **** 	    catcmd (op, buf1); // display rarg without argument
 747:src/menu.c    **** 	  }
 748:src/menu.c    **** 	  else {
 749:src/menu.c    **** 	    prt_umen(opc, buf1); // display rarg with argument
 750:src/menu.c    **** 	  }
 751:src/menu.c    **** 	}
 752:src/menu.c    **** 	else {
 753:src/menu.c    **** 	  prt_umen(opc, buf1); // display non-rarg thing
 754:src/menu.c    **** 	}
 755:src/menu.c    ****       }
 756:src/menu.c    ****       else { // there is an alpha label to use, so reset
 757:src/menu.c    **** 	p = buf1;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 54
=======
ARM GAS  /tmp/ccCyL0em.s 			page 54
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 758:src/menu.c    **** 	finished = 0;
 759:src/menu.c    ****       }
 760:src/menu.c    ****       umen_store (i, opc, buf1);
 761:src/menu.c    ****       i++;
 762:src/menu.c    ****     }
 763:src/menu.c    ****   }
 764:src/menu.c    **** }
 765:src/menu.c    **** 
 766:src/menu.c    **** void umen_store (int i, opcode opc, char* buf1) {
 1877              		.loc 1 766 49 is_stmt 1 view -0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 0
 1880              		@ frame_needed = 0, uses_anonymous_args = 0
 767:src/menu.c    **** #pragma GCC diagnostic push
 768:src/menu.c    **** #pragma GCC diagnostic ignored "-Wstringop-truncation"
 769:src/menu.c    ****     if (i<6) {
 1881              		.loc 1 769 5 view .LVU507
 1882              		.loc 1 769 8 is_stmt 0 view .LVU508
 1883 0000 0528     		cmp	r0, #5
 766:src/menu.c    **** #pragma GCC diagnostic push
 1884              		.loc 1 766 49 view .LVU509
 1885 0002 70B5     		push	{r4, r5, r6, lr}
 1886              		.cfi_def_cfa_offset 16
 1887              		.cfi_offset 4, -16
 1888              		.cfi_offset 5, -12
 1889              		.cfi_offset 6, -8
 1890              		.cfi_offset 14, -4
 766:src/menu.c    **** #pragma GCC diagnostic push
 1891              		.loc 1 766 49 view .LVU510
 1892 0004 0D46     		mov	r5, r1
 1893 0006 0446     		mov	r4, r0
 1894 0008 1146     		mov	r1, r2
 1895              	.LVL139:
 1896              		.loc 1 769 8 view .LVU511
 1897 000a 0FDC     		bgt	.L180
 1898              	.LBB109:
 770:src/menu.c    ****       strncpy(UserMenu.keys[i].unshifted_label, buf1, 7);
 1899              		.loc 1 770 7 is_stmt 1 view .LVU512
 1900              		.loc 1 770 31 is_stmt 0 view .LVU513
 1901 000c 104E     		ldr	r6, .L183
 1902 000e 0130     		adds	r0, r0, #1
 1903              	.LVL140:
 771:src/menu.c    ****       UserMenu.keys[i].unshifted_label[7]='\0';
 1904              		.loc 1 771 42 view .LVU514
 1905 0010 06EB4414 		add	r4, r6, r4, lsl #5
 1906              	.LVL141:
 770:src/menu.c    ****       strncpy(UserMenu.keys[i].unshifted_label, buf1, 7);
 1907              		.loc 1 770 7 view .LVU515
 1908 0014 0722     		movs	r2, #7
 1909              	.LVL142:
 770:src/menu.c    ****       strncpy(UserMenu.keys[i].unshifted_label, buf1, 7);
 1910              		.loc 1 770 7 view .LVU516
 1911 0016 06EB4010 		add	r0, r6, r0, lsl #5
 1912              	.LVL143:
 770:src/menu.c    ****       strncpy(UserMenu.keys[i].unshifted_label, buf1, 7);
 1913              		.loc 1 770 7 view .LVU517
 1914 001a FFF7FEFF 		bl	strncpy
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 55
=======
ARM GAS  /tmp/ccCyL0em.s 			page 55
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 1915              	.LVL144:
 1916              		.loc 1 771 7 is_stmt 1 view .LVU518
 1917              		.loc 1 771 42 is_stmt 0 view .LVU519
 1918 001e 0022     		movs	r2, #0
 772:src/menu.c    ****       UserMenu.keys[i].unshifted = (struct _ndmap) {K_OP, opc};
 1919              		.loc 1 772 34 view .LVU520
 1920 0020 3423     		movs	r3, #52
 771:src/menu.c    ****       UserMenu.keys[i].unshifted_label[7]='\0';
 1921              		.loc 1 771 42 view .LVU521
 1922 0022 84F82720 		strb	r2, [r4, #39]
 1923              		.loc 1 772 7 is_stmt 1 view .LVU522
 1924              		.loc 1 772 34 is_stmt 0 view .LVU523
 1925 0026 2374     		strb	r3, [r4, #16]
 1926 0028 6561     		str	r5, [r4, #20]
 1927              	.LBE109:
 773:src/menu.c    ****     }
 774:src/menu.c    ****     else {
 775:src/menu.c    ****       strncpy(UserMenu.keys[i-6].shifted_label, buf1, 7);
 776:src/menu.c    ****       UserMenu.keys[i-6].shifted_label[7]='\0';
 777:src/menu.c    ****       UserMenu.keys[i-6].shifted = (struct _ndmap) {K_OP, opc};
 778:src/menu.c    ****     }
 779:src/menu.c    **** #pragma GCC diagnostic pop
 780:src/menu.c    **** }  
 1928              		.loc 1 780 1 view .LVU524
 1929 002a 70BD     		pop	{r4, r5, r6, pc}
 1930              	.LVL145:
 1931              	.L180:
 1932              	.LBB110:
 1933              	.LBI110:
 766:src/menu.c    **** #pragma GCC diagnostic push
 1934              		.loc 1 766 6 is_stmt 1 view .LVU525
 1935              	.LBB111:
 1936              	.LBB112:
 775:src/menu.c    ****       UserMenu.keys[i-6].shifted_label[7]='\0';
 1937              		.loc 1 775 7 view .LVU526
 775:src/menu.c    ****       UserMenu.keys[i-6].shifted_label[7]='\0';
 1938              		.loc 1 775 30 is_stmt 0 view .LVU527
 1939 002c 841F     		subs	r4, r0, #6
 775:src/menu.c    ****       UserMenu.keys[i-6].shifted_label[7]='\0';
 1940              		.loc 1 775 33 view .LVU528
 1941 002e 084E     		ldr	r6, .L183
 1942 0030 6401     		lsls	r4, r4, #5
 1943 0032 04F12800 		add	r0, r4, #40
 1944              	.LVL146:
 775:src/menu.c    ****       UserMenu.keys[i-6].shifted_label[7]='\0';
 1945              		.loc 1 775 7 view .LVU529
 1946 0036 0722     		movs	r2, #7
 776:src/menu.c    ****       UserMenu.keys[i-6].shifted = (struct _ndmap) {K_OP, opc};
 1947              		.loc 1 776 42 view .LVU530
 1948 0038 3444     		add	r4, r4, r6
 775:src/menu.c    ****       UserMenu.keys[i-6].shifted_label[7]='\0';
 1949              		.loc 1 775 7 view .LVU531
 1950 003a 3044     		add	r0, r0, r6
 1951 003c FFF7FEFF 		bl	strncpy
 1952              	.LVL147:
 776:src/menu.c    ****       UserMenu.keys[i-6].shifted = (struct _ndmap) {K_OP, opc};
 1953              		.loc 1 776 7 is_stmt 1 view .LVU532
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 56
=======
ARM GAS  /tmp/ccCyL0em.s 			page 56
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 776:src/menu.c    ****       UserMenu.keys[i-6].shifted = (struct _ndmap) {K_OP, opc};
 1954              		.loc 1 776 42 is_stmt 0 view .LVU533
 1955 0040 0022     		movs	r2, #0
 777:src/menu.c    ****     }
 1956              		.loc 1 777 34 view .LVU534
 1957 0042 3423     		movs	r3, #52
 776:src/menu.c    ****       UserMenu.keys[i-6].shifted = (struct _ndmap) {K_OP, opc};
 1958              		.loc 1 776 42 view .LVU535
 1959 0044 84F82F20 		strb	r2, [r4, #47]
 777:src/menu.c    ****     }
 1960              		.loc 1 777 7 is_stmt 1 view .LVU536
 1961              	.LVL148:
 777:src/menu.c    ****     }
 1962              		.loc 1 777 34 is_stmt 0 view .LVU537
 1963 0048 2376     		strb	r3, [r4, #24]
 1964 004a E561     		str	r5, [r4, #28]
 1965              	.LBE112:
 1966              	.LBE111:
 1967              	.LBE110:
 1968              		.loc 1 780 1 view .LVU538
 1969 004c 70BD     		pop	{r4, r5, r6, pc}
 1970              	.LVL149:
 1971              	.L184:
 1972              		.loc 1 780 1 view .LVU539
 1973 004e 00BF     		.align	2
 1974              	.L183:
 1975 0050 00000000 		.word	.LANCHOR4
 1976              		.cfi_endproc
 1977              	.LFE20:
 1979              		.section	.text.build_user_menu_from_program,"ax",%progbits
 1980              		.align	1
 1981              		.p2align 2,,3
 1982              		.global	build_user_menu_from_program
 1983              		.syntax unified
 1984              		.thumb
 1985              		.thumb_func
 1986              		.fpu fpv4-sp-d16
 1988              	build_user_menu_from_program:
 1989              	.LVL150:
 1990              	.LFB19:
 678:src/menu.c    ****   // find the label 'MNU'
 1991              		.loc 1 678 1 is_stmt 1 view -0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 16
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
 681:src/menu.c    ****   int i=0;
 1995              		.loc 1 681 3 view .LVU541
 678:src/menu.c    ****   // find the label 'MNU'
 1996              		.loc 1 678 1 is_stmt 0 view .LVU542
 1997 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1998              		.cfi_def_cfa_offset 36
 1999              		.cfi_offset 4, -36
 2000              		.cfi_offset 5, -32
 2001              		.cfi_offset 6, -28
 2002              		.cfi_offset 7, -24
 2003              		.cfi_offset 8, -20
 2004              		.cfi_offset 9, -16
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 57
=======
ARM GAS  /tmp/ccCyL0em.s 			page 57
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2005              		.cfi_offset 10, -12
 2006              		.cfi_offset 11, -8
 2007              		.cfi_offset 14, -4
 681:src/menu.c    ****   int i=0;
 2008              		.loc 1 681 21 view .LVU543
 2009 0004 0021     		movs	r1, #0
 678:src/menu.c    ****   // find the label 'MNU'
 2010              		.loc 1 678 1 view .LVU544
 2011 0006 85B0     		sub	sp, sp, #20
 2012              		.cfi_def_cfa_offset 56
 681:src/menu.c    ****   int i=0;
 2013              		.loc 1 681 21 view .LVU545
 2014 0008 FFF7FEFF 		bl	findmultilbl
 2015              	.LVL151:
 681:src/menu.c    ****   int i=0;
 2016              		.loc 1 681 21 view .LVU546
 2017 000c 5C4B     		ldr	r3, .L236
 2018 000e 0546     		mov	r5, r0
 2019              	.LVL152:
 682:src/menu.c    ****   s_opcode op;
 2020              		.loc 1 682 3 is_stmt 1 view .LVU547
 683:src/menu.c    ****   opcode opc;
 2021              		.loc 1 683 3 view .LVU548
 684:src/menu.c    ****   char buf1[16];
 2022              		.loc 1 684 3 view .LVU549
 685:src/menu.c    ****   char *p = buf1;
 2023              		.loc 1 685 3 view .LVU550
 686:src/menu.c    ****   char c;
 2024              		.loc 1 686 3 view .LVU551
 687:src/menu.c    ****   int finished = 0;
 2025              		.loc 1 687 3 view .LVU552
 688:src/menu.c    **** 
 2026              		.loc 1 688 3 view .LVU553
 690:src/menu.c    ****       UserMenu.keys[j].unshifted_label[0] = '\0';
 2027              		.loc 1 690 3 view .LVU554
 2028              	.LBB113:
 690:src/menu.c    ****       UserMenu.keys[j].unshifted_label[0] = '\0';
 2029              		.loc 1 690 8 view .LVU555
 690:src/menu.c    ****       UserMenu.keys[j].unshifted_label[0] = '\0';
 2030              		.loc 1 690 19 view .LVU556
 691:src/menu.c    ****       UserMenu.keys[j].unshifted.shift = 0;
 2031              		.loc 1 691 43 is_stmt 0 view .LVU557
 2032 0010 0022     		movs	r2, #0
 2033 0012 03F1C000 		add	r0, r3, #192
 2034              	.LVL153:
 693:src/menu.c    ****       UserMenu.keys[j].shifted_label[0] = '\0';
 2035              		.loc 1 693 42 view .LVU558
 2036 0016 2E21     		movs	r1, #46
 2037              	.LVL154:
 2038              	.L186:
 691:src/menu.c    ****       UserMenu.keys[j].unshifted.shift = 0;
 2039              		.loc 1 691 7 is_stmt 1 discriminator 3 view .LVU559
 691:src/menu.c    ****       UserMenu.keys[j].unshifted.shift = 0;
 2040              		.loc 1 691 43 is_stmt 0 discriminator 3 view .LVU560
 2041 0018 83F82020 		strb	r2, [r3, #32]
 692:src/menu.c    ****       UserMenu.keys[j].unshifted.key_34s = K_NOP;
 2042              		.loc 1 692 7 is_stmt 1 discriminator 3 view .LVU561
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 58
=======
ARM GAS  /tmp/ccCyL0em.s 			page 58
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 692:src/menu.c    ****       UserMenu.keys[j].unshifted.key_34s = K_NOP;
 2043              		.loc 1 692 40 is_stmt 0 discriminator 3 view .LVU562
 2044 001c 5A61     		str	r2, [r3, #20]
 693:src/menu.c    ****       UserMenu.keys[j].shifted_label[0] = '\0';
 2045              		.loc 1 693 7 is_stmt 1 discriminator 3 view .LVU563
 693:src/menu.c    ****       UserMenu.keys[j].shifted_label[0] = '\0';
 2046              		.loc 1 693 42 is_stmt 0 discriminator 3 view .LVU564
 2047 001e 1974     		strb	r1, [r3, #16]
 694:src/menu.c    ****       UserMenu.keys[j].shifted.shift = 0;
 2048              		.loc 1 694 7 is_stmt 1 discriminator 3 view .LVU565
 694:src/menu.c    ****       UserMenu.keys[j].shifted.shift = 0;
 2049              		.loc 1 694 41 is_stmt 0 discriminator 3 view .LVU566
 2050 0020 83F82820 		strb	r2, [r3, #40]
 695:src/menu.c    ****       UserMenu.keys[j].shifted.key_34s = K_NOP;
 2051              		.loc 1 695 7 is_stmt 1 discriminator 3 view .LVU567
 695:src/menu.c    ****       UserMenu.keys[j].shifted.key_34s = K_NOP;
 2052              		.loc 1 695 38 is_stmt 0 discriminator 3 view .LVU568
 2053 0024 DA61     		str	r2, [r3, #28]
 696:src/menu.c    ****   }
 2054              		.loc 1 696 7 is_stmt 1 discriminator 3 view .LVU569
 696:src/menu.c    ****   }
 2055              		.loc 1 696 40 is_stmt 0 discriminator 3 view .LVU570
 2056 0026 1976     		strb	r1, [r3, #24]
 690:src/menu.c    ****       UserMenu.keys[j].unshifted_label[0] = '\0';
 2057              		.loc 1 690 24 is_stmt 1 discriminator 3 view .LVU571
 690:src/menu.c    ****       UserMenu.keys[j].unshifted_label[0] = '\0';
 2058              		.loc 1 690 19 discriminator 3 view .LVU572
 2059 0028 2033     		adds	r3, r3, #32
 690:src/menu.c    ****       UserMenu.keys[j].unshifted_label[0] = '\0';
 2060              		.loc 1 690 3 is_stmt 0 discriminator 3 view .LVU573
 2061 002a 8342     		cmp	r3, r0
 2062 002c F4D1     		bne	.L186
 690:src/menu.c    ****       UserMenu.keys[j].unshifted_label[0] = '\0';
 2063              		.loc 1 690 3 discriminator 3 view .LVU574
 2064              	.LBE113:
 698:src/menu.c    **** 
 2065              		.loc 1 698 9 is_stmt 1 view .LVU575
 2066 002e 65B3     		cbz	r5, .L185
 2067              	.LBB114:
 712:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, cmplx_key_string,5);
 2068              		.loc 1 712 29 is_stmt 0 view .LVU576
 2069 0030 DFF86891 		ldr	r9, .L236+28
 2070              	.LBE114:
 688:src/menu.c    **** 
 2071              		.loc 1 688 7 view .LVU577
 2072 0034 4FF00008 		mov	r8, #0
 686:src/menu.c    ****   char c;
 2073              		.loc 1 686 9 view .LVU578
 2074 0038 6E46     		mov	r6, sp
 2075              	.LBB115:
 709:src/menu.c    ****       }
 2076              		.loc 1 709 2 view .LVU579
 2077 003a A9F1100A 		sub	r10, r9, #16
 2078              	.LBE115:
 682:src/menu.c    ****   s_opcode op;
 2079              		.loc 1 682 7 view .LVU580
 2080 003e C346     		mov	fp, r8
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 59
=======
ARM GAS  /tmp/ccCyL0em.s 			page 59
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 686:src/menu.c    ****   char c;
 2081              		.loc 1 686 9 view .LVU581
 2082 0040 3746     		mov	r7, r6
 2083              	.LVL155:
 2084              	.L187:
 700:src/menu.c    ****     opc = getprog(pc);
 2085              		.loc 1 700 5 is_stmt 1 view .LVU582
 700:src/menu.c    ****     opc = getprog(pc);
 2086              		.loc 1 700 10 is_stmt 0 view .LVU583
 2087 0042 2846     		mov	r0, r5
 2088 0044 0021     		movs	r1, #0
 2089 0046 FFF7FEFF 		bl	do_inc
 2090              	.LVL156:
 2091 004a 0546     		mov	r5, r0
 2092              	.LVL157:
 701:src/menu.c    ****     op = (s_opcode) opc;
 2093              		.loc 1 701 5 is_stmt 1 view .LVU584
 701:src/menu.c    ****     op = (s_opcode) opc;
 2094              		.loc 1 701 11 is_stmt 0 view .LVU585
 2095 004c FFF7FEFF 		bl	getprog
 2096              	.LVL158:
 702:src/menu.c    **** 
 2097              		.loc 1 702 8 view .LVU586
 2098 0050 83B2     		uxth	r3, r0
 704:src/menu.c    ****       break;
 2099              		.loc 1 704 8 view .LVU587
 2100 0052 B3F59D7F 		cmp	r3, #314
 701:src/menu.c    ****     op = (s_opcode) opc;
 2101              		.loc 1 701 11 view .LVU588
 2102 0056 0446     		mov	r4, r0
 2103              	.LVL159:
 702:src/menu.c    **** 
 2104              		.loc 1 702 5 is_stmt 1 view .LVU589
 704:src/menu.c    ****       break;
 2105              		.loc 1 704 5 view .LVU590
 704:src/menu.c    ****       break;
 2106              		.loc 1 704 8 is_stmt 0 view .LVU591
 2107 0058 17D0     		beq	.L185
 706:src/menu.c    ****       if (i==4) {
 2108              		.loc 1 706 5 is_stmt 1 view .LVU592
 706:src/menu.c    ****       if (i==4) {
 2109              		.loc 1 706 8 is_stmt 0 view .LVU593
 2110 005a B3F5807F 		cmp	r3, #256
 2111 005e 43D0     		beq	.L228
 719:src/menu.c    ****       if ( finished==1 || p - buf1 == 6 ) { // if we've already finished an alpha...
 2112              		.loc 1 719 5 is_stmt 1 view .LVU594
 719:src/menu.c    ****       if ( finished==1 || p - buf1 == 6 ) { // if we've already finished an alpha...
 2113              		.loc 1 719 9 is_stmt 0 view .LVU595
 2114 0060 00F47042 		and	r2, r0, #61440
 719:src/menu.c    ****       if ( finished==1 || p - buf1 == 6 ) { // if we've already finished an alpha...
 2115              		.loc 1 719 8 view .LVU596
 2116 0064 B2F5704F 		cmp	r2, #61440
 2117 0068 12D0     		beq	.L229
 2118              	.L193:
 740:src/menu.c    **** 	if (isRARG(op) && p == buf1) {
 2119              		.loc 1 740 7 is_stmt 1 view .LVU597
 740:src/menu.c    **** 	if (isRARG(op) && p == buf1) {
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 60
=======
ARM GAS  /tmp/ccCyL0em.s 			page 60
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2120              		.loc 1 740 10 is_stmt 0 view .LVU598
 2121 006a B742     		cmp	r7, r6
 2122 006c 26D0     		beq	.L230
 758:src/menu.c    ****       }
 2123              		.loc 1 758 11 view .LVU599
 2124 006e 4FF00008 		mov	r8, #0
 2125              	.LVL160:
 2126              	.L199:
 760:src/menu.c    ****       i++;
 2127              		.loc 1 760 7 is_stmt 1 view .LVU600
 2128 0072 5846     		mov	r0, fp
 2129 0074 2146     		mov	r1, r4
 2130 0076 3246     		mov	r2, r6
 2131 0078 FFF7FEFF 		bl	umen_store
 2132              	.LVL161:
 761:src/menu.c    ****     }
 2133              		.loc 1 761 7 view .LVU601
 761:src/menu.c    ****     }
 2134              		.loc 1 761 8 is_stmt 0 view .LVU602
 2135 007c 0BF1010B 		add	fp, fp, #1
 2136              	.LVL162:
 761:src/menu.c    ****     }
 2137              		.loc 1 761 8 view .LVU603
 2138 0080 3746     		mov	r7, r6
 2139              	.LVL163:
 2140              	.L192:
 698:src/menu.c    **** 
 2141              		.loc 1 698 9 is_stmt 1 view .LVU604
 2142 0082 15B1     		cbz	r5, .L185
 698:src/menu.c    **** 
 2143              		.loc 1 698 13 is_stmt 0 discriminator 1 view .LVU605
 2144 0084 BBF10C0F 		cmp	fp, #12
 2145 0088 DBD1     		bne	.L187
 2146              	.LVL164:
 2147              	.L185:
 764:src/menu.c    **** 
 2148              		.loc 1 764 1 view .LVU606
 2149 008a 05B0     		add	sp, sp, #20
 2150              		.cfi_remember_state
 2151              		.cfi_def_cfa_offset 36
 2152              		@ sp needed
 2153 008c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2154              	.LVL165:
 2155              	.L229:
 2156              		.cfi_restore_state
 719:src/menu.c    ****       if ( finished==1 || p - buf1 == 6 ) { // if we've already finished an alpha...
 2157              		.loc 1 719 24 discriminator 1 view .LVU607
 2158 0090 C0F30321 		ubfx	r1, r0, #8, #4
 719:src/menu.c    ****       if ( finished==1 || p - buf1 == 6 ) { // if we've already finished an alpha...
 2159              		.loc 1 719 20 discriminator 1 view .LVU608
 2160 0094 0A29     		cmp	r1, #10
 2161 0096 E8D1     		bne	.L193
 720:src/menu.c    **** 	umen_store (i, OP_NIL | OP_NOP, buf1); // no command, so store a NOP
 2162              		.loc 1 720 7 is_stmt 1 view .LVU609
 720:src/menu.c    **** 	umen_store (i, OP_NIL | OP_NOP, buf1); // no command, so store a NOP
 2163              		.loc 1 720 10 is_stmt 0 view .LVU610
 2164 0098 B8F1000F 		cmp	r8, #0
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 61
=======
ARM GAS  /tmp/ccCyL0em.s 			page 61
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2165 009c 40D1     		bne	.L194
 720:src/menu.c    **** 	umen_store (i, OP_NIL | OP_NOP, buf1); // no command, so store a NOP
 2166              		.loc 1 720 29 discriminator 1 view .LVU611
 2167 009e BB1B     		subs	r3, r7, r6
 2168              	.LVL166:
 720:src/menu.c    **** 	umen_store (i, OP_NIL | OP_NOP, buf1); // no command, so store a NOP
 2169              		.loc 1 720 24 discriminator 1 view .LVU612
 2170 00a0 062B     		cmp	r3, #6
 2171 00a2 3DD0     		beq	.L194
 2172              	.LVL167:
 726:src/menu.c    ****       c = (opc >> 16) & 0xff;
 2173              		.loc 1 726 7 is_stmt 1 view .LVU613
 728:src/menu.c    **** 	*p++ = c;
 2174              		.loc 1 728 10 is_stmt 0 view .LVU614
 2175 00a4 14F47F0F 		tst	r4, #16711680
 726:src/menu.c    ****       c = (opc >> 16) & 0xff;
 2176              		.loc 1 726 12 view .LVU615
 2177 00a8 3C70     		strb	r4, [r7]
 727:src/menu.c    ****       if (c != '\0') { // if character 2 isn't null..
 2178              		.loc 1 727 7 is_stmt 1 view .LVU616
 727:src/menu.c    ****       if (c != '\0') { // if character 2 isn't null..
 2179              		.loc 1 727 9 is_stmt 0 view .LVU617
 2180 00aa C4F30743 		ubfx	r3, r4, #16, #8
 2181              	.LVL168:
 728:src/menu.c    **** 	*p++ = c;
 2182              		.loc 1 728 7 is_stmt 1 view .LVU618
 728:src/menu.c    **** 	*p++ = c;
 2183              		.loc 1 728 10 is_stmt 0 view .LVU619
 2184 00ae 24D1     		bne	.L231
 2185              	.LVL169:
 2186              	.L196:
 726:src/menu.c    ****       c = (opc >> 16) & 0xff;
 2187              		.loc 1 726 9 view .LVU620
 2188 00b0 0137     		adds	r7, r7, #1
 2189              	.LVL170:
 2190              	.L198:
 734:src/menu.c    ****       if (c == '\0' || p - buf1 == 6) {
 2191              		.loc 1 734 7 is_stmt 1 view .LVU621
 734:src/menu.c    ****       if (c == '\0' || p - buf1 == 6) {
 2192              		.loc 1 734 10 is_stmt 0 view .LVU622
 2193 00b2 0023     		movs	r3, #0
 2194 00b4 3B70     		strb	r3, [r7]
 735:src/menu.c    **** 	finished = 1;
 2195              		.loc 1 735 7 is_stmt 1 view .LVU623
 736:src/menu.c    ****       }
 2196              		.loc 1 736 11 is_stmt 0 view .LVU624
 2197 00b6 4FF00108 		mov	r8, #1
 2198 00ba E2E7     		b	.L192
 2199              	.LVL171:
 2200              	.L230:
 741:src/menu.c    **** 	  const s_opcode rarg = RARG_CMD(op);
 2201              		.loc 1 741 2 is_stmt 1 view .LVU625
 2202 00bc A0B2     		uxth	r0, r4
 2203              	.LVL172:
 741:src/menu.c    **** 	  const s_opcode rarg = RARG_CMD(op);
 2204              		.loc 1 741 5 is_stmt 0 view .LVU626
 2205 00be 72B1     		cbz	r2, .L200
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 62
=======
ARM GAS  /tmp/ccCyL0em.s 			page 62
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 741:src/menu.c    **** 	  const s_opcode rarg = RARG_CMD(op);
 2206              		.loc 1 741 6 discriminator 1 view .LVU627
 2207 00c0 B2F5704F 		cmp	r2, #61440
 2208 00c4 0BD0     		beq	.L200
 2209              	.LBB116:
 742:src/menu.c    **** 	  if ( rarg != RARG_ALPHA && rarg != RARG_CONV
 2210              		.loc 1 742 4 is_stmt 1 view .LVU628
 742:src/menu.c    **** 	  if ( rarg != RARG_ALPHA && rarg != RARG_CONV
 2211              		.loc 1 742 26 is_stmt 0 view .LVU629
 2212 00c6 1B0A     		lsrs	r3, r3, #8
 2213              	.LVL173:
 742:src/menu.c    **** 	  if ( rarg != RARG_ALPHA && rarg != RARG_CONV
 2214              		.loc 1 742 26 view .LVU630
 2215 00c8 203B     		subs	r3, r3, #32
 2216 00ca DBB2     		uxtb	r3, r3
 2217              	.LVL174:
 743:src/menu.c    **** 	       && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX
 2218              		.loc 1 743 4 is_stmt 1 view .LVU631
 743:src/menu.c    **** 	       && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX
 2219              		.loc 1 743 7 is_stmt 0 view .LVU632
 2220 00cc 242B     		cmp	r3, #36
 2221 00ce 06D0     		beq	.L200
 743:src/menu.c    **** 	       && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX
 2222              		.loc 1 743 28 discriminator 1 view .LVU633
 2223 00d0 6C2B     		cmp	r3, #108
 2224 00d2 04D0     		beq	.L200
 744:src/menu.c    **** 	       && ( (op & 0xff) == 0 ) ) { // argument = 0 
 2225              		.loc 1 744 9 view .LVU634
 2226 00d4 012B     		cmp	r3, #1
 2227 00d6 02D9     		bls	.L200
 745:src/menu.c    **** 	    catcmd (op, buf1); // display rarg without argument
 2228              		.loc 1 745 9 view .LVU635
 2229 00d8 10F0FF0F 		tst	r0, #255
 2230 00dc 4BD0     		beq	.L232
 2231              	.LVL175:
 2232              	.L200:
 745:src/menu.c    **** 	    catcmd (op, buf1); // display rarg without argument
 2233              		.loc 1 745 9 view .LVU636
 2234              	.LBE116:
 753:src/menu.c    **** 	}
 2235              		.loc 1 753 4 is_stmt 1 view .LVU637
 2236 00de 3146     		mov	r1, r6
 2237 00e0 2046     		mov	r0, r4
 2238 00e2 FFF7FEFF 		bl	prt_umen
 2239              	.LVL176:
 2240 00e6 C4E7     		b	.L199
 2241              	.LVL177:
 2242              	.L228:
 707:src/menu.c    **** 	UserMenu.keys[i].unshifted = (struct _ndmap) {K_ARROW, -1};
 2243              		.loc 1 707 7 view .LVU638
 707:src/menu.c    **** 	UserMenu.keys[i].unshifted = (struct _ndmap) {K_ARROW, -1};
 2244              		.loc 1 707 10 is_stmt 0 view .LVU639
 2245 00e8 BBF1040F 		cmp	fp, #4
 2246 00ec 28D0     		beq	.L233
 711:src/menu.c    **** 	UserMenu.keys[i].unshifted = (struct _ndmap) {K_CMPLX, -1};
 2247              		.loc 1 711 12 is_stmt 1 view .LVU640
 711:src/menu.c    **** 	UserMenu.keys[i].unshifted = (struct _ndmap) {K_CMPLX, -1};
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 63
=======
ARM GAS  /tmp/ccCyL0em.s 			page 63
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2248              		.loc 1 711 15 is_stmt 0 view .LVU641
 2249 00ee BBF1050F 		cmp	fp, #5
 2250 00f2 32D0     		beq	.L234
 2251              	.LVL178:
 2252              	.L191:
 715:src/menu.c    ****       continue;
 2253              		.loc 1 715 7 is_stmt 1 view .LVU642
 715:src/menu.c    ****       continue;
 2254              		.loc 1 715 9 is_stmt 0 view .LVU643
 2255 00f4 0BF1010B 		add	fp, fp, #1
 2256              	.LVL179:
 716:src/menu.c    ****     }
 2257              		.loc 1 716 7 is_stmt 1 view .LVU644
 2258 00f8 C3E7     		b	.L192
 2259              	.LVL180:
 2260              	.L231:
 729:src/menu.c    **** 	c = opc>>24;
 2261              		.loc 1 729 2 view .LVU645
 729:src/menu.c    **** 	c = opc>>24;
 2262              		.loc 1 729 7 is_stmt 0 view .LVU646
 2263 00fa 7B70     		strb	r3, [r7, #1]
 730:src/menu.c    **** 	if (c != '\0') // if character 3 isn't null..
 2264              		.loc 1 730 2 is_stmt 1 view .LVU647
 731:src/menu.c    **** 	  *p++ = c;
 2265              		.loc 1 731 5 is_stmt 0 view .LVU648
 2266 00fc 230E     		lsrs	r3, r4, #24
 2267              	.LVL181:
 730:src/menu.c    **** 	if (c != '\0') // if character 3 isn't null..
 2268              		.loc 1 730 4 view .LVU649
 2269 00fe 4FEA1461 		lsr	r1, r4, #24
 2270              	.LVL182:
 731:src/menu.c    **** 	  *p++ = c;
 2271              		.loc 1 731 2 is_stmt 1 view .LVU650
 731:src/menu.c    **** 	  *p++ = c;
 2272              		.loc 1 731 5 is_stmt 0 view .LVU651
 2273 0102 36D0     		beq	.L235
 732:src/menu.c    ****       }
 2274              		.loc 1 732 4 is_stmt 1 view .LVU652
 732:src/menu.c    ****       }
 2275              		.loc 1 732 6 is_stmt 0 view .LVU653
 2276 0104 FB1C     		adds	r3, r7, #3
 2277              	.LVL183:
 735:src/menu.c    **** 	finished = 1;
 2278              		.loc 1 735 26 view .LVU654
 2279 0106 A3EB0608 		sub	r8, r3, r6
 735:src/menu.c    **** 	finished = 1;
 2280              		.loc 1 735 21 view .LVU655
 2281 010a A8F10608 		sub	r8, r8, #6
 734:src/menu.c    ****       if (c == '\0' || p - buf1 == 6) {
 2282              		.loc 1 734 10 view .LVU656
 2283 010e 0022     		movs	r2, #0
 735:src/menu.c    **** 	finished = 1;
 2284              		.loc 1 735 21 view .LVU657
 2285 0110 B8FA88F8 		clz	r8, r8
 732:src/menu.c    ****       }
 2286              		.loc 1 732 9 view .LVU658
 2287 0114 B970     		strb	r1, [r7, #2]
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 64
=======
ARM GAS  /tmp/ccCyL0em.s 			page 64
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 734:src/menu.c    ****       if (c == '\0' || p - buf1 == 6) {
 2288              		.loc 1 734 7 is_stmt 1 view .LVU659
 734:src/menu.c    ****       if (c == '\0' || p - buf1 == 6) {
 2289              		.loc 1 734 10 is_stmt 0 view .LVU660
 2290 0116 FA70     		strb	r2, [r7, #3]
 735:src/menu.c    **** 	finished = 1;
 2291              		.loc 1 735 7 is_stmt 1 view .LVU661
 735:src/menu.c    **** 	finished = 1;
 2292              		.loc 1 735 21 is_stmt 0 view .LVU662
 2293 0118 4FEA5818 		lsr	r8, r8, #5
 732:src/menu.c    ****       }
 2294              		.loc 1 732 6 view .LVU663
 2295 011c 1F46     		mov	r7, r3
 2296 011e B0E7     		b	.L192
 2297              	.LVL184:
 2298              	.L194:
 721:src/menu.c    **** 	i++;
 2299              		.loc 1 721 2 is_stmt 1 view .LVU664
 2300 0120 5846     		mov	r0, fp
 2301              	.LVL185:
 721:src/menu.c    **** 	i++;
 2302              		.loc 1 721 2 is_stmt 0 view .LVU665
 2303 0122 3246     		mov	r2, r6
 2304 0124 4FF48071 		mov	r1, #256
 723:src/menu.c    **** 	finished = 0;
 2305              		.loc 1 723 8 view .LVU666
 2306 0128 3746     		mov	r7, r6
 2307              	.LVL186:
 721:src/menu.c    **** 	i++;
 2308              		.loc 1 721 2 view .LVU667
 2309 012a FFF7FEFF 		bl	umen_store
 2310              	.LVL187:
 722:src/menu.c    ****     	p = buf1;
 2311              		.loc 1 722 2 is_stmt 1 view .LVU668
 728:src/menu.c    **** 	*p++ = c;
 2312              		.loc 1 728 10 is_stmt 0 view .LVU669
 2313 012e 14F47F0F 		tst	r4, #16711680
 722:src/menu.c    ****     	p = buf1;
 2314              		.loc 1 722 3 view .LVU670
 2315 0132 0BF1010B 		add	fp, fp, #1
 2316              	.LVL188:
 723:src/menu.c    **** 	finished = 0;
 2317              		.loc 1 723 6 is_stmt 1 view .LVU671
 724:src/menu.c    ****       } // ..and start reading the new alpha
 2318              		.loc 1 724 2 view .LVU672
 726:src/menu.c    ****       c = (opc >> 16) & 0xff;
 2319              		.loc 1 726 7 view .LVU673
 726:src/menu.c    ****       c = (opc >> 16) & 0xff;
 2320              		.loc 1 726 12 is_stmt 0 view .LVU674
 2321 0136 3C70     		strb	r4, [r7]
 727:src/menu.c    ****       if (c != '\0') { // if character 2 isn't null..
 2322              		.loc 1 727 7 is_stmt 1 view .LVU675
 727:src/menu.c    ****       if (c != '\0') { // if character 2 isn't null..
 2323              		.loc 1 727 9 is_stmt 0 view .LVU676
 2324 0138 C4F30743 		ubfx	r3, r4, #16, #8
 2325              	.LVL189:
 728:src/menu.c    **** 	*p++ = c;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 65
=======
ARM GAS  /tmp/ccCyL0em.s 			page 65
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2326              		.loc 1 728 7 is_stmt 1 view .LVU677
 728:src/menu.c    **** 	*p++ = c;
 2327              		.loc 1 728 10 is_stmt 0 view .LVU678
 2328 013c B8D0     		beq	.L196
 2329              	.LVL190:
 728:src/menu.c    **** 	*p++ = c;
 2330              		.loc 1 728 10 view .LVU679
 2331 013e DCE7     		b	.L231
 2332              	.LVL191:
 2333              	.L233:
 2334              	.LBB117:
 708:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, arrow_key_string,5);
 2335              		.loc 1 708 2 is_stmt 1 view .LVU680
 708:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, arrow_key_string,5);
 2336              		.loc 1 708 29 is_stmt 0 view .LVU681
 2337 0140 104B     		ldr	r3, .L236+4
 2338              	.LVL192:
 709:src/menu.c    ****       }
 2339              		.loc 1 709 2 view .LVU682
 2340 0142 114C     		ldr	r4, .L236+8
 708:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, arrow_key_string,5);
 2341              		.loc 1 708 29 view .LVU683
 2342 0144 93E80300 		ldm	r3, {r0, r1}
 2343              	.LVL193:
 708:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, arrow_key_string,5);
 2344              		.loc 1 708 29 view .LVU684
 2345 0148 104B     		ldr	r3, .L236+12
 709:src/menu.c    ****       }
 2346              		.loc 1 709 2 view .LVU685
 2347 014a 0522     		movs	r2, #5
 708:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, arrow_key_string,5);
 2348              		.loc 1 708 29 view .LVU686
 2349 014c 83E80300 		stm	r3, {r0, r1}
 709:src/menu.c    ****       }
 2350              		.loc 1 709 2 is_stmt 1 view .LVU687
 2351 0150 2168     		ldr	r1, [r4]
 2352 0152 5046     		mov	r0, r10
 2353 0154 FFF7FEFF 		bl	strncpy
 2354              	.LVL194:
 2355              	.LBE117:
 2356 0158 CCE7     		b	.L191
 2357              	.LVL195:
 2358              	.L234:
 2359              	.LBB118:
 712:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, cmplx_key_string,5);
 2360              		.loc 1 712 2 view .LVU688
 712:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, cmplx_key_string,5);
 2361              		.loc 1 712 29 is_stmt 0 view .LVU689
 2362 015a 0D4B     		ldr	r3, .L236+16
 2363              	.LVL196:
 712:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, cmplx_key_string,5);
 2364              		.loc 1 712 29 view .LVU690
 2365 015c 93E80300 		ldm	r3, {r0, r1}
 2366              	.LVL197:
 713:src/menu.c    ****       }
 2367              		.loc 1 713 2 view .LVU691
 2368 0160 0C4B     		ldr	r3, .L236+20
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 66
=======
ARM GAS  /tmp/ccCyL0em.s 			page 66
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 712:src/menu.c    **** 	strncpy(UserMenu.keys[i].unshifted_label, cmplx_key_string,5);
 2369              		.loc 1 712 29 view .LVU692
 2370 0162 89E80300 		stm	r9, {r0, r1}
 713:src/menu.c    ****       }
 2371              		.loc 1 713 2 is_stmt 1 view .LVU693
 2372 0166 5A46     		mov	r2, fp
 2373 0168 1968     		ldr	r1, [r3]
 2374 016a 0B48     		ldr	r0, .L236+24
 2375 016c FFF7FEFF 		bl	strncpy
 2376              	.LVL198:
 2377 0170 C0E7     		b	.L191
 2378              	.LVL199:
 2379              	.L235:
 713:src/menu.c    ****       }
 2380              		.loc 1 713 2 is_stmt 0 view .LVU694
 2381              	.LBE118:
 729:src/menu.c    **** 	c = opc>>24;
 2382              		.loc 1 729 4 view .LVU695
 2383 0172 0237     		adds	r7, r7, #2
 2384              	.LVL200:
 729:src/menu.c    **** 	c = opc>>24;
 2385              		.loc 1 729 4 view .LVU696
 2386 0174 9DE7     		b	.L198
 2387              	.LVL201:
 2388              	.L232:
 2389              	.LBB119:
 746:src/menu.c    **** 	  }
 2390              		.loc 1 746 6 is_stmt 1 view .LVU697
 2391 0176 3146     		mov	r1, r6
 2392 0178 FFF7FEFF 		bl	catcmd
 2393              	.LVL202:
 746:src/menu.c    **** 	  }
 2394              		.loc 1 746 6 is_stmt 0 view .LVU698
 2395 017c 79E7     		b	.L199
 2396              	.L237:
 2397 017e 00BF     		.align	2
 2398              	.L236:
 2399 0180 00000000 		.word	.LANCHOR4
 2400 0184 00000000 		.word	.LANCHOR5
 2401 0188 00000000 		.word	.LANCHOR6
 2402 018c 90000000 		.word	.LANCHOR4+144
 2403 0190 08000000 		.word	.LANCHOR5+8
 2404 0194 00000000 		.word	.LANCHOR7
 2405 0198 C0000000 		.word	.LANCHOR4+192
 2406 019c B0000000 		.word	.LANCHOR4+176
 2407              	.LBE119:
 2408              		.cfi_endproc
 2409              	.LFE19:
 2411              		.section	.text.build_user_menu,"ax",%progbits
 2412              		.align	1
 2413              		.p2align 2,,3
 2414              		.global	build_user_menu
 2415              		.syntax unified
 2416              		.thumb
 2417              		.thumb_func
 2418              		.fpu fpv4-sp-d16
 2420              	build_user_menu:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 67
=======
ARM GAS  /tmp/ccCyL0em.s 			page 67
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2421              	.LFB18:
 671:src/menu.c    ****   // find the label 'MNU'
 2422              		.loc 1 671 27 is_stmt 1 view -0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 0, uses_anonymous_args = 0
 2426              		@ link register save eliminated.
 673:src/menu.c    ****    build_user_menu_from_program (lbl);
 2427              		.loc 1 673 4 view .LVU700
 2428              	.LVL203:
 674:src/menu.c    **** }
 2429              		.loc 1 674 4 view .LVU701
 2430 0000 0148     		ldr	r0, .L239
 2431 0002 FFF7FEBF 		b	build_user_menu_from_program
 2432              	.LVL204:
 2433              	.L240:
 2434 0006 00BF     		.align	2
 2435              	.L239:
 2436 0008 4DF04E55 		.word	1431236685
 2437              		.cfi_endproc
 2438              	.LFE18:
 2440              		.section	.text.shutdown,"ax",%progbits
 2441              		.align	1
 2442              		.p2align 2,,3
 2443              		.global	shutdown
 2444              		.syntax unified
 2445              		.thumb
 2446              		.thumb_func
 2447              		.fpu fpv4-sp-d16
 2449              	shutdown:
 2450              	.LFB22:
 2451              		.file 2 "src/console.c"
   1:src/console.c **** /* This file is part of 34S.
   2:src/console.c ****  * 
   3:src/console.c ****  * 34S is free software: you can redistribute it and/or modify
   4:src/console.c ****  * it under the terms of the GNU General Public License as published by
   5:src/console.c ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/console.c ****  * (at your option) any later version.
   7:src/console.c ****  * 
   8:src/console.c ****  * 34S is distributed in the hope that it will be useful,
   9:src/console.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/console.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/console.c ****  * GNU General Public License for more details.
  12:src/console.c ****  * 
  13:src/console.c ****  * You should have received a copy of the GNU General Public License
  14:src/console.c ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/console.c ****  */
  16:src/console.c **** 
  17:src/console.c **** /*
  18:src/console.c ****  *  This is the console emulator part
  19:src/console.c ****  */
  20:src/console.c **** #include <stdlib.h>
  21:src/console.c **** #include <stdio.h>
  22:src/console.c **** #include <ctype.h>
  23:src/console.c **** #include <string.h>
  24:src/console.c **** 
  25:src/console.c **** #ifdef DM42
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 68
=======
ARM GAS  /tmp/ccCyL0em.s 			page 68
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  26:src/console.c **** #include "dmcp.h"
  27:src/console.c **** #endif
  28:src/console.c **** 
  29:src/console.c **** #define DM42SAFE
  30:src/console.c **** 
  31:src/console.c **** #include "keys.h"
  32:src/console.c **** #include "display.h"
  33:src/console.c **** #include "lcd.h"
  34:src/console.c **** #include "int.h"
  35:src/console.c **** #include "consts.h"
  36:src/console.c **** #include "storage.h"
  37:src/console.c **** #include "catalogues.h"
  38:src/console.c **** #ifdef INCLUDE_STOPWATCH
  39:src/console.c **** #include "stopwatch.h"
  40:src/console.c **** #endif
  41:src/console.c **** #undef DM42SAFE
  42:src/console.c **** 
  43:src/console.c **** 
  44:src/console.c **** #ifdef DM42
  45:src/console.c **** 
  46:src/console.c **** #include <menu.c>
  47:src/console.c **** 
  48:src/console.c **** struct _ndmap no_key = {.key_34s = K_NOP, .shift = 0};
  49:src/console.c **** struct _ndmap heartbeat = {.key_34s = K_HEARTBEAT, .shift = -1};
  50:src/console.c **** struct _ndmap f_shift = {.key_34s = K_F, .shift = -1};
  51:src/console.c **** struct _ndmap g_shift = {.key_34s = K_G, .shift = -1};
  52:src/console.c **** struct _ndmap h_shift = {.key_34s = K_H, .shift = -1};
  53:src/console.c **** struct _ndmap release = {.key_34s = K_RELEASE, .shift = -1};
  54:src/console.c **** struct _ndmap do_multi (struct _ndmap r);
  55:src/console.c **** 
  56:src/console.c **** static struct _ndmap remap (const int c) {
  57:src/console.c **** 
  58:src/console.c ****   struct _ndmap no_change = {.key_34s = (char) c, .shift = 0};
  59:src/console.c **** 
  60:src/console.c **** #include "keytran.c"
  61:src/console.c **** 
  62:src/console.c ****   if (c==K_HEARTBEAT) return heartbeat;
  63:src/console.c **** 
  64:src/console.c ****   if (c == 99) return release; // turn KEY_DOUBLE_RELEASE into ordinary release
  65:src/console.c **** 
  66:src/console.c ****   if (c == 44 ) {
  67:src/console.c ****     struct _ndmap sshot = {.key_34s = K_MULTI, .shift = SSHOT};
  68:src/console.c ****     return sshot;
  69:src/console.c ****   }
  70:src/console.c ****   
  71:src/console.c ****   if (Running | Pause) {
  72:src/console.c ****     return mapping_running[c];
  73:src/console.c ****   }
  74:src/console.c **** 
  75:src/console.c ****   struct _menu Ref = get_current_menu_ref();
  76:src/console.c ****   
  77:src/console.c ****   switch (c) {
  78:src/console.c ****   case KEY_F1:
  79:src/console.c ****     if (cur_shift() == SHIFT_N) return Ref.keys[0].unshifted;
  80:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[0].shifted;
  81:src/console.c ****   case KEY_F2:
  82:src/console.c ****     if (cur_shift() == SHIFT_N) return Ref.keys[1].unshifted;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 69
=======
ARM GAS  /tmp/ccCyL0em.s 			page 69
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  83:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[1].shifted;
  84:src/console.c ****   case KEY_F3:
  85:src/console.c ****     if (cur_shift() == SHIFT_N) return Ref.keys[2].unshifted;
  86:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[2].shifted;
  87:src/console.c ****   case KEY_F4:
  88:src/console.c ****     if (cur_shift() == SHIFT_N) return Ref.keys[3].unshifted;
  89:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[3].shifted;
  90:src/console.c ****   case KEY_F5:
  91:src/console.c ****     if (cur_shift() == SHIFT_N) return Ref.keys[4].unshifted;
  92:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[4].shifted;
  93:src/console.c ****   case KEY_F6:
  94:src/console.c ****     if (cur_shift() == SHIFT_N) return Ref.keys[5].unshifted;
  95:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[5].shifted;
  96:src/console.c ****   }
  97:src/console.c **** 
  98:src/console.c ****   if ( get_alpha_state() ) {
  99:src/console.c ****     if (c == KEY_SHIFT) { //deal with shift keys
 100:src/console.c ****       switch (cur_shift()) { 
 101:src/console.c ****       case SHIFT_N:
 102:src/console.c **** 	return mapping_none[c]; // N -> F
 103:src/console.c **** 	break;
 104:src/console.c ****       case SHIFT_F:
 105:src/console.c **** 	return mapping_fshift[c]; // F -> G
 106:src/console.c **** 	break;
 107:src/console.c ****       case SHIFT_G:
 108:src/console.c **** 	return h_shift; // G -> H
 109:src/console.c **** 	break;
 110:src/console.c ****       case SHIFT_H:
 111:src/console.c **** 	return h_shift; // H -> N
 112:src/console.c ****       default:
 113:src/console.c **** 	return no_change;
 114:src/console.c ****       }
 115:src/console.c ****     }
 116:src/console.c ****     return mapping_alpha [c];
 117:src/console.c ****   }
 118:src/console.c **** 
 119:src/console.c ****   switch (cur_shift()) {
 120:src/console.c ****   case SHIFT_N:    
 121:src/console.c ****     return mapping_none[c];
 122:src/console.c ****     break;
 123:src/console.c ****   case SHIFT_F:
 124:src/console.c ****     return mapping_fshift[c];
 125:src/console.c ****     break;
 126:src/console.c ****   case SHIFT_G:
 127:src/console.c ****     return mapping_gshift[c];
 128:src/console.c ****     break;
 129:src/console.c ****   default:
 130:src/console.c ****     return no_change;
 131:src/console.c ****   }
 132:src/console.c **** }
 133:src/console.c **** 
 134:src/console.c **** #endif
 135:src/console.c **** 
 136:src/console.c **** void shutdown( void )
 137:src/console.c **** {
 2452              		.loc 2 137 1 view -0
 2453              		.cfi_startproc
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 70
=======
ARM GAS  /tmp/ccCyL0em.s 			page 70
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2454              		@ args = 0, pretend = 0, frame = 0
 2455              		@ frame_needed = 0, uses_anonymous_args = 0
 2456              		@ link register save eliminated.
 138:src/console.c **** #ifndef DM42
 139:src/console.c ****   checksum_all();
 140:src/console.c ****   setuptty( 1 );
 141:src/console.c ****   save_statefile( NULL );
 142:src/console.c ****   exit( 0 );
 143:src/console.c **** #else
 144:src/console.c ****   //  save_ram_file(0);
 145:src/console.c ****   SET_ST(STAT_PGM_END);
 2457              		.loc 2 145 3 view .LVU703
 2458 0000 024A     		ldr	r2, .L242
 2459 0002 1368     		ldr	r3, [r2]
 2460 0004 43F40073 		orr	r3, r3, #512
 2461 0008 1360     		str	r3, [r2]
 146:src/console.c **** #endif
 147:src/console.c **** }
 2462              		.loc 2 147 1 is_stmt 0 view .LVU704
 2463 000a 7047     		bx	lr
 2464              	.L243:
 2465              		.align	2
 2466              	.L242:
 2467 000c 00200010 		.word	268443648
 2468              		.cfi_endproc
 2469              	.LFE22:
 2471              		.section	.text.is_key_pressed,"ax",%progbits
 2472              		.align	1
 2473              		.p2align 2,,3
 2474              		.global	is_key_pressed
 2475              		.syntax unified
 2476              		.thumb
 2477              		.thumb_func
 2478              		.fpu fpv4-sp-d16
 2480              	is_key_pressed:
 2481              	.LFB23:
 148:src/console.c **** 
 149:src/console.c **** 
 150:src/console.c **** /*
 151:src/console.c ****  *  Dummies
 152:src/console.c ****  */
 153:src/console.c **** int is_key_pressed(void) 
 154:src/console.c **** {
 2482              		.loc 2 154 1 is_stmt 1 view -0
 2483              		.cfi_startproc
 2484              		@ args = 0, pretend = 0, frame = 0
 2485              		@ frame_needed = 0, uses_anonymous_args = 0
 155:src/console.c **** #ifdef DM42
 156:src/console.c ****   return !key_empty();
 2486              		.loc 2 156 3 view .LVU706
 154:src/console.c **** #ifdef DM42
 2487              		.loc 2 154 1 is_stmt 0 view .LVU707
 2488 0000 08B5     		push	{r3, lr}
 2489              		.cfi_def_cfa_offset 8
 2490              		.cfi_offset 3, -8
 2491              		.cfi_offset 14, -4
 2492              		.loc 2 156 11 view .LVU708
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 71
=======
ARM GAS  /tmp/ccCyL0em.s 			page 71
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2493 0002 034B     		ldr	r3, .L246
 2494 0004 9847     		blx	r3
 2495              	.LVL205:
 157:src/console.c **** #else
 158:src/console.c ****   return 0;
 159:src/console.c **** #endif
 160:src/console.c **** }
 2496              		.loc 2 160 1 view .LVU709
 2497 0006 B0FA80F0 		clz	r0, r0
 2498 000a 4009     		lsrs	r0, r0, #5
 2499 000c 08BD     		pop	{r3, pc}
 2500              	.L247:
 2501 000e 00BF     		.align	2
 2502              	.L246:
 2503 0010 7D030008 		.word	134218621
 2504              		.cfi_endproc
 2505              	.LFE23:
 2507              		.section	.text.get_key,"ax",%progbits
 2508              		.align	1
 2509              		.p2align 2,,3
 2510              		.global	get_key
 2511              		.syntax unified
 2512              		.thumb
 2513              		.thumb_func
 2514              		.fpu fpv4-sp-d16
 2516              	get_key:
 2517              	.LFB24:
 161:src/console.c **** 
 162:src/console.c **** int get_key(void)
 163:src/console.c **** {
 2518              		.loc 2 163 1 is_stmt 1 view -0
 2519              		.cfi_startproc
 2520              		@ args = 0, pretend = 0, frame = 0
 2521              		@ frame_needed = 0, uses_anonymous_args = 0
 2522              		@ link register save eliminated.
 164:src/console.c ****   #ifdef DM42
 165:src/console.c ****   return key_pop();
 2523              		.loc 2 165 3 view .LVU711
 2524              		.loc 2 165 10 is_stmt 0 view .LVU712
 2525 0000 004B     		ldr	r3, .L249
 2526 0002 1847     		bx	r3
 2527              	.LVL206:
 2528              	.L250:
 2529              		.align	2
 2530              	.L249:
 2531 0004 89030008 		.word	134218633
 2532              		.cfi_endproc
 2533              	.LFE24:
 2535              		.section	.text.put_key,"ax",%progbits
 2536              		.align	1
 2537              		.p2align 2,,3
 2538              		.global	put_key
 2539              		.syntax unified
 2540              		.thumb
 2541              		.thumb_func
 2542              		.fpu fpv4-sp-d16
 2544              	put_key:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 72
=======
ARM GAS  /tmp/ccCyL0em.s 			page 72
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2545              	.LVL207:
 2546              	.LFB25:
 166:src/console.c ****   #else
 167:src/console.c ****   return 0;
 168:src/console.c ****   #endif
 169:src/console.c **** }
 170:src/console.c **** 
 171:src/console.c **** /*
 172:src/console.c ****  * k is a WP34s key code. I need to translate it into a DM42 keycode, and push it.
 173:src/console.c ****  * 
 174:src/console.c ****  */
 175:src/console.c **** int put_key( int k )
 176:src/console.c **** {
 2547              		.loc 2 176 1 is_stmt 1 view -0
 2548              		.cfi_startproc
 2549              		@ args = 0, pretend = 0, frame = 48
 2550              		@ frame_needed = 0, uses_anonymous_args = 0
 2551              		@ link register save eliminated.
 177:src/console.c ****   #ifdef DM42
 178:src/console.c ****   const char wp34s_to_DM42[] = {
 2552              		.loc 2 178 3 view .LVU714
 176:src/console.c ****   #ifdef DM42
 2553              		.loc 2 176 1 is_stmt 0 view .LVU715
 2554 0000 70B4     		push	{r4, r5, r6}
 2555              		.cfi_def_cfa_offset 12
 2556              		.cfi_offset 4, -12
 2557              		.cfi_offset 5, -8
 2558              		.cfi_offset 6, -4
 2559              		.loc 2 178 14 view .LVU716
 2560 0002 0E4D     		ldr	r5, .L254
 176:src/console.c ****   #ifdef DM42
 2561              		.loc 2 176 1 view .LVU717
 2562 0004 0646     		mov	r6, r0
 2563              		.loc 2 178 14 view .LVU718
 2564 0006 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2565              	.LVL208:
 176:src/console.c ****   #ifdef DM42
 2566              		.loc 2 176 1 view .LVU719
 2567 0008 8DB0     		sub	sp, sp, #52
 2568              		.cfi_def_cfa_offset 64
 2569              		.loc 2 178 14 view .LVU720
 2570 000a 01AC     		add	r4, sp, #4
 2571 000c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2572 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2573 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2574 0012 95E80700 		ldm	r5, {r0, r1, r2}
 2575 0016 03C4     		stmia	r4!, {r0, r1}
 179:src/console.c ****     KEY_SIGMA, KEY_INV, KEY_SQRT, KEY_LOG, KEY_F5, KEY_F6, // 0-5
 180:src/console.c ****     KEY_STO, KEY_RCL, KEY_RDN, KEY_SHIFT, KEY_COS, KEY_TAN, // 6-11
 181:src/console.c ****     KEY_ENTER, KEY_SWAP, KEY_CHS, KEY_E, KEY_BSP, 0, // 12-17
 182:src/console.c ****     KEY_XEQ, KEY_7, KEY_8, KEY_9, KEY_DIV, 0, // 18-23
 183:src/console.c ****     KEY_UP, KEY_4, KEY_5, KEY_6, KEY_MUL, 0, // 24-29
 184:src/console.c ****     KEY_DOWN, KEY_1, KEY_2, KEY_3, KEY_SUB, 0, // 30-35
 185:src/console.c ****     KEY_EXIT, KEY_0, KEY_DOT, KEY_RUN, KEY_ADD,}; // 36-40
 186:src/console.c ****   
 187:src/console.c ****   if ( ( k >= K00 ) && ( k <= K64 ) ) {
 2576              		.loc 2 187 6 view .LVU721
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 73
=======
ARM GAS  /tmp/ccCyL0em.s 			page 73
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2577 0018 282E     		cmp	r6, #40
 178:src/console.c ****     KEY_SIGMA, KEY_INV, KEY_SQRT, KEY_LOG, KEY_F5, KEY_F6, // 0-5
 2578              		.loc 2 178 14 view .LVU722
 2579 001a 2270     		strb	r2, [r4]
 2580              		.loc 2 187 3 is_stmt 1 view .LVU723
 2581              		.loc 2 187 6 is_stmt 0 view .LVU724
 2582 001c 08D8     		bhi	.L252
 188:src/console.c ****     return key_push( wp34s_to_DM42 [k] );
 2583              		.loc 2 188 5 is_stmt 1 view .LVU725
 2584              		.loc 2 188 36 is_stmt 0 view .LVU726
 2585 001e 0CAB     		add	r3, sp, #48
 2586 0020 3046     		mov	r0, r6
 2587 0022 1844     		add	r0, r0, r3
 2588              		.loc 2 188 12 view .LVU727
 2589 0024 064B     		ldr	r3, .L254+4
 2590 0026 10F82C0C 		ldrb	r0, [r0, #-44]	@ zero_extendqisi2
 189:src/console.c ****   }
 190:src/console.c ****   else {
 191:src/console.c ****     return -1;
 192:src/console.c ****   }
 193:src/console.c ****   #else
 194:src/console.c ****   return k;
 195:src/console.c ****   #endif
 196:src/console.c **** }
 2591              		.loc 2 196 1 view .LVU728
 2592 002a 0DB0     		add	sp, sp, #52
 2593              		.cfi_remember_state
 2594              		.cfi_def_cfa_offset 12
 2595              		@ sp needed
 2596 002c 70BC     		pop	{r4, r5, r6}
 2597              		.cfi_restore 6
 2598              		.cfi_restore 5
 2599              		.cfi_restore 4
 2600              		.cfi_def_cfa_offset 0
 2601              	.LVL209:
 188:src/console.c ****     return key_push( wp34s_to_DM42 [k] );
 2602              		.loc 2 188 12 view .LVU729
 2603 002e 1847     		bx	r3
 2604              	.LVL210:
 2605              	.L252:
 2606              		.cfi_restore_state
 2607              		.loc 2 196 1 view .LVU730
 2608 0030 4FF0FF30 		mov	r0, #-1
 2609 0034 0DB0     		add	sp, sp, #52
 2610              		.cfi_def_cfa_offset 12
 2611              		@ sp needed
 2612 0036 70BC     		pop	{r4, r5, r6}
 2613              		.cfi_restore 6
 2614              		.cfi_restore 5
 2615              		.cfi_restore 4
 2616              		.cfi_def_cfa_offset 0
 2617              	.LVL211:
 2618              		.loc 2 196 1 view .LVU731
 2619 0038 7047     		bx	lr
 2620              	.L255:
 2621 003a 00BF     		.align	2
 2622              	.L254:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 74
=======
ARM GAS  /tmp/ccCyL0em.s 			page 74
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2623 003c 10000000 		.word	.LANCHOR5+16
 2624 0040 81030008 		.word	134218625
 2625              		.cfi_endproc
 2626              	.LFE25:
 2628              		.section	.text.shift_down,"ax",%progbits
 2629              		.align	1
 2630              		.p2align 2,,3
 2631              		.global	shift_down
 2632              		.syntax unified
 2633              		.thumb
 2634              		.thumb_func
 2635              		.fpu fpv4-sp-d16
 2637              	shift_down:
 2638              	.LFB26:
 197:src/console.c **** 
 198:src/console.c **** enum shifts shift_down(void)
 199:src/console.c **** {
 2639              		.loc 2 199 1 is_stmt 1 view -0
 2640              		.cfi_startproc
 2641              		@ args = 0, pretend = 0, frame = 0
 2642              		@ frame_needed = 0, uses_anonymous_args = 0
 2643              		@ link register save eliminated.
 200:src/console.c **** 	return SHIFT_N;
 2644              		.loc 2 200 2 view .LVU733
 201:src/console.c **** }
 2645              		.loc 2 201 1 is_stmt 0 view .LVU734
 2646 0000 0020     		movs	r0, #0
 2647 0002 7047     		bx	lr
 2648              		.cfi_endproc
 2649              	.LFE26:
 2651              		.section	.text.start_key_timer,"ax",%progbits
 2652              		.align	1
 2653              		.p2align 2,,3
 2654              		.global	start_key_timer
 2655              		.syntax unified
 2656              		.thumb
 2657              		.thumb_func
 2658              		.fpu fpv4-sp-d16
 2660              	start_key_timer:
 2661              	.LFB27:
 202:src/console.c **** 
 203:src/console.c **** #ifndef DM42   // No serial operations for DM42
 204:src/console.c **** #ifndef WIN32  // Windows uses winserial.c
 205:src/console.c **** /*
 206:src/console.c ****  *  Open a COM port for transmission
 207:src/console.c ****  */
 208:src/console.c **** int open_port( int baud, int bits, int parity, int stopbits )
 209:src/console.c **** {
 210:src/console.c **** 	return 0;
 211:src/console.c **** }
 212:src/console.c **** 
 213:src/console.c **** 
 214:src/console.c **** /*
 215:src/console.c ****  *  Close the COM port after transmission is complete
 216:src/console.c ****  */
 217:src/console.c **** extern void close_port( void )
 218:src/console.c **** {
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 75
=======
ARM GAS  /tmp/ccCyL0em.s 			page 75
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 219:src/console.c **** }
 220:src/console.c **** 
 221:src/console.c **** 
 222:src/console.c **** /*
 223:src/console.c ****  *  Output a single byte to the serial
 224:src/console.c ****  */
 225:src/console.c **** void put_byte( unsigned char byte )
 226:src/console.c **** {
 227:src/console.c **** 	report_err(ERR_PROG_BAD);
 228:src/console.c **** }
 229:src/console.c **** 
 230:src/console.c **** 
 231:src/console.c **** /*
 232:src/console.c ****  *  Force buffer flush
 233:src/console.c ****  */
 234:src/console.c **** void flush_comm( void )
 235:src/console.c **** {
 236:src/console.c **** }
 237:src/console.c **** 
 238:src/console.c **** #endif
 239:src/console.c **** #endif
 240:src/console.c **** 
 241:src/console.c **** 
 242:src/console.c **** /*
 243:src/console.c ****  *  Main loop
 244:src/console.c ****  */
 245:src/console.c **** #ifdef DM42
 246:src/console.c **** void start_key_timer (void);
 247:src/console.c **** long int keyticks (void);
 248:src/console.c **** void moveto (int line, int x);
 249:src/console.c **** 
 250:src/console.c **** static long int start_ticks;
 251:src/console.c **** 
 252:src/console.c **** void start_key_timer() {
 2662              		.loc 2 252 24 is_stmt 1 view -0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 253:src/console.c ****     start_ticks = get_rtc_ticks();
 2666              		.loc 2 253 5 view .LVU736
 252:src/console.c ****     start_ticks = get_rtc_ticks();
 2667              		.loc 2 252 24 is_stmt 0 view .LVU737
 2668 0000 08B5     		push	{r3, lr}
 2669              		.cfi_def_cfa_offset 8
 2670              		.cfi_offset 3, -8
 2671              		.cfi_offset 14, -4
 2672              		.loc 2 253 19 view .LVU738
 2673 0002 024B     		ldr	r3, .L259
 2674 0004 9847     		blx	r3
 2675              	.LVL212:
 2676              		.loc 2 253 17 view .LVU739
 2677 0006 024B     		ldr	r3, .L259+4
 2678 0008 1860     		str	r0, [r3]
 254:src/console.c **** }
 2679              		.loc 2 254 1 view .LVU740
 2680 000a 08BD     		pop	{r3, pc}
 2681              	.L260:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 76
=======
ARM GAS  /tmp/ccCyL0em.s 			page 76
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2682              		.align	2
 2683              	.L259:
 2684 000c B9040008 		.word	134218937
 2685 0010 00000000 		.word	.LANCHOR8
 2686              		.cfi_endproc
 2687              	.LFE27:
 2689              		.section	.text.keyticks,"ax",%progbits
 2690              		.align	1
 2691              		.p2align 2,,3
 2692              		.global	keyticks
 2693              		.syntax unified
 2694              		.thumb
 2695              		.thumb_func
 2696              		.fpu fpv4-sp-d16
 2698              	keyticks:
 2699              	.LFB28:
 255:src/console.c **** 
 256:src/console.c **** long int keyticks () {
 2700              		.loc 2 256 22 is_stmt 1 view -0
 2701              		.cfi_startproc
 2702              		@ args = 0, pretend = 0, frame = 0
 2703              		@ frame_needed = 0, uses_anonymous_args = 0
 257:src/console.c ****   long int i;
 2704              		.loc 2 257 3 view .LVU742
 258:src/console.c ****   i = (get_rtc_ticks() - start_ticks)*10;
 2705              		.loc 2 258 3 view .LVU743
 256:src/console.c ****   long int i;
 2706              		.loc 2 256 22 is_stmt 0 view .LVU744
 2707 0000 08B5     		push	{r3, lr}
 2708              		.cfi_def_cfa_offset 8
 2709              		.cfi_offset 3, -8
 2710              		.cfi_offset 14, -4
 2711              		.loc 2 258 8 view .LVU745
 2712 0002 054B     		ldr	r3, .L263
 2713 0004 9847     		blx	r3
 2714              	.LVL213:
 259:src/console.c ****   return i >> 8;
 2715              		.loc 2 259 3 is_stmt 1 view .LVU746
 258:src/console.c ****   i = (get_rtc_ticks() - start_ticks)*10;
 2716              		.loc 2 258 24 is_stmt 0 view .LVU747
 2717 0006 054B     		ldr	r3, .L263+4
 2718 0008 1B68     		ldr	r3, [r3]
 2719 000a C01A     		subs	r0, r0, r3
 2720              	.LVL214:
 258:src/console.c ****   i = (get_rtc_ticks() - start_ticks)*10;
 2721              		.loc 2 258 38 view .LVU748
 2722 000c 00EB8000 		add	r0, r0, r0, lsl #2
 260:src/console.c **** }
 2723              		.loc 2 260 1 view .LVU749
 2724 0010 40F3D710 		sbfx	r0, r0, #7, #24
 2725 0014 08BD     		pop	{r3, pc}
 2726              	.L264:
 2727 0016 00BF     		.align	2
 2728              	.L263:
 2729 0018 B9040008 		.word	134218937
 2730 001c 00000000 		.word	.LANCHOR8
 2731              		.cfi_endproc
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 77
=======
ARM GAS  /tmp/ccCyL0em.s 			page 77
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2732              	.LFE28:
 2734              		.section	.text.moveto,"ax",%progbits
 2735              		.align	1
 2736              		.p2align 2,,3
 2737              		.global	moveto
 2738              		.syntax unified
 2739              		.thumb
 2740              		.thumb_func
 2741              		.fpu fpv4-sp-d16
 2743              	moveto:
 2744              	.LVL215:
 2745              	.LFB29:
 261:src/console.c **** 
 262:src/console.c **** char spaces[22] = "                     ";	//21 spaces.
 263:src/console.c **** char print_string[22];
 264:src/console.c **** int n_p = 0;
 265:src/console.c **** 
 266:src/console.c **** 
 267:src/console.c **** void moveto(int line, int x) {//These are line number and character positions
 2746              		.loc 2 267 30 is_stmt 1 view -0
 2747              		.cfi_startproc
 2748              		@ args = 0, pretend = 0, frame = 0
 2749              		@ frame_needed = 0, uses_anonymous_args = 0
 268:src/console.c ****   lcd_setLine(fReg, line-1); //line 0 is the top line
 2750              		.loc 2 268 3 view .LVU751
 267:src/console.c ****   lcd_setLine(fReg, line-1); //line 0 is the top line
 2751              		.loc 2 267 30 is_stmt 0 view .LVU752
 2752 0000 70B5     		push	{r4, r5, r6, lr}
 2753              		.cfi_def_cfa_offset 16
 2754              		.cfi_offset 4, -16
 2755              		.cfi_offset 5, -12
 2756              		.cfi_offset 6, -8
 2757              		.cfi_offset 14, -4
 2758              		.loc 2 268 3 view .LVU753
 2759 0002 0A4D     		ldr	r5, .L267
 2760 0004 0A4B     		ldr	r3, .L267+4
 267:src/console.c ****   lcd_setLine(fReg, line-1); //line 0 is the top line
 2761              		.loc 2 267 30 view .LVU754
 2762 0006 0246     		mov	r2, r0
 2763 0008 0C46     		mov	r4, r1
 2764              		.loc 2 268 3 view .LVU755
 2765 000a A86B     		ldr	r0, [r5, #56]
 2766              	.LVL216:
 2767              		.loc 2 268 3 view .LVU756
 2768 000c 511E     		subs	r1, r2, #1
 2769              	.LVL217:
 2770              		.loc 2 268 3 view .LVU757
 2771 000e 9847     		blx	r3
 2772              	.LVL218:
 269:src/console.c ****   lcd_setXY(fReg, 20 + (fReg->f)->width*(x-1), fReg->y);
 2773              		.loc 2 269 3 is_stmt 1 view .LVU758
 2774 0010 A86B     		ldr	r0, [r5, #56]
 2775 0012 084B     		ldr	r3, .L267+8
 2776              		.loc 2 269 33 is_stmt 0 view .LVU759
 2777 0014 0168     		ldr	r1, [r0]
 2778              		.loc 2 269 3 view .LVU760
 2779 0016 B0F90620 		ldrsh	r2, [r0, #6]
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 78
=======
ARM GAS  /tmp/ccCyL0em.s 			page 78
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2780              		.loc 2 269 33 view .LVU761
 2781 001a 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 2782              		.loc 2 269 43 view .LVU762
 2783 001c 013C     		subs	r4, r4, #1
 2784              	.LVL219:
 2785              		.loc 2 269 40 view .LVU763
 2786 001e 04FB01F1 		mul	r1, r4, r1
 2787              		.loc 2 269 3 view .LVU764
 2788 0022 1431     		adds	r1, r1, #20
 270:src/console.c **** }
 2789              		.loc 2 270 1 view .LVU765
 2790 0024 BDE87040 		pop	{r4, r5, r6, lr}
 2791              		.cfi_restore 14
 2792              		.cfi_restore 6
 2793              		.cfi_restore 5
 2794              		.cfi_restore 4
 2795              		.cfi_def_cfa_offset 0
 2796              	.LVL220:
 269:src/console.c ****   lcd_setXY(fReg, 20 + (fReg->f)->width*(x-1), fReg->y);
 2797              		.loc 2 269 3 view .LVU766
 2798 0028 1847     		bx	r3	@ indirect register sibling call
 2799              	.LVL221:
 2800              	.L268:
 2801 002a 00BF     		.align	2
 2802              	.L267:
 2803 002c 00200010 		.word	268443648
 2804 0030 69020008 		.word	134218345
 2805 0034 6D020008 		.word	134218349
 2806              		.cfi_endproc
 2807              	.LFE29:
 2809              		.section	.rodata.print_debug.str1.4,"aMS",%progbits,1
 2810              		.align	2
 2811              	.LC15:
 2812 0000 44656275 		.ascii	"Debug: %4i,%4i\000"
 2812      673A2025 
 2812      34692C25 
 2812      346900
 2813              		.section	.text.print_debug,"ax",%progbits
 2814              		.align	1
 2815              		.p2align 2,,3
 2816              		.global	print_debug
 2817              		.syntax unified
 2818              		.thumb
 2819              		.thumb_func
 2820              		.fpu fpv4-sp-d16
 2822              	print_debug:
 2823              	.LVL222:
 2824              	.LFB30:
 271:src/console.c **** 
 272:src/console.c **** void print_debug (int i, int j) {
 2825              		.loc 2 272 33 is_stmt 1 view -0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 8
 2828              		@ frame_needed = 0, uses_anonymous_args = 0
 273:src/console.c ****   strcpy( print_string, spaces );
 2829              		.loc 2 273 3 view .LVU768
 272:src/console.c ****   strcpy( print_string, spaces );
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 79
=======
ARM GAS  /tmp/ccCyL0em.s 			page 79
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2830              		.loc 2 272 33 is_stmt 0 view .LVU769
 2831 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2832              		.cfi_def_cfa_offset 24
 2833              		.cfi_offset 4, -24
 2834              		.cfi_offset 5, -20
 2835              		.cfi_offset 6, -16
 2836              		.cfi_offset 7, -12
 2837              		.cfi_offset 8, -8
 2838              		.cfi_offset 14, -4
 2839              		.loc 2 273 3 view .LVU770
 2840 0004 174C     		ldr	r4, .L271
 2841 0006 184F     		ldr	r7, .L271+4
 274:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 275:src/console.c ****   moveto (3, 1);
 276:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 2842              		.loc 2 276 3 view .LVU771
 2843 0008 184E     		ldr	r6, .L271+8
 2844 000a 194D     		ldr	r5, .L271+12
 277:src/console.c ****   lcd_refresh();
 2845              		.loc 2 277 3 view .LVU772
 2846 000c DFF86C80 		ldr	r8, .L271+24
 272:src/console.c ****   strcpy( print_string, spaces );
 2847              		.loc 2 272 33 view .LVU773
 2848 0010 82B0     		sub	sp, sp, #8
 2849              		.cfi_def_cfa_offset 32
 272:src/console.c ****   strcpy( print_string, spaces );
 2850              		.loc 2 272 33 view .LVU774
 2851 0012 0190     		str	r0, [sp, #4]
 2852 0014 0091     		str	r1, [sp]
 273:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 2853              		.loc 2 273 3 view .LVU775
 2854 0016 2046     		mov	r0, r4
 2855              	.LVL223:
 273:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 2856              		.loc 2 273 3 view .LVU776
 2857 0018 3946     		mov	r1, r7
 2858              	.LVL224:
 273:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 2859              		.loc 2 273 3 view .LVU777
 2860 001a FFF7FEFF 		bl	strcpy
 2861              	.LVL225:
 274:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 2862              		.loc 2 274 3 is_stmt 1 view .LVU778
 2863 001e DDE90032 		ldrd	r3, r2, [sp]
 2864 0022 1449     		ldr	r1, .L271+16
 2865 0024 2046     		mov	r0, r4
 2866 0026 FFF7FEFF 		bl	sprintf
 2867              	.LVL226:
 275:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 2868              		.loc 2 275 3 view .LVU779
 2869 002a 0121     		movs	r1, #1
 2870 002c 0320     		movs	r0, #3
 2871 002e FFF7FEFF 		bl	moveto
 2872              	.LVL227:
 276:src/console.c ****   lcd_refresh();
 2873              		.loc 2 276 3 view .LVU780
 2874 0032 2146     		mov	r1, r4
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 80
=======
ARM GAS  /tmp/ccCyL0em.s 			page 80
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2875 0034 B06B     		ldr	r0, [r6, #56]
 2876 0036 A847     		blx	r5
 2877              	.LVL228:
 2878              		.loc 2 277 3 view .LVU781
 2879 0038 C047     		blx	r8
 2880              	.LVL229:
 278:src/console.c ****   sys_delay (1000);
 2881              		.loc 2 278 3 view .LVU782
 2882 003a 0F4B     		ldr	r3, .L271+20
 2883 003c 4FF47A70 		mov	r0, #1000
 2884 0040 9847     		blx	r3
 2885              	.LVL230:
 279:src/console.c ****   /* wait_for_key_press(); */
 280:src/console.c ****   //  key_pop_all();
 281:src/console.c ****   // while ((key_pop()<=0) || (key_pop()==K_HEARTBEAT));;
 282:src/console.c ****   // key_pop_all();
 283:src/console.c ****   strcpy( print_string, spaces );
 2886              		.loc 2 283 3 view .LVU783
 2887 0042 3946     		mov	r1, r7
 2888 0044 2046     		mov	r0, r4
 2889 0046 FFF7FEFF 		bl	strcpy
 2890              	.LVL231:
 284:src/console.c ****   moveto (3, 1);
 2891              		.loc 2 284 3 view .LVU784
 2892 004a 0121     		movs	r1, #1
 2893 004c 0320     		movs	r0, #3
 2894 004e FFF7FEFF 		bl	moveto
 2895              	.LVL232:
 285:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 2896              		.loc 2 285 3 view .LVU785
 2897 0052 B06B     		ldr	r0, [r6, #56]
 2898 0054 2146     		mov	r1, r4
 2899 0056 A847     		blx	r5
 2900              	.LVL233:
 286:src/console.c ****   lcd_refresh();
 2901              		.loc 2 286 3 view .LVU786
 2902 0058 4346     		mov	r3, r8
 287:src/console.c ****   // while (key_empty()<=0);; // wait for release
 288:src/console.c ****   // key_pop_all();
 289:src/console.c **** }
 2903              		.loc 2 289 1 is_stmt 0 view .LVU787
 2904 005a 02B0     		add	sp, sp, #8
 2905              		.cfi_def_cfa_offset 24
 2906              	.LVL234:
 2907              		.loc 2 289 1 view .LVU788
 2908              		@ sp needed
 2909 005c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2910              		.cfi_restore 14
 2911              		.cfi_restore 8
 2912              		.cfi_restore 7
 2913              		.cfi_restore 6
 2914              		.cfi_restore 5
 2915              		.cfi_restore 4
 2916              		.cfi_def_cfa_offset 0
 2917              	.LVL235:
 286:src/console.c ****   lcd_refresh();
 2918              		.loc 2 286 3 view .LVU789
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 81
=======
ARM GAS  /tmp/ccCyL0em.s 			page 81
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2919 0060 1847     		bx	r3	@ indirect register sibling call
 2920              	.LVL236:
 2921              	.L272:
 2922 0062 00BF     		.align	2
 2923              	.L271:
 2924 0064 00000000 		.word	print_string
 2925 0068 00000000 		.word	.LANCHOR9
 2926 006c 00200010 		.word	268443648
 2927 0070 B1020008 		.word	134218417
 2928 0074 00000000 		.word	.LC15
 2929 0078 05040008 		.word	134218757
 2930 007c 31020008 		.word	134218289
 2931              		.cfi_endproc
 2932              	.LFE30:
 2934              		.section	.rodata.print_debug2.str1.4,"aMS",%progbits,1
 2935              		.align	2
 2936              	.LC16:
 2937 0000 443A2534 		.ascii	"D:%4i,%13s\000"
 2937      692C2531 
 2937      337300
 2938              		.section	.text.print_debug2,"ax",%progbits
 2939              		.align	1
 2940              		.p2align 2,,3
 2941              		.global	print_debug2
 2942              		.syntax unified
 2943              		.thumb
 2944              		.thumb_func
 2945              		.fpu fpv4-sp-d16
 2947              	print_debug2:
 2948              	.LVL237:
 2949              	.LFB31:
 290:src/console.c **** 
 291:src/console.c **** void print_debug2 (int i, char* j) {
 2950              		.loc 2 291 36 is_stmt 1 view -0
 2951              		.cfi_startproc
 2952              		@ args = 0, pretend = 0, frame = 8
 2953              		@ frame_needed = 0, uses_anonymous_args = 0
 292:src/console.c ****   strcpy( print_string, spaces );
 2954              		.loc 2 292 3 view .LVU791
 291:src/console.c ****   strcpy( print_string, spaces );
 2955              		.loc 2 291 36 is_stmt 0 view .LVU792
 2956 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2957              		.cfi_def_cfa_offset 24
 2958              		.cfi_offset 4, -24
 2959              		.cfi_offset 5, -20
 2960              		.cfi_offset 6, -16
 2961              		.cfi_offset 7, -12
 2962              		.cfi_offset 8, -8
 2963              		.cfi_offset 14, -4
 2964              		.loc 2 292 3 view .LVU793
 2965 0004 174C     		ldr	r4, .L275
 2966 0006 184F     		ldr	r7, .L275+4
 293:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 294:src/console.c ****   moveto (3, 1);
 295:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 2967              		.loc 2 295 3 view .LVU794
 2968 0008 184E     		ldr	r6, .L275+8
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 82
=======
ARM GAS  /tmp/ccCyL0em.s 			page 82
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 2969 000a 194D     		ldr	r5, .L275+12
 296:src/console.c ****   lcd_refresh();
 2970              		.loc 2 296 3 view .LVU795
 2971 000c DFF86C80 		ldr	r8, .L275+24
 291:src/console.c ****   strcpy( print_string, spaces );
 2972              		.loc 2 291 36 view .LVU796
 2973 0010 82B0     		sub	sp, sp, #8
 2974              		.cfi_def_cfa_offset 32
 291:src/console.c ****   strcpy( print_string, spaces );
 2975              		.loc 2 291 36 view .LVU797
 2976 0012 0190     		str	r0, [sp, #4]
 2977 0014 0091     		str	r1, [sp]
 292:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 2978              		.loc 2 292 3 view .LVU798
 2979 0016 2046     		mov	r0, r4
 2980              	.LVL238:
 292:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 2981              		.loc 2 292 3 view .LVU799
 2982 0018 3946     		mov	r1, r7
 2983              	.LVL239:
 292:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 2984              		.loc 2 292 3 view .LVU800
 2985 001a FFF7FEFF 		bl	strcpy
 2986              	.LVL240:
 293:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 2987              		.loc 2 293 3 is_stmt 1 view .LVU801
 2988 001e DDE90032 		ldrd	r3, r2, [sp]
 2989 0022 1449     		ldr	r1, .L275+16
 2990 0024 2046     		mov	r0, r4
 2991 0026 FFF7FEFF 		bl	sprintf
 2992              	.LVL241:
 294:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 2993              		.loc 2 294 3 view .LVU802
 2994 002a 0121     		movs	r1, #1
 2995 002c 0320     		movs	r0, #3
 2996 002e FFF7FEFF 		bl	moveto
 2997              	.LVL242:
 295:src/console.c ****   lcd_refresh();
 2998              		.loc 2 295 3 view .LVU803
 2999 0032 2146     		mov	r1, r4
 3000 0034 B06B     		ldr	r0, [r6, #56]
 3001 0036 A847     		blx	r5
 3002              	.LVL243:
 3003              		.loc 2 296 3 view .LVU804
 3004 0038 C047     		blx	r8
 3005              	.LVL244:
 297:src/console.c ****   sys_delay (2500);
 3006              		.loc 2 297 3 view .LVU805
 3007 003a 0F4B     		ldr	r3, .L275+20
 3008 003c 40F6C410 		movw	r0, #2500
 3009 0040 9847     		blx	r3
 3010              	.LVL245:
 298:src/console.c ****   /* wait_for_key_press(); */
 299:src/console.c ****   //  key_pop_all();
 300:src/console.c ****   // while ((key_pop()<=0) || (key_pop()==K_HEARTBEAT));;
 301:src/console.c ****   // key_pop_all();
 302:src/console.c ****   strcpy( print_string, spaces );
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 83
=======
ARM GAS  /tmp/ccCyL0em.s 			page 83
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3011              		.loc 2 302 3 view .LVU806
 3012 0042 3946     		mov	r1, r7
 3013 0044 2046     		mov	r0, r4
 3014 0046 FFF7FEFF 		bl	strcpy
 3015              	.LVL246:
 303:src/console.c ****   moveto (3, 1);
 3016              		.loc 2 303 3 view .LVU807
 3017 004a 0121     		movs	r1, #1
 3018 004c 0320     		movs	r0, #3
 3019 004e FFF7FEFF 		bl	moveto
 3020              	.LVL247:
 304:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 3021              		.loc 2 304 3 view .LVU808
 3022 0052 B06B     		ldr	r0, [r6, #56]
 3023 0054 2146     		mov	r1, r4
 3024 0056 A847     		blx	r5
 3025              	.LVL248:
 305:src/console.c ****   lcd_refresh();
 3026              		.loc 2 305 3 view .LVU809
 3027 0058 4346     		mov	r3, r8
 306:src/console.c ****   // while (key_empty()<=0);; // wait for release
 307:src/console.c ****   // key_pop_all();
 308:src/console.c **** }
 3028              		.loc 2 308 1 is_stmt 0 view .LVU810
 3029 005a 02B0     		add	sp, sp, #8
 3030              		.cfi_def_cfa_offset 24
 3031              	.LVL249:
 3032              		.loc 2 308 1 view .LVU811
 3033              		@ sp needed
 3034 005c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 3035              		.cfi_restore 14
 3036              		.cfi_restore 8
 3037              		.cfi_restore 7
 3038              		.cfi_restore 6
 3039              		.cfi_restore 5
 3040              		.cfi_restore 4
 3041              		.cfi_def_cfa_offset 0
 3042              	.LVL250:
 305:src/console.c ****   lcd_refresh();
 3043              		.loc 2 305 3 view .LVU812
 3044 0060 1847     		bx	r3	@ indirect register sibling call
 3045              	.LVL251:
 3046              	.L276:
 3047 0062 00BF     		.align	2
 3048              	.L275:
 3049 0064 00000000 		.word	print_string
 3050 0068 00000000 		.word	.LANCHOR9
 3051 006c 00200010 		.word	268443648
 3052 0070 B1020008 		.word	134218417
 3053 0074 00000000 		.word	.LC16
 3054 0078 05040008 		.word	134218757
 3055 007c 31020008 		.word	134218289
 3056              		.cfi_endproc
 3057              	.LFE31:
 3059              		.section	.text.do_now,"ax",%progbits
 3060              		.align	1
 3061              		.p2align 2,,3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 84
=======
ARM GAS  /tmp/ccCyL0em.s 			page 84
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3062              		.global	do_now
 3063              		.syntax unified
 3064              		.thumb
 3065              		.thumb_func
 3066              		.fpu fpv4-sp-d16
 3068              	do_now:
 3069              	.LVL252:
 3070              	.LFB32:
 309:src/console.c **** 
 310:src/console.c **** void do_now (int key, int shift) { // key and shift are like the output of remapped
 3071              		.loc 2 310 34 is_stmt 1 view -0
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 8
 3074              		@ frame_needed = 0, uses_anonymous_args = 0
 3075              		@ link register save eliminated.
 311:src/console.c ****   struct _ndmap temp;
 3076              		.loc 2 311 3 view .LVU814
 312:src/console.c ****   temp.key_34s = key;
 3077              		.loc 2 312 3 view .LVU815
 310:src/console.c ****   struct _ndmap temp;
 3078              		.loc 2 310 34 is_stmt 0 view .LVU816
 3079 0000 82B0     		sub	sp, sp, #8
 3080              		.cfi_def_cfa_offset 8
 313:src/console.c ****   temp.shift = shift;
 314:src/console.c ****   process_keycode_with_shift (temp);
 3081              		.loc 2 314 3 view .LVU817
 3082 0002 02AB     		add	r3, sp, #8
 312:src/console.c ****   temp.shift = shift;
 3083              		.loc 2 312 16 view .LVU818
 3084 0004 8DF80000 		strb	r0, [sp]
 313:src/console.c ****   temp.shift = shift;
 3085              		.loc 2 313 3 is_stmt 1 view .LVU819
 313:src/console.c ****   temp.shift = shift;
 3086              		.loc 2 313 14 is_stmt 0 view .LVU820
 3087 0008 0191     		str	r1, [sp, #4]
 3088              		.loc 2 314 3 is_stmt 1 view .LVU821
 3089 000a 13E90300 		ldmdb	r3, {r0, r1}
 3090              	.LVL253:
 315:src/console.c **** }
 3091              		.loc 2 315 1 is_stmt 0 view .LVU822
 3092 000e 02B0     		add	sp, sp, #8
 3093              		.cfi_def_cfa_offset 0
 3094              		@ sp needed
 314:src/console.c **** }
 3095              		.loc 2 314 3 view .LVU823
 3096 0010 FFF7FEBF 		b	process_keycode_with_shift
 3097              	.LVL254:
 314:src/console.c **** }
 3098              		.loc 2 314 3 view .LVU824
 3099              		.cfi_endproc
 3100              	.LFE32:
 3102              		.section	.rodata.do_multi.str1.4,"aMS",%progbits,1
 3103              		.align	2
 3104              	.LC17:
 3105 0000 2F48454C 		.ascii	"/HELP/wp34s_help.html\000"
 3105      502F7770 
 3105      3334735F 
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 85
=======
ARM GAS  /tmp/ccCyL0em.s 			page 85
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3105      68656C70 
 3105      2E68746D 
 3106              		.section	.text.do_multi,"ax",%progbits
 3107              		.align	1
 3108              		.p2align 2,,3
 3109              		.global	do_multi
 3110              		.syntax unified
 3111              		.thumb
 3112              		.thumb_func
 3113              		.fpu fpv4-sp-d16
 3115              	do_multi:
 3116              	.LVL255:
 3117              	.LFB33:
 316:src/console.c **** 
 317:src/console.c **** struct _ndmap do_multi (struct _ndmap r) {
 3118              		.loc 2 317 42 is_stmt 1 view -0
 3119              		.cfi_startproc
 3120              		@ args = 0, pretend = 0, frame = 16
 3121              		@ frame_needed = 0, uses_anonymous_args = 0
 3122              		.loc 2 317 42 is_stmt 0 view .LVU826
 3123 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3124              		.cfi_def_cfa_offset 20
 3125              		.cfi_offset 4, -20
 3126              		.cfi_offset 5, -16
 3127              		.cfi_offset 6, -12
 3128              		.cfi_offset 7, -8
 3129              		.cfi_offset 14, -4
 3130 0002 85B0     		sub	sp, sp, #20
 3131              		.cfi_def_cfa_offset 40
 3132              	.LVL256:
 318:src/console.c ****   switch(r.shift) {
 3133              		.loc 2 318 3 is_stmt 1 view .LVU827
 317:src/console.c ****   switch(r.shift) {
 3134              		.loc 2 317 42 is_stmt 0 view .LVU828
 3135 0004 6C46     		mov	r4, sp
 3136 0006 931E     		subs	r3, r2, #2
 3137 0008 84E80600 		stm	r4, {r1, r2}
 3138              	.LVL257:
 317:src/console.c ****   switch(r.shift) {
 3139              		.loc 2 317 42 view .LVU829
 3140 000c 0546     		mov	r5, r0
 3141 000e 0D2B     		cmp	r3, #13
 3142 0010 20D8     		bhi	.L280
 3143 0012 DFE803F0 		tbb	[pc, r3]
 3144              	.L282:
 3145 0016 2C       		.byte	(.L295-.L282)/2
 3146 0017 37       		.byte	(.L294-.L282)/2
 3147 0018 42       		.byte	(.L293-.L282)/2
 3148 0019 4D       		.byte	(.L292-.L282)/2
 3149 001a 58       		.byte	(.L291-.L282)/2
 3150 001b 63       		.byte	(.L290-.L282)/2
 3151 001c 6E       		.byte	(.L289-.L282)/2
 3152 001d 78       		.byte	(.L288-.L282)/2
 3153 001e 83       		.byte	(.L287-.L282)/2
 3154 001f 8D       		.byte	(.L286-.L282)/2
 3155 0020 97       		.byte	(.L285-.L282)/2
 3156 0021 AA       		.byte	(.L284-.L282)/2
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 86
=======
ARM GAS  /tmp/ccCyL0em.s 			page 86
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3157 0022 B4       		.byte	(.L283-.L282)/2
 3158 0023 07       		.byte	(.L281-.L282)/2
 3159              		.p2align 1
 3160              	.L281:
 319:src/console.c ****   /* case LASTX: // Last x via RCL L */
 320:src/console.c ****   /*   do_now (K11, 0); // RCL */
 321:src/console.c ****   /*   do_now (K_RELEASE,0); // release */
 322:src/console.c ****   /*   do_now (K15,0); // TAN key */
 323:src/console.c ****   /*   r.key_34s = K_RELEASE; */
 324:src/console.c ****   /*   r.shift = 0; // set up for release; */
 325:src/console.c ****   /*   break; */
 326:src/console.c ****   case ONSTO: // flash_backup()
 327:src/console.c ****     flash_backup(OP_SAVE);
 328:src/console.c ****     reset_shift();
 329:src/console.c ****     r = no_key;
 330:src/console.c ****     break;
 331:src/console.c ****   case ONRCL: // flash_restore()
 332:src/console.c ****     flash_restore(OP_LOAD);
 333:src/console.c ****     reset_shift();
 334:src/console.c ****     r = no_key;
 335:src/console.c ****     break;
 336:src/console.c ****   case WRLIB: // save library file
 337:src/console.c ****     save_lib_file(1);
 338:src/console.c ****     reset_shift();
 339:src/console.c ****     r = no_key;
 340:src/console.c ****     break;
 341:src/console.c ****   case LLIB: // load library file
 342:src/console.c ****     load_lib_file(1);
 343:src/console.c ****     reset_shift();
 344:src/console.c ****     r = no_key;
 345:src/console.c ****     break;
 346:src/console.c ****   case WRTST: // save state file
 347:src/console.c ****     save_ram_file(1);
 348:src/console.c ****     reset_shift();
 349:src/console.c ****     r = no_key;
 350:src/console.c ****     break;
 351:src/console.c ****   case LDST:
 352:src/console.c ****     load_ram_file(1);
 353:src/console.c ****     reset_shift();
 354:src/console.c ****     r = no_key;
 355:src/console.c ****     break;
 356:src/console.c ****   case LDPRG:
 357:src/console.c ****     load_prog_file();
 358:src/console.c ****     reset_shift();
 359:src/console.c ****     r = no_key;
 360:src/console.c ****     break;
 361:src/console.c ****   case SVPRG:
 362:src/console.c ****     save_prog_file();
 363:src/console.c ****     reset_shift();
 364:src/console.c ****     r = no_key;
 365:src/console.c ****     break;
 366:src/console.c ****   case HELP:
 367:src/console.c ****     run_help_file("/HELP/wp34s_help.html");
 368:src/console.c ****     reset_shift();
 369:src/console.c ****     r = no_key;
 370:src/console.c ****     break;
 371:src/console.c ****   case DOTS:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 87
=======
ARM GAS  /tmp/ccCyL0em.s 			page 87
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 372:src/console.c ****     do_all_dots();
 373:src/console.c ****     reset_shift();
 374:src/console.c ****     r = no_key;
 375:src/console.c ****     break;
 376:src/console.c ****   case SSHOT: // comes after f-key already pressed, but not released
 377:src/console.c ****     do_now(K_RELEASE,0); //release f-key; restore display
 378:src/console.c ****     do_now(K_SSHOT,0); //activates screenshot routine in keys
 379:src/console.c ****     r = no_key;
 380:src/console.c ****     break;
 381:src/console.c ****   case DEFMEN:
 382:src/console.c ****     toggle_default_menu();
 383:src/console.c ****     reset_shift();
 384:src/console.c ****     r = no_key;
 385:src/console.c ****     break;
 386:src/console.c ****   case SETUMEN:
 387:src/console.c ****     build_user_menu();
 388:src/console.c ****     reset_shift();
 389:src/console.c ****     r = no_key;;
 390:src/console.c ****     break;
 391:src/console.c ****   case KCPX:
 392:src/console.c ****     if (C_LOCKED) {
 3161              		.loc 2 392 5 is_stmt 1 view .LVU830
 3162              		.loc 2 392 9 is_stmt 0 view .LVU831
 3163 0024 644B     		ldr	r3, .L310
 3164 0026 1B68     		ldr	r3, [r3]
 3165 0028 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 3166              		.loc 2 392 8 view .LVU832
 3167 002c 03F04103 		and	r3, r3, #65
 3168 0030 412B     		cmp	r3, #65
 3169 0032 40F0AF80 		bne	.L297
 393:src/console.c ****       set_menu(M_C_Lock);
 3170              		.loc 2 393 7 is_stmt 1 view .LVU833
 3171              	.LVL258:
 3172              	.LBB120:
 3173              	.LBI120:
 122:src/menu.c    ****   menu_name m = current_menu;
 3174              		.loc 1 122 6 view .LVU834
 3175              	.LBB121:
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 3176              		.loc 1 123 3 view .LVU835
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 3177              		.loc 1 123 13 is_stmt 0 view .LVU836
 3178 0036 614A     		ldr	r2, .L310+4
 3179 0038 92F90030 		ldrsb	r3, [r2]
 3180              	.LVL259:
 124:src/menu.c    ****     current_menu = default_menu;
 3181              		.loc 1 124 3 is_stmt 1 view .LVU837
 124:src/menu.c    ****     current_menu = default_menu;
 3182              		.loc 1 124 6 is_stmt 0 view .LVU838
 3183 003c 112B     		cmp	r3, #17
 3184 003e 00F0B580 		beq	.L309
 127:src/menu.c    ****     current_menu = last_menu;
 3185              		.loc 1 127 8 is_stmt 1 view .LVU839
 131:src/menu.c    ****   }
 3186              		.loc 1 131 5 view .LVU840
 131:src/menu.c    ****   }
 3187              		.loc 1 131 18 is_stmt 0 view .LVU841
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 88
=======
ARM GAS  /tmp/ccCyL0em.s 			page 88
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3188 0042 1121     		movs	r1, #17
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 3189              		.loc 1 133 6 view .LVU842
 3190 0044 092B     		cmp	r3, #9
 131:src/menu.c    ****   }
 3191              		.loc 1 131 18 view .LVU843
 3192 0046 1170     		strb	r1, [r2]
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 3193              		.loc 1 133 3 is_stmt 1 view .LVU844
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 3194              		.loc 1 133 6 is_stmt 0 view .LVU845
 3195 0048 02D0     		beq	.L300
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 3196              		.loc 1 133 23 view .LVU846
 3197 004a 102B     		cmp	r3, #16
 3198 004c 40F0B180 		bne	.L299
 3199              	.L300:
 3200              	.LVL260:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 3201              		.loc 1 133 23 view .LVU847
 3202              	.LBE121:
 3203              	.LBE120:
 394:src/console.c ****       reset_shift();
 3204              		.loc 2 394 7 is_stmt 1 view .LVU848
 3205 0050 FFF7FEFF 		bl	reset_shift
 3206              	.LVL261:
 3207              	.L280:
 395:src/console.c ****     }
 396:src/console.c ****     else {
 397:src/console.c ****       do_now (K_CMPLX, 0);
 398:src/console.c ****       do_now (K_RELEASE, 0);
 399:src/console.c ****       r = no_key;
 400:src/console.c ****     }
 401:src/console.c ****   default:
 402:src/console.c ****     r = no_key;
 3208              		.loc 2 402 5 view .LVU849
 3209              		.loc 2 402 7 is_stmt 0 view .LVU850
 3210 0054 5A4B     		ldr	r3, .L310+8
 3211 0056 93E80300 		ldm	r3, {r0, r1}
 3212 005a 84E80300 		stm	r4, {r0, r1}
 3213              	.LVL262:
 3214              	.L296:
 403:src/console.c ****   }
 404:src/console.c ****   return r;
 3215              		.loc 2 404 3 is_stmt 1 view .LVU851
 3216              		.loc 2 404 10 is_stmt 0 view .LVU852
 3217 005e 0191     		str	r1, [sp, #4]
 3218 0060 94E80300 		ldm	r4, {r0, r1}
 3219              	.LVL263:
 3220              		.loc 2 404 10 view .LVU853
 3221 0064 85E80300 		stm	r5, {r0, r1}
 405:src/console.c **** }
 3222              		.loc 2 405 1 view .LVU854
 3223 0068 2846     		mov	r0, r5
 3224 006a 05B0     		add	sp, sp, #20
 3225              		.cfi_remember_state
 3226              		.cfi_def_cfa_offset 20
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 89
=======
ARM GAS  /tmp/ccCyL0em.s 			page 89
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3227              		@ sp needed
 3228 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 3229              	.LVL264:
 3230              	.L295:
 3231              		.cfi_restore_state
 327:src/console.c ****     reset_shift();
 3232              		.loc 2 327 5 is_stmt 1 view .LVU855
 3233 006e AD20     		movs	r0, #173
 3234              	.LVL265:
 327:src/console.c ****     reset_shift();
 3235              		.loc 2 327 5 is_stmt 0 view .LVU856
 3236 0070 FFF7FEFF 		bl	flash_backup
 3237              	.LVL266:
 328:src/console.c ****     r = no_key;
 3238              		.loc 2 328 5 is_stmt 1 view .LVU857
 3239 0074 FFF7FEFF 		bl	reset_shift
 3240              	.LVL267:
 329:src/console.c ****     break;
 3241              		.loc 2 329 5 view .LVU858
 329:src/console.c ****     break;
 3242              		.loc 2 329 7 is_stmt 0 view .LVU859
 3243 0078 514B     		ldr	r3, .L310+8
 3244 007a 93E80300 		ldm	r3, {r0, r1}
 3245 007e 84E80300 		stm	r4, {r0, r1}
 3246              	.LVL268:
 330:src/console.c ****   case ONRCL: // flash_restore()
 3247              		.loc 2 330 5 is_stmt 1 view .LVU860
 3248 0082 ECE7     		b	.L296
 3249              	.LVL269:
 3250              	.L294:
 332:src/console.c ****     reset_shift();
 3251              		.loc 2 332 5 view .LVU861
 3252 0084 AE20     		movs	r0, #174
 3253              	.LVL270:
 332:src/console.c ****     reset_shift();
 3254              		.loc 2 332 5 is_stmt 0 view .LVU862
 3255 0086 FFF7FEFF 		bl	flash_restore
 3256              	.LVL271:
 333:src/console.c ****     r = no_key;
 3257              		.loc 2 333 5 is_stmt 1 view .LVU863
 3258 008a FFF7FEFF 		bl	reset_shift
 3259              	.LVL272:
 334:src/console.c ****     break;
 3260              		.loc 2 334 5 view .LVU864
 334:src/console.c ****     break;
 3261              		.loc 2 334 7 is_stmt 0 view .LVU865
 3262 008e 4C4B     		ldr	r3, .L310+8
 3263 0090 93E80300 		ldm	r3, {r0, r1}
 3264 0094 84E80300 		stm	r4, {r0, r1}
 3265              	.LVL273:
 335:src/console.c ****   case WRLIB: // save library file
 3266              		.loc 2 335 5 is_stmt 1 view .LVU866
 3267 0098 E1E7     		b	.L296
 3268              	.LVL274:
 3269              	.L293:
 337:src/console.c ****     reset_shift();
 3270              		.loc 2 337 5 view .LVU867
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 90
=======
ARM GAS  /tmp/ccCyL0em.s 			page 90
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3271 009a 0120     		movs	r0, #1
 3272              	.LVL275:
 337:src/console.c ****     reset_shift();
 3273              		.loc 2 337 5 is_stmt 0 view .LVU868
 3274 009c FFF7FEFF 		bl	save_lib_file
 3275              	.LVL276:
 338:src/console.c ****     r = no_key;
 3276              		.loc 2 338 5 is_stmt 1 view .LVU869
 3277 00a0 FFF7FEFF 		bl	reset_shift
 3278              	.LVL277:
 339:src/console.c ****     break;
 3279              		.loc 2 339 5 view .LVU870
 339:src/console.c ****     break;
 3280              		.loc 2 339 7 is_stmt 0 view .LVU871
 3281 00a4 464B     		ldr	r3, .L310+8
 3282 00a6 93E80300 		ldm	r3, {r0, r1}
 3283 00aa 84E80300 		stm	r4, {r0, r1}
 3284              	.LVL278:
 340:src/console.c ****   case LLIB: // load library file
 3285              		.loc 2 340 5 is_stmt 1 view .LVU872
 3286 00ae D6E7     		b	.L296
 3287              	.LVL279:
 3288              	.L292:
 342:src/console.c ****     reset_shift();
 3289              		.loc 2 342 5 view .LVU873
 3290 00b0 0120     		movs	r0, #1
 3291              	.LVL280:
 342:src/console.c ****     reset_shift();
 3292              		.loc 2 342 5 is_stmt 0 view .LVU874
 3293 00b2 FFF7FEFF 		bl	load_lib_file
 3294              	.LVL281:
 343:src/console.c ****     r = no_key;
 3295              		.loc 2 343 5 is_stmt 1 view .LVU875
 3296 00b6 FFF7FEFF 		bl	reset_shift
 3297              	.LVL282:
 344:src/console.c ****     break;
 3298              		.loc 2 344 5 view .LVU876
 344:src/console.c ****     break;
 3299              		.loc 2 344 7 is_stmt 0 view .LVU877
 3300 00ba 414B     		ldr	r3, .L310+8
 3301 00bc 93E80300 		ldm	r3, {r0, r1}
 3302 00c0 84E80300 		stm	r4, {r0, r1}
 3303              	.LVL283:
 345:src/console.c ****   case WRTST: // save state file
 3304              		.loc 2 345 5 is_stmt 1 view .LVU878
 3305 00c4 CBE7     		b	.L296
 3306              	.LVL284:
 3307              	.L291:
 347:src/console.c ****     reset_shift();
 3308              		.loc 2 347 5 view .LVU879
 3309 00c6 0120     		movs	r0, #1
 3310              	.LVL285:
 347:src/console.c ****     reset_shift();
 3311              		.loc 2 347 5 is_stmt 0 view .LVU880
 3312 00c8 FFF7FEFF 		bl	save_ram_file
 3313              	.LVL286:
 348:src/console.c ****     r = no_key;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 91
=======
ARM GAS  /tmp/ccCyL0em.s 			page 91
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3314              		.loc 2 348 5 is_stmt 1 view .LVU881
 3315 00cc FFF7FEFF 		bl	reset_shift
 3316              	.LVL287:
 349:src/console.c ****     break;
 3317              		.loc 2 349 5 view .LVU882
 349:src/console.c ****     break;
 3318              		.loc 2 349 7 is_stmt 0 view .LVU883
 3319 00d0 3B4B     		ldr	r3, .L310+8
 3320 00d2 93E80300 		ldm	r3, {r0, r1}
 3321 00d6 84E80300 		stm	r4, {r0, r1}
 3322              	.LVL288:
 350:src/console.c ****   case LDST:
 3323              		.loc 2 350 5 is_stmt 1 view .LVU884
 3324 00da C0E7     		b	.L296
 3325              	.LVL289:
 3326              	.L290:
 352:src/console.c ****     reset_shift();
 3327              		.loc 2 352 5 view .LVU885
 3328 00dc 0120     		movs	r0, #1
 3329              	.LVL290:
 352:src/console.c ****     reset_shift();
 3330              		.loc 2 352 5 is_stmt 0 view .LVU886
 3331 00de FFF7FEFF 		bl	load_ram_file
 3332              	.LVL291:
 353:src/console.c ****     r = no_key;
 3333              		.loc 2 353 5 is_stmt 1 view .LVU887
 3334 00e2 FFF7FEFF 		bl	reset_shift
 3335              	.LVL292:
 354:src/console.c ****     break;
 3336              		.loc 2 354 5 view .LVU888
 354:src/console.c ****     break;
 3337              		.loc 2 354 7 is_stmt 0 view .LVU889
 3338 00e6 364B     		ldr	r3, .L310+8
 3339 00e8 93E80300 		ldm	r3, {r0, r1}
 3340 00ec 84E80300 		stm	r4, {r0, r1}
 3341              	.LVL293:
 355:src/console.c ****   case LDPRG:
 3342              		.loc 2 355 5 is_stmt 1 view .LVU890
 3343 00f0 B5E7     		b	.L296
 3344              	.LVL294:
 3345              	.L289:
 357:src/console.c ****     reset_shift();
 3346              		.loc 2 357 5 view .LVU891
 3347 00f2 FFF7FEFF 		bl	load_prog_file
 3348              	.LVL295:
 358:src/console.c ****     r = no_key;
 3349              		.loc 2 358 5 view .LVU892
 3350 00f6 FFF7FEFF 		bl	reset_shift
 3351              	.LVL296:
 359:src/console.c ****     break;
 3352              		.loc 2 359 5 view .LVU893
 359:src/console.c ****     break;
 3353              		.loc 2 359 7 is_stmt 0 view .LVU894
 3354 00fa 314B     		ldr	r3, .L310+8
 3355 00fc 93E80300 		ldm	r3, {r0, r1}
 3356 0100 84E80300 		stm	r4, {r0, r1}
 3357              	.LVL297:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 92
=======
ARM GAS  /tmp/ccCyL0em.s 			page 92
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 360:src/console.c ****   case SVPRG:
 3358              		.loc 2 360 5 is_stmt 1 view .LVU895
 3359 0104 ABE7     		b	.L296
 3360              	.LVL298:
 3361              	.L288:
 367:src/console.c ****     reset_shift();
 3362              		.loc 2 367 5 view .LVU896
 3363 0106 2F4B     		ldr	r3, .L310+12
 3364 0108 2F48     		ldr	r0, .L310+16
 3365              	.LVL299:
 367:src/console.c ****     reset_shift();
 3366              		.loc 2 367 5 is_stmt 0 view .LVU897
 3367 010a 9847     		blx	r3
 3368              	.LVL300:
 368:src/console.c ****     r = no_key;
 3369              		.loc 2 368 5 is_stmt 1 view .LVU898
 3370 010c FFF7FEFF 		bl	reset_shift
 3371              	.LVL301:
 369:src/console.c ****     break;
 3372              		.loc 2 369 5 view .LVU899
 369:src/console.c ****     break;
 3373              		.loc 2 369 7 is_stmt 0 view .LVU900
 3374 0110 2B4B     		ldr	r3, .L310+8
 3375 0112 93E80300 		ldm	r3, {r0, r1}
 3376 0116 84E80300 		stm	r4, {r0, r1}
 3377              	.LVL302:
 370:src/console.c ****   case DOTS:
 3378              		.loc 2 370 5 is_stmt 1 view .LVU901
 3379 011a A0E7     		b	.L296
 3380              	.LVL303:
 3381              	.L287:
 362:src/console.c ****     reset_shift();
 3382              		.loc 2 362 5 view .LVU902
 3383 011c FFF7FEFF 		bl	save_prog_file
 3384              	.LVL304:
 363:src/console.c ****     r = no_key;
 3385              		.loc 2 363 5 view .LVU903
 3386 0120 FFF7FEFF 		bl	reset_shift
 3387              	.LVL305:
 364:src/console.c ****     break;
 3388              		.loc 2 364 5 view .LVU904
 364:src/console.c ****     break;
 3389              		.loc 2 364 7 is_stmt 0 view .LVU905
 3390 0124 264B     		ldr	r3, .L310+8
 3391 0126 93E80300 		ldm	r3, {r0, r1}
 3392 012a 84E80300 		stm	r4, {r0, r1}
 3393              	.LVL306:
 365:src/console.c ****   case HELP:
 3394              		.loc 2 365 5 is_stmt 1 view .LVU906
 3395 012e 96E7     		b	.L296
 3396              	.LVL307:
 3397              	.L286:
 372:src/console.c ****     reset_shift();
 3398              		.loc 2 372 5 view .LVU907
 3399 0130 FFF7FEFF 		bl	do_all_dots
 3400              	.LVL308:
 373:src/console.c ****     r = no_key;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 93
=======
ARM GAS  /tmp/ccCyL0em.s 			page 93
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3401              		.loc 2 373 5 view .LVU908
 3402 0134 FFF7FEFF 		bl	reset_shift
 3403              	.LVL309:
 374:src/console.c ****     break;
 3404              		.loc 2 374 5 view .LVU909
 374:src/console.c ****     break;
 3405              		.loc 2 374 7 is_stmt 0 view .LVU910
 3406 0138 214B     		ldr	r3, .L310+8
 3407 013a 93E80300 		ldm	r3, {r0, r1}
 3408 013e 84E80300 		stm	r4, {r0, r1}
 3409              	.LVL310:
 375:src/console.c ****   case SSHOT: // comes after f-key already pressed, but not released
 3410              		.loc 2 375 5 is_stmt 1 view .LVU911
 3411 0142 8CE7     		b	.L296
 3412              	.LVL311:
 3413              	.L285:
 377:src/console.c ****     do_now(K_SSHOT,0); //activates screenshot routine in keys
 3414              		.loc 2 377 5 view .LVU912
 3415              	.LBB123:
 3416              	.LBI123:
 310:src/console.c ****   struct _ndmap temp;
 3417              		.loc 2 310 6 view .LVU913
 3418              	.LBB124:
 311:src/console.c ****   temp.key_34s = key;
 3419              		.loc 2 311 3 view .LVU914
 312:src/console.c ****   temp.shift = shift;
 3420              		.loc 2 312 3 view .LVU915
 312:src/console.c ****   temp.shift = shift;
 3421              		.loc 2 312 16 is_stmt 0 view .LVU916
 3422 0144 6323     		movs	r3, #99
 313:src/console.c ****   process_keycode_with_shift (temp);
 3423              		.loc 2 313 14 view .LVU917
 3424 0146 0027     		movs	r7, #0
 312:src/console.c ****   temp.shift = shift;
 3425              		.loc 2 312 16 view .LVU918
 3426 0148 8DF80830 		strb	r3, [sp, #8]
 313:src/console.c ****   process_keycode_with_shift (temp);
 3427              		.loc 2 313 3 is_stmt 1 view .LVU919
 313:src/console.c ****   process_keycode_with_shift (temp);
 3428              		.loc 2 313 14 is_stmt 0 view .LVU920
 3429 014c 0397     		str	r7, [sp, #12]
 314:src/console.c **** }
 3430              		.loc 2 314 3 is_stmt 1 view .LVU921
 3431 014e 02AE     		add	r6, sp, #8
 3432 0150 96E80300 		ldm	r6, {r0, r1}
 3433              	.LVL312:
 314:src/console.c **** }
 3434              		.loc 2 314 3 is_stmt 0 view .LVU922
 3435 0154 FFF7FEFF 		bl	process_keycode_with_shift
 3436              	.LVL313:
 314:src/console.c **** }
 3437              		.loc 2 314 3 view .LVU923
 3438              	.LBE124:
 3439              	.LBE123:
 378:src/console.c ****     r = no_key;
 3440              		.loc 2 378 5 is_stmt 1 view .LVU924
 3441              	.LBB125:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 94
=======
ARM GAS  /tmp/ccCyL0em.s 			page 94
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3442              	.LBI125:
 310:src/console.c ****   struct _ndmap temp;
 3443              		.loc 2 310 6 view .LVU925
 3444              	.LBB126:
 311:src/console.c ****   temp.key_34s = key;
 3445              		.loc 2 311 3 view .LVU926
 312:src/console.c ****   temp.shift = shift;
 3446              		.loc 2 312 3 view .LVU927
 312:src/console.c ****   temp.shift = shift;
 3447              		.loc 2 312 16 is_stmt 0 view .LVU928
 3448 0158 3323     		movs	r3, #51
 3449              	.LVL314:
 3450              	.L308:
 312:src/console.c ****   temp.shift = shift;
 3451              		.loc 2 312 16 view .LVU929
 3452              	.LBE126:
 3453              	.LBE125:
 3454              	.LBB127:
 3455              	.LBB128:
 313:src/console.c ****   process_keycode_with_shift (temp);
 3456              		.loc 2 313 14 view .LVU930
 3457 015a 0397     		str	r7, [sp, #12]
 312:src/console.c ****   temp.shift = shift;
 3458              		.loc 2 312 16 view .LVU931
 3459 015c 8DF80830 		strb	r3, [sp, #8]
 313:src/console.c ****   process_keycode_with_shift (temp);
 3460              		.loc 2 313 3 is_stmt 1 view .LVU932
 314:src/console.c **** }
 3461              		.loc 2 314 3 view .LVU933
 3462 0160 96E80300 		ldm	r6, {r0, r1}
 3463 0164 FFF7FEFF 		bl	process_keycode_with_shift
 3464              	.LVL315:
 3465              	.LBE128:
 3466              	.LBE127:
 399:src/console.c ****     }
 3467              		.loc 2 399 7 view .LVU934
 399:src/console.c ****     }
 3468              		.loc 2 399 7 is_stmt 0 view .LVU935
 3469 0168 74E7     		b	.L280
 3470              	.LVL316:
 3471              	.L284:
 382:src/console.c ****     reset_shift();
 3472              		.loc 2 382 5 is_stmt 1 view .LVU936
 3473 016a FFF7FEFF 		bl	toggle_default_menu
 3474              	.LVL317:
 383:src/console.c ****     r = no_key;
 3475              		.loc 2 383 5 view .LVU937
 3476 016e FFF7FEFF 		bl	reset_shift
 3477              	.LVL318:
 384:src/console.c ****     break;
 3478              		.loc 2 384 5 view .LVU938
 384:src/console.c ****     break;
 3479              		.loc 2 384 7 is_stmt 0 view .LVU939
 3480 0172 134B     		ldr	r3, .L310+8
 3481 0174 93E80300 		ldm	r3, {r0, r1}
 3482 0178 84E80300 		stm	r4, {r0, r1}
 3483              	.LVL319:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 95
=======
ARM GAS  /tmp/ccCyL0em.s 			page 95
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 385:src/console.c ****   case SETUMEN:
 3484              		.loc 2 385 5 is_stmt 1 view .LVU940
 3485 017c 6FE7     		b	.L296
 3486              	.LVL320:
 3487              	.L283:
 387:src/console.c ****     reset_shift();
 3488              		.loc 2 387 5 view .LVU941
 3489              	.LBB130:
 3490              	.LBI130:
 671:src/menu.c    ****   // find the label 'MNU'
 3491              		.loc 1 671 6 view .LVU942
 3492              	.LBB131:
 673:src/menu.c    ****    build_user_menu_from_program (lbl);
 3493              		.loc 1 673 4 view .LVU943
 674:src/menu.c    **** }
 3494              		.loc 1 674 4 view .LVU944
 3495 017e 1348     		ldr	r0, .L310+20
 3496              	.LVL321:
 674:src/menu.c    **** }
 3497              		.loc 1 674 4 is_stmt 0 view .LVU945
 3498 0180 FFF7FEFF 		bl	build_user_menu_from_program
 3499              	.LVL322:
 3500              	.LBE131:
 3501              	.LBE130:
 388:src/console.c ****     r = no_key;;
 3502              		.loc 2 388 5 is_stmt 1 view .LVU946
 3503 0184 FFF7FEFF 		bl	reset_shift
 3504              	.LVL323:
 389:src/console.c ****     break;
 3505              		.loc 2 389 5 view .LVU947
 389:src/console.c ****     break;
 3506              		.loc 2 389 7 is_stmt 0 view .LVU948
 3507 0188 0D4B     		ldr	r3, .L310+8
 3508 018a 93E80300 		ldm	r3, {r0, r1}
 3509 018e 84E80300 		stm	r4, {r0, r1}
 3510              	.LVL324:
 389:src/console.c ****     break;
 3511              		.loc 2 389 16 is_stmt 1 view .LVU949
 390:src/console.c ****   case KCPX:
 3512              		.loc 2 390 5 view .LVU950
 3513 0192 64E7     		b	.L296
 3514              	.LVL325:
 3515              	.L297:
 397:src/console.c ****       do_now (K_RELEASE, 0);
 3516              		.loc 2 397 7 view .LVU951
 3517              	.LBB132:
 3518              	.LBI132:
 310:src/console.c ****   struct _ndmap temp;
 3519              		.loc 2 310 6 view .LVU952
 3520              	.LBB133:
 311:src/console.c ****   temp.key_34s = key;
 3521              		.loc 2 311 3 view .LVU953
 312:src/console.c ****   temp.shift = shift;
 3522              		.loc 2 312 3 view .LVU954
 312:src/console.c ****   temp.shift = shift;
 3523              		.loc 2 312 16 is_stmt 0 view .LVU955
 3524 0194 2D23     		movs	r3, #45
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 96
=======
ARM GAS  /tmp/ccCyL0em.s 			page 96
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 313:src/console.c ****   process_keycode_with_shift (temp);
 3525              		.loc 2 313 14 view .LVU956
 3526 0196 0027     		movs	r7, #0
 312:src/console.c ****   temp.shift = shift;
 3527              		.loc 2 312 16 view .LVU957
 3528 0198 8DF80830 		strb	r3, [sp, #8]
 313:src/console.c ****   process_keycode_with_shift (temp);
 3529              		.loc 2 313 3 is_stmt 1 view .LVU958
 313:src/console.c ****   process_keycode_with_shift (temp);
 3530              		.loc 2 313 14 is_stmt 0 view .LVU959
 3531 019c 0397     		str	r7, [sp, #12]
 314:src/console.c **** }
 3532              		.loc 2 314 3 is_stmt 1 view .LVU960
 3533 019e 02AE     		add	r6, sp, #8
 3534 01a0 96E80300 		ldm	r6, {r0, r1}
 3535              	.LVL326:
 314:src/console.c **** }
 3536              		.loc 2 314 3 is_stmt 0 view .LVU961
 3537 01a4 FFF7FEFF 		bl	process_keycode_with_shift
 3538              	.LVL327:
 314:src/console.c **** }
 3539              		.loc 2 314 3 view .LVU962
 3540              	.LBE133:
 3541              	.LBE132:
 398:src/console.c ****       r = no_key;
 3542              		.loc 2 398 7 is_stmt 1 view .LVU963
 3543              	.LBB134:
 3544              	.LBI127:
 310:src/console.c ****   struct _ndmap temp;
 3545              		.loc 2 310 6 view .LVU964
 3546              	.LBB129:
 311:src/console.c ****   temp.key_34s = key;
 3547              		.loc 2 311 3 view .LVU965
 312:src/console.c ****   temp.shift = shift;
 3548              		.loc 2 312 3 view .LVU966
 312:src/console.c ****   temp.shift = shift;
 3549              		.loc 2 312 16 is_stmt 0 view .LVU967
 3550 01a8 6323     		movs	r3, #99
 3551 01aa D6E7     		b	.L308
 3552              	.LVL328:
 3553              	.L309:
 312:src/console.c ****   temp.shift = shift;
 3554              		.loc 2 312 16 view .LVU968
 3555              	.LBE129:
 3556              	.LBE134:
 3557              	.LBB135:
 3558              	.LBB122:
 125:src/menu.c    ****   }
 3559              		.loc 1 125 5 is_stmt 1 view .LVU969
 125:src/menu.c    ****   }
 3560              		.loc 1 125 18 is_stmt 0 view .LVU970
 3561 01ac 0849     		ldr	r1, .L310+24
 3562 01ae 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3563 01b0 1170     		strb	r1, [r2]
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 3564              		.loc 1 133 3 is_stmt 1 view .LVU971
 3565              	.L299:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 97
=======
ARM GAS  /tmp/ccCyL0em.s 			page 97
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 3566              		.loc 1 133 43 view .LVU972
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 3567              		.loc 1 133 53 is_stmt 0 view .LVU973
 3568 01b2 084A     		ldr	r2, .L310+28
 3569 01b4 1370     		strb	r3, [r2]
 3570 01b6 4BE7     		b	.L300
 3571              	.L311:
 3572              		.align	2
 3573              	.L310:
 3574 01b8 00000000 		.word	main_ram
 3575 01bc 00000000 		.word	.LANCHOR1
 3576 01c0 00000000 		.word	.LANCHOR10
 3577 01c4 49040008 		.word	134218825
 3578 01c8 00000000 		.word	.LC17
 3579 01cc 4DF04E55 		.word	1431236685
 3580 01d0 00000000 		.word	.LANCHOR2
 3581 01d4 00000000 		.word	.LANCHOR3
 3582              	.LBE122:
 3583              	.LBE135:
 3584              		.cfi_endproc
 3585              	.LFE33:
 3587              		.section	.text.program_main,"ax",%progbits
 3588              		.align	1
 3589              		.p2align 2,,3
 3590              		.global	program_main
 3591              		.syntax unified
 3592              		.thumb
 3593              		.thumb_func
 3594              		.fpu fpv4-sp-d16
 3596              	program_main:
 3597              	.LFB34:
 406:src/console.c **** 
 407:src/console.c **** void program_main(){
 3598              		.loc 2 407 20 is_stmt 1 view -0
 3599              		.cfi_startproc
 3600              		@ args = 0, pretend = 0, frame = 224
 3601              		@ frame_needed = 0, uses_anonymous_args = 0
 408:src/console.c ****   int c;
 3602              		.loc 2 408 3 view .LVU975
 409:src/console.c ****   struct _ndmap remapped;
 3603              		.loc 2 409 3 view .LVU976
 410:src/console.c **** 
 411:src/console.c ****   init_mem();
 3604              		.loc 2 411 3 view .LVU977
 407:src/console.c ****   int c;
 3605              		.loc 2 407 20 is_stmt 0 view .LVU978
 3606 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3607              		.cfi_def_cfa_offset 32
 3608              		.cfi_offset 4, -32
 3609              		.cfi_offset 5, -28
 3610              		.cfi_offset 6, -24
 3611              		.cfi_offset 7, -20
 3612              		.cfi_offset 8, -16
 3613              		.cfi_offset 9, -12
 3614              		.cfi_offset 10, -8
 3615              		.cfi_offset 14, -4
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 98
=======
ARM GAS  /tmp/ccCyL0em.s 			page 98
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3616 0004 B8B0     		sub	sp, sp, #224
 3617              		.cfi_def_cfa_offset 256
 3618              		.loc 2 411 3 view .LVU979
 3619 0006 FFF7FEFF 		bl	init_mem
 3620              	.LVL329:
 412:src/console.c ****   init_RegionTab();
 3621              		.loc 2 412 3 is_stmt 1 view .LVU980
 3622 000a FFF7FEFF 		bl	init_RegionTab
 3623              	.LVL330:
 413:src/console.c ****   init_34s();
 3624              		.loc 2 413 3 view .LVU981
 3625 000e FFF7FEFF 		bl	init_34s
 3626              	.LVL331:
 414:src/console.c ****   State2.flags = 1;  
 3627              		.loc 2 414 3 view .LVU982
 3628              		.loc 2 414 16 is_stmt 0 view .LVU983
 3629 0012 B24A     		ldr	r2, .L415
 3630 0014 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 3631 0016 43F00103 		orr	r3, r3, #1
 3632 001a 1376     		strb	r3, [r2, #24]
 415:src/console.c ****   check_create_wp34sdir();
 3633              		.loc 2 415 3 is_stmt 1 view .LVU984
 3634 001c FFF7FEFF 		bl	check_create_wp34sdir
 3635              	.LVL332:
 416:src/console.c ****   if (!load_ram_file(0)) DispMsg = CNULL; // no message if it loads ok
 3636              		.loc 2 416 3 view .LVU985
 3637              		.loc 2 416 8 is_stmt 0 view .LVU986
 3638 0020 0020     		movs	r0, #0
 3639 0022 FFF7FEFF 		bl	load_ram_file
 3640              	.LVL333:
 3641              		.loc 2 416 6 view .LVU987
 3642 0026 08B9     		cbnz	r0, .L313
 3643              		.loc 2 416 26 is_stmt 1 discriminator 1 view .LVU988
 3644              		.loc 2 416 34 is_stmt 0 discriminator 1 view .LVU989
 3645 0028 AD4B     		ldr	r3, .L415+4
 3646 002a 1860     		str	r0, [r3]
 3647              	.L313:
 417:src/console.c ****   load_backup_file(0);
 3648              		.loc 2 417 3 is_stmt 1 view .LVU990
 418:src/console.c ****   load_lib_file(0);
 419:src/console.c ****   t20->newln = 0;
 3649              		.loc 2 419 3 is_stmt 0 view .LVU991
 3650 002c AD4C     		ldr	r4, .L415+8
 3651 002e AE4E     		ldr	r6, .L415+12
 420:src/console.c ****   t20->lnfill = 0;
 421:src/console.c ****   t20->fixed = 1;
 422:src/console.c ****   t20->xspc = -2;
 423:src/console.c ****   t20->bgfill = 0;
 424:src/console.c ****   run_menu_item_app = run_menu_item;
 425:src/console.c ****   menu_line_str_app = menu_line_str;
 426:src/console.c **** 
 427:src/console.c ****   display();
 428:src/console.c ****   display_current_menu();
 429:src/console.c ****   lcd_refresh();
 430:src/console.c ****   JustDisplayed = 0;
 431:src/console.c ****   /*
 432:src/console.c ****     Returns a positive integer when a key is pressed. Doesn't return until a key is pressed.
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 99
=======
ARM GAS  /tmp/ccCyL0em.s 			page 99
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 433:src/console.c ****     Sleeps peacefully while waiting for a key.
 434:src/console.c ****     Handles (in principle!) turning off and on.
 435:src/console.c ****     =================
 436:src/console.c ****     Main event loop
 437:src/console.c ****     =================
 438:src/console.c **** 
 439:src/console.c ****     Status flags:
 440:src/console.c ****     ST(STAT_PGM_END)   - program should turn off state (set by auto off timer)
 441:src/console.c ****     ST(STAT_SUSPENDED) - Program ready for off and doesn't need to be woken-up again
 442:src/console.c ****     ST(STAT_OFF)       - Program in off state (only [EXIT] key can wake)
 443:src/console.c ****     ST(STAT_RUNNING)   - OS doesn't sleep in this mode
 444:src/console.c ****   */
 445:src/console.c ****   for(;;) {
 446:src/console.c **** 
 447:src/console.c ****     if ( ST(STAT_PGM_END) && ST(STAT_SUSPENDED) ) // In off mode and suspended
 448:src/console.c ****       {
 449:src/console.c **** 	CLR_ST(STAT_RUNNING);
 450:src/console.c **** 	sys_sleep();
 451:src/console.c ****       }
 452:src/console.c ****     else if (!ST(STAT_PGM_END) && key_empty()) // Go to sleep if no keys available
 3652              		.loc 2 452 35 view .LVU992
 3653 0030 AE4F     		ldr	r7, .L415+16
 453:src/console.c ****     {
 454:src/console.c ****       CLR_ST(STAT_RUNNING);
 455:src/console.c ****       sys_timer_start(0, 100);  // Timer 0: wake up for heartbeat 
 3654              		.loc 2 455 7 view .LVU993
 3655 0032 DFF82C83 		ldr	r8, .L415+132
 417:src/console.c ****   load_lib_file(0);
 3656              		.loc 2 417 3 view .LVU994
 3657 0036 0020     		movs	r0, #0
 3658 0038 FFF7FEFF 		bl	load_backup_file
 3659              	.LVL334:
 418:src/console.c ****   t20->newln = 0;
 3660              		.loc 2 418 3 is_stmt 1 view .LVU995
 3661 003c 0020     		movs	r0, #0
 3662 003e FFF7FEFF 		bl	load_lib_file
 3663              	.LVL335:
 419:src/console.c ****   t20->lnfill = 0;
 3664              		.loc 2 419 3 view .LVU996
 3665 0042 236B     		ldr	r3, [r4, #48]
 420:src/console.c ****   t20->fixed = 1;
 3666              		.loc 2 420 3 view .LVU997
 421:src/console.c ****   t20->xspc = -2;
 3667              		.loc 2 421 3 view .LVU998
 424:src/console.c ****   menu_line_str_app = menu_line_str;
 3668              		.loc 2 424 21 is_stmt 0 view .LVU999
 3669 0044 AA4A     		ldr	r2, .L415+20
 421:src/console.c ****   t20->xspc = -2;
 3670              		.loc 2 421 14 view .LVU1000
 3671 0046 0121     		movs	r1, #1
 3672 0048 1974     		strb	r1, [r3, #16]
 422:src/console.c ****   t20->bgfill = 0;
 3673              		.loc 2 422 3 is_stmt 1 view .LVU1001
 423:src/console.c ****   run_menu_item_app = run_menu_item;
 3674              		.loc 2 423 15 is_stmt 0 view .LVU1002
 3675 004a 0025     		movs	r5, #0
 422:src/console.c ****   t20->bgfill = 0;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 100
=======
ARM GAS  /tmp/ccCyL0em.s 			page 100
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3676              		.loc 2 422 13 view .LVU1003
 3677 004c FE21     		movs	r1, #254
 3678 004e 9973     		strb	r1, [r3, #14]
 423:src/console.c ****   run_menu_item_app = run_menu_item;
 3679              		.loc 2 423 3 is_stmt 1 view .LVU1004
 423:src/console.c ****   run_menu_item_app = run_menu_item;
 3680              		.loc 2 423 15 is_stmt 0 view .LVU1005
 3681 0050 5D82     		strh	r5, [r3, #18]	@ movhi
 419:src/console.c ****   t20->lnfill = 0;
 3682              		.loc 2 419 14 view .LVU1006
 3683 0052 1D75     		strb	r5, [r3, #20]
 424:src/console.c ****   menu_line_str_app = menu_line_str;
 3684              		.loc 2 424 3 is_stmt 1 view .LVU1007
 425:src/console.c **** 
 3685              		.loc 2 425 21 is_stmt 0 view .LVU1008
 3686 0054 A74B     		ldr	r3, .L415+24
 424:src/console.c ****   menu_line_str_app = menu_line_str;
 3687              		.loc 2 424 21 view .LVU1009
 3688 0056 E260     		str	r2, [r4, #12]
 425:src/console.c **** 
 3689              		.loc 2 425 3 is_stmt 1 view .LVU1010
 425:src/console.c **** 
 3690              		.loc 2 425 21 is_stmt 0 view .LVU1011
 3691 0058 2361     		str	r3, [r4, #16]
 427:src/console.c ****   display_current_menu();
 3692              		.loc 2 427 3 is_stmt 1 view .LVU1012
 3693 005a FFF7FEFF 		bl	display
 3694              	.LVL336:
 428:src/console.c ****   lcd_refresh();
 3695              		.loc 2 428 3 view .LVU1013
 3696 005e FFF7FEFF 		bl	display_current_menu
 3697              	.LVL337:
 429:src/console.c ****   JustDisplayed = 0;
 3698              		.loc 2 429 3 view .LVU1014
 3699 0062 A54B     		ldr	r3, .L415+28
 3700 0064 9847     		blx	r3
 3701              	.LVL338:
 430:src/console.c ****   /*
 3702              		.loc 2 430 3 view .LVU1015
 430:src/console.c ****   /*
 3703              		.loc 2 430 17 is_stmt 0 view .LVU1016
 3704 0066 A54B     		ldr	r3, .L415+32
 3705 0068 1D60     		str	r5, [r3]
 3706              	.L314:
 445:src/console.c **** 
 3707              		.loc 2 445 3 is_stmt 1 view .LVU1017
 447:src/console.c ****       {
 3708              		.loc 2 447 5 view .LVU1018
 447:src/console.c ****       {
 3709              		.loc 2 447 10 is_stmt 0 view .LVU1019
 3710 006a 2368     		ldr	r3, [r4]
 447:src/console.c ****       {
 3711              		.loc 2 447 8 view .LVU1020
 3712 006c 9B05     		lsls	r3, r3, #22
 3713 006e 40F1B980 		bpl	.L315
 447:src/console.c ****       {
 3714              		.loc 2 447 30 discriminator 1 view .LVU1021
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 101
=======
ARM GAS  /tmp/ccCyL0em.s 			page 101
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3715 0072 2368     		ldr	r3, [r4]
 447:src/console.c ****       {
 3716              		.loc 2 447 27 discriminator 1 view .LVU1022
 3717 0074 5D07     		lsls	r5, r3, #29
 3718 0076 40F1B580 		bpl	.L315
 449:src/console.c **** 	sys_sleep();
 3719              		.loc 2 449 2 is_stmt 1 view .LVU1023
 3720 007a 2368     		ldr	r3, [r4]
 450:src/console.c ****       }
 3721              		.loc 2 450 2 is_stmt 0 view .LVU1024
 3722 007c A04A     		ldr	r2, .L415+36
 449:src/console.c **** 	sys_sleep();
 3723              		.loc 2 449 2 view .LVU1025
 3724 007e 23F00203 		bic	r3, r3, #2
 3725 0082 2360     		str	r3, [r4]
 450:src/console.c ****       }
 3726              		.loc 2 450 2 is_stmt 1 view .LVU1026
 3727 0084 9047     		blx	r2
 3728              	.LVL339:
 3729              	.L316:
 456:src/console.c ****       sys_sleep();
 457:src/console.c ****       if (sys_timer_timeout(0)) { // If timer has completed...
 458:src/console.c **** 	key_push (K_HEARTBEAT);
 459:src/console.c **** 	if (Pause > 0) Pause--;
 460:src/console.c ****       }
 461:src/console.c ****       sys_timer_disable(0); // stop timer
 462:src/console.c ****     }
 463:src/console.c ****     
 464:src/console.c ****     // Wakeup in off state or going to sleep
 465:src/console.c ****     if (ST(STAT_PGM_END) || ST(STAT_SUSPENDED) ) {
 3730              		.loc 2 465 5 view .LVU1027
 3731              		.loc 2 465 9 is_stmt 0 view .LVU1028
 3732 0086 2368     		ldr	r3, [r4]
 3733              		.loc 2 465 8 view .LVU1029
 3734 0088 9805     		lsls	r0, r3, #22
 3735 008a 00F1D280 		bmi	.L322
 3736              	.L408:
 3737              		.loc 2 465 29 discriminator 1 view .LVU1030
 3738 008e 2368     		ldr	r3, [r4]
 3739              		.loc 2 465 26 discriminator 1 view .LVU1031
 3740 0090 5907     		lsls	r1, r3, #29
 3741 0092 00F1CE80 		bmi	.L322
 466:src/console.c ****       if (!ST(STAT_SUSPENDED)) {
 467:src/console.c ****         // Going to off mode
 468:src/console.c ****         lcd_set_buf_cleared(0); // Mark no buffer change region
 469:src/console.c ****         draw_power_off_image(1);
 470:src/console.c **** 
 471:src/console.c ****         LCD_power_off(0);
 472:src/console.c ****         SET_ST(STAT_SUSPENDED);
 473:src/console.c ****         SET_ST(STAT_OFF);
 474:src/console.c ****       }
 475:src/console.c ****       // Already in OFF -> just continue to sleep above
 476:src/console.c ****       continue; // note - this skips the rest of the loop and goes back to the beginning,
 477:src/console.c ****       // thus reaching the sleep()
 478:src/console.c ****     }
 479:src/console.c **** 
 480:src/console.c ****     // Well, we are woken-up
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 102
=======
ARM GAS  /tmp/ccCyL0em.s 			page 102
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 481:src/console.c ****     SET_ST(STAT_RUNNING);
 3742              		.loc 2 481 5 is_stmt 1 view .LVU1032
 3743 0096 2368     		ldr	r3, [r4]
 3744 0098 43F00203 		orr	r3, r3, #2
 3745 009c 2360     		str	r3, [r4]
 482:src/console.c **** 
 483:src/console.c ****     // Clear suspended state, because now we are definitely reached the active state
 484:src/console.c ****     CLR_ST(STAT_SUSPENDED);
 3746              		.loc 2 484 5 view .LVU1033
 3747 009e 2368     		ldr	r3, [r4]
 3748 00a0 23F00403 		bic	r3, r3, #4
 3749 00a4 2360     		str	r3, [r4]
 485:src/console.c **** 
 486:src/console.c ****     // Get up from OFF state
 487:src/console.c ****     if ( ST(STAT_OFF) ) {
 3750              		.loc 2 487 5 view .LVU1034
 3751              		.loc 2 487 10 is_stmt 0 view .LVU1035
 3752 00a6 2368     		ldr	r3, [r4]
 3753              		.loc 2 487 8 view .LVU1036
 3754 00a8 DA06     		lsls	r2, r3, #27
 3755 00aa 0ED5     		bpl	.L327
 488:src/console.c ****       LCD_power_on();
 3756              		.loc 2 488 7 is_stmt 1 view .LVU1037
 3757 00ac 954B     		ldr	r3, .L415+40
 3758 00ae 9847     		blx	r3
 3759              	.LVL340:
 489:src/console.c ****       key_pop_all(); //try clearing the ON key to stop double flashing of RPN
 3760              		.loc 2 489 7 view .LVU1038
 3761 00b0 954B     		ldr	r3, .L415+44
 3762 00b2 9847     		blx	r3
 3763              	.LVL341:
 490:src/console.c ****       rtc_wakeup_delay(); // Ensure that RTC readings after power off will be OK
 3764              		.loc 2 490 7 view .LVU1039
 3765 00b4 954B     		ldr	r3, .L415+48
 3766 00b6 9847     		blx	r3
 3767              	.LVL342:
 491:src/console.c **** 
 492:src/console.c ****       CLR_ST(STAT_OFF);
 3768              		.loc 2 492 7 view .LVU1040
 3769 00b8 2368     		ldr	r3, [r4]
 493:src/console.c **** 
 494:src/console.c ****       if ( !lcd_get_buf_cleared() )
 3770              		.loc 2 494 13 is_stmt 0 view .LVU1041
 3771 00ba 954A     		ldr	r2, .L415+52
 492:src/console.c **** 
 3772              		.loc 2 492 7 view .LVU1042
 3773 00bc 23F01003 		bic	r3, r3, #16
 3774 00c0 2360     		str	r3, [r4]
 3775              		.loc 2 494 7 is_stmt 1 view .LVU1043
 3776              		.loc 2 494 13 is_stmt 0 view .LVU1044
 3777 00c2 9047     		blx	r2
 3778              	.LVL343:
 3779              		.loc 2 494 10 view .LVU1045
 3780 00c4 08B9     		cbnz	r0, .L327
 495:src/console.c ****         lcd_forced_refresh(); // Just redraw from LCD buffer
 3781              		.loc 2 495 9 is_stmt 1 view .LVU1046
 3782 00c6 934B     		ldr	r3, .L415+56
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 103
=======
ARM GAS  /tmp/ccCyL0em.s 			page 103
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3783 00c8 9847     		blx	r3
 3784              	.LVL344:
 3785              	.L327:
 496:src/console.c ****     }
 497:src/console.c **** 
 498:src/console.c ****     // Key is ready -> clear auto off timer
 499:src/console.c ****     //    if ( !key_empty() )
 500:src/console.c ****     //  reset_auto_off(); - moved as key here might be heartbeat
 501:src/console.c ****     // Fetch the key
 502:src/console.c ****     //  < 0 -> No key event
 503:src/console.c ****     //  > 0 -> Key pressed
 504:src/console.c ****     // == 0 -> Key released
 505:src/console.c ****     c = key_pop();
 3786              		.loc 2 505 5 view .LVU1047
 3787              		.loc 2 505 9 is_stmt 0 view .LVU1048
 3788 00ca 934B     		ldr	r3, .L415+60
 3789 00cc 9847     		blx	r3
 3790              	.LVL345:
 506:src/console.c **** #ifdef INCLUDE_STOPWATCH
 507:src/console.c ****     if ( KeyCallback != NULL ) {
 3791              		.loc 2 507 22 view .LVU1049
 3792 00ce 3368     		ldr	r3, [r6]
 505:src/console.c **** #ifdef INCLUDE_STOPWATCH
 3793              		.loc 2 505 9 view .LVU1050
 3794 00d0 0546     		mov	r5, r0
 3795              	.LVL346:
 3796              		.loc 2 507 5 is_stmt 1 view .LVU1051
 3797              		.loc 2 507 8 is_stmt 0 view .LVU1052
 3798 00d2 002B     		cmp	r3, #0
 3799 00d4 00F04681 		beq	.L329
 508:src/console.c ****       c = (*KeyCallback)( c );
 3800              		.loc 2 508 7 is_stmt 1 view .LVU1053
 3801              		.loc 2 508 12 is_stmt 0 view .LVU1054
 3802 00d8 9847     		blx	r3
 3803              	.LVL347:
 3804              		.loc 2 508 12 view .LVU1055
 3805 00da 0546     		mov	r5, r0
 3806              	.LVL348:
 3807              	.L330:
 509:src/console.c ****     }
 510:src/console.c ****     else if ( StopWatchRunning && ( Ticker % STOPWATCH_BLINK ) == 0 ) {
 511:src/console.c ****       dot( LIT_EQ, !is_dot( LIT_EQ ) );
 512:src/console.c ****       finish_LEQ();
 513:src/console.c ****     }
 514:src/console.c **** #endif
 515:src/console.c ****     if ( (c != K_HEARTBEAT) && (c >= 0) ) {
 3808              		.loc 2 515 5 is_stmt 1 view .LVU1056
 3809              		.loc 2 515 8 is_stmt 0 view .LVU1057
 3810 00dc 622D     		cmp	r5, #98
 3811 00de 00F0BF80 		beq	.L331
 3812              		.loc 2 515 29 discriminator 1 view .LVU1058
 3813 00e2 002D     		cmp	r5, #0
 3814 00e4 C1DB     		blt	.L314
 516:src/console.c ****       reset_auto_off();
 3815              		.loc 2 516 7 is_stmt 1 view .LVU1059
 3816 00e6 8D4B     		ldr	r3, .L415+64
 3817 00e8 9847     		blx	r3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 104
=======
ARM GAS  /tmp/ccCyL0em.s 			page 104
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3818              	.LVL349:
 517:src/console.c ****       //      start_key_timer();
 518:src/console.c ****     }
 519:src/console.c ****     if (c >= 0) {
 3819              		.loc 2 519 5 view .LVU1060
 520:src/console.c ****       remapped = remap(c);
 3820              		.loc 2 520 7 view .LVU1061
 3821              	.LBB143:
 3822              	.LBI143:
  56:src/console.c **** 
 3823              		.loc 2 56 22 view .LVU1062
 3824              	.LBB144:
  58:src/console.c **** 
 3825              		.loc 2 58 3 view .LVU1063
 3826              		.file 3 "src/keytran.c"
   1:src/keytran.c **** static const struct _ndmap mapping_none[] = {
 3827              		.loc 3 1 1 view .LVU1064
   2:src/keytran.c ****     {K_RELEASE, -1},
   3:src/keytran.c ****     // Top row of DM42 1--6
   4:src/keytran.c ****     {K00, 0}, // A/sig+
   5:src/keytran.c ****     {K01, 0}, // B/1/x
   6:src/keytran.c ****     {K03, 0}, // D/sqrt x
   7:src/keytran.c ****     {K31, 2}, // log10
   8:src/keytran.c ****     {K30, 2}, // ln
   9:src/keytran.c ****     {K30, 0}, // xeq
  10:src/keytran.c ****     // Next row of DM42 7--12
  11:src/keytran.c ****     {K10, 0}, // STO
  12:src/keytran.c ****     {K11, 0}, // RCL
  13:src/keytran.c ****     {K12, 0}, // Rdown
  14:src/keytran.c ****     {K01, 1}, // sin
  15:src/keytran.c ****     {K02, 1}, // cos
  16:src/keytran.c ****     {K03, 1}, // tan
  17:src/keytran.c ****     // Third row of DM42 13--17
  18:src/keytran.c ****     {K20, 0}, // ENTER
  19:src/keytran.c ****     {K21, 0}, // x<>y
  20:src/keytran.c ****     {K22, 0}, // +/-
  21:src/keytran.c ****     {K23, 0}, // EEX
  22:src/keytran.c ****     {K24, 0}, // <-
  23:src/keytran.c ****     // Fourth row of DM42 18--22
  24:src/keytran.c ****     {K40, 0}, // up-arrow
  25:src/keytran.c ****     {K31, 0}, // 7
  26:src/keytran.c ****     {K32, 0}, // 8
  27:src/keytran.c ****     {K33, 0}, // 9
  28:src/keytran.c ****     {K34, 0}, // /
  29:src/keytran.c ****     // Fifth row of DM42 23--27
  30:src/keytran.c ****     {K50, 0}, // down-arrow
  31:src/keytran.c ****     {K41, 0}, // 4
  32:src/keytran.c ****     {K42, 0}, // 5
  33:src/keytran.c ****     {K43, 0}, // 6
  34:src/keytran.c ****     {K44, 0}, // *
  35:src/keytran.c ****     // Sixth row of DM42 28--32
  36:src/keytran.c ****     {K_F, 0}, // shift
  37:src/keytran.c ****     {K51, 0}, // 1
  38:src/keytran.c ****     {K52, 0}, // 2
  39:src/keytran.c ****     {K53, 0}, // 3
  40:src/keytran.c ****     {K54, 0}, // -
  41:src/keytran.c ****     // Last row of DM42 33--37
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 105
=======
ARM GAS  /tmp/ccCyL0em.s 			page 105
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  42:src/keytran.c ****     {K60, 0}, // EXIT
  43:src/keytran.c ****     {K61, 0}, // 0
  44:src/keytran.c ****     {K62, 0}, // .
  45:src/keytran.c ****     {K63, 0}, // R/S
  46:src/keytran.c ****     {K64, 0}, // +
  47:src/keytran.c ****     // Function keys, screenshot, sh_up, sh_down
  48:src/keytran.c ****     {K_NOP, 0}, // F1
  49:src/keytran.c ****     {K_NOP, 0},
  50:src/keytran.c ****     {K_NOP, 0},
  51:src/keytran.c ****     {K_NOP, 0},
  52:src/keytran.c ****     {K_NOP, 0},
  53:src/keytran.c ****     {K_NOP, 0}, // F6
  54:src/keytran.c ****     {K_NOP, 0}, // 44
  55:src/keytran.c ****     {K_NOP, 0}, // 45
  56:src/keytran.c ****     {K_NOP, 0}, // 46
  57:src/keytran.c ****   };
  58:src/keytran.c **** 
  59:src/keytran.c ****   static const struct _ndmap mapping_fshift[] = {
 3828              		.loc 3 59 3 view .LVU1065
  60:src/keytran.c ****     {K_RELEASE, -1},
  61:src/keytran.c ****     // Top row of DM42 1--6
  62:src/keytran.c ****     {K54, 3}, // sig- 
  63:src/keytran.c ****     {K33, 1}, // y^x
  64:src/keytran.c ****     {K44, 2}, // x^2
  65:src/keytran.c ****     {K31, 1}, // 10^x
  66:src/keytran.c ****     {K30, 1}, // e^x
  67:src/keytran.c ****     {K30, 3}, // GTO
  68:src/keytran.c ****     // Next row of DM42 7--12
  69:src/keytran.c ****     {K_MULTI, KCPX}, // Complex
  70:src/keytran.c ****     {K54, 1}, // %
  71:src/keytran.c ****     {K23, 3}, // pi
  72:src/keytran.c ****     {K01, 2}, // asin
  73:src/keytran.c ****     {K02, 2}, // acos
  74:src/keytran.c ****     {K03, 2}, // atan
  75:src/keytran.c ****     // Third row of DM42 13--17
  76:src/keytran.c ****     {K20, 1}, // alpha
  77:src/keytran.c ****     //    {K_MULTI, 1}, // lastX 
  78:src/keytran.c ****     {K_OP, RARG( RARG_RCL, regL_idx )}, // lastX 
  79:src/keytran.c ****     {K_SETMENU,  M_Angles}, // ANGLES menu
  80:src/keytran.c ****     {K_SETMENU,  M_Disp}, // DISP menu
  81:src/keytran.c ****     {K_SETMENU,  M_Clear}, // CLR menu
  82:src/keytran.c ****     // Fourth row of DM42 18--22
  83:src/keytran.c ****     {K40, 0}, // up-arrow
  84:src/keytran.c ****     {K52, 1}, // SLV
  85:src/keytran.c ****     {K_SETMENU,  M_Solve}, // Integral/sum/product menu
  86:src/keytran.c ****     {K44, 3}, // MATRIX cat
  87:src/keytran.c ****     {K_SETMENU,  M_Stats}, // STATS menu
  88:src/keytran.c ****     // Fifth row of DM42 23--27
  89:src/keytran.c ****     {K50, 0}, // down-arrow
  90:src/keytran.c ****     {K_SETMENU,  M_Base}, // BASE menu 
  91:src/keytran.c ****     {K04, 3}, // CONV cat
  92:src/keytran.c ****     {K_SETMENU,  M_Flags}, // FLAGS menu
  93:src/keytran.c ****     {K_SETMENU,  M_Prob}, // PROBS menu
  94:src/keytran.c ****     // Sixth row of DM42 28--32
  95:src/keytran.c ****     {K_G, 0}, // gshift
  96:src/keytran.c ****     {K_MULTI, DEFMEN}, // toggle default menu
  97:src/keytran.c ****     {K_SETMENU,  M_User}, // select user menu
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 106
=======
ARM GAS  /tmp/ccCyL0em.s 			page 106
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  98:src/keytran.c ****     {K52, 3}, // P.FCN cat
  99:src/keytran.c ****     {K_SETMENU, M_Print}, // Print menu
 100:src/keytran.c ****     // Last row of DM42 33--37
 101:src/keytran.c ****     {K60, 3}, // off
 102:src/keytran.c ****     {K_SETMENU,  M_Setup1}, // SETUP menu
 103:src/keytran.c ****     {K21, 1}, // <(
 104:src/keytran.c ****     {K63, 3}, // P/R
 105:src/keytran.c ****     {K10, 3}, // CAT cat
 106:src/keytran.c ****     // Function keys, screenshot, sh_up, sh_down
 107:src/keytran.c ****     {K_NOP, 0},
 108:src/keytran.c ****     {K_NOP, 0},
 109:src/keytran.c ****     {K_NOP, 0},
 110:src/keytran.c ****     {K_NOP, 0},
 111:src/keytran.c ****     {K_NOP, 0},
 112:src/keytran.c ****     {K_NOP, 0},
 113:src/keytran.c ****     {K_NOP, 0},
 114:src/keytran.c ****     {K_SETMENU,  M_Last}, // last menu
 115:src/keytran.c ****     {K_SETMENU,  M_Misc}, // MISC menu!
 116:src/keytran.c ****   };
 117:src/keytran.c **** 
 118:src/keytran.c ****   static const struct _ndmap mapping_gshift[] = {
 3829              		.loc 3 118 3 view .LVU1066
 119:src/keytran.c ****     {K_RELEASE, -1},
 120:src/keytran.c ****     // Top row of DM42 1--6
 121:src/keytran.c ****     {K64, 3}, // sig+
 122:src/keytran.c ****     {K34, 1}, // 1/x
 123:src/keytran.c ****     {K44, 1}, // sqrt x
 124:src/keytran.c ****     {K31, 2}, // 10^x
 125:src/keytran.c ****     {K_NOP, 0}, // no function
 126:src/keytran.c ****     {K_NOP, 0}, // no function
 127:src/keytran.c ****     // Next row of DM42 7--12
 128:src/keytran.c ****     {K_NOP, 0}, // no function
 129:src/keytran.c ****     {K11, 3}, // View
 130:src/keytran.c ****     {K12, 3}, // Rup
 131:src/keytran.c ****     {K_SETMENU,  M_Angles}, // ANGLES menu
 132:src/keytran.c ****     {K_SETMENU,  M_Angles}, // ANGLES menu
 133:src/keytran.c ****     {K_SETMENU,  M_Angles}, // ANGLES menu
 134:src/keytran.c ****     // Third row of DM42 13--17
 135:src/keytran.c ****     {K20, 2}, // fill
 136:src/keytran.c ****     {K_SETMENU,  M_Swap}, // X<>Y menu
 137:src/keytran.c ****     {K05, 3}, // MODE cat
 138:src/keytran.c ****     {K_NOP, 0}, // no function
 139:src/keytran.c ****     {K_NOP, 0}, // no function
 140:src/keytran.c ****     // Fourth row of DM42 18--22
 141:src/keytran.c ****     {K_NOP, 0}, // no function
 142:src/keytran.c ****     {K_NOP, 0}, // no function
 143:src/keytran.c ****     {K_NOP, 0}, // no function
 144:src/keytran.c ****     {K43, 3}, // SUMS catalogue
 145:src/keytran.c ****     {K42, 3}, // STAT catalogue
 146:src/keytran.c ****     // Fifth row of DM42 23--27
 147:src/keytran.c ****     {K_NOP, 0}, // no function 
 148:src/keytran.c ****     {K_NOP, 0}, // no function
 149:src/keytran.c ****     {K20, 3}, // CONST catalogue
 150:src/keytran.c ****     {K51, 3}, // TEST catalogue
 151:src/keytran.c ****     {K41, 3}, // PROB catalogue
 152:src/keytran.c ****     // Sixth row of DM42 28--32
 153:src/keytran.c ****     {K_G, -1}, // gshift (clears shift state)
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 107
=======
ARM GAS  /tmp/ccCyL0em.s 			page 107
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 154:src/keytran.c ****     {K_NOP, 0}, // no function
 155:src/keytran.c ****     //    {K_MULTI, SETUMEN}, // Set up user menu
 156:src/keytran.c ****     {K_SETMENU, M_Usermenu}, //User menu create
 157:src/keytran.c ****     {K53, 3}, // X.FCN catalogue.
 158:src/keytran.c ****     {K_NOP, 0}, // no function
 159:src/keytran.c ****     // Last row of DM42 33--37
 160:src/keytran.c ****     {K60, 2}, // SHOW (register browser)
 161:src/keytran.c ****     {K_SETMENU,  M_Setup2}, // SETUP2 menu
 162:src/keytran.c ****     {K_NOP, 0}, // no function
 163:src/keytran.c ****     {K_SETMENU,  M_Program}, // P.FCN menu
 164:src/keytran.c ****     {K50, 3}, // Status
 165:src/keytran.c ****     // Function keys, screenshot, sh_up, sh_down
 166:src/keytran.c ****     {K_NOP, 0},
 167:src/keytran.c ****     {K_NOP, 0},
 168:src/keytran.c ****     {K_NOP, 0},
 169:src/keytran.c ****     {K_NOP, 0},
 170:src/keytran.c ****     {K_NOP, 0},
 171:src/keytran.c ****     {K_NOP, 0},
 172:src/keytran.c ****     {K_NOP, 0},
 173:src/keytran.c ****     {K_NOP, 0},
 174:src/keytran.c ****     {K_NOP, 0},
 175:src/keytran.c ****   };
 176:src/keytran.c **** 
 177:src/keytran.c **** static const struct _ndmap mapping_alpha[] = {
 3830              		.loc 3 177 1 view .LVU1067
 178:src/keytran.c ****     {K_RELEASE, -1},
 179:src/keytran.c ****     // Top row of DM42 1--6
 180:src/keytran.c ****     {K00, -1},
 181:src/keytran.c ****     {K01, -1},
 182:src/keytran.c ****     {K02, -1},
 183:src/keytran.c ****     {K03, -1},
 184:src/keytran.c ****     {K04, -1},
 185:src/keytran.c ****     {K05, -1},
 186:src/keytran.c ****     // Next row of DM42 7--12
 187:src/keytran.c ****     {K10, -1},
 188:src/keytran.c ****     {K11, -1},
 189:src/keytran.c ****     {K12, -1},
 190:src/keytran.c ****     {K13, -1},
 191:src/keytran.c ****     {K14, -1},
 192:src/keytran.c ****     {K15, -1},
 193:src/keytran.c ****     // Third row of DM42 13--17
 194:src/keytran.c ****     {K20, -1},
 195:src/keytran.c ****     {K21, -1},
 196:src/keytran.c ****     {K22, -1},
 197:src/keytran.c ****     {K23, -1},
 198:src/keytran.c ****     {K24, -1},
 199:src/keytran.c ****     // Fourth row of DM42 18--22
 200:src/keytran.c ****     {K30, -1},
 201:src/keytran.c ****     {K31, -1},
 202:src/keytran.c ****     {K32, -1},
 203:src/keytran.c ****     {K33, -1},
 204:src/keytran.c ****     {K34, -1},
 205:src/keytran.c ****     // Fifth row of DM42 23--27
 206:src/keytran.c ****     {K40, -1},
 207:src/keytran.c ****     {K41, -1},
 208:src/keytran.c ****     {K42, -1},
 209:src/keytran.c ****     {K43, -1},
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 108
=======
ARM GAS  /tmp/ccCyL0em.s 			page 108
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 210:src/keytran.c ****     {K44, -1},
 211:src/keytran.c ****     // Sixth row of DM42 28--32
 212:src/keytran.c ****     {K50, -1},
 213:src/keytran.c ****     {K51, -1},
 214:src/keytran.c ****     {K52, -1},
 215:src/keytran.c ****     {K53, -1},
 216:src/keytran.c ****     {K54, -1},
 217:src/keytran.c ****     // Last row of DM42 33--37
 218:src/keytran.c ****     {K60, -1},
 219:src/keytran.c ****     {K61, -1},
 220:src/keytran.c ****     {K62, -1},
 221:src/keytran.c ****     {K63, -1},
 222:src/keytran.c ****     {K64, -1},
 223:src/keytran.c ****     // Function keys, screenshot, sh_up, sh_down
 224:src/keytran.c ****     {K_NOP, -1},
 225:src/keytran.c ****     {K_NOP, -1},
 226:src/keytran.c ****     {K_NOP, -1},
 227:src/keytran.c ****     {K_NOP, -1},
 228:src/keytran.c ****     {K_ARROW, -1}, // allow arrow and CMPLX to be used for K04 and K05
 229:src/keytran.c ****     {K_CMPLX, -1},
 230:src/keytran.c ****     {K_NOP, -1},
 231:src/keytran.c ****     {K_NOP, -1},
 232:src/keytran.c ****     {K_NOP, -1},
 233:src/keytran.c **** };
 234:src/keytran.c **** 
 235:src/keytran.c **** static const struct _ndmap mapping_running[] = {
 3831              		.loc 3 235 1 view .LVU1068
  62:src/console.c **** 
 3832              		.loc 2 62 3 view .LVU1069
  64:src/console.c **** 
 3833              		.loc 2 64 3 view .LVU1070
  64:src/console.c **** 
 3834              		.loc 2 64 6 is_stmt 0 view .LVU1071
 3835 00ea 632D     		cmp	r5, #99
 3836 00ec 00F08A81 		beq	.L396
  66:src/console.c ****     struct _ndmap sshot = {.key_34s = K_MULTI, .shift = SSHOT};
 3837              		.loc 2 66 3 is_stmt 1 view .LVU1072
  66:src/console.c ****     struct _ndmap sshot = {.key_34s = K_MULTI, .shift = SSHOT};
 3838              		.loc 2 66 6 is_stmt 0 view .LVU1073
 3839 00f0 2C2D     		cmp	r5, #44
 3840 00f2 00F05881 		beq	.L334
  71:src/console.c ****     return mapping_running[c];
 3841              		.loc 2 71 3 is_stmt 1 view .LVU1074
  71:src/console.c ****     return mapping_running[c];
 3842              		.loc 2 71 15 is_stmt 0 view .LVU1075
 3843 00f6 8A4A     		ldr	r2, .L415+68
 3844 00f8 8A4B     		ldr	r3, .L415+72
 3845 00fa 92F80090 		ldrb	r9, [r2]	@ zero_extendqisi2
 3846 00fe 1968     		ldr	r1, [r3]
  71:src/console.c ****     return mapping_running[c];
 3847              		.loc 2 71 6 view .LVU1076
 3848 0100 59EA0109 		orrs	r9, r9, r1
 3849 0104 40F07181 		bne	.L397
  75:src/console.c ****   
 3850              		.loc 2 75 3 is_stmt 1 view .LVU1077
  75:src/console.c ****   
 3851              		.loc 2 75 22 is_stmt 0 view .LVU1078
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 109
=======
ARM GAS  /tmp/ccCyL0em.s 			page 109
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3852 0108 04A8     		add	r0, sp, #16
 3853 010a FFF7FEFF 		bl	get_current_menu_ref
 3854              	.LVL350:
  77:src/console.c ****   case KEY_F1:
 3855              		.loc 2 77 3 is_stmt 1 view .LVU1079
 3856 010e A5F12603 		sub	r3, r5, #38
 3857 0112 052B     		cmp	r3, #5
 3858 0114 00F28081 		bhi	.L336
 3859 0118 DFE813F0 		tbh	[pc, r3, lsl #1]
 3860              	.L338:
 3861 011c 8601     		.2byte	(.L343-.L338)/2
 3862 011e 0B00     		.2byte	(.L342-.L338)/2
 3863 0120 1500     		.2byte	(.L341-.L338)/2
 3864 0122 1F00     		.2byte	(.L340-.L338)/2
 3865 0124 2900     		.2byte	(.L339-.L338)/2
 3866 0126 3300     		.2byte	(.L337-.L338)/2
 3867              		.p2align 1
 3868              	.L344:
  80:src/console.c ****   case KEY_F2:
 3869              		.loc 2 80 5 view .LVU1080
  80:src/console.c ****   case KEY_F2:
 3870              		.loc 2 80 9 is_stmt 0 view .LVU1081
 3871 0128 FFF7FEFF 		bl	cur_shift
 3872              	.LVL351:
  80:src/console.c ****   case KEY_F2:
 3873              		.loc 2 80 8 view .LVU1082
 3874 012c 0128     		cmp	r0, #1
 3875 012e 00F01882 		beq	.L398
 3876              	.L342:
  82:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[1].shifted;
 3877              		.loc 2 82 5 is_stmt 1 view .LVU1083
  82:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[1].shifted;
 3878              		.loc 2 82 9 is_stmt 0 view .LVU1084
 3879 0132 FFF7FEFF 		bl	cur_shift
 3880              	.LVL352:
  82:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[1].shifted;
 3881              		.loc 2 82 8 view .LVU1085
 3882 0136 0028     		cmp	r0, #0
 3883 0138 00F0A381 		beq	.L399
  83:src/console.c ****   case KEY_F3:
 3884              		.loc 2 83 5 is_stmt 1 view .LVU1086
  83:src/console.c ****   case KEY_F3:
 3885              		.loc 2 83 9 is_stmt 0 view .LVU1087
 3886 013c FFF7FEFF 		bl	cur_shift
 3887              	.LVL353:
  83:src/console.c ****   case KEY_F3:
 3888              		.loc 2 83 8 view .LVU1088
 3889 0140 0128     		cmp	r0, #1
 3890 0142 00F0E881 		beq	.L400
 3891              	.L341:
  85:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[2].shifted;
 3892              		.loc 2 85 5 is_stmt 1 view .LVU1089
  85:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[2].shifted;
 3893              		.loc 2 85 9 is_stmt 0 view .LVU1090
 3894 0146 FFF7FEFF 		bl	cur_shift
 3895              	.LVL354:
  85:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[2].shifted;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 110
=======
ARM GAS  /tmp/ccCyL0em.s 			page 110
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3896              		.loc 2 85 8 view .LVU1091
 3897 014a 0028     		cmp	r0, #0
 3898 014c 00F08F81 		beq	.L401
  86:src/console.c ****   case KEY_F4:
 3899              		.loc 2 86 5 is_stmt 1 view .LVU1092
  86:src/console.c ****   case KEY_F4:
 3900              		.loc 2 86 9 is_stmt 0 view .LVU1093
 3901 0150 FFF7FEFF 		bl	cur_shift
 3902              	.LVL355:
  86:src/console.c ****   case KEY_F4:
 3903              		.loc 2 86 8 view .LVU1094
 3904 0154 0128     		cmp	r0, #1
 3905 0156 00F0D481 		beq	.L402
 3906              	.L340:
  88:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[3].shifted;
 3907              		.loc 2 88 5 is_stmt 1 view .LVU1095
  88:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[3].shifted;
 3908              		.loc 2 88 9 is_stmt 0 view .LVU1096
 3909 015a FFF7FEFF 		bl	cur_shift
 3910              	.LVL356:
  88:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[3].shifted;
 3911              		.loc 2 88 8 view .LVU1097
 3912 015e 0028     		cmp	r0, #0
 3913 0160 00F07B81 		beq	.L403
  89:src/console.c ****   case KEY_F5:
 3914              		.loc 2 89 5 is_stmt 1 view .LVU1098
  89:src/console.c ****   case KEY_F5:
 3915              		.loc 2 89 9 is_stmt 0 view .LVU1099
 3916 0164 FFF7FEFF 		bl	cur_shift
 3917              	.LVL357:
  89:src/console.c ****   case KEY_F5:
 3918              		.loc 2 89 8 view .LVU1100
 3919 0168 0128     		cmp	r0, #1
 3920 016a 00F0B681 		beq	.L404
 3921              	.L339:
  91:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[4].shifted;
 3922              		.loc 2 91 5 is_stmt 1 view .LVU1101
  91:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[4].shifted;
 3923              		.loc 2 91 9 is_stmt 0 view .LVU1102
 3924 016e FFF7FEFF 		bl	cur_shift
 3925              	.LVL358:
  91:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[4].shifted;
 3926              		.loc 2 91 8 view .LVU1103
 3927 0172 0028     		cmp	r0, #0
 3928 0174 00F06781 		beq	.L405
  92:src/console.c ****   case KEY_F6:
 3929              		.loc 2 92 5 is_stmt 1 view .LVU1104
  92:src/console.c ****   case KEY_F6:
 3930              		.loc 2 92 9 is_stmt 0 view .LVU1105
 3931 0178 FFF7FEFF 		bl	cur_shift
 3932              	.LVL359:
  92:src/console.c ****   case KEY_F6:
 3933              		.loc 2 92 8 view .LVU1106
 3934 017c 0128     		cmp	r0, #1
 3935 017e 00F0B681 		beq	.L406
 3936              	.L337:
  94:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[5].shifted;
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 111
=======
ARM GAS  /tmp/ccCyL0em.s 			page 111
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3937              		.loc 2 94 5 is_stmt 1 view .LVU1107
  94:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[5].shifted;
 3938              		.loc 2 94 9 is_stmt 0 view .LVU1108
 3939 0182 FFF7FEFF 		bl	cur_shift
 3940              	.LVL360:
  94:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[5].shifted;
 3941              		.loc 2 94 8 view .LVU1109
 3942 0186 0028     		cmp	r0, #0
 3943 0188 40F04281 		bne	.L349
  94:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[5].shifted;
 3944              		.loc 2 94 33 is_stmt 1 view .LVU1110
  94:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[5].shifted;
 3945              		.loc 2 94 51 is_stmt 0 view .LVU1111
 3946 018c DDE93001 		ldrd	r0, r1, [sp, #192]
 3947 0190 9DF8C050 		ldrb	r5, [sp, #192]	@ zero_extendqisi2
 3948              	.LVL361:
  94:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[5].shifted;
 3949              		.loc 2 94 51 view .LVU1112
 3950 0194 0DF1080A 		add	r10, sp, #8
 3951              	.LBE144:
 3952              	.LBE143:
 521:src/console.c ****       if (remapped.key_34s == K_SETMENU) {
 3953              		.loc 2 521 10 view .LVU1113
 3954 0198 2F2D     		cmp	r5, #47
 3955              	.LBB153:
 3956              	.LBB146:
  94:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[5].shifted;
 3957              		.loc 2 94 51 view .LVU1114
 3958 019a 8AE80300 		stm	r10, {r0, r1}
 3959 019e 8946     		mov	r9, r1
 3960              	.LVL362:
  94:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[5].shifted;
 3961              		.loc 2 94 51 view .LVU1115
 3962              	.LBE146:
 3963              	.LBE153:
 3964              		.loc 2 521 7 is_stmt 1 view .LVU1116
 3965              		.loc 2 521 10 is_stmt 0 view .LVU1117
 3966 01a0 69D1     		bne	.L360
 3967              	.LVL363:
 3968              	.L409:
 522:src/console.c **** 	set_menu ( remapped.shift );
 3969              		.loc 2 522 2 is_stmt 1 view .LVU1118
 3970              	.LBB154:
 3971              	.LBB155:
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 3972              		.loc 1 123 13 is_stmt 0 view .LVU1119
 3973 01a2 614A     		ldr	r2, .L415+76
 3974 01a4 92F90030 		ldrsb	r3, [r2]
 3975              	.LBE155:
 3976              	.LBE154:
 3977              		.loc 2 522 2 view .LVU1120
 3978 01a8 4FFA89F1 		sxtb	r1, r9
 3979              	.LVL364:
 3980              	.LBB158:
 3981              	.LBI154:
 122:src/menu.c    ****   menu_name m = current_menu;
 3982              		.loc 1 122 6 is_stmt 1 view .LVU1121
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 112
=======
ARM GAS  /tmp/ccCyL0em.s 			page 112
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 3983              	.LBB156:
 123:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 3984              		.loc 1 123 3 view .LVU1122
 124:src/menu.c    ****     current_menu = default_menu;
 3985              		.loc 1 124 3 view .LVU1123
 124:src/menu.c    ****     current_menu = default_menu;
 3986              		.loc 1 124 6 is_stmt 0 view .LVU1124
 3987 01ac 9942     		cmp	r1, r3
 3988 01ae 00F02B81 		beq	.L407
 127:src/menu.c    ****     current_menu = last_menu;
 3989              		.loc 1 127 8 is_stmt 1 view .LVU1125
 127:src/menu.c    ****     current_menu = last_menu;
 3990              		.loc 1 127 11 is_stmt 0 view .LVU1126
 3991 01b2 481C     		adds	r0, r1, #1
 128:src/menu.c    ****   }
 3992              		.loc 1 128 5 is_stmt 1 view .LVU1127
 128:src/menu.c    ****   }
 3993              		.loc 1 128 18 is_stmt 0 view .LVU1128
 3994 01b4 04BF     		itt	eq
 3995 01b6 5D49     		ldreq	r1, .L415+80
 3996              	.LVL365:
 128:src/menu.c    ****   }
 3997              		.loc 1 128 18 view .LVU1129
 3998 01b8 0978     		ldrbeq	r1, [r1]	@ zero_extendqisi2
 131:src/menu.c    ****   }
 3999              		.loc 1 131 5 is_stmt 1 view .LVU1130
 131:src/menu.c    ****   }
 4000              		.loc 1 131 18 is_stmt 0 view .LVU1131
 4001 01ba 1170     		strb	r1, [r2]
 4002              	.LVL366:
 4003              	.L362:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 4004              		.loc 1 133 3 is_stmt 1 view .LVU1132
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 4005              		.loc 1 133 6 is_stmt 0 view .LVU1133
 4006 01bc 092B     		cmp	r3, #9
 4007 01be 03D0     		beq	.L364
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 4008              		.loc 1 133 23 view .LVU1134
 4009 01c0 102B     		cmp	r3, #16
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 4010              		.loc 1 133 43 is_stmt 1 view .LVU1135
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 4011              		.loc 1 133 53 is_stmt 0 view .LVU1136
 4012 01c2 1CBF     		itt	ne
 4013 01c4 594A     		ldrne	r2, .L415+80
 4014 01c6 1370     		strbne	r3, [r2]
 4015              	.L364:
 4016              	.LVL367:
 133:src/menu.c    ****   // store menu as last menu unless arrow or alpha
 4017              		.loc 1 133 53 view .LVU1137
 4018              	.LBE156:
 4019              	.LBE158:
 523:src/console.c **** 	display_current_menu ();
 4020              		.loc 2 523 2 is_stmt 1 view .LVU1138
 4021 01c8 FFF7FEFF 		bl	display_current_menu
 4022              	.LVL368:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 113
=======
ARM GAS  /tmp/ccCyL0em.s 			page 113
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 524:src/console.c **** 	reset_shift();
 4023              		.loc 2 524 2 view .LVU1139
 4024 01cc FFF7FEFF 		bl	reset_shift
 4025              	.LVL369:
 525:src/console.c **** 	remapped = no_key;
 4026              		.loc 2 525 2 view .LVU1140
 4027              		.loc 2 525 11 is_stmt 0 view .LVU1141
 4028 01d0 574B     		ldr	r3, .L415+84
 4029 01d2 93E80300 		ldm	r3, {r0, r1}
 4030 01d6 0DF1080A 		add	r10, sp, #8
 4031 01da 8AE80300 		stm	r10, {r0, r1}
 4032 01de 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 4033              	.LVL370:
 4034              		.loc 2 525 11 view .LVU1142
 4035 01e0 8946     		mov	r9, r1
 4036              	.LVL371:
 4037              		.loc 2 525 11 view .LVU1143
 4038 01e2 48E0     		b	.L360
 4039              	.LVL372:
 4040              	.L315:
 452:src/console.c ****     {
 4041              		.loc 2 452 10 is_stmt 1 view .LVU1144
 452:src/console.c ****     {
 4042              		.loc 2 452 15 is_stmt 0 view .LVU1145
 4043 01e4 2568     		ldr	r5, [r4]
 452:src/console.c ****     {
 4044              		.loc 2 452 13 view .LVU1146
 4045 01e6 15F40075 		ands	r5, r5, #512
 4046 01ea 7FF44CAF 		bne	.L316
 452:src/console.c ****     {
 4047              		.loc 2 452 35 discriminator 1 view .LVU1147
 4048 01ee B847     		blx	r7
 4049              	.LVL373:
 452:src/console.c ****     {
 4050              		.loc 2 452 32 discriminator 1 view .LVU1148
 4051 01f0 0028     		cmp	r0, #0
 4052 01f2 3FF448AF 		beq	.L316
 454:src/console.c ****       sys_timer_start(0, 100);  // Timer 0: wake up for heartbeat 
 4053              		.loc 2 454 7 is_stmt 1 view .LVU1149
 4054 01f6 2368     		ldr	r3, [r4]
 4055 01f8 23F00203 		bic	r3, r3, #2
 455:src/console.c ****       sys_sleep();
 4056              		.loc 2 455 7 is_stmt 0 view .LVU1150
 4057 01fc 2846     		mov	r0, r5
 4058 01fe 6421     		movs	r1, #100
 454:src/console.c ****       sys_timer_start(0, 100);  // Timer 0: wake up for heartbeat 
 4059              		.loc 2 454 7 view .LVU1151
 4060 0200 2360     		str	r3, [r4]
 455:src/console.c ****       sys_sleep();
 4061              		.loc 2 455 7 is_stmt 1 view .LVU1152
 4062 0202 C047     		blx	r8
 4063              	.LVL374:
 456:src/console.c ****       if (sys_timer_timeout(0)) { // If timer has completed...
 4064              		.loc 2 456 7 view .LVU1153
 4065 0204 3E4B     		ldr	r3, .L415+36
 4066 0206 9847     		blx	r3
 4067              	.LVL375:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 114
=======
ARM GAS  /tmp/ccCyL0em.s 			page 114
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 457:src/console.c **** 	key_push (K_HEARTBEAT);
 4068              		.loc 2 457 7 view .LVU1154
 457:src/console.c **** 	key_push (K_HEARTBEAT);
 4069              		.loc 2 457 11 is_stmt 0 view .LVU1155
 4070 0208 4A4B     		ldr	r3, .L415+88
 4071 020a 2846     		mov	r0, r5
 4072 020c 9847     		blx	r3
 4073              	.LVL376:
 457:src/console.c **** 	key_push (K_HEARTBEAT);
 4074              		.loc 2 457 10 view .LVU1156
 4075 020e 48B1     		cbz	r0, .L320
 458:src/console.c **** 	if (Pause > 0) Pause--;
 4076              		.loc 2 458 2 is_stmt 1 view .LVU1157
 4077 0210 494B     		ldr	r3, .L415+92
 4078 0212 6220     		movs	r0, #98
 4079 0214 9847     		blx	r3
 4080              	.LVL377:
 459:src/console.c ****       }
 4081              		.loc 2 459 2 view .LVU1158
 459:src/console.c ****       }
 4082              		.loc 2 459 12 is_stmt 0 view .LVU1159
 4083 0216 424B     		ldr	r3, .L415+68
 4084 0218 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 459:src/console.c ****       }
 4085              		.loc 2 459 5 view .LVU1160
 4086 021a 1AB1     		cbz	r2, .L320
 459:src/console.c ****       }
 4087              		.loc 2 459 17 is_stmt 1 discriminator 1 view .LVU1161
 459:src/console.c ****       }
 4088              		.loc 2 459 22 is_stmt 0 discriminator 1 view .LVU1162
 4089 021c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4090 021e 013A     		subs	r2, r2, #1
 4091 0220 D2B2     		uxtb	r2, r2
 4092 0222 1A70     		strb	r2, [r3]
 4093              	.L320:
 461:src/console.c ****     }
 4094              		.loc 2 461 7 is_stmt 1 view .LVU1163
 4095 0224 454B     		ldr	r3, .L415+96
 4096 0226 0020     		movs	r0, #0
 4097 0228 9847     		blx	r3
 4098              	.LVL378:
 465:src/console.c ****       if (!ST(STAT_SUSPENDED)) {
 4099              		.loc 2 465 5 view .LVU1164
 465:src/console.c ****       if (!ST(STAT_SUSPENDED)) {
 4100              		.loc 2 465 9 is_stmt 0 view .LVU1165
 4101 022a 2368     		ldr	r3, [r4]
 465:src/console.c ****       if (!ST(STAT_SUSPENDED)) {
 4102              		.loc 2 465 8 view .LVU1166
 4103 022c 9805     		lsls	r0, r3, #22
 4104 022e 7FF52EAF 		bpl	.L408
 4105              	.L322:
 466:src/console.c ****         // Going to off mode
 4106              		.loc 2 466 7 is_stmt 1 view .LVU1167
 466:src/console.c ****         // Going to off mode
 4107              		.loc 2 466 12 is_stmt 0 view .LVU1168
 4108 0232 2568     		ldr	r5, [r4]
 466:src/console.c ****         // Going to off mode
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 115
=======
ARM GAS  /tmp/ccCyL0em.s 			page 115
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4109              		.loc 2 466 10 view .LVU1169
 4110 0234 15F00405 		ands	r5, r5, #4
 4111 0238 7FF417AF 		bne	.L314
 468:src/console.c ****         draw_power_off_image(1);
 4112              		.loc 2 468 9 is_stmt 1 view .LVU1170
 4113 023c 404B     		ldr	r3, .L415+100
 4114 023e 2846     		mov	r0, r5
 4115 0240 9847     		blx	r3
 4116              	.LVL379:
 469:src/console.c **** 
 4117              		.loc 2 469 9 view .LVU1171
 4118 0242 404B     		ldr	r3, .L415+104
 4119 0244 0120     		movs	r0, #1
 4120 0246 9847     		blx	r3
 4121              	.LVL380:
 471:src/console.c ****         SET_ST(STAT_SUSPENDED);
 4122              		.loc 2 471 9 view .LVU1172
 4123 0248 3F4B     		ldr	r3, .L415+108
 4124 024a 2846     		mov	r0, r5
 4125 024c 9847     		blx	r3
 4126              	.LVL381:
 472:src/console.c ****         SET_ST(STAT_OFF);
 4127              		.loc 2 472 9 view .LVU1173
 4128 024e 2368     		ldr	r3, [r4]
 4129 0250 43F00403 		orr	r3, r3, #4
 4130 0254 2360     		str	r3, [r4]
 473:src/console.c ****       }
 4131              		.loc 2 473 9 view .LVU1174
 4132 0256 2368     		ldr	r3, [r4]
 4133 0258 43F01003 		orr	r3, r3, #16
 4134 025c 2360     		str	r3, [r4]
 4135 025e 04E7     		b	.L314
 4136              	.LVL382:
 4137              	.L331:
 519:src/console.c ****       remapped = remap(c);
 4138              		.loc 2 519 5 view .LVU1175
 520:src/console.c ****       if (remapped.key_34s == K_SETMENU) {
 4139              		.loc 2 520 7 view .LVU1176
 4140              	.LBB159:
  56:src/console.c **** 
 4141              		.loc 2 56 22 view .LVU1177
 4142              	.LBB147:
  58:src/console.c **** 
 4143              		.loc 2 58 3 view .LVU1178
   1:src/keytran.c ****     {K_RELEASE, -1},
 4144              		.loc 3 1 1 view .LVU1179
  59:src/keytran.c ****     {K_RELEASE, -1},
 4145              		.loc 3 59 3 view .LVU1180
 118:src/keytran.c ****     {K_RELEASE, -1},
 4146              		.loc 3 118 3 view .LVU1181
 177:src/keytran.c ****     {K_RELEASE, -1},
 4147              		.loc 3 177 1 view .LVU1182
 4148              		.loc 3 235 1 view .LVU1183
  62:src/console.c **** 
 4149              		.loc 2 62 3 view .LVU1184
  62:src/console.c **** 
 4150              		.loc 2 62 23 view .LVU1185
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 116
=======
ARM GAS  /tmp/ccCyL0em.s 			page 116
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  62:src/console.c **** 
 4151              		.loc 2 62 30 is_stmt 0 view .LVU1186
 4152 0260 3A4B     		ldr	r3, .L415+112
 4153              	.LVL383:
 4154              	.L395:
  62:src/console.c **** 
 4155              		.loc 2 62 30 view .LVU1187
 4156 0262 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 4157              	.LVL384:
  62:src/console.c **** 
 4158              		.loc 2 62 30 view .LVU1188
 4159 0264 93E80300 		ldm	r3, {r0, r1}
 4160 0268 0DF1080A 		add	r10, sp, #8
 4161 026c 8AE80300 		stm	r10, {r0, r1}
 4162 0270 8946     		mov	r9, r1
 4163              	.LVL385:
 4164              	.L333:
  62:src/console.c **** 
 4165              		.loc 2 62 30 view .LVU1189
 4166              	.LBE147:
 4167              	.LBE159:
 521:src/console.c **** 	set_menu ( remapped.shift );
 4168              		.loc 2 521 7 is_stmt 1 view .LVU1190
 521:src/console.c **** 	set_menu ( remapped.shift );
 4169              		.loc 2 521 10 is_stmt 0 view .LVU1191
 4170 0272 2F2D     		cmp	r5, #47
 4171 0274 95D0     		beq	.L409
 4172              	.L360:
 526:src/console.c ****       }
 527:src/console.c ****       if (remapped.key_34s == K_SYS) {
 4173              		.loc 2 527 7 is_stmt 1 view .LVU1192
 4174              		.loc 2 527 10 is_stmt 0 view .LVU1193
 4175 0276 302D     		cmp	r5, #48
 4176 0278 19D1     		bne	.L365
 528:src/console.c **** 	SET_ST(STAT_MENU);
 4177              		.loc 2 528 2 is_stmt 1 view .LVU1194
 4178 027a 2368     		ldr	r3, [r4]
 529:src/console.c **** 	handle_menu(&MID_MENU, MENU_RESET, 0); // App menu
 4179              		.loc 2 529 2 is_stmt 0 view .LVU1195
 4180 027c 344D     		ldr	r5, .L415+116
 4181              	.LVL386:
 4182              		.loc 2 529 2 view .LVU1196
 4183 027e 3548     		ldr	r0, .L415+120
 4184 0280 0022     		movs	r2, #0
 528:src/console.c **** 	SET_ST(STAT_MENU);
 4185              		.loc 2 528 2 view .LVU1197
 4186 0282 43F04003 		orr	r3, r3, #64
 4187              		.loc 2 529 2 view .LVU1198
 4188 0286 1146     		mov	r1, r2
 528:src/console.c **** 	SET_ST(STAT_MENU);
 4189              		.loc 2 528 2 view .LVU1199
 4190 0288 2360     		str	r3, [r4]
 4191              		.loc 2 529 2 is_stmt 1 view .LVU1200
 4192 028a A847     		blx	r5
 4193              	.LVL387:
 530:src/console.c **** 	CLR_ST(STAT_MENU);
 4194              		.loc 2 530 2 view .LVU1201
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 117
=======
ARM GAS  /tmp/ccCyL0em.s 			page 117
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4195 028c 2368     		ldr	r3, [r4]
 4196 028e 23F04003 		bic	r3, r3, #64
 4197 0292 2360     		str	r3, [r4]
 531:src/console.c **** 	reset_shift();
 4198              		.loc 2 531 2 view .LVU1202
 4199 0294 FFF7FEFF 		bl	reset_shift
 4200              	.LVL388:
 532:src/console.c **** 	remapped =  no_key;
 4201              		.loc 2 532 2 view .LVU1203
 4202              		.loc 2 532 11 is_stmt 0 view .LVU1204
 4203 0298 254B     		ldr	r3, .L415+84
 4204 029a 93E80300 		ldm	r3, {r0, r1}
 4205 029e 0DF1080A 		add	r10, sp, #8
 4206 02a2 8AE80300 		stm	r10, {r0, r1}
 4207 02a6 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 4208              	.LVL389:
 4209              		.loc 2 532 11 view .LVU1205
 4210 02a8 8946     		mov	r9, r1
 4211              	.LVL390:
 533:src/console.c **** 	display_current_menu();
 4212              		.loc 2 533 2 is_stmt 1 view .LVU1206
 4213 02aa FFF7FEFF 		bl	display_current_menu
 4214              	.LVL391:
 4215              	.L365:
 534:src/console.c ****       }
 535:src/console.c ****       if (remapped.key_34s == K_MULTI) {
 4216              		.loc 2 535 7 view .LVU1207
 4217              		.loc 2 535 10 is_stmt 0 view .LVU1208
 4218 02ae 312D     		cmp	r5, #49
 4219 02b0 7BD0     		beq	.L368
 536:src/console.c **** 	remapped = do_multi (remapped);
 537:src/console.c **** 	display_current_menu();
 538:src/console.c ****       }
 539:src/console.c ****       if (remapped.key_34s == K_EXIT) break;
 4220              		.loc 2 539 7 is_stmt 1 view .LVU1209
 4221              		.loc 2 539 10 is_stmt 0 view .LVU1210
 4222 02b2 322D     		cmp	r5, #50
 4223 02b4 00F09380 		beq	.L367
 4224              	.L411:
 4225              		.loc 2 539 10 view .LVU1211
 4226 02b8 0DF1080A 		add	r10, sp, #8
 4227              	.LVL392:
 4228              	.L355:
 540:src/console.c ****       process_keycode_with_shift(remapped);
 4229              		.loc 2 540 7 is_stmt 1 view .LVU1212
 4230              		.loc 2 540 7 is_stmt 0 view .LVU1213
 4231 02bc 8DF80850 		strb	r5, [sp, #8]
 4232 02c0 CDF80C90 		str	r9, [sp, #12]
 4233 02c4 9AE80300 		ldm	r10, {r0, r1}
 4234 02c8 FFF7FEFF 		bl	process_keycode_with_shift
 4235              	.LVL393:
 541:src/console.c ****       if (remapped.key_34s != K_HEARTBEAT || JustStopped) start_key_timer(); 
 4236              		.loc 2 541 7 is_stmt 1 view .LVU1214
 4237              		.loc 2 541 10 is_stmt 0 view .LVU1215
 4238 02cc 622D     		cmp	r5, #98
 4239 02ce 64D0     		beq	.L410
 4240              	.LVL394:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 118
=======
ARM GAS  /tmp/ccCyL0em.s 			page 118
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4241              	.L356:
 4242              		.loc 2 541 59 is_stmt 1 view .LVU1216
 4243              	.LBB160:
 4244              	.LBI160:
 252:src/console.c ****     start_ticks = get_rtc_ticks();
 4245              		.loc 2 252 6 view .LVU1217
 4246              	.LBB161:
 253:src/console.c **** }
 4247              		.loc 2 253 5 view .LVU1218
 253:src/console.c **** }
 4248              		.loc 2 253 19 is_stmt 0 view .LVU1219
 4249 02d0 214B     		ldr	r3, .L415+124
 4250 02d2 9847     		blx	r3
 4251              	.LVL395:
 253:src/console.c **** }
 4252              		.loc 2 253 17 view .LVU1220
 4253 02d4 214B     		ldr	r3, .L415+128
 4254 02d6 1860     		str	r0, [r3]
 254:src/console.c **** 
 4255              		.loc 2 254 1 view .LVU1221
 4256 02d8 C7E6     		b	.L314
 4257              	.L416:
 4258 02da 00BF     		.align	2
 4259              	.L415:
 4260 02dc 00000000 		.word	StateWhileOn
 4261 02e0 00000000 		.word	DispMsg
 4262 02e4 00200010 		.word	268443648
 4263 02e8 00000000 		.word	KeyCallback
 4264 02ec 7D030008 		.word	134218621
 4265 02f0 00000000 		.word	run_menu_item
 4266 02f4 00000000 		.word	menu_line_str
 4267 02f8 31020008 		.word	134218289
 4268 02fc 00000000 		.word	JustDisplayed
 4269 0300 19040008 		.word	134218777
 4270 0304 19020008 		.word	134218265
 4271 0308 91030008 		.word	134218641
 4272 030c E5020008 		.word	134218469
 4273 0310 59020008 		.word	134218329
 4274 0314 35020008 		.word	134218293
 4275 0318 89030008 		.word	134218633
 4276 031c B9030008 		.word	134218681
 4277 0320 00000000 		.word	Pause
 4278 0324 00000000 		.word	Running
 4279 0328 00000000 		.word	.LANCHOR1
 4280 032c 00000000 		.word	.LANCHOR3
 4281 0330 00000000 		.word	.LANCHOR10
 4282 0334 01040008 		.word	134218753
 4283 0338 81030008 		.word	134218625
 4284 033c F5030008 		.word	134218741
 4285 0340 55020008 		.word	134218325
 4286 0344 2D040008 		.word	134218797
 4287 0348 1D020008 		.word	134218269
 4288 034c 00000000 		.word	.LANCHOR19
 4289 0350 59030008 		.word	134218585
 4290 0354 00000000 		.word	.LANCHOR18
 4291 0358 B9040008 		.word	134218937
 4292 035c 00000000 		.word	.LANCHOR8
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 119
=======
ARM GAS  /tmp/ccCyL0em.s 			page 119
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4293 0360 F9030008 		.word	134218745
 4294              	.LVL396:
 4295              	.L329:
 254:src/console.c **** 
 4296              		.loc 2 254 1 view .LVU1222
 4297              	.LBE161:
 4298              	.LBE160:
 510:src/console.c ****       dot( LIT_EQ, !is_dot( LIT_EQ ) );
 4299              		.loc 2 510 10 is_stmt 1 view .LVU1223
 510:src/console.c ****       dot( LIT_EQ, !is_dot( LIT_EQ ) );
 4300              		.loc 2 510 15 is_stmt 0 view .LVU1224
 4301 0364 8D4B     		ldr	r3, .L417
 4302 0366 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 510:src/console.c ****       dot( LIT_EQ, !is_dot( LIT_EQ ) );
 4303              		.loc 2 510 13 view .LVU1225
 4304 0368 DB07     		lsls	r3, r3, #31
 4305 036a 7FF5B7AE 		bpl	.L330
 510:src/console.c ****       dot( LIT_EQ, !is_dot( LIT_EQ ) );
 4306              		.loc 2 510 37 discriminator 1 view .LVU1226
 4307 036e FFF7FEFF 		bl	DM42_Ticker
 4308              	.LVL397:
 510:src/console.c ****       dot( LIT_EQ, !is_dot( LIT_EQ ) );
 4309              		.loc 2 510 37 discriminator 1 view .LVU1227
 4310 0372 8B4A     		ldr	r2, .L417+4
 4311 0374 8B4B     		ldr	r3, .L417+8
 4312 0376 02FB0030 		mla	r0, r2, r0, r3
 510:src/console.c ****       dot( LIT_EQ, !is_dot( LIT_EQ ) );
 4313              		.loc 2 510 32 discriminator 1 view .LVU1228
 4314 037a B0F1333F 		cmp	r0, #858993459
 4315 037e BFF4ADAE 		bcs	.L330
 511:src/console.c ****       finish_LEQ();
 4316              		.loc 2 511 7 is_stmt 1 view .LVU1229
 511:src/console.c ****       finish_LEQ();
 4317              		.loc 2 511 21 is_stmt 0 view .LVU1230
 4318 0382 8420     		movs	r0, #132
 4319 0384 FFF7FEFF 		bl	is_dot
 4320              	.LVL398:
 511:src/console.c ****       finish_LEQ();
 4321              		.loc 2 511 7 view .LVU1231
 4322 0388 B0FA80F1 		clz	r1, r0
 4323 038c 4909     		lsrs	r1, r1, #5
 4324 038e 8420     		movs	r0, #132
 4325 0390 FFF7FEFF 		bl	dot
 4326              	.LVL399:
 512:src/console.c ****     }
 4327              		.loc 2 512 7 is_stmt 1 view .LVU1232
 4328 0394 FFF7FEFF 		bl	finish_LEQ
 4329              	.LVL400:
 4330 0398 A0E6     		b	.L330
 4331              	.LVL401:
 4332              	.L410:
 4333              		.loc 2 541 43 is_stmt 0 discriminator 2 view .LVU1233
 4334 039a 834B     		ldr	r3, .L417+12
 4335 039c 1B68     		ldr	r3, [r3]
 4336 039e 002B     		cmp	r3, #0
 4337 03a0 3FF463AE 		beq	.L314
 4338 03a4 94E7     		b	.L356
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 120
=======
ARM GAS  /tmp/ccCyL0em.s 			page 120
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4339              	.LVL402:
 4340              	.L334:
 521:src/console.c **** 	set_menu ( remapped.shift );
 4341              		.loc 2 521 7 is_stmt 1 view .LVU1234
 527:src/console.c **** 	SET_ST(STAT_MENU);
 4342              		.loc 2 527 7 view .LVU1235
 535:src/console.c **** 	remapped = do_multi (remapped);
 4343              		.loc 2 535 7 view .LVU1236
 4344              	.LBB162:
 4345              	.LBB148:
 4346              	.LBB145:
  68:src/console.c ****   }
 4347              		.loc 2 68 12 is_stmt 0 view .LVU1237
 4348 03a6 4FF00C09 		mov	r9, #12
 4349              	.LVL403:
 4350              	.L368:
  68:src/console.c ****   }
 4351              		.loc 2 68 12 view .LVU1238
 4352              	.LBE145:
 4353              	.LBE148:
 4354              	.LBE162:
 536:src/console.c **** 	display_current_menu();
 4355              		.loc 2 536 2 is_stmt 1 view .LVU1239
 536:src/console.c **** 	display_current_menu();
 4356              		.loc 2 536 13 is_stmt 0 view .LVU1240
 4357 03aa 3123     		movs	r3, #49
 4358 03ac CDF80C90 		str	r9, [sp, #12]
 4359 03b0 8DF80830 		strb	r3, [sp, #8]
 4360 03b4 6D46     		mov	r5, sp
 4361 03b6 0DF1080A 		add	r10, sp, #8
 4362 03ba 9AE80600 		ldm	r10, {r1, r2}
 4363 03be 2846     		mov	r0, r5
 4364 03c0 FFF7FEFF 		bl	do_multi
 4365              	.LVL404:
 4366 03c4 95E80300 		ldm	r5, {r0, r1}
 4367 03c8 8AE80300 		stm	r10, {r0, r1}
 4368 03cc 9DF80850 		ldrb	r5, [sp, #8]	@ zero_extendqisi2
 4369              	.LVL405:
 536:src/console.c **** 	display_current_menu();
 4370              		.loc 2 536 13 view .LVU1241
 4371 03d0 DDF80C90 		ldr	r9, [sp, #12]
 4372              	.LVL406:
 537:src/console.c ****       }
 4373              		.loc 2 537 2 is_stmt 1 view .LVU1242
 4374 03d4 FFF7FEFF 		bl	display_current_menu
 4375              	.LVL407:
 539:src/console.c ****       process_keycode_with_shift(remapped);
 4376              		.loc 2 539 7 view .LVU1243
 539:src/console.c ****       process_keycode_with_shift(remapped);
 4377              		.loc 2 539 10 is_stmt 0 view .LVU1244
 4378 03d8 322D     		cmp	r5, #50
 4379 03da 7FF46DAF 		bne	.L411
 4380              	.L367:
 542:src/console.c ****     }
 543:src/console.c ****   }
 544:src/console.c ****   save_ram_file(0);
 4381              		.loc 2 544 3 is_stmt 1 view .LVU1245
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 121
=======
ARM GAS  /tmp/ccCyL0em.s 			page 121
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4382 03de 0020     		movs	r0, #0
 545:src/console.c ****   //  free_storage();
 546:src/console.c ****   return;
 547:src/console.c **** }
 4383              		.loc 2 547 1 is_stmt 0 view .LVU1246
 4384 03e0 38B0     		add	sp, sp, #224
 4385              		.cfi_remember_state
 4386              		.cfi_def_cfa_offset 32
 4387              		@ sp needed
 4388 03e2 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 4389              		.cfi_restore 14
 4390              		.cfi_restore 10
 4391              		.cfi_restore 9
 4392              		.cfi_restore 8
 4393              		.cfi_restore 7
 4394              		.cfi_restore 6
 4395              		.cfi_restore 5
 4396              		.cfi_restore 4
 4397              		.cfi_def_cfa_offset 0
 4398              	.LVL408:
 544:src/console.c ****   //  free_storage();
 4399              		.loc 2 544 3 view .LVU1247
 4400 03e6 FFF7FEBF 		b	save_ram_file
 4401              	.LVL409:
 4402              	.L397:
 4403              		.cfi_restore_state
 4404              	.LBB163:
 4405              	.LBB149:
  72:src/console.c ****   }
 4406              		.loc 2 72 5 is_stmt 1 view .LVU1248
  72:src/console.c ****   }
 4407              		.loc 2 72 27 is_stmt 0 view .LVU1249
 4408 03ea 704B     		ldr	r3, .L417+16
 4409              	.L394:
 124:src/console.c ****     break;
 4410              		.loc 2 124 26 view .LVU1250
 4411 03ec 03EBC502 		add	r2, r3, r5, lsl #3
 4412 03f0 92E80300 		ldm	r2, {r0, r1}
 4413 03f4 0DF1080A 		add	r10, sp, #8
 4414 03f8 13F83550 		ldrb	r5, [r3, r5, lsl #3]	@ zero_extendqisi2
 4415              	.LVL410:
 124:src/console.c ****     break;
 4416              		.loc 2 124 26 view .LVU1251
 4417 03fc 8946     		mov	r9, r1
 4418              	.LVL411:
 124:src/console.c ****     break;
 4419              		.loc 2 124 26 view .LVU1252
 4420 03fe 8AE80300 		stm	r10, {r0, r1}
 4421 0402 36E7     		b	.L333
 4422              	.LVL412:
 4423              	.L396:
  64:src/console.c **** 
 4424              		.loc 2 64 16 is_stmt 1 view .LVU1253
  64:src/console.c **** 
 4425              		.loc 2 64 23 is_stmt 0 view .LVU1254
 4426 0404 6A4B     		ldr	r3, .L417+20
 4427 0406 2CE7     		b	.L395
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 122
=======
ARM GAS  /tmp/ccCyL0em.s 			page 122
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4428              	.LVL413:
 4429              	.L407:
  64:src/console.c **** 
 4430              		.loc 2 64 23 view .LVU1255
 4431              	.LBE149:
 4432              	.LBE163:
 4433              	.LBB164:
 4434              	.LBB157:
 125:src/menu.c    ****   }
 4435              		.loc 1 125 5 is_stmt 1 view .LVU1256
 125:src/menu.c    ****   }
 4436              		.loc 1 125 18 is_stmt 0 view .LVU1257
 4437 0408 6A49     		ldr	r1, .L417+24
 4438              	.LVL414:
 125:src/menu.c    ****   }
 4439              		.loc 1 125 18 view .LVU1258
 4440 040a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4441 040c 1170     		strb	r1, [r2]
 4442 040e D5E6     		b	.L362
 4443              	.LVL415:
 4444              	.L349:
 125:src/menu.c    ****   }
 4445              		.loc 1 125 18 view .LVU1259
 4446              	.LBE157:
 4447              	.LBE164:
 4448              	.LBB165:
 4449              	.LBB150:
  95:src/console.c ****   }
 4450              		.loc 2 95 5 is_stmt 1 view .LVU1260
  95:src/console.c ****   }
 4451              		.loc 2 95 9 is_stmt 0 view .LVU1261
 4452 0410 FFF7FEFF 		bl	cur_shift
 4453              	.LVL416:
  95:src/console.c ****   }
 4454              		.loc 2 95 8 view .LVU1262
 4455 0414 0128     		cmp	r0, #1
 4456 0416 56D0     		beq	.L412
 4457              	.L336:
  98:src/console.c ****     if (c == KEY_SHIFT) { //deal with shift keys
 4458              		.loc 2 98 3 is_stmt 1 view .LVU1263
  98:src/console.c ****     if (c == KEY_SHIFT) { //deal with shift keys
 4459              		.loc 2 98 8 is_stmt 0 view .LVU1264
 4460 0418 FFF7FEFF 		bl	get_alpha_state
 4461              	.LVL417:
  98:src/console.c ****     if (c == KEY_SHIFT) { //deal with shift keys
 4462              		.loc 2 98 6 view .LVU1265
 4463 041c D8B3     		cbz	r0, .L350
  99:src/console.c ****       switch (cur_shift()) { 
 4464              		.loc 2 99 5 is_stmt 1 view .LVU1266
  99:src/console.c ****       switch (cur_shift()) { 
 4465              		.loc 2 99 8 is_stmt 0 view .LVU1267
 4466 041e 1C2D     		cmp	r5, #28
 4467 0420 00F08580 		beq	.L413
 116:src/console.c ****   }
 4468              		.loc 2 116 5 is_stmt 1 view .LVU1268
 116:src/console.c ****   }
 4469              		.loc 2 116 26 is_stmt 0 view .LVU1269
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 123
=======
ARM GAS  /tmp/ccCyL0em.s 			page 123
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4470 0424 644B     		ldr	r3, .L417+28
 4471 0426 E1E7     		b	.L394
 4472              	.L343:
  79:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[0].shifted;
 4473              		.loc 2 79 5 is_stmt 1 view .LVU1270
  79:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[0].shifted;
 4474              		.loc 2 79 9 is_stmt 0 view .LVU1271
 4475 0428 FFF7FEFF 		bl	cur_shift
 4476              	.LVL418:
  79:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[0].shifted;
 4477              		.loc 2 79 8 view .LVU1272
 4478 042c 0028     		cmp	r0, #0
 4479 042e 7FF47BAE 		bne	.L344
  79:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[0].shifted;
 4480              		.loc 2 79 33 is_stmt 1 view .LVU1273
  79:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[0].shifted;
 4481              		.loc 2 79 51 is_stmt 0 view .LVU1274
 4482 0432 DDE90801 		ldrd	r0, r1, [sp, #32]
 4483 0436 0DF1080A 		add	r10, sp, #8
 4484 043a 8AE80300 		stm	r10, {r0, r1}
 4485 043e 9DF82050 		ldrb	r5, [sp, #32]	@ zero_extendqisi2
 4486              	.LVL419:
  79:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[0].shifted;
 4487              		.loc 2 79 51 view .LVU1275
 4488 0442 8946     		mov	r9, r1
 4489              	.LVL420:
  79:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[0].shifted;
 4490              		.loc 2 79 51 view .LVU1276
 4491 0444 15E7     		b	.L333
 4492              	.LVL421:
 4493              	.L405:
  91:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[4].shifted;
 4494              		.loc 2 91 33 is_stmt 1 view .LVU1277
  91:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[4].shifted;
 4495              		.loc 2 91 51 is_stmt 0 view .LVU1278
 4496 0446 DDE92801 		ldrd	r0, r1, [sp, #160]
 4497 044a 0DF1080A 		add	r10, sp, #8
 4498 044e 8AE80300 		stm	r10, {r0, r1}
 4499 0452 9DF8A050 		ldrb	r5, [sp, #160]	@ zero_extendqisi2
 4500              	.LVL422:
  91:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[4].shifted;
 4501              		.loc 2 91 51 view .LVU1279
 4502 0456 8946     		mov	r9, r1
 4503              	.LVL423:
  91:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[4].shifted;
 4504              		.loc 2 91 51 view .LVU1280
 4505 0458 0BE7     		b	.L333
 4506              	.LVL424:
 4507              	.L403:
  88:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[3].shifted;
 4508              		.loc 2 88 33 is_stmt 1 view .LVU1281
  88:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[3].shifted;
 4509              		.loc 2 88 51 is_stmt 0 view .LVU1282
 4510 045a DDE92001 		ldrd	r0, r1, [sp, #128]
 4511 045e 0DF1080A 		add	r10, sp, #8
 4512 0462 8AE80300 		stm	r10, {r0, r1}
 4513 0466 9DF88050 		ldrb	r5, [sp, #128]	@ zero_extendqisi2
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 124
=======
ARM GAS  /tmp/ccCyL0em.s 			page 124
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4514              	.LVL425:
  88:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[3].shifted;
 4515              		.loc 2 88 51 view .LVU1283
 4516 046a 8946     		mov	r9, r1
 4517              	.LVL426:
  88:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[3].shifted;
 4518              		.loc 2 88 51 view .LVU1284
 4519 046c 01E7     		b	.L333
 4520              	.LVL427:
 4521              	.L401:
  85:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[2].shifted;
 4522              		.loc 2 85 33 is_stmt 1 view .LVU1285
  85:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[2].shifted;
 4523              		.loc 2 85 51 is_stmt 0 view .LVU1286
 4524 046e DDE91801 		ldrd	r0, r1, [sp, #96]
 4525 0472 0DF1080A 		add	r10, sp, #8
 4526 0476 8AE80300 		stm	r10, {r0, r1}
 4527 047a 9DF86050 		ldrb	r5, [sp, #96]	@ zero_extendqisi2
 4528              	.LVL428:
  85:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[2].shifted;
 4529              		.loc 2 85 51 view .LVU1287
 4530 047e 8946     		mov	r9, r1
 4531              	.LVL429:
  85:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[2].shifted;
 4532              		.loc 2 85 51 view .LVU1288
 4533 0480 F7E6     		b	.L333
 4534              	.LVL430:
 4535              	.L399:
  82:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[1].shifted;
 4536              		.loc 2 82 33 is_stmt 1 view .LVU1289
  82:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[1].shifted;
 4537              		.loc 2 82 51 is_stmt 0 view .LVU1290
 4538 0482 DDE91001 		ldrd	r0, r1, [sp, #64]
 4539 0486 0DF1080A 		add	r10, sp, #8
 4540 048a 8AE80300 		stm	r10, {r0, r1}
 4541 048e 9DF84050 		ldrb	r5, [sp, #64]	@ zero_extendqisi2
 4542              	.LVL431:
  82:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[1].shifted;
 4543              		.loc 2 82 51 view .LVU1291
 4544 0492 8946     		mov	r9, r1
 4545              	.LVL432:
  82:src/console.c ****     if (cur_shift() == SHIFT_F) return Ref.keys[1].shifted;
 4546              		.loc 2 82 51 view .LVU1292
 4547 0494 EDE6     		b	.L333
 4548              	.LVL433:
 4549              	.L350:
 119:src/console.c ****   case SHIFT_N:    
 4550              		.loc 2 119 3 is_stmt 1 view .LVU1293
 119:src/console.c ****   case SHIFT_N:    
 4551              		.loc 2 119 11 is_stmt 0 view .LVU1294
 4552 0496 FFF7FEFF 		bl	cur_shift
 4553              	.LVL434:
 119:src/console.c ****   case SHIFT_N:    
 4554              		.loc 2 119 3 view .LVU1295
 4555 049a 0128     		cmp	r0, #1
 4556 049c 45D0     		beq	.L357
 4557 049e 0228     		cmp	r0, #2
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 125
=======
ARM GAS  /tmp/ccCyL0em.s 			page 125
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4558 04a0 02D0     		beq	.L358
 4559 04a2 70B1     		cbz	r0, .L359
  58:src/console.c **** 
 4560              		.loc 2 58 41 view .LVU1296
 4561 04a4 EDB2     		uxtb	r5, r5
 4562              	.LVL435:
  58:src/console.c **** 
 4563              		.loc 2 58 41 view .LVU1297
 4564 04a6 E4E6     		b	.L333
 4565              	.LVL436:
 4566              	.L358:
 125:src/console.c ****   case SHIFT_G:
 4567              		.loc 2 125 5 is_stmt 1 view .LVU1298
 127:src/console.c ****     break;
 4568              		.loc 2 127 5 view .LVU1299
 127:src/console.c ****     break;
 4569              		.loc 2 127 26 is_stmt 0 view .LVU1300
 4570 04a8 444B     		ldr	r3, .L417+32
 4571 04aa 03EBC502 		add	r2, r3, r5, lsl #3
 4572 04ae 92E80300 		ldm	r2, {r0, r1}
 4573 04b2 0DF1080A 		add	r10, sp, #8
 4574 04b6 8AE80300 		stm	r10, {r0, r1}
 4575 04ba 13F83550 		ldrb	r5, [r3, r5, lsl #3]	@ zero_extendqisi2
 4576              	.LVL437:
 127:src/console.c ****     break;
 4577              		.loc 2 127 26 view .LVU1301
 4578 04be 8946     		mov	r9, r1
 4579              	.LVL438:
 127:src/console.c ****     break;
 4580              		.loc 2 127 26 view .LVU1302
 4581 04c0 D7E6     		b	.L333
 4582              	.LVL439:
 4583              	.L359:
 121:src/console.c ****     break;
 4584              		.loc 2 121 5 is_stmt 1 view .LVU1303
 121:src/console.c ****     break;
 4585              		.loc 2 121 24 is_stmt 0 view .LVU1304
 4586 04c2 3F4B     		ldr	r3, .L417+36
 4587 04c4 92E7     		b	.L394
 4588              	.L412:
  95:src/console.c ****   }
 4589              		.loc 2 95 33 is_stmt 1 view .LVU1305
  95:src/console.c ****   }
 4590              		.loc 2 95 51 is_stmt 0 view .LVU1306
 4591 04c6 DDE93201 		ldrd	r0, r1, [sp, #200]
 4592 04ca 0DF1080A 		add	r10, sp, #8
 4593 04ce 8AE80300 		stm	r10, {r0, r1}
 4594 04d2 9DF8C850 		ldrb	r5, [sp, #200]	@ zero_extendqisi2
 4595              	.LVL440:
  95:src/console.c ****   }
 4596              		.loc 2 95 51 view .LVU1307
 4597 04d6 8946     		mov	r9, r1
 4598              	.LVL441:
  95:src/console.c ****   }
 4599              		.loc 2 95 51 view .LVU1308
 4600 04d8 CBE6     		b	.L333
 4601              	.LVL442:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 126
=======
ARM GAS  /tmp/ccCyL0em.s 			page 126
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4602              	.L404:
  89:src/console.c ****   case KEY_F5:
 4603              		.loc 2 89 33 is_stmt 1 view .LVU1309
  89:src/console.c ****   case KEY_F5:
 4604              		.loc 2 89 51 is_stmt 0 view .LVU1310
 4605 04da DDE92201 		ldrd	r0, r1, [sp, #136]
 4606 04de 0DF1080A 		add	r10, sp, #8
 4607 04e2 8AE80300 		stm	r10, {r0, r1}
 4608 04e6 9DF88850 		ldrb	r5, [sp, #136]	@ zero_extendqisi2
 4609              	.LVL443:
  89:src/console.c ****   case KEY_F5:
 4610              		.loc 2 89 51 view .LVU1311
 4611 04ea 8946     		mov	r9, r1
 4612              	.LVL444:
  89:src/console.c ****   case KEY_F5:
 4613              		.loc 2 89 51 view .LVU1312
 4614 04ec C1E6     		b	.L333
 4615              	.LVL445:
 4616              	.L406:
  92:src/console.c ****   case KEY_F6:
 4617              		.loc 2 92 33 is_stmt 1 view .LVU1313
  92:src/console.c ****   case KEY_F6:
 4618              		.loc 2 92 51 is_stmt 0 view .LVU1314
 4619 04ee DDE92A01 		ldrd	r0, r1, [sp, #168]
 4620 04f2 0DF1080A 		add	r10, sp, #8
 4621 04f6 8AE80300 		stm	r10, {r0, r1}
 4622 04fa 9DF8A850 		ldrb	r5, [sp, #168]	@ zero_extendqisi2
 4623              	.LVL446:
  92:src/console.c ****   case KEY_F6:
 4624              		.loc 2 92 51 view .LVU1315
 4625 04fe 8946     		mov	r9, r1
 4626              	.LVL447:
  92:src/console.c ****   case KEY_F6:
 4627              		.loc 2 92 51 view .LVU1316
 4628 0500 B7E6     		b	.L333
 4629              	.LVL448:
 4630              	.L402:
  86:src/console.c ****   case KEY_F4:
 4631              		.loc 2 86 33 is_stmt 1 view .LVU1317
  86:src/console.c ****   case KEY_F4:
 4632              		.loc 2 86 51 is_stmt 0 view .LVU1318
 4633 0502 DDE91A01 		ldrd	r0, r1, [sp, #104]
 4634 0506 0DF1080A 		add	r10, sp, #8
 4635 050a 8AE80300 		stm	r10, {r0, r1}
 4636 050e 9DF86850 		ldrb	r5, [sp, #104]	@ zero_extendqisi2
 4637              	.LVL449:
  86:src/console.c ****   case KEY_F4:
 4638              		.loc 2 86 51 view .LVU1319
 4639 0512 8946     		mov	r9, r1
 4640              	.LVL450:
  86:src/console.c ****   case KEY_F4:
 4641              		.loc 2 86 51 view .LVU1320
 4642 0514 ADE6     		b	.L333
 4643              	.LVL451:
 4644              	.L400:
  83:src/console.c ****   case KEY_F3:
 4645              		.loc 2 83 33 is_stmt 1 view .LVU1321
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 127
=======
ARM GAS  /tmp/ccCyL0em.s 			page 127
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


  83:src/console.c ****   case KEY_F3:
 4646              		.loc 2 83 51 is_stmt 0 view .LVU1322
 4647 0516 DDE91201 		ldrd	r0, r1, [sp, #72]
 4648 051a 0DF1080A 		add	r10, sp, #8
 4649 051e 8AE80300 		stm	r10, {r0, r1}
 4650 0522 9DF84850 		ldrb	r5, [sp, #72]	@ zero_extendqisi2
 4651              	.LVL452:
  83:src/console.c ****   case KEY_F3:
 4652              		.loc 2 83 51 view .LVU1323
 4653 0526 8946     		mov	r9, r1
 4654              	.LVL453:
  83:src/console.c ****   case KEY_F3:
 4655              		.loc 2 83 51 view .LVU1324
 4656 0528 A3E6     		b	.L333
 4657              	.LVL454:
 4658              	.L357:
 122:src/console.c ****   case SHIFT_F:
 4659              		.loc 2 122 5 is_stmt 1 view .LVU1325
 124:src/console.c ****     break;
 4660              		.loc 2 124 5 view .LVU1326
 124:src/console.c ****     break;
 4661              		.loc 2 124 26 is_stmt 0 view .LVU1327
 4662 052a 264B     		ldr	r3, .L417+40
 4663 052c 5EE7     		b	.L394
 4664              	.L413:
 100:src/console.c ****       case SHIFT_N:
 4665              		.loc 2 100 7 is_stmt 1 view .LVU1328
 100:src/console.c ****       case SHIFT_N:
 4666              		.loc 2 100 15 is_stmt 0 view .LVU1329
 4667 052e FFF7FEFF 		bl	cur_shift
 4668              	.LVL455:
 100:src/console.c ****       case SHIFT_N:
 4669              		.loc 2 100 7 view .LVU1330
 4670 0532 0328     		cmp	r0, #3
 4671 0534 28D8     		bhi	.L352
 4672 0536 0128     		cmp	r0, #1
 4673 0538 11D8     		bhi	.L353
 4674 053a E0B1     		cbz	r0, .L414
 103:src/console.c ****       case SHIFT_F:
 4675              		.loc 2 103 2 is_stmt 1 view .LVU1331
 105:src/console.c **** 	break;
 4676              		.loc 2 105 2 view .LVU1332
 105:src/console.c **** 	break;
 4677              		.loc 2 105 23 is_stmt 0 view .LVU1333
 4678 053c 224B     		ldr	r3, .L417+44
 4679 053e 93E80300 		ldm	r3, {r0, r1}
 4680 0542 0DF1080A 		add	r10, sp, #8
 4681 0546 8AE80300 		stm	r10, {r0, r1}
 4682              	.LVL456:
 105:src/console.c **** 	break;
 4683              		.loc 2 105 23 view .LVU1334
 4684              	.LBE150:
 4685              	.LBE165:
 521:src/console.c **** 	set_menu ( remapped.shift );
 4686              		.loc 2 521 7 is_stmt 1 view .LVU1335
 527:src/console.c **** 	SET_ST(STAT_MENU);
 4687              		.loc 2 527 7 view .LVU1336
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 128
=======
ARM GAS  /tmp/ccCyL0em.s 			page 128
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 535:src/console.c **** 	remapped = do_multi (remapped);
 4688              		.loc 2 535 7 view .LVU1337
 539:src/console.c ****       process_keycode_with_shift(remapped);
 4689              		.loc 2 539 7 view .LVU1338
 540:src/console.c ****       if (remapped.key_34s != K_HEARTBEAT || JustStopped) start_key_timer(); 
 4690              		.loc 2 540 7 view .LVU1339
 540:src/console.c ****       if (remapped.key_34s != K_HEARTBEAT || JustStopped) start_key_timer(); 
 4691              		.loc 2 540 7 is_stmt 0 view .LVU1340
 4692 054a 2A22     		movs	r2, #42
 4693 054c 0023     		movs	r3, #0
 4694 054e 8DF80820 		strb	r2, [sp, #8]
 4695 0552 0393     		str	r3, [sp, #12]
 4696 0554 9AE80300 		ldm	r10, {r0, r1}
 4697 0558 FFF7FEFF 		bl	process_keycode_with_shift
 4698              	.LVL457:
 541:src/console.c ****     }
 4699              		.loc 2 541 7 is_stmt 1 view .LVU1341
 4700 055c B8E6     		b	.L356
 4701              	.LVL458:
 4702              	.L353:
 4703              	.LBB166:
 4704              	.LBB151:
 106:src/console.c ****       case SHIFT_G:
 4705              		.loc 2 106 2 view .LVU1342
 108:src/console.c **** 	break;
 4706              		.loc 2 108 2 view .LVU1343
 108:src/console.c **** 	break;
 4707              		.loc 2 108 9 is_stmt 0 view .LVU1344
 4708 055e 1B4B     		ldr	r3, .L417+48
 4709 0560 7FE6     		b	.L395
 4710              	.L398:
  80:src/console.c ****   case KEY_F2:
 4711              		.loc 2 80 33 is_stmt 1 view .LVU1345
  80:src/console.c ****   case KEY_F2:
 4712              		.loc 2 80 51 is_stmt 0 view .LVU1346
 4713 0562 DDE90A01 		ldrd	r0, r1, [sp, #40]
 4714 0566 0DF1080A 		add	r10, sp, #8
 4715 056a 8AE80300 		stm	r10, {r0, r1}
 4716 056e 9DF82850 		ldrb	r5, [sp, #40]	@ zero_extendqisi2
 4717              	.LVL459:
  80:src/console.c ****   case KEY_F2:
 4718              		.loc 2 80 51 view .LVU1347
 4719 0572 8946     		mov	r9, r1
 4720              	.LVL460:
  80:src/console.c ****   case KEY_F2:
 4721              		.loc 2 80 51 view .LVU1348
 4722 0574 7DE6     		b	.L333
 4723              	.LVL461:
 4724              	.L414:
 102:src/console.c **** 	break;
 4725              		.loc 2 102 2 is_stmt 1 view .LVU1349
 102:src/console.c **** 	break;
 4726              		.loc 2 102 21 is_stmt 0 view .LVU1350
 4727 0576 164B     		ldr	r3, .L417+52
 4728 0578 93E80300 		ldm	r3, {r0, r1}
 4729 057c 0DF1080A 		add	r10, sp, #8
 4730 0580 8AE80300 		stm	r10, {r0, r1}
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 129
=======
ARM GAS  /tmp/ccCyL0em.s 			page 129
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4731              	.LVL462:
 102:src/console.c **** 	break;
 4732              		.loc 2 102 21 view .LVU1351
 4733              	.LBE151:
 4734              	.LBE166:
 521:src/console.c **** 	set_menu ( remapped.shift );
 4735              		.loc 2 521 7 is_stmt 1 view .LVU1352
 527:src/console.c **** 	SET_ST(STAT_MENU);
 4736              		.loc 2 527 7 view .LVU1353
 535:src/console.c **** 	remapped = do_multi (remapped);
 4737              		.loc 2 535 7 view .LVU1354
 539:src/console.c ****       process_keycode_with_shift(remapped);
 4738              		.loc 2 539 7 view .LVU1355
 4739              	.LBB167:
 4740              	.LBB152:
 102:src/console.c **** 	break;
 4741              		.loc 2 102 21 is_stmt 0 view .LVU1356
 4742 0584 2925     		movs	r5, #41
 4743              	.LVL463:
 102:src/console.c **** 	break;
 4744              		.loc 2 102 21 view .LVU1357
 4745 0586 99E6     		b	.L355
 4746              	.LVL464:
 4747              	.L352:
 102:src/console.c **** 	break;
 4748              		.loc 2 102 21 view .LVU1358
 4749              	.LBE152:
 4750              	.LBE167:
 521:src/console.c **** 	set_menu ( remapped.shift );
 4751              		.loc 2 521 7 is_stmt 1 view .LVU1359
 527:src/console.c **** 	SET_ST(STAT_MENU);
 4752              		.loc 2 527 7 view .LVU1360
 535:src/console.c **** 	remapped = do_multi (remapped);
 4753              		.loc 2 535 7 view .LVU1361
 539:src/console.c ****       process_keycode_with_shift(remapped);
 4754              		.loc 2 539 7 view .LVU1362
 540:src/console.c ****       if (remapped.key_34s != K_HEARTBEAT || JustStopped) start_key_timer(); 
 4755              		.loc 2 540 7 view .LVU1363
 540:src/console.c ****       if (remapped.key_34s != K_HEARTBEAT || JustStopped) start_key_timer(); 
 4756              		.loc 2 540 7 is_stmt 0 view .LVU1364
 4757 0588 0023     		movs	r3, #0
 4758 058a 8DF80850 		strb	r5, [sp, #8]
 4759 058e 0298     		ldr	r0, [sp, #8]
 4760 0590 0393     		str	r3, [sp, #12]
 4761 0592 1946     		mov	r1, r3
 4762 0594 FFF7FEFF 		bl	process_keycode_with_shift
 4763              	.LVL465:
 541:src/console.c ****     }
 4764              		.loc 2 541 7 is_stmt 1 view .LVU1365
 4765 0598 9AE6     		b	.L356
 4766              	.L418:
 4767 059a 00BF     		.align	2
 4768              	.L417:
 4769 059c 00000000 		.word	StopWatchStatus
 4770 05a0 CDCCCCCC 		.word	-858993459
 4771 05a4 99999919 		.word	429496729
 4772 05a8 00000000 		.word	JustStopped
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 130
=======
ARM GAS  /tmp/ccCyL0em.s 			page 130
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4773 05ac 00000000 		.word	.LANCHOR12
 4774 05b0 00000000 		.word	.LANCHOR11
 4775 05b4 00000000 		.word	.LANCHOR2
 4776 05b8 00000000 		.word	.LANCHOR16
 4777 05bc 00000000 		.word	.LANCHOR17
 4778 05c0 00000000 		.word	.LANCHOR13
 4779 05c4 00000000 		.word	.LANCHOR14
 4780 05c8 E0000000 		.word	.LANCHOR14+224
 4781 05cc 00000000 		.word	.LANCHOR15
 4782 05d0 E0000000 		.word	.LANCHOR13+224
 4783              		.cfi_endproc
 4784              	.LFE34:
 4786              		.global	n_p
 4787              		.comm	print_string,22,4
 4788              		.global	spaces
 4789              		.global	release
 4790              		.global	h_shift
 4791              		.global	g_shift
 4792              		.global	f_shift
 4793              		.global	heartbeat
 4794              		.global	no_key
 4795              		.global	MID_MENU
 4796              		.section	.rodata.str1.4,"aMS",%progbits,1
 4797              		.align	2
 4798              	.LC18:
 4799 0000 53797374 		.ascii	"System!\000"
 4799      656D2100 
 4800              		.global	mid_menu
 4801              		.global	default_menu
 4802              		.global	last_menu
 4803              		.global	current_menu
 4804              		.global	cmplx_key_string
 4805              		.align	2
 4806              	.LC19:
 4807 0008 43505800 		.ascii	"CPX\000"
 4808              		.global	arrow_key_string
 4809              		.align	2
 4810              	.LC20:
 4811 000c 2D2D0D00 		.ascii	"--\015\000"
 4812              		.global	UserMenu
 4813              		.section	.rodata
 4814              		.align	2
 4815              		.set	.LANCHOR5,. + 0
 4816              	.LC0:
 4817 0000 2C       		.byte	44
 4818 0001 000000   		.space	3
 4819 0004 FFFFFFFF 		.word	-1
 4820              	.LC1:
 4821 0008 2D       		.byte	45
 4822 0009 000000   		.space	3
 4823 000c FFFFFFFF 		.word	-1
 4824              	.LC14:
 4825 0010 01020304 		.ascii	"\001\002\003\004*+\007\010\011\034\013\014\015\016\017"
 4825      2A2B0708 
 4825      091C0B0C 
 4825      0D0E0F
 4826 001f 10110006 		.ascii	"\020\021\000\006\023\024\025\026\000\022\030\031\032"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 131
=======
ARM GAS  /tmp/ccCyL0em.s 			page 131
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4826      13141516 
 4826      00121819 
 4826      1A
 4827 002c 1B00171D 		.ascii	"\033\000\027\035\036\037 \000!\"#$%"
 4827      1E1F2000 
 4827      21222324 
 4827      25
 4828              		.section	.bss.current_menu,"aw",%nobits
 4829              		.set	.LANCHOR1,. + 0
 4832              	current_menu:
 4833 0000 00       		.space	1
 4834              		.section	.bss.default_menu,"aw",%nobits
 4835              		.set	.LANCHOR2,. + 0
 4838              	default_menu:
 4839 0000 00       		.space	1
 4840              		.section	.bss.last_menu,"aw",%nobits
 4841              		.set	.LANCHOR3,. + 0
 4844              	last_menu:
 4845 0000 00       		.space	1
 4846              		.section	.bss.mdots,"aw",%nobits
 4847              		.align	2
 4848              		.set	.LANCHOR0,. + 0
 4851              	mdots:
 4852 0000 00000000 		.space	400
 4852      00000000 
 4852      00000000 
 4852      00000000 
 4852      00000000 
 4853              		.section	.bss.n_p,"aw",%nobits
 4854              		.align	2
 4857              	n_p:
 4858 0000 00000000 		.space	4
 4859              		.section	.bss.start_ticks,"aw",%nobits
 4860              		.align	2
 4861              		.set	.LANCHOR8,. + 0
 4864              	start_ticks:
 4865 0000 00000000 		.space	4
 4866              		.section	.data.UserMenu,"aw"
 4867              		.align	2
 4868              		.set	.LANCHOR4,. + 0
 4871              	UserMenu:
 4872 0000 55736572 		.ascii	"User Menu\000"
 4872      204D656E 
 4872      7500
 4873 000a 00000000 		.space	5
 4873      00
 4874 000f 00       		.space	1
 4875 0010 2E       		.byte	46
 4876 0011 000000   		.space	3
 4877 0014 FFFFFFFF 		.word	-1
 4878 0018 2E       		.byte	46
 4879 0019 000000   		.space	3
 4880 001c FFFFFFFF 		.word	-1
 4881 0020 00       		.ascii	"\000"
 4882 0021 00000000 		.space	7
 4882      000000
 4883 0028 00       		.ascii	"\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 132
=======
ARM GAS  /tmp/ccCyL0em.s 			page 132
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4884 0029 00000000 		.space	7
 4884      000000
 4885 0030 2E       		.byte	46
 4886 0031 000000   		.space	3
 4887 0034 FFFFFFFF 		.word	-1
 4888 0038 2E       		.byte	46
 4889 0039 000000   		.space	3
 4890 003c FFFFFFFF 		.word	-1
 4891 0040 00       		.ascii	"\000"
 4892 0041 00000000 		.space	7
 4892      000000
 4893 0048 00       		.ascii	"\000"
 4894 0049 00000000 		.space	7
 4894      000000
 4895 0050 2E       		.byte	46
 4896 0051 000000   		.space	3
 4897 0054 FFFFFFFF 		.word	-1
 4898 0058 2E       		.byte	46
 4899 0059 000000   		.space	3
 4900 005c FFFFFFFF 		.word	-1
 4901 0060 00       		.ascii	"\000"
 4902 0061 00000000 		.space	7
 4902      000000
 4903 0068 00       		.ascii	"\000"
 4904 0069 00000000 		.space	7
 4904      000000
 4905 0070 2E       		.byte	46
 4906 0071 000000   		.space	3
 4907 0074 FFFFFFFF 		.word	-1
 4908 0078 2E       		.byte	46
 4909 0079 000000   		.space	3
 4910 007c FFFFFFFF 		.word	-1
 4911 0080 00       		.ascii	"\000"
 4912 0081 00000000 		.space	7
 4912      000000
 4913 0088 00       		.ascii	"\000"
 4914 0089 00000000 		.space	7
 4914      000000
 4915 0090 2C       		.byte	44
 4916 0091 000000   		.space	3
 4917 0094 FFFFFFFF 		.word	-1
 4918 0098 2E       		.byte	46
 4919 0099 000000   		.space	3
 4920 009c FFFFFFFF 		.word	-1
 4921 00a0 2D2D0D00 		.ascii	"--\015\000"
 4922 00a4 00000000 		.space	4
 4923 00a8 00       		.ascii	"\000"
 4924 00a9 00000000 		.space	7
 4924      000000
 4925 00b0 2D       		.byte	45
 4926 00b1 000000   		.space	3
 4927 00b4 FFFFFFFF 		.word	-1
 4928 00b8 31       		.byte	49
 4929 00b9 000000   		.space	3
 4930 00bc 0B000000 		.word	11
 4931 00c0 43505800 		.ascii	"CPX\000"
 4932 00c4 00000000 		.space	4
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 133
=======
ARM GAS  /tmp/ccCyL0em.s 			page 133
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 4933 00c8 00       		.ascii	"\000"
 4934 00c9 00000000 		.space	7
 4934      000000
 4935              		.section	.data.arrow_key_string,"aw"
 4936              		.align	2
 4937              		.set	.LANCHOR6,. + 0
 4940              	arrow_key_string:
 4941 0000 0C000000 		.word	.LC20
 4942              		.section	.data.cmplx_key_string,"aw"
 4943              		.align	2
 4944              		.set	.LANCHOR7,. + 0
 4947              	cmplx_key_string:
 4948 0000 08000000 		.word	.LC19
 4949              		.section	.data.f_shift,"aw"
 4950              		.align	2
 4953              	f_shift:
 4954 0000 29       		.byte	41
 4955 0001 000000   		.space	3
 4956 0004 FFFFFFFF 		.word	-1
 4957              		.section	.data.g_shift,"aw"
 4958              		.align	2
 4961              	g_shift:
 4962 0000 2A       		.byte	42
 4963 0001 000000   		.space	3
 4964 0004 FFFFFFFF 		.word	-1
 4965              		.section	.data.h_shift,"aw"
 4966              		.align	2
 4967              		.set	.LANCHOR15,. + 0
 4970              	h_shift:
 4971 0000 2B       		.byte	43
 4972 0001 000000   		.space	3
 4973 0004 FFFFFFFF 		.word	-1
 4974              		.section	.data.heartbeat,"aw"
 4975              		.align	2
 4976              		.set	.LANCHOR19,. + 0
 4979              	heartbeat:
 4980 0000 62       		.byte	98
 4981 0001 000000   		.space	3
 4982 0004 FFFFFFFF 		.word	-1
 4983              		.section	.data.no_key,"aw"
 4984              		.align	2
 4985              		.set	.LANCHOR10,. + 0
 4988              	no_key:
 4989 0000 2E       		.byte	46
 4990 0001 000000   		.space	3
 4991 0004 00000000 		.word	0
 4992              		.section	.data.release,"aw"
 4993              		.align	2
 4994              		.set	.LANCHOR11,. + 0
 4997              	release:
 4998 0000 63       		.byte	99
 4999 0001 000000   		.space	3
 5000 0004 FFFFFFFF 		.word	-1
 5001              		.section	.data.spaces,"aw"
 5002              		.align	2
 5003              		.set	.LANCHOR9,. + 0
 5006              	spaces:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 134
=======
ARM GAS  /tmp/ccCyL0em.s 			page 134
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5007 0000 20202020 		.ascii	"                     \000"
 5007      20202020 
 5007      20202020 
 5007      20202020 
 5007      20202020 
 5008              		.section	.rodata.MID_MENU,"a"
 5009              		.align	2
 5010              		.set	.LANCHOR18,. + 0
 5013              	MID_MENU:
 5014 0000 00000000 		.word	.LC18
 5015 0004 00000000 		.word	mid_menu
 5016 0008 00000000 		.word	0
 5017 000c 00000000 		.word	0
 5018              		.section	.rodata.Menus,"a"
 5019              		.align	2
 5022              	Menus:
 5023 0000 4D5F426C 		.ascii	"M_Blank\000"
 5023      616E6B00 
 5024 0008 00000000 		.space	7
 5024      000000
 5025 000f 00       		.space	1
 5026 0010 2E       		.byte	46
 5027 0011 000000   		.space	3
 5028 0014 FFFFFFFF 		.word	-1
 5029 0018 2E       		.byte	46
 5030 0019 000000   		.space	3
 5031 001c FFFFFFFF 		.word	-1
 5032 0020 00       		.ascii	"\000"
 5033 0021 00000000 		.space	7
 5033      000000
 5034 0028 00       		.ascii	"\000"
 5035 0029 00000000 		.space	7
 5035      000000
 5036 0030 2E       		.byte	46
 5037 0031 000000   		.space	3
 5038 0034 FFFFFFFF 		.word	-1
 5039 0038 2E       		.byte	46
 5040 0039 000000   		.space	3
 5041 003c FFFFFFFF 		.word	-1
 5042 0040 00       		.ascii	"\000"
 5043 0041 00000000 		.space	7
 5043      000000
 5044 0048 00       		.ascii	"\000"
 5045 0049 00000000 		.space	7
 5045      000000
 5046 0050 2E       		.byte	46
 5047 0051 000000   		.space	3
 5048 0054 FFFFFFFF 		.word	-1
 5049 0058 2E       		.byte	46
 5050 0059 000000   		.space	3
 5051 005c FFFFFFFF 		.word	-1
 5052 0060 00       		.ascii	"\000"
 5053 0061 00000000 		.space	7
 5053      000000
 5054 0068 00       		.ascii	"\000"
 5055 0069 00000000 		.space	7
 5055      000000
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 135
=======
ARM GAS  /tmp/ccCyL0em.s 			page 135
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5056 0070 2E       		.byte	46
 5057 0071 000000   		.space	3
 5058 0074 FFFFFFFF 		.word	-1
 5059 0078 2E       		.byte	46
 5060 0079 000000   		.space	3
 5061 007c FFFFFFFF 		.word	-1
 5062 0080 00       		.ascii	"\000"
 5063 0081 00000000 		.space	7
 5063      000000
 5064 0088 00       		.ascii	"\000"
 5065 0089 00000000 		.space	7
 5065      000000
 5066 0090 2C       		.byte	44
 5067 0091 000000   		.space	3
 5068 0094 FFFFFFFF 		.word	-1
 5069 0098 2E       		.byte	46
 5070 0099 000000   		.space	3
 5071 009c FFFFFFFF 		.word	-1
 5072 00a0 2D2D0D00 		.ascii	"--\015\000"
 5073 00a4 00000000 		.space	4
 5074 00a8 00       		.ascii	"\000"
 5075 00a9 00000000 		.space	7
 5075      000000
 5076 00b0 2D       		.byte	45
 5077 00b1 000000   		.space	3
 5078 00b4 FFFFFFFF 		.word	-1
 5079 00b8 31       		.byte	49
 5080 00b9 000000   		.space	3
 5081 00bc 0B000000 		.word	11
 5082 00c0 43505800 		.ascii	"CPX\000"
 5083 00c4 00000000 		.space	4
 5084 00c8 00       		.ascii	"\000"
 5085 00c9 00000000 		.space	7
 5085      000000
 5086 00d0 4D5F436C 		.ascii	"M_Clear\000"
 5086      65617200 
 5087 00d8 00000000 		.space	7
 5087      000000
 5088 00df 00       		.space	1
 5089 00e0 10       		.byte	16
 5090 00e1 000000   		.space	3
 5091 00e4 01000000 		.word	1
 5092 00e8 34       		.byte	52
 5093 00e9 000000   		.space	3
 5094 00ec 44010000 		.word	324
 5095 00f0 434C5072 		.ascii	"CLProg\000"
 5095      6F6700
 5096 00f7 00       		.space	1
 5097 00f8 434C5041 		.ascii	"CLPAll\000"
 5097      6C6C00
 5098 00ff 00       		.space	1
 5099 0100 10       		.byte	16
 5100 0101 000000   		.space	3
 5101 0104 02000000 		.word	2
 5102 0108 34       		.byte	52
 5103 0109 000000   		.space	3
 5104 010c 3E010000 		.word	318
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 136
=======
ARM GAS  /tmp/ccCyL0em.s 			page 136
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5105 0110 434C9100 		.ascii	"CL\221\000"
 5106 0114 00000000 		.space	4
 5107 0118 434C5265 		.ascii	"CLReg\000"
 5107      6700
 5108 011e 0000     		.space	2
 5109 0120 10       		.byte	16
 5110 0121 000000   		.space	3
 5111 0124 03000000 		.word	3
 5112 0128 34       		.byte	52
 5113 0129 000000   		.space	3
 5114 012c 74010000 		.word	372
 5115 0130 434C7800 		.ascii	"CLx\000"
 5116 0134 00000000 		.space	4
 5117 0138 434C06A0 		.ascii	"CL\006\240\000"
 5117      00
 5118 013d 000000   		.space	3
 5119 0140 34       		.byte	52
 5120 0141 000000   		.space	3
 5121 0144 40010000 		.word	320
 5122 0148 34       		.byte	52
 5123 0149 000000   		.space	3
 5124 014c 41010000 		.word	321
 5125 0150 434C5374 		.ascii	"CLStk\000"
 5125      6B00
 5126 0156 0000     		.space	2
 5127 0158 434C416C 		.ascii	"CLAll\000"
 5127      6C00
 5128 015e 0000     		.space	2
 5129 0160 2C       		.byte	44
 5130 0161 000000   		.space	3
 5131 0164 FFFFFFFF 		.word	-1
 5132 0168 2E       		.byte	46
 5133 0169 000000   		.space	3
 5134 016c FFFFFFFF 		.word	-1
 5135 0170 2D2D0D00 		.ascii	"--\015\000"
 5136 0174 00000000 		.space	4
 5137 0178 00       		.ascii	"\000"
 5138 0179 00000000 		.space	7
 5138      000000
 5139 0180 2D       		.byte	45
 5140 0181 000000   		.space	3
 5141 0184 FFFFFFFF 		.word	-1
 5142 0188 2E       		.byte	46
 5143 0189 000000   		.space	3
 5144 018c FFFFFFFF 		.word	-1
 5145 0190 43505800 		.ascii	"CPX\000"
 5146 0194 00000000 		.space	4
 5147 0198 00       		.ascii	"\000"
 5148 0199 00000000 		.space	7
 5148      000000
 5149 01a0 4D5F4469 		.ascii	"M_Disp\000"
 5149      737000
 5150 01a7 00000000 		.space	8
 5150      00000000 
 5151 01af 00       		.space	1
 5152 01b0 00       		.byte	0
 5153 01b1 000000   		.space	3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 137
=======
ARM GAS  /tmp/ccCyL0em.s 			page 137
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5154 01b4 03000000 		.word	3
 5155 01b8 05       		.byte	5
 5156 01b9 000000   		.space	3
 5157 01bc 01000000 		.word	1
 5158 01c0 414C4C00 		.ascii	"ALL\000"
 5159 01c4 00000000 		.space	4
 5160 01c8 6120622F 		.ascii	"a b/c\000"
 5160      6300
 5161 01ce 0000     		.space	2
 5162 01d0 01       		.byte	1
 5163 01d1 000000   		.space	3
 5164 01d4 03000000 		.word	3
 5165 01d8 05       		.byte	5
 5166 01d9 000000   		.space	3
 5167 01dc 02000000 		.word	2
 5168 01e0 46495800 		.ascii	"FIX\000"
 5169 01e4 00000000 		.space	4
 5170 01e8 642F6300 		.ascii	"d/c\000"
 5171 01ec 00000000 		.space	4
 5172 01f0 02       		.byte	2
 5173 01f1 000000   		.space	3
 5174 01f4 03000000 		.word	3
 5175 01f8 06       		.byte	6
 5176 01f9 000000   		.space	3
 5177 01fc 01000000 		.word	1
 5178 0200 53434900 		.ascii	"SCI\000"
 5179 0204 00000000 		.space	4
 5180 0208 482E4D53 		.ascii	"H.MS\000"
 5180      00
 5181 020d 000000   		.space	3
 5182 0210 03       		.byte	3
 5183 0211 000000   		.space	3
 5184 0214 03000000 		.word	3
 5185 0218 07       		.byte	7
 5186 0219 000000   		.space	3
 5187 021c 01000000 		.word	1
 5188 0220 454E4700 		.ascii	"ENG\000"
 5189 0224 00000000 		.space	4
 5190 0228 482E6400 		.ascii	"H.d\000"
 5191 022c 00000000 		.space	4
 5192 0230 2C       		.byte	44
 5193 0231 000000   		.space	3
 5194 0234 FFFFFFFF 		.word	-1
 5195 0238 26       		.byte	38
 5196 0239 000000   		.space	3
 5197 023c 03000000 		.word	3
 5198 0240 2D2D0D00 		.ascii	"--\015\000"
 5199 0244 00000000 		.space	4
 5200 0248 2E2F2C00 		.ascii	"./,\000"
 5201 024c 00000000 		.space	4
 5202 0250 2D       		.byte	45
 5203 0251 000000   		.space	3
 5204 0254 FFFFFFFF 		.word	-1
 5205 0258 2E       		.byte	46
 5206 0259 000000   		.space	3
 5207 025c FFFFFFFF 		.word	-1
 5208 0260 43505800 		.ascii	"CPX\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 138
=======
ARM GAS  /tmp/ccCyL0em.s 			page 138
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5209 0264 00000000 		.space	4
 5210 0268 00       		.ascii	"\000"
 5211 0269 00000000 		.space	7
 5211      000000
 5212 0270 4D5F4261 		.ascii	"M_Base\000"
 5212      736500
 5213 0277 00000000 		.space	8
 5213      00000000 
 5214 027f 00       		.space	1
 5215 0280 0E       		.byte	14
 5216 0281 000000   		.space	3
 5217 0284 01000000 		.word	1
 5218 0288 0E       		.byte	14
 5219 0289 000000   		.space	3
 5220 028c 03000000 		.word	3
 5221 0290 42494E00 		.ascii	"BIN\000"
 5222 0294 00000000 		.space	4
 5223 0298 6E6F7400 		.ascii	"not\000"
 5224 029c 00000000 		.space	4
 5225 02a0 0E       		.byte	14
 5226 02a1 000000   		.space	3
 5227 02a4 02000000 		.word	2
 5228 02a8 13       		.byte	19
 5229 02a9 000000   		.space	3
 5230 02ac 03000000 		.word	3
 5231 02b0 4F435400 		.ascii	"OCT\000"
 5232 02b4 00000000 		.space	4
 5233 02b8 616E6400 		.ascii	"and\000"
 5234 02bc 00000000 		.space	4
 5235 02c0 0F       		.byte	15
 5236 02c1 000000   		.space	3
 5237 02c4 01000000 		.word	1
 5238 02c8 14       		.byte	20
 5239 02c9 000000   		.space	3
 5240 02cc 03000000 		.word	3
 5241 02d0 44454300 		.ascii	"DEC\000"
 5242 02d4 00000000 		.space	4
 5243 02d8 6F7200   		.ascii	"or\000"
 5244 02db 00000000 		.space	5
 5244      00
 5245 02e0 0F       		.byte	15
 5246 02e1 000000   		.space	3
 5247 02e4 02000000 		.word	2
 5248 02e8 15       		.byte	21
 5249 02e9 000000   		.space	3
 5250 02ec 03000000 		.word	3
 5251 02f0 48455800 		.ascii	"HEX\000"
 5252 02f4 00000000 		.space	4
 5253 02f8 786F7200 		.ascii	"xor\000"
 5254 02fc 00000000 		.space	4
 5255 0300 2C       		.byte	44
 5256 0301 000000   		.space	3
 5257 0304 FFFFFFFF 		.word	-1
 5258 0308 16       		.byte	22
 5259 0309 000000   		.space	3
 5260 030c 03000000 		.word	3
 5261 0310 2D2D0D00 		.ascii	"--\015\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 139
=======
ARM GAS  /tmp/ccCyL0em.s 			page 139
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5262 0314 00000000 		.space	4
 5263 0318 524D4452 		.ascii	"RMDR\000"
 5263      00
 5264 031d 000000   		.space	3
 5265 0320 2D       		.byte	45
 5266 0321 000000   		.space	3
 5267 0324 FFFFFFFF 		.word	-1
 5268 0328 07       		.byte	7
 5269 0329 000000   		.space	3
 5270 032c 01000000 		.word	1
 5271 0330 43505800 		.ascii	"CPX\000"
 5272 0334 00000000 		.space	4
 5273 0338 482E6400 		.ascii	"H.d\000"
 5274 033c 00000000 		.space	4
 5275 0340 4D5F416E 		.ascii	"M_Angles\000"
 5275      676C6573 
 5275      00
 5276 0349 00000000 		.space	6
 5276      0000
 5277 034f 00       		.space	1
 5278 0350 06       		.byte	6
 5279 0351 000000   		.space	3
 5280 0354 02000000 		.word	2
 5281 0358 04       		.byte	4
 5282 0359 000000   		.space	3
 5283 035c 01000000 		.word	1
 5284 0360 44454700 		.ascii	"DEG\000"
 5285 0364 00000000 		.space	4
 5286 0368 500D5200 		.ascii	"P\015R\000"
 5287 036c 00000000 		.space	4
 5288 0370 07       		.byte	7
 5289 0371 000000   		.space	3
 5290 0374 02000000 		.word	2
 5291 0378 04       		.byte	4
 5292 0379 000000   		.space	3
 5293 037c 02000000 		.word	2
 5294 0380 52414400 		.ascii	"RAD\000"
 5295 0384 00000000 		.space	4
 5296 0388 520D5000 		.ascii	"R\015P\000"
 5297 038c 00000000 		.space	4
 5298 0390 08       		.byte	8
 5299 0391 000000   		.space	3
 5300 0394 02000000 		.word	2
 5301 0398 00       		.byte	0
 5302 0399 000000   		.space	3
 5303 039c 01000000 		.word	1
 5304 03a0 47524144 		.ascii	"GRAD\000"
 5304      00
 5305 03a5 000000   		.space	3
 5306 03a8 48595000 		.ascii	"HYP\000"
 5307 03ac 00000000 		.space	4
 5308 03b0 06       		.byte	6
 5309 03b1 000000   		.space	3
 5310 03b4 01000000 		.word	1
 5311 03b8 07       		.byte	7
 5312 03b9 000000   		.space	3
 5313 03bc 01000000 		.word	1
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 140
=======
ARM GAS  /tmp/ccCyL0em.s 			page 140
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5314 03c0 482E4D53 		.ascii	"H.MS\000"
 5314      00
 5315 03c5 000000   		.space	3
 5316 03c8 482E6400 		.ascii	"H.d\000"
 5317 03cc 00000000 		.space	4
 5318 03d0 2C       		.byte	44
 5319 03d1 000000   		.space	3
 5320 03d4 FFFFFFFF 		.word	-1
 5321 03d8 00       		.byte	0
 5322 03d9 000000   		.space	3
 5323 03dc 02000000 		.word	2
 5324 03e0 2D2D0D00 		.ascii	"--\015\000"
 5325 03e4 00000000 		.space	4
 5326 03e8 4859509D 		.ascii	"HYP\235\000"
 5326      00
 5327 03ed 000000   		.space	3
 5328 03f0 2D       		.byte	45
 5329 03f1 000000   		.space	3
 5330 03f4 FFFFFFFF 		.word	-1
 5331 03f8 2E       		.byte	46
 5332 03f9 000000   		.space	3
 5333 03fc FFFFFFFF 		.word	-1
 5334 0400 43505800 		.ascii	"CPX\000"
 5335 0404 00000000 		.space	4
 5336 0408 00       		.ascii	"\000"
 5337 0409 00000000 		.space	7
 5337      000000
 5338 0410 4D5F4D69 		.ascii	"M_Misc\000"
 5338      736300
 5339 0417 00000000 		.space	8
 5339      00000000 
 5340 041f 00       		.space	1
 5341 0420 25       		.byte	37
 5342 0421 000000   		.space	3
 5343 0424 01000000 		.word	1
 5344 0428 14       		.byte	20
 5345 0429 000000   		.space	3
 5346 042c 01000000 		.word	1
 5347 0430 7C587C00 		.ascii	"|X|\000"
 5348 0434 00000000 		.space	4
 5349 0438 329C00   		.ascii	"2\234\000"
 5350 043b 00000000 		.space	5
 5350      00
 5351 0440 25       		.byte	37
 5352 0441 000000   		.space	3
 5353 0444 02000000 		.word	2
 5354 0448 14       		.byte	20
 5355 0449 000000   		.space	3
 5356 044c 02000000 		.word	2
 5357 0450 524E4400 		.ascii	"RND\000"
 5358 0454 00000000 		.space	4
 5359 0458 4C6F67BA 		.ascii	"Log\272\000"
 5359      00
 5360 045d 000000   		.space	3
 5361 0460 26       		.byte	38
 5362 0461 000000   		.space	3
 5363 0464 01000000 		.word	1
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 141
=======
ARM GAS  /tmp/ccCyL0em.s 			page 141
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5364 0468 15       		.byte	21
 5365 0469 000000   		.space	3
 5366 046c 02000000 		.word	2
 5367 0470 49506172 		.ascii	"IPart\000"
 5367      7400
 5368 0476 0000     		.space	2
 5369 0478 4C6F678B 		.ascii	"Log\213\000"
 5369      00
 5370 047d 000000   		.space	3
 5371 0480 26       		.byte	38
 5372 0481 000000   		.space	3
 5373 0484 02000000 		.word	2
 5374 0488 16       		.byte	22
 5375 0489 000000   		.space	3
 5376 048c 02000000 		.word	2
 5377 0490 46506172 		.ascii	"FPart\000"
 5377      7400
 5378 0496 0000     		.space	2
 5379 0498 7C7C656C 		.ascii	"||el\000"
 5379      00
 5380 049d 000000   		.space	3
 5381 04a0 2C       		.byte	44
 5382 04a1 000000   		.space	3
 5383 04a4 FFFFFFFF 		.word	-1
 5384 04a8 22       		.byte	34
 5385 04a9 000000   		.space	3
 5386 04ac 02000000 		.word	2
 5387 04b0 2D2D0D00 		.ascii	"--\015\000"
 5388 04b4 00000000 		.space	4
 5389 04b8 832500   		.ascii	"\203%\000"
 5390 04bb 00000000 		.space	5
 5390      00
 5391 04c0 2D       		.byte	45
 5392 04c1 000000   		.space	3
 5393 04c4 FFFFFFFF 		.word	-1
 5394 04c8 2E       		.byte	46
 5395 04c9 000000   		.space	3
 5396 04cc FFFFFFFF 		.word	-1
 5397 04d0 43505800 		.ascii	"CPX\000"
 5398 04d4 00000000 		.space	4
 5399 04d8 00       		.ascii	"\000"
 5400 04d9 00000000 		.space	7
 5400      000000
 5401 04e0 4D5F5377 		.ascii	"M_Swap\000"
 5401      617000
 5402 04e7 00000000 		.space	8
 5402      00000000 
 5403 04ef 00       		.space	1
 5404 04f0 0D       		.byte	13
 5405 04f1 000000   		.space	3
 5406 04f4 01000000 		.word	1
 5407 04f8 34       		.byte	52
 5408 04f9 000000   		.space	3
 5409 04fc 00A60000 		.word	42496
 5410 0500 53686F77 		.ascii	"Show\016\000"
 5410      0E00
 5411 0506 0000     		.space	2
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 142
=======
ARM GAS  /tmp/ccCyL0em.s 			page 142
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5412 0508 5B175D00 		.ascii	"[\027]\000"
 5413 050c 00000000 		.space	4
 5414 0510 0D       		.byte	13
 5415 0511 000000   		.space	3
 5416 0514 02000000 		.word	2
 5417 0518 2E       		.byte	46
 5418 0519 000000   		.space	3
 5419 051c FFFFFFFF 		.word	-1
 5420 0520 53686F77 		.ascii	"Show\015\000"
 5420      0D00
 5421 0526 0000     		.space	2
 5422 0528 00       		.ascii	"\000"
 5423 0529 00000000 		.space	7
 5423      000000
 5424 0530 0D       		.byte	13
 5425 0531 000000   		.space	3
 5426 0534 03000000 		.word	3
 5427 0538 34       		.byte	52
 5428 0539 000000   		.space	3
 5429 053c 00330000 		.word	13056
 5430 0540 78173F00 		.ascii	"x\027?\000"
 5431 0544 00000000 		.space	4
 5432 0548 7A173F00 		.ascii	"z\027?\000"
 5433 054c 00000000 		.space	4
 5434 0550 34       		.byte	52
 5435 0551 000000   		.space	3
 5436 0554 00320000 		.word	12800
 5437 0558 34       		.byte	52
 5438 0559 000000   		.space	3
 5439 055c 00340000 		.word	13312
 5440 0560 79173F00 		.ascii	"y\027?\000"
 5441 0564 00000000 		.space	4
 5442 0568 74173F00 		.ascii	"t\027?\000"
 5443 056c 00000000 		.space	4
 5444 0570 2C       		.byte	44
 5445 0571 000000   		.space	3
 5446 0574 FFFFFFFF 		.word	-1
 5447 0578 2E       		.byte	46
 5448 0579 000000   		.space	3
 5449 057c FFFFFFFF 		.word	-1
 5450 0580 2D2D0D00 		.ascii	"--\015\000"
 5451 0584 00000000 		.space	4
 5452 0588 00       		.ascii	"\000"
 5453 0589 00000000 		.space	7
 5453      000000
 5454 0590 2D       		.byte	45
 5455 0591 000000   		.space	3
 5456 0594 FFFFFFFF 		.word	-1
 5457 0598 2E       		.byte	46
 5458 0599 000000   		.space	3
 5459 059c FFFFFFFF 		.word	-1
 5460 05a0 43505800 		.ascii	"CPX\000"
 5461 05a4 00000000 		.space	4
 5462 05a8 00       		.ascii	"\000"
 5463 05a9 00000000 		.space	7
 5463      000000
 5464 05b0 4D5F5072 		.ascii	"M_Program\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 143
=======
ARM GAS  /tmp/ccCyL0em.s 			page 143
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5464      6F677261 
 5464      6D00
 5465 05ba 00000000 		.space	5
 5465      00
 5466 05bf 00       		.space	1
 5467 05c0 27       		.byte	39
 5468 05c1 000000   		.space	3
 5469 05c4 01000000 		.word	1
 5470 05c8 28       		.byte	40
 5471 05c9 000000   		.space	3
 5472 05cc 01000000 		.word	1
 5473 05d0 4C424C00 		.ascii	"LBL\000"
 5474 05d4 00000000 		.space	4
 5475 05d8 44534500 		.ascii	"DSE\000"
 5476 05dc 00000000 		.space	4
 5477 05e0 27       		.byte	39
 5478 05e1 000000   		.space	3
 5479 05e4 02000000 		.word	2
 5480 05e8 28       		.byte	40
 5481 05e9 000000   		.space	3
 5482 05ec 02000000 		.word	2
 5483 05f0 52544E00 		.ascii	"RTN\000"
 5484 05f4 00000000 		.space	4
 5485 05f8 49534700 		.ascii	"ISG\000"
 5486 05fc 00000000 		.space	4
 5487 0600 25       		.byte	37
 5488 0601 000000   		.space	3
 5489 0604 03000000 		.word	3
 5490 0608 34       		.byte	52
 5491 0609 000000   		.space	3
 5492 060c 00600000 		.word	24576
 5493 0610 50617573 		.ascii	"Pause\000"
 5493      6500
 5494 0616 0000     		.space	2
 5495 0618 44454300 		.ascii	"DEC\000"
 5496 061c 00000000 		.space	4
 5497 0620 12       		.byte	18
 5498 0621 000000   		.space	3
 5499 0624 03000000 		.word	3
 5500 0628 34       		.byte	52
 5501 0629 000000   		.space	3
 5502 062c 00610000 		.word	24832
 5503 0630 47544F00 		.ascii	"GTO\000"
 5504 0634 00000000 		.space	4
 5505 0638 494E4300 		.ascii	"INC\000"
 5506 063c 00000000 		.space	4
 5507 0640 2C       		.byte	44
 5508 0641 000000   		.space	3
 5509 0644 FFFFFFFF 		.word	-1
 5510 0648 34       		.byte	52
 5511 0649 000000   		.space	3
 5512 064c 00570000 		.word	22272
 5513 0650 2D2D0D00 		.ascii	"--\015\000"
 5514 0654 00000000 		.space	4
 5515 0658 4241434B 		.ascii	"BACK\000"
 5515      00
 5516 065d 000000   		.space	3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 144
=======
ARM GAS  /tmp/ccCyL0em.s 			page 144
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5517 0660 2D       		.byte	45
 5518 0661 000000   		.space	3
 5519 0664 FFFFFFFF 		.word	-1
 5520 0668 34       		.byte	52
 5521 0669 000000   		.space	3
 5522 066c 00560000 		.word	22016
 5523 0670 43505800 		.ascii	"CPX\000"
 5524 0674 00000000 		.space	4
 5525 0678 534B4950 		.ascii	"SKIP\000"
 5525      00
 5526 067d 000000   		.space	3
 5527 0680 4D5F5365 		.ascii	"M_Setup1\000"
 5527      74757031 
 5527      00
 5528 0689 00000000 		.space	6
 5528      0000
 5529 068f 00       		.space	1
 5530 0690 32       		.byte	50
 5531 0691 000000   		.space	3
 5532 0694 00000000 		.word	0
 5533 0698 30       		.byte	48
 5534 0699 000000   		.space	3
 5535 069c 00000000 		.word	0
 5536 06a0 45584954 		.ascii	"EXIT\000"
 5536      00
 5537 06a5 000000   		.space	3
 5538 06a8 53797374 		.ascii	"System\000"
 5538      656D00
 5539 06af 00       		.space	1
 5540 06b0 31       		.byte	49
 5541 06b1 000000   		.space	3
 5542 06b4 09000000 		.word	9
 5543 06b8 2E       		.byte	46
 5544 06b9 000000   		.space	3
 5545 06bc FFFFFFFF 		.word	-1
 5546 06c0 48454C50 		.ascii	"HELP\000"
 5546      00
 5547 06c5 000000   		.space	3
 5548 06c8 00       		.ascii	"\000"
 5549 06c9 00000000 		.space	7
 5549      000000
 5550 06d0 31       		.byte	49
 5551 06d1 000000   		.space	3
 5552 06d4 02000000 		.word	2
 5553 06d8 31       		.byte	49
 5554 06d9 000000   		.space	3
 5555 06dc 06000000 		.word	6
 5556 06e0 4F6E5354 		.ascii	"OnSTO\000"
 5556      4F00
 5557 06e6 0000     		.space	2
 5558 06e8 53765241 		.ascii	"SvRAM\000"
 5558      4D00
 5559 06ee 0000     		.space	2
 5560 06f0 31       		.byte	49
 5561 06f1 000000   		.space	3
 5562 06f4 03000000 		.word	3
 5563 06f8 31       		.byte	49
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 145
=======
ARM GAS  /tmp/ccCyL0em.s 			page 145
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5564 06f9 000000   		.space	3
 5565 06fc 07000000 		.word	7
 5566 0700 4F6E5243 		.ascii	"OnRCL\000"
 5566      4C00
 5567 0706 0000     		.space	2
 5568 0708 4C645241 		.ascii	"LdRAM\000"
 5568      4D00
 5569 070e 0000     		.space	2
 5570 0710 2C       		.byte	44
 5571 0711 000000   		.space	3
 5572 0714 FFFFFFFF 		.word	-1
 5573 0718 2E       		.byte	46
 5574 0719 000000   		.space	3
 5575 071c FFFFFFFF 		.word	-1
 5576 0720 2D2D0D00 		.ascii	"--\015\000"
 5577 0724 00000000 		.space	4
 5578 0728 00       		.ascii	"\000"
 5579 0729 00000000 		.space	7
 5579      000000
 5580 0730 2D       		.byte	45
 5581 0731 000000   		.space	3
 5582 0734 FFFFFFFF 		.word	-1
 5583 0738 2E       		.byte	46
 5584 0739 000000   		.space	3
 5585 073c FFFFFFFF 		.word	-1
 5586 0740 43505800 		.ascii	"CPX\000"
 5587 0744 00000000 		.space	4
 5588 0748 00       		.ascii	"\000"
 5589 0749 00000000 		.space	7
 5589      000000
 5590 0750 4D5F4172 		.ascii	"M_Arrow\000"
 5590      726F7700 
 5591 0758 00000000 		.space	7
 5591      000000
 5592 075f 00       		.space	1
 5593 0760 0E       		.byte	14
 5594 0761 000000   		.space	3
 5595 0764 01000000 		.word	1
 5596 0768 06       		.byte	6
 5597 0769 000000   		.space	3
 5598 076c 02000000 		.word	2
 5599 0770 0D42696E 		.ascii	"\015Bin\000"
 5599      00
 5600 0775 000000   		.space	3
 5601 0778 0D444547 		.ascii	"\015DEG\000"
 5601      00
 5602 077d 000000   		.space	3
 5603 0780 0E       		.byte	14
 5604 0781 000000   		.space	3
 5605 0784 02000000 		.word	2
 5606 0788 07       		.byte	7
 5607 0789 000000   		.space	3
 5608 078c 02000000 		.word	2
 5609 0790 0D4F6374 		.ascii	"\015Oct\000"
 5609      00
 5610 0795 000000   		.space	3
 5611 0798 0D524144 		.ascii	"\015RAD\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 146
=======
ARM GAS  /tmp/ccCyL0em.s 			page 146
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5611      00
 5612 079d 000000   		.space	3
 5613 07a0 0F       		.byte	15
 5614 07a1 000000   		.space	3
 5615 07a4 01000000 		.word	1
 5616 07a8 08       		.byte	8
 5617 07a9 000000   		.space	3
 5618 07ac 02000000 		.word	2
 5619 07b0 0D446563 		.ascii	"\015Dec\000"
 5619      00
 5620 07b5 000000   		.space	3
 5621 07b8 0D477261 		.ascii	"\015Grad\000"
 5621      6400
 5622 07be 0000     		.space	2
 5623 07c0 0F       		.byte	15
 5624 07c1 000000   		.space	3
 5625 07c4 02000000 		.word	2
 5626 07c8 06       		.byte	6
 5627 07c9 000000   		.space	3
 5628 07cc 01000000 		.word	1
 5629 07d0 0D486578 		.ascii	"\015Hex\000"
 5629      00
 5630 07d5 000000   		.space	3
 5631 07d8 0D484D53 		.ascii	"\015HMS\000"
 5631      00
 5632 07dd 000000   		.space	3
 5633 07e0 2C       		.byte	44
 5634 07e1 000000   		.space	3
 5635 07e4 FFFFFFFF 		.word	-1
 5636 07e8 07       		.byte	7
 5637 07e9 000000   		.space	3
 5638 07ec 01000000 		.word	1
 5639 07f0 2D2D0D00 		.ascii	"--\015\000"
 5640 07f4 00000000 		.space	4
 5641 07f8 484D530D 		.ascii	"HMS\015\000"
 5641      00
 5642 07fd 000000   		.space	3
 5643 0800 2D       		.byte	45
 5644 0801 000000   		.space	3
 5645 0804 FFFFFFFF 		.word	-1
 5646 0808 2E       		.byte	46
 5647 0809 000000   		.space	3
 5648 080c FFFFFFFF 		.word	-1
 5649 0810 43505800 		.ascii	"CPX\000"
 5650 0814 00000000 		.space	4
 5651 0818 00       		.ascii	"\000"
 5652 0819 00000000 		.space	7
 5652      000000
 5653 0820 4D5F466C 		.ascii	"M_Flags\000"
 5653      61677300 
 5654 0828 00000000 		.space	7
 5654      000000
 5655 082f 00       		.space	1
 5656 0830 1E       		.byte	30
 5657 0831 000000   		.space	3
 5658 0834 01000000 		.word	1
 5659 0838 34       		.byte	52
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 147
=======
ARM GAS  /tmp/ccCyL0em.s 			page 147
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5660 0839 000000   		.space	3
 5661 083c 00740000 		.word	29696
 5662 0840 53465F00 		.ascii	"SF_\000"
 5663 0844 00000000 		.space	4
 5664 0848 46533F00 		.ascii	"FS?\000"
 5665 084c 00000000 		.space	4
 5666 0850 1E       		.byte	30
 5667 0851 000000   		.space	3
 5668 0854 02000000 		.word	2
 5669 0858 34       		.byte	52
 5670 0859 000000   		.space	3
 5671 085c 00750000 		.word	29952
 5672 0860 43465F00 		.ascii	"CF_\000"
 5673 0864 00000000 		.space	4
 5674 0868 46433F00 		.ascii	"FC?\000"
 5675 086c 00000000 		.space	4
 5676 0870 1F       		.byte	31
 5677 0871 000000   		.space	3
 5678 0874 01000000 		.word	1
 5679 0878 34       		.byte	52
 5680 0879 000000   		.space	3
 5681 087c 00500000 		.word	20480
 5682 0880 783D3F00 		.ascii	"x=?\000"
 5683 0884 00000000 		.space	4
 5684 0888 783C3F00 		.ascii	"x<?\000"
 5685 088c 00000000 		.space	4
 5686 0890 1F       		.byte	31
 5687 0891 000000   		.space	3
 5688 0894 02000000 		.word	2
 5689 0898 34       		.byte	52
 5690 0899 000000   		.space	3
 5691 089c 00510000 		.word	20736
 5692 08a0 780B3F00 		.ascii	"x\013?\000"
 5693 08a4 00000000 		.space	4
 5694 08a8 783C3D3F 		.ascii	"x<=?\000"
 5694      00
 5695 08ad 000000   		.space	3
 5696 08b0 2C       		.byte	44
 5697 08b1 000000   		.space	3
 5698 08b4 FFFFFFFF 		.word	-1
 5699 08b8 34       		.byte	52
 5700 08b9 000000   		.space	3
 5701 08bc 00530000 		.word	21248
 5702 08c0 2D2D0D00 		.ascii	"--\015\000"
 5703 08c4 00000000 		.space	4
 5704 08c8 783E3D3F 		.ascii	"x>=?\000"
 5704      00
 5705 08cd 000000   		.space	3
 5706 08d0 2D       		.byte	45
 5707 08d1 000000   		.space	3
 5708 08d4 FFFFFFFF 		.word	-1
 5709 08d8 34       		.byte	52
 5710 08d9 000000   		.space	3
 5711 08dc 00520000 		.word	20992
 5712 08e0 43505800 		.ascii	"CPX\000"
 5713 08e4 00000000 		.space	4
 5714 08e8 783E3F00 		.ascii	"x>?\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 148
=======
ARM GAS  /tmp/ccCyL0em.s 			page 148
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5715 08ec 00000000 		.space	4
 5716 08f0 4D5F5072 		.ascii	"M_Prob\000"
 5716      6F6200
 5717 08f7 00000000 		.space	8
 5717      00000000 
 5718 08ff 00       		.space	1
 5719 0900 18       		.byte	24
 5720 0901 000000   		.space	3
 5721 0904 03000000 		.word	3
 5722 0908 34       		.byte	52
 5723 0909 000000   		.space	3
 5724 090c 31020000 		.word	561
 5725 0910 46616374 		.ascii	"Fact!\000"
 5725      2100
 5726 0916 0000     		.space	2
 5727 0918 4C6E0682 		.ascii	"Ln\006\202\000"
 5727      00
 5728 091d 000000   		.space	3
 5729 0920 18       		.byte	24
 5730 0921 000000   		.space	3
 5731 0924 01000000 		.word	1
 5732 0928 19       		.byte	25
 5733 0929 000000   		.space	3
 5734 092c 01000000 		.word	1
 5735 0930 43792C78 		.ascii	"Cy,x\000"
 5735      00
 5736 0935 000000   		.space	3
 5737 0938 9400     		.ascii	"\224\000"
 5738 093a 00000000 		.space	6
 5738      0000
 5739 0940 18       		.byte	24
 5740 0941 000000   		.space	3
 5741 0944 02000000 		.word	2
 5742 0948 19       		.byte	25
 5743 0949 000000   		.space	3
 5744 094c 02000000 		.word	2
 5745 0950 50792C78 		.ascii	"Py,x\000"
 5745      00
 5746 0955 000000   		.space	3
 5747 0958 949D00   		.ascii	"\224\235\000"
 5748 095b 00000000 		.space	5
 5748      00
 5749 0960 08       		.byte	8
 5750 0961 000000   		.space	3
 5751 0964 01000000 		.word	1
 5752 0968 34       		.byte	52
 5753 0969 000000   		.space	3
 5754 096c 34010000 		.word	308
 5755 0970 52414E23 		.ascii	"RAN#\000"
 5755      00
 5756 0975 000000   		.space	3
 5757 0978 53454544 		.ascii	"SEED\000"
 5757      00
 5758 097d 000000   		.space	3
 5759 0980 2C       		.byte	44
 5760 0981 000000   		.space	3
 5761 0984 FFFFFFFF 		.word	-1
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 149
=======
ARM GAS  /tmp/ccCyL0em.s 			page 149
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5762 0988 2E       		.byte	46
 5763 0989 000000   		.space	3
 5764 098c FFFFFFFF 		.word	-1
 5765 0990 2D2D0D00 		.ascii	"--\015\000"
 5766 0994 00000000 		.space	4
 5767 0998 00       		.ascii	"\000"
 5768 0999 00000000 		.space	7
 5768      000000
 5769 09a0 2D       		.byte	45
 5770 09a1 000000   		.space	3
 5771 09a4 FFFFFFFF 		.word	-1
 5772 09a8 2E       		.byte	46
 5773 09a9 000000   		.space	3
 5774 09ac FFFFFFFF 		.word	-1
 5775 09b0 43505800 		.ascii	"CPX\000"
 5776 09b4 00000000 		.space	4
 5777 09b8 00       		.ascii	"\000"
 5778 09b9 00000000 		.space	7
 5778      000000
 5779 09c0 4D5F5374 		.ascii	"M_Stats\000"
 5779      61747300 
 5780 09c8 00000000 		.space	7
 5780      000000
 5781 09cf 00       		.space	1
 5782 09d0 1A       		.byte	26
 5783 09d1 000000   		.space	3
 5784 09d4 01000000 		.word	1
 5785 09d8 1A       		.byte	26
 5786 09d9 000000   		.space	3
 5787 09dc 02000000 		.word	2
 5788 09e0 0100     		.ascii	"\001\000"
 5789 09e2 00000000 		.space	6
 5789      0000
 5790 09e8 532E442E 		.ascii	"S.D.\000"
 5790      00
 5791 09ed 000000   		.space	3
 5792 09f0 1B       		.byte	27
 5793 09f1 000000   		.space	3
 5794 09f4 01000000 		.word	1
 5795 09f8 34       		.byte	52
 5796 09f9 000000   		.space	3
 5797 09fc 74020000 		.word	628
 5798 0a00 792D6861 		.ascii	"y-hat\000"
 5798      7400
 5799 0a06 0000     		.space	2
 5800 0a08 782D6861 		.ascii	"x-hat\000"
 5800      7400
 5801 0a0e 0000     		.space	2
 5802 0a10 34       		.byte	52
 5803 0a11 000000   		.space	3
 5804 0a14 27010000 		.word	295
 5805 0a18 34       		.byte	52
 5806 0a19 000000   		.space	3
 5807 0a1c 28010000 		.word	296
 5808 0a20 434F5252 		.ascii	"CORR\000"
 5808      00
 5809 0a25 000000   		.space	3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 150
=======
ARM GAS  /tmp/ccCyL0em.s 			page 150
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5810 0a28 4C2E522E 		.ascii	"L.R.\000"
 5810      00
 5811 0a2d 000000   		.space	3
 5812 0a30 34       		.byte	52
 5813 0a31 000000   		.space	3
 5814 0a34 32010000 		.word	306
 5815 0a38 34       		.byte	52
 5816 0a39 000000   		.space	3
 5817 0a3c 31010000 		.word	305
 5818 0a40 42657374 		.ascii	"BestF\000"
 5818      4600
 5819 0a46 0000     		.space	2
 5820 0a48 4C6F6746 		.ascii	"LogFit\000"
 5820      697400
 5821 0a4f 00       		.space	1
 5822 0a50 34       		.byte	52
 5823 0a51 000000   		.space	3
 5824 0a54 2E010000 		.word	302
 5825 0a58 34       		.byte	52
 5826 0a59 000000   		.space	3
 5827 0a5c 2F010000 		.word	303
 5828 0a60 4C696E65 		.ascii	"Linear\000"
 5828      617200
 5829 0a67 00       		.space	1
 5830 0a68 45787046 		.ascii	"ExpFit\000"
 5830      697400
 5831 0a6f 00       		.space	1
 5832 0a70 2D       		.byte	45
 5833 0a71 000000   		.space	3
 5834 0a74 FFFFFFFF 		.word	-1
 5835 0a78 34       		.byte	52
 5836 0a79 000000   		.space	3
 5837 0a7c 30010000 		.word	304
 5838 0a80 43505800 		.ascii	"CPX\000"
 5839 0a84 00000000 		.space	4
 5840 0a88 50777246 		.ascii	"PwrFit\000"
 5840      697400
 5841 0a8f 00       		.space	1
 5842 0a90 4D5F5365 		.ascii	"M_Setup2\000"
 5842      74757032 
 5842      00
 5843 0a99 00000000 		.space	6
 5843      0000
 5844 0a9f 00       		.space	1
 5845 0aa0 31       		.byte	49
 5846 0aa1 000000   		.space	3
 5847 0aa4 04000000 		.word	4
 5848 0aa8 2E       		.byte	46
 5849 0aa9 000000   		.space	3
 5850 0aac FFFFFFFF 		.word	-1
 5851 0ab0 53764C49 		.ascii	"SvLIB\000"
 5851      4200
 5852 0ab6 0000     		.space	2
 5853 0ab8 00       		.ascii	"\000"
 5854 0ab9 00000000 		.space	7
 5854      000000
 5855 0ac0 31       		.byte	49
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 151
=======
ARM GAS  /tmp/ccCyL0em.s 			page 151
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5856 0ac1 000000   		.space	3
 5857 0ac4 05000000 		.word	5
 5858 0ac8 2E       		.byte	46
 5859 0ac9 000000   		.space	3
 5860 0acc FFFFFFFF 		.word	-1
 5861 0ad0 4C644C49 		.ascii	"LdLIB\000"
 5861      4200
 5862 0ad6 0000     		.space	2
 5863 0ad8 00       		.ascii	"\000"
 5864 0ad9 00000000 		.space	7
 5864      000000
 5865 0ae0 31       		.byte	49
 5866 0ae1 000000   		.space	3
 5867 0ae4 0A000000 		.word	10
 5868 0ae8 34       		.byte	52
 5869 0ae9 000000   		.space	3
 5870 0aec B2010000 		.word	434
 5871 0af0 53764350 		.ascii	"SvCPRG\000"
 5871      524700
 5872 0af7 00       		.space	1
 5873 0af8 5053544F 		.ascii	"PSTO\000"
 5873      00
 5874 0afd 000000   		.space	3
 5875 0b00 31       		.byte	49
 5876 0b01 000000   		.space	3
 5877 0b04 08000000 		.word	8
 5878 0b08 34       		.byte	52
 5879 0b09 000000   		.space	3
 5880 0b0c B1010000 		.word	433
 5881 0b10 4C645052 		.ascii	"LdPRG\000"
 5881      4700
 5882 0b16 0000     		.space	2
 5883 0b18 5052434C 		.ascii	"PRCL\000"
 5883      00
 5884 0b1d 000000   		.space	3
 5885 0b20 2C       		.byte	44
 5886 0b21 000000   		.space	3
 5887 0b24 FFFFFFFF 		.word	-1
 5888 0b28 2E       		.byte	46
 5889 0b29 000000   		.space	3
 5890 0b2c FFFFFFFF 		.word	-1
 5891 0b30 2D2D0D00 		.ascii	"--\015\000"
 5892 0b34 00000000 		.space	4
 5893 0b38 00       		.ascii	"\000"
 5894 0b39 00000000 		.space	7
 5894      000000
 5895 0b40 2D       		.byte	45
 5896 0b41 000000   		.space	3
 5897 0b44 FFFFFFFF 		.word	-1
 5898 0b48 2E       		.byte	46
 5899 0b49 000000   		.space	3
 5900 0b4c FFFFFFFF 		.word	-1
 5901 0b50 43505800 		.ascii	"CPX\000"
 5902 0b54 00000000 		.space	4
 5903 0b58 00       		.ascii	"\000"
 5904 0b59 00000000 		.space	7
 5904      000000
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 152
=======
ARM GAS  /tmp/ccCyL0em.s 			page 152
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5905 0b60 4D5F536F 		.ascii	"M_Solve\000"
 5905      6C766500 
 5906 0b68 00000000 		.space	7
 5906      000000
 5907 0b6f 00       		.space	1
 5908 0b70 20       		.byte	32
 5909 0b71 000000   		.space	3
 5910 0b74 01000000 		.word	1
 5911 0b78 34       		.byte	52
 5912 0b79 000000   		.space	3
 5913 0b7c 00690000 		.word	26880
 5914 0b80 534C5600 		.ascii	"SLV\000"
 5915 0b84 00000000 		.space	4
 5916 0b88 66272878 		.ascii	"f'(x)\000"
 5916      2900
 5917 0b8e 0000     		.space	2
 5918 0b90 20       		.byte	32
 5919 0b91 000000   		.space	3
 5920 0b94 02000000 		.word	2
 5921 0b98 34       		.byte	52
 5922 0b99 000000   		.space	3
 5923 0b9c 006A0000 		.word	27136
 5924 0ba0 04206478 		.ascii	"\004 dx\000"
 5924      00
 5925 0ba5 000000   		.space	3
 5926 0ba8 66272728 		.ascii	"f''(x)\000"
 5926      782900
 5927 0baf 00       		.space	1
 5928 0bb0 21       		.byte	33
 5929 0bb1 000000   		.space	3
 5930 0bb4 02000000 		.word	2
 5931 0bb8 2E       		.byte	46
 5932 0bb9 000000   		.space	3
 5933 0bbc FFFFFFFF 		.word	-1
 5934 0bc0 53554D00 		.ascii	"SUM\000"
 5935 0bc4 00000000 		.space	4
 5936 0bc8 00       		.ascii	"\000"
 5937 0bc9 00000000 		.space	7
 5937      000000
 5938 0bd0 21       		.byte	33
 5939 0bd1 000000   		.space	3
 5940 0bd4 01000000 		.word	1
 5941 0bd8 2E       		.byte	46
 5942 0bd9 000000   		.space	3
 5943 0bdc FFFFFFFF 		.word	-1
 5944 0be0 50524F44 		.ascii	"PROD\000"
 5944      00
 5945 0be5 000000   		.space	3
 5946 0be8 00       		.ascii	"\000"
 5947 0be9 00000000 		.space	7
 5947      000000
 5948 0bf0 2C       		.byte	44
 5949 0bf1 000000   		.space	3
 5950 0bf4 FFFFFFFF 		.word	-1
 5951 0bf8 2E       		.byte	46
 5952 0bf9 000000   		.space	3
 5953 0bfc FFFFFFFF 		.word	-1
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 153
=======
ARM GAS  /tmp/ccCyL0em.s 			page 153
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 5954 0c00 2D2D0D00 		.ascii	"--\015\000"
 5955 0c04 00000000 		.space	4
 5956 0c08 00       		.ascii	"\000"
 5957 0c09 00000000 		.space	7
 5957      000000
 5958 0c10 2D       		.byte	45
 5959 0c11 000000   		.space	3
 5960 0c14 FFFFFFFF 		.word	-1
 5961 0c18 2E       		.byte	46
 5962 0c19 000000   		.space	3
 5963 0c1c FFFFFFFF 		.word	-1
 5964 0c20 43505800 		.ascii	"CPX\000"
 5965 0c24 00000000 		.space	4
 5966 0c28 00       		.ascii	"\000"
 5967 0c29 00000000 		.space	7
 5967      000000
 5968 0c30 4D5F426C 		.ascii	"M_Blank2\000"
 5968      616E6B32 
 5968      00
 5969 0c39 00000000 		.space	6
 5969      0000
 5970 0c3f 00       		.space	1
 5971 0c40 28       		.byte	40
 5972 0c41 000000   		.space	3
 5973 0c44 03000000 		.word	3
 5974 0c48 2E       		.byte	46
 5975 0c49 000000   		.space	3
 5976 0c4c FFFFFFFF 		.word	-1
 5977 0c50 912B00   		.ascii	"\221+\000"
 5978 0c53 00000000 		.space	5
 5978      00
 5979 0c58 00       		.ascii	"\000"
 5980 0c59 00000000 		.space	7
 5980      000000
 5981 0c60 16       		.byte	22
 5982 0c61 000000   		.space	3
 5983 0c64 01000000 		.word	1
 5984 0c68 2E       		.byte	46
 5985 0c69 000000   		.space	3
 5986 0c6c FFFFFFFF 		.word	-1
 5987 0c70 312F5800 		.ascii	"1/X\000"
 5988 0c74 00000000 		.space	4
 5989 0c78 00       		.ascii	"\000"
 5990 0c79 00000000 		.space	7
 5990      000000
 5991 0c80 1C       		.byte	28
 5992 0c81 000000   		.space	3
 5993 0c84 01000000 		.word	1
 5994 0c88 2E       		.byte	46
 5995 0c89 000000   		.space	3
 5996 0c8c FFFFFFFF 		.word	-1
 5997 0c90 035800   		.ascii	"\003X\000"
 5998 0c93 00000000 		.space	5
 5998      00
 5999 0c98 00       		.ascii	"\000"
 6000 0c99 00000000 		.space	7
 6000      000000
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 154
=======
ARM GAS  /tmp/ccCyL0em.s 			page 154
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6001 0ca0 13       		.byte	19
 6002 0ca1 000000   		.space	3
 6003 0ca4 02000000 		.word	2
 6004 0ca8 2E       		.byte	46
 6005 0ca9 000000   		.space	3
 6006 0cac FFFFFFFF 		.word	-1
 6007 0cb0 4C4F4700 		.ascii	"LOG\000"
 6008 0cb4 00000000 		.space	4
 6009 0cb8 00       		.ascii	"\000"
 6010 0cb9 00000000 		.space	7
 6010      000000
 6011 0cc0 2C       		.byte	44
 6012 0cc1 000000   		.space	3
 6013 0cc4 FFFFFFFF 		.word	-1
 6014 0cc8 2E       		.byte	46
 6015 0cc9 000000   		.space	3
 6016 0ccc FFFFFFFF 		.word	-1
 6017 0cd0 2D2D0D00 		.ascii	"--\015\000"
 6018 0cd4 00000000 		.space	4
 6019 0cd8 00       		.ascii	"\000"
 6020 0cd9 00000000 		.space	7
 6020      000000
 6021 0ce0 2D       		.byte	45
 6022 0ce1 000000   		.space	3
 6023 0ce4 FFFFFFFF 		.word	-1
 6024 0ce8 2E       		.byte	46
 6025 0ce9 000000   		.space	3
 6026 0cec FFFFFFFF 		.word	-1
 6027 0cf0 43505800 		.ascii	"CPX\000"
 6028 0cf4 00000000 		.space	4
 6029 0cf8 00       		.ascii	"\000"
 6030 0cf9 00000000 		.space	7
 6030      000000
 6031 0d00 4D5F416C 		.ascii	"M_Alpha\000"
 6031      70686100 
 6032 0d08 00000000 		.space	7
 6032      000000
 6033 0d0f 00       		.space	1
 6034 0d10 34       		.byte	52
 6035 0d11 000000   		.space	3
 6036 0d14 78010000 		.word	376
 6037 0d18 34       		.byte	52
 6038 0d19 000000   		.space	3
 6039 0d1c 6D010000 		.word	365
 6040 0d20 582D3EA0 		.ascii	"X->\240\000"
 6040      00
 6041 0d25 000000   		.space	3
 6042 0d28 A054494D 		.ascii	"\240TIME\000"
 6042      4500
 6043 0d2e 0000     		.space	2
 6044 0d30 34       		.byte	52
 6045 0d31 000000   		.space	3
 6046 0d34 77010000 		.word	375
 6047 0d38 34       		.byte	52
 6048 0d39 000000   		.space	3
 6049 0d3c 6C010000 		.word	364
 6050 0d40 A02D3E58 		.ascii	"\240->X\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 155
=======
ARM GAS  /tmp/ccCyL0em.s 			page 155
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6050      00
 6051 0d45 000000   		.space	3
 6052 0d48 A0444154 		.ascii	"\240DATE\000"
 6052      4500
 6053 0d4e 0000     		.space	2
 6054 0d50 34       		.byte	52
 6055 0d51 000000   		.space	3
 6056 0d54 00480000 		.word	18432
 6057 0d58 34       		.byte	52
 6058 0d59 000000   		.space	3
 6059 0d5c 6A010000 		.word	362
 6060 0d60 A0495000 		.ascii	"\240IP\000"
 6061 0d64 00000000 		.space	4
 6062 0d68 A0444159 		.ascii	"\240DAY\000"
 6062      00
 6063 0d6d 000000   		.space	3
 6064 0d70 34       		.byte	52
 6065 0d71 000000   		.space	3
 6066 0d74 76010000 		.word	374
 6067 0d78 34       		.byte	52
 6068 0d79 000000   		.space	3
 6069 0d7c 6B010000 		.word	363
 6070 0d80 A04C454E 		.ascii	"\240LENG\000"
 6070      4700
 6071 0d86 0000     		.space	2
 6072 0d88 A04D4E54 		.ascii	"\240MNTH\000"
 6072      4800
 6073 0d8e 0000     		.space	2
 6074 0d90 2C       		.byte	44
 6075 0d91 000000   		.space	3
 6076 0d94 FFFFFFFF 		.word	-1
 6077 0d98 2C       		.byte	44
 6078 0d99 000000   		.space	3
 6079 0d9c 01000000 		.word	1
 6080 0da0 2D2D0D00 		.ascii	"--\015\000"
 6081 0da4 00000000 		.space	4
 6082 0da8 00       		.ascii	"\000"
 6083 0da9 00000000 		.space	7
 6083      000000
 6084 0db0 2D       		.byte	45
 6085 0db1 000000   		.space	3
 6086 0db4 FFFFFFFF 		.word	-1
 6087 0db8 2D       		.byte	45
 6088 0db9 000000   		.space	3
 6089 0dbc 01000000 		.word	1
 6090 0dc0 43505800 		.ascii	"CPX\000"
 6091 0dc4 00000000 		.space	4
 6092 0dc8 00       		.ascii	"\000"
 6093 0dc9 00000000 		.space	7
 6093      000000
 6094 0dd0 4D5F435F 		.ascii	"M_C_Lock\000"
 6094      4C6F636B 
 6094      00
 6095 0dd9 00000000 		.space	6
 6095      0000
 6096 0ddf 00       		.space	1
 6097 0de0 18       		.byte	24
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 156
=======
ARM GAS  /tmp/ccCyL0em.s 			page 156
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6098 0de1 000000   		.space	3
 6099 0de4 02000000 		.word	2
 6100 0de8 04       		.byte	4
 6101 0de9 000000   		.space	3
 6102 0dec 02000000 		.word	2
 6103 0df0 504F4C41 		.ascii	"POLAR\000"
 6103      5200
 6104 0df6 0000     		.space	2
 6105 0df8 0D205000 		.ascii	"\015 P\000"
 6106 0dfc 00000000 		.space	4
 6107 0e00 18       		.byte	24
 6108 0e01 000000   		.space	3
 6109 0e04 01000000 		.word	1
 6110 0e08 04       		.byte	4
 6111 0e09 000000   		.space	3
 6112 0e0c 01000000 		.word	1
 6113 0e10 52454354 		.ascii	"RECT\000"
 6113      00
 6114 0e15 000000   		.space	3
 6115 0e18 0D205200 		.ascii	"\015 R\000"
 6116 0e1c 00000000 		.space	4
 6117 0e20 0E       		.byte	14
 6118 0e21 000000   		.space	3
 6119 0e24 01000000 		.word	1
 6120 0e28 0E       		.byte	14
 6121 0e29 000000   		.space	3
 6122 0e2c 03000000 		.word	3
 6123 0e30 2B2F2D06 		.ascii	"+/-\006Im\000"
 6123      496D00
 6124 0e37 00       		.space	1
 6125 0e38 2B2F2D06 		.ascii	"+/-\006Re\000"
 6125      526500
 6126 0e3f 00       		.space	1
 6127 0e40 0D       		.byte	13
 6128 0e41 000000   		.space	3
 6129 0e44 02000000 		.word	2
 6130 0e48 00       		.byte	0
 6131 0e49 000000   		.space	3
 6132 0e4c 01000000 		.word	1
 6133 0e50 52651749 		.ascii	"Re\027Im\000"
 6133      6D00
 6134 0e56 0000     		.space	2
 6135 0e58 48595000 		.ascii	"HYP\000"
 6136 0e5c 00000000 		.space	4
 6137 0e60 2C       		.byte	44
 6138 0e61 000000   		.space	3
 6139 0e64 FFFFFFFF 		.word	-1
 6140 0e68 0F       		.byte	15
 6141 0e69 000000   		.space	3
 6142 0e6c 01000000 		.word	1
 6143 0e70 2D2D0D00 		.ascii	"--\015\000"
 6144 0e74 00000000 		.space	4
 6145 0e78 1106AF00 		.ascii	"\021\006\257\000"
 6146 0e7c 00000000 		.space	4
 6147 0e80 2D       		.byte	45
 6148 0e81 000000   		.space	3
 6149 0e84 FFFFFFFF 		.word	-1
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 157
=======
ARM GAS  /tmp/ccCyL0em.s 			page 157
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6150 0e88 0C       		.byte	12
 6151 0e89 000000   		.space	3
 6152 0e8c 01000000 		.word	1
 6153 0e90 43505800 		.ascii	"CPX\000"
 6154 0e94 00000000 		.space	4
 6155 0e98 1106434E 		.ascii	"\021\006CNST\000"
 6155      535400
 6156 0e9f 00       		.space	1
 6157 0ea0 4D5F436C 		.ascii	"M_Clear_C\000"
 6157      6561725F 
 6157      4300
 6158 0eaa 00000000 		.space	5
 6158      00
 6159 0eaf 00       		.space	1
 6160 0eb0 2E       		.byte	46
 6161 0eb1 000000   		.space	3
 6162 0eb4 FFFFFFFF 		.word	-1
 6163 0eb8 2E       		.byte	46
 6164 0eb9 000000   		.space	3
 6165 0ebc FFFFFFFF 		.word	-1
 6166 0ec0 00       		.ascii	"\000"
 6167 0ec1 00000000 		.space	7
 6167      000000
 6168 0ec8 00       		.ascii	"\000"
 6169 0ec9 00000000 		.space	7
 6169      000000
 6170 0ed0 2E       		.byte	46
 6171 0ed1 000000   		.space	3
 6172 0ed4 FFFFFFFF 		.word	-1
 6173 0ed8 2E       		.byte	46
 6174 0ed9 000000   		.space	3
 6175 0edc FFFFFFFF 		.word	-1
 6176 0ee0 00       		.ascii	"\000"
 6177 0ee1 00000000 		.space	7
 6177      000000
 6178 0ee8 00       		.ascii	"\000"
 6179 0ee9 00000000 		.space	7
 6179      000000
 6180 0ef0 10       		.byte	16
 6181 0ef1 000000   		.space	3
 6182 0ef4 03000000 		.word	3
 6183 0ef8 34       		.byte	52
 6184 0ef9 000000   		.space	3
 6185 0efc 74010000 		.word	372
 6186 0f00 434C7800 		.ascii	"CLx\000"
 6187 0f04 00000000 		.space	4
 6188 0f08 434C06A0 		.ascii	"CL\006\240\000"
 6188      00
 6189 0f0d 000000   		.space	3
 6190 0f10 34       		.byte	52
 6191 0f11 000000   		.space	3
 6192 0f14 40010000 		.word	320
 6193 0f18 2E       		.byte	46
 6194 0f19 000000   		.space	3
 6195 0f1c FFFFFFFF 		.word	-1
 6196 0f20 434C5374 		.ascii	"CLStk\000"
 6196      6B00
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 158
=======
ARM GAS  /tmp/ccCyL0em.s 			page 158
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6197 0f26 0000     		.space	2
 6198 0f28 00       		.ascii	"\000"
 6199 0f29 00000000 		.space	7
 6199      000000
 6200 0f30 2C       		.byte	44
 6201 0f31 000000   		.space	3
 6202 0f34 FFFFFFFF 		.word	-1
 6203 0f38 2E       		.byte	46
 6204 0f39 000000   		.space	3
 6205 0f3c FFFFFFFF 		.word	-1
 6206 0f40 2D2D0D00 		.ascii	"--\015\000"
 6207 0f44 00000000 		.space	4
 6208 0f48 00       		.ascii	"\000"
 6209 0f49 00000000 		.space	7
 6209      000000
 6210 0f50 2D       		.byte	45
 6211 0f51 000000   		.space	3
 6212 0f54 FFFFFFFF 		.word	-1
 6213 0f58 2E       		.byte	46
 6214 0f59 000000   		.space	3
 6215 0f5c FFFFFFFF 		.word	-1
 6216 0f60 43505800 		.ascii	"CPX\000"
 6217 0f64 00000000 		.space	4
 6218 0f68 00       		.ascii	"\000"
 6219 0f69 00000000 		.space	7
 6219      000000
 6220 0f70 4D5F5377 		.ascii	"M_Swap_C\000"
 6220      61705F43 
 6220      00
 6221 0f79 00000000 		.space	6
 6221      0000
 6222 0f7f 00       		.space	1
 6223 0f80 0D       		.byte	13
 6224 0f81 000000   		.space	3
 6225 0f84 01000000 		.word	1
 6226 0f88 2E       		.byte	46
 6227 0f89 000000   		.space	3
 6228 0f8c FFFFFFFF 		.word	-1
 6229 0f90 53686F77 		.ascii	"Show\016\000"
 6229      0E00
 6230 0f96 0000     		.space	2
 6231 0f98 00       		.ascii	"\000"
 6232 0f99 00000000 		.space	7
 6232      000000
 6233 0fa0 0D       		.byte	13
 6234 0fa1 000000   		.space	3
 6235 0fa4 02000000 		.word	2
 6236 0fa8 2E       		.byte	46
 6237 0fa9 000000   		.space	3
 6238 0fac FFFFFFFF 		.word	-1
 6239 0fb0 53686F77 		.ascii	"Show\015\000"
 6239      0D00
 6240 0fb6 0000     		.space	2
 6241 0fb8 00       		.ascii	"\000"
 6242 0fb9 00000000 		.space	7
 6242      000000
 6243 0fc0 0D       		.byte	13
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 159
=======
ARM GAS  /tmp/ccCyL0em.s 			page 159
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6244 0fc1 000000   		.space	3
 6245 0fc4 03000000 		.word	3
 6246 0fc8 2E       		.byte	46
 6247 0fc9 000000   		.space	3
 6248 0fcc FFFFFFFF 		.word	-1
 6249 0fd0 78173F00 		.ascii	"x\027?\000"
 6250 0fd4 00000000 		.space	4
 6251 0fd8 00       		.ascii	"\000"
 6252 0fd9 00000000 		.space	7
 6252      000000
 6253 0fe0 2E       		.byte	46
 6254 0fe1 000000   		.space	3
 6255 0fe4 FFFFFFFF 		.word	-1
 6256 0fe8 2E       		.byte	46
 6257 0fe9 000000   		.space	3
 6258 0fec FFFFFFFF 		.word	-1
 6259 0ff0 00       		.ascii	"\000"
 6260 0ff1 00000000 		.space	7
 6260      000000
 6261 0ff8 00       		.ascii	"\000"
 6262 0ff9 00000000 		.space	7
 6262      000000
 6263 1000 2C       		.byte	44
 6264 1001 000000   		.space	3
 6265 1004 FFFFFFFF 		.word	-1
 6266 1008 2E       		.byte	46
 6267 1009 000000   		.space	3
 6268 100c FFFFFFFF 		.word	-1
 6269 1010 2D2D0D00 		.ascii	"--\015\000"
 6270 1014 00000000 		.space	4
 6271 1018 00       		.ascii	"\000"
 6272 1019 00000000 		.space	7
 6272      000000
 6273 1020 2D       		.byte	45
 6274 1021 000000   		.space	3
 6275 1024 FFFFFFFF 		.word	-1
 6276 1028 2E       		.byte	46
 6277 1029 000000   		.space	3
 6278 102c FFFFFFFF 		.word	-1
 6279 1030 43505800 		.ascii	"CPX\000"
 6280 1034 00000000 		.space	4
 6281 1038 00       		.ascii	"\000"
 6282 1039 00000000 		.space	7
 6282      000000
 6283 1040 4D5F4172 		.ascii	"M_Arrow_C\000"
 6283      726F775F 
 6283      4300
 6284 104a 00000000 		.space	5
 6284      00
 6285 104f 00       		.space	1
 6286 1050 2E       		.byte	46
 6287 1051 000000   		.space	3
 6288 1054 FFFFFFFF 		.word	-1
 6289 1058 06       		.byte	6
 6290 1059 000000   		.space	3
 6291 105c 02000000 		.word	2
 6292 1060 00       		.ascii	"\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 160
=======
ARM GAS  /tmp/ccCyL0em.s 			page 160
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6293 1061 00000000 		.space	7
 6293      000000
 6294 1068 44454700 		.ascii	"DEG\000"
 6295 106c 00000000 		.space	4
 6296 1070 2E       		.byte	46
 6297 1071 000000   		.space	3
 6298 1074 FFFFFFFF 		.word	-1
 6299 1078 07       		.byte	7
 6300 1079 000000   		.space	3
 6301 107c 02000000 		.word	2
 6302 1080 00       		.ascii	"\000"
 6303 1081 00000000 		.space	7
 6303      000000
 6304 1088 52414400 		.ascii	"RAD\000"
 6305 108c 00000000 		.space	4
 6306 1090 2E       		.byte	46
 6307 1091 000000   		.space	3
 6308 1094 FFFFFFFF 		.word	-1
 6309 1098 08       		.byte	8
 6310 1099 000000   		.space	3
 6311 109c 02000000 		.word	2
 6312 10a0 00       		.ascii	"\000"
 6313 10a1 00000000 		.space	7
 6313      000000
 6314 10a8 47726164 		.ascii	"Grad\000"
 6314      00
 6315 10ad 000000   		.space	3
 6316 10b0 2E       		.byte	46
 6317 10b1 000000   		.space	3
 6318 10b4 FFFFFFFF 		.word	-1
 6319 10b8 06       		.byte	6
 6320 10b9 000000   		.space	3
 6321 10bc 01000000 		.word	1
 6322 10c0 00       		.ascii	"\000"
 6323 10c1 00000000 		.space	7
 6323      000000
 6324 10c8 0D484D53 		.ascii	"\015HMS\000"
 6324      00
 6325 10cd 000000   		.space	3
 6326 10d0 2C       		.byte	44
 6327 10d1 000000   		.space	3
 6328 10d4 FFFFFFFF 		.word	-1
 6329 10d8 07       		.byte	7
 6330 10d9 000000   		.space	3
 6331 10dc 01000000 		.word	1
 6332 10e0 2D2D0D00 		.ascii	"--\015\000"
 6333 10e4 00000000 		.space	4
 6334 10e8 484D530D 		.ascii	"HMS\015\000"
 6334      00
 6335 10ed 000000   		.space	3
 6336 10f0 2D       		.byte	45
 6337 10f1 000000   		.space	3
 6338 10f4 FFFFFFFF 		.word	-1
 6339 10f8 2E       		.byte	46
 6340 10f9 000000   		.space	3
 6341 10fc FFFFFFFF 		.word	-1
 6342 1100 43505800 		.ascii	"CPX\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 161
=======
ARM GAS  /tmp/ccCyL0em.s 			page 161
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6343 1104 00000000 		.space	4
 6344 1108 00       		.ascii	"\000"
 6345 1109 00000000 		.space	7
 6345      000000
 6346 1110 4D5F5072 		.ascii	"M_Prob_C\000"
 6346      6F625F43 
 6346      00
 6347 1119 00000000 		.space	6
 6347      0000
 6348 111f 00       		.space	1
 6349 1120 18       		.byte	24
 6350 1121 000000   		.space	3
 6351 1124 03000000 		.word	3
 6352 1128 34       		.byte	52
 6353 1129 000000   		.space	3
 6354 112c 31050000 		.word	1329
 6355 1130 14062100 		.ascii	"\024\006!\000"
 6356 1134 00000000 		.space	4
 6357 1138 14064C6E 		.ascii	"\024\006Ln\006\202\000"
 6357      068200
 6358 113f 00       		.space	1
 6359 1140 34       		.byte	52
 6360 1141 000000   		.space	3
 6361 1144 12060000 		.word	1554
 6362 1148 2E       		.byte	46
 6363 1149 000000   		.space	3
 6364 114c FFFFFFFF 		.word	-1
 6365 1150 14064379 		.ascii	"\024\006Cy,x\000"
 6365      2C7800
 6366 1157 00       		.space	1
 6367 1158 00       		.ascii	"\000"
 6368 1159 00000000 		.space	7
 6368      000000
 6369 1160 34       		.byte	52
 6370 1161 000000   		.space	3
 6371 1164 13060000 		.word	1555
 6372 1168 2E       		.byte	46
 6373 1169 000000   		.space	3
 6374 116c FFFFFFFF 		.word	-1
 6375 1170 14065079 		.ascii	"\024\006Py,x\000"
 6375      2C7800
 6376 1177 00       		.space	1
 6377 1178 00       		.ascii	"\000"
 6378 1179 00000000 		.space	7
 6378      000000
 6379 1180 2E       		.byte	46
 6380 1181 000000   		.space	3
 6381 1184 FFFFFFFF 		.word	-1
 6382 1188 2E       		.byte	46
 6383 1189 000000   		.space	3
 6384 118c FFFFFFFF 		.word	-1
 6385 1190 00       		.ascii	"\000"
 6386 1191 00000000 		.space	7
 6386      000000
 6387 1198 00       		.ascii	"\000"
 6388 1199 00000000 		.space	7
 6388      000000
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 162
=======
ARM GAS  /tmp/ccCyL0em.s 			page 162
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6389 11a0 2C       		.byte	44
 6390 11a1 000000   		.space	3
 6391 11a4 FFFFFFFF 		.word	-1
 6392 11a8 2E       		.byte	46
 6393 11a9 000000   		.space	3
 6394 11ac FFFFFFFF 		.word	-1
 6395 11b0 2D2D0D00 		.ascii	"--\015\000"
 6396 11b4 00000000 		.space	4
 6397 11b8 00       		.ascii	"\000"
 6398 11b9 00000000 		.space	7
 6398      000000
 6399 11c0 2D       		.byte	45
 6400 11c1 000000   		.space	3
 6401 11c4 FFFFFFFF 		.word	-1
 6402 11c8 2E       		.byte	46
 6403 11c9 000000   		.space	3
 6404 11cc FFFFFFFF 		.word	-1
 6405 11d0 43505800 		.ascii	"CPX\000"
 6406 11d4 00000000 		.space	4
 6407 11d8 00       		.ascii	"\000"
 6408 11d9 00000000 		.space	7
 6408      000000
 6409 11e0 4D5F426C 		.ascii	"M_Blank2_C\000"
 6409      616E6B32 
 6409      5F4300
 6410 11eb 00000000 		.space	4
 6411 11ef 00       		.space	1
 6412 11f0 00       		.byte	0
 6413 11f1 000000   		.space	3
 6414 11f4 01000000 		.word	1
 6415 11f8 2E       		.byte	46
 6416 11f9 000000   		.space	3
 6417 11fc FFFFFFFF 		.word	-1
 6418 1200 48595000 		.ascii	"HYP\000"
 6419 1204 00000000 		.space	4
 6420 1208 00       		.ascii	"\000"
 6421 1209 00000000 		.space	7
 6421      000000
 6422 1210 16       		.byte	22
 6423 1211 000000   		.space	3
 6424 1214 01000000 		.word	1
 6425 1218 2E       		.byte	46
 6426 1219 000000   		.space	3
 6427 121c FFFFFFFF 		.word	-1
 6428 1220 312F5800 		.ascii	"1/X\000"
 6429 1224 00000000 		.space	4
 6430 1228 00       		.ascii	"\000"
 6431 1229 00000000 		.space	7
 6431      000000
 6432 1230 1C       		.byte	28
 6433 1231 000000   		.space	3
 6434 1234 01000000 		.word	1
 6435 1238 2E       		.byte	46
 6436 1239 000000   		.space	3
 6437 123c FFFFFFFF 		.word	-1
 6438 1240 035800   		.ascii	"\003X\000"
 6439 1243 00000000 		.space	5
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 163
=======
ARM GAS  /tmp/ccCyL0em.s 			page 163
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6439      00
 6440 1248 00       		.ascii	"\000"
 6441 1249 00000000 		.space	7
 6441      000000
 6442 1250 13       		.byte	19
 6443 1251 000000   		.space	3
 6444 1254 02000000 		.word	2
 6445 1258 2E       		.byte	46
 6446 1259 000000   		.space	3
 6447 125c FFFFFFFF 		.word	-1
 6448 1260 4C4F4700 		.ascii	"LOG\000"
 6449 1264 00000000 		.space	4
 6450 1268 00       		.ascii	"\000"
 6451 1269 00000000 		.space	7
 6451      000000
 6452 1270 2C       		.byte	44
 6453 1271 000000   		.space	3
 6454 1274 FFFFFFFF 		.word	-1
 6455 1278 2E       		.byte	46
 6456 1279 000000   		.space	3
 6457 127c FFFFFFFF 		.word	-1
 6458 1280 2D2D0D00 		.ascii	"--\015\000"
 6459 1284 00000000 		.space	4
 6460 1288 00       		.ascii	"\000"
 6461 1289 00000000 		.space	7
 6461      000000
 6462 1290 2D       		.byte	45
 6463 1291 000000   		.space	3
 6464 1294 FFFFFFFF 		.word	-1
 6465 1298 2E       		.byte	46
 6466 1299 000000   		.space	3
 6467 129c FFFFFFFF 		.word	-1
 6468 12a0 43505800 		.ascii	"CPX\000"
 6469 12a4 00000000 		.space	4
 6470 12a8 00       		.ascii	"\000"
 6471 12a9 00000000 		.space	7
 6471      000000
 6472 12b0 4D5F4D69 		.ascii	"M_Misc_C\000"
 6472      73635F43 
 6472      00
 6473 12b9 00000000 		.space	6
 6473      0000
 6474 12bf 00       		.space	1
 6475 12c0 25       		.byte	37
 6476 12c1 000000   		.space	3
 6477 12c4 01000000 		.word	1
 6478 12c8 14       		.byte	20
 6479 12c9 000000   		.space	3
 6480 12cc 01000000 		.word	1
 6481 12d0 7C7A7C00 		.ascii	"|z|\000"
 6482 12d4 00000000 		.space	4
 6483 12d8 14329C00 		.ascii	"\0242\234\000"
 6484 12dc 00000000 		.space	4
 6485 12e0 25       		.byte	37
 6486 12e1 000000   		.space	3
 6487 12e4 02000000 		.word	2
 6488 12e8 14       		.byte	20
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 164
=======
ARM GAS  /tmp/ccCyL0em.s 			page 164
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6489 12e9 000000   		.space	3
 6490 12ec 02000000 		.word	2
 6491 12f0 524E4400 		.ascii	"RND\000"
 6492 12f4 00000000 		.space	4
 6493 12f8 144C6F67 		.ascii	"\024Log\272\000"
 6493      BA00
 6494 12fe 0000     		.space	2
 6495 1300 26       		.byte	38
 6496 1301 000000   		.space	3
 6497 1304 01000000 		.word	1
 6498 1308 15       		.byte	21
 6499 1309 000000   		.space	3
 6500 130c 02000000 		.word	2
 6501 1310 300D5265 		.ascii	"0\015Re\000"
 6501      00
 6502 1315 000000   		.space	3
 6503 1318 144C6F67 		.ascii	"\024Log\213\000"
 6503      8B00
 6504 131e 0000     		.space	2
 6505 1320 26       		.byte	38
 6506 1321 000000   		.space	3
 6507 1324 02000000 		.word	2
 6508 1328 16       		.byte	22
 6509 1329 000000   		.space	3
 6510 132c 02000000 		.word	2
 6511 1330 300D496D 		.ascii	"0\015Im\000"
 6511      00
 6512 1335 000000   		.space	3
 6513 1338 147C7C65 		.ascii	"\024||el\000"
 6513      6C00
 6514 133e 0000     		.space	2
 6515 1340 2C       		.byte	44
 6516 1341 000000   		.space	3
 6517 1344 FFFFFFFF 		.word	-1
 6518 1348 1C       		.byte	28
 6519 1349 000000   		.space	3
 6520 134c 03000000 		.word	3
 6521 1350 2D2D0D00 		.ascii	"--\015\000"
 6522 1354 00000000 		.space	4
 6523 1358 142E1C00 		.ascii	"\024.\034\000"
 6524 135c 00000000 		.space	4
 6525 1360 2D       		.byte	45
 6526 1361 000000   		.space	3
 6527 1364 FFFFFFFF 		.word	-1
 6528 1368 16       		.byte	22
 6529 1369 000000   		.space	3
 6530 136c 03000000 		.word	3
 6531 1370 43505800 		.ascii	"CPX\000"
 6532 1374 00000000 		.space	4
 6533 1378 142E2F00 		.ascii	"\024./\000"
 6534 137c 00000000 		.space	4
 6535 1380 4D5F5573 		.ascii	"M_Usermenu\000"
 6535      65726D65 
 6535      6E7500
 6536 138b 00000000 		.space	4
 6537 138f 00       		.space	1
 6538 1390 34       		.byte	52
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 165
=======
ARM GAS  /tmp/ccCyL0em.s 			page 165
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6539 1391 000000   		.space	3
 6540 1394 00FB0000 		.word	64256
 6541 1398 2E       		.byte	46
 6542 1399 000000   		.space	3
 6543 139c FFFFFFFF 		.word	-1
 6544 13a0 554D454E 		.ascii	"UMEN\000"
 6544      00
 6545 13a5 000000   		.space	3
 6546 13a8 00       		.ascii	"\000"
 6547 13a9 00000000 		.space	7
 6547      000000
 6548 13b0 34       		.byte	52
 6549 13b1 000000   		.space	3
 6550 13b4 55FB4D31 		.word	827194197
 6551 13b8 34       		.byte	52
 6552 13b9 000000   		.space	3
 6553 13bc 55FB4D34 		.word	877525845
 6554 13c0 554D3100 		.ascii	"UM1\000"
 6555 13c4 00000000 		.space	4
 6556 13c8 554D3400 		.ascii	"UM4\000"
 6557 13cc 00000000 		.space	4
 6558 13d0 34       		.byte	52
 6559 13d1 000000   		.space	3
 6560 13d4 55FB4D32 		.word	843971413
 6561 13d8 34       		.byte	52
 6562 13d9 000000   		.space	3
 6563 13dc 55FB4D35 		.word	894303061
 6564 13e0 554D3200 		.ascii	"UM2\000"
 6565 13e4 00000000 		.space	4
 6566 13e8 554D3500 		.ascii	"UM5\000"
 6567 13ec 00000000 		.space	4
 6568 13f0 34       		.byte	52
 6569 13f1 000000   		.space	3
 6570 13f4 55FB4D33 		.word	860748629
 6571 13f8 34       		.byte	52
 6572 13f9 000000   		.space	3
 6573 13fc 55FB4D36 		.word	911080277
 6574 1400 554D3300 		.ascii	"UM3\000"
 6575 1404 00000000 		.space	4
 6576 1408 554D3600 		.ascii	"UM6\000"
 6577 140c 00000000 		.space	4
 6578 1410 2C       		.byte	44
 6579 1411 000000   		.space	3
 6580 1414 FFFFFFFF 		.word	-1
 6581 1418 1C       		.byte	28
 6582 1419 000000   		.space	3
 6583 141c 03000000 		.word	3
 6584 1420 2D2D0D00 		.ascii	"--\015\000"
 6585 1424 00000000 		.space	4
 6586 1428 00       		.ascii	"\000"
 6587 1429 00000000 		.space	7
 6587      000000
 6588 1430 2D       		.byte	45
 6589 1431 000000   		.space	3
 6590 1434 FFFFFFFF 		.word	-1
 6591 1438 16       		.byte	22
 6592 1439 000000   		.space	3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 166
=======
ARM GAS  /tmp/ccCyL0em.s 			page 166
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6593 143c 03000000 		.word	3
 6594 1440 43505800 		.ascii	"CPX\000"
 6595 1444 00000000 		.space	4
 6596 1448 00       		.ascii	"\000"
 6597 1449 00000000 		.space	7
 6597      000000
 6598 1450 4D5F5072 		.ascii	"M_Print\000"
 6598      696E7400 
 6599 1458 00000000 		.space	7
 6599      000000
 6600 145f 00       		.space	1
 6601 1460 34       		.byte	52
 6602 1461 000000   		.space	3
 6603 1464 D9010000 		.word	473
 6604 1468 34       		.byte	52
 6605 1469 000000   		.space	3
 6606 146c DA010000 		.word	474
 6607 1470 92064F6E 		.ascii	"\222\006On\000"
 6607      00
 6608 1475 000000   		.space	3
 6609 1478 92064F66 		.ascii	"\222\006Off\000"
 6609      6600
 6610 147e 0000     		.space	2
 6611 1480 34       		.byte	52
 6612 1481 000000   		.space	3
 6613 1484 00AF0000 		.word	44800
 6614 1488 34       		.byte	52
 6615 1489 000000   		.space	3
 6616 148c 00B60000 		.word	46592
 6617 1490 92064D6F 		.ascii	"\222\006Mode\000"
 6617      646500
 6618 1497 00       		.space	1
 6619 1498 92064462 		.ascii	"\222\006DbSp\000"
 6619      537000
 6620 149f 00       		.space	1
 6621 14a0 34       		.byte	52
 6622 14a1 000000   		.space	3
 6623 14a4 BC010000 		.word	444
 6624 14a8 34       		.byte	52
 6625 14a9 000000   		.space	3
 6626 14ac BD010000 		.word	445
 6627 14b0 92065072 		.ascii	"\222\006Prog\000"
 6627      6F6700
 6628 14b7 00       		.space	1
 6629 14b8 92065265 		.ascii	"\222\006Regs\000"
 6629      677300
 6630 14bf 00       		.space	1
 6631 14c0 34       		.byte	52
 6632 14c1 000000   		.space	3
 6633 14c4 BE010000 		.word	446
 6634 14c8 34       		.byte	52
 6635 14c9 000000   		.space	3
 6636 14cc BF010000 		.word	447
 6637 14d0 92065374 		.ascii	"\222\006Stk\000"
 6637      6B00
 6638 14d6 0000     		.space	2
 6639 14d8 92069100 		.ascii	"\222\006\221\000"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 167
=======
ARM GAS  /tmp/ccCyL0em.s 			page 167
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6640 14dc 00000000 		.space	4
 6641 14e0 2C       		.byte	44
 6642 14e1 000000   		.space	3
 6643 14e4 FFFFFFFF 		.word	-1
 6644 14e8 34       		.byte	52
 6645 14e9 000000   		.space	3
 6646 14ec C0010000 		.word	448
 6647 14f0 2D2D0D00 		.ascii	"--\015\000"
 6648 14f4 00000000 		.space	4
 6649 14f8 9206A000 		.ascii	"\222\006\240\000"
 6650 14fc 00000000 		.space	4
 6651 1500 2D       		.byte	45
 6652 1501 000000   		.space	3
 6653 1504 FFFFFFFF 		.word	-1
 6654 1508 34       		.byte	52
 6655 1509 000000   		.space	3
 6656 150c C3010000 		.word	451
 6657 1510 43505800 		.ascii	"CPX\000"
 6658 1514 00000000 		.space	4
 6659 1518 92064144 		.ascii	"\222\006ADV\000"
 6659      5600
 6660 151e 0000     		.space	2
 6661              		.section	.rodata.mapping_alpha.11156,"a"
 6662              		.align	2
 6663              		.set	.LANCHOR16,. + 0
 6666              	mapping_alpha.11156:
 6667 0000 63       		.byte	99
 6668 0001 000000   		.space	3
 6669 0004 FFFFFFFF 		.word	-1
 6670 0008 00       		.byte	0
 6671 0009 000000   		.space	3
 6672 000c FFFFFFFF 		.word	-1
 6673 0010 01       		.byte	1
 6674 0011 000000   		.space	3
 6675 0014 FFFFFFFF 		.word	-1
 6676 0018 02       		.byte	2
 6677 0019 000000   		.space	3
 6678 001c FFFFFFFF 		.word	-1
 6679 0020 03       		.byte	3
 6680 0021 000000   		.space	3
 6681 0024 FFFFFFFF 		.word	-1
 6682 0028 04       		.byte	4
 6683 0029 000000   		.space	3
 6684 002c FFFFFFFF 		.word	-1
 6685 0030 05       		.byte	5
 6686 0031 000000   		.space	3
 6687 0034 FFFFFFFF 		.word	-1
 6688 0038 06       		.byte	6
 6689 0039 000000   		.space	3
 6690 003c FFFFFFFF 		.word	-1
 6691 0040 07       		.byte	7
 6692 0041 000000   		.space	3
 6693 0044 FFFFFFFF 		.word	-1
 6694 0048 08       		.byte	8
 6695 0049 000000   		.space	3
 6696 004c FFFFFFFF 		.word	-1
 6697 0050 09       		.byte	9
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 168
=======
ARM GAS  /tmp/ccCyL0em.s 			page 168
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6698 0051 000000   		.space	3
 6699 0054 FFFFFFFF 		.word	-1
 6700 0058 0A       		.byte	10
 6701 0059 000000   		.space	3
 6702 005c FFFFFFFF 		.word	-1
 6703 0060 0B       		.byte	11
 6704 0061 000000   		.space	3
 6705 0064 FFFFFFFF 		.word	-1
 6706 0068 0C       		.byte	12
 6707 0069 000000   		.space	3
 6708 006c FFFFFFFF 		.word	-1
 6709 0070 0D       		.byte	13
 6710 0071 000000   		.space	3
 6711 0074 FFFFFFFF 		.word	-1
 6712 0078 0E       		.byte	14
 6713 0079 000000   		.space	3
 6714 007c FFFFFFFF 		.word	-1
 6715 0080 0F       		.byte	15
 6716 0081 000000   		.space	3
 6717 0084 FFFFFFFF 		.word	-1
 6718 0088 10       		.byte	16
 6719 0089 000000   		.space	3
 6720 008c FFFFFFFF 		.word	-1
 6721 0090 12       		.byte	18
 6722 0091 000000   		.space	3
 6723 0094 FFFFFFFF 		.word	-1
 6724 0098 13       		.byte	19
 6725 0099 000000   		.space	3
 6726 009c FFFFFFFF 		.word	-1
 6727 00a0 14       		.byte	20
 6728 00a1 000000   		.space	3
 6729 00a4 FFFFFFFF 		.word	-1
 6730 00a8 15       		.byte	21
 6731 00a9 000000   		.space	3
 6732 00ac FFFFFFFF 		.word	-1
 6733 00b0 16       		.byte	22
 6734 00b1 000000   		.space	3
 6735 00b4 FFFFFFFF 		.word	-1
 6736 00b8 18       		.byte	24
 6737 00b9 000000   		.space	3
 6738 00bc FFFFFFFF 		.word	-1
 6739 00c0 19       		.byte	25
 6740 00c1 000000   		.space	3
 6741 00c4 FFFFFFFF 		.word	-1
 6742 00c8 1A       		.byte	26
 6743 00c9 000000   		.space	3
 6744 00cc FFFFFFFF 		.word	-1
 6745 00d0 1B       		.byte	27
 6746 00d1 000000   		.space	3
 6747 00d4 FFFFFFFF 		.word	-1
 6748 00d8 1C       		.byte	28
 6749 00d9 000000   		.space	3
 6750 00dc FFFFFFFF 		.word	-1
 6751 00e0 1E       		.byte	30
 6752 00e1 000000   		.space	3
 6753 00e4 FFFFFFFF 		.word	-1
 6754 00e8 1F       		.byte	31
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 169
=======
ARM GAS  /tmp/ccCyL0em.s 			page 169
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6755 00e9 000000   		.space	3
 6756 00ec FFFFFFFF 		.word	-1
 6757 00f0 20       		.byte	32
 6758 00f1 000000   		.space	3
 6759 00f4 FFFFFFFF 		.word	-1
 6760 00f8 21       		.byte	33
 6761 00f9 000000   		.space	3
 6762 00fc FFFFFFFF 		.word	-1
 6763 0100 22       		.byte	34
 6764 0101 000000   		.space	3
 6765 0104 FFFFFFFF 		.word	-1
 6766 0108 24       		.byte	36
 6767 0109 000000   		.space	3
 6768 010c FFFFFFFF 		.word	-1
 6769 0110 25       		.byte	37
 6770 0111 000000   		.space	3
 6771 0114 FFFFFFFF 		.word	-1
 6772 0118 26       		.byte	38
 6773 0119 000000   		.space	3
 6774 011c FFFFFFFF 		.word	-1
 6775 0120 27       		.byte	39
 6776 0121 000000   		.space	3
 6777 0124 FFFFFFFF 		.word	-1
 6778 0128 28       		.byte	40
 6779 0129 000000   		.space	3
 6780 012c FFFFFFFF 		.word	-1
 6781 0130 2E       		.byte	46
 6782 0131 000000   		.space	3
 6783 0134 FFFFFFFF 		.word	-1
 6784 0138 2E       		.byte	46
 6785 0139 000000   		.space	3
 6786 013c FFFFFFFF 		.word	-1
 6787 0140 2E       		.byte	46
 6788 0141 000000   		.space	3
 6789 0144 FFFFFFFF 		.word	-1
 6790 0148 2E       		.byte	46
 6791 0149 000000   		.space	3
 6792 014c FFFFFFFF 		.word	-1
 6793 0150 2C       		.byte	44
 6794 0151 000000   		.space	3
 6795 0154 FFFFFFFF 		.word	-1
 6796 0158 2D       		.byte	45
 6797 0159 000000   		.space	3
 6798 015c FFFFFFFF 		.word	-1
 6799 0160 2E       		.byte	46
 6800 0161 000000   		.space	3
 6801 0164 FFFFFFFF 		.word	-1
 6802 0168 2E       		.byte	46
 6803 0169 000000   		.space	3
 6804 016c FFFFFFFF 		.word	-1
 6805 0170 2E       		.byte	46
 6806 0171 000000   		.space	3
 6807 0174 FFFFFFFF 		.word	-1
 6808              		.section	.rodata.mapping_fshift.11154,"a"
 6809              		.align	2
 6810              		.set	.LANCHOR14,. + 0
 6813              	mapping_fshift.11154:
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 170
=======
ARM GAS  /tmp/ccCyL0em.s 			page 170
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6814 0000 63       		.byte	99
 6815 0001 000000   		.space	3
 6816 0004 FFFFFFFF 		.word	-1
 6817 0008 22       		.byte	34
 6818 0009 000000   		.space	3
 6819 000c 03000000 		.word	3
 6820 0010 15       		.byte	21
 6821 0011 000000   		.space	3
 6822 0014 01000000 		.word	1
 6823 0018 1C       		.byte	28
 6824 0019 000000   		.space	3
 6825 001c 02000000 		.word	2
 6826 0020 13       		.byte	19
 6827 0021 000000   		.space	3
 6828 0024 01000000 		.word	1
 6829 0028 12       		.byte	18
 6830 0029 000000   		.space	3
 6831 002c 01000000 		.word	1
 6832 0030 12       		.byte	18
 6833 0031 000000   		.space	3
 6834 0034 03000000 		.word	3
 6835 0038 31       		.byte	49
 6836 0039 000000   		.space	3
 6837 003c 0F000000 		.word	15
 6838 0040 22       		.byte	34
 6839 0041 000000   		.space	3
 6840 0044 01000000 		.word	1
 6841 0048 0F       		.byte	15
 6842 0049 000000   		.space	3
 6843 004c 03000000 		.word	3
 6844 0050 01       		.byte	1
 6845 0051 000000   		.space	3
 6846 0054 02000000 		.word	2
 6847 0058 02       		.byte	2
 6848 0059 000000   		.space	3
 6849 005c 02000000 		.word	2
 6850 0060 03       		.byte	3
 6851 0061 000000   		.space	3
 6852 0064 02000000 		.word	2
 6853 0068 0C       		.byte	12
 6854 0069 000000   		.space	3
 6855 006c 01000000 		.word	1
 6856 0070 34       		.byte	52
 6857 0071 000000   		.space	3
 6858 0074 6C2A0000 		.word	10860
 6859 0078 2F       		.byte	47
 6860 0079 000000   		.space	3
 6861 007c 04000000 		.word	4
 6862 0080 2F       		.byte	47
 6863 0081 000000   		.space	3
 6864 0084 02000000 		.word	2
 6865 0088 2F       		.byte	47
 6866 0089 000000   		.space	3
 6867 008c 01000000 		.word	1
 6868 0090 18       		.byte	24
 6869 0091 000000   		.space	3
 6870 0094 00000000 		.word	0
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 171
=======
ARM GAS  /tmp/ccCyL0em.s 			page 171
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6871 0098 20       		.byte	32
 6872 0099 000000   		.space	3
 6873 009c 01000000 		.word	1
 6874 00a0 2F       		.byte	47
 6875 00a1 000000   		.space	3
 6876 00a4 0E000000 		.word	14
 6877 00a8 1C       		.byte	28
 6878 00a9 000000   		.space	3
 6879 00ac 03000000 		.word	3
 6880 00b0 2F       		.byte	47
 6881 00b1 000000   		.space	3
 6882 00b4 0C000000 		.word	12
 6883 00b8 1E       		.byte	30
 6884 00b9 000000   		.space	3
 6885 00bc 00000000 		.word	0
 6886 00c0 2F       		.byte	47
 6887 00c1 000000   		.space	3
 6888 00c4 03000000 		.word	3
 6889 00c8 04       		.byte	4
 6890 00c9 000000   		.space	3
 6891 00cc 03000000 		.word	3
 6892 00d0 2F       		.byte	47
 6893 00d1 000000   		.space	3
 6894 00d4 0A000000 		.word	10
 6895 00d8 2F       		.byte	47
 6896 00d9 000000   		.space	3
 6897 00dc 0B000000 		.word	11
 6898 00e0 2A       		.byte	42
 6899 00e1 000000   		.space	3
 6900 00e4 00000000 		.word	0
 6901 00e8 31       		.byte	49
 6902 00e9 000000   		.space	3
 6903 00ec 0D000000 		.word	13
 6904 00f0 2F       		.byte	47
 6905 00f1 000000   		.space	3
 6906 00f4 63000000 		.word	99
 6907 00f8 20       		.byte	32
 6908 00f9 000000   		.space	3
 6909 00fc 03000000 		.word	3
 6910 0100 2F       		.byte	47
 6911 0101 000000   		.space	3
 6912 0104 19000000 		.word	25
 6913 0108 24       		.byte	36
 6914 0109 000000   		.space	3
 6915 010c 03000000 		.word	3
 6916 0110 2F       		.byte	47
 6917 0111 000000   		.space	3
 6918 0114 08000000 		.word	8
 6919 0118 0D       		.byte	13
 6920 0119 000000   		.space	3
 6921 011c 01000000 		.word	1
 6922 0120 27       		.byte	39
 6923 0121 000000   		.space	3
 6924 0124 03000000 		.word	3
 6925 0128 06       		.byte	6
 6926 0129 000000   		.space	3
 6927 012c 03000000 		.word	3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 172
=======
ARM GAS  /tmp/ccCyL0em.s 			page 172
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6928 0130 2E       		.byte	46
 6929 0131 000000   		.space	3
 6930 0134 00000000 		.word	0
 6931 0138 2E       		.byte	46
 6932 0139 000000   		.space	3
 6933 013c 00000000 		.word	0
 6934 0140 2E       		.byte	46
 6935 0141 000000   		.space	3
 6936 0144 00000000 		.word	0
 6937 0148 2E       		.byte	46
 6938 0149 000000   		.space	3
 6939 014c 00000000 		.word	0
 6940 0150 2E       		.byte	46
 6941 0151 000000   		.space	3
 6942 0154 00000000 		.word	0
 6943 0158 2E       		.byte	46
 6944 0159 000000   		.space	3
 6945 015c 00000000 		.word	0
 6946 0160 2E       		.byte	46
 6947 0161 000000   		.space	3
 6948 0164 00000000 		.word	0
 6949 0168 2F       		.byte	47
 6950 0169 000000   		.space	3
 6951 016c FFFFFFFF 		.word	-1
 6952 0170 2F       		.byte	47
 6953 0171 000000   		.space	3
 6954 0174 05000000 		.word	5
 6955              		.section	.rodata.mapping_gshift.11155,"a"
 6956              		.align	2
 6957              		.set	.LANCHOR17,. + 0
 6960              	mapping_gshift.11155:
 6961 0000 63       		.byte	99
 6962 0001 000000   		.space	3
 6963 0004 FFFFFFFF 		.word	-1
 6964 0008 28       		.byte	40
 6965 0009 000000   		.space	3
 6966 000c 03000000 		.word	3
 6967 0010 16       		.byte	22
 6968 0011 000000   		.space	3
 6969 0014 01000000 		.word	1
 6970 0018 1C       		.byte	28
 6971 0019 000000   		.space	3
 6972 001c 01000000 		.word	1
 6973 0020 13       		.byte	19
 6974 0021 000000   		.space	3
 6975 0024 02000000 		.word	2
 6976 0028 2E       		.byte	46
 6977 0029 000000   		.space	3
 6978 002c 00000000 		.word	0
 6979 0030 2E       		.byte	46
 6980 0031 000000   		.space	3
 6981 0034 00000000 		.word	0
 6982 0038 2E       		.byte	46
 6983 0039 000000   		.space	3
 6984 003c 00000000 		.word	0
 6985 0040 07       		.byte	7
 6986 0041 000000   		.space	3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 173
=======
ARM GAS  /tmp/ccCyL0em.s 			page 173
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 6987 0044 03000000 		.word	3
 6988 0048 08       		.byte	8
 6989 0049 000000   		.space	3
 6990 004c 03000000 		.word	3
 6991 0050 2F       		.byte	47
 6992 0051 000000   		.space	3
 6993 0054 04000000 		.word	4
 6994 0058 2F       		.byte	47
 6995 0059 000000   		.space	3
 6996 005c 04000000 		.word	4
 6997 0060 2F       		.byte	47
 6998 0061 000000   		.space	3
 6999 0064 04000000 		.word	4
 7000 0068 0C       		.byte	12
 7001 0069 000000   		.space	3
 7002 006c 02000000 		.word	2
 7003 0070 2F       		.byte	47
 7004 0071 000000   		.space	3
 7005 0074 06000000 		.word	6
 7006 0078 05       		.byte	5
 7007 0079 000000   		.space	3
 7008 007c 03000000 		.word	3
 7009 0080 2E       		.byte	46
 7010 0081 000000   		.space	3
 7011 0084 00000000 		.word	0
 7012 0088 2E       		.byte	46
 7013 0089 000000   		.space	3
 7014 008c 00000000 		.word	0
 7015 0090 2E       		.byte	46
 7016 0091 000000   		.space	3
 7017 0094 00000000 		.word	0
 7018 0098 2E       		.byte	46
 7019 0099 000000   		.space	3
 7020 009c 00000000 		.word	0
 7021 00a0 2E       		.byte	46
 7022 00a1 000000   		.space	3
 7023 00a4 00000000 		.word	0
 7024 00a8 1B       		.byte	27
 7025 00a9 000000   		.space	3
 7026 00ac 03000000 		.word	3
 7027 00b0 1A       		.byte	26
 7028 00b1 000000   		.space	3
 7029 00b4 03000000 		.word	3
 7030 00b8 2E       		.byte	46
 7031 00b9 000000   		.space	3
 7032 00bc 00000000 		.word	0
 7033 00c0 2E       		.byte	46
 7034 00c1 000000   		.space	3
 7035 00c4 00000000 		.word	0
 7036 00c8 0C       		.byte	12
 7037 00c9 000000   		.space	3
 7038 00cc 03000000 		.word	3
 7039 00d0 1F       		.byte	31
 7040 00d1 000000   		.space	3
 7041 00d4 03000000 		.word	3
 7042 00d8 19       		.byte	25
 7043 00d9 000000   		.space	3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 174
=======
ARM GAS  /tmp/ccCyL0em.s 			page 174
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 7044 00dc 03000000 		.word	3
 7045 00e0 2A       		.byte	42
 7046 00e1 000000   		.space	3
 7047 00e4 FFFFFFFF 		.word	-1
 7048 00e8 2E       		.byte	46
 7049 00e9 000000   		.space	3
 7050 00ec 00000000 		.word	0
 7051 00f0 2F       		.byte	47
 7052 00f1 000000   		.space	3
 7053 00f4 18000000 		.word	24
 7054 00f8 21       		.byte	33
 7055 00f9 000000   		.space	3
 7056 00fc 03000000 		.word	3
 7057 0100 2E       		.byte	46
 7058 0101 000000   		.space	3
 7059 0104 00000000 		.word	0
 7060 0108 24       		.byte	36
 7061 0109 000000   		.space	3
 7062 010c 02000000 		.word	2
 7063 0110 2F       		.byte	47
 7064 0111 000000   		.space	3
 7065 0114 0D000000 		.word	13
 7066 0118 2E       		.byte	46
 7067 0119 000000   		.space	3
 7068 011c 00000000 		.word	0
 7069 0120 2F       		.byte	47
 7070 0121 000000   		.space	3
 7071 0124 07000000 		.word	7
 7072 0128 1E       		.byte	30
 7073 0129 000000   		.space	3
 7074 012c 03000000 		.word	3
 7075 0130 2E       		.byte	46
 7076 0131 000000   		.space	3
 7077 0134 00000000 		.word	0
 7078 0138 2E       		.byte	46
 7079 0139 000000   		.space	3
 7080 013c 00000000 		.word	0
 7081 0140 2E       		.byte	46
 7082 0141 000000   		.space	3
 7083 0144 00000000 		.word	0
 7084 0148 2E       		.byte	46
 7085 0149 000000   		.space	3
 7086 014c 00000000 		.word	0
 7087 0150 2E       		.byte	46
 7088 0151 000000   		.space	3
 7089 0154 00000000 		.word	0
 7090 0158 2E       		.byte	46
 7091 0159 000000   		.space	3
 7092 015c 00000000 		.word	0
 7093 0160 2E       		.byte	46
 7094 0161 000000   		.space	3
 7095 0164 00000000 		.word	0
 7096 0168 2E       		.byte	46
 7097 0169 000000   		.space	3
 7098 016c 00000000 		.word	0
 7099 0170 2E       		.byte	46
 7100 0171 000000   		.space	3
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 175
=======
ARM GAS  /tmp/ccCyL0em.s 			page 175
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 7101 0174 00000000 		.word	0
 7102              		.section	.rodata.mapping_none.11153,"a"
 7103              		.align	2
 7104              		.set	.LANCHOR13,. + 0
 7107              	mapping_none.11153:
 7108 0000 63       		.byte	99
 7109 0001 000000   		.space	3
 7110 0004 FFFFFFFF 		.word	-1
 7111 0008 00       		.byte	0
 7112 0009 000000   		.space	3
 7113 000c 00000000 		.word	0
 7114 0010 01       		.byte	1
 7115 0011 000000   		.space	3
 7116 0014 00000000 		.word	0
 7117 0018 03       		.byte	3
 7118 0019 000000   		.space	3
 7119 001c 00000000 		.word	0
 7120 0020 13       		.byte	19
 7121 0021 000000   		.space	3
 7122 0024 02000000 		.word	2
 7123 0028 12       		.byte	18
 7124 0029 000000   		.space	3
 7125 002c 02000000 		.word	2
 7126 0030 12       		.byte	18
 7127 0031 000000   		.space	3
 7128 0034 00000000 		.word	0
 7129 0038 06       		.byte	6
 7130 0039 000000   		.space	3
 7131 003c 00000000 		.word	0
 7132 0040 07       		.byte	7
 7133 0041 000000   		.space	3
 7134 0044 00000000 		.word	0
 7135 0048 08       		.byte	8
 7136 0049 000000   		.space	3
 7137 004c 00000000 		.word	0
 7138 0050 01       		.byte	1
 7139 0051 000000   		.space	3
 7140 0054 01000000 		.word	1
 7141 0058 02       		.byte	2
 7142 0059 000000   		.space	3
 7143 005c 01000000 		.word	1
 7144 0060 03       		.byte	3
 7145 0061 000000   		.space	3
 7146 0064 01000000 		.word	1
 7147 0068 0C       		.byte	12
 7148 0069 000000   		.space	3
 7149 006c 00000000 		.word	0
 7150 0070 0D       		.byte	13
 7151 0071 000000   		.space	3
 7152 0074 00000000 		.word	0
 7153 0078 0E       		.byte	14
 7154 0079 000000   		.space	3
 7155 007c 00000000 		.word	0
 7156 0080 0F       		.byte	15
 7157 0081 000000   		.space	3
 7158 0084 00000000 		.word	0
 7159 0088 10       		.byte	16
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 176
=======
ARM GAS  /tmp/ccCyL0em.s 			page 176
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 7160 0089 000000   		.space	3
 7161 008c 00000000 		.word	0
 7162 0090 18       		.byte	24
 7163 0091 000000   		.space	3
 7164 0094 00000000 		.word	0
 7165 0098 13       		.byte	19
 7166 0099 000000   		.space	3
 7167 009c 00000000 		.word	0
 7168 00a0 14       		.byte	20
 7169 00a1 000000   		.space	3
 7170 00a4 00000000 		.word	0
 7171 00a8 15       		.byte	21
 7172 00a9 000000   		.space	3
 7173 00ac 00000000 		.word	0
 7174 00b0 16       		.byte	22
 7175 00b1 000000   		.space	3
 7176 00b4 00000000 		.word	0
 7177 00b8 1E       		.byte	30
 7178 00b9 000000   		.space	3
 7179 00bc 00000000 		.word	0
 7180 00c0 19       		.byte	25
 7181 00c1 000000   		.space	3
 7182 00c4 00000000 		.word	0
 7183 00c8 1A       		.byte	26
 7184 00c9 000000   		.space	3
 7185 00cc 00000000 		.word	0
 7186 00d0 1B       		.byte	27
 7187 00d1 000000   		.space	3
 7188 00d4 00000000 		.word	0
 7189 00d8 1C       		.byte	28
 7190 00d9 000000   		.space	3
 7191 00dc 00000000 		.word	0
 7192 00e0 29       		.byte	41
 7193 00e1 000000   		.space	3
 7194 00e4 00000000 		.word	0
 7195 00e8 1F       		.byte	31
 7196 00e9 000000   		.space	3
 7197 00ec 00000000 		.word	0
 7198 00f0 20       		.byte	32
 7199 00f1 000000   		.space	3
 7200 00f4 00000000 		.word	0
 7201 00f8 21       		.byte	33
 7202 00f9 000000   		.space	3
 7203 00fc 00000000 		.word	0
 7204 0100 22       		.byte	34
 7205 0101 000000   		.space	3
 7206 0104 00000000 		.word	0
 7207 0108 24       		.byte	36
 7208 0109 000000   		.space	3
 7209 010c 00000000 		.word	0
 7210 0110 25       		.byte	37
 7211 0111 000000   		.space	3
 7212 0114 00000000 		.word	0
 7213 0118 26       		.byte	38
 7214 0119 000000   		.space	3
 7215 011c 00000000 		.word	0
 7216 0120 27       		.byte	39
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 177
=======
ARM GAS  /tmp/ccCyL0em.s 			page 177
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 7217 0121 000000   		.space	3
 7218 0124 00000000 		.word	0
 7219 0128 28       		.byte	40
 7220 0129 000000   		.space	3
 7221 012c 00000000 		.word	0
 7222 0130 2E       		.byte	46
 7223 0131 000000   		.space	3
 7224 0134 00000000 		.word	0
 7225 0138 2E       		.byte	46
 7226 0139 000000   		.space	3
 7227 013c 00000000 		.word	0
 7228 0140 2E       		.byte	46
 7229 0141 000000   		.space	3
 7230 0144 00000000 		.word	0
 7231 0148 2E       		.byte	46
 7232 0149 000000   		.space	3
 7233 014c 00000000 		.word	0
 7234 0150 2E       		.byte	46
 7235 0151 000000   		.space	3
 7236 0154 00000000 		.word	0
 7237 0158 2E       		.byte	46
 7238 0159 000000   		.space	3
 7239 015c 00000000 		.word	0
 7240 0160 2E       		.byte	46
 7241 0161 000000   		.space	3
 7242 0164 00000000 		.word	0
 7243 0168 2E       		.byte	46
 7244 0169 000000   		.space	3
 7245 016c 00000000 		.word	0
 7246 0170 2E       		.byte	46
 7247 0171 000000   		.space	3
 7248 0174 00000000 		.word	0
 7249              		.section	.rodata.mapping_running.11157,"a"
 7250              		.align	2
 7251              		.set	.LANCHOR12,. + 0
 7254              	mapping_running.11157:
 7255 0000 63       		.byte	99
 7256 0001 000000   		.space	3
 7257 0004 FFFFFFFF 		.word	-1
 7258 0008 00       		.byte	0
 7259 0009 000000   		.space	3
 7260 000c 00000000 		.word	0
 7261 0010 01       		.byte	1
 7262 0011 000000   		.space	3
 7263 0014 00000000 		.word	0
 7264 0018 02       		.byte	2
 7265 0019 000000   		.space	3
 7266 001c 00000000 		.word	0
 7267 0020 03       		.byte	3
 7268 0021 000000   		.space	3
 7269 0024 00000000 		.word	0
 7270 0028 04       		.byte	4
 7271 0029 000000   		.space	3
 7272 002c 00000000 		.word	0
 7273 0030 12       		.byte	18
 7274 0031 000000   		.space	3
 7275 0034 00000000 		.word	0
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 178
=======
ARM GAS  /tmp/ccCyL0em.s 			page 178
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 7276 0038 06       		.byte	6
 7277 0039 000000   		.space	3
 7278 003c 00000000 		.word	0
 7279 0040 07       		.byte	7
 7280 0041 000000   		.space	3
 7281 0044 00000000 		.word	0
 7282 0048 08       		.byte	8
 7283 0049 000000   		.space	3
 7284 004c 00000000 		.word	0
 7285 0050 09       		.byte	9
 7286 0051 000000   		.space	3
 7287 0054 00000000 		.word	0
 7288 0058 0A       		.byte	10
 7289 0059 000000   		.space	3
 7290 005c 00000000 		.word	0
 7291 0060 0B       		.byte	11
 7292 0061 000000   		.space	3
 7293 0064 00000000 		.word	0
 7294 0068 0C       		.byte	12
 7295 0069 000000   		.space	3
 7296 006c 00000000 		.word	0
 7297 0070 0D       		.byte	13
 7298 0071 000000   		.space	3
 7299 0074 00000000 		.word	0
 7300 0078 0E       		.byte	14
 7301 0079 000000   		.space	3
 7302 007c 00000000 		.word	0
 7303 0080 0F       		.byte	15
 7304 0081 000000   		.space	3
 7305 0084 00000000 		.word	0
 7306 0088 10       		.byte	16
 7307 0089 000000   		.space	3
 7308 008c 00000000 		.word	0
 7309 0090 18       		.byte	24
 7310 0091 000000   		.space	3
 7311 0094 00000000 		.word	0
 7312 0098 13       		.byte	19
 7313 0099 000000   		.space	3
 7314 009c 00000000 		.word	0
 7315 00a0 14       		.byte	20
 7316 00a1 000000   		.space	3
 7317 00a4 00000000 		.word	0
 7318 00a8 15       		.byte	21
 7319 00a9 000000   		.space	3
 7320 00ac 00000000 		.word	0
 7321 00b0 16       		.byte	22
 7322 00b1 000000   		.space	3
 7323 00b4 00000000 		.word	0
 7324 00b8 1E       		.byte	30
 7325 00b9 000000   		.space	3
 7326 00bc 00000000 		.word	0
 7327 00c0 19       		.byte	25
 7328 00c1 000000   		.space	3
 7329 00c4 00000000 		.word	0
 7330 00c8 1A       		.byte	26
 7331 00c9 000000   		.space	3
 7332 00cc 00000000 		.word	0
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 179
=======
ARM GAS  /tmp/ccCyL0em.s 			page 179
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 7333 00d0 1B       		.byte	27
 7334 00d1 000000   		.space	3
 7335 00d4 00000000 		.word	0
 7336 00d8 1C       		.byte	28
 7337 00d9 000000   		.space	3
 7338 00dc 00000000 		.word	0
 7339 00e0 09       		.byte	9
 7340 00e1 000000   		.space	3
 7341 00e4 00000000 		.word	0
 7342 00e8 1F       		.byte	31
 7343 00e9 000000   		.space	3
 7344 00ec 00000000 		.word	0
 7345 00f0 20       		.byte	32
 7346 00f1 000000   		.space	3
 7347 00f4 00000000 		.word	0
 7348 00f8 21       		.byte	33
 7349 00f9 000000   		.space	3
 7350 00fc 00000000 		.word	0
 7351 0100 22       		.byte	34
 7352 0101 000000   		.space	3
 7353 0104 00000000 		.word	0
 7354 0108 24       		.byte	36
 7355 0109 000000   		.space	3
 7356 010c 00000000 		.word	0
 7357 0110 25       		.byte	37
 7358 0111 000000   		.space	3
 7359 0114 00000000 		.word	0
 7360 0118 26       		.byte	38
 7361 0119 000000   		.space	3
 7362 011c 00000000 		.word	0
 7363 0120 27       		.byte	39
 7364 0121 000000   		.space	3
 7365 0124 00000000 		.word	0
 7366 0128 28       		.byte	40
 7367 0129 000000   		.space	3
 7368 012c 00000000 		.word	0
 7369 0130 2E       		.byte	46
 7370 0131 000000   		.space	3
 7371 0134 00000000 		.word	0
 7372 0138 2E       		.byte	46
 7373 0139 000000   		.space	3
 7374 013c 00000000 		.word	0
 7375 0140 2E       		.byte	46
 7376 0141 000000   		.space	3
 7377 0144 00000000 		.word	0
 7378 0148 2E       		.byte	46
 7379 0149 000000   		.space	3
 7380 014c 00000000 		.word	0
 7381 0150 04       		.byte	4
 7382 0151 000000   		.space	3
 7383 0154 00000000 		.word	0
 7384 0158 05       		.byte	5
 7385 0159 000000   		.space	3
 7386 015c 00000000 		.word	0
 7387 0160 2E       		.byte	46
 7388 0161 000000   		.space	3
 7389 0164 00000000 		.word	0
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 180
=======
ARM GAS  /tmp/ccCyL0em.s 			page 180
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


 7390 0168 2E       		.byte	46
 7391 0169 000000   		.space	3
 7392 016c 00000000 		.word	0
 7393 0170 2E       		.byte	46
 7394 0171 000000   		.space	3
 7395 0174 00000000 		.word	0
 7396              		.section	.rodata.mid_menu,"a"
 7397              		.align	2
 7400              	mid_menu:
 7401 0000 C8C40B00 		.ascii	"\310\304\013\000"
 7402              		.text
 7403              	.Letext0:
 7404              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 7405              		.file 5 "/usr/include/newlib/machine/_default_types.h"
 7406              		.file 6 "/usr/include/newlib/sys/_types.h"
 7407              		.file 7 "/usr/include/newlib/sys/reent.h"
 7408              		.file 8 "/usr/include/newlib/sys/lock.h"
 7409              		.file 9 "/usr/include/newlib/stdlib.h"
 7410              		.file 10 "/usr/include/newlib/sys/_stdint.h"
 7411              		.file 11 "/usr/include/newlib/ctype.h"
 7412              		.file 12 "dmcp/ff_ifc.h"
 7413              		.file 13 "dmcp/dmcp.h"
 7414              		.file 14 "src/keys.h"
 7415              		.file 15 "src/menu.h"
 7416              		.file 16 "src/decNumber/decContext.h"
 7417              		.file 17 "src/decNumber/decNumber.h"
 7418              		.file 18 "src/decNumber/decimal64.h"
 7419              		.file 19 "src/decNumber/decimal128.h"
 7420              		.file 20 "src/xeq.h"
 7421              		.file 21 "src/data.h"
 7422              		.file 22 "src/display.h"
 7423              		.file 23 "src/consts.h"
 7424              		.file 24 "src/storage.h"
 7425              		.file 25 "src/catalogues.h"
 7426              		.file 26 "src/stopwatch.h"
 7427              		.file 27 "src/lcd.h"
 7428              		.file 28 "/usr/include/newlib/string.h"
 7429              		.file 29 "/usr/include/newlib/stdio.h"
 7430              		.file 30 "<built-in>"
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 181
=======
ARM GAS  /tmp/ccCyL0em.s 			page 181
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


DEFINED SYMBOLS
                            *ABS*:0000000000000000 console.c
<<<<<<< HEAD
     /tmp/ccYZHbMX.s:18     .rodata.menu_line_str.str1.4:0000000000000000 $d
     /tmp/ccYZHbMX.s:22     .text.menu_line_str:0000000000000000 $t
     /tmp/ccYZHbMX.s:31     .text.menu_line_str:0000000000000000 menu_line_str
     /tmp/ccYZHbMX.s:56     .text.menu_line_str:000000000000000c $d
     /tmp/ccYZHbMX.s:61     .text.set_menu_label.constprop.0:0000000000000000 $t
     /tmp/ccYZHbMX.s:68     .text.set_menu_label.constprop.0:0000000000000000 set_menu_label.constprop.0
     /tmp/ccYZHbMX.s:433    .text.set_menu_label.constprop.0:0000000000000138 $d
     /tmp/ccYZHbMX.s:441    .rodata.disp_about.str1.4:0000000000000000 $d
     /tmp/ccYZHbMX.s:472    .text.disp_about:0000000000000000 $t
     /tmp/ccYZHbMX.s:480    .text.disp_about:0000000000000000 disp_about
     /tmp/ccYZHbMX.s:686    .text.disp_about:00000000000000d4 $d
     /tmp/ccYZHbMX.s:710    .text.run_menu_item:0000000000000000 $t
     /tmp/ccYZHbMX.s:718    .text.run_menu_item:0000000000000000 run_menu_item
     /tmp/ccYZHbMX.s:758    .text.set_menu:0000000000000000 $t
     /tmp/ccYZHbMX.s:766    .text.set_menu:0000000000000000 set_menu
     /tmp/ccYZHbMX.s:821    .text.set_menu:000000000000002c $d
     /tmp/ccYZHbMX.s:828    .text.set_default_menu:0000000000000000 $t
     /tmp/ccYZHbMX.s:836    .text.set_default_menu:0000000000000000 set_default_menu
     /tmp/ccYZHbMX.s:910    .text.set_default_menu:000000000000002c $d
     /tmp/ccYZHbMX.s:919    .text.toggle_default_menu:0000000000000000 $t
     /tmp/ccYZHbMX.s:927    .text.toggle_default_menu:0000000000000000 toggle_default_menu
     /tmp/ccYZHbMX.s:1029   .text.toggle_default_menu:0000000000000044 $d
     /tmp/ccYZHbMX.s:1040   .text.get_menu:0000000000000000 $t
     /tmp/ccYZHbMX.s:1048   .text.get_menu:0000000000000000 get_menu
     /tmp/ccYZHbMX.s:1064   .text.get_menu:0000000000000008 $d
     /tmp/ccYZHbMX.s:1069   .text.get_last_menu:0000000000000000 $t
     /tmp/ccYZHbMX.s:1077   .text.get_last_menu:0000000000000000 get_last_menu
     /tmp/ccYZHbMX.s:1093   .text.get_last_menu:0000000000000008 $d
     /tmp/ccYZHbMX.s:1098   .text.set_last_menu:0000000000000000 $t
     /tmp/ccYZHbMX.s:1106   .text.set_last_menu:0000000000000000 set_last_menu
     /tmp/ccYZHbMX.s:1181   .text.set_last_menu:000000000000002c $d
     /tmp/ccYZHbMX.s:1190   .text.mdot:0000000000000000 $t
     /tmp/ccYZHbMX.s:1198   .text.mdot:0000000000000000 mdot
     /tmp/ccYZHbMX.s:1289   .text.mdot:000000000000003c $d
     /tmp/ccYZHbMX.s:1294   .text.get_current_menu_ref:0000000000000000 $t
     /tmp/ccYZHbMX.s:1302   .text.get_current_menu_ref:0000000000000000 get_current_menu_ref
     /tmp/ccYZHbMX.s:1369   .text.get_current_menu_ref:0000000000000040 $d
     /tmp/ccYZHbMX.s:1384   .text.get_current_menu_ref:000000000000007c $t
     /tmp/ccYZHbMX.s:1454   .text.get_current_menu_ref:00000000000000a8 $d
     /tmp/ccYZHbMX.s:5022   .rodata.Menus:0000000000000000 Menus
     /tmp/ccYZHbMX.s:1462   .text.display_menu:0000000000000000 $t
     /tmp/ccYZHbMX.s:1470   .text.display_menu:0000000000000000 display_menu
     /tmp/ccYZHbMX.s:1718   .text.display_menu:000000000000010c $d
     /tmp/ccYZHbMX.s:1725   .text.display_current_menu:0000000000000000 $t
     /tmp/ccYZHbMX.s:1733   .text.display_current_menu:0000000000000000 display_current_menu
     /tmp/ccYZHbMX.s:1769   .text.all_menu_dots:0000000000000000 $t
     /tmp/ccYZHbMX.s:1777   .text.all_menu_dots:0000000000000000 all_menu_dots
     /tmp/ccYZHbMX.s:1861   .text.all_menu_dots:0000000000000038 $d
     /tmp/ccYZHbMX.s:1866   .text.umen_store:0000000000000000 $t
     /tmp/ccYZHbMX.s:1874   .text.umen_store:0000000000000000 umen_store
     /tmp/ccYZHbMX.s:1975   .text.umen_store:0000000000000050 $d
     /tmp/ccYZHbMX.s:1980   .text.build_user_menu_from_program:0000000000000000 $t
     /tmp/ccYZHbMX.s:1988   .text.build_user_menu_from_program:0000000000000000 build_user_menu_from_program
     /tmp/ccYZHbMX.s:2399   .text.build_user_menu_from_program:0000000000000180 $d
     /tmp/ccYZHbMX.s:2412   .text.build_user_menu:0000000000000000 $t
ARM GAS  /tmp/ccYZHbMX.s 			page 182


     /tmp/ccYZHbMX.s:2420   .text.build_user_menu:0000000000000000 build_user_menu
     /tmp/ccYZHbMX.s:2436   .text.build_user_menu:0000000000000008 $d
     /tmp/ccYZHbMX.s:2441   .text.shutdown:0000000000000000 $t
     /tmp/ccYZHbMX.s:2449   .text.shutdown:0000000000000000 shutdown
     /tmp/ccYZHbMX.s:2467   .text.shutdown:000000000000000c $d
     /tmp/ccYZHbMX.s:2472   .text.is_key_pressed:0000000000000000 $t
     /tmp/ccYZHbMX.s:2480   .text.is_key_pressed:0000000000000000 is_key_pressed
     /tmp/ccYZHbMX.s:2503   .text.is_key_pressed:0000000000000010 $d
     /tmp/ccYZHbMX.s:2508   .text.get_key:0000000000000000 $t
     /tmp/ccYZHbMX.s:2516   .text.get_key:0000000000000000 get_key
     /tmp/ccYZHbMX.s:2531   .text.get_key:0000000000000004 $d
     /tmp/ccYZHbMX.s:2536   .text.put_key:0000000000000000 $t
     /tmp/ccYZHbMX.s:2544   .text.put_key:0000000000000000 put_key
     /tmp/ccYZHbMX.s:2623   .text.put_key:000000000000003c $d
     /tmp/ccYZHbMX.s:2629   .text.shift_down:0000000000000000 $t
     /tmp/ccYZHbMX.s:2637   .text.shift_down:0000000000000000 shift_down
     /tmp/ccYZHbMX.s:2652   .text.start_key_timer:0000000000000000 $t
     /tmp/ccYZHbMX.s:2660   .text.start_key_timer:0000000000000000 start_key_timer
     /tmp/ccYZHbMX.s:2684   .text.start_key_timer:000000000000000c $d
     /tmp/ccYZHbMX.s:2690   .text.keyticks:0000000000000000 $t
     /tmp/ccYZHbMX.s:2698   .text.keyticks:0000000000000000 keyticks
     /tmp/ccYZHbMX.s:2729   .text.keyticks:0000000000000018 $d
     /tmp/ccYZHbMX.s:2735   .text.moveto:0000000000000000 $t
     /tmp/ccYZHbMX.s:2743   .text.moveto:0000000000000000 moveto
     /tmp/ccYZHbMX.s:2803   .text.moveto:000000000000002c $d
     /tmp/ccYZHbMX.s:2810   .rodata.print_debug.str1.4:0000000000000000 $d
     /tmp/ccYZHbMX.s:2814   .text.print_debug:0000000000000000 $t
     /tmp/ccYZHbMX.s:2822   .text.print_debug:0000000000000000 print_debug
     /tmp/ccYZHbMX.s:2924   .text.print_debug:0000000000000064 $d
                            *COM*:0000000000000016 print_string
     /tmp/ccYZHbMX.s:2935   .rodata.print_debug2.str1.4:0000000000000000 $d
     /tmp/ccYZHbMX.s:2939   .text.print_debug2:0000000000000000 $t
     /tmp/ccYZHbMX.s:2947   .text.print_debug2:0000000000000000 print_debug2
     /tmp/ccYZHbMX.s:3049   .text.print_debug2:0000000000000064 $d
     /tmp/ccYZHbMX.s:3060   .text.do_now:0000000000000000 $t
     /tmp/ccYZHbMX.s:3068   .text.do_now:0000000000000000 do_now
     /tmp/ccYZHbMX.s:3103   .rodata.do_multi.str1.4:0000000000000000 $d
     /tmp/ccYZHbMX.s:3107   .text.do_multi:0000000000000000 $t
     /tmp/ccYZHbMX.s:3115   .text.do_multi:0000000000000000 do_multi
     /tmp/ccYZHbMX.s:3145   .text.do_multi:0000000000000016 $d
     /tmp/ccYZHbMX.s:3159   .text.do_multi:0000000000000024 $t
     /tmp/ccYZHbMX.s:3574   .text.do_multi:00000000000001b8 $d
     /tmp/ccYZHbMX.s:3588   .text.program_main:0000000000000000 $t
     /tmp/ccYZHbMX.s:3596   .text.program_main:0000000000000000 program_main
     /tmp/ccYZHbMX.s:3861   .text.program_main:000000000000011c $d
     /tmp/ccYZHbMX.s:3867   .text.program_main:0000000000000128 $t
     /tmp/ccYZHbMX.s:4260   .text.program_main:00000000000002dc $d
     /tmp/ccYZHbMX.s:4301   .text.program_main:0000000000000364 $t
     /tmp/ccYZHbMX.s:4769   .text.program_main:000000000000059c $d
     /tmp/ccYZHbMX.s:4857   .bss.n_p:0000000000000000 n_p
     /tmp/ccYZHbMX.s:5006   .data.spaces:0000000000000000 spaces
     /tmp/ccYZHbMX.s:4997   .data.release:0000000000000000 release
     /tmp/ccYZHbMX.s:4970   .data.h_shift:0000000000000000 h_shift
     /tmp/ccYZHbMX.s:4961   .data.g_shift:0000000000000000 g_shift
     /tmp/ccYZHbMX.s:4953   .data.f_shift:0000000000000000 f_shift
     /tmp/ccYZHbMX.s:4979   .data.heartbeat:0000000000000000 heartbeat
     /tmp/ccYZHbMX.s:4988   .data.no_key:0000000000000000 no_key
ARM GAS  /tmp/ccYZHbMX.s 			page 183


     /tmp/ccYZHbMX.s:5013   .rodata.MID_MENU:0000000000000000 MID_MENU
     /tmp/ccYZHbMX.s:4797   .rodata.str1.4:0000000000000000 $d
     /tmp/ccYZHbMX.s:7400   .rodata.mid_menu:0000000000000000 mid_menu
     /tmp/ccYZHbMX.s:4838   .bss.default_menu:0000000000000000 default_menu
     /tmp/ccYZHbMX.s:4844   .bss.last_menu:0000000000000000 last_menu
     /tmp/ccYZHbMX.s:4832   .bss.current_menu:0000000000000000 current_menu
     /tmp/ccYZHbMX.s:4947   .data.cmplx_key_string:0000000000000000 cmplx_key_string
     /tmp/ccYZHbMX.s:4940   .data.arrow_key_string:0000000000000000 arrow_key_string
     /tmp/ccYZHbMX.s:4871   .data.UserMenu:0000000000000000 UserMenu
     /tmp/ccYZHbMX.s:4814   .rodata:0000000000000000 $d
     /tmp/ccYZHbMX.s:4833   .bss.current_menu:0000000000000000 $d
     /tmp/ccYZHbMX.s:4839   .bss.default_menu:0000000000000000 $d
     /tmp/ccYZHbMX.s:4845   .bss.last_menu:0000000000000000 $d
     /tmp/ccYZHbMX.s:4847   .bss.mdots:0000000000000000 $d
     /tmp/ccYZHbMX.s:4851   .bss.mdots:0000000000000000 mdots
     /tmp/ccYZHbMX.s:4854   .bss.n_p:0000000000000000 $d
     /tmp/ccYZHbMX.s:4860   .bss.start_ticks:0000000000000000 $d
     /tmp/ccYZHbMX.s:4864   .bss.start_ticks:0000000000000000 start_ticks
     /tmp/ccYZHbMX.s:4867   .data.UserMenu:0000000000000000 $d
     /tmp/ccYZHbMX.s:4936   .data.arrow_key_string:0000000000000000 $d
     /tmp/ccYZHbMX.s:4943   .data.cmplx_key_string:0000000000000000 $d
     /tmp/ccYZHbMX.s:4950   .data.f_shift:0000000000000000 $d
     /tmp/ccYZHbMX.s:4958   .data.g_shift:0000000000000000 $d
     /tmp/ccYZHbMX.s:4966   .data.h_shift:0000000000000000 $d
     /tmp/ccYZHbMX.s:4975   .data.heartbeat:0000000000000000 $d
     /tmp/ccYZHbMX.s:4984   .data.no_key:0000000000000000 $d
     /tmp/ccYZHbMX.s:4993   .data.release:0000000000000000 $d
     /tmp/ccYZHbMX.s:5002   .data.spaces:0000000000000000 $d
     /tmp/ccYZHbMX.s:5009   .rodata.MID_MENU:0000000000000000 $d
     /tmp/ccYZHbMX.s:5019   .rodata.Menus:0000000000000000 $d
     /tmp/ccYZHbMX.s:6662   .rodata.mapping_alpha.11156:0000000000000000 $d
     /tmp/ccYZHbMX.s:6666   .rodata.mapping_alpha.11156:0000000000000000 mapping_alpha.11156
     /tmp/ccYZHbMX.s:6809   .rodata.mapping_fshift.11154:0000000000000000 $d
     /tmp/ccYZHbMX.s:6813   .rodata.mapping_fshift.11154:0000000000000000 mapping_fshift.11154
     /tmp/ccYZHbMX.s:6956   .rodata.mapping_gshift.11155:0000000000000000 $d
     /tmp/ccYZHbMX.s:6960   .rodata.mapping_gshift.11155:0000000000000000 mapping_gshift.11155
     /tmp/ccYZHbMX.s:7103   .rodata.mapping_none.11153:0000000000000000 $d
     /tmp/ccYZHbMX.s:7107   .rodata.mapping_none.11153:0000000000000000 mapping_none.11153
     /tmp/ccYZHbMX.s:7250   .rodata.mapping_running.11157:0000000000000000 $d
     /tmp/ccYZHbMX.s:7254   .rodata.mapping_running.11157:0000000000000000 mapping_running.11157
     /tmp/ccYZHbMX.s:7397   .rodata.mid_menu:0000000000000000 $d
=======
     /tmp/ccCyL0em.s:18     .rodata.menu_line_str.str1.4:0000000000000000 $d
     /tmp/ccCyL0em.s:22     .text.menu_line_str:0000000000000000 $t
     /tmp/ccCyL0em.s:31     .text.menu_line_str:0000000000000000 menu_line_str
     /tmp/ccCyL0em.s:56     .text.menu_line_str:000000000000000c $d
     /tmp/ccCyL0em.s:61     .text.set_menu_label.constprop.0:0000000000000000 $t
     /tmp/ccCyL0em.s:68     .text.set_menu_label.constprop.0:0000000000000000 set_menu_label.constprop.0
     /tmp/ccCyL0em.s:433    .text.set_menu_label.constprop.0:0000000000000138 $d
     /tmp/ccCyL0em.s:441    .rodata.disp_about.str1.4:0000000000000000 $d
     /tmp/ccCyL0em.s:472    .text.disp_about:0000000000000000 $t
     /tmp/ccCyL0em.s:480    .text.disp_about:0000000000000000 disp_about
     /tmp/ccCyL0em.s:686    .text.disp_about:00000000000000d4 $d
     /tmp/ccCyL0em.s:710    .text.run_menu_item:0000000000000000 $t
     /tmp/ccCyL0em.s:718    .text.run_menu_item:0000000000000000 run_menu_item
     /tmp/ccCyL0em.s:758    .text.set_menu:0000000000000000 $t
     /tmp/ccCyL0em.s:766    .text.set_menu:0000000000000000 set_menu
     /tmp/ccCyL0em.s:821    .text.set_menu:000000000000002c $d
     /tmp/ccCyL0em.s:828    .text.set_default_menu:0000000000000000 $t
     /tmp/ccCyL0em.s:836    .text.set_default_menu:0000000000000000 set_default_menu
     /tmp/ccCyL0em.s:910    .text.set_default_menu:000000000000002c $d
     /tmp/ccCyL0em.s:919    .text.toggle_default_menu:0000000000000000 $t
     /tmp/ccCyL0em.s:927    .text.toggle_default_menu:0000000000000000 toggle_default_menu
     /tmp/ccCyL0em.s:1029   .text.toggle_default_menu:0000000000000044 $d
     /tmp/ccCyL0em.s:1040   .text.get_menu:0000000000000000 $t
     /tmp/ccCyL0em.s:1048   .text.get_menu:0000000000000000 get_menu
     /tmp/ccCyL0em.s:1064   .text.get_menu:0000000000000008 $d
     /tmp/ccCyL0em.s:1069   .text.get_last_menu:0000000000000000 $t
     /tmp/ccCyL0em.s:1077   .text.get_last_menu:0000000000000000 get_last_menu
     /tmp/ccCyL0em.s:1093   .text.get_last_menu:0000000000000008 $d
     /tmp/ccCyL0em.s:1098   .text.set_last_menu:0000000000000000 $t
     /tmp/ccCyL0em.s:1106   .text.set_last_menu:0000000000000000 set_last_menu
     /tmp/ccCyL0em.s:1181   .text.set_last_menu:000000000000002c $d
     /tmp/ccCyL0em.s:1190   .text.mdot:0000000000000000 $t
     /tmp/ccCyL0em.s:1198   .text.mdot:0000000000000000 mdot
     /tmp/ccCyL0em.s:1289   .text.mdot:000000000000003c $d
     /tmp/ccCyL0em.s:1294   .text.get_current_menu_ref:0000000000000000 $t
     /tmp/ccCyL0em.s:1302   .text.get_current_menu_ref:0000000000000000 get_current_menu_ref
     /tmp/ccCyL0em.s:1369   .text.get_current_menu_ref:0000000000000040 $d
     /tmp/ccCyL0em.s:1384   .text.get_current_menu_ref:000000000000007c $t
     /tmp/ccCyL0em.s:1454   .text.get_current_menu_ref:00000000000000a8 $d
     /tmp/ccCyL0em.s:5022   .rodata.Menus:0000000000000000 Menus
     /tmp/ccCyL0em.s:1462   .text.display_menu:0000000000000000 $t
     /tmp/ccCyL0em.s:1470   .text.display_menu:0000000000000000 display_menu
     /tmp/ccCyL0em.s:1718   .text.display_menu:000000000000010c $d
     /tmp/ccCyL0em.s:1725   .text.display_current_menu:0000000000000000 $t
     /tmp/ccCyL0em.s:1733   .text.display_current_menu:0000000000000000 display_current_menu
     /tmp/ccCyL0em.s:1769   .text.all_menu_dots:0000000000000000 $t
     /tmp/ccCyL0em.s:1777   .text.all_menu_dots:0000000000000000 all_menu_dots
     /tmp/ccCyL0em.s:1861   .text.all_menu_dots:0000000000000038 $d
     /tmp/ccCyL0em.s:1866   .text.umen_store:0000000000000000 $t
     /tmp/ccCyL0em.s:1874   .text.umen_store:0000000000000000 umen_store
     /tmp/ccCyL0em.s:1975   .text.umen_store:0000000000000050 $d
     /tmp/ccCyL0em.s:1980   .text.build_user_menu_from_program:0000000000000000 $t
     /tmp/ccCyL0em.s:1988   .text.build_user_menu_from_program:0000000000000000 build_user_menu_from_program
     /tmp/ccCyL0em.s:2399   .text.build_user_menu_from_program:0000000000000180 $d
     /tmp/ccCyL0em.s:2412   .text.build_user_menu:0000000000000000 $t
ARM GAS  /tmp/ccCyL0em.s 			page 182


     /tmp/ccCyL0em.s:2420   .text.build_user_menu:0000000000000000 build_user_menu
     /tmp/ccCyL0em.s:2436   .text.build_user_menu:0000000000000008 $d
     /tmp/ccCyL0em.s:2441   .text.shutdown:0000000000000000 $t
     /tmp/ccCyL0em.s:2449   .text.shutdown:0000000000000000 shutdown
     /tmp/ccCyL0em.s:2467   .text.shutdown:000000000000000c $d
     /tmp/ccCyL0em.s:2472   .text.is_key_pressed:0000000000000000 $t
     /tmp/ccCyL0em.s:2480   .text.is_key_pressed:0000000000000000 is_key_pressed
     /tmp/ccCyL0em.s:2503   .text.is_key_pressed:0000000000000010 $d
     /tmp/ccCyL0em.s:2508   .text.get_key:0000000000000000 $t
     /tmp/ccCyL0em.s:2516   .text.get_key:0000000000000000 get_key
     /tmp/ccCyL0em.s:2531   .text.get_key:0000000000000004 $d
     /tmp/ccCyL0em.s:2536   .text.put_key:0000000000000000 $t
     /tmp/ccCyL0em.s:2544   .text.put_key:0000000000000000 put_key
     /tmp/ccCyL0em.s:2623   .text.put_key:000000000000003c $d
     /tmp/ccCyL0em.s:2629   .text.shift_down:0000000000000000 $t
     /tmp/ccCyL0em.s:2637   .text.shift_down:0000000000000000 shift_down
     /tmp/ccCyL0em.s:2652   .text.start_key_timer:0000000000000000 $t
     /tmp/ccCyL0em.s:2660   .text.start_key_timer:0000000000000000 start_key_timer
     /tmp/ccCyL0em.s:2684   .text.start_key_timer:000000000000000c $d
     /tmp/ccCyL0em.s:2690   .text.keyticks:0000000000000000 $t
     /tmp/ccCyL0em.s:2698   .text.keyticks:0000000000000000 keyticks
     /tmp/ccCyL0em.s:2729   .text.keyticks:0000000000000018 $d
     /tmp/ccCyL0em.s:2735   .text.moveto:0000000000000000 $t
     /tmp/ccCyL0em.s:2743   .text.moveto:0000000000000000 moveto
     /tmp/ccCyL0em.s:2803   .text.moveto:000000000000002c $d
     /tmp/ccCyL0em.s:2810   .rodata.print_debug.str1.4:0000000000000000 $d
     /tmp/ccCyL0em.s:2814   .text.print_debug:0000000000000000 $t
     /tmp/ccCyL0em.s:2822   .text.print_debug:0000000000000000 print_debug
     /tmp/ccCyL0em.s:2924   .text.print_debug:0000000000000064 $d
                            *COM*:0000000000000016 print_string
     /tmp/ccCyL0em.s:2935   .rodata.print_debug2.str1.4:0000000000000000 $d
     /tmp/ccCyL0em.s:2939   .text.print_debug2:0000000000000000 $t
     /tmp/ccCyL0em.s:2947   .text.print_debug2:0000000000000000 print_debug2
     /tmp/ccCyL0em.s:3049   .text.print_debug2:0000000000000064 $d
     /tmp/ccCyL0em.s:3060   .text.do_now:0000000000000000 $t
     /tmp/ccCyL0em.s:3068   .text.do_now:0000000000000000 do_now
     /tmp/ccCyL0em.s:3103   .rodata.do_multi.str1.4:0000000000000000 $d
     /tmp/ccCyL0em.s:3107   .text.do_multi:0000000000000000 $t
     /tmp/ccCyL0em.s:3115   .text.do_multi:0000000000000000 do_multi
     /tmp/ccCyL0em.s:3145   .text.do_multi:0000000000000016 $d
     /tmp/ccCyL0em.s:3159   .text.do_multi:0000000000000024 $t
     /tmp/ccCyL0em.s:3574   .text.do_multi:00000000000001b8 $d
     /tmp/ccCyL0em.s:3588   .text.program_main:0000000000000000 $t
     /tmp/ccCyL0em.s:3596   .text.program_main:0000000000000000 program_main
     /tmp/ccCyL0em.s:3861   .text.program_main:000000000000011c $d
     /tmp/ccCyL0em.s:3867   .text.program_main:0000000000000128 $t
     /tmp/ccCyL0em.s:4260   .text.program_main:00000000000002dc $d
     /tmp/ccCyL0em.s:4301   .text.program_main:0000000000000364 $t
     /tmp/ccCyL0em.s:4769   .text.program_main:000000000000059c $d
     /tmp/ccCyL0em.s:4857   .bss.n_p:0000000000000000 n_p
     /tmp/ccCyL0em.s:5006   .data.spaces:0000000000000000 spaces
     /tmp/ccCyL0em.s:4997   .data.release:0000000000000000 release
     /tmp/ccCyL0em.s:4970   .data.h_shift:0000000000000000 h_shift
     /tmp/ccCyL0em.s:4961   .data.g_shift:0000000000000000 g_shift
     /tmp/ccCyL0em.s:4953   .data.f_shift:0000000000000000 f_shift
     /tmp/ccCyL0em.s:4979   .data.heartbeat:0000000000000000 heartbeat
     /tmp/ccCyL0em.s:4988   .data.no_key:0000000000000000 no_key
ARM GAS  /tmp/ccCyL0em.s 			page 183


     /tmp/ccCyL0em.s:5013   .rodata.MID_MENU:0000000000000000 MID_MENU
     /tmp/ccCyL0em.s:4797   .rodata.str1.4:0000000000000000 $d
     /tmp/ccCyL0em.s:7400   .rodata.mid_menu:0000000000000000 mid_menu
     /tmp/ccCyL0em.s:4838   .bss.default_menu:0000000000000000 default_menu
     /tmp/ccCyL0em.s:4844   .bss.last_menu:0000000000000000 last_menu
     /tmp/ccCyL0em.s:4832   .bss.current_menu:0000000000000000 current_menu
     /tmp/ccCyL0em.s:4947   .data.cmplx_key_string:0000000000000000 cmplx_key_string
     /tmp/ccCyL0em.s:4940   .data.arrow_key_string:0000000000000000 arrow_key_string
     /tmp/ccCyL0em.s:4871   .data.UserMenu:0000000000000000 UserMenu
     /tmp/ccCyL0em.s:4814   .rodata:0000000000000000 $d
     /tmp/ccCyL0em.s:4833   .bss.current_menu:0000000000000000 $d
     /tmp/ccCyL0em.s:4839   .bss.default_menu:0000000000000000 $d
     /tmp/ccCyL0em.s:4845   .bss.last_menu:0000000000000000 $d
     /tmp/ccCyL0em.s:4847   .bss.mdots:0000000000000000 $d
     /tmp/ccCyL0em.s:4851   .bss.mdots:0000000000000000 mdots
     /tmp/ccCyL0em.s:4854   .bss.n_p:0000000000000000 $d
     /tmp/ccCyL0em.s:4860   .bss.start_ticks:0000000000000000 $d
     /tmp/ccCyL0em.s:4864   .bss.start_ticks:0000000000000000 start_ticks
     /tmp/ccCyL0em.s:4867   .data.UserMenu:0000000000000000 $d
     /tmp/ccCyL0em.s:4936   .data.arrow_key_string:0000000000000000 $d
     /tmp/ccCyL0em.s:4943   .data.cmplx_key_string:0000000000000000 $d
     /tmp/ccCyL0em.s:4950   .data.f_shift:0000000000000000 $d
     /tmp/ccCyL0em.s:4958   .data.g_shift:0000000000000000 $d
     /tmp/ccCyL0em.s:4966   .data.h_shift:0000000000000000 $d
     /tmp/ccCyL0em.s:4975   .data.heartbeat:0000000000000000 $d
     /tmp/ccCyL0em.s:4984   .data.no_key:0000000000000000 $d
     /tmp/ccCyL0em.s:4993   .data.release:0000000000000000 $d
     /tmp/ccCyL0em.s:5002   .data.spaces:0000000000000000 $d
     /tmp/ccCyL0em.s:5009   .rodata.MID_MENU:0000000000000000 $d
     /tmp/ccCyL0em.s:5019   .rodata.Menus:0000000000000000 $d
     /tmp/ccCyL0em.s:6662   .rodata.mapping_alpha.11156:0000000000000000 $d
     /tmp/ccCyL0em.s:6666   .rodata.mapping_alpha.11156:0000000000000000 mapping_alpha.11156
     /tmp/ccCyL0em.s:6809   .rodata.mapping_fshift.11154:0000000000000000 $d
     /tmp/ccCyL0em.s:6813   .rodata.mapping_fshift.11154:0000000000000000 mapping_fshift.11154
     /tmp/ccCyL0em.s:6956   .rodata.mapping_gshift.11155:0000000000000000 $d
     /tmp/ccCyL0em.s:6960   .rodata.mapping_gshift.11155:0000000000000000 mapping_gshift.11155
     /tmp/ccCyL0em.s:7103   .rodata.mapping_none.11153:0000000000000000 $d
     /tmp/ccCyL0em.s:7107   .rodata.mapping_none.11153:0000000000000000 mapping_none.11153
     /tmp/ccCyL0em.s:7250   .rodata.mapping_running.11157:0000000000000000 $d
     /tmp/ccCyL0em.s:7254   .rodata.mapping_running.11157:0000000000000000 mapping_running.11157
     /tmp/ccCyL0em.s:7397   .rodata.mid_menu:0000000000000000 $d
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154

UNDEFINED SYMBOLS
charlengths
findlengths
unpackchar
forceDispPlot
RectPolConv
xcopy
SvnRevision
memcpy
main_ram
pixel_length
strncpy
findmultilbl
do_inc
getprog
<<<<<<< HEAD
ARM GAS  /tmp/ccYZHbMX.s 			page 184
=======
ARM GAS  /tmp/ccCyL0em.s 			page 184
>>>>>>> 398127a21a29cc77b704d6bfd502226541daa154


prt_umen
catcmd
strcpy
sprintf
process_keycode_with_shift
reset_shift
flash_backup
flash_restore
save_lib_file
load_lib_file
save_ram_file
load_ram_file
load_prog_file
save_prog_file
do_all_dots
init_mem
init_RegionTab
init_34s
check_create_wp34sdir
load_backup_file
display
cur_shift
StateWhileOn
DispMsg
KeyCallback
JustDisplayed
Pause
Running
DM42_Ticker
is_dot
dot
finish_LEQ
get_alpha_state
StopWatchStatus
JustStopped

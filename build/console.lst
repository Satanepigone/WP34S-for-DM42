ARM GAS  /tmp/cc7sTUNp.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"console.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.menu_line_str.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC1:
  20 0000 41626F75 		.ascii	"About >\000"
  20      74203E00 
  21              		.section	.text.menu_line_str,"ax",%progbits
  22              		.align	1
  23              		.p2align 2,,3
  24              		.global	menu_line_str
  25              		.arch armv7e-m
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  29              		.fpu fpv4-sp-d16
  31              	menu_line_str:
  32              	.LVL0:
  33              	.LFB4:
  34              		.file 1 "src/menu.c"
   1:src/menu.c    **** #include <menu.h>
   2:src/menu.c    **** 
   3:src/menu.c    **** /* 
   4:src/menu.c    ****  * System menu stuff
   5:src/menu.c    ****  */
   6:src/menu.c    **** 
   7:src/menu.c    **** #define MI_ABOUT_PGM 11
   8:src/menu.c    **** 
   9:src/menu.c    **** const uint8_t mid_menu[] = {
  10:src/menu.c    ****     MI_SYSTEM_ENTER,
  11:src/menu.c    ****     MI_MSC,
  12:src/menu.c    ****     MI_ABOUT_PGM,
  13:src/menu.c    ****     0 }; // Terminator
  14:src/menu.c    **** 
  15:src/menu.c    **** const smenu_t MID_MENU = { "System!",  mid_menu,   NULL, NULL };
  16:src/menu.c    **** 
  17:src/menu.c    **** void disp_about(void);
  18:src/menu.c    **** 
  19:src/menu.c    **** int run_menu_item(uint8_t line_id) {
  20:src/menu.c    ****   int ret = 0;
  21:src/menu.c    **** 
  22:src/menu.c    ****   switch(line_id) {
  23:src/menu.c    ****     case MI_ABOUT_PGM:
ARM GAS  /tmp/cc7sTUNp.s 			page 2


  24:src/menu.c    ****       disp_about();
  25:src/menu.c    ****       break;
  26:src/menu.c    **** 
  27:src/menu.c    ****      default:
  28:src/menu.c    ****       ret = MRET_UNIMPL;
  29:src/menu.c    ****       break;
  30:src/menu.c    ****   }
  31:src/menu.c    **** 
  32:src/menu.c    ****   return ret;
  33:src/menu.c    **** }
  34:src/menu.c    **** 
  35:src/menu.c    **** const char * menu_line_str(uint8_t line_id, char * s, const int slen) {
  35              		.loc 1 35 71 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  36:src/menu.c    ****   const char * ln;
  40              		.loc 1 36 3 view .LVU1
  37:src/menu.c    **** 
  38:src/menu.c    ****   switch(line_id) {
  41              		.loc 1 38 3 view .LVU2
  39:src/menu.c    **** 
  40:src/menu.c    ****   case MI_ABOUT_PGM:    ln = "About >";              break;
  41:src/menu.c    **** 
  42:src/menu.c    ****   default:
  43:src/menu.c    ****     ln = NULL;
  42              		.loc 1 43 8 is_stmt 0 view .LVU3
  43 0000 024B     		ldr	r3, .L5
  38:src/menu.c    **** 
  44              		.loc 1 38 3 view .LVU4
  45 0002 0B28     		cmp	r0, #11
  44:src/menu.c    ****     break;
  45:src/menu.c    ****   }
  46:src/menu.c    **** 
  47:src/menu.c    ****   return ln;
  48:src/menu.c    **** }
  46              		.loc 1 48 1 view .LVU5
  47 0004 0CBF     		ite	eq
  48 0006 1846     		moveq	r0, r3
  49              	.LVL1:
  50              		.loc 1 48 1 view .LVU6
  51 0008 0020     		movne	r0, #0
  52 000a 7047     		bx	lr
  53              	.L6:
  54              		.align	2
  55              	.L5:
  56 000c 00000000 		.word	.LC1
  57              		.cfi_endproc
  58              	.LFE4:
  60              		.section	.text.set_menu_label.constprop.0,"ax",%progbits
  61              		.align	1
  62              		.p2align 2,,3
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc7sTUNp.s 			page 3


  68              	set_menu_label.constprop.0:
  69              	.LVL2:
  70              	.LFB30:
  49:src/menu.c    **** 
  50:src/menu.c    **** void disp_about() {
  51:src/menu.c    ****   lcd_clear_buf();
  52:src/menu.c    ****   lcd_writeClr(t24);
  53:src/menu.c    **** 
  54:src/menu.c    ****   lcd_setXY(t24, 0, 5);
  55:src/menu.c    ****   lcd_printR(t24, "WP34s calculator for DM42:");
  56:src/menu.c    ****   t24->y += 5;
  57:src/menu.c    **** #ifdef TOP_ROW
  58:src/menu.c    ****   lcd_print(t24, "with top row for annunciators,");
  59:src/menu.c    ****   lcd_print(t24, "a longer alpha display,");
  60:src/menu.c    ****   lcd_print(t24, "and some annunciators renamed.");
  61:src/menu.c    **** #elif defined(BIGGER_DISPLAY)
  62:src/menu.c    ****   lcd_print(t24, "with a longer alpha display");
  63:src/menu.c    ****   lcd_print(t24, "than the original calculator,");
  64:src/menu.c    ****   lcd_print(t24, "and some annunciators renamed.");
  65:src/menu.c    ****   #else
  66:src/menu.c    ****   lcd_print(t24, "Just like the original calculator");
  67:src/menu.c    ****   lcd_print(t24, "but with some annunciators renamed.");
  68:src/menu.c    **** #endif
  69:src/menu.c    ****   t24->y += 5;
  70:src/menu.c    ****   lcd_printR(t24, "This software is neither provided");
  71:src/menu.c    ****   lcd_printR(t24, "by nor supported by SwissMicros.");
  72:src/menu.c    **** 
  73:src/menu.c    ****   t24->y = LCD_Y - lcd_lineHeight(t24)-5;
  74:src/menu.c    ****   t24->x = 20;
  75:src/menu.c    ****   lcd_printR(t24, "    Press EXIT key to continue...");
  76:src/menu.c    **** 
  77:src/menu.c    ****   lcd_refresh();
  78:src/menu.c    **** 
  79:src/menu.c    ****   wait_for_key_press();
  80:src/menu.c    **** }
  81:src/menu.c    **** 
  82:src/menu.c    **** /*
  83:src/menu.c    ****  * WP34s menu code
  84:src/menu.c    ****  */
  85:src/menu.c    **** 
  86:src/menu.c    **** void set_menu ( int new_menu ) {
  87:src/menu.c    ****   int m = current_menu;
  88:src/menu.c    ****   if (new_menu == current_menu) { // return to default
  89:src/menu.c    ****     current_menu = default_menu;
  90:src/menu.c    ****   }
  91:src/menu.c    ****   else if (new_menu == -1) { // go to last menu
  92:src/menu.c    ****     current_menu = last_menu;
  93:src/menu.c    ****   }
  94:src/menu.c    ****   else {
  95:src/menu.c    ****     current_menu = new_menu; // change to new menu
  96:src/menu.c    ****   }
  97:src/menu.c    ****   if (m != 9) last_menu = m; // store menu as last menu unless it's arrow!
  98:src/menu.c    **** }
  99:src/menu.c    **** 
 100:src/menu.c    **** void toggle_default_menu () {
 101:src/menu.c    ****   if (current_menu == default_menu) {
 102:src/menu.c    ****     current_menu = default_menu = 15 - default_menu;
ARM GAS  /tmp/cc7sTUNp.s 			page 4


 103:src/menu.c    ****   }
 104:src/menu.c    **** }
 105:src/menu.c    **** 
 106:src/menu.c    **** int get_menu () {
 107:src/menu.c    ****   return current_menu;
 108:src/menu.c    **** }
 109:src/menu.c    **** 
 110:src/menu.c    **** void display_current_menu () {
 111:src/menu.c    ****   display_menu (current_menu);
 112:src/menu.c    **** }
 113:src/menu.c    **** 
 114:src/menu.c    **** void set_last_menu () {
 115:src/menu.c    ****   set_menu (last_menu);
 116:src/menu.c    **** }
 117:src/menu.c    **** 
 118:src/menu.c    **** static unsigned char mdots[200][2];
 119:src/menu.c    **** 
 120:src/menu.c    **** static const struct _menu Menus[] = {
 121:src/menu.c    ****   {
 122:src/menu.c    ****     "Blank", // 0
 123:src/menu.c    ****     { 
 124:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 125:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 126:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 127:src/menu.c    ****       { NO_KEY, NO_KEY, "", "" },
 128:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 129:src/menu.c    ****       { CMPLX_KEY, { K_MULTI, DOTS }, "CPX", "" },
 130:src/menu.c    ****     }    
 131:src/menu.c    ****   },
 132:src/menu.c    ****   {
 133:src/menu.c    ****     "Clear", // 1
 134:src/menu.c    ****     { 
 135:src/menu.c    ****       { { K24, 1 }, { K_OP, OP_NIL | OP_CLPALL }, "CLProg", "CLPAll" },
 136:src/menu.c    ****       { { K24, 2 }, { K_OP, OP_NIL | OP_CLREG }, "CL\221", "CLReg" },
 137:src/menu.c    ****       { { K24, 3 }, { K_OP, OP_NIL | OP_CLRALPHA }, "CLx", "CL\006\240" },
 138:src/menu.c    ****       { { K_OP, OP_NIL | OP_CLSTK }, { K_OP, OP_NIL | OP_CLALL }, "CLStk", "CLAll" },
 139:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 140:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 141:src/menu.c    ****     }    
 142:src/menu.c    ****   },
 143:src/menu.c    ****   {
 144:src/menu.c    ****     "DISP", // 2
 145:src/menu.c    ****     { 
 146:src/menu.c    ****       { { K00, 3 }, { K05, 1 }, "ALL", "a b/c" },
 147:src/menu.c    ****       { { K01, 3 }, { K05, 2 }, "FIX", "d/c" },
 148:src/menu.c    ****       { { K02, 3 }, { K10, 1 }, "SCI", "H.MS" },
 149:src/menu.c    ****       { { K03, 3 }, { K11, 1 }, "ENG", "H.d" },
 150:src/menu.c    ****       { ARROW_KEY, { K62, 3 }, "--\015", "./," },
 151:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 152:src/menu.c    ****     }
 153:src/menu.c    ****   },
 154:src/menu.c    ****   {
 155:src/menu.c    ****     "BASE", // 3
 156:src/menu.c    ****     { 
 157:src/menu.c    ****       { { K22, 1 }, { K22, 3 }, "BIN", "not" },
 158:src/menu.c    ****       { { K22, 2 }, { K31, 3 }, "OCT", "and" },
 159:src/menu.c    ****       { { K23, 1 }, { K32, 3 }, "DEC", "or" },
ARM GAS  /tmp/cc7sTUNp.s 			page 5


 160:src/menu.c    ****       { { K23, 2 }, { K33, 3 }, "HEX", "xor" },
 161:src/menu.c    ****       { ARROW_KEY, { K34, 3}, "--\015", "RMDR" },
 162:src/menu.c    ****       { CMPLX_KEY, { K11, 1}, "CPX", "H.d" },
 163:src/menu.c    ****     }
 164:src/menu.c    ****   },
 165:src/menu.c    ****   {
 166:src/menu.c    ****     "ANGLES", // 4
 167:src/menu.c    ****     { 
 168:src/menu.c    ****       { { K10, 2 }, { K04, 1 }, "DEG", "P\015R" },
 169:src/menu.c    ****       { { K11, 2 }, { K04, 2 }, "RAD", "R\015P" },
 170:src/menu.c    ****       { { K12, 2 }, { K00, 1 }, "GRAD", "HYP" },
 171:src/menu.c    ****       { { K10, 1 }, { K11, 1 }, "H.MS", "H.d" },
 172:src/menu.c    ****       { ARROW_KEY, { K00, 2 }, "--\015", "HYP\235" },
 173:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 174:src/menu.c    ****     }
 175:src/menu.c    ****       
 176:src/menu.c    ****   },
 177:src/menu.c    ****   {
 178:src/menu.c    ****     "MISC", // 5
 179:src/menu.c    ****     { 
 180:src/menu.c    ****       { { K61, 1 }, { K32, 1 }, "|X|", "2\234" },
 181:src/menu.c    ****       { { K61, 2 }, { K32, 2 }, "RND", "Log\272" },
 182:src/menu.c    ****       { { K62, 1 }, { K33, 2 }, "IPart", "Log\213" },
 183:src/menu.c    ****       { { K62, 2 }, { K34, 2 }, "FPart", "||el" },
 184:src/menu.c    ****       { ARROW_KEY, { K54, 2 }, "--\015", "\203%" },
 185:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 186:src/menu.c    ****     }
 187:src/menu.c    ****   },
 188:src/menu.c    ****   {
 189:src/menu.c    ****     "X<>Y Key", // 6
 190:src/menu.c    ****     { 
 191:src/menu.c    ****       { { K21, 1 }, NO_KEY, "Show\016", "" },
 192:src/menu.c    ****       { { K21, 2 }, NO_KEY, "Show\015", "" },
 193:src/menu.c    ****       { { K21, 3 }, { K_OP, RARG_BASEOP(RARG_SWAPZ) }, "x\027?", "z\027?" },
 194:src/menu.c    ****       { { K_OP, RARG_BASEOP(RARG_SWAPY) }, { K_OP, RARG_BASEOP(RARG_SWAPT) }, "y\027?", "t\027?" },
 195:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 196:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 197:src/menu.c    ****     }    
 198:src/menu.c    ****   },
 199:src/menu.c    ****   {
 200:src/menu.c    ****     "Program", // 7
 201:src/menu.c    ****     { 
 202:src/menu.c    ****       { { K63, 1 }, { K64, 1 }, "LBL", "DSE" },
 203:src/menu.c    ****       { { K63, 2 }, { K64, 2 }, "RTN", "ISG" },
 204:src/menu.c    ****       { { K61, 3 }, { K_OP, RARG_BASEOP(RARG_DEC) }, "Pause", "DEC" },
 205:src/menu.c    ****       { { K30, 3 }, { K_OP, RARG_BASEOP(RARG_INC) }, "GTO", "INC" },
 206:src/menu.c    ****       { ARROW_KEY, { K_OP, RARG_BASEOP(RARG_BACK) }, "--\015", "BACK" },
 207:src/menu.c    ****       { CMPLX_KEY, { K_OP, RARG_BASEOP(RARG_SKIP) }, "CPX", "SKIP" },
 208:src/menu.c    ****     }
 209:src/menu.c    ****   },
 210:src/menu.c    ****   {
 211:src/menu.c    ****     "Setup 1", // 8
 212:src/menu.c    ****     { 
 213:src/menu.c    ****       { { K_EXIT, 0}, { K_SYS, 0 }, "EXIT", "System" },
 214:src/menu.c    ****       { { K_MULTI, HELP }, NO_KEY, "HELP", "" },
 215:src/menu.c    ****       { { K_MULTI, ONSTO }, { K_MULTI, WRTST}, "OnSTO", "SvRAM" },
 216:src/menu.c    ****       { { K_MULTI, ONRCL }, { K_MULTI, LDST}, "OnRCL", "LdRAM" },
ARM GAS  /tmp/cc7sTUNp.s 			page 6


 217:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 218:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 219:src/menu.c    ****     }
 220:src/menu.c    ****   },
 221:src/menu.c    ****   {
 222:src/menu.c    ****     "Arrow", // 9
 223:src/menu.c    ****     { 
 224:src/menu.c    ****       { { K22, 1 }, { K10, 2 }, "Bin", "DEG" },
 225:src/menu.c    ****       { { K22, 2 }, { K11, 2 }, "Oct", "RAD" },
 226:src/menu.c    ****       { { K23, 1 }, { K12, 2 }, "Dec", "Grad" },
 227:src/menu.c    ****       { { K23, 2 }, { K10, 1 }, "Hex", "\015HMS" },
 228:src/menu.c    ****       { ARROW_KEY, { K11, 1 }, "--\015", "HMS\015" },
 229:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 230:src/menu.c    ****     }
 231:src/menu.c    ****   },
 232:src/menu.c    ****   {
 233:src/menu.c    ****     "Flags", // 10
 234:src/menu.c    ****     { 
 235:src/menu.c    ****       { { K50, 1 }, { K_OP, RARG_BASEOP(RARG_FS) }, "SF_", "FS?" },
 236:src/menu.c    ****       { { K50, 2 }, { K_OP, RARG_BASEOP(RARG_FC)}, "CF_", "FC?" },
 237:src/menu.c    ****       { { K51, 1 }, { K_OP, RARG_BASEOP(RARG_TEST_LT)}, "x=?", "x<?" },
 238:src/menu.c    ****       { { K51, 2 }, { K_OP, RARG_BASEOP(RARG_TEST_LE)}, "x\013?", "x<=?" },
 239:src/menu.c    ****       { ARROW_KEY, { K_OP, RARG_BASEOP(RARG_TEST_GT)}, "--\015", "x>?" },
 240:src/menu.c    ****       { CMPLX_KEY, { K_OP, RARG_BASEOP(RARG_TEST_GE)}, "CPX", "x>=?" },
 241:src/menu.c    ****     }
 242:src/menu.c    ****   },
 243:src/menu.c    ****   {
 244:src/menu.c    ****     "Probability", // 11
 245:src/menu.c    ****     { 
 246:src/menu.c    ****       { { K40, 3 }, { K_OP, OP_MON | OP_LNGAMMA }, "Fact!", "Ln\006\202" },
 247:src/menu.c    ****       { { K40, 1 }, { K41, 1 }, "Cy,x", "\224" }, // phi
 248:src/menu.c    ****       { { K40, 2 }, { K41, 2 }, "Py,x", "\224\235" }, // phi^-1
 249:src/menu.c    ****       { { K12, 1 }, { K_OP, OP_NIL | OP_STORANDOM } , "RAN#", "SEED" },
 250:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 251:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 252:src/menu.c    ****     }
 253:src/menu.c    ****   },
 254:src/menu.c    ****   {
 255:src/menu.c    ****     "Statistics", // 12
 256:src/menu.c    ****     /*
 257:src/menu.c    ****      *xbar, sd;
 258:src/menu.c    ****      *yhat, xhat;
 259:src/menu.c    ****      *corr, L.R.;
 260:src/menu.c    ****      *best, linear;
 261:src/menu.c    ****      *ln, exp;
 262:src/menu.c    ****      *cmplx, power;
 263:src/menu.c    ****      *No, sums is already on g9.
 264:src/menu.c    ****      */
 265:src/menu.c    ****     { 
 266:src/menu.c    ****       { { K42, 1 }, { K42, 2 }, "\001", "S.D." },
 267:src/menu.c    ****       { { K43, 1 }, { K_OP, OP_MON | OP_xhat }, "y-hat", "x-hat" },
 268:src/menu.c    ****       { { K_OP, OP_NIL | OP_statR}, { K_OP, OP_NIL | OP_statLR}, "CORR", "L.R." },
 269:src/menu.c    ****       { { K_OP, OP_NIL | OP_BEST}, { K_OP, OP_NIL | OP_LOGF}, "BestF", "LogFit" },
 270:src/menu.c    ****       { { K_OP, OP_NIL | OP_LINF}, { K_OP, OP_NIL | OP_EXPF}, "Linear", "ExpFit" },
 271:src/menu.c    ****       { CMPLX_KEY, { K_OP, OP_NIL | OP_PWRF }, "CPX", "PwrFit" },
 272:src/menu.c    ****     }
 273:src/menu.c    ****   },
ARM GAS  /tmp/cc7sTUNp.s 			page 7


 274:src/menu.c    ****   {
 275:src/menu.c    ****     "Setup 2", // 13
 276:src/menu.c    ****     { 
 277:src/menu.c    ****       { { K_MULTI, WRLIB}, NO_KEY, "SvLIB", "" },
 278:src/menu.c    ****       { { K_MULTI, LLIB }, NO_KEY, "LdLIB", "" },
 279:src/menu.c    ****       { { K_MULTI, SVPRG }, NO_KEY, "SvCPRG", "" },
 280:src/menu.c    ****       { { K_MULTI, LDPRG }, NO_KEY, "LdPRG", "" },
 281:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 282:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 283:src/menu.c    ****     }
 284:src/menu.c    ****   },
 285:src/menu.c    ****   {
 286:src/menu.c    ****     "Integ/Sum/Prod", // 14
 287:src/menu.c    ****     { 
 288:src/menu.c    ****       { { K52, 1 }, NO_KEY, "SLV", "" },
 289:src/menu.c    ****       { { K52, 2 }, NO_KEY, "\004 dx", "" },
 290:src/menu.c    ****       { { K53, 1 }, NO_KEY, "SUM", "" },
 291:src/menu.c    ****       { { K53, 2 }, NO_KEY, "PROD", "" },
 292:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 293:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 294:src/menu.c    ****     }
 295:src/menu.c    ****   },
 296:src/menu.c    ****   {
 297:src/menu.c    ****     "Blank with A-D", // 15
 298:src/menu.c    ****     { 
 299:src/menu.c    ****       { { K64, 3 }, NO_KEY, "\221+", "" },
 300:src/menu.c    ****       { { K34, 1 }, NO_KEY, "1/X", "" },
 301:src/menu.c    ****       { { K44, 1 }, NO_KEY, "\003X", "" },
 302:src/menu.c    ****       { { K31, 2 }, NO_KEY, "LOG", "" },
 303:src/menu.c    ****       { ARROW_KEY, NO_KEY, "--\015", "" },
 304:src/menu.c    ****       { CMPLX_KEY, NO_KEY, "CPX", "" },
 305:src/menu.c    ****     }    
 306:src/menu.c    ****   },
 307:src/menu.c    **** };  
 308:src/menu.c    **** 
 309:src/menu.c    **** /* This code is the set_status_sized code with small changes
 310:src/menu.c    ****  * and non-DM42 code removed.
 311:src/menu.c    ****  * MENU_WIDTH - width of menu item in "dots", not in pixels.
 312:src/menu.c    ****  */
 313:src/menu.c    **** #define MENU_WIDTH 32
 314:src/menu.c    **** 
 315:src/menu.c    **** static void set_menu_label (const char *str, int smallp, int dotcol, int shifted) {
  71              		.loc 1 315 13 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 544
  74              		@ frame_needed = 0, uses_anonymous_args = 0
 316:src/menu.c    ****   // dotcol is the number of the starting dot column
 317:src/menu.c    ****   // shifted is 1 if shifted
 318:src/menu.c    ****   unsigned short int posns[257];
  75              		.loc 1 318 3 view .LVU8
 319:src/menu.c    **** 
 320:src/menu.c    ****   // Mark posns as uninitialized, smallp must be 0 or 1 for this to work correctly.
 321:src/menu.c    ****   int posns_state = 255;
  76              		.loc 1 321 3 view .LVU9
 322:src/menu.c    **** 
 323:src/menu.c    ****   int x = dotcol;
  77              		.loc 1 323 3 view .LVU10
ARM GAS  /tmp/cc7sTUNp.s 			page 8


 315:src/menu.c    ****   // dotcol is the number of the starting dot column
  78              		.loc 1 315 13 is_stmt 0 view .LVU11
  79 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  80              		.cfi_def_cfa_offset 36
  81              		.cfi_offset 4, -36
  82              		.cfi_offset 5, -32
  83              		.cfi_offset 6, -28
  84              		.cfi_offset 7, -24
  85              		.cfi_offset 8, -20
  86              		.cfi_offset 9, -16
  87              		.cfi_offset 10, -12
  88              		.cfi_offset 11, -8
  89              		.cfi_offset 14, -4
  90 0004 ADF5097D 		sub	sp, sp, #548
  91              		.cfi_def_cfa_offset 584
 315:src/menu.c    ****   // dotcol is the number of the starting dot column
  92              		.loc 1 315 13 view .LVU12
  93 0008 CDE90102 		strd	r0, r2, [sp, #4]
 324:src/menu.c    ****   int i, j, xmax;
 325:src/menu.c    ****   xmax = ((dotcol/MENU_WIDTH)+1)*MENU_WIDTH;
  94              		.loc 1 325 18 view .LVU13
  95 000c 0029     		cmp	r1, #0
  96 000e B4BF     		ite	lt
  97 0010 01F11F03 		addlt	r3, r1, #31
  98 0014 0B46     		movge	r3, r1
 326:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 327:src/menu.c    **** 
 328:src/menu.c    ****   forceDispPlot=0;
  99              		.loc 1 328 16 view .LVU14
 100 0016 4848     		ldr	r0, .L41
 101              	.LVL3:
 315:src/menu.c    ****   // dotcol is the number of the starting dot column
 102              		.loc 1 315 13 view .LVU15
 103 0018 0F46     		mov	r7, r1
 104              	.LVL4:
 324:src/menu.c    ****   int i, j, xmax;
 105              		.loc 1 324 3 is_stmt 1 view .LVU16
 325:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 106              		.loc 1 325 3 view .LVU17
 329:src/menu.c    **** 
 330:src/menu.c    **** #ifdef RP_PREFIX
 331:src/menu.c    ****   RectPolConv = 0;
 107              		.loc 1 331 15 is_stmt 0 view .LVU18
 108 001a 4849     		ldr	r1, .L41+4
 109              	.LVL5:
 328:src/menu.c    **** 
 110              		.loc 1 328 16 view .LVU19
 111 001c 0022     		movs	r2, #0
 112              	.LVL6:
 328:src/menu.c    **** 
 113              		.loc 1 328 16 view .LVU20
 114 001e 0270     		strb	r2, [r0]
 115              		.loc 1 331 15 view .LVU21
 116 0020 0A60     		str	r2, [r1]
 332:src/menu.c    **** #endif
 333:src/menu.c    ****   while (*str != '\0' && x <= xmax )  {
 117              		.loc 1 333 10 view .LVU22
ARM GAS  /tmp/cc7sTUNp.s 			page 9


 118 0022 019A     		ldr	r2, [sp, #4]
 119 0024 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 325:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 120              		.loc 1 325 30 view .LVU23
 121 0026 23F01F03 		bic	r3, r3, #31
 325:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 122              		.loc 1 325 8 view .LVU24
 123 002a 03F12009 		add	r9, r3, #32
 124              	.LVL7:
 326:src/menu.c    **** 
 125              		.loc 1 326 3 is_stmt 1 view .LVU25
 328:src/menu.c    **** 
 126              		.loc 1 328 3 view .LVU26
 331:src/menu.c    **** #endif
 127              		.loc 1 331 3 view .LVU27
 128              		.loc 1 333 3 view .LVU28
 129              		.loc 1 333 9 view .LVU29
 130 002e 002D     		cmp	r5, #0
 131 0030 78D0     		beq	.L7
 132              		.loc 1 333 23 is_stmt 0 view .LVU30
 133 0032 4F45     		cmp	r7, r9
 134 0034 76DC     		bgt	.L7
 135              	.LBB39:
 334:src/menu.c    ****     int c;
 335:src/menu.c    ****     int width;
 336:src/menu.c    ****     unsigned char cmap[6];
 337:src/menu.c    **** 
 338:src/menu.c    ****     int real_width;
 339:src/menu.c    ****     int current_smallp;
 340:src/menu.c    **** 
 341:src/menu.c    ****     // A 007 byte followed by a mode byte changes the way the following character is printed.
 342:src/menu.c    ****     // Bit 7 (MSB) of the mode byte is currently unused and should be set to 1.
 343:src/menu.c    ****     // Bits 6-5: 00 -> don't change font
 344:src/menu.c    ****     //           01 -> (not used)
 345:src/menu.c    ****     //           10 -> use big font
 346:src/menu.c    ****     //           11 -> use small font
 347:src/menu.c    ****     // Bits 4-0: character will be considered this wide
 348:src/menu.c    ****     if (str[0] == '\007') {
 136              		.loc 1 348 8 view .LVU31
 137 0036 072D     		cmp	r5, #7
 138              	.LBE39:
 321:src/menu.c    **** 
 139              		.loc 1 321 7 view .LVU32
 140 0038 4FF0FF04 		mov	r4, #255
 141              	.LVL8:
 142              	.LBB56:
 334:src/menu.c    ****     int c;
 143              		.loc 1 334 5 is_stmt 1 view .LVU33
 335:src/menu.c    ****     unsigned char cmap[6];
 144              		.loc 1 335 5 view .LVU34
 336:src/menu.c    **** 
 145              		.loc 1 336 5 view .LVU35
 338:src/menu.c    ****     int current_smallp;
 146              		.loc 1 338 5 view .LVU36
 339:src/menu.c    **** 
 147              		.loc 1 339 5 view .LVU37
 148              		.loc 1 348 5 view .LVU38
ARM GAS  /tmp/cc7sTUNp.s 			page 10


 349:src/menu.c    ****       width = str[1] & 0x1F;
 350:src/menu.c    ****       switch (str[1] & 0x60) {
 351:src/menu.c    ****       default:
 352:src/menu.c    ****       case 0x00:	current_smallp = smallp;
 353:src/menu.c    **** 	break;
 354:src/menu.c    ****       case 0x40:	current_smallp = 0;
 355:src/menu.c    **** 	break;
 356:src/menu.c    ****       case 0x60:	current_smallp = 1;
 149              		.loc 1 356 33 is_stmt 0 view .LVU39
 150 003c 4FF0010A 		mov	r10, #1
 348:src/menu.c    ****       width = str[1] & 0x1F;
 151              		.loc 1 348 8 view .LVU40
 152 0040 64D1     		bne	.L11
 153              	.LVL9:
 154              	.L39:
 349:src/menu.c    ****       width = str[1] & 0x1F;
 155              		.loc 1 349 7 is_stmt 1 view .LVU41
 349:src/menu.c    ****       width = str[1] & 0x1F;
 156              		.loc 1 349 18 is_stmt 0 view .LVU42
 157 0042 019B     		ldr	r3, [sp, #4]
 158 0044 5E78     		ldrb	r6, [r3, #1]	@ zero_extendqisi2
 159 0046 06F06003 		and	r3, r6, #96
 350:src/menu.c    ****       default:
 160              		.loc 1 350 7 view .LVU43
 161 004a 402B     		cmp	r3, #64
 349:src/menu.c    ****       width = str[1] & 0x1F;
 162              		.loc 1 349 13 view .LVU44
 163 004c 06F01F06 		and	r6, r6, #31
 164              	.LVL10:
 350:src/menu.c    ****       default:
 165              		.loc 1 350 7 is_stmt 1 view .LVU45
 166 0050 6CD0     		beq	.L34
 167 0052 602B     		cmp	r3, #96
 168 0054 6AD1     		bne	.L34
 169              		.loc 1 356 18 view .LVU46
 170              	.LVL11:
 357:src/menu.c    **** 	break;
 171              		.loc 1 357 2 view .LVU47
 358:src/menu.c    ****       }
 359:src/menu.c    ****       c = (unsigned char) str[2] + (current_smallp ? 256 : 0);
 172              		.loc 1 359 7 view .LVU48
 173              		.loc 1 359 11 is_stmt 0 view .LVU49
 174 0056 019B     		ldr	r3, [sp, #4]
 175 0058 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 356:src/menu.c    **** 	break;
 176              		.loc 1 356 33 view .LVU50
 177 005a 0123     		movs	r3, #1
 178 005c 0093     		str	r3, [sp]
 179 005e 00F58075 		add	r5, r0, #256
 180              	.LVL12:
 181              	.L15:
 360:src/menu.c    ****       str += 3;
 182              		.loc 1 360 7 is_stmt 1 view .LVU51
 361:src/menu.c    **** 
 362:src/menu.c    ****       real_width = charlengths(c);
 183              		.loc 1 362 20 is_stmt 0 view .LVU52
 184 0062 2846     		mov	r0, r5
ARM GAS  /tmp/cc7sTUNp.s 			page 11


 185 0064 FFF7FEFF 		bl	charlengths
 186              	.LVL13:
 360:src/menu.c    ****       str += 3;
 187              		.loc 1 360 11 view .LVU53
 188 0068 019B     		ldr	r3, [sp, #4]
 189 006a 0333     		adds	r3, r3, #3
 190 006c 0193     		str	r3, [sp, #4]
 191              	.LVL14:
 192              		.loc 1 362 7 is_stmt 1 view .LVU54
 363:src/menu.c    ****     } else {
 364:src/menu.c    ****       c = (unsigned char) *str++ + offset;
 365:src/menu.c    ****       real_width = width = charlengths(c);
 366:src/menu.c    ****       current_smallp = smallp;
 367:src/menu.c    ****     }
 368:src/menu.c    **** 
 369:src/menu.c    ****     if (x + real_width > xmax)
 193              		.loc 1 369 5 view .LVU55
 194              		.loc 1 369 11 is_stmt 0 view .LVU56
 195 006e C319     		adds	r3, r0, r7
 196              	.LVL15:
 197              		.loc 1 369 8 view .LVU57
 198 0070 9945     		cmp	r9, r3
 199 0072 57DB     		blt	.L7
 200              	.L40:
 370:src/menu.c    ****       break;
 371:src/menu.c    **** 
 372:src/menu.c    ****     if (posns_state != current_smallp) {
 201              		.loc 1 372 5 is_stmt 1 view .LVU58
 202              		.loc 1 372 8 is_stmt 0 view .LVU59
 203 0074 009B     		ldr	r3, [sp]
 204 0076 A342     		cmp	r3, r4
 373:src/menu.c    ****       findlengths(posns, current_smallp);
 205              		.loc 1 373 7 view .LVU60
 206 0078 07AB     		add	r3, sp, #28
 372:src/menu.c    ****       findlengths(posns, current_smallp);
 207              		.loc 1 372 8 view .LVU61
 208 007a 05D0     		beq	.L18
 209              		.loc 1 373 7 is_stmt 1 view .LVU62
 210 007c 1846     		mov	r0, r3
 211              	.LVL16:
 212              		.loc 1 373 7 is_stmt 0 view .LVU63
 213 007e 0099     		ldr	r1, [sp]
 214 0080 0393     		str	r3, [sp, #12]
 215 0082 FFF7FEFF 		bl	findlengths
 216              	.LVL17:
 217 0086 039B     		ldr	r3, [sp, #12]
 374:src/menu.c    ****       posns_state = current_smallp;
 218              		.loc 1 374 7 is_stmt 1 view .LVU64
 219              	.LVL18:
 220              	.L18:
 375:src/menu.c    ****     }
 376:src/menu.c    ****     unpackchar(c, cmap, current_smallp, posns); // cmap contains a row of c in each element
 221              		.loc 1 376 5 view .LVU65
 222 0088 009A     		ldr	r2, [sp]
 223 008a 2846     		mov	r0, r5
 224 008c 05A9     		add	r1, sp, #20
 225 008e FFF7FEFF 		bl	unpackchar
ARM GAS  /tmp/cc7sTUNp.s 			page 12


 226              	.LVL19:
 377:src/menu.c    **** 
 378:src/menu.c    ****     for (i=0; i<6; i++) {// rows
 227              		.loc 1 378 5 view .LVU66
 228              		.loc 1 378 15 view .LVU67
 229 0092 029B     		ldr	r3, [sp, #8]
 230 0094 03EB4704 		add	r4, r3, r7, lsl #1
 231 0098 294B     		ldr	r3, .L41+8
 232 009a 0DF1140B 		add	fp, sp, #20
 233 009e 1C44     		add	r4, r4, r3
 376:src/menu.c    **** 
 234              		.loc 1 376 5 is_stmt 0 view .LVU68
 235 00a0 4FF0050E 		mov	lr, #5
 236 00a4 A9EB0705 		sub	r5, r9, r7
 237              	.LVL20:
 238              	.L19:
 379:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 239              		.loc 1 379 17 is_stmt 1 view .LVU69
 240              		.loc 1 379 7 is_stmt 0 view .LVU70
 241 00a8 002E     		cmp	r6, #0
 242 00aa 1FDD     		ble	.L25
 380:src/menu.c    **** 	if (x+j >= xmax)
 243              		.loc 1 380 2 is_stmt 1 view .LVU71
 244              		.loc 1 380 5 is_stmt 0 view .LVU72
 245 00ac B945     		cmp	r9, r7
 246 00ae 1DDD     		ble	.L25
 247              	.LBB40:
 248              	.LBB41:
 249              	.LBB42:
 250              	.LBB43:
 381:src/menu.c    **** 	  break;
 382:src/menu.c    **** 	mdot(x+j, 5-i, shifted, (cmap[i] & (1 << j))?1:0); // set or reset dot at col x+j, row i
 383:src/menu.c    ****       }
 384:src/menu.c    ****     }
 385:src/menu.c    ****     x += width;
 386:src/menu.c    ****   }
 387:src/menu.c    **** }
 388:src/menu.c    **** 
 389:src/menu.c    **** 
 390:src/menu.c    **** /* Determine the pixel length of the string if it were displayed.
 391:src/menu.c    **** 
 392:src/menu.c    **** int pixel_length(const char *s, int smallp)
 393:src/menu.c    **** {
 394:src/menu.c    ****   int len = 0;
 395:src/menu.c    ****   const int offset = smallp ? 256 : 0;
 396:src/menu.c    ****   while (*s != '\0') {
 397:src/menu.c    ****     if (s[0] == '\007') {
 398:src/menu.c    ****       len += s[1] & 0x1F;
 399:src/menu.c    ****       s += 3;
 400:src/menu.c    ****       continue;
 401:src/menu.c    ****     }
 402:src/menu.c    ****     len += charlengths( (unsigned char) *s++ + offset );
 403:src/menu.c    ****   }
 404:src/menu.c    ****   return len;
 405:src/menu.c    **** }
 406:src/menu.c    **** */
 407:src/menu.c    **** 
ARM GAS  /tmp/cc7sTUNp.s 			page 13


 408:src/menu.c    **** 
 409:src/menu.c    **** void mdot(int i, int j, int s, int on) { // Column i, row j, state on
 410:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 411:src/menu.c    ****   if (on) {
 412:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 413:src/menu.c    ****   }
 414:src/menu.c    ****   else {
 415:src/menu.c    ****     mdots[i][s] &= ~( 1 << j );
 251              		.loc 1 415 25 view .LVU73
 252 00b0 0AFA0EFC 		lsl	ip, r10, lr
 253              		.loc 1 415 17 view .LVU74
 254 00b4 4FFA8CFC 		sxtb	ip, ip
 255              	.LBE43:
 256              	.LBE42:
 257              	.LBE41:
 258              	.LBE40:
 382:src/menu.c    ****       }
 259              		.loc 1 382 31 view .LVU75
 260 00b8 9BF80000 		ldrb	r0, [fp]	@ zero_extendqisi2
 261              	.LBB53:
 262              	.LBB50:
 263              	.LBB47:
 264              	.LBB44:
 265              		.loc 1 415 17 view .LVU76
 266 00bc 6FEA0C08 		mvn	r8, ip
 267              	.LBE44:
 268              	.LBE47:
 269              	.LBE50:
 270              	.LBE53:
 379:src/menu.c    **** 	if (x+j >= xmax)
 271              		.loc 1 379 13 view .LVU77
 272 00c0 0023     		movs	r3, #0
 273 00c2 01E0     		b	.L20
 274              	.LVL21:
 275              	.L24:
 380:src/menu.c    **** 	  break;
 276              		.loc 1 380 5 view .LVU78
 277 00c4 9D42     		cmp	r5, r3
 278 00c6 11D0     		beq	.L25
 279              	.LVL22:
 280              	.L20:
 382:src/menu.c    ****       }
 281              		.loc 1 382 2 is_stmt 1 view .LVU79
 282              	.LBB54:
 283              	.LBI40:
 409:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 284              		.loc 1 409 6 view .LVU80
 285              	.LBB51:
 410:src/menu.c    ****   if (on) {
 286              		.loc 1 410 3 view .LVU81
 287              	.LBB48:
 288              	.LBI42:
 409:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 289              		.loc 1 409 6 view .LVU82
 290              	.LBB45:
 411:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 291              		.loc 1 411 3 view .LVU83
ARM GAS  /tmp/cc7sTUNp.s 			page 14


 292              	.LBE45:
 293              	.LBE48:
 410:src/menu.c    ****   if (on) {
 294              		.loc 1 410 6 is_stmt 0 view .LVU84
 295 00c8 DA19     		adds	r2, r3, r7
 296              	.LVL23:
 410:src/menu.c    ****   if (on) {
 297              		.loc 1 410 6 view .LVU85
 298 00ca C72A     		cmp	r2, #199
 299              	.LBE51:
 300              	.LBE54:
 382:src/menu.c    ****       }
 301              		.loc 1 382 46 view .LVU86
 302 00cc 40FA03F1 		asr	r1, r0, r3
 303              	.LBB55:
 304              	.LBB52:
 410:src/menu.c    ****   if (on) {
 305              		.loc 1 410 6 view .LVU87
 306 00d0 09D8     		bhi	.L22
 307              	.LBB49:
 308              	.LBB46:
 412:src/menu.c    ****   }
 309              		.loc 1 412 5 is_stmt 1 view .LVU88
 310              		.loc 1 415 5 view .LVU89
 412:src/menu.c    ****   }
 311              		.loc 1 412 17 is_stmt 0 view .LVU90
 312 00d2 14F81320 		ldrb	r2, [r4, r3, lsl #1]	@ zero_extendqisi2
 313              	.LVL24:
 411:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 314              		.loc 1 411 6 view .LVU91
 315 00d6 C907     		lsls	r1, r1, #31
 412:src/menu.c    ****   }
 316              		.loc 1 412 17 view .LVU92
 317 00d8 4CBF     		ite	mi
 318 00da 4CEA0202 		orrmi	r2, ip, r2
 319              		.loc 1 415 17 view .LVU93
 320 00de 08EA0202 		andpl	r2, r8, r2
 321 00e2 04F81320 		strb	r2, [r4, r3, lsl #1]
 322              	.L22:
 323              	.LBE46:
 324              	.LBE49:
 325              	.LBE52:
 326              	.LBE55:
 380:src/menu.c    **** 	  break;
 327              		.loc 1 380 2 is_stmt 1 view .LVU94
 328              	.LVL25:
 379:src/menu.c    **** 	if (x+j >= xmax)
 329              		.loc 1 379 26 view .LVU95
 379:src/menu.c    **** 	if (x+j >= xmax)
 330              		.loc 1 379 27 is_stmt 0 view .LVU96
 331 00e6 0133     		adds	r3, r3, #1
 332              	.LVL26:
 379:src/menu.c    **** 	if (x+j >= xmax)
 333              		.loc 1 379 17 is_stmt 1 view .LVU97
 379:src/menu.c    **** 	if (x+j >= xmax)
 334              		.loc 1 379 7 is_stmt 0 view .LVU98
 335 00e8 B342     		cmp	r3, r6
ARM GAS  /tmp/cc7sTUNp.s 			page 15


 336 00ea EBD1     		bne	.L24
 337              	.LVL27:
 338              	.L25:
 378:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 339              		.loc 1 378 20 is_stmt 1 view .LVU99
 378:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 340              		.loc 1 378 15 view .LVU100
 341 00ec 0EF1FF3E 		add	lr, lr, #-1
 378:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 342              		.loc 1 378 5 is_stmt 0 view .LVU101
 343 00f0 BEF1FF3F 		cmp	lr, #-1
 344 00f4 0BF1010B 		add	fp, fp, #1
 345              	.LVL28:
 378:src/menu.c    ****       for (j=0; j<width; j++) { // width is width of character
 346              		.loc 1 378 5 view .LVU102
 347 00f8 D6D1     		bne	.L19
 385:src/menu.c    ****   }
 348              		.loc 1 385 5 is_stmt 1 view .LVU103
 349              	.LBE56:
 333:src/menu.c    ****     int c;
 350              		.loc 1 333 10 is_stmt 0 view .LVU104
 351 00fa 019B     		ldr	r3, [sp, #4]
 352 00fc 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 353              	.LBB57:
 385:src/menu.c    ****   }
 354              		.loc 1 385 7 view .LVU105
 355 00fe 3744     		add	r7, r7, r6
 356              	.LVL29:
 385:src/menu.c    ****   }
 357              		.loc 1 385 7 view .LVU106
 358              	.LBE57:
 333:src/menu.c    ****     int c;
 359              		.loc 1 333 9 is_stmt 1 view .LVU107
 360 0100 85B1     		cbz	r5, .L7
 333:src/menu.c    ****     int c;
 361              		.loc 1 333 23 is_stmt 0 view .LVU108
 362 0102 B945     		cmp	r9, r7
 363 0104 0EDB     		blt	.L7
 364              	.LBB58:
 348:src/menu.c    ****       width = str[1] & 0x1F;
 365              		.loc 1 348 8 view .LVU109
 366 0106 072D     		cmp	r5, #7
 367              	.LBE58:
 368 0108 009C     		ldr	r4, [sp]
 369              	.LBB59:
 334:src/menu.c    ****     int width;
 370              		.loc 1 334 5 is_stmt 1 view .LVU110
 335:src/menu.c    ****     unsigned char cmap[6];
 371              		.loc 1 335 5 view .LVU111
 336:src/menu.c    **** 
 372              		.loc 1 336 5 view .LVU112
 338:src/menu.c    ****     int current_smallp;
 373              		.loc 1 338 5 view .LVU113
 339:src/menu.c    **** 
 374              		.loc 1 339 5 view .LVU114
 348:src/menu.c    ****       width = str[1] & 0x1F;
 375              		.loc 1 348 5 view .LVU115
ARM GAS  /tmp/cc7sTUNp.s 			page 16


 348:src/menu.c    ****       width = str[1] & 0x1F;
 376              		.loc 1 348 8 is_stmt 0 view .LVU116
 377 010a 9AD0     		beq	.L39
 378              	.LVL30:
 379              	.L11:
 364:src/menu.c    ****       real_width = width = charlengths(c);
 380              		.loc 1 364 7 is_stmt 1 view .LVU117
 365:src/menu.c    ****       current_smallp = smallp;
 381              		.loc 1 365 28 is_stmt 0 view .LVU118
 382 010c 2846     		mov	r0, r5
 383 010e FFF7FEFF 		bl	charlengths
 384              	.LVL31:
 364:src/menu.c    ****       real_width = width = charlengths(c);
 385              		.loc 1 364 31 view .LVU119
 386 0112 019B     		ldr	r3, [sp, #4]
 387 0114 0133     		adds	r3, r3, #1
 388 0116 0193     		str	r3, [sp, #4]
 389              	.LVL32:
 365:src/menu.c    ****       current_smallp = smallp;
 390              		.loc 1 365 7 is_stmt 1 view .LVU120
 366:src/menu.c    ****     }
 391              		.loc 1 366 7 view .LVU121
 366:src/menu.c    ****     }
 392              		.loc 1 366 22 is_stmt 0 view .LVU122
 393 0118 0023     		movs	r3, #0
 394              	.LVL33:
 366:src/menu.c    ****     }
 395              		.loc 1 366 22 view .LVU123
 396 011a 0093     		str	r3, [sp]
 397              	.LVL34:
 369:src/menu.c    ****       break;
 398              		.loc 1 369 11 view .LVU124
 399 011c C319     		adds	r3, r0, r7
 400              	.LVL35:
 369:src/menu.c    ****       break;
 401              		.loc 1 369 8 view .LVU125
 402 011e 9945     		cmp	r9, r3
 365:src/menu.c    ****       current_smallp = smallp;
 403              		.loc 1 365 28 view .LVU126
 404 0120 0646     		mov	r6, r0
 369:src/menu.c    ****       break;
 405              		.loc 1 369 5 is_stmt 1 view .LVU127
 369:src/menu.c    ****       break;
 406              		.loc 1 369 8 is_stmt 0 view .LVU128
 407 0122 A7DA     		bge	.L40
 408              	.LVL36:
 409              	.L7:
 369:src/menu.c    ****       break;
 410              		.loc 1 369 8 view .LVU129
 411              	.LBE59:
 387:src/menu.c    **** 
 412              		.loc 1 387 1 view .LVU130
 413 0124 0DF5097D 		add	sp, sp, #548
 414              		.cfi_remember_state
 415              		.cfi_def_cfa_offset 36
 416              		@ sp needed
 417 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /tmp/cc7sTUNp.s 			page 17


 418              	.LVL37:
 419              	.L34:
 420              		.cfi_restore_state
 421              	.LBB60:
 359:src/menu.c    ****       str += 3;
 422              		.loc 1 359 7 is_stmt 1 view .LVU131
 359:src/menu.c    ****       str += 3;
 423              		.loc 1 359 11 is_stmt 0 view .LVU132
 424 012c 019B     		ldr	r3, [sp, #4]
 425 012e 9D78     		ldrb	r5, [r3, #2]	@ zero_extendqisi2
 352:src/menu.c    **** 	break;
 426              		.loc 1 352 33 view .LVU133
 427 0130 0023     		movs	r3, #0
 428 0132 0093     		str	r3, [sp]
 429 0134 95E7     		b	.L15
 430              	.L42:
 431 0136 00BF     		.align	2
 432              	.L41:
 433 0138 00000000 		.word	forceDispPlot
 434 013c 00000000 		.word	RectPolConv
 435 0140 00000000 		.word	.LANCHOR0
 436              	.LBE60:
 437              		.cfi_endproc
 438              	.LFE30:
 440              		.section	.rodata.disp_about.str1.4,"aMS",%progbits,1
 441              		.align	2
 442              	.LC2:
 443 0000 57503334 		.ascii	"WP34s calculator for DM42:\000"
 443      73206361 
 443      6C63756C 
 443      61746F72 
 443      20666F72 
 444 001b 00       		.align	2
 445              	.LC3:
 446 001c 77697468 		.ascii	"with top row for annunciators,\000"
 446      20746F70 
 446      20726F77 
 446      20666F72 
 446      20616E6E 
 447 003b 00       		.align	2
 448              	.LC4:
 449 003c 61206C6F 		.ascii	"a longer alpha display,\000"
 449      6E676572 
 449      20616C70 
 449      68612064 
 449      6973706C 
 450              		.align	2
 451              	.LC5:
 452 0054 616E6420 		.ascii	"and some annunciators renamed.\000"
 452      736F6D65 
 452      20616E6E 
 452      756E6369 
 452      61746F72 
 453 0073 00       		.align	2
 454              	.LC6:
 455 0074 54686973 		.ascii	"This software is neither provided\000"
 455      20736F66 
ARM GAS  /tmp/cc7sTUNp.s 			page 18


 455      74776172 
 455      65206973 
 455      206E6569 
 456 0096 0000     		.align	2
 457              	.LC7:
 458 0098 6279206E 		.ascii	"by nor supported by SwissMicros.\000"
 458      6F722073 
 458      7570706F 
 458      72746564 
 458      20627920 
 459 00b9 000000   		.align	2
 460              	.LC8:
 461 00bc 20202020 		.ascii	"    Press EXIT key to continue...\000"
 461      50726573 
 461      73204558 
 461      4954206B 
 461      65792074 
 462              		.section	.text.disp_about,"ax",%progbits
 463              		.align	1
 464              		.p2align 2,,3
 465              		.global	disp_about
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv4-sp-d16
 471              	disp_about:
 472              	.LFB5:
  50:src/menu.c    ****   lcd_clear_buf();
 473              		.loc 1 50 19 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
  51:src/menu.c    ****   lcd_writeClr(t24);
 477              		.loc 1 51 3 view .LVU135
  50:src/menu.c    ****   lcd_clear_buf();
 478              		.loc 1 50 19 is_stmt 0 view .LVU136
 479 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 480              		.cfi_def_cfa_offset 24
 481              		.cfi_offset 4, -24
 482              		.cfi_offset 5, -20
 483              		.cfi_offset 6, -16
 484              		.cfi_offset 7, -12
 485              		.cfi_offset 8, -8
 486              		.cfi_offset 14, -4
  52:src/menu.c    **** 
 487              		.loc 1 52 3 view .LVU137
 488 0004 1F4C     		ldr	r4, .L45
  51:src/menu.c    ****   lcd_writeClr(t24);
 489              		.loc 1 51 3 view .LVU138
 490 0006 204B     		ldr	r3, .L45+4
  55:src/menu.c    ****   t24->y += 5;
 491              		.loc 1 55 3 view .LVU139
 492 0008 204D     		ldr	r5, .L45+8
  51:src/menu.c    ****   lcd_writeClr(t24);
 493              		.loc 1 51 3 view .LVU140
 494 000a 9847     		blx	r3
 495              	.LVL38:
ARM GAS  /tmp/cc7sTUNp.s 			page 19


  52:src/menu.c    **** 
 496              		.loc 1 52 3 is_stmt 1 view .LVU141
 497 000c 606B     		ldr	r0, [r4, #52]
 498 000e 204B     		ldr	r3, .L45+12
 499 0010 9847     		blx	r3
 500              	.LVL39:
  54:src/menu.c    ****   lcd_printR(t24, "WP34s calculator for DM42:");
 501              		.loc 1 54 3 view .LVU142
 502 0012 0522     		movs	r2, #5
 503 0014 606B     		ldr	r0, [r4, #52]
 504 0016 1F4B     		ldr	r3, .L45+16
 505 0018 0021     		movs	r1, #0
 506 001a 9847     		blx	r3
 507              	.LVL40:
  55:src/menu.c    ****   t24->y += 5;
 508              		.loc 1 55 3 view .LVU143
  55:src/menu.c    ****   t24->y += 5;
 509              		.loc 1 55 3 view .LVU144
 510 001c 606B     		ldr	r0, [r4, #52]
 511 001e 1E49     		ldr	r1, .L45+20
 512 0020 0126     		movs	r6, #1
 513 0022 4674     		strb	r6, [r0, #17]
  55:src/menu.c    ****   t24->y += 5;
 514              		.loc 1 55 3 view .LVU145
 515 0024 A847     		blx	r5
 516              	.LVL41:
  55:src/menu.c    ****   t24->y += 5;
 517              		.loc 1 55 3 view .LVU146
 518 0026 606B     		ldr	r0, [r4, #52]
  58:src/menu.c    ****   lcd_print(t24, "a longer alpha display,");
 519              		.loc 1 58 3 is_stmt 0 view .LVU147
 520 0028 1C49     		ldr	r1, .L45+24
  56:src/menu.c    **** #ifdef TOP_ROW
 521              		.loc 1 56 10 view .LVU148
 522 002a C388     		ldrh	r3, [r0, #6]
  55:src/menu.c    ****   t24->y += 5;
 523              		.loc 1 55 3 view .LVU149
 524 002c 0027     		movs	r7, #0
  56:src/menu.c    **** #ifdef TOP_ROW
 525              		.loc 1 56 10 view .LVU150
 526 002e 0533     		adds	r3, r3, #5
 527 0030 C380     		strh	r3, [r0, #6]	@ movhi
  55:src/menu.c    ****   t24->y += 5;
 528              		.loc 1 55 3 view .LVU151
 529 0032 4774     		strb	r7, [r0, #17]
  55:src/menu.c    ****   t24->y += 5;
 530              		.loc 1 55 3 is_stmt 1 view .LVU152
  56:src/menu.c    **** #ifdef TOP_ROW
 531              		.loc 1 56 3 view .LVU153
  58:src/menu.c    ****   lcd_print(t24, "a longer alpha display,");
 532              		.loc 1 58 3 view .LVU154
 533 0034 A847     		blx	r5
 534              	.LVL42:
  59:src/menu.c    ****   lcd_print(t24, "and some annunciators renamed.");
 535              		.loc 1 59 3 view .LVU155
 536 0036 606B     		ldr	r0, [r4, #52]
 537 0038 1949     		ldr	r1, .L45+28
ARM GAS  /tmp/cc7sTUNp.s 			page 20


 538 003a A847     		blx	r5
 539              	.LVL43:
  60:src/menu.c    **** #elif defined(BIGGER_DISPLAY)
 540              		.loc 1 60 3 view .LVU156
 541 003c 606B     		ldr	r0, [r4, #52]
 542 003e 1949     		ldr	r1, .L45+32
 543 0040 A847     		blx	r5
 544              	.LVL44:
  69:src/menu.c    ****   lcd_printR(t24, "This software is neither provided");
 545              		.loc 1 69 3 view .LVU157
 546 0042 606B     		ldr	r0, [r4, #52]
  70:src/menu.c    ****   lcd_printR(t24, "by nor supported by SwissMicros.");
 547              		.loc 1 70 3 is_stmt 0 view .LVU158
 548 0044 1849     		ldr	r1, .L45+36
  69:src/menu.c    ****   lcd_printR(t24, "This software is neither provided");
 549              		.loc 1 69 10 view .LVU159
 550 0046 C388     		ldrh	r3, [r0, #6]
  70:src/menu.c    ****   lcd_printR(t24, "by nor supported by SwissMicros.");
 551              		.loc 1 70 3 view .LVU160
 552 0048 4674     		strb	r6, [r0, #17]
  69:src/menu.c    ****   lcd_printR(t24, "This software is neither provided");
 553              		.loc 1 69 10 view .LVU161
 554 004a 0533     		adds	r3, r3, #5
 555 004c C380     		strh	r3, [r0, #6]	@ movhi
  70:src/menu.c    ****   lcd_printR(t24, "by nor supported by SwissMicros.");
 556              		.loc 1 70 3 is_stmt 1 view .LVU162
  70:src/menu.c    ****   lcd_printR(t24, "by nor supported by SwissMicros.");
 557              		.loc 1 70 3 view .LVU163
  70:src/menu.c    ****   lcd_printR(t24, "by nor supported by SwissMicros.");
 558              		.loc 1 70 3 view .LVU164
 559 004e A847     		blx	r5
 560              	.LVL45:
  70:src/menu.c    ****   lcd_printR(t24, "by nor supported by SwissMicros.");
 561              		.loc 1 70 3 view .LVU165
 562 0050 606B     		ldr	r0, [r4, #52]
  70:src/menu.c    ****   lcd_printR(t24, "by nor supported by SwissMicros.");
 563              		.loc 1 70 3 view .LVU166
  71:src/menu.c    **** 
 564              		.loc 1 71 3 view .LVU167
  71:src/menu.c    **** 
 565              		.loc 1 71 3 view .LVU168
 566 0052 1649     		ldr	r1, .L45+40
 567 0054 4674     		strb	r6, [r0, #17]
  71:src/menu.c    **** 
 568              		.loc 1 71 3 view .LVU169
 569 0056 A847     		blx	r5
 570              	.LVL46:
  71:src/menu.c    **** 
 571              		.loc 1 71 3 view .LVU170
 572 0058 606B     		ldr	r0, [r4, #52]
  73:src/menu.c    ****   t24->x = 20;
 573              		.loc 1 73 20 is_stmt 0 view .LVU171
 574 005a 154B     		ldr	r3, .L45+44
  71:src/menu.c    **** 
 575              		.loc 1 71 3 view .LVU172
 576 005c 4774     		strb	r7, [r0, #17]
  71:src/menu.c    **** 
ARM GAS  /tmp/cc7sTUNp.s 			page 21


 577              		.loc 1 71 3 is_stmt 1 view .LVU173
  73:src/menu.c    ****   t24->x = 20;
 578              		.loc 1 73 3 view .LVU174
  73:src/menu.c    ****   t24->x = 20;
 579              		.loc 1 73 20 is_stmt 0 view .LVU175
 580 005e 9847     		blx	r3
 581              	.LVL47:
  73:src/menu.c    ****   t24->x = 20;
 582              		.loc 1 73 3 view .LVU176
 583 0060 636B     		ldr	r3, [r4, #52]
  75:src/menu.c    **** 
 584              		.loc 1 75 3 view .LVU177
 585 0062 1449     		ldr	r1, .L45+48
 586 0064 5E74     		strb	r6, [r3, #17]
  74:src/menu.c    ****   lcd_printR(t24, "    Press EXIT key to continue...");
 587              		.loc 1 74 10 view .LVU178
 588 0066 1422     		movs	r2, #20
  73:src/menu.c    ****   t24->x = 20;
 589              		.loc 1 73 39 view .LVU179
 590 0068 C0F1EB00 		rsb	r0, r0, #235
  73:src/menu.c    ****   t24->x = 20;
 591              		.loc 1 73 10 view .LVU180
 592 006c D880     		strh	r0, [r3, #6]	@ movhi
  74:src/menu.c    ****   lcd_printR(t24, "    Press EXIT key to continue...");
 593              		.loc 1 74 3 is_stmt 1 view .LVU181
  74:src/menu.c    ****   lcd_printR(t24, "    Press EXIT key to continue...");
 594              		.loc 1 74 10 is_stmt 0 view .LVU182
 595 006e 9A80     		strh	r2, [r3, #4]	@ movhi
  75:src/menu.c    **** 
 596              		.loc 1 75 3 is_stmt 1 view .LVU183
  75:src/menu.c    **** 
 597              		.loc 1 75 3 view .LVU184
  75:src/menu.c    **** 
 598              		.loc 1 75 3 view .LVU185
 599 0070 1846     		mov	r0, r3
 600 0072 A847     		blx	r5
 601              	.LVL48:
  75:src/menu.c    **** 
 602              		.loc 1 75 3 view .LVU186
 603 0074 626B     		ldr	r2, [r4, #52]
  77:src/menu.c    **** 
 604              		.loc 1 77 3 is_stmt 0 view .LVU187
 605 0076 104B     		ldr	r3, .L45+52
  75:src/menu.c    **** 
 606              		.loc 1 75 3 view .LVU188
 607 0078 5774     		strb	r7, [r2, #17]
  75:src/menu.c    **** 
 608              		.loc 1 75 3 is_stmt 1 view .LVU189
  77:src/menu.c    **** 
 609              		.loc 1 77 3 view .LVU190
 610 007a 9847     		blx	r3
 611              	.LVL49:
  79:src/menu.c    **** }
 612              		.loc 1 79 3 view .LVU191
  80:src/menu.c    **** 
 613              		.loc 1 80 1 is_stmt 0 view .LVU192
 614 007c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
ARM GAS  /tmp/cc7sTUNp.s 			page 22


 615              		.cfi_restore 14
 616              		.cfi_restore 8
 617              		.cfi_restore 7
 618              		.cfi_restore 6
 619              		.cfi_restore 5
 620              		.cfi_restore 4
 621              		.cfi_def_cfa_offset 0
  79:src/menu.c    **** }
 622              		.loc 1 79 3 view .LVU193
 623 0080 0E4B     		ldr	r3, .L45+56
 624 0082 1847     		bx	r3	@ indirect register sibling call
 625              	.LVL50:
 626              	.L46:
 627              		.align	2
 628              	.L45:
 629 0084 00200010 		.word	268443648
 630 0088 2D020008 		.word	134218285
 631 008c B1020008 		.word	134218417
 632 0090 65020008 		.word	134218341
 633 0094 6D020008 		.word	134218349
 634 0098 00000000 		.word	.LC2
 635 009c 1C000000 		.word	.LC3
 636 00a0 3C000000 		.word	.LC4
 637 00a4 54000000 		.word	.LC5
 638 00a8 74000000 		.word	.LC6
 639 00ac 98000000 		.word	.LC7
 640 00b0 71020008 		.word	134218353
 641 00b4 BC000000 		.word	.LC8
 642 00b8 31020008 		.word	134218289
 643 00bc 99030008 		.word	134218649
 644              		.cfi_endproc
 645              	.LFE5:
 647              		.section	.text.run_menu_item,"ax",%progbits
 648              		.align	1
 649              		.p2align 2,,3
 650              		.global	run_menu_item
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
 656              	run_menu_item:
 657              	.LVL51:
 658              	.LFB3:
  19:src/menu.c    ****   int ret = 0;
 659              		.loc 1 19 36 is_stmt 1 view -0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
  20:src/menu.c    **** 
 663              		.loc 1 20 3 view .LVU195
  22:src/menu.c    ****     case MI_ABOUT_PGM:
 664              		.loc 1 22 3 view .LVU196
 665 0000 0B28     		cmp	r0, #11
 666 0002 04D1     		bne	.L49
  24:src/menu.c    ****       break;
 667              		.loc 1 24 7 view .LVU197
  19:src/menu.c    ****   int ret = 0;
ARM GAS  /tmp/cc7sTUNp.s 			page 23


 668              		.loc 1 19 36 is_stmt 0 view .LVU198
 669 0004 08B5     		push	{r3, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 3, -8
 672              		.cfi_offset 14, -4
  24:src/menu.c    ****       break;
 673              		.loc 1 24 7 view .LVU199
 674 0006 FFF7FEFF 		bl	disp_about
 675              	.LVL52:
  25:src/menu.c    **** 
 676              		.loc 1 25 7 is_stmt 1 view .LVU200
  20:src/menu.c    **** 
 677              		.loc 1 20 7 is_stmt 0 view .LVU201
 678 000a 0020     		movs	r0, #0
  33:src/menu.c    **** 
 679              		.loc 1 33 1 view .LVU202
 680 000c 08BD     		pop	{r3, pc}
 681              	.LVL53:
 682              	.L49:
 683              		.cfi_def_cfa_offset 0
 684              		.cfi_restore 3
 685              		.cfi_restore 14
  28:src/menu.c    ****       break;
 686              		.loc 1 28 11 view .LVU203
 687 000e 4FF0FF30 		mov	r0, #-1
 688              	.LVL54:
  32:src/menu.c    **** }
 689              		.loc 1 32 3 is_stmt 1 view .LVU204
  33:src/menu.c    **** 
 690              		.loc 1 33 1 is_stmt 0 view .LVU205
 691 0012 7047     		bx	lr
 692              		.cfi_endproc
 693              	.LFE3:
 695              		.section	.text.set_menu,"ax",%progbits
 696              		.align	1
 697              		.p2align 2,,3
 698              		.global	set_menu
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
 702              		.fpu fpv4-sp-d16
 704              	set_menu:
 705              	.LVL55:
 706              	.LFB6:
  86:src/menu.c    ****   int m = current_menu;
 707              		.loc 1 86 32 is_stmt 1 view -0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 712              		.loc 1 87 3 view .LVU207
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 713              		.loc 1 87 7 is_stmt 0 view .LVU208
 714 0000 094A     		ldr	r2, .L63
 715 0002 1368     		ldr	r3, [r2]
 716              	.LVL56:
ARM GAS  /tmp/cc7sTUNp.s 			page 24


  88:src/menu.c    ****     current_menu = default_menu;
 717              		.loc 1 88 3 is_stmt 1 view .LVU209
  88:src/menu.c    ****     current_menu = default_menu;
 718              		.loc 1 88 6 is_stmt 0 view .LVU210
 719 0004 8342     		cmp	r3, r0
 720 0006 0AD0     		beq	.L62
  91:src/menu.c    ****     current_menu = last_menu;
 721              		.loc 1 91 8 is_stmt 1 view .LVU211
  91:src/menu.c    ****     current_menu = last_menu;
 722              		.loc 1 91 11 is_stmt 0 view .LVU212
 723 0008 411C     		adds	r1, r0, #1
  92:src/menu.c    ****   }
 724              		.loc 1 92 5 is_stmt 1 view .LVU213
  92:src/menu.c    ****   }
 725              		.loc 1 92 18 is_stmt 0 view .LVU214
 726 000a 09BF     		itett	eq
 727 000c 0749     		ldreq	r1, .L63+4
  95:src/menu.c    ****   }
 728              		.loc 1 95 18 view .LVU215
 729 000e 1060     		strne	r0, [r2]
  92:src/menu.c    ****   }
 730              		.loc 1 92 18 view .LVU216
 731 0010 0968     		ldreq	r1, [r1]
 732 0012 1160     		streq	r1, [r2]
  95:src/menu.c    ****   }
 733              		.loc 1 95 5 is_stmt 1 view .LVU217
 734              	.L56:
  97:src/menu.c    **** }
 735              		.loc 1 97 3 view .LVU218
  97:src/menu.c    **** }
 736              		.loc 1 97 6 is_stmt 0 view .LVU219
 737 0014 092B     		cmp	r3, #9
  97:src/menu.c    **** }
 738              		.loc 1 97 15 is_stmt 1 view .LVU220
  97:src/menu.c    **** }
 739              		.loc 1 97 25 is_stmt 0 view .LVU221
 740 0016 1CBF     		itt	ne
 741 0018 044A     		ldrne	r2, .L63+4
 742 001a 1360     		strne	r3, [r2]
  98:src/menu.c    **** 
 743              		.loc 1 98 1 view .LVU222
 744 001c 7047     		bx	lr
 745              	.L62:
  89:src/menu.c    ****   }
 746              		.loc 1 89 5 is_stmt 1 view .LVU223
  89:src/menu.c    ****   }
 747              		.loc 1 89 18 is_stmt 0 view .LVU224
 748 001e 0449     		ldr	r1, .L63+8
 749 0020 0968     		ldr	r1, [r1]
 750 0022 1160     		str	r1, [r2]
 751 0024 F6E7     		b	.L56
 752              	.L64:
 753 0026 00BF     		.align	2
 754              	.L63:
 755 0028 00000000 		.word	.LANCHOR1
 756 002c 00000000 		.word	.LANCHOR3
 757 0030 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/cc7sTUNp.s 			page 25


 758              		.cfi_endproc
 759              	.LFE6:
 761              		.section	.text.toggle_default_menu,"ax",%progbits
 762              		.align	1
 763              		.p2align 2,,3
 764              		.global	toggle_default_menu
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 768              		.fpu fpv4-sp-d16
 770              	toggle_default_menu:
 771              	.LFB7:
 100:src/menu.c    ****   if (current_menu == default_menu) {
 772              		.loc 1 100 29 is_stmt 1 view -0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 101:src/menu.c    ****     current_menu = default_menu = 15 - default_menu;
 777              		.loc 1 101 3 view .LVU226
 101:src/menu.c    ****     current_menu = default_menu = 15 - default_menu;
 778              		.loc 1 101 20 is_stmt 0 view .LVU227
 779 0000 0549     		ldr	r1, .L67
 780 0002 064A     		ldr	r2, .L67+4
 781 0004 0868     		ldr	r0, [r1]
 101:src/menu.c    ****     current_menu = default_menu = 15 - default_menu;
 782              		.loc 1 101 6 view .LVU228
 783 0006 1368     		ldr	r3, [r2]
 784 0008 8342     		cmp	r3, r0
 785 000a 03D1     		bne	.L65
 102:src/menu.c    ****   }
 786              		.loc 1 102 5 is_stmt 1 view .LVU229
 102:src/menu.c    ****   }
 787              		.loc 1 102 38 is_stmt 0 view .LVU230
 788 000c C3F10F03 		rsb	r3, r3, #15
 102:src/menu.c    ****   }
 789              		.loc 1 102 33 view .LVU231
 790 0010 0B60     		str	r3, [r1]
 102:src/menu.c    ****   }
 791              		.loc 1 102 18 view .LVU232
 792 0012 1360     		str	r3, [r2]
 793              	.L65:
 104:src/menu.c    **** 
 794              		.loc 1 104 1 view .LVU233
 795 0014 7047     		bx	lr
 796              	.L68:
 797 0016 00BF     		.align	2
 798              	.L67:
 799 0018 00000000 		.word	.LANCHOR2
 800 001c 00000000 		.word	.LANCHOR1
 801              		.cfi_endproc
 802              	.LFE7:
 804              		.section	.text.get_menu,"ax",%progbits
 805              		.align	1
 806              		.p2align 2,,3
 807              		.global	get_menu
 808              		.syntax unified
ARM GAS  /tmp/cc7sTUNp.s 			page 26


 809              		.thumb
 810              		.thumb_func
 811              		.fpu fpv4-sp-d16
 813              	get_menu:
 814              	.LFB8:
 106:src/menu.c    ****   return current_menu;
 815              		.loc 1 106 17 is_stmt 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819              		@ link register save eliminated.
 107:src/menu.c    **** }
 820              		.loc 1 107 3 view .LVU235
 107:src/menu.c    **** }
 821              		.loc 1 107 10 is_stmt 0 view .LVU236
 822 0000 014B     		ldr	r3, .L70
 108:src/menu.c    **** 
 823              		.loc 1 108 1 view .LVU237
 824 0002 1868     		ldr	r0, [r3]
 825 0004 7047     		bx	lr
 826              	.L71:
 827 0006 00BF     		.align	2
 828              	.L70:
 829 0008 00000000 		.word	.LANCHOR1
 830              		.cfi_endproc
 831              	.LFE8:
 833              		.section	.text.set_last_menu,"ax",%progbits
 834              		.align	1
 835              		.p2align 2,,3
 836              		.global	set_last_menu
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu fpv4-sp-d16
 842              	set_last_menu:
 843              	.LFB10:
 114:src/menu.c    ****   set_menu (last_menu);
 844              		.loc 1 114 23 is_stmt 1 view -0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 115:src/menu.c    **** }
 849              		.loc 1 115 3 view .LVU239
 850 0000 0649     		ldr	r1, .L80
 851              	.LBB61:
 852              	.LBB62:
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 853              		.loc 1 87 7 is_stmt 0 view .LVU240
 854 0002 074A     		ldr	r2, .L80+4
 855              	.LBE62:
 856              	.LBE61:
 115:src/menu.c    **** }
 857              		.loc 1 115 3 view .LVU241
 858 0004 0868     		ldr	r0, [r1]
 859              	.LVL57:
 860              	.LBB64:
ARM GAS  /tmp/cc7sTUNp.s 			page 27


 861              	.LBI61:
  86:src/menu.c    ****   int m = current_menu;
 862              		.loc 1 86 6 is_stmt 1 view .LVU242
 863              	.LBB63:
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 864              		.loc 1 87 3 view .LVU243
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 865              		.loc 1 87 7 is_stmt 0 view .LVU244
 866 0006 1368     		ldr	r3, [r2]
 867              	.LVL58:
  88:src/menu.c    ****     current_menu = default_menu;
 868              		.loc 1 88 3 is_stmt 1 view .LVU245
  88:src/menu.c    ****     current_menu = default_menu;
 869              		.loc 1 88 6 is_stmt 0 view .LVU246
 870 0008 9842     		cmp	r0, r3
  89:src/menu.c    ****   }
 871              		.loc 1 89 5 is_stmt 1 view .LVU247
  89:src/menu.c    ****   }
 872              		.loc 1 89 18 is_stmt 0 view .LVU248
 873 000a 04BF     		itt	eq
 874 000c 0548     		ldreq	r0, .L80+8
 875              	.LVL59:
  89:src/menu.c    ****   }
 876              		.loc 1 89 18 view .LVU249
 877 000e 0068     		ldreq	r0, [r0]
  91:src/menu.c    ****     current_menu = last_menu;
 878              		.loc 1 91 8 is_stmt 1 view .LVU250
  95:src/menu.c    ****   }
 879              		.loc 1 95 18 is_stmt 0 view .LVU251
 880 0010 1060     		str	r0, [r2]
  97:src/menu.c    **** }
 881              		.loc 1 97 3 is_stmt 1 view .LVU252
  97:src/menu.c    **** }
 882              		.loc 1 97 6 is_stmt 0 view .LVU253
 883 0012 092B     		cmp	r3, #9
  97:src/menu.c    **** }
 884              		.loc 1 97 15 is_stmt 1 view .LVU254
  97:src/menu.c    **** }
 885              		.loc 1 97 25 is_stmt 0 view .LVU255
 886 0014 18BF     		it	ne
 887 0016 0B60     		strne	r3, [r1]
 888              	.LVL60:
  97:src/menu.c    **** }
 889              		.loc 1 97 25 view .LVU256
 890              	.LBE63:
 891              	.LBE64:
 116:src/menu.c    **** 
 892              		.loc 1 116 1 view .LVU257
 893 0018 7047     		bx	lr
 894              	.L81:
 895 001a 00BF     		.align	2
 896              	.L80:
 897 001c 00000000 		.word	.LANCHOR3
 898 0020 00000000 		.word	.LANCHOR1
 899 0024 00000000 		.word	.LANCHOR2
 900              		.cfi_endproc
 901              	.LFE10:
ARM GAS  /tmp/cc7sTUNp.s 			page 28


 903              		.section	.text.mdot,"ax",%progbits
 904              		.align	1
 905              		.p2align 2,,3
 906              		.global	mdot
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu fpv4-sp-d16
 912              	mdot:
 913              	.LVL61:
 914              	.LFB12:
 409:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 915              		.loc 1 409 40 is_stmt 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 410:src/menu.c    ****   if (on) {
 920              		.loc 1 410 3 view .LVU259
 410:src/menu.c    ****   if (on) {
 921              		.loc 1 410 6 is_stmt 0 view .LVU260
 922 0000 C728     		cmp	r0, #199
 923 0002 1AD8     		bhi	.L86
 924              	.LVL62:
 925              	.LBB67:
 926              	.LBI67:
 409:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 927              		.loc 1 409 6 is_stmt 1 view .LVU261
 928              	.LBB68:
 411:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 929              		.loc 1 411 3 view .LVU262
 930              	.LBE68:
 931              	.LBE67:
 409:src/menu.c    ****   if ( (i<0) || (i>199) ) return;
 932              		.loc 1 409 40 is_stmt 0 view .LVU263
 933 0004 10B4     		push	{r4}
 934              		.cfi_def_cfa_offset 4
 935              		.cfi_offset 4, -4
 936              	.LBB71:
 937              	.LBB69:
 411:src/menu.c    ****     mdots[i][s] |= ( 1 << j );
 938              		.loc 1 411 6 view .LVU264
 939 0006 63B9     		cbnz	r3, .L89
 940              		.loc 1 415 5 is_stmt 1 view .LVU265
 941              		.loc 1 415 17 is_stmt 0 view .LVU266
 942 0008 0C4B     		ldr	r3, .L90
 943              	.LVL63:
 944              		.loc 1 415 17 view .LVU267
 945 000a 03EB4000 		add	r0, r3, r0, lsl #1
 946              	.LVL64:
 947              		.loc 1 415 25 view .LVU268
 948 000e 0124     		movs	r4, #1
 949              		.loc 1 415 17 view .LVU269
 950 0010 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 951              		.loc 1 415 25 view .LVU270
 952 0012 04FA01F1 		lsl	r1, r4, r1
 953              	.LVL65:
ARM GAS  /tmp/cc7sTUNp.s 			page 29


 954              		.loc 1 415 17 view .LVU271
 955 0016 23EA0101 		bic	r1, r3, r1
 956 001a 8154     		strb	r1, [r0, r2]
 957              	.LVL66:
 958              		.loc 1 415 17 view .LVU272
 959              	.LBE69:
 960              	.LBE71:
 416:src/menu.c    ****   }
 417:src/menu.c    **** }
 961              		.loc 1 417 1 view .LVU273
 962 001c 5DF8044B 		ldr	r4, [sp], #4
 963              		.cfi_remember_state
 964              		.cfi_restore 4
 965              		.cfi_def_cfa_offset 0
 966 0020 7047     		bx	lr
 967              	.LVL67:
 968              	.L89:
 969              		.cfi_restore_state
 970              	.LBB72:
 971              	.LBB70:
 412:src/menu.c    ****   }
 972              		.loc 1 412 5 is_stmt 1 view .LVU274
 412:src/menu.c    ****   }
 973              		.loc 1 412 17 is_stmt 0 view .LVU275
 974 0022 064B     		ldr	r3, .L90
 975              	.LVL68:
 412:src/menu.c    ****   }
 976              		.loc 1 412 17 view .LVU276
 977 0024 03EB4000 		add	r0, r3, r0, lsl #1
 978              	.LVL69:
 412:src/menu.c    ****   }
 979              		.loc 1 412 24 view .LVU277
 980 0028 0124     		movs	r4, #1
 412:src/menu.c    ****   }
 981              		.loc 1 412 17 view .LVU278
 982 002a 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 412:src/menu.c    ****   }
 983              		.loc 1 412 24 view .LVU279
 984 002c 04FA01F1 		lsl	r1, r4, r1
 985              	.LVL70:
 412:src/menu.c    ****   }
 986              		.loc 1 412 17 view .LVU280
 987 0030 1943     		orrs	r1, r1, r3
 988 0032 8154     		strb	r1, [r0, r2]
 989              	.LBE70:
 990              	.LBE72:
 991              		.loc 1 417 1 view .LVU281
 992 0034 5DF8044B 		ldr	r4, [sp], #4
 993              		.cfi_restore 4
 994              		.cfi_def_cfa_offset 0
 995 0038 7047     		bx	lr
 996              	.LVL71:
 997              	.L86:
 998              		.loc 1 417 1 view .LVU282
 999 003a 7047     		bx	lr
 1000              	.L91:
 1001              		.align	2
ARM GAS  /tmp/cc7sTUNp.s 			page 30


 1002              	.L90:
 1003 003c 00000000 		.word	.LANCHOR0
 1004              		.cfi_endproc
 1005              	.LFE12:
 1007              		.section	.text.display_menu,"ax",%progbits
 1008              		.align	1
 1009              		.p2align 2,,3
 1010              		.global	display_menu
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu fpv4-sp-d16
 1016              	display_menu:
 1017              	.LVL72:
 1018              	.LFB13:
 418:src/menu.c    **** 
 419:src/menu.c    **** 
 420:src/menu.c    **** void display_menu (int current_menu) {
 1019              		.loc 1 420 38 is_stmt 1 view -0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 421:src/menu.c    ****   int len = 0;
 1023              		.loc 1 421 3 view .LVU284
 422:src/menu.c    ****   lcd_fill_rect (0, 188, 400, 52, 0); // clear bottom 52 rows for menu 
 1024              		.loc 1 422 3 view .LVU285
 420:src/menu.c    ****   int len = 0;
 1025              		.loc 1 420 38 is_stmt 0 view .LVU286
 1026 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1027              		.cfi_def_cfa_offset 36
 1028              		.cfi_offset 4, -36
 1029              		.cfi_offset 5, -32
 1030              		.cfi_offset 6, -28
 1031              		.cfi_offset 7, -24
 1032              		.cfi_offset 8, -20
 1033              		.cfi_offset 9, -16
 1034              		.cfi_offset 10, -12
 1035              		.cfi_offset 11, -8
 1036              		.cfi_offset 14, -4
 1037 0004 83B0     		sub	sp, sp, #12
 1038              		.cfi_def_cfa_offset 48
 1039              		.loc 1 422 3 view .LVU287
 1040 0006 0024     		movs	r4, #0
 1041 0008 404F     		ldr	r7, .L110
 1042 000a 0094     		str	r4, [sp]
 1043 000c 3423     		movs	r3, #52
 1044 000e 4FF4C872 		mov	r2, #400
 1045 0012 BC21     		movs	r1, #188
 420:src/menu.c    ****   int len = 0;
 1046              		.loc 1 420 38 view .LVU288
 1047 0014 0646     		mov	r6, r0
 1048              		.loc 1 422 3 view .LVU289
 1049 0016 2046     		mov	r0, r4
 1050              	.LVL73:
 1051              		.loc 1 422 3 view .LVU290
 1052 0018 B847     		blx	r7
 1053              	.LVL74:
ARM GAS  /tmp/cc7sTUNp.s 			page 31


 423:src/menu.c    ****   lcd_fill_rect (0, 188, 400, 1, 0xff); // lines count from line 1? No. 
 1054              		.loc 1 423 3 is_stmt 1 view .LVU291
 1055 001a 3D4D     		ldr	r5, .L110+4
 1056 001c FF23     		movs	r3, #255
 1057 001e 0093     		str	r3, [sp]
 1058 0020 4FF4C872 		mov	r2, #400
 1059 0024 0123     		movs	r3, #1
 1060 0026 BC21     		movs	r1, #188
 1061 0028 2046     		mov	r0, r4
 1062 002a B847     		blx	r7
 1063              	.LVL75:
 424:src/menu.c    ****   //Clear previous menu
 425:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1064              		.loc 1 425 3 view .LVU292
 1065              	.LBB73:
 1066              		.loc 1 425 8 view .LVU293
 1067              		.loc 1 425 21 view .LVU294
 426:src/menu.c    ****     mdots[col][0] = 0;
 1068              		.loc 1 426 19 is_stmt 0 view .LVU295
 1069 002c 2246     		mov	r2, r4
 1070 002e 05F5C871 		add	r1, r5, #400
 1071              	.LBE73:
 423:src/menu.c    ****   lcd_fill_rect (0, 188, 400, 1, 0xff); // lines count from line 1? No. 
 1072              		.loc 1 423 3 view .LVU296
 1073 0032 2B46     		mov	r3, r5
 1074              	.LVL76:
 1075              	.L93:
 1076              	.LBB74:
 1077              		.loc 1 426 5 is_stmt 1 discriminator 3 view .LVU297
 1078              		.loc 1 426 19 is_stmt 0 discriminator 3 view .LVU298
 1079 0034 1A70     		strb	r2, [r3]
 427:src/menu.c    ****     mdots[col][1] = 0;
 1080              		.loc 1 427 5 is_stmt 1 discriminator 3 view .LVU299
 1081              		.loc 1 427 19 is_stmt 0 discriminator 3 view .LVU300
 1082 0036 5A70     		strb	r2, [r3, #1]
 425:src/menu.c    ****     mdots[col][0] = 0;
 1083              		.loc 1 425 32 is_stmt 1 discriminator 3 view .LVU301
 425:src/menu.c    ****     mdots[col][0] = 0;
 1084              		.loc 1 425 21 discriminator 3 view .LVU302
 1085 0038 0233     		adds	r3, r3, #2
 425:src/menu.c    ****     mdots[col][0] = 0;
 1086              		.loc 1 425 3 is_stmt 0 discriminator 3 view .LVU303
 1087 003a 9942     		cmp	r1, r3
 1088 003c FAD1     		bne	.L93
 1089 003e 354B     		ldr	r3, .L110+8
 1090 0040 D022     		movs	r2, #208
 1091 0042 02FB0636 		mla	r6, r2, r6, r3
 1092              	.LVL77:
 425:src/menu.c    ****     mdots[col][0] = 0;
 1093              		.loc 1 425 3 discriminator 3 view .LVU304
 1094 0046 2036     		adds	r6, r6, #32
 425:src/menu.c    ****     mdots[col][0] = 0;
 1095              		.loc 1 425 3 view .LVU305
 1096 0048 0024     		movs	r4, #0
 1097              	.LVL78:
 1098              	.L94:
 425:src/menu.c    ****     mdots[col][0] = 0;
ARM GAS  /tmp/cc7sTUNp.s 			page 32


 1099              		.loc 1 425 3 view .LVU306
 1100              	.LBE74:
 1101              	.LBB75:
 428:src/menu.c    ****   }
 429:src/menu.c    **** 
 430:src/menu.c    ****   // Draw menu items
 431:src/menu.c    ****   // 
 432:src/menu.c    ****   for (int item = 0; item < 6; item++ ) {
 433:src/menu.c    ****     /*
 434:src/menu.c    ****       Starting dot in the row of 200 is item*32 - no gaps; gaps will be inserted when drawing
 435:src/menu.c    ****     */
 436:src/menu.c    ****     // Label is Menus[current.menu].keys[item].unshifted_label
 437:src/menu.c    ****     // Unshifted first
 438:src/menu.c    ****     len = pixel_length (Menus[current_menu].keys[item].unshifted_label, 0); // 0 means not small fo
 1102              		.loc 1 438 5 is_stmt 1 view .LVU307
 1103              		.loc 1 438 11 is_stmt 0 view .LVU308
 1104 004a 0021     		movs	r1, #0
 1105 004c 3046     		mov	r0, r6
 1106 004e FFF7FEFF 		bl	pixel_length
 1107              	.LVL79:
 439:src/menu.c    ****     set_menu_label ( Menus[current_menu].keys[item].unshifted_label, 0, item*32 + (32 - len)/2, 0 )
 1108              		.loc 1 439 5 is_stmt 1 view .LVU309
 1109              		.loc 1 439 87 is_stmt 0 view .LVU310
 1110 0052 C0F12000 		rsb	r0, r0, #32
 1111              	.LVL80:
 1112              		.loc 1 439 93 view .LVU311
 1113 0056 00EBD070 		add	r0, r0, r0, lsr #31
 1114              		.loc 1 439 5 view .LVU312
 1115 005a 04EB6001 		add	r1, r4, r0, asr #1
 1116 005e 0022     		movs	r2, #0
 1117 0060 3046     		mov	r0, r6
 1118 0062 06F10807 		add	r7, r6, #8
 1119 0066 FFF7FEFF 		bl	set_menu_label.constprop.0
 1120              	.LVL81:
 440:src/menu.c    ****     // Now shifted ...	
 441:src/menu.c    ****     len = pixel_length (Menus[current_menu].keys[item].shifted_label, 0); // 0 means not small font
 1121              		.loc 1 441 5 is_stmt 1 view .LVU313
 1122              		.loc 1 441 11 is_stmt 0 view .LVU314
 1123 006a 0021     		movs	r1, #0
 1124 006c 3846     		mov	r0, r7
 1125 006e FFF7FEFF 		bl	pixel_length
 1126              	.LVL82:
 442:src/menu.c    ****     len = item*32 + (32-len)/2;
 1127              		.loc 1 442 5 is_stmt 1 view .LVU315
 1128              		.loc 1 442 24 is_stmt 0 view .LVU316
 1129 0072 C0F12000 		rsb	r0, r0, #32
 1130              	.LVL83:
 1131              		.loc 1 442 29 view .LVU317
 1132 0076 00EBD070 		add	r0, r0, r0, lsr #31
 1133              	.LVL84:
 443:src/menu.c    ****     if (len<0) len = 0;
 1134              		.loc 1 443 5 is_stmt 1 view .LVU318
 442:src/menu.c    ****     len = item*32 + (32-len)/2;
 1135              		.loc 1 442 9 is_stmt 0 view .LVU319
 1136 007a 04EB6001 		add	r1, r4, r0, asr #1
 1137              	.LVL85:
 442:src/menu.c    ****     len = item*32 + (32-len)/2;
ARM GAS  /tmp/cc7sTUNp.s 			page 33


 1138              		.loc 1 442 9 view .LVU320
 1139 007e C729     		cmp	r1, #199
 1140 0080 A8BF     		it	ge
 1141 0082 C721     		movge	r1, #199
 1142              	.LVL86:
 444:src/menu.c    ****     if (len>199) len = 199;
 445:src/menu.c    ****     set_menu_label ( Menus[current_menu].keys[item].shifted_label, 0, len, 1 );
 1143              		.loc 1 445 5 is_stmt 1 view .LVU321
 1144 0084 21EAE171 		bic	r1, r1, r1, asr #31
 1145              	.LVL87:
 1146              		.loc 1 445 5 is_stmt 0 view .LVU322
 1147 0088 3846     		mov	r0, r7
 1148 008a 2034     		adds	r4, r4, #32
 1149 008c 0122     		movs	r2, #1
 1150 008e FFF7FEFF 		bl	set_menu_label.constprop.0
 1151              	.LVL88:
 432:src/menu.c    ****     /*
 1152              		.loc 1 432 32 is_stmt 1 view .LVU323
 432:src/menu.c    ****     /*
 1153              		.loc 1 432 22 view .LVU324
 432:src/menu.c    ****     /*
 1154              		.loc 1 432 3 is_stmt 0 view .LVU325
 1155 0092 C02C     		cmp	r4, #192
 1156 0094 06F12006 		add	r6, r6, #32
 1157 0098 D7D1     		bne	.L94
 1158 009a 1F4E     		ldr	r6, .L110+12
 1159              	.LBE75:
 1160              	.LBB76:
 1161              	.LBB77:
 446:src/menu.c    ****   }
 447:src/menu.c    **** 
 448:src/menu.c    ****   for (int col = 0; col < 196; col++) {
 449:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 450:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 451:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 452:src/menu.c    **** 	lcd_fill_rect( 4+col*2, 233 - row*3, 3, 3, 0xff);
 1162              		.loc 1 452 2 view .LVU326
 1163 009c DFF86C90 		ldr	r9, .L110
 1164 00a0 C5F1040A 		rsb	r10, r5, #4
 1165 00a4 06F5C47B 		add	fp, r6, #392
 1166              	.LBE77:
 1167              	.LBE76:
 1168              	.LBB79:
 432:src/menu.c    ****     /*
 1169              		.loc 1 432 3 view .LVU327
 1170 00a8 771E     		subs	r7, r6, #1
 1171              	.LBE79:
 1172              	.LBB80:
 1173              	.LBB78:
 1174              		.loc 1 452 2 view .LVU328
 1175 00aa 4FF0FF08 		mov	r8, #255
 1176              	.L95:
 1177              	.LVL89:
 449:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 1178              		.loc 1 449 23 is_stmt 1 view .LVU329
 1179 00ae 0AEB0705 		add	r5, r10, r7
 449:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
ARM GAS  /tmp/cc7sTUNp.s 			page 34


 1180              		.loc 1 449 14 is_stmt 0 view .LVU330
 1181 00b2 0024     		movs	r4, #0
 1182              	.LVL90:
 1183              	.L98:
 450:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1184              		.loc 1 450 7 is_stmt 1 view .LVU331
 1185              		.loc 1 452 2 view .LVU332
 450:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1186              		.loc 1 450 22 is_stmt 0 view .LVU333
 1187 00b4 16F8012C 		ldrb	r2, [r6, #-1]	@ zero_extendqisi2
 450:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1188              		.loc 1 450 40 view .LVU334
 1189 00b8 2241     		asrs	r2, r2, r4
 1190              		.loc 1 452 2 view .LVU335
 1191 00ba A4EB8401 		sub	r1, r4, r4, lsl #2
 1192 00be 0323     		movs	r3, #3
 450:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1193              		.loc 1 450 10 view .LVU336
 1194 00c0 12F0010F 		tst	r2, #1
 1195              		.loc 1 452 2 view .LVU337
 1196 00c4 01F1E901 		add	r1, r1, #233
 1197 00c8 1A46     		mov	r2, r3
 1198 00ca 2846     		mov	r0, r5
 450:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - row*3, 3, 3, 0xff);
 1199              		.loc 1 450 10 view .LVU338
 1200 00cc 02D0     		beq	.L96
 1201              		.loc 1 452 2 view .LVU339
 1202 00ce CDF80080 		str	r8, [sp]
 1203 00d2 C847     		blx	r9
 1204              	.LVL91:
 1205              	.L96:
 453:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1206              		.loc 1 453 7 is_stmt 1 view .LVU340
 454:src/menu.c    **** 	//	lcd_fill_rect( col*2-1, 230 - 5*3 -10 - row*3, 3, 3, 0xff);
 455:src/menu.c    **** 	lcd_fill_rect( 4+col*2, 233 - 5*3 -10 - row*3, 3, 3, 0xff);
 1207              		.loc 1 455 2 view .LVU341
 453:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1208              		.loc 1 453 22 is_stmt 0 view .LVU342
 1209 00d4 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 453:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1210              		.loc 1 453 40 view .LVU343
 1211 00d6 2241     		asrs	r2, r2, r4
 1212              		.loc 1 455 2 view .LVU344
 1213 00d8 A4EB8401 		sub	r1, r4, r4, lsl #2
 1214 00dc 0323     		movs	r3, #3
 453:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1215              		.loc 1 453 10 view .LVU345
 1216 00de 12F0010F 		tst	r2, #1
 1217              		.loc 1 455 2 view .LVU346
 1218 00e2 01F1D001 		add	r1, r1, #208
 1219 00e6 1A46     		mov	r2, r3
 1220 00e8 04F10104 		add	r4, r4, #1
 1221              	.LVL92:
 1222              		.loc 1 455 2 view .LVU347
 1223 00ec 2846     		mov	r0, r5
 453:src/menu.c    ****       if ((mdots[col][1] & (1 << row)) != 0) 
 1224              		.loc 1 453 10 view .LVU348
ARM GAS  /tmp/cc7sTUNp.s 			page 35


 1225 00ee 02D0     		beq	.L97
 1226              		.loc 1 455 2 view .LVU349
 1227 00f0 CDF80080 		str	r8, [sp]
 1228 00f4 C847     		blx	r9
 1229              	.LVL93:
 1230              	.L97:
 449:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 1231              		.loc 1 449 32 is_stmt 1 discriminator 2 view .LVU350
 449:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 1232              		.loc 1 449 23 discriminator 2 view .LVU351
 449:src/menu.c    ****       if ((mdots[col][0] & (1 << row)) != 0) 
 1233              		.loc 1 449 5 is_stmt 0 discriminator 2 view .LVU352
 1234 00f6 062C     		cmp	r4, #6
 1235 00f8 DCD1     		bne	.L98
 1236              	.LBE78:
 448:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1237              		.loc 1 448 32 is_stmt 1 discriminator 2 view .LVU353
 448:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1238              		.loc 1 448 21 discriminator 2 view .LVU354
 1239 00fa 0236     		adds	r6, r6, #2
 448:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1240              		.loc 1 448 3 is_stmt 0 discriminator 2 view .LVU355
 1241 00fc B345     		cmp	fp, r6
 1242 00fe 07F10207 		add	r7, r7, #2
 1243 0102 D4D1     		bne	.L95
 1244              	.LBE80:
 456:src/menu.c    ****     }
 457:src/menu.c    ****   }
 458:src/menu.c    **** }
 1245              		.loc 1 458 1 view .LVU356
 1246 0104 03B0     		add	sp, sp, #12
 1247              		.cfi_def_cfa_offset 36
 1248              		@ sp needed
 1249 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1250              	.LVL94:
 1251              	.L111:
 1252              		.loc 1 458 1 view .LVU357
 1253 010a 00BF     		.align	2
 1254              	.L110:
 1255 010c 3D020008 		.word	134218301
 1256 0110 00000000 		.word	.LANCHOR0
 1257 0114 00000000 		.word	.LANCHOR4
 1258 0118 01000000 		.word	.LANCHOR0+1
 1259              		.cfi_endproc
 1260              	.LFE13:
 1262              		.section	.text.display_current_menu,"ax",%progbits
 1263              		.align	1
 1264              		.p2align 2,,3
 1265              		.global	display_current_menu
 1266              		.syntax unified
 1267              		.thumb
 1268              		.thumb_func
 1269              		.fpu fpv4-sp-d16
 1271              	display_current_menu:
 1272              	.LFB9:
 110:src/menu.c    ****   display_menu (current_menu);
 1273              		.loc 1 110 30 is_stmt 1 view -0
ARM GAS  /tmp/cc7sTUNp.s 			page 36


 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277              		@ link register save eliminated.
 111:src/menu.c    **** }
 1278              		.loc 1 111 3 view .LVU359
 1279 0000 014B     		ldr	r3, .L113
 1280 0002 1868     		ldr	r0, [r3]
 1281 0004 FFF7FEBF 		b	display_menu
 1282              	.LVL95:
 1283              	.L114:
 1284              		.align	2
 1285              	.L113:
 1286 0008 00000000 		.word	.LANCHOR1
 1287              		.cfi_endproc
 1288              	.LFE9:
 1290              		.section	.text.all_menu_dots,"ax",%progbits
 1291              		.align	1
 1292              		.p2align 2,,3
 1293              		.global	all_menu_dots
 1294              		.syntax unified
 1295              		.thumb
 1296              		.thumb_func
 1297              		.fpu fpv4-sp-d16
 1299              	all_menu_dots:
 1300              	.LFB14:
 459:src/menu.c    **** 
 460:src/menu.c    **** void all_menu_dots () {
 1301              		.loc 1 460 23 view -0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 461:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1305              		.loc 1 461 3 view .LVU361
 1306              	.LBB81:
 1307              		.loc 1 461 8 view .LVU362
 1308              	.LVL96:
 1309              		.loc 1 461 21 view .LVU363
 1310              	.LBE81:
 460:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1311              		.loc 1 460 23 is_stmt 0 view .LVU364
 1312 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1313              		.cfi_def_cfa_offset 20
 1314              		.cfi_offset 4, -20
 1315              		.cfi_offset 5, -16
 1316              		.cfi_offset 6, -12
 1317              		.cfi_offset 7, -8
 1318              		.cfi_offset 14, -4
 1319              	.LBB85:
 1320              	.LBB82:
 462:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 463:src/menu.c    **** 	lcd_fill_rect( col*2, 233 - row*3, 3, 3, 0xff);
 1321              		.loc 1 463 2 view .LVU365
 1322 0002 0D4E     		ldr	r6, .L121
 1323              	.LBE82:
 1324              	.LBE85:
 460:src/menu.c    ****   for (int col = 0; col < 200; col++) {
ARM GAS  /tmp/cc7sTUNp.s 			page 37


 1325              		.loc 1 460 23 view .LVU366
 1326 0004 83B0     		sub	sp, sp, #12
 1327              		.cfi_def_cfa_offset 32
 460:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1328              		.loc 1 460 23 view .LVU367
 1329 0006 0025     		movs	r5, #0
 1330              	.LBB86:
 1331              	.LBB83:
 1332              		.loc 1 463 2 view .LVU368
 1333 0008 FF27     		movs	r7, #255
 1334              	.LVL97:
 1335              	.L116:
 462:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1336              		.loc 1 462 23 is_stmt 1 view .LVU369
 1337              	.LBE83:
 1338              	.LBE86:
 460:src/menu.c    ****   for (int col = 0; col < 200; col++) {
 1339              		.loc 1 460 23 is_stmt 0 view .LVU370
 1340 000a E924     		movs	r4, #233
 1341              	.LVL98:
 1342              	.L117:
 1343              	.LBB87:
 1344              	.LBB84:
 1345              		.loc 1 463 2 is_stmt 1 discriminator 3 view .LVU371
 1346 000c 0323     		movs	r3, #3
 1347 000e 1A46     		mov	r2, r3
 1348 0010 2146     		mov	r1, r4
 1349 0012 2846     		mov	r0, r5
 1350 0014 0097     		str	r7, [sp]
 1351 0016 B047     		blx	r6
 1352              	.LVL99:
 464:src/menu.c    **** 	lcd_fill_rect( col*2, 233 - 5*3 -10 - row*3, 3, 3, 0xff);
 1353              		.loc 1 464 2 discriminator 3 view .LVU372
 1354 0018 0323     		movs	r3, #3
 1355 001a A4F11901 		sub	r1, r4, #25
 1356 001e 0097     		str	r7, [sp]
 1357 0020 1A46     		mov	r2, r3
 1358 0022 2846     		mov	r0, r5
 1359 0024 033C     		subs	r4, r4, #3
 1360 0026 B047     		blx	r6
 1361              	.LVL100:
 462:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1362              		.loc 1 462 32 discriminator 3 view .LVU373
 462:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1363              		.loc 1 462 23 discriminator 3 view .LVU374
 462:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1364              		.loc 1 462 5 is_stmt 0 discriminator 3 view .LVU375
 1365 0028 D72C     		cmp	r4, #215
 1366 002a EFD1     		bne	.L117
 1367              	.LBE84:
 461:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1368              		.loc 1 461 32 is_stmt 1 discriminator 2 view .LVU376
 461:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1369              		.loc 1 461 21 discriminator 2 view .LVU377
 1370 002c 0235     		adds	r5, r5, #2
 461:src/menu.c    ****     for (int row = 0; row < 6; row++) {
 1371              		.loc 1 461 3 is_stmt 0 discriminator 2 view .LVU378
ARM GAS  /tmp/cc7sTUNp.s 			page 38


 1372 002e B5F5C87F 		cmp	r5, #400
 1373 0032 EAD1     		bne	.L116
 1374              	.LBE87:
 465:src/menu.c    ****     }
 466:src/menu.c    ****   }
 467:src/menu.c    **** }  
 1375              		.loc 1 467 1 view .LVU379
 1376 0034 03B0     		add	sp, sp, #12
 1377              		.cfi_def_cfa_offset 20
 1378              		@ sp needed
 1379 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 1380              	.L122:
 1381              		.align	2
 1382              	.L121:
 1383 0038 3D020008 		.word	134218301
 1384              		.cfi_endproc
 1385              	.LFE14:
 1387              		.section	.text.shutdown,"ax",%progbits
 1388              		.align	1
 1389              		.p2align 2,,3
 1390              		.global	shutdown
 1391              		.syntax unified
 1392              		.thumb
 1393              		.thumb_func
 1394              		.fpu fpv4-sp-d16
 1396              	shutdown:
 1397              	.LFB16:
 1398              		.file 2 "src/console.c"
   1:src/console.c **** /* This file is part of 34S.
   2:src/console.c ****  * 
   3:src/console.c ****  * 34S is free software: you can redistribute it and/or modify
   4:src/console.c ****  * it under the terms of the GNU General Public License as published by
   5:src/console.c ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/console.c ****  * (at your option) any later version.
   7:src/console.c ****  * 
   8:src/console.c ****  * 34S is distributed in the hope that it will be useful,
   9:src/console.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/console.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/console.c ****  * GNU General Public License for more details.
  12:src/console.c ****  * 
  13:src/console.c ****  * You should have received a copy of the GNU General Public License
  14:src/console.c ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/console.c ****  */
  16:src/console.c **** 
  17:src/console.c **** /*
  18:src/console.c ****  *  This is the console emulator part
  19:src/console.c ****  */
  20:src/console.c **** #include <stdlib.h>
  21:src/console.c **** #include <stdio.h>
  22:src/console.c **** #include <ctype.h>
  23:src/console.c **** #include <string.h>
  24:src/console.c **** 
  25:src/console.c **** #ifdef DM42
  26:src/console.c **** #include "dmcp.h"
  27:src/console.c **** #endif
  28:src/console.c **** 
  29:src/console.c **** #define DM42SAFE
ARM GAS  /tmp/cc7sTUNp.s 			page 39


  30:src/console.c **** 
  31:src/console.c **** #include "keys.h"
  32:src/console.c **** #include "display.h"
  33:src/console.c **** #include "lcd.h"
  34:src/console.c **** #include "int.h"
  35:src/console.c **** #include "consts.h"
  36:src/console.c **** #include "storage.h"
  37:src/console.c **** #include "catalogues.h"
  38:src/console.c **** #undef DM42SAFE
  39:src/console.c **** 
  40:src/console.c **** 
  41:src/console.c **** #ifdef DM42
  42:src/console.c **** 
  43:src/console.c **** #include <menu.c>
  44:src/console.c **** 
  45:src/console.c **** struct _ndmap no_key = {.key_34s = K_NOP, .shift = 0};
  46:src/console.c **** struct _ndmap heartbeat = {.key_34s = K_HEARTBEAT, .shift = -1};
  47:src/console.c **** struct _ndmap f_shift = {.key_34s = K_F, .shift = -1};
  48:src/console.c **** struct _ndmap g_shift = {.key_34s = K_G, .shift = -1};
  49:src/console.c **** struct _ndmap h_shift = {.key_34s = K_H, .shift = -1};
  50:src/console.c **** struct _ndmap release = {.key_34s = K_RELEASE, .shift = -1};
  51:src/console.c **** struct _ndmap do_multi (struct _ndmap r);
  52:src/console.c **** 
  53:src/console.c **** static struct _ndmap remap (const int c) {
  54:src/console.c **** 
  55:src/console.c ****   struct _ndmap no_change = {.key_34s = (char) c, .shift = 0};
  56:src/console.c **** 
  57:src/console.c **** #include "keytran.c"
  58:src/console.c **** 
  59:src/console.c ****   if (c==K_HEARTBEAT) return heartbeat;
  60:src/console.c **** 
  61:src/console.c ****   if (c == 99) return release; // turn KEY_DOUBLE_RELEASE into ordinary release
  62:src/console.c **** 
  63:src/console.c ****   if (c == 44 ) {
  64:src/console.c ****     struct _ndmap sshot = {.key_34s = K_MULTI, .shift = SSHOT};
  65:src/console.c ****     return sshot;
  66:src/console.c ****   }
  67:src/console.c ****   
  68:src/console.c ****   if ( get_alpha_state() ) {
  69:src/console.c ****     if (c == KEY_SHIFT) { //deal with shift keys
  70:src/console.c ****       switch (cur_shift()) { 
  71:src/console.c ****       case SHIFT_N:
  72:src/console.c **** 	return mapping_none[c]; // N -> F
  73:src/console.c **** 	break;
  74:src/console.c ****       case SHIFT_F:
  75:src/console.c **** 	return mapping_fshift[c]; // F -> G
  76:src/console.c **** 	break;
  77:src/console.c ****       case SHIFT_G:
  78:src/console.c **** 	return h_shift; // G -> H
  79:src/console.c **** 	break;
  80:src/console.c ****       case SHIFT_H:
  81:src/console.c **** 	return h_shift; // H -> N
  82:src/console.c ****       default:
  83:src/console.c **** 	return no_change;
  84:src/console.c ****       }
  85:src/console.c ****     }
  86:src/console.c ****     return mapping_alpha [c];
ARM GAS  /tmp/cc7sTUNp.s 			page 40


  87:src/console.c ****   }
  88:src/console.c **** 
  89:src/console.c ****   if (Running | Pause) {
  90:src/console.c ****     return mapping_running[c];
  91:src/console.c ****   }
  92:src/console.c ****   
  93:src/console.c ****   switch (c) {
  94:src/console.c ****   case KEY_F1:
  95:src/console.c ****     if (cur_shift() == SHIFT_N) return Menus[current_menu].keys[0].unshifted;
  96:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[0].shifted;
  97:src/console.c ****   case KEY_F2:
  98:src/console.c ****     if (cur_shift() == SHIFT_N) return Menus[current_menu].keys[1].unshifted;
  99:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[1].shifted;
 100:src/console.c ****   case KEY_F3:
 101:src/console.c ****     if (cur_shift() == SHIFT_N) return Menus[current_menu].keys[2].unshifted;
 102:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[2].shifted;
 103:src/console.c ****   case KEY_F4:
 104:src/console.c ****     if (cur_shift() == SHIFT_N) return Menus[current_menu].keys[3].unshifted;
 105:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[3].shifted;
 106:src/console.c ****   case KEY_F5:
 107:src/console.c ****     if (cur_shift() == SHIFT_N) return Menus[current_menu].keys[4].unshifted;
 108:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[4].shifted;
 109:src/console.c ****   case KEY_F6:
 110:src/console.c ****     if (cur_shift() == SHIFT_N) return Menus[current_menu].keys[5].unshifted;
 111:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[5].shifted;
 112:src/console.c ****   }
 113:src/console.c ****   
 114:src/console.c ****   switch (cur_shift()) {
 115:src/console.c ****   case SHIFT_N:    
 116:src/console.c ****     return mapping_none[c];
 117:src/console.c ****     break;
 118:src/console.c ****   case SHIFT_F:
 119:src/console.c ****     return mapping_fshift[c];
 120:src/console.c ****     break;
 121:src/console.c ****   case SHIFT_G:
 122:src/console.c ****     return mapping_gshift[c];
 123:src/console.c ****     break;
 124:src/console.c ****   default:
 125:src/console.c ****     return no_change;
 126:src/console.c ****   }
 127:src/console.c **** }
 128:src/console.c **** 
 129:src/console.c **** #endif
 130:src/console.c **** 
 131:src/console.c **** void shutdown( void )
 132:src/console.c **** {
 1399              		.loc 2 132 1 is_stmt 1 view -0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 0
 1402              		@ frame_needed = 0, uses_anonymous_args = 0
 1403              		@ link register save eliminated.
 133:src/console.c **** #ifndef DM42
 134:src/console.c ****   checksum_all();
 135:src/console.c ****   setuptty( 1 );
 136:src/console.c ****   save_statefile( NULL );
 137:src/console.c ****   exit( 0 );
 138:src/console.c **** #else
ARM GAS  /tmp/cc7sTUNp.s 			page 41


 139:src/console.c ****   //  save_ram_file(0);
 140:src/console.c ****   SET_ST(STAT_PGM_END);
 1404              		.loc 2 140 3 view .LVU381
 1405 0000 024A     		ldr	r2, .L124
 1406 0002 1368     		ldr	r3, [r2]
 1407 0004 43F40073 		orr	r3, r3, #512
 1408 0008 1360     		str	r3, [r2]
 141:src/console.c **** #endif
 142:src/console.c **** }
 1409              		.loc 2 142 1 is_stmt 0 view .LVU382
 1410 000a 7047     		bx	lr
 1411              	.L125:
 1412              		.align	2
 1413              	.L124:
 1414 000c 00200010 		.word	268443648
 1415              		.cfi_endproc
 1416              	.LFE16:
 1418              		.section	.text.is_key_pressed,"ax",%progbits
 1419              		.align	1
 1420              		.p2align 2,,3
 1421              		.global	is_key_pressed
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1425              		.fpu fpv4-sp-d16
 1427              	is_key_pressed:
 1428              	.LFB17:
 143:src/console.c **** 
 144:src/console.c **** 
 145:src/console.c **** /*
 146:src/console.c ****  *  Dummies
 147:src/console.c ****  */
 148:src/console.c **** int is_key_pressed(void) 
 149:src/console.c **** {
 1429              		.loc 2 149 1 is_stmt 1 view -0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 150:src/console.c **** #ifdef DM42
 151:src/console.c ****   return !key_empty();
 1433              		.loc 2 151 3 view .LVU384
 149:src/console.c **** #ifdef DM42
 1434              		.loc 2 149 1 is_stmt 0 view .LVU385
 1435 0000 08B5     		push	{r3, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 3, -8
 1438              		.cfi_offset 14, -4
 1439              		.loc 2 151 11 view .LVU386
 1440 0002 034B     		ldr	r3, .L128
 1441 0004 9847     		blx	r3
 1442              	.LVL101:
 152:src/console.c **** #else
 153:src/console.c ****   return 0;
 154:src/console.c **** #endif
 155:src/console.c **** }
 1443              		.loc 2 155 1 view .LVU387
 1444 0006 B0FA80F0 		clz	r0, r0
ARM GAS  /tmp/cc7sTUNp.s 			page 42


 1445 000a 4009     		lsrs	r0, r0, #5
 1446 000c 08BD     		pop	{r3, pc}
 1447              	.L129:
 1448 000e 00BF     		.align	2
 1449              	.L128:
 1450 0010 7D030008 		.word	134218621
 1451              		.cfi_endproc
 1452              	.LFE17:
 1454              		.section	.text.get_key,"ax",%progbits
 1455              		.align	1
 1456              		.p2align 2,,3
 1457              		.global	get_key
 1458              		.syntax unified
 1459              		.thumb
 1460              		.thumb_func
 1461              		.fpu fpv4-sp-d16
 1463              	get_key:
 1464              	.LFB18:
 156:src/console.c **** 
 157:src/console.c **** int get_key(void)
 158:src/console.c **** {
 1465              		.loc 2 158 1 is_stmt 1 view -0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
 1469              		@ link register save eliminated.
 159:src/console.c ****   #ifdef DM42
 160:src/console.c ****   return key_pop();
 1470              		.loc 2 160 3 view .LVU389
 1471              		.loc 2 160 10 is_stmt 0 view .LVU390
 1472 0000 004B     		ldr	r3, .L131
 1473 0002 1847     		bx	r3
 1474              	.LVL102:
 1475              	.L132:
 1476              		.align	2
 1477              	.L131:
 1478 0004 89030008 		.word	134218633
 1479              		.cfi_endproc
 1480              	.LFE18:
 1482              		.section	.text.put_key,"ax",%progbits
 1483              		.align	1
 1484              		.p2align 2,,3
 1485              		.global	put_key
 1486              		.syntax unified
 1487              		.thumb
 1488              		.thumb_func
 1489              		.fpu fpv4-sp-d16
 1491              	put_key:
 1492              	.LVL103:
 1493              	.LFB19:
 161:src/console.c ****   #else
 162:src/console.c ****   return 0;
 163:src/console.c ****   #endif
 164:src/console.c **** }
 165:src/console.c **** 
 166:src/console.c **** /*
 167:src/console.c ****  * k is a WP34s key code. I need to translate it into a DM42 keycode, and push it.
ARM GAS  /tmp/cc7sTUNp.s 			page 43


 168:src/console.c ****  * 
 169:src/console.c ****  */
 170:src/console.c **** int put_key( int k )
 171:src/console.c **** {
 1494              		.loc 2 171 1 is_stmt 1 view -0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 48
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 1498              		@ link register save eliminated.
 172:src/console.c ****   #ifdef DM42
 173:src/console.c ****   const char wp34s_to_DM42[] = {
 1499              		.loc 2 173 3 view .LVU392
 171:src/console.c ****   #ifdef DM42
 1500              		.loc 2 171 1 is_stmt 0 view .LVU393
 1501 0000 70B4     		push	{r4, r5, r6}
 1502              		.cfi_def_cfa_offset 12
 1503              		.cfi_offset 4, -12
 1504              		.cfi_offset 5, -8
 1505              		.cfi_offset 6, -4
 1506              		.loc 2 173 14 view .LVU394
 1507 0002 0E4D     		ldr	r5, .L136
 171:src/console.c ****   #ifdef DM42
 1508              		.loc 2 171 1 view .LVU395
 1509 0004 0646     		mov	r6, r0
 1510              		.loc 2 173 14 view .LVU396
 1511 0006 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1512              	.LVL104:
 171:src/console.c ****   #ifdef DM42
 1513              		.loc 2 171 1 view .LVU397
 1514 0008 8DB0     		sub	sp, sp, #52
 1515              		.cfi_def_cfa_offset 64
 1516              		.loc 2 173 14 view .LVU398
 1517 000a 01AC     		add	r4, sp, #4
 1518 000c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1519 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1520 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1521 0012 95E80700 		ldm	r5, {r0, r1, r2}
 1522 0016 03C4     		stmia	r4!, {r0, r1}
 174:src/console.c ****     KEY_SIGMA, KEY_INV, KEY_SQRT, KEY_LOG, KEY_F5, KEY_F6, // 0-5
 175:src/console.c ****     KEY_STO, KEY_RCL, KEY_RDN, KEY_SHIFT, KEY_COS, KEY_TAN, // 6-11
 176:src/console.c ****     KEY_ENTER, KEY_SWAP, KEY_CHS, KEY_E, KEY_BSP, 0, // 12-17
 177:src/console.c ****     KEY_XEQ, KEY_7, KEY_8, KEY_9, KEY_DIV, 0, // 18-23
 178:src/console.c ****     KEY_UP, KEY_4, KEY_5, KEY_6, KEY_MUL, 0, // 24-29
 179:src/console.c ****     KEY_DOWN, KEY_1, KEY_2, KEY_3, KEY_SUB, 0, // 30-35
 180:src/console.c ****     KEY_EXIT, KEY_0, KEY_DOT, KEY_RUN, KEY_ADD,}; // 36-40
 181:src/console.c ****   
 182:src/console.c ****   if ( ( k >= K00 ) && ( k <= K64 ) ) {
 1523              		.loc 2 182 6 view .LVU399
 1524 0018 282E     		cmp	r6, #40
 173:src/console.c ****     KEY_SIGMA, KEY_INV, KEY_SQRT, KEY_LOG, KEY_F5, KEY_F6, // 0-5
 1525              		.loc 2 173 14 view .LVU400
 1526 001a 2270     		strb	r2, [r4]
 1527              		.loc 2 182 3 is_stmt 1 view .LVU401
 1528              		.loc 2 182 6 is_stmt 0 view .LVU402
 1529 001c 08D8     		bhi	.L134
 183:src/console.c ****     return key_push( wp34s_to_DM42 [k] );
 1530              		.loc 2 183 5 is_stmt 1 view .LVU403
ARM GAS  /tmp/cc7sTUNp.s 			page 44


 1531              		.loc 2 183 36 is_stmt 0 view .LVU404
 1532 001e 0CAB     		add	r3, sp, #48
 1533 0020 3046     		mov	r0, r6
 1534 0022 1844     		add	r0, r0, r3
 1535              		.loc 2 183 12 view .LVU405
 1536 0024 064B     		ldr	r3, .L136+4
 1537 0026 10F82C0C 		ldrb	r0, [r0, #-44]	@ zero_extendqisi2
 184:src/console.c ****   }
 185:src/console.c ****   else {
 186:src/console.c ****     return -1;
 187:src/console.c ****   }
 188:src/console.c ****   #else
 189:src/console.c ****   return k;
 190:src/console.c ****   #endif
 191:src/console.c **** }
 1538              		.loc 2 191 1 view .LVU406
 1539 002a 0DB0     		add	sp, sp, #52
 1540              		.cfi_remember_state
 1541              		.cfi_def_cfa_offset 12
 1542              		@ sp needed
 1543 002c 70BC     		pop	{r4, r5, r6}
 1544              		.cfi_restore 6
 1545              		.cfi_restore 5
 1546              		.cfi_restore 4
 1547              		.cfi_def_cfa_offset 0
 1548              	.LVL105:
 183:src/console.c ****     return key_push( wp34s_to_DM42 [k] );
 1549              		.loc 2 183 12 view .LVU407
 1550 002e 1847     		bx	r3
 1551              	.LVL106:
 1552              	.L134:
 1553              		.cfi_restore_state
 1554              		.loc 2 191 1 view .LVU408
 1555 0030 4FF0FF30 		mov	r0, #-1
 1556 0034 0DB0     		add	sp, sp, #52
 1557              		.cfi_def_cfa_offset 12
 1558              		@ sp needed
 1559 0036 70BC     		pop	{r4, r5, r6}
 1560              		.cfi_restore 6
 1561              		.cfi_restore 5
 1562              		.cfi_restore 4
 1563              		.cfi_def_cfa_offset 0
 1564              	.LVL107:
 1565              		.loc 2 191 1 view .LVU409
 1566 0038 7047     		bx	lr
 1567              	.L137:
 1568 003a 00BF     		.align	2
 1569              	.L136:
 1570 003c 00000000 		.word	.LANCHOR5
 1571 0040 81030008 		.word	134218625
 1572              		.cfi_endproc
 1573              	.LFE19:
 1575              		.section	.text.shift_down,"ax",%progbits
 1576              		.align	1
 1577              		.p2align 2,,3
 1578              		.global	shift_down
 1579              		.syntax unified
ARM GAS  /tmp/cc7sTUNp.s 			page 45


 1580              		.thumb
 1581              		.thumb_func
 1582              		.fpu fpv4-sp-d16
 1584              	shift_down:
 1585              	.LFB20:
 192:src/console.c **** 
 193:src/console.c **** enum shifts shift_down(void)
 194:src/console.c **** {
 1586              		.loc 2 194 1 is_stmt 1 view -0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              		@ link register save eliminated.
 195:src/console.c **** 	return SHIFT_N;
 1591              		.loc 2 195 2 view .LVU411
 196:src/console.c **** }
 1592              		.loc 2 196 1 is_stmt 0 view .LVU412
 1593 0000 0020     		movs	r0, #0
 1594 0002 7047     		bx	lr
 1595              		.cfi_endproc
 1596              	.LFE20:
 1598              		.section	.text.start_key_timer,"ax",%progbits
 1599              		.align	1
 1600              		.p2align 2,,3
 1601              		.global	start_key_timer
 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1605              		.fpu fpv4-sp-d16
 1607              	start_key_timer:
 1608              	.LFB21:
 197:src/console.c **** 
 198:src/console.c **** #ifndef DM42   // No serial operations for DM42
 199:src/console.c **** #ifndef WIN32  // Windows uses winserial.c
 200:src/console.c **** /*
 201:src/console.c ****  *  Open a COM port for transmission
 202:src/console.c ****  */
 203:src/console.c **** int open_port( int baud, int bits, int parity, int stopbits )
 204:src/console.c **** {
 205:src/console.c **** 	return 0;
 206:src/console.c **** }
 207:src/console.c **** 
 208:src/console.c **** 
 209:src/console.c **** /*
 210:src/console.c ****  *  Close the COM port after transmission is complete
 211:src/console.c ****  */
 212:src/console.c **** extern void close_port( void )
 213:src/console.c **** {
 214:src/console.c **** }
 215:src/console.c **** 
 216:src/console.c **** 
 217:src/console.c **** /*
 218:src/console.c ****  *  Output a single byte to the serial
 219:src/console.c ****  */
 220:src/console.c **** void put_byte( unsigned char byte )
 221:src/console.c **** {
 222:src/console.c **** 	report_err(ERR_PROG_BAD);
ARM GAS  /tmp/cc7sTUNp.s 			page 46


 223:src/console.c **** }
 224:src/console.c **** 
 225:src/console.c **** 
 226:src/console.c **** /*
 227:src/console.c ****  *  Force buffer flush
 228:src/console.c ****  */
 229:src/console.c **** void flush_comm( void )
 230:src/console.c **** {
 231:src/console.c **** }
 232:src/console.c **** 
 233:src/console.c **** #endif
 234:src/console.c **** #endif
 235:src/console.c **** 
 236:src/console.c **** 
 237:src/console.c **** /*
 238:src/console.c ****  *  Main loop
 239:src/console.c ****  */
 240:src/console.c **** #ifdef DM42
 241:src/console.c **** void start_key_timer (void);
 242:src/console.c **** long int keyticks (void);
 243:src/console.c **** void moveto (int line, int x);
 244:src/console.c **** 
 245:src/console.c **** static long int start_ticks;
 246:src/console.c **** 
 247:src/console.c **** void start_key_timer() {
 1609              		.loc 2 247 24 is_stmt 1 view -0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 248:src/console.c ****     start_ticks = get_rtc_ticks();
 1613              		.loc 2 248 5 view .LVU414
 247:src/console.c ****     start_ticks = get_rtc_ticks();
 1614              		.loc 2 247 24 is_stmt 0 view .LVU415
 1615 0000 08B5     		push	{r3, lr}
 1616              		.cfi_def_cfa_offset 8
 1617              		.cfi_offset 3, -8
 1618              		.cfi_offset 14, -4
 1619              		.loc 2 248 19 view .LVU416
 1620 0002 024B     		ldr	r3, .L141
 1621 0004 9847     		blx	r3
 1622              	.LVL108:
 1623              		.loc 2 248 17 view .LVU417
 1624 0006 024B     		ldr	r3, .L141+4
 1625 0008 1860     		str	r0, [r3]
 249:src/console.c **** }
 1626              		.loc 2 249 1 view .LVU418
 1627 000a 08BD     		pop	{r3, pc}
 1628              	.L142:
 1629              		.align	2
 1630              	.L141:
 1631 000c B9040008 		.word	134218937
 1632 0010 00000000 		.word	.LANCHOR6
 1633              		.cfi_endproc
 1634              	.LFE21:
 1636              		.section	.text.keyticks,"ax",%progbits
 1637              		.align	1
 1638              		.p2align 2,,3
ARM GAS  /tmp/cc7sTUNp.s 			page 47


 1639              		.global	keyticks
 1640              		.syntax unified
 1641              		.thumb
 1642              		.thumb_func
 1643              		.fpu fpv4-sp-d16
 1645              	keyticks:
 1646              	.LFB22:
 250:src/console.c **** 
 251:src/console.c **** long int keyticks () {
 1647              		.loc 2 251 22 is_stmt 1 view -0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 252:src/console.c ****   long int i;
 1651              		.loc 2 252 3 view .LVU420
 253:src/console.c ****   i = (get_rtc_ticks() - start_ticks)*10;
 1652              		.loc 2 253 3 view .LVU421
 251:src/console.c ****   long int i;
 1653              		.loc 2 251 22 is_stmt 0 view .LVU422
 1654 0000 08B5     		push	{r3, lr}
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 3, -8
 1657              		.cfi_offset 14, -4
 1658              		.loc 2 253 8 view .LVU423
 1659 0002 054B     		ldr	r3, .L145
 1660 0004 9847     		blx	r3
 1661              	.LVL109:
 254:src/console.c ****   return i >> 8;
 1662              		.loc 2 254 3 is_stmt 1 view .LVU424
 253:src/console.c ****   i = (get_rtc_ticks() - start_ticks)*10;
 1663              		.loc 2 253 24 is_stmt 0 view .LVU425
 1664 0006 054B     		ldr	r3, .L145+4
 1665 0008 1B68     		ldr	r3, [r3]
 1666 000a C01A     		subs	r0, r0, r3
 1667              	.LVL110:
 253:src/console.c ****   i = (get_rtc_ticks() - start_ticks)*10;
 1668              		.loc 2 253 38 view .LVU426
 1669 000c 00EB8000 		add	r0, r0, r0, lsl #2
 255:src/console.c **** }
 1670              		.loc 2 255 1 view .LVU427
 1671 0010 40F3D710 		sbfx	r0, r0, #7, #24
 1672 0014 08BD     		pop	{r3, pc}
 1673              	.L146:
 1674 0016 00BF     		.align	2
 1675              	.L145:
 1676 0018 B9040008 		.word	134218937
 1677 001c 00000000 		.word	.LANCHOR6
 1678              		.cfi_endproc
 1679              	.LFE22:
 1681              		.section	.text.moveto,"ax",%progbits
 1682              		.align	1
 1683              		.p2align 2,,3
 1684              		.global	moveto
 1685              		.syntax unified
 1686              		.thumb
 1687              		.thumb_func
 1688              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc7sTUNp.s 			page 48


 1690              	moveto:
 1691              	.LVL111:
 1692              	.LFB23:
 256:src/console.c **** 
 257:src/console.c **** char spaces[22] = "                     ";	//21 spaces.
 258:src/console.c **** char print_string[22];
 259:src/console.c **** int n_p = 0;
 260:src/console.c **** 
 261:src/console.c **** 
 262:src/console.c **** void moveto(int line, int x) {//These are line number and character positions
 1693              		.loc 2 262 30 is_stmt 1 view -0
 1694              		.cfi_startproc
 1695              		@ args = 0, pretend = 0, frame = 0
 1696              		@ frame_needed = 0, uses_anonymous_args = 0
 263:src/console.c ****   lcd_setLine(fReg, line-1); //line 0 is the top line
 1697              		.loc 2 263 3 view .LVU429
 262:src/console.c ****   lcd_setLine(fReg, line-1); //line 0 is the top line
 1698              		.loc 2 262 30 is_stmt 0 view .LVU430
 1699 0000 70B5     		push	{r4, r5, r6, lr}
 1700              		.cfi_def_cfa_offset 16
 1701              		.cfi_offset 4, -16
 1702              		.cfi_offset 5, -12
 1703              		.cfi_offset 6, -8
 1704              		.cfi_offset 14, -4
 1705              		.loc 2 263 3 view .LVU431
 1706 0002 0A4D     		ldr	r5, .L149
 1707 0004 0A4B     		ldr	r3, .L149+4
 262:src/console.c ****   lcd_setLine(fReg, line-1); //line 0 is the top line
 1708              		.loc 2 262 30 view .LVU432
 1709 0006 0246     		mov	r2, r0
 1710 0008 0C46     		mov	r4, r1
 1711              		.loc 2 263 3 view .LVU433
 1712 000a A86B     		ldr	r0, [r5, #56]
 1713              	.LVL112:
 1714              		.loc 2 263 3 view .LVU434
 1715 000c 511E     		subs	r1, r2, #1
 1716              	.LVL113:
 1717              		.loc 2 263 3 view .LVU435
 1718 000e 9847     		blx	r3
 1719              	.LVL114:
 264:src/console.c ****   lcd_setXY(fReg, 20 + (fReg->f)->width*(x-1), fReg->y);
 1720              		.loc 2 264 3 is_stmt 1 view .LVU436
 1721 0010 A86B     		ldr	r0, [r5, #56]
 1722 0012 084B     		ldr	r3, .L149+8
 1723              		.loc 2 264 33 is_stmt 0 view .LVU437
 1724 0014 0168     		ldr	r1, [r0]
 1725              		.loc 2 264 3 view .LVU438
 1726 0016 B0F90620 		ldrsh	r2, [r0, #6]
 1727              		.loc 2 264 33 view .LVU439
 1728 001a 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1729              		.loc 2 264 43 view .LVU440
 1730 001c 013C     		subs	r4, r4, #1
 1731              	.LVL115:
 1732              		.loc 2 264 40 view .LVU441
 1733 001e 04FB01F1 		mul	r1, r4, r1
 1734              		.loc 2 264 3 view .LVU442
 1735 0022 1431     		adds	r1, r1, #20
ARM GAS  /tmp/cc7sTUNp.s 			page 49


 265:src/console.c **** }
 1736              		.loc 2 265 1 view .LVU443
 1737 0024 BDE87040 		pop	{r4, r5, r6, lr}
 1738              		.cfi_restore 14
 1739              		.cfi_restore 6
 1740              		.cfi_restore 5
 1741              		.cfi_restore 4
 1742              		.cfi_def_cfa_offset 0
 1743              	.LVL116:
 264:src/console.c ****   lcd_setXY(fReg, 20 + (fReg->f)->width*(x-1), fReg->y);
 1744              		.loc 2 264 3 view .LVU444
 1745 0028 1847     		bx	r3	@ indirect register sibling call
 1746              	.LVL117:
 1747              	.L150:
 1748 002a 00BF     		.align	2
 1749              	.L149:
 1750 002c 00200010 		.word	268443648
 1751 0030 69020008 		.word	134218345
 1752 0034 6D020008 		.word	134218349
 1753              		.cfi_endproc
 1754              	.LFE23:
 1756              		.section	.rodata.print_debug.str1.4,"aMS",%progbits,1
 1757              		.align	2
 1758              	.LC10:
 1759 0000 44656275 		.ascii	"Debug: %4i,%4i\000"
 1759      673A2025 
 1759      34692C25 
 1759      346900
 1760              		.section	.text.print_debug,"ax",%progbits
 1761              		.align	1
 1762              		.p2align 2,,3
 1763              		.global	print_debug
 1764              		.syntax unified
 1765              		.thumb
 1766              		.thumb_func
 1767              		.fpu fpv4-sp-d16
 1769              	print_debug:
 1770              	.LVL118:
 1771              	.LFB24:
 266:src/console.c **** 
 267:src/console.c **** void print_debug (int i, int j) {
 1772              		.loc 2 267 33 is_stmt 1 view -0
 1773              		.cfi_startproc
 1774              		@ args = 0, pretend = 0, frame = 8
 1775              		@ frame_needed = 0, uses_anonymous_args = 0
 268:src/console.c ****   strcpy( print_string, spaces );
 1776              		.loc 2 268 3 view .LVU446
 267:src/console.c ****   strcpy( print_string, spaces );
 1777              		.loc 2 267 33 is_stmt 0 view .LVU447
 1778 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1779              		.cfi_def_cfa_offset 24
 1780              		.cfi_offset 4, -24
 1781              		.cfi_offset 5, -20
 1782              		.cfi_offset 6, -16
 1783              		.cfi_offset 7, -12
 1784              		.cfi_offset 8, -8
 1785              		.cfi_offset 14, -4
ARM GAS  /tmp/cc7sTUNp.s 			page 50


 1786              		.loc 2 268 3 view .LVU448
 1787 0004 164C     		ldr	r4, .L153
 1788 0006 174F     		ldr	r7, .L153+4
 269:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 270:src/console.c ****   moveto (3, 1);
 271:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 1789              		.loc 2 271 3 view .LVU449
 1790 0008 174E     		ldr	r6, .L153+8
 1791 000a 184D     		ldr	r5, .L153+12
 272:src/console.c ****   lcd_refresh();
 1792              		.loc 2 272 3 view .LVU450
 1793 000c DFF86880 		ldr	r8, .L153+24
 267:src/console.c ****   strcpy( print_string, spaces );
 1794              		.loc 2 267 33 view .LVU451
 1795 0010 82B0     		sub	sp, sp, #8
 1796              		.cfi_def_cfa_offset 32
 267:src/console.c ****   strcpy( print_string, spaces );
 1797              		.loc 2 267 33 view .LVU452
 1798 0012 0190     		str	r0, [sp, #4]
 1799 0014 0091     		str	r1, [sp]
 268:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 1800              		.loc 2 268 3 view .LVU453
 1801 0016 2046     		mov	r0, r4
 1802              	.LVL119:
 268:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 1803              		.loc 2 268 3 view .LVU454
 1804 0018 3946     		mov	r1, r7
 1805              	.LVL120:
 268:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 1806              		.loc 2 268 3 view .LVU455
 1807 001a FFF7FEFF 		bl	strcpy
 1808              	.LVL121:
 269:src/console.c ****   sprintf ( print_string, "Debug: %4i,%4i", i, j);
 1809              		.loc 2 269 3 is_stmt 1 view .LVU456
 1810 001e DDE90032 		ldrd	r3, r2, [sp]
 1811 0022 1349     		ldr	r1, .L153+16
 1812 0024 2046     		mov	r0, r4
 1813 0026 FFF7FEFF 		bl	sprintf
 1814              	.LVL122:
 270:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 1815              		.loc 2 270 3 view .LVU457
 1816 002a 0121     		movs	r1, #1
 1817 002c 0320     		movs	r0, #3
 1818 002e FFF7FEFF 		bl	moveto
 1819              	.LVL123:
 271:src/console.c ****   lcd_refresh();
 1820              		.loc 2 271 3 view .LVU458
 1821 0032 2146     		mov	r1, r4
 1822 0034 B06B     		ldr	r0, [r6, #56]
 1823 0036 A847     		blx	r5
 1824              	.LVL124:
 1825              		.loc 2 272 3 view .LVU459
 1826 0038 C047     		blx	r8
 1827              	.LVL125:
 273:src/console.c ****   sys_delay (100);
 1828              		.loc 2 273 3 view .LVU460
 1829 003a 0E4B     		ldr	r3, .L153+20
ARM GAS  /tmp/cc7sTUNp.s 			page 51


 1830 003c 6420     		movs	r0, #100
 1831 003e 9847     		blx	r3
 1832              	.LVL126:
 274:src/console.c ****   /* wait_for_key_press(); */
 275:src/console.c ****   //  key_pop_all();
 276:src/console.c ****   // while ((key_pop()<=0) || (key_pop()==K_HEARTBEAT));;
 277:src/console.c ****   // key_pop_all();
 278:src/console.c ****   strcpy( print_string, spaces );
 1833              		.loc 2 278 3 view .LVU461
 1834 0040 3946     		mov	r1, r7
 1835 0042 2046     		mov	r0, r4
 1836 0044 FFF7FEFF 		bl	strcpy
 1837              	.LVL127:
 279:src/console.c ****   moveto (3, 1);
 1838              		.loc 2 279 3 view .LVU462
 1839 0048 0121     		movs	r1, #1
 1840 004a 0320     		movs	r0, #3
 1841 004c FFF7FEFF 		bl	moveto
 1842              	.LVL128:
 280:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 1843              		.loc 2 280 3 view .LVU463
 1844 0050 B06B     		ldr	r0, [r6, #56]
 1845 0052 2146     		mov	r1, r4
 1846 0054 A847     		blx	r5
 1847              	.LVL129:
 281:src/console.c ****   lcd_refresh();
 1848              		.loc 2 281 3 view .LVU464
 1849 0056 4346     		mov	r3, r8
 282:src/console.c ****   // while (key_empty()<=0);; // wait for release
 283:src/console.c ****   // key_pop_all();
 284:src/console.c **** }
 1850              		.loc 2 284 1 is_stmt 0 view .LVU465
 1851 0058 02B0     		add	sp, sp, #8
 1852              		.cfi_def_cfa_offset 24
 1853              	.LVL130:
 1854              		.loc 2 284 1 view .LVU466
 1855              		@ sp needed
 1856 005a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1857              		.cfi_restore 14
 1858              		.cfi_restore 8
 1859              		.cfi_restore 7
 1860              		.cfi_restore 6
 1861              		.cfi_restore 5
 1862              		.cfi_restore 4
 1863              		.cfi_def_cfa_offset 0
 1864              	.LVL131:
 281:src/console.c ****   lcd_refresh();
 1865              		.loc 2 281 3 view .LVU467
 1866 005e 1847     		bx	r3	@ indirect register sibling call
 1867              	.LVL132:
 1868              	.L154:
 1869              		.align	2
 1870              	.L153:
 1871 0060 00000000 		.word	print_string
 1872 0064 00000000 		.word	.LANCHOR7
 1873 0068 00200010 		.word	268443648
 1874 006c B1020008 		.word	134218417
ARM GAS  /tmp/cc7sTUNp.s 			page 52


 1875 0070 00000000 		.word	.LC10
 1876 0074 05040008 		.word	134218757
 1877 0078 31020008 		.word	134218289
 1878              		.cfi_endproc
 1879              	.LFE24:
 1881              		.section	.rodata.print_debug2.str1.4,"aMS",%progbits,1
 1882              		.align	2
 1883              	.LC11:
 1884 0000 443A2534 		.ascii	"D:%4i,%13s\000"
 1884      692C2531 
 1884      337300
 1885              		.section	.text.print_debug2,"ax",%progbits
 1886              		.align	1
 1887              		.p2align 2,,3
 1888              		.global	print_debug2
 1889              		.syntax unified
 1890              		.thumb
 1891              		.thumb_func
 1892              		.fpu fpv4-sp-d16
 1894              	print_debug2:
 1895              	.LVL133:
 1896              	.LFB25:
 285:src/console.c **** 
 286:src/console.c **** void print_debug2 (int i, char* j) {
 1897              		.loc 2 286 36 is_stmt 1 view -0
 1898              		.cfi_startproc
 1899              		@ args = 0, pretend = 0, frame = 8
 1900              		@ frame_needed = 0, uses_anonymous_args = 0
 287:src/console.c ****   strcpy( print_string, spaces );
 1901              		.loc 2 287 3 view .LVU469
 286:src/console.c ****   strcpy( print_string, spaces );
 1902              		.loc 2 286 36 is_stmt 0 view .LVU470
 1903 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1904              		.cfi_def_cfa_offset 24
 1905              		.cfi_offset 4, -24
 1906              		.cfi_offset 5, -20
 1907              		.cfi_offset 6, -16
 1908              		.cfi_offset 7, -12
 1909              		.cfi_offset 8, -8
 1910              		.cfi_offset 14, -4
 1911              		.loc 2 287 3 view .LVU471
 1912 0004 174C     		ldr	r4, .L157
 1913 0006 184F     		ldr	r7, .L157+4
 288:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 289:src/console.c ****   moveto (3, 1);
 290:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 1914              		.loc 2 290 3 view .LVU472
 1915 0008 184E     		ldr	r6, .L157+8
 1916 000a 194D     		ldr	r5, .L157+12
 291:src/console.c ****   lcd_refresh();
 1917              		.loc 2 291 3 view .LVU473
 1918 000c DFF86C80 		ldr	r8, .L157+24
 286:src/console.c ****   strcpy( print_string, spaces );
 1919              		.loc 2 286 36 view .LVU474
 1920 0010 82B0     		sub	sp, sp, #8
 1921              		.cfi_def_cfa_offset 32
 286:src/console.c ****   strcpy( print_string, spaces );
ARM GAS  /tmp/cc7sTUNp.s 			page 53


 1922              		.loc 2 286 36 view .LVU475
 1923 0012 0190     		str	r0, [sp, #4]
 1924 0014 0091     		str	r1, [sp]
 287:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 1925              		.loc 2 287 3 view .LVU476
 1926 0016 2046     		mov	r0, r4
 1927              	.LVL134:
 287:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 1928              		.loc 2 287 3 view .LVU477
 1929 0018 3946     		mov	r1, r7
 1930              	.LVL135:
 287:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 1931              		.loc 2 287 3 view .LVU478
 1932 001a FFF7FEFF 		bl	strcpy
 1933              	.LVL136:
 288:src/console.c ****   sprintf ( print_string, "D:%4i,%13s", i, j);
 1934              		.loc 2 288 3 is_stmt 1 view .LVU479
 1935 001e DDE90032 		ldrd	r3, r2, [sp]
 1936 0022 1449     		ldr	r1, .L157+16
 1937 0024 2046     		mov	r0, r4
 1938 0026 FFF7FEFF 		bl	sprintf
 1939              	.LVL137:
 289:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 1940              		.loc 2 289 3 view .LVU480
 1941 002a 0121     		movs	r1, #1
 1942 002c 0320     		movs	r0, #3
 1943 002e FFF7FEFF 		bl	moveto
 1944              	.LVL138:
 290:src/console.c ****   lcd_refresh();
 1945              		.loc 2 290 3 view .LVU481
 1946 0032 2146     		mov	r1, r4
 1947 0034 B06B     		ldr	r0, [r6, #56]
 1948 0036 A847     		blx	r5
 1949              	.LVL139:
 1950              		.loc 2 291 3 view .LVU482
 1951 0038 C047     		blx	r8
 1952              	.LVL140:
 292:src/console.c ****   sys_delay (2500);
 1953              		.loc 2 292 3 view .LVU483
 1954 003a 0F4B     		ldr	r3, .L157+20
 1955 003c 40F6C410 		movw	r0, #2500
 1956 0040 9847     		blx	r3
 1957              	.LVL141:
 293:src/console.c ****   /* wait_for_key_press(); */
 294:src/console.c ****   //  key_pop_all();
 295:src/console.c ****   // while ((key_pop()<=0) || (key_pop()==K_HEARTBEAT));;
 296:src/console.c ****   // key_pop_all();
 297:src/console.c ****   strcpy( print_string, spaces );
 1958              		.loc 2 297 3 view .LVU484
 1959 0042 3946     		mov	r1, r7
 1960 0044 2046     		mov	r0, r4
 1961 0046 FFF7FEFF 		bl	strcpy
 1962              	.LVL142:
 298:src/console.c ****   moveto (3, 1);
 1963              		.loc 2 298 3 view .LVU485
 1964 004a 0121     		movs	r1, #1
 1965 004c 0320     		movs	r0, #3
ARM GAS  /tmp/cc7sTUNp.s 			page 54


 1966 004e FFF7FEFF 		bl	moveto
 1967              	.LVL143:
 299:src/console.c ****   lcd_print (fReg , (const char*) print_string );
 1968              		.loc 2 299 3 view .LVU486
 1969 0052 B06B     		ldr	r0, [r6, #56]
 1970 0054 2146     		mov	r1, r4
 1971 0056 A847     		blx	r5
 1972              	.LVL144:
 300:src/console.c ****   lcd_refresh();
 1973              		.loc 2 300 3 view .LVU487
 1974 0058 4346     		mov	r3, r8
 301:src/console.c ****   // while (key_empty()<=0);; // wait for release
 302:src/console.c ****   // key_pop_all();
 303:src/console.c **** }
 1975              		.loc 2 303 1 is_stmt 0 view .LVU488
 1976 005a 02B0     		add	sp, sp, #8
 1977              		.cfi_def_cfa_offset 24
 1978              	.LVL145:
 1979              		.loc 2 303 1 view .LVU489
 1980              		@ sp needed
 1981 005c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1982              		.cfi_restore 14
 1983              		.cfi_restore 8
 1984              		.cfi_restore 7
 1985              		.cfi_restore 6
 1986              		.cfi_restore 5
 1987              		.cfi_restore 4
 1988              		.cfi_def_cfa_offset 0
 1989              	.LVL146:
 300:src/console.c ****   lcd_refresh();
 1990              		.loc 2 300 3 view .LVU490
 1991 0060 1847     		bx	r3	@ indirect register sibling call
 1992              	.LVL147:
 1993              	.L158:
 1994 0062 00BF     		.align	2
 1995              	.L157:
 1996 0064 00000000 		.word	print_string
 1997 0068 00000000 		.word	.LANCHOR7
 1998 006c 00200010 		.word	268443648
 1999 0070 B1020008 		.word	134218417
 2000 0074 00000000 		.word	.LC11
 2001 0078 05040008 		.word	134218757
 2002 007c 31020008 		.word	134218289
 2003              		.cfi_endproc
 2004              	.LFE25:
 2006              		.section	.text.do_now,"ax",%progbits
 2007              		.align	1
 2008              		.p2align 2,,3
 2009              		.global	do_now
 2010              		.syntax unified
 2011              		.thumb
 2012              		.thumb_func
 2013              		.fpu fpv4-sp-d16
 2015              	do_now:
 2016              	.LVL148:
 2017              	.LFB26:
 304:src/console.c **** 
ARM GAS  /tmp/cc7sTUNp.s 			page 55


 305:src/console.c **** void do_now (int key, int shift) {
 2018              		.loc 2 305 34 is_stmt 1 view -0
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 8
 2021              		@ frame_needed = 0, uses_anonymous_args = 0
 2022              		@ link register save eliminated.
 306:src/console.c ****   struct _ndmap temp;
 2023              		.loc 2 306 3 view .LVU492
 307:src/console.c ****   temp.key_34s = key;
 2024              		.loc 2 307 3 view .LVU493
 305:src/console.c ****   struct _ndmap temp;
 2025              		.loc 2 305 34 is_stmt 0 view .LVU494
 2026 0000 82B0     		sub	sp, sp, #8
 2027              		.cfi_def_cfa_offset 8
 308:src/console.c ****   temp.shift = shift;
 309:src/console.c ****   process_keycode_with_shift (temp);
 2028              		.loc 2 309 3 view .LVU495
 2029 0002 02AB     		add	r3, sp, #8
 307:src/console.c ****   temp.shift = shift;
 2030              		.loc 2 307 16 view .LVU496
 2031 0004 8DF80000 		strb	r0, [sp]
 308:src/console.c ****   temp.shift = shift;
 2032              		.loc 2 308 3 is_stmt 1 view .LVU497
 308:src/console.c ****   temp.shift = shift;
 2033              		.loc 2 308 14 is_stmt 0 view .LVU498
 2034 0008 0191     		str	r1, [sp, #4]
 2035              		.loc 2 309 3 is_stmt 1 view .LVU499
 2036 000a 13E90300 		ldmdb	r3, {r0, r1}
 2037              	.LVL149:
 310:src/console.c **** }
 2038              		.loc 2 310 1 is_stmt 0 view .LVU500
 2039 000e 02B0     		add	sp, sp, #8
 2040              		.cfi_def_cfa_offset 0
 2041              		@ sp needed
 309:src/console.c **** }
 2042              		.loc 2 309 3 view .LVU501
 2043 0010 FFF7FEBF 		b	process_keycode_with_shift
 2044              	.LVL150:
 309:src/console.c **** }
 2045              		.loc 2 309 3 view .LVU502
 2046              		.cfi_endproc
 2047              	.LFE26:
 2049              		.section	.rodata.do_multi.str1.4,"aMS",%progbits,1
 2050              		.align	2
 2051              	.LC12:
 2052 0000 2F48454C 		.ascii	"/HELP/wp34s_help.html\000"
 2052      502F7770 
 2052      3334735F 
 2052      68656C70 
 2052      2E68746D 
 2053              		.section	.text.do_multi,"ax",%progbits
 2054              		.align	1
 2055              		.p2align 2,,3
 2056              		.global	do_multi
 2057              		.syntax unified
 2058              		.thumb
 2059              		.thumb_func
ARM GAS  /tmp/cc7sTUNp.s 			page 56


 2060              		.fpu fpv4-sp-d16
 2062              	do_multi:
 2063              	.LVL151:
 2064              	.LFB27:
 311:src/console.c **** 
 312:src/console.c **** struct _ndmap do_multi (struct _ndmap r) {
 2065              		.loc 2 312 42 is_stmt 1 view -0
 2066              		.cfi_startproc
 2067              		@ args = 0, pretend = 0, frame = 16
 2068              		@ frame_needed = 0, uses_anonymous_args = 0
 2069              		.loc 2 312 42 is_stmt 0 view .LVU504
 2070 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2071              		.cfi_def_cfa_offset 24
 2072              		.cfi_offset 4, -24
 2073              		.cfi_offset 5, -20
 2074              		.cfi_offset 6, -16
 2075              		.cfi_offset 7, -12
 2076              		.cfi_offset 8, -8
 2077              		.cfi_offset 14, -4
 2078 0004 84B0     		sub	sp, sp, #16
 2079              		.cfi_def_cfa_offset 40
 2080              	.LVL152:
 313:src/console.c ****   switch(r.shift) {
 2081              		.loc 2 313 3 is_stmt 1 view .LVU505
 312:src/console.c ****   switch(r.shift) {
 2082              		.loc 2 312 42 is_stmt 0 view .LVU506
 2083 0006 6C46     		mov	r4, sp
 2084 0008 531E     		subs	r3, r2, #1
 2085 000a 84E80600 		stm	r4, {r1, r2}
 2086              	.LVL153:
 312:src/console.c ****   switch(r.shift) {
 2087              		.loc 2 312 42 view .LVU507
 2088 000e 0546     		mov	r5, r0
 2089 0010 0C2B     		cmp	r3, #12
 2090 0012 0FD8     		bhi	.L162
 2091 0014 DFE803F0 		tbb	[pc, r3]
 2092              	.L164:
 2093 0018 15       		.byte	(.L176-.L164)/2
 2094 0019 3D       		.byte	(.L175-.L164)/2
 2095 001a 47       		.byte	(.L174-.L164)/2
 2096 001b 51       		.byte	(.L173-.L164)/2
 2097 001c 5B       		.byte	(.L172-.L164)/2
 2098 001d 65       		.byte	(.L171-.L164)/2
 2099 001e 6F       		.byte	(.L170-.L164)/2
 2100 001f 79       		.byte	(.L169-.L164)/2
 2101 0020 82       		.byte	(.L168-.L164)/2
 2102 0021 8C       		.byte	(.L167-.L164)/2
 2103 0022 95       		.byte	(.L166-.L164)/2
 2104 0023 9E       		.byte	(.L165-.L164)/2
 2105 0024 07       		.byte	(.L163-.L164)/2
 2106 0025 00       		.p2align 1
 2107              	.L163:
 314:src/console.c ****   case LASTX: // Last x via RCL L
 315:src/console.c ****     do_now (K11, 0); // RCL
 316:src/console.c ****     do_now (K_RELEASE,0); // release
 317:src/console.c ****     do_now (K15,0); // TAN key
 318:src/console.c ****     r.key_34s = K_RELEASE;
ARM GAS  /tmp/cc7sTUNp.s 			page 57


 319:src/console.c ****     r.shift = 0; // set up for release;
 320:src/console.c ****     break;
 321:src/console.c ****   case ONSTO: // flash_backup()
 322:src/console.c ****     flash_backup(OP_SAVE);
 323:src/console.c ****     r = no_key;
 324:src/console.c ****     break;
 325:src/console.c ****   case ONRCL: // flash_restore()
 326:src/console.c ****     flash_restore(OP_LOAD);
 327:src/console.c ****     r = no_key;
 328:src/console.c ****     break;
 329:src/console.c ****   case WRLIB: // save library file
 330:src/console.c ****     save_lib_file(1);
 331:src/console.c ****     r = no_key;
 332:src/console.c ****     break;
 333:src/console.c ****   case LLIB: // load library file
 334:src/console.c ****     load_lib_file(1);
 335:src/console.c ****     r = no_key;
 336:src/console.c ****     break;
 337:src/console.c ****   case WRTST: // save state file
 338:src/console.c ****     save_ram_file(1);
 339:src/console.c ****     r = no_key;
 340:src/console.c ****     break;
 341:src/console.c ****   case LDST:
 342:src/console.c ****     load_ram_file(1);
 343:src/console.c ****     r = no_key;
 344:src/console.c ****     break;
 345:src/console.c ****   case LDPRG:
 346:src/console.c ****     load_prog_file();
 347:src/console.c ****     r = no_key;
 348:src/console.c ****     break;
 349:src/console.c ****   case SVPRG:
 350:src/console.c ****     save_prog_file();
 351:src/console.c ****     r = no_key;
 352:src/console.c ****     break;
 353:src/console.c ****   case HELP:
 354:src/console.c ****     run_help_file("/HELP/wp34s_help.html");
 355:src/console.c ****     r = no_key;
 356:src/console.c ****     break;
 357:src/console.c ****   case DOTS:
 358:src/console.c ****     do_all_dots();
 359:src/console.c ****     r = no_key;
 360:src/console.c ****     break;
 361:src/console.c ****   case SSHOT: // comes after f-key already pressed, but not released
 362:src/console.c ****     do_now(K_RELEASE,0); //release f-key; restore display
 363:src/console.c ****     do_now(K_SSHOT,0); //activates screenshot routine in keys
 364:src/console.c ****     r = no_key;
 365:src/console.c ****     break;
 366:src/console.c ****   case DEFMEN:
 367:src/console.c ****     toggle_default_menu();
 2108              		.loc 2 367 5 is_stmt 1 view .LVU508
 2109              	.LBB88:
 2110              	.LBI88:
 100:src/menu.c    ****   if (current_menu == default_menu) {
 2111              		.loc 1 100 6 view .LVU509
 2112              	.LBB89:
 101:src/menu.c    ****     current_menu = default_menu = 15 - default_menu;
 2113              		.loc 1 101 3 view .LVU510
ARM GAS  /tmp/cc7sTUNp.s 			page 58


 101:src/menu.c    ****     current_menu = default_menu = 15 - default_menu;
 2114              		.loc 1 101 20 is_stmt 0 view .LVU511
 2115 0026 5A49     		ldr	r1, .L181
 2116 0028 5A4A     		ldr	r2, .L181+4
 2117 002a 0868     		ldr	r0, [r1]
 2118              	.LVL154:
 101:src/menu.c    ****     current_menu = default_menu = 15 - default_menu;
 2119              		.loc 1 101 6 view .LVU512
 2120 002c 1368     		ldr	r3, [r2]
 2121 002e 8342     		cmp	r3, r0
 2122 0030 00F0A980 		beq	.L180
 2123              	.L162:
 2124              	.LBE89:
 2125              	.LBE88:
 368:src/console.c ****     r = no_key;
 369:src/console.c ****     break;
 370:src/console.c ****   default:
 371:src/console.c ****     r = no_key;
 2126              		.loc 2 371 5 is_stmt 1 view .LVU513
 2127              		.loc 2 371 7 is_stmt 0 view .LVU514
 2128 0034 584B     		ldr	r3, .L181+8
 2129 0036 93E80300 		ldm	r3, {r0, r1}
 2130 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2131              	.LVL155:
 2132              		.loc 2 371 7 view .LVU515
 2133 003c 84E80300 		stm	r4, {r0, r1}
 2134 0040 1CE0     		b	.L177
 2135              	.LVL156:
 2136              	.L176:
 315:src/console.c ****     do_now (K_RELEASE,0); // release
 2137              		.loc 2 315 5 is_stmt 1 view .LVU516
 2138              	.LBB91:
 2139              	.LBI91:
 305:src/console.c ****   struct _ndmap temp;
 2140              		.loc 2 305 6 view .LVU517
 2141              	.LBB92:
 306:src/console.c ****   temp.key_34s = key;
 2142              		.loc 2 306 3 view .LVU518
 307:src/console.c ****   temp.shift = shift;
 2143              		.loc 2 307 3 view .LVU519
 307:src/console.c ****   temp.shift = shift;
 2144              		.loc 2 307 16 is_stmt 0 view .LVU520
 2145 0042 0723     		movs	r3, #7
 308:src/console.c ****   process_keycode_with_shift (temp);
 2146              		.loc 2 308 14 view .LVU521
 2147 0044 0026     		movs	r6, #0
 307:src/console.c ****   temp.shift = shift;
 2148              		.loc 2 307 16 view .LVU522
 2149 0046 8DF80830 		strb	r3, [sp, #8]
 308:src/console.c ****   process_keycode_with_shift (temp);
 2150              		.loc 2 308 3 is_stmt 1 view .LVU523
 309:src/console.c **** }
 2151              		.loc 2 309 3 is_stmt 0 view .LVU524
 2152 004a 0DF10808 		add	r8, sp, #8
 308:src/console.c ****   process_keycode_with_shift (temp);
 2153              		.loc 2 308 14 view .LVU525
 2154 004e 0396     		str	r6, [sp, #12]
ARM GAS  /tmp/cc7sTUNp.s 			page 59


 309:src/console.c **** }
 2155              		.loc 2 309 3 is_stmt 1 view .LVU526
 2156 0050 98E80300 		ldm	r8, {r0, r1}
 2157              	.LVL157:
 309:src/console.c **** }
 2158              		.loc 2 309 3 is_stmt 0 view .LVU527
 2159              	.LBE92:
 2160              	.LBE91:
 2161              	.LBB94:
 2162              	.LBB95:
 307:src/console.c ****   temp.shift = shift;
 2163              		.loc 2 307 16 view .LVU528
 2164 0054 6327     		movs	r7, #99
 2165              	.LBE95:
 2166              	.LBE94:
 2167              	.LBB97:
 2168              	.LBB93:
 309:src/console.c **** }
 2169              		.loc 2 309 3 view .LVU529
 2170 0056 FFF7FEFF 		bl	process_keycode_with_shift
 2171              	.LVL158:
 309:src/console.c **** }
 2172              		.loc 2 309 3 view .LVU530
 2173              	.LBE93:
 2174              	.LBE97:
 316:src/console.c ****     do_now (K15,0); // TAN key
 2175              		.loc 2 316 5 is_stmt 1 view .LVU531
 2176              	.LBB98:
 2177              	.LBI94:
 305:src/console.c ****   struct _ndmap temp;
 2178              		.loc 2 305 6 view .LVU532
 2179              	.LBB96:
 306:src/console.c ****   temp.key_34s = key;
 2180              		.loc 2 306 3 view .LVU533
 307:src/console.c ****   temp.shift = shift;
 2181              		.loc 2 307 3 view .LVU534
 308:src/console.c ****   process_keycode_with_shift (temp);
 2182              		.loc 2 308 14 is_stmt 0 view .LVU535
 2183 005a 0396     		str	r6, [sp, #12]
 307:src/console.c ****   temp.shift = shift;
 2184              		.loc 2 307 16 view .LVU536
 2185 005c 8DF80870 		strb	r7, [sp, #8]
 308:src/console.c ****   process_keycode_with_shift (temp);
 2186              		.loc 2 308 3 is_stmt 1 view .LVU537
 309:src/console.c **** }
 2187              		.loc 2 309 3 view .LVU538
 2188 0060 98E80300 		ldm	r8, {r0, r1}
 2189 0064 FFF7FEFF 		bl	process_keycode_with_shift
 2190              	.LVL159:
 309:src/console.c **** }
 2191              		.loc 2 309 3 is_stmt 0 view .LVU539
 2192              	.LBE96:
 2193              	.LBE98:
 317:src/console.c ****     r.key_34s = K_RELEASE;
 2194              		.loc 2 317 5 is_stmt 1 view .LVU540
 2195              	.LBB99:
 2196              	.LBI99:
ARM GAS  /tmp/cc7sTUNp.s 			page 60


 305:src/console.c ****   struct _ndmap temp;
 2197              		.loc 2 305 6 view .LVU541
 2198              	.LBB100:
 306:src/console.c ****   temp.key_34s = key;
 2199              		.loc 2 306 3 view .LVU542
 307:src/console.c ****   temp.shift = shift;
 2200              		.loc 2 307 3 view .LVU543
 307:src/console.c ****   temp.shift = shift;
 2201              		.loc 2 307 16 is_stmt 0 view .LVU544
 2202 0068 0B23     		movs	r3, #11
 2203 006a 8DF80830 		strb	r3, [sp, #8]
 308:src/console.c ****   process_keycode_with_shift (temp);
 2204              		.loc 2 308 3 is_stmt 1 view .LVU545
 309:src/console.c **** }
 2205              		.loc 2 309 3 view .LVU546
 308:src/console.c ****   process_keycode_with_shift (temp);
 2206              		.loc 2 308 14 is_stmt 0 view .LVU547
 2207 006e 0396     		str	r6, [sp, #12]
 309:src/console.c **** }
 2208              		.loc 2 309 3 view .LVU548
 2209 0070 98E80300 		ldm	r8, {r0, r1}
 2210 0074 FFF7FEFF 		bl	process_keycode_with_shift
 2211              	.LVL160:
 309:src/console.c **** }
 2212              		.loc 2 309 3 view .LVU549
 2213              	.LBE100:
 2214              	.LBE99:
 318:src/console.c ****     r.shift = 0; // set up for release;
 2215              		.loc 2 318 5 is_stmt 1 view .LVU550
 319:src/console.c ****     break;
 2216              		.loc 2 319 5 view .LVU551
 320:src/console.c ****   case ONSTO: // flash_backup()
 2217              		.loc 2 320 5 view .LVU552
 319:src/console.c ****     break;
 2218              		.loc 2 319 13 is_stmt 0 view .LVU553
 2219 0078 3146     		mov	r1, r6
 318:src/console.c ****     r.shift = 0; // set up for release;
 2220              		.loc 2 318 15 view .LVU554
 2221 007a 3B46     		mov	r3, r7
 2222              	.LVL161:
 2223              	.L177:
 372:src/console.c ****   }
 373:src/console.c ****   return r;
 2224              		.loc 2 373 3 is_stmt 1 view .LVU555
 2225              		.loc 2 373 10 is_stmt 0 view .LVU556
 2226 007c 8DF80030 		strb	r3, [sp]
 2227 0080 0191     		str	r1, [sp, #4]
 2228 0082 94E80300 		ldm	r4, {r0, r1}
 2229              	.LVL162:
 2230              		.loc 2 373 10 view .LVU557
 2231 0086 85E80300 		stm	r5, {r0, r1}
 374:src/console.c **** }
 2232              		.loc 2 374 1 view .LVU558
 2233 008a 2846     		mov	r0, r5
 2234 008c 04B0     		add	sp, sp, #16
 2235              		.cfi_remember_state
 2236              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc7sTUNp.s 			page 61


 2237              		@ sp needed
 2238 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2239              	.LVL163:
 2240              	.L175:
 2241              		.cfi_restore_state
 322:src/console.c ****     r = no_key;
 2242              		.loc 2 322 5 is_stmt 1 view .LVU559
 2243 0092 AD20     		movs	r0, #173
 2244              	.LVL164:
 322:src/console.c ****     r = no_key;
 2245              		.loc 2 322 5 is_stmt 0 view .LVU560
 2246 0094 FFF7FEFF 		bl	flash_backup
 2247              	.LVL165:
 323:src/console.c ****     break;
 2248              		.loc 2 323 5 is_stmt 1 view .LVU561
 323:src/console.c ****     break;
 2249              		.loc 2 323 7 is_stmt 0 view .LVU562
 2250 0098 3F4B     		ldr	r3, .L181+8
 2251 009a 93E80300 		ldm	r3, {r0, r1}
 2252 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2253              	.LVL166:
 324:src/console.c ****   case ONRCL: // flash_restore()
 2254              		.loc 2 324 5 is_stmt 1 view .LVU563
 323:src/console.c ****     break;
 2255              		.loc 2 323 7 is_stmt 0 view .LVU564
 2256 00a0 84E80300 		stm	r4, {r0, r1}
 324:src/console.c ****   case ONRCL: // flash_restore()
 2257              		.loc 2 324 5 view .LVU565
 2258 00a4 EAE7     		b	.L177
 2259              	.LVL167:
 2260              	.L174:
 326:src/console.c ****     r = no_key;
 2261              		.loc 2 326 5 is_stmt 1 view .LVU566
 2262 00a6 AE20     		movs	r0, #174
 2263              	.LVL168:
 326:src/console.c ****     r = no_key;
 2264              		.loc 2 326 5 is_stmt 0 view .LVU567
 2265 00a8 FFF7FEFF 		bl	flash_restore
 2266              	.LVL169:
 327:src/console.c ****     break;
 2267              		.loc 2 327 5 is_stmt 1 view .LVU568
 327:src/console.c ****     break;
 2268              		.loc 2 327 7 is_stmt 0 view .LVU569
 2269 00ac 3A4B     		ldr	r3, .L181+8
 2270 00ae 93E80300 		ldm	r3, {r0, r1}
 2271 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2272              	.LVL170:
 328:src/console.c ****   case WRLIB: // save library file
 2273              		.loc 2 328 5 is_stmt 1 view .LVU570
 327:src/console.c ****     break;
 2274              		.loc 2 327 7 is_stmt 0 view .LVU571
 2275 00b4 84E80300 		stm	r4, {r0, r1}
 328:src/console.c ****   case WRLIB: // save library file
 2276              		.loc 2 328 5 view .LVU572
 2277 00b8 E0E7     		b	.L177
 2278              	.LVL171:
 2279              	.L173:
ARM GAS  /tmp/cc7sTUNp.s 			page 62


 330:src/console.c ****     r = no_key;
 2280              		.loc 2 330 5 is_stmt 1 view .LVU573
 2281 00ba 0120     		movs	r0, #1
 2282              	.LVL172:
 330:src/console.c ****     r = no_key;
 2283              		.loc 2 330 5 is_stmt 0 view .LVU574
 2284 00bc FFF7FEFF 		bl	save_lib_file
 2285              	.LVL173:
 331:src/console.c ****     break;
 2286              		.loc 2 331 5 is_stmt 1 view .LVU575
 331:src/console.c ****     break;
 2287              		.loc 2 331 7 is_stmt 0 view .LVU576
 2288 00c0 354B     		ldr	r3, .L181+8
 2289 00c2 93E80300 		ldm	r3, {r0, r1}
 2290 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2291              	.LVL174:
 332:src/console.c ****   case LLIB: // load library file
 2292              		.loc 2 332 5 is_stmt 1 view .LVU577
 331:src/console.c ****     break;
 2293              		.loc 2 331 7 is_stmt 0 view .LVU578
 2294 00c8 84E80300 		stm	r4, {r0, r1}
 332:src/console.c ****   case LLIB: // load library file
 2295              		.loc 2 332 5 view .LVU579
 2296 00cc D6E7     		b	.L177
 2297              	.LVL175:
 2298              	.L172:
 334:src/console.c ****     r = no_key;
 2299              		.loc 2 334 5 is_stmt 1 view .LVU580
 2300 00ce 0120     		movs	r0, #1
 2301              	.LVL176:
 334:src/console.c ****     r = no_key;
 2302              		.loc 2 334 5 is_stmt 0 view .LVU581
 2303 00d0 FFF7FEFF 		bl	load_lib_file
 2304              	.LVL177:
 335:src/console.c ****     break;
 2305              		.loc 2 335 5 is_stmt 1 view .LVU582
 335:src/console.c ****     break;
 2306              		.loc 2 335 7 is_stmt 0 view .LVU583
 2307 00d4 304B     		ldr	r3, .L181+8
 2308 00d6 93E80300 		ldm	r3, {r0, r1}
 2309 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310              	.LVL178:
 336:src/console.c ****   case WRTST: // save state file
 2311              		.loc 2 336 5 is_stmt 1 view .LVU584
 335:src/console.c ****     break;
 2312              		.loc 2 335 7 is_stmt 0 view .LVU585
 2313 00dc 84E80300 		stm	r4, {r0, r1}
 336:src/console.c ****   case WRTST: // save state file
 2314              		.loc 2 336 5 view .LVU586
 2315 00e0 CCE7     		b	.L177
 2316              	.LVL179:
 2317              	.L171:
 338:src/console.c ****     r = no_key;
 2318              		.loc 2 338 5 is_stmt 1 view .LVU587
 2319 00e2 0120     		movs	r0, #1
 2320              	.LVL180:
 338:src/console.c ****     r = no_key;
ARM GAS  /tmp/cc7sTUNp.s 			page 63


 2321              		.loc 2 338 5 is_stmt 0 view .LVU588
 2322 00e4 FFF7FEFF 		bl	save_ram_file
 2323              	.LVL181:
 339:src/console.c ****     break;
 2324              		.loc 2 339 5 is_stmt 1 view .LVU589
 339:src/console.c ****     break;
 2325              		.loc 2 339 7 is_stmt 0 view .LVU590
 2326 00e8 2B4B     		ldr	r3, .L181+8
 2327 00ea 93E80300 		ldm	r3, {r0, r1}
 2328 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2329              	.LVL182:
 340:src/console.c ****   case LDST:
 2330              		.loc 2 340 5 is_stmt 1 view .LVU591
 339:src/console.c ****     break;
 2331              		.loc 2 339 7 is_stmt 0 view .LVU592
 2332 00f0 84E80300 		stm	r4, {r0, r1}
 340:src/console.c ****   case LDST:
 2333              		.loc 2 340 5 view .LVU593
 2334 00f4 C2E7     		b	.L177
 2335              	.LVL183:
 2336              	.L170:
 342:src/console.c ****     r = no_key;
 2337              		.loc 2 342 5 is_stmt 1 view .LVU594
 2338 00f6 0120     		movs	r0, #1
 2339              	.LVL184:
 342:src/console.c ****     r = no_key;
 2340              		.loc 2 342 5 is_stmt 0 view .LVU595
 2341 00f8 FFF7FEFF 		bl	load_ram_file
 2342              	.LVL185:
 343:src/console.c ****     break;
 2343              		.loc 2 343 5 is_stmt 1 view .LVU596
 343:src/console.c ****     break;
 2344              		.loc 2 343 7 is_stmt 0 view .LVU597
 2345 00fc 264B     		ldr	r3, .L181+8
 2346 00fe 93E80300 		ldm	r3, {r0, r1}
 2347 0102 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2348              	.LVL186:
 344:src/console.c ****   case LDPRG:
 2349              		.loc 2 344 5 is_stmt 1 view .LVU598
 343:src/console.c ****     break;
 2350              		.loc 2 343 7 is_stmt 0 view .LVU599
 2351 0104 84E80300 		stm	r4, {r0, r1}
 344:src/console.c ****   case LDPRG:
 2352              		.loc 2 344 5 view .LVU600
 2353 0108 B8E7     		b	.L177
 2354              	.LVL187:
 2355              	.L169:
 346:src/console.c ****     r = no_key;
 2356              		.loc 2 346 5 is_stmt 1 view .LVU601
 2357 010a FFF7FEFF 		bl	load_prog_file
 2358              	.LVL188:
 347:src/console.c ****     break;
 2359              		.loc 2 347 5 view .LVU602
 347:src/console.c ****     break;
 2360              		.loc 2 347 7 is_stmt 0 view .LVU603
 2361 010e 224B     		ldr	r3, .L181+8
 2362 0110 93E80300 		ldm	r3, {r0, r1}
ARM GAS  /tmp/cc7sTUNp.s 			page 64


 2363 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2364              	.LVL189:
 348:src/console.c ****   case SVPRG:
 2365              		.loc 2 348 5 is_stmt 1 view .LVU604
 347:src/console.c ****     break;
 2366              		.loc 2 347 7 is_stmt 0 view .LVU605
 2367 0116 84E80300 		stm	r4, {r0, r1}
 348:src/console.c ****   case SVPRG:
 2368              		.loc 2 348 5 view .LVU606
 2369 011a AFE7     		b	.L177
 2370              	.LVL190:
 2371              	.L168:
 354:src/console.c ****     r = no_key;
 2372              		.loc 2 354 5 is_stmt 1 view .LVU607
 2373 011c 1F4B     		ldr	r3, .L181+12
 2374 011e 2048     		ldr	r0, .L181+16
 2375              	.LVL191:
 354:src/console.c ****     r = no_key;
 2376              		.loc 2 354 5 is_stmt 0 view .LVU608
 2377 0120 9847     		blx	r3
 2378              	.LVL192:
 355:src/console.c ****     break;
 2379              		.loc 2 355 5 is_stmt 1 view .LVU609
 355:src/console.c ****     break;
 2380              		.loc 2 355 7 is_stmt 0 view .LVU610
 2381 0122 1D4B     		ldr	r3, .L181+8
 2382 0124 93E80300 		ldm	r3, {r0, r1}
 2383 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2384              	.LVL193:
 356:src/console.c ****   case DOTS:
 2385              		.loc 2 356 5 is_stmt 1 view .LVU611
 355:src/console.c ****     break;
 2386              		.loc 2 355 7 is_stmt 0 view .LVU612
 2387 012a 84E80300 		stm	r4, {r0, r1}
 356:src/console.c ****   case DOTS:
 2388              		.loc 2 356 5 view .LVU613
 2389 012e A5E7     		b	.L177
 2390              	.LVL194:
 2391              	.L167:
 350:src/console.c ****     r = no_key;
 2392              		.loc 2 350 5 is_stmt 1 view .LVU614
 2393 0130 FFF7FEFF 		bl	save_prog_file
 2394              	.LVL195:
 351:src/console.c ****     break;
 2395              		.loc 2 351 5 view .LVU615
 351:src/console.c ****     break;
 2396              		.loc 2 351 7 is_stmt 0 view .LVU616
 2397 0134 184B     		ldr	r3, .L181+8
 2398 0136 93E80300 		ldm	r3, {r0, r1}
 2399 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2400              	.LVL196:
 352:src/console.c ****   case HELP:
 2401              		.loc 2 352 5 is_stmt 1 view .LVU617
 351:src/console.c ****     break;
 2402              		.loc 2 351 7 is_stmt 0 view .LVU618
 2403 013c 84E80300 		stm	r4, {r0, r1}
 352:src/console.c ****   case HELP:
ARM GAS  /tmp/cc7sTUNp.s 			page 65


 2404              		.loc 2 352 5 view .LVU619
 2405 0140 9CE7     		b	.L177
 2406              	.LVL197:
 2407              	.L166:
 358:src/console.c ****     r = no_key;
 2408              		.loc 2 358 5 is_stmt 1 view .LVU620
 2409 0142 FFF7FEFF 		bl	do_all_dots
 2410              	.LVL198:
 359:src/console.c ****     break;
 2411              		.loc 2 359 5 view .LVU621
 359:src/console.c ****     break;
 2412              		.loc 2 359 7 is_stmt 0 view .LVU622
 2413 0146 144B     		ldr	r3, .L181+8
 2414 0148 93E80300 		ldm	r3, {r0, r1}
 2415 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2416              	.LVL199:
 360:src/console.c ****   case SSHOT: // comes after f-key already pressed, but not released
 2417              		.loc 2 360 5 is_stmt 1 view .LVU623
 359:src/console.c ****     break;
 2418              		.loc 2 359 7 is_stmt 0 view .LVU624
 2419 014e 84E80300 		stm	r4, {r0, r1}
 360:src/console.c ****   case SSHOT: // comes after f-key already pressed, but not released
 2420              		.loc 2 360 5 view .LVU625
 2421 0152 93E7     		b	.L177
 2422              	.LVL200:
 2423              	.L165:
 362:src/console.c ****     do_now(K_SSHOT,0); //activates screenshot routine in keys
 2424              		.loc 2 362 5 is_stmt 1 view .LVU626
 2425              	.LBB101:
 2426              	.LBI101:
 305:src/console.c ****   struct _ndmap temp;
 2427              		.loc 2 305 6 view .LVU627
 2428              	.LBB102:
 306:src/console.c ****   temp.key_34s = key;
 2429              		.loc 2 306 3 view .LVU628
 307:src/console.c ****   temp.shift = shift;
 2430              		.loc 2 307 3 view .LVU629
 307:src/console.c ****   temp.shift = shift;
 2431              		.loc 2 307 16 is_stmt 0 view .LVU630
 2432 0154 6323     		movs	r3, #99
 308:src/console.c ****   process_keycode_with_shift (temp);
 2433              		.loc 2 308 14 view .LVU631
 2434 0156 0027     		movs	r7, #0
 307:src/console.c ****   temp.shift = shift;
 2435              		.loc 2 307 16 view .LVU632
 2436 0158 8DF80830 		strb	r3, [sp, #8]
 308:src/console.c ****   process_keycode_with_shift (temp);
 2437              		.loc 2 308 3 is_stmt 1 view .LVU633
 308:src/console.c ****   process_keycode_with_shift (temp);
 2438              		.loc 2 308 14 is_stmt 0 view .LVU634
 2439 015c 0397     		str	r7, [sp, #12]
 309:src/console.c **** }
 2440              		.loc 2 309 3 is_stmt 1 view .LVU635
 2441 015e 02AE     		add	r6, sp, #8
 2442 0160 96E80300 		ldm	r6, {r0, r1}
 2443              	.LVL201:
 309:src/console.c **** }
ARM GAS  /tmp/cc7sTUNp.s 			page 66


 2444              		.loc 2 309 3 is_stmt 0 view .LVU636
 2445 0164 FFF7FEFF 		bl	process_keycode_with_shift
 2446              	.LVL202:
 309:src/console.c **** }
 2447              		.loc 2 309 3 view .LVU637
 2448              	.LBE102:
 2449              	.LBE101:
 363:src/console.c ****     r = no_key;
 2450              		.loc 2 363 5 is_stmt 1 view .LVU638
 2451              	.LBB103:
 2452              	.LBI103:
 305:src/console.c ****   struct _ndmap temp;
 2453              		.loc 2 305 6 view .LVU639
 2454              	.LBB104:
 306:src/console.c ****   temp.key_34s = key;
 2455              		.loc 2 306 3 view .LVU640
 307:src/console.c ****   temp.shift = shift;
 2456              		.loc 2 307 3 view .LVU641
 307:src/console.c ****   temp.shift = shift;
 2457              		.loc 2 307 16 is_stmt 0 view .LVU642
 2458 0168 3323     		movs	r3, #51
 2459 016a 8DF80830 		strb	r3, [sp, #8]
 308:src/console.c ****   process_keycode_with_shift (temp);
 2460              		.loc 2 308 3 is_stmt 1 view .LVU643
 309:src/console.c **** }
 2461              		.loc 2 309 3 view .LVU644
 308:src/console.c ****   process_keycode_with_shift (temp);
 2462              		.loc 2 308 14 is_stmt 0 view .LVU645
 2463 016e 0397     		str	r7, [sp, #12]
 309:src/console.c **** }
 2464              		.loc 2 309 3 view .LVU646
 2465 0170 96E80300 		ldm	r6, {r0, r1}
 2466 0174 FFF7FEFF 		bl	process_keycode_with_shift
 2467              	.LVL203:
 309:src/console.c **** }
 2468              		.loc 2 309 3 view .LVU647
 2469              	.LBE104:
 2470              	.LBE103:
 364:src/console.c ****     break;
 2471              		.loc 2 364 5 is_stmt 1 view .LVU648
 364:src/console.c ****     break;
 2472              		.loc 2 364 7 is_stmt 0 view .LVU649
 2473 0178 074B     		ldr	r3, .L181+8
 2474 017a 93E80300 		ldm	r3, {r0, r1}
 2475 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2476              	.LVL204:
 365:src/console.c ****   case DEFMEN:
 2477              		.loc 2 365 5 is_stmt 1 view .LVU650
 364:src/console.c ****     break;
 2478              		.loc 2 364 7 is_stmt 0 view .LVU651
 2479 0180 84E80300 		stm	r4, {r0, r1}
 365:src/console.c ****   case DEFMEN:
 2480              		.loc 2 365 5 view .LVU652
 2481 0184 7AE7     		b	.L177
 2482              	.LVL205:
 2483              	.L180:
 2484              	.LBB105:
ARM GAS  /tmp/cc7sTUNp.s 			page 67


 2485              	.LBB90:
 102:src/menu.c    ****   }
 2486              		.loc 1 102 5 is_stmt 1 view .LVU653
 102:src/menu.c    ****   }
 2487              		.loc 1 102 38 is_stmt 0 view .LVU654
 2488 0186 C3F10F03 		rsb	r3, r3, #15
 102:src/menu.c    ****   }
 2489              		.loc 1 102 33 view .LVU655
 2490 018a 0B60     		str	r3, [r1]
 102:src/menu.c    ****   }
 2491              		.loc 1 102 18 view .LVU656
 2492 018c 1360     		str	r3, [r2]
 2493              	.LBE90:
 2494              	.LBE105:
 368:src/console.c ****     break;
 2495              		.loc 2 368 5 is_stmt 1 view .LVU657
 2496 018e 51E7     		b	.L162
 2497              	.L182:
 2498              		.align	2
 2499              	.L181:
 2500 0190 00000000 		.word	.LANCHOR2
 2501 0194 00000000 		.word	.LANCHOR1
 2502 0198 00000000 		.word	.LANCHOR8
 2503 019c 49040008 		.word	134218825
 2504 01a0 00000000 		.word	.LC12
 2505              		.cfi_endproc
 2506              	.LFE27:
 2508              		.section	.text.program_main,"ax",%progbits
 2509              		.align	1
 2510              		.p2align 2,,3
 2511              		.global	program_main
 2512              		.syntax unified
 2513              		.thumb
 2514              		.thumb_func
 2515              		.fpu fpv4-sp-d16
 2517              	program_main:
 2518              	.LFB28:
 375:src/console.c **** 
 376:src/console.c **** void program_main(){
 2519              		.loc 2 376 20 view -0
 2520              		.cfi_startproc
 2521              		@ args = 0, pretend = 0, frame = 16
 2522              		@ frame_needed = 0, uses_anonymous_args = 0
 377:src/console.c ****   int c;
 2523              		.loc 2 377 3 view .LVU659
 378:src/console.c ****   struct _ndmap remapped;
 2524              		.loc 2 378 3 view .LVU660
 379:src/console.c **** 
 380:src/console.c ****   init_mem();
 2525              		.loc 2 380 3 view .LVU661
 376:src/console.c ****   int c;
 2526              		.loc 2 376 20 is_stmt 0 view .LVU662
 2527 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2528              		.cfi_def_cfa_offset 32
 2529              		.cfi_offset 4, -32
 2530              		.cfi_offset 5, -28
 2531              		.cfi_offset 6, -24
ARM GAS  /tmp/cc7sTUNp.s 			page 68


 2532              		.cfi_offset 7, -20
 2533              		.cfi_offset 8, -16
 2534              		.cfi_offset 9, -12
 2535              		.cfi_offset 10, -8
 2536              		.cfi_offset 14, -4
 2537 0004 84B0     		sub	sp, sp, #16
 2538              		.cfi_def_cfa_offset 48
 2539              		.loc 2 380 3 view .LVU663
 2540 0006 FFF7FEFF 		bl	init_mem
 2541              	.LVL206:
 381:src/console.c ****   init_RegionTab();
 2542              		.loc 2 381 3 is_stmt 1 view .LVU664
 2543 000a FFF7FEFF 		bl	init_RegionTab
 2544              	.LVL207:
 382:src/console.c ****   init_34s();
 2545              		.loc 2 382 3 view .LVU665
 2546 000e FFF7FEFF 		bl	init_34s
 2547              	.LVL208:
 383:src/console.c ****   State2.flags = 1;  
 2548              		.loc 2 383 3 view .LVU666
 2549              		.loc 2 383 16 is_stmt 0 view .LVU667
 2550 0012 AC4A     		ldr	r2, .L282
 2551 0014 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 2552 0016 43F00103 		orr	r3, r3, #1
 2553 001a 1376     		strb	r3, [r2, #24]
 384:src/console.c ****   check_create_wp34sdir();
 2554              		.loc 2 384 3 is_stmt 1 view .LVU668
 2555 001c FFF7FEFF 		bl	check_create_wp34sdir
 2556              	.LVL209:
 385:src/console.c ****   if (!load_ram_file(0)) DispMsg = CNULL; // no message if it loads ok
 2557              		.loc 2 385 3 view .LVU669
 2558              		.loc 2 385 8 is_stmt 0 view .LVU670
 2559 0020 0020     		movs	r0, #0
 2560 0022 FFF7FEFF 		bl	load_ram_file
 2561              	.LVL210:
 2562              		.loc 2 385 6 view .LVU671
 2563 0026 08B9     		cbnz	r0, .L184
 2564              		.loc 2 385 26 is_stmt 1 discriminator 1 view .LVU672
 2565              		.loc 2 385 34 is_stmt 0 discriminator 1 view .LVU673
 2566 0028 A74B     		ldr	r3, .L282+4
 2567 002a 1860     		str	r0, [r3]
 2568              	.L184:
 386:src/console.c ****   load_backup_file(0);
 2569              		.loc 2 386 3 is_stmt 1 view .LVU674
 387:src/console.c ****   load_lib_file(0);
 388:src/console.c ****   t20->newln = 0;
 2570              		.loc 2 388 3 is_stmt 0 view .LVU675
 2571 002c A74C     		ldr	r4, .L282+8
 2572              	.LBB121:
 2573              	.LBB122:
 111:src/menu.c    **** }
 2574              		.loc 1 111 3 view .LVU676
 2575 002e A84E     		ldr	r6, .L282+12
 2576              	.LBE122:
 2577              	.LBE121:
 389:src/console.c ****   t20->lnfill = 0;
 390:src/console.c ****   t20->fixed = 1;
ARM GAS  /tmp/cc7sTUNp.s 			page 69


 391:src/console.c ****   t20->xspc = -2;
 392:src/console.c ****   t20->bgfill = 0;
 393:src/console.c ****   run_menu_item_app = run_menu_item;
 394:src/console.c ****   menu_line_str_app = menu_line_str;
 395:src/console.c **** 
 396:src/console.c ****   display();
 397:src/console.c ****   display_current_menu();
 398:src/console.c ****   lcd_refresh();
 399:src/console.c ****   JustDisplayed = 0;
 400:src/console.c ****   /*
 401:src/console.c ****     Returns a positive integer when a key is pressed. Doesn't return until a key is pressed.
 402:src/console.c ****     Sleeps peacefully while waiting for a key.
 403:src/console.c ****     Handles (in principle!) turning off and on.
 404:src/console.c ****     =================
 405:src/console.c ****     Main event loop
 406:src/console.c ****     =================
 407:src/console.c **** 
 408:src/console.c ****     Status flags:
 409:src/console.c ****     ST(STAT_PGM_END)   - program should turn off state (set by auto off timer)
 410:src/console.c ****     ST(STAT_SUSPENDED) - Program ready for off and doesn't need to be woken-up again
 411:src/console.c ****     ST(STAT_OFF)       - Program in off state (only [EXIT] key can wake)
 412:src/console.c ****     ST(STAT_RUNNING)   - OS doesn't sleep in this mode
 413:src/console.c ****   */
 414:src/console.c ****   for(;;) {
 415:src/console.c **** 
 416:src/console.c ****     if ( ST(STAT_PGM_END) && ST(STAT_SUSPENDED) ) // In off mode and suspended
 417:src/console.c ****       {
 418:src/console.c **** 	CLR_ST(STAT_RUNNING);
 419:src/console.c **** 	sys_sleep();
 420:src/console.c ****       }
 421:src/console.c ****     else if (!ST(STAT_PGM_END) && key_empty()) // Go to sleep if no keys available
 2578              		.loc 2 421 35 view .LVU677
 2579 0030 A84F     		ldr	r7, .L282+16
 422:src/console.c ****     {
 423:src/console.c ****       CLR_ST(STAT_RUNNING);
 424:src/console.c ****       sys_timer_start(0, 100);  // Timer 0: wake up for heartbeat 
 2580              		.loc 2 424 7 view .LVU678
 2581 0032 DFF82083 		ldr	r8, .L282+144
 386:src/console.c ****   load_lib_file(0);
 2582              		.loc 2 386 3 view .LVU679
 2583 0036 0020     		movs	r0, #0
 2584 0038 FFF7FEFF 		bl	load_backup_file
 2585              	.LVL211:
 387:src/console.c ****   t20->newln = 0;
 2586              		.loc 2 387 3 is_stmt 1 view .LVU680
 2587 003c 0020     		movs	r0, #0
 2588 003e FFF7FEFF 		bl	load_lib_file
 2589              	.LVL212:
 388:src/console.c ****   t20->lnfill = 0;
 2590              		.loc 2 388 3 view .LVU681
 2591 0042 236B     		ldr	r3, [r4, #48]
 389:src/console.c ****   t20->fixed = 1;
 2592              		.loc 2 389 3 view .LVU682
 390:src/console.c ****   t20->xspc = -2;
 2593              		.loc 2 390 3 view .LVU683
 393:src/console.c ****   menu_line_str_app = menu_line_str;
 2594              		.loc 2 393 21 is_stmt 0 view .LVU684
ARM GAS  /tmp/cc7sTUNp.s 			page 70


 2595 0044 A44A     		ldr	r2, .L282+20
 390:src/console.c ****   t20->xspc = -2;
 2596              		.loc 2 390 14 view .LVU685
 2597 0046 0121     		movs	r1, #1
 2598 0048 1974     		strb	r1, [r3, #16]
 391:src/console.c ****   t20->bgfill = 0;
 2599              		.loc 2 391 3 is_stmt 1 view .LVU686
 392:src/console.c ****   run_menu_item_app = run_menu_item;
 2600              		.loc 2 392 15 is_stmt 0 view .LVU687
 2601 004a 0025     		movs	r5, #0
 391:src/console.c ****   t20->bgfill = 0;
 2602              		.loc 2 391 13 view .LVU688
 2603 004c FE21     		movs	r1, #254
 2604 004e 9973     		strb	r1, [r3, #14]
 392:src/console.c ****   run_menu_item_app = run_menu_item;
 2605              		.loc 2 392 3 is_stmt 1 view .LVU689
 392:src/console.c ****   run_menu_item_app = run_menu_item;
 2606              		.loc 2 392 15 is_stmt 0 view .LVU690
 2607 0050 5D82     		strh	r5, [r3, #18]	@ movhi
 388:src/console.c ****   t20->lnfill = 0;
 2608              		.loc 2 388 14 view .LVU691
 2609 0052 1D75     		strb	r5, [r3, #20]
 393:src/console.c ****   menu_line_str_app = menu_line_str;
 2610              		.loc 2 393 3 is_stmt 1 view .LVU692
 394:src/console.c **** 
 2611              		.loc 2 394 21 is_stmt 0 view .LVU693
 2612 0054 A14B     		ldr	r3, .L282+24
 393:src/console.c ****   menu_line_str_app = menu_line_str;
 2613              		.loc 2 393 21 view .LVU694
 2614 0056 E260     		str	r2, [r4, #12]
 394:src/console.c **** 
 2615              		.loc 2 394 3 is_stmt 1 view .LVU695
 394:src/console.c **** 
 2616              		.loc 2 394 21 is_stmt 0 view .LVU696
 2617 0058 2361     		str	r3, [r4, #16]
 396:src/console.c ****   display_current_menu();
 2618              		.loc 2 396 3 is_stmt 1 view .LVU697
 2619 005a FFF7FEFF 		bl	display
 2620              	.LVL213:
 397:src/console.c ****   lcd_refresh();
 2621              		.loc 2 397 3 view .LVU698
 2622              	.LBB124:
 2623              	.LBI121:
 110:src/menu.c    ****   display_menu (current_menu);
 2624              		.loc 1 110 6 view .LVU699
 2625              	.LBB123:
 111:src/menu.c    **** }
 2626              		.loc 1 111 3 view .LVU700
 2627 005e 3068     		ldr	r0, [r6]
 2628 0060 FFF7FEFF 		bl	display_menu
 2629              	.LVL214:
 2630              	.LBE123:
 2631              	.LBE124:
 398:src/console.c ****   JustDisplayed = 0;
 2632              		.loc 2 398 3 view .LVU701
 2633 0064 9E4B     		ldr	r3, .L282+28
 2634 0066 9847     		blx	r3
ARM GAS  /tmp/cc7sTUNp.s 			page 71


 2635              	.LVL215:
 399:src/console.c ****   /*
 2636              		.loc 2 399 3 view .LVU702
 399:src/console.c ****   /*
 2637              		.loc 2 399 17 is_stmt 0 view .LVU703
 2638 0068 9E4B     		ldr	r3, .L282+32
 2639 006a 1D60     		str	r5, [r3]
 2640              	.L185:
 414:src/console.c **** 
 2641              		.loc 2 414 3 is_stmt 1 view .LVU704
 416:src/console.c ****       {
 2642              		.loc 2 416 5 view .LVU705
 416:src/console.c ****       {
 2643              		.loc 2 416 10 is_stmt 0 view .LVU706
 2644 006c 2368     		ldr	r3, [r4]
 416:src/console.c ****       {
 2645              		.loc 2 416 8 view .LVU707
 2646 006e 9D05     		lsls	r5, r3, #22
 2647 0070 40F18380 		bpl	.L186
 2648              	.L266:
 416:src/console.c ****       {
 2649              		.loc 2 416 30 discriminator 1 view .LVU708
 2650 0074 2368     		ldr	r3, [r4]
 416:src/console.c ****       {
 2651              		.loc 2 416 27 discriminator 1 view .LVU709
 2652 0076 5807     		lsls	r0, r3, #29
 2653 0078 7FD5     		bpl	.L186
 418:src/console.c **** 	sys_sleep();
 2654              		.loc 2 418 2 is_stmt 1 view .LVU710
 2655 007a 2368     		ldr	r3, [r4]
 419:src/console.c ****       }
 2656              		.loc 2 419 2 is_stmt 0 view .LVU711
 2657 007c 9A4A     		ldr	r2, .L282+36
 418:src/console.c **** 	sys_sleep();
 2658              		.loc 2 418 2 view .LVU712
 2659 007e 23F00203 		bic	r3, r3, #2
 2660 0082 2360     		str	r3, [r4]
 419:src/console.c ****       }
 2661              		.loc 2 419 2 is_stmt 1 view .LVU713
 2662 0084 9047     		blx	r2
 2663              	.LVL216:
 2664              	.L187:
 425:src/console.c ****       sys_sleep();
 426:src/console.c ****       if (sys_timer_timeout(0)) { // If timer has completed...
 427:src/console.c **** 	key_push (K_HEARTBEAT);
 428:src/console.c **** 	if (Pause > 0) Pause--;
 429:src/console.c ****       }
 430:src/console.c ****       sys_timer_disable(0); // stop timer
 431:src/console.c ****     }
 432:src/console.c ****     
 433:src/console.c ****     // Wakeup in off state or going to sleep
 434:src/console.c ****     if (ST(STAT_PGM_END) || ST(STAT_SUSPENDED) ) {
 2665              		.loc 2 434 5 view .LVU714
 2666              		.loc 2 434 9 is_stmt 0 view .LVU715
 2667 0086 2368     		ldr	r3, [r4]
 2668              		.loc 2 434 8 view .LVU716
 2669 0088 9905     		lsls	r1, r3, #22
ARM GAS  /tmp/cc7sTUNp.s 			page 72


 2670 008a 00F19C80 		bmi	.L193
 2671              	.L267:
 2672              		.loc 2 434 29 discriminator 1 view .LVU717
 2673 008e 2368     		ldr	r3, [r4]
 2674              		.loc 2 434 26 discriminator 1 view .LVU718
 2675 0090 5A07     		lsls	r2, r3, #29
 2676 0092 00F19880 		bmi	.L193
 435:src/console.c ****       if (!ST(STAT_SUSPENDED)) {
 436:src/console.c ****         // Going to off mode
 437:src/console.c ****         lcd_set_buf_cleared(0); // Mark no buffer change region
 438:src/console.c ****         draw_power_off_image(1);
 439:src/console.c **** 
 440:src/console.c ****         LCD_power_off(0);
 441:src/console.c ****         SET_ST(STAT_SUSPENDED);
 442:src/console.c ****         SET_ST(STAT_OFF);
 443:src/console.c ****       }
 444:src/console.c ****       // Already in OFF -> just continue to sleep above
 445:src/console.c ****       continue; // note - this skips the rest of the loop and goes back to the beginning,
 446:src/console.c ****       // thus reaching the sleep()
 447:src/console.c ****     }
 448:src/console.c **** 
 449:src/console.c ****     // Well, we are woken-up
 450:src/console.c ****     SET_ST(STAT_RUNNING);
 2677              		.loc 2 450 5 is_stmt 1 view .LVU719
 2678 0096 2368     		ldr	r3, [r4]
 2679 0098 43F00203 		orr	r3, r3, #2
 2680 009c 2360     		str	r3, [r4]
 451:src/console.c **** 
 452:src/console.c ****     // Clear suspended state, because now we are definitely reached the active state
 453:src/console.c ****     CLR_ST(STAT_SUSPENDED);
 2681              		.loc 2 453 5 view .LVU720
 2682 009e 2368     		ldr	r3, [r4]
 2683 00a0 23F00403 		bic	r3, r3, #4
 2684 00a4 2360     		str	r3, [r4]
 454:src/console.c **** 
 455:src/console.c ****     // Get up from OFF state
 456:src/console.c ****     if ( ST(STAT_OFF) ) {
 2685              		.loc 2 456 5 view .LVU721
 2686              		.loc 2 456 10 is_stmt 0 view .LVU722
 2687 00a6 2368     		ldr	r3, [r4]
 2688              		.loc 2 456 8 view .LVU723
 2689 00a8 DB06     		lsls	r3, r3, #27
 2690 00aa 0ED5     		bpl	.L198
 457:src/console.c ****       LCD_power_on();
 2691              		.loc 2 457 7 is_stmt 1 view .LVU724
 2692 00ac 8F4B     		ldr	r3, .L282+40
 2693 00ae 9847     		blx	r3
 2694              	.LVL217:
 458:src/console.c ****       key_pop_all(); //try clearing the ON key to stop double flashing of RPN
 2695              		.loc 2 458 7 view .LVU725
 2696 00b0 8F4B     		ldr	r3, .L282+44
 2697 00b2 9847     		blx	r3
 2698              	.LVL218:
 459:src/console.c ****       rtc_wakeup_delay(); // Ensure that RTC readings after power off will be OK
 2699              		.loc 2 459 7 view .LVU726
 2700 00b4 8F4B     		ldr	r3, .L282+48
 2701 00b6 9847     		blx	r3
ARM GAS  /tmp/cc7sTUNp.s 			page 73


 2702              	.LVL219:
 460:src/console.c **** 
 461:src/console.c ****       CLR_ST(STAT_OFF);
 2703              		.loc 2 461 7 view .LVU727
 2704 00b8 2368     		ldr	r3, [r4]
 462:src/console.c **** 
 463:src/console.c ****       if ( !lcd_get_buf_cleared() )
 2705              		.loc 2 463 13 is_stmt 0 view .LVU728
 2706 00ba 8F4A     		ldr	r2, .L282+52
 461:src/console.c **** 
 2707              		.loc 2 461 7 view .LVU729
 2708 00bc 23F01003 		bic	r3, r3, #16
 2709 00c0 2360     		str	r3, [r4]
 2710              		.loc 2 463 7 is_stmt 1 view .LVU730
 2711              		.loc 2 463 13 is_stmt 0 view .LVU731
 2712 00c2 9047     		blx	r2
 2713              	.LVL220:
 2714              		.loc 2 463 10 view .LVU732
 2715 00c4 08B9     		cbnz	r0, .L198
 464:src/console.c ****         lcd_forced_refresh(); // Just redraw from LCD buffer
 2716              		.loc 2 464 9 is_stmt 1 view .LVU733
 2717 00c6 8D4B     		ldr	r3, .L282+56
 2718 00c8 9847     		blx	r3
 2719              	.LVL221:
 2720              	.L198:
 465:src/console.c ****     }
 466:src/console.c **** 
 467:src/console.c ****     // Key is ready -> clear auto off timer
 468:src/console.c ****     //    if ( !key_empty() )
 469:src/console.c ****     //  reset_auto_off(); - moved as key here might be heartbeat
 470:src/console.c ****     // Fetch the key
 471:src/console.c ****     //  < 0 -> No key event
 472:src/console.c ****     //  > 0 -> Key pressed
 473:src/console.c ****     // == 0 -> Key released
 474:src/console.c ****     c = key_pop();
 2721              		.loc 2 474 5 view .LVU734
 2722              		.loc 2 474 9 is_stmt 0 view .LVU735
 2723 00ca 8D4B     		ldr	r3, .L282+60
 2724 00cc 9847     		blx	r3
 2725              	.LVL222:
 475:src/console.c ****     if ( (c != K_HEARTBEAT) && (c > 0) ) {
 2726              		.loc 2 475 8 view .LVU736
 2727 00ce 6228     		cmp	r0, #98
 474:src/console.c ****     if ( (c != K_HEARTBEAT) && (c > 0) ) {
 2728              		.loc 2 474 9 view .LVU737
 2729 00d0 0546     		mov	r5, r0
 2730              	.LVL223:
 2731              		.loc 2 475 5 is_stmt 1 view .LVU738
 2732              		.loc 2 475 8 is_stmt 0 view .LVU739
 2733 00d2 00F09280 		beq	.L200
 2734              		.loc 2 475 29 discriminator 1 view .LVU740
 2735 00d6 0028     		cmp	r0, #0
 2736 00d8 40F38C80 		ble	.L201
 476:src/console.c ****       reset_auto_off();
 2737              		.loc 2 476 7 is_stmt 1 view .LVU741
 2738 00dc 894B     		ldr	r3, .L282+64
 2739 00de 9847     		blx	r3
ARM GAS  /tmp/cc7sTUNp.s 			page 74


 2740              	.LVL224:
 477:src/console.c ****       start_key_timer();
 2741              		.loc 2 477 7 view .LVU742
 2742              	.LBB125:
 2743              	.LBI125:
 247:src/console.c ****     start_ticks = get_rtc_ticks();
 2744              		.loc 2 247 6 view .LVU743
 2745              	.LBB126:
 248:src/console.c **** }
 2746              		.loc 2 248 5 view .LVU744
 248:src/console.c **** }
 2747              		.loc 2 248 19 is_stmt 0 view .LVU745
 2748 00e0 894B     		ldr	r3, .L282+68
 2749 00e2 9847     		blx	r3
 2750              	.LVL225:
 248:src/console.c **** }
 2751              		.loc 2 248 17 view .LVU746
 2752 00e4 894B     		ldr	r3, .L282+72
 2753              	.LBE126:
 2754              	.LBE125:
 2755              	.LBB128:
 2756              	.LBB129:
  61:src/console.c **** 
 2757              		.loc 2 61 6 view .LVU747
 2758 00e6 632D     		cmp	r5, #99
 2759              	.LBE129:
 2760              	.LBE128:
 2761              	.LBB140:
 2762              	.LBB127:
 248:src/console.c **** }
 2763              		.loc 2 248 17 view .LVU748
 2764 00e8 1860     		str	r0, [r3]
 2765              	.LBE127:
 2766              	.LBE140:
 478:src/console.c ****     }
 479:src/console.c ****     if (c >= 0) {
 2767              		.loc 2 479 5 is_stmt 1 view .LVU749
 480:src/console.c ****       remapped = remap(c);
 2768              		.loc 2 480 7 view .LVU750
 2769              	.LVL226:
 2770              	.LBB141:
 2771              	.LBI128:
  53:src/console.c **** 
 2772              		.loc 2 53 22 view .LVU751
 2773              	.LBB131:
  55:src/console.c **** 
 2774              		.loc 2 55 3 view .LVU752
 2775              		.file 3 "src/keytran.c"
   1:src/keytran.c **** static const struct _ndmap mapping_none[] = {
 2776              		.loc 3 1 1 view .LVU753
   2:src/keytran.c ****     {K_RELEASE, -1},
   3:src/keytran.c ****     // Top row of DM42 1--6
   4:src/keytran.c ****     {K00, 0}, // A/sig+
   5:src/keytran.c ****     {K01, 0}, // B/1/x
   6:src/keytran.c ****     {K03, 0}, // D/sqrt x
   7:src/keytran.c ****     {K31, 2}, // log10
   8:src/keytran.c ****     {K30, 2}, // ln
ARM GAS  /tmp/cc7sTUNp.s 			page 75


   9:src/keytran.c ****     {K30, 0}, // xeq
  10:src/keytran.c ****     // Next row of DM42 7--12
  11:src/keytran.c ****     {K10, 0}, // STO
  12:src/keytran.c ****     {K11, 0}, // RCL
  13:src/keytran.c ****     {K12, 0}, // Rdown
  14:src/keytran.c ****     {K01, 1}, // sin
  15:src/keytran.c ****     {K02, 1}, // cos
  16:src/keytran.c ****     {K03, 1}, // tan
  17:src/keytran.c ****     // Third row of DM42 13--17
  18:src/keytran.c ****     {K20, 0}, // ENTER
  19:src/keytran.c ****     {K21, 0}, // x<>y
  20:src/keytran.c ****     {K22, 0}, // +/-
  21:src/keytran.c ****     {K23, 0}, // EEX
  22:src/keytran.c ****     {K24, 0}, // <-
  23:src/keytran.c ****     // Fourth row of DM42 18--22
  24:src/keytran.c ****     {K40, 0}, // up-arrow
  25:src/keytran.c ****     {K31, 0}, // 7
  26:src/keytran.c ****     {K32, 0}, // 8
  27:src/keytran.c ****     {K33, 0}, // 9
  28:src/keytran.c ****     {K34, 0}, // /
  29:src/keytran.c ****     // Fifth row of DM42 23--27
  30:src/keytran.c ****     {K50, 0}, // down-arrow
  31:src/keytran.c ****     {K41, 0}, // 4
  32:src/keytran.c ****     {K42, 0}, // 5
  33:src/keytran.c ****     {K43, 0}, // 6
  34:src/keytran.c ****     {K44, 0}, // *
  35:src/keytran.c ****     // Sixth row of DM42 28--32
  36:src/keytran.c ****     {K_F, 0}, // shift
  37:src/keytran.c ****     {K51, 0}, // 1
  38:src/keytran.c ****     {K52, 0}, // 2
  39:src/keytran.c ****     {K53, 0}, // 3
  40:src/keytran.c ****     {K54, 0}, // -
  41:src/keytran.c ****     // Last row of DM42 33--37
  42:src/keytran.c ****     {K60, 0}, // EXIT
  43:src/keytran.c ****     {K61, 0}, // 0
  44:src/keytran.c ****     {K62, 0}, // .
  45:src/keytran.c ****     {K63, 0}, // R/S
  46:src/keytran.c ****     {K64, 0}, // +
  47:src/keytran.c ****     // Function keys, screenshot, sh_up, sh_down
  48:src/keytran.c ****     {K_NOP, 0}, // F1
  49:src/keytran.c ****     {K_NOP, 0},
  50:src/keytran.c ****     {K_NOP, 0},
  51:src/keytran.c ****     {K_NOP, 0},
  52:src/keytran.c ****     {K_NOP, 0},
  53:src/keytran.c ****     {K_NOP, 0}, // F6
  54:src/keytran.c ****     {K_NOP, 0}, // 44
  55:src/keytran.c ****     {K_NOP, 0}, // 45
  56:src/keytran.c ****     {K_NOP, 0}, // 46
  57:src/keytran.c ****   };
  58:src/keytran.c **** 
  59:src/keytran.c ****   static const struct _ndmap mapping_fshift[] = {
 2777              		.loc 3 59 3 view .LVU754
  60:src/keytran.c ****     {K_RELEASE, -1},
  61:src/keytran.c ****     // Top row of DM42 1--6
  62:src/keytran.c ****     {K54, 3}, // sig- 
  63:src/keytran.c ****     {K33, 1}, // y^x
  64:src/keytran.c ****     {K44, 2}, // x^2
ARM GAS  /tmp/cc7sTUNp.s 			page 76


  65:src/keytran.c ****     {K31, 1}, // 10^x
  66:src/keytran.c ****     {K30, 1}, // e^x
  67:src/keytran.c ****     {K30, 3}, // GTO
  68:src/keytran.c ****     // Next row of DM42 7--12
  69:src/keytran.c ****     {K_CMPLX, 0},
  70:src/keytran.c ****     {K54, 1}, // %
  71:src/keytran.c ****     {K23, 3}, // pi
  72:src/keytran.c ****     {K01, 2}, // asin
  73:src/keytran.c ****     {K02, 2}, // acos
  74:src/keytran.c ****     {K03, 2}, // atan
  75:src/keytran.c ****     // Third row of DM42 13--17
  76:src/keytran.c ****     {K20, 1}, // alpha
  77:src/keytran.c ****     {K_MULTI, 1}, // lastX not available; it's RCL L; so just RCL for now;
  78:src/keytran.c ****     {K_SETMENU, 4}, // ANGLES menu
  79:src/keytran.c ****     {K_SETMENU, 2}, // DISP menu
  80:src/keytran.c ****     {K_SETMENU, 1}, // CLR menu
  81:src/keytran.c ****     // Fourth row of DM42 18--22
  82:src/keytran.c ****     {K40, 0}, // up-arrow
  83:src/keytran.c ****     {K52, 1}, // SLV
  84:src/keytran.c ****     {K_SETMENU, 14}, // Integral/sum/product menu
  85:src/keytran.c ****     {K44, 3}, // MATRIX cat
  86:src/keytran.c ****     {K_SETMENU, 12}, // STATS menu
  87:src/keytran.c ****     // Fifth row of DM42 23--27
  88:src/keytran.c ****     {K50, 0}, // down-arrow
  89:src/keytran.c ****     {K_SETMENU, 3}, // BASE menu 
  90:src/keytran.c ****     {K04, 3}, // CONV cat
  91:src/keytran.c ****     {K_SETMENU, 10}, // FLAGS menu
  92:src/keytran.c ****     {K_SETMENU, 11}, // PROBS menu
  93:src/keytran.c ****     // Sixth row of DM42 28--32
  94:src/keytran.c ****     {K_G, 0}, // gshift
  95:src/keytran.c ****     {K_MULTI, DEFMEN}, // toggle default menu
  96:src/keytran.c ****     {K_NOP, 0}, // no function
  97:src/keytran.c ****     {K52, 3}, // P.FCN cat
  98:src/keytran.c ****     {K_NOP, 0}, // no function
  99:src/keytran.c ****     // Last row of DM42 33--37
 100:src/keytran.c ****     {K60, 3}, // off
 101:src/keytran.c ****     {K_SETMENU, 8}, // SETUP menu
 102:src/keytran.c ****     {K21, 1}, // <(
 103:src/keytran.c ****     {K63, 3}, // P/R
 104:src/keytran.c ****     {K10, 3}, // CAT cat
 105:src/keytran.c ****     // Function keys, screenshot, sh_up, sh_down
 106:src/keytran.c ****     {K_NOP, 0},
 107:src/keytran.c ****     {K_NOP, 0},
 108:src/keytran.c ****     {K_NOP, 0},
 109:src/keytran.c ****     {K_NOP, 0},
 110:src/keytran.c ****     {K_NOP, 0},
 111:src/keytran.c ****     {K_NOP, 0},
 112:src/keytran.c ****     {K_NOP, 0},
 113:src/keytran.c ****     {K_SETMENU, -1}, // last menu
 114:src/keytran.c ****     {K_SETMENU, 5}, // MISC menu!
 115:src/keytran.c ****   };
 116:src/keytran.c **** 
 117:src/keytran.c ****   static const struct _ndmap mapping_gshift[] = {
 2778              		.loc 3 117 3 view .LVU755
 118:src/keytran.c ****     {K_RELEASE, -1},
 119:src/keytran.c ****     // Top row of DM42 1--6
 120:src/keytran.c ****     {K64, 3}, // sig+
ARM GAS  /tmp/cc7sTUNp.s 			page 77


 121:src/keytran.c ****     {K34, 1}, // 1/x
 122:src/keytran.c ****     {K44, 1}, // sqrt x
 123:src/keytran.c ****     {K31, 2}, // 10^x
 124:src/keytran.c ****     {K_NOP, 0}, // no function
 125:src/keytran.c ****     {K_NOP, 0}, // no function
 126:src/keytran.c ****     // Next row of DM42 7--12
 127:src/keytran.c ****     {K_NOP, 0}, // no function
 128:src/keytran.c ****     {K11, 3}, // View
 129:src/keytran.c ****     {K12, 3}, // Rup
 130:src/keytran.c ****     {K_SETMENU, 4}, // ANGLES menu
 131:src/keytran.c ****     {K_SETMENU, 4}, // ANGLES menu
 132:src/keytran.c ****     {K_SETMENU, 4}, // ANGLES menu
 133:src/keytran.c ****     // Third row of DM42 13--17
 134:src/keytran.c ****     {K20, 2}, // fill
 135:src/keytran.c ****     {K_SETMENU, 6}, // X<>Y menu
 136:src/keytran.c ****     {K05, 3}, // MODE cat
 137:src/keytran.c ****     {K_NOP, 0}, // no function
 138:src/keytran.c ****     {K_NOP, 0}, // no function
 139:src/keytran.c ****     // Fourth row of DM42 18--22
 140:src/keytran.c ****     {K_NOP, 0}, // no function
 141:src/keytran.c ****     {K_NOP, 0}, // no function
 142:src/keytran.c ****     {K_NOP, 0}, // no function
 143:src/keytran.c ****     {K43, 3}, // SUMS catalogue
 144:src/keytran.c ****     {K42, 3}, // STAT catalogue
 145:src/keytran.c ****     // Fifth row of DM42 23--27
 146:src/keytran.c ****     {K_NOP, 0}, // no function 
 147:src/keytran.c ****     {K_NOP, 0}, // no function
 148:src/keytran.c ****     {K20, 3}, // CONST catalogue
 149:src/keytran.c ****     {K51, 3}, // TEST catalogue
 150:src/keytran.c ****     {K41, 3}, // PROB catalogue
 151:src/keytran.c ****     // Sixth row of DM42 28--32
 152:src/keytran.c ****     {K_G, -1}, // gshift (clears shift state)
 153:src/keytran.c ****     {K_NOP, 0}, // no function
 154:src/keytran.c ****     {K_NOP, 0}, // no function
 155:src/keytran.c ****     {K53, 3}, // X.FCN catalogue.
 156:src/keytran.c ****     {K_NOP, 0}, // no function
 157:src/keytran.c ****     // Last row of DM42 33--37
 158:src/keytran.c ****     {K60, 2}, // SHOW (register browser)
 159:src/keytran.c ****     {K_SETMENU, 13}, // SETUP2 menu
 160:src/keytran.c ****     {K_NOP, 0}, // no function
 161:src/keytran.c ****     {K_SETMENU, 7}, // P.FCN menu
 162:src/keytran.c ****     {K50, 3}, // Status
 163:src/keytran.c ****     // Function keys, screenshot, sh_up, sh_down
 164:src/keytran.c ****     {K_NOP, 0},
 165:src/keytran.c ****     {K_NOP, 0},
 166:src/keytran.c ****     {K_NOP, 0},
 167:src/keytran.c ****     {K_NOP, 0},
 168:src/keytran.c ****     {K_NOP, 0},
 169:src/keytran.c ****     {K_NOP, 0},
 170:src/keytran.c ****     {K_NOP, 0},
 171:src/keytran.c ****     {K_NOP, 0},
 172:src/keytran.c ****     {K_NOP, 0},
 173:src/keytran.c ****   };
 174:src/keytran.c **** 
 175:src/keytran.c **** static const struct _ndmap mapping_alpha[] = {
 2779              		.loc 3 175 1 view .LVU756
 176:src/keytran.c ****     {K_RELEASE, -1},
ARM GAS  /tmp/cc7sTUNp.s 			page 78


 177:src/keytran.c ****     // Top row of DM42 1--6
 178:src/keytran.c ****     {K00, -1},
 179:src/keytran.c ****     {K01, -1},
 180:src/keytran.c ****     {K02, -1},
 181:src/keytran.c ****     {K03, -1},
 182:src/keytran.c ****     {K04, -1},
 183:src/keytran.c ****     {K05, -1},
 184:src/keytran.c ****     // Next row of DM42 7--12
 185:src/keytran.c ****     {K10, -1},
 186:src/keytran.c ****     {K11, -1},
 187:src/keytran.c ****     {K12, -1},
 188:src/keytran.c ****     {K13, -1},
 189:src/keytran.c ****     {K14, -1},
 190:src/keytran.c ****     {K15, -1},
 191:src/keytran.c ****     // Third row of DM42 13--17
 192:src/keytran.c ****     {K20, -1},
 193:src/keytran.c ****     {K21, -1},
 194:src/keytran.c ****     {K22, -1},
 195:src/keytran.c ****     {K23, -1},
 196:src/keytran.c ****     {K24, -1},
 197:src/keytran.c ****     // Fourth row of DM42 18--22
 198:src/keytran.c ****     {K30, -1},
 199:src/keytran.c ****     {K31, -1},
 200:src/keytran.c ****     {K32, -1},
 201:src/keytran.c ****     {K33, -1},
 202:src/keytran.c ****     {K34, -1},
 203:src/keytran.c ****     // Fifth row of DM42 23--27
 204:src/keytran.c ****     {K40, -1},
 205:src/keytran.c ****     {K41, -1},
 206:src/keytran.c ****     {K42, -1},
 207:src/keytran.c ****     {K43, -1},
 208:src/keytran.c ****     {K44, -1},
 209:src/keytran.c ****     // Sixth row of DM42 28--32
 210:src/keytran.c ****     {K50, -1},
 211:src/keytran.c ****     {K51, -1},
 212:src/keytran.c ****     {K52, -1},
 213:src/keytran.c ****     {K53, -1},
 214:src/keytran.c ****     {K54, -1},
 215:src/keytran.c ****     // Last row of DM42 33--37
 216:src/keytran.c ****     {K60, -1},
 217:src/keytran.c ****     {K61, -1},
 218:src/keytran.c ****     {K62, -1},
 219:src/keytran.c ****     {K63, -1},
 220:src/keytran.c ****     {K64, -1},
 221:src/keytran.c ****     // Function keys, screenshot, sh_up, sh_down
 222:src/keytran.c ****     {K_NOP, -1},
 223:src/keytran.c ****     {K_NOP, -1},
 224:src/keytran.c ****     {K_NOP, -1},
 225:src/keytran.c ****     {K_NOP, -1},
 226:src/keytran.c ****     {K_ARROW, -1}, //F5 is always K_ARROW in all menus
 227:src/keytran.c ****     {K_NOP, -1},
 228:src/keytran.c ****     {K_NOP, -1},
 229:src/keytran.c ****     {K_NOP, -1},
 230:src/keytran.c ****     {K_NOP, -1},
 231:src/keytran.c **** };
 232:src/keytran.c **** 
 233:src/keytran.c **** static const struct _ndmap mapping_running[] = {
ARM GAS  /tmp/cc7sTUNp.s 			page 79


 2780              		.loc 3 233 1 view .LVU757
  59:src/console.c **** 
 2781              		.loc 2 59 3 view .LVU758
  61:src/console.c **** 
 2782              		.loc 2 61 3 view .LVU759
  61:src/console.c **** 
 2783              		.loc 2 61 6 is_stmt 0 view .LVU760
 2784 00ea 00F0E280 		beq	.L263
  63:src/console.c ****     struct _ndmap sshot = {.key_34s = K_MULTI, .shift = SSHOT};
 2785              		.loc 2 63 3 is_stmt 1 view .LVU761
  63:src/console.c ****     struct _ndmap sshot = {.key_34s = K_MULTI, .shift = SSHOT};
 2786              		.loc 2 63 6 is_stmt 0 view .LVU762
 2787 00ee 2C2D     		cmp	r5, #44
 2788 00f0 00F0AB80 		beq	.L239
 2789              	.LVL227:
 2790              	.L238:
  68:src/console.c ****     if (c == KEY_SHIFT) { //deal with shift keys
 2791              		.loc 2 68 3 is_stmt 1 view .LVU763
  68:src/console.c ****     if (c == KEY_SHIFT) { //deal with shift keys
 2792              		.loc 2 68 8 is_stmt 0 view .LVU764
 2793 00f4 FFF7FEFF 		bl	get_alpha_state
 2794              	.LVL228:
  68:src/console.c ****     if (c == KEY_SHIFT) { //deal with shift keys
 2795              		.loc 2 68 6 view .LVU765
 2796 00f8 0028     		cmp	r0, #0
 2797 00fa 00F0C980 		beq	.L205
  69:src/console.c ****       switch (cur_shift()) { 
 2798              		.loc 2 69 5 is_stmt 1 view .LVU766
  69:src/console.c ****       switch (cur_shift()) { 
 2799              		.loc 2 69 8 is_stmt 0 view .LVU767
 2800 00fe 1C2D     		cmp	r5, #28
 2801 0100 00F03A81 		beq	.L264
  86:src/console.c ****   }
 2802              		.loc 2 86 5 is_stmt 1 view .LVU768
  86:src/console.c ****   }
 2803              		.loc 2 86 26 is_stmt 0 view .LVU769
 2804 0104 824B     		ldr	r3, .L282+76
 2805              	.L260:
 119:src/console.c ****     break;
 2806              		.loc 2 119 26 view .LVU770
 2807 0106 03EBC502 		add	r2, r3, r5, lsl #3
 2808 010a 92E80300 		ldm	r2, {r0, r1}
 2809 010e 0DF1080A 		add	r10, sp, #8
 2810 0112 13F83550 		ldrb	r5, [r3, r5, lsl #3]	@ zero_extendqisi2
 2811              	.LVL229:
 119:src/console.c ****     break;
 2812              		.loc 2 119 26 view .LVU771
 2813 0116 8AE80300 		stm	r10, {r0, r1}
 2814 011a 8946     		mov	r9, r1
 2815              	.LVL230:
 2816              	.L203:
 119:src/console.c ****     break;
 2817              		.loc 2 119 26 view .LVU772
 2818              	.LBE131:
 2819              	.LBE141:
 481:src/console.c ****       if (remapped.key_34s == K_SETMENU) {
 2820              		.loc 2 481 7 is_stmt 1 view .LVU773
ARM GAS  /tmp/cc7sTUNp.s 			page 80


 2821              		.loc 2 481 10 is_stmt 0 view .LVU774
 2822 011c 2F2D     		cmp	r5, #47
 2823 011e 77D0     		beq	.L265
 2824              	.LVL231:
 2825              	.L228:
 482:src/console.c **** 	set_menu ( remapped.shift );
 483:src/console.c **** 	display_current_menu ();
 484:src/console.c **** 	switch (cur_shift()) { // gets rid of the shift state from the menu-selecting key
 485:src/console.c **** 	case SHIFT_F:
 486:src/console.c **** 	  remapped = f_shift; // F -> N
 487:src/console.c **** 	  break;
 488:src/console.c **** 	case SHIFT_G:
 489:src/console.c **** 	  remapped = g_shift; // G -> N
 490:src/console.c **** 	  break;
 491:src/console.c **** 	case SHIFT_H:
 492:src/console.c **** 	  remapped = h_shift; // H -> N
 493:src/console.c **** 	default:
 494:src/console.c **** 	  remapped = f_shift; // shouldn't happen
 495:src/console.c **** 	}
 496:src/console.c ****       }
 497:src/console.c ****       if (remapped.key_34s == K_SYS) {
 2826              		.loc 2 497 7 is_stmt 1 view .LVU775
 2827              		.loc 2 497 10 is_stmt 0 view .LVU776
 2828 0120 302D     		cmp	r5, #48
 2829 0122 17D1     		bne	.L235
 498:src/console.c **** 	SET_ST(STAT_MENU);
 2830              		.loc 2 498 2 is_stmt 1 view .LVU777
 2831 0124 2368     		ldr	r3, [r4]
 499:src/console.c **** 	handle_menu(&MID_MENU, MENU_RESET, 0); // App menu
 2832              		.loc 2 499 2 is_stmt 0 view .LVU778
 2833 0126 7B4D     		ldr	r5, .L282+80
 2834              	.LVL232:
 2835              		.loc 2 499 2 view .LVU779
 2836 0128 7B48     		ldr	r0, .L282+84
 2837 012a 0022     		movs	r2, #0
 498:src/console.c **** 	SET_ST(STAT_MENU);
 2838              		.loc 2 498 2 view .LVU780
 2839 012c 43F04003 		orr	r3, r3, #64
 2840              		.loc 2 499 2 view .LVU781
 2841 0130 1146     		mov	r1, r2
 498:src/console.c **** 	SET_ST(STAT_MENU);
 2842              		.loc 2 498 2 view .LVU782
 2843 0132 2360     		str	r3, [r4]
 2844              		.loc 2 499 2 is_stmt 1 view .LVU783
 2845 0134 A847     		blx	r5
 2846              	.LVL233:
 500:src/console.c **** 	CLR_ST(STAT_MENU);
 2847              		.loc 2 500 2 view .LVU784
 501:src/console.c **** 	remapped =  no_key;
 2848              		.loc 2 501 11 is_stmt 0 view .LVU785
 2849 0136 794B     		ldr	r3, .L282+88
 500:src/console.c **** 	CLR_ST(STAT_MENU);
 2850              		.loc 2 500 2 view .LVU786
 2851 0138 2268     		ldr	r2, [r4]
 2852              		.loc 2 501 11 view .LVU787
 2853 013a 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 2854 013c 93E80300 		ldm	r3, {r0, r1}
ARM GAS  /tmp/cc7sTUNp.s 			page 81


 500:src/console.c **** 	CLR_ST(STAT_MENU);
 2855              		.loc 2 500 2 view .LVU788
 2856 0140 22F04002 		bic	r2, r2, #64
 2857 0144 2260     		str	r2, [r4]
 2858              		.loc 2 501 2 is_stmt 1 view .LVU789
 2859              	.LVL234:
 2860              		.loc 2 501 11 is_stmt 0 view .LVU790
 2861 0146 04AA     		add	r2, sp, #16
 2862 0148 02E90300 		stmdb	r2, {r0, r1}
 2863              	.LBB142:
 2864              	.LBB143:
 111:src/menu.c    **** }
 2865              		.loc 1 111 3 view .LVU791
 2866 014c 3068     		ldr	r0, [r6]
 2867              	.LBE143:
 2868              	.LBE142:
 2869              		.loc 2 501 11 view .LVU792
 2870 014e 8946     		mov	r9, r1
 2871              	.LVL235:
 502:src/console.c **** 	display_current_menu();
 2872              		.loc 2 502 2 is_stmt 1 view .LVU793
 2873              	.LBB145:
 2874              	.LBI142:
 110:src/menu.c    ****   display_menu (current_menu);
 2875              		.loc 1 110 6 view .LVU794
 2876              	.LBB144:
 111:src/menu.c    **** }
 2877              		.loc 1 111 3 view .LVU795
 2878 0150 FFF7FEFF 		bl	display_menu
 2879              	.LVL236:
 2880              	.L235:
 111:src/menu.c    **** }
 2881              		.loc 1 111 3 is_stmt 0 view .LVU796
 2882              	.LBE144:
 2883              	.LBE145:
 503:src/console.c ****       }
 504:src/console.c ****       if (remapped.key_34s == K_MULTI) {
 2884              		.loc 2 504 7 is_stmt 1 view .LVU797
 2885              		.loc 2 504 10 is_stmt 0 view .LVU798
 2886 0154 312D     		cmp	r5, #49
 2887 0156 7AD0     		beq	.L204
 505:src/console.c **** 	remapped = do_multi (remapped);
 506:src/console.c **** 	display_current_menu();
 507:src/console.c ****       }
 508:src/console.c ****       if (remapped.key_34s == K_EXIT) break;
 2888              		.loc 2 508 7 is_stmt 1 view .LVU799
 2889              		.loc 2 508 10 is_stmt 0 view .LVU800
 2890 0158 322D     		cmp	r5, #50
 2891 015a 00F09380 		beq	.L237
 2892              	.LVL237:
 2893              	.L262:
 2894              		.loc 2 508 10 view .LVU801
 2895 015e 0DF1080A 		add	r10, sp, #8
 2896              	.L207:
 2897              	.LVL238:
 509:src/console.c ****       process_keycode_with_shift(remapped);
 2898              		.loc 2 509 7 is_stmt 1 view .LVU802
ARM GAS  /tmp/cc7sTUNp.s 			page 82


 2899              		.loc 2 509 7 is_stmt 0 view .LVU803
 2900 0162 8DF80850 		strb	r5, [sp, #8]
 2901 0166 CDF80C90 		str	r9, [sp, #12]
 2902 016a 9AE80300 		ldm	r10, {r0, r1}
 2903 016e FFF7FEFF 		bl	process_keycode_with_shift
 2904              	.LVL239:
 414:src/console.c **** 
 2905              		.loc 2 414 3 is_stmt 1 view .LVU804
 416:src/console.c ****       {
 2906              		.loc 2 416 5 view .LVU805
 416:src/console.c ****       {
 2907              		.loc 2 416 10 is_stmt 0 view .LVU806
 2908 0172 2368     		ldr	r3, [r4]
 416:src/console.c ****       {
 2909              		.loc 2 416 8 view .LVU807
 2910 0174 9D05     		lsls	r5, r3, #22
 2911              	.LVL240:
 416:src/console.c ****       {
 2912              		.loc 2 416 8 view .LVU808
 2913 0176 3FF57DAF 		bmi	.L266
 2914              	.LVL241:
 2915              	.L186:
 421:src/console.c ****     {
 2916              		.loc 2 421 10 is_stmt 1 view .LVU809
 421:src/console.c ****     {
 2917              		.loc 2 421 15 is_stmt 0 view .LVU810
 2918 017a 2568     		ldr	r5, [r4]
 421:src/console.c ****     {
 2919              		.loc 2 421 13 view .LVU811
 2920 017c 15F40075 		ands	r5, r5, #512
 2921 0180 81D1     		bne	.L187
 421:src/console.c ****     {
 2922              		.loc 2 421 35 discriminator 1 view .LVU812
 2923 0182 B847     		blx	r7
 2924              	.LVL242:
 421:src/console.c ****     {
 2925              		.loc 2 421 32 discriminator 1 view .LVU813
 2926 0184 0028     		cmp	r0, #0
 2927 0186 3FF47EAF 		beq	.L187
 423:src/console.c ****       sys_timer_start(0, 100);  // Timer 0: wake up for heartbeat 
 2928              		.loc 2 423 7 is_stmt 1 view .LVU814
 2929 018a 2368     		ldr	r3, [r4]
 2930 018c 23F00203 		bic	r3, r3, #2
 424:src/console.c ****       sys_sleep();
 2931              		.loc 2 424 7 is_stmt 0 view .LVU815
 2932 0190 2846     		mov	r0, r5
 2933 0192 6421     		movs	r1, #100
 423:src/console.c ****       sys_timer_start(0, 100);  // Timer 0: wake up for heartbeat 
 2934              		.loc 2 423 7 view .LVU816
 2935 0194 2360     		str	r3, [r4]
 424:src/console.c ****       sys_sleep();
 2936              		.loc 2 424 7 is_stmt 1 view .LVU817
 2937 0196 C047     		blx	r8
 2938              	.LVL243:
 425:src/console.c ****       if (sys_timer_timeout(0)) { // If timer has completed...
 2939              		.loc 2 425 7 view .LVU818
 2940 0198 534B     		ldr	r3, .L282+36
ARM GAS  /tmp/cc7sTUNp.s 			page 83


 2941 019a 9847     		blx	r3
 2942              	.LVL244:
 426:src/console.c **** 	key_push (K_HEARTBEAT);
 2943              		.loc 2 426 7 view .LVU819
 426:src/console.c **** 	key_push (K_HEARTBEAT);
 2944              		.loc 2 426 11 is_stmt 0 view .LVU820
 2945 019c 604B     		ldr	r3, .L282+92
 2946 019e 2846     		mov	r0, r5
 2947 01a0 9847     		blx	r3
 2948              	.LVL245:
 426:src/console.c **** 	key_push (K_HEARTBEAT);
 2949              		.loc 2 426 10 view .LVU821
 2950 01a2 48B1     		cbz	r0, .L191
 427:src/console.c **** 	if (Pause > 0) Pause--;
 2951              		.loc 2 427 2 is_stmt 1 view .LVU822
 2952 01a4 5F4B     		ldr	r3, .L282+96
 2953 01a6 6220     		movs	r0, #98
 2954 01a8 9847     		blx	r3
 2955              	.LVL246:
 428:src/console.c ****       }
 2956              		.loc 2 428 2 view .LVU823
 428:src/console.c ****       }
 2957              		.loc 2 428 12 is_stmt 0 view .LVU824
 2958 01aa 5F4B     		ldr	r3, .L282+100
 2959 01ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 428:src/console.c ****       }
 2960              		.loc 2 428 5 view .LVU825
 2961 01ae 1AB1     		cbz	r2, .L191
 428:src/console.c ****       }
 2962              		.loc 2 428 17 is_stmt 1 discriminator 1 view .LVU826
 428:src/console.c ****       }
 2963              		.loc 2 428 22 is_stmt 0 discriminator 1 view .LVU827
 2964 01b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2965 01b2 013A     		subs	r2, r2, #1
 2966 01b4 D2B2     		uxtb	r2, r2
 2967 01b6 1A70     		strb	r2, [r3]
 2968              	.L191:
 430:src/console.c ****     }
 2969              		.loc 2 430 7 is_stmt 1 view .LVU828
 2970 01b8 5C4B     		ldr	r3, .L282+104
 2971 01ba 0020     		movs	r0, #0
 2972 01bc 9847     		blx	r3
 2973              	.LVL247:
 434:src/console.c ****       if (!ST(STAT_SUSPENDED)) {
 2974              		.loc 2 434 5 view .LVU829
 434:src/console.c ****       if (!ST(STAT_SUSPENDED)) {
 2975              		.loc 2 434 9 is_stmt 0 view .LVU830
 2976 01be 2368     		ldr	r3, [r4]
 434:src/console.c ****       if (!ST(STAT_SUSPENDED)) {
 2977              		.loc 2 434 8 view .LVU831
 2978 01c0 9905     		lsls	r1, r3, #22
 2979 01c2 7FF564AF 		bpl	.L267
 2980              	.L193:
 435:src/console.c ****         // Going to off mode
 2981              		.loc 2 435 7 is_stmt 1 view .LVU832
 435:src/console.c ****         // Going to off mode
 2982              		.loc 2 435 12 is_stmt 0 view .LVU833
ARM GAS  /tmp/cc7sTUNp.s 			page 84


 2983 01c6 2568     		ldr	r5, [r4]
 435:src/console.c ****         // Going to off mode
 2984              		.loc 2 435 10 view .LVU834
 2985 01c8 15F00405 		ands	r5, r5, #4
 2986 01cc 7FF44EAF 		bne	.L185
 437:src/console.c ****         draw_power_off_image(1);
 2987              		.loc 2 437 9 is_stmt 1 view .LVU835
 2988 01d0 574B     		ldr	r3, .L282+108
 2989 01d2 2846     		mov	r0, r5
 2990 01d4 9847     		blx	r3
 2991              	.LVL248:
 438:src/console.c **** 
 2992              		.loc 2 438 9 view .LVU836
 2993 01d6 574B     		ldr	r3, .L282+112
 2994 01d8 0120     		movs	r0, #1
 2995 01da 9847     		blx	r3
 2996              	.LVL249:
 440:src/console.c ****         SET_ST(STAT_SUSPENDED);
 2997              		.loc 2 440 9 view .LVU837
 2998 01dc 564B     		ldr	r3, .L282+116
 2999 01de 2846     		mov	r0, r5
 3000 01e0 9847     		blx	r3
 3001              	.LVL250:
 441:src/console.c ****         SET_ST(STAT_OFF);
 3002              		.loc 2 441 9 view .LVU838
 3003 01e2 2368     		ldr	r3, [r4]
 3004 01e4 43F00403 		orr	r3, r3, #4
 3005 01e8 2360     		str	r3, [r4]
 442:src/console.c ****       }
 3006              		.loc 2 442 9 view .LVU839
 3007 01ea 2368     		ldr	r3, [r4]
 3008 01ec 43F01003 		orr	r3, r3, #16
 3009 01f0 2360     		str	r3, [r4]
 3010 01f2 3BE7     		b	.L185
 3011              	.LVL251:
 3012              	.L201:
 479:src/console.c ****       remapped = remap(c);
 3013              		.loc 2 479 5 view .LVU840
 479:src/console.c ****       remapped = remap(c);
 3014              		.loc 2 479 8 is_stmt 0 view .LVU841
 3015 01f4 7FF43AAF 		bne	.L185
 3016 01f8 7CE7     		b	.L238
 3017              	.L200:
 479:src/console.c ****       remapped = remap(c);
 3018              		.loc 2 479 5 is_stmt 1 view .LVU842
 480:src/console.c ****       if (remapped.key_34s == K_SETMENU) {
 3019              		.loc 2 480 7 view .LVU843
 3020              	.LVL252:
 3021              	.LBB146:
  53:src/console.c **** 
 3022              		.loc 2 53 22 view .LVU844
 3023              	.LBB132:
  55:src/console.c **** 
 3024              		.loc 2 55 3 view .LVU845
   1:src/keytran.c ****     // Top row of DM42 1--6
 3025              		.loc 3 1 1 view .LVU846
  59:src/keytran.c ****     {K_RELEASE, -1},
ARM GAS  /tmp/cc7sTUNp.s 			page 85


 3026              		.loc 3 59 3 view .LVU847
 117:src/keytran.c ****     {K_RELEASE, -1},
 3027              		.loc 3 117 3 view .LVU848
 175:src/keytran.c ****     {K_RELEASE, -1},
 3028              		.loc 3 175 1 view .LVU849
 3029              		.loc 3 233 1 view .LVU850
  59:src/console.c **** 
 3030              		.loc 2 59 3 view .LVU851
  59:src/console.c **** 
 3031              		.loc 2 59 23 view .LVU852
  59:src/console.c **** 
 3032              		.loc 2 59 30 is_stmt 0 view .LVU853
 3033 01fa 504B     		ldr	r3, .L282+120
 3034              	.LVL253:
 3035              	.L261:
  59:src/console.c **** 
 3036              		.loc 2 59 30 view .LVU854
 3037 01fc 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 3038              	.LVL254:
  59:src/console.c **** 
 3039              		.loc 2 59 30 view .LVU855
 3040 01fe 93E80300 		ldm	r3, {r0, r1}
 3041 0202 0DF1080A 		add	r10, sp, #8
 3042              	.LBE132:
 3043              	.LBE146:
 481:src/console.c **** 	set_menu ( remapped.shift );
 3044              		.loc 2 481 10 view .LVU856
 3045 0206 2F2D     		cmp	r5, #47
 3046              	.LBB147:
 3047              	.LBB133:
  59:src/console.c **** 
 3048              		.loc 2 59 30 view .LVU857
 3049 0208 8AE80300 		stm	r10, {r0, r1}
 3050 020c 8946     		mov	r9, r1
 3051              	.LVL255:
  59:src/console.c **** 
 3052              		.loc 2 59 30 view .LVU858
 3053              	.LBE133:
 3054              	.LBE147:
 481:src/console.c **** 	set_menu ( remapped.shift );
 3055              		.loc 2 481 7 is_stmt 1 view .LVU859
 481:src/console.c **** 	set_menu ( remapped.shift );
 3056              		.loc 2 481 10 is_stmt 0 view .LVU860
 3057 020e 87D1     		bne	.L228
 3058              	.LVL256:
 3059              	.L265:
 482:src/console.c **** 	display_current_menu ();
 3060              		.loc 2 482 2 is_stmt 1 view .LVU861
 3061              	.LBB148:
 3062              	.LBI148:
  86:src/menu.c    ****   int m = current_menu;
 3063              		.loc 1 86 6 view .LVU862
 3064              	.LBB149:
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 3065              		.loc 1 87 3 view .LVU863
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 3066              		.loc 1 87 7 is_stmt 0 view .LVU864
ARM GAS  /tmp/cc7sTUNp.s 			page 86


 3067 0210 3368     		ldr	r3, [r6]
 3068              	.LVL257:
  88:src/menu.c    ****     current_menu = default_menu;
 3069              		.loc 1 88 3 is_stmt 1 view .LVU865
  88:src/menu.c    ****     current_menu = default_menu;
 3070              		.loc 1 88 6 is_stmt 0 view .LVU866
 3071 0212 4B45     		cmp	r3, r9
 3072 0214 4FD0     		beq	.L268
  91:src/menu.c    ****     current_menu = last_menu;
 3073              		.loc 1 91 8 is_stmt 1 view .LVU867
  91:src/menu.c    ****     current_menu = last_menu;
 3074              		.loc 1 91 11 is_stmt 0 view .LVU868
 3075 0216 B9F1FF3F 		cmp	r9, #-1
 3076 021a 00F0A580 		beq	.L269
 3077              	.LVL258:
 3078              	.L229:
  95:src/menu.c    ****   }
 3079              		.loc 1 95 5 is_stmt 1 view .LVU869
  95:src/menu.c    ****   }
 3080              		.loc 1 95 18 is_stmt 0 view .LVU870
 3081 021e C6F80090 		str	r9, [r6]
 3082              	.LVL259:
 3083              	.L232:
  97:src/menu.c    **** }
 3084              		.loc 1 97 3 is_stmt 1 view .LVU871
  97:src/menu.c    **** }
 3085              		.loc 1 97 6 is_stmt 0 view .LVU872
 3086 0222 092B     		cmp	r3, #9
 3087 0224 01D0     		beq	.L233
 3088              	.L230:
  97:src/menu.c    **** }
 3089              		.loc 1 97 15 is_stmt 1 view .LVU873
  97:src/menu.c    **** }
 3090              		.loc 1 97 25 is_stmt 0 view .LVU874
 3091 0226 464A     		ldr	r2, .L282+124
 3092 0228 1360     		str	r3, [r2]
 3093              	.L233:
  97:src/menu.c    **** }
 3094              		.loc 1 97 25 view .LVU875
 3095              	.LBE149:
 3096              	.LBE148:
 483:src/console.c **** 	switch (cur_shift()) { // gets rid of the shift state from the menu-selecting key
 3097              		.loc 2 483 2 is_stmt 1 view .LVU876
 3098              	.LBB154:
 3099              	.LBI154:
 110:src/menu.c    ****   display_menu (current_menu);
 3100              		.loc 1 110 6 view .LVU877
 3101              	.LBB155:
 111:src/menu.c    **** }
 3102              		.loc 1 111 3 view .LVU878
 3103 022a 4846     		mov	r0, r9
 3104 022c FFF7FEFF 		bl	display_menu
 3105              	.LVL260:
 3106              	.LBE155:
 3107              	.LBE154:
 484:src/console.c **** 	case SHIFT_F:
 3108              		.loc 2 484 2 view .LVU879
ARM GAS  /tmp/cc7sTUNp.s 			page 87


 484:src/console.c **** 	case SHIFT_F:
 3109              		.loc 2 484 10 is_stmt 0 view .LVU880
 3110 0230 FFF7FEFF 		bl	cur_shift
 3111              	.LVL261:
 484:src/console.c **** 	case SHIFT_F:
 3112              		.loc 2 484 2 view .LVU881
 3113 0234 0228     		cmp	r0, #2
 3114 0236 00F08F80 		beq	.L234
 486:src/console.c **** 	  break;
 3115              		.loc 2 486 4 is_stmt 1 view .LVU882
 486:src/console.c **** 	  break;
 3116              		.loc 2 486 13 is_stmt 0 view .LVU883
 3117 023a 424B     		ldr	r3, .L282+128
 3118 023c 93E80300 		ldm	r3, {r0, r1}
 3119 0240 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 3120              	.LVL262:
 486:src/console.c **** 	  break;
 3121              		.loc 2 486 13 view .LVU884
 3122 0242 8AE80300 		stm	r10, {r0, r1}
 3123 0246 8946     		mov	r9, r1
 3124              	.LVL263:
 487:src/console.c **** 	case SHIFT_G:
 3125              		.loc 2 487 4 is_stmt 1 view .LVU885
 3126 0248 6AE7     		b	.L228
 3127              	.LVL264:
 3128              	.L239:
 3129              	.LBB156:
 3130              	.LBB134:
 3131              	.LBB130:
  65:src/console.c ****   }
 3132              		.loc 2 65 12 is_stmt 0 view .LVU886
 3133 024a 4FF00C09 		mov	r9, #12
 3134              	.LVL265:
 3135              	.L204:
  65:src/console.c ****   }
 3136              		.loc 2 65 12 view .LVU887
 3137              	.LBE130:
 3138              	.LBE134:
 3139              	.LBE156:
 505:src/console.c **** 	display_current_menu();
 3140              		.loc 2 505 2 is_stmt 1 view .LVU888
 505:src/console.c **** 	display_current_menu();
 3141              		.loc 2 505 13 is_stmt 0 view .LVU889
 3142 024e 3123     		movs	r3, #49
 3143 0250 CDF80C90 		str	r9, [sp, #12]
 3144 0254 8DF80830 		strb	r3, [sp, #8]
 3145 0258 6D46     		mov	r5, sp
 3146 025a 0DF1080A 		add	r10, sp, #8
 3147 025e 9AE80600 		ldm	r10, {r1, r2}
 3148 0262 2846     		mov	r0, r5
 3149 0264 FFF7FEFF 		bl	do_multi
 3150              	.LVL266:
 3151 0268 95E80300 		ldm	r5, {r0, r1}
 3152 026c 8AE80300 		stm	r10, {r0, r1}
 3153 0270 9DF80850 		ldrb	r5, [sp, #8]	@ zero_extendqisi2
 3154              	.LVL267:
 3155              	.LBB157:
ARM GAS  /tmp/cc7sTUNp.s 			page 88


 3156              	.LBB158:
 111:src/menu.c    **** }
 3157              		.loc 1 111 3 view .LVU890
 3158 0274 3068     		ldr	r0, [r6]
 3159              	.LBE158:
 3160              	.LBE157:
 505:src/console.c **** 	display_current_menu();
 3161              		.loc 2 505 13 view .LVU891
 3162 0276 DDF80C90 		ldr	r9, [sp, #12]
 3163              	.LVL268:
 506:src/console.c ****       }
 3164              		.loc 2 506 2 is_stmt 1 view .LVU892
 3165              	.LBB160:
 3166              	.LBI157:
 110:src/menu.c    ****   display_menu (current_menu);
 3167              		.loc 1 110 6 view .LVU893
 3168              	.LBB159:
 111:src/menu.c    **** }
 3169              		.loc 1 111 3 view .LVU894
 3170 027a FFF7FEFF 		bl	display_menu
 3171              	.LVL269:
 111:src/menu.c    **** }
 3172              		.loc 1 111 3 is_stmt 0 view .LVU895
 3173              	.LBE159:
 3174              	.LBE160:
 508:src/console.c ****       process_keycode_with_shift(remapped);
 3175              		.loc 2 508 7 is_stmt 1 view .LVU896
 508:src/console.c ****       process_keycode_with_shift(remapped);
 3176              		.loc 2 508 10 is_stmt 0 view .LVU897
 3177 027e 322D     		cmp	r5, #50
 3178 0280 7FF46DAF 		bne	.L262
 3179              	.LVL270:
 3180              	.L237:
 510:src/console.c ****     }
 511:src/console.c ****   }
 512:src/console.c ****   save_ram_file(0);
 3181              		.loc 2 512 3 is_stmt 1 view .LVU898
 3182 0284 0020     		movs	r0, #0
 513:src/console.c ****   //  free_storage();
 514:src/console.c ****   return;
 515:src/console.c **** }
 3183              		.loc 2 515 1 is_stmt 0 view .LVU899
 3184 0286 04B0     		add	sp, sp, #16
 3185              		.cfi_remember_state
 3186              		.cfi_def_cfa_offset 32
 3187              		@ sp needed
 3188 0288 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 3189              		.cfi_restore 14
 3190              		.cfi_restore 10
 3191              		.cfi_restore 9
 3192              		.cfi_restore 8
 3193              		.cfi_restore 7
 3194              		.cfi_restore 6
 3195              		.cfi_restore 5
 3196              		.cfi_restore 4
 3197              		.cfi_def_cfa_offset 0
 3198              	.LVL271:
ARM GAS  /tmp/cc7sTUNp.s 			page 89


 512:src/console.c ****   //  free_storage();
 3199              		.loc 2 512 3 view .LVU900
 3200 028c FFF7FEBF 		b	save_ram_file
 3201              	.LVL272:
 3202              	.L205:
 3203              		.cfi_restore_state
 3204              	.LBB161:
 3205              	.LBB135:
  89:src/console.c ****     return mapping_running[c];
 3206              		.loc 2 89 3 is_stmt 1 view .LVU901
  89:src/console.c ****     return mapping_running[c];
 3207              		.loc 2 89 15 is_stmt 0 view .LVU902
 3208 0290 254A     		ldr	r2, .L282+100
 3209 0292 2D4B     		ldr	r3, .L282+132
 3210 0294 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3211 0296 1B68     		ldr	r3, [r3]
  89:src/console.c ****     return mapping_running[c];
 3212              		.loc 2 89 6 view .LVU903
 3213 0298 51EA0309 		orrs	r9, r1, r3
 3214 029c 6AD1     		bne	.L270
  93:src/console.c ****   case KEY_F1:
 3215              		.loc 2 93 3 is_stmt 1 view .LVU904
 3216 029e A5F12603 		sub	r3, r5, #38
 3217 02a2 052B     		cmp	r3, #5
 3218 02a4 00F2BB80 		bhi	.L211
 3219 02a8 DFE803F0 		tbb	[pc, r3]
 3220              	.L213:
 3221 02ac CC       		.byte	(.L218-.L213)/2
 3222 02ad 80       		.byte	(.L217-.L213)/2
 3223 02ae 8A       		.byte	(.L216-.L213)/2
 3224 02af 93       		.byte	(.L215-.L213)/2
 3225 02b0 9C       		.byte	(.L214-.L213)/2
 3226 02b1 A5       		.byte	(.L212-.L213)/2
 3227              		.p2align 1
 3228              	.L263:
  61:src/console.c **** 
 3229              		.loc 2 61 16 view .LVU905
  61:src/console.c **** 
 3230              		.loc 2 61 23 is_stmt 0 view .LVU906
 3231 02b2 264B     		ldr	r3, .L282+136
 3232 02b4 A2E7     		b	.L261
 3233              	.LVL273:
 3234              	.L268:
  61:src/console.c **** 
 3235              		.loc 2 61 23 view .LVU907
 3236              	.LBE135:
 3237              	.LBE161:
 3238              	.LBB162:
 3239              	.LBB150:
  89:src/menu.c    ****   }
 3240              		.loc 1 89 5 is_stmt 1 view .LVU908
  89:src/menu.c    ****   }
 3241              		.loc 1 89 18 is_stmt 0 view .LVU909
 3242 02b6 264B     		ldr	r3, .L282+140
 3243              	.LVL274:
  89:src/menu.c    ****   }
 3244              		.loc 1 89 18 view .LVU910
ARM GAS  /tmp/cc7sTUNp.s 			page 90


 3245 02b8 1A68     		ldr	r2, [r3]
 3246 02ba 3260     		str	r2, [r6]
 3247              	.LVL275:
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 3248              		.loc 1 87 7 view .LVU911
 3249 02bc 4B46     		mov	r3, r9
  89:src/menu.c    ****   }
 3250              		.loc 1 89 18 view .LVU912
 3251 02be 9146     		mov	r9, r2
 3252              	.LVL276:
  89:src/menu.c    ****   }
 3253              		.loc 1 89 18 view .LVU913
 3254 02c0 AFE7     		b	.L232
 3255              	.L283:
 3256 02c2 00BF     		.align	2
 3257              	.L282:
 3258 02c4 00000000 		.word	StateWhileOn
 3259 02c8 00000000 		.word	DispMsg
 3260 02cc 00200010 		.word	268443648
 3261 02d0 00000000 		.word	.LANCHOR1
 3262 02d4 7D030008 		.word	134218621
 3263 02d8 00000000 		.word	run_menu_item
 3264 02dc 00000000 		.word	menu_line_str
 3265 02e0 31020008 		.word	134218289
 3266 02e4 00000000 		.word	JustDisplayed
 3267 02e8 19040008 		.word	134218777
 3268 02ec 19020008 		.word	134218265
 3269 02f0 91030008 		.word	134218641
 3270 02f4 E5020008 		.word	134218469
 3271 02f8 59020008 		.word	134218329
 3272 02fc 35020008 		.word	134218293
 3273 0300 89030008 		.word	134218633
 3274 0304 B9030008 		.word	134218681
 3275 0308 B9040008 		.word	134218937
 3276 030c 00000000 		.word	.LANCHOR6
 3277 0310 00000000 		.word	.LANCHOR13
 3278 0314 59030008 		.word	134218585
 3279 0318 00000000 		.word	.LANCHOR18
 3280 031c 00000000 		.word	.LANCHOR8
 3281 0320 01040008 		.word	134218753
 3282 0324 81030008 		.word	134218625
 3283 0328 00000000 		.word	Pause
 3284 032c F5030008 		.word	134218741
 3285 0330 55020008 		.word	134218325
 3286 0334 2D040008 		.word	134218797
 3287 0338 1D020008 		.word	134218269
 3288 033c 00000000 		.word	.LANCHOR19
 3289 0340 00000000 		.word	.LANCHOR3
 3290 0344 00000000 		.word	.LANCHOR16
 3291 0348 00000000 		.word	Running
 3292 034c 00000000 		.word	.LANCHOR9
 3293 0350 00000000 		.word	.LANCHOR2
 3294 0354 F9030008 		.word	134218745
 3295              	.LVL277:
 3296              	.L234:
  89:src/menu.c    ****   }
 3297              		.loc 1 89 18 view .LVU914
ARM GAS  /tmp/cc7sTUNp.s 			page 91


 3298              	.LBE150:
 3299              	.LBE162:
 489:src/console.c **** 	  break;
 3300              		.loc 2 489 4 is_stmt 1 view .LVU915
 489:src/console.c **** 	  break;
 3301              		.loc 2 489 13 is_stmt 0 view .LVU916
 3302 0358 8A4B     		ldr	r3, .L284
 3303 035a 93E80300 		ldm	r3, {r0, r1}
 3304 035e 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 3305              	.LVL278:
 489:src/console.c **** 	  break;
 3306              		.loc 2 489 13 view .LVU917
 3307 0360 8AE80300 		stm	r10, {r0, r1}
 3308 0364 8946     		mov	r9, r1
 3309              	.LVL279:
 490:src/console.c **** 	case SHIFT_H:
 3310              		.loc 2 490 4 is_stmt 1 view .LVU918
 3311 0366 DBE6     		b	.L228
 3312              	.LVL280:
 3313              	.L269:
 3314              	.LBB163:
 3315              	.LBB151:
  92:src/menu.c    ****   }
 3316              		.loc 1 92 5 view .LVU919
  92:src/menu.c    ****   }
 3317              		.loc 1 92 18 is_stmt 0 view .LVU920
 3318 0368 874A     		ldr	r2, .L284+4
 3319 036a D2F80090 		ldr	r9, [r2]
 3320              	.LVL281:
  92:src/menu.c    ****   }
 3321              		.loc 1 92 18 view .LVU921
 3322 036e C6F80090 		str	r9, [r6]
 3323 0372 56E7     		b	.L232
 3324              	.LVL282:
 3325              	.L270:
  92:src/menu.c    ****   }
 3326              		.loc 1 92 18 view .LVU922
 3327              	.LBE151:
 3328              	.LBE163:
 3329              	.LBB164:
 3330              	.LBB136:
  90:src/console.c ****   }
 3331              		.loc 2 90 5 is_stmt 1 view .LVU923
  90:src/console.c ****   }
 3332              		.loc 2 90 27 is_stmt 0 view .LVU924
 3333 0374 854B     		ldr	r3, .L284+8
 3334 0376 C6E6     		b	.L260
 3335              	.L264:
  70:src/console.c ****       case SHIFT_N:
 3336              		.loc 2 70 7 is_stmt 1 view .LVU925
  70:src/console.c ****       case SHIFT_N:
 3337              		.loc 2 70 15 is_stmt 0 view .LVU926
 3338 0378 FFF7FEFF 		bl	cur_shift
 3339              	.LVL283:
  70:src/console.c ****       case SHIFT_N:
 3340              		.loc 2 70 7 view .LVU927
 3341 037c 0328     		cmp	r0, #3
ARM GAS  /tmp/cc7sTUNp.s 			page 92


  70:src/console.c ****       case SHIFT_N:
 3342              		.loc 2 70 15 view .LVU928
 3343 037e 0346     		mov	r3, r0
  70:src/console.c ****       case SHIFT_N:
 3344              		.loc 2 70 7 view .LVU929
 3345 0380 00F2B980 		bhi	.L240
 3346 0384 0128     		cmp	r0, #1
 3347 0386 43D8     		bhi	.L208
 3348 0388 0028     		cmp	r0, #0
 3349 038a 71D0     		beq	.L271
  73:src/console.c ****       case SHIFT_F:
 3350              		.loc 2 73 2 is_stmt 1 view .LVU930
  75:src/console.c **** 	break;
 3351              		.loc 2 75 2 view .LVU931
  75:src/console.c **** 	break;
 3352              		.loc 2 75 23 is_stmt 0 view .LVU932
 3353 038c 804B     		ldr	r3, .L284+12
 3354 038e 93E80300 		ldm	r3, {r0, r1}
 3355 0392 0DF1080A 		add	r10, sp, #8
 3356 0396 8AE80300 		stm	r10, {r0, r1}
 3357              	.LVL284:
  75:src/console.c **** 	break;
 3358              		.loc 2 75 23 view .LVU933
 3359              	.LBE136:
 3360              	.LBE164:
 481:src/console.c **** 	set_menu ( remapped.shift );
 3361              		.loc 2 481 7 is_stmt 1 view .LVU934
 497:src/console.c **** 	SET_ST(STAT_MENU);
 3362              		.loc 2 497 7 view .LVU935
 504:src/console.c **** 	remapped = do_multi (remapped);
 3363              		.loc 2 504 7 view .LVU936
 508:src/console.c ****       process_keycode_with_shift(remapped);
 3364              		.loc 2 508 7 view .LVU937
 3365              	.LBB165:
 3366              	.LBB137:
  75:src/console.c **** 	break;
 3367              		.loc 2 75 23 is_stmt 0 view .LVU938
 3368 039a 4FF00009 		mov	r9, #0
 3369 039e 2A25     		movs	r5, #42
 3370              	.LVL285:
  75:src/console.c **** 	break;
 3371              		.loc 2 75 23 view .LVU939
 3372 03a0 DFE6     		b	.L207
 3373              	.LVL286:
 3374              	.L219:
  96:src/console.c ****   case KEY_F2:
 3375              		.loc 2 96 5 is_stmt 1 view .LVU940
  96:src/console.c ****   case KEY_F2:
 3376              		.loc 2 96 9 is_stmt 0 view .LVU941
 3377 03a2 FFF7FEFF 		bl	cur_shift
 3378              	.LVL287:
  96:src/console.c ****   case KEY_F2:
 3379              		.loc 2 96 8 view .LVU942
 3380 03a6 0128     		cmp	r0, #1
 3381 03a8 00F0DA80 		beq	.L272
 3382              	.L217:
  98:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[1].shifted;
ARM GAS  /tmp/cc7sTUNp.s 			page 93


 3383              		.loc 2 98 5 is_stmt 1 view .LVU943
  98:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[1].shifted;
 3384              		.loc 2 98 9 is_stmt 0 view .LVU944
 3385 03ac FFF7FEFF 		bl	cur_shift
 3386              	.LVL288:
  98:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[1].shifted;
 3387              		.loc 2 98 8 view .LVU945
 3388 03b0 0028     		cmp	r0, #0
 3389 03b2 00F08580 		beq	.L273
  99:src/console.c ****   case KEY_F3:
 3390              		.loc 2 99 5 is_stmt 1 view .LVU946
  99:src/console.c ****   case KEY_F3:
 3391              		.loc 2 99 9 is_stmt 0 view .LVU947
 3392 03b6 FFF7FEFF 		bl	cur_shift
 3393              	.LVL289:
  99:src/console.c ****   case KEY_F3:
 3394              		.loc 2 99 8 view .LVU948
 3395 03ba 0128     		cmp	r0, #1
 3396 03bc 00F0C680 		beq	.L274
 3397              	.L216:
 101:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[2].shifted;
 3398              		.loc 2 101 5 is_stmt 1 view .LVU949
 101:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[2].shifted;
 3399              		.loc 2 101 9 is_stmt 0 view .LVU950
 3400 03c0 FFF7FEFF 		bl	cur_shift
 3401              	.LVL290:
 101:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[2].shifted;
 3402              		.loc 2 101 8 view .LVU951
 3403 03c4 0028     		cmp	r0, #0
 3404 03c6 71D0     		beq	.L275
 102:src/console.c ****   case KEY_F4:
 3405              		.loc 2 102 5 is_stmt 1 view .LVU952
 102:src/console.c ****   case KEY_F4:
 3406              		.loc 2 102 9 is_stmt 0 view .LVU953
 3407 03c8 FFF7FEFF 		bl	cur_shift
 3408              	.LVL291:
 102:src/console.c ****   case KEY_F4:
 3409              		.loc 2 102 8 view .LVU954
 3410 03cc 0128     		cmp	r0, #1
 3411 03ce 00F09580 		beq	.L276
 3412              	.L215:
 104:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[3].shifted;
 3413              		.loc 2 104 5 is_stmt 1 view .LVU955
 104:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[3].shifted;
 3414              		.loc 2 104 9 is_stmt 0 view .LVU956
 3415 03d2 FFF7FEFF 		bl	cur_shift
 3416              	.LVL292:
 104:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[3].shifted;
 3417              		.loc 2 104 8 view .LVU957
 3418 03d6 0028     		cmp	r0, #0
 3419 03d8 5ED0     		beq	.L277
 105:src/console.c ****   case KEY_F5:
 3420              		.loc 2 105 5 is_stmt 1 view .LVU958
 105:src/console.c ****   case KEY_F5:
 3421              		.loc 2 105 9 is_stmt 0 view .LVU959
 3422 03da FFF7FEFF 		bl	cur_shift
 3423              	.LVL293:
ARM GAS  /tmp/cc7sTUNp.s 			page 94


 105:src/console.c ****   case KEY_F5:
 3424              		.loc 2 105 8 view .LVU960
 3425 03de 0128     		cmp	r0, #1
 3426 03e0 00F0AA80 		beq	.L278
 3427              	.L214:
 107:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[4].shifted;
 3428              		.loc 2 107 5 is_stmt 1 view .LVU961
 107:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[4].shifted;
 3429              		.loc 2 107 9 is_stmt 0 view .LVU962
 3430 03e4 FFF7FEFF 		bl	cur_shift
 3431              	.LVL294:
 107:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[4].shifted;
 3432              		.loc 2 107 8 view .LVU963
 3433 03e8 0028     		cmp	r0, #0
 3434 03ea 4BD0     		beq	.L279
 108:src/console.c ****   case KEY_F6:
 3435              		.loc 2 108 5 is_stmt 1 view .LVU964
 108:src/console.c ****   case KEY_F6:
 3436              		.loc 2 108 9 is_stmt 0 view .LVU965
 3437 03ec FFF7FEFF 		bl	cur_shift
 3438              	.LVL295:
 108:src/console.c ****   case KEY_F6:
 3439              		.loc 2 108 8 view .LVU966
 3440 03f0 0128     		cmp	r0, #1
 3441 03f2 00F08D80 		beq	.L280
 3442              	.L212:
 110:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[5].shifted;
 3443              		.loc 2 110 5 is_stmt 1 view .LVU967
 110:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[5].shifted;
 3444              		.loc 2 110 9 is_stmt 0 view .LVU968
 3445 03f6 FFF7FEFF 		bl	cur_shift
 3446              	.LVL296:
 110:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[5].shifted;
 3447              		.loc 2 110 8 view .LVU969
 3448 03fa 58B9     		cbnz	r0, .L224
 110:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[5].shifted;
 3449              		.loc 2 110 33 is_stmt 1 view .LVU970
 110:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[5].shifted;
 3450              		.loc 2 110 67 is_stmt 0 view .LVU971
 3451 03fc 3168     		ldr	r1, [r6]
 3452 03fe 654A     		ldr	r2, .L284+16
 3453 0400 D023     		movs	r3, #208
 3454 0402 03FB01F3 		mul	r3, r3, r1
 3455 0406 D018     		adds	r0, r2, r3
 3456 0408 D0E92C01 		ldrd	r0, r1, [r0, #176]
 3457 040c B033     		adds	r3, r3, #176
 3458 040e 26E0     		b	.L259
 3459              	.L208:
  76:src/console.c ****       case SHIFT_G:
 3460              		.loc 2 76 2 is_stmt 1 view .LVU972
  78:src/console.c **** 	break;
 3461              		.loc 2 78 2 view .LVU973
  78:src/console.c **** 	break;
 3462              		.loc 2 78 9 is_stmt 0 view .LVU974
 3463 0410 614B     		ldr	r3, .L284+20
 3464 0412 F3E6     		b	.L261
 3465              	.L224:
ARM GAS  /tmp/cc7sTUNp.s 			page 95


 111:src/console.c ****   }
 3466              		.loc 2 111 5 is_stmt 1 view .LVU975
 111:src/console.c ****   }
 3467              		.loc 2 111 9 is_stmt 0 view .LVU976
 3468 0414 FFF7FEFF 		bl	cur_shift
 3469              	.LVL297:
 111:src/console.c ****   }
 3470              		.loc 2 111 8 view .LVU977
 3471 0418 0128     		cmp	r0, #1
 3472 041a 00F08380 		beq	.L281
 3473              	.L211:
 114:src/console.c ****   case SHIFT_N:    
 3474              		.loc 2 114 3 is_stmt 1 view .LVU978
 114:src/console.c ****   case SHIFT_N:    
 3475              		.loc 2 114 11 is_stmt 0 view .LVU979
 3476 041e FFF7FEFF 		bl	cur_shift
 3477              	.LVL298:
 114:src/console.c ****   case SHIFT_N:    
 3478              		.loc 2 114 3 view .LVU980
 3479 0422 0128     		cmp	r0, #1
 3480 0424 65D0     		beq	.L225
 3481 0426 0228     		cmp	r0, #2
 3482 0428 56D0     		beq	.L226
 3483 042a 0028     		cmp	r0, #0
 3484 042c 52D0     		beq	.L227
  55:src/console.c **** 
 3485              		.loc 2 55 41 view .LVU981
 3486 042e EDB2     		uxtb	r5, r5
 3487              	.LVL299:
  55:src/console.c **** 
 3488              		.loc 2 55 41 view .LVU982
 3489              	.LBE137:
 3490              	.LBE165:
 481:src/console.c **** 	set_menu ( remapped.shift );
 3491              		.loc 2 481 7 is_stmt 1 view .LVU983
 481:src/console.c **** 	set_menu ( remapped.shift );
 3492              		.loc 2 481 10 is_stmt 0 view .LVU984
 3493 0430 2F2D     		cmp	r5, #47
 3494 0432 7FF475AE 		bne	.L228
 482:src/console.c **** 	display_current_menu ();
 3495              		.loc 2 482 2 is_stmt 1 view .LVU985
 3496              	.LVL300:
 3497              	.LBB166:
  86:src/menu.c    ****   int m = current_menu;
 3498              		.loc 1 86 6 view .LVU986
 3499              	.LBB152:
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 3500              		.loc 1 87 3 view .LVU987
  87:src/menu.c    ****   if (new_menu == current_menu) { // return to default
 3501              		.loc 1 87 7 is_stmt 0 view .LVU988
 3502 0436 3368     		ldr	r3, [r6]
 3503              	.LVL301:
  88:src/menu.c    ****     current_menu = default_menu;
 3504              		.loc 1 88 3 is_stmt 1 view .LVU989
  88:src/menu.c    ****     current_menu = default_menu;
 3505              		.loc 1 88 6 is_stmt 0 view .LVU990
 3506 0438 002B     		cmp	r3, #0
ARM GAS  /tmp/cc7sTUNp.s 			page 96


 3507 043a 00F09B80 		beq	.L257
 3508 043e 0DF1080A 		add	r10, sp, #8
 3509 0442 ECE6     		b	.L229
 3510              	.LVL302:
 3511              	.L218:
  88:src/menu.c    ****     current_menu = default_menu;
 3512              		.loc 1 88 6 view .LVU991
 3513              	.LBE152:
 3514              	.LBE166:
 3515              	.LBB167:
 3516              	.LBB138:
  95:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[0].shifted;
 3517              		.loc 2 95 5 is_stmt 1 view .LVU992
  95:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[0].shifted;
 3518              		.loc 2 95 9 is_stmt 0 view .LVU993
 3519 0444 FFF7FEFF 		bl	cur_shift
 3520              	.LVL303:
  95:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[0].shifted;
 3521              		.loc 2 95 8 view .LVU994
 3522 0448 0028     		cmp	r0, #0
 3523 044a AAD1     		bne	.L219
  95:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[0].shifted;
 3524              		.loc 2 95 33 is_stmt 1 view .LVU995
  95:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[0].shifted;
 3525              		.loc 2 95 67 is_stmt 0 view .LVU996
 3526 044c 3168     		ldr	r1, [r6]
 3527 044e 514A     		ldr	r2, .L284+16
 3528 0450 D023     		movs	r3, #208
 3529 0452 03FB01F3 		mul	r3, r3, r1
 3530 0456 D018     		adds	r0, r2, r3
 3531 0458 D0E90401 		ldrd	r0, r1, [r0, #16]
 3532 045c 1033     		adds	r3, r3, #16
 3533              	.L259:
 110:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[5].shifted;
 3534              		.loc 2 110 67 view .LVU997
 3535 045e 0DF1080A 		add	r10, sp, #8
 3536 0462 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 3537              	.LVL304:
 110:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[5].shifted;
 3538              		.loc 2 110 67 view .LVU998
 3539 0464 8AE80300 		stm	r10, {r0, r1}
 3540 0468 1344     		add	r3, r3, r2
 3541 046a D3F80490 		ldr	r9, [r3, #4]
 3542              	.LVL305:
 110:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[5].shifted;
 3543              		.loc 2 110 67 view .LVU999
 3544 046e 55E6     		b	.L203
 3545              	.LVL306:
 3546              	.L271:
  72:src/console.c **** 	break;
 3547              		.loc 2 72 2 is_stmt 1 view .LVU1000
  72:src/console.c **** 	break;
 3548              		.loc 2 72 21 is_stmt 0 view .LVU1001
 3549 0470 4A4A     		ldr	r2, .L284+24
 3550 0472 92E80300 		ldm	r2, {r0, r1}
 3551 0476 0DF1080A 		add	r10, sp, #8
 3552 047a 8AE80300 		stm	r10, {r0, r1}
ARM GAS  /tmp/cc7sTUNp.s 			page 97


 3553              	.LVL307:
  72:src/console.c **** 	break;
 3554              		.loc 2 72 21 view .LVU1002
 3555              	.LBE138:
 3556              	.LBE167:
 481:src/console.c **** 	set_menu ( remapped.shift );
 3557              		.loc 2 481 7 is_stmt 1 view .LVU1003
 497:src/console.c **** 	SET_ST(STAT_MENU);
 3558              		.loc 2 497 7 view .LVU1004
 504:src/console.c **** 	remapped = do_multi (remapped);
 3559              		.loc 2 504 7 view .LVU1005
 508:src/console.c ****       process_keycode_with_shift(remapped);
 3560              		.loc 2 508 7 view .LVU1006
 3561              	.LBB168:
 3562              	.LBB139:
  72:src/console.c **** 	break;
 3563              		.loc 2 72 21 is_stmt 0 view .LVU1007
 3564 047e 9946     		mov	r9, r3
 3565 0480 2925     		movs	r5, #41
 3566              	.LVL308:
  72:src/console.c **** 	break;
 3567              		.loc 2 72 21 view .LVU1008
 3568 0482 6EE6     		b	.L207
 3569              	.LVL309:
 3570              	.L279:
 107:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[4].shifted;
 3571              		.loc 2 107 33 is_stmt 1 view .LVU1009
 107:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[4].shifted;
 3572              		.loc 2 107 67 is_stmt 0 view .LVU1010
 3573 0484 3168     		ldr	r1, [r6]
 3574 0486 434A     		ldr	r2, .L284+16
 3575 0488 D023     		movs	r3, #208
 3576 048a 03FB01F3 		mul	r3, r3, r1
 3577 048e D018     		adds	r0, r2, r3
 3578 0490 D0E92401 		ldrd	r0, r1, [r0, #144]
 3579 0494 9033     		adds	r3, r3, #144
 3580 0496 E2E7     		b	.L259
 3581              	.L277:
 104:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[3].shifted;
 3582              		.loc 2 104 33 is_stmt 1 view .LVU1011
 104:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[3].shifted;
 3583              		.loc 2 104 67 is_stmt 0 view .LVU1012
 3584 0498 3168     		ldr	r1, [r6]
 3585 049a 3E4A     		ldr	r2, .L284+16
 3586 049c D023     		movs	r3, #208
 3587 049e 03FB01F3 		mul	r3, r3, r1
 3588 04a2 D018     		adds	r0, r2, r3
 3589 04a4 D0E91C01 		ldrd	r0, r1, [r0, #112]
 3590 04a8 7033     		adds	r3, r3, #112
 3591 04aa D8E7     		b	.L259
 3592              	.L275:
 101:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[2].shifted;
 3593              		.loc 2 101 33 is_stmt 1 view .LVU1013
 101:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[2].shifted;
 3594              		.loc 2 101 67 is_stmt 0 view .LVU1014
 3595 04ac 3168     		ldr	r1, [r6]
 3596 04ae 394A     		ldr	r2, .L284+16
ARM GAS  /tmp/cc7sTUNp.s 			page 98


 3597 04b0 D023     		movs	r3, #208
 3598 04b2 03FB01F3 		mul	r3, r3, r1
 3599 04b6 D018     		adds	r0, r2, r3
 3600 04b8 D0E91401 		ldrd	r0, r1, [r0, #80]
 3601 04bc 5033     		adds	r3, r3, #80
 3602 04be CEE7     		b	.L259
 3603              	.L273:
  98:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[1].shifted;
 3604              		.loc 2 98 33 is_stmt 1 view .LVU1015
  98:src/console.c ****     if (cur_shift() == SHIFT_F) return Menus[current_menu].keys[1].shifted;
 3605              		.loc 2 98 67 is_stmt 0 view .LVU1016
 3606 04c0 3168     		ldr	r1, [r6]
 3607 04c2 344A     		ldr	r2, .L284+16
 3608 04c4 D023     		movs	r3, #208
 3609 04c6 03FB01F3 		mul	r3, r3, r1
 3610 04ca D018     		adds	r0, r2, r3
 3611 04cc D0E90C01 		ldrd	r0, r1, [r0, #48]
 3612 04d0 3033     		adds	r3, r3, #48
 3613 04d2 C4E7     		b	.L259
 3614              	.L227:
 116:src/console.c ****     break;
 3615              		.loc 2 116 5 is_stmt 1 view .LVU1017
 116:src/console.c ****     break;
 3616              		.loc 2 116 24 is_stmt 0 view .LVU1018
 3617 04d4 324B     		ldr	r3, .L284+28
 3618 04d6 16E6     		b	.L260
 3619              	.L226:
 120:src/console.c ****   case SHIFT_G:
 3620              		.loc 2 120 5 is_stmt 1 view .LVU1019
 122:src/console.c ****     break;
 3621              		.loc 2 122 5 view .LVU1020
 122:src/console.c ****     break;
 3622              		.loc 2 122 26 is_stmt 0 view .LVU1021
 3623 04d8 324B     		ldr	r3, .L284+32
 3624 04da 03EBC502 		add	r2, r3, r5, lsl #3
 3625 04de 92E80300 		ldm	r2, {r0, r1}
 3626 04e2 0DF1080A 		add	r10, sp, #8
 3627 04e6 8AE80300 		stm	r10, {r0, r1}
 3628 04ea 13F83550 		ldrb	r5, [r3, r5, lsl #3]	@ zero_extendqisi2
 3629              	.LVL310:
 122:src/console.c ****     break;
 3630              		.loc 2 122 26 view .LVU1022
 3631 04ee 8946     		mov	r9, r1
 3632              	.LVL311:
 122:src/console.c ****     break;
 3633              		.loc 2 122 26 view .LVU1023
 3634 04f0 14E6     		b	.L203
 3635              	.LVL312:
 3636              	.L225:
 117:src/console.c ****   case SHIFT_F:
 3637              		.loc 2 117 5 is_stmt 1 view .LVU1024
 119:src/console.c ****     break;
 3638              		.loc 2 119 5 view .LVU1025
 119:src/console.c ****     break;
 3639              		.loc 2 119 26 is_stmt 0 view .LVU1026
 3640 04f2 2D4B     		ldr	r3, .L284+36
 3641 04f4 07E6     		b	.L260
ARM GAS  /tmp/cc7sTUNp.s 			page 99


 3642              	.L240:
  70:src/console.c ****       case SHIFT_N:
 3643              		.loc 2 70 7 view .LVU1027
 3644 04f6 4FF00009 		mov	r9, #0
 3645 04fa 30E6     		b	.L262
 3646              	.L276:
 102:src/console.c ****   case KEY_F4:
 3647              		.loc 2 102 33 is_stmt 1 view .LVU1028
 102:src/console.c ****   case KEY_F4:
 3648              		.loc 2 102 67 is_stmt 0 view .LVU1029
 3649 04fc 3168     		ldr	r1, [r6]
 3650 04fe 254A     		ldr	r2, .L284+16
 3651 0500 D023     		movs	r3, #208
 3652 0502 03FB01F3 		mul	r3, r3, r1
 3653 0506 D018     		adds	r0, r2, r3
 3654 0508 D0E91601 		ldrd	r0, r1, [r0, #88]
 3655 050c 5833     		adds	r3, r3, #88
 3656 050e A6E7     		b	.L259
 3657              	.L280:
 108:src/console.c ****   case KEY_F6:
 3658              		.loc 2 108 33 is_stmt 1 view .LVU1030
 108:src/console.c ****   case KEY_F6:
 3659              		.loc 2 108 67 is_stmt 0 view .LVU1031
 3660 0510 3168     		ldr	r1, [r6]
 3661 0512 204A     		ldr	r2, .L284+16
 3662 0514 D023     		movs	r3, #208
 3663 0516 03FB01F3 		mul	r3, r3, r1
 3664 051a D018     		adds	r0, r2, r3
 3665 051c D0E92601 		ldrd	r0, r1, [r0, #152]
 3666 0520 9833     		adds	r3, r3, #152
 3667 0522 9CE7     		b	.L259
 3668              	.L281:
 111:src/console.c ****   }
 3669              		.loc 2 111 33 is_stmt 1 view .LVU1032
 111:src/console.c ****   }
 3670              		.loc 2 111 67 is_stmt 0 view .LVU1033
 3671 0524 3168     		ldr	r1, [r6]
 3672 0526 1B4A     		ldr	r2, .L284+16
 3673 0528 D023     		movs	r3, #208
 3674 052a 03FB01F3 		mul	r3, r3, r1
 3675 052e D018     		adds	r0, r2, r3
 3676 0530 D0E92E01 		ldrd	r0, r1, [r0, #184]
 3677 0534 B833     		adds	r3, r3, #184
 3678 0536 92E7     		b	.L259
 3679              	.L278:
 105:src/console.c ****   case KEY_F5:
 3680              		.loc 2 105 33 is_stmt 1 view .LVU1034
 105:src/console.c ****   case KEY_F5:
 3681              		.loc 2 105 67 is_stmt 0 view .LVU1035
 3682 0538 3168     		ldr	r1, [r6]
 3683 053a 164A     		ldr	r2, .L284+16
 3684 053c D023     		movs	r3, #208
 3685 053e 03FB01F3 		mul	r3, r3, r1
 3686 0542 D018     		adds	r0, r2, r3
 3687 0544 D0E91E01 		ldrd	r0, r1, [r0, #120]
 3688 0548 7833     		adds	r3, r3, #120
 3689 054a 88E7     		b	.L259
ARM GAS  /tmp/cc7sTUNp.s 			page 100


 3690              	.L274:
  99:src/console.c ****   case KEY_F3:
 3691              		.loc 2 99 33 is_stmt 1 view .LVU1036
  99:src/console.c ****   case KEY_F3:
 3692              		.loc 2 99 67 is_stmt 0 view .LVU1037
 3693 054c 3168     		ldr	r1, [r6]
 3694 054e 114A     		ldr	r2, .L284+16
 3695 0550 D023     		movs	r3, #208
 3696 0552 03FB01F3 		mul	r3, r3, r1
 3697 0556 D018     		adds	r0, r2, r3
 3698 0558 D0E90E01 		ldrd	r0, r1, [r0, #56]
 3699 055c 3833     		adds	r3, r3, #56
 3700 055e 7EE7     		b	.L259
 3701              	.L272:
  96:src/console.c ****   case KEY_F2:
 3702              		.loc 2 96 33 is_stmt 1 view .LVU1038
  96:src/console.c ****   case KEY_F2:
 3703              		.loc 2 96 67 is_stmt 0 view .LVU1039
 3704 0560 3168     		ldr	r1, [r6]
 3705 0562 0C4A     		ldr	r2, .L284+16
 3706 0564 D023     		movs	r3, #208
 3707 0566 03FB01F3 		mul	r3, r3, r1
 3708 056a D018     		adds	r0, r2, r3
 3709 056c D0E90601 		ldrd	r0, r1, [r0, #24]
 3710 0570 1833     		adds	r3, r3, #24
 3711 0572 74E7     		b	.L259
 3712              	.LVL313:
 3713              	.L257:
  96:src/console.c ****   case KEY_F2:
 3714              		.loc 2 96 67 view .LVU1040
 3715              	.LBE139:
 3716              	.LBE168:
 3717              	.LBB169:
 3718              	.LBB153:
  89:src/menu.c    ****   }
 3719              		.loc 1 89 5 is_stmt 1 view .LVU1041
  89:src/menu.c    ****   }
 3720              		.loc 1 89 18 is_stmt 0 view .LVU1042
 3721 0574 0D4A     		ldr	r2, .L284+40
 3722 0576 D2F80090 		ldr	r9, [r2]
 3723 057a C6F80090 		str	r9, [r6]
  97:src/menu.c    **** }
 3724              		.loc 1 97 3 is_stmt 1 view .LVU1043
 3725 057e 0DF1080A 		add	r10, sp, #8
 3726 0582 50E6     		b	.L230
 3727              	.L285:
 3728              		.align	2
 3729              	.L284:
 3730 0584 00000000 		.word	.LANCHOR17
 3731 0588 00000000 		.word	.LANCHOR3
 3732 058c 00000000 		.word	.LANCHOR14
 3733 0590 E0000000 		.word	.LANCHOR11+224
 3734 0594 00000000 		.word	.LANCHOR4
 3735 0598 00000000 		.word	.LANCHOR12
 3736 059c E0000000 		.word	.LANCHOR10+224
 3737 05a0 00000000 		.word	.LANCHOR10
 3738 05a4 00000000 		.word	.LANCHOR15
ARM GAS  /tmp/cc7sTUNp.s 			page 101


 3739 05a8 00000000 		.word	.LANCHOR11
 3740 05ac 00000000 		.word	.LANCHOR2
 3741              	.LBE153:
 3742              	.LBE169:
 3743              		.cfi_endproc
 3744              	.LFE28:
 3746              		.global	n_p
 3747              		.comm	print_string,22,4
 3748              		.global	spaces
 3749              		.global	release
 3750              		.global	h_shift
 3751              		.global	g_shift
 3752              		.global	f_shift
 3753              		.global	heartbeat
 3754              		.global	no_key
 3755              		.global	MID_MENU
 3756              		.section	.rodata.str1.4,"aMS",%progbits,1
 3757              		.align	2
 3758              	.LC13:
 3759 0000 53797374 		.ascii	"System!\000"
 3759      656D2100 
 3760              		.global	mid_menu
 3761              		.section	.rodata
 3762              		.align	2
 3763              		.set	.LANCHOR5,. + 0
 3764              	.LC9:
 3765 0000 01020304 		.ascii	"\001\002\003\004*+\007\010\011\034\013\014\015\016\017"
 3765      2A2B0708 
 3765      091C0B0C 
 3765      0D0E0F
 3766 000f 10110006 		.ascii	"\020\021\000\006\023\024\025\026\000\022\030\031\032"
 3766      13141516 
 3766      00121819 
 3766      1A
 3767 001c 1B00171D 		.ascii	"\033\000\027\035\036\037 \000!\"#$%"
 3767      1E1F2000 
 3767      21222324 
 3767      25
 3768              		.section	.bss.current_menu,"aw",%nobits
 3769              		.align	2
 3770              		.set	.LANCHOR1,. + 0
 3773              	current_menu:
 3774 0000 00000000 		.space	4
 3775              		.section	.bss.default_menu,"aw",%nobits
 3776              		.align	2
 3777              		.set	.LANCHOR2,. + 0
 3780              	default_menu:
 3781 0000 00000000 		.space	4
 3782              		.section	.bss.last_menu,"aw",%nobits
 3783              		.align	2
 3784              		.set	.LANCHOR3,. + 0
 3787              	last_menu:
 3788 0000 00000000 		.space	4
 3789              		.section	.bss.mdots,"aw",%nobits
 3790              		.align	2
 3791              		.set	.LANCHOR0,. + 0
 3794              	mdots:
ARM GAS  /tmp/cc7sTUNp.s 			page 102


 3795 0000 00000000 		.space	400
 3795      00000000 
 3795      00000000 
 3795      00000000 
 3795      00000000 
 3796              		.section	.bss.n_p,"aw",%nobits
 3797              		.align	2
 3800              	n_p:
 3801 0000 00000000 		.space	4
 3802              		.section	.bss.start_ticks,"aw",%nobits
 3803              		.align	2
 3804              		.set	.LANCHOR6,. + 0
 3807              	start_ticks:
 3808 0000 00000000 		.space	4
 3809              		.section	.data.f_shift,"aw"
 3810              		.align	2
 3811              		.set	.LANCHOR16,. + 0
 3814              	f_shift:
 3815 0000 29       		.byte	41
 3816 0001 000000   		.space	3
 3817 0004 FFFFFFFF 		.word	-1
 3818              		.section	.data.g_shift,"aw"
 3819              		.align	2
 3820              		.set	.LANCHOR17,. + 0
 3823              	g_shift:
 3824 0000 2A       		.byte	42
 3825 0001 000000   		.space	3
 3826 0004 FFFFFFFF 		.word	-1
 3827              		.section	.data.h_shift,"aw"
 3828              		.align	2
 3829              		.set	.LANCHOR12,. + 0
 3832              	h_shift:
 3833 0000 2B       		.byte	43
 3834 0001 000000   		.space	3
 3835 0004 FFFFFFFF 		.word	-1
 3836              		.section	.data.heartbeat,"aw"
 3837              		.align	2
 3838              		.set	.LANCHOR19,. + 0
 3841              	heartbeat:
 3842 0000 62       		.byte	98
 3843 0001 000000   		.space	3
 3844 0004 FFFFFFFF 		.word	-1
 3845              		.section	.data.no_key,"aw"
 3846              		.align	2
 3847              		.set	.LANCHOR8,. + 0
 3850              	no_key:
 3851 0000 2E       		.byte	46
 3852 0001 000000   		.space	3
 3853 0004 00000000 		.word	0
 3854              		.section	.data.release,"aw"
 3855              		.align	2
 3856              		.set	.LANCHOR9,. + 0
 3859              	release:
 3860 0000 63       		.byte	99
 3861 0001 000000   		.space	3
 3862 0004 FFFFFFFF 		.word	-1
 3863              		.section	.data.spaces,"aw"
ARM GAS  /tmp/cc7sTUNp.s 			page 103


 3864              		.align	2
 3865              		.set	.LANCHOR7,. + 0
 3868              	spaces:
 3869 0000 20202020 		.ascii	"                     \000"
 3869      20202020 
 3869      20202020 
 3869      20202020 
 3869      20202020 
 3870              		.section	.rodata.MID_MENU,"a"
 3871              		.align	2
 3872              		.set	.LANCHOR18,. + 0
 3875              	MID_MENU:
 3876 0000 00000000 		.word	.LC13
 3877 0004 00000000 		.word	mid_menu
 3878 0008 00000000 		.word	0
 3879 000c 00000000 		.word	0
 3880              		.section	.rodata.Menus,"a"
 3881              		.align	2
 3882              		.set	.LANCHOR4,. + 0
 3885              	Menus:
 3886 0000 426C616E 		.ascii	"Blank\000"
 3886      6B00
 3887 0006 00000000 		.space	9
 3887      00000000 
 3887      00
 3888 000f 00       		.space	1
 3889 0010 2E       		.byte	46
 3890 0011 000000   		.space	3
 3891 0014 FFFFFFFF 		.word	-1
 3892 0018 2E       		.byte	46
 3893 0019 000000   		.space	3
 3894 001c FFFFFFFF 		.word	-1
 3895 0020 00       		.ascii	"\000"
 3896 0021 00000000 		.space	7
 3896      000000
 3897 0028 00       		.ascii	"\000"
 3898 0029 00000000 		.space	7
 3898      000000
 3899 0030 2E       		.byte	46
 3900 0031 000000   		.space	3
 3901 0034 FFFFFFFF 		.word	-1
 3902 0038 2E       		.byte	46
 3903 0039 000000   		.space	3
 3904 003c FFFFFFFF 		.word	-1
 3905 0040 00       		.ascii	"\000"
 3906 0041 00000000 		.space	7
 3906      000000
 3907 0048 00       		.ascii	"\000"
 3908 0049 00000000 		.space	7
 3908      000000
 3909 0050 2E       		.byte	46
 3910 0051 000000   		.space	3
 3911 0054 FFFFFFFF 		.word	-1
 3912 0058 2E       		.byte	46
 3913 0059 000000   		.space	3
 3914 005c FFFFFFFF 		.word	-1
 3915 0060 00       		.ascii	"\000"
ARM GAS  /tmp/cc7sTUNp.s 			page 104


 3916 0061 00000000 		.space	7
 3916      000000
 3917 0068 00       		.ascii	"\000"
 3918 0069 00000000 		.space	7
 3918      000000
 3919 0070 2E       		.byte	46
 3920 0071 000000   		.space	3
 3921 0074 FFFFFFFF 		.word	-1
 3922 0078 2E       		.byte	46
 3923 0079 000000   		.space	3
 3924 007c FFFFFFFF 		.word	-1
 3925 0080 00       		.ascii	"\000"
 3926 0081 00000000 		.space	7
 3926      000000
 3927 0088 00       		.ascii	"\000"
 3928 0089 00000000 		.space	7
 3928      000000
 3929 0090 2C       		.byte	44
 3930 0091 000000   		.space	3
 3931 0094 FFFFFFFF 		.word	-1
 3932 0098 2E       		.byte	46
 3933 0099 000000   		.space	3
 3934 009c FFFFFFFF 		.word	-1
 3935 00a0 2D2D0D00 		.ascii	"--\015\000"
 3936 00a4 00000000 		.space	4
 3937 00a8 00       		.ascii	"\000"
 3938 00a9 00000000 		.space	7
 3938      000000
 3939 00b0 2D       		.byte	45
 3940 00b1 000000   		.space	3
 3941 00b4 FFFFFFFF 		.word	-1
 3942 00b8 31       		.byte	49
 3943 00b9 000000   		.space	3
 3944 00bc 0B000000 		.word	11
 3945 00c0 43505800 		.ascii	"CPX\000"
 3946 00c4 00000000 		.space	4
 3947 00c8 00       		.ascii	"\000"
 3948 00c9 00000000 		.space	7
 3948      000000
 3949 00d0 436C6561 		.ascii	"Clear\000"
 3949      7200
 3950 00d6 00000000 		.space	9
 3950      00000000 
 3950      00
 3951 00df 00       		.space	1
 3952 00e0 10       		.byte	16
 3953 00e1 000000   		.space	3
 3954 00e4 01000000 		.word	1
 3955 00e8 34       		.byte	52
 3956 00e9 000000   		.space	3
 3957 00ec 44010000 		.word	324
 3958 00f0 434C5072 		.ascii	"CLProg\000"
 3958      6F6700
 3959 00f7 00       		.space	1
 3960 00f8 434C5041 		.ascii	"CLPAll\000"
 3960      6C6C00
 3961 00ff 00       		.space	1
ARM GAS  /tmp/cc7sTUNp.s 			page 105


 3962 0100 10       		.byte	16
 3963 0101 000000   		.space	3
 3964 0104 02000000 		.word	2
 3965 0108 34       		.byte	52
 3966 0109 000000   		.space	3
 3967 010c 3E010000 		.word	318
 3968 0110 434C9100 		.ascii	"CL\221\000"
 3969 0114 00000000 		.space	4
 3970 0118 434C5265 		.ascii	"CLReg\000"
 3970      6700
 3971 011e 0000     		.space	2
 3972 0120 10       		.byte	16
 3973 0121 000000   		.space	3
 3974 0124 03000000 		.word	3
 3975 0128 34       		.byte	52
 3976 0129 000000   		.space	3
 3977 012c 74010000 		.word	372
 3978 0130 434C7800 		.ascii	"CLx\000"
 3979 0134 00000000 		.space	4
 3980 0138 434C06A0 		.ascii	"CL\006\240\000"
 3980      00
 3981 013d 000000   		.space	3
 3982 0140 34       		.byte	52
 3983 0141 000000   		.space	3
 3984 0144 40010000 		.word	320
 3985 0148 34       		.byte	52
 3986 0149 000000   		.space	3
 3987 014c 41010000 		.word	321
 3988 0150 434C5374 		.ascii	"CLStk\000"
 3988      6B00
 3989 0156 0000     		.space	2
 3990 0158 434C416C 		.ascii	"CLAll\000"
 3990      6C00
 3991 015e 0000     		.space	2
 3992 0160 2C       		.byte	44
 3993 0161 000000   		.space	3
 3994 0164 FFFFFFFF 		.word	-1
 3995 0168 2E       		.byte	46
 3996 0169 000000   		.space	3
 3997 016c FFFFFFFF 		.word	-1
 3998 0170 2D2D0D00 		.ascii	"--\015\000"
 3999 0174 00000000 		.space	4
 4000 0178 00       		.ascii	"\000"
 4001 0179 00000000 		.space	7
 4001      000000
 4002 0180 2D       		.byte	45
 4003 0181 000000   		.space	3
 4004 0184 FFFFFFFF 		.word	-1
 4005 0188 2E       		.byte	46
 4006 0189 000000   		.space	3
 4007 018c FFFFFFFF 		.word	-1
 4008 0190 43505800 		.ascii	"CPX\000"
 4009 0194 00000000 		.space	4
 4010 0198 00       		.ascii	"\000"
 4011 0199 00000000 		.space	7
 4011      000000
 4012 01a0 44495350 		.ascii	"DISP\000"
ARM GAS  /tmp/cc7sTUNp.s 			page 106


 4012      00
 4013 01a5 00000000 		.space	10
 4013      00000000 
 4013      0000
 4014 01af 00       		.space	1
 4015 01b0 00       		.byte	0
 4016 01b1 000000   		.space	3
 4017 01b4 03000000 		.word	3
 4018 01b8 05       		.byte	5
 4019 01b9 000000   		.space	3
 4020 01bc 01000000 		.word	1
 4021 01c0 414C4C00 		.ascii	"ALL\000"
 4022 01c4 00000000 		.space	4
 4023 01c8 6120622F 		.ascii	"a b/c\000"
 4023      6300
 4024 01ce 0000     		.space	2
 4025 01d0 01       		.byte	1
 4026 01d1 000000   		.space	3
 4027 01d4 03000000 		.word	3
 4028 01d8 05       		.byte	5
 4029 01d9 000000   		.space	3
 4030 01dc 02000000 		.word	2
 4031 01e0 46495800 		.ascii	"FIX\000"
 4032 01e4 00000000 		.space	4
 4033 01e8 642F6300 		.ascii	"d/c\000"
 4034 01ec 00000000 		.space	4
 4035 01f0 02       		.byte	2
 4036 01f1 000000   		.space	3
 4037 01f4 03000000 		.word	3
 4038 01f8 06       		.byte	6
 4039 01f9 000000   		.space	3
 4040 01fc 01000000 		.word	1
 4041 0200 53434900 		.ascii	"SCI\000"
 4042 0204 00000000 		.space	4
 4043 0208 482E4D53 		.ascii	"H.MS\000"
 4043      00
 4044 020d 000000   		.space	3
 4045 0210 03       		.byte	3
 4046 0211 000000   		.space	3
 4047 0214 03000000 		.word	3
 4048 0218 07       		.byte	7
 4049 0219 000000   		.space	3
 4050 021c 01000000 		.word	1
 4051 0220 454E4700 		.ascii	"ENG\000"
 4052 0224 00000000 		.space	4
 4053 0228 482E6400 		.ascii	"H.d\000"
 4054 022c 00000000 		.space	4
 4055 0230 2C       		.byte	44
 4056 0231 000000   		.space	3
 4057 0234 FFFFFFFF 		.word	-1
 4058 0238 26       		.byte	38
 4059 0239 000000   		.space	3
 4060 023c 03000000 		.word	3
 4061 0240 2D2D0D00 		.ascii	"--\015\000"
 4062 0244 00000000 		.space	4
 4063 0248 2E2F2C00 		.ascii	"./,\000"
 4064 024c 00000000 		.space	4
ARM GAS  /tmp/cc7sTUNp.s 			page 107


 4065 0250 2D       		.byte	45
 4066 0251 000000   		.space	3
 4067 0254 FFFFFFFF 		.word	-1
 4068 0258 2E       		.byte	46
 4069 0259 000000   		.space	3
 4070 025c FFFFFFFF 		.word	-1
 4071 0260 43505800 		.ascii	"CPX\000"
 4072 0264 00000000 		.space	4
 4073 0268 00       		.ascii	"\000"
 4074 0269 00000000 		.space	7
 4074      000000
 4075 0270 42415345 		.ascii	"BASE\000"
 4075      00
 4076 0275 00000000 		.space	10
 4076      00000000 
 4076      0000
 4077 027f 00       		.space	1
 4078 0280 0E       		.byte	14
 4079 0281 000000   		.space	3
 4080 0284 01000000 		.word	1
 4081 0288 0E       		.byte	14
 4082 0289 000000   		.space	3
 4083 028c 03000000 		.word	3
 4084 0290 42494E00 		.ascii	"BIN\000"
 4085 0294 00000000 		.space	4
 4086 0298 6E6F7400 		.ascii	"not\000"
 4087 029c 00000000 		.space	4
 4088 02a0 0E       		.byte	14
 4089 02a1 000000   		.space	3
 4090 02a4 02000000 		.word	2
 4091 02a8 13       		.byte	19
 4092 02a9 000000   		.space	3
 4093 02ac 03000000 		.word	3
 4094 02b0 4F435400 		.ascii	"OCT\000"
 4095 02b4 00000000 		.space	4
 4096 02b8 616E6400 		.ascii	"and\000"
 4097 02bc 00000000 		.space	4
 4098 02c0 0F       		.byte	15
 4099 02c1 000000   		.space	3
 4100 02c4 01000000 		.word	1
 4101 02c8 14       		.byte	20
 4102 02c9 000000   		.space	3
 4103 02cc 03000000 		.word	3
 4104 02d0 44454300 		.ascii	"DEC\000"
 4105 02d4 00000000 		.space	4
 4106 02d8 6F7200   		.ascii	"or\000"
 4107 02db 00000000 		.space	5
 4107      00
 4108 02e0 0F       		.byte	15
 4109 02e1 000000   		.space	3
 4110 02e4 02000000 		.word	2
 4111 02e8 15       		.byte	21
 4112 02e9 000000   		.space	3
 4113 02ec 03000000 		.word	3
 4114 02f0 48455800 		.ascii	"HEX\000"
 4115 02f4 00000000 		.space	4
 4116 02f8 786F7200 		.ascii	"xor\000"
ARM GAS  /tmp/cc7sTUNp.s 			page 108


 4117 02fc 00000000 		.space	4
 4118 0300 2C       		.byte	44
 4119 0301 000000   		.space	3
 4120 0304 FFFFFFFF 		.word	-1
 4121 0308 16       		.byte	22
 4122 0309 000000   		.space	3
 4123 030c 03000000 		.word	3
 4124 0310 2D2D0D00 		.ascii	"--\015\000"
 4125 0314 00000000 		.space	4
 4126 0318 524D4452 		.ascii	"RMDR\000"
 4126      00
 4127 031d 000000   		.space	3
 4128 0320 2D       		.byte	45
 4129 0321 000000   		.space	3
 4130 0324 FFFFFFFF 		.word	-1
 4131 0328 07       		.byte	7
 4132 0329 000000   		.space	3
 4133 032c 01000000 		.word	1
 4134 0330 43505800 		.ascii	"CPX\000"
 4135 0334 00000000 		.space	4
 4136 0338 482E6400 		.ascii	"H.d\000"
 4137 033c 00000000 		.space	4
 4138 0340 414E474C 		.ascii	"ANGLES\000"
 4138      455300
 4139 0347 00000000 		.space	8
 4139      00000000 
 4140 034f 00       		.space	1
 4141 0350 06       		.byte	6
 4142 0351 000000   		.space	3
 4143 0354 02000000 		.word	2
 4144 0358 04       		.byte	4
 4145 0359 000000   		.space	3
 4146 035c 01000000 		.word	1
 4147 0360 44454700 		.ascii	"DEG\000"
 4148 0364 00000000 		.space	4
 4149 0368 500D5200 		.ascii	"P\015R\000"
 4150 036c 00000000 		.space	4
 4151 0370 07       		.byte	7
 4152 0371 000000   		.space	3
 4153 0374 02000000 		.word	2
 4154 0378 04       		.byte	4
 4155 0379 000000   		.space	3
 4156 037c 02000000 		.word	2
 4157 0380 52414400 		.ascii	"RAD\000"
 4158 0384 00000000 		.space	4
 4159 0388 520D5000 		.ascii	"R\015P\000"
 4160 038c 00000000 		.space	4
 4161 0390 08       		.byte	8
 4162 0391 000000   		.space	3
 4163 0394 02000000 		.word	2
 4164 0398 00       		.byte	0
 4165 0399 000000   		.space	3
 4166 039c 01000000 		.word	1
 4167 03a0 47524144 		.ascii	"GRAD\000"
 4167      00
 4168 03a5 000000   		.space	3
 4169 03a8 48595000 		.ascii	"HYP\000"
ARM GAS  /tmp/cc7sTUNp.s 			page 109


 4170 03ac 00000000 		.space	4
 4171 03b0 06       		.byte	6
 4172 03b1 000000   		.space	3
 4173 03b4 01000000 		.word	1
 4174 03b8 07       		.byte	7
 4175 03b9 000000   		.space	3
 4176 03bc 01000000 		.word	1
 4177 03c0 482E4D53 		.ascii	"H.MS\000"
 4177      00
 4178 03c5 000000   		.space	3
 4179 03c8 482E6400 		.ascii	"H.d\000"
 4180 03cc 00000000 		.space	4
 4181 03d0 2C       		.byte	44
 4182 03d1 000000   		.space	3
 4183 03d4 FFFFFFFF 		.word	-1
 4184 03d8 00       		.byte	0
 4185 03d9 000000   		.space	3
 4186 03dc 02000000 		.word	2
 4187 03e0 2D2D0D00 		.ascii	"--\015\000"
 4188 03e4 00000000 		.space	4
 4189 03e8 4859509D 		.ascii	"HYP\235\000"
 4189      00
 4190 03ed 000000   		.space	3
 4191 03f0 2D       		.byte	45
 4192 03f1 000000   		.space	3
 4193 03f4 FFFFFFFF 		.word	-1
 4194 03f8 2E       		.byte	46
 4195 03f9 000000   		.space	3
 4196 03fc FFFFFFFF 		.word	-1
 4197 0400 43505800 		.ascii	"CPX\000"
 4198 0404 00000000 		.space	4
 4199 0408 00       		.ascii	"\000"
 4200 0409 00000000 		.space	7
 4200      000000
 4201 0410 4D495343 		.ascii	"MISC\000"
 4201      00
 4202 0415 00000000 		.space	10
 4202      00000000 
 4202      0000
 4203 041f 00       		.space	1
 4204 0420 25       		.byte	37
 4205 0421 000000   		.space	3
 4206 0424 01000000 		.word	1
 4207 0428 14       		.byte	20
 4208 0429 000000   		.space	3
 4209 042c 01000000 		.word	1
 4210 0430 7C587C00 		.ascii	"|X|\000"
 4211 0434 00000000 		.space	4
 4212 0438 329C00   		.ascii	"2\234\000"
 4213 043b 00000000 		.space	5
 4213      00
 4214 0440 25       		.byte	37
 4215 0441 000000   		.space	3
 4216 0444 02000000 		.word	2
 4217 0448 14       		.byte	20
 4218 0449 000000   		.space	3
 4219 044c 02000000 		.word	2
ARM GAS  /tmp/cc7sTUNp.s 			page 110


 4220 0450 524E4400 		.ascii	"RND\000"
 4221 0454 00000000 		.space	4
 4222 0458 4C6F67BA 		.ascii	"Log\272\000"
 4222      00
 4223 045d 000000   		.space	3
 4224 0460 26       		.byte	38
 4225 0461 000000   		.space	3
 4226 0464 01000000 		.word	1
 4227 0468 15       		.byte	21
 4228 0469 000000   		.space	3
 4229 046c 02000000 		.word	2
 4230 0470 49506172 		.ascii	"IPart\000"
 4230      7400
 4231 0476 0000     		.space	2
 4232 0478 4C6F678B 		.ascii	"Log\213\000"
 4232      00
 4233 047d 000000   		.space	3
 4234 0480 26       		.byte	38
 4235 0481 000000   		.space	3
 4236 0484 02000000 		.word	2
 4237 0488 16       		.byte	22
 4238 0489 000000   		.space	3
 4239 048c 02000000 		.word	2
 4240 0490 46506172 		.ascii	"FPart\000"
 4240      7400
 4241 0496 0000     		.space	2
 4242 0498 7C7C656C 		.ascii	"||el\000"
 4242      00
 4243 049d 000000   		.space	3
 4244 04a0 2C       		.byte	44
 4245 04a1 000000   		.space	3
 4246 04a4 FFFFFFFF 		.word	-1
 4247 04a8 22       		.byte	34
 4248 04a9 000000   		.space	3
 4249 04ac 02000000 		.word	2
 4250 04b0 2D2D0D00 		.ascii	"--\015\000"
 4251 04b4 00000000 		.space	4
 4252 04b8 832500   		.ascii	"\203%\000"
 4253 04bb 00000000 		.space	5
 4253      00
 4254 04c0 2D       		.byte	45
 4255 04c1 000000   		.space	3
 4256 04c4 FFFFFFFF 		.word	-1
 4257 04c8 2E       		.byte	46
 4258 04c9 000000   		.space	3
 4259 04cc FFFFFFFF 		.word	-1
 4260 04d0 43505800 		.ascii	"CPX\000"
 4261 04d4 00000000 		.space	4
 4262 04d8 00       		.ascii	"\000"
 4263 04d9 00000000 		.space	7
 4263      000000
 4264 04e0 583C3E59 		.ascii	"X<>Y Key\000"
 4264      204B6579 
 4264      00
 4265 04e9 00000000 		.space	6
 4265      0000
 4266 04ef 00       		.space	1
ARM GAS  /tmp/cc7sTUNp.s 			page 111


 4267 04f0 0D       		.byte	13
 4268 04f1 000000   		.space	3
 4269 04f4 01000000 		.word	1
 4270 04f8 2E       		.byte	46
 4271 04f9 000000   		.space	3
 4272 04fc FFFFFFFF 		.word	-1
 4273 0500 53686F77 		.ascii	"Show\016\000"
 4273      0E00
 4274 0506 0000     		.space	2
 4275 0508 00       		.ascii	"\000"
 4276 0509 00000000 		.space	7
 4276      000000
 4277 0510 0D       		.byte	13
 4278 0511 000000   		.space	3
 4279 0514 02000000 		.word	2
 4280 0518 2E       		.byte	46
 4281 0519 000000   		.space	3
 4282 051c FFFFFFFF 		.word	-1
 4283 0520 53686F77 		.ascii	"Show\015\000"
 4283      0D00
 4284 0526 0000     		.space	2
 4285 0528 00       		.ascii	"\000"
 4286 0529 00000000 		.space	7
 4286      000000
 4287 0530 0D       		.byte	13
 4288 0531 000000   		.space	3
 4289 0534 03000000 		.word	3
 4290 0538 34       		.byte	52
 4291 0539 000000   		.space	3
 4292 053c 00330000 		.word	13056
 4293 0540 78173F00 		.ascii	"x\027?\000"
 4294 0544 00000000 		.space	4
 4295 0548 7A173F00 		.ascii	"z\027?\000"
 4296 054c 00000000 		.space	4
 4297 0550 34       		.byte	52
 4298 0551 000000   		.space	3
 4299 0554 00320000 		.word	12800
 4300 0558 34       		.byte	52
 4301 0559 000000   		.space	3
 4302 055c 00340000 		.word	13312
 4303 0560 79173F00 		.ascii	"y\027?\000"
 4304 0564 00000000 		.space	4
 4305 0568 74173F00 		.ascii	"t\027?\000"
 4306 056c 00000000 		.space	4
 4307 0570 2C       		.byte	44
 4308 0571 000000   		.space	3
 4309 0574 FFFFFFFF 		.word	-1
 4310 0578 2E       		.byte	46
 4311 0579 000000   		.space	3
 4312 057c FFFFFFFF 		.word	-1
 4313 0580 2D2D0D00 		.ascii	"--\015\000"
 4314 0584 00000000 		.space	4
 4315 0588 00       		.ascii	"\000"
 4316 0589 00000000 		.space	7
 4316      000000
 4317 0590 2D       		.byte	45
 4318 0591 000000   		.space	3
ARM GAS  /tmp/cc7sTUNp.s 			page 112


 4319 0594 FFFFFFFF 		.word	-1
 4320 0598 2E       		.byte	46
 4321 0599 000000   		.space	3
 4322 059c FFFFFFFF 		.word	-1
 4323 05a0 43505800 		.ascii	"CPX\000"
 4324 05a4 00000000 		.space	4
 4325 05a8 00       		.ascii	"\000"
 4326 05a9 00000000 		.space	7
 4326      000000
 4327 05b0 50726F67 		.ascii	"Program\000"
 4327      72616D00 
 4328 05b8 00000000 		.space	7
 4328      000000
 4329 05bf 00       		.space	1
 4330 05c0 27       		.byte	39
 4331 05c1 000000   		.space	3
 4332 05c4 01000000 		.word	1
 4333 05c8 28       		.byte	40
 4334 05c9 000000   		.space	3
 4335 05cc 01000000 		.word	1
 4336 05d0 4C424C00 		.ascii	"LBL\000"
 4337 05d4 00000000 		.space	4
 4338 05d8 44534500 		.ascii	"DSE\000"
 4339 05dc 00000000 		.space	4
 4340 05e0 27       		.byte	39
 4341 05e1 000000   		.space	3
 4342 05e4 02000000 		.word	2
 4343 05e8 28       		.byte	40
 4344 05e9 000000   		.space	3
 4345 05ec 02000000 		.word	2
 4346 05f0 52544E00 		.ascii	"RTN\000"
 4347 05f4 00000000 		.space	4
 4348 05f8 49534700 		.ascii	"ISG\000"
 4349 05fc 00000000 		.space	4
 4350 0600 25       		.byte	37
 4351 0601 000000   		.space	3
 4352 0604 03000000 		.word	3
 4353 0608 34       		.byte	52
 4354 0609 000000   		.space	3
 4355 060c 00600000 		.word	24576
 4356 0610 50617573 		.ascii	"Pause\000"
 4356      6500
 4357 0616 0000     		.space	2
 4358 0618 44454300 		.ascii	"DEC\000"
 4359 061c 00000000 		.space	4
 4360 0620 12       		.byte	18
 4361 0621 000000   		.space	3
 4362 0624 03000000 		.word	3
 4363 0628 34       		.byte	52
 4364 0629 000000   		.space	3
 4365 062c 00610000 		.word	24832
 4366 0630 47544F00 		.ascii	"GTO\000"
 4367 0634 00000000 		.space	4
 4368 0638 494E4300 		.ascii	"INC\000"
 4369 063c 00000000 		.space	4
 4370 0640 2C       		.byte	44
 4371 0641 000000   		.space	3
ARM GAS  /tmp/cc7sTUNp.s 			page 113


 4372 0644 FFFFFFFF 		.word	-1
 4373 0648 34       		.byte	52
 4374 0649 000000   		.space	3
 4375 064c 00570000 		.word	22272
 4376 0650 2D2D0D00 		.ascii	"--\015\000"
 4377 0654 00000000 		.space	4
 4378 0658 4241434B 		.ascii	"BACK\000"
 4378      00
 4379 065d 000000   		.space	3
 4380 0660 2D       		.byte	45
 4381 0661 000000   		.space	3
 4382 0664 FFFFFFFF 		.word	-1
 4383 0668 34       		.byte	52
 4384 0669 000000   		.space	3
 4385 066c 00560000 		.word	22016
 4386 0670 43505800 		.ascii	"CPX\000"
 4387 0674 00000000 		.space	4
 4388 0678 534B4950 		.ascii	"SKIP\000"
 4388      00
 4389 067d 000000   		.space	3
 4390 0680 53657475 		.ascii	"Setup 1\000"
 4390      70203100 
 4391 0688 00000000 		.space	7
 4391      000000
 4392 068f 00       		.space	1
 4393 0690 32       		.byte	50
 4394 0691 000000   		.space	3
 4395 0694 00000000 		.word	0
 4396 0698 30       		.byte	48
 4397 0699 000000   		.space	3
 4398 069c 00000000 		.word	0
 4399 06a0 45584954 		.ascii	"EXIT\000"
 4399      00
 4400 06a5 000000   		.space	3
 4401 06a8 53797374 		.ascii	"System\000"
 4401      656D00
 4402 06af 00       		.space	1
 4403 06b0 31       		.byte	49
 4404 06b1 000000   		.space	3
 4405 06b4 09000000 		.word	9
 4406 06b8 2E       		.byte	46
 4407 06b9 000000   		.space	3
 4408 06bc FFFFFFFF 		.word	-1
 4409 06c0 48454C50 		.ascii	"HELP\000"
 4409      00
 4410 06c5 000000   		.space	3
 4411 06c8 00       		.ascii	"\000"
 4412 06c9 00000000 		.space	7
 4412      000000
 4413 06d0 31       		.byte	49
 4414 06d1 000000   		.space	3
 4415 06d4 02000000 		.word	2
 4416 06d8 31       		.byte	49
 4417 06d9 000000   		.space	3
 4418 06dc 06000000 		.word	6
 4419 06e0 4F6E5354 		.ascii	"OnSTO\000"
 4419      4F00
ARM GAS  /tmp/cc7sTUNp.s 			page 114


 4420 06e6 0000     		.space	2
 4421 06e8 53765241 		.ascii	"SvRAM\000"
 4421      4D00
 4422 06ee 0000     		.space	2
 4423 06f0 31       		.byte	49
 4424 06f1 000000   		.space	3
 4425 06f4 03000000 		.word	3
 4426 06f8 31       		.byte	49
 4427 06f9 000000   		.space	3
 4428 06fc 07000000 		.word	7
 4429 0700 4F6E5243 		.ascii	"OnRCL\000"
 4429      4C00
 4430 0706 0000     		.space	2
 4431 0708 4C645241 		.ascii	"LdRAM\000"
 4431      4D00
 4432 070e 0000     		.space	2
 4433 0710 2C       		.byte	44
 4434 0711 000000   		.space	3
 4435 0714 FFFFFFFF 		.word	-1
 4436 0718 2E       		.byte	46
 4437 0719 000000   		.space	3
 4438 071c FFFFFFFF 		.word	-1
 4439 0720 2D2D0D00 		.ascii	"--\015\000"
 4440 0724 00000000 		.space	4
 4441 0728 00       		.ascii	"\000"
 4442 0729 00000000 		.space	7
 4442      000000
 4443 0730 2D       		.byte	45
 4444 0731 000000   		.space	3
 4445 0734 FFFFFFFF 		.word	-1
 4446 0738 2E       		.byte	46
 4447 0739 000000   		.space	3
 4448 073c FFFFFFFF 		.word	-1
 4449 0740 43505800 		.ascii	"CPX\000"
 4450 0744 00000000 		.space	4
 4451 0748 00       		.ascii	"\000"
 4452 0749 00000000 		.space	7
 4452      000000
 4453 0750 4172726F 		.ascii	"Arrow\000"
 4453      7700
 4454 0756 00000000 		.space	9
 4454      00000000 
 4454      00
 4455 075f 00       		.space	1
 4456 0760 0E       		.byte	14
 4457 0761 000000   		.space	3
 4458 0764 01000000 		.word	1
 4459 0768 06       		.byte	6
 4460 0769 000000   		.space	3
 4461 076c 02000000 		.word	2
 4462 0770 42696E00 		.ascii	"Bin\000"
 4463 0774 00000000 		.space	4
 4464 0778 44454700 		.ascii	"DEG\000"
 4465 077c 00000000 		.space	4
 4466 0780 0E       		.byte	14
 4467 0781 000000   		.space	3
 4468 0784 02000000 		.word	2
ARM GAS  /tmp/cc7sTUNp.s 			page 115


 4469 0788 07       		.byte	7
 4470 0789 000000   		.space	3
 4471 078c 02000000 		.word	2
 4472 0790 4F637400 		.ascii	"Oct\000"
 4473 0794 00000000 		.space	4
 4474 0798 52414400 		.ascii	"RAD\000"
 4475 079c 00000000 		.space	4
 4476 07a0 0F       		.byte	15
 4477 07a1 000000   		.space	3
 4478 07a4 01000000 		.word	1
 4479 07a8 08       		.byte	8
 4480 07a9 000000   		.space	3
 4481 07ac 02000000 		.word	2
 4482 07b0 44656300 		.ascii	"Dec\000"
 4483 07b4 00000000 		.space	4
 4484 07b8 47726164 		.ascii	"Grad\000"
 4484      00
 4485 07bd 000000   		.space	3
 4486 07c0 0F       		.byte	15
 4487 07c1 000000   		.space	3
 4488 07c4 02000000 		.word	2
 4489 07c8 06       		.byte	6
 4490 07c9 000000   		.space	3
 4491 07cc 01000000 		.word	1
 4492 07d0 48657800 		.ascii	"Hex\000"
 4493 07d4 00000000 		.space	4
 4494 07d8 0D484D53 		.ascii	"\015HMS\000"
 4494      00
 4495 07dd 000000   		.space	3
 4496 07e0 2C       		.byte	44
 4497 07e1 000000   		.space	3
 4498 07e4 FFFFFFFF 		.word	-1
 4499 07e8 07       		.byte	7
 4500 07e9 000000   		.space	3
 4501 07ec 01000000 		.word	1
 4502 07f0 2D2D0D00 		.ascii	"--\015\000"
 4503 07f4 00000000 		.space	4
 4504 07f8 484D530D 		.ascii	"HMS\015\000"
 4504      00
 4505 07fd 000000   		.space	3
 4506 0800 2D       		.byte	45
 4507 0801 000000   		.space	3
 4508 0804 FFFFFFFF 		.word	-1
 4509 0808 2E       		.byte	46
 4510 0809 000000   		.space	3
 4511 080c FFFFFFFF 		.word	-1
 4512 0810 43505800 		.ascii	"CPX\000"
 4513 0814 00000000 		.space	4
 4514 0818 00       		.ascii	"\000"
 4515 0819 00000000 		.space	7
 4515      000000
 4516 0820 466C6167 		.ascii	"Flags\000"
 4516      7300
 4517 0826 00000000 		.space	9
 4517      00000000 
 4517      00
 4518 082f 00       		.space	1
ARM GAS  /tmp/cc7sTUNp.s 			page 116


 4519 0830 1E       		.byte	30
 4520 0831 000000   		.space	3
 4521 0834 01000000 		.word	1
 4522 0838 34       		.byte	52
 4523 0839 000000   		.space	3
 4524 083c 00740000 		.word	29696
 4525 0840 53465F00 		.ascii	"SF_\000"
 4526 0844 00000000 		.space	4
 4527 0848 46533F00 		.ascii	"FS?\000"
 4528 084c 00000000 		.space	4
 4529 0850 1E       		.byte	30
 4530 0851 000000   		.space	3
 4531 0854 02000000 		.word	2
 4532 0858 34       		.byte	52
 4533 0859 000000   		.space	3
 4534 085c 00750000 		.word	29952
 4535 0860 43465F00 		.ascii	"CF_\000"
 4536 0864 00000000 		.space	4
 4537 0868 46433F00 		.ascii	"FC?\000"
 4538 086c 00000000 		.space	4
 4539 0870 1F       		.byte	31
 4540 0871 000000   		.space	3
 4541 0874 01000000 		.word	1
 4542 0878 34       		.byte	52
 4543 0879 000000   		.space	3
 4544 087c 00500000 		.word	20480
 4545 0880 783D3F00 		.ascii	"x=?\000"
 4546 0884 00000000 		.space	4
 4547 0888 783C3F00 		.ascii	"x<?\000"
 4548 088c 00000000 		.space	4
 4549 0890 1F       		.byte	31
 4550 0891 000000   		.space	3
 4551 0894 02000000 		.word	2
 4552 0898 34       		.byte	52
 4553 0899 000000   		.space	3
 4554 089c 00510000 		.word	20736
 4555 08a0 780B3F00 		.ascii	"x\013?\000"
 4556 08a4 00000000 		.space	4
 4557 08a8 783C3D3F 		.ascii	"x<=?\000"
 4557      00
 4558 08ad 000000   		.space	3
 4559 08b0 2C       		.byte	44
 4560 08b1 000000   		.space	3
 4561 08b4 FFFFFFFF 		.word	-1
 4562 08b8 34       		.byte	52
 4563 08b9 000000   		.space	3
 4564 08bc 00520000 		.word	20992
 4565 08c0 2D2D0D00 		.ascii	"--\015\000"
 4566 08c4 00000000 		.space	4
 4567 08c8 783E3F00 		.ascii	"x>?\000"
 4568 08cc 00000000 		.space	4
 4569 08d0 2D       		.byte	45
 4570 08d1 000000   		.space	3
 4571 08d4 FFFFFFFF 		.word	-1
 4572 08d8 34       		.byte	52
 4573 08d9 000000   		.space	3
 4574 08dc 00530000 		.word	21248
ARM GAS  /tmp/cc7sTUNp.s 			page 117


 4575 08e0 43505800 		.ascii	"CPX\000"
 4576 08e4 00000000 		.space	4
 4577 08e8 783E3D3F 		.ascii	"x>=?\000"
 4577      00
 4578 08ed 000000   		.space	3
 4579 08f0 50726F62 		.ascii	"Probability\000"
 4579      6162696C 
 4579      69747900 
 4580 08fc 000000   		.space	3
 4581 08ff 00       		.space	1
 4582 0900 18       		.byte	24
 4583 0901 000000   		.space	3
 4584 0904 03000000 		.word	3
 4585 0908 34       		.byte	52
 4586 0909 000000   		.space	3
 4587 090c 31020000 		.word	561
 4588 0910 46616374 		.ascii	"Fact!\000"
 4588      2100
 4589 0916 0000     		.space	2
 4590 0918 4C6E0682 		.ascii	"Ln\006\202\000"
 4590      00
 4591 091d 000000   		.space	3
 4592 0920 18       		.byte	24
 4593 0921 000000   		.space	3
 4594 0924 01000000 		.word	1
 4595 0928 19       		.byte	25
 4596 0929 000000   		.space	3
 4597 092c 01000000 		.word	1
 4598 0930 43792C78 		.ascii	"Cy,x\000"
 4598      00
 4599 0935 000000   		.space	3
 4600 0938 9400     		.ascii	"\224\000"
 4601 093a 00000000 		.space	6
 4601      0000
 4602 0940 18       		.byte	24
 4603 0941 000000   		.space	3
 4604 0944 02000000 		.word	2
 4605 0948 19       		.byte	25
 4606 0949 000000   		.space	3
 4607 094c 02000000 		.word	2
 4608 0950 50792C78 		.ascii	"Py,x\000"
 4608      00
 4609 0955 000000   		.space	3
 4610 0958 949D00   		.ascii	"\224\235\000"
 4611 095b 00000000 		.space	5
 4611      00
 4612 0960 08       		.byte	8
 4613 0961 000000   		.space	3
 4614 0964 01000000 		.word	1
 4615 0968 34       		.byte	52
 4616 0969 000000   		.space	3
 4617 096c 34010000 		.word	308
 4618 0970 52414E23 		.ascii	"RAN#\000"
 4618      00
 4619 0975 000000   		.space	3
 4620 0978 53454544 		.ascii	"SEED\000"
 4620      00
ARM GAS  /tmp/cc7sTUNp.s 			page 118


 4621 097d 000000   		.space	3
 4622 0980 2C       		.byte	44
 4623 0981 000000   		.space	3
 4624 0984 FFFFFFFF 		.word	-1
 4625 0988 2E       		.byte	46
 4626 0989 000000   		.space	3
 4627 098c FFFFFFFF 		.word	-1
 4628 0990 2D2D0D00 		.ascii	"--\015\000"
 4629 0994 00000000 		.space	4
 4630 0998 00       		.ascii	"\000"
 4631 0999 00000000 		.space	7
 4631      000000
 4632 09a0 2D       		.byte	45
 4633 09a1 000000   		.space	3
 4634 09a4 FFFFFFFF 		.word	-1
 4635 09a8 2E       		.byte	46
 4636 09a9 000000   		.space	3
 4637 09ac FFFFFFFF 		.word	-1
 4638 09b0 43505800 		.ascii	"CPX\000"
 4639 09b4 00000000 		.space	4
 4640 09b8 00       		.ascii	"\000"
 4641 09b9 00000000 		.space	7
 4641      000000
 4642 09c0 53746174 		.ascii	"Statistics\000"
 4642      69737469 
 4642      637300
 4643 09cb 00000000 		.space	4
 4644 09cf 00       		.space	1
 4645 09d0 1A       		.byte	26
 4646 09d1 000000   		.space	3
 4647 09d4 01000000 		.word	1
 4648 09d8 1A       		.byte	26
 4649 09d9 000000   		.space	3
 4650 09dc 02000000 		.word	2
 4651 09e0 0100     		.ascii	"\001\000"
 4652 09e2 00000000 		.space	6
 4652      0000
 4653 09e8 532E442E 		.ascii	"S.D.\000"
 4653      00
 4654 09ed 000000   		.space	3
 4655 09f0 1B       		.byte	27
 4656 09f1 000000   		.space	3
 4657 09f4 01000000 		.word	1
 4658 09f8 34       		.byte	52
 4659 09f9 000000   		.space	3
 4660 09fc 74020000 		.word	628
 4661 0a00 792D6861 		.ascii	"y-hat\000"
 4661      7400
 4662 0a06 0000     		.space	2
 4663 0a08 782D6861 		.ascii	"x-hat\000"
 4663      7400
 4664 0a0e 0000     		.space	2
 4665 0a10 34       		.byte	52
 4666 0a11 000000   		.space	3
 4667 0a14 27010000 		.word	295
 4668 0a18 34       		.byte	52
 4669 0a19 000000   		.space	3
ARM GAS  /tmp/cc7sTUNp.s 			page 119


 4670 0a1c 28010000 		.word	296
 4671 0a20 434F5252 		.ascii	"CORR\000"
 4671      00
 4672 0a25 000000   		.space	3
 4673 0a28 4C2E522E 		.ascii	"L.R.\000"
 4673      00
 4674 0a2d 000000   		.space	3
 4675 0a30 34       		.byte	52
 4676 0a31 000000   		.space	3
 4677 0a34 32010000 		.word	306
 4678 0a38 34       		.byte	52
 4679 0a39 000000   		.space	3
 4680 0a3c 31010000 		.word	305
 4681 0a40 42657374 		.ascii	"BestF\000"
 4681      4600
 4682 0a46 0000     		.space	2
 4683 0a48 4C6F6746 		.ascii	"LogFit\000"
 4683      697400
 4684 0a4f 00       		.space	1
 4685 0a50 34       		.byte	52
 4686 0a51 000000   		.space	3
 4687 0a54 2E010000 		.word	302
 4688 0a58 34       		.byte	52
 4689 0a59 000000   		.space	3
 4690 0a5c 2F010000 		.word	303
 4691 0a60 4C696E65 		.ascii	"Linear\000"
 4691      617200
 4692 0a67 00       		.space	1
 4693 0a68 45787046 		.ascii	"ExpFit\000"
 4693      697400
 4694 0a6f 00       		.space	1
 4695 0a70 2D       		.byte	45
 4696 0a71 000000   		.space	3
 4697 0a74 FFFFFFFF 		.word	-1
 4698 0a78 34       		.byte	52
 4699 0a79 000000   		.space	3
 4700 0a7c 30010000 		.word	304
 4701 0a80 43505800 		.ascii	"CPX\000"
 4702 0a84 00000000 		.space	4
 4703 0a88 50777246 		.ascii	"PwrFit\000"
 4703      697400
 4704 0a8f 00       		.space	1
 4705 0a90 53657475 		.ascii	"Setup 2\000"
 4705      70203200 
 4706 0a98 00000000 		.space	7
 4706      000000
 4707 0a9f 00       		.space	1
 4708 0aa0 31       		.byte	49
 4709 0aa1 000000   		.space	3
 4710 0aa4 04000000 		.word	4
 4711 0aa8 2E       		.byte	46
 4712 0aa9 000000   		.space	3
 4713 0aac FFFFFFFF 		.word	-1
 4714 0ab0 53764C49 		.ascii	"SvLIB\000"
 4714      4200
 4715 0ab6 0000     		.space	2
 4716 0ab8 00       		.ascii	"\000"
ARM GAS  /tmp/cc7sTUNp.s 			page 120


 4717 0ab9 00000000 		.space	7
 4717      000000
 4718 0ac0 31       		.byte	49
 4719 0ac1 000000   		.space	3
 4720 0ac4 05000000 		.word	5
 4721 0ac8 2E       		.byte	46
 4722 0ac9 000000   		.space	3
 4723 0acc FFFFFFFF 		.word	-1
 4724 0ad0 4C644C49 		.ascii	"LdLIB\000"
 4724      4200
 4725 0ad6 0000     		.space	2
 4726 0ad8 00       		.ascii	"\000"
 4727 0ad9 00000000 		.space	7
 4727      000000
 4728 0ae0 31       		.byte	49
 4729 0ae1 000000   		.space	3
 4730 0ae4 0A000000 		.word	10
 4731 0ae8 2E       		.byte	46
 4732 0ae9 000000   		.space	3
 4733 0aec FFFFFFFF 		.word	-1
 4734 0af0 53764350 		.ascii	"SvCPRG\000"
 4734      524700
 4735 0af7 00       		.space	1
 4736 0af8 00       		.ascii	"\000"
 4737 0af9 00000000 		.space	7
 4737      000000
 4738 0b00 31       		.byte	49
 4739 0b01 000000   		.space	3
 4740 0b04 08000000 		.word	8
 4741 0b08 2E       		.byte	46
 4742 0b09 000000   		.space	3
 4743 0b0c FFFFFFFF 		.word	-1
 4744 0b10 4C645052 		.ascii	"LdPRG\000"
 4744      4700
 4745 0b16 0000     		.space	2
 4746 0b18 00       		.ascii	"\000"
 4747 0b19 00000000 		.space	7
 4747      000000
 4748 0b20 2C       		.byte	44
 4749 0b21 000000   		.space	3
 4750 0b24 FFFFFFFF 		.word	-1
 4751 0b28 2E       		.byte	46
 4752 0b29 000000   		.space	3
 4753 0b2c FFFFFFFF 		.word	-1
 4754 0b30 2D2D0D00 		.ascii	"--\015\000"
 4755 0b34 00000000 		.space	4
 4756 0b38 00       		.ascii	"\000"
 4757 0b39 00000000 		.space	7
 4757      000000
 4758 0b40 2D       		.byte	45
 4759 0b41 000000   		.space	3
 4760 0b44 FFFFFFFF 		.word	-1
 4761 0b48 2E       		.byte	46
 4762 0b49 000000   		.space	3
 4763 0b4c FFFFFFFF 		.word	-1
 4764 0b50 43505800 		.ascii	"CPX\000"
 4765 0b54 00000000 		.space	4
ARM GAS  /tmp/cc7sTUNp.s 			page 121


 4766 0b58 00       		.ascii	"\000"
 4767 0b59 00000000 		.space	7
 4767      000000
 4768 0b60 496E7465 		.ascii	"Integ/Sum/Prod\000"
 4768      672F5375 
 4768      6D2F5072 
 4768      6F6400
 4769 0b6f 00       		.space	1
 4770 0b70 20       		.byte	32
 4771 0b71 000000   		.space	3
 4772 0b74 01000000 		.word	1
 4773 0b78 2E       		.byte	46
 4774 0b79 000000   		.space	3
 4775 0b7c FFFFFFFF 		.word	-1
 4776 0b80 534C5600 		.ascii	"SLV\000"
 4777 0b84 00000000 		.space	4
 4778 0b88 00       		.ascii	"\000"
 4779 0b89 00000000 		.space	7
 4779      000000
 4780 0b90 20       		.byte	32
 4781 0b91 000000   		.space	3
 4782 0b94 02000000 		.word	2
 4783 0b98 2E       		.byte	46
 4784 0b99 000000   		.space	3
 4785 0b9c FFFFFFFF 		.word	-1
 4786 0ba0 04206478 		.ascii	"\004 dx\000"
 4786      00
 4787 0ba5 000000   		.space	3
 4788 0ba8 00       		.ascii	"\000"
 4789 0ba9 00000000 		.space	7
 4789      000000
 4790 0bb0 21       		.byte	33
 4791 0bb1 000000   		.space	3
 4792 0bb4 01000000 		.word	1
 4793 0bb8 2E       		.byte	46
 4794 0bb9 000000   		.space	3
 4795 0bbc FFFFFFFF 		.word	-1
 4796 0bc0 53554D00 		.ascii	"SUM\000"
 4797 0bc4 00000000 		.space	4
 4798 0bc8 00       		.ascii	"\000"
 4799 0bc9 00000000 		.space	7
 4799      000000
 4800 0bd0 21       		.byte	33
 4801 0bd1 000000   		.space	3
 4802 0bd4 02000000 		.word	2
 4803 0bd8 2E       		.byte	46
 4804 0bd9 000000   		.space	3
 4805 0bdc FFFFFFFF 		.word	-1
 4806 0be0 50524F44 		.ascii	"PROD\000"
 4806      00
 4807 0be5 000000   		.space	3
 4808 0be8 00       		.ascii	"\000"
 4809 0be9 00000000 		.space	7
 4809      000000
 4810 0bf0 2C       		.byte	44
 4811 0bf1 000000   		.space	3
 4812 0bf4 FFFFFFFF 		.word	-1
ARM GAS  /tmp/cc7sTUNp.s 			page 122


 4813 0bf8 2E       		.byte	46
 4814 0bf9 000000   		.space	3
 4815 0bfc FFFFFFFF 		.word	-1
 4816 0c00 2D2D0D00 		.ascii	"--\015\000"
 4817 0c04 00000000 		.space	4
 4818 0c08 00       		.ascii	"\000"
 4819 0c09 00000000 		.space	7
 4819      000000
 4820 0c10 2D       		.byte	45
 4821 0c11 000000   		.space	3
 4822 0c14 FFFFFFFF 		.word	-1
 4823 0c18 2E       		.byte	46
 4824 0c19 000000   		.space	3
 4825 0c1c FFFFFFFF 		.word	-1
 4826 0c20 43505800 		.ascii	"CPX\000"
 4827 0c24 00000000 		.space	4
 4828 0c28 00       		.ascii	"\000"
 4829 0c29 00000000 		.space	7
 4829      000000
 4830 0c30 426C616E 		.ascii	"Blank with A-D\000"
 4830      6B207769 
 4830      74682041 
 4830      2D4400
 4831 0c3f 00       		.space	1
 4832 0c40 28       		.byte	40
 4833 0c41 000000   		.space	3
 4834 0c44 03000000 		.word	3
 4835 0c48 2E       		.byte	46
 4836 0c49 000000   		.space	3
 4837 0c4c FFFFFFFF 		.word	-1
 4838 0c50 912B00   		.ascii	"\221+\000"
 4839 0c53 00000000 		.space	5
 4839      00
 4840 0c58 00       		.ascii	"\000"
 4841 0c59 00000000 		.space	7
 4841      000000
 4842 0c60 16       		.byte	22
 4843 0c61 000000   		.space	3
 4844 0c64 01000000 		.word	1
 4845 0c68 2E       		.byte	46
 4846 0c69 000000   		.space	3
 4847 0c6c FFFFFFFF 		.word	-1
 4848 0c70 312F5800 		.ascii	"1/X\000"
 4849 0c74 00000000 		.space	4
 4850 0c78 00       		.ascii	"\000"
 4851 0c79 00000000 		.space	7
 4851      000000
 4852 0c80 1C       		.byte	28
 4853 0c81 000000   		.space	3
 4854 0c84 01000000 		.word	1
 4855 0c88 2E       		.byte	46
 4856 0c89 000000   		.space	3
 4857 0c8c FFFFFFFF 		.word	-1
 4858 0c90 035800   		.ascii	"\003X\000"
 4859 0c93 00000000 		.space	5
 4859      00
 4860 0c98 00       		.ascii	"\000"
ARM GAS  /tmp/cc7sTUNp.s 			page 123


 4861 0c99 00000000 		.space	7
 4861      000000
 4862 0ca0 13       		.byte	19
 4863 0ca1 000000   		.space	3
 4864 0ca4 02000000 		.word	2
 4865 0ca8 2E       		.byte	46
 4866 0ca9 000000   		.space	3
 4867 0cac FFFFFFFF 		.word	-1
 4868 0cb0 4C4F4700 		.ascii	"LOG\000"
 4869 0cb4 00000000 		.space	4
 4870 0cb8 00       		.ascii	"\000"
 4871 0cb9 00000000 		.space	7
 4871      000000
 4872 0cc0 2C       		.byte	44
 4873 0cc1 000000   		.space	3
 4874 0cc4 FFFFFFFF 		.word	-1
 4875 0cc8 2E       		.byte	46
 4876 0cc9 000000   		.space	3
 4877 0ccc FFFFFFFF 		.word	-1
 4878 0cd0 2D2D0D00 		.ascii	"--\015\000"
 4879 0cd4 00000000 		.space	4
 4880 0cd8 00       		.ascii	"\000"
 4881 0cd9 00000000 		.space	7
 4881      000000
 4882 0ce0 2D       		.byte	45
 4883 0ce1 000000   		.space	3
 4884 0ce4 FFFFFFFF 		.word	-1
 4885 0ce8 2E       		.byte	46
 4886 0ce9 000000   		.space	3
 4887 0cec FFFFFFFF 		.word	-1
 4888 0cf0 43505800 		.ascii	"CPX\000"
 4889 0cf4 00000000 		.space	4
 4890 0cf8 00       		.ascii	"\000"
 4891 0cf9 00000000 		.space	7
 4891      000000
 4892              		.section	.rodata.mapping_alpha.10909,"a"
 4893              		.align	2
 4894              		.set	.LANCHOR13,. + 0
 4897              	mapping_alpha.10909:
 4898 0000 63       		.byte	99
 4899 0001 000000   		.space	3
 4900 0004 FFFFFFFF 		.word	-1
 4901 0008 00       		.byte	0
 4902 0009 000000   		.space	3
 4903 000c FFFFFFFF 		.word	-1
 4904 0010 01       		.byte	1
 4905 0011 000000   		.space	3
 4906 0014 FFFFFFFF 		.word	-1
 4907 0018 02       		.byte	2
 4908 0019 000000   		.space	3
 4909 001c FFFFFFFF 		.word	-1
 4910 0020 03       		.byte	3
 4911 0021 000000   		.space	3
 4912 0024 FFFFFFFF 		.word	-1
 4913 0028 04       		.byte	4
 4914 0029 000000   		.space	3
 4915 002c FFFFFFFF 		.word	-1
ARM GAS  /tmp/cc7sTUNp.s 			page 124


 4916 0030 05       		.byte	5
 4917 0031 000000   		.space	3
 4918 0034 FFFFFFFF 		.word	-1
 4919 0038 06       		.byte	6
 4920 0039 000000   		.space	3
 4921 003c FFFFFFFF 		.word	-1
 4922 0040 07       		.byte	7
 4923 0041 000000   		.space	3
 4924 0044 FFFFFFFF 		.word	-1
 4925 0048 08       		.byte	8
 4926 0049 000000   		.space	3
 4927 004c FFFFFFFF 		.word	-1
 4928 0050 09       		.byte	9
 4929 0051 000000   		.space	3
 4930 0054 FFFFFFFF 		.word	-1
 4931 0058 0A       		.byte	10
 4932 0059 000000   		.space	3
 4933 005c FFFFFFFF 		.word	-1
 4934 0060 0B       		.byte	11
 4935 0061 000000   		.space	3
 4936 0064 FFFFFFFF 		.word	-1
 4937 0068 0C       		.byte	12
 4938 0069 000000   		.space	3
 4939 006c FFFFFFFF 		.word	-1
 4940 0070 0D       		.byte	13
 4941 0071 000000   		.space	3
 4942 0074 FFFFFFFF 		.word	-1
 4943 0078 0E       		.byte	14
 4944 0079 000000   		.space	3
 4945 007c FFFFFFFF 		.word	-1
 4946 0080 0F       		.byte	15
 4947 0081 000000   		.space	3
 4948 0084 FFFFFFFF 		.word	-1
 4949 0088 10       		.byte	16
 4950 0089 000000   		.space	3
 4951 008c FFFFFFFF 		.word	-1
 4952 0090 12       		.byte	18
 4953 0091 000000   		.space	3
 4954 0094 FFFFFFFF 		.word	-1
 4955 0098 13       		.byte	19
 4956 0099 000000   		.space	3
 4957 009c FFFFFFFF 		.word	-1
 4958 00a0 14       		.byte	20
 4959 00a1 000000   		.space	3
 4960 00a4 FFFFFFFF 		.word	-1
 4961 00a8 15       		.byte	21
 4962 00a9 000000   		.space	3
 4963 00ac FFFFFFFF 		.word	-1
 4964 00b0 16       		.byte	22
 4965 00b1 000000   		.space	3
 4966 00b4 FFFFFFFF 		.word	-1
 4967 00b8 18       		.byte	24
 4968 00b9 000000   		.space	3
 4969 00bc FFFFFFFF 		.word	-1
 4970 00c0 19       		.byte	25
 4971 00c1 000000   		.space	3
 4972 00c4 FFFFFFFF 		.word	-1
ARM GAS  /tmp/cc7sTUNp.s 			page 125


 4973 00c8 1A       		.byte	26
 4974 00c9 000000   		.space	3
 4975 00cc FFFFFFFF 		.word	-1
 4976 00d0 1B       		.byte	27
 4977 00d1 000000   		.space	3
 4978 00d4 FFFFFFFF 		.word	-1
 4979 00d8 1C       		.byte	28
 4980 00d9 000000   		.space	3
 4981 00dc FFFFFFFF 		.word	-1
 4982 00e0 1E       		.byte	30
 4983 00e1 000000   		.space	3
 4984 00e4 FFFFFFFF 		.word	-1
 4985 00e8 1F       		.byte	31
 4986 00e9 000000   		.space	3
 4987 00ec FFFFFFFF 		.word	-1
 4988 00f0 20       		.byte	32
 4989 00f1 000000   		.space	3
 4990 00f4 FFFFFFFF 		.word	-1
 4991 00f8 21       		.byte	33
 4992 00f9 000000   		.space	3
 4993 00fc FFFFFFFF 		.word	-1
 4994 0100 22       		.byte	34
 4995 0101 000000   		.space	3
 4996 0104 FFFFFFFF 		.word	-1
 4997 0108 24       		.byte	36
 4998 0109 000000   		.space	3
 4999 010c FFFFFFFF 		.word	-1
 5000 0110 25       		.byte	37
 5001 0111 000000   		.space	3
 5002 0114 FFFFFFFF 		.word	-1
 5003 0118 26       		.byte	38
 5004 0119 000000   		.space	3
 5005 011c FFFFFFFF 		.word	-1
 5006 0120 27       		.byte	39
 5007 0121 000000   		.space	3
 5008 0124 FFFFFFFF 		.word	-1
 5009 0128 28       		.byte	40
 5010 0129 000000   		.space	3
 5011 012c FFFFFFFF 		.word	-1
 5012 0130 2E       		.byte	46
 5013 0131 000000   		.space	3
 5014 0134 FFFFFFFF 		.word	-1
 5015 0138 2E       		.byte	46
 5016 0139 000000   		.space	3
 5017 013c FFFFFFFF 		.word	-1
 5018 0140 2E       		.byte	46
 5019 0141 000000   		.space	3
 5020 0144 FFFFFFFF 		.word	-1
 5021 0148 2E       		.byte	46
 5022 0149 000000   		.space	3
 5023 014c FFFFFFFF 		.word	-1
 5024 0150 2C       		.byte	44
 5025 0151 000000   		.space	3
 5026 0154 FFFFFFFF 		.word	-1
 5027 0158 2E       		.byte	46
 5028 0159 000000   		.space	3
 5029 015c FFFFFFFF 		.word	-1
ARM GAS  /tmp/cc7sTUNp.s 			page 126


 5030 0160 2E       		.byte	46
 5031 0161 000000   		.space	3
 5032 0164 FFFFFFFF 		.word	-1
 5033 0168 2E       		.byte	46
 5034 0169 000000   		.space	3
 5035 016c FFFFFFFF 		.word	-1
 5036 0170 2E       		.byte	46
 5037 0171 000000   		.space	3
 5038 0174 FFFFFFFF 		.word	-1
 5039              		.section	.rodata.mapping_fshift.10907,"a"
 5040              		.align	2
 5041              		.set	.LANCHOR11,. + 0
 5044              	mapping_fshift.10907:
 5045 0000 63       		.byte	99
 5046 0001 000000   		.space	3
 5047 0004 FFFFFFFF 		.word	-1
 5048 0008 22       		.byte	34
 5049 0009 000000   		.space	3
 5050 000c 03000000 		.word	3
 5051 0010 15       		.byte	21
 5052 0011 000000   		.space	3
 5053 0014 01000000 		.word	1
 5054 0018 1C       		.byte	28
 5055 0019 000000   		.space	3
 5056 001c 02000000 		.word	2
 5057 0020 13       		.byte	19
 5058 0021 000000   		.space	3
 5059 0024 01000000 		.word	1
 5060 0028 12       		.byte	18
 5061 0029 000000   		.space	3
 5062 002c 01000000 		.word	1
 5063 0030 12       		.byte	18
 5064 0031 000000   		.space	3
 5065 0034 03000000 		.word	3
 5066 0038 2D       		.byte	45
 5067 0039 000000   		.space	3
 5068 003c 00000000 		.word	0
 5069 0040 22       		.byte	34
 5070 0041 000000   		.space	3
 5071 0044 01000000 		.word	1
 5072 0048 0F       		.byte	15
 5073 0049 000000   		.space	3
 5074 004c 03000000 		.word	3
 5075 0050 01       		.byte	1
 5076 0051 000000   		.space	3
 5077 0054 02000000 		.word	2
 5078 0058 02       		.byte	2
 5079 0059 000000   		.space	3
 5080 005c 02000000 		.word	2
 5081 0060 03       		.byte	3
 5082 0061 000000   		.space	3
 5083 0064 02000000 		.word	2
 5084 0068 0C       		.byte	12
 5085 0069 000000   		.space	3
 5086 006c 01000000 		.word	1
 5087 0070 31       		.byte	49
 5088 0071 000000   		.space	3
ARM GAS  /tmp/cc7sTUNp.s 			page 127


 5089 0074 01000000 		.word	1
 5090 0078 2F       		.byte	47
 5091 0079 000000   		.space	3
 5092 007c 04000000 		.word	4
 5093 0080 2F       		.byte	47
 5094 0081 000000   		.space	3
 5095 0084 02000000 		.word	2
 5096 0088 2F       		.byte	47
 5097 0089 000000   		.space	3
 5098 008c 01000000 		.word	1
 5099 0090 18       		.byte	24
 5100 0091 000000   		.space	3
 5101 0094 00000000 		.word	0
 5102 0098 20       		.byte	32
 5103 0099 000000   		.space	3
 5104 009c 01000000 		.word	1
 5105 00a0 2F       		.byte	47
 5106 00a1 000000   		.space	3
 5107 00a4 0E000000 		.word	14
 5108 00a8 1C       		.byte	28
 5109 00a9 000000   		.space	3
 5110 00ac 03000000 		.word	3
 5111 00b0 2F       		.byte	47
 5112 00b1 000000   		.space	3
 5113 00b4 0C000000 		.word	12
 5114 00b8 1E       		.byte	30
 5115 00b9 000000   		.space	3
 5116 00bc 00000000 		.word	0
 5117 00c0 2F       		.byte	47
 5118 00c1 000000   		.space	3
 5119 00c4 03000000 		.word	3
 5120 00c8 04       		.byte	4
 5121 00c9 000000   		.space	3
 5122 00cc 03000000 		.word	3
 5123 00d0 2F       		.byte	47
 5124 00d1 000000   		.space	3
 5125 00d4 0A000000 		.word	10
 5126 00d8 2F       		.byte	47
 5127 00d9 000000   		.space	3
 5128 00dc 0B000000 		.word	11
 5129 00e0 2A       		.byte	42
 5130 00e1 000000   		.space	3
 5131 00e4 00000000 		.word	0
 5132 00e8 31       		.byte	49
 5133 00e9 000000   		.space	3
 5134 00ec 0D000000 		.word	13
 5135 00f0 2E       		.byte	46
 5136 00f1 000000   		.space	3
 5137 00f4 00000000 		.word	0
 5138 00f8 20       		.byte	32
 5139 00f9 000000   		.space	3
 5140 00fc 03000000 		.word	3
 5141 0100 2E       		.byte	46
 5142 0101 000000   		.space	3
 5143 0104 00000000 		.word	0
 5144 0108 24       		.byte	36
 5145 0109 000000   		.space	3
ARM GAS  /tmp/cc7sTUNp.s 			page 128


 5146 010c 03000000 		.word	3
 5147 0110 2F       		.byte	47
 5148 0111 000000   		.space	3
 5149 0114 08000000 		.word	8
 5150 0118 0D       		.byte	13
 5151 0119 000000   		.space	3
 5152 011c 01000000 		.word	1
 5153 0120 27       		.byte	39
 5154 0121 000000   		.space	3
 5155 0124 03000000 		.word	3
 5156 0128 06       		.byte	6
 5157 0129 000000   		.space	3
 5158 012c 03000000 		.word	3
 5159 0130 2E       		.byte	46
 5160 0131 000000   		.space	3
 5161 0134 00000000 		.word	0
 5162 0138 2E       		.byte	46
 5163 0139 000000   		.space	3
 5164 013c 00000000 		.word	0
 5165 0140 2E       		.byte	46
 5166 0141 000000   		.space	3
 5167 0144 00000000 		.word	0
 5168 0148 2E       		.byte	46
 5169 0149 000000   		.space	3
 5170 014c 00000000 		.word	0
 5171 0150 2E       		.byte	46
 5172 0151 000000   		.space	3
 5173 0154 00000000 		.word	0
 5174 0158 2E       		.byte	46
 5175 0159 000000   		.space	3
 5176 015c 00000000 		.word	0
 5177 0160 2E       		.byte	46
 5178 0161 000000   		.space	3
 5179 0164 00000000 		.word	0
 5180 0168 2F       		.byte	47
 5181 0169 000000   		.space	3
 5182 016c FFFFFFFF 		.word	-1
 5183 0170 2F       		.byte	47
 5184 0171 000000   		.space	3
 5185 0174 05000000 		.word	5
 5186              		.section	.rodata.mapping_gshift.10908,"a"
 5187              		.align	2
 5188              		.set	.LANCHOR15,. + 0
 5191              	mapping_gshift.10908:
 5192 0000 63       		.byte	99
 5193 0001 000000   		.space	3
 5194 0004 FFFFFFFF 		.word	-1
 5195 0008 28       		.byte	40
 5196 0009 000000   		.space	3
 5197 000c 03000000 		.word	3
 5198 0010 16       		.byte	22
 5199 0011 000000   		.space	3
 5200 0014 01000000 		.word	1
 5201 0018 1C       		.byte	28
 5202 0019 000000   		.space	3
 5203 001c 01000000 		.word	1
 5204 0020 13       		.byte	19
ARM GAS  /tmp/cc7sTUNp.s 			page 129


 5205 0021 000000   		.space	3
 5206 0024 02000000 		.word	2
 5207 0028 2E       		.byte	46
 5208 0029 000000   		.space	3
 5209 002c 00000000 		.word	0
 5210 0030 2E       		.byte	46
 5211 0031 000000   		.space	3
 5212 0034 00000000 		.word	0
 5213 0038 2E       		.byte	46
 5214 0039 000000   		.space	3
 5215 003c 00000000 		.word	0
 5216 0040 07       		.byte	7
 5217 0041 000000   		.space	3
 5218 0044 03000000 		.word	3
 5219 0048 08       		.byte	8
 5220 0049 000000   		.space	3
 5221 004c 03000000 		.word	3
 5222 0050 2F       		.byte	47
 5223 0051 000000   		.space	3
 5224 0054 04000000 		.word	4
 5225 0058 2F       		.byte	47
 5226 0059 000000   		.space	3
 5227 005c 04000000 		.word	4
 5228 0060 2F       		.byte	47
 5229 0061 000000   		.space	3
 5230 0064 04000000 		.word	4
 5231 0068 0C       		.byte	12
 5232 0069 000000   		.space	3
 5233 006c 02000000 		.word	2
 5234 0070 2F       		.byte	47
 5235 0071 000000   		.space	3
 5236 0074 06000000 		.word	6
 5237 0078 05       		.byte	5
 5238 0079 000000   		.space	3
 5239 007c 03000000 		.word	3
 5240 0080 2E       		.byte	46
 5241 0081 000000   		.space	3
 5242 0084 00000000 		.word	0
 5243 0088 2E       		.byte	46
 5244 0089 000000   		.space	3
 5245 008c 00000000 		.word	0
 5246 0090 2E       		.byte	46
 5247 0091 000000   		.space	3
 5248 0094 00000000 		.word	0
 5249 0098 2E       		.byte	46
 5250 0099 000000   		.space	3
 5251 009c 00000000 		.word	0
 5252 00a0 2E       		.byte	46
 5253 00a1 000000   		.space	3
 5254 00a4 00000000 		.word	0
 5255 00a8 1B       		.byte	27
 5256 00a9 000000   		.space	3
 5257 00ac 03000000 		.word	3
 5258 00b0 1A       		.byte	26
 5259 00b1 000000   		.space	3
 5260 00b4 03000000 		.word	3
 5261 00b8 2E       		.byte	46
ARM GAS  /tmp/cc7sTUNp.s 			page 130


 5262 00b9 000000   		.space	3
 5263 00bc 00000000 		.word	0
 5264 00c0 2E       		.byte	46
 5265 00c1 000000   		.space	3
 5266 00c4 00000000 		.word	0
 5267 00c8 0C       		.byte	12
 5268 00c9 000000   		.space	3
 5269 00cc 03000000 		.word	3
 5270 00d0 1F       		.byte	31
 5271 00d1 000000   		.space	3
 5272 00d4 03000000 		.word	3
 5273 00d8 19       		.byte	25
 5274 00d9 000000   		.space	3
 5275 00dc 03000000 		.word	3
 5276 00e0 2A       		.byte	42
 5277 00e1 000000   		.space	3
 5278 00e4 FFFFFFFF 		.word	-1
 5279 00e8 2E       		.byte	46
 5280 00e9 000000   		.space	3
 5281 00ec 00000000 		.word	0
 5282 00f0 2E       		.byte	46
 5283 00f1 000000   		.space	3
 5284 00f4 00000000 		.word	0
 5285 00f8 21       		.byte	33
 5286 00f9 000000   		.space	3
 5287 00fc 03000000 		.word	3
 5288 0100 2E       		.byte	46
 5289 0101 000000   		.space	3
 5290 0104 00000000 		.word	0
 5291 0108 24       		.byte	36
 5292 0109 000000   		.space	3
 5293 010c 02000000 		.word	2
 5294 0110 2F       		.byte	47
 5295 0111 000000   		.space	3
 5296 0114 0D000000 		.word	13
 5297 0118 2E       		.byte	46
 5298 0119 000000   		.space	3
 5299 011c 00000000 		.word	0
 5300 0120 2F       		.byte	47
 5301 0121 000000   		.space	3
 5302 0124 07000000 		.word	7
 5303 0128 1E       		.byte	30
 5304 0129 000000   		.space	3
 5305 012c 03000000 		.word	3
 5306 0130 2E       		.byte	46
 5307 0131 000000   		.space	3
 5308 0134 00000000 		.word	0
 5309 0138 2E       		.byte	46
 5310 0139 000000   		.space	3
 5311 013c 00000000 		.word	0
 5312 0140 2E       		.byte	46
 5313 0141 000000   		.space	3
 5314 0144 00000000 		.word	0
 5315 0148 2E       		.byte	46
 5316 0149 000000   		.space	3
 5317 014c 00000000 		.word	0
 5318 0150 2E       		.byte	46
ARM GAS  /tmp/cc7sTUNp.s 			page 131


 5319 0151 000000   		.space	3
 5320 0154 00000000 		.word	0
 5321 0158 2E       		.byte	46
 5322 0159 000000   		.space	3
 5323 015c 00000000 		.word	0
 5324 0160 2E       		.byte	46
 5325 0161 000000   		.space	3
 5326 0164 00000000 		.word	0
 5327 0168 2E       		.byte	46
 5328 0169 000000   		.space	3
 5329 016c 00000000 		.word	0
 5330 0170 2E       		.byte	46
 5331 0171 000000   		.space	3
 5332 0174 00000000 		.word	0
 5333              		.section	.rodata.mapping_none.10906,"a"
 5334              		.align	2
 5335              		.set	.LANCHOR10,. + 0
 5338              	mapping_none.10906:
 5339 0000 63       		.byte	99
 5340 0001 000000   		.space	3
 5341 0004 FFFFFFFF 		.word	-1
 5342 0008 00       		.byte	0
 5343 0009 000000   		.space	3
 5344 000c 00000000 		.word	0
 5345 0010 01       		.byte	1
 5346 0011 000000   		.space	3
 5347 0014 00000000 		.word	0
 5348 0018 03       		.byte	3
 5349 0019 000000   		.space	3
 5350 001c 00000000 		.word	0
 5351 0020 13       		.byte	19
 5352 0021 000000   		.space	3
 5353 0024 02000000 		.word	2
 5354 0028 12       		.byte	18
 5355 0029 000000   		.space	3
 5356 002c 02000000 		.word	2
 5357 0030 12       		.byte	18
 5358 0031 000000   		.space	3
 5359 0034 00000000 		.word	0
 5360 0038 06       		.byte	6
 5361 0039 000000   		.space	3
 5362 003c 00000000 		.word	0
 5363 0040 07       		.byte	7
 5364 0041 000000   		.space	3
 5365 0044 00000000 		.word	0
 5366 0048 08       		.byte	8
 5367 0049 000000   		.space	3
 5368 004c 00000000 		.word	0
 5369 0050 01       		.byte	1
 5370 0051 000000   		.space	3
 5371 0054 01000000 		.word	1
 5372 0058 02       		.byte	2
 5373 0059 000000   		.space	3
 5374 005c 01000000 		.word	1
 5375 0060 03       		.byte	3
 5376 0061 000000   		.space	3
 5377 0064 01000000 		.word	1
ARM GAS  /tmp/cc7sTUNp.s 			page 132


 5378 0068 0C       		.byte	12
 5379 0069 000000   		.space	3
 5380 006c 00000000 		.word	0
 5381 0070 0D       		.byte	13
 5382 0071 000000   		.space	3
 5383 0074 00000000 		.word	0
 5384 0078 0E       		.byte	14
 5385 0079 000000   		.space	3
 5386 007c 00000000 		.word	0
 5387 0080 0F       		.byte	15
 5388 0081 000000   		.space	3
 5389 0084 00000000 		.word	0
 5390 0088 10       		.byte	16
 5391 0089 000000   		.space	3
 5392 008c 00000000 		.word	0
 5393 0090 18       		.byte	24
 5394 0091 000000   		.space	3
 5395 0094 00000000 		.word	0
 5396 0098 13       		.byte	19
 5397 0099 000000   		.space	3
 5398 009c 00000000 		.word	0
 5399 00a0 14       		.byte	20
 5400 00a1 000000   		.space	3
 5401 00a4 00000000 		.word	0
 5402 00a8 15       		.byte	21
 5403 00a9 000000   		.space	3
 5404 00ac 00000000 		.word	0
 5405 00b0 16       		.byte	22
 5406 00b1 000000   		.space	3
 5407 00b4 00000000 		.word	0
 5408 00b8 1E       		.byte	30
 5409 00b9 000000   		.space	3
 5410 00bc 00000000 		.word	0
 5411 00c0 19       		.byte	25
 5412 00c1 000000   		.space	3
 5413 00c4 00000000 		.word	0
 5414 00c8 1A       		.byte	26
 5415 00c9 000000   		.space	3
 5416 00cc 00000000 		.word	0
 5417 00d0 1B       		.byte	27
 5418 00d1 000000   		.space	3
 5419 00d4 00000000 		.word	0
 5420 00d8 1C       		.byte	28
 5421 00d9 000000   		.space	3
 5422 00dc 00000000 		.word	0
 5423 00e0 29       		.byte	41
 5424 00e1 000000   		.space	3
 5425 00e4 00000000 		.word	0
 5426 00e8 1F       		.byte	31
 5427 00e9 000000   		.space	3
 5428 00ec 00000000 		.word	0
 5429 00f0 20       		.byte	32
 5430 00f1 000000   		.space	3
 5431 00f4 00000000 		.word	0
 5432 00f8 21       		.byte	33
 5433 00f9 000000   		.space	3
 5434 00fc 00000000 		.word	0
ARM GAS  /tmp/cc7sTUNp.s 			page 133


 5435 0100 22       		.byte	34
 5436 0101 000000   		.space	3
 5437 0104 00000000 		.word	0
 5438 0108 24       		.byte	36
 5439 0109 000000   		.space	3
 5440 010c 00000000 		.word	0
 5441 0110 25       		.byte	37
 5442 0111 000000   		.space	3
 5443 0114 00000000 		.word	0
 5444 0118 26       		.byte	38
 5445 0119 000000   		.space	3
 5446 011c 00000000 		.word	0
 5447 0120 27       		.byte	39
 5448 0121 000000   		.space	3
 5449 0124 00000000 		.word	0
 5450 0128 28       		.byte	40
 5451 0129 000000   		.space	3
 5452 012c 00000000 		.word	0
 5453 0130 2E       		.byte	46
 5454 0131 000000   		.space	3
 5455 0134 00000000 		.word	0
 5456 0138 2E       		.byte	46
 5457 0139 000000   		.space	3
 5458 013c 00000000 		.word	0
 5459 0140 2E       		.byte	46
 5460 0141 000000   		.space	3
 5461 0144 00000000 		.word	0
 5462 0148 2E       		.byte	46
 5463 0149 000000   		.space	3
 5464 014c 00000000 		.word	0
 5465 0150 2E       		.byte	46
 5466 0151 000000   		.space	3
 5467 0154 00000000 		.word	0
 5468 0158 2E       		.byte	46
 5469 0159 000000   		.space	3
 5470 015c 00000000 		.word	0
 5471 0160 2E       		.byte	46
 5472 0161 000000   		.space	3
 5473 0164 00000000 		.word	0
 5474 0168 2E       		.byte	46
 5475 0169 000000   		.space	3
 5476 016c 00000000 		.word	0
 5477 0170 2E       		.byte	46
 5478 0171 000000   		.space	3
 5479 0174 00000000 		.word	0
 5480              		.section	.rodata.mapping_running.10910,"a"
 5481              		.align	2
 5482              		.set	.LANCHOR14,. + 0
 5485              	mapping_running.10910:
 5486 0000 63       		.byte	99
 5487 0001 000000   		.space	3
 5488 0004 FFFFFFFF 		.word	-1
 5489 0008 00       		.byte	0
 5490 0009 000000   		.space	3
 5491 000c 00000000 		.word	0
 5492 0010 01       		.byte	1
 5493 0011 000000   		.space	3
ARM GAS  /tmp/cc7sTUNp.s 			page 134


 5494 0014 00000000 		.word	0
 5495 0018 02       		.byte	2
 5496 0019 000000   		.space	3
 5497 001c 00000000 		.word	0
 5498 0020 03       		.byte	3
 5499 0021 000000   		.space	3
 5500 0024 00000000 		.word	0
 5501 0028 04       		.byte	4
 5502 0029 000000   		.space	3
 5503 002c 00000000 		.word	0
 5504 0030 12       		.byte	18
 5505 0031 000000   		.space	3
 5506 0034 00000000 		.word	0
 5507 0038 06       		.byte	6
 5508 0039 000000   		.space	3
 5509 003c 00000000 		.word	0
 5510 0040 07       		.byte	7
 5511 0041 000000   		.space	3
 5512 0044 00000000 		.word	0
 5513 0048 08       		.byte	8
 5514 0049 000000   		.space	3
 5515 004c 00000000 		.word	0
 5516 0050 09       		.byte	9
 5517 0051 000000   		.space	3
 5518 0054 00000000 		.word	0
 5519 0058 0A       		.byte	10
 5520 0059 000000   		.space	3
 5521 005c 00000000 		.word	0
 5522 0060 0B       		.byte	11
 5523 0061 000000   		.space	3
 5524 0064 00000000 		.word	0
 5525 0068 0C       		.byte	12
 5526 0069 000000   		.space	3
 5527 006c 00000000 		.word	0
 5528 0070 0D       		.byte	13
 5529 0071 000000   		.space	3
 5530 0074 00000000 		.word	0
 5531 0078 0E       		.byte	14
 5532 0079 000000   		.space	3
 5533 007c 00000000 		.word	0
 5534 0080 0F       		.byte	15
 5535 0081 000000   		.space	3
 5536 0084 00000000 		.word	0
 5537 0088 10       		.byte	16
 5538 0089 000000   		.space	3
 5539 008c 00000000 		.word	0
 5540 0090 18       		.byte	24
 5541 0091 000000   		.space	3
 5542 0094 00000000 		.word	0
 5543 0098 13       		.byte	19
 5544 0099 000000   		.space	3
 5545 009c 00000000 		.word	0
 5546 00a0 14       		.byte	20
 5547 00a1 000000   		.space	3
 5548 00a4 00000000 		.word	0
 5549 00a8 15       		.byte	21
 5550 00a9 000000   		.space	3
ARM GAS  /tmp/cc7sTUNp.s 			page 135


 5551 00ac 00000000 		.word	0
 5552 00b0 16       		.byte	22
 5553 00b1 000000   		.space	3
 5554 00b4 00000000 		.word	0
 5555 00b8 1E       		.byte	30
 5556 00b9 000000   		.space	3
 5557 00bc 00000000 		.word	0
 5558 00c0 19       		.byte	25
 5559 00c1 000000   		.space	3
 5560 00c4 00000000 		.word	0
 5561 00c8 1A       		.byte	26
 5562 00c9 000000   		.space	3
 5563 00cc 00000000 		.word	0
 5564 00d0 1B       		.byte	27
 5565 00d1 000000   		.space	3
 5566 00d4 00000000 		.word	0
 5567 00d8 1C       		.byte	28
 5568 00d9 000000   		.space	3
 5569 00dc 00000000 		.word	0
 5570 00e0 09       		.byte	9
 5571 00e1 000000   		.space	3
 5572 00e4 00000000 		.word	0
 5573 00e8 1F       		.byte	31
 5574 00e9 000000   		.space	3
 5575 00ec 00000000 		.word	0
 5576 00f0 20       		.byte	32
 5577 00f1 000000   		.space	3
 5578 00f4 00000000 		.word	0
 5579 00f8 21       		.byte	33
 5580 00f9 000000   		.space	3
 5581 00fc 00000000 		.word	0
 5582 0100 22       		.byte	34
 5583 0101 000000   		.space	3
 5584 0104 00000000 		.word	0
 5585 0108 24       		.byte	36
 5586 0109 000000   		.space	3
 5587 010c 00000000 		.word	0
 5588 0110 25       		.byte	37
 5589 0111 000000   		.space	3
 5590 0114 00000000 		.word	0
 5591 0118 26       		.byte	38
 5592 0119 000000   		.space	3
 5593 011c 00000000 		.word	0
 5594 0120 27       		.byte	39
 5595 0121 000000   		.space	3
 5596 0124 00000000 		.word	0
 5597 0128 28       		.byte	40
 5598 0129 000000   		.space	3
 5599 012c 00000000 		.word	0
 5600 0130 2E       		.byte	46
 5601 0131 000000   		.space	3
 5602 0134 00000000 		.word	0
 5603 0138 2E       		.byte	46
 5604 0139 000000   		.space	3
 5605 013c 00000000 		.word	0
 5606 0140 2E       		.byte	46
 5607 0141 000000   		.space	3
ARM GAS  /tmp/cc7sTUNp.s 			page 136


 5608 0144 00000000 		.word	0
 5609 0148 2E       		.byte	46
 5610 0149 000000   		.space	3
 5611 014c 00000000 		.word	0
 5612 0150 04       		.byte	4
 5613 0151 000000   		.space	3
 5614 0154 00000000 		.word	0
 5615 0158 05       		.byte	5
 5616 0159 000000   		.space	3
 5617 015c 00000000 		.word	0
 5618 0160 2E       		.byte	46
 5619 0161 000000   		.space	3
 5620 0164 00000000 		.word	0
 5621 0168 2E       		.byte	46
 5622 0169 000000   		.space	3
 5623 016c 00000000 		.word	0
 5624 0170 2E       		.byte	46
 5625 0171 000000   		.space	3
 5626 0174 00000000 		.word	0
 5627              		.section	.rodata.mid_menu,"a"
 5628              		.align	2
 5631              	mid_menu:
 5632 0000 C8C40B00 		.ascii	"\310\304\013\000"
 5633              		.text
 5634              	.Letext0:
 5635              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 5636              		.file 5 "/usr/include/newlib/machine/_default_types.h"
 5637              		.file 6 "/usr/include/newlib/sys/_types.h"
 5638              		.file 7 "/usr/include/newlib/sys/reent.h"
 5639              		.file 8 "/usr/include/newlib/sys/lock.h"
 5640              		.file 9 "/usr/include/newlib/stdlib.h"
 5641              		.file 10 "/usr/include/newlib/sys/_stdint.h"
 5642              		.file 11 "/usr/include/newlib/ctype.h"
 5643              		.file 12 "dmcp/ff_ifc.h"
 5644              		.file 13 "dmcp/dmcp.h"
 5645              		.file 14 "src/keys.h"
 5646              		.file 15 "src/decNumber/decContext.h"
 5647              		.file 16 "src/decNumber/decNumber.h"
 5648              		.file 17 "src/decNumber/decimal64.h"
 5649              		.file 18 "src/decNumber/decimal128.h"
 5650              		.file 19 "src/xeq.h"
 5651              		.file 20 "src/data.h"
 5652              		.file 21 "src/display.h"
 5653              		.file 22 "src/consts.h"
 5654              		.file 23 "src/storage.h"
 5655              		.file 24 "src/catalogues.h"
 5656              		.file 25 "src/menu.h"
 5657              		.file 26 "src/lcd.h"
 5658              		.file 27 "/usr/include/newlib/string.h"
 5659              		.file 28 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/cc7sTUNp.s 			page 137


DEFINED SYMBOLS
                            *ABS*:0000000000000000 console.c
     /tmp/cc7sTUNp.s:18     .rodata.menu_line_str.str1.4:0000000000000000 $d
     /tmp/cc7sTUNp.s:22     .text.menu_line_str:0000000000000000 $t
     /tmp/cc7sTUNp.s:31     .text.menu_line_str:0000000000000000 menu_line_str
     /tmp/cc7sTUNp.s:56     .text.menu_line_str:000000000000000c $d
     /tmp/cc7sTUNp.s:61     .text.set_menu_label.constprop.0:0000000000000000 $t
     /tmp/cc7sTUNp.s:68     .text.set_menu_label.constprop.0:0000000000000000 set_menu_label.constprop.0
     /tmp/cc7sTUNp.s:433    .text.set_menu_label.constprop.0:0000000000000138 $d
     /tmp/cc7sTUNp.s:441    .rodata.disp_about.str1.4:0000000000000000 $d
     /tmp/cc7sTUNp.s:463    .text.disp_about:0000000000000000 $t
     /tmp/cc7sTUNp.s:471    .text.disp_about:0000000000000000 disp_about
     /tmp/cc7sTUNp.s:629    .text.disp_about:0000000000000084 $d
     /tmp/cc7sTUNp.s:648    .text.run_menu_item:0000000000000000 $t
     /tmp/cc7sTUNp.s:656    .text.run_menu_item:0000000000000000 run_menu_item
     /tmp/cc7sTUNp.s:696    .text.set_menu:0000000000000000 $t
     /tmp/cc7sTUNp.s:704    .text.set_menu:0000000000000000 set_menu
     /tmp/cc7sTUNp.s:755    .text.set_menu:0000000000000028 $d
     /tmp/cc7sTUNp.s:762    .text.toggle_default_menu:0000000000000000 $t
     /tmp/cc7sTUNp.s:770    .text.toggle_default_menu:0000000000000000 toggle_default_menu
     /tmp/cc7sTUNp.s:799    .text.toggle_default_menu:0000000000000018 $d
     /tmp/cc7sTUNp.s:805    .text.get_menu:0000000000000000 $t
     /tmp/cc7sTUNp.s:813    .text.get_menu:0000000000000000 get_menu
     /tmp/cc7sTUNp.s:829    .text.get_menu:0000000000000008 $d
     /tmp/cc7sTUNp.s:834    .text.set_last_menu:0000000000000000 $t
     /tmp/cc7sTUNp.s:842    .text.set_last_menu:0000000000000000 set_last_menu
     /tmp/cc7sTUNp.s:897    .text.set_last_menu:000000000000001c $d
     /tmp/cc7sTUNp.s:904    .text.mdot:0000000000000000 $t
     /tmp/cc7sTUNp.s:912    .text.mdot:0000000000000000 mdot
     /tmp/cc7sTUNp.s:1003   .text.mdot:000000000000003c $d
     /tmp/cc7sTUNp.s:1008   .text.display_menu:0000000000000000 $t
     /tmp/cc7sTUNp.s:1016   .text.display_menu:0000000000000000 display_menu
     /tmp/cc7sTUNp.s:1255   .text.display_menu:000000000000010c $d
     /tmp/cc7sTUNp.s:1263   .text.display_current_menu:0000000000000000 $t
     /tmp/cc7sTUNp.s:1271   .text.display_current_menu:0000000000000000 display_current_menu
     /tmp/cc7sTUNp.s:1286   .text.display_current_menu:0000000000000008 $d
     /tmp/cc7sTUNp.s:1291   .text.all_menu_dots:0000000000000000 $t
     /tmp/cc7sTUNp.s:1299   .text.all_menu_dots:0000000000000000 all_menu_dots
     /tmp/cc7sTUNp.s:1383   .text.all_menu_dots:0000000000000038 $d
     /tmp/cc7sTUNp.s:1388   .text.shutdown:0000000000000000 $t
     /tmp/cc7sTUNp.s:1396   .text.shutdown:0000000000000000 shutdown
     /tmp/cc7sTUNp.s:1414   .text.shutdown:000000000000000c $d
     /tmp/cc7sTUNp.s:1419   .text.is_key_pressed:0000000000000000 $t
     /tmp/cc7sTUNp.s:1427   .text.is_key_pressed:0000000000000000 is_key_pressed
     /tmp/cc7sTUNp.s:1450   .text.is_key_pressed:0000000000000010 $d
     /tmp/cc7sTUNp.s:1455   .text.get_key:0000000000000000 $t
     /tmp/cc7sTUNp.s:1463   .text.get_key:0000000000000000 get_key
     /tmp/cc7sTUNp.s:1478   .text.get_key:0000000000000004 $d
     /tmp/cc7sTUNp.s:1483   .text.put_key:0000000000000000 $t
     /tmp/cc7sTUNp.s:1491   .text.put_key:0000000000000000 put_key
     /tmp/cc7sTUNp.s:1570   .text.put_key:000000000000003c $d
     /tmp/cc7sTUNp.s:1576   .text.shift_down:0000000000000000 $t
     /tmp/cc7sTUNp.s:1584   .text.shift_down:0000000000000000 shift_down
     /tmp/cc7sTUNp.s:1599   .text.start_key_timer:0000000000000000 $t
     /tmp/cc7sTUNp.s:1607   .text.start_key_timer:0000000000000000 start_key_timer
     /tmp/cc7sTUNp.s:1631   .text.start_key_timer:000000000000000c $d
     /tmp/cc7sTUNp.s:1637   .text.keyticks:0000000000000000 $t
ARM GAS  /tmp/cc7sTUNp.s 			page 138


     /tmp/cc7sTUNp.s:1645   .text.keyticks:0000000000000000 keyticks
     /tmp/cc7sTUNp.s:1676   .text.keyticks:0000000000000018 $d
     /tmp/cc7sTUNp.s:1682   .text.moveto:0000000000000000 $t
     /tmp/cc7sTUNp.s:1690   .text.moveto:0000000000000000 moveto
     /tmp/cc7sTUNp.s:1750   .text.moveto:000000000000002c $d
     /tmp/cc7sTUNp.s:1757   .rodata.print_debug.str1.4:0000000000000000 $d
     /tmp/cc7sTUNp.s:1761   .text.print_debug:0000000000000000 $t
     /tmp/cc7sTUNp.s:1769   .text.print_debug:0000000000000000 print_debug
     /tmp/cc7sTUNp.s:1871   .text.print_debug:0000000000000060 $d
                            *COM*:0000000000000016 print_string
     /tmp/cc7sTUNp.s:1882   .rodata.print_debug2.str1.4:0000000000000000 $d
     /tmp/cc7sTUNp.s:1886   .text.print_debug2:0000000000000000 $t
     /tmp/cc7sTUNp.s:1894   .text.print_debug2:0000000000000000 print_debug2
     /tmp/cc7sTUNp.s:1996   .text.print_debug2:0000000000000064 $d
     /tmp/cc7sTUNp.s:2007   .text.do_now:0000000000000000 $t
     /tmp/cc7sTUNp.s:2015   .text.do_now:0000000000000000 do_now
     /tmp/cc7sTUNp.s:2050   .rodata.do_multi.str1.4:0000000000000000 $d
     /tmp/cc7sTUNp.s:2054   .text.do_multi:0000000000000000 $t
     /tmp/cc7sTUNp.s:2062   .text.do_multi:0000000000000000 do_multi
     /tmp/cc7sTUNp.s:2093   .text.do_multi:0000000000000018 $d
     /tmp/cc7sTUNp.s:2500   .text.do_multi:0000000000000190 $d
     /tmp/cc7sTUNp.s:2509   .text.program_main:0000000000000000 $t
     /tmp/cc7sTUNp.s:2517   .text.program_main:0000000000000000 program_main
     /tmp/cc7sTUNp.s:3221   .text.program_main:00000000000002ac $d
     /tmp/cc7sTUNp.s:3227   .text.program_main:00000000000002b2 $t
     /tmp/cc7sTUNp.s:3258   .text.program_main:00000000000002c4 $d
     /tmp/cc7sTUNp.s:3302   .text.program_main:0000000000000358 $t
     /tmp/cc7sTUNp.s:3730   .text.program_main:0000000000000584 $d
     /tmp/cc7sTUNp.s:3800   .bss.n_p:0000000000000000 n_p
     /tmp/cc7sTUNp.s:3868   .data.spaces:0000000000000000 spaces
     /tmp/cc7sTUNp.s:3859   .data.release:0000000000000000 release
     /tmp/cc7sTUNp.s:3832   .data.h_shift:0000000000000000 h_shift
     /tmp/cc7sTUNp.s:3823   .data.g_shift:0000000000000000 g_shift
     /tmp/cc7sTUNp.s:3814   .data.f_shift:0000000000000000 f_shift
     /tmp/cc7sTUNp.s:3841   .data.heartbeat:0000000000000000 heartbeat
     /tmp/cc7sTUNp.s:3850   .data.no_key:0000000000000000 no_key
     /tmp/cc7sTUNp.s:3875   .rodata.MID_MENU:0000000000000000 MID_MENU
     /tmp/cc7sTUNp.s:3757   .rodata.str1.4:0000000000000000 $d
     /tmp/cc7sTUNp.s:5631   .rodata.mid_menu:0000000000000000 mid_menu
     /tmp/cc7sTUNp.s:3762   .rodata:0000000000000000 $d
     /tmp/cc7sTUNp.s:3769   .bss.current_menu:0000000000000000 $d
     /tmp/cc7sTUNp.s:3773   .bss.current_menu:0000000000000000 current_menu
     /tmp/cc7sTUNp.s:3776   .bss.default_menu:0000000000000000 $d
     /tmp/cc7sTUNp.s:3780   .bss.default_menu:0000000000000000 default_menu
     /tmp/cc7sTUNp.s:3783   .bss.last_menu:0000000000000000 $d
     /tmp/cc7sTUNp.s:3787   .bss.last_menu:0000000000000000 last_menu
     /tmp/cc7sTUNp.s:3790   .bss.mdots:0000000000000000 $d
     /tmp/cc7sTUNp.s:3794   .bss.mdots:0000000000000000 mdots
     /tmp/cc7sTUNp.s:3797   .bss.n_p:0000000000000000 $d
     /tmp/cc7sTUNp.s:3803   .bss.start_ticks:0000000000000000 $d
     /tmp/cc7sTUNp.s:3807   .bss.start_ticks:0000000000000000 start_ticks
     /tmp/cc7sTUNp.s:3810   .data.f_shift:0000000000000000 $d
     /tmp/cc7sTUNp.s:3819   .data.g_shift:0000000000000000 $d
     /tmp/cc7sTUNp.s:3828   .data.h_shift:0000000000000000 $d
     /tmp/cc7sTUNp.s:3837   .data.heartbeat:0000000000000000 $d
     /tmp/cc7sTUNp.s:3846   .data.no_key:0000000000000000 $d
     /tmp/cc7sTUNp.s:3855   .data.release:0000000000000000 $d
ARM GAS  /tmp/cc7sTUNp.s 			page 139


     /tmp/cc7sTUNp.s:3864   .data.spaces:0000000000000000 $d
     /tmp/cc7sTUNp.s:3871   .rodata.MID_MENU:0000000000000000 $d
     /tmp/cc7sTUNp.s:3881   .rodata.Menus:0000000000000000 $d
     /tmp/cc7sTUNp.s:3885   .rodata.Menus:0000000000000000 Menus
     /tmp/cc7sTUNp.s:4893   .rodata.mapping_alpha.10909:0000000000000000 $d
     /tmp/cc7sTUNp.s:4897   .rodata.mapping_alpha.10909:0000000000000000 mapping_alpha.10909
     /tmp/cc7sTUNp.s:5040   .rodata.mapping_fshift.10907:0000000000000000 $d
     /tmp/cc7sTUNp.s:5044   .rodata.mapping_fshift.10907:0000000000000000 mapping_fshift.10907
     /tmp/cc7sTUNp.s:5187   .rodata.mapping_gshift.10908:0000000000000000 $d
     /tmp/cc7sTUNp.s:5191   .rodata.mapping_gshift.10908:0000000000000000 mapping_gshift.10908
     /tmp/cc7sTUNp.s:5334   .rodata.mapping_none.10906:0000000000000000 $d
     /tmp/cc7sTUNp.s:5338   .rodata.mapping_none.10906:0000000000000000 mapping_none.10906
     /tmp/cc7sTUNp.s:5481   .rodata.mapping_running.10910:0000000000000000 $d
     /tmp/cc7sTUNp.s:5485   .rodata.mapping_running.10910:0000000000000000 mapping_running.10910
     /tmp/cc7sTUNp.s:5628   .rodata.mid_menu:0000000000000000 $d
     /tmp/cc7sTUNp.s:2106   .text.do_multi:0000000000000025 $d
     /tmp/cc7sTUNp.s:2106   .text.do_multi:0000000000000026 $t

UNDEFINED SYMBOLS
charlengths
findlengths
unpackchar
forceDispPlot
RectPolConv
pixel_length
strcpy
sprintf
process_keycode_with_shift
flash_backup
flash_restore
save_lib_file
load_lib_file
save_ram_file
load_ram_file
load_prog_file
save_prog_file
do_all_dots
init_mem
init_RegionTab
init_34s
check_create_wp34sdir
load_backup_file
display
get_alpha_state
cur_shift
StateWhileOn
DispMsg
JustDisplayed
Pause
Running

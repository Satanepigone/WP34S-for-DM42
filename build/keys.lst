ARM GAS  /tmp/cciIzcMf.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/cciIzcMf.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** /*
  82:src/keys.c    ****  *  Return the shift state
  83:src/keys.c    ****  */
  84:src/keys.c    **** enum shifts cur_shift(void) {
  85:src/keys.c    **** 	enum shifts s = shift_down();
  86:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/cciIzcMf.s 			page 3


  87:src/keys.c    **** }
  88:src/keys.c    **** 
  89:src/keys.c    **** /*
  90:src/keys.c    ****  *  Set new shift state, return previous state
  91:src/keys.c    ****  */
  92:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  93:src/keys.c    **** 	enum shifts r = cur_shift();
  94:src/keys.c    **** 	State2.shifts = shift;
  95:src/keys.c    **** 	State2.alpha_pos = 0;
  96:src/keys.c    **** 	return r;
  97:src/keys.c    **** }
  98:src/keys.c    **** 
  99:src/keys.c    **** /*
 100:src/keys.c    ****  *  Clear shift state and return previous state
 101:src/keys.c    ****  */
 102:src/keys.c    **** enum shifts reset_shift(void) {
 103:src/keys.c    **** 	return set_shift(SHIFT_N);
 104:src/keys.c    **** }
 105:src/keys.c    **** 
 106:src/keys.c    **** /*
 107:src/keys.c    ****  *  Toggle shift state
 108:src/keys.c    ****  */
 109:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 110:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 111:src/keys.c    **** }
 112:src/keys.c    **** 
 113:src/keys.c    **** 
 114:src/keys.c    **** /*
 115:src/keys.c    ****  * Mapping from the key code to a linear index
 116:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 117:src/keys.c    ****  */
 118:src/keys.c    **** #ifdef DM42
 119:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 120:src/keys.c    **** {
 121:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 122:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 123:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 124:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 125:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 126:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 127:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 128:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 129:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 130:src/keys.c    **** 	};
 131:src/keys.c    **** 	return linear_key_map[c];
 132:src/keys.c    **** }
 133:src/keys.c    **** 
 134:src/keys.c    **** static int keycode_to_linear(const keycode c)
 135:src/keys.c    **** {
 136:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 137:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 138:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 139:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 140:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 141:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 142:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 143:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
ARM GAS  /tmp/cciIzcMf.s 			page 4


 144:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 145:src/keys.c    **** 	};
 146:src/keys.c    **** 	return linear_key_map[c];
 147:src/keys.c    **** }
 148:src/keys.c    **** #else
 149:src/keys.c    **** static int keycode_to_linear(const keycode c)
 150:src/keys.c    **** {
 151:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 152:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 153:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 154:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 155:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 156:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 157:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 158:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 159:src/keys.c    **** 	};
 160:src/keys.c    **** 	return linear_key_map[c];
 161:src/keys.c    **** }
 162:src/keys.c    **** #endif
 163:src/keys.c    **** /*
 164:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 165:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 166:src/keys.c    ****  */
 167:src/keys.c    **** int keycode_to_row_column(const int c)
 168:src/keys.c    **** {
 169:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 170:src/keys.c    **** }
 171:src/keys.c    **** 
 172:src/keys.c    **** /*
 173:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 174:src/keys.c    ****  * Used in PUTK and KTYPE.
 175:src/keys.c    ****  */
 176:src/keys.c    **** 
 177:src/keys.c    **** int row_column_to_keycode(const int c)
 178:src/keys.c    **** {
 179:src/keys.c    **** 	int row = c / 10 - 1;
 180:src/keys.c    **** 	int col = c % 10 - 1;
 181:src/keys.c    **** 
 182:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 183:src/keys.c    **** 		return -1;
 184:src/keys.c    **** 	return row * 6 + col;
 185:src/keys.c    **** }
 186:src/keys.c    **** 
 187:src/keys.c    **** /*
 188:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 189:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 190:src/keys.c    ****  */
 191:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 192:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 193:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 194:src/keys.c    **** 
 195:src/keys.c    **** #define NO_REG 0x7f
 196:src/keys.c    **** #define NO_SHORT 0x80
 197:src/keys.c    **** #ifdef DM42
 198:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 199:src/keys.c    **** {
 200:src/keys.c    ****   static const unsigned char map[] = {
ARM GAS  /tmp/cciIzcMf.s 			page 5


 201:src/keys.c    ****     // K00 - K05
 202:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 203:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 204:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 205:src/keys.c    ****     // K10 - K15
 206:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 207:src/keys.c    ****     // K20 - K24
 208:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 209:src/keys.c    ****     // K30 - K34
 210:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 211:src/keys.c    ****     // K40 - K44
 212:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 213:src/keys.c    ****     // K50 - K54
 214:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 215:src/keys.c    ****     // K60 - K64
 216:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 217:src/keys.c    ****     // Shifts
 218:src/keys.c    ****     NO_REG
 219:src/keys.c    ****   };
 220:src/keys.c    **** 
 221:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 222:src/keys.c    **** }
 223:src/keys.c    **** #else
 224:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 225:src/keys.c    **** {
 226:src/keys.c    ****   static const unsigned char map[] = {
 227:src/keys.c    **** 		// K00 - K05
 228:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 229:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 230:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 231:src/keys.c    **** 		// K10 - K12
 232:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 233:src/keys.c    **** 		// K20 - K24
 234:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 235:src/keys.c    **** 		// K30 - K34
 236:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 237:src/keys.c    **** 		// K40 - K44
 238:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 239:src/keys.c    **** 		// K50 - K54
 240:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 241:src/keys.c    **** 		// K60 - K63
 242:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 243:src/keys.c    **** 		regY_idx, regZ_idx,
 244:src/keys.c    **** 		// Shifts, etc
 245:src/keys.c    **** 		NO_REG
 246:src/keys.c    **** 	};
 247:src/keys.c    **** 
 248:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 249:src/keys.c    **** }
 250:src/keys.c    **** #endif
 251:src/keys.c    **** /*
 252:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 253:src/keys.c    ****  */
 254:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 255:src/keys.c    **** {
 256:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 257:src/keys.c    ****   int i, col, max;
ARM GAS  /tmp/cciIzcMf.s 			page 6


 258:src/keys.c    ****   const struct _map {
 259:src/keys.c    ****     unsigned char key, cat[3];
 260:src/keys.c    ****   } *cp;
 261:src/keys.c    **** 
 262:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 263:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 264:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 265:src/keys.c    **** 
 266:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 267:src/keys.c    ****     /*
 268:src/keys.c    ****      *  Normal processing - Not alpha mode
 269:src/keys.c    ****      */
 270:src/keys.c    ****     static const struct _map cmap[] = {
 271:src/keys.c    **** #ifdef DM42
 272:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 273:src/keys.c    **** #else
 274:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 275:src/keys.c    **** #endif
 276:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 277:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 278:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 279:src/keys.c    **** #else
 280:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 281:src/keys.c    **** #endif
 282:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 283:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 284:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 285:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 286:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 287:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 288:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 289:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 290:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 291:src/keys.c    **** #else
 292:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 293:src/keys.c    **** #endif
 294:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 295:src/keys.c    ****     };
 296:src/keys.c    **** 
 297:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 298:src/keys.c    ****       /*
 299:src/keys.c    ****        *  SHOW starts register browser
 300:src/keys.c    ****        */
 301:src/keys.c    ****       return CATALOGUE_REGISTERS;
 302:src/keys.c    ****     }
 303:src/keys.c    **** #if 0
 304:src/keys.c    ****     // conflicts with c# 002 and c# 003
 305:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 306:src/keys.c    ****       /*
 307:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 308:src/keys.c    ****        */
 309:src/keys.c    ****       shift = SHIFT_H;
 310:src/keys.c    ****     }
 311:src/keys.c    **** #endif
 312:src/keys.c    ****     if (shift != SHIFT_H) {
 313:src/keys.c    ****       /*
 314:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
ARM GAS  /tmp/cciIzcMf.s 			page 7


 315:src/keys.c    ****        */
 316:src/keys.c    ****       return CATALOGUE_NONE;
 317:src/keys.c    ****     }
 318:src/keys.c    **** 
 319:src/keys.c    ****     /*
 320:src/keys.c    ****      *  Prepare search
 321:src/keys.c    ****      */
 322:src/keys.c    ****     cp = cmap;
 323:src/keys.c    **** #ifndef WINGUI
 324:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 325:src/keys.c    **** #else
 326:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 327:src/keys.c    **** #endif
 328:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 329:src/keys.c    ****   }
 330:src/keys.c    ****   else {
 331:src/keys.c    ****     /*
 332:src/keys.c    ****      *  All the alpha catalogues go here
 333:src/keys.c    ****      */
 334:src/keys.c    **** #ifdef DM42
 335:src/keys.c    ****     static const struct _map amap[] = {
 336:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 337:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 338:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 339:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 340:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 341:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 342:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 343:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** #else
 346:src/keys.c    ****     static const struct _map amap[] = {
 347:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 348:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 349:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 350:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 351:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 352:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 353:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 354:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 355:src/keys.c    ****     };
 356:src/keys.c    **** #endif
 357:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 358:src/keys.c    **** 
 359:src/keys.c    ****     /*
 360:src/keys.c    ****      *  Prepare search
 361:src/keys.c    ****      */
 362:src/keys.c    ****     cp = amap;
 363:src/keys.c    ****     col = smap[shift];
 364:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 365:src/keys.c    ****   }
 366:src/keys.c    **** 
 367:src/keys.c    ****   /*
 368:src/keys.c    ****    *  Search the key in one of the tables
 369:src/keys.c    ****    */
 370:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 371:src/keys.c    ****     if (cp->key == c) {
ARM GAS  /tmp/cciIzcMf.s 			page 8


 372:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 373:src/keys.c    ****       break;
 374:src/keys.c    ****     }
 375:src/keys.c    ****   }
 376:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 377:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 378:src/keys.c    ****     cat = CATALOGUE_NONE;
 379:src/keys.c    ****   }
 380:src/keys.c    ****   return cat;
 381:src/keys.c    **** }
 382:src/keys.c    **** 
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 385:src/keys.c    **** {
 386:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 387:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 388:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 389:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 390:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 391:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 392:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 393:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 394:src/keys.c    **** 
 395:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 396:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 397:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 398:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 399:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 400:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 401:src/keys.c    **** 
 402:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 403:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 404:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 405:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 406:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 407:src/keys.c    **** 
 408:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 409:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 410:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 411:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 412:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 413:src/keys.c    **** 
 414:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 415:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 416:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 417:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 418:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 419:src/keys.c    **** 
 420:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 421:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 422:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 423:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 424:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 425:src/keys.c    **** 
 426:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 427:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 428:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
ARM GAS  /tmp/cciIzcMf.s 			page 9


 429:src/keys.c    **** 		{ '?',  0000, 0041, 0000, 0000, 0000,  },  // K63
 430:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, 0000, 0000,  },  // K64
 431:src/keys.c    **** 
 432:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 433:src/keys.c    **** 	};
 434:src/keys.c    **** 	if (State2.alphashift) {
 435:src/keys.c    **** 		if (shift == SHIFT_N)
 436:src/keys.c    **** 			shift = SHIFT_LC_N;
 437:src/keys.c    **** 		else if (shift == SHIFT_G)
 438:src/keys.c    **** 			shift = SHIFT_LC_G;
 439:src/keys.c    **** 	}
 440:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 441:src/keys.c    **** }
 442:src/keys.c    **** #else
 443:src/keys.c    **** /*
 444:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 445:src/keys.c    ****  * the two lower case planes.
 446:src/keys.c    ****  */
 447:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 448:src/keys.c    **** {
 449:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 450:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 451:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 452:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 453:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 454:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 455:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 456:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 457:src/keys.c    **** 
 458:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 459:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 460:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 461:src/keys.c    **** 
 462:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 463:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 464:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 465:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 466:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 467:src/keys.c    **** 
 468:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 469:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 470:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 471:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 472:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 473:src/keys.c    **** 
 474:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 475:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 476:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 477:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 478:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 479:src/keys.c    **** 
 480:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 481:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 482:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 483:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 484:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 485:src/keys.c    **** 
ARM GAS  /tmp/cciIzcMf.s 			page 10


 486:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 487:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 488:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 489:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 490:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 491:src/keys.c    **** 	};
 492:src/keys.c    **** 	if (State2.alphashift) {
 493:src/keys.c    **** 		if (shift == SHIFT_N)
 494:src/keys.c    **** 			shift = SHIFT_LC_N;
 495:src/keys.c    **** 		else if (shift == SHIFT_G)
 496:src/keys.c    **** 			shift = SHIFT_LC_G;
 497:src/keys.c    **** 	}
 498:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 499:src/keys.c    **** }
 500:src/keys.c    **** #endif
 501:src/keys.c    **** static void init_arg(const enum rarg base) {
 502:src/keys.c    **** 	if (is_bad_cmdline())
 503:src/keys.c    **** 		return;
 504:src/keys.c    **** 	CmdBase = base;
 505:src/keys.c    **** 	State2.ind = 0;
 506:src/keys.c    **** 	State2.digval = 0;
 507:src/keys.c    **** 	State2.numdigit = 0;
 508:src/keys.c    **** 	State2.rarg = 1;
 509:src/keys.c    **** 	State2.dot = 0;
 510:src/keys.c    **** 	State2.local = 0;
 511:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 512:src/keys.c    **** }
 513:src/keys.c    **** 
 514:src/keys.c    **** static void init_cat(enum catalogues cat) {
 515:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 516:src/keys.c    **** 		// Save last catalogue for a later restore
 517:src/keys.c    **** 		State.last_cat = State2.catalogue;
 518:src/keys.c    **** 		CmdLineLength = 0;
 519:src/keys.c    **** 	}
 520:src/keys.c    **** 	process_cmdline();
 521:src/keys.c    **** 
 522:src/keys.c    **** 	State2.labellist = 0;
 523:src/keys.c    **** 	State2.registerlist = 0;
 524:src/keys.c    **** 	State2.status = 0;
 525:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 526:src/keys.c    **** 
 527:src/keys.c    **** 	switch (cat) {
 528:src/keys.c    **** 	case CATALOGUE_LABELS:
 529:src/keys.c    **** 		// Label browser
 530:src/keys.c    **** 		State2.labellist = 1;
 531:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 532:src/keys.c    **** 		break;
 533:src/keys.c    **** 	
 534:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 535:src/keys.c    **** 		// Register browser
 536:src/keys.c    **** 		State2.registerlist = 1;
 537:src/keys.c    **** 		State2.digval = regX_idx;
 538:src/keys.c    **** 		State2.digval2 = 0;
 539:src/keys.c    **** 		break;
 540:src/keys.c    **** 
 541:src/keys.c    **** 	case CATALOGUE_STATUS:
 542:src/keys.c    **** 		// Flag browser
ARM GAS  /tmp/cciIzcMf.s 			page 11


 543:src/keys.c    **** 		State2.status = 1;
 544:src/keys.c    **** 		break;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	default:
 547:src/keys.c    **** 		// Normal catalogue
 548:src/keys.c    **** 		State2.catalogue = cat;
 549:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 550:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 551:src/keys.c    **** 			// Different catalogue, reset position
 552:src/keys.c    **** 			State.catpos = 0;
 553:src/keys.c    **** 		}
 554:src/keys.c    **** 	}
 555:src/keys.c    **** 	reset_shift();
 556:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 557:src/keys.c    **** 	changed_catalog_state();
 558:src/keys.c    **** #endif
 559:src/keys.c    **** }
 560:src/keys.c    **** 
 561:src/keys.c    **** /*
 562:src/keys.c    ****  *  Reset the internal state to a sane default
 563:src/keys.c    ****  */
 564:src/keys.c    **** void init_state(void) {
 565:src/keys.c    **** #ifndef REALBUILD
 566:src/keys.c    **** 	unsigned int a = State2.flags;
 567:src/keys.c    **** 	unsigned int b = State2.trace;
 568:src/keys.c    **** #else
 569:src/keys.c    **** 	FLAG t = TestFlag;
 570:src/keys.c    **** #endif
 571:src/keys.c    **** 	int v = Voltage;
 572:src/keys.c    **** 	int k = LastKey;
 573:src/keys.c    **** 
 574:src/keys.c    **** 	CmdBase = 0;
 575:src/keys.c    **** 	// Removed: will clear any locals on power off
 576:src/keys.c    **** 	// clrretstk(0);
 577:src/keys.c    **** 
 578:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 579:src/keys.c    **** 	State2.test = TST_NONE;
 580:src/keys.c    **** 	State2.runmode = 1;
 581:src/keys.c    **** 	update_program_bounds(1);
 582:src/keys.c    **** 	set_lift();
 583:src/keys.c    **** 
 584:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 585:src/keys.c    **** 	// but must not be cleared.
 586:src/keys.c    **** 	Voltage = v;
 587:src/keys.c    **** 	LastKey = k;
 588:src/keys.c    **** #ifndef REALBUILD
 589:src/keys.c    **** 	State2.trace = b;
 590:src/keys.c    **** 	State2.flags = a;
 591:src/keys.c    **** #else
 592:src/keys.c    **** 	TestFlag = t;
 593:src/keys.c    **** #endif
 594:src/keys.c    **** 	ShowRegister = regX_idx;
 595:src/keys.c    **** }
 596:src/keys.c    **** 
 597:src/keys.c    **** void soft_init_state(void) {
 598:src/keys.c    **** 	int soft;
 599:src/keys.c    **** 	unsigned int runmode;
ARM GAS  /tmp/cciIzcMf.s 			page 12


 600:src/keys.c    **** 	unsigned int alphas;
 601:src/keys.c    **** 
 602:src/keys.c    **** 	if (CmdLineLength) {
 603:src/keys.c    **** 		CmdLineLength = 0;
 604:src/keys.c    **** 		CmdLineEex = 0;
 605:src/keys.c    **** 		CmdLineDot = 0;
 606:src/keys.c    **** 		return;
 607:src/keys.c    **** 	}
 608:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 609:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 610:src/keys.c    **** 	runmode = State2.runmode;
 611:src/keys.c    **** 	alphas = State2.alphas;
 612:src/keys.c    **** 	init_state();
 613:src/keys.c    **** 	if (soft) {
 614:src/keys.c    **** 		State2.runmode = runmode;
 615:src/keys.c    **** 		State2.alphas = alphas;
 616:src/keys.c    **** 	}
 617:src/keys.c    **** }
 618:src/keys.c    **** 
 619:src/keys.c    **** static int check_confirm(int op) {
 620:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 621:src/keys.c    **** 		const int nilop = argKIND(op);
 622:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 623:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 624:src/keys.c    **** 			return STATE_UNFINISHED;
 625:src/keys.c    **** 		}
 626:src/keys.c    **** #ifndef DM42		
 627:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 628:src/keys.c    **** #endif
 629:src/keys.c    **** #ifdef DM42
 630:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 631:src/keys.c    **** #endif
 632:src/keys.c    **** #ifdef INFRARED
 633:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 634:src/keys.c    **** #endif
 635:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 636:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 637:src/keys.c    **** #endif
 638:src/keys.c    **** 		) {
 639:src/keys.c    **** 			// These commands are not programmable
 640:src/keys.c    **** 			NonProgrammable = 1;
 641:src/keys.c    **** 		}
 642:src/keys.c    **** 	}
 643:src/keys.c    **** 	return op;
 644:src/keys.c    **** }
 645:src/keys.c    **** 
 646:src/keys.c    **** static void set_smode(const enum single_disp d) {
 647:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 648:src/keys.c    **** }
 649:src/keys.c    **** 
 650:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 651:src/keys.c    **** 	const int code = 100 + n;
 652:src/keys.c    **** 	unsigned int pc = state_pc();
 653:src/keys.c    **** 
 654:src/keys.c    **** 	if (State2.runmode) {
 655:src/keys.c    **** 		if (isXROM(pc))
 656:src/keys.c    **** 			pc = 1;
ARM GAS  /tmp/cciIzcMf.s 			page 13


 657:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 658:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 659:src/keys.c    **** 	}
 660:src/keys.c    **** 	return dflt;
 661:src/keys.c    **** }
 662:src/keys.c    **** 
 663:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 664:src/keys.c    ****  * as digits.
 665:src/keys.c    ****  */
 666:src/keys.c    **** static int intltr(int d) {
 667:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 668:src/keys.c    **** }
 669:src/keys.c    **** 
 670:src/keys.c    **** /*
 671:src/keys.c    ****  *  Process a key code in the unshifted mode.
 672:src/keys.c    ****  */
 673:src/keys.c    **** static int process_normal(const keycode c)
 674:src/keys.c    **** {
 675:src/keys.c    **** 	static const unsigned short int op_map[] = {
 676:src/keys.c    **** 		// Row 1
 677:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 678:src/keys.c    **** 		OP_MON  | OP_RECIP,
 679:src/keys.c    **** 		OP_DYA  | OP_POW,
 680:src/keys.c    **** 		OP_MON  | OP_SQRT,
 681:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 682:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 683:src/keys.c    **** 		// Row 2
 684:src/keys.c    **** 		RARG_STO,
 685:src/keys.c    **** 		RARG_RCL,
 686:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 687:src/keys.c    **** 		// Row 3
 688:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 689:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 690:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 691:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 692:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 693:src/keys.c    **** 		// Row 4
 694:src/keys.c    **** 		RARG_XEQ,
 695:src/keys.c    **** 		OP_SPEC | OP_7,
 696:src/keys.c    **** 		OP_SPEC | OP_8,
 697:src/keys.c    **** 		OP_SPEC | OP_9,
 698:src/keys.c    **** 		OP_DYA  | OP_DIV,
 699:src/keys.c    **** 		// Row 5
 700:src/keys.c    **** 		STATE_BST,
 701:src/keys.c    **** 		OP_SPEC | OP_4,
 702:src/keys.c    **** 		OP_SPEC | OP_5,
 703:src/keys.c    **** 		OP_SPEC | OP_6,
 704:src/keys.c    **** 		OP_DYA  | OP_MUL,
 705:src/keys.c    **** 		// Row 6
 706:src/keys.c    **** 		STATE_SST,		// SST
 707:src/keys.c    **** 		OP_SPEC | OP_1,
 708:src/keys.c    **** 		OP_SPEC | OP_2,
 709:src/keys.c    **** 		OP_SPEC | OP_3,
 710:src/keys.c    **** 		OP_DYA  | OP_SUB,
 711:src/keys.c    **** 		// Row 7
 712:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 713:src/keys.c    **** 		OP_SPEC | OP_0,
ARM GAS  /tmp/cciIzcMf.s 			page 14


 714:src/keys.c    **** 		OP_SPEC | OP_DOT,
 715:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 716:src/keys.c    **** 		OP_DYA  | OP_ADD,
 717:src/keys.c    **** #ifdef DM42
 718:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 719:src/keys.c    **** #endif
 720:src/keys.c    **** 	};
 721:src/keys.c    **** 
 722:src/keys.c    **** 	int lc = keycode_to_linear(c);
 723:src/keys.c    **** 	int op = op_map[lc];
 724:src/keys.c    **** 	
 725:src/keys.c    **** 	// The switch handles all the special cases
 726:src/keys.c    **** #ifdef DM42
 727:src/keys.c    **** 	int op_int;
 728:src/keys.c    **** 	if (UState.intm) {
 729:src/keys.c    **** 	  switch (c) {
 730:src/keys.c    **** 	  case K00:
 731:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 732:src/keys.c    **** 	    if (intltr(10)) {
 733:src/keys.c    **** 	      return op;
 734:src/keys.c    **** 	    }
 735:src/keys.c    **** 	    else {
 736:src/keys.c    **** 	      return check_f_key(0, op);
 737:src/keys.c    **** 	    }
 738:src/keys.c    **** 	  case K01:
 739:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 740:src/keys.c    **** 	    if (intltr(11)) {
 741:src/keys.c    **** 	      return op;
 742:src/keys.c    **** 	    }
 743:src/keys.c    **** 	    else {
 744:src/keys.c    **** 	      return check_f_key(1, op);
 745:src/keys.c    **** 	    }
 746:src/keys.c    **** 	  case K03:
 747:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 748:src/keys.c    **** 	    if (intltr(12)) {
 749:src/keys.c    **** 	      return op_int;
 750:src/keys.c    **** 	    }
 751:src/keys.c    **** 	    else {
 752:src/keys.c    **** 	      return check_f_key(2, op);
 753:src/keys.c    **** 	    }
 754:src/keys.c    **** 	  case K30:
 755:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 756:src/keys.c    **** 	    if (intltr(15)) {
 757:src/keys.c    **** 	      return op_int;
 758:src/keys.c    **** 	    }
 759:src/keys.c    **** 	  default:;
 760:src/keys.c    **** 	  }
 761:src/keys.c    **** 	}
 762:src/keys.c    **** #endif  
 763:src/keys.c    **** 
 764:src/keys.c    **** 	switch (c) {
 765:src/keys.c    **** #ifdef DM42
 766:src/keys.c    **** 	case K00:
 767:src/keys.c    **** 		return check_f_key(0, op);
 768:src/keys.c    **** 	case K01:
 769:src/keys.c    **** 		return check_f_key(1, op);
 770:src/keys.c    **** 	case K03:
ARM GAS  /tmp/cciIzcMf.s 			page 15


 771:src/keys.c    **** 		return check_f_key(2, op);
 772:src/keys.c    **** #else
 773:src/keys.c    **** 	case K00:
 774:src/keys.c    **** 	case K01:
 775:src/keys.c    **** 		if (UState.intm)
 776:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 777:src/keys.c    **** 	case K02:
 778:src/keys.c    **** 	case K03:
 779:src/keys.c    **** 		if (intltr(lc + 10)) {
 780:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 781:src/keys.c    **** 			return op;
 782:src/keys.c    **** 		}
 783:src/keys.c    **** 		return check_f_key(lc, op);
 784:src/keys.c    **** #endif		
 785:src/keys.c    **** 	case K_ARROW:
 786:src/keys.c    **** #ifndef DM42
 787:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 788:src/keys.c    **** 		if (intltr(14))
 789:src/keys.c    **** 			return op;
 790:src/keys.c    **** #else
 791:src/keys.c    **** 		if (UState.intm)
 792:src/keys.c    **** 			return op;
 793:src/keys.c    **** #endif
 794:src/keys.c    **** #endif		
 795:src/keys.c    **** 		if (is_bad_cmdline())
 796:src/keys.c    **** 			return STATE_UNFINISHED;
 797:src/keys.c    **** 		process_cmdline_set_lift();
 798:src/keys.c    **** 		State2.arrow = 1;
 799:src/keys.c    **** #ifdef DM42
 800:src/keys.c    **** 		set_menu (9); // arrow menu
 801:src/keys.c    **** 		display_current_menu ();
 802:src/keys.c    **** 		lcd_refresh ();
 803:src/keys.c    **** #else
 804:src/keys.c    **** 		set_shift(SHIFT_G);
 805:src/keys.c    **** #endif
 806:src/keys.c    **** 		break;
 807:src/keys.c    **** 
 808:src/keys.c    **** 	case K_CMPLX:
 809:src/keys.c    **** #ifdef DM42
 810:src/keys.c    **** 	  if (UState.intm)
 811:src/keys.c    **** 	    break; // return nothing
 812:src/keys.c    **** 	  State2.cmplx = 1;
 813:src/keys.c    **** #else
 814:src/keys.c    **** 	  if (UState.intm)
 815:src/keys.c    **** 	    return op;
 816:src/keys.c    **** 	  State2.cmplx = 1;
 817:src/keys.c    **** #endif
 818:src/keys.c    **** 	  break;
 819:src/keys.c    **** 
 820:src/keys.c    **** 	case K24:				// <-
 821:src/keys.c    **** 		if (State2.disp_temp)
 822:src/keys.c    **** 			return STATE_UNFINISHED;
 823:src/keys.c    **** 		if (State2.runmode)
 824:src/keys.c    **** 			return op;
 825:src/keys.c    **** 		return STATE_BACKSPACE;
 826:src/keys.c    **** 
 827:src/keys.c    **** 	case K10:				// STO
ARM GAS  /tmp/cciIzcMf.s 			page 16


 828:src/keys.c    **** 	case K11:				// RCL
 829:src/keys.c    **** 	case K30:				// XEQ
 830:src/keys.c    **** 		init_arg((enum rarg)op);
 831:src/keys.c    **** 		break;
 832:src/keys.c    **** 
 833:src/keys.c    **** 	default:
 834:src/keys.c    **** 		return op;			// Keys handled by table
 835:src/keys.c    **** 	}
 836:src/keys.c    **** 	return STATE_UNFINISHED;
 837:src/keys.c    **** }
 838:src/keys.c    **** 
 839:src/keys.c    **** 
 840:src/keys.c    **** /*
 841:src/keys.c    ****  *  Process a key code after f or g shift
 842:src/keys.c    ****  */
 843:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 844:src/keys.c    **** 
 845:src/keys.c    **** #define NO_INT 0xf000
 846:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 847:src/keys.c    **** 		// Row 1
 848:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 849:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 850:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 851:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 852:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 853:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 854:src/keys.c    **** 		// Row 2
 855:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 856:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 857:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 858:src/keys.c    **** 		// Row 3
 859:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 860:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 861:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 862:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 863:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 864:src/keys.c    **** 		// Row 4
 865:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 866:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 867:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 868:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 869:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 870:src/keys.c    **** 		// Row 5
 871:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 872:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 873:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 874:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 875:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 876:src/keys.c    **** 		// Row 6
 877:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 878:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 879:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 880:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 881:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 882:src/keys.c    **** 		// Row 7
 883:src/keys.c    **** #ifdef INFRARED
 884:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
ARM GAS  /tmp/cciIzcMf.s 			page 17


 885:src/keys.c    **** #else
 886:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 887:src/keys.c    **** #endif
 888:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 889:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 890:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 891:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 892:src/keys.c    **** #ifdef DM42
 893:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 894:src/keys.c    **** #endif
 895:src/keys.c    **** 	};
 896:src/keys.c    **** 
 897:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 898:src/keys.c    **** 		STATE_UNFINISHED,
 899:src/keys.c    **** 		STATE_UNFINISHED,
 900:src/keys.c    **** 		OP_DYA  | OP_POW,
 901:src/keys.c    **** 		OP_MON  | OP_SQRT
 902:src/keys.c    **** 	};
 903:src/keys.c    **** 
 904:src/keys.c    **** 	enum shifts shift = reset_shift();
 905:src/keys.c    **** 	int lc = keycode_to_linear(c);
 906:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 907:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 908:src/keys.c    **** 	if (no_int)
 909:src/keys.c    **** 		op &= ~NO_INT;
 910:src/keys.c    **** 
 911:src/keys.c    **** 	switch (c) {
 912:src/keys.c    **** 	case K00:
 913:src/keys.c    **** 	  if (! UState.intm) {
 914:src/keys.c    **** 	    State2.hyp = 1;
 915:src/keys.c    **** 	    State2.dot = op;
 916:src/keys.c    **** 	    // State2.cmplx = 0;
 917:src/keys.c    **** 	    return STATE_UNFINISHED;
 918:src/keys.c    **** 	  }
 919:src/keys.c    **** 	  // fall through
 920:src/keys.c    **** 	case K01:
 921:src/keys.c    **** #ifdef DM42
 922:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 923:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 924:src/keys.c    **** 	  }
 925:src/keys.c    **** 	  break;
 926:src/keys.c    **** #endif
 927:src/keys.c    **** #ifndef DM42
 928:src/keys.c    **** 	case K02:
 929:src/keys.c    **** #endif
 930:src/keys.c    **** 	case K03:
 931:src/keys.c    **** #ifdef DM42
 932:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 933:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 934:src/keys.c    **** 		}
 935:src/keys.c    **** 		break;
 936:src/keys.c    **** #else
 937:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 938:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 939:src/keys.c    **** 		}
 940:src/keys.c    **** 		break;
 941:src/keys.c    **** #endif
ARM GAS  /tmp/cciIzcMf.s 			page 18


 942:src/keys.c    **** 	case K20:				// Alpha
 943:src/keys.c    **** 		if (shift == SHIFT_F) {
 944:src/keys.c    **** 			if (is_bad_cmdline())
 945:src/keys.c    **** 				return STATE_UNFINISHED;
 946:src/keys.c    **** 			process_cmdline_set_lift();
 947:src/keys.c    **** 			State2.alphas = 1;
 948:src/keys.c    **** 		}
 949:src/keys.c    **** 		break;
 950:src/keys.c    **** #ifdef DM42
 951:src/keys.c    **** 	case K31:
 952:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 953:src/keys.c    **** 	    return OP_SPEC | OP_D;
 954:src/keys.c    **** 	  }
 955:src/keys.c    **** 	  break;
 956:src/keys.c    **** 	case K30:
 957:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 958:src/keys.c    **** 	    return OP_SPEC | OP_E;
 959:src/keys.c    **** 	  }
 960:src/keys.c    **** 	  break;
 961:src/keys.c    **** #endif
 962:src/keys.c    **** 	case K51:
 963:src/keys.c    **** 		if (is_bad_cmdline())
 964:src/keys.c    **** 			return STATE_UNFINISHED;
 965:src/keys.c    **** 		process_cmdline_set_lift();
 966:src/keys.c    **** 		State2.test = op;
 967:src/keys.c    **** 		return STATE_UNFINISHED;
 968:src/keys.c    **** 
 969:src/keys.c    **** 	case K50:
 970:src/keys.c    **** #ifndef REALBUILD
 971:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 972:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 973:src/keys.c    **** 			return STATE_UNFINISHED;
 974:src/keys.c    **** 		}
 975:src/keys.c    **** #endif
 976:src/keys.c    **** 	case K52:
 977:src/keys.c    **** 	case K53:
 978:src/keys.c    **** 	case K63:
 979:src/keys.c    **** 	case K64:
 980:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 981:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 982:src/keys.c    **** 				init_arg((enum rarg) op);
 983:src/keys.c    **** 			}
 984:src/keys.c    **** 			return STATE_UNFINISHED;
 985:src/keys.c    **** 		}
 986:src/keys.c    **** 		break;
 987:src/keys.c    **** 
 988:src/keys.c    **** 	default:
 989:src/keys.c    **** 		break;
 990:src/keys.c    **** 	}
 991:src/keys.c    **** 	if (no_int && UState.intm)
 992:src/keys.c    **** 		return STATE_UNFINISHED;
 993:src/keys.c    **** 
 994:src/keys.c    **** 	return check_confirm(op);
 995:src/keys.c    **** #undef NO_INT
 996:src/keys.c    **** }
 997:src/keys.c    **** 
 998:src/keys.c    **** /*
ARM GAS  /tmp/cciIzcMf.s 			page 19


 999:src/keys.c    ****  *  Process a key code after h shift
1000:src/keys.c    ****  */
1001:src/keys.c    **** static int process_h_shifted(const keycode c) {
1002:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1003:src/keys.c    **** #define NO_INT   0x4000
1004:src/keys.c    **** 	static const unsigned short int op_map[] = {
1005:src/keys.c    **** 		// Row 1
1006:src/keys.c    **** 		_RARG   | RARG_STD,
1007:src/keys.c    **** 		_RARG   | RARG_FIX,
1008:src/keys.c    **** 		_RARG   | RARG_SCI,
1009:src/keys.c    **** 		_RARG   | RARG_ENG,
1010:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1011:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1012:src/keys.c    **** 		// Row 2
1013:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1014:src/keys.c    **** 		_RARG   | RARG_VIEW,
1015:src/keys.c    **** 		OP_NIL  | OP_RUP,
1016:src/keys.c    **** 		// Row 3
1017:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1018:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1019:src/keys.c    **** 		OP_MON  | OP_NOT,
1020:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1021:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1022:src/keys.c    **** 		// Row 4
1023:src/keys.c    **** 		_RARG   | RARG_GTO,
1024:src/keys.c    **** 		OP_DYA  | OP_LAND,
1025:src/keys.c    **** 		OP_DYA  | OP_LOR,
1026:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1027:src/keys.c    **** 		OP_DYA  | OP_MOD,
1028:src/keys.c    **** 		// Row 5
1029:src/keys.c    **** 		OP_MON  | OP_FACT,
1030:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1031:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1032:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1033:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1034:src/keys.c    **** 		// Row 6
1035:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1036:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1037:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1038:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1039:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1040:src/keys.c    **** 		// Row 7
1041:src/keys.c    **** 		OP_NIL | OP_OFF,
1042:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1043:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1044:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1045:src/keys.c    **** #else
1046:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1047:src/keys.c    **** #endif
1048:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1049:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1050:src/keys.c    **** #ifdef DM42
1051:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1052:src/keys.c    **** #endif
1053:src/keys.c    **** 	};
1054:src/keys.c    **** 
1055:src/keys.c    **** 	int lc = keycode_to_linear(c);
ARM GAS  /tmp/cciIzcMf.s 			page 20


1056:src/keys.c    **** 	int op = op_map[lc];
1057:src/keys.c    **** 	reset_shift();
1058:src/keys.c    **** 
1059:src/keys.c    **** 	// The switch handles all the special cases
1060:src/keys.c    **** 	switch (c) {
1061:src/keys.c    **** 	case K62:
1062:src/keys.c    **** 		if (UState.intm)
1063:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1064:src/keys.c    **** 		else
1065:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1066:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1067:src/keys.c    **** #else
1068:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1069:src/keys.c    **** #endif
1070:src/keys.c    **** 		break;
1071:src/keys.c    **** 
1072:src/keys.c    **** 	case K63:					// Program<->Run mode
1073:src/keys.c    **** 		if (is_bad_cmdline())
1074:src/keys.c    **** 			return STATE_UNFINISHED;
1075:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1076:src/keys.c    **** 		process_cmdline_set_lift();
1077:src/keys.c    **** 		update_program_bounds(1);
1078:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1079:src/keys.c    **** 			set_pc(0);
1080:src/keys.c    **** 		break;
1081:src/keys.c    **** 
1082:src/keys.c    **** 	default:
1083:src/keys.c    **** 		break;
1084:src/keys.c    **** 	}
1085:src/keys.c    **** 
1086:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1087:src/keys.c    **** 		if (op & _RARG) {
1088:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1089:src/keys.c    **** 			op = STATE_UNFINISHED;
1090:src/keys.c    **** 		}
1091:src/keys.c    **** 	}
1092:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1093:src/keys.c    **** #undef _RARG
1094:src/keys.c    **** #undef NO_INT
1095:src/keys.c    **** }
1096:src/keys.c    **** 
1097:src/keys.c    **** /*
1098:src/keys.c    ****  *  Process a key code after CPX
1099:src/keys.c    ****  */
1100:src/keys.c    **** static int process_cmplx(const keycode c) {
1101:src/keys.c    **** #define _RARG   0xFF00
1102:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1103:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1104:src/keys.c    **** 
1105:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1106:src/keys.c    **** 		// Row 1
1107:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1108:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1109:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1110:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1111:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1112:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
ARM GAS  /tmp/cciIzcMf.s 			page 21


1113:src/keys.c    **** 		// Row 2
1114:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1115:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1116:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1117:src/keys.c    **** 		// Row 3
1118:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1119:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1120:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1121:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1122:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1123:src/keys.c    **** 		// Row 4
1124:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1125:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1126:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1127:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1128:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1129:src/keys.c    **** 		// Row 5
1130:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1131:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1132:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1133:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1135:src/keys.c    **** 		// Row 6
1136:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1138:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1139:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1140:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		// Row 7
1142:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1143:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1144:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1145:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1146:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1147:src/keys.c    **** #else
1148:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** #endif
1150:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1151:src/keys.c    **** #ifdef DM42
1152:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1153:src/keys.c    **** #endif
1154:src/keys.c    **** 	};
1155:src/keys.c    **** 
1156:src/keys.c    **** 	enum shifts shift = reset_shift();
1157:src/keys.c    **** 	int lc = keycode_to_linear(c);
1158:src/keys.c    **** 	int op = op_map[lc][shift];
1159:src/keys.c    **** 	State2.cmplx = 0;
1160:src/keys.c    **** 
1161:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1162:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1163:src/keys.c    **** 		return STATE_UNFINISHED;
1164:src/keys.c    **** 	}
1165:src/keys.c    **** 	if (c == K00) {
1166:src/keys.c    **** 		// HYP
1167:src/keys.c    **** 		process_cmdline_set_lift();
1168:src/keys.c    **** 		State2.hyp = 1;
1169:src/keys.c    **** 		State2.dot = op;
ARM GAS  /tmp/cciIzcMf.s 			page 22


1170:src/keys.c    **** 		State2.cmplx = 1;
1171:src/keys.c    **** 		return STATE_UNFINISHED;
1172:src/keys.c    **** 	}
1173:src/keys.c    **** 
1174:src/keys.c    **** 	if (shift != SHIFT_N) {
1175:src/keys.c    **** 		switch (c) {
1176:src/keys.c    **** 		case K_CMPLX:
1177:src/keys.c    **** 			set_shift(shift);
1178:src/keys.c    **** 			break;
1179:src/keys.c    **** 
1180:src/keys.c    **** 		case K51:
1181:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1182:src/keys.c    **** 				if (is_bad_cmdline())
1183:src/keys.c    **** 					return STATE_UNFINISHED;
1184:src/keys.c    **** 				process_cmdline_set_lift();
1185:src/keys.c    **** 				State2.cmplx = 1;
1186:src/keys.c    **** 				State2.test = op;
1187:src/keys.c    **** 			}
1188:src/keys.c    **** 			return STATE_UNFINISHED;
1189:src/keys.c    **** 
1190:src/keys.c    **** 		case K60:
1191:src/keys.c    **** 			init_state();
1192:src/keys.c    **** 			break;
1193:src/keys.c    **** 
1194:src/keys.c    **** 		default:
1195:src/keys.c    **** 			break;
1196:src/keys.c    **** 		}
1197:src/keys.c    **** 	}
1198:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1199:src/keys.c    **** 	return check_confirm(op);
1200:src/keys.c    **** #else
1201:src/keys.c    **** 	return op;
1202:src/keys.c    **** #endif
1203:src/keys.c    **** 
1204:src/keys.c    **** #undef _RARG
1205:src/keys.c    **** #undef CSWAPXZ
1206:src/keys.c    **** #undef CNUM
1207:src/keys.c    **** }
1208:src/keys.c    **** 
1209:src/keys.c    **** 
1210:src/keys.c    **** 
1211:src/keys.c    **** /*
1212:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1213:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1214:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1215:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1216:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1217:src/keys.c    ****  * the ON key are dealt with by our caller.
1218:src/keys.c    ****  */
1219:src/keys.c    **** static int process_hyp(const keycode c) {
1220:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1221:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1222:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1223:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1224:src/keys.c    **** 	};
1225:src/keys.c    **** 	int cmplx = State2.cmplx;
1226:src/keys.c    **** 	int f = State2.dot;
ARM GAS  /tmp/cciIzcMf.s 			page 23


1227:src/keys.c    **** 
1228:src/keys.c    **** 	State2.hyp = 0;
1229:src/keys.c    **** 	State2.cmplx = 0;
1230:src/keys.c    **** 	State2.dot = 0;
1231:src/keys.c    **** #ifdef DM42
1232:src/keys.c    **** 	reset_shift();
1233:src/keys.c    **** #endif
1234:src/keys.c    **** 	switch ((int)c) {
1235:src/keys.c    **** 
1236:src/keys.c    **** 	case K01:
1237:src/keys.c    **** 	case K02:
1238:src/keys.c    **** 	case K03:
1239:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1240:src/keys.c    **** 
1241:src/keys.c    **** 	case K_CMPLX:
1242:src/keys.c    **** 		cmplx = ! cmplx;
1243:src/keys.c    **** 		goto stay;
1244:src/keys.c    **** 
1245:src/keys.c    **** 	case K_F: 
1246:src/keys.c    **** 	case K_G:
1247:src/keys.c    **** 		f = (c == K_F);
1248:src/keys.c    **** 		// fall trough
1249:src/keys.c    **** 	stay:
1250:src/keys.c    **** 		// process_cmdline_set_lift();
1251:src/keys.c    **** 		State2.hyp = 1;
1252:src/keys.c    **** 		State2.cmplx = cmplx;
1253:src/keys.c    **** 		State2.dot = f;
1254:src/keys.c    **** 		break;
1255:src/keys.c    **** 
1256:src/keys.c    **** 	default:
1257:src/keys.c    **** 		break;
1258:src/keys.c    **** 	}
1259:src/keys.c    **** 	return STATE_UNFINISHED;
1260:src/keys.c    **** }
1261:src/keys.c    **** 
1262:src/keys.c    **** 
1263:src/keys.c    **** /*
1264:src/keys.c    ****  *  Process a key code after ->
1265:src/keys.c    ****  */
1266:src/keys.c    **** static int process_arrow(const keycode c) {
1267:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1268:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1269:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1270:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1271:src/keys.c    **** 	};
1272:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1273:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1274:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1275:src/keys.c    **** 	};
1276:src/keys.c    **** 	const int shift = reset_shift();
1277:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1278:src/keys.c    **** 
1279:src/keys.c    **** 	State2.arrow = 0;
1280:src/keys.c    **** #ifdef DM42
1281:src/keys.c    **** 	set_last_menu ();
1282:src/keys.c    **** 	display_current_menu ();
1283:src/keys.c    **** #endif
ARM GAS  /tmp/cciIzcMf.s 			page 24


1284:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1285:src/keys.c    **** 	
1286:src/keys.c    **** 	if (c >= K10 && c <= K12)
1287:src/keys.c    **** 		return op_map[c - K10][f];
1288:src/keys.c    **** 
1289:src/keys.c    **** 	if (c == K22 || c == K23)
1290:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1291:src/keys.c    **** 
1292:src/keys.c    **** 	return STATE_UNFINISHED;
1293:src/keys.c    **** }
1294:src/keys.c    **** 
1295:src/keys.c    **** 
1296:src/keys.c    **** /* Process a GTO . sequence
1297:src/keys.c    ****  */
1298:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1298 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1299:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1299 2 view .LVU1
1300:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1300 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1298 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1299:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1299 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1300 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1299:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1299 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1300 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1299:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1299 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1298 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1301:src/keys.c    **** 
1302:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1302 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1299:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1299 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
ARM GAS  /tmp/cciIzcMf.s 			page 25


  62              	.LVL2:
1300:src/keys.c    **** 
  63              		.loc 1 1300 2 is_stmt 1 view .LVU12
  64              		.loc 1 1302 2 view .LVU13
  65              		.loc 1 1302 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1302 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1302 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1303:src/keys.c    **** 		return val;
1304:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1304 2 is_stmt 1 view .LVU17
  77              		.loc 1 1304 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1304 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1304 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1304 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1304 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1305:src/keys.c    **** 		return val;
1306:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1306 2 is_stmt 1 view .LVU23
  91              		.loc 1 1306 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1307:src/keys.c    **** 	return -1;
  94              		.loc 1 1307 2 is_stmt 1 view .LVU25
1304:src/keys.c    **** 		return val;
  95              		.loc 1 1304 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1307 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1308:src/keys.c    **** }
 102              		.loc 1 1308 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1308 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
ARM GAS  /tmp/cciIzcMf.s 			page 26


 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 650:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 650 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 651 2 view .LVU31
 650:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 650 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 654:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 654 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 652:src/keys.c    **** 
 143              		.loc 1 652 2 is_stmt 1 view .LVU34
 654:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 654 2 view .LVU35
 654:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 654 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 650:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 650 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 654:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 654 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 652:src/keys.c    **** 
 151              		.loc 1 652 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 652:src/keys.c    **** 
 154              		.loc 1 652 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 652:src/keys.c    **** 
 157              		.loc 1 652 15 view .LVU41
ARM GAS  /tmp/cciIzcMf.s 			page 27


 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 655:src/keys.c    **** 			pc = 1;
 160              		.loc 1 655 3 is_stmt 1 view .LVU42
 655:src/keys.c    **** 			pc = 1;
 161              		.loc 1 655 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 656:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 656 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 657 3 is_stmt 1 view .LVU45
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 651 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 657 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 657 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 657 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 657 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 660:src/keys.c    **** }
 186              		.loc 1 660 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 661:src/keys.c    **** 
 188              		.loc 1 661 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 658:src/keys.c    **** 	}
 192              		.loc 1 658 4 is_stmt 1 view .LVU53
 658:src/keys.c    **** 	}
 193              		.loc 1 658 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 661:src/keys.c    **** 
 195              		.loc 1 661 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 661:src/keys.c    **** 
 199              		.loc 1 661 1 view .LVU56
ARM GAS  /tmp/cciIzcMf.s 			page 28


 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1309:src/keys.c    **** 
1310:src/keys.c    **** static int gtodot_fkey(int n) {
1311:src/keys.c    **** 	const int code = 100 + n;
1312:src/keys.c    **** 	unsigned int pc = state_pc();
1313:src/keys.c    **** 
1314:src/keys.c    **** 	if(isXROM(pc))
1315:src/keys.c    **** 		pc = 1;
1316:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1317:src/keys.c    **** 	if (pc > 0)
1318:src/keys.c    **** 		return pc;
1319:src/keys.c    **** 	return state_pc();
1320:src/keys.c    **** }
1321:src/keys.c    **** 
1322:src/keys.c    **** static int process_gtodot(const keycode c) {
1323:src/keys.c    **** 	int pc = -1;
1324:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1325:src/keys.c    **** 
1326:src/keys.c    **** 	if (rawpc <= 9) {
1327:src/keys.c    **** 		// Digit 0 - 9
1328:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1329:src/keys.c    **** 	}
1330:src/keys.c    **** #ifdef DM42
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1334:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1335:src/keys.c    **** #endif
1336:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1337:src/keys.c    **** 		// A - D
1338:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1339:src/keys.c    **** 		goto fin;
1340:src/keys.c    **** 	}
1341:src/keys.c    **** 	else if (c == K62) {
1342:src/keys.c    **** 		// .
1343:src/keys.c    **** 		rawpc = ProgSize;
1344:src/keys.c    **** 		goto fin;
1345:src/keys.c    **** 	}
1346:src/keys.c    **** 	else if (c == K20) {
1347:src/keys.c    **** 		// ENTER - short circuit processing
1348:src/keys.c    **** 		pc = State2.digval;
1349:src/keys.c    **** 	}
ARM GAS  /tmp/cciIzcMf.s 			page 29


1350:src/keys.c    **** 	else if (c == K24) {
1351:src/keys.c    **** 		// backspace
1352:src/keys.c    **** 		if (State2.numdigit == 0) {
1353:src/keys.c    **** 			goto fin2;
1354:src/keys.c    **** 		} else {
1355:src/keys.c    **** 			State2.numdigit--;
1356:src/keys.c    **** 			State2.digval /= 10;
1357:src/keys.c    **** 		}
1358:src/keys.c    **** 	}
1359:src/keys.c    **** 	else if (c == K_UP) {
1360:src/keys.c    **** 		// up
1361:src/keys.c    **** 		rawpc = state_pc();
1362:src/keys.c    **** 		if (rawpc == 1)
1363:src/keys.c    **** 			rawpc = 0;
1364:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1365:src/keys.c    **** 		update_program_bounds(1);
1366:src/keys.c    **** 		rawpc = ProgBegin;
1367:src/keys.c    **** 		goto fin;
1368:src/keys.c    **** 	}
1369:src/keys.c    **** 	else if (c == K_DOWN) {
1370:src/keys.c    **** 		// down
1371:src/keys.c    **** 		update_program_bounds(1);
1372:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1373:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1374:src/keys.c    **** 			rawpc = 1;
1375:src/keys.c    **** 		goto fin;
1376:src/keys.c    **** 	}
1377:src/keys.c    **** 	if (pc >= 0) {
1378:src/keys.c    **** 		rawpc = find_user_pc(pc);
1379:src/keys.c    **** fin:		set_pc(rawpc);
1380:src/keys.c    **** fin2:		State2.gtodot = 0;
1381:src/keys.c    **** 		State2.digval = 0;
1382:src/keys.c    **** 		State2.numdigit = 0;
1383:src/keys.c    **** 	}
1384:src/keys.c    **** 	return STATE_UNFINISHED;
1385:src/keys.c    **** }
1386:src/keys.c    **** 
1387:src/keys.c    **** 
1388:src/keys.c    **** /* Process a keystroke in alpha mode
1389:src/keys.c    ****  */
1390:src/keys.c    **** static int process_alpha(const keycode c) {
1391:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1392:src/keys.c    ****         int op = STATE_UNFINISHED;
1393:src/keys.c    **** 	const enum shifts shift = reset_shift();
1394:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1395:src/keys.c    **** 	State2.alpha_pos = 0;
1396:src/keys.c    **** 
1397:src/keys.c    **** 	switch (c) {
1398:src/keys.c    **** 	case K10:	// STO
1399:src/keys.c    **** 		if (shift == SHIFT_F) {
1400:src/keys.c    **** 			init_arg(RARG_ASTO);
1401:src/keys.c    **** 			return STATE_UNFINISHED;
1402:src/keys.c    **** 		}
1403:src/keys.c    **** 		break;
1404:src/keys.c    **** 
1405:src/keys.c    **** 	case K11:	// RCL - maybe view
1406:src/keys.c    **** 		if (shift == SHIFT_F) {
ARM GAS  /tmp/cciIzcMf.s 			page 30


1407:src/keys.c    **** 			init_arg(RARG_ARCL);
1408:src/keys.c    **** 			return STATE_UNFINISHED;
1409:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1410:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1411:src/keys.c    **** 			return STATE_UNFINISHED;
1412:src/keys.c    **** 		}
1413:src/keys.c    **** 		break;
1414:src/keys.c    **** 
1415:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1416:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1417:src/keys.c    **** 			break;
1418:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1419:src/keys.c    **** 			State2.multi = 1;
1420:src/keys.c    **** 			State2.numdigit = 0;
1421:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1422:src/keys.c    **** 			return STATE_UNFINISHED;
1423:src/keys.c    **** 		}
1424:src/keys.c    **** 		State2.alphas = 0;
1425:src/keys.c    **** 		State2.alphashift = 0;
1426:src/keys.c    **** 		return op;
1427:src/keys.c    **** 
1428:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1429:src/keys.c    **** 		if (shift == SHIFT_N)
1430:src/keys.c    **** 			return STATE_BACKSPACE;
1431:src/keys.c    **** 		if (shift == SHIFT_H)
1432:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1433:src/keys.c    **** 		break;
1434:src/keys.c    **** 
1435:src/keys.c    **** 	case K_UP:
1436:src/keys.c    **** 	  if (shift == SHIFT_N) {
1437:src/keys.c    **** 	    if ( State2.runmode ) {
1438:src/keys.c    **** 	      // Alpha scroll left
1439:src/keys.c    **** #ifdef DM42
1440:src/keys.c    **** #ifdef BIGGER_DISPLAY
1441:src/keys.c    **** 	      if (alen()-6*alpha_pos >= 20) {
1442:src/keys.c    **** 		alpha_pos += 1;
1443:src/keys.c    **** 	      }
1444:src/keys.c    **** #else
1445:src/keys.c    **** 	      if (alen()-6*alpha_pos >= 12) {
1446:src/keys.c    **** 		alpha_pos += 1;
1447:src/keys.c    **** 	      }
1448:src/keys.c    **** #endif
1449:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1450:src/keys.c    **** #else
1451:src/keys.c    **** 	      int n = alpha_pos + 1;
1452:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1453:src/keys.c    **** #endif
1454:src/keys.c    **** 	      return STATE_UNFINISHED;
1455:src/keys.c    **** 	    }
1456:src/keys.c    **** 	    return STATE_BST;
1457:src/keys.c    **** 	  }
1458:src/keys.c    **** 	  break;
1459:src/keys.c    **** 
1460:src/keys.c    **** 	case K_DOWN:
1461:src/keys.c    **** 	  if (shift == SHIFT_N) {
1462:src/keys.c    **** 	    if ( State2.runmode ) {
1463:src/keys.c    **** 	      // Alpha scroll right
ARM GAS  /tmp/cciIzcMf.s 			page 31


1464:src/keys.c    **** 	      if (alpha_pos > 0)
1465:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1466:src/keys.c    **** 	      return STATE_UNFINISHED;
1467:src/keys.c    **** 	    }
1468:src/keys.c    **** 	    return STATE_SST;
1469:src/keys.c    **** 	  }
1470:src/keys.c    **** 	  break;
1471:src/keys.c    **** 
1472:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1473:src/keys.c    **** 		if (shift == SHIFT_F)
1474:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1475:src/keys.c    **** 		else if (shift == SHIFT_H)
1476:src/keys.c    **** 			return OP_NIL | OP_OFF;
1477:src/keys.c    **** 		else if (shift == SHIFT_N)
1478:src/keys.c    **** 			init_state();
1479:src/keys.c    **** 		return STATE_UNFINISHED;
1480:src/keys.c    **** 
1481:src/keys.c    **** 	case K63:
1482:src/keys.c    **** 		if (shift == SHIFT_F)
1483:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1484:src/keys.c    **** 		break;
1485:src/keys.c    **** 
1486:src/keys.c    **** 	default:
1487:src/keys.c    **** 		break;
1488:src/keys.c    **** 	}
1489:src/keys.c    **** 
1490:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1491:src/keys.c    **** 	if (ch == 0)
1492:src/keys.c    **** 		return STATE_UNFINISHED;
1493:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1494:src/keys.c    **** }
1495:src/keys.c    **** 
1496:src/keys.c    **** /*
1497:src/keys.c    ****  *  Code to handle all commands with arguments
1498:src/keys.c    ****  */
1499:src/keys.c    **** static void reset_arg(void) {
1500:src/keys.c    **** 	init_arg((enum rarg) 0);
1501:src/keys.c    **** 	State2.rarg = 0;
1502:src/keys.c    **** }
1503:src/keys.c    **** 
1504:src/keys.c    **** static int arg_eval(unsigned int val) {
1505:src/keys.c    **** 	const unsigned int base = CmdBase;
1506:src/keys.c    **** 	int r = RARG(base, val 
1507:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1508:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1509:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1510:src/keys.c    **** 
1511:src/keys.c    **** 	if (! State2.ind) {
1512:src/keys.c    **** 		/*
1513:src/keys.c    **** 		 *  Central argument checking for some commands
1514:src/keys.c    **** 		 */
1515:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1516:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1517:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1518:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1519:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1520:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
ARM GAS  /tmp/cciIzcMf.s 			page 32


1521:src/keys.c    **** 			if ( val == 0 )
1522:src/keys.c    **** 				return STATE_UNFINISHED;
1523:src/keys.c    **** 			r = RARG(base, val);
1524:src/keys.c    **** 		}
1525:src/keys.c    **** #else
1526:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1527:src/keys.c    **** 			// Disallow odd complex register > 98
1528:src/keys.c    **** 			return STATE_UNFINISHED;
1529:src/keys.c    **** #endif
1530:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1531:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1532:src/keys.c    **** 			return STATE_UNFINISHED;
1533:src/keys.c    **** 	}
1534:src/keys.c    **** 	// Build op-code
1535:src/keys.c    **** 	reset_arg();
1536:src/keys.c    **** 	return r;
1537:src/keys.c    **** }
1538:src/keys.c    **** 
1539:src/keys.c    **** static int arg_digit(int n) {
1540:src/keys.c    **** 	int lim;
1541:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1542:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1543:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1544:src/keys.c    **** #else
1545:src/keys.c    **** 	const unsigned int base = CmdBase;
1546:src/keys.c    **** #endif
1547:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1548:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1549:src/keys.c    **** 	
1550:src/keys.c    **** 	if (State2.local) {
1551:src/keys.c    **** 		// Handle local registers and flags
1552:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1553:src/keys.c    **** 		if (State2.runmode) {
1554:src/keys.c    **** 			if (LocalRegs == 0)
1555:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1556:src/keys.c    **** 			if (is_reg) {
1557:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1558:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1559:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1560:src/keys.c    **** 			}
1561:src/keys.c    **** 		}
1562:src/keys.c    **** 	}
1563:src/keys.c    **** 	else if (is_reg)						// normal register
1564:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1565:src/keys.c    **** 	else {
1566:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1567:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1568:src/keys.c    **** 			lim = RARG_IND - 1;
1569:src/keys.c    **** 	}
1570:src/keys.c    **** 	if ((int) val > lim)
1571:src/keys.c    **** 		return STATE_UNFINISHED;
1572:src/keys.c    **** 
1573:src/keys.c    **** 	State2.digval = val;
1574:src/keys.c    **** 	++State2.numdigit;
1575:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1576:src/keys.c    **** 		int result = arg_eval(val);
1577:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
ARM GAS  /tmp/cciIzcMf.s 			page 33


1578:src/keys.c    **** 			--State2.numdigit;
1579:src/keys.c    **** 			State2.digval /= 10;
1580:src/keys.c    **** 		}
1581:src/keys.c    **** 		return result;
1582:src/keys.c    **** 	}
1583:src/keys.c    **** 	return STATE_UNFINISHED;
1584:src/keys.c    **** }
1585:src/keys.c    **** 
1586:src/keys.c    **** static int arg_fkey(int n) {
1587:src/keys.c    **** 	const unsigned int b = CmdBase;
1588:src/keys.c    **** 
1589:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1590:src/keys.c    **** 	{
1591:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1592:src/keys.c    **** 			return STATE_UNFINISHED;
1593:src/keys.c    **** 		if (argcmds[b].lim < 100)
1594:src/keys.c    **** 			return STATE_UNFINISHED;
1595:src/keys.c    **** 		return arg_eval(n + 100);
1596:src/keys.c    **** 	}
1597:src/keys.c    **** 	return STATE_UNFINISHED;
1598:src/keys.c    **** }
1599:src/keys.c    **** 
1600:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1601:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1602:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1603:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1604:src/keys.c    **** #else
1605:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1606:src/keys.c    **** #endif
1607:src/keys.c    **** }
1608:src/keys.c    **** 
1609:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1610:src/keys.c    **** 	unsigned int b = CmdBase;
1611:src/keys.c    **** 
1612:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1613:src/keys.c    **** 		CmdBase += n;
1614:src/keys.c    **** 		return 1;
1615:src/keys.c    **** 	}
1616:src/keys.c    **** 	/* And we can turn off the operation too */
1617:src/keys.c    **** 	if (b >= n) {
1618:src/keys.c    **** 		b -= n;
1619:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1620:src/keys.c    **** 			CmdBase = b;
1621:src/keys.c    **** 			return 1;
1622:src/keys.c    **** 		}
1623:src/keys.c    **** 	}
1624:src/keys.c    **** 	return 0;
1625:src/keys.c    **** }
1626:src/keys.c    **** 
1627:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1628:src/keys.c    **** 
1629:src/keys.c    **** 	if (State2.numdigit == 0) {
1630:src/keys.c    **** 		// Only valid at beginning of entry
1631:src/keys.c    **** 		if (State2.dot || State2.local) {
1632:src/keys.c    **** 			// '..' or ENTER '.' = X
1633:src/keys.c    **** 			State2.local = 0;
1634:src/keys.c    **** 			return arg_eval(regX_idx);
ARM GAS  /tmp/cciIzcMf.s 			page 34


1635:src/keys.c    **** 		}
1636:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1637:src/keys.c    **** 			// local register or flag select
1638:src/keys.c    **** 			State2.local = 1;
1639:src/keys.c    **** 		}
1640:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1641:src/keys.c    **** 			// Special GTO . sequence
1642:src/keys.c    **** 			if (! State2.ind) {
1643:src/keys.c    **** 				State2.gtodot = 1;
1644:src/keys.c    **** 				reset_arg();
1645:src/keys.c    **** 			}
1646:src/keys.c    **** 		}
1647:src/keys.c    **** 	}
1648:src/keys.c    **** 	return STATE_UNFINISHED;
1649:src/keys.c    **** }
1650:src/keys.c    **** 
1651:src/keys.c    **** static int process_arg_shuffle(int r) {
1652:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1653:src/keys.c    **** 	if (State2.numdigit < 4)
1654:src/keys.c    **** 		return STATE_UNFINISHED;
1655:src/keys.c    **** 	return arg_eval(State2.digval);
1656:src/keys.c    **** }
1657:src/keys.c    **** 
1658:src/keys.c    **** 
1659:src/keys.c    **** static int process_arg(const keycode c) {
1660:src/keys.c    **** 	unsigned int base = CmdBase;
1661:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1662:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1663:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1664:src/keys.c    **** 	const enum shifts shift = reset_shift();
1665:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1666:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1667:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1668:src/keys.c    **** 
1669:src/keys.c    **** 	n &= ~NO_SHORT;
1670:src/keys.c    **** 	if (base >= NUM_RARG) {
1671:src/keys.c    **** 		reset_arg();
1672:src/keys.c    **** 		return STATE_UNFINISHED;
1673:src/keys.c    **** 	}
1674:src/keys.c    **** #ifdef DM42
1675:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1676:src/keys.c    **** 	  switch (n) {
1677:src/keys.c    **** 	  case regX_idx:
1678:src/keys.c    **** 	    return arg_digit(1);
1679:src/keys.c    **** 	  case regY_idx:
1680:src/keys.c    **** 	    return arg_digit(2);
1681:src/keys.c    **** 	  case regZ_idx:
1682:src/keys.c    **** 	    return arg_digit(3);
1683:src/keys.c    **** 	  case regT_idx:
1684:src/keys.c    **** 	    return arg_digit(4);
1685:src/keys.c    **** 	  case 5:
1686:src/keys.c    **** 	  case 6:
1687:src/keys.c    **** 	  case 7:
1688:src/keys.c    **** 	  case 8:
1689:src/keys.c    **** 	  case 9:
1690:src/keys.c    **** 	  case 0:
1691:src/keys.c    **** 	    return arg_digit(n);
ARM GAS  /tmp/cciIzcMf.s 			page 35


1692:src/keys.c    **** 	  }
1693:src/keys.c    **** 	}
1694:src/keys.c    **** #else
1695:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1696:src/keys.c    **** 		return arg_digit(n);
1697:src/keys.c    **** #endif	
1698:src/keys.c    **** 	if (shorthand)
1699:src/keys.c    **** 		// row column shorthand addressing
1700:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1701:src/keys.c    **** 
1702:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1703:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1704:src/keys.c    **** 		switch ((int)c) {
1705:src/keys.c    **** 		case K_UP:	// up arrow
1706:src/keys.c    **** 			if (--base < RARG_FIX)
1707:src/keys.c    **** 				base = RARG_SIG0;
1708:src/keys.c    **** 			break;
1709:src/keys.c    **** 
1710:src/keys.c    **** 		case K_DOWN:	// down arrow
1711:src/keys.c    **** 		case K01:	// B
1712:src/keys.c    **** 			if (++base > RARG_SIG0)
1713:src/keys.c    **** 				base = RARG_FIX;
1714:src/keys.c    **** 			break;
1715:src/keys.c    **** 		}
1716:src/keys.c    **** 		CmdBase = base;
1717:src/keys.c    **** 	}
1718:src/keys.c    **** #endif
1719:src/keys.c    **** 	/*
1720:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1721:src/keys.c    **** 	 *  Handle the rest here.
1722:src/keys.c    **** 	 */
1723:src/keys.c    **** 	switch ((int)c) {
1724:src/keys.c    **** 	case K_F:
1725:src/keys.c    **** 		if (label_addressing)
1726:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1727:src/keys.c    **** 		break;
1728:src/keys.c    **** 
1729:src/keys.c    **** 	case K_ARROW:		// arrow
1730:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1731:src/keys.c    **** 			State2.ind = ! State2.ind;
1732:src/keys.c    **** 			if (! stack_reg)
1733:src/keys.c    **** 				State2.dot = 0;
1734:src/keys.c    **** 		}
1735:src/keys.c    **** 		break;
1736:src/keys.c    **** 
1737:src/keys.c    **** 	case K_CMPLX:
1738:src/keys.c    **** 		if (State2.ind || State2.dot)
1739:src/keys.c    **** 			break;
1740:src/keys.c    **** 		if (base == RARG_STO)
1741:src/keys.c    **** 			CmdBase = RARG_STOM;
1742:src/keys.c    **** 		else if (base == RARG_RCL)
1743:src/keys.c    **** 			CmdBase = RARG_RCLM;
1744:src/keys.c    **** 		break;
1745:src/keys.c    **** #ifdef DM42
1746:src/keys.c    **** 	case K41:       // T
1747:src/keys.c    **** 	  if (State2.shuffle)
1748:src/keys.c    **** 	    return process_arg_shuffle(3);
ARM GAS  /tmp/cciIzcMf.s 			page 36


1749:src/keys.c    **** 	case K51:       // X
1750:src/keys.c    **** 	  if (State2.shuffle)
1751:src/keys.c    **** 	    return process_arg_shuffle(0);
1752:src/keys.c    **** 	case K52:	// Y
1753:src/keys.c    **** 	  if (State2.shuffle)
1754:src/keys.c    **** 	    return process_arg_shuffle(1);
1755:src/keys.c    **** 	case K53:       // Z
1756:src/keys.c    **** 	  if (State2.shuffle)
1757:src/keys.c    **** 	    return process_arg_shuffle(2);
1758:src/keys.c    **** #else
1759:src/keys.c    **** 	case K63:	// Y
1760:src/keys.c    **** 	  if (State2.shuffle)
1761:src/keys.c    **** 	    return process_arg_shuffle(1);
1762:src/keys.c    **** #endif
1763:src/keys.c    **** 	case K00:	// A
1764:src/keys.c    **** 	case K01:	// B
1765:src/keys.c    **** 	case K02:	// C
1766:src/keys.c    **** 	case K03:	// D
1767:src/keys.c    **** #ifdef DM42
1768:src/keys.c    **** 	case K12:	// I (lastY)
1769:src/keys.c    **** 	case K13:	// J
1770:src/keys.c    **** 	case K14:	// K
1771:src/keys.c    **** 	case K15:	// L (lastX)
1772:src/keys.c    **** #else
1773:src/keys.c    **** 	case K12:	// I (lastY)
1774:src/keys.c    **** 	case K21:	// J
1775:src/keys.c    **** 	case K22:	// K
1776:src/keys.c    **** 	case K23:	// L (lastX)
1777:src/keys.c    **** #endif
1778:src/keys.c    **** 	  if (State2.dot || stack_reg)
1779:src/keys.c    **** 			return arg_eval(n);
1780:src/keys.c    **** 		if ( c <= K03 )
1781:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1782:src/keys.c    **** 		break;
1783:src/keys.c    **** #ifdef DM42
1784:src/keys.c    **** 	case K62:	// '.'
1785:src/keys.c    **** 		return process_arg_dot(base);
1786:src/keys.c    **** 
1787:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1788:src/keys.c    **** 	case K64:		// plus
1789:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1790:src/keys.c    **** 			return arg_eval(n);
1791:src/keys.c    **** 		break;
1792:src/keys.c    **** 	case K54:               // minus
1793:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1794:src/keys.c    **** 			reset_arg();
1795:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1796:src/keys.c    **** 		}
1797:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1798:src/keys.c    **** 		break;
1799:src/keys.c    **** 	case K44:		// multiply
1800:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1801:src/keys.c    **** 			return arg_eval(n);
1802:src/keys.c    **** 		break;
1803:src/keys.c    **** 	case K34:
1804:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1805:src/keys.c    **** 		break;
ARM GAS  /tmp/cciIzcMf.s 			page 37


1806:src/keys.c    **** #else
1807:src/keys.c    **** 	case K62:	// X, '.'
1808:src/keys.c    **** 		if (State2.shuffle)
1809:src/keys.c    **** 			return process_arg_shuffle(0);
1810:src/keys.c    **** 		return process_arg_dot(base);
1811:src/keys.c    **** 
1812:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1813:src/keys.c    **** 	case K64:		// Z register
1814:src/keys.c    **** 		if (State2.shuffle)
1815:src/keys.c    **** 			return process_arg_shuffle(2);
1816:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1817:src/keys.c    **** 			return arg_eval(n);
1818:src/keys.c    **** 		break;
1819:src/keys.c    **** 
1820:src/keys.c    **** 	case K54:
1821:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1822:src/keys.c    **** 			reset_arg();
1823:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1824:src/keys.c    **** 		}
1825:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1826:src/keys.c    **** 		break;
1827:src/keys.c    **** 
1828:src/keys.c    **** 	case K44:		// T register
1829:src/keys.c    **** 		if (State2.shuffle)
1830:src/keys.c    **** 			return process_arg_shuffle(3);
1831:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1832:src/keys.c    **** 			return arg_eval(n);
1833:src/keys.c    **** 		break;
1834:src/keys.c    **** 
1835:src/keys.c    **** 	case K34:
1836:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1837:src/keys.c    **** 		break;
1838:src/keys.c    **** #endif
1839:src/keys.c    **** 	case K_UP:
1840:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1841:src/keys.c    **** 		break;
1842:src/keys.c    **** 
1843:src/keys.c    **** 	case K_DOWN:
1844:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1845:src/keys.c    **** 		break;
1846:src/keys.c    **** 
1847:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1848:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1849:src/keys.c    **** 			if (argcmds[base].label) {
1850:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1851:src/keys.c    **** 				State2.multi = 1;
1852:src/keys.c    **** 				State2.alphashift = 0;
1853:src/keys.c    **** 				State2.rarg = 0;
1854:src/keys.c    **** 			} else if (base == RARG_SCI) {
1855:src/keys.c    **** 				reset_arg();
1856:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1857:src/keys.c    **** 			} else if (base == RARG_ENG) {
1858:src/keys.c    **** 				reset_arg();
1859:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1860:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1861:src/keys.c    **** 				State2.dot = 1;
1862:src/keys.c    **** 		} else if (State2.numdigit > 0)
ARM GAS  /tmp/cciIzcMf.s 			page 38


1863:src/keys.c    **** 			return arg_eval(State2.digval);
1864:src/keys.c    **** 		else if (stack_reg)
1865:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1866:src/keys.c    **** 		break;
1867:src/keys.c    **** 
1868:src/keys.c    **** 	case K24:	// <-
1869:src/keys.c    **** 		if (State2.numdigit == 0) {
1870:src/keys.c    **** 			if (State2.dot)
1871:src/keys.c    **** 				State2.dot = 0;
1872:src/keys.c    **** 			else if (State2.local)
1873:src/keys.c    **** 				State2.local = 0;
1874:src/keys.c    **** 			else if (State2.ind)
1875:src/keys.c    **** 				State2.ind = 0;
1876:src/keys.c    **** 			else
1877:src/keys.c    **** 				goto reset;
1878:src/keys.c    **** 		}
1879:src/keys.c    **** 		else {
1880:src/keys.c    **** 			--State2.numdigit;
1881:src/keys.c    **** 			if (State2.shuffle)
1882:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1883:src/keys.c    **** 			else
1884:src/keys.c    **** 				State2.digval /= 10;
1885:src/keys.c    **** 		}
1886:src/keys.c    **** 		break;
1887:src/keys.c    **** 
1888:src/keys.c    **** 	case K60:
1889:src/keys.c    **** 	reset:
1890:src/keys.c    **** 		reset_arg();
1891:src/keys.c    **** 	default:
1892:src/keys.c    **** 		break;
1893:src/keys.c    **** 	}
1894:src/keys.c    **** 	return STATE_UNFINISHED;
1895:src/keys.c    **** }
1896:src/keys.c    **** 
1897:src/keys.c    **** 
1898:src/keys.c    **** /*
1899:src/keys.c    ****  *  Process arguments to the diverse test commands
1900:src/keys.c    ****  */
1901:src/keys.c    **** static int process_test(const keycode c) {
1902:src/keys.c    **** 	int r = State2.test;
1903:src/keys.c    **** 	int cmpx = State2.cmplx;
1904:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1905:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1906:src/keys.c    **** 
1907:src/keys.c    **** 	State2.test = TST_NONE;
1908:src/keys.c    **** 	State2.cmplx = 0;
1909:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1910:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1911:src/keys.c    **** 		// Lettered register
1912:src/keys.c    **** 		if (cmpx && (n & 1)) {
1913:src/keys.c    **** 			if (n == regI_idx)
1914:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1915:src/keys.c    **** 			// Disallow odd complex registers > A
1916:src/keys.c    **** 			goto again;
1917:src/keys.c    **** 		}
1918:src/keys.c    **** 		// Return the command with the register completed
1919:src/keys.c    **** 		return RARG(base, n);
ARM GAS  /tmp/cciIzcMf.s 			page 39


1920:src/keys.c    **** 	}
1921:src/keys.c    **** 	else if ( n == 0 ) {
1922:src/keys.c    **** 		// Special 0
1923:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1924:src/keys.c    **** 	}
1925:src/keys.c    **** 	else if ( n == 1 ) {
1926:src/keys.c    **** 		// Special 1
1927:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1928:src/keys.c    **** 	}
1929:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1930:src/keys.c    **** 		// digit 2..9, -> or .
1931:src/keys.c    **** 		init_arg((enum rarg)base);
1932:src/keys.c    **** 		return process_arg(c);
1933:src/keys.c    **** 	}
1934:src/keys.c    **** 
1935:src/keys.c    **** 	switch (c) {
1936:src/keys.c    **** 	case K11:					// tests vs register
1937:src/keys.c    **** 	case K20:
1938:src/keys.c    **** 		init_arg((enum rarg)base);
1939:src/keys.c    **** 		return STATE_UNFINISHED;
1940:src/keys.c    **** 
1941:src/keys.c    **** 	//case K60:
1942:src/keys.c    **** 	case K24:
1943:src/keys.c    **** 		return STATE_UNFINISHED;
1944:src/keys.c    **** 
1945:src/keys.c    **** 	default:
1946:src/keys.c    **** 		break;
1947:src/keys.c    **** 	}
1948:src/keys.c    **** again:
1949:src/keys.c    **** 	State2.test = r;
1950:src/keys.c    **** 	State2.cmplx = cmpx;
1951:src/keys.c    **** 	return STATE_UNFINISHED;
1952:src/keys.c    **** }
1953:src/keys.c    **** 
1954:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1955:src/keys.c    **** /*
1956:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1957:src/keys.c    ****  */
1958:src/keys.c    **** #define USER_CAT_MAX 100
1959:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1960:src/keys.c    **** 
1961:src/keys.c    **** static int build_user_cat(void)
1962:src/keys.c    **** {
1963:src/keys.c    **** 	// find the label 'CAT'
1964:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1965:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1966:src/keys.c    **** 	int len = 0;
1967:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1968:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1969:src/keys.c    **** 		char buf1[16];
1970:src/keys.c    **** 		int i;
1971:src/keys.c    **** 		s_opcode op;
1972:src/keys.c    **** 	next:
1973:src/keys.c    **** 		pc = do_inc(pc, 0);
1974:src/keys.c    **** 		op = (s_opcode) getprog(pc);
1975:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
1976:src/keys.c    **** 			break;
ARM GAS  /tmp/cciIzcMf.s 			page 40


1977:src/keys.c    **** 		if (isDBL(op))
1978:src/keys.c    **** 			continue;
1979:src/keys.c    **** 		if (isRARG(op)) {
1980:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
1981:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
1982:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
1983:src/keys.c    **** 				op = op & 0xff00;	// remove argument
1984:src/keys.c    **** 		}
1985:src/keys.c    **** 		catcmd(op, buf1);
1986:src/keys.c    **** 		for (i = 0; i < len; ++i) {
1987:src/keys.c    **** 			// Find a position in the table to insert the new entry
1988:src/keys.c    **** 			char buf2[16];
1989:src/keys.c    **** 			const char *p, *q;
1990:src/keys.c    **** 			int diff = 0;
1991:src/keys.c    **** 			if (op == UserCat[i]) {
1992:src/keys.c    **** 				// duplicate entry - ignore
1993:src/keys.c    **** 				goto next;
1994:src/keys.c    **** 			}
1995:src/keys.c    **** 			p = buf1;
1996:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
1997:src/keys.c    **** 				++p;
1998:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
1999:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2000:src/keys.c    **** 				++q;
2001:src/keys.c    **** 			diff = 0;
2002:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2003:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2004:src/keys.c    **** 			}
2005:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2006:src/keys.c    **** 				// identical according to sort order, insert after
2007:src/keys.c    **** 				++i;
2008:src/keys.c    **** 				break;
2009:src/keys.c    **** 			}
2010:src/keys.c    **** 			if (diff > 0) {
2011:src/keys.c    **** 				// insert new entry before the one found because this is greater
2012:src/keys.c    **** 				break;
2013:src/keys.c    **** 			}
2014:src/keys.c    **** 		}
2015:src/keys.c    **** 		if (i < len) {
2016:src/keys.c    **** 			// Make room
2017:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2018:src/keys.c    **** 		}
2019:src/keys.c    **** 		UserCat[i] = op;
2020:src/keys.c    **** 		++len;
2021:src/keys.c    **** 	}
2022:src/keys.c    **** 	// return the number of entries
2023:src/keys.c    **** 	return len;
2024:src/keys.c    **** }
2025:src/keys.c    **** #endif
2026:src/keys.c    **** 
2027:src/keys.c    **** /* Return the number of entries in the current catalogue.
2028:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2029:src/keys.c    ****  * likely be the most space efficient method.
2030:src/keys.c    ****  */
2031:src/keys.c    **** int current_catalogue_max(void) {
2032:src/keys.c    **** 	// A quick table of catalogue sizes
2033:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
ARM GAS  /tmp/cciIzcMf.s 			page 41


2034:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2035:src/keys.c    **** 	{
2036:src/keys.c    **** 		0, // NONE
2037:src/keys.c    **** 		SIZE_catalogue,
2038:src/keys.c    **** 		SIZE_cplx_catalogue,
2039:src/keys.c    **** 		SIZE_stats_catalogue,
2040:src/keys.c    **** 		SIZE_prob_catalogue,
2041:src/keys.c    **** 		SIZE_int_catalogue,
2042:src/keys.c    **** 		SIZE_prog_catalogue,
2043:src/keys.c    **** 		SIZE_program_xfcn,
2044:src/keys.c    **** 		SIZE_test_catalogue,
2045:src/keys.c    **** 		SIZE_mode_catalogue,
2046:src/keys.c    **** 		SIZE_alpha_catalogue,
2047:src/keys.c    **** 		SIZE_alpha_symbols,
2048:src/keys.c    **** 		SIZE_alpha_compares,
2049:src/keys.c    **** 		SIZE_alpha_arrows,
2050:src/keys.c    **** 		SIZE_alpha_letters,
2051:src/keys.c    **** 		SIZE_alpha_subscripts,
2052:src/keys.c    **** 		NUM_CONSTS_CAT,
2053:src/keys.c    **** 		NUM_CONSTS_CAT,
2054:src/keys.c    **** 		SIZE_conv_catalogue,
2055:src/keys.c    **** 		SIZE_sums_catalogue,
2056:src/keys.c    **** 		SIZE_matrix_catalogue,
2057:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2058:src/keys.c    **** 		SIZE_internal_catalogue,
2059:src/keys.c    **** #endif
2060:src/keys.c    **** 	};
2061:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2062:src/keys.c    **** 	const int cat = State2.catalogue;
2063:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2064:src/keys.c    **** #else
2065:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2066:src/keys.c    **** #endif
2067:src/keys.c    **** }
2068:src/keys.c    **** 
2069:src/keys.c    **** 
2070:src/keys.c    **** /* Look up the character position in the given byte array and
2071:src/keys.c    ****  * build the alpha op-code for it.
2072:src/keys.c    ****  */
2073:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2074:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2075:src/keys.c    **** }
2076:src/keys.c    **** 
2077:src/keys.c    **** 
2078:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2079:src/keys.c    ****  */
2080:src/keys.c    **** opcode current_catalogue(int n) {
2081:src/keys.c    **** 	// A quick table of catalogue tables
2082:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2083:src/keys.c    **** 	static const void *catalogues[] =
2084:src/keys.c    **** 	{
2085:src/keys.c    **** 		NULL, // NONE
2086:src/keys.c    **** 		catalogue,
2087:src/keys.c    **** 		cplx_catalogue,
2088:src/keys.c    **** 		stats_catalogue,
2089:src/keys.c    **** 		prob_catalogue,
2090:src/keys.c    **** 		int_catalogue,
ARM GAS  /tmp/cciIzcMf.s 			page 42


2091:src/keys.c    **** 		prog_catalogue,
2092:src/keys.c    **** 		program_xfcn,
2093:src/keys.c    **** 		test_catalogue,
2094:src/keys.c    **** 		mode_catalogue,
2095:src/keys.c    **** 		alpha_catalogue,
2096:src/keys.c    **** 		alpha_symbols,
2097:src/keys.c    **** 		alpha_compares,
2098:src/keys.c    **** 		alpha_arrows,
2099:src/keys.c    **** 		alpha_letters,
2100:src/keys.c    **** 		alpha_subscripts,
2101:src/keys.c    **** 		NULL,
2102:src/keys.c    **** 		NULL,
2103:src/keys.c    **** 		NULL, //CONV
2104:src/keys.c    **** 		sums_catalogue,
2105:src/keys.c    **** 		matrix_catalogue,
2106:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2107:src/keys.c    **** 		internal_catalogue,
2108:src/keys.c    **** #endif
2109:src/keys.c    **** 	};
2110:src/keys.c    **** 	const unsigned char *cat;
2111:src/keys.c    **** 	unsigned int c = State2.catalogue;
2112:src/keys.c    **** 	int m, i;
2113:src/keys.c    **** 	unsigned p, q;
2114:src/keys.c    **** 
2115:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2116:src/keys.c    **** 		if (n == OP_ZERO)
2117:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2118:src/keys.c    **** 		return CONST(n);
2119:src/keys.c    **** 	}
2120:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2121:src/keys.c    **** 		if (n == OP_ZERO)
2122:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2123:src/keys.c    **** 		return CONST_CMPLX(n);
2124:src/keys.c    **** 	}
2125:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2126:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2127:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2128:src/keys.c    **** 			// Monadic conversion routine
2129:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2130:src/keys.c    **** 		else
2131:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2132:src/keys.c    **** 	}
2133:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2134:src/keys.c    **** 	if (c == CATALOGUE_USER)
2135:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2136:src/keys.c    **** #endif
2137:src/keys.c    **** 
2138:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2139:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2140:src/keys.c    **** 	else
2141:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2142:src/keys.c    **** 
2143:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2144:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2145:src/keys.c    **** 	}
2146:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2147:src/keys.c    **** 		return OP_NIL | OP_NOP;
ARM GAS  /tmp/cciIzcMf.s 			page 43


2148:src/keys.c    **** 
2149:src/keys.c    **** 	/* Unpack the opcode */
2150:src/keys.c    **** 	cat += n + (n >> 2);
2151:src/keys.c    **** 	p = cat[0];
2152:src/keys.c    **** 	q = cat[1];
2153:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2154:src/keys.c    **** 
2155:src/keys.c    **** 	/* Now figure out which opcode it really is */
2156:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2157:src/keys.c    **** 		if (m < opcode_breaks[i])
2158:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2159:src/keys.c    **** 		m -= opcode_breaks[i];
2160:src/keys.c    **** 	}
2161:src/keys.c    **** 	return RARG_BASEOP(m);
2162:src/keys.c    **** }
2163:src/keys.c    **** 
2164:src/keys.c    **** 
2165:src/keys.c    **** /*
2166:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2167:src/keys.c    ****  *  in multi character commands.
2168:src/keys.c    ****  */
2169:src/keys.c    **** static int forbidden_alpha(int pos) {
2170:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2171:src/keys.c    **** }
2172:src/keys.c    **** 
2173:src/keys.c    **** /*
2174:src/keys.c    ****  *  Catalogue navigation
2175:src/keys.c    ****  */
2176:src/keys.c    **** static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2177:src/keys.c    **** 	int pos = State.catpos;
2178:src/keys.c    **** 	int ch;
2179:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2180:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
2181:src/keys.c    **** 
2182:src/keys.c    **** 	if (shift == SHIFT_N) {
2183:src/keys.c    **** 		switch (c) {
2184:src/keys.c    **** #ifdef DM42
2185:src/keys.c    **** 		case K05:			// XEQ accepts command
2186:src/keys.c    **** #else	  
2187:src/keys.c    **** 		case K30:			// XEQ accepts command
2188:src/keys.c    **** #endif						  
2189:src/keys.c    **** 		case K20:			// Enter accepts command
2190:src/keys.c    **** 			if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2191:src/keys.c    **** 				const opcode op = current_catalogue(pos);
2192:src/keys.c    **** 
2193:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2194:src/keys.c    **** 
2195:src/keys.c    **** 				if (isRARG(op)) {
2196:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
2197:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2198:src/keys.c    **** 						return op;
2199:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2200:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2201:src/keys.c    **** 					else
2202:src/keys.c    **** 						init_arg(RARG_CMD(op));
2203:src/keys.c    **** 				}
2204:src/keys.c    **** 				else {
ARM GAS  /tmp/cciIzcMf.s 			page 44


2205:src/keys.c    **** 					return check_confirm(op);
2206:src/keys.c    **** 				}
2207:src/keys.c    **** 			} else
2208:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2209:src/keys.c    **** 			return STATE_UNFINISHED;
2210:src/keys.c    **** 
2211:src/keys.c    **** 		case K24:			// backspace
2212:src/keys.c    **** 		    if (CmdLineLength > 0 && Keyticks < 30) {
2213:src/keys.c    **** 		      if (--CmdLineLength > 0)
2214:src/keys.c    **** 					goto search;
2215:src/keys.c    **** 				pos = 0;
2216:src/keys.c    **** 				goto set_pos;
2217:src/keys.c    **** 			} else
2218:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2219:src/keys.c    **** 			return STATE_UNFINISHED;
2220:src/keys.c    **** 
2221:src/keys.c    **** 		case K60:
2222:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2223:src/keys.c    **** 			return STATE_UNFINISHED;
2224:src/keys.c    **** 
2225:src/keys.c    **** 		case K_UP:
2226:src/keys.c    **** 			CmdLineLength = 0;
2227:src/keys.c    **** 			if (pos == 0)
2228:src/keys.c    **** 				goto set_max;
2229:src/keys.c    **** 			else
2230:src/keys.c    **** 				--pos;
2231:src/keys.c    **** 			goto set_pos;
2232:src/keys.c    **** 
2233:src/keys.c    **** 		case K_DOWN:
2234:src/keys.c    **** 			CmdLineLength = 0;
2235:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2236:src/keys.c    **** 			if (pos >= ctmax)
2237:src/keys.c    **** 				pos = 0;
2238:src/keys.c    **** 			goto set_pos;
2239:src/keys.c    **** 
2240:src/keys.c    **** 		default:
2241:src/keys.c    **** 			break;
2242:src/keys.c    **** 		}
2243:src/keys.c    **** 	} else if (shift == SHIFT_F) {
2244:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
2245:src/keys.c    **** 			/*
2246:src/keys.c    **** 			 * f 1/x in conversion catalogue
2247:src/keys.c    **** 			 */
2248:src/keys.c    **** 			/* A small table of commands in pairs containing inverse commands.
2249:src/keys.c    **** 			 * This table could be unsigned characters only storing the monadic kind.
2250:src/keys.c    **** 			 * this saves twelve bytes in the table at a cost of some bytes in the code below.
2251:src/keys.c    **** 			 * Not worth it since the maximum saving will be less than twelve bytes.
2252:src/keys.c    **** 			 */
2253:src/keys.c    **** 			static const unsigned short int conv_mapping[] = {
2254:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2255:src/keys.c    **** 				OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2256:src/keys.c    **** 				OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2257:src/keys.c    **** 				OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2258:src/keys.c    **** 				OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2259:src/keys.c    **** 				OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2260:src/keys.c    **** 			};
2261:src/keys.c    **** 			const opcode op = current_catalogue(pos);
ARM GAS  /tmp/cciIzcMf.s 			page 45


2262:src/keys.c    **** 			int i;
2263:src/keys.c    **** 
2264:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2265:src/keys.c    **** 			if (isRARG(op))
2266:src/keys.c    **** 				return op ^ 1;
2267:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2268:src/keys.c    **** 				if (op == conv_mapping[i])
2269:src/keys.c    **** 					return conv_mapping[i^1];
2270:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
2271:src/keys.c    **** 		}
2272:src/keys.c    **** 		else if (c == K60 && (State2.alphas || State2.multi)) {
2273:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
2274:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2275:src/keys.c    **** 			return STATE_UNFINISHED;
2276:src/keys.c    **** 		}
2277:src/keys.c    **** 	} else if (shift == SHIFT_G) {
2278:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
2279:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2280:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
2281:src/keys.c    **** 		}
2282:src/keys.c    **** 	}
2283:src/keys.c    **** 
2284:src/keys.c    **** 	/* We've got a key press, map it to a character and try to
2285:src/keys.c    **** 	 * jump to the appropriate catalogue entry.
2286:src/keys.c    **** 	 */
2287:src/keys.c    **** 	ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2288:src/keys.c    **** 	reset_shift();
2289:src/keys.c    **** 	if (ch == '\0')
2290:src/keys.c    **** 		return STATE_UNFINISHED;
2291:src/keys.c    **** 	if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2292:src/keys.c    **** 		// No multi character search in alpha catalogues
2293:src/keys.c    **** 		CmdLineLength = 0;
2294:src/keys.c    **** 	}
2295:src/keys.c    **** 	if (CmdLineLength < 10)
2296:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
2297:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
2298:src/keys.c    **** 
2299:src/keys.c    **** search:
2300:src/keys.c    **** 	Cmdline[CmdLineLength] = '\0';
2301:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2302:src/keys.c    **** 		char buf[16];
2303:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2304:src/keys.c    **** 		int i;
2305:src/keys.c    **** 
2306:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2307:src/keys.c    **** 			cmd++;
2308:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2309:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2310:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
2311:src/keys.c    **** 			if (c > cl)
2312:src/keys.c    **** 				goto set_pos;
2313:src/keys.c    **** 			else if (c < cl)
2314:src/keys.c    **** 				break;
2315:src/keys.c    **** 		}
2316:src/keys.c    **** 		if (Cmdline[i] == '\0')
2317:src/keys.c    **** 			goto set_pos;
2318:src/keys.c    **** 	}
ARM GAS  /tmp/cciIzcMf.s 			page 46


2319:src/keys.c    **** set_max:
2320:src/keys.c    **** 	pos = ctmax - 1;
2321:src/keys.c    **** set_pos:
2322:src/keys.c    **** 	while (is_multi && pos && forbidden_alpha(pos))
2323:src/keys.c    **** 		--pos;
2324:src/keys.c    **** 	State.catpos = pos;
2325:src/keys.c    **** 	return STATE_UNFINISHED;
2326:src/keys.c    **** }
2327:src/keys.c    **** 
2328:src/keys.c    **** #ifndef REALBUILD
2329:src/keys.c    **** int find_pos(const char* text) {
2330:src/keys.c    **** 	int pos;
2331:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2332:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2333:src/keys.c    **** 		char buf[16];
2334:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2335:src/keys.c    **** 		int i;
2336:src/keys.c    **** 
2337:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2338:src/keys.c    **** 			cmd++;
2339:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2340:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2341:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2342:src/keys.c    **** 			if (c > cl)
2343:src/keys.c    **** 				return pos;
2344:src/keys.c    **** 			else if (c < cl)
2345:src/keys.c    **** 				break;
2346:src/keys.c    **** 		}
2347:src/keys.c    **** 		if (text[i] == '\0')
2348:src/keys.c    **** 			return pos;
2349:src/keys.c    **** 	}
2350:src/keys.c    **** 	return pos;
2351:src/keys.c    **** }
2352:src/keys.c    **** 
2353:src/keys.c    **** #endif
2354:src/keys.c    **** 
2355:src/keys.c    **** /* Multi (2) word instruction entry
2356:src/keys.c    ****  */
2357:src/keys.c    **** static void reset_multi(void) {
2358:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2359:src/keys.c    **** 	State2.multi = 0;
2360:src/keys.c    **** 	if (! State2.alphas )
2361:src/keys.c    **** 		State2.alphashift = 0;
2362:src/keys.c    **** }
2363:src/keys.c    **** 
2364:src/keys.c    **** static int process_multi(const keycode c) {
2365:src/keys.c    **** 	enum shifts shift = reset_shift();
2366:src/keys.c    **** 	unsigned int ch = 0;
2367:src/keys.c    **** 	unsigned int opcode;
2368:src/keys.c    **** 
2369:src/keys.c    **** 	if (State2.catalogue) {
2370:src/keys.c    **** 		// Alpha catalogue from within multi character command
2371:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2372:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2373:src/keys.c    **** 			return opcode;
2374:src/keys.c    **** 		ch = (unsigned char) opcode;
2375:src/keys.c    **** 		goto add_char;
ARM GAS  /tmp/cciIzcMf.s 			page 47


2376:src/keys.c    **** 	}
2377:src/keys.c    **** 
2378:src/keys.c    **** 	switch (c) {
2379:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2380:src/keys.c    **** 		if (shift != SHIFT_N)
2381:src/keys.c    **** 				break;
2382:src/keys.c    **** 		reset_multi();
2383:src/keys.c    **** 		if (State2.numdigit == 0)
2384:src/keys.c    **** 			return STATE_UNFINISHED;
2385:src/keys.c    **** 		else if (State2.numdigit == 1)
2386:src/keys.c    **** 			State2.digval2 = 0;
2387:src/keys.c    **** 		goto fin;
2388:src/keys.c    **** 
2389:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2390:src/keys.c    **** 		if (shift != SHIFT_H) {
2391:src/keys.c    **** 			if (State2.numdigit == 0)
2392:src/keys.c    **** 				reset_multi();
2393:src/keys.c    **** 			else
2394:src/keys.c    **** 				State2.numdigit--;
2395:src/keys.c    **** 			return STATE_UNFINISHED;
2396:src/keys.c    **** 		}
2397:src/keys.c    **** 		break;
2398:src/keys.c    **** 
2399:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2400:src/keys.c    **** 		if (shift == SHIFT_F)
2401:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2402:src/keys.c    **** 		else
2403:src/keys.c    **** 			reset_multi();
2404:src/keys.c    **** 		return STATE_UNFINISHED;
2405:src/keys.c    **** 
2406:src/keys.c    **** 	default:
2407:src/keys.c    **** 		break;
2408:src/keys.c    **** 		}
2409:src/keys.c    **** 
2410:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2411:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2412:src/keys.c    **** 	if (ch == 0)
2413:src/keys.c    **** 		return STATE_UNFINISHED;
2414:src/keys.c    **** add_char:
2415:src/keys.c    **** 	if (State2.numdigit == 0) {
2416:src/keys.c    **** 		State2.digval = ch;
2417:src/keys.c    **** 		State2.numdigit = 1;
2418:src/keys.c    **** 		return STATE_UNFINISHED;
2419:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2420:src/keys.c    **** 		State2.digval2 = ch;
2421:src/keys.c    **** 		State2.numdigit = 2;
2422:src/keys.c    **** 		return STATE_UNFINISHED;
2423:src/keys.c    **** 	}
2424:src/keys.c    **** 	reset_multi();
2425:src/keys.c    **** 
2426:src/keys.c    **** fin:
2427:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2428:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2429:src/keys.c    **** 	return opcode;
2430:src/keys.c    **** }
2431:src/keys.c    **** 
2432:src/keys.c    **** 
ARM GAS  /tmp/cciIzcMf.s 			page 48


2433:src/keys.c    **** /* Handle YES/NO confirmations
2434:src/keys.c    ****  */
2435:src/keys.c    **** static int process_confirm(const keycode c) {
2436:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2437:src/keys.c    **** 	switch (c) {
2438:src/keys.c    **** #ifdef DM42
2439:src/keys.c    **** 	case K52:
2440:src/keys.c    **** #endif
2441:src/keys.c    **** 	case K63:			// Yes
2442:src/keys.c    **** 	  switch (State2.confirm) {
2443:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2444:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2445:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2446:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2447:src/keys.c    **** 	  }
2448:src/keys.c    **** 	case K24:
2449:src/keys.c    **** #ifdef DM42
2450:src/keys.c    **** 	case K22:
2451:src/keys.c    **** #else
2452:src/keys.c    **** 	case K32:
2453:src/keys.c    **** #endif
2454:src/keys.c    **** 	  // No
2455:src/keys.c    **** 	  State2.confirm = 0;
2456:src/keys.c    **** 	  State2.digval = 0;
2457:src/keys.c    **** 	  break;
2458:src/keys.c    **** 	default:			// No state change
2459:src/keys.c    **** 	  break;
2460:src/keys.c    **** 	}
2461:src/keys.c    **** 	return STATE_UNFINISHED;
2462:src/keys.c    **** }
2463:src/keys.c    **** 
2464:src/keys.c    **** 
2465:src/keys.c    **** /*
2466:src/keys.c    ****  *  STATUS
2467:src/keys.c    ****  */
2468:src/keys.c    **** static int process_status(const keycode c) {
2469:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2470:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2471:src/keys.c    **** 
2472:src/keys.c    **** 	if (c == K_UP) {
2473:src/keys.c    **** 		if (--n < -2)
2474:src/keys.c    **** 			n = max;
2475:src/keys.c    **** 	}
2476:src/keys.c    **** 	else if (c == K_DOWN) {
2477:src/keys.c    **** 		if (++n > max)
2478:src/keys.c    **** 			n = -2;
2479:src/keys.c    **** 	}
2480:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2481:src/keys.c    **** 		State2.status = 0;
2482:src/keys.c    **** 		return STATE_UNFINISHED;
2483:src/keys.c    **** 	} 
2484:src/keys.c    **** 	else {
2485:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2486:src/keys.c    **** 		if (nn <= 9)
2487:src/keys.c    **** 			n = nn;
2488:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2489:src/keys.c    **** 			n = n == max ? 10 : max;
ARM GAS  /tmp/cciIzcMf.s 			page 49


2490:src/keys.c    **** 		else if (nn != NO_REG)
2491:src/keys.c    **** 			n = 10; 
2492:src/keys.c    **** 	}
2493:src/keys.c    **** 	State2.status = n + 3;
2494:src/keys.c    **** 
2495:src/keys.c    **** 	return STATE_UNFINISHED;
2496:src/keys.c    **** }
2497:src/keys.c    **** 
2498:src/keys.c    **** 
2499:src/keys.c    **** /*
2500:src/keys.c    ****  *  CAT helper
2501:src/keys.c    ****  */
2502:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2502 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2503:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2503 2 view .LVU58
2502:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2502 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2502:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2502 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2503 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2504:src/keys.c    **** 
2505:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2505 2 is_stmt 1 view .LVU62
 234              		.loc 1 2505 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2505 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2505 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2505 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2506:src/keys.c    **** }
 245              		.loc 1 2506 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2505:src/keys.c    **** }
 249              		.loc 1 2505 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2506 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
ARM GAS  /tmp/cciIzcMf.s 			page 50


 255              	.L24:
2505:src/keys.c    **** }
 256              		.loc 1 2505 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2505:src/keys.c    **** }
 259              		.loc 1 2505 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2506 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2506 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2507:src/keys.c    **** 
2508:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2508 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2508 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2508 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2509:src/keys.c    **** 	do {
 294              		.loc 1 2509 2 is_stmt 1 view .LVU77
2510:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2510 3 view .LVU78
2511:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2511 4 view .LVU79
2508:src/keys.c    **** 	do {
 297              		.loc 1 2508 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2511 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2512:src/keys.c    **** 				pc = do_inc(pc, 0);
2513:src/keys.c    **** 				if (PcWrapped)
2514:src/keys.c    **** 					break;
ARM GAS  /tmp/cciIzcMf.s 			page 51


2515:src/keys.c    **** 			}
2516:src/keys.c    **** 			else
2517:src/keys.c    **** 				inc = 1;
2518:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2518 4 is_stmt 1 view .LVU82
 304              		.loc 1 2518 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2518 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2518 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2518 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2512:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2512 5 is_stmt 1 view .LVU87
2512:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2512 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2513:src/keys.c    **** 					break;
 323              		.loc 1 2513 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2512:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2512 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2513:src/keys.c    **** 					break;
 328              		.loc 1 2513 5 is_stmt 1 view .LVU91
2513:src/keys.c    **** 					break;
 329              		.loc 1 2513 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2519:src/keys.c    **** 				return pc;
2520:src/keys.c    **** 			}
2521:src/keys.c    **** 		}
2522:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2522 3 is_stmt 1 view .LVU93
 333              		.loc 1 2522 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2522 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2523:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2523 10 is_stmt 1 view .LVU96
 342              		.loc 1 2523 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
ARM GAS  /tmp/cciIzcMf.s 			page 52


 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2523 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2524:src/keys.c    **** 	return pc;
2525:src/keys.c    **** }
 351              		.loc 1 2525 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2525 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 514 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 515 2 view .LVU102
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 514 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 515 37 view .LVU104
 387 0002 3A4C     		ldr	r4, .L58
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 515 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D8B9     		cbnz	r0, .L40
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 515 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 515 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
ARM GAS  /tmp/cciIzcMf.s 			page 53


 517:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 517 3 is_stmt 1 view .LVU108
 517:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 517 18 is_stmt 0 view .LVU109
 397 000c 384A     		ldr	r2, .L58+4
 518:src/keys.c    **** 	}
 398              		.loc 1 518 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 517:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 517 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 518:src/keys.c    **** 	}
 405              		.loc 1 518 3 is_stmt 1 view .LVU112
 406              	.L41:
 520:src/keys.c    **** 
 407              		.loc 1 520 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 522:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 522 2 view .LVU114
 523:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 523 2 view .LVU115
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 524 2 view .LVU116
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 549 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 524 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 549 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 524 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 423              		.loc 1 525 2 is_stmt 1 view .LVU121
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 527 2 view .LVU122
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 548 3 view .LVU123
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 548 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 549 3 is_stmt 1 view .LVU125
 550:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 550 3 view .LVU126
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 555 2 view .LVU127
 431              	.LBB232:
ARM GAS  /tmp/cciIzcMf.s 			page 54


 432              	.LBI232:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 102 13 view .LVU128
 434              	.LBE232:
 103:src/keys.c    **** }
 435              		.loc 1 103 2 view .LVU129
 436              	.LVL37:
 437              	.LBB249:
 438              	.LBB233:
 439              	.LBI233:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 92 20 view .LVU130
 441              	.LBB234:
  93:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 93 2 view .LVU131
 443              	.LBB235:
 444              	.LBI235:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 84 13 view .LVU132
 446              	.LBB236:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 85 2 view .LVU133
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 85 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  86:src/keys.c    **** }
 451              		.loc 1 86 2 is_stmt 1 view .LVU135
 452              	.LBE236:
 453              	.LBE235:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 454              		.loc 1 94 2 view .LVU136
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 455              		.loc 1 94 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 458              		.loc 1 95 2 is_stmt 1 view .LVU138
  95:src/keys.c    **** 	return r;
 459              		.loc 1 95 19 is_stmt 0 view .LVU139
 460 003c 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 461              		.loc 1 96 2 is_stmt 1 view .LVU140
 462              	.LVL39:
  96:src/keys.c    **** }
 463              		.loc 1 96 2 is_stmt 0 view .LVU141
 464              	.LBE234:
 465              	.LBE233:
 466              	.LBE249:
 559:src/keys.c    **** 
 467              		.loc 1 559 1 view .LVU142
 468 003e 38BD     		pop	{r3, r4, r5, pc}
 469              	.LVL40:
 470              	.L40:
 520:src/keys.c    **** 
 471              		.loc 1 520 2 is_stmt 1 view .LVU143
 472 0040 FFF7FEFF 		bl	process_cmdline
ARM GAS  /tmp/cciIzcMf.s 			page 55


 473              	.LVL41:
 522:src/keys.c    **** 	State2.registerlist = 0;
 474              		.loc 1 522 2 view .LVU144
 523:src/keys.c    **** 	State2.status = 0;
 475              		.loc 1 523 2 view .LVU145
 522:src/keys.c    **** 	State2.registerlist = 0;
 476              		.loc 1 522 19 is_stmt 0 view .LVU146
 477 0044 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 478              		.loc 1 524 16 view .LVU147
 479 0046 0022     		movs	r2, #0
 522:src/keys.c    **** 	State2.registerlist = 0;
 480              		.loc 1 522 19 view .LVU148
 481 0048 23F00C03 		bic	r3, r3, #12
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 482              		.loc 1 527 2 view .LVU149
 483 004c 162D     		cmp	r5, #22
 522:src/keys.c    **** 	State2.registerlist = 0;
 484              		.loc 1 522 19 view .LVU150
 485 004e E375     		strb	r3, [r4, #23]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 486              		.loc 1 524 2 is_stmt 1 view .LVU151
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 487              		.loc 1 524 16 is_stmt 0 view .LVU152
 488 0050 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 489              		.loc 1 525 2 is_stmt 1 view .LVU153
 525:src/keys.c    **** 
 490              		.loc 1 525 19 is_stmt 0 view .LVU154
 491 0052 A273     		strb	r2, [r4, #14]
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 492              		.loc 1 527 2 is_stmt 1 view .LVU155
 493 0054 1DD0     		beq	.L42
 494 0056 172D     		cmp	r5, #23
 495 0058 07D1     		bne	.L56
 543:src/keys.c    **** 		break;
 496              		.loc 1 543 3 view .LVU156
 543:src/keys.c    **** 		break;
 497              		.loc 1 543 17 is_stmt 0 view .LVU157
 498 005a 0123     		movs	r3, #1
 499 005c 2373     		strb	r3, [r4, #12]
 544:src/keys.c    **** 
 500              		.loc 1 544 3 is_stmt 1 view .LVU158
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 501              		.loc 1 555 2 view .LVU159
 502              	.LBB250:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 503              		.loc 1 102 13 view .LVU160
 504              	.LBE250:
 103:src/keys.c    **** }
 505              		.loc 1 103 2 view .LVU161
 506              	.LVL42:
 507              	.LBB251:
 508              	.LBB246:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 509              		.loc 1 92 20 view .LVU162
 510              	.LBB243:
ARM GAS  /tmp/cciIzcMf.s 			page 56


  93:src/keys.c    **** 	State2.shifts = shift;
 511              		.loc 1 93 2 view .LVU163
 512              	.LBB240:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 513              		.loc 1 84 13 view .LVU164
 514              	.LBB237:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 515              		.loc 1 85 2 view .LVU165
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 516              		.loc 1 85 18 is_stmt 0 view .LVU166
 517 005e FFF7FEFF 		bl	shift_down
 518              	.LVL43:
  86:src/keys.c    **** }
 519              		.loc 1 86 2 is_stmt 1 view .LVU167
 520              	.LBE237:
 521              	.LBE240:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 522              		.loc 1 94 2 view .LVU168
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 523              		.loc 1 94 16 is_stmt 0 view .LVU169
 524 0062 0023     		movs	r3, #0
 525 0064 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 526              		.loc 1 95 2 is_stmt 1 view .LVU170
  95:src/keys.c    **** 	return r;
 527              		.loc 1 95 19 is_stmt 0 view .LVU171
 528 0066 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 529              		.loc 1 96 2 is_stmt 1 view .LVU172
 530              	.LVL44:
  96:src/keys.c    **** }
 531              		.loc 1 96 2 is_stmt 0 view .LVU173
 532              	.LBE243:
 533              	.LBE246:
 534              	.LBE251:
 559:src/keys.c    **** 
 535              		.loc 1 559 1 view .LVU174
 536 0068 38BD     		pop	{r3, r4, r5, pc}
 537              	.L56:
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 538              		.loc 1 527 2 view .LVU175
 539 006a 152D     		cmp	r5, #21
 540 006c 1ED1     		bne	.L44
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 541              		.loc 1 530 3 is_stmt 1 view .LVU176
 531:src/keys.c    **** 		break;
 542              		.loc 1 531 41 is_stmt 0 view .LVU177
 543 006e 2049     		ldr	r1, .L58+4
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 544              		.loc 1 530 20 view .LVU178
 545 0070 DBB2     		uxtb	r3, r3
 531:src/keys.c    **** 		break;
 546              		.loc 1 531 41 view .LVU179
 547 0072 0968     		ldr	r1, [r1]
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 548              		.loc 1 530 20 view .LVU180
 549 0074 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/cciIzcMf.s 			page 57


 550 0078 E375     		strb	r3, [r4, #23]
 531:src/keys.c    **** 		break;
 551              		.loc 1 531 3 is_stmt 1 view .LVU181
 531:src/keys.c    **** 		break;
 552              		.loc 1 531 19 is_stmt 0 view .LVU182
 553 007a B1F8EC07 		ldrh	r0, [r1, #2028]
 554 007e 1146     		mov	r1, r2
 555 0080 FFF7FEFF 		bl	advance_to_next_label
 556              	.LVL45:
 531:src/keys.c    **** 		break;
 557              		.loc 1 531 17 view .LVU183
 558 0084 2081     		strh	r0, [r4, #8]	@ movhi
 532:src/keys.c    **** 	
 559              		.loc 1 532 3 is_stmt 1 view .LVU184
 560              	.L45:
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 561              		.loc 1 555 2 view .LVU185
 562              	.LBB252:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 563              		.loc 1 102 13 view .LVU186
 564              	.LBE252:
 103:src/keys.c    **** }
 565              		.loc 1 103 2 view .LVU187
 566              	.LVL46:
 567              	.LBB253:
 568              	.LBB247:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 569              		.loc 1 92 20 view .LVU188
 570              	.LBB244:
  93:src/keys.c    **** 	State2.shifts = shift;
 571              		.loc 1 93 2 view .LVU189
 572              	.LBB241:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 573              		.loc 1 84 13 view .LVU190
 574              	.LBB238:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 575              		.loc 1 85 2 view .LVU191
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 576              		.loc 1 85 18 is_stmt 0 view .LVU192
 577 0086 FFF7FEFF 		bl	shift_down
 578              	.LVL47:
  86:src/keys.c    **** }
 579              		.loc 1 86 2 is_stmt 1 view .LVU193
 580              	.LBE238:
 581              	.LBE241:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 582              		.loc 1 94 2 view .LVU194
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 583              		.loc 1 94 16 is_stmt 0 view .LVU195
 584 008a 0023     		movs	r3, #0
 585 008c 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 586              		.loc 1 95 2 is_stmt 1 view .LVU196
  95:src/keys.c    **** 	return r;
 587              		.loc 1 95 19 is_stmt 0 view .LVU197
 588 008e 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
ARM GAS  /tmp/cciIzcMf.s 			page 58


 589              		.loc 1 96 2 is_stmt 1 view .LVU198
 590              	.LVL48:
  96:src/keys.c    **** }
 591              		.loc 1 96 2 is_stmt 0 view .LVU199
 592              	.LBE244:
 593              	.LBE247:
 594              	.LBE253:
 559:src/keys.c    **** 
 595              		.loc 1 559 1 view .LVU200
 596 0090 38BD     		pop	{r3, r4, r5, pc}
 597              	.L42:
 536:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 536 3 is_stmt 1 view .LVU201
 536:src/keys.c    **** 		State2.digval = regX_idx;
 599              		.loc 1 536 23 is_stmt 0 view .LVU202
 600 0092 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 538:src/keys.c    **** 		break;
 601              		.loc 1 538 18 view .LVU203
 602 0094 A272     		strb	r2, [r4, #10]
 536:src/keys.c    **** 		State2.digval = regX_idx;
 603              		.loc 1 536 23 view .LVU204
 604 0096 43F00803 		orr	r3, r3, #8
 537:src/keys.c    **** 		State2.digval2 = 0;
 605              		.loc 1 537 17 view .LVU205
 606 009a 6422     		movs	r2, #100
 536:src/keys.c    **** 		State2.digval = regX_idx;
 607              		.loc 1 536 23 view .LVU206
 608 009c E375     		strb	r3, [r4, #23]
 537:src/keys.c    **** 		State2.digval2 = 0;
 609              		.loc 1 537 3 is_stmt 1 view .LVU207
 537:src/keys.c    **** 		State2.digval2 = 0;
 610              		.loc 1 537 17 is_stmt 0 view .LVU208
 611 009e 2281     		strh	r2, [r4, #8]	@ movhi
 538:src/keys.c    **** 		break;
 612              		.loc 1 538 3 is_stmt 1 view .LVU209
 539:src/keys.c    **** 
 613              		.loc 1 539 3 view .LVU210
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 614              		.loc 1 555 2 view .LVU211
 615              	.LBB254:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 616              		.loc 1 102 13 view .LVU212
 617              	.LBE254:
 103:src/keys.c    **** }
 618              		.loc 1 103 2 view .LVU213
 619              	.LVL49:
 620              	.LBB255:
 621              	.LBB248:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 622              		.loc 1 92 20 view .LVU214
 623              	.LBB245:
  93:src/keys.c    **** 	State2.shifts = shift;
 624              		.loc 1 93 2 view .LVU215
 625              	.LBB242:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 626              		.loc 1 84 13 view .LVU216
 627              	.LBB239:
ARM GAS  /tmp/cciIzcMf.s 			page 59


  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 628              		.loc 1 85 2 view .LVU217
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 629              		.loc 1 85 18 is_stmt 0 view .LVU218
 630 00a0 FFF7FEFF 		bl	shift_down
 631              	.LVL50:
  86:src/keys.c    **** }
 632              		.loc 1 86 2 is_stmt 1 view .LVU219
 633              	.LBE239:
 634              	.LBE242:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 635              		.loc 1 94 2 view .LVU220
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 636              		.loc 1 94 16 is_stmt 0 view .LVU221
 637 00a4 0023     		movs	r3, #0
 638 00a6 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 639              		.loc 1 95 2 is_stmt 1 view .LVU222
  95:src/keys.c    **** 	return r;
 640              		.loc 1 95 19 is_stmt 0 view .LVU223
 641 00a8 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 642              		.loc 1 96 2 is_stmt 1 view .LVU224
 643              	.LVL51:
  96:src/keys.c    **** }
 644              		.loc 1 96 2 is_stmt 0 view .LVU225
 645              	.LBE245:
 646              	.LBE248:
 647              	.LBE255:
 559:src/keys.c    **** 
 648              		.loc 1 559 1 view .LVU226
 649 00aa 38BD     		pop	{r3, r4, r5, pc}
 650              	.L44:
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 651              		.loc 1 548 3 is_stmt 1 view .LVU227
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 652              		.loc 1 549 44 is_stmt 0 view .LVU228
 653 00ac 022D     		cmp	r5, #2
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 654              		.loc 1 548 20 view .LVU229
 655 00ae A573     		strb	r5, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 656              		.loc 1 549 3 is_stmt 1 view .LVU230
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 657              		.loc 1 549 44 is_stmt 0 view .LVU231
 658 00b0 12D1     		bne	.L57
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 659              		.loc 1 549 16 view .LVU232
 660 00b2 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 661 00b4 43F00203 		orr	r3, r3, #2
 662 00b8 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 663              		.loc 1 550 3 is_stmt 1 view .LVU233
 664              	.L49:
 550:src/keys.c    **** 			// Different catalogue, reset position
 665              		.loc 1 550 32 is_stmt 0 discriminator 1 view .LVU234
 666 00ba 0D4B     		ldr	r3, .L58+4
ARM GAS  /tmp/cciIzcMf.s 			page 60


 667 00bc 1A68     		ldr	r2, [r3]
 550:src/keys.c    **** 			// Different catalogue, reset position
 668              		.loc 1 550 37 discriminator 1 view .LVU235
 669 00be 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 550:src/keys.c    **** 			// Different catalogue, reset position
 670              		.loc 1 550 29 discriminator 1 view .LVU236
 671 00c2 03F01F03 		and	r3, r3, #31
 672 00c6 AB42     		cmp	r3, r5
 673 00c8 DDD0     		beq	.L45
 552:src/keys.c    **** 		}
 674              		.loc 1 552 4 is_stmt 1 view .LVU237
 552:src/keys.c    **** 		}
 675              		.loc 1 552 17 is_stmt 0 view .LVU238
 676 00ca B2F8DC37 		ldrh	r3, [r2, #2012]
 677 00ce 6FF34B13 		bfc	r3, #5, #7
 678 00d2 A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 679 00d6 D6E7     		b	.L45
 680              	.L57:
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 681              		.loc 1 549 44 view .LVU239
 682 00d8 A5F11101 		sub	r1, r5, #17
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 683              		.loc 1 549 16 view .LVU240
 684 00dc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 685              		.loc 1 549 44 view .LVU241
 686 00de 4A42     		rsbs	r2, r1, #0
 687 00e0 4A41     		adcs	r2, r2, r1
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 688              		.loc 1 549 16 view .LVU242
 689 00e2 62F34103 		bfi	r3, r2, #1, #1
 690 00e6 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 691              		.loc 1 550 3 is_stmt 1 view .LVU243
 692 00e8 E7E7     		b	.L49
 693              	.L59:
 694 00ea 00BF     		.align	2
 695              	.L58:
 696 00ec 00000000 		.word	StateWhileOn
 697 00f0 00000000 		.word	main_ram
 698              		.cfi_endproc
 699              	.LFE12:
 701              		.section	.text.advance_to_previous_label,"ax",%progbits
 702              		.align	1
 703              		.p2align 2,,3
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	advance_to_previous_label:
 710              	.LVL52:
 711              	.LFB51:
2526:src/keys.c    **** 
2527:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 712              		.loc 1 2527 80 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cciIzcMf.s 			page 61


 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		.loc 1 2527 80 is_stmt 0 view .LVU245
 717 0000 70B5     		push	{r4, r5, r6, lr}
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 4, -16
 720              		.cfi_offset 5, -12
 721              		.cfi_offset 6, -8
 722              		.cfi_offset 14, -4
 723 0002 124E     		ldr	r6, .L69
 724              		.loc 1 2527 80 view .LVU246
 725 0004 0446     		mov	r4, r0
 726 0006 0D46     		mov	r5, r1
 727              	.LVL53:
 728              	.L61:
2528:src/keys.c    **** 	do {
 729              		.loc 1 2528 2 is_stmt 1 view .LVU247
2529:src/keys.c    **** 		for (;;) {
 730              		.loc 1 2529 3 view .LVU248
2530:src/keys.c    **** 			pc = do_dec(pc, 0);
 731              		.loc 1 2530 4 view .LVU249
 732              		.loc 1 2530 9 is_stmt 0 view .LVU250
 733 0008 2046     		mov	r0, r4
 734 000a 0021     		movs	r1, #0
 735 000c FFF7FEFF 		bl	do_dec
 736              	.LVL54:
2531:src/keys.c    **** 			if (PcWrapped)
2532:src/keys.c    **** 				break;
2533:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 737              		.loc 1 2533 4 is_stmt 1 view .LVU251
2534:src/keys.c    **** 				return pc;
2535:src/keys.c    **** 			}
2536:src/keys.c    **** 		}
2537:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 738              		.loc 1 2537 3 view .LVU252
 739              		.loc 1 2537 8 is_stmt 0 view .LVU253
 740 0010 20F47F53 		bic	r3, r0, #16320
 741 0014 23F03F03 		bic	r3, r3, #63
2531:src/keys.c    **** 			if (PcWrapped)
 742              		.loc 1 2531 7 view .LVU254
 743 0018 3268     		ldr	r2, [r6]
 744              		.loc 1 2537 8 view .LVU255
 745 001a A3F58043 		sub	r3, r3, #16384
2538:src/keys.c    **** 		pc = do_dec(pc, 0);
 746              		.loc 1 2538 8 view .LVU256
 747 001e 0021     		movs	r1, #0
2530:src/keys.c    **** 			if (PcWrapped)
 748              		.loc 1 2530 9 view .LVU257
 749 0020 0446     		mov	r4, r0
 750              	.LVL55:
2531:src/keys.c    **** 				break;
 751              		.loc 1 2531 4 is_stmt 1 view .LVU258
2537:src/keys.c    **** 		pc = do_dec(pc, 0);
 752              		.loc 1 2537 8 is_stmt 0 view .LVU259
 753 0022 9BB2     		uxth	r3, r3
 754              	.LVL56:
 755              		.loc 1 2538 3 is_stmt 1 view .LVU260
2531:src/keys.c    **** 				break;
ARM GAS  /tmp/cciIzcMf.s 			page 62


 756              		.loc 1 2531 7 is_stmt 0 view .LVU261
 757 0024 32B9     		cbnz	r2, .L62
2533:src/keys.c    **** 				return pc;
 758              		.loc 1 2533 8 view .LVU262
 759 0026 2946     		mov	r1, r5
 760 0028 FFF7FEFF 		bl	is_label_or_end_at
 761              	.LVL57:
2533:src/keys.c    **** 				return pc;
 762              		.loc 1 2533 7 view .LVU263
 763 002c 0028     		cmp	r0, #0
 764 002e EBD0     		beq	.L61
2539:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2540:src/keys.c    **** 	return pc;
2541:src/keys.c    **** }
 765              		.loc 1 2541 1 view .LVU264
 766 0030 2046     		mov	r0, r4
 767 0032 70BD     		pop	{r4, r5, r6, pc}
 768              	.LVL58:
 769              	.L62:
2538:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 770              		.loc 1 2538 8 view .LVU265
 771 0034 43F00100 		orr	r0, r3, #1
 772 0038 FFF7FEFF 		bl	do_dec
 773              	.LVL59:
2539:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 774              		.loc 1 2539 13 view .LVU266
 775 003c 2946     		mov	r1, r5
2538:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 776              		.loc 1 2538 8 view .LVU267
 777 003e 0446     		mov	r4, r0
 778              	.LVL60:
2539:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 779              		.loc 1 2539 10 is_stmt 1 view .LVU268
2539:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 780              		.loc 1 2539 13 is_stmt 0 view .LVU269
 781 0040 FFF7FEFF 		bl	is_label_or_end_at
 782              	.LVL61:
2539:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 783              		.loc 1 2539 2 view .LVU270
 784 0044 0028     		cmp	r0, #0
 785 0046 DFD0     		beq	.L61
 786              		.loc 1 2541 1 view .LVU271
 787 0048 2046     		mov	r0, r4
 788 004a 70BD     		pop	{r4, r5, r6, pc}
 789              	.LVL62:
 790              	.L70:
 791              		.loc 1 2541 1 view .LVU272
 792              		.align	2
 793              	.L69:
 794 004c 00000000 		.word	PcWrapped
 795              		.cfi_endproc
 796              	.LFE51:
 798              		.section	.text.check_confirm.part.0,"ax",%progbits
 799              		.align	1
 800              		.p2align 2,,3
 801              		.syntax unified
 802              		.thumb
ARM GAS  /tmp/cciIzcMf.s 			page 63


 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	check_confirm.part.0:
 807              	.LVL63:
 808              	.LFB59:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 809              		.loc 1 619 12 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LBB256:
 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 815              		.loc 1 621 3 view .LVU274
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 816              		.loc 1 622 3 view .LVU275
 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 817              		.loc 1 621 13 is_stmt 0 view .LVU276
 818 0000 C3B2     		uxtb	r3, r0
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 819              		.loc 1 622 25 view .LVU277
 820 0002 A3F14102 		sub	r2, r3, #65
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 821              		.loc 1 622 6 view .LVU278
 822 0006 032A     		cmp	r2, #3
 823 0008 06D9     		bls	.L74
 630:src/keys.c    **** #endif
 824              		.loc 1 630 7 is_stmt 1 view .LVU279
 630:src/keys.c    **** #endif
 825              		.loc 1 630 29 is_stmt 0 view .LVU280
 826 000a AD3B     		subs	r3, r3, #173
 630:src/keys.c    **** #endif
 827              		.loc 1 630 10 view .LVU281
 828 000c 052B     		cmp	r3, #5
 829 000e 02D8     		bhi	.L73
 640:src/keys.c    **** 		}
 830              		.loc 1 640 4 is_stmt 1 view .LVU282
 640:src/keys.c    **** 		}
 831              		.loc 1 640 20 is_stmt 0 view .LVU283
 832 0010 054B     		ldr	r3, .L75
 833 0012 0122     		movs	r2, #1
 834 0014 1A60     		str	r2, [r3]
 835              	.L73:
 836              	.LBE256:
 644:src/keys.c    **** 
 837              		.loc 1 644 1 view .LVU284
 838 0016 7047     		bx	lr
 839              	.L74:
 840              	.LBB257:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 841              		.loc 1 623 4 is_stmt 1 view .LVU285
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 842              		.loc 1 623 19 is_stmt 0 view .LVU286
 843 0018 044B     		ldr	r3, .L75+4
 844 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 845              		.loc 1 623 35 view .LVU287
ARM GAS  /tmp/cciIzcMf.s 			page 64


 846 001c 4038     		subs	r0, r0, #64
 847              	.LVL64:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 848              		.loc 1 623 19 view .LVU288
 849 001e 60F30202 		bfi	r2, r0, #0, #3
 850 0022 1A75     		strb	r2, [r3, #20]
 624:src/keys.c    **** 		}
 851              		.loc 1 624 4 is_stmt 1 view .LVU289
 624:src/keys.c    **** 		}
 852              		.loc 1 624 11 is_stmt 0 view .LVU290
 853 0024 3320     		movs	r0, #51
 854              	.LVL65:
 624:src/keys.c    **** 		}
 855              		.loc 1 624 11 view .LVU291
 856 0026 7047     		bx	lr
 857              	.L76:
 858              		.align	2
 859              	.L75:
 860 0028 00000000 		.word	NonProgrammable
 861 002c 00000000 		.word	StateWhileOn
 862              	.LBE257:
 863              		.cfi_endproc
 864              	.LFE59:
 866              		.section	.text.init_arg.part.0,"ax",%progbits
 867              		.align	1
 868              		.p2align 2,,3
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	init_arg.part.0:
 875              	.LVL66:
 876              	.LFB61:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 877              		.loc 1 501 13 is_stmt 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 504:src/keys.c    **** 	State2.ind = 0;
 882              		.loc 1 504 2 view .LVU293
 504:src/keys.c    **** 	State2.ind = 0;
 883              		.loc 1 504 10 is_stmt 0 view .LVU294
 884 0000 084B     		ldr	r3, .L78
 509:src/keys.c    **** 	State2.local = 0;
 885              		.loc 1 509 13 view .LVU295
 886 0002 5969     		ldr	r1, [r3, #20]
 504:src/keys.c    **** 	State2.ind = 0;
 887              		.loc 1 504 10 view .LVU296
 888 0004 D877     		strb	r0, [r3, #31]
 505:src/keys.c    **** 	State2.digval = 0;
 889              		.loc 1 505 2 is_stmt 1 view .LVU297
 506:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 506 2 view .LVU298
 509:src/keys.c    **** 	State2.local = 0;
 891              		.loc 1 509 13 is_stmt 0 view .LVU299
 892 0006 21F40F11 		bic	r1, r1, #2342912
ARM GAS  /tmp/cciIzcMf.s 			page 65


 893 000a 8628     		cmp	r0, #134
 894 000c 0CBF     		ite	eq
 895 000e 4FF40812 		moveq	r2, #2228224
 896 0012 4FF40012 		movne	r2, #2097152
 897 0016 0A43     		orrs	r2, r2, r1
 506:src/keys.c    **** 	State2.numdigit = 0;
 898              		.loc 1 506 16 view .LVU300
 899 0018 0021     		movs	r1, #0
 509:src/keys.c    **** 	State2.local = 0;
 900              		.loc 1 509 13 view .LVU301
 901 001a 5A61     		str	r2, [r3, #20]
 506:src/keys.c    **** 	State2.numdigit = 0;
 902              		.loc 1 506 16 view .LVU302
 903 001c 1981     		strh	r1, [r3, #8]	@ movhi
 507:src/keys.c    **** 	State2.rarg = 1;
 904              		.loc 1 507 2 is_stmt 1 view .LVU303
 507:src/keys.c    **** 	State2.rarg = 1;
 905              		.loc 1 507 18 is_stmt 0 view .LVU304
 906 001e D972     		strb	r1, [r3, #11]
 508:src/keys.c    **** 	State2.dot = 0;
 907              		.loc 1 508 2 is_stmt 1 view .LVU305
 509:src/keys.c    **** 	State2.local = 0;
 908              		.loc 1 509 2 view .LVU306
 510:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 909              		.loc 1 510 2 view .LVU307
 511:src/keys.c    **** }
 910              		.loc 1 511 2 view .LVU308
 512:src/keys.c    **** 
 911              		.loc 1 512 1 is_stmt 0 view .LVU309
 912 0020 7047     		bx	lr
 913              	.L79:
 914 0022 00BF     		.align	2
 915              	.L78:
 916 0024 00000000 		.word	StateWhileOn
 917              		.cfi_endproc
 918              	.LFE61:
 920              		.section	.text.reset_arg,"ax",%progbits
 921              		.align	1
 922              		.p2align 2,,3
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu fpv4-sp-d16
 928              	reset_arg:
 929              	.LFB29:
1499:src/keys.c    **** 	init_arg((enum rarg) 0);
 930              		.loc 1 1499 29 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
1500:src/keys.c    **** 	State2.rarg = 0;
 934              		.loc 1 1500 2 view .LVU311
 935              	.LVL67:
 936              	.LBB258:
 937              	.LBI258:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 938              		.loc 1 501 13 view .LVU312
ARM GAS  /tmp/cciIzcMf.s 			page 66


 939              	.LBB259:
 502:src/keys.c    **** 		return;
 940              		.loc 1 502 2 view .LVU313
 941              	.LBE259:
 942              	.LBE258:
1499:src/keys.c    **** 	init_arg((enum rarg) 0);
 943              		.loc 1 1499 29 is_stmt 0 view .LVU314
 944 0000 08B5     		push	{r3, lr}
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 3, -8
 947              		.cfi_offset 14, -4
 948              	.LBB261:
 949              	.LBB260:
 502:src/keys.c    **** 		return;
 950              		.loc 1 502 6 view .LVU315
 951 0002 FFF7FEFF 		bl	is_bad_cmdline
 952              	.LVL68:
 502:src/keys.c    **** 		return;
 953              		.loc 1 502 5 view .LVU316
 954 0006 08B9     		cbnz	r0, .L81
 955 0008 FFF7FEFF 		bl	init_arg.part.0
 956              	.LVL69:
 957              	.L81:
 502:src/keys.c    **** 		return;
 958              		.loc 1 502 5 view .LVU317
 959              	.LBE260:
 960              	.LBE261:
1501:src/keys.c    **** }
 961              		.loc 1 1501 2 is_stmt 1 view .LVU318
1501:src/keys.c    **** }
 962              		.loc 1 1501 14 is_stmt 0 view .LVU319
 963 000c 024B     		ldr	r3, .L83
 964 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 965 0010 6FF34512 		bfc	r2, #5, #1
 966 0014 9A75     		strb	r2, [r3, #22]
1502:src/keys.c    **** 
 967              		.loc 1 1502 1 view .LVU320
 968 0016 08BD     		pop	{r3, pc}
 969              	.L84:
 970              		.align	2
 971              	.L83:
 972 0018 00000000 		.word	StateWhileOn
 973              		.cfi_endproc
 974              	.LFE29:
 976              		.section	.text.arg_eval,"ax",%progbits
 977              		.align	1
 978              		.p2align 2,,3
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 982              		.fpu fpv4-sp-d16
 984              	arg_eval:
 985              	.LVL70:
 986              	.LFB30:
1504:src/keys.c    **** 	const unsigned int base = CmdBase;
 987              		.loc 1 1504 39 is_stmt 1 view -0
 988              		.cfi_startproc
ARM GAS  /tmp/cciIzcMf.s 			page 67


 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
1505:src/keys.c    **** 	int r = RARG(base, val 
 991              		.loc 1 1505 2 view .LVU322
1505:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1505 28 is_stmt 0 view .LVU323
 993 0000 1C4B     		ldr	r3, .L106
1504:src/keys.c    **** 	const unsigned int base = CmdBase;
 994              		.loc 1 1504 39 view .LVU324
 995 0002 70B5     		push	{r4, r5, r6, lr}
 996              		.cfi_def_cfa_offset 16
 997              		.cfi_offset 4, -16
 998              		.cfi_offset 5, -12
 999              		.cfi_offset 6, -8
 1000              		.cfi_offset 14, -4
1506:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1506 10 view .LVU325
 1002 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 1003 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1505:src/keys.c    **** 	int r = RARG(base, val 
 1004              		.loc 1 1505 21 view .LVU326
 1005 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 1006              	.LVL71:
1506:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1506 2 is_stmt 1 view .LVU327
1506:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1008              		.loc 1 1506 10 is_stmt 0 view .LVU328
 1009 000a EE07     		lsls	r6, r5, #31
1509:src/keys.c    **** 
 1010              		.loc 1 1509 30 view .LVU329
 1011 000c 1A4E     		ldr	r6, .L106+4
 1012 000e 3668     		ldr	r6, [r6]
1506:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1013              		.loc 1 1506 10 view .LVU330
 1014 0010 01F08003 		and	r3, r1, #128
 1015 0014 0344     		add	r3, r3, r0
1509:src/keys.c    **** 
 1016              		.loc 1 1509 30 view .LVU331
 1017 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1506:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1018              		.loc 1 1506 10 view .LVU332
 1019 001a 02F12004 		add	r4, r2, #32
 1020 001e 48BF     		it	mi
 1021 0020 7033     		addmi	r3, r3, #112
 1022 0022 2402     		lsls	r4, r4, #8
 1023 0024 1C43     		orrs	r4, r4, r3
 1024              	.LVL72:
1509:src/keys.c    **** 
 1025              		.loc 1 1509 2 is_stmt 1 view .LVU333
1509:src/keys.c    **** 
 1026              		.loc 1 1509 77 is_stmt 0 view .LVU334
 1027 0026 3307     		lsls	r3, r6, #28
 1028 0028 1DD5     		bpl	.L92
1509:src/keys.c    **** 
 1029              		.loc 1 1509 77 discriminator 2 view .LVU335
 1030 002a 15F0400F 		tst	r5, #64
 1031 002e 0CBF     		ite	eq
ARM GAS  /tmp/cciIzcMf.s 			page 68


 1032 0030 0425     		moveq	r5, #4
 1033 0032 0825     		movne	r5, #8
 1034              	.L87:
 1035              	.LVL73:
1511:src/keys.c    **** 		/*
 1036              		.loc 1 1511 2 is_stmt 1 discriminator 6 view .LVU336
1511:src/keys.c    **** 		/*
 1037              		.loc 1 1511 5 is_stmt 0 discriminator 6 view .LVU337
 1038 0034 0E06     		lsls	r6, r1, #24
 1039 0036 12D4     		bmi	.L88
1526:src/keys.c    **** 			// Disallow odd complex register > 98
 1040              		.loc 1 1526 3 is_stmt 1 view .LVU338
1526:src/keys.c    **** 			// Disallow odd complex register > 98
 1041              		.loc 1 1526 20 is_stmt 0 view .LVU339
 1042 0038 104B     		ldr	r3, .L106+8
 1043 003a 03EB0213 		add	r3, r3, r2, lsl #4
 1044 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1526:src/keys.c    **** 			// Disallow odd complex register > 98
 1045              		.loc 1 1526 6 view .LVU340
 1046 0040 D906     		lsls	r1, r3, #27
 1047 0042 09D5     		bpl	.L89
1526:src/keys.c    **** 			// Disallow odd complex register > 98
 1048              		.loc 1 1526 27 discriminator 1 view .LVU341
 1049 0044 6228     		cmp	r0, #98
 1050 0046 07D9     		bls	.L89
1526:src/keys.c    **** 			// Disallow odd complex register > 98
 1051              		.loc 1 1526 52 discriminator 2 view .LVU342
 1052 0048 C307     		lsls	r3, r0, #31
 1053 004a 02D4     		bmi	.L96
1530:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1054              		.loc 1 1530 3 is_stmt 1 view .LVU343
1530:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1055              		.loc 1 1530 28 is_stmt 0 view .LVU344
 1056 004c 223A     		subs	r2, r2, #34
 1057              	.LVL74:
1530:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1058              		.loc 1 1530 6 view .LVU345
 1059 004e 012A     		cmp	r2, #1
 1060 0050 05D8     		bhi	.L88
 1061              	.LVL75:
 1062              	.L96:
1528:src/keys.c    **** #endif
 1063              		.loc 1 1528 11 view .LVU346
 1064 0052 3324     		movs	r4, #51
 1065              	.LVL76:
1537:src/keys.c    **** 
 1066              		.loc 1 1537 1 view .LVU347
 1067 0054 2046     		mov	r0, r4
 1068              	.LVL77:
1537:src/keys.c    **** 
 1069              		.loc 1 1537 1 view .LVU348
 1070 0056 70BD     		pop	{r4, r5, r6, pc}
 1071              	.LVL78:
 1072              	.L89:
1530:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1530 3 is_stmt 1 view .LVU349
1530:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
ARM GAS  /tmp/cciIzcMf.s 			page 69


 1074              		.loc 1 1530 28 is_stmt 0 view .LVU350
 1075 0058 223A     		subs	r2, r2, #34
 1076              	.LVL79:
1530:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1077              		.loc 1 1530 6 view .LVU351
 1078 005a 012A     		cmp	r2, #1
 1079 005c 05D9     		bls	.L105
 1080              	.LVL80:
 1081              	.L88:
1535:src/keys.c    **** 	return r;
 1082              		.loc 1 1535 2 is_stmt 1 view .LVU352
 1083 005e FFF7FEFF 		bl	reset_arg
 1084              	.LVL81:
1536:src/keys.c    **** }
 1085              		.loc 1 1536 2 view .LVU353
1537:src/keys.c    **** 
 1086              		.loc 1 1537 1 is_stmt 0 view .LVU354
 1087 0062 2046     		mov	r0, r4
 1088 0064 70BD     		pop	{r4, r5, r6, pc}
 1089              	.LVL82:
 1090              	.L92:
1509:src/keys.c    **** 
 1091              		.loc 1 1509 77 view .LVU355
 1092 0066 0425     		movs	r5, #4
 1093 0068 E4E7     		b	.L87
 1094              	.LVL83:
 1095              	.L105:
1530:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1530 73 discriminator 1 view .LVU356
 1097 006a C5F16405 		rsb	r5, r5, #100
 1098              	.LVL84:
1530:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1099              		.loc 1 1530 52 discriminator 1 view .LVU357
 1100 006e 8542     		cmp	r5, r0
 1101 0070 F5D2     		bcs	.L88
 1102 0072 EEE7     		b	.L96
 1103              	.L107:
 1104              		.align	2
 1105              	.L106:
 1106 0074 00000000 		.word	StateWhileOn
 1107 0078 00000000 		.word	main_ram
 1108 007c 00000000 		.word	argcmds
 1109              		.cfi_endproc
 1110              	.LFE30:
 1112              		.section	.text.process_arg_shuffle,"ax",%progbits
 1113              		.align	1
 1114              		.p2align 2,,3
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv4-sp-d16
 1120              	process_arg_shuffle:
 1121              	.LVL85:
 1122              	.LFB36:
1651:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1123              		.loc 1 1651 39 is_stmt 1 view -0
 1124              		.cfi_startproc
ARM GAS  /tmp/cciIzcMf.s 			page 70


 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
1652:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1652 2 view .LVU359
1651:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1129              		.loc 1 1651 39 is_stmt 0 view .LVU360
 1130 0000 10B4     		push	{r4}
 1131              		.cfi_def_cfa_offset 4
 1132              		.cfi_offset 4, -4
1652:src/keys.c    **** 	if (State2.numdigit < 4)
 1133              		.loc 1 1652 31 view .LVU361
 1134 0002 0A4A     		ldr	r2, .L111
 1135 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1652:src/keys.c    **** 	if (State2.numdigit < 4)
 1136              		.loc 1 1652 16 view .LVU362
 1137 0006 1189     		ldrh	r1, [r2, #8]
1652:src/keys.c    **** 	if (State2.numdigit < 4)
 1138              		.loc 1 1652 43 view .LVU363
 1139 0008 5C00     		lsls	r4, r3, #1
1652:src/keys.c    **** 	if (State2.numdigit < 4)
 1140              		.loc 1 1652 21 view .LVU364
 1141 000a A040     		lsls	r0, r0, r4
 1142              	.LVL86:
1652:src/keys.c    **** 	if (State2.numdigit < 4)
 1143              		.loc 1 1652 40 view .LVU365
 1144 000c 0133     		adds	r3, r3, #1
 1145 000e DBB2     		uxtb	r3, r3
1652:src/keys.c    **** 	if (State2.numdigit < 4)
 1146              		.loc 1 1652 16 view .LVU366
 1147 0010 0844     		add	r0, r0, r1
 1148 0012 80B2     		uxth	r0, r0
1653:src/keys.c    **** 		return STATE_UNFINISHED;
 1149              		.loc 1 1653 5 view .LVU367
 1150 0014 032B     		cmp	r3, #3
1652:src/keys.c    **** 	if (State2.numdigit < 4)
 1151              		.loc 1 1652 40 view .LVU368
 1152 0016 D372     		strb	r3, [r2, #11]
1652:src/keys.c    **** 	if (State2.numdigit < 4)
 1153              		.loc 1 1652 16 view .LVU369
 1154 0018 1081     		strh	r0, [r2, #8]	@ movhi
1653:src/keys.c    **** 		return STATE_UNFINISHED;
 1155              		.loc 1 1653 2 is_stmt 1 view .LVU370
1653:src/keys.c    **** 		return STATE_UNFINISHED;
 1156              		.loc 1 1653 5 is_stmt 0 view .LVU371
 1157 001a 03D9     		bls	.L109
1655:src/keys.c    **** }
 1158              		.loc 1 1655 2 is_stmt 1 view .LVU372
1656:src/keys.c    **** 
 1159              		.loc 1 1656 1 is_stmt 0 view .LVU373
 1160 001c 5DF8044B 		ldr	r4, [sp], #4
 1161              		.cfi_remember_state
 1162              		.cfi_restore 4
 1163              		.cfi_def_cfa_offset 0
1655:src/keys.c    **** }
 1164              		.loc 1 1655 9 view .LVU374
 1165 0020 FFF7FEBF 		b	arg_eval
ARM GAS  /tmp/cciIzcMf.s 			page 71


 1166              	.LVL87:
 1167              	.L109:
 1168              		.cfi_restore_state
1656:src/keys.c    **** 
 1169              		.loc 1 1656 1 view .LVU375
 1170 0024 3320     		movs	r0, #51
 1171 0026 5DF8044B 		ldr	r4, [sp], #4
 1172              		.cfi_restore 4
 1173              		.cfi_def_cfa_offset 0
 1174 002a 7047     		bx	lr
 1175              	.L112:
 1176              		.align	2
 1177              	.L111:
 1178 002c 00000000 		.word	StateWhileOn
 1179              		.cfi_endproc
 1180              	.LFE36:
 1182              		.section	.text.arg_digit,"ax",%progbits
 1183              		.align	1
 1184              		.p2align 2,,3
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1188              		.fpu fpv4-sp-d16
 1190              	arg_digit:
 1191              	.LVL88:
 1192              	.LFB31:
1539:src/keys.c    **** 	int lim;
 1193              		.loc 1 1539 29 is_stmt 1 view -0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
1540:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1197              		.loc 1 1540 2 view .LVU377
1545:src/keys.c    **** #endif
 1198              		.loc 1 1545 2 view .LVU378
1539:src/keys.c    **** 	int lim;
 1199              		.loc 1 1539 29 is_stmt 0 view .LVU379
 1200 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1201              		.cfi_def_cfa_offset 24
 1202              		.cfi_offset 3, -24
 1203              		.cfi_offset 4, -20
 1204              		.cfi_offset 5, -16
 1205              		.cfi_offset 6, -12
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
1545:src/keys.c    **** #endif
 1208              		.loc 1 1545 28 view .LVU380
 1209 0002 314C     		ldr	r4, .L138
1548:src/keys.c    **** 	
 1210              		.loc 1 1548 34 view .LVU381
 1211 0004 314A     		ldr	r2, .L138+4
1545:src/keys.c    **** #endif
 1212              		.loc 1 1545 28 view .LVU382
 1213 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1214              	.LVL89:
1547:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1215              		.loc 1 1547 2 is_stmt 1 view .LVU383
ARM GAS  /tmp/cciIzcMf.s 			page 72


1547:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1216              		.loc 1 1547 33 is_stmt 0 view .LVU384
 1217 0008 2389     		ldrh	r3, [r4, #8]
1548:src/keys.c    **** 	
 1218              		.loc 1 1548 34 view .LVU385
 1219 000a 02EB0712 		add	r2, r2, r7, lsl #4
1547:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1220              		.loc 1 1547 41 view .LVU386
 1221 000e 03EB8303 		add	r3, r3, r3, lsl #2
1548:src/keys.c    **** 	
 1222              		.loc 1 1548 34 view .LVU387
 1223 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
1548:src/keys.c    **** 	
 1224              		.loc 1 1548 39 view .LVU388
 1225 0014 8E07     		lsls	r6, r1, #30
1547:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1226              		.loc 1 1547 46 view .LVU389
 1227 0016 00EB4305 		add	r5, r0, r3, lsl #1
 1228              	.LVL90:
1548:src/keys.c    **** 	
 1229              		.loc 1 1548 2 is_stmt 1 view .LVU390
1548:src/keys.c    **** 	
 1230              		.loc 1 1548 39 is_stmt 0 view .LVU391
 1231 001a C1F34000 		ubfx	r0, r1, #1, #1
 1232              	.LVL91:
1548:src/keys.c    **** 	
 1233              		.loc 1 1548 39 view .LVU392
 1234 001e 32D5     		bpl	.L114
 1235              	.LVL92:
1550:src/keys.c    **** 		// Handle local registers and flags
 1236              		.loc 1 1550 2 is_stmt 1 view .LVU393
1550:src/keys.c    **** 		// Handle local registers and flags
 1237              		.loc 1 1550 6 is_stmt 0 view .LVU394
 1238 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1550:src/keys.c    **** 		// Handle local registers and flags
 1239              		.loc 1 1550 5 view .LVU395
 1240 0022 D907     		lsls	r1, r3, #31
 1241 0024 28D5     		bpl	.L116
 1242              	.L127:
1548:src/keys.c    **** 	
 1243              		.loc 1 1548 39 view .LVU396
 1244 0026 0120     		movs	r0, #1
 1245              	.LVL93:
 1246              	.L115:
1552:src/keys.c    **** 		if (State2.runmode) {
 1247              		.loc 1 1552 3 is_stmt 1 view .LVU397
1553:src/keys.c    **** 			if (LocalRegs == 0)
 1248              		.loc 1 1553 3 view .LVU398
1553:src/keys.c    **** 			if (LocalRegs == 0)
 1249              		.loc 1 1553 6 is_stmt 0 view .LVU399
 1250 0028 5A06     		lsls	r2, r3, #25
 1251 002a 3BD5     		bpl	.L129
1554:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1252              		.loc 1 1554 4 is_stmt 1 view .LVU400
1554:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1253              		.loc 1 1554 8 is_stmt 0 view .LVU401
 1254 002c 284B     		ldr	r3, .L138+8
ARM GAS  /tmp/cciIzcMf.s 			page 73


 1255 002e 1B68     		ldr	r3, [r3]
1554:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1256              		.loc 1 1554 7 view .LVU402
 1257 0030 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1258 0034 2BB3     		cbz	r3, .L122
1556:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1259              		.loc 1 1556 4 is_stmt 1 view .LVU403
1556:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1260              		.loc 1 1556 7 is_stmt 0 view .LVU404
 1261 0036 A8B3     		cbz	r0, .L129
1557:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1262              		.loc 1 1557 5 is_stmt 1 view .LVU405
1557:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1263              		.loc 1 1557 11 is_stmt 0 view .LVU406
 1264 0038 3846     		mov	r0, r7
 1265 003a FFF7FEFF 		bl	local_regs_rarg
 1266              	.LVL94:
1558:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1267              		.loc 1 1558 5 is_stmt 1 view .LVU407
1557:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1268              		.loc 1 1557 9 is_stmt 0 view .LVU408
 1269 003e 0138     		subs	r0, r0, #1
 1270              	.LVL95:
1557:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1271              		.loc 1 1557 9 view .LVU409
 1272 0040 0F28     		cmp	r0, #15
 1273 0042 A8BF     		it	ge
 1274 0044 0F20     		movge	r0, #15
 1275              	.LVL96:
 1276              	.L119:
1570:src/keys.c    **** 		return STATE_UNFINISHED;
 1277              		.loc 1 1570 2 is_stmt 1 view .LVU410
1570:src/keys.c    **** 		return STATE_UNFINISHED;
 1278              		.loc 1 1570 5 is_stmt 0 view .LVU411
 1279 0046 8542     		cmp	r5, r0
 1280 0048 1BDC     		bgt	.L122
 1281              	.L136:
1573:src/keys.c    **** 	++State2.numdigit;
 1282              		.loc 1 1573 2 is_stmt 1 view .LVU412
1574:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1574 2 is_stmt 0 view .LVU413
 1284 004a E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1573:src/keys.c    **** 	++State2.numdigit;
 1285              		.loc 1 1573 16 view .LVU414
 1286 004c 2581     		strh	r5, [r4, #8]	@ movhi
1574:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1287              		.loc 1 1574 2 is_stmt 1 view .LVU415
 1288 004e 0136     		adds	r6, r6, #1
1575:src/keys.c    **** 		int result = arg_eval(val);
 1289              		.loc 1 1575 16 is_stmt 0 view .LVU416
 1290 0050 05EB8503 		add	r3, r5, r5, lsl #2
1574:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1291              		.loc 1 1574 2 view .LVU417
 1292 0054 F6B2     		uxtb	r6, r6
1575:src/keys.c    **** 		int result = arg_eval(val);
 1293              		.loc 1 1575 5 view .LVU418
 1294 0056 B0EB430F 		cmp	r0, r3, lsl #1
ARM GAS  /tmp/cciIzcMf.s 			page 74


1574:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1295              		.loc 1 1574 2 view .LVU419
 1296 005a E672     		strb	r6, [r4, #11]
1575:src/keys.c    **** 		int result = arg_eval(val);
 1297              		.loc 1 1575 2 is_stmt 1 view .LVU420
1575:src/keys.c    **** 		int result = arg_eval(val);
 1298              		.loc 1 1575 5 is_stmt 0 view .LVU421
 1299 005c 04DB     		blt	.L125
1575:src/keys.c    **** 		int result = arg_eval(val);
 1300              		.loc 1 1575 49 discriminator 1 view .LVU422
 1301 005e 3846     		mov	r0, r7
 1302              	.LVL97:
1575:src/keys.c    **** 		int result = arg_eval(val);
 1303              		.loc 1 1575 49 discriminator 1 view .LVU423
 1304 0060 FFF7FEFF 		bl	num_arg_digits
 1305              	.LVL98:
1575:src/keys.c    **** 		int result = arg_eval(val);
 1306              		.loc 1 1575 27 discriminator 1 view .LVU424
 1307 0064 8642     		cmp	r6, r0
 1308 0066 0CDB     		blt	.L122
 1309              	.L125:
 1310              	.LBB262:
1576:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1311              		.loc 1 1576 3 is_stmt 1 view .LVU425
1576:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1312              		.loc 1 1576 16 is_stmt 0 view .LVU426
 1313 0068 2846     		mov	r0, r5
 1314 006a FFF7FEFF 		bl	arg_eval
 1315              	.LVL99:
1577:src/keys.c    **** 			--State2.numdigit;
 1316              		.loc 1 1577 3 is_stmt 1 view .LVU427
1577:src/keys.c    **** 			--State2.numdigit;
 1317              		.loc 1 1577 6 is_stmt 0 view .LVU428
 1318 006e 3328     		cmp	r0, #51
 1319 0070 1AD0     		beq	.L134
 1320              	.LBE262:
1584:src/keys.c    **** 
 1321              		.loc 1 1584 1 view .LVU429
 1322 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1323              	.LVL100:
 1324              	.L137:
1550:src/keys.c    **** 		// Handle local registers and flags
 1325              		.loc 1 1550 2 is_stmt 1 view .LVU430
1550:src/keys.c    **** 		// Handle local registers and flags
 1326              		.loc 1 1550 5 is_stmt 0 view .LVU431
 1327 0074 DA07     		lsls	r2, r3, #31
 1328 0076 D6D4     		bmi	.L127
 1329              	.L116:
1564:src/keys.c    **** 	else {
 1330              		.loc 1 1564 3 is_stmt 1 view .LVU432
1564:src/keys.c    **** 	else {
 1331              		.loc 1 1564 65 is_stmt 0 view .LVU433
 1332 0078 5B06     		lsls	r3, r3, #25
 1333 007a 1FD4     		bmi	.L135
 1334 007c 6320     		movs	r0, #99
 1335              	.LVL101:
1570:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/cciIzcMf.s 			page 75


 1336              		.loc 1 1570 2 is_stmt 1 view .LVU434
1570:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1570 5 is_stmt 0 view .LVU435
 1338 007e 8542     		cmp	r5, r0
 1339 0080 E3DD     		ble	.L136
 1340              	.LVL102:
 1341              	.L122:
1555:src/keys.c    **** 			if (is_reg) {
 1342              		.loc 1 1555 12 view .LVU436
 1343 0082 3320     		movs	r0, #51
1584:src/keys.c    **** 
 1344              		.loc 1 1584 1 view .LVU437
 1345 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1346              	.LVL103:
 1347              	.L114:
1548:src/keys.c    **** 	
 1348              		.loc 1 1548 39 discriminator 2 view .LVU438
 1349 0086 94F91530 		ldrsb	r3, [r4, #21]
 1350 008a 002B     		cmp	r3, #0
1550:src/keys.c    **** 		// Handle local registers and flags
 1351              		.loc 1 1550 6 discriminator 2 view .LVU439
 1352 008c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1548:src/keys.c    **** 	
 1353              		.loc 1 1548 39 discriminator 2 view .LVU440
 1354 008e F1DB     		blt	.L137
 1355              	.LVL104:
1550:src/keys.c    **** 		// Handle local registers and flags
 1356              		.loc 1 1550 2 is_stmt 1 view .LVU441
1550:src/keys.c    **** 		// Handle local registers and flags
 1357              		.loc 1 1550 5 is_stmt 0 view .LVU442
 1358 0090 DE07     		lsls	r6, r3, #31
 1359 0092 C9D4     		bmi	.L115
1563:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1360              		.loc 1 1563 7 is_stmt 1 view .LVU443
1566:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1361              		.loc 1 1566 3 view .LVU444
1566:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1362              		.loc 1 1566 7 is_stmt 0 view .LVU445
 1363 0094 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1364              	.LVL105:
1567:src/keys.c    **** 			lim = RARG_IND - 1;
 1365              		.loc 1 1567 3 is_stmt 1 view .LVU446
1567:src/keys.c    **** 			lim = RARG_IND - 1;
 1366              		.loc 1 1567 6 is_stmt 0 view .LVU447
 1367 0096 7F28     		cmp	r0, #127
 1368 0098 D5DD     		ble	.L119
1568:src/keys.c    **** 	}
 1369              		.loc 1 1568 8 discriminator 1 view .LVU448
 1370 009a 11F0010F 		tst	r1, #1
 1371 009e 18BF     		it	ne
 1372 00a0 7F20     		movne	r0, #127
 1373              	.LVL106:
1568:src/keys.c    **** 	}
 1374              		.loc 1 1568 8 discriminator 1 view .LVU449
 1375 00a2 D0E7     		b	.L119
 1376              	.LVL107:
 1377              	.L129:
ARM GAS  /tmp/cciIzcMf.s 			page 76


1552:src/keys.c    **** 		if (State2.runmode) {
 1378              		.loc 1 1552 7 view .LVU450
 1379 00a4 0F20     		movs	r0, #15
 1380 00a6 CEE7     		b	.L119
 1381              	.LVL108:
 1382              	.L134:
 1383              	.LBB263:
1578:src/keys.c    **** 			State2.digval /= 10;
 1384              		.loc 1 1578 4 is_stmt 1 view .LVU451
1579:src/keys.c    **** 		}
 1385              		.loc 1 1579 18 is_stmt 0 view .LVU452
 1386 00a8 2389     		ldrh	r3, [r4, #8]
 1387 00aa 0A49     		ldr	r1, .L138+12
1578:src/keys.c    **** 			State2.digval /= 10;
 1388              		.loc 1 1578 4 view .LVU453
 1389 00ac E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
1579:src/keys.c    **** 		}
 1390              		.loc 1 1579 18 view .LVU454
 1391 00ae A1FB0313 		umull	r1, r3, r1, r3
 1392 00b2 DB08     		lsrs	r3, r3, #3
1578:src/keys.c    **** 			State2.digval /= 10;
 1393              		.loc 1 1578 4 view .LVU455
 1394 00b4 013A     		subs	r2, r2, #1
1579:src/keys.c    **** 		}
 1395              		.loc 1 1579 18 view .LVU456
 1396 00b6 2381     		strh	r3, [r4, #8]	@ movhi
1578:src/keys.c    **** 			State2.digval /= 10;
 1397              		.loc 1 1578 4 view .LVU457
 1398 00b8 E272     		strb	r2, [r4, #11]
1579:src/keys.c    **** 		}
 1399              		.loc 1 1579 4 is_stmt 1 view .LVU458
 1400              	.LBE263:
1584:src/keys.c    **** 
 1401              		.loc 1 1584 1 is_stmt 0 view .LVU459
 1402 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1403              	.LVL109:
 1404              	.L135:
1564:src/keys.c    **** 	else {
 1405              		.loc 1 1564 26 discriminator 1 view .LVU460
 1406 00bc 3846     		mov	r0, r7
 1407 00be FFF7FEFF 		bl	global_regs_rarg
 1408              	.LVL110:
1564:src/keys.c    **** 	else {
 1409              		.loc 1 1564 61 discriminator 1 view .LVU461
 1410 00c2 0138     		subs	r0, r0, #1
 1411 00c4 BFE7     		b	.L119
 1412              	.L139:
 1413 00c6 00BF     		.align	2
 1414              	.L138:
 1415 00c8 00000000 		.word	StateWhileOn
 1416 00cc 00000000 		.word	argcmds
 1417 00d0 00000000 		.word	main_ram
 1418 00d4 CDCCCCCC 		.word	-858993459
 1419              		.cfi_endproc
 1420              	.LFE31:
 1422              		.section	.text.intltr,"ax",%progbits
 1423              		.align	1
ARM GAS  /tmp/cciIzcMf.s 			page 77


 1424              		.p2align 2,,3
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu fpv4-sp-d16
 1430              	intltr:
 1431              	.LVL111:
 1432              	.LFB18:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1433              		.loc 1 666 26 is_stmt 1 view -0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 667:src/keys.c    **** }
 1437              		.loc 1 667 2 view .LVU463
 667:src/keys.c    **** }
 1438              		.loc 1 667 10 is_stmt 0 view .LVU464
 1439 0000 0B4B     		ldr	r3, .L149
 1440 0002 1B68     		ldr	r3, [r3]
 1441 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1442              		.loc 1 667 22 view .LVU465
 1443 0008 13F00103 		ands	r3, r3, #1
 1444 000c 05D0     		beq	.L142
 667:src/keys.c    **** }
 1445              		.loc 1 667 26 discriminator 1 view .LVU466
 1446 000e 094B     		ldr	r3, .L149+4
 1447 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1448              		.loc 1 667 22 discriminator 1 view .LVU467
 1449 0012 5B06     		lsls	r3, r3, #25
 1450 0014 03D4     		bmi	.L148
 667:src/keys.c    **** }
 1451              		.loc 1 667 22 view .LVU468
 1452 0016 0120     		movs	r0, #1
 1453              	.LVL112:
 668:src/keys.c    **** 
 1454              		.loc 1 668 1 view .LVU469
 1455 0018 7047     		bx	lr
 1456              	.LVL113:
 1457              	.L142:
 667:src/keys.c    **** }
 1458              		.loc 1 667 22 view .LVU470
 1459 001a 1846     		mov	r0, r3
 1460              	.LVL114:
 667:src/keys.c    **** }
 1461              		.loc 1 667 22 view .LVU471
 1462 001c 7047     		bx	lr
 1463              	.LVL115:
 1464              	.L148:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1465              		.loc 1 666 26 view .LVU472
 1466 001e 10B5     		push	{r4, lr}
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 4, -8
 1469              		.cfi_offset 14, -4
 1470 0020 0446     		mov	r4, r0
ARM GAS  /tmp/cciIzcMf.s 			page 78


 1471              	.LVL116:
 1472              	.LBB266:
 1473              	.LBI266:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1474              		.loc 1 666 12 is_stmt 1 view .LVU473
 1475              	.LBB267:
 667:src/keys.c    **** }
 1476              		.loc 1 667 52 is_stmt 0 view .LVU474
 1477 0022 FFF7FEFF 		bl	int_base
 1478              	.LVL117:
 667:src/keys.c    **** }
 1479              		.loc 1 667 43 view .LVU475
 1480 0026 8442     		cmp	r4, r0
 1481 0028 ACBF     		ite	ge
 1482 002a 0020     		movge	r0, #0
 1483 002c 0120     		movlt	r0, #1
 1484              	.LBE267:
 1485              	.LBE266:
 668:src/keys.c    **** 
 1486              		.loc 1 668 1 view .LVU476
 1487 002e 10BD     		pop	{r4, pc}
 1488              	.LVL118:
 1489              	.L150:
 668:src/keys.c    **** 
 1490              		.loc 1 668 1 view .LVU477
 1491              		.align	2
 1492              	.L149:
 1493 0030 00000000 		.word	main_ram
 1494 0034 00000000 		.word	StateWhileOn
 1495              		.cfi_endproc
 1496              	.LFE18:
 1498              		.section	.text.set_window,"ax",%progbits
 1499              		.align	1
 1500              		.p2align 2,,3
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1504              		.fpu fpv4-sp-d16
 1506              	set_window:
 1507              	.LVL119:
 1508              	.LFB53:
2542:src/keys.c    **** 
2543:src/keys.c    **** 
2544:src/keys.c    **** /*
2545:src/keys.c    ****  *  CAT command
2546:src/keys.c    ****  */
2547:src/keys.c    **** static int process_labellist(const keycode c) {
2548:src/keys.c    **** 	unsigned int pc = State2.digval;
2549:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2550:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2551:src/keys.c    **** 	const int opcode = getprog(pc);
2552:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2553:src/keys.c    **** 	const int direct = State2.runmode;
2554:src/keys.c    **** 	const enum shifts shift = reset_shift();
2555:src/keys.c    **** 	int op = STATE_UNFINISHED;
2556:src/keys.c    **** 
2557:src/keys.c    **** 	if (n < REGION_XROM) {
ARM GAS  /tmp/cciIzcMf.s 			page 79


2558:src/keys.c    **** 		// Digits take you to that segment
2559:src/keys.c    **** 		pc = addrLIB(1, n);
2560:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2561:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2562:src/keys.c    **** 		State2.digval = pc;
2563:src/keys.c    **** 		return STATE_UNFINISHED;
2564:src/keys.c    **** 	}
2565:src/keys.c    **** 
2566:src/keys.c    **** 	switch (c | (shift << 8)) {
2567:src/keys.c    **** 
2568:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2569:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2570:src/keys.c    **** 		goto next;
2571:src/keys.c    **** 
2572:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2573:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2574:src/keys.c    **** 	case K_DOWN:				// Find next label
2575:src/keys.c    **** 	next:
2576:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2577:src/keys.c    **** 		return STATE_UNFINISHED;
2578:src/keys.c    **** 
2579:src/keys.c    **** 	case K_UP:				// Find previous label
2580:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2581:src/keys.c    **** 		return STATE_UNFINISHED;
2582:src/keys.c    **** 
2583:src/keys.c    **** 	case K24:				// <- exits
2584:src/keys.c    **** 		break;
2585:src/keys.c    **** 
2586:src/keys.c    **** 	case K20:				// ENTER^
2587:src/keys.c    **** 	set_pc_and_exit:
2588:src/keys.c    **** 		set_pc(pc);			// forced branch
2589:src/keys.c    **** 		break;
2590:src/keys.c    **** 
2591:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2592:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2593:src/keys.c    **** 		goto set_pc_and_exit;
2594:src/keys.c    **** 
2595:src/keys.c    **** 	case K10:				// STO
2596:src/keys.c    **** 	case K11:				// RCL
2597:src/keys.c    **** 	  //#ifndef DM42	
2598:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2599:src/keys.c    **** 	  //#endif
2600:src/keys.c    **** /* #ifdef DM42 */
2601:src/keys.c    **** /* 	        op = OP_NIL; */
2602:src/keys.c    **** /* #endif	     */
2603:src/keys.c    **** 	  goto set_pc_and_exit;
2604:src/keys.c    **** #ifdef DM42
2605:src/keys.c    **** 	case K05:				// XEQ
2606:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2607:src/keys.c    **** 		goto xeq_or_gto;
2608:src/keys.c    **** 
2609:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2610:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2611:src/keys.c    **** 	xeq_or_gto:
2612:src/keys.c    **** 		if (label)
2613:src/keys.c    **** 			break;
2614:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/cciIzcMf.s 			page 80


2615:src/keys.c    **** #else
2616:src/keys.c    **** 	case K30:				// XEQ
2617:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2618:src/keys.c    **** 		goto xeq_or_gto;
2619:src/keys.c    **** 
2620:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2621:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2622:src/keys.c    **** 	xeq_or_gto:
2623:src/keys.c    **** 		if (label)
2624:src/keys.c    **** 			break;
2625:src/keys.c    **** 		return STATE_UNFINISHED;
2626:src/keys.c    **** #endif		
2627:src/keys.c    **** 	case K63:				// R/S
2628:src/keys.c    **** 		if (direct && label) {
2629:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2630:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2631:src/keys.c    **** 			break;
2632:src/keys.c    **** 		}
2633:src/keys.c    **** 		return STATE_UNFINISHED;
2634:src/keys.c    **** 
2635:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2636:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2637:src/keys.c    **** 		goto set_pc_and_exit;
2638:src/keys.c    **** 
2639:src/keys.c    **** 	default:
2640:src/keys.c    **** 		return STATE_UNFINISHED;
2641:src/keys.c    **** 	}
2642:src/keys.c    **** 	State2.digval = 0;
2643:src/keys.c    **** 	State2.labellist = 0;
2644:src/keys.c    **** 	return check_confirm(op);
2645:src/keys.c    **** }
2646:src/keys.c    **** 
2647:src/keys.c    **** 
2648:src/keys.c    **** static void set_window(int c) {
 1509              		.loc 1 2648 31 is_stmt 1 view -0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 0
 1512              		@ frame_needed = 0, uses_anonymous_args = 0
2649:src/keys.c    **** 
2650:src/keys.c    **** 	if (State2.runmode) {
 1513              		.loc 1 2650 2 view .LVU479
2648:src/keys.c    **** 
 1514              		.loc 1 2648 31 is_stmt 0 view .LVU480
 1515 0000 38B5     		push	{r3, r4, r5, lr}
 1516              		.cfi_def_cfa_offset 16
 1517              		.cfi_offset 3, -16
 1518              		.cfi_offset 4, -12
 1519              		.cfi_offset 5, -8
 1520              		.cfi_offset 14, -4
 1521              		.loc 1 2650 6 view .LVU481
 1522 0002 224C     		ldr	r4, .L166
 1523 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1524              		.loc 1 2650 5 view .LVU482
 1525 0006 5A06     		lsls	r2, r3, #25
 1526 0008 00D4     		bmi	.L163
 1527              	.LVL120:
 1528              	.L151:
ARM GAS  /tmp/cciIzcMf.s 			page 81


2651:src/keys.c    **** 		process_cmdline_set_lift();
2652:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2653:src/keys.c    **** 		State2.disp_freeze = 0;
2654:src/keys.c    **** 		display();	
2655:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2656:src/keys.c    **** 			if (UState.intm) {
2657:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2658:src/keys.c    **** 					State2.window--;
2659:src/keys.c    **** 				return;
2660:src/keys.c    **** 			}
2661:src/keys.c    **** 			else 
2662:src/keys.c    **** 				State2.window = is_dblmode();
2663:src/keys.c    **** 		}
2664:src/keys.c    **** 		else {
2665:src/keys.c    **** 			if (UState.intm) {
2666:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2667:src/keys.c    **** 					State2.window++;
2668:src/keys.c    **** 				return;
2669:src/keys.c    **** 			}
2670:src/keys.c    **** 			else
2671:src/keys.c    **** 				State2.window = 0;
2672:src/keys.c    **** 		}
2673:src/keys.c    **** 		set_smode(SDISP_SHOW);
2674:src/keys.c    **** 	}
2675:src/keys.c    **** }
 1529              		.loc 1 2675 1 view .LVU483
 1530 000a 38BD     		pop	{r3, r4, r5, pc}
 1531              	.LVL121:
 1532              	.L163:
2651:src/keys.c    **** 		process_cmdline_set_lift();
 1533              		.loc 1 2651 3 is_stmt 1 view .LVU484
 1534 000c 0546     		mov	r5, r0
 1535 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1536              	.LVL122:
2653:src/keys.c    **** 		display();	
 1537              		.loc 1 2653 3 view .LVU485
2653:src/keys.c    **** 		display();	
 1538              		.loc 1 2653 22 is_stmt 0 view .LVU486
 1539 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1540 0014 6FF30413 		bfc	r3, #4, #1
 1541 0018 E375     		strb	r3, [r4, #23]
2654:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1542              		.loc 1 2654 3 is_stmt 1 view .LVU487
 1543 001a FFF7FEFF 		bl	display
 1544              	.LVL123:
2655:src/keys.c    **** 			if (UState.intm) {
 1545              		.loc 1 2655 3 view .LVU488
2656:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1546              		.loc 1 2656 8 is_stmt 0 view .LVU489
 1547 001e 1C4B     		ldr	r3, .L166+4
 1548 0020 1B68     		ldr	r3, [r3]
2655:src/keys.c    **** 			if (UState.intm) {
 1549              		.loc 1 2655 6 view .LVU490
 1550 0022 2C2D     		cmp	r5, #44
2656:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1551              		.loc 1 2656 8 view .LVU491
 1552 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
ARM GAS  /tmp/cciIzcMf.s 			page 82


2655:src/keys.c    **** 			if (UState.intm) {
 1553              		.loc 1 2655 6 view .LVU492
 1554 0028 18D0     		beq	.L164
2665:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1555              		.loc 1 2665 4 is_stmt 1 view .LVU493
2665:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1556              		.loc 1 2665 7 is_stmt 0 view .LVU494
 1557 002a 13F00103 		ands	r3, r3, #1
 1558 002e 09D1     		bne	.L165
2671:src/keys.c    **** 		}
 1559              		.loc 1 2671 5 is_stmt 1 view .LVU495
2671:src/keys.c    **** 		}
 1560              		.loc 1 2671 19 is_stmt 0 view .LVU496
 1561 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1562 0032 63F3C502 		bfi	r2, r3, #3, #3
 1563 0036 2275     		strb	r2, [r4, #20]
 1564              	.L157:
2673:src/keys.c    **** 	}
 1565              		.loc 1 2673 3 is_stmt 1 view .LVU497
 1566              	.LVL124:
 1567              	.LBB274:
 1568              	.LBI274:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1569              		.loc 1 646 13 view .LVU498
 1570              	.LBB275:
 647:src/keys.c    **** }
 1571              		.loc 1 647 2 view .LVU499
 647:src/keys.c    **** }
 1572              		.loc 1 647 15 is_stmt 0 view .LVU500
 1573 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1574 003a 013B     		subs	r3, r3, #1
 1575 003c 18BF     		it	ne
 1576 003e 0123     		movne	r3, #1
 1577 0040 6374     		strb	r3, [r4, #17]
 1578              	.LVL125:
 647:src/keys.c    **** }
 1579              		.loc 1 647 15 view .LVU501
 1580              	.LBE275:
 1581              	.LBE274:
 1582              		.loc 1 2675 1 view .LVU502
 1583 0042 38BD     		pop	{r3, r4, r5, pc}
 1584              	.LVL126:
 1585              	.L165:
2666:src/keys.c    **** 					State2.window++;
 1586              		.loc 1 2666 5 is_stmt 1 view .LVU503
2666:src/keys.c    **** 					State2.window++;
 1587              		.loc 1 2666 22 is_stmt 0 view .LVU504
 1588 0044 134A     		ldr	r2, .L166+8
2666:src/keys.c    **** 					State2.window++;
 1589              		.loc 1 2666 42 view .LVU505
 1590 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2666:src/keys.c    **** 					State2.window++;
 1591              		.loc 1 2666 8 view .LVU506
 1592 0048 1168     		ldr	r1, [r2]
2666:src/keys.c    **** 					State2.window++;
 1593              		.loc 1 2666 42 view .LVU507
 1594 004a C3F3C202 		ubfx	r2, r3, #3, #3
ARM GAS  /tmp/cciIzcMf.s 			page 83


2666:src/keys.c    **** 					State2.window++;
 1595              		.loc 1 2666 8 view .LVU508
 1596 004e 8A42     		cmp	r2, r1
 1597 0050 DBDA     		bge	.L151
2667:src/keys.c    **** 				return;
 1598              		.loc 1 2667 6 is_stmt 1 view .LVU509
2667:src/keys.c    **** 				return;
 1599              		.loc 1 2667 19 is_stmt 0 view .LVU510
 1600 0052 0132     		adds	r2, r2, #1
 1601 0054 62F3C503 		bfi	r3, r2, #3, #3
 1602 0058 2375     		strb	r3, [r4, #20]
 1603              		.loc 1 2675 1 view .LVU511
 1604 005a 38BD     		pop	{r3, r4, r5, pc}
 1605              	.LVL127:
 1606              	.L164:
2656:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1607              		.loc 1 2656 4 is_stmt 1 view .LVU512
2656:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1608              		.loc 1 2656 7 is_stmt 0 view .LVU513
 1609 005c DB07     		lsls	r3, r3, #31
 1610 005e 0ED5     		bpl	.L155
 1611              	.LBB276:
 1612              	.LBI276:
2648:src/keys.c    **** 
 1613              		.loc 1 2648 13 is_stmt 1 view .LVU514
 1614              	.LVL128:
 1615              	.LBB277:
2657:src/keys.c    **** 					State2.window--;
 1616              		.loc 1 2657 5 view .LVU515
2657:src/keys.c    **** 					State2.window--;
 1617              		.loc 1 2657 22 is_stmt 0 view .LVU516
 1618 0060 0C4B     		ldr	r3, .L166+8
2657:src/keys.c    **** 					State2.window--;
 1619              		.loc 1 2657 8 view .LVU517
 1620 0062 1B68     		ldr	r3, [r3]
 1621 0064 002B     		cmp	r3, #0
 1622 0066 D0DD     		ble	.L151
2657:src/keys.c    **** 					State2.window--;
 1623              		.loc 1 2657 43 view .LVU518
 1624 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2657:src/keys.c    **** 					State2.window--;
 1625              		.loc 1 2657 26 view .LVU519
 1626 006a 13F0380F 		tst	r3, #56
 1627 006e CCD0     		beq	.L151
2658:src/keys.c    **** 				return;
 1628              		.loc 1 2658 6 is_stmt 1 view .LVU520
2658:src/keys.c    **** 				return;
 1629              		.loc 1 2658 12 is_stmt 0 view .LVU521
 1630 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2658:src/keys.c    **** 				return;
 1631              		.loc 1 2658 19 view .LVU522
 1632 0074 0732     		adds	r2, r2, #7
 1633 0076 62F3C503 		bfi	r3, r2, #3, #3
 1634 007a 2375     		strb	r3, [r4, #20]
 1635              	.LBE277:
 1636              	.LBE276:
 1637              		.loc 1 2675 1 view .LVU523
ARM GAS  /tmp/cciIzcMf.s 			page 84


 1638 007c 38BD     		pop	{r3, r4, r5, pc}
 1639              	.LVL129:
 1640              	.L155:
2662:src/keys.c    **** 		}
 1641              		.loc 1 2662 5 is_stmt 1 view .LVU524
2662:src/keys.c    **** 		}
 1642              		.loc 1 2662 21 is_stmt 0 view .LVU525
 1643 007e FFF7FEFF 		bl	is_dblmode
 1644              	.LVL130:
2662:src/keys.c    **** 		}
 1645              		.loc 1 2662 19 view .LVU526
 1646 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1647 0084 60F3C503 		bfi	r3, r0, #3, #3
 1648 0088 2375     		strb	r3, [r4, #20]
 1649 008a D5E7     		b	.L157
 1650              	.L167:
 1651              		.align	2
 1652              	.L166:
 1653 008c 00000000 		.word	StateWhileOn
 1654 0090 00000000 		.word	main_ram
 1655 0094 00000000 		.word	IntMaxWindow
 1656              		.cfi_endproc
 1657              	.LFE53:
 1659              		.section	.text.arg_storcl,"ax",%progbits
 1660              		.align	1
 1661              		.p2align 2,,3
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv4-sp-d16
 1667              	arg_storcl:
 1668              	.LVL131:
 1669              	.LFB34:
1609:src/keys.c    **** 	unsigned int b = CmdBase;
 1670              		.loc 1 1609 56 is_stmt 1 view -0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674              		@ link register save eliminated.
1610:src/keys.c    **** 
 1675              		.loc 1 1610 2 view .LVU528
1610:src/keys.c    **** 
 1676              		.loc 1 1610 19 is_stmt 0 view .LVU529
 1677 0000 0F4A     		ldr	r2, .L200
 1678 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1679              	.LVL132:
1612:src/keys.c    **** 		CmdBase += n;
 1680              		.loc 1 1612 2 is_stmt 1 view .LVU530
 1681              	.LBB286:
 1682              	.LBI286:
1600:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1683              		.loc 1 1600 12 view .LVU531
 1684              	.LBB287:
1605:src/keys.c    **** #endif
 1685              		.loc 1 1605 2 view .LVU532
1605:src/keys.c    **** #endif
 1686              		.loc 1 1605 41 is_stmt 0 view .LVU533
ARM GAS  /tmp/cciIzcMf.s 			page 85


 1687 0004 032B     		cmp	r3, #3
 1688 0006 14D0     		beq	.L169
1605:src/keys.c    **** #endif
 1689              		.loc 1 1605 24 view .LVU534
 1690 0008 0A2B     		cmp	r3, #10
 1691 000a 12D0     		beq	.L169
 1692              	.LVL133:
 1693              	.LBB288:
 1694              	.LBI288:
1600:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1695              		.loc 1 1600 12 is_stmt 1 view .LVU535
 1696              	.LBB289:
1605:src/keys.c    **** #endif
 1697              		.loc 1 1605 41 is_stmt 0 view .LVU536
 1698 000c 19B1     		cbz	r1, .L170
1605:src/keys.c    **** #endif
 1699              		.loc 1 1605 51 view .LVU537
 1700 000e 152B     		cmp	r3, #21
 1701 0010 0FD0     		beq	.L169
1605:src/keys.c    **** #endif
 1702              		.loc 1 1605 70 view .LVU538
 1703 0012 1A2B     		cmp	r3, #26
 1704 0014 0DD0     		beq	.L169
 1705              	.L170:
 1706              	.LVL134:
1605:src/keys.c    **** #endif
 1707              		.loc 1 1605 70 view .LVU539
 1708              	.LBE289:
 1709              	.LBE288:
 1710              	.LBE287:
 1711              	.LBE286:
1617:src/keys.c    **** 		b -= n;
 1712              		.loc 1 1617 2 is_stmt 1 view .LVU540
1617:src/keys.c    **** 		b -= n;
 1713              		.loc 1 1617 5 is_stmt 0 view .LVU541
 1714 0016 8342     		cmp	r3, r0
 1715 0018 09D3     		bcc	.L175
1618:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1716              		.loc 1 1618 3 is_stmt 1 view .LVU542
1618:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1717              		.loc 1 1618 5 is_stmt 0 view .LVU543
 1718 001a 1B1A     		subs	r3, r3, r0
 1719              	.LVL135:
1619:src/keys.c    **** 			CmdBase = b;
 1720              		.loc 1 1619 3 is_stmt 1 view .LVU544
 1721              	.LBB290:
 1722              	.LBI290:
1600:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1723              		.loc 1 1600 12 view .LVU545
 1724              	.LBB291:
1605:src/keys.c    **** #endif
 1725              		.loc 1 1605 2 view .LVU546
1605:src/keys.c    **** #endif
 1726              		.loc 1 1605 41 is_stmt 0 view .LVU547
 1727 001c 032B     		cmp	r3, #3
 1728 001e 0CD0     		beq	.L173
1605:src/keys.c    **** #endif
ARM GAS  /tmp/cciIzcMf.s 			page 86


 1729              		.loc 1 1605 24 view .LVU548
 1730 0020 0A2B     		cmp	r3, #10
 1731 0022 0AD0     		beq	.L173
 1732              	.LVL136:
 1733              	.LBB292:
 1734              	.LBI292:
1600:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1735              		.loc 1 1600 12 is_stmt 1 view .LVU549
 1736              	.LBB293:
1605:src/keys.c    **** #endif
 1737              		.loc 1 1605 41 is_stmt 0 view .LVU550
 1738 0024 19B1     		cbz	r1, .L175
1605:src/keys.c    **** #endif
 1739              		.loc 1 1605 51 view .LVU551
 1740 0026 152B     		cmp	r3, #21
 1741 0028 07D0     		beq	.L173
1605:src/keys.c    **** #endif
 1742              		.loc 1 1605 70 view .LVU552
 1743 002a 1A2B     		cmp	r3, #26
 1744 002c 05D0     		beq	.L173
 1745              	.LVL137:
 1746              	.L175:
1605:src/keys.c    **** #endif
 1747              		.loc 1 1605 70 view .LVU553
 1748              	.LBE293:
 1749              	.LBE292:
 1750              	.LBE291:
 1751              	.LBE290:
1624:src/keys.c    **** }
 1752              		.loc 1 1624 9 view .LVU554
 1753 002e 0020     		movs	r0, #0
 1754              	.LVL138:
1625:src/keys.c    **** 
 1755              		.loc 1 1625 1 view .LVU555
 1756 0030 7047     		bx	lr
 1757              	.LVL139:
 1758              	.L169:
1613:src/keys.c    **** 		return 1;
 1759              		.loc 1 1613 3 is_stmt 1 view .LVU556
1613:src/keys.c    **** 		return 1;
 1760              		.loc 1 1613 11 is_stmt 0 view .LVU557
 1761 0032 1844     		add	r0, r0, r3
 1762              	.LVL140:
1613:src/keys.c    **** 		return 1;
 1763              		.loc 1 1613 11 view .LVU558
 1764 0034 D077     		strb	r0, [r2, #31]
1614:src/keys.c    **** 	}
 1765              		.loc 1 1614 3 is_stmt 1 view .LVU559
1614:src/keys.c    **** 	}
 1766              		.loc 1 1614 10 is_stmt 0 view .LVU560
 1767 0036 0120     		movs	r0, #1
 1768 0038 7047     		bx	lr
 1769              	.LVL141:
 1770              	.L173:
1620:src/keys.c    **** 			return 1;
 1771              		.loc 1 1620 4 is_stmt 1 view .LVU561
1620:src/keys.c    **** 			return 1;
ARM GAS  /tmp/cciIzcMf.s 			page 87


 1772              		.loc 1 1620 12 is_stmt 0 view .LVU562
 1773 003a D377     		strb	r3, [r2, #31]
1621:src/keys.c    **** 		}
 1774              		.loc 1 1621 4 is_stmt 1 view .LVU563
1621:src/keys.c    **** 		}
 1775              		.loc 1 1621 11 is_stmt 0 view .LVU564
 1776 003c 0120     		movs	r0, #1
 1777              	.LVL142:
1621:src/keys.c    **** 		}
 1778              		.loc 1 1621 11 view .LVU565
 1779 003e 7047     		bx	lr
 1780              	.L201:
 1781              		.align	2
 1782              	.L200:
 1783 0040 00000000 		.word	StateWhileOn
 1784              		.cfi_endproc
 1785              	.LFE34:
 1787              		.section	.text.process_arg,"ax",%progbits
 1788              		.align	1
 1789              		.p2align 2,,3
 1790              		.syntax unified
 1791              		.thumb
 1792              		.thumb_func
 1793              		.fpu fpv4-sp-d16
 1795              	process_arg:
 1796              	.LVL143:
 1797              	.LFB37:
1659:src/keys.c    **** 	unsigned int base = CmdBase;
 1798              		.loc 1 1659 41 is_stmt 1 view -0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 8
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
1660:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1802              		.loc 1 1660 2 view .LVU567
1659:src/keys.c    **** 	unsigned int base = CmdBase;
 1803              		.loc 1 1659 41 is_stmt 0 view .LVU568
 1804 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1805              		.cfi_def_cfa_offset 36
 1806              		.cfi_offset 4, -36
 1807              		.cfi_offset 5, -32
 1808              		.cfi_offset 6, -28
 1809              		.cfi_offset 7, -24
 1810              		.cfi_offset 8, -20
 1811              		.cfi_offset 9, -16
 1812              		.cfi_offset 10, -12
 1813              		.cfi_offset 11, -8
 1814              		.cfi_offset 14, -4
1660:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1815              		.loc 1 1660 22 view .LVU569
 1816 0004 AC4C     		ldr	r4, .L317
1662:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1817              		.loc 1 1662 31 view .LVU570
 1818 0006 DFF8C0B2 		ldr	fp, .L317+16
1660:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1819              		.loc 1 1660 22 view .LVU571
 1820 000a E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1821              	.LVL144:
ARM GAS  /tmp/cciIzcMf.s 			page 88


1661:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1822              		.loc 1 1661 2 is_stmt 1 view .LVU572
 1823              	.LBB315:
 1824              	.LBB316:
 1825              	.LBB317:
 1826              	.LBB318:
 131:src/keys.c    **** }
 1827              		.loc 1 131 23 is_stmt 0 view .LVU573
 1828 000c AB4B     		ldr	r3, .L317+4
 1829              	.LBE318:
 1830              	.LBE317:
 221:src/keys.c    **** }
 1831              		.loc 1 221 28 view .LVU574
 1832 000e AC4A     		ldr	r2, .L317+8
 1833              	.LBB321:
 1834              	.LBB319:
 131:src/keys.c    **** }
 1835              		.loc 1 131 23 view .LVU575
 1836 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1837              	.LBE319:
 1838              	.LBE321:
 1839              	.LBE316:
 1840              	.LBE315:
1662:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1841              		.loc 1 1662 31 view .LVU576
 1842 0012 0BEB0711 		add	r1, fp, r7, lsl #4
1659:src/keys.c    **** 	unsigned int base = CmdBase;
 1843              		.loc 1 1659 41 view .LVU577
 1844 0016 83B0     		sub	sp, sp, #12
 1845              		.cfi_def_cfa_offset 48
1662:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1846              		.loc 1 1662 31 view .LVU578
 1847 0018 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1848              	.LBB325:
 1849              	.LBB323:
 221:src/keys.c    **** }
 1850              		.loc 1 221 28 view .LVU579
 1851 001a 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1852              	.LBE323:
 1853              	.LBE325:
1662:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1854              		.loc 1 1662 31 view .LVU580
 1855 001e C1F38003 		ubfx	r3, r1, #2, #1
 1856 0022 0193     		str	r3, [sp, #4]
1662:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1857              		.loc 1 1662 40 view .LVU581
 1858 0024 4B07     		lsls	r3, r1, #29
 1859 0026 58BF     		it	pl
 1860 0028 94F91580 		ldrsbpl	r8, [r4, #21]
1663:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1861              		.loc 1 1663 20 view .LVU582
 1862 002c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1863 002e 0093     		str	r3, [sp]
1662:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1864              		.loc 1 1662 40 view .LVU583
 1865 0030 54BF     		ite	pl
 1866 0032 4FEAD878 		lsrpl	r8, r8, #31
ARM GAS  /tmp/cciIzcMf.s 			page 89


 1867 0036 4FF00108 		movmi	r8, #1
1659:src/keys.c    **** 	unsigned int base = CmdBase;
 1868              		.loc 1 1659 41 view .LVU584
 1869 003a 0646     		mov	r6, r0
 1870              	.LVL145:
 1871              	.LBB326:
 1872              	.LBI315:
 198:src/keys.c    **** {
 1873              		.loc 1 198 14 is_stmt 1 view .LVU585
 1874              	.LBB324:
 200:src/keys.c    ****     // K00 - K05
 1875              		.loc 1 200 3 view .LVU586
 221:src/keys.c    **** }
 1876              		.loc 1 221 3 view .LVU587
 1877              	.LBB322:
 1878              	.LBI317:
 119:src/keys.c    **** {
 1879              		.loc 1 119 12 view .LVU588
 1880              	.LBB320:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1881              		.loc 1 121 2 view .LVU589
 131:src/keys.c    **** }
 1882              		.loc 1 131 2 view .LVU590
 131:src/keys.c    **** }
 1883              		.loc 1 131 2 is_stmt 0 view .LVU591
 1884              	.LBE320:
 1885              	.LBE322:
 221:src/keys.c    **** }
 1886              		.loc 1 221 10 view .LVU592
 1887 003c 4D46     		mov	r5, r9
 1888              	.LVL146:
 221:src/keys.c    **** }
 1889              		.loc 1 221 10 view .LVU593
 1890              	.LBE324:
 1891              	.LBE326:
1662:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1892              		.loc 1 1662 2 is_stmt 1 view .LVU594
1663:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1893              		.loc 1 1663 2 view .LVU595
1664:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1894              		.loc 1 1664 2 view .LVU596
 1895              	.LBB327:
 1896              	.LBI327:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 1897              		.loc 1 102 13 view .LVU597
 1898              	.LBE327:
 103:src/keys.c    **** }
 1899              		.loc 1 103 2 view .LVU598
 1900              	.LBB342:
 1901              	.LBB328:
 1902              	.LBI328:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 1903              		.loc 1 92 20 view .LVU599
 1904              	.LBB329:
  93:src/keys.c    **** 	State2.shifts = shift;
 1905              		.loc 1 93 2 view .LVU600
 1906              	.LBB330:
ARM GAS  /tmp/cciIzcMf.s 			page 90


 1907              	.LBI330:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 1908              		.loc 1 84 13 view .LVU601
 1909              	.LBB331:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1910              		.loc 1 85 2 view .LVU602
 1911              	.LBE331:
 1912              	.LBE330:
 1913              	.LBE329:
 1914              	.LBE328:
 1915              	.LBE342:
1662:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1916              		.loc 1 1662 31 is_stmt 0 view .LVU603
 1917 003e 4FEA071A 		lsl	r10, r7, #4
 1918              	.LBB343:
 1919              	.LBB338:
 1920              	.LBB334:
 1921              	.LBB333:
 1922              	.LBB332:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1923              		.loc 1 85 18 view .LVU604
 1924 0042 FFF7FEFF 		bl	shift_down
 1925              	.LVL147:
  86:src/keys.c    **** }
 1926              		.loc 1 86 2 is_stmt 1 view .LVU605
  86:src/keys.c    **** }
 1927              		.loc 1 86 52 is_stmt 0 view .LVU606
 1928 0046 00B9     		cbnz	r0, .L204
 1929 0048 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1930              	.LVL148:
 1931              	.L204:
  86:src/keys.c    **** }
 1932              		.loc 1 86 52 view .LVU607
 1933              	.LBE332:
 1934              	.LBE333:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1935              		.loc 1 94 2 is_stmt 1 view .LVU608
 1936              	.LBE334:
 1937              	.LBE338:
 1938              	.LBE343:
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1939              		.loc 1 1665 38 is_stmt 0 view .LVU609
 1940 004a 0BEB0A01 		add	r1, fp, r10
 1941              	.LBB344:
 1942              	.LBB339:
 1943              	.LBB335:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1944              		.loc 1 94 16 view .LVU610
 1945 004e 4FF0000C 		mov	ip, #0
 1946              	.LBE335:
 1947              	.LBE339:
 1948              	.LBE344:
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1949              		.loc 1 1665 38 view .LVU611
 1950 0052 91F805E0 		ldrb	lr, [r1, #5]	@ zero_extendqisi2
 1951              	.LBB345:
 1952              	.LBB340:
ARM GAS  /tmp/cciIzcMf.s 			page 91


 1953              	.LBB336:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1954              		.loc 1 94 16 view .LVU612
 1955 0056 84F810C0 		strb	ip, [r4, #16]
  95:src/keys.c    **** 	return r;
 1956              		.loc 1 95 2 is_stmt 1 view .LVU613
 1957              	.LBE336:
 1958              	.LBE340:
 1959              	.LBE345:
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1960              		.loc 1 1665 61 is_stmt 0 view .LVU614
 1961 005a 1EF0200F 		tst	lr, #32
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1962              		.loc 1 1665 38 view .LVU615
 1963 005e CEF34011 		ubfx	r1, lr, #5, #1
 1964              	.LBB346:
 1965              	.LBB341:
 1966              	.LBB337:
  95:src/keys.c    **** 	return r;
 1967              		.loc 1 95 19 view .LVU616
 1968 0062 84F80DC0 		strb	ip, [r4, #13]
  96:src/keys.c    **** }
 1969              		.loc 1 96 2 is_stmt 1 view .LVU617
 1970              	.LVL149:
  96:src/keys.c    **** }
 1971              		.loc 1 96 2 is_stmt 0 view .LVU618
 1972              	.LBE337:
 1973              	.LBE341:
 1974              	.LBE346:
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1975              		.loc 1 1665 2 is_stmt 1 view .LVU619
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1976              		.loc 1 1665 61 is_stmt 0 view .LVU620
 1977 0066 47D0     		beq	.L205
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1978              		.loc 1 1665 61 discriminator 1 view .LVU621
 1979 0068 94F815E0 		ldrb	lr, [r4, #21]	@ zero_extendqisi2
 1980 006c 1EF0C00F 		tst	lr, #192
 1981 0070 57D1     		bne	.L206
 1982              	.LVL150:
1666:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1983              		.loc 1 1666 2 is_stmt 1 view .LVU622
1666:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1984              		.loc 1 1666 35 is_stmt 0 view .LVU623
 1985 0072 292E     		cmp	r6, #41
 1986 0074 7DD0     		beq	.L207
1667:src/keys.c    **** 
 1987              		.loc 1 1667 11 view .LVU624
 1988 0076 0128     		cmp	r0, #1
 1989 0078 00F09280 		beq	.L208
1667:src/keys.c    **** 
 1990              		.loc 1 1667 32 discriminator 3 view .LVU625
 1991 007c B9F1090F 		cmp	r9, #9
 1992 0080 00F28B80 		bhi	.L209
 1993              	.LVL151:
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 1994              		.loc 1 1669 2 is_stmt 1 view .LVU626
ARM GAS  /tmp/cciIzcMf.s 			page 92


1670:src/keys.c    **** 		reset_arg();
 1995              		.loc 1 1670 2 view .LVU627
1670:src/keys.c    **** 		reset_arg();
 1996              		.loc 1 1670 5 is_stmt 0 view .LVU628
 1997 0084 8C2F     		cmp	r7, #140
 1998 0086 50D8     		bhi	.L266
1675:src/keys.c    **** 	  switch (n) {
 1999              		.loc 1 1675 35 view .LVU629
 2000 0088 6069     		ldr	r0, [r4, #20]
 2001              	.LVL152:
1675:src/keys.c    **** 	  switch (n) {
 2002              		.loc 1 1675 35 view .LVU630
 2003 008a 10F4103F 		tst	r0, #147456
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2004              		.loc 1 1665 61 view .LVU631
 2005 008e 4FF0010C 		mov	ip, #1
1675:src/keys.c    **** 	  switch (n) {
 2006              		.loc 1 1675 35 view .LVU632
 2007 0092 7BD0     		beq	.L270
 2008              	.LVL153:
 2009              	.L217:
1698:src/keys.c    **** 		// row column shorthand addressing
 2010              		.loc 1 1698 2 is_stmt 1 view .LVU633
1723:src/keys.c    **** 	case K_F:
 2011              		.loc 1 1723 2 view .LVU634
 2012 0094 2D2E     		cmp	r6, #45
 2013 0096 4AD8     		bhi	.L304
 2014 0098 DFE816F0 		tbh	[pc, r6, lsl #1]
 2015              	.L268:
 2016 009c 4D00     		.2byte	(.L232-.L268)/2
 2017 009e 4D00     		.2byte	(.L232-.L268)/2
 2018 00a0 4D00     		.2byte	(.L232-.L268)/2
 2019 00a2 4D00     		.2byte	(.L232-.L268)/2
 2020 00a4 4900     		.2byte	(.L304-.L268)/2
 2021 00a6 4900     		.2byte	(.L304-.L268)/2
 2022 00a8 4900     		.2byte	(.L304-.L268)/2
 2023 00aa 4900     		.2byte	(.L304-.L268)/2
 2024 00ac 4D00     		.2byte	(.L232-.L268)/2
 2025 00ae 4D00     		.2byte	(.L232-.L268)/2
 2026 00b0 4D00     		.2byte	(.L232-.L268)/2
 2027 00b2 4D00     		.2byte	(.L232-.L268)/2
 2028 00b4 D700     		.2byte	(.L255-.L268)/2
 2029 00b6 4900     		.2byte	(.L304-.L268)/2
 2030 00b8 4900     		.2byte	(.L304-.L268)/2
 2031 00ba 4900     		.2byte	(.L304-.L268)/2
 2032 00bc 6901     		.2byte	(.L262-.L268)/2
 2033 00be 4900     		.2byte	(.L304-.L268)/2
 2034 00c0 DD00     		.2byte	(.L253-.L268)/2
 2035 00c2 4900     		.2byte	(.L304-.L268)/2
 2036 00c4 4900     		.2byte	(.L304-.L268)/2
 2037 00c6 4900     		.2byte	(.L304-.L268)/2
 2038 00c8 6301     		.2byte	(.L252-.L268)/2
 2039 00ca 4900     		.2byte	(.L304-.L268)/2
 2040 00cc 5701     		.2byte	(.L254-.L268)/2
 2041 00ce 5D01     		.2byte	(.L231-.L268)/2
 2042 00d0 4900     		.2byte	(.L304-.L268)/2
 2043 00d2 4900     		.2byte	(.L304-.L268)/2
ARM GAS  /tmp/cciIzcMf.s 			page 93


 2044 00d4 9800     		.2byte	(.L249-.L268)/2
 2045 00d6 4900     		.2byte	(.L304-.L268)/2
 2046 00d8 4900     		.2byte	(.L304-.L268)/2
 2047 00da 4101     		.2byte	(.L233-.L268)/2
 2048 00dc 4B01     		.2byte	(.L234-.L268)/2
 2049 00de 5101     		.2byte	(.L235-.L268)/2
 2050 00e0 E300     		.2byte	(.L246-.L268)/2
 2051 00e2 4900     		.2byte	(.L304-.L268)/2
 2052 00e4 4700     		.2byte	(.L266-.L268)/2
 2053 00e6 4900     		.2byte	(.L304-.L268)/2
 2054 00e8 EF00     		.2byte	(.L239-.L268)/2
 2055 00ea 4900     		.2byte	(.L304-.L268)/2
 2056 00ec 1801     		.2byte	(.L243-.L268)/2
 2057 00ee B000     		.2byte	(.L225-.L268)/2
 2058 00f0 4900     		.2byte	(.L304-.L268)/2
 2059 00f2 4900     		.2byte	(.L304-.L268)/2
 2060 00f4 2701     		.2byte	(.L227-.L268)/2
 2061 00f6 C800     		.2byte	(.L229-.L268)/2
 2062              	.LVL154:
 2063              		.p2align 1
 2064              	.L205:
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 2065              		.loc 1 1669 2 view .LVU635
1670:src/keys.c    **** 		reset_arg();
 2066              		.loc 1 1670 5 is_stmt 0 view .LVU636
 2067 00f8 8C2F     		cmp	r7, #140
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 2068              		.loc 1 1669 4 view .LVU637
 2069 00fa 29F08005 		bic	r5, r9, #128
 2070              	.LVL155:
1670:src/keys.c    **** 		reset_arg();
 2071              		.loc 1 1670 2 is_stmt 1 view .LVU638
1670:src/keys.c    **** 		reset_arg();
 2072              		.loc 1 1670 5 is_stmt 0 view .LVU639
 2073 00fe 14D8     		bhi	.L266
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2074              		.loc 1 1665 61 view .LVU640
 2075 0100 8C46     		mov	ip, r1
 2076              	.L214:
1675:src/keys.c    **** 	  switch (n) {
 2077              		.loc 1 1675 35 discriminator 1 view .LVU641
 2078 0102 6069     		ldr	r0, [r4, #20]
 2079              	.LVL156:
1675:src/keys.c    **** 	  switch (n) {
 2080              		.loc 1 1675 35 discriminator 1 view .LVU642
 2081 0104 10F4103F 		tst	r0, #147456
 2082 0108 C4D1     		bne	.L217
1676:src/keys.c    **** 	  case regX_idx:
 2083              		.loc 1 1676 4 is_stmt 1 view .LVU643
 2084 010a 672D     		cmp	r5, #103
 2085 010c C2D8     		bhi	.L217
 2086              	.LVL157:
 2087              	.L269:
1676:src/keys.c    **** 	  case regX_idx:
 2088              		.loc 1 1676 4 is_stmt 0 view .LVU644
 2089 010e 632D     		cmp	r5, #99
 2090 0110 3CD9     		bls	.L270
ARM GAS  /tmp/cciIzcMf.s 			page 94


 2091 0112 653D     		subs	r5, r5, #101
 2092 0114 022D     		cmp	r5, #2
 2093 0116 00F2AA81 		bhi	.L220
 2094 011a DFE805F0 		tbb	[pc, r5]
 2095              	.L222:
 2096 011e 6B       		.byte	(.L224-.L222)/2
 2097 011f 65       		.byte	(.L223-.L222)/2
 2098 0120 6D       		.byte	(.L221-.L222)/2
 2099              	.LVL158:
 2100 0121 00       		.p2align 1
 2101              	.L206:
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 2102              		.loc 1 1669 2 is_stmt 1 view .LVU645
1670:src/keys.c    **** 		reset_arg();
 2103              		.loc 1 1670 5 is_stmt 0 view .LVU646
 2104 0122 8C2F     		cmp	r7, #140
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 2105              		.loc 1 1669 4 view .LVU647
 2106 0124 29F08005 		bic	r5, r9, #128
 2107              	.LVL159:
1670:src/keys.c    **** 		reset_arg();
 2108              		.loc 1 1670 2 is_stmt 1 view .LVU648
1670:src/keys.c    **** 		reset_arg();
 2109              		.loc 1 1670 5 is_stmt 0 view .LVU649
 2110 0128 EBD9     		bls	.L214
 2111              	.LVL160:
 2112              	.L266:
1890:src/keys.c    **** 	default:
 2113              		.loc 1 1890 3 is_stmt 1 view .LVU650
 2114 012a FFF7FEFF 		bl	reset_arg
 2115              	.LVL161:
 2116              	.L304:
1894:src/keys.c    **** }
 2117              		.loc 1 1894 9 is_stmt 0 view .LVU651
 2118 012e 3320     		movs	r0, #51
 2119              	.L202:
1895:src/keys.c    **** 
 2120              		.loc 1 1895 1 view .LVU652
 2121 0130 03B0     		add	sp, sp, #12
 2122              		.cfi_remember_state
 2123              		.cfi_def_cfa_offset 36
 2124              	.LVL162:
1895:src/keys.c    **** 
 2125              		.loc 1 1895 1 view .LVU653
 2126              		@ sp needed
 2127 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2128              	.LVL163:
 2129              	.L232:
 2130              		.cfi_restore_state
1778:src/keys.c    **** 			return arg_eval(n);
 2131              		.loc 1 1778 4 is_stmt 1 view .LVU654
1778:src/keys.c    **** 			return arg_eval(n);
 2132              		.loc 1 1778 8 is_stmt 0 view .LVU655
 2133 0136 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1778:src/keys.c    **** 			return arg_eval(n);
 2134              		.loc 1 1778 7 view .LVU656
 2135 0138 5F06     		lsls	r7, r3, #25
ARM GAS  /tmp/cciIzcMf.s 			page 95


 2136              	.LVL164:
1778:src/keys.c    **** 			return arg_eval(n);
 2137              		.loc 1 1778 7 view .LVU657
 2138 013a 53D4     		bmi	.L251
1778:src/keys.c    **** 			return arg_eval(n);
 2139              		.loc 1 1778 19 discriminator 1 view .LVU658
 2140 013c B8F1000F 		cmp	r8, #0
 2141 0140 50D1     		bne	.L251
1780:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2142              		.loc 1 1780 3 is_stmt 1 view .LVU659
1780:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2143              		.loc 1 1780 6 is_stmt 0 view .LVU660
 2144 0142 032E     		cmp	r6, #3
 2145 0144 F3D8     		bhi	.L304
1781:src/keys.c    **** 		break;
 2146              		.loc 1 1781 4 is_stmt 1 view .LVU661
 2147              	.LVL165:
 2148              	.LBB347:
 2149              	.LBI347:
1586:src/keys.c    **** 	const unsigned int b = CmdBase;
 2150              		.loc 1 1586 12 view .LVU662
 2151              	.LBB348:
1587:src/keys.c    **** 
 2152              		.loc 1 1587 2 view .LVU663
1587:src/keys.c    **** 
 2153              		.loc 1 1587 21 is_stmt 0 view .LVU664
 2154 0146 E27F     		ldrb	r2, [r4, #31]	@ zero_extendqisi2
 2155              	.LVL166:
1589:src/keys.c    **** 	{
 2156              		.loc 1 1589 2 is_stmt 1 view .LVU665
1589:src/keys.c    **** 	{
 2157              		.loc 1 1589 16 is_stmt 0 view .LVU666
 2158 0148 0BEB0210 		add	r0, fp, r2, lsl #4
 2159 014c 1101     		lsls	r1, r2, #4
 2160 014e 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1589:src/keys.c    **** 	{
 2161              		.loc 1 1589 5 view .LVU667
 2162 0150 8006     		lsls	r0, r0, #26
 2163 0152 02D4     		bmi	.L238
1589:src/keys.c    **** 	{
 2164              		.loc 1 1589 40 view .LVU668
 2165 0154 513A     		subs	r2, r2, #81
 2166              	.LVL167:
1589:src/keys.c    **** 	{
 2167              		.loc 1 1589 23 view .LVU669
 2168 0156 0A2A     		cmp	r2, #10
 2169 0158 E9D8     		bhi	.L304
 2170              	.LVL168:
 2171              	.L238:
1591:src/keys.c    **** 			return STATE_UNFINISHED;
 2172              		.loc 1 1591 3 is_stmt 1 view .LVU670
1591:src/keys.c    **** 			return STATE_UNFINISHED;
 2173              		.loc 1 1591 6 is_stmt 0 view .LVU671
 2174 015a 1F06     		lsls	r7, r3, #24
 2175 015c E7D4     		bmi	.L304
1591:src/keys.c    **** 			return STATE_UNFINISHED;
 2176              		.loc 1 1591 18 view .LVU672
ARM GAS  /tmp/cciIzcMf.s 			page 96


 2177 015e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2178 0160 002B     		cmp	r3, #0
 2179 0162 E4D1     		bne	.L304
1593:src/keys.c    **** 			return STATE_UNFINISHED;
 2180              		.loc 1 1593 3 is_stmt 1 view .LVU673
1593:src/keys.c    **** 			return STATE_UNFINISHED;
 2181              		.loc 1 1593 17 is_stmt 0 view .LVU674
 2182 0164 5944     		add	r1, r1, fp
1593:src/keys.c    **** 			return STATE_UNFINISHED;
 2183              		.loc 1 1593 6 view .LVU675
 2184 0166 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2185 0168 632B     		cmp	r3, #99
 2186 016a E0D9     		bls	.L304
1595:src/keys.c    **** 	}
 2187              		.loc 1 1595 3 is_stmt 1 view .LVU676
1595:src/keys.c    **** 	}
 2188              		.loc 1 1595 10 is_stmt 0 view .LVU677
 2189 016c 06F16400 		add	r0, r6, #100
 2190 0170 27E0     		b	.L306
 2191              	.LVL169:
 2192              	.L207:
1595:src/keys.c    **** 	}
 2193              		.loc 1 1595 10 view .LVU678
 2194              	.LBE348:
 2195              	.LBE347:
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 2196              		.loc 1 1669 2 is_stmt 1 view .LVU679
1670:src/keys.c    **** 		reset_arg();
 2197              		.loc 1 1670 2 view .LVU680
1670:src/keys.c    **** 		reset_arg();
 2198              		.loc 1 1670 5 is_stmt 0 view .LVU681
 2199 0172 8C2F     		cmp	r7, #140
 2200 0174 D9D8     		bhi	.L266
1675:src/keys.c    **** 	  switch (n) {
 2201              		.loc 1 1675 35 view .LVU682
 2202 0176 6069     		ldr	r0, [r4, #20]
 2203              	.LVL170:
1675:src/keys.c    **** 	  switch (n) {
 2204              		.loc 1 1675 35 view .LVU683
 2205 0178 10F4103F 		tst	r0, #147456
 2206 017c 41D1     		bne	.L226
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 2207              		.loc 1 1669 4 view .LVU684
 2208 017e 29F08005 		bic	r5, r9, #128
1676:src/keys.c    **** 	  case regX_idx:
 2209              		.loc 1 1676 4 is_stmt 1 view .LVU685
 2210 0182 672D     		cmp	r5, #103
 2211 0184 3DD8     		bhi	.L226
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2212              		.loc 1 1665 61 is_stmt 0 view .LVU686
 2213 0186 4FF0010C 		mov	ip, #1
 2214 018a C0E7     		b	.L269
 2215              	.LVL171:
 2216              	.L270:
1676:src/keys.c    **** 	  case regX_idx:
 2217              		.loc 1 1676 4 view .LVU687
 2218 018c 1DB1     		cbz	r5, .L219
ARM GAS  /tmp/cciIzcMf.s 			page 97


 2219 018e 6B1F     		subs	r3, r5, #5
 2220 0190 042B     		cmp	r3, #4
 2221 0192 3FF67FAF 		bhi	.L217
 2222              	.L219:
1691:src/keys.c    **** 	  }
 2223              		.loc 1 1691 6 is_stmt 1 view .LVU688
1691:src/keys.c    **** 	  }
 2224              		.loc 1 1691 13 is_stmt 0 view .LVU689
 2225 0196 2846     		mov	r0, r5
 2226 0198 27E0     		b	.L305
 2227              	.LVL172:
 2228              	.L209:
1667:src/keys.c    **** 
 2229              		.loc 1 1667 42 discriminator 4 view .LVU690
 2230 019a 19F0800F 		tst	r9, #128
 2231 019e 3ED1     		bne	.L212
 2232              	.L208:
 2233              	.LVL173:
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 2234              		.loc 1 1669 2 is_stmt 1 view .LVU691
1670:src/keys.c    **** 		reset_arg();
 2235              		.loc 1 1670 2 view .LVU692
1670:src/keys.c    **** 		reset_arg();
 2236              		.loc 1 1670 5 is_stmt 0 view .LVU693
 2237 01a0 8C2F     		cmp	r7, #140
 2238 01a2 C2D8     		bhi	.L266
1698:src/keys.c    **** 		// row column shorthand addressing
 2239              		.loc 1 1698 2 is_stmt 1 view .LVU694
1700:src/keys.c    **** 
 2240              		.loc 1 1700 3 view .LVU695
 2241              	.LVL174:
 2242              	.LBB349:
 2243              	.LBI349:
 167:src/keys.c    **** {
 2244              		.loc 1 167 5 view .LVU696
 2245              	.LBB350:
 169:src/keys.c    **** }
 2246              		.loc 1 169 2 view .LVU697
 169:src/keys.c    **** }
 2247              		.loc 1 169 18 is_stmt 0 view .LVU698
 2248 01a4 474B     		ldr	r3, .L317+12
 2249 01a6 A3FB0623 		umull	r2, r3, r3, r6
 169:src/keys.c    **** }
 2250              		.loc 1 169 24 view .LVU699
 2251 01aa 03F0FC00 		and	r0, r3, #252
 2252              	.LVL175:
 169:src/keys.c    **** }
 2253              		.loc 1 169 24 view .LVU700
 2254 01ae 00EB9300 		add	r0, r0, r3, lsr #2
 169:src/keys.c    **** }
 2255              		.loc 1 169 18 view .LVU701
 2256 01b2 9B08     		lsrs	r3, r3, #2
 169:src/keys.c    **** }
 2257              		.loc 1 169 24 view .LVU702
 2258 01b4 4000     		lsls	r0, r0, #1
 169:src/keys.c    **** }
 2259              		.loc 1 169 33 view .LVU703
ARM GAS  /tmp/cciIzcMf.s 			page 98


 2260 01b6 03EB4303 		add	r3, r3, r3, lsl #1
 169:src/keys.c    **** }
 2261              		.loc 1 169 12 view .LVU704
 2262 01ba 0B30     		adds	r0, r0, #11
 169:src/keys.c    **** }
 2263              		.loc 1 169 33 view .LVU705
 2264 01bc A6EB4306 		sub	r6, r6, r3, lsl #1
 2265              	.LBE350:
 2266              	.LBE349:
1700:src/keys.c    **** 
 2267              		.loc 1 1700 10 view .LVU706
 2268 01c0 3044     		add	r0, r0, r6
 2269              	.LVL176:
 2270              	.L306:
1895:src/keys.c    **** 
 2271              		.loc 1 1895 1 view .LVU707
 2272 01c2 03B0     		add	sp, sp, #12
 2273              		.cfi_remember_state
 2274              		.cfi_def_cfa_offset 36
 2275              	.LVL177:
1895:src/keys.c    **** 
 2276              		.loc 1 1895 1 view .LVU708
 2277              		@ sp needed
 2278 01c4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2279              		.cfi_restore 14
 2280              		.cfi_restore 11
 2281              		.cfi_restore 10
 2282              		.cfi_restore 9
 2283              		.cfi_restore 8
 2284              		.cfi_restore 7
 2285              		.cfi_restore 6
 2286              		.cfi_restore 5
 2287              		.cfi_restore 4
 2288              		.cfi_def_cfa_offset 0
 2289              	.LVL178:
1700:src/keys.c    **** 
 2290              		.loc 1 1700 10 view .LVU709
 2291 01c8 FFF7FEBF 		b	arg_eval
 2292              	.LVL179:
 2293              	.L249:
 2294              		.cfi_restore_state
1800:src/keys.c    **** 			return arg_eval(n);
 2295              		.loc 1 1800 3 is_stmt 1 view .LVU710
1800:src/keys.c    **** 			return arg_eval(n);
 2296              		.loc 1 1800 7 is_stmt 0 view .LVU711
 2297 01cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1800:src/keys.c    **** 			return arg_eval(n);
 2298              		.loc 1 1800 6 view .LVU712
 2299 01ce 5806     		lsls	r0, r3, #25
 2300 01d0 08D4     		bmi	.L251
1800:src/keys.c    **** 			return arg_eval(n);
 2301              		.loc 1 1800 25 discriminator 1 view .LVU713
 2302 01d2 0121     		movs	r1, #1
 2303 01d4 0320     		movs	r0, #3
 2304 01d6 FFF7FEFF 		bl	arg_storcl
 2305              	.LVL180:
1800:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/cciIzcMf.s 			page 99


 2306              		.loc 1 1800 18 discriminator 1 view .LVU714
 2307 01da 0028     		cmp	r0, #0
 2308 01dc A7D1     		bne	.L304
1800:src/keys.c    **** 			return arg_eval(n);
 2309              		.loc 1 1800 63 discriminator 2 view .LVU715
 2310 01de B8F1000F 		cmp	r8, #0
 2311 01e2 A4D0     		beq	.L304
 2312              	.LVL181:
 2313              	.L251:
1801:src/keys.c    **** 		break;
 2314              		.loc 1 1801 4 is_stmt 1 view .LVU716
1801:src/keys.c    **** 		break;
 2315              		.loc 1 1801 11 is_stmt 0 view .LVU717
 2316 01e4 2846     		mov	r0, r5
 2317 01e6 ECE7     		b	.L306
 2318              	.LVL182:
 2319              	.L223:
1682:src/keys.c    **** 	  case regT_idx:
 2320              		.loc 1 1682 6 is_stmt 1 view .LVU718
1682:src/keys.c    **** 	  case regT_idx:
 2321              		.loc 1 1682 13 is_stmt 0 view .LVU719
 2322 01e8 0320     		movs	r0, #3
 2323              	.L305:
1895:src/keys.c    **** 
 2324              		.loc 1 1895 1 view .LVU720
 2325 01ea 03B0     		add	sp, sp, #12
 2326              		.cfi_remember_state
 2327              		.cfi_def_cfa_offset 36
 2328              	.LVL183:
1895:src/keys.c    **** 
 2329              		.loc 1 1895 1 view .LVU721
 2330              		@ sp needed
 2331 01ec BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2332              		.cfi_restore 14
 2333              		.cfi_restore 11
 2334              		.cfi_restore 10
 2335              		.cfi_restore 9
 2336              		.cfi_restore 8
 2337              		.cfi_restore 7
 2338              		.cfi_restore 6
 2339              		.cfi_restore 5
 2340              		.cfi_restore 4
 2341              		.cfi_def_cfa_offset 0
 2342              	.LVL184:
1680:src/keys.c    **** 	  case regZ_idx:
 2343              		.loc 1 1680 13 view .LVU722
 2344 01f0 FFF7FEBF 		b	arg_digit
 2345              	.LVL185:
 2346              	.L224:
 2347              		.cfi_restore_state
1680:src/keys.c    **** 	  case regZ_idx:
 2348              		.loc 1 1680 6 is_stmt 1 view .LVU723
1680:src/keys.c    **** 	  case regZ_idx:
 2349              		.loc 1 1680 13 is_stmt 0 view .LVU724
 2350 01f4 0220     		movs	r0, #2
 2351 01f6 F8E7     		b	.L305
 2352              	.L221:
ARM GAS  /tmp/cciIzcMf.s 			page 100


1684:src/keys.c    **** 	  case 5:
 2353              		.loc 1 1684 6 is_stmt 1 view .LVU725
1684:src/keys.c    **** 	  case 5:
 2354              		.loc 1 1684 13 is_stmt 0 view .LVU726
 2355 01f8 0420     		movs	r0, #4
 2356 01fa F6E7     		b	.L305
 2357              	.L225:
1725:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2358              		.loc 1 1725 3 is_stmt 1 view .LVU727
1725:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2359              		.loc 1 1725 6 is_stmt 0 view .LVU728
 2360 01fc BCF1000F 		cmp	ip, #0
 2361 0200 95D0     		beq	.L304
 2362              	.L226:
1726:src/keys.c    **** 		break;
 2363              		.loc 1 1726 4 is_stmt 1 view .LVU729
 2364              	.LVL186:
 2365              	.LBB351:
 2366              	.LBI351:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2367              		.loc 1 92 20 view .LVU730
 2368              	.LBB352:
  93:src/keys.c    **** 	State2.shifts = shift;
 2369              		.loc 1 93 2 view .LVU731
 2370              	.LBB353:
 2371              	.LBI353:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2372              		.loc 1 84 13 view .LVU732
 2373              	.LBB354:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2374              		.loc 1 85 2 view .LVU733
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2375              		.loc 1 85 18 is_stmt 0 view .LVU734
 2376 0202 FFF7FEFF 		bl	shift_down
 2377              	.LVL187:
  86:src/keys.c    **** }
 2378              		.loc 1 86 2 is_stmt 1 view .LVU735
 2379              	.LBE354:
 2380              	.LBE353:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2381              		.loc 1 94 2 view .LVU736
 2382              	.LBE352:
 2383              	.LBE351:
1726:src/keys.c    **** 		break;
 2384              		.loc 1 1726 4 is_stmt 0 view .LVU737
 2385 0206 009B     		ldr	r3, [sp]
 2386 0208 B3F10109 		subs	r9, r3, #1
 2387 020c 18BF     		it	ne
 2388 020e 4FF00109 		movne	r9, #1
 2389              	.LBB358:
 2390              	.LBB355:
  95:src/keys.c    **** 	return r;
 2391              		.loc 1 95 19 view .LVU738
 2392 0212 0023     		movs	r3, #0
 2393              	.LBE355:
 2394              	.LBE358:
1726:src/keys.c    **** 		break;
ARM GAS  /tmp/cciIzcMf.s 			page 101


 2395              		.loc 1 1726 4 view .LVU739
 2396 0214 84F81090 		strb	r9, [r4, #16]
 2397              	.LBB359:
 2398              	.LBB356:
  95:src/keys.c    **** 	return r;
 2399              		.loc 1 95 2 is_stmt 1 view .LVU740
  95:src/keys.c    **** 	return r;
 2400              		.loc 1 95 19 is_stmt 0 view .LVU741
 2401 0218 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 2402              		.loc 1 96 2 is_stmt 1 view .LVU742
 2403              	.LBE356:
 2404              	.LBE359:
1894:src/keys.c    **** }
 2405              		.loc 1 1894 9 is_stmt 0 view .LVU743
 2406 021a 3320     		movs	r0, #51
 2407              	.LBB360:
 2408              	.LBB357:
  96:src/keys.c    **** }
 2409              		.loc 1 96 9 view .LVU744
 2410 021c 88E7     		b	.L202
 2411              	.LVL188:
 2412              	.L212:
  96:src/keys.c    **** }
 2413              		.loc 1 96 9 view .LVU745
 2414              	.LBE357:
 2415              	.LBE360:
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 2416              		.loc 1 1669 2 is_stmt 1 view .LVU746
1670:src/keys.c    **** 		reset_arg();
 2417              		.loc 1 1670 5 is_stmt 0 view .LVU747
 2418 021e 8C2F     		cmp	r7, #140
1669:src/keys.c    **** 	if (base >= NUM_RARG) {
 2419              		.loc 1 1669 4 view .LVU748
 2420 0220 29F08005 		bic	r5, r9, #128
 2421              	.LVL189:
1670:src/keys.c    **** 		reset_arg();
 2422              		.loc 1 1670 2 is_stmt 1 view .LVU749
1670:src/keys.c    **** 		reset_arg();
 2423              		.loc 1 1670 5 is_stmt 0 view .LVU750
 2424 0224 81D8     		bhi	.L266
1665:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2425              		.loc 1 1665 61 view .LVU751
 2426 0226 4FF0010C 		mov	ip, #1
 2427 022a 6AE7     		b	.L214
 2428              	.LVL190:
 2429              	.L229:
1738:src/keys.c    **** 			break;
 2430              		.loc 1 1738 3 is_stmt 1 view .LVU752
1738:src/keys.c    **** 			break;
 2431              		.loc 1 1738 18 is_stmt 0 view .LVU753
 2432 022c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1738:src/keys.c    **** 			break;
 2433              		.loc 1 1738 6 view .LVU754
 2434 022e 13F0C00F 		tst	r3, #192
 2435 0232 7FF47CAF 		bne	.L304
1740:src/keys.c    **** 			CmdBase = RARG_STOM;
ARM GAS  /tmp/cciIzcMf.s 			page 102


 2436              		.loc 1 1740 3 is_stmt 1 view .LVU755
1740:src/keys.c    **** 			CmdBase = RARG_STOM;
 2437              		.loc 1 1740 6 is_stmt 0 view .LVU756
 2438 0236 032F     		cmp	r7, #3
 2439 0238 00F0EE80 		beq	.L310
1742:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2440              		.loc 1 1742 8 is_stmt 1 view .LVU757
1742:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2441              		.loc 1 1742 11 is_stmt 0 view .LVU758
 2442 023c 0A2F     		cmp	r7, #10
 2443 023e 7FF476AF 		bne	.L304
1743:src/keys.c    **** 		break;
 2444              		.loc 1 1743 4 is_stmt 1 view .LVU759
1743:src/keys.c    **** 		break;
 2445              		.loc 1 1743 12 is_stmt 0 view .LVU760
 2446 0242 7823     		movs	r3, #120
 2447 0244 E377     		strb	r3, [r4, #31]
1894:src/keys.c    **** }
 2448              		.loc 1 1894 9 view .LVU761
 2449 0246 3320     		movs	r0, #51
 2450 0248 72E7     		b	.L202
 2451              	.L255:
1848:src/keys.c    **** 			if (argcmds[base].label) {
 2452              		.loc 1 1848 3 is_stmt 1 view .LVU762
1848:src/keys.c    **** 			if (argcmds[base].label) {
 2453              		.loc 1 1848 6 is_stmt 0 view .LVU763
 2454 024a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2455 024c 002B     		cmp	r3, #0
 2456 024e 00F0A080 		beq	.L311
1862:src/keys.c    **** 			return arg_eval(State2.digval);
 2457              		.loc 1 1862 10 is_stmt 1 view .LVU764
1863:src/keys.c    **** 		else if (stack_reg)
 2458              		.loc 1 1863 4 view .LVU765
1863:src/keys.c    **** 		else if (stack_reg)
 2459              		.loc 1 1863 11 is_stmt 0 view .LVU766
 2460 0252 2089     		ldrh	r0, [r4, #8]
 2461 0254 B5E7     		b	.L306
 2462              	.L253:
1840:src/keys.c    **** 		break;
 2463              		.loc 1 1840 3 is_stmt 1 view .LVU767
 2464 0256 0021     		movs	r1, #0
 2465 0258 0620     		movs	r0, #6
 2466 025a FFF7FEFF 		bl	arg_storcl
 2467              	.LVL191:
1841:src/keys.c    **** 
 2468              		.loc 1 1841 3 view .LVU768
1894:src/keys.c    **** }
 2469              		.loc 1 1894 9 is_stmt 0 view .LVU769
 2470 025e 3320     		movs	r0, #51
1841:src/keys.c    **** 
 2471              		.loc 1 1841 3 view .LVU770
 2472 0260 66E7     		b	.L202
 2473              	.L246:
1793:src/keys.c    **** 			reset_arg();
 2474              		.loc 1 1793 3 is_stmt 1 view .LVU771
1793:src/keys.c    **** 			reset_arg();
 2475              		.loc 1 1793 6 is_stmt 0 view .LVU772
ARM GAS  /tmp/cciIzcMf.s 			page 103


 2476 0262 212F     		cmp	r7, #33
 2477 0264 00F0C580 		beq	.L247
1793:src/keys.c    **** 			reset_arg();
 2478              		.loc 1 1793 25 discriminator 1 view .LVU773
 2479 0268 732F     		cmp	r7, #115
 2480 026a 00F0C280 		beq	.L247
1797:src/keys.c    **** 		break;
 2481              		.loc 1 1797 3 is_stmt 1 view .LVU774
 2482 026e 0121     		movs	r1, #1
 2483 0270 0220     		movs	r0, #2
 2484 0272 FFF7FEFF 		bl	arg_storcl
 2485              	.LVL192:
1798:src/keys.c    **** 	case K44:		// multiply
 2486              		.loc 1 1798 3 view .LVU775
1894:src/keys.c    **** }
 2487              		.loc 1 1894 9 is_stmt 0 view .LVU776
 2488 0276 3320     		movs	r0, #51
1798:src/keys.c    **** 	case K44:		// multiply
 2489              		.loc 1 1798 3 view .LVU777
 2490 0278 5AE7     		b	.L202
 2491              	.L239:
1785:src/keys.c    **** 
 2492              		.loc 1 1785 3 is_stmt 1 view .LVU778
 2493              	.LVL193:
 2494              	.LBB361:
 2495              	.LBI361:
1627:src/keys.c    **** 
 2496              		.loc 1 1627 12 view .LVU779
 2497              	.LBB362:
1629:src/keys.c    **** 		// Only valid at beginning of entry
 2498              		.loc 1 1629 2 view .LVU780
1629:src/keys.c    **** 		// Only valid at beginning of entry
 2499              		.loc 1 1629 5 is_stmt 0 view .LVU781
 2500 027a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2501 027c 002B     		cmp	r3, #0
 2502 027e 7FF456AF 		bne	.L304
1631:src/keys.c    **** 			// '..' or ENTER '.' = X
 2503              		.loc 1 1631 3 is_stmt 1 view .LVU782
1631:src/keys.c    **** 			// '..' or ENTER '.' = X
 2504              		.loc 1 1631 6 is_stmt 0 view .LVU783
 2505 0282 10F4A03F 		tst	r0, #81920
 2506 0286 40F0CB80 		bne	.L312
1636:src/keys.c    **** 			// local register or flag select
 2507              		.loc 1 1636 3 is_stmt 1 view .LVU784
1636:src/keys.c    **** 			// local register or flag select
 2508              		.loc 1 1636 20 is_stmt 0 view .LVU785
 2509 028a 0BEB0A02 		add	r2, fp, r10
 2510 028e 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1636:src/keys.c    **** 			// local register or flag select
 2511              		.loc 1 1636 6 view .LVU786
 2512 0290 1D07     		lsls	r5, r3, #28
 2513 0292 00F1B380 		bmi	.L241
1636:src/keys.c    **** 			// local register or flag select
 2514              		.loc 1 1636 27 view .LVU787
 2515 0296 94F91530 		ldrsb	r3, [r4, #21]
 2516 029a 002B     		cmp	r3, #0
 2517 029c C0F2AE80 		blt	.L241
ARM GAS  /tmp/cciIzcMf.s 			page 104


1640:src/keys.c    **** 			// Special GTO . sequence
 2518              		.loc 1 1640 8 is_stmt 1 view .LVU788
1640:src/keys.c    **** 			// Special GTO . sequence
 2519              		.loc 1 1640 29 is_stmt 0 view .LVU789
 2520 02a0 443F     		subs	r7, r7, #68
 2521              	.LVL194:
1640:src/keys.c    **** 			// Special GTO . sequence
 2522              		.loc 1 1640 11 view .LVU790
 2523 02a2 012F     		cmp	r7, #1
 2524 02a4 3FF643AF 		bhi	.L304
1642:src/keys.c    **** 				State2.gtodot = 1;
 2525              		.loc 1 1642 4 is_stmt 1 view .LVU791
1643:src/keys.c    **** 				reset_arg();
 2526              		.loc 1 1643 5 view .LVU792
1643:src/keys.c    **** 				reset_arg();
 2527              		.loc 1 1643 19 is_stmt 0 view .LVU793
 2528 02a8 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2529 02aa 43F00103 		orr	r3, r3, #1
 2530 02ae 6375     		strb	r3, [r4, #21]
1644:src/keys.c    **** 			}
 2531              		.loc 1 1644 5 is_stmt 1 view .LVU794
 2532 02b0 FFF7FEFF 		bl	reset_arg
 2533              	.LVL195:
1648:src/keys.c    **** }
 2534              		.loc 1 1648 9 is_stmt 0 view .LVU795
 2535 02b4 3320     		movs	r0, #51
 2536 02b6 3BE7     		b	.L202
 2537              	.L318:
 2538              		.align	2
 2539              	.L317:
 2540 02b8 00000000 		.word	StateWhileOn
 2541 02bc 00000000 		.word	.LANCHOR1
 2542 02c0 00000000 		.word	.LANCHOR0
 2543 02c4 ABAAAAAA 		.word	-1431655765
 2544 02c8 00000000 		.word	argcmds
 2545              	.LVL196:
 2546              	.L243:
1648:src/keys.c    **** }
 2547              		.loc 1 1648 9 view .LVU796
 2548              	.LBE362:
 2549              	.LBE361:
1789:src/keys.c    **** 			return arg_eval(n);
 2550              		.loc 1 1789 3 is_stmt 1 view .LVU797
1789:src/keys.c    **** 			return arg_eval(n);
 2551              		.loc 1 1789 7 is_stmt 0 view .LVU798
 2552 02cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1789:src/keys.c    **** 			return arg_eval(n);
 2553              		.loc 1 1789 6 view .LVU799
 2554 02ce 5C06     		lsls	r4, r3, #25
 2555 02d0 88D4     		bmi	.L251
1789:src/keys.c    **** 			return arg_eval(n);
 2556              		.loc 1 1789 25 discriminator 1 view .LVU800
 2557 02d2 0121     		movs	r1, #1
 2558 02d4 0846     		mov	r0, r1
 2559 02d6 FFF7FEFF 		bl	arg_storcl
 2560              	.LVL197:
1789:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/cciIzcMf.s 			page 105


 2561              		.loc 1 1789 18 discriminator 1 view .LVU801
 2562 02da 0028     		cmp	r0, #0
 2563 02dc 7FF427AF 		bne	.L304
1800:src/keys.c    **** 			return arg_eval(n);
 2564              		.loc 1 1800 63 view .LVU802
 2565 02e0 B8F1000F 		cmp	r8, #0
 2566 02e4 3FF423AF 		beq	.L304
 2567 02e8 7CE7     		b	.L251
 2568              	.L227:
1730:src/keys.c    **** 			State2.ind = ! State2.ind;
 2569              		.loc 1 1730 3 is_stmt 1 view .LVU803
1730:src/keys.c    **** 			State2.ind = ! State2.ind;
 2570              		.loc 1 1730 7 is_stmt 0 view .LVU804
 2571 02ea 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1730:src/keys.c    **** 			State2.ind = ! State2.ind;
 2572              		.loc 1 1730 6 view .LVU805
 2573 02ec 5E06     		lsls	r6, r3, #25
 2574 02ee 3FF51EAF 		bmi	.L304
1730:src/keys.c    **** 			State2.ind = ! State2.ind;
 2575              		.loc 1 1730 35 discriminator 1 view .LVU806
 2576 02f2 D344     		add	fp, fp, r10
 2577 02f4 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
1730:src/keys.c    **** 			State2.ind = ! State2.ind;
 2578              		.loc 1 1730 19 discriminator 1 view .LVU807
 2579 02f8 D507     		lsls	r5, r2, #31
 2580 02fa 7FF518AF 		bpl	.L304
1731:src/keys.c    **** 			if (! stack_reg)
 2581              		.loc 1 1731 4 is_stmt 1 view .LVU808
1731:src/keys.c    **** 			if (! stack_reg)
 2582              		.loc 1 1731 17 is_stmt 0 view .LVU809
 2583 02fe DA43     		mvns	r2, r3
 2584 0300 C2F3C012 		ubfx	r2, r2, #7, #1
1731:src/keys.c    **** 			if (! stack_reg)
 2585              		.loc 1 1731 15 view .LVU810
 2586 0304 62F3C713 		bfi	r3, r2, #7, #1
 2587 0308 6375     		strb	r3, [r4, #21]
1732:src/keys.c    **** 				State2.dot = 0;
 2588              		.loc 1 1732 4 is_stmt 1 view .LVU811
1732:src/keys.c    **** 				State2.dot = 0;
 2589              		.loc 1 1732 7 is_stmt 0 view .LVU812
 2590 030a B8F1000F 		cmp	r8, #0
 2591 030e 7FF40EAF 		bne	.L304
 2592              	.L264:
1733:src/keys.c    **** 		}
 2593              		.loc 1 1733 5 is_stmt 1 view .LVU813
1733:src/keys.c    **** 		}
 2594              		.loc 1 1733 16 is_stmt 0 view .LVU814
 2595 0312 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2596 0314 6FF38613 		bfc	r3, #6, #1
 2597 0318 6375     		strb	r3, [r4, #21]
1894:src/keys.c    **** }
 2598              		.loc 1 1894 9 view .LVU815
 2599 031a 3320     		movs	r0, #51
 2600 031c 08E7     		b	.L202
 2601              	.L233:
1750:src/keys.c    **** 	    return process_arg_shuffle(0);
 2602              		.loc 1 1750 4 is_stmt 1 view .LVU816
ARM GAS  /tmp/cciIzcMf.s 			page 106


1750:src/keys.c    **** 	    return process_arg_shuffle(0);
 2603              		.loc 1 1750 8 is_stmt 0 view .LVU817
 2604 031e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1750:src/keys.c    **** 	    return process_arg_shuffle(0);
 2605              		.loc 1 1750 7 view .LVU818
 2606 0320 9907     		lsls	r1, r3, #30
 2607 0322 7FF508AF 		bpl	.L232
1751:src/keys.c    **** 	case K52:	// Y
 2608              		.loc 1 1751 6 is_stmt 1 view .LVU819
1751:src/keys.c    **** 	case K52:	// Y
 2609              		.loc 1 1751 13 is_stmt 0 view .LVU820
 2610 0326 0020     		movs	r0, #0
 2611              	.L307:
1895:src/keys.c    **** 
 2612              		.loc 1 1895 1 view .LVU821
 2613 0328 03B0     		add	sp, sp, #12
 2614              		.cfi_remember_state
 2615              		.cfi_def_cfa_offset 36
 2616              	.LVL198:
1895:src/keys.c    **** 
 2617              		.loc 1 1895 1 view .LVU822
 2618              		@ sp needed
 2619 032a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2620              		.cfi_restore 14
 2621              		.cfi_restore 11
 2622              		.cfi_restore 10
 2623              		.cfi_restore 9
 2624              		.cfi_restore 8
 2625              		.cfi_restore 7
 2626              		.cfi_restore 6
 2627              		.cfi_restore 5
 2628              		.cfi_restore 4
 2629              		.cfi_def_cfa_offset 0
 2630              	.LVL199:
1757:src/keys.c    **** #else
 2631              		.loc 1 1757 13 view .LVU823
 2632 032e FFF7FEBF 		b	process_arg_shuffle
 2633              	.LVL200:
 2634              	.L234:
 2635              		.cfi_restore_state
1753:src/keys.c    **** 	    return process_arg_shuffle(1);
 2636              		.loc 1 1753 4 is_stmt 1 view .LVU824
1753:src/keys.c    **** 	    return process_arg_shuffle(1);
 2637              		.loc 1 1753 8 is_stmt 0 view .LVU825
 2638 0332 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1753:src/keys.c    **** 	    return process_arg_shuffle(1);
 2639              		.loc 1 1753 7 view .LVU826
 2640 0334 9A07     		lsls	r2, r3, #30
 2641 0336 7FF5FEAE 		bpl	.L232
1754:src/keys.c    **** 	case K53:       // Z
 2642              		.loc 1 1754 6 is_stmt 1 view .LVU827
1754:src/keys.c    **** 	case K53:       // Z
 2643              		.loc 1 1754 13 is_stmt 0 view .LVU828
 2644 033a 0120     		movs	r0, #1
 2645 033c F4E7     		b	.L307
 2646              	.L235:
1756:src/keys.c    **** 	    return process_arg_shuffle(2);
ARM GAS  /tmp/cciIzcMf.s 			page 107


 2647              		.loc 1 1756 4 is_stmt 1 view .LVU829
1756:src/keys.c    **** 	    return process_arg_shuffle(2);
 2648              		.loc 1 1756 8 is_stmt 0 view .LVU830
 2649 033e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1756:src/keys.c    **** 	    return process_arg_shuffle(2);
 2650              		.loc 1 1756 7 view .LVU831
 2651 0340 9B07     		lsls	r3, r3, #30
 2652 0342 7FF5F8AE 		bpl	.L232
1757:src/keys.c    **** #else
 2653              		.loc 1 1757 6 is_stmt 1 view .LVU832
1757:src/keys.c    **** #else
 2654              		.loc 1 1757 13 is_stmt 0 view .LVU833
 2655 0346 0220     		movs	r0, #2
 2656 0348 EEE7     		b	.L307
 2657              	.L254:
1844:src/keys.c    **** 		break;
 2658              		.loc 1 1844 3 is_stmt 1 view .LVU834
 2659 034a 0021     		movs	r1, #0
 2660 034c 0520     		movs	r0, #5
 2661 034e FFF7FEFF 		bl	arg_storcl
 2662              	.LVL201:
1845:src/keys.c    **** 
 2663              		.loc 1 1845 3 view .LVU835
1894:src/keys.c    **** }
 2664              		.loc 1 1894 9 is_stmt 0 view .LVU836
 2665 0352 3320     		movs	r0, #51
1845:src/keys.c    **** 
 2666              		.loc 1 1845 3 view .LVU837
 2667 0354 ECE6     		b	.L202
 2668              	.L231:
1747:src/keys.c    **** 	    return process_arg_shuffle(3);
 2669              		.loc 1 1747 4 is_stmt 1 view .LVU838
1747:src/keys.c    **** 	    return process_arg_shuffle(3);
 2670              		.loc 1 1747 8 is_stmt 0 view .LVU839
 2671 0356 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1747:src/keys.c    **** 	    return process_arg_shuffle(3);
 2672              		.loc 1 1747 7 view .LVU840
 2673 0358 9807     		lsls	r0, r3, #30
 2674 035a 7FF5ECAE 		bpl	.L232
1748:src/keys.c    **** 	case K51:       // X
 2675              		.loc 1 1748 6 is_stmt 1 view .LVU841
1748:src/keys.c    **** 	case K51:       // X
 2676              		.loc 1 1748 13 is_stmt 0 view .LVU842
 2677 035e 0320     		movs	r0, #3
 2678 0360 E2E7     		b	.L307
 2679              	.L252:
1804:src/keys.c    **** 		break;
 2680              		.loc 1 1804 3 is_stmt 1 view .LVU843
 2681 0362 0121     		movs	r1, #1
 2682 0364 0420     		movs	r0, #4
 2683 0366 FFF7FEFF 		bl	arg_storcl
 2684              	.LVL202:
1805:src/keys.c    **** #else
 2685              		.loc 1 1805 3 view .LVU844
1894:src/keys.c    **** }
 2686              		.loc 1 1894 9 is_stmt 0 view .LVU845
 2687 036a 3320     		movs	r0, #51
ARM GAS  /tmp/cciIzcMf.s 			page 108


1805:src/keys.c    **** #else
 2688              		.loc 1 1805 3 view .LVU846
 2689 036c E0E6     		b	.L202
 2690              	.L262:
1869:src/keys.c    **** 			if (State2.dot)
 2691              		.loc 1 1869 3 is_stmt 1 view .LVU847
1869:src/keys.c    **** 			if (State2.dot)
 2692              		.loc 1 1869 13 is_stmt 0 view .LVU848
 2693 036e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
1869:src/keys.c    **** 			if (State2.dot)
 2694              		.loc 1 1869 6 view .LVU849
 2695 0370 7BBB     		cbnz	r3, .L263
1870:src/keys.c    **** 				State2.dot = 0;
 2696              		.loc 1 1870 4 is_stmt 1 view .LVU850
1870:src/keys.c    **** 				State2.dot = 0;
 2697              		.loc 1 1870 8 is_stmt 0 view .LVU851
 2698 0372 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1870:src/keys.c    **** 				State2.dot = 0;
 2699              		.loc 1 1870 7 view .LVU852
 2700 0374 13F04001 		ands	r1, r3, #64
 2701 0378 CBD1     		bne	.L264
1872:src/keys.c    **** 				State2.local = 0;
 2702              		.loc 1 1872 9 is_stmt 1 view .LVU853
1872:src/keys.c    **** 				State2.local = 0;
 2703              		.loc 1 1872 13 is_stmt 0 view .LVU854
 2704 037a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1872:src/keys.c    **** 				State2.local = 0;
 2705              		.loc 1 1872 12 view .LVU855
 2706 037c 12F00100 		ands	r0, r2, #1
 2707 0380 54D1     		bne	.L313
1874:src/keys.c    **** 				State2.ind = 0;
 2708              		.loc 1 1874 9 is_stmt 1 view .LVU856
1874:src/keys.c    **** 				State2.ind = 0;
 2709              		.loc 1 1874 12 is_stmt 0 view .LVU857
 2710 0382 1906     		lsls	r1, r3, #24
 2711 0384 7FF5D1AE 		bpl	.L266
1875:src/keys.c    **** 			else
 2712              		.loc 1 1875 5 is_stmt 1 view .LVU858
1875:src/keys.c    **** 			else
 2713              		.loc 1 1875 16 is_stmt 0 view .LVU859
 2714 0388 60F3C713 		bfi	r3, r0, #7, #1
 2715 038c 6375     		strb	r3, [r4, #21]
1894:src/keys.c    **** }
 2716              		.loc 1 1894 9 view .LVU860
 2717 038e 3320     		movs	r0, #51
 2718 0390 CEE6     		b	.L202
 2719              	.L311:
1848:src/keys.c    **** 			if (argcmds[base].label) {
 2720              		.loc 1 1848 43 discriminator 1 view .LVU861
 2721 0392 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2722 0394 13F0C00F 		tst	r3, #192
 2723 0398 0ED1     		bne	.L257
1849:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2724              		.loc 1 1849 4 is_stmt 1 view .LVU862
1849:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2725              		.loc 1 1849 7 is_stmt 0 view .LVU863
 2726 039a 0029     		cmp	r1, #0
ARM GAS  /tmp/cciIzcMf.s 			page 109


 2727 039c 4BD1     		bne	.L314
1854:src/keys.c    **** 				reset_arg();
 2728              		.loc 1 1854 11 is_stmt 1 view .LVU864
1854:src/keys.c    **** 				reset_arg();
 2729              		.loc 1 1854 14 is_stmt 0 view .LVU865
 2730 039e 4E2F     		cmp	r7, #78
 2731 03a0 5BD0     		beq	.L315
1857:src/keys.c    **** 				reset_arg();
 2732              		.loc 1 1857 11 is_stmt 1 view .LVU866
1857:src/keys.c    **** 				reset_arg();
 2733              		.loc 1 1857 14 is_stmt 0 view .LVU867
 2734 03a2 4F2F     		cmp	r7, #79
 2735 03a4 5ED0     		beq	.L316
1860:src/keys.c    **** 				State2.dot = 1;
 2736              		.loc 1 1860 11 is_stmt 1 view .LVU868
1860:src/keys.c    **** 				State2.dot = 1;
 2737              		.loc 1 1860 14 is_stmt 0 view .LVU869
 2738 03a6 019A     		ldr	r2, [sp, #4]
 2739 03a8 002A     		cmp	r2, #0
 2740 03aa 3FF4C0AE 		beq	.L304
1861:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2741              		.loc 1 1861 5 is_stmt 1 view .LVU870
1861:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2742              		.loc 1 1861 16 is_stmt 0 view .LVU871
 2743 03ae 43F04003 		orr	r3, r3, #64
 2744 03b2 6375     		strb	r3, [r4, #21]
1894:src/keys.c    **** }
 2745              		.loc 1 1894 9 view .LVU872
 2746 03b4 3320     		movs	r0, #51
 2747 03b6 BBE6     		b	.L202
 2748              	.L257:
1862:src/keys.c    **** 			return arg_eval(State2.digval);
 2749              		.loc 1 1862 10 is_stmt 1 view .LVU873
1864:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2750              		.loc 1 1864 8 view .LVU874
1864:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2751              		.loc 1 1864 11 is_stmt 0 view .LVU875
 2752 03b8 B8F1000F 		cmp	r8, #0
 2753 03bc 3FF4B7AE 		beq	.L304
1865:src/keys.c    **** 		break;
 2754              		.loc 1 1865 4 is_stmt 1 view .LVU876
1865:src/keys.c    **** 		break;
 2755              		.loc 1 1865 27 is_stmt 0 view .LVU877
 2756 03c0 C3F38012 		ubfx	r2, r3, #6, #1
1865:src/keys.c    **** 		break;
 2757              		.loc 1 1865 19 view .LVU878
 2758 03c4 C2F10102 		rsb	r2, r2, #1
1865:src/keys.c    **** 		break;
 2759              		.loc 1 1865 15 view .LVU879
 2760 03c8 62F38613 		bfi	r3, r2, #6, #1
 2761 03cc 6375     		strb	r3, [r4, #21]
1894:src/keys.c    **** }
 2762              		.loc 1 1894 9 view .LVU880
 2763 03ce 3320     		movs	r0, #51
 2764 03d0 AEE6     		b	.L202
 2765              	.L263:
1880:src/keys.c    **** 			if (State2.shuffle)
ARM GAS  /tmp/cciIzcMf.s 			page 110


 2766              		.loc 1 1880 4 is_stmt 1 view .LVU881
1881:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2767              		.loc 1 1881 8 is_stmt 0 view .LVU882
 2768 03d2 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1880:src/keys.c    **** 			if (State2.shuffle)
 2769              		.loc 1 1880 4 view .LVU883
 2770 03d4 013B     		subs	r3, r3, #1
 2771 03d6 DBB2     		uxtb	r3, r3
1881:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2772              		.loc 1 1881 7 view .LVU884
 2773 03d8 9207     		lsls	r2, r2, #30
1880:src/keys.c    **** 			if (State2.shuffle)
 2774              		.loc 1 1880 4 view .LVU885
 2775 03da E372     		strb	r3, [r4, #11]
1881:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2776              		.loc 1 1881 4 is_stmt 1 view .LVU886
1881:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2777              		.loc 1 1881 7 is_stmt 0 view .LVU887
 2778 03dc 14D5     		bpl	.L267
1882:src/keys.c    **** 			else
 2779              		.loc 1 1882 5 is_stmt 1 view .LVU888
1882:src/keys.c    **** 			else
 2780              		.loc 1 1882 19 is_stmt 0 view .LVU889
 2781 03de 2289     		ldrh	r2, [r4, #8]
1882:src/keys.c    **** 			else
 2782              		.loc 1 1882 46 view .LVU890
 2783 03e0 5B00     		lsls	r3, r3, #1
1882:src/keys.c    **** 			else
 2784              		.loc 1 1882 26 view .LVU891
 2785 03e2 0321     		movs	r1, #3
 2786 03e4 01FA03F3 		lsl	r3, r1, r3
1882:src/keys.c    **** 			else
 2787              		.loc 1 1882 19 view .LVU892
 2788 03e8 22EA0303 		bic	r3, r2, r3
 2789 03ec 2381     		strh	r3, [r4, #8]	@ movhi
1894:src/keys.c    **** }
 2790              		.loc 1 1894 9 view .LVU893
 2791 03ee 3320     		movs	r0, #51
 2792 03f0 9EE6     		b	.L202
 2793              	.L247:
1794:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2794              		.loc 1 1794 4 is_stmt 1 view .LVU894
 2795 03f2 FFF7FEFF 		bl	reset_arg
 2796              	.LVL203:
1795:src/keys.c    **** 		}
 2797              		.loc 1 1795 4 view .LVU895
1795:src/keys.c    **** 		}
 2798              		.loc 1 1795 11 is_stmt 0 view .LVU896
 2799 03f6 40F27510 		movw	r0, #373
 2800 03fa 99E6     		b	.L202
 2801              	.LVL204:
 2802              	.L241:
 2803              	.LBB365:
 2804              	.LBB363:
1638:src/keys.c    **** 		}
 2805              		.loc 1 1638 4 is_stmt 1 view .LVU897
1638:src/keys.c    **** 		}
ARM GAS  /tmp/cciIzcMf.s 			page 111


 2806              		.loc 1 1638 17 is_stmt 0 view .LVU898
 2807 03fc A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2808 03fe 43F00103 		orr	r3, r3, #1
 2809 0402 A375     		strb	r3, [r4, #22]
1648:src/keys.c    **** }
 2810              		.loc 1 1648 9 view .LVU899
 2811 0404 3320     		movs	r0, #51
1638:src/keys.c    **** 		}
 2812              		.loc 1 1638 17 view .LVU900
 2813 0406 93E6     		b	.L202
 2814              	.LVL205:
 2815              	.L267:
1638:src/keys.c    **** 		}
 2816              		.loc 1 1638 17 view .LVU901
 2817              	.LBE363:
 2818              	.LBE365:
1884:src/keys.c    **** 		}
 2819              		.loc 1 1884 5 is_stmt 1 view .LVU902
1884:src/keys.c    **** 		}
 2820              		.loc 1 1884 19 is_stmt 0 view .LVU903
 2821 0408 2389     		ldrh	r3, [r4, #8]
 2822 040a 1A4A     		ldr	r2, .L319
 2823 040c A2FB0323 		umull	r2, r3, r2, r3
 2824 0410 DB08     		lsrs	r3, r3, #3
 2825 0412 2381     		strh	r3, [r4, #8]	@ movhi
1894:src/keys.c    **** }
 2826              		.loc 1 1894 9 view .LVU904
 2827 0414 3320     		movs	r0, #51
 2828 0416 8BE6     		b	.L202
 2829              	.L310:
1741:src/keys.c    **** 		else if (base == RARG_RCL)
 2830              		.loc 1 1741 4 is_stmt 1 view .LVU905
1741:src/keys.c    **** 		else if (base == RARG_RCL)
 2831              		.loc 1 1741 12 is_stmt 0 view .LVU906
 2832 0418 7723     		movs	r3, #119
 2833 041a E377     		strb	r3, [r4, #31]
1894:src/keys.c    **** }
 2834              		.loc 1 1894 9 view .LVU907
 2835 041c 3320     		movs	r0, #51
 2836 041e 87E6     		b	.L202
 2837              	.LVL206:
 2838              	.L312:
 2839              	.LBB366:
 2840              	.LBB364:
1633:src/keys.c    **** 			return arg_eval(regX_idx);
 2841              		.loc 1 1633 4 is_stmt 1 view .LVU908
1633:src/keys.c    **** 			return arg_eval(regX_idx);
 2842              		.loc 1 1633 17 is_stmt 0 view .LVU909
 2843 0420 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2844 0422 63F30002 		bfi	r2, r3, #0, #1
1634:src/keys.c    **** 		}
 2845              		.loc 1 1634 11 view .LVU910
 2846 0426 6420     		movs	r0, #100
1633:src/keys.c    **** 			return arg_eval(regX_idx);
 2847              		.loc 1 1633 17 view .LVU911
 2848 0428 A275     		strb	r2, [r4, #22]
1634:src/keys.c    **** 		}
ARM GAS  /tmp/cciIzcMf.s 			page 112


 2849              		.loc 1 1634 4 is_stmt 1 view .LVU912
 2850 042a CAE6     		b	.L306
 2851              	.LVL207:
 2852              	.L313:
1634:src/keys.c    **** 		}
 2853              		.loc 1 1634 4 is_stmt 0 view .LVU913
 2854              	.LBE364:
 2855              	.LBE366:
1873:src/keys.c    **** 			else if (State2.ind)
 2856              		.loc 1 1873 5 is_stmt 1 view .LVU914
1873:src/keys.c    **** 			else if (State2.ind)
 2857              		.loc 1 1873 18 is_stmt 0 view .LVU915
 2858 042c 61F30002 		bfi	r2, r1, #0, #1
 2859 0430 A275     		strb	r2, [r4, #22]
1894:src/keys.c    **** }
 2860              		.loc 1 1894 9 view .LVU916
 2861 0432 3320     		movs	r0, #51
 2862 0434 7CE6     		b	.L202
 2863              	.L314:
1850:src/keys.c    **** 				State2.multi = 1;
 2864              		.loc 1 1850 5 is_stmt 1 view .LVU917
 2865              	.LVL208:
 2866              	.LBB367:
 2867              	.LBI367:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 2868              		.loc 1 501 13 view .LVU918
 2869              	.LBB368:
 502:src/keys.c    **** 		return;
 2870              		.loc 1 502 2 view .LVU919
 502:src/keys.c    **** 		return;
 2871              		.loc 1 502 6 is_stmt 0 view .LVU920
 2872 0436 FFF7FEFF 		bl	is_bad_cmdline
 2873              	.LVL209:
 502:src/keys.c    **** 		return;
 2874              		.loc 1 502 5 view .LVU921
 2875 043a 20B9     		cbnz	r0, .L259
 2876              	.LBE368:
 2877              	.LBE367:
1850:src/keys.c    **** 				State2.multi = 1;
 2878              		.loc 1 1850 31 view .LVU922
 2879 043c A7F14200 		sub	r0, r7, #66
 2880              	.LBB370:
 2881              	.LBB369:
 2882 0440 C0B2     		uxtb	r0, r0
 2883 0442 FFF7FEFF 		bl	init_arg.part.0
 2884              	.LVL210:
 2885              	.L259:
1850:src/keys.c    **** 				State2.multi = 1;
 2886              		.loc 1 1850 31 view .LVU923
 2887              	.LBE369:
 2888              	.LBE370:
1851:src/keys.c    **** 				State2.alphashift = 0;
 2889              		.loc 1 1851 5 is_stmt 1 view .LVU924
1852:src/keys.c    **** 				State2.rarg = 0;
 2890              		.loc 1 1852 5 view .LVU925
1853:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2891              		.loc 1 1853 5 view .LVU926
ARM GAS  /tmp/cciIzcMf.s 			page 113


1851:src/keys.c    **** 				State2.alphashift = 0;
 2892              		.loc 1 1851 18 is_stmt 0 view .LVU927
 2893 0446 6369     		ldr	r3, [r4, #20]
 2894 0448 23F44013 		bic	r3, r3, #3145728
 2895 044c 23F40063 		bic	r3, r3, #2048
 2896 0450 43F40063 		orr	r3, r3, #2048
 2897 0454 6361     		str	r3, [r4, #20]
1894:src/keys.c    **** }
 2898              		.loc 1 1894 9 view .LVU928
 2899 0456 3320     		movs	r0, #51
 2900 0458 6AE6     		b	.L202
 2901              	.L315:
1855:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2902              		.loc 1 1855 5 is_stmt 1 view .LVU929
 2903 045a FFF7FEFF 		bl	reset_arg
 2904              	.LVL211:
1856:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2905              		.loc 1 1856 5 view .LVU930
1856:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2906              		.loc 1 1856 12 is_stmt 0 view .LVU931
 2907 045e 40F25510 		movw	r0, #341
 2908 0462 65E6     		b	.L202
 2909              	.L316:
1858:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2910              		.loc 1 1858 5 is_stmt 1 view .LVU932
 2911 0464 FFF7FEFF 		bl	reset_arg
 2912              	.LVL212:
1859:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2913              		.loc 1 1859 5 view .LVU933
1859:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2914              		.loc 1 1859 12 is_stmt 0 view .LVU934
 2915 0468 4FF4AB70 		mov	r0, #342
 2916 046c 60E6     		b	.L202
 2917              	.L220:
1678:src/keys.c    **** 	  case regY_idx:
 2918              		.loc 1 1678 6 is_stmt 1 view .LVU935
1678:src/keys.c    **** 	  case regY_idx:
 2919              		.loc 1 1678 13 is_stmt 0 view .LVU936
 2920 046e 0120     		movs	r0, #1
 2921 0470 BBE6     		b	.L305
 2922              	.L320:
 2923 0472 00BF     		.align	2
 2924              	.L319:
 2925 0474 CDCCCCCC 		.word	-858993459
 2926              		.cfi_endproc
 2927              	.LFE37:
 2929              		.section	.text.cur_shift,"ax",%progbits
 2930              		.align	1
 2931              		.p2align 2,,3
 2932              		.global	cur_shift
 2933              		.syntax unified
 2934              		.thumb
 2935              		.thumb_func
 2936              		.fpu fpv4-sp-d16
 2938              	cur_shift:
 2939              	.LFB0:
  84:src/keys.c    **** 	enum shifts s = shift_down();
ARM GAS  /tmp/cciIzcMf.s 			page 114


 2940              		.loc 1 84 29 is_stmt 1 view -0
 2941              		.cfi_startproc
 2942              		@ args = 0, pretend = 0, frame = 0
 2943              		@ frame_needed = 0, uses_anonymous_args = 0
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2944              		.loc 1 85 2 view .LVU938
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2945              		.loc 1 84 29 is_stmt 0 view .LVU939
 2946 0000 08B5     		push	{r3, lr}
 2947              		.cfi_def_cfa_offset 8
 2948              		.cfi_offset 3, -8
 2949              		.cfi_offset 14, -4
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2950              		.loc 1 85 18 view .LVU940
 2951 0002 FFF7FEFF 		bl	shift_down
 2952              	.LVL213:
  86:src/keys.c    **** }
 2953              		.loc 1 86 2 is_stmt 1 view .LVU941
  86:src/keys.c    **** }
 2954              		.loc 1 86 52 is_stmt 0 view .LVU942
 2955 0006 08B9     		cbnz	r0, .L322
  86:src/keys.c    **** }
 2956              		.loc 1 86 52 discriminator 1 view .LVU943
 2957 0008 014B     		ldr	r3, .L324
 2958 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2959              	.LVL214:
 2960              	.L322:
  87:src/keys.c    **** 
 2961              		.loc 1 87 1 discriminator 4 view .LVU944
 2962 000c 08BD     		pop	{r3, pc}
 2963              	.L325:
 2964 000e 00BF     		.align	2
 2965              	.L324:
 2966 0010 00000000 		.word	StateWhileOn
 2967              		.cfi_endproc
 2968              	.LFE0:
 2970              		.section	.text.reset_shift,"ax",%progbits
 2971              		.align	1
 2972              		.p2align 2,,3
 2973              		.global	reset_shift
 2974              		.syntax unified
 2975              		.thumb
 2976              		.thumb_func
 2977              		.fpu fpv4-sp-d16
 2979              	reset_shift:
 2980              	.LFB2:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 2981              		.loc 1 102 31 is_stmt 1 view -0
 2982              		.cfi_startproc
 2983              		@ args = 0, pretend = 0, frame = 0
 2984              		@ frame_needed = 0, uses_anonymous_args = 0
 103:src/keys.c    **** }
 2985              		.loc 1 103 2 view .LVU946
 2986              	.LVL215:
 2987              	.LBB371:
 2988              	.LBI371:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/cciIzcMf.s 			page 115


 2989              		.loc 1 92 20 view .LVU947
 2990              	.LBB372:
  93:src/keys.c    **** 	State2.shifts = shift;
 2991              		.loc 1 93 2 view .LVU948
 2992              	.LBB373:
 2993              	.LBI373:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2994              		.loc 1 84 13 view .LVU949
 2995              	.LBB374:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2996              		.loc 1 85 2 view .LVU950
 2997              	.LBE374:
 2998              	.LBE373:
 2999              	.LBE372:
 3000              	.LBE371:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3001              		.loc 1 102 31 is_stmt 0 view .LVU951
 3002 0000 08B5     		push	{r3, lr}
 3003              		.cfi_def_cfa_offset 8
 3004              		.cfi_offset 3, -8
 3005              		.cfi_offset 14, -4
 3006              	.LBB378:
 3007              	.LBB377:
 3008              	.LBB376:
 3009              	.LBB375:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3010              		.loc 1 85 18 view .LVU952
 3011 0002 FFF7FEFF 		bl	shift_down
 3012              	.LVL216:
  86:src/keys.c    **** }
 3013              		.loc 1 86 2 is_stmt 1 view .LVU953
  86:src/keys.c    **** }
 3014              		.loc 1 86 52 is_stmt 0 view .LVU954
 3015 0006 034B     		ldr	r3, .L331
 3016 0008 00B9     		cbnz	r0, .L327
 3017 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3018              	.LVL217:
 3019              	.L327:
  86:src/keys.c    **** }
 3020              		.loc 1 86 52 view .LVU955
 3021              	.LBE375:
 3022              	.LBE376:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3023              		.loc 1 94 2 is_stmt 1 view .LVU956
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3024              		.loc 1 94 16 is_stmt 0 view .LVU957
 3025 000c 0022     		movs	r2, #0
 3026 000e 1A74     		strb	r2, [r3, #16]
  95:src/keys.c    **** 	return r;
 3027              		.loc 1 95 2 is_stmt 1 view .LVU958
  95:src/keys.c    **** 	return r;
 3028              		.loc 1 95 19 is_stmt 0 view .LVU959
 3029 0010 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 3030              		.loc 1 96 2 is_stmt 1 view .LVU960
 3031              	.LVL218:
  96:src/keys.c    **** }
ARM GAS  /tmp/cciIzcMf.s 			page 116


 3032              		.loc 1 96 2 is_stmt 0 view .LVU961
 3033              	.LBE377:
 3034              	.LBE378:
 104:src/keys.c    **** 
 3035              		.loc 1 104 1 view .LVU962
 3036 0012 08BD     		pop	{r3, pc}
 3037              	.L332:
 3038              		.align	2
 3039              	.L331:
 3040 0014 00000000 		.word	StateWhileOn
 3041              		.cfi_endproc
 3042              	.LFE2:
 3044              		.section	.text.keycode_to_row_column,"ax",%progbits
 3045              		.align	1
 3046              		.p2align 2,,3
 3047              		.global	keycode_to_row_column
 3048              		.syntax unified
 3049              		.thumb
 3050              		.thumb_func
 3051              		.fpu fpv4-sp-d16
 3053              	keycode_to_row_column:
 3054              	.LVL219:
 3055              	.LFB6:
 168:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3056              		.loc 1 168 1 is_stmt 1 view -0
 3057              		.cfi_startproc
 3058              		@ args = 0, pretend = 0, frame = 0
 3059              		@ frame_needed = 0, uses_anonymous_args = 0
 3060              		@ link register save eliminated.
 169:src/keys.c    **** }
 3061              		.loc 1 169 2 view .LVU964
 169:src/keys.c    **** }
 3062              		.loc 1 169 18 is_stmt 0 view .LVU965
 3063 0000 074A     		ldr	r2, .L334
 3064 0002 82FB0032 		smull	r3, r2, r2, r0
 3065 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 169:src/keys.c    **** }
 3066              		.loc 1 169 24 view .LVU966
 3067 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3068 000e 5200     		lsls	r2, r2, #1
 169:src/keys.c    **** }
 3069              		.loc 1 169 33 view .LVU967
 3070 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3071 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 169:src/keys.c    **** }
 3072              		.loc 1 169 12 view .LVU968
 3073 0018 02F10B00 		add	r0, r2, #11
 3074              	.LVL220:
 170:src/keys.c    **** 
 3075              		.loc 1 170 1 view .LVU969
 3076 001c 1844     		add	r0, r0, r3
 3077 001e 7047     		bx	lr
 3078              	.L335:
 3079              		.align	2
 3080              	.L334:
 3081 0020 ABAAAA2A 		.word	715827883
 3082              		.cfi_endproc
ARM GAS  /tmp/cciIzcMf.s 			page 117


 3083              	.LFE6:
 3085              		.section	.text.row_column_to_keycode,"ax",%progbits
 3086              		.align	1
 3087              		.p2align 2,,3
 3088              		.global	row_column_to_keycode
 3089              		.syntax unified
 3090              		.thumb
 3091              		.thumb_func
 3092              		.fpu fpv4-sp-d16
 3094              	row_column_to_keycode:
 3095              	.LVL221:
 3096              	.LFB7:
 178:src/keys.c    **** 	int row = c / 10 - 1;
 3097              		.loc 1 178 1 is_stmt 1 view -0
 3098              		.cfi_startproc
 3099              		@ args = 0, pretend = 0, frame = 0
 3100              		@ frame_needed = 0, uses_anonymous_args = 0
 3101              		@ link register save eliminated.
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3102              		.loc 1 179 2 view .LVU971
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3103              		.loc 1 179 14 is_stmt 0 view .LVU972
 3104 0000 0E4A     		ldr	r2, .L342
 3105 0002 82FB0032 		smull	r3, r2, r2, r0
 3106 0006 C317     		asrs	r3, r0, #31
 3107 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 180:src/keys.c    **** 
 3108              		.loc 1 180 14 view .LVU973
 3109 000c 03EB8302 		add	r2, r3, r3, lsl #2
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3110              		.loc 1 179 6 view .LVU974
 3111 0010 013B     		subs	r3, r3, #1
 3112              	.LVL222:
 180:src/keys.c    **** 
 3113              		.loc 1 180 2 is_stmt 1 view .LVU975
 180:src/keys.c    **** 
 3114              		.loc 1 180 14 is_stmt 0 view .LVU976
 3115 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3116              	.LVL223:
 182:src/keys.c    **** 		return -1;
 3117              		.loc 1 182 5 view .LVU977
 3118 0016 062B     		cmp	r3, #6
 180:src/keys.c    **** 
 3119              		.loc 1 180 6 view .LVU978
 3120 0018 00F1FF30 		add	r0, r0, #-1
 3121              	.LVL224:
 182:src/keys.c    **** 		return -1;
 3122              		.loc 1 182 2 is_stmt 1 view .LVU979
 182:src/keys.c    **** 		return -1;
 3123              		.loc 1 182 5 is_stmt 0 view .LVU980
 3124 001c 0AD8     		bhi	.L341
 182:src/keys.c    **** 		return -1;
 3125              		.loc 1 182 36 discriminator 1 view .LVU981
 3126 001e 012B     		cmp	r3, #1
 3127 0020 CCBF     		ite	gt
 3128 0022 0422     		movgt	r2, #4
 3129 0024 0522     		movle	r2, #5
ARM GAS  /tmp/cciIzcMf.s 			page 118


 182:src/keys.c    **** 		return -1;
 3130              		.loc 1 182 25 discriminator 1 view .LVU982
 3131 0026 8242     		cmp	r2, r0
 3132 0028 04DB     		blt	.L341
 184:src/keys.c    **** }
 3133              		.loc 1 184 2 is_stmt 1 view .LVU983
 184:src/keys.c    **** }
 3134              		.loc 1 184 13 is_stmt 0 view .LVU984
 3135 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3136              	.LVL225:
 184:src/keys.c    **** }
 3137              		.loc 1 184 17 view .LVU985
 3138 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3139              	.LVL226:
 184:src/keys.c    **** }
 3140              		.loc 1 184 17 view .LVU986
 3141 0032 7047     		bx	lr
 3142              	.LVL227:
 3143              	.L341:
 183:src/keys.c    **** 	return row * 6 + col;
 3144              		.loc 1 183 10 view .LVU987
 3145 0034 4FF0FF30 		mov	r0, #-1
 3146              	.LVL228:
 185:src/keys.c    **** 
 3147              		.loc 1 185 1 view .LVU988
 3148 0038 7047     		bx	lr
 3149              	.L343:
 3150 003a 00BF     		.align	2
 3151              	.L342:
 3152 003c 67666666 		.word	1717986919
 3153              		.cfi_endproc
 3154              	.LFE7:
 3156              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3157              		.align	1
 3158              		.p2align 2,,3
 3159              		.global	keycode_to_digit_or_register
 3160              		.syntax unified
 3161              		.thumb
 3162              		.thumb_func
 3163              		.fpu fpv4-sp-d16
 3165              	keycode_to_digit_or_register:
 3166              	.LVL229:
 3167              	.LFB8:
 199:src/keys.c    ****   static const unsigned char map[] = {
 3168              		.loc 1 199 1 is_stmt 1 view -0
 3169              		.cfi_startproc
 3170              		@ args = 0, pretend = 0, frame = 0
 3171              		@ frame_needed = 0, uses_anonymous_args = 0
 3172              		@ link register save eliminated.
 200:src/keys.c    ****     // K00 - K05
 3173              		.loc 1 200 3 view .LVU990
 221:src/keys.c    **** }
 3174              		.loc 1 221 3 view .LVU991
 3175              	.LBB379:
 3176              	.LBI379:
 119:src/keys.c    **** {
 3177              		.loc 1 119 12 view .LVU992
ARM GAS  /tmp/cciIzcMf.s 			page 119


 3178              	.LBB380:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3179              		.loc 1 121 2 view .LVU993
 131:src/keys.c    **** }
 3180              		.loc 1 131 2 view .LVU994
 131:src/keys.c    **** }
 3181              		.loc 1 131 23 is_stmt 0 view .LVU995
 3182 0000 024B     		ldr	r3, .L345
 3183              	.LBE380:
 3184              	.LBE379:
 221:src/keys.c    **** }
 3185              		.loc 1 221 28 view .LVU996
 3186 0002 034A     		ldr	r2, .L345+4
 3187              	.LBB382:
 3188              	.LBB381:
 131:src/keys.c    **** }
 3189              		.loc 1 131 23 view .LVU997
 3190 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3191              	.LBE381:
 3192              	.LBE382:
 222:src/keys.c    **** #else
 3193              		.loc 1 222 1 view .LVU998
 3194 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3195              	.LVL230:
 222:src/keys.c    **** #else
 3196              		.loc 1 222 1 view .LVU999
 3197 0008 7047     		bx	lr
 3198              	.L346:
 3199 000a 00BF     		.align	2
 3200              	.L345:
 3201 000c 00000000 		.word	.LANCHOR1
 3202 0010 00000000 		.word	.LANCHOR0
 3203              		.cfi_endproc
 3204              	.LFE8:
 3206              		.section	.text.init_state,"ax",%progbits
 3207              		.align	1
 3208              		.p2align 2,,3
 3209              		.global	init_state
 3210              		.syntax unified
 3211              		.thumb
 3212              		.thumb_func
 3213              		.fpu fpv4-sp-d16
 3215              	init_state:
 3216              	.LFB13:
 564:src/keys.c    **** #ifndef REALBUILD
 3217              		.loc 1 564 23 is_stmt 1 view -0
 3218              		.cfi_startproc
 3219              		@ args = 0, pretend = 0, frame = 0
 3220              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3221              		.loc 1 566 2 view .LVU1001
 564:src/keys.c    **** #ifndef REALBUILD
 3222              		.loc 1 564 23 is_stmt 0 view .LVU1002
 3223 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3224              		.cfi_def_cfa_offset 24
 3225              		.cfi_offset 4, -24
 3226              		.cfi_offset 5, -20
ARM GAS  /tmp/cciIzcMf.s 			page 120


 3227              		.cfi_offset 6, -16
 3228              		.cfi_offset 7, -12
 3229              		.cfi_offset 8, -8
 3230              		.cfi_offset 14, -4
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3231              		.loc 1 566 25 view .LVU1003
 3232 0004 154C     		ldr	r4, .L349
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3233              		.loc 1 574 10 view .LVU1004
 3234 0006 0021     		movs	r1, #0
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3235              		.loc 1 578 2 view .LVU1005
 3236 0008 1422     		movs	r2, #20
 3237 000a 04F10800 		add	r0, r4, #8
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3238              		.loc 1 574 10 view .LVU1006
 3239 000e E177     		strb	r1, [r4, #31]
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3240              		.loc 1 566 25 view .LVU1007
 3241 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 567:src/keys.c    **** #else
 3242              		.loc 1 567 25 view .LVU1008
 3243 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 571:src/keys.c    **** 	int k = LastKey;
 3244              		.loc 1 571 10 view .LVU1009
 3245 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 572:src/keys.c    **** 
 3246              		.loc 1 572 10 view .LVU1010
 3247 0016 94F91380 		ldrsb	r8, [r4, #19]
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3248              		.loc 1 578 2 view .LVU1011
 3249 001a FFF7FEFF 		bl	xset
 3250              	.LVL231:
 580:src/keys.c    **** 	update_program_bounds(1);
 3251              		.loc 1 580 17 view .LVU1012
 3252 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 579:src/keys.c    **** 	State2.runmode = 1;
 3253              		.loc 1 579 14 view .LVU1013
 3254 0020 0722     		movs	r2, #7
 580:src/keys.c    **** 	update_program_bounds(1);
 3255              		.loc 1 580 17 view .LVU1014
 3256 0022 43F04003 		orr	r3, r3, #64
 581:src/keys.c    **** 	set_lift();
 3257              		.loc 1 581 2 view .LVU1015
 3258 0026 0120     		movs	r0, #1
 579:src/keys.c    **** 	State2.runmode = 1;
 3259              		.loc 1 579 14 view .LVU1016
 3260 0028 E273     		strb	r2, [r4, #15]
 580:src/keys.c    **** 	update_program_bounds(1);
 3261              		.loc 1 580 17 view .LVU1017
 3262 002a A375     		strb	r3, [r4, #22]
 581:src/keys.c    **** 	set_lift();
 3263              		.loc 1 581 2 view .LVU1018
 3264 002c FFF7FEFF 		bl	update_program_bounds
 3265              	.LVL232:
 582:src/keys.c    **** 
 3266              		.loc 1 582 2 view .LVU1019
ARM GAS  /tmp/cciIzcMf.s 			page 121


 3267 0030 FFF7FEFF 		bl	set_lift
 3268              	.LVL233:
 589:src/keys.c    **** 	State2.flags = a;
 3269              		.loc 1 589 15 view .LVU1020
 3270 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 590:src/keys.c    **** #else
 3271              		.loc 1 590 15 view .LVU1021
 3272 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 594:src/keys.c    **** }
 3273              		.loc 1 594 15 view .LVU1022
 3274 0038 0949     		ldr	r1, .L349+4
 587:src/keys.c    **** #ifndef REALBUILD
 3275              		.loc 1 587 10 view .LVU1023
 3276 003a 84F81380 		strb	r8, [r4, #19]
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3277              		.loc 1 566 25 view .LVU1024
 3278 003e 05F00105 		and	r5, r5, #1
 3279              	.LVL234:
 567:src/keys.c    **** #else
 3280              		.loc 1 567 2 is_stmt 1 view .LVU1025
 567:src/keys.c    **** #else
 3281              		.loc 1 567 25 is_stmt 0 view .LVU1026
 3282 0042 F609     		lsrs	r6, r6, #7
 3283              	.LVL235:
 571:src/keys.c    **** 	int k = LastKey;
 3284              		.loc 1 571 2 is_stmt 1 view .LVU1027
 571:src/keys.c    **** 	int k = LastKey;
 3285              		.loc 1 571 10 is_stmt 0 view .LVU1028
 3286 0044 FFB2     		uxtb	r7, r7
 3287              	.LVL236:
 572:src/keys.c    **** 
 3288              		.loc 1 572 2 is_stmt 1 view .LVU1029
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3289              		.loc 1 574 2 view .LVU1030
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3290              		.loc 1 578 2 view .LVU1031
 579:src/keys.c    **** 	State2.runmode = 1;
 3291              		.loc 1 579 2 view .LVU1032
 580:src/keys.c    **** 	update_program_bounds(1);
 3292              		.loc 1 580 2 view .LVU1033
 581:src/keys.c    **** 	set_lift();
 3293              		.loc 1 581 2 view .LVU1034
 582:src/keys.c    **** 
 3294              		.loc 1 582 2 view .LVU1035
 586:src/keys.c    **** 	LastKey = k;
 3295              		.loc 1 586 2 view .LVU1036
 589:src/keys.c    **** 	State2.flags = a;
 3296              		.loc 1 589 15 is_stmt 0 view .LVU1037
 3297 0046 66F3C712 		bfi	r2, r6, #7, #1
 590:src/keys.c    **** #else
 3298              		.loc 1 590 15 view .LVU1038
 3299 004a 65F30003 		bfi	r3, r5, #0, #1
 594:src/keys.c    **** }
 3300              		.loc 1 594 15 view .LVU1039
 3301 004e 6420     		movs	r0, #100
 589:src/keys.c    **** 	State2.flags = a;
 3302              		.loc 1 589 15 view .LVU1040
ARM GAS  /tmp/cciIzcMf.s 			page 122


 3303 0050 E275     		strb	r2, [r4, #23]
 590:src/keys.c    **** #else
 3304              		.loc 1 590 15 view .LVU1041
 3305 0052 2376     		strb	r3, [r4, #24]
 586:src/keys.c    **** 	LastKey = k;
 3306              		.loc 1 586 10 view .LVU1042
 3307 0054 A774     		strb	r7, [r4, #18]
 587:src/keys.c    **** #ifndef REALBUILD
 3308              		.loc 1 587 2 is_stmt 1 view .LVU1043
 589:src/keys.c    **** 	State2.flags = a;
 3309              		.loc 1 589 2 view .LVU1044
 590:src/keys.c    **** #else
 3310              		.loc 1 590 2 view .LVU1045
 594:src/keys.c    **** }
 3311              		.loc 1 594 2 view .LVU1046
 594:src/keys.c    **** }
 3312              		.loc 1 594 15 is_stmt 0 view .LVU1047
 3313 0056 0860     		str	r0, [r1]
 595:src/keys.c    **** 
 3314              		.loc 1 595 1 view .LVU1048
 3315 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3316              	.LVL237:
 3317              	.L350:
 595:src/keys.c    **** 
 3318              		.loc 1 595 1 view .LVU1049
 3319              		.align	2
 3320              	.L349:
 3321 005c 00000000 		.word	StateWhileOn
 3322 0060 00000000 		.word	ShowRegister
 3323              		.cfi_endproc
 3324              	.LFE13:
 3326              		.section	.text.soft_init_state,"ax",%progbits
 3327              		.align	1
 3328              		.p2align 2,,3
 3329              		.global	soft_init_state
 3330              		.syntax unified
 3331              		.thumb
 3332              		.thumb_func
 3333              		.fpu fpv4-sp-d16
 3335              	soft_init_state:
 3336              	.LFB14:
 597:src/keys.c    **** 	int soft;
 3337              		.loc 1 597 28 is_stmt 1 view -0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 598:src/keys.c    **** 	unsigned int runmode;
 3341              		.loc 1 598 2 view .LVU1051
 599:src/keys.c    **** 	unsigned int alphas;
 3342              		.loc 1 599 2 view .LVU1052
 600:src/keys.c    **** 
 3343              		.loc 1 600 2 view .LVU1053
 602:src/keys.c    **** 		CmdLineLength = 0;
 3344              		.loc 1 602 2 view .LVU1054
 597:src/keys.c    **** 	int soft;
 3345              		.loc 1 597 28 is_stmt 0 view .LVU1055
 3346 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/cciIzcMf.s 			page 123


 3347              		.cfi_def_cfa_offset 16
 3348              		.cfi_offset 3, -16
 3349              		.cfi_offset 4, -12
 3350              		.cfi_offset 5, -8
 3351              		.cfi_offset 14, -4
 602:src/keys.c    **** 		CmdLineLength = 0;
 3352              		.loc 1 602 6 view .LVU1056
 3353 0002 114C     		ldr	r4, .L358
 602:src/keys.c    **** 		CmdLineLength = 0;
 3354              		.loc 1 602 5 view .LVU1057
 3355 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3356 0006 D3B9     		cbnz	r3, .L357
 608:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3357              		.loc 1 608 2 is_stmt 1 view .LVU1058
 609:src/keys.c    **** 	runmode = State2.runmode;
 3358              		.loc 1 609 17 is_stmt 0 view .LVU1059
 3359 0008 104A     		ldr	r2, .L358+4
 3360 000a 6369     		ldr	r3, [r4, #20]
 609:src/keys.c    **** 	runmode = State2.runmode;
 3361              		.loc 1 609 60 view .LVU1060
 3362 000c 1A42     		tst	r2, r3
 3363 000e 0AD0     		beq	.L354
 3364              	.L355:
 3365              	.LVL238:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3366              		.loc 1 610 2 is_stmt 1 view .LVU1061
 611:src/keys.c    **** 	init_state();
 3367              		.loc 1 611 17 is_stmt 0 view .LVU1062
 3368 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3369              	.LVL239:
 611:src/keys.c    **** 	init_state();
 3370              		.loc 1 611 2 is_stmt 1 view .LVU1063
 612:src/keys.c    **** 	if (soft) {
 3371              		.loc 1 612 2 view .LVU1064
 3372 0012 FFF7FEFF 		bl	init_state
 3373              	.LVL240:
 613:src/keys.c    **** 		State2.runmode = runmode;
 3374              		.loc 1 613 2 view .LVU1065
 614:src/keys.c    **** 		State2.alphas = alphas;
 3375              		.loc 1 614 3 view .LVU1066
 615:src/keys.c    **** 	}
 3376              		.loc 1 615 3 view .LVU1067
 615:src/keys.c    **** 	}
 3377              		.loc 1 615 17 is_stmt 0 view .LVU1068
 3378 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3379 0018 05F04805 		and	r5, r5, #72
 3380 001c 23F04803 		bic	r3, r3, #72
 3381 0020 2B43     		orrs	r3, r3, r5
 3382 0022 A375     		strb	r3, [r4, #22]
 617:src/keys.c    **** 
 3383              		.loc 1 617 1 view .LVU1069
 3384 0024 38BD     		pop	{r3, r4, r5, pc}
 3385              	.LVL241:
 3386              	.L354:
 609:src/keys.c    **** 	runmode = State2.runmode;
 3387              		.loc 1 609 60 discriminator 2 view .LVU1070
 3388 0026 E368     		ldr	r3, [r4, #12]
ARM GAS  /tmp/cciIzcMf.s 			page 124


 3389 0028 23F47F03 		bic	r3, r3, #16711680
 3390 002c 23F47F43 		bic	r3, r3, #65280
 3391 0030 B3F1E06F 		cmp	r3, #117440512
 3392 0034 ECD1     		bne	.L355
 3393              	.LVL242:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3394              		.loc 1 610 2 is_stmt 1 view .LVU1071
 611:src/keys.c    **** 	init_state();
 3395              		.loc 1 611 2 view .LVU1072
 612:src/keys.c    **** 	if (soft) {
 3396              		.loc 1 612 2 view .LVU1073
 617:src/keys.c    **** 
 3397              		.loc 1 617 1 is_stmt 0 view .LVU1074
 3398 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3399              		.cfi_remember_state
 3400              		.cfi_restore 14
 3401              		.cfi_restore 5
 3402              		.cfi_restore 4
 3403              		.cfi_restore 3
 3404              		.cfi_def_cfa_offset 0
 612:src/keys.c    **** 	if (soft) {
 3405              		.loc 1 612 2 view .LVU1075
 3406 003a FFF7FEBF 		b	init_state
 3407              	.LVL243:
 3408              	.L357:
 3409              		.cfi_restore_state
 3410              	.LBB385:
 3411              	.LBI385:
 597:src/keys.c    **** 	int soft;
 3412              		.loc 1 597 6 is_stmt 1 view .LVU1076
 3413              	.LBB386:
 603:src/keys.c    **** 		CmdLineEex = 0;
 3414              		.loc 1 603 3 view .LVU1077
 604:src/keys.c    **** 		CmdLineDot = 0;
 3415              		.loc 1 604 3 view .LVU1078
 605:src/keys.c    **** 		return;
 3416              		.loc 1 605 3 view .LVU1079
 603:src/keys.c    **** 		CmdLineEex = 0;
 3417              		.loc 1 603 17 is_stmt 0 view .LVU1080
 3418 003e 0023     		movs	r3, #0
 3419 0040 A383     		strh	r3, [r4, #28]	@ movhi
 605:src/keys.c    **** 		return;
 3420              		.loc 1 605 14 view .LVU1081
 3421 0042 A377     		strb	r3, [r4, #30]
 606:src/keys.c    **** 	}
 3422              		.loc 1 606 3 is_stmt 1 view .LVU1082
 3423              	.LBE386:
 3424              	.LBE385:
 617:src/keys.c    **** 
 3425              		.loc 1 617 1 is_stmt 0 view .LVU1083
 3426 0044 38BD     		pop	{r3, r4, r5, pc}
 3427              	.L359:
 3428 0046 00BF     		.align	2
 3429              	.L358:
 3430 0048 00000000 		.word	StateWhileOn
 3431 004c 002F2004 		.word	69218048
 3432              		.cfi_endproc
ARM GAS  /tmp/cciIzcMf.s 			page 125


 3433              	.LFE14:
 3435              		.section	.text.current_catalogue_max,"ax",%progbits
 3436              		.align	1
 3437              		.p2align 2,,3
 3438              		.global	current_catalogue_max
 3439              		.syntax unified
 3440              		.thumb
 3441              		.thumb_func
 3442              		.fpu fpv4-sp-d16
 3444              	current_catalogue_max:
 3445              	.LFB39:
2031:src/keys.c    **** 	// A quick table of catalogue sizes
 3446              		.loc 1 2031 33 is_stmt 1 view -0
 3447              		.cfi_startproc
 3448              		@ args = 0, pretend = 0, frame = 0
 3449              		@ frame_needed = 0, uses_anonymous_args = 0
 3450              		@ link register save eliminated.
2034:src/keys.c    **** 	{
 3451              		.loc 1 2034 2 view .LVU1085
2065:src/keys.c    **** #endif
 3452              		.loc 1 2065 2 view .LVU1086
2065:src/keys.c    **** #endif
 3453              		.loc 1 2065 31 is_stmt 0 view .LVU1087
 3454 0000 024B     		ldr	r3, .L361
2065:src/keys.c    **** #endif
 3455              		.loc 1 2065 24 view .LVU1088
 3456 0002 034A     		ldr	r2, .L361+4
2065:src/keys.c    **** #endif
 3457              		.loc 1 2065 31 view .LVU1089
 3458 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2067:src/keys.c    **** 
 3459              		.loc 1 2067 1 view .LVU1090
 3460 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3461 0008 7047     		bx	lr
 3462              	.L362:
 3463 000a 00BF     		.align	2
 3464              	.L361:
 3465 000c 00000000 		.word	StateWhileOn
 3466 0010 00000000 		.word	.LANCHOR2
 3467              		.cfi_endproc
 3468              	.LFE39:
 3470              		.section	.text.current_catalogue,"ax",%progbits
 3471              		.align	1
 3472              		.p2align 2,,3
 3473              		.global	current_catalogue
 3474              		.syntax unified
 3475              		.thumb
 3476              		.thumb_func
 3477              		.fpu fpv4-sp-d16
 3479              	current_catalogue:
 3480              	.LVL244:
 3481              	.LFB41:
2080:src/keys.c    **** 	// A quick table of catalogue tables
 3482              		.loc 1 2080 33 is_stmt 1 view -0
 3483              		.cfi_startproc
 3484              		@ args = 0, pretend = 0, frame = 0
 3485              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cciIzcMf.s 			page 126


 3486              		@ link register save eliminated.
2083:src/keys.c    **** 	{
 3487              		.loc 1 2083 2 view .LVU1092
2110:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3488              		.loc 1 2110 2 view .LVU1093
2111:src/keys.c    **** 	int m, i;
 3489              		.loc 1 2111 2 view .LVU1094
2111:src/keys.c    **** 	int m, i;
 3490              		.loc 1 2111 25 is_stmt 0 view .LVU1095
 3491 0000 314A     		ldr	r2, .L390
2111:src/keys.c    **** 	int m, i;
 3492              		.loc 1 2111 15 view .LVU1096
 3493 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3494              	.LVL245:
2112:src/keys.c    **** 	unsigned p, q;
 3495              		.loc 1 2112 2 is_stmt 1 view .LVU1097
2113:src/keys.c    **** 
 3496              		.loc 1 2113 2 view .LVU1098
2115:src/keys.c    **** 		if (n == OP_ZERO)
 3497              		.loc 1 2115 2 view .LVU1099
2115:src/keys.c    **** 		if (n == OP_ZERO)
 3498              		.loc 1 2115 5 is_stmt 0 view .LVU1100
 3499 0004 102B     		cmp	r3, #16
 3500 0006 39D0     		beq	.L384
2120:src/keys.c    **** 		if (n == OP_ZERO)
 3501              		.loc 1 2120 2 is_stmt 1 view .LVU1101
2120:src/keys.c    **** 		if (n == OP_ZERO)
 3502              		.loc 1 2120 5 is_stmt 0 view .LVU1102
 3503 0008 112B     		cmp	r3, #17
 3504 000a 32D0     		beq	.L385
2125:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3505              		.loc 1 2125 2 is_stmt 1 view .LVU1103
2125:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3506              		.loc 1 2125 5 is_stmt 0 view .LVU1104
 3507 000c 122B     		cmp	r3, #18
 3508 000e 45D0     		beq	.L386
2138:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3509              		.loc 1 2138 2 is_stmt 1 view .LVU1105
2138:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3510              		.loc 1 2138 5 is_stmt 0 view .LVU1106
 3511 0010 0E2B     		cmp	r3, #14
 3512 0012 38D0     		beq	.L387
2141:src/keys.c    **** 
 3513              		.loc 1 2141 3 is_stmt 1 view .LVU1107
2141:src/keys.c    **** 
 3514              		.loc 1 2141 7 is_stmt 0 view .LVU1108
 3515 0014 2D4A     		ldr	r2, .L390+4
2143:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3516              		.loc 1 2143 35 view .LVU1109
 3517 0016 A3F10B01 		sub	r1, r3, #11
2143:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3518              		.loc 1 2143 5 view .LVU1110
 3519 001a 0429     		cmp	r1, #4
2141:src/keys.c    **** 
 3520              		.loc 1 2141 7 view .LVU1111
 3521 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3522              	.LVL246:
ARM GAS  /tmp/cciIzcMf.s 			page 127


2143:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3523              		.loc 1 2143 2 is_stmt 1 view .LVU1112
2143:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3524              		.loc 1 2143 5 is_stmt 0 view .LVU1113
 3525 0020 38D9     		bls	.L370
2146:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3526              		.loc 1 2146 2 is_stmt 1 view .LVU1114
2146:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3527              		.loc 1 2146 5 is_stmt 0 view .LVU1115
 3528 0022 142B     		cmp	r3, #20
 3529 0024 4DD8     		bhi	.L378
2150:src/keys.c    **** 	p = cat[0];
 3530              		.loc 1 2150 2 is_stmt 1 view .LVU1116
2080:src/keys.c    **** 	// A quick table of catalogue tables
 3531              		.loc 1 2080 33 is_stmt 0 view .LVU1117
 3532 0026 10B4     		push	{r4}
 3533              		.cfi_def_cfa_offset 4
 3534              		.cfi_offset 4, -4
2150:src/keys.c    **** 	p = cat[0];
 3535              		.loc 1 2150 11 view .LVU1118
 3536 0028 00EBA001 		add	r1, r0, r0, asr #2
2150:src/keys.c    **** 	p = cat[0];
 3537              		.loc 1 2150 6 view .LVU1119
 3538 002c 5318     		adds	r3, r2, r1
 3539              	.LVL247:
2151:src/keys.c    **** 	q = cat[1];
 3540              		.loc 1 2151 2 is_stmt 1 view .LVU1120
2152:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3541              		.loc 1 2152 2 view .LVU1121
2153:src/keys.c    **** 
 3542              		.loc 1 2153 2 view .LVU1122
2153:src/keys.c    **** 
 3543              		.loc 1 2153 35 is_stmt 0 view .LVU1123
 3544 002e 4000     		lsls	r0, r0, #1
 3545              	.LVL248:
2151:src/keys.c    **** 	q = cat[1];
 3546              		.loc 1 2151 4 view .LVU1124
 3547 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3548              	.LVL249:
2152:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3549              		.loc 1 2152 4 view .LVU1125
 3550 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3551              	.LVL250:
2152:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3552              		.loc 1 2152 4 view .LVU1126
 3553 0034 2649     		ldr	r1, .L390+8
 3554              	.LVL251:
2153:src/keys.c    **** 
 3555              		.loc 1 2153 54 view .LVU1127
 3556 0036 C443     		mvns	r4, r0
2153:src/keys.c    **** 
 3557              		.loc 1 2153 35 view .LVU1128
 3558 0038 00F00600 		and	r0, r0, #6
2153:src/keys.c    **** 
 3559              		.loc 1 2153 54 view .LVU1129
 3560 003c 04F00604 		and	r4, r4, #6
2153:src/keys.c    **** 
ARM GAS  /tmp/cciIzcMf.s 			page 128


 3561              		.loc 1 2153 24 view .LVU1130
 3562 0040 0230     		adds	r0, r0, #2
2153:src/keys.c    **** 
 3563              		.loc 1 2153 48 view .LVU1131
 3564 0042 E340     		lsrs	r3, r3, r4
 3565              	.LVL252:
2153:src/keys.c    **** 
 3566              		.loc 1 2153 18 view .LVU1132
 3567 0044 02FA00F0 		lsl	r0, r2, r0
2153:src/keys.c    **** 
 3568              		.loc 1 2153 43 view .LVU1133
 3569 0048 1843     		orrs	r0, r0, r3
2153:src/keys.c    **** 
 3570              		.loc 1 2153 4 view .LVU1134
 3571 004a C0F30903 		ubfx	r3, r0, #0, #10
 3572              	.LVL253:
2156:src/keys.c    **** 		if (m < opcode_breaks[i])
 3573              		.loc 1 2156 2 is_stmt 1 view .LVU1135
2156:src/keys.c    **** 		if (m < opcode_breaks[i])
 3574              		.loc 1 2156 12 view .LVU1136
2153:src/keys.c    **** 
 3575              		.loc 1 2153 4 is_stmt 0 view .LVU1137
 3576 004e 3422     		movs	r2, #52
 3577              	.LVL254:
2156:src/keys.c    **** 		if (m < opcode_breaks[i])
 3578              		.loc 1 2156 8 view .LVU1138
 3579 0050 0020     		movs	r0, #0
 3580 0052 01E0     		b	.L374
 3581              	.LVL255:
 3582              	.L389:
2156:src/keys.c    **** 		if (m < opcode_breaks[i])
 3583              		.loc 1 2156 8 view .LVU1139
 3584 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3585              	.LVL256:
 3586              	.L374:
2157:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3587              		.loc 1 2157 3 is_stmt 1 view .LVU1140
2159:src/keys.c    **** 	}
 3588              		.loc 1 2159 3 view .LVU1141
2157:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3589              		.loc 1 2157 6 is_stmt 0 view .LVU1142
 3590 0058 9A42     		cmp	r2, r3
 3591 005a 2FDC     		bgt	.L388
2156:src/keys.c    **** 		if (m < opcode_breaks[i])
 3592              		.loc 1 2156 25 discriminator 2 view .LVU1143
 3593 005c 0130     		adds	r0, r0, #1
 3594              	.LVL257:
2156:src/keys.c    **** 		if (m < opcode_breaks[i])
 3595              		.loc 1 2156 2 discriminator 2 view .LVU1144
 3596 005e 0728     		cmp	r0, #7
2159:src/keys.c    **** 	}
 3597              		.loc 1 2159 5 discriminator 2 view .LVU1145
 3598 0060 A3EB0203 		sub	r3, r3, r2
 3599              	.LVL258:
2156:src/keys.c    **** 		if (m < opcode_breaks[i])
 3600              		.loc 1 2156 24 is_stmt 1 discriminator 2 view .LVU1146
2156:src/keys.c    **** 		if (m < opcode_breaks[i])
ARM GAS  /tmp/cciIzcMf.s 			page 129


 3601              		.loc 1 2156 12 discriminator 2 view .LVU1147
2156:src/keys.c    **** 		if (m < opcode_breaks[i])
 3602              		.loc 1 2156 2 is_stmt 0 discriminator 2 view .LVU1148
 3603 0064 F6D1     		bne	.L389
2161:src/keys.c    **** }
 3604              		.loc 1 2161 2 is_stmt 1 view .LVU1149
2161:src/keys.c    **** }
 3605              		.loc 1 2161 9 is_stmt 0 view .LVU1150
 3606 0066 03F12000 		add	r0, r3, #32
 3607              	.LVL259:
2161:src/keys.c    **** }
 3608              		.loc 1 2161 9 view .LVU1151
 3609 006a 0002     		lsls	r0, r0, #8
 3610              	.L363:
2162:src/keys.c    **** 
 3611              		.loc 1 2162 1 view .LVU1152
 3612 006c 5DF8044B 		ldr	r4, [sp], #4
 3613              		.cfi_restore 4
 3614              		.cfi_def_cfa_offset 0
 3615 0070 7047     		bx	lr
 3616              	.LVL260:
 3617              	.L385:
2121:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3618              		.loc 1 2121 3 is_stmt 1 view .LVU1153
2121:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3619              		.loc 1 2121 6 is_stmt 0 view .LVU1154
 3620 0072 4B28     		cmp	r0, #75
 3621 0074 1FD0     		beq	.L376
2123:src/keys.c    **** 	}
 3622              		.loc 1 2123 3 is_stmt 1 view .LVU1155
2123:src/keys.c    **** 	}
 3623              		.loc 1 2123 10 is_stmt 0 view .LVU1156
 3624 0076 40F40450 		orr	r0, r0, #8448
 3625              	.LVL261:
2123:src/keys.c    **** 	}
 3626              		.loc 1 2123 10 view .LVU1157
 3627 007a 7047     		bx	lr
 3628              	.LVL262:
 3629              	.L384:
2116:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3630              		.loc 1 2116 3 is_stmt 1 view .LVU1158
2116:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3631              		.loc 1 2116 6 is_stmt 0 view .LVU1159
 3632 007c 4B28     		cmp	r0, #75
 3633 007e 17D0     		beq	.L375
2118:src/keys.c    **** 	}
 3634              		.loc 1 2118 3 is_stmt 1 view .LVU1160
2118:src/keys.c    **** 	}
 3635              		.loc 1 2118 10 is_stmt 0 view .LVU1161
 3636 0080 40F40050 		orr	r0, r0, #8192
 3637              	.LVL263:
2118:src/keys.c    **** 	}
 3638              		.loc 1 2118 10 view .LVU1162
 3639 0084 7047     		bx	lr
 3640              	.LVL264:
 3641              	.L387:
2138:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
ARM GAS  /tmp/cciIzcMf.s 			page 130


 3642              		.loc 1 2138 35 discriminator 1 view .LVU1163
 3643 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2139:src/keys.c    **** 	else
 3644              		.loc 1 2139 7 discriminator 1 view .LVU1164
 3645 0088 124B     		ldr	r3, .L390+12
 3646              	.LVL265:
2139:src/keys.c    **** 	else
 3647              		.loc 1 2139 7 discriminator 1 view .LVU1165
 3648 008a 134A     		ldr	r2, .L390+16
 3649              	.LVL266:
2139:src/keys.c    **** 	else
 3650              		.loc 1 2139 7 discriminator 1 view .LVU1166
 3651 008c 11F0100F 		tst	r1, #16
 3652 0090 18BF     		it	ne
 3653 0092 1A46     		movne	r2, r3
 3654              	.L370:
 3655              	.LVL267:
2144:src/keys.c    **** 	}
 3656              		.loc 1 2144 3 is_stmt 1 view .LVU1167
 3657              	.LBB387:
 3658              	.LBI387:
2073:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3659              		.loc 1 2073 15 view .LVU1168
 3660              	.LBB388:
2074:src/keys.c    **** }
 3661              		.loc 1 2074 2 view .LVU1169
2074:src/keys.c    **** }
 3662              		.loc 1 2074 9 is_stmt 0 view .LVU1170
 3663 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3664              	.LVL268:
2074:src/keys.c    **** }
 3665              		.loc 1 2074 9 view .LVU1171
 3666 0096 40F48840 		orr	r0, r0, #17408
 3667              	.LVL269:
2074:src/keys.c    **** }
 3668              		.loc 1 2074 9 view .LVU1172
 3669              	.LBE388:
 3670              	.LBE387:
2144:src/keys.c    **** 	}
 3671              		.loc 1 2144 10 view .LVU1173
 3672 009a 7047     		bx	lr
 3673              	.LVL270:
 3674              	.L386:
 3675              	.LBB389:
2126:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3676              		.loc 1 2126 3 is_stmt 1 view .LVU1174
2126:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3677              		.loc 1 2126 33 is_stmt 0 view .LVU1175
 3678 009c 0F4B     		ldr	r3, .L390+20
 3679              	.LVL271:
2126:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3680              		.loc 1 2126 13 view .LVU1176
 3681 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3682              	.LVL272:
2127:src/keys.c    **** 			// Monadic conversion routine
 3683              		.loc 1 2127 3 is_stmt 1 view .LVU1177
2127:src/keys.c    **** 			// Monadic conversion routine
ARM GAS  /tmp/cciIzcMf.s 			page 131


 3684              		.loc 1 2127 6 is_stmt 0 view .LVU1178
 3685 00a0 5728     		cmp	r0, #87
2129:src/keys.c    **** 		else
 3686              		.loc 1 2129 4 is_stmt 1 view .LVU1179
2129:src/keys.c    **** 		else
 3687              		.loc 1 2129 25 is_stmt 0 view .LVU1180
 3688 00a2 C6BF     		itte	gt
 3689 00a4 5838     		subgt	r0, r0, #88
 3690              	.LVL273:
2129:src/keys.c    **** 		else
 3691              		.loc 1 2129 18 view .LVU1181
 3692 00a6 40F40070 		orrgt	r0, r0, #512
2131:src/keys.c    **** 	}
 3693              		.loc 1 2131 4 is_stmt 1 view .LVU1182
2131:src/keys.c    **** 	}
 3694              		.loc 1 2131 11 is_stmt 0 view .LVU1183
 3695 00aa 40F40C40 		orrle	r0, r0, #35840
 3696 00ae 7047     		bx	lr
 3697              	.LVL274:
 3698              	.L375:
2131:src/keys.c    **** 	}
 3699              		.loc 1 2131 11 view .LVU1184
 3700              	.LBE389:
2117:src/keys.c    **** 		return CONST(n);
 3701              		.loc 1 2117 11 view .LVU1185
 3702 00b0 4FF42740 		mov	r0, #42752
 3703              	.LVL275:
2117:src/keys.c    **** 		return CONST(n);
 3704              		.loc 1 2117 11 view .LVU1186
 3705 00b4 7047     		bx	lr
 3706              	.LVL276:
 3707              	.L376:
2122:src/keys.c    **** 		return CONST_CMPLX(n);
 3708              		.loc 1 2122 11 view .LVU1187
 3709 00b6 4FF42840 		mov	r0, #43008
 3710              	.LVL277:
2122:src/keys.c    **** 		return CONST_CMPLX(n);
 3711              		.loc 1 2122 11 view .LVU1188
 3712 00ba 7047     		bx	lr
 3713              	.LVL278:
 3714              	.L388:
 3715              		.cfi_def_cfa_offset 4
 3716              		.cfi_offset 4, -4
2158:src/keys.c    **** 		m -= opcode_breaks[i];
 3717              		.loc 1 2158 4 is_stmt 1 view .LVU1189
2158:src/keys.c    **** 		m -= opcode_breaks[i];
 3718              		.loc 1 2158 29 is_stmt 0 view .LVU1190
 3719 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3720              	.LVL279:
2158:src/keys.c    **** 		m -= opcode_breaks[i];
 3721              		.loc 1 2158 29 view .LVU1191
 3722 00c0 D4E7     		b	.L363
 3723              	.LVL280:
 3724              	.L378:
 3725              		.cfi_def_cfa_offset 0
 3726              		.cfi_restore 4
2147:src/keys.c    **** 
ARM GAS  /tmp/cciIzcMf.s 			page 132


 3727              		.loc 1 2147 10 view .LVU1192
 3728 00c2 4FF48070 		mov	r0, #256
 3729              	.LVL281:
2162:src/keys.c    **** 
 3730              		.loc 1 2162 1 view .LVU1193
 3731 00c6 7047     		bx	lr
 3732              	.L391:
 3733              		.align	2
 3734              	.L390:
 3735 00c8 00000000 		.word	StateWhileOn
 3736 00cc 00000000 		.word	.LANCHOR6
 3737 00d0 01000000 		.word	.LANCHOR7+1
 3738 00d4 00000000 		.word	.LANCHOR4
 3739 00d8 00000000 		.word	.LANCHOR3
 3740 00dc 00000000 		.word	.LANCHOR5
 3741              		.cfi_endproc
 3742              	.LFE41:
 3744              		.section	.text.process_catalogue,"ax",%progbits
 3745              		.align	1
 3746              		.p2align 2,,3
 3747              		.syntax unified
 3748              		.thumb
 3749              		.thumb_func
 3750              		.fpu fpv4-sp-d16
 3752              	process_catalogue:
 3753              	.LVL282:
 3754              	.LFB43:
2176:src/keys.c    **** 	int pos = State.catpos;
 3755              		.loc 1 2176 92 is_stmt 1 view -0
 3756              		.cfi_startproc
 3757              		@ args = 0, pretend = 0, frame = 16
 3758              		@ frame_needed = 0, uses_anonymous_args = 0
2176:src/keys.c    **** 	int pos = State.catpos;
 3759              		.loc 1 2176 92 is_stmt 0 view .LVU1195
 3760 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3761              		.cfi_def_cfa_offset 36
 3762              		.cfi_offset 4, -36
 3763              		.cfi_offset 5, -32
 3764              		.cfi_offset 6, -28
 3765              		.cfi_offset 7, -24
 3766              		.cfi_offset 8, -20
 3767              		.cfi_offset 9, -16
 3768              		.cfi_offset 10, -12
 3769              		.cfi_offset 11, -8
 3770              		.cfi_offset 14, -4
2177:src/keys.c    **** 	int ch;
 3771              		.loc 1 2177 12 view .LVU1196
 3772 0004 DFF8EC92 		ldr	r9, .L506+24
 3773              	.LBB390:
 3774              	.LBB391:
2065:src/keys.c    **** #endif
 3775              		.loc 1 2065 31 view .LVU1197
 3776 0008 B44E     		ldr	r6, .L506
 3777              	.LBE391:
 3778              	.LBE390:
2177:src/keys.c    **** 	int ch;
 3779              		.loc 1 2177 12 view .LVU1198
ARM GAS  /tmp/cciIzcMf.s 			page 133


 3780 000a D9F80040 		ldr	r4, [r9]
 3781              	.LBB396:
 3782              	.LBB392:
2065:src/keys.c    **** #endif
 3783              		.loc 1 2065 31 view .LVU1199
 3784 000e 96F80EA0 		ldrb	r10, [r6, #14]	@ zero_extendqisi2
 3785              	.LBE392:
 3786              	.LBE396:
2177:src/keys.c    **** 	int ch;
 3787              		.loc 1 2177 17 view .LVU1200
 3788 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3789              	.LBB397:
 3790              	.LBB393:
2065:src/keys.c    **** #endif
 3791              		.loc 1 2065 24 view .LVU1201
 3792 0016 B24B     		ldr	r3, .L506+4
 3793              	.LBE393:
 3794              	.LBE397:
2177:src/keys.c    **** 	int ch;
 3795              		.loc 1 2177 2 is_stmt 1 view .LVU1202
2176:src/keys.c    **** 	int pos = State.catpos;
 3796              		.loc 1 2176 92 is_stmt 0 view .LVU1203
 3797 0018 85B0     		sub	sp, sp, #20
 3798              		.cfi_def_cfa_offset 56
 3799              	.LBB398:
 3800              	.LBB394:
2065:src/keys.c    **** #endif
 3801              		.loc 1 2065 24 view .LVU1204
 3802 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3803              	.LBE394:
 3804              	.LBE398:
2176:src/keys.c    **** 	int pos = State.catpos;
 3805              		.loc 1 2176 92 view .LVU1205
 3806 001e 1746     		mov	r7, r2
2177:src/keys.c    **** 	int ch;
 3807              		.loc 1 2177 6 view .LVU1206
 3808 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3809              	.LVL283:
2178:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 3810              		.loc 1 2178 2 is_stmt 1 view .LVU1207
2179:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
 3811              		.loc 1 2179 2 view .LVU1208
 3812              	.LBB399:
 3813              	.LBI390:
2031:src/keys.c    **** 	// A quick table of catalogue sizes
 3814              		.loc 1 2031 5 view .LVU1209
 3815              	.LBB395:
2034:src/keys.c    **** 	{
 3816              		.loc 1 2034 2 view .LVU1210
2065:src/keys.c    **** #endif
 3817              		.loc 1 2065 2 view .LVU1211
2065:src/keys.c    **** #endif
 3818              		.loc 1 2065 2 is_stmt 0 view .LVU1212
 3819              	.LBE395:
 3820              	.LBE399:
2180:src/keys.c    **** 
 3821              		.loc 1 2180 2 is_stmt 1 view .LVU1213
ARM GAS  /tmp/cciIzcMf.s 			page 134


2182:src/keys.c    **** 		switch (c) {
 3822              		.loc 1 2182 2 view .LVU1214
2182:src/keys.c    **** 		switch (c) {
 3823              		.loc 1 2182 5 is_stmt 0 view .LVU1215
 3824 0024 0029     		cmp	r1, #0
 3825 0026 66D0     		beq	.L491
2243:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3826              		.loc 1 2243 9 is_stmt 1 view .LVU1216
2243:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3827              		.loc 1 2243 12 is_stmt 0 view .LVU1217
 3828 0028 0129     		cmp	r1, #1
 3829 002a 00F0EE80 		beq	.L492
2277:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3830              		.loc 1 2277 9 is_stmt 1 view .LVU1218
2277:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3831              		.loc 1 2277 12 is_stmt 0 view .LVU1219
 3832 002e 0229     		cmp	r1, #2
 3833 0030 00F00C81 		beq	.L493
 3834              	.LVL284:
 3835              	.L428:
 3836              	.LBB400:
 3837              	.LBB401:
 440:src/keys.c    **** }
 3838              		.loc 1 440 2 is_stmt 1 view .LVU1220
 3839              	.LBB402:
 3840              	.LBI402:
 119:src/keys.c    **** {
 3841              		.loc 1 119 12 view .LVU1221
 3842              	.LBB403:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3843              		.loc 1 121 2 view .LVU1222
 131:src/keys.c    **** }
 3844              		.loc 1 131 2 view .LVU1223
 131:src/keys.c    **** }
 3845              		.loc 1 131 23 is_stmt 0 view .LVU1224
 3846 0034 AB4B     		ldr	r3, .L506+8
 3847              	.LBE403:
 3848              	.LBE402:
 440:src/keys.c    **** }
 3849              		.loc 1 440 49 view .LVU1225
 3850 0036 AC4A     		ldr	r2, .L506+12
 3851              	.LBB405:
 3852              	.LBB404:
 131:src/keys.c    **** }
 3853              		.loc 1 131 23 view .LVU1226
 3854 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3855              	.LBE404:
 3856              	.LBE405:
 440:src/keys.c    **** }
 3857              		.loc 1 440 49 view .LVU1227
 3858 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3859 003e 02EB4303 		add	r3, r2, r3, lsl #1
 3860              	.LBE401:
 3861              	.LBE400:
 3862              	.LBB409:
 3863              	.LBB410:
 3864              	.LBB411:
ARM GAS  /tmp/cciIzcMf.s 			page 135


  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3865              		.loc 1 94 16 view .LVU1228
 3866 0042 0025     		movs	r5, #0
 3867              	.LVL285:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3868              		.loc 1 94 16 view .LVU1229
 3869              	.LBE411:
 3870              	.LBE410:
 3871              	.LBE409:
2287:src/keys.c    **** 	reset_shift();
 3872              		.loc 1 2287 7 view .LVU1230
 3873 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 3874              	.LVL286:
2287:src/keys.c    **** 	reset_shift();
 3875              		.loc 1 2287 7 view .LVU1231
 3876 0046 FFF7FEFF 		bl	remap_chars
 3877              	.LVL287:
2287:src/keys.c    **** 	reset_shift();
 3878              		.loc 1 2287 7 view .LVU1232
 3879 004a 0446     		mov	r4, r0
 3880              	.LVL288:
2288:src/keys.c    **** 	if (ch == '\0')
 3881              		.loc 1 2288 2 is_stmt 1 view .LVU1233
 3882              	.LBB416:
 3883              	.LBI409:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3884              		.loc 1 102 13 view .LVU1234
 3885              	.LBE416:
 103:src/keys.c    **** }
 3886              		.loc 1 103 2 view .LVU1235
 3887              	.LBB417:
 3888              	.LBB415:
 3889              	.LBI410:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 3890              		.loc 1 92 20 view .LVU1236
 3891              	.LBB414:
  93:src/keys.c    **** 	State2.shifts = shift;
 3892              		.loc 1 93 2 view .LVU1237
 3893              	.LBB412:
 3894              	.LBI412:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 3895              		.loc 1 84 13 view .LVU1238
 3896              	.LBB413:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3897              		.loc 1 85 2 view .LVU1239
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3898              		.loc 1 85 18 is_stmt 0 view .LVU1240
 3899 004c FFF7FEFF 		bl	shift_down
 3900              	.LVL289:
  86:src/keys.c    **** }
 3901              		.loc 1 86 2 is_stmt 1 view .LVU1241
 3902              	.LBE413:
 3903              	.LBE412:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3904              		.loc 1 94 2 view .LVU1242
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3905              		.loc 1 94 16 is_stmt 0 view .LVU1243
ARM GAS  /tmp/cciIzcMf.s 			page 136


 3906 0050 3574     		strb	r5, [r6, #16]
  95:src/keys.c    **** 	return r;
 3907              		.loc 1 95 2 is_stmt 1 view .LVU1244
  95:src/keys.c    **** 	return r;
 3908              		.loc 1 95 19 is_stmt 0 view .LVU1245
 3909 0052 7573     		strb	r5, [r6, #13]
  96:src/keys.c    **** }
 3910              		.loc 1 96 2 is_stmt 1 view .LVU1246
 3911              	.LVL290:
  96:src/keys.c    **** }
 3912              		.loc 1 96 2 is_stmt 0 view .LVU1247
 3913              	.LBE414:
 3914              	.LBE415:
 3915              	.LBE417:
2289:src/keys.c    **** 		return STATE_UNFINISHED;
 3916              		.loc 1 2289 2 is_stmt 1 view .LVU1248
2289:src/keys.c    **** 		return STATE_UNFINISHED;
 3917              		.loc 1 2289 5 is_stmt 0 view .LVU1249
 3918 0054 002C     		cmp	r4, #0
 3919 0056 6FD0     		beq	.L490
2291:src/keys.c    **** 		// No multi character search in alpha catalogues
 3920              		.loc 1 2291 2 is_stmt 1 view .LVU1250
2291:src/keys.c    **** 		// No multi character search in alpha catalogues
 3921              		.loc 1 2291 5 is_stmt 0 view .LVU1251
 3922 0058 AAF10B0A 		sub	r10, r10, #11
 3923              	.LVL291:
2291:src/keys.c    **** 		// No multi character search in alpha catalogues
 3924              		.loc 1 2291 5 view .LVU1252
 3925 005c BAF1040F 		cmp	r10, #4
 3926 0060 40F2CB80 		bls	.L442
2295:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3927              		.loc 1 2295 2 is_stmt 1 view .LVU1253
2295:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3928              		.loc 1 2295 6 is_stmt 0 view .LVU1254
 3929 0064 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
2295:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3930              		.loc 1 2295 5 view .LVU1255
 3931 0066 092D     		cmp	r5, #9
 3932 0068 40F2C780 		bls	.L442
 3933              	.LVL292:
 3934              	.L410:
2300:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3935              		.loc 1 2300 2 is_stmt 1 view .LVU1256
2300:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3936              		.loc 1 2300 25 is_stmt 0 view .LVU1257
 3937 006c 7319     		adds	r3, r6, r5
 3938 006e 0025     		movs	r5, #0
 3939 0070 83F82050 		strb	r5, [r3, #32]
2301:src/keys.c    **** 		char buf[16];
 3940              		.loc 1 2301 2 is_stmt 1 view .LVU1258
 3941              	.LVL293:
2301:src/keys.c    **** 		char buf[16];
 3942              		.loc 1 2301 16 view .LVU1259
2301:src/keys.c    **** 		char buf[16];
 3943              		.loc 1 2301 2 is_stmt 0 view .LVU1260
 3944 0074 B8F1000F 		cmp	r8, #0
 3945 0078 00F0D780 		beq	.L488
ARM GAS  /tmp/cciIzcMf.s 			page 137


 3946              	.LVL294:
 3947              	.L430:
 3948              	.LBB418:
2302:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 3949              		.loc 1 2302 3 is_stmt 1 view .LVU1261
2303:src/keys.c    **** 		int i;
 3950              		.loc 1 2303 3 view .LVU1262
2303:src/keys.c    **** 		int i;
 3951              		.loc 1 2303 21 is_stmt 0 view .LVU1263
 3952 007c 2846     		mov	r0, r5
 3953 007e FFF7FEFF 		bl	current_catalogue
 3954              	.LVL295:
 3955 0082 6946     		mov	r1, sp
 3956 0084 FFF7FEFF 		bl	catcmd
 3957              	.LVL296:
 3958 0088 0446     		mov	r4, r0
 3959              	.LVL297:
2304:src/keys.c    **** 
 3960              		.loc 1 2304 3 is_stmt 1 view .LVU1264
2306:src/keys.c    **** 			cmd++;
 3961              		.loc 1 2306 3 view .LVU1265
2307:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3962              		.loc 1 2307 4 view .LVU1266
2306:src/keys.c    **** 			cmd++;
 3963              		.loc 1 2306 7 is_stmt 0 view .LVU1267
 3964 008a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3965              	.LVL298:
2306:src/keys.c    **** 			cmd++;
 3966              		.loc 1 2306 6 view .LVU1268
 3967 008c 1428     		cmp	r0, #20
 3968 008e 04BF     		itt	eq
 3969 0090 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2307:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3970              		.loc 1 2307 7 view .LVU1269
 3971 0092 0134     		addeq	r4, r4, #1
 3972              	.LVL299:
2308:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3973              		.loc 1 2308 3 is_stmt 1 view .LVU1270
2308:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3974              		.loc 1 2308 13 view .LVU1271
2308:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3975              		.loc 1 2308 3 is_stmt 0 view .LVU1272
 3976 0094 0028     		cmp	r0, #0
 3977 0096 00F0BF80 		beq	.L432
 3978 009a DFF85CB2 		ldr	fp, .L506+28
 3979 009e C4F1010A 		rsb	r10, r4, #1
 3980 00a2 06E0     		b	.L435
 3981              	.LVL300:
 3982              	.L495:
 3983              	.LBB419:
2313:src/keys.c    **** 				break;
 3984              		.loc 1 2313 12 view .LVU1273
 3985 00a4 C0F2BA80 		blt	.L434
 3986              	.LBE419:
2308:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3987              		.loc 1 2308 16 discriminator 2 view .LVU1274
 3988 00a8 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
ARM GAS  /tmp/cciIzcMf.s 			page 138


 3989              	.LVL301:
2308:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3990              		.loc 1 2308 3 discriminator 2 view .LVU1275
 3991 00ac 0028     		cmp	r0, #0
 3992 00ae 00F0BF80 		beq	.L494
 3993              	.LVL302:
 3994              	.L435:
 3995              	.LBB420:
2309:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3996              		.loc 1 2309 4 is_stmt 1 view .LVU1276
2309:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3997              		.loc 1 2309 18 is_stmt 0 view .LVU1277
 3998 00b2 FFF7FEFF 		bl	remap_chars
 3999              	.LVL303:
2313:src/keys.c    **** 				break;
 4000              		.loc 1 2313 9 is_stmt 1 view .LVU1278
 4001              	.LBE420:
2308:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4002              		.loc 1 2308 29 view .LVU1279
 4003              	.LBB421:
2310:src/keys.c    **** 			if (c > cl)
 4004              		.loc 1 2310 4 view .LVU1280
2310:src/keys.c    **** 			if (c > cl)
 4005              		.loc 1 2310 42 is_stmt 0 view .LVU1281
 4006 00b6 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 4007              	.LVL304:
2311:src/keys.c    **** 				goto set_pos;
 4008              		.loc 1 2311 4 is_stmt 1 view .LVU1282
2311:src/keys.c    **** 				goto set_pos;
 4009              		.loc 1 2311 7 is_stmt 0 view .LVU1283
 4010 00ba 9842     		cmp	r0, r3
 4011 00bc 0AEB0402 		add	r2, r10, r4
 4012              	.LVL305:
2311:src/keys.c    **** 				goto set_pos;
 4013              		.loc 1 2311 7 view .LVU1284
 4014              	.LBE421:
2308:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4015              		.loc 1 2308 13 is_stmt 1 view .LVU1285
 4016              	.LBB422:
2311:src/keys.c    **** 				goto set_pos;
 4017              		.loc 1 2311 7 is_stmt 0 view .LVU1286
 4018 00c0 F0DD     		ble	.L495
 4019              	.LVL306:
 4020              	.L433:
2311:src/keys.c    **** 				goto set_pos;
 4021              		.loc 1 2311 7 view .LVU1287
 4022 00c2 D9F80040 		ldr	r4, [r9]
 4023              	.L413:
2311:src/keys.c    **** 				goto set_pos;
 4024              		.loc 1 2311 7 view .LVU1288
 4025              	.LBE422:
 4026              	.LBE418:
2322:src/keys.c    **** 		--pos;
 4027              		.loc 1 2322 8 is_stmt 1 view .LVU1289
 4028 00c6 002F     		cmp	r7, #0
 4029 00c8 00F0B680 		beq	.L417
2322:src/keys.c    **** 		--pos;
ARM GAS  /tmp/cciIzcMf.s 			page 139


 4030              		.loc 1 2322 18 is_stmt 0 view .LVU1290
 4031 00cc 4DB1     		cbz	r5, .L411
 4032              	.LVL307:
 4033              	.L489:
2322:src/keys.c    **** 		--pos;
 4034              		.loc 1 2322 18 view .LVU1291
 4035 00ce 2846     		mov	r0, r5
 4036 00d0 FFF7FEFF 		bl	current_catalogue
 4037              	.LVL308:
2323:src/keys.c    **** 	State.catpos = pos;
 4038              		.loc 1 2323 3 is_stmt 1 view .LVU1292
2322:src/keys.c    **** 		--pos;
 4039              		.loc 1 2322 8 view .LVU1293
 4040              	.LBB423:
 4041              	.LBI423:
2169:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4042              		.loc 1 2169 12 view .LVU1294
 4043              	.LBB424:
2170:src/keys.c    **** }
 4044              		.loc 1 2170 2 view .LVU1295
2170:src/keys.c    **** }
 4045              		.loc 1 2170 33 is_stmt 0 view .LVU1296
 4046 00d4 00F0F000 		and	r0, r0, #240
 4047              	.LBE424:
 4048              	.LBE423:
2322:src/keys.c    **** 		--pos;
 4049              		.loc 1 2322 25 view .LVU1297
 4050 00d8 F028     		cmp	r0, #240
 4051 00da 40F0AD80 		bne	.L417
2322:src/keys.c    **** 		--pos;
 4052              		.loc 1 2322 18 view .LVU1298
 4053 00de 013D     		subs	r5, r5, #1
 4054              	.LVL309:
2322:src/keys.c    **** 		--pos;
 4055              		.loc 1 2322 18 view .LVU1299
 4056 00e0 F5D1     		bne	.L489
 4057              	.LVL310:
 4058              	.L411:
2324:src/keys.c    **** 	return STATE_UNFINISHED;
 4059              		.loc 1 2324 2 is_stmt 1 view .LVU1300
2324:src/keys.c    **** 	return STATE_UNFINISHED;
 4060              		.loc 1 2324 15 is_stmt 0 view .LVU1301
 4061 00e2 B4F8DC37 		ldrh	r3, [r4, #2012]
 4062 00e6 65F34B13 		bfi	r3, r5, #5, #7
 4063 00ea A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2325:src/keys.c    **** }
 4064              		.loc 1 2325 2 is_stmt 1 view .LVU1302
2325:src/keys.c    **** }
 4065              		.loc 1 2325 9 is_stmt 0 view .LVU1303
 4066 00ee 3320     		movs	r0, #51
 4067              	.L502:
2326:src/keys.c    **** 
 4068              		.loc 1 2326 1 view .LVU1304
 4069 00f0 05B0     		add	sp, sp, #20
 4070              		.cfi_remember_state
 4071              		.cfi_def_cfa_offset 36
 4072              		@ sp needed
ARM GAS  /tmp/cciIzcMf.s 			page 140


 4073 00f2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4074              	.LVL311:
 4075              	.L491:
 4076              		.cfi_restore_state
2183:src/keys.c    **** #ifdef DM42
 4077              		.loc 1 2183 3 is_stmt 1 view .LVU1305
 4078 00f6 431F     		subs	r3, r0, #5
 4079 00f8 1F2B     		cmp	r3, #31
 4080 00fa 2FD8     		bhi	.L394
 4081 00fc DFE803F0 		tbb	[pc, r3]
 4082              	.LVL312:
 4083              	.L396:
 4084 0100 35       		.byte	(.L400-.L396)/2
 4085 0101 2E       		.byte	(.L394-.L396)/2
 4086 0102 2E       		.byte	(.L394-.L396)/2
 4087 0103 2E       		.byte	(.L394-.L396)/2
 4088 0104 2E       		.byte	(.L394-.L396)/2
 4089 0105 2E       		.byte	(.L394-.L396)/2
 4090 0106 2E       		.byte	(.L394-.L396)/2
 4091 0107 35       		.byte	(.L400-.L396)/2
 4092 0108 2E       		.byte	(.L394-.L396)/2
 4093 0109 2E       		.byte	(.L394-.L396)/2
 4094 010a 2E       		.byte	(.L394-.L396)/2
 4095 010b 20       		.byte	(.L399-.L396)/2
 4096 010c 2E       		.byte	(.L394-.L396)/2
 4097 010d 64       		.byte	(.L398-.L396)/2
 4098 010e 2E       		.byte	(.L394-.L396)/2
 4099 010f 2E       		.byte	(.L394-.L396)/2
 4100 0110 2E       		.byte	(.L394-.L396)/2
 4101 0111 2E       		.byte	(.L394-.L396)/2
 4102 0112 2E       		.byte	(.L394-.L396)/2
 4103 0113 6B       		.byte	(.L397-.L396)/2
 4104 0114 2E       		.byte	(.L394-.L396)/2
 4105 0115 2E       		.byte	(.L394-.L396)/2
 4106 0116 2E       		.byte	(.L394-.L396)/2
 4107 0117 2E       		.byte	(.L394-.L396)/2
 4108 0118 2E       		.byte	(.L394-.L396)/2
 4109 0119 2E       		.byte	(.L394-.L396)/2
 4110 011a 2E       		.byte	(.L394-.L396)/2
 4111 011b 2E       		.byte	(.L394-.L396)/2
 4112 011c 2E       		.byte	(.L394-.L396)/2
 4113 011d 2E       		.byte	(.L394-.L396)/2
 4114 011e 2E       		.byte	(.L394-.L396)/2
 4115 011f 27       		.byte	(.L395-.L396)/2
 4116              		.p2align 1
 4117              	.L501:
2272:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4118              		.loc 1 2272 39 is_stmt 0 discriminator 1 view .LVU1306
 4119 0120 724A     		ldr	r2, .L506+16
 4120              	.LVL313:
2272:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4121              		.loc 1 2272 39 discriminator 1 view .LVU1307
 4122 0122 7369     		ldr	r3, [r6, #20]
2272:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4123              		.loc 1 2272 21 discriminator 1 view .LVU1308
 4124 0124 1A42     		tst	r2, r3
 4125 0126 75D0     		beq	.L425
ARM GAS  /tmp/cciIzcMf.s 			page 141


2274:src/keys.c    **** 			return STATE_UNFINISHED;
 4126              		.loc 1 2274 4 is_stmt 1 view .LVU1309
2274:src/keys.c    **** 			return STATE_UNFINISHED;
 4127              		.loc 1 2274 34 is_stmt 0 view .LVU1310
 4128 0128 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 4129 012a C3F30012 		ubfx	r2, r3, #4, #1
2274:src/keys.c    **** 			return STATE_UNFINISHED;
 4130              		.loc 1 2274 26 view .LVU1311
 4131 012e C2F10102 		rsb	r2, r2, #1
2274:src/keys.c    **** 			return STATE_UNFINISHED;
 4132              		.loc 1 2274 22 view .LVU1312
 4133 0132 62F30413 		bfi	r3, r2, #4, #1
 4134 0136 B375     		strb	r3, [r6, #22]
 4135              	.LVL314:
 4136              	.L490:
2275:src/keys.c    **** 		}
 4137              		.loc 1 2275 4 is_stmt 1 view .LVU1313
2275:src/keys.c    **** 		}
 4138              		.loc 1 2275 11 is_stmt 0 view .LVU1314
 4139 0138 3320     		movs	r0, #51
 4140              	.L392:
2326:src/keys.c    **** 
 4141              		.loc 1 2326 1 view .LVU1315
 4142 013a 05B0     		add	sp, sp, #20
 4143              		.cfi_remember_state
 4144              		.cfi_def_cfa_offset 36
 4145              		@ sp needed
 4146 013c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4147              	.LVL315:
 4148              	.L399:
 4149              		.cfi_restore_state
2212:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4150              		.loc 1 2212 7 is_stmt 1 view .LVU1316
2212:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4151              		.loc 1 2212 10 is_stmt 0 view .LVU1317
 4152 0140 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 4153 0142 23B1     		cbz	r3, .L395
2212:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4154              		.loc 1 2212 32 discriminator 1 view .LVU1318
 4155 0144 FFF7FEFF 		bl	keyticks
 4156              	.LVL316:
2212:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4157              		.loc 1 2212 29 discriminator 1 view .LVU1319
 4158 0148 1D28     		cmp	r0, #29
 4159 014a 40F39580 		ble	.L496
 4160              	.L395:
2222:src/keys.c    **** 			return STATE_UNFINISHED;
 4161              		.loc 1 2222 4 is_stmt 1 view .LVU1320
 4162 014e 0020     		movs	r0, #0
 4163 0150 FFF7FEFF 		bl	init_cat
 4164              	.LVL317:
2223:src/keys.c    **** 
 4165              		.loc 1 2223 4 view .LVU1321
2223:src/keys.c    **** 
 4166              		.loc 1 2223 11 is_stmt 0 view .LVU1322
 4167 0154 3320     		movs	r0, #51
2326:src/keys.c    **** 
ARM GAS  /tmp/cciIzcMf.s 			page 142


 4168              		.loc 1 2326 1 view .LVU1323
 4169 0156 05B0     		add	sp, sp, #20
 4170              		.cfi_remember_state
 4171              		.cfi_def_cfa_offset 36
 4172              		@ sp needed
 4173 0158 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4174              	.LVL318:
 4175              	.L394:
 4176              		.cfi_restore_state
 4177              	.LBB425:
 4178              	.LBI400:
 384:src/keys.c    **** {
 4179              		.loc 1 384 12 is_stmt 1 discriminator 4 view .LVU1324
 4180              	.LBB406:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4181              		.loc 1 386 2 discriminator 4 view .LVU1325
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4182              		.loc 1 434 2 discriminator 4 view .LVU1326
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4183              		.loc 1 434 6 is_stmt 0 discriminator 4 view .LVU1327
 4184 015c B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4185              		.loc 1 434 5 discriminator 4 view .LVU1328
 4186 015e 13F0100F 		tst	r3, #16
 4187 0162 14BF     		ite	ne
 4188 0164 0421     		movne	r1, #4
 4189              	.LVL319:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4190              		.loc 1 434 5 discriminator 4 view .LVU1329
 4191 0166 0021     		moveq	r1, #0
 4192 0168 64E7     		b	.L428
 4193              	.LVL320:
 4194              	.L400:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4195              		.loc 1 434 5 discriminator 4 view .LVU1330
 4196              	.LBE406:
 4197              	.LBE425:
2190:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4198              		.loc 1 2190 4 is_stmt 1 view .LVU1331
2190:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4199              		.loc 1 2190 7 is_stmt 0 view .LVU1332
 4200 016a 4545     		cmp	r5, r8
 4201 016c EFDA     		bge	.L395
 4202 016e 2846     		mov	r0, r5
 4203              	.LVL321:
2190:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4204              		.loc 1 2190 20 discriminator 1 view .LVU1333
 4205 0170 002F     		cmp	r7, #0
 4206 0172 00F08D80 		beq	.L497
 4207              	.LVL322:
 4208              	.LBB426:
 4209              	.LBI426:
2169:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4210              		.loc 1 2169 12 is_stmt 1 view .LVU1334
 4211              	.LBB427:
2170:src/keys.c    **** }
 4212              		.loc 1 2170 2 view .LVU1335
ARM GAS  /tmp/cciIzcMf.s 			page 143


2170:src/keys.c    **** }
 4213              		.loc 1 2170 10 is_stmt 0 view .LVU1336
 4214 0176 FFF7FEFF 		bl	current_catalogue
 4215              	.LVL323:
2170:src/keys.c    **** }
 4216              		.loc 1 2170 33 view .LVU1337
 4217 017a 00F0F003 		and	r3, r0, #240
 4218              	.LBE427:
 4219              	.LBE426:
2190:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4220              		.loc 1 2190 23 view .LVU1338
 4221 017e F02B     		cmp	r3, #240
 4222              	.LBB429:
 4223              	.LBB428:
2170:src/keys.c    **** }
 4224              		.loc 1 2170 10 view .LVU1339
 4225 0180 0446     		mov	r4, r0
 4226              	.LBE428:
 4227              	.LBE429:
2190:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4228              		.loc 1 2190 23 view .LVU1340
 4229 0182 E4D0     		beq	.L395
 4230              	.L403:
 4231              	.LBB430:
2191:src/keys.c    **** 
 4232              		.loc 1 2191 5 is_stmt 1 view .LVU1341
2193:src/keys.c    **** 
 4233              		.loc 1 2193 5 view .LVU1342
 4234 0184 0020     		movs	r0, #0
 4235 0186 FFF7FEFF 		bl	init_cat
 4236              	.LVL324:
2195:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4237              		.loc 1 2195 5 view .LVU1343
2195:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4238              		.loc 1 2195 8 is_stmt 0 view .LVU1344
 4239 018a 14F47043 		ands	r3, r4, #61440
 4240 018e 00F08C80 		beq	.L404
2195:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4241              		.loc 1 2195 9 discriminator 1 view .LVU1345
 4242 0192 B3F5704F 		cmp	r3, #61440
 4243 0196 00F08880 		beq	.L404
 4244              	.LBB431:
2196:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4245              		.loc 1 2196 6 is_stmt 1 view .LVU1346
2196:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4246              		.loc 1 2196 32 is_stmt 0 view .LVU1347
 4247 019a C4F30723 		ubfx	r3, r4, #8, #8
 4248 019e A3F12005 		sub	r5, r3, #32
 4249              	.LVL325:
2196:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4250              		.loc 1 2196 32 view .LVU1348
 4251 01a2 EDB2     		uxtb	r5, r5
 4252              	.LVL326:
2197:src/keys.c    **** 						return op;
 4253              		.loc 1 2197 6 is_stmt 1 view .LVU1349
2197:src/keys.c    **** 						return op;
 4254              		.loc 1 2197 9 is_stmt 0 view .LVU1350
ARM GAS  /tmp/cciIzcMf.s 			page 144


 4255 01a4 012D     		cmp	r5, #1
 4256 01a6 40F28980 		bls	.L405
2197:src/keys.c    **** 						return op;
 4257              		.loc 1 2197 57 discriminator 1 view .LVU1351
 4258 01aa 6C2D     		cmp	r5, #108
 4259 01ac 00F08680 		beq	.L405
2197:src/keys.c    **** 						return op;
 4260              		.loc 1 2197 78 discriminator 2 view .LVU1352
 4261 01b0 242D     		cmp	r5, #36
 4262 01b2 00F08380 		beq	.L405
2199:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4263              		.loc 1 2199 6 is_stmt 1 view .LVU1353
2199:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4264              		.loc 1 2199 31 is_stmt 0 view .LVU1354
 4265 01b6 A5F12D02 		sub	r2, r5, #45
2199:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4266              		.loc 1 2199 9 view .LVU1355
 4267 01ba 062A     		cmp	r2, #6
 4268 01bc 00F29E80 		bhi	.L408
2200:src/keys.c    **** 					else
 4269              		.loc 1 2200 7 is_stmt 1 view .LVU1356
2200:src/keys.c    **** 					else
 4270              		.loc 1 2200 28 is_stmt 0 view .LVU1357
 4271 01c0 4D3B     		subs	r3, r3, #77
2200:src/keys.c    **** 					else
 4272              		.loc 1 2200 19 view .LVU1358
 4273 01c2 F373     		strb	r3, [r6, #15]
 4274              	.LBE431:
 4275              	.LBE430:
2209:src/keys.c    **** 
 4276              		.loc 1 2209 11 view .LVU1359
 4277 01c4 3320     		movs	r0, #51
 4278              	.LBB441:
 4279              	.LBB434:
 4280 01c6 B8E7     		b	.L392
 4281              	.LVL327:
 4282              	.L398:
2209:src/keys.c    **** 
 4283              		.loc 1 2209 11 view .LVU1360
 4284              	.LBE434:
 4285              	.LBE441:
2226:src/keys.c    **** 			if (pos == 0)
 4286              		.loc 1 2226 4 is_stmt 1 view .LVU1361
2226:src/keys.c    **** 			if (pos == 0)
 4287              		.loc 1 2226 18 is_stmt 0 view .LVU1362
 4288 01c8 0023     		movs	r3, #0
 4289 01ca 3377     		strb	r3, [r6, #28]
2227:src/keys.c    **** 				goto set_max;
 4290              		.loc 1 2227 4 is_stmt 1 view .LVU1363
2227:src/keys.c    **** 				goto set_max;
 4291              		.loc 1 2227 7 is_stmt 0 view .LVU1364
 4292 01cc 002D     		cmp	r5, #0
 4293 01ce 5DD1     		bne	.L498
 4294              	.LVL328:
 4295              	.L412:
2320:src/keys.c    **** set_pos:
 4296              		.loc 1 2320 2 is_stmt 1 view .LVU1365
ARM GAS  /tmp/cciIzcMf.s 			page 145


2320:src/keys.c    **** set_pos:
 4297              		.loc 1 2320 6 is_stmt 0 view .LVU1366
 4298 01d0 08F1FF35 		add	r5, r8, #-1
 4299              	.LVL329:
2320:src/keys.c    **** set_pos:
 4300              		.loc 1 2320 6 view .LVU1367
 4301 01d4 77E7     		b	.L413
 4302              	.LVL330:
 4303              	.L397:
2234:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4304              		.loc 1 2234 4 is_stmt 1 view .LVU1368
2234:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4305              		.loc 1 2234 18 is_stmt 0 view .LVU1369
 4306 01d6 0023     		movs	r3, #0
 4307 01d8 3377     		strb	r3, [r6, #28]
2235:src/keys.c    **** 			if (pos >= ctmax)
 4308              		.loc 1 2235 4 is_stmt 1 view .LVU1370
2235:src/keys.c    **** 			if (pos >= ctmax)
 4309              		.loc 1 2235 10 is_stmt 0 view .LVU1371
 4310 01da 06E0     		b	.L416
 4311              	.LVL331:
 4312              	.L499:
2235:src/keys.c    **** 			if (pos >= ctmax)
 4313              		.loc 1 2235 25 discriminator 1 view .LVU1372
 4314 01dc 67B3     		cbz	r7, .L417
 4315              	.LBB442:
 4316              	.LBB443:
2170:src/keys.c    **** }
 4317              		.loc 1 2170 10 view .LVU1373
 4318 01de FFF7FEFF 		bl	current_catalogue
 4319              	.LVL332:
2170:src/keys.c    **** }
 4320              		.loc 1 2170 33 view .LVU1374
 4321 01e2 00F0F000 		and	r0, r0, #240
 4322              	.LBE443:
 4323              	.LBE442:
2235:src/keys.c    **** 			if (pos >= ctmax)
 4324              		.loc 1 2235 37 view .LVU1375
 4325 01e6 F028     		cmp	r0, #240
 4326 01e8 26D1     		bne	.L417
 4327              	.L416:
2235:src/keys.c    **** 			if (pos >= ctmax)
 4328              		.loc 1 2235 61 is_stmt 1 discriminator 3 view .LVU1376
2235:src/keys.c    **** 			if (pos >= ctmax)
 4329              		.loc 1 2235 10 discriminator 3 view .LVU1377
 4330 01ea 0135     		adds	r5, r5, #1
 4331              	.LVL333:
 4332              	.LBB446:
 4333              	.LBI442:
2169:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4334              		.loc 1 2169 12 discriminator 3 view .LVU1378
 4335              	.LBB444:
2170:src/keys.c    **** }
 4336              		.loc 1 2170 2 discriminator 3 view .LVU1379
 4337              	.LBE444:
 4338              	.LBE446:
2235:src/keys.c    **** 			if (pos >= ctmax)
ARM GAS  /tmp/cciIzcMf.s 			page 146


 4339              		.loc 1 2235 10 is_stmt 0 discriminator 3 view .LVU1380
 4340 01ec A845     		cmp	r8, r5
 4341              	.LBB447:
 4342              	.LBB445:
2170:src/keys.c    **** }
 4343              		.loc 1 2170 10 discriminator 3 view .LVU1381
 4344 01ee 2846     		mov	r0, r5
 4345              	.LBE445:
 4346              	.LBE447:
2235:src/keys.c    **** 			if (pos >= ctmax)
 4347              		.loc 1 2235 10 discriminator 3 view .LVU1382
 4348 01f0 F4DC     		bgt	.L499
 4349              	.LVL334:
2322:src/keys.c    **** 		--pos;
 4350              		.loc 1 2322 8 is_stmt 1 view .LVU1383
2237:src/keys.c    **** 			goto set_pos;
 4351              		.loc 1 2237 9 is_stmt 0 view .LVU1384
 4352 01f2 3D46     		mov	r5, r7
 4353              	.LVL335:
2322:src/keys.c    **** 		--pos;
 4354              		.loc 1 2322 8 view .LVU1385
 4355 01f4 07B3     		cbz	r7, .L417
 4356              	.LVL336:
2322:src/keys.c    **** 		--pos;
 4357              		.loc 1 2322 8 view .LVU1386
 4358 01f6 0025     		movs	r5, #0
 4359              	.LVL337:
2322:src/keys.c    **** 		--pos;
 4360              		.loc 1 2322 8 view .LVU1387
 4361 01f8 73E7     		b	.L411
 4362              	.LVL338:
 4363              	.L442:
2295:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 4364              		.loc 1 2295 6 view .LVU1388
 4365 01fa 2B46     		mov	r3, r5
2296:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4366              		.loc 1 2296 3 is_stmt 1 view .LVU1389
2296:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4367              		.loc 1 2296 28 is_stmt 0 view .LVU1390
 4368 01fc 3344     		add	r3, r3, r6
2296:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4369              		.loc 1 2296 24 view .LVU1391
 4370 01fe 0135     		adds	r5, r5, #1
 4371 0200 EDB2     		uxtb	r5, r5
 4372 0202 3577     		strb	r5, [r6, #28]
2296:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4373              		.loc 1 2296 28 view .LVU1392
 4374 0204 83F82040 		strb	r4, [r3, #32]
 4375 0208 30E7     		b	.L410
 4376              	.LVL339:
 4377              	.L492:
2244:src/keys.c    **** 			/*
 4378              		.loc 1 2244 3 is_stmt 1 view .LVU1393
2244:src/keys.c    **** 			/*
 4379              		.loc 1 2244 6 is_stmt 0 view .LVU1394
 4380 020a BAF1120F 		cmp	r10, #18
 4381 020e 21D0     		beq	.L500
ARM GAS  /tmp/cciIzcMf.s 			page 147


 4382              	.L419:
2272:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4383              		.loc 1 2272 8 is_stmt 1 view .LVU1395
2272:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4384              		.loc 1 2272 11 is_stmt 0 view .LVU1396
 4385 0210 2428     		cmp	r0, #36
 4386 0212 85D0     		beq	.L501
 4387              	.LVL340:
 4388              	.L425:
2287:src/keys.c    **** 	reset_shift();
 4389              		.loc 1 2287 2 is_stmt 1 view .LVU1397
 4390              	.LBB448:
 384:src/keys.c    **** {
 4391              		.loc 1 384 12 view .LVU1398
 4392              	.LBB407:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4393              		.loc 1 386 2 view .LVU1399
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4394              		.loc 1 434 2 view .LVU1400
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4395              		.loc 1 434 5 is_stmt 0 view .LVU1401
 4396 0214 0121     		movs	r1, #1
 4397              	.LVL341:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4398              		.loc 1 434 5 view .LVU1402
 4399 0216 0DE7     		b	.L428
 4400              	.LVL342:
 4401              	.L432:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4402              		.loc 1 434 5 view .LVU1403
 4403 0218 96F82030 		ldrb	r3, [r6, #32]	@ zero_extendqisi2
 4404              	.LVL343:
 4405              	.L434:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4406              		.loc 1 434 5 view .LVU1404
 4407              	.LBE407:
 4408              	.LBE448:
 4409              	.LBB449:
2316:src/keys.c    **** 			goto set_pos;
 4410              		.loc 1 2316 3 is_stmt 1 view .LVU1405
2316:src/keys.c    **** 			goto set_pos;
 4411              		.loc 1 2316 6 is_stmt 0 view .LVU1406
 4412 021c 002B     		cmp	r3, #0
 4413 021e 3FF450AF 		beq	.L433
 4414              	.LBE449:
2301:src/keys.c    **** 		char buf[16];
 4415              		.loc 1 2301 29 is_stmt 1 view .LVU1407
 4416 0222 0135     		adds	r5, r5, #1
 4417              	.LVL344:
2301:src/keys.c    **** 		char buf[16];
 4418              		.loc 1 2301 16 view .LVU1408
2301:src/keys.c    **** 		char buf[16];
 4419              		.loc 1 2301 2 is_stmt 0 view .LVU1409
 4420 0224 A845     		cmp	r8, r5
 4421 0226 7FF429AF 		bne	.L430
 4422              	.LVL345:
 4423              	.L488:
ARM GAS  /tmp/cciIzcMf.s 			page 148


2301:src/keys.c    **** 		char buf[16];
 4424              		.loc 1 2301 2 view .LVU1410
 4425 022a D9F80040 		ldr	r4, [r9]
 4426 022e CFE7     		b	.L412
 4427              	.LVL346:
 4428              	.L494:
2301:src/keys.c    **** 		char buf[16];
 4429              		.loc 1 2301 2 view .LVU1411
 4430 0230 3244     		add	r2, r2, r6
 4431              	.LVL347:
2301:src/keys.c    **** 		char buf[16];
 4432              		.loc 1 2301 2 view .LVU1412
 4433 0232 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4434              	.LVL348:
2301:src/keys.c    **** 		char buf[16];
 4435              		.loc 1 2301 2 view .LVU1413
 4436 0236 F1E7     		b	.L434
 4437              	.LVL349:
 4438              	.L417:
2324:src/keys.c    **** 	return STATE_UNFINISHED;
 4439              		.loc 1 2324 15 view .LVU1414
 4440 0238 B4F8DC37 		ldrh	r3, [r4, #2012]
 4441 023c 05F07F05 		and	r5, r5, #127
 4442              	.LVL350:
2324:src/keys.c    **** 	return STATE_UNFINISHED;
 4443              		.loc 1 2324 2 is_stmt 1 view .LVU1415
2324:src/keys.c    **** 	return STATE_UNFINISHED;
 4444              		.loc 1 2324 15 is_stmt 0 view .LVU1416
 4445 0240 65F34B13 		bfi	r3, r5, #5, #7
 4446 0244 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2325:src/keys.c    **** }
 4447              		.loc 1 2325 2 is_stmt 1 view .LVU1417
2325:src/keys.c    **** }
 4448              		.loc 1 2325 9 is_stmt 0 view .LVU1418
 4449 0248 3320     		movs	r0, #51
 4450 024a 51E7     		b	.L502
 4451              	.LVL351:
 4452              	.L493:
2278:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4453              		.loc 1 2278 3 is_stmt 1 view .LVU1419
2278:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4454              		.loc 1 2278 6 is_stmt 0 view .LVU1420
 4455 024c 1028     		cmp	r0, #16
 4456 024e 23D0     		beq	.L503
 4457              	.L427:
2287:src/keys.c    **** 	reset_shift();
 4458              		.loc 1 2287 2 is_stmt 1 view .LVU1421
 4459              	.LVL352:
 4460              	.LBB450:
 384:src/keys.c    **** {
 4461              		.loc 1 384 12 view .LVU1422
 4462              	.LBB408:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4463              		.loc 1 386 2 view .LVU1423
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4464              		.loc 1 434 2 view .LVU1424
 434:src/keys.c    **** 		if (shift == SHIFT_N)
ARM GAS  /tmp/cciIzcMf.s 			page 149


 4465              		.loc 1 434 5 is_stmt 0 view .LVU1425
 4466 0250 0521     		movs	r1, #5
 4467              	.LVL353:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4468              		.loc 1 434 5 view .LVU1426
 4469 0252 EFE6     		b	.L428
 4470              	.LVL354:
 4471              	.L500:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4472              		.loc 1 434 5 view .LVU1427
 4473              	.LBE408:
 4474              	.LBE450:
2244:src/keys.c    **** 			/*
 4475              		.loc 1 2244 29 discriminator 1 view .LVU1428
 4476 0254 0128     		cmp	r0, #1
 4477 0256 DBD1     		bne	.L419
 4478              	.LBB451:
2253:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4479              		.loc 1 2253 4 is_stmt 1 view .LVU1429
2261:src/keys.c    **** 			int i;
 4480              		.loc 1 2261 4 view .LVU1430
2261:src/keys.c    **** 			int i;
 4481              		.loc 1 2261 22 is_stmt 0 view .LVU1431
 4482 0258 2846     		mov	r0, r5
 4483              	.LVL355:
2261:src/keys.c    **** 			int i;
 4484              		.loc 1 2261 22 view .LVU1432
 4485 025a FFF7FEFF 		bl	current_catalogue
 4486              	.LVL356:
2261:src/keys.c    **** 			int i;
 4487              		.loc 1 2261 22 view .LVU1433
 4488 025e 0446     		mov	r4, r0
 4489              	.LVL357:
2262:src/keys.c    **** 
 4490              		.loc 1 2262 4 is_stmt 1 view .LVU1434
2264:src/keys.c    **** 			if (isRARG(op))
 4491              		.loc 1 2264 4 view .LVU1435
 4492 0260 0020     		movs	r0, #0
 4493              	.LVL358:
2264:src/keys.c    **** 			if (isRARG(op))
 4494              		.loc 1 2264 4 is_stmt 0 view .LVU1436
 4495 0262 FFF7FEFF 		bl	init_cat
 4496              	.LVL359:
2265:src/keys.c    **** 				return op ^ 1;
 4497              		.loc 1 2265 4 is_stmt 1 view .LVU1437
2265:src/keys.c    **** 				return op ^ 1;
 4498              		.loc 1 2265 7 is_stmt 0 view .LVU1438
 4499 0266 14F47043 		ands	r3, r4, #61440
 4500 026a 29D0     		beq	.L420
2265:src/keys.c    **** 				return op ^ 1;
 4501              		.loc 1 2265 8 discriminator 1 view .LVU1439
 4502 026c B3F5704F 		cmp	r3, #61440
 4503 0270 26D0     		beq	.L420
2266:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4504              		.loc 1 2266 5 is_stmt 1 view .LVU1440
2266:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4505              		.loc 1 2266 15 is_stmt 0 view .LVU1441
ARM GAS  /tmp/cciIzcMf.s 			page 150


 4506 0272 84F00100 		eor	r0, r4, #1
 4507 0276 60E7     		b	.L392
 4508              	.LVL360:
 4509              	.L496:
2266:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4510              		.loc 1 2266 15 view .LVU1442
 4511              	.LBE451:
2213:src/keys.c    **** 					goto search;
 4512              		.loc 1 2213 9 is_stmt 1 view .LVU1443
2213:src/keys.c    **** 					goto search;
 4513              		.loc 1 2213 13 is_stmt 0 view .LVU1444
 4514 0278 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
 4515              	.LVL361:
2213:src/keys.c    **** 					goto search;
 4516              		.loc 1 2213 13 view .LVU1445
 4517 027a 013D     		subs	r5, r5, #1
 4518 027c EDB2     		uxtb	r5, r5
2213:src/keys.c    **** 					goto search;
 4519              		.loc 1 2213 12 view .LVU1446
 4520 027e 3577     		strb	r5, [r6, #28]
 4521 0280 002D     		cmp	r5, #0
 4522 0282 7FF4F3AE 		bne	.L410
 4523 0286 D9F80040 		ldr	r4, [r9]
 4524 028a 2AE7     		b	.L411
 4525              	.LVL362:
 4526              	.L498:
2230:src/keys.c    **** 			goto set_pos;
 4527              		.loc 1 2230 5 is_stmt 1 view .LVU1447
 4528 028c 013D     		subs	r5, r5, #1
 4529              	.LVL363:
2231:src/keys.c    **** 
 4530              		.loc 1 2231 4 view .LVU1448
 4531 028e 1AE7     		b	.L413
 4532              	.LVL364:
 4533              	.L497:
2231:src/keys.c    **** 
 4534              		.loc 1 2231 4 is_stmt 0 view .LVU1449
 4535 0290 FFF7FEFF 		bl	current_catalogue
 4536              	.LVL365:
2231:src/keys.c    **** 
 4537              		.loc 1 2231 4 view .LVU1450
 4538 0294 0446     		mov	r4, r0
 4539 0296 75E7     		b	.L403
 4540              	.LVL366:
 4541              	.L503:
2278:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4542              		.loc 1 2278 16 discriminator 1 view .LVU1451
 4543 0298 BAF1130F 		cmp	r10, #19
 4544 029c D8D1     		bne	.L427
2279:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4545              		.loc 1 2279 4 is_stmt 1 view .LVU1452
 4546 029e 0020     		movs	r0, #0
 4547              	.LVL367:
2279:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4548              		.loc 1 2279 4 is_stmt 0 view .LVU1453
 4549 02a0 FFF7FEFF 		bl	init_cat
 4550              	.LVL368:
ARM GAS  /tmp/cciIzcMf.s 			page 151


2280:src/keys.c    **** 		}
 4551              		.loc 1 2280 4 is_stmt 1 view .LVU1454
2280:src/keys.c    **** 		}
 4552              		.loc 1 2280 11 is_stmt 0 view .LVU1455
 4553 02a4 40F23D10 		movw	r0, #317
 4554 02a8 47E7     		b	.L392
 4555              	.L404:
 4556              	.LBB452:
2205:src/keys.c    **** 				}
 4557              		.loc 1 2205 6 is_stmt 1 view .LVU1456
 4558              	.LBB435:
 4559              	.LBB436:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4560              		.loc 1 620 5 is_stmt 0 view .LVU1457
 4561 02aa C4F30723 		ubfx	r3, r4, #8, #8
 4562 02ae 012B     		cmp	r3, #1
 4563              	.LBE436:
 4564              	.LBE435:
2205:src/keys.c    **** 				}
 4565              		.loc 1 2205 13 view .LVU1458
 4566 02b0 2046     		mov	r0, r4
 4567              	.LVL369:
 4568              	.LBB438:
 4569              	.LBI435:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4570              		.loc 1 619 12 is_stmt 1 view .LVU1459
 4571              	.LBB437:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4572              		.loc 1 620 2 view .LVU1460
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4573              		.loc 1 620 5 is_stmt 0 view .LVU1461
 4574 02b2 7FF442AF 		bne	.L392
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4575              		.loc 1 620 5 view .LVU1462
 4576 02b6 FFF7FEFF 		bl	check_confirm.part.0
 4577              	.LVL370:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4578              		.loc 1 620 5 view .LVU1463
 4579 02ba 3EE7     		b	.L392
 4580              	.LVL371:
 4581              	.L405:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4582              		.loc 1 620 5 view .LVU1464
 4583              	.LBE437:
 4584              	.LBE438:
 4585              	.LBB439:
2198:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4586              		.loc 1 2198 7 is_stmt 1 view .LVU1465
2198:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4587              		.loc 1 2198 14 is_stmt 0 view .LVU1466
 4588 02bc 2046     		mov	r0, r4
 4589 02be 3CE7     		b	.L392
 4590              	.LVL372:
 4591              	.L420:
2198:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4592              		.loc 1 2198 14 view .LVU1467
 4593 02c0 0B48     		ldr	r0, .L506+20
ARM GAS  /tmp/cciIzcMf.s 			page 152


 4594              	.LBE439:
 4595              	.LBE452:
2176:src/keys.c    **** 	int pos = State.catpos;
 4596              		.loc 1 2176 92 view .LVU1468
 4597 02c2 40F28522 		movw	r2, #645
 4598 02c6 0146     		mov	r1, r0
 4599 02c8 0023     		movs	r3, #0
 4600 02ca 01E0     		b	.L422
 4601              	.LVL373:
 4602              	.L505:
2176:src/keys.c    **** 	int pos = State.catpos;
 4603              		.loc 1 2176 92 view .LVU1469
 4604 02cc 31F8022F 		ldrh	r2, [r1, #2]!
 4605              	.LVL374:
 4606              	.L422:
 4607              	.LBB453:
2268:src/keys.c    **** 					return conv_mapping[i^1];
 4608              		.loc 1 2268 5 is_stmt 1 view .LVU1470
2267:src/keys.c    **** 				if (op == conv_mapping[i])
 4609              		.loc 1 2267 68 view .LVU1471
2268:src/keys.c    **** 					return conv_mapping[i^1];
 4610              		.loc 1 2268 8 is_stmt 0 view .LVU1472
 4611 02d0 A242     		cmp	r2, r4
 4612 02d2 1DD0     		beq	.L504
2267:src/keys.c    **** 				if (op == conv_mapping[i])
 4613              		.loc 1 2267 68 discriminator 2 view .LVU1473
 4614 02d4 0133     		adds	r3, r3, #1
 4615              	.LVL375:
2267:src/keys.c    **** 				if (op == conv_mapping[i])
 4616              		.loc 1 2267 16 is_stmt 1 discriminator 2 view .LVU1474
2267:src/keys.c    **** 				if (op == conv_mapping[i])
 4617              		.loc 1 2267 4 is_stmt 0 discriminator 2 view .LVU1475
 4618 02d6 0C2B     		cmp	r3, #12
 4619 02d8 F8D1     		bne	.L505
 4620 02da 2DE7     		b	.L490
 4621              	.L507:
 4622              		.align	2
 4623              	.L506:
 4624 02dc 00000000 		.word	StateWhileOn
 4625 02e0 00000000 		.word	.LANCHOR2
 4626 02e4 00000000 		.word	.LANCHOR1
 4627 02e8 00000000 		.word	.LANCHOR9
 4628 02ec 00080800 		.word	526336
 4629 02f0 00000000 		.word	.LANCHOR8
 4630 02f4 00000000 		.word	main_ram
 4631 02f8 1F000000 		.word	StateWhileOn+31
 4632              	.LVL376:
 4633              	.L408:
2267:src/keys.c    **** 				if (op == conv_mapping[i])
 4634              		.loc 1 2267 4 discriminator 2 view .LVU1476
 4635              	.LBE453:
 4636              	.LBB454:
 4637              	.LBB440:
2202:src/keys.c    **** 				}
 4638              		.loc 1 2202 7 is_stmt 1 view .LVU1477
 4639              	.LBB432:
 4640              	.LBI432:
ARM GAS  /tmp/cciIzcMf.s 			page 153


 501:src/keys.c    **** 	if (is_bad_cmdline())
 4641              		.loc 1 501 13 view .LVU1478
 4642              	.LBB433:
 502:src/keys.c    **** 		return;
 4643              		.loc 1 502 2 view .LVU1479
 502:src/keys.c    **** 		return;
 4644              		.loc 1 502 6 is_stmt 0 view .LVU1480
 4645 02fc FFF7FEFF 		bl	is_bad_cmdline
 4646              	.LVL377:
 502:src/keys.c    **** 		return;
 4647              		.loc 1 502 5 view .LVU1481
 4648 0300 0028     		cmp	r0, #0
 4649 0302 7FF419AF 		bne	.L490
 4650 0306 2846     		mov	r0, r5
 4651 0308 FFF7FEFF 		bl	init_arg.part.0
 4652              	.LVL378:
 4653              	.LBE433:
 4654              	.LBE432:
 4655              	.LBE440:
 4656              	.LBE454:
2209:src/keys.c    **** 
 4657              		.loc 1 2209 11 view .LVU1482
 4658 030c 3320     		movs	r0, #51
 4659 030e 14E7     		b	.L392
 4660              	.LVL379:
 4661              	.L504:
 4662              	.LBB455:
2269:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4663              		.loc 1 2269 6 is_stmt 1 view .LVU1483
2269:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4664              		.loc 1 2269 27 is_stmt 0 view .LVU1484
 4665 0310 83F00103 		eor	r3, r3, #1
 4666              	.LVL380:
2269:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4667              		.loc 1 2269 25 view .LVU1485
 4668 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4669 0318 0FE7     		b	.L392
 4670              	.LBE455:
 4671              		.cfi_endproc
 4672              	.LFE43:
 4674 031a 00BF     		.section	.text.find_pos,"ax",%progbits
 4675              		.align	1
 4676              		.p2align 2,,3
 4677              		.global	find_pos
 4678              		.syntax unified
 4679              		.thumb
 4680              		.thumb_func
 4681              		.fpu fpv4-sp-d16
 4683              	find_pos:
 4684              	.LVL381:
 4685              	.LFB44:
2329:src/keys.c    **** 	int pos;
 4686              		.loc 1 2329 32 is_stmt 1 view -0
 4687              		.cfi_startproc
 4688              		@ args = 0, pretend = 0, frame = 16
 4689              		@ frame_needed = 0, uses_anonymous_args = 0
2330:src/keys.c    **** 	const int ctmax = current_catalogue_max();
ARM GAS  /tmp/cciIzcMf.s 			page 154


 4690              		.loc 1 2330 2 view .LVU1487
2331:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4691              		.loc 1 2331 2 view .LVU1488
 4692              	.LBB456:
 4693              	.LBI456:
2031:src/keys.c    **** 	// A quick table of catalogue sizes
 4694              		.loc 1 2031 5 view .LVU1489
 4695              	.LBB457:
2034:src/keys.c    **** 	{
 4696              		.loc 1 2034 2 view .LVU1490
2065:src/keys.c    **** #endif
 4697              		.loc 1 2065 2 view .LVU1491
 4698              	.LBE457:
 4699              	.LBE456:
2329:src/keys.c    **** 	int pos;
 4700              		.loc 1 2329 32 is_stmt 0 view .LVU1492
 4701 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4702              		.cfi_def_cfa_offset 32
 4703              		.cfi_offset 4, -32
 4704              		.cfi_offset 5, -28
 4705              		.cfi_offset 6, -24
 4706              		.cfi_offset 7, -20
 4707              		.cfi_offset 8, -16
 4708              		.cfi_offset 9, -12
 4709              		.cfi_offset 10, -8
 4710              		.cfi_offset 14, -4
 4711              	.LBB459:
 4712              	.LBB458:
2065:src/keys.c    **** #endif
 4713              		.loc 1 2065 31 view .LVU1493
 4714 0004 1E4B     		ldr	r3, .L525
2065:src/keys.c    **** #endif
 4715              		.loc 1 2065 24 view .LVU1494
 4716 0006 1F4A     		ldr	r2, .L525+4
2065:src/keys.c    **** #endif
 4717              		.loc 1 2065 31 view .LVU1495
 4718 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2065:src/keys.c    **** #endif
 4719              		.loc 1 2065 24 view .LVU1496
 4720 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4721              	.LVL382:
2065:src/keys.c    **** #endif
 4722              		.loc 1 2065 24 view .LVU1497
 4723              	.LBE458:
 4724              	.LBE459:
2332:src/keys.c    **** 		char buf[16];
 4725              		.loc 1 2332 2 is_stmt 1 view .LVU1498
2332:src/keys.c    **** 		char buf[16];
 4726              		.loc 1 2332 16 view .LVU1499
2329:src/keys.c    **** 	int pos;
 4727              		.loc 1 2329 32 is_stmt 0 view .LVU1500
 4728 000e 84B0     		sub	sp, sp, #16
 4729              		.cfi_def_cfa_offset 48
2332:src/keys.c    **** 		char buf[16];
 4730              		.loc 1 2332 2 view .LVU1501
 4731 0010 BAF1000F 		cmp	r10, #0
 4732 0014 32D0     		beq	.L515
ARM GAS  /tmp/cciIzcMf.s 			page 155


 4733 0016 8146     		mov	r9, r0
2332:src/keys.c    **** 		char buf[16];
 4734              		.loc 1 2332 11 view .LVU1502
 4735 0018 4FF00008 		mov	r8, #0
 4736 001c C0F10107 		rsb	r7, r0, #1
 4737              	.LVL383:
 4738              	.L514:
 4739              	.LBB460:
2333:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4740              		.loc 1 2333 3 is_stmt 1 view .LVU1503
2334:src/keys.c    **** 		int i;
 4741              		.loc 1 2334 3 view .LVU1504
2334:src/keys.c    **** 		int i;
 4742              		.loc 1 2334 21 is_stmt 0 view .LVU1505
 4743 0020 4046     		mov	r0, r8
 4744 0022 FFF7FEFF 		bl	current_catalogue
 4745              	.LVL384:
 4746 0026 6946     		mov	r1, sp
 4747 0028 FFF7FEFF 		bl	catcmd
 4748              	.LVL385:
 4749 002c 0646     		mov	r6, r0
 4750              	.LVL386:
2335:src/keys.c    **** 
 4751              		.loc 1 2335 3 is_stmt 1 view .LVU1506
2337:src/keys.c    **** 			cmd++;
 4752              		.loc 1 2337 3 view .LVU1507
2338:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4753              		.loc 1 2338 4 view .LVU1508
2337:src/keys.c    **** 			cmd++;
 4754              		.loc 1 2337 7 is_stmt 0 view .LVU1509
 4755 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4756              	.LVL387:
2337:src/keys.c    **** 			cmd++;
 4757              		.loc 1 2337 6 view .LVU1510
 4758 0030 1428     		cmp	r0, #20
 4759 0032 04BF     		itt	eq
 4760 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2338:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4761              		.loc 1 2338 7 view .LVU1511
 4762 0036 0136     		addeq	r6, r6, #1
 4763              	.LVL388:
2339:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4764              		.loc 1 2339 3 is_stmt 1 view .LVU1512
2339:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4765              		.loc 1 2339 13 view .LVU1513
2339:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4766              		.loc 1 2339 3 is_stmt 0 view .LVU1514
 4767 0038 A8B1     		cbz	r0, .L516
 4768 003a 09F1FF33 		add	r3, r9, #-1
 4769 003e 04E0     		b	.L513
 4770              	.LVL389:
 4771              	.L524:
 4772              	.LBB461:
2344:src/keys.c    **** 				break;
 4773              		.loc 1 2344 12 view .LVU1515
 4774 0040 12DB     		blt	.L511
 4775              	.LBE461:
ARM GAS  /tmp/cciIzcMf.s 			page 156


2339:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4776              		.loc 1 2339 16 discriminator 2 view .LVU1516
 4777 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4778              	.LVL390:
2339:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4779              		.loc 1 2339 16 discriminator 2 view .LVU1517
 4780 0046 3C44     		add	r4, r4, r7
2339:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4781              		.loc 1 2339 3 discriminator 2 view .LVU1518
 4782 0048 B0B1     		cbz	r0, .L523
 4783              	.LVL391:
 4784              	.L513:
 4785              	.LBB462:
2340:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4786              		.loc 1 2340 4 is_stmt 1 view .LVU1519
 4787 004a 5C1C     		adds	r4, r3, #1
2340:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4788              		.loc 1 2340 18 is_stmt 0 view .LVU1520
 4789 004c FFF7FEFF 		bl	remap_chars
 4790              	.LVL392:
 4791 0050 0546     		mov	r5, r0
2341:src/keys.c    **** 			if (c > cl)
 4792              		.loc 1 2341 19 view .LVU1521
 4793 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4794              	.LVL393:
2341:src/keys.c    **** 			if (c > cl)
 4795              		.loc 1 2341 4 is_stmt 1 view .LVU1522
2341:src/keys.c    **** 			if (c > cl)
 4796              		.loc 1 2341 19 is_stmt 0 view .LVU1523
 4797 0054 FFF7FEFF 		bl	remap_chars
 4798              	.LVL394:
2344:src/keys.c    **** 				break;
 4799              		.loc 1 2344 9 is_stmt 1 view .LVU1524
 4800              	.LBE462:
2339:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4801              		.loc 1 2339 29 view .LVU1525
2339:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4802              		.loc 1 2339 13 view .LVU1526
 4803              	.LBB463:
2342:src/keys.c    **** 				return pos;
 4804              		.loc 1 2342 4 view .LVU1527
2342:src/keys.c    **** 				return pos;
 4805              		.loc 1 2342 7 is_stmt 0 view .LVU1528
 4806 0058 8542     		cmp	r5, r0
 4807 005a 2346     		mov	r3, r4
 4808 005c F0DD     		ble	.L524
 4809              	.LVL395:
 4810              	.L508:
2342:src/keys.c    **** 				return pos;
 4811              		.loc 1 2342 7 view .LVU1529
 4812              	.LBE463:
 4813              	.LBE460:
2351:src/keys.c    **** 
 4814              		.loc 1 2351 1 view .LVU1530
 4815 005e 4046     		mov	r0, r8
 4816 0060 04B0     		add	sp, sp, #16
 4817              		.cfi_remember_state
ARM GAS  /tmp/cciIzcMf.s 			page 157


 4818              		.cfi_def_cfa_offset 32
 4819              		@ sp needed
 4820 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4821              	.LVL396:
 4822              	.L516:
 4823              		.cfi_restore_state
 4824              	.LBB464:
2339:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4825              		.loc 1 2339 3 view .LVU1531
 4826 0066 4C46     		mov	r4, r9
 4827              	.LVL397:
 4828              	.L511:
2347:src/keys.c    **** 			return pos;
 4829              		.loc 1 2347 3 is_stmt 1 view .LVU1532
2347:src/keys.c    **** 			return pos;
 4830              		.loc 1 2347 6 is_stmt 0 view .LVU1533
 4831 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4832 006a 002B     		cmp	r3, #0
 4833 006c F7D0     		beq	.L508
 4834              	.LBE464:
2332:src/keys.c    **** 		char buf[16];
 4835              		.loc 1 2332 29 is_stmt 1 view .LVU1534
 4836 006e 08F10108 		add	r8, r8, #1
 4837              	.LVL398:
2332:src/keys.c    **** 		char buf[16];
 4838              		.loc 1 2332 16 view .LVU1535
2332:src/keys.c    **** 		char buf[16];
 4839              		.loc 1 2332 2 is_stmt 0 view .LVU1536
 4840 0072 D045     		cmp	r8, r10
 4841 0074 D4D1     		bne	.L514
 4842 0076 F2E7     		b	.L508
 4843              	.LVL399:
 4844              	.L523:
2332:src/keys.c    **** 		char buf[16];
 4845              		.loc 1 2332 2 view .LVU1537
 4846 0078 4C44     		add	r4, r4, r9
 4847 007a F5E7     		b	.L511
 4848              	.LVL400:
 4849              	.L515:
2332:src/keys.c    **** 		char buf[16];
 4850              		.loc 1 2332 11 view .LVU1538
 4851 007c D046     		mov	r8, r10
 4852 007e EEE7     		b	.L508
 4853              	.L526:
 4854              		.align	2
 4855              	.L525:
 4856 0080 00000000 		.word	StateWhileOn
 4857 0084 00000000 		.word	.LANCHOR2
 4858              		.cfi_endproc
 4859              	.LFE44:
 4861              		.section	.text.get_alpha_state,"ax",%progbits
 4862              		.align	1
 4863              		.p2align 2,,3
 4864              		.global	get_alpha_state
 4865              		.syntax unified
 4866              		.thumb
 4867              		.thumb_func
ARM GAS  /tmp/cciIzcMf.s 			page 158


 4868              		.fpu fpv4-sp-d16
 4870              	get_alpha_state:
 4871              	.LFB56:
2676:src/keys.c    **** 
2677:src/keys.c    **** 
2678:src/keys.c    **** static int process_registerlist(const keycode c) {
2679:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2680:src/keys.c    **** 	enum shifts shift = reset_shift();
2681:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2682:src/keys.c    **** 	const int g_max = global_regs();
2683:src/keys.c    **** 
2684:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2685:src/keys.c    **** 		if (local_regs())
2686:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2687:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2688:src/keys.c    **** 		goto reset_window;
2689:src/keys.c    **** 	}
2690:src/keys.c    **** 	else if (n <= 9) {
2691:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2692:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2693:src/keys.c    **** 			dv = n;
2694:src/keys.c    **** 		State2.digval = dv;
2695:src/keys.c    **** 		goto reset_window;
2696:src/keys.c    **** 	}
2697:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2698:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2699:src/keys.c    **** 		set_smode(SDISP_SHOW);
2700:src/keys.c    **** 	}
2701:src/keys.c    **** 	else if (n != NO_REG) {
2702:src/keys.c    **** 		State2.digval = n;
2703:src/keys.c    **** 		goto reset_window;
2704:src/keys.c    **** 	}
2705:src/keys.c    **** 
2706:src/keys.c    **** 	switch (c) {
2707:src/keys.c    **** 	case K_DOWN:
2708:src/keys.c    **** 		if (State2.digval > 0) {
2709:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2710:src/keys.c    **** 				State2.digval = global_regs();
2711:src/keys.c    **** 			--State2.digval;
2712:src/keys.c    **** 		}
2713:src/keys.c    **** 		else
2714:src/keys.c    **** 			State2.digval = max - 1;
2715:src/keys.c    **** 		goto reset_window;
2716:src/keys.c    **** 
2717:src/keys.c    **** 	case K_UP:
2718:src/keys.c    **** 		if (State2.digval < max - 1) {
2719:src/keys.c    **** 			State2.digval++;
2720:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2721:src/keys.c    **** 				State2.digval = regX_idx;
2722:src/keys.c    **** 		}
2723:src/keys.c    **** 		else	
2724:src/keys.c    **** 			State2.digval = 0;
2725:src/keys.c    **** 		goto reset_window;
2726:src/keys.c    **** 
2727:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2728:src/keys.c    **** 	case K04:
2729:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
ARM GAS  /tmp/cciIzcMf.s 			page 159


2730:src/keys.c    **** 		goto reset_window;
2731:src/keys.c    **** #endif
2732:src/keys.c    **** 
2733:src/keys.c    **** 	case K24:			
2734:src/keys.c    **** 	//case K60:
2735:src/keys.c    **** 		if (State2.disp_temp)
2736:src/keys.c    **** 			return STATE_UNFINISHED;
2737:src/keys.c    **** 		break;		// Exit doing nothing
2738:src/keys.c    **** 
2739:src/keys.c    **** 	case K20:		// ENTER
2740:src/keys.c    **** 		if (shift == SHIFT_F) {
2741:src/keys.c    **** 			State2.disp_as_alpha = 1;
2742:src/keys.c    **** 			goto reset_window;
2743:src/keys.c    **** 		}
2744:src/keys.c    **** 	case K11:		// RCL
2745:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2746:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2747:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2748:src/keys.c    **** #else
2749:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2750:src/keys.c    **** #endif
2751:src/keys.c    **** 			State2.registerlist = 0;
2752:src/keys.c    **** 			State2.digval = 0;
2753:src/keys.c    **** 			State2.digval2 = 0;
2754:src/keys.c    **** 			return n;
2755:src/keys.c    **** 		}
2756:src/keys.c    **** 	default:
2757:src/keys.c    **** 		return STATE_UNFINISHED;
2758:src/keys.c    **** 	}
2759:src/keys.c    **** 	State2.registerlist = 0;
2760:src/keys.c    **** 	State2.digval = 0;
2761:src/keys.c    **** 	State2.digval2 = 0;
2762:src/keys.c    **** reset_window:
2763:src/keys.c    **** 	State2.window = 0;
2764:src/keys.c    **** 	return STATE_UNFINISHED;
2765:src/keys.c    **** }
2766:src/keys.c    **** 
2767:src/keys.c    **** 
2768:src/keys.c    **** static int process(const int c) {
2769:src/keys.c    ****   const enum shifts shift = cur_shift();
2770:src/keys.c    ****   enum catalogues cat;
2771:src/keys.c    **** 
2772:src/keys.c    ****   if (Running || Pause) {
2773:src/keys.c    ****     /*
2774:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2775:src/keys.c    ****      */
2776:src/keys.c    ****     if (c == K60 || c == K63) {
2777:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2778:src/keys.c    **** 	set_pc(0);
2779:src/keys.c    ****       Pause = 0;
2780:src/keys.c    ****       xeq_xrom();
2781:src/keys.c    ****       set_running_off();
2782:src/keys.c    ****       DispMsg = "Stopped";
2783:src/keys.c    ****       State2.disp_freeze = 0;
2784:src/keys.c    ****       return STATE_UNFINISHED;
2785:src/keys.c    ****     }
2786:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
ARM GAS  /tmp/cciIzcMf.s 			page 160


2787:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2788:src/keys.c    ****       Pause = 0;			// leave PSE statement
2789:src/keys.c    ****       GoFast = 1;
2790:src/keys.c    ****     }
2791:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2792:src/keys.c    ****     return STATE_RUNNING;
2793:src/keys.c    ****   }
2794:src/keys.c    **** 
2795:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2796:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2797:src/keys.c    ****    * if required.
2798:src/keys.c    ****    */
2799:src/keys.c    **** #ifdef DM42
2800:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow)
2801:src/keys.c    **** #else
2802:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
2803:src/keys.c    **** #endif
2804:src/keys.c    ****     {
2805:src/keys.c    ****       soft_init_state();
2806:src/keys.c    ****       return STATE_UNFINISHED;
2807:src/keys.c    ****     }
2808:src/keys.c    **** 
2809:src/keys.c    **** #ifndef CONSOLE
2810:src/keys.c    **** 	if (c == K63 && JustStopped) {
2811:src/keys.c    **** 		// Avoid an accidental restart with R/S
2812:src/keys.c    **** 		JustStopped = 0;
2813:src/keys.c    **** 		return STATE_IGNORE;
2814:src/keys.c    **** 	}
2815:src/keys.c    **** #endif
2816:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2817:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2818:src/keys.c    **** 	 */
2819:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2820:src/keys.c    **** 		CmdLineLength = 0;
2821:src/keys.c    **** 	/*
2822:src/keys.c    **** 	 *  Process the various cases
2823:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2824:src/keys.c    **** 	 */
2825:src/keys.c    **** 	if (State2.confirm)
2826:src/keys.c    **** 		return process_confirm((const keycode)c);
2827:src/keys.c    **** 
2828:src/keys.c    **** 	if (State2.rarg)
2829:src/keys.c    **** 		return process_arg((const keycode)c);
2830:src/keys.c    **** 
2831:src/keys.c    **** 	if (State2.gtodot)
2832:src/keys.c    **** 		return process_gtodot((const keycode)c);
2833:src/keys.c    **** 
2834:src/keys.c    **** 	if (State2.hyp)
2835:src/keys.c    **** 		return process_hyp((const keycode)c);
2836:src/keys.c    **** 
2837:src/keys.c    **** 	if (State2.test != TST_NONE)
2838:src/keys.c    **** 		return process_test((const keycode)c);
2839:src/keys.c    **** 
2840:src/keys.c    **** 	if (State2.status)
2841:src/keys.c    **** 		return process_status((const keycode)c);
2842:src/keys.c    **** 
2843:src/keys.c    **** 	/*
ARM GAS  /tmp/cciIzcMf.s 			page 161


2844:src/keys.c    **** 	 *  Process shift keys directly
2845:src/keys.c    **** 	 */
2846:src/keys.c    **** 	if (c == K_F) {
2847:src/keys.c    **** 		toggle_shift(SHIFT_F);
2848:src/keys.c    **** 		return STATE_UNFINISHED;
2849:src/keys.c    **** 	}
2850:src/keys.c    **** 	if (c == K_G) {
2851:src/keys.c    **** 		toggle_shift(SHIFT_G);
2852:src/keys.c    **** 		return STATE_UNFINISHED;
2853:src/keys.c    **** 	}
2854:src/keys.c    **** 	if (c == K_H) {
2855:src/keys.c    **** 		toggle_shift(SHIFT_H);
2856:src/keys.c    **** 		State2.arrow = 0;
2857:src/keys.c    **** 		return STATE_UNFINISHED;
2858:src/keys.c    **** 	}
2859:src/keys.c    **** 	/*
2860:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2861:src/keys.c    **** 	 */
2862:src/keys.c    **** 	// print_debug (2, c);
2863:src/keys.c    **** 	if (State2.arrow)
2864:src/keys.c    **** 		return process_arrow((const keycode)c);
2865:src/keys.c    **** 
2866:src/keys.c    **** 	/*
2867:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2868:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2869:src/keys.c    **** 	 * works and were not
2870:src/keys.c    **** 	 */
2871:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2872:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2873:src/keys.c    **** 		if (is_bad_cmdline())
2874:src/keys.c    **** 			return STATE_UNFINISHED;
2875:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2876:src/keys.c    **** 		init_cat( cat );
2877:src/keys.c    **** 		return STATE_UNFINISHED;
2878:src/keys.c    **** 	}
2879:src/keys.c    **** 
2880:src/keys.c    **** 	/*
2881:src/keys.c    **** 	 *  More handlers...
2882:src/keys.c    **** 	 */
2883:src/keys.c    **** 	if (State2.multi)
2884:src/keys.c    **** 		return process_multi((const keycode)c);
2885:src/keys.c    **** 
2886:src/keys.c    **** 	if (State2.labellist)
2887:src/keys.c    **** 		return process_labellist((const keycode)c);
2888:src/keys.c    **** 
2889:src/keys.c    **** 	if (State2.registerlist)
2890:src/keys.c    **** 		return process_registerlist((const keycode)c);
2891:src/keys.c    **** 
2892:src/keys.c    **** 	if (State2.catalogue)
2893:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2894:src/keys.c    **** 
2895:src/keys.c    **** 	if (State2.alphas) {
2896:src/keys.c    **** #ifndef INFRARED
2897:src/keys.c    **** 		return process_alpha((const keycode)c);
2898:src/keys.c    **** #else
2899:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2900:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
ARM GAS  /tmp/cciIzcMf.s 			page 162


2901:src/keys.c    **** 			print_tab(0);
2902:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2903:src/keys.c    **** 		}
2904:src/keys.c    **** 		return i;
2905:src/keys.c    **** #endif
2906:src/keys.c    **** 	}
2907:src/keys.c    **** 
2908:src/keys.c    **** 	if (State2.cmplx) {
2909:src/keys.c    **** 		return process_cmplx((const keycode)c);
2910:src/keys.c    **** 	} else {
2911:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2912:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2913:src/keys.c    **** 		if (shift == SHIFT_H)
2914:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2915:src/keys.c    **** 		// print_debug (3, c);
2916:src/keys.c    **** 		return process_normal((const keycode)c);
2917:src/keys.c    **** 	}
2918:src/keys.c    **** }
2919:src/keys.c    **** 
2920:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4872              		.loc 1 2920 40 is_stmt 1 view -0
 4873              		.cfi_startproc
 4874              		@ args = 0, pretend = 0, frame = 0
 4875              		@ frame_needed = 0, uses_anonymous_args = 0
 4876              		@ link register save eliminated.
2921:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4877              		.loc 1 2921 4 view .LVU1540
 4878              		.loc 1 2921 53 is_stmt 0 view .LVU1541
 4879 0000 074B     		ldr	r3, .L532
 4880              		.loc 1 2921 44 view .LVU1542
 4881 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4882 0004 1AB9     		cbnz	r2, .L530
2922:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2923:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE) );
 4883              		.loc 1 2923 5 discriminator 2 view .LVU1543
 4884 0006 5969     		ldr	r1, [r3, #20]
 4885 0008 064A     		ldr	r2, .L532+4
 4886 000a 0A40     		ands	r2, r2, r1
 4887 000c 0AB1     		cbz	r2, .L531
 4888              	.L530:
 4889 000e 0120     		movs	r0, #1
2924:src/keys.c    ****  }
 4890              		.loc 1 2924 2 view .LVU1544
 4891 0010 7047     		bx	lr
 4892              	.L531:
2923:src/keys.c    ****  }
 4893              		.loc 1 2923 42 discriminator 3 view .LVU1545
 4894 0012 D889     		ldrh	r0, [r3, #14]
 4895 0014 B0F5E060 		subs	r0, r0, #1792
 4896 0018 18BF     		it	ne
 4897 001a 0120     		movne	r0, #1
 4898 001c 7047     		bx	lr
 4899              	.L533:
 4900 001e 00BF     		.align	2
 4901              	.L532:
 4902 0020 00000000 		.word	StateWhileOn
 4903 0024 0709280C 		.word	203950343
ARM GAS  /tmp/cciIzcMf.s 			page 163


 4904              		.cfi_endproc
 4905              	.LFE56:
 4907              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4908              		.align	2
 4909              	.LC0:
 4910 0000 52554E00 		.ascii	"RUN\000"
 4911              		.align	2
 4912              	.LC1:
 4913 0004 4E554C4C 		.ascii	"NULL\000"
 4913      00
 4914 0009 000000   		.align	2
 4915              	.LC2:
 4916 000c 53746F70 		.ascii	"Stopped\000"
 4916      70656400 
 4917              		.section	.text.process_keycode,"ax",%progbits
 4918              		.align	1
 4919              		.p2align 2,,3
 4920              		.global	process_keycode
 4921              		.syntax unified
 4922              		.thumb
 4923              		.thumb_func
 4924              		.fpu fpv4-sp-d16
 4926              	process_keycode:
 4927              	.LVL401:
 4928              	.LFB58:
2925:src/keys.c    **** 
2926:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2927:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
2928:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
2929:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
2930:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
2931:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
2932:src/keys.c    ****        // Was error just wait for confirmation
2933:src/keys.c    ****        wait_for_key_press();
2934:src/keys.c    ****      }
2935:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
2936:src/keys.c    ****      return;
2937:src/keys.c    ****    }
2938:src/keys.c    ****    process_keycode ( remapped.key_34s );
2939:src/keys.c    ****  }
2940:src/keys.c    ****  
2941:src/keys.c    **** /*
2942:src/keys.c    ****  *  Fed with key codes by the event loop
2943:src/keys.c    ****  */
2944:src/keys.c    **** void process_keycode(int c)
2945:src/keys.c    **** {
 4929              		.loc 1 2945 1 is_stmt 1 view -0
 4930              		.cfi_startproc
 4931              		@ args = 0, pretend = 0, frame = 8
 4932              		@ frame_needed = 0, uses_anonymous_args = 0
2946:src/keys.c    ****   static int was_paused;
 4933              		.loc 1 2946 3 view .LVU1547
2947:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2948:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4934              		.loc 1 2948 3 view .LVU1548
2949:src/keys.c    ****   if (was_paused && Pause == 0) {
 4935              		.loc 1 2949 3 view .LVU1549
ARM GAS  /tmp/cciIzcMf.s 			page 164


2945:src/keys.c    ****   static int was_paused;
 4936              		.loc 1 2945 1 is_stmt 0 view .LVU1550
 4937 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4938              		.cfi_def_cfa_offset 36
 4939              		.cfi_offset 4, -36
 4940              		.cfi_offset 5, -32
 4941              		.cfi_offset 6, -28
 4942              		.cfi_offset 7, -24
 4943              		.cfi_offset 8, -20
 4944              		.cfi_offset 9, -16
 4945              		.cfi_offset 10, -12
 4946              		.cfi_offset 11, -8
 4947              		.cfi_offset 14, -4
 4948              		.loc 1 2949 7 view .LVU1551
 4949 0004 A84E     		ldr	r6, .L1155
 4950              		.loc 1 2949 27 view .LVU1552
 4951 0006 A94D     		ldr	r5, .L1155+4
 4952              		.loc 1 2949 6 view .LVU1553
 4953 0008 3368     		ldr	r3, [r6]
2945:src/keys.c    ****   static int was_paused;
 4954              		.loc 1 2945 1 view .LVU1554
 4955 000a 83B0     		sub	sp, sp, #12
 4956              		.cfi_def_cfa_offset 48
2945:src/keys.c    ****   static int was_paused;
 4957              		.loc 1 2945 1 view .LVU1555
 4958 000c 0446     		mov	r4, r0
 4959              		.loc 1 2949 6 view .LVU1556
 4960 000e 1BB1     		cbz	r3, .L535
 4961              		.loc 1 2949 27 discriminator 1 view .LVU1557
 4962 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4963              		.loc 1 2949 18 discriminator 1 view .LVU1558
 4964 0012 002B     		cmp	r3, #0
 4965 0014 00F0CE80 		beq	.L1076
 4966              	.LVL402:
 4967              	.L535:
2950:src/keys.c    ****     /*
2951:src/keys.c    ****      *  Continue XROM execution after a pause
2952:src/keys.c    ****      */
2953:src/keys.c    ****     xeq_xrom();
2954:src/keys.c    ****   }
2955:src/keys.c    ****   was_paused = Pause;
 4968              		.loc 1 2955 3 is_stmt 1 view .LVU1559
 4969              		.loc 1 2955 14 is_stmt 0 view .LVU1560
 4970 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4971 001a 3360     		str	r3, [r6]
2956:src/keys.c    ****   if (c == K_NOP) {
 4972              		.loc 1 2956 3 is_stmt 1 view .LVU1561
 4973              		.loc 1 2956 6 is_stmt 0 view .LVU1562
 4974 001c 2E2C     		cmp	r4, #46
 4975 001e 00F0C380 		beq	.L1077
2957:src/keys.c    ****     OpCode = 0;
2958:src/keys.c    ****   }
2959:src/keys.c    ****   else if (c == K_HEARTBEAT) {
 4976              		.loc 1 2959 8 is_stmt 1 view .LVU1563
 4977              		.loc 1 2959 11 is_stmt 0 view .LVU1564
 4978 0022 622C     		cmp	r4, #98
 4979 0024 6DD0     		beq	.L1078
ARM GAS  /tmp/cciIzcMf.s 			page 165


2960:src/keys.c    ****     /*
2961:src/keys.c    ****      *  Heartbeat processing goes here.
2962:src/keys.c    ****      *  This is totally thread safe!
2963:src/keys.c    ****      */
2964:src/keys.c    ****     if (Keyticks >= 2) {
2965:src/keys.c    ****       /*
2966:src/keys.c    ****        *  Some time has passed after last key press
2967:src/keys.c    ****        */
2968:src/keys.c    ****       if (OpCode != 0) {
2969:src/keys.c    **** 	/*
2970:src/keys.c    **** 	 *  Handle command display and NULL here
2971:src/keys.c    **** 	 */
2972:src/keys.c    **** 	if (OpCodeDisplayPending) {
2973:src/keys.c    **** 	  /*
2974:src/keys.c    **** 	   *  Show command to the user
2975:src/keys.c    **** 	   */
2976:src/keys.c    **** 	  OpCodeDisplayPending = 0;
2977:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
2978:src/keys.c    **** 	    DispMsg = "RUN";
2979:src/keys.c    **** 	  }
2980:src/keys.c    **** 	  else {
2981:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
2982:src/keys.c    **** 	    DispMsg = TraceBuffer;
2983:src/keys.c    **** 	  }
2984:src/keys.c    **** 	  display();
2985:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
2986:src/keys.c    **** 	}
2987:src/keys.c    ****     else if (Keyticks > 12) {
2988:src/keys.c    **** 	  /*
2989:src/keys.c    **** 	   *  Key is too long held down
2990:src/keys.c    **** 	   */
2991:src/keys.c    **** 	  OpCode = 0;
2992:src/keys.c    **** 	  message("NULL", CNULL);
2993:src/keys.c    **** 	  // Force display update on key-up
2994:src/keys.c    **** 	  State2.disp_temp = 0;
2995:src/keys.c    **** 	}
2996:src/keys.c    ****       }
2997:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
2998:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
2999:src/keys.c    **** 	State2.shifts = SHIFT_N;
3000:src/keys.c    ****       }
3001:src/keys.c    ****     }
3002:src/keys.c    **** 
3003:src/keys.c    ****     /*
3004:src/keys.c    ****      *  Serve the watchdog
3005:src/keys.c    ****      */
3006:src/keys.c    ****     watchdog();
3007:src/keys.c    **** 
3008:src/keys.c    **** #ifndef CONSOLE
3009:src/keys.c    ****     /*
3010:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3011:src/keys.c    ****      */
3012:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3013:src/keys.c    ****       JustStopped = 0;
3014:src/keys.c    ****     }
3015:src/keys.c    **** #endif
3016:src/keys.c    **** 
ARM GAS  /tmp/cciIzcMf.s 			page 166


3017:src/keys.c    ****     /*
3018:src/keys.c    ****      *  Do nothing if not running a program
3019:src/keys.c    ****      */
3020:src/keys.c    ****     if (!Running && ! Pause)
3021:src/keys.c    ****       return;
3022:src/keys.c    ****   }
3023:src/keys.c    ****   else {
3024:src/keys.c    ****     /*
3025:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3026:src/keys.c    ****      */
3027:src/keys.c    ****     xeq_init_contexts();
 4980              		.loc 1 3027 5 is_stmt 1 view .LVU1565
3028:src/keys.c    ****     State2.wascomplex = 0;
 4981              		.loc 1 3028 23 is_stmt 0 view .LVU1566
 4982 0026 DFF8A082 		ldr	r8, .L1155+32
3027:src/keys.c    ****     State2.wascomplex = 0;
 4983              		.loc 1 3027 5 view .LVU1567
 4984 002a FFF7FEFF 		bl	xeq_init_contexts
 4985              	.LVL403:
 4986              		.loc 1 3028 5 is_stmt 1 view .LVU1568
 4987              		.loc 1 3028 23 is_stmt 0 view .LVU1569
 4988 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3029:src/keys.c    **** 
3030:src/keys.c    ****     if (is_dot(RPN)) {
 4989              		.loc 1 3030 9 view .LVU1570
 4990 0032 8D20     		movs	r0, #141
3028:src/keys.c    **** 
 4991              		.loc 1 3028 23 view .LVU1571
 4992 0034 6FF38713 		bfc	r3, #6, #2
 4993 0038 88F81430 		strb	r3, [r8, #20]
 4994              		.loc 1 3030 5 is_stmt 1 view .LVU1572
 4995              		.loc 1 3030 9 is_stmt 0 view .LVU1573
 4996 003c FFF7FEFF 		bl	is_dot
 4997              	.LVL404:
 4998              		.loc 1 3030 8 view .LVU1574
 4999 0040 0028     		cmp	r0, #0
 5000 0042 40F0DE81 		bne	.L1079
 5001              	.L553:
3031:src/keys.c    ****       /*
3032:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3033:src/keys.c    ****        */
3034:src/keys.c    ****       clr_dot(RPN);
3035:src/keys.c    ****       finish_RPN(); // RPN
3036:src/keys.c    ****     }
3037:src/keys.c    **** 
3038:src/keys.c    **** #ifndef CONSOLE
3039:src/keys.c    ****     /*
3040:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3041:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3042:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3043:src/keys.c    ****      *  an accidental restart of the program.
3044:src/keys.c    ****      */
3045:src/keys.c    ****     if (c != K63)
 5002              		.loc 1 3045 5 is_stmt 1 view .LVU1575
 5003              		.loc 1 3045 8 is_stmt 0 view .LVU1576
 5004 0046 272C     		cmp	r4, #39
 5005 0048 00F0D881 		beq	.L555
ARM GAS  /tmp/cciIzcMf.s 			page 167


3046:src/keys.c    ****       JustStopped = 0;
 5006              		.loc 1 3046 7 is_stmt 1 view .LVU1577
 5007              		.loc 1 3046 19 is_stmt 0 view .LVU1578
 5008 004c 984B     		ldr	r3, .L1155+8
 5009 004e 0022     		movs	r2, #0
3047:src/keys.c    **** #endif
3048:src/keys.c    ****   }
3049:src/keys.c    **** 
3050:src/keys.c    ****   /*
3051:src/keys.c    ****    *  Handle key release
3052:src/keys.c    ****    */
3053:src/keys.c    ****   if (c == K_RELEASE) {
 5010              		.loc 1 3053 6 view .LVU1579
 5011 0050 632C     		cmp	r4, #99
3046:src/keys.c    ****       JustStopped = 0;
 5012              		.loc 1 3046 19 view .LVU1580
 5013 0052 1A60     		str	r2, [r3]
 5014              		.loc 1 3053 3 is_stmt 1 view .LVU1581
 5015              		.loc 1 3053 6 is_stmt 0 view .LVU1582
 5016 0054 40F0D281 		bne	.L555
3054:src/keys.c    ****     if (OpCode != 0) {
 5017              		.loc 1 3054 5 is_stmt 1 view .LVU1583
 5018              		.loc 1 3054 16 is_stmt 0 view .LVU1584
 5019 0058 964B     		ldr	r3, .L1155+12
 5020 005a 1C68     		ldr	r4, [r3]
 5021              	.LVL405:
 5022              		.loc 1 3054 8 view .LVU1585
 5023 005c 002C     		cmp	r4, #0
 5024 005e 00F0DA81 		beq	.L556
3055:src/keys.c    ****       /*
3056:src/keys.c    ****        * Execute the key on release
3057:src/keys.c    ****        */
3058:src/keys.c    ****       GoFast = 1;
 5025              		.loc 1 3058 7 is_stmt 1 view .LVU1586
 5026              		.loc 1 3058 14 is_stmt 0 view .LVU1587
 5027 0062 9549     		ldr	r1, .L1155+16
3059:src/keys.c    ****       c = OpCode;
3060:src/keys.c    ****       OpCode = 0;
 5028              		.loc 1 3060 14 view .LVU1588
 5029 0064 1A60     		str	r2, [r3]
3058:src/keys.c    ****       c = OpCode;
 5030              		.loc 1 3058 14 view .LVU1589
 5031 0066 0120     		movs	r0, #1
3061:src/keys.c    **** 
3062:src/keys.c    ****       if (c == STATE_SST)
 5032              		.loc 1 3062 10 view .LVU1590
 5033 0068 2E2C     		cmp	r4, #46
3059:src/keys.c    ****       OpCode = 0;
 5034              		.loc 1 3059 9 view .LVU1591
 5035 006a A346     		mov	fp, r4
3058:src/keys.c    ****       c = OpCode;
 5036              		.loc 1 3058 14 view .LVU1592
 5037 006c 0860     		str	r0, [r1]
3059:src/keys.c    ****       OpCode = 0;
 5038              		.loc 1 3059 7 is_stmt 1 view .LVU1593
 5039              	.LVL406:
3060:src/keys.c    **** 
ARM GAS  /tmp/cciIzcMf.s 			page 168


 5040              		.loc 1 3060 7 view .LVU1594
 5041              		.loc 1 3062 7 view .LVU1595
 5042              		.loc 1 3062 10 is_stmt 0 view .LVU1596
 5043 006e 00F0E681 		beq	.L1080
3063:src/keys.c    **** 	xeq_sst_bst(1);
3064:src/keys.c    ****       else {
3065:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5044              		.loc 1 3065 2 is_stmt 1 view .LVU1597
 5045              		.loc 1 3065 5 is_stmt 0 view .LVU1598
 5046 0072 B4F5817F 		cmp	r4, #258
 5047 0076 04D0     		beq	.L562
 5048              		.loc 1 3065 29 discriminator 1 view .LVU1599
 5049 0078 40F23F13 		movw	r3, #319
 5050 007c 9C42     		cmp	r4, r3
 5051 007e 40F09C80 		bne	.L1081
 5052              	.L562:
3066:src/keys.c    **** 	  xeq(c);
 5053              		.loc 1 3066 4 is_stmt 1 view .LVU1600
3067:src/keys.c    **** 	  if (Running || Pause)
 5054              		.loc 1 3067 8 is_stmt 0 view .LVU1601
 5055 0082 8E4E     		ldr	r6, .L1155+20
3066:src/keys.c    **** 	  xeq(c);
 5056              		.loc 1 3066 4 view .LVU1602
 5057 0084 2046     		mov	r0, r4
 5058 0086 FFF7FEFF 		bl	xeq
 5059              	.LVL407:
 5060              		.loc 1 3067 4 is_stmt 1 view .LVU1603
 5061              		.loc 1 3067 7 is_stmt 0 view .LVU1604
 5062 008a 3368     		ldr	r3, [r6]
 5063 008c 0BB9     		cbnz	r3, .L560
 5064              		.loc 1 3067 16 discriminator 1 view .LVU1605
 5065 008e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5066 0090 0BB1     		cbz	r3, .L558
 5067              	.L560:
3068:src/keys.c    **** 	    xeqprog();
 5068              		.loc 1 3068 6 is_stmt 1 view .LVU1606
 5069 0092 FFF7FEFF 		bl	xeqprog
 5070              	.LVL408:
 5071              	.L558:
3069:src/keys.c    **** 	}
3070:src/keys.c    ****       }
3071:src/keys.c    ****       dot(RPN, ShowRPN);
 5072              		.loc 1 3071 7 view .LVU1607
 5073 0096 8A4C     		ldr	r4, .L1155+24
 5074              	.LVL409:
 5075              		.loc 1 3071 7 is_stmt 0 view .LVU1608
 5076 0098 8D20     		movs	r0, #141
 5077 009a 2168     		ldr	r1, [r4]
 5078 009c FFF7FEFF 		bl	dot
 5079              	.LVL410:
3072:src/keys.c    ****     }
3073:src/keys.c    ****     else {
3074:src/keys.c    ****       // Ignore key-up if no operation was pending
3075:src/keys.c    ****       dot(RPN, ShowRPN);
3076:src/keys.c    **** #ifndef CONSOLE
3077:src/keys.c    ****       if (! State2.disp_temp ) {
3078:src/keys.c    **** 	if (!WasDataEntry) {
ARM GAS  /tmp/cciIzcMf.s 			page 169


3079:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3080:src/keys.c    **** 	  display();
3081:src/keys.c    **** 	}
3082:src/keys.c    **** 	else {
3083:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3084:src/keys.c    **** 	}
3085:src/keys.c    ****       }
3086:src/keys.c    **** #endif
3087:src/keys.c    ****       return;
3088:src/keys.c    ****     }
3089:src/keys.c    **** 
3090:src/keys.c    ****     /*
3091:src/keys.c    ****      *  Turn on the RPN symbol if desired
3092:src/keys.c    ****      */
3093:src/keys.c    ****     if (ShowRPN) {
 5080              		.loc 1 3093 5 is_stmt 1 view .LVU1609
 5081              		.loc 1 3093 9 is_stmt 0 view .LVU1610
 5082 00a0 2768     		ldr	r7, [r4]
 5083              		.loc 1 3093 8 view .LVU1611
 5084 00a2 002F     		cmp	r7, #0
 5085 00a4 40F0B381 		bne	.L1082
 5086              	.LVL411:
 5087              	.L565:
3094:src/keys.c    ****       finish_RPN(); // RPN
3095:src/keys.c    ****     }
3096:src/keys.c    ****   }
3097:src/keys.c    ****   else {
3098:src/keys.c    ****     /*
3099:src/keys.c    ****      *  Decode the key 
3100:src/keys.c    ****      */
3101:src/keys.c    ****     // print_debug (100, c);
3102:src/keys.c    ****     WasDataEntry = 0;
3103:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3104:src/keys.c    ****     c = process(c);		// returns an op-code or state
3105:src/keys.c    ****     switch (c) {
3106:src/keys.c    ****     case STATE_SST:
3107:src/keys.c    ****       OpCode = c;
3108:src/keys.c    ****       OpCodeDisplayPending = 0;
3109:src/keys.c    ****       xeq_sst_bst(0);
3110:src/keys.c    ****       break;
3111:src/keys.c    **** 
3112:src/keys.c    ****     case STATE_BST:
3113:src/keys.c    ****       xeq_sst_bst(-1);
3114:src/keys.c    ****       break;
3115:src/keys.c    **** 
3116:src/keys.c    ****     case STATE_BACKSPACE:
3117:src/keys.c    ****       if (! State2.runmode)
3118:src/keys.c    **** 	delprog();
3119:src/keys.c    ****       else if (State2.alphas) {
3120:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3121:src/keys.c    **** 	if (p > Alpha)
3122:src/keys.c    **** 	  *--p = '\0';
3123:src/keys.c    ****       }
3124:src/keys.c    ****       break;
3125:src/keys.c    **** 
3126:src/keys.c    ****     case STATE_RUNNING:
3127:src/keys.c    ****       xeqprog();  // continue execution
ARM GAS  /tmp/cciIzcMf.s 			page 170


3128:src/keys.c    ****       break;
3129:src/keys.c    **** 
3130:src/keys.c    ****     case STATE_WINDOWRIGHT:
3131:src/keys.c    ****     case STATE_WINDOWLEFT:
3132:src/keys.c    ****       if (!is_bad_cmdline())
3133:src/keys.c    **** 	set_window(c);
3134:src/keys.c    ****       break;
3135:src/keys.c    **** 
3136:src/keys.c    ****     case STATE_UNFINISHED:
3137:src/keys.c    ****     case STATE_IGNORE:
3138:src/keys.c    ****       break;
3139:src/keys.c    **** 
3140:src/keys.c    ****     default:
3141:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3142:src/keys.c    **** 	NonProgrammable = 0;
3143:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3144:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3145:src/keys.c    **** 	    // Data entry key
3146:src/keys.c    **** #ifndef CONSOLE
3147:src/keys.c    **** 	    WasDataEntry = 1;
3148:src/keys.c    **** #endif
3149:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3150:src/keys.c    **** 	    xeq(c);
3151:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3152:src/keys.c    **** 	  }
3153:src/keys.c    **** 	}
3154:src/keys.c    **** 	else {
3155:src/keys.c    **** 	  // Save the op-code for execution on key-up
3156:src/keys.c    **** 	  OpCode = c;
3157:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3158:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3159:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3160:src/keys.c    **** 	}
3161:src/keys.c    ****       }
3162:src/keys.c    ****       else {
3163:src/keys.c    **** 	stoprog(c);
3164:src/keys.c    ****       }
3165:src/keys.c    ****     }
3166:src/keys.c    ****   }
3167:src/keys.c    ****   if (! Running && ! Pause
 5088              		.loc 1 3167 3 is_stmt 1 view .LVU1612
 5089              		.loc 1 3167 6 is_stmt 0 view .LVU1613
 5090 00a8 3368     		ldr	r3, [r6]
 5091 00aa 002B     		cmp	r3, #0
 5092 00ac 40F08781 		bne	.L1070
 5093              	.LVL412:
 5094              	.L579:
 5095              		.loc 1 3167 20 discriminator 1 view .LVU1614
 5096 00b0 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5097              		.loc 1 3167 17 discriminator 1 view .LVU1615
 5098 00b2 002B     		cmp	r3, #0
 5099 00b4 40F08381 		bne	.L1070
3168:src/keys.c    **** #ifndef CONSOLE
3169:src/keys.c    ****       && ! JustStopped
 5100              		.loc 1 3169 10 view .LVU1616
 5101 00b8 7D4B     		ldr	r3, .L1155+8
3170:src/keys.c    **** #endif
ARM GAS  /tmp/cciIzcMf.s 			page 171


3171:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 5102              		.loc 1 3171 10 view .LVU1617
 5103 00ba 824C     		ldr	r4, .L1155+28
 5104 00bc 1B68     		ldr	r3, [r3]
 5105 00be 2268     		ldr	r2, [r4]
 5106              		.loc 1 3171 7 view .LVU1618
 5107 00c0 1343     		orrs	r3, r3, r2
 5108 00c2 19D1     		bne	.L839
 5109              		.loc 1 3171 26 discriminator 1 view .LVU1619
 5110 00c4 BBF1320F 		cmp	fp, #50
 5111 00c8 16D0     		beq	.L839
 5112              	.LBB639:
3172:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5113              		.loc 1 3172 5 is_stmt 1 view .LVU1620
 5114              		.loc 1 3172 15 is_stmt 0 view .LVU1621
 5115 00ca DFF81892 		ldr	r9, .L1155+60
 5116 00ce D9F80050 		ldr	r5, [r9]
 5117              	.LVL413:
3173:src/keys.c    **** 
3174:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 5118              		.loc 1 3174 5 is_stmt 1 view .LVU1622
 5119              		.loc 1 3174 21 is_stmt 0 view .LVU1623
 5120 00d2 BBF1000F 		cmp	fp, #0
 5121 00d6 09D0     		beq	.L841
 5122              		.loc 1 3174 49 discriminator 1 view .LVU1624
 5123 00d8 002F     		cmp	r7, #0
 5124 00da 40F04F85 		bne	.L893
 5125              		.loc 1 3174 66 discriminator 3 view .LVU1625
 5126 00de 7A4B     		ldr	r3, .L1155+32
 5127 00e0 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 5128              		.loc 1 3174 21 discriminator 3 view .LVU1626
 5129 00e2 9807     		lsls	r0, r3, #30
 5130 00e4 00F1F185 		bmi	.L894
 5131 00e8 05F0010B 		and	fp, r5, #1
 5132              	.LVL414:
 5133              	.L841:
 5134              		.loc 1 3174 18 discriminator 8 view .LVU1627
 5135 00ec C9F800B0 		str	fp, [r9]
3175:src/keys.c    ****     display();
 5136              		.loc 1 3175 5 is_stmt 1 discriminator 8 view .LVU1628
 5137 00f0 FFF7FEFF 		bl	display
 5138              	.LVL415:
3176:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5139              		.loc 1 3176 5 discriminator 8 view .LVU1629
 5140              		.loc 1 3176 18 is_stmt 0 discriminator 8 view .LVU1630
 5141 00f4 C9F80050 		str	r5, [r9]
 5142              	.LVL416:
 5143              	.L839:
 5144              		.loc 1 3176 18 discriminator 8 view .LVU1631
 5145              	.LBE639:
3177:src/keys.c    ****   }
3178:src/keys.c    **** 
3179:src/keys.c    ****  no_display:
3180:src/keys.c    ****   JustDisplayed = 0;
 5146              		.loc 1 3180 3 is_stmt 1 view .LVU1632
 5147              		.loc 1 3180 17 is_stmt 0 view .LVU1633
 5148 00f8 0023     		movs	r3, #0
ARM GAS  /tmp/cciIzcMf.s 			page 172


 5149 00fa 2360     		str	r3, [r4]
3181:src/keys.c    ****   watchdog();
 5150              		.loc 1 3181 13 is_stmt 1 view .LVU1634
 5151              	.L534:
3182:src/keys.c    **** }
 5152              		.loc 1 3182 1 is_stmt 0 view .LVU1635
 5153 00fc 03B0     		add	sp, sp, #12
 5154              		.cfi_remember_state
 5155              		.cfi_def_cfa_offset 36
 5156              		@ sp needed
 5157 00fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5158              	.LVL417:
 5159              	.L1078:
 5160              		.cfi_restore_state
2964:src/keys.c    ****       /*
 5161              		.loc 1 2964 5 is_stmt 1 view .LVU1636
2964:src/keys.c    ****       /*
 5162              		.loc 1 2964 9 is_stmt 0 view .LVU1637
 5163 0102 FFF7FEFF 		bl	keyticks
 5164              	.LVL418:
2964:src/keys.c    ****       /*
 5165              		.loc 1 2964 8 view .LVU1638
 5166 0106 0128     		cmp	r0, #1
 5167 0108 1BDD     		ble	.L540
2968:src/keys.c    **** 	/*
 5168              		.loc 1 2968 7 is_stmt 1 view .LVU1639
2968:src/keys.c    **** 	/*
 5169              		.loc 1 2968 18 is_stmt 0 view .LVU1640
 5170 010a 6A4E     		ldr	r6, .L1155+12
 5171 010c 3068     		ldr	r0, [r6]
2968:src/keys.c    **** 	/*
 5172              		.loc 1 2968 10 view .LVU1641
 5173 010e 98B1     		cbz	r0, .L542
2972:src/keys.c    **** 	  /*
 5174              		.loc 1 2972 2 is_stmt 1 view .LVU1642
2972:src/keys.c    **** 	  /*
 5175              		.loc 1 2972 6 is_stmt 0 view .LVU1643
 5176 0110 6E4B     		ldr	r3, .L1155+36
2972:src/keys.c    **** 	  /*
 5177              		.loc 1 2972 5 view .LVU1644
 5178 0112 1F68     		ldr	r7, [r3]
 5179 0114 002F     		cmp	r7, #0
 5180 0116 00F09F81 		beq	.L543
2976:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5181              		.loc 1 2976 4 is_stmt 1 view .LVU1645
2977:src/keys.c    **** 	    DispMsg = "RUN";
 5182              		.loc 1 2977 7 is_stmt 0 view .LVU1646
 5183 011a 40F23B12 		movw	r2, #315
2976:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5184              		.loc 1 2976 25 view .LVU1647
 5185 011e 0026     		movs	r6, #0
2977:src/keys.c    **** 	    DispMsg = "RUN";
 5186              		.loc 1 2977 7 view .LVU1648
 5187 0120 9042     		cmp	r0, r2
2976:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5188              		.loc 1 2976 25 view .LVU1649
 5189 0122 1E60     		str	r6, [r3]
ARM GAS  /tmp/cciIzcMf.s 			page 173


2977:src/keys.c    **** 	    DispMsg = "RUN";
 5190              		.loc 1 2977 4 is_stmt 1 view .LVU1650
2977:src/keys.c    **** 	    DispMsg = "RUN";
 5191              		.loc 1 2977 7 is_stmt 0 view .LVU1651
 5192 0124 40F05784 		bne	.L544
2978:src/keys.c    **** 	  }
 5193              		.loc 1 2978 6 is_stmt 1 view .LVU1652
2978:src/keys.c    **** 	  }
 5194              		.loc 1 2978 14 is_stmt 0 view .LVU1653
 5195 0128 694B     		ldr	r3, .L1155+40
 5196 012a 6A4A     		ldr	r2, .L1155+44
 5197 012c 1A60     		str	r2, [r3]
 5198              	.L545:
2984:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5199              		.loc 1 2984 4 is_stmt 1 view .LVU1654
 5200 012e FFF7FEFF 		bl	display
 5201              	.LVL419:
2985:src/keys.c    **** 	}
 5202              		.loc 1 2985 4 view .LVU1655
2985:src/keys.c    **** 	}
 5203              		.loc 1 2985 12 is_stmt 0 view .LVU1656
 5204 0132 634B     		ldr	r3, .L1155+24
 5205 0134 0122     		movs	r2, #1
 5206 0136 1A60     		str	r2, [r3]
 5207              	.L542:
2997:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5208              		.loc 1 2997 7 is_stmt 1 view .LVU1657
2997:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5209              		.loc 1 2997 11 is_stmt 0 view .LVU1658
 5210 0138 FFF7FEFF 		bl	keyticks
 5211              	.LVL420:
2997:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5212              		.loc 1 2997 10 view .LVU1659
 5213 013c 0C28     		cmp	r0, #12
 5214 013e 00F38281 		bgt	.L1083
 5215              	.L540:
3006:src/keys.c    **** 
 5216              		.loc 1 3006 15 is_stmt 1 view .LVU1660
3012:src/keys.c    ****       JustStopped = 0;
 5217              		.loc 1 3012 5 view .LVU1661
3012:src/keys.c    ****       JustStopped = 0;
 5218              		.loc 1 3012 9 is_stmt 0 view .LVU1662
 5219 0142 5B4E     		ldr	r6, .L1155+8
3012:src/keys.c    ****       JustStopped = 0;
 5220              		.loc 1 3012 8 view .LVU1663
 5221 0144 3368     		ldr	r3, [r6]
 5222 0146 002B     		cmp	r3, #0
 5223 0148 4ED1     		bne	.L1084
 5224              	.L549:
3020:src/keys.c    ****       return;
 5225              		.loc 1 3020 5 is_stmt 1 view .LVU1664
3020:src/keys.c    ****       return;
 5226              		.loc 1 3020 9 is_stmt 0 view .LVU1665
 5227 014a 5C4E     		ldr	r6, .L1155+20
 5228 014c 3368     		ldr	r3, [r6]
3020:src/keys.c    ****       return;
 5229              		.loc 1 3020 8 view .LVU1666
ARM GAS  /tmp/cciIzcMf.s 			page 174


 5230 014e 002B     		cmp	r3, #0
 5231 0150 46D0     		beq	.L1085
 5232              	.L537:
3102:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5233              		.loc 1 3102 5 is_stmt 1 view .LVU1667
3103:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5234              		.loc 1 3103 13 is_stmt 0 view .LVU1668
 5235 0152 5B49     		ldr	r1, .L1155+24
3102:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5236              		.loc 1 3102 18 view .LVU1669
 5237 0154 DFF88C91 		ldr	r9, .L1155+60
3103:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5238              		.loc 1 3103 15 view .LVU1670
 5239 0158 B3FA83F3 		clz	r3, r3
 5240 015c 5B09     		lsrs	r3, r3, #5
3102:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5241              		.loc 1 3102 18 view .LVU1671
 5242 015e 0022     		movs	r2, #0
3103:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5243              		.loc 1 3103 13 view .LVU1672
 5244 0160 0B60     		str	r3, [r1]
3102:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5245              		.loc 1 3102 18 view .LVU1673
 5246 0162 C9F80020 		str	r2, [r9]
3103:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5247              		.loc 1 3103 5 is_stmt 1 view .LVU1674
3104:src/keys.c    ****     switch (c) {
 5248              		.loc 1 3104 5 view .LVU1675
 5249              	.LVL421:
 5250              	.LBB640:
 5251              	.LBI640:
2768:src/keys.c    ****   const enum shifts shift = cur_shift();
 5252              		.loc 1 2768 12 view .LVU1676
 5253              	.LBB641:
2769:src/keys.c    ****   enum catalogues cat;
 5254              		.loc 1 2769 3 view .LVU1677
 5255              	.LBB642:
 5256              	.LBI642:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5257              		.loc 1 84 13 view .LVU1678
 5258              	.LBB643:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5259              		.loc 1 85 2 view .LVU1679
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5260              		.loc 1 85 18 is_stmt 0 view .LVU1680
 5261 0166 FFF7FEFF 		bl	shift_down
 5262              	.LVL422:
  86:src/keys.c    **** }
 5263              		.loc 1 86 2 is_stmt 1 view .LVU1681
  86:src/keys.c    **** }
 5264              		.loc 1 86 52 is_stmt 0 view .LVU1682
 5265 016a 8246     		mov	r10, r0
 5266 016c 10B9     		cbnz	r0, .L568
 5267 016e 564B     		ldr	r3, .L1155+32
 5268 0170 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5269              	.L568:
 5270              	.LVL423:
ARM GAS  /tmp/cciIzcMf.s 			page 175


  86:src/keys.c    **** }
 5271              		.loc 1 86 52 view .LVU1683
 5272              	.LBE643:
 5273              	.LBE642:
2770:src/keys.c    **** 
 5274              		.loc 1 2770 3 is_stmt 1 view .LVU1684
2772:src/keys.c    ****     /*
 5275              		.loc 1 2772 3 view .LVU1685
2772:src/keys.c    ****     /*
 5276              		.loc 1 2772 7 is_stmt 0 view .LVU1686
 5277 0174 3768     		ldr	r7, [r6]
2772:src/keys.c    ****     /*
 5278              		.loc 1 2772 6 view .LVU1687
 5279 0176 0FB9     		cbnz	r7, .L569
2772:src/keys.c    ****     /*
 5280              		.loc 1 2772 15 view .LVU1688
 5281 0178 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5282 017a 2BB3     		cbz	r3, .L570
 5283              	.L569:
2776:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5284              		.loc 1 2776 5 is_stmt 1 view .LVU1689
2776:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5285              		.loc 1 2776 8 is_stmt 0 view .LVU1690
 5286 017c 242C     		cmp	r4, #36
 5287 017e 00F02281 		beq	.L571
2776:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5288              		.loc 1 2776 18 view .LVU1691
 5289 0182 272C     		cmp	r4, #39
 5290 0184 00F01F81 		beq	.L571
2786:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5291              		.loc 1 2786 5 is_stmt 1 view .LVU1692
2786:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5292              		.loc 1 2786 8 is_stmt 0 view .LVU1693
 5293 0188 622C     		cmp	r4, #98
 5294 018a 07D0     		beq	.L574
2787:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5295              		.loc 1 2787 7 is_stmt 1 view .LVU1694
2787:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5296              		.loc 1 2787 15 is_stmt 0 view .LVU1695
 5297 018c 4E4B     		ldr	r3, .L1155+32
2789:src/keys.c    ****     }
 5298              		.loc 1 2789 14 view .LVU1696
 5299 018e 4A4A     		ldr	r2, .L1155+16
2787:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5300              		.loc 1 2787 17 view .LVU1697
 5301 0190 0134     		adds	r4, r4, #1
 5302              	.LVL424:
2789:src/keys.c    ****     }
 5303              		.loc 1 2789 14 view .LVU1698
 5304 0192 0121     		movs	r1, #1
2787:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5305              		.loc 1 2787 15 view .LVU1699
 5306 0194 DC74     		strb	r4, [r3, #19]
2788:src/keys.c    ****       GoFast = 1;
 5307              		.loc 1 2788 7 is_stmt 1 view .LVU1700
2788:src/keys.c    ****       GoFast = 1;
 5308              		.loc 1 2788 13 is_stmt 0 view .LVU1701
ARM GAS  /tmp/cciIzcMf.s 			page 176


 5309 0196 0023     		movs	r3, #0
2789:src/keys.c    ****     }
 5310              		.loc 1 2789 14 view .LVU1702
 5311 0198 1160     		str	r1, [r2]
2788:src/keys.c    ****       GoFast = 1;
 5312              		.loc 1 2788 13 view .LVU1703
 5313 019a 2B70     		strb	r3, [r5]
2789:src/keys.c    ****     }
 5314              		.loc 1 2789 7 is_stmt 1 view .LVU1704
 5315              	.LVL425:
 5316              	.L574:
2789:src/keys.c    ****     }
 5317              		.loc 1 2789 7 is_stmt 0 view .LVU1705
 5318              	.LBE641:
 5319              	.LBE640:
3127:src/keys.c    ****       break;
 5320              		.loc 1 3127 7 is_stmt 1 view .LVU1706
 5321 019c FFF7FEFF 		bl	xeqprog
 5322              	.LVL426:
3128:src/keys.c    **** 
 5323              		.loc 1 3128 7 view .LVU1707
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 5324              		.loc 1 2948 7 is_stmt 0 view .LVU1708
 5325 01a0 0027     		movs	r7, #0
3128:src/keys.c    **** 
 5326              		.loc 1 3128 7 view .LVU1709
 5327 01a2 4FF0310B 		mov	fp, #49
 5328 01a6 7FE7     		b	.L565
 5329              	.LVL427:
 5330              	.L1077:
2957:src/keys.c    ****   }
 5331              		.loc 1 2957 5 is_stmt 1 view .LVU1710
2957:src/keys.c    ****   }
 5332              		.loc 1 2957 12 is_stmt 0 view .LVU1711
 5333 01a8 424B     		ldr	r3, .L1155+12
 5334 01aa 444E     		ldr	r6, .L1155+20
 5335 01ac 0022     		movs	r2, #0
 5336 01ae 1A60     		str	r2, [r3]
3053:src/keys.c    ****     if (OpCode != 0) {
 5337              		.loc 1 3053 3 is_stmt 1 view .LVU1712
 5338 01b0 3368     		ldr	r3, [r6]
 5339 01b2 CEE7     		b	.L537
 5340              	.LVL428:
 5341              	.L1076:
2953:src/keys.c    ****   }
 5342              		.loc 1 2953 5 view .LVU1713
 5343 01b4 FFF7FEFF 		bl	xeq_xrom
 5344              	.LVL429:
2953:src/keys.c    ****   }
 5345              		.loc 1 2953 5 is_stmt 0 view .LVU1714
 5346 01b8 2EE7     		b	.L535
 5347              	.L1081:
3065:src/keys.c    **** 	  xeq(c);
 5348              		.loc 1 3065 60 discriminator 2 view .LVU1715
 5349 01ba FFF7FEFF 		bl	is_bad_cmdline
 5350              	.LVL430:
3065:src/keys.c    **** 	  xeq(c);
ARM GAS  /tmp/cciIzcMf.s 			page 177


 5351              		.loc 1 3065 56 discriminator 2 view .LVU1716
 5352 01be 0028     		cmp	r0, #0
 5353 01c0 3FF45FAF 		beq	.L562
 5354 01c4 3D4E     		ldr	r6, .L1155+20
 5355 01c6 66E7     		b	.L558
 5356              	.LVL431:
 5357              	.L570:
 5358              	.LBB1232:
 5359              	.LBB1177:
2800:src/keys.c    **** #else
 5360              		.loc 1 2800 3 is_stmt 1 view .LVU1717
2800:src/keys.c    **** #else
 5361              		.loc 1 2800 6 is_stmt 0 view .LVU1718
 5362 01c8 242C     		cmp	r4, #36
 5363 01ca 00F01184 		beq	.L1086
2810:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5364              		.loc 1 2810 2 is_stmt 1 view .LVU1719
2810:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5365              		.loc 1 2810 5 is_stmt 0 view .LVU1720
 5366 01ce 272C     		cmp	r4, #39
 5367 01d0 10D1     		bne	.L578
2810:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5368              		.loc 1 2810 15 view .LVU1721
 5369 01d2 374B     		ldr	r3, .L1155+8
 5370 01d4 1A68     		ldr	r2, [r3]
 5371 01d6 6AB1     		cbz	r2, .L578
2812:src/keys.c    **** 		return STATE_IGNORE;
 5372              		.loc 1 2812 3 is_stmt 1 view .LVU1722
2812:src/keys.c    **** 		return STATE_IGNORE;
 5373              		.loc 1 2812 15 is_stmt 0 view .LVU1723
 5374 01d8 1F60     		str	r7, [r3]
2813:src/keys.c    **** 	}
 5375              		.loc 1 2813 3 is_stmt 1 view .LVU1724
 5376              	.LVL432:
2813:src/keys.c    **** 	}
 5377              		.loc 1 2813 3 is_stmt 0 view .LVU1725
 5378              	.LBE1177:
 5379              	.LBE1232:
3167:src/keys.c    **** #ifndef CONSOLE
 5380              		.loc 1 3167 3 is_stmt 1 view .LVU1726
 5381              	.LBB1233:
 5382              	.LBB1178:
2813:src/keys.c    **** 	}
 5383              		.loc 1 2813 10 is_stmt 0 view .LVU1727
 5384 01da 4FF0320B 		mov	fp, #50
 5385 01de 67E7     		b	.L579
 5386              	.LVL433:
 5387              	.L1085:
2813:src/keys.c    **** 	}
 5388              		.loc 1 2813 10 view .LVU1728
 5389              	.LBE1178:
 5390              	.LBE1233:
3020:src/keys.c    ****       return;
 5391              		.loc 1 3020 21 discriminator 1 view .LVU1729
 5392 01e0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
3020:src/keys.c    ****       return;
 5393              		.loc 1 3020 18 discriminator 1 view .LVU1730
ARM GAS  /tmp/cciIzcMf.s 			page 178


 5394 01e2 002A     		cmp	r2, #0
 5395 01e4 B5D1     		bne	.L537
 5396 01e6 89E7     		b	.L534
 5397              	.L1084:
3012:src/keys.c    ****       JustStopped = 0;
 5398              		.loc 1 3012 25 discriminator 1 view .LVU1731
 5399 01e8 FFF7FEFF 		bl	is_key_pressed
 5400              	.LVL434:
3012:src/keys.c    ****       JustStopped = 0;
 5401              		.loc 1 3012 21 discriminator 1 view .LVU1732
 5402 01ec 0028     		cmp	r0, #0
 5403 01ee ACD1     		bne	.L549
3013:src/keys.c    ****     }
 5404              		.loc 1 3013 7 is_stmt 1 view .LVU1733
3013:src/keys.c    ****     }
 5405              		.loc 1 3013 19 is_stmt 0 view .LVU1734
 5406 01f0 3060     		str	r0, [r6]
 5407 01f2 AAE7     		b	.L549
 5408              	.LVL435:
 5409              	.L578:
3013:src/keys.c    ****     }
 5410              		.loc 1 3013 19 view .LVU1735
 5411 01f4 DFF8D080 		ldr	r8, .L1155+32
 5412 01f8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5413              	.L576:
 5414              	.LBB1234:
 5415              	.LBB1179:
2819:src/keys.c    **** 		CmdLineLength = 0;
 5416              		.loc 1 2819 2 is_stmt 1 view .LVU1736
2819:src/keys.c    **** 		CmdLineLength = 0;
 5417              		.loc 1 2819 5 is_stmt 0 view .LVU1737
 5418 01fc 002B     		cmp	r3, #0
 5419 01fe 40F06883 		bne	.L1087
 5420              	.L581:
2825:src/keys.c    **** 		return process_confirm((const keycode)c);
 5421              		.loc 1 2825 2 is_stmt 1 view .LVU1738
2825:src/keys.c    **** 		return process_confirm((const keycode)c);
 5422              		.loc 1 2825 6 is_stmt 0 view .LVU1739
 5423 0202 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2825:src/keys.c    **** 		return process_confirm((const keycode)c);
 5424              		.loc 1 2825 5 view .LVU1740
 5425 0206 5907     		lsls	r1, r3, #29
 5426 0208 40F07A83 		bne	.L1088
2828:src/keys.c    **** 		return process_arg((const keycode)c);
 5427              		.loc 1 2828 2 is_stmt 1 view .LVU1741
2828:src/keys.c    **** 		return process_arg((const keycode)c);
 5428              		.loc 1 2828 6 is_stmt 0 view .LVU1742
 5429 020c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2828:src/keys.c    **** 		return process_arg((const keycode)c);
 5430              		.loc 1 2828 5 view .LVU1743
 5431 0210 9A06     		lsls	r2, r3, #26
 5432 0212 00F10284 		bmi	.L1089
2831:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5433              		.loc 1 2831 2 is_stmt 1 view .LVU1744
2831:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5434              		.loc 1 2831 6 is_stmt 0 view .LVU1745
 5435 0216 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/cciIzcMf.s 			page 179


2831:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5436              		.loc 1 2831 5 view .LVU1746
 5437 021a 12F0010B 		ands	fp, r2, #1
 5438 021e 40F04984 		bne	.L1090
2834:src/keys.c    **** 		return process_hyp((const keycode)c);
 5439              		.loc 1 2834 2 is_stmt 1 view .LVU1747
2834:src/keys.c    **** 		return process_hyp((const keycode)c);
 5440              		.loc 1 2834 5 is_stmt 0 view .LVU1748
 5441 0222 12F02001 		ands	r1, r2, #32
 5442 0226 40F02781 		bne	.L1091
2837:src/keys.c    **** 		return process_test((const keycode)c);
 5443              		.loc 1 2837 2 is_stmt 1 view .LVU1749
2837:src/keys.c    **** 		return process_test((const keycode)c);
 5444              		.loc 1 2837 12 is_stmt 0 view .LVU1750
 5445 022a 98F80FB0 		ldrb	fp, [r8, #15]	@ zero_extendqisi2
2837:src/keys.c    **** 		return process_test((const keycode)c);
 5446              		.loc 1 2837 5 view .LVU1751
 5447 022e BBF1070F 		cmp	fp, #7
 5448 0232 40F00B84 		bne	.L1092
2840:src/keys.c    **** 		return process_status((const keycode)c);
 5449              		.loc 1 2840 2 is_stmt 1 view .LVU1752
2840:src/keys.c    **** 		return process_status((const keycode)c);
 5450              		.loc 1 2840 12 is_stmt 0 view .LVU1753
 5451 0236 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
2840:src/keys.c    **** 		return process_status((const keycode)c);
 5452              		.loc 1 2840 5 view .LVU1754
 5453 023a 002B     		cmp	r3, #0
 5454 023c 40F0AE84 		bne	.L1093
2846:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5455              		.loc 1 2846 2 is_stmt 1 view .LVU1755
2846:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5456              		.loc 1 2846 5 is_stmt 0 view .LVU1756
 5457 0240 292C     		cmp	r4, #41
 5458 0242 00F09785 		beq	.L1094
2850:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5459              		.loc 1 2850 2 is_stmt 1 view .LVU1757
2850:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5460              		.loc 1 2850 5 is_stmt 0 view .LVU1758
 5461 0246 2A2C     		cmp	r4, #42
 5462 0248 00F0A685 		beq	.L1095
2854:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5463              		.loc 1 2854 2 is_stmt 1 view .LVU1759
2854:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5464              		.loc 1 2854 5 is_stmt 0 view .LVU1760
 5465 024c 2B2C     		cmp	r4, #43
 5466 024e 00F0B685 		beq	.L1096
2863:src/keys.c    **** 		return process_arrow((const keycode)c);
 5467              		.loc 1 2863 2 is_stmt 1 view .LVU1761
2863:src/keys.c    **** 		return process_arrow((const keycode)c);
 5468              		.loc 1 2863 5 is_stmt 0 view .LVU1762
 5469 0252 5007     		lsls	r0, r2, #29
 5470 0254 00F1CC84 		bmi	.L1097
2871:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5471              		.loc 1 2871 2 is_stmt 1 view .LVU1763
2871:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5472              		.loc 1 2871 8 is_stmt 0 view .LVU1764
 5473 0258 E4B2     		uxtb	r4, r4
ARM GAS  /tmp/cciIzcMf.s 			page 180


 5474              	.LVL436:
 5475              	.LBB644:
 5476              	.LBI644:
 254:src/keys.c    **** {
 5477              		.loc 1 254 24 is_stmt 1 view .LVU1765
 5478              	.LBB645:
 256:src/keys.c    ****   int i, col, max;
 5479              		.loc 1 256 3 view .LVU1766
 257:src/keys.c    ****   const struct _map {
 5480              		.loc 1 257 3 view .LVU1767
 258:src/keys.c    ****     unsigned char key, cat[3];
 5481              		.loc 1 258 3 view .LVU1768
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5482              		.loc 1 263 3 view .LVU1769
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5483              		.loc 1 263 6 is_stmt 0 view .LVU1770
 5484 025a 212C     		cmp	r4, #33
 5485 025c 00F05D85 		beq	.L1098
 266:src/keys.c    ****     /*
 5486              		.loc 1 266 3 is_stmt 1 view .LVU1771
 266:src/keys.c    ****     /*
 5487              		.loc 1 266 23 is_stmt 0 view .LVU1772
 5488 0260 1D49     		ldr	r1, .L1155+48
 5489 0262 D8F81430 		ldr	r3, [r8, #20]
 266:src/keys.c    ****     /*
 5490              		.loc 1 266 6 view .LVU1773
 5491 0266 1942     		tst	r1, r3
 5492 0268 40F00585 		bne	.L658
 5493              	.LBB646:
 270:src/keys.c    **** #ifdef DM42
 5494              		.loc 1 270 5 is_stmt 1 view .LVU1774
 297:src/keys.c    ****       /*
 5495              		.loc 1 297 5 view .LVU1775
 297:src/keys.c    ****       /*
 5496              		.loc 1 297 8 is_stmt 0 view .LVU1776
 5497 026c 242C     		cmp	r4, #36
 5498 026e 03D1     		bne	.L659
 297:src/keys.c    ****       /*
 5499              		.loc 1 297 18 view .LVU1777
 5500 0270 BAF1020F 		cmp	r10, #2
 5501 0274 01F08182 		beq	.L866
 5502              	.L659:
 312:src/keys.c    ****       /*
 5503              		.loc 1 312 5 is_stmt 1 view .LVU1778
 312:src/keys.c    ****       /*
 5504              		.loc 1 312 8 is_stmt 0 view .LVU1779
 5505 0278 BAF1030F 		cmp	r10, #3
 5506 027c 3BD1     		bne	.L666
 5507              	.L853:
 322:src/keys.c    **** #ifndef WINGUI
 5508              		.loc 1 322 5 is_stmt 1 view .LVU1780
 5509              	.LVL437:
 324:src/keys.c    **** #else
 5510              		.loc 1 324 5 view .LVU1781
 324:src/keys.c    **** #else
 5511              		.loc 1 324 23 is_stmt 0 view .LVU1782
 5512 027e 174B     		ldr	r3, .L1155+52
ARM GAS  /tmp/cciIzcMf.s 			page 181


 5513 0280 1B68     		ldr	r3, [r3]
 5514 0282 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 324:src/keys.c    **** #else
 5515              		.loc 1 324 27 view .LVU1783
 5516 0286 D907     		lsls	r1, r3, #31
 5517 0288 00F1D685 		bmi	.L867
 324:src/keys.c    **** #else
 5518              		.loc 1 324 73 view .LVU1784
 5519 028c 12F0020B 		ands	fp, r2, #2
 5520 0290 01F01C81 		beq	.L1099
 322:src/keys.c    **** #ifndef WINGUI
 5521              		.loc 1 322 8 view .LVU1785
 5522 0294 124B     		ldr	r3, .L1155+56
 328:src/keys.c    ****   }
 5523              		.loc 1 328 9 view .LVU1786
 5524 0296 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 5525              		.loc 1 324 73 view .LVU1787
 5526 0298 4FF0020C 		mov	ip, #2
 5527              	.LVL438:
 5528              	.L661:
 324:src/keys.c    **** #else
 5529              		.loc 1 324 73 view .LVU1788
 5530              	.LBE646:
 370:src/keys.c    ****     if (cp->key == c) {
 5531              		.loc 1 370 3 is_stmt 1 view .LVU1789
 370:src/keys.c    ****     if (cp->key == c) {
 5532              		.loc 1 370 15 view .LVU1790
 5533 029c 181F     		subs	r0, r3, #4
 5534 029e 00EB8100 		add	r0, r0, r1, lsl #2
 5535              	.LBB647:
 324:src/keys.c    **** #else
 5536              		.loc 1 324 73 is_stmt 0 view .LVU1791
 5537 02a2 0421     		movs	r1, #4
 5538              	.LVL439:
 324:src/keys.c    **** #else
 5539              		.loc 1 324 73 view .LVU1792
 5540 02a4 22E0     		b	.L667
 5541              	.L1156:
 5542 02a6 00BF     		.align	2
 5543              	.L1155:
 5544 02a8 00000000 		.word	.LANCHOR12
 5545 02ac 00000000 		.word	Pause
 5546 02b0 00000000 		.word	JustStopped
 5547 02b4 00000000 		.word	OpCode
 5548 02b8 00000000 		.word	GoFast
 5549 02bc 00000000 		.word	Running
 5550 02c0 00000000 		.word	ShowRPN
 5551 02c4 00000000 		.word	JustDisplayed
 5552 02c8 00000000 		.word	StateWhileOn
 5553 02cc 00000000 		.word	OpCodeDisplayPending
 5554 02d0 00000000 		.word	DispMsg
 5555 02d4 00000000 		.word	.LC0
 5556 02d8 00080800 		.word	526336
 5557 02dc 00000000 		.word	main_ram
 5558 02e0 00000000 		.word	.LANCHOR11
 5559 02e4 00000000 		.word	WasDataEntry
ARM GAS  /tmp/cciIzcMf.s 			page 182


 5560              	.LVL440:
 5561              	.L1101:
 324:src/keys.c    **** #else
 5562              		.loc 1 324 73 view .LVU1793
 5563 02e8 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 5564              	.LVL441:
 5565              	.L667:
 324:src/keys.c    **** #else
 5566              		.loc 1 324 73 view .LVU1794
 5567              	.LBE647:
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5568              		.loc 1 371 5 is_stmt 1 view .LVU1795
 370:src/keys.c    ****     if (cp->key == c) {
 5569              		.loc 1 370 24 view .LVU1796
 370:src/keys.c    ****     if (cp->key == c) {
 5570              		.loc 1 370 15 view .LVU1797
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5571              		.loc 1 371 8 is_stmt 0 view .LVU1798
 5572 02ec 8C42     		cmp	r4, r1
 5573 02ee 00F0F984 		beq	.L1100
 370:src/keys.c    ****     if (cp->key == c) {
 5574              		.loc 1 370 3 view .LVU1799
 5575 02f2 8342     		cmp	r3, r0
 5576 02f4 F8D1     		bne	.L1101
 5577              	.LVL442:
 5578              	.L666:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5579              		.loc 1 376 3 is_stmt 1 view .LVU1800
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5580              		.loc 1 376 6 is_stmt 0 view .LVU1801
 5581 02f6 1107     		lsls	r1, r2, #28
 5582 02f8 00F1F980 		bmi	.L671
 5583              	.LVL443:
 5584              	.L670:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5585              		.loc 1 376 6 view .LVU1802
 5586              	.LBE645:
 5587              	.LBE644:
2886:src/keys.c    **** 		return process_labellist((const keycode)c);
 5588              		.loc 1 2886 2 is_stmt 1 view .LVU1803
2886:src/keys.c    **** 		return process_labellist((const keycode)c);
 5589              		.loc 1 2886 6 is_stmt 0 view .LVU1804
 5590 02fc 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2886:src/keys.c    **** 		return process_labellist((const keycode)c);
 5591              		.loc 1 2886 5 view .LVU1805
 5592 0300 4B07     		lsls	r3, r1, #29
 5593 0302 00F1AB85 		bmi	.L1102
2889:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5594              		.loc 1 2889 2 is_stmt 1 view .LVU1806
2889:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5595              		.loc 1 2889 5 is_stmt 0 view .LVU1807
 5596 0306 0807     		lsls	r0, r1, #28
 5597 0308 00F1F886 		bmi	.L1103
2892:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5598              		.loc 1 2892 2 is_stmt 1 view .LVU1808
2892:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5599              		.loc 1 2892 5 is_stmt 0 view .LVU1809
ARM GAS  /tmp/cciIzcMf.s 			page 183


 5600 030c 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5601 0310 002B     		cmp	r3, #0
 5602 0312 40F0B487 		bne	.L1104
2895:src/keys.c    **** #ifndef INFRARED
 5603              		.loc 1 2895 2 is_stmt 1 view .LVU1810
2895:src/keys.c    **** #ifndef INFRARED
 5604              		.loc 1 2895 6 is_stmt 0 view .LVU1811
 5605 0316 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2895:src/keys.c    **** #ifndef INFRARED
 5606              		.loc 1 2895 5 view .LVU1812
 5607 031a 1807     		lsls	r0, r3, #28
 5608 031c 00F1C087 		bmi	.L1105
2908:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5609              		.loc 1 2908 2 is_stmt 1 view .LVU1813
2908:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5610              		.loc 1 2908 5 is_stmt 0 view .LVU1814
 5611 0320 12F0020B 		ands	fp, r2, #2
 5612 0324 41F07280 		bne	.L1106
2911:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5613              		.loc 1 2911 3 is_stmt 1 view .LVU1815
2911:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5614              		.loc 1 2911 24 is_stmt 0 view .LVU1816
 5615 0328 0AF1FF32 		add	r2, r10, #-1
2911:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5616              		.loc 1 2911 6 view .LVU1817
 5617 032c D2B2     		uxtb	r2, r2
 5618 032e 012A     		cmp	r2, #1
 5619 0330 41F24A81 		bls	.L1107
2913:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5620              		.loc 1 2913 3 is_stmt 1 view .LVU1818
2913:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5621              		.loc 1 2913 6 is_stmt 0 view .LVU1819
 5622 0334 BAF1030F 		cmp	r10, #3
 5623 0338 01F00880 		beq	.L1108
2916:src/keys.c    **** 	}
 5624              		.loc 1 2916 3 is_stmt 1 view .LVU1820
 5625              	.LVL444:
 5626              	.LBB660:
 5627              	.LBI660:
 673:src/keys.c    **** {
 5628              		.loc 1 673 12 view .LVU1821
 5629              	.LBB661:
 675:src/keys.c    **** 		// Row 1
 5630              		.loc 1 675 2 view .LVU1822
 722:src/keys.c    **** 	int op = op_map[lc];
 5631              		.loc 1 722 2 view .LVU1823
 5632              	.LBB662:
 5633              	.LBI662:
 134:src/keys.c    **** {
 5634              		.loc 1 134 12 view .LVU1824
 5635              	.LBB663:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5636              		.loc 1 136 2 view .LVU1825
 146:src/keys.c    **** }
 5637              		.loc 1 146 2 view .LVU1826
 146:src/keys.c    **** }
 5638              		.loc 1 146 2 is_stmt 0 view .LVU1827
ARM GAS  /tmp/cciIzcMf.s 			page 184


 5639              	.LBE663:
 5640              	.LBE662:
 723:src/keys.c    **** 	
 5641              		.loc 1 723 2 is_stmt 1 view .LVU1828
 728:src/keys.c    **** 	  switch (c) {
 5642              		.loc 1 728 6 is_stmt 0 view .LVU1829
 5643 033c B64A     		ldr	r2, .L1157
 5644              	.LBB666:
 5645              	.LBB664:
 146:src/keys.c    **** }
 5646              		.loc 1 146 23 view .LVU1830
 5647 033e B748     		ldr	r0, .L1157+4
 5648              	.LBE664:
 5649              	.LBE666:
 728:src/keys.c    **** 	  switch (c) {
 5650              		.loc 1 728 6 view .LVU1831
 5651 0340 1268     		ldr	r2, [r2]
 5652              	.LBB667:
 5653              	.LBB665:
 146:src/keys.c    **** }
 5654              		.loc 1 146 23 view .LVU1832
 5655 0342 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5656              	.LBE665:
 5657              	.LBE667:
 723:src/keys.c    **** 	
 5658              		.loc 1 723 17 view .LVU1833
 5659 0346 B648     		ldr	r0, .L1157+8
 728:src/keys.c    **** 	  switch (c) {
 5660              		.loc 1 728 6 view .LVU1834
 5661 0348 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 723:src/keys.c    **** 	
 5662              		.loc 1 723 17 view .LVU1835
 5663 034c 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5664              	.LVL445:
 728:src/keys.c    **** 	  switch (c) {
 5665              		.loc 1 728 5 view .LVU1836
 5666 0350 D207     		lsls	r2, r2, #31
 723:src/keys.c    **** 	
 5667              		.loc 1 723 6 view .LVU1837
 5668 0352 D346     		mov	fp, r10
 5669              	.LVL446:
 727:src/keys.c    **** 	if (UState.intm) {
 5670              		.loc 1 727 2 is_stmt 1 view .LVU1838
 728:src/keys.c    **** 	  switch (c) {
 5671              		.loc 1 728 2 view .LVU1839
 728:src/keys.c    **** 	  switch (c) {
 5672              		.loc 1 728 5 is_stmt 0 view .LVU1840
 5673 0354 00F1B081 		bmi	.L1109
 759:src/keys.c    **** 	  }
 5674              		.loc 1 759 12 is_stmt 1 view .LVU1841
 764:src/keys.c    **** #ifdef DM42
 5675              		.loc 1 764 2 view .LVU1842
 5676 0358 2D2C     		cmp	r4, #45
 5677 035a 00F21981 		bhi	.L594
 5678 035e DFE814F0 		tbh	[pc, r4, lsl #1]
 5679              	.L856:
 5680 0362 710B     		.2byte	(.L818-.L856)/2
ARM GAS  /tmp/cciIzcMf.s 			page 185


 5681 0364 6A0B     		.2byte	(.L819-.L856)/2
 5682 0366 1701     		.2byte	(.L594-.L856)/2
 5683 0368 7D02     		.2byte	(.L817-.L856)/2
 5684 036a 1701     		.2byte	(.L594-.L856)/2
 5685 036c 1701     		.2byte	(.L594-.L856)/2
 5686 036e 3102     		.2byte	(.L813-.L856)/2
 5687 0370 3102     		.2byte	(.L813-.L856)/2
 5688 0372 1701     		.2byte	(.L594-.L856)/2
 5689 0374 1701     		.2byte	(.L594-.L856)/2
 5690 0376 1701     		.2byte	(.L594-.L856)/2
 5691 0378 1701     		.2byte	(.L594-.L856)/2
 5692 037a 1701     		.2byte	(.L594-.L856)/2
 5693 037c 1701     		.2byte	(.L594-.L856)/2
 5694 037e 1701     		.2byte	(.L594-.L856)/2
 5695 0380 1701     		.2byte	(.L594-.L856)/2
 5696 0382 3C02     		.2byte	(.L816-.L856)/2
 5697 0384 1701     		.2byte	(.L594-.L856)/2
 5698 0386 3102     		.2byte	(.L813-.L856)/2
 5699 0388 1701     		.2byte	(.L594-.L856)/2
 5700 038a 1701     		.2byte	(.L594-.L856)/2
 5701 038c 1701     		.2byte	(.L594-.L856)/2
 5702 038e 1701     		.2byte	(.L594-.L856)/2
 5703 0390 1701     		.2byte	(.L594-.L856)/2
 5704 0392 1701     		.2byte	(.L594-.L856)/2
 5705 0394 1701     		.2byte	(.L594-.L856)/2
 5706 0396 1701     		.2byte	(.L594-.L856)/2
 5707 0398 1701     		.2byte	(.L594-.L856)/2
 5708 039a 1701     		.2byte	(.L594-.L856)/2
 5709 039c 1701     		.2byte	(.L594-.L856)/2
 5710 039e 1701     		.2byte	(.L594-.L856)/2
 5711 03a0 1701     		.2byte	(.L594-.L856)/2
 5712 03a2 1701     		.2byte	(.L594-.L856)/2
 5713 03a4 1701     		.2byte	(.L594-.L856)/2
 5714 03a6 1701     		.2byte	(.L594-.L856)/2
 5715 03a8 1701     		.2byte	(.L594-.L856)/2
 5716 03aa 1701     		.2byte	(.L594-.L856)/2
 5717 03ac 1701     		.2byte	(.L594-.L856)/2
 5718 03ae 1701     		.2byte	(.L594-.L856)/2
 5719 03b0 1701     		.2byte	(.L594-.L856)/2
 5720 03b2 1701     		.2byte	(.L594-.L856)/2
 5721 03b4 1701     		.2byte	(.L594-.L856)/2
 5722 03b6 1701     		.2byte	(.L594-.L856)/2
 5723 03b8 1701     		.2byte	(.L594-.L856)/2
 5724 03ba 8302     		.2byte	(.L815-.L856)/2
 5725 03bc A201     		.2byte	(.L820-.L856)/2
 5726              	.LVL447:
 5727              		.p2align 1
 5728              	.L1070:
 764:src/keys.c    **** #ifdef DM42
 5729              		.loc 1 764 2 is_stmt 0 view .LVU1843
 5730 03be 994C     		ldr	r4, .L1157+12
 5731              	.LBE661:
 5732              	.LBE660:
 5733              	.LBE1179:
 5734              	.LBE1234:
3180:src/keys.c    ****   watchdog();
 5735              		.loc 1 3180 3 is_stmt 1 view .LVU1844
ARM GAS  /tmp/cciIzcMf.s 			page 186


3180:src/keys.c    ****   watchdog();
 5736              		.loc 1 3180 17 is_stmt 0 view .LVU1845
 5737 03c0 0023     		movs	r3, #0
 5738 03c2 2360     		str	r3, [r4]
3181:src/keys.c    **** }
 5739              		.loc 1 3181 13 is_stmt 1 view .LVU1846
 5740 03c4 9AE6     		b	.L534
 5741              	.LVL448:
 5742              	.L571:
 5743              	.LBB1235:
 5744              	.LBB1180:
2777:src/keys.c    **** 	set_pc(0);
 5745              		.loc 1 2777 7 view .LVU1847
2777:src/keys.c    **** 	set_pc(0);
 5746              		.loc 1 2777 11 is_stmt 0 view .LVU1848
 5747 03c6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
2777:src/keys.c    **** 	set_pc(0);
 5748              		.loc 1 2777 10 view .LVU1849
 5749 03c8 3BB1     		cbz	r3, .L573
2777:src/keys.c    **** 	set_pc(0);
 5750              		.loc 1 2777 20 view .LVU1850
 5751 03ca 934B     		ldr	r3, .L1157
 5752 03cc 1B68     		ldr	r3, [r3]
 5753 03ce B3F8E037 		ldrh	r3, [r3, #2016]
2777:src/keys.c    **** 	set_pc(0);
 5754              		.loc 1 2777 17 view .LVU1851
 5755 03d2 9B0B     		lsrs	r3, r3, #14
 5756 03d4 032B     		cmp	r3, #3
 5757 03d6 00F02583 		beq	.L1110
 5758              	.L573:
2779:src/keys.c    ****       xeq_xrom();
 5759              		.loc 1 2779 7 is_stmt 1 view .LVU1852
2779:src/keys.c    ****       xeq_xrom();
 5760              		.loc 1 2779 13 is_stmt 0 view .LVU1853
 5761 03da 0027     		movs	r7, #0
 5762 03dc 2F70     		strb	r7, [r5]
2780:src/keys.c    ****       set_running_off();
 5763              		.loc 1 2780 7 is_stmt 1 view .LVU1854
 5764 03de FFF7FEFF 		bl	xeq_xrom
 5765              	.LVL449:
2781:src/keys.c    ****       DispMsg = "Stopped";
 5766              		.loc 1 2781 7 view .LVU1855
 5767 03e2 FFF7FEFF 		bl	set_running_off
 5768              	.LVL450:
2782:src/keys.c    ****       State2.disp_freeze = 0;
 5769              		.loc 1 2782 7 view .LVU1856
2783:src/keys.c    ****       return STATE_UNFINISHED;
 5770              		.loc 1 2783 26 is_stmt 0 view .LVU1857
 5771 03e6 904B     		ldr	r3, .L1157+16
2782:src/keys.c    ****       State2.disp_freeze = 0;
 5772              		.loc 1 2782 15 view .LVU1858
 5773 03e8 9049     		ldr	r1, .L1157+20
2783:src/keys.c    ****       return STATE_UNFINISHED;
 5774              		.loc 1 2783 26 view .LVU1859
 5775 03ea DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
2782:src/keys.c    ****       State2.disp_freeze = 0;
 5776              		.loc 1 2782 15 view .LVU1860
ARM GAS  /tmp/cciIzcMf.s 			page 187


 5777 03ec 9048     		ldr	r0, .L1157+24
 5778 03ee 0860     		str	r0, [r1]
2783:src/keys.c    ****       return STATE_UNFINISHED;
 5779              		.loc 1 2783 7 is_stmt 1 view .LVU1861
2783:src/keys.c    ****       return STATE_UNFINISHED;
 5780              		.loc 1 2783 26 is_stmt 0 view .LVU1862
 5781 03f0 67F30412 		bfi	r2, r7, #4, #1
 5782 03f4 DA75     		strb	r2, [r3, #23]
2784:src/keys.c    ****     }
 5783              		.loc 1 2784 7 is_stmt 1 view .LVU1863
2784:src/keys.c    ****     }
 5784              		.loc 1 2784 14 is_stmt 0 view .LVU1864
 5785 03f6 4FF0330B 		mov	fp, #51
 5786 03fa 55E6     		b	.L565
 5787              	.LVL451:
 5788              	.L555:
2784:src/keys.c    ****     }
 5789              		.loc 1 2784 14 view .LVU1865
 5790 03fc 8D4E     		ldr	r6, .L1157+28
 5791 03fe 3368     		ldr	r3, [r6]
 5792 0400 A7E6     		b	.L537
 5793              	.L1079:
2784:src/keys.c    ****     }
 5794              		.loc 1 2784 14 view .LVU1866
 5795              	.LBE1180:
 5796              	.LBE1235:
3034:src/keys.c    ****       finish_RPN(); // RPN
 5797              		.loc 1 3034 7 is_stmt 1 view .LVU1867
 5798 0402 8D20     		movs	r0, #141
 5799 0404 FFF7FEFF 		bl	clr_dot
 5800              	.LVL452:
3035:src/keys.c    ****     }
 5801              		.loc 1 3035 7 view .LVU1868
 5802 0408 FFF7FEFF 		bl	finish_RPN
 5803              	.LVL453:
 5804 040c 1BE6     		b	.L553
 5805              	.LVL454:
 5806              	.L1082:
3094:src/keys.c    ****     }
 5807              		.loc 1 3094 7 view .LVU1869
 5808 040e FFF7FEFF 		bl	finish_RPN
 5809              	.LVL455:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 5810              		.loc 1 2948 7 is_stmt 0 view .LVU1870
 5811 0412 0027     		movs	r7, #0
 5812 0414 48E6     		b	.L565
 5813              	.LVL456:
 5814              	.L556:
3075:src/keys.c    **** #ifndef CONSOLE
 5815              		.loc 1 3075 7 is_stmt 1 view .LVU1871
 5816 0416 884B     		ldr	r3, .L1157+32
 5817 0418 8D20     		movs	r0, #141
 5818 041a 1968     		ldr	r1, [r3]
 5819 041c FFF7FEFF 		bl	dot
 5820              	.LVL457:
3077:src/keys.c    **** 	if (!WasDataEntry) {
 5821              		.loc 1 3077 7 view .LVU1872
ARM GAS  /tmp/cciIzcMf.s 			page 188


3077:src/keys.c    **** 	if (!WasDataEntry) {
 5822              		.loc 1 3077 11 is_stmt 0 view .LVU1873
 5823 0420 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3077:src/keys.c    **** 	if (!WasDataEntry) {
 5824              		.loc 1 3077 10 view .LVU1874
 5825 0424 9806     		lsls	r0, r3, #26
 5826 0426 3FF569AE 		bmi	.L534
3078:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5827              		.loc 1 3078 2 is_stmt 1 view .LVU1875
3078:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5828              		.loc 1 3078 6 is_stmt 0 view .LVU1876
 5829 042a 844B     		ldr	r3, .L1157+36
3078:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5830              		.loc 1 3078 5 view .LVU1877
 5831 042c 1B68     		ldr	r3, [r3]
 5832 042e 002B     		cmp	r3, #0
 5833 0430 40F06182 		bne	.L567
3080:src/keys.c    **** 	}
 5834              		.loc 1 3080 4 is_stmt 1 view .LVU1878
 5835              		.loc 1 3182 1 is_stmt 0 view .LVU1879
 5836 0434 03B0     		add	sp, sp, #12
 5837              		.cfi_remember_state
 5838              		.cfi_def_cfa_offset 36
 5839              		@ sp needed
 5840 0436 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5841              		.cfi_restore 14
 5842              		.cfi_restore 11
 5843              		.cfi_restore 10
 5844              		.cfi_restore 9
 5845              		.cfi_restore 8
 5846              		.cfi_restore 7
 5847              		.cfi_restore 6
 5848              		.cfi_restore 5
 5849              		.cfi_restore 4
 5850              		.cfi_def_cfa_offset 0
3080:src/keys.c    **** 	}
 5851              		.loc 1 3080 4 view .LVU1880
 5852 043a FFF7FEBF 		b	display
 5853              	.LVL458:
 5854              	.L1080:
 5855              		.cfi_restore_state
3063:src/keys.c    ****       else {
 5856              		.loc 1 3063 2 is_stmt 1 view .LVU1881
 5857 043e FFF7FEFF 		bl	xeq_sst_bst
 5858              	.LVL459:
 5859 0442 7C4E     		ldr	r6, .L1157+28
 5860 0444 27E6     		b	.L558
 5861              	.L1083:
2997:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5862              		.loc 1 2997 28 is_stmt 0 discriminator 1 view .LVU1882
 5863 0446 FFF7FEFF 		bl	shift_down
 5864              	.LVL460:
2997:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5865              		.loc 1 2997 25 discriminator 1 view .LVU1883
 5866 044a 0028     		cmp	r0, #0
 5867 044c 3FF479AE 		beq	.L540
2999:src/keys.c    ****       }
ARM GAS  /tmp/cciIzcMf.s 			page 189


 5868              		.loc 1 2999 2 is_stmt 1 view .LVU1884
2999:src/keys.c    ****       }
 5869              		.loc 1 2999 16 is_stmt 0 view .LVU1885
 5870 0450 754B     		ldr	r3, .L1157+16
 5871 0452 0022     		movs	r2, #0
 5872 0454 1A74     		strb	r2, [r3, #16]
 5873 0456 74E6     		b	.L540
 5874              	.L543:
2987:src/keys.c    **** 	  /*
 5875              		.loc 1 2987 10 is_stmt 1 view .LVU1886
2987:src/keys.c    **** 	  /*
 5876              		.loc 1 2987 14 is_stmt 0 view .LVU1887
 5877 0458 FFF7FEFF 		bl	keyticks
 5878              	.LVL461:
2987:src/keys.c    **** 	  /*
 5879              		.loc 1 2987 13 view .LVU1888
 5880 045c 0C28     		cmp	r0, #12
 5881 045e 7FF76BAE 		ble	.L542
2991:src/keys.c    **** 	  message("NULL", CNULL);
 5882              		.loc 1 2991 4 is_stmt 1 view .LVU1889
2992:src/keys.c    **** 	  // Force display update on key-up
 5883              		.loc 1 2992 4 is_stmt 0 view .LVU1890
 5884 0462 7748     		ldr	r0, .L1157+40
2991:src/keys.c    **** 	  message("NULL", CNULL);
 5885              		.loc 1 2991 11 view .LVU1891
 5886 0464 3760     		str	r7, [r6]
2992:src/keys.c    **** 	  // Force display update on key-up
 5887              		.loc 1 2992 4 is_stmt 1 view .LVU1892
 5888 0466 3946     		mov	r1, r7
 5889 0468 FFF7FEFF 		bl	message
 5890              	.LVL462:
2994:src/keys.c    **** 	}
 5891              		.loc 1 2994 4 view .LVU1893
2994:src/keys.c    **** 	}
 5892              		.loc 1 2994 21 is_stmt 0 view .LVU1894
 5893 046c 6E4B     		ldr	r3, .L1157+16
 5894 046e DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 5895 0470 67F34512 		bfi	r2, r7, #5, #1
 5896 0474 DA75     		strb	r2, [r3, #23]
 5897 0476 5FE6     		b	.L542
 5898              	.LVL463:
 5899              	.L1091:
 5900              	.LBB1236:
 5901              	.LBB1181:
2835:src/keys.c    **** 
 5902              		.loc 1 2835 3 is_stmt 1 view .LVU1895
 5903              	.LBB685:
 5904              	.LBB686:
1229:src/keys.c    **** 	State2.dot = 0;
 5905              		.loc 1 1229 15 is_stmt 0 view .LVU1896
 5906 0478 22F06203 		bic	r3, r2, #98
 5907              	.LBE686:
 5908              	.LBE685:
2835:src/keys.c    **** 
 5909              		.loc 1 2835 10 view .LVU1897
 5910 047c E4B2     		uxtb	r4, r4
 5911              	.LVL464:
ARM GAS  /tmp/cciIzcMf.s 			page 190


 5912              	.LBB700:
 5913              	.LBI685:
1219:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 5914              		.loc 1 1219 12 is_stmt 1 view .LVU1898
 5915              	.LBB696:
1220:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 5916              		.loc 1 1220 2 view .LVU1899
1225:src/keys.c    **** 	int f = State2.dot;
 5917              		.loc 1 1225 2 view .LVU1900
1229:src/keys.c    **** 	State2.dot = 0;
 5918              		.loc 1 1229 15 is_stmt 0 view .LVU1901
 5919 047e 88F81530 		strb	r3, [r8, #21]
1225:src/keys.c    **** 	int f = State2.dot;
 5920              		.loc 1 1225 20 view .LVU1902
 5921 0482 C2F3400A 		ubfx	r10, r2, #1, #1
 5922              	.LVL465:
1226:src/keys.c    **** 
 5923              		.loc 1 1226 2 is_stmt 1 view .LVU1903
1226:src/keys.c    **** 
 5924              		.loc 1 1226 16 is_stmt 0 view .LVU1904
 5925 0486 C2F38019 		ubfx	r9, r2, #6, #1
 5926              	.LVL466:
1228:src/keys.c    **** 	State2.cmplx = 0;
 5927              		.loc 1 1228 2 is_stmt 1 view .LVU1905
1229:src/keys.c    **** 	State2.dot = 0;
 5928              		.loc 1 1229 2 view .LVU1906
1230:src/keys.c    **** #ifdef DM42
 5929              		.loc 1 1230 2 view .LVU1907
1232:src/keys.c    **** #endif
 5930              		.loc 1 1232 2 view .LVU1908
 5931              	.LBB687:
 5932              	.LBI687:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 5933              		.loc 1 102 13 view .LVU1909
 5934              	.LBE687:
 5935              	.LBE696:
 5936              	.LBE700:
 5937              	.LBE1181:
 5938              	.LBE1236:
 103:src/keys.c    **** }
 5939              		.loc 1 103 2 view .LVU1910
 5940              	.LBB1237:
 5941              	.LBB1182:
 5942              	.LBB701:
 5943              	.LBB697:
 5944              	.LBB694:
 5945              	.LBB688:
 5946              	.LBI688:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 5947              		.loc 1 92 20 view .LVU1911
 5948              	.LBB689:
  93:src/keys.c    **** 	State2.shifts = shift;
 5949              		.loc 1 93 2 view .LVU1912
 5950              	.LBB690:
 5951              	.LBI690:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5952              		.loc 1 84 13 view .LVU1913
ARM GAS  /tmp/cciIzcMf.s 			page 191


 5953              	.LBB691:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5954              		.loc 1 85 2 view .LVU1914
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5955              		.loc 1 85 18 is_stmt 0 view .LVU1915
 5956 048a FFF7FEFF 		bl	shift_down
 5957              	.LVL467:
  86:src/keys.c    **** }
 5958              		.loc 1 86 2 is_stmt 1 view .LVU1916
 5959              	.LBE691:
 5960              	.LBE690:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5961              		.loc 1 94 2 view .LVU1917
 5962              	.LBE689:
 5963              	.LBE688:
 5964              	.LBE694:
1234:src/keys.c    **** 
 5965              		.loc 1 1234 2 is_stmt 0 view .LVU1918
 5966 048e 2A2C     		cmp	r4, #42
 5967              	.LBB695:
 5968              	.LBB693:
 5969              	.LBB692:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5970              		.loc 1 94 16 view .LVU1919
 5971 0490 88F810B0 		strb	fp, [r8, #16]
  95:src/keys.c    **** 	return r;
 5972              		.loc 1 95 2 is_stmt 1 view .LVU1920
  95:src/keys.c    **** 	return r;
 5973              		.loc 1 95 19 is_stmt 0 view .LVU1921
 5974 0494 88F80DB0 		strb	fp, [r8, #13]
  96:src/keys.c    **** }
 5975              		.loc 1 96 2 is_stmt 1 view .LVU1922
 5976              	.LVL468:
  96:src/keys.c    **** }
 5977              		.loc 1 96 2 is_stmt 0 view .LVU1923
 5978              	.LBE692:
 5979              	.LBE693:
 5980              	.LBE695:
1234:src/keys.c    **** 
 5981              		.loc 1 1234 2 is_stmt 1 view .LVU1924
 5982 0498 00F25883 		bhi	.L615
 5983 049c 282C     		cmp	r4, #40
 5984 049e 00F27484 		bhi	.L616
 5985 04a2 013C     		subs	r4, r4, #1
 5986              	.LVL469:
1234:src/keys.c    **** 
 5987              		.loc 1 1234 2 is_stmt 0 view .LVU1925
 5988 04a4 E3B2     		uxtb	r3, r4
 5989 04a6 022B     		cmp	r3, #2
 5990 04a8 00F28981 		bhi	.L1067
1239:src/keys.c    **** 
 5991              		.loc 1 1239 3 is_stmt 1 view .LVU1926
1239:src/keys.c    **** 
 5992              		.loc 1 1239 54 is_stmt 0 view .LVU1927
 5993 04ac 654A     		ldr	r2, .L1157+44
 5994 04ae 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 5995 04b2 02EB4404 		add	r4, r2, r4, lsl #1
ARM GAS  /tmp/cciIzcMf.s 			page 192


 5996              	.LVL470:
1239:src/keys.c    **** 
 5997              		.loc 1 1239 27 view .LVU1928
 5998 04b6 BAF1000F 		cmp	r10, #0
1239:src/keys.c    **** 
 5999              		.loc 1 1239 54 view .LVU1929
 6000 04ba 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1239:src/keys.c    **** 
 6001              		.loc 1 1239 27 view .LVU1930
 6002 04be 14BF     		ite	ne
 6003 04c0 4FF4A062 		movne	r2, #1280
 6004 04c4 4FF40072 		moveq	r2, #512
1239:src/keys.c    **** 
 6005              		.loc 1 1239 37 view .LVU1931
 6006 04c8 4BEA020B 		orr	fp, fp, r2
 6007 04cc 5846     		mov	r0, fp
 6008              	.LVL471:
 6009              	.L620:
1239:src/keys.c    **** 
 6010              		.loc 1 1239 37 view .LVU1932
 6011              	.LBE697:
 6012              	.LBE701:
 6013              	.LBE1182:
 6014              	.LBE1237:
3141:src/keys.c    **** 	NonProgrammable = 0;
 6015              		.loc 1 3141 7 is_stmt 1 view .LVU1933
3141:src/keys.c    **** 	NonProgrammable = 0;
 6016              		.loc 1 3141 10 is_stmt 0 view .LVU1934
 6017 04ce 13F04003 		ands	r3, r3, #64
 6018 04d2 00F06C84 		beq	.L1111
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6019              		.loc 1 3142 2 is_stmt 1 view .LVU1935
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6020              		.loc 1 3142 18 is_stmt 0 view .LVU1936
 6021 04d6 5C4B     		ldr	r3, .L1157+48
 6022 04d8 0022     		movs	r2, #0
 6023 04da 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6024              		.loc 1 3143 2 is_stmt 1 view .LVU1937
 6025              	.LVL472:
 6026              	.L833:
3156:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6027              		.loc 1 3156 4 view .LVU1938
3156:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6028              		.loc 1 3156 11 is_stmt 0 view .LVU1939
 6029 04dc 5B4A     		ldr	r2, .L1157+52
3157:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6030              		.loc 1 3157 25 view .LVU1940
 6031 04de 5C4B     		ldr	r3, .L1157+56
3156:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6032              		.loc 1 3156 11 view .LVU1941
 6033 04e0 1060     		str	r0, [r2]
3157:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6034              		.loc 1 3157 4 is_stmt 1 view .LVU1942
3157:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6035              		.loc 1 3157 25 is_stmt 0 view .LVU1943
 6036 04e2 0122     		movs	r2, #1
ARM GAS  /tmp/cciIzcMf.s 			page 193


 6037 04e4 4F4C     		ldr	r4, .L1157+12
 6038 04e6 1A60     		str	r2, [r3]
3158:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 6039              		.loc 1 3158 4 is_stmt 1 view .LVU1944
 6040 04e8 FFF7FEFF 		bl	finish_RPN
 6041              	.LVL473:
3159:src/keys.c    **** 	}
 6042              		.loc 1 3159 4 view .LVU1945
 6043 04ec 04E6     		b	.L839
 6044              	.LVL474:
 6045              	.L671:
 6046              	.LBB1238:
 6047              	.LBB1183:
2884:src/keys.c    **** 
 6048              		.loc 1 2884 3 view .LVU1946
 6049              	.LBB702:
 6050              	.LBI702:
2364:src/keys.c    **** 	enum shifts shift = reset_shift();
 6051              		.loc 1 2364 12 view .LVU1947
 6052              	.LBB703:
2365:src/keys.c    **** 	unsigned int ch = 0;
 6053              		.loc 1 2365 2 view .LVU1948
 6054              	.LBB704:
 6055              	.LBI704:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 6056              		.loc 1 102 13 view .LVU1949
 6057              	.LBE704:
 6058              	.LBE703:
 6059              	.LBE702:
 6060              	.LBE1183:
 6061              	.LBE1238:
 103:src/keys.c    **** }
 6062              		.loc 1 103 2 view .LVU1950
 6063              	.LBB1239:
 6064              	.LBB1184:
 6065              	.LBB734:
 6066              	.LBB730:
 6067              	.LBB711:
 6068              	.LBB705:
 6069              	.LBI705:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 6070              		.loc 1 92 20 view .LVU1951
 6071              	.LBB706:
  93:src/keys.c    **** 	State2.shifts = shift;
 6072              		.loc 1 93 2 view .LVU1952
 6073              	.LBB707:
 6074              	.LBI707:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 6075              		.loc 1 84 13 view .LVU1953
 6076              	.LBB708:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6077              		.loc 1 85 2 view .LVU1954
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6078              		.loc 1 85 18 is_stmt 0 view .LVU1955
 6079 04ee FFF7FEFF 		bl	shift_down
 6080              	.LVL475:
  86:src/keys.c    **** }
ARM GAS  /tmp/cciIzcMf.s 			page 194


 6081              		.loc 1 86 2 is_stmt 1 view .LVU1956
  86:src/keys.c    **** }
 6082              		.loc 1 86 52 is_stmt 0 view .LVU1957
 6083 04f2 0146     		mov	r1, r0
 6084 04f4 08B9     		cbnz	r0, .L669
 6085 04f6 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 6086              	.L669:
 6087              	.LVL476:
  86:src/keys.c    **** }
 6088              		.loc 1 86 52 view .LVU1958
 6089              	.LBE708:
 6090              	.LBE707:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 6091              		.loc 1 94 2 is_stmt 1 view .LVU1959
 6092              	.LBE706:
 6093              	.LBE705:
 6094              	.LBE711:
2369:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6095              		.loc 1 2369 5 is_stmt 0 view .LVU1960
 6096 04fa 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 6097              	.LBB712:
 6098              	.LBB710:
 6099              	.LBB709:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 6100              		.loc 1 94 16 view .LVU1961
 6101 04fe 0023     		movs	r3, #0
 6102 0500 88F81030 		strb	r3, [r8, #16]
  95:src/keys.c    **** 	return r;
 6103              		.loc 1 95 2 is_stmt 1 view .LVU1962
  95:src/keys.c    **** 	return r;
 6104              		.loc 1 95 19 is_stmt 0 view .LVU1963
 6105 0504 88F80D30 		strb	r3, [r8, #13]
  96:src/keys.c    **** }
 6106              		.loc 1 96 2 is_stmt 1 view .LVU1964
 6107              	.LVL477:
  96:src/keys.c    **** }
 6108              		.loc 1 96 2 is_stmt 0 view .LVU1965
 6109              	.LBE709:
 6110              	.LBE710:
 6111              	.LBE712:
2366:src/keys.c    **** 	unsigned int opcode;
 6112              		.loc 1 2366 2 is_stmt 1 view .LVU1966
2367:src/keys.c    **** 
 6113              		.loc 1 2367 2 view .LVU1967
2369:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6114              		.loc 1 2369 2 view .LVU1968
2369:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6115              		.loc 1 2369 5 is_stmt 0 view .LVU1969
 6116 0508 002A     		cmp	r2, #0
 6117 050a 40F06487 		bne	.L1112
2378:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 6118              		.loc 1 2378 2 is_stmt 1 view .LVU1970
 6119 050e 102C     		cmp	r4, #16
 6120 0510 01F08281 		beq	.L674
 6121 0514 242C     		cmp	r4, #36
 6122 0516 01F0B481 		beq	.L675
 6123 051a 0C2C     		cmp	r4, #12
ARM GAS  /tmp/cciIzcMf.s 			page 195


 6124 051c 01F08981 		beq	.L1113
 6125              	.L676:
2411:src/keys.c    **** 	if (ch == 0)
 6126              		.loc 1 2411 2 view .LVU1971
 6127              	.LBB713:
 6128              	.LBB714:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6129              		.loc 1 434 6 is_stmt 0 view .LVU1972
 6130 0520 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6131              	.LVL478:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6132              		.loc 1 434 6 view .LVU1973
 6133              	.LBE714:
 6134              	.LBI713:
 384:src/keys.c    **** {
 6135              		.loc 1 384 12 is_stmt 1 view .LVU1974
 6136              	.LBB719:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6137              		.loc 1 386 2 view .LVU1975
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6138              		.loc 1 434 2 view .LVU1976
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6139              		.loc 1 434 5 is_stmt 0 view .LVU1977
 6140 0524 DA06     		lsls	r2, r3, #27
 6141 0526 03D5     		bpl	.L679
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6142              		.loc 1 435 3 is_stmt 1 view .LVU1978
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6143              		.loc 1 435 6 is_stmt 0 view .LVU1979
 6144 0528 0029     		cmp	r1, #0
 6145 052a 41F05383 		bne	.L1114
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 6146              		.loc 1 436 10 view .LVU1980
 6147 052e 0421     		movs	r1, #4
 6148              	.LVL479:
 6149              	.L679:
 440:src/keys.c    **** }
 6150              		.loc 1 440 2 is_stmt 1 view .LVU1981
 6151              	.LBB715:
 6152              	.LBI715:
 119:src/keys.c    **** {
 6153              		.loc 1 119 12 view .LVU1982
 6154              	.LBB716:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6155              		.loc 1 121 2 view .LVU1983
 131:src/keys.c    **** }
 6156              		.loc 1 131 2 view .LVU1984
 131:src/keys.c    **** }
 6157              		.loc 1 131 23 is_stmt 0 view .LVU1985
 6158 0530 484B     		ldr	r3, .L1157+60
 6159              	.LBE716:
 6160              	.LBE715:
 440:src/keys.c    **** }
 6161              		.loc 1 440 49 view .LVU1986
 6162 0532 494A     		ldr	r2, .L1157+64
 6163              	.LBB718:
 6164              	.LBB717:
ARM GAS  /tmp/cciIzcMf.s 			page 196


 131:src/keys.c    **** }
 6165              		.loc 1 131 23 view .LVU1987
 6166 0534 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 6167              	.LBE717:
 6168              	.LBE718:
 440:src/keys.c    **** }
 6169              		.loc 1 440 49 view .LVU1988
 6170 0536 0620     		movs	r0, #6
 6171 0538 00FB0323 		mla	r3, r0, r3, r2
 6172              	.LBE719:
 6173              	.LBE713:
2411:src/keys.c    **** 	if (ch == 0)
 6174              		.loc 1 2411 5 view .LVU1989
 6175 053c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 6176              	.LVL480:
2412:src/keys.c    **** 		return STATE_UNFINISHED;
 6177              		.loc 1 2412 2 is_stmt 1 view .LVU1990
2412:src/keys.c    **** 		return STATE_UNFINISHED;
 6178              		.loc 1 2412 5 is_stmt 0 view .LVU1991
 6179 053e 002B     		cmp	r3, #0
 6180 0540 00F03D81 		beq	.L1067
 6181              	.L673:
2415:src/keys.c    **** 		State2.digval = ch;
 6182              		.loc 1 2415 2 is_stmt 1 view .LVU1992
2415:src/keys.c    **** 		State2.digval = ch;
 6183              		.loc 1 2415 12 is_stmt 0 view .LVU1993
 6184 0544 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2415:src/keys.c    **** 		State2.digval = ch;
 6185              		.loc 1 2415 5 view .LVU1994
 6186 0548 002A     		cmp	r2, #0
 6187 054a 01F09181 		beq	.L1115
2419:src/keys.c    **** 		State2.digval2 = ch;
 6188              		.loc 1 2419 9 is_stmt 1 view .LVU1995
2419:src/keys.c    **** 		State2.digval2 = ch;
 6189              		.loc 1 2419 12 is_stmt 0 view .LVU1996
 6190 054e 012A     		cmp	r2, #1
 6191 0550 01F0AB81 		beq	.L1116
2424:src/keys.c    **** 
 6192              		.loc 1 2424 2 is_stmt 1 view .LVU1997
 6193              	.LBB721:
 6194              	.LBI721:
2357:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 6195              		.loc 1 2357 13 view .LVU1998
 6196              	.LBB722:
2359:src/keys.c    **** 	if (! State2.alphas )
 6197              		.loc 1 2359 2 view .LVU1999
2359:src/keys.c    **** 	if (! State2.alphas )
 6198              		.loc 1 2359 15 is_stmt 0 view .LVU2000
 6199 0554 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
2360:src/keys.c    **** 		State2.alphashift = 0;
 6200              		.loc 1 2360 6 view .LVU2001
 6201 0558 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2359:src/keys.c    **** 	if (! State2.alphas )
 6202              		.loc 1 2359 15 view .LVU2002
 6203 055c 6FF3C301 		bfc	r1, #3, #1
 6204 0560 88F81510 		strb	r1, [r8, #21]
2360:src/keys.c    **** 		State2.alphashift = 0;
ARM GAS  /tmp/cciIzcMf.s 			page 197


 6205              		.loc 1 2360 2 is_stmt 1 view .LVU2003
2360:src/keys.c    **** 		State2.alphashift = 0;
 6206              		.loc 1 2360 5 is_stmt 0 view .LVU2004
 6207 0564 12F00801 		ands	r1, r2, #8
2361:src/keys.c    **** }
 6208              		.loc 1 2361 3 is_stmt 1 view .LVU2005
2361:src/keys.c    **** }
 6209              		.loc 1 2361 21 is_stmt 0 view .LVU2006
 6210 0568 04BF     		itt	eq
 6211 056a 61F30412 		bfieq	r2, r1, #4, #1
 6212 056e 88F81620 		strbeq	r2, [r8, #22]
 6213              	.LVL481:
 6214              	.L678:
2361:src/keys.c    **** }
 6215              		.loc 1 2361 21 view .LVU2007
 6216              	.LBE722:
 6217              	.LBE721:
2427:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6218              		.loc 1 2427 2 is_stmt 1 view .LVU2008
2429:src/keys.c    **** }
 6219              		.loc 1 2429 2 view .LVU2009
2427:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6220              		.loc 1 2427 21 is_stmt 0 view .LVU2010
 6221 0572 98F81FB0 		ldrb	fp, [r8, #31]	@ zero_extendqisi2
2428:src/keys.c    **** 	return opcode;
 6222              		.loc 1 2428 17 view .LVU2011
 6223 0576 B8F80810 		ldrh	r1, [r8, #8]
2428:src/keys.c    **** 	return opcode;
 6224              		.loc 1 2428 34 view .LVU2012
 6225 057a 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2427:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6226              		.loc 1 2427 29 view .LVU2013
 6227 057e 4FEA0B2B 		lsl	fp, fp, #8
2427:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6228              		.loc 1 2427 18 view .LVU2014
 6229 0582 0BF5704B 		add	fp, fp, #61440
2428:src/keys.c    **** 	return opcode;
 6230              		.loc 1 2428 9 view .LVU2015
 6231 0586 8B44     		add	fp, fp, r1
2428:src/keys.c    **** 	return opcode;
 6232              		.loc 1 2428 25 view .LVU2016
 6233 0588 0BEB024B 		add	fp, fp, r2, lsl #16
2427:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6234              		.loc 1 2427 9 view .LVU2017
 6235 058c 0BEB036B 		add	fp, fp, r3, lsl #24
 6236              	.LVL482:
 6237              	.L594:
2427:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6238              		.loc 1 2427 9 view .LVU2018
 6239              	.LBE730:
 6240              	.LBE734:
 6241              	.LBE1184:
 6242              	.LBE1239:
3105:src/keys.c    ****     case STATE_SST:
 6243              		.loc 1 3105 5 is_stmt 1 view .LVU2019
 6244 0590 ABF12B03 		sub	r3, fp, #43
 6245 0594 082B     		cmp	r3, #8
ARM GAS  /tmp/cciIzcMf.s 			page 198


 6246 0596 61D8     		bhi	.L822
 6247 0598 01A2     		adr	r2, .L823
 6248 059a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6249 059e 00BF     		.p2align 2
 6250              	.L823:
 6251 05a0 C5050000 		.word	.L828+1
 6252 05a4 C5050000 		.word	.L828+1
 6253 05a8 5D060000 		.word	.L822+1
 6254 05ac E9050000 		.word	.L757+1
 6255 05b0 DB050000 		.word	.L755+1
 6256 05b4 03060000 		.word	.L752+1
 6257 05b8 9D010000 		.word	.L574+1
 6258 05bc A9000000 		.word	.L565+1
 6259 05c0 A9000000 		.word	.L565+1
 6260              		.p2align 1
 6261              	.L828:
3132:src/keys.c    **** 	set_window(c);
 6262              		.loc 1 3132 7 view .LVU2020
3132:src/keys.c    **** 	set_window(c);
 6263              		.loc 1 3132 12 is_stmt 0 view .LVU2021
 6264 05c4 FFF7FEFF 		bl	is_bad_cmdline
 6265              	.LVL483:
3132:src/keys.c    **** 	set_window(c);
 6266              		.loc 1 3132 10 view .LVU2022
 6267 05c8 0346     		mov	r3, r0
 6268 05ca 0028     		cmp	r0, #0
 6269 05cc 7FF46CAD 		bne	.L565
3133:src/keys.c    ****       break;
 6270              		.loc 1 3133 2 is_stmt 1 view .LVU2023
 6271 05d0 5846     		mov	r0, fp
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 6272              		.loc 1 2948 7 is_stmt 0 view .LVU2024
 6273 05d2 1F46     		mov	r7, r3
3133:src/keys.c    ****       break;
 6274              		.loc 1 3133 2 view .LVU2025
 6275 05d4 FFF7FEFF 		bl	set_window
 6276              	.LVL484:
 6277 05d8 66E5     		b	.L565
 6278              	.LVL485:
 6279              	.L755:
3113:src/keys.c    ****       break;
 6280              		.loc 1 3113 7 is_stmt 1 view .LVU2026
 6281 05da 4FF0FF30 		mov	r0, #-1
 6282 05de FFF7FEFF 		bl	xeq_sst_bst
 6283              	.LVL486:
3114:src/keys.c    **** 
 6284              		.loc 1 3114 7 view .LVU2027
 6285 05e2 4FF02F0B 		mov	fp, #47
 6286 05e6 5FE5     		b	.L565
 6287              	.L757:
3107:src/keys.c    ****       OpCodeDisplayPending = 0;
 6288              		.loc 1 3107 7 view .LVU2028
3107:src/keys.c    ****       OpCodeDisplayPending = 0;
 6289              		.loc 1 3107 14 is_stmt 0 view .LVU2029
 6290 05e8 1849     		ldr	r1, .L1157+52
3108:src/keys.c    ****       xeq_sst_bst(0);
 6291              		.loc 1 3108 28 view .LVU2030
ARM GAS  /tmp/cciIzcMf.s 			page 199


 6292 05ea 194A     		ldr	r2, .L1157+56
3107:src/keys.c    ****       OpCodeDisplayPending = 0;
 6293              		.loc 1 3107 14 view .LVU2031
 6294 05ec 2E23     		movs	r3, #46
3108:src/keys.c    ****       xeq_sst_bst(0);
 6295              		.loc 1 3108 28 view .LVU2032
 6296 05ee 0020     		movs	r0, #0
3107:src/keys.c    ****       OpCodeDisplayPending = 0;
 6297              		.loc 1 3107 14 view .LVU2033
 6298 05f0 0B60     		str	r3, [r1]
3108:src/keys.c    ****       xeq_sst_bst(0);
 6299              		.loc 1 3108 7 is_stmt 1 view .LVU2034
3110:src/keys.c    **** 
 6300              		.loc 1 3110 7 is_stmt 0 view .LVU2035
 6301 05f2 9B46     		mov	fp, r3
3108:src/keys.c    ****       xeq_sst_bst(0);
 6302              		.loc 1 3108 28 view .LVU2036
 6303 05f4 1060     		str	r0, [r2]
3109:src/keys.c    ****       break;
 6304              		.loc 1 3109 7 is_stmt 1 view .LVU2037
 6305 05f6 FFF7FEFF 		bl	xeq_sst_bst
 6306              	.LVL487:
3110:src/keys.c    **** 
 6307              		.loc 1 3110 7 view .LVU2038
 6308 05fa 55E5     		b	.L565
 6309              	.LVL488:
 6310              	.L746:
 6311              	.LBB1240:
 6312              	.LBB1185:
 6313              	.LBB735:
 6314              	.LBB736:
1429:src/keys.c    **** 			return STATE_BACKSPACE;
 6315              		.loc 1 1429 3 view .LVU2039
1429:src/keys.c    **** 			return STATE_BACKSPACE;
 6316              		.loc 1 1429 6 is_stmt 0 view .LVU2040
 6317 05fc 0028     		cmp	r0, #0
 6318 05fe 41F0F482 		bne	.L753
 6319              	.LVL489:
 6320              	.L752:
1429:src/keys.c    **** 			return STATE_BACKSPACE;
 6321              		.loc 1 1429 6 view .LVU2041
 6322              	.LBE736:
 6323              	.LBE735:
 6324              	.LBE1185:
 6325              	.LBE1240:
3117:src/keys.c    **** 	delprog();
 6326              		.loc 1 3117 7 is_stmt 1 view .LVU2042
3117:src/keys.c    **** 	delprog();
 6327              		.loc 1 3117 11 is_stmt 0 view .LVU2043
 6328 0602 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3117:src/keys.c    **** 	delprog();
 6329              		.loc 1 3117 10 view .LVU2044
 6330 0606 5A06     		lsls	r2, r3, #25
 6331 0608 40F1EB80 		bpl	.L829
3119:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6332              		.loc 1 3119 12 is_stmt 1 view .LVU2045
3119:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
ARM GAS  /tmp/cciIzcMf.s 			page 200


 6333              		.loc 1 3119 15 is_stmt 0 view .LVU2046
 6334 060c 1C07     		lsls	r4, r3, #28
 6335 060e 00F10D82 		bmi	.L830
 6336              	.L1062:
 6337              	.LBB1241:
3122:src/keys.c    ****       }
 6338              		.loc 1 3122 9 view .LVU2047
 6339 0612 4FF0300B 		mov	fp, #48
 6340 0616 47E5     		b	.L565
 6341              	.L1158:
 6342              		.align	2
 6343              	.L1157:
 6344 0618 00000000 		.word	main_ram
 6345 061c 00000000 		.word	.LANCHOR18
 6346 0620 00000000 		.word	.LANCHOR22
 6347 0624 00000000 		.word	JustDisplayed
 6348 0628 00000000 		.word	StateWhileOn
 6349 062c 00000000 		.word	DispMsg
 6350 0630 0C000000 		.word	.LC2
 6351 0634 00000000 		.word	Running
 6352 0638 00000000 		.word	ShowRPN
 6353 063c 00000000 		.word	WasDataEntry
 6354 0640 04000000 		.word	.LC1
 6355 0644 00000000 		.word	.LANCHOR13
 6356 0648 00000000 		.word	NonProgrammable
 6357 064c 00000000 		.word	OpCode
 6358 0650 00000000 		.word	OpCodeDisplayPending
 6359 0654 00000000 		.word	.LANCHOR1
 6360 0658 00000000 		.word	.LANCHOR9
 6361              	.LVL490:
 6362              	.L822:
3122:src/keys.c    ****       }
 6363              		.loc 1 3122 9 view .LVU2048
 6364              	.LBE1241:
3141:src/keys.c    **** 	NonProgrammable = 0;
 6365              		.loc 1 3141 7 is_stmt 1 view .LVU2049
3141:src/keys.c    **** 	NonProgrammable = 0;
 6366              		.loc 1 3141 11 is_stmt 0 view .LVU2050
 6367 065c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3141:src/keys.c    **** 	NonProgrammable = 0;
 6368              		.loc 1 3141 10 view .LVU2051
 6369 0660 5C06     		lsls	r4, r3, #25
 6370 0662 40F13E81 		bpl	.L836
 6371 0666 CC4A     		ldr	r2, .L1159
 6372 0668 5846     		mov	r0, fp
 6373              	.LVL491:
 6374              	.L837:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6375              		.loc 1 3142 2 is_stmt 1 view .LVU2052
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6376              		.loc 1 3142 18 is_stmt 0 view .LVU2053
 6377 066a 0023     		movs	r3, #0
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6378              		.loc 1 3143 5 view .LVU2054
 6379 066c 1428     		cmp	r0, #20
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6380              		.loc 1 3142 18 view .LVU2055
ARM GAS  /tmp/cciIzcMf.s 			page 201


 6381 066e 1360     		str	r3, [r2]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6382              		.loc 1 3143 2 is_stmt 1 view .LVU2056
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6383              		.loc 1 3143 5 is_stmt 0 view .LVU2057
 6384 0670 3FF634AF 		bhi	.L833
3144:src/keys.c    **** 	    // Data entry key
 6385              		.loc 1 3144 4 is_stmt 1 view .LVU2058
3144:src/keys.c    **** 	    // Data entry key
 6386              		.loc 1 3144 7 is_stmt 0 view .LVU2059
 6387 0674 BBF1000F 		cmp	fp, #0
 6388 0678 05D1     		bne	.L835
3144:src/keys.c    **** 	    // Data entry key
 6389              		.loc 1 3144 38 discriminator 1 view .LVU2060
 6390 067a FFF7FEFF 		bl	is_bad_cmdline
 6391              	.LVL492:
3144:src/keys.c    **** 	    // Data entry key
 6392              		.loc 1 3144 34 discriminator 1 view .LVU2061
 6393 067e 0028     		cmp	r0, #0
 6394 0680 40F06182 		bne	.L892
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6395              		.loc 1 3143 32 view .LVU2062
 6396 0684 5846     		mov	r0, fp
 6397              	.L835:
3147:src/keys.c    **** #endif
 6398              		.loc 1 3147 6 is_stmt 1 view .LVU2063
3149:src/keys.c    **** 	    xeq(c);
 6399              		.loc 1 3149 37 is_stmt 0 view .LVU2064
 6400 0686 98F81C70 		ldrb	r7, [r8, #28]	@ zero_extendqisi2
3147:src/keys.c    **** #endif
 6401              		.loc 1 3147 19 view .LVU2065
 6402 068a 0123     		movs	r3, #1
 6403 068c C9F80030 		str	r3, [r9]
3149:src/keys.c    **** 	    xeq(c);
 6404              		.loc 1 3149 6 is_stmt 1 view .LVU2066
3149:src/keys.c    **** 	    xeq(c);
 6405              		.loc 1 3149 37 is_stmt 0 view .LVU2067
 6406 0690 B7FA87F7 		clz	r7, r7
3150:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6407              		.loc 1 3150 6 view .LVU2068
 6408 0694 FFF7FEFF 		bl	xeq
 6409              	.LVL493:
3151:src/keys.c    **** 	  }
 6410              		.loc 1 3151 38 view .LVU2069
 6411 0698 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
3149:src/keys.c    **** 	    xeq(c);
 6412              		.loc 1 3149 37 view .LVU2070
 6413 069c 7F09     		lsrs	r7, r7, #5
 6414              	.LVL494:
3150:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6415              		.loc 1 3150 6 is_stmt 1 view .LVU2071
3151:src/keys.c    **** 	  }
 6416              		.loc 1 3151 6 view .LVU2072
3151:src/keys.c    **** 	  }
 6417              		.loc 1 3151 20 is_stmt 0 view .LVU2073
 6418 069e 002B     		cmp	r3, #0
 6419 06a0 08BF     		it	eq
ARM GAS  /tmp/cciIzcMf.s 			page 202


 6420 06a2 0127     		moveq	r7, #1
 6421              	.LVL495:
3151:src/keys.c    **** 	  }
 6422              		.loc 1 3151 20 view .LVU2074
 6423 06a4 00E5     		b	.L565
 6424              	.LVL496:
 6425              	.L820:
 6426              	.LBB1242:
 6427              	.LBB1186:
 6428              	.LBB797:
 6429              	.LBB670:
 812:src/keys.c    **** #else
 6430              		.loc 1 812 4 is_stmt 1 view .LVU2075
 812:src/keys.c    **** #else
 6431              		.loc 1 812 17 is_stmt 0 view .LVU2076
 6432 06a6 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 6433 06aa 43F00203 		orr	r3, r3, #2
 6434 06ae 88F81530 		strb	r3, [r8, #21]
 818:src/keys.c    **** 
 6435              		.loc 1 818 4 is_stmt 1 view .LVU2077
 836:src/keys.c    **** }
 6436              		.loc 1 836 9 is_stmt 0 view .LVU2078
 6437 06b2 4FF0330B 		mov	fp, #51
 818:src/keys.c    **** 
 6438              		.loc 1 818 4 view .LVU2079
 6439 06b6 F7E4     		b	.L565
 6440              	.L1109:
 729:src/keys.c    **** 	  case K00:
 6441              		.loc 1 729 4 is_stmt 1 view .LVU2080
 6442 06b8 122C     		cmp	r4, #18
 6443 06ba 0BD8     		bhi	.L803
 6444 06bc DFE804F0 		tbb	[pc, r4]
 6445              	.L805:
 6446 06c0 C3       		.byte	(.L808-.L805)/2
 6447 06c1 B7       		.byte	(.L807-.L805)/2
 6448 06c2 0A       		.byte	(.L803-.L805)/2
 6449 06c3 A7       		.byte	(.L806-.L805)/2
 6450 06c4 0A       		.byte	(.L803-.L805)/2
 6451 06c5 0A       		.byte	(.L803-.L805)/2
 6452 06c6 0A       		.byte	(.L803-.L805)/2
 6453 06c7 0A       		.byte	(.L803-.L805)/2
 6454 06c8 0A       		.byte	(.L803-.L805)/2
 6455 06c9 0A       		.byte	(.L803-.L805)/2
 6456 06ca 0A       		.byte	(.L803-.L805)/2
 6457 06cb 0A       		.byte	(.L803-.L805)/2
 6458 06cc 0A       		.byte	(.L803-.L805)/2
 6459 06cd 0A       		.byte	(.L803-.L805)/2
 6460 06ce 0A       		.byte	(.L803-.L805)/2
 6461 06cf 0A       		.byte	(.L803-.L805)/2
 6462 06d0 0A       		.byte	(.L803-.L805)/2
 6463 06d1 0A       		.byte	(.L803-.L805)/2
 6464 06d2 96       		.byte	(.L804-.L805)/2
 6465 06d3 00       		.p2align 1
 6466              	.L803:
 759:src/keys.c    **** 	  }
 6467              		.loc 1 759 12 view .LVU2081
 764:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/cciIzcMf.s 			page 203


 6468              		.loc 1 764 2 view .LVU2082
 6469 06d4 033C     		subs	r4, r4, #3
 6470 06d6 2A2C     		cmp	r4, #42
 6471 06d8 3FF65AAF 		bhi	.L594
 6472 06dc 01A2     		adr	r2, .L814
 6473 06de 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 6474 06e2 00BF     		.p2align 2
 6475              	.L814:
 6476 06e4 5D080000 		.word	.L817+1
 6477 06e8 91050000 		.word	.L594+1
 6478 06ec 91050000 		.word	.L594+1
 6479 06f0 C5070000 		.word	.L813+1
 6480 06f4 C5070000 		.word	.L813+1
 6481 06f8 91050000 		.word	.L594+1
 6482 06fc 91050000 		.word	.L594+1
 6483 0700 91050000 		.word	.L594+1
 6484 0704 91050000 		.word	.L594+1
 6485 0708 91050000 		.word	.L594+1
 6486 070c 91050000 		.word	.L594+1
 6487 0710 91050000 		.word	.L594+1
 6488 0714 91050000 		.word	.L594+1
 6489 0718 DB070000 		.word	.L816+1
 6490 071c 91050000 		.word	.L594+1
 6491 0720 C5070000 		.word	.L813+1
 6492 0724 91050000 		.word	.L594+1
 6493 0728 91050000 		.word	.L594+1
 6494 072c 91050000 		.word	.L594+1
 6495 0730 91050000 		.word	.L594+1
 6496 0734 91050000 		.word	.L594+1
 6497 0738 91050000 		.word	.L594+1
 6498 073c 91050000 		.word	.L594+1
 6499 0740 91050000 		.word	.L594+1
 6500 0744 91050000 		.word	.L594+1
 6501 0748 91050000 		.word	.L594+1
 6502 074c 91050000 		.word	.L594+1
 6503 0750 91050000 		.word	.L594+1
 6504 0754 91050000 		.word	.L594+1
 6505 0758 91050000 		.word	.L594+1
 6506 075c 91050000 		.word	.L594+1
 6507 0760 91050000 		.word	.L594+1
 6508 0764 91050000 		.word	.L594+1
 6509 0768 91050000 		.word	.L594+1
 6510 076c 91050000 		.word	.L594+1
 6511 0770 91050000 		.word	.L594+1
 6512 0774 91050000 		.word	.L594+1
 6513 0778 91050000 		.word	.L594+1
 6514 077c 91050000 		.word	.L594+1
 6515 0780 91050000 		.word	.L594+1
 6516 0784 91050000 		.word	.L594+1
 6517 0788 69080000 		.word	.L815+1
 6518 078c BF070000 		.word	.L1067+1
 6519              	.LVL497:
 6520              		.p2align 1
 6521              	.L722:
 764:src/keys.c    **** #ifdef DM42
 6522              		.loc 1 764 2 is_stmt 0 view .LVU2083
 6523              	.LBE670:
ARM GAS  /tmp/cciIzcMf.s 			page 204


 6524              	.LBE797:
 6525              	.LBB798:
 6526              	.LBB799:
2708:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6527              		.loc 1 2708 3 is_stmt 1 view .LVU2084
2708:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6528              		.loc 1 2708 13 is_stmt 0 view .LVU2085
 6529 0790 B8F80830 		ldrh	r3, [r8, #8]
2708:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6530              		.loc 1 2708 6 view .LVU2086
 6531 0794 002B     		cmp	r3, #0
 6532 0796 01F01782 		beq	.L723
2709:src/keys.c    **** 				State2.digval = global_regs();
 6533              		.loc 1 2709 4 is_stmt 1 view .LVU2087
2709:src/keys.c    **** 				State2.digval = global_regs();
 6534              		.loc 1 2709 8 is_stmt 0 view .LVU2088
 6535 079a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2709:src/keys.c    **** 				State2.digval = global_regs();
 6536              		.loc 1 2709 7 view .LVU2089
 6537 079e D207     		lsls	r2, r2, #31
 6538 07a0 02D4     		bmi	.L724
2709:src/keys.c    **** 				State2.digval = global_regs();
 6539              		.loc 1 2709 23 view .LVU2090
 6540 07a2 642B     		cmp	r3, #100
 6541 07a4 01F09A82 		beq	.L1117
 6542              	.LVL498:
 6543              	.L724:
2711:src/keys.c    **** 		}
 6544              		.loc 1 2711 4 is_stmt 1 view .LVU2091
 6545 07a8 B8F80830 		ldrh	r3, [r8, #8]
 6546 07ac 013B     		subs	r3, r3, #1
 6547              	.L1059:
2711:src/keys.c    **** 		}
 6548              		.loc 1 2711 4 is_stmt 0 view .LVU2092
 6549 07ae A8F80830 		strh	r3, [r8, #8]	@ movhi
 6550              	.LVL499:
 6551              	.L715:
2763:src/keys.c    **** 	return STATE_UNFINISHED;
 6552              		.loc 1 2763 2 is_stmt 1 view .LVU2093
2763:src/keys.c    **** 	return STATE_UNFINISHED;
 6553              		.loc 1 2763 16 is_stmt 0 view .LVU2094
 6554 07b2 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6555 07b6 6FF3C503 		bfc	r3, #3, #3
 6556 07ba 88F81430 		strb	r3, [r8, #20]
 6557              	.LVL500:
 6558              	.L1067:
2764:src/keys.c    **** }
 6559              		.loc 1 2764 2 is_stmt 1 view .LVU2095
2764:src/keys.c    **** }
 6560              		.loc 1 2764 9 is_stmt 0 view .LVU2096
 6561 07be 4FF0330B 		mov	fp, #51
 6562 07c2 71E4     		b	.L565
 6563              	.L813:
 6564              	.LBE799:
 6565              	.LBE798:
 6566              	.LBB832:
 6567              	.LBB671:
ARM GAS  /tmp/cciIzcMf.s 			page 205


 830:src/keys.c    **** 		break;
 6568              		.loc 1 830 3 is_stmt 1 view .LVU2097
 6569              	.LVL501:
 6570              	.LBB668:
 6571              	.LBI668:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 6572              		.loc 1 501 13 view .LVU2098
 6573              	.LBB669:
 502:src/keys.c    **** 		return;
 6574              		.loc 1 502 2 view .LVU2099
 502:src/keys.c    **** 		return;
 6575              		.loc 1 502 6 is_stmt 0 view .LVU2100
 6576 07c4 FFF7FEFF 		bl	is_bad_cmdline
 6577              	.LVL502:
 502:src/keys.c    **** 		return;
 6578              		.loc 1 502 5 view .LVU2101
 6579 07c8 0446     		mov	r4, r0
 6580 07ca 0028     		cmp	r0, #0
 6581 07cc F7D1     		bne	.L1067
 6582 07ce 5FFA8AF0 		uxtb	r0, r10
 6583 07d2 FFF7FEFF 		bl	init_arg.part.0
 6584              	.LVL503:
 6585              	.LBE669:
 6586              	.LBE668:
 6587              	.LBE671:
 6588              	.LBE832:
 6589              	.LBE1186:
 6590              	.LBE1242:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 6591              		.loc 1 2948 7 view .LVU2102
 6592 07d6 2746     		mov	r7, r4
 6593 07d8 F1E7     		b	.L1067
 6594              	.LVL504:
 6595              	.L816:
 6596              	.LBB1243:
 6597              	.LBB1187:
 6598              	.LBB833:
 6599              	.LBB672:
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6600              		.loc 1 821 3 is_stmt 1 view .LVU2103
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6601              		.loc 1 821 6 is_stmt 0 view .LVU2104
 6602 07da 8806     		lsls	r0, r1, #26
 6603 07dc EFD4     		bmi	.L1067
 823:src/keys.c    **** 			return op;
 6604              		.loc 1 823 3 is_stmt 1 view .LVU2105
 823:src/keys.c    **** 			return op;
 6605              		.loc 1 823 6 is_stmt 0 view .LVU2106
 6606 07de 5906     		lsls	r1, r3, #25
 6607 07e0 5AD4     		bmi	.L821
 6608              	.LVL505:
 6609              	.L829:
 823:src/keys.c    **** 			return op;
 6610              		.loc 1 823 6 view .LVU2107
 6611              	.LBE672:
 6612              	.LBE833:
 6613              	.LBE1187:
ARM GAS  /tmp/cciIzcMf.s 			page 206


 6614              	.LBE1243:
3118:src/keys.c    ****       else if (State2.alphas) {
 6615              		.loc 1 3118 2 is_stmt 1 view .LVU2108
 6616 07e2 FFF7FEFF 		bl	delprog
 6617              	.LVL506:
 6618 07e6 4FF0300B 		mov	fp, #48
 6619 07ea 5DE4     		b	.L565
 6620              	.LVL507:
 6621              	.L804:
 6622              	.LBB1244:
 6623              	.LBB1188:
 6624              	.LBB834:
 6625              	.LBB673:
 755:src/keys.c    **** 	    if (intltr(15)) {
 6626              		.loc 1 755 6 view .LVU2109
 756:src/keys.c    **** 	      return op_int;
 6627              		.loc 1 756 6 view .LVU2110
 756:src/keys.c    **** 	      return op_int;
 6628              		.loc 1 756 10 is_stmt 0 view .LVU2111
 6629 07ec 0F20     		movs	r0, #15
 6630 07ee FFF7FEFF 		bl	intltr
 6631              	.LVL508:
 756:src/keys.c    **** 	      return op_int;
 6632              		.loc 1 756 9 view .LVU2112
 6633 07f2 0028     		cmp	r0, #0
 6634 07f4 E6D0     		beq	.L813
 6635              	.LVL509:
 756:src/keys.c    **** 	      return op_int;
 6636              		.loc 1 756 9 view .LVU2113
 6637              	.LBE673:
 6638              	.LBE834:
 6639              	.LBE1188:
 6640              	.LBE1244:
3141:src/keys.c    **** 	NonProgrammable = 0;
 6641              		.loc 1 3141 7 is_stmt 1 view .LVU2114
3141:src/keys.c    **** 	NonProgrammable = 0;
 6642              		.loc 1 3141 11 is_stmt 0 view .LVU2115
 6643 07f6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3141:src/keys.c    **** 	NonProgrammable = 0;
 6644              		.loc 1 3141 10 view .LVU2116
 6645 07fa 5806     		lsls	r0, r3, #25
 6646 07fc 41F1CF81 		bpl	.L888
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6647              		.loc 1 3142 2 is_stmt 1 view .LVU2117
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6648              		.loc 1 3142 18 is_stmt 0 view .LVU2118
 6649 0800 654B     		ldr	r3, .L1159
 6650 0802 0022     		movs	r2, #0
 6651              	.LBB1245:
 6652              	.LBB1189:
 6653              	.LBB835:
 6654              	.LBB674:
 757:src/keys.c    **** 	    }
 6655              		.loc 1 757 15 view .LVU2119
 6656 0804 4FF0140B 		mov	fp, #20
 6657              	.LBE674:
 6658              	.LBE835:
ARM GAS  /tmp/cciIzcMf.s 			page 207


 6659              	.LBE1189:
 6660              	.LBE1245:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6661              		.loc 1 3142 18 view .LVU2120
 6662 0808 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6663              		.loc 1 3143 2 is_stmt 1 view .LVU2121
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6664              		.loc 1 3143 32 is_stmt 0 view .LVU2122
 6665 080a 5846     		mov	r0, fp
 6666 080c 3BE7     		b	.L835
 6667              	.LVL510:
 6668              	.L806:
 6669              	.LBB1246:
 6670              	.LBB1190:
 6671              	.LBB836:
 6672              	.LBB675:
 747:src/keys.c    **** 	    if (intltr(12)) {
 6673              		.loc 1 747 6 is_stmt 1 view .LVU2123
 748:src/keys.c    **** 	      return op_int;
 6674              		.loc 1 748 6 view .LVU2124
 748:src/keys.c    **** 	      return op_int;
 6675              		.loc 1 748 10 is_stmt 0 view .LVU2125
 6676 080e 0C20     		movs	r0, #12
 6677 0810 FFF7FEFF 		bl	intltr
 6678              	.LVL511:
 748:src/keys.c    **** 	      return op_int;
 6679              		.loc 1 748 9 view .LVU2126
 6680 0814 10B3     		cbz	r0, .L817
 6681              	.LVL512:
 748:src/keys.c    **** 	      return op_int;
 6682              		.loc 1 748 9 view .LVU2127
 6683              	.LBE675:
 6684              	.LBE836:
 6685              	.LBE1190:
 6686              	.LBE1246:
3141:src/keys.c    **** 	NonProgrammable = 0;
 6687              		.loc 1 3141 7 is_stmt 1 view .LVU2128
3141:src/keys.c    **** 	NonProgrammable = 0;
 6688              		.loc 1 3141 11 is_stmt 0 view .LVU2129
 6689 0816 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3141:src/keys.c    **** 	NonProgrammable = 0;
 6690              		.loc 1 3141 10 view .LVU2130
 6691 081a 5C06     		lsls	r4, r3, #25
 6692 081c 41F1DF81 		bpl	.L887
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6693              		.loc 1 3142 2 is_stmt 1 view .LVU2131
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6694              		.loc 1 3142 18 is_stmt 0 view .LVU2132
 6695 0820 5D4B     		ldr	r3, .L1159
 6696 0822 0022     		movs	r2, #0
 6697              	.LBB1247:
 6698              	.LBB1191:
 6699              	.LBB837:
 6700              	.LBB676:
 749:src/keys.c    **** 	    }
 6701              		.loc 1 749 15 view .LVU2133
ARM GAS  /tmp/cciIzcMf.s 			page 208


 6702 0824 4FF0110B 		mov	fp, #17
 6703              	.LBE676:
 6704              	.LBE837:
 6705              	.LBE1191:
 6706              	.LBE1247:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6707              		.loc 1 3142 18 view .LVU2134
 6708 0828 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6709              		.loc 1 3143 2 is_stmt 1 view .LVU2135
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6710              		.loc 1 3143 32 is_stmt 0 view .LVU2136
 6711 082a 5846     		mov	r0, fp
 6712 082c 2BE7     		b	.L835
 6713              	.LVL513:
 6714              	.L807:
 6715              	.LBB1248:
 6716              	.LBB1192:
 6717              	.LBB838:
 6718              	.LBB677:
 739:src/keys.c    **** 	    if (intltr(11)) {
 6719              		.loc 1 739 6 is_stmt 1 view .LVU2137
 740:src/keys.c    **** 	      return op;
 6720              		.loc 1 740 6 view .LVU2138
 740:src/keys.c    **** 	      return op;
 6721              		.loc 1 740 10 is_stmt 0 view .LVU2139
 6722 082e 0B20     		movs	r0, #11
 6723 0830 FFF7FEFF 		bl	intltr
 6724              	.LVL514:
 740:src/keys.c    **** 	      return op;
 6725              		.loc 1 740 9 view .LVU2140
 6726 0834 0028     		cmp	r0, #0
 6727 0836 41F01981 		bne	.L810
 744:src/keys.c    **** 	    }
 6728              		.loc 1 744 8 is_stmt 1 view .LVU2141
 744:src/keys.c    **** 	    }
 6729              		.loc 1 744 15 is_stmt 0 view .LVU2142
 6730 083a 1021     		movs	r1, #16
 6731 083c 0120     		movs	r0, #1
 6732 083e FFF7FEFF 		bl	check_f_key
 6733              	.LVL515:
 6734 0842 8346     		mov	fp, r0
 6735 0844 A4E6     		b	.L594
 6736              	.LVL516:
 6737              	.L808:
 731:src/keys.c    **** 	    if (intltr(10)) {
 6738              		.loc 1 731 6 is_stmt 1 view .LVU2143
 732:src/keys.c    **** 	      return op;
 6739              		.loc 1 732 6 view .LVU2144
 732:src/keys.c    **** 	      return op;
 6740              		.loc 1 732 10 is_stmt 0 view .LVU2145
 6741 0846 0A20     		movs	r0, #10
 6742 0848 FFF7FEFF 		bl	intltr
 6743              	.LVL517:
 732:src/keys.c    **** 	      return op;
 6744              		.loc 1 732 9 view .LVU2146
 6745 084c 0028     		cmp	r0, #0
ARM GAS  /tmp/cciIzcMf.s 			page 209


 6746 084e 41F00081 		bne	.L809
 736:src/keys.c    **** 	    }
 6747              		.loc 1 736 8 is_stmt 1 view .LVU2147
 736:src/keys.c    **** 	    }
 6748              		.loc 1 736 15 is_stmt 0 view .LVU2148
 6749 0852 0F21     		movs	r1, #15
 6750 0854 FFF7FEFF 		bl	check_f_key
 6751              	.LVL518:
 6752 0858 8346     		mov	fp, r0
 6753 085a 99E6     		b	.L594
 6754              	.LVL519:
 6755              	.L817:
 771:src/keys.c    **** #else
 6756              		.loc 1 771 3 is_stmt 1 view .LVU2149
 771:src/keys.c    **** #else
 6757              		.loc 1 771 10 is_stmt 0 view .LVU2150
 6758 085c 5146     		mov	r1, r10
 6759 085e 0220     		movs	r0, #2
 6760 0860 FFF7FEFF 		bl	check_f_key
 6761              	.LVL520:
 6762 0864 8346     		mov	fp, r0
 6763 0866 93E6     		b	.L594
 6764              	.L815:
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6765              		.loc 1 795 3 is_stmt 1 view .LVU2151
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6766              		.loc 1 795 7 is_stmt 0 view .LVU2152
 6767 0868 FFF7FEFF 		bl	is_bad_cmdline
 6768              	.LVL521:
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6769              		.loc 1 795 6 view .LVU2153
 6770 086c 0446     		mov	r4, r0
 6771 086e 0028     		cmp	r0, #0
 6772 0870 A5D1     		bne	.L1067
 797:src/keys.c    **** 		State2.arrow = 1;
 6773              		.loc 1 797 3 is_stmt 1 view .LVU2154
 6774 0872 FFF7FEFF 		bl	process_cmdline_set_lift
 6775              	.LVL522:
 798:src/keys.c    **** #ifdef DM42
 6776              		.loc 1 798 3 view .LVU2155
 798:src/keys.c    **** #ifdef DM42
 6777              		.loc 1 798 16 is_stmt 0 view .LVU2156
 6778 0876 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 800:src/keys.c    **** 		display_current_menu ();
 6779              		.loc 1 800 3 view .LVU2157
 6780 087a 0920     		movs	r0, #9
 798:src/keys.c    **** #ifdef DM42
 6781              		.loc 1 798 16 view .LVU2158
 6782 087c 43F00403 		orr	r3, r3, #4
 6783 0880 88F81530 		strb	r3, [r8, #21]
 800:src/keys.c    **** 		display_current_menu ();
 6784              		.loc 1 800 3 is_stmt 1 view .LVU2159
 6785 0884 FFF7FEFF 		bl	set_menu
 6786              	.LVL523:
 801:src/keys.c    **** 		lcd_refresh ();
 6787              		.loc 1 801 3 view .LVU2160
 6788 0888 FFF7FEFF 		bl	display_current_menu
ARM GAS  /tmp/cciIzcMf.s 			page 210


 6789              	.LVL524:
 802:src/keys.c    **** #else
 6790              		.loc 1 802 3 view .LVU2161
 6791 088c 434B     		ldr	r3, .L1159+4
 6792 088e 9847     		blx	r3
 6793              	.LVL525:
 806:src/keys.c    **** 
 6794              		.loc 1 806 3 view .LVU2162
 6795              	.LBE677:
 6796              	.LBE838:
 6797              	.LBE1192:
 6798              	.LBE1248:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 6799              		.loc 1 2948 7 is_stmt 0 view .LVU2163
 6800 0890 2746     		mov	r7, r4
 6801              	.LBB1249:
 6802              	.LBB1193:
 6803              	.LBB839:
 6804              	.LBB678:
 836:src/keys.c    **** }
 6805              		.loc 1 836 9 view .LVU2164
 6806 0892 4FF0330B 		mov	fp, #51
 806:src/keys.c    **** 
 6807              		.loc 1 806 3 view .LVU2165
 6808 0896 07E4     		b	.L565
 6809              	.L821:
 6810              	.LVL526:
 806:src/keys.c    **** 
 6811              		.loc 1 806 3 view .LVU2166
 6812              	.LBE678:
 6813              	.LBE839:
 6814              	.LBE1193:
 6815              	.LBE1249:
3105:src/keys.c    ****     case STATE_SST:
 6816              		.loc 1 3105 5 is_stmt 1 view .LVU2167
 6817 0898 AAF12B03 		sub	r3, r10, #43
 6818 089c 082B     		cmp	r3, #8
 6819 089e 15D8     		bhi	.L849
 6820 08a0 01A2     		adr	r2, .L850
 6821 08a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6822 08a6 00BF     		.p2align 2
 6823              	.L850:
 6824 08a8 C5050000 		.word	.L828+1
 6825 08ac C5050000 		.word	.L828+1
 6826 08b0 CD080000 		.word	.L849+1
 6827 08b4 E9050000 		.word	.L757+1
 6828 08b8 DB050000 		.word	.L755+1
 6829 08bc 03060000 		.word	.L752+1
 6830 08c0 9D010000 		.word	.L574+1
 6831 08c4 A9000000 		.word	.L565+1
 6832 08c8 A9000000 		.word	.L565+1
 6833              		.p2align 1
 6834              	.L849:
 6835 08cc 324A     		ldr	r2, .L1159
 6836 08ce 5046     		mov	r0, r10
 6837 08d0 CBE6     		b	.L837
 6838              	.LVL527:
ARM GAS  /tmp/cciIzcMf.s 			page 211


 6839              	.L1087:
 6840              	.LBB1250:
 6841              	.LBB1194:
2819:src/keys.c    **** 		CmdLineLength = 0;
 6842              		.loc 1 2819 26 is_stmt 0 view .LVU2168
 6843 08d2 FFF7FEFF 		bl	keyticks
 6844              	.LVL528:
2819:src/keys.c    **** 		CmdLineLength = 0;
 6845              		.loc 1 2819 23 view .LVU2169
 6846 08d6 1E28     		cmp	r0, #30
2820:src/keys.c    **** 	/*
 6847              		.loc 1 2820 3 is_stmt 1 view .LVU2170
2820:src/keys.c    **** 	/*
 6848              		.loc 1 2820 17 is_stmt 0 view .LVU2171
 6849 08d8 C4BF     		itt	gt
 6850 08da 0023     		movgt	r3, #0
 6851 08dc 88F81C30 		strbgt	r3, [r8, #28]
 6852 08e0 8FE4     		b	.L581
 6853              	.LVL529:
 6854              	.L836:
2820:src/keys.c    **** 	/*
 6855              		.loc 1 2820 17 view .LVU2172
 6856              	.LBE1194:
 6857              	.LBE1250:
3141:src/keys.c    **** 	NonProgrammable = 0;
 6858              		.loc 1 3141 26 view .LVU2173
 6859 08e2 2D4A     		ldr	r2, .L1159
 6860 08e4 1368     		ldr	r3, [r2]
 6861 08e6 5846     		mov	r0, fp
 6862 08e8 002B     		cmp	r3, #0
 6863 08ea 7FF4BEAE 		bne	.L837
 6864              	.LVL530:
 6865              	.L838:
3163:src/keys.c    ****       }
 6866              		.loc 1 3163 2 is_stmt 1 view .LVU2174
 6867 08ee FFF7FEFF 		bl	stoprog
 6868              	.LVL531:
 6869 08f2 FFF7D9BB 		b	.L565
 6870              	.LVL532:
 6871              	.L567:
3083:src/keys.c    **** 	}
 6872              		.loc 1 3083 4 view .LVU2175
 6873              		.loc 1 3182 1 is_stmt 0 view .LVU2176
 6874 08f6 03B0     		add	sp, sp, #12
 6875              		.cfi_remember_state
 6876              		.cfi_def_cfa_offset 36
 6877              		@ sp needed
 6878 08f8 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6879              		.cfi_restore 14
 6880              		.cfi_restore 11
 6881              		.cfi_restore 10
 6882              		.cfi_restore 9
 6883              		.cfi_restore 8
 6884              		.cfi_restore 7
 6885              		.cfi_restore 6
 6886              		.cfi_restore 5
 6887              		.cfi_restore 4
ARM GAS  /tmp/cciIzcMf.s 			page 212


 6888              		.cfi_def_cfa_offset 0
3083:src/keys.c    **** 	}
 6889              		.loc 1 3083 4 view .LVU2177
 6890 08fc FFF7FEBF 		b	finish_RPN
 6891              	.LVL533:
 6892              	.L1088:
 6893              		.cfi_restore_state
 6894              	.LBB1251:
 6895              	.LBB1195:
2826:src/keys.c    **** 
 6896              		.loc 1 2826 3 is_stmt 1 view .LVU2178
 6897              	.LBB840:
 6898              	.LBI840:
2435:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6899              		.loc 1 2435 12 view .LVU2179
 6900              	.LBB841:
2437:src/keys.c    **** #ifdef DM42
 6901              		.loc 1 2437 2 view .LVU2180
 6902 0900 E4B2     		uxtb	r4, r4
 6903              	.LVL534:
2437:src/keys.c    **** #ifdef DM42
 6904              		.loc 1 2437 2 is_stmt 0 view .LVU2181
 6905 0902 0E3C     		subs	r4, r4, #14
 6906 0904 192C     		cmp	r4, #25
 6907 0906 3FF65AAF 		bhi	.L1067
 6908 090a 01A3     		adr	r3, .L586
 6909 090c 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 6910              		.p2align 2
 6911              	.L586:
 6912 0910 7D090000 		.word	.L587+1
 6913 0914 BF070000 		.word	.L1067+1
 6914 0918 7D090000 		.word	.L587+1
 6915 091c BF070000 		.word	.L1067+1
 6916 0920 BF070000 		.word	.L1067+1
 6917 0924 BF070000 		.word	.L1067+1
 6918 0928 BF070000 		.word	.L1067+1
 6919 092c BF070000 		.word	.L1067+1
 6920 0930 BF070000 		.word	.L1067+1
 6921 0934 BF070000 		.word	.L1067+1
 6922 0938 BF070000 		.word	.L1067+1
 6923 093c BF070000 		.word	.L1067+1
 6924 0940 BF070000 		.word	.L1067+1
 6925 0944 BF070000 		.word	.L1067+1
 6926 0948 BF070000 		.word	.L1067+1
 6927 094c BF070000 		.word	.L1067+1
 6928 0950 BF070000 		.word	.L1067+1
 6929 0954 BF070000 		.word	.L1067+1
 6930 0958 A1090000 		.word	.L585+1
 6931 095c BF070000 		.word	.L1067+1
 6932 0960 BF070000 		.word	.L1067+1
 6933 0964 BF070000 		.word	.L1067+1
 6934 0968 BF070000 		.word	.L1067+1
 6935 096c BF070000 		.word	.L1067+1
 6936 0970 BF070000 		.word	.L1067+1
 6937 0974 A1090000 		.word	.L585+1
 6938              		.p2align 1
 6939              	.L588:
ARM GAS  /tmp/cciIzcMf.s 			page 213


2446:src/keys.c    **** 	  }
 6940              		.loc 1 2446 26 is_stmt 1 view .LVU2182
 6941 0978 FFF7FEFF 		bl	clpall
 6942              	.LVL535:
2446:src/keys.c    **** 	  }
 6943              		.loc 1 2446 36 view .LVU2183
 6944              	.L587:
2455:src/keys.c    **** 	  State2.digval = 0;
 6945              		.loc 1 2455 4 view .LVU2184
2455:src/keys.c    **** 	  State2.digval = 0;
 6946              		.loc 1 2455 19 is_stmt 0 view .LVU2185
 6947 097c 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2456:src/keys.c    **** 	  break;
 6948              		.loc 1 2456 18 view .LVU2186
 6949 0980 0022     		movs	r2, #0
2455:src/keys.c    **** 	  State2.digval = 0;
 6950              		.loc 1 2455 19 view .LVU2187
 6951 0982 6FF30203 		bfc	r3, #0, #3
 6952 0986 88F81430 		strb	r3, [r8, #20]
2456:src/keys.c    **** 	  break;
 6953              		.loc 1 2456 4 is_stmt 1 view .LVU2188
2456:src/keys.c    **** 	  break;
 6954              		.loc 1 2456 18 is_stmt 0 view .LVU2189
 6955 098a A8F80820 		strh	r2, [r8, #8]	@ movhi
2457:src/keys.c    **** 	default:			// No state change
 6956              		.loc 1 2457 4 is_stmt 1 view .LVU2190
 6957              	.LBE841:
 6958              	.LBE840:
2826:src/keys.c    **** 
 6959              		.loc 1 2826 10 is_stmt 0 view .LVU2191
 6960 098e 4FF0330B 		mov	fp, #51
 6961              	.LBB843:
 6962              	.LBB842:
2457:src/keys.c    **** 	default:			// No state change
 6963              		.loc 1 2457 4 view .LVU2192
 6964 0992 FFF789BB 		b	.L565
 6965              	.L1160:
 6966 0996 00BF     		.align	2
 6967              	.L1159:
 6968 0998 00000000 		.word	NonProgrammable
 6969 099c 31020008 		.word	134218289
 6970              	.L585:
2442:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6971              		.loc 1 2442 4 is_stmt 1 view .LVU2193
2442:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6972              		.loc 1 2442 18 is_stmt 0 view .LVU2194
 6973 09a0 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6974 09a4 03F00703 		and	r3, r3, #7
 6975 09a8 013B     		subs	r3, r3, #1
 6976 09aa 032B     		cmp	r3, #3
 6977 09ac E6D8     		bhi	.L587
 6978 09ae 01A2     		adr	r2, .L589
 6979 09b0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6980              		.p2align 2
 6981              	.L589:
 6982 09b4 D1090000 		.word	.L592+1
 6983 09b8 CB090000 		.word	.L591+1
ARM GAS  /tmp/cciIzcMf.s 			page 214


 6984 09bc C5090000 		.word	.L590+1
 6985 09c0 79090000 		.word	.L588+1
 6986              		.p2align 1
 6987              	.L590:
2445:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6988              		.loc 1 2445 26 is_stmt 1 view .LVU2195
 6989 09c4 FFF7FEFF 		bl	clrprog
 6990              	.LVL536:
2445:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6991              		.loc 1 2445 37 view .LVU2196
2445:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6992              		.loc 1 2445 4 is_stmt 0 view .LVU2197
 6993 09c8 D8E7     		b	.L587
 6994              	.L591:
2444:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6995              		.loc 1 2444 25 is_stmt 1 view .LVU2198
 6996 09ca FFF7FEFF 		bl	reset
 6997              	.LVL537:
2444:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6998              		.loc 1 2444 34 view .LVU2199
2444:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6999              		.loc 1 2444 4 is_stmt 0 view .LVU2200
 7000 09ce D5E7     		b	.L587
 7001              	.L592:
2443:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7002              		.loc 1 2443 25 is_stmt 1 view .LVU2201
 7003 09d0 FFF7FEFF 		bl	clrall
 7004              	.LVL538:
2443:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7005              		.loc 1 2443 35 view .LVU2202
2443:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7006              		.loc 1 2443 4 is_stmt 0 view .LVU2203
 7007 09d4 D2E7     		b	.L587
 7008              	.LVL539:
 7009              	.L544:
2443:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7010              		.loc 1 2443 4 view .LVU2204
 7011              	.LBE842:
 7012              	.LBE843:
 7013              	.LBE1195:
 7014              	.LBE1251:
2981:src/keys.c    **** 	    DispMsg = TraceBuffer;
 7015              		.loc 1 2981 6 is_stmt 1 view .LVU2205
 7016 09d6 D64F     		ldr	r7, .L1161
 7017 09d8 3946     		mov	r1, r7
 7018 09da FFF7FEFF 		bl	prt
 7019              	.LVL540:
 7020 09de 3246     		mov	r2, r6
 7021 09e0 0146     		mov	r1, r0
 7022 09e2 3846     		mov	r0, r7
 7023 09e4 FFF7FEFF 		bl	scopy_char
 7024              	.LVL541:
2982:src/keys.c    **** 	  }
 7025              		.loc 1 2982 6 view .LVU2206
2982:src/keys.c    **** 	  }
 7026              		.loc 1 2982 14 is_stmt 0 view .LVU2207
 7027 09e8 D24B     		ldr	r3, .L1161+4
ARM GAS  /tmp/cciIzcMf.s 			page 215


 7028 09ea 1F60     		str	r7, [r3]
 7029 09ec FFF79FBB 		b	.L545
 7030              	.LVL542:
 7031              	.L1086:
 7032              	.LBB1252:
 7033              	.LBB1196:
2800:src/keys.c    **** #else
 7034              		.loc 1 2800 47 view .LVU2208
 7035 09f0 DFF86483 		ldr	r8, .L1161+40
2800:src/keys.c    **** #else
 7036              		.loc 1 2800 61 view .LVU2209
 7037 09f4 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2800:src/keys.c    **** #else
 7038              		.loc 1 2800 47 view .LVU2210
 7039 09f8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
2800:src/keys.c    **** #else
 7040              		.loc 1 2800 61 view .LVU2211
 7041 09fc 02F00402 		and	r2, r2, #4
2800:src/keys.c    **** #else
 7042              		.loc 1 2800 58 view .LVU2212
 7043 0a00 1A43     		orrs	r2, r2, r3
 7044 0a02 4AEA0202 		orr	r2, r10, r2
 7045 0a06 12F0FF0F 		tst	r2, #255
 7046 0a0a 7FF4F7AB 		bne	.L576
2805:src/keys.c    ****       return STATE_UNFINISHED;
 7047              		.loc 1 2805 7 is_stmt 1 view .LVU2213
 7048 0a0e FFF7FEFF 		bl	soft_init_state
 7049              	.LVL543:
2806:src/keys.c    ****     }
 7050              		.loc 1 2806 7 view .LVU2214
2806:src/keys.c    ****     }
 7051              		.loc 1 2806 14 is_stmt 0 view .LVU2215
 7052 0a12 4FF0330B 		mov	fp, #51
 7053 0a16 FFF747BB 		b	.L565
 7054              	.L1089:
2829:src/keys.c    **** 
 7055              		.loc 1 2829 3 is_stmt 1 view .LVU2216
2829:src/keys.c    **** 
 7056              		.loc 1 2829 10 is_stmt 0 view .LVU2217
 7057 0a1a E0B2     		uxtb	r0, r4
 7058 0a1c FFF7FEFF 		bl	process_arg
 7059              	.LVL544:
 7060 0a20 8346     		mov	fp, r0
 7061 0a22 B5E5     		b	.L594
 7062              	.L1110:
2778:src/keys.c    ****       Pause = 0;
 7063              		.loc 1 2778 2 is_stmt 1 view .LVU2218
 7064 0a24 0020     		movs	r0, #0
 7065 0a26 FFF7FEFF 		bl	set_pc
 7066              	.LVL545:
 7067 0a2a D6E4     		b	.L573
 7068              	.LVL546:
 7069              	.L830:
2778:src/keys.c    ****       Pause = 0;
 7070              		.loc 1 2778 2 is_stmt 0 view .LVU2219
 7071              	.LBE1196:
 7072              	.LBE1252:
ARM GAS  /tmp/cciIzcMf.s 			page 216


 7073              	.LBB1253:
3120:src/keys.c    **** 	if (p > Alpha)
 7074              		.loc 1 3120 2 is_stmt 1 view .LVU2220
3120:src/keys.c    **** 	if (p > Alpha)
 7075              		.loc 1 3120 22 is_stmt 0 view .LVU2221
 7076 0a2c C24C     		ldr	r4, .L1161+8
 7077 0a2e 2068     		ldr	r0, [r4]
3120:src/keys.c    **** 	if (p > Alpha)
 7078              		.loc 1 3120 12 view .LVU2222
 7079 0a30 0021     		movs	r1, #0
 7080 0a32 00F5F660 		add	r0, r0, #1968
 7081 0a36 FFF7FEFF 		bl	find_char
 7082              	.LVL547:
3121:src/keys.c    **** 	  *--p = '\0';
 7083              		.loc 1 3121 8 view .LVU2223
 7084 0a3a 2368     		ldr	r3, [r4]
 7085              	.LVL548:
3121:src/keys.c    **** 	  *--p = '\0';
 7086              		.loc 1 3121 2 is_stmt 1 view .LVU2224
3121:src/keys.c    **** 	  *--p = '\0';
 7087              		.loc 1 3121 8 is_stmt 0 view .LVU2225
 7088 0a3c 03F5F663 		add	r3, r3, #1968
3121:src/keys.c    **** 	  *--p = '\0';
 7089              		.loc 1 3121 5 view .LVU2226
 7090 0a40 9842     		cmp	r0, r3
3122:src/keys.c    ****       }
 7091              		.loc 1 3122 4 is_stmt 1 view .LVU2227
 7092              	.LVL549:
3122:src/keys.c    ****       }
 7093              		.loc 1 3122 9 is_stmt 0 view .LVU2228
 7094 0a42 84BF     		itt	hi
 7095 0a44 0023     		movhi	r3, #0
 7096 0a46 00F8013C 		strbhi	r3, [r0, #-1]
 7097 0a4a E2E5     		b	.L1062
 7098              	.LVL550:
 7099              	.L1092:
3122:src/keys.c    ****       }
 7100              		.loc 1 3122 9 view .LVU2229
 7101              	.LBE1253:
 7102              	.LBB1254:
 7103              	.LBB1197:
2838:src/keys.c    **** 
 7104              		.loc 1 2838 3 is_stmt 1 view .LVU2230
 7105              	.LBB844:
 7106              	.LBI844:
1901:src/keys.c    **** 	int r = State2.test;
 7107              		.loc 1 1901 12 view .LVU2231
 7108              	.LBB845:
1902:src/keys.c    **** 	int cmpx = State2.cmplx;
 7109              		.loc 1 1902 2 view .LVU2232
1903:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7110              		.loc 1 1903 2 view .LVU2233
 7111              	.LBB846:
 7112              	.LBB847:
 7113              	.LBB848:
 7114              	.LBB849:
 131:src/keys.c    **** }
ARM GAS  /tmp/cciIzcMf.s 			page 217


 7115              		.loc 1 131 23 is_stmt 0 view .LVU2234
 7116 0a4c BB48     		ldr	r0, .L1161+12
 7117              	.LBE849:
 7118              	.LBE848:
 221:src/keys.c    **** }
 7119              		.loc 1 221 28 view .LVU2235
 7120 0a4e DFF8F0C2 		ldr	ip, .L1161+16
 7121              	.LBB853:
 7122              	.LBB850:
 131:src/keys.c    **** }
 7123              		.loc 1 131 23 view .LVU2236
 7124 0a52 E4B2     		uxtb	r4, r4
 7125              	.LVL551:
 131:src/keys.c    **** }
 7126              		.loc 1 131 23 view .LVU2237
 7127              	.LBE850:
 7128              	.LBE853:
 7129              	.LBE847:
 7130              	.LBE846:
1905:src/keys.c    **** 
 7131              		.loc 1 1905 44 view .LVU2238
 7132 0a54 12F0020F 		tst	r2, #2
 7133              	.LBB858:
 7134              	.LBB856:
 7135              	.LBB854:
 7136              	.LBB851:
 131:src/keys.c    **** }
 7137              		.loc 1 131 23 view .LVU2239
 7138 0a58 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 7139              	.LBE851:
 7140              	.LBE854:
 221:src/keys.c    **** }
 7141              		.loc 1 221 28 view .LVU2240
 7142 0a5a 1CF800C0 		ldrb	ip, [ip, r0]	@ zero_extendqisi2
 7143              	.LBE856:
 7144              	.LBE858:
1903:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7145              		.loc 1 1903 19 view .LVU2241
 7146 0a5e C2F3400E 		ubfx	lr, r2, #1, #1
 7147              	.LVL552:
1904:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7148              		.loc 1 1904 2 is_stmt 1 view .LVU2242
 7149              	.LBB859:
 7150              	.LBI846:
 198:src/keys.c    **** {
 7151              		.loc 1 198 14 view .LVU2243
 7152              	.LBB857:
 200:src/keys.c    ****     // K00 - K05
 7153              		.loc 1 200 3 view .LVU2244
 221:src/keys.c    **** }
 7154              		.loc 1 221 3 view .LVU2245
 7155              	.LBB855:
 7156              	.LBI848:
 119:src/keys.c    **** {
 7157              		.loc 1 119 12 view .LVU2246
 7158              	.LBB852:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
ARM GAS  /tmp/cciIzcMf.s 			page 218


 7159              		.loc 1 121 2 view .LVU2247
 131:src/keys.c    **** }
 7160              		.loc 1 131 2 view .LVU2248
 131:src/keys.c    **** }
 7161              		.loc 1 131 2 is_stmt 0 view .LVU2249
 7162              	.LBE852:
 7163              	.LBE855:
 7164              	.LBE857:
 7165              	.LBE859:
1904:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7166              		.loc 1 1904 15 view .LVU2250
 7167 0a62 2CF08000 		bic	r0, ip, #128
 7168              	.LVL553:
1905:src/keys.c    **** 
 7169              		.loc 1 1905 2 is_stmt 1 view .LVU2251
1905:src/keys.c    **** 
 7170              		.loc 1 1905 44 is_stmt 0 view .LVU2252
 7171 0a66 00F08C80 		beq	.L1118
 7172              	.LVL554:
1907:src/keys.c    **** 	State2.cmplx = 0;
 7173              		.loc 1 1907 2 is_stmt 1 view .LVU2253
1908:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7174              		.loc 1 1908 15 is_stmt 0 view .LVU2254
 7175 0a6a 61F34102 		bfi	r2, r1, #1, #1
1909:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7176              		.loc 1 1909 5 view .LVU2255
 7177 0a6e 6428     		cmp	r0, #100
1907:src/keys.c    **** 	State2.cmplx = 0;
 7178              		.loc 1 1907 14 view .LVU2256
 7179 0a70 4FF00701 		mov	r1, #7
1908:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7180              		.loc 1 1908 15 view .LVU2257
 7181 0a74 88F81520 		strb	r2, [r8, #21]
1907:src/keys.c    **** 	State2.cmplx = 0;
 7182              		.loc 1 1907 14 view .LVU2258
 7183 0a78 88F80F10 		strb	r1, [r8, #15]
1908:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7184              		.loc 1 1908 2 is_stmt 1 view .LVU2259
1909:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7185              		.loc 1 1909 2 view .LVU2260
1909:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7186              		.loc 1 1909 5 is_stmt 0 view .LVU2261
 7187 0a7c 00F0F883 		beq	.L895
1905:src/keys.c    **** 
 7188              		.loc 1 1905 44 view .LVU2262
 7189 0a80 4FF0340A 		mov	r10, #52
 7190              	.LVL555:
 7191              	.L855:
1910:src/keys.c    **** 		// Lettered register
 7192              		.loc 1 1910 5 view .LVU2263
 7193 0a84 7F28     		cmp	r0, #127
1905:src/keys.c    **** 
 7194              		.loc 1 1905 60 view .LVU2264
 7195 0a86 DA44     		add	r10, r10, fp
1910:src/keys.c    **** 		// Lettered register
 7196              		.loc 1 1910 2 is_stmt 1 view .LVU2265
1910:src/keys.c    **** 		// Lettered register
ARM GAS  /tmp/cciIzcMf.s 			page 219


 7197              		.loc 1 1910 5 is_stmt 0 view .LVU2266
 7198 0a88 00F0FE80 		beq	.L625
 7199              	.LVL556:
1910:src/keys.c    **** 		// Lettered register
 7200              		.loc 1 1910 18 view .LVU2267
 7201 0a8c 6328     		cmp	r0, #99
 7202 0a8e 40F21F81 		bls	.L626
1910:src/keys.c    **** 		// Lettered register
 7203              		.loc 1 1910 37 view .LVU2268
 7204 0a92 6F28     		cmp	r0, #111
 7205 0a94 00F2F880 		bhi	.L625
1912:src/keys.c    **** 			if (n == regI_idx)
 7206              		.loc 1 1912 3 is_stmt 1 view .LVU2269
1912:src/keys.c    **** 			if (n == regI_idx)
 7207              		.loc 1 1912 6 is_stmt 0 view .LVU2270
 7208 0a98 BEF1000F 		cmp	lr, #0
 7209 0a9c 00F0B181 		beq	.L627
1912:src/keys.c    **** 			if (n == regI_idx)
 7210              		.loc 1 1912 12 view .LVU2271
 7211 0aa0 1CF0010F 		tst	ip, #1
 7212 0aa4 00F0AD81 		beq	.L627
1913:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7213              		.loc 1 1913 4 is_stmt 1 view .LVU2272
1913:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7214              		.loc 1 1913 7 is_stmt 0 view .LVU2273
 7215 0aa8 6D28     		cmp	r0, #109
 7216 0aaa 40F0FA80 		bne	.L628
1914:src/keys.c    **** 			// Disallow odd complex registers > A
 7217              		.loc 1 1914 5 is_stmt 1 view .LVU2274
1914:src/keys.c    **** 			// Disallow odd complex registers > A
 7218              		.loc 1 1914 30 is_stmt 0 view .LVU2275
 7219 0aae 0BF1290B 		add	fp, fp, #41
 7220              	.LVL557:
1914:src/keys.c    **** 			// Disallow odd complex registers > A
 7221              		.loc 1 1914 30 view .LVU2276
 7222 0ab2 6DE5     		b	.L594
 7223              	.LVL558:
 7224              	.L1090:
1914:src/keys.c    **** 			// Disallow odd complex registers > A
 7225              		.loc 1 1914 30 view .LVU2277
 7226              	.LBE845:
 7227              	.LBE844:
2832:src/keys.c    **** 
 7228              		.loc 1 2832 3 is_stmt 1 view .LVU2278
 7229              	.LBB869:
 7230              	.LBI869:
1322:src/keys.c    **** 	int pc = -1;
 7231              		.loc 1 1322 12 view .LVU2279
 7232              	.LBB870:
1323:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7233              		.loc 1 1323 2 view .LVU2280
1324:src/keys.c    **** 
 7234              		.loc 1 1324 2 view .LVU2281
 7235              	.LBB871:
 7236              	.LBI871:
 198:src/keys.c    **** {
 7237              		.loc 1 198 14 view .LVU2282
ARM GAS  /tmp/cciIzcMf.s 			page 220


 7238              	.LBB872:
 200:src/keys.c    ****     // K00 - K05
 7239              		.loc 1 200 3 view .LVU2283
 221:src/keys.c    **** }
 7240              		.loc 1 221 3 view .LVU2284
 7241              	.LBB873:
 7242              	.LBI873:
 119:src/keys.c    **** {
 7243              		.loc 1 119 12 view .LVU2285
 7244              	.LBB874:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7245              		.loc 1 121 2 view .LVU2286
 131:src/keys.c    **** }
 7246              		.loc 1 131 2 view .LVU2287
 131:src/keys.c    **** }
 7247              		.loc 1 131 23 is_stmt 0 view .LVU2288
 7248 0ab4 A14B     		ldr	r3, .L1161+12
 7249              	.LBE874:
 7250              	.LBE873:
 221:src/keys.c    **** }
 7251              		.loc 1 221 28 view .LVU2289
 7252 0ab6 A24A     		ldr	r2, .L1161+16
 7253 0ab8 E4B2     		uxtb	r4, r4
 7254              	.LVL559:
 7255              	.LBB876:
 7256              	.LBB875:
 131:src/keys.c    **** }
 7257              		.loc 1 131 23 view .LVU2290
 7258 0aba 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7259              	.LBE875:
 7260              	.LBE876:
 221:src/keys.c    **** }
 7261              		.loc 1 221 28 view .LVU2291
 7262 0abc D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7263              	.LVL560:
 221:src/keys.c    **** }
 7264              		.loc 1 221 28 view .LVU2292
 7265              	.LBE872:
 7266              	.LBE871:
1326:src/keys.c    **** 		// Digit 0 - 9
 7267              		.loc 1 1326 2 is_stmt 1 view .LVU2293
1326:src/keys.c    **** 		// Digit 0 - 9
 7268              		.loc 1 1326 5 is_stmt 0 view .LVU2294
 7269 0abe 0928     		cmp	r0, #9
 7270 0ac0 40F2FB80 		bls	.L1119
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7271              		.loc 1 1331 7 is_stmt 1 view .LVU2295
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7272              		.loc 1 1331 18 is_stmt 0 view .LVU2296
 7273 0ac4 20F08000 		bic	r0, r0, #128
 7274              	.LVL561:
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7275              		.loc 1 1331 10 view .LVU2297
 7276 0ac8 6428     		cmp	r0, #100
 7277 0aca 00F08D81 		beq	.L1120
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7278              		.loc 1 1332 7 is_stmt 1 view .LVU2298
ARM GAS  /tmp/cciIzcMf.s 			page 221


1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7279              		.loc 1 1332 10 is_stmt 0 view .LVU2299
 7280 0ace 6528     		cmp	r0, #101
 7281 0ad0 00F09E81 		beq	.L1121
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7282              		.loc 1 1333 7 is_stmt 1 view .LVU2300
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7283              		.loc 1 1333 10 is_stmt 0 view .LVU2301
 7284 0ad4 6628     		cmp	r0, #102
 7285 0ad6 00F0BA81 		beq	.L1122
1334:src/keys.c    **** #endif
 7286              		.loc 1 1334 7 is_stmt 1 view .LVU2302
1334:src/keys.c    **** #endif
 7287              		.loc 1 1334 10 is_stmt 0 view .LVU2303
 7288 0ada 6728     		cmp	r0, #103
 7289 0adc 00F0FD82 		beq	.L1123
1336:src/keys.c    **** 		// A - D
 7290              		.loc 1 1336 7 is_stmt 1 view .LVU2304
1336:src/keys.c    **** 		// A - D
 7291              		.loc 1 1336 10 is_stmt 0 view .LVU2305
 7292 0ae0 032C     		cmp	r4, #3
 7293 0ae2 40F2AA83 		bls	.L1124
1341:src/keys.c    **** 		// .
 7294              		.loc 1 1341 7 is_stmt 1 view .LVU2306
1341:src/keys.c    **** 		// .
 7295              		.loc 1 1341 10 is_stmt 0 view .LVU2307
 7296 0ae6 262C     		cmp	r4, #38
 7297 0ae8 00F02B84 		beq	.L1125
1346:src/keys.c    **** 		// ENTER - short circuit processing
 7298              		.loc 1 1346 7 is_stmt 1 view .LVU2308
1346:src/keys.c    **** 		// ENTER - short circuit processing
 7299              		.loc 1 1346 10 is_stmt 0 view .LVU2309
 7300 0aec 0C2C     		cmp	r4, #12
 7301 0aee 00F0C383 		beq	.L1126
1350:src/keys.c    **** 		// backspace
 7302              		.loc 1 1350 7 is_stmt 1 view .LVU2310
1350:src/keys.c    **** 		// backspace
 7303              		.loc 1 1350 10 is_stmt 0 view .LVU2311
 7304 0af2 102C     		cmp	r4, #16
 7305 0af4 00F0D184 		beq	.L1127
1359:src/keys.c    **** 		// up
 7306              		.loc 1 1359 7 is_stmt 1 view .LVU2312
1359:src/keys.c    **** 		// up
 7307              		.loc 1 1359 10 is_stmt 0 view .LVU2313
 7308 0af8 122C     		cmp	r4, #18
 7309 0afa 00F06686 		beq	.L1128
1369:src/keys.c    **** 		// down
 7310              		.loc 1 1369 7 is_stmt 1 view .LVU2314
1369:src/keys.c    **** 		// down
 7311              		.loc 1 1369 10 is_stmt 0 view .LVU2315
 7312 0afe 182C     		cmp	r4, #24
 7313 0b00 7FF45DAE 		bne	.L1067
1371:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7314              		.loc 1 1371 3 is_stmt 1 view .LVU2316
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7315              		.loc 1 1372 18 is_stmt 0 view .LVU2317
 7316 0b04 8C4C     		ldr	r4, .L1161+8
ARM GAS  /tmp/cciIzcMf.s 			page 222


1371:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7317              		.loc 1 1371 3 view .LVU2318
 7318 0b06 0120     		movs	r0, #1
 7319 0b08 FFF7FEFF 		bl	update_program_bounds
 7320              	.LVL562:
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7321              		.loc 1 1372 3 is_stmt 1 view .LVU2319
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7322              		.loc 1 1372 18 is_stmt 0 view .LVU2320
 7323 0b0c 2368     		ldr	r3, [r4]
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7324              		.loc 1 1372 11 view .LVU2321
 7325 0b0e 0021     		movs	r1, #0
 7326 0b10 B3F8EE07 		ldrh	r0, [r3, #2030]
 7327 0b14 FFF7FEFF 		bl	do_inc
 7328              	.LVL563:
1373:src/keys.c    **** 			rawpc = 1;
 7329              		.loc 1 1373 3 is_stmt 1 view .LVU2322
1373:src/keys.c    **** 			rawpc = 1;
 7330              		.loc 1 1373 6 is_stmt 0 view .LVU2323
 7331 0b18 20B9     		cbnz	r0, .L607
1373:src/keys.c    **** 			rawpc = 1;
 7332              		.loc 1 1373 21 view .LVU2324
 7333 0b1a 2368     		ldr	r3, [r4]
1373:src/keys.c    **** 			rawpc = 1;
 7334              		.loc 1 1373 18 view .LVU2325
 7335 0b1c 5888     		ldrh	r0, [r3, #2]
 7336              	.LVL564:
1373:src/keys.c    **** 			rawpc = 1;
 7337              		.loc 1 1373 18 view .LVU2326
 7338 0b1e 0038     		subs	r0, r0, #0
 7339 0b20 18BF     		it	ne
 7340 0b22 0120     		movne	r0, #1
 7341              	.LVL565:
 7342              	.L607:
1379:src/keys.c    **** fin2:		State2.gtodot = 0;
 7343              		.loc 1 1379 7 is_stmt 1 view .LVU2327
 7344 0b24 FFF7FEFF 		bl	set_pc
 7345              	.LVL566:
 7346              	.L611:
1380:src/keys.c    **** 		State2.digval = 0;
 7347              		.loc 1 1380 8 view .LVU2328
1380:src/keys.c    **** 		State2.digval = 0;
 7348              		.loc 1 1380 22 is_stmt 0 view .LVU2329
 7349 0b28 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1381:src/keys.c    **** 		State2.numdigit = 0;
 7350              		.loc 1 1381 17 view .LVU2330
 7351 0b2c 0023     		movs	r3, #0
1380:src/keys.c    **** 		State2.digval = 0;
 7352              		.loc 1 1380 22 view .LVU2331
 7353 0b2e 6FF30002 		bfc	r2, #0, #1
 7354 0b32 88F81520 		strb	r2, [r8, #21]
1381:src/keys.c    **** 		State2.numdigit = 0;
 7355              		.loc 1 1381 3 is_stmt 1 view .LVU2332
1381:src/keys.c    **** 		State2.numdigit = 0;
 7356              		.loc 1 1381 17 is_stmt 0 view .LVU2333
 7357 0b36 A8F80830 		strh	r3, [r8, #8]	@ movhi
ARM GAS  /tmp/cciIzcMf.s 			page 223


1382:src/keys.c    **** 	}
 7358              		.loc 1 1382 3 is_stmt 1 view .LVU2334
1382:src/keys.c    **** 	}
 7359              		.loc 1 1382 19 is_stmt 0 view .LVU2335
 7360 0b3a 88F80B30 		strb	r3, [r8, #11]
 7361              	.LBE870:
 7362              	.LBE869:
2832:src/keys.c    **** 
 7363              		.loc 1 2832 10 view .LVU2336
 7364 0b3e 4FF0330B 		mov	fp, #51
 7365 0b42 FFF7B1BA 		b	.L565
 7366              	.LVL567:
 7367              	.L892:
2832:src/keys.c    **** 
 7368              		.loc 1 2832 10 view .LVU2337
 7369              	.LBE1197:
 7370              	.LBE1254:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 7371              		.loc 1 2948 7 view .LVU2338
 7372 0b46 5F46     		mov	r7, fp
 7373 0b48 FFF7AEBA 		b	.L565
 7374              	.LVL568:
 7375              	.L615:
 7376              	.LBB1255:
 7377              	.LBB1198:
 7378              	.LBB890:
 7379              	.LBB698:
1234:src/keys.c    **** 
 7380              		.loc 1 1234 2 view .LVU2339
 7381 0b4c 2D2C     		cmp	r4, #45
 7382 0b4e 7FF436AE 		bne	.L1067
1242:src/keys.c    **** 		goto stay;
 7383              		.loc 1 1242 3 is_stmt 1 view .LVU2340
 7384 0b52 8AF0010A 		eor	r10, r10, #1
 7385              	.LVL569:
1243:src/keys.c    **** 
 7386              		.loc 1 1243 3 view .LVU2341
 7387              	.L621:
1251:src/keys.c    **** 		State2.cmplx = cmplx;
 7388              		.loc 1 1251 3 view .LVU2342
1252:src/keys.c    **** 		State2.dot = f;
 7389              		.loc 1 1252 3 view .LVU2343
1253:src/keys.c    **** 		break;
 7390              		.loc 1 1253 3 view .LVU2344
1252:src/keys.c    **** 		State2.dot = f;
 7391              		.loc 1 1252 16 is_stmt 0 view .LVU2345
 7392 0b56 4FEA4A03 		lsl	r3, r10, #1
 7393 0b5a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7394 0b5e 43F02003 		orr	r3, r3, #32
 7395 0b62 43EA8913 		orr	r3, r3, r9, lsl #6
 7396 0b66 03F06203 		and	r3, r3, #98
 7397 0b6a 22F06202 		bic	r2, r2, #98
 7398 0b6e 1343     		orrs	r3, r3, r2
 7399 0b70 88F81530 		strb	r3, [r8, #21]
1254:src/keys.c    **** 
 7400              		.loc 1 1254 3 is_stmt 1 view .LVU2346
1259:src/keys.c    **** }
ARM GAS  /tmp/cciIzcMf.s 			page 224


 7401              		.loc 1 1259 9 is_stmt 0 view .LVU2347
 7402 0b74 4FF0330B 		mov	fp, #51
1254:src/keys.c    **** 
 7403              		.loc 1 1254 3 view .LVU2348
 7404 0b78 FFF796BA 		b	.L565
 7405              	.LVL570:
 7406              	.L893:
1254:src/keys.c    **** 
 7407              		.loc 1 1254 3 view .LVU2349
 7408              	.LBE698:
 7409              	.LBE890:
 7410              	.LBE1198:
 7411              	.LBE1255:
 7412              	.LBB1256:
 7413 0b7c 9B46     		mov	fp, r3
 7414              	.LVL571:
1254:src/keys.c    **** 
 7415              		.loc 1 1254 3 view .LVU2350
 7416 0b7e FFF7B5BA 		b	.L841
 7417              	.LVL572:
 7418              	.L1118:
1254:src/keys.c    **** 
 7419              		.loc 1 1254 3 view .LVU2351
 7420              	.LBE1256:
 7421              	.LBB1257:
 7422              	.LBB1199:
 7423              	.LBB891:
 7424              	.LBB862:
1907:src/keys.c    **** 	State2.cmplx = 0;
 7425              		.loc 1 1907 2 is_stmt 1 view .LVU2352
1908:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7426              		.loc 1 1908 15 is_stmt 0 view .LVU2353
 7427 0b82 6EF34102 		bfi	r2, lr, #1, #1
1907:src/keys.c    **** 	State2.cmplx = 0;
 7428              		.loc 1 1907 14 view .LVU2354
 7429 0b86 0721     		movs	r1, #7
1909:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7430              		.loc 1 1909 5 view .LVU2355
 7431 0b88 6428     		cmp	r0, #100
1908:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7432              		.loc 1 1908 15 view .LVU2356
 7433 0b8a 88F81520 		strb	r2, [r8, #21]
1907:src/keys.c    **** 	State2.cmplx = 0;
 7434              		.loc 1 1907 14 view .LVU2357
 7435 0b8e 88F80F10 		strb	r1, [r8, #15]
1908:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7436              		.loc 1 1908 2 is_stmt 1 view .LVU2358
1909:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7437              		.loc 1 1909 2 view .LVU2359
1909:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7438              		.loc 1 1909 5 is_stmt 0 view .LVU2360
 7439 0b92 00F06983 		beq	.L896
1905:src/keys.c    **** 
 7440              		.loc 1 1905 44 view .LVU2361
 7441 0b96 4FF02D0A 		mov	r10, #45
 7442              	.LVL573:
1905:src/keys.c    **** 
ARM GAS  /tmp/cciIzcMf.s 			page 225


 7443              		.loc 1 1905 44 view .LVU2362
 7444 0b9a 73E7     		b	.L855
 7445              	.LVL574:
 7446              	.L1093:
1905:src/keys.c    **** 
 7447              		.loc 1 1905 44 view .LVU2363
 7448              	.LBE862:
 7449              	.LBE891:
2841:src/keys.c    **** 
 7450              		.loc 1 2841 3 is_stmt 1 view .LVU2364
 7451              	.LBB892:
 7452              	.LBB893:
2470:src/keys.c    **** 
 7453              		.loc 1 2470 12 is_stmt 0 view .LVU2365
 7454 0b9c 664A     		ldr	r2, .L1161+8
 7455 0b9e 1268     		ldr	r2, [r2]
2470:src/keys.c    **** 
 7456              		.loc 1 2470 31 view .LVU2366
 7457 0ba0 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7458              	.LBE893:
 7459              	.LBE892:
2841:src/keys.c    **** 
 7460              		.loc 1 2841 10 view .LVU2367
 7461 0ba4 E4B2     		uxtb	r4, r4
 7462              	.LVL575:
 7463              	.LBB910:
 7464              	.LBI892:
2468:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7465              		.loc 1 2468 12 is_stmt 1 view .LVU2368
 7466              	.LBB903:
2469:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7467              		.loc 1 2469 2 view .LVU2369
2470:src/keys.c    **** 
 7468              		.loc 1 2470 2 view .LVU2370
2470:src/keys.c    **** 
 7469              		.loc 1 2470 31 is_stmt 0 view .LVU2371
 7470 0ba6 002A     		cmp	r2, #0
 7471 0ba8 B4BF     		ite	lt
 7472 0baa 0B20     		movlt	r0, #11
 7473 0bac 0A20     		movge	r0, #10
 7474              	.LVL576:
2472:src/keys.c    **** 		if (--n < -2)
 7475              		.loc 1 2472 2 is_stmt 1 view .LVU2372
2472:src/keys.c    **** 		if (--n < -2)
 7476              		.loc 1 2472 5 is_stmt 0 view .LVU2373
 7477 0bae 122C     		cmp	r4, #18
 7478 0bb0 00F01481 		beq	.L1129
2476:src/keys.c    **** 		if (++n > max)
 7479              		.loc 1 2476 7 is_stmt 1 view .LVU2374
2476:src/keys.c    **** 		if (++n > max)
 7480              		.loc 1 2476 10 is_stmt 0 view .LVU2375
 7481 0bb4 182C     		cmp	r4, #24
 7482 0bb6 00F03981 		beq	.L1130
2480:src/keys.c    **** 		State2.status = 0;
 7483              		.loc 1 2480 7 is_stmt 1 view .LVU2376
2480:src/keys.c    **** 		State2.status = 0;
 7484              		.loc 1 2480 10 is_stmt 0 view .LVU2377
ARM GAS  /tmp/cciIzcMf.s 			page 226


 7485 0bba 102C     		cmp	r4, #16
 7486 0bbc 00F08084 		beq	.L1131
 7487              	.LBB894:
2485:src/keys.c    **** 		if (nn <= 9)
 7488              		.loc 1 2485 3 is_stmt 1 view .LVU2378
 7489              	.LVL577:
 7490              	.LBB895:
 7491              	.LBI895:
 198:src/keys.c    **** {
 7492              		.loc 1 198 14 view .LVU2379
 7493              	.LBB896:
 200:src/keys.c    ****     // K00 - K05
 7494              		.loc 1 200 3 view .LVU2380
 221:src/keys.c    **** }
 7495              		.loc 1 221 3 view .LVU2381
 7496              	.LBB897:
 7497              	.LBI897:
 119:src/keys.c    **** {
 7498              		.loc 1 119 12 view .LVU2382
 7499              	.LBB898:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7500              		.loc 1 121 2 view .LVU2383
 131:src/keys.c    **** }
 7501              		.loc 1 131 2 view .LVU2384
 131:src/keys.c    **** }
 7502              		.loc 1 131 23 is_stmt 0 view .LVU2385
 7503 0bc0 5E4A     		ldr	r2, .L1161+12
 7504              	.LBE898:
 7505              	.LBE897:
 221:src/keys.c    **** }
 7506              		.loc 1 221 28 view .LVU2386
 7507 0bc2 5F49     		ldr	r1, .L1161+16
 7508              	.LBB900:
 7509              	.LBB899:
 131:src/keys.c    **** }
 7510              		.loc 1 131 23 view .LVU2387
 7511 0bc4 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 7512 0bc6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7513 0bc8 02F07F02 		and	r2, r2, #127
 7514              	.LVL578:
 131:src/keys.c    **** }
 7515              		.loc 1 131 23 view .LVU2388
 7516              	.LBE899:
 7517              	.LBE900:
 7518              	.LBE896:
 7519              	.LBE895:
2486:src/keys.c    **** 			n = nn;
 7520              		.loc 1 2486 3 is_stmt 1 view .LVU2389
2486:src/keys.c    **** 			n = nn;
 7521              		.loc 1 2486 6 is_stmt 0 view .LVU2390
 7522 0bcc 092A     		cmp	r2, #9
 7523 0bce 08D9     		bls	.L641
2488:src/keys.c    **** 			n = n == max ? 10 : max;
 7524              		.loc 1 2488 11 view .LVU2391
 7525 0bd0 702A     		cmp	r2, #112
 7526              	.LBE894:
2469:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
ARM GAS  /tmp/cciIzcMf.s 			page 227


 7527              		.loc 1 2469 6 view .LVU2392
 7528 0bd2 A3F10303 		sub	r3, r3, #3
 7529              	.LVL579:
 7530              	.LBB901:
2488:src/keys.c    **** 			n = n == max ? 10 : max;
 7531              		.loc 1 2488 8 is_stmt 1 view .LVU2393
2488:src/keys.c    **** 			n = n == max ? 10 : max;
 7532              		.loc 1 2488 11 is_stmt 0 view .LVU2394
 7533 0bd6 00F03581 		beq	.L1132
2490:src/keys.c    **** 			n = 10; 
 7534              		.loc 1 2490 8 is_stmt 1 view .LVU2395
2490:src/keys.c    **** 			n = 10; 
 7535              		.loc 1 2490 11 is_stmt 0 view .LVU2396
 7536 0bda 7F2A     		cmp	r2, #127
 7537 0bdc 00F02B83 		beq	.L1056
 7538              	.L863:
 7539 0be0 0A22     		movs	r2, #10
 7540              	.LVL580:
 7541              	.L641:
2490:src/keys.c    **** 			n = 10; 
 7542              		.loc 1 2490 11 view .LVU2397
 7543              	.LBE901:
2493:src/keys.c    **** 
 7544              		.loc 1 2493 2 is_stmt 1 view .LVU2398
2493:src/keys.c    **** 
 7545              		.loc 1 2493 20 is_stmt 0 view .LVU2399
 7546 0be2 0332     		adds	r2, r2, #3
2493:src/keys.c    **** 
 7547              		.loc 1 2493 16 view .LVU2400
 7548 0be4 88F80C20 		strb	r2, [r8, #12]
2495:src/keys.c    **** }
 7549              		.loc 1 2495 2 is_stmt 1 view .LVU2401
 7550              	.LBE903:
 7551              	.LBE910:
2841:src/keys.c    **** 
 7552              		.loc 1 2841 10 is_stmt 0 view .LVU2402
 7553 0be8 4FF0330B 		mov	fp, #51
 7554              	.LBB911:
 7555              	.LBB904:
2495:src/keys.c    **** }
 7556              		.loc 1 2495 9 view .LVU2403
 7557 0bec FFF75CBA 		b	.L565
 7558              	.LVL581:
 7559              	.L1097:
2495:src/keys.c    **** }
 7560              		.loc 1 2495 9 view .LVU2404
 7561              	.LBE904:
 7562              	.LBE911:
2864:src/keys.c    **** 
 7563              		.loc 1 2864 3 is_stmt 1 view .LVU2405
 7564              	.LBB912:
 7565              	.LBB913:
 7566              	.LBB914:
 7567              	.LBB915:
 7568              	.LBB916:
 7569              	.LBB917:
 7570              	.LBB918:
ARM GAS  /tmp/cciIzcMf.s 			page 228


  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7571              		.loc 1 85 18 is_stmt 0 view .LVU2406
 7572 0bf0 FFF7FEFF 		bl	shift_down
 7573              	.LVL582:
 7574              	.LBE918:
 7575              	.LBE917:
 7576              	.LBE916:
 7577              	.LBE915:
 7578              	.LBE914:
 7579              	.LBE913:
 7580              	.LBE912:
2864:src/keys.c    **** 
 7581              		.loc 1 2864 10 view .LVU2407
 7582 0bf4 E4B2     		uxtb	r4, r4
 7583              	.LVL583:
 7584              	.LBB938:
 7585              	.LBI912:
1266:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7586              		.loc 1 1266 12 is_stmt 1 view .LVU2408
 7587              	.LBB935:
1267:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7588              		.loc 1 1267 2 view .LVU2409
1272:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7589              		.loc 1 1272 2 view .LVU2410
1276:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7590              		.loc 1 1276 2 view .LVU2411
 7591              	.LBB927:
 7592              	.LBI914:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 7593              		.loc 1 102 13 view .LVU2412
 7594              	.LBE927:
 7595              	.LBE935:
 7596              	.LBE938:
 7597              	.LBE1199:
 7598              	.LBE1257:
 103:src/keys.c    **** }
 7599              		.loc 1 103 2 view .LVU2413
 7600              	.LBB1258:
 7601              	.LBB1200:
 7602              	.LBB939:
 7603              	.LBB936:
 7604              	.LBB928:
 7605              	.LBB924:
 7606              	.LBI915:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 7607              		.loc 1 92 20 view .LVU2414
 7608              	.LBB921:
  93:src/keys.c    **** 	State2.shifts = shift;
 7609              		.loc 1 93 2 view .LVU2415
 7610              	.LBB920:
 7611              	.LBI917:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 7612              		.loc 1 84 13 view .LVU2416
 7613              	.LBB919:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7614              		.loc 1 85 2 view .LVU2417
  86:src/keys.c    **** }
ARM GAS  /tmp/cciIzcMf.s 			page 229


 7615              		.loc 1 86 2 view .LVU2418
  86:src/keys.c    **** }
 7616              		.loc 1 86 52 is_stmt 0 view .LVU2419
 7617 0bf6 8346     		mov	fp, r0
 7618 0bf8 08B9     		cbnz	r0, .L651
 7619 0bfa 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 7620              	.L651:
 7621              	.LVL584:
  86:src/keys.c    **** }
 7622              		.loc 1 86 52 view .LVU2420
 7623              	.LBE919:
 7624              	.LBE920:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7625              		.loc 1 94 2 is_stmt 1 view .LVU2421
 7626              	.LBE921:
 7627              	.LBE924:
 7628              	.LBE928:
1279:src/keys.c    **** #ifdef DM42
 7629              		.loc 1 1279 15 is_stmt 0 view .LVU2422
 7630 0bfe 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7631              	.LBB929:
 7632              	.LBB925:
 7633              	.LBB922:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7634              		.loc 1 94 16 view .LVU2423
 7635 0c02 0023     		movs	r3, #0
 7636              	.LBE922:
 7637              	.LBE925:
 7638              	.LBE929:
1277:src/keys.c    **** 
 7639              		.loc 1 1277 23 view .LVU2424
 7640 0c04 ABF1010A 		sub	r10, fp, #1
 7641              	.LVL585:
1279:src/keys.c    **** #ifdef DM42
 7642              		.loc 1 1279 15 view .LVU2425
 7643 0c08 63F38202 		bfi	r2, r3, #2, #1
1277:src/keys.c    **** 
 7644              		.loc 1 1277 23 view .LVU2426
 7645 0c0c BAFA8AFA 		clz	r10, r10
1279:src/keys.c    **** #ifdef DM42
 7646              		.loc 1 1279 15 view .LVU2427
 7647 0c10 88F81520 		strb	r2, [r8, #21]
 7648              	.LBB930:
 7649              	.LBB926:
 7650              	.LBB923:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7651              		.loc 1 94 16 view .LVU2428
 7652 0c14 88F81030 		strb	r3, [r8, #16]
  95:src/keys.c    **** 	return r;
 7653              		.loc 1 95 2 is_stmt 1 view .LVU2429
  95:src/keys.c    **** 	return r;
 7654              		.loc 1 95 19 is_stmt 0 view .LVU2430
 7655 0c18 88F80D30 		strb	r3, [r8, #13]
  96:src/keys.c    **** }
 7656              		.loc 1 96 2 is_stmt 1 view .LVU2431
 7657              	.LVL586:
  96:src/keys.c    **** }
ARM GAS  /tmp/cciIzcMf.s 			page 230


 7658              		.loc 1 96 2 is_stmt 0 view .LVU2432
 7659              	.LBE923:
 7660              	.LBE926:
 7661              	.LBE930:
1277:src/keys.c    **** 
 7662              		.loc 1 1277 2 is_stmt 1 view .LVU2433
1277:src/keys.c    **** 
 7663              		.loc 1 1277 23 is_stmt 0 view .LVU2434
 7664 0c1c 4FEA5A1A 		lsr	r10, r10, #5
 7665              	.LVL587:
1279:src/keys.c    **** #ifdef DM42
 7666              		.loc 1 1279 2 is_stmt 1 view .LVU2435
1281:src/keys.c    **** 	display_current_menu ();
 7667              		.loc 1 1281 2 view .LVU2436
 7668 0c20 FFF7FEFF 		bl	set_last_menu
 7669              	.LVL588:
1282:src/keys.c    **** #endif
 7670              		.loc 1 1282 2 view .LVU2437
 7671 0c24 FFF7FEFF 		bl	display_current_menu
 7672              	.LVL589:
1284:src/keys.c    **** 	
 7673              		.loc 1 1284 2 view .LVU2438
1284:src/keys.c    **** 	
 7674              		.loc 1 1284 5 is_stmt 0 view .LVU2439
 7675 0c28 BBF1000F 		cmp	fp, #0
 7676 0c2c 3FF4C7AD 		beq	.L1067
1286:src/keys.c    **** 		return op_map[c - K10][f];
 7677              		.loc 1 1286 2 is_stmt 1 view .LVU2440
1286:src/keys.c    **** 		return op_map[c - K10][f];
 7678              		.loc 1 1286 15 is_stmt 0 view .LVU2441
 7679 0c30 A31F     		subs	r3, r4, #6
1286:src/keys.c    **** 		return op_map[c - K10][f];
 7680              		.loc 1 1286 5 view .LVU2442
 7681 0c32 DAB2     		uxtb	r2, r3
 7682 0c34 022A     		cmp	r2, #2
 7683 0c36 40F2F280 		bls	.L1133
1289:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7684              		.loc 1 1289 2 is_stmt 1 view .LVU2443
1289:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7685              		.loc 1 1289 15 is_stmt 0 view .LVU2444
 7686 0c3a 0E3C     		subs	r4, r4, #14
 7687              	.LVL590:
1289:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7688              		.loc 1 1289 5 view .LVU2445
 7689 0c3c E3B2     		uxtb	r3, r4
 7690 0c3e 012B     		cmp	r3, #1
 7691 0c40 3FF6BDAD 		bhi	.L1067
1290:src/keys.c    **** 
 7692              		.loc 1 1290 3 is_stmt 1 view .LVU2446
 7693 0c44 3F4B     		ldr	r3, .L1161+20
 7694              	.LBB931:
 7695              	.LBB932:
 647:src/keys.c    **** }
 7696              		.loc 1 647 15 is_stmt 0 view .LVU2447
 7697 0c46 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 7698              	.LBE932:
 7699              	.LBE931:
ARM GAS  /tmp/cciIzcMf.s 			page 231


1290:src/keys.c    **** 
 7700              		.loc 1 1290 3 view .LVU2448
 7701 0c4a 03EB4404 		add	r4, r3, r4, lsl #1
 7702              	.LVL591:
1292:src/keys.c    **** }
 7703              		.loc 1 1292 9 view .LVU2449
 7704 0c4e 4FF0330B 		mov	fp, #51
 7705              	.LVL592:
1290:src/keys.c    **** 
 7706              		.loc 1 1290 3 view .LVU2450
 7707 0c52 14F80A30 		ldrb	r3, [r4, r10]	@ zero_extendqisi2
 7708              	.LVL593:
 7709              	.LBB934:
 7710              	.LBI931:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 7711              		.loc 1 646 13 is_stmt 1 view .LVU2451
 7712              	.LBB933:
 647:src/keys.c    **** }
 7713              		.loc 1 647 2 view .LVU2452
 647:src/keys.c    **** }
 7714              		.loc 1 647 15 is_stmt 0 view .LVU2453
 7715 0c56 9A42     		cmp	r2, r3
 7716 0c58 08BF     		it	eq
 7717 0c5a 0023     		moveq	r3, #0
 7718              	.LVL594:
 647:src/keys.c    **** }
 7719              		.loc 1 647 15 view .LVU2454
 7720 0c5c 88F81130 		strb	r3, [r8, #17]
 648:src/keys.c    **** 
 7721              		.loc 1 648 1 view .LVU2455
 7722 0c60 FFF722BA 		b	.L565
 7723              	.LVL595:
 7724              	.L1135:
 648:src/keys.c    **** 
 7725              		.loc 1 648 1 view .LVU2456
 7726              	.LBE933:
 7727              	.LBE934:
 7728              	.LBE936:
 7729              	.LBE939:
 7730              	.LBB940:
 7731              	.LBB653:
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7732              		.loc 1 263 74 view .LVU2457
 7733 0c64 D8F81430 		ldr	r3, [r8, #20]
 7734 0c68 3749     		ldr	r1, .L1161+24
 7735 0c6a 0B42     		tst	r3, r1
 7736 0c6c 45D0     		beq	.L656
 266:src/keys.c    ****     /*
 7737              		.loc 1 266 3 is_stmt 1 view .LVU2458
 266:src/keys.c    ****     /*
 7738              		.loc 1 266 23 is_stmt 0 view .LVU2459
 7739 0c6e 3749     		ldr	r1, .L1161+28
 266:src/keys.c    ****     /*
 7740              		.loc 1 266 6 view .LVU2460
 7741 0c70 0B42     		tst	r3, r1
 7742 0c72 3FF404AB 		beq	.L853
 7743              	.L658:
ARM GAS  /tmp/cciIzcMf.s 			page 232


 7744              	.LBB648:
 335:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7745              		.loc 1 335 5 is_stmt 1 view .LVU2461
 357:src/keys.c    **** 
 7746              		.loc 1 357 5 view .LVU2462
 362:src/keys.c    ****     col = smap[shift];
 7747              		.loc 1 362 5 view .LVU2463
 7748              	.LVL596:
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7749              		.loc 1 363 5 view .LVU2464
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7750              		.loc 1 363 15 is_stmt 0 view .LVU2465
 7751 0c76 3649     		ldr	r1, .L1161+32
 362:src/keys.c    ****     col = smap[shift];
 7752              		.loc 1 362 8 view .LVU2466
 7753 0c78 364B     		ldr	r3, .L1161+36
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7754              		.loc 1 363 9 view .LVU2467
 7755 0c7a 11F80AC0 		ldrb	ip, [r1, r10]	@ zero_extendqisi2
 7756              	.LVL597:
 364:src/keys.c    ****   }
 7757              		.loc 1 364 5 is_stmt 1 view .LVU2468
 364:src/keys.c    ****   }
 7758              		.loc 1 364 9 is_stmt 0 view .LVU2469
 7759 0c7e 0621     		movs	r1, #6
 7760 0c80 FFF70CBB 		b	.L661
 7761              	.LVL598:
 7762              	.L631:
 364:src/keys.c    ****   }
 7763              		.loc 1 364 9 view .LVU2470
 7764              	.LBE648:
 7765              	.LBE653:
 7766              	.LBE940:
 7767              	.LBB941:
 7768              	.LBB863:
1929:src/keys.c    **** 		// digit 2..9, -> or .
 7769              		.loc 1 1929 7 is_stmt 1 view .LVU2471
1929:src/keys.c    **** 		// digit 2..9, -> or .
 7770              		.loc 1 1929 10 is_stmt 0 view .LVU2472
 7771 0c84 0928     		cmp	r0, #9
 7772 0c86 69D9     		bls	.L633
 7773              	.L625:
1929:src/keys.c    **** 		// digit 2..9, -> or .
 7774              		.loc 1 1929 19 view .LVU2473
 7775 0c88 2C2C     		cmp	r4, #44
 7776 0c8a 67D0     		beq	.L633
1929:src/keys.c    **** 		// digit 2..9, -> or .
 7777              		.loc 1 1929 35 view .LVU2474
 7778 0c8c 262C     		cmp	r4, #38
 7779 0c8e 65D0     		beq	.L633
1935:src/keys.c    **** 	case K11:					// tests vs register
 7780              		.loc 1 1935 2 is_stmt 1 view .LVU2475
 7781 0c90 0C2C     		cmp	r4, #12
 7782 0c92 3FF497AD 		beq	.L813
 7783 0c96 102C     		cmp	r4, #16
 7784 0c98 3FF491AD 		beq	.L1067
 7785 0c9c 072C     		cmp	r4, #7
ARM GAS  /tmp/cciIzcMf.s 			page 233


 7786 0c9e 3FF491AD 		beq	.L813
 7787              	.L628:
1949:src/keys.c    **** 	State2.cmplx = cmpx;
 7788              		.loc 1 1949 2 view .LVU2476
1950:src/keys.c    **** 	return STATE_UNFINISHED;
 7789              		.loc 1 1950 15 is_stmt 0 view .LVU2477
 7790 0ca2 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1949:src/keys.c    **** 	State2.cmplx = cmpx;
 7791              		.loc 1 1949 14 view .LVU2478
 7792 0ca6 88F80FB0 		strb	fp, [r8, #15]
1950:src/keys.c    **** 	return STATE_UNFINISHED;
 7793              		.loc 1 1950 2 is_stmt 1 view .LVU2479
1950:src/keys.c    **** 	return STATE_UNFINISHED;
 7794              		.loc 1 1950 15 is_stmt 0 view .LVU2480
 7795 0caa 6EF34103 		bfi	r3, lr, #1, #1
 7796 0cae 88F81530 		strb	r3, [r8, #21]
1951:src/keys.c    **** }
 7797              		.loc 1 1951 2 is_stmt 1 view .LVU2481
1951:src/keys.c    **** }
 7798              		.loc 1 1951 9 is_stmt 0 view .LVU2482
 7799 0cb2 4FF0330B 		mov	fp, #51
 7800              	.LVL599:
1951:src/keys.c    **** }
 7801              		.loc 1 1951 9 view .LVU2483
 7802 0cb6 FFF7F7B9 		b	.L565
 7803              	.LVL600:
 7804              	.L1119:
1951:src/keys.c    **** }
 7805              		.loc 1 1951 9 view .LVU2484
 7806              	.LBE863:
 7807              	.LBE941:
 7808              	.LBB942:
 7809              	.LBB879:
1328:src/keys.c    **** 	}
 7810              		.loc 1 1328 3 is_stmt 1 view .LVU2485
1328:src/keys.c    **** 	}
 7811              		.loc 1 1328 8 is_stmt 0 view .LVU2486
 7812 0cba FFF7FEFF 		bl	gtodot_digit
 7813              	.LVL601:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7814              		.loc 1 1377 2 is_stmt 1 view .LVU2487
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7815              		.loc 1 1377 5 is_stmt 0 view .LVU2488
 7816 0cbe 0028     		cmp	r0, #0
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7817              		.loc 1 1377 5 view .LVU2489
 7818 0cc0 FFF67DAD 		blt	.L1067
 7819              	.L597:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7820              		.loc 1 1378 3 is_stmt 1 view .LVU2490
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7821              		.loc 1 1378 11 is_stmt 0 view .LVU2491
 7822 0cc4 FFF7FEFF 		bl	find_user_pc
 7823              	.LVL602:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7824              		.loc 1 1378 11 view .LVU2492
 7825 0cc8 2CE7     		b	.L607
ARM GAS  /tmp/cciIzcMf.s 			page 234


 7826              	.LVL603:
 7827              	.L894:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7828              		.loc 1 1378 11 view .LVU2493
 7829              	.LBE879:
 7830              	.LBE942:
 7831              	.LBE1200:
 7832              	.LBE1258:
 7833              	.LBB1259:
 7834 0cca BB46     		mov	fp, r7
 7835              	.LVL604:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7836              		.loc 1 1378 11 view .LVU2494
 7837 0ccc FFF70EBA 		b	.L841
 7838              	.LVL605:
 7839              	.L626:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7840              		.loc 1 1378 11 view .LVU2495
 7841              	.LBE1259:
 7842              	.LBB1260:
 7843              	.LBB1201:
 7844              	.LBB943:
 7845              	.LBB864:
1921:src/keys.c    **** 		// Special 0
 7846              		.loc 1 1921 7 is_stmt 1 view .LVU2496
1921:src/keys.c    **** 		// Special 0
 7847              		.loc 1 1921 10 is_stmt 0 view .LVU2497
 7848 0cd0 0028     		cmp	r0, #0
 7849 0cd2 41F01180 		bne	.L629
1923:src/keys.c    **** 	}
 7850              		.loc 1 1923 3 is_stmt 1 view .LVU2498
1923:src/keys.c    **** 	}
 7851              		.loc 1 1923 18 is_stmt 0 view .LVU2499
 7852 0cd6 BEF1000F 		cmp	lr, #0
 7853 0cda 14BF     		ite	ne
 7854 0cdc 2523     		movne	r3, #37
 7855 0cde 1723     		moveq	r3, #23
1923:src/keys.c    **** 	}
 7856              		.loc 1 1923 47 view .LVU2500
 7857 0ce0 9B44     		add	fp, fp, r3
 7858              	.LVL606:
1923:src/keys.c    **** 	}
 7859              		.loc 1 1923 47 view .LVU2501
 7860 0ce2 55E4     		b	.L594
 7861              	.LVL607:
 7862              	.L1100:
1923:src/keys.c    **** 	}
 7863              		.loc 1 1923 47 view .LVU2502
 7864              	.LBE864:
 7865              	.LBE943:
 7866              	.LBB944:
 7867              	.LBB654:
 372:src/keys.c    ****       break;
 7868              		.loc 1 372 7 is_stmt 1 view .LVU2503
 372:src/keys.c    ****       break;
 7869              		.loc 1 372 11 is_stmt 0 view .LVU2504
 7870 0ce4 6344     		add	r3, r3, ip
ARM GAS  /tmp/cciIzcMf.s 			page 235


 7871              	.LVL608:
 372:src/keys.c    ****       break;
 7872              		.loc 1 372 11 view .LVU2505
 7873 0ce6 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7874              	.LVL609:
 373:src/keys.c    ****     }
 7875              		.loc 1 373 7 is_stmt 1 view .LVU2506
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7876              		.loc 1 376 3 view .LVU2507
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7877              		.loc 1 376 6 is_stmt 0 view .LVU2508
 7878 0cea 1307     		lsls	r3, r2, #28
 7879 0cec 40F18380 		bpl	.L1134
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7880              		.loc 1 376 20 view .LVU2509
 7881 0cf0 ABF10B03 		sub	r3, fp, #11
 7882 0cf4 042B     		cmp	r3, #4
 7883 0cf6 3FF6FAAB 		bhi	.L671
 7884              	.LVL610:
 7885              	.L656:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7886              		.loc 1 376 20 view .LVU2510
 7887              	.LBE654:
 7888              	.LBE944:
2873:src/keys.c    **** 			return STATE_UNFINISHED;
 7889              		.loc 1 2873 3 is_stmt 1 view .LVU2511
2873:src/keys.c    **** 			return STATE_UNFINISHED;
 7890              		.loc 1 2873 7 is_stmt 0 view .LVU2512
 7891 0cfa FFF7FEFF 		bl	is_bad_cmdline
 7892              	.LVL611:
2873:src/keys.c    **** 			return STATE_UNFINISHED;
 7893              		.loc 1 2873 6 view .LVU2513
 7894 0cfe 0446     		mov	r4, r0
 7895 0d00 0028     		cmp	r0, #0
 7896 0d02 7FF45CAD 		bne	.L1067
2875:src/keys.c    **** 		init_cat( cat );
 7897              		.loc 1 2875 3 is_stmt 1 view .LVU2514
 7898 0d06 FFF7FEFF 		bl	init_cat
 7899              	.LVL612:
2876:src/keys.c    **** 		return STATE_UNFINISHED;
 7900              		.loc 1 2876 3 view .LVU2515
 7901 0d0a 5846     		mov	r0, fp
 7902 0d0c FFF7FEFF 		bl	init_cat
 7903              	.LVL613:
2877:src/keys.c    **** 	}
 7904              		.loc 1 2877 3 view .LVU2516
 7905              	.LBE1201:
 7906              	.LBE1260:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 7907              		.loc 1 2948 7 is_stmt 0 view .LVU2517
 7908 0d10 2746     		mov	r7, r4
 7909              	.LBB1261:
 7910              	.LBB1202:
2877:src/keys.c    **** 	}
 7911              		.loc 1 2877 10 view .LVU2518
 7912 0d12 4FF0330B 		mov	fp, #51
 7913 0d16 FFF7C7B9 		b	.L565
ARM GAS  /tmp/cciIzcMf.s 			page 236


 7914              	.LVL614:
 7915              	.L1098:
 7916              	.LBB945:
 7917              	.LBB655:
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7918              		.loc 1 263 16 view .LVU2519
 7919 0d1a BAF1030F 		cmp	r10, #3
 7920 0d1e A1D0     		beq	.L1135
 266:src/keys.c    ****     /*
 7921              		.loc 1 266 3 is_stmt 1 view .LVU2520
 266:src/keys.c    ****     /*
 7922              		.loc 1 266 23 is_stmt 0 view .LVU2521
 7923 0d20 0A49     		ldr	r1, .L1161+28
 7924 0d22 D8F81430 		ldr	r3, [r8, #20]
 266:src/keys.c    ****     /*
 7925              		.loc 1 266 6 view .LVU2522
 7926 0d26 1942     		tst	r1, r3
 7927 0d28 3FF4E5AA 		beq	.L666
 7928 0d2c A3E7     		b	.L658
 7929              	.L1162:
 7930 0d2e 00BF     		.align	2
 7931              	.L1161:
 7932 0d30 00000000 		.word	TraceBuffer
 7933 0d34 00000000 		.word	DispMsg
 7934 0d38 00000000 		.word	main_ram
 7935 0d3c 00000000 		.word	.LANCHOR1
 7936 0d40 00000000 		.word	.LANCHOR0
 7937 0d44 00000000 		.word	.LANCHOR15
 7938 0d48 000A4000 		.word	4196864
 7939 0d4c 00080800 		.word	526336
 7940 0d50 00000000 		.word	.LANCHOR16
 7941 0d54 00000000 		.word	.LANCHOR10
 7942 0d58 00000000 		.word	StateWhileOn
 7943              	.LVL615:
 7944              	.L633:
 266:src/keys.c    ****     /*
 7945              		.loc 1 266 6 view .LVU2523
 7946              	.LBE655:
 7947              	.LBE945:
 7948              	.LBB946:
 7949              	.LBB865:
1931:src/keys.c    **** 		return process_arg(c);
 7950              		.loc 1 1931 3 is_stmt 1 view .LVU2524
 7951              	.LBB860:
 7952              	.LBI860:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 7953              		.loc 1 501 13 view .LVU2525
 7954              	.LBB861:
 502:src/keys.c    **** 		return;
 7955              		.loc 1 502 2 view .LVU2526
 502:src/keys.c    **** 		return;
 7956              		.loc 1 502 6 is_stmt 0 view .LVU2527
 7957 0d5c FFF7FEFF 		bl	is_bad_cmdline
 7958              	.LVL616:
 502:src/keys.c    **** 		return;
 7959              		.loc 1 502 5 view .LVU2528
 7960 0d60 18B9     		cbnz	r0, .L635
ARM GAS  /tmp/cciIzcMf.s 			page 237


 7961 0d62 5FFA8AF0 		uxtb	r0, r10
 7962 0d66 FFF7FEFF 		bl	init_arg.part.0
 7963              	.LVL617:
 7964              	.L635:
 502:src/keys.c    **** 		return;
 7965              		.loc 1 502 5 view .LVU2529
 7966              	.LBE861:
 7967              	.LBE860:
1932:src/keys.c    **** 	}
 7968              		.loc 1 1932 3 is_stmt 1 view .LVU2530
1932:src/keys.c    **** 	}
 7969              		.loc 1 1932 10 is_stmt 0 view .LVU2531
 7970 0d6a 2046     		mov	r0, r4
 7971 0d6c FFF7FEFF 		bl	process_arg
 7972              	.LVL618:
 7973 0d70 8346     		mov	fp, r0
 7974              	.LVL619:
1932:src/keys.c    **** 	}
 7975              		.loc 1 1932 10 view .LVU2532
 7976 0d72 0DE4     		b	.L594
 7977              	.LVL620:
 7978              	.L1094:
1932:src/keys.c    **** 	}
 7979              		.loc 1 1932 10 view .LVU2533
 7980              	.LBE865:
 7981              	.LBE946:
2847:src/keys.c    **** 		return STATE_UNFINISHED;
 7982              		.loc 1 2847 3 is_stmt 1 view .LVU2534
 7983              	.LBB947:
 7984              	.LBI947:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7985              		.loc 1 109 13 view .LVU2535
 7986              	.LBB948:
 110:src/keys.c    **** }
 7987              		.loc 1 110 2 view .LVU2536
 110:src/keys.c    **** }
 7988              		.loc 1 110 16 is_stmt 0 view .LVU2537
 7989 0d74 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7990 0d78 013B     		subs	r3, r3, #1
 7991 0d7a 18BF     		it	ne
 7992 0d7c 0123     		movne	r3, #1
 7993 0d7e 88F81030 		strb	r3, [r8, #16]
 7994              	.LVL621:
 110:src/keys.c    **** }
 7995              		.loc 1 110 16 view .LVU2538
 7996              	.LBE948:
 7997              	.LBE947:
2848:src/keys.c    **** 	}
 7998              		.loc 1 2848 3 is_stmt 1 view .LVU2539
2848:src/keys.c    **** 	}
 7999              		.loc 1 2848 10 is_stmt 0 view .LVU2540
 8000 0d82 4FF0330B 		mov	fp, #51
 8001 0d86 FFF78FB9 		b	.L565
 8002              	.LVL622:
 8003              	.L616:
 8004              	.LBB949:
 8005              	.LBB699:
ARM GAS  /tmp/cciIzcMf.s 			page 238


1247:src/keys.c    **** 		// fall trough
 8006              		.loc 1 1247 3 is_stmt 1 view .LVU2541
1247:src/keys.c    **** 		// fall trough
 8007              		.loc 1 1247 10 is_stmt 0 view .LVU2542
 8008 0d8a A4F12909 		sub	r9, r4, #41
 8009              	.LVL623:
1247:src/keys.c    **** 		// fall trough
 8010              		.loc 1 1247 10 view .LVU2543
 8011 0d8e B9FA89F9 		clz	r9, r9
 8012 0d92 4FEA5919 		lsr	r9, r9, #5
 8013              	.LVL624:
1247:src/keys.c    **** 		// fall trough
 8014              		.loc 1 1247 10 view .LVU2544
 8015 0d96 DEE6     		b	.L621
 8016              	.LVL625:
 8017              	.L1095:
1247:src/keys.c    **** 		// fall trough
 8018              		.loc 1 1247 10 view .LVU2545
 8019              	.LBE699:
 8020              	.LBE949:
2851:src/keys.c    **** 		return STATE_UNFINISHED;
 8021              		.loc 1 2851 3 is_stmt 1 view .LVU2546
 8022              	.LBB950:
 8023              	.LBI950:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8024              		.loc 1 109 13 view .LVU2547
 8025              	.LBB951:
 110:src/keys.c    **** }
 8026              		.loc 1 110 2 view .LVU2548
 110:src/keys.c    **** }
 8027              		.loc 1 110 16 is_stmt 0 view .LVU2549
 8028 0d98 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 8029 0d9c 022A     		cmp	r2, #2
 8030 0d9e 18BF     		it	ne
 8031 0da0 0223     		movne	r3, #2
 8032 0da2 88F81030 		strb	r3, [r8, #16]
 8033              	.LVL626:
 110:src/keys.c    **** }
 8034              		.loc 1 110 16 view .LVU2550
 8035              	.LBE951:
 8036              	.LBE950:
2852:src/keys.c    **** 	}
 8037              		.loc 1 2852 3 is_stmt 1 view .LVU2551
2852:src/keys.c    **** 	}
 8038              		.loc 1 2852 10 is_stmt 0 view .LVU2552
 8039 0da6 4FF0330B 		mov	fp, #51
 8040 0daa FFF77DB9 		b	.L565
 8041              	.LVL627:
 8042              	.L1111:
2852:src/keys.c    **** 	}
 8043              		.loc 1 2852 10 view .LVU2553
 8044              	.LBE1202:
 8045              	.LBE1261:
3141:src/keys.c    **** 	NonProgrammable = 0;
 8046              		.loc 1 3141 26 view .LVU2554
 8047 0dae CE4A     		ldr	r2, .L1163
 8048 0db0 1168     		ldr	r1, [r2]
ARM GAS  /tmp/cciIzcMf.s 			page 239


 8049 0db2 0029     		cmp	r1, #0
 8050 0db4 3FF49BAD 		beq	.L838
 8051              	.LVL628:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8052              		.loc 1 3142 2 is_stmt 1 view .LVU2555
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8053              		.loc 1 3142 18 is_stmt 0 view .LVU2556
 8054 0db8 1360     		str	r3, [r2]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8055              		.loc 1 3143 2 is_stmt 1 view .LVU2557
 8056 0dba FFF78FBB 		b	.L833
 8057              	.LVL629:
 8058              	.L1096:
 8059              	.LBB1262:
 8060              	.LBB1203:
2855:src/keys.c    **** 		State2.arrow = 0;
 8061              		.loc 1 2855 3 view .LVU2558
 8062              	.LBB952:
 8063              	.LBI952:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8064              		.loc 1 109 13 view .LVU2559
 8065              	.LBB953:
 110:src/keys.c    **** }
 8066              		.loc 1 110 2 view .LVU2560
 110:src/keys.c    **** }
 8067              		.loc 1 110 16 is_stmt 0 view .LVU2561
 8068 0dbe 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 8069 0dc2 0328     		cmp	r0, #3
 8070              	.LBE953:
 8071              	.LBE952:
2856:src/keys.c    **** 		return STATE_UNFINISHED;
 8072              		.loc 1 2856 16 view .LVU2562
 8073 0dc4 61F38202 		bfi	r2, r1, #2, #1
 8074              	.LBB956:
 8075              	.LBB954:
 110:src/keys.c    **** }
 8076              		.loc 1 110 16 view .LVU2563
 8077 0dc8 18BF     		it	ne
 8078 0dca 0323     		movne	r3, #3
 8079              	.LBE954:
 8080              	.LBE956:
2856:src/keys.c    **** 		return STATE_UNFINISHED;
 8081              		.loc 1 2856 16 view .LVU2564
 8082 0dcc 88F81520 		strb	r2, [r8, #21]
 8083              	.LBB957:
 8084              	.LBB955:
 110:src/keys.c    **** }
 8085              		.loc 1 110 16 view .LVU2565
 8086 0dd0 88F81030 		strb	r3, [r8, #16]
 8087              	.LVL630:
 110:src/keys.c    **** }
 8088              		.loc 1 110 16 view .LVU2566
 8089              	.LBE955:
 8090              	.LBE957:
2856:src/keys.c    **** 		return STATE_UNFINISHED;
 8091              		.loc 1 2856 3 is_stmt 1 view .LVU2567
2857:src/keys.c    **** 	}
ARM GAS  /tmp/cciIzcMf.s 			page 240


 8092              		.loc 1 2857 3 view .LVU2568
2857:src/keys.c    **** 	}
 8093              		.loc 1 2857 10 is_stmt 0 view .LVU2569
 8094 0dd4 4FF0330B 		mov	fp, #51
 8095 0dd8 FFF766B9 		b	.L565
 8096              	.LVL631:
 8097              	.L1129:
 8098              	.LBB958:
 8099              	.LBB905:
2473:src/keys.c    **** 			n = max;
 8100              		.loc 1 2473 3 is_stmt 1 view .LVU2570
2473:src/keys.c    **** 			n = max;
 8101              		.loc 1 2473 6 is_stmt 0 view .LVU2571
 8102 0ddc 012B     		cmp	r3, #1
 8103 0dde A3F10402 		sub	r2, r3, #4
 8104              	.LVL632:
2473:src/keys.c    **** 			n = max;
 8105              		.loc 1 2473 6 view .LVU2572
 8106 0de2 32D0     		beq	.L1057
 8107 0de4 D2B2     		uxtb	r2, r2
 8108              	.LVL633:
2473:src/keys.c    **** 			n = max;
 8109              		.loc 1 2473 6 view .LVU2573
 8110 0de6 FCE6     		b	.L641
 8111              	.LVL634:
 8112              	.L1120:
2473:src/keys.c    **** 			n = max;
 8113              		.loc 1 2473 6 view .LVU2574
 8114              	.LBE905:
 8115              	.LBE958:
 8116              	.LBB959:
 8117              	.LBB880:
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8118              		.loc 1 1331 44 is_stmt 1 view .LVU2575
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8119              		.loc 1 1331 52 is_stmt 0 view .LVU2576
 8120 0de8 0120     		movs	r0, #1
 8121 0dea FFF7FEFF 		bl	gtodot_digit
 8122              	.LVL635:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8123              		.loc 1 1377 2 is_stmt 1 view .LVU2577
 8124              	.LBE880:
 8125              	.LBE959:
2832:src/keys.c    **** 
 8126              		.loc 1 2832 10 is_stmt 0 view .LVU2578
 8127 0dee 4FF0330B 		mov	fp, #51
 8128 0df2 FFF759B9 		b	.L565
 8129              	.LVL636:
 8130              	.L1134:
2872:src/keys.c    **** 		if (is_bad_cmdline())
 8131              		.loc 1 2872 2 is_stmt 1 view .LVU2579
2872:src/keys.c    **** 		if (is_bad_cmdline())
 8132              		.loc 1 2872 5 is_stmt 0 view .LVU2580
 8133 0df6 BBF1000F 		cmp	fp, #0
 8134 0dfa 7FF47EAF 		bne	.L656
 8135 0dfe FFF77DBA 		b	.L670
 8136              	.LVL637:
ARM GAS  /tmp/cciIzcMf.s 			page 241


 8137              	.L627:
 8138              	.LBB960:
 8139              	.LBB866:
1919:src/keys.c    **** 	}
 8140              		.loc 1 1919 3 is_stmt 1 view .LVU2581
1919:src/keys.c    **** 	}
 8141              		.loc 1 1919 10 is_stmt 0 view .LVU2582
 8142 0e02 0AF1200A 		add	r10, r10, #32
 8143 0e06 40EA0A20 		orr	r0, r0, r10, lsl #8
 8144 0e0a 8346     		mov	fp, r0
 8145              	.LVL638:
1919:src/keys.c    **** 	}
 8146              		.loc 1 1919 10 view .LVU2583
 8147 0e0c FFF75FBB 		b	.L620
 8148              	.LVL639:
 8149              	.L1121:
1919:src/keys.c    **** 	}
 8150              		.loc 1 1919 10 view .LVU2584
 8151              	.LBE866:
 8152              	.LBE960:
 8153              	.LBB961:
 8154              	.LBB881:
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8155              		.loc 1 1332 44 is_stmt 1 view .LVU2585
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8156              		.loc 1 1332 52 is_stmt 0 view .LVU2586
 8157 0e10 0220     		movs	r0, #2
 8158 0e12 FFF7FEFF 		bl	gtodot_digit
 8159              	.LVL640:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8160              		.loc 1 1377 2 is_stmt 1 view .LVU2587
 8161              	.LBE881:
 8162              	.LBE961:
2832:src/keys.c    **** 
 8163              		.loc 1 2832 10 is_stmt 0 view .LVU2588
 8164 0e16 4FF0330B 		mov	fp, #51
 8165 0e1a FFF745B9 		b	.L565
 8166              	.LVL641:
 8167              	.L1133:
 8168              	.LBB962:
 8169              	.LBB937:
1287:src/keys.c    **** 
 8170              		.loc 1 1287 3 is_stmt 1 view .LVU2589
1287:src/keys.c    **** 
 8171              		.loc 1 1287 25 is_stmt 0 view .LVU2590
 8172 0e1e B34A     		ldr	r2, .L1163+4
 8173 0e20 0AEB4303 		add	r3, r10, r3, lsl #1
 8174 0e24 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8175              	.LVL642:
1287:src/keys.c    **** 
 8176              		.loc 1 1287 25 view .LVU2591
 8177 0e28 FFF7B2BB 		b	.L594
 8178              	.LVL643:
 8179              	.L1130:
1287:src/keys.c    **** 
 8180              		.loc 1 1287 25 view .LVU2592
 8181              	.LBE937:
ARM GAS  /tmp/cciIzcMf.s 			page 242


 8182              	.LBE962:
 8183              	.LBB963:
 8184              	.LBB906:
2477:src/keys.c    **** 			n = -2;
 8185              		.loc 1 2477 3 is_stmt 1 view .LVU2593
2477:src/keys.c    **** 			n = -2;
 8186              		.loc 1 2477 6 is_stmt 0 view .LVU2594
 8187 0e2c 023B     		subs	r3, r3, #2
 8188              	.LVL644:
2477:src/keys.c    **** 			n = -2;
 8189              		.loc 1 2477 6 view .LVU2595
 8190 0e2e 8342     		cmp	r3, r0
 8191 0e30 40F30182 		ble	.L1056
 8192 0e34 FE22     		movs	r2, #254
 8193 0e36 D4E6     		b	.L641
 8194              	.LVL645:
 8195              	.L867:
2477:src/keys.c    **** 			n = -2;
 8196              		.loc 1 2477 6 view .LVU2596
 8197              	.LBE906:
 8198              	.LBE963:
 8199              	.LBB964:
 8200              	.LBB656:
 8201              	.LBB649:
 322:src/keys.c    **** #ifndef WINGUI
 8202              		.loc 1 322 8 view .LVU2597
 8203 0e38 AD4B     		ldr	r3, .L1163+8
 328:src/keys.c    ****   }
 8204              		.loc 1 328 9 view .LVU2598
 8205 0e3a 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 8206              		.loc 1 324 27 view .LVU2599
 8207 0e3c 4FF0010C 		mov	ip, #1
 8208 0e40 FFF72CBA 		b	.L661
 8209              	.LVL646:
 8210              	.L1132:
 324:src/keys.c    **** #else
 8211              		.loc 1 324 27 view .LVU2600
 8212              	.LBE649:
 8213              	.LBE656:
 8214              	.LBE964:
 8215              	.LBB965:
 8216              	.LBB907:
 8217              	.LBB902:
2489:src/keys.c    **** 		else if (nn != NO_REG)
 8218              		.loc 1 2489 4 is_stmt 1 view .LVU2601
2489:src/keys.c    **** 		else if (nn != NO_REG)
 8219              		.loc 1 2489 22 is_stmt 0 view .LVU2602
 8220 0e44 8342     		cmp	r3, r0
 8221 0e46 3FF4CBAE 		beq	.L863
 8222              	.LVL647:
 8223              	.L1057:
2489:src/keys.c    **** 		else if (nn != NO_REG)
 8224              		.loc 1 2489 22 view .LVU2603
 8225 0e4a C2B2     		uxtb	r2, r0
 8226 0e4c C9E6     		b	.L641
 8227              	.LVL648:
ARM GAS  /tmp/cciIzcMf.s 			page 243


 8228              	.L1122:
2489:src/keys.c    **** 		else if (nn != NO_REG)
 8229              		.loc 1 2489 22 view .LVU2604
 8230              	.LBE902:
 8231              	.LBE907:
 8232              	.LBE965:
 8233              	.LBB966:
 8234              	.LBB882:
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8235              		.loc 1 1333 44 is_stmt 1 view .LVU2605
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8236              		.loc 1 1333 52 is_stmt 0 view .LVU2606
 8237 0e4e 0320     		movs	r0, #3
 8238 0e50 FFF7FEFF 		bl	gtodot_digit
 8239              	.LVL649:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8240              		.loc 1 1377 2 is_stmt 1 view .LVU2607
 8241              	.LBE882:
 8242              	.LBE966:
2832:src/keys.c    **** 
 8243              		.loc 1 2832 10 is_stmt 0 view .LVU2608
 8244 0e54 4FF0330B 		mov	fp, #51
 8245 0e58 FFF726B9 		b	.L565
 8246              	.LVL650:
 8247              	.L1102:
2887:src/keys.c    **** 
 8248              		.loc 1 2887 3 is_stmt 1 view .LVU2609
 8249              	.LBB967:
 8250              	.LBI967:
2547:src/keys.c    **** 	unsigned int pc = State2.digval;
 8251              		.loc 1 2547 12 view .LVU2610
 8252              	.LBB968:
2548:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8253              		.loc 1 2548 2 view .LVU2611
2550:src/keys.c    **** 	const int opcode = getprog(pc);
 8254              		.loc 1 2550 27 is_stmt 0 view .LVU2612
 8255 0e5c 262C     		cmp	r4, #38
2548:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8256              		.loc 1 2548 15 view .LVU2613
 8257 0e5e B8F808A0 		ldrh	r10, [r8, #8]
 8258              	.LVL651:
2549:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8259              		.loc 1 2549 2 is_stmt 1 view .LVU2614
2550:src/keys.c    **** 	const int opcode = getprog(pc);
 8260              		.loc 1 2550 27 is_stmt 0 view .LVU2615
 8261 0e62 00F03F83 		beq	.L872
 8262              	.LVL652:
 8263              	.LBB969:
 8264              	.LBI969:
 198:src/keys.c    **** {
 8265              		.loc 1 198 14 is_stmt 1 view .LVU2616
 8266              	.LBB970:
 200:src/keys.c    ****     // K00 - K05
 8267              		.loc 1 200 3 view .LVU2617
 221:src/keys.c    **** }
 8268              		.loc 1 221 3 view .LVU2618
 8269              	.LBB971:
ARM GAS  /tmp/cciIzcMf.s 			page 244


 8270              	.LBI971:
 119:src/keys.c    **** {
 8271              		.loc 1 119 12 view .LVU2619
 8272              	.LBB972:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8273              		.loc 1 121 2 view .LVU2620
 131:src/keys.c    **** }
 8274              		.loc 1 131 2 view .LVU2621
 131:src/keys.c    **** }
 8275              		.loc 1 131 23 is_stmt 0 view .LVU2622
 8276 0e66 A34B     		ldr	r3, .L1163+12
 8277              	.LBE972:
 8278              	.LBE971:
 221:src/keys.c    **** }
 8279              		.loc 1 221 28 view .LVU2623
 8280 0e68 A34A     		ldr	r2, .L1163+16
 8281              	.LBB974:
 8282              	.LBB973:
 131:src/keys.c    **** }
 8283              		.loc 1 131 23 view .LVU2624
 8284 0e6a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8285              	.LBE973:
 8286              	.LBE974:
 221:src/keys.c    **** }
 8287              		.loc 1 221 10 view .LVU2625
 8288 0e6c 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8289              	.LBE970:
 8290              	.LBE969:
2550:src/keys.c    **** 	const int opcode = getprog(pc);
 8291              		.loc 1 2550 27 view .LVU2626
 8292 0e70 2BF0800B 		bic	fp, fp, #128
 8293              	.L685:
 8294              	.LVL653:
2551:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8295              		.loc 1 2551 2 is_stmt 1 view .LVU2627
2551:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8296              		.loc 1 2551 21 is_stmt 0 view .LVU2628
 8297 0e74 5046     		mov	r0, r10
 8298 0e76 FFF7FEFF 		bl	getprog
 8299              	.LVL654:
2552:src/keys.c    **** 	const int direct = State2.runmode;
 8300              		.loc 1 2552 2 is_stmt 1 view .LVU2629
2552:src/keys.c    **** 	const int direct = State2.runmode;
 8301              		.loc 1 2552 20 is_stmt 0 view .LVU2630
 8302 0e7a 00F47040 		and	r0, r0, #61440
 8303              	.LVL655:
2552:src/keys.c    **** 	const int direct = State2.runmode;
 8304              		.loc 1 2552 63 view .LVU2631
 8305 0e7e B0F5704F 		cmp	r0, #61440
 8306 0e82 00F09B84 		beq	.L1136
 8307 0e86 0022     		movs	r2, #0
 8308              	.L686:
 8309              	.LVL656:
2553:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8310              		.loc 1 2553 2 is_stmt 1 view .LVU2632
2553:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8311              		.loc 1 2553 27 is_stmt 0 view .LVU2633
ARM GAS  /tmp/cciIzcMf.s 			page 245


 8312 0e88 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8313 0e8c 0192     		str	r2, [sp, #4]
 8314              	.LVL657:
2553:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8315              		.loc 1 2553 27 view .LVU2634
 8316 0e8e C3F38013 		ubfx	r3, r3, #6, #1
 8317 0e92 0093     		str	r3, [sp]
 8318              	.LVL658:
2554:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8319              		.loc 1 2554 2 is_stmt 1 view .LVU2635
 8320              	.LBB975:
 8321              	.LBI975:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8322              		.loc 1 102 13 view .LVU2636
 8323              	.LBE975:
 8324              	.LBE968:
 8325              	.LBE967:
 8326              	.LBE1203:
 8327              	.LBE1262:
 103:src/keys.c    **** }
 8328              		.loc 1 103 2 view .LVU2637
 8329              	.LBB1263:
 8330              	.LBB1204:
 8331              	.LBB1002:
 8332              	.LBB994:
 8333              	.LBB982:
 8334              	.LBB976:
 8335              	.LBI976:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8336              		.loc 1 92 20 view .LVU2638
 8337              	.LBB977:
  93:src/keys.c    **** 	State2.shifts = shift;
 8338              		.loc 1 93 2 view .LVU2639
 8339              	.LBB978:
 8340              	.LBI978:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8341              		.loc 1 84 13 view .LVU2640
 8342              	.LBB979:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8343              		.loc 1 85 2 view .LVU2641
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8344              		.loc 1 85 18 is_stmt 0 view .LVU2642
 8345 0e94 FFF7FEFF 		bl	shift_down
 8346              	.LVL659:
  86:src/keys.c    **** }
 8347              		.loc 1 86 2 is_stmt 1 view .LVU2643
  86:src/keys.c    **** }
 8348              		.loc 1 86 52 is_stmt 0 view .LVU2644
 8349 0e98 019A     		ldr	r2, [sp, #4]
 8350 0e9a 0346     		mov	r3, r0
 8351 0e9c 08B9     		cbnz	r0, .L687
 8352 0e9e 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8353              	.L687:
 8354              	.LVL660:
  86:src/keys.c    **** }
 8355              		.loc 1 86 52 view .LVU2645
 8356              	.LBE979:
ARM GAS  /tmp/cciIzcMf.s 			page 246


 8357              	.LBE978:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8358              		.loc 1 94 2 is_stmt 1 view .LVU2646
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8359              		.loc 1 94 16 is_stmt 0 view .LVU2647
 8360 0ea2 0021     		movs	r1, #0
 8361              	.LBE977:
 8362              	.LBE976:
 8363              	.LBE982:
2557:src/keys.c    **** 		// Digits take you to that segment
 8364              		.loc 1 2557 5 view .LVU2648
 8365 0ea4 BBF1020F 		cmp	fp, #2
 8366              	.LBB983:
 8367              	.LBB981:
 8368              	.LBB980:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8369              		.loc 1 94 16 view .LVU2649
 8370 0ea8 88F81010 		strb	r1, [r8, #16]
  95:src/keys.c    **** 	return r;
 8371              		.loc 1 95 2 is_stmt 1 view .LVU2650
  95:src/keys.c    **** 	return r;
 8372              		.loc 1 95 19 is_stmt 0 view .LVU2651
 8373 0eac 88F80D10 		strb	r1, [r8, #13]
  96:src/keys.c    **** }
 8374              		.loc 1 96 2 is_stmt 1 view .LVU2652
 8375              	.LVL661:
  96:src/keys.c    **** }
 8376              		.loc 1 96 2 is_stmt 0 view .LVU2653
 8377              	.LBE980:
 8378              	.LBE981:
 8379              	.LBE983:
2555:src/keys.c    **** 
 8380              		.loc 1 2555 2 is_stmt 1 view .LVU2654
2557:src/keys.c    **** 		// Digits take you to that segment
 8381              		.loc 1 2557 2 view .LVU2655
2557:src/keys.c    **** 		// Digits take you to that segment
 8382              		.loc 1 2557 5 is_stmt 0 view .LVU2656
 8383 0eb0 40F29E85 		bls	.L1137
2566:src/keys.c    **** 
 8384              		.loc 1 2566 2 is_stmt 1 view .LVU2657
2566:src/keys.c    **** 
 8385              		.loc 1 2566 12 is_stmt 0 view .LVU2658
 8386 0eb4 44EA0323 		orr	r3, r4, r3, lsl #8
 8387              	.LVL662:
2566:src/keys.c    **** 
 8388              		.loc 1 2566 2 view .LVU2659
 8389 0eb8 272B     		cmp	r3, #39
 8390 0eba 00F3B580 		bgt	.L690
 8391 0ebe 042B     		cmp	r3, #4
 8392 0ec0 7FF77DAC 		ble	.L1067
 8393 0ec4 053B     		subs	r3, r3, #5
 8394 0ec6 222B     		cmp	r3, #34
 8395 0ec8 3FF679AC 		bhi	.L1067
 8396 0ecc 01A1     		adr	r1, .L698
 8397 0ece 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8398 0ed2 00BF     		.p2align 2
 8399              	.L698:
ARM GAS  /tmp/cciIzcMf.s 			page 247


 8400 0ed4 B50F0000 		.word	.L703+1
 8401 0ed8 C10F0000 		.word	.L702+1
 8402 0edc C10F0000 		.word	.L702+1
 8403 0ee0 BF070000 		.word	.L1067+1
 8404 0ee4 BF070000 		.word	.L1067+1
 8405 0ee8 BF070000 		.word	.L1067+1
 8406 0eec BF070000 		.word	.L1067+1
 8407 0ef0 610F0000 		.word	.L875+1
 8408 0ef4 BF070000 		.word	.L1067+1
 8409 0ef8 BF070000 		.word	.L1067+1
 8410 0efc BF070000 		.word	.L1067+1
 8411 0f00 E30F0000 		.word	.L701+1
 8412 0f04 BF070000 		.word	.L1067+1
 8413 0f08 CF0F0000 		.word	.L700+1
 8414 0f0c BF070000 		.word	.L1067+1
 8415 0f10 BF070000 		.word	.L1067+1
 8416 0f14 BF070000 		.word	.L1067+1
 8417 0f18 BF070000 		.word	.L1067+1
 8418 0f1c BF070000 		.word	.L1067+1
 8419 0f20 9F0F0000 		.word	.L699+1
 8420 0f24 BF070000 		.word	.L1067+1
 8421 0f28 BF070000 		.word	.L1067+1
 8422 0f2c BF070000 		.word	.L1067+1
 8423 0f30 BF070000 		.word	.L1067+1
 8424 0f34 BF070000 		.word	.L1067+1
 8425 0f38 BF070000 		.word	.L1067+1
 8426 0f3c BF070000 		.word	.L1067+1
 8427 0f40 BF070000 		.word	.L1067+1
 8428 0f44 BF070000 		.word	.L1067+1
 8429 0f48 BF070000 		.word	.L1067+1
 8430 0f4c BF070000 		.word	.L1067+1
 8431 0f50 BF070000 		.word	.L1067+1
 8432 0f54 BF070000 		.word	.L1067+1
 8433 0f58 BF070000 		.word	.L1067+1
 8434 0f5c FD0F0000 		.word	.L697+1
 8435              		.p2align 1
 8436              	.L875:
2555:src/keys.c    **** 
 8437              		.loc 1 2555 6 view .LVU2660
 8438 0f60 4FF0330B 		mov	fp, #51
 8439              	.LVL663:
 8440              	.L695:
2588:src/keys.c    **** 		break;
 8441              		.loc 1 2588 3 is_stmt 1 view .LVU2661
 8442 0f64 5046     		mov	r0, r10
 8443 0f66 FFF7FEFF 		bl	set_pc
 8444              	.LVL664:
2589:src/keys.c    **** 
 8445              		.loc 1 2589 3 view .LVU2662
 8446              	.L707:
2642:src/keys.c    **** 	State2.labellist = 0;
 8447              		.loc 1 2642 2 view .LVU2663
2643:src/keys.c    **** 	return check_confirm(op);
 8448              		.loc 1 2643 19 is_stmt 0 view .LVU2664
 8449 0f6a 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2642:src/keys.c    **** 	State2.labellist = 0;
 8450              		.loc 1 2642 16 view .LVU2665
ARM GAS  /tmp/cciIzcMf.s 			page 248


 8451 0f6e 0022     		movs	r2, #0
 8452              	.LBB984:
 8453              	.LBB985:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8454              		.loc 1 620 5 view .LVU2666
 8455 0f70 CBF30723 		ubfx	r3, fp, #8, #8
 8456              	.LBE985:
 8457              	.LBE984:
2643:src/keys.c    **** 	return check_confirm(op);
 8458              		.loc 1 2643 19 view .LVU2667
 8459 0f74 62F38201 		bfi	r1, r2, #2, #1
 8460              	.LBB990:
 8461              	.LBB986:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8462              		.loc 1 620 5 view .LVU2668
 8463 0f78 012B     		cmp	r3, #1
 8464              	.LBE986:
 8465              	.LBE990:
2643:src/keys.c    **** 	return check_confirm(op);
 8466              		.loc 1 2643 19 view .LVU2669
 8467 0f7a 88F81710 		strb	r1, [r8, #23]
2642:src/keys.c    **** 	State2.labellist = 0;
 8468              		.loc 1 2642 16 view .LVU2670
 8469 0f7e A8F80820 		strh	r2, [r8, #8]	@ movhi
2643:src/keys.c    **** 	return check_confirm(op);
 8470              		.loc 1 2643 2 is_stmt 1 view .LVU2671
2644:src/keys.c    **** }
 8471              		.loc 1 2644 2 view .LVU2672
 8472              	.LVL665:
 8473              	.LBB991:
 8474              	.LBI984:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8475              		.loc 1 619 12 view .LVU2673
 8476              	.LBB987:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8477              		.loc 1 620 2 view .LVU2674
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8478              		.loc 1 620 5 is_stmt 0 view .LVU2675
 8479 0f82 7FF405AB 		bne	.L594
 8480              	.LVL666:
 8481              	.L852:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8482              		.loc 1 620 5 view .LVU2676
 8483              	.LBE987:
 8484              	.LBE991:
 8485              	.LBE994:
 8486              	.LBE1002:
 8487              	.LBB1003:
 8488              	.LBB1004:
 8489              	.LBB1005:
 8490              	.LBB1006:
 8491 0f86 5846     		mov	r0, fp
 8492 0f88 FFF7FEFF 		bl	check_confirm.part.0
 8493              	.LVL667:
 8494 0f8c 8346     		mov	fp, r0
 8495              	.LVL668:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/cciIzcMf.s 			page 249


 8496              		.loc 1 620 5 view .LVU2677
 8497 0f8e FFF7FFBA 		b	.L594
 8498              	.LVL669:
 8499              	.L692:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8500              		.loc 1 620 5 view .LVU2678
 8501              	.LBE1006:
 8502              	.LBE1005:
 8503              	.LBE1004:
 8504              	.LBE1003:
 8505              	.LBB1043:
 8506              	.LBB995:
2573:src/keys.c    **** 	case K_DOWN:				// Find next label
 8507              		.loc 1 2573 3 is_stmt 1 view .LVU2679
2573:src/keys.c    **** 	case K_DOWN:				// Find next label
 8508              		.loc 1 2573 8 is_stmt 0 view .LVU2680
 8509 0f92 5046     		mov	r0, r10
 8510 0f94 0122     		movs	r2, #1
 8511 0f96 0021     		movs	r1, #0
 8512 0f98 FFF7FEFF 		bl	advance_to_next_label
 8513              	.LVL670:
 8514 0f9c 8246     		mov	r10, r0
 8515              	.LVL671:
 8516              	.L699:
2576:src/keys.c    **** 		return STATE_UNFINISHED;
 8517              		.loc 1 2576 3 is_stmt 1 view .LVU2681
2576:src/keys.c    **** 		return STATE_UNFINISHED;
 8518              		.loc 1 2576 19 is_stmt 0 view .LVU2682
 8519 0f9e 5046     		mov	r0, r10
 8520 0fa0 0022     		movs	r2, #0
 8521 0fa2 0121     		movs	r1, #1
 8522 0fa4 FFF7FEFF 		bl	advance_to_next_label
 8523              	.LVL672:
2577:src/keys.c    **** 
 8524              		.loc 1 2577 10 view .LVU2683
 8525 0fa8 4FF0330B 		mov	fp, #51
 8526              	.LVL673:
2576:src/keys.c    **** 		return STATE_UNFINISHED;
 8527              		.loc 1 2576 17 view .LVU2684
 8528 0fac A8F80800 		strh	r0, [r8, #8]	@ movhi
2577:src/keys.c    **** 
 8529              		.loc 1 2577 3 is_stmt 1 view .LVU2685
2577:src/keys.c    **** 
 8530              		.loc 1 2577 10 is_stmt 0 view .LVU2686
 8531 0fb0 FFF77AB8 		b	.L565
 8532              	.LVL674:
 8533              	.L703:
 8534              	.L708:
2606:src/keys.c    **** 		goto xeq_or_gto;
 8535              		.loc 1 2606 3 is_stmt 1 view .LVU2687
2606:src/keys.c    **** 		goto xeq_or_gto;
 8536              		.loc 1 2606 6 is_stmt 0 view .LVU2688
 8537 0fb4 02F5007B 		add	fp, r2, #512
 8538              	.LVL675:
2607:src/keys.c    **** 
 8539              		.loc 1 2607 3 is_stmt 1 view .LVU2689
2612:src/keys.c    **** 			break;
ARM GAS  /tmp/cciIzcMf.s 			page 250


 8540              		.loc 1 2612 3 view .LVU2690
2612:src/keys.c    **** 			break;
 8541              		.loc 1 2612 6 is_stmt 0 view .LVU2691
 8542 0fb8 002A     		cmp	r2, #0
 8543 0fba D6D1     		bne	.L707
 8544 0fbc FFF7FFBB 		b	.L1067
 8545              	.LVL676:
 8546              	.L702:
2598:src/keys.c    **** 	  //#endif
 8547              		.loc 1 2598 3 is_stmt 1 view .LVU2692
2598:src/keys.c    **** 	  //#endif
 8548              		.loc 1 2598 38 is_stmt 0 view .LVU2693
 8549 0fc0 062C     		cmp	r4, #6
 8550 0fc2 40F2B11B 		movw	fp, #433
 8551              	.LVL677:
2598:src/keys.c    **** 	  //#endif
 8552              		.loc 1 2598 38 view .LVU2694
 8553 0fc6 08BF     		it	eq
 8554 0fc8 4FF4D97B 		moveq	fp, #434
 8555 0fcc CAE7     		b	.L695
 8556              	.LVL678:
 8557              	.L700:
2580:src/keys.c    **** 		return STATE_UNFINISHED;
 8558              		.loc 1 2580 3 is_stmt 1 view .LVU2695
2580:src/keys.c    **** 		return STATE_UNFINISHED;
 8559              		.loc 1 2580 19 is_stmt 0 view .LVU2696
 8560 0fce 5046     		mov	r0, r10
 8561 0fd0 0021     		movs	r1, #0
 8562 0fd2 FFF7FEFF 		bl	advance_to_previous_label
 8563              	.LVL679:
2581:src/keys.c    **** 
 8564              		.loc 1 2581 10 view .LVU2697
 8565 0fd6 4FF0330B 		mov	fp, #51
 8566              	.LVL680:
2580:src/keys.c    **** 		return STATE_UNFINISHED;
 8567              		.loc 1 2580 17 view .LVU2698
 8568 0fda A8F80800 		strh	r0, [r8, #8]	@ movhi
2581:src/keys.c    **** 
 8569              		.loc 1 2581 3 is_stmt 1 view .LVU2699
2581:src/keys.c    **** 
 8570              		.loc 1 2581 10 is_stmt 0 view .LVU2700
 8571 0fde FFF763B8 		b	.L565
 8572              	.LVL681:
 8573              	.L701:
2642:src/keys.c    **** 	State2.labellist = 0;
 8574              		.loc 1 2642 2 is_stmt 1 view .LVU2701
2643:src/keys.c    **** 	return check_confirm(op);
 8575              		.loc 1 2643 19 is_stmt 0 view .LVU2702
 8576 0fe2 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2642:src/keys.c    **** 	State2.labellist = 0;
 8577              		.loc 1 2642 16 view .LVU2703
 8578 0fe6 0023     		movs	r3, #0
2643:src/keys.c    **** 	return check_confirm(op);
 8579              		.loc 1 2643 19 view .LVU2704
 8580 0fe8 63F38202 		bfi	r2, r3, #2, #1
 8581 0fec 88F81720 		strb	r2, [r8, #23]
2642:src/keys.c    **** 	State2.labellist = 0;
ARM GAS  /tmp/cciIzcMf.s 			page 251


 8582              		.loc 1 2642 16 view .LVU2705
 8583 0ff0 A8F80830 		strh	r3, [r8, #8]	@ movhi
2643:src/keys.c    **** 	return check_confirm(op);
 8584              		.loc 1 2643 2 is_stmt 1 view .LVU2706
2644:src/keys.c    **** }
 8585              		.loc 1 2644 2 view .LVU2707
 8586              	.LVL682:
 8587              	.LBB992:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8588              		.loc 1 619 12 view .LVU2708
 8589              	.LBB988:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8590              		.loc 1 620 2 view .LVU2709
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8591              		.loc 1 620 2 is_stmt 0 view .LVU2710
 8592              	.LBE988:
 8593              	.LBE992:
 8594              	.LBE995:
 8595              	.LBE1043:
 8596              	.LBE1204:
 8597              	.LBE1263:
3105:src/keys.c    ****     case STATE_SST:
 8598              		.loc 1 3105 5 is_stmt 1 view .LVU2711
 8599              	.LBB1264:
 8600              	.LBB1205:
 8601              	.LBB1044:
 8602              	.LBB996:
2555:src/keys.c    **** 
 8603              		.loc 1 2555 6 is_stmt 0 view .LVU2712
 8604 0ff4 4FF0330B 		mov	fp, #51
 8605              	.LVL683:
2555:src/keys.c    **** 
 8606              		.loc 1 2555 6 view .LVU2713
 8607 0ff8 FFF756B8 		b	.L565
 8608              	.LVL684:
 8609              	.L697:
2628:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8610              		.loc 1 2628 3 is_stmt 1 view .LVU2714
2628:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8611              		.loc 1 2628 6 is_stmt 0 view .LVU2715
 8612 0ffc 009B     		ldr	r3, [sp]
 8613 0ffe 002B     		cmp	r3, #0
 8614 1000 3FF4DDAB 		beq	.L1067
2628:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8615              		.loc 1 2628 14 view .LVU2716
 8616 1004 002A     		cmp	r2, #0
 8617 1006 3FF4DAAB 		beq	.L1067
2629:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8618              		.loc 1 2629 4 is_stmt 1 view .LVU2717
 8619 100a 5146     		mov	r1, r10
 8620 100c 0120     		movs	r0, #1
 8621 100e FFF7FEFF 		bl	cmdgtocommon
 8622              	.LVL685:
2630:src/keys.c    **** 			break;
 8623              		.loc 1 2630 4 view .LVU2718
2631:src/keys.c    **** 		}
 8624              		.loc 1 2631 4 view .LVU2719
ARM GAS  /tmp/cciIzcMf.s 			page 252


2642:src/keys.c    **** 	State2.labellist = 0;
 8625              		.loc 1 2642 2 view .LVU2720
2643:src/keys.c    **** 	return check_confirm(op);
 8626              		.loc 1 2643 19 is_stmt 0 view .LVU2721
 8627 1012 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2642:src/keys.c    **** 	State2.labellist = 0;
 8628              		.loc 1 2642 16 view .LVU2722
 8629 1016 0023     		movs	r3, #0
2643:src/keys.c    **** 	return check_confirm(op);
 8630              		.loc 1 2643 19 view .LVU2723
 8631 1018 63F38202 		bfi	r2, r3, #2, #1
 8632 101c 88F81720 		strb	r2, [r8, #23]
2642:src/keys.c    **** 	State2.labellist = 0;
 8633              		.loc 1 2642 16 view .LVU2724
 8634 1020 A8F80830 		strh	r3, [r8, #8]	@ movhi
2643:src/keys.c    **** 	return check_confirm(op);
 8635              		.loc 1 2643 2 is_stmt 1 view .LVU2725
2644:src/keys.c    **** }
 8636              		.loc 1 2644 2 view .LVU2726
 8637              	.LVL686:
 8638              	.LBB993:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8639              		.loc 1 619 12 view .LVU2727
 8640              	.LBB989:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8641              		.loc 1 620 2 view .LVU2728
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8642              		.loc 1 620 2 is_stmt 0 view .LVU2729
 8643              	.LBE989:
 8644              	.LBE993:
 8645              	.LBE996:
 8646              	.LBE1044:
 8647              	.LBE1205:
 8648              	.LBE1264:
3105:src/keys.c    ****     case STATE_SST:
 8649              		.loc 1 3105 5 is_stmt 1 view .LVU2730
 8650 1024 FFF7BAB8 		b	.L574
 8651              	.LVL687:
 8652              	.L690:
 8653              	.LBB1265:
 8654              	.LBB1206:
 8655              	.LBB1045:
 8656              	.LBB997:
2566:src/keys.c    **** 
 8657              		.loc 1 2566 2 is_stmt 0 view .LVU2731
 8658 1028 B3F58C7F 		cmp	r3, #280
 8659 102c 47DC     		bgt	.L704
 8660 102e B3F5827F 		cmp	r3, #260
 8661 1032 7FF7C4AB 		ble	.L1067
 8662 1036 6FF48274 		mvn	r4, #260
 8663 103a 2344     		add	r3, r3, r4
 8664 103c 132B     		cmp	r3, #19
 8665 103e 3FF6BEAB 		bhi	.L1067
 8666 1042 01A1     		adr	r1, .L693
 8667 1044 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8668              		.p2align 2
 8669              	.L693:
ARM GAS  /tmp/cciIzcMf.s 			page 253


 8670 1048 9F100000 		.word	.L696+1
 8671 104c BF070000 		.word	.L1067+1
 8672 1050 BF070000 		.word	.L1067+1
 8673 1054 BF070000 		.word	.L1067+1
 8674 1058 BF070000 		.word	.L1067+1
 8675 105c BF070000 		.word	.L1067+1
 8676 1060 BF070000 		.word	.L1067+1
 8677 1064 BF070000 		.word	.L1067+1
 8678 1068 BF070000 		.word	.L1067+1
 8679 106c BF070000 		.word	.L1067+1
 8680 1070 BF070000 		.word	.L1067+1
 8681 1074 99100000 		.word	.L874+1
 8682 1078 BF070000 		.word	.L1067+1
 8683 107c AD100000 		.word	.L694+1
 8684 1080 BF070000 		.word	.L1067+1
 8685 1084 BF070000 		.word	.L1067+1
 8686 1088 BF070000 		.word	.L1067+1
 8687 108c BF070000 		.word	.L1067+1
 8688 1090 BF070000 		.word	.L1067+1
 8689 1094 930F0000 		.word	.L692+1
 8690              		.p2align 1
 8691              	.L874:
 8692 1098 40F2431B 		movw	fp, #323
 8693              	.LVL688:
2566:src/keys.c    **** 
 8694              		.loc 1 2566 2 view .LVU2732
 8695 109c 62E7     		b	.L695
 8696              	.LVL689:
 8697              	.L696:
2610:src/keys.c    **** 	xeq_or_gto:
 8698              		.loc 1 2610 3 is_stmt 1 view .LVU2733
2610:src/keys.c    **** 	xeq_or_gto:
 8699              		.loc 1 2610 6 is_stmt 0 view .LVU2734
 8700 109e 02F5407B 		add	fp, r2, #768
 8701              	.LVL690:
2612:src/keys.c    **** 			break;
 8702              		.loc 1 2612 3 is_stmt 1 view .LVU2735
2612:src/keys.c    **** 			break;
 8703              		.loc 1 2612 6 is_stmt 0 view .LVU2736
 8704 10a2 002A     		cmp	r2, #0
 8705 10a4 7FF461AF 		bne	.L707
 8706 10a8 FFF789BB 		b	.L1067
 8707              	.LVL691:
 8708              	.L694:
2569:src/keys.c    **** 		goto next;
 8709              		.loc 1 2569 3 is_stmt 1 view .LVU2737
2569:src/keys.c    **** 		goto next;
 8710              		.loc 1 2569 8 is_stmt 0 view .LVU2738
 8711 10ac 5046     		mov	r0, r10
 8712 10ae 0121     		movs	r1, #1
 8713 10b0 FFF7FEFF 		bl	advance_to_previous_label
 8714              	.LVL692:
 8715 10b4 0121     		movs	r1, #1
 8716 10b6 FFF7FEFF 		bl	advance_to_previous_label
 8717              	.LVL693:
 8718 10ba 8246     		mov	r10, r0
 8719              	.LVL694:
ARM GAS  /tmp/cciIzcMf.s 			page 254


2570:src/keys.c    **** 
 8720              		.loc 1 2570 3 is_stmt 1 view .LVU2739
 8721 10bc 6FE7     		b	.L699
 8722              	.LVL695:
 8723              	.L704:
2566:src/keys.c    **** 
 8724              		.loc 1 2566 2 is_stmt 0 view .LVU2740
 8725 10be 40F22732 		movw	r2, #807
 8726 10c2 9342     		cmp	r3, r2
 8727 10c4 7FF47BAB 		bne	.L1067
2636:src/keys.c    **** 		goto set_pc_and_exit;
 8728              		.loc 1 2636 3 is_stmt 1 view .LVU2741
2636:src/keys.c    **** 		goto set_pc_and_exit;
 8729              		.loc 1 2636 18 is_stmt 0 view .LVU2742
 8730 10c8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8731 10cc 61F38613 		bfi	r3, r1, #6, #1
 8732 10d0 88F81630 		strb	r3, [r8, #22]
2637:src/keys.c    **** 
 8733              		.loc 1 2637 3 is_stmt 1 view .LVU2743
2555:src/keys.c    **** 
 8734              		.loc 1 2555 6 is_stmt 0 view .LVU2744
 8735 10d4 4FF0330B 		mov	fp, #51
 8736              	.LVL696:
2637:src/keys.c    **** 
 8737              		.loc 1 2637 3 view .LVU2745
 8738 10d8 44E7     		b	.L695
 8739              	.LVL697:
 8740              	.L1123:
2637:src/keys.c    **** 
 8741              		.loc 1 2637 3 view .LVU2746
 8742              	.LBE997:
 8743              	.LBE1045:
 8744              	.LBB1046:
 8745              	.LBB883:
1334:src/keys.c    **** #endif
 8746              		.loc 1 1334 44 is_stmt 1 view .LVU2747
1334:src/keys.c    **** #endif
 8747              		.loc 1 1334 52 is_stmt 0 view .LVU2748
 8748 10da 0420     		movs	r0, #4
 8749 10dc FFF7FEFF 		bl	gtodot_digit
 8750              	.LVL698:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8751              		.loc 1 1377 2 is_stmt 1 view .LVU2749
 8752              	.LBE883:
 8753              	.LBE1046:
2832:src/keys.c    **** 
 8754              		.loc 1 2832 10 is_stmt 0 view .LVU2750
 8755 10e0 4FF0330B 		mov	fp, #51
 8756 10e4 FEF7E0BF 		b	.L565
 8757              	.L1164:
 8758              		.align	2
 8759              	.L1163:
 8760 10e8 00000000 		.word	NonProgrammable
 8761 10ec 00000000 		.word	.LANCHOR14
 8762 10f0 00000000 		.word	.LANCHOR11
 8763 10f4 00000000 		.word	.LANCHOR1
 8764 10f8 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cciIzcMf.s 			page 255


 8765              	.LVL699:
 8766              	.L1103:
2890:src/keys.c    **** 
 8767              		.loc 1 2890 3 is_stmt 1 view .LVU2751
 8768              	.LBB1047:
 8769              	.LBI798:
2678:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8770              		.loc 1 2678 12 view .LVU2752
 8771              	.LBB823:
2679:src/keys.c    **** 	enum shifts shift = reset_shift();
 8772              		.loc 1 2679 2 view .LVU2753
 8773              	.LBB800:
 8774              	.LBI800:
 198:src/keys.c    **** {
 8775              		.loc 1 198 14 view .LVU2754
 8776              	.LBB801:
 200:src/keys.c    ****     // K00 - K05
 8777              		.loc 1 200 3 view .LVU2755
 221:src/keys.c    **** }
 8778              		.loc 1 221 3 view .LVU2756
 8779              	.LBB802:
 8780              	.LBI802:
 119:src/keys.c    **** {
 8781              		.loc 1 119 12 view .LVU2757
 8782              	.LBB803:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8783              		.loc 1 121 2 view .LVU2758
 131:src/keys.c    **** }
 8784              		.loc 1 131 2 view .LVU2759
 131:src/keys.c    **** }
 8785              		.loc 1 131 23 is_stmt 0 view .LVU2760
 8786 10fc BD4B     		ldr	r3, .L1165
 8787              	.LBE803:
 8788              	.LBE802:
 221:src/keys.c    **** }
 8789              		.loc 1 221 28 view .LVU2761
 8790 10fe BE4A     		ldr	r2, .L1165+4
 8791              	.LBB805:
 8792              	.LBB804:
 131:src/keys.c    **** }
 8793              		.loc 1 131 23 view .LVU2762
 8794 1100 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8795              	.LBE804:
 8796              	.LBE805:
 221:src/keys.c    **** }
 8797              		.loc 1 221 10 view .LVU2763
 8798 1102 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 8799              	.LVL700:
 221:src/keys.c    **** }
 8800              		.loc 1 221 10 view .LVU2764
 8801              	.LBE801:
 8802              	.LBE800:
 8803              	.LBB806:
 8804              	.LBB807:
 8805              	.LBB808:
 8806              	.LBB809:
 8807              	.LBB810:
ARM GAS  /tmp/cciIzcMf.s 			page 256


  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8808              		.loc 1 85 18 view .LVU2765
 8809 1106 FFF7FEFF 		bl	shift_down
 8810              	.LVL701:
 8811              	.LBE810:
 8812              	.LBE809:
 8813              	.LBE808:
 8814              	.LBE807:
 8815              	.LBE806:
2679:src/keys.c    **** 	enum shifts shift = reset_shift();
 8816              		.loc 1 2679 15 view .LVU2766
 8817 110a 2AF0800A 		bic	r10, r10, #128
 8818              	.LVL702:
2680:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 8819              		.loc 1 2680 2 is_stmt 1 view .LVU2767
 8820              	.LBB817:
 8821              	.LBI806:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8822              		.loc 1 102 13 view .LVU2768
 8823              	.LBE817:
 8824              	.LBE823:
 8825              	.LBE1047:
 8826              	.LBE1206:
 8827              	.LBE1265:
 103:src/keys.c    **** }
 8828              		.loc 1 103 2 view .LVU2769
 8829              	.LBB1266:
 8830              	.LBB1207:
 8831              	.LBB1048:
 8832              	.LBB824:
 8833              	.LBB818:
 8834              	.LBB815:
 8835              	.LBI807:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8836              		.loc 1 92 20 view .LVU2770
 8837              	.LBB813:
  93:src/keys.c    **** 	State2.shifts = shift;
 8838              		.loc 1 93 2 view .LVU2771
 8839              	.LBB812:
 8840              	.LBI809:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8841              		.loc 1 84 13 view .LVU2772
 8842              	.LBB811:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8843              		.loc 1 85 2 view .LVU2773
  86:src/keys.c    **** }
 8844              		.loc 1 86 2 view .LVU2774
  86:src/keys.c    **** }
 8845              		.loc 1 86 52 is_stmt 0 view .LVU2775
 8846 110e 0346     		mov	r3, r0
 8847 1110 08B9     		cbnz	r0, .L710
 8848 1112 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8849              	.L710:
 8850              	.LVL703:
  86:src/keys.c    **** }
 8851              		.loc 1 86 52 view .LVU2776
 8852              	.LBE811:
ARM GAS  /tmp/cciIzcMf.s 			page 257


 8853              	.LBE812:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8854              		.loc 1 94 2 is_stmt 1 view .LVU2777
 8855              	.LBE813:
 8856              	.LBE815:
 8857              	.LBE818:
2681:src/keys.c    **** 	const int g_max = global_regs();
 8858              		.loc 1 2681 31 is_stmt 0 view .LVU2778
 8859 1116 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 8860              	.LBB819:
 8861              	.LBB816:
 8862              	.LBB814:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8863              		.loc 1 94 16 view .LVU2779
 8864 111a 0022     		movs	r2, #0
 8865 111c 88F81020 		strb	r2, [r8, #16]
  95:src/keys.c    **** 	return r;
 8866              		.loc 1 95 2 is_stmt 1 view .LVU2780
  95:src/keys.c    **** 	return r;
 8867              		.loc 1 95 19 is_stmt 0 view .LVU2781
 8868 1120 88F80D20 		strb	r2, [r8, #13]
  96:src/keys.c    **** }
 8869              		.loc 1 96 2 is_stmt 1 view .LVU2782
 8870              	.LVL704:
  96:src/keys.c    **** }
 8871              		.loc 1 96 2 is_stmt 0 view .LVU2783
 8872              	.LBE814:
 8873              	.LBE816:
 8874              	.LBE819:
2681:src/keys.c    **** 	const int g_max = global_regs();
 8875              		.loc 1 2681 2 is_stmt 1 view .LVU2784
2681:src/keys.c    **** 	const int g_max = global_regs();
 8876              		.loc 1 2681 46 is_stmt 0 view .LVU2785
 8877 1124 CA07     		lsls	r2, r1, #31
 8878 1126 00F13582 		bmi	.L1138
 8879 112a 4FF07009 		mov	r9, #112
 8880              	.LVL705:
 8881              	.L711:
2681:src/keys.c    **** 	const int g_max = global_regs();
 8882              		.loc 1 2681 46 view .LVU2786
 8883 112e 0093     		str	r3, [sp]
 8884              	.LVL706:
2682:src/keys.c    **** 
 8885              		.loc 1 2682 2 is_stmt 1 view .LVU2787
2682:src/keys.c    **** 
 8886              		.loc 1 2682 20 is_stmt 0 view .LVU2788
 8887 1130 FFF7FEFF 		bl	global_regs
 8888              	.LVL707:
2684:src/keys.c    **** 		if (local_regs())
 8889              		.loc 1 2684 2 is_stmt 1 view .LVU2789
2684:src/keys.c    **** 		if (local_regs())
 8890              		.loc 1 2684 5 is_stmt 0 view .LVU2790
 8891 1134 BAF1700F 		cmp	r10, #112
 8892 1138 009B     		ldr	r3, [sp]
 8893 113a 00F02184 		beq	.L1139
2690:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8894              		.loc 1 2690 7 is_stmt 1 view .LVU2791
ARM GAS  /tmp/cciIzcMf.s 			page 258


2690:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8895              		.loc 1 2690 10 is_stmt 0 view .LVU2792
 8896 113e BAF1090F 		cmp	r10, #9
 8897 1142 40F21E83 		bls	.L1140
2697:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8898              		.loc 1 2697 7 is_stmt 1 view .LVU2793
2697:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8899              		.loc 1 2697 29 is_stmt 0 view .LVU2794
 8900 1146 5A1E     		subs	r2, r3, #1
2697:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8901              		.loc 1 2697 10 view .LVU2795
 8902 1148 D2B2     		uxtb	r2, r2
 8903 114a 012A     		cmp	r2, #1
 8904 114c 40F22882 		bls	.L1141
 8905              	.L719:
2701:src/keys.c    **** 		State2.digval = n;
 8906              		.loc 1 2701 7 is_stmt 1 view .LVU2796
2701:src/keys.c    **** 		State2.digval = n;
 8907              		.loc 1 2701 10 is_stmt 0 view .LVU2797
 8908 1150 BAF17F0F 		cmp	r10, #127
 8909 1154 40F02E83 		bne	.L1142
2706:src/keys.c    **** 	case K_DOWN:
 8910              		.loc 1 2706 2 is_stmt 1 view .LVU2798
 8911 1158 073C     		subs	r4, r4, #7
 8912 115a 112C     		cmp	r4, #17
 8913 115c 3FF62FAB 		bhi	.L1067
 8914 1160 01A2     		adr	r2, .L842
 8915 1162 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8916 1166 00BF     		.p2align 2
 8917              	.L842:
 8918 1168 D7110000 		.word	.L732+1
 8919 116c BF070000 		.word	.L1067+1
 8920 1170 BF070000 		.word	.L1067+1
 8921 1174 BF070000 		.word	.L1067+1
 8922 1178 BF070000 		.word	.L1067+1
 8923 117c D1110000 		.word	.L731+1
 8924 1180 BF070000 		.word	.L1067+1
 8925 1184 BF070000 		.word	.L1067+1
 8926 1188 BF070000 		.word	.L1067+1
 8927 118c B1110000 		.word	.L729+1
 8928 1190 BF070000 		.word	.L1067+1
 8929 1194 03120000 		.word	.L725+1
 8930 1198 BF070000 		.word	.L1067+1
 8931 119c BF070000 		.word	.L1067+1
 8932 11a0 BF070000 		.word	.L1067+1
 8933 11a4 BF070000 		.word	.L1067+1
 8934 11a8 BF070000 		.word	.L1067+1
 8935 11ac 91070000 		.word	.L722+1
 8936              		.p2align 1
 8937              	.L729:
2735:src/keys.c    **** 			return STATE_UNFINISHED;
 8938              		.loc 1 2735 3 view .LVU2799
2735:src/keys.c    **** 			return STATE_UNFINISHED;
 8939              		.loc 1 2735 7 is_stmt 0 view .LVU2800
 8940 11b0 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2735:src/keys.c    **** 			return STATE_UNFINISHED;
 8941              		.loc 1 2735 6 view .LVU2801
ARM GAS  /tmp/cciIzcMf.s 			page 259


 8942 11b4 13F02002 		ands	r2, r3, #32
 8943 11b8 7FF401AB 		bne	.L1067
2737:src/keys.c    **** 
 8944              		.loc 1 2737 3 is_stmt 1 view .LVU2802
2759:src/keys.c    **** 	State2.digval = 0;
 8945              		.loc 1 2759 2 view .LVU2803
2759:src/keys.c    **** 	State2.digval = 0;
 8946              		.loc 1 2759 22 is_stmt 0 view .LVU2804
 8947 11bc 62F3C303 		bfi	r3, r2, #3, #1
 8948 11c0 88F81730 		strb	r3, [r8, #23]
2760:src/keys.c    **** 	State2.digval2 = 0;
 8949              		.loc 1 2760 2 is_stmt 1 view .LVU2805
2760:src/keys.c    **** 	State2.digval2 = 0;
 8950              		.loc 1 2760 16 is_stmt 0 view .LVU2806
 8951 11c4 A8F80820 		strh	r2, [r8, #8]	@ movhi
2761:src/keys.c    **** reset_window:
 8952              		.loc 1 2761 2 is_stmt 1 view .LVU2807
2761:src/keys.c    **** reset_window:
 8953              		.loc 1 2761 17 is_stmt 0 view .LVU2808
 8954 11c8 88F80A20 		strb	r2, [r8, #10]
 8955 11cc FFF7F1BA 		b	.L715
 8956              	.L731:
2740:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8957              		.loc 1 2740 3 is_stmt 1 view .LVU2809
2740:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8958              		.loc 1 2740 6 is_stmt 0 view .LVU2810
 8959 11d0 012B     		cmp	r3, #1
 8960 11d2 00F08985 		beq	.L1143
 8961              	.L732:
2745:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8962              		.loc 1 2745 3 is_stmt 1 view .LVU2811
2745:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8963              		.loc 1 2745 6 is_stmt 0 view .LVU2812
 8964 11d6 002B     		cmp	r3, #0
 8965 11d8 7FF4F1AA 		bne	.L1067
2749:src/keys.c    **** #endif
 8966              		.loc 1 2749 4 is_stmt 1 view .LVU2813
2749:src/keys.c    **** #endif
 8967              		.loc 1 2749 8 is_stmt 0 view .LVU2814
 8968 11dc B8F808B0 		ldrh	fp, [r8, #8]
 8969              	.LVL708:
2751:src/keys.c    **** 			State2.digval = 0;
 8970              		.loc 1 2751 4 is_stmt 1 view .LVU2815
2751:src/keys.c    **** 			State2.digval = 0;
 8971              		.loc 1 2751 24 is_stmt 0 view .LVU2816
 8972 11e0 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2753:src/keys.c    **** 			return n;
 8973              		.loc 1 2753 19 view .LVU2817
 8974 11e4 88F80A30 		strb	r3, [r8, #10]
2751:src/keys.c    **** 			State2.digval = 0;
 8975              		.loc 1 2751 24 view .LVU2818
 8976 11e8 63F3C302 		bfi	r2, r3, #3, #1
2754:src/keys.c    **** 		}
 8977              		.loc 1 2754 11 view .LVU2819
 8978 11ec 4BF4285B 		orr	fp, fp, #10752
 8979              	.LVL709:
2752:src/keys.c    **** 			State2.digval2 = 0;
ARM GAS  /tmp/cciIzcMf.s 			page 260


 8980              		.loc 1 2752 18 view .LVU2820
 8981 11f0 A8F80830 		strh	r3, [r8, #8]	@ movhi
 8982 11f4 5846     		mov	r0, fp
 8983              	.LVL710:
2752:src/keys.c    **** 			State2.digval2 = 0;
 8984              		.loc 1 2752 18 view .LVU2821
 8985 11f6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2751:src/keys.c    **** 			State2.digval = 0;
 8986              		.loc 1 2751 24 view .LVU2822
 8987 11fa 88F81720 		strb	r2, [r8, #23]
2752:src/keys.c    **** 			State2.digval2 = 0;
 8988              		.loc 1 2752 4 is_stmt 1 view .LVU2823
2753:src/keys.c    **** 			return n;
 8989              		.loc 1 2753 4 view .LVU2824
2754:src/keys.c    **** 		}
 8990              		.loc 1 2754 4 view .LVU2825
2754:src/keys.c    **** 		}
 8991              		.loc 1 2754 11 is_stmt 0 view .LVU2826
 8992 11fe FFF766B9 		b	.L620
 8993              	.LVL711:
 8994              	.L725:
2718:src/keys.c    **** 			State2.digval++;
 8995              		.loc 1 2718 3 is_stmt 1 view .LVU2827
2718:src/keys.c    **** 			State2.digval++;
 8996              		.loc 1 2718 13 is_stmt 0 view .LVU2828
 8997 1202 B8F80830 		ldrh	r3, [r8, #8]
2718:src/keys.c    **** 			State2.digval++;
 8998              		.loc 1 2718 27 view .LVU2829
 8999 1206 09F1FF39 		add	r9, r9, #-1
 9000              	.LVL712:
2718:src/keys.c    **** 			State2.digval++;
 9001              		.loc 1 2718 6 view .LVU2830
 9002 120a 4B45     		cmp	r3, r9
 9003 120c 80F29985 		bge	.L726
2719:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9004              		.loc 1 2719 4 is_stmt 1 view .LVU2831
2720:src/keys.c    **** 				State2.digval = regX_idx;
 9005              		.loc 1 2720 8 is_stmt 0 view .LVU2832
 9006 1210 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2719:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9007              		.loc 1 2719 17 view .LVU2833
 9008 1214 0133     		adds	r3, r3, #1
 9009 1216 9CB2     		uxth	r4, r3
2720:src/keys.c    **** 				State2.digval = regX_idx;
 9010              		.loc 1 2720 7 view .LVU2834
 9011 1218 D307     		lsls	r3, r2, #31
2719:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9012              		.loc 1 2719 17 view .LVU2835
 9013 121a A8F80840 		strh	r4, [r8, #8]	@ movhi
2720:src/keys.c    **** 				State2.digval = regX_idx;
 9014              		.loc 1 2720 4 is_stmt 1 view .LVU2836
2720:src/keys.c    **** 				State2.digval = regX_idx;
 9015              		.loc 1 2720 7 is_stmt 0 view .LVU2837
 9016 121e 3FF5C8AA 		bmi	.L715
2720:src/keys.c    **** 				State2.digval = regX_idx;
 9017              		.loc 1 2720 43 view .LVU2838
 9018 1222 FFF7FEFF 		bl	global_regs
ARM GAS  /tmp/cciIzcMf.s 			page 261


 9019              	.LVL713:
2720:src/keys.c    **** 				State2.digval = regX_idx;
 9020              		.loc 1 2720 23 view .LVU2839
 9021 1226 8442     		cmp	r4, r0
 9022 1228 7FF4C3AA 		bne	.L715
2721:src/keys.c    **** 		}
 9023              		.loc 1 2721 5 is_stmt 1 view .LVU2840
2721:src/keys.c    **** 		}
 9024              		.loc 1 2721 19 is_stmt 0 view .LVU2841
 9025 122c 6423     		movs	r3, #100
 9026 122e A8F80830 		strh	r3, [r8, #8]	@ movhi
 9027 1232 FFF7BEBA 		b	.L715
 9028              	.LVL714:
 9029              	.L1056:
2721:src/keys.c    **** 		}
 9030              		.loc 1 2721 19 view .LVU2842
 9031 1236 DAB2     		uxtb	r2, r3
 9032 1238 D3E4     		b	.L641
 9033              	.LVL715:
 9034              	.L1124:
2721:src/keys.c    **** 		}
 9035              		.loc 1 2721 19 view .LVU2843
 9036              	.LBE824:
 9037              	.LBE1048:
 9038              	.LBB1049:
 9039              	.LBB884:
1338:src/keys.c    **** 		goto fin;
 9040              		.loc 1 1338 3 is_stmt 1 view .LVU2844
 9041              	.LBB877:
 9042              	.LBI877:
1310:src/keys.c    **** 	const int code = 100 + n;
 9043              		.loc 1 1310 12 view .LVU2845
 9044              	.LBB878:
1311:src/keys.c    **** 	unsigned int pc = state_pc();
 9045              		.loc 1 1311 2 view .LVU2846
1312:src/keys.c    **** 
 9046              		.loc 1 1312 2 view .LVU2847
1312:src/keys.c    **** 
 9047              		.loc 1 1312 20 is_stmt 0 view .LVU2848
 9048 123a DFF8C491 		ldr	r9, .L1165+12
 9049 123e D9F80030 		ldr	r3, [r9]
 9050              	.LVL716:
1312:src/keys.c    **** 
 9051              		.loc 1 1312 15 view .LVU2849
 9052 1242 B3F8E007 		ldrh	r0, [r3, #2016]
 9053              	.LVL717:
1314:src/keys.c    **** 		pc = 1;
 9054              		.loc 1 1314 2 is_stmt 1 view .LVU2850
1314:src/keys.c    **** 		pc = 1;
 9055              		.loc 1 1314 5 is_stmt 0 view .LVU2851
 9056 1246 830B     		lsrs	r3, r0, #14
1315:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9057              		.loc 1 1315 6 view .LVU2852
 9058 1248 032B     		cmp	r3, #3
 9059              	.LVL718:
1316:src/keys.c    **** 	if (pc > 0)
 9060              		.loc 1 1316 2 is_stmt 1 view .LVU2853
ARM GAS  /tmp/cciIzcMf.s 			page 262


1316:src/keys.c    **** 	if (pc > 0)
 9061              		.loc 1 1316 7 is_stmt 0 view .LVU2854
 9062 124a 08BF     		it	eq
 9063 124c 0120     		moveq	r0, #1
 9064              	.LVL719:
1316:src/keys.c    **** 	if (pc > 0)
 9065              		.loc 1 1316 7 view .LVU2855
 9066 124e 04F16401 		add	r1, r4, #100
 9067              	.LVL720:
1316:src/keys.c    **** 	if (pc > 0)
 9068              		.loc 1 1316 7 view .LVU2856
 9069 1252 0322     		movs	r2, #3
 9070              	.LVL721:
1316:src/keys.c    **** 	if (pc > 0)
 9071              		.loc 1 1316 7 view .LVU2857
 9072 1254 FFF7FEFF 		bl	find_label_from
 9073              	.LVL722:
1317:src/keys.c    **** 		return pc;
 9074              		.loc 1 1317 2 is_stmt 1 view .LVU2858
1317:src/keys.c    **** 		return pc;
 9075              		.loc 1 1317 5 is_stmt 0 view .LVU2859
 9076 1258 0028     		cmp	r0, #0
 9077 125a 7FF463AC 		bne	.L607
1319:src/keys.c    **** }
 9078              		.loc 1 1319 2 is_stmt 1 view .LVU2860
1319:src/keys.c    **** }
 9079              		.loc 1 1319 9 is_stmt 0 view .LVU2861
 9080 125e D9F80030 		ldr	r3, [r9]
 9081 1262 B3F8E007 		ldrh	r0, [r3, #2016]
 9082              	.LVL723:
1319:src/keys.c    **** }
 9083              		.loc 1 1319 9 view .LVU2862
 9084              	.LBE878:
 9085              	.LBE877:
1339:src/keys.c    **** 	}
 9086              		.loc 1 1339 3 is_stmt 1 view .LVU2863
 9087 1266 5DE4     		b	.L607
 9088              	.LVL724:
 9089              	.L896:
1339:src/keys.c    **** 	}
 9090              		.loc 1 1339 3 is_stmt 0 view .LVU2864
 9091              	.LBE884:
 9092              	.LBE1049:
 9093              	.LBB1050:
 9094              	.LBB867:
1927:src/keys.c    **** 	}
 9095              		.loc 1 1927 18 view .LVU2865
 9096 1268 1E23     		movs	r3, #30
1927:src/keys.c    **** 	}
 9097              		.loc 1 1927 47 view .LVU2866
 9098 126a 9B44     		add	fp, fp, r3
 9099              	.LVL725:
1927:src/keys.c    **** 	}
 9100              		.loc 1 1927 47 view .LVU2867
 9101 126c FFF790B9 		b	.L594
 9102              	.LVL726:
 9103              	.L895:
ARM GAS  /tmp/cciIzcMf.s 			page 263


1927:src/keys.c    **** 	}
 9104              		.loc 1 1927 18 view .LVU2868
 9105 1270 2723     		movs	r3, #39
1927:src/keys.c    **** 	}
 9106              		.loc 1 1927 47 view .LVU2869
 9107 1272 9B44     		add	fp, fp, r3
 9108              	.LVL727:
1927:src/keys.c    **** 	}
 9109              		.loc 1 1927 47 view .LVU2870
 9110 1274 FFF78CB9 		b	.L594
 9111              	.LVL728:
 9112              	.L1126:
1927:src/keys.c    **** 	}
 9113              		.loc 1 1927 47 view .LVU2871
 9114              	.LBE867:
 9115              	.LBE1050:
 9116              	.LBB1051:
 9117              	.LBB885:
1348:src/keys.c    **** 	}
 9118              		.loc 1 1348 3 is_stmt 1 view .LVU2872
1348:src/keys.c    **** 	}
 9119              		.loc 1 1348 6 is_stmt 0 view .LVU2873
 9120 1278 B8F80800 		ldrh	r0, [r8, #8]
 9121              	.LVL729:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9122              		.loc 1 1377 2 is_stmt 1 view .LVU2874
 9123 127c 22E5     		b	.L597
 9124              	.LVL730:
 9125              	.L1104:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9126              		.loc 1 1377 2 is_stmt 0 view .LVU2875
 9127              	.LBE885:
 9128              	.LBE1051:
2893:src/keys.c    **** 
 9129              		.loc 1 2893 3 is_stmt 1 view .LVU2876
 9130              	.LBB1052:
 9131              	.LBI1052:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9132              		.loc 1 102 13 view .LVU2877
 9133              	.LBE1052:
 9134              	.LBE1207:
 9135              	.LBE1266:
 103:src/keys.c    **** }
 9136              		.loc 1 103 2 view .LVU2878
 9137              	.LBB1267:
 9138              	.LBB1208:
 9139              	.LBB1059:
 9140              	.LBB1053:
 9141              	.LBI1053:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9142              		.loc 1 92 20 view .LVU2879
 9143              	.LBB1054:
  93:src/keys.c    **** 	State2.shifts = shift;
 9144              		.loc 1 93 2 view .LVU2880
 9145              	.LBB1055:
 9146              	.LBI1055:
  84:src/keys.c    **** 	enum shifts s = shift_down();
ARM GAS  /tmp/cciIzcMf.s 			page 264


 9147              		.loc 1 84 13 view .LVU2881
 9148              	.LBB1056:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9149              		.loc 1 85 2 view .LVU2882
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9150              		.loc 1 85 18 is_stmt 0 view .LVU2883
 9151 127e FFF7FEFF 		bl	shift_down
 9152              	.LVL731:
  86:src/keys.c    **** }
 9153              		.loc 1 86 2 is_stmt 1 view .LVU2884
  86:src/keys.c    **** }
 9154              		.loc 1 86 52 is_stmt 0 view .LVU2885
 9155 1282 0146     		mov	r1, r0
 9156 1284 08B9     		cbnz	r0, .L734
 9157 1286 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9158              	.L734:
 9159              	.LVL732:
  86:src/keys.c    **** }
 9160              		.loc 1 86 52 view .LVU2886
 9161              	.LBE1056:
 9162              	.LBE1055:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9163              		.loc 1 94 2 is_stmt 1 view .LVU2887
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9164              		.loc 1 94 16 is_stmt 0 view .LVU2888
 9165 128a 0022     		movs	r2, #0
 9166              	.LBE1054:
 9167              	.LBE1053:
 9168              	.LBE1059:
2893:src/keys.c    **** 
 9169              		.loc 1 2893 10 view .LVU2889
 9170 128c 2046     		mov	r0, r4
 9171              	.LBB1060:
 9172              	.LBB1058:
 9173              	.LBB1057:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9174              		.loc 1 94 16 view .LVU2890
 9175 128e 88F81020 		strb	r2, [r8, #16]
  95:src/keys.c    **** 	return r;
 9176              		.loc 1 95 2 is_stmt 1 view .LVU2891
  95:src/keys.c    **** 	return r;
 9177              		.loc 1 95 19 is_stmt 0 view .LVU2892
 9178 1292 88F80D20 		strb	r2, [r8, #13]
  96:src/keys.c    **** }
 9179              		.loc 1 96 2 is_stmt 1 view .LVU2893
 9180              	.LVL733:
  96:src/keys.c    **** }
 9181              		.loc 1 96 2 is_stmt 0 view .LVU2894
 9182              	.LBE1057:
 9183              	.LBE1058:
 9184              	.LBE1060:
2893:src/keys.c    **** 
 9185              		.loc 1 2893 10 view .LVU2895
 9186 1296 FFF7FEFF 		bl	process_catalogue
 9187              	.LVL734:
2893:src/keys.c    **** 
 9188              		.loc 1 2893 10 view .LVU2896
ARM GAS  /tmp/cciIzcMf.s 			page 265


 9189 129a 8346     		mov	fp, r0
 9190 129c FFF778B9 		b	.L594
 9191              	.L1105:
2897:src/keys.c    **** #else
 9192              		.loc 1 2897 3 is_stmt 1 view .LVU2897
 9193              	.LVL735:
 9194              	.LBB1061:
 9195              	.LBI735:
1390:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 9196              		.loc 1 1390 12 view .LVU2898
 9197              	.LBB784:
1391:src/keys.c    ****         int op = STATE_UNFINISHED;
 9198              		.loc 1 1391 2 view .LVU2899
1391:src/keys.c    ****         int op = STATE_UNFINISHED;
 9199              		.loc 1 1391 33 is_stmt 0 view .LVU2900
 9200 12a0 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 9201              	.LBB737:
 9202              	.LBB738:
 9203              	.LBB739:
 9204              	.LBB740:
 9205              	.LBB741:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9206              		.loc 1 85 18 view .LVU2901
 9207 12a4 FFF7FEFF 		bl	shift_down
 9208              	.LVL736:
 9209              	.LBE741:
 9210              	.LBE740:
 9211              	.LBE739:
 9212              	.LBE738:
 9213              	.LBE737:
1391:src/keys.c    ****         int op = STATE_UNFINISHED;
 9214              		.loc 1 1391 15 view .LVU2902
 9215 12a8 CA46     		mov	r10, r9
 9216              	.LVL737:
1392:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9217              		.loc 1 1392 9 is_stmt 1 view .LVU2903
1393:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9218              		.loc 1 1393 2 view .LVU2904
 9219              	.LBB750:
 9220              	.LBI737:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9221              		.loc 1 102 13 view .LVU2905
 9222              	.LBE750:
 9223              	.LBE784:
 9224              	.LBE1061:
 9225              	.LBE1208:
 9226              	.LBE1267:
 103:src/keys.c    **** }
 9227              		.loc 1 103 2 view .LVU2906
 9228              	.LBB1268:
 9229              	.LBB1209:
 9230              	.LBB1062:
 9231              	.LBB785:
 9232              	.LBB751:
 9233              	.LBB747:
 9234              	.LBI738:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/cciIzcMf.s 			page 266


 9235              		.loc 1 92 20 view .LVU2907
 9236              	.LBB744:
  93:src/keys.c    **** 	State2.shifts = shift;
 9237              		.loc 1 93 2 view .LVU2908
 9238              	.LBB743:
 9239              	.LBI740:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9240              		.loc 1 84 13 view .LVU2909
 9241              	.LBB742:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9242              		.loc 1 85 2 view .LVU2910
  86:src/keys.c    **** }
 9243              		.loc 1 86 2 view .LVU2911
  86:src/keys.c    **** }
 9244              		.loc 1 86 52 is_stmt 0 view .LVU2912
 9245 12aa 08B9     		cbnz	r0, .L736
 9246 12ac 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 9247              	.LVL738:
 9248              	.L736:
  86:src/keys.c    **** }
 9249              		.loc 1 86 52 view .LVU2913
 9250              	.LBE742:
 9251              	.LBE743:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9252              		.loc 1 94 2 is_stmt 1 view .LVU2914
 9253              	.LBE744:
 9254              	.LBE747:
 9255              	.LBE751:
 9256              	.LBB752:
 9257              	.LBB753:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9258              		.loc 1 434 6 is_stmt 0 view .LVU2915
 9259 12b0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9260              	.LBE753:
 9261              	.LBE752:
 9262              	.LBB767:
 9263              	.LBB748:
 9264              	.LBB745:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9265              		.loc 1 94 16 view .LVU2916
 9266 12b4 0022     		movs	r2, #0
 9267              	.LBE745:
 9268              	.LBE748:
 9269              	.LBE767:
 9270              	.LBB768:
 9271              	.LBB764:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9272              		.loc 1 434 5 view .LVU2917
 9273 12b6 D906     		lsls	r1, r3, #27
 9274              	.LBE764:
 9275              	.LBE768:
 9276              	.LBB769:
 9277              	.LBB749:
 9278              	.LBB746:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9279              		.loc 1 94 16 view .LVU2918
 9280 12b8 88F81020 		strb	r2, [r8, #16]
ARM GAS  /tmp/cciIzcMf.s 			page 267


  95:src/keys.c    **** 	return r;
 9281              		.loc 1 95 2 is_stmt 1 view .LVU2919
  95:src/keys.c    **** 	return r;
 9282              		.loc 1 95 19 is_stmt 0 view .LVU2920
 9283 12bc 88F80D20 		strb	r2, [r8, #13]
  96:src/keys.c    **** }
 9284              		.loc 1 96 2 is_stmt 1 view .LVU2921
 9285              	.LVL739:
  96:src/keys.c    **** }
 9286              		.loc 1 96 2 is_stmt 0 view .LVU2922
 9287              	.LBE746:
 9288              	.LBE749:
 9289              	.LBE769:
1394:src/keys.c    **** 	State2.alpha_pos = 0;
 9290              		.loc 1 1394 2 is_stmt 1 view .LVU2923
1394:src/keys.c    **** 	State2.alpha_pos = 0;
 9291              		.loc 1 1394 11 is_stmt 0 view .LVU2924
 9292 12c0 0246     		mov	r2, r0
 9293              	.LVL740:
 9294              	.LBB770:
 9295              	.LBI752:
 384:src/keys.c    **** {
 9296              		.loc 1 384 12 is_stmt 1 view .LVU2925
 9297              	.LBB765:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9298              		.loc 1 386 2 view .LVU2926
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9299              		.loc 1 434 2 view .LVU2927
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9300              		.loc 1 434 5 is_stmt 0 view .LVU2928
 9301 12c2 40F11381 		bpl	.L737
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9302              		.loc 1 435 3 is_stmt 1 view .LVU2929
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9303              		.loc 1 435 6 is_stmt 0 view .LVU2930
 9304 12c6 0028     		cmp	r0, #0
 9305 12c8 00F00F81 		beq	.L880
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 9306              		.loc 1 437 8 is_stmt 1 view .LVU2931
 9307              	.LBB754:
 9308              	.LBB755:
 131:src/keys.c    **** }
 9309              		.loc 1 131 23 is_stmt 0 view .LVU2932
 9310 12cc 4949     		ldr	r1, .L1165
 9311              	.LBE755:
 9312              	.LBE754:
 440:src/keys.c    **** }
 9313              		.loc 1 440 49 view .LVU2933
 9314 12ce 4B4A     		ldr	r2, .L1165+8
 9315              	.LBB760:
 9316              	.LBB756:
 131:src/keys.c    **** }
 9317              		.loc 1 131 23 view .LVU2934
 9318 12d0 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9319              	.LBE756:
 9320              	.LBE760:
 438:src/keys.c    **** 	}
ARM GAS  /tmp/cciIzcMf.s 			page 268


 9321              		.loc 1 438 10 view .LVU2935
 9322 12d2 0228     		cmp	r0, #2
 440:src/keys.c    **** }
 9323              		.loc 1 440 49 view .LVU2936
 9324 12d4 4FF0060C 		mov	ip, #6
 9325 12d8 0CFB0121 		mla	r1, ip, r1, r2
 438:src/keys.c    **** 	}
 9326              		.loc 1 438 10 view .LVU2937
 9327 12dc 14BF     		ite	ne
 9328 12de 0246     		movne	r2, r0
 9329 12e0 0522     		moveq	r2, #5
 9330              	.LVL741:
 440:src/keys.c    **** }
 9331              		.loc 1 440 2 is_stmt 1 view .LVU2938
 9332              	.LBB761:
 9333              	.LBI754:
 119:src/keys.c    **** {
 9334              		.loc 1 119 12 view .LVU2939
 9335              	.LBB757:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9336              		.loc 1 121 2 view .LVU2940
 131:src/keys.c    **** }
 9337              		.loc 1 131 2 view .LVU2941
 131:src/keys.c    **** }
 9338              		.loc 1 131 2 is_stmt 0 view .LVU2942
 9339 12e2 063C     		subs	r4, r4, #6
 9340              	.LBE757:
 9341              	.LBE761:
 440:src/keys.c    **** }
 9342              		.loc 1 440 49 view .LVU2943
 9343 12e4 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9344              	.LVL742:
 440:src/keys.c    **** }
 9345              		.loc 1 440 49 view .LVU2944
 9346              	.LBE765:
 9347              	.LBE770:
1395:src/keys.c    **** 
 9348              		.loc 1 1395 2 is_stmt 1 view .LVU2945
1397:src/keys.c    **** 	case K10:	// STO
 9349              		.loc 1 1397 2 view .LVU2946
 9350 12e6 212C     		cmp	r4, #33
 9351 12e8 23D8     		bhi	.L740
 9352 12ea DFE814F0 		tbh	[pc, r4, lsl #1]
 9353              	.L843:
 9354 12ee 3D04     		.2byte	(.L749-.L843)/2
 9355 12f0 2A04     		.2byte	(.L748-.L843)/2
 9356 12f2 2200     		.2byte	(.L740-.L843)/2
 9357 12f4 2200     		.2byte	(.L740-.L843)/2
 9358 12f6 2200     		.2byte	(.L740-.L843)/2
 9359 12f8 2200     		.2byte	(.L740-.L843)/2
 9360 12fa E003     		.2byte	(.L747-.L843)/2
 9361 12fc 2200     		.2byte	(.L740-.L843)/2
 9362 12fe 2200     		.2byte	(.L740-.L843)/2
 9363 1300 2200     		.2byte	(.L740-.L843)/2
 9364 1302 7E04     		.2byte	(.L753-.L843)/2
 9365 1304 2200     		.2byte	(.L740-.L843)/2
 9366 1306 0604     		.2byte	(.L745-.L843)/2
ARM GAS  /tmp/cciIzcMf.s 			page 269


 9367 1308 2200     		.2byte	(.L740-.L843)/2
 9368 130a 2200     		.2byte	(.L740-.L843)/2
 9369 130c 2200     		.2byte	(.L740-.L843)/2
 9370 130e 2200     		.2byte	(.L740-.L843)/2
 9371 1310 2200     		.2byte	(.L740-.L843)/2
 9372 1312 F403     		.2byte	(.L744-.L843)/2
 9373 1314 2200     		.2byte	(.L740-.L843)/2
 9374 1316 2200     		.2byte	(.L740-.L843)/2
 9375 1318 2200     		.2byte	(.L740-.L843)/2
 9376 131a 2200     		.2byte	(.L740-.L843)/2
 9377 131c 2200     		.2byte	(.L740-.L843)/2
 9378 131e 2200     		.2byte	(.L740-.L843)/2
 9379 1320 2200     		.2byte	(.L740-.L843)/2
 9380 1322 2200     		.2byte	(.L740-.L843)/2
 9381 1324 2200     		.2byte	(.L740-.L843)/2
 9382 1326 2200     		.2byte	(.L740-.L843)/2
 9383 1328 2200     		.2byte	(.L740-.L843)/2
 9384 132a 1C04     		.2byte	(.L743-.L843)/2
 9385 132c 2200     		.2byte	(.L740-.L843)/2
 9386 132e 2200     		.2byte	(.L740-.L843)/2
 9387 1330 D303     		.2byte	(.L741-.L843)/2
 9388              		.p2align 1
 9389              	.L740:
1491:src/keys.c    **** 		return STATE_UNFINISHED;
 9390              		.loc 1 1491 2 view .LVU2947
1491:src/keys.c    **** 		return STATE_UNFINISHED;
 9391              		.loc 1 1491 5 is_stmt 0 view .LVU2948
 9392 1332 002A     		cmp	r2, #0
 9393 1334 3FF443AA 		beq	.L1067
1493:src/keys.c    **** }
 9394              		.loc 1 1493 2 is_stmt 1 view .LVU2949
1493:src/keys.c    **** }
 9395              		.loc 1 1493 9 is_stmt 0 view .LVU2950
 9396 1338 42F4884B 		orr	fp, r2, #17408
 9397 133c 5846     		mov	r0, fp
 9398              	.LVL743:
1493:src/keys.c    **** }
 9399              		.loc 1 1493 9 view .LVU2951
 9400 133e FFF7C6B8 		b	.L620
 9401              	.LVL744:
 9402              	.L1125:
1493:src/keys.c    **** }
 9403              		.loc 1 1493 9 view .LVU2952
 9404              	.LBE785:
 9405              	.LBE1062:
 9406              	.LBB1063:
 9407              	.LBB886:
1343:src/keys.c    **** 		goto fin;
 9408              		.loc 1 1343 3 is_stmt 1 view .LVU2953
1343:src/keys.c    **** 		goto fin;
 9409              		.loc 1 1343 11 is_stmt 0 view .LVU2954
 9410 1342 2F4B     		ldr	r3, .L1165+12
 9411              	.LVL745:
1343:src/keys.c    **** 		goto fin;
 9412              		.loc 1 1343 11 view .LVU2955
 9413 1344 1B68     		ldr	r3, [r3]
1343:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/cciIzcMf.s 			page 270


 9414              		.loc 1 1343 9 view .LVU2956
 9415 1346 5888     		ldrh	r0, [r3, #2]
 9416              	.LVL746:
1344:src/keys.c    **** 	}
 9417              		.loc 1 1344 3 is_stmt 1 view .LVU2957
 9418 1348 FFF7ECBB 		b	.L607
 9419              	.LVL747:
 9420              	.L1108:
1344:src/keys.c    **** 	}
 9421              		.loc 1 1344 3 is_stmt 0 view .LVU2958
 9422              	.LBE886:
 9423              	.LBE1063:
2914:src/keys.c    **** 		// print_debug (3, c);
 9424              		.loc 1 2914 4 is_stmt 1 view .LVU2959
 9425              	.LBB1064:
 9426              	.LBI1064:
1001:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 9427              		.loc 1 1001 12 view .LVU2960
 9428              	.LBB1065:
1004:src/keys.c    **** 		// Row 1
 9429              		.loc 1 1004 2 view .LVU2961
1055:src/keys.c    **** 	int op = op_map[lc];
 9430              		.loc 1 1055 2 view .LVU2962
 9431              	.LBB1066:
 9432              	.LBI1066:
 134:src/keys.c    **** {
 9433              		.loc 1 134 12 view .LVU2963
 9434              	.LBB1067:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9435              		.loc 1 136 2 view .LVU2964
 146:src/keys.c    **** }
 9436              		.loc 1 146 2 view .LVU2965
 146:src/keys.c    **** }
 9437              		.loc 1 146 2 is_stmt 0 view .LVU2966
 9438              	.LBE1067:
 9439              	.LBE1066:
1056:src/keys.c    **** 	reset_shift();
 9440              		.loc 1 1056 2 is_stmt 1 view .LVU2967
 9441              	.LBB1070:
 9442              	.LBB1068:
 146:src/keys.c    **** }
 9443              		.loc 1 146 23 is_stmt 0 view .LVU2968
 9444 134c 2D4A     		ldr	r2, .L1165+16
 9445              	.LBE1068:
 9446              	.LBE1070:
1056:src/keys.c    **** 	reset_shift();
 9447              		.loc 1 1056 17 view .LVU2969
 9448 134e 2E4B     		ldr	r3, .L1165+20
 9449              	.LBB1071:
 9450              	.LBB1069:
 146:src/keys.c    **** }
 9451              		.loc 1 146 23 view .LVU2970
 9452 1350 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9453              	.LBE1069:
 9454              	.LBE1071:
1056:src/keys.c    **** 	reset_shift();
 9455              		.loc 1 1056 17 view .LVU2971
ARM GAS  /tmp/cciIzcMf.s 			page 271


 9456 1352 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 9457              	.LVL748:
1057:src/keys.c    **** 
 9458              		.loc 1 1057 2 is_stmt 1 view .LVU2972
 9459              	.LBB1072:
 9460              	.LBI1072:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9461              		.loc 1 102 13 view .LVU2973
 9462              	.LBE1072:
 9463              	.LBE1065:
 9464              	.LBE1064:
 9465              	.LBE1209:
 9466              	.LBE1268:
 103:src/keys.c    **** }
 9467              		.loc 1 103 2 view .LVU2974
 9468              	.LBB1269:
 9469              	.LBB1210:
 9470              	.LBB1087:
 9471              	.LBB1083:
 9472              	.LBB1079:
 9473              	.LBB1073:
 9474              	.LBI1073:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9475              		.loc 1 92 20 view .LVU2975
 9476              	.LBB1074:
  93:src/keys.c    **** 	State2.shifts = shift;
 9477              		.loc 1 93 2 view .LVU2976
 9478              	.LBB1075:
 9479              	.LBI1075:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9480              		.loc 1 84 13 view .LVU2977
 9481              	.LBB1076:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9482              		.loc 1 85 2 view .LVU2978
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9483              		.loc 1 85 18 is_stmt 0 view .LVU2979
 9484 1356 FFF7FEFF 		bl	shift_down
 9485              	.LVL749:
  86:src/keys.c    **** }
 9486              		.loc 1 86 2 is_stmt 1 view .LVU2980
 9487              	.LBE1076:
 9488              	.LBE1075:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9489              		.loc 1 94 2 view .LVU2981
 9490              	.LBE1074:
 9491              	.LBE1073:
 9492              	.LBE1079:
1060:src/keys.c    **** 	case K62:
 9493              		.loc 1 1060 2 is_stmt 0 view .LVU2982
 9494 135a 262C     		cmp	r4, #38
 9495              	.LBB1080:
 9496              	.LBB1078:
 9497              	.LBB1077:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9498              		.loc 1 94 16 view .LVU2983
 9499 135c 88F810B0 		strb	fp, [r8, #16]
  95:src/keys.c    **** 	return r;
ARM GAS  /tmp/cciIzcMf.s 			page 272


 9500              		.loc 1 95 2 is_stmt 1 view .LVU2984
  95:src/keys.c    **** 	return r;
 9501              		.loc 1 95 19 is_stmt 0 view .LVU2985
 9502 1360 88F80DB0 		strb	fp, [r8, #13]
  96:src/keys.c    **** }
 9503              		.loc 1 96 2 is_stmt 1 view .LVU2986
 9504              	.LVL750:
  96:src/keys.c    **** }
 9505              		.loc 1 96 2 is_stmt 0 view .LVU2987
 9506              	.LBE1077:
 9507              	.LBE1078:
 9508              	.LBE1080:
1060:src/keys.c    **** 	case K62:
 9509              		.loc 1 1060 2 is_stmt 1 view .LVU2988
 9510 1364 00F04882 		beq	.L791
 9511 1368 272C     		cmp	r4, #39
 9512 136a 1FD1     		bne	.L793
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9513              		.loc 1 1073 3 view .LVU2989
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9514              		.loc 1 1073 7 is_stmt 0 view .LVU2990
 9515 136c FFF7FEFF 		bl	is_bad_cmdline
 9516              	.LVL751:
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9517              		.loc 1 1073 6 view .LVU2991
 9518 1370 0028     		cmp	r0, #0
 9519 1372 7FF424AA 		bne	.L1067
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9520              		.loc 1 1075 3 is_stmt 1 view .LVU2992
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9521              		.loc 1 1075 30 is_stmt 0 view .LVU2993
 9522 1376 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9523 137a C3F38012 		ubfx	r2, r3, #6, #1
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9524              		.loc 1 1075 22 view .LVU2994
 9525 137e C2F10102 		rsb	r2, r2, #1
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9526              		.loc 1 1075 18 view .LVU2995
 9527 1382 62F38613 		bfi	r3, r2, #6, #1
 9528 1386 88F81630 		strb	r3, [r8, #22]
1076:src/keys.c    **** 		update_program_bounds(1);
 9529              		.loc 1 1076 3 is_stmt 1 view .LVU2996
 9530 138a FFF7FEFF 		bl	process_cmdline_set_lift
 9531              	.LVL752:
1077:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 9532              		.loc 1 1077 3 view .LVU2997
 9533 138e 0120     		movs	r0, #1
 9534 1390 FFF7FEFF 		bl	update_program_bounds
 9535              	.LVL753:
1078:src/keys.c    **** 			set_pc(0);
 9536              		.loc 1 1078 3 view .LVU2998
1078:src/keys.c    **** 			set_pc(0);
 9537              		.loc 1 1078 7 is_stmt 0 view .LVU2999
 9538 1394 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
1078:src/keys.c    **** 			set_pc(0);
 9539              		.loc 1 1078 6 view .LVU3000
 9540 1398 10F04000 		ands	r0, r0, #64
ARM GAS  /tmp/cciIzcMf.s 			page 273


 9541 139c 06D1     		bne	.L793
1078:src/keys.c    **** 			set_pc(0);
 9542              		.loc 1 1078 27 view .LVU3001
 9543 139e 184B     		ldr	r3, .L1165+12
 9544 13a0 1B68     		ldr	r3, [r3]
1078:src/keys.c    **** 			set_pc(0);
 9545              		.loc 1 1078 24 view .LVU3002
 9546 13a2 B3F8E027 		ldrh	r2, [r3, #2016]
 9547 13a6 012A     		cmp	r2, #1
 9548 13a8 00F0C284 		beq	.L1144
 9549              	.L793:
1086:src/keys.c    **** 		if (op & _RARG) {
 9550              		.loc 1 1086 5 view .LVU3003
 9551 13ac BAF1330F 		cmp	r10, #51
1056:src/keys.c    **** 	reset_shift();
 9552              		.loc 1 1056 6 view .LVU3004
 9553 13b0 D346     		mov	fp, r10
1086:src/keys.c    **** 		if (op & _RARG) {
 9554              		.loc 1 1086 2 is_stmt 1 view .LVU3005
1086:src/keys.c    **** 		if (op & _RARG) {
 9555              		.loc 1 1086 5 is_stmt 0 view .LVU3006
 9556 13b2 0AD0     		beq	.L801
 9557              	.LVL754:
1087:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9558              		.loc 1 1087 3 is_stmt 1 view .LVU3007
1087:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9559              		.loc 1 1087 6 is_stmt 0 view .LVU3008
 9560 13b4 1AF4004F 		tst	r10, #32768
 9561 13b8 00F00683 		beq	.L1145
1088:src/keys.c    **** 			op = STATE_UNFINISHED;
 9562              		.loc 1 1088 4 is_stmt 1 view .LVU3009
 9563              	.LVL755:
 9564              	.LBB1081:
 9565              	.LBI1081:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 9566              		.loc 1 501 13 view .LVU3010
 9567              	.LBB1082:
 502:src/keys.c    **** 		return;
 9568              		.loc 1 502 2 view .LVU3011
 502:src/keys.c    **** 		return;
 9569              		.loc 1 502 6 is_stmt 0 view .LVU3012
 9570 13bc FFF7FEFF 		bl	is_bad_cmdline
 9571              	.LVL756:
 502:src/keys.c    **** 		return;
 9572              		.loc 1 502 5 view .LVU3013
 9573 13c0 18B9     		cbnz	r0, .L801
 9574 13c2 5FFA8AF0 		uxtb	r0, r10
 9575 13c6 FFF7FEFF 		bl	init_arg.part.0
 9576              	.LVL757:
 9577              	.L801:
 502:src/keys.c    **** 		return;
 9578              		.loc 1 502 5 view .LVU3014
 9579              	.LBE1082:
 9580              	.LBE1081:
1092:src/keys.c    **** #undef _RARG
 9581              		.loc 1 1092 2 is_stmt 1 view .LVU3015
1068:src/keys.c    **** #endif
ARM GAS  /tmp/cciIzcMf.s 			page 274


 9582              		.loc 1 1068 29 is_stmt 0 view .LVU3016
 9583 13ca 4FF0330B 		mov	fp, #51
 9584              	.LVL758:
 9585              	.L796:
1092:src/keys.c    **** #undef _RARG
 9586              		.loc 1 1092 57 view .LVU3017
 9587 13ce 2BF4804B 		bic	fp, fp, #16384
 9588 13d2 FFF7DDB8 		b	.L594
 9589              	.LVL759:
 9590              	.L1112:
1092:src/keys.c    **** #undef _RARG
 9591              		.loc 1 1092 57 view .LVU3018
 9592              	.LBE1083:
 9593              	.LBE1087:
 9594              	.LBB1088:
 9595              	.LBB731:
2371:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9596              		.loc 1 2371 3 is_stmt 1 view .LVU3019
2371:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9597              		.loc 1 2371 12 is_stmt 0 view .LVU3020
 9598 13d6 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 9599 13da 2046     		mov	r0, r4
 9600 13dc 941E     		subs	r4, r2, #2
 9601 13de 6242     		rsbs	r2, r4, #0
 9602 13e0 6241     		adcs	r2, r2, r4
 9603 13e2 FFF7FEFF 		bl	process_catalogue
 9604              	.LVL760:
2372:src/keys.c    **** 			return opcode;
 9605              		.loc 1 2372 3 is_stmt 1 view .LVU3021
2372:src/keys.c    **** 			return opcode;
 9606              		.loc 1 2372 6 is_stmt 0 view .LVU3022
 9607 13e6 3328     		cmp	r0, #51
 9608 13e8 3FF4E9A9 		beq	.L1067
2374:src/keys.c    **** 		goto add_char;
 9609              		.loc 1 2374 3 is_stmt 1 view .LVU3023
2374:src/keys.c    **** 		goto add_char;
 9610              		.loc 1 2374 6 is_stmt 0 view .LVU3024
 9611 13ec C3B2     		uxtb	r3, r0
 9612              	.LVL761:
2375:src/keys.c    **** 	}
 9613              		.loc 1 2375 3 is_stmt 1 view .LVU3025
 9614 13ee FFF7A9B8 		b	.L673
 9615              	.L1166:
 9616 13f2 00BF     		.align	2
 9617              	.L1165:
 9618 13f4 00000000 		.word	.LANCHOR1
 9619 13f8 00000000 		.word	.LANCHOR0
 9620 13fc 00000000 		.word	.LANCHOR9
 9621 1400 00000000 		.word	main_ram
 9622 1404 00000000 		.word	.LANCHOR18
 9623 1408 00000000 		.word	.LANCHOR21
 9624              	.LVL762:
 9625              	.L1106:
2375:src/keys.c    **** 	}
 9626              		.loc 1 2375 3 is_stmt 0 view .LVU3026
 9627              	.LBE731:
 9628              	.LBE1088:
ARM GAS  /tmp/cciIzcMf.s 			page 275


2909:src/keys.c    **** 	} else {
 9629              		.loc 1 2909 3 is_stmt 1 view .LVU3027
 9630              	.LBB1089:
 9631              	.LBI1089:
1100:src/keys.c    **** #define _RARG   0xFF00
 9632              		.loc 1 1100 12 view .LVU3028
 9633              	.LBB1090:
1105:src/keys.c    **** 		// Row 1
 9634              		.loc 1 1105 2 view .LVU3029
1156:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9635              		.loc 1 1156 2 view .LVU3030
 9636              	.LBB1091:
 9637              	.LBI1091:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9638              		.loc 1 102 13 view .LVU3031
 9639              	.LBE1091:
 9640              	.LBE1090:
 9641              	.LBE1089:
 9642              	.LBE1210:
 9643              	.LBE1269:
 103:src/keys.c    **** }
 9644              		.loc 1 103 2 view .LVU3032
 9645              	.LBB1270:
 9646              	.LBB1211:
 9647              	.LBB1120:
 9648              	.LBB1116:
 9649              	.LBB1102:
 9650              	.LBB1092:
 9651              	.LBI1092:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9652              		.loc 1 92 20 view .LVU3033
 9653              	.LBB1093:
  93:src/keys.c    **** 	State2.shifts = shift;
 9654              		.loc 1 93 2 view .LVU3034
 9655              	.LBB1094:
 9656              	.LBI1094:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9657              		.loc 1 84 13 view .LVU3035
 9658              	.LBB1095:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9659              		.loc 1 85 2 view .LVU3036
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9660              		.loc 1 85 18 is_stmt 0 view .LVU3037
 9661 140c FFF7FEFF 		bl	shift_down
 9662              	.LVL763:
  86:src/keys.c    **** }
 9663              		.loc 1 86 2 is_stmt 1 view .LVU3038
  86:src/keys.c    **** }
 9664              		.loc 1 86 52 is_stmt 0 view .LVU3039
 9665 1410 0346     		mov	r3, r0
 9666 1412 08B9     		cbnz	r0, .L762
 9667 1414 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 9668              	.L762:
 9669              	.LVL764:
  86:src/keys.c    **** }
 9670              		.loc 1 86 52 view .LVU3040
 9671              	.LBE1095:
ARM GAS  /tmp/cciIzcMf.s 			page 276


 9672              	.LBE1094:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9673              		.loc 1 94 2 is_stmt 1 view .LVU3041
 9674              	.LBE1093:
 9675              	.LBE1092:
 9676              	.LBE1102:
 9677              	.LBB1103:
 9678              	.LBB1104:
 146:src/keys.c    **** }
 9679              		.loc 1 146 23 is_stmt 0 view .LVU3042
 9680 1418 B64A     		ldr	r2, .L1167
 9681              	.LBE1104:
 9682              	.LBE1103:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9683              		.loc 1 1158 21 view .LVU3043
 9684 141a B748     		ldr	r0, .L1167+4
 9685              	.LBB1107:
 9686              	.LBB1105:
 146:src/keys.c    **** }
 9687              		.loc 1 146 23 view .LVU3044
 9688 141c 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9689              	.LBE1105:
 9690              	.LBE1107:
1159:src/keys.c    **** 
 9691              		.loc 1 1159 15 view .LVU3045
 9692 141e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
1158:src/keys.c    **** 	State2.cmplx = 0;
 9693              		.loc 1 1158 21 view .LVU3046
 9694 1422 03EB8202 		add	r2, r3, r2, lsl #2
 9695              	.LBB1108:
 9696              	.LBB1099:
 9697              	.LBB1096:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9698              		.loc 1 94 16 view .LVU3047
 9699 1426 4FF0000A 		mov	r10, #0
 9700              	.LVL765:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9701              		.loc 1 94 16 view .LVU3048
 9702              	.LBE1096:
 9703              	.LBE1099:
 9704              	.LBE1108:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9705              		.loc 1 1158 21 view .LVU3049
 9706 142a 30F812B0 		ldrh	fp, [r0, r2, lsl #1]
 9707              	.LBB1109:
 9708              	.LBB1100:
 9709              	.LBB1097:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9710              		.loc 1 94 16 view .LVU3050
 9711 142e 88F810A0 		strb	r10, [r8, #16]
  95:src/keys.c    **** 	return r;
 9712              		.loc 1 95 2 is_stmt 1 view .LVU3051
 9713              	.LBE1097:
 9714              	.LBE1100:
 9715              	.LBE1109:
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9716              		.loc 1 1161 5 is_stmt 0 view .LVU3052
ARM GAS  /tmp/cciIzcMf.s 			page 277


 9717 1432 0BF47F42 		and	r2, fp, #65280
1159:src/keys.c    **** 
 9718              		.loc 1 1159 15 view .LVU3053
 9719 1436 6AF34101 		bfi	r1, r10, #1, #1
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9720              		.loc 1 1161 5 view .LVU3054
 9721 143a B2F57F4F 		cmp	r2, #65280
1159:src/keys.c    **** 
 9722              		.loc 1 1159 15 view .LVU3055
 9723 143e 88F81510 		strb	r1, [r8, #21]
 9724              	.LBB1110:
 9725              	.LBB1101:
 9726              	.LBB1098:
  95:src/keys.c    **** 	return r;
 9727              		.loc 1 95 19 view .LVU3056
 9728 1442 88F80DA0 		strb	r10, [r8, #13]
  96:src/keys.c    **** }
 9729              		.loc 1 96 2 is_stmt 1 view .LVU3057
 9730              	.LVL766:
  96:src/keys.c    **** }
 9731              		.loc 1 96 2 is_stmt 0 view .LVU3058
 9732              	.LBE1098:
 9733              	.LBE1101:
 9734              	.LBE1110:
1157:src/keys.c    **** 	int op = op_map[lc][shift];
 9735              		.loc 1 1157 2 is_stmt 1 view .LVU3059
 9736              	.LBB1111:
 9737              	.LBI1103:
 134:src/keys.c    **** {
 9738              		.loc 1 134 12 view .LVU3060
 9739              	.LBB1106:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9740              		.loc 1 136 2 view .LVU3061
 146:src/keys.c    **** }
 9741              		.loc 1 146 2 view .LVU3062
 146:src/keys.c    **** }
 9742              		.loc 1 146 2 is_stmt 0 view .LVU3063
 9743              	.LBE1106:
 9744              	.LBE1111:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9745              		.loc 1 1158 2 is_stmt 1 view .LVU3064
1159:src/keys.c    **** 
 9746              		.loc 1 1159 2 view .LVU3065
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9747              		.loc 1 1161 2 view .LVU3066
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9748              		.loc 1 1161 5 is_stmt 0 view .LVU3067
 9749 1446 00F01C84 		beq	.L788
1165:src/keys.c    **** 		// HYP
 9750              		.loc 1 1165 2 is_stmt 1 view .LVU3068
1165:src/keys.c    **** 		// HYP
 9751              		.loc 1 1165 5 is_stmt 0 view .LVU3069
 9752 144a 002C     		cmp	r4, #0
 9753 144c 00F0E182 		beq	.L1146
1174:src/keys.c    **** 		switch (c) {
 9754              		.loc 1 1174 2 is_stmt 1 view .LVU3070
1174:src/keys.c    **** 		switch (c) {
ARM GAS  /tmp/cciIzcMf.s 			page 278


 9755              		.loc 1 1174 5 is_stmt 0 view .LVU3071
 9756 1450 002B     		cmp	r3, #0
 9757 1452 3FF49DA8 		beq	.L594
1175:src/keys.c    **** 		case K_CMPLX:
 9758              		.loc 1 1175 3 is_stmt 1 view .LVU3072
 9759 1456 242C     		cmp	r4, #36
 9760 1458 00F06684 		beq	.L765
 9761 145c 2D2C     		cmp	r4, #45
 9762 145e 00F05984 		beq	.L766
 9763 1462 1F2C     		cmp	r4, #31
 9764 1464 7FF494A8 		bne	.L594
1181:src/keys.c    **** 				if (is_bad_cmdline())
 9765              		.loc 1 1181 4 view .LVU3073
1181:src/keys.c    **** 				if (is_bad_cmdline())
 9766              		.loc 1 1181 7 is_stmt 0 view .LVU3074
 9767 1468 BBF1330F 		cmp	fp, #51
 9768 146c 3FF4A7A9 		beq	.L1067
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9769              		.loc 1 1182 5 is_stmt 1 view .LVU3075
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9770              		.loc 1 1182 9 is_stmt 0 view .LVU3076
 9771 1470 FFF7FEFF 		bl	is_bad_cmdline
 9772              	.LVL767:
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9773              		.loc 1 1182 8 view .LVU3077
 9774 1474 0446     		mov	r4, r0
 9775 1476 0028     		cmp	r0, #0
 9776 1478 7FF4A1A9 		bne	.L1067
1184:src/keys.c    **** 				State2.cmplx = 1;
 9777              		.loc 1 1184 5 is_stmt 1 view .LVU3078
 9778 147c FFF7FEFF 		bl	process_cmdline_set_lift
 9779              	.LVL768:
1185:src/keys.c    **** 				State2.test = op;
 9780              		.loc 1 1185 5 view .LVU3079
1185:src/keys.c    **** 				State2.test = op;
 9781              		.loc 1 1185 18 is_stmt 0 view .LVU3080
 9782 1480 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1186:src/keys.c    **** 			}
 9783              		.loc 1 1186 17 view .LVU3081
 9784 1484 88F80FB0 		strb	fp, [r8, #15]
1185:src/keys.c    **** 				State2.test = op;
 9785              		.loc 1 1185 18 view .LVU3082
 9786 1488 43F00203 		orr	r3, r3, #2
 9787              	.LBE1116:
 9788              	.LBE1120:
 9789              	.LBE1211:
 9790              	.LBE1270:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 9791              		.loc 1 2948 7 view .LVU3083
 9792 148c 2746     		mov	r7, r4
 9793              	.LBB1271:
 9794              	.LBB1212:
 9795              	.LBB1121:
 9796              	.LBB1117:
1185:src/keys.c    **** 				State2.test = op;
 9797              		.loc 1 1185 18 view .LVU3084
 9798 148e 88F81530 		strb	r3, [r8, #21]
ARM GAS  /tmp/cciIzcMf.s 			page 279


1186:src/keys.c    **** 			}
 9799              		.loc 1 1186 5 is_stmt 1 view .LVU3085
1188:src/keys.c    **** 
 9800              		.loc 1 1188 11 is_stmt 0 view .LVU3086
 9801 1492 4FF0330B 		mov	fp, #51
 9802              	.LVL769:
1188:src/keys.c    **** 
 9803              		.loc 1 1188 11 view .LVU3087
 9804 1496 FEF707BE 		b	.L565
 9805              	.LVL770:
 9806              	.L1127:
1188:src/keys.c    **** 
 9807              		.loc 1 1188 11 view .LVU3088
 9808              	.LBE1117:
 9809              	.LBE1121:
 9810              	.LBB1122:
 9811              	.LBB887:
1352:src/keys.c    **** 			goto fin2;
 9812              		.loc 1 1352 3 is_stmt 1 view .LVU3089
1352:src/keys.c    **** 			goto fin2;
 9813              		.loc 1 1352 13 is_stmt 0 view .LVU3090
 9814 149a 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 9815              	.LVL771:
1352:src/keys.c    **** 			goto fin2;
 9816              		.loc 1 1352 6 view .LVU3091
 9817 149e 002B     		cmp	r3, #0
 9818 14a0 3FF442AB 		beq	.L611
1355:src/keys.c    **** 			State2.digval /= 10;
 9819              		.loc 1 1355 4 is_stmt 1 view .LVU3092
1355:src/keys.c    **** 			State2.digval /= 10;
 9820              		.loc 1 1355 19 is_stmt 0 view .LVU3093
 9821 14a4 013B     		subs	r3, r3, #1
 9822 14a6 88F80B30 		strb	r3, [r8, #11]
1356:src/keys.c    **** 		}
 9823              		.loc 1 1356 4 is_stmt 1 view .LVU3094
1356:src/keys.c    **** 		}
 9824              		.loc 1 1356 18 is_stmt 0 view .LVU3095
 9825 14aa 0A22     		movs	r2, #10
 9826              	.LVL772:
1356:src/keys.c    **** 		}
 9827              		.loc 1 1356 18 view .LVU3096
 9828 14ac B8F80830 		ldrh	r3, [r8, #8]
 9829 14b0 B3FBF2F3 		udiv	r3, r3, r2
 9830              	.LBE887:
 9831              	.LBE1122:
2832:src/keys.c    **** 
 9832              		.loc 1 2832 10 view .LVU3097
 9833 14b4 4FF0330B 		mov	fp, #51
 9834              	.LBB1123:
 9835              	.LBB888:
1356:src/keys.c    **** 		}
 9836              		.loc 1 1356 18 view .LVU3098
 9837 14b8 A8F80830 		strh	r3, [r8, #8]	@ movhi
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9838              		.loc 1 1377 2 is_stmt 1 view .LVU3099
 9839 14bc FEF7F4BD 		b	.L565
 9840              	.LVL773:
ARM GAS  /tmp/cciIzcMf.s 			page 280


 9841              	.L1131:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9842              		.loc 1 1377 2 is_stmt 0 view .LVU3100
 9843              	.LBE888:
 9844              	.LBE1123:
 9845              	.LBB1124:
 9846              	.LBB908:
2481:src/keys.c    **** 		return STATE_UNFINISHED;
 9847              		.loc 1 2481 3 is_stmt 1 view .LVU3101
2481:src/keys.c    **** 		return STATE_UNFINISHED;
 9848              		.loc 1 2481 17 is_stmt 0 view .LVU3102
 9849 14c0 88F80C10 		strb	r1, [r8, #12]
2482:src/keys.c    **** 	} 
 9850              		.loc 1 2482 3 is_stmt 1 view .LVU3103
 9851              	.LBE908:
 9852              	.LBE1124:
2841:src/keys.c    **** 
 9853              		.loc 1 2841 10 is_stmt 0 view .LVU3104
 9854 14c4 4FF0330B 		mov	fp, #51
 9855              	.LBB1125:
 9856              	.LBB909:
2482:src/keys.c    **** 	} 
 9857              		.loc 1 2482 10 view .LVU3105
 9858 14c8 FEF7EEBD 		b	.L565
 9859              	.LVL774:
 9860              	.L1099:
2482:src/keys.c    **** 	} 
 9861              		.loc 1 2482 10 view .LVU3106
 9862              	.LBE909:
 9863              	.LBE1125:
 9864              	.LBB1126:
 9865              	.LBB657:
 9866              	.LBB650:
 324:src/keys.c    **** #else
 9867              		.loc 1 324 45 view .LVU3107
 9868 14cc FFF7FEFF 		bl	shift_down
 9869              	.LVL775:
 324:src/keys.c    **** #else
 9870              		.loc 1 324 42 view .LVU3108
 9871 14d0 0328     		cmp	r0, #3
 9872 14d2 00F07182 		beq	.L662
 9873 14d6 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 322:src/keys.c    **** #ifndef WINGUI
 9874              		.loc 1 322 8 view .LVU3109
 9875 14da 884B     		ldr	r3, .L1167+8
 324:src/keys.c    **** #else
 9876              		.loc 1 324 73 view .LVU3110
 9877 14dc DC46     		mov	ip, fp
 328:src/keys.c    ****   }
 9878              		.loc 1 328 9 view .LVU3111
 9879 14de 0C21     		movs	r1, #12
 9880 14e0 FEF7DCBE 		b	.L661
 9881              	.LVL776:
 9882              	.L872:
 328:src/keys.c    ****   }
 9883              		.loc 1 328 9 view .LVU3112
 9884              	.LBE650:
ARM GAS  /tmp/cciIzcMf.s 			page 281


 9885              	.LBE657:
 9886              	.LBE1126:
 9887              	.LBB1127:
 9888              	.LBB998:
2550:src/keys.c    **** 	const int opcode = getprog(pc);
 9889              		.loc 1 2550 27 view .LVU3113
 9890 14e4 4FF0030B 		mov	fp, #3
 9891 14e8 C4E4     		b	.L685
 9892              	.LVL777:
 9893              	.L880:
2550:src/keys.c    **** 	const int opcode = getprog(pc);
 9894              		.loc 1 2550 27 view .LVU3114
 9895              	.LBE998:
 9896              	.LBE1127:
 9897              	.LBB1128:
 9898              	.LBB786:
 9899              	.LBB771:
 9900              	.LBB766:
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 9901              		.loc 1 436 10 view .LVU3115
 9902 14ea 0422     		movs	r2, #4
 9903              	.L737:
 9904              	.LVL778:
 440:src/keys.c    **** }
 9905              		.loc 1 440 2 is_stmt 1 view .LVU3116
 9906              	.LBB762:
 119:src/keys.c    **** {
 9907              		.loc 1 119 12 view .LVU3117
 9908              	.LBB758:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9909              		.loc 1 121 2 view .LVU3118
 131:src/keys.c    **** }
 9910              		.loc 1 131 2 view .LVU3119
 131:src/keys.c    **** }
 9911              		.loc 1 131 23 is_stmt 0 view .LVU3120
 9912 14ec 8449     		ldr	r1, .L1167+12
 9913              	.LBE758:
 9914              	.LBE762:
 440:src/keys.c    **** }
 9915              		.loc 1 440 49 view .LVU3121
 9916 14ee DFF81CC2 		ldr	ip, .L1167+24
 9917              	.LBB763:
 9918              	.LBB759:
 131:src/keys.c    **** }
 9919              		.loc 1 131 23 view .LVU3122
 9920 14f2 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9921              	.LBE759:
 9922              	.LBE763:
 440:src/keys.c    **** }
 9923              		.loc 1 440 49 view .LVU3123
 9924 14f4 4FF0060E 		mov	lr, #6
 9925 14f8 0EFB01C1 		mla	r1, lr, r1, ip
 9926 14fc 063C     		subs	r4, r4, #6
 9927 14fe 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9928              	.LVL779:
 440:src/keys.c    **** }
 9929              		.loc 1 440 49 view .LVU3124
ARM GAS  /tmp/cciIzcMf.s 			page 282


 9930              	.LBE766:
 9931              	.LBE771:
1395:src/keys.c    **** 
 9932              		.loc 1 1395 2 is_stmt 1 view .LVU3125
1397:src/keys.c    **** 	case K10:	// STO
 9933              		.loc 1 1397 2 view .LVU3126
 9934 1500 212C     		cmp	r4, #33
 9935 1502 3FF616AF 		bhi	.L740
 9936 1506 01A1     		adr	r1, .L742
 9937 1508 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9938              		.p2align 2
 9939              	.L742:
 9940 150c 691B0000 		.word	.L749+1
 9941 1510 431B0000 		.word	.L748+1
 9942 1514 33130000 		.word	.L740+1
 9943 1518 33130000 		.word	.L740+1
 9944 151c 33130000 		.word	.L740+1
 9945 1520 33130000 		.word	.L740+1
 9946 1524 AF1A0000 		.word	.L747+1
 9947 1528 33130000 		.word	.L740+1
 9948 152c 33130000 		.word	.L740+1
 9949 1530 33130000 		.word	.L740+1
 9950 1534 FD050000 		.word	.L746+1
 9951 1538 33130000 		.word	.L740+1
 9952 153c FB1A0000 		.word	.L745+1
 9953 1540 33130000 		.word	.L740+1
 9954 1544 33130000 		.word	.L740+1
 9955 1548 33130000 		.word	.L740+1
 9956 154c 33130000 		.word	.L740+1
 9957 1550 33130000 		.word	.L740+1
 9958 1554 D71A0000 		.word	.L744+1
 9959 1558 33130000 		.word	.L740+1
 9960 155c 33130000 		.word	.L740+1
 9961 1560 33130000 		.word	.L740+1
 9962 1564 33130000 		.word	.L740+1
 9963 1568 33130000 		.word	.L740+1
 9964 156c 33130000 		.word	.L740+1
 9965 1570 33130000 		.word	.L740+1
 9966 1574 33130000 		.word	.L740+1
 9967 1578 33130000 		.word	.L740+1
 9968 157c 33130000 		.word	.L740+1
 9969 1580 33130000 		.word	.L740+1
 9970 1584 271B0000 		.word	.L743+1
 9971 1588 33130000 		.word	.L740+1
 9972 158c 33130000 		.word	.L740+1
 9973 1590 951A0000 		.word	.L741+1
 9974              	.LVL780:
 9975              		.p2align 1
 9976              	.L1138:
1397:src/keys.c    **** 	case K10:	// STO
 9977              		.loc 1 1397 2 is_stmt 0 view .LVU3127
 9978 1594 0093     		str	r3, [sp]
 9979              	.LBE786:
 9980              	.LBE1128:
 9981              	.LBB1129:
 9982              	.LBB825:
2681:src/keys.c    **** 	const int g_max = global_regs();
ARM GAS  /tmp/cciIzcMf.s 			page 283


 9983              		.loc 1 2681 33 view .LVU3128
 9984 1596 FFF7FEFF 		bl	local_regs
 9985              	.LVL781:
2681:src/keys.c    **** 	const int g_max = global_regs();
 9986              		.loc 1 2681 33 view .LVU3129
 9987 159a 009B     		ldr	r3, [sp]
 9988 159c 8146     		mov	r9, r0
 9989 159e C6E5     		b	.L711
 9990              	.LVL782:
 9991              	.L1141:
2697:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9992              		.loc 1 2697 50 view .LVU3130
 9993 15a0 0D2C     		cmp	r4, #13
 9994 15a2 7FF4D5AD 		bne	.L719
2698:src/keys.c    **** 		set_smode(SDISP_SHOW);
 9995              		.loc 1 2698 3 is_stmt 1 view .LVU3131
 9996 15a6 012B     		cmp	r3, #1
 9997 15a8 14BF     		ite	ne
 9998 15aa 2C20     		movne	r0, #44
 9999              	.LVL783:
2698:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10000              		.loc 1 2698 3 is_stmt 0 view .LVU3132
 10001 15ac 2B20     		moveq	r0, #43
 10002 15ae FFF7FEFF 		bl	set_window
 10003              	.LVL784:
2699:src/keys.c    **** 	}
 10004              		.loc 1 2699 3 is_stmt 1 view .LVU3133
 10005              	.LBB820:
 10006              	.LBI820:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10007              		.loc 1 646 13 view .LVU3134
 10008              	.LBB821:
 647:src/keys.c    **** }
 10009              		.loc 1 647 2 view .LVU3135
 647:src/keys.c    **** }
 10010              		.loc 1 647 15 is_stmt 0 view .LVU3136
 10011 15b2 98F81130 		ldrb	r3, [r8, #17]	@ zero_extendqisi2
 10012 15b6 013B     		subs	r3, r3, #1
 10013 15b8 18BF     		it	ne
 10014 15ba 0123     		movne	r3, #1
 10015 15bc 88F81130 		strb	r3, [r8, #17]
 10016              	.LVL785:
 647:src/keys.c    **** }
 10017              		.loc 1 647 15 view .LVU3137
 10018              	.LBE821:
 10019              	.LBE820:
2706:src/keys.c    **** 	case K_DOWN:
 10020              		.loc 1 2706 2 is_stmt 1 view .LVU3138
2706:src/keys.c    **** 	case K_DOWN:
 10021              		.loc 1 2706 2 is_stmt 0 view .LVU3139
 10022              	.LBE825:
 10023              	.LBE1129:
 10024              	.LBE1212:
 10025              	.LBE1271:
3105:src/keys.c    ****     case STATE_SST:
 10026              		.loc 1 3105 5 is_stmt 1 view .LVU3140
 10027              	.LBB1272:
ARM GAS  /tmp/cciIzcMf.s 			page 284


 10028              	.LBB1213:
 10029              	.LBB1130:
 10030              	.LBB826:
2757:src/keys.c    **** 	}
 10031              		.loc 1 2757 10 is_stmt 0 view .LVU3141
 10032 15c0 4FF0330B 		mov	fp, #51
 10033 15c4 FEF770BD 		b	.L565
 10034              	.LVL786:
 10035              	.L1107:
2757:src/keys.c    **** 	}
 10036              		.loc 1 2757 10 view .LVU3142
 10037              	.LBE826:
 10038              	.LBE1130:
2912:src/keys.c    **** 		if (shift == SHIFT_H)
 10039              		.loc 1 2912 4 is_stmt 1 view .LVU3143
 10040              	.LBB1131:
 10041              	.LBI1003:
 843:src/keys.c    **** 
 10042              		.loc 1 843 12 view .LVU3144
 10043              	.LBB1032:
 846:src/keys.c    **** 		// Row 1
 10044              		.loc 1 846 2 view .LVU3145
 897:src/keys.c    **** 		STATE_UNFINISHED,
 10045              		.loc 1 897 2 view .LVU3146
 904:src/keys.c    **** 	int lc = keycode_to_linear(c);
 10046              		.loc 1 904 2 view .LVU3147
 10047              	.LBB1008:
 10048              	.LBI1008:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 10049              		.loc 1 102 13 view .LVU3148
 10050              	.LBE1008:
 10051              	.LBE1032:
 10052              	.LBE1131:
 10053              	.LBE1213:
 10054              	.LBE1272:
 103:src/keys.c    **** }
 10055              		.loc 1 103 2 view .LVU3149
 10056              	.LBB1273:
 10057              	.LBB1214:
 10058              	.LBB1132:
 10059              	.LBB1033:
 10060              	.LBB1019:
 10061              	.LBB1009:
 10062              	.LBI1009:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 10063              		.loc 1 92 20 view .LVU3150
 10064              	.LBB1010:
  93:src/keys.c    **** 	State2.shifts = shift;
 10065              		.loc 1 93 2 view .LVU3151
 10066              	.LBB1011:
 10067              	.LBI1011:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 10068              		.loc 1 84 13 view .LVU3152
 10069              	.LBB1012:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10070              		.loc 1 85 2 view .LVU3153
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/cciIzcMf.s 			page 285


 10071              		.loc 1 85 18 is_stmt 0 view .LVU3154
 10072 15c8 FFF7FEFF 		bl	shift_down
 10073              	.LVL787:
  86:src/keys.c    **** }
 10074              		.loc 1 86 2 is_stmt 1 view .LVU3155
  86:src/keys.c    **** }
 10075              		.loc 1 86 52 is_stmt 0 view .LVU3156
 10076 15cc 0346     		mov	r3, r0
 10077 15ce 08B9     		cbnz	r0, .L769
 10078 15d0 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10079              	.L769:
 10080              	.LVL788:
  86:src/keys.c    **** }
 10081              		.loc 1 86 52 view .LVU3157
 10082              	.LBE1012:
 10083              	.LBE1011:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 10084              		.loc 1 94 2 is_stmt 1 view .LVU3158
 10085              	.LBE1010:
 10086              	.LBE1009:
 10087              	.LBE1019:
 10088              	.LBB1020:
 10089              	.LBB1021:
 146:src/keys.c    **** }
 10090              		.loc 1 146 23 is_stmt 0 view .LVU3159
 10091 15d4 474A     		ldr	r2, .L1167
 10092              	.LBE1021:
 10093              	.LBE1020:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10094              		.loc 1 906 21 view .LVU3160
 10095 15d6 DFF838C1 		ldr	ip, .L1167+28
 10096              	.LBB1024:
 10097              	.LBB1022:
 146:src/keys.c    **** }
 10098              		.loc 1 146 23 view .LVU3161
 10099 15da 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 10100              	.LBE1022:
 10101              	.LBE1024:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10102              		.loc 1 906 21 view .LVU3162
 10103 15dc 4200     		lsls	r2, r0, #1
 10104 15de 022B     		cmp	r3, #2
 10105 15e0 08BF     		it	eq
 10106 15e2 0132     		addeq	r2, r2, #1
 10107              	.LBB1025:
 10108              	.LBB1016:
 10109              	.LBB1013:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 10110              		.loc 1 94 16 view .LVU3163
 10111 15e4 0021     		movs	r1, #0
 10112              	.LBE1013:
 10113              	.LBE1016:
 10114              	.LBE1025:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10115              		.loc 1 906 21 view .LVU3164
 10116 15e6 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 10117              	.LBB1026:
ARM GAS  /tmp/cciIzcMf.s 			page 286


 10118              	.LBB1017:
 10119              	.LBB1014:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 10120              		.loc 1 94 16 view .LVU3165
 10121 15ea 88F81010 		strb	r1, [r8, #16]
  95:src/keys.c    **** 	return r;
 10122              		.loc 1 95 2 is_stmt 1 view .LVU3166
 10123 15ee 0BF4704A 		and	r10, fp, #61440
 10124              	.LVL789:
  95:src/keys.c    **** 	return r;
 10125              		.loc 1 95 2 is_stmt 0 view .LVU3167
 10126              	.LBE1014:
 10127              	.LBE1017:
 10128              	.LBE1026:
 908:src/keys.c    **** 		op &= ~NO_INT;
 10129              		.loc 1 908 5 view .LVU3168
 10130 15f2 BAF5704F 		cmp	r10, #61440
 10131              	.LBB1027:
 10132              	.LBB1018:
 10133              	.LBB1015:
  95:src/keys.c    **** 	return r;
 10134              		.loc 1 95 19 view .LVU3169
 10135 15f6 88F80D10 		strb	r1, [r8, #13]
  96:src/keys.c    **** }
 10136              		.loc 1 96 2 is_stmt 1 view .LVU3170
 10137              	.LVL790:
  96:src/keys.c    **** }
 10138              		.loc 1 96 2 is_stmt 0 view .LVU3171
 10139              	.LBE1015:
 10140              	.LBE1018:
 10141              	.LBE1027:
 905:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10142              		.loc 1 905 2 is_stmt 1 view .LVU3172
 10143              	.LBB1028:
 10144              	.LBI1020:
 134:src/keys.c    **** {
 10145              		.loc 1 134 12 view .LVU3173
 10146              	.LBB1023:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10147              		.loc 1 136 2 view .LVU3174
 146:src/keys.c    **** }
 10148              		.loc 1 146 2 view .LVU3175
 146:src/keys.c    **** }
 10149              		.loc 1 146 2 is_stmt 0 view .LVU3176
 10150              	.LBE1023:
 10151              	.LBE1028:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10152              		.loc 1 906 2 is_stmt 1 view .LVU3177
 907:src/keys.c    **** 	if (no_int)
 10153              		.loc 1 907 2 view .LVU3178
 908:src/keys.c    **** 		op &= ~NO_INT;
 10154              		.loc 1 908 2 view .LVU3179
 908:src/keys.c    **** 		op &= ~NO_INT;
 10155              		.loc 1 908 5 is_stmt 0 view .LVU3180
 10156 15fa 00F06681 		beq	.L1147
 911:src/keys.c    **** 	case K00:
 10157              		.loc 1 911 2 is_stmt 1 view .LVU3181
ARM GAS  /tmp/cciIzcMf.s 			page 287


 10158 15fe 282C     		cmp	r4, #40
 10159 1600 23D8     		bhi	.L789
 10160 1602 DFE804F0 		tbb	[pc, r4]
 10161              	.L844:
 10162 1606 87       		.byte	(.L781-.L844)/2
 10163 1607 28       		.byte	(.L779-.L844)/2
 10164 1608 22       		.byte	(.L789-.L844)/2
 10165 1609 28       		.byte	(.L779-.L844)/2
 10166 160a 22       		.byte	(.L789-.L844)/2
 10167 160b 22       		.byte	(.L789-.L844)/2
 10168 160c 22       		.byte	(.L789-.L844)/2
 10169 160d 22       		.byte	(.L789-.L844)/2
 10170 160e 22       		.byte	(.L789-.L844)/2
 10171 160f 22       		.byte	(.L789-.L844)/2
 10172 1610 22       		.byte	(.L789-.L844)/2
 10173 1611 22       		.byte	(.L789-.L844)/2
 10174 1612 15       		.byte	(.L778-.L844)/2
 10175 1613 22       		.byte	(.L789-.L844)/2
 10176 1614 22       		.byte	(.L789-.L844)/2
 10177 1615 22       		.byte	(.L789-.L844)/2
 10178 1616 22       		.byte	(.L789-.L844)/2
 10179 1617 22       		.byte	(.L789-.L844)/2
 10180 1618 9D       		.byte	(.L777-.L844)/2
 10181 1619 5D       		.byte	(.L776-.L844)/2
 10182 161a 22       		.byte	(.L789-.L844)/2
 10183 161b 22       		.byte	(.L789-.L844)/2
 10184 161c 22       		.byte	(.L789-.L844)/2
 10185 161d 22       		.byte	(.L789-.L844)/2
 10186 161e 22       		.byte	(.L789-.L844)/2
 10187 161f 22       		.byte	(.L789-.L844)/2
 10188 1620 22       		.byte	(.L789-.L844)/2
 10189 1621 22       		.byte	(.L789-.L844)/2
 10190 1622 22       		.byte	(.L789-.L844)/2
 10191 1623 22       		.byte	(.L789-.L844)/2
 10192 1624 45       		.byte	(.L775-.L844)/2
 10193 1625 36       		.byte	(.L774-.L844)/2
 10194 1626 4C       		.byte	(.L772-.L844)/2
 10195 1627 4C       		.byte	(.L772-.L844)/2
 10196 1628 22       		.byte	(.L789-.L844)/2
 10197 1629 22       		.byte	(.L789-.L844)/2
 10198 162a 22       		.byte	(.L789-.L844)/2
 10199 162b 22       		.byte	(.L789-.L844)/2
 10200 162c 22       		.byte	(.L789-.L844)/2
 10201 162d 4C       		.byte	(.L772-.L844)/2
 10202 162e 4C       		.byte	(.L772-.L844)/2
 10203 162f 00       		.p2align 1
 10204              	.L778:
 943:src/keys.c    **** 			if (is_bad_cmdline())
 10205              		.loc 1 943 3 view .LVU3182
 943:src/keys.c    **** 			if (is_bad_cmdline())
 10206              		.loc 1 943 6 is_stmt 0 view .LVU3183
 10207 1630 012B     		cmp	r3, #1
 10208 1632 00F00E83 		beq	.L1148
 10209              	.LVL791:
 10210              	.L783:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10211              		.loc 1 991 2 is_stmt 1 view .LVU3184
ARM GAS  /tmp/cciIzcMf.s 			page 288


 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10212              		.loc 1 991 5 is_stmt 0 view .LVU3185
 10213 1636 BAF5704F 		cmp	r10, #61440
 10214 163a 06D1     		bne	.L789
 10215              	.L771:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10216              		.loc 1 991 13 view .LVU3186
 10217 163c 314B     		ldr	r3, .L1167+16
 10218 163e 1B68     		ldr	r3, [r3]
 10219 1640 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10220 1644 DB07     		lsls	r3, r3, #31
 10221 1646 3FF5BAA8 		bmi	.L1067
 10222              	.L789:
 994:src/keys.c    **** #undef NO_INT
 10223              		.loc 1 994 2 is_stmt 1 view .LVU3187
 10224              	.LVL792:
 10225              	.LBB1029:
 10226              	.LBI1005:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10227              		.loc 1 619 12 view .LVU3188
 10228              	.LBB1007:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10229              		.loc 1 620 2 view .LVU3189
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10230              		.loc 1 620 6 is_stmt 0 view .LVU3190
 10231 164a 4FEA2B23 		asr	r3, fp, #8
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10232              		.loc 1 620 5 view .LVU3191
 10233 164e 012B     		cmp	r3, #1
 10234 1650 7EF49EAF 		bne	.L594
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10235              		.loc 1 620 5 view .LVU3192
 10236 1654 97E4     		b	.L852
 10237              	.LVL793:
 10238              	.L779:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10239              		.loc 1 620 5 view .LVU3193
 10240              	.LBE1007:
 10241              	.LBE1029:
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10242              		.loc 1 932 4 is_stmt 1 view .LVU3194
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10243              		.loc 1 932 8 is_stmt 0 view .LVU3195
 10244 1656 2B4A     		ldr	r2, .L1167+16
 10245 1658 1268     		ldr	r2, [r2]
 10246 165a 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10247              		.loc 1 932 7 view .LVU3196
 10248 165e D207     		lsls	r2, r2, #31
 10249 1660 E9D5     		bpl	.L783
 10250              	.L1072:
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10251              		.loc 1 932 20 view .LVU3197
 10252 1662 012B     		cmp	r3, #1
 10253 1664 00F03283 		beq	.L1149
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10254              		.loc 1 991 2 is_stmt 1 view .LVU3198
ARM GAS  /tmp/cciIzcMf.s 			page 289


 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10255              		.loc 1 991 5 is_stmt 0 view .LVU3199
 10256 1668 BAF5704F 		cmp	r10, #61440
 10257 166c EDD1     		bne	.L789
 10258 166e FFF7A6B8 		b	.L1067
 10259              	.L774:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10260              		.loc 1 963 3 is_stmt 1 view .LVU3200
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10261              		.loc 1 963 7 is_stmt 0 view .LVU3201
 10262 1672 FFF7FEFF 		bl	is_bad_cmdline
 10263              	.LVL794:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10264              		.loc 1 963 6 view .LVU3202
 10265 1676 0446     		mov	r4, r0
 10266              	.LVL795:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10267              		.loc 1 963 6 view .LVU3203
 10268 1678 0028     		cmp	r0, #0
 10269 167a 7FF4A0A8 		bne	.L1067
 965:src/keys.c    **** 		State2.test = op;
 10270              		.loc 1 965 3 is_stmt 1 view .LVU3204
 10271 167e FFF7FEFF 		bl	process_cmdline_set_lift
 10272              	.LVL796:
 966:src/keys.c    **** 		return STATE_UNFINISHED;
 10273              		.loc 1 966 3 view .LVU3205
 10274              	.LBE1033:
 10275              	.LBE1132:
 10276              	.LBE1214:
 10277              	.LBE1273:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 10278              		.loc 1 2948 7 is_stmt 0 view .LVU3206
 10279 1682 2746     		mov	r7, r4
 10280              	.LBB1274:
 10281              	.LBB1215:
 10282              	.LBB1133:
 10283              	.LBB1034:
 966:src/keys.c    **** 		return STATE_UNFINISHED;
 10284              		.loc 1 966 15 view .LVU3207
 10285 1684 88F80FB0 		strb	fp, [r8, #15]
 967:src/keys.c    **** 
 10286              		.loc 1 967 3 is_stmt 1 view .LVU3208
 967:src/keys.c    **** 
 10287              		.loc 1 967 10 is_stmt 0 view .LVU3209
 10288 1688 4FF0330B 		mov	fp, #51
 10289              	.LVL797:
 967:src/keys.c    **** 
 10290              		.loc 1 967 10 view .LVU3210
 10291 168c FEF70CBD 		b	.L565
 10292              	.LVL798:
 10293              	.L775:
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10294              		.loc 1 971 3 is_stmt 1 view .LVU3211
 10295 1690 0093     		str	r3, [sp]
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10296              		.loc 1 971 18 is_stmt 0 view .LVU3212
 10297 1692 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/cciIzcMf.s 			page 290


 10298              	.LVL799:
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10299              		.loc 1 971 6 view .LVU3213
 10300 1696 009B     		ldr	r3, [sp]
 10301 1698 0028     		cmp	r0, #0
 10302 169a 40F00783 		bne	.L1150
 10303              	.L772:
 980:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10304              		.loc 1 980 3 is_stmt 1 view .LVU3214
 980:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10305              		.loc 1 980 6 is_stmt 0 view .LVU3215
 10306 169e BBF59C7F 		cmp	fp, #312
 10307 16a2 40F0E482 		bne	.L1151
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10308              		.loc 1 991 2 is_stmt 1 view .LVU3216
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10309              		.loc 1 991 5 is_stmt 0 view .LVU3217
 10310 16a6 BAF5704F 		cmp	r10, #61440
 10311 16aa 7FF46CAC 		bne	.L852
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10312              		.loc 1 991 13 view .LVU3218
 10313 16ae 154B     		ldr	r3, .L1167+16
 10314 16b0 1B68     		ldr	r3, [r3]
 10315 16b2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10316 16b6 DB07     		lsls	r3, r3, #31
 10317 16b8 7FF565AC 		bpl	.L852
 10318 16bc FFF77FB8 		b	.L1067
 10319              	.LVL800:
 10320              	.L776:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10321              		.loc 1 952 4 is_stmt 1 view .LVU3219
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10322              		.loc 1 952 7 is_stmt 0 view .LVU3220
 10323 16c0 022B     		cmp	r3, #2
 10324 16c2 B8D1     		bne	.L783
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10325              		.loc 1 952 27 view .LVU3221
 10326 16c4 0F4B     		ldr	r3, .L1167+16
 10327              	.LVL801:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10328              		.loc 1 952 27 view .LVU3222
 10329 16c6 1B68     		ldr	r3, [r3]
 10330 16c8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10331 16cc DC07     		lsls	r4, r3, #31
 10332 16ce B2D5     		bpl	.L783
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10333              		.loc 1 952 45 view .LVU3223
 10334 16d0 0D20     		movs	r0, #13
 10335              	.LVL802:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10336              		.loc 1 952 45 view .LVU3224
 10337 16d2 FFF7FEFF 		bl	intltr
 10338              	.LVL803:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10339              		.loc 1 952 42 view .LVU3225
 10340 16d6 0028     		cmp	r0, #0
 10341 16d8 ADD0     		beq	.L783
ARM GAS  /tmp/cciIzcMf.s 			page 291


 10342              	.LVL804:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10343              		.loc 1 952 42 view .LVU3226
 10344              	.LBE1034:
 10345              	.LBE1133:
 10346              	.LBE1215:
 10347              	.LBE1274:
3141:src/keys.c    **** 	NonProgrammable = 0;
 10348              		.loc 1 3141 7 is_stmt 1 view .LVU3227
3141:src/keys.c    **** 	NonProgrammable = 0;
 10349              		.loc 1 3141 11 is_stmt 0 view .LVU3228
 10350 16da 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3141:src/keys.c    **** 	NonProgrammable = 0;
 10351              		.loc 1 3141 10 view .LVU3229
 10352 16de 5906     		lsls	r1, r3, #25
 10353 16e0 40F1F182 		bpl	.L884
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10354              		.loc 1 3142 2 is_stmt 1 view .LVU3230
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10355              		.loc 1 3142 18 is_stmt 0 view .LVU3231
 10356 16e4 084B     		ldr	r3, .L1167+20
 10357 16e6 0022     		movs	r2, #0
 10358              	.LBB1275:
 10359              	.LBB1216:
 10360              	.LBB1134:
 10361              	.LBB1035:
 953:src/keys.c    **** 	  }
 10362              		.loc 1 953 13 view .LVU3232
 10363 16e8 4FF0120B 		mov	fp, #18
 10364              	.LBE1035:
 10365              	.LBE1134:
 10366              	.LBE1216:
 10367              	.LBE1275:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10368              		.loc 1 3142 18 view .LVU3233
 10369 16ec 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10370              		.loc 1 3143 2 is_stmt 1 view .LVU3234
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10371              		.loc 1 3143 32 is_stmt 0 view .LVU3235
 10372 16ee 5846     		mov	r0, fp
 10373 16f0 FEF7C9BF 		b	.L835
 10374              	.L1168:
 10375              		.align	2
 10376              	.L1167:
 10377 16f4 00000000 		.word	.LANCHOR18
 10378 16f8 00000000 		.word	.LANCHOR17
 10379 16fc 00000000 		.word	.LANCHOR11
 10380 1700 00000000 		.word	.LANCHOR1
 10381 1704 00000000 		.word	main_ram
 10382 1708 00000000 		.word	NonProgrammable
 10383 170c 00000000 		.word	.LANCHOR9
 10384 1710 00000000 		.word	.LANCHOR19
 10385              	.LVL805:
 10386              	.L781:
 10387              	.LBB1276:
 10388              	.LBB1217:
ARM GAS  /tmp/cciIzcMf.s 			page 292


 10389              	.LBB1135:
 10390              	.LBB1036:
 913:src/keys.c    **** 	    State2.hyp = 1;
 10391              		.loc 1 913 4 is_stmt 1 view .LVU3236
 913:src/keys.c    **** 	    State2.hyp = 1;
 10392              		.loc 1 913 8 is_stmt 0 view .LVU3237
 10393 1714 DC4A     		ldr	r2, .L1169
 10394 1716 1268     		ldr	r2, [r2]
 10395 1718 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 913:src/keys.c    **** 	    State2.hyp = 1;
 10396              		.loc 1 913 7 view .LVU3238
 10397 171c D107     		lsls	r1, r2, #31
 10398 171e A0D4     		bmi	.L1072
 914:src/keys.c    **** 	    State2.dot = op;
 10399              		.loc 1 914 6 is_stmt 1 view .LVU3239
 915:src/keys.c    **** 	    // State2.cmplx = 0;
 10400              		.loc 1 915 6 view .LVU3240
 914:src/keys.c    **** 	    State2.dot = op;
 10401              		.loc 1 914 17 is_stmt 0 view .LVU3241
 10402 1720 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10403 1724 0BF00103 		and	r3, fp, #1
 10404              	.LVL806:
 914:src/keys.c    **** 	    State2.dot = op;
 10405              		.loc 1 914 17 view .LVU3242
 10406 1728 9B01     		lsls	r3, r3, #6
 10407 172a 43F02003 		orr	r3, r3, #32
 10408 172e 22F06002 		bic	r2, r2, #96
 10409 1732 1343     		orrs	r3, r3, r2
 10410 1734 88F81530 		strb	r3, [r8, #21]
 917:src/keys.c    **** 	  }
 10411              		.loc 1 917 6 is_stmt 1 view .LVU3243
 917:src/keys.c    **** 	  }
 10412              		.loc 1 917 13 is_stmt 0 view .LVU3244
 10413 1738 4FF0330B 		mov	fp, #51
 10414              	.LVL807:
 917:src/keys.c    **** 	  }
 10415              		.loc 1 917 13 view .LVU3245
 10416 173c FEF7B4BC 		b	.L565
 10417              	.LVL808:
 10418              	.L777:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10419              		.loc 1 957 4 is_stmt 1 view .LVU3246
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10420              		.loc 1 957 7 is_stmt 0 view .LVU3247
 10421 1740 022B     		cmp	r3, #2
 10422 1742 7FF478AF 		bne	.L783
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10423              		.loc 1 957 27 view .LVU3248
 10424 1746 D04B     		ldr	r3, .L1169
 10425              	.LVL809:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10426              		.loc 1 957 27 view .LVU3249
 10427 1748 1B68     		ldr	r3, [r3]
 10428 174a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10429 174e D807     		lsls	r0, r3, #31
 10430              	.LVL810:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
ARM GAS  /tmp/cciIzcMf.s 			page 293


 10431              		.loc 1 957 27 view .LVU3250
 10432 1750 7FF571AF 		bpl	.L783
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10433              		.loc 1 957 45 view .LVU3251
 10434 1754 0E20     		movs	r0, #14
 10435 1756 FFF7FEFF 		bl	intltr
 10436              	.LVL811:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10437              		.loc 1 957 42 view .LVU3252
 10438 175a 0028     		cmp	r0, #0
 10439 175c 3FF46BAF 		beq	.L783
 10440              	.LVL812:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10441              		.loc 1 957 42 view .LVU3253
 10442              	.LBE1036:
 10443              	.LBE1135:
 10444              	.LBE1217:
 10445              	.LBE1276:
3141:src/keys.c    **** 	NonProgrammable = 0;
 10446              		.loc 1 3141 7 is_stmt 1 view .LVU3254
3141:src/keys.c    **** 	NonProgrammable = 0;
 10447              		.loc 1 3141 11 is_stmt 0 view .LVU3255
 10448 1760 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3141:src/keys.c    **** 	NonProgrammable = 0;
 10449              		.loc 1 3141 10 view .LVU3256
 10450 1764 5A06     		lsls	r2, r3, #25
 10451 1766 40F1D282 		bpl	.L885
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10452              		.loc 1 3142 2 is_stmt 1 view .LVU3257
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10453              		.loc 1 3142 18 is_stmt 0 view .LVU3258
 10454 176a C84B     		ldr	r3, .L1169+4
 10455 176c 0022     		movs	r2, #0
 10456              	.LBB1277:
 10457              	.LBB1218:
 10458              	.LBB1136:
 10459              	.LBB1037:
 958:src/keys.c    **** 	  }
 10460              		.loc 1 958 13 view .LVU3259
 10461 176e 4FF0130B 		mov	fp, #19
 10462              	.LBE1037:
 10463              	.LBE1136:
 10464              	.LBE1218:
 10465              	.LBE1277:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10466              		.loc 1 3142 18 view .LVU3260
 10467 1772 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10468              		.loc 1 3143 2 is_stmt 1 view .LVU3261
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10469              		.loc 1 3143 32 is_stmt 0 view .LVU3262
 10470 1774 5846     		mov	r0, fp
 10471 1776 FEF786BF 		b	.L835
 10472              	.LVL813:
 10473              	.L866:
 10474              	.LBB1278:
 10475              	.LBB1219:
ARM GAS  /tmp/cciIzcMf.s 			page 294


 10476              	.LBB1137:
 10477              	.LBB658:
 10478              	.LBB651:
 301:src/keys.c    ****     }
 10479              		.loc 1 301 14 view .LVU3263
 10480 177a 4FF0160B 		mov	fp, #22
 10481 177e FFF7BCBA 		b	.L656
 10482              	.LVL814:
 10483              	.L1140:
 301:src/keys.c    ****     }
 10484              		.loc 1 301 14 view .LVU3264
 10485              	.LBE651:
 10486              	.LBE658:
 10487              	.LBE1137:
 10488              	.LBB1138:
 10489              	.LBB827:
 10490              	.LBB822:
2691:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10491              		.loc 1 2691 3 is_stmt 1 view .LVU3265
2691:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10492              		.loc 1 2691 19 is_stmt 0 view .LVU3266
 10493 1782 B8F80810 		ldrh	r1, [r8, #8]
2691:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10494              		.loc 1 2691 27 view .LVU3267
 10495 1786 0A23     		movs	r3, #10
2691:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10496              		.loc 1 2691 32 view .LVU3268
 10497 1788 03FB01A2 		mla	r2, r3, r1, r10
2691:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10498              		.loc 1 2691 37 view .LVU3269
 10499 178c 6424     		movs	r4, #100
 10500 178e B2FBF4F3 		udiv	r3, r2, r4
 10501 1792 04FB1323 		mls	r3, r4, r3, r2
 10502              	.LVL815:
2692:src/keys.c    **** 			dv = n;
 10503              		.loc 1 2692 3 is_stmt 1 view .LVU3270
2692:src/keys.c    **** 			dv = n;
 10504              		.loc 1 2692 6 is_stmt 0 view .LVU3271
 10505 1796 4B45     		cmp	r3, r9
 10506 1798 09DA     		bge	.L717
2692:src/keys.c    **** 			dv = n;
 10507              		.loc 1 2692 21 view .LVU3272
 10508 179a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2692:src/keys.c    **** 			dv = n;
 10509              		.loc 1 2692 17 view .LVU3273
 10510 179e D407     		lsls	r4, r2, #31
 10511 17a0 3FF505A8 		bmi	.L1059
2692:src/keys.c    **** 			dv = n;
 10512              		.loc 1 2692 36 view .LVU3274
 10513 17a4 8842     		cmp	r0, r1
 10514 17a6 02DD     		ble	.L717
2692:src/keys.c    **** 			dv = n;
 10515              		.loc 1 2692 63 view .LVU3275
 10516 17a8 9842     		cmp	r0, r3
 10517 17aa 3FF700A8 		bgt	.L1059
 10518              	.L717:
2693:src/keys.c    **** 		State2.digval = dv;
ARM GAS  /tmp/cciIzcMf.s 			page 295


 10519              		.loc 1 2693 4 is_stmt 1 view .LVU3276
2693:src/keys.c    **** 		State2.digval = dv;
 10520              		.loc 1 2693 7 is_stmt 0 view .LVU3277
 10521 17ae 5346     		mov	r3, r10
 10522              	.LVL816:
2694:src/keys.c    **** 		goto reset_window;
 10523              		.loc 1 2694 3 is_stmt 1 view .LVU3278
 10524 17b0 FEF7FDBF 		b	.L1059
 10525              	.LVL817:
 10526              	.L1142:
2694:src/keys.c    **** 		goto reset_window;
 10527              		.loc 1 2694 3 is_stmt 0 view .LVU3279
 10528              	.LBE822:
2702:src/keys.c    **** 		goto reset_window;
 10529              		.loc 1 2702 3 is_stmt 1 view .LVU3280
2702:src/keys.c    **** 		goto reset_window;
 10530              		.loc 1 2702 17 is_stmt 0 view .LVU3281
 10531 17b4 A8F808A0 		strh	r10, [r8, #8]	@ movhi
2703:src/keys.c    **** 	}
 10532              		.loc 1 2703 3 is_stmt 1 view .LVU3282
 10533 17b8 FEF7FBBF 		b	.L715
 10534              	.LVL818:
 10535              	.L1136:
2703:src/keys.c    **** 	}
 10536              		.loc 1 2703 3 is_stmt 0 view .LVU3283
 10537              	.LBE827:
 10538              	.LBE1138:
 10539              	.LBB1139:
 10540              	.LBB999:
2552:src/keys.c    **** 	const int direct = State2.runmode;
 10541              		.loc 1 2552 37 view .LVU3284
 10542 17bc 5046     		mov	r0, r10
 10543 17be FFF7FEFF 		bl	getprog
 10544              	.LVL819:
2552:src/keys.c    **** 	const int direct = State2.runmode;
 10545              		.loc 1 2552 63 view .LVU3285
 10546 17c2 20F47062 		bic	r2, r0, #3840
 10547 17c6 FFF75FBB 		b	.L686
 10548              	.LVL820:
 10549              	.L1128:
2552:src/keys.c    **** 	const int direct = State2.runmode;
 10550              		.loc 1 2552 63 view .LVU3286
 10551              	.LBE999:
 10552              	.LBE1139:
 10553              	.LBB1140:
 10554              	.LBB889:
1361:src/keys.c    **** 		if (rawpc == 1)
 10555              		.loc 1 1361 3 is_stmt 1 view .LVU3287
1361:src/keys.c    **** 		if (rawpc == 1)
 10556              		.loc 1 1361 11 is_stmt 0 view .LVU3288
 10557 17ca DFF8BC92 		ldr	r9, .L1169
 10558 17ce D9F80030 		ldr	r3, [r9]
 10559              	.LVL821:
1361:src/keys.c    **** 		if (rawpc == 1)
 10560              		.loc 1 1361 9 view .LVU3289
 10561 17d2 B3F8E007 		ldrh	r0, [r3, #2016]
 10562              	.LVL822:
ARM GAS  /tmp/cciIzcMf.s 			page 296


1362:src/keys.c    **** 			rawpc = 0;
 10563              		.loc 1 1362 3 is_stmt 1 view .LVU3290
1363:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10564              		.loc 1 1363 10 is_stmt 0 view .LVU3291
 10565 17d6 0128     		cmp	r0, #1
 10566              	.LVL823:
1364:src/keys.c    **** 		update_program_bounds(1);
 10567              		.loc 1 1364 3 is_stmt 1 view .LVU3292
 10568 17d8 08BF     		it	eq
 10569 17da 0020     		moveq	r0, #0
 10570              	.LVL824:
1364:src/keys.c    **** 		update_program_bounds(1);
 10571              		.loc 1 1364 3 is_stmt 0 view .LVU3293
 10572 17dc 0021     		movs	r1, #0
 10573 17de FFF7FEFF 		bl	do_dec
 10574              	.LVL825:
1364:src/keys.c    **** 		update_program_bounds(1);
 10575              		.loc 1 1364 3 view .LVU3294
 10576 17e2 FFF7FEFF 		bl	set_pc
 10577              	.LVL826:
1365:src/keys.c    **** 		rawpc = ProgBegin;
 10578              		.loc 1 1365 3 is_stmt 1 view .LVU3295
 10579 17e6 0120     		movs	r0, #1
 10580 17e8 FFF7FEFF 		bl	update_program_bounds
 10581              	.LVL827:
1366:src/keys.c    **** 		goto fin;
 10582              		.loc 1 1366 3 view .LVU3296
1366:src/keys.c    **** 		goto fin;
 10583              		.loc 1 1366 11 is_stmt 0 view .LVU3297
 10584 17ec D9F80030 		ldr	r3, [r9]
1366:src/keys.c    **** 		goto fin;
 10585              		.loc 1 1366 9 view .LVU3298
 10586 17f0 B3F8EC07 		ldrh	r0, [r3, #2028]
 10587              	.LVL828:
1367:src/keys.c    **** 	}
 10588              		.loc 1 1367 3 is_stmt 1 view .LVU3299
 10589 17f4 FFF796B9 		b	.L607
 10590              	.LVL829:
 10591              	.L791:
1367:src/keys.c    **** 	}
 10592              		.loc 1 1367 3 is_stmt 0 view .LVU3300
 10593              	.LBE889:
 10594              	.LBE1140:
 10595              	.LBB1141:
 10596              	.LBB1084:
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10597              		.loc 1 1062 3 is_stmt 1 view .LVU3301
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10598              		.loc 1 1062 7 is_stmt 0 view .LVU3302
 10599 17f8 A34B     		ldr	r3, .L1169
 10600 17fa 1B68     		ldr	r3, [r3]
 10601 17fc 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10602              		.loc 1 1062 6 view .LVU3303
 10603 1800 D407     		lsls	r4, r2, #31
 10604 1802 40F1ED80 		bpl	.L794
1063:src/keys.c    **** 		else
ARM GAS  /tmp/cciIzcMf.s 			page 297


 10605              		.loc 1 1063 4 is_stmt 1 view .LVU3304
1063:src/keys.c    **** 		else
 10606              		.loc 1 1063 57 is_stmt 0 view .LVU3305
 10607 1806 93F9E737 		ldrsb	r3, [r3, #2023]
 10608 180a 002B     		cmp	r3, #0
 10609 180c 40F2531B 		movw	fp, #339
 10610 1810 A8BF     		it	ge
 10611 1812 4FF4AA7B 		movge	fp, #340
 10612 1816 DAE5     		b	.L796
 10613              	.LVL830:
 10614              	.L674:
1063:src/keys.c    **** 		else
 10615              		.loc 1 1063 57 view .LVU3306
 10616              	.LBE1084:
 10617              	.LBE1141:
 10618              	.LBB1142:
 10619              	.LBB732:
2390:src/keys.c    **** 			if (State2.numdigit == 0)
 10620              		.loc 1 2390 3 is_stmt 1 view .LVU3307
2390:src/keys.c    **** 			if (State2.numdigit == 0)
 10621              		.loc 1 2390 6 is_stmt 0 view .LVU3308
 10622 1818 0329     		cmp	r1, #3
 10623 181a 3EF489AE 		beq	.L679
2391:src/keys.c    **** 				reset_multi();
 10624              		.loc 1 2391 4 is_stmt 1 view .LVU3309
2391:src/keys.c    **** 				reset_multi();
 10625              		.loc 1 2391 14 is_stmt 0 view .LVU3310
 10626 181e 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2391:src/keys.c    **** 				reset_multi();
 10627              		.loc 1 2391 7 view .LVU3311
 10628 1822 83B3     		cbz	r3, .L681
2394:src/keys.c    **** 			return STATE_UNFINISHED;
 10629              		.loc 1 2394 5 is_stmt 1 view .LVU3312
2394:src/keys.c    **** 			return STATE_UNFINISHED;
 10630              		.loc 1 2394 20 is_stmt 0 view .LVU3313
 10631 1824 013B     		subs	r3, r3, #1
 10632 1826 88F80B30 		strb	r3, [r8, #11]
2395:src/keys.c    **** 		}
 10633              		.loc 1 2395 11 view .LVU3314
 10634 182a 4FF0330B 		mov	fp, #51
 10635 182e FEF73BBC 		b	.L565
 10636              	.L1113:
2380:src/keys.c    **** 				break;
 10637              		.loc 1 2380 3 is_stmt 1 view .LVU3315
2380:src/keys.c    **** 				break;
 10638              		.loc 1 2380 6 is_stmt 0 view .LVU3316
 10639 1832 0029     		cmp	r1, #0
 10640 1834 7EF474AE 		bne	.L676
2382:src/keys.c    **** 		if (State2.numdigit == 0)
 10641              		.loc 1 2382 3 is_stmt 1 view .LVU3317
 10642              	.LBB723:
 10643              	.LBI723:
2357:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10644              		.loc 1 2357 13 view .LVU3318
 10645              	.LBB724:
2359:src/keys.c    **** 	if (! State2.alphas )
 10646              		.loc 1 2359 2 view .LVU3319
ARM GAS  /tmp/cciIzcMf.s 			page 298


2360:src/keys.c    **** 		State2.alphashift = 0;
 10647              		.loc 1 2360 6 is_stmt 0 view .LVU3320
 10648 1838 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2359:src/keys.c    **** 	if (! State2.alphas )
 10649              		.loc 1 2359 15 view .LVU3321
 10650 183c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2360:src/keys.c    **** 		State2.alphashift = 0;
 10651              		.loc 1 2360 5 view .LVU3322
 10652 1840 1807     		lsls	r0, r3, #28
2361:src/keys.c    **** }
 10653              		.loc 1 2361 21 view .LVU3323
 10654 1842 5CBF     		itt	pl
 10655 1844 61F30413 		bfipl	r3, r1, #4, #1
 10656 1848 88F81630 		strbpl	r3, [r8, #22]
 10657              	.LBE724:
 10658              	.LBE723:
2383:src/keys.c    **** 			return STATE_UNFINISHED;
 10659              		.loc 1 2383 13 view .LVU3324
 10660 184c 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 10661              	.LBB726:
 10662              	.LBB725:
2359:src/keys.c    **** 	if (! State2.alphas )
 10663              		.loc 1 2359 15 view .LVU3325
 10664 1850 61F3C302 		bfi	r2, r1, #3, #1
 10665 1854 88F81520 		strb	r2, [r8, #21]
2360:src/keys.c    **** 		State2.alphashift = 0;
 10666              		.loc 1 2360 2 is_stmt 1 view .LVU3326
2361:src/keys.c    **** }
 10667              		.loc 1 2361 3 view .LVU3327
 10668              	.LBE725:
 10669              	.LBE726:
2383:src/keys.c    **** 			return STATE_UNFINISHED;
 10670              		.loc 1 2383 3 view .LVU3328
2383:src/keys.c    **** 			return STATE_UNFINISHED;
 10671              		.loc 1 2383 6 is_stmt 0 view .LVU3329
 10672 1858 002B     		cmp	r3, #0
 10673 185a 3EF4B0AF 		beq	.L1067
2385:src/keys.c    **** 			State2.digval2 = 0;
 10674              		.loc 1 2385 8 is_stmt 1 view .LVU3330
2385:src/keys.c    **** 			State2.digval2 = 0;
 10675              		.loc 1 2385 11 is_stmt 0 view .LVU3331
 10676 185e 012B     		cmp	r3, #1
2386:src/keys.c    **** 		goto fin;
 10677              		.loc 1 2386 19 view .LVU3332
 10678 1860 4FF00003 		mov	r3, #0
2385:src/keys.c    **** 			State2.digval2 = 0;
 10679              		.loc 1 2385 11 view .LVU3333
 10680 1864 7EF485AE 		bne	.L678
2386:src/keys.c    **** 		goto fin;
 10681              		.loc 1 2386 4 is_stmt 1 view .LVU3334
2386:src/keys.c    **** 		goto fin;
 10682              		.loc 1 2386 19 is_stmt 0 view .LVU3335
 10683 1868 88F80A30 		strb	r3, [r8, #10]
 10684 186c FEF781BE 		b	.L678
 10685              	.LVL831:
 10686              	.L1115:
2416:src/keys.c    **** 		State2.numdigit = 1;
ARM GAS  /tmp/cciIzcMf.s 			page 299


 10687              		.loc 1 2416 3 is_stmt 1 view .LVU3336
2417:src/keys.c    **** 		return STATE_UNFINISHED;
 10688              		.loc 1 2417 19 is_stmt 0 view .LVU3337
 10689 1870 0122     		movs	r2, #1
2416:src/keys.c    **** 		State2.numdigit = 1;
 10690              		.loc 1 2416 17 view .LVU3338
 10691 1872 A8F80830 		strh	r3, [r8, #8]	@ movhi
2417:src/keys.c    **** 		return STATE_UNFINISHED;
 10692              		.loc 1 2417 3 is_stmt 1 view .LVU3339
2417:src/keys.c    **** 		return STATE_UNFINISHED;
 10693              		.loc 1 2417 19 is_stmt 0 view .LVU3340
 10694 1876 88F80B20 		strb	r2, [r8, #11]
2418:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10695              		.loc 1 2418 3 is_stmt 1 view .LVU3341
2418:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10696              		.loc 1 2418 10 is_stmt 0 view .LVU3342
 10697 187a 4FF0330B 		mov	fp, #51
 10698 187e FEF713BC 		b	.L565
 10699              	.LVL832:
 10700              	.L675:
2400:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10701              		.loc 1 2400 3 is_stmt 1 view .LVU3343
2400:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10702              		.loc 1 2400 6 is_stmt 0 view .LVU3344
 10703 1882 0129     		cmp	r1, #1
 10704 1884 1AD0     		beq	.L1069
 10705              	.L681:
2392:src/keys.c    **** 			else
 10706              		.loc 1 2392 5 is_stmt 1 view .LVU3345
 10707              	.LBB727:
 10708              	.LBI727:
2357:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10709              		.loc 1 2357 13 view .LVU3346
 10710              	.LBB728:
2359:src/keys.c    **** 	if (! State2.alphas )
 10711              		.loc 1 2359 2 view .LVU3347
2359:src/keys.c    **** 	if (! State2.alphas )
 10712              		.loc 1 2359 15 is_stmt 0 view .LVU3348
 10713 1886 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2360:src/keys.c    **** 		State2.alphashift = 0;
 10714              		.loc 1 2360 6 view .LVU3349
 10715 188a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2359:src/keys.c    **** 	if (! State2.alphas )
 10716              		.loc 1 2359 15 view .LVU3350
 10717 188e 6FF3C302 		bfc	r2, #3, #1
 10718 1892 88F81520 		strb	r2, [r8, #21]
2360:src/keys.c    **** 		State2.alphashift = 0;
 10719              		.loc 1 2360 2 is_stmt 1 view .LVU3351
2360:src/keys.c    **** 		State2.alphashift = 0;
 10720              		.loc 1 2360 5 is_stmt 0 view .LVU3352
 10721 1896 13F00802 		ands	r2, r3, #8
 10722 189a 7EF490AF 		bne	.L1067
 10723              	.LVL833:
 10724              	.L1065:
2360:src/keys.c    **** 		State2.alphashift = 0;
 10725              		.loc 1 2360 5 view .LVU3353
 10726              	.LBE728:
ARM GAS  /tmp/cciIzcMf.s 			page 300


 10727              	.LBE727:
2401:src/keys.c    **** 		else
 10728              		.loc 1 2401 22 view .LVU3354
 10729 189e 62F30413 		bfi	r3, r2, #4, #1
 10730 18a2 88F81630 		strb	r3, [r8, #22]
 10731 18a6 FEF78ABF 		b	.L1067
 10732              	.LVL834:
 10733              	.L1116:
2420:src/keys.c    **** 		State2.numdigit = 2;
 10734              		.loc 1 2420 3 is_stmt 1 view .LVU3355
2421:src/keys.c    **** 		return STATE_UNFINISHED;
 10735              		.loc 1 2421 19 is_stmt 0 view .LVU3356
 10736 18aa 0222     		movs	r2, #2
2420:src/keys.c    **** 		State2.numdigit = 2;
 10737              		.loc 1 2420 18 view .LVU3357
 10738 18ac 88F80A30 		strb	r3, [r8, #10]
2421:src/keys.c    **** 		return STATE_UNFINISHED;
 10739              		.loc 1 2421 3 is_stmt 1 view .LVU3358
2421:src/keys.c    **** 		return STATE_UNFINISHED;
 10740              		.loc 1 2421 19 is_stmt 0 view .LVU3359
 10741 18b0 88F80B20 		strb	r2, [r8, #11]
2422:src/keys.c    **** 	}
 10742              		.loc 1 2422 3 is_stmt 1 view .LVU3360
2422:src/keys.c    **** 	}
 10743              		.loc 1 2422 10 is_stmt 0 view .LVU3361
 10744 18b4 4FF0330B 		mov	fp, #51
 10745 18b8 FEF7F6BB 		b	.L565
 10746              	.LVL835:
 10747              	.L1069:
2401:src/keys.c    **** 		else
 10748              		.loc 1 2401 4 is_stmt 1 view .LVU3362
2401:src/keys.c    **** 		else
 10749              		.loc 1 2401 34 is_stmt 0 view .LVU3363
 10750 18bc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10751 18c0 C3F30012 		ubfx	r2, r3, #4, #1
2401:src/keys.c    **** 		else
 10752              		.loc 1 2401 26 view .LVU3364
 10753 18c4 C2F10102 		rsb	r2, r2, #1
 10754 18c8 E9E7     		b	.L1065
 10755              	.LVL836:
 10756              	.L1147:
2401:src/keys.c    **** 		else
 10757              		.loc 1 2401 26 view .LVU3365
 10758              	.LBE732:
 10759              	.LBE1142:
 10760              	.LBB1143:
 10761              	.LBB1038:
 909:src/keys.c    **** 
 10762              		.loc 1 909 3 is_stmt 1 view .LVU3366
 909:src/keys.c    **** 
 10763              		.loc 1 909 6 is_stmt 0 view .LVU3367
 10764 18ca 2BF4704B 		bic	fp, fp, #61440
 10765              	.LVL837:
 911:src/keys.c    **** 	case K00:
 10766              		.loc 1 911 2 is_stmt 1 view .LVU3368
 10767 18ce 282C     		cmp	r4, #40
 10768 18d0 3FF6B4AE 		bhi	.L771
ARM GAS  /tmp/cciIzcMf.s 			page 301


 10769 18d4 01A2     		adr	r2, .L773
 10770 18d6 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 10771 18da 00BF     		.p2align 2
 10772              	.L773:
 10773 18dc 15170000 		.word	.L781+1
 10774 18e0 57160000 		.word	.L779+1
 10775 18e4 3D160000 		.word	.L771+1
 10776 18e8 57160000 		.word	.L779+1
 10777 18ec 3D160000 		.word	.L771+1
 10778 18f0 3D160000 		.word	.L771+1
 10779 18f4 3D160000 		.word	.L771+1
 10780 18f8 3D160000 		.word	.L771+1
 10781 18fc 3D160000 		.word	.L771+1
 10782 1900 3D160000 		.word	.L771+1
 10783 1904 3D160000 		.word	.L771+1
 10784 1908 3D160000 		.word	.L771+1
 10785 190c 31160000 		.word	.L778+1
 10786 1910 3D160000 		.word	.L771+1
 10787 1914 3D160000 		.word	.L771+1
 10788 1918 3D160000 		.word	.L771+1
 10789 191c 3D160000 		.word	.L771+1
 10790 1920 3D160000 		.word	.L771+1
 10791 1924 41170000 		.word	.L777+1
 10792 1928 C1160000 		.word	.L776+1
 10793 192c 3D160000 		.word	.L771+1
 10794 1930 3D160000 		.word	.L771+1
 10795 1934 3D160000 		.word	.L771+1
 10796 1938 3D160000 		.word	.L771+1
 10797 193c 3D160000 		.word	.L771+1
 10798 1940 3D160000 		.word	.L771+1
 10799 1944 3D160000 		.word	.L771+1
 10800 1948 3D160000 		.word	.L771+1
 10801 194c 3D160000 		.word	.L771+1
 10802 1950 3D160000 		.word	.L771+1
 10803 1954 91160000 		.word	.L775+1
 10804 1958 73160000 		.word	.L774+1
 10805 195c 9F160000 		.word	.L772+1
 10806 1960 9F160000 		.word	.L772+1
 10807 1964 3D160000 		.word	.L771+1
 10808 1968 3D160000 		.word	.L771+1
 10809 196c 3D160000 		.word	.L771+1
 10810 1970 3D160000 		.word	.L771+1
 10811 1974 3D160000 		.word	.L771+1
 10812 1978 9F160000 		.word	.L772+1
 10813 197c 9F160000 		.word	.L772+1
 10814              	.LVL838:
 10815              		.p2align 1
 10816              	.L1139:
 911:src/keys.c    **** 	case K00:
 10817              		.loc 1 911 2 is_stmt 0 view .LVU3369
 10818              	.LBE1038:
 10819              	.LBE1143:
 10820              	.LBB1144:
 10821              	.LBB828:
2685:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10822              		.loc 1 2685 3 is_stmt 1 view .LVU3370
2685:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
ARM GAS  /tmp/cciIzcMf.s 			page 302


 10823              		.loc 1 2685 7 is_stmt 0 view .LVU3371
 10824 1980 FFF7FEFF 		bl	local_regs
 10825              	.LVL839:
2685:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10826              		.loc 1 2685 6 view .LVU3372
 10827 1984 68B1     		cbz	r0, .L713
2686:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10828              		.loc 1 2686 4 is_stmt 1 view .LVU3373
2686:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10829              		.loc 1 2686 19 is_stmt 0 view .LVU3374
 10830 1986 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2686:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10831              		.loc 1 2686 34 view .LVU3375
 10832 198a 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2686:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10833              		.loc 1 2686 19 view .LVU3376
 10834 198e 03F00101 		and	r1, r3, #1
2686:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10835              		.loc 1 2686 34 view .LVU3377
 10836 1992 0A43     		orrs	r2, r1, r2
 10837 1994 0CBF     		ite	eq
 10838 1996 0122     		moveq	r2, #1
 10839 1998 0022     		movne	r2, #0
2686:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10840              		.loc 1 2686 17 view .LVU3378
 10841 199a 62F30003 		bfi	r3, r2, #0, #1
 10842 199e 88F81630 		strb	r3, [r8, #22]
 10843              	.L713:
2687:src/keys.c    **** 		goto reset_window;
 10844              		.loc 1 2687 3 is_stmt 1 view .LVU3379
2687:src/keys.c    **** 		goto reset_window;
 10845              		.loc 1 2687 32 is_stmt 0 view .LVU3380
 10846 19a2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2687:src/keys.c    **** 		goto reset_window;
 10847              		.loc 1 2687 17 view .LVU3381
 10848 19a6 13F0010F 		tst	r3, #1
 10849 19aa 14BF     		ite	ne
 10850 19ac 0023     		movne	r3, #0
 10851 19ae 6423     		moveq	r3, #100
 10852 19b0 A8F80830 		strh	r3, [r8, #8]	@ movhi
2688:src/keys.c    **** 	}
 10853              		.loc 1 2688 3 is_stmt 1 view .LVU3382
 10854 19b4 FEF7FDBE 		b	.L715
 10855              	.LVL840:
 10856              	.L662:
2688:src/keys.c    **** 	}
 10857              		.loc 1 2688 3 is_stmt 0 view .LVU3383
 10858 19b8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10859              	.LBE828:
 10860              	.LBE1144:
 10861              	.LBB1145:
 10862              	.LBB659:
 10863              	.LBB652:
 322:src/keys.c    **** #ifndef WINGUI
 10864              		.loc 1 322 8 view .LVU3384
 10865 19bc 344B     		ldr	r3, .L1169+8
 328:src/keys.c    ****   }
ARM GAS  /tmp/cciIzcMf.s 			page 303


 10866              		.loc 1 328 9 view .LVU3385
 10867 19be 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 10868              		.loc 1 324 73 view .LVU3386
 10869 19c0 4FF0020C 		mov	ip, #2
 10870 19c4 FEF76ABC 		b	.L661
 10871              	.LVL841:
 10872              	.L1145:
 324:src/keys.c    **** #else
 10873              		.loc 1 324 73 view .LVU3387
 10874              	.LBE652:
 10875              	.LBE659:
 10876              	.LBE1145:
 10877              	.LBB1146:
 10878              	.LBB1085:
1092:src/keys.c    **** #undef _RARG
 10879              		.loc 1 1092 2 is_stmt 1 view .LVU3388
1092:src/keys.c    **** #undef _RARG
 10880              		.loc 1 1092 9 is_stmt 0 view .LVU3389
 10881 19c8 2F4B     		ldr	r3, .L1169
 10882 19ca 1B68     		ldr	r3, [r3]
 10883 19cc 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1092:src/keys.c    **** #undef _RARG
 10884              		.loc 1 1092 57 view .LVU3390
 10885 19d0 D907     		lsls	r1, r3, #31
 10886 19d2 7FF5FCAC 		bpl	.L796
 10887              	.LVL842:
1092:src/keys.c    **** #undef _RARG
 10888              		.loc 1 1092 21 view .LVU3391
 10889 19d6 1AF4804F 		tst	r10, #16384
 10890 19da 7EF4F0AE 		bne	.L1067
 10891 19de F6E4     		b	.L796
 10892              	.LVL843:
 10893              	.L794:
1068:src/keys.c    **** #endif
 10894              		.loc 1 1068 4 is_stmt 1 view .LVU3392
1068:src/keys.c    **** #endif
 10895              		.loc 1 1068 8 is_stmt 0 view .LVU3393
 10896 19e0 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1068:src/keys.c    **** #endif
 10897              		.loc 1 1068 7 view .LVU3394
 10898 19e4 9806     		lsls	r0, r3, #26
 10899 19e6 7FF5E1AC 		bpl	.L793
1068:src/keys.c    **** #endif
 10900              		.loc 1 1068 29 view .LVU3395
 10901 19ea 40F24F1B 		movw	fp, #335
 10902 19ee EEE4     		b	.L796
 10903              	.LVL844:
 10904              	.L1137:
1068:src/keys.c    **** #endif
 10905              		.loc 1 1068 29 view .LVU3396
 10906              	.LBE1085:
 10907              	.LBE1146:
 10908              	.LBB1147:
 10909              	.LBB1000:
2559:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10910              		.loc 1 2559 3 is_stmt 1 view .LVU3397
ARM GAS  /tmp/cciIzcMf.s 			page 304


2559:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10911              		.loc 1 2559 8 is_stmt 0 view .LVU3398
 10912 19f0 4FEA8B34 		lsl	r4, fp, #14
2559:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10913              		.loc 1 2559 6 view .LVU3399
 10914 19f4 44F00104 		orr	r4, r4, #1
 10915              	.LVL845:
2560:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10916              		.loc 1 2560 3 is_stmt 1 view .LVU3400
2560:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10917              		.loc 1 2560 9 is_stmt 0 view .LVU3401
 10918 19f8 2046     		mov	r0, r4
 10919 19fa FFF7FEFF 		bl	is_label_or_end_at
 10920              	.LVL846:
2560:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10921              		.loc 1 2560 6 view .LVU3402
 10922 19fe 0246     		mov	r2, r0
 10923 1a00 0028     		cmp	r0, #0
 10924 1a02 00F04D81 		beq	.L1152
 10925              	.L689:
2562:src/keys.c    **** 		return STATE_UNFINISHED;
 10926              		.loc 1 2562 3 is_stmt 1 view .LVU3403
2562:src/keys.c    **** 		return STATE_UNFINISHED;
 10927              		.loc 1 2562 17 is_stmt 0 view .LVU3404
 10928 1a06 A8F80840 		strh	r4, [r8, #8]	@ movhi
2563:src/keys.c    **** 	}
 10929              		.loc 1 2563 3 is_stmt 1 view .LVU3405
2563:src/keys.c    **** 	}
 10930              		.loc 1 2563 10 is_stmt 0 view .LVU3406
 10931 1a0a 4FF0330B 		mov	fp, #51
 10932              	.LVL847:
2563:src/keys.c    **** 	}
 10933              		.loc 1 2563 10 view .LVU3407
 10934 1a0e FEF74BBB 		b	.L565
 10935              	.LVL848:
 10936              	.L1146:
2563:src/keys.c    **** 	}
 10937              		.loc 1 2563 10 view .LVU3408
 10938              	.LBE1000:
 10939              	.LBE1147:
 10940              	.LBB1148:
 10941              	.LBB1118:
1167:src/keys.c    **** 		State2.hyp = 1;
 10942              		.loc 1 1167 3 is_stmt 1 view .LVU3409
 10943 1a12 FFF7FEFF 		bl	process_cmdline_set_lift
 10944              	.LVL849:
1168:src/keys.c    **** 		State2.dot = op;
 10945              		.loc 1 1168 3 view .LVU3410
1169:src/keys.c    **** 		State2.cmplx = 1;
 10946              		.loc 1 1169 3 view .LVU3411
1170:src/keys.c    **** 		return STATE_UNFINISHED;
 10947              		.loc 1 1170 3 view .LVU3412
1170:src/keys.c    **** 		return STATE_UNFINISHED;
 10948              		.loc 1 1170 16 is_stmt 0 view .LVU3413
 10949 1a16 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10950 1a1a 0BF00103 		and	r3, fp, #1
 10951 1a1e 9B01     		lsls	r3, r3, #6
ARM GAS  /tmp/cciIzcMf.s 			page 305


 10952 1a20 43F02203 		orr	r3, r3, #34
 10953 1a24 22F06202 		bic	r2, r2, #98
 10954 1a28 1343     		orrs	r3, r3, r2
 10955 1a2a 88F81530 		strb	r3, [r8, #21]
1171:src/keys.c    **** 	}
 10956              		.loc 1 1171 3 is_stmt 1 view .LVU3414
1171:src/keys.c    **** 	}
 10957              		.loc 1 1171 10 is_stmt 0 view .LVU3415
 10958 1a2e 4FF0330B 		mov	fp, #51
 10959              	.LVL850:
1171:src/keys.c    **** 	}
 10960              		.loc 1 1171 10 view .LVU3416
 10961 1a32 FEF739BB 		b	.L565
 10962              	.LVL851:
 10963              	.L819:
1171:src/keys.c    **** 	}
 10964              		.loc 1 1171 10 view .LVU3417
 10965              	.LBE1118:
 10966              	.LBE1148:
 10967              	.LBB1149:
 10968              	.LBB679:
 769:src/keys.c    **** 	case K03:
 10969              		.loc 1 769 3 is_stmt 1 view .LVU3418
 769:src/keys.c    **** 	case K03:
 10970              		.loc 1 769 10 is_stmt 0 view .LVU3419
 10971 1a36 5146     		mov	r1, r10
 10972 1a38 0120     		movs	r0, #1
 10973 1a3a FFF7FEFF 		bl	check_f_key
 10974              	.LVL852:
 10975 1a3e 8346     		mov	fp, r0
 10976 1a40 FEF7A6BD 		b	.L594
 10977              	.L818:
 767:src/keys.c    **** 	case K01:
 10978              		.loc 1 767 3 is_stmt 1 view .LVU3420
 767:src/keys.c    **** 	case K01:
 10979              		.loc 1 767 10 is_stmt 0 view .LVU3421
 10980 1a44 5146     		mov	r1, r10
 10981 1a46 0020     		movs	r0, #0
 10982 1a48 FFF7FEFF 		bl	check_f_key
 10983              	.LVL853:
 10984 1a4c 8346     		mov	fp, r0
 10985 1a4e FEF79FBD 		b	.L594
 10986              	.LVL854:
 10987              	.L809:
 767:src/keys.c    **** 	case K01:
 10988              		.loc 1 767 10 view .LVU3422
 10989              	.LBE679:
 10990              	.LBE1149:
 10991              	.LBE1219:
 10992              	.LBE1278:
3141:src/keys.c    **** 	NonProgrammable = 0;
 10993              		.loc 1 3141 7 is_stmt 1 view .LVU3423
3141:src/keys.c    **** 	NonProgrammable = 0;
 10994              		.loc 1 3141 11 is_stmt 0 view .LVU3424
 10995 1a52 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3141:src/keys.c    **** 	NonProgrammable = 0;
 10996              		.loc 1 3141 10 view .LVU3425
ARM GAS  /tmp/cciIzcMf.s 			page 306


 10997 1a56 5906     		lsls	r1, r3, #25
 10998 1a58 40F1C480 		bpl	.L889
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10999              		.loc 1 3142 2 is_stmt 1 view .LVU3426
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11000              		.loc 1 3142 18 is_stmt 0 view .LVU3427
 11001 1a5c 0B4B     		ldr	r3, .L1169+4
 11002 1a5e 0022     		movs	r2, #0
 11003              	.LBB1279:
 11004              	.LBB1220:
 11005              	.LBB1150:
 11006              	.LBB680:
 733:src/keys.c    **** 	    }
 11007              		.loc 1 733 15 view .LVU3428
 11008 1a60 4FF00F0B 		mov	fp, #15
 11009              	.LBE680:
 11010              	.LBE1150:
 11011              	.LBE1220:
 11012              	.LBE1279:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11013              		.loc 1 3142 18 view .LVU3429
 11014 1a64 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11015              		.loc 1 3143 2 is_stmt 1 view .LVU3430
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11016              		.loc 1 3143 32 is_stmt 0 view .LVU3431
 11017 1a66 5846     		mov	r0, fp
 11018 1a68 FEF70DBE 		b	.L835
 11019              	.LVL855:
 11020              	.L810:
3141:src/keys.c    **** 	NonProgrammable = 0;
 11021              		.loc 1 3141 7 is_stmt 1 view .LVU3432
3141:src/keys.c    **** 	NonProgrammable = 0;
 11022              		.loc 1 3141 11 is_stmt 0 view .LVU3433
 11023 1a6c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3141:src/keys.c    **** 	NonProgrammable = 0;
 11024              		.loc 1 3141 10 view .LVU3434
 11025 1a70 5B06     		lsls	r3, r3, #25
 11026 1a72 40F18A80 		bpl	.L886
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11027              		.loc 1 3142 2 is_stmt 1 view .LVU3435
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11028              		.loc 1 3142 18 is_stmt 0 view .LVU3436
 11029 1a76 054B     		ldr	r3, .L1169+4
 11030 1a78 0022     		movs	r2, #0
 11031              	.LBB1280:
 11032              	.LBB1221:
 11033              	.LBB1151:
 11034              	.LBB681:
 741:src/keys.c    **** 	    }
 11035              		.loc 1 741 15 view .LVU3437
 11036 1a7a 4FF0100B 		mov	fp, #16
 11037              	.LBE681:
 11038              	.LBE1151:
 11039              	.LBE1221:
 11040              	.LBE1280:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/cciIzcMf.s 			page 307


 11041              		.loc 1 3142 18 view .LVU3438
 11042 1a7e 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11043              		.loc 1 3143 2 is_stmt 1 view .LVU3439
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11044              		.loc 1 3143 32 is_stmt 0 view .LVU3440
 11045 1a80 5846     		mov	r0, fp
 11046 1a82 FEF700BE 		b	.L835
 11047              	.L1170:
 11048 1a86 00BF     		.align	2
 11049              	.L1169:
 11050 1a88 00000000 		.word	main_ram
 11051 1a8c 00000000 		.word	NonProgrammable
 11052 1a90 00000000 		.word	.LANCHOR11
 11053              	.LVL856:
 11054              	.L741:
 11055              	.LBB1281:
 11056              	.LBB1222:
 11057              	.LBB1152:
 11058              	.LBB787:
1482:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11059              		.loc 1 1482 3 is_stmt 1 view .LVU3441
1482:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11060              		.loc 1 1482 6 is_stmt 0 view .LVU3442
 11061 1a94 0128     		cmp	r0, #1
 11062 1a96 7FF44CAC 		bne	.L740
 11063              	.LVL857:
1482:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11064              		.loc 1 1482 6 view .LVU3443
 11065              	.LBE787:
 11066              	.LBE1152:
 11067              	.LBE1222:
 11068              	.LBE1281:
3141:src/keys.c    **** 	NonProgrammable = 0;
 11069              		.loc 1 3141 7 is_stmt 1 view .LVU3444
3141:src/keys.c    **** 	NonProgrammable = 0;
 11070              		.loc 1 3141 10 is_stmt 0 view .LVU3445
 11071 1a9a 5806     		lsls	r0, r3, #25
 11072              	.LVL858:
3141:src/keys.c    **** 	NonProgrammable = 0;
 11073              		.loc 1 3141 10 view .LVU3446
 11074 1a9c 40F1B180 		bpl	.L883
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11075              		.loc 1 3142 2 is_stmt 1 view .LVU3447
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11076              		.loc 1 3142 18 is_stmt 0 view .LVU3448
 11077 1aa0 AA4B     		ldr	r3, .L1171
 11078 1aa2 0022     		movs	r2, #0
 11079              	.LVL859:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11080              		.loc 1 3142 18 view .LVU3449
 11081 1aa4 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11082              		.loc 1 3143 2 is_stmt 1 view .LVU3450
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11083              		.loc 1 3143 32 is_stmt 0 view .LVU3451
 11084 1aa6 40F23B10 		movw	r0, #315
ARM GAS  /tmp/cciIzcMf.s 			page 308


 11085 1aaa FEF717BD 		b	.L833
 11086              	.LVL860:
 11087              	.L747:
 11088              	.LBB1282:
 11089              	.LBB1223:
 11090              	.LBB1153:
 11091              	.LBB788:
1416:src/keys.c    **** 			break;
 11092              		.loc 1 1416 3 is_stmt 1 view .LVU3452
1416:src/keys.c    **** 			break;
 11093              		.loc 1 1416 24 is_stmt 0 view .LVU3453
 11094 1aae 811E     		subs	r1, r0, #2
1416:src/keys.c    **** 			break;
 11095              		.loc 1 1416 6 view .LVU3454
 11096 1ab0 C9B2     		uxtb	r1, r1
 11097 1ab2 0129     		cmp	r1, #1
 11098 1ab4 7FF63DAC 		bls	.L740
1418:src/keys.c    **** 			State2.multi = 1;
 11099              		.loc 1 1418 3 is_stmt 1 view .LVU3455
1418:src/keys.c    **** 			State2.multi = 1;
 11100              		.loc 1 1418 6 is_stmt 0 view .LVU3456
 11101 1ab8 0128     		cmp	r0, #1
 11102 1aba 02D1     		bne	.L751
1418:src/keys.c    **** 			State2.multi = 1;
 11103              		.loc 1 1418 24 view .LVU3457
 11104 1abc 13F04002 		ands	r2, r3, #64
 11105              	.LVL861:
1418:src/keys.c    **** 			State2.multi = 1;
 11106              		.loc 1 1418 24 view .LVU3458
 11107 1ac0 70D0     		beq	.L1153
 11108              	.L751:
1424:src/keys.c    **** 		State2.alphashift = 0;
 11109              		.loc 1 1424 3 is_stmt 1 view .LVU3459
1425:src/keys.c    **** 		return op;
 11110              		.loc 1 1425 3 view .LVU3460
1424:src/keys.c    **** 		State2.alphashift = 0;
 11111              		.loc 1 1424 17 is_stmt 0 view .LVU3461
 11112 1ac2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11113 1ac6 23F01803 		bic	r3, r3, #24
 11114 1aca 88F81630 		strb	r3, [r8, #22]
1426:src/keys.c    **** 
 11115              		.loc 1 1426 3 is_stmt 1 view .LVU3462
1426:src/keys.c    **** 
 11116              		.loc 1 1426 10 is_stmt 0 view .LVU3463
 11117 1ace 4FF0330B 		mov	fp, #51
 11118 1ad2 FEF7E9BA 		b	.L565
 11119              	.LVL862:
 11120              	.L744:
1461:src/keys.c    **** 	    if ( State2.runmode ) {
 11121              		.loc 1 1461 4 is_stmt 1 view .LVU3464
1461:src/keys.c    **** 	    if ( State2.runmode ) {
 11122              		.loc 1 1461 7 is_stmt 0 view .LVU3465
 11123 1ad6 0028     		cmp	r0, #0
 11124 1ad8 7FF42BAC 		bne	.L740
1462:src/keys.c    **** 	      // Alpha scroll right
 11125              		.loc 1 1462 6 is_stmt 1 view .LVU3466
1462:src/keys.c    **** 	      // Alpha scroll right
ARM GAS  /tmp/cciIzcMf.s 			page 309


 11126              		.loc 1 1462 9 is_stmt 0 view .LVU3467
 11127 1adc 5806     		lsls	r0, r3, #25
 11128              	.LVL863:
1462:src/keys.c    **** 	      // Alpha scroll right
 11129              		.loc 1 1462 9 view .LVU3468
 11130 1ade 7EF583AD 		bpl	.L757
1464:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11131              		.loc 1 1464 8 is_stmt 1 view .LVU3469
1464:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11132              		.loc 1 1464 11 is_stmt 0 view .LVU3470
 11133 1ae2 B9F1000F 		cmp	r9, #0
 11134 1ae6 3EF46AAE 		beq	.L1067
1465:src/keys.c    **** 	      return STATE_UNFINISHED;
 11135              		.loc 1 1465 3 is_stmt 1 view .LVU3471
1465:src/keys.c    **** 	      return STATE_UNFINISHED;
 11136              		.loc 1 1465 31 is_stmt 0 view .LVU3472
 11137 1aea 09F1FF33 		add	r3, r9, #-1
1465:src/keys.c    **** 	      return STATE_UNFINISHED;
 11138              		.loc 1 1465 20 view .LVU3473
 11139 1aee 88F80D30 		strb	r3, [r8, #13]
1466:src/keys.c    **** 	    }
 11140              		.loc 1 1466 15 view .LVU3474
 11141 1af2 4FF0330B 		mov	fp, #51
 11142 1af6 FEF7D7BA 		b	.L565
 11143              	.LVL864:
 11144              	.L745:
1436:src/keys.c    **** 	    if ( State2.runmode ) {
 11145              		.loc 1 1436 4 is_stmt 1 view .LVU3475
1436:src/keys.c    **** 	    if ( State2.runmode ) {
 11146              		.loc 1 1436 7 is_stmt 0 view .LVU3476
 11147 1afa 0028     		cmp	r0, #0
 11148 1afc 7FF419AC 		bne	.L740
1437:src/keys.c    **** 	      // Alpha scroll left
 11149              		.loc 1 1437 6 is_stmt 1 view .LVU3477
1437:src/keys.c    **** 	      // Alpha scroll left
 11150              		.loc 1 1437 9 is_stmt 0 view .LVU3478
 11151 1b00 5C06     		lsls	r4, r3, #25
 11152 1b02 7EF56AAD 		bpl	.L755
1441:src/keys.c    **** 		alpha_pos += 1;
 11153              		.loc 1 1441 8 is_stmt 1 view .LVU3479
1441:src/keys.c    **** 		alpha_pos += 1;
 11154              		.loc 1 1441 12 is_stmt 0 view .LVU3480
 11155 1b06 FFF7FEFF 		bl	alen
 11156              	.LVL865:
1441:src/keys.c    **** 		alpha_pos += 1;
 11157              		.loc 1 1441 20 view .LVU3481
 11158 1b0a 09EB4903 		add	r3, r9, r9, lsl #1
1441:src/keys.c    **** 		alpha_pos += 1;
 11159              		.loc 1 1441 18 view .LVU3482
 11160 1b0e A0EB4300 		sub	r0, r0, r3, lsl #1
1441:src/keys.c    **** 		alpha_pos += 1;
 11161              		.loc 1 1441 11 view .LVU3483
 11162 1b12 1328     		cmp	r0, #19
1442:src/keys.c    **** 	      }
 11163              		.loc 1 1442 3 is_stmt 1 view .LVU3484
1442:src/keys.c    **** 	      }
 11164              		.loc 1 1442 13 is_stmt 0 view .LVU3485
ARM GAS  /tmp/cciIzcMf.s 			page 310


 11165 1b14 88BF     		it	hi
 11166 1b16 09F1010A 		addhi	r10, r9, #1
 11167              	.LVL866:
1449:src/keys.c    **** #else
 11168              		.loc 1 1449 8 is_stmt 1 view .LVU3486
1449:src/keys.c    **** #else
 11169              		.loc 1 1449 25 is_stmt 0 view .LVU3487
 11170 1b1a 88F80DA0 		strb	r10, [r8, #13]
1454:src/keys.c    **** 	    }
 11171              		.loc 1 1454 8 is_stmt 1 view .LVU3488
1454:src/keys.c    **** 	    }
 11172              		.loc 1 1454 15 is_stmt 0 view .LVU3489
 11173 1b1e 4FF0330B 		mov	fp, #51
 11174 1b22 FEF7C1BA 		b	.L565
 11175              	.LVL867:
 11176              	.L743:
1473:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11177              		.loc 1 1473 3 is_stmt 1 view .LVU3490
1473:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11178              		.loc 1 1473 6 is_stmt 0 view .LVU3491
 11179 1b26 0128     		cmp	r0, #1
 11180 1b28 3FF4C8AE 		beq	.L1069
1475:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11181              		.loc 1 1475 8 is_stmt 1 view .LVU3492
1475:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11182              		.loc 1 1475 11 is_stmt 0 view .LVU3493
 11183 1b2c 0328     		cmp	r0, #3
 11184 1b2e 76D0     		beq	.L759
1477:src/keys.c    **** 			init_state();
 11185              		.loc 1 1477 8 is_stmt 1 view .LVU3494
1477:src/keys.c    **** 			init_state();
 11186              		.loc 1 1477 11 is_stmt 0 view .LVU3495
 11187 1b30 0028     		cmp	r0, #0
 11188 1b32 7EF444AE 		bne	.L1067
1478:src/keys.c    **** 		return STATE_UNFINISHED;
 11189              		.loc 1 1478 4 is_stmt 1 view .LVU3496
 11190 1b36 FFF7FEFF 		bl	init_state
 11191              	.LVL868:
1479:src/keys.c    **** 
 11192              		.loc 1 1479 10 is_stmt 0 view .LVU3497
 11193 1b3a 4FF0330B 		mov	fp, #51
 11194 1b3e FEF7B3BA 		b	.L565
 11195              	.LVL869:
 11196              	.L748:
1406:src/keys.c    **** 			init_arg(RARG_ARCL);
 11197              		.loc 1 1406 3 is_stmt 1 view .LVU3498
1406:src/keys.c    **** 			init_arg(RARG_ARCL);
 11198              		.loc 1 1406 6 is_stmt 0 view .LVU3499
 11199 1b42 0128     		cmp	r0, #1
 11200 1b44 74D0     		beq	.L1154
1409:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11201              		.loc 1 1409 10 is_stmt 1 view .LVU3500
1409:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11202              		.loc 1 1409 13 is_stmt 0 view .LVU3501
 11203 1b46 0328     		cmp	r0, #3
 11204 1b48 7FF4F3AB 		bne	.L740
1410:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cciIzcMf.s 			page 311


 11205              		.loc 1 1410 4 is_stmt 1 view .LVU3502
 11206              	.LVL870:
 11207              	.LBB772:
 11208              	.LBI772:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11209              		.loc 1 501 13 view .LVU3503
 11210              	.LBB773:
 502:src/keys.c    **** 		return;
 11211              		.loc 1 502 2 view .LVU3504
 502:src/keys.c    **** 		return;
 11212              		.loc 1 502 6 is_stmt 0 view .LVU3505
 11213 1b4c FFF7FEFF 		bl	is_bad_cmdline
 11214              	.LVL871:
 502:src/keys.c    **** 		return;
 11215              		.loc 1 502 5 view .LVU3506
 11216 1b50 0346     		mov	r3, r0
 11217 1b52 0028     		cmp	r0, #0
 11218 1b54 7EF433AE 		bne	.L1067
 11219 1b58 7320     		movs	r0, #115
 11220              	.LBE773:
 11221              	.LBE772:
 11222              	.LBE788:
 11223              	.LBE1153:
 11224              	.LBE1223:
 11225              	.LBE1282:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 11226              		.loc 1 2948 7 view .LVU3507
 11227 1b5a 1F46     		mov	r7, r3
 11228              	.LBB1283:
 11229              	.LBB1224:
 11230              	.LBB1154:
 11231              	.LBB789:
1411:src/keys.c    **** 		}
 11232              		.loc 1 1411 11 view .LVU3508
 11233 1b5c 4FF0330B 		mov	fp, #51
 11234              	.LBB775:
 11235              	.LBB774:
 11236 1b60 FFF7FEFF 		bl	init_arg.part.0
 11237              	.LVL872:
 11238 1b64 FEF7A0BA 		b	.L565
 11239              	.LVL873:
 11240              	.L749:
1411:src/keys.c    **** 		}
 11241              		.loc 1 1411 11 view .LVU3509
 11242              	.LBE774:
 11243              	.LBE775:
1399:src/keys.c    **** 			init_arg(RARG_ASTO);
 11244              		.loc 1 1399 3 is_stmt 1 view .LVU3510
1399:src/keys.c    **** 			init_arg(RARG_ASTO);
 11245              		.loc 1 1399 6 is_stmt 0 view .LVU3511
 11246 1b68 0128     		cmp	r0, #1
 11247 1b6a 7FF4E2AB 		bne	.L740
1400:src/keys.c    **** 			return STATE_UNFINISHED;
 11248              		.loc 1 1400 4 is_stmt 1 view .LVU3512
 11249              	.LVL874:
 11250              	.LBB776:
 11251              	.LBI776:
ARM GAS  /tmp/cciIzcMf.s 			page 312


 501:src/keys.c    **** 	if (is_bad_cmdline())
 11252              		.loc 1 501 13 view .LVU3513
 11253              	.LBB777:
 502:src/keys.c    **** 		return;
 11254              		.loc 1 502 2 view .LVU3514
 502:src/keys.c    **** 		return;
 11255              		.loc 1 502 6 is_stmt 0 view .LVU3515
 11256 1b6e FFF7FEFF 		bl	is_bad_cmdline
 11257              	.LVL875:
 502:src/keys.c    **** 		return;
 11258              		.loc 1 502 5 view .LVU3516
 11259 1b72 0346     		mov	r3, r0
 11260 1b74 0028     		cmp	r0, #0
 11261 1b76 7EF422AE 		bne	.L1067
 11262 1b7a 2620     		movs	r0, #38
 11263              	.LBE777:
 11264              	.LBE776:
 11265              	.LBE789:
 11266              	.LBE1154:
 11267              	.LBE1224:
 11268              	.LBE1283:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 11269              		.loc 1 2948 7 view .LVU3517
 11270 1b7c 1F46     		mov	r7, r3
 11271              	.LBB1284:
 11272              	.LBB1225:
 11273              	.LBB1155:
 11274              	.LBB790:
1401:src/keys.c    **** 		}
 11275              		.loc 1 1401 11 view .LVU3518
 11276 1b7e 4FF0330B 		mov	fp, #51
 11277              	.LBB779:
 11278              	.LBB778:
 11279 1b82 FFF7FEFF 		bl	init_arg.part.0
 11280              	.LVL876:
 11281 1b86 FEF78FBA 		b	.L565
 11282              	.LVL877:
 11283              	.L886:
1401:src/keys.c    **** 		}
 11284              		.loc 1 1401 11 view .LVU3519
 11285              	.LBE778:
 11286              	.LBE779:
 11287              	.LBE790:
 11288              	.LBE1155:
 11289              	.LBB1156:
 11290              	.LBB682:
 741:src/keys.c    **** 	    }
 11291              		.loc 1 741 15 view .LVU3520
 11292 1b8a 4FF0100B 		mov	fp, #16
 11293              	.LVL878:
 11294              	.L834:
 741:src/keys.c    **** 	    }
 11295              		.loc 1 741 15 view .LVU3521
 11296              	.LBE682:
 11297              	.LBE1156:
 11298              	.LBE1225:
 11299              	.LBE1284:
ARM GAS  /tmp/cciIzcMf.s 			page 313


3141:src/keys.c    **** 	NonProgrammable = 0;
 11300              		.loc 1 3141 26 view .LVU3522
 11301 1b8e 6F4B     		ldr	r3, .L1171
 11302 1b90 1A68     		ldr	r2, [r3]
 11303 1b92 B2B1     		cbz	r2, .L1061
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11304              		.loc 1 3142 2 is_stmt 1 view .LVU3523
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11305              		.loc 1 3142 18 is_stmt 0 view .LVU3524
 11306 1b94 0022     		movs	r2, #0
 11307 1b96 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11308              		.loc 1 3143 2 is_stmt 1 view .LVU3525
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11309              		.loc 1 3143 32 is_stmt 0 view .LVU3526
 11310 1b98 5846     		mov	r0, fp
 11311 1b9a FEF774BD 		b	.L835
 11312              	.LVL879:
 11313              	.L888:
 11314              	.LBB1285:
 11315              	.LBB1226:
 11316              	.LBB1157:
 11317              	.LBB683:
 757:src/keys.c    **** 	    }
 11318              		.loc 1 757 15 view .LVU3527
 11319 1b9e 4FF0140B 		mov	fp, #20
 11320 1ba2 F4E7     		b	.L834
 11321              	.LVL880:
 11322              	.L1153:
 757:src/keys.c    **** 	    }
 11323              		.loc 1 757 15 view .LVU3528
 11324              	.LBE683:
 11325              	.LBE1157:
 11326              	.LBB1158:
 11327              	.LBB791:
1419:src/keys.c    **** 			State2.numdigit = 0;
 11328              		.loc 1 1419 4 is_stmt 1 view .LVU3529
1419:src/keys.c    **** 			State2.numdigit = 0;
 11329              		.loc 1 1419 17 is_stmt 0 view .LVU3530
 11330 1ba4 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1420:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11331              		.loc 1 1420 20 view .LVU3531
 11332 1ba8 88F80B20 		strb	r2, [r8, #11]
1419:src/keys.c    **** 			State2.numdigit = 0;
 11333              		.loc 1 1419 17 view .LVU3532
 11334 1bac 43F00803 		orr	r3, r3, #8
1421:src/keys.c    **** 			return STATE_UNFINISHED;
 11335              		.loc 1 1421 12 view .LVU3533
 11336 1bb0 0A22     		movs	r2, #10
1419:src/keys.c    **** 			State2.numdigit = 0;
 11337              		.loc 1 1419 17 view .LVU3534
 11338 1bb2 88F81530 		strb	r3, [r8, #21]
1420:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11339              		.loc 1 1420 4 is_stmt 1 view .LVU3535
1421:src/keys.c    **** 			return STATE_UNFINISHED;
 11340              		.loc 1 1421 4 view .LVU3536
1421:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cciIzcMf.s 			page 314


 11341              		.loc 1 1421 12 is_stmt 0 view .LVU3537
 11342 1bb6 88F81F20 		strb	r2, [r8, #31]
1422:src/keys.c    **** 		}
 11343              		.loc 1 1422 4 is_stmt 1 view .LVU3538
1422:src/keys.c    **** 		}
 11344              		.loc 1 1422 11 is_stmt 0 view .LVU3539
 11345 1bba 4FF0330B 		mov	fp, #51
 11346 1bbe FEF773BA 		b	.L565
 11347              	.LVL881:
 11348              	.L1061:
1422:src/keys.c    **** 		}
 11349              		.loc 1 1422 11 view .LVU3540
 11350 1bc2 5846     		mov	r0, fp
 11351 1bc4 FEF793BE 		b	.L838
 11352              	.LVL882:
 11353              	.L723:
1422:src/keys.c    **** 		}
 11354              		.loc 1 1422 11 view .LVU3541
 11355              	.LBE791:
 11356              	.LBE1158:
 11357              	.LBB1159:
 11358              	.LBB829:
2714:src/keys.c    **** 		goto reset_window;
 11359              		.loc 1 2714 4 is_stmt 1 view .LVU3542
2714:src/keys.c    **** 		goto reset_window;
 11360              		.loc 1 2714 24 is_stmt 0 view .LVU3543
 11361 1bc8 09F1FF39 		add	r9, r9, #-1
 11362              	.LVL883:
2714:src/keys.c    **** 		goto reset_window;
 11363              		.loc 1 2714 18 view .LVU3544
 11364 1bcc A8F80890 		strh	r9, [r8, #8]	@ movhi
 11365 1bd0 FEF7EFBD 		b	.L715
 11366              	.LVL884:
 11367              	.L1114:
2714:src/keys.c    **** 		goto reset_window;
 11368              		.loc 1 2714 18 view .LVU3545
 11369              	.LBE829:
 11370              	.LBE1159:
 11371              	.LBB1160:
 11372              	.LBB733:
 11373              	.LBB729:
 11374              	.LBB720:
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 11375              		.loc 1 437 8 is_stmt 1 view .LVU3546
 438:src/keys.c    **** 	}
 11376              		.loc 1 438 10 is_stmt 0 view .LVU3547
 11377 1bd4 0229     		cmp	r1, #2
 11378 1bd6 08BF     		it	eq
 11379 1bd8 0521     		moveq	r1, #5
 11380              	.LVL885:
 438:src/keys.c    **** 	}
 11381              		.loc 1 438 10 view .LVU3548
 11382 1bda FEF7A9BC 		b	.L679
 11383              	.LVL886:
 11384              	.L887:
 438:src/keys.c    **** 	}
 11385              		.loc 1 438 10 view .LVU3549
ARM GAS  /tmp/cciIzcMf.s 			page 315


 11386              	.LBE720:
 11387              	.LBE729:
 11388              	.LBE733:
 11389              	.LBE1160:
 11390              	.LBB1161:
 11391              	.LBB684:
 749:src/keys.c    **** 	    }
 11392              		.loc 1 749 15 view .LVU3550
 11393 1bde 4FF0110B 		mov	fp, #17
 11394 1be2 D4E7     		b	.L834
 11395              	.LVL887:
 11396              	.L889:
 733:src/keys.c    **** 	    }
 11397              		.loc 1 733 15 view .LVU3551
 11398 1be4 4FF00F0B 		mov	fp, #15
 11399 1be8 D1E7     		b	.L834
 11400              	.LVL888:
 11401              	.L753:
 733:src/keys.c    **** 	    }
 11402              		.loc 1 733 15 view .LVU3552
 11403              	.LBE684:
 11404              	.LBE1161:
 11405              	.LBB1162:
 11406              	.LBB792:
1431:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11407              		.loc 1 1431 3 is_stmt 1 view .LVU3553
1431:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11408              		.loc 1 1431 6 is_stmt 0 view .LVU3554
 11409 1bea 0328     		cmp	r0, #3
 11410 1bec 7FF4A1AB 		bne	.L740
 11411              	.LVL889:
1431:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11412              		.loc 1 1431 6 view .LVU3555
 11413              	.LBE792:
 11414              	.LBE1162:
 11415              	.LBE1226:
 11416              	.LBE1285:
3141:src/keys.c    **** 	NonProgrammable = 0;
 11417              		.loc 1 3141 7 is_stmt 1 view .LVU3556
3141:src/keys.c    **** 	NonProgrammable = 0;
 11418              		.loc 1 3141 10 is_stmt 0 view .LVU3557
 11419 1bf0 5A06     		lsls	r2, r3, #25
 11420              	.LVL890:
3141:src/keys.c    **** 	NonProgrammable = 0;
 11421              		.loc 1 3141 10 view .LVU3558
 11422 1bf2 11D5     		bpl	.L890
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11423              		.loc 1 3142 2 is_stmt 1 view .LVU3559
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11424              		.loc 1 3142 18 is_stmt 0 view .LVU3560
 11425 1bf4 554B     		ldr	r3, .L1171
 11426 1bf6 0022     		movs	r2, #0
 11427 1bf8 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11428              		.loc 1 3143 2 is_stmt 1 view .LVU3561
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11429              		.loc 1 3143 32 is_stmt 0 view .LVU3562
ARM GAS  /tmp/cciIzcMf.s 			page 316


 11430 1bfa 4FF4BA70 		mov	r0, #372
 11431              	.LVL891:
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11432              		.loc 1 3143 32 view .LVU3563
 11433 1bfe FEF76DBC 		b	.L833
 11434              	.LVL892:
 11435              	.L883:
 11436              	.LBB1286:
 11437              	.LBB1227:
 11438              	.LBB1163:
 11439              	.LBB793:
1483:src/keys.c    **** 		break;
 11440              		.loc 1 1483 11 view .LVU3564
 11441 1c02 40F23B1B 		movw	fp, #315
 11442              	.LVL893:
 11443              	.L832:
1483:src/keys.c    **** 		break;
 11444              		.loc 1 1483 11 view .LVU3565
 11445              	.LBE793:
 11446              	.LBE1163:
 11447              	.LBE1227:
 11448              	.LBE1286:
3141:src/keys.c    **** 	NonProgrammable = 0;
 11449              		.loc 1 3141 26 view .LVU3566
 11450 1c06 514B     		ldr	r3, .L1171
 11451 1c08 1A68     		ldr	r2, [r3]
 11452 1c0a 002A     		cmp	r2, #0
 11453 1c0c D9D0     		beq	.L1061
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11454              		.loc 1 3142 2 is_stmt 1 view .LVU3567
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11455              		.loc 1 3142 18 is_stmt 0 view .LVU3568
 11456 1c0e 0022     		movs	r2, #0
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11457              		.loc 1 3143 32 view .LVU3569
 11458 1c10 5846     		mov	r0, fp
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11459              		.loc 1 3142 18 view .LVU3570
 11460 1c12 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11461              		.loc 1 3143 2 is_stmt 1 view .LVU3571
 11462 1c14 FEF762BC 		b	.L833
 11463              	.LVL894:
 11464              	.L890:
 11465              	.LBB1287:
 11466              	.LBB1228:
 11467              	.LBB1164:
 11468              	.LBB794:
1432:src/keys.c    **** 		break;
 11469              		.loc 1 1432 11 is_stmt 0 view .LVU3572
 11470 1c18 4FF4BA7B 		mov	fp, #372
 11471 1c1c F3E7     		b	.L832
 11472              	.LVL895:
 11473              	.L759:
1432:src/keys.c    **** 		break;
 11474              		.loc 1 1432 11 view .LVU3573
 11475              	.LBE794:
ARM GAS  /tmp/cciIzcMf.s 			page 317


 11476              	.LBE1164:
 11477              	.LBE1228:
 11478              	.LBE1287:
3141:src/keys.c    **** 	NonProgrammable = 0;
 11479              		.loc 1 3141 7 is_stmt 1 view .LVU3574
3141:src/keys.c    **** 	NonProgrammable = 0;
 11480              		.loc 1 3141 10 is_stmt 0 view .LVU3575
 11481 1c1e 5B06     		lsls	r3, r3, #25
 11482 1c20 14D5     		bpl	.L891
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11483              		.loc 1 3142 2 is_stmt 1 view .LVU3576
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11484              		.loc 1 3142 18 is_stmt 0 view .LVU3577
 11485 1c22 4A4B     		ldr	r3, .L1171
 11486 1c24 0022     		movs	r2, #0
 11487              	.LVL896:
3142:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11488              		.loc 1 3142 18 view .LVU3578
 11489 1c26 1A60     		str	r2, [r3]
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11490              		.loc 1 3143 2 is_stmt 1 view .LVU3579
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11491              		.loc 1 3143 32 is_stmt 0 view .LVU3580
 11492 1c28 4FF48170 		mov	r0, #258
 11493              	.LVL897:
3143:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11494              		.loc 1 3143 32 view .LVU3581
 11495 1c2c FEF756BC 		b	.L833
 11496              	.LVL898:
 11497              	.L1154:
 11498              	.LBB1288:
 11499              	.LBB1229:
 11500              	.LBB1165:
 11501              	.LBB795:
1407:src/keys.c    **** 			return STATE_UNFINISHED;
 11502              		.loc 1 1407 4 is_stmt 1 view .LVU3582
 11503              	.LBB780:
 11504              	.LBI780:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11505              		.loc 1 501 13 view .LVU3583
 11506              	.LBB781:
 502:src/keys.c    **** 		return;
 11507              		.loc 1 502 2 view .LVU3584
 502:src/keys.c    **** 		return;
 11508              		.loc 1 502 6 is_stmt 0 view .LVU3585
 11509 1c30 FFF7FEFF 		bl	is_bad_cmdline
 11510              	.LVL899:
 502:src/keys.c    **** 		return;
 11511              		.loc 1 502 5 view .LVU3586
 11512 1c34 0346     		mov	r3, r0
 11513 1c36 0028     		cmp	r0, #0
 11514 1c38 7EF4C1AD 		bne	.L1067
 11515 1c3c 2720     		movs	r0, #39
 11516              	.LBE781:
 11517              	.LBE780:
 11518              	.LBE795:
 11519              	.LBE1165:
ARM GAS  /tmp/cciIzcMf.s 			page 318


 11520              	.LBE1229:
 11521              	.LBE1288:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 11522              		.loc 1 2948 7 view .LVU3587
 11523 1c3e 1F46     		mov	r7, r3
 11524              	.LBB1289:
 11525              	.LBB1230:
 11526              	.LBB1166:
 11527              	.LBB796:
1408:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11528              		.loc 1 1408 11 view .LVU3588
 11529 1c40 4FF0330B 		mov	fp, #51
 11530              	.LBB783:
 11531              	.LBB782:
 11532 1c44 FFF7FEFF 		bl	init_arg.part.0
 11533              	.LVL900:
 11534 1c48 FEF72EBA 		b	.L565
 11535              	.LVL901:
 11536              	.L891:
1408:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11537              		.loc 1 1408 11 view .LVU3589
 11538              	.LBE782:
 11539              	.LBE783:
1476:src/keys.c    **** 		else if (shift == SHIFT_N)
 11540              		.loc 1 1476 11 view .LVU3590
 11541 1c4c 4FF4817B 		mov	fp, #258
 11542 1c50 D9E7     		b	.L832
 11543              	.LVL902:
 11544              	.L1148:
1476:src/keys.c    **** 		else if (shift == SHIFT_N)
 11545              		.loc 1 1476 11 view .LVU3591
 11546              	.LBE796:
 11547              	.LBE1166:
 11548              	.LBB1167:
 11549              	.LBB1039:
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 11550              		.loc 1 944 4 is_stmt 1 view .LVU3592
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 11551              		.loc 1 944 8 is_stmt 0 view .LVU3593
 11552 1c52 FFF7FEFF 		bl	is_bad_cmdline
 11553              	.LVL903:
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 11554              		.loc 1 944 7 view .LVU3594
 11555 1c56 0028     		cmp	r0, #0
 11556 1c58 7EF4B1AD 		bne	.L1067
 946:src/keys.c    **** 			State2.alphas = 1;
 11557              		.loc 1 946 4 is_stmt 1 view .LVU3595
 11558 1c5c FFF7FEFF 		bl	process_cmdline_set_lift
 11559              	.LVL904:
 947:src/keys.c    **** 		}
 11560              		.loc 1 947 4 view .LVU3596
 947:src/keys.c    **** 		}
 11561              		.loc 1 947 18 is_stmt 0 view .LVU3597
 11562 1c60 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11563 1c64 43F00803 		orr	r3, r3, #8
 11564 1c68 88F81630 		strb	r3, [r8, #22]
 11565 1c6c E3E4     		b	.L783
ARM GAS  /tmp/cciIzcMf.s 			page 319


 11566              	.L1151:
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11567              		.loc 1 981 4 is_stmt 1 view .LVU3598
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11568              		.loc 1 981 7 is_stmt 0 view .LVU3599
 11569 1c6e BAF5704F 		cmp	r10, #61440
 11570 1c72 06D1     		bne	.L788
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11571              		.loc 1 981 18 view .LVU3600
 11572 1c74 364B     		ldr	r3, .L1171+4
 11573 1c76 1B68     		ldr	r3, [r3]
 11574 1c78 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11575              		.loc 1 981 8 view .LVU3601
 11576 1c7c DA07     		lsls	r2, r3, #31
 11577 1c7e 3EF59EAD 		bmi	.L1067
 11578              	.LVL905:
 11579              	.L788:
 982:src/keys.c    **** 			}
 11580              		.loc 1 982 5 is_stmt 1 view .LVU3602
 11581              	.LBB1030:
 11582              	.LBI1030:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11583              		.loc 1 501 13 view .LVU3603
 11584              	.LBB1031:
 502:src/keys.c    **** 		return;
 11585              		.loc 1 502 2 view .LVU3604
 502:src/keys.c    **** 		return;
 11586              		.loc 1 502 6 is_stmt 0 view .LVU3605
 11587 1c82 FFF7FEFF 		bl	is_bad_cmdline
 11588              	.LVL906:
 502:src/keys.c    **** 		return;
 11589              		.loc 1 502 5 view .LVU3606
 11590 1c86 0446     		mov	r4, r0
 11591 1c88 0028     		cmp	r0, #0
 11592 1c8a 7EF498AD 		bne	.L1067
 11593 1c8e 5FFA8BF0 		uxtb	r0, fp
 11594 1c92 FFF7FEFF 		bl	init_arg.part.0
 11595              	.LVL907:
 11596              	.LBE1031:
 11597              	.LBE1030:
 11598              	.LBE1039:
 11599              	.LBE1167:
 11600              	.LBE1230:
 11601              	.LBE1289:
2948:src/keys.c    ****   if (was_paused && Pause == 0) {
 11602              		.loc 1 2948 7 view .LVU3607
 11603 1c96 2746     		mov	r7, r4
 11604              	.LBB1290:
 11605              	.LBB1231:
 11606              	.LBB1168:
 11607              	.LBB1040:
 984:src/keys.c    **** 		}
 11608              		.loc 1 984 11 view .LVU3608
 11609 1c98 4FF0330B 		mov	fp, #51
 11610              	.LVL908:
 984:src/keys.c    **** 		}
ARM GAS  /tmp/cciIzcMf.s 			page 320


 11611              		.loc 1 984 11 view .LVU3609
 11612 1c9c FEF704BA 		b	.L565
 11613              	.LVL909:
 11614              	.L1152:
 984:src/keys.c    **** 		}
 11615              		.loc 1 984 11 view .LVU3610
 11616              	.LBE1040:
 11617              	.LBE1168:
 11618              	.LBB1169:
 11619              	.LBB1001:
2561:src/keys.c    **** 		State2.digval = pc;
 11620              		.loc 1 2561 4 is_stmt 1 view .LVU3611
2561:src/keys.c    **** 		State2.digval = pc;
 11621              		.loc 1 2561 9 is_stmt 0 view .LVU3612
 11622 1ca0 2046     		mov	r0, r4
 11623 1ca2 0121     		movs	r1, #1
 11624 1ca4 FFF7FEFF 		bl	advance_to_next_label
 11625              	.LVL910:
 11626 1ca8 0446     		mov	r4, r0
 11627              	.LVL911:
2561:src/keys.c    **** 		State2.digval = pc;
 11628              		.loc 1 2561 9 view .LVU3613
 11629 1caa ACE6     		b	.L689
 11630              	.LVL912:
 11631              	.L1150:
2561:src/keys.c    **** 		State2.digval = pc;
 11632              		.loc 1 2561 9 view .LVU3614
 11633              	.LBE1001:
 11634              	.LBE1169:
 11635              	.LBB1170:
 11636              	.LBB1041:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11637              		.loc 1 972 4 is_stmt 1 view .LVU3615
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11638              		.loc 1 972 26 is_stmt 0 view .LVU3616
 11639 1cac 591E     		subs	r1, r3, #1
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11640              		.loc 1 972 17 view .LVU3617
 11641 1cae 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11642              		.loc 1 972 26 view .LVU3618
 11643 1cb2 4B42     		rsbs	r3, r1, #0
 11644 1cb4 4B41     		adcs	r3, r3, r1
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11645              		.loc 1 972 17 view .LVU3619
 11646 1cb6 63F3C712 		bfi	r2, r3, #7, #1
 11647 1cba 88F81720 		strb	r2, [r8, #23]
 973:src/keys.c    **** 		}
 11648              		.loc 1 973 4 is_stmt 1 view .LVU3620
 973:src/keys.c    **** 		}
 11649              		.loc 1 973 11 is_stmt 0 view .LVU3621
 11650 1cbe 4FF0330B 		mov	fp, #51
 11651              	.LVL913:
 973:src/keys.c    **** 		}
 11652              		.loc 1 973 11 view .LVU3622
 11653 1cc2 FEF7F1B9 		b	.L565
 11654              	.LVL914:
ARM GAS  /tmp/cciIzcMf.s 			page 321


 11655              	.L884:
 953:src/keys.c    **** 	  }
 11656              		.loc 1 953 13 view .LVU3623
 11657 1cc6 4FF0120B 		mov	fp, #18
 11658 1cca 60E7     		b	.L834
 11659              	.LVL915:
 11660              	.L1149:
 933:src/keys.c    **** 		}
 11661              		.loc 1 933 4 is_stmt 1 view .LVU3624
 933:src/keys.c    **** 		}
 11662              		.loc 1 933 34 is_stmt 0 view .LVU3625
 11663 1ccc 214B     		ldr	r3, .L1171+8
 11664              	.LVL916:
 933:src/keys.c    **** 		}
 11665              		.loc 1 933 11 view .LVU3626
 11666 1cce 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11667 1cd2 FFF7FEFF 		bl	check_f_key
 11668              	.LVL917:
 933:src/keys.c    **** 		}
 11669              		.loc 1 933 11 view .LVU3627
 11670 1cd6 8346     		mov	fp, r0
 11671              	.LVL918:
 933:src/keys.c    **** 		}
 11672              		.loc 1 933 11 view .LVU3628
 11673 1cd8 FEF75ABC 		b	.L594
 11674              	.LVL919:
 11675              	.L1117:
 933:src/keys.c    **** 		}
 11676              		.loc 1 933 11 view .LVU3629
 11677              	.LBE1041:
 11678              	.LBE1170:
 11679              	.LBB1171:
 11680              	.LBB830:
2710:src/keys.c    **** 			--State2.digval;
 11681              		.loc 1 2710 5 is_stmt 1 view .LVU3630
2710:src/keys.c    **** 			--State2.digval;
 11682              		.loc 1 2710 21 is_stmt 0 view .LVU3631
 11683 1cdc FFF7FEFF 		bl	global_regs
 11684              	.LVL920:
2710:src/keys.c    **** 			--State2.digval;
 11685              		.loc 1 2710 19 view .LVU3632
 11686 1ce0 A8F80800 		strh	r0, [r8, #8]	@ movhi
 11687 1ce4 FEF760BD 		b	.L724
 11688              	.LVL921:
 11689              	.L1143:
2741:src/keys.c    **** 			goto reset_window;
 11690              		.loc 1 2741 4 is_stmt 1 view .LVU3633
2741:src/keys.c    **** 			goto reset_window;
 11691              		.loc 1 2741 25 is_stmt 0 view .LVU3634
 11692 1ce8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11693 1cec 43F00403 		orr	r3, r3, #4
 11694 1cf0 88F81630 		strb	r3, [r8, #22]
2742:src/keys.c    **** 		}
 11695              		.loc 1 2742 4 is_stmt 1 view .LVU3635
 11696 1cf4 FEF75DBD 		b	.L715
 11697              	.LVL922:
 11698              	.L629:
ARM GAS  /tmp/cciIzcMf.s 			page 322


2742:src/keys.c    **** 		}
 11699              		.loc 1 2742 4 is_stmt 0 view .LVU3636
 11700              	.LBE830:
 11701              	.LBE1171:
 11702              	.LBB1172:
 11703              	.LBB868:
1925:src/keys.c    **** 		// Special 1
 11704              		.loc 1 1925 7 is_stmt 1 view .LVU3637
1925:src/keys.c    **** 		// Special 1
 11705              		.loc 1 1925 10 is_stmt 0 view .LVU3638
 11706 1cf8 0128     		cmp	r0, #1
 11707 1cfa 7EF4C3AF 		bne	.L631
1927:src/keys.c    **** 	}
 11708              		.loc 1 1927 3 is_stmt 1 view .LVU3639
1927:src/keys.c    **** 	}
 11709              		.loc 1 1927 18 is_stmt 0 view .LVU3640
 11710 1cfe BEF1000F 		cmp	lr, #0
 11711 1d02 14BF     		ite	ne
 11712 1d04 2723     		movne	r3, #39
 11713 1d06 1E23     		moveq	r3, #30
1927:src/keys.c    **** 	}
 11714              		.loc 1 1927 47 view .LVU3641
 11715 1d08 9B44     		add	fp, fp, r3
 11716              	.LVL923:
1927:src/keys.c    **** 	}
 11717              		.loc 1 1927 47 view .LVU3642
 11718 1d0a FEF741BC 		b	.L594
 11719              	.LVL924:
 11720              	.L885:
1927:src/keys.c    **** 	}
 11721              		.loc 1 1927 47 view .LVU3643
 11722              	.LBE868:
 11723              	.LBE1172:
 11724              	.LBB1173:
 11725              	.LBB1042:
 958:src/keys.c    **** 	  }
 11726              		.loc 1 958 13 view .LVU3644
 11727 1d0e 4FF0130B 		mov	fp, #19
 11728 1d12 3CE7     		b	.L834
 11729              	.LVL925:
 11730              	.L766:
 958:src/keys.c    **** 	  }
 11731              		.loc 1 958 13 view .LVU3645
 11732 1d14 0093     		str	r3, [sp]
 11733              	.LBE1042:
 11734              	.LBE1173:
 11735              	.LBB1174:
 11736              	.LBB1119:
1177:src/keys.c    **** 			break;
 11737              		.loc 1 1177 4 is_stmt 1 view .LVU3646
 11738              	.LVL926:
 11739              	.LBB1112:
 11740              	.LBI1112:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11741              		.loc 1 92 20 view .LVU3647
 11742              	.LBB1113:
  93:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/cciIzcMf.s 			page 323


 11743              		.loc 1 93 2 view .LVU3648
 11744              	.LBB1114:
 11745              	.LBI1114:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11746              		.loc 1 84 13 view .LVU3649
 11747              	.LBB1115:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11748              		.loc 1 85 2 view .LVU3650
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11749              		.loc 1 85 18 is_stmt 0 view .LVU3651
 11750 1d16 FFF7FEFF 		bl	shift_down
 11751              	.LVL927:
  86:src/keys.c    **** }
 11752              		.loc 1 86 2 is_stmt 1 view .LVU3652
 11753              	.LBE1115:
 11754              	.LBE1114:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11755              		.loc 1 94 2 view .LVU3653
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11756              		.loc 1 94 16 is_stmt 0 view .LVU3654
 11757 1d1a 009B     		ldr	r3, [sp]
 11758 1d1c 88F81030 		strb	r3, [r8, #16]
  95:src/keys.c    **** 	return r;
 11759              		.loc 1 95 2 is_stmt 1 view .LVU3655
  95:src/keys.c    **** 	return r;
 11760              		.loc 1 95 19 is_stmt 0 view .LVU3656
 11761 1d20 88F80DA0 		strb	r10, [r8, #13]
  96:src/keys.c    **** }
 11762              		.loc 1 96 2 is_stmt 1 view .LVU3657
  96:src/keys.c    **** }
 11763              		.loc 1 96 9 is_stmt 0 view .LVU3658
 11764 1d24 FEF734BC 		b	.L594
 11765              	.LVL928:
 11766              	.L765:
  96:src/keys.c    **** }
 11767              		.loc 1 96 9 view .LVU3659
 11768              	.LBE1113:
 11769              	.LBE1112:
1191:src/keys.c    **** 			break;
 11770              		.loc 1 1191 4 is_stmt 1 view .LVU3660
 11771 1d28 FFF7FEFF 		bl	init_state
 11772              	.LVL929:
1192:src/keys.c    **** 
 11773              		.loc 1 1192 4 view .LVU3661
 11774 1d2c FEF730BC 		b	.L594
 11775              	.LVL930:
 11776              	.L1144:
1192:src/keys.c    **** 
 11777              		.loc 1 1192 4 is_stmt 0 view .LVU3662
 11778              	.LBE1119:
 11779              	.LBE1174:
 11780              	.LBB1175:
 11781              	.LBB1086:
1078:src/keys.c    **** 			set_pc(0);
 11782              		.loc 1 1078 43 view .LVU3663
 11783 1d30 B3F8EE37 		ldrh	r3, [r3, #2030]
 11784 1d34 012B     		cmp	r3, #1
ARM GAS  /tmp/cciIzcMf.s 			page 324


 11785 1d36 7FF439AB 		bne	.L793
1079:src/keys.c    **** 		break;
 11786              		.loc 1 1079 4 is_stmt 1 view .LVU3664
 11787 1d3a FFF7FEFF 		bl	set_pc
 11788              	.LVL931:
 11789 1d3e FFF735BB 		b	.L793
 11790              	.LVL932:
 11791              	.L726:
1079:src/keys.c    **** 		break;
 11792              		.loc 1 1079 4 is_stmt 0 view .LVU3665
 11793              	.LBE1086:
 11794              	.LBE1175:
 11795              	.LBB1176:
 11796              	.LBB831:
2724:src/keys.c    **** 		goto reset_window;
 11797              		.loc 1 2724 4 is_stmt 1 view .LVU3666
2724:src/keys.c    **** 		goto reset_window;
 11798              		.loc 1 2724 18 is_stmt 0 view .LVU3667
 11799 1d42 0023     		movs	r3, #0
 11800 1d44 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11801 1d48 FEF733BD 		b	.L715
 11802              	.L1172:
 11803              		.align	2
 11804              	.L1171:
 11805 1d4c 00000000 		.word	NonProgrammable
 11806 1d50 00000000 		.word	main_ram
 11807 1d54 00000000 		.word	.LANCHOR20
 11808              	.LBE831:
 11809              	.LBE1176:
 11810              	.LBE1231:
 11811              	.LBE1290:
 11812              		.cfi_endproc
 11813              	.LFE58:
 11815              		.section	.text.process_keycode_with_shift,"ax",%progbits
 11816              		.align	1
 11817              		.p2align 2,,3
 11818              		.global	process_keycode_with_shift
 11819              		.syntax unified
 11820              		.thumb
 11821              		.thumb_func
 11822              		.fpu fpv4-sp-d16
 11824              	process_keycode_with_shift:
 11825              	.LFB57:
2926:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11826              		.loc 1 2926 61 is_stmt 1 view -0
 11827              		.cfi_startproc
 11828              		@ args = 0, pretend = 0, frame = 8
 11829              		@ frame_needed = 0, uses_anonymous_args = 0
 11830 0000 30B5     		push	{r4, r5, lr}
 11831              		.cfi_def_cfa_offset 12
 11832              		.cfi_offset 4, -12
 11833              		.cfi_offset 5, -8
 11834              		.cfi_offset 14, -4
 11835 0002 83B0     		sub	sp, sp, #12
 11836              		.cfi_def_cfa_offset 24
2926:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11837              		.loc 1 2926 61 is_stmt 0 view .LVU3669
ARM GAS  /tmp/cciIzcMf.s 			page 325


 11838 0004 02AB     		add	r3, sp, #8
 11839 0006 03E90300 		stmdb	r3, {r0, r1}
 11840 000a 019D     		ldr	r5, [sp, #4]
 11841 000c 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 11842              	.LVL933:
2927:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11843              		.loc 1 2927 4 is_stmt 1 view .LVU3670
2927:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11844              		.loc 1 2927 7 is_stmt 0 view .LVU3671
 11845 0010 002D     		cmp	r5, #0
 11846 0012 05DB     		blt	.L1174
2927:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11847              		.loc 1 2927 29 is_stmt 1 discriminator 1 view .LVU3672
 11848              	.LVL934:
 11849              	.LBB1291:
 11850              	.LBI1291:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11851              		.loc 1 92 20 discriminator 1 view .LVU3673
 11852              	.LBB1292:
  93:src/keys.c    **** 	State2.shifts = shift;
 11853              		.loc 1 93 2 discriminator 1 view .LVU3674
 11854              	.LBB1293:
 11855              	.LBI1293:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11856              		.loc 1 84 13 discriminator 1 view .LVU3675
 11857              	.LBB1294:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11858              		.loc 1 85 2 discriminator 1 view .LVU3676
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11859              		.loc 1 85 18 is_stmt 0 discriminator 1 view .LVU3677
 11860 0014 FFF7FEFF 		bl	shift_down
 11861              	.LVL935:
  86:src/keys.c    **** }
 11862              		.loc 1 86 2 is_stmt 1 discriminator 1 view .LVU3678
 11863              	.LBE1294:
 11864              	.LBE1293:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11865              		.loc 1 94 2 discriminator 1 view .LVU3679
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11866              		.loc 1 94 16 is_stmt 0 discriminator 1 view .LVU3680
 11867 0018 164B     		ldr	r3, .L1181
  95:src/keys.c    **** 	return r;
 11868              		.loc 1 95 19 discriminator 1 view .LVU3681
 11869 001a 0022     		movs	r2, #0
 11870              	.LBE1292:
 11871              	.LBE1291:
2927:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11872              		.loc 1 2927 29 discriminator 1 view .LVU3682
 11873 001c 1D74     		strb	r5, [r3, #16]
 11874              	.LBB1296:
 11875              	.LBB1295:
  95:src/keys.c    **** 	return r;
 11876              		.loc 1 95 2 is_stmt 1 discriminator 1 view .LVU3683
  95:src/keys.c    **** 	return r;
 11877              		.loc 1 95 19 is_stmt 0 discriminator 1 view .LVU3684
 11878 001e 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
ARM GAS  /tmp/cciIzcMf.s 			page 326


 11879              		.loc 1 96 2 is_stmt 1 discriminator 1 view .LVU3685
 11880              	.LVL936:
 11881              	.L1174:
  96:src/keys.c    **** }
 11882              		.loc 1 96 2 is_stmt 0 discriminator 1 view .LVU3686
 11883              	.LBE1295:
 11884              	.LBE1296:
2928:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 11885              		.loc 1 2928 4 is_stmt 1 view .LVU3687
2928:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 11886              		.loc 1 2928 7 is_stmt 0 view .LVU3688
 11887 0020 2E2C     		cmp	r4, #46
 11888 0022 21D0     		beq	.L1173
2929:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 11889              		.loc 1 2929 4 is_stmt 1 view .LVU3689
2929:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 11890              		.loc 1 2929 7 is_stmt 0 view .LVU3690
 11891 0024 332C     		cmp	r4, #51
 11892 0026 05D0     		beq	.L1179
2938:src/keys.c    ****  }
 11893              		.loc 1 2938 4 is_stmt 1 view .LVU3691
 11894 0028 2046     		mov	r0, r4
2939:src/keys.c    ****  
 11895              		.loc 1 2939 2 is_stmt 0 view .LVU3692
 11896 002a 03B0     		add	sp, sp, #12
 11897              		.cfi_remember_state
 11898              		.cfi_def_cfa_offset 12
 11899              		@ sp needed
 11900 002c BDE83040 		pop	{r4, r5, lr}
 11901              		.cfi_restore 14
 11902              		.cfi_restore 5
 11903              		.cfi_restore 4
 11904              		.cfi_def_cfa_offset 0
 11905              	.LVL937:
2938:src/keys.c    ****  }
 11906              		.loc 1 2938 4 view .LVU3693
 11907 0030 FFF7FEBF 		b	process_keycode
 11908              	.LVL938:
 11909              	.L1179:
 11910              		.cfi_restore_state
2930:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11911              		.loc 1 2930 6 is_stmt 1 view .LVU3694
 11912 0034 104B     		ldr	r3, .L1181+4
 11913 0036 41F23010 		movw	r0, #4400
 11914 003a 9847     		blx	r3
 11915              	.LVL939:
2930:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11916              		.loc 1 2930 31 view .LVU3695
 11917 003c 0A20     		movs	r0, #10
 11918 003e 0F4B     		ldr	r3, .L1181+8
 11919 0040 9847     		blx	r3
 11920              	.LVL940:
2930:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11921              		.loc 1 2930 46 view .LVU3696
 11922 0042 0F4B     		ldr	r3, .L1181+12
 11923 0044 9847     		blx	r3
 11924              	.LVL941:
ARM GAS  /tmp/cciIzcMf.s 			page 327


2931:src/keys.c    ****        // Was error just wait for confirmation
 11925              		.loc 1 2931 6 view .LVU3697
2931:src/keys.c    ****        // Was error just wait for confirmation
 11926              		.loc 1 2931 11 is_stmt 0 view .LVU3698
 11927 0046 0F4B     		ldr	r3, .L1181+16
 11928 0048 0120     		movs	r0, #1
 11929 004a 9847     		blx	r3
 11930              	.LVL942:
2931:src/keys.c    ****        // Was error just wait for confirmation
 11931              		.loc 1 2931 9 view .LVU3699
 11932 004c 0228     		cmp	r0, #2
 11933 004e 0DD0     		beq	.L1180
 11934              	.L1177:
2935:src/keys.c    ****      return;
 11935              		.loc 1 2935 6 is_stmt 1 view .LVU3700
 11936 0050 094B     		ldr	r3, .L1181+4
 11937 0052 42F26020 		movw	r0, #8800
 11938 0056 9847     		blx	r3
 11939              	.LVL943:
2935:src/keys.c    ****      return;
 11940              		.loc 1 2935 31 view .LVU3701
 11941 0058 084B     		ldr	r3, .L1181+8
 11942 005a 0A20     		movs	r0, #10
 11943 005c 9847     		blx	r3
 11944              	.LVL944:
2935:src/keys.c    ****      return;
 11945              		.loc 1 2935 46 view .LVU3702
 11946 005e 084B     		ldr	r3, .L1181+12
2939:src/keys.c    ****  
 11947              		.loc 1 2939 2 is_stmt 0 view .LVU3703
 11948 0060 03B0     		add	sp, sp, #12
 11949              		.cfi_remember_state
 11950              		.cfi_def_cfa_offset 12
 11951              		@ sp needed
 11952 0062 BDE83040 		pop	{r4, r5, lr}
 11953              		.cfi_restore 14
 11954              		.cfi_restore 5
 11955              		.cfi_restore 4
 11956              		.cfi_def_cfa_offset 0
 11957              	.LVL945:
2935:src/keys.c    ****      return;
 11958              		.loc 1 2935 46 view .LVU3704
 11959 0066 1847     		bx	r3	@ indirect register sibling call
 11960              	.LVL946:
 11961              	.L1173:
 11962              		.cfi_restore_state
2939:src/keys.c    ****  
 11963              		.loc 1 2939 2 view .LVU3705
 11964 0068 03B0     		add	sp, sp, #12
 11965              		.cfi_remember_state
 11966              		.cfi_def_cfa_offset 12
 11967              		@ sp needed
 11968 006a 30BD     		pop	{r4, r5, pc}
 11969              	.LVL947:
 11970              	.L1180:
 11971              		.cfi_restore_state
2933:src/keys.c    ****      }
ARM GAS  /tmp/cciIzcMf.s 			page 328


 11972              		.loc 1 2933 8 is_stmt 1 view .LVU3706
 11973 006c 064B     		ldr	r3, .L1181+20
 11974 006e 9847     		blx	r3
 11975              	.LVL948:
 11976 0070 EEE7     		b	.L1177
 11977              	.L1182:
 11978 0072 00BF     		.align	2
 11979              	.L1181:
 11980 0074 00000000 		.word	StateWhileOn
 11981 0078 F5020008 		.word	134218485
 11982 007c 05040008 		.word	134218757
 11983 0080 F9020008 		.word	134218489
 11984 0084 79030008 		.word	134218617
 11985 0088 99030008 		.word	134218649
 11986              		.cfi_endproc
 11987              	.LFE57:
 11989              		.comm	NonProgrammable,4,4
 11990              		.comm	GoFast,4,4
 11991              		.comm	OpCodeDisplayPending,4,4
 11992              		.comm	OpCode,4,4
 11993              		.comm	WasDataEntry,4,4
 11994              		.section	.bss.was_paused.9649,"aw",%nobits
 11995              		.align	2
 11996              		.set	.LANCHOR12,. + 0
 11999              	was_paused.9649:
 12000 0000 00000000 		.space	4
 12001              		.section	.rodata.alpha_arrows,"a"
 12002              		.align	2
 12005              	alpha_arrows:
 12006 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 12006      03049F5E 
 12006      7F
 12007              		.section	.rodata.alpha_catalogue,"a"
 12008              		.align	2
 12011              	alpha_catalogue:
 12012 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 12012      9EAE0AA2 
 12012      7EB5AE6B 
 12012      AAEEBC
 12013 000f 284AB0   		.ascii	"(J\260"
 12014              		.section	.rodata.alpha_compares,"a"
 12015              		.align	2
 12018              	alpha_compares:
 12019 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 12019      0A3E5B5D 
 12019      7B7D
 12020              		.section	.rodata.alpha_letters,"a"
 12021              		.align	2
 12022              		.set	.LANCHOR3,. + 0
 12025              	alpha_letters:
 12026 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 12026      88C4C5C6 
 12026      C784C8C9 
 12026      CA
 12027 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 12027      CECFD0D1 
 12027      D2D3D415 
ARM GAS  /tmp/cciIzcMf.s 			page 329


 12027      D5
 12028 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 12028      DADBDC01 
 12028      1902DD1A 
 12028      DE
 12029 0027 DF       		.ascii	"\337"
 12030              		.section	.rodata.alpha_letters_lower,"a"
 12031              		.align	2
 12032              		.set	.LANCHOR4,. + 0
 12035              	alpha_letters_lower:
 12036 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 12036      89E4E5E6 
 12036      E785E8E9 
 12036      EA
 12037 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 12037      EEEFF0F1 
 12037      F2F3F416 
 12037      F5
 12038 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 12038      FAFBFC01 
 12038      1902FD1A 
 12038      FE
 12039 0027 FF       		.ascii	"\377"
 12040              		.section	.rodata.alpha_subscripts,"a"
 12041              		.align	2
 12044              	alpha_subscripts:
 12045 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 12045      9A80D798 
 12045      BB1486BC 
 12045      F7
 12046 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 12046      BF818B9C 
 12046      8C999D90 
 12046      9B
 12047              		.section	.rodata.alpha_symbols,"a"
 12048              		.align	2
 12051              	alpha_symbols:
 12052 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 12052      222A405F 
 12052      7E25240C 
 12052      1E1F8EAE 
 12052      926023
 12053              		.section	.rodata.alphamap.9182,"a"
 12054              		.align	2
 12055              		.set	.LANCHOR9,. + 0
 12058              	alphamap.9182:
 12059 0000 41004100 		.ascii	"A\000A\000a\240"
 12059      61A0
 12060 0006 42004200 		.ascii	"B\000B\000b\241"
 12060      62A1
 12061 000c 43008200 		.ascii	"C\000\202\000c\242"
 12061      63A2
 12062 0012 44008300 		.ascii	"D\000\203\000d\243"
 12062      64A3
 12063 0018 450D4500 		.ascii	"E\015E\000e\244"
 12063      65A4
 12064 001e 46009400 		.ascii	"F\000\224\000f\264"
ARM GAS  /tmp/cciIzcMf.s 			page 330


 12064      66B4
 12065 0024 47008200 		.ascii	"G\000\202\000g\242"
 12065      67A2
 12066 002a 48005800 		.ascii	"H\000X\000h\265"
 12066      68B5
 12067 0030 49004900 		.ascii	"I\000I\000i\250"
 12067      69A8
 12068 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 12068      6A00
 12069 003c 4B004B00 		.ascii	"K\000K\000k\251"
 12069      6BA9
 12070 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 12070      6CAA
 12071 0048 00004800 		.ascii	"\000\000H\000\000\246"
 12071      00A6
 12072 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 12072      6DAB
 12073 0054 4E084E95 		.ascii	"N\010N\225n\254"
 12073      6EAC
 12074 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 12074      6FB7
 12075 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 12075      0000
 12076 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 12076      0000
 12077 006c 50378F26 		.ascii	"P7\217&p\257"
 12077      70AF
 12078 0072 5138007C 		.ascii	"Q8\000|q\000"
 12078      7100
 12079 0078 5239520B 		.ascii	"R9R\013r\260"
 12079      72B0
 12080 007e 532F915C 		.ascii	"S/\221\\s\261"
 12080      73B1
 12081 0084 00000021 		.ascii	"\000\000\000!\000\000"
 12081      0000
 12082 008a 54345400 		.ascii	"T4T\000t\262"
 12082      74B2
 12083 0090 55350000 		.ascii	"U5\000\000u\000"
 12083      7500
 12084 0096 56360000 		.ascii	"V6\000\000v\000"
 12084      7600
 12085 009c 571C0000 		.ascii	"W\034\000\000w\000"
 12085      7700
 12086 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 12086      0000
 12087 00a8 58318D00 		.ascii	"X1\215\000x\255"
 12087      78AD
 12088 00ae 59325900 		.ascii	"Y2Y\000y\263"
 12088      79B3
 12089 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 12089      7AA5
 12090 00ba 2D282900 		.ascii	"-()\000\000\000"
 12090      0000
 12091 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 12091      0000
 12092 00c6 3A308720 		.ascii	":0\207 ;\247"
 12092      3BA7
ARM GAS  /tmp/cciIzcMf.s 			page 331


 12093 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 12093      2EB6
 12094 00d2 3F002100 		.ascii	"?\000!\000\000\000"
 12094      0000
 12095 00d8 202B3D00 		.ascii	" +=\000\000\000"
 12095      0000
 12096 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 12096      0000
 12097              		.section	.rodata.amap.9173,"a"
 12098              		.align	2
 12099              		.set	.LANCHOR10,. + 0
 12102              	amap.9173:
 12103 0000 04       		.byte	4
 12104 0001 000D00   		.ascii	"\000\015\000"
 12105 0004 05       		.byte	5
 12106 0005 000E09   		.ascii	"\000\016\011"
 12107 0008 08       		.byte	8
 12108 0009 00000F   		.ascii	"\000\000\017"
 12109 000c 1F       		.byte	31
 12110 000d 00000C   		.ascii	"\000\000\014"
 12111 0010 21       		.byte	33
 12112 0011 00000A   		.ascii	"\000\000\012"
 12113 0014 26       		.byte	38
 12114 0015 00000B   		.ascii	"\000\000\013"
 12115              		.section	.rodata.catalogue,"a"
 12116              		.align	2
 12119              	catalogue:
 12120 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 12120      C15F57E3 
 12120      D8A23B58 
 12120      16BC7D44 
 12120      71010974 
 12121 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 12121      4F569D21 
 12121      489136D5 
 12121      B6695A66 
 12121      4B0E6F17 
 12122 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 12122      69256099 
 12122      76599460 
 12122      1AC6ECC3 
 12122      6B5B144B 
 12123 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
 12123      023ED1A3 
 12123      0B0F28DB 
 12123      2611B30D 
 12123      57
 12124 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 12124      D0942DAE 
 12124      2B1B75FC 
 12124      A027AB82 
 12124      A89F
 12125 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 12125      BAAEEBCA 
 12125      D8A12AD9 
 12125      94919D
 12126 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
ARM GAS  /tmp/cciIzcMf.s 			page 332


 12126      B05F1007 
 12126      15A26FD6 
 12126      D5A9A1
 12127              		.section	.rodata.catalogue_sizes.9447,"a"
 12128              		.align	2
 12129              		.set	.LANCHOR2,. + 0
 12132              	catalogue_sizes.9447:
 12133 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
 12133      363C437E 
 12133      25340E13 
 12133      0A09281A 
 12133      4C4C580E 
 12134              		.section	.rodata.catalogues.9455,"a"
 12135              		.align	2
 12136              		.set	.LANCHOR6,. + 0
 12139              	catalogues.9455:
 12140 0000 00000000 		.word	0
 12141 0004 00000000 		.word	catalogue
 12142 0008 00000000 		.word	cplx_catalogue
 12143 000c 00000000 		.word	stats_catalogue
 12144 0010 00000000 		.word	prob_catalogue
 12145 0014 00000000 		.word	int_catalogue
 12146 0018 00000000 		.word	prog_catalogue
 12147 001c 00000000 		.word	program_xfcn
 12148 0020 00000000 		.word	test_catalogue
 12149 0024 00000000 		.word	mode_catalogue
 12150 0028 00000000 		.word	alpha_catalogue
 12151 002c 00000000 		.word	alpha_symbols
 12152 0030 00000000 		.word	alpha_compares
 12153 0034 00000000 		.word	alpha_arrows
 12154 0038 00000000 		.word	alpha_letters
 12155 003c 00000000 		.word	alpha_subscripts
 12156 0040 00000000 		.word	0
 12157 0044 00000000 		.word	0
 12158 0048 00000000 		.word	0
 12159 004c 00000000 		.word	sums_catalogue
 12160 0050 00000000 		.word	matrix_catalogue
 12161              		.section	.rodata.cmap.9172,"a"
 12162              		.align	2
 12163              		.set	.LANCHOR11,. + 0
 12166              	cmap.9172:
 12167 0000 04       		.byte	4
 12168 0001 120012   		.ascii	"\022\000\022"
 12169 0004 05       		.byte	5
 12170 0005 090909   		.ascii	"\011\011\011"
 12171 0008 06       		.byte	6
 12172 0009 151515   		.ascii	"\025\025\025"
 12173 000c 0C       		.byte	12
 12174 000d 100011   		.ascii	"\020\000\021"
 12175 0010 19       		.byte	25
 12176 0011 040004   		.ascii	"\004\000\004"
 12177 0014 1A       		.byte	26
 12178 0015 030003   		.ascii	"\003\000\003"
 12179 0018 1B       		.byte	27
 12180 0019 130013   		.ascii	"\023\000\023"
 12181 001c 1C       		.byte	28
 12182 001d 140014   		.ascii	"\024\000\024"
ARM GAS  /tmp/cciIzcMf.s 			page 333


 12183 0020 1E       		.byte	30
 12184 0021 171717   		.ascii	"\027\027\027"
 12185 0024 1F       		.byte	31
 12186 0025 080808   		.ascii	"\010\010\010"
 12187 0028 20       		.byte	32
 12188 0029 060606   		.ascii	"\006\006\006"
 12189 002c 21       		.byte	33
 12190 002d 010502   		.ascii	"\001\005\002"
 12191              		.section	.rodata.conv_catalogue,"a"
 12192              		.align	2
 12193              		.set	.LANCHOR5,. + 0
 12196              	conv_catalogue:
 12197 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 12197      2B2DDD37 
 12197      27393133 
 12197      111605DC 
 12197      DE19
 12198 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 12198      0D0F8D08 
 12198      8F0A2A2C 
 12198      47434517 
 12198      3F30
 12199 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 12199      02062622 
 12199      20282435 
 12199      2F012310 
 12199      0C0E2112 
 12200 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 12200      1E292E09 
 12200      36383E3A 
 12200      3C4025DF 
 12200      3D8B8E03 
 12201 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 12201      4A484642 
 12201      441F
 12202              		.section	.rodata.conv_mapping.9494,"a"
 12203              		.align	2
 12204              		.set	.LANCHOR8,. + 0
 12207              	conv_mapping.9494:
 12208 0000 8502     		.short	645
 12209 0002 8402     		.short	644
 12210 0004 8602     		.short	646
 12211 0006 8702     		.short	647
 12212 0008 8202     		.short	642
 12213 000a 8302     		.short	643
 12214 000c 3202     		.short	562
 12215 000e 3302     		.short	563
 12216 0010 3402     		.short	564
 12217 0012 3502     		.short	565
 12218 0014 3602     		.short	566
 12219 0016 3702     		.short	567
 12220              		.section	.rodata.cplx_catalogue,"a"
 12221              		.align	2
 12224              	cplx_catalogue:
 12225 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 12225      013BCEE1 
 12225      0DDA785F 
ARM GAS  /tmp/cciIzcMf.s 			page 334


 12225      57DA6676 
 12225      66E7E5CF 
 12226 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
 12226      A2EB09B5 
 12226      F87500
 12227              		.section	.rodata.disp.9310,"a"
 12228              		.align	2
 12229              		.set	.LANCHOR15,. + 0
 12232              	disp.9310:
 12233 0000 03       		.byte	3
 12234 0001 02       		.byte	2
 12235 0002 05       		.byte	5
 12236 0003 04       		.byte	4
 12237              		.section	.rodata.int_catalogue,"a"
 12238              		.align	2
 12241              	int_catalogue:
 12242 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 12242      F53D9BE2 
 12242      59BD10AF 
 12242      6434F569 
 12242      D926A094 
 12243 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 12243      965C9946 
 12243      B1716ECC 
 12243      36B495BB 
 12243      6EF3DE
 12244 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 12244      A0FBBC6F 
 12244      2C3D840D 
 12244      4CA42DAE 
 12244      2B1B7AE0 
 12245 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
 12245      E6BAAEEB 
 12245      CAD8AB49 
 12245      100719
 12246 004a C7       		.ascii	"\307"
 12247              		.section	.rodata.linear_key_map.9143,"a"
 12248              		.align	2
 12249              		.set	.LANCHOR1,. + 0
 12252              	linear_key_map.9143:
 12253 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 12253      04050607 
 12253      08090A0B 
 12253      0C
 12254 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 12254      00111213 
 12254      14150016 
 12254      17
 12255 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 12255      1B1C1D1E 
 12255      1F002021 
 12255      22232425 
 12255      25252525 
 12256 002e 25       		.ascii	"%"
 12257              		.section	.rodata.linear_key_map.9147,"a"
 12258              		.align	2
 12259              		.set	.LANCHOR18,. + 0
ARM GAS  /tmp/cciIzcMf.s 			page 335


 12262              	linear_key_map.9147:
 12263 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 12263      04050607 
 12263      08222222 
 12263      090A0B
 12264 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 12264      0F101112 
 12264      00131415 
 12264      16
 12265 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 12265      1A1B1C00 
 12265      1D1E1F20 
 12265      21222222 
 12266 002c 040522   		.ascii	"\004\005\""
 12267              		.section	.rodata.map.9159,"a"
 12268              		.align	2
 12269              		.set	.LANCHOR0,. + 0
 12272              	map.9159:
 12273 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 12273      FF7F7F7F 
 12273      6D6E6F6C 
 12273      FFFFFFFF 
 12274 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 12274      097F7FE7 
 12274      05067F7F 
 12274      E4
 12275 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\177"
 12275      00F07F7F 
 12275      7F
 12276              		.section	.rodata.matrix_catalogue,"a"
 12277              		.align	2
 12280              	matrix_catalogue:
 12281 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 12281      D835DC23 
 12281      6D856E58 
 12281      66E1C16E 
 12281      98A631C3 
 12282 0017 1C       		.ascii	"\034"
 12283              		.section	.rodata.mode_catalogue,"a"
 12284              		.align	2
 12287              	mode_catalogue:
 12288 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 12288      8BBEC663 
 12288      A8E91F88 
 12288      01FC7CB8 
 12289 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 12289      2449C26C 
 12289      62194932 
 12289      489A1930 
 12289      821083
 12290 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 12290      87320A63 
 12290      10C7324A 
 12290      7314C623 
 12290      8CE0E039 
 12291 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 12291      BB0F33C8 
ARM GAS  /tmp/cciIzcMf.s 			page 336


 12291      99
 12292              		.section	.rodata.op_map.9226,"a"
 12293              		.align	2
 12294              		.set	.LANCHOR22,. + 0
 12297              	op_map.9226:
 12298 0000 1500     		.short	21
 12299 0002 0B02     		.short	523
 12300 0004 0003     		.short	768
 12301 0006 0A02     		.short	522
 12302 0008 1300     		.short	19
 12303 000a 1400     		.short	20
 12304 000c 0300     		.short	3
 12305 000e 0A00     		.short	10
 12306 0010 0701     		.short	263
 12307 0012 0000     		.short	0
 12308 0014 6531     		.short	12645
 12309 0016 0300     		.short	3
 12310 0018 0200     		.short	2
 12311 001a 0100     		.short	1
 12312 001c 4400     		.short	68
 12313 001e 0C00     		.short	12
 12314 0020 0D00     		.short	13
 12315 0022 0E00     		.short	14
 12316 0024 0403     		.short	772
 12317 0026 2F00     		.short	47
 12318 0028 0900     		.short	9
 12319 002a 0A00     		.short	10
 12320 002c 0B00     		.short	11
 12321 002e 0303     		.short	771
 12322 0030 2E00     		.short	46
 12323 0032 0600     		.short	6
 12324 0034 0700     		.short	7
 12325 0036 0800     		.short	8
 12326 0038 0203     		.short	770
 12327 003a 3300     		.short	51
 12328 003c 0500     		.short	5
 12329 003e 0400     		.short	4
 12330 0040 3B01     		.short	315
 12331 0042 0103     		.short	769
 12332 0044 0001     		.short	256
 12333              		.section	.rodata.op_map.9249,"a"
 12334              		.align	2
 12335              		.set	.LANCHOR19,. + 0
 12338              	op_map.9249:
 12339 0000 0100     		.short	1
 12340 0002 0000     		.short	0
 12341 0004 20F2     		.short	-3552
 12342 0006 23F2     		.short	-3549
 12343 0008 21F2     		.short	-3551
 12344 000a 24F2     		.short	-3548
 12345 000c 22F2     		.short	-3550
 12346 000e 25F2     		.short	-3547
 12347 0010 47F1     		.short	-3769
 12348 0012 46F1     		.short	-3770
 12349 0014 4E01     		.short	334
 12350 0016 4D01     		.short	333
 12351 0018 5C01     		.short	348
ARM GAS  /tmp/cciIzcMf.s 			page 337


 12352 001a 35F1     		.short	-3787
 12353 001c 5B01     		.short	347
 12354 001e 36F1     		.short	-3786
 12355 0020 3301     		.short	307
 12356 0022 37F1     		.short	-3785
 12357 0024 3300     		.short	51
 12358 0026 0C01     		.short	268
 12359 0028 2B00     		.short	43
 12360 002a 2C00     		.short	44
 12361 002c 028B     		.short	-29950
 12362 002e 088B     		.short	-29944
 12363 0030 0A8B     		.short	-29942
 12364 0032 108B     		.short	-29936
 12365 0034 4301     		.short	323
 12366 0036 3D01     		.short	317
 12367 0038 0902     		.short	521
 12368 003a 0802     		.short	520
 12369 003c 1002     		.short	528
 12370 003e 0D02     		.short	525
 12371 0040 0F02     		.short	527
 12372 0042 0E02     		.short	526
 12373 0044 0003     		.short	768
 12374 0046 0803     		.short	776
 12375 0048 0BF2     		.short	-3573
 12376 004a 1603     		.short	790
 12377 004c 1203     		.short	786
 12378 004e 1303     		.short	787
 12379 0050 3DF2     		.short	-3523
 12380 0052 3EF2     		.short	-3522
 12381 0054 24F1     		.short	-3804
 12382 0056 1EF1     		.short	-3810
 12383 0058 75F2     		.short	-3467
 12384 005a 27F1     		.short	-3801
 12385 005c 0A02     		.short	522
 12386 005e 1602     		.short	534
 12387 0060 5100     		.short	81
 12388 0062 5200     		.short	82
 12389 0064 0000     		.short	0
 12390 0066 0100     		.short	1
 12391 0068 48F0     		.short	-4024
 12392 006a 4BF0     		.short	-4021
 12393 006c 47F0     		.short	-4025
 12394 006e 46F0     		.short	-4026
 12395 0070 77F2     		.short	-3465
 12396 0072 78F2     		.short	-3464
 12397 0074 3300     		.short	51
 12398 0076 3300     		.short	51
 12399 0078 0502     		.short	517
 12400 007a 0602     		.short	518
 12401 007c 0402     		.short	516
 12402 007e 0002     		.short	512
 12403 0080 4200     		.short	66
 12404 0082 3801     		.short	312
 12405 0084 3A00     		.short	58
 12406 0086 3B00     		.short	59
 12407 0088 0001     		.short	256
 12408 008a 0001     		.short	256
ARM GAS  /tmp/cciIzcMf.s 			page 338


 12409              		.section	.rodata.op_map.9272,"a"
 12410              		.align	2
 12411              		.set	.LANCHOR21,. + 0
 12414              	op_map.9272:
 12415 0000 4C80     		.short	-32692
 12416 0002 4D80     		.short	-32691
 12417 0004 4E80     		.short	-32690
 12418 0006 4F80     		.short	-32689
 12419 0008 3300     		.short	51
 12420 000a 3300     		.short	51
 12421 000c 3300     		.short	51
 12422 000e 2180     		.short	-32735
 12423 0010 0801     		.short	264
 12424 0012 8780     		.short	-32633
 12425 0014 1180     		.short	-32751
 12426 0016 7C02     		.short	636
 12427 0018 5560     		.short	24661
 12428 001a 3F01     		.short	319
 12429 001c 4580     		.short	-32699
 12430 001e 1C03     		.short	796
 12431 0020 1D03     		.short	797
 12432 0022 1E03     		.short	798
 12433 0024 0603     		.short	774
 12434 0026 2F02     		.short	559
 12435 0028 3300     		.short	51
 12436 002a 3300     		.short	51
 12437 002c 3300     		.short	51
 12438 002e 3300     		.short	51
 12439 0030 3300     		.short	51
 12440 0032 3300     		.short	51
 12441 0034 3300     		.short	51
 12442 0036 3300     		.short	51
 12443 0038 1640     		.short	16406
 12444 003a 0201     		.short	258
 12445 003c 6D80     		.short	-32659
 12446 003e 5001     		.short	336
 12447 0040 3300     		.short	51
 12448 0042 1540     		.short	16405
 12449 0044 0001     		.short	256
 12450              		.section	.rodata.op_map.9282,"a"
 12451              		.align	2
 12452              		.set	.LANCHOR17,. + 0
 12455              	op_map.9282:
 12456 0000 0100     		.short	1
 12457 0002 0100     		.short	1
 12458 0004 0000     		.short	0
 12459 0006 0000     		.short	0
 12460 0008 0B05     		.short	1291
 12461 000a 2005     		.short	1312
 12462 000c 2305     		.short	1315
 12463 000e 3300     		.short	51
 12464 0010 0006     		.short	1536
 12465 0012 2105     		.short	1313
 12466 0014 2405     		.short	1316
 12467 0016 3300     		.short	51
 12468 0018 0A05     		.short	1290
 12469 001a 2205     		.short	1314
ARM GAS  /tmp/cciIzcMf.s 			page 339


 12470 001c 2505     		.short	1317
 12471 001e 3300     		.short	51
 12472 0020 3300     		.short	51
 12473 0022 4701     		.short	327
 12474 0024 4601     		.short	326
 12475 0026 3300     		.short	51
 12476 0028 3300     		.short	51
 12477 002a 3300     		.short	51
 12478 002c 3300     		.short	51
 12479 002e 3300     		.short	51
 12480 0030 15FF     		.short	-235
 12481 0032 3300     		.short	51
 12482 0034 3300     		.short	51
 12483 0036 3300     		.short	51
 12484 0038 1AFF     		.short	-230
 12485 003a 3300     		.short	51
 12486 003c 3300     		.short	51
 12487 003e 8CFF     		.short	-116
 12488 0040 0901     		.short	265
 12489 0042 3300     		.short	51
 12490 0044 3300     		.short	51
 12491 0046 0A01     		.short	266
 12492 0048 0B01     		.short	267
 12493 004a 3300     		.short	51
 12494 004c 0D01     		.short	269
 12495 004e 0D01     		.short	269
 12496 0050 663F     		.short	16230
 12497 0052 3300     		.short	51
 12498 0054 3300     		.short	51
 12499 0056 1FFF     		.short	-225
 12500 0058 3805     		.short	1336
 12501 005a 3300     		.short	51
 12502 005c 3300     		.short	51
 12503 005e 3905     		.short	1337
 12504 0060 5521     		.short	8533
 12505 0062 3300     		.short	51
 12506 0064 3300     		.short	51
 12507 0066 5521     		.short	8533
 12508 0068 3300     		.short	51
 12509 006a 3300     		.short	51
 12510 006c 3300     		.short	51
 12511 006e 3300     		.short	51
 12512 0070 3300     		.short	51
 12513 0072 0905     		.short	1289
 12514 0074 0805     		.short	1288
 12515 0076 3300     		.short	51
 12516 0078 07A8     		.short	-22521
 12517 007a 1005     		.short	1296
 12518 007c 0D05     		.short	1293
 12519 007e 3300     		.short	51
 12520 0080 08A8     		.short	-22520
 12521 0082 0F05     		.short	1295
 12522 0084 0E05     		.short	1294
 12523 0086 3300     		.short	51
 12524 0088 09A8     		.short	-22519
 12525 008a 0006     		.short	1536
 12526 008c 0806     		.short	1544
ARM GAS  /tmp/cciIzcMf.s 			page 340


 12527 008e 3300     		.short	51
 12528 0090 0406     		.short	1540
 12529 0092 0B05     		.short	1291
 12530 0094 1606     		.short	1558
 12531 0096 3300     		.short	51
 12532 0098 3300     		.short	51
 12533 009a 1206     		.short	1554
 12534 009c 1306     		.short	1555
 12535 009e 2F05     		.short	1327
 12536 00a0 04A8     		.short	-22524
 12537 00a2 3300     		.short	51
 12538 00a4 3300     		.short	51
 12539 00a6 3300     		.short	51
 12540 00a8 05A8     		.short	-22523
 12541 00aa 3300     		.short	51
 12542 00ac 3300     		.short	51
 12543 00ae 3300     		.short	51
 12544 00b0 06A8     		.short	-22522
 12545 00b2 3300     		.short	51
 12546 00b4 3300     		.short	51
 12547 00b6 3300     		.short	51
 12548 00b8 0306     		.short	1539
 12549 00ba 0A05     		.short	1290
 12550 00bc 1605     		.short	1302
 12551 00be 1605     		.short	1302
 12552 00c0 3300     		.short	51
 12553 00c2 3300     		.short	51
 12554 00c4 3300     		.short	51
 12555 00c6 3300     		.short	51
 12556 00c8 01A8     		.short	-22527
 12557 00ca 0000     		.short	0
 12558 00cc 0100     		.short	1
 12559 00ce 3300     		.short	51
 12560 00d0 02A8     		.short	-22526
 12561 00d2 3300     		.short	51
 12562 00d4 3300     		.short	51
 12563 00d6 3300     		.short	51
 12564 00d8 03A8     		.short	-22525
 12565 00da 3300     		.short	51
 12566 00dc 3300     		.short	51
 12567 00de 3300     		.short	51
 12568 00e0 0206     		.short	1538
 12569 00e2 3300     		.short	51
 12570 00e4 3300     		.short	51
 12571 00e6 3300     		.short	51
 12572 00e8 3300     		.short	51
 12573 00ea 3300     		.short	51
 12574 00ec 3300     		.short	51
 12575 00ee 0201     		.short	258
 12576 00f0 00A8     		.short	-22528
 12577 00f2 0505     		.short	1285
 12578 00f4 0605     		.short	1286
 12579 00f6 3300     		.short	51
 12580 00f8 B801     		.short	440
 12581 00fa 0405     		.short	1284
 12582 00fc 0005     		.short	1280
 12583 00fe 3300     		.short	51
ARM GAS  /tmp/cciIzcMf.s 			page 341


 12584 0100 3300     		.short	51
 12585 0102 3300     		.short	51
 12586 0104 3300     		.short	51
 12587 0106 3300     		.short	51
 12588 0108 0106     		.short	1537
 12589 010a 3300     		.short	51
 12590 010c 3300     		.short	51
 12591 010e 3300     		.short	51
 12592 0110 0001     		.short	256
 12593 0112 0001     		.short	256
 12594 0114 0001     		.short	256
 12595 0116 0001     		.short	256
 12596              		.section	.rodata.op_map.9294,"a"
 12597              		.align	2
 12598              		.set	.LANCHOR13,. + 0
 12601              	op_map.9294:
 12602 0000 2A27     		.ascii	"*'"
 12603 0002 2B28     		.ascii	"+("
 12604 0004 2C29     		.ascii	",)"
 12605              		.section	.rodata.op_map.9309,"a"
 12606              		.align	2
 12607              		.set	.LANCHOR14,. + 0
 12610              	op_map.9309:
 12611 0000 1A02     		.short	538
 12612 0002 7B02     		.short	635
 12613 0004 1B02     		.short	539
 12614 0006 7A02     		.short	634
 12615 0008 1C02     		.short	540
 12616 000a 3300     		.short	51
 12617              		.section	.rodata.op_map2.9250,"a"
 12618              		.align	2
 12619              		.set	.LANCHOR20,. + 0
 12622              	op_map2.9250:
 12623 0000 3300     		.short	51
 12624 0002 3300     		.short	51
 12625 0004 0003     		.short	768
 12626 0006 0A02     		.short	522
 12627              		.section	.rodata.opcode_breaks,"a"
 12628              		.align	2
 12629              		.set	.LANCHOR7,. + 0
 12632              	opcode_breaks:
 12633 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 12633      0C992F
 12634              		.section	.rodata.prob_catalogue,"a"
 12635              		.align	2
 12638              	prob_catalogue:
 12639 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 12639      44561575 
 12639      9D595013 
 12639      F57D414E 
 12639      55D4E93B 
 12640 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 12640      15955355 
 12640      55459956 
 12640      53D4E591 
 12640      50525485 
 12641 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
ARM GAS  /tmp/cciIzcMf.s 			page 342


 12641      85474D95 
 12641      C4DD384F 
 12641      53C5793E 
 12641      569304D1 
 12642 0043 B0       		.ascii	"\260"
 12643              		.section	.rodata.prog_catalogue,"a"
 12644              		.align	2
 12647              	prog_catalogue:
 12648 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 12648      791D4781 
 12648      C8742A31 
 12648      9B4042B3 
 12648      2CE1BA92 
 12649 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
 12649      DA332D1B 
 12649      36CFC28E 
 12649      2390E738 
 12649      CE8C
 12650 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 12650      B0D0DC39 
 12650      47039B09 
 12650      ACCDF1D8 
 12650      CD
 12651 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 12651      B22C0E1B 
 12651      18D20DEB 
 12651      2302A4
 12652 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 12652      CBA8AA3C 
 12652      00AE2B6F 
 12652      FC58
 12653              		.section	.rodata.program_xfcn,"a"
 12654              		.align	2
 12657              	program_xfcn:
 12658 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 12658      F33057D5 
 12658      FAF53D8A 
 12658      23B5816B 
 12658      DBE259BD 
 12659 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 12659      425D12E4 
 12659      BD8341AF 
 12659      6434F569 
 12659      D21489
 12660 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
 12660      95A664B0 
 12660      E6F1756A 
 12660      0946D105 
 12660      7019A4
 12661 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 12661      A65D965C 
 12661      994601AC 
 12661      5C5BB30D 
 12661      AD
 12662 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 12662      95BB6EF3 
 12662      DEEEBC30 
ARM GAS  /tmp/cciIzcMf.s 			page 343


 12662      5BD301C0 
 12662      8683
 12663 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 12663      2BCB0F28 
 12663      DB2611B3 
 12663      0D573329 
 12663      0841D0
 12664 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 12664      1B75FCA0 
 12664      27AB82A8 
 12664      9FADEB5A 
 12664      E6
 12665 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
 12665      D8A12AD9 
 12665      94919D67 
 12665      99B671
 12666 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 12666      19C5689B 
 12666      F5B56A68 
 12666      5C70
 12667              		.section	.rodata.smap.9174,"a"
 12668              		.align	2
 12669              		.set	.LANCHOR16,. + 0
 12672              	smap.9174:
 12673 0000 00010002 		.ascii	"\000\001\000\002"
 12674              		.section	.rodata.stats_catalogue,"a"
 12675              		.align	2
 12678              	stats_catalogue:
 12679 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 12679      5D17C971 
 12679      58611685 
 12679      95A05417 
 12679      85
 12680 0011 514C575A 		.ascii	"QLWZ\200"
 12680      80
 12681              		.section	.rodata.sums_catalogue,"a"
 12682              		.align	2
 12685              	sums_catalogue:
 12686 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 12686      4A1384C1 
 12686      20451104 
 12686      F11C4911 
 12686      8500
 12687              		.section	.rodata.test_catalogue,"a"
 12688              		.align	2
 12691              	test_catalogue:
 12692 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 12692      EB2FCBDB 
 12692      96E9BAEE 
 12692      A2F2E4B9 
 12693 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 12693      2EEFEB4C 
 12693      9D368B82 
 12693      F8BA350B 
 12694 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 12694      2C1354D6 
 12694      AFEC3B08 
ARM GAS  /tmp/cciIzcMf.s 			page 344


 12694      B73C40
 12695              		.text
 12696              	.Letext0:
 12697              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 12698              		.file 3 "dmcp/dmcp.h"
 12699              		.file 4 "src/decNumber/decContext.h"
 12700              		.file 5 "src/decNumber/decNumber.h"
 12701              		.file 6 "src/decNumber/decimal64.h"
 12702              		.file 7 "src/decNumber/decimal128.h"
 12703              		.file 8 "src/xeq.h"
 12704              		.file 9 "src/data.h"
 12705              		.file 10 "src/keys.h"
 12706              		.file 11 "src/display.h"
 12707              		.file 12 "src/consts.h"
 12708              		.file 13 "src/storage.h"
 12709              		.file 14 "src/stats.h"
 12710              		.file 15 "src/catalogues.h"
 12711              		.file 16 "src/lcd.h"
 12712              		.file 17 "src/int.h"
ARM GAS  /tmp/cciIzcMf.s 			page 345


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/cciIzcMf.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/cciIzcMf.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/cciIzcMf.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/cciIzcMf.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/cciIzcMf.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/cciIzcMf.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/cciIzcMf.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/cciIzcMf.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/cciIzcMf.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/cciIzcMf.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/cciIzcMf.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/cciIzcMf.s:364    .text.init_cat:0000000000000000 $t
     /tmp/cciIzcMf.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/cciIzcMf.s:696    .text.init_cat:00000000000000ec $d
     /tmp/cciIzcMf.s:702    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/cciIzcMf.s:709    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/cciIzcMf.s:794    .text.advance_to_previous_label:000000000000004c $d
     /tmp/cciIzcMf.s:799    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/cciIzcMf.s:806    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/cciIzcMf.s:860    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/cciIzcMf.s:867    .text.init_arg.part.0:0000000000000000 $t
     /tmp/cciIzcMf.s:874    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/cciIzcMf.s:916    .text.init_arg.part.0:0000000000000024 $d
     /tmp/cciIzcMf.s:921    .text.reset_arg:0000000000000000 $t
     /tmp/cciIzcMf.s:928    .text.reset_arg:0000000000000000 reset_arg
     /tmp/cciIzcMf.s:972    .text.reset_arg:0000000000000018 $d
     /tmp/cciIzcMf.s:977    .text.arg_eval:0000000000000000 $t
     /tmp/cciIzcMf.s:984    .text.arg_eval:0000000000000000 arg_eval
     /tmp/cciIzcMf.s:1106   .text.arg_eval:0000000000000074 $d
     /tmp/cciIzcMf.s:1113   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/cciIzcMf.s:1120   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/cciIzcMf.s:1178   .text.process_arg_shuffle:000000000000002c $d
     /tmp/cciIzcMf.s:1183   .text.arg_digit:0000000000000000 $t
     /tmp/cciIzcMf.s:1190   .text.arg_digit:0000000000000000 arg_digit
     /tmp/cciIzcMf.s:1415   .text.arg_digit:00000000000000c8 $d
     /tmp/cciIzcMf.s:1423   .text.intltr:0000000000000000 $t
     /tmp/cciIzcMf.s:1430   .text.intltr:0000000000000000 intltr
     /tmp/cciIzcMf.s:1493   .text.intltr:0000000000000030 $d
     /tmp/cciIzcMf.s:1499   .text.set_window:0000000000000000 $t
     /tmp/cciIzcMf.s:1506   .text.set_window:0000000000000000 set_window
     /tmp/cciIzcMf.s:1653   .text.set_window:000000000000008c $d
     /tmp/cciIzcMf.s:1660   .text.arg_storcl:0000000000000000 $t
     /tmp/cciIzcMf.s:1667   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/cciIzcMf.s:1783   .text.arg_storcl:0000000000000040 $d
     /tmp/cciIzcMf.s:1788   .text.process_arg:0000000000000000 $t
     /tmp/cciIzcMf.s:1795   .text.process_arg:0000000000000000 process_arg
     /tmp/cciIzcMf.s:2016   .text.process_arg:000000000000009c $d
     /tmp/cciIzcMf.s:2063   .text.process_arg:00000000000000f8 $t
     /tmp/cciIzcMf.s:2096   .text.process_arg:000000000000011e $d
     /tmp/cciIzcMf.s:2540   .text.process_arg:00000000000002b8 $d
     /tmp/cciIzcMf.s:2552   .text.process_arg:00000000000002cc $t
     /tmp/cciIzcMf.s:2925   .text.process_arg:0000000000000474 $d
     /tmp/cciIzcMf.s:2930   .text.cur_shift:0000000000000000 $t
     /tmp/cciIzcMf.s:2938   .text.cur_shift:0000000000000000 cur_shift
ARM GAS  /tmp/cciIzcMf.s 			page 346


     /tmp/cciIzcMf.s:2966   .text.cur_shift:0000000000000010 $d
     /tmp/cciIzcMf.s:2971   .text.reset_shift:0000000000000000 $t
     /tmp/cciIzcMf.s:2979   .text.reset_shift:0000000000000000 reset_shift
     /tmp/cciIzcMf.s:3040   .text.reset_shift:0000000000000014 $d
     /tmp/cciIzcMf.s:3045   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/cciIzcMf.s:3053   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/cciIzcMf.s:3081   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/cciIzcMf.s:3086   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/cciIzcMf.s:3094   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/cciIzcMf.s:3152   .text.row_column_to_keycode:000000000000003c $d
     /tmp/cciIzcMf.s:3157   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/cciIzcMf.s:3165   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/cciIzcMf.s:3201   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/cciIzcMf.s:3207   .text.init_state:0000000000000000 $t
     /tmp/cciIzcMf.s:3215   .text.init_state:0000000000000000 init_state
     /tmp/cciIzcMf.s:3321   .text.init_state:000000000000005c $d
     /tmp/cciIzcMf.s:3327   .text.soft_init_state:0000000000000000 $t
     /tmp/cciIzcMf.s:3335   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/cciIzcMf.s:3430   .text.soft_init_state:0000000000000048 $d
     /tmp/cciIzcMf.s:3436   .text.current_catalogue_max:0000000000000000 $t
     /tmp/cciIzcMf.s:3444   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/cciIzcMf.s:3465   .text.current_catalogue_max:000000000000000c $d
     /tmp/cciIzcMf.s:3471   .text.current_catalogue:0000000000000000 $t
     /tmp/cciIzcMf.s:3479   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/cciIzcMf.s:3735   .text.current_catalogue:00000000000000c8 $d
     /tmp/cciIzcMf.s:3745   .text.process_catalogue:0000000000000000 $t
     /tmp/cciIzcMf.s:3752   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/cciIzcMf.s:4084   .text.process_catalogue:0000000000000100 $d
     /tmp/cciIzcMf.s:4116   .text.process_catalogue:0000000000000120 $t
     /tmp/cciIzcMf.s:4624   .text.process_catalogue:00000000000002dc $d
     /tmp/cciIzcMf.s:4645   .text.process_catalogue:00000000000002fc $t
     /tmp/cciIzcMf.s:4675   .text.find_pos:0000000000000000 $t
     /tmp/cciIzcMf.s:4683   .text.find_pos:0000000000000000 find_pos
     /tmp/cciIzcMf.s:4856   .text.find_pos:0000000000000080 $d
     /tmp/cciIzcMf.s:4862   .text.get_alpha_state:0000000000000000 $t
     /tmp/cciIzcMf.s:4870   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/cciIzcMf.s:4902   .text.get_alpha_state:0000000000000020 $d
     /tmp/cciIzcMf.s:4908   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/cciIzcMf.s:4918   .text.process_keycode:0000000000000000 $t
     /tmp/cciIzcMf.s:4926   .text.process_keycode:0000000000000000 process_keycode
     /tmp/cciIzcMf.s:5544   .text.process_keycode:00000000000002a8 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/cciIzcMf.s:5563   .text.process_keycode:00000000000002e8 $t
     /tmp/cciIzcMf.s:5680   .text.process_keycode:0000000000000362 $d
     /tmp/cciIzcMf.s:5727   .text.process_keycode:00000000000003be $t
     /tmp/cciIzcMf.s:6251   .text.process_keycode:00000000000005a0 $d
     /tmp/cciIzcMf.s:6260   .text.process_keycode:00000000000005c4 $t
     /tmp/cciIzcMf.s:6344   .text.process_keycode:0000000000000618 $d
     /tmp/cciIzcMf.s:6367   .text.process_keycode:000000000000065c $t
     /tmp/cciIzcMf.s:6446   .text.process_keycode:00000000000006c0 $d
     /tmp/cciIzcMf.s:6476   .text.process_keycode:00000000000006e4 $d
     /tmp/cciIzcMf.s:6520   .text.process_keycode:0000000000000790 $t
     /tmp/cciIzcMf.s:6824   .text.process_keycode:00000000000008a8 $d
     /tmp/cciIzcMf.s:6833   .text.process_keycode:00000000000008cc $t
ARM GAS  /tmp/cciIzcMf.s 			page 347


     /tmp/cciIzcMf.s:6912   .text.process_keycode:0000000000000910 $d
     /tmp/cciIzcMf.s:6938   .text.process_keycode:0000000000000978 $t
     /tmp/cciIzcMf.s:6968   .text.process_keycode:0000000000000998 $d
     /tmp/cciIzcMf.s:6973   .text.process_keycode:00000000000009a0 $t
     /tmp/cciIzcMf.s:6982   .text.process_keycode:00000000000009b4 $d
     /tmp/cciIzcMf.s:6986   .text.process_keycode:00000000000009c4 $t
     /tmp/cciIzcMf.s:7932   .text.process_keycode:0000000000000d30 $d
     /tmp/cciIzcMf.s:7957   .text.process_keycode:0000000000000d5c $t
     /tmp/cciIzcMf.s:8400   .text.process_keycode:0000000000000ed4 $d
     /tmp/cciIzcMf.s:8435   .text.process_keycode:0000000000000f60 $t
     /tmp/cciIzcMf.s:8670   .text.process_keycode:0000000000001048 $d
     /tmp/cciIzcMf.s:8690   .text.process_keycode:0000000000001098 $t
     /tmp/cciIzcMf.s:8760   .text.process_keycode:00000000000010e8 $d
     /tmp/cciIzcMf.s:8786   .text.process_keycode:00000000000010fc $t
     /tmp/cciIzcMf.s:8918   .text.process_keycode:0000000000001168 $d
     /tmp/cciIzcMf.s:8936   .text.process_keycode:00000000000011b0 $t
     /tmp/cciIzcMf.s:9354   .text.process_keycode:00000000000012ee $d
     /tmp/cciIzcMf.s:9388   .text.process_keycode:0000000000001332 $t
     /tmp/cciIzcMf.s:9618   .text.process_keycode:00000000000013f4 $d
     /tmp/cciIzcMf.s:9661   .text.process_keycode:000000000000140c $t
     /tmp/cciIzcMf.s:9940   .text.process_keycode:000000000000150c $d
     /tmp/cciIzcMf.s:9975   .text.process_keycode:0000000000001594 $t
     /tmp/cciIzcMf.s:10162  .text.process_keycode:0000000000001606 $d
     /tmp/cciIzcMf.s:10377  .text.process_keycode:00000000000016f4 $d
     /tmp/cciIzcMf.s:10393  .text.process_keycode:0000000000001714 $t
     /tmp/cciIzcMf.s:10773  .text.process_keycode:00000000000018dc $d
     /tmp/cciIzcMf.s:10815  .text.process_keycode:0000000000001980 $t
     /tmp/cciIzcMf.s:11050  .text.process_keycode:0000000000001a88 $d
     /tmp/cciIzcMf.s:11061  .text.process_keycode:0000000000001a94 $t
     /tmp/cciIzcMf.s:11805  .text.process_keycode:0000000000001d4c $d
     /tmp/cciIzcMf.s:11816  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/cciIzcMf.s:11824  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/cciIzcMf.s:11980  .text.process_keycode_with_shift:0000000000000074 $d
     /tmp/cciIzcMf.s:11995  .bss.was_paused.9649:0000000000000000 $d
     /tmp/cciIzcMf.s:11999  .bss.was_paused.9649:0000000000000000 was_paused.9649
     /tmp/cciIzcMf.s:12002  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/cciIzcMf.s:12005  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/cciIzcMf.s:12008  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12011  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/cciIzcMf.s:12015  .rodata.alpha_compares:0000000000000000 $d
     /tmp/cciIzcMf.s:12018  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/cciIzcMf.s:12021  .rodata.alpha_letters:0000000000000000 $d
     /tmp/cciIzcMf.s:12025  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/cciIzcMf.s:12031  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/cciIzcMf.s:12035  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/cciIzcMf.s:12041  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/cciIzcMf.s:12044  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/cciIzcMf.s:12048  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/cciIzcMf.s:12051  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/cciIzcMf.s:12054  .rodata.alphamap.9182:0000000000000000 $d
     /tmp/cciIzcMf.s:12058  .rodata.alphamap.9182:0000000000000000 alphamap.9182
     /tmp/cciIzcMf.s:12098  .rodata.amap.9173:0000000000000000 $d
     /tmp/cciIzcMf.s:12102  .rodata.amap.9173:0000000000000000 amap.9173
     /tmp/cciIzcMf.s:12116  .rodata.catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12119  .rodata.catalogue:0000000000000000 catalogue
     /tmp/cciIzcMf.s:12128  .rodata.catalogue_sizes.9447:0000000000000000 $d
     /tmp/cciIzcMf.s:12132  .rodata.catalogue_sizes.9447:0000000000000000 catalogue_sizes.9447
ARM GAS  /tmp/cciIzcMf.s 			page 348


     /tmp/cciIzcMf.s:12135  .rodata.catalogues.9455:0000000000000000 $d
     /tmp/cciIzcMf.s:12139  .rodata.catalogues.9455:0000000000000000 catalogues.9455
     /tmp/cciIzcMf.s:12224  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/cciIzcMf.s:12678  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/cciIzcMf.s:12638  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/cciIzcMf.s:12241  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/cciIzcMf.s:12647  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/cciIzcMf.s:12657  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/cciIzcMf.s:12691  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/cciIzcMf.s:12287  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/cciIzcMf.s:12685  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/cciIzcMf.s:12280  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/cciIzcMf.s:12162  .rodata.cmap.9172:0000000000000000 $d
     /tmp/cciIzcMf.s:12166  .rodata.cmap.9172:0000000000000000 cmap.9172
     /tmp/cciIzcMf.s:12192  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12196  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/cciIzcMf.s:12203  .rodata.conv_mapping.9494:0000000000000000 $d
     /tmp/cciIzcMf.s:12207  .rodata.conv_mapping.9494:0000000000000000 conv_mapping.9494
     /tmp/cciIzcMf.s:12221  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12228  .rodata.disp.9310:0000000000000000 $d
     /tmp/cciIzcMf.s:12232  .rodata.disp.9310:0000000000000000 disp.9310
     /tmp/cciIzcMf.s:12238  .rodata.int_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12248  .rodata.linear_key_map.9143:0000000000000000 $d
     /tmp/cciIzcMf.s:12252  .rodata.linear_key_map.9143:0000000000000000 linear_key_map.9143
     /tmp/cciIzcMf.s:12258  .rodata.linear_key_map.9147:0000000000000000 $d
     /tmp/cciIzcMf.s:12262  .rodata.linear_key_map.9147:0000000000000000 linear_key_map.9147
     /tmp/cciIzcMf.s:12268  .rodata.map.9159:0000000000000000 $d
     /tmp/cciIzcMf.s:12272  .rodata.map.9159:0000000000000000 map.9159
     /tmp/cciIzcMf.s:12277  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12284  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12293  .rodata.op_map.9226:0000000000000000 $d
     /tmp/cciIzcMf.s:12297  .rodata.op_map.9226:0000000000000000 op_map.9226
     /tmp/cciIzcMf.s:12334  .rodata.op_map.9249:0000000000000000 $d
     /tmp/cciIzcMf.s:12338  .rodata.op_map.9249:0000000000000000 op_map.9249
     /tmp/cciIzcMf.s:12410  .rodata.op_map.9272:0000000000000000 $d
     /tmp/cciIzcMf.s:12414  .rodata.op_map.9272:0000000000000000 op_map.9272
     /tmp/cciIzcMf.s:12451  .rodata.op_map.9282:0000000000000000 $d
     /tmp/cciIzcMf.s:12455  .rodata.op_map.9282:0000000000000000 op_map.9282
     /tmp/cciIzcMf.s:12597  .rodata.op_map.9294:0000000000000000 $d
     /tmp/cciIzcMf.s:12601  .rodata.op_map.9294:0000000000000000 op_map.9294
     /tmp/cciIzcMf.s:12606  .rodata.op_map.9309:0000000000000000 $d
     /tmp/cciIzcMf.s:12610  .rodata.op_map.9309:0000000000000000 op_map.9309
     /tmp/cciIzcMf.s:12618  .rodata.op_map2.9250:0000000000000000 $d
     /tmp/cciIzcMf.s:12622  .rodata.op_map2.9250:0000000000000000 op_map2.9250
     /tmp/cciIzcMf.s:12628  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/cciIzcMf.s:12632  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/cciIzcMf.s:12635  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12644  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12654  .rodata.program_xfcn:0000000000000000 $d
     /tmp/cciIzcMf.s:12668  .rodata.smap.9174:0000000000000000 $d
     /tmp/cciIzcMf.s:12672  .rodata.smap.9174:0000000000000000 smap.9174
     /tmp/cciIzcMf.s:12675  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12682  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:12688  .rodata.test_catalogue:0000000000000000 $d
     /tmp/cciIzcMf.s:2100   .text.process_arg:0000000000000121 $d
     /tmp/cciIzcMf.s:2100   .text.process_arg:0000000000000122 $t
     /tmp/cciIzcMf.s:6465   .text.process_keycode:00000000000006d3 $d
ARM GAS  /tmp/cciIzcMf.s 			page 349


     /tmp/cciIzcMf.s:6465   .text.process_keycode:00000000000006d4 $t
     /tmp/cciIzcMf.s:10203  .text.process_keycode:000000000000162f $d
     /tmp/cciIzcMf.s:10203  .text.process_keycode:0000000000001630 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
local_regs_rarg
num_arg_digits
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
xeq_xrom
is_key_pressed
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
set_running_off
clr_dot
finish_RPN
xeq_sst_bst
message
delprog
set_menu
display_current_menu
stoprog
clpall
clrprog
reset
ARM GAS  /tmp/cciIzcMf.s 			page 350


clrall
prt
scopy_char
set_pc
find_char
set_last_menu
find_user_pc
TraceBuffer
cmdgtocommon
global_regs
local_regs
alen

ARM GAS  /tmp/ccF3vcso.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccF3vcso.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifdef INFRARED
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/ccF3vcso.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/ccF3vcso.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/ccF3vcso.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/ccF3vcso.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/ccF3vcso.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccF3vcso.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  '!',  0041, 0000, '?',  '!',  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0006, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/ccF3vcso.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/ccF3vcso.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/ccF3vcso.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 638:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 639:src/keys.c    **** #endif							//JM5
 640:src/keys.c    **** 
 641:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 642:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 643:src/keys.c    **** #endif							//JM5
 644:src/keys.c    **** 
 645:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 646:src/keys.c    **** 	UState.show_y = 1;
 647:src/keys.c    **** #endif
 648:src/keys.c    **** 
 649:src/keys.c    **** #ifdef DEFAULT_TO_J
 650:src/keys.c    **** 	SET_CPX_J;
 651:src/keys.c    **** #endif
 652:src/keys.c    **** 
 653:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 654:src/keys.c    **** 	cpx_nop(OP_CYES);
 655:src/keys.c    **** #endif
 656:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 13


 657:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 658:src/keys.c    **** 	cpx_nop(OP_CYES);
 659:src/keys.c    **** 	cpx_nop(OP_C_ON);
 660:src/keys.c    **** #endif
 661:src/keys.c    **** 
 662:src/keys.c    **** #ifdef ENTRY_RPN
 663:src/keys.c    **** 
 664:src/keys.c    **** #ifdef DEFAULT_TO_ENTRY_RPN
 665:src/keys.c    **** 	ENTRY_RPN_ON;
 666:src/keys.c    **** #else
 667:src/keys.c    **** 	ENTRY_RPN_OFF;
 668:src/keys.c    **** #endif
 669:src/keys.c    **** 
 670:src/keys.c    **** #endif
 671:src/keys.c    **** 	
 672:src/keys.c    **** #endif
 673:src/keys.c    **** 
 674:src/keys.c    **** 	State2.test = TST_NONE;
 675:src/keys.c    **** 	State2.runmode = 1;
 676:src/keys.c    **** 	update_program_bounds(1);
 677:src/keys.c    **** 	set_lift();
 678:src/keys.c    **** 
 679:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 680:src/keys.c    **** 	// but must not be cleared.
 681:src/keys.c    **** 	Voltage = v;
 682:src/keys.c    **** 	LastKey = k;
 683:src/keys.c    **** #ifndef REALBUILD
 684:src/keys.c    **** 	State2.trace = b;
 685:src/keys.c    **** 	State2.flags = a;
 686:src/keys.c    **** #else
 687:src/keys.c    **** 	TestFlag = t;
 688:src/keys.c    **** #endif
 689:src/keys.c    **** 	ShowRegister = regX_idx;
 690:src/keys.c    **** }
 691:src/keys.c    **** 
 692:src/keys.c    **** void soft_init_state(void) {
 693:src/keys.c    ****   int soft;
 694:src/keys.c    ****   unsigned int runmode;
 695:src/keys.c    ****   unsigned int alphas;
 696:src/keys.c    **** 
 697:src/keys.c    ****   if (CmdLineLength) {
 698:src/keys.c    ****     CmdLineLength = 0;
 699:src/keys.c    ****     CmdLineEex = 0;
 700:src/keys.c    ****     CmdLineDot = 0;
 701:src/keys.c    ****     return;
 702:src/keys.c    ****   }
 703:src/keys.c    ****   soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 704:src/keys.c    ****     State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 705:src/keys.c    ****   runmode = State2.runmode;
 706:src/keys.c    ****   alphas = State2.alphas;
 707:src/keys.c    ****   init_state();
 708:src/keys.c    ****   if (soft) {
 709:src/keys.c    ****     State2.runmode = runmode;
 710:src/keys.c    ****     State2.alphas = alphas;
 711:src/keys.c    ****   }
 712:src/keys.c    ****   clear_disp(); // clears display so it is redrawn
 713:src/keys.c    ****   display_current_menu();
ARM GAS  /tmp/ccF3vcso.s 			page 14


 714:src/keys.c    **** }
 715:src/keys.c    **** 
 716:src/keys.c    **** static int check_confirm(int op) {
 717:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 718:src/keys.c    **** 		const int nilop = argKIND(op);
 719:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 720:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 721:src/keys.c    **** 			return STATE_UNFINISHED;
 722:src/keys.c    **** 		}
 723:src/keys.c    **** #ifndef DM42		
 724:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 725:src/keys.c    **** #endif
 726:src/keys.c    **** #ifdef DM42
 727:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 728:src/keys.c    **** #endif
 729:src/keys.c    **** #ifdef INFRARED
 730:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 731:src/keys.c    **** #endif
 732:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 733:src/keys.c    **** //			|| nilop == OP_STOPWATCH // so it can go in a user menu
 734:src/keys.c    **** #endif
 735:src/keys.c    **** 		) {
 736:src/keys.c    **** 			// These commands are not programmable
 737:src/keys.c    **** 			NonProgrammable = 1;
 738:src/keys.c    **** 		}
 739:src/keys.c    **** 	}
 740:src/keys.c    **** 	return op;
 741:src/keys.c    **** }
 742:src/keys.c    **** 
 743:src/keys.c    **** static void set_smode(const enum single_disp d) {
 744:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 745:src/keys.c    **** }
 746:src/keys.c    **** 
 747:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 748:src/keys.c    **** 	const int code = 100 + n;
 749:src/keys.c    **** 	unsigned int pc = state_pc();
 750:src/keys.c    **** 
 751:src/keys.c    **** 	if (State2.runmode) {
 752:src/keys.c    **** 		if (isXROM(pc))
 753:src/keys.c    **** 			pc = 1;
 754:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 755:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 756:src/keys.c    **** 	}
 757:src/keys.c    **** 	return dflt;
 758:src/keys.c    **** }
 759:src/keys.c    **** 
 760:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 761:src/keys.c    ****  * as digits.
 762:src/keys.c    ****  */
 763:src/keys.c    **** static int intltr(int d) {
 764:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 765:src/keys.c    **** }
 766:src/keys.c    **** 
 767:src/keys.c    **** /*
 768:src/keys.c    ****  *  Process a key code in the unshifted mode.
 769:src/keys.c    ****  */
 770:src/keys.c    **** static int process_normal(const keycode c)
ARM GAS  /tmp/ccF3vcso.s 			page 15


 771:src/keys.c    **** {
 772:src/keys.c    **** 	static const unsigned short int op_map[] = {
 773:src/keys.c    **** 		// Row 1
 774:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 775:src/keys.c    **** 		OP_MON  | OP_RECIP,
 776:src/keys.c    **** 		OP_DYA  | OP_POW,
 777:src/keys.c    **** 		OP_MON  | OP_SQRT,
 778:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 779:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 780:src/keys.c    **** 		// Row 2
 781:src/keys.c    **** 		RARG_STO,
 782:src/keys.c    **** 		RARG_RCL,
 783:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 784:src/keys.c    **** 		// Row 3
 785:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 786:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 787:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 788:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 789:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 790:src/keys.c    **** 		// Row 4
 791:src/keys.c    **** 		RARG_XEQ,
 792:src/keys.c    **** 		OP_SPEC | OP_7,
 793:src/keys.c    **** 		OP_SPEC | OP_8,
 794:src/keys.c    **** 		OP_SPEC | OP_9,
 795:src/keys.c    **** 		OP_DYA  | OP_DIV,
 796:src/keys.c    **** 		// Row 5
 797:src/keys.c    **** 		STATE_BST,
 798:src/keys.c    **** 		OP_SPEC | OP_4,
 799:src/keys.c    **** 		OP_SPEC | OP_5,
 800:src/keys.c    **** 		OP_SPEC | OP_6,
 801:src/keys.c    **** 		OP_DYA  | OP_MUL,
 802:src/keys.c    **** 		// Row 6
 803:src/keys.c    **** 		STATE_SST,		// SST
 804:src/keys.c    **** 		OP_SPEC | OP_1,
 805:src/keys.c    **** 		OP_SPEC | OP_2,
 806:src/keys.c    **** 		OP_SPEC | OP_3,
 807:src/keys.c    **** 		OP_DYA  | OP_SUB,
 808:src/keys.c    **** 		// Row 7
 809:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 810:src/keys.c    **** 		OP_SPEC | OP_0,
 811:src/keys.c    **** 		OP_SPEC | OP_DOT,
 812:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 813:src/keys.c    **** 		OP_DYA  | OP_ADD,
 814:src/keys.c    **** #ifdef DM42
 815:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 816:src/keys.c    **** #endif
 817:src/keys.c    **** 	};
 818:src/keys.c    **** 
 819:src/keys.c    **** 	int lc = keycode_to_linear(c);
 820:src/keys.c    **** 	int op = op_map[lc];
 821:src/keys.c    **** 	
 822:src/keys.c    **** 	// The switch handles all the special cases
 823:src/keys.c    **** #ifdef DM42
 824:src/keys.c    **** 	int op_int;
 825:src/keys.c    **** 	if (UState.intm) {
 826:src/keys.c    **** 	  switch (c) {
 827:src/keys.c    **** 	  case K00:
ARM GAS  /tmp/ccF3vcso.s 			page 16


 828:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 829:src/keys.c    **** 	    if (intltr(10)) {
 830:src/keys.c    **** 	      return op;
 831:src/keys.c    **** 	    }
 832:src/keys.c    **** 	    else {
 833:src/keys.c    **** 	      return check_f_key(0, op);
 834:src/keys.c    **** 	    }
 835:src/keys.c    **** 	  case K01:
 836:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 837:src/keys.c    **** 	    if (intltr(11)) {
 838:src/keys.c    **** 	      return op;
 839:src/keys.c    **** 	    }
 840:src/keys.c    **** 	    else {
 841:src/keys.c    **** 	      return check_f_key(1, op);
 842:src/keys.c    **** 	    }
 843:src/keys.c    **** 	  case K03:
 844:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 845:src/keys.c    **** 	    if (intltr(12)) {
 846:src/keys.c    **** 	      return op_int;
 847:src/keys.c    **** 	    }
 848:src/keys.c    **** 	    else {
 849:src/keys.c    **** 	      return check_f_key(2, op);
 850:src/keys.c    **** 	    }
 851:src/keys.c    **** 	  case K30:
 852:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 853:src/keys.c    **** 	    if (intltr(15)) {
 854:src/keys.c    **** 	      return op_int;
 855:src/keys.c    **** 	    }
 856:src/keys.c    **** 	  default:;
 857:src/keys.c    **** 	  }
 858:src/keys.c    **** 	}
 859:src/keys.c    **** #endif  
 860:src/keys.c    **** 
 861:src/keys.c    **** 	switch (c) {
 862:src/keys.c    **** #ifdef DM42
 863:src/keys.c    **** 	case K00:
 864:src/keys.c    **** 		return check_f_key(0, op);
 865:src/keys.c    **** 	case K01:
 866:src/keys.c    **** 		return check_f_key(1, op);
 867:src/keys.c    **** 	case K03:
 868:src/keys.c    **** 		return check_f_key(2, op);
 869:src/keys.c    **** #else
 870:src/keys.c    **** 	case K00:
 871:src/keys.c    **** 	case K01:
 872:src/keys.c    **** 		if (UState.intm)
 873:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 874:src/keys.c    **** 	case K02:
 875:src/keys.c    **** 	case K03:
 876:src/keys.c    **** 		if (intltr(lc + 10)) {
 877:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 878:src/keys.c    **** 			return op;
 879:src/keys.c    **** 		}
 880:src/keys.c    **** 		return check_f_key(lc, op);
 881:src/keys.c    **** #endif		
 882:src/keys.c    **** 	case K_ARROW:
 883:src/keys.c    **** #ifndef DM42
 884:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
ARM GAS  /tmp/ccF3vcso.s 			page 17


 885:src/keys.c    **** 		if (intltr(14))
 886:src/keys.c    **** 			return op;
 887:src/keys.c    **** #else
 888:src/keys.c    **** 		if (UState.intm)
 889:src/keys.c    **** 			return op;
 890:src/keys.c    **** #endif
 891:src/keys.c    **** #endif		
 892:src/keys.c    **** 		if (is_bad_cmdline())
 893:src/keys.c    **** 			return STATE_UNFINISHED;
 894:src/keys.c    **** 		process_cmdline_set_lift();
 895:src/keys.c    **** 		State2.arrow = 1;
 896:src/keys.c    **** #ifdef DM42
 897:src/keys.c    **** 		set_menu (M_Arrow); // arrow menu
 898:src/keys.c    **** 		display_current_menu ();
 899:src/keys.c    **** 		lcd_refresh ();
 900:src/keys.c    **** #else
 901:src/keys.c    **** 		set_shift(SHIFT_G);
 902:src/keys.c    **** #endif
 903:src/keys.c    **** 		break;
 904:src/keys.c    **** 
 905:src/keys.c    **** 	case K_CMPLX:
 906:src/keys.c    **** #ifdef DM42
 907:src/keys.c    **** 	  if (UState.intm)
 908:src/keys.c    **** 	    break; // return nothing
 909:src/keys.c    **** 	  State2.cmplx = 1;
 910:src/keys.c    **** #else
 911:src/keys.c    **** 	  if (UState.intm)
 912:src/keys.c    **** 	    return op;
 913:src/keys.c    **** 	  State2.cmplx = 1;
 914:src/keys.c    **** #endif
 915:src/keys.c    **** 	  break;
 916:src/keys.c    **** 
 917:src/keys.c    **** 	case K24:				// <-
 918:src/keys.c    **** 		if (State2.disp_temp)
 919:src/keys.c    **** 			return STATE_UNFINISHED;
 920:src/keys.c    **** 		if (State2.runmode)
 921:src/keys.c    **** 			return op;
 922:src/keys.c    **** 		return STATE_BACKSPACE;
 923:src/keys.c    **** 
 924:src/keys.c    **** 	case K10:				// STO
 925:src/keys.c    **** 	case K11:				// RCL
 926:src/keys.c    **** 	case K30:				// XEQ
 927:src/keys.c    **** 		init_arg((enum rarg)op);
 928:src/keys.c    **** 		break;
 929:src/keys.c    **** 
 930:src/keys.c    **** 	default:
 931:src/keys.c    **** 		return op;			// Keys handled by table
 932:src/keys.c    **** 	}
 933:src/keys.c    **** 	return STATE_UNFINISHED;
 934:src/keys.c    **** }
 935:src/keys.c    **** 
 936:src/keys.c    **** 
 937:src/keys.c    **** /*
 938:src/keys.c    ****  *  Process a key code after f or g shift
 939:src/keys.c    ****  */
 940:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 941:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 18


 942:src/keys.c    **** #define NO_INT 0xf000
 943:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 944:src/keys.c    **** 		// Row 1
 945:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 946:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 947:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 948:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 949:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 950:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 951:src/keys.c    **** 		// Row 2
 952:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 953:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 954:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 955:src/keys.c    **** 		// Row 3
 956:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 957:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 958:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 959:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 960:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 961:src/keys.c    **** 		// Row 4
 962:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 963:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 964:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 965:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 966:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 967:src/keys.c    **** 		// Row 5
 968:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 969:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 970:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 971:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 972:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 973:src/keys.c    **** 		// Row 6
 974:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 975:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 976:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 977:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 978:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 979:src/keys.c    **** 		// Row 7
 980:src/keys.c    **** #ifdef INFRARED
 981:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 982:src/keys.c    **** #else
 983:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 984:src/keys.c    **** #endif
 985:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 986:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 987:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 988:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 989:src/keys.c    **** #ifdef DM42
 990:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 991:src/keys.c    **** #endif
 992:src/keys.c    **** 	};
 993:src/keys.c    **** 
 994:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 995:src/keys.c    **** 		STATE_UNFINISHED,
 996:src/keys.c    **** 		STATE_UNFINISHED,
 997:src/keys.c    **** 		OP_DYA  | OP_POW,
 998:src/keys.c    **** 		OP_MON  | OP_SQRT
ARM GAS  /tmp/ccF3vcso.s 			page 19


 999:src/keys.c    **** 	};
1000:src/keys.c    **** 
1001:src/keys.c    **** 	enum shifts shift = reset_shift();
1002:src/keys.c    **** 	int lc = keycode_to_linear(c);
1003:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
1004:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
1005:src/keys.c    **** 	if (no_int)
1006:src/keys.c    **** 		op &= ~NO_INT;
1007:src/keys.c    **** 
1008:src/keys.c    **** 	switch (c) {
1009:src/keys.c    **** 	case K00:
1010:src/keys.c    **** 	  if (! UState.intm) {
1011:src/keys.c    **** 	    //	    print_debug(100,0);
1012:src/keys.c    **** 	    State2.hyp = 1;
1013:src/keys.c    **** 	    State2.dot = op;
1014:src/keys.c    **** 	    // State2.cmplx = 0;
1015:src/keys.c    **** 	    return STATE_UNFINISHED;
1016:src/keys.c    **** 	  }
1017:src/keys.c    **** 	  // fall through
1018:src/keys.c    **** 	case K01:
1019:src/keys.c    **** #ifdef DM42
1020:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1021:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1022:src/keys.c    **** 	  }
1023:src/keys.c    **** 	  break;
1024:src/keys.c    **** #endif
1025:src/keys.c    **** #ifndef DM42
1026:src/keys.c    **** 	case K02:
1027:src/keys.c    **** #endif
1028:src/keys.c    **** 	case K03:
1029:src/keys.c    **** #ifdef DM42
1030:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1031:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1032:src/keys.c    **** 		}
1033:src/keys.c    **** 		break;
1034:src/keys.c    **** #else
1035:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1036:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1037:src/keys.c    **** 		}
1038:src/keys.c    **** 		break;
1039:src/keys.c    **** #endif
1040:src/keys.c    **** 	case K20:				// Alpha
1041:src/keys.c    **** 		if (shift == SHIFT_F) {
1042:src/keys.c    **** 			if (is_bad_cmdline())
1043:src/keys.c    **** 				return STATE_UNFINISHED;
1044:src/keys.c    **** 			process_cmdline_set_lift();
1045:src/keys.c    **** 			State2.alphas = 1;
1046:src/keys.c    **** #ifdef DM42
1047:src/keys.c    **** 			set_menu(M_Alpha);
1048:src/keys.c    **** 			display_current_menu();
1049:src/keys.c    **** #endif
1050:src/keys.c    **** 		}
1051:src/keys.c    **** 		break;
1052:src/keys.c    **** #ifdef DM42
1053:src/keys.c    **** 	case K31:
1054:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1055:src/keys.c    **** 	    return OP_SPEC | OP_D;
ARM GAS  /tmp/ccF3vcso.s 			page 20


1056:src/keys.c    **** 	  }
1057:src/keys.c    **** 	  break;
1058:src/keys.c    **** 	case K30:
1059:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1060:src/keys.c    **** 	    return OP_SPEC | OP_E;
1061:src/keys.c    **** 	  }
1062:src/keys.c    **** 	  break;
1063:src/keys.c    **** #endif
1064:src/keys.c    **** 	case K51:
1065:src/keys.c    **** 		if (is_bad_cmdline())
1066:src/keys.c    **** 			return STATE_UNFINISHED;
1067:src/keys.c    **** 		process_cmdline_set_lift();
1068:src/keys.c    **** 		State2.test = op;
1069:src/keys.c    **** 		return STATE_UNFINISHED;
1070:src/keys.c    **** 
1071:src/keys.c    **** 	case K50:
1072:src/keys.c    **** #ifndef REALBUILD
1073:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1074:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1075:src/keys.c    **** 			return STATE_UNFINISHED;
1076:src/keys.c    **** 		}
1077:src/keys.c    **** #endif
1078:src/keys.c    **** 	case K52:
1079:src/keys.c    **** 	case K53:
1080:src/keys.c    **** 	case K63:
1081:src/keys.c    **** 	case K64:
1082:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1083:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1084:src/keys.c    **** 				init_arg((enum rarg) op);
1085:src/keys.c    **** 			}
1086:src/keys.c    **** 			return STATE_UNFINISHED;
1087:src/keys.c    **** 		}
1088:src/keys.c    **** 		break;
1089:src/keys.c    **** 
1090:src/keys.c    **** 	default:
1091:src/keys.c    **** 		break;
1092:src/keys.c    **** 	}
1093:src/keys.c    **** 	if (no_int && UState.intm)
1094:src/keys.c    **** 		return STATE_UNFINISHED;
1095:src/keys.c    **** 
1096:src/keys.c    **** 	return check_confirm(op);
1097:src/keys.c    **** #undef NO_INT
1098:src/keys.c    **** }
1099:src/keys.c    **** 
1100:src/keys.c    **** /*
1101:src/keys.c    ****  *  Process a key code after h shift
1102:src/keys.c    ****  */
1103:src/keys.c    **** static int process_h_shifted(const keycode c) {
1104:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1105:src/keys.c    **** #define NO_INT   0x4000
1106:src/keys.c    **** 	static const unsigned short int op_map[] = {
1107:src/keys.c    **** 		// Row 1
1108:src/keys.c    **** 		_RARG   | RARG_STD,
1109:src/keys.c    **** 		_RARG   | RARG_FIX,
1110:src/keys.c    **** 		_RARG   | RARG_SCI,
1111:src/keys.c    **** 		_RARG   | RARG_ENG,
1112:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
ARM GAS  /tmp/ccF3vcso.s 			page 21


1113:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1114:src/keys.c    **** 		// Row 2
1115:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1116:src/keys.c    **** 		_RARG   | RARG_VIEW,
1117:src/keys.c    **** 		OP_NIL  | OP_RUP,
1118:src/keys.c    **** 		// Row 3
1119:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1120:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1121:src/keys.c    **** 		OP_MON  | OP_NOT,
1122:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1123:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1124:src/keys.c    **** 		// Row 4
1125:src/keys.c    **** 		_RARG   | RARG_GTO,
1126:src/keys.c    **** 		OP_DYA  | OP_LAND,
1127:src/keys.c    **** 		OP_DYA  | OP_LOR,
1128:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1129:src/keys.c    **** 		OP_DYA  | OP_MOD,
1130:src/keys.c    **** 		// Row 5
1131:src/keys.c    **** 		OP_MON  | OP_FACT,
1132:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1133:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1134:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1135:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1136:src/keys.c    **** 		// Row 6
1137:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1138:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1139:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1140:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1141:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1142:src/keys.c    **** 		// Row 7
1143:src/keys.c    **** 		OP_NIL | OP_OFF,
1144:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1145:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1146:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1147:src/keys.c    **** #else
1148:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1149:src/keys.c    **** #endif
1150:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1151:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1152:src/keys.c    **** #ifdef DM42
1153:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1154:src/keys.c    **** #endif
1155:src/keys.c    **** 	};
1156:src/keys.c    **** 
1157:src/keys.c    **** 	int lc = keycode_to_linear(c);
1158:src/keys.c    **** 	int op = op_map[lc];
1159:src/keys.c    **** 	reset_shift();
1160:src/keys.c    **** 
1161:src/keys.c    **** 	// The switch handles all the special cases
1162:src/keys.c    **** 	switch (c) {
1163:src/keys.c    **** 	case K62:
1164:src/keys.c    **** 		if (UState.intm)
1165:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1166:src/keys.c    **** 		else
1167:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1168:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1169:src/keys.c    **** #else
ARM GAS  /tmp/ccF3vcso.s 			page 22


1170:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1171:src/keys.c    **** #endif
1172:src/keys.c    **** 		break;
1173:src/keys.c    **** 
1174:src/keys.c    **** 	case K63:					// Program<->Run mode
1175:src/keys.c    **** 		if (is_bad_cmdline())
1176:src/keys.c    **** 			return STATE_UNFINISHED;
1177:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1178:src/keys.c    **** 		process_cmdline_set_lift();
1179:src/keys.c    **** 		update_program_bounds(1);
1180:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1181:src/keys.c    **** 			set_pc(0);
1182:src/keys.c    **** 		break;
1183:src/keys.c    **** 
1184:src/keys.c    **** 	default:
1185:src/keys.c    **** 		break;
1186:src/keys.c    **** 	}
1187:src/keys.c    **** 
1188:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1189:src/keys.c    **** 		if (op & _RARG) {
1190:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1191:src/keys.c    **** 			op = STATE_UNFINISHED;
1192:src/keys.c    **** 		}
1193:src/keys.c    **** 	}
1194:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1195:src/keys.c    **** #undef _RARG
1196:src/keys.c    **** #undef NO_INT
1197:src/keys.c    **** }
1198:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1199:src/keys.c    **** 
1200:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1201:src/keys.c    **** 
1202:src/keys.c    **** static void do_command_line ( void ) {
1203:src/keys.c    **** 	if (CmdLineLength) {
1204:src/keys.c    **** 		State2.state_lift = 0;
1205:src/keys.c    **** 		process_cmdline();
1206:src/keys.c    **** 	}
1207:src/keys.c    **** }
1208:src/keys.c    **** 
1209:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1210:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1211:src/keys.c    **** // The argument sets the lift state after entry is finished.
1212:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1213:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1214:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1215:src/keys.c    **** 
1216:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1217:src/keys.c    **** 		CLEAR_REAL;
1218:src/keys.c    **** 		do_command_line();
1219:src/keys.c    **** 	}
1220:src/keys.c    **** 	else if (IMAG_FLAG) {
1221:src/keys.c    **** 		CLEAR_IMAG;
1222:src/keys.c    **** 		do_command_line();
1223:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1224:src/keys.c    **** 	}
1225:src/keys.c    **** */
1226:src/keys.c    **** 	do_command_line();
ARM GAS  /tmp/ccF3vcso.s 			page 23


1227:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1228:src/keys.c    **** 	CLEAR_REAL;
1229:src/keys.c    **** 	CLEAR_IMAG;
1230:src/keys.c    **** 
1231:src/keys.c    **** 	State2.state_lift = lift;
1232:src/keys.c    **** 
1233:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1234:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1235:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1236:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1237:src/keys.c    **** 		//call p2r
1238:src/keys.c    **** 		update_speed(0);
1239:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1240:src/keys.c    **** #ifdef RP_PREFIX
1241:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1242:src/keys.c    **** #endif
1243:src/keys.c    **** 		SET_POLAR_READY;
1244:src/keys.c    **** 	}
1245:src/keys.c    **** }
1246:src/keys.c    **** 
1247:src/keys.c    **** static void stack_restore ( void ) { 
1248:src/keys.c    **** 	// called if number entry terminated by EXIT key
1249:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1250:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1251:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1252:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1253:src/keys.c    **** 		drop ( OP_DROPXY );
1254:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1255:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1256:src/keys.c    **** 	}
1257:src/keys.c    **** 	else { // X, Y have been overwritten
1258:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1259:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1260:src/keys.c    **** 	}
1261:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1262:src/keys.c    **** 	CLEAR_INIT_LIFT;
1263:src/keys.c    **** 	CLEAR_POLAR_READY;
1264:src/keys.c    **** }
1265:src/keys.c    **** 
1266:src/keys.c    **** void stack_begin ( int zero_y ) { 
1267:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1268:src/keys.c    **** 	// zeros y if requested. 
1269:src/keys.c    **** 	CLEAR_POLAR_READY;
1270:src/keys.c    **** 	if ( State2.state_lift ){
1271:src/keys.c    **** 		SET_INIT_LIFT;
1272:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1273:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1274:src/keys.c    **** 		lift();
1275:src/keys.c    **** 		zero_X();
1276:src/keys.c    **** 		lift();
1277:src/keys.c    **** 		State2.state_lift = 0;
1278:src/keys.c    **** 	}
1279:src/keys.c    **** 	else {
1280:src/keys.c    **** 		CLEAR_INIT_LIFT;
1281:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1282:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1283:src/keys.c    **** 		zero_X();
ARM GAS  /tmp/ccF3vcso.s 			page 24


1284:src/keys.c    **** 		if ( zero_y ) zero_Y();
1285:src/keys.c    **** 	}
1286:src/keys.c    **** }
1287:src/keys.c    **** 
1288:src/keys.c    ****  static int process_c_lock ( const keycode c ) { // main function - called from process (c) functio
1289:src/keys.c    **** 
1290:src/keys.c    ****    enum shifts shift = cur_shift();
1291:src/keys.c    **** 
1292:src/keys.c    ****    // Individual keys needing special treatment
1293:src/keys.c    **** 
1294:src/keys.c    ****    if ( (c < K05) && shift == SHIFT_H ){ // display modes
1295:src/keys.c    ****      return process_h_shifted (c);
1296:src/keys.c    ****    }
1297:src/keys.c    **** 
1298:src/keys.c    **** 
1299:src/keys.c    ****    if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because oth
1300:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
1301:src/keys.c    ****    }
1302:src/keys.c    ****    if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, H
1303:src/keys.c    ****      return process_fg_shifted (c);
1304:src/keys.c    ****    }
1305:src/keys.c    **** 
1306:src/keys.c    ****    if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry comple
1307:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
1308:src/keys.c    ****        reset_shift();
1309:src/keys.c    ****        if ( CmdLineLength ) {
1310:src/keys.c    **** 	 State2.state_lift = 0;
1311:src/keys.c    **** 	 return OP_NIL | OP_PIB;
1312:src/keys.c    ****        }
1313:src/keys.c    ****        else {
1314:src/keys.c    **** 	 return OP_NIL | OP_PIA;
1315:src/keys.c    ****        }
1316:src/keys.c    ****      }
1317:src/keys.c    ****      else {
1318:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1319:src/keys.c    ****        const int eex_pi = 1;
1320:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1321:src/keys.c    ****        const int eex_pi = get_user_flag(regL_idx);
1322:src/keys.c    **** #else
1323:src/keys.c    ****        const int eex_pi = 0;
1324:src/keys.c    **** #endif
1325:src/keys.c    ****        if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // norma
1326:src/keys.c    **** 	 finish_cpx_entry(1);
1327:src/keys.c    **** 	 return process_cmplx(c);
1328:src/keys.c    ****        }
1329:src/keys.c    ****      }
1330:src/keys.c    ****    }
1331:src/keys.c    **** 
1332:src/keys.c    ****    if (shift != SHIFT_N) { // other shifted keys - special cases first.
1333:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
1334:src/keys.c    ****      switch (c) {
1335:src/keys.c    ****      case (K60):
1336:src/keys.c    ****        reset_shift();
1337:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1338:src/keys.c    ****      case (K21): // x<->y key
1339:src/keys.c    ****        if (shift == SHIFT_F) { // changed this for DM42
1340:src/keys.c    **** 	 return process_fg_shifted(c); // SHOW
ARM GAS  /tmp/ccF3vcso.s 			page 25


1341:src/keys.c    ****        }
1342:src/keys.c    ****        if (shift == SHIFT_G) {
1343:src/keys.c    **** 	 reset_shift();
1344:src/keys.c    **** 	 return process_normal(K21); // x<>y
1345:src/keys.c    ****        }
1346:src/keys.c    ****        break;
1347:src/keys.c    ****      case (K40): // up-arrow key
1348:src/keys.c    ****        if (shift == SHIFT_F) {
1349:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
1350:src/keys.c    ****        }
1351:src/keys.c    ****        else if (shift == SHIFT_G) {
1352:src/keys.c    **** 	 SET_POLAR_DISPLAY;
1353:src/keys.c    **** 	 CLEAR_POLAR_READY;
1354:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
1355:src/keys.c    ****        }
1356:src/keys.c    ****        else if (shift == SHIFT_H) { // ND addition on DM42 - should work on ordinary calculator too
1357:src/keys.c    **** 	 return process_cmplx (c);
1358:src/keys.c    ****        }
1359:src/keys.c    ****        break;
1360:src/keys.c    ****      case (K22): // +/- key
1361:src/keys.c    ****        reset_shift();
1362:src/keys.c    ****        if (shift == SHIFT_F ) {
1363:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
1364:src/keys.c    ****        }
1365:src/keys.c    ****        else if (shift == SHIFT_H) {
1366:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
1367:src/keys.c    ****        }
1368:src/keys.c    ****        break;
1369:src/keys.c    ****      case (K62): // IP/FP key
1370:src/keys.c    ****        reset_shift();
1371:src/keys.c    ****        if (shift == SHIFT_F) {
1372:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
1373:src/keys.c    ****        }
1374:src/keys.c    ****        else if (shift == SHIFT_G) {
1375:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
1376:src/keys.c    ****        }
1377:src/keys.c    ****        break;
1378:src/keys.c    ****      case (K44): // x (times) key
1379:src/keys.c    ****        if (shift == SHIFT_H) { // real*real + i imag*imag
1380:src/keys.c    **** 	 reset_shift();
1381:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
1382:src/keys.c    ****        }
1383:src/keys.c    ****        else {
1384:src/keys.c    **** 	 return process_cmplx(c);
1385:src/keys.c    ****        }
1386:src/keys.c    ****        break;
1387:src/keys.c    ****      case (K34): // divide key
1388:src/keys.c    ****        if (shift == SHIFT_H) { // real/real + i imag/imag
1389:src/keys.c    **** 	 reset_shift();
1390:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
1391:src/keys.c    ****        }
1392:src/keys.c    ****        else {
1393:src/keys.c    **** 	 return process_cmplx(c);
1394:src/keys.c    ****        }
1395:src/keys.c    ****        break;
1396:src/keys.c    ****      case (K24): // <- key
1397:src/keys.c    ****        if (POLAR_DISPLAY) break;
ARM GAS  /tmp/ccF3vcso.s 			page 26


1398:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
1399:src/keys.c    **** 	 zero_X ();
1400:src/keys.c    **** 	 State2.state_lift = 0;
1401:src/keys.c    **** 	 SET_REAL;
1402:src/keys.c    **** 	 stack_begin (0);
1403:src/keys.c    ****        }
1404:src/keys.c    ****        break;
1405:src/keys.c    ****      default:
1406:src/keys.c    ****        return process_cmplx(c); // for shifted keys not listed above
1407:src/keys.c    ****      }
1408:src/keys.c    ****      reset_shift(); // for the keys listed above; functions complete
1409:src/keys.c    ****      return STATE_UNFINISHED;
1410:src/keys.c    ****    }
1411:src/keys.c    **** 
1412:src/keys.c    ****    switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally n
1413:src/keys.c    ****    case (K61):
1414:src/keys.c    ****    case (K62):
1415:src/keys.c    ****    case (K51):
1416:src/keys.c    ****    case (K52):
1417:src/keys.c    ****    case (K53):
1418:src/keys.c    ****    case (K41):
1419:src/keys.c    ****    case (K42):
1420:src/keys.c    ****    case (K43):
1421:src/keys.c    ****    case (K31):
1422:src/keys.c    ****    case (K32):
1423:src/keys.c    ****    case (K33):
1424:src/keys.c    ****    case (K23): // 0.123456789EEX
1425:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1426:src/keys.c    ****        SET_REAL; // start and continuation of real entry
1427:src/keys.c    ****        stack_begin (1);
1428:src/keys.c    ****      }
1429:src/keys.c    ****      return process_normal(c);
1430:src/keys.c    ****    case (K22): // CHS
1431:src/keys.c    ****      //	case (K23): // EEX
1432:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1433:src/keys.c    ****        return process_cmplx(c);
1434:src/keys.c    ****      }
1435:src/keys.c    ****      else {
1436:src/keys.c    ****        return process_normal(c);
1437:src/keys.c    ****      }
1438:src/keys.c    ****    case (K24): // backspace
1439:src/keys.c    ****    case (K04): // arrow
1440:src/keys.c    ****    case (K_ARROW):
1441:src/keys.c    ****      return process_normal(c);
1442:src/keys.c    ****    case (K_CMPLX):
1443:src/keys.c    ****      if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1444:src/keys.c    ****        CLEAR_REAL;
1445:src/keys.c    ****        SET_IMAG;
1446:src/keys.c    ****        do_command_line();
1447:src/keys.c    ****        State2.state_lift = 0;
1448:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1449:src/keys.c    ****      }
1450:src/keys.c    ****      else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1451:src/keys.c    ****        finish_cpx_entry (1);
1452:src/keys.c    ****      }
1453:src/keys.c    ****      else { // down here we need a part that deals with CPX being pressed without a real part being
1454:src/keys.c    ****        SET_IMAG;
ARM GAS  /tmp/ccF3vcso.s 			page 27


1455:src/keys.c    ****        stack_begin (1);
1456:src/keys.c    ****      }
1457:src/keys.c    ****      return STATE_UNFINISHED;
1458:src/keys.c    ****    default:;
1459:src/keys.c    ****    }
1460:src/keys.c    ****    finish_cpx_entry(0);
1461:src/keys.c    ****    return process_cmplx(c);
1462:src/keys.c    **** 
1463:src/keys.c    ****  }
1464:src/keys.c    **** 
1465:src/keys.c    **** #endif
1466:src/keys.c    **** 
1467:src/keys.c    **** /*
1468:src/keys.c    ****  *  Process a key code after CPX
1469:src/keys.c    ****  */
1470:src/keys.c    **** static int process_cmplx(const keycode c) {
1471:src/keys.c    **** #define _RARG   0xFF00
1472:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1473:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1474:src/keys.c    **** 
1475:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1476:src/keys.c    **** 		// Row 1
1477:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1478:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1479:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1480:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1481:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1482:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1483:src/keys.c    **** 		// Row 2
1484:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1485:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1486:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1487:src/keys.c    **** 		// Row 3
1488:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1489:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1490:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1491:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1492:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1493:src/keys.c    **** 		// Row 4
1494:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1495:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1496:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1497:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1498:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1499:src/keys.c    **** 		// Row 5
1500:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1501:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1502:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1503:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1504:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1505:src/keys.c    **** 		// Row 6
1506:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1507:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1508:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1509:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1510:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1511:src/keys.c    **** 		// Row 7
ARM GAS  /tmp/ccF3vcso.s 			page 28


1512:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1513:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1514:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1515:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1516:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1517:src/keys.c    **** #else
1518:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1519:src/keys.c    **** #endif
1520:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1521:src/keys.c    **** #ifdef DM42
1522:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1523:src/keys.c    **** #endif
1524:src/keys.c    **** 	};
1525:src/keys.c    **** 
1526:src/keys.c    **** 	enum shifts shift = reset_shift();
1527:src/keys.c    **** 	int lc = keycode_to_linear(c);
1528:src/keys.c    **** 	int op = op_map[lc][shift];
1529:src/keys.c    **** 	State2.cmplx = 0;
1530:src/keys.c    **** 
1531:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1532:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1533:src/keys.c    **** 		return STATE_UNFINISHED;
1534:src/keys.c    **** 	}
1535:src/keys.c    **** 	if (c == K00) {
1536:src/keys.c    **** 		// HYP
1537:src/keys.c    **** 		process_cmdline_set_lift();
1538:src/keys.c    **** 		//		print_debug(100,1);
1539:src/keys.c    **** 		State2.hyp = 1;
1540:src/keys.c    **** 		State2.dot = op;
1541:src/keys.c    **** 		State2.cmplx = 1;
1542:src/keys.c    **** 		return STATE_UNFINISHED;
1543:src/keys.c    **** 	}
1544:src/keys.c    **** 
1545:src/keys.c    **** 	if (shift != SHIFT_N) {
1546:src/keys.c    **** 		switch (c) {
1547:src/keys.c    **** 		case K_CMPLX:
1548:src/keys.c    **** 			set_shift(shift);
1549:src/keys.c    **** 			break;
1550:src/keys.c    **** 
1551:src/keys.c    **** 		case K51:
1552:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1553:src/keys.c    **** 				if (is_bad_cmdline())
1554:src/keys.c    **** 					return STATE_UNFINISHED;
1555:src/keys.c    **** 				process_cmdline_set_lift();
1556:src/keys.c    **** 				State2.cmplx = 1;
1557:src/keys.c    **** 				State2.test = op;
1558:src/keys.c    **** 			}
1559:src/keys.c    **** 			return STATE_UNFINISHED;
1560:src/keys.c    **** 
1561:src/keys.c    **** 		case K60:
1562:src/keys.c    **** 			init_state();
1563:src/keys.c    **** 			break;
1564:src/keys.c    **** 
1565:src/keys.c    **** 		default:
1566:src/keys.c    **** 			break;
1567:src/keys.c    **** 		}
1568:src/keys.c    **** 	}
ARM GAS  /tmp/ccF3vcso.s 			page 29


1569:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1570:src/keys.c    **** 	return check_confirm(op);
1571:src/keys.c    **** #else
1572:src/keys.c    **** 	return op;
1573:src/keys.c    **** #endif
1574:src/keys.c    **** 
1575:src/keys.c    **** #undef _RARG
1576:src/keys.c    **** #undef CSWAPXZ
1577:src/keys.c    **** #undef CNUM
1578:src/keys.c    **** }
1579:src/keys.c    **** 
1580:src/keys.c    **** 
1581:src/keys.c    **** 
1582:src/keys.c    **** /*
1583:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1584:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1585:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1586:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1587:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1588:src/keys.c    ****  * the ON key are dealt with by our caller.
1589:src/keys.c    ****  */
1590:src/keys.c    **** static int process_hyp(const keycode c) {
1591:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1592:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1593:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1594:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1595:src/keys.c    **** 	};
1596:src/keys.c    **** 	int cmplx = State2.cmplx;
1597:src/keys.c    **** 	int f = State2.dot;
1598:src/keys.c    **** 
1599:src/keys.c    **** 	State2.hyp = 0;
1600:src/keys.c    **** 	State2.cmplx = 0;
1601:src/keys.c    **** 	State2.dot = 0;
1602:src/keys.c    **** #ifdef DM42
1603:src/keys.c    **** 	reset_shift();
1604:src/keys.c    **** #endif
1605:src/keys.c    **** 	switch ((int)c) {
1606:src/keys.c    **** 
1607:src/keys.c    **** 	case K01:
1608:src/keys.c    **** 	case K02:
1609:src/keys.c    **** 	case K03:
1610:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1611:src/keys.c    **** 
1612:src/keys.c    **** 	case K_CMPLX:
1613:src/keys.c    **** 		cmplx = ! cmplx;
1614:src/keys.c    **** 		goto stay;
1615:src/keys.c    **** 
1616:src/keys.c    **** #ifndef DM42
1617:src/keys.c    **** 	case K_F: 
1618:src/keys.c    **** 	case K_G:
1619:src/keys.c    **** 		f = (c == K_F);
1620:src/keys.c    **** 		// fall through
1621:src/keys.c    **** #else
1622:src/keys.c    **** 	case K_F:
1623:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1624:src/keys.c    **** #endif
1625:src/keys.c    **** 	stay:
ARM GAS  /tmp/ccF3vcso.s 			page 30


1626:src/keys.c    **** 		// process_cmdline_set_lift();
1627:src/keys.c    **** 	  //	  print_debug(100,2);
1628:src/keys.c    **** 	  
1629:src/keys.c    **** 	  State2.hyp = 1;
1630:src/keys.c    **** 		State2.cmplx = cmplx;
1631:src/keys.c    **** 		State2.dot = f;
1632:src/keys.c    **** 		break;
1633:src/keys.c    **** 
1634:src/keys.c    **** 	default:
1635:src/keys.c    **** 		break;
1636:src/keys.c    **** 	}
1637:src/keys.c    **** 	return STATE_UNFINISHED;
1638:src/keys.c    **** }
1639:src/keys.c    **** 
1640:src/keys.c    **** 
1641:src/keys.c    **** /*
1642:src/keys.c    ****  *  Process a key code after ->
1643:src/keys.c    ****  */
1644:src/keys.c    **** static int process_arrow(const keycode c) {
1645:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1646:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1647:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1648:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1649:src/keys.c    **** 	};
1650:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1651:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1652:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1653:src/keys.c    **** 	};
1654:src/keys.c    **** 	const int shift = reset_shift();
1655:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1656:src/keys.c    **** 
1657:src/keys.c    **** 	State2.arrow = 0;
1658:src/keys.c    **** #ifdef DM42
1659:src/keys.c    **** 	set_last_menu ();
1660:src/keys.c    **** 	display_current_menu ();
1661:src/keys.c    **** #endif
1662:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1663:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1664:src/keys.c    **** 	  if (!C_LOCK_ON) {
1665:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1666:src/keys.c    **** 	  }
1667:src/keys.c    **** 	  else {
1668:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1669:src/keys.c    **** 	  }
1670:src/keys.c    **** 	}
1671:src/keys.c    **** #endif
1672:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1673:src/keys.c    **** 	
1674:src/keys.c    **** 	if (c >= K10 && c <= K12)
1675:src/keys.c    **** 		return op_map[c - K10][f];
1676:src/keys.c    **** 
1677:src/keys.c    **** 	if (c == K22 || c == K23)
1678:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1679:src/keys.c    **** 
1680:src/keys.c    **** 	return STATE_UNFINISHED;
1681:src/keys.c    **** }
1682:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 31


1683:src/keys.c    **** 
1684:src/keys.c    **** /* Process a GTO . sequence
1685:src/keys.c    ****  */
1686:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1686 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1687:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1687 2 view .LVU1
1688:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1688 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1686 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1687:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1687 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1688 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1687:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1687 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1688 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1687:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1687 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1686 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1689:src/keys.c    **** 
1690:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1690 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1687:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1687 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1688:src/keys.c    **** 
  63              		.loc 1 1688 2 is_stmt 1 view .LVU12
  64              		.loc 1 1690 2 view .LVU13
  65              		.loc 1 1690 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1690 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
ARM GAS  /tmp/ccF3vcso.s 			page 32


  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1690 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1691:src/keys.c    **** 		return val;
1692:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1692 2 is_stmt 1 view .LVU17
  77              		.loc 1 1692 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1692 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1692 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1692 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1692 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1693:src/keys.c    **** 		return val;
1694:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1694 2 is_stmt 1 view .LVU23
  91              		.loc 1 1694 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1695:src/keys.c    **** 	return -1;
  94              		.loc 1 1695 2 is_stmt 1 view .LVU25
1692:src/keys.c    **** 		return val;
  95              		.loc 1 1692 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1695 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1696:src/keys.c    **** }
 102              		.loc 1 1696 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1696 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccF3vcso.s 			page 33


 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 747:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 747 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 748:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 748 2 view .LVU31
 747:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 747 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 751:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 751 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 749:src/keys.c    **** 
 143              		.loc 1 749 2 is_stmt 1 view .LVU34
 751:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 751 2 view .LVU35
 751:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 751 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 747:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 747 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 751:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 751 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 749:src/keys.c    **** 
 151              		.loc 1 749 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 749:src/keys.c    **** 
 154              		.loc 1 749 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 749:src/keys.c    **** 
 157              		.loc 1 749 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 752:src/keys.c    **** 			pc = 1;
 160              		.loc 1 752 3 is_stmt 1 view .LVU42
 752:src/keys.c    **** 			pc = 1;
 161              		.loc 1 752 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 753:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 753 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
ARM GAS  /tmp/ccF3vcso.s 			page 34


 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 754 3 is_stmt 1 view .LVU45
 748:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 748 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 754 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 754 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 754 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 754 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 757:src/keys.c    **** }
 186              		.loc 1 757 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 758:src/keys.c    **** 
 188              		.loc 1 758 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 755:src/keys.c    **** 	}
 192              		.loc 1 755 4 is_stmt 1 view .LVU53
 755:src/keys.c    **** 	}
 193              		.loc 1 755 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 758:src/keys.c    **** 
 195              		.loc 1 758 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 758:src/keys.c    **** 
 199              		.loc 1 758 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
ARM GAS  /tmp/ccF3vcso.s 			page 35


 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
1697:src/keys.c    **** 
1698:src/keys.c    **** static int gtodot_fkey(int n) {
1699:src/keys.c    **** 	const int code = 100 + n;
1700:src/keys.c    **** 	unsigned int pc = state_pc();
1701:src/keys.c    **** 
1702:src/keys.c    **** 	if(isXROM(pc))
1703:src/keys.c    **** 		pc = 1;
1704:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1705:src/keys.c    **** 	if (pc > 0)
1706:src/keys.c    **** 		return pc;
1707:src/keys.c    **** 	return state_pc();
1708:src/keys.c    **** }
1709:src/keys.c    **** 
1710:src/keys.c    **** static int process_gtodot(const keycode c) {
1711:src/keys.c    **** 	int pc = -1;
1712:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1713:src/keys.c    **** 
1714:src/keys.c    **** 	if (rawpc <= 9) {
1715:src/keys.c    **** 		// Digit 0 - 9
1716:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1717:src/keys.c    **** 	}
1718:src/keys.c    **** #ifdef DM42
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1721:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1722:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1723:src/keys.c    **** #endif
1724:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1725:src/keys.c    **** 		// A - D
1726:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1727:src/keys.c    **** 		goto fin;
1728:src/keys.c    **** 	}
1729:src/keys.c    **** 	else if (c == K62) {
1730:src/keys.c    **** 		// .
1731:src/keys.c    **** 		rawpc = ProgSize;
1732:src/keys.c    **** 		goto fin;
1733:src/keys.c    **** 	}
1734:src/keys.c    **** 	else if (c == K20) {
1735:src/keys.c    **** 		// ENTER - short circuit processing
1736:src/keys.c    **** 		pc = State2.digval;
1737:src/keys.c    **** 	}
1738:src/keys.c    **** 	else if (c == K24) {
1739:src/keys.c    **** 		// backspace
1740:src/keys.c    **** 		if (State2.numdigit == 0) {
1741:src/keys.c    **** 			goto fin2;
1742:src/keys.c    **** 		} else {
1743:src/keys.c    **** 			State2.numdigit--;
1744:src/keys.c    **** 			State2.digval /= 10;
1745:src/keys.c    **** 		}
1746:src/keys.c    **** 	}
1747:src/keys.c    **** 	else if (c == K_UP) {
1748:src/keys.c    **** 		// up
ARM GAS  /tmp/ccF3vcso.s 			page 36


1749:src/keys.c    **** 		rawpc = state_pc();
1750:src/keys.c    **** 		if (rawpc == 1)
1751:src/keys.c    **** 			rawpc = 0;
1752:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1753:src/keys.c    **** 		update_program_bounds(1);
1754:src/keys.c    **** 		rawpc = ProgBegin;
1755:src/keys.c    **** 		goto fin;
1756:src/keys.c    **** 	}
1757:src/keys.c    **** 	else if (c == K_DOWN) {
1758:src/keys.c    **** 		// down
1759:src/keys.c    **** 		update_program_bounds(1);
1760:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1761:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1762:src/keys.c    **** 			rawpc = 1;
1763:src/keys.c    **** 		goto fin;
1764:src/keys.c    **** 	}
1765:src/keys.c    **** 	if (pc >= 0) {
1766:src/keys.c    **** 		rawpc = find_user_pc(pc);
1767:src/keys.c    **** fin:		set_pc(rawpc);
1768:src/keys.c    **** fin2:		State2.gtodot = 0;
1769:src/keys.c    **** 		State2.digval = 0;
1770:src/keys.c    **** 		State2.numdigit = 0;
1771:src/keys.c    **** 	}
1772:src/keys.c    **** 	return STATE_UNFINISHED;
1773:src/keys.c    **** }
1774:src/keys.c    **** 
1775:src/keys.c    **** 
1776:src/keys.c    **** /* Process a keystroke in alpha mode
1777:src/keys.c    ****  */
1778:src/keys.c    **** static int process_alpha(const keycode c) {
1779:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1780:src/keys.c    ****         int op = STATE_UNFINISHED;
1781:src/keys.c    **** 	const enum shifts shift = reset_shift();
1782:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1783:src/keys.c    **** 	State2.alpha_pos = 0;
1784:src/keys.c    **** 
1785:src/keys.c    **** 	switch (c) {
1786:src/keys.c    **** 	case K10:	// STO
1787:src/keys.c    **** 		if (shift == SHIFT_F) {
1788:src/keys.c    **** 			init_arg(RARG_ASTO);
1789:src/keys.c    **** 			return STATE_UNFINISHED;
1790:src/keys.c    **** 		}
1791:src/keys.c    **** 		break;
1792:src/keys.c    **** 
1793:src/keys.c    **** 	case K11:	// RCL - maybe view
1794:src/keys.c    **** 		if (shift == SHIFT_F) {
1795:src/keys.c    **** 			init_arg(RARG_ARCL);
1796:src/keys.c    **** 			return STATE_UNFINISHED;
1797:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1798:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1799:src/keys.c    **** 			return STATE_UNFINISHED;
1800:src/keys.c    **** 		}
1801:src/keys.c    **** 		break;
1802:src/keys.c    **** 
1803:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1804:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1805:src/keys.c    **** 			break;
ARM GAS  /tmp/ccF3vcso.s 			page 37


1806:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1807:src/keys.c    **** 			State2.multi = 1;
1808:src/keys.c    **** 			State2.numdigit = 0;
1809:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1810:src/keys.c    **** 			return STATE_UNFINISHED;
1811:src/keys.c    **** 		}
1812:src/keys.c    **** 		State2.alphas = 0;
1813:src/keys.c    **** 		State2.alphashift = 0;
1814:src/keys.c    **** #ifdef DM42
1815:src/keys.c    **** 		set_menu(M_Last);
1816:src/keys.c    **** 		display_current_menu();
1817:src/keys.c    **** #endif
1818:src/keys.c    **** 		return op;
1819:src/keys.c    **** 
1820:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1821:src/keys.c    **** 		if (shift == SHIFT_N)
1822:src/keys.c    **** 			return STATE_BACKSPACE;
1823:src/keys.c    **** 		if (shift == SHIFT_H)
1824:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1825:src/keys.c    **** 		break;
1826:src/keys.c    **** 
1827:src/keys.c    **** 	case K_UP:
1828:src/keys.c    **** 	  if (shift == SHIFT_N) {
1829:src/keys.c    **** 	    if ( State2.runmode ) {
1830:src/keys.c    **** 	      // Alpha scroll left
1831:src/keys.c    **** #ifdef DM42
1832:src/keys.c    **** 	      /* 
1833:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1834:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1835:src/keys.c    **** 	       */
1836:src/keys.c    **** #ifdef BIGGER_DISPLAY
1837:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1838:src/keys.c    **** 		alpha_pos += 1;
1839:src/keys.c    **** 	      }
1840:src/keys.c    **** #else
1841:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1842:src/keys.c    **** 		alpha_pos += 1;
1843:src/keys.c    **** 	      }
1844:src/keys.c    **** #endif
1845:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1846:src/keys.c    **** #else
1847:src/keys.c    **** 	      int n = alpha_pos + 1;
1848:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1849:src/keys.c    **** #endif
1850:src/keys.c    **** 	      return STATE_UNFINISHED;
1851:src/keys.c    **** 	    }
1852:src/keys.c    **** 	    return STATE_BST;
1853:src/keys.c    **** 	  }
1854:src/keys.c    **** 	  break;
1855:src/keys.c    **** 
1856:src/keys.c    **** 	case K_DOWN:
1857:src/keys.c    **** 	  if (shift == SHIFT_N) {
1858:src/keys.c    **** 	    if ( State2.runmode ) {
1859:src/keys.c    **** 	      // Alpha scroll right
1860:src/keys.c    **** 	      if (alpha_pos > 0)
1861:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1862:src/keys.c    **** 	      return STATE_UNFINISHED;
ARM GAS  /tmp/ccF3vcso.s 			page 38


1863:src/keys.c    **** 	    }
1864:src/keys.c    **** 	    return STATE_SST;
1865:src/keys.c    **** 	  }
1866:src/keys.c    **** 	  break;
1867:src/keys.c    **** 
1868:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1869:src/keys.c    **** 		if (shift == SHIFT_F)
1870:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1871:src/keys.c    **** 		else if (shift == SHIFT_H)
1872:src/keys.c    **** 			return OP_NIL | OP_OFF;
1873:src/keys.c    **** 		else if (shift == SHIFT_N) {
1874:src/keys.c    **** #ifdef DM42
1875:src/keys.c    **** 		  set_menu(M_Last);
1876:src/keys.c    **** 		  display_current_menu();
1877:src/keys.c    **** #endif
1878:src/keys.c    **** 		  init_state();
1879:src/keys.c    **** 		}
1880:src/keys.c    **** 		return STATE_UNFINISHED;
1881:src/keys.c    **** 
1882:src/keys.c    **** 	case K63:
1883:src/keys.c    **** 		if (shift == SHIFT_F)
1884:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1885:src/keys.c    **** 		break;
1886:src/keys.c    **** 
1887:src/keys.c    **** 	default:
1888:src/keys.c    **** 		break;
1889:src/keys.c    **** 	}
1890:src/keys.c    **** 
1891:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1892:src/keys.c    **** 	if (ch == 0)
1893:src/keys.c    **** 		return STATE_UNFINISHED;
1894:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1895:src/keys.c    **** }
1896:src/keys.c    **** 
1897:src/keys.c    **** /*
1898:src/keys.c    ****  *  Code to handle all commands with arguments
1899:src/keys.c    ****  */
1900:src/keys.c    **** static void reset_arg(void) {
1901:src/keys.c    **** 	init_arg((enum rarg) 0);
1902:src/keys.c    **** 	State2.rarg = 0;
1903:src/keys.c    **** }
1904:src/keys.c    **** 
1905:src/keys.c    ****  static int arg_eval(unsigned int val) {
1906:src/keys.c    ****    const unsigned int base = CmdBase;
1907:src/keys.c    ****    int r = RARG(base, val 
1908:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1909:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1910:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1911:src/keys.c    **** 
1912:src/keys.c    ****    if (! State2.ind) {
1913:src/keys.c    ****      /*
1914:src/keys.c    ****       *  Central argument checking for some commands
1915:src/keys.c    ****       */
1916:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1917:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1918:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1919:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
ARM GAS  /tmp/ccF3vcso.s 			page 39


1920:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1921:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1922:src/keys.c    ****        if ( val == 0 )
1923:src/keys.c    **** 	 return STATE_UNFINISHED;
1924:src/keys.c    ****        r = RARG(base, val);
1925:src/keys.c    ****      }
1926:src/keys.c    **** #endif
1927:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1928:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1929:src/keys.c    ****        if (C_LOCKED) {
1930:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1931:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1932:src/keys.c    ****        }
1933:src/keys.c    ****        else {
1934:src/keys.c    **** 	 return STATE_UNFINISHED;
1935:src/keys.c    ****        }
1936:src/keys.c    ****      }
1937:src/keys.c    **** #else
1938:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1939:src/keys.c    ****        // Disallow odd complex register > 98
1940:src/keys.c    ****        return STATE_UNFINISHED;
1941:src/keys.c    **** #endif
1942:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1943:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1944:src/keys.c    ****        return STATE_UNFINISHED;
1945:src/keys.c    ****    }
1946:src/keys.c    ****    // Build op-code
1947:src/keys.c    ****    reset_arg();
1948:src/keys.c    ****    return r;
1949:src/keys.c    ****  }
1950:src/keys.c    **** 
1951:src/keys.c    **** static int arg_digit(int n) {
1952:src/keys.c    **** 	int lim;
1953:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1954:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1955:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1956:src/keys.c    **** #else
1957:src/keys.c    **** 	const unsigned int base = CmdBase;
1958:src/keys.c    **** #endif
1959:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1960:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1961:src/keys.c    **** 	
1962:src/keys.c    **** 	if (State2.local) {
1963:src/keys.c    **** 		// Handle local registers and flags
1964:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1965:src/keys.c    **** 		if (State2.runmode) {
1966:src/keys.c    **** 			if (LocalRegs == 0)
1967:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1968:src/keys.c    **** 			if (is_reg) {
1969:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1970:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1971:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1972:src/keys.c    **** 			}
1973:src/keys.c    **** 		}
1974:src/keys.c    **** 	}
1975:src/keys.c    **** 	else if (is_reg)						// normal register
1976:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
ARM GAS  /tmp/ccF3vcso.s 			page 40


1977:src/keys.c    **** 	else {
1978:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1979:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1980:src/keys.c    **** 			lim = RARG_IND - 1;
1981:src/keys.c    **** 	}
1982:src/keys.c    **** 	if ((int) val > lim)
1983:src/keys.c    **** 		return STATE_UNFINISHED;
1984:src/keys.c    **** 
1985:src/keys.c    **** 	State2.digval = val;
1986:src/keys.c    **** 	++State2.numdigit;
1987:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1988:src/keys.c    **** 		int result = arg_eval(val);
1989:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1990:src/keys.c    **** 			--State2.numdigit;
1991:src/keys.c    **** 			State2.digval /= 10;
1992:src/keys.c    **** 		}
1993:src/keys.c    **** 		return result;
1994:src/keys.c    **** 	}
1995:src/keys.c    **** 	return STATE_UNFINISHED;
1996:src/keys.c    **** }
1997:src/keys.c    **** 
1998:src/keys.c    **** static int arg_fkey(int n) {
1999:src/keys.c    **** 	const unsigned int b = CmdBase;
2000:src/keys.c    **** 
2001:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
2002:src/keys.c    **** 	{
2003:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
2004:src/keys.c    **** 			return STATE_UNFINISHED;
2005:src/keys.c    **** 		if (argcmds[b].lim < 100)
2006:src/keys.c    **** 			return STATE_UNFINISHED;
2007:src/keys.c    **** 		return arg_eval(n + 100);
2008:src/keys.c    **** 	}
2009:src/keys.c    **** 	return STATE_UNFINISHED;
2010:src/keys.c    **** }
2011:src/keys.c    **** 
2012:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2013:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2014:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2015:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2016:src/keys.c    **** #else
2017:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2018:src/keys.c    **** #endif
2019:src/keys.c    **** }
2020:src/keys.c    **** 
2021:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2022:src/keys.c    **** 	unsigned int b = CmdBase;
2023:src/keys.c    **** 
2024:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2025:src/keys.c    **** 		CmdBase += n;
2026:src/keys.c    **** 		return 1;
2027:src/keys.c    **** 	}
2028:src/keys.c    **** 	/* And we can turn off the operation too */
2029:src/keys.c    **** 	if (b >= n) {
2030:src/keys.c    **** 		b -= n;
2031:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2032:src/keys.c    **** 			CmdBase = b;
2033:src/keys.c    **** 			return 1;
ARM GAS  /tmp/ccF3vcso.s 			page 41


2034:src/keys.c    **** 		}
2035:src/keys.c    **** 	}
2036:src/keys.c    **** 	return 0;
2037:src/keys.c    **** }
2038:src/keys.c    **** 
2039:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2040:src/keys.c    **** 
2041:src/keys.c    **** 	if (State2.numdigit == 0) {
2042:src/keys.c    **** 		// Only valid at beginning of entry
2043:src/keys.c    **** 		if (State2.dot || State2.local) {
2044:src/keys.c    **** 			// '..' or ENTER '.' = X
2045:src/keys.c    **** 			State2.local = 0;
2046:src/keys.c    **** 			return arg_eval(regX_idx);
2047:src/keys.c    **** 		}
2048:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2049:src/keys.c    **** 			// local register or flag select
2050:src/keys.c    **** 			State2.local = 1;
2051:src/keys.c    **** 		}
2052:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2053:src/keys.c    **** 			// Special GTO . sequence
2054:src/keys.c    **** 			if (! State2.ind) {
2055:src/keys.c    **** 				State2.gtodot = 1;
2056:src/keys.c    **** 				reset_arg();
2057:src/keys.c    **** 			}
2058:src/keys.c    **** 		}
2059:src/keys.c    **** 	}
2060:src/keys.c    **** 	return STATE_UNFINISHED;
2061:src/keys.c    **** }
2062:src/keys.c    **** 
2063:src/keys.c    **** static int process_arg_shuffle(int r) {
2064:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2065:src/keys.c    **** 	if (State2.numdigit < 4)
2066:src/keys.c    **** 		return STATE_UNFINISHED;
2067:src/keys.c    **** 	return arg_eval(State2.digval);
2068:src/keys.c    **** }
2069:src/keys.c    **** 
2070:src/keys.c    **** 
2071:src/keys.c    **** static int process_arg(const keycode c) {
2072:src/keys.c    **** 	unsigned int base = CmdBase;
2073:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2074:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2075:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2076:src/keys.c    **** 	const enum shifts shift = reset_shift();
2077:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2078:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2079:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2080:src/keys.c    **** 
2081:src/keys.c    **** 	n &= ~NO_SHORT;
2082:src/keys.c    **** 	if (base >= NUM_RARG) {
2083:src/keys.c    **** 		reset_arg();
2084:src/keys.c    **** 		return STATE_UNFINISHED;
2085:src/keys.c    **** 	}
2086:src/keys.c    **** #ifdef DM42
2087:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2088:src/keys.c    **** 	  switch (n) {
2089:src/keys.c    **** 	  case regX_idx:
2090:src/keys.c    **** 	    return arg_digit(1);
ARM GAS  /tmp/ccF3vcso.s 			page 42


2091:src/keys.c    **** 	  case regY_idx:
2092:src/keys.c    **** 	    return arg_digit(2);
2093:src/keys.c    **** 	  case regZ_idx:
2094:src/keys.c    **** 	    return arg_digit(3);
2095:src/keys.c    **** 	  case regT_idx:
2096:src/keys.c    **** 	    return arg_digit(4);
2097:src/keys.c    **** 	  case 5:
2098:src/keys.c    **** 	  case 6:
2099:src/keys.c    **** 	  case 7:
2100:src/keys.c    **** 	  case 8:
2101:src/keys.c    **** 	  case 9:
2102:src/keys.c    **** 	  case 0:
2103:src/keys.c    **** 	    return arg_digit(n);
2104:src/keys.c    **** 	  }
2105:src/keys.c    **** 	}
2106:src/keys.c    **** #else
2107:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2108:src/keys.c    **** 		return arg_digit(n);
2109:src/keys.c    **** #endif	
2110:src/keys.c    **** 	if (shorthand)
2111:src/keys.c    **** 		// row column shorthand addressing
2112:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2113:src/keys.c    **** 
2114:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2115:src/keys.c    **** #ifdef DM42
2116:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2117:src/keys.c    **** 		switch ((int)c) {
2118:src/keys.c    **** 		case K_UP:	// up arrow
2119:src/keys.c    **** 		  if (base == RARG_FIX) {
2120:src/keys.c    **** 		    base = RARG_SIG;
2121:src/keys.c    **** 		    break;
2122:src/keys.c    **** 		  }
2123:src/keys.c    **** 		  if (base == RARG_SIG) {
2124:src/keys.c    **** 		    base = RARG_SIG0;
2125:src/keys.c    **** 		    break;
2126:src/keys.c    **** 		  }
2127:src/keys.c    **** 		  if (base == RARG_SIG0) {
2128:src/keys.c    **** 		    base = RARG_FIX;
2129:src/keys.c    **** 		    break;
2130:src/keys.c    **** 		  }
2131:src/keys.c    **** 		case K_DOWN:	// down arrow
2132:src/keys.c    **** 		case K01:	// B
2133:src/keys.c    **** 		  if (base == RARG_FIX) {
2134:src/keys.c    **** 		    base = RARG_SIG0;
2135:src/keys.c    **** 		    break;
2136:src/keys.c    **** 		  }
2137:src/keys.c    **** 		  if (base == RARG_SIG) {
2138:src/keys.c    **** 		    base = RARG_FIX;
2139:src/keys.c    **** 		    break;
2140:src/keys.c    **** 		  }
2141:src/keys.c    **** 		  if (base == RARG_SIG0) {
2142:src/keys.c    **** 		    base = RARG_SIG;
2143:src/keys.c    **** 		    break;
2144:src/keys.c    **** 		  }
2145:src/keys.c    **** 		}
2146:src/keys.c    **** 	}
2147:src/keys.c    **** 		CmdBase = base;
ARM GAS  /tmp/ccF3vcso.s 			page 43


2148:src/keys.c    **** #else
2149:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2150:src/keys.c    **** 		switch ((int)c) {
2151:src/keys.c    **** 		case K_UP:	// up arrow
2152:src/keys.c    **** 			if (--base < RARG_FIX)
2153:src/keys.c    **** 				base = RARG_SIG0;
2154:src/keys.c    **** 			break;
2155:src/keys.c    **** 
2156:src/keys.c    **** 		case K_DOWN:	// down arrow
2157:src/keys.c    **** 		case K01:	// B
2158:src/keys.c    **** 			if (++base > RARG_SIG0)
2159:src/keys.c    **** 				base = RARG_FIX;
2160:src/keys.c    **** 			break;
2161:src/keys.c    **** 		}
2162:src/keys.c    **** 		CmdBase = base;
2163:src/keys.c    **** 	}
2164:src/keys.c    **** #endif
2165:src/keys.c    **** #endif
2166:src/keys.c    **** 	/*
2167:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2168:src/keys.c    **** 	 *  Handle the rest here.
2169:src/keys.c    **** 	 */
2170:src/keys.c    **** 	switch ((int)c) {
2171:src/keys.c    **** 	case K_F:
2172:src/keys.c    **** 		if (label_addressing)
2173:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2174:src/keys.c    **** 		break;
2175:src/keys.c    **** 
2176:src/keys.c    **** 	case K_ARROW:		// arrow
2177:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2178:src/keys.c    **** 			State2.ind = ! State2.ind;
2179:src/keys.c    **** 			if (! stack_reg)
2180:src/keys.c    **** 				State2.dot = 0;
2181:src/keys.c    **** 		}
2182:src/keys.c    **** 		break;
2183:src/keys.c    **** 
2184:src/keys.c    **** 	case K_CMPLX:
2185:src/keys.c    **** 		if (State2.ind || State2.dot)
2186:src/keys.c    **** 			break;
2187:src/keys.c    **** 		if (base == RARG_STO)
2188:src/keys.c    **** 			CmdBase = RARG_STOM;
2189:src/keys.c    **** 		else if (base == RARG_RCL)
2190:src/keys.c    **** 			CmdBase = RARG_RCLM;
2191:src/keys.c    **** 		break;
2192:src/keys.c    **** #ifdef DM42
2193:src/keys.c    **** 	case K41:       // T
2194:src/keys.c    **** 	  if (State2.shuffle)
2195:src/keys.c    **** 	    return process_arg_shuffle(3);
2196:src/keys.c    **** 	case K51:       // X
2197:src/keys.c    **** 	  if (State2.shuffle)
2198:src/keys.c    **** 	    return process_arg_shuffle(0);
2199:src/keys.c    **** 	case K52:	// Y
2200:src/keys.c    **** 	  if (State2.shuffle)
2201:src/keys.c    **** 	    return process_arg_shuffle(1);
2202:src/keys.c    **** 	case K53:       // Z
2203:src/keys.c    **** 	  if (State2.shuffle)
2204:src/keys.c    **** 	    return process_arg_shuffle(2);
ARM GAS  /tmp/ccF3vcso.s 			page 44


2205:src/keys.c    **** #else
2206:src/keys.c    **** 	case K63:	// Y
2207:src/keys.c    **** 	  if (State2.shuffle)
2208:src/keys.c    **** 	    return process_arg_shuffle(1);
2209:src/keys.c    **** #endif
2210:src/keys.c    **** 	case K00:	// A
2211:src/keys.c    **** 	case K01:	// B
2212:src/keys.c    **** 	case K02:	// C
2213:src/keys.c    **** 	case K03:	// D
2214:src/keys.c    **** #ifdef DM42
2215:src/keys.c    **** 	case K12:	// I (lastY)
2216:src/keys.c    **** 	case K13:	// J
2217:src/keys.c    **** 	case K14:	// K
2218:src/keys.c    **** 	case K15:	// L (lastX)
2219:src/keys.c    **** #else
2220:src/keys.c    **** 	case K12:	// I (lastY)
2221:src/keys.c    **** 	case K21:	// J
2222:src/keys.c    **** 	case K22:	// K
2223:src/keys.c    **** 	case K23:	// L (lastX)
2224:src/keys.c    **** #endif
2225:src/keys.c    **** 	  if (State2.dot || stack_reg)
2226:src/keys.c    **** 			return arg_eval(n);
2227:src/keys.c    **** 		if ( c <= K03 )
2228:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2229:src/keys.c    **** 		break;
2230:src/keys.c    **** #ifdef DM42
2231:src/keys.c    **** 	case K62:	// '.'
2232:src/keys.c    **** 		return process_arg_dot(base);
2233:src/keys.c    **** 
2234:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2235:src/keys.c    **** 	case K64:		// plus
2236:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2237:src/keys.c    **** 			return arg_eval(n);
2238:src/keys.c    **** 		break;
2239:src/keys.c    **** 	case K54:               // minus
2240:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2241:src/keys.c    **** 			reset_arg();
2242:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2243:src/keys.c    **** 		}
2244:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2245:src/keys.c    **** 		break;
2246:src/keys.c    **** 	case K44:		// multiply
2247:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2248:src/keys.c    **** 			return arg_eval(n);
2249:src/keys.c    **** 		break;
2250:src/keys.c    **** 	case K34:
2251:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2252:src/keys.c    **** 		break;
2253:src/keys.c    **** #else
2254:src/keys.c    **** 	case K62:	// X, '.'
2255:src/keys.c    **** 		if (State2.shuffle)
2256:src/keys.c    **** 			return process_arg_shuffle(0);
2257:src/keys.c    **** 		return process_arg_dot(base);
2258:src/keys.c    **** 
2259:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2260:src/keys.c    **** 	case K64:		// Z register
2261:src/keys.c    **** 		if (State2.shuffle)
ARM GAS  /tmp/ccF3vcso.s 			page 45


2262:src/keys.c    **** 			return process_arg_shuffle(2);
2263:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2264:src/keys.c    **** 			return arg_eval(n);
2265:src/keys.c    **** 		break;
2266:src/keys.c    **** 
2267:src/keys.c    **** 	case K54:
2268:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2269:src/keys.c    **** 			reset_arg();
2270:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2271:src/keys.c    **** 		}
2272:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2273:src/keys.c    **** 		break;
2274:src/keys.c    **** 
2275:src/keys.c    **** 	case K44:		// T register
2276:src/keys.c    **** 		if (State2.shuffle)
2277:src/keys.c    **** 			return process_arg_shuffle(3);
2278:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2279:src/keys.c    **** 			return arg_eval(n);
2280:src/keys.c    **** 		break;
2281:src/keys.c    **** 
2282:src/keys.c    **** 	case K34:
2283:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2284:src/keys.c    **** 		break;
2285:src/keys.c    **** #endif
2286:src/keys.c    **** 	case K_UP:
2287:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2288:src/keys.c    **** 		break;
2289:src/keys.c    **** 
2290:src/keys.c    **** 	case K_DOWN:
2291:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2292:src/keys.c    **** 		break;
2293:src/keys.c    **** 
2294:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2295:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2296:src/keys.c    **** 			if (argcmds[base].label) {
2297:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2298:src/keys.c    **** 				State2.multi = 1;
2299:src/keys.c    **** 				State2.alphashift = 0;
2300:src/keys.c    **** 				State2.rarg = 0;
2301:src/keys.c    **** 			} else if (base == RARG_SCI) {
2302:src/keys.c    **** 				reset_arg();
2303:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2304:src/keys.c    **** 			} else if (base == RARG_ENG) {
2305:src/keys.c    **** 				reset_arg();
2306:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2307:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2308:src/keys.c    **** 				State2.dot = 1;
2309:src/keys.c    **** 		} else if (State2.numdigit > 0)
2310:src/keys.c    **** 			return arg_eval(State2.digval);
2311:src/keys.c    **** 		else if (stack_reg)
2312:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2313:src/keys.c    **** 		break;
2314:src/keys.c    **** 
2315:src/keys.c    **** 	case K24:	// <-
2316:src/keys.c    **** 		if (State2.numdigit == 0) {
2317:src/keys.c    **** 			if (State2.dot)
2318:src/keys.c    **** 				State2.dot = 0;
ARM GAS  /tmp/ccF3vcso.s 			page 46


2319:src/keys.c    **** 			else if (State2.local)
2320:src/keys.c    **** 				State2.local = 0;
2321:src/keys.c    **** 			else if (State2.ind)
2322:src/keys.c    **** 				State2.ind = 0;
2323:src/keys.c    **** 			else
2324:src/keys.c    **** 				goto reset;
2325:src/keys.c    **** 		}
2326:src/keys.c    **** 		else {
2327:src/keys.c    **** 			--State2.numdigit;
2328:src/keys.c    **** 			if (State2.shuffle)
2329:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2330:src/keys.c    **** 			else
2331:src/keys.c    **** 				State2.digval /= 10;
2332:src/keys.c    **** 		}
2333:src/keys.c    **** 		break;
2334:src/keys.c    **** 
2335:src/keys.c    **** 	case K60:
2336:src/keys.c    **** 	reset:
2337:src/keys.c    **** 		reset_arg();
2338:src/keys.c    **** 	default:
2339:src/keys.c    **** 		break;
2340:src/keys.c    **** 	}
2341:src/keys.c    **** 	return STATE_UNFINISHED;
2342:src/keys.c    **** }
2343:src/keys.c    **** 
2344:src/keys.c    **** 
2345:src/keys.c    **** /*
2346:src/keys.c    ****  *  Process arguments to the diverse test commands
2347:src/keys.c    ****  */
2348:src/keys.c    **** static int process_test(const keycode c) {
2349:src/keys.c    **** 	int r = State2.test;
2350:src/keys.c    **** 	int cmpx = State2.cmplx;
2351:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2352:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2353:src/keys.c    **** 
2354:src/keys.c    **** 	State2.test = TST_NONE;
2355:src/keys.c    **** 	State2.cmplx = 0;
2356:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2357:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2358:src/keys.c    **** 		// Lettered register
2359:src/keys.c    **** 		if (cmpx && (n & 1)) {
2360:src/keys.c    **** 			if (n == regI_idx)
2361:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2362:src/keys.c    **** 			// Disallow odd complex registers > A
2363:src/keys.c    **** 			goto again;
2364:src/keys.c    **** 		}
2365:src/keys.c    **** 		// Return the command with the register completed
2366:src/keys.c    **** 		return RARG(base, n);
2367:src/keys.c    **** 	}
2368:src/keys.c    **** 	else if ( n == 0 ) {
2369:src/keys.c    **** 		// Special 0
2370:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2371:src/keys.c    **** 	}
2372:src/keys.c    **** 	else if ( n == 1 ) {
2373:src/keys.c    **** 		// Special 1
2374:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2375:src/keys.c    **** 	}
ARM GAS  /tmp/ccF3vcso.s 			page 47


2376:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
2377:src/keys.c    **** 		// digit 2..9, -> or .
2378:src/keys.c    **** 		init_arg((enum rarg)base);
2379:src/keys.c    **** 		return process_arg(c);
2380:src/keys.c    **** 	}
2381:src/keys.c    **** 
2382:src/keys.c    **** 	switch (c) {
2383:src/keys.c    **** 	case K11:					// tests vs register
2384:src/keys.c    **** 	case K20:
2385:src/keys.c    **** 		init_arg((enum rarg)base);
2386:src/keys.c    **** 		return STATE_UNFINISHED;
2387:src/keys.c    **** 
2388:src/keys.c    **** 	//case K60:
2389:src/keys.c    **** 	case K24:
2390:src/keys.c    **** 		return STATE_UNFINISHED;
2391:src/keys.c    **** 
2392:src/keys.c    **** 	default:
2393:src/keys.c    **** 		break;
2394:src/keys.c    **** 	}
2395:src/keys.c    **** again:
2396:src/keys.c    **** 	State2.test = r;
2397:src/keys.c    **** 	State2.cmplx = cmpx;
2398:src/keys.c    **** 	return STATE_UNFINISHED;
2399:src/keys.c    **** }
2400:src/keys.c    **** 
2401:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2402:src/keys.c    **** /*
2403:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2404:src/keys.c    ****  */
2405:src/keys.c    **** #define USER_CAT_MAX 100
2406:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2407:src/keys.c    **** 
2408:src/keys.c    **** static int build_user_cat(void)
2409:src/keys.c    **** {
2410:src/keys.c    **** 	// find the label 'CAT'
2411:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2412:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2413:src/keys.c    **** 	int len = 0;
2414:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2415:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2416:src/keys.c    **** 		char buf1[16];
2417:src/keys.c    **** 		int i;
2418:src/keys.c    **** 		s_opcode op;
2419:src/keys.c    **** 	next:
2420:src/keys.c    **** 		pc = do_inc(pc, 0);
2421:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2422:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2423:src/keys.c    **** 			break;
2424:src/keys.c    **** 		if (isDBL(op))
2425:src/keys.c    **** 			continue;
2426:src/keys.c    **** 		if (isRARG(op)) {
2427:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2428:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2429:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2430:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2431:src/keys.c    **** 		}
2432:src/keys.c    **** 		catcmd(op, buf1);
ARM GAS  /tmp/ccF3vcso.s 			page 48


2433:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2434:src/keys.c    **** 			// Find a position in the table to insert the new entry
2435:src/keys.c    **** 			char buf2[16];
2436:src/keys.c    **** 			const char *p, *q;
2437:src/keys.c    **** 			int diff = 0;
2438:src/keys.c    **** 			if (op == UserCat[i]) {
2439:src/keys.c    **** 				// duplicate entry - ignore
2440:src/keys.c    **** 				goto next;
2441:src/keys.c    **** 			}
2442:src/keys.c    **** 			p = buf1;
2443:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2444:src/keys.c    **** 				++p;
2445:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2446:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2447:src/keys.c    **** 				++q;
2448:src/keys.c    **** 			diff = 0;
2449:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2450:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2451:src/keys.c    **** 			}
2452:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2453:src/keys.c    **** 				// identical according to sort order, insert after
2454:src/keys.c    **** 				++i;
2455:src/keys.c    **** 				break;
2456:src/keys.c    **** 			}
2457:src/keys.c    **** 			if (diff > 0) {
2458:src/keys.c    **** 				// insert new entry before the one found because this is greater
2459:src/keys.c    **** 				break;
2460:src/keys.c    **** 			}
2461:src/keys.c    **** 		}
2462:src/keys.c    **** 		if (i < len) {
2463:src/keys.c    **** 			// Make room
2464:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2465:src/keys.c    **** 		}
2466:src/keys.c    **** 		UserCat[i] = op;
2467:src/keys.c    **** 		++len;
2468:src/keys.c    **** 	}
2469:src/keys.c    **** 	// return the number of entries
2470:src/keys.c    **** 	return len;
2471:src/keys.c    **** }
2472:src/keys.c    **** #endif
2473:src/keys.c    **** 
2474:src/keys.c    **** /* Return the number of entries in the current catalogue.
2475:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2476:src/keys.c    ****  * likely be the most space efficient method.
2477:src/keys.c    ****  */
2478:src/keys.c    **** int current_catalogue_max(void) {
2479:src/keys.c    **** 	// A quick table of catalogue sizes
2480:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2481:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2482:src/keys.c    **** 	{
2483:src/keys.c    **** 		0, // NONE
2484:src/keys.c    **** 		SIZE_catalogue,
2485:src/keys.c    **** 		SIZE_cplx_catalogue,
2486:src/keys.c    **** 		SIZE_stats_catalogue,
2487:src/keys.c    **** 		SIZE_prob_catalogue,
2488:src/keys.c    **** 		SIZE_int_catalogue,
2489:src/keys.c    **** 		SIZE_prog_catalogue,
ARM GAS  /tmp/ccF3vcso.s 			page 49


2490:src/keys.c    **** 		SIZE_program_xfcn,
2491:src/keys.c    **** 		SIZE_test_catalogue,
2492:src/keys.c    **** 		SIZE_mode_catalogue,
2493:src/keys.c    **** 		SIZE_alpha_catalogue,
2494:src/keys.c    **** 		SIZE_alpha_symbols,
2495:src/keys.c    **** 		SIZE_alpha_compares,
2496:src/keys.c    **** 		SIZE_alpha_arrows,
2497:src/keys.c    **** 		SIZE_alpha_letters,
2498:src/keys.c    **** 		SIZE_alpha_subscripts,
2499:src/keys.c    **** 		NUM_CONSTS_CAT,
2500:src/keys.c    **** 		NUM_CONSTS_CAT,
2501:src/keys.c    **** 		SIZE_conv_catalogue,
2502:src/keys.c    **** 		SIZE_sums_catalogue,
2503:src/keys.c    **** 		SIZE_matrix_catalogue,
2504:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2505:src/keys.c    **** 		SIZE_internal_catalogue,
2506:src/keys.c    **** #endif
2507:src/keys.c    **** 	};
2508:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2509:src/keys.c    **** 	const int cat = State2.catalogue;
2510:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2511:src/keys.c    **** #else
2512:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2513:src/keys.c    **** #endif
2514:src/keys.c    **** }
2515:src/keys.c    **** 
2516:src/keys.c    **** 
2517:src/keys.c    **** /* Look up the character position in the given byte array and
2518:src/keys.c    ****  * build the alpha op-code for it.
2519:src/keys.c    ****  */
2520:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2521:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2522:src/keys.c    **** }
2523:src/keys.c    **** 
2524:src/keys.c    **** 
2525:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2526:src/keys.c    ****  */
2527:src/keys.c    **** opcode current_catalogue(int n) {
2528:src/keys.c    **** 	// A quick table of catalogue tables
2529:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2530:src/keys.c    **** 	static const void *catalogues[] =
2531:src/keys.c    **** 	{
2532:src/keys.c    **** 		NULL, // NONE
2533:src/keys.c    **** 		catalogue,
2534:src/keys.c    **** 		cplx_catalogue,
2535:src/keys.c    **** 		stats_catalogue,
2536:src/keys.c    **** 		prob_catalogue,
2537:src/keys.c    **** 		int_catalogue,
2538:src/keys.c    **** 		prog_catalogue,
2539:src/keys.c    **** 		program_xfcn,
2540:src/keys.c    **** 		test_catalogue,
2541:src/keys.c    **** 		mode_catalogue,
2542:src/keys.c    **** 		alpha_catalogue,
2543:src/keys.c    **** 		alpha_symbols,
2544:src/keys.c    **** 		alpha_compares,
2545:src/keys.c    **** 		alpha_arrows,
2546:src/keys.c    **** 		alpha_letters,
ARM GAS  /tmp/ccF3vcso.s 			page 50


2547:src/keys.c    **** 		alpha_subscripts,
2548:src/keys.c    **** 		NULL,
2549:src/keys.c    **** 		NULL,
2550:src/keys.c    **** 		NULL, //CONV
2551:src/keys.c    **** 		sums_catalogue,
2552:src/keys.c    **** 		matrix_catalogue,
2553:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2554:src/keys.c    **** 		internal_catalogue,
2555:src/keys.c    **** #endif
2556:src/keys.c    **** 	};
2557:src/keys.c    **** 	const unsigned char *cat;
2558:src/keys.c    **** 	unsigned int c = State2.catalogue;
2559:src/keys.c    **** 	int m, i;
2560:src/keys.c    **** 	unsigned p, q;
2561:src/keys.c    **** 
2562:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2563:src/keys.c    **** 		if (n == OP_ZERO)
2564:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2565:src/keys.c    **** 		return CONST(n);
2566:src/keys.c    **** 	}
2567:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2568:src/keys.c    **** 		if (n == OP_ZERO)
2569:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2570:src/keys.c    **** 		return CONST_CMPLX(n);
2571:src/keys.c    **** 	}
2572:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2573:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2574:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2575:src/keys.c    **** 			// Monadic conversion routine
2576:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2577:src/keys.c    **** 		else
2578:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2579:src/keys.c    **** 	}
2580:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2581:src/keys.c    **** 	if (c == CATALOGUE_USER)
2582:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2583:src/keys.c    **** #endif
2584:src/keys.c    **** 
2585:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2586:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2587:src/keys.c    **** 	else
2588:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2589:src/keys.c    **** 
2590:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2591:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2592:src/keys.c    **** 	}
2593:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2594:src/keys.c    **** 		return OP_NIL | OP_NOP;
2595:src/keys.c    **** 
2596:src/keys.c    **** 	/* Unpack the opcode */
2597:src/keys.c    **** 	cat += n + (n >> 2);
2598:src/keys.c    **** 	p = cat[0];
2599:src/keys.c    **** 	q = cat[1];
2600:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2601:src/keys.c    **** 
2602:src/keys.c    **** 	/* Now figure out which opcode it really is */
2603:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
ARM GAS  /tmp/ccF3vcso.s 			page 51


2604:src/keys.c    **** 		if (m < opcode_breaks[i])
2605:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2606:src/keys.c    **** 		m -= opcode_breaks[i];
2607:src/keys.c    **** 	}
2608:src/keys.c    **** 	return RARG_BASEOP(m);
2609:src/keys.c    **** }
2610:src/keys.c    **** 
2611:src/keys.c    **** 
2612:src/keys.c    **** /*
2613:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2614:src/keys.c    ****  *  in multi character commands.
2615:src/keys.c    ****  */
2616:src/keys.c    **** static int forbidden_alpha(int pos) {
2617:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2618:src/keys.c    **** }
2619:src/keys.c    **** 
2620:src/keys.c    **** /*
2621:src/keys.c    ****  *  Catalogue navigation
2622:src/keys.c    ****  */
2623:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2624:src/keys.c    ****    int pos = State.catpos;
2625:src/keys.c    ****    int ch;
2626:src/keys.c    ****    const int ctmax = current_catalogue_max();
2627:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2628:src/keys.c    **** 
2629:src/keys.c    ****    if (shift == SHIFT_N) {
2630:src/keys.c    ****      switch (c) {
2631:src/keys.c    **** #ifdef DM42
2632:src/keys.c    ****      case K05:			// XEQ accepts command
2633:src/keys.c    **** #else	  
2634:src/keys.c    ****      case K30:			// XEQ accepts command
2635:src/keys.c    **** #endif						  
2636:src/keys.c    ****      case K20:			// Enter accepts command
2637:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2638:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2639:src/keys.c    **** 
2640:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2641:src/keys.c    **** 
2642:src/keys.c    **** 	 if (isRARG(op)) {
2643:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2644:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2645:src/keys.c    **** 	     return op;
2646:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2647:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2648:src/keys.c    **** 	   else
2649:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2650:src/keys.c    **** 	 }
2651:src/keys.c    **** 	 else {
2652:src/keys.c    **** 	   return check_confirm(op);
2653:src/keys.c    **** 	 }
2654:src/keys.c    ****        } else
2655:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2656:src/keys.c    ****        return STATE_UNFINISHED;
2657:src/keys.c    **** 
2658:src/keys.c    ****      case K24:			// backspace
2659:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2660:src/keys.c    **** 	 if (--CmdLineLength > 0)
ARM GAS  /tmp/ccF3vcso.s 			page 52


2661:src/keys.c    **** 	   goto search;
2662:src/keys.c    **** 	 pos = 0;
2663:src/keys.c    **** 	 goto set_pos;
2664:src/keys.c    ****        } else
2665:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2666:src/keys.c    ****        return STATE_UNFINISHED;
2667:src/keys.c    **** 
2668:src/keys.c    ****      case K60:
2669:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2670:src/keys.c    ****        return STATE_UNFINISHED;
2671:src/keys.c    **** 
2672:src/keys.c    ****      case K_UP:
2673:src/keys.c    ****        CmdLineLength = 0;
2674:src/keys.c    ****        if (pos == 0)
2675:src/keys.c    **** 	 goto set_max;
2676:src/keys.c    ****        else
2677:src/keys.c    **** 	 --pos;
2678:src/keys.c    ****        goto set_pos;
2679:src/keys.c    **** 
2680:src/keys.c    ****      case K_DOWN:
2681:src/keys.c    ****        CmdLineLength = 0;
2682:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2683:src/keys.c    ****        if (pos >= ctmax)
2684:src/keys.c    **** 	 pos = 0;
2685:src/keys.c    ****        goto set_pos;
2686:src/keys.c    **** 
2687:src/keys.c    ****      default:
2688:src/keys.c    ****        break;
2689:src/keys.c    ****      }
2690:src/keys.c    ****    } else if (shift == SHIFT_F) {
2691:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2692:src/keys.c    ****        /*
2693:src/keys.c    **** 	* f 1/x in conversion catalogue
2694:src/keys.c    **** 	*/
2695:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2696:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2697:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2698:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2699:src/keys.c    **** 	*/
2700:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2701:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2702:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2703:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2704:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2705:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2706:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2707:src/keys.c    ****        };
2708:src/keys.c    ****        const opcode op = current_catalogue(pos);
2709:src/keys.c    ****        int i;
2710:src/keys.c    **** 
2711:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2712:src/keys.c    ****        if (isRARG(op))
2713:src/keys.c    **** 	 return op ^ 1;
2714:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2715:src/keys.c    **** 	 if (op == conv_mapping[i])
2716:src/keys.c    **** 	   return conv_mapping[i^1];
2717:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
ARM GAS  /tmp/ccF3vcso.s 			page 53


2718:src/keys.c    ****      }
2719:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2720:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2721:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2722:src/keys.c    ****        return STATE_UNFINISHED;
2723:src/keys.c    ****      }
2724:src/keys.c    ****    } else if (shift == SHIFT_G) {
2725:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2726:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2727:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2728:src/keys.c    ****      }
2729:src/keys.c    ****    }
2730:src/keys.c    **** 
2731:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2732:src/keys.c    ****     * jump to the appropriate catalogue entry.
2733:src/keys.c    ****     */
2734:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2735:src/keys.c    ****    reset_shift();
2736:src/keys.c    ****    if (ch == '\0')
2737:src/keys.c    ****      return STATE_UNFINISHED;
2738:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2739:src/keys.c    ****      // No multi character search in alpha catalogues
2740:src/keys.c    ****      CmdLineLength = 0;
2741:src/keys.c    ****    }
2742:src/keys.c    ****    if (CmdLineLength < 10)
2743:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2744:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2745:src/keys.c    **** 
2746:src/keys.c    ****  search:
2747:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2748:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2749:src/keys.c    ****      char buf[16];
2750:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2751:src/keys.c    ****      int i;
2752:src/keys.c    **** 
2753:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2754:src/keys.c    ****        cmd++;
2755:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2756:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2757:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2758:src/keys.c    ****        if (c > cl)
2759:src/keys.c    **** 	 goto set_pos;
2760:src/keys.c    ****        else if (c < cl)
2761:src/keys.c    **** 	 break;
2762:src/keys.c    ****      }
2763:src/keys.c    ****      if (Cmdline[i] == '\0')
2764:src/keys.c    ****        goto set_pos;
2765:src/keys.c    ****    }
2766:src/keys.c    ****  set_max:
2767:src/keys.c    ****    pos = ctmax - 1;
2768:src/keys.c    ****  set_pos:
2769:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2770:src/keys.c    ****      --pos;
2771:src/keys.c    ****    State.catpos = pos;
2772:src/keys.c    ****    return STATE_UNFINISHED;
2773:src/keys.c    ****  }
2774:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 54


2775:src/keys.c    **** #ifndef REALBUILD
2776:src/keys.c    **** int find_pos(const char* text) {
2777:src/keys.c    **** 	int pos;
2778:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2779:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2780:src/keys.c    **** 		char buf[16];
2781:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2782:src/keys.c    **** 		int i;
2783:src/keys.c    **** 
2784:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2785:src/keys.c    **** 			cmd++;
2786:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2787:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2788:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2789:src/keys.c    **** 			if (c > cl)
2790:src/keys.c    **** 				return pos;
2791:src/keys.c    **** 			else if (c < cl)
2792:src/keys.c    **** 				break;
2793:src/keys.c    **** 		}
2794:src/keys.c    **** 		if (text[i] == '\0')
2795:src/keys.c    **** 			return pos;
2796:src/keys.c    **** 	}
2797:src/keys.c    **** 	return pos;
2798:src/keys.c    **** }
2799:src/keys.c    **** 
2800:src/keys.c    **** #endif
2801:src/keys.c    **** 
2802:src/keys.c    **** /* Multi (2) word instruction entry
2803:src/keys.c    ****  */
2804:src/keys.c    **** static void reset_multi(void) {
2805:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2806:src/keys.c    **** 	State2.multi = 0;
2807:src/keys.c    **** 	if (! State2.alphas )
2808:src/keys.c    **** 		State2.alphashift = 0;
2809:src/keys.c    **** }
2810:src/keys.c    **** 
2811:src/keys.c    **** static int process_multi(const keycode c) {
2812:src/keys.c    **** 	enum shifts shift = reset_shift();
2813:src/keys.c    **** 	unsigned int ch = 0;
2814:src/keys.c    **** 	unsigned int opcode;
2815:src/keys.c    **** 
2816:src/keys.c    **** 	if (State2.catalogue) {
2817:src/keys.c    **** 		// Alpha catalogue from within multi character command
2818:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2819:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2820:src/keys.c    **** 			return opcode;
2821:src/keys.c    **** 		ch = (unsigned char) opcode;
2822:src/keys.c    **** 		goto add_char;
2823:src/keys.c    **** 	}
2824:src/keys.c    **** 
2825:src/keys.c    **** 	switch (c) {
2826:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2827:src/keys.c    **** 		if (shift != SHIFT_N)
2828:src/keys.c    **** 				break;
2829:src/keys.c    **** 		reset_multi();
2830:src/keys.c    **** 		if (State2.numdigit == 0)
2831:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccF3vcso.s 			page 55


2832:src/keys.c    **** 		else if (State2.numdigit == 1)
2833:src/keys.c    **** 			State2.digval2 = 0;
2834:src/keys.c    **** 		goto fin;
2835:src/keys.c    **** 
2836:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2837:src/keys.c    **** 		if (shift != SHIFT_H) {
2838:src/keys.c    **** 			if (State2.numdigit == 0)
2839:src/keys.c    **** 				reset_multi();
2840:src/keys.c    **** 			else
2841:src/keys.c    **** 				State2.numdigit--;
2842:src/keys.c    **** 			return STATE_UNFINISHED;
2843:src/keys.c    **** 		}
2844:src/keys.c    **** 		break;
2845:src/keys.c    **** 
2846:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2847:src/keys.c    **** 		if (shift == SHIFT_F)
2848:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2849:src/keys.c    **** 		else
2850:src/keys.c    **** 			reset_multi();
2851:src/keys.c    **** 		return STATE_UNFINISHED;
2852:src/keys.c    **** 
2853:src/keys.c    **** 	default:
2854:src/keys.c    **** 		break;
2855:src/keys.c    **** 		}
2856:src/keys.c    **** 
2857:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2858:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2859:src/keys.c    **** 	if (ch == 0)
2860:src/keys.c    **** 		return STATE_UNFINISHED;
2861:src/keys.c    **** add_char:
2862:src/keys.c    **** 	if (State2.numdigit == 0) {
2863:src/keys.c    **** 		State2.digval = ch;
2864:src/keys.c    **** 		State2.numdigit = 1;
2865:src/keys.c    **** 		return STATE_UNFINISHED;
2866:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2867:src/keys.c    **** 		State2.digval2 = ch;
2868:src/keys.c    **** 		State2.numdigit = 2;
2869:src/keys.c    **** 		return STATE_UNFINISHED;
2870:src/keys.c    **** 	}
2871:src/keys.c    **** 	reset_multi();
2872:src/keys.c    **** 
2873:src/keys.c    **** fin:
2874:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2875:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2876:src/keys.c    **** 	return opcode;
2877:src/keys.c    **** }
2878:src/keys.c    **** 
2879:src/keys.c    **** 
2880:src/keys.c    **** /* Handle YES/NO confirmations
2881:src/keys.c    ****  */
2882:src/keys.c    **** static int process_confirm(const keycode c) {
2883:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2884:src/keys.c    **** 	switch (c) {
2885:src/keys.c    **** #ifdef DM42
2886:src/keys.c    **** 	case K52:
2887:src/keys.c    **** #endif
2888:src/keys.c    **** 	case K63:			// Yes
ARM GAS  /tmp/ccF3vcso.s 			page 56


2889:src/keys.c    **** 	  switch (State2.confirm) {
2890:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2891:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2892:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2893:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2894:src/keys.c    **** 	  }
2895:src/keys.c    **** 	case K24:
2896:src/keys.c    **** #ifdef DM42
2897:src/keys.c    **** 	case K22:
2898:src/keys.c    **** #else
2899:src/keys.c    **** 	case K32:
2900:src/keys.c    **** #endif
2901:src/keys.c    **** 	  // No
2902:src/keys.c    **** 	  State2.confirm = 0;
2903:src/keys.c    **** 	  State2.digval = 0;
2904:src/keys.c    **** 	  break;
2905:src/keys.c    **** 	default:			// No state change
2906:src/keys.c    **** 	  break;
2907:src/keys.c    **** 	}
2908:src/keys.c    **** 	return STATE_UNFINISHED;
2909:src/keys.c    **** }
2910:src/keys.c    **** 
2911:src/keys.c    **** 
2912:src/keys.c    **** /*
2913:src/keys.c    ****  *  STATUS
2914:src/keys.c    ****  */
2915:src/keys.c    **** static int process_status(const keycode c) {
2916:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2917:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2918:src/keys.c    **** 
2919:src/keys.c    **** 	if (c == K_UP) {
2920:src/keys.c    **** 		if (--n < -2)
2921:src/keys.c    **** 			n = max;
2922:src/keys.c    **** 	}
2923:src/keys.c    **** 	else if (c == K_DOWN) {
2924:src/keys.c    **** 		if (++n > max)
2925:src/keys.c    **** 			n = -2;
2926:src/keys.c    **** 	}
2927:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2928:src/keys.c    **** 		State2.status = 0;
2929:src/keys.c    **** 		return STATE_UNFINISHED;
2930:src/keys.c    **** 	} 
2931:src/keys.c    **** 	else {
2932:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2933:src/keys.c    **** 		if (nn <= 9)
2934:src/keys.c    **** 			n = nn;
2935:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2936:src/keys.c    **** 			n = n == max ? 10 : max;
2937:src/keys.c    **** 		else if (nn != NO_REG)
2938:src/keys.c    **** 			n = 10; 
2939:src/keys.c    **** 	}
2940:src/keys.c    **** 	State2.status = n + 3;
2941:src/keys.c    **** 
2942:src/keys.c    **** 	return STATE_UNFINISHED;
2943:src/keys.c    **** }
2944:src/keys.c    **** 
2945:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 57


2946:src/keys.c    **** /*
2947:src/keys.c    ****  *  CAT helper
2948:src/keys.c    ****  */
2949:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2949 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2950:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2950 2 view .LVU58
2949:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2949 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2949:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2949 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2950 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2951:src/keys.c    **** 
2952:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2952 2 is_stmt 1 view .LVU62
 234              		.loc 1 2952 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2952 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2952 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2952 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2953:src/keys.c    **** }
 245              		.loc 1 2953 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2952:src/keys.c    **** }
 249              		.loc 1 2952 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2953 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2952:src/keys.c    **** }
 256              		.loc 1 2952 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2952:src/keys.c    **** }
 259              		.loc 1 2952 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
ARM GAS  /tmp/ccF3vcso.s 			page 58


 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2953 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2953 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2954:src/keys.c    **** 
2955:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2955 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2955 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2955 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2956:src/keys.c    **** 	do {
 294              		.loc 1 2956 2 is_stmt 1 view .LVU77
2957:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2957 3 view .LVU78
2958:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2958 4 view .LVU79
2955:src/keys.c    **** 	do {
 297              		.loc 1 2955 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2958 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2959:src/keys.c    **** 				pc = do_inc(pc, 0);
2960:src/keys.c    **** 				if (PcWrapped)
2961:src/keys.c    **** 					break;
2962:src/keys.c    **** 			}
2963:src/keys.c    **** 			else
2964:src/keys.c    **** 				inc = 1;
2965:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2965 4 is_stmt 1 view .LVU82
 304              		.loc 1 2965 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2965 8 view .LVU84
ARM GAS  /tmp/ccF3vcso.s 			page 59


 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2965 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2965 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2959:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2959 5 is_stmt 1 view .LVU87
2959:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2959 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2960:src/keys.c    **** 					break;
 323              		.loc 1 2960 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2959:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2959 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2960:src/keys.c    **** 					break;
 328              		.loc 1 2960 5 is_stmt 1 view .LVU91
2960:src/keys.c    **** 					break;
 329              		.loc 1 2960 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2966:src/keys.c    **** 				return pc;
2967:src/keys.c    **** 			}
2968:src/keys.c    **** 		}
2969:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2969 3 is_stmt 1 view .LVU93
 333              		.loc 1 2969 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2969 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2970:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2970 10 is_stmt 1 view .LVU96
 342              		.loc 1 2970 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2970 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2971:src/keys.c    **** 	return pc;
2972:src/keys.c    **** }
 351              		.loc 1 2972 1 view .LVU99
ARM GAS  /tmp/ccF3vcso.s 			page 60


 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2972 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
ARM GAS  /tmp/ccF3vcso.s 			page 61


 400              		.loc 1 568 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB307:
 432              	.LBI307:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE307:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB324:
 438              	.LBB308:
ARM GAS  /tmp/ccF3vcso.s 			page 62


 439              	.LBI308:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB309:
 105:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 105 2 view .LVU131
 443              	.LBB310:
 444              	.LBI310:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB311:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE311:
 453              	.LBE310:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE309:
 462              	.LBE308:
 463              	.LBE324:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
ARM GAS  /tmp/ccF3vcso.s 			page 63


 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB325:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE325:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB326:
 505              	.LBB321:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB318:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB315:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB312:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
ARM GAS  /tmp/ccF3vcso.s 			page 64


 517              	.LBE312:
 518              	.LBE315:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE318:
 527              	.LBE321:
 528              	.LBE326:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB327:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
ARM GAS  /tmp/ccF3vcso.s 			page 65


 557              		.loc 1 114 13 view .LVU182
 558              	.LBE327:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
 561              	.LBB328:
 562              	.LBB322:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB319:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB316:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB313:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE313:
 575              	.LBE316:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE319:
 584              	.LBE322:
 585              	.LBE328:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
ARM GAS  /tmp/ccF3vcso.s 			page 66


 597 0094 6422     		movs	r2, #100
 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB329:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE329:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB330:
 612              	.LBB323:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB320:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB317:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB314:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE314:
 625              	.LBE317:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE320:
 634              	.LBE323:
 635              	.LBE330:
ARM GAS  /tmp/ccF3vcso.s 			page 67


 610:src/keys.c    **** 
 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
ARM GAS  /tmp/ccF3vcso.s 			page 68


 676              		.loc 1 600 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2973:src/keys.c    **** 
2974:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2974 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2974 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2974 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2975:src/keys.c    **** 	do {
 717              		.loc 1 2975 2 is_stmt 1 view .LVU239
2976:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2976 3 view .LVU240
2977:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2977 4 view .LVU241
 720              		.loc 1 2977 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2978:src/keys.c    **** 			if (PcWrapped)
2979:src/keys.c    **** 				break;
2980:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2980 4 is_stmt 1 view .LVU243
ARM GAS  /tmp/ccF3vcso.s 			page 69


2981:src/keys.c    **** 				return pc;
2982:src/keys.c    **** 			}
2983:src/keys.c    **** 		}
2984:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2984 3 view .LVU244
 727              		.loc 1 2984 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2978:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2978 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2984 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2985:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2985 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2977:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2977 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2978:src/keys.c    **** 				break;
 739              		.loc 1 2978 4 is_stmt 1 view .LVU250
2984:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2984 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2985 3 is_stmt 1 view .LVU252
2978:src/keys.c    **** 				break;
 744              		.loc 1 2978 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2980:src/keys.c    **** 				return pc;
 746              		.loc 1 2980 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2980:src/keys.c    **** 				return pc;
 750              		.loc 1 2980 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2986:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2987:src/keys.c    **** 	return pc;
2988:src/keys.c    **** }
 753              		.loc 1 2988 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2985 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2986:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2986 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2985 8 view .LVU259
ARM GAS  /tmp/ccF3vcso.s 			page 70


 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2986:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2986 10 is_stmt 1 view .LVU260
2986:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2986 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2986:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2986 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2988 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2988 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 716 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB331:
 718:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 718 3 view .LVU266
 718:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 804              		.loc 1 718 13 is_stmt 0 view .LVU267
 805 0000 C3B2     		uxtb	r3, r0
 806              	.LVL64:
 719:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 719 3 is_stmt 1 view .LVU268
 719:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 808              		.loc 1 719 25 is_stmt 0 view .LVU269
 809 0002 A3F14102 		sub	r2, r3, #65
 719:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 810              		.loc 1 719 6 view .LVU270
 811 0006 032A     		cmp	r2, #3
 812 0008 0AD9     		bls	.L76
 727:src/keys.c    **** #endif
 813              		.loc 1 727 7 is_stmt 1 view .LVU271
ARM GAS  /tmp/ccF3vcso.s 			page 71


 727:src/keys.c    **** #endif
 814              		.loc 1 727 29 is_stmt 0 view .LVU272
 815 000a A3F1AD02 		sub	r2, r3, #173
 727:src/keys.c    **** #endif
 816              		.loc 1 727 10 view .LVU273
 817 000e 052A     		cmp	r2, #5
 818 0010 03D8     		bhi	.L77
 819              	.L74:
 737:src/keys.c    **** 		}
 820              		.loc 1 737 4 is_stmt 1 view .LVU274
 737:src/keys.c    **** 		}
 821              		.loc 1 737 20 is_stmt 0 view .LVU275
 822 0012 074B     		ldr	r3, .L78
 823              	.LVL65:
 737:src/keys.c    **** 		}
 824              		.loc 1 737 20 view .LVU276
 825 0014 0122     		movs	r2, #1
 826              	.LVL66:
 737:src/keys.c    **** 		}
 827              		.loc 1 737 20 view .LVU277
 828 0016 1A60     		str	r2, [r3]
 829              	.LBE331:
 741:src/keys.c    **** 
 830              		.loc 1 741 1 view .LVU278
 831 0018 7047     		bx	lr
 832              	.LVL67:
 833              	.L77:
 834              	.LBB332:
 730:src/keys.c    **** #endif
 835              		.loc 1 730 4 view .LVU279
 836 001a BC2B     		cmp	r3, #188
 837 001c F9D0     		beq	.L74
 838              	.LBE332:
 741:src/keys.c    **** 
 839              		.loc 1 741 1 view .LVU280
 840 001e 7047     		bx	lr
 841              	.L76:
 842              	.LBB333:
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 843              		.loc 1 720 4 is_stmt 1 view .LVU281
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 844              		.loc 1 720 19 is_stmt 0 view .LVU282
 845 0020 044B     		ldr	r3, .L78+4
 846              	.LVL68:
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 847              		.loc 1 720 19 view .LVU283
 848 0022 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 849              	.LVL69:
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 850              		.loc 1 720 35 view .LVU284
 851 0024 4038     		subs	r0, r0, #64
 852              	.LVL70:
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 853              		.loc 1 720 19 view .LVU285
 854 0026 60F30202 		bfi	r2, r0, #0, #3
 855 002a 1A75     		strb	r2, [r3, #20]
 721:src/keys.c    **** 		}
ARM GAS  /tmp/ccF3vcso.s 			page 72


 856              		.loc 1 721 4 is_stmt 1 view .LVU286
 721:src/keys.c    **** 		}
 857              		.loc 1 721 11 is_stmt 0 view .LVU287
 858 002c 3320     		movs	r0, #51
 859              	.LVL71:
 721:src/keys.c    **** 		}
 860              		.loc 1 721 11 view .LVU288
 861 002e 7047     		bx	lr
 862              	.L79:
 863              		.align	2
 864              	.L78:
 865 0030 00000000 		.word	NonProgrammable
 866 0034 00000000 		.word	StateWhileOn
 867              	.LBE333:
 868              		.cfi_endproc
 869              	.LFE64:
 871              		.section	.text.init_arg.part.0,"ax",%progbits
 872              		.align	1
 873              		.p2align 2,,3
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	init_arg.part.0:
 880              	.LVL72:
 881              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 882              		.loc 1 552 13 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 887              		.loc 1 555 2 view .LVU290
 555:src/keys.c    **** 	State2.ind = 0;
 888              		.loc 1 555 10 is_stmt 0 view .LVU291
 889 0000 084B     		ldr	r3, .L81
 560:src/keys.c    **** 	State2.local = 0;
 890              		.loc 1 560 13 view .LVU292
 891 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 892              		.loc 1 555 10 view .LVU293
 893 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 894              		.loc 1 556 2 is_stmt 1 view .LVU294
 557:src/keys.c    **** 	State2.numdigit = 0;
 895              		.loc 1 557 2 view .LVU295
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 13 is_stmt 0 view .LVU296
 897 0006 21F40F11 		bic	r1, r1, #2342912
 898 000a 8628     		cmp	r0, #134
 899 000c 0CBF     		ite	eq
 900 000e 4FF40812 		moveq	r2, #2228224
 901 0012 4FF40012 		movne	r2, #2097152
 902 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 903              		.loc 1 557 16 view .LVU297
ARM GAS  /tmp/ccF3vcso.s 			page 73


 904 0018 0021     		movs	r1, #0
 560:src/keys.c    **** 	State2.local = 0;
 905              		.loc 1 560 13 view .LVU298
 906 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 907              		.loc 1 557 16 view .LVU299
 908 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 909              		.loc 1 558 2 is_stmt 1 view .LVU300
 558:src/keys.c    **** 	State2.rarg = 1;
 910              		.loc 1 558 18 is_stmt 0 view .LVU301
 911 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 912              		.loc 1 559 2 is_stmt 1 view .LVU302
 560:src/keys.c    **** 	State2.local = 0;
 913              		.loc 1 560 2 view .LVU303
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 914              		.loc 1 561 2 view .LVU304
 562:src/keys.c    **** }
 915              		.loc 1 562 2 view .LVU305
 563:src/keys.c    **** 
 916              		.loc 1 563 1 is_stmt 0 view .LVU306
 917 0020 7047     		bx	lr
 918              	.L82:
 919 0022 00BF     		.align	2
 920              	.L81:
 921 0024 00000000 		.word	StateWhileOn
 922              		.cfi_endproc
 923              	.LFE66:
 925              		.section	.text.reset_arg,"ax",%progbits
 926              		.align	1
 927              		.p2align 2,,3
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 931              		.fpu fpv4-sp-d16
 933              	reset_arg:
 934              	.LFB34:
1900:src/keys.c    **** 	init_arg((enum rarg) 0);
 935              		.loc 1 1900 29 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
1901:src/keys.c    **** 	State2.rarg = 0;
 939              		.loc 1 1901 2 view .LVU308
 940              	.LVL73:
 941              	.LBB334:
 942              	.LBI334:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 943              		.loc 1 552 13 view .LVU309
 944              	.LBB335:
 553:src/keys.c    **** 		return;
 945              		.loc 1 553 2 view .LVU310
 946              	.LBE335:
 947              	.LBE334:
1900:src/keys.c    **** 	init_arg((enum rarg) 0);
 948              		.loc 1 1900 29 is_stmt 0 view .LVU311
ARM GAS  /tmp/ccF3vcso.s 			page 74


 949 0000 08B5     		push	{r3, lr}
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 3, -8
 952              		.cfi_offset 14, -4
 953              	.LBB337:
 954              	.LBB336:
 553:src/keys.c    **** 		return;
 955              		.loc 1 553 6 view .LVU312
 956 0002 FFF7FEFF 		bl	is_bad_cmdline
 957              	.LVL74:
 553:src/keys.c    **** 		return;
 958              		.loc 1 553 5 view .LVU313
 959 0006 08B9     		cbnz	r0, .L84
 960 0008 FFF7FEFF 		bl	init_arg.part.0
 961              	.LVL75:
 962              	.L84:
 553:src/keys.c    **** 		return;
 963              		.loc 1 553 5 view .LVU314
 964              	.LBE336:
 965              	.LBE337:
1902:src/keys.c    **** }
 966              		.loc 1 1902 2 is_stmt 1 view .LVU315
1902:src/keys.c    **** }
 967              		.loc 1 1902 14 is_stmt 0 view .LVU316
 968 000c 024B     		ldr	r3, .L86
 969 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 970 0010 6FF34512 		bfc	r2, #5, #1
 971 0014 9A75     		strb	r2, [r3, #22]
1903:src/keys.c    **** 
 972              		.loc 1 1903 1 view .LVU317
 973 0016 08BD     		pop	{r3, pc}
 974              	.L87:
 975              		.align	2
 976              	.L86:
 977 0018 00000000 		.word	StateWhileOn
 978              		.cfi_endproc
 979              	.LFE34:
 981              		.section	.text.arg_eval,"ax",%progbits
 982              		.align	1
 983              		.p2align 2,,3
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
 989              	arg_eval:
 990              	.LVL76:
 991              	.LFB35:
1905:src/keys.c    ****    const unsigned int base = CmdBase;
 992              		.loc 1 1905 40 is_stmt 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
1906:src/keys.c    ****    int r = RARG(base, val 
 996              		.loc 1 1906 4 view .LVU319
1905:src/keys.c    ****    const unsigned int base = CmdBase;
 997              		.loc 1 1905 40 is_stmt 0 view .LVU320
 998 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccF3vcso.s 			page 75


 999              		.cfi_def_cfa_offset 24
 1000              		.cfi_offset 3, -24
 1001              		.cfi_offset 4, -20
 1002              		.cfi_offset 5, -16
 1003              		.cfi_offset 6, -12
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
1906:src/keys.c    ****    int r = RARG(base, val 
 1006              		.loc 1 1906 30 view .LVU321
 1007 0002 234B     		ldr	r3, .L112
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1008              		.loc 1 1907 12 view .LVU322
 1009 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 1010 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1906:src/keys.c    ****    int r = RARG(base, val 
 1011              		.loc 1 1906 23 view .LVU323
 1012 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 1013              	.LVL77:
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1014              		.loc 1 1907 4 is_stmt 1 view .LVU324
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1907 12 is_stmt 0 view .LVU325
 1016 000a EE07     		lsls	r6, r5, #31
1910:src/keys.c    **** 
 1017              		.loc 1 1910 34 view .LVU326
 1018 000c 214E     		ldr	r6, .L112+4
 1019 000e 3668     		ldr	r6, [r6]
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1020              		.loc 1 1907 12 view .LVU327
 1021 0010 01F08003 		and	r3, r1, #128
1910:src/keys.c    **** 
 1022              		.loc 1 1910 32 view .LVU328
 1023 0014 96F8EA77 		ldrb	r7, [r6, #2026]	@ zero_extendqisi2
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1024              		.loc 1 1907 12 view .LVU329
 1025 0018 0344     		add	r3, r3, r0
 1026 001a 02F12004 		add	r4, r2, #32
 1027 001e 48BF     		it	mi
 1028 0020 7033     		addmi	r3, r3, #112
 1029 0022 2402     		lsls	r4, r4, #8
1910:src/keys.c    **** 
 1030              		.loc 1 1910 79 view .LVU330
 1031 0024 3F07     		lsls	r7, r7, #28
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1032              		.loc 1 1907 12 view .LVU331
 1033 0026 44EA0304 		orr	r4, r4, r3
 1034              	.LVL78:
1910:src/keys.c    **** 
 1035              		.loc 1 1910 4 is_stmt 1 view .LVU332
1910:src/keys.c    **** 
 1036              		.loc 1 1910 79 is_stmt 0 view .LVU333
 1037 002a 25D5     		bpl	.L95
1910:src/keys.c    **** 
 1038              		.loc 1 1910 79 discriminator 2 view .LVU334
 1039 002c 15F0400F 		tst	r5, #64
 1040 0030 0CBF     		ite	eq
 1041 0032 0425     		moveq	r5, #4
ARM GAS  /tmp/ccF3vcso.s 			page 76


 1042 0034 0825     		movne	r5, #8
 1043              	.L90:
 1044              	.LVL79:
1912:src/keys.c    ****      /*
 1045              		.loc 1 1912 4 is_stmt 1 discriminator 6 view .LVU335
1912:src/keys.c    ****      /*
 1046              		.loc 1 1912 7 is_stmt 0 discriminator 6 view .LVU336
 1047 0036 0B06     		lsls	r3, r1, #24
 1048 0038 1AD4     		bmi	.L91
1928:src/keys.c    ****        if (C_LOCKED) {
 1049              		.loc 1 1928 6 is_stmt 1 view .LVU337
1928:src/keys.c    ****        if (C_LOCKED) {
 1050              		.loc 1 1928 23 is_stmt 0 view .LVU338
 1051 003a 174B     		ldr	r3, .L112+8
 1052 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1053 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1928:src/keys.c    ****        if (C_LOCKED) {
 1054              		.loc 1 1928 9 view .LVU339
 1055 0042 DF06     		lsls	r7, r3, #27
 1056 0044 10D5     		bpl	.L92
1928:src/keys.c    ****        if (C_LOCKED) {
 1057              		.loc 1 1928 55 discriminator 1 view .LVU340
 1058 0046 96F8AC37 		ldrb	r3, [r6, #1964]	@ zero_extendqisi2
 1059 004a 03F04103 		and	r3, r3, #65
1928:src/keys.c    ****        if (C_LOCKED) {
 1060              		.loc 1 1928 40 discriminator 1 view .LVU341
 1061 004e 412B     		cmp	r3, #65
 1062 0050 0CBF     		ite	eq
 1063 0052 0021     		moveq	r1, #0
 1064 0054 6221     		movne	r1, #98
1928:src/keys.c    ****        if (C_LOCKED) {
 1065              		.loc 1 1928 30 discriminator 1 view .LVU342
 1066 0056 8142     		cmp	r1, r0
 1067 0058 06D2     		bcs	.L92
1928:src/keys.c    ****        if (C_LOCKED) {
 1068              		.loc 1 1928 86 discriminator 6 view .LVU343
 1069 005a C107     		lsls	r1, r0, #31
 1070 005c 04D5     		bpl	.L92
1929:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1071              		.loc 1 1929 8 is_stmt 1 view .LVU344
1929:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1072              		.loc 1 1929 11 is_stmt 0 view .LVU345
 1073 005e 412B     		cmp	r3, #65
 1074 0060 11D0     		beq	.L110
 1075              	.LVL80:
 1076              	.L99:
1934:src/keys.c    ****        }
 1077              		.loc 1 1934 10 view .LVU346
 1078 0062 3324     		movs	r4, #51
 1079              	.LVL81:
1949:src/keys.c    **** 
 1080              		.loc 1 1949 2 view .LVU347
 1081 0064 2046     		mov	r0, r4
 1082              	.LVL82:
1949:src/keys.c    **** 
 1083              		.loc 1 1949 2 view .LVU348
 1084 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccF3vcso.s 			page 77


 1085              	.LVL83:
 1086              	.L92:
1942:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1087              		.loc 1 1942 6 is_stmt 1 view .LVU349
1942:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1088              		.loc 1 1942 31 is_stmt 0 view .LVU350
 1089 0068 A2F12203 		sub	r3, r2, #34
1942:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1090              		.loc 1 1942 9 view .LVU351
 1091 006c 012B     		cmp	r3, #1
 1092 006e 05D9     		bls	.L111
 1093              	.LVL84:
 1094              	.L91:
1947:src/keys.c    ****    return r;
 1095              		.loc 1 1947 4 is_stmt 1 view .LVU352
 1096 0070 FFF7FEFF 		bl	reset_arg
 1097              	.LVL85:
1948:src/keys.c    ****  }
 1098              		.loc 1 1948 4 view .LVU353
 1099              	.L88:
1949:src/keys.c    **** 
 1100              		.loc 1 1949 2 is_stmt 0 view .LVU354
 1101 0074 2046     		mov	r0, r4
 1102 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1103              	.LVL86:
 1104              	.L95:
1910:src/keys.c    **** 
 1105              		.loc 1 1910 79 view .LVU355
 1106 0078 0425     		movs	r5, #4
 1107 007a DCE7     		b	.L90
 1108              	.LVL87:
 1109              	.L111:
1942:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1110              		.loc 1 1942 76 discriminator 1 view .LVU356
 1111 007c C5F16405 		rsb	r5, r5, #100
 1112              	.LVL88:
1942:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1113              		.loc 1 1942 55 discriminator 1 view .LVU357
 1114 0080 8542     		cmp	r5, r0
 1115 0082 F5D2     		bcs	.L91
 1116 0084 EDE7     		b	.L99
 1117              	.LVL89:
 1118              	.L110:
1930:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1119              		.loc 1 1930 3 is_stmt 1 view .LVU358
 1120 0086 1920     		movs	r0, #25
 1121              	.LVL90:
1930:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1122              		.loc 1 1930 3 is_stmt 0 view .LVU359
 1123 0088 FFF7FEFF 		bl	error_message
 1124              	.LVL91:
1931:src/keys.c    ****        }
 1125              		.loc 1 1931 3 is_stmt 1 view .LVU360
1931:src/keys.c    ****        }
 1126              		.loc 1 1931 10 is_stmt 0 view .LVU361
 1127 008c 3324     		movs	r4, #51
 1128              	.LVL92:
ARM GAS  /tmp/ccF3vcso.s 			page 78


1931:src/keys.c    ****        }
 1129              		.loc 1 1931 10 view .LVU362
 1130 008e F1E7     		b	.L88
 1131              	.L113:
 1132              		.align	2
 1133              	.L112:
 1134 0090 00000000 		.word	StateWhileOn
 1135 0094 00000000 		.word	main_ram
 1136 0098 00000000 		.word	argcmds
 1137              		.cfi_endproc
 1138              	.LFE35:
 1140              		.section	.text.arg_digit,"ax",%progbits
 1141              		.align	1
 1142              		.p2align 2,,3
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu fpv4-sp-d16
 1148              	arg_digit:
 1149              	.LVL93:
 1150              	.LFB36:
1951:src/keys.c    **** 	int lim;
 1151              		.loc 1 1951 29 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 8
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
1952:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1155              		.loc 1 1952 2 view .LVU364
1954:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1156              		.loc 1 1954 2 view .LVU365
1951:src/keys.c    **** 	int lim;
 1157              		.loc 1 1951 29 is_stmt 0 view .LVU366
 1158 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1159              		.cfi_def_cfa_offset 20
 1160              		.cfi_offset 4, -20
 1161              		.cfi_offset 5, -16
 1162              		.cfi_offset 6, -12
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
1955:src/keys.c    **** #else
 1165              		.loc 1 1955 29 view .LVU367
 1166 0002 3C4D     		ldr	r5, .L149
1951:src/keys.c    **** 	int lim;
 1167              		.loc 1 1951 29 view .LVU368
 1168 0004 83B0     		sub	sp, sp, #12
 1169              		.cfi_def_cfa_offset 32
1951:src/keys.c    **** 	int lim;
 1170              		.loc 1 1951 29 view .LVU369
 1171 0006 0446     		mov	r4, r0
1954:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1172              		.loc 1 1954 17 view .LVU370
 1173 0008 01A8     		add	r0, sp, #4
 1174              	.LVL94:
1954:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1175              		.loc 1 1954 17 view .LVU371
 1176 000a FFF7FEFF 		bl	get_dispmode_digs
 1177              	.LVL95:
ARM GAS  /tmp/ccF3vcso.s 			page 79


1955:src/keys.c    **** #else
 1178              		.loc 1 1955 29 view .LVU372
 1179 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1180              	.LVL96:
1955:src/keys.c    **** #else
 1181              		.loc 1 1955 2 is_stmt 1 view .LVU373
 1182 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1955:src/keys.c    **** #else
 1183              		.loc 1 1955 130 is_stmt 0 view .LVU374
 1184 0012 11F0400C 		ands	ip, r1, #64
 1185 0016 01D0     		beq	.L117
1955:src/keys.c    **** #else
 1186              		.loc 1 1955 44 discriminator 2 view .LVU375
 1187 0018 502E     		cmp	r6, #80
 1188 001a 5DD0     		beq	.L144
 1189              	.LVL97:
 1190              	.L117:
1959:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1191              		.loc 1 1959 2 is_stmt 1 discriminator 8 view .LVU376
1960:src/keys.c    **** 	
 1192              		.loc 1 1960 34 is_stmt 0 discriminator 8 view .LVU377
 1193 001c 364A     		ldr	r2, .L149+4
1959:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1194              		.loc 1 1959 33 discriminator 8 view .LVU378
 1195 001e 2B89     		ldrh	r3, [r5, #8]
1960:src/keys.c    **** 	
 1196              		.loc 1 1960 34 discriminator 8 view .LVU379
 1197 0020 02EB0612 		add	r2, r2, r6, lsl #4
1959:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1198              		.loc 1 1959 41 discriminator 8 view .LVU380
 1199 0024 03EB8303 		add	r3, r3, r3, lsl #2
1960:src/keys.c    **** 	
 1200              		.loc 1 1960 34 discriminator 8 view .LVU381
 1201 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1960:src/keys.c    **** 	
 1202              		.loc 1 1960 39 discriminator 8 view .LVU382
 1203 002a B807     		lsls	r0, r7, #30
1959:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1204              		.loc 1 1959 46 discriminator 8 view .LVU383
 1205 002c 04EB4304 		add	r4, r4, r3, lsl #1
 1206              	.LVL98:
1960:src/keys.c    **** 	
 1207              		.loc 1 1960 2 is_stmt 1 discriminator 8 view .LVU384
1960:src/keys.c    **** 	
 1208              		.loc 1 1960 39 is_stmt 0 discriminator 8 view .LVU385
 1209 0030 C7F34003 		ubfx	r3, r7, #1, #1
 1210 0034 2AD4     		bmi	.L143
1960:src/keys.c    **** 	
 1211              		.loc 1 1960 39 discriminator 2 view .LVU386
 1212 0036 95F91500 		ldrsb	r0, [r5, #21]
 1213 003a 0028     		cmp	r0, #0
 1214 003c 26DB     		blt	.L143
 1215              	.LVL99:
1962:src/keys.c    **** 		// Handle local registers and flags
 1216              		.loc 1 1962 2 is_stmt 1 view .LVU387
1962:src/keys.c    **** 		// Handle local registers and flags
 1217              		.loc 1 1962 5 is_stmt 0 view .LVU388
ARM GAS  /tmp/ccF3vcso.s 			page 80


 1218 003e C907     		lsls	r1, r1, #31
 1219 0040 27D4     		bmi	.L119
1975:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1220              		.loc 1 1975 7 is_stmt 1 view .LVU389
1978:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1221              		.loc 1 1978 3 view .LVU390
1978:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1222              		.loc 1 1978 9 is_stmt 0 view .LVU391
 1223 0042 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1978:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1224              		.loc 1 1978 7 view .LVU392
 1225 0044 0190     		str	r0, [sp, #4]
1979:src/keys.c    **** 			lim = RARG_IND - 1;
 1226              		.loc 1 1979 3 is_stmt 1 view .LVU393
1979:src/keys.c    **** 			lim = RARG_IND - 1;
 1227              		.loc 1 1979 6 is_stmt 0 view .LVU394
 1228 0046 7F28     		cmp	r0, #127
 1229 0048 4BDC     		bgt	.L145
 1230              	.LVL100:
 1231              	.L123:
1982:src/keys.c    **** 		return STATE_UNFINISHED;
 1232              		.loc 1 1982 2 is_stmt 1 view .LVU395
1982:src/keys.c    **** 		return STATE_UNFINISHED;
 1233              		.loc 1 1982 5 is_stmt 0 view .LVU396
 1234 004a 8442     		cmp	r4, r0
 1235 004c 3FDC     		bgt	.L128
 1236              	.L148:
1985:src/keys.c    **** 	++State2.numdigit;
 1237              		.loc 1 1985 2 is_stmt 1 view .LVU397
1986:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1238              		.loc 1 1986 2 is_stmt 0 view .LVU398
 1239 004e EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1985:src/keys.c    **** 	++State2.numdigit;
 1240              		.loc 1 1985 16 view .LVU399
 1241 0050 2C81     		strh	r4, [r5, #8]	@ movhi
1986:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1242              		.loc 1 1986 2 is_stmt 1 view .LVU400
 1243 0052 0137     		adds	r7, r7, #1
1987:src/keys.c    **** 		int result = arg_eval(val);
 1244              		.loc 1 1987 16 is_stmt 0 view .LVU401
 1245 0054 04EB8403 		add	r3, r4, r4, lsl #2
1986:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1246              		.loc 1 1986 2 view .LVU402
 1247 0058 FFB2     		uxtb	r7, r7
1987:src/keys.c    **** 		int result = arg_eval(val);
 1248              		.loc 1 1987 5 view .LVU403
 1249 005a B0EB430F 		cmp	r0, r3, lsl #1
1986:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1250              		.loc 1 1986 2 view .LVU404
 1251 005e EF72     		strb	r7, [r5, #11]
1987:src/keys.c    **** 		int result = arg_eval(val);
 1252              		.loc 1 1987 2 is_stmt 1 view .LVU405
1987:src/keys.c    **** 		int result = arg_eval(val);
 1253              		.loc 1 1987 5 is_stmt 0 view .LVU406
 1254 0060 04DB     		blt	.L131
1987:src/keys.c    **** 		int result = arg_eval(val);
 1255              		.loc 1 1987 49 discriminator 1 view .LVU407
ARM GAS  /tmp/ccF3vcso.s 			page 81


 1256 0062 3046     		mov	r0, r6
 1257 0064 FFF7FEFF 		bl	num_arg_digits
 1258              	.LVL101:
1987:src/keys.c    **** 		int result = arg_eval(val);
 1259              		.loc 1 1987 27 discriminator 1 view .LVU408
 1260 0068 8742     		cmp	r7, r0
 1261 006a 30DB     		blt	.L128
 1262              	.L131:
 1263              	.LBB338:
1988:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1264              		.loc 1 1988 3 is_stmt 1 view .LVU409
1988:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1265              		.loc 1 1988 16 is_stmt 0 view .LVU410
 1266 006c 2046     		mov	r0, r4
 1267 006e FFF7FEFF 		bl	arg_eval
 1268              	.LVL102:
1989:src/keys.c    **** 			--State2.numdigit;
 1269              		.loc 1 1989 3 is_stmt 1 view .LVU411
1989:src/keys.c    **** 			--State2.numdigit;
 1270              		.loc 1 1989 6 is_stmt 0 view .LVU412
 1271 0072 3328     		cmp	r0, #51
 1272 0074 08D1     		bne	.L114
1990:src/keys.c    **** 			State2.digval /= 10;
 1273              		.loc 1 1990 4 is_stmt 1 view .LVU413
1991:src/keys.c    **** 		}
 1274              		.loc 1 1991 18 is_stmt 0 view .LVU414
 1275 0076 2B89     		ldrh	r3, [r5, #8]
 1276 0078 2049     		ldr	r1, .L149+8
1990:src/keys.c    **** 			State2.digval /= 10;
 1277              		.loc 1 1990 4 view .LVU415
 1278 007a EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1991:src/keys.c    **** 		}
 1279              		.loc 1 1991 18 view .LVU416
 1280 007c A1FB0313 		umull	r1, r3, r1, r3
 1281 0080 DB08     		lsrs	r3, r3, #3
1990:src/keys.c    **** 			State2.digval /= 10;
 1282              		.loc 1 1990 4 view .LVU417
 1283 0082 013A     		subs	r2, r2, #1
1991:src/keys.c    **** 		}
 1284              		.loc 1 1991 18 view .LVU418
 1285 0084 2B81     		strh	r3, [r5, #8]	@ movhi
1990:src/keys.c    **** 			State2.digval /= 10;
 1286              		.loc 1 1990 4 view .LVU419
 1287 0086 EA72     		strb	r2, [r5, #11]
1991:src/keys.c    **** 		}
 1288              		.loc 1 1991 4 is_stmt 1 view .LVU420
 1289              	.L114:
 1290              	.LBE338:
1996:src/keys.c    **** 
 1291              		.loc 1 1996 1 is_stmt 0 view .LVU421
 1292 0088 03B0     		add	sp, sp, #12
 1293              		.cfi_remember_state
 1294              		.cfi_def_cfa_offset 20
 1295              		@ sp needed
 1296 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 1297              	.LVL103:
 1298              	.L143:
ARM GAS  /tmp/ccF3vcso.s 			page 82


 1299              		.cfi_restore_state
1962:src/keys.c    **** 		// Handle local registers and flags
 1300              		.loc 1 1962 2 is_stmt 1 view .LVU422
1962:src/keys.c    **** 		// Handle local registers and flags
 1301              		.loc 1 1962 5 is_stmt 0 view .LVU423
 1302 008c C807     		lsls	r0, r1, #31
 1303 008e 17D5     		bpl	.L146
1960:src/keys.c    **** 	
 1304              		.loc 1 1960 39 view .LVU424
 1305 0090 0123     		movs	r3, #1
 1306              	.LVL104:
 1307              	.L119:
1964:src/keys.c    **** 		if (State2.runmode) {
 1308              		.loc 1 1964 3 is_stmt 1 view .LVU425
1964:src/keys.c    **** 		if (State2.runmode) {
 1309              		.loc 1 1964 7 is_stmt 0 view .LVU426
 1310 0092 0F27     		movs	r7, #15
 1311 0094 0197     		str	r7, [sp, #4]
1965:src/keys.c    **** 			if (LocalRegs == 0)
 1312              		.loc 1 1965 3 is_stmt 1 view .LVU427
1965:src/keys.c    **** 			if (LocalRegs == 0)
 1313              		.loc 1 1965 6 is_stmt 0 view .LVU428
 1314 0096 BCF1000F 		cmp	ip, #0
 1315 009a 1BD0     		beq	.L136
1966:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1316              		.loc 1 1966 4 is_stmt 1 view .LVU429
1966:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1317              		.loc 1 1966 18 is_stmt 0 view .LVU430
 1318 009c 184A     		ldr	r2, .L149+12
 1319 009e 1268     		ldr	r2, [r2]
 1320 00a0 B2F8DE27 		ldrh	r2, [r2, #2014]
 1321 00a4 22F01F02 		bic	r2, r2, #31
1966:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1322              		.loc 1 1966 7 view .LVU431
 1323 00a8 92B2     		uxth	r2, r2
 1324 00aa 82B1     		cbz	r2, .L128
1968:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1325              		.loc 1 1968 4 is_stmt 1 view .LVU432
1968:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1326              		.loc 1 1968 7 is_stmt 0 view .LVU433
 1327 00ac 93B1     		cbz	r3, .L136
1969:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1328              		.loc 1 1969 5 is_stmt 1 view .LVU434
1969:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1329              		.loc 1 1969 11 is_stmt 0 view .LVU435
 1330 00ae F0B2     		uxtb	r0, r6
 1331 00b0 FFF7FEFF 		bl	local_regs_rarg
 1332              	.LVL105:
1969:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1333              		.loc 1 1969 45 view .LVU436
 1334 00b4 0138     		subs	r0, r0, #1
1970:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1335              		.loc 1 1970 5 is_stmt 1 view .LVU437
1970:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1336              		.loc 1 1970 8 is_stmt 0 view .LVU438
 1337 00b6 0F28     		cmp	r0, #15
 1338 00b8 06DD     		ble	.L142
ARM GAS  /tmp/ccF3vcso.s 			page 83


1971:src/keys.c    **** 			}
 1339              		.loc 1 1971 6 is_stmt 1 view .LVU439
1971:src/keys.c    **** 			}
 1340              		.loc 1 1971 10 is_stmt 0 view .LVU440
 1341 00ba 0197     		str	r7, [sp, #4]
 1342 00bc 3846     		mov	r0, r7
 1343 00be C4E7     		b	.L123
 1344              	.LVL106:
 1345              	.L146:
1976:src/keys.c    **** 	else {
 1346              		.loc 1 1976 3 is_stmt 1 view .LVU441
1976:src/keys.c    **** 	else {
 1347              		.loc 1 1976 65 is_stmt 0 view .LVU442
 1348 00c0 BCF1000F 		cmp	ip, #0
 1349 00c4 11D1     		bne	.L147
 1350 00c6 6320     		movs	r0, #99
 1351              	.LVL107:
 1352              	.L142:
1982:src/keys.c    **** 		return STATE_UNFINISHED;
 1353              		.loc 1 1982 5 view .LVU443
 1354 00c8 8442     		cmp	r4, r0
1980:src/keys.c    **** 	}
 1355              		.loc 1 1980 8 view .LVU444
 1356 00ca 0190     		str	r0, [sp, #4]
1982:src/keys.c    **** 		return STATE_UNFINISHED;
 1357              		.loc 1 1982 2 is_stmt 1 view .LVU445
1982:src/keys.c    **** 		return STATE_UNFINISHED;
 1358              		.loc 1 1982 5 is_stmt 0 view .LVU446
 1359 00cc BFDD     		ble	.L148
 1360              	.L128:
1967:src/keys.c    **** 			if (is_reg) {
 1361              		.loc 1 1967 12 view .LVU447
 1362 00ce 3320     		movs	r0, #51
1996:src/keys.c    **** 
 1363              		.loc 1 1996 1 view .LVU448
 1364 00d0 03B0     		add	sp, sp, #12
 1365              		.cfi_remember_state
 1366              		.cfi_def_cfa_offset 20
 1367              		@ sp needed
 1368 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1369              	.LVL108:
 1370              	.L136:
 1371              		.cfi_restore_state
1996:src/keys.c    **** 
 1372              		.loc 1 1996 1 view .LVU449
 1373 00d4 3846     		mov	r0, r7
 1374 00d6 B8E7     		b	.L123
 1375              	.LVL109:
 1376              	.L144:
1955:src/keys.c    **** #else
 1377              		.loc 1 1955 93 discriminator 4 view .LVU450
 1378 00d8 0438     		subs	r0, r0, #4
 1379              	.LVL110:
1955:src/keys.c    **** #else
 1380              		.loc 1 1955 68 discriminator 4 view .LVU451
 1381 00da 0128     		cmp	r0, #1
1955:src/keys.c    **** #else
ARM GAS  /tmp/ccF3vcso.s 			page 84


 1382              		.loc 1 1955 130 discriminator 4 view .LVU452
 1383 00dc 98BF     		it	ls
 1384 00de 9426     		movls	r6, #148
 1385 00e0 9CE7     		b	.L117
 1386              	.LVL111:
 1387              	.L145:
1979:src/keys.c    **** 			lim = RARG_IND - 1;
 1388              		.loc 1 1979 23 discriminator 1 view .LVU453
 1389 00e2 FB07     		lsls	r3, r7, #31
 1390 00e4 B1D5     		bpl	.L123
1980:src/keys.c    **** 	}
 1391              		.loc 1 1980 4 is_stmt 1 view .LVU454
1980:src/keys.c    **** 	}
 1392              		.loc 1 1980 8 is_stmt 0 view .LVU455
 1393 00e6 7F20     		movs	r0, #127
 1394 00e8 EEE7     		b	.L142
 1395              	.LVL112:
 1396              	.L147:
1976:src/keys.c    **** 	else {
 1397              		.loc 1 1976 26 discriminator 1 view .LVU456
 1398 00ea F0B2     		uxtb	r0, r6
 1399 00ec FFF7FEFF 		bl	global_regs_rarg
 1400              	.LVL113:
1976:src/keys.c    **** 	else {
 1401              		.loc 1 1976 61 discriminator 1 view .LVU457
 1402 00f0 0138     		subs	r0, r0, #1
 1403 00f2 E9E7     		b	.L142
 1404              	.L150:
 1405              		.align	2
 1406              	.L149:
 1407 00f4 00000000 		.word	StateWhileOn
 1408 00f8 00000000 		.word	argcmds
 1409 00fc CDCCCCCC 		.word	-858993459
 1410 0100 00000000 		.word	main_ram
 1411              		.cfi_endproc
 1412              	.LFE36:
 1414              		.section	.text.process_arg_shuffle,"ax",%progbits
 1415              		.align	1
 1416              		.p2align 2,,3
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu fpv4-sp-d16
 1422              	process_arg_shuffle:
 1423              	.LVL114:
 1424              	.LFB41:
2063:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1425              		.loc 1 2063 39 is_stmt 1 view -0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429              		@ link register save eliminated.
2064:src/keys.c    **** 	if (State2.numdigit < 4)
 1430              		.loc 1 2064 2 view .LVU459
2063:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1431              		.loc 1 2063 39 is_stmt 0 view .LVU460
 1432 0000 10B4     		push	{r4}
ARM GAS  /tmp/ccF3vcso.s 			page 85


 1433              		.cfi_def_cfa_offset 4
 1434              		.cfi_offset 4, -4
2064:src/keys.c    **** 	if (State2.numdigit < 4)
 1435              		.loc 1 2064 31 view .LVU461
 1436 0002 0A4A     		ldr	r2, .L154
 1437 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2064:src/keys.c    **** 	if (State2.numdigit < 4)
 1438              		.loc 1 2064 16 view .LVU462
 1439 0006 1189     		ldrh	r1, [r2, #8]
2064:src/keys.c    **** 	if (State2.numdigit < 4)
 1440              		.loc 1 2064 43 view .LVU463
 1441 0008 5C00     		lsls	r4, r3, #1
2064:src/keys.c    **** 	if (State2.numdigit < 4)
 1442              		.loc 1 2064 21 view .LVU464
 1443 000a A040     		lsls	r0, r0, r4
 1444              	.LVL115:
2064:src/keys.c    **** 	if (State2.numdigit < 4)
 1445              		.loc 1 2064 40 view .LVU465
 1446 000c 0133     		adds	r3, r3, #1
 1447 000e DBB2     		uxtb	r3, r3
2064:src/keys.c    **** 	if (State2.numdigit < 4)
 1448              		.loc 1 2064 16 view .LVU466
 1449 0010 0844     		add	r0, r0, r1
 1450 0012 80B2     		uxth	r0, r0
2065:src/keys.c    **** 		return STATE_UNFINISHED;
 1451              		.loc 1 2065 5 view .LVU467
 1452 0014 032B     		cmp	r3, #3
2064:src/keys.c    **** 	if (State2.numdigit < 4)
 1453              		.loc 1 2064 40 view .LVU468
 1454 0016 D372     		strb	r3, [r2, #11]
2064:src/keys.c    **** 	if (State2.numdigit < 4)
 1455              		.loc 1 2064 16 view .LVU469
 1456 0018 1081     		strh	r0, [r2, #8]	@ movhi
2065:src/keys.c    **** 		return STATE_UNFINISHED;
 1457              		.loc 1 2065 2 is_stmt 1 view .LVU470
2065:src/keys.c    **** 		return STATE_UNFINISHED;
 1458              		.loc 1 2065 5 is_stmt 0 view .LVU471
 1459 001a 03D9     		bls	.L152
2067:src/keys.c    **** }
 1460              		.loc 1 2067 2 is_stmt 1 view .LVU472
2068:src/keys.c    **** 
 1461              		.loc 1 2068 1 is_stmt 0 view .LVU473
 1462 001c 5DF8044B 		ldr	r4, [sp], #4
 1463              		.cfi_remember_state
 1464              		.cfi_restore 4
 1465              		.cfi_def_cfa_offset 0
2067:src/keys.c    **** }
 1466              		.loc 1 2067 9 view .LVU474
 1467 0020 FFF7FEBF 		b	arg_eval
 1468              	.LVL116:
 1469              	.L152:
 1470              		.cfi_restore_state
2068:src/keys.c    **** 
 1471              		.loc 1 2068 1 view .LVU475
 1472 0024 3320     		movs	r0, #51
 1473 0026 5DF8044B 		ldr	r4, [sp], #4
 1474              		.cfi_restore 4
ARM GAS  /tmp/ccF3vcso.s 			page 86


 1475              		.cfi_def_cfa_offset 0
 1476 002a 7047     		bx	lr
 1477              	.L155:
 1478              		.align	2
 1479              	.L154:
 1480 002c 00000000 		.word	StateWhileOn
 1481              		.cfi_endproc
 1482              	.LFE41:
 1484              		.section	.text.process_h_shifted,"ax",%progbits
 1485              		.align	1
 1486              		.p2align 2,,3
 1487              		.syntax unified
 1488              		.thumb
 1489              		.thumb_func
 1490              		.fpu fpv4-sp-d16
 1492              	process_h_shifted:
 1493              	.LVL117:
 1494              	.LFB21:
1103:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1495              		.loc 1 1103 47 is_stmt 1 view -0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
1106:src/keys.c    **** 		// Row 1
 1499              		.loc 1 1106 2 view .LVU477
1157:src/keys.c    **** 	int op = op_map[lc];
 1500              		.loc 1 1157 2 view .LVU478
 1501              	.LBB339:
 1502              	.LBB340:
 158:src/keys.c    **** }
 1503              		.loc 1 158 23 is_stmt 0 view .LVU479
 1504 0000 314A     		ldr	r2, .L187
 1505              	.LBE340:
 1506              	.LBE339:
1158:src/keys.c    **** 	reset_shift();
 1507              		.loc 1 1158 17 view .LVU480
 1508 0002 324B     		ldr	r3, .L187+4
 1509              	.LBB343:
 1510              	.LBB341:
 158:src/keys.c    **** }
 1511              		.loc 1 158 23 view .LVU481
 1512 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1513              	.LBE341:
 1514              	.LBE343:
1103:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1515              		.loc 1 1103 47 view .LVU482
 1516 0006 70B5     		push	{r4, r5, r6, lr}
 1517              		.cfi_def_cfa_offset 16
 1518              		.cfi_offset 4, -16
 1519              		.cfi_offset 5, -12
 1520              		.cfi_offset 6, -8
 1521              		.cfi_offset 14, -4
1103:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1522              		.loc 1 1103 47 view .LVU483
 1523 0008 0446     		mov	r4, r0
 1524              	.LVL118:
 1525              	.LBB344:
ARM GAS  /tmp/ccF3vcso.s 			page 87


 1526              	.LBI339:
 146:src/keys.c    **** {
 1527              		.loc 1 146 12 is_stmt 1 view .LVU484
 1528              	.LBB342:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1529              		.loc 1 148 2 view .LVU485
 158:src/keys.c    **** }
 1530              		.loc 1 158 2 view .LVU486
 158:src/keys.c    **** }
 1531              		.loc 1 158 2 is_stmt 0 view .LVU487
 1532              	.LBE342:
 1533              	.LBE344:
1158:src/keys.c    **** 	reset_shift();
 1534              		.loc 1 1158 2 is_stmt 1 view .LVU488
 1535              	.LBB345:
 1536              	.LBB346:
 1537              	.LBB347:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1538              		.loc 1 106 16 is_stmt 0 view .LVU489
 1539 000a 314E     		ldr	r6, .L187+8
 1540              	.LBE347:
 1541              	.LBE346:
 1542              	.LBE345:
1158:src/keys.c    **** 	reset_shift();
 1543              		.loc 1 1158 17 view .LVU490
 1544 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1545              	.LVL119:
1159:src/keys.c    **** 
 1546              		.loc 1 1159 2 is_stmt 1 view .LVU491
 1547              	.LBB354:
 1548              	.LBI345:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1549              		.loc 1 114 13 view .LVU492
 1550              	.LBE354:
 115:src/keys.c    **** }
 1551              		.loc 1 115 2 view .LVU493
 1552              	.LBB355:
 1553              	.LBB352:
 1554              	.LBI346:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1555              		.loc 1 104 20 view .LVU494
 1556              	.LBB350:
 105:src/keys.c    **** 	State2.shifts = shift;
 1557              		.loc 1 105 2 view .LVU495
 1558              	.LBB348:
 1559              	.LBI348:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1560              		.loc 1 96 13 view .LVU496
 1561              	.LBB349:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1562              		.loc 1 97 2 view .LVU497
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1563              		.loc 1 97 18 is_stmt 0 view .LVU498
 1564 0010 FFF7FEFF 		bl	shift_down
 1565              	.LVL120:
  98:src/keys.c    **** }
 1566              		.loc 1 98 2 is_stmt 1 view .LVU499
ARM GAS  /tmp/ccF3vcso.s 			page 88


 1567              	.LBE349:
 1568              	.LBE348:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1569              		.loc 1 106 2 view .LVU500
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1570              		.loc 1 106 16 is_stmt 0 view .LVU501
 1571 0014 0023     		movs	r3, #0
 1572              	.LBE350:
 1573              	.LBE352:
 1574              	.LBE355:
1162:src/keys.c    **** 	case K62:
 1575              		.loc 1 1162 2 view .LVU502
 1576 0016 262C     		cmp	r4, #38
 1577              	.LBB356:
 1578              	.LBB353:
 1579              	.LBB351:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1580              		.loc 1 106 16 view .LVU503
 1581 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1582              		.loc 1 108 2 is_stmt 1 view .LVU504
 1583              	.LVL121:
 108:src/keys.c    **** }
 1584              		.loc 1 108 2 is_stmt 0 view .LVU505
 1585              	.LBE351:
 1586              	.LBE353:
 1587              	.LBE356:
1162:src/keys.c    **** 	case K62:
 1588              		.loc 1 1162 2 is_stmt 1 view .LVU506
 1589 001a 27D0     		beq	.L157
 1590 001c 272C     		cmp	r4, #39
 1591 001e 19D1     		bne	.L159
1175:src/keys.c    **** 			return STATE_UNFINISHED;
 1592              		.loc 1 1175 3 view .LVU507
1175:src/keys.c    **** 			return STATE_UNFINISHED;
 1593              		.loc 1 1175 7 is_stmt 0 view .LVU508
 1594 0020 FFF7FEFF 		bl	is_bad_cmdline
 1595              	.LVL122:
1175:src/keys.c    **** 			return STATE_UNFINISHED;
 1596              		.loc 1 1175 6 view .LVU509
 1597 0024 00BB     		cbnz	r0, .L169
1177:src/keys.c    **** 		process_cmdline_set_lift();
 1598              		.loc 1 1177 3 is_stmt 1 view .LVU510
1177:src/keys.c    **** 		process_cmdline_set_lift();
 1599              		.loc 1 1177 30 is_stmt 0 view .LVU511
 1600 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1601 0028 C3F38012 		ubfx	r2, r3, #6, #1
1177:src/keys.c    **** 		process_cmdline_set_lift();
 1602              		.loc 1 1177 22 view .LVU512
 1603 002c C2F10102 		rsb	r2, r2, #1
1177:src/keys.c    **** 		process_cmdline_set_lift();
 1604              		.loc 1 1177 18 view .LVU513
 1605 0030 62F38613 		bfi	r3, r2, #6, #1
 1606 0034 B375     		strb	r3, [r6, #22]
1178:src/keys.c    **** 		update_program_bounds(1);
 1607              		.loc 1 1178 3 is_stmt 1 view .LVU514
 1608 0036 FFF7FEFF 		bl	process_cmdline_set_lift
ARM GAS  /tmp/ccF3vcso.s 			page 89


 1609              	.LVL123:
1179:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1610              		.loc 1 1179 3 view .LVU515
 1611 003a 0120     		movs	r0, #1
 1612 003c FFF7FEFF 		bl	update_program_bounds
 1613              	.LVL124:
1180:src/keys.c    **** 			set_pc(0);
 1614              		.loc 1 1180 3 view .LVU516
1180:src/keys.c    **** 			set_pc(0);
 1615              		.loc 1 1180 7 is_stmt 0 view .LVU517
 1616 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1180:src/keys.c    **** 			set_pc(0);
 1617              		.loc 1 1180 6 view .LVU518
 1618 0042 10F04000 		ands	r0, r0, #64
 1619 0046 05D1     		bne	.L159
1180:src/keys.c    **** 			set_pc(0);
 1620              		.loc 1 1180 27 discriminator 1 view .LVU519
 1621 0048 224B     		ldr	r3, .L187+12
 1622 004a 1B68     		ldr	r3, [r3]
1180:src/keys.c    **** 			set_pc(0);
 1623              		.loc 1 1180 24 discriminator 1 view .LVU520
 1624 004c B3F8E027 		ldrh	r2, [r3, #2016]
 1625 0050 012A     		cmp	r2, #1
 1626 0052 32D0     		beq	.L183
 1627              	.L159:
1188:src/keys.c    **** 		if (op & _RARG) {
 1628              		.loc 1 1188 2 is_stmt 1 view .LVU521
1188:src/keys.c    **** 		if (op & _RARG) {
 1629              		.loc 1 1188 5 is_stmt 0 view .LVU522
 1630 0054 332D     		cmp	r5, #51
 1631 0056 07D0     		beq	.L169
 1632              	.LVL125:
1189:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1633              		.loc 1 1189 3 is_stmt 1 view .LVU523
1189:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1634              		.loc 1 1189 6 is_stmt 0 view .LVU524
 1635 0058 2804     		lsls	r0, r5, #16
 1636 005a 14D5     		bpl	.L184
 1637              	.L167:
1190:src/keys.c    **** 			op = STATE_UNFINISHED;
 1638              		.loc 1 1190 4 is_stmt 1 view .LVU525
 1639              	.LVL126:
 1640              	.LBB357:
 1641              	.LBI357:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1642              		.loc 1 552 13 view .LVU526
 1643              	.LBB358:
 553:src/keys.c    **** 		return;
 1644              		.loc 1 553 2 view .LVU527
 553:src/keys.c    **** 		return;
 1645              		.loc 1 553 6 is_stmt 0 view .LVU528
 1646 005c FFF7FEFF 		bl	is_bad_cmdline
 1647              	.LVL127:
 553:src/keys.c    **** 		return;
 1648              		.loc 1 553 5 view .LVU529
 1649 0060 10B9     		cbnz	r0, .L169
 1650 0062 E8B2     		uxtb	r0, r5
ARM GAS  /tmp/ccF3vcso.s 			page 90


 1651 0064 FFF7FEFF 		bl	init_arg.part.0
 1652              	.LVL128:
 1653              	.L169:
 553:src/keys.c    **** 		return;
 1654              		.loc 1 553 5 view .LVU530
 1655              	.LBE358:
 1656              	.LBE357:
1194:src/keys.c    **** #undef _RARG
 1657              		.loc 1 1194 2 is_stmt 1 view .LVU531
1103:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1658              		.loc 1 1103 47 is_stmt 0 view .LVU532
 1659 0068 3320     		movs	r0, #51
1197:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1660              		.loc 1 1197 1 view .LVU533
 1661 006a 70BD     		pop	{r4, r5, r6, pc}
 1662              	.LVL129:
 1663              	.L157:
1164:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1664              		.loc 1 1164 3 is_stmt 1 view .LVU534
1164:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1665              		.loc 1 1164 7 is_stmt 0 view .LVU535
 1666 006c 194B     		ldr	r3, .L187+12
 1667 006e 1B68     		ldr	r3, [r3]
 1668 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1164:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1669              		.loc 1 1164 6 view .LVU536
 1670 0074 D607     		lsls	r6, r2, #31
 1671 0076 0FD4     		bmi	.L185
1170:src/keys.c    **** #endif
 1672              		.loc 1 1170 4 is_stmt 1 view .LVU537
1170:src/keys.c    **** #endif
 1673              		.loc 1 1170 8 is_stmt 0 view .LVU538
 1674 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1170:src/keys.c    **** #endif
 1675              		.loc 1 1170 7 view .LVU539
 1676 007c 9C06     		lsls	r4, r3, #26
 1677 007e 14D5     		bpl	.L186
 1678 0080 40F24F10 		movw	r0, #335
 1679              	.LVL130:
1197:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1680              		.loc 1 1197 1 view .LVU540
 1681 0084 70BD     		pop	{r4, r5, r6, pc}
 1682              	.L184:
 1683              	.LVL131:
1194:src/keys.c    **** #undef _RARG
 1684              		.loc 1 1194 2 is_stmt 1 view .LVU541
1194:src/keys.c    **** #undef _RARG
 1685              		.loc 1 1194 9 is_stmt 0 view .LVU542
 1686 0086 134B     		ldr	r3, .L187+12
 1687 0088 1B68     		ldr	r3, [r3]
 1688 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1194:src/keys.c    **** #undef _RARG
 1689              		.loc 1 1194 57 view .LVU543
 1690 008e D907     		lsls	r1, r3, #31
 1691 0090 10D4     		bmi	.L168
 1692              	.LVL132:
 1693              	.L171:
ARM GAS  /tmp/ccF3vcso.s 			page 91


1194:src/keys.c    **** #undef _RARG
 1694              		.loc 1 1194 57 view .LVU544
 1695 0092 25F48040 		bic	r0, r5, #16384
1197:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1696              		.loc 1 1197 1 view .LVU545
 1697 0096 70BD     		pop	{r4, r5, r6, pc}
 1698              	.LVL133:
 1699              	.L185:
1165:src/keys.c    **** 		else
 1700              		.loc 1 1165 4 is_stmt 1 view .LVU546
1165:src/keys.c    **** 		else
 1701              		.loc 1 1165 57 is_stmt 0 view .LVU547
 1702 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1703 009c 002B     		cmp	r3, #0
 1704 009e 40F25315 		movw	r5, #339
 1705              	.LVL134:
1165:src/keys.c    **** 		else
 1706              		.loc 1 1165 57 view .LVU548
 1707 00a2 A8BF     		it	ge
 1708 00a4 4FF4AA75 		movge	r5, #340
 1709 00a8 F3E7     		b	.L171
 1710              	.LVL135:
 1711              	.L186:
1188:src/keys.c    **** 		if (op & _RARG) {
 1712              		.loc 1 1188 2 is_stmt 1 view .LVU549
1188:src/keys.c    **** 		if (op & _RARG) {
 1713              		.loc 1 1188 5 is_stmt 0 view .LVU550
 1714 00aa 332D     		cmp	r5, #51
 1715 00ac DCD0     		beq	.L169
 1716              	.LVL136:
1189:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1717              		.loc 1 1189 3 is_stmt 1 view .LVU551
1189:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1718              		.loc 1 1189 6 is_stmt 0 view .LVU552
 1719 00ae 2B04     		lsls	r3, r5, #16
 1720 00b0 D4D4     		bmi	.L167
 1721 00b2 EEE7     		b	.L171
 1722              	.LVL137:
 1723              	.L168:
1194:src/keys.c    **** #undef _RARG
 1724              		.loc 1 1194 21 view .LVU553
 1725 00b4 6A04     		lsls	r2, r5, #17
 1726 00b6 D7D4     		bmi	.L169
 1727 00b8 EBE7     		b	.L171
 1728              	.L183:
1180:src/keys.c    **** 			set_pc(0);
 1729              		.loc 1 1180 43 discriminator 2 view .LVU554
 1730 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1731 00be 012B     		cmp	r3, #1
 1732 00c0 C8D1     		bne	.L159
1181:src/keys.c    **** 		break;
 1733              		.loc 1 1181 4 is_stmt 1 view .LVU555
 1734 00c2 FFF7FEFF 		bl	set_pc
 1735              	.LVL138:
 1736 00c6 C5E7     		b	.L159
 1737              	.L188:
 1738              		.align	2
ARM GAS  /tmp/ccF3vcso.s 			page 92


 1739              	.L187:
 1740 00c8 00000000 		.word	.LANCHOR1
 1741 00cc 00000000 		.word	.LANCHOR0
 1742 00d0 00000000 		.word	StateWhileOn
 1743 00d4 00000000 		.word	main_ram
 1744              		.cfi_endproc
 1745              	.LFE21:
 1747              		.section	.text.intltr,"ax",%progbits
 1748              		.align	1
 1749              		.p2align 2,,3
 1750              		.syntax unified
 1751              		.thumb
 1752              		.thumb_func
 1753              		.fpu fpv4-sp-d16
 1755              	intltr:
 1756              	.LVL139:
 1757              	.LFB18:
 763:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1758              		.loc 1 763 26 view -0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 0
 1761              		@ frame_needed = 0, uses_anonymous_args = 0
 764:src/keys.c    **** }
 1762              		.loc 1 764 2 view .LVU557
 764:src/keys.c    **** }
 1763              		.loc 1 764 10 is_stmt 0 view .LVU558
 1764 0000 0B4B     		ldr	r3, .L198
 1765 0002 1B68     		ldr	r3, [r3]
 1766 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 764:src/keys.c    **** }
 1767              		.loc 1 764 22 view .LVU559
 1768 0008 13F00103 		ands	r3, r3, #1
 1769 000c 05D0     		beq	.L191
 764:src/keys.c    **** }
 1770              		.loc 1 764 26 discriminator 1 view .LVU560
 1771 000e 094B     		ldr	r3, .L198+4
 1772 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 764:src/keys.c    **** }
 1773              		.loc 1 764 22 discriminator 1 view .LVU561
 1774 0012 5B06     		lsls	r3, r3, #25
 1775 0014 03D4     		bmi	.L197
 764:src/keys.c    **** }
 1776              		.loc 1 764 22 view .LVU562
 1777 0016 0120     		movs	r0, #1
 1778              	.LVL140:
 765:src/keys.c    **** 
 1779              		.loc 1 765 1 view .LVU563
 1780 0018 7047     		bx	lr
 1781              	.LVL141:
 1782              	.L191:
 764:src/keys.c    **** }
 1783              		.loc 1 764 22 view .LVU564
 1784 001a 1846     		mov	r0, r3
 1785              	.LVL142:
 764:src/keys.c    **** }
 1786              		.loc 1 764 22 view .LVU565
 1787 001c 7047     		bx	lr
ARM GAS  /tmp/ccF3vcso.s 			page 93


 1788              	.LVL143:
 1789              	.L197:
 763:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1790              		.loc 1 763 26 view .LVU566
 1791 001e 10B5     		push	{r4, lr}
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 4, -8
 1794              		.cfi_offset 14, -4
 1795 0020 0446     		mov	r4, r0
 1796              	.LVL144:
 1797              	.LBB361:
 1798              	.LBI361:
 763:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1799              		.loc 1 763 12 is_stmt 1 view .LVU567
 1800              	.LBB362:
 764:src/keys.c    **** }
 1801              		.loc 1 764 52 is_stmt 0 view .LVU568
 1802 0022 FFF7FEFF 		bl	int_base
 1803              	.LVL145:
 764:src/keys.c    **** }
 1804              		.loc 1 764 43 view .LVU569
 1805 0026 8442     		cmp	r4, r0
 1806 0028 ACBF     		ite	ge
 1807 002a 0020     		movge	r0, #0
 1808 002c 0120     		movlt	r0, #1
 1809              	.LBE362:
 1810              	.LBE361:
 765:src/keys.c    **** 
 1811              		.loc 1 765 1 view .LVU570
 1812 002e 10BD     		pop	{r4, pc}
 1813              	.LVL146:
 1814              	.L199:
 765:src/keys.c    **** 
 1815              		.loc 1 765 1 view .LVU571
 1816              		.align	2
 1817              	.L198:
 1818 0030 00000000 		.word	main_ram
 1819 0034 00000000 		.word	StateWhileOn
 1820              		.cfi_endproc
 1821              	.LFE18:
 1823              		.section	.text.process_normal,"ax",%progbits
 1824              		.align	1
 1825              		.p2align 2,,3
 1826              		.syntax unified
 1827              		.thumb
 1828              		.thumb_func
 1829              		.fpu fpv4-sp-d16
 1831              	process_normal:
 1832              	.LVL147:
 1833              	.LFB19:
 771:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1834              		.loc 1 771 1 is_stmt 1 view -0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
 772:src/keys.c    **** 		// Row 1
 1838              		.loc 1 772 2 view .LVU573
ARM GAS  /tmp/ccF3vcso.s 			page 94


 819:src/keys.c    **** 	int op = op_map[lc];
 1839              		.loc 1 819 2 view .LVU574
 1840              	.LBB363:
 1841              	.LBI363:
 146:src/keys.c    **** {
 1842              		.loc 1 146 12 view .LVU575
 1843              	.LBB364:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1844              		.loc 1 148 2 view .LVU576
 158:src/keys.c    **** }
 1845              		.loc 1 158 2 view .LVU577
 158:src/keys.c    **** }
 1846              		.loc 1 158 2 is_stmt 0 view .LVU578
 1847              	.LBE364:
 1848              	.LBE363:
 820:src/keys.c    **** 	
 1849              		.loc 1 820 2 is_stmt 1 view .LVU579
 825:src/keys.c    **** 	  switch (c) {
 1850              		.loc 1 825 6 is_stmt 0 view .LVU580
 1851 0000 984B     		ldr	r3, .L231
 1852              	.LBB367:
 1853              	.LBB365:
 158:src/keys.c    **** }
 1854              		.loc 1 158 23 view .LVU581
 1855 0002 994A     		ldr	r2, .L231+4
 1856              	.LBE365:
 1857              	.LBE367:
 825:src/keys.c    **** 	  switch (c) {
 1858              		.loc 1 825 6 view .LVU582
 1859 0004 1B68     		ldr	r3, [r3]
 1860              	.LBB368:
 1861              	.LBB366:
 158:src/keys.c    **** }
 1862              		.loc 1 158 23 view .LVU583
 1863 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1864              	.LBE366:
 1865              	.LBE368:
 820:src/keys.c    **** 	
 1866              		.loc 1 820 17 view .LVU584
 1867 0008 984A     		ldr	r2, .L231+8
 825:src/keys.c    **** 	  switch (c) {
 1868              		.loc 1 825 6 view .LVU585
 1869 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 771:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1870              		.loc 1 771 1 view .LVU586
 1871 000e 10B5     		push	{r4, lr}
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 4, -8
 1874              		.cfi_offset 14, -4
 820:src/keys.c    **** 	
 1875              		.loc 1 820 17 view .LVU587
 1876 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 825:src/keys.c    **** 	  switch (c) {
 1877              		.loc 1 825 5 view .LVU588
 1878 0014 DB07     		lsls	r3, r3, #31
 820:src/keys.c    **** 	
 1879              		.loc 1 820 6 view .LVU589
ARM GAS  /tmp/ccF3vcso.s 			page 95


 1880 0016 2246     		mov	r2, r4
 1881              	.LVL148:
 824:src/keys.c    **** 	if (UState.intm) {
 1882              		.loc 1 824 2 is_stmt 1 view .LVU590
 825:src/keys.c    **** 	  switch (c) {
 1883              		.loc 1 825 2 view .LVU591
 825:src/keys.c    **** 	  switch (c) {
 1884              		.loc 1 825 5 is_stmt 0 view .LVU592
 1885 0018 42D4     		bmi	.L227
 856:src/keys.c    **** 	  }
 1886              		.loc 1 856 12 is_stmt 1 view .LVU593
 861:src/keys.c    **** #ifdef DM42
 1887              		.loc 1 861 2 view .LVU594
 1888 001a 2D28     		cmp	r0, #45
 1889 001c 3ED8     		bhi	.L200
 1890 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1891              	.L219:
 1892 0022 0801     		.2byte	(.L215-.L219)/2
 1893 0024 0E01     		.2byte	(.L216-.L219)/2
 1894 0026 3D00     		.2byte	(.L200-.L219)/2
 1895 0028 CF00     		.2byte	(.L214-.L219)/2
 1896 002a 3D00     		.2byte	(.L200-.L219)/2
 1897 002c 3D00     		.2byte	(.L200-.L219)/2
 1898 002e 3400     		.2byte	(.L209-.L219)/2
 1899 0030 3400     		.2byte	(.L209-.L219)/2
 1900 0032 3D00     		.2byte	(.L200-.L219)/2
 1901 0034 3D00     		.2byte	(.L200-.L219)/2
 1902 0036 3D00     		.2byte	(.L200-.L219)/2
 1903 0038 3D00     		.2byte	(.L200-.L219)/2
 1904 003a 3D00     		.2byte	(.L200-.L219)/2
 1905 003c 3D00     		.2byte	(.L200-.L219)/2
 1906 003e 3D00     		.2byte	(.L200-.L219)/2
 1907 0040 3D00     		.2byte	(.L200-.L219)/2
 1908 0042 E900     		.2byte	(.L213-.L219)/2
 1909 0044 3D00     		.2byte	(.L200-.L219)/2
 1910 0046 3400     		.2byte	(.L209-.L219)/2
 1911 0048 3D00     		.2byte	(.L200-.L219)/2
 1912 004a 3D00     		.2byte	(.L200-.L219)/2
 1913 004c 3D00     		.2byte	(.L200-.L219)/2
 1914 004e 3D00     		.2byte	(.L200-.L219)/2
 1915 0050 3D00     		.2byte	(.L200-.L219)/2
 1916 0052 3D00     		.2byte	(.L200-.L219)/2
 1917 0054 3D00     		.2byte	(.L200-.L219)/2
 1918 0056 3D00     		.2byte	(.L200-.L219)/2
 1919 0058 3D00     		.2byte	(.L200-.L219)/2
 1920 005a 3D00     		.2byte	(.L200-.L219)/2
 1921 005c 3D00     		.2byte	(.L200-.L219)/2
 1922 005e 3D00     		.2byte	(.L200-.L219)/2
 1923 0060 3D00     		.2byte	(.L200-.L219)/2
 1924 0062 3D00     		.2byte	(.L200-.L219)/2
 1925 0064 3D00     		.2byte	(.L200-.L219)/2
 1926 0066 3D00     		.2byte	(.L200-.L219)/2
 1927 0068 3D00     		.2byte	(.L200-.L219)/2
 1928 006a 3D00     		.2byte	(.L200-.L219)/2
 1929 006c 3D00     		.2byte	(.L200-.L219)/2
 1930 006e 3D00     		.2byte	(.L200-.L219)/2
 1931 0070 3D00     		.2byte	(.L200-.L219)/2
ARM GAS  /tmp/ccF3vcso.s 			page 96


 1932 0072 3D00     		.2byte	(.L200-.L219)/2
 1933 0074 3D00     		.2byte	(.L200-.L219)/2
 1934 0076 3D00     		.2byte	(.L200-.L219)/2
 1935 0078 3D00     		.2byte	(.L200-.L219)/2
 1936 007a F400     		.2byte	(.L212-.L219)/2
 1937 007c C700     		.2byte	(.L218-.L219)/2
 1938              		.p2align 1
 1939              	.L203:
 852:src/keys.c    **** 	    if (intltr(15)) {
 1940              		.loc 1 852 6 view .LVU595
 1941              	.LVL149:
 853:src/keys.c    **** 	      return op_int;
 1942              		.loc 1 853 6 view .LVU596
 853:src/keys.c    **** 	      return op_int;
 1943              		.loc 1 853 10 is_stmt 0 view .LVU597
 1944 007e 0F20     		movs	r0, #15
 1945              	.LVL150:
 853:src/keys.c    **** 	      return op_int;
 1946              		.loc 1 853 10 view .LVU598
 1947 0080 FFF7FEFF 		bl	intltr
 1948              	.LVL151:
 853:src/keys.c    **** 	      return op_int;
 1949              		.loc 1 853 9 view .LVU599
 1950 0084 0028     		cmp	r0, #0
 1951 0086 40F0EB80 		bne	.L228
 1952              	.LVL152:
 1953              	.L209:
 927:src/keys.c    **** 		break;
 1954              		.loc 1 927 3 is_stmt 1 view .LVU600
 1955              	.LBB369:
 1956              	.LBI369:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1957              		.loc 1 552 13 view .LVU601
 1958              	.LBB370:
 553:src/keys.c    **** 		return;
 1959              		.loc 1 553 2 view .LVU602
 553:src/keys.c    **** 		return;
 1960              		.loc 1 553 6 is_stmt 0 view .LVU603
 1961 008a FFF7FEFF 		bl	is_bad_cmdline
 1962              	.LVL153:
 553:src/keys.c    **** 		return;
 1963              		.loc 1 553 5 view .LVU604
 1964 008e 0028     		cmp	r0, #0
 1965 0090 40F09380 		bne	.L226
 1966 0094 E0B2     		uxtb	r0, r4
 1967 0096 FFF7FEFF 		bl	init_arg.part.0
 1968              	.LVL154:
 1969              	.LBE370:
 1970              	.LBE369:
 933:src/keys.c    **** }
 1971              		.loc 1 933 9 view .LVU605
 1972 009a 3322     		movs	r2, #51
 1973              	.LVL155:
 1974              	.L200:
 934:src/keys.c    **** 
 1975              		.loc 1 934 1 view .LVU606
 1976 009c 1046     		mov	r0, r2
ARM GAS  /tmp/ccF3vcso.s 			page 97


 1977 009e 10BD     		pop	{r4, pc}
 1978              	.LVL156:
 1979              	.L227:
 826:src/keys.c    **** 	  case K00:
 1980              		.loc 1 826 4 is_stmt 1 view .LVU607
 1981 00a0 1228     		cmp	r0, #18
 1982 00a2 29D8     		bhi	.L202
 1983 00a4 01A3     		adr	r3, .L204
 1984 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1985 00aa 00BF     		.p2align 2
 1986              	.L204:
 1987 00ac E9010000 		.word	.L207+1
 1988 00b0 DB010000 		.word	.L206+1
 1989 00b4 F9000000 		.word	.L202+1
 1990 00b8 CD010000 		.word	.L205+1
 1991 00bc F9000000 		.word	.L202+1
 1992 00c0 F9000000 		.word	.L202+1
 1993 00c4 F9000000 		.word	.L202+1
 1994 00c8 F9000000 		.word	.L202+1
 1995 00cc F9000000 		.word	.L202+1
 1996 00d0 F9000000 		.word	.L202+1
 1997 00d4 F9000000 		.word	.L202+1
 1998 00d8 F9000000 		.word	.L202+1
 1999 00dc F9000000 		.word	.L202+1
 2000 00e0 F9000000 		.word	.L202+1
 2001 00e4 F9000000 		.word	.L202+1
 2002 00e8 F9000000 		.word	.L202+1
 2003 00ec F9000000 		.word	.L202+1
 2004 00f0 F9000000 		.word	.L202+1
 2005 00f4 7F000000 		.word	.L203+1
 2006              		.p2align 1
 2007              	.L202:
 856:src/keys.c    **** 	  }
 2008              		.loc 1 856 12 view .LVU608
 861:src/keys.c    **** #ifdef DM42
 2009              		.loc 1 861 2 view .LVU609
 2010 00f8 C31E     		subs	r3, r0, #3
 2011 00fa 2A2B     		cmp	r3, #42
 2012 00fc CED8     		bhi	.L200
 2013 00fe 01A1     		adr	r1, .L211
 2014 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2015              		.p2align 2
 2016              	.L211:
 2017 0104 C1010000 		.word	.L214+1
 2018 0108 9D000000 		.word	.L200+1
 2019 010c 9D000000 		.word	.L200+1
 2020 0110 8B000000 		.word	.L209+1
 2021 0114 8B000000 		.word	.L209+1
 2022 0118 9D000000 		.word	.L200+1
 2023 011c 9D000000 		.word	.L200+1
 2024 0120 9D000000 		.word	.L200+1
 2025 0124 9D000000 		.word	.L200+1
 2026 0128 9D000000 		.word	.L200+1
 2027 012c 9D000000 		.word	.L200+1
 2028 0130 9D000000 		.word	.L200+1
 2029 0134 9D000000 		.word	.L200+1
 2030 0138 F5010000 		.word	.L213+1
ARM GAS  /tmp/ccF3vcso.s 			page 98


 2031 013c 9D000000 		.word	.L200+1
 2032 0140 8B000000 		.word	.L209+1
 2033 0144 9D000000 		.word	.L200+1
 2034 0148 9D000000 		.word	.L200+1
 2035 014c 9D000000 		.word	.L200+1
 2036 0150 9D000000 		.word	.L200+1
 2037 0154 9D000000 		.word	.L200+1
 2038 0158 9D000000 		.word	.L200+1
 2039 015c 9D000000 		.word	.L200+1
 2040 0160 9D000000 		.word	.L200+1
 2041 0164 9D000000 		.word	.L200+1
 2042 0168 9D000000 		.word	.L200+1
 2043 016c 9D000000 		.word	.L200+1
 2044 0170 9D000000 		.word	.L200+1
 2045 0174 9D000000 		.word	.L200+1
 2046 0178 9D000000 		.word	.L200+1
 2047 017c 9D000000 		.word	.L200+1
 2048 0180 9D000000 		.word	.L200+1
 2049 0184 9D000000 		.word	.L200+1
 2050 0188 9D000000 		.word	.L200+1
 2051 018c 9D000000 		.word	.L200+1
 2052 0190 9D000000 		.word	.L200+1
 2053 0194 9D000000 		.word	.L200+1
 2054 0198 9D000000 		.word	.L200+1
 2055 019c 9D000000 		.word	.L200+1
 2056 01a0 9D000000 		.word	.L200+1
 2057 01a4 9D000000 		.word	.L200+1
 2058 01a8 0B020000 		.word	.L212+1
 2059 01ac BB010000 		.word	.L226+1
 2060              		.p2align 1
 2061              	.L218:
 909:src/keys.c    **** #else
 2062              		.loc 1 909 4 view .LVU610
 909:src/keys.c    **** #else
 2063              		.loc 1 909 17 is_stmt 0 view .LVU611
 2064 01b0 2F4A     		ldr	r2, .L231+12
 2065              	.LVL157:
 909:src/keys.c    **** #else
 2066              		.loc 1 909 17 view .LVU612
 2067 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2068 01b4 43F00203 		orr	r3, r3, #2
 2069 01b8 5375     		strb	r3, [r2, #21]
 2070              	.LVL158:
 2071              	.L226:
 915:src/keys.c    **** 
 2072              		.loc 1 915 4 is_stmt 1 view .LVU613
 933:src/keys.c    **** }
 2073              		.loc 1 933 9 is_stmt 0 view .LVU614
 2074 01ba 3322     		movs	r2, #51
 934:src/keys.c    **** 
 2075              		.loc 1 934 1 view .LVU615
 2076 01bc 1046     		mov	r0, r2
 2077 01be 10BD     		pop	{r4, pc}
 2078              	.LVL159:
 2079              	.L214:
 868:src/keys.c    **** #else
 2080              		.loc 1 868 3 is_stmt 1 view .LVU616
ARM GAS  /tmp/ccF3vcso.s 			page 99


 868:src/keys.c    **** #else
 2081              		.loc 1 868 10 is_stmt 0 view .LVU617
 2082 01c0 2146     		mov	r1, r4
 2083 01c2 0220     		movs	r0, #2
 934:src/keys.c    **** 
 2084              		.loc 1 934 1 view .LVU618
 2085 01c4 BDE81040 		pop	{r4, lr}
 2086              		.cfi_remember_state
 2087              		.cfi_restore 14
 2088              		.cfi_restore 4
 2089              		.cfi_def_cfa_offset 0
 2090              	.LVL160:
 868:src/keys.c    **** #else
 2091              		.loc 1 868 10 view .LVU619
 2092 01c8 FFF7FEBF 		b	check_f_key
 2093              	.LVL161:
 2094              	.L205:
 2095              		.cfi_restore_state
 844:src/keys.c    **** 	    if (intltr(12)) {
 2096              		.loc 1 844 6 is_stmt 1 view .LVU620
 845:src/keys.c    **** 	      return op_int;
 2097              		.loc 1 845 6 view .LVU621
 845:src/keys.c    **** 	      return op_int;
 2098              		.loc 1 845 10 is_stmt 0 view .LVU622
 2099 01cc 0C20     		movs	r0, #12
 2100              	.LVL162:
 845:src/keys.c    **** 	      return op_int;
 2101              		.loc 1 845 10 view .LVU623
 2102 01ce FFF7FEFF 		bl	intltr
 2103              	.LVL163:
 845:src/keys.c    **** 	      return op_int;
 2104              		.loc 1 845 9 view .LVU624
 2105 01d2 0028     		cmp	r0, #0
 2106 01d4 F4D0     		beq	.L214
 846:src/keys.c    **** 	    }
 2107              		.loc 1 846 15 view .LVU625
 2108 01d6 1122     		movs	r2, #17
 2109 01d8 60E7     		b	.L200
 2110              	.LVL164:
 2111              	.L206:
 836:src/keys.c    **** 	    if (intltr(11)) {
 2112              		.loc 1 836 6 is_stmt 1 view .LVU626
 837:src/keys.c    **** 	      return op;
 2113              		.loc 1 837 6 view .LVU627
 837:src/keys.c    **** 	      return op;
 2114              		.loc 1 837 10 is_stmt 0 view .LVU628
 2115 01da 0B20     		movs	r0, #11
 2116              	.LVL165:
 837:src/keys.c    **** 	      return op;
 2117              		.loc 1 837 10 view .LVU629
 2118 01dc FFF7FEFF 		bl	intltr
 2119              	.LVL166:
 837:src/keys.c    **** 	      return op;
 2120              		.loc 1 837 9 view .LVU630
 2121 01e0 0028     		cmp	r0, #0
 2122 01e2 37D0     		beq	.L229
 838:src/keys.c    **** 	    }
ARM GAS  /tmp/ccF3vcso.s 			page 100


 2123              		.loc 1 838 15 view .LVU631
 2124 01e4 1022     		movs	r2, #16
 2125 01e6 59E7     		b	.L200
 2126              	.LVL167:
 2127              	.L207:
 828:src/keys.c    **** 	    if (intltr(10)) {
 2128              		.loc 1 828 6 is_stmt 1 view .LVU632
 829:src/keys.c    **** 	      return op;
 2129              		.loc 1 829 6 view .LVU633
 829:src/keys.c    **** 	      return op;
 2130              		.loc 1 829 10 is_stmt 0 view .LVU634
 2131 01e8 0A20     		movs	r0, #10
 2132              	.LVL168:
 829:src/keys.c    **** 	      return op;
 2133              		.loc 1 829 10 view .LVU635
 2134 01ea FFF7FEFF 		bl	intltr
 2135              	.LVL169:
 829:src/keys.c    **** 	      return op;
 2136              		.loc 1 829 9 view .LVU636
 2137 01ee 60B3     		cbz	r0, .L230
 830:src/keys.c    **** 	    }
 2138              		.loc 1 830 15 view .LVU637
 2139 01f0 0F22     		movs	r2, #15
 2140 01f2 53E7     		b	.L200
 2141              	.LVL170:
 2142              	.L213:
 918:src/keys.c    **** 			return STATE_UNFINISHED;
 2143              		.loc 1 918 3 is_stmt 1 view .LVU638
 918:src/keys.c    **** 			return STATE_UNFINISHED;
 2144              		.loc 1 918 7 is_stmt 0 view .LVU639
 2145 01f4 1E4B     		ldr	r3, .L231+12
 2146 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2147              	.LVL171:
 918:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 918 6 view .LVU640
 2149 01f8 9106     		lsls	r1, r2, #26
 2150 01fa DED4     		bmi	.L226
 920:src/keys.c    **** 			return op;
 2151              		.loc 1 920 3 is_stmt 1 view .LVU641
 920:src/keys.c    **** 			return op;
 2152              		.loc 1 920 7 is_stmt 0 view .LVU642
 2153 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 922:src/keys.c    **** 
 2154              		.loc 1 922 10 view .LVU643
 2155 01fe 13F0400F 		tst	r3, #64
 2156 0202 14BF     		ite	ne
 2157 0204 2246     		movne	r2, r4
 2158 0206 3022     		moveq	r2, #48
 2159 0208 48E7     		b	.L200
 2160              	.LVL172:
 2161              	.L212:
 892:src/keys.c    **** 			return STATE_UNFINISHED;
 2162              		.loc 1 892 3 is_stmt 1 view .LVU644
 892:src/keys.c    **** 			return STATE_UNFINISHED;
 2163              		.loc 1 892 7 is_stmt 0 view .LVU645
 2164 020a FFF7FEFF 		bl	is_bad_cmdline
 2165              	.LVL173:
ARM GAS  /tmp/ccF3vcso.s 			page 101


 892:src/keys.c    **** 			return STATE_UNFINISHED;
 2166              		.loc 1 892 6 view .LVU646
 2167 020e 0028     		cmp	r0, #0
 2168 0210 D3D1     		bne	.L226
 894:src/keys.c    **** 		State2.arrow = 1;
 2169              		.loc 1 894 3 is_stmt 1 view .LVU647
 2170 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2171              	.LVL174:
 895:src/keys.c    **** #ifdef DM42
 2172              		.loc 1 895 3 view .LVU648
 895:src/keys.c    **** #ifdef DM42
 2173              		.loc 1 895 16 is_stmt 0 view .LVU649
 2174 0216 164A     		ldr	r2, .L231+12
 2175 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2176 021a 43F00403 		orr	r3, r3, #4
 2177 021e 5375     		strb	r3, [r2, #21]
 897:src/keys.c    **** 		display_current_menu ();
 2178              		.loc 1 897 3 is_stmt 1 view .LVU650
 2179 0220 0920     		movs	r0, #9
 2180 0222 FFF7FEFF 		bl	set_menu
 2181              	.LVL175:
 898:src/keys.c    **** 		lcd_refresh ();
 2182              		.loc 1 898 3 view .LVU651
 2183 0226 FFF7FEFF 		bl	display_current_menu
 2184              	.LVL176:
 899:src/keys.c    **** #else
 2185              		.loc 1 899 3 view .LVU652
 2186 022a 124B     		ldr	r3, .L231+16
 2187 022c 9847     		blx	r3
 2188              	.LVL177:
 903:src/keys.c    **** 
 2189              		.loc 1 903 3 view .LVU653
 933:src/keys.c    **** }
 2190              		.loc 1 933 9 is_stmt 0 view .LVU654
 2191 022e 3322     		movs	r2, #51
 903:src/keys.c    **** 
 2192              		.loc 1 903 3 view .LVU655
 2193 0230 34E7     		b	.L200
 2194              	.LVL178:
 2195              	.L215:
 864:src/keys.c    **** 	case K01:
 2196              		.loc 1 864 3 is_stmt 1 view .LVU656
 864:src/keys.c    **** 	case K01:
 2197              		.loc 1 864 10 is_stmt 0 view .LVU657
 2198 0232 2146     		mov	r1, r4
 2199 0234 0020     		movs	r0, #0
 2200              	.LVL179:
 934:src/keys.c    **** 
 2201              		.loc 1 934 1 view .LVU658
 2202 0236 BDE81040 		pop	{r4, lr}
 2203              		.cfi_remember_state
 2204              		.cfi_restore 14
 2205              		.cfi_restore 4
 2206              		.cfi_def_cfa_offset 0
 864:src/keys.c    **** 	case K01:
 2207              		.loc 1 864 10 view .LVU659
 2208 023a FFF7FEBF 		b	check_f_key
ARM GAS  /tmp/ccF3vcso.s 			page 102


 2209              	.LVL180:
 2210              	.L216:
 2211              		.cfi_restore_state
 866:src/keys.c    **** 	case K03:
 2212              		.loc 1 866 3 is_stmt 1 view .LVU660
 866:src/keys.c    **** 	case K03:
 2213              		.loc 1 866 10 is_stmt 0 view .LVU661
 2214 023e 2146     		mov	r1, r4
 2215 0240 0120     		movs	r0, #1
 2216              	.LVL181:
 934:src/keys.c    **** 
 2217              		.loc 1 934 1 view .LVU662
 2218 0242 BDE81040 		pop	{r4, lr}
 2219              		.cfi_remember_state
 2220              		.cfi_restore 14
 2221              		.cfi_restore 4
 2222              		.cfi_def_cfa_offset 0
 866:src/keys.c    **** 	case K03:
 2223              		.loc 1 866 10 view .LVU663
 2224 0246 FFF7FEBF 		b	check_f_key
 2225              	.LVL182:
 2226              	.L230:
 2227              		.cfi_restore_state
 833:src/keys.c    **** 	    }
 2228              		.loc 1 833 8 is_stmt 1 view .LVU664
 934:src/keys.c    **** 
 2229              		.loc 1 934 1 is_stmt 0 view .LVU665
 2230 024a BDE81040 		pop	{r4, lr}
 2231              		.cfi_remember_state
 2232              		.cfi_restore 14
 2233              		.cfi_restore 4
 2234              		.cfi_def_cfa_offset 0
 833:src/keys.c    **** 	    }
 2235              		.loc 1 833 15 view .LVU666
 2236 024e 0F21     		movs	r1, #15
 2237 0250 FFF7FEBF 		b	check_f_key
 2238              	.LVL183:
 2239              	.L229:
 2240              		.cfi_restore_state
 841:src/keys.c    **** 	    }
 2241              		.loc 1 841 8 is_stmt 1 view .LVU667
 934:src/keys.c    **** 
 2242              		.loc 1 934 1 is_stmt 0 view .LVU668
 2243 0254 BDE81040 		pop	{r4, lr}
 2244              		.cfi_remember_state
 2245              		.cfi_restore 14
 2246              		.cfi_restore 4
 2247              		.cfi_def_cfa_offset 0
 841:src/keys.c    **** 	    }
 2248              		.loc 1 841 15 view .LVU669
 2249 0258 1021     		movs	r1, #16
 2250 025a 0120     		movs	r0, #1
 2251 025c FFF7FEBF 		b	check_f_key
 2252              	.LVL184:
 2253              	.L228:
 2254              		.cfi_restore_state
 854:src/keys.c    **** 	    }
ARM GAS  /tmp/ccF3vcso.s 			page 103


 2255              		.loc 1 854 15 view .LVU670
 2256 0260 1422     		movs	r2, #20
 2257 0262 1BE7     		b	.L200
 2258              	.L232:
 2259              		.align	2
 2260              	.L231:
 2261 0264 00000000 		.word	main_ram
 2262 0268 00000000 		.word	.LANCHOR1
 2263 026c 00000000 		.word	.LANCHOR2
 2264 0270 00000000 		.word	StateWhileOn
 2265 0274 31020008 		.word	134218289
 2266              		.cfi_endproc
 2267              	.LFE19:
 2269              		.section	.text.process_fg_shifted,"ax",%progbits
 2270              		.align	1
 2271              		.p2align 2,,3
 2272              		.syntax unified
 2273              		.thumb
 2274              		.thumb_func
 2275              		.fpu fpv4-sp-d16
 2277              	process_fg_shifted:
 2278              	.LVL185:
 2279              	.LFB20:
 940:src/keys.c    **** 
 2280              		.loc 1 940 48 is_stmt 1 view -0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 0
 2283              		@ frame_needed = 0, uses_anonymous_args = 0
 943:src/keys.c    **** 		// Row 1
 2284              		.loc 1 943 2 view .LVU672
 994:src/keys.c    **** 		STATE_UNFINISHED,
 2285              		.loc 1 994 2 view .LVU673
1001:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2286              		.loc 1 1001 2 view .LVU674
 2287              	.LBB371:
 2288              	.LBI371:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2289              		.loc 1 114 13 view .LVU675
 2290              	.LBE371:
 115:src/keys.c    **** }
 2291              		.loc 1 115 2 view .LVU676
 2292              	.LBB388:
 2293              	.LBB372:
 2294              	.LBI372:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2295              		.loc 1 104 20 view .LVU677
 2296              	.LBB373:
 105:src/keys.c    **** 	State2.shifts = shift;
 2297              		.loc 1 105 2 view .LVU678
 2298              	.LBB374:
 2299              	.LBI374:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2300              		.loc 1 96 13 view .LVU679
 2301              	.LBB375:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2302              		.loc 1 97 2 view .LVU680
 2303              	.LBE375:
ARM GAS  /tmp/ccF3vcso.s 			page 104


 2304              	.LBE374:
 2305              	.LBE373:
 2306              	.LBE372:
 2307              	.LBE388:
 940:src/keys.c    **** 
 2308              		.loc 1 940 48 is_stmt 0 view .LVU681
 2309 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2310              		.cfi_def_cfa_offset 24
 2311              		.cfi_offset 4, -24
 2312              		.cfi_offset 5, -20
 2313              		.cfi_offset 6, -16
 2314              		.cfi_offset 7, -12
 2315              		.cfi_offset 8, -8
 2316              		.cfi_offset 14, -4
 940:src/keys.c    **** 
 2317              		.loc 1 940 48 view .LVU682
 2318 0004 0446     		mov	r4, r0
 2319              	.LBB389:
 2320              	.LBB384:
 2321              	.LBB380:
 2322              	.LBB378:
 2323              	.LBB376:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2324              		.loc 1 97 18 view .LVU683
 2325 0006 FFF7FEFF 		bl	shift_down
 2326              	.LVL186:
  98:src/keys.c    **** }
 2327              		.loc 1 98 2 is_stmt 1 view .LVU684
  98:src/keys.c    **** }
 2328              		.loc 1 98 52 is_stmt 0 view .LVU685
 2329 000a 0028     		cmp	r0, #0
 2330 000c 72D0     		beq	.L280
 2331 000e DFF89482 		ldr	r8, .L294+16
 2332 0012 0546     		mov	r5, r0
 2333              	.L234:
 2334              	.LVL187:
  98:src/keys.c    **** }
 2335              		.loc 1 98 52 view .LVU686
 2336              	.LBE376:
 2337              	.LBE378:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2338              		.loc 1 106 2 is_stmt 1 view .LVU687
 2339              	.LBE380:
 2340              	.LBE384:
 2341              	.LBE389:
 2342              	.LBB390:
 2343              	.LBB391:
 158:src/keys.c    **** }
 2344              		.loc 1 158 23 is_stmt 0 view .LVU688
 2345 0014 9F4B     		ldr	r3, .L294
 2346              	.LBE391:
 2347              	.LBE390:
1003:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2348              		.loc 1 1003 21 view .LVU689
 2349 0016 A049     		ldr	r1, .L294+4
 2350              	.LBB394:
 2351              	.LBB392:
ARM GAS  /tmp/ccF3vcso.s 			page 105


 158:src/keys.c    **** }
 2352              		.loc 1 158 23 view .LVU690
 2353 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2354              	.LBE392:
 2355              	.LBE394:
1003:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2356              		.loc 1 1003 21 view .LVU691
 2357 001a 4300     		lsls	r3, r0, #1
 2358 001c 022D     		cmp	r5, #2
 2359 001e 08BF     		it	eq
 2360 0020 0133     		addeq	r3, r3, #1
 2361              	.LBB395:
 2362              	.LBB385:
 2363              	.LBB381:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2364              		.loc 1 106 16 view .LVU692
 2365 0022 0022     		movs	r2, #0
 2366              	.LBE381:
 2367              	.LBE385:
 2368              	.LBE395:
1003:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2369              		.loc 1 1003 21 view .LVU693
 2370 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2371              	.LBB396:
 2372              	.LBB386:
 2373              	.LBB382:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2374              		.loc 1 106 16 view .LVU694
 2375 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2376              		.loc 1 108 2 is_stmt 1 view .LVU695
 2377              	.LVL188:
 108:src/keys.c    **** }
 2378              		.loc 1 108 2 is_stmt 0 view .LVU696
 2379              	.LBE382:
 2380              	.LBE386:
 2381              	.LBE396:
1002:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2382              		.loc 1 1002 2 is_stmt 1 view .LVU697
 2383              	.LBB397:
 2384              	.LBI390:
 146:src/keys.c    **** {
 2385              		.loc 1 146 12 view .LVU698
 2386              	.LBB393:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2387              		.loc 1 148 2 view .LVU699
 158:src/keys.c    **** }
 2388              		.loc 1 158 2 view .LVU700
 158:src/keys.c    **** }
 2389              		.loc 1 158 2 is_stmt 0 view .LVU701
 2390              	.LBE393:
 2391              	.LBE397:
1003:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2392              		.loc 1 1003 2 is_stmt 1 view .LVU702
1004:src/keys.c    **** 	if (no_int)
 2393              		.loc 1 1004 2 view .LVU703
 2394 002c 06F47047 		and	r7, r6, #61440
ARM GAS  /tmp/ccF3vcso.s 			page 106


 2395              	.LVL189:
1005:src/keys.c    **** 		op &= ~NO_INT;
 2396              		.loc 1 1005 2 view .LVU704
1005:src/keys.c    **** 		op &= ~NO_INT;
 2397              		.loc 1 1005 5 is_stmt 0 view .LVU705
 2398 0030 B7F5704F 		cmp	r7, #61440
 2399 0034 63D0     		beq	.L288
1008:src/keys.c    **** 	case K00:
 2400              		.loc 1 1008 2 is_stmt 1 view .LVU706
 2401 0036 282C     		cmp	r4, #40
 2402 0038 34D8     		bhi	.L255
 2403 003a DFE804F0 		tbb	[pc, r4]
 2404              	.L256:
 2405 003e D3       		.byte	(.L246-.L256)/2
 2406 003f 39       		.byte	(.L244-.L256)/2
 2407 0040 33       		.byte	(.L255-.L256)/2
 2408 0041 39       		.byte	(.L244-.L256)/2
 2409 0042 33       		.byte	(.L255-.L256)/2
 2410 0043 33       		.byte	(.L255-.L256)/2
 2411 0044 33       		.byte	(.L255-.L256)/2
 2412 0045 33       		.byte	(.L255-.L256)/2
 2413 0046 33       		.byte	(.L255-.L256)/2
 2414 0047 33       		.byte	(.L255-.L256)/2
 2415 0048 33       		.byte	(.L255-.L256)/2
 2416 0049 33       		.byte	(.L255-.L256)/2
 2417 004a 15       		.byte	(.L243-.L256)/2
 2418 004b 33       		.byte	(.L255-.L256)/2
 2419 004c 33       		.byte	(.L255-.L256)/2
 2420 004d 33       		.byte	(.L255-.L256)/2
 2421 004e 33       		.byte	(.L255-.L256)/2
 2422 004f 33       		.byte	(.L255-.L256)/2
 2423 0050 E0       		.byte	(.L242-.L256)/2
 2424 0051 B9       		.byte	(.L241-.L256)/2
 2425 0052 33       		.byte	(.L255-.L256)/2
 2426 0053 33       		.byte	(.L255-.L256)/2
 2427 0054 33       		.byte	(.L255-.L256)/2
 2428 0055 33       		.byte	(.L255-.L256)/2
 2429 0056 33       		.byte	(.L255-.L256)/2
 2430 0057 33       		.byte	(.L255-.L256)/2
 2431 0058 33       		.byte	(.L255-.L256)/2
 2432 0059 33       		.byte	(.L255-.L256)/2
 2433 005a 33       		.byte	(.L255-.L256)/2
 2434 005b 33       		.byte	(.L255-.L256)/2
 2435 005c 44       		.byte	(.L240-.L256)/2
 2436 005d CB       		.byte	(.L239-.L256)/2
 2437 005e 49       		.byte	(.L237-.L256)/2
 2438 005f 49       		.byte	(.L237-.L256)/2
 2439 0060 33       		.byte	(.L255-.L256)/2
 2440 0061 33       		.byte	(.L255-.L256)/2
 2441 0062 33       		.byte	(.L255-.L256)/2
 2442 0063 33       		.byte	(.L255-.L256)/2
 2443 0064 33       		.byte	(.L255-.L256)/2
 2444 0065 49       		.byte	(.L237-.L256)/2
 2445 0066 49       		.byte	(.L237-.L256)/2
 2446 0067 00       		.p2align 1
 2447              	.L243:
1041:src/keys.c    **** 			if (is_bad_cmdline())
ARM GAS  /tmp/ccF3vcso.s 			page 107


 2448              		.loc 1 1041 3 view .LVU707
1041:src/keys.c    **** 			if (is_bad_cmdline())
 2449              		.loc 1 1041 6 is_stmt 0 view .LVU708
 2450 0068 012D     		cmp	r5, #1
 2451 006a 11D1     		bne	.L249
1042:src/keys.c    **** 				return STATE_UNFINISHED;
 2452              		.loc 1 1042 4 is_stmt 1 view .LVU709
1042:src/keys.c    **** 				return STATE_UNFINISHED;
 2453              		.loc 1 1042 8 is_stmt 0 view .LVU710
 2454 006c FFF7FEFF 		bl	is_bad_cmdline
 2455              	.LVL190:
1042:src/keys.c    **** 				return STATE_UNFINISHED;
 2456              		.loc 1 1042 7 view .LVU711
 2457 0070 0028     		cmp	r0, #0
 2458 0072 40F0B380 		bne	.L282
1044:src/keys.c    **** 			State2.alphas = 1;
 2459              		.loc 1 1044 4 is_stmt 1 view .LVU712
 2460 0076 FFF7FEFF 		bl	process_cmdline_set_lift
 2461              	.LVL191:
1045:src/keys.c    **** #ifdef DM42
 2462              		.loc 1 1045 4 view .LVU713
1045:src/keys.c    **** #ifdef DM42
 2463              		.loc 1 1045 18 is_stmt 0 view .LVU714
 2464 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1047:src/keys.c    **** 			display_current_menu();
 2465              		.loc 1 1047 4 view .LVU715
 2466 007e 1020     		movs	r0, #16
1045:src/keys.c    **** #ifdef DM42
 2467              		.loc 1 1045 18 view .LVU716
 2468 0080 43F00803 		orr	r3, r3, #8
 2469 0084 88F81630 		strb	r3, [r8, #22]
1047:src/keys.c    **** 			display_current_menu();
 2470              		.loc 1 1047 4 is_stmt 1 view .LVU717
 2471 0088 FFF7FEFF 		bl	set_menu
 2472              	.LVL192:
1048:src/keys.c    **** #endif
 2473              		.loc 1 1048 4 view .LVU718
 2474 008c FFF7FEFF 		bl	display_current_menu
 2475              	.LVL193:
 2476              	.L249:
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2477              		.loc 1 1093 2 view .LVU719
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2478              		.loc 1 1093 5 is_stmt 0 view .LVU720
 2479 0090 B7F5704F 		cmp	r7, #61440
 2480 0094 06D1     		bne	.L255
 2481              	.L236:
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2482              		.loc 1 1093 13 discriminator 1 view .LVU721
 2483 0096 814B     		ldr	r3, .L294+8
 2484 0098 1B68     		ldr	r3, [r3]
 2485 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2486 009e DA07     		lsls	r2, r3, #31
 2487 00a0 00F19C80 		bmi	.L282
 2488              	.L255:
1096:src/keys.c    **** #undef NO_INT
 2489              		.loc 1 1096 2 is_stmt 1 view .LVU722
ARM GAS  /tmp/ccF3vcso.s 			page 108


 2490              	.LVL194:
 2491              	.LBB398:
 2492              	.LBI398:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2493              		.loc 1 716 12 view .LVU723
 2494              	.LBB399:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 2495              		.loc 1 717 2 view .LVU724
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 2496              		.loc 1 717 6 is_stmt 0 view .LVU725
 2497 00a4 3312     		asrs	r3, r6, #8
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 2498              		.loc 1 717 5 view .LVU726
 2499 00a6 012B     		cmp	r3, #1
 2500 00a8 1FD0     		beq	.L258
 2501              	.LVL195:
 2502              	.L233:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 2503              		.loc 1 717 5 view .LVU727
 2504              	.LBE399:
 2505              	.LBE398:
1098:src/keys.c    **** 
 2506              		.loc 1 1098 1 view .LVU728
 2507 00aa 3046     		mov	r0, r6
 2508 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2509              	.LVL196:
 2510              	.L244:
1030:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2511              		.loc 1 1030 4 is_stmt 1 view .LVU729
1030:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2512              		.loc 1 1030 8 is_stmt 0 view .LVU730
 2513 00b0 7A4B     		ldr	r3, .L294+8
 2514 00b2 1B68     		ldr	r3, [r3]
 2515 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1030:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2516              		.loc 1 1030 7 view .LVU731
 2517 00b8 DB07     		lsls	r3, r3, #31
 2518 00ba 00F19980 		bmi	.L285
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2519              		.loc 1 1093 2 is_stmt 1 view .LVU732
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2520              		.loc 1 1093 5 is_stmt 0 view .LVU733
 2521 00be B7F5704F 		cmp	r7, #61440
 2522 00c2 EFD1     		bne	.L255
 2523 00c4 E7E7     		b	.L236
 2524              	.L240:
1073:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2525              		.loc 1 1073 3 is_stmt 1 view .LVU734
1073:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2526              		.loc 1 1073 18 is_stmt 0 view .LVU735
 2527 00c6 FFF7FEFF 		bl	shift_down
 2528              	.LVL197:
1073:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2529              		.loc 1 1073 6 view .LVU736
 2530 00ca 0028     		cmp	r0, #0
 2531 00cc 40F0BA80 		bne	.L289
 2532              	.L237:
ARM GAS  /tmp/ccF3vcso.s 			page 109


1082:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2533              		.loc 1 1082 3 is_stmt 1 view .LVU737
1082:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2534              		.loc 1 1082 6 is_stmt 0 view .LVU738
 2535 00d0 B6F59C7F 		cmp	r6, #312
 2536 00d4 40F0A580 		bne	.L290
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2537              		.loc 1 1093 2 is_stmt 1 view .LVU739
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2538              		.loc 1 1093 5 is_stmt 0 view .LVU740
 2539 00d8 B7F5704F 		cmp	r7, #61440
 2540 00dc 05D1     		bne	.L258
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2541              		.loc 1 1093 13 view .LVU741
 2542 00de 6F4B     		ldr	r3, .L294+8
 2543 00e0 1B68     		ldr	r3, [r3]
 2544 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2545 00e6 DB07     		lsls	r3, r3, #31
 2546 00e8 78D4     		bmi	.L282
 2547              	.LVL198:
 2548              	.L258:
 2549              	.LBB402:
 2550              	.LBB400:
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2551              		.loc 1 1093 13 view .LVU742
 2552 00ea 3046     		mov	r0, r6
 2553              	.LBE400:
 2554              	.LBE402:
1098:src/keys.c    **** 
 2555              		.loc 1 1098 1 view .LVU743
 2556 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2557              		.cfi_remember_state
 2558              		.cfi_restore 14
 2559              		.cfi_restore 8
 2560              		.cfi_restore 7
 2561              		.cfi_restore 6
 2562              		.cfi_restore 5
 2563              		.cfi_restore 4
 2564              		.cfi_def_cfa_offset 0
 2565              	.LVL199:
 2566              	.LBB403:
 2567              	.LBB401:
1098:src/keys.c    **** 
 2568              		.loc 1 1098 1 view .LVU744
 2569 00f0 FFF7FEBF 		b	check_confirm.part.0
 2570              	.LVL200:
 2571              	.L280:
 2572              		.cfi_restore_state
1098:src/keys.c    **** 
 2573              		.loc 1 1098 1 view .LVU745
 2574              	.LBE401:
 2575              	.LBE403:
 2576              	.LBB404:
 2577              	.LBB387:
 2578              	.LBB383:
 2579              	.LBB379:
 2580              	.LBB377:
ARM GAS  /tmp/ccF3vcso.s 			page 110


  98:src/keys.c    **** }
 2581              		.loc 1 98 52 view .LVU746
 2582 00f4 DFF8AC81 		ldr	r8, .L294+16
 2583 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2584 00fc 8AE7     		b	.L234
 2585              	.LVL201:
 2586              	.L288:
  98:src/keys.c    **** }
 2587              		.loc 1 98 52 view .LVU747
 2588              	.LBE377:
 2589              	.LBE379:
 2590              	.LBE383:
 2591              	.LBE387:
 2592              	.LBE404:
1006:src/keys.c    **** 
 2593              		.loc 1 1006 3 is_stmt 1 view .LVU748
1006:src/keys.c    **** 
 2594              		.loc 1 1006 6 is_stmt 0 view .LVU749
 2595 00fe 26F47046 		bic	r6, r6, #61440
 2596              	.LVL202:
1008:src/keys.c    **** 	case K00:
 2597              		.loc 1 1008 2 is_stmt 1 view .LVU750
 2598 0102 282C     		cmp	r4, #40
 2599 0104 C7D8     		bhi	.L236
 2600 0106 01A3     		adr	r3, .L238
 2601 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2602              		.p2align 2
 2603              	.L238:
 2604 010c E5010000 		.word	.L246+1
 2605 0110 B1000000 		.word	.L244+1
 2606 0114 97000000 		.word	.L236+1
 2607 0118 B1000000 		.word	.L244+1
 2608 011c 97000000 		.word	.L236+1
 2609 0120 97000000 		.word	.L236+1
 2610 0124 97000000 		.word	.L236+1
 2611 0128 97000000 		.word	.L236+1
 2612 012c 97000000 		.word	.L236+1
 2613 0130 97000000 		.word	.L236+1
 2614 0134 97000000 		.word	.L236+1
 2615 0138 97000000 		.word	.L236+1
 2616 013c 69000000 		.word	.L243+1
 2617 0140 97000000 		.word	.L236+1
 2618 0144 97000000 		.word	.L236+1
 2619 0148 97000000 		.word	.L236+1
 2620 014c 97000000 		.word	.L236+1
 2621 0150 97000000 		.word	.L236+1
 2622 0154 FF010000 		.word	.L242+1
 2623 0158 B1010000 		.word	.L241+1
 2624 015c 97000000 		.word	.L236+1
 2625 0160 97000000 		.word	.L236+1
 2626 0164 97000000 		.word	.L236+1
 2627 0168 97000000 		.word	.L236+1
 2628 016c 97000000 		.word	.L236+1
 2629 0170 97000000 		.word	.L236+1
 2630 0174 97000000 		.word	.L236+1
 2631 0178 97000000 		.word	.L236+1
 2632 017c 97000000 		.word	.L236+1
ARM GAS  /tmp/ccF3vcso.s 			page 111


 2633 0180 97000000 		.word	.L236+1
 2634 0184 C7000000 		.word	.L240+1
 2635 0188 D5010000 		.word	.L239+1
 2636 018c D1000000 		.word	.L237+1
 2637 0190 D1000000 		.word	.L237+1
 2638 0194 97000000 		.word	.L236+1
 2639 0198 97000000 		.word	.L236+1
 2640 019c 97000000 		.word	.L236+1
 2641 01a0 97000000 		.word	.L236+1
 2642 01a4 97000000 		.word	.L236+1
 2643 01a8 D1000000 		.word	.L237+1
 2644 01ac D1000000 		.word	.L237+1
 2645              		.p2align 1
 2646              	.L241:
1054:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2647              		.loc 1 1054 4 view .LVU751
1054:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2648              		.loc 1 1054 7 is_stmt 0 view .LVU752
 2649 01b0 022D     		cmp	r5, #2
 2650 01b2 7FF46DAF 		bne	.L249
1054:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2651              		.loc 1 1054 27 discriminator 1 view .LVU753
 2652 01b6 394B     		ldr	r3, .L294+8
 2653 01b8 1B68     		ldr	r3, [r3]
 2654 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2655 01be DC07     		lsls	r4, r3, #31
 2656 01c0 7FF566AF 		bpl	.L249
1054:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2657              		.loc 1 1054 45 discriminator 2 view .LVU754
 2658 01c4 0D20     		movs	r0, #13
 2659              	.LVL203:
1054:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2660              		.loc 1 1054 45 discriminator 2 view .LVU755
 2661 01c6 FFF7FEFF 		bl	intltr
 2662              	.LVL204:
1054:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2663              		.loc 1 1054 42 discriminator 2 view .LVU756
 2664 01ca 0028     		cmp	r0, #0
 2665 01cc 3FF460AF 		beq	.L249
1055:src/keys.c    **** 	  }
 2666              		.loc 1 1055 13 view .LVU757
 2667 01d0 1226     		movs	r6, #18
 2668              	.LVL205:
1055:src/keys.c    **** 	  }
 2669              		.loc 1 1055 13 view .LVU758
 2670 01d2 6AE7     		b	.L233
 2671              	.LVL206:
 2672              	.L239:
1065:src/keys.c    **** 			return STATE_UNFINISHED;
 2673              		.loc 1 1065 3 is_stmt 1 view .LVU759
1065:src/keys.c    **** 			return STATE_UNFINISHED;
 2674              		.loc 1 1065 7 is_stmt 0 view .LVU760
 2675 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2676              	.LVL207:
1065:src/keys.c    **** 			return STATE_UNFINISHED;
 2677              		.loc 1 1065 6 view .LVU761
 2678 01d8 0028     		cmp	r0, #0
ARM GAS  /tmp/ccF3vcso.s 			page 112


 2679 01da 40D0     		beq	.L291
 2680              	.LVL208:
 2681              	.L282:
1086:src/keys.c    **** 		}
 2682              		.loc 1 1086 11 view .LVU762
 2683 01dc 3326     		movs	r6, #51
 2684              	.LVL209:
1098:src/keys.c    **** 
 2685              		.loc 1 1098 1 view .LVU763
 2686 01de 3046     		mov	r0, r6
 2687 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2688              	.LVL210:
 2689              	.L246:
1010:src/keys.c    **** 	    //	    print_debug(100,0);
 2690              		.loc 1 1010 4 is_stmt 1 view .LVU764
1010:src/keys.c    **** 	    //	    print_debug(100,0);
 2691              		.loc 1 1010 8 is_stmt 0 view .LVU765
 2692 01e4 2D4B     		ldr	r3, .L294+8
 2693 01e6 1B68     		ldr	r3, [r3]
 2694 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1010:src/keys.c    **** 	    //	    print_debug(100,0);
 2695              		.loc 1 1010 7 view .LVU766
 2696 01ec DA07     		lsls	r2, r3, #31
 2697 01ee 3CD5     		bpl	.L292
 2698              	.L285:
1030:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2699              		.loc 1 1030 20 discriminator 1 view .LVU767
 2700 01f0 012D     		cmp	r5, #1
 2701 01f2 48D0     		beq	.L293
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2702              		.loc 1 1093 2 is_stmt 1 view .LVU768
1093:src/keys.c    **** 		return STATE_UNFINISHED;
 2703              		.loc 1 1093 5 is_stmt 0 view .LVU769
 2704 01f4 B7F5704F 		cmp	r7, #61440
 2705 01f8 7FF454AF 		bne	.L255
 2706 01fc EEE7     		b	.L282
 2707              	.L242:
1059:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2708              		.loc 1 1059 4 is_stmt 1 view .LVU770
1059:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2709              		.loc 1 1059 7 is_stmt 0 view .LVU771
 2710 01fe 022D     		cmp	r5, #2
 2711 0200 7FF446AF 		bne	.L249
1059:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2712              		.loc 1 1059 27 discriminator 1 view .LVU772
 2713 0204 254B     		ldr	r3, .L294+8
 2714 0206 1B68     		ldr	r3, [r3]
 2715 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2716 020c D807     		lsls	r0, r3, #31
 2717              	.LVL211:
1059:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2718              		.loc 1 1059 27 discriminator 1 view .LVU773
 2719 020e 7FF53FAF 		bpl	.L249
1059:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2720              		.loc 1 1059 45 discriminator 2 view .LVU774
 2721 0212 0E20     		movs	r0, #14
 2722 0214 FFF7FEFF 		bl	intltr
ARM GAS  /tmp/ccF3vcso.s 			page 113


 2723              	.LVL212:
1059:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2724              		.loc 1 1059 42 discriminator 2 view .LVU775
 2725 0218 0028     		cmp	r0, #0
 2726 021a 3FF439AF 		beq	.L249
1060:src/keys.c    **** 	  }
 2727              		.loc 1 1060 13 view .LVU776
 2728 021e 1326     		movs	r6, #19
 2729              	.LVL213:
1060:src/keys.c    **** 	  }
 2730              		.loc 1 1060 13 view .LVU777
 2731 0220 43E7     		b	.L233
 2732              	.LVL214:
 2733              	.L290:
1083:src/keys.c    **** 				init_arg((enum rarg) op);
 2734              		.loc 1 1083 4 is_stmt 1 view .LVU778
1083:src/keys.c    **** 				init_arg((enum rarg) op);
 2735              		.loc 1 1083 7 is_stmt 0 view .LVU779
 2736 0222 B7F5704F 		cmp	r7, #61440
 2737 0226 05D1     		bne	.L254
1083:src/keys.c    **** 				init_arg((enum rarg) op);
 2738              		.loc 1 1083 18 discriminator 1 view .LVU780
 2739 0228 1C4B     		ldr	r3, .L294+8
 2740 022a 1B68     		ldr	r3, [r3]
 2741 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1083:src/keys.c    **** 				init_arg((enum rarg) op);
 2742              		.loc 1 1083 8 discriminator 1 view .LVU781
 2743 0230 D907     		lsls	r1, r3, #31
 2744 0232 D3D4     		bmi	.L282
 2745              	.L254:
1084:src/keys.c    **** 			}
 2746              		.loc 1 1084 5 is_stmt 1 view .LVU782
 2747              	.LVL215:
 2748              	.LBB405:
 2749              	.LBI405:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2750              		.loc 1 552 13 view .LVU783
 2751              	.LBB406:
 553:src/keys.c    **** 		return;
 2752              		.loc 1 553 2 view .LVU784
 553:src/keys.c    **** 		return;
 2753              		.loc 1 553 6 is_stmt 0 view .LVU785
 2754 0234 FFF7FEFF 		bl	is_bad_cmdline
 2755              	.LVL216:
 553:src/keys.c    **** 		return;
 2756              		.loc 1 553 5 view .LVU786
 2757 0238 0028     		cmp	r0, #0
 2758 023a CFD1     		bne	.L282
 2759 023c F0B2     		uxtb	r0, r6
 2760 023e FFF7FEFF 		bl	init_arg.part.0
 2761              	.LVL217:
 2762 0242 CBE7     		b	.L282
 2763              	.LVL218:
 2764              	.L289:
 553:src/keys.c    **** 		return;
 2765              		.loc 1 553 5 view .LVU787
 2766              	.LBE406:
ARM GAS  /tmp/ccF3vcso.s 			page 114


 2767              	.LBE405:
1074:src/keys.c    **** 			return STATE_UNFINISHED;
 2768              		.loc 1 1074 4 is_stmt 1 view .LVU788
1074:src/keys.c    **** 			return STATE_UNFINISHED;
 2769              		.loc 1 1074 26 is_stmt 0 view .LVU789
 2770 0244 A5F10105 		sub	r5, #1
 2771              	.LVL219:
1074:src/keys.c    **** 			return STATE_UNFINISHED;
 2772              		.loc 1 1074 17 view .LVU790
 2773 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1074:src/keys.c    **** 			return STATE_UNFINISHED;
 2774              		.loc 1 1074 26 view .LVU791
 2775 024c B5FA85F5 		clz	r5, r5
 2776 0250 6D09     		lsrs	r5, r5, #5
1074:src/keys.c    **** 			return STATE_UNFINISHED;
 2777              		.loc 1 1074 17 view .LVU792
 2778 0252 65F3C713 		bfi	r3, r5, #7, #1
 2779 0256 88F81730 		strb	r3, [r8, #23]
1075:src/keys.c    **** 		}
 2780              		.loc 1 1075 4 is_stmt 1 view .LVU793
1075:src/keys.c    **** 		}
 2781              		.loc 1 1075 11 is_stmt 0 view .LVU794
 2782 025a 3326     		movs	r6, #51
 2783              	.LVL220:
1075:src/keys.c    **** 		}
 2784              		.loc 1 1075 11 view .LVU795
 2785 025c 25E7     		b	.L233
 2786              	.LVL221:
 2787              	.L291:
1067:src/keys.c    **** 		State2.test = op;
 2788              		.loc 1 1067 3 is_stmt 1 view .LVU796
 2789 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2790              	.LVL222:
1068:src/keys.c    **** 		return STATE_UNFINISHED;
 2791              		.loc 1 1068 3 view .LVU797
1068:src/keys.c    **** 		return STATE_UNFINISHED;
 2792              		.loc 1 1068 15 is_stmt 0 view .LVU798
 2793 0262 88F80F60 		strb	r6, [r8, #15]
1069:src/keys.c    **** 
 2794              		.loc 1 1069 3 is_stmt 1 view .LVU799
1069:src/keys.c    **** 
 2795              		.loc 1 1069 10 is_stmt 0 view .LVU800
 2796 0266 3326     		movs	r6, #51
 2797              	.LVL223:
1069:src/keys.c    **** 
 2798              		.loc 1 1069 10 view .LVU801
 2799 0268 1FE7     		b	.L233
 2800              	.LVL224:
 2801              	.L292:
1012:src/keys.c    **** 	    State2.dot = op;
 2802              		.loc 1 1012 6 is_stmt 1 view .LVU802
1013:src/keys.c    **** 	    // State2.cmplx = 0;
 2803              		.loc 1 1013 6 view .LVU803
1012:src/keys.c    **** 	    State2.dot = op;
 2804              		.loc 1 1012 17 is_stmt 0 view .LVU804
 2805 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2806 026e 06F00103 		and	r3, r6, #1
ARM GAS  /tmp/ccF3vcso.s 			page 115


 2807 0272 9B01     		lsls	r3, r3, #6
 2808 0274 43F02003 		orr	r3, r3, #32
 2809 0278 22F06002 		bic	r2, r2, #96
 2810 027c 1343     		orrs	r3, r3, r2
 2811 027e 88F81530 		strb	r3, [r8, #21]
1015:src/keys.c    **** 	  }
 2812              		.loc 1 1015 6 is_stmt 1 view .LVU805
1015:src/keys.c    **** 	  }
 2813              		.loc 1 1015 13 is_stmt 0 view .LVU806
 2814 0282 3326     		movs	r6, #51
 2815              	.LVL225:
1015:src/keys.c    **** 	  }
 2816              		.loc 1 1015 13 view .LVU807
 2817 0284 11E7     		b	.L233
 2818              	.LVL226:
 2819              	.L293:
1031:src/keys.c    **** 		}
 2820              		.loc 1 1031 4 is_stmt 1 view .LVU808
1031:src/keys.c    **** 		}
 2821              		.loc 1 1031 34 is_stmt 0 view .LVU809
 2822 0286 064B     		ldr	r3, .L294+12
1098:src/keys.c    **** 
 2823              		.loc 1 1098 1 view .LVU810
 2824 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2825              		.cfi_restore 14
 2826              		.cfi_restore 8
 2827              		.cfi_restore 7
 2828              		.cfi_restore 6
 2829              		.cfi_restore 5
 2830              		.cfi_restore 4
 2831              		.cfi_def_cfa_offset 0
 2832              	.LVL227:
1031:src/keys.c    **** 		}
 2833              		.loc 1 1031 11 view .LVU811
 2834 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2835 0290 FFF7FEBF 		b	check_f_key
 2836              	.LVL228:
 2837              	.L295:
1031:src/keys.c    **** 		}
 2838              		.loc 1 1031 11 view .LVU812
 2839              		.align	2
 2840              	.L294:
 2841 0294 00000000 		.word	.LANCHOR1
 2842 0298 00000000 		.word	.LANCHOR3
 2843 029c 00000000 		.word	main_ram
 2844 02a0 00000000 		.word	.LANCHOR4
 2845 02a4 00000000 		.word	StateWhileOn
 2846              		.cfi_endproc
 2847              	.LFE20:
 2849              		.section	.text.set_window,"ax",%progbits
 2850              		.align	1
 2851              		.p2align 2,,3
 2852              		.syntax unified
 2853              		.thumb
 2854              		.thumb_func
 2855              		.fpu fpv4-sp-d16
 2857              	set_window:
ARM GAS  /tmp/ccF3vcso.s 			page 116


 2858              	.LVL229:
 2859              	.LFB58:
2989:src/keys.c    **** 
2990:src/keys.c    **** 
2991:src/keys.c    **** /*
2992:src/keys.c    ****  *  CAT command
2993:src/keys.c    ****  */
2994:src/keys.c    **** static int process_labellist(const keycode c) {
2995:src/keys.c    **** 	unsigned int pc = State2.digval;
2996:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2997:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2998:src/keys.c    **** 	const int opcode = getprog(pc);
2999:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
3000:src/keys.c    **** 	const int direct = State2.runmode;
3001:src/keys.c    **** 	const enum shifts shift = reset_shift();
3002:src/keys.c    **** 	int op = STATE_UNFINISHED;
3003:src/keys.c    **** 
3004:src/keys.c    **** 	if (n < REGION_XROM) {
3005:src/keys.c    **** 		// Digits take you to that segment
3006:src/keys.c    **** 		pc = addrLIB(1, n);
3007:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
3008:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
3009:src/keys.c    **** 		State2.digval = pc;
3010:src/keys.c    **** 		return STATE_UNFINISHED;
3011:src/keys.c    **** 	}
3012:src/keys.c    **** 
3013:src/keys.c    **** 	switch (c | (shift << 8)) {
3014:src/keys.c    **** 
3015:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3016:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3017:src/keys.c    **** 		goto next;
3018:src/keys.c    **** 
3019:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3020:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3021:src/keys.c    **** 	case K_DOWN:				// Find next label
3022:src/keys.c    **** 	next:
3023:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3024:src/keys.c    **** 		return STATE_UNFINISHED;
3025:src/keys.c    **** 
3026:src/keys.c    **** 	case K_UP:				// Find previous label
3027:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3028:src/keys.c    **** 		return STATE_UNFINISHED;
3029:src/keys.c    **** 
3030:src/keys.c    **** 	case K24:				// <- exits
3031:src/keys.c    **** 		break;
3032:src/keys.c    **** 
3033:src/keys.c    **** 	case K20:				// ENTER^
3034:src/keys.c    **** 	set_pc_and_exit:
3035:src/keys.c    **** 		set_pc(pc);			// forced branch
3036:src/keys.c    **** 		break;
3037:src/keys.c    **** 
3038:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3039:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3040:src/keys.c    **** 		goto set_pc_and_exit;
3041:src/keys.c    **** 
3042:src/keys.c    **** 	case K10:				// STO
3043:src/keys.c    **** 	case K11:				// RCL
ARM GAS  /tmp/ccF3vcso.s 			page 117


3044:src/keys.c    **** 	  //#ifndef DM42	
3045:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3046:src/keys.c    **** 	  //#endif
3047:src/keys.c    **** /* #ifdef DM42 */
3048:src/keys.c    **** /* 	        op = OP_NIL; */
3049:src/keys.c    **** /* #endif	     */
3050:src/keys.c    **** 	  goto set_pc_and_exit;
3051:src/keys.c    **** #ifdef DM42
3052:src/keys.c    **** 	case K05:				// XEQ
3053:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3054:src/keys.c    **** 		goto xeq_or_gto;
3055:src/keys.c    **** 
3056:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3057:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3058:src/keys.c    **** 	xeq_or_gto:
3059:src/keys.c    **** 		if (label)
3060:src/keys.c    **** 			break;
3061:src/keys.c    **** 		return STATE_UNFINISHED;
3062:src/keys.c    **** #else
3063:src/keys.c    **** 	case K30:				// XEQ
3064:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3065:src/keys.c    **** 		goto xeq_or_gto;
3066:src/keys.c    **** 
3067:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3068:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3069:src/keys.c    **** 	xeq_or_gto:
3070:src/keys.c    **** 		if (label)
3071:src/keys.c    **** 			break;
3072:src/keys.c    **** 		return STATE_UNFINISHED;
3073:src/keys.c    **** #endif		
3074:src/keys.c    **** 	case K63:				// R/S
3075:src/keys.c    **** 		if (direct && label) {
3076:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3077:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3078:src/keys.c    **** 			break;
3079:src/keys.c    **** 		}
3080:src/keys.c    **** 		return STATE_UNFINISHED;
3081:src/keys.c    **** 
3082:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3083:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3084:src/keys.c    **** 		goto set_pc_and_exit;
3085:src/keys.c    **** 
3086:src/keys.c    **** 	default:
3087:src/keys.c    **** 		return STATE_UNFINISHED;
3088:src/keys.c    **** 	}
3089:src/keys.c    **** 	State2.digval = 0;
3090:src/keys.c    **** 	State2.labellist = 0;
3091:src/keys.c    **** 	return check_confirm(op);
3092:src/keys.c    **** }
3093:src/keys.c    **** 
3094:src/keys.c    **** 
3095:src/keys.c    **** static void set_window(int c) {
 2860              		.loc 1 3095 31 is_stmt 1 view -0
 2861              		.cfi_startproc
 2862              		@ args = 0, pretend = 0, frame = 0
 2863              		@ frame_needed = 0, uses_anonymous_args = 0
3096:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 118


3097:src/keys.c    **** 	if (State2.runmode) {
 2864              		.loc 1 3097 2 view .LVU814
3095:src/keys.c    **** 
 2865              		.loc 1 3095 31 is_stmt 0 view .LVU815
 2866 0000 38B5     		push	{r3, r4, r5, lr}
 2867              		.cfi_def_cfa_offset 16
 2868              		.cfi_offset 3, -16
 2869              		.cfi_offset 4, -12
 2870              		.cfi_offset 5, -8
 2871              		.cfi_offset 14, -4
 2872              		.loc 1 3097 6 view .LVU816
 2873 0002 224C     		ldr	r4, .L311
 2874 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2875              		.loc 1 3097 5 view .LVU817
 2876 0006 5A06     		lsls	r2, r3, #25
 2877 0008 00D4     		bmi	.L308
 2878              	.LVL230:
 2879              	.L296:
3098:src/keys.c    **** 		process_cmdline_set_lift();
3099:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3100:src/keys.c    **** 		State2.disp_freeze = 0;
3101:src/keys.c    **** 		display();	
3102:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3103:src/keys.c    **** 			if (UState.intm) {
3104:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3105:src/keys.c    **** 					State2.window--;
3106:src/keys.c    **** 				return;
3107:src/keys.c    **** 			}
3108:src/keys.c    **** 			else 
3109:src/keys.c    **** 				State2.window = is_dblmode();
3110:src/keys.c    **** 		}
3111:src/keys.c    **** 		else {
3112:src/keys.c    **** 			if (UState.intm) {
3113:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3114:src/keys.c    **** 					State2.window++;
3115:src/keys.c    **** 				return;
3116:src/keys.c    **** 			}
3117:src/keys.c    **** 			else
3118:src/keys.c    **** 				State2.window = 0;
3119:src/keys.c    **** 		}
3120:src/keys.c    **** 		set_smode(SDISP_SHOW);
3121:src/keys.c    **** 	}
3122:src/keys.c    **** }
 2880              		.loc 1 3122 1 view .LVU818
 2881 000a 38BD     		pop	{r3, r4, r5, pc}
 2882              	.LVL231:
 2883              	.L308:
3098:src/keys.c    **** 		process_cmdline_set_lift();
 2884              		.loc 1 3098 3 is_stmt 1 view .LVU819
 2885 000c 0546     		mov	r5, r0
 2886 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2887              	.LVL232:
3100:src/keys.c    **** 		display();	
 2888              		.loc 1 3100 3 view .LVU820
3100:src/keys.c    **** 		display();	
 2889              		.loc 1 3100 22 is_stmt 0 view .LVU821
 2890 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccF3vcso.s 			page 119


 2891 0014 6FF30413 		bfc	r3, #4, #1
 2892 0018 E375     		strb	r3, [r4, #23]
3101:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2893              		.loc 1 3101 3 is_stmt 1 view .LVU822
 2894 001a FFF7FEFF 		bl	display
 2895              	.LVL233:
3102:src/keys.c    **** 			if (UState.intm) {
 2896              		.loc 1 3102 3 view .LVU823
3103:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2897              		.loc 1 3103 8 is_stmt 0 view .LVU824
 2898 001e 1C4B     		ldr	r3, .L311+4
 2899 0020 1B68     		ldr	r3, [r3]
3102:src/keys.c    **** 			if (UState.intm) {
 2900              		.loc 1 3102 6 view .LVU825
 2901 0022 2C2D     		cmp	r5, #44
3103:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2902              		.loc 1 3103 8 view .LVU826
 2903 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
3102:src/keys.c    **** 			if (UState.intm) {
 2904              		.loc 1 3102 6 view .LVU827
 2905 0028 18D0     		beq	.L309
3112:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2906              		.loc 1 3112 4 is_stmt 1 view .LVU828
3112:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2907              		.loc 1 3112 7 is_stmt 0 view .LVU829
 2908 002a 13F00103 		ands	r3, r3, #1
 2909 002e 09D1     		bne	.L310
3118:src/keys.c    **** 		}
 2910              		.loc 1 3118 5 is_stmt 1 view .LVU830
3118:src/keys.c    **** 		}
 2911              		.loc 1 3118 19 is_stmt 0 view .LVU831
 2912 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2913 0032 63F3C502 		bfi	r2, r3, #3, #3
 2914 0036 2275     		strb	r2, [r4, #20]
 2915              	.L302:
3120:src/keys.c    **** 	}
 2916              		.loc 1 3120 3 is_stmt 1 view .LVU832
 2917              	.LVL234:
 2918              	.LBB413:
 2919              	.LBI413:
 743:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2920              		.loc 1 743 13 view .LVU833
 2921              	.LBB414:
 744:src/keys.c    **** }
 2922              		.loc 1 744 2 view .LVU834
 744:src/keys.c    **** }
 2923              		.loc 1 744 15 is_stmt 0 view .LVU835
 2924 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2925 003a 013B     		subs	r3, r3, #1
 2926 003c 18BF     		it	ne
 2927 003e 0123     		movne	r3, #1
 2928 0040 6374     		strb	r3, [r4, #17]
 2929              	.LVL235:
 744:src/keys.c    **** }
 2930              		.loc 1 744 15 view .LVU836
 2931              	.LBE414:
 2932              	.LBE413:
ARM GAS  /tmp/ccF3vcso.s 			page 120


 2933              		.loc 1 3122 1 view .LVU837
 2934 0042 38BD     		pop	{r3, r4, r5, pc}
 2935              	.LVL236:
 2936              	.L310:
3113:src/keys.c    **** 					State2.window++;
 2937              		.loc 1 3113 5 is_stmt 1 view .LVU838
3113:src/keys.c    **** 					State2.window++;
 2938              		.loc 1 3113 22 is_stmt 0 view .LVU839
 2939 0044 134A     		ldr	r2, .L311+8
3113:src/keys.c    **** 					State2.window++;
 2940              		.loc 1 3113 42 view .LVU840
 2941 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3113:src/keys.c    **** 					State2.window++;
 2942              		.loc 1 3113 8 view .LVU841
 2943 0048 1168     		ldr	r1, [r2]
3113:src/keys.c    **** 					State2.window++;
 2944              		.loc 1 3113 42 view .LVU842
 2945 004a C3F3C202 		ubfx	r2, r3, #3, #3
3113:src/keys.c    **** 					State2.window++;
 2946              		.loc 1 3113 8 view .LVU843
 2947 004e 8A42     		cmp	r2, r1
 2948 0050 DBDA     		bge	.L296
3114:src/keys.c    **** 				return;
 2949              		.loc 1 3114 6 is_stmt 1 view .LVU844
3114:src/keys.c    **** 				return;
 2950              		.loc 1 3114 19 is_stmt 0 view .LVU845
 2951 0052 0132     		adds	r2, r2, #1
 2952 0054 62F3C503 		bfi	r3, r2, #3, #3
 2953 0058 2375     		strb	r3, [r4, #20]
 2954              		.loc 1 3122 1 view .LVU846
 2955 005a 38BD     		pop	{r3, r4, r5, pc}
 2956              	.LVL237:
 2957              	.L309:
3103:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2958              		.loc 1 3103 4 is_stmt 1 view .LVU847
3103:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2959              		.loc 1 3103 7 is_stmt 0 view .LVU848
 2960 005c DB07     		lsls	r3, r3, #31
 2961 005e 0ED5     		bpl	.L300
 2962              	.LBB415:
 2963              	.LBI415:
3095:src/keys.c    **** 
 2964              		.loc 1 3095 13 is_stmt 1 view .LVU849
 2965              	.LVL238:
 2966              	.LBB416:
3104:src/keys.c    **** 					State2.window--;
 2967              		.loc 1 3104 5 view .LVU850
3104:src/keys.c    **** 					State2.window--;
 2968              		.loc 1 3104 22 is_stmt 0 view .LVU851
 2969 0060 0C4B     		ldr	r3, .L311+8
3104:src/keys.c    **** 					State2.window--;
 2970              		.loc 1 3104 8 view .LVU852
 2971 0062 1B68     		ldr	r3, [r3]
 2972 0064 002B     		cmp	r3, #0
 2973 0066 D0DD     		ble	.L296
3104:src/keys.c    **** 					State2.window--;
 2974              		.loc 1 3104 43 view .LVU853
ARM GAS  /tmp/ccF3vcso.s 			page 121


 2975 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3104:src/keys.c    **** 					State2.window--;
 2976              		.loc 1 3104 26 view .LVU854
 2977 006a 13F0380F 		tst	r3, #56
 2978 006e CCD0     		beq	.L296
3105:src/keys.c    **** 				return;
 2979              		.loc 1 3105 6 is_stmt 1 view .LVU855
3105:src/keys.c    **** 				return;
 2980              		.loc 1 3105 12 is_stmt 0 view .LVU856
 2981 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3105:src/keys.c    **** 				return;
 2982              		.loc 1 3105 19 view .LVU857
 2983 0074 0732     		adds	r2, r2, #7
 2984 0076 62F3C503 		bfi	r3, r2, #3, #3
 2985 007a 2375     		strb	r3, [r4, #20]
 2986              	.LBE416:
 2987              	.LBE415:
 2988              		.loc 1 3122 1 view .LVU858
 2989 007c 38BD     		pop	{r3, r4, r5, pc}
 2990              	.LVL239:
 2991              	.L300:
3109:src/keys.c    **** 		}
 2992              		.loc 1 3109 5 is_stmt 1 view .LVU859
3109:src/keys.c    **** 		}
 2993              		.loc 1 3109 21 is_stmt 0 view .LVU860
 2994 007e FFF7FEFF 		bl	is_dblmode
 2995              	.LVL240:
3109:src/keys.c    **** 		}
 2996              		.loc 1 3109 19 view .LVU861
 2997 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2998 0084 60F3C503 		bfi	r3, r0, #3, #3
 2999 0088 2375     		strb	r3, [r4, #20]
 3000 008a D5E7     		b	.L302
 3001              	.L312:
 3002              		.align	2
 3003              	.L311:
 3004 008c 00000000 		.word	StateWhileOn
 3005 0090 00000000 		.word	main_ram
 3006 0094 00000000 		.word	IntMaxWindow
 3007              		.cfi_endproc
 3008              	.LFE58:
 3010              		.section	.text.arg_storcl,"ax",%progbits
 3011              		.align	1
 3012              		.p2align 2,,3
 3013              		.syntax unified
 3014              		.thumb
 3015              		.thumb_func
 3016              		.fpu fpv4-sp-d16
 3018              	arg_storcl:
 3019              	.LVL241:
 3020              	.LFB39:
2021:src/keys.c    **** 	unsigned int b = CmdBase;
 3021              		.loc 1 2021 56 is_stmt 1 view -0
 3022              		.cfi_startproc
 3023              		@ args = 0, pretend = 0, frame = 0
 3024              		@ frame_needed = 0, uses_anonymous_args = 0
 3025              		@ link register save eliminated.
ARM GAS  /tmp/ccF3vcso.s 			page 122


2022:src/keys.c    **** 
 3026              		.loc 1 2022 2 view .LVU863
2022:src/keys.c    **** 
 3027              		.loc 1 2022 19 is_stmt 0 view .LVU864
 3028 0000 0F4A     		ldr	r2, .L345
 3029 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3030              	.LVL242:
2024:src/keys.c    **** 		CmdBase += n;
 3031              		.loc 1 2024 2 is_stmt 1 view .LVU865
 3032              	.LBB425:
 3033              	.LBI425:
2012:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3034              		.loc 1 2012 12 view .LVU866
 3035              	.LBB426:
2017:src/keys.c    **** #endif
 3036              		.loc 1 2017 2 view .LVU867
2017:src/keys.c    **** #endif
 3037              		.loc 1 2017 41 is_stmt 0 view .LVU868
 3038 0004 032B     		cmp	r3, #3
 3039 0006 14D0     		beq	.L314
2017:src/keys.c    **** #endif
 3040              		.loc 1 2017 24 view .LVU869
 3041 0008 0A2B     		cmp	r3, #10
 3042 000a 12D0     		beq	.L314
 3043              	.LVL243:
 3044              	.LBB427:
 3045              	.LBI427:
2012:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3046              		.loc 1 2012 12 is_stmt 1 view .LVU870
 3047              	.LBB428:
2017:src/keys.c    **** #endif
 3048              		.loc 1 2017 41 is_stmt 0 view .LVU871
 3049 000c 19B1     		cbz	r1, .L315
2017:src/keys.c    **** #endif
 3050              		.loc 1 2017 51 view .LVU872
 3051 000e 152B     		cmp	r3, #21
 3052 0010 0FD0     		beq	.L314
2017:src/keys.c    **** #endif
 3053              		.loc 1 2017 70 view .LVU873
 3054 0012 1A2B     		cmp	r3, #26
 3055 0014 0DD0     		beq	.L314
 3056              	.L315:
 3057              	.LVL244:
2017:src/keys.c    **** #endif
 3058              		.loc 1 2017 70 view .LVU874
 3059              	.LBE428:
 3060              	.LBE427:
 3061              	.LBE426:
 3062              	.LBE425:
2029:src/keys.c    **** 		b -= n;
 3063              		.loc 1 2029 2 is_stmt 1 view .LVU875
2029:src/keys.c    **** 		b -= n;
 3064              		.loc 1 2029 5 is_stmt 0 view .LVU876
 3065 0016 8342     		cmp	r3, r0
 3066 0018 09D3     		bcc	.L320
2030:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3067              		.loc 1 2030 3 is_stmt 1 view .LVU877
ARM GAS  /tmp/ccF3vcso.s 			page 123


2030:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3068              		.loc 1 2030 5 is_stmt 0 view .LVU878
 3069 001a 1B1A     		subs	r3, r3, r0
 3070              	.LVL245:
2031:src/keys.c    **** 			CmdBase = b;
 3071              		.loc 1 2031 3 is_stmt 1 view .LVU879
 3072              	.LBB429:
 3073              	.LBI429:
2012:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3074              		.loc 1 2012 12 view .LVU880
 3075              	.LBB430:
2017:src/keys.c    **** #endif
 3076              		.loc 1 2017 2 view .LVU881
2017:src/keys.c    **** #endif
 3077              		.loc 1 2017 41 is_stmt 0 view .LVU882
 3078 001c 032B     		cmp	r3, #3
 3079 001e 0CD0     		beq	.L318
2017:src/keys.c    **** #endif
 3080              		.loc 1 2017 24 view .LVU883
 3081 0020 0A2B     		cmp	r3, #10
 3082 0022 0AD0     		beq	.L318
 3083              	.LVL246:
 3084              	.LBB431:
 3085              	.LBI431:
2012:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3086              		.loc 1 2012 12 is_stmt 1 view .LVU884
 3087              	.LBB432:
2017:src/keys.c    **** #endif
 3088              		.loc 1 2017 41 is_stmt 0 view .LVU885
 3089 0024 19B1     		cbz	r1, .L320
2017:src/keys.c    **** #endif
 3090              		.loc 1 2017 51 view .LVU886
 3091 0026 152B     		cmp	r3, #21
 3092 0028 07D0     		beq	.L318
2017:src/keys.c    **** #endif
 3093              		.loc 1 2017 70 view .LVU887
 3094 002a 1A2B     		cmp	r3, #26
 3095 002c 05D0     		beq	.L318
 3096              	.LVL247:
 3097              	.L320:
2017:src/keys.c    **** #endif
 3098              		.loc 1 2017 70 view .LVU888
 3099              	.LBE432:
 3100              	.LBE431:
 3101              	.LBE430:
 3102              	.LBE429:
2036:src/keys.c    **** }
 3103              		.loc 1 2036 9 view .LVU889
 3104 002e 0020     		movs	r0, #0
 3105              	.LVL248:
2037:src/keys.c    **** 
 3106              		.loc 1 2037 1 view .LVU890
 3107 0030 7047     		bx	lr
 3108              	.LVL249:
 3109              	.L314:
2025:src/keys.c    **** 		return 1;
 3110              		.loc 1 2025 3 is_stmt 1 view .LVU891
ARM GAS  /tmp/ccF3vcso.s 			page 124


2025:src/keys.c    **** 		return 1;
 3111              		.loc 1 2025 11 is_stmt 0 view .LVU892
 3112 0032 1844     		add	r0, r0, r3
 3113              	.LVL250:
2025:src/keys.c    **** 		return 1;
 3114              		.loc 1 2025 11 view .LVU893
 3115 0034 D077     		strb	r0, [r2, #31]
2026:src/keys.c    **** 	}
 3116              		.loc 1 2026 3 is_stmt 1 view .LVU894
2026:src/keys.c    **** 	}
 3117              		.loc 1 2026 10 is_stmt 0 view .LVU895
 3118 0036 0120     		movs	r0, #1
 3119 0038 7047     		bx	lr
 3120              	.LVL251:
 3121              	.L318:
2032:src/keys.c    **** 			return 1;
 3122              		.loc 1 2032 4 is_stmt 1 view .LVU896
2032:src/keys.c    **** 			return 1;
 3123              		.loc 1 2032 12 is_stmt 0 view .LVU897
 3124 003a D377     		strb	r3, [r2, #31]
2033:src/keys.c    **** 		}
 3125              		.loc 1 2033 4 is_stmt 1 view .LVU898
2033:src/keys.c    **** 		}
 3126              		.loc 1 2033 11 is_stmt 0 view .LVU899
 3127 003c 0120     		movs	r0, #1
 3128              	.LVL252:
2033:src/keys.c    **** 		}
 3129              		.loc 1 2033 11 view .LVU900
 3130 003e 7047     		bx	lr
 3131              	.L346:
 3132              		.align	2
 3133              	.L345:
 3134 0040 00000000 		.word	StateWhileOn
 3135              		.cfi_endproc
 3136              	.LFE39:
 3138              		.section	.text.process_arg,"ax",%progbits
 3139              		.align	1
 3140              		.p2align 2,,3
 3141              		.syntax unified
 3142              		.thumb
 3143              		.thumb_func
 3144              		.fpu fpv4-sp-d16
 3146              	process_arg:
 3147              	.LVL253:
 3148              	.LFB42:
2071:src/keys.c    **** 	unsigned int base = CmdBase;
 3149              		.loc 1 2071 41 is_stmt 1 view -0
 3150              		.cfi_startproc
 3151              		@ args = 0, pretend = 0, frame = 8
 3152              		@ frame_needed = 0, uses_anonymous_args = 0
2072:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3153              		.loc 1 2072 2 view .LVU902
2071:src/keys.c    **** 	unsigned int base = CmdBase;
 3154              		.loc 1 2071 41 is_stmt 0 view .LVU903
 3155 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3156              		.cfi_def_cfa_offset 36
 3157              		.cfi_offset 4, -36
ARM GAS  /tmp/ccF3vcso.s 			page 125


 3158              		.cfi_offset 5, -32
 3159              		.cfi_offset 6, -28
 3160              		.cfi_offset 7, -24
 3161              		.cfi_offset 8, -20
 3162              		.cfi_offset 9, -16
 3163              		.cfi_offset 10, -12
 3164              		.cfi_offset 11, -8
 3165              		.cfi_offset 14, -4
2072:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3166              		.loc 1 2072 22 view .LVU904
 3167 0004 C94C     		ldr	r4, .L491
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3168              		.loc 1 2074 31 view .LVU905
 3169 0006 DFF834A3 		ldr	r10, .L491+16
2072:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3170              		.loc 1 2072 22 view .LVU906
 3171 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3172              	.LBB454:
 3173              	.LBB455:
 3174              	.LBB456:
 3175              	.LBB457:
 143:src/keys.c    **** }
 3176              		.loc 1 143 23 view .LVU907
 3177 000c C84A     		ldr	r2, .L491+4
 3178              	.LBE457:
 3179              	.LBE456:
 234:src/keys.c    **** }
 3180              		.loc 1 234 28 view .LVU908
 3181 000e C94E     		ldr	r6, .L491+8
 3182              	.LBB460:
 3183              	.LBB458:
 143:src/keys.c    **** }
 3184              		.loc 1 143 23 view .LVU909
 3185 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3186              	.LBE458:
 3187              	.LBE460:
 3188              	.LBE455:
 3189              	.LBE454:
2075:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3190              		.loc 1 2075 20 view .LVU910
 3191 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3192              	.LBB464:
 3193              	.LBB462:
 234:src/keys.c    **** }
 3194              		.loc 1 234 28 view .LVU911
 3195 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3196              	.LBE462:
 3197              	.LBE464:
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3198              		.loc 1 2074 31 view .LVU912
 3199 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2071:src/keys.c    **** 	unsigned int base = CmdBase;
 3200              		.loc 1 2071 41 view .LVU913
 3201 001c 83B0     		sub	sp, sp, #12
 3202              		.cfi_def_cfa_offset 48
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3203              		.loc 1 2074 31 view .LVU914
ARM GAS  /tmp/ccF3vcso.s 			page 126


 3204 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2072:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3205              		.loc 1 2072 15 view .LVU915
 3206 0020 0095     		str	r5, [sp]
 3207              	.LVL254:
2073:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3208              		.loc 1 2073 2 is_stmt 1 view .LVU916
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3209              		.loc 1 2074 40 is_stmt 0 view .LVU917
 3210 0022 4A07     		lsls	r2, r1, #29
 3211 0024 58BF     		it	pl
 3212 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2075:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3213              		.loc 1 2075 20 view .LVU918
 3214 002a 0193     		str	r3, [sp, #4]
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3215              		.loc 1 2074 40 view .LVU919
 3216 002c 54BF     		ite	pl
 3217 002e 4FEAD878 		lsrpl	r8, r8, #31
 3218 0032 4FF00108 		movmi	r8, #1
2071:src/keys.c    **** 	unsigned int base = CmdBase;
 3219              		.loc 1 2071 41 view .LVU920
 3220 0036 0746     		mov	r7, r0
 3221              	.LVL255:
 3222              	.LBB465:
 3223              	.LBI454:
 210:src/keys.c    **** {
 3224              		.loc 1 210 14 is_stmt 1 view .LVU921
 3225              	.LBB463:
 212:src/keys.c    ****     // K00 - K05
 3226              		.loc 1 212 3 view .LVU922
 234:src/keys.c    **** }
 3227              		.loc 1 234 3 view .LVU923
 3228              	.LBB461:
 3229              	.LBI456:
 131:src/keys.c    **** {
 3230              		.loc 1 131 12 view .LVU924
 3231              	.LBB459:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3232              		.loc 1 133 2 view .LVU925
 143:src/keys.c    **** }
 3233              		.loc 1 143 2 view .LVU926
 143:src/keys.c    **** }
 3234              		.loc 1 143 2 is_stmt 0 view .LVU927
 3235              	.LBE459:
 3236              	.LBE461:
 234:src/keys.c    **** }
 3237              		.loc 1 234 10 view .LVU928
 3238 0038 4E46     		mov	r6, r9
 3239              	.LVL256:
 234:src/keys.c    **** }
 3240              		.loc 1 234 10 view .LVU929
 3241              	.LBE463:
 3242              	.LBE465:
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3243              		.loc 1 2074 2 is_stmt 1 view .LVU930
2075:src/keys.c    **** 	const enum shifts shift = reset_shift();
ARM GAS  /tmp/ccF3vcso.s 			page 127


 3244              		.loc 1 2075 2 view .LVU931
2076:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3245              		.loc 1 2076 2 view .LVU932
 3246              	.LBB466:
 3247              	.LBI466:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3248              		.loc 1 114 13 view .LVU933
 3249              	.LBE466:
 115:src/keys.c    **** }
 3250              		.loc 1 115 2 view .LVU934
 3251              	.LBB479:
 3252              	.LBB467:
 3253              	.LBI467:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3254              		.loc 1 104 20 view .LVU935
 3255              	.LBB468:
 105:src/keys.c    **** 	State2.shifts = shift;
 3256              		.loc 1 105 2 view .LVU936
 3257              	.LBB469:
 3258              	.LBI469:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3259              		.loc 1 96 13 view .LVU937
 3260              	.LBB470:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3261              		.loc 1 97 2 view .LVU938
 3262              	.LBE470:
 3263              	.LBE469:
 3264              	.LBE468:
 3265              	.LBE467:
 3266              	.LBE479:
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3267              		.loc 1 2074 31 is_stmt 0 view .LVU939
 3268 003a 4FEA051B 		lsl	fp, r5, #4
 3269              	.LBB480:
 3270              	.LBB476:
 3271              	.LBB473:
 3272              	.LBB472:
 3273              	.LBB471:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3274              		.loc 1 97 18 view .LVU940
 3275 003e FFF7FEFF 		bl	shift_down
 3276              	.LVL257:
  98:src/keys.c    **** }
 3277              		.loc 1 98 2 is_stmt 1 view .LVU941
  98:src/keys.c    **** }
 3278              		.loc 1 98 52 is_stmt 0 view .LVU942
 3279 0042 00B9     		cbnz	r0, .L349
 3280 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3281              	.LVL258:
 3282              	.L349:
  98:src/keys.c    **** }
 3283              		.loc 1 98 52 view .LVU943
 3284              	.LBE471:
 3285              	.LBE472:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3286              		.loc 1 106 2 is_stmt 1 view .LVU944
 3287              	.LBE473:
ARM GAS  /tmp/ccF3vcso.s 			page 128


 3288              	.LBE476:
 3289              	.LBE480:
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3290              		.loc 1 2077 38 is_stmt 0 view .LVU945
 3291 0046 D344     		add	fp, fp, r10
 3292              	.LBB481:
 3293              	.LBB477:
 3294              	.LBB474:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3295              		.loc 1 106 16 view .LVU946
 3296 0048 4FF0000E 		mov	lr, #0
 3297              	.LBE474:
 3298              	.LBE477:
 3299              	.LBE481:
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3300              		.loc 1 2077 38 view .LVU947
 3301 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3302              	.LBB482:
 3303              	.LBB478:
 3304              	.LBB475:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3305              		.loc 1 106 16 view .LVU948
 3306 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3307              		.loc 1 108 2 is_stmt 1 view .LVU949
 3308              	.LVL259:
 108:src/keys.c    **** }
 3309              		.loc 1 108 2 is_stmt 0 view .LVU950
 3310              	.LBE475:
 3311              	.LBE478:
 3312              	.LBE482:
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3313              		.loc 1 2077 2 is_stmt 1 view .LVU951
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3314              		.loc 1 2077 61 is_stmt 0 view .LVU952
 3315 0054 8B06     		lsls	r3, r1, #26
 3316 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3317 005a 19D5     		bpl	.L350
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3318              		.loc 1 2077 61 discriminator 1 view .LVU953
 3319 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3320 005e 11F0C00F 		tst	r1, #192
 3321 0062 1FD0     		beq	.L479
 3322              	.LVL260:
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
 3323              		.loc 1 2081 2 is_stmt 1 view .LVU954
2082:src/keys.c    **** 		reset_arg();
 3324              		.loc 1 2082 5 is_stmt 0 view .LVU955
 3325 0064 962D     		cmp	r5, #150
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
 3326              		.loc 1 2081 4 view .LVU956
 3327 0066 29F08006 		bic	r6, r9, #128
 3328              	.LVL261:
2082:src/keys.c    **** 		reset_arg();
 3329              		.loc 1 2082 2 is_stmt 1 view .LVU957
2082:src/keys.c    **** 		reset_arg();
 3330              		.loc 1 2082 5 is_stmt 0 view .LVU958
ARM GAS  /tmp/ccF3vcso.s 			page 129


 3331 006a 15D8     		bhi	.L379
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3332              		.loc 1 2077 61 view .LVU959
 3333 006c F446     		mov	ip, lr
 3334              	.L359:
2087:src/keys.c    **** 	  switch (n) {
 3335              		.loc 1 2087 35 discriminator 1 view .LVU960
 3336 006e 6169     		ldr	r1, [r4, #20]
 3337 0070 11F4103F 		tst	r1, #147456
 3338 0074 2ED1     		bne	.L361
2088:src/keys.c    **** 	  case regX_idx:
 3339              		.loc 1 2088 4 is_stmt 1 view .LVU961
 3340 0076 672E     		cmp	r6, #103
 3341 0078 2CD8     		bhi	.L361
2088:src/keys.c    **** 	  case regX_idx:
 3342              		.loc 1 2088 4 is_stmt 0 view .LVU962
 3343 007a 632E     		cmp	r6, #99
 3344 007c 24D9     		bls	.L421
 3345 007e 653E     		subs	r6, r6, #101
 3346              	.LVL262:
2088:src/keys.c    **** 	  case regX_idx:
 3347              		.loc 1 2088 4 view .LVU963
 3348 0080 022E     		cmp	r6, #2
 3349 0082 00F26082 		bhi	.L364
 3350 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3351              	.L366:
 3352 008a 1101     		.2byte	(.L368-.L366)/2
 3353 008c 0B01     		.2byte	(.L367-.L366)/2
 3354 008e 1301     		.2byte	(.L365-.L366)/2
 3355              	.LVL263:
 3356              		.p2align 1
 3357              	.L350:
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
 3358              		.loc 1 2081 2 is_stmt 1 view .LVU964
2082:src/keys.c    **** 		reset_arg();
 3359              		.loc 1 2082 5 is_stmt 0 view .LVU965
 3360 0090 962D     		cmp	r5, #150
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
 3361              		.loc 1 2081 4 view .LVU966
 3362 0092 29F08006 		bic	r6, r9, #128
 3363              	.LVL264:
2082:src/keys.c    **** 		reset_arg();
 3364              		.loc 1 2082 2 is_stmt 1 view .LVU967
2082:src/keys.c    **** 		reset_arg();
 3365              		.loc 1 2082 5 is_stmt 0 view .LVU968
 3366 0096 EAD9     		bls	.L359
 3367              	.LVL265:
 3368              	.L379:
2337:src/keys.c    **** 	default:
 3369              		.loc 1 2337 3 is_stmt 1 view .LVU969
 3370 0098 FFF7FEFF 		bl	reset_arg
 3371              	.LVL266:
 3372              	.L472:
2341:src/keys.c    **** }
 3373              		.loc 1 2341 9 is_stmt 0 view .LVU970
 3374 009c 3320     		movs	r0, #51
 3375              	.L347:
ARM GAS  /tmp/ccF3vcso.s 			page 130


2342:src/keys.c    **** 
 3376              		.loc 1 2342 1 view .LVU971
 3377 009e 03B0     		add	sp, sp, #12
 3378              		.cfi_remember_state
 3379              		.cfi_def_cfa_offset 36
 3380              		@ sp needed
 3381 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3382              	.LVL267:
 3383              	.L479:
 3384              		.cfi_restore_state
2078:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3385              		.loc 1 2078 2 is_stmt 1 view .LVU972
2078:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3386              		.loc 1 2078 35 is_stmt 0 view .LVU973
 3387 00a4 292F     		cmp	r7, #41
 3388 00a6 00F0C080 		beq	.L352
2079:src/keys.c    **** 
 3389              		.loc 1 2079 11 view .LVU974
 3390 00aa 0128     		cmp	r0, #1
 3391 00ac 00F0D180 		beq	.L353
2079:src/keys.c    **** 
 3392              		.loc 1 2079 32 discriminator 3 view .LVU975
 3393 00b0 B9F1090F 		cmp	r9, #9
 3394 00b4 00F2B680 		bhi	.L354
 3395              	.LVL268:
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
 3396              		.loc 1 2081 2 is_stmt 1 view .LVU976
2082:src/keys.c    **** 		reset_arg();
 3397              		.loc 1 2082 2 view .LVU977
2082:src/keys.c    **** 		reset_arg();
 3398              		.loc 1 2082 5 is_stmt 0 view .LVU978
 3399 00b8 962D     		cmp	r5, #150
 3400 00ba EDD8     		bhi	.L379
2087:src/keys.c    **** 	  switch (n) {
 3401              		.loc 1 2087 35 view .LVU979
 3402 00bc 6169     		ldr	r1, [r4, #20]
 3403 00be 11F4103F 		tst	r1, #147456
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3404              		.loc 1 2077 61 view .LVU980
 3405 00c2 4FF0010C 		mov	ip, #1
2087:src/keys.c    **** 	  switch (n) {
 3406              		.loc 1 2087 35 view .LVU981
 3407 00c6 05D1     		bne	.L361
 3408              	.L421:
2088:src/keys.c    **** 	  case regX_idx:
 3409              		.loc 1 2088 4 view .LVU982
 3410 00c8 16B1     		cbz	r6, .L363
 3411 00ca 721F     		subs	r2, r6, #5
 3412 00cc 042A     		cmp	r2, #4
 3413 00ce 01D8     		bhi	.L361
 3414              	.L363:
2103:src/keys.c    **** 	  }
 3415              		.loc 1 2103 6 is_stmt 1 view .LVU983
2103:src/keys.c    **** 	  }
 3416              		.loc 1 2103 13 is_stmt 0 view .LVU984
 3417 00d0 3046     		mov	r0, r6
 3418              	.LVL269:
ARM GAS  /tmp/ccF3vcso.s 			page 131


2103:src/keys.c    **** 	  }
 3419              		.loc 1 2103 13 view .LVU985
 3420 00d2 E6E0     		b	.L473
 3421              	.LVL270:
 3422              	.L361:
2110:src/keys.c    **** 		// row column shorthand addressing
 3423              		.loc 1 2110 2 is_stmt 1 view .LVU986
2116:src/keys.c    **** 		switch ((int)c) {
 3424              		.loc 1 2116 2 view .LVU987
2116:src/keys.c    **** 		switch ((int)c) {
 3425              		.loc 1 2116 5 is_stmt 0 view .LVU988
 3426 00d4 4D2D     		cmp	r5, #77
 3427 00d6 00F0B180 		beq	.L480
2116:src/keys.c    **** 		switch ((int)c) {
 3428              		.loc 1 2116 23 discriminator 1 view .LVU989
 3429 00da 05F16C02 		add	r2, r5, #108
 3430 00de D2B2     		uxtb	r2, r2
 3431 00e0 012A     		cmp	r2, #1
 3432 00e2 61D9     		bls	.L481
 3433              	.LVL271:
 3434              	.L370:
2147:src/keys.c    **** #else
 3435              		.loc 1 2147 3 is_stmt 1 view .LVU990
2147:src/keys.c    **** #else
 3436              		.loc 1 2147 11 is_stmt 0 view .LVU991
 3437 00e4 E577     		strb	r5, [r4, #31]
2170:src/keys.c    **** 	case K_F:
 3438              		.loc 1 2170 2 is_stmt 1 view .LVU992
 3439 00e6 2D2F     		cmp	r7, #45
 3440 00e8 D8D8     		bhi	.L472
 3441 00ea 01A3     		adr	r3, .L374
 3442 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3443              		.p2align 2
 3444              	.L374:
 3445 00f0 C1010000 		.word	.L391+1
 3446 00f4 C1010000 		.word	.L391+1
 3447 00f8 C1010000 		.word	.L391+1
 3448 00fc C1010000 		.word	.L391+1
 3449 0100 9D000000 		.word	.L472+1
 3450 0104 9D000000 		.word	.L472+1
 3451 0108 9D000000 		.word	.L472+1
 3452 010c 9D000000 		.word	.L472+1
 3453 0110 C1010000 		.word	.L391+1
 3454 0114 C1010000 		.word	.L391+1
 3455 0118 C1010000 		.word	.L391+1
 3456 011c C1010000 		.word	.L391+1
 3457 0120 45040000 		.word	.L390+1
 3458 0124 9D000000 		.word	.L472+1
 3459 0128 9D000000 		.word	.L472+1
 3460 012c 9D000000 		.word	.L472+1
 3461 0130 C7020000 		.word	.L389+1
 3462 0134 9D000000 		.word	.L472+1
 3463 0138 19020000 		.word	.L388+1
 3464 013c 9D000000 		.word	.L472+1
 3465 0140 9D000000 		.word	.L472+1
 3466 0144 9D000000 		.word	.L472+1
 3467 0148 F3020000 		.word	.L387+1
ARM GAS  /tmp/ccF3vcso.s 			page 132


 3468 014c 9D000000 		.word	.L472+1
 3469 0150 FF020000 		.word	.L386+1
 3470 0154 0B030000 		.word	.L385+1
 3471 0158 9D000000 		.word	.L472+1
 3472 015c 9D000000 		.word	.L472+1
 3473 0160 81020000 		.word	.L384+1
 3474 0164 9D000000 		.word	.L472+1
 3475 0168 9D000000 		.word	.L472+1
 3476 016c 1F030000 		.word	.L383+1
 3477 0170 4D040000 		.word	.L382+1
 3478 0174 41030000 		.word	.L381+1
 3479 0178 4D030000 		.word	.L380+1
 3480 017c 9D000000 		.word	.L472+1
 3481 0180 99000000 		.word	.L379+1
 3482 0184 9D000000 		.word	.L472+1
 3483 0188 67030000 		.word	.L378+1
 3484 018c 9D000000 		.word	.L472+1
 3485 0190 AD030000 		.word	.L377+1
 3486 0194 CD030000 		.word	.L376+1
 3487 0198 9D000000 		.word	.L472+1
 3488 019c 9D000000 		.word	.L472+1
 3489 01a0 ED030000 		.word	.L375+1
 3490 01a4 25040000 		.word	.L373+1
 3491              	.LVL272:
 3492              		.p2align 1
 3493              	.L481:
2117:src/keys.c    **** 		case K_UP:	// up arrow
 3494              		.loc 1 2117 3 view .LVU993
 3495 01a8 122F     		cmp	r7, #18
 3496 01aa 2FD0     		beq	.L417
 3497 01ac 182F     		cmp	r7, #24
 3498 01ae 01D0     		beq	.L418
 3499 01b0 012F     		cmp	r7, #1
 3500 01b2 97D1     		bne	.L370
 3501              	.L418:
2133:src/keys.c    **** 		    base = RARG_SIG0;
 3502              		.loc 1 2133 5 view .LVU994
2137:src/keys.c    **** 		    base = RARG_FIX;
 3503              		.loc 1 2137 5 view .LVU995
2137:src/keys.c    **** 		    base = RARG_FIX;
 3504              		.loc 1 2137 8 is_stmt 0 view .LVU996
 3505 01b4 942D     		cmp	r5, #148
 3506 01b6 7DD1     		bne	.L482
 3507 01b8 4D23     		movs	r3, #77
 3508 01ba 0093     		str	r3, [sp]
 3509              	.LVL273:
2138:src/keys.c    **** 		    break;
 3510              		.loc 1 2138 12 view .LVU997
 3511 01bc 1D46     		mov	r5, r3
 3512 01be 91E7     		b	.L370
 3513              	.LVL274:
 3514              	.L391:
2225:src/keys.c    **** 			return arg_eval(n);
 3515              		.loc 1 2225 4 is_stmt 1 view .LVU998
2225:src/keys.c    **** 			return arg_eval(n);
 3516              		.loc 1 2225 8 is_stmt 0 view .LVU999
 3517 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccF3vcso.s 			page 133


2225:src/keys.c    **** 			return arg_eval(n);
 3518              		.loc 1 2225 7 view .LVU1000
 3519 01c2 5306     		lsls	r3, r2, #25
 3520 01c4 6AD4     		bmi	.L406
2225:src/keys.c    **** 			return arg_eval(n);
 3521              		.loc 1 2225 19 discriminator 1 view .LVU1001
 3522 01c6 B8F1000F 		cmp	r8, #0
 3523 01ca 67D1     		bne	.L406
2227:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3524              		.loc 1 2227 3 is_stmt 1 view .LVU1002
2227:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3525              		.loc 1 2227 6 is_stmt 0 view .LVU1003
 3526 01cc 032F     		cmp	r7, #3
 3527 01ce 3FF665AF 		bhi	.L472
2228:src/keys.c    **** 		break;
 3528              		.loc 1 2228 4 is_stmt 1 view .LVU1004
 3529              	.LVL275:
 3530              	.LBB483:
 3531              	.LBI483:
1998:src/keys.c    **** 	const unsigned int b = CmdBase;
 3532              		.loc 1 1998 12 view .LVU1005
 3533              	.LBB484:
1999:src/keys.c    **** 
 3534              		.loc 1 1999 2 view .LVU1006
2001:src/keys.c    **** 	{
 3535              		.loc 1 2001 2 view .LVU1007
2001:src/keys.c    **** 	{
 3536              		.loc 1 2001 16 is_stmt 0 view .LVU1008
 3537 01d2 009B     		ldr	r3, [sp]
 3538 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3539 01d8 1801     		lsls	r0, r3, #4
 3540 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2001:src/keys.c    **** 	{
 3541              		.loc 1 2001 5 view .LVU1009
 3542 01dc 8D06     		lsls	r5, r1, #26
 3543 01de 05D4     		bmi	.L397
2001:src/keys.c    **** 	{
 3544              		.loc 1 2001 40 view .LVU1010
 3545 01e0 A3F15109 		sub	r9, r3, #81
2001:src/keys.c    **** 	{
 3546              		.loc 1 2001 23 view .LVU1011
 3547 01e4 B9F10A0F 		cmp	r9, #10
 3548 01e8 3FF658AF 		bhi	.L472
 3549              	.L397:
2003:src/keys.c    **** 			return STATE_UNFINISHED;
 3550              		.loc 1 2003 3 is_stmt 1 view .LVU1012
2003:src/keys.c    **** 			return STATE_UNFINISHED;
 3551              		.loc 1 2003 6 is_stmt 0 view .LVU1013
 3552 01ec 1106     		lsls	r1, r2, #24
 3553 01ee 3FF555AF 		bmi	.L472
2003:src/keys.c    **** 			return STATE_UNFINISHED;
 3554              		.loc 1 2003 18 view .LVU1014
 3555 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3556 01f4 002A     		cmp	r2, #0
 3557 01f6 7FF451AF 		bne	.L472
2005:src/keys.c    **** 			return STATE_UNFINISHED;
 3558              		.loc 1 2005 3 is_stmt 1 view .LVU1015
ARM GAS  /tmp/ccF3vcso.s 			page 134


2005:src/keys.c    **** 			return STATE_UNFINISHED;
 3559              		.loc 1 2005 17 is_stmt 0 view .LVU1016
 3560 01fa 0AEB0003 		add	r3, r10, r0
2005:src/keys.c    **** 			return STATE_UNFINISHED;
 3561              		.loc 1 2005 6 view .LVU1017
 3562 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3563 0200 632B     		cmp	r3, #99
 3564 0202 7FF64BAF 		bls	.L472
2007:src/keys.c    **** 	}
 3565              		.loc 1 2007 3 is_stmt 1 view .LVU1018
2007:src/keys.c    **** 	}
 3566              		.loc 1 2007 10 is_stmt 0 view .LVU1019
 3567 0206 07F16400 		add	r0, r7, #100
 3568 020a 34E0     		b	.L474
 3569              	.LVL276:
 3570              	.L417:
2007:src/keys.c    **** 	}
 3571              		.loc 1 2007 10 view .LVU1020
 3572              	.LBE484:
 3573              	.LBE483:
2119:src/keys.c    **** 		    base = RARG_SIG;
 3574              		.loc 1 2119 5 is_stmt 1 view .LVU1021
2123:src/keys.c    **** 		    base = RARG_SIG0;
 3575              		.loc 1 2123 5 view .LVU1022
2123:src/keys.c    **** 		    base = RARG_SIG0;
 3576              		.loc 1 2123 8 is_stmt 0 view .LVU1023
 3577 020c 942D     		cmp	r5, #148
 3578 020e 01D0     		beq	.L467
2127:src/keys.c    **** 		    base = RARG_FIX;
 3579              		.loc 1 2127 5 is_stmt 1 view .LVU1024
2127:src/keys.c    **** 		    base = RARG_FIX;
 3580              		.loc 1 2127 8 is_stmt 0 view .LVU1025
 3581 0210 952D     		cmp	r5, #149
 3582 0212 56D0     		beq	.L483
 3583              	.L467:
2147:src/keys.c    **** #else
 3584              		.loc 1 2147 3 is_stmt 1 view .LVU1026
2147:src/keys.c    **** #else
 3585              		.loc 1 2147 11 is_stmt 0 view .LVU1027
 3586 0214 9523     		movs	r3, #149
 3587              	.LVL277:
 3588              	.L471:
2147:src/keys.c    **** #else
 3589              		.loc 1 2147 11 view .LVU1028
 3590 0216 E377     		strb	r3, [r4, #31]
2170:src/keys.c    **** 	case K_F:
 3591              		.loc 1 2170 2 is_stmt 1 view .LVU1029
 3592              	.L388:
2287:src/keys.c    **** 		break;
 3593              		.loc 1 2287 3 view .LVU1030
 3594 0218 0021     		movs	r1, #0
 3595 021a 0620     		movs	r0, #6
 3596              	.LVL278:
2287:src/keys.c    **** 		break;
 3597              		.loc 1 2287 3 is_stmt 0 view .LVU1031
 3598 021c FFF7FEFF 		bl	arg_storcl
 3599              	.LVL279:
ARM GAS  /tmp/ccF3vcso.s 			page 135


2288:src/keys.c    **** 
 3600              		.loc 1 2288 3 is_stmt 1 view .LVU1032
2341:src/keys.c    **** }
 3601              		.loc 1 2341 9 is_stmt 0 view .LVU1033
 3602 0220 3320     		movs	r0, #51
2288:src/keys.c    **** 
 3603              		.loc 1 2288 3 view .LVU1034
 3604 0222 3CE7     		b	.L347
 3605              	.LVL280:
 3606              	.L354:
2079:src/keys.c    **** 
 3607              		.loc 1 2079 42 discriminator 4 view .LVU1035
 3608 0224 19F0800F 		tst	r9, #128
 3609 0228 13D0     		beq	.L353
 3610              	.L352:
 3611              	.LVL281:
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
 3612              		.loc 1 2081 2 is_stmt 1 view .LVU1036
2082:src/keys.c    **** 		reset_arg();
 3613              		.loc 1 2082 5 is_stmt 0 view .LVU1037
 3614 022a 962D     		cmp	r5, #150
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
 3615              		.loc 1 2081 4 view .LVU1038
 3616 022c 29F08006 		bic	r6, r9, #128
 3617              	.LVL282:
2082:src/keys.c    **** 		reset_arg();
 3618              		.loc 1 2082 2 is_stmt 1 view .LVU1039
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3619              		.loc 1 2077 61 is_stmt 0 view .LVU1040
 3620 0230 98BF     		it	ls
 3621 0232 4FF0010C 		movls	ip, #1
2082:src/keys.c    **** 		reset_arg();
 3622              		.loc 1 2082 5 view .LVU1041
 3623 0236 7FF61AAF 		bls	.L359
 3624 023a 2DE7     		b	.L379
 3625              	.L480:
2117:src/keys.c    **** 		case K_UP:	// up arrow
 3626              		.loc 1 2117 3 is_stmt 1 view .LVU1042
 3627 023c 122F     		cmp	r7, #18
 3628 023e 00F00B81 		beq	.L429
 3629 0242 182F     		cmp	r7, #24
 3630 0244 02D0     		beq	.L431
 3631 0246 012F     		cmp	r7, #1
 3632 0248 7FF44CAF 		bne	.L370
 3633              	.L431:
 3634 024c 9525     		movs	r5, #149
 3635              	.LVL283:
2134:src/keys.c    **** 		    break;
 3636              		.loc 1 2134 12 is_stmt 0 view .LVU1043
 3637 024e 0095     		str	r5, [sp]
 3638 0250 48E7     		b	.L370
 3639              	.LVL284:
 3640              	.L353:
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
 3641              		.loc 1 2081 2 is_stmt 1 view .LVU1044
2082:src/keys.c    **** 		reset_arg();
 3642              		.loc 1 2082 2 view .LVU1045
ARM GAS  /tmp/ccF3vcso.s 			page 136


2082:src/keys.c    **** 		reset_arg();
 3643              		.loc 1 2082 5 is_stmt 0 view .LVU1046
 3644 0252 962D     		cmp	r5, #150
 3645 0254 3FF620AF 		bhi	.L379
2110:src/keys.c    **** 		// row column shorthand addressing
 3646              		.loc 1 2110 2 is_stmt 1 view .LVU1047
2112:src/keys.c    **** 
 3647              		.loc 1 2112 3 view .LVU1048
 3648              	.LVL285:
 3649              	.LBB485:
 3650              	.LBI485:
 179:src/keys.c    **** {
 3651              		.loc 1 179 5 view .LVU1049
 3652              	.LBB486:
 181:src/keys.c    **** }
 3653              		.loc 1 181 2 view .LVU1050
 181:src/keys.c    **** }
 3654              		.loc 1 181 18 is_stmt 0 view .LVU1051
 3655 0258 374B     		ldr	r3, .L491+12
 3656 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3657              		.loc 1 181 24 view .LVU1052
 3658 025e 03F0FC00 		and	r0, r3, #252
 3659              	.LVL286:
 181:src/keys.c    **** }
 3660              		.loc 1 181 24 view .LVU1053
 3661 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3662              		.loc 1 181 18 view .LVU1054
 3663 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3664              		.loc 1 181 24 view .LVU1055
 3665 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3666              		.loc 1 181 33 view .LVU1056
 3667 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3668              		.loc 1 181 12 view .LVU1057
 3669 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3670              		.loc 1 181 33 view .LVU1058
 3671 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3672              	.LBE486:
 3673              	.LBE485:
2112:src/keys.c    **** 
 3674              		.loc 1 2112 10 view .LVU1059
 3675 0274 3844     		add	r0, r0, r7
 3676              	.LVL287:
 3677              	.L474:
2342:src/keys.c    **** 
 3678              		.loc 1 2342 1 view .LVU1060
 3679 0276 03B0     		add	sp, sp, #12
 3680              		.cfi_remember_state
 3681              		.cfi_def_cfa_offset 36
 3682              		@ sp needed
 3683 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3684              		.cfi_restore 14
ARM GAS  /tmp/ccF3vcso.s 			page 137


 3685              		.cfi_restore 11
 3686              		.cfi_restore 10
 3687              		.cfi_restore 9
 3688              		.cfi_restore 8
 3689              		.cfi_restore 7
 3690              		.cfi_restore 6
 3691              		.cfi_restore 5
 3692              		.cfi_restore 4
 3693              		.cfi_def_cfa_offset 0
 3694              	.LVL288:
2112:src/keys.c    **** 
 3695              		.loc 1 2112 10 view .LVU1061
 3696 027c FFF7FEBF 		b	arg_eval
 3697              	.LVL289:
 3698              	.L384:
 3699              		.cfi_restore_state
2247:src/keys.c    **** 			return arg_eval(n);
 3700              		.loc 1 2247 3 is_stmt 1 view .LVU1062
2247:src/keys.c    **** 			return arg_eval(n);
 3701              		.loc 1 2247 7 is_stmt 0 view .LVU1063
 3702 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2247:src/keys.c    **** 			return arg_eval(n);
 3703              		.loc 1 2247 6 view .LVU1064
 3704 0282 5F06     		lsls	r7, r3, #25
 3705 0284 0AD4     		bmi	.L406
2247:src/keys.c    **** 			return arg_eval(n);
 3706              		.loc 1 2247 25 discriminator 1 view .LVU1065
 3707 0286 0121     		movs	r1, #1
 3708 0288 0320     		movs	r0, #3
 3709              	.LVL290:
2247:src/keys.c    **** 			return arg_eval(n);
 3710              		.loc 1 2247 25 discriminator 1 view .LVU1066
 3711 028a FFF7FEFF 		bl	arg_storcl
 3712              	.LVL291:
2247:src/keys.c    **** 			return arg_eval(n);
 3713              		.loc 1 2247 18 discriminator 1 view .LVU1067
 3714 028e 0028     		cmp	r0, #0
 3715 0290 7FF404AF 		bne	.L472
2247:src/keys.c    **** 			return arg_eval(n);
 3716              		.loc 1 2247 63 discriminator 2 view .LVU1068
 3717 0294 B8F1000F 		cmp	r8, #0
 3718 0298 3FF400AF 		beq	.L472
 3719              	.L406:
2248:src/keys.c    **** 		break;
 3720              		.loc 1 2248 4 is_stmt 1 view .LVU1069
2248:src/keys.c    **** 		break;
 3721              		.loc 1 2248 11 is_stmt 0 view .LVU1070
 3722 029c 3046     		mov	r0, r6
 3723 029e EAE7     		b	.L474
 3724              	.LVL292:
 3725              	.L367:
2094:src/keys.c    **** 	  case regT_idx:
 3726              		.loc 1 2094 6 is_stmt 1 view .LVU1071
2094:src/keys.c    **** 	  case regT_idx:
 3727              		.loc 1 2094 13 is_stmt 0 view .LVU1072
 3728 02a0 0320     		movs	r0, #3
 3729              	.LVL293:
ARM GAS  /tmp/ccF3vcso.s 			page 138


 3730              	.L473:
2342:src/keys.c    **** 
 3731              		.loc 1 2342 1 view .LVU1073
 3732 02a2 03B0     		add	sp, sp, #12
 3733              		.cfi_remember_state
 3734              		.cfi_def_cfa_offset 36
 3735              		@ sp needed
 3736 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3737              		.cfi_restore 14
 3738              		.cfi_restore 11
 3739              		.cfi_restore 10
 3740              		.cfi_restore 9
 3741              		.cfi_restore 8
 3742              		.cfi_restore 7
 3743              		.cfi_restore 6
 3744              		.cfi_restore 5
 3745              		.cfi_restore 4
 3746              		.cfi_def_cfa_offset 0
 3747              	.LVL294:
2092:src/keys.c    **** 	  case regZ_idx:
 3748              		.loc 1 2092 13 view .LVU1074
 3749 02a8 FFF7FEBF 		b	arg_digit
 3750              	.LVL295:
 3751              	.L368:
 3752              		.cfi_restore_state
2092:src/keys.c    **** 	  case regZ_idx:
 3753              		.loc 1 2092 6 is_stmt 1 view .LVU1075
2092:src/keys.c    **** 	  case regZ_idx:
 3754              		.loc 1 2092 13 is_stmt 0 view .LVU1076
 3755 02ac 0220     		movs	r0, #2
 3756              	.LVL296:
2092:src/keys.c    **** 	  case regZ_idx:
 3757              		.loc 1 2092 13 view .LVU1077
 3758 02ae F8E7     		b	.L473
 3759              	.LVL297:
 3760              	.L365:
2096:src/keys.c    **** 	  case 5:
 3761              		.loc 1 2096 6 is_stmt 1 view .LVU1078
2096:src/keys.c    **** 	  case 5:
 3762              		.loc 1 2096 13 is_stmt 0 view .LVU1079
 3763 02b0 0420     		movs	r0, #4
 3764              	.LVL298:
2096:src/keys.c    **** 	  case 5:
 3765              		.loc 1 2096 13 view .LVU1080
 3766 02b2 F6E7     		b	.L473
 3767              	.LVL299:
 3768              	.L482:
2141:src/keys.c    **** 		    base = RARG_SIG;
 3769              		.loc 1 2141 5 is_stmt 1 view .LVU1081
2141:src/keys.c    **** 		    base = RARG_SIG;
 3770              		.loc 1 2141 8 is_stmt 0 view .LVU1082
 3771 02b4 952D     		cmp	r5, #149
 3772 02b6 40F00B81 		bne	.L427
 3773 02ba 9423     		movs	r3, #148
 3774 02bc 0093     		str	r3, [sp]
 3775              	.LVL300:
2142:src/keys.c    **** 		    break;
ARM GAS  /tmp/ccF3vcso.s 			page 139


 3776              		.loc 1 2142 12 view .LVU1083
 3777 02be 1D46     		mov	r5, r3
 3778 02c0 10E7     		b	.L370
 3779              	.LVL301:
 3780              	.L483:
2142:src/keys.c    **** 		    break;
 3781              		.loc 1 2142 12 view .LVU1084
 3782 02c2 4D23     		movs	r3, #77
 3783 02c4 A7E7     		b	.L471
 3784              	.LVL302:
 3785              	.L389:
2316:src/keys.c    **** 			if (State2.dot)
 3786              		.loc 1 2316 3 is_stmt 1 view .LVU1085
2316:src/keys.c    **** 			if (State2.dot)
 3787              		.loc 1 2316 13 is_stmt 0 view .LVU1086
 3788 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2316:src/keys.c    **** 			if (State2.dot)
 3789              		.loc 1 2316 6 view .LVU1087
 3790 02c8 002B     		cmp	r3, #0
 3791 02ca 40F0EC80 		bne	.L413
2317:src/keys.c    **** 				State2.dot = 0;
 3792              		.loc 1 2317 4 is_stmt 1 view .LVU1088
2317:src/keys.c    **** 				State2.dot = 0;
 3793              		.loc 1 2317 8 is_stmt 0 view .LVU1089
 3794 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2317:src/keys.c    **** 				State2.dot = 0;
 3795              		.loc 1 2317 7 view .LVU1090
 3796 02d0 13F04001 		ands	r1, r3, #64
 3797 02d4 40F0A080 		bne	.L414
2319:src/keys.c    **** 				State2.local = 0;
 3798              		.loc 1 2319 9 is_stmt 1 view .LVU1091
2319:src/keys.c    **** 				State2.local = 0;
 3799              		.loc 1 2319 13 is_stmt 0 view .LVU1092
 3800 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2319:src/keys.c    **** 				State2.local = 0;
 3801              		.loc 1 2319 12 view .LVU1093
 3802 02da 12F00100 		ands	r0, r2, #1
 3803              	.LVL303:
2319:src/keys.c    **** 				State2.local = 0;
 3804              		.loc 1 2319 12 view .LVU1094
 3805 02de 40F01181 		bne	.L484
2321:src/keys.c    **** 				State2.ind = 0;
 3806              		.loc 1 2321 9 is_stmt 1 view .LVU1095
2321:src/keys.c    **** 				State2.ind = 0;
 3807              		.loc 1 2321 12 is_stmt 0 view .LVU1096
 3808 02e2 1906     		lsls	r1, r3, #24
 3809 02e4 7FF5D8AE 		bpl	.L379
2322:src/keys.c    **** 			else
 3810              		.loc 1 2322 5 is_stmt 1 view .LVU1097
2322:src/keys.c    **** 			else
 3811              		.loc 1 2322 16 is_stmt 0 view .LVU1098
 3812 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3813 02ec 6375     		strb	r3, [r4, #21]
2341:src/keys.c    **** }
 3814              		.loc 1 2341 9 view .LVU1099
 3815 02ee 3320     		movs	r0, #51
 3816 02f0 D5E6     		b	.L347
ARM GAS  /tmp/ccF3vcso.s 			page 140


 3817              	.LVL304:
 3818              	.L387:
2251:src/keys.c    **** 		break;
 3819              		.loc 1 2251 3 is_stmt 1 view .LVU1100
 3820 02f2 0121     		movs	r1, #1
 3821 02f4 0420     		movs	r0, #4
 3822              	.LVL305:
2251:src/keys.c    **** 		break;
 3823              		.loc 1 2251 3 is_stmt 0 view .LVU1101
 3824 02f6 FFF7FEFF 		bl	arg_storcl
 3825              	.LVL306:
2252:src/keys.c    **** #else
 3826              		.loc 1 2252 3 is_stmt 1 view .LVU1102
2341:src/keys.c    **** }
 3827              		.loc 1 2341 9 is_stmt 0 view .LVU1103
 3828 02fa 3320     		movs	r0, #51
2252:src/keys.c    **** #else
 3829              		.loc 1 2252 3 view .LVU1104
 3830 02fc CFE6     		b	.L347
 3831              	.LVL307:
 3832              	.L386:
2291:src/keys.c    **** 		break;
 3833              		.loc 1 2291 3 is_stmt 1 view .LVU1105
 3834 02fe 0021     		movs	r1, #0
 3835 0300 0520     		movs	r0, #5
 3836              	.LVL308:
2291:src/keys.c    **** 		break;
 3837              		.loc 1 2291 3 is_stmt 0 view .LVU1106
 3838 0302 FFF7FEFF 		bl	arg_storcl
 3839              	.LVL309:
2292:src/keys.c    **** 
 3840              		.loc 1 2292 3 is_stmt 1 view .LVU1107
2341:src/keys.c    **** }
 3841              		.loc 1 2341 9 is_stmt 0 view .LVU1108
 3842 0306 3320     		movs	r0, #51
2292:src/keys.c    **** 
 3843              		.loc 1 2292 3 view .LVU1109
 3844 0308 C9E6     		b	.L347
 3845              	.LVL310:
 3846              	.L385:
2194:src/keys.c    **** 	    return process_arg_shuffle(3);
 3847              		.loc 1 2194 4 is_stmt 1 view .LVU1110
2194:src/keys.c    **** 	    return process_arg_shuffle(3);
 3848              		.loc 1 2194 8 is_stmt 0 view .LVU1111
 3849 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2194:src/keys.c    **** 	    return process_arg_shuffle(3);
 3850              		.loc 1 2194 7 view .LVU1112
 3851 030c 9507     		lsls	r5, r2, #30
 3852 030e 7FF557AF 		bpl	.L391
2195:src/keys.c    **** 	case K51:       // X
 3853              		.loc 1 2195 6 is_stmt 1 view .LVU1113
2195:src/keys.c    **** 	case K51:       // X
 3854              		.loc 1 2195 13 is_stmt 0 view .LVU1114
 3855 0312 0320     		movs	r0, #3
 3856              	.LVL311:
 3857              	.L475:
2342:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 141


 3858              		.loc 1 2342 1 view .LVU1115
 3859 0314 03B0     		add	sp, sp, #12
 3860              		.cfi_remember_state
 3861              		.cfi_def_cfa_offset 36
 3862              		@ sp needed
 3863 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3864              		.cfi_restore 14
 3865              		.cfi_restore 11
 3866              		.cfi_restore 10
 3867              		.cfi_restore 9
 3868              		.cfi_restore 8
 3869              		.cfi_restore 7
 3870              		.cfi_restore 6
 3871              		.cfi_restore 5
 3872              		.cfi_restore 4
 3873              		.cfi_def_cfa_offset 0
 3874              	.LVL312:
2204:src/keys.c    **** #else
 3875              		.loc 1 2204 13 view .LVU1116
 3876 031a FFF7FEBF 		b	process_arg_shuffle
 3877              	.LVL313:
 3878              	.L383:
 3879              		.cfi_restore_state
2197:src/keys.c    **** 	    return process_arg_shuffle(0);
 3880              		.loc 1 2197 4 is_stmt 1 view .LVU1117
2197:src/keys.c    **** 	    return process_arg_shuffle(0);
 3881              		.loc 1 2197 8 is_stmt 0 view .LVU1118
 3882 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2197:src/keys.c    **** 	    return process_arg_shuffle(0);
 3883              		.loc 1 2197 7 view .LVU1119
 3884 0320 9007     		lsls	r0, r2, #30
 3885              	.LVL314:
2197:src/keys.c    **** 	    return process_arg_shuffle(0);
 3886              		.loc 1 2197 7 view .LVU1120
 3887 0322 7FF54DAF 		bpl	.L391
2198:src/keys.c    **** 	case K52:	// Y
 3888              		.loc 1 2198 6 is_stmt 1 view .LVU1121
2198:src/keys.c    **** 	case K52:	// Y
 3889              		.loc 1 2198 13 is_stmt 0 view .LVU1122
 3890 0326 0020     		movs	r0, #0
 3891 0328 F4E7     		b	.L475
 3892              	.L492:
 3893 032a 00BF     		.align	2
 3894              	.L491:
 3895 032c 00000000 		.word	StateWhileOn
 3896 0330 00000000 		.word	.LANCHOR6
 3897 0334 00000000 		.word	.LANCHOR5
 3898 0338 ABAAAAAA 		.word	-1431655765
 3899 033c 00000000 		.word	argcmds
 3900              	.LVL315:
 3901              	.L381:
2203:src/keys.c    **** 	    return process_arg_shuffle(2);
 3902              		.loc 1 2203 4 is_stmt 1 view .LVU1123
2203:src/keys.c    **** 	    return process_arg_shuffle(2);
 3903              		.loc 1 2203 8 is_stmt 0 view .LVU1124
 3904 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2203:src/keys.c    **** 	    return process_arg_shuffle(2);
ARM GAS  /tmp/ccF3vcso.s 			page 142


 3905              		.loc 1 2203 7 view .LVU1125
 3906 0342 9207     		lsls	r2, r2, #30
 3907 0344 7FF53CAF 		bpl	.L391
2204:src/keys.c    **** #else
 3908              		.loc 1 2204 6 is_stmt 1 view .LVU1126
2204:src/keys.c    **** #else
 3909              		.loc 1 2204 13 is_stmt 0 view .LVU1127
 3910 0348 0220     		movs	r0, #2
 3911              	.LVL316:
2204:src/keys.c    **** #else
 3912              		.loc 1 2204 13 view .LVU1128
 3913 034a E3E7     		b	.L475
 3914              	.LVL317:
 3915              	.L380:
2240:src/keys.c    **** 			reset_arg();
 3916              		.loc 1 2240 3 is_stmt 1 view .LVU1129
2240:src/keys.c    **** 			reset_arg();
 3917              		.loc 1 2240 6 is_stmt 0 view .LVU1130
 3918 034c 009B     		ldr	r3, [sp]
 3919 034e 212B     		cmp	r3, #33
 3920 0350 00F0B980 		beq	.L403
2240:src/keys.c    **** 			reset_arg();
 3921              		.loc 1 2240 25 discriminator 1 view .LVU1131
 3922 0354 732B     		cmp	r3, #115
 3923 0356 00F0B680 		beq	.L403
2244:src/keys.c    **** 		break;
 3924              		.loc 1 2244 3 is_stmt 1 view .LVU1132
 3925 035a 0121     		movs	r1, #1
 3926 035c 0220     		movs	r0, #2
 3927              	.LVL318:
2244:src/keys.c    **** 		break;
 3928              		.loc 1 2244 3 is_stmt 0 view .LVU1133
 3929 035e FFF7FEFF 		bl	arg_storcl
 3930              	.LVL319:
2245:src/keys.c    **** 	case K44:		// multiply
 3931              		.loc 1 2245 3 is_stmt 1 view .LVU1134
2341:src/keys.c    **** }
 3932              		.loc 1 2341 9 is_stmt 0 view .LVU1135
 3933 0362 3320     		movs	r0, #51
2245:src/keys.c    **** 	case K44:		// multiply
 3934              		.loc 1 2245 3 view .LVU1136
 3935 0364 9BE6     		b	.L347
 3936              	.LVL320:
 3937              	.L378:
2232:src/keys.c    **** 
 3938              		.loc 1 2232 3 is_stmt 1 view .LVU1137
 3939              	.LBB487:
 3940              	.LBI487:
2039:src/keys.c    **** 
 3941              		.loc 1 2039 12 view .LVU1138
 3942              	.LBB488:
2041:src/keys.c    **** 		// Only valid at beginning of entry
 3943              		.loc 1 2041 2 view .LVU1139
2041:src/keys.c    **** 		// Only valid at beginning of entry
 3944              		.loc 1 2041 5 is_stmt 0 view .LVU1140
 3945 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3946 0368 002A     		cmp	r2, #0
ARM GAS  /tmp/ccF3vcso.s 			page 143


 3947 036a 7FF497AE 		bne	.L472
2043:src/keys.c    **** 			// '..' or ENTER '.' = X
 3948              		.loc 1 2043 3 is_stmt 1 view .LVU1141
2043:src/keys.c    **** 			// '..' or ENTER '.' = X
 3949              		.loc 1 2043 6 is_stmt 0 view .LVU1142
 3950 036e 11F4A03F 		tst	r1, #81920
 3951 0372 40F0C180 		bne	.L485
2048:src/keys.c    **** 			// local register or flag select
 3952              		.loc 1 2048 3 is_stmt 1 view .LVU1143
2048:src/keys.c    **** 			// local register or flag select
 3953              		.loc 1 2048 20 is_stmt 0 view .LVU1144
 3954 0376 009B     		ldr	r3, [sp]
 3955 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3956 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2048:src/keys.c    **** 			// local register or flag select
 3957              		.loc 1 2048 6 view .LVU1145
 3958 037e 1A07     		lsls	r2, r3, #28
 3959 0380 00F1A880 		bmi	.L399
2048:src/keys.c    **** 			// local register or flag select
 3960              		.loc 1 2048 27 view .LVU1146
 3961 0384 94F91530 		ldrsb	r3, [r4, #21]
 3962 0388 002B     		cmp	r3, #0
 3963 038a C0F2A380 		blt	.L399
2052:src/keys.c    **** 			// Special GTO . sequence
 3964              		.loc 1 2052 8 is_stmt 1 view .LVU1147
2052:src/keys.c    **** 			// Special GTO . sequence
 3965              		.loc 1 2052 29 is_stmt 0 view .LVU1148
 3966 038e 009B     		ldr	r3, [sp]
 3967 0390 A3F14409 		sub	r9, r3, #68
2052:src/keys.c    **** 			// Special GTO . sequence
 3968              		.loc 1 2052 11 view .LVU1149
 3969 0394 B9F1010F 		cmp	r9, #1
 3970 0398 3FF680AE 		bhi	.L472
2054:src/keys.c    **** 				State2.gtodot = 1;
 3971              		.loc 1 2054 4 is_stmt 1 view .LVU1150
2055:src/keys.c    **** 				reset_arg();
 3972              		.loc 1 2055 5 view .LVU1151
2055:src/keys.c    **** 				reset_arg();
 3973              		.loc 1 2055 19 is_stmt 0 view .LVU1152
 3974 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3975 039e 43F00103 		orr	r3, r3, #1
 3976 03a2 6375     		strb	r3, [r4, #21]
2056:src/keys.c    **** 			}
 3977              		.loc 1 2056 5 is_stmt 1 view .LVU1153
 3978 03a4 FFF7FEFF 		bl	reset_arg
 3979              	.LVL321:
2060:src/keys.c    **** }
 3980              		.loc 1 2060 9 is_stmt 0 view .LVU1154
 3981 03a8 3320     		movs	r0, #51
 3982 03aa 78E6     		b	.L347
 3983              	.LVL322:
 3984              	.L377:
2060:src/keys.c    **** }
 3985              		.loc 1 2060 9 view .LVU1155
 3986              	.LBE488:
 3987              	.LBE487:
2236:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/ccF3vcso.s 			page 144


 3988              		.loc 1 2236 3 is_stmt 1 view .LVU1156
2236:src/keys.c    **** 			return arg_eval(n);
 3989              		.loc 1 2236 7 is_stmt 0 view .LVU1157
 3990 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2236:src/keys.c    **** 			return arg_eval(n);
 3991              		.loc 1 2236 6 view .LVU1158
 3992 03ae 5B06     		lsls	r3, r3, #25
 3993 03b0 3FF574AF 		bmi	.L406
2236:src/keys.c    **** 			return arg_eval(n);
 3994              		.loc 1 2236 25 discriminator 1 view .LVU1159
 3995 03b4 0121     		movs	r1, #1
 3996 03b6 0846     		mov	r0, r1
 3997              	.LVL323:
2236:src/keys.c    **** 			return arg_eval(n);
 3998              		.loc 1 2236 25 discriminator 1 view .LVU1160
 3999 03b8 FFF7FEFF 		bl	arg_storcl
 4000              	.LVL324:
2236:src/keys.c    **** 			return arg_eval(n);
 4001              		.loc 1 2236 18 discriminator 1 view .LVU1161
 4002 03bc 0028     		cmp	r0, #0
 4003 03be 7FF46DAE 		bne	.L472
2247:src/keys.c    **** 			return arg_eval(n);
 4004              		.loc 1 2247 63 view .LVU1162
 4005 03c2 B8F1000F 		cmp	r8, #0
 4006 03c6 3FF469AE 		beq	.L472
 4007 03ca 67E7     		b	.L406
 4008              	.LVL325:
 4009              	.L376:
2172:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4010              		.loc 1 2172 3 is_stmt 1 view .LVU1163
2172:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4011              		.loc 1 2172 6 is_stmt 0 view .LVU1164
 4012 03cc BCF1000F 		cmp	ip, #0
 4013 03d0 3FF464AE 		beq	.L472
2173:src/keys.c    **** 		break;
 4014              		.loc 1 2173 4 is_stmt 1 view .LVU1165
 4015              	.LVL326:
 4016              	.LBB491:
 4017              	.LBI491:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4018              		.loc 1 104 20 view .LVU1166
 4019              	.LBB492:
 105:src/keys.c    **** 	State2.shifts = shift;
 4020              		.loc 1 105 2 view .LVU1167
 4021              	.LBB493:
 4022              	.LBI493:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4023              		.loc 1 96 13 view .LVU1168
 4024              	.LBB494:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4025              		.loc 1 97 2 view .LVU1169
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4026              		.loc 1 97 18 is_stmt 0 view .LVU1170
 4027 03d4 FFF7FEFF 		bl	shift_down
 4028              	.LVL327:
  98:src/keys.c    **** }
 4029              		.loc 1 98 2 is_stmt 1 view .LVU1171
ARM GAS  /tmp/ccF3vcso.s 			page 145


 4030              	.LBE494:
 4031              	.LBE493:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4032              		.loc 1 106 2 view .LVU1172
 4033              	.LBE492:
 4034              	.LBE491:
2173:src/keys.c    **** 		break;
 4035              		.loc 1 2173 4 is_stmt 0 view .LVU1173
 4036 03d8 019B     		ldr	r3, [sp, #4]
 4037 03da B3F1010A 		subs	r10, r3, #1
 4038 03de 18BF     		it	ne
 4039 03e0 4FF0010A 		movne	r10, #1
 4040 03e4 84F810A0 		strb	r10, [r4, #16]
 4041              	.LBB497:
 4042              	.LBB495:
 108:src/keys.c    **** }
 4043              		.loc 1 108 2 is_stmt 1 view .LVU1174
 4044              	.LBE495:
 4045              	.LBE497:
2341:src/keys.c    **** }
 4046              		.loc 1 2341 9 is_stmt 0 view .LVU1175
 4047 03e8 3320     		movs	r0, #51
 4048              	.LBB498:
 4049              	.LBB496:
 108:src/keys.c    **** }
 4050              		.loc 1 108 9 view .LVU1176
 4051 03ea 58E6     		b	.L347
 4052              	.LVL328:
 4053              	.L375:
 108:src/keys.c    **** }
 4054              		.loc 1 108 9 view .LVU1177
 4055              	.LBE496:
 4056              	.LBE498:
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
 4057              		.loc 1 2177 3 is_stmt 1 view .LVU1178
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
 4058              		.loc 1 2177 7 is_stmt 0 view .LVU1179
 4059 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
 4060              		.loc 1 2177 6 view .LVU1180
 4061 03ee 5706     		lsls	r7, r2, #25
 4062 03f0 3FF554AE 		bmi	.L472
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
 4063              		.loc 1 2177 35 discriminator 1 view .LVU1181
 4064 03f4 009B     		ldr	r3, [sp]
 4065 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4066 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
 4067              		.loc 1 2177 19 discriminator 1 view .LVU1182
 4068 03fe DE07     		lsls	r6, r3, #31
 4069              	.LVL329:
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
 4070              		.loc 1 2177 19 discriminator 1 view .LVU1183
 4071 0400 7FF54CAE 		bpl	.L472
2178:src/keys.c    **** 			if (! stack_reg)
 4072              		.loc 1 2178 4 is_stmt 1 view .LVU1184
2178:src/keys.c    **** 			if (! stack_reg)
ARM GAS  /tmp/ccF3vcso.s 			page 146


 4073              		.loc 1 2178 17 is_stmt 0 view .LVU1185
 4074 0404 D343     		mvns	r3, r2
 4075 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2178:src/keys.c    **** 			if (! stack_reg)
 4076              		.loc 1 2178 15 view .LVU1186
 4077 040a 63F3C712 		bfi	r2, r3, #7, #1
 4078 040e 6275     		strb	r2, [r4, #21]
2179:src/keys.c    **** 				State2.dot = 0;
 4079              		.loc 1 2179 4 is_stmt 1 view .LVU1187
2179:src/keys.c    **** 				State2.dot = 0;
 4080              		.loc 1 2179 7 is_stmt 0 view .LVU1188
 4081 0410 B8F1000F 		cmp	r8, #0
 4082 0414 7FF442AE 		bne	.L472
 4083              	.L414:
2180:src/keys.c    **** 		}
 4084              		.loc 1 2180 5 is_stmt 1 view .LVU1189
2180:src/keys.c    **** 		}
 4085              		.loc 1 2180 16 is_stmt 0 view .LVU1190
 4086 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4087 041a 6FF38613 		bfc	r3, #6, #1
 4088 041e 6375     		strb	r3, [r4, #21]
2341:src/keys.c    **** }
 4089              		.loc 1 2341 9 view .LVU1191
 4090 0420 3320     		movs	r0, #51
 4091              	.LVL330:
2341:src/keys.c    **** }
 4092              		.loc 1 2341 9 view .LVU1192
 4093 0422 3CE6     		b	.L347
 4094              	.LVL331:
 4095              	.L373:
2185:src/keys.c    **** 			break;
 4096              		.loc 1 2185 3 is_stmt 1 view .LVU1193
2185:src/keys.c    **** 			break;
 4097              		.loc 1 2185 18 is_stmt 0 view .LVU1194
 4098 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2185:src/keys.c    **** 			break;
 4099              		.loc 1 2185 6 view .LVU1195
 4100 0426 13F0C00F 		tst	r3, #192
 4101 042a 7FF437AE 		bne	.L472
2187:src/keys.c    **** 			CmdBase = RARG_STOM;
 4102              		.loc 1 2187 3 is_stmt 1 view .LVU1196
2187:src/keys.c    **** 			CmdBase = RARG_STOM;
 4103              		.loc 1 2187 6 is_stmt 0 view .LVU1197
 4104 042e 009B     		ldr	r3, [sp]
 4105 0430 032B     		cmp	r3, #3
 4106 0432 5DD0     		beq	.L486
2189:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4107              		.loc 1 2189 8 is_stmt 1 view .LVU1198
2189:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4108              		.loc 1 2189 11 is_stmt 0 view .LVU1199
 4109 0434 009B     		ldr	r3, [sp]
 4110 0436 0A2B     		cmp	r3, #10
 4111 0438 7FF430AE 		bne	.L472
2190:src/keys.c    **** 		break;
 4112              		.loc 1 2190 4 is_stmt 1 view .LVU1200
2190:src/keys.c    **** 		break;
 4113              		.loc 1 2190 12 is_stmt 0 view .LVU1201
ARM GAS  /tmp/ccF3vcso.s 			page 147


 4114 043c 7823     		movs	r3, #120
 4115 043e E377     		strb	r3, [r4, #31]
2341:src/keys.c    **** }
 4116              		.loc 1 2341 9 view .LVU1202
 4117 0440 3320     		movs	r0, #51
 4118              	.LVL332:
2341:src/keys.c    **** }
 4119              		.loc 1 2341 9 view .LVU1203
 4120 0442 2CE6     		b	.L347
 4121              	.LVL333:
 4122              	.L390:
2295:src/keys.c    **** 			if (argcmds[base].label) {
 4123              		.loc 1 2295 3 is_stmt 1 view .LVU1204
2295:src/keys.c    **** 			if (argcmds[base].label) {
 4124              		.loc 1 2295 6 is_stmt 0 view .LVU1205
 4125 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4126 0446 4AB1     		cbz	r2, .L487
2309:src/keys.c    **** 			return arg_eval(State2.digval);
 4127              		.loc 1 2309 10 is_stmt 1 view .LVU1206
2310:src/keys.c    **** 		else if (stack_reg)
 4128              		.loc 1 2310 4 view .LVU1207
2310:src/keys.c    **** 		else if (stack_reg)
 4129              		.loc 1 2310 11 is_stmt 0 view .LVU1208
 4130 0448 2089     		ldrh	r0, [r4, #8]
 4131              	.LVL334:
2310:src/keys.c    **** 		else if (stack_reg)
 4132              		.loc 1 2310 11 view .LVU1209
 4133 044a 14E7     		b	.L474
 4134              	.LVL335:
 4135              	.L382:
2200:src/keys.c    **** 	    return process_arg_shuffle(1);
 4136              		.loc 1 2200 4 is_stmt 1 view .LVU1210
2200:src/keys.c    **** 	    return process_arg_shuffle(1);
 4137              		.loc 1 2200 8 is_stmt 0 view .LVU1211
 4138 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2200:src/keys.c    **** 	    return process_arg_shuffle(1);
 4139              		.loc 1 2200 7 view .LVU1212
 4140 044e 9107     		lsls	r1, r2, #30
 4141 0450 7FF5B6AE 		bpl	.L391
2201:src/keys.c    **** 	case K53:       // Z
 4142              		.loc 1 2201 6 is_stmt 1 view .LVU1213
2201:src/keys.c    **** 	case K53:       // Z
 4143              		.loc 1 2201 13 is_stmt 0 view .LVU1214
 4144 0454 0120     		movs	r0, #1
 4145              	.LVL336:
2201:src/keys.c    **** 	case K53:       // Z
 4146              		.loc 1 2201 13 view .LVU1215
 4147 0456 5DE7     		b	.L475
 4148              	.LVL337:
 4149              	.L429:
2117:src/keys.c    **** 		case K_UP:	// up arrow
 4150              		.loc 1 2117 3 view .LVU1216
 4151 0458 9423     		movs	r3, #148
 4152              	.LVL338:
2147:src/keys.c    **** #else
 4153              		.loc 1 2147 3 is_stmt 1 view .LVU1217
 4154 045a DCE6     		b	.L471
ARM GAS  /tmp/ccF3vcso.s 			page 148


 4155              	.L487:
2295:src/keys.c    **** 			if (argcmds[base].label) {
 4156              		.loc 1 2295 43 is_stmt 0 discriminator 1 view .LVU1218
 4157 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4158 045e 12F0C00F 		tst	r2, #192
 4159 0462 13D1     		bne	.L408
2296:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4160              		.loc 1 2296 4 is_stmt 1 view .LVU1219
2296:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4161              		.loc 1 2296 21 is_stmt 0 view .LVU1220
 4162 0464 009B     		ldr	r3, [sp]
 4163 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4164 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2296:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4165              		.loc 1 2296 7 view .LVU1221
 4166 046c 9E06     		lsls	r6, r3, #26
 4167              	.LVL339:
2296:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4168              		.loc 1 2296 7 view .LVU1222
 4169 046e 4ED4     		bmi	.L488
2301:src/keys.c    **** 				reset_arg();
 4170              		.loc 1 2301 11 is_stmt 1 view .LVU1223
2301:src/keys.c    **** 				reset_arg();
 4171              		.loc 1 2301 14 is_stmt 0 view .LVU1224
 4172 0470 0099     		ldr	r1, [sp]
 4173 0472 4E29     		cmp	r1, #78
 4174 0474 5DD0     		beq	.L489
2304:src/keys.c    **** 				reset_arg();
 4175              		.loc 1 2304 11 is_stmt 1 view .LVU1225
2304:src/keys.c    **** 				reset_arg();
 4176              		.loc 1 2304 14 is_stmt 0 view .LVU1226
 4177 0476 0099     		ldr	r1, [sp]
 4178 0478 4F29     		cmp	r1, #79
 4179 047a 5FD0     		beq	.L490
2307:src/keys.c    **** 				State2.dot = 1;
 4180              		.loc 1 2307 11 is_stmt 1 view .LVU1227
2307:src/keys.c    **** 				State2.dot = 1;
 4181              		.loc 1 2307 14 is_stmt 0 view .LVU1228
 4182 047c 5807     		lsls	r0, r3, #29
 4183              	.LVL340:
2307:src/keys.c    **** 				State2.dot = 1;
 4184              		.loc 1 2307 14 view .LVU1229
 4185 047e 7FF50DAE 		bpl	.L472
2308:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4186              		.loc 1 2308 5 is_stmt 1 view .LVU1230
2308:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4187              		.loc 1 2308 16 is_stmt 0 view .LVU1231
 4188 0482 42F04002 		orr	r2, r2, #64
 4189 0486 6275     		strb	r2, [r4, #21]
2341:src/keys.c    **** }
 4190              		.loc 1 2341 9 view .LVU1232
 4191 0488 3320     		movs	r0, #51
 4192 048a 08E6     		b	.L347
 4193              	.LVL341:
 4194              	.L408:
2309:src/keys.c    **** 			return arg_eval(State2.digval);
 4195              		.loc 1 2309 10 is_stmt 1 view .LVU1233
ARM GAS  /tmp/ccF3vcso.s 			page 149


2311:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4196              		.loc 1 2311 8 view .LVU1234
2311:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4197              		.loc 1 2311 11 is_stmt 0 view .LVU1235
 4198 048c B8F1000F 		cmp	r8, #0
 4199 0490 3FF404AE 		beq	.L472
2312:src/keys.c    **** 		break;
 4200              		.loc 1 2312 4 is_stmt 1 view .LVU1236
2312:src/keys.c    **** 		break;
 4201              		.loc 1 2312 27 is_stmt 0 view .LVU1237
 4202 0494 C2F38013 		ubfx	r3, r2, #6, #1
2312:src/keys.c    **** 		break;
 4203              		.loc 1 2312 19 view .LVU1238
 4204 0498 C3F10103 		rsb	r3, r3, #1
2312:src/keys.c    **** 		break;
 4205              		.loc 1 2312 15 view .LVU1239
 4206 049c 63F38612 		bfi	r2, r3, #6, #1
 4207 04a0 6275     		strb	r2, [r4, #21]
2341:src/keys.c    **** }
 4208              		.loc 1 2341 9 view .LVU1240
 4209 04a2 3320     		movs	r0, #51
 4210              	.LVL342:
2341:src/keys.c    **** }
 4211              		.loc 1 2341 9 view .LVU1241
 4212 04a4 FBE5     		b	.L347
 4213              	.LVL343:
 4214              	.L413:
2327:src/keys.c    **** 			if (State2.shuffle)
 4215              		.loc 1 2327 4 is_stmt 1 view .LVU1242
2328:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4216              		.loc 1 2328 8 is_stmt 0 view .LVU1243
 4217 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2327:src/keys.c    **** 			if (State2.shuffle)
 4218              		.loc 1 2327 4 view .LVU1244
 4219 04a8 013B     		subs	r3, r3, #1
 4220 04aa DBB2     		uxtb	r3, r3
2328:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4221              		.loc 1 2328 7 view .LVU1245
 4222 04ac 9207     		lsls	r2, r2, #30
2327:src/keys.c    **** 			if (State2.shuffle)
 4223              		.loc 1 2327 4 view .LVU1246
 4224 04ae E372     		strb	r3, [r4, #11]
2328:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4225              		.loc 1 2328 4 is_stmt 1 view .LVU1247
2328:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4226              		.loc 1 2328 7 is_stmt 0 view .LVU1248
 4227 04b0 16D5     		bpl	.L416
2329:src/keys.c    **** 			else
 4228              		.loc 1 2329 5 is_stmt 1 view .LVU1249
2329:src/keys.c    **** 			else
 4229              		.loc 1 2329 19 is_stmt 0 view .LVU1250
 4230 04b2 2289     		ldrh	r2, [r4, #8]
2329:src/keys.c    **** 			else
 4231              		.loc 1 2329 46 view .LVU1251
 4232 04b4 5B00     		lsls	r3, r3, #1
2329:src/keys.c    **** 			else
 4233              		.loc 1 2329 26 view .LVU1252
ARM GAS  /tmp/ccF3vcso.s 			page 150


 4234 04b6 0321     		movs	r1, #3
 4235 04b8 01FA03F3 		lsl	r3, r1, r3
2329:src/keys.c    **** 			else
 4236              		.loc 1 2329 19 view .LVU1253
 4237 04bc 22EA0303 		bic	r3, r2, r3
 4238 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2341:src/keys.c    **** }
 4239              		.loc 1 2341 9 view .LVU1254
 4240 04c2 3320     		movs	r0, #51
 4241              	.LVL344:
2341:src/keys.c    **** }
 4242              		.loc 1 2341 9 view .LVU1255
 4243 04c4 EBE5     		b	.L347
 4244              	.LVL345:
 4245              	.L403:
2241:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4246              		.loc 1 2241 4 is_stmt 1 view .LVU1256
 4247 04c6 FFF7FEFF 		bl	reset_arg
 4248              	.LVL346:
2242:src/keys.c    **** 		}
 4249              		.loc 1 2242 4 view .LVU1257
2242:src/keys.c    **** 		}
 4250              		.loc 1 2242 11 is_stmt 0 view .LVU1258
 4251 04ca 40F27510 		movw	r0, #373
 4252 04ce E6E5     		b	.L347
 4253              	.LVL347:
 4254              	.L427:
2242:src/keys.c    **** 		}
 4255              		.loc 1 2242 11 view .LVU1259
 4256 04d0 9525     		movs	r5, #149
 4257              	.LVL348:
2242:src/keys.c    **** 		}
 4258              		.loc 1 2242 11 view .LVU1260
 4259 04d2 07E6     		b	.L370
 4260              	.LVL349:
 4261              	.L399:
 4262              	.LBB499:
 4263              	.LBB489:
2050:src/keys.c    **** 		}
 4264              		.loc 1 2050 4 is_stmt 1 view .LVU1261
2050:src/keys.c    **** 		}
 4265              		.loc 1 2050 17 is_stmt 0 view .LVU1262
 4266 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4267 04d6 43F00103 		orr	r3, r3, #1
 4268 04da A375     		strb	r3, [r4, #22]
2060:src/keys.c    **** }
 4269              		.loc 1 2060 9 view .LVU1263
 4270 04dc 3320     		movs	r0, #51
 4271              	.LVL350:
2050:src/keys.c    **** 		}
 4272              		.loc 1 2050 17 view .LVU1264
 4273 04de DEE5     		b	.L347
 4274              	.LVL351:
 4275              	.L416:
2050:src/keys.c    **** 		}
 4276              		.loc 1 2050 17 view .LVU1265
 4277              	.LBE489:
ARM GAS  /tmp/ccF3vcso.s 			page 151


 4278              	.LBE499:
2331:src/keys.c    **** 		}
 4279              		.loc 1 2331 5 is_stmt 1 view .LVU1266
2331:src/keys.c    **** 		}
 4280              		.loc 1 2331 19 is_stmt 0 view .LVU1267
 4281 04e0 2389     		ldrh	r3, [r4, #8]
 4282 04e2 1A4A     		ldr	r2, .L493
 4283 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4284 04e8 DB08     		lsrs	r3, r3, #3
 4285 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2341:src/keys.c    **** }
 4286              		.loc 1 2341 9 view .LVU1268
 4287 04ec 3320     		movs	r0, #51
 4288              	.LVL352:
2341:src/keys.c    **** }
 4289              		.loc 1 2341 9 view .LVU1269
 4290 04ee D6E5     		b	.L347
 4291              	.LVL353:
 4292              	.L486:
2188:src/keys.c    **** 		else if (base == RARG_RCL)
 4293              		.loc 1 2188 4 is_stmt 1 view .LVU1270
2188:src/keys.c    **** 		else if (base == RARG_RCL)
 4294              		.loc 1 2188 12 is_stmt 0 view .LVU1271
 4295 04f0 7723     		movs	r3, #119
 4296 04f2 E377     		strb	r3, [r4, #31]
2341:src/keys.c    **** }
 4297              		.loc 1 2341 9 view .LVU1272
 4298 04f4 3320     		movs	r0, #51
 4299              	.LVL354:
2341:src/keys.c    **** }
 4300              		.loc 1 2341 9 view .LVU1273
 4301 04f6 D2E5     		b	.L347
 4302              	.LVL355:
 4303              	.L485:
 4304              	.LBB500:
 4305              	.LBB490:
2045:src/keys.c    **** 			return arg_eval(regX_idx);
 4306              		.loc 1 2045 4 is_stmt 1 view .LVU1274
2045:src/keys.c    **** 			return arg_eval(regX_idx);
 4307              		.loc 1 2045 17 is_stmt 0 view .LVU1275
 4308 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4309 04fa 62F30003 		bfi	r3, r2, #0, #1
2046:src/keys.c    **** 		}
 4310              		.loc 1 2046 11 view .LVU1276
 4311 04fe 6420     		movs	r0, #100
 4312              	.LVL356:
2045:src/keys.c    **** 			return arg_eval(regX_idx);
 4313              		.loc 1 2045 17 view .LVU1277
 4314 0500 A375     		strb	r3, [r4, #22]
2046:src/keys.c    **** 		}
 4315              		.loc 1 2046 4 is_stmt 1 view .LVU1278
 4316 0502 B8E6     		b	.L474
 4317              	.L484:
2046:src/keys.c    **** 		}
 4318              		.loc 1 2046 4 is_stmt 0 view .LVU1279
 4319              	.LBE490:
 4320              	.LBE500:
ARM GAS  /tmp/ccF3vcso.s 			page 152


2320:src/keys.c    **** 			else if (State2.ind)
 4321              		.loc 1 2320 5 is_stmt 1 view .LVU1280
2320:src/keys.c    **** 			else if (State2.ind)
 4322              		.loc 1 2320 18 is_stmt 0 view .LVU1281
 4323 0504 61F30002 		bfi	r2, r1, #0, #1
 4324 0508 A275     		strb	r2, [r4, #22]
2341:src/keys.c    **** }
 4325              		.loc 1 2341 9 view .LVU1282
 4326 050a 3320     		movs	r0, #51
 4327 050c C7E5     		b	.L347
 4328              	.LVL357:
 4329              	.L488:
2297:src/keys.c    **** 				State2.multi = 1;
 4330              		.loc 1 2297 5 is_stmt 1 view .LVU1283
 4331              	.LBB501:
 4332              	.LBI501:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4333              		.loc 1 552 13 view .LVU1284
 4334              	.LBB502:
 553:src/keys.c    **** 		return;
 4335              		.loc 1 553 2 view .LVU1285
 553:src/keys.c    **** 		return;
 4336              		.loc 1 553 6 is_stmt 0 view .LVU1286
 4337 050e FFF7FEFF 		bl	is_bad_cmdline
 4338              	.LVL358:
 553:src/keys.c    **** 		return;
 4339              		.loc 1 553 5 view .LVU1287
 4340 0512 20B9     		cbnz	r0, .L410
 4341              	.LBE502:
 4342              	.LBE501:
2297:src/keys.c    **** 				State2.multi = 1;
 4343              		.loc 1 2297 31 view .LVU1288
 4344 0514 A5F14200 		sub	r0, r5, #66
 4345              	.LBB504:
 4346              	.LBB503:
 4347 0518 C0B2     		uxtb	r0, r0
 4348 051a FFF7FEFF 		bl	init_arg.part.0
 4349              	.LVL359:
 4350              	.L410:
2297:src/keys.c    **** 				State2.multi = 1;
 4351              		.loc 1 2297 31 view .LVU1289
 4352              	.LBE503:
 4353              	.LBE504:
2298:src/keys.c    **** 				State2.alphashift = 0;
 4354              		.loc 1 2298 5 is_stmt 1 view .LVU1290
2299:src/keys.c    **** 				State2.rarg = 0;
 4355              		.loc 1 2299 5 view .LVU1291
2300:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4356              		.loc 1 2300 5 view .LVU1292
2298:src/keys.c    **** 				State2.alphashift = 0;
 4357              		.loc 1 2298 18 is_stmt 0 view .LVU1293
 4358 051e 6369     		ldr	r3, [r4, #20]
 4359 0520 23F44013 		bic	r3, r3, #3145728
 4360 0524 23F40063 		bic	r3, r3, #2048
 4361 0528 43F40063 		orr	r3, r3, #2048
 4362 052c 6361     		str	r3, [r4, #20]
2341:src/keys.c    **** }
ARM GAS  /tmp/ccF3vcso.s 			page 153


 4363              		.loc 1 2341 9 view .LVU1294
 4364 052e 3320     		movs	r0, #51
 4365 0530 B5E5     		b	.L347
 4366              	.LVL360:
 4367              	.L489:
2302:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4368              		.loc 1 2302 5 is_stmt 1 view .LVU1295
 4369 0532 FFF7FEFF 		bl	reset_arg
 4370              	.LVL361:
2303:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4371              		.loc 1 2303 5 view .LVU1296
2303:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4372              		.loc 1 2303 12 is_stmt 0 view .LVU1297
 4373 0536 40F25510 		movw	r0, #341
 4374 053a B0E5     		b	.L347
 4375              	.LVL362:
 4376              	.L490:
2305:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 4377              		.loc 1 2305 5 is_stmt 1 view .LVU1298
 4378 053c FFF7FEFF 		bl	reset_arg
 4379              	.LVL363:
2306:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4380              		.loc 1 2306 5 view .LVU1299
2306:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4381              		.loc 1 2306 12 is_stmt 0 view .LVU1300
 4382 0540 4FF4AB70 		mov	r0, #342
 4383 0544 ABE5     		b	.L347
 4384              	.LVL364:
 4385              	.L364:
2090:src/keys.c    **** 	  case regY_idx:
 4386              		.loc 1 2090 6 is_stmt 1 view .LVU1301
2090:src/keys.c    **** 	  case regY_idx:
 4387              		.loc 1 2090 13 is_stmt 0 view .LVU1302
 4388 0546 0120     		movs	r0, #1
 4389              	.LVL365:
2090:src/keys.c    **** 	  case regY_idx:
 4390              		.loc 1 2090 13 view .LVU1303
 4391 0548 ABE6     		b	.L473
 4392              	.L494:
 4393 054a 00BF     		.align	2
 4394              	.L493:
 4395 054c CDCCCCCC 		.word	-858993459
 4396              		.cfi_endproc
 4397              	.LFE42:
 4399              		.section	.text.cur_shift,"ax",%progbits
 4400              		.align	1
 4401              		.p2align 2,,3
 4402              		.global	cur_shift
 4403              		.syntax unified
 4404              		.thumb
 4405              		.thumb_func
 4406              		.fpu fpv4-sp-d16
 4408              	cur_shift:
 4409              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4410              		.loc 1 96 29 is_stmt 1 view -0
 4411              		.cfi_startproc
ARM GAS  /tmp/ccF3vcso.s 			page 154


 4412              		@ args = 0, pretend = 0, frame = 0
 4413              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4414              		.loc 1 97 2 view .LVU1305
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4415              		.loc 1 96 29 is_stmt 0 view .LVU1306
 4416 0000 08B5     		push	{r3, lr}
 4417              		.cfi_def_cfa_offset 8
 4418              		.cfi_offset 3, -8
 4419              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4420              		.loc 1 97 18 view .LVU1307
 4421 0002 FFF7FEFF 		bl	shift_down
 4422              	.LVL366:
  98:src/keys.c    **** }
 4423              		.loc 1 98 2 is_stmt 1 view .LVU1308
  98:src/keys.c    **** }
 4424              		.loc 1 98 52 is_stmt 0 view .LVU1309
 4425 0006 08B9     		cbnz	r0, .L496
  98:src/keys.c    **** }
 4426              		.loc 1 98 52 discriminator 1 view .LVU1310
 4427 0008 014B     		ldr	r3, .L498
 4428 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4429              	.LVL367:
 4430              	.L496:
  99:src/keys.c    **** 
 4431              		.loc 1 99 1 discriminator 4 view .LVU1311
 4432 000c 08BD     		pop	{r3, pc}
 4433              	.L499:
 4434 000e 00BF     		.align	2
 4435              	.L498:
 4436 0010 00000000 		.word	StateWhileOn
 4437              		.cfi_endproc
 4438              	.LFE0:
 4440              		.section	.text.reset_shift,"ax",%progbits
 4441              		.align	1
 4442              		.p2align 2,,3
 4443              		.global	reset_shift
 4444              		.syntax unified
 4445              		.thumb
 4446              		.thumb_func
 4447              		.fpu fpv4-sp-d16
 4449              	reset_shift:
 4450              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4451              		.loc 1 114 31 is_stmt 1 view -0
 4452              		.cfi_startproc
 4453              		@ args = 0, pretend = 0, frame = 0
 4454              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4455              		.loc 1 115 2 view .LVU1313
 4456              	.LVL368:
 4457              	.LBB505:
 4458              	.LBI505:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4459              		.loc 1 104 20 view .LVU1314
 4460              	.LBB506:
ARM GAS  /tmp/ccF3vcso.s 			page 155


 105:src/keys.c    **** 	State2.shifts = shift;
 4461              		.loc 1 105 2 view .LVU1315
 4462              	.LBB507:
 4463              	.LBI507:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4464              		.loc 1 96 13 view .LVU1316
 4465              	.LBB508:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4466              		.loc 1 97 2 view .LVU1317
 4467              	.LBE508:
 4468              	.LBE507:
 4469              	.LBE506:
 4470              	.LBE505:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4471              		.loc 1 114 31 is_stmt 0 view .LVU1318
 4472 0000 08B5     		push	{r3, lr}
 4473              		.cfi_def_cfa_offset 8
 4474              		.cfi_offset 3, -8
 4475              		.cfi_offset 14, -4
 4476              	.LBB512:
 4477              	.LBB511:
 4478              	.LBB510:
 4479              	.LBB509:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4480              		.loc 1 97 18 view .LVU1319
 4481 0002 FFF7FEFF 		bl	shift_down
 4482              	.LVL369:
  98:src/keys.c    **** }
 4483              		.loc 1 98 2 is_stmt 1 view .LVU1320
  98:src/keys.c    **** }
 4484              		.loc 1 98 52 is_stmt 0 view .LVU1321
 4485 0006 034B     		ldr	r3, .L505
 4486 0008 00B9     		cbnz	r0, .L501
 4487 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4488              	.LVL370:
 4489              	.L501:
  98:src/keys.c    **** }
 4490              		.loc 1 98 52 view .LVU1322
 4491              	.LBE509:
 4492              	.LBE510:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4493              		.loc 1 106 2 is_stmt 1 view .LVU1323
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4494              		.loc 1 106 16 is_stmt 0 view .LVU1324
 4495 000c 0022     		movs	r2, #0
 4496 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4497              		.loc 1 108 2 is_stmt 1 view .LVU1325
 4498              	.LVL371:
 108:src/keys.c    **** }
 4499              		.loc 1 108 2 is_stmt 0 view .LVU1326
 4500              	.LBE511:
 4501              	.LBE512:
 116:src/keys.c    **** 
 4502              		.loc 1 116 1 view .LVU1327
 4503 0010 08BD     		pop	{r3, pc}
 4504              	.L506:
ARM GAS  /tmp/ccF3vcso.s 			page 156


 4505 0012 00BF     		.align	2
 4506              	.L505:
 4507 0014 00000000 		.word	StateWhileOn
 4508              		.cfi_endproc
 4509              	.LFE2:
 4511              		.section	.text.keycode_to_row_column,"ax",%progbits
 4512              		.align	1
 4513              		.p2align 2,,3
 4514              		.global	keycode_to_row_column
 4515              		.syntax unified
 4516              		.thumb
 4517              		.thumb_func
 4518              		.fpu fpv4-sp-d16
 4520              	keycode_to_row_column:
 4521              	.LVL372:
 4522              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4523              		.loc 1 180 1 is_stmt 1 view -0
 4524              		.cfi_startproc
 4525              		@ args = 0, pretend = 0, frame = 0
 4526              		@ frame_needed = 0, uses_anonymous_args = 0
 4527              		@ link register save eliminated.
 181:src/keys.c    **** }
 4528              		.loc 1 181 2 view .LVU1329
 181:src/keys.c    **** }
 4529              		.loc 1 181 18 is_stmt 0 view .LVU1330
 4530 0000 074A     		ldr	r2, .L508
 4531 0002 82FB0032 		smull	r3, r2, r2, r0
 4532 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4533              		.loc 1 181 24 view .LVU1331
 4534 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4535 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4536              		.loc 1 181 33 view .LVU1332
 4537 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4538 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4539              		.loc 1 181 12 view .LVU1333
 4540 0018 02F10B00 		add	r0, r2, #11
 4541              	.LVL373:
 182:src/keys.c    **** 
 4542              		.loc 1 182 1 view .LVU1334
 4543 001c 1844     		add	r0, r0, r3
 4544 001e 7047     		bx	lr
 4545              	.L509:
 4546              		.align	2
 4547              	.L508:
 4548 0020 ABAAAA2A 		.word	715827883
 4549              		.cfi_endproc
 4550              	.LFE6:
 4552              		.section	.text.row_column_to_keycode,"ax",%progbits
 4553              		.align	1
 4554              		.p2align 2,,3
 4555              		.global	row_column_to_keycode
 4556              		.syntax unified
 4557              		.thumb
ARM GAS  /tmp/ccF3vcso.s 			page 157


 4558              		.thumb_func
 4559              		.fpu fpv4-sp-d16
 4561              	row_column_to_keycode:
 4562              	.LVL374:
 4563              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4564              		.loc 1 190 1 is_stmt 1 view -0
 4565              		.cfi_startproc
 4566              		@ args = 0, pretend = 0, frame = 0
 4567              		@ frame_needed = 0, uses_anonymous_args = 0
 4568              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4569              		.loc 1 191 2 view .LVU1336
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4570              		.loc 1 191 14 is_stmt 0 view .LVU1337
 4571 0000 0E4A     		ldr	r2, .L516
 4572 0002 82FB0032 		smull	r3, r2, r2, r0
 4573 0006 C317     		asrs	r3, r0, #31
 4574 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4575              		.loc 1 192 14 view .LVU1338
 4576 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4577              		.loc 1 191 6 view .LVU1339
 4578 0010 013B     		subs	r3, r3, #1
 4579              	.LVL375:
 192:src/keys.c    **** 
 4580              		.loc 1 192 2 is_stmt 1 view .LVU1340
 192:src/keys.c    **** 
 4581              		.loc 1 192 14 is_stmt 0 view .LVU1341
 4582 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4583              	.LVL376:
 194:src/keys.c    **** 		return -1;
 4584              		.loc 1 194 5 view .LVU1342
 4585 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4586              		.loc 1 192 6 view .LVU1343
 4587 0018 00F1FF30 		add	r0, r0, #-1
 4588              	.LVL377:
 194:src/keys.c    **** 		return -1;
 4589              		.loc 1 194 2 is_stmt 1 view .LVU1344
 194:src/keys.c    **** 		return -1;
 4590              		.loc 1 194 5 is_stmt 0 view .LVU1345
 4591 001c 0AD8     		bhi	.L515
 194:src/keys.c    **** 		return -1;
 4592              		.loc 1 194 36 discriminator 1 view .LVU1346
 4593 001e 012B     		cmp	r3, #1
 4594 0020 CCBF     		ite	gt
 4595 0022 0422     		movgt	r2, #4
 4596 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4597              		.loc 1 194 25 discriminator 1 view .LVU1347
 4598 0026 8242     		cmp	r2, r0
 4599 0028 04DB     		blt	.L515
 196:src/keys.c    **** }
 4600              		.loc 1 196 2 is_stmt 1 view .LVU1348
 196:src/keys.c    **** }
ARM GAS  /tmp/ccF3vcso.s 			page 158


 4601              		.loc 1 196 13 is_stmt 0 view .LVU1349
 4602 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4603              	.LVL378:
 196:src/keys.c    **** }
 4604              		.loc 1 196 17 view .LVU1350
 4605 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4606              	.LVL379:
 196:src/keys.c    **** }
 4607              		.loc 1 196 17 view .LVU1351
 4608 0032 7047     		bx	lr
 4609              	.LVL380:
 4610              	.L515:
 195:src/keys.c    **** 	return row * 6 + col;
 4611              		.loc 1 195 10 view .LVU1352
 4612 0034 4FF0FF30 		mov	r0, #-1
 4613              	.LVL381:
 197:src/keys.c    **** 
 4614              		.loc 1 197 1 view .LVU1353
 4615 0038 7047     		bx	lr
 4616              	.L517:
 4617 003a 00BF     		.align	2
 4618              	.L516:
 4619 003c 67666666 		.word	1717986919
 4620              		.cfi_endproc
 4621              	.LFE7:
 4623              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4624              		.align	1
 4625              		.p2align 2,,3
 4626              		.global	keycode_to_digit_or_register
 4627              		.syntax unified
 4628              		.thumb
 4629              		.thumb_func
 4630              		.fpu fpv4-sp-d16
 4632              	keycode_to_digit_or_register:
 4633              	.LVL382:
 4634              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4635              		.loc 1 211 1 is_stmt 1 view -0
 4636              		.cfi_startproc
 4637              		@ args = 0, pretend = 0, frame = 0
 4638              		@ frame_needed = 0, uses_anonymous_args = 0
 4639              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4640              		.loc 1 212 3 view .LVU1355
 234:src/keys.c    **** }
 4641              		.loc 1 234 3 view .LVU1356
 4642              	.LBB513:
 4643              	.LBI513:
 131:src/keys.c    **** {
 4644              		.loc 1 131 12 view .LVU1357
 4645              	.LBB514:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4646              		.loc 1 133 2 view .LVU1358
 143:src/keys.c    **** }
 4647              		.loc 1 143 2 view .LVU1359
 143:src/keys.c    **** }
 4648              		.loc 1 143 23 is_stmt 0 view .LVU1360
ARM GAS  /tmp/ccF3vcso.s 			page 159


 4649 0000 024B     		ldr	r3, .L519
 4650              	.LBE514:
 4651              	.LBE513:
 234:src/keys.c    **** }
 4652              		.loc 1 234 28 view .LVU1361
 4653 0002 034A     		ldr	r2, .L519+4
 4654              	.LBB516:
 4655              	.LBB515:
 143:src/keys.c    **** }
 4656              		.loc 1 143 23 view .LVU1362
 4657 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4658              	.LBE515:
 4659              	.LBE516:
 235:src/keys.c    **** #else
 4660              		.loc 1 235 1 view .LVU1363
 4661 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4662              	.LVL383:
 235:src/keys.c    **** #else
 4663              		.loc 1 235 1 view .LVU1364
 4664 0008 7047     		bx	lr
 4665              	.L520:
 4666 000a 00BF     		.align	2
 4667              	.L519:
 4668 000c 00000000 		.word	.LANCHOR6
 4669 0010 00000000 		.word	.LANCHOR5
 4670              		.cfi_endproc
 4671              	.LFE8:
 4673              		.section	.text.init_state,"ax",%progbits
 4674              		.align	1
 4675              		.p2align 2,,3
 4676              		.global	init_state
 4677              		.syntax unified
 4678              		.thumb
 4679              		.thumb_func
 4680              		.fpu fpv4-sp-d16
 4682              	init_state:
 4683              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4684              		.loc 1 615 23 is_stmt 1 view -0
 4685              		.cfi_startproc
 4686              		@ args = 0, pretend = 0, frame = 0
 4687              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4688              		.loc 1 617 2 view .LVU1366
 615:src/keys.c    **** #ifndef REALBUILD
 4689              		.loc 1 615 23 is_stmt 0 view .LVU1367
 4690 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4691              		.cfi_def_cfa_offset 32
 4692              		.cfi_offset 3, -32
 4693              		.cfi_offset 4, -28
 4694              		.cfi_offset 5, -24
 4695              		.cfi_offset 6, -20
 4696              		.cfi_offset 7, -16
 4697              		.cfi_offset 8, -12
 4698              		.cfi_offset 9, -8
 4699              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
ARM GAS  /tmp/ccF3vcso.s 			page 160


 4700              		.loc 1 617 25 view .LVU1368
 4701 0004 1B4C     		ldr	r4, .L523
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4702              		.loc 1 625 10 view .LVU1369
 4703 0006 4FF00008 		mov	r8, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4704              		.loc 1 629 2 view .LVU1370
 4705 000a 4146     		mov	r1, r8
 4706 000c 1422     		movs	r2, #20
 4707 000e 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4708              		.loc 1 617 25 view .LVU1371
 4709 0012 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4710              		.loc 1 618 25 view .LVU1372
 4711 0014 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4712              		.loc 1 622 10 view .LVU1373
 4713 0016 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4714              		.loc 1 623 10 view .LVU1374
 4715 0018 94F91390 		ldrsb	r9, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4716              		.loc 1 625 10 view .LVU1375
 4717 001c 84F81F80 		strb	r8, [r4, #31]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4718              		.loc 1 629 2 view .LVU1376
 4719 0020 FFF7FEFF 		bl	xset
 4720              	.LVL384:
 667:src/keys.c    **** #endif
 4721              		.loc 1 667 2 view .LVU1377
 4722 0024 144B     		ldr	r3, .L523+4
 4723 0026 1B68     		ldr	r3, [r3]
 4724 0028 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 4725 002c 68F34102 		bfi	r2, r8, #1, #1
 4726 0030 83F8AD27 		strb	r2, [r3, #1965]
 675:src/keys.c    **** 	update_program_bounds(1);
 4727              		.loc 1 675 17 view .LVU1378
 4728 0034 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 674:src/keys.c    **** 	State2.runmode = 1;
 4729              		.loc 1 674 14 view .LVU1379
 4730 0036 0722     		movs	r2, #7
 675:src/keys.c    **** 	update_program_bounds(1);
 4731              		.loc 1 675 17 view .LVU1380
 4732 0038 43F04003 		orr	r3, r3, #64
 676:src/keys.c    **** 	set_lift();
 4733              		.loc 1 676 2 view .LVU1381
 4734 003c 0120     		movs	r0, #1
 674:src/keys.c    **** 	State2.runmode = 1;
 4735              		.loc 1 674 14 view .LVU1382
 4736 003e E273     		strb	r2, [r4, #15]
 675:src/keys.c    **** 	update_program_bounds(1);
 4737              		.loc 1 675 17 view .LVU1383
 4738 0040 A375     		strb	r3, [r4, #22]
 676:src/keys.c    **** 	set_lift();
 4739              		.loc 1 676 2 view .LVU1384
 4740 0042 FFF7FEFF 		bl	update_program_bounds
ARM GAS  /tmp/ccF3vcso.s 			page 161


 4741              	.LVL385:
 677:src/keys.c    **** 
 4742              		.loc 1 677 2 view .LVU1385
 4743 0046 FFF7FEFF 		bl	set_lift
 4744              	.LVL386:
 684:src/keys.c    **** 	State2.flags = a;
 4745              		.loc 1 684 15 view .LVU1386
 4746 004a E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 685:src/keys.c    **** #else
 4747              		.loc 1 685 15 view .LVU1387
 4748 004c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 689:src/keys.c    **** }
 4749              		.loc 1 689 15 view .LVU1388
 4750 004e 0B49     		ldr	r1, .L523+8
 682:src/keys.c    **** #ifndef REALBUILD
 4751              		.loc 1 682 10 view .LVU1389
 4752 0050 84F81390 		strb	r9, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4753              		.loc 1 617 25 view .LVU1390
 4754 0054 05F00105 		and	r5, r5, #1
 4755              	.LVL387:
 618:src/keys.c    **** #else
 4756              		.loc 1 618 2 is_stmt 1 view .LVU1391
 618:src/keys.c    **** #else
 4757              		.loc 1 618 25 is_stmt 0 view .LVU1392
 4758 0058 F609     		lsrs	r6, r6, #7
 4759              	.LVL388:
 622:src/keys.c    **** 	int k = LastKey;
 4760              		.loc 1 622 2 is_stmt 1 view .LVU1393
 622:src/keys.c    **** 	int k = LastKey;
 4761              		.loc 1 622 10 is_stmt 0 view .LVU1394
 4762 005a FFB2     		uxtb	r7, r7
 4763              	.LVL389:
 623:src/keys.c    **** 
 4764              		.loc 1 623 2 is_stmt 1 view .LVU1395
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4765              		.loc 1 625 2 view .LVU1396
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4766              		.loc 1 629 2 view .LVU1397
 667:src/keys.c    **** #endif
 4767              		.loc 1 667 2 view .LVU1398
 674:src/keys.c    **** 	State2.runmode = 1;
 4768              		.loc 1 674 2 view .LVU1399
 675:src/keys.c    **** 	update_program_bounds(1);
 4769              		.loc 1 675 2 view .LVU1400
 676:src/keys.c    **** 	set_lift();
 4770              		.loc 1 676 2 view .LVU1401
 677:src/keys.c    **** 
 4771              		.loc 1 677 2 view .LVU1402
 681:src/keys.c    **** 	LastKey = k;
 4772              		.loc 1 681 2 view .LVU1403
 684:src/keys.c    **** 	State2.flags = a;
 4773              		.loc 1 684 15 is_stmt 0 view .LVU1404
 4774 005c 66F3C712 		bfi	r2, r6, #7, #1
 685:src/keys.c    **** #else
 4775              		.loc 1 685 15 view .LVU1405
 4776 0060 65F30003 		bfi	r3, r5, #0, #1
ARM GAS  /tmp/ccF3vcso.s 			page 162


 689:src/keys.c    **** }
 4777              		.loc 1 689 15 view .LVU1406
 4778 0064 6420     		movs	r0, #100
 684:src/keys.c    **** 	State2.flags = a;
 4779              		.loc 1 684 15 view .LVU1407
 4780 0066 E275     		strb	r2, [r4, #23]
 685:src/keys.c    **** #else
 4781              		.loc 1 685 15 view .LVU1408
 4782 0068 2376     		strb	r3, [r4, #24]
 681:src/keys.c    **** 	LastKey = k;
 4783              		.loc 1 681 10 view .LVU1409
 4784 006a A774     		strb	r7, [r4, #18]
 682:src/keys.c    **** #ifndef REALBUILD
 4785              		.loc 1 682 2 is_stmt 1 view .LVU1410
 684:src/keys.c    **** 	State2.flags = a;
 4786              		.loc 1 684 2 view .LVU1411
 685:src/keys.c    **** #else
 4787              		.loc 1 685 2 view .LVU1412
 689:src/keys.c    **** }
 4788              		.loc 1 689 2 view .LVU1413
 689:src/keys.c    **** }
 4789              		.loc 1 689 15 is_stmt 0 view .LVU1414
 4790 006c 0860     		str	r0, [r1]
 690:src/keys.c    **** 
 4791              		.loc 1 690 1 view .LVU1415
 4792 006e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4793              	.LVL390:
 4794              	.L524:
 690:src/keys.c    **** 
 4795              		.loc 1 690 1 view .LVU1416
 4796 0072 00BF     		.align	2
 4797              	.L523:
 4798 0074 00000000 		.word	StateWhileOn
 4799 0078 00000000 		.word	main_ram
 4800 007c 00000000 		.word	ShowRegister
 4801              		.cfi_endproc
 4802              	.LFE13:
 4804              		.section	.text.process_cmplx,"ax",%progbits
 4805              		.align	1
 4806              		.p2align 2,,3
 4807              		.syntax unified
 4808              		.thumb
 4809              		.thumb_func
 4810              		.fpu fpv4-sp-d16
 4812              	process_cmplx:
 4813              	.LVL391:
 4814              	.LFB27:
1470:src/keys.c    **** #define _RARG   0xFF00
 4815              		.loc 1 1470 43 is_stmt 1 view -0
 4816              		.cfi_startproc
 4817              		@ args = 0, pretend = 0, frame = 0
 4818              		@ frame_needed = 0, uses_anonymous_args = 0
1475:src/keys.c    **** 		// Row 1
 4819              		.loc 1 1475 2 view .LVU1418
1526:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4820              		.loc 1 1526 2 view .LVU1419
 4821              	.LBB517:
ARM GAS  /tmp/ccF3vcso.s 			page 163


 4822              	.LBI517:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4823              		.loc 1 114 13 view .LVU1420
 4824              	.LBE517:
 115:src/keys.c    **** }
 4825              		.loc 1 115 2 view .LVU1421
 4826              	.LBB534:
 4827              	.LBB518:
 4828              	.LBI518:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4829              		.loc 1 104 20 view .LVU1422
 4830              	.LBB519:
 105:src/keys.c    **** 	State2.shifts = shift;
 4831              		.loc 1 105 2 view .LVU1423
 4832              	.LBB520:
 4833              	.LBI520:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4834              		.loc 1 96 13 view .LVU1424
 4835              	.LBB521:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4836              		.loc 1 97 2 view .LVU1425
 4837              	.LBE521:
 4838              	.LBE520:
 4839              	.LBE519:
 4840              	.LBE518:
 4841              	.LBE534:
1470:src/keys.c    **** #define _RARG   0xFF00
 4842              		.loc 1 1470 43 is_stmt 0 view .LVU1426
 4843 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4844              		.cfi_def_cfa_offset 24
 4845              		.cfi_offset 3, -24
 4846              		.cfi_offset 4, -20
 4847              		.cfi_offset 5, -16
 4848              		.cfi_offset 6, -12
 4849              		.cfi_offset 7, -8
 4850              		.cfi_offset 14, -4
1470:src/keys.c    **** #define _RARG   0xFF00
 4851              		.loc 1 1470 43 view .LVU1427
 4852 0002 0546     		mov	r5, r0
 4853              	.LBB535:
 4854              	.LBB530:
 4855              	.LBB526:
 4856              	.LBB524:
 4857              	.LBB522:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4858              		.loc 1 97 18 view .LVU1428
 4859 0004 FFF7FEFF 		bl	shift_down
 4860              	.LVL392:
  98:src/keys.c    **** }
 4861              		.loc 1 98 2 is_stmt 1 view .LVU1429
  98:src/keys.c    **** }
 4862              		.loc 1 98 52 is_stmt 0 view .LVU1430
 4863 0008 00B3     		cbz	r0, .L543
 4864 000a 2E4F     		ldr	r7, .L551
 4865 000c 0446     		mov	r4, r0
 4866              	.L526:
 4867              	.LVL393:
ARM GAS  /tmp/ccF3vcso.s 			page 164


  98:src/keys.c    **** }
 4868              		.loc 1 98 52 view .LVU1431
 4869              	.LBE522:
 4870              	.LBE524:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4871              		.loc 1 106 2 is_stmt 1 view .LVU1432
 4872              	.LBE526:
 4873              	.LBE530:
 4874              	.LBE535:
 4875              	.LBB536:
 4876              	.LBB537:
 158:src/keys.c    **** }
 4877              		.loc 1 158 23 is_stmt 0 view .LVU1433
 4878 000e 2E4B     		ldr	r3, .L551+4
 4879              	.LBE537:
 4880              	.LBE536:
1528:src/keys.c    **** 	State2.cmplx = 0;
 4881              		.loc 1 1528 21 view .LVU1434
 4882 0010 2E48     		ldr	r0, .L551+8
 4883              	.LBB540:
 4884              	.LBB538:
 158:src/keys.c    **** }
 4885              		.loc 1 158 23 view .LVU1435
 4886 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4887              	.LBE538:
 4888              	.LBE540:
1529:src/keys.c    **** 
 4889              		.loc 1 1529 15 view .LVU1436
 4890 0014 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
1528:src/keys.c    **** 	State2.cmplx = 0;
 4891              		.loc 1 1528 21 view .LVU1437
 4892 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4893              	.LBB541:
 4894              	.LBB531:
 4895              	.LBB527:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4896              		.loc 1 106 16 view .LVU1438
 4897 001a 0021     		movs	r1, #0
 4898              	.LBE527:
 4899              	.LBE531:
 4900              	.LBE541:
1528:src/keys.c    **** 	State2.cmplx = 0;
 4901              		.loc 1 1528 21 view .LVU1439
 4902 001c 30F81360 		ldrh	r6, [r0, r3, lsl #1]
 4903              	.LBB542:
 4904              	.LBB532:
 4905              	.LBB528:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4906              		.loc 1 106 16 view .LVU1440
 4907 0020 3974     		strb	r1, [r7, #16]
 108:src/keys.c    **** }
 4908              		.loc 1 108 2 is_stmt 1 view .LVU1441
 4909              	.LVL394:
 108:src/keys.c    **** }
 4910              		.loc 1 108 2 is_stmt 0 view .LVU1442
 4911              	.LBE528:
 4912              	.LBE532:
ARM GAS  /tmp/ccF3vcso.s 			page 165


 4913              	.LBE542:
1527:src/keys.c    **** 	int op = op_map[lc][shift];
 4914              		.loc 1 1527 2 is_stmt 1 view .LVU1443
 4915              	.LBB543:
 4916              	.LBI536:
 146:src/keys.c    **** {
 4917              		.loc 1 146 12 view .LVU1444
 4918              	.LBB539:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4919              		.loc 1 148 2 view .LVU1445
 158:src/keys.c    **** }
 4920              		.loc 1 158 2 view .LVU1446
 158:src/keys.c    **** }
 4921              		.loc 1 158 2 is_stmt 0 view .LVU1447
 4922              	.LBE539:
 4923              	.LBE543:
1528:src/keys.c    **** 	State2.cmplx = 0;
 4924              		.loc 1 1528 2 is_stmt 1 view .LVU1448
1529:src/keys.c    **** 
 4925              		.loc 1 1529 2 view .LVU1449
1531:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4926              		.loc 1 1531 5 is_stmt 0 view .LVU1450
 4927 0022 06F47F43 		and	r3, r6, #65280
1529:src/keys.c    **** 
 4928              		.loc 1 1529 15 view .LVU1451
 4929 0026 61F34102 		bfi	r2, r1, #1, #1
1531:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4930              		.loc 1 1531 5 view .LVU1452
 4931 002a B3F57F4F 		cmp	r3, #65280
1529:src/keys.c    **** 
 4932              		.loc 1 1529 15 view .LVU1453
 4933 002e 7A75     		strb	r2, [r7, #21]
1531:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4934              		.loc 1 1531 2 is_stmt 1 view .LVU1454
1531:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4935              		.loc 1 1531 5 is_stmt 0 view .LVU1455
 4936 0030 36D0     		beq	.L546
1535:src/keys.c    **** 		// HYP
 4937              		.loc 1 1535 2 is_stmt 1 view .LVU1456
1535:src/keys.c    **** 		// HYP
 4938              		.loc 1 1535 5 is_stmt 0 view .LVU1457
 4939 0032 DDB1     		cbz	r5, .L547
1545:src/keys.c    **** 		switch (c) {
 4940              		.loc 1 1545 2 is_stmt 1 view .LVU1458
1545:src/keys.c    **** 		switch (c) {
 4941              		.loc 1 1545 5 is_stmt 0 view .LVU1459
 4942 0034 2CB1     		cbz	r4, .L531
1546:src/keys.c    **** 		case K_CMPLX:
 4943              		.loc 1 1546 3 is_stmt 1 view .LVU1460
 4944 0036 242D     		cmp	r5, #36
 4945 0038 2CD0     		beq	.L532
 4946 003a 2D2D     		cmp	r5, #45
 4947 003c 23D0     		beq	.L533
 4948 003e 1F2D     		cmp	r5, #31
 4949 0040 0CD0     		beq	.L548
 4950              	.L531:
1570:src/keys.c    **** #else
ARM GAS  /tmp/ccF3vcso.s 			page 166


 4951              		.loc 1 1570 2 view .LVU1461
 4952              	.LVL395:
 4953              	.LBB544:
 4954              	.LBI544:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4955              		.loc 1 716 12 view .LVU1462
 4956              	.LBB545:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 4957              		.loc 1 717 2 view .LVU1463
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 4958              		.loc 1 717 6 is_stmt 0 view .LVU1464
 4959 0042 3312     		asrs	r3, r6, #8
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 4960              		.loc 1 717 5 view .LVU1465
 4961 0044 012B     		cmp	r3, #1
 4962 0046 04D0     		beq	.L549
 4963              	.LVL396:
 4964              	.L525:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 4965              		.loc 1 717 5 view .LVU1466
 4966              	.LBE545:
 4967              	.LBE544:
1578:src/keys.c    **** 
 4968              		.loc 1 1578 1 view .LVU1467
 4969 0048 3046     		mov	r0, r6
 4970 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4971              	.LVL397:
 4972              	.L543:
 4973              	.LBB551:
 4974              	.LBB533:
 4975              	.LBB529:
 4976              	.LBB525:
 4977              	.LBB523:
  98:src/keys.c    **** }
 4978              		.loc 1 98 52 view .LVU1468
 4979 004c 1D4F     		ldr	r7, .L551
 4980 004e 3C7C     		ldrb	r4, [r7, #16]	@ zero_extendqisi2
 4981 0050 DDE7     		b	.L526
 4982              	.LVL398:
 4983              	.L549:
  98:src/keys.c    **** }
 4984              		.loc 1 98 52 view .LVU1469
 4985              	.LBE523:
 4986              	.LBE525:
 4987              	.LBE529:
 4988              	.LBE533:
 4989              	.LBE551:
 4990              	.LBB552:
 4991              	.LBB546:
 4992 0052 3046     		mov	r0, r6
 4993              	.LBE546:
 4994              	.LBE552:
1578:src/keys.c    **** 
 4995              		.loc 1 1578 1 view .LVU1470
 4996 0054 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 4997              		.cfi_remember_state
 4998              		.cfi_restore 14
ARM GAS  /tmp/ccF3vcso.s 			page 167


 4999              		.cfi_restore 7
 5000              		.cfi_restore 6
 5001              		.cfi_restore 5
 5002              		.cfi_restore 4
 5003              		.cfi_restore 3
 5004              		.cfi_def_cfa_offset 0
 5005              	.LVL399:
 5006              	.LBB553:
 5007              	.LBB547:
1578:src/keys.c    **** 
 5008              		.loc 1 1578 1 view .LVU1471
 5009 0058 FFF7FEBF 		b	check_confirm.part.0
 5010              	.LVL400:
 5011              	.L548:
 5012              		.cfi_restore_state
1578:src/keys.c    **** 
 5013              		.loc 1 1578 1 view .LVU1472
 5014              	.LBE547:
 5015              	.LBE553:
1552:src/keys.c    **** 				if (is_bad_cmdline())
 5016              		.loc 1 1552 4 is_stmt 1 view .LVU1473
1552:src/keys.c    **** 				if (is_bad_cmdline())
 5017              		.loc 1 1552 7 is_stmt 0 view .LVU1474
 5018 005c 332E     		cmp	r6, #51
 5019 005e 02D0     		beq	.L545
1553:src/keys.c    **** 					return STATE_UNFINISHED;
 5020              		.loc 1 1553 5 is_stmt 1 view .LVU1475
1553:src/keys.c    **** 					return STATE_UNFINISHED;
 5021              		.loc 1 1553 9 is_stmt 0 view .LVU1476
 5022 0060 FFF7FEFF 		bl	is_bad_cmdline
 5023              	.LVL401:
1553:src/keys.c    **** 					return STATE_UNFINISHED;
 5024              		.loc 1 1553 8 view .LVU1477
 5025 0064 28B3     		cbz	r0, .L550
 5026              	.L545:
1542:src/keys.c    **** 	}
 5027              		.loc 1 1542 3 is_stmt 1 view .LVU1478
1542:src/keys.c    **** 	}
 5028              		.loc 1 1542 10 is_stmt 0 view .LVU1479
 5029 0066 3326     		movs	r6, #51
 5030              	.LVL402:
1578:src/keys.c    **** 
 5031              		.loc 1 1578 1 view .LVU1480
 5032 0068 3046     		mov	r0, r6
 5033 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5034              	.LVL403:
 5035              	.L547:
1537:src/keys.c    **** 		//		print_debug(100,1);
 5036              		.loc 1 1537 3 is_stmt 1 view .LVU1481
 5037 006c FFF7FEFF 		bl	process_cmdline_set_lift
 5038              	.LVL404:
1539:src/keys.c    **** 		State2.dot = op;
 5039              		.loc 1 1539 3 view .LVU1482
1540:src/keys.c    **** 		State2.cmplx = 1;
 5040              		.loc 1 1540 3 view .LVU1483
1541:src/keys.c    **** 		return STATE_UNFINISHED;
 5041              		.loc 1 1541 3 view .LVU1484
ARM GAS  /tmp/ccF3vcso.s 			page 168


1541:src/keys.c    **** 		return STATE_UNFINISHED;
 5042              		.loc 1 1541 16 is_stmt 0 view .LVU1485
 5043 0070 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 5044 0072 06F00103 		and	r3, r6, #1
 5045 0076 9B01     		lsls	r3, r3, #6
 5046 0078 43F02203 		orr	r3, r3, #34
 5047 007c 22F06202 		bic	r2, r2, #98
 5048 0080 1343     		orrs	r3, r3, r2
 5049 0082 7B75     		strb	r3, [r7, #21]
 5050 0084 EFE7     		b	.L545
 5051              	.L533:
1548:src/keys.c    **** 			break;
 5052              		.loc 1 1548 4 is_stmt 1 view .LVU1486
 5053              	.LVL405:
 5054              	.LBB554:
 5055              	.LBI554:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5056              		.loc 1 104 20 view .LVU1487
 5057              	.LBB555:
 105:src/keys.c    **** 	State2.shifts = shift;
 5058              		.loc 1 105 2 view .LVU1488
 5059              	.LBB556:
 5060              	.LBI556:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5061              		.loc 1 96 13 view .LVU1489
 5062              	.LBB557:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5063              		.loc 1 97 2 view .LVU1490
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5064              		.loc 1 97 18 is_stmt 0 view .LVU1491
 5065 0086 FFF7FEFF 		bl	shift_down
 5066              	.LVL406:
  98:src/keys.c    **** }
 5067              		.loc 1 98 2 is_stmt 1 view .LVU1492
 5068              	.LBE557:
 5069              	.LBE556:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5070              		.loc 1 106 2 view .LVU1493
 5071              	.LBE555:
 5072              	.LBE554:
 5073              	.LBB559:
 5074              	.LBB548:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5075              		.loc 1 717 6 is_stmt 0 view .LVU1494
 5076 008a 3312     		asrs	r3, r6, #8
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5077              		.loc 1 717 5 view .LVU1495
 5078 008c 012B     		cmp	r3, #1
 5079              	.LBE548:
 5080              	.LBE559:
 5081              	.LBB560:
 5082              	.LBB558:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5083              		.loc 1 106 16 view .LVU1496
 5084 008e 3C74     		strb	r4, [r7, #16]
 108:src/keys.c    **** }
 5085              		.loc 1 108 2 is_stmt 1 view .LVU1497
ARM GAS  /tmp/ccF3vcso.s 			page 169


 5086              	.LVL407:
 108:src/keys.c    **** }
 5087              		.loc 1 108 2 is_stmt 0 view .LVU1498
 5088              	.LBE558:
 5089              	.LBE560:
1570:src/keys.c    **** #else
 5090              		.loc 1 1570 2 is_stmt 1 view .LVU1499
 5091              	.LBB561:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5092              		.loc 1 716 12 view .LVU1500
 5093              	.LBB549:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5094              		.loc 1 717 2 view .LVU1501
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5095              		.loc 1 717 5 is_stmt 0 view .LVU1502
 5096 0090 DAD1     		bne	.L525
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5097              		.loc 1 717 5 view .LVU1503
 5098 0092 DEE7     		b	.L549
 5099              	.LVL408:
 5100              	.L532:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5101              		.loc 1 717 5 view .LVU1504
 5102              	.LBE549:
 5103              	.LBE561:
1562:src/keys.c    **** 			break;
 5104              		.loc 1 1562 4 is_stmt 1 view .LVU1505
 5105 0094 FFF7FEFF 		bl	init_state
 5106              	.LVL409:
1563:src/keys.c    **** 
 5107              		.loc 1 1563 4 view .LVU1506
1570:src/keys.c    **** #else
 5108              		.loc 1 1570 2 view .LVU1507
 5109              	.LBB562:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5110              		.loc 1 716 12 view .LVU1508
 5111              	.LBB550:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5112              		.loc 1 717 2 view .LVU1509
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5113              		.loc 1 717 6 is_stmt 0 view .LVU1510
 5114 0098 3312     		asrs	r3, r6, #8
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5115              		.loc 1 717 5 view .LVU1511
 5116 009a 012B     		cmp	r3, #1
 5117 009c D4D1     		bne	.L525
 5118 009e D8E7     		b	.L549
 5119              	.LVL410:
 5120              	.L546:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5121              		.loc 1 717 5 view .LVU1512
 5122              	.LBE550:
 5123              	.LBE562:
1532:src/keys.c    **** 		return STATE_UNFINISHED;
 5124              		.loc 1 1532 3 is_stmt 1 view .LVU1513
 5125              	.LBB563:
 5126              	.LBI563:
ARM GAS  /tmp/ccF3vcso.s 			page 170


 552:src/keys.c    **** 	if (is_bad_cmdline())
 5127              		.loc 1 552 13 view .LVU1514
 5128              	.LBB564:
 553:src/keys.c    **** 		return;
 5129              		.loc 1 553 2 view .LVU1515
 553:src/keys.c    **** 		return;
 5130              		.loc 1 553 6 is_stmt 0 view .LVU1516
 5131 00a0 FFF7FEFF 		bl	is_bad_cmdline
 5132              	.LVL411:
 553:src/keys.c    **** 		return;
 5133              		.loc 1 553 5 view .LVU1517
 5134 00a4 0028     		cmp	r0, #0
 5135 00a6 DED1     		bne	.L545
 5136 00a8 F0B2     		uxtb	r0, r6
 5137 00aa FFF7FEFF 		bl	init_arg.part.0
 5138              	.LVL412:
 5139              	.LBE564:
 5140              	.LBE563:
1533:src/keys.c    **** 	}
 5141              		.loc 1 1533 10 view .LVU1518
 5142 00ae 3326     		movs	r6, #51
 5143              	.LVL413:
1533:src/keys.c    **** 	}
 5144              		.loc 1 1533 10 view .LVU1519
 5145 00b0 CAE7     		b	.L525
 5146              	.LVL414:
 5147              	.L550:
1555:src/keys.c    **** 				State2.cmplx = 1;
 5148              		.loc 1 1555 5 is_stmt 1 view .LVU1520
 5149 00b2 FFF7FEFF 		bl	process_cmdline_set_lift
 5150              	.LVL415:
1556:src/keys.c    **** 				State2.test = op;
 5151              		.loc 1 1556 5 view .LVU1521
1556:src/keys.c    **** 				State2.test = op;
 5152              		.loc 1 1556 18 is_stmt 0 view .LVU1522
 5153 00b6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
1557:src/keys.c    **** 			}
 5154              		.loc 1 1557 17 view .LVU1523
 5155 00b8 FE73     		strb	r6, [r7, #15]
1556:src/keys.c    **** 				State2.test = op;
 5156              		.loc 1 1556 18 view .LVU1524
 5157 00ba 43F00203 		orr	r3, r3, #2
 5158 00be 7B75     		strb	r3, [r7, #21]
1557:src/keys.c    **** 			}
 5159              		.loc 1 1557 5 is_stmt 1 view .LVU1525
1559:src/keys.c    **** 
 5160              		.loc 1 1559 11 is_stmt 0 view .LVU1526
 5161 00c0 3326     		movs	r6, #51
 5162              	.LVL416:
1559:src/keys.c    **** 
 5163              		.loc 1 1559 11 view .LVU1527
 5164 00c2 C1E7     		b	.L525
 5165              	.L552:
 5166              		.align	2
 5167              	.L551:
 5168 00c4 00000000 		.word	StateWhileOn
 5169 00c8 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccF3vcso.s 			page 171


 5170 00cc 00000000 		.word	.LANCHOR7
 5171              		.cfi_endproc
 5172              	.LFE27:
 5174              		.section	.text.soft_init_state,"ax",%progbits
 5175              		.align	1
 5176              		.p2align 2,,3
 5177              		.global	soft_init_state
 5178              		.syntax unified
 5179              		.thumb
 5180              		.thumb_func
 5181              		.fpu fpv4-sp-d16
 5183              	soft_init_state:
 5184              	.LFB14:
 692:src/keys.c    ****   int soft;
 5185              		.loc 1 692 28 is_stmt 1 view -0
 5186              		.cfi_startproc
 5187              		@ args = 0, pretend = 0, frame = 0
 5188              		@ frame_needed = 0, uses_anonymous_args = 0
 693:src/keys.c    ****   unsigned int runmode;
 5189              		.loc 1 693 3 view .LVU1529
 694:src/keys.c    ****   unsigned int alphas;
 5190              		.loc 1 694 3 view .LVU1530
 695:src/keys.c    **** 
 5191              		.loc 1 695 3 view .LVU1531
 697:src/keys.c    ****     CmdLineLength = 0;
 5192              		.loc 1 697 3 view .LVU1532
 692:src/keys.c    ****   int soft;
 5193              		.loc 1 692 28 is_stmt 0 view .LVU1533
 5194 0000 38B5     		push	{r3, r4, r5, lr}
 5195              		.cfi_def_cfa_offset 16
 5196              		.cfi_offset 3, -16
 5197              		.cfi_offset 4, -12
 5198              		.cfi_offset 5, -8
 5199              		.cfi_offset 14, -4
 697:src/keys.c    ****     CmdLineLength = 0;
 5200              		.loc 1 697 7 view .LVU1534
 5201 0002 154C     		ldr	r4, .L562
 697:src/keys.c    ****     CmdLineLength = 0;
 5202              		.loc 1 697 6 view .LVU1535
 5203 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5204 0006 1BBB     		cbnz	r3, .L561
 703:src/keys.c    ****     State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5205              		.loc 1 703 3 is_stmt 1 view .LVU1536
 704:src/keys.c    ****   runmode = State2.runmode;
 5206              		.loc 1 704 18 is_stmt 0 view .LVU1537
 5207 0008 144A     		ldr	r2, .L562+4
 5208 000a 6369     		ldr	r3, [r4, #20]
 704:src/keys.c    ****   runmode = State2.runmode;
 5209              		.loc 1 704 61 view .LVU1538
 5210 000c 1A42     		tst	r2, r3
 5211 000e 0FD0     		beq	.L556
 5212              	.L558:
 5213              	.LVL417:
 705:src/keys.c    ****   alphas = State2.alphas;
 5214              		.loc 1 705 3 is_stmt 1 view .LVU1539
 706:src/keys.c    ****   init_state();
 5215              		.loc 1 706 18 is_stmt 0 view .LVU1540
ARM GAS  /tmp/ccF3vcso.s 			page 172


 5216 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5217              	.LVL418:
 706:src/keys.c    ****   init_state();
 5218              		.loc 1 706 3 is_stmt 1 view .LVU1541
 707:src/keys.c    ****   if (soft) {
 5219              		.loc 1 707 3 view .LVU1542
 5220 0012 FFF7FEFF 		bl	init_state
 5221              	.LVL419:
 708:src/keys.c    ****     State2.runmode = runmode;
 5222              		.loc 1 708 3 view .LVU1543
 709:src/keys.c    ****     State2.alphas = alphas;
 5223              		.loc 1 709 5 view .LVU1544
 710:src/keys.c    ****   }
 5224              		.loc 1 710 5 view .LVU1545
 710:src/keys.c    ****   }
 5225              		.loc 1 710 19 is_stmt 0 view .LVU1546
 5226 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5227 0018 05F04805 		and	r5, r5, #72
 5228 001c 23F04803 		bic	r3, r3, #72
 5229 0020 2B43     		orrs	r3, r3, r5
 5230 0022 A375     		strb	r3, [r4, #22]
 712:src/keys.c    ****   display_current_menu();
 5231              		.loc 1 712 3 is_stmt 1 view .LVU1547
 5232 0024 FFF7FEFF 		bl	clear_disp
 5233              	.LVL420:
 713:src/keys.c    **** }
 5234              		.loc 1 713 3 view .LVU1548
 714:src/keys.c    **** 
 5235              		.loc 1 714 1 is_stmt 0 view .LVU1549
 5236 0028 BDE83840 		pop	{r3, r4, r5, lr}
 5237              		.cfi_remember_state
 5238              		.cfi_restore 14
 5239              		.cfi_restore 5
 5240              		.cfi_restore 4
 5241              		.cfi_restore 3
 5242              		.cfi_def_cfa_offset 0
 713:src/keys.c    **** }
 5243              		.loc 1 713 3 view .LVU1550
 5244 002c FFF7FEBF 		b	display_current_menu
 5245              	.LVL421:
 5246              	.L556:
 5247              		.cfi_restore_state
 704:src/keys.c    ****   runmode = State2.runmode;
 5248              		.loc 1 704 61 discriminator 2 view .LVU1551
 5249 0030 E368     		ldr	r3, [r4, #12]
 5250 0032 23F47F03 		bic	r3, r3, #16711680
 5251 0036 23F47F43 		bic	r3, r3, #65280
 5252 003a B3F1E06F 		cmp	r3, #117440512
 5253 003e E7D1     		bne	.L558
 5254              	.LVL422:
 705:src/keys.c    ****   alphas = State2.alphas;
 5255              		.loc 1 705 3 is_stmt 1 view .LVU1552
 706:src/keys.c    ****   init_state();
 5256              		.loc 1 706 3 view .LVU1553
 707:src/keys.c    ****   if (soft) {
 5257              		.loc 1 707 3 view .LVU1554
 5258 0040 FFF7FEFF 		bl	init_state
ARM GAS  /tmp/ccF3vcso.s 			page 173


 5259              	.LVL423:
 708:src/keys.c    ****     State2.runmode = runmode;
 5260              		.loc 1 708 3 view .LVU1555
 712:src/keys.c    ****   display_current_menu();
 5261              		.loc 1 712 3 view .LVU1556
 5262 0044 FFF7FEFF 		bl	clear_disp
 5263              	.LVL424:
 713:src/keys.c    **** }
 5264              		.loc 1 713 3 view .LVU1557
 714:src/keys.c    **** 
 5265              		.loc 1 714 1 is_stmt 0 view .LVU1558
 5266 0048 BDE83840 		pop	{r3, r4, r5, lr}
 5267              		.cfi_remember_state
 5268              		.cfi_restore 14
 5269              		.cfi_restore 5
 5270              		.cfi_restore 4
 5271              		.cfi_restore 3
 5272              		.cfi_def_cfa_offset 0
 713:src/keys.c    **** }
 5273              		.loc 1 713 3 view .LVU1559
 5274 004c FFF7FEBF 		b	display_current_menu
 5275              	.LVL425:
 5276              	.L561:
 5277              		.cfi_restore_state
 5278              	.LBB567:
 5279              	.LBI567:
 692:src/keys.c    ****   int soft;
 5280              		.loc 1 692 6 is_stmt 1 view .LVU1560
 5281              	.LBB568:
 698:src/keys.c    ****     CmdLineEex = 0;
 5282              		.loc 1 698 5 view .LVU1561
 699:src/keys.c    ****     CmdLineDot = 0;
 5283              		.loc 1 699 5 view .LVU1562
 700:src/keys.c    ****     return;
 5284              		.loc 1 700 5 view .LVU1563
 698:src/keys.c    ****     CmdLineEex = 0;
 5285              		.loc 1 698 19 is_stmt 0 view .LVU1564
 5286 0050 0023     		movs	r3, #0
 5287 0052 A383     		strh	r3, [r4, #28]	@ movhi
 700:src/keys.c    ****     return;
 5288              		.loc 1 700 16 view .LVU1565
 5289 0054 A377     		strb	r3, [r4, #30]
 701:src/keys.c    ****   }
 5290              		.loc 1 701 5 is_stmt 1 view .LVU1566
 5291              	.LBE568:
 5292              	.LBE567:
 714:src/keys.c    **** 
 5293              		.loc 1 714 1 is_stmt 0 view .LVU1567
 5294 0056 38BD     		pop	{r3, r4, r5, pc}
 5295              	.L563:
 5296              		.align	2
 5297              	.L562:
 5298 0058 00000000 		.word	StateWhileOn
 5299 005c 002F2004 		.word	69218048
 5300              		.cfi_endproc
 5301              	.LFE14:
 5303              		.section	.text.finish_cpx_entry,"ax",%progbits
ARM GAS  /tmp/ccF3vcso.s 			page 174


 5304              		.align	1
 5305              		.p2align 2,,3
 5306              		.global	finish_cpx_entry
 5307              		.syntax unified
 5308              		.thumb
 5309              		.thumb_func
 5310              		.fpu fpv4-sp-d16
 5312              	finish_cpx_entry:
 5313              	.LVL426:
 5314              	.LFB23:
1209:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5315              		.loc 1 1209 36 is_stmt 1 view -0
 5316              		.cfi_startproc
 5317              		@ args = 0, pretend = 0, frame = 0
 5318              		@ frame_needed = 0, uses_anonymous_args = 0
1214:src/keys.c    **** 
 5319              		.loc 1 1214 2 view .LVU1569
1209:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5320              		.loc 1 1209 36 is_stmt 0 view .LVU1570
 5321 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5322              		.cfi_def_cfa_offset 24
 5323              		.cfi_offset 3, -24
 5324              		.cfi_offset 4, -20
 5325              		.cfi_offset 5, -16
 5326              		.cfi_offset 6, -12
 5327              		.cfi_offset 7, -8
 5328              		.cfi_offset 14, -4
1214:src/keys.c    **** 
 5329              		.loc 1 1214 10 view .LVU1571
 5330 0002 2E4E     		ldr	r6, .L580
 5331 0004 3368     		ldr	r3, [r6]
1214:src/keys.c    **** 
 5332              		.loc 1 1214 7 view .LVU1572
 5333 0006 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
1214:src/keys.c    **** 
 5334              		.loc 1 1214 5 view .LVU1573
 5335 000a 12F0060F 		tst	r2, #6
 5336 000e 16D0     		beq	.L564
1226:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5337              		.loc 1 1226 2 is_stmt 1 view .LVU1574
 5338              	.LBB575:
 5339              	.LBI575:
1202:src/keys.c    **** 	if (CmdLineLength) {
 5340              		.loc 1 1202 13 view .LVU1575
 5341              	.LBB576:
1203:src/keys.c    **** 		State2.state_lift = 0;
 5342              		.loc 1 1203 2 view .LVU1576
1203:src/keys.c    **** 		State2.state_lift = 0;
 5343              		.loc 1 1203 6 is_stmt 0 view .LVU1577
 5344 0010 2B4C     		ldr	r4, .L580+4
1203:src/keys.c    **** 		State2.state_lift = 0;
 5345              		.loc 1 1203 5 view .LVU1578
 5346 0012 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 5347 0014 0546     		mov	r5, r0
 5348 0016 01BB     		cbnz	r1, .L577
 5349              	.LBE576:
 5350              	.LBE575:
ARM GAS  /tmp/ccF3vcso.s 			page 175


1227:src/keys.c    **** 	CLEAR_REAL;
 5351              		.loc 1 1227 2 is_stmt 1 view .LVU1579
1227:src/keys.c    **** 	CLEAR_REAL;
 5352              		.loc 1 1227 5 is_stmt 0 view .LVU1580
 5353 0018 5207     		lsls	r2, r2, #29
 5354 001a 11D4     		bmi	.L578
 5355              	.LVL427:
 5356              	.L568:
1228:src/keys.c    **** 	CLEAR_IMAG;
 5357              		.loc 1 1228 2 is_stmt 1 view .LVU1581
1229:src/keys.c    **** 
 5358              		.loc 1 1229 2 view .LVU1582
1228:src/keys.c    **** 	CLEAR_IMAG;
 5359              		.loc 1 1228 2 is_stmt 0 view .LVU1583
 5360 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5361 0020 22F00602 		bic	r2, r2, #6
 5362 0024 83F8AC27 		strb	r2, [r3, #1964]
1231:src/keys.c    **** 
 5363              		.loc 1 1231 2 is_stmt 1 view .LVU1584
1231:src/keys.c    **** 
 5364              		.loc 1 1231 20 is_stmt 0 view .LVU1585
 5365 0028 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5366 002a 65F38612 		bfi	r2, r5, #6, #1
 5367              	.LVL428:
1231:src/keys.c    **** 
 5368              		.loc 1 1231 20 view .LVU1586
 5369 002e E275     		strb	r2, [r4, #23]
1233:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5370              		.loc 1 1233 2 is_stmt 1 view .LVU1587
1233:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5371              		.loc 1 1233 21 is_stmt 0 view .LVU1588
 5372 0030 B3F8AC37 		ldrh	r3, [r3, #1964]
1233:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5373              		.loc 1 1233 5 view .LVU1589
 5374 0034 03F4C073 		and	r3, r3, #384
 5375 0038 B3F5C07F 		cmp	r3, #384
 5376 003c 19D0     		beq	.L579
 5377              	.L564:
1245:src/keys.c    **** 
 5378              		.loc 1 1245 1 view .LVU1590
 5379 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5380              	.LVL429:
 5381              	.L578:
1227:src/keys.c    **** 	CLEAR_REAL;
 5382              		.loc 1 1227 17 is_stmt 1 discriminator 1 view .LVU1591
 5383 0040 6420     		movs	r0, #100
 5384 0042 FFF7FEFF 		bl	get_reg_n
 5385              	.LVL430:
 5386 0046 0746     		mov	r7, r0
 5387 0048 6520     		movs	r0, #101
 5388 004a FFF7FEFF 		bl	get_reg_n
 5389              	.LVL431:
 5390 004e 0146     		mov	r1, r0
 5391 0050 3846     		mov	r0, r7
 5392 0052 FFF7FEFF 		bl	swap_reg
 5393              	.LVL432:
 5394 0056 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccF3vcso.s 			page 176


 5395 0058 E0E7     		b	.L568
 5396              	.LVL433:
 5397              	.L577:
 5398              	.LBB578:
 5399              	.LBB577:
1204:src/keys.c    **** 		process_cmdline();
 5400              		.loc 1 1204 3 view .LVU1592
1204:src/keys.c    **** 		process_cmdline();
 5401              		.loc 1 1204 21 is_stmt 0 view .LVU1593
 5402 005a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5403 005c 6FF38613 		bfc	r3, #6, #1
 5404 0060 E375     		strb	r3, [r4, #23]
1205:src/keys.c    **** 	}
 5405              		.loc 1 1205 3 is_stmt 1 view .LVU1594
 5406 0062 FFF7FEFF 		bl	process_cmdline
 5407              	.LVL434:
1205:src/keys.c    **** 	}
 5408              		.loc 1 1205 3 is_stmt 0 view .LVU1595
 5409 0066 3368     		ldr	r3, [r6]
 5410 0068 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5411              	.LBE577:
 5412              	.LBE578:
1227:src/keys.c    **** 	CLEAR_REAL;
 5413              		.loc 1 1227 2 is_stmt 1 view .LVU1596
1227:src/keys.c    **** 	CLEAR_REAL;
 5414              		.loc 1 1227 5 is_stmt 0 view .LVU1597
 5415 006c 5207     		lsls	r2, r2, #29
 5416 006e D5D5     		bpl	.L568
 5417 0070 E6E7     		b	.L578
 5418              	.LVL435:
 5419              	.L579:
 5420              	.LBB579:
 5421              	.LBI579:
1209:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5422              		.loc 1 1209 6 is_stmt 1 view .LVU1598
 5423              	.LBB580:
1235:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5424              		.loc 1 1235 3 view .LVU1599
 5425 0072 6E20     		movs	r0, #110
 5426 0074 FFF7FEFF 		bl	get_reg_n
 5427              	.LVL436:
 5428 0078 0446     		mov	r4, r0
1235:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5429              		.loc 1 1235 33 is_stmt 0 view .LVU1600
 5430 007a 6420     		movs	r0, #100
 5431 007c FFF7FEFF 		bl	get_reg_n
 5432              	.LVL437:
 5433 0080 0146     		mov	r1, r0
1235:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5434              		.loc 1 1235 3 view .LVU1601
 5435 0082 2046     		mov	r0, r4
 5436 0084 FFF7FEFF 		bl	copyreg
 5437              	.LVL438:
1236:src/keys.c    **** 		//call p2r
 5438              		.loc 1 1236 3 is_stmt 1 view .LVU1602
 5439 0088 6F20     		movs	r0, #111
 5440 008a FFF7FEFF 		bl	get_reg_n
ARM GAS  /tmp/ccF3vcso.s 			page 177


 5441              	.LVL439:
 5442 008e 0446     		mov	r4, r0
1236:src/keys.c    **** 		//call p2r
 5443              		.loc 1 1236 33 is_stmt 0 view .LVU1603
 5444 0090 6520     		movs	r0, #101
 5445 0092 FFF7FEFF 		bl	get_reg_n
 5446              	.LVL440:
 5447 0096 0146     		mov	r1, r0
1236:src/keys.c    **** 		//call p2r
 5448              		.loc 1 1236 3 view .LVU1604
 5449 0098 2046     		mov	r0, r4
 5450 009a FFF7FEFF 		bl	copyreg
 5451              	.LVL441:
1238:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5452              		.loc 1 1238 18 is_stmt 1 view .LVU1605
1239:src/keys.c    **** #ifdef RP_PREFIX
 5453              		.loc 1 1239 3 view .LVU1606
 5454 009e 0020     		movs	r0, #0
 5455 00a0 FFF7FEFF 		bl	op_p2r
 5456              	.LVL442:
1241:src/keys.c    **** #endif
 5457              		.loc 1 1241 3 view .LVU1607
1241:src/keys.c    **** #endif
 5458              		.loc 1 1241 15 is_stmt 0 view .LVU1608
 5459 00a4 074A     		ldr	r2, .L580+8
1243:src/keys.c    **** 	}
 5460              		.loc 1 1243 3 view .LVU1609
 5461 00a6 3368     		ldr	r3, [r6]
1241:src/keys.c    **** #endif
 5462              		.loc 1 1241 15 view .LVU1610
 5463 00a8 0121     		movs	r1, #1
 5464 00aa 1160     		str	r1, [r2]
1243:src/keys.c    **** 	}
 5465              		.loc 1 1243 3 is_stmt 1 view .LVU1611
 5466 00ac 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5467 00b0 6FF30002 		bfc	r2, #0, #1
 5468 00b4 83F8AD27 		strb	r2, [r3, #1965]
 5469              	.LVL443:
1243:src/keys.c    **** 	}
 5470              		.loc 1 1243 3 is_stmt 0 view .LVU1612
 5471              	.LBE580:
 5472              	.LBE579:
1245:src/keys.c    **** 
 5473              		.loc 1 1245 1 view .LVU1613
 5474 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5475              	.L581:
 5476 00ba 00BF     		.align	2
 5477              	.L580:
 5478 00bc 00000000 		.word	main_ram
 5479 00c0 00000000 		.word	StateWhileOn
 5480 00c4 00000000 		.word	RectPolConv
 5481              		.cfi_endproc
 5482              	.LFE23:
 5484              		.section	.text.stack_begin,"ax",%progbits
 5485              		.align	1
 5486              		.p2align 2,,3
 5487              		.global	stack_begin
ARM GAS  /tmp/ccF3vcso.s 			page 178


 5488              		.syntax unified
 5489              		.thumb
 5490              		.thumb_func
 5491              		.fpu fpv4-sp-d16
 5493              	stack_begin:
 5494              	.LVL444:
 5495              	.LFB25:
1266:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5496              		.loc 1 1266 33 is_stmt 1 view -0
 5497              		.cfi_startproc
 5498              		@ args = 0, pretend = 0, frame = 0
 5499              		@ frame_needed = 0, uses_anonymous_args = 0
1269:src/keys.c    **** 	if ( State2.state_lift ){
 5500              		.loc 1 1269 2 view .LVU1615
1266:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5501              		.loc 1 1266 33 is_stmt 0 view .LVU1616
 5502 0000 38B5     		push	{r3, r4, r5, lr}
 5503              		.cfi_def_cfa_offset 16
 5504              		.cfi_offset 3, -16
 5505              		.cfi_offset 4, -12
 5506              		.cfi_offset 5, -8
 5507              		.cfi_offset 14, -4
1269:src/keys.c    **** 	if ( State2.state_lift ){
 5508              		.loc 1 1269 2 view .LVU1617
 5509 0002 2C4B     		ldr	r3, .L589
1270:src/keys.c    **** 		SET_INIT_LIFT;
 5510              		.loc 1 1270 7 view .LVU1618
 5511 0004 2C4C     		ldr	r4, .L589+4
1269:src/keys.c    **** 	if ( State2.state_lift ){
 5512              		.loc 1 1269 2 view .LVU1619
 5513 0006 1B68     		ldr	r3, [r3]
 5514 0008 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5515 000c 42F00102 		orr	r2, r2, #1
 5516 0010 83F8AD27 		strb	r2, [r3, #1965]
1270:src/keys.c    **** 		SET_INIT_LIFT;
 5517              		.loc 1 1270 2 is_stmt 1 view .LVU1620
1270:src/keys.c    **** 		SET_INIT_LIFT;
 5518              		.loc 1 1270 7 is_stmt 0 view .LVU1621
 5519 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1270:src/keys.c    **** 		SET_INIT_LIFT;
 5520              		.loc 1 1270 5 view .LVU1622
 5521 0016 12F04002 		ands	r2, r2, #64
 5522 001a 26D0     		beq	.L583
1271:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5523              		.loc 1 1271 3 is_stmt 1 view .LVU1623
 5524 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5525 0020 42F01002 		orr	r2, r2, #16
 5526 0024 83F8AC27 		strb	r2, [r3, #1964]
1272:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5527              		.loc 1 1272 3 view .LVU1624
 5528 0028 6E20     		movs	r0, #110
 5529              	.LVL445:
1272:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5530              		.loc 1 1272 3 is_stmt 0 view .LVU1625
 5531 002a FFF7FEFF 		bl	get_reg_n
 5532              	.LVL446:
 5533 002e 0546     		mov	r5, r0
ARM GAS  /tmp/ccF3vcso.s 			page 179


1272:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5534              		.loc 1 1272 33 view .LVU1626
 5535 0030 6A20     		movs	r0, #106
 5536 0032 FFF7FEFF 		bl	get_reg_n
 5537              	.LVL447:
 5538 0036 0146     		mov	r1, r0
1272:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5539              		.loc 1 1272 3 view .LVU1627
 5540 0038 2846     		mov	r0, r5
 5541 003a FFF7FEFF 		bl	copyreg
 5542              	.LVL448:
1273:src/keys.c    **** 		lift();
 5543              		.loc 1 1273 3 is_stmt 1 view .LVU1628
 5544 003e 6F20     		movs	r0, #111
 5545 0040 FFF7FEFF 		bl	get_reg_n
 5546              	.LVL449:
 5547 0044 0546     		mov	r5, r0
1273:src/keys.c    **** 		lift();
 5548              		.loc 1 1273 33 is_stmt 0 view .LVU1629
 5549 0046 6B20     		movs	r0, #107
 5550 0048 FFF7FEFF 		bl	get_reg_n
 5551              	.LVL450:
 5552 004c 0146     		mov	r1, r0
1273:src/keys.c    **** 		lift();
 5553              		.loc 1 1273 3 view .LVU1630
 5554 004e 2846     		mov	r0, r5
 5555 0050 FFF7FEFF 		bl	copyreg
 5556              	.LVL451:
1274:src/keys.c    **** 		zero_X();
 5557              		.loc 1 1274 3 is_stmt 1 view .LVU1631
 5558 0054 FFF7FEFF 		bl	lift
 5559              	.LVL452:
1275:src/keys.c    **** 		lift();
 5560              		.loc 1 1275 3 view .LVU1632
 5561 0058 FFF7FEFF 		bl	zero_X
 5562              	.LVL453:
1276:src/keys.c    **** 		State2.state_lift = 0;
 5563              		.loc 1 1276 3 view .LVU1633
 5564 005c FFF7FEFF 		bl	lift
 5565              	.LVL454:
1277:src/keys.c    **** 	}
 5566              		.loc 1 1277 3 view .LVU1634
1277:src/keys.c    **** 	}
 5567              		.loc 1 1277 21 is_stmt 0 view .LVU1635
 5568 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5569 0062 6FF38613 		bfc	r3, #6, #1
 5570 0066 E375     		strb	r3, [r4, #23]
 5571              	.L582:
1286:src/keys.c    **** 
 5572              		.loc 1 1286 1 view .LVU1636
 5573 0068 38BD     		pop	{r3, r4, r5, pc}
 5574              	.LVL455:
 5575              	.L583:
1280:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5576              		.loc 1 1280 3 is_stmt 1 view .LVU1637
 5577 006a 93F8AC17 		ldrb	r1, [r3, #1964]	@ zero_extendqisi2
 5578 006e 62F30411 		bfi	r1, r2, #4, #1
ARM GAS  /tmp/ccF3vcso.s 			page 180


 5579 0072 83F8AC17 		strb	r1, [r3, #1964]
1281:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5580              		.loc 1 1281 3 view .LVU1638
 5581 0076 0546     		mov	r5, r0
 5582 0078 6E20     		movs	r0, #110
 5583              	.LVL456:
1281:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5584              		.loc 1 1281 3 is_stmt 0 view .LVU1639
 5585 007a FFF7FEFF 		bl	get_reg_n
 5586              	.LVL457:
 5587 007e 0446     		mov	r4, r0
1281:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5588              		.loc 1 1281 33 view .LVU1640
 5589 0080 6420     		movs	r0, #100
 5590 0082 FFF7FEFF 		bl	get_reg_n
 5591              	.LVL458:
 5592 0086 0146     		mov	r1, r0
1281:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5593              		.loc 1 1281 3 view .LVU1641
 5594 0088 2046     		mov	r0, r4
 5595 008a FFF7FEFF 		bl	copyreg
 5596              	.LVL459:
1282:src/keys.c    **** 		zero_X();
 5597              		.loc 1 1282 3 is_stmt 1 view .LVU1642
 5598 008e 6F20     		movs	r0, #111
 5599 0090 FFF7FEFF 		bl	get_reg_n
 5600              	.LVL460:
 5601 0094 0446     		mov	r4, r0
1282:src/keys.c    **** 		zero_X();
 5602              		.loc 1 1282 33 is_stmt 0 view .LVU1643
 5603 0096 6520     		movs	r0, #101
 5604 0098 FFF7FEFF 		bl	get_reg_n
 5605              	.LVL461:
 5606 009c 0146     		mov	r1, r0
1282:src/keys.c    **** 		zero_X();
 5607              		.loc 1 1282 3 view .LVU1644
 5608 009e 2046     		mov	r0, r4
 5609 00a0 FFF7FEFF 		bl	copyreg
 5610              	.LVL462:
1283:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5611              		.loc 1 1283 3 is_stmt 1 view .LVU1645
 5612 00a4 FFF7FEFF 		bl	zero_X
 5613              	.LVL463:
1284:src/keys.c    **** 	}
 5614              		.loc 1 1284 3 view .LVU1646
1284:src/keys.c    **** 	}
 5615              		.loc 1 1284 6 is_stmt 0 view .LVU1647
 5616 00a8 002D     		cmp	r5, #0
 5617 00aa DDD0     		beq	.L582
1284:src/keys.c    **** 	}
 5618              		.loc 1 1284 17 is_stmt 1 discriminator 1 view .LVU1648
1286:src/keys.c    **** 
 5619              		.loc 1 1286 1 is_stmt 0 discriminator 1 view .LVU1649
 5620 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5621              		.cfi_restore 14
 5622              		.cfi_restore 5
 5623              		.cfi_restore 4
ARM GAS  /tmp/ccF3vcso.s 			page 181


 5624              		.cfi_restore 3
 5625              		.cfi_def_cfa_offset 0
 5626              	.LVL464:
1284:src/keys.c    **** 	}
 5627              		.loc 1 1284 17 discriminator 1 view .LVU1650
 5628 00b0 FFF7FEBF 		b	zero_Y
 5629              	.LVL465:
 5630              	.L590:
 5631              		.align	2
 5632              	.L589:
 5633 00b4 00000000 		.word	main_ram
 5634 00b8 00000000 		.word	StateWhileOn
 5635              		.cfi_endproc
 5636              	.LFE25:
 5638              		.section	.text.current_catalogue_max,"ax",%progbits
 5639              		.align	1
 5640              		.p2align 2,,3
 5641              		.global	current_catalogue_max
 5642              		.syntax unified
 5643              		.thumb
 5644              		.thumb_func
 5645              		.fpu fpv4-sp-d16
 5647              	current_catalogue_max:
 5648              	.LFB44:
2478:src/keys.c    **** 	// A quick table of catalogue sizes
 5649              		.loc 1 2478 33 is_stmt 1 view -0
 5650              		.cfi_startproc
 5651              		@ args = 0, pretend = 0, frame = 0
 5652              		@ frame_needed = 0, uses_anonymous_args = 0
 5653              		@ link register save eliminated.
2481:src/keys.c    **** 	{
 5654              		.loc 1 2481 2 view .LVU1652
2512:src/keys.c    **** #endif
 5655              		.loc 1 2512 2 view .LVU1653
2512:src/keys.c    **** #endif
 5656              		.loc 1 2512 31 is_stmt 0 view .LVU1654
 5657 0000 024B     		ldr	r3, .L592
2512:src/keys.c    **** #endif
 5658              		.loc 1 2512 24 view .LVU1655
 5659 0002 034A     		ldr	r2, .L592+4
2512:src/keys.c    **** #endif
 5660              		.loc 1 2512 31 view .LVU1656
 5661 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2514:src/keys.c    **** 
 5662              		.loc 1 2514 1 view .LVU1657
 5663 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5664 0008 7047     		bx	lr
 5665              	.L593:
 5666 000a 00BF     		.align	2
 5667              	.L592:
 5668 000c 00000000 		.word	StateWhileOn
 5669 0010 00000000 		.word	.LANCHOR8
 5670              		.cfi_endproc
 5671              	.LFE44:
 5673              		.section	.text.current_catalogue,"ax",%progbits
 5674              		.align	1
 5675              		.p2align 2,,3
ARM GAS  /tmp/ccF3vcso.s 			page 182


 5676              		.global	current_catalogue
 5677              		.syntax unified
 5678              		.thumb
 5679              		.thumb_func
 5680              		.fpu fpv4-sp-d16
 5682              	current_catalogue:
 5683              	.LVL466:
 5684              	.LFB46:
2527:src/keys.c    **** 	// A quick table of catalogue tables
 5685              		.loc 1 2527 33 is_stmt 1 view -0
 5686              		.cfi_startproc
 5687              		@ args = 0, pretend = 0, frame = 0
 5688              		@ frame_needed = 0, uses_anonymous_args = 0
 5689              		@ link register save eliminated.
2530:src/keys.c    **** 	{
 5690              		.loc 1 2530 2 view .LVU1659
2557:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5691              		.loc 1 2557 2 view .LVU1660
2558:src/keys.c    **** 	int m, i;
 5692              		.loc 1 2558 2 view .LVU1661
2558:src/keys.c    **** 	int m, i;
 5693              		.loc 1 2558 25 is_stmt 0 view .LVU1662
 5694 0000 314A     		ldr	r2, .L621
2558:src/keys.c    **** 	int m, i;
 5695              		.loc 1 2558 15 view .LVU1663
 5696 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 5697              	.LVL467:
2559:src/keys.c    **** 	unsigned p, q;
 5698              		.loc 1 2559 2 is_stmt 1 view .LVU1664
2560:src/keys.c    **** 
 5699              		.loc 1 2560 2 view .LVU1665
2562:src/keys.c    **** 		if (n == OP_ZERO)
 5700              		.loc 1 2562 2 view .LVU1666
2562:src/keys.c    **** 		if (n == OP_ZERO)
 5701              		.loc 1 2562 5 is_stmt 0 view .LVU1667
 5702 0004 102B     		cmp	r3, #16
 5703 0006 39D0     		beq	.L615
2567:src/keys.c    **** 		if (n == OP_ZERO)
 5704              		.loc 1 2567 2 is_stmt 1 view .LVU1668
2567:src/keys.c    **** 		if (n == OP_ZERO)
 5705              		.loc 1 2567 5 is_stmt 0 view .LVU1669
 5706 0008 112B     		cmp	r3, #17
 5707 000a 32D0     		beq	.L616
2572:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5708              		.loc 1 2572 2 is_stmt 1 view .LVU1670
2572:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5709              		.loc 1 2572 5 is_stmt 0 view .LVU1671
 5710 000c 122B     		cmp	r3, #18
 5711 000e 45D0     		beq	.L617
2585:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5712              		.loc 1 2585 2 is_stmt 1 view .LVU1672
2585:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5713              		.loc 1 2585 5 is_stmt 0 view .LVU1673
 5714 0010 0E2B     		cmp	r3, #14
 5715 0012 38D0     		beq	.L618
2588:src/keys.c    **** 
 5716              		.loc 1 2588 3 is_stmt 1 view .LVU1674
ARM GAS  /tmp/ccF3vcso.s 			page 183


2588:src/keys.c    **** 
 5717              		.loc 1 2588 7 is_stmt 0 view .LVU1675
 5718 0014 2D4A     		ldr	r2, .L621+4
2590:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5719              		.loc 1 2590 35 view .LVU1676
 5720 0016 A3F10B01 		sub	r1, r3, #11
2590:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5721              		.loc 1 2590 5 view .LVU1677
 5722 001a 0429     		cmp	r1, #4
2588:src/keys.c    **** 
 5723              		.loc 1 2588 7 view .LVU1678
 5724 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5725              	.LVL468:
2590:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5726              		.loc 1 2590 2 is_stmt 1 view .LVU1679
2590:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5727              		.loc 1 2590 5 is_stmt 0 view .LVU1680
 5728 0020 38D9     		bls	.L601
2593:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5729              		.loc 1 2593 2 is_stmt 1 view .LVU1681
2593:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5730              		.loc 1 2593 5 is_stmt 0 view .LVU1682
 5731 0022 142B     		cmp	r3, #20
 5732 0024 4DD8     		bhi	.L609
2597:src/keys.c    **** 	p = cat[0];
 5733              		.loc 1 2597 2 is_stmt 1 view .LVU1683
2527:src/keys.c    **** 	// A quick table of catalogue tables
 5734              		.loc 1 2527 33 is_stmt 0 view .LVU1684
 5735 0026 10B4     		push	{r4}
 5736              		.cfi_def_cfa_offset 4
 5737              		.cfi_offset 4, -4
2597:src/keys.c    **** 	p = cat[0];
 5738              		.loc 1 2597 11 view .LVU1685
 5739 0028 00EBA001 		add	r1, r0, r0, asr #2
2597:src/keys.c    **** 	p = cat[0];
 5740              		.loc 1 2597 6 view .LVU1686
 5741 002c 5318     		adds	r3, r2, r1
 5742              	.LVL469:
2598:src/keys.c    **** 	q = cat[1];
 5743              		.loc 1 2598 2 is_stmt 1 view .LVU1687
2599:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5744              		.loc 1 2599 2 view .LVU1688
2600:src/keys.c    **** 
 5745              		.loc 1 2600 2 view .LVU1689
2600:src/keys.c    **** 
 5746              		.loc 1 2600 35 is_stmt 0 view .LVU1690
 5747 002e 4000     		lsls	r0, r0, #1
 5748              	.LVL470:
2598:src/keys.c    **** 	q = cat[1];
 5749              		.loc 1 2598 4 view .LVU1691
 5750 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5751              	.LVL471:
2599:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5752              		.loc 1 2599 4 view .LVU1692
 5753 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5754              	.LVL472:
2599:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
ARM GAS  /tmp/ccF3vcso.s 			page 184


 5755              		.loc 1 2599 4 view .LVU1693
 5756 0034 2649     		ldr	r1, .L621+8
 5757              	.LVL473:
2600:src/keys.c    **** 
 5758              		.loc 1 2600 54 view .LVU1694
 5759 0036 C443     		mvns	r4, r0
2600:src/keys.c    **** 
 5760              		.loc 1 2600 35 view .LVU1695
 5761 0038 00F00600 		and	r0, r0, #6
2600:src/keys.c    **** 
 5762              		.loc 1 2600 54 view .LVU1696
 5763 003c 04F00604 		and	r4, r4, #6
2600:src/keys.c    **** 
 5764              		.loc 1 2600 24 view .LVU1697
 5765 0040 0230     		adds	r0, r0, #2
2600:src/keys.c    **** 
 5766              		.loc 1 2600 48 view .LVU1698
 5767 0042 E340     		lsrs	r3, r3, r4
 5768              	.LVL474:
2600:src/keys.c    **** 
 5769              		.loc 1 2600 18 view .LVU1699
 5770 0044 02FA00F0 		lsl	r0, r2, r0
2600:src/keys.c    **** 
 5771              		.loc 1 2600 43 view .LVU1700
 5772 0048 1843     		orrs	r0, r0, r3
2600:src/keys.c    **** 
 5773              		.loc 1 2600 4 view .LVU1701
 5774 004a C0F30903 		ubfx	r3, r0, #0, #10
 5775              	.LVL475:
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
 5776              		.loc 1 2603 2 is_stmt 1 view .LVU1702
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
 5777              		.loc 1 2603 12 view .LVU1703
2600:src/keys.c    **** 
 5778              		.loc 1 2600 4 is_stmt 0 view .LVU1704
 5779 004e 3422     		movs	r2, #52
 5780              	.LVL476:
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
 5781              		.loc 1 2603 8 view .LVU1705
 5782 0050 0020     		movs	r0, #0
 5783 0052 01E0     		b	.L605
 5784              	.LVL477:
 5785              	.L620:
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
 5786              		.loc 1 2603 8 view .LVU1706
 5787 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5788              	.LVL478:
 5789              	.L605:
2604:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5790              		.loc 1 2604 3 is_stmt 1 view .LVU1707
2606:src/keys.c    **** 	}
 5791              		.loc 1 2606 3 view .LVU1708
2604:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5792              		.loc 1 2604 6 is_stmt 0 view .LVU1709
 5793 0058 9A42     		cmp	r2, r3
 5794 005a 2FDC     		bgt	.L619
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
ARM GAS  /tmp/ccF3vcso.s 			page 185


 5795              		.loc 1 2603 25 discriminator 2 view .LVU1710
 5796 005c 0130     		adds	r0, r0, #1
 5797              	.LVL479:
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
 5798              		.loc 1 2603 2 discriminator 2 view .LVU1711
 5799 005e 0728     		cmp	r0, #7
2606:src/keys.c    **** 	}
 5800              		.loc 1 2606 5 discriminator 2 view .LVU1712
 5801 0060 A3EB0203 		sub	r3, r3, r2
 5802              	.LVL480:
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
 5803              		.loc 1 2603 24 is_stmt 1 discriminator 2 view .LVU1713
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
 5804              		.loc 1 2603 12 discriminator 2 view .LVU1714
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
 5805              		.loc 1 2603 2 is_stmt 0 discriminator 2 view .LVU1715
 5806 0064 F6D1     		bne	.L620
2608:src/keys.c    **** }
 5807              		.loc 1 2608 2 is_stmt 1 view .LVU1716
2608:src/keys.c    **** }
 5808              		.loc 1 2608 9 is_stmt 0 view .LVU1717
 5809 0066 03F12000 		add	r0, r3, #32
 5810              	.LVL481:
2608:src/keys.c    **** }
 5811              		.loc 1 2608 9 view .LVU1718
 5812 006a 0002     		lsls	r0, r0, #8
 5813              	.L594:
2609:src/keys.c    **** 
 5814              		.loc 1 2609 1 view .LVU1719
 5815 006c 5DF8044B 		ldr	r4, [sp], #4
 5816              		.cfi_restore 4
 5817              		.cfi_def_cfa_offset 0
 5818 0070 7047     		bx	lr
 5819              	.LVL482:
 5820              	.L616:
2568:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5821              		.loc 1 2568 3 is_stmt 1 view .LVU1720
2568:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5822              		.loc 1 2568 6 is_stmt 0 view .LVU1721
 5823 0072 4B28     		cmp	r0, #75
 5824 0074 1FD0     		beq	.L607
2570:src/keys.c    **** 	}
 5825              		.loc 1 2570 3 is_stmt 1 view .LVU1722
2570:src/keys.c    **** 	}
 5826              		.loc 1 2570 10 is_stmt 0 view .LVU1723
 5827 0076 40F40450 		orr	r0, r0, #8448
 5828              	.LVL483:
2570:src/keys.c    **** 	}
 5829              		.loc 1 2570 10 view .LVU1724
 5830 007a 7047     		bx	lr
 5831              	.LVL484:
 5832              	.L615:
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5833              		.loc 1 2563 3 is_stmt 1 view .LVU1725
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5834              		.loc 1 2563 6 is_stmt 0 view .LVU1726
 5835 007c 4B28     		cmp	r0, #75
ARM GAS  /tmp/ccF3vcso.s 			page 186


 5836 007e 17D0     		beq	.L606
2565:src/keys.c    **** 	}
 5837              		.loc 1 2565 3 is_stmt 1 view .LVU1727
2565:src/keys.c    **** 	}
 5838              		.loc 1 2565 10 is_stmt 0 view .LVU1728
 5839 0080 40F40050 		orr	r0, r0, #8192
 5840              	.LVL485:
2565:src/keys.c    **** 	}
 5841              		.loc 1 2565 10 view .LVU1729
 5842 0084 7047     		bx	lr
 5843              	.LVL486:
 5844              	.L618:
2585:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5845              		.loc 1 2585 35 discriminator 1 view .LVU1730
 5846 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2586:src/keys.c    **** 	else
 5847              		.loc 1 2586 7 discriminator 1 view .LVU1731
 5848 0088 124B     		ldr	r3, .L621+12
 5849              	.LVL487:
2586:src/keys.c    **** 	else
 5850              		.loc 1 2586 7 discriminator 1 view .LVU1732
 5851 008a 134A     		ldr	r2, .L621+16
 5852              	.LVL488:
2586:src/keys.c    **** 	else
 5853              		.loc 1 2586 7 discriminator 1 view .LVU1733
 5854 008c 11F0100F 		tst	r1, #16
 5855 0090 18BF     		it	ne
 5856 0092 1A46     		movne	r2, r3
 5857              	.L601:
 5858              	.LVL489:
2591:src/keys.c    **** 	}
 5859              		.loc 1 2591 3 is_stmt 1 view .LVU1734
 5860              	.LBB581:
 5861              	.LBI581:
2520:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5862              		.loc 1 2520 15 view .LVU1735
 5863              	.LBB582:
2521:src/keys.c    **** }
 5864              		.loc 1 2521 2 view .LVU1736
2521:src/keys.c    **** }
 5865              		.loc 1 2521 9 is_stmt 0 view .LVU1737
 5866 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5867              	.LVL490:
2521:src/keys.c    **** }
 5868              		.loc 1 2521 9 view .LVU1738
 5869 0096 40F48840 		orr	r0, r0, #17408
 5870              	.LVL491:
2521:src/keys.c    **** }
 5871              		.loc 1 2521 9 view .LVU1739
 5872              	.LBE582:
 5873              	.LBE581:
2591:src/keys.c    **** 	}
 5874              		.loc 1 2591 10 view .LVU1740
 5875 009a 7047     		bx	lr
 5876              	.LVL492:
 5877              	.L617:
 5878              	.LBB583:
ARM GAS  /tmp/ccF3vcso.s 			page 187


2573:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5879              		.loc 1 2573 3 is_stmt 1 view .LVU1741
2573:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5880              		.loc 1 2573 33 is_stmt 0 view .LVU1742
 5881 009c 0F4B     		ldr	r3, .L621+20
 5882              	.LVL493:
2573:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5883              		.loc 1 2573 13 view .LVU1743
 5884 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5885              	.LVL494:
2574:src/keys.c    **** 			// Monadic conversion routine
 5886              		.loc 1 2574 3 is_stmt 1 view .LVU1744
2574:src/keys.c    **** 			// Monadic conversion routine
 5887              		.loc 1 2574 6 is_stmt 0 view .LVU1745
 5888 00a0 5728     		cmp	r0, #87
2576:src/keys.c    **** 		else
 5889              		.loc 1 2576 4 is_stmt 1 view .LVU1746
2576:src/keys.c    **** 		else
 5890              		.loc 1 2576 25 is_stmt 0 view .LVU1747
 5891 00a2 C6BF     		itte	gt
 5892 00a4 5838     		subgt	r0, r0, #88
 5893              	.LVL495:
2576:src/keys.c    **** 		else
 5894              		.loc 1 2576 18 view .LVU1748
 5895 00a6 40F40070 		orrgt	r0, r0, #512
2578:src/keys.c    **** 	}
 5896              		.loc 1 2578 4 is_stmt 1 view .LVU1749
2578:src/keys.c    **** 	}
 5897              		.loc 1 2578 11 is_stmt 0 view .LVU1750
 5898 00aa 40F40C40 		orrle	r0, r0, #35840
 5899 00ae 7047     		bx	lr
 5900              	.LVL496:
 5901              	.L606:
2578:src/keys.c    **** 	}
 5902              		.loc 1 2578 11 view .LVU1751
 5903              	.LBE583:
2564:src/keys.c    **** 		return CONST(n);
 5904              		.loc 1 2564 11 view .LVU1752
 5905 00b0 4FF42740 		mov	r0, #42752
 5906              	.LVL497:
2564:src/keys.c    **** 		return CONST(n);
 5907              		.loc 1 2564 11 view .LVU1753
 5908 00b4 7047     		bx	lr
 5909              	.LVL498:
 5910              	.L607:
2569:src/keys.c    **** 		return CONST_CMPLX(n);
 5911              		.loc 1 2569 11 view .LVU1754
 5912 00b6 4FF42840 		mov	r0, #43008
 5913              	.LVL499:
2569:src/keys.c    **** 		return CONST_CMPLX(n);
 5914              		.loc 1 2569 11 view .LVU1755
 5915 00ba 7047     		bx	lr
 5916              	.LVL500:
 5917              	.L619:
 5918              		.cfi_def_cfa_offset 4
 5919              		.cfi_offset 4, -4
2605:src/keys.c    **** 		m -= opcode_breaks[i];
ARM GAS  /tmp/ccF3vcso.s 			page 188


 5920              		.loc 1 2605 4 is_stmt 1 view .LVU1756
2605:src/keys.c    **** 		m -= opcode_breaks[i];
 5921              		.loc 1 2605 29 is_stmt 0 view .LVU1757
 5922 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5923              	.LVL501:
2605:src/keys.c    **** 		m -= opcode_breaks[i];
 5924              		.loc 1 2605 29 view .LVU1758
 5925 00c0 D4E7     		b	.L594
 5926              	.LVL502:
 5927              	.L609:
 5928              		.cfi_def_cfa_offset 0
 5929              		.cfi_restore 4
2594:src/keys.c    **** 
 5930              		.loc 1 2594 10 view .LVU1759
 5931 00c2 4FF48070 		mov	r0, #256
 5932              	.LVL503:
2609:src/keys.c    **** 
 5933              		.loc 1 2609 1 view .LVU1760
 5934 00c6 7047     		bx	lr
 5935              	.L622:
 5936              		.align	2
 5937              	.L621:
 5938 00c8 00000000 		.word	StateWhileOn
 5939 00cc 00000000 		.word	.LANCHOR12
 5940 00d0 01000000 		.word	.LANCHOR13+1
 5941 00d4 00000000 		.word	.LANCHOR10
 5942 00d8 00000000 		.word	.LANCHOR9
 5943 00dc 00000000 		.word	.LANCHOR11
 5944              		.cfi_endproc
 5945              	.LFE46:
 5947              		.section	.text.process_catalogue,"ax",%progbits
 5948              		.align	1
 5949              		.p2align 2,,3
 5950              		.syntax unified
 5951              		.thumb
 5952              		.thumb_func
 5953              		.fpu fpv4-sp-d16
 5955              	process_catalogue:
 5956              	.LVL504:
 5957              	.LFB48:
2623:src/keys.c    ****    int pos = State.catpos;
 5958              		.loc 1 2623 93 is_stmt 1 view -0
 5959              		.cfi_startproc
 5960              		@ args = 0, pretend = 0, frame = 16
 5961              		@ frame_needed = 0, uses_anonymous_args = 0
2623:src/keys.c    ****    int pos = State.catpos;
 5962              		.loc 1 2623 93 is_stmt 0 view .LVU1762
 5963 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5964              		.cfi_def_cfa_offset 36
 5965              		.cfi_offset 4, -36
 5966              		.cfi_offset 5, -32
 5967              		.cfi_offset 6, -28
 5968              		.cfi_offset 7, -24
 5969              		.cfi_offset 8, -20
 5970              		.cfi_offset 9, -16
 5971              		.cfi_offset 10, -12
 5972              		.cfi_offset 11, -8
ARM GAS  /tmp/ccF3vcso.s 			page 189


 5973              		.cfi_offset 14, -4
2624:src/keys.c    ****    int ch;
 5974              		.loc 1 2624 14 view .LVU1763
 5975 0004 DFF8EC92 		ldr	r9, .L737+24
 5976              	.LBB584:
 5977              	.LBB585:
2512:src/keys.c    **** #endif
 5978              		.loc 1 2512 31 view .LVU1764
 5979 0008 B44F     		ldr	r7, .L737
 5980              	.LBE585:
 5981              	.LBE584:
2624:src/keys.c    ****    int ch;
 5982              		.loc 1 2624 14 view .LVU1765
 5983 000a D9F80040 		ldr	r4, [r9]
 5984              	.LBB590:
 5985              	.LBB586:
2512:src/keys.c    **** #endif
 5986              		.loc 1 2512 31 view .LVU1766
 5987 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5988              	.LBE586:
 5989              	.LBE590:
2624:src/keys.c    ****    int ch;
 5990              		.loc 1 2624 19 view .LVU1767
 5991 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 5992              	.LBB591:
 5993              	.LBB587:
2512:src/keys.c    **** #endif
 5994              		.loc 1 2512 24 view .LVU1768
 5995 0016 B24B     		ldr	r3, .L737+4
 5996              	.LBE587:
 5997              	.LBE591:
2624:src/keys.c    ****    int ch;
 5998              		.loc 1 2624 4 is_stmt 1 view .LVU1769
2623:src/keys.c    ****    int pos = State.catpos;
 5999              		.loc 1 2623 93 is_stmt 0 view .LVU1770
 6000 0018 85B0     		sub	sp, sp, #20
 6001              		.cfi_def_cfa_offset 56
 6002              	.LBB592:
 6003              	.LBB588:
2512:src/keys.c    **** #endif
 6004              		.loc 1 2512 24 view .LVU1771
 6005 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 6006              	.LBE588:
 6007              	.LBE592:
2623:src/keys.c    ****    int pos = State.catpos;
 6008              		.loc 1 2623 93 view .LVU1772
 6009 001e 1646     		mov	r6, r2
2624:src/keys.c    ****    int ch;
 6010              		.loc 1 2624 8 view .LVU1773
 6011 0020 C5F34615 		ubfx	r5, r5, #5, #7
 6012              	.LVL505:
2625:src/keys.c    ****    const int ctmax = current_catalogue_max();
 6013              		.loc 1 2625 4 is_stmt 1 view .LVU1774
2626:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 6014              		.loc 1 2626 4 view .LVU1775
 6015              	.LBB593:
 6016              	.LBI584:
ARM GAS  /tmp/ccF3vcso.s 			page 190


2478:src/keys.c    **** 	// A quick table of catalogue sizes
 6017              		.loc 1 2478 5 view .LVU1776
 6018              	.LBB589:
2481:src/keys.c    **** 	{
 6019              		.loc 1 2481 2 view .LVU1777
2512:src/keys.c    **** #endif
 6020              		.loc 1 2512 2 view .LVU1778
2512:src/keys.c    **** #endif
 6021              		.loc 1 2512 2 is_stmt 0 view .LVU1779
 6022              	.LBE589:
 6023              	.LBE593:
2627:src/keys.c    **** 
 6024              		.loc 1 2627 4 is_stmt 1 view .LVU1780
2629:src/keys.c    ****      switch (c) {
 6025              		.loc 1 2629 4 view .LVU1781
2629:src/keys.c    ****      switch (c) {
 6026              		.loc 1 2629 7 is_stmt 0 view .LVU1782
 6027 0024 0029     		cmp	r1, #0
 6028 0026 65D0     		beq	.L722
2690:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 6029              		.loc 1 2690 11 is_stmt 1 view .LVU1783
2690:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 6030              		.loc 1 2690 14 is_stmt 0 view .LVU1784
 6031 0028 0129     		cmp	r1, #1
 6032 002a 00F0ED80 		beq	.L723
2724:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 6033              		.loc 1 2724 11 is_stmt 1 view .LVU1785
2724:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 6034              		.loc 1 2724 14 is_stmt 0 view .LVU1786
 6035 002e 0229     		cmp	r1, #2
 6036 0030 00F00B81 		beq	.L724
 6037              	.LVL506:
 6038              	.L659:
 6039              	.LBB594:
 6040              	.LBB595:
 491:src/keys.c    **** }
 6041              		.loc 1 491 2 is_stmt 1 view .LVU1787
 6042              	.LBB596:
 6043              	.LBI596:
 131:src/keys.c    **** {
 6044              		.loc 1 131 12 view .LVU1788
 6045              	.LBB597:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6046              		.loc 1 133 2 view .LVU1789
 143:src/keys.c    **** }
 6047              		.loc 1 143 2 view .LVU1790
 143:src/keys.c    **** }
 6048              		.loc 1 143 23 is_stmt 0 view .LVU1791
 6049 0034 AB4B     		ldr	r3, .L737+8
 6050              	.LBE597:
 6051              	.LBE596:
 491:src/keys.c    **** }
 6052              		.loc 1 491 49 view .LVU1792
 6053 0036 AC4A     		ldr	r2, .L737+12
 6054              	.LBB599:
 6055              	.LBB598:
 143:src/keys.c    **** }
ARM GAS  /tmp/ccF3vcso.s 			page 191


 6056              		.loc 1 143 23 view .LVU1793
 6057 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 6058              	.LBE598:
 6059              	.LBE599:
 491:src/keys.c    **** }
 6060              		.loc 1 491 49 view .LVU1794
 6061 003a 03EB4303 		add	r3, r3, r3, lsl #1
 6062 003e 02EB4303 		add	r3, r2, r3, lsl #1
 6063              	.LBE595:
 6064              	.LBE594:
 6065              	.LBB603:
 6066              	.LBB604:
 6067              	.LBB605:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6068              		.loc 1 106 16 view .LVU1795
 6069 0042 0025     		movs	r5, #0
 6070              	.LVL507:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6071              		.loc 1 106 16 view .LVU1796
 6072              	.LBE605:
 6073              	.LBE604:
 6074              	.LBE603:
2734:src/keys.c    ****    reset_shift();
 6075              		.loc 1 2734 9 view .LVU1797
 6076 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 6077              	.LVL508:
2734:src/keys.c    ****    reset_shift();
 6078              		.loc 1 2734 9 view .LVU1798
 6079 0046 FFF7FEFF 		bl	remap_chars
 6080              	.LVL509:
2734:src/keys.c    ****    reset_shift();
 6081              		.loc 1 2734 9 view .LVU1799
 6082 004a 0446     		mov	r4, r0
 6083              	.LVL510:
2735:src/keys.c    ****    if (ch == '\0')
 6084              		.loc 1 2735 4 is_stmt 1 view .LVU1800
 6085              	.LBB610:
 6086              	.LBI603:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 6087              		.loc 1 114 13 view .LVU1801
 6088              	.LBE610:
 115:src/keys.c    **** }
 6089              		.loc 1 115 2 view .LVU1802
 6090              	.LBB611:
 6091              	.LBB609:
 6092              	.LBI604:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 6093              		.loc 1 104 20 view .LVU1803
 6094              	.LBB608:
 105:src/keys.c    **** 	State2.shifts = shift;
 6095              		.loc 1 105 2 view .LVU1804
 6096              	.LBB606:
 6097              	.LBI606:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 6098              		.loc 1 96 13 view .LVU1805
 6099              	.LBB607:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccF3vcso.s 			page 192


 6100              		.loc 1 97 2 view .LVU1806
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6101              		.loc 1 97 18 is_stmt 0 view .LVU1807
 6102 004c FFF7FEFF 		bl	shift_down
 6103              	.LVL511:
  98:src/keys.c    **** }
 6104              		.loc 1 98 2 is_stmt 1 view .LVU1808
 6105              	.LBE607:
 6106              	.LBE606:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6107              		.loc 1 106 2 view .LVU1809
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6108              		.loc 1 106 16 is_stmt 0 view .LVU1810
 6109 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6110              		.loc 1 108 2 is_stmt 1 view .LVU1811
 6111              	.LVL512:
 108:src/keys.c    **** }
 6112              		.loc 1 108 2 is_stmt 0 view .LVU1812
 6113              	.LBE608:
 6114              	.LBE609:
 6115              	.LBE611:
2736:src/keys.c    ****      return STATE_UNFINISHED;
 6116              		.loc 1 2736 4 is_stmt 1 view .LVU1813
2736:src/keys.c    ****      return STATE_UNFINISHED;
 6117              		.loc 1 2736 7 is_stmt 0 view .LVU1814
 6118 0052 002C     		cmp	r4, #0
 6119 0054 6FD0     		beq	.L721
2738:src/keys.c    ****      // No multi character search in alpha catalogues
 6120              		.loc 1 2738 4 is_stmt 1 view .LVU1815
2738:src/keys.c    ****      // No multi character search in alpha catalogues
 6121              		.loc 1 2738 7 is_stmt 0 view .LVU1816
 6122 0056 AAF10B0A 		sub	r10, r10, #11
 6123              	.LVL513:
2738:src/keys.c    ****      // No multi character search in alpha catalogues
 6124              		.loc 1 2738 7 view .LVU1817
 6125 005a BAF1040F 		cmp	r10, #4
 6126 005e 40F2CB80 		bls	.L673
2742:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6127              		.loc 1 2742 4 is_stmt 1 view .LVU1818
2742:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6128              		.loc 1 2742 8 is_stmt 0 view .LVU1819
 6129 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2742:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6130              		.loc 1 2742 7 view .LVU1820
 6131 0064 092D     		cmp	r5, #9
 6132 0066 40F2C780 		bls	.L673
 6133              	.LVL514:
 6134              	.L641:
2747:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6135              		.loc 1 2747 4 is_stmt 1 view .LVU1821
2747:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6136              		.loc 1 2747 27 is_stmt 0 view .LVU1822
 6137 006a 7B19     		adds	r3, r7, r5
 6138 006c 0025     		movs	r5, #0
 6139 006e 83F82050 		strb	r5, [r3, #32]
2748:src/keys.c    ****      char buf[16];
ARM GAS  /tmp/ccF3vcso.s 			page 193


 6140              		.loc 1 2748 4 is_stmt 1 view .LVU1823
 6141              	.LVL515:
2748:src/keys.c    ****      char buf[16];
 6142              		.loc 1 2748 18 view .LVU1824
2748:src/keys.c    ****      char buf[16];
 6143              		.loc 1 2748 4 is_stmt 0 view .LVU1825
 6144 0072 B8F1000F 		cmp	r8, #0
 6145 0076 00F0D780 		beq	.L719
 6146              	.LVL516:
 6147              	.L661:
 6148              	.LBB612:
2749:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6149              		.loc 1 2749 6 is_stmt 1 view .LVU1826
2750:src/keys.c    ****      int i;
 6150              		.loc 1 2750 6 view .LVU1827
2750:src/keys.c    ****      int i;
 6151              		.loc 1 2750 24 is_stmt 0 view .LVU1828
 6152 007a 2846     		mov	r0, r5
 6153 007c FFF7FEFF 		bl	current_catalogue
 6154              	.LVL517:
 6155 0080 6946     		mov	r1, sp
 6156 0082 FFF7FEFF 		bl	catcmd
 6157              	.LVL518:
 6158 0086 0446     		mov	r4, r0
 6159              	.LVL519:
2751:src/keys.c    **** 
 6160              		.loc 1 2751 6 is_stmt 1 view .LVU1829
2753:src/keys.c    ****        cmd++;
 6161              		.loc 1 2753 6 view .LVU1830
2754:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6162              		.loc 1 2754 8 view .LVU1831
2753:src/keys.c    ****        cmd++;
 6163              		.loc 1 2753 10 is_stmt 0 view .LVU1832
 6164 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6165              	.LVL520:
2753:src/keys.c    ****        cmd++;
 6166              		.loc 1 2753 9 view .LVU1833
 6167 008a 1428     		cmp	r0, #20
 6168 008c 04BF     		itt	eq
 6169 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2754:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6170              		.loc 1 2754 11 view .LVU1834
 6171 0090 0134     		addeq	r4, r4, #1
 6172              	.LVL521:
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6173              		.loc 1 2755 6 is_stmt 1 view .LVU1835
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6174              		.loc 1 2755 16 view .LVU1836
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6175              		.loc 1 2755 6 is_stmt 0 view .LVU1837
 6176 0092 0028     		cmp	r0, #0
 6177 0094 00F0BF80 		beq	.L663
 6178 0098 DFF85CB2 		ldr	fp, .L737+28
 6179 009c C4F1010A 		rsb	r10, r4, #1
 6180 00a0 06E0     		b	.L666
 6181              	.LVL522:
 6182              	.L726:
ARM GAS  /tmp/ccF3vcso.s 			page 194


 6183              	.LBB613:
2760:src/keys.c    **** 	 break;
 6184              		.loc 1 2760 16 view .LVU1838
 6185 00a2 C0F2BA80 		blt	.L665
 6186              	.LBE613:
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6187              		.loc 1 2755 19 discriminator 2 view .LVU1839
 6188 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6189              	.LVL523:
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6190              		.loc 1 2755 6 discriminator 2 view .LVU1840
 6191 00aa 0028     		cmp	r0, #0
 6192 00ac 00F0BF80 		beq	.L725
 6193              	.LVL524:
 6194              	.L666:
 6195              	.LBB614:
2756:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6196              		.loc 1 2756 8 is_stmt 1 view .LVU1841
2756:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6197              		.loc 1 2756 22 is_stmt 0 view .LVU1842
 6198 00b0 FFF7FEFF 		bl	remap_chars
 6199              	.LVL525:
2760:src/keys.c    **** 	 break;
 6200              		.loc 1 2760 13 is_stmt 1 view .LVU1843
 6201              	.LBE614:
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6202              		.loc 1 2755 32 view .LVU1844
 6203              	.LBB615:
2757:src/keys.c    ****        if (c > cl)
 6204              		.loc 1 2757 8 view .LVU1845
2757:src/keys.c    ****        if (c > cl)
 6205              		.loc 1 2757 46 is_stmt 0 view .LVU1846
 6206 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6207              	.LVL526:
2758:src/keys.c    **** 	 goto set_pos;
 6208              		.loc 1 2758 8 is_stmt 1 view .LVU1847
2758:src/keys.c    **** 	 goto set_pos;
 6209              		.loc 1 2758 11 is_stmt 0 view .LVU1848
 6210 00b8 9842     		cmp	r0, r3
 6211 00ba 0AEB0402 		add	r2, r10, r4
 6212              	.LVL527:
2758:src/keys.c    **** 	 goto set_pos;
 6213              		.loc 1 2758 11 view .LVU1849
 6214              	.LBE615:
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6215              		.loc 1 2755 16 is_stmt 1 view .LVU1850
 6216              	.LBB616:
2758:src/keys.c    **** 	 goto set_pos;
 6217              		.loc 1 2758 11 is_stmt 0 view .LVU1851
 6218 00be F0DD     		ble	.L726
 6219              	.LVL528:
 6220              	.L664:
2758:src/keys.c    **** 	 goto set_pos;
 6221              		.loc 1 2758 11 view .LVU1852
 6222 00c0 D9F80040 		ldr	r4, [r9]
 6223              	.L644:
2758:src/keys.c    **** 	 goto set_pos;
ARM GAS  /tmp/ccF3vcso.s 			page 195


 6224              		.loc 1 2758 11 view .LVU1853
 6225              	.LBE616:
 6226              	.LBE612:
2769:src/keys.c    ****      --pos;
 6227              		.loc 1 2769 10 is_stmt 1 view .LVU1854
 6228 00c4 002E     		cmp	r6, #0
 6229 00c6 00F0B680 		beq	.L648
2769:src/keys.c    ****      --pos;
 6230              		.loc 1 2769 20 is_stmt 0 view .LVU1855
 6231 00ca 4DB1     		cbz	r5, .L642
 6232              	.LVL529:
 6233              	.L720:
2769:src/keys.c    ****      --pos;
 6234              		.loc 1 2769 20 view .LVU1856
 6235 00cc 2846     		mov	r0, r5
 6236 00ce FFF7FEFF 		bl	current_catalogue
 6237              	.LVL530:
2770:src/keys.c    ****    State.catpos = pos;
 6238              		.loc 1 2770 6 is_stmt 1 view .LVU1857
2769:src/keys.c    ****      --pos;
 6239              		.loc 1 2769 10 view .LVU1858
 6240              	.LBB617:
 6241              	.LBI617:
2616:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6242              		.loc 1 2616 12 view .LVU1859
 6243              	.LBB618:
2617:src/keys.c    **** }
 6244              		.loc 1 2617 2 view .LVU1860
2617:src/keys.c    **** }
 6245              		.loc 1 2617 33 is_stmt 0 view .LVU1861
 6246 00d2 00F0F000 		and	r0, r0, #240
 6247              	.LBE618:
 6248              	.LBE617:
2769:src/keys.c    ****      --pos;
 6249              		.loc 1 2769 27 view .LVU1862
 6250 00d6 F028     		cmp	r0, #240
 6251 00d8 40F0AD80 		bne	.L648
2769:src/keys.c    ****      --pos;
 6252              		.loc 1 2769 20 view .LVU1863
 6253 00dc 013D     		subs	r5, r5, #1
 6254              	.LVL531:
2769:src/keys.c    ****      --pos;
 6255              		.loc 1 2769 20 view .LVU1864
 6256 00de F5D1     		bne	.L720
 6257              	.LVL532:
 6258              	.L642:
2771:src/keys.c    ****    return STATE_UNFINISHED;
 6259              		.loc 1 2771 4 is_stmt 1 view .LVU1865
2771:src/keys.c    ****    return STATE_UNFINISHED;
 6260              		.loc 1 2771 17 is_stmt 0 view .LVU1866
 6261 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6262 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6263 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2772:src/keys.c    ****  }
 6264              		.loc 1 2772 4 is_stmt 1 view .LVU1867
2772:src/keys.c    ****  }
 6265              		.loc 1 2772 11 is_stmt 0 view .LVU1868
ARM GAS  /tmp/ccF3vcso.s 			page 196


 6266 00ec 3320     		movs	r0, #51
 6267              	.L733:
2773:src/keys.c    **** 
 6268              		.loc 1 2773 2 view .LVU1869
 6269 00ee 05B0     		add	sp, sp, #20
 6270              		.cfi_remember_state
 6271              		.cfi_def_cfa_offset 36
 6272              		@ sp needed
 6273 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6274              	.LVL533:
 6275              	.L722:
 6276              		.cfi_restore_state
2630:src/keys.c    **** #ifdef DM42
 6277              		.loc 1 2630 6 is_stmt 1 view .LVU1870
 6278 00f4 431F     		subs	r3, r0, #5
 6279 00f6 1F2B     		cmp	r3, #31
 6280 00f8 2FD8     		bhi	.L625
 6281 00fa DFE803F0 		tbb	[pc, r3]
 6282              	.LVL534:
 6283              	.L627:
 6284 00fe 35       		.byte	(.L631-.L627)/2
 6285 00ff 2E       		.byte	(.L625-.L627)/2
 6286 0100 2E       		.byte	(.L625-.L627)/2
 6287 0101 2E       		.byte	(.L625-.L627)/2
 6288 0102 2E       		.byte	(.L625-.L627)/2
 6289 0103 2E       		.byte	(.L625-.L627)/2
 6290 0104 2E       		.byte	(.L625-.L627)/2
 6291 0105 35       		.byte	(.L631-.L627)/2
 6292 0106 2E       		.byte	(.L625-.L627)/2
 6293 0107 2E       		.byte	(.L625-.L627)/2
 6294 0108 2E       		.byte	(.L625-.L627)/2
 6295 0109 20       		.byte	(.L630-.L627)/2
 6296 010a 2E       		.byte	(.L625-.L627)/2
 6297 010b 64       		.byte	(.L629-.L627)/2
 6298 010c 2E       		.byte	(.L625-.L627)/2
 6299 010d 2E       		.byte	(.L625-.L627)/2
 6300 010e 2E       		.byte	(.L625-.L627)/2
 6301 010f 2E       		.byte	(.L625-.L627)/2
 6302 0110 2E       		.byte	(.L625-.L627)/2
 6303 0111 6B       		.byte	(.L628-.L627)/2
 6304 0112 2E       		.byte	(.L625-.L627)/2
 6305 0113 2E       		.byte	(.L625-.L627)/2
 6306 0114 2E       		.byte	(.L625-.L627)/2
 6307 0115 2E       		.byte	(.L625-.L627)/2
 6308 0116 2E       		.byte	(.L625-.L627)/2
 6309 0117 2E       		.byte	(.L625-.L627)/2
 6310 0118 2E       		.byte	(.L625-.L627)/2
 6311 0119 2E       		.byte	(.L625-.L627)/2
 6312 011a 2E       		.byte	(.L625-.L627)/2
 6313 011b 2E       		.byte	(.L625-.L627)/2
 6314 011c 2E       		.byte	(.L625-.L627)/2
 6315 011d 27       		.byte	(.L626-.L627)/2
 6316              		.p2align 1
 6317              	.L732:
2719:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6318              		.loc 1 2719 42 is_stmt 0 discriminator 1 view .LVU1871
 6319 011e 734A     		ldr	r2, .L737+16
ARM GAS  /tmp/ccF3vcso.s 			page 197


 6320              	.LVL535:
2719:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6321              		.loc 1 2719 42 discriminator 1 view .LVU1872
 6322 0120 7B69     		ldr	r3, [r7, #20]
2719:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6323              		.loc 1 2719 24 discriminator 1 view .LVU1873
 6324 0122 1A42     		tst	r2, r3
 6325 0124 75D0     		beq	.L656
2721:src/keys.c    ****        return STATE_UNFINISHED;
 6326              		.loc 1 2721 8 is_stmt 1 view .LVU1874
2721:src/keys.c    ****        return STATE_UNFINISHED;
 6327              		.loc 1 2721 38 is_stmt 0 view .LVU1875
 6328 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6329 0128 C3F30012 		ubfx	r2, r3, #4, #1
2721:src/keys.c    ****        return STATE_UNFINISHED;
 6330              		.loc 1 2721 30 view .LVU1876
 6331 012c C2F10102 		rsb	r2, r2, #1
2721:src/keys.c    ****        return STATE_UNFINISHED;
 6332              		.loc 1 2721 26 view .LVU1877
 6333 0130 62F30413 		bfi	r3, r2, #4, #1
 6334 0134 BB75     		strb	r3, [r7, #22]
 6335              	.LVL536:
 6336              	.L721:
2722:src/keys.c    ****      }
 6337              		.loc 1 2722 8 is_stmt 1 view .LVU1878
2722:src/keys.c    ****      }
 6338              		.loc 1 2722 15 is_stmt 0 view .LVU1879
 6339 0136 3320     		movs	r0, #51
 6340              	.L623:
2773:src/keys.c    **** 
 6341              		.loc 1 2773 2 view .LVU1880
 6342 0138 05B0     		add	sp, sp, #20
 6343              		.cfi_remember_state
 6344              		.cfi_def_cfa_offset 36
 6345              		@ sp needed
 6346 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6347              	.LVL537:
 6348              	.L630:
 6349              		.cfi_restore_state
2659:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6350              		.loc 1 2659 8 is_stmt 1 view .LVU1881
2659:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6351              		.loc 1 2659 11 is_stmt 0 view .LVU1882
 6352 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6353 0140 23B1     		cbz	r3, .L626
2659:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6354              		.loc 1 2659 33 discriminator 1 view .LVU1883
 6355 0142 FFF7FEFF 		bl	keyticks
 6356              	.LVL538:
2659:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6357              		.loc 1 2659 30 discriminator 1 view .LVU1884
 6358 0146 1D28     		cmp	r0, #29
 6359 0148 40F39580 		ble	.L727
 6360              	.L626:
2669:src/keys.c    ****        return STATE_UNFINISHED;
 6361              		.loc 1 2669 8 is_stmt 1 view .LVU1885
 6362 014c 0020     		movs	r0, #0
ARM GAS  /tmp/ccF3vcso.s 			page 198


 6363 014e FFF7FEFF 		bl	init_cat
 6364              	.LVL539:
2670:src/keys.c    **** 
 6365              		.loc 1 2670 8 view .LVU1886
2670:src/keys.c    **** 
 6366              		.loc 1 2670 15 is_stmt 0 view .LVU1887
 6367 0152 3320     		movs	r0, #51
2773:src/keys.c    **** 
 6368              		.loc 1 2773 2 view .LVU1888
 6369 0154 05B0     		add	sp, sp, #20
 6370              		.cfi_remember_state
 6371              		.cfi_def_cfa_offset 36
 6372              		@ sp needed
 6373 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6374              	.LVL540:
 6375              	.L625:
 6376              		.cfi_restore_state
 6377              	.LBB619:
 6378              	.LBI594:
 435:src/keys.c    **** {
 6379              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1889
 6380              	.LBB600:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6381              		.loc 1 437 2 discriminator 4 view .LVU1890
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6382              		.loc 1 485 2 discriminator 4 view .LVU1891
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6383              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1892
 6384 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6385              		.loc 1 485 5 discriminator 4 view .LVU1893
 6386 015c 13F0100F 		tst	r3, #16
 6387 0160 14BF     		ite	ne
 6388 0162 0421     		movne	r1, #4
 6389              	.LVL541:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6390              		.loc 1 485 5 discriminator 4 view .LVU1894
 6391 0164 0021     		moveq	r1, #0
 6392 0166 65E7     		b	.L659
 6393              	.LVL542:
 6394              	.L631:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6395              		.loc 1 485 5 discriminator 4 view .LVU1895
 6396              	.LBE600:
 6397              	.LBE619:
2637:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6398              		.loc 1 2637 8 is_stmt 1 view .LVU1896
2637:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6399              		.loc 1 2637 11 is_stmt 0 view .LVU1897
 6400 0168 4545     		cmp	r5, r8
 6401 016a EFDA     		bge	.L626
 6402 016c 2846     		mov	r0, r5
 6403              	.LVL543:
2637:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6404              		.loc 1 2637 24 discriminator 1 view .LVU1898
 6405 016e 002E     		cmp	r6, #0
 6406 0170 00F08D80 		beq	.L728
ARM GAS  /tmp/ccF3vcso.s 			page 199


 6407              	.LVL544:
 6408              	.LBB620:
 6409              	.LBI620:
2616:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6410              		.loc 1 2616 12 is_stmt 1 view .LVU1899
 6411              	.LBB621:
2617:src/keys.c    **** }
 6412              		.loc 1 2617 2 view .LVU1900
2617:src/keys.c    **** }
 6413              		.loc 1 2617 10 is_stmt 0 view .LVU1901
 6414 0174 FFF7FEFF 		bl	current_catalogue
 6415              	.LVL545:
2617:src/keys.c    **** }
 6416              		.loc 1 2617 33 view .LVU1902
 6417 0178 00F0F003 		and	r3, r0, #240
 6418              	.LBE621:
 6419              	.LBE620:
2637:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6420              		.loc 1 2637 27 view .LVU1903
 6421 017c F02B     		cmp	r3, #240
 6422              	.LBB623:
 6423              	.LBB622:
2617:src/keys.c    **** }
 6424              		.loc 1 2617 10 view .LVU1904
 6425 017e 0446     		mov	r4, r0
 6426              	.LBE622:
 6427              	.LBE623:
2637:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6428              		.loc 1 2637 27 view .LVU1905
 6429 0180 E4D0     		beq	.L626
 6430              	.L634:
 6431              	.LBB624:
2638:src/keys.c    **** 
 6432              		.loc 1 2638 3 is_stmt 1 view .LVU1906
2640:src/keys.c    **** 
 6433              		.loc 1 2640 3 view .LVU1907
 6434 0182 0020     		movs	r0, #0
 6435 0184 FFF7FEFF 		bl	init_cat
 6436              	.LVL546:
2642:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6437              		.loc 1 2642 3 view .LVU1908
2642:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6438              		.loc 1 2642 6 is_stmt 0 view .LVU1909
 6439 0188 14F47043 		ands	r3, r4, #61440
 6440 018c 00F08C80 		beq	.L635
2642:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6441              		.loc 1 2642 7 discriminator 1 view .LVU1910
 6442 0190 B3F5704F 		cmp	r3, #61440
 6443 0194 00F08880 		beq	.L635
 6444              	.LBB625:
2643:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6445              		.loc 1 2643 5 is_stmt 1 view .LVU1911
2643:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6446              		.loc 1 2643 31 is_stmt 0 view .LVU1912
 6447 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6448 019c A3F12005 		sub	r5, r3, #32
 6449              	.LVL547:
ARM GAS  /tmp/ccF3vcso.s 			page 200


2643:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6450              		.loc 1 2643 31 view .LVU1913
 6451 01a0 EDB2     		uxtb	r5, r5
 6452              	.LVL548:
2644:src/keys.c    **** 	     return op;
 6453              		.loc 1 2644 5 is_stmt 1 view .LVU1914
2644:src/keys.c    **** 	     return op;
 6454              		.loc 1 2644 8 is_stmt 0 view .LVU1915
 6455 01a2 012D     		cmp	r5, #1
 6456 01a4 40F28980 		bls	.L636
2644:src/keys.c    **** 	     return op;
 6457              		.loc 1 2644 56 discriminator 1 view .LVU1916
 6458 01a8 6C2D     		cmp	r5, #108
 6459 01aa 00F08680 		beq	.L636
2644:src/keys.c    **** 	     return op;
 6460              		.loc 1 2644 77 discriminator 2 view .LVU1917
 6461 01ae 242D     		cmp	r5, #36
 6462 01b0 00F08380 		beq	.L636
2646:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6463              		.loc 1 2646 5 is_stmt 1 view .LVU1918
2646:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6464              		.loc 1 2646 30 is_stmt 0 view .LVU1919
 6465 01b4 A5F12D02 		sub	r2, r5, #45
2646:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6466              		.loc 1 2646 8 view .LVU1920
 6467 01b8 062A     		cmp	r2, #6
 6468 01ba 00F29F80 		bhi	.L639
2647:src/keys.c    **** 	   else
 6469              		.loc 1 2647 7 is_stmt 1 view .LVU1921
2647:src/keys.c    **** 	   else
 6470              		.loc 1 2647 28 is_stmt 0 view .LVU1922
 6471 01be 4D3B     		subs	r3, r3, #77
2647:src/keys.c    **** 	   else
 6472              		.loc 1 2647 19 view .LVU1923
 6473 01c0 FB73     		strb	r3, [r7, #15]
 6474              	.LBE625:
 6475              	.LBE624:
2656:src/keys.c    **** 
 6476              		.loc 1 2656 15 view .LVU1924
 6477 01c2 3320     		movs	r0, #51
 6478              	.LBB635:
 6479              	.LBB628:
 6480 01c4 B8E7     		b	.L623
 6481              	.LVL549:
 6482              	.L629:
2656:src/keys.c    **** 
 6483              		.loc 1 2656 15 view .LVU1925
 6484              	.LBE628:
 6485              	.LBE635:
2673:src/keys.c    ****        if (pos == 0)
 6486              		.loc 1 2673 8 is_stmt 1 view .LVU1926
2673:src/keys.c    ****        if (pos == 0)
 6487              		.loc 1 2673 22 is_stmt 0 view .LVU1927
 6488 01c6 0023     		movs	r3, #0
 6489 01c8 3B77     		strb	r3, [r7, #28]
2674:src/keys.c    **** 	 goto set_max;
 6490              		.loc 1 2674 8 is_stmt 1 view .LVU1928
ARM GAS  /tmp/ccF3vcso.s 			page 201


2674:src/keys.c    **** 	 goto set_max;
 6491              		.loc 1 2674 11 is_stmt 0 view .LVU1929
 6492 01ca 002D     		cmp	r5, #0
 6493 01cc 5DD1     		bne	.L729
 6494              	.LVL550:
 6495              	.L643:
2767:src/keys.c    ****  set_pos:
 6496              		.loc 1 2767 4 is_stmt 1 view .LVU1930
2767:src/keys.c    ****  set_pos:
 6497              		.loc 1 2767 8 is_stmt 0 view .LVU1931
 6498 01ce 08F1FF35 		add	r5, r8, #-1
 6499              	.LVL551:
2767:src/keys.c    ****  set_pos:
 6500              		.loc 1 2767 8 view .LVU1932
 6501 01d2 77E7     		b	.L644
 6502              	.LVL552:
 6503              	.L628:
2681:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6504              		.loc 1 2681 8 is_stmt 1 view .LVU1933
2681:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6505              		.loc 1 2681 22 is_stmt 0 view .LVU1934
 6506 01d4 0023     		movs	r3, #0
 6507 01d6 3B77     		strb	r3, [r7, #28]
2682:src/keys.c    ****        if (pos >= ctmax)
 6508              		.loc 1 2682 8 is_stmt 1 view .LVU1935
2682:src/keys.c    ****        if (pos >= ctmax)
 6509              		.loc 1 2682 14 is_stmt 0 view .LVU1936
 6510 01d8 06E0     		b	.L647
 6511              	.LVL553:
 6512              	.L730:
2682:src/keys.c    ****        if (pos >= ctmax)
 6513              		.loc 1 2682 29 discriminator 1 view .LVU1937
 6514 01da 66B3     		cbz	r6, .L648
 6515              	.LBB636:
 6516              	.LBB637:
2617:src/keys.c    **** }
 6517              		.loc 1 2617 10 view .LVU1938
 6518 01dc FFF7FEFF 		bl	current_catalogue
 6519              	.LVL554:
2617:src/keys.c    **** }
 6520              		.loc 1 2617 33 view .LVU1939
 6521 01e0 00F0F000 		and	r0, r0, #240
 6522              	.LBE637:
 6523              	.LBE636:
2682:src/keys.c    ****        if (pos >= ctmax)
 6524              		.loc 1 2682 41 view .LVU1940
 6525 01e4 F028     		cmp	r0, #240
 6526 01e6 26D1     		bne	.L648
 6527              	.L647:
2682:src/keys.c    ****        if (pos >= ctmax)
 6528              		.loc 1 2682 65 is_stmt 1 discriminator 3 view .LVU1941
2682:src/keys.c    ****        if (pos >= ctmax)
 6529              		.loc 1 2682 14 discriminator 3 view .LVU1942
 6530 01e8 0135     		adds	r5, r5, #1
 6531              	.LVL555:
 6532              	.LBB640:
 6533              	.LBI636:
ARM GAS  /tmp/ccF3vcso.s 			page 202


2616:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6534              		.loc 1 2616 12 discriminator 3 view .LVU1943
 6535              	.LBB638:
2617:src/keys.c    **** }
 6536              		.loc 1 2617 2 discriminator 3 view .LVU1944
 6537              	.LBE638:
 6538              	.LBE640:
2682:src/keys.c    ****        if (pos >= ctmax)
 6539              		.loc 1 2682 14 is_stmt 0 discriminator 3 view .LVU1945
 6540 01ea A845     		cmp	r8, r5
 6541              	.LBB641:
 6542              	.LBB639:
2617:src/keys.c    **** }
 6543              		.loc 1 2617 10 discriminator 3 view .LVU1946
 6544 01ec 2846     		mov	r0, r5
 6545              	.LBE639:
 6546              	.LBE641:
2682:src/keys.c    ****        if (pos >= ctmax)
 6547              		.loc 1 2682 14 discriminator 3 view .LVU1947
 6548 01ee F4DC     		bgt	.L730
 6549              	.LVL556:
2769:src/keys.c    ****      --pos;
 6550              		.loc 1 2769 10 is_stmt 1 view .LVU1948
2684:src/keys.c    ****        goto set_pos;
 6551              		.loc 1 2684 7 is_stmt 0 view .LVU1949
 6552 01f0 3546     		mov	r5, r6
 6553              	.LVL557:
2769:src/keys.c    ****      --pos;
 6554              		.loc 1 2769 10 view .LVU1950
 6555 01f2 06B3     		cbz	r6, .L648
 6556              	.LVL558:
2769:src/keys.c    ****      --pos;
 6557              		.loc 1 2769 10 view .LVU1951
 6558 01f4 0025     		movs	r5, #0
 6559              	.LVL559:
2769:src/keys.c    ****      --pos;
 6560              		.loc 1 2769 10 view .LVU1952
 6561 01f6 73E7     		b	.L642
 6562              	.LVL560:
 6563              	.L673:
2742:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6564              		.loc 1 2742 8 view .LVU1953
 6565 01f8 2B46     		mov	r3, r5
2743:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6566              		.loc 1 2743 6 is_stmt 1 view .LVU1954
2743:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6567              		.loc 1 2743 31 is_stmt 0 view .LVU1955
 6568 01fa 3B44     		add	r3, r3, r7
2743:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6569              		.loc 1 2743 27 view .LVU1956
 6570 01fc 0135     		adds	r5, r5, #1
 6571 01fe EDB2     		uxtb	r5, r5
 6572 0200 3D77     		strb	r5, [r7, #28]
2743:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6573              		.loc 1 2743 31 view .LVU1957
 6574 0202 83F82040 		strb	r4, [r3, #32]
 6575 0206 30E7     		b	.L641
ARM GAS  /tmp/ccF3vcso.s 			page 203


 6576              	.LVL561:
 6577              	.L723:
2691:src/keys.c    ****        /*
 6578              		.loc 1 2691 6 is_stmt 1 view .LVU1958
2691:src/keys.c    ****        /*
 6579              		.loc 1 2691 9 is_stmt 0 view .LVU1959
 6580 0208 BAF1120F 		cmp	r10, #18
 6581 020c 21D0     		beq	.L731
 6582              	.L650:
2719:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6583              		.loc 1 2719 11 is_stmt 1 view .LVU1960
2719:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6584              		.loc 1 2719 14 is_stmt 0 view .LVU1961
 6585 020e 2428     		cmp	r0, #36
 6586 0210 85D0     		beq	.L732
 6587              	.LVL562:
 6588              	.L656:
2734:src/keys.c    ****    reset_shift();
 6589              		.loc 1 2734 4 is_stmt 1 view .LVU1962
 6590              	.LBB642:
 435:src/keys.c    **** {
 6591              		.loc 1 435 12 view .LVU1963
 6592              	.LBB601:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6593              		.loc 1 437 2 view .LVU1964
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6594              		.loc 1 485 2 view .LVU1965
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6595              		.loc 1 485 5 is_stmt 0 view .LVU1966
 6596 0212 0121     		movs	r1, #1
 6597              	.LVL563:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6598              		.loc 1 485 5 view .LVU1967
 6599 0214 0EE7     		b	.L659
 6600              	.LVL564:
 6601              	.L663:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6602              		.loc 1 485 5 view .LVU1968
 6603 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6604              	.LVL565:
 6605              	.L665:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6606              		.loc 1 485 5 view .LVU1969
 6607              	.LBE601:
 6608              	.LBE642:
 6609              	.LBB643:
2763:src/keys.c    ****        goto set_pos;
 6610              		.loc 1 2763 6 is_stmt 1 view .LVU1970
2763:src/keys.c    ****        goto set_pos;
 6611              		.loc 1 2763 9 is_stmt 0 view .LVU1971
 6612 021a 002B     		cmp	r3, #0
 6613 021c 3FF450AF 		beq	.L664
 6614              	.LBE643:
2748:src/keys.c    ****      char buf[16];
 6615              		.loc 1 2748 31 is_stmt 1 view .LVU1972
 6616 0220 0135     		adds	r5, r5, #1
 6617              	.LVL566:
ARM GAS  /tmp/ccF3vcso.s 			page 204


2748:src/keys.c    ****      char buf[16];
 6618              		.loc 1 2748 18 view .LVU1973
2748:src/keys.c    ****      char buf[16];
 6619              		.loc 1 2748 4 is_stmt 0 view .LVU1974
 6620 0222 A845     		cmp	r8, r5
 6621 0224 7FF429AF 		bne	.L661
 6622              	.LVL567:
 6623              	.L719:
2748:src/keys.c    ****      char buf[16];
 6624              		.loc 1 2748 4 view .LVU1975
 6625 0228 D9F80040 		ldr	r4, [r9]
 6626 022c CFE7     		b	.L643
 6627              	.LVL568:
 6628              	.L725:
2748:src/keys.c    ****      char buf[16];
 6629              		.loc 1 2748 4 view .LVU1976
 6630 022e 3A44     		add	r2, r2, r7
 6631              	.LVL569:
2748:src/keys.c    ****      char buf[16];
 6632              		.loc 1 2748 4 view .LVU1977
 6633 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6634              	.LVL570:
2748:src/keys.c    ****      char buf[16];
 6635              		.loc 1 2748 4 view .LVU1978
 6636 0234 F1E7     		b	.L665
 6637              	.LVL571:
 6638              	.L648:
2771:src/keys.c    ****    return STATE_UNFINISHED;
 6639              		.loc 1 2771 17 view .LVU1979
 6640 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6641 023a 05F07F05 		and	r5, r5, #127
 6642              	.LVL572:
2771:src/keys.c    ****    return STATE_UNFINISHED;
 6643              		.loc 1 2771 4 is_stmt 1 view .LVU1980
2771:src/keys.c    ****    return STATE_UNFINISHED;
 6644              		.loc 1 2771 17 is_stmt 0 view .LVU1981
 6645 023e 65F34B13 		bfi	r3, r5, #5, #7
 6646 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2772:src/keys.c    ****  }
 6647              		.loc 1 2772 4 is_stmt 1 view .LVU1982
2772:src/keys.c    ****  }
 6648              		.loc 1 2772 11 is_stmt 0 view .LVU1983
 6649 0246 3320     		movs	r0, #51
 6650 0248 51E7     		b	.L733
 6651              	.LVL573:
 6652              	.L724:
2725:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6653              		.loc 1 2725 6 is_stmt 1 view .LVU1984
2725:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6654              		.loc 1 2725 9 is_stmt 0 view .LVU1985
 6655 024a 1028     		cmp	r0, #16
 6656 024c 23D0     		beq	.L734
 6657              	.L658:
2734:src/keys.c    ****    reset_shift();
 6658              		.loc 1 2734 4 is_stmt 1 view .LVU1986
 6659              	.LVL574:
 6660              	.LBB644:
ARM GAS  /tmp/ccF3vcso.s 			page 205


 435:src/keys.c    **** {
 6661              		.loc 1 435 12 view .LVU1987
 6662              	.LBB602:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6663              		.loc 1 437 2 view .LVU1988
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6664              		.loc 1 485 2 view .LVU1989
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6665              		.loc 1 485 5 is_stmt 0 view .LVU1990
 6666 024e 0521     		movs	r1, #5
 6667              	.LVL575:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6668              		.loc 1 485 5 view .LVU1991
 6669 0250 F0E6     		b	.L659
 6670              	.LVL576:
 6671              	.L731:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6672              		.loc 1 485 5 view .LVU1992
 6673              	.LBE602:
 6674              	.LBE644:
2691:src/keys.c    ****        /*
 6675              		.loc 1 2691 32 discriminator 1 view .LVU1993
 6676 0252 0128     		cmp	r0, #1
 6677 0254 DBD1     		bne	.L650
 6678              	.LBB645:
2700:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 6679              		.loc 1 2700 8 is_stmt 1 view .LVU1994
2708:src/keys.c    ****        int i;
 6680              		.loc 1 2708 8 view .LVU1995
2708:src/keys.c    ****        int i;
 6681              		.loc 1 2708 26 is_stmt 0 view .LVU1996
 6682 0256 2846     		mov	r0, r5
 6683              	.LVL577:
2708:src/keys.c    ****        int i;
 6684              		.loc 1 2708 26 view .LVU1997
 6685 0258 FFF7FEFF 		bl	current_catalogue
 6686              	.LVL578:
2708:src/keys.c    ****        int i;
 6687              		.loc 1 2708 26 view .LVU1998
 6688 025c 0446     		mov	r4, r0
 6689              	.LVL579:
2709:src/keys.c    **** 
 6690              		.loc 1 2709 8 is_stmt 1 view .LVU1999
2711:src/keys.c    ****        if (isRARG(op))
 6691              		.loc 1 2711 8 view .LVU2000
 6692 025e 0020     		movs	r0, #0
 6693              	.LVL580:
2711:src/keys.c    ****        if (isRARG(op))
 6694              		.loc 1 2711 8 is_stmt 0 view .LVU2001
 6695 0260 FFF7FEFF 		bl	init_cat
 6696              	.LVL581:
2712:src/keys.c    **** 	 return op ^ 1;
 6697              		.loc 1 2712 8 is_stmt 1 view .LVU2002
2712:src/keys.c    **** 	 return op ^ 1;
 6698              		.loc 1 2712 11 is_stmt 0 view .LVU2003
 6699 0264 14F47043 		ands	r3, r4, #61440
 6700 0268 29D0     		beq	.L651
ARM GAS  /tmp/ccF3vcso.s 			page 206


2712:src/keys.c    **** 	 return op ^ 1;
 6701              		.loc 1 2712 12 discriminator 1 view .LVU2004
 6702 026a B3F5704F 		cmp	r3, #61440
 6703 026e 26D0     		beq	.L651
2713:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6704              		.loc 1 2713 3 is_stmt 1 view .LVU2005
2713:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6705              		.loc 1 2713 13 is_stmt 0 view .LVU2006
 6706 0270 84F00100 		eor	r0, r4, #1
 6707 0274 60E7     		b	.L623
 6708              	.LVL582:
 6709              	.L727:
2713:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6710              		.loc 1 2713 13 view .LVU2007
 6711              	.LBE645:
2660:src/keys.c    **** 	   goto search;
 6712              		.loc 1 2660 3 is_stmt 1 view .LVU2008
2660:src/keys.c    **** 	   goto search;
 6713              		.loc 1 2660 7 is_stmt 0 view .LVU2009
 6714 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6715              	.LVL583:
2660:src/keys.c    **** 	   goto search;
 6716              		.loc 1 2660 7 view .LVU2010
 6717 0278 013D     		subs	r5, r5, #1
 6718 027a EDB2     		uxtb	r5, r5
2660:src/keys.c    **** 	   goto search;
 6719              		.loc 1 2660 6 view .LVU2011
 6720 027c 3D77     		strb	r5, [r7, #28]
 6721 027e 002D     		cmp	r5, #0
 6722 0280 7FF4F3AE 		bne	.L641
 6723 0284 D9F80040 		ldr	r4, [r9]
 6724 0288 2AE7     		b	.L642
 6725              	.LVL584:
 6726              	.L729:
2677:src/keys.c    ****        goto set_pos;
 6727              		.loc 1 2677 3 is_stmt 1 view .LVU2012
 6728 028a 013D     		subs	r5, r5, #1
 6729              	.LVL585:
2678:src/keys.c    **** 
 6730              		.loc 1 2678 8 view .LVU2013
 6731 028c 1AE7     		b	.L644
 6732              	.LVL586:
 6733              	.L728:
2678:src/keys.c    **** 
 6734              		.loc 1 2678 8 is_stmt 0 view .LVU2014
 6735 028e FFF7FEFF 		bl	current_catalogue
 6736              	.LVL587:
2678:src/keys.c    **** 
 6737              		.loc 1 2678 8 view .LVU2015
 6738 0292 0446     		mov	r4, r0
 6739 0294 75E7     		b	.L634
 6740              	.LVL588:
 6741              	.L734:
2725:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6742              		.loc 1 2725 19 discriminator 1 view .LVU2016
 6743 0296 BAF1130F 		cmp	r10, #19
 6744 029a D8D1     		bne	.L658
ARM GAS  /tmp/ccF3vcso.s 			page 207


2726:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6745              		.loc 1 2726 8 is_stmt 1 view .LVU2017
 6746 029c 0020     		movs	r0, #0
 6747              	.LVL589:
2726:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6748              		.loc 1 2726 8 is_stmt 0 view .LVU2018
 6749 029e FFF7FEFF 		bl	init_cat
 6750              	.LVL590:
2727:src/keys.c    ****      }
 6751              		.loc 1 2727 8 is_stmt 1 view .LVU2019
2727:src/keys.c    ****      }
 6752              		.loc 1 2727 15 is_stmt 0 view .LVU2020
 6753 02a2 40F23D10 		movw	r0, #317
 6754 02a6 47E7     		b	.L623
 6755              	.L635:
 6756              	.LBB646:
2652:src/keys.c    **** 	 }
 6757              		.loc 1 2652 5 is_stmt 1 view .LVU2021
 6758              	.LBB629:
 6759              	.LBB630:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6760              		.loc 1 717 5 is_stmt 0 view .LVU2022
 6761 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6762 02ac 012B     		cmp	r3, #1
 6763              	.LBE630:
 6764              	.LBE629:
2652:src/keys.c    **** 	 }
 6765              		.loc 1 2652 12 view .LVU2023
 6766 02ae 2046     		mov	r0, r4
 6767              	.LVL591:
 6768              	.LBB632:
 6769              	.LBI629:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6770              		.loc 1 716 12 is_stmt 1 view .LVU2024
 6771              	.LBB631:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6772              		.loc 1 717 2 view .LVU2025
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6773              		.loc 1 717 5 is_stmt 0 view .LVU2026
 6774 02b0 7FF442AF 		bne	.L623
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6775              		.loc 1 717 5 view .LVU2027
 6776 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6777              	.LVL592:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6778              		.loc 1 717 5 view .LVU2028
 6779 02b8 3EE7     		b	.L623
 6780              	.LVL593:
 6781              	.L636:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6782              		.loc 1 717 5 view .LVU2029
 6783              	.LBE631:
 6784              	.LBE632:
 6785              	.LBB633:
2645:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6786              		.loc 1 2645 7 is_stmt 1 view .LVU2030
2645:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
ARM GAS  /tmp/ccF3vcso.s 			page 208


 6787              		.loc 1 2645 14 is_stmt 0 view .LVU2031
 6788 02ba 2046     		mov	r0, r4
 6789 02bc 3CE7     		b	.L623
 6790              	.LVL594:
 6791              	.L651:
2645:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6792              		.loc 1 2645 14 view .LVU2032
 6793 02be 0C48     		ldr	r0, .L737+20
 6794              	.LBE633:
 6795              	.LBE646:
2623:src/keys.c    ****    int pos = State.catpos;
 6796              		.loc 1 2623 93 view .LVU2033
 6797 02c0 40F28522 		movw	r2, #645
 6798 02c4 0146     		mov	r1, r0
 6799 02c6 0023     		movs	r3, #0
 6800 02c8 01E0     		b	.L653
 6801              	.LVL595:
 6802              	.L736:
2623:src/keys.c    ****    int pos = State.catpos;
 6803              		.loc 1 2623 93 view .LVU2034
 6804 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6805              	.LVL596:
 6806              	.L653:
 6807              	.LBB647:
2715:src/keys.c    **** 	   return conv_mapping[i^1];
 6808              		.loc 1 2715 3 is_stmt 1 view .LVU2035
2714:src/keys.c    **** 	 if (op == conv_mapping[i])
 6809              		.loc 1 2714 72 view .LVU2036
2715:src/keys.c    **** 	   return conv_mapping[i^1];
 6810              		.loc 1 2715 6 is_stmt 0 view .LVU2037
 6811 02ce A242     		cmp	r2, r4
 6812 02d0 1ED0     		beq	.L735
2714:src/keys.c    **** 	 if (op == conv_mapping[i])
 6813              		.loc 1 2714 72 discriminator 2 view .LVU2038
 6814 02d2 0133     		adds	r3, r3, #1
 6815              	.LVL597:
2714:src/keys.c    **** 	 if (op == conv_mapping[i])
 6816              		.loc 1 2714 20 is_stmt 1 discriminator 2 view .LVU2039
2714:src/keys.c    **** 	 if (op == conv_mapping[i])
 6817              		.loc 1 2714 8 is_stmt 0 discriminator 2 view .LVU2040
 6818 02d4 0C2B     		cmp	r3, #12
 6819 02d6 F8D1     		bne	.L736
 6820 02d8 2DE7     		b	.L721
 6821              	.L738:
 6822 02da 00BF     		.align	2
 6823              	.L737:
 6824 02dc 00000000 		.word	StateWhileOn
 6825 02e0 00000000 		.word	.LANCHOR8
 6826 02e4 00000000 		.word	.LANCHOR6
 6827 02e8 00000000 		.word	.LANCHOR15
 6828 02ec 00080800 		.word	526336
 6829 02f0 00000000 		.word	.LANCHOR14
 6830 02f4 00000000 		.word	main_ram
 6831 02f8 1F000000 		.word	StateWhileOn+31
 6832              	.LVL598:
 6833              	.L639:
2714:src/keys.c    **** 	 if (op == conv_mapping[i])
ARM GAS  /tmp/ccF3vcso.s 			page 209


 6834              		.loc 1 2714 8 discriminator 2 view .LVU2041
 6835              	.LBE647:
 6836              	.LBB648:
 6837              	.LBB634:
2649:src/keys.c    **** 	 }
 6838              		.loc 1 2649 7 is_stmt 1 view .LVU2042
 6839              	.LBB626:
 6840              	.LBI626:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6841              		.loc 1 552 13 view .LVU2043
 6842              	.LBB627:
 553:src/keys.c    **** 		return;
 6843              		.loc 1 553 2 view .LVU2044
 553:src/keys.c    **** 		return;
 6844              		.loc 1 553 6 is_stmt 0 view .LVU2045
 6845 02fc FFF7FEFF 		bl	is_bad_cmdline
 6846              	.LVL599:
 553:src/keys.c    **** 		return;
 6847              		.loc 1 553 5 view .LVU2046
 6848 0300 0028     		cmp	r0, #0
 6849 0302 7FF418AF 		bne	.L721
 6850 0306 2846     		mov	r0, r5
 6851 0308 FFF7FEFF 		bl	init_arg.part.0
 6852              	.LVL600:
 6853              	.LBE627:
 6854              	.LBE626:
 6855              	.LBE634:
 6856              	.LBE648:
2656:src/keys.c    **** 
 6857              		.loc 1 2656 15 view .LVU2047
 6858 030c 3320     		movs	r0, #51
 6859 030e 13E7     		b	.L623
 6860              	.LVL601:
 6861              	.L735:
 6862              	.LBB649:
2716:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6863              		.loc 1 2716 5 is_stmt 1 view .LVU2048
2716:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6864              		.loc 1 2716 26 is_stmt 0 view .LVU2049
 6865 0310 83F00103 		eor	r3, r3, #1
 6866              	.LVL602:
2716:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6867              		.loc 1 2716 24 view .LVU2050
 6868 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6869 0318 0EE7     		b	.L623
 6870              	.LBE649:
 6871              		.cfi_endproc
 6872              	.LFE48:
 6874              		.section	.text.find_pos,"ax",%progbits
 6875              		.align	1
 6876              		.p2align 2,,3
 6877              		.global	find_pos
 6878              		.syntax unified
 6879              		.thumb
 6880              		.thumb_func
 6881              		.fpu fpv4-sp-d16
 6883              	find_pos:
ARM GAS  /tmp/ccF3vcso.s 			page 210


 6884              	.LVL603:
 6885              	.LFB49:
2776:src/keys.c    **** 	int pos;
 6886              		.loc 1 2776 32 is_stmt 1 view -0
 6887              		.cfi_startproc
 6888              		@ args = 0, pretend = 0, frame = 16
 6889              		@ frame_needed = 0, uses_anonymous_args = 0
2777:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6890              		.loc 1 2777 2 view .LVU2052
2778:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6891              		.loc 1 2778 2 view .LVU2053
 6892              	.LBB650:
 6893              	.LBI650:
2478:src/keys.c    **** 	// A quick table of catalogue sizes
 6894              		.loc 1 2478 5 view .LVU2054
 6895              	.LBB651:
2481:src/keys.c    **** 	{
 6896              		.loc 1 2481 2 view .LVU2055
2512:src/keys.c    **** #endif
 6897              		.loc 1 2512 2 view .LVU2056
 6898              	.LBE651:
 6899              	.LBE650:
2776:src/keys.c    **** 	int pos;
 6900              		.loc 1 2776 32 is_stmt 0 view .LVU2057
 6901 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6902              		.cfi_def_cfa_offset 32
 6903              		.cfi_offset 4, -32
 6904              		.cfi_offset 5, -28
 6905              		.cfi_offset 6, -24
 6906              		.cfi_offset 7, -20
 6907              		.cfi_offset 8, -16
 6908              		.cfi_offset 9, -12
 6909              		.cfi_offset 10, -8
 6910              		.cfi_offset 14, -4
 6911              	.LBB653:
 6912              	.LBB652:
2512:src/keys.c    **** #endif
 6913              		.loc 1 2512 31 view .LVU2058
 6914 0004 1E4B     		ldr	r3, .L756
2512:src/keys.c    **** #endif
 6915              		.loc 1 2512 24 view .LVU2059
 6916 0006 1F4A     		ldr	r2, .L756+4
2512:src/keys.c    **** #endif
 6917              		.loc 1 2512 31 view .LVU2060
 6918 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2512:src/keys.c    **** #endif
 6919              		.loc 1 2512 24 view .LVU2061
 6920 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6921              	.LVL604:
2512:src/keys.c    **** #endif
 6922              		.loc 1 2512 24 view .LVU2062
 6923              	.LBE652:
 6924              	.LBE653:
2779:src/keys.c    **** 		char buf[16];
 6925              		.loc 1 2779 2 is_stmt 1 view .LVU2063
2779:src/keys.c    **** 		char buf[16];
 6926              		.loc 1 2779 16 view .LVU2064
ARM GAS  /tmp/ccF3vcso.s 			page 211


2776:src/keys.c    **** 	int pos;
 6927              		.loc 1 2776 32 is_stmt 0 view .LVU2065
 6928 000e 84B0     		sub	sp, sp, #16
 6929              		.cfi_def_cfa_offset 48
2779:src/keys.c    **** 		char buf[16];
 6930              		.loc 1 2779 2 view .LVU2066
 6931 0010 BAF1000F 		cmp	r10, #0
 6932 0014 32D0     		beq	.L746
 6933 0016 8146     		mov	r9, r0
2779:src/keys.c    **** 		char buf[16];
 6934              		.loc 1 2779 11 view .LVU2067
 6935 0018 4FF00008 		mov	r8, #0
 6936 001c C0F10107 		rsb	r7, r0, #1
 6937              	.LVL605:
 6938              	.L745:
 6939              	.LBB654:
2780:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6940              		.loc 1 2780 3 is_stmt 1 view .LVU2068
2781:src/keys.c    **** 		int i;
 6941              		.loc 1 2781 3 view .LVU2069
2781:src/keys.c    **** 		int i;
 6942              		.loc 1 2781 21 is_stmt 0 view .LVU2070
 6943 0020 4046     		mov	r0, r8
 6944 0022 FFF7FEFF 		bl	current_catalogue
 6945              	.LVL606:
 6946 0026 6946     		mov	r1, sp
 6947 0028 FFF7FEFF 		bl	catcmd
 6948              	.LVL607:
 6949 002c 0646     		mov	r6, r0
 6950              	.LVL608:
2782:src/keys.c    **** 
 6951              		.loc 1 2782 3 is_stmt 1 view .LVU2071
2784:src/keys.c    **** 			cmd++;
 6952              		.loc 1 2784 3 view .LVU2072
2785:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6953              		.loc 1 2785 4 view .LVU2073
2784:src/keys.c    **** 			cmd++;
 6954              		.loc 1 2784 7 is_stmt 0 view .LVU2074
 6955 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6956              	.LVL609:
2784:src/keys.c    **** 			cmd++;
 6957              		.loc 1 2784 6 view .LVU2075
 6958 0030 1428     		cmp	r0, #20
 6959 0032 04BF     		itt	eq
 6960 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2785:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6961              		.loc 1 2785 7 view .LVU2076
 6962 0036 0136     		addeq	r6, r6, #1
 6963              	.LVL610:
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6964              		.loc 1 2786 3 is_stmt 1 view .LVU2077
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6965              		.loc 1 2786 13 view .LVU2078
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6966              		.loc 1 2786 3 is_stmt 0 view .LVU2079
 6967 0038 A8B1     		cbz	r0, .L747
 6968 003a 09F1FF33 		add	r3, r9, #-1
ARM GAS  /tmp/ccF3vcso.s 			page 212


 6969 003e 04E0     		b	.L744
 6970              	.LVL611:
 6971              	.L755:
 6972              	.LBB655:
2791:src/keys.c    **** 				break;
 6973              		.loc 1 2791 12 view .LVU2080
 6974 0040 12DB     		blt	.L742
 6975              	.LBE655:
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6976              		.loc 1 2786 16 discriminator 2 view .LVU2081
 6977 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6978              	.LVL612:
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6979              		.loc 1 2786 16 discriminator 2 view .LVU2082
 6980 0046 3C44     		add	r4, r4, r7
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6981              		.loc 1 2786 3 discriminator 2 view .LVU2083
 6982 0048 B0B1     		cbz	r0, .L754
 6983              	.LVL613:
 6984              	.L744:
 6985              	.LBB656:
2787:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6986              		.loc 1 2787 4 is_stmt 1 view .LVU2084
 6987 004a 5C1C     		adds	r4, r3, #1
2787:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6988              		.loc 1 2787 18 is_stmt 0 view .LVU2085
 6989 004c FFF7FEFF 		bl	remap_chars
 6990              	.LVL614:
 6991 0050 0546     		mov	r5, r0
2788:src/keys.c    **** 			if (c > cl)
 6992              		.loc 1 2788 19 view .LVU2086
 6993 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6994              	.LVL615:
2788:src/keys.c    **** 			if (c > cl)
 6995              		.loc 1 2788 4 is_stmt 1 view .LVU2087
2788:src/keys.c    **** 			if (c > cl)
 6996              		.loc 1 2788 19 is_stmt 0 view .LVU2088
 6997 0054 FFF7FEFF 		bl	remap_chars
 6998              	.LVL616:
2791:src/keys.c    **** 				break;
 6999              		.loc 1 2791 9 is_stmt 1 view .LVU2089
 7000              	.LBE656:
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7001              		.loc 1 2786 29 view .LVU2090
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7002              		.loc 1 2786 13 view .LVU2091
 7003              	.LBB657:
2789:src/keys.c    **** 				return pos;
 7004              		.loc 1 2789 4 view .LVU2092
2789:src/keys.c    **** 				return pos;
 7005              		.loc 1 2789 7 is_stmt 0 view .LVU2093
 7006 0058 8542     		cmp	r5, r0
 7007 005a 2346     		mov	r3, r4
 7008 005c F0DD     		ble	.L755
 7009              	.LVL617:
 7010              	.L739:
2789:src/keys.c    **** 				return pos;
ARM GAS  /tmp/ccF3vcso.s 			page 213


 7011              		.loc 1 2789 7 view .LVU2094
 7012              	.LBE657:
 7013              	.LBE654:
2798:src/keys.c    **** 
 7014              		.loc 1 2798 1 view .LVU2095
 7015 005e 4046     		mov	r0, r8
 7016 0060 04B0     		add	sp, sp, #16
 7017              		.cfi_remember_state
 7018              		.cfi_def_cfa_offset 32
 7019              		@ sp needed
 7020 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7021              	.LVL618:
 7022              	.L747:
 7023              		.cfi_restore_state
 7024              	.LBB658:
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7025              		.loc 1 2786 3 view .LVU2096
 7026 0066 4C46     		mov	r4, r9
 7027              	.LVL619:
 7028              	.L742:
2794:src/keys.c    **** 			return pos;
 7029              		.loc 1 2794 3 is_stmt 1 view .LVU2097
2794:src/keys.c    **** 			return pos;
 7030              		.loc 1 2794 6 is_stmt 0 view .LVU2098
 7031 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7032 006a 002B     		cmp	r3, #0
 7033 006c F7D0     		beq	.L739
 7034              	.LBE658:
2779:src/keys.c    **** 		char buf[16];
 7035              		.loc 1 2779 29 is_stmt 1 view .LVU2099
 7036 006e 08F10108 		add	r8, r8, #1
 7037              	.LVL620:
2779:src/keys.c    **** 		char buf[16];
 7038              		.loc 1 2779 16 view .LVU2100
2779:src/keys.c    **** 		char buf[16];
 7039              		.loc 1 2779 2 is_stmt 0 view .LVU2101
 7040 0072 D045     		cmp	r8, r10
 7041 0074 D4D1     		bne	.L745
 7042 0076 F2E7     		b	.L739
 7043              	.LVL621:
 7044              	.L754:
2779:src/keys.c    **** 		char buf[16];
 7045              		.loc 1 2779 2 view .LVU2102
 7046 0078 4C44     		add	r4, r4, r9
 7047 007a F5E7     		b	.L742
 7048              	.LVL622:
 7049              	.L746:
2779:src/keys.c    **** 		char buf[16];
 7050              		.loc 1 2779 11 view .LVU2103
 7051 007c D046     		mov	r8, r10
 7052 007e EEE7     		b	.L739
 7053              	.L757:
 7054              		.align	2
 7055              	.L756:
 7056 0080 00000000 		.word	StateWhileOn
 7057 0084 00000000 		.word	.LANCHOR8
 7058              		.cfi_endproc
ARM GAS  /tmp/ccF3vcso.s 			page 214


 7059              	.LFE49:
 7061              		.section	.text.get_alpha_state,"ax",%progbits
 7062              		.align	1
 7063              		.p2align 2,,3
 7064              		.global	get_alpha_state
 7065              		.syntax unified
 7066              		.thumb
 7067              		.thumb_func
 7068              		.fpu fpv4-sp-d16
 7070              	get_alpha_state:
 7071              	.LFB61:
3123:src/keys.c    **** 
3124:src/keys.c    **** 
3125:src/keys.c    **** static int process_registerlist(const keycode c) {
3126:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3127:src/keys.c    **** 	enum shifts shift = reset_shift();
3128:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3129:src/keys.c    **** 	const int g_max = global_regs();
3130:src/keys.c    **** 
3131:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3132:src/keys.c    **** 		if (local_regs())
3133:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3134:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3135:src/keys.c    **** 		goto reset_window;
3136:src/keys.c    **** 	}
3137:src/keys.c    **** 	else if (n <= 9) {
3138:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3139:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3140:src/keys.c    **** 			dv = n;
3141:src/keys.c    **** 		State2.digval = dv;
3142:src/keys.c    **** 		goto reset_window;
3143:src/keys.c    **** 	}
3144:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3145:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3146:src/keys.c    **** 		set_smode(SDISP_SHOW);
3147:src/keys.c    **** 	}
3148:src/keys.c    **** 	else if (n != NO_REG) {
3149:src/keys.c    **** 		State2.digval = n;
3150:src/keys.c    **** 		goto reset_window;
3151:src/keys.c    **** 	}
3152:src/keys.c    **** 
3153:src/keys.c    **** 	switch (c) {
3154:src/keys.c    **** 	case K_DOWN:
3155:src/keys.c    **** 		if (State2.digval > 0) {
3156:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3157:src/keys.c    **** 				State2.digval = global_regs();
3158:src/keys.c    **** 			--State2.digval;
3159:src/keys.c    **** 		}
3160:src/keys.c    **** 		else
3161:src/keys.c    **** 			State2.digval = max - 1;
3162:src/keys.c    **** 		goto reset_window;
3163:src/keys.c    **** 
3164:src/keys.c    **** 	case K_UP:
3165:src/keys.c    **** 		if (State2.digval < max - 1) {
3166:src/keys.c    **** 			State2.digval++;
3167:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3168:src/keys.c    **** 				State2.digval = regX_idx;
ARM GAS  /tmp/ccF3vcso.s 			page 215


3169:src/keys.c    **** 		}
3170:src/keys.c    **** 		else	
3171:src/keys.c    **** 			State2.digval = 0;
3172:src/keys.c    **** 		goto reset_window;
3173:src/keys.c    **** 
3174:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3175:src/keys.c    **** 	case K04:
3176:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3177:src/keys.c    **** 		goto reset_window;
3178:src/keys.c    **** #endif
3179:src/keys.c    **** 
3180:src/keys.c    **** 	case K24:			
3181:src/keys.c    **** 	//case K60:
3182:src/keys.c    **** 		if (State2.disp_temp)
3183:src/keys.c    **** 			return STATE_UNFINISHED;
3184:src/keys.c    **** 		break;		// Exit doing nothing
3185:src/keys.c    **** 
3186:src/keys.c    **** 	case K20:		// ENTER
3187:src/keys.c    **** 		if (shift == SHIFT_F) {
3188:src/keys.c    **** 			State2.disp_as_alpha = 1;
3189:src/keys.c    **** 			goto reset_window;
3190:src/keys.c    **** 		}
3191:src/keys.c    **** 	case K11:		// RCL
3192:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3193:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3194:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
3195:src/keys.c    **** #else
3196:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3197:src/keys.c    **** #endif
3198:src/keys.c    **** 			State2.registerlist = 0;
3199:src/keys.c    **** 			State2.digval = 0;
3200:src/keys.c    **** 			State2.digval2 = 0;
3201:src/keys.c    **** 			return n;
3202:src/keys.c    **** 		}
3203:src/keys.c    **** 	default:
3204:src/keys.c    **** 		return STATE_UNFINISHED;
3205:src/keys.c    **** 	}
3206:src/keys.c    **** 	State2.registerlist = 0;
3207:src/keys.c    **** 	State2.digval = 0;
3208:src/keys.c    **** 	State2.digval2 = 0;
3209:src/keys.c    **** reset_window:
3210:src/keys.c    **** 	State2.window = 0;
3211:src/keys.c    **** 	return STATE_UNFINISHED;
3212:src/keys.c    **** }
3213:src/keys.c    **** 
3214:src/keys.c    **** 
3215:src/keys.c    **** static int process(const int c) {
3216:src/keys.c    ****   const enum shifts shift = cur_shift();
3217:src/keys.c    ****   enum catalogues cat;
3218:src/keys.c    **** 
3219:src/keys.c    ****   if (Running || Pause) {
3220:src/keys.c    ****     /*
3221:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3222:src/keys.c    ****      */
3223:src/keys.c    ****     if (c == K60 || c == K63) {
3224:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3225:src/keys.c    **** 	set_pc(0);
ARM GAS  /tmp/ccF3vcso.s 			page 216


3226:src/keys.c    ****       Pause = 0;
3227:src/keys.c    ****       xeq_xrom();
3228:src/keys.c    ****       set_running_off();
3229:src/keys.c    ****       DispMsg = "Stopped";
3230:src/keys.c    ****       State2.disp_freeze = 0;
3231:src/keys.c    ****       return STATE_UNFINISHED;
3232:src/keys.c    ****     }
3233:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3234:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3235:src/keys.c    ****       Pause = 0;			// leave PSE statement
3236:src/keys.c    ****       GoFast = 1;
3237:src/keys.c    ****     }
3238:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3239:src/keys.c    ****     return STATE_RUNNING;
3240:src/keys.c    ****   }
3241:src/keys.c    **** 
3242:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3243:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3244:src/keys.c    ****    * if required.
3245:src/keys.c    ****    */
3246:src/keys.c    **** #ifdef DM42
3247:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3248:src/keys.c    **** #else
3249:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3250:src/keys.c    **** #endif
3251:src/keys.c    ****     {
3252:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3253:src/keys.c    ****       if (C_LOCKED) {
3254:src/keys.c    **** 	stack_restore();
3255:src/keys.c    **** 	CLEAR_REAL;
3256:src/keys.c    **** 	CLEAR_IMAG;
3257:src/keys.c    ****       }
3258:src/keys.c    **** #endif
3259:src/keys.c    ****       soft_init_state();
3260:src/keys.c    ****       return STATE_UNFINISHED;
3261:src/keys.c    ****     }
3262:src/keys.c    **** 
3263:src/keys.c    **** #ifndef CONSOLE
3264:src/keys.c    **** 	if (c == K63 && JustStopped) {
3265:src/keys.c    **** 		// Avoid an accidental restart with R/S
3266:src/keys.c    **** 		JustStopped = 0;
3267:src/keys.c    **** 		return STATE_IGNORE;
3268:src/keys.c    **** 	}
3269:src/keys.c    **** #endif
3270:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3271:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3272:src/keys.c    **** 	 */
3273:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3274:src/keys.c    **** 		CmdLineLength = 0;
3275:src/keys.c    **** 	/*
3276:src/keys.c    **** 	 *  Process the various cases
3277:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3278:src/keys.c    **** 	 */
3279:src/keys.c    **** 	if (State2.confirm)
3280:src/keys.c    **** 		return process_confirm((const keycode)c);
3281:src/keys.c    **** 
3282:src/keys.c    **** 	if (State2.rarg)
ARM GAS  /tmp/ccF3vcso.s 			page 217


3283:src/keys.c    **** 		return process_arg((const keycode)c);
3284:src/keys.c    **** 
3285:src/keys.c    **** 	if (State2.gtodot)
3286:src/keys.c    **** 		return process_gtodot((const keycode)c);
3287:src/keys.c    **** 
3288:src/keys.c    **** 	if (State2.hyp)
3289:src/keys.c    **** 		return process_hyp((const keycode)c);
3290:src/keys.c    **** 
3291:src/keys.c    **** 	if (State2.test != TST_NONE)
3292:src/keys.c    **** 		return process_test((const keycode)c);
3293:src/keys.c    **** 
3294:src/keys.c    **** 	if (State2.status)
3295:src/keys.c    **** 		return process_status((const keycode)c);
3296:src/keys.c    **** 
3297:src/keys.c    **** 	/*
3298:src/keys.c    **** 	 *  Process shift keys directly
3299:src/keys.c    **** 	 */
3300:src/keys.c    **** 	if (c == K_F) {
3301:src/keys.c    **** 		toggle_shift(SHIFT_F);
3302:src/keys.c    **** 		return STATE_UNFINISHED;
3303:src/keys.c    **** 	}
3304:src/keys.c    **** 	if (c == K_G) {
3305:src/keys.c    **** 		toggle_shift(SHIFT_G);
3306:src/keys.c    **** 		return STATE_UNFINISHED;
3307:src/keys.c    **** 	}
3308:src/keys.c    **** 	if (c == K_H) {
3309:src/keys.c    **** 		toggle_shift(SHIFT_H);
3310:src/keys.c    **** 		State2.arrow = 0;
3311:src/keys.c    **** 		return STATE_UNFINISHED;
3312:src/keys.c    **** 	}
3313:src/keys.c    **** 	/*
3314:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3315:src/keys.c    **** 	 */
3316:src/keys.c    **** 	// print_debug (2, c);
3317:src/keys.c    **** 	if (State2.arrow)
3318:src/keys.c    **** 		return process_arrow((const keycode)c);
3319:src/keys.c    **** 
3320:src/keys.c    **** 	/*
3321:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3322:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3323:src/keys.c    **** 	 * works and were not
3324:src/keys.c    **** 	 */
3325:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3326:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3327:src/keys.c    **** 		if (is_bad_cmdline())
3328:src/keys.c    **** 			return STATE_UNFINISHED;
3329:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3330:src/keys.c    **** 		init_cat( cat );
3331:src/keys.c    **** 		return STATE_UNFINISHED;
3332:src/keys.c    **** 	}
3333:src/keys.c    **** 
3334:src/keys.c    **** 	/*
3335:src/keys.c    **** 	 *  More handlers...
3336:src/keys.c    **** 	 */
3337:src/keys.c    **** 	if (State2.multi)
3338:src/keys.c    **** 		return process_multi((const keycode)c);
3339:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 218


3340:src/keys.c    **** 	if (State2.labellist)
3341:src/keys.c    **** 		return process_labellist((const keycode)c);
3342:src/keys.c    **** 
3343:src/keys.c    **** 	if (State2.registerlist)
3344:src/keys.c    **** 		return process_registerlist((const keycode)c);
3345:src/keys.c    **** 
3346:src/keys.c    **** 	if (State2.catalogue)
3347:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3348:src/keys.c    **** 
3349:src/keys.c    **** 	if (State2.alphas) {
3350:src/keys.c    **** #ifndef INFRARED
3351:src/keys.c    **** 		return process_alpha((const keycode)c);
3352:src/keys.c    **** #else
3353:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3354:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3355:src/keys.c    **** 			print_tab(0);
3356:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3357:src/keys.c    **** 		}
3358:src/keys.c    **** 		return i;
3359:src/keys.c    **** #endif
3360:src/keys.c    **** 	}
3361:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3362:src/keys.c    **** 	if (C_LOCKED) {
3363:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3364:src/keys.c    **** 	}
3365:src/keys.c    **** #endif
3366:src/keys.c    **** 	if (State2.cmplx) {
3367:src/keys.c    **** 		return process_cmplx((const keycode)c);
3368:src/keys.c    **** 	} else {
3369:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3370:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3371:src/keys.c    **** 		if (shift == SHIFT_H)
3372:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3373:src/keys.c    **** 		// print_debug (3, c);
3374:src/keys.c    **** 		return process_normal((const keycode)c);
3375:src/keys.c    **** 	}
3376:src/keys.c    **** }
3377:src/keys.c    **** 
3378:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 7072              		.loc 1 3378 40 is_stmt 1 view -0
 7073              		.cfi_startproc
 7074              		@ args = 0, pretend = 0, frame = 0
 7075              		@ frame_needed = 0, uses_anonymous_args = 0
 7076              		@ link register save eliminated.
3379:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 7077              		.loc 1 3379 4 view .LVU2105
 7078              		.loc 1 3379 53 is_stmt 0 view .LVU2106
 7079 0000 074B     		ldr	r3, .L763
 7080              		.loc 1 3379 44 view .LVU2107
 7081 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 7082 0004 1AB9     		cbnz	r2, .L761
3380:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3381:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 7083              		.loc 1 3381 5 discriminator 2 view .LVU2108
 7084 0006 5969     		ldr	r1, [r3, #20]
 7085 0008 064A     		ldr	r2, .L763+4
 7086 000a 0A40     		ands	r2, r2, r1
ARM GAS  /tmp/ccF3vcso.s 			page 219


 7087 000c 0AB1     		cbz	r2, .L762
 7088              	.L761:
 7089 000e 0120     		movs	r0, #1
3382:src/keys.c    ****  }
 7090              		.loc 1 3382 2 view .LVU2109
 7091 0010 7047     		bx	lr
 7092              	.L762:
3381:src/keys.c    ****  }
 7093              		.loc 1 3381 42 discriminator 3 view .LVU2110
 7094 0012 D889     		ldrh	r0, [r3, #14]
 7095 0014 B0F5E060 		subs	r0, r0, #1792
 7096 0018 18BF     		it	ne
 7097 001a 0120     		movne	r0, #1
 7098 001c 7047     		bx	lr
 7099              	.L764:
 7100 001e 00BF     		.align	2
 7101              	.L763:
 7102 0020 00000000 		.word	StateWhileOn
 7103 0024 0709280C 		.word	203950343
 7104              		.cfi_endproc
 7105              	.LFE61:
 7107              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 7108              		.align	2
 7109              	.LC0:
 7110 0000 52554E00 		.ascii	"RUN\000"
 7111              		.align	2
 7112              	.LC1:
 7113 0004 4E554C4C 		.ascii	"NULL\000"
 7113      00
 7114 0009 000000   		.align	2
 7115              	.LC2:
 7116 000c 53746F70 		.ascii	"Stopped\000"
 7116      70656400 
 7117              		.section	.text.process_keycode,"ax",%progbits
 7118              		.align	1
 7119              		.p2align 2,,3
 7120              		.global	process_keycode
 7121              		.syntax unified
 7122              		.thumb
 7123              		.thumb_func
 7124              		.fpu fpv4-sp-d16
 7126              	process_keycode:
 7127              	.LVL623:
 7128              	.LFB63:
3383:src/keys.c    **** 
3384:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3385:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3386:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3387:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3388:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3389:src/keys.c    ****        // Was error just wait for confirmation
3390:src/keys.c    ****        wait_for_key_press();
3391:src/keys.c    ****      }
3392:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3393:src/keys.c    ****      return;
3394:src/keys.c    ****    }
3395:src/keys.c    ****    if (remapped.key_34s == K_OP) {
ARM GAS  /tmp/ccF3vcso.s 			page 220


3396:src/keys.c    ****      nd_opcode = remapped.shift;
3397:src/keys.c    ****      set_shift(SHIFT_N);
3398:src/keys.c    ****    }
3399:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3400:src/keys.c    ****    process_keycode ( remapped.key_34s );
3401:src/keys.c    ****  }
3402:src/keys.c    ****  
3403:src/keys.c    **** /*
3404:src/keys.c    ****  *  Fed with key codes by the event loop
3405:src/keys.c    ****  */
3406:src/keys.c    **** void process_keycode(int c)
3407:src/keys.c    **** {
 7129              		.loc 1 3407 1 is_stmt 1 view -0
 7130              		.cfi_startproc
 7131              		@ args = 0, pretend = 0, frame = 8
 7132              		@ frame_needed = 0, uses_anonymous_args = 0
3408:src/keys.c    ****   static int was_paused;
 7133              		.loc 1 3408 3 view .LVU2112
3409:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3410:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7134              		.loc 1 3410 3 view .LVU2113
3411:src/keys.c    ****   //print_debug(60,c);
3412:src/keys.c    ****   if (was_paused && Pause == 0)
 7135              		.loc 1 3412 3 view .LVU2114
3407:src/keys.c    ****   static int was_paused;
 7136              		.loc 1 3407 1 is_stmt 0 view .LVU2115
 7137 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7138              		.cfi_def_cfa_offset 36
 7139              		.cfi_offset 4, -36
 7140              		.cfi_offset 5, -32
 7141              		.cfi_offset 6, -28
 7142              		.cfi_offset 7, -24
 7143              		.cfi_offset 8, -20
 7144              		.cfi_offset 9, -16
 7145              		.cfi_offset 10, -12
 7146              		.cfi_offset 11, -8
 7147              		.cfi_offset 14, -4
 7148              		.loc 1 3412 7 view .LVU2116
 7149 0004 B64D     		ldr	r5, .L1418
 7150              		.loc 1 3412 27 view .LVU2117
 7151 0006 B74F     		ldr	r7, .L1418+4
 7152              		.loc 1 3412 6 view .LVU2118
 7153 0008 2B68     		ldr	r3, [r5]
3407:src/keys.c    ****   static int was_paused;
 7154              		.loc 1 3407 1 view .LVU2119
 7155 000a 83B0     		sub	sp, sp, #12
 7156              		.cfi_def_cfa_offset 48
3407:src/keys.c    ****   static int was_paused;
 7157              		.loc 1 3407 1 view .LVU2120
 7158 000c 0446     		mov	r4, r0
 7159              		.loc 1 3412 6 view .LVU2121
 7160 000e 1BB1     		cbz	r3, .L766
 7161              		.loc 1 3412 27 discriminator 1 view .LVU2122
 7162 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7163              		.loc 1 3412 18 discriminator 1 view .LVU2123
 7164 0012 002B     		cmp	r3, #0
 7165 0014 00F0E181 		beq	.L1323
ARM GAS  /tmp/ccF3vcso.s 			page 221


 7166              	.LVL624:
 7167              	.L766:
3413:src/keys.c    ****     {
3414:src/keys.c    ****     /*
3415:src/keys.c    ****      *  Continue XROM execution after a pause
3416:src/keys.c    ****      */
3417:src/keys.c    ****       xeq_xrom();
3418:src/keys.c    ****     }
3419:src/keys.c    ****   was_paused = Pause;
 7168              		.loc 1 3419 3 is_stmt 1 view .LVU2124
 7169              		.loc 1 3419 14 is_stmt 0 view .LVU2125
 7170 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7171 001a 2B60     		str	r3, [r5]
3420:src/keys.c    ****   if (c == K_NOP)
 7172              		.loc 1 3420 3 is_stmt 1 view .LVU2126
 7173              		.loc 1 3420 6 is_stmt 0 view .LVU2127
 7174 001c 2E2C     		cmp	r4, #46
 7175 001e 00F09D81 		beq	.L1324
3421:src/keys.c    ****     {
3422:src/keys.c    ****       OpCode = 0;
3423:src/keys.c    ****     }
3424:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7176              		.loc 1 3424 8 is_stmt 1 view .LVU2128
 7177              		.loc 1 3424 11 is_stmt 0 view .LVU2129
 7178 0022 622C     		cmp	r4, #98
 7179 0024 72D0     		beq	.L1325
3425:src/keys.c    ****     {
3426:src/keys.c    ****       /*
3427:src/keys.c    ****        *  Heartbeat processing goes here.
3428:src/keys.c    ****        *  This is totally thread safe!
3429:src/keys.c    ****        */
3430:src/keys.c    ****       if (Keyticks >= 2) {
3431:src/keys.c    **** 	/*
3432:src/keys.c    **** 	 *  Some time has passed after last key press
3433:src/keys.c    **** 	 */
3434:src/keys.c    **** 	if (OpCode != 0) {
3435:src/keys.c    **** 	  /*
3436:src/keys.c    **** 	   *  Handle command display and NULL here
3437:src/keys.c    **** 	   */
3438:src/keys.c    **** 	  if (OpCodeDisplayPending) {
3439:src/keys.c    **** 	    /*
3440:src/keys.c    **** 	     *  Show command to the user
3441:src/keys.c    **** 	     */
3442:src/keys.c    **** 	    OpCodeDisplayPending = 0;
3443:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
3444:src/keys.c    **** 	      DispMsg = "RUN";
3445:src/keys.c    **** 	    }
3446:src/keys.c    **** 	    else {
3447:src/keys.c    **** 	      scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3448:src/keys.c    **** 	      DispMsg = TraceBuffer;
3449:src/keys.c    **** 	    }
3450:src/keys.c    **** 	    display();
3451:src/keys.c    **** 	    ShowRPN = 1;	// Off because of DispMsg setting
3452:src/keys.c    **** 	  }
3453:src/keys.c    **** 	  else if (Keyticks > 12) {
3454:src/keys.c    **** 	    /*
3455:src/keys.c    **** 	     *  Key is too long held down
ARM GAS  /tmp/ccF3vcso.s 			page 222


3456:src/keys.c    **** 	     */
3457:src/keys.c    **** 	    OpCode = 0;
3458:src/keys.c    **** 	    message("NULL", CNULL);
3459:src/keys.c    **** 	    // Force display update on key-up
3460:src/keys.c    **** 	    State2.disp_temp = 0;
3461:src/keys.c    **** 	  }
3462:src/keys.c    **** 	}
3463:src/keys.c    **** 	if (Keyticks > 12 && shift_down() != SHIFT_N) {
3464:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
3465:src/keys.c    **** 	  State2.shifts = SHIFT_N;
3466:src/keys.c    **** 	}
3467:src/keys.c    ****       }
3468:src/keys.c    **** 
3469:src/keys.c    ****       /*
3470:src/keys.c    ****        *  Serve the watchdog
3471:src/keys.c    ****        */
3472:src/keys.c    ****       watchdog();
3473:src/keys.c    **** 
3474:src/keys.c    **** #ifndef CONSOLE
3475:src/keys.c    ****       /*
3476:src/keys.c    ****        *  If buffer is empty re-allow R/S to start a program
3477:src/keys.c    ****        */
3478:src/keys.c    ****       if (JustStopped && !is_key_pressed()) {
3479:src/keys.c    **** 	JustStopped = 0;
3480:src/keys.c    ****       }
3481:src/keys.c    **** #endif
3482:src/keys.c    **** 
3483:src/keys.c    ****       /*
3484:src/keys.c    ****        *  Do nothing if not running a program
3485:src/keys.c    ****        */
3486:src/keys.c    ****       if (!Running && ! Pause)
3487:src/keys.c    **** 	return;
3488:src/keys.c    ****     }
3489:src/keys.c    ****   else {
3490:src/keys.c    ****     /*
3491:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3492:src/keys.c    ****      */
3493:src/keys.c    ****     xeq_init_contexts();
 7180              		.loc 1 3493 5 is_stmt 1 view .LVU2130
3494:src/keys.c    ****     State2.wascomplex = 0;
 7181              		.loc 1 3494 23 is_stmt 0 view .LVU2131
 7182 0026 DFF8DC82 		ldr	r8, .L1418+36
3493:src/keys.c    ****     State2.wascomplex = 0;
 7183              		.loc 1 3493 5 view .LVU2132
 7184 002a FFF7FEFF 		bl	xeq_init_contexts
 7185              	.LVL625:
 7186              		.loc 1 3494 5 is_stmt 1 view .LVU2133
 7187              		.loc 1 3494 23 is_stmt 0 view .LVU2134
 7188 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3495:src/keys.c    **** 
3496:src/keys.c    ****     if (is_dot(RPN)) {
 7189              		.loc 1 3496 9 view .LVU2135
 7190 0032 8D20     		movs	r0, #141
3494:src/keys.c    **** 
 7191              		.loc 1 3494 23 view .LVU2136
 7192 0034 6FF38713 		bfc	r3, #6, #2
 7193 0038 88F81430 		strb	r3, [r8, #20]
ARM GAS  /tmp/ccF3vcso.s 			page 223


 7194              		.loc 1 3496 5 is_stmt 1 view .LVU2137
 7195              		.loc 1 3496 9 is_stmt 0 view .LVU2138
 7196 003c FFF7FEFF 		bl	is_dot
 7197              	.LVL626:
 7198              		.loc 1 3496 8 view .LVU2139
 7199 0040 0028     		cmp	r0, #0
 7200 0042 40F07682 		bne	.L1326
 7201              	.L784:
3497:src/keys.c    ****       /*
3498:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3499:src/keys.c    ****        */
3500:src/keys.c    ****       clr_dot(RPN);
3501:src/keys.c    ****       lcd_refresh();
3502:src/keys.c    ****     }
3503:src/keys.c    **** 
3504:src/keys.c    **** #ifndef CONSOLE
3505:src/keys.c    ****     /*
3506:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3507:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3508:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3509:src/keys.c    ****      *  an accidental restart of the program.
3510:src/keys.c    ****      */
3511:src/keys.c    ****     if (c != K63)
 7202              		.loc 1 3511 5 is_stmt 1 view .LVU2140
 7203              		.loc 1 3511 8 is_stmt 0 view .LVU2141
 7204 0046 272C     		cmp	r4, #39
 7205 0048 00F07082 		beq	.L1327
3512:src/keys.c    ****       JustStopped = 0;
 7206              		.loc 1 3512 7 is_stmt 1 view .LVU2142
 7207              		.loc 1 3512 19 is_stmt 0 view .LVU2143
 7208 004c A64B     		ldr	r3, .L1418+8
 7209 004e 0020     		movs	r0, #0
3513:src/keys.c    **** #endif
3514:src/keys.c    ****   }
3515:src/keys.c    **** 
3516:src/keys.c    ****   /*
3517:src/keys.c    ****    *  Handle key release
3518:src/keys.c    ****    */
3519:src/keys.c    ****   if (c == K_RELEASE)
 7210              		.loc 1 3519 6 view .LVU2144
 7211 0050 632C     		cmp	r4, #99
3512:src/keys.c    ****       JustStopped = 0;
 7212              		.loc 1 3512 19 view .LVU2145
 7213 0052 1860     		str	r0, [r3]
 7214              		.loc 1 3519 3 is_stmt 1 view .LVU2146
 7215              		.loc 1 3519 6 is_stmt 0 view .LVU2147
 7216 0054 40F09181 		bne	.L786
3520:src/keys.c    ****     {
3521:src/keys.c    ****       //      print_debug (80,c);
3522:src/keys.c    ****     if (OpCode != 0) {
 7217              		.loc 1 3522 5 is_stmt 1 view .LVU2148
 7218              		.loc 1 3522 16 is_stmt 0 view .LVU2149
 7219 0058 A44B     		ldr	r3, .L1418+12
 7220 005a 1D68     		ldr	r5, [r3]
 7221              		.loc 1 3522 8 view .LVU2150
 7222 005c 002D     		cmp	r5, #0
 7223 005e 00F06E82 		beq	.L787
ARM GAS  /tmp/ccF3vcso.s 			page 224


3523:src/keys.c    ****       /*
3524:src/keys.c    ****        * Execute the key on release
3525:src/keys.c    ****        */
3526:src/keys.c    ****       GoFast = 1;
 7224              		.loc 1 3526 7 is_stmt 1 view .LVU2151
 7225              		.loc 1 3526 14 is_stmt 0 view .LVU2152
 7226 0062 A34A     		ldr	r2, .L1418+16
3527:src/keys.c    ****       c = OpCode;
3528:src/keys.c    ****       //      print_debug(81,c);
3529:src/keys.c    ****       OpCode = 0;
 7227              		.loc 1 3529 14 view .LVU2153
 7228 0064 1860     		str	r0, [r3]
3530:src/keys.c    **** 
3531:src/keys.c    ****       if (c == STATE_SST)
 7229              		.loc 1 3531 10 view .LVU2154
 7230 0066 2E2D     		cmp	r5, #46
3526:src/keys.c    ****       c = OpCode;
 7231              		.loc 1 3526 14 view .LVU2155
 7232 0068 4FF00100 		mov	r0, #1
3527:src/keys.c    ****       c = OpCode;
 7233              		.loc 1 3527 9 view .LVU2156
 7234 006c 2C46     		mov	r4, r5
 7235              	.LVL627:
3526:src/keys.c    ****       c = OpCode;
 7236              		.loc 1 3526 14 view .LVU2157
 7237 006e 1060     		str	r0, [r2]
3527:src/keys.c    ****       c = OpCode;
 7238              		.loc 1 3527 7 is_stmt 1 view .LVU2158
 7239              	.LVL628:
3529:src/keys.c    **** 
 7240              		.loc 1 3529 7 view .LVU2159
 7241              		.loc 1 3531 7 view .LVU2160
 7242              		.loc 1 3531 10 is_stmt 0 view .LVU2161
 7243 0070 00F07982 		beq	.L1328
3532:src/keys.c    **** 	xeq_sst_bst(1);
3533:src/keys.c    ****       else {
3534:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7244              		.loc 1 3534 2 is_stmt 1 view .LVU2162
 7245              		.loc 1 3534 5 is_stmt 0 view .LVU2163
 7246 0074 B5F5817F 		cmp	r5, #258
 7247 0078 08D0     		beq	.L793
 7248              		.loc 1 3534 29 discriminator 1 view .LVU2164
 7249 007a 40F23F13 		movw	r3, #319
 7250 007e 9D42     		cmp	r5, r3
 7251 0080 04D0     		beq	.L793
 7252              		.loc 1 3534 60 discriminator 2 view .LVU2165
 7253 0082 FFF7FEFF 		bl	is_bad_cmdline
 7254              	.LVL629:
 7255              		.loc 1 3534 56 discriminator 2 view .LVU2166
 7256 0086 0028     		cmp	r0, #0
 7257 0088 40F07A82 		bne	.L1329
 7258              	.L793:
3535:src/keys.c    **** 	  xeq(c);
 7259              		.loc 1 3535 4 is_stmt 1 view .LVU2167
3536:src/keys.c    **** 	  if (Running || Pause)
 7260              		.loc 1 3536 8 is_stmt 0 view .LVU2168
 7261 008c 994E     		ldr	r6, .L1418+20
ARM GAS  /tmp/ccF3vcso.s 			page 225


3535:src/keys.c    **** 	  xeq(c);
 7262              		.loc 1 3535 4 view .LVU2169
 7263 008e 2846     		mov	r0, r5
 7264 0090 FFF7FEFF 		bl	xeq
 7265              	.LVL630:
 7266              		.loc 1 3536 4 is_stmt 1 view .LVU2170
 7267              		.loc 1 3536 7 is_stmt 0 view .LVU2171
 7268 0094 3368     		ldr	r3, [r6]
 7269 0096 0BB9     		cbnz	r3, .L791
 7270              		.loc 1 3536 16 discriminator 1 view .LVU2172
 7271 0098 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7272 009a 0BB1     		cbz	r3, .L789
 7273              	.L791:
3537:src/keys.c    **** 	    xeqprog();
 7274              		.loc 1 3537 6 is_stmt 1 view .LVU2173
 7275 009c FFF7FEFF 		bl	xeqprog
 7276              	.LVL631:
 7277              	.L789:
3538:src/keys.c    **** 	}
3539:src/keys.c    ****       }
3540:src/keys.c    ****       dot(RPN, ShowRPN);
 7278              		.loc 1 3540 7 view .LVU2174
 7279 00a0 954D     		ldr	r5, .L1418+24
 7280 00a2 8D20     		movs	r0, #141
 7281 00a4 2968     		ldr	r1, [r5]
 7282 00a6 FFF7FEFF 		bl	dot
 7283              	.LVL632:
3541:src/keys.c    ****     }
3542:src/keys.c    ****     else {
3543:src/keys.c    ****       // Ignore key-up if no operation was pending
3544:src/keys.c    ****       dot(RPN, ShowRPN);
3545:src/keys.c    **** #ifndef CONSOLE
3546:src/keys.c    ****       if (! State2.disp_temp ) {
3547:src/keys.c    **** 	if (!WasDataEntry) {
3548:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3549:src/keys.c    **** 	  display();
3550:src/keys.c    **** 	}
3551:src/keys.c    **** 	else {
3552:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
3553:src/keys.c    **** 	}
3554:src/keys.c    ****       }
3555:src/keys.c    **** #endif
3556:src/keys.c    ****       return;
3557:src/keys.c    ****     }
3558:src/keys.c    **** 
3559:src/keys.c    ****     /*
3560:src/keys.c    ****      *  Turn on the RPN symbol if desired
3561:src/keys.c    ****      */
3562:src/keys.c    ****     if (ShowRPN) {
 7284              		.loc 1 3562 5 view .LVU2175
 7285              		.loc 1 3562 9 is_stmt 0 view .LVU2176
 7286 00aa 2D68     		ldr	r5, [r5]
 7287              		.loc 1 3562 8 view .LVU2177
 7288 00ac 002D     		cmp	r5, #0
 7289 00ae 00F0FE81 		beq	.L1317
3563:src/keys.c    ****       lcd_refresh();
 7290              		.loc 1 3563 7 is_stmt 1 view .LVU2178
ARM GAS  /tmp/ccF3vcso.s 			page 226


 7291 00b2 924B     		ldr	r3, .L1418+28
 7292 00b4 9847     		blx	r3
 7293              	.LVL633:
 7294 00b6 3368     		ldr	r3, [r6]
3410:src/keys.c    ****   //print_debug(60,c);
 7295              		.loc 1 3410 7 is_stmt 0 view .LVU2179
 7296 00b8 0025     		movs	r5, #0
 7297              	.LVL634:
 7298              	.L796:
3564:src/keys.c    ****     }
3565:src/keys.c    ****   }
3566:src/keys.c    ****   else {
3567:src/keys.c    ****     /*
3568:src/keys.c    ****      *  Decode the key 
3569:src/keys.c    ****      */
3570:src/keys.c    ****     //    print_debug (90, cur_shift());
3571:src/keys.c    ****     WasDataEntry = 0;
3572:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3573:src/keys.c    **** #ifdef DM42
3574:src/keys.c    ****     if (c != K_OP) {
3575:src/keys.c    ****       c = process(c);
3576:src/keys.c    ****       //print_debug (91,cur_shift());
3577:src/keys.c    ****       // returns an op-code or state
3578:src/keys.c    ****     }
3579:src/keys.c    ****     else {
3580:src/keys.c    ****       if (isRARG(nd_opcode)) {
3581:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3582:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3583:src/keys.c    **** 	  c = nd_opcode;
3584:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3585:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3586:src/keys.c    **** 	  c = STATE_UNFINISHED;
3587:src/keys.c    **** 	}
3588:src/keys.c    **** 	else if ( (nd_opcode & 0x00ff) != 0 ) { // has argument
3589:src/keys.c    **** 	  c = nd_opcode;
3590:src/keys.c    **** 	}
3591:src/keys.c    **** 	else {
3592:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3593:src/keys.c    **** 	  c = STATE_UNFINISHED;
3594:src/keys.c    **** 	}
3595:src/keys.c    ****       }
3596:src/keys.c    ****       else if (isDBL(nd_opcode)) {
3597:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
3598:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
3599:src/keys.c    **** 	  State2.multi = 1;
3600:src/keys.c    **** 	  State2.alphashift = 0;
3601:src/keys.c    **** 	  State2.rarg = 0;
3602:src/keys.c    **** 	  c = STATE_UNFINISHED;
3603:src/keys.c    **** 	}
3604:src/keys.c    **** 	else { // let argument through
3605:src/keys.c    **** 	  c = nd_opcode;
3606:src/keys.c    **** 	}
3607:src/keys.c    ****       }
3608:src/keys.c    ****       else {
3609:src/keys.c    **** 	c = check_confirm(nd_opcode);
3610:src/keys.c    ****       }      
3611:src/keys.c    ****     }
ARM GAS  /tmp/ccF3vcso.s 			page 227


3612:src/keys.c    **** #else
3613:src/keys.c    ****     c = process(c);		// returns an op-code or state
3614:src/keys.c    **** #endif
3615:src/keys.c    ****     switch (c) {
3616:src/keys.c    ****     case STATE_SST:
3617:src/keys.c    ****       OpCode = c;
3618:src/keys.c    ****       OpCodeDisplayPending = 0;
3619:src/keys.c    ****       xeq_sst_bst(0);
3620:src/keys.c    ****       break;
3621:src/keys.c    **** 
3622:src/keys.c    ****     case STATE_BST:
3623:src/keys.c    ****       xeq_sst_bst(-1);
3624:src/keys.c    ****       break;
3625:src/keys.c    **** 
3626:src/keys.c    ****     case STATE_BACKSPACE:
3627:src/keys.c    ****       if (! State2.runmode)
3628:src/keys.c    **** 	delprog();
3629:src/keys.c    ****       else if (State2.alphas) {
3630:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3631:src/keys.c    **** 	if (p > Alpha)
3632:src/keys.c    **** 	  *--p = '\0';
3633:src/keys.c    ****       }
3634:src/keys.c    ****       break;
3635:src/keys.c    **** 
3636:src/keys.c    ****     case STATE_RUNNING:
3637:src/keys.c    ****       xeqprog();  // continue execution
3638:src/keys.c    ****       break;
3639:src/keys.c    **** 
3640:src/keys.c    ****     case STATE_WINDOWRIGHT:
3641:src/keys.c    ****     case STATE_WINDOWLEFT:
3642:src/keys.c    ****       if (!is_bad_cmdline())
3643:src/keys.c    **** 	set_window(c);
3644:src/keys.c    ****       break;
3645:src/keys.c    **** 
3646:src/keys.c    ****     case STATE_UNFINISHED:
3647:src/keys.c    ****     case STATE_IGNORE:
3648:src/keys.c    ****       break;
3649:src/keys.c    **** 
3650:src/keys.c    ****     default:
3651:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3652:src/keys.c    **** 	NonProgrammable = 0;
3653:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3654:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3655:src/keys.c    **** 	    // Data entry key
3656:src/keys.c    **** #ifndef CONSOLE
3657:src/keys.c    **** 	    WasDataEntry = 1;
3658:src/keys.c    **** #endif
3659:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3660:src/keys.c    **** 	    xeq(c);
3661:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3662:src/keys.c    **** 	  }
3663:src/keys.c    **** 	}
3664:src/keys.c    **** 	else {
3665:src/keys.c    **** 	  // Save the op-code for execution on key-up
3666:src/keys.c    **** 	  //print_debug(70,c);
3667:src/keys.c    **** 	  OpCode = c;
3668:src/keys.c    **** 	  OpCodeDisplayPending = 1;
ARM GAS  /tmp/ccF3vcso.s 			page 228


3669:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
3670:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3671:src/keys.c    **** 	}
3672:src/keys.c    ****       }
3673:src/keys.c    ****       else {
3674:src/keys.c    **** 	stoprog(c);
3675:src/keys.c    ****       }
3676:src/keys.c    ****     }
3677:src/keys.c    ****   }
3678:src/keys.c    ****   if (! Running && ! Pause
 7299              		.loc 1 3678 3 is_stmt 1 view .LVU2180
 7300              		.loc 1 3678 6 is_stmt 0 view .LVU2181
 7301 00ba 002B     		cmp	r3, #0
 7302 00bc 40F04A81 		bne	.L1322
 7303              	.LVL635:
 7304              	.L816:
 7305              		.loc 1 3678 20 discriminator 1 view .LVU2182
 7306 00c0 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7307              		.loc 1 3678 17 discriminator 1 view .LVU2183
 7308 00c2 002B     		cmp	r3, #0
 7309 00c4 40F04681 		bne	.L1322
3679:src/keys.c    **** #ifndef CONSOLE
3680:src/keys.c    ****       && ! JustStopped
 7310              		.loc 1 3680 10 view .LVU2184
 7311 00c8 874B     		ldr	r3, .L1418+8
3681:src/keys.c    **** #endif
3682:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7312              		.loc 1 3682 10 view .LVU2185
 7313 00ca 8D4E     		ldr	r6, .L1418+32
 7314 00cc 1B68     		ldr	r3, [r3]
 7315 00ce 3268     		ldr	r2, [r6]
 7316              		.loc 1 3682 7 view .LVU2186
 7317 00d0 1343     		orrs	r3, r3, r2
 7318 00d2 16D1     		bne	.L1104
 7319              		.loc 1 3682 26 discriminator 1 view .LVU2187
 7320 00d4 322C     		cmp	r4, #50
 7321 00d6 14D0     		beq	.L1104
 7322              	.LBB845:
3683:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7323              		.loc 1 3683 5 is_stmt 1 view .LVU2188
 7324              		.loc 1 3683 15 is_stmt 0 view .LVU2189
 7325 00d8 DFF84092 		ldr	r9, .L1418+60
 7326 00dc D9F80070 		ldr	r7, [r9]
 7327              	.LVL636:
3684:src/keys.c    **** 
3685:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7328              		.loc 1 3685 5 is_stmt 1 view .LVU2190
 7329              		.loc 1 3685 21 is_stmt 0 view .LVU2191
 7330 00e0 4CB1     		cbz	r4, .L1106
 7331              		.loc 1 3685 49 discriminator 1 view .LVU2192
 7332 00e2 002D     		cmp	r5, #0
 7333 00e4 40F05584 		bne	.L1165
 7334              		.loc 1 3685 66 discriminator 3 view .LVU2193
 7335 00e8 864B     		ldr	r3, .L1418+36
 7336 00ea DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7337              		.loc 1 3685 21 discriminator 3 view .LVU2194
 7338 00ec 9B07     		lsls	r3, r3, #30
ARM GAS  /tmp/ccF3vcso.s 			page 229


 7339 00ee 00F1A384 		bmi	.L1166
 7340 00f2 07F00104 		and	r4, r7, #1
 7341              	.LVL637:
 7342              	.L1106:
 7343              		.loc 1 3685 18 discriminator 8 view .LVU2195
 7344 00f6 C9F80040 		str	r4, [r9]
3686:src/keys.c    ****     display();
 7345              		.loc 1 3686 5 is_stmt 1 discriminator 8 view .LVU2196
 7346 00fa FFF7FEFF 		bl	display
 7347              	.LVL638:
3687:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7348              		.loc 1 3687 5 discriminator 8 view .LVU2197
 7349              		.loc 1 3687 18 is_stmt 0 discriminator 8 view .LVU2198
 7350 00fe C9F80070 		str	r7, [r9]
 7351              	.LVL639:
 7352              	.L1104:
 7353              		.loc 1 3687 18 discriminator 8 view .LVU2199
 7354              	.LBE845:
3688:src/keys.c    ****   }
3689:src/keys.c    **** 
3690:src/keys.c    ****  no_display:
3691:src/keys.c    ****   JustDisplayed = 0;
 7355              		.loc 1 3691 3 is_stmt 1 view .LVU2200
 7356              		.loc 1 3691 17 is_stmt 0 view .LVU2201
 7357 0102 0023     		movs	r3, #0
 7358 0104 3360     		str	r3, [r6]
3692:src/keys.c    ****   watchdog();
 7359              		.loc 1 3692 13 is_stmt 1 view .LVU2202
 7360              	.L765:
3693:src/keys.c    **** }
 7361              		.loc 1 3693 1 is_stmt 0 view .LVU2203
 7362 0106 03B0     		add	sp, sp, #12
 7363              		.cfi_remember_state
 7364              		.cfi_def_cfa_offset 36
 7365              		@ sp needed
 7366 0108 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7367              	.LVL640:
 7368              	.L1325:
 7369              		.cfi_restore_state
3430:src/keys.c    **** 	/*
 7370              		.loc 1 3430 7 is_stmt 1 view .LVU2204
3430:src/keys.c    **** 	/*
 7371              		.loc 1 3430 11 is_stmt 0 view .LVU2205
 7372 010c FFF7FEFF 		bl	keyticks
 7373              	.LVL641:
3430:src/keys.c    **** 	/*
 7374              		.loc 1 3430 10 view .LVU2206
 7375 0110 0128     		cmp	r0, #1
 7376 0112 1BDD     		ble	.L771
3434:src/keys.c    **** 	  /*
 7377              		.loc 1 3434 2 is_stmt 1 view .LVU2207
3434:src/keys.c    **** 	  /*
 7378              		.loc 1 3434 13 is_stmt 0 view .LVU2208
 7379 0114 754D     		ldr	r5, .L1418+12
 7380 0116 2868     		ldr	r0, [r5]
3434:src/keys.c    **** 	  /*
 7381              		.loc 1 3434 5 view .LVU2209
ARM GAS  /tmp/ccF3vcso.s 			page 230


 7382 0118 98B1     		cbz	r0, .L773
3438:src/keys.c    **** 	    /*
 7383              		.loc 1 3438 4 is_stmt 1 view .LVU2210
3438:src/keys.c    **** 	    /*
 7384              		.loc 1 3438 8 is_stmt 0 view .LVU2211
 7385 011a 7B4B     		ldr	r3, .L1418+40
3438:src/keys.c    **** 	    /*
 7386              		.loc 1 3438 7 view .LVU2212
 7387 011c 1E68     		ldr	r6, [r3]
 7388 011e 002E     		cmp	r6, #0
 7389 0120 00F04582 		beq	.L774
3442:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
 7390              		.loc 1 3442 6 is_stmt 1 view .LVU2213
3443:src/keys.c    **** 	      DispMsg = "RUN";
 7391              		.loc 1 3443 9 is_stmt 0 view .LVU2214
 7392 0124 40F23B12 		movw	r2, #315
3442:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
 7393              		.loc 1 3442 27 view .LVU2215
 7394 0128 0025     		movs	r5, #0
3443:src/keys.c    **** 	      DispMsg = "RUN";
 7395              		.loc 1 3443 9 view .LVU2216
 7396 012a 9042     		cmp	r0, r2
3442:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
 7397              		.loc 1 3442 27 view .LVU2217
 7398 012c 1D60     		str	r5, [r3]
3443:src/keys.c    **** 	      DispMsg = "RUN";
 7399              		.loc 1 3443 6 is_stmt 1 view .LVU2218
3443:src/keys.c    **** 	      DispMsg = "RUN";
 7400              		.loc 1 3443 9 is_stmt 0 view .LVU2219
 7401 012e 40F0FF82 		bne	.L775
3444:src/keys.c    **** 	    }
 7402              		.loc 1 3444 8 is_stmt 1 view .LVU2220
3444:src/keys.c    **** 	    }
 7403              		.loc 1 3444 16 is_stmt 0 view .LVU2221
 7404 0132 764B     		ldr	r3, .L1418+44
 7405 0134 764A     		ldr	r2, .L1418+48
 7406 0136 1A60     		str	r2, [r3]
 7407              	.L776:
3450:src/keys.c    **** 	    ShowRPN = 1;	// Off because of DispMsg setting
 7408              		.loc 1 3450 6 is_stmt 1 view .LVU2222
 7409 0138 FFF7FEFF 		bl	display
 7410              	.LVL642:
3451:src/keys.c    **** 	  }
 7411              		.loc 1 3451 6 view .LVU2223
3451:src/keys.c    **** 	  }
 7412              		.loc 1 3451 14 is_stmt 0 view .LVU2224
 7413 013c 6E4B     		ldr	r3, .L1418+24
 7414 013e 0122     		movs	r2, #1
 7415 0140 1A60     		str	r2, [r3]
 7416              	.L773:
3463:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 7417              		.loc 1 3463 2 is_stmt 1 view .LVU2225
3463:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 7418              		.loc 1 3463 6 is_stmt 0 view .LVU2226
 7419 0142 FFF7FEFF 		bl	keyticks
 7420              	.LVL643:
3463:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
ARM GAS  /tmp/ccF3vcso.s 			page 231


 7421              		.loc 1 3463 5 view .LVU2227
 7422 0146 0C28     		cmp	r0, #12
 7423 0148 00F31182 		bgt	.L1330
 7424              	.L771:
3472:src/keys.c    **** 
 7425              		.loc 1 3472 17 is_stmt 1 view .LVU2228
3478:src/keys.c    **** 	JustStopped = 0;
 7426              		.loc 1 3478 7 view .LVU2229
3478:src/keys.c    **** 	JustStopped = 0;
 7427              		.loc 1 3478 11 is_stmt 0 view .LVU2230
 7428 014c 664D     		ldr	r5, .L1418+8
3478:src/keys.c    **** 	JustStopped = 0;
 7429              		.loc 1 3478 10 view .LVU2231
 7430 014e 2B68     		ldr	r3, [r5]
 7431 0150 002B     		cmp	r3, #0
 7432 0152 40F07381 		bne	.L1331
 7433              	.L780:
3486:src/keys.c    **** 	return;
 7434              		.loc 1 3486 7 is_stmt 1 view .LVU2232
3486:src/keys.c    **** 	return;
 7435              		.loc 1 3486 11 is_stmt 0 view .LVU2233
 7436 0156 674E     		ldr	r6, .L1418+20
 7437 0158 3368     		ldr	r3, [r6]
3486:src/keys.c    **** 	return;
 7438              		.loc 1 3486 10 view .LVU2234
 7439 015a 002B     		cmp	r3, #0
 7440 015c 00F06081 		beq	.L1332
 7441              	.L782:
3519:src/keys.c    ****     {
 7442              		.loc 1 3519 3 is_stmt 1 view .LVU2235
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7443              		.loc 1 3571 5 view .LVU2236
3572:src/keys.c    **** #ifdef DM42
 7444              		.loc 1 3572 13 is_stmt 0 view .LVU2237
 7445 0160 654A     		ldr	r2, .L1418+24
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7446              		.loc 1 3571 18 view .LVU2238
 7447 0162 DFF8B891 		ldr	r9, .L1418+60
3572:src/keys.c    **** #ifdef DM42
 7448              		.loc 1 3572 15 view .LVU2239
 7449 0166 B3FA83F3 		clz	r3, r3
 7450 016a 5B09     		lsrs	r3, r3, #5
3572:src/keys.c    **** #ifdef DM42
 7451              		.loc 1 3572 13 view .LVU2240
 7452 016c 1360     		str	r3, [r2]
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7453              		.loc 1 3571 18 view .LVU2241
 7454 016e 0023     		movs	r3, #0
 7455 0170 C9F80030 		str	r3, [r9]
3572:src/keys.c    **** #ifdef DM42
 7456              		.loc 1 3572 5 is_stmt 1 view .LVU2242
3574:src/keys.c    ****       c = process(c);
 7457              		.loc 1 3574 5 view .LVU2243
 7458              	.L768:
3575:src/keys.c    ****       //print_debug (91,cur_shift());
 7459              		.loc 1 3575 7 view .LVU2244
 7460              	.LVL644:
ARM GAS  /tmp/ccF3vcso.s 			page 232


 7461              	.LBB846:
 7462              	.LBI846:
3215:src/keys.c    ****   const enum shifts shift = cur_shift();
 7463              		.loc 1 3215 12 view .LVU2245
 7464              	.LBB847:
3216:src/keys.c    ****   enum catalogues cat;
 7465              		.loc 1 3216 3 view .LVU2246
 7466              	.LBB848:
 7467              	.LBI848:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7468              		.loc 1 96 13 view .LVU2247
 7469              	.LBB849:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7470              		.loc 1 97 2 view .LVU2248
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7471              		.loc 1 97 18 is_stmt 0 view .LVU2249
 7472 0174 FFF7FEFF 		bl	shift_down
 7473              	.LVL645:
  98:src/keys.c    **** }
 7474              		.loc 1 98 2 is_stmt 1 view .LVU2250
  98:src/keys.c    **** }
 7475              		.loc 1 98 52 is_stmt 0 view .LVU2251
 7476 0178 0346     		mov	r3, r0
 7477 017a 08B9     		cbnz	r0, .L800
 7478 017c 614B     		ldr	r3, .L1418+36
 7479 017e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 7480              	.L800:
 7481              	.LVL646:
  98:src/keys.c    **** }
 7482              		.loc 1 98 52 view .LVU2252
 7483              	.LBE849:
 7484              	.LBE848:
3217:src/keys.c    **** 
 7485              		.loc 1 3217 3 is_stmt 1 view .LVU2253
3219:src/keys.c    ****     /*
 7486              		.loc 1 3219 3 view .LVU2254
3219:src/keys.c    ****     /*
 7487              		.loc 1 3219 7 is_stmt 0 view .LVU2255
 7488 0180 3568     		ldr	r5, [r6]
3219:src/keys.c    ****     /*
 7489              		.loc 1 3219 6 view .LVU2256
 7490 0182 002D     		cmp	r5, #0
 7491 0184 40F0CE80 		bne	.L801
3219:src/keys.c    ****     /*
 7492              		.loc 1 3219 15 view .LVU2257
 7493 0188 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 7494 018a 002A     		cmp	r2, #0
 7495 018c 40F0CA80 		bne	.L801
3247:src/keys.c    **** #else
 7496              		.loc 1 3247 3 is_stmt 1 view .LVU2258
3247:src/keys.c    **** #else
 7497              		.loc 1 3247 6 is_stmt 0 view .LVU2259
 7498 0190 242C     		cmp	r4, #36
 7499 0192 00F03A83 		beq	.L1333
3264:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7500              		.loc 1 3264 2 is_stmt 1 view .LVU2260
3264:src/keys.c    **** 		// Avoid an accidental restart with R/S
ARM GAS  /tmp/ccF3vcso.s 			page 233


 7501              		.loc 1 3264 5 is_stmt 0 view .LVU2261
 7502 0196 272C     		cmp	r4, #39
 7503 0198 04D1     		bne	.L815
3264:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7504              		.loc 1 3264 15 view .LVU2262
 7505 019a 534A     		ldr	r2, .L1418+8
 7506 019c 1168     		ldr	r1, [r2]
 7507 019e 0029     		cmp	r1, #0
 7508 01a0 40F03984 		bne	.L1334
 7509              	.L815:
 7510 01a4 DFF85C81 		ldr	r8, .L1418+36
 7511 01a8 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 7512              	.L808:
3273:src/keys.c    **** 		CmdLineLength = 0;
 7513              		.loc 1 3273 2 is_stmt 1 view .LVU2263
3273:src/keys.c    **** 		CmdLineLength = 0;
 7514              		.loc 1 3273 5 is_stmt 0 view .LVU2264
 7515 01ac 4AB1     		cbz	r2, .L818
 7516 01ae 0093     		str	r3, [sp]
3273:src/keys.c    **** 		CmdLineLength = 0;
 7517              		.loc 1 3273 26 view .LVU2265
 7518 01b0 FFF7FEFF 		bl	keyticks
 7519              	.LVL647:
3273:src/keys.c    **** 		CmdLineLength = 0;
 7520              		.loc 1 3273 23 view .LVU2266
 7521 01b4 1E28     		cmp	r0, #30
3274:src/keys.c    **** 	/*
 7522              		.loc 1 3274 17 view .LVU2267
 7523 01b6 C8BF     		it	gt
 7524 01b8 0022     		movgt	r2, #0
3273:src/keys.c    **** 		CmdLineLength = 0;
 7525              		.loc 1 3273 23 view .LVU2268
 7526 01ba 009B     		ldr	r3, [sp]
3274:src/keys.c    **** 	/*
 7527              		.loc 1 3274 3 is_stmt 1 view .LVU2269
3274:src/keys.c    **** 	/*
 7528              		.loc 1 3274 17 is_stmt 0 view .LVU2270
 7529 01bc C8BF     		it	gt
 7530 01be 88F81C20 		strbgt	r2, [r8, #28]
 7531              	.L818:
3279:src/keys.c    **** 		return process_confirm((const keycode)c);
 7532              		.loc 1 3279 2 is_stmt 1 view .LVU2271
3279:src/keys.c    **** 		return process_confirm((const keycode)c);
 7533              		.loc 1 3279 6 is_stmt 0 view .LVU2272
 7534 01c2 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
3279:src/keys.c    **** 		return process_confirm((const keycode)c);
 7535              		.loc 1 3279 5 view .LVU2273
 7536 01c6 5007     		lsls	r0, r2, #29
 7537 01c8 40F0BE82 		bne	.L1335
3282:src/keys.c    **** 		return process_arg((const keycode)c);
 7538              		.loc 1 3282 2 is_stmt 1 view .LVU2274
3282:src/keys.c    **** 		return process_arg((const keycode)c);
 7539              		.loc 1 3282 6 is_stmt 0 view .LVU2275
 7540 01cc 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3282:src/keys.c    **** 		return process_arg((const keycode)c);
 7541              		.loc 1 3282 5 view .LVU2276
 7542 01d0 9106     		lsls	r1, r2, #26
ARM GAS  /tmp/ccF3vcso.s 			page 234


 7543 01d2 00F13A83 		bmi	.L1336
3285:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7544              		.loc 1 3285 2 is_stmt 1 view .LVU2277
3285:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7545              		.loc 1 3285 6 is_stmt 0 view .LVU2278
 7546 01d6 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
3285:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7547              		.loc 1 3285 5 view .LVU2279
 7548 01da 11F0010A 		ands	r10, r1, #1
 7549 01de 40F08F83 		bne	.L1337
3288:src/keys.c    **** 		return process_hyp((const keycode)c);
 7550              		.loc 1 3288 2 is_stmt 1 view .LVU2280
3288:src/keys.c    **** 		return process_hyp((const keycode)c);
 7551              		.loc 1 3288 5 is_stmt 0 view .LVU2281
 7552 01e2 11F02000 		ands	r0, r1, #32
 7553 01e6 40F0D783 		bne	.L1338
3291:src/keys.c    **** 		return process_test((const keycode)c);
 7554              		.loc 1 3291 2 is_stmt 1 view .LVU2282
3291:src/keys.c    **** 		return process_test((const keycode)c);
 7555              		.loc 1 3291 12 is_stmt 0 view .LVU2283
 7556 01ea 98F80FA0 		ldrb	r10, [r8, #15]	@ zero_extendqisi2
3291:src/keys.c    **** 		return process_test((const keycode)c);
 7557              		.loc 1 3291 5 view .LVU2284
 7558 01ee BAF1070F 		cmp	r10, #7
 7559 01f2 40F03883 		bne	.L1339
3294:src/keys.c    **** 		return process_status((const keycode)c);
 7560              		.loc 1 3294 2 is_stmt 1 view .LVU2285
3294:src/keys.c    **** 		return process_status((const keycode)c);
 7561              		.loc 1 3294 12 is_stmt 0 view .LVU2286
 7562 01f6 98F80C20 		ldrb	r2, [r8, #12]	@ zero_extendqisi2
3294:src/keys.c    **** 		return process_status((const keycode)c);
 7563              		.loc 1 3294 5 view .LVU2287
 7564 01fa 002A     		cmp	r2, #0
 7565 01fc 40F01F84 		bne	.L1340
3300:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7566              		.loc 1 3300 2 is_stmt 1 view .LVU2288
3300:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7567              		.loc 1 3300 5 is_stmt 0 view .LVU2289
 7568 0200 292C     		cmp	r4, #41
 7569 0202 00F05A85 		beq	.L1341
3304:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7570              		.loc 1 3304 2 is_stmt 1 view .LVU2290
3304:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7571              		.loc 1 3304 5 is_stmt 0 view .LVU2291
 7572 0206 2A2C     		cmp	r4, #42
 7573 0208 00F06285 		beq	.L1342
3308:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7574              		.loc 1 3308 2 is_stmt 1 view .LVU2292
3308:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7575              		.loc 1 3308 5 is_stmt 0 view .LVU2293
 7576 020c 2B2C     		cmp	r4, #43
 7577 020e 00F0CA85 		beq	.L1343
3317:src/keys.c    **** 		return process_arrow((const keycode)c);
 7578              		.loc 1 3317 2 is_stmt 1 view .LVU2294
3317:src/keys.c    **** 		return process_arrow((const keycode)c);
 7579              		.loc 1 3317 5 is_stmt 0 view .LVU2295
 7580 0212 4A07     		lsls	r2, r1, #29
ARM GAS  /tmp/ccF3vcso.s 			page 235


 7581 0214 00F13F84 		bmi	.L1344
3325:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7582              		.loc 1 3325 2 is_stmt 1 view .LVU2296
 7583              	.LBB850:
 7584              	.LBB851:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7585              		.loc 1 276 6 is_stmt 0 view .LVU2297
 7586 0218 DFF804B1 		ldr	fp, .L1418+64
 7587 021c DBF800C0 		ldr	ip, [fp]
 7588 0220 9CF8AC07 		ldrb	r0, [ip, #1964]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7589              		.loc 1 276 5 view .LVU2298
 7590 0224 00F04102 		and	r2, r0, #65
 7591 0228 412A     		cmp	r2, #65
 7592              	.LBE851:
 7593              	.LBE850:
3325:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7594              		.loc 1 3325 8 view .LVU2299
 7595 022a E4B2     		uxtb	r4, r4
 7596              	.LVL648:
 7597              	.LBB873:
 7598              	.LBI850:
 267:src/keys.c    **** {
 7599              		.loc 1 267 24 is_stmt 1 view .LVU2300
 7600              	.LBB858:
 269:src/keys.c    ****   int i, col, max;
 7601              		.loc 1 269 3 view .LVU2301
 270:src/keys.c    ****   const struct _map {
 7602              		.loc 1 270 3 view .LVU2302
 271:src/keys.c    ****     unsigned char key, cat[3];
 7603              		.loc 1 271 3 view .LVU2303
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7604              		.loc 1 276 2 view .LVU2304
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7605              		.loc 1 276 5 is_stmt 0 view .LVU2305
 7606 022c 00F09E84 		beq	.L1345
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7607              		.loc 1 312 3 is_stmt 1 view .LVU2306
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7608              		.loc 1 312 6 is_stmt 0 view .LVU2307
 7609 0230 212C     		cmp	r4, #33
 7610 0232 00F02585 		beq	.L1346
 315:src/keys.c    ****     /*
 7611              		.loc 1 315 3 is_stmt 1 view .LVU2308
 315:src/keys.c    ****     /*
 7612              		.loc 1 315 23 is_stmt 0 view .LVU2309
 7613 0236 3748     		ldr	r0, .L1418+52
 7614 0238 D8F81420 		ldr	r2, [r8, #20]
 315:src/keys.c    ****     /*
 7615              		.loc 1 315 6 view .LVU2310
 7616 023c 1042     		tst	r0, r2
 7617 023e 40F02885 		bne	.L909
 7618              	.LBB852:
 319:src/keys.c    **** #ifdef DM42
 7619              		.loc 1 319 5 is_stmt 1 view .LVU2311
 346:src/keys.c    ****       /*
 7620              		.loc 1 346 5 view .LVU2312
ARM GAS  /tmp/ccF3vcso.s 			page 236


 346:src/keys.c    ****       /*
 7621              		.loc 1 346 8 is_stmt 0 view .LVU2313
 7622 0242 242C     		cmp	r4, #36
 7623 0244 02D1     		bne	.L910
 346:src/keys.c    ****       /*
 7624              		.loc 1 346 18 view .LVU2314
 7625 0246 022B     		cmp	r3, #2
 7626 0248 01F02880 		beq	.L1140
 7627              	.L910:
 361:src/keys.c    ****       /*
 7628              		.loc 1 361 5 is_stmt 1 view .LVU2315
 361:src/keys.c    ****       /*
 7629              		.loc 1 361 8 is_stmt 0 view .LVU2316
 7630 024c 032B     		cmp	r3, #3
 7631 024e 19D1     		bne	.L916
 7632              	.L1123:
 371:src/keys.c    **** #ifndef WINGUI
 7633              		.loc 1 371 5 is_stmt 1 view .LVU2317
 7634              	.LVL649:
 373:src/keys.c    **** #else
 7635              		.loc 1 373 5 view .LVU2318
 373:src/keys.c    **** #else
 7636              		.loc 1 373 23 is_stmt 0 view .LVU2319
 7637 0250 9CF8E827 		ldrb	r2, [ip, #2024]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 7638              		.loc 1 373 27 view .LVU2320
 7639 0254 D007     		lsls	r0, r2, #31
 7640 0256 01F15180 		bmi	.L1141
 373:src/keys.c    **** #else
 7641              		.loc 1 373 73 view .LVU2321
 7642 025a 11F0020A 		ands	r10, r1, #2
 7643 025e 01F01D82 		beq	.L1347
 371:src/keys.c    **** #ifndef WINGUI
 7644              		.loc 1 371 8 view .LVU2322
 7645 0262 2D4A     		ldr	r2, .L1418+56
 377:src/keys.c    ****   }
 7646              		.loc 1 377 9 view .LVU2323
 7647 0264 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 7648              		.loc 1 373 73 view .LVU2324
 7649 0266 4FF0020E 		mov	lr, #2
 7650              	.LVL650:
 7651              	.L911:
 373:src/keys.c    **** #else
 7652              		.loc 1 373 73 view .LVU2325
 7653              	.LBE852:
 421:src/keys.c    ****     if (cp->key == c) {
 7654              		.loc 1 421 3 is_stmt 1 view .LVU2326
 421:src/keys.c    ****     if (cp->key == c) {
 7655              		.loc 1 421 15 view .LVU2327
 7656 026a A2F1040C 		sub	ip, r2, #4
 7657 026e 0CEB800C 		add	ip, ip, r0, lsl #2
 7658              	.LBB853:
 373:src/keys.c    **** #else
 7659              		.loc 1 373 73 is_stmt 0 view .LVU2328
 7660 0272 0420     		movs	r0, #4
 7661              	.LVL651:
ARM GAS  /tmp/ccF3vcso.s 			page 237


 373:src/keys.c    **** #else
 7662              		.loc 1 373 73 view .LVU2329
 7663 0274 01E0     		b	.L917
 7664              	.LVL652:
 7665              	.L1349:
 373:src/keys.c    **** #else
 7666              		.loc 1 373 73 view .LVU2330
 7667 0276 12F8040F 		ldrb	r0, [r2, #4]!	@ zero_extendqisi2
 7668              	.LVL653:
 7669              	.L917:
 373:src/keys.c    **** #else
 7670              		.loc 1 373 73 view .LVU2331
 7671              	.LBE853:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7672              		.loc 1 422 5 is_stmt 1 view .LVU2332
 421:src/keys.c    ****     if (cp->key == c) {
 7673              		.loc 1 421 24 view .LVU2333
 421:src/keys.c    ****     if (cp->key == c) {
 7674              		.loc 1 421 15 view .LVU2334
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7675              		.loc 1 422 8 is_stmt 0 view .LVU2335
 7676 027a 8442     		cmp	r4, r0
 7677 027c 00F03385 		beq	.L1348
 421:src/keys.c    ****     if (cp->key == c) {
 7678              		.loc 1 421 3 view .LVU2336
 7679 0280 6245     		cmp	r2, ip
 7680 0282 F8D1     		bne	.L1349
 7681              	.LVL654:
 7682              	.L916:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7683              		.loc 1 427 3 is_stmt 1 view .LVU2337
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7684              		.loc 1 427 6 is_stmt 0 view .LVU2338
 7685 0284 0A07     		lsls	r2, r1, #28
 7686 0286 00F13985 		bmi	.L922
 7687              	.LVL655:
 7688              	.L920:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7689              		.loc 1 427 6 view .LVU2339
 7690              	.LBE858:
 7691              	.LBE873:
3340:src/keys.c    **** 		return process_labellist((const keycode)c);
 7692              		.loc 1 3340 2 is_stmt 1 view .LVU2340
3340:src/keys.c    **** 		return process_labellist((const keycode)c);
 7693              		.loc 1 3340 6 is_stmt 0 view .LVU2341
 7694 028a 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3340:src/keys.c    **** 		return process_labellist((const keycode)c);
 7695              		.loc 1 3340 5 view .LVU2342
 7696 028e 5007     		lsls	r0, r2, #29
 7697 0290 00F1DD85 		bmi	.L1350
3343:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7698              		.loc 1 3343 2 is_stmt 1 view .LVU2343
3343:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7699              		.loc 1 3343 5 is_stmt 0 view .LVU2344
 7700 0294 1207     		lsls	r2, r2, #28
 7701 0296 00F13287 		bmi	.L1351
3346:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
ARM GAS  /tmp/ccF3vcso.s 			page 238


 7702              		.loc 1 3346 2 is_stmt 1 view .LVU2345
3346:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7703              		.loc 1 3346 5 is_stmt 0 view .LVU2346
 7704 029a 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 7705 029e 002A     		cmp	r2, #0
 7706 02a0 40F0EA87 		bne	.L1352
3349:src/keys.c    **** #ifndef INFRARED
 7707              		.loc 1 3349 2 is_stmt 1 view .LVU2347
3349:src/keys.c    **** #ifndef INFRARED
 7708              		.loc 1 3349 6 is_stmt 0 view .LVU2348
 7709 02a4 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3349:src/keys.c    **** #ifndef INFRARED
 7710              		.loc 1 3349 5 view .LVU2349
 7711 02a8 1007     		lsls	r0, r2, #28
 7712 02aa 01F13880 		bmi	.L1353
3362:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7713              		.loc 1 3362 2 is_stmt 1 view .LVU2350
3362:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7714              		.loc 1 3362 6 is_stmt 0 view .LVU2351
 7715 02ae DBF80020 		ldr	r2, [fp]
 7716 02b2 92F8AC27 		ldrb	r2, [r2, #1964]	@ zero_extendqisi2
3362:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7717              		.loc 1 3362 5 view .LVU2352
 7718 02b6 02F04102 		and	r2, r2, #65
 7719 02ba 412A     		cmp	r2, #65
 7720 02bc 01F0FC81 		beq	.L1354
3366:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7721              		.loc 1 3366 2 is_stmt 1 view .LVU2353
3366:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7722              		.loc 1 3366 5 is_stmt 0 view .LVU2354
 7723 02c0 8D07     		lsls	r5, r1, #30
 7724 02c2 01F17E81 		bmi	.L1312
3369:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7725              		.loc 1 3369 3 is_stmt 1 view .LVU2355
3369:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7726              		.loc 1 3369 24 is_stmt 0 view .LVU2356
 7727 02c6 5A1E     		subs	r2, r3, #1
3369:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7728              		.loc 1 3369 6 view .LVU2357
 7729 02c8 D2B2     		uxtb	r2, r2
 7730 02ca 012A     		cmp	r2, #1
 7731 02cc 41F29F81 		bls	.L1314
3371:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7732              		.loc 1 3371 3 is_stmt 1 view .LVU2358
3371:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7733              		.loc 1 3371 6 is_stmt 0 view .LVU2359
 7734 02d0 032B     		cmp	r3, #3
3372:src/keys.c    **** 		// print_debug (3, c);
 7735              		.loc 1 3372 11 view .LVU2360
 7736 02d2 2046     		mov	r0, r4
3371:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7737              		.loc 1 3371 6 view .LVU2361
 7738 02d4 01F01381 		beq	.L1355
 7739              	.L1313:
 7740              	.LBB874:
 7741              	.LBB875:
1441:src/keys.c    ****    case (K_CMPLX):
ARM GAS  /tmp/ccF3vcso.s 			page 239


 7742              		.loc 1 1441 13 view .LVU2362
 7743 02d8 FFF7FEFF 		bl	process_normal
 7744              	.LVL656:
 7745 02dc 0446     		mov	r4, r0
 7746 02de 85E0     		b	.L830
 7747              	.L1419:
 7748              		.align	2
 7749              	.L1418:
 7750 02e0 00000000 		.word	.LANCHOR18
 7751 02e4 00000000 		.word	Pause
 7752 02e8 00000000 		.word	JustStopped
 7753 02ec 00000000 		.word	OpCode
 7754 02f0 00000000 		.word	GoFast
 7755 02f4 00000000 		.word	Running
 7756 02f8 00000000 		.word	ShowRPN
 7757 02fc 31020008 		.word	134218289
 7758 0300 00000000 		.word	JustDisplayed
 7759 0304 00000000 		.word	StateWhileOn
 7760 0308 00000000 		.word	OpCodeDisplayPending
 7761 030c 00000000 		.word	DispMsg
 7762 0310 00000000 		.word	.LC0
 7763 0314 00080800 		.word	526336
 7764 0318 00000000 		.word	.LANCHOR17
 7765 031c 00000000 		.word	WasDataEntry
 7766 0320 00000000 		.word	main_ram
 7767              	.LVL657:
 7768              	.L801:
1441:src/keys.c    ****    case (K_CMPLX):
 7769              		.loc 1 1441 13 view .LVU2363
 7770              	.LBE875:
 7771              	.LBE874:
3223:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7772              		.loc 1 3223 5 is_stmt 1 view .LVU2364
3223:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7773              		.loc 1 3223 8 is_stmt 0 view .LVU2365
 7774 0324 242C     		cmp	r4, #36
 7775 0326 00F09080 		beq	.L803
3223:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7776              		.loc 1 3223 18 view .LVU2366
 7777 032a 272C     		cmp	r4, #39
 7778 032c 00F08D80 		beq	.L803
3233:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7779              		.loc 1 3233 5 is_stmt 1 view .LVU2367
3233:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7780              		.loc 1 3233 8 is_stmt 0 view .LVU2368
 7781 0330 622C     		cmp	r4, #98
 7782 0332 07D0     		beq	.L806
3234:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7783              		.loc 1 3234 7 is_stmt 1 view .LVU2369
3234:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7784              		.loc 1 3234 15 is_stmt 0 view .LVU2370
 7785 0334 A64B     		ldr	r3, .L1420
 7786              	.LVL658:
3236:src/keys.c    ****     }
 7787              		.loc 1 3236 14 view .LVU2371
 7788 0336 A74A     		ldr	r2, .L1420+4
3234:src/keys.c    ****       Pause = 0;			// leave PSE statement
ARM GAS  /tmp/ccF3vcso.s 			page 240


 7789              		.loc 1 3234 17 view .LVU2372
 7790 0338 0134     		adds	r4, r4, #1
 7791              	.LVL659:
3236:src/keys.c    ****     }
 7792              		.loc 1 3236 14 view .LVU2373
 7793 033a 0121     		movs	r1, #1
3234:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7794              		.loc 1 3234 15 view .LVU2374
 7795 033c DC74     		strb	r4, [r3, #19]
3235:src/keys.c    ****       GoFast = 1;
 7796              		.loc 1 3235 7 is_stmt 1 view .LVU2375
3235:src/keys.c    ****       GoFast = 1;
 7797              		.loc 1 3235 13 is_stmt 0 view .LVU2376
 7798 033e 0023     		movs	r3, #0
3236:src/keys.c    ****     }
 7799              		.loc 1 3236 14 view .LVU2377
 7800 0340 1160     		str	r1, [r2]
3235:src/keys.c    ****       GoFast = 1;
 7801              		.loc 1 3235 13 view .LVU2378
 7802 0342 3B70     		strb	r3, [r7]
3236:src/keys.c    ****     }
 7803              		.loc 1 3236 7 is_stmt 1 view .LVU2379
 7804              	.LVL660:
 7805              	.L806:
3236:src/keys.c    ****     }
 7806              		.loc 1 3236 7 is_stmt 0 view .LVU2380
 7807              	.LBE847:
 7808              	.LBE846:
3637:src/keys.c    ****       break;
 7809              		.loc 1 3637 7 is_stmt 1 view .LVU2381
 7810 0344 FFF7FEFF 		bl	xeqprog
 7811              	.LVL661:
3638:src/keys.c    **** 
 7812              		.loc 1 3638 7 view .LVU2382
 7813 0348 3368     		ldr	r3, [r6]
3410:src/keys.c    ****   //print_debug(60,c);
 7814              		.loc 1 3410 7 is_stmt 0 view .LVU2383
 7815 034a 0025     		movs	r5, #0
3638:src/keys.c    **** 
 7816              		.loc 1 3638 7 view .LVU2384
 7817 034c 3124     		movs	r4, #49
 7818              	.LVL662:
3678:src/keys.c    **** #ifndef CONSOLE
 7819              		.loc 1 3678 3 is_stmt 1 view .LVU2385
3678:src/keys.c    **** #ifndef CONSOLE
 7820              		.loc 1 3678 6 is_stmt 0 view .LVU2386
 7821 034e 002B     		cmp	r3, #0
 7822 0350 3FF4B6AE 		beq	.L816
 7823              	.L1322:
3678:src/keys.c    **** #ifndef CONSOLE
 7824              		.loc 1 3678 6 view .LVU2387
 7825 0354 A04E     		ldr	r6, .L1420+8
3691:src/keys.c    ****   watchdog();
 7826              		.loc 1 3691 3 is_stmt 1 view .LVU2388
3691:src/keys.c    ****   watchdog();
 7827              		.loc 1 3691 17 is_stmt 0 view .LVU2389
 7828 0356 0023     		movs	r3, #0
ARM GAS  /tmp/ccF3vcso.s 			page 241


 7829 0358 3360     		str	r3, [r6]
3692:src/keys.c    **** }
 7830              		.loc 1 3692 13 is_stmt 1 view .LVU2390
 7831 035a D4E6     		b	.L765
 7832              	.LVL663:
 7833              	.L1324:
3422:src/keys.c    ****     }
 7834              		.loc 1 3422 7 view .LVU2391
3572:src/keys.c    **** #ifdef DM42
 7835              		.loc 1 3572 15 is_stmt 0 view .LVU2392
 7836 035c 9F4E     		ldr	r6, .L1420+12
3572:src/keys.c    **** #ifdef DM42
 7837              		.loc 1 3572 13 view .LVU2393
 7838 035e A049     		ldr	r1, .L1420+16
3572:src/keys.c    **** #ifdef DM42
 7839              		.loc 1 3572 15 view .LVU2394
 7840 0360 3368     		ldr	r3, [r6]
3422:src/keys.c    ****     }
 7841              		.loc 1 3422 14 view .LVU2395
 7842 0362 A04A     		ldr	r2, .L1420+20
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7843              		.loc 1 3571 18 view .LVU2396
 7844 0364 DFF89C92 		ldr	r9, .L1420+52
3572:src/keys.c    **** #ifdef DM42
 7845              		.loc 1 3572 15 view .LVU2397
 7846 0368 B3FA83F3 		clz	r3, r3
 7847 036c 5B09     		lsrs	r3, r3, #5
3572:src/keys.c    **** #ifdef DM42
 7848              		.loc 1 3572 13 view .LVU2398
 7849 036e 0B60     		str	r3, [r1]
3422:src/keys.c    ****     }
 7850              		.loc 1 3422 14 view .LVU2399
 7851 0370 0023     		movs	r3, #0
 7852 0372 1360     		str	r3, [r2]
3519:src/keys.c    ****     {
 7853              		.loc 1 3519 3 is_stmt 1 view .LVU2400
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7854              		.loc 1 3571 5 view .LVU2401
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7855              		.loc 1 3571 18 is_stmt 0 view .LVU2402
 7856 0374 C9F80030 		str	r3, [r9]
3572:src/keys.c    **** #ifdef DM42
 7857              		.loc 1 3572 5 is_stmt 1 view .LVU2403
3574:src/keys.c    ****       c = process(c);
 7858              		.loc 1 3574 5 view .LVU2404
 7859 0378 FCE6     		b	.L768
 7860              	.L786:
3574:src/keys.c    ****       c = process(c);
 7861              		.loc 1 3574 5 is_stmt 0 view .LVU2405
 7862 037a 984E     		ldr	r6, .L1420+12
3572:src/keys.c    **** #ifdef DM42
 7863              		.loc 1 3572 13 view .LVU2406
 7864 037c 9849     		ldr	r1, .L1420+16
 7865 037e 3368     		ldr	r3, [r6]
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7866              		.loc 1 3571 5 is_stmt 1 view .LVU2407
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
ARM GAS  /tmp/ccF3vcso.s 			page 242


 7867              		.loc 1 3571 18 is_stmt 0 view .LVU2408
 7868 0380 DFF88092 		ldr	r9, .L1420+52
3572:src/keys.c    **** #ifdef DM42
 7869              		.loc 1 3572 15 view .LVU2409
 7870 0384 B3FA83F2 		clz	r2, r3
 7871 0388 5209     		lsrs	r2, r2, #5
3574:src/keys.c    ****       c = process(c);
 7872              		.loc 1 3574 8 view .LVU2410
 7873 038a 342C     		cmp	r4, #52
3572:src/keys.c    **** #ifdef DM42
 7874              		.loc 1 3572 13 view .LVU2411
 7875 038c 0A60     		str	r2, [r1]
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7876              		.loc 1 3571 18 view .LVU2412
 7877 038e C9F80000 		str	r0, [r9]
3572:src/keys.c    **** #ifdef DM42
 7878              		.loc 1 3572 5 is_stmt 1 view .LVU2413
3574:src/keys.c    ****       c = process(c);
 7879              		.loc 1 3574 5 view .LVU2414
3574:src/keys.c    ****       c = process(c);
 7880              		.loc 1 3574 8 is_stmt 0 view .LVU2415
 7881 0392 7FF4EFAE 		bne	.L768
3580:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7882              		.loc 1 3580 7 is_stmt 1 view .LVU2416
3580:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7883              		.loc 1 3580 11 is_stmt 0 view .LVU2417
 7884 0396 944A     		ldr	r2, .L1420+24
 7885 0398 1568     		ldr	r5, [r2]
3580:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7886              		.loc 1 3580 10 view .LVU2418
 7887 039a 15F47042 		ands	r2, r5, #61440
 7888 039e 1FD0     		beq	.L1082
3580:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7889              		.loc 1 3580 11 discriminator 1 view .LVU2419
 7890 03a0 B2F5704F 		cmp	r2, #61440
 7891 03a4 00F0AF80 		beq	.L1083
 7892              	.LBB1481:
3581:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7893              		.loc 1 3581 2 is_stmt 1 view .LVU2420
3581:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7894              		.loc 1 3581 28 is_stmt 0 view .LVU2421
 7895 03a8 C5F30722 		ubfx	r2, r5, #8, #8
 7896 03ac A2F12004 		sub	r4, r2, #32
 7897              	.LVL664:
3581:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7898              		.loc 1 3581 28 view .LVU2422
 7899 03b0 E4B2     		uxtb	r4, r4
 7900              	.LVL665:
3582:src/keys.c    **** 	  c = nd_opcode;
 7901              		.loc 1 3582 2 is_stmt 1 view .LVU2423
3582:src/keys.c    **** 	  c = nd_opcode;
 7902              		.loc 1 3582 5 is_stmt 0 view .LVU2424
 7903 03b2 012C     		cmp	r4, #1
 7904 03b4 40F2AA80 		bls	.L1089
3582:src/keys.c    **** 	  c = nd_opcode;
 7905              		.loc 1 3582 53 discriminator 1 view .LVU2425
 7906 03b8 6C2C     		cmp	r4, #108
ARM GAS  /tmp/ccF3vcso.s 			page 243


 7907 03ba 00F0A780 		beq	.L1089
3582:src/keys.c    **** 	  c = nd_opcode;
 7908              		.loc 1 3582 74 discriminator 2 view .LVU2426
 7909 03be 242C     		cmp	r4, #36
 7910 03c0 00F0A480 		beq	.L1089
3584:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7911              		.loc 1 3584 7 is_stmt 1 view .LVU2427
3584:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7912              		.loc 1 3584 32 is_stmt 0 view .LVU2428
 7913 03c4 A4F12D01 		sub	r1, r4, #45
3584:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7914              		.loc 1 3584 10 view .LVU2429
 7915 03c8 0629     		cmp	r1, #6
 7916 03ca 00F20E82 		bhi	.L1086
3585:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7917              		.loc 1 3585 4 is_stmt 1 view .LVU2430
3585:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7918              		.loc 1 3585 25 is_stmt 0 view .LVU2431
 7919 03ce 4D3A     		subs	r2, r2, #77
3585:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7920              		.loc 1 3585 16 view .LVU2432
 7921 03d0 88F80F20 		strb	r2, [r8, #15]
3586:src/keys.c    **** 	}
 7922              		.loc 1 3586 4 is_stmt 1 view .LVU2433
 7923              	.LVL666:
3586:src/keys.c    **** 	}
 7924              		.loc 1 3586 4 is_stmt 0 view .LVU2434
 7925              	.LBE1481:
3615:src/keys.c    ****     case STATE_SST:
 7926              		.loc 1 3615 5 is_stmt 1 view .LVU2435
3410:src/keys.c    ****   //print_debug(60,c);
 7927              		.loc 1 3410 7 is_stmt 0 view .LVU2436
 7928 03d4 0546     		mov	r5, r0
 7929              	.LBB1484:
3586:src/keys.c    **** 	}
 7930              		.loc 1 3586 6 view .LVU2437
 7931 03d6 3324     		movs	r4, #51
 7932              	.LVL667:
3586:src/keys.c    **** 	}
 7933              		.loc 1 3586 6 view .LVU2438
 7934 03d8 6FE6     		b	.L796
 7935              	.LVL668:
 7936              	.L1323:
3586:src/keys.c    **** 	}
 7937              		.loc 1 3586 6 view .LVU2439
 7938              	.LBE1484:
3417:src/keys.c    ****     }
 7939              		.loc 1 3417 7 is_stmt 1 view .LVU2440
 7940 03da FFF7FEFF 		bl	xeq_xrom
 7941              	.LVL669:
3417:src/keys.c    ****     }
 7942              		.loc 1 3417 7 is_stmt 0 view .LVU2441
 7943 03de 1BE6     		b	.L766
 7944              	.L1082:
3609:src/keys.c    ****       }      
 7945              		.loc 1 3609 2 is_stmt 1 view .LVU2442
 7946              	.LBB1485:
ARM GAS  /tmp/ccF3vcso.s 			page 244


 7947              	.LBB1486:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 7948              		.loc 1 717 5 is_stmt 0 view .LVU2443
 7949 03e0 C5F30723 		ubfx	r3, r5, #8, #8
 7950 03e4 012B     		cmp	r3, #1
 7951              	.LBE1486:
 7952              	.LBE1485:
3609:src/keys.c    ****       }      
 7953              		.loc 1 3609 6 view .LVU2444
 7954 03e6 2C46     		mov	r4, r5
 7955              	.LVL670:
 7956              	.LBB1489:
 7957              	.LBI1485:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7958              		.loc 1 716 12 is_stmt 1 view .LVU2445
 7959              	.LBB1487:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 7960              		.loc 1 717 2 view .LVU2446
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 7961              		.loc 1 717 5 is_stmt 0 view .LVU2447
 7962 03e8 00F06C81 		beq	.L1315
 7963              	.LVL671:
 7964              	.L830:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 7965              		.loc 1 717 5 view .LVU2448
 7966              	.LBE1487:
 7967              	.LBE1489:
3615:src/keys.c    ****     case STATE_SST:
 7968              		.loc 1 3615 5 is_stmt 1 view .LVU2449
 7969 03ec A4F12B03 		sub	r3, r4, #43
 7970 03f0 082B     		cmp	r3, #8
 7971 03f2 00F21E81 		bhi	.L1091
 7972 03f6 01A2     		adr	r2, .L1092
 7973 03f8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7974              		.p2align 2
 7975              	.L1092:
 7976 03fc 2B040000 		.word	.L1093+1
 7977 0400 2B040000 		.word	.L1093+1
 7978 0404 33060000 		.word	.L1091+1
 7979 0408 9D040000 		.word	.L1025+1
 7980 040c F7040000 		.word	.L1027+1
 7981 0410 C7040000 		.word	.L1021+1
 7982 0414 45030000 		.word	.L806+1
 7983 0418 37040000 		.word	.L1318+1
 7984 041c 37040000 		.word	.L1318+1
 7985              		.p2align 1
 7986              	.L1332:
3486:src/keys.c    **** 	return;
 7987              		.loc 1 3486 23 is_stmt 0 discriminator 1 view .LVU2450
 7988 0420 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3486:src/keys.c    **** 	return;
 7989              		.loc 1 3486 20 discriminator 1 view .LVU2451
 7990 0422 002A     		cmp	r2, #0
 7991 0424 7FF49CAE 		bne	.L782
 7992 0428 6DE6     		b	.L765
 7993              	.L1093:
3642:src/keys.c    **** 	set_window(c);
ARM GAS  /tmp/ccF3vcso.s 			page 245


 7994              		.loc 1 3642 7 is_stmt 1 view .LVU2452
3642:src/keys.c    **** 	set_window(c);
 7995              		.loc 1 3642 12 is_stmt 0 view .LVU2453
 7996 042a FFF7FEFF 		bl	is_bad_cmdline
 7997              	.LVL672:
3642:src/keys.c    **** 	set_window(c);
 7998              		.loc 1 3642 10 view .LVU2454
 7999 042e 0546     		mov	r5, r0
 8000 0430 0028     		cmp	r0, #0
 8001 0432 00F05781 		beq	.L1097
 8002              	.LVL673:
 8003              	.L1318:
3642:src/keys.c    **** 	set_window(c);
 8004              		.loc 1 3642 10 view .LVU2455
 8005 0436 3368     		ldr	r3, [r6]
3410:src/keys.c    ****   //print_debug(60,c);
 8006              		.loc 1 3410 7 view .LVU2456
 8007 0438 0025     		movs	r5, #0
 8008 043a 3EE6     		b	.L796
 8009              	.LVL674:
 8010              	.L1331:
3478:src/keys.c    **** 	JustStopped = 0;
 8011              		.loc 1 3478 27 discriminator 1 view .LVU2457
 8012 043c FFF7FEFF 		bl	is_key_pressed
 8013              	.LVL675:
3478:src/keys.c    **** 	JustStopped = 0;
 8014              		.loc 1 3478 23 discriminator 1 view .LVU2458
 8015 0440 0028     		cmp	r0, #0
 8016 0442 7FF488AE 		bne	.L780
3479:src/keys.c    ****       }
 8017              		.loc 1 3479 2 is_stmt 1 view .LVU2459
3479:src/keys.c    ****       }
 8018              		.loc 1 3479 14 is_stmt 0 view .LVU2460
 8019 0446 2860     		str	r0, [r5]
 8020 0448 85E6     		b	.L780
 8021              	.LVL676:
 8022              	.L803:
 8023              	.LBB1490:
 8024              	.LBB1428:
3224:src/keys.c    **** 	set_pc(0);
 8025              		.loc 1 3224 7 is_stmt 1 view .LVU2461
3224:src/keys.c    **** 	set_pc(0);
 8026              		.loc 1 3224 11 is_stmt 0 view .LVU2462
 8027 044a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 8028              	.LVL677:
3224:src/keys.c    **** 	set_pc(0);
 8029              		.loc 1 3224 10 view .LVU2463
 8030 044c 4BB1     		cbz	r3, .L805
3224:src/keys.c    **** 	set_pc(0);
 8031              		.loc 1 3224 20 view .LVU2464
 8032 044e 674B     		ldr	r3, .L1420+28
 8033 0450 1B68     		ldr	r3, [r3]
 8034 0452 B3F8E037 		ldrh	r3, [r3, #2016]
3224:src/keys.c    **** 	set_pc(0);
 8035              		.loc 1 3224 17 view .LVU2465
 8036 0456 9B0B     		lsrs	r3, r3, #14
 8037 0458 032B     		cmp	r3, #3
ARM GAS  /tmp/ccF3vcso.s 			page 246


 8038 045a 02D1     		bne	.L805
3225:src/keys.c    ****       Pause = 0;
 8039              		.loc 1 3225 2 is_stmt 1 view .LVU2466
 8040 045c 0020     		movs	r0, #0
 8041 045e FFF7FEFF 		bl	set_pc
 8042              	.LVL678:
 8043              	.L805:
3226:src/keys.c    ****       xeq_xrom();
 8044              		.loc 1 3226 7 view .LVU2467
3226:src/keys.c    ****       xeq_xrom();
 8045              		.loc 1 3226 13 is_stmt 0 view .LVU2468
 8046 0462 0025     		movs	r5, #0
 8047 0464 3D70     		strb	r5, [r7]
3227:src/keys.c    ****       set_running_off();
 8048              		.loc 1 3227 7 is_stmt 1 view .LVU2469
 8049 0466 FFF7FEFF 		bl	xeq_xrom
 8050              	.LVL679:
3228:src/keys.c    ****       DispMsg = "Stopped";
 8051              		.loc 1 3228 7 view .LVU2470
 8052 046a FFF7FEFF 		bl	set_running_off
 8053              	.LVL680:
3229:src/keys.c    ****       State2.disp_freeze = 0;
 8054              		.loc 1 3229 7 view .LVU2471
3230:src/keys.c    ****       return STATE_UNFINISHED;
 8055              		.loc 1 3230 26 is_stmt 0 view .LVU2472
 8056 046e 584A     		ldr	r2, .L1420
3229:src/keys.c    ****       State2.disp_freeze = 0;
 8057              		.loc 1 3229 15 view .LVU2473
 8058 0470 5F48     		ldr	r0, .L1420+32
3230:src/keys.c    ****       return STATE_UNFINISHED;
 8059              		.loc 1 3230 26 view .LVU2474
 8060 0472 D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3229:src/keys.c    ****       State2.disp_freeze = 0;
 8061              		.loc 1 3229 15 view .LVU2475
 8062 0474 5F4C     		ldr	r4, .L1420+36
 8063              	.LVL681:
3229:src/keys.c    ****       State2.disp_freeze = 0;
 8064              		.loc 1 3229 15 view .LVU2476
 8065 0476 0460     		str	r4, [r0]
3230:src/keys.c    ****       return STATE_UNFINISHED;
 8066              		.loc 1 3230 7 is_stmt 1 view .LVU2477
3230:src/keys.c    ****       return STATE_UNFINISHED;
 8067              		.loc 1 3230 26 is_stmt 0 view .LVU2478
 8068 0478 65F30411 		bfi	r1, r5, #4, #1
 8069 047c 3368     		ldr	r3, [r6]
 8070 047e D175     		strb	r1, [r2, #23]
3231:src/keys.c    ****     }
 8071              		.loc 1 3231 7 is_stmt 1 view .LVU2479
3231:src/keys.c    ****     }
 8072              		.loc 1 3231 14 is_stmt 0 view .LVU2480
 8073 0480 3324     		movs	r4, #51
 8074 0482 1AE6     		b	.L796
 8075              	.LVL682:
 8076              	.L1019:
 8077              	.LBB991:
3354:src/keys.c    **** 			print_tab(0);
 8078              		.loc 1 3354 3 is_stmt 1 view .LVU2481
ARM GAS  /tmp/ccF3vcso.s 			page 247


3354:src/keys.c    **** 			print_tab(0);
 8079              		.loc 1 3354 6 is_stmt 0 view .LVU2482
 8080 0484 1007     		lsls	r0, r2, #28
 8081              	.LVL683:
3354:src/keys.c    **** 			print_tab(0);
 8082              		.loc 1 3354 6 view .LVU2483
 8083 0486 09D4     		bmi	.L1025
3354:src/keys.c    **** 			print_tab(0);
 8084              		.loc 1 3354 26 view .LVU2484
 8085 0488 6720     		movs	r0, #103
 8086 048a FFF7FEFF 		bl	get_user_flag
 8087              	.LVL684:
3354:src/keys.c    **** 			print_tab(0);
 8088              		.loc 1 3354 23 view .LVU2485
 8089 048e 28B1     		cbz	r0, .L1025
3355:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8090              		.loc 1 3355 4 is_stmt 1 view .LVU2486
 8091 0490 5046     		mov	r0, r10
 8092 0492 FFF7FEFF 		bl	print_tab
 8093              	.LVL685:
3356:src/keys.c    **** 		}
 8094              		.loc 1 3356 4 view .LVU2487
 8095 0496 C020     		movs	r0, #192
 8096 0498 FFF7FEFF 		bl	print_alpha
 8097              	.LVL686:
3356:src/keys.c    **** 		}
 8098              		.loc 1 3356 4 is_stmt 0 view .LVU2488
 8099              	.LBE991:
 8100              	.LBE1428:
 8101              	.LBE1490:
3615:src/keys.c    ****     case STATE_SST:
 8102              		.loc 1 3615 5 is_stmt 1 view .LVU2489
 8103              	.L1025:
3617:src/keys.c    ****       OpCodeDisplayPending = 0;
 8104              		.loc 1 3617 7 view .LVU2490
3617:src/keys.c    ****       OpCodeDisplayPending = 0;
 8105              		.loc 1 3617 14 is_stmt 0 view .LVU2491
 8106 049c 514A     		ldr	r2, .L1420+20
3618:src/keys.c    ****       xeq_sst_bst(0);
 8107              		.loc 1 3618 28 view .LVU2492
 8108 049e 564B     		ldr	r3, .L1420+40
 8109 04a0 0020     		movs	r0, #0
3617:src/keys.c    ****       OpCodeDisplayPending = 0;
 8110              		.loc 1 3617 14 view .LVU2493
 8111 04a2 2E24     		movs	r4, #46
 8112 04a4 1460     		str	r4, [r2]
3618:src/keys.c    ****       xeq_sst_bst(0);
 8113              		.loc 1 3618 7 is_stmt 1 view .LVU2494
3618:src/keys.c    ****       xeq_sst_bst(0);
 8114              		.loc 1 3618 28 is_stmt 0 view .LVU2495
 8115 04a6 1860     		str	r0, [r3]
3619:src/keys.c    ****       break;
 8116              		.loc 1 3619 7 is_stmt 1 view .LVU2496
3410:src/keys.c    ****   //print_debug(60,c);
 8117              		.loc 1 3410 7 is_stmt 0 view .LVU2497
 8118 04a8 0546     		mov	r5, r0
3619:src/keys.c    ****       break;
ARM GAS  /tmp/ccF3vcso.s 			page 248


 8119              		.loc 1 3619 7 view .LVU2498
 8120 04aa FFF7FEFF 		bl	xeq_sst_bst
 8121              	.LVL687:
 8122              	.L1317:
3620:src/keys.c    **** 
 8123              		.loc 1 3620 7 is_stmt 1 view .LVU2499
 8124 04ae 3368     		ldr	r3, [r6]
 8125 04b0 03E6     		b	.L796
 8126              	.LVL688:
 8127              	.L1362:
 8128              	.LBB1491:
 8129              	.LBB1429:
 8130              	.LBB1055:
3354:src/keys.c    **** 			print_tab(0);
 8131              		.loc 1 3354 26 is_stmt 0 view .LVU2500
 8132 04b2 6720     		movs	r0, #103
 8133              	.LVL689:
3354:src/keys.c    **** 			print_tab(0);
 8134              		.loc 1 3354 26 view .LVU2501
 8135 04b4 FFF7FEFF 		bl	get_user_flag
 8136              	.LVL690:
3354:src/keys.c    **** 			print_tab(0);
 8137              		.loc 1 3354 23 view .LVU2502
 8138 04b8 28B1     		cbz	r0, .L1021
3355:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8139              		.loc 1 3355 4 is_stmt 1 view .LVU2503
 8140 04ba 5046     		mov	r0, r10
 8141 04bc FFF7FEFF 		bl	print_tab
 8142              	.LVL691:
3356:src/keys.c    **** 		}
 8143              		.loc 1 3356 4 view .LVU2504
 8144 04c0 C020     		movs	r0, #192
 8145 04c2 FFF7FEFF 		bl	print_alpha
 8146              	.LVL692:
3356:src/keys.c    **** 		}
 8147              		.loc 1 3356 4 is_stmt 0 view .LVU2505
 8148              	.LBE1055:
 8149              	.LBE1429:
 8150              	.LBE1491:
3615:src/keys.c    ****     case STATE_SST:
 8151              		.loc 1 3615 5 is_stmt 1 view .LVU2506
 8152              	.L1021:
3627:src/keys.c    **** 	delprog();
 8153              		.loc 1 3627 7 view .LVU2507
3627:src/keys.c    **** 	delprog();
 8154              		.loc 1 3627 11 is_stmt 0 view .LVU2508
 8155 04c6 98F81650 		ldrb	r5, [r8, #22]	@ zero_extendqisi2
3627:src/keys.c    **** 	delprog();
 8156              		.loc 1 3627 10 view .LVU2509
 8157 04ca 6806     		lsls	r0, r5, #25
 8158 04cc 40F10481 		bpl	.L1120
3629:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8159              		.loc 1 3629 12 is_stmt 1 view .LVU2510
3629:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8160              		.loc 1 3629 15 is_stmt 0 view .LVU2511
 8161 04d0 15F00805 		ands	r5, r5, #8
 8162 04d4 40F0D080 		bne	.L1356
ARM GAS  /tmp/ccF3vcso.s 			page 249


 8163              	.L1320:
 8164 04d8 3368     		ldr	r3, [r6]
 8165              	.LBB1492:
3632:src/keys.c    ****       }
 8166              		.loc 1 3632 9 view .LVU2512
 8167 04da 3024     		movs	r4, #48
 8168 04dc EDE5     		b	.L796
 8169              	.LVL693:
 8170              	.L1015:
3632:src/keys.c    ****       }
 8171              		.loc 1 3632 9 view .LVU2513
 8172              	.LBE1492:
 8173              	.LBB1493:
 8174              	.LBB1430:
 8175              	.LBB1056:
3354:src/keys.c    **** 			print_tab(0);
 8176              		.loc 1 3354 3 is_stmt 1 view .LVU2514
3354:src/keys.c    **** 			print_tab(0);
 8177              		.loc 1 3354 6 is_stmt 0 view .LVU2515
 8178 04de 1407     		lsls	r4, r2, #28
 8179 04e0 09D4     		bmi	.L1027
3354:src/keys.c    **** 			print_tab(0);
 8180              		.loc 1 3354 26 view .LVU2516
 8181 04e2 6720     		movs	r0, #103
 8182 04e4 FFF7FEFF 		bl	get_user_flag
 8183              	.LVL694:
3354:src/keys.c    **** 			print_tab(0);
 8184              		.loc 1 3354 23 view .LVU2517
 8185 04e8 28B1     		cbz	r0, .L1027
3355:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8186              		.loc 1 3355 4 is_stmt 1 view .LVU2518
 8187 04ea 5046     		mov	r0, r10
 8188 04ec FFF7FEFF 		bl	print_tab
 8189              	.LVL695:
3356:src/keys.c    **** 		}
 8190              		.loc 1 3356 4 view .LVU2519
 8191 04f0 C020     		movs	r0, #192
 8192 04f2 FFF7FEFF 		bl	print_alpha
 8193              	.LVL696:
3356:src/keys.c    **** 		}
 8194              		.loc 1 3356 4 is_stmt 0 view .LVU2520
 8195              	.LBE1056:
 8196              	.LBE1430:
 8197              	.LBE1493:
3615:src/keys.c    ****     case STATE_SST:
 8198              		.loc 1 3615 5 is_stmt 1 view .LVU2521
 8199              	.L1027:
3623:src/keys.c    ****       break;
 8200              		.loc 1 3623 7 view .LVU2522
 8201 04f6 4FF0FF30 		mov	r0, #-1
 8202 04fa FFF7FEFF 		bl	xeq_sst_bst
 8203              	.LVL697:
3624:src/keys.c    **** 
 8204              		.loc 1 3624 7 view .LVU2523
3410:src/keys.c    ****   //print_debug(60,c);
 8205              		.loc 1 3410 7 is_stmt 0 view .LVU2524
 8206 04fe 0025     		movs	r5, #0
ARM GAS  /tmp/ccF3vcso.s 			page 250


 8207 0500 3368     		ldr	r3, [r6]
3624:src/keys.c    **** 
 8208              		.loc 1 3624 7 view .LVU2525
 8209 0502 2F24     		movs	r4, #47
 8210 0504 D9E5     		b	.L796
 8211              	.LVL698:
 8212              	.L1083:
3596:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
 8213              		.loc 1 3596 12 is_stmt 1 view .LVU2526
3597:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 8214              		.loc 1 3597 2 view .LVU2527
3597:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 8215              		.loc 1 3597 5 is_stmt 0 view .LVU2528
 8216 0506 35F47F43 		bics	r3, r5, #65280
 8217 050a 3BD0     		beq	.L1357
 8218              	.LVL699:
 8219              	.L1089:
3605:src/keys.c    **** 	}
 8220              		.loc 1 3605 4 is_stmt 1 view .LVU2529
 8221 050c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3605:src/keys.c    **** 	}
 8222              		.loc 1 3605 6 is_stmt 0 view .LVU2530
 8223 0510 2C46     		mov	r4, r5
 8224              	.LVL700:
 8225              	.L857:
3651:src/keys.c    **** 	NonProgrammable = 0;
 8226              		.loc 1 3651 7 is_stmt 1 view .LVU2531
3651:src/keys.c    **** 	NonProgrammable = 0;
 8227              		.loc 1 3651 10 is_stmt 0 view .LVU2532
 8228 0512 12F04002 		ands	r2, r2, #64
 8229 0516 40F00781 		bne	.L1358
3651:src/keys.c    **** 	NonProgrammable = 0;
 8230              		.loc 1 3651 26 view .LVU2533
 8231 051a 384B     		ldr	r3, .L1420+44
 8232 051c 1968     		ldr	r1, [r3]
 8233 051e 0029     		cmp	r1, #0
 8234 0520 41F00982 		bne	.L1359
 8235              	.LVL701:
 8236              	.L1101:
3674:src/keys.c    ****       }
 8237              		.loc 1 3674 2 is_stmt 1 view .LVU2534
 8238 0524 2846     		mov	r0, r5
 8239 0526 FFF7FEFF 		bl	stoprog
 8240              	.LVL702:
 8241 052a 84E7     		b	.L1318
 8242              	.LVL703:
 8243              	.L1327:
3674:src/keys.c    ****       }
 8244              		.loc 1 3674 2 is_stmt 0 view .LVU2535
 8245 052c 2B4E     		ldr	r6, .L1420+12
 8246 052e 3368     		ldr	r3, [r6]
 8247 0530 16E6     		b	.L782
 8248              	.L1326:
3500:src/keys.c    ****       lcd_refresh();
 8249              		.loc 1 3500 7 is_stmt 1 view .LVU2536
 8250 0532 8D20     		movs	r0, #141
 8251 0534 FFF7FEFF 		bl	clr_dot
ARM GAS  /tmp/ccF3vcso.s 			page 251


 8252              	.LVL704:
3501:src/keys.c    ****     }
 8253              		.loc 1 3501 7 view .LVU2537
 8254 0538 314B     		ldr	r3, .L1420+48
 8255 053a 9847     		blx	r3
 8256              	.LVL705:
 8257 053c 83E5     		b	.L784
 8258              	.L787:
3544:src/keys.c    **** #ifndef CONSOLE
 8259              		.loc 1 3544 7 view .LVU2538
 8260 053e 284B     		ldr	r3, .L1420+16
 8261 0540 8D20     		movs	r0, #141
 8262 0542 1968     		ldr	r1, [r3]
 8263 0544 FFF7FEFF 		bl	dot
 8264              	.LVL706:
3546:src/keys.c    **** 	if (!WasDataEntry) {
 8265              		.loc 1 3546 7 view .LVU2539
3546:src/keys.c    **** 	if (!WasDataEntry) {
 8266              		.loc 1 3546 11 is_stmt 0 view .LVU2540
 8267 0548 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3546:src/keys.c    **** 	if (!WasDataEntry) {
 8268              		.loc 1 3546 10 view .LVU2541
 8269 054c 9D06     		lsls	r5, r3, #26
 8270 054e 3FF5DAAD 		bmi	.L765
3547:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8271              		.loc 1 3547 2 is_stmt 1 view .LVU2542
3547:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8272              		.loc 1 3547 6 is_stmt 0 view .LVU2543
 8273 0552 2C4B     		ldr	r3, .L1420+52
3547:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8274              		.loc 1 3547 5 view .LVU2544
 8275 0554 1B68     		ldr	r3, [r3]
 8276 0556 002B     		cmp	r3, #0
 8277 0558 00F07C81 		beq	.L1360
3552:src/keys.c    **** 	}
 8278              		.loc 1 3552 4 is_stmt 1 view .LVU2545
 8279 055c 284B     		ldr	r3, .L1420+48
 8280              		.loc 1 3693 1 is_stmt 0 view .LVU2546
 8281 055e 03B0     		add	sp, sp, #12
 8282              		.cfi_remember_state
 8283              		.cfi_def_cfa_offset 36
 8284              		@ sp needed
 8285 0560 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8286              		.cfi_restore 14
 8287              		.cfi_restore 11
 8288              		.cfi_restore 10
 8289              		.cfi_restore 9
 8290              		.cfi_restore 8
 8291              		.cfi_restore 7
 8292              		.cfi_restore 6
 8293              		.cfi_restore 5
 8294              		.cfi_restore 4
 8295              		.cfi_def_cfa_offset 0
 8296              	.LVL707:
3552:src/keys.c    **** 	}
 8297              		.loc 1 3552 4 view .LVU2547
 8298 0564 1847     		bx	r3	@ indirect register sibling call
ARM GAS  /tmp/ccF3vcso.s 			page 252


 8299              	.LVL708:
 8300              	.L1328:
 8301              		.cfi_restore_state
3532:src/keys.c    ****       else {
 8302              		.loc 1 3532 2 is_stmt 1 view .LVU2548
 8303 0566 FFF7FEFF 		bl	xeq_sst_bst
 8304              	.LVL709:
 8305 056a 1C4E     		ldr	r6, .L1420+12
 8306 056c 98E5     		b	.L789
 8307              	.L1330:
3463:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 8308              		.loc 1 3463 23 is_stmt 0 discriminator 1 view .LVU2549
 8309 056e FFF7FEFF 		bl	shift_down
 8310              	.LVL710:
3463:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 8311              		.loc 1 3463 20 discriminator 1 view .LVU2550
 8312 0572 0028     		cmp	r0, #0
 8313 0574 3FF4EAAD 		beq	.L771
3465:src/keys.c    **** 	}
 8314              		.loc 1 3465 4 is_stmt 1 view .LVU2551
3465:src/keys.c    **** 	}
 8315              		.loc 1 3465 18 is_stmt 0 view .LVU2552
 8316 0578 154B     		ldr	r3, .L1420
 8317 057a 0022     		movs	r2, #0
 8318 057c 1A74     		strb	r2, [r3, #16]
 8319 057e E5E5     		b	.L771
 8320              	.L1329:
3465:src/keys.c    **** 	}
 8321              		.loc 1 3465 18 view .LVU2553
 8322 0580 164E     		ldr	r6, .L1420+12
 8323 0582 8DE5     		b	.L789
 8324              	.L1357:
3598:src/keys.c    **** 	  State2.multi = 1;
 8325              		.loc 1 3598 4 is_stmt 1 view .LVU2554
 8326              	.LVL711:
 8327              	.LBB1494:
 8328              	.LBI1494:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8329              		.loc 1 552 13 view .LVU2555
 8330              	.LBB1495:
 553:src/keys.c    **** 		return;
 8331              		.loc 1 553 2 view .LVU2556
 553:src/keys.c    **** 		return;
 8332              		.loc 1 553 6 is_stmt 0 view .LVU2557
 8333 0584 FFF7FEFF 		bl	is_bad_cmdline
 8334              	.LVL712:
 553:src/keys.c    **** 		return;
 8335              		.loc 1 553 5 view .LVU2558
 8336 0588 18B9     		cbnz	r0, .L1090
 8337 058a C5F30320 		ubfx	r0, r5, #8, #4
 8338 058e FFF7FEFF 		bl	init_arg.part.0
 8339              	.LVL713:
 8340              	.L1090:
 553:src/keys.c    **** 		return;
 8341              		.loc 1 553 5 view .LVU2559
 8342              	.LBE1495:
 8343              	.LBE1494:
ARM GAS  /tmp/ccF3vcso.s 			page 253


3599:src/keys.c    **** 	  State2.alphashift = 0;
 8344              		.loc 1 3599 4 is_stmt 1 view .LVU2560
3600:src/keys.c    **** 	  State2.rarg = 0;
 8345              		.loc 1 3600 4 view .LVU2561
3601:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8346              		.loc 1 3601 4 view .LVU2562
3599:src/keys.c    **** 	  State2.alphashift = 0;
 8347              		.loc 1 3599 17 is_stmt 0 view .LVU2563
 8348 0592 D8F81420 		ldr	r2, [r8, #20]
 8349 0596 3368     		ldr	r3, [r6]
 8350 0598 22F44012 		bic	r2, r2, #3145728
 8351 059c 22F40062 		bic	r2, r2, #2048
 8352 05a0 42F40062 		orr	r2, r2, #2048
 8353 05a4 C8F81420 		str	r2, [r8, #20]
3602:src/keys.c    **** 	}
 8354              		.loc 1 3602 4 is_stmt 1 view .LVU2564
 8355              	.LVL714:
3615:src/keys.c    ****     case STATE_SST:
 8356              		.loc 1 3615 5 view .LVU2565
3410:src/keys.c    ****   //print_debug(60,c);
 8357              		.loc 1 3410 7 is_stmt 0 view .LVU2566
 8358 05a8 0025     		movs	r5, #0
3602:src/keys.c    **** 	}
 8359              		.loc 1 3602 6 view .LVU2567
 8360 05aa 3324     		movs	r4, #51
 8361 05ac 85E5     		b	.L796
 8362              	.LVL715:
 8363              	.L774:
3453:src/keys.c    **** 	    /*
 8364              		.loc 1 3453 9 is_stmt 1 view .LVU2568
3453:src/keys.c    **** 	    /*
 8365              		.loc 1 3453 13 is_stmt 0 view .LVU2569
 8366 05ae FFF7FEFF 		bl	keyticks
 8367              	.LVL716:
3453:src/keys.c    **** 	    /*
 8368              		.loc 1 3453 12 view .LVU2570
 8369 05b2 0C28     		cmp	r0, #12
 8370 05b4 7FF7C5AD 		ble	.L773
3457:src/keys.c    **** 	    message("NULL", CNULL);
 8371              		.loc 1 3457 6 is_stmt 1 view .LVU2571
3458:src/keys.c    **** 	    // Force display update on key-up
 8372              		.loc 1 3458 6 is_stmt 0 view .LVU2572
 8373 05b8 1348     		ldr	r0, .L1420+56
3457:src/keys.c    **** 	    message("NULL", CNULL);
 8374              		.loc 1 3457 13 view .LVU2573
 8375 05ba 2E60     		str	r6, [r5]
3458:src/keys.c    **** 	    // Force display update on key-up
 8376              		.loc 1 3458 6 is_stmt 1 view .LVU2574
 8377 05bc 3146     		mov	r1, r6
 8378 05be FFF7FEFF 		bl	message
 8379              	.LVL717:
3460:src/keys.c    **** 	  }
 8380              		.loc 1 3460 6 view .LVU2575
3460:src/keys.c    **** 	  }
 8381              		.loc 1 3460 23 is_stmt 0 view .LVU2576
 8382 05c2 034B     		ldr	r3, .L1420
 8383 05c4 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccF3vcso.s 			page 254


 8384 05c6 66F34512 		bfi	r2, r6, #5, #1
 8385 05ca DA75     		strb	r2, [r3, #23]
 8386 05cc B9E5     		b	.L773
 8387              	.L1421:
 8388 05ce 00BF     		.align	2
 8389              	.L1420:
 8390 05d0 00000000 		.word	StateWhileOn
 8391 05d4 00000000 		.word	GoFast
 8392 05d8 00000000 		.word	JustDisplayed
 8393 05dc 00000000 		.word	Running
 8394 05e0 00000000 		.word	ShowRPN
 8395 05e4 00000000 		.word	OpCode
 8396 05e8 00000000 		.word	nd_opcode
 8397 05ec 00000000 		.word	main_ram
 8398 05f0 00000000 		.word	DispMsg
 8399 05f4 0C000000 		.word	.LC2
 8400 05f8 00000000 		.word	OpCodeDisplayPending
 8401 05fc 00000000 		.word	NonProgrammable
 8402 0600 31020008 		.word	134218289
 8403 0604 00000000 		.word	WasDataEntry
 8404 0608 04000000 		.word	.LC1
 8405              	.LVL718:
 8406              	.L998:
 8407              	.LBB1496:
 8408              	.LBB1431:
 8409              	.LBB1057:
 8410              	.LBB992:
 8411              	.LBB993:
1892:src/keys.c    **** 		return STATE_UNFINISHED;
 8412              		.loc 1 1892 2 is_stmt 1 view .LVU2577
1892:src/keys.c    **** 		return STATE_UNFINISHED;
 8413              		.loc 1 1892 5 is_stmt 0 view .LVU2578
 8414 060c 0028     		cmp	r0, #0
 8415 060e 01F0F980 		beq	.L1009
1894:src/keys.c    **** }
 8416              		.loc 1 1894 2 is_stmt 1 view .LVU2579
1894:src/keys.c    **** }
 8417              		.loc 1 1894 9 is_stmt 0 view .LVU2580
 8418 0612 40F48844 		orr	r4, r0, #17408
 8419              	.L1014:
 8420              	.LVL719:
1894:src/keys.c    **** }
 8421              		.loc 1 1894 9 view .LVU2581
 8422              	.LBE993:
 8423              	.LBE992:
3354:src/keys.c    **** 			print_tab(0);
 8424              		.loc 1 3354 3 is_stmt 1 view .LVU2582
3354:src/keys.c    **** 			print_tab(0);
 8425              		.loc 1 3354 6 is_stmt 0 view .LVU2583
 8426 0616 12F00805 		ands	r5, r2, #8
 8427 061a 41F01484 		bne	.L1361
3354:src/keys.c    **** 			print_tab(0);
 8428              		.loc 1 3354 26 view .LVU2584
 8429 061e 6720     		movs	r0, #103
 8430              	.LVL720:
3354:src/keys.c    **** 			print_tab(0);
 8431              		.loc 1 3354 26 view .LVU2585
ARM GAS  /tmp/ccF3vcso.s 			page 255


 8432 0620 FFF7FEFF 		bl	get_user_flag
 8433              	.LVL721:
3354:src/keys.c    **** 			print_tab(0);
 8434              		.loc 1 3354 23 view .LVU2586
 8435 0624 28B1     		cbz	r0, .L1091
3355:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8436              		.loc 1 3355 4 is_stmt 1 view .LVU2587
 8437 0626 2846     		mov	r0, r5
 8438 0628 FFF7FEFF 		bl	print_tab
 8439              	.LVL722:
3356:src/keys.c    **** 		}
 8440              		.loc 1 3356 4 view .LVU2588
 8441 062c C020     		movs	r0, #192
 8442 062e FFF7FEFF 		bl	print_alpha
 8443              	.LVL723:
 8444              	.L1091:
3356:src/keys.c    **** 		}
 8445              		.loc 1 3356 4 is_stmt 0 view .LVU2589
 8446              	.LBE1057:
 8447              	.LBE1431:
 8448              	.LBE1496:
3651:src/keys.c    **** 	NonProgrammable = 0;
 8449              		.loc 1 3651 7 is_stmt 1 view .LVU2590
3651:src/keys.c    **** 	NonProgrammable = 0;
 8450              		.loc 1 3651 11 is_stmt 0 view .LVU2591
 8451 0632 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3651:src/keys.c    **** 	NonProgrammable = 0;
 8452              		.loc 1 3651 10 view .LVU2592
 8453 0636 5A06     		lsls	r2, r3, #25
 8454 0638 41F12782 		bpl	.L1099
 8455 063c A44A     		ldr	r2, .L1422
 8456 063e 2546     		mov	r5, r4
 8457              	.L1100:
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8458              		.loc 1 3652 2 is_stmt 1 view .LVU2593
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8459              		.loc 1 3652 18 is_stmt 0 view .LVU2594
 8460 0640 0023     		movs	r3, #0
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8461              		.loc 1 3653 5 view .LVU2595
 8462 0642 142C     		cmp	r4, #20
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8463              		.loc 1 3652 18 view .LVU2596
 8464 0644 1360     		str	r3, [r2]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8465              		.loc 1 3653 2 is_stmt 1 view .LVU2597
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8466              		.loc 1 3653 5 is_stmt 0 view .LVU2598
 8467 0646 66D8     		bhi	.L1098
3654:src/keys.c    **** 	    // Data entry key
 8468              		.loc 1 3654 4 is_stmt 1 view .LVU2599
3654:src/keys.c    **** 	    // Data entry key
 8469              		.loc 1 3654 7 is_stmt 0 view .LVU2600
 8470 0648 24B9     		cbnz	r4, .L1103
3654:src/keys.c    **** 	    // Data entry key
 8471              		.loc 1 3654 38 discriminator 1 view .LVU2601
 8472 064a FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccF3vcso.s 			page 256


 8473              	.LVL724:
3654:src/keys.c    **** 	    // Data entry key
 8474              		.loc 1 3654 34 discriminator 1 view .LVU2602
 8475 064e 0028     		cmp	r0, #0
 8476 0650 7FF4F1AE 		bne	.L1318
 8477              	.L1103:
3657:src/keys.c    **** #endif
 8478              		.loc 1 3657 6 is_stmt 1 view .LVU2603
3659:src/keys.c    **** 	    xeq(c);
 8479              		.loc 1 3659 37 is_stmt 0 view .LVU2604
 8480 0654 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3657:src/keys.c    **** #endif
 8481              		.loc 1 3657 19 view .LVU2605
 8482 0658 0123     		movs	r3, #1
3660:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8483              		.loc 1 3660 6 view .LVU2606
 8484 065a 2046     		mov	r0, r4
3657:src/keys.c    **** #endif
 8485              		.loc 1 3657 19 view .LVU2607
 8486 065c C9F80030 		str	r3, [r9]
3659:src/keys.c    **** 	    xeq(c);
 8487              		.loc 1 3659 6 is_stmt 1 view .LVU2608
3659:src/keys.c    **** 	    xeq(c);
 8488              		.loc 1 3659 37 is_stmt 0 view .LVU2609
 8489 0660 B5FA85F5 		clz	r5, r5
3660:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8490              		.loc 1 3660 6 view .LVU2610
 8491 0664 FFF7FEFF 		bl	xeq
 8492              	.LVL725:
3661:src/keys.c    **** 	  }
 8493              		.loc 1 3661 38 view .LVU2611
 8494 0668 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8495 066c 3368     		ldr	r3, [r6]
3659:src/keys.c    **** 	    xeq(c);
 8496              		.loc 1 3659 37 view .LVU2612
 8497 066e 6D09     		lsrs	r5, r5, #5
 8498              	.LVL726:
3660:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8499              		.loc 1 3660 6 is_stmt 1 view .LVU2613
3661:src/keys.c    **** 	  }
 8500              		.loc 1 3661 6 view .LVU2614
3661:src/keys.c    **** 	  }
 8501              		.loc 1 3661 20 is_stmt 0 view .LVU2615
 8502 0670 0028     		cmp	r0, #0
 8503 0672 08BF     		it	eq
 8504 0674 0125     		moveq	r5, #1
 8505              	.LVL727:
3661:src/keys.c    **** 	  }
 8506              		.loc 1 3661 20 view .LVU2616
 8507 0676 20E5     		b	.L796
 8508              	.LVL728:
 8509              	.L1356:
3661:src/keys.c    **** 	  }
 8510              		.loc 1 3661 20 view .LVU2617
 8511 0678 DFF87CB2 		ldr	fp, .L1422+40
 8512              	.L1095:
 8513              	.LBB1497:
ARM GAS  /tmp/ccF3vcso.s 			page 257


3630:src/keys.c    **** 	if (p > Alpha)
 8514              		.loc 1 3630 2 is_stmt 1 view .LVU2618
3630:src/keys.c    **** 	if (p > Alpha)
 8515              		.loc 1 3630 22 is_stmt 0 view .LVU2619
 8516 067c DBF80000 		ldr	r0, [fp]
3630:src/keys.c    **** 	if (p > Alpha)
 8517              		.loc 1 3630 12 view .LVU2620
 8518 0680 0021     		movs	r1, #0
 8519 0682 00F5F660 		add	r0, r0, #1968
 8520 0686 FFF7FEFF 		bl	find_char
 8521              	.LVL729:
3631:src/keys.c    **** 	  *--p = '\0';
 8522              		.loc 1 3631 8 view .LVU2621
 8523 068a DBF80030 		ldr	r3, [fp]
 8524              	.LVL730:
3631:src/keys.c    **** 	  *--p = '\0';
 8525              		.loc 1 3631 2 is_stmt 1 view .LVU2622
3631:src/keys.c    **** 	  *--p = '\0';
 8526              		.loc 1 3631 8 is_stmt 0 view .LVU2623
 8527 068e 03F5F663 		add	r3, r3, #1968
3631:src/keys.c    **** 	  *--p = '\0';
 8528              		.loc 1 3631 5 view .LVU2624
 8529 0692 9842     		cmp	r0, r3
 8530 0694 00F2E380 		bhi	.L1096
 8531 0698 3368     		ldr	r3, [r6]
 8532              	.LBE1497:
3410:src/keys.c    ****   //print_debug(60,c);
 8533              		.loc 1 3410 7 view .LVU2625
 8534 069a 0025     		movs	r5, #0
 8535              	.LBB1498:
3631:src/keys.c    **** 	  *--p = '\0';
 8536              		.loc 1 3631 5 view .LVU2626
 8537 069c 3024     		movs	r4, #48
 8538 069e 0CE5     		b	.L796
 8539              	.LVL731:
 8540              	.L1149:
3631:src/keys.c    **** 	  *--p = '\0';
 8541              		.loc 1 3631 5 view .LVU2627
 8542              	.LBE1498:
 8543              	.LBB1499:
 8544              	.LBB1432:
 8545              	.LBB1058:
 8546              	.LBB1059:
3002:src/keys.c    **** 
 8547              		.loc 1 3002 6 view .LVU2628
 8548 06a0 3324     		movs	r4, #51
 8549              	.LVL732:
 8550              	.L951:
3035:src/keys.c    **** 		break;
 8551              		.loc 1 3035 3 is_stmt 1 view .LVU2629
 8552 06a2 5846     		mov	r0, fp
 8553 06a4 FFF7FEFF 		bl	set_pc
 8554              	.LVL733:
3036:src/keys.c    **** 
 8555              		.loc 1 3036 3 view .LVU2630
 8556              	.L963:
3089:src/keys.c    **** 	State2.labellist = 0;
ARM GAS  /tmp/ccF3vcso.s 			page 258


 8557              		.loc 1 3089 2 view .LVU2631
3090:src/keys.c    **** 	return check_confirm(op);
 8558              		.loc 1 3090 19 is_stmt 0 view .LVU2632
 8559 06a8 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3089:src/keys.c    **** 	State2.labellist = 0;
 8560              		.loc 1 3089 16 view .LVU2633
 8561 06ac 0022     		movs	r2, #0
 8562              	.LBB1060:
 8563              	.LBB1061:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8564              		.loc 1 717 5 view .LVU2634
 8565 06ae C4F30723 		ubfx	r3, r4, #8, #8
 8566              	.LBE1061:
 8567              	.LBE1060:
3090:src/keys.c    **** 	return check_confirm(op);
 8568              		.loc 1 3090 19 view .LVU2635
 8569 06b2 62F38201 		bfi	r1, r2, #2, #1
 8570              	.LBB1066:
 8571              	.LBB1062:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8572              		.loc 1 717 5 view .LVU2636
 8573 06b6 012B     		cmp	r3, #1
 8574              	.LBE1062:
 8575              	.LBE1066:
3090:src/keys.c    **** 	return check_confirm(op);
 8576              		.loc 1 3090 19 view .LVU2637
 8577 06b8 88F81710 		strb	r1, [r8, #23]
3089:src/keys.c    **** 	State2.labellist = 0;
 8578              		.loc 1 3089 16 view .LVU2638
 8579 06bc A8F80820 		strh	r2, [r8, #8]	@ movhi
3090:src/keys.c    **** 	return check_confirm(op);
 8580              		.loc 1 3090 2 is_stmt 1 view .LVU2639
3091:src/keys.c    **** }
 8581              		.loc 1 3091 2 view .LVU2640
 8582              	.LVL734:
 8583              	.LBB1067:
 8584              	.LBI1060:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8585              		.loc 1 716 12 view .LVU2641
 8586              	.LBB1063:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8587              		.loc 1 717 2 view .LVU2642
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8588              		.loc 1 717 5 is_stmt 0 view .LVU2643
 8589 06c0 7FF494AE 		bne	.L830
 8590              	.LVL735:
 8591              	.L1315:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8592              		.loc 1 717 5 view .LVU2644
 8593              	.LBE1063:
 8594              	.LBE1067:
 8595              	.LBE1059:
 8596              	.LBE1058:
 8597              	.LBE1432:
 8598              	.LBE1499:
 8599              	.LBB1500:
 8600              	.LBB1488:
ARM GAS  /tmp/ccF3vcso.s 			page 259


 8601 06c4 2046     		mov	r0, r4
 8602 06c6 FFF7FEFF 		bl	check_confirm.part.0
 8603              	.LVL736:
 8604 06ca 0446     		mov	r4, r0
 8605 06cc 8EE6     		b	.L830
 8606              	.LVL737:
 8607              	.L1012:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8608              		.loc 1 717 5 view .LVU2645
 8609              	.LBE1488:
 8610              	.LBE1500:
 8611              	.LBB1501:
 8612              	.LBB1433:
 8613              	.LBB1093:
3354:src/keys.c    **** 			print_tab(0);
 8614              		.loc 1 3354 3 is_stmt 1 view .LVU2646
3354:src/keys.c    **** 			print_tab(0);
 8615              		.loc 1 3354 6 is_stmt 0 view .LVU2647
 8616 06ce 1107     		lsls	r1, r2, #28
 8617 06d0 7FF5EFAE 		bpl	.L1362
 8618              	.LVL738:
3354:src/keys.c    **** 			print_tab(0);
 8619              		.loc 1 3354 6 view .LVU2648
 8620              	.LBE1093:
 8621              	.LBE1433:
 8622              	.LBE1501:
3627:src/keys.c    **** 	delprog();
 8623              		.loc 1 3627 7 is_stmt 1 view .LVU2649
3627:src/keys.c    **** 	delprog();
 8624              		.loc 1 3627 10 is_stmt 0 view .LVU2650
 8625 06d4 5306     		lsls	r3, r2, #25
 8626 06d6 D1D4     		bmi	.L1095
 8627              	.LVL739:
 8628              	.L1120:
3628:src/keys.c    ****       else if (State2.alphas) {
 8629              		.loc 1 3628 2 is_stmt 1 view .LVU2651
 8630 06d8 FFF7FEFF 		bl	delprog
 8631              	.LVL740:
3410:src/keys.c    ****   //print_debug(60,c);
 8632              		.loc 1 3410 7 is_stmt 0 view .LVU2652
 8633 06dc 0025     		movs	r5, #0
 8634 06de 3368     		ldr	r3, [r6]
 8635 06e0 3024     		movs	r4, #48
 8636 06e2 EAE4     		b	.L796
 8637              	.LVL741:
 8638              	.L1097:
3643:src/keys.c    ****       break;
 8639              		.loc 1 3643 2 is_stmt 1 view .LVU2653
 8640 06e4 2046     		mov	r0, r4
 8641 06e6 FFF7FEFF 		bl	set_window
 8642              	.LVL742:
 8643 06ea 3368     		ldr	r3, [r6]
 8644 06ec E5E4     		b	.L796
 8645              	.LVL743:
 8646              	.L1413:
 8647              	.LBB1502:
 8648              	.LBB1434:
ARM GAS  /tmp/ccF3vcso.s 			page 260


 8649              	.LBB1094:
 8650              	.LBB961:
1389:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
 8651              		.loc 1 1389 3 view .LVU2654
 8652              	.LBB876:
 8653              	.LBI876:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 8654              		.loc 1 114 13 view .LVU2655
 8655              	.LBE876:
 8656              	.LBE961:
 8657              	.LBE1094:
 8658              	.LBE1434:
 8659              	.LBE1502:
 115:src/keys.c    **** }
 8660              		.loc 1 115 2 view .LVU2656
 8661              	.LBB1503:
 8662              	.LBB1435:
 8663              	.LBB1095:
 8664              	.LBB962:
 8665              	.LBB885:
 8666              	.LBB877:
 8667              	.LBI877:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 8668              		.loc 1 104 20 view .LVU2657
 8669              	.LBB878:
 105:src/keys.c    **** 	State2.shifts = shift;
 8670              		.loc 1 105 2 view .LVU2658
 8671              	.LBB879:
 8672              	.LBI879:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 8673              		.loc 1 96 13 view .LVU2659
 8674              	.LBB880:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8675              		.loc 1 97 2 view .LVU2660
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8676              		.loc 1 97 18 is_stmt 0 view .LVU2661
 8677 06ee FFF7FEFF 		bl	shift_down
 8678              	.LVL744:
  98:src/keys.c    **** }
 8679              		.loc 1 98 2 is_stmt 1 view .LVU2662
 8680              	.LBE880:
 8681              	.LBE879:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8682              		.loc 1 106 2 view .LVU2663
 8683              	.LBE878:
 8684              	.LBE877:
 8685              	.LBE885:
 8686              	.LBE962:
 8687              	.LBE1095:
 8688              	.LBE1435:
 8689              	.LBE1503:
3651:src/keys.c    **** 	NonProgrammable = 0;
 8690              		.loc 1 3651 11 is_stmt 0 view .LVU2664
 8691 06f2 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 8692              	.LBB1504:
 8693              	.LBB1436:
 8694              	.LBB1096:
ARM GAS  /tmp/ccF3vcso.s 			page 261


 8695              	.LBB963:
 8696              	.LBB886:
 8697              	.LBB883:
 8698              	.LBB881:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8699              		.loc 1 106 16 view .LVU2665
 8700 06f6 0023     		movs	r3, #0
 8701              	.LBE881:
 8702              	.LBE883:
 8703              	.LBE886:
 8704              	.LBE963:
 8705              	.LBE1096:
 8706              	.LBE1436:
 8707              	.LBE1504:
3651:src/keys.c    **** 	NonProgrammable = 0;
 8708              		.loc 1 3651 10 view .LVU2666
 8709 06f8 5406     		lsls	r4, r2, #25
 8710              	.LVL745:
 8711              	.LBB1505:
 8712              	.LBB1437:
 8713              	.LBB1097:
 8714              	.LBB964:
 8715              	.LBB887:
 8716              	.LBB884:
 8717              	.LBB882:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8718              		.loc 1 106 16 view .LVU2667
 8719 06fa 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 8720              		.loc 1 108 2 is_stmt 1 view .LVU2668
 8721              	.LVL746:
 108:src/keys.c    **** }
 8722              		.loc 1 108 2 is_stmt 0 view .LVU2669
 8723              	.LBE882:
 8724              	.LBE884:
 8725              	.LBE887:
1390:src/keys.c    ****        }
 8726              		.loc 1 1390 3 is_stmt 1 view .LVU2670
1390:src/keys.c    ****        }
 8727              		.loc 1 1390 3 is_stmt 0 view .LVU2671
 8728              	.LBE964:
 8729              	.LBE1097:
 8730              	.LBE1437:
 8731              	.LBE1505:
3651:src/keys.c    **** 	NonProgrammable = 0;
 8732              		.loc 1 3651 7 is_stmt 1 view .LVU2672
3651:src/keys.c    **** 	NonProgrammable = 0;
 8733              		.loc 1 3651 10 is_stmt 0 view .LVU2673
 8734 06fe 01F10383 		bmi	.L1067
 8735              	.LBB1506:
 8736              	.LBB1438:
 8737              	.LBB1098:
 8738              	.LBB965:
1390:src/keys.c    ****        }
 8739              		.loc 1 1390 10 view .LVU2674
 8740 0702 4FF4C664 		mov	r4, #1584
 8741              	.LVL747:
ARM GAS  /tmp/ccF3vcso.s 			page 262


 8742              	.L1041:
1390:src/keys.c    ****        }
 8743              		.loc 1 1390 10 view .LVU2675
 8744              	.LBE965:
 8745              	.LBE1098:
 8746              	.LBE1438:
 8747              	.LBE1506:
3651:src/keys.c    **** 	NonProgrammable = 0;
 8748              		.loc 1 3651 26 view .LVU2676
 8749 0706 724B     		ldr	r3, .L1422
 8750 0708 1A68     		ldr	r2, [r3]
 8751 070a 002A     		cmp	r2, #0
 8752 070c 01F0F982 		beq	.L1363
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8753              		.loc 1 3652 2 is_stmt 1 view .LVU2677
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8754              		.loc 1 3652 18 is_stmt 0 view .LVU2678
 8755 0710 0022     		movs	r2, #0
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8756              		.loc 1 3653 32 view .LVU2679
 8757 0712 2546     		mov	r5, r4
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8758              		.loc 1 3652 18 view .LVU2680
 8759 0714 1A60     		str	r2, [r3]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8760              		.loc 1 3653 2 is_stmt 1 view .LVU2681
 8761              	.LVL748:
 8762              	.L1098:
3667:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8763              		.loc 1 3667 4 view .LVU2682
3667:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8764              		.loc 1 3667 11 is_stmt 0 view .LVU2683
 8765 0716 6F4A     		ldr	r2, .L1422+4
3668:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
 8766              		.loc 1 3668 25 view .LVU2684
 8767 0718 6F4B     		ldr	r3, .L1422+8
3667:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8768              		.loc 1 3667 11 view .LVU2685
 8769 071a 1560     		str	r5, [r2]
3668:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
 8770              		.loc 1 3668 4 is_stmt 1 view .LVU2686
3668:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
 8771              		.loc 1 3668 25 is_stmt 0 view .LVU2687
 8772 071c 0122     		movs	r2, #1
 8773 071e 1A60     		str	r2, [r3]
3669:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8774              		.loc 1 3669 4 is_stmt 1 view .LVU2688
 8775 0720 6E4B     		ldr	r3, .L1422+12
 8776 0722 6F4E     		ldr	r6, .L1422+16
 8777 0724 9847     		blx	r3
 8778              	.LVL749:
3670:src/keys.c    **** 	}
 8779              		.loc 1 3670 4 view .LVU2689
 8780 0726 ECE4     		b	.L1104
 8781              	.LVL750:
 8782              	.L1358:
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccF3vcso.s 			page 263


 8783              		.loc 1 3652 2 view .LVU2690
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8784              		.loc 1 3652 18 is_stmt 0 view .LVU2691
 8785 0728 694B     		ldr	r3, .L1422
 8786 072a 0022     		movs	r2, #0
 8787 072c 1A60     		str	r2, [r3]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8788              		.loc 1 3653 2 is_stmt 1 view .LVU2692
 8789 072e F2E7     		b	.L1098
 8790              	.L775:
3447:src/keys.c    **** 	      DispMsg = TraceBuffer;
 8791              		.loc 1 3447 8 view .LVU2693
 8792 0730 6C4E     		ldr	r6, .L1422+20
 8793 0732 3146     		mov	r1, r6
 8794 0734 FFF7FEFF 		bl	prt
 8795              	.LVL751:
 8796 0738 2A46     		mov	r2, r5
 8797 073a 0146     		mov	r1, r0
 8798 073c 3046     		mov	r0, r6
 8799 073e FFF7FEFF 		bl	scopy_char
 8800              	.LVL752:
3448:src/keys.c    **** 	    }
 8801              		.loc 1 3448 8 view .LVU2694
3448:src/keys.c    **** 	    }
 8802              		.loc 1 3448 16 is_stmt 0 view .LVU2695
 8803 0742 694B     		ldr	r3, .L1422+24
 8804 0744 1E60     		str	r6, [r3]
 8805 0746 F7E4     		b	.L776
 8806              	.LVL753:
 8807              	.L1335:
 8808              	.LBB1507:
 8809              	.LBB1439:
3280:src/keys.c    **** 
 8810              		.loc 1 3280 3 is_stmt 1 view .LVU2696
 8811              	.LBB1099:
 8812              	.LBI1099:
2882:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8813              		.loc 1 2882 12 view .LVU2697
 8814              	.LBB1100:
2884:src/keys.c    **** #ifdef DM42
 8815              		.loc 1 2884 2 view .LVU2698
 8816 0748 E3B2     		uxtb	r3, r4
 8817 074a 0E3B     		subs	r3, r3, #14
 8818 074c 192B     		cmp	r3, #25
 8819 074e 20D8     		bhi	.L1321
 8820 0750 DFE803F0 		tbb	[pc, r3]
 8821              	.L822:
 8822 0754 24       		.byte	(.L823-.L822)/2
 8823 0755 1F       		.byte	(.L1321-.L822)/2
 8824 0756 24       		.byte	(.L823-.L822)/2
 8825 0757 1F       		.byte	(.L1321-.L822)/2
 8826 0758 1F       		.byte	(.L1321-.L822)/2
 8827 0759 1F       		.byte	(.L1321-.L822)/2
 8828 075a 1F       		.byte	(.L1321-.L822)/2
 8829 075b 1F       		.byte	(.L1321-.L822)/2
 8830 075c 1F       		.byte	(.L1321-.L822)/2
 8831 075d 1F       		.byte	(.L1321-.L822)/2
ARM GAS  /tmp/ccF3vcso.s 			page 264


 8832 075e 1F       		.byte	(.L1321-.L822)/2
 8833 075f 1F       		.byte	(.L1321-.L822)/2
 8834 0760 1F       		.byte	(.L1321-.L822)/2
 8835 0761 1F       		.byte	(.L1321-.L822)/2
 8836 0762 1F       		.byte	(.L1321-.L822)/2
 8837 0763 1F       		.byte	(.L1321-.L822)/2
 8838 0764 1F       		.byte	(.L1321-.L822)/2
 8839 0765 1F       		.byte	(.L1321-.L822)/2
 8840 0766 30       		.byte	(.L821-.L822)/2
 8841 0767 1F       		.byte	(.L1321-.L822)/2
 8842 0768 1F       		.byte	(.L1321-.L822)/2
 8843 0769 1F       		.byte	(.L1321-.L822)/2
 8844 076a 1F       		.byte	(.L1321-.L822)/2
 8845 076b 1F       		.byte	(.L1321-.L822)/2
 8846 076c 1F       		.byte	(.L1321-.L822)/2
 8847 076d 30       		.byte	(.L821-.L822)/2
 8848              	.LVL754:
 8849              		.p2align 1
 8850              	.L927:
2884:src/keys.c    **** #ifdef DM42
 8851              		.loc 1 2884 2 is_stmt 0 view .LVU2699
 8852              	.LBE1100:
 8853              	.LBE1099:
 8854              	.LBB1103:
 8855              	.LBB1104:
2847:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 8856              		.loc 1 2847 3 is_stmt 1 view .LVU2700
2847:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 8857              		.loc 1 2847 6 is_stmt 0 view .LVU2701
 8858 076e 0129     		cmp	r1, #1
 8859 0770 01F09381 		beq	.L1364
2850:src/keys.c    **** 		return STATE_UNFINISHED;
 8860              		.loc 1 2850 4 is_stmt 1 view .LVU2702
 8861              	.LBB1105:
 8862              	.LBI1105:
2804:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 8863              		.loc 1 2804 13 view .LVU2703
 8864              	.LBB1106:
2806:src/keys.c    **** 	if (! State2.alphas )
 8865              		.loc 1 2806 2 view .LVU2704
2806:src/keys.c    **** 	if (! State2.alphas )
 8866              		.loc 1 2806 15 is_stmt 0 view .LVU2705
 8867 0774 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2807:src/keys.c    **** 		State2.alphashift = 0;
 8868              		.loc 1 2807 6 view .LVU2706
 8869 0778 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2806:src/keys.c    **** 	if (! State2.alphas )
 8870              		.loc 1 2806 15 view .LVU2707
 8871 077c 60F3C302 		bfi	r2, r0, #3, #1
 8872 0780 88F81520 		strb	r2, [r8, #21]
2807:src/keys.c    **** 		State2.alphashift = 0;
 8873              		.loc 1 2807 2 is_stmt 1 view .LVU2708
2807:src/keys.c    **** 		State2.alphashift = 0;
 8874              		.loc 1 2807 5 is_stmt 0 view .LVU2709
 8875 0784 13F00802 		ands	r2, r3, #8
 8876 0788 03D1     		bne	.L1321
 8877              	.LVL755:
ARM GAS  /tmp/ccF3vcso.s 			page 265


 8878              	.L936:
2808:src/keys.c    **** }
 8879              		.loc 1 2808 3 is_stmt 1 view .LVU2710
2808:src/keys.c    **** }
 8880              		.loc 1 2808 21 is_stmt 0 view .LVU2711
 8881 078a 62F30413 		bfi	r3, r2, #4, #1
 8882 078e 88F81630 		strb	r3, [r8, #22]
 8883              	.LVL756:
 8884              	.L1321:
2808:src/keys.c    **** }
 8885              		.loc 1 2808 21 view .LVU2712
 8886 0792 3368     		ldr	r3, [r6]
 8887              	.LBE1106:
 8888              	.LBE1105:
2851:src/keys.c    **** 
 8889              		.loc 1 2851 10 view .LVU2713
 8890 0794 3324     		movs	r4, #51
 8891 0796 90E4     		b	.L796
 8892              	.LVL757:
 8893              	.L824:
2851:src/keys.c    **** 
 8894              		.loc 1 2851 10 view .LVU2714
 8895              	.LBE1104:
 8896              	.LBE1103:
 8897              	.LBB1143:
 8898              	.LBB1101:
2893:src/keys.c    **** 	  }
 8899              		.loc 1 2893 26 is_stmt 1 view .LVU2715
 8900 0798 FFF7FEFF 		bl	clpall
 8901              	.LVL758:
2893:src/keys.c    **** 	  }
 8902              		.loc 1 2893 36 view .LVU2716
 8903              	.L823:
2902:src/keys.c    **** 	  State2.digval = 0;
 8904              		.loc 1 2902 4 view .LVU2717
2902:src/keys.c    **** 	  State2.digval = 0;
 8905              		.loc 1 2902 19 is_stmt 0 view .LVU2718
 8906 079c 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8907 07a0 3368     		ldr	r3, [r6]
 8908 07a2 6FF30202 		bfc	r2, #0, #3
2903:src/keys.c    **** 	  break;
 8909              		.loc 1 2903 18 view .LVU2719
 8910 07a6 0021     		movs	r1, #0
2902:src/keys.c    **** 	  State2.digval = 0;
 8911              		.loc 1 2902 19 view .LVU2720
 8912 07a8 88F81420 		strb	r2, [r8, #20]
2903:src/keys.c    **** 	  break;
 8913              		.loc 1 2903 4 is_stmt 1 view .LVU2721
2903:src/keys.c    **** 	  break;
 8914              		.loc 1 2903 18 is_stmt 0 view .LVU2722
 8915 07ac A8F80810 		strh	r1, [r8, #8]	@ movhi
2904:src/keys.c    **** 	default:			// No state change
 8916              		.loc 1 2904 4 is_stmt 1 view .LVU2723
 8917              	.LBE1101:
 8918              	.LBE1143:
3280:src/keys.c    **** 
 8919              		.loc 1 3280 10 is_stmt 0 view .LVU2724
ARM GAS  /tmp/ccF3vcso.s 			page 266


 8920 07b0 3324     		movs	r4, #51
 8921              	.LVL759:
 8922              	.LBB1144:
 8923              	.LBB1102:
2904:src/keys.c    **** 	default:			// No state change
 8924              		.loc 1 2904 4 view .LVU2725
 8925 07b2 82E4     		b	.L796
 8926              	.LVL760:
 8927              	.L821:
2889:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8928              		.loc 1 2889 4 is_stmt 1 view .LVU2726
2889:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8929              		.loc 1 2889 18 is_stmt 0 view .LVU2727
 8930 07b4 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8931 07b8 03F00703 		and	r3, r3, #7
 8932 07bc 013B     		subs	r3, r3, #1
 8933 07be 032B     		cmp	r3, #3
 8934 07c0 ECD8     		bhi	.L823
 8935 07c2 01A2     		adr	r2, .L825
 8936 07c4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8937              		.p2align 2
 8938              	.L825:
 8939 07c8 E5070000 		.word	.L828+1
 8940 07cc DF070000 		.word	.L827+1
 8941 07d0 D9070000 		.word	.L826+1
 8942 07d4 99070000 		.word	.L824+1
 8943              		.p2align 1
 8944              	.L826:
2892:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8945              		.loc 1 2892 26 is_stmt 1 view .LVU2728
 8946 07d8 FFF7FEFF 		bl	clrprog
 8947              	.LVL761:
2892:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8948              		.loc 1 2892 37 view .LVU2729
2892:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8949              		.loc 1 2892 4 is_stmt 0 view .LVU2730
 8950 07dc DEE7     		b	.L823
 8951              	.L827:
2891:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8952              		.loc 1 2891 25 is_stmt 1 view .LVU2731
 8953 07de FFF7FEFF 		bl	reset
 8954              	.LVL762:
2891:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8955              		.loc 1 2891 34 view .LVU2732
2891:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8956              		.loc 1 2891 4 is_stmt 0 view .LVU2733
 8957 07e2 DBE7     		b	.L823
 8958              	.L828:
2890:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8959              		.loc 1 2890 25 is_stmt 1 view .LVU2734
 8960 07e4 FFF7FEFF 		bl	clrall
 8961              	.LVL763:
2890:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8962              		.loc 1 2890 35 view .LVU2735
2890:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8963              		.loc 1 2890 4 is_stmt 0 view .LVU2736
 8964 07e8 D8E7     		b	.L823
ARM GAS  /tmp/ccF3vcso.s 			page 267


 8965              	.LVL764:
 8966              	.L1086:
2890:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8967              		.loc 1 2890 4 view .LVU2737
 8968              	.LBE1102:
 8969              	.LBE1144:
 8970              	.LBE1439:
 8971              	.LBE1507:
 8972              	.LBB1508:
3588:src/keys.c    **** 	  c = nd_opcode;
 8973              		.loc 1 3588 7 is_stmt 1 view .LVU2738
3588:src/keys.c    **** 	  c = nd_opcode;
 8974              		.loc 1 3588 10 is_stmt 0 view .LVU2739
 8975 07ea 15F0FF0F 		tst	r5, #255
 8976 07ee 7FF48DAE 		bne	.L1089
3592:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8977              		.loc 1 3592 4 is_stmt 1 view .LVU2740
 8978              	.LVL765:
 8979              	.LBB1482:
 8980              	.LBI1482:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8981              		.loc 1 552 13 view .LVU2741
 8982              	.LBB1483:
 553:src/keys.c    **** 		return;
 8983              		.loc 1 553 2 view .LVU2742
 553:src/keys.c    **** 		return;
 8984              		.loc 1 553 6 is_stmt 0 view .LVU2743
 8985 07f2 FFF7FEFF 		bl	is_bad_cmdline
 8986              	.LVL766:
 553:src/keys.c    **** 		return;
 8987              		.loc 1 553 5 view .LVU2744
 8988 07f6 0546     		mov	r5, r0
 8989 07f8 0028     		cmp	r0, #0
 8990 07fa 40F0CF82 		bne	.L1365
 8991 07fe 2046     		mov	r0, r4
 8992 0800 FFF7FEFF 		bl	init_arg.part.0
 8993              	.LVL767:
 8994              	.LBE1483:
 8995              	.LBE1482:
3593:src/keys.c    **** 	}
 8996              		.loc 1 3593 6 view .LVU2745
 8997 0804 3324     		movs	r4, #51
 8998              	.LVL768:
3593:src/keys.c    **** 	}
 8999              		.loc 1 3593 6 view .LVU2746
 9000 0806 3368     		ldr	r3, [r6]
 9001 0808 57E4     		b	.L796
 9002              	.LVL769:
 9003              	.L1333:
3593:src/keys.c    **** 	}
 9004              		.loc 1 3593 6 view .LVU2747
 9005              	.LBE1508:
 9006              	.LBB1509:
 9007              	.LBB1440:
3247:src/keys.c    **** #else
 9008              		.loc 1 3247 47 view .LVU2748
 9009 080a DFF8F080 		ldr	r8, .L1422+44
ARM GAS  /tmp/ccF3vcso.s 			page 268


 9010 080e 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
3247:src/keys.c    **** #else
 9011              		.loc 1 3247 36 view .LVU2749
 9012 0812 43EA0201 		orr	r1, r3, r2
 9013 0816 11F0FF0F 		tst	r1, #255
 9014 081a 7FF4C7AC 		bne	.L808
3247:src/keys.c    **** #else
 9015              		.loc 1 3247 76 view .LVU2750
 9016 081e 3349     		ldr	r1, .L1422+28
 9017 0820 D8F81420 		ldr	r2, [r8, #20]
 9018 0824 1142     		tst	r1, r2
 9019 0826 7FF4CCAC 		bne	.L818
3253:src/keys.c    **** 	stack_restore();
 9020              		.loc 1 3253 7 is_stmt 1 view .LVU2751
3253:src/keys.c    **** 	stack_restore();
 9021              		.loc 1 3253 11 is_stmt 0 view .LVU2752
 9022 082a DFF8CCB0 		ldr	fp, .L1422+40
 9023 082e DBF80030 		ldr	r3, [fp]
 9024              	.LVL770:
3253:src/keys.c    **** 	stack_restore();
 9025              		.loc 1 3253 11 view .LVU2753
 9026 0832 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3253:src/keys.c    **** 	stack_restore();
 9027              		.loc 1 3253 10 view .LVU2754
 9028 0836 03F04102 		and	r2, r3, #65
 9029 083a 412A     		cmp	r2, #65
 9030 083c 00F07286 		beq	.L1366
 9031              	.LVL771:
 9032              	.L810:
3259:src/keys.c    ****       return STATE_UNFINISHED;
 9033              		.loc 1 3259 7 is_stmt 1 view .LVU2755
 9034 0840 FFF7FEFF 		bl	soft_init_state
 9035              	.LVL772:
3260:src/keys.c    ****     }
 9036              		.loc 1 3260 7 view .LVU2756
3260:src/keys.c    ****     }
 9037              		.loc 1 3260 14 is_stmt 0 view .LVU2757
 9038 0844 3324     		movs	r4, #51
 9039 0846 3368     		ldr	r3, [r6]
 9040 0848 37E4     		b	.L796
 9041              	.LVL773:
 9042              	.L1336:
3283:src/keys.c    **** 
 9043              		.loc 1 3283 3 is_stmt 1 view .LVU2758
3283:src/keys.c    **** 
 9044              		.loc 1 3283 10 is_stmt 0 view .LVU2759
 9045 084a E0B2     		uxtb	r0, r4
 9046 084c FFF7FEFF 		bl	process_arg
 9047              	.LVL774:
 9048 0850 0446     		mov	r4, r0
 9049              	.LVL775:
3283:src/keys.c    **** 
 9050              		.loc 1 3283 10 view .LVU2760
 9051 0852 CBE5     		b	.L830
 9052              	.LVL776:
 9053              	.L1360:
3283:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 269


 9054              		.loc 1 3283 10 view .LVU2761
 9055              	.LBE1440:
 9056              	.LBE1509:
3549:src/keys.c    **** 	}
 9057              		.loc 1 3549 4 is_stmt 1 view .LVU2762
 9058              		.loc 1 3693 1 is_stmt 0 view .LVU2763
 9059 0854 03B0     		add	sp, sp, #12
 9060              		.cfi_remember_state
 9061              		.cfi_def_cfa_offset 36
 9062              		@ sp needed
 9063 0856 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9064              		.cfi_restore 14
 9065              		.cfi_restore 11
 9066              		.cfi_restore 10
 9067              		.cfi_restore 9
 9068              		.cfi_restore 8
 9069              		.cfi_restore 7
 9070              		.cfi_restore 6
 9071              		.cfi_restore 5
 9072              		.cfi_restore 4
 9073              		.cfi_def_cfa_offset 0
 9074              	.LVL777:
3549:src/keys.c    **** 	}
 9075              		.loc 1 3549 4 view .LVU2764
 9076 085a FFF7FEBF 		b	display
 9077              	.LVL778:
 9078              	.L1096:
 9079              		.cfi_restore_state
 9080              	.LBB1510:
3632:src/keys.c    ****       }
 9081              		.loc 1 3632 4 is_stmt 1 view .LVU2765
3632:src/keys.c    ****       }
 9082              		.loc 1 3632 9 is_stmt 0 view .LVU2766
 9083 085e 0025     		movs	r5, #0
 9084 0860 00F8015C 		strb	r5, [r0, #-1]
 9085 0864 38E6     		b	.L1320
 9086              	.LVL779:
 9087              	.L1339:
3632:src/keys.c    ****       }
 9088              		.loc 1 3632 9 view .LVU2767
 9089              	.LBE1510:
 9090              	.LBB1511:
 9091              	.LBB1441:
3292:src/keys.c    **** 
 9092              		.loc 1 3292 3 is_stmt 1 view .LVU2768
 9093              	.LBB1145:
 9094              	.LBI1145:
2348:src/keys.c    **** 	int r = State2.test;
 9095              		.loc 1 2348 12 view .LVU2769
 9096              	.LBB1146:
2349:src/keys.c    **** 	int cmpx = State2.cmplx;
 9097              		.loc 1 2349 2 view .LVU2770
2350:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9098              		.loc 1 2350 2 view .LVU2771
 9099              	.LBB1147:
 9100              	.LBB1148:
 9101              	.LBB1149:
ARM GAS  /tmp/ccF3vcso.s 			page 270


 9102              	.LBB1150:
 143:src/keys.c    **** }
 9103              		.loc 1 143 23 is_stmt 0 view .LVU2772
 9104 0866 224B     		ldr	r3, .L1422+32
 9105              	.LBE1150:
 9106              	.LBE1149:
 234:src/keys.c    **** }
 9107              		.loc 1 234 28 view .LVU2773
 9108 0868 DFF888C0 		ldr	ip, .L1422+36
 9109              	.LBB1154:
 9110              	.LBB1151:
 143:src/keys.c    **** }
 9111              		.loc 1 143 23 view .LVU2774
 9112 086c E4B2     		uxtb	r4, r4
 9113              	.LVL780:
 143:src/keys.c    **** }
 9114              		.loc 1 143 23 view .LVU2775
 9115              	.LBE1151:
 9116              	.LBE1154:
 9117              	.LBE1148:
 9118              	.LBE1147:
2352:src/keys.c    **** 
 9119              		.loc 1 2352 44 view .LVU2776
 9120 086e 11F0020F 		tst	r1, #2
 9121              	.LBB1159:
 9122              	.LBB1157:
 9123              	.LBB1155:
 9124              	.LBB1152:
 143:src/keys.c    **** }
 9125              		.loc 1 143 23 view .LVU2777
 9126 0872 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9127              	.LBE1152:
 9128              	.LBE1155:
 234:src/keys.c    **** }
 9129              		.loc 1 234 28 view .LVU2778
 9130 0874 1CF803C0 		ldrb	ip, [ip, r3]	@ zero_extendqisi2
 9131              	.LBE1157:
 9132              	.LBE1159:
2350:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9133              		.loc 1 2350 19 view .LVU2779
 9134 0878 C1F3400E 		ubfx	lr, r1, #1, #1
 9135              	.LVL781:
2351:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 9136              		.loc 1 2351 2 is_stmt 1 view .LVU2780
 9137              	.LBB1160:
 9138              	.LBI1147:
 210:src/keys.c    **** {
 9139              		.loc 1 210 14 view .LVU2781
 9140              	.LBB1158:
 212:src/keys.c    ****     // K00 - K05
 9141              		.loc 1 212 3 view .LVU2782
 234:src/keys.c    **** }
 9142              		.loc 1 234 3 view .LVU2783
 9143              	.LBB1156:
 9144              	.LBI1149:
 131:src/keys.c    **** {
 9145              		.loc 1 131 12 view .LVU2784
ARM GAS  /tmp/ccF3vcso.s 			page 271


 9146              	.LBB1153:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9147              		.loc 1 133 2 view .LVU2785
 143:src/keys.c    **** }
 9148              		.loc 1 143 2 view .LVU2786
 143:src/keys.c    **** }
 9149              		.loc 1 143 2 is_stmt 0 view .LVU2787
 9150              	.LBE1153:
 9151              	.LBE1156:
 9152              	.LBE1158:
 9153              	.LBE1160:
2351:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 9154              		.loc 1 2351 15 view .LVU2788
 9155 087c 2CF08003 		bic	r3, ip, #128
 9156              	.LVL782:
2352:src/keys.c    **** 
 9157              		.loc 1 2352 2 is_stmt 1 view .LVU2789
2352:src/keys.c    **** 
 9158              		.loc 1 2352 44 is_stmt 0 view .LVU2790
 9159 0880 00F0CD80 		beq	.L1367
 9160              	.LVL783:
2354:src/keys.c    **** 	State2.cmplx = 0;
 9161              		.loc 1 2354 2 is_stmt 1 view .LVU2791
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9162              		.loc 1 2355 15 is_stmt 0 view .LVU2792
 9163 0884 60F34101 		bfi	r1, r0, #1, #1
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9164              		.loc 1 2356 5 view .LVU2793
 9165 0888 642B     		cmp	r3, #100
2354:src/keys.c    **** 	State2.cmplx = 0;
 9166              		.loc 1 2354 14 view .LVU2794
 9167 088a 4FF00700 		mov	r0, #7
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9168              		.loc 1 2355 15 view .LVU2795
 9169 088e 88F81510 		strb	r1, [r8, #21]
2354:src/keys.c    **** 	State2.cmplx = 0;
 9170              		.loc 1 2354 14 view .LVU2796
 9171 0892 88F80F00 		strb	r0, [r8, #15]
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9172              		.loc 1 2355 2 is_stmt 1 view .LVU2797
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9173              		.loc 1 2356 2 view .LVU2798
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9174              		.loc 1 2356 5 is_stmt 0 view .LVU2799
 9175 0896 00F00485 		beq	.L1167
2352:src/keys.c    **** 
 9176              		.loc 1 2352 44 view .LVU2800
 9177 089a 4FF0340B 		mov	fp, #52
 9178              	.LVL784:
 9179              	.L1124:
2357:src/keys.c    **** 		// Lettered register
 9180              		.loc 1 2357 5 view .LVU2801
 9181 089e 7F2B     		cmp	r3, #127
2352:src/keys.c    **** 
 9182              		.loc 1 2352 60 view .LVU2802
 9183 08a0 D344     		add	fp, fp, r10
2357:src/keys.c    **** 		// Lettered register
ARM GAS  /tmp/ccF3vcso.s 			page 272


 9184              		.loc 1 2357 2 is_stmt 1 view .LVU2803
2357:src/keys.c    **** 		// Lettered register
 9185              		.loc 1 2357 5 is_stmt 0 view .LVU2804
 9186 08a2 00F03681 		beq	.L862
 9187              	.LVL785:
2357:src/keys.c    **** 		// Lettered register
 9188              		.loc 1 2357 18 view .LVU2805
 9189 08a6 632B     		cmp	r3, #99
 9190 08a8 40F25681 		bls	.L863
2357:src/keys.c    **** 		// Lettered register
 9191              		.loc 1 2357 37 view .LVU2806
 9192 08ac 6F2B     		cmp	r3, #111
 9193 08ae 00F23081 		bhi	.L862
2359:src/keys.c    **** 			if (n == regI_idx)
 9194              		.loc 1 2359 3 is_stmt 1 view .LVU2807
2359:src/keys.c    **** 			if (n == regI_idx)
 9195              		.loc 1 2359 6 is_stmt 0 view .LVU2808
 9196 08b2 BEF1000F 		cmp	lr, #0
 9197 08b6 00F0A182 		beq	.L864
2359:src/keys.c    **** 			if (n == regI_idx)
 9198              		.loc 1 2359 12 view .LVU2809
 9199 08ba 1CF0010F 		tst	ip, #1
 9200 08be 00F09D82 		beq	.L864
2360:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9201              		.loc 1 2360 4 is_stmt 1 view .LVU2810
2360:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9202              		.loc 1 2360 7 is_stmt 0 view .LVU2811
 9203 08c2 6D2B     		cmp	r3, #109
 9204 08c4 40F03481 		bne	.L865
2361:src/keys.c    **** 			// Disallow odd complex registers > A
 9205              		.loc 1 2361 5 is_stmt 1 view .LVU2812
2361:src/keys.c    **** 			// Disallow odd complex registers > A
 9206              		.loc 1 2361 30 is_stmt 0 view .LVU2813
 9207 08c8 0AF12904 		add	r4, r10, #41
 9208              	.LVL786:
2361:src/keys.c    **** 			// Disallow odd complex registers > A
 9209              		.loc 1 2361 30 view .LVU2814
 9210 08cc 8EE5     		b	.L830
 9211              	.L1423:
 9212 08ce 00BF     		.align	2
 9213              	.L1422:
 9214 08d0 00000000 		.word	NonProgrammable
 9215 08d4 00000000 		.word	OpCode
 9216 08d8 00000000 		.word	OpCodeDisplayPending
 9217 08dc 31020008 		.word	134218289
 9218 08e0 00000000 		.word	JustDisplayed
 9219 08e4 00000000 		.word	TraceBuffer
 9220 08e8 00000000 		.word	DispMsg
 9221 08ec 00040800 		.word	525312
 9222 08f0 00000000 		.word	.LANCHOR6
 9223 08f4 00000000 		.word	.LANCHOR5
 9224 08f8 00000000 		.word	main_ram
 9225 08fc 00000000 		.word	StateWhileOn
 9226              	.LVL787:
 9227              	.L1337:
2361:src/keys.c    **** 			// Disallow odd complex registers > A
 9228              		.loc 1 2361 30 view .LVU2815
ARM GAS  /tmp/ccF3vcso.s 			page 273


 9229              	.LBE1146:
 9230              	.LBE1145:
3286:src/keys.c    **** 
 9231              		.loc 1 3286 3 is_stmt 1 view .LVU2816
 9232              	.LBB1175:
 9233              	.LBI1175:
1710:src/keys.c    **** 	int pc = -1;
 9234              		.loc 1 1710 12 view .LVU2817
 9235              	.LBB1176:
1711:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 9236              		.loc 1 1711 2 view .LVU2818
1712:src/keys.c    **** 
 9237              		.loc 1 1712 2 view .LVU2819
 9238              	.LBB1177:
 9239              	.LBI1177:
 210:src/keys.c    **** {
 9240              		.loc 1 210 14 view .LVU2820
 9241              	.LBB1178:
 212:src/keys.c    ****     // K00 - K05
 9242              		.loc 1 212 3 view .LVU2821
 234:src/keys.c    **** }
 9243              		.loc 1 234 3 view .LVU2822
 9244              	.LBB1179:
 9245              	.LBI1179:
 131:src/keys.c    **** {
 9246              		.loc 1 131 12 view .LVU2823
 9247              	.LBB1180:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9248              		.loc 1 133 2 view .LVU2824
 143:src/keys.c    **** }
 9249              		.loc 1 143 2 view .LVU2825
 143:src/keys.c    **** }
 9250              		.loc 1 143 23 is_stmt 0 view .LVU2826
 9251 0900 DA4B     		ldr	r3, .L1424
 9252              	.LBE1180:
 9253              	.LBE1179:
 234:src/keys.c    **** }
 9254              		.loc 1 234 28 view .LVU2827
 9255 0902 DB4A     		ldr	r2, .L1424+4
 9256 0904 E1B2     		uxtb	r1, r4
 9257              	.LVL788:
 9258              	.LBB1182:
 9259              	.LBB1181:
 143:src/keys.c    **** }
 9260              		.loc 1 143 23 view .LVU2828
 9261 0906 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 9262              	.LBE1181:
 9263              	.LBE1182:
 234:src/keys.c    **** }
 9264              		.loc 1 234 28 view .LVU2829
 9265 0908 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 9266              	.LVL789:
 234:src/keys.c    **** }
 9267              		.loc 1 234 28 view .LVU2830
 9268              	.LBE1178:
 9269              	.LBE1177:
1714:src/keys.c    **** 		// Digit 0 - 9
ARM GAS  /tmp/ccF3vcso.s 			page 274


 9270              		.loc 1 1714 2 is_stmt 1 view .LVU2831
1714:src/keys.c    **** 		// Digit 0 - 9
 9271              		.loc 1 1714 5 is_stmt 0 view .LVU2832
 9272 090a 0928     		cmp	r0, #9
 9273 090c 40F21C81 		bls	.L1368
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9274              		.loc 1 1719 7 is_stmt 1 view .LVU2833
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9275              		.loc 1 1719 18 is_stmt 0 view .LVU2834
 9276 0910 20F08000 		bic	r0, r0, #128
 9277              	.LVL790:
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9278              		.loc 1 1719 10 view .LVU2835
 9279 0914 6428     		cmp	r0, #100
 9280 0916 00F06A82 		beq	.L1369
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 9281              		.loc 1 1720 7 is_stmt 1 view .LVU2836
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 9282              		.loc 1 1720 10 is_stmt 0 view .LVU2837
 9283 091a 6528     		cmp	r0, #101
 9284 091c 00F07582 		beq	.L1370
1721:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 9285              		.loc 1 1721 7 is_stmt 1 view .LVU2838
1721:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 9286              		.loc 1 1721 10 is_stmt 0 view .LVU2839
 9287 0920 6628     		cmp	r0, #102
 9288 0922 00F08782 		beq	.L1371
1722:src/keys.c    **** #endif
 9289              		.loc 1 1722 7 is_stmt 1 view .LVU2840
1722:src/keys.c    **** #endif
 9290              		.loc 1 1722 10 is_stmt 0 view .LVU2841
 9291 0926 6728     		cmp	r0, #103
 9292 0928 00F0E283 		beq	.L1372
1724:src/keys.c    **** 		// A - D
 9293              		.loc 1 1724 7 is_stmt 1 view .LVU2842
1724:src/keys.c    **** 		// A - D
 9294              		.loc 1 1724 10 is_stmt 0 view .LVU2843
 9295 092c 0329     		cmp	r1, #3
 9296 092e 40F2BF84 		bls	.L1373
1729:src/keys.c    **** 		// .
 9297              		.loc 1 1729 7 is_stmt 1 view .LVU2844
1729:src/keys.c    **** 		// .
 9298              		.loc 1 1729 10 is_stmt 0 view .LVU2845
 9299 0932 2629     		cmp	r1, #38
 9300 0934 00F0EE84 		beq	.L1374
1734:src/keys.c    **** 		// ENTER - short circuit processing
 9301              		.loc 1 1734 7 is_stmt 1 view .LVU2846
1734:src/keys.c    **** 		// ENTER - short circuit processing
 9302              		.loc 1 1734 10 is_stmt 0 view .LVU2847
 9303 0938 0C29     		cmp	r1, #12
 9304 093a 00F0B684 		beq	.L1375
1738:src/keys.c    **** 		// backspace
 9305              		.loc 1 1738 7 is_stmt 1 view .LVU2848
1738:src/keys.c    **** 		// backspace
 9306              		.loc 1 1738 10 is_stmt 0 view .LVU2849
 9307 093e 1029     		cmp	r1, #16
 9308 0940 00F0CA85 		beq	.L1376
ARM GAS  /tmp/ccF3vcso.s 			page 275


1747:src/keys.c    **** 		// up
 9309              		.loc 1 1747 7 is_stmt 1 view .LVU2850
1747:src/keys.c    **** 		// up
 9310              		.loc 1 1747 10 is_stmt 0 view .LVU2851
 9311 0944 1229     		cmp	r1, #18
 9312 0946 00F00B87 		beq	.L1377
1757:src/keys.c    **** 		// down
 9313              		.loc 1 1757 7 is_stmt 1 view .LVU2852
1757:src/keys.c    **** 		// down
 9314              		.loc 1 1757 10 is_stmt 0 view .LVU2853
 9315 094a 1829     		cmp	r1, #24
 9316 094c 7FF421AF 		bne	.L1321
1759:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 9317              		.loc 1 1759 3 is_stmt 1 view .LVU2854
1760:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9318              		.loc 1 1760 18 is_stmt 0 view .LVU2855
 9319 0950 C84C     		ldr	r4, .L1424+8
 9320              	.LVL791:
1759:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 9321              		.loc 1 1759 3 view .LVU2856
 9322 0952 0120     		movs	r0, #1
 9323 0954 FFF7FEFF 		bl	update_program_bounds
 9324              	.LVL792:
1760:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9325              		.loc 1 1760 3 is_stmt 1 view .LVU2857
1760:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9326              		.loc 1 1760 18 is_stmt 0 view .LVU2858
 9327 0958 2368     		ldr	r3, [r4]
1760:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9328              		.loc 1 1760 11 view .LVU2859
 9329 095a 0021     		movs	r1, #0
 9330 095c B3F8EE07 		ldrh	r0, [r3, #2030]
 9331 0960 FFF7FEFF 		bl	do_inc
 9332              	.LVL793:
1761:src/keys.c    **** 			rawpc = 1;
 9333              		.loc 1 1761 3 is_stmt 1 view .LVU2860
1761:src/keys.c    **** 			rawpc = 1;
 9334              		.loc 1 1761 6 is_stmt 0 view .LVU2861
 9335 0964 20B9     		cbnz	r0, .L842
1761:src/keys.c    **** 			rawpc = 1;
 9336              		.loc 1 1761 21 view .LVU2862
 9337 0966 2368     		ldr	r3, [r4]
1761:src/keys.c    **** 			rawpc = 1;
 9338              		.loc 1 1761 18 view .LVU2863
 9339 0968 5888     		ldrh	r0, [r3, #2]
 9340              	.LVL794:
1761:src/keys.c    **** 			rawpc = 1;
 9341              		.loc 1 1761 18 view .LVU2864
 9342 096a 0038     		subs	r0, r0, #0
 9343 096c 18BF     		it	ne
 9344 096e 0120     		movne	r0, #1
 9345              	.LVL795:
 9346              	.L842:
1767:src/keys.c    **** fin2:		State2.gtodot = 0;
 9347              		.loc 1 1767 7 is_stmt 1 view .LVU2865
 9348 0970 FFF7FEFF 		bl	set_pc
 9349              	.LVL796:
ARM GAS  /tmp/ccF3vcso.s 			page 276


 9350              	.L846:
1768:src/keys.c    **** 		State2.digval = 0;
 9351              		.loc 1 1768 8 view .LVU2866
1768:src/keys.c    **** 		State2.digval = 0;
 9352              		.loc 1 1768 22 is_stmt 0 view .LVU2867
 9353 0974 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9354 0978 3368     		ldr	r3, [r6]
1769:src/keys.c    **** 		State2.numdigit = 0;
 9355              		.loc 1 1769 17 view .LVU2868
 9356 097a 0022     		movs	r2, #0
1768:src/keys.c    **** 		State2.digval = 0;
 9357              		.loc 1 1768 22 view .LVU2869
 9358 097c 6FF30001 		bfc	r1, #0, #1
 9359 0980 88F81510 		strb	r1, [r8, #21]
1769:src/keys.c    **** 		State2.numdigit = 0;
 9360              		.loc 1 1769 3 is_stmt 1 view .LVU2870
1769:src/keys.c    **** 		State2.numdigit = 0;
 9361              		.loc 1 1769 17 is_stmt 0 view .LVU2871
 9362 0984 A8F80820 		strh	r2, [r8, #8]	@ movhi
1770:src/keys.c    **** 	}
 9363              		.loc 1 1770 3 is_stmt 1 view .LVU2872
1770:src/keys.c    **** 	}
 9364              		.loc 1 1770 19 is_stmt 0 view .LVU2873
 9365 0988 88F80B20 		strb	r2, [r8, #11]
 9366              	.LBE1176:
 9367              	.LBE1175:
3286:src/keys.c    **** 
 9368              		.loc 1 3286 10 view .LVU2874
 9369 098c 3324     		movs	r4, #51
 9370 098e FFF794BB 		b	.L796
 9371              	.LVL797:
 9372              	.L1165:
3286:src/keys.c    **** 
 9373              		.loc 1 3286 10 view .LVU2875
 9374              	.LBE1441:
 9375              	.LBE1511:
 9376              	.LBB1512:
 9377 0992 1C46     		mov	r4, r3
 9378              	.LVL798:
3286:src/keys.c    **** 
 9379              		.loc 1 3286 10 view .LVU2876
 9380 0994 FFF7AFBB 		b	.L1106
 9381              	.LVL799:
 9382              	.L1338:
3286:src/keys.c    **** 
 9383              		.loc 1 3286 10 view .LVU2877
 9384              	.LBE1512:
 9385              	.LBB1513:
 9386              	.LBB1442:
3289:src/keys.c    **** 
 9387              		.loc 1 3289 3 is_stmt 1 view .LVU2878
 9388              	.LBB1195:
 9389              	.LBB1196:
1600:src/keys.c    **** 	State2.dot = 0;
 9390              		.loc 1 1600 15 is_stmt 0 view .LVU2879
 9391 0998 21F06203 		bic	r3, r1, #98
 9392              	.LBE1196:
ARM GAS  /tmp/ccF3vcso.s 			page 277


 9393              	.LBE1195:
3289:src/keys.c    **** 
 9394              		.loc 1 3289 10 view .LVU2880
 9395 099c E4B2     		uxtb	r4, r4
 9396              	.LVL800:
 9397              	.LBB1209:
 9398              	.LBI1195:
1590:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 9399              		.loc 1 1590 12 is_stmt 1 view .LVU2881
 9400              	.LBB1206:
1591:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 9401              		.loc 1 1591 2 view .LVU2882
1596:src/keys.c    **** 	int f = State2.dot;
 9402              		.loc 1 1596 2 view .LVU2883
1600:src/keys.c    **** 	State2.dot = 0;
 9403              		.loc 1 1600 15 is_stmt 0 view .LVU2884
 9404 099e 88F81530 		strb	r3, [r8, #21]
1596:src/keys.c    **** 	int f = State2.dot;
 9405              		.loc 1 1596 20 view .LVU2885
 9406 09a2 C1F34009 		ubfx	r9, r1, #1, #1
 9407              	.LVL801:
1597:src/keys.c    **** 
 9408              		.loc 1 1597 2 is_stmt 1 view .LVU2886
1597:src/keys.c    **** 
 9409              		.loc 1 1597 16 is_stmt 0 view .LVU2887
 9410 09a6 C1F3801B 		ubfx	fp, r1, #6, #1
 9411              	.LVL802:
1599:src/keys.c    **** 	State2.cmplx = 0;
 9412              		.loc 1 1599 2 is_stmt 1 view .LVU2888
1600:src/keys.c    **** 	State2.dot = 0;
 9413              		.loc 1 1600 2 view .LVU2889
1601:src/keys.c    **** #ifdef DM42
 9414              		.loc 1 1601 2 view .LVU2890
1603:src/keys.c    **** #endif
 9415              		.loc 1 1603 2 view .LVU2891
 9416              	.LBB1197:
 9417              	.LBI1197:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9418              		.loc 1 114 13 view .LVU2892
 9419              	.LBE1197:
 9420              	.LBE1206:
 9421              	.LBE1209:
 9422              	.LBE1442:
 9423              	.LBE1513:
 115:src/keys.c    **** }
 9424              		.loc 1 115 2 view .LVU2893
 9425              	.LBB1514:
 9426              	.LBB1443:
 9427              	.LBB1210:
 9428              	.LBB1207:
 9429              	.LBB1204:
 9430              	.LBB1198:
 9431              	.LBI1198:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9432              		.loc 1 104 20 view .LVU2894
 9433              	.LBB1199:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccF3vcso.s 			page 278


 9434              		.loc 1 105 2 view .LVU2895
 9435              	.LBB1200:
 9436              	.LBI1200:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9437              		.loc 1 96 13 view .LVU2896
 9438              	.LBB1201:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9439              		.loc 1 97 2 view .LVU2897
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9440              		.loc 1 97 18 is_stmt 0 view .LVU2898
 9441 09aa FFF7FEFF 		bl	shift_down
 9442              	.LVL803:
  98:src/keys.c    **** }
 9443              		.loc 1 98 2 is_stmt 1 view .LVU2899
 9444              	.LBE1201:
 9445              	.LBE1200:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9446              		.loc 1 106 2 view .LVU2900
 9447              	.LBE1199:
 9448              	.LBE1198:
 9449              	.LBE1204:
1605:src/keys.c    **** 
 9450              		.loc 1 1605 2 is_stmt 0 view .LVU2901
 9451 09ae 292C     		cmp	r4, #41
 9452              	.LBB1205:
 9453              	.LBB1203:
 9454              	.LBB1202:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9455              		.loc 1 106 16 view .LVU2902
 9456 09b0 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 9457              		.loc 1 108 2 is_stmt 1 view .LVU2903
 9458              	.LVL804:
 108:src/keys.c    **** }
 9459              		.loc 1 108 2 is_stmt 0 view .LVU2904
 9460              	.LBE1202:
 9461              	.LBE1203:
 9462              	.LBE1205:
1605:src/keys.c    **** 
 9463              		.loc 1 1605 2 is_stmt 1 view .LVU2905
 9464 09b4 00F05C84 		beq	.L851
 9465 09b8 15D8     		bhi	.L852
 9466 09ba 013C     		subs	r4, r4, #1
 9467              	.LVL805:
1605:src/keys.c    **** 
 9468              		.loc 1 1605 2 is_stmt 0 view .LVU2906
 9469 09bc E3B2     		uxtb	r3, r4
 9470 09be 022B     		cmp	r3, #2
 9471 09c0 3FF6E7AE 		bhi	.L1321
1610:src/keys.c    **** 
 9472              		.loc 1 1610 3 is_stmt 1 view .LVU2907
1610:src/keys.c    **** 
 9473              		.loc 1 1610 54 is_stmt 0 view .LVU2908
 9474 09c4 AC4B     		ldr	r3, .L1424+12
 9475 09c6 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 9476 09ca 03EB4404 		add	r4, r3, r4, lsl #1
 9477              	.LVL806:
ARM GAS  /tmp/ccF3vcso.s 			page 279


1610:src/keys.c    **** 
 9478              		.loc 1 1610 27 view .LVU2909
 9479 09ce B9F1000F 		cmp	r9, #0
1610:src/keys.c    **** 
 9480              		.loc 1 1610 54 view .LVU2910
 9481 09d2 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1610:src/keys.c    **** 
 9482              		.loc 1 1610 27 view .LVU2911
 9483 09d6 14BF     		ite	ne
 9484 09d8 4FF4A063 		movne	r3, #1280
 9485 09dc 4FF40073 		moveq	r3, #512
1610:src/keys.c    **** 
 9486              		.loc 1 1610 37 view .LVU2912
 9487 09e0 1C43     		orrs	r4, r4, r3
 9488 09e2 2546     		mov	r5, r4
 9489 09e4 95E5     		b	.L857
 9490              	.LVL807:
 9491              	.L852:
1605:src/keys.c    **** 
 9492              		.loc 1 1605 2 view .LVU2913
 9493 09e6 2D2C     		cmp	r4, #45
 9494 09e8 7FF4D3AE 		bne	.L1321
1613:src/keys.c    **** 		goto stay;
 9495              		.loc 1 1613 3 is_stmt 1 view .LVU2914
 9496 09ec 89F00109 		eor	r9, r9, #1
 9497              	.LVL808:
1614:src/keys.c    **** 
 9498              		.loc 1 1614 3 view .LVU2915
 9499              	.L858:
1629:src/keys.c    **** 		State2.cmplx = cmplx;
 9500              		.loc 1 1629 4 view .LVU2916
1630:src/keys.c    **** 		State2.dot = f;
 9501              		.loc 1 1630 3 view .LVU2917
1631:src/keys.c    **** 		break;
 9502              		.loc 1 1631 3 view .LVU2918
1630:src/keys.c    **** 		State2.dot = f;
 9503              		.loc 1 1630 16 is_stmt 0 view .LVU2919
 9504 09f0 4FEA4902 		lsl	r2, r9, #1
 9505 09f4 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9506 09f8 3368     		ldr	r3, [r6]
 9507 09fa 42F02002 		orr	r2, r2, #32
 9508 09fe 42EA8B12 		orr	r2, r2, fp, lsl #6
 9509 0a02 02F06202 		and	r2, r2, #98
 9510 0a06 21F06201 		bic	r1, r1, #98
 9511 0a0a 0A43     		orrs	r2, r2, r1
 9512 0a0c 88F81520 		strb	r2, [r8, #21]
1632:src/keys.c    **** 
 9513              		.loc 1 1632 3 is_stmt 1 view .LVU2920
1637:src/keys.c    **** }
 9514              		.loc 1 1637 9 is_stmt 0 view .LVU2921
 9515 0a10 3324     		movs	r4, #51
 9516              	.LVL809:
1632:src/keys.c    **** 
 9517              		.loc 1 1632 3 view .LVU2922
 9518 0a12 FFF752BB 		b	.L796
 9519              	.LVL810:
 9520              	.L1334:
ARM GAS  /tmp/ccF3vcso.s 			page 280


1632:src/keys.c    **** 
 9521              		.loc 1 1632 3 view .LVU2923
 9522              	.LBE1207:
 9523              	.LBE1210:
3266:src/keys.c    **** 		return STATE_IGNORE;
 9524              		.loc 1 3266 3 is_stmt 1 view .LVU2924
3266:src/keys.c    **** 		return STATE_IGNORE;
 9525              		.loc 1 3266 15 is_stmt 0 view .LVU2925
 9526 0a16 1560     		str	r5, [r2]
3267:src/keys.c    **** 	}
 9527              		.loc 1 3267 3 is_stmt 1 view .LVU2926
 9528              	.LVL811:
3267:src/keys.c    **** 	}
 9529              		.loc 1 3267 3 is_stmt 0 view .LVU2927
 9530              	.LBE1443:
 9531              	.LBE1514:
3678:src/keys.c    **** #ifndef CONSOLE
 9532              		.loc 1 3678 3 is_stmt 1 view .LVU2928
 9533              	.LBB1515:
 9534              	.LBB1444:
3267:src/keys.c    **** 	}
 9535              		.loc 1 3267 10 is_stmt 0 view .LVU2929
 9536 0a18 3224     		movs	r4, #50
 9537 0a1a FFF751BB 		b	.L816
 9538              	.LVL812:
 9539              	.L1367:
 9540              	.LBB1211:
 9541              	.LBB1165:
2354:src/keys.c    **** 	State2.cmplx = 0;
 9542              		.loc 1 2354 2 is_stmt 1 view .LVU2930
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9543              		.loc 1 2355 15 is_stmt 0 view .LVU2931
 9544 0a1e 6EF34101 		bfi	r1, lr, #1, #1
2354:src/keys.c    **** 	State2.cmplx = 0;
 9545              		.loc 1 2354 14 view .LVU2932
 9546 0a22 0720     		movs	r0, #7
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9547              		.loc 1 2356 5 view .LVU2933
 9548 0a24 642B     		cmp	r3, #100
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9549              		.loc 1 2355 15 view .LVU2934
 9550 0a26 88F81510 		strb	r1, [r8, #21]
2354:src/keys.c    **** 	State2.cmplx = 0;
 9551              		.loc 1 2354 14 view .LVU2935
 9552 0a2a 88F80F00 		strb	r0, [r8, #15]
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9553              		.loc 1 2355 2 is_stmt 1 view .LVU2936
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9554              		.loc 1 2356 2 view .LVU2937
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9555              		.loc 1 2356 5 is_stmt 0 view .LVU2938
 9556 0a2e 00F05684 		beq	.L1168
2352:src/keys.c    **** 
 9557              		.loc 1 2352 44 view .LVU2939
 9558 0a32 4FF02D0B 		mov	fp, #45
 9559 0a36 32E7     		b	.L1124
 9560              	.LVL813:
ARM GAS  /tmp/ccF3vcso.s 			page 281


 9561              	.L1166:
2352:src/keys.c    **** 
 9562              		.loc 1 2352 44 view .LVU2940
 9563              	.LBE1165:
 9564              	.LBE1211:
 9565              	.LBE1444:
 9566              	.LBE1515:
 9567              	.LBB1516:
 9568 0a38 2C46     		mov	r4, r5
 9569              	.LVL814:
2352:src/keys.c    **** 
 9570              		.loc 1 2352 44 view .LVU2941
 9571 0a3a FFF75CBB 		b	.L1106
 9572              	.LVL815:
 9573              	.L1340:
2352:src/keys.c    **** 
 9574              		.loc 1 2352 44 view .LVU2942
 9575              	.LBE1516:
 9576              	.LBB1517:
 9577              	.LBB1445:
3295:src/keys.c    **** 
 9578              		.loc 1 3295 3 is_stmt 1 view .LVU2943
 9579              	.LBB1212:
 9580              	.LBB1213:
2917:src/keys.c    **** 
 9581              		.loc 1 2917 12 is_stmt 0 view .LVU2944
 9582 0a3e 8D4B     		ldr	r3, .L1424+8
 9583 0a40 1B68     		ldr	r3, [r3]
 9584 0a42 B3F8DE37 		ldrh	r3, [r3, #2014]
 9585              	.LBE1213:
 9586              	.LBE1212:
3295:src/keys.c    **** 
 9587              		.loc 1 3295 10 view .LVU2945
 9588 0a46 E4B2     		uxtb	r4, r4
 9589              	.LVL816:
 9590              	.LBB1232:
 9591              	.LBI1212:
2915:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9592              		.loc 1 2915 12 is_stmt 1 view .LVU2946
 9593              	.LBB1224:
2916:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9594              		.loc 1 2916 2 view .LVU2947
2917:src/keys.c    **** 
 9595              		.loc 1 2917 2 view .LVU2948
2917:src/keys.c    **** 
 9596              		.loc 1 2917 31 is_stmt 0 view .LVU2949
 9597 0a48 13F4004F 		tst	r3, #32768
 9598 0a4c 14BF     		ite	ne
 9599 0a4e 0B23     		movne	r3, #11
 9600 0a50 0A23     		moveq	r3, #10
 9601              	.LVL817:
2919:src/keys.c    **** 		if (--n < -2)
 9602              		.loc 1 2919 2 is_stmt 1 view .LVU2950
2919:src/keys.c    **** 		if (--n < -2)
 9603              		.loc 1 2919 5 is_stmt 0 view .LVU2951
 9604 0a52 122C     		cmp	r4, #18
 9605 0a54 00F0B681 		beq	.L1378
ARM GAS  /tmp/ccF3vcso.s 			page 282


2923:src/keys.c    **** 		if (++n > max)
 9606              		.loc 1 2923 7 is_stmt 1 view .LVU2952
2923:src/keys.c    **** 		if (++n > max)
 9607              		.loc 1 2923 10 is_stmt 0 view .LVU2953
 9608 0a58 182C     		cmp	r4, #24
 9609 0a5a 00F0DD81 		beq	.L1379
2927:src/keys.c    **** 		State2.status = 0;
 9610              		.loc 1 2927 7 is_stmt 1 view .LVU2954
2927:src/keys.c    **** 		State2.status = 0;
 9611              		.loc 1 2927 10 is_stmt 0 view .LVU2955
 9612 0a5e 102C     		cmp	r4, #16
 9613 0a60 00F05284 		beq	.L1380
 9614              	.LBB1214:
2932:src/keys.c    **** 		if (nn <= 9)
 9615              		.loc 1 2932 3 is_stmt 1 view .LVU2956
 9616              	.LVL818:
 9617              	.LBB1215:
 9618              	.LBI1215:
 210:src/keys.c    **** {
 9619              		.loc 1 210 14 view .LVU2957
 9620              	.LBB1216:
 212:src/keys.c    ****     // K00 - K05
 9621              		.loc 1 212 3 view .LVU2958
 234:src/keys.c    **** }
 9622              		.loc 1 234 3 view .LVU2959
 9623              	.LBB1217:
 9624              	.LBI1217:
 131:src/keys.c    **** {
 9625              		.loc 1 131 12 view .LVU2960
 9626              	.LBB1218:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9627              		.loc 1 133 2 view .LVU2961
 143:src/keys.c    **** }
 9628              		.loc 1 143 2 view .LVU2962
 143:src/keys.c    **** }
 9629              		.loc 1 143 23 is_stmt 0 view .LVU2963
 9630 0a64 8149     		ldr	r1, .L1424
 9631              	.LBE1218:
 9632              	.LBE1217:
 234:src/keys.c    **** }
 9633              		.loc 1 234 28 view .LVU2964
 9634 0a66 8248     		ldr	r0, .L1424+4
 9635              	.LBB1220:
 9636              	.LBB1219:
 143:src/keys.c    **** }
 9637              		.loc 1 143 23 view .LVU2965
 9638 0a68 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9639 0a6a 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 9640 0a6c 01F07F01 		and	r1, r1, #127
 9641              	.LVL819:
 143:src/keys.c    **** }
 9642              		.loc 1 143 23 view .LVU2966
 9643              	.LBE1219:
 9644              	.LBE1220:
 9645              	.LBE1216:
 9646              	.LBE1215:
2933:src/keys.c    **** 			n = nn;
ARM GAS  /tmp/ccF3vcso.s 			page 283


 9647              		.loc 1 2933 3 is_stmt 1 view .LVU2967
2933:src/keys.c    **** 			n = nn;
 9648              		.loc 1 2933 6 is_stmt 0 view .LVU2968
 9649 0a70 0929     		cmp	r1, #9
 9650 0a72 40F2B882 		bls	.L1132
2935:src/keys.c    **** 			n = n == max ? 10 : max;
 9651              		.loc 1 2935 11 view .LVU2969
 9652 0a76 7029     		cmp	r1, #112
 9653              	.LBE1214:
2916:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9654              		.loc 1 2916 6 view .LVU2970
 9655 0a78 A2F10302 		sub	r2, r2, #3
 9656              	.LVL820:
 9657              	.LBB1221:
2935:src/keys.c    **** 			n = n == max ? 10 : max;
 9658              		.loc 1 2935 8 is_stmt 1 view .LVU2971
2935:src/keys.c    **** 			n = n == max ? 10 : max;
 9659              		.loc 1 2935 11 is_stmt 0 view .LVU2972
 9660 0a7c 00F0CD85 		beq	.L1381
2937:src/keys.c    **** 			n = 10; 
 9661              		.loc 1 2937 8 is_stmt 1 view .LVU2973
 9662              	.LBE1221:
2916:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9663              		.loc 1 2916 6 is_stmt 0 view .LVU2974
 9664 0a80 7F29     		cmp	r1, #127
 9665 0a82 0CBF     		ite	eq
 9666 0a84 1346     		moveq	r3, r2
 9667              	.LVL821:
2916:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9668              		.loc 1 2916 6 view .LVU2975
 9669 0a86 0A23     		movne	r3, #10
 9670              	.LVL822:
 9671              	.L879:
2940:src/keys.c    **** 
 9672              		.loc 1 2940 2 is_stmt 1 view .LVU2976
2940:src/keys.c    **** 
 9673              		.loc 1 2940 20 is_stmt 0 view .LVU2977
 9674 0a88 0333     		adds	r3, r3, #3
 9675              	.LVL823:
2940:src/keys.c    **** 
 9676              		.loc 1 2940 16 view .LVU2978
 9677 0a8a 88F80C30 		strb	r3, [r8, #12]
2942:src/keys.c    **** }
 9678              		.loc 1 2942 2 is_stmt 1 view .LVU2979
 9679              	.LBE1224:
 9680              	.LBE1232:
3295:src/keys.c    **** 
 9681              		.loc 1 3295 10 is_stmt 0 view .LVU2980
 9682 0a8e 3324     		movs	r4, #51
 9683              	.LVL824:
3295:src/keys.c    **** 
 9684              		.loc 1 3295 10 view .LVU2981
 9685 0a90 3368     		ldr	r3, [r6]
 9686              	.LVL825:
 9687              	.LBB1233:
 9688              	.LBB1225:
2942:src/keys.c    **** }
ARM GAS  /tmp/ccF3vcso.s 			page 284


 9689              		.loc 1 2942 9 view .LVU2982
 9690 0a92 FFF712BB 		b	.L796
 9691              	.LVL826:
 9692              	.L1344:
2942:src/keys.c    **** }
 9693              		.loc 1 2942 9 view .LVU2983
 9694              	.LBE1225:
 9695              	.LBE1233:
3318:src/keys.c    **** 
 9696              		.loc 1 3318 3 is_stmt 1 view .LVU2984
 9697              	.LBB1234:
 9698              	.LBB1235:
 9699              	.LBB1236:
 9700              	.LBB1237:
 9701              	.LBB1238:
 9702              	.LBB1239:
 9703              	.LBB1240:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9704              		.loc 1 97 18 is_stmt 0 view .LVU2985
 9705 0a96 FFF7FEFF 		bl	shift_down
 9706              	.LVL827:
 9707              	.LBE1240:
 9708              	.LBE1239:
 9709              	.LBE1238:
 9710              	.LBE1237:
 9711              	.LBE1236:
 9712              	.LBE1235:
 9713              	.LBE1234:
3318:src/keys.c    **** 
 9714              		.loc 1 3318 10 view .LVU2986
 9715 0a9a E4B2     		uxtb	r4, r4
 9716              	.LVL828:
 9717              	.LBB1263:
 9718              	.LBI1234:
1644:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 9719              		.loc 1 1644 12 is_stmt 1 view .LVU2987
 9720              	.LBB1257:
1645:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 9721              		.loc 1 1645 2 view .LVU2988
1650:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 9722              		.loc 1 1650 2 view .LVU2989
1654:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 9723              		.loc 1 1654 2 view .LVU2990
 9724              	.LBB1249:
 9725              	.LBI1236:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9726              		.loc 1 114 13 view .LVU2991
 9727              	.LBE1249:
 9728              	.LBE1257:
 9729              	.LBE1263:
 9730              	.LBE1445:
 9731              	.LBE1517:
 115:src/keys.c    **** }
 9732              		.loc 1 115 2 view .LVU2992
 9733              	.LBB1518:
 9734              	.LBB1446:
 9735              	.LBB1264:
ARM GAS  /tmp/ccF3vcso.s 			page 285


 9736              	.LBB1258:
 9737              	.LBB1250:
 9738              	.LBB1246:
 9739              	.LBI1237:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9740              		.loc 1 104 20 view .LVU2993
 9741              	.LBB1243:
 105:src/keys.c    **** 	State2.shifts = shift;
 9742              		.loc 1 105 2 view .LVU2994
 9743              	.LBB1242:
 9744              	.LBI1239:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9745              		.loc 1 96 13 view .LVU2995
 9746              	.LBB1241:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9747              		.loc 1 97 2 view .LVU2996
  98:src/keys.c    **** }
 9748              		.loc 1 98 2 view .LVU2997
  98:src/keys.c    **** }
 9749              		.loc 1 98 52 is_stmt 0 view .LVU2998
 9750 0a9c 8346     		mov	fp, r0
 9751 0a9e 08B9     		cbnz	r0, .L889
 9752 0aa0 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 9753              	.L889:
 9754              	.LVL829:
  98:src/keys.c    **** }
 9755              		.loc 1 98 52 view .LVU2999
 9756              	.LBE1241:
 9757              	.LBE1242:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9758              		.loc 1 106 2 is_stmt 1 view .LVU3000
 9759              	.LBE1243:
 9760              	.LBE1246:
 9761              	.LBE1250:
1657:src/keys.c    **** #ifdef DM42
 9762              		.loc 1 1657 15 is_stmt 0 view .LVU3001
 9763 0aa4 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9764              	.LBB1251:
 9765              	.LBB1247:
 9766              	.LBB1244:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9767              		.loc 1 106 16 view .LVU3002
 9768 0aa8 0023     		movs	r3, #0
 9769              	.LBE1244:
 9770              	.LBE1247:
 9771              	.LBE1251:
1657:src/keys.c    **** #ifdef DM42
 9772              		.loc 1 1657 15 view .LVU3003
 9773 0aaa 63F38202 		bfi	r2, r3, #2, #1
1655:src/keys.c    **** 
 9774              		.loc 1 1655 23 view .LVU3004
 9775 0aae ABF1010A 		sub	r10, fp, #1
1657:src/keys.c    **** #ifdef DM42
 9776              		.loc 1 1657 15 view .LVU3005
 9777 0ab2 88F81520 		strb	r2, [r8, #21]
 9778              	.LBB1252:
 9779              	.LBB1248:
ARM GAS  /tmp/ccF3vcso.s 			page 286


 9780              	.LBB1245:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9781              		.loc 1 106 16 view .LVU3006
 9782 0ab6 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9783              		.loc 1 108 2 is_stmt 1 view .LVU3007
 9784              	.LVL830:
 108:src/keys.c    **** }
 9785              		.loc 1 108 2 is_stmt 0 view .LVU3008
 9786              	.LBE1245:
 9787              	.LBE1248:
 9788              	.LBE1252:
1655:src/keys.c    **** 
 9789              		.loc 1 1655 2 is_stmt 1 view .LVU3009
1655:src/keys.c    **** 
 9790              		.loc 1 1655 23 is_stmt 0 view .LVU3010
 9791 0aba BAFA8AFA 		clz	r10, r10
1659:src/keys.c    **** 	display_current_menu ();
 9792              		.loc 1 1659 2 view .LVU3011
 9793 0abe FFF7FEFF 		bl	set_last_menu
 9794              	.LVL831:
1660:src/keys.c    **** #endif
 9795              		.loc 1 1660 2 view .LVU3012
 9796 0ac2 FFF7FEFF 		bl	display_current_menu
 9797              	.LVL832:
1663:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9798              		.loc 1 1663 5 view .LVU3013
 9799 0ac6 2D2C     		cmp	r4, #45
1655:src/keys.c    **** 
 9800              		.loc 1 1655 23 view .LVU3014
 9801 0ac8 4FEA5A1A 		lsr	r10, r10, #5
 9802              	.LVL833:
1657:src/keys.c    **** #ifdef DM42
 9803              		.loc 1 1657 2 is_stmt 1 view .LVU3015
1659:src/keys.c    **** 	display_current_menu ();
 9804              		.loc 1 1659 2 view .LVU3016
1660:src/keys.c    **** #endif
 9805              		.loc 1 1660 2 view .LVU3017
1663:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9806              		.loc 1 1663 2 view .LVU3018
1663:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9807              		.loc 1 1663 5 is_stmt 0 view .LVU3019
 9808 0acc 00F07F81 		beq	.L1382
1672:src/keys.c    **** 	
 9809              		.loc 1 1672 2 is_stmt 1 view .LVU3020
1672:src/keys.c    **** 	
 9810              		.loc 1 1672 5 is_stmt 0 view .LVU3021
 9811 0ad0 BBF1000F 		cmp	fp, #0
 9812 0ad4 3FF45DAE 		beq	.L1321
1674:src/keys.c    **** 		return op_map[c - K10][f];
 9813              		.loc 1 1674 2 is_stmt 1 view .LVU3022
1674:src/keys.c    **** 		return op_map[c - K10][f];
 9814              		.loc 1 1674 15 is_stmt 0 view .LVU3023
 9815 0ad8 A31F     		subs	r3, r4, #6
1674:src/keys.c    **** 		return op_map[c - K10][f];
 9816              		.loc 1 1674 5 view .LVU3024
 9817 0ada DAB2     		uxtb	r2, r3
ARM GAS  /tmp/ccF3vcso.s 			page 287


 9818 0adc 022A     		cmp	r2, #2
 9819 0ade 40F2A281 		bls	.L1383
1677:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9820              		.loc 1 1677 2 is_stmt 1 view .LVU3025
1677:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9821              		.loc 1 1677 15 is_stmt 0 view .LVU3026
 9822 0ae2 0E3C     		subs	r4, r4, #14
 9823              	.LVL834:
1677:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9824              		.loc 1 1677 5 view .LVU3027
 9825 0ae4 E3B2     		uxtb	r3, r4
 9826 0ae6 012B     		cmp	r3, #1
 9827 0ae8 3FF653AE 		bhi	.L1321
1678:src/keys.c    **** 
 9828              		.loc 1 1678 3 is_stmt 1 view .LVU3028
 9829 0aec 634A     		ldr	r2, .L1424+16
 9830              	.LBB1253:
 9831              	.LBB1254:
 744:src/keys.c    **** }
 9832              		.loc 1 744 15 is_stmt 0 view .LVU3029
 9833 0aee 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 9834 0af2 3368     		ldr	r3, [r6]
 9835              	.LBE1254:
 9836              	.LBE1253:
1678:src/keys.c    **** 
 9837              		.loc 1 1678 3 view .LVU3030
 9838 0af4 02EB4402 		add	r2, r2, r4, lsl #1
1680:src/keys.c    **** }
 9839              		.loc 1 1680 9 view .LVU3031
 9840 0af8 3324     		movs	r4, #51
 9841              	.LVL835:
1678:src/keys.c    **** 
 9842              		.loc 1 1678 3 view .LVU3032
 9843 0afa 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
 9844              	.LVL836:
 9845              	.LBB1256:
 9846              	.LBI1253:
 743:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9847              		.loc 1 743 13 is_stmt 1 view .LVU3033
 9848              	.LBB1255:
 744:src/keys.c    **** }
 9849              		.loc 1 744 2 view .LVU3034
 744:src/keys.c    **** }
 9850              		.loc 1 744 15 is_stmt 0 view .LVU3035
 9851 0afe 9142     		cmp	r1, r2
 9852 0b00 08BF     		it	eq
 9853 0b02 0022     		moveq	r2, #0
 9854              	.LVL837:
 744:src/keys.c    **** }
 9855              		.loc 1 744 15 view .LVU3036
 9856 0b04 88F81120 		strb	r2, [r8, #17]
 745:src/keys.c    **** 
 9857              		.loc 1 745 1 view .LVU3037
 9858 0b08 FFF7D7BA 		b	.L796
 9859              	.LVL838:
 9860              	.L868:
 745:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 288


 9861              		.loc 1 745 1 view .LVU3038
 9862              	.LBE1255:
 9863              	.LBE1256:
 9864              	.LBE1258:
 9865              	.LBE1264:
 9866              	.LBB1265:
 9867              	.LBB1166:
2376:src/keys.c    **** 		// digit 2..9, -> or .
 9868              		.loc 1 2376 7 is_stmt 1 view .LVU3039
2376:src/keys.c    **** 		// digit 2..9, -> or .
 9869              		.loc 1 2376 10 is_stmt 0 view .LVU3040
 9870 0b0c 092B     		cmp	r3, #9
 9871 0b0e 40F2C780 		bls	.L870
 9872              	.L862:
2376:src/keys.c    **** 		// digit 2..9, -> or .
 9873              		.loc 1 2376 19 view .LVU3041
 9874 0b12 2C2C     		cmp	r4, #44
 9875 0b14 00F0C480 		beq	.L870
2376:src/keys.c    **** 		// digit 2..9, -> or .
 9876              		.loc 1 2376 35 view .LVU3042
 9877 0b18 262C     		cmp	r4, #38
 9878 0b1a 00F0C180 		beq	.L870
2382:src/keys.c    **** 	case K11:					// tests vs register
 9879              		.loc 1 2382 2 is_stmt 1 view .LVU3043
 9880 0b1e 0C2C     		cmp	r4, #12
 9881 0b20 00F07482 		beq	.L873
 9882 0b24 102C     		cmp	r4, #16
 9883 0b26 3FF434AE 		beq	.L1321
 9884 0b2a 072C     		cmp	r4, #7
 9885 0b2c 00F06E82 		beq	.L873
 9886              	.L865:
2396:src/keys.c    **** 	State2.cmplx = cmpx;
 9887              		.loc 1 2396 2 view .LVU3044
2397:src/keys.c    **** 	return STATE_UNFINISHED;
 9888              		.loc 1 2397 15 is_stmt 0 view .LVU3045
 9889 0b30 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9890 0b34 3368     		ldr	r3, [r6]
2396:src/keys.c    **** 	State2.cmplx = cmpx;
 9891              		.loc 1 2396 14 view .LVU3046
 9892 0b36 88F80FA0 		strb	r10, [r8, #15]
2397:src/keys.c    **** 	return STATE_UNFINISHED;
 9893              		.loc 1 2397 2 is_stmt 1 view .LVU3047
2397:src/keys.c    **** 	return STATE_UNFINISHED;
 9894              		.loc 1 2397 15 is_stmt 0 view .LVU3048
 9895 0b3a 6EF34102 		bfi	r2, lr, #1, #1
 9896 0b3e 88F81520 		strb	r2, [r8, #21]
2398:src/keys.c    **** }
 9897              		.loc 1 2398 2 is_stmt 1 view .LVU3049
2398:src/keys.c    **** }
 9898              		.loc 1 2398 9 is_stmt 0 view .LVU3050
 9899 0b42 3324     		movs	r4, #51
 9900              	.LVL839:
2398:src/keys.c    **** }
 9901              		.loc 1 2398 9 view .LVU3051
 9902 0b44 FFF7B9BA 		b	.L796
 9903              	.LVL840:
 9904              	.L1368:
ARM GAS  /tmp/ccF3vcso.s 			page 289


2398:src/keys.c    **** }
 9905              		.loc 1 2398 9 view .LVU3052
 9906              	.LBE1166:
 9907              	.LBE1265:
 9908              	.LBB1266:
 9909              	.LBB1185:
1716:src/keys.c    **** 	}
 9910              		.loc 1 1716 3 is_stmt 1 view .LVU3053
1716:src/keys.c    **** 	}
 9911              		.loc 1 1716 8 is_stmt 0 view .LVU3054
 9912 0b48 FFF7FEFF 		bl	gtodot_digit
 9913              	.LVL841:
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9914              		.loc 1 1765 2 is_stmt 1 view .LVU3055
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9915              		.loc 1 1765 5 is_stmt 0 view .LVU3056
 9916 0b4c 0028     		cmp	r0, #0
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9917              		.loc 1 1765 5 view .LVU3057
 9918 0b4e FFF620AE 		blt	.L1321
 9919              	.L833:
1766:src/keys.c    **** fin:		set_pc(rawpc);
 9920              		.loc 1 1766 3 is_stmt 1 view .LVU3058
1766:src/keys.c    **** fin:		set_pc(rawpc);
 9921              		.loc 1 1766 11 is_stmt 0 view .LVU3059
 9922 0b52 FFF7FEFF 		bl	find_user_pc
 9923              	.LVL842:
1766:src/keys.c    **** fin:		set_pc(rawpc);
 9924              		.loc 1 1766 11 view .LVU3060
 9925 0b56 0BE7     		b	.L842
 9926              	.LVL843:
 9927              	.L863:
1766:src/keys.c    **** fin:		set_pc(rawpc);
 9928              		.loc 1 1766 11 view .LVU3061
 9929              	.LBE1185:
 9930              	.LBE1266:
 9931              	.LBB1267:
 9932              	.LBB1167:
2368:src/keys.c    **** 		// Special 0
 9933              		.loc 1 2368 7 is_stmt 1 view .LVU3062
2368:src/keys.c    **** 		// Special 0
 9934              		.loc 1 2368 10 is_stmt 0 view .LVU3063
 9935 0b58 002B     		cmp	r3, #0
 9936 0b5a 40F0AC87 		bne	.L866
2370:src/keys.c    **** 	}
 9937              		.loc 1 2370 3 is_stmt 1 view .LVU3064
2370:src/keys.c    **** 	}
 9938              		.loc 1 2370 18 is_stmt 0 view .LVU3065
 9939 0b5e BEF1000F 		cmp	lr, #0
 9940 0b62 14BF     		ite	ne
 9941 0b64 2524     		movne	r4, #37
 9942              	.LVL844:
2370:src/keys.c    **** 	}
 9943              		.loc 1 2370 18 view .LVU3066
 9944 0b66 1724     		moveq	r4, #23
2370:src/keys.c    **** 	}
 9945              		.loc 1 2370 47 view .LVU3067
ARM GAS  /tmp/ccF3vcso.s 			page 290


 9946 0b68 5444     		add	r4, r4, r10
 9947 0b6a 3FE4     		b	.L830
 9948              	.LVL845:
 9949              	.L1345:
2370:src/keys.c    **** 	}
 9950              		.loc 1 2370 47 view .LVU3068
 9951              	.LBE1167:
 9952              	.LBE1267:
 9953              	.LBB1268:
 9954              	.LBB859:
 277:src/keys.c    **** 			switch (c) {
 9955              		.loc 1 277 3 is_stmt 1 view .LVU3069
 277:src/keys.c    **** 			switch (c) {
 9956              		.loc 1 277 6 is_stmt 0 view .LVU3070
 9957 0b6c 032B     		cmp	r3, #3
 9958 0b6e 28D0     		beq	.L1384
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 9959              		.loc 1 294 3 is_stmt 1 view .LVU3071
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 9960              		.loc 1 294 6 is_stmt 0 view .LVU3072
 9961 0b70 022B     		cmp	r3, #2
 9962 0b72 00F09083 		beq	.L1385
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9963              		.loc 1 296 3 is_stmt 1 view .LVU3073
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9964              		.loc 1 296 6 is_stmt 0 view .LVU3074
 9965 0b76 012B     		cmp	r3, #1
 9966 0b78 7FF484AB 		bne	.L916
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9967              		.loc 1 296 27 view .LVU3075
 9968 0b7c 0C2C     		cmp	r4, #12
 9969 0b7e 7FF481AB 		bne	.L916
 297:src/keys.c    **** 				SET_REAL;
 9970              		.loc 1 297 4 is_stmt 1 view .LVU3076
 297:src/keys.c    **** 				SET_REAL;
 9971              		.loc 1 297 7 is_stmt 0 view .LVU3077
 9972 0b82 10F0060F 		tst	r0, #6
 9973 0b86 00F05386 		beq	.L1386
 301:src/keys.c    **** 				CmdLineLength = 0;
 9974              		.loc 1 301 9 is_stmt 1 view .LVU3078
 301:src/keys.c    **** 				CmdLineLength = 0;
 9975              		.loc 1 301 12 is_stmt 0 view .LVU3079
 9976 0b8a 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 9977              	.LVL846:
 301:src/keys.c    **** 				CmdLineLength = 0;
 9978              		.loc 1 301 12 view .LVU3080
 9979 0b8e 002B     		cmp	r3, #0
 9980 0b90 00F02586 		beq	.L1139
 302:src/keys.c    **** 				CmdLineEex = 0;
 9981              		.loc 1 302 5 is_stmt 1 view .LVU3081
 303:src/keys.c    **** 				CmdLineDot = 0;
 9982              		.loc 1 303 5 view .LVU3082
 304:src/keys.c    **** 			}
 9983              		.loc 1 304 5 view .LVU3083
 302:src/keys.c    **** 				CmdLineEex = 0;
 9984              		.loc 1 302 19 is_stmt 0 view .LVU3084
 9985 0b94 0023     		movs	r3, #0
ARM GAS  /tmp/ccF3vcso.s 			page 291


 9986 0b96 A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 9987              		.loc 1 304 16 view .LVU3085
 9988 0b9a 88F81E30 		strb	r3, [r8, #30]
 9989              	.LVL847:
 304:src/keys.c    **** 			}
 9990              		.loc 1 304 16 view .LVU3086
 9991              	.LBE859:
 9992              	.LBE1268:
3326:src/keys.c    **** 		if (is_bad_cmdline())
 9993              		.loc 1 3326 2 is_stmt 1 view .LVU3087
 9994              	.LBB1269:
 9995              	.LBB860:
 306:src/keys.c    **** 		}
 9996              		.loc 1 306 11 is_stmt 0 view .LVU3088
 9997 0b9e 4FF0100A 		mov	r10, #16
 9998              	.LVL848:
 9999              	.L899:
 306:src/keys.c    **** 		}
 10000              		.loc 1 306 11 view .LVU3089
 10001              	.LBE860:
 10002              	.LBE1269:
3327:src/keys.c    **** 			return STATE_UNFINISHED;
 10003              		.loc 1 3327 3 is_stmt 1 view .LVU3090
3327:src/keys.c    **** 			return STATE_UNFINISHED;
 10004              		.loc 1 3327 7 is_stmt 0 view .LVU3091
 10005 0ba2 FFF7FEFF 		bl	is_bad_cmdline
 10006              	.LVL849:
3327:src/keys.c    **** 			return STATE_UNFINISHED;
 10007              		.loc 1 3327 6 view .LVU3092
 10008 0ba6 0446     		mov	r4, r0
 10009 0ba8 0028     		cmp	r0, #0
 10010 0baa 7FF4F2AD 		bne	.L1321
3329:src/keys.c    **** 		init_cat( cat );
 10011              		.loc 1 3329 3 is_stmt 1 view .LVU3093
 10012 0bae FFF7FEFF 		bl	init_cat
 10013              	.LVL850:
3330:src/keys.c    **** 		return STATE_UNFINISHED;
 10014              		.loc 1 3330 3 view .LVU3094
 10015 0bb2 5046     		mov	r0, r10
 10016 0bb4 FFF7FEFF 		bl	init_cat
 10017              	.LVL851:
3331:src/keys.c    **** 	}
 10018              		.loc 1 3331 3 view .LVU3095
 10019              	.LBE1446:
 10020              	.LBE1518:
3410:src/keys.c    ****   //print_debug(60,c);
 10021              		.loc 1 3410 7 is_stmt 0 view .LVU3096
 10022 0bb8 2546     		mov	r5, r4
 10023 0bba 3368     		ldr	r3, [r6]
 10024              	.LBB1519:
 10025              	.LBB1447:
3331:src/keys.c    **** 	}
 10026              		.loc 1 3331 10 view .LVU3097
 10027 0bbc 3324     		movs	r4, #51
 10028 0bbe FFF77CBA 		b	.L796
 10029              	.LVL852:
ARM GAS  /tmp/ccF3vcso.s 			page 292


 10030              	.L1384:
 10031              	.LBB1270:
 10032              	.LBB861:
 278:src/keys.c    **** 				case K53:
 10033              		.loc 1 278 4 is_stmt 1 view .LVU3098
 10034 0bc2 221F     		subs	r2, r4, #4
 10035 0bc4 1D2A     		cmp	r2, #29
 10036 0bc6 3FF65DAB 		bhi	.L916
 10037 0bca 0FF2080C 		adr	ip, .L900
 10038 0bce 5CF822F0 		ldr	pc, [ip, r2, lsl #2]
 10039 0bd2 00BF     		.p2align 2
 10040              	.L900:
 10041 0bd4 530C0000 		.word	.L903+1
 10042 0bd8 670C0000 		.word	.L902+1
 10043 0bdc 85020000 		.word	.L916+1
 10044 0be0 85020000 		.word	.L916+1
 10045 0be4 85020000 		.word	.L916+1
 10046 0be8 85020000 		.word	.L916+1
 10047 0bec 85020000 		.word	.L916+1
 10048 0bf0 85020000 		.word	.L916+1
 10049 0bf4 590C0000 		.word	.L901+1
 10050 0bf8 85020000 		.word	.L916+1
 10051 0bfc 85020000 		.word	.L916+1
 10052 0c00 85020000 		.word	.L916+1
 10053 0c04 85020000 		.word	.L916+1
 10054 0c08 85020000 		.word	.L916+1
 10055 0c0c 85020000 		.word	.L916+1
 10056 0c10 85020000 		.word	.L916+1
 10057 0c14 85020000 		.word	.L916+1
 10058 0c18 85020000 		.word	.L916+1
 10059 0c1c 85020000 		.word	.L916+1
 10060 0c20 85020000 		.word	.L916+1
 10061 0c24 85020000 		.word	.L916+1
 10062 0c28 85020000 		.word	.L916+1
 10063 0c2c 85020000 		.word	.L916+1
 10064 0c30 85020000 		.word	.L916+1
 10065 0c34 85020000 		.word	.L916+1
 10066 0c38 85020000 		.word	.L916+1
 10067 0c3c 85020000 		.word	.L916+1
 10068 0c40 85020000 		.word	.L916+1
 10069 0c44 85020000 		.word	.L916+1
 10070 0c48 4D0C0000 		.word	.L1136+1
 10071              		.p2align 1
 10072              	.L1136:
 280:src/keys.c    **** 				case K04:
 10073              		.loc 1 280 13 is_stmt 0 view .LVU3099
 10074 0c4c 4FF0020A 		mov	r10, #2
 10075 0c50 A7E7     		b	.L899
 10076              	.L903:
 277:src/keys.c    **** 			switch (c) {
 10077              		.loc 1 277 6 view .LVU3100
 10078 0c52 4FF0120A 		mov	r10, #18
 10079 0c56 A4E7     		b	.L899
 10080              	.L901:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 10081              		.loc 1 286 6 is_stmt 1 view .LVU3101
 286:src/keys.c    **** 						finish_cpx_entry(1);
ARM GAS  /tmp/ccF3vcso.s 			page 293


 10082              		.loc 1 286 9 is_stmt 0 view .LVU3102
 10083 0c58 10F0060F 		tst	r0, #6
 10084 0c5c 40F0A085 		bne	.L1387
 289:src/keys.c    **** 				default:
 10085              		.loc 1 289 13 view .LVU3103
 10086 0c60 4FF0110A 		mov	r10, #17
 10087 0c64 9DE7     		b	.L899
 10088              	.L902:
 284:src/keys.c    **** 				case K20:
 10089              		.loc 1 284 6 is_stmt 1 view .LVU3104
 10090              	.LVL853:
 284:src/keys.c    **** 				case K20:
 10091              		.loc 1 284 6 is_stmt 0 view .LVU3105
 10092              	.LBE861:
 10093              	.LBE1270:
3326:src/keys.c    **** 		if (is_bad_cmdline())
 10094              		.loc 1 3326 2 is_stmt 1 view .LVU3106
 10095              	.LBB1271:
 10096              	.LBB862:
 284:src/keys.c    **** 				case K20:
 10097              		.loc 1 284 13 is_stmt 0 view .LVU3107
 10098 0c66 4FF0090A 		mov	r10, #9
 10099 0c6a 9AE7     		b	.L899
 10100              	.L1425:
 10101              		.align	2
 10102              	.L1424:
 10103 0c6c 00000000 		.word	.LANCHOR6
 10104 0c70 00000000 		.word	.LANCHOR5
 10105 0c74 00000000 		.word	main_ram
 10106 0c78 00000000 		.word	.LANCHOR19
 10107 0c7c 00000000 		.word	.LANCHOR21
 10108              	.LVL854:
 10109              	.L1346:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10110              		.loc 1 312 16 view .LVU3108
 10111 0c80 032B     		cmp	r3, #3
 10112 0c82 00F03083 		beq	.L1388
 315:src/keys.c    ****     /*
 10113              		.loc 1 315 3 is_stmt 1 view .LVU3109
 315:src/keys.c    ****     /*
 10114              		.loc 1 315 23 is_stmt 0 view .LVU3110
 10115 0c86 D948     		ldr	r0, .L1426
 10116 0c88 D8F81420 		ldr	r2, [r8, #20]
 315:src/keys.c    ****     /*
 10117              		.loc 1 315 6 view .LVU3111
 10118 0c8c 1042     		tst	r0, r2
 10119 0c8e 3FF4F9AA 		beq	.L916
 10120              	.L909:
 10121              	.LBB854:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 10122              		.loc 1 384 5 is_stmt 1 view .LVU3112
 408:src/keys.c    **** 
 10123              		.loc 1 408 5 view .LVU3113
 413:src/keys.c    ****     col = smap[shift];
 10124              		.loc 1 413 5 view .LVU3114
 10125              	.LVL855:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
ARM GAS  /tmp/ccF3vcso.s 			page 294


 10126              		.loc 1 414 5 view .LVU3115
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10127              		.loc 1 414 15 is_stmt 0 view .LVU3116
 10128 0c92 D748     		ldr	r0, .L1426+4
 413:src/keys.c    ****     col = smap[shift];
 10129              		.loc 1 413 8 view .LVU3117
 10130 0c94 D74A     		ldr	r2, .L1426+8
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10131              		.loc 1 414 9 view .LVU3118
 10132 0c96 10F803E0 		ldrb	lr, [r0, r3]	@ zero_extendqisi2
 10133              	.LVL856:
 415:src/keys.c    ****   }
 10134              		.loc 1 415 5 is_stmt 1 view .LVU3119
 415:src/keys.c    ****   }
 10135              		.loc 1 415 9 is_stmt 0 view .LVU3120
 10136 0c9a 0820     		movs	r0, #8
 10137 0c9c FFF7E5BA 		b	.L911
 10138              	.LVL857:
 10139              	.L870:
 415:src/keys.c    ****   }
 10140              		.loc 1 415 9 view .LVU3121
 10141              	.LBE854:
 10142              	.LBE862:
 10143              	.LBE1271:
 10144              	.LBB1272:
 10145              	.LBB1168:
2378:src/keys.c    **** 		return process_arg(c);
 10146              		.loc 1 2378 3 is_stmt 1 view .LVU3122
 10147              	.LBB1161:
 10148              	.LBI1161:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10149              		.loc 1 552 13 view .LVU3123
 10150              	.LBB1162:
 553:src/keys.c    **** 		return;
 10151              		.loc 1 553 2 view .LVU3124
 553:src/keys.c    **** 		return;
 10152              		.loc 1 553 6 is_stmt 0 view .LVU3125
 10153 0ca0 FFF7FEFF 		bl	is_bad_cmdline
 10154              	.LVL858:
 553:src/keys.c    **** 		return;
 10155              		.loc 1 553 5 view .LVU3126
 10156 0ca4 18B9     		cbnz	r0, .L872
 10157 0ca6 5FFA8BF0 		uxtb	r0, fp
 10158 0caa FFF7FEFF 		bl	init_arg.part.0
 10159              	.LVL859:
 10160              	.L872:
 553:src/keys.c    **** 		return;
 10161              		.loc 1 553 5 view .LVU3127
 10162              	.LBE1162:
 10163              	.LBE1161:
2379:src/keys.c    **** 	}
 10164              		.loc 1 2379 3 is_stmt 1 view .LVU3128
2379:src/keys.c    **** 	}
 10165              		.loc 1 2379 10 is_stmt 0 view .LVU3129
 10166 0cae 2046     		mov	r0, r4
 10167 0cb0 FFF7FEFF 		bl	process_arg
 10168              	.LVL860:
ARM GAS  /tmp/ccF3vcso.s 			page 295


 10169 0cb4 0446     		mov	r4, r0
 10170              	.LVL861:
2379:src/keys.c    **** 	}
 10171              		.loc 1 2379 10 view .LVU3130
 10172 0cb6 FFF799BB 		b	.L830
 10173              	.LVL862:
 10174              	.L1341:
2379:src/keys.c    **** 	}
 10175              		.loc 1 2379 10 view .LVU3131
 10176              	.LBE1168:
 10177              	.LBE1272:
3301:src/keys.c    **** 		return STATE_UNFINISHED;
 10178              		.loc 1 3301 3 is_stmt 1 view .LVU3132
 10179              	.LBB1273:
 10180              	.LBI1273:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10181              		.loc 1 121 13 view .LVU3133
 10182              	.LBB1274:
 122:src/keys.c    **** }
 10183              		.loc 1 122 2 view .LVU3134
 122:src/keys.c    **** }
 10184              		.loc 1 122 16 is_stmt 0 view .LVU3135
 10185 0cba 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 10186 0cbe 3368     		ldr	r3, [r6]
 10187 0cc0 013A     		subs	r2, r2, #1
 10188 0cc2 18BF     		it	ne
 10189 0cc4 0122     		movne	r2, #1
 10190 0cc6 88F81020 		strb	r2, [r8, #16]
 10191              	.LVL863:
 122:src/keys.c    **** }
 10192              		.loc 1 122 16 view .LVU3136
 10193              	.LBE1274:
 10194              	.LBE1273:
3302:src/keys.c    **** 	}
 10195              		.loc 1 3302 3 is_stmt 1 view .LVU3137
3302:src/keys.c    **** 	}
 10196              		.loc 1 3302 10 is_stmt 0 view .LVU3138
 10197 0cca 3324     		movs	r4, #51
 10198              	.LVL864:
3302:src/keys.c    **** 	}
 10199              		.loc 1 3302 10 view .LVU3139
 10200 0ccc FFF7F5B9 		b	.L796
 10201              	.LVL865:
 10202              	.L1342:
3305:src/keys.c    **** 		return STATE_UNFINISHED;
 10203              		.loc 1 3305 3 is_stmt 1 view .LVU3140
 10204              	.LBB1275:
 10205              	.LBI1275:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10206              		.loc 1 121 13 view .LVU3141
 10207              	.LBB1276:
 122:src/keys.c    **** }
 10208              		.loc 1 122 2 view .LVU3142
 122:src/keys.c    **** }
 10209              		.loc 1 122 16 is_stmt 0 view .LVU3143
 10210 0cd0 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 10211 0cd4 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccF3vcso.s 			page 296


 10212 0cd6 0229     		cmp	r1, #2
 10213 0cd8 18BF     		it	ne
 10214 0cda 0222     		movne	r2, #2
 10215 0cdc 88F81020 		strb	r2, [r8, #16]
 10216              	.LVL866:
 122:src/keys.c    **** }
 10217              		.loc 1 122 16 view .LVU3144
 10218              	.LBE1276:
 10219              	.LBE1275:
3306:src/keys.c    **** 	}
 10220              		.loc 1 3306 3 is_stmt 1 view .LVU3145
3306:src/keys.c    **** 	}
 10221              		.loc 1 3306 10 is_stmt 0 view .LVU3146
 10222 0ce0 3324     		movs	r4, #51
 10223              	.LVL867:
3306:src/keys.c    **** 	}
 10224              		.loc 1 3306 10 view .LVU3147
 10225 0ce2 FFF7EAB9 		b	.L796
 10226              	.LVL868:
 10227              	.L1348:
 10228              	.LBB1277:
 10229              	.LBB863:
 423:src/keys.c    ****       break;
 10230              		.loc 1 423 7 is_stmt 1 view .LVU3148
 423:src/keys.c    ****       break;
 10231              		.loc 1 423 11 is_stmt 0 view .LVU3149
 10232 0ce6 7244     		add	r2, r2, lr
 10233              	.LVL869:
 423:src/keys.c    ****       break;
 10234              		.loc 1 423 11 view .LVU3150
 10235 0ce8 92F801A0 		ldrb	r10, [r2, #1]	@ zero_extendqisi2
 10236              	.LVL870:
 424:src/keys.c    ****     }
 10237              		.loc 1 424 7 is_stmt 1 view .LVU3151
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 10238              		.loc 1 427 3 view .LVU3152
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 10239              		.loc 1 427 6 is_stmt 0 view .LVU3153
 10240 0cec 0A07     		lsls	r2, r1, #28
 10241 0cee 40F1A880 		bpl	.L1389
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 10242              		.loc 1 427 20 view .LVU3154
 10243 0cf2 AAF10B03 		sub	r3, r10, #11
 10244 0cf6 042B     		cmp	r3, #4
 10245 0cf8 7FF653AF 		bls	.L899
 10246              	.LVL871:
 10247              	.L922:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 10248              		.loc 1 427 20 view .LVU3155
 10249              	.LBE863:
 10250              	.LBE1277:
3338:src/keys.c    **** 
 10251              		.loc 1 3338 3 is_stmt 1 view .LVU3156
 10252              	.LBB1278:
 10253              	.LBI1103:
2811:src/keys.c    **** 	enum shifts shift = reset_shift();
 10254              		.loc 1 2811 12 view .LVU3157
ARM GAS  /tmp/ccF3vcso.s 			page 297


 10255              	.LBB1133:
2812:src/keys.c    **** 	unsigned int ch = 0;
 10256              		.loc 1 2812 2 view .LVU3158
 10257              	.LBB1107:
 10258              	.LBI1107:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10259              		.loc 1 114 13 view .LVU3159
 10260              	.LBE1107:
 10261              	.LBE1133:
 10262              	.LBE1278:
 10263              	.LBE1447:
 10264              	.LBE1519:
 115:src/keys.c    **** }
 10265              		.loc 1 115 2 view .LVU3160
 10266              	.LBB1520:
 10267              	.LBB1448:
 10268              	.LBB1279:
 10269              	.LBB1134:
 10270              	.LBB1114:
 10271              	.LBB1108:
 10272              	.LBI1108:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10273              		.loc 1 104 20 view .LVU3161
 10274              	.LBB1109:
 105:src/keys.c    **** 	State2.shifts = shift;
 10275              		.loc 1 105 2 view .LVU3162
 10276              	.LBB1110:
 10277              	.LBI1110:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10278              		.loc 1 96 13 view .LVU3163
 10279              	.LBB1111:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10280              		.loc 1 97 2 view .LVU3164
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10281              		.loc 1 97 18 is_stmt 0 view .LVU3165
 10282 0cfc FFF7FEFF 		bl	shift_down
 10283              	.LVL872:
  98:src/keys.c    **** }
 10284              		.loc 1 98 2 is_stmt 1 view .LVU3166
  98:src/keys.c    **** }
 10285              		.loc 1 98 52 is_stmt 0 view .LVU3167
 10286 0d00 0146     		mov	r1, r0
 10287 0d02 08B9     		cbnz	r0, .L919
 10288 0d04 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 10289              	.L919:
 10290              	.LVL873:
  98:src/keys.c    **** }
 10291              		.loc 1 98 52 view .LVU3168
 10292              	.LBE1111:
 10293              	.LBE1110:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10294              		.loc 1 106 2 is_stmt 1 view .LVU3169
 10295              	.LBE1109:
 10296              	.LBE1108:
 10297              	.LBE1114:
2816:src/keys.c    **** 		// Alpha catalogue from within multi character command
 10298              		.loc 1 2816 5 is_stmt 0 view .LVU3170
ARM GAS  /tmp/ccF3vcso.s 			page 298


 10299 0d08 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 10300              	.LBB1115:
 10301              	.LBB1113:
 10302              	.LBB1112:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10303              		.loc 1 106 16 view .LVU3171
 10304 0d0c 0023     		movs	r3, #0
 10305 0d0e 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 10306              		.loc 1 108 2 is_stmt 1 view .LVU3172
 10307              	.LVL874:
 108:src/keys.c    **** }
 10308              		.loc 1 108 2 is_stmt 0 view .LVU3173
 10309              	.LBE1112:
 10310              	.LBE1113:
 10311              	.LBE1115:
2813:src/keys.c    **** 	unsigned int opcode;
 10312              		.loc 1 2813 2 is_stmt 1 view .LVU3174
2814:src/keys.c    **** 
 10313              		.loc 1 2814 2 view .LVU3175
2816:src/keys.c    **** 		// Alpha catalogue from within multi character command
 10314              		.loc 1 2816 2 view .LVU3176
2816:src/keys.c    **** 		// Alpha catalogue from within multi character command
 10315              		.loc 1 2816 5 is_stmt 0 view .LVU3177
 10316 0d12 0028     		cmp	r0, #0
 10317 0d14 40F0F883 		bne	.L1390
2825:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 10318              		.loc 1 2825 2 is_stmt 1 view .LVU3178
 10319 0d18 102C     		cmp	r4, #16
 10320 0d1a 00F05884 		beq	.L926
 10321 0d1e 242C     		cmp	r4, #36
 10322 0d20 3FF425AD 		beq	.L927
 10323 0d24 0C2C     		cmp	r4, #12
 10324 0d26 00F09684 		beq	.L1391
 10325              	.L928:
2858:src/keys.c    **** 	if (ch == 0)
 10326              		.loc 1 2858 2 view .LVU3179
 10327              	.LBB1116:
 10328              	.LBB1117:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10329              		.loc 1 485 6 is_stmt 0 view .LVU3180
 10330 0d2a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10331              	.LVL875:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10332              		.loc 1 485 6 view .LVU3181
 10333              	.LBE1117:
 10334              	.LBI1116:
 435:src/keys.c    **** {
 10335              		.loc 1 435 12 is_stmt 1 view .LVU3182
 10336              	.LBB1122:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 10337              		.loc 1 437 2 view .LVU3183
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10338              		.loc 1 485 2 view .LVU3184
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10339              		.loc 1 485 5 is_stmt 0 view .LVU3185
 10340 0d2e DB06     		lsls	r3, r3, #27
ARM GAS  /tmp/ccF3vcso.s 			page 299


 10341 0d30 03D5     		bpl	.L932
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 10342              		.loc 1 486 3 is_stmt 1 view .LVU3186
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 10343              		.loc 1 486 6 is_stmt 0 view .LVU3187
 10344 0d32 0029     		cmp	r1, #0
 10345 0d34 41F01A80 		bne	.L1392
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 10346              		.loc 1 487 10 view .LVU3188
 10347 0d38 0421     		movs	r1, #4
 10348              	.LVL876:
 10349              	.L932:
 491:src/keys.c    **** }
 10350              		.loc 1 491 2 is_stmt 1 view .LVU3189
 10351              	.LBB1118:
 10352              	.LBI1118:
 131:src/keys.c    **** {
 10353              		.loc 1 131 12 view .LVU3190
 10354              	.LBB1119:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10355              		.loc 1 133 2 view .LVU3191
 143:src/keys.c    **** }
 10356              		.loc 1 143 2 view .LVU3192
 143:src/keys.c    **** }
 10357              		.loc 1 143 23 is_stmt 0 view .LVU3193
 10358 0d3a AF4B     		ldr	r3, .L1426+12
 10359              	.LBE1119:
 10360              	.LBE1118:
 491:src/keys.c    **** }
 10361              		.loc 1 491 49 view .LVU3194
 10362 0d3c AF4A     		ldr	r2, .L1426+16
 10363              	.LBB1121:
 10364              	.LBB1120:
 143:src/keys.c    **** }
 10365              		.loc 1 143 23 view .LVU3195
 10366 0d3e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10367              	.LBE1120:
 10368              	.LBE1121:
 491:src/keys.c    **** }
 10369              		.loc 1 491 49 view .LVU3196
 10370 0d40 0620     		movs	r0, #6
 10371 0d42 00FB0323 		mla	r3, r0, r3, r2
 10372              	.LBE1122:
 10373              	.LBE1116:
2858:src/keys.c    **** 	if (ch == 0)
 10374              		.loc 1 2858 5 view .LVU3197
 10375 0d46 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 10376              	.LVL877:
2859:src/keys.c    **** 		return STATE_UNFINISHED;
 10377              		.loc 1 2859 2 is_stmt 1 view .LVU3198
2859:src/keys.c    **** 		return STATE_UNFINISHED;
 10378              		.loc 1 2859 5 is_stmt 0 view .LVU3199
 10379 0d48 002C     		cmp	r4, #0
 10380 0d4a 3FF422AD 		beq	.L1321
 10381              	.L925:
2862:src/keys.c    **** 		State2.digval = ch;
 10382              		.loc 1 2862 2 is_stmt 1 view .LVU3200
ARM GAS  /tmp/ccF3vcso.s 			page 300


2862:src/keys.c    **** 		State2.digval = ch;
 10383              		.loc 1 2862 12 is_stmt 0 view .LVU3201
 10384 0d4e 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2862:src/keys.c    **** 		State2.digval = ch;
 10385              		.loc 1 2862 5 view .LVU3202
 10386 0d52 002B     		cmp	r3, #0
 10387 0d54 00F01B85 		beq	.L1393
2866:src/keys.c    **** 		State2.digval2 = ch;
 10388              		.loc 1 2866 9 is_stmt 1 view .LVU3203
2866:src/keys.c    **** 		State2.digval2 = ch;
 10389              		.loc 1 2866 12 is_stmt 0 view .LVU3204
 10390 0d58 012B     		cmp	r3, #1
 10391 0d5a 00F0EF85 		beq	.L1394
2871:src/keys.c    **** 
 10392              		.loc 1 2871 2 is_stmt 1 view .LVU3205
 10393              	.LBB1124:
 10394              	.LBI1124:
2804:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10395              		.loc 1 2804 13 view .LVU3206
 10396              	.LBB1125:
2806:src/keys.c    **** 	if (! State2.alphas )
 10397              		.loc 1 2806 2 view .LVU3207
2806:src/keys.c    **** 	if (! State2.alphas )
 10398              		.loc 1 2806 15 is_stmt 0 view .LVU3208
 10399 0d5e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2807:src/keys.c    **** 		State2.alphashift = 0;
 10400              		.loc 1 2807 6 view .LVU3209
 10401 0d62 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2806:src/keys.c    **** 	if (! State2.alphas )
 10402              		.loc 1 2806 15 view .LVU3210
 10403 0d66 6FF3C302 		bfc	r2, #3, #1
 10404 0d6a 88F81520 		strb	r2, [r8, #21]
2807:src/keys.c    **** 		State2.alphashift = 0;
 10405              		.loc 1 2807 2 is_stmt 1 view .LVU3211
2807:src/keys.c    **** 		State2.alphashift = 0;
 10406              		.loc 1 2807 5 is_stmt 0 view .LVU3212
 10407 0d6e 13F00802 		ands	r2, r3, #8
2808:src/keys.c    **** }
 10408              		.loc 1 2808 3 is_stmt 1 view .LVU3213
2808:src/keys.c    **** }
 10409              		.loc 1 2808 21 is_stmt 0 view .LVU3214
 10410 0d72 04BF     		itt	eq
 10411 0d74 62F30413 		bfieq	r3, r2, #4, #1
 10412 0d78 88F81630 		strbeq	r3, [r8, #22]
 10413              	.LVL878:
 10414              	.L931:
2808:src/keys.c    **** }
 10415              		.loc 1 2808 21 view .LVU3215
 10416              	.LBE1125:
 10417              	.LBE1124:
2874:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10418              		.loc 1 2874 2 is_stmt 1 view .LVU3216
2876:src/keys.c    **** }
 10419              		.loc 1 2876 2 view .LVU3217
2874:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10420              		.loc 1 2874 21 is_stmt 0 view .LVU3218
 10421 0d7c 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
ARM GAS  /tmp/ccF3vcso.s 			page 301


2875:src/keys.c    **** 	return opcode;
 10422              		.loc 1 2875 17 view .LVU3219
 10423 0d80 B8F80810 		ldrh	r1, [r8, #8]
2875:src/keys.c    **** 	return opcode;
 10424              		.loc 1 2875 34 view .LVU3220
 10425 0d84 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2874:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10426              		.loc 1 2874 29 view .LVU3221
 10427 0d88 1B02     		lsls	r3, r3, #8
2874:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10428              		.loc 1 2874 18 view .LVU3222
 10429 0d8a 03F57043 		add	r3, r3, #61440
2875:src/keys.c    **** 	return opcode;
 10430              		.loc 1 2875 9 view .LVU3223
 10431 0d8e 0B44     		add	r3, r3, r1
2875:src/keys.c    **** 	return opcode;
 10432              		.loc 1 2875 25 view .LVU3224
 10433 0d90 03EB0243 		add	r3, r3, r2, lsl #16
2874:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10434              		.loc 1 2874 9 view .LVU3225
 10435 0d94 03EB0464 		add	r4, r3, r4, lsl #24
 10436              	.LVL879:
2876:src/keys.c    **** }
 10437              		.loc 1 2876 9 view .LVU3226
 10438 0d98 FFF728BB 		b	.L830
 10439              	.LVL880:
 10440              	.L1365:
2876:src/keys.c    **** }
 10441              		.loc 1 2876 9 view .LVU3227
 10442 0d9c 3368     		ldr	r3, [r6]
 10443              	.LBE1134:
 10444              	.LBE1279:
 10445              	.LBE1448:
 10446              	.LBE1520:
3410:src/keys.c    ****   //print_debug(60,c);
 10447              		.loc 1 3410 7 view .LVU3228
 10448 0d9e 0025     		movs	r5, #0
 10449              	.LBB1521:
3593:src/keys.c    **** 	}
 10450              		.loc 1 3593 6 view .LVU3229
 10451 0da0 3324     		movs	r4, #51
 10452              	.LVL881:
3593:src/keys.c    **** 	}
 10453              		.loc 1 3593 6 view .LVU3230
 10454 0da2 FFF78AB9 		b	.L796
 10455              	.LVL882:
 10456              	.L1343:
3593:src/keys.c    **** 	}
 10457              		.loc 1 3593 6 view .LVU3231
 10458              	.LBE1521:
 10459              	.LBB1522:
 10460              	.LBB1449:
3309:src/keys.c    **** 		State2.arrow = 0;
 10461              		.loc 1 3309 3 is_stmt 1 view .LVU3232
 10462              	.LBB1280:
 10463              	.LBI1280:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
ARM GAS  /tmp/ccF3vcso.s 			page 302


 10464              		.loc 1 121 13 view .LVU3233
 10465              	.LBB1281:
 122:src/keys.c    **** }
 10466              		.loc 1 122 2 view .LVU3234
 122:src/keys.c    **** }
 10467              		.loc 1 122 16 is_stmt 0 view .LVU3235
 10468 0da6 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 10469              	.LVL883:
 122:src/keys.c    **** }
 10470              		.loc 1 122 16 view .LVU3236
 10471 0daa 3368     		ldr	r3, [r6]
 10472 0dac 032C     		cmp	r4, #3
 10473              	.LBE1281:
 10474              	.LBE1280:
3310:src/keys.c    **** 		return STATE_UNFINISHED;
 10475              		.loc 1 3310 16 view .LVU3237
 10476 0dae 60F38201 		bfi	r1, r0, #2, #1
 10477              	.LBB1284:
 10478              	.LBB1282:
 122:src/keys.c    **** }
 10479              		.loc 1 122 16 view .LVU3238
 10480 0db2 18BF     		it	ne
 10481 0db4 0322     		movne	r2, #3
 10482              	.LBE1282:
 10483              	.LBE1284:
3310:src/keys.c    **** 		return STATE_UNFINISHED;
 10484              		.loc 1 3310 16 view .LVU3239
 10485 0db6 88F81510 		strb	r1, [r8, #21]
 10486              	.LBB1285:
 10487              	.LBB1283:
 122:src/keys.c    **** }
 10488              		.loc 1 122 16 view .LVU3240
 10489 0dba 88F81020 		strb	r2, [r8, #16]
 10490              	.LVL884:
 122:src/keys.c    **** }
 10491              		.loc 1 122 16 view .LVU3241
 10492              	.LBE1283:
 10493              	.LBE1285:
3310:src/keys.c    **** 		return STATE_UNFINISHED;
 10494              		.loc 1 3310 3 is_stmt 1 view .LVU3242
3311:src/keys.c    **** 	}
 10495              		.loc 1 3311 3 view .LVU3243
3311:src/keys.c    **** 	}
 10496              		.loc 1 3311 10 is_stmt 0 view .LVU3244
 10497 0dbe 3324     		movs	r4, #51
 10498 0dc0 FFF77BB9 		b	.L796
 10499              	.LVL885:
 10500              	.L1378:
 10501              	.LBB1286:
 10502              	.LBB1226:
2920:src/keys.c    **** 			n = max;
 10503              		.loc 1 2920 3 is_stmt 1 view .LVU3245
2920:src/keys.c    **** 			n = max;
 10504              		.loc 1 2920 6 is_stmt 0 view .LVU3246
 10505 0dc4 111F     		subs	r1, r2, #4
 10506              	.LVL886:
2920:src/keys.c    **** 			n = max;
ARM GAS  /tmp/ccF3vcso.s 			page 303


 10507              		.loc 1 2920 6 view .LVU3247
 10508 0dc6 012A     		cmp	r2, #1
 10509 0dc8 18BF     		it	ne
 10510 0dca 0B46     		movne	r3, r1
 10511              	.LVL887:
2920:src/keys.c    **** 			n = max;
 10512              		.loc 1 2920 6 view .LVU3248
 10513 0dcc 5CE6     		b	.L879
 10514              	.LVL888:
 10515              	.L1382:
2920:src/keys.c    **** 			n = max;
 10516              		.loc 1 2920 6 view .LVU3249
 10517              	.LBE1226:
 10518              	.LBE1286:
 10519              	.LBB1287:
 10520              	.LBB1259:
1663:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10521              		.loc 1 1663 19 view .LVU3250
 10522 0dce 8C4B     		ldr	r3, .L1426+20
 10523 0dd0 1B68     		ldr	r3, [r3]
 10524 0dd2 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 10525 0dd6 5C06     		lsls	r4, r3, #25
 10526              	.LVL889:
1663:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10527              		.loc 1 1663 19 view .LVU3251
 10528 0dd8 40F12781 		bpl	.L891
1664:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10529              		.loc 1 1664 4 is_stmt 1 view .LVU3252
1664:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10530              		.loc 1 1664 7 is_stmt 0 view .LVU3253
 10531 0ddc 03F00103 		and	r3, r3, #1
 10532 0de0 03F5E574 		add	r4, r3, #458
 10533 0de4 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 10534 0de8 2546     		mov	r5, r4
 10535 0dea FFF792BB 		b	.L857
 10536              	.LVL890:
 10537              	.L1369:
1664:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10538              		.loc 1 1664 7 view .LVU3254
 10539              	.LBE1259:
 10540              	.LBE1287:
 10541              	.LBB1288:
 10542              	.LBB1186:
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10543              		.loc 1 1719 44 is_stmt 1 view .LVU3255
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10544              		.loc 1 1719 52 is_stmt 0 view .LVU3256
 10545 0dee 0120     		movs	r0, #1
 10546 0df0 FFF7FEFF 		bl	gtodot_digit
 10547              	.LVL891:
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10548              		.loc 1 1765 2 is_stmt 1 view .LVU3257
 10549              	.LBE1186:
 10550              	.LBE1288:
3286:src/keys.c    **** 
 10551              		.loc 1 3286 10 is_stmt 0 view .LVU3258
 10552 0df4 3324     		movs	r4, #51
ARM GAS  /tmp/ccF3vcso.s 			page 304


 10553              	.LVL892:
3286:src/keys.c    **** 
 10554              		.loc 1 3286 10 view .LVU3259
 10555 0df6 3368     		ldr	r3, [r6]
 10556 0df8 FFF75FB9 		b	.L796
 10557              	.LVL893:
 10558              	.L864:
 10559              	.LBB1289:
 10560              	.LBB1169:
2366:src/keys.c    **** 	}
 10561              		.loc 1 2366 3 is_stmt 1 view .LVU3260
2366:src/keys.c    **** 	}
 10562              		.loc 1 2366 10 is_stmt 0 view .LVU3261
 10563 0dfc 0BF12005 		add	r5, fp, #32
 10564 0e00 43EA0525 		orr	r5, r3, r5, lsl #8
 10565 0e04 2C46     		mov	r4, r5
 10566              	.LVL894:
2366:src/keys.c    **** 	}
 10567              		.loc 1 2366 10 view .LVU3262
 10568 0e06 FFF784BB 		b	.L857
 10569              	.LVL895:
 10570              	.L1370:
2366:src/keys.c    **** 	}
 10571              		.loc 1 2366 10 view .LVU3263
 10572              	.LBE1169:
 10573              	.LBE1289:
 10574              	.LBB1290:
 10575              	.LBB1187:
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10576              		.loc 1 1720 44 is_stmt 1 view .LVU3264
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10577              		.loc 1 1720 52 is_stmt 0 view .LVU3265
 10578 0e0a 0220     		movs	r0, #2
 10579 0e0c FFF7FEFF 		bl	gtodot_digit
 10580              	.LVL896:
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10581              		.loc 1 1765 2 is_stmt 1 view .LVU3266
 10582              	.LBE1187:
 10583              	.LBE1290:
3286:src/keys.c    **** 
 10584              		.loc 1 3286 10 is_stmt 0 view .LVU3267
 10585 0e10 3324     		movs	r4, #51
 10586              	.LVL897:
3286:src/keys.c    **** 
 10587              		.loc 1 3286 10 view .LVU3268
 10588 0e12 3368     		ldr	r3, [r6]
 10589 0e14 FFF751B9 		b	.L796
 10590              	.LVL898:
 10591              	.L1379:
 10592              	.LBB1291:
 10593              	.LBB1227:
2924:src/keys.c    **** 			n = -2;
 10594              		.loc 1 2924 3 is_stmt 1 view .LVU3269
2924:src/keys.c    **** 			n = -2;
 10595              		.loc 1 2924 6 is_stmt 0 view .LVU3270
 10596 0e18 023A     		subs	r2, r2, #2
 10597              	.LVL899:
ARM GAS  /tmp/ccF3vcso.s 			page 305


2925:src/keys.c    **** 	}
 10598              		.loc 1 2925 6 view .LVU3271
 10599 0e1a 9A42     		cmp	r2, r3
 10600 0e1c D4BF     		ite	le
 10601 0e1e 1346     		movle	r3, r2
 10602              	.LVL900:
2925:src/keys.c    **** 	}
 10603              		.loc 1 2925 6 view .LVU3272
 10604 0e20 6FF00103 		mvngt	r3, #1
 10605 0e24 30E6     		b	.L879
 10606              	.LVL901:
 10607              	.L1383:
2925:src/keys.c    **** 	}
 10608              		.loc 1 2925 6 view .LVU3273
 10609              	.LBE1227:
 10610              	.LBE1291:
 10611              	.LBB1292:
 10612              	.LBB1260:
1675:src/keys.c    **** 
 10613              		.loc 1 1675 3 is_stmt 1 view .LVU3274
1675:src/keys.c    **** 
 10614              		.loc 1 1675 25 is_stmt 0 view .LVU3275
 10615 0e26 774A     		ldr	r2, .L1426+24
 10616 0e28 0AEB4303 		add	r3, r10, r3, lsl #1
 10617 0e2c 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10618              	.LVL902:
1675:src/keys.c    **** 
 10619              		.loc 1 1675 25 view .LVU3276
 10620 0e30 FFF7DCBA 		b	.L830
 10621              	.LVL903:
 10622              	.L1371:
1675:src/keys.c    **** 
 10623              		.loc 1 1675 25 view .LVU3277
 10624              	.LBE1260:
 10625              	.LBE1292:
 10626              	.LBB1293:
 10627              	.LBB1188:
1721:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10628              		.loc 1 1721 44 is_stmt 1 view .LVU3278
1721:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10629              		.loc 1 1721 52 is_stmt 0 view .LVU3279
 10630 0e34 0320     		movs	r0, #3
 10631 0e36 FFF7FEFF 		bl	gtodot_digit
 10632              	.LVL904:
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10633              		.loc 1 1765 2 is_stmt 1 view .LVU3280
 10634              	.LBE1188:
 10635              	.LBE1293:
3286:src/keys.c    **** 
 10636              		.loc 1 3286 10 is_stmt 0 view .LVU3281
 10637 0e3a 3324     		movs	r4, #51
 10638              	.LVL905:
3286:src/keys.c    **** 
 10639              		.loc 1 3286 10 view .LVU3282
 10640 0e3c 3368     		ldr	r3, [r6]
 10641 0e3e FFF73CB9 		b	.L796
 10642              	.LVL906:
ARM GAS  /tmp/ccF3vcso.s 			page 306


 10643              	.L1389:
3326:src/keys.c    **** 		if (is_bad_cmdline())
 10644              		.loc 1 3326 2 is_stmt 1 view .LVU3283
3326:src/keys.c    **** 		if (is_bad_cmdline())
 10645              		.loc 1 3326 5 is_stmt 0 view .LVU3284
 10646 0e42 BAF1000F 		cmp	r10, #0
 10647 0e46 7FF4ACAE 		bne	.L899
 10648 0e4a FFF71EBA 		b	.L920
 10649              	.LVL907:
 10650              	.L1350:
3341:src/keys.c    **** 
 10651              		.loc 1 3341 3 is_stmt 1 view .LVU3285
 10652              	.LBB1294:
 10653              	.LBI1058:
2994:src/keys.c    **** 	unsigned int pc = State2.digval;
 10654              		.loc 1 2994 12 view .LVU3286
 10655              	.LBB1085:
2995:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10656              		.loc 1 2995 2 view .LVU3287
2997:src/keys.c    **** 	const int opcode = getprog(pc);
 10657              		.loc 1 2997 27 is_stmt 0 view .LVU3288
 10658 0e4e 262C     		cmp	r4, #38
2995:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10659              		.loc 1 2995 15 view .LVU3289
 10660 0e50 B8F808B0 		ldrh	fp, [r8, #8]
 10661              	.LVL908:
2996:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10662              		.loc 1 2996 2 is_stmt 1 view .LVU3290
2997:src/keys.c    **** 	const int opcode = getprog(pc);
 10663              		.loc 1 2997 27 is_stmt 0 view .LVU3291
 10664 0e54 00F01E84 		beq	.L1146
 10665              	.LVL909:
 10666              	.LBB1068:
 10667              	.LBI1068:
 210:src/keys.c    **** {
 10668              		.loc 1 210 14 is_stmt 1 view .LVU3292
 10669              	.LBB1069:
 212:src/keys.c    ****     // K00 - K05
 10670              		.loc 1 212 3 view .LVU3293
 234:src/keys.c    **** }
 10671              		.loc 1 234 3 view .LVU3294
 10672              	.LBB1070:
 10673              	.LBI1070:
 131:src/keys.c    **** {
 10674              		.loc 1 131 12 view .LVU3295
 10675              	.LBB1071:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10676              		.loc 1 133 2 view .LVU3296
 143:src/keys.c    **** }
 10677              		.loc 1 143 2 view .LVU3297
 143:src/keys.c    **** }
 10678              		.loc 1 143 23 is_stmt 0 view .LVU3298
 10679 0e58 674B     		ldr	r3, .L1426+12
 10680              	.LBE1071:
 10681              	.LBE1070:
 234:src/keys.c    **** }
 10682              		.loc 1 234 28 view .LVU3299
ARM GAS  /tmp/ccF3vcso.s 			page 307


 10683 0e5a 6B4A     		ldr	r2, .L1426+28
 10684              	.LBB1073:
 10685              	.LBB1072:
 143:src/keys.c    **** }
 10686              		.loc 1 143 23 view .LVU3300
 10687 0e5c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10688              	.LBE1072:
 10689              	.LBE1073:
 234:src/keys.c    **** }
 10690              		.loc 1 234 10 view .LVU3301
 10691 0e5e 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 10692              	.LBE1069:
 10693              	.LBE1068:
2997:src/keys.c    **** 	const int opcode = getprog(pc);
 10694              		.loc 1 2997 27 view .LVU3302
 10695 0e62 2AF0800A 		bic	r10, r10, #128
 10696              	.L940:
 10697              	.LVL910:
2998:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10698              		.loc 1 2998 2 is_stmt 1 view .LVU3303
2998:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10699              		.loc 1 2998 21 is_stmt 0 view .LVU3304
 10700 0e66 5846     		mov	r0, fp
 10701 0e68 FFF7FEFF 		bl	getprog
 10702              	.LVL911:
2999:src/keys.c    **** 	const int direct = State2.runmode;
 10703              		.loc 1 2999 2 is_stmt 1 view .LVU3305
2999:src/keys.c    **** 	const int direct = State2.runmode;
 10704              		.loc 1 2999 20 is_stmt 0 view .LVU3306
 10705 0e6c 00F47040 		and	r0, r0, #61440
 10706              	.LVL912:
2999:src/keys.c    **** 	const int direct = State2.runmode;
 10707              		.loc 1 2999 63 view .LVU3307
 10708 0e70 B0F5704F 		cmp	r0, #61440
 10709 0e74 00F09B84 		beq	.L1395
 10710 0e78 0022     		movs	r2, #0
 10711              	.L941:
 10712              	.LVL913:
3000:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10713              		.loc 1 3000 2 is_stmt 1 view .LVU3308
3000:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10714              		.loc 1 3000 27 is_stmt 0 view .LVU3309
 10715 0e7a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10716 0e7e 0192     		str	r2, [sp, #4]
 10717              	.LVL914:
3000:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10718              		.loc 1 3000 27 view .LVU3310
 10719 0e80 C3F38013 		ubfx	r3, r3, #6, #1
 10720 0e84 0093     		str	r3, [sp]
 10721              	.LVL915:
3001:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10722              		.loc 1 3001 2 is_stmt 1 view .LVU3311
 10723              	.LBB1074:
 10724              	.LBI1074:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10725              		.loc 1 114 13 view .LVU3312
 10726              	.LBE1074:
ARM GAS  /tmp/ccF3vcso.s 			page 308


 10727              	.LBE1085:
 10728              	.LBE1294:
 10729              	.LBE1449:
 10730              	.LBE1522:
 115:src/keys.c    **** }
 10731              		.loc 1 115 2 view .LVU3313
 10732              	.LBB1523:
 10733              	.LBB1450:
 10734              	.LBB1295:
 10735              	.LBB1086:
 10736              	.LBB1081:
 10737              	.LBB1075:
 10738              	.LBI1075:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10739              		.loc 1 104 20 view .LVU3314
 10740              	.LBB1076:
 105:src/keys.c    **** 	State2.shifts = shift;
 10741              		.loc 1 105 2 view .LVU3315
 10742              	.LBB1077:
 10743              	.LBI1077:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10744              		.loc 1 96 13 view .LVU3316
 10745              	.LBB1078:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10746              		.loc 1 97 2 view .LVU3317
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10747              		.loc 1 97 18 is_stmt 0 view .LVU3318
 10748 0e86 FFF7FEFF 		bl	shift_down
 10749              	.LVL916:
  98:src/keys.c    **** }
 10750              		.loc 1 98 2 is_stmt 1 view .LVU3319
  98:src/keys.c    **** }
 10751              		.loc 1 98 52 is_stmt 0 view .LVU3320
 10752 0e8a 019A     		ldr	r2, [sp, #4]
 10753 0e8c 0346     		mov	r3, r0
 10754 0e8e 08B9     		cbnz	r0, .L942
 10755 0e90 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10756              	.L942:
 10757              	.LVL917:
  98:src/keys.c    **** }
 10758              		.loc 1 98 52 view .LVU3321
 10759              	.LBE1078:
 10760              	.LBE1077:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10761              		.loc 1 106 2 is_stmt 1 view .LVU3322
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10762              		.loc 1 106 16 is_stmt 0 view .LVU3323
 10763 0e94 0021     		movs	r1, #0
 10764              	.LBE1076:
 10765              	.LBE1075:
 10766              	.LBE1081:
3004:src/keys.c    **** 		// Digits take you to that segment
 10767              		.loc 1 3004 5 view .LVU3324
 10768 0e96 BAF1020F 		cmp	r10, #2
 10769              	.LBB1082:
 10770              	.LBB1080:
 10771              	.LBB1079:
ARM GAS  /tmp/ccF3vcso.s 			page 309


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10772              		.loc 1 106 16 view .LVU3325
 10773 0e9a 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10774              		.loc 1 108 2 is_stmt 1 view .LVU3326
 10775              	.LVL918:
 108:src/keys.c    **** }
 10776              		.loc 1 108 2 is_stmt 0 view .LVU3327
 10777              	.LBE1079:
 10778              	.LBE1080:
 10779              	.LBE1082:
3002:src/keys.c    **** 
 10780              		.loc 1 3002 2 is_stmt 1 view .LVU3328
3004:src/keys.c    **** 		// Digits take you to that segment
 10781              		.loc 1 3004 2 view .LVU3329
3004:src/keys.c    **** 		// Digits take you to that segment
 10782              		.loc 1 3004 5 is_stmt 0 view .LVU3330
 10783 0e9e 40F28D84 		bls	.L1396
3013:src/keys.c    **** 
 10784              		.loc 1 3013 2 is_stmt 1 view .LVU3331
3013:src/keys.c    **** 
 10785              		.loc 1 3013 12 is_stmt 0 view .LVU3332
 10786 0ea2 44EA0323 		orr	r3, r4, r3, lsl #8
 10787              	.LVL919:
3013:src/keys.c    **** 
 10788              		.loc 1 3013 2 view .LVU3333
 10789 0ea6 272B     		cmp	r3, #39
 10790 0ea8 00F3C880 		bgt	.L945
 10791 0eac 042B     		cmp	r3, #4
 10792 0eae 7FF770AC 		ble	.L1321
 10793 0eb2 053B     		subs	r3, r3, #5
 10794 0eb4 222B     		cmp	r3, #34
 10795 0eb6 3FF66CAC 		bhi	.L1321
 10796 0eba 01A1     		adr	r1, .L954
 10797 0ebc 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10798              		.p2align 2
 10799              	.L954:
 10800 0ec0 AB0F0000 		.word	.L959+1
 10801 0ec4 9B0F0000 		.word	.L958+1
 10802 0ec8 9B0F0000 		.word	.L958+1
 10803 0ecc 93070000 		.word	.L1321+1
 10804 0ed0 93070000 		.word	.L1321+1
 10805 0ed4 93070000 		.word	.L1321+1
 10806 0ed8 93070000 		.word	.L1321+1
 10807 0edc A1060000 		.word	.L1149+1
 10808 0ee0 93070000 		.word	.L1321+1
 10809 0ee4 93070000 		.word	.L1321+1
 10810 0ee8 93070000 		.word	.L1321+1
 10811 0eec CD0F0000 		.word	.L957+1
 10812 0ef0 93070000 		.word	.L1321+1
 10813 0ef4 B90F0000 		.word	.L956+1
 10814 0ef8 93070000 		.word	.L1321+1
 10815 0efc 93070000 		.word	.L1321+1
 10816 0f00 93070000 		.word	.L1321+1
 10817 0f04 93070000 		.word	.L1321+1
 10818 0f08 93070000 		.word	.L1321+1
 10819 0f0c 590F0000 		.word	.L955+1
ARM GAS  /tmp/ccF3vcso.s 			page 310


 10820 0f10 93070000 		.word	.L1321+1
 10821 0f14 93070000 		.word	.L1321+1
 10822 0f18 93070000 		.word	.L1321+1
 10823 0f1c 93070000 		.word	.L1321+1
 10824 0f20 93070000 		.word	.L1321+1
 10825 0f24 93070000 		.word	.L1321+1
 10826 0f28 93070000 		.word	.L1321+1
 10827 0f2c 93070000 		.word	.L1321+1
 10828 0f30 93070000 		.word	.L1321+1
 10829 0f34 93070000 		.word	.L1321+1
 10830 0f38 93070000 		.word	.L1321+1
 10831 0f3c 93070000 		.word	.L1321+1
 10832 0f40 93070000 		.word	.L1321+1
 10833 0f44 93070000 		.word	.L1321+1
 10834 0f48 6F0F0000 		.word	.L953+1
 10835              		.p2align 1
 10836              	.L948:
3020:src/keys.c    **** 	case K_DOWN:				// Find next label
 10837              		.loc 1 3020 3 is_stmt 1 view .LVU3334
3020:src/keys.c    **** 	case K_DOWN:				// Find next label
 10838              		.loc 1 3020 8 is_stmt 0 view .LVU3335
 10839 0f4c 5846     		mov	r0, fp
 10840 0f4e 0122     		movs	r2, #1
 10841 0f50 0021     		movs	r1, #0
 10842 0f52 FFF7FEFF 		bl	advance_to_next_label
 10843              	.LVL920:
 10844 0f56 8346     		mov	fp, r0
 10845              	.LVL921:
 10846              	.L955:
3023:src/keys.c    **** 		return STATE_UNFINISHED;
 10847              		.loc 1 3023 3 is_stmt 1 view .LVU3336
3023:src/keys.c    **** 		return STATE_UNFINISHED;
 10848              		.loc 1 3023 19 is_stmt 0 view .LVU3337
 10849 0f58 5846     		mov	r0, fp
 10850 0f5a 0022     		movs	r2, #0
 10851 0f5c 0121     		movs	r1, #1
 10852 0f5e FFF7FEFF 		bl	advance_to_next_label
 10853              	.LVL922:
3024:src/keys.c    **** 
 10854              		.loc 1 3024 10 view .LVU3338
 10855 0f62 3324     		movs	r4, #51
 10856              	.LVL923:
3024:src/keys.c    **** 
 10857              		.loc 1 3024 10 view .LVU3339
 10858 0f64 3368     		ldr	r3, [r6]
3023:src/keys.c    **** 		return STATE_UNFINISHED;
 10859              		.loc 1 3023 17 view .LVU3340
 10860 0f66 A8F80800 		strh	r0, [r8, #8]	@ movhi
3024:src/keys.c    **** 
 10861              		.loc 1 3024 3 is_stmt 1 view .LVU3341
3024:src/keys.c    **** 
 10862              		.loc 1 3024 10 is_stmt 0 view .LVU3342
 10863 0f6a FFF7A6B8 		b	.L796
 10864              	.LVL924:
 10865              	.L953:
3075:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10866              		.loc 1 3075 3 is_stmt 1 view .LVU3343
ARM GAS  /tmp/ccF3vcso.s 			page 311


3075:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10867              		.loc 1 3075 6 is_stmt 0 view .LVU3344
 10868 0f6e 009B     		ldr	r3, [sp]
 10869 0f70 002B     		cmp	r3, #0
 10870 0f72 3FF40EAC 		beq	.L1321
3075:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10871              		.loc 1 3075 14 view .LVU3345
 10872 0f76 002A     		cmp	r2, #0
 10873 0f78 3FF40BAC 		beq	.L1321
3076:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10874              		.loc 1 3076 4 is_stmt 1 view .LVU3346
 10875 0f7c 5946     		mov	r1, fp
 10876 0f7e 0120     		movs	r0, #1
 10877 0f80 FFF7FEFF 		bl	cmdgtocommon
 10878              	.LVL925:
3077:src/keys.c    **** 			break;
 10879              		.loc 1 3077 4 view .LVU3347
3078:src/keys.c    **** 		}
 10880              		.loc 1 3078 4 view .LVU3348
3089:src/keys.c    **** 	State2.labellist = 0;
 10881              		.loc 1 3089 2 view .LVU3349
3090:src/keys.c    **** 	return check_confirm(op);
 10882              		.loc 1 3090 19 is_stmt 0 view .LVU3350
 10883 0f84 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3089:src/keys.c    **** 	State2.labellist = 0;
 10884              		.loc 1 3089 16 view .LVU3351
 10885 0f88 0023     		movs	r3, #0
3090:src/keys.c    **** 	return check_confirm(op);
 10886              		.loc 1 3090 19 view .LVU3352
 10887 0f8a 63F38202 		bfi	r2, r3, #2, #1
 10888 0f8e 88F81720 		strb	r2, [r8, #23]
3089:src/keys.c    **** 	State2.labellist = 0;
 10889              		.loc 1 3089 16 view .LVU3353
 10890 0f92 A8F80830 		strh	r3, [r8, #8]	@ movhi
3090:src/keys.c    **** 	return check_confirm(op);
 10891              		.loc 1 3090 2 is_stmt 1 view .LVU3354
3091:src/keys.c    **** }
 10892              		.loc 1 3091 2 view .LVU3355
 10893              	.LVL926:
 10894              	.LBB1083:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10895              		.loc 1 716 12 view .LVU3356
 10896              	.LBB1064:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 10897              		.loc 1 717 2 view .LVU3357
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 10898              		.loc 1 717 2 is_stmt 0 view .LVU3358
 10899              	.LBE1064:
 10900              	.LBE1083:
 10901              	.LBE1086:
 10902              	.LBE1295:
 10903              	.LBE1450:
 10904              	.LBE1523:
3615:src/keys.c    ****     case STATE_SST:
 10905              		.loc 1 3615 5 is_stmt 1 view .LVU3359
 10906 0f96 FFF7D5B9 		b	.L806
 10907              	.LVL927:
ARM GAS  /tmp/ccF3vcso.s 			page 312


 10908              	.L958:
 10909              	.LBB1524:
 10910              	.LBB1451:
 10911              	.LBB1296:
 10912              	.LBB1087:
3045:src/keys.c    **** 	  //#endif
 10913              		.loc 1 3045 3 view .LVU3360
3045:src/keys.c    **** 	  //#endif
 10914              		.loc 1 3045 38 is_stmt 0 view .LVU3361
 10915 0f9a 062C     		cmp	r4, #6
 10916 0f9c 40F2B114 		movw	r4, #433
 10917              	.LVL928:
3045:src/keys.c    **** 	  //#endif
 10918              		.loc 1 3045 38 view .LVU3362
 10919 0fa0 08BF     		it	eq
 10920 0fa2 4FF4D974 		moveq	r4, #434
 10921 0fa6 FFF77CBB 		b	.L951
 10922              	.LVL929:
 10923              	.L959:
 10924              	.L964:
3053:src/keys.c    **** 		goto xeq_or_gto;
 10925              		.loc 1 3053 3 is_stmt 1 view .LVU3363
3053:src/keys.c    **** 		goto xeq_or_gto;
 10926              		.loc 1 3053 6 is_stmt 0 view .LVU3364
 10927 0faa 02F50074 		add	r4, r2, #512
 10928              	.LVL930:
3054:src/keys.c    **** 
 10929              		.loc 1 3054 3 is_stmt 1 view .LVU3365
3059:src/keys.c    **** 			break;
 10930              		.loc 1 3059 3 view .LVU3366
3059:src/keys.c    **** 			break;
 10931              		.loc 1 3059 6 is_stmt 0 view .LVU3367
 10932 0fae 002A     		cmp	r2, #0
 10933 0fb0 7FF47AAB 		bne	.L963
 10934 0fb4 FFF7EDBB 		b	.L1321
 10935              	.LVL931:
 10936              	.L956:
3027:src/keys.c    **** 		return STATE_UNFINISHED;
 10937              		.loc 1 3027 3 is_stmt 1 view .LVU3368
3027:src/keys.c    **** 		return STATE_UNFINISHED;
 10938              		.loc 1 3027 19 is_stmt 0 view .LVU3369
 10939 0fb8 5846     		mov	r0, fp
 10940 0fba 0021     		movs	r1, #0
 10941 0fbc FFF7FEFF 		bl	advance_to_previous_label
 10942              	.LVL932:
3028:src/keys.c    **** 
 10943              		.loc 1 3028 10 view .LVU3370
 10944 0fc0 3324     		movs	r4, #51
 10945              	.LVL933:
3028:src/keys.c    **** 
 10946              		.loc 1 3028 10 view .LVU3371
 10947 0fc2 3368     		ldr	r3, [r6]
3027:src/keys.c    **** 		return STATE_UNFINISHED;
 10948              		.loc 1 3027 17 view .LVU3372
 10949 0fc4 A8F80800 		strh	r0, [r8, #8]	@ movhi
3028:src/keys.c    **** 
 10950              		.loc 1 3028 3 is_stmt 1 view .LVU3373
ARM GAS  /tmp/ccF3vcso.s 			page 313


3028:src/keys.c    **** 
 10951              		.loc 1 3028 10 is_stmt 0 view .LVU3374
 10952 0fc8 FFF777B8 		b	.L796
 10953              	.LVL934:
 10954              	.L957:
3089:src/keys.c    **** 	State2.labellist = 0;
 10955              		.loc 1 3089 2 is_stmt 1 view .LVU3375
3090:src/keys.c    **** 	return check_confirm(op);
 10956              		.loc 1 3090 19 is_stmt 0 view .LVU3376
 10957 0fcc 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10958 0fd0 3368     		ldr	r3, [r6]
3089:src/keys.c    **** 	State2.labellist = 0;
 10959              		.loc 1 3089 16 view .LVU3377
 10960 0fd2 0022     		movs	r2, #0
3090:src/keys.c    **** 	return check_confirm(op);
 10961              		.loc 1 3090 19 view .LVU3378
 10962 0fd4 62F38201 		bfi	r1, r2, #2, #1
 10963 0fd8 88F81710 		strb	r1, [r8, #23]
3089:src/keys.c    **** 	State2.labellist = 0;
 10964              		.loc 1 3089 16 view .LVU3379
 10965 0fdc A8F80820 		strh	r2, [r8, #8]	@ movhi
3090:src/keys.c    **** 	return check_confirm(op);
 10966              		.loc 1 3090 2 is_stmt 1 view .LVU3380
3091:src/keys.c    **** }
 10967              		.loc 1 3091 2 view .LVU3381
 10968              	.LVL935:
 10969              	.LBB1084:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10970              		.loc 1 716 12 view .LVU3382
 10971              	.LBB1065:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 10972              		.loc 1 717 2 view .LVU3383
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 10973              		.loc 1 717 2 is_stmt 0 view .LVU3384
 10974              	.LBE1065:
 10975              	.LBE1084:
 10976              	.LBE1087:
 10977              	.LBE1296:
 10978              	.LBE1451:
 10979              	.LBE1524:
3615:src/keys.c    ****     case STATE_SST:
 10980              		.loc 1 3615 5 is_stmt 1 view .LVU3385
 10981              	.LBB1525:
 10982              	.LBB1452:
 10983              	.LBB1297:
 10984              	.LBB1088:
3002:src/keys.c    **** 
 10985              		.loc 1 3002 6 is_stmt 0 view .LVU3386
 10986 0fe0 3324     		movs	r4, #51
 10987 0fe2 FFF76AB8 		b	.L796
 10988              	.LVL936:
 10989              	.L1132:
3002:src/keys.c    **** 
 10990              		.loc 1 3002 6 view .LVU3387
 10991              	.LBE1088:
 10992              	.LBE1297:
 10993              	.LBB1298:
ARM GAS  /tmp/ccF3vcso.s 			page 314


 10994              	.LBB1228:
 10995              	.LBB1222:
2932:src/keys.c    **** 		if (nn <= 9)
 10996              		.loc 1 2932 7 view .LVU3388
 10997 0fe6 0B46     		mov	r3, r1
 10998              	.LVL937:
2932:src/keys.c    **** 		if (nn <= 9)
 10999              		.loc 1 2932 7 view .LVU3389
 11000 0fe8 4EE5     		b	.L879
 11001              	.L1427:
 11002 0fea 00BF     		.align	2
 11003              	.L1426:
 11004 0fec 00080800 		.word	526336
 11005 0ff0 00000000 		.word	.LANCHOR22
 11006 0ff4 00000000 		.word	.LANCHOR16
 11007 0ff8 00000000 		.word	.LANCHOR6
 11008 0ffc 00000000 		.word	.LANCHOR15
 11009 1000 00000000 		.word	main_ram
 11010 1004 00000000 		.word	.LANCHOR20
 11011 1008 00000000 		.word	.LANCHOR5
 11012              	.LVL938:
 11013              	.L873:
2932:src/keys.c    **** 		if (nn <= 9)
 11014              		.loc 1 2932 7 view .LVU3390
 11015              	.LBE1222:
 11016              	.LBE1228:
 11017              	.LBE1298:
 11018              	.LBB1299:
 11019              	.LBB1170:
2385:src/keys.c    **** 		return STATE_UNFINISHED;
 11020              		.loc 1 2385 3 is_stmt 1 view .LVU3391
 11021              	.LBB1163:
 11022              	.LBI1163:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 11023              		.loc 1 552 13 view .LVU3392
 11024              	.LBB1164:
 553:src/keys.c    **** 		return;
 11025              		.loc 1 553 2 view .LVU3393
 553:src/keys.c    **** 		return;
 11026              		.loc 1 553 6 is_stmt 0 view .LVU3394
 11027 100c FFF7FEFF 		bl	is_bad_cmdline
 11028              	.LVL939:
 553:src/keys.c    **** 		return;
 11029              		.loc 1 553 5 view .LVU3395
 11030 1010 0446     		mov	r4, r0
 11031              	.LVL940:
 553:src/keys.c    **** 		return;
 11032              		.loc 1 553 5 view .LVU3396
 11033 1012 0028     		cmp	r0, #0
 11034 1014 7FF4BDAB 		bne	.L1321
 11035 1018 5FFA8BF0 		uxtb	r0, fp
 11036 101c FFF7FEFF 		bl	init_arg.part.0
 11037              	.LVL941:
 11038              	.LBE1164:
 11039              	.LBE1163:
 11040              	.LBE1170:
 11041              	.LBE1299:
ARM GAS  /tmp/ccF3vcso.s 			page 315


 11042              	.LBE1452:
 11043              	.LBE1525:
3410:src/keys.c    ****   //print_debug(60,c);
 11044              		.loc 1 3410 7 view .LVU3397
 11045 1020 2546     		mov	r5, r4
 11046 1022 3368     		ldr	r3, [r6]
 11047              	.LBB1526:
 11048              	.LBB1453:
 11049              	.LBB1300:
 11050              	.LBB1171:
2386:src/keys.c    **** 
 11051              		.loc 1 2386 10 view .LVU3398
 11052 1024 3324     		movs	r4, #51
 11053 1026 FFF748B8 		b	.L796
 11054              	.LVL942:
 11055              	.L891:
2386:src/keys.c    **** 
 11056              		.loc 1 2386 10 view .LVU3399
 11057              	.LBE1171:
 11058              	.LBE1300:
 11059              	.LBB1301:
 11060              	.LBB1261:
1672:src/keys.c    **** 	
 11061              		.loc 1 1672 2 is_stmt 1 view .LVU3400
1672:src/keys.c    **** 	
 11062              		.loc 1 1672 5 is_stmt 0 view .LVU3401
 11063 102a BBF1000F 		cmp	fp, #0
 11064 102e 7FF4B0AB 		bne	.L1321
 11065 1032 3368     		ldr	r3, [r6]
 11066              	.LBE1261:
 11067              	.LBE1301:
 11068              	.LBE1453:
 11069              	.LBE1526:
3410:src/keys.c    ****   //print_debug(60,c);
 11070              		.loc 1 3410 7 view .LVU3402
 11071 1034 5D46     		mov	r5, fp
 11072              	.LBB1527:
 11073              	.LBB1454:
 11074              	.LBB1302:
 11075              	.LBB1262:
1672:src/keys.c    **** 	
 11076              		.loc 1 1672 31 view .LVU3403
 11077 1036 3324     		movs	r4, #51
 11078 1038 FFF73FB8 		b	.L796
 11079              	.LVL943:
 11080              	.L945:
1672:src/keys.c    **** 	
 11081              		.loc 1 1672 31 view .LVU3404
 11082              	.LBE1262:
 11083              	.LBE1302:
 11084              	.LBB1303:
 11085              	.LBB1089:
3013:src/keys.c    **** 
 11086              		.loc 1 3013 2 view .LVU3405
 11087 103c B3F58C7F 		cmp	r3, #280
 11088 1040 48DC     		bgt	.L960
 11089 1042 B3F5827F 		cmp	r3, #260
ARM GAS  /tmp/ccF3vcso.s 			page 316


 11090 1046 7FF7A4AB 		ble	.L1321
 11091 104a 6FF48271 		mvn	r1, #260
 11092 104e 0B44     		add	r3, r3, r1
 11093 1050 132B     		cmp	r3, #19
 11094 1052 3FF69EAB 		bhi	.L1321
 11095 1056 01A1     		adr	r1, .L949
 11096 1058 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 11097              		.p2align 2
 11098              	.L949:
 11099 105c B5100000 		.word	.L952+1
 11100 1060 93070000 		.word	.L1321+1
 11101 1064 93070000 		.word	.L1321+1
 11102 1068 93070000 		.word	.L1321+1
 11103 106c 93070000 		.word	.L1321+1
 11104 1070 93070000 		.word	.L1321+1
 11105 1074 93070000 		.word	.L1321+1
 11106 1078 93070000 		.word	.L1321+1
 11107 107c 93070000 		.word	.L1321+1
 11108 1080 93070000 		.word	.L1321+1
 11109 1084 93070000 		.word	.L1321+1
 11110 1088 AD100000 		.word	.L1148+1
 11111 108c 93070000 		.word	.L1321+1
 11112 1090 C3100000 		.word	.L950+1
 11113 1094 93070000 		.word	.L1321+1
 11114 1098 93070000 		.word	.L1321+1
 11115 109c 93070000 		.word	.L1321+1
 11116 10a0 93070000 		.word	.L1321+1
 11117 10a4 93070000 		.word	.L1321+1
 11118 10a8 4D0F0000 		.word	.L948+1
 11119              		.p2align 1
 11120              	.L1148:
 11121 10ac 40F24314 		movw	r4, #323
 11122              	.LVL944:
3013:src/keys.c    **** 
 11123              		.loc 1 3013 2 view .LVU3406
 11124 10b0 FFF7F7BA 		b	.L951
 11125              	.LVL945:
 11126              	.L952:
3057:src/keys.c    **** 	xeq_or_gto:
 11127              		.loc 1 3057 3 is_stmt 1 view .LVU3407
3057:src/keys.c    **** 	xeq_or_gto:
 11128              		.loc 1 3057 6 is_stmt 0 view .LVU3408
 11129 10b4 02F54074 		add	r4, r2, #768
 11130              	.LVL946:
3059:src/keys.c    **** 			break;
 11131              		.loc 1 3059 3 is_stmt 1 view .LVU3409
3059:src/keys.c    **** 			break;
 11132              		.loc 1 3059 6 is_stmt 0 view .LVU3410
 11133 10b8 002A     		cmp	r2, #0
 11134 10ba 7FF4F5AA 		bne	.L963
 11135 10be FFF768BB 		b	.L1321
 11136              	.LVL947:
 11137              	.L950:
3016:src/keys.c    **** 		goto next;
 11138              		.loc 1 3016 3 is_stmt 1 view .LVU3411
3016:src/keys.c    **** 		goto next;
 11139              		.loc 1 3016 8 is_stmt 0 view .LVU3412
ARM GAS  /tmp/ccF3vcso.s 			page 317


 11140 10c2 5846     		mov	r0, fp
 11141 10c4 0121     		movs	r1, #1
 11142 10c6 FFF7FEFF 		bl	advance_to_previous_label
 11143              	.LVL948:
 11144 10ca 0121     		movs	r1, #1
 11145 10cc FFF7FEFF 		bl	advance_to_previous_label
 11146              	.LVL949:
 11147 10d0 8346     		mov	fp, r0
 11148              	.LVL950:
3017:src/keys.c    **** 
 11149              		.loc 1 3017 3 is_stmt 1 view .LVU3413
 11150 10d2 41E7     		b	.L955
 11151              	.LVL951:
 11152              	.L960:
3013:src/keys.c    **** 
 11153              		.loc 1 3013 2 is_stmt 0 view .LVU3414
 11154 10d4 40F22732 		movw	r2, #807
 11155 10d8 9342     		cmp	r3, r2
 11156 10da 7FF45AAB 		bne	.L1321
3083:src/keys.c    **** 		goto set_pc_and_exit;
 11157              		.loc 1 3083 3 is_stmt 1 view .LVU3415
3083:src/keys.c    **** 		goto set_pc_and_exit;
 11158              		.loc 1 3083 18 is_stmt 0 view .LVU3416
 11159 10de 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11160 10e2 61F38613 		bfi	r3, r1, #6, #1
 11161 10e6 88F81630 		strb	r3, [r8, #22]
3084:src/keys.c    **** 
 11162              		.loc 1 3084 3 is_stmt 1 view .LVU3417
3002:src/keys.c    **** 
 11163              		.loc 1 3002 6 is_stmt 0 view .LVU3418
 11164 10ea 3324     		movs	r4, #51
 11165              	.LVL952:
3084:src/keys.c    **** 
 11166              		.loc 1 3084 3 view .LVU3419
 11167 10ec FFF7D9BA 		b	.L951
 11168              	.LVL953:
 11169              	.L1372:
3084:src/keys.c    **** 
 11170              		.loc 1 3084 3 view .LVU3420
 11171              	.LBE1089:
 11172              	.LBE1303:
 11173              	.LBB1304:
 11174              	.LBB1189:
1722:src/keys.c    **** #endif
 11175              		.loc 1 1722 44 is_stmt 1 view .LVU3421
1722:src/keys.c    **** #endif
 11176              		.loc 1 1722 52 is_stmt 0 view .LVU3422
 11177 10f0 0420     		movs	r0, #4
 11178 10f2 FFF7FEFF 		bl	gtodot_digit
 11179              	.LVL954:
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11180              		.loc 1 1765 2 is_stmt 1 view .LVU3423
 11181              	.LBE1189:
 11182              	.LBE1304:
3286:src/keys.c    **** 
 11183              		.loc 1 3286 10 is_stmt 0 view .LVU3424
 11184 10f6 3324     		movs	r4, #51
ARM GAS  /tmp/ccF3vcso.s 			page 318


 11185              	.LVL955:
3286:src/keys.c    **** 
 11186              		.loc 1 3286 10 view .LVU3425
 11187 10f8 3368     		ldr	r3, [r6]
 11188 10fa FEF7DEBF 		b	.L796
 11189              	.LVL956:
 11190              	.L1351:
3344:src/keys.c    **** 
 11191              		.loc 1 3344 3 is_stmt 1 view .LVU3426
 11192              	.LBB1305:
 11193              	.LBI1305:
3125:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 11194              		.loc 1 3125 12 view .LVU3427
 11195              	.LBB1306:
3126:src/keys.c    **** 	enum shifts shift = reset_shift();
 11196              		.loc 1 3126 2 view .LVU3428
 11197              	.LBB1307:
 11198              	.LBI1307:
 210:src/keys.c    **** {
 11199              		.loc 1 210 14 view .LVU3429
 11200              	.LBB1308:
 212:src/keys.c    ****     // K00 - K05
 11201              		.loc 1 212 3 view .LVU3430
 234:src/keys.c    **** }
 11202              		.loc 1 234 3 view .LVU3431
 11203              	.LBB1309:
 11204              	.LBI1309:
 131:src/keys.c    **** {
 11205              		.loc 1 131 12 view .LVU3432
 11206              	.LBB1310:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11207              		.loc 1 133 2 view .LVU3433
 143:src/keys.c    **** }
 11208              		.loc 1 143 2 view .LVU3434
 143:src/keys.c    **** }
 11209              		.loc 1 143 23 is_stmt 0 view .LVU3435
 11210 10fe C14B     		ldr	r3, .L1428
 11211              	.LBE1310:
 11212              	.LBE1309:
 234:src/keys.c    **** }
 11213              		.loc 1 234 28 view .LVU3436
 11214 1100 C14A     		ldr	r2, .L1428+4
 11215              	.LBB1312:
 11216              	.LBB1311:
 143:src/keys.c    **** }
 11217              		.loc 1 143 23 view .LVU3437
 11218 1102 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 11219              	.LBE1311:
 11220              	.LBE1312:
 234:src/keys.c    **** }
 11221              		.loc 1 234 10 view .LVU3438
 11222 1104 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 11223              	.LBE1308:
 11224              	.LBE1307:
 11225              	.LBB1313:
 11226              	.LBB1314:
 11227              	.LBB1315:
ARM GAS  /tmp/ccF3vcso.s 			page 319


 11228              	.LBB1316:
 11229              	.LBB1317:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11230              		.loc 1 97 18 view .LVU3439
 11231 1108 FFF7FEFF 		bl	shift_down
 11232              	.LVL957:
 11233              	.LBE1317:
 11234              	.LBE1316:
 11235              	.LBE1315:
 11236              	.LBE1314:
 11237              	.LBE1313:
3126:src/keys.c    **** 	enum shifts shift = reset_shift();
 11238              		.loc 1 3126 15 view .LVU3440
 11239 110c 2BF0800B 		bic	fp, fp, #128
 11240              	.LVL958:
3127:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 11241              		.loc 1 3127 2 is_stmt 1 view .LVU3441
 11242              	.LBB1326:
 11243              	.LBI1313:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11244              		.loc 1 114 13 view .LVU3442
 11245              	.LBE1326:
 11246              	.LBE1306:
 11247              	.LBE1305:
 11248              	.LBE1454:
 11249              	.LBE1527:
 115:src/keys.c    **** }
 11250              		.loc 1 115 2 view .LVU3443
 11251              	.LBB1528:
 11252              	.LBB1455:
 11253              	.LBB1341:
 11254              	.LBB1333:
 11255              	.LBB1327:
 11256              	.LBB1323:
 11257              	.LBI1314:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11258              		.loc 1 104 20 view .LVU3444
 11259              	.LBB1320:
 105:src/keys.c    **** 	State2.shifts = shift;
 11260              		.loc 1 105 2 view .LVU3445
 11261              	.LBB1319:
 11262              	.LBI1316:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11263              		.loc 1 96 13 view .LVU3446
 11264              	.LBB1318:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11265              		.loc 1 97 2 view .LVU3447
  98:src/keys.c    **** }
 11266              		.loc 1 98 2 view .LVU3448
  98:src/keys.c    **** }
 11267              		.loc 1 98 52 is_stmt 0 view .LVU3449
 11268 1110 8146     		mov	r9, r0
 11269 1112 08B9     		cbnz	r0, .L967
 11270 1114 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 11271              	.L967:
 11272              	.LVL959:
  98:src/keys.c    **** }
ARM GAS  /tmp/ccF3vcso.s 			page 320


 11273              		.loc 1 98 52 view .LVU3450
 11274              	.LBE1318:
 11275              	.LBE1319:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11276              		.loc 1 106 2 is_stmt 1 view .LVU3451
 11277              	.LBE1320:
 11278              	.LBE1323:
 11279              	.LBE1327:
3128:src/keys.c    **** 	const int g_max = global_regs();
 11280              		.loc 1 3128 31 is_stmt 0 view .LVU3452
 11281 1118 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11282              	.LBB1328:
 11283              	.LBB1324:
 11284              	.LBB1321:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11285              		.loc 1 106 16 view .LVU3453
 11286 111c 0022     		movs	r2, #0
 11287              	.LBE1321:
 11288              	.LBE1324:
 11289              	.LBE1328:
3128:src/keys.c    **** 	const int g_max = global_regs();
 11290              		.loc 1 3128 46 view .LVU3454
 11291 111e DB07     		lsls	r3, r3, #31
 11292              	.LBB1329:
 11293              	.LBB1325:
 11294              	.LBB1322:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11295              		.loc 1 106 16 view .LVU3455
 11296 1120 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11297              		.loc 1 108 2 is_stmt 1 view .LVU3456
 11298              	.LVL960:
 108:src/keys.c    **** }
 11299              		.loc 1 108 2 is_stmt 0 view .LVU3457
 11300              	.LBE1322:
 11301              	.LBE1325:
 11302              	.LBE1329:
3128:src/keys.c    **** 	const int g_max = global_regs();
 11303              		.loc 1 3128 2 is_stmt 1 view .LVU3458
3128:src/keys.c    **** 	const int g_max = global_regs();
 11304              		.loc 1 3128 46 is_stmt 0 view .LVU3459
 11305 1124 00F17E82 		bmi	.L1397
 11306 1128 4FF0700A 		mov	r10, #112
 11307              	.L968:
 11308              	.LVL961:
3129:src/keys.c    **** 
 11309              		.loc 1 3129 2 is_stmt 1 view .LVU3460
3129:src/keys.c    **** 
 11310              		.loc 1 3129 20 is_stmt 0 view .LVU3461
 11311 112c FFF7FEFF 		bl	global_regs
 11312              	.LVL962:
3131:src/keys.c    **** 		if (local_regs())
 11313              		.loc 1 3131 2 is_stmt 1 view .LVU3462
3131:src/keys.c    **** 		if (local_regs())
 11314              		.loc 1 3131 5 is_stmt 0 view .LVU3463
 11315 1130 BBF1700F 		cmp	fp, #112
 11316 1134 00F0BE83 		beq	.L1398
ARM GAS  /tmp/ccF3vcso.s 			page 321


3137:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11317              		.loc 1 3137 7 is_stmt 1 view .LVU3464
3137:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11318              		.loc 1 3137 10 is_stmt 0 view .LVU3465
 11319 1138 BBF1090F 		cmp	fp, #9
 11320 113c 40F28683 		bls	.L1399
3144:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11321              		.loc 1 3144 7 is_stmt 1 view .LVU3466
3144:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11322              		.loc 1 3144 29 is_stmt 0 view .LVU3467
 11323 1140 09F1FF33 		add	r3, r9, #-1
3144:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11324              		.loc 1 3144 10 view .LVU3468
 11325 1144 DBB2     		uxtb	r3, r3
 11326 1146 012B     		cmp	r3, #1
 11327 1148 40F27082 		bls	.L1400
 11328              	.L976:
3148:src/keys.c    **** 		State2.digval = n;
 11329              		.loc 1 3148 7 is_stmt 1 view .LVU3469
3148:src/keys.c    **** 		State2.digval = n;
 11330              		.loc 1 3148 10 is_stmt 0 view .LVU3470
 11331 114c BBF17F0F 		cmp	fp, #127
 11332 1150 40F07983 		bne	.L1401
3153:src/keys.c    **** 	case K_DOWN:
 11333              		.loc 1 3153 2 is_stmt 1 view .LVU3471
 11334 1154 073C     		subs	r4, r4, #7
 11335              	.LVL963:
3153:src/keys.c    **** 	case K_DOWN:
 11336              		.loc 1 3153 2 is_stmt 0 view .LVU3472
 11337 1156 112C     		cmp	r4, #17
 11338 1158 3FF61BAB 		bhi	.L1321
 11339 115c 01A3     		adr	r3, .L1108
 11340 115e 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11341 1162 00BF     		.p2align 2
 11342              	.L1108:
 11343 1164 AD110000 		.word	.L989+1
 11344 1168 93070000 		.word	.L1321+1
 11345 116c 93070000 		.word	.L1321+1
 11346 1170 93070000 		.word	.L1321+1
 11347 1174 93070000 		.word	.L1321+1
 11348 1178 2F120000 		.word	.L988+1
 11349 117c 93070000 		.word	.L1321+1
 11350 1180 93070000 		.word	.L1321+1
 11351 1184 93070000 		.word	.L1321+1
 11352 1188 11120000 		.word	.L986+1
 11353 118c 93070000 		.word	.L1321+1
 11354 1190 43120000 		.word	.L982+1
 11355 1194 93070000 		.word	.L1321+1
 11356 1198 93070000 		.word	.L1321+1
 11357 119c 93070000 		.word	.L1321+1
 11358 11a0 93070000 		.word	.L1321+1
 11359 11a4 93070000 		.word	.L1321+1
 11360 11a8 DB110000 		.word	.L979+1
 11361              		.p2align 1
 11362              	.L989:
3192:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11363              		.loc 1 3192 3 is_stmt 1 view .LVU3473
ARM GAS  /tmp/ccF3vcso.s 			page 322


3192:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11364              		.loc 1 3192 6 is_stmt 0 view .LVU3474
 11365 11ac B9F1000F 		cmp	r9, #0
 11366 11b0 7FF4EFAA 		bne	.L1321
3196:src/keys.c    **** #endif
 11367              		.loc 1 3196 4 is_stmt 1 view .LVU3475
3196:src/keys.c    **** #endif
 11368              		.loc 1 3196 8 is_stmt 0 view .LVU3476
 11369 11b4 B8F80840 		ldrh	r4, [r8, #8]
 11370              	.LVL964:
3198:src/keys.c    **** 			State2.digval = 0;
 11371              		.loc 1 3198 4 is_stmt 1 view .LVU3477
3198:src/keys.c    **** 			State2.digval = 0;
 11372              		.loc 1 3198 24 is_stmt 0 view .LVU3478
 11373 11b8 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 11374 11bc 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3200:src/keys.c    **** 			return n;
 11375              		.loc 1 3200 19 view .LVU3479
 11376 11c0 88F80A90 		strb	r9, [r8, #10]
3201:src/keys.c    **** 		}
 11377              		.loc 1 3201 11 view .LVU3480
 11378 11c4 44F42854 		orr	r4, r4, #10752
 11379              	.LVL965:
3198:src/keys.c    **** 			State2.digval = 0;
 11380              		.loc 1 3198 24 view .LVU3481
 11381 11c8 69F3C303 		bfi	r3, r9, #3, #1
3199:src/keys.c    **** 			State2.digval2 = 0;
 11382              		.loc 1 3199 18 view .LVU3482
 11383 11cc A8F80890 		strh	r9, [r8, #8]	@ movhi
 11384 11d0 2546     		mov	r5, r4
3198:src/keys.c    **** 			State2.digval = 0;
 11385              		.loc 1 3198 24 view .LVU3483
 11386 11d2 88F81730 		strb	r3, [r8, #23]
3199:src/keys.c    **** 			State2.digval2 = 0;
 11387              		.loc 1 3199 4 is_stmt 1 view .LVU3484
3200:src/keys.c    **** 			return n;
 11388              		.loc 1 3200 4 view .LVU3485
3201:src/keys.c    **** 		}
 11389              		.loc 1 3201 4 view .LVU3486
3201:src/keys.c    **** 		}
 11390              		.loc 1 3201 11 is_stmt 0 view .LVU3487
 11391 11d6 FFF79CB9 		b	.L857
 11392              	.LVL966:
 11393              	.L979:
3155:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11394              		.loc 1 3155 3 is_stmt 1 view .LVU3488
3155:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11395              		.loc 1 3155 13 is_stmt 0 view .LVU3489
 11396 11da B8F80830 		ldrh	r3, [r8, #8]
3155:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11397              		.loc 1 3155 6 view .LVU3490
 11398 11de 002B     		cmp	r3, #0
 11399 11e0 00F00E86 		beq	.L980
3156:src/keys.c    **** 				State2.digval = global_regs();
 11400              		.loc 1 3156 4 is_stmt 1 view .LVU3491
3156:src/keys.c    **** 				State2.digval = global_regs();
 11401              		.loc 1 3156 8 is_stmt 0 view .LVU3492
ARM GAS  /tmp/ccF3vcso.s 			page 323


 11402 11e4 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3156:src/keys.c    **** 				State2.digval = global_regs();
 11403              		.loc 1 3156 7 view .LVU3493
 11404 11e8 D207     		lsls	r2, r2, #31
 11405 11ea 02D4     		bmi	.L981
3156:src/keys.c    **** 				State2.digval = global_regs();
 11406              		.loc 1 3156 23 view .LVU3494
 11407 11ec 642B     		cmp	r3, #100
 11408 11ee 00F03386 		beq	.L1402
 11409              	.LVL967:
 11410              	.L981:
3158:src/keys.c    **** 		}
 11411              		.loc 1 3158 4 is_stmt 1 view .LVU3495
 11412 11f2 B8F80830 		ldrh	r3, [r8, #8]
 11413 11f6 013B     		subs	r3, r3, #1
 11414              	.LVL968:
 11415              	.L1311:
3158:src/keys.c    **** 		}
 11416              		.loc 1 3158 4 is_stmt 0 view .LVU3496
 11417 11f8 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11418              	.LVL969:
 11419              	.L972:
3210:src/keys.c    **** 	return STATE_UNFINISHED;
 11420              		.loc 1 3210 2 is_stmt 1 view .LVU3497
3210:src/keys.c    **** 	return STATE_UNFINISHED;
 11421              		.loc 1 3210 16 is_stmt 0 view .LVU3498
 11422 11fc 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 11423 1200 3368     		ldr	r3, [r6]
 11424 1202 6FF3C502 		bfc	r2, #3, #3
 11425 1206 88F81420 		strb	r2, [r8, #20]
3211:src/keys.c    **** }
 11426              		.loc 1 3211 2 is_stmt 1 view .LVU3499
3211:src/keys.c    **** }
 11427              		.loc 1 3211 9 is_stmt 0 view .LVU3500
 11428 120a 3324     		movs	r4, #51
 11429 120c FEF755BF 		b	.L796
 11430              	.LVL970:
 11431              	.L986:
3182:src/keys.c    **** 			return STATE_UNFINISHED;
 11432              		.loc 1 3182 3 is_stmt 1 view .LVU3501
3182:src/keys.c    **** 			return STATE_UNFINISHED;
 11433              		.loc 1 3182 7 is_stmt 0 view .LVU3502
 11434 1210 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3182:src/keys.c    **** 			return STATE_UNFINISHED;
 11435              		.loc 1 3182 6 view .LVU3503
 11436 1214 13F02002 		ands	r2, r3, #32
 11437 1218 7FF4BBAA 		bne	.L1321
3184:src/keys.c    **** 
 11438              		.loc 1 3184 3 is_stmt 1 view .LVU3504
3206:src/keys.c    **** 	State2.digval = 0;
 11439              		.loc 1 3206 2 view .LVU3505
3206:src/keys.c    **** 	State2.digval = 0;
 11440              		.loc 1 3206 22 is_stmt 0 view .LVU3506
 11441 121c 62F3C303 		bfi	r3, r2, #3, #1
 11442 1220 88F81730 		strb	r3, [r8, #23]
3207:src/keys.c    **** 	State2.digval2 = 0;
 11443              		.loc 1 3207 2 is_stmt 1 view .LVU3507
ARM GAS  /tmp/ccF3vcso.s 			page 324


3207:src/keys.c    **** 	State2.digval2 = 0;
 11444              		.loc 1 3207 16 is_stmt 0 view .LVU3508
 11445 1224 A8F80820 		strh	r2, [r8, #8]	@ movhi
3208:src/keys.c    **** reset_window:
 11446              		.loc 1 3208 2 is_stmt 1 view .LVU3509
3208:src/keys.c    **** reset_window:
 11447              		.loc 1 3208 17 is_stmt 0 view .LVU3510
 11448 1228 88F80A20 		strb	r2, [r8, #10]
 11449 122c E6E7     		b	.L972
 11450              	.L988:
3187:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11451              		.loc 1 3187 3 is_stmt 1 view .LVU3511
3187:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11452              		.loc 1 3187 6 is_stmt 0 view .LVU3512
 11453 122e B9F1010F 		cmp	r9, #1
 11454 1232 BBD1     		bne	.L989
3188:src/keys.c    **** 			goto reset_window;
 11455              		.loc 1 3188 4 is_stmt 1 view .LVU3513
3188:src/keys.c    **** 			goto reset_window;
 11456              		.loc 1 3188 25 is_stmt 0 view .LVU3514
 11457 1234 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11458 1238 43F00403 		orr	r3, r3, #4
 11459 123c 88F81630 		strb	r3, [r8, #22]
3189:src/keys.c    **** 		}
 11460              		.loc 1 3189 4 is_stmt 1 view .LVU3515
 11461 1240 DCE7     		b	.L972
 11462              	.L982:
3165:src/keys.c    **** 			State2.digval++;
 11463              		.loc 1 3165 3 view .LVU3516
3165:src/keys.c    **** 			State2.digval++;
 11464              		.loc 1 3165 13 is_stmt 0 view .LVU3517
 11465 1242 B8F80830 		ldrh	r3, [r8, #8]
3165:src/keys.c    **** 			State2.digval++;
 11466              		.loc 1 3165 27 view .LVU3518
 11467 1246 0AF1FF3A 		add	r10, r10, #-1
 11468              	.LVL971:
3165:src/keys.c    **** 			State2.digval++;
 11469              		.loc 1 3165 6 view .LVU3519
 11470 124a 5345     		cmp	r3, r10
 11471 124c 80F21884 		bge	.L983
3166:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11472              		.loc 1 3166 4 is_stmt 1 view .LVU3520
3167:src/keys.c    **** 				State2.digval = regX_idx;
 11473              		.loc 1 3167 8 is_stmt 0 view .LVU3521
 11474 1250 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3166:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11475              		.loc 1 3166 17 view .LVU3522
 11476 1254 0133     		adds	r3, r3, #1
 11477 1256 9CB2     		uxth	r4, r3
 11478              	.LVL972:
3167:src/keys.c    **** 				State2.digval = regX_idx;
 11479              		.loc 1 3167 7 view .LVU3523
 11480 1258 D307     		lsls	r3, r2, #31
3166:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11481              		.loc 1 3166 17 view .LVU3524
 11482 125a A8F80840 		strh	r4, [r8, #8]	@ movhi
3167:src/keys.c    **** 				State2.digval = regX_idx;
ARM GAS  /tmp/ccF3vcso.s 			page 325


 11483              		.loc 1 3167 4 is_stmt 1 view .LVU3525
3167:src/keys.c    **** 				State2.digval = regX_idx;
 11484              		.loc 1 3167 7 is_stmt 0 view .LVU3526
 11485 125e CDD4     		bmi	.L972
3167:src/keys.c    **** 				State2.digval = regX_idx;
 11486              		.loc 1 3167 43 view .LVU3527
 11487 1260 FFF7FEFF 		bl	global_regs
 11488              	.LVL973:
3167:src/keys.c    **** 				State2.digval = regX_idx;
 11489              		.loc 1 3167 23 view .LVU3528
 11490 1264 8442     		cmp	r4, r0
 11491 1266 C9D1     		bne	.L972
3168:src/keys.c    **** 		}
 11492              		.loc 1 3168 5 is_stmt 1 view .LVU3529
3168:src/keys.c    **** 		}
 11493              		.loc 1 3168 19 is_stmt 0 view .LVU3530
 11494 1268 6423     		movs	r3, #100
 11495 126a A8F80830 		strh	r3, [r8, #8]	@ movhi
 11496 126e C5E7     		b	.L972
 11497              	.LVL974:
 11498              	.L851:
3168:src/keys.c    **** 		}
 11499              		.loc 1 3168 19 view .LVU3531
 11500              	.LBE1333:
 11501              	.LBE1341:
 11502              	.LBB1342:
 11503              	.LBB1208:
1623:src/keys.c    **** #endif
 11504              		.loc 1 1623 4 is_stmt 1 view .LVU3532
1623:src/keys.c    **** #endif
 11505              		.loc 1 1623 18 view .LVU3533
1623:src/keys.c    **** #endif
 11506              		.loc 1 1623 18 is_stmt 0 view .LVU3534
 11507 1270 8BF0010B 		eor	fp, fp, #1
 11508              	.LVL975:
1623:src/keys.c    **** #endif
 11509              		.loc 1 1623 18 view .LVU3535
 11510 1274 FFF7BCBB 		b	.L858
 11511              	.LVL976:
 11512              	.L1352:
1623:src/keys.c    **** #endif
 11513              		.loc 1 1623 18 view .LVU3536
 11514              	.LBE1208:
 11515              	.LBE1342:
3347:src/keys.c    **** 
 11516              		.loc 1 3347 3 is_stmt 1 view .LVU3537
 11517              	.LBB1343:
 11518              	.LBI1343:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11519              		.loc 1 114 13 view .LVU3538
 11520              	.LBE1343:
 11521              	.LBE1455:
 11522              	.LBE1528:
 115:src/keys.c    **** }
 11523              		.loc 1 115 2 view .LVU3539
 11524              	.LBB1529:
 11525              	.LBB1456:
ARM GAS  /tmp/ccF3vcso.s 			page 326


 11526              	.LBB1350:
 11527              	.LBB1344:
 11528              	.LBI1344:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11529              		.loc 1 104 20 view .LVU3540
 11530              	.LBB1345:
 105:src/keys.c    **** 	State2.shifts = shift;
 11531              		.loc 1 105 2 view .LVU3541
 11532              	.LBB1346:
 11533              	.LBI1346:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11534              		.loc 1 96 13 view .LVU3542
 11535              	.LBB1347:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11536              		.loc 1 97 2 view .LVU3543
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11537              		.loc 1 97 18 is_stmt 0 view .LVU3544
 11538 1278 FFF7FEFF 		bl	shift_down
 11539              	.LVL977:
  98:src/keys.c    **** }
 11540              		.loc 1 98 2 is_stmt 1 view .LVU3545
  98:src/keys.c    **** }
 11541              		.loc 1 98 52 is_stmt 0 view .LVU3546
 11542 127c 0146     		mov	r1, r0
 11543 127e 08B9     		cbnz	r0, .L992
 11544 1280 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11545              	.L992:
 11546              	.LVL978:
  98:src/keys.c    **** }
 11547              		.loc 1 98 52 view .LVU3547
 11548              	.LBE1347:
 11549              	.LBE1346:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11550              		.loc 1 106 2 is_stmt 1 view .LVU3548
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11551              		.loc 1 106 16 is_stmt 0 view .LVU3549
 11552 1284 0022     		movs	r2, #0
 11553              	.LBE1345:
 11554              	.LBE1344:
 11555              	.LBE1350:
3347:src/keys.c    **** 
 11556              		.loc 1 3347 10 view .LVU3550
 11557 1286 2046     		mov	r0, r4
 11558              	.LBB1351:
 11559              	.LBB1349:
 11560              	.LBB1348:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11561              		.loc 1 106 16 view .LVU3551
 11562 1288 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11563              		.loc 1 108 2 is_stmt 1 view .LVU3552
 11564              	.LVL979:
 108:src/keys.c    **** }
 11565              		.loc 1 108 2 is_stmt 0 view .LVU3553
 11566              	.LBE1348:
 11567              	.LBE1349:
 11568              	.LBE1351:
ARM GAS  /tmp/ccF3vcso.s 			page 327


3347:src/keys.c    **** 
 11569              		.loc 1 3347 10 view .LVU3554
 11570 128c FFF7FEFF 		bl	process_catalogue
 11571              	.LVL980:
3347:src/keys.c    **** 
 11572              		.loc 1 3347 10 view .LVU3555
 11573 1290 0446     		mov	r4, r0
 11574 1292 FFF7ABB8 		b	.L830
 11575              	.LVL981:
 11576              	.L1385:
 11577              	.LBB1352:
 11578              	.LBB864:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11579              		.loc 1 294 27 view .LVU3556
 11580 1296 242C     		cmp	r4, #36
 11581 1298 7EF4F4AF 		bne	.L916
 11582              	.L1140:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11583              		.loc 1 295 11 view .LVU3557
 11584 129c 4FF0160A 		mov	r10, #22
 11585 12a0 7FE4     		b	.L899
 11586              	.LVL982:
 11587              	.L1167:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11588              		.loc 1 295 11 view .LVU3558
 11589              	.LBE864:
 11590              	.LBE1352:
 11591              	.LBB1353:
 11592              	.LBB1172:
2374:src/keys.c    **** 	}
 11593              		.loc 1 2374 18 view .LVU3559
 11594 12a2 2724     		movs	r4, #39
 11595              	.LVL983:
2374:src/keys.c    **** 	}
 11596              		.loc 1 2374 47 view .LVU3560
 11597 12a4 5444     		add	r4, r4, r10
 11598 12a6 FFF7A1B8 		b	.L830
 11599              	.LVL984:
 11600              	.L1375:
2374:src/keys.c    **** 	}
 11601              		.loc 1 2374 47 view .LVU3561
 11602              	.LBE1172:
 11603              	.LBE1353:
 11604              	.LBB1354:
 11605              	.LBB1190:
1736:src/keys.c    **** 	}
 11606              		.loc 1 1736 3 is_stmt 1 view .LVU3562
1736:src/keys.c    **** 	}
 11607              		.loc 1 1736 6 is_stmt 0 view .LVU3563
 11608 12aa B8F80800 		ldrh	r0, [r8, #8]
 11609              	.LVL985:
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11610              		.loc 1 1765 2 is_stmt 1 view .LVU3564
 11611 12ae 50E4     		b	.L833
 11612              	.LVL986:
 11613              	.L1373:
1726:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/ccF3vcso.s 			page 328


 11614              		.loc 1 1726 3 view .LVU3565
 11615              	.LBB1183:
 11616              	.LBI1183:
1698:src/keys.c    **** 	const int code = 100 + n;
 11617              		.loc 1 1698 12 view .LVU3566
 11618              	.LBB1184:
1699:src/keys.c    **** 	unsigned int pc = state_pc();
 11619              		.loc 1 1699 2 view .LVU3567
1700:src/keys.c    **** 
 11620              		.loc 1 1700 2 view .LVU3568
1700:src/keys.c    **** 
 11621              		.loc 1 1700 20 is_stmt 0 view .LVU3569
 11622 12b0 DFF864B1 		ldr	fp, .L1428+20
 11623 12b4 DBF80030 		ldr	r3, [fp]
 11624              	.LVL987:
1700:src/keys.c    **** 
 11625              		.loc 1 1700 15 view .LVU3570
 11626 12b8 B3F8E007 		ldrh	r0, [r3, #2016]
 11627              	.LVL988:
1702:src/keys.c    **** 		pc = 1;
 11628              		.loc 1 1702 2 is_stmt 1 view .LVU3571
1702:src/keys.c    **** 		pc = 1;
 11629              		.loc 1 1702 5 is_stmt 0 view .LVU3572
 11630 12bc 830B     		lsrs	r3, r0, #14
1703:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11631              		.loc 1 1703 6 view .LVU3573
 11632 12be 032B     		cmp	r3, #3
 11633              	.LVL989:
1704:src/keys.c    **** 	if (pc > 0)
 11634              		.loc 1 1704 2 is_stmt 1 view .LVU3574
1704:src/keys.c    **** 	if (pc > 0)
 11635              		.loc 1 1704 7 is_stmt 0 view .LVU3575
 11636 12c0 08BF     		it	eq
 11637 12c2 0120     		moveq	r0, #1
 11638              	.LVL990:
1704:src/keys.c    **** 	if (pc > 0)
 11639              		.loc 1 1704 7 view .LVU3576
 11640 12c4 6431     		adds	r1, r1, #100
 11641              	.LVL991:
1704:src/keys.c    **** 	if (pc > 0)
 11642              		.loc 1 1704 7 view .LVU3577
 11643 12c6 0322     		movs	r2, #3
 11644              	.LVL992:
1704:src/keys.c    **** 	if (pc > 0)
 11645              		.loc 1 1704 7 view .LVU3578
 11646 12c8 FFF7FEFF 		bl	find_label_from
 11647              	.LVL993:
1705:src/keys.c    **** 		return pc;
 11648              		.loc 1 1705 2 is_stmt 1 view .LVU3579
1705:src/keys.c    **** 		return pc;
 11649              		.loc 1 1705 5 is_stmt 0 view .LVU3580
 11650 12cc 0028     		cmp	r0, #0
 11651 12ce 7FF44FAB 		bne	.L842
1707:src/keys.c    **** }
 11652              		.loc 1 1707 2 is_stmt 1 view .LVU3581
1707:src/keys.c    **** }
 11653              		.loc 1 1707 9 is_stmt 0 view .LVU3582
ARM GAS  /tmp/ccF3vcso.s 			page 329


 11654 12d2 DBF80030 		ldr	r3, [fp]
 11655 12d6 B3F8E007 		ldrh	r0, [r3, #2016]
 11656              	.LVL994:
1707:src/keys.c    **** }
 11657              		.loc 1 1707 9 view .LVU3583
 11658              	.LBE1184:
 11659              	.LBE1183:
1727:src/keys.c    **** 	}
 11660              		.loc 1 1727 3 is_stmt 1 view .LVU3584
 11661 12da FFF749BB 		b	.L842
 11662              	.LVL995:
 11663              	.L1168:
1727:src/keys.c    **** 	}
 11664              		.loc 1 1727 3 is_stmt 0 view .LVU3585
 11665              	.LBE1190:
 11666              	.LBE1354:
 11667              	.LBB1355:
 11668              	.LBB1173:
2374:src/keys.c    **** 	}
 11669              		.loc 1 2374 18 view .LVU3586
 11670 12de 1E24     		movs	r4, #30
 11671              	.LVL996:
2374:src/keys.c    **** 	}
 11672              		.loc 1 2374 47 view .LVU3587
 11673 12e0 5444     		add	r4, r4, r10
 11674 12e2 FFF783B8 		b	.L830
 11675              	.LVL997:
 11676              	.L1388:
2374:src/keys.c    **** 	}
 11677              		.loc 1 2374 47 view .LVU3588
 11678              	.LBE1173:
 11679              	.LBE1355:
 11680              	.LBB1356:
 11681              	.LBB865:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 11682              		.loc 1 312 74 view .LVU3589
 11683 12e6 D8F81420 		ldr	r2, [r8, #20]
 11684 12ea 4848     		ldr	r0, .L1428+8
 11685 12ec 0242     		tst	r2, r0
 11686 12ee 3FF458AC 		beq	.L899
 315:src/keys.c    ****     /*
 11687              		.loc 1 315 3 is_stmt 1 view .LVU3590
 315:src/keys.c    ****     /*
 11688              		.loc 1 315 23 is_stmt 0 view .LVU3591
 11689 12f2 4748     		ldr	r0, .L1428+12
 315:src/keys.c    ****     /*
 11690              		.loc 1 315 6 view .LVU3592
 11691 12f4 0242     		tst	r2, r0
 11692 12f6 3EF4ABAF 		beq	.L1123
 11693 12fa CAE4     		b	.L909
 11694              	.LVL998:
 11695              	.L1141:
 11696              	.LBB855:
 371:src/keys.c    **** #ifndef WINGUI
 11697              		.loc 1 371 8 view .LVU3593
 11698 12fc 454A     		ldr	r2, .L1428+16
 377:src/keys.c    ****   }
ARM GAS  /tmp/ccF3vcso.s 			page 330


 11699              		.loc 1 377 9 view .LVU3594
 11700 12fe 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 11701              		.loc 1 373 27 view .LVU3595
 11702 1300 4FF0010E 		mov	lr, #1
 11703 1304 FEF7B1BF 		b	.L911
 11704              	.LVL999:
 11705              	.L1380:
 373:src/keys.c    **** #else
 11706              		.loc 1 373 27 view .LVU3596
 11707              	.LBE855:
 11708              	.LBE865:
 11709              	.LBE1356:
 11710              	.LBB1357:
 11711              	.LBB1229:
2928:src/keys.c    **** 		return STATE_UNFINISHED;
 11712              		.loc 1 2928 3 is_stmt 1 view .LVU3597
 11713 1308 3368     		ldr	r3, [r6]
 11714              	.LVL1000:
2928:src/keys.c    **** 		return STATE_UNFINISHED;
 11715              		.loc 1 2928 17 is_stmt 0 view .LVU3598
 11716 130a 88F80C00 		strb	r0, [r8, #12]
2929:src/keys.c    **** 	} 
 11717              		.loc 1 2929 3 is_stmt 1 view .LVU3599
 11718              	.LBE1229:
 11719              	.LBE1357:
3295:src/keys.c    **** 
 11720              		.loc 1 3295 10 is_stmt 0 view .LVU3600
 11721 130e 3324     		movs	r4, #51
 11722              	.LVL1001:
 11723              	.LBB1358:
 11724              	.LBB1230:
2929:src/keys.c    **** 	} 
 11725              		.loc 1 2929 10 view .LVU3601
 11726 1310 FEF7D3BE 		b	.L796
 11727              	.LVL1002:
 11728              	.L1374:
2929:src/keys.c    **** 	} 
 11729              		.loc 1 2929 10 view .LVU3602
 11730              	.LBE1230:
 11731              	.LBE1358:
 11732              	.LBB1359:
 11733              	.LBB1191:
1731:src/keys.c    **** 		goto fin;
 11734              		.loc 1 1731 3 is_stmt 1 view .LVU3603
1731:src/keys.c    **** 		goto fin;
 11735              		.loc 1 1731 11 is_stmt 0 view .LVU3604
 11736 1314 404B     		ldr	r3, .L1428+20
 11737              	.LVL1003:
1731:src/keys.c    **** 		goto fin;
 11738              		.loc 1 1731 11 view .LVU3605
 11739 1316 1B68     		ldr	r3, [r3]
1731:src/keys.c    **** 		goto fin;
 11740              		.loc 1 1731 9 view .LVU3606
 11741 1318 5888     		ldrh	r0, [r3, #2]
 11742              	.LVL1004:
1732:src/keys.c    **** 	}
ARM GAS  /tmp/ccF3vcso.s 			page 331


 11743              		.loc 1 1732 3 is_stmt 1 view .LVU3607
 11744 131a FFF729BB 		b	.L842
 11745              	.LVL1005:
 11746              	.L1353:
1732:src/keys.c    **** 	}
 11747              		.loc 1 1732 3 is_stmt 0 view .LVU3608
 11748              	.LBE1191:
 11749              	.LBE1359:
 11750              	.LBB1360:
3353:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
 11751              		.loc 1 3353 3 is_stmt 1 view .LVU3609
 11752              	.LBB1047:
 11753              	.LBI992:
1778:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11754              		.loc 1 1778 12 view .LVU3610
 11755              	.LBB1039:
1779:src/keys.c    ****         int op = STATE_UNFINISHED;
 11756              		.loc 1 1779 2 view .LVU3611
1779:src/keys.c    ****         int op = STATE_UNFINISHED;
 11757              		.loc 1 1779 33 is_stmt 0 view .LVU3612
 11758 131e 98F80D30 		ldrb	r3, [r8, #13]	@ zero_extendqisi2
 11759 1322 0093     		str	r3, [sp]
 11760              	.LBB994:
 11761              	.LBB995:
 11762              	.LBB996:
 11763              	.LBB997:
 11764              	.LBB998:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11765              		.loc 1 97 18 view .LVU3613
 11766 1324 FFF7FEFF 		bl	shift_down
 11767              	.LVL1006:
 11768              	.LBE998:
 11769              	.LBE997:
 11770              	.LBE996:
 11771              	.LBE995:
 11772              	.LBE994:
1779:src/keys.c    ****         int op = STATE_UNFINISHED;
 11773              		.loc 1 1779 15 view .LVU3614
 11774 1328 009B     		ldr	r3, [sp]
 11775              	.LVL1007:
1780:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11776              		.loc 1 1780 9 is_stmt 1 view .LVU3615
1781:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11777              		.loc 1 1781 2 view .LVU3616
 11778              	.LBB1007:
 11779              	.LBI994:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11780              		.loc 1 114 13 view .LVU3617
 11781              	.LBE1007:
 11782              	.LBE1039:
 11783              	.LBE1047:
 11784              	.LBE1360:
 11785              	.LBE1456:
 11786              	.LBE1529:
 115:src/keys.c    **** }
 11787              		.loc 1 115 2 view .LVU3618
 11788              	.LBB1530:
ARM GAS  /tmp/ccF3vcso.s 			page 332


 11789              	.LBB1457:
 11790              	.LBB1361:
 11791              	.LBB1048:
 11792              	.LBB1040:
 11793              	.LBB1008:
 11794              	.LBB1004:
 11795              	.LBI995:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11796              		.loc 1 104 20 view .LVU3619
 11797              	.LBB1001:
 105:src/keys.c    **** 	State2.shifts = shift;
 11798              		.loc 1 105 2 view .LVU3620
 11799              	.LBB1000:
 11800              	.LBI997:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11801              		.loc 1 96 13 view .LVU3621
 11802              	.LBB999:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11803              		.loc 1 97 2 view .LVU3622
  98:src/keys.c    **** }
 11804              		.loc 1 98 2 view .LVU3623
  98:src/keys.c    **** }
 11805              		.loc 1 98 52 is_stmt 0 view .LVU3624
 11806 132a 8246     		mov	r10, r0
 11807 132c 08B9     		cbnz	r0, .L994
 11808 132e 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 11809              	.L994:
 11810              	.LVL1008:
  98:src/keys.c    **** }
 11811              		.loc 1 98 52 view .LVU3625
 11812              	.LBE999:
 11813              	.LBE1000:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11814              		.loc 1 106 2 is_stmt 1 view .LVU3626
 11815              	.LBE1001:
 11816              	.LBE1004:
 11817              	.LBE1008:
 11818              	.LBB1009:
 11819              	.LBB1010:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11820              		.loc 1 485 6 is_stmt 0 view .LVU3627
 11821 1332 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 11822              	.LBE1010:
 11823              	.LBE1009:
 11824              	.LBB1026:
 11825              	.LBB1005:
 11826              	.LBB1002:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11827              		.loc 1 106 16 view .LVU3628
 11828 1336 4FF0000E 		mov	lr, #0
 11829              	.LBE1002:
 11830              	.LBE1005:
 11831              	.LBE1026:
 11832              	.LBB1027:
 11833              	.LBB1021:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11834              		.loc 1 485 5 view .LVU3629
ARM GAS  /tmp/ccF3vcso.s 			page 333


 11835 133a D106     		lsls	r1, r2, #27
 11836              	.LBE1021:
 11837              	.LBE1027:
 11838              	.LBB1028:
 11839              	.LBB1006:
 11840              	.LBB1003:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11841              		.loc 1 106 16 view .LVU3630
 11842 133c 88F810E0 		strb	lr, [r8, #16]
 108:src/keys.c    **** }
 11843              		.loc 1 108 2 is_stmt 1 view .LVU3631
 11844              	.LVL1009:
 108:src/keys.c    **** }
 11845              		.loc 1 108 2 is_stmt 0 view .LVU3632
 11846              	.LBE1003:
 11847              	.LBE1006:
 11848              	.LBE1028:
1782:src/keys.c    **** 	State2.alpha_pos = 0;
 11849              		.loc 1 1782 2 is_stmt 1 view .LVU3633
1782:src/keys.c    **** 	State2.alpha_pos = 0;
 11850              		.loc 1 1782 11 is_stmt 0 view .LVU3634
 11851 1340 5046     		mov	r0, r10
 11852              	.LVL1010:
 11853              	.LBB1029:
 11854              	.LBI1009:
 435:src/keys.c    **** {
 11855              		.loc 1 435 12 is_stmt 1 view .LVU3635
 11856              	.LBB1022:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11857              		.loc 1 437 2 view .LVU3636
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11858              		.loc 1 485 2 view .LVU3637
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11859              		.loc 1 485 5 is_stmt 0 view .LVU3638
 11860 1342 6ED5     		bpl	.L995
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11861              		.loc 1 486 3 is_stmt 1 view .LVU3639
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11862              		.loc 1 486 6 is_stmt 0 view .LVU3640
 11863 1344 BAF1000F 		cmp	r10, #0
 11864 1348 6AD0     		beq	.L1154
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11865              		.loc 1 488 8 is_stmt 1 view .LVU3641
 11866              	.LBB1011:
 11867              	.LBB1012:
 143:src/keys.c    **** }
 11868              		.loc 1 143 23 is_stmt 0 view .LVU3642
 11869 134a 2E49     		ldr	r1, .L1428
 11870              	.LBE1012:
 11871              	.LBE1011:
 491:src/keys.c    **** }
 11872              		.loc 1 491 49 view .LVU3643
 11873 134c 3348     		ldr	r0, .L1428+24
 11874              	.LVL1011:
 11875              	.LBB1017:
 11876              	.LBB1013:
 143:src/keys.c    **** }
ARM GAS  /tmp/ccF3vcso.s 			page 334


 11877              		.loc 1 143 23 view .LVU3644
 11878 134e 11F804C0 		ldrb	ip, [r1, r4]	@ zero_extendqisi2
 11879              	.LBE1013:
 11880              	.LBE1017:
 11881              	.LBE1022:
 11882              	.LBE1029:
1783:src/keys.c    **** 
 11883              		.loc 1 1783 19 view .LVU3645
 11884 1352 88F80DE0 		strb	lr, [r8, #13]
 11885              	.LBB1030:
 11886              	.LBB1023:
 489:src/keys.c    **** 	}
 11887              		.loc 1 489 10 view .LVU3646
 11888 1356 BAF1020F 		cmp	r10, #2
 491:src/keys.c    **** }
 11889              		.loc 1 491 49 view .LVU3647
 11890 135a 4FF0060E 		mov	lr, #6
 11891 135e 0EFB0C0C 		mla	ip, lr, ip, r0
 489:src/keys.c    **** 	}
 11892              		.loc 1 489 10 view .LVU3648
 11893 1362 14BF     		ite	ne
 11894 1364 5046     		movne	r0, r10
 11895 1366 0520     		moveq	r0, #5
 11896              	.LVL1012:
 491:src/keys.c    **** }
 11897              		.loc 1 491 2 is_stmt 1 view .LVU3649
 11898              	.LBB1018:
 11899              	.LBI1011:
 131:src/keys.c    **** {
 11900              		.loc 1 131 12 view .LVU3650
 11901              	.LBB1014:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11902              		.loc 1 133 2 view .LVU3651
 143:src/keys.c    **** }
 11903              		.loc 1 143 2 view .LVU3652
 143:src/keys.c    **** }
 11904              		.loc 1 143 2 is_stmt 0 view .LVU3653
 11905 1368 063C     		subs	r4, r4, #6
 11906              	.LVL1013:
 143:src/keys.c    **** }
 11907              		.loc 1 143 2 view .LVU3654
 11908              	.LBE1014:
 11909              	.LBE1018:
 491:src/keys.c    **** }
 11910              		.loc 1 491 49 view .LVU3655
 11911 136a 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 11912              	.LVL1014:
 491:src/keys.c    **** }
 11913              		.loc 1 491 49 view .LVU3656
 11914              	.LBE1023:
 11915              	.LBE1030:
1783:src/keys.c    **** 
 11916              		.loc 1 1783 2 is_stmt 1 view .LVU3657
1785:src/keys.c    **** 	case K10:	// STO
 11917              		.loc 1 1785 2 view .LVU3658
 11918 136e 212C     		cmp	r4, #33
 11919 1370 3FF64CA9 		bhi	.L998
ARM GAS  /tmp/ccF3vcso.s 			page 335


 11920 1374 01A1     		adr	r1, .L1116
 11921 1376 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 11922 137a 00BF     		.p2align 2
 11923              	.L1116:
 11924 137c 251E0000 		.word	.L1007+1
 11925 1380 E11D0000 		.word	.L1006+1
 11926 1384 0D060000 		.word	.L998+1
 11927 1388 0D060000 		.word	.L998+1
 11928 138c 0D060000 		.word	.L998+1
 11929 1390 0D060000 		.word	.L998+1
 11930 1394 03190000 		.word	.L1005+1
 11931 1398 0D060000 		.word	.L998+1
 11932 139c 0D060000 		.word	.L998+1
 11933 13a0 0D060000 		.word	.L998+1
 11934 13a4 F3180000 		.word	.L1013+1
 11935 13a8 0D060000 		.word	.L998+1
 11936 13ac E7170000 		.word	.L1003+1
 11937 13b0 0D060000 		.word	.L998+1
 11938 13b4 0D060000 		.word	.L998+1
 11939 13b8 0D060000 		.word	.L998+1
 11940 13bc 0D060000 		.word	.L998+1
 11941 13c0 0D060000 		.word	.L998+1
 11942 13c4 2F1A0000 		.word	.L1002+1
 11943 13c8 0D060000 		.word	.L998+1
 11944 13cc 0D060000 		.word	.L998+1
 11945 13d0 0D060000 		.word	.L998+1
 11946 13d4 0D060000 		.word	.L998+1
 11947 13d8 0D060000 		.word	.L998+1
 11948 13dc 0D060000 		.word	.L998+1
 11949 13e0 0D060000 		.word	.L998+1
 11950 13e4 0D060000 		.word	.L998+1
 11951 13e8 0D060000 		.word	.L998+1
 11952 13ec 0D060000 		.word	.L998+1
 11953 13f0 0D060000 		.word	.L998+1
 11954 13f4 091A0000 		.word	.L1001+1
 11955 13f8 0D060000 		.word	.L998+1
 11956 13fc 0D060000 		.word	.L998+1
 11957 1400 F9190000 		.word	.L999+1
 11958              		.p2align 1
 11959              	.L1429:
 11960              		.align	2
 11961              	.L1428:
 11962 1404 00000000 		.word	.LANCHOR6
 11963 1408 00000000 		.word	.LANCHOR5
 11964 140c 000A4000 		.word	4196864
 11965 1410 00080800 		.word	526336
 11966 1414 00000000 		.word	.LANCHOR17
 11967 1418 00000000 		.word	main_ram
 11968 141c 00000000 		.word	.LANCHOR15
 11969              	.LVL1015:
 11970              	.L1154:
 11971              	.LBB1031:
 11972              	.LBB1024:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 11973              		.loc 1 487 10 is_stmt 0 view .LVU3659
 11974 1420 0420     		movs	r0, #4
 11975              	.LVL1016:
ARM GAS  /tmp/ccF3vcso.s 			page 336


 11976              	.L995:
 491:src/keys.c    **** }
 11977              		.loc 1 491 2 is_stmt 1 view .LVU3660
 11978              	.LBB1019:
 131:src/keys.c    **** {
 11979              		.loc 1 131 12 view .LVU3661
 11980              	.LBB1015:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11981              		.loc 1 133 2 view .LVU3662
 143:src/keys.c    **** }
 11982              		.loc 1 143 2 view .LVU3663
 143:src/keys.c    **** }
 11983              		.loc 1 143 23 is_stmt 0 view .LVU3664
 11984 1422 DFF838C3 		ldr	ip, .L1430+8
 11985              	.LBE1015:
 11986              	.LBE1019:
 491:src/keys.c    **** }
 11987              		.loc 1 491 49 view .LVU3665
 11988 1426 CB49     		ldr	r1, .L1430
 11989              	.LBB1020:
 11990              	.LBB1016:
 143:src/keys.c    **** }
 11991              		.loc 1 143 23 view .LVU3666
 11992 1428 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 11993              	.LBE1016:
 11994              	.LBE1020:
 491:src/keys.c    **** }
 11995              		.loc 1 491 49 view .LVU3667
 11996 142c 4FF0060E 		mov	lr, #6
 11997 1430 0EFB0C1C 		mla	ip, lr, ip, r1
 11998 1434 063C     		subs	r4, r4, #6
 11999              	.LVL1017:
 491:src/keys.c    **** }
 12000              		.loc 1 491 49 view .LVU3668
 12001              	.LBE1024:
 12002              	.LBE1031:
1783:src/keys.c    **** 
 12003              		.loc 1 1783 19 view .LVU3669
 12004 1436 4FF0000E 		mov	lr, #0
 12005              	.LBB1032:
 12006              	.LBB1025:
 491:src/keys.c    **** }
 12007              		.loc 1 491 49 view .LVU3670
 12008 143a 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 12009              	.LVL1018:
 491:src/keys.c    **** }
 12010              		.loc 1 491 49 view .LVU3671
 12011              	.LBE1025:
 12012              	.LBE1032:
1783:src/keys.c    **** 
 12013              		.loc 1 1783 2 is_stmt 1 view .LVU3672
1783:src/keys.c    **** 
 12014              		.loc 1 1783 19 is_stmt 0 view .LVU3673
 12015 143e 88F80DE0 		strb	lr, [r8, #13]
1785:src/keys.c    **** 	case K10:	// STO
 12016              		.loc 1 1785 2 is_stmt 1 view .LVU3674
 12017 1442 212C     		cmp	r4, #33
ARM GAS  /tmp/ccF3vcso.s 			page 337


 12018 1444 3FF6E2A8 		bhi	.L998
 12019 1448 01A1     		adr	r1, .L1000
 12020 144a 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 12021 144e 00BF     		.p2align 2
 12022              	.L1000:
 12023 1450 251E0000 		.word	.L1007+1
 12024 1454 E11D0000 		.word	.L1006+1
 12025 1458 0D060000 		.word	.L998+1
 12026 145c 0D060000 		.word	.L998+1
 12027 1460 0D060000 		.word	.L998+1
 12028 1464 0D060000 		.word	.L998+1
 12029 1468 03190000 		.word	.L1005+1
 12030 146c 0D060000 		.word	.L998+1
 12031 1470 0D060000 		.word	.L998+1
 12032 1474 0D060000 		.word	.L998+1
 12033 1478 EB180000 		.word	.L1004+1
 12034 147c 0D060000 		.word	.L998+1
 12035 1480 E7170000 		.word	.L1003+1
 12036 1484 0D060000 		.word	.L998+1
 12037 1488 0D060000 		.word	.L998+1
 12038 148c 0D060000 		.word	.L998+1
 12039 1490 0D060000 		.word	.L998+1
 12040 1494 0D060000 		.word	.L998+1
 12041 1498 2F1A0000 		.word	.L1002+1
 12042 149c 0D060000 		.word	.L998+1
 12043 14a0 0D060000 		.word	.L998+1
 12044 14a4 0D060000 		.word	.L998+1
 12045 14a8 0D060000 		.word	.L998+1
 12046 14ac 0D060000 		.word	.L998+1
 12047 14b0 0D060000 		.word	.L998+1
 12048 14b4 0D060000 		.word	.L998+1
 12049 14b8 0D060000 		.word	.L998+1
 12050 14bc 0D060000 		.word	.L998+1
 12051 14c0 0D060000 		.word	.L998+1
 12052 14c4 0D060000 		.word	.L998+1
 12053 14c8 091A0000 		.word	.L1001+1
 12054 14cc 0D060000 		.word	.L998+1
 12055 14d0 0D060000 		.word	.L998+1
 12056 14d4 F9190000 		.word	.L999+1
 12057              	.LVL1019:
 12058              		.p2align 1
 12059              	.L1376:
1785:src/keys.c    **** 	case K10:	// STO
 12060              		.loc 1 1785 2 is_stmt 0 view .LVU3675
 12061              	.LBE1040:
 12062              	.LBE1048:
 12063              	.LBE1361:
 12064              	.LBB1362:
 12065              	.LBB1192:
1740:src/keys.c    **** 			goto fin2;
 12066              		.loc 1 1740 3 is_stmt 1 view .LVU3676
1740:src/keys.c    **** 			goto fin2;
 12067              		.loc 1 1740 13 is_stmt 0 view .LVU3677
 12068 14d8 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 12069              	.LVL1020:
1740:src/keys.c    **** 			goto fin2;
 12070              		.loc 1 1740 6 view .LVU3678
ARM GAS  /tmp/ccF3vcso.s 			page 338


 12071 14dc 002B     		cmp	r3, #0
 12072 14de 3FF449AA 		beq	.L846
1743:src/keys.c    **** 			State2.digval /= 10;
 12073              		.loc 1 1743 4 is_stmt 1 view .LVU3679
1743:src/keys.c    **** 			State2.digval /= 10;
 12074              		.loc 1 1743 19 is_stmt 0 view .LVU3680
 12075 14e2 013B     		subs	r3, r3, #1
1744:src/keys.c    **** 		}
 12076              		.loc 1 1744 18 view .LVU3681
 12077 14e4 B8F80820 		ldrh	r2, [r8, #8]
 12078              	.LVL1021:
1743:src/keys.c    **** 			State2.digval /= 10;
 12079              		.loc 1 1743 19 view .LVU3682
 12080 14e8 88F80B30 		strb	r3, [r8, #11]
1744:src/keys.c    **** 		}
 12081              		.loc 1 1744 4 is_stmt 1 view .LVU3683
1744:src/keys.c    **** 		}
 12082              		.loc 1 1744 18 is_stmt 0 view .LVU3684
 12083 14ec 0A21     		movs	r1, #10
 12084              	.LVL1022:
1744:src/keys.c    **** 		}
 12085              		.loc 1 1744 18 view .LVU3685
 12086 14ee 3368     		ldr	r3, [r6]
 12087 14f0 B2FBF1F2 		udiv	r2, r2, r1
 12088              	.LBE1192:
 12089              	.LBE1362:
3286:src/keys.c    **** 
 12090              		.loc 1 3286 10 view .LVU3686
 12091 14f4 3324     		movs	r4, #51
 12092              	.LVL1023:
 12093              	.LBB1363:
 12094              	.LBB1193:
1744:src/keys.c    **** 		}
 12095              		.loc 1 1744 18 view .LVU3687
 12096 14f6 A8F80820 		strh	r2, [r8, #8]	@ movhi
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 12097              		.loc 1 1765 2 is_stmt 1 view .LVU3688
 12098 14fa FEF7DEBD 		b	.L796
 12099              	.LVL1024:
 12100              	.L1355:
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
 12101              		.loc 1 1765 2 is_stmt 0 view .LVU3689
 12102              	.LBE1193:
 12103              	.LBE1363:
3372:src/keys.c    **** 		// print_debug (3, c);
 12104              		.loc 1 3372 4 is_stmt 1 view .LVU3690
3372:src/keys.c    **** 		// print_debug (3, c);
 12105              		.loc 1 3372 11 is_stmt 0 view .LVU3691
 12106 14fe FFF7FEFF 		bl	process_h_shifted
 12107              	.LVL1025:
 12108 1502 0446     		mov	r4, r0
 12109 1504 FEF772BF 		b	.L830
 12110              	.LVL1026:
 12111              	.L1390:
 12112              	.LBB1364:
 12113              	.LBB1135:
2818:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
ARM GAS  /tmp/ccF3vcso.s 			page 339


 12114              		.loc 1 2818 3 is_stmt 1 view .LVU3692
2818:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12115              		.loc 1 2818 12 is_stmt 0 view .LVU3693
 12116 1508 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 12117 150c 2046     		mov	r0, r4
 12118 150e 941E     		subs	r4, r2, #2
 12119              	.LVL1027:
2818:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12120              		.loc 1 2818 12 view .LVU3694
 12121 1510 6242     		rsbs	r2, r4, #0
 12122 1512 6241     		adcs	r2, r2, r4
 12123 1514 FFF7FEFF 		bl	process_catalogue
 12124              	.LVL1028:
2819:src/keys.c    **** 			return opcode;
 12125              		.loc 1 2819 6 view .LVU3695
 12126 1518 3328     		cmp	r0, #51
2818:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12127              		.loc 1 2818 12 view .LVU3696
 12128 151a 0446     		mov	r4, r0
 12129              	.LVL1029:
2819:src/keys.c    **** 			return opcode;
 12130              		.loc 1 2819 3 is_stmt 1 view .LVU3697
2819:src/keys.c    **** 			return opcode;
 12131              		.loc 1 2819 6 is_stmt 0 view .LVU3698
 12132 151c 3EF4C7AF 		beq	.L1317
2821:src/keys.c    **** 		goto add_char;
 12133              		.loc 1 2821 3 is_stmt 1 view .LVU3699
2821:src/keys.c    **** 		goto add_char;
 12134              		.loc 1 2821 6 is_stmt 0 view .LVU3700
 12135 1520 C4B2     		uxtb	r4, r0
 12136              	.LVL1030:
2822:src/keys.c    **** 	}
 12137              		.loc 1 2822 3 is_stmt 1 view .LVU3701
 12138 1522 14E4     		b	.L925
 12139              	.LVL1031:
 12140              	.L1366:
2822:src/keys.c    **** 	}
 12141              		.loc 1 2822 3 is_stmt 0 view .LVU3702
 12142              	.LBE1135:
 12143              	.LBE1364:
3254:src/keys.c    **** 	CLEAR_REAL;
 12144              		.loc 1 3254 2 is_stmt 1 view .LVU3703
 12145              	.LBB1365:
 12146              	.LBI1365:
1247:src/keys.c    **** 	// called if number entry terminated by EXIT key
 12147              		.loc 1 1247 13 view .LVU3704
 12148              	.LBB1366:
1251:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12149              		.loc 1 1251 2 view .LVU3705
1251:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12150              		.loc 1 1251 5 is_stmt 0 view .LVU3706
 12151 1524 13F0060F 		tst	r3, #6
 12152 1528 2FD0     		beq	.L811
1252:src/keys.c    **** 		drop ( OP_DROPXY );
 12153              		.loc 1 1252 2 is_stmt 1 view .LVU3707
1252:src/keys.c    **** 		drop ( OP_DROPXY );
 12154              		.loc 1 1252 5 is_stmt 0 view .LVU3708
ARM GAS  /tmp/ccF3vcso.s 			page 340


 12155 152a DC06     		lsls	r4, r3, #27
 12156              	.LVL1032:
1252:src/keys.c    **** 		drop ( OP_DROPXY );
 12157              		.loc 1 1252 5 view .LVU3709
 12158 152c 40F1A681 		bpl	.L812
1253:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 12159              		.loc 1 1253 3 is_stmt 1 view .LVU3710
 12160 1530 0F20     		movs	r0, #15
 12161 1532 FFF7FEFF 		bl	drop
 12162              	.LVL1033:
1254:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12163              		.loc 1 1254 3 view .LVU3711
 12164 1536 6A20     		movs	r0, #106
 12165 1538 FFF7FEFF 		bl	get_reg_n
 12166              	.LVL1034:
 12167 153c 0446     		mov	r4, r0
1254:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12168              		.loc 1 1254 33 is_stmt 0 view .LVU3712
 12169 153e 6E20     		movs	r0, #110
 12170 1540 FFF7FEFF 		bl	get_reg_n
 12171              	.LVL1035:
 12172 1544 0146     		mov	r1, r0
1254:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12173              		.loc 1 1254 3 view .LVU3713
 12174 1546 2046     		mov	r0, r4
 12175 1548 FFF7FEFF 		bl	copyreg
 12176              	.LVL1036:
1255:src/keys.c    **** 	}
 12177              		.loc 1 1255 3 is_stmt 1 view .LVU3714
 12178 154c 6B20     		movs	r0, #107
 12179              	.L1309:
1259:src/keys.c    **** 	}
 12180              		.loc 1 1259 3 is_stmt 0 view .LVU3715
 12181 154e FFF7FEFF 		bl	get_reg_n
 12182              	.LVL1037:
 12183 1552 0446     		mov	r4, r0
1259:src/keys.c    **** 	}
 12184              		.loc 1 1259 33 view .LVU3716
 12185 1554 6F20     		movs	r0, #111
 12186 1556 FFF7FEFF 		bl	get_reg_n
 12187              	.LVL1038:
 12188 155a 0146     		mov	r1, r0
1259:src/keys.c    **** 	}
 12189              		.loc 1 1259 3 view .LVU3717
 12190 155c 2046     		mov	r0, r4
 12191 155e FFF7FEFF 		bl	copyreg
 12192              	.LVL1039:
1261:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12193              		.loc 1 1261 2 is_stmt 1 view .LVU3718
1261:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12194              		.loc 1 1261 22 is_stmt 0 view .LVU3719
 12195 1562 DBF80020 		ldr	r2, [fp]
1261:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12196              		.loc 1 1261 20 view .LVU3720
 12197 1566 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1261:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12198              		.loc 1 1261 22 view .LVU3721
ARM GAS  /tmp/ccF3vcso.s 			page 341


 12199 156a 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 12200 156e C3F30013 		ubfx	r3, r3, #4, #1
1261:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12201              		.loc 1 1261 20 view .LVU3722
 12202 1572 63F38611 		bfi	r1, r3, #6, #1
 12203 1576 88F81710 		strb	r1, [r8, #23]
1262:src/keys.c    **** 	CLEAR_POLAR_READY;
 12204              		.loc 1 1262 2 is_stmt 1 view .LVU3723
1263:src/keys.c    **** }
 12205              		.loc 1 1263 2 view .LVU3724
1262:src/keys.c    **** 	CLEAR_POLAR_READY;
 12206              		.loc 1 1262 2 is_stmt 0 view .LVU3725
 12207 157a B2F8AC37 		ldrh	r3, [r2, #1964]
 12208 157e 23F48873 		bic	r3, r3, #272
 12209 1582 43F48073 		orr	r3, r3, #256
 12210 1586 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 12211              	.L811:
 12212              	.LBE1366:
 12213              	.LBE1365:
3255:src/keys.c    **** 	CLEAR_IMAG;
 12214              		.loc 1 3255 2 is_stmt 1 view .LVU3726
 12215 158a DBF80020 		ldr	r2, [fp]
3256:src/keys.c    ****       }
 12216              		.loc 1 3256 2 view .LVU3727
3255:src/keys.c    **** 	CLEAR_IMAG;
 12217              		.loc 1 3255 2 is_stmt 0 view .LVU3728
 12218 158e 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 12219 1592 23F00603 		bic	r3, r3, #6
 12220 1596 82F8AC37 		strb	r3, [r2, #1964]
 12221 159a FFF751B9 		b	.L810
 12222              	.LVL1040:
 12223              	.L1036:
 12224              	.LBB1368:
 12225              	.LBB966:
1306:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12226              		.loc 1 1306 4 is_stmt 1 view .LVU3729
1306:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12227              		.loc 1 1306 7 is_stmt 0 view .LVU3730
 12228 159e 0F2C     		cmp	r4, #15
 12229 15a0 40F0A380 		bne	.L1037
1307:src/keys.c    ****        reset_shift();
 12230              		.loc 1 1307 6 is_stmt 1 view .LVU3731
1307:src/keys.c    ****        reset_shift();
 12231              		.loc 1 1307 9 is_stmt 0 view .LVU3732
 12232 15a4 BAF1010F 		cmp	r10, #1
 12233 15a8 00F0EE83 		beq	.L1403
 12234              	.LBB888:
1323:src/keys.c    **** #endif
 12235              		.loc 1 1323 8 is_stmt 1 view .LVU3733
 12236              	.LVL1041:
1325:src/keys.c    **** 	 finish_cpx_entry(1);
 12237              		.loc 1 1325 8 view .LVU3734
1325:src/keys.c    **** 	 finish_cpx_entry(1);
 12238              		.loc 1 1325 11 is_stmt 0 view .LVU3735
 12239 15ac BAF1030F 		cmp	r10, #3
 12240 15b0 00F0E183 		beq	.L1404
 12241              	.LBE888:
ARM GAS  /tmp/ccF3vcso.s 			page 342


1332:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12242              		.loc 1 1332 4 is_stmt 1 view .LVU3736
1332:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12243              		.loc 1 1332 7 is_stmt 0 view .LVU3737
 12244 15b4 BAF1000F 		cmp	r10, #0
 12245 15b8 00F0D881 		beq	.L1072
 12246              	.LVL1042:
 12247              	.L1121:
1333:src/keys.c    ****      switch (c) {
 12248              		.loc 1 1333 6 is_stmt 1 view .LVU3738
 12249 15bc 0020     		movs	r0, #0
 12250 15be FFF7FEFF 		bl	finish_cpx_entry
 12251              	.LVL1043:
1334:src/keys.c    ****      case (K60):
 12252              		.loc 1 1334 6 view .LVU3739
 12253              	.L1312:
1334:src/keys.c    ****      case (K60):
 12254              		.loc 1 1334 6 is_stmt 0 view .LVU3740
 12255              	.LBE966:
 12256              	.LBE1368:
3367:src/keys.c    **** 	} else {
 12257              		.loc 1 3367 3 is_stmt 1 view .LVU3741
3367:src/keys.c    **** 	} else {
 12258              		.loc 1 3367 10 is_stmt 0 view .LVU3742
 12259 15c2 2046     		mov	r0, r4
 12260              	.L1316:
 12261 15c4 FFF7FEFF 		bl	process_cmplx
 12262              	.LVL1044:
 12263 15c8 0446     		mov	r4, r0
 12264 15ca FEF70FBF 		b	.L830
 12265              	.LVL1045:
 12266              	.L926:
 12267              	.LBB1369:
 12268              	.LBB1136:
2837:src/keys.c    **** 			if (State2.numdigit == 0)
 12269              		.loc 1 2837 3 is_stmt 1 view .LVU3743
2837:src/keys.c    **** 			if (State2.numdigit == 0)
 12270              		.loc 1 2837 6 is_stmt 0 view .LVU3744
 12271 15ce 0329     		cmp	r1, #3
 12272 15d0 3FF4B3AB 		beq	.L932
2838:src/keys.c    **** 				reset_multi();
 12273              		.loc 1 2838 4 is_stmt 1 view .LVU3745
2838:src/keys.c    **** 				reset_multi();
 12274              		.loc 1 2838 14 is_stmt 0 view .LVU3746
 12275 15d4 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2838:src/keys.c    **** 				reset_multi();
 12276              		.loc 1 2838 7 view .LVU3747
 12277 15d8 002A     		cmp	r2, #0
 12278 15da 40F06481 		bne	.L933
2839:src/keys.c    **** 			else
 12279              		.loc 1 2839 5 is_stmt 1 view .LVU3748
 12280              	.LBB1126:
 12281              	.LBI1126:
2804:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12282              		.loc 1 2804 13 view .LVU3749
 12283              	.LBB1127:
2806:src/keys.c    **** 	if (! State2.alphas )
ARM GAS  /tmp/ccF3vcso.s 			page 343


 12284              		.loc 1 2806 2 view .LVU3750
2806:src/keys.c    **** 	if (! State2.alphas )
 12285              		.loc 1 2806 15 is_stmt 0 view .LVU3751
 12286 15de 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12287              	.LVL1046:
2807:src/keys.c    **** 		State2.alphashift = 0;
 12288              		.loc 1 2807 6 view .LVU3752
 12289 15e2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2806:src/keys.c    **** 	if (! State2.alphas )
 12290              		.loc 1 2806 15 view .LVU3753
 12291 15e6 62F3C301 		bfi	r1, r2, #3, #1
2807:src/keys.c    **** 		State2.alphashift = 0;
 12292              		.loc 1 2807 5 view .LVU3754
 12293 15ea 13F00802 		ands	r2, r3, #8
2806:src/keys.c    **** 	if (! State2.alphas )
 12294              		.loc 1 2806 15 view .LVU3755
 12295 15ee 88F81510 		strb	r1, [r8, #21]
2807:src/keys.c    **** 		State2.alphashift = 0;
 12296              		.loc 1 2807 2 is_stmt 1 view .LVU3756
2807:src/keys.c    **** 		State2.alphashift = 0;
 12297              		.loc 1 2807 5 is_stmt 0 view .LVU3757
 12298 15f2 3FF4CAA8 		beq	.L936
 12299 15f6 FFF7CCB8 		b	.L1321
 12300              	.LVL1047:
 12301              	.L1031:
2807:src/keys.c    **** 		State2.alphashift = 0;
 12302              		.loc 1 2807 5 view .LVU3758
 12303              	.LBE1127:
 12304              	.LBE1126:
 12305              	.LBE1136:
 12306              	.LBE1369:
 12307              	.LBB1370:
 12308              	.LBB967:
1299:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12309              		.loc 1 1299 4 is_stmt 1 view .LVU3759
1299:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12310              		.loc 1 1299 7 is_stmt 0 view .LVU3760
 12311 15fa BAF1020F 		cmp	r10, #2
 12312 15fe 6BD1     		bne	.L1033
1299:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12313              		.loc 1 1299 28 view .LVU3761
 12314 1600 A01F     		subs	r0, r4, #6
 12315 1602 C0B2     		uxtb	r0, r0
 12316 1604 0228     		cmp	r0, #2
 12317 1606 00F26182 		bhi	.L1034
1300:src/keys.c    ****    }
 12318              		.loc 1 1300 6 is_stmt 1 view .LVU3762
 12319 160a FFF7FEFF 		bl	convert_regK
 12320              	.LVL1048:
1302:src/keys.c    ****      return process_fg_shifted (c);
 12321              		.loc 1 1302 4 view .LVU3763
 12322              	.L1314:
1302:src/keys.c    ****      return process_fg_shifted (c);
 12323              		.loc 1 1302 4 is_stmt 0 view .LVU3764
 12324              	.LBE967:
 12325              	.LBE1370:
3370:src/keys.c    **** 		if (shift == SHIFT_H)
ARM GAS  /tmp/ccF3vcso.s 			page 344


 12326              		.loc 1 3370 4 is_stmt 1 view .LVU3765
3370:src/keys.c    **** 		if (shift == SHIFT_H)
 12327              		.loc 1 3370 11 is_stmt 0 view .LVU3766
 12328 160e 2046     		mov	r0, r4
 12329 1610 FFF7FEFF 		bl	process_fg_shifted
 12330              	.LVL1049:
 12331 1614 0446     		mov	r4, r0
 12332 1616 FEF7E9BE 		b	.L830
 12333              	.LVL1050:
 12334              	.L1381:
 12335              	.LBB1371:
 12336              	.LBB1231:
 12337              	.LBB1223:
2936:src/keys.c    **** 		else if (nn != NO_REG)
 12338              		.loc 1 2936 4 is_stmt 1 view .LVU3767
2938:src/keys.c    **** 	}
 12339              		.loc 1 2938 6 is_stmt 0 view .LVU3768
 12340 161a 9A42     		cmp	r2, r3
 12341 161c 08BF     		it	eq
 12342 161e 0A23     		moveq	r3, #10
 12343              	.LVL1051:
2938:src/keys.c    **** 	}
 12344              		.loc 1 2938 6 view .LVU3769
 12345 1620 FFF732BA 		b	.L879
 12346              	.LVL1052:
 12347              	.L1397:
2938:src/keys.c    **** 	}
 12348              		.loc 1 2938 6 view .LVU3770
 12349              	.LBE1223:
 12350              	.LBE1231:
 12351              	.LBE1371:
 12352              	.LBB1372:
 12353              	.LBB1334:
3128:src/keys.c    **** 	const int g_max = global_regs();
 12354              		.loc 1 3128 33 view .LVU3771
 12355 1624 FFF7FEFF 		bl	local_regs
 12356              	.LVL1053:
 12357 1628 8246     		mov	r10, r0
 12358 162a 7FE5     		b	.L968
 12359              	.LVL1054:
 12360              	.L1400:
3144:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 12361              		.loc 1 3144 50 view .LVU3772
 12362 162c 0D2C     		cmp	r4, #13
 12363 162e 7FF48DAD 		bne	.L976
3145:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12364              		.loc 1 3145 3 is_stmt 1 view .LVU3773
 12365 1632 B9F1010F 		cmp	r9, #1
 12366 1636 14BF     		ite	ne
 12367 1638 2C20     		movne	r0, #44
 12368              	.LVL1055:
3145:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12369              		.loc 1 3145 3 is_stmt 0 view .LVU3774
 12370 163a 2B20     		moveq	r0, #43
 12371 163c FFF7FEFF 		bl	set_window
 12372              	.LVL1056:
3146:src/keys.c    **** 	}
ARM GAS  /tmp/ccF3vcso.s 			page 345


 12373              		.loc 1 3146 3 is_stmt 1 view .LVU3775
 12374              	.LBB1330:
 12375              	.LBI1330:
 743:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 12376              		.loc 1 743 13 view .LVU3776
 12377              	.LBB1331:
 744:src/keys.c    **** }
 12378              		.loc 1 744 2 view .LVU3777
 744:src/keys.c    **** }
 12379              		.loc 1 744 15 is_stmt 0 view .LVU3778
 12380 1640 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 12381 1644 3368     		ldr	r3, [r6]
 12382 1646 013A     		subs	r2, r2, #1
 12383 1648 18BF     		it	ne
 12384 164a 0122     		movne	r2, #1
 12385 164c 88F81120 		strb	r2, [r8, #17]
 12386              	.LVL1057:
 744:src/keys.c    **** }
 12387              		.loc 1 744 15 view .LVU3779
 12388              	.LBE1331:
 12389              	.LBE1330:
3153:src/keys.c    **** 	case K_DOWN:
 12390              		.loc 1 3153 2 is_stmt 1 view .LVU3780
3153:src/keys.c    **** 	case K_DOWN:
 12391              		.loc 1 3153 2 is_stmt 0 view .LVU3781
 12392              	.LBE1334:
 12393              	.LBE1372:
 12394              	.LBE1457:
 12395              	.LBE1530:
3615:src/keys.c    ****     case STATE_SST:
 12396              		.loc 1 3615 5 is_stmt 1 view .LVU3782
 12397              	.LBB1531:
 12398              	.LBB1458:
 12399              	.LBB1373:
 12400              	.LBB1335:
3204:src/keys.c    **** 	}
 12401              		.loc 1 3204 10 is_stmt 0 view .LVU3783
 12402 1650 3324     		movs	r4, #51
 12403 1652 FEF732BD 		b	.L796
 12404              	.LVL1058:
 12405              	.L1391:
3204:src/keys.c    **** 	}
 12406              		.loc 1 3204 10 view .LVU3784
 12407              	.LBE1335:
 12408              	.LBE1373:
 12409              	.LBB1374:
 12410              	.LBB1137:
2827:src/keys.c    **** 				break;
 12411              		.loc 1 2827 3 is_stmt 1 view .LVU3785
2827:src/keys.c    **** 				break;
 12412              		.loc 1 2827 6 is_stmt 0 view .LVU3786
 12413 1656 0029     		cmp	r1, #0
 12414 1658 7FF467AB 		bne	.L928
2829:src/keys.c    **** 		if (State2.numdigit == 0)
 12415              		.loc 1 2829 3 is_stmt 1 view .LVU3787
 12416              	.LBB1128:
 12417              	.LBI1128:
ARM GAS  /tmp/ccF3vcso.s 			page 346


2804:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12418              		.loc 1 2804 13 view .LVU3788
 12419              	.LBB1129:
2806:src/keys.c    **** 	if (! State2.alphas )
 12420              		.loc 1 2806 2 view .LVU3789
2806:src/keys.c    **** 	if (! State2.alphas )
 12421              		.loc 1 2806 15 is_stmt 0 view .LVU3790
 12422 165c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2807:src/keys.c    **** 		State2.alphashift = 0;
 12423              		.loc 1 2807 6 view .LVU3791
 12424 1660 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2806:src/keys.c    **** 	if (! State2.alphas )
 12425              		.loc 1 2806 15 view .LVU3792
 12426 1664 61F3C302 		bfi	r2, r1, #3, #1
 12427 1668 88F81520 		strb	r2, [r8, #21]
2807:src/keys.c    **** 		State2.alphashift = 0;
 12428              		.loc 1 2807 2 is_stmt 1 view .LVU3793
2807:src/keys.c    **** 		State2.alphashift = 0;
 12429              		.loc 1 2807 5 is_stmt 0 view .LVU3794
 12430 166c 1A07     		lsls	r2, r3, #28
2808:src/keys.c    **** }
 12431              		.loc 1 2808 3 is_stmt 1 view .LVU3795
 12432              	.LBE1129:
 12433              	.LBE1128:
2830:src/keys.c    **** 			return STATE_UNFINISHED;
 12434              		.loc 1 2830 3 view .LVU3796
 12435              	.LBB1131:
 12436              	.LBB1130:
2808:src/keys.c    **** }
 12437              		.loc 1 2808 21 is_stmt 0 view .LVU3797
 12438 166e 5CBF     		itt	pl
 12439 1670 61F30413 		bfipl	r3, r1, #4, #1
 12440 1674 88F81630 		strbpl	r3, [r8, #22]
 12441              	.LBE1130:
 12442              	.LBE1131:
2830:src/keys.c    **** 			return STATE_UNFINISHED;
 12443              		.loc 1 2830 13 view .LVU3798
 12444 1678 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2830:src/keys.c    **** 			return STATE_UNFINISHED;
 12445              		.loc 1 2830 6 view .LVU3799
 12446 167c 002B     		cmp	r3, #0
 12447 167e 3FF488A8 		beq	.L1321
2832:src/keys.c    **** 			State2.digval2 = 0;
 12448              		.loc 1 2832 8 is_stmt 1 view .LVU3800
2832:src/keys.c    **** 			State2.digval2 = 0;
 12449              		.loc 1 2832 11 is_stmt 0 view .LVU3801
 12450 1682 012B     		cmp	r3, #1
2833:src/keys.c    **** 		goto fin;
 12451              		.loc 1 2833 19 view .LVU3802
 12452 1684 4FF00004 		mov	r4, #0
 12453              	.LVL1059:
2832:src/keys.c    **** 			State2.digval2 = 0;
 12454              		.loc 1 2832 11 view .LVU3803
 12455 1688 7FF478AB 		bne	.L931
2833:src/keys.c    **** 		goto fin;
 12456              		.loc 1 2833 4 is_stmt 1 view .LVU3804
2833:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/ccF3vcso.s 			page 347


 12457              		.loc 1 2833 19 is_stmt 0 view .LVU3805
 12458 168c 88F80A40 		strb	r4, [r8, #10]
 12459 1690 FFF774BB 		b	.L931
 12460              	.LVL1060:
 12461              	.L1146:
2833:src/keys.c    **** 		goto fin;
 12462              		.loc 1 2833 19 view .LVU3806
 12463              	.LBE1137:
 12464              	.LBE1374:
 12465              	.LBB1375:
 12466              	.LBB1090:
2997:src/keys.c    **** 	const int opcode = getprog(pc);
 12467              		.loc 1 2997 27 view .LVU3807
 12468 1694 4FF0030A 		mov	r10, #3
 12469 1698 FFF7E5BB 		b	.L940
 12470              	.LVL1061:
 12471              	.L1347:
2997:src/keys.c    **** 	const int opcode = getprog(pc);
 12472              		.loc 1 2997 27 view .LVU3808
 12473 169c 0093     		str	r3, [sp]
 12474              	.LBE1090:
 12475              	.LBE1375:
 12476              	.LBB1376:
 12477              	.LBB866:
 12478              	.LBB856:
 373:src/keys.c    **** #else
 12479              		.loc 1 373 45 view .LVU3809
 12480 169e FFF7FEFF 		bl	shift_down
 12481              	.LVL1062:
 373:src/keys.c    **** #else
 12482              		.loc 1 373 42 view .LVU3810
 12483 16a2 0328     		cmp	r0, #3
 12484 16a4 009B     		ldr	r3, [sp]
 12485 16a6 00F0F680 		beq	.L912
 12486 16aa 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 371:src/keys.c    **** #ifndef WINGUI
 12487              		.loc 1 371 8 view .LVU3811
 12488 16ae 2A4A     		ldr	r2, .L1430+4
 373:src/keys.c    **** #else
 12489              		.loc 1 373 73 view .LVU3812
 12490 16b0 D646     		mov	lr, r10
 377:src/keys.c    ****   }
 12491              		.loc 1 377 9 view .LVU3813
 12492 16b2 0C20     		movs	r0, #12
 12493 16b4 FEF7D9BD 		b	.L911
 12494              	.LVL1063:
 12495              	.L1354:
 377:src/keys.c    ****   }
 12496              		.loc 1 377 9 view .LVU3814
 12497              	.LBE856:
 12498              	.LBE866:
 12499              	.LBE1376:
3363:src/keys.c    **** 	}
 12500              		.loc 1 3363 3 is_stmt 1 view .LVU3815
 12501              	.LBB1377:
 12502              	.LBI874:
1288:src/keys.c    **** 
ARM GAS  /tmp/ccF3vcso.s 			page 348


 12503              		.loc 1 1288 13 view .LVU3816
 12504              	.LBB968:
1290:src/keys.c    **** 
 12505              		.loc 1 1290 4 view .LVU3817
 12506              	.LBB889:
 12507              	.LBI889:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12508              		.loc 1 96 13 view .LVU3818
 12509              	.LBB890:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12510              		.loc 1 97 2 view .LVU3819
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12511              		.loc 1 97 18 is_stmt 0 view .LVU3820
 12512 16b8 FFF7FEFF 		bl	shift_down
 12513              	.LVL1064:
  98:src/keys.c    **** }
 12514              		.loc 1 98 2 is_stmt 1 view .LVU3821
  98:src/keys.c    **** }
 12515              		.loc 1 98 52 is_stmt 0 view .LVU3822
 12516 16bc 8246     		mov	r10, r0
 12517 16be 08B9     		cbnz	r0, .L1030
 12518 16c0 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 12519              	.L1030:
 12520              	.LVL1065:
  98:src/keys.c    **** }
 12521              		.loc 1 98 52 view .LVU3823
 12522              	.LBE890:
 12523              	.LBE889:
1294:src/keys.c    ****      return process_h_shifted (c);
 12524              		.loc 1 1294 4 is_stmt 1 view .LVU3824
1294:src/keys.c    ****      return process_h_shifted (c);
 12525              		.loc 1 1294 7 is_stmt 0 view .LVU3825
 12526 16c4 042C     		cmp	r4, #4
 12527 16c6 98D8     		bhi	.L1031
1294:src/keys.c    ****      return process_h_shifted (c);
 12528              		.loc 1 1294 19 view .LVU3826
 12529 16c8 BAF1030F 		cmp	r10, #3
 12530 16cc 00F07283 		beq	.L1405
1299:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12531              		.loc 1 1299 4 is_stmt 1 view .LVU3827
1299:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12532              		.loc 1 1299 7 is_stmt 0 view .LVU3828
 12533 16d0 BAF1020F 		cmp	r10, #2
 12534 16d4 00F0FA81 		beq	.L1034
 12535              	.L1033:
1302:src/keys.c    ****      return process_fg_shifted (c);
 12536              		.loc 1 1302 4 is_stmt 1 view .LVU3829
1302:src/keys.c    ****      return process_fg_shifted (c);
 12537              		.loc 1 1302 7 is_stmt 0 view .LVU3830
 12538 16d8 631F     		subs	r3, r4, #5
 12539 16da 032B     		cmp	r3, #3
 12540 16dc 3FF65FAF 		bhi	.L1036
1302:src/keys.c    ****      return process_fg_shifted (c);
 12541              		.loc 1 1302 55 view .LVU3831
 12542 16e0 0AF1FF33 		add	r3, r10, #-1
1302:src/keys.c    ****      return process_fg_shifted (c);
 12543              		.loc 1 1302 34 view .LVU3832
ARM GAS  /tmp/ccF3vcso.s 			page 349


 12544 16e4 DBB2     		uxtb	r3, r3
 12545 16e6 012B     		cmp	r3, #1
 12546 16e8 91D9     		bls	.L1314
 12547              	.L1037:
1332:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12548              		.loc 1 1332 4 is_stmt 1 view .LVU3833
1332:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12549              		.loc 1 1332 7 is_stmt 0 view .LVU3834
 12550 16ea BAF1000F 		cmp	r10, #0
 12551 16ee 40F0F481 		bne	.L1307
1412:src/keys.c    ****    case (K61):
 12552              		.loc 1 1412 4 is_stmt 1 view .LVU3835
 12553 16f2 231F     		subs	r3, r4, #4
 12554 16f4 292B     		cmp	r3, #41
 12555 16f6 00F23083 		bhi	.L1068
 12556 16fa DFE813F0 		tbh	[pc, r3, lsl #1]
 12557              	.L1070:
 12558 16fe 3E01     		.2byte	(.L1071-.L1070)/2
 12559 1700 2E03     		.2byte	(.L1068-.L1070)/2
 12560 1702 2E03     		.2byte	(.L1068-.L1070)/2
 12561 1704 2E03     		.2byte	(.L1068-.L1070)/2
 12562 1706 2E03     		.2byte	(.L1068-.L1070)/2
 12563 1708 2E03     		.2byte	(.L1068-.L1070)/2
 12564 170a 2E03     		.2byte	(.L1068-.L1070)/2
 12565 170c 2E03     		.2byte	(.L1068-.L1070)/2
 12566 170e 2E03     		.2byte	(.L1068-.L1070)/2
 12567 1710 2E03     		.2byte	(.L1068-.L1070)/2
 12568 1712 2303     		.2byte	(.L1073-.L1070)/2
 12569 1714 3701     		.2byte	(.L1072-.L1070)/2
 12570 1716 3E01     		.2byte	(.L1071-.L1070)/2
 12571 1718 2E03     		.2byte	(.L1068-.L1070)/2
 12572 171a 2E03     		.2byte	(.L1068-.L1070)/2
 12573 171c 3701     		.2byte	(.L1072-.L1070)/2
 12574 171e 3701     		.2byte	(.L1072-.L1070)/2
 12575 1720 3701     		.2byte	(.L1072-.L1070)/2
 12576 1722 2E03     		.2byte	(.L1068-.L1070)/2
 12577 1724 2E03     		.2byte	(.L1068-.L1070)/2
 12578 1726 2E03     		.2byte	(.L1068-.L1070)/2
 12579 1728 3701     		.2byte	(.L1072-.L1070)/2
 12580 172a 3701     		.2byte	(.L1072-.L1070)/2
 12581 172c 3701     		.2byte	(.L1072-.L1070)/2
 12582 172e 2E03     		.2byte	(.L1068-.L1070)/2
 12583 1730 2E03     		.2byte	(.L1068-.L1070)/2
 12584 1732 2E03     		.2byte	(.L1068-.L1070)/2
 12585 1734 3701     		.2byte	(.L1072-.L1070)/2
 12586 1736 3701     		.2byte	(.L1072-.L1070)/2
 12587 1738 3701     		.2byte	(.L1072-.L1070)/2
 12588 173a 2E03     		.2byte	(.L1068-.L1070)/2
 12589 173c 2E03     		.2byte	(.L1068-.L1070)/2
 12590 173e 2E03     		.2byte	(.L1068-.L1070)/2
 12591 1740 3701     		.2byte	(.L1072-.L1070)/2
 12592 1742 3701     		.2byte	(.L1072-.L1070)/2
 12593 1744 2E03     		.2byte	(.L1068-.L1070)/2
 12594 1746 2E03     		.2byte	(.L1068-.L1070)/2
 12595 1748 2E03     		.2byte	(.L1068-.L1070)/2
 12596 174a 2E03     		.2byte	(.L1068-.L1070)/2
 12597 174c 2E03     		.2byte	(.L1068-.L1070)/2
ARM GAS  /tmp/ccF3vcso.s 			page 350


 12598 174e 3E01     		.2byte	(.L1071-.L1070)/2
 12599 1750 2801     		.2byte	(.L1069-.L1070)/2
 12600              		.p2align 1
 12601              	.L1431:
 12602 1752 00BF     		.align	2
 12603              	.L1430:
 12604 1754 00000000 		.word	.LANCHOR15
 12605 1758 00000000 		.word	.LANCHOR17
 12606 175c 00000000 		.word	.LANCHOR6
 12607              	.LVL1066:
 12608              	.L1377:
1412:src/keys.c    ****    case (K61):
 12609              		.loc 1 1412 4 is_stmt 0 view .LVU3836
 12610              	.LBE968:
 12611              	.LBE1377:
 12612              	.LBB1378:
 12613              	.LBB1194:
1749:src/keys.c    **** 		if (rawpc == 1)
 12614              		.loc 1 1749 3 is_stmt 1 view .LVU3837
1749:src/keys.c    **** 		if (rawpc == 1)
 12615              		.loc 1 1749 11 is_stmt 0 view .LVU3838
 12616 1760 DFF898B4 		ldr	fp, .L1432+8
 12617 1764 DBF80030 		ldr	r3, [fp]
 12618              	.LVL1067:
1749:src/keys.c    **** 		if (rawpc == 1)
 12619              		.loc 1 1749 9 view .LVU3839
 12620 1768 B3F8E007 		ldrh	r0, [r3, #2016]
 12621              	.LVL1068:
1750:src/keys.c    **** 			rawpc = 0;
 12622              		.loc 1 1750 3 is_stmt 1 view .LVU3840
1751:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12623              		.loc 1 1751 10 is_stmt 0 view .LVU3841
 12624 176c 0128     		cmp	r0, #1
 12625              	.LVL1069:
1752:src/keys.c    **** 		update_program_bounds(1);
 12626              		.loc 1 1752 3 is_stmt 1 view .LVU3842
 12627 176e 08BF     		it	eq
 12628 1770 0020     		moveq	r0, #0
 12629              	.LVL1070:
1752:src/keys.c    **** 		update_program_bounds(1);
 12630              		.loc 1 1752 3 is_stmt 0 view .LVU3843
 12631 1772 0021     		movs	r1, #0
 12632 1774 FFF7FEFF 		bl	do_dec
 12633              	.LVL1071:
1752:src/keys.c    **** 		update_program_bounds(1);
 12634              		.loc 1 1752 3 view .LVU3844
 12635 1778 FFF7FEFF 		bl	set_pc
 12636              	.LVL1072:
1753:src/keys.c    **** 		rawpc = ProgBegin;
 12637              		.loc 1 1753 3 is_stmt 1 view .LVU3845
 12638 177c 0120     		movs	r0, #1
 12639 177e FFF7FEFF 		bl	update_program_bounds
 12640              	.LVL1073:
1754:src/keys.c    **** 		goto fin;
 12641              		.loc 1 1754 3 view .LVU3846
1754:src/keys.c    **** 		goto fin;
 12642              		.loc 1 1754 11 is_stmt 0 view .LVU3847
ARM GAS  /tmp/ccF3vcso.s 			page 351


 12643 1782 DBF80030 		ldr	r3, [fp]
1754:src/keys.c    **** 		goto fin;
 12644              		.loc 1 1754 9 view .LVU3848
 12645 1786 B3F8EC07 		ldrh	r0, [r3, #2028]
 12646              	.LVL1074:
1755:src/keys.c    **** 	}
 12647              		.loc 1 1755 3 is_stmt 1 view .LVU3849
 12648 178a FFF7F1B8 		b	.L842
 12649              	.LVL1075:
 12650              	.L1393:
1755:src/keys.c    **** 	}
 12651              		.loc 1 1755 3 is_stmt 0 view .LVU3850
 12652              	.LBE1194:
 12653              	.LBE1378:
 12654              	.LBB1379:
 12655              	.LBB1138:
2863:src/keys.c    **** 		State2.numdigit = 1;
 12656              		.loc 1 2863 3 is_stmt 1 view .LVU3851
2864:src/keys.c    **** 		return STATE_UNFINISHED;
 12657              		.loc 1 2864 19 is_stmt 0 view .LVU3852
 12658 178e 0122     		movs	r2, #1
2863:src/keys.c    **** 		State2.numdigit = 1;
 12659              		.loc 1 2863 17 view .LVU3853
 12660 1790 A8F80840 		strh	r4, [r8, #8]	@ movhi
2864:src/keys.c    **** 		return STATE_UNFINISHED;
 12661              		.loc 1 2864 3 is_stmt 1 view .LVU3854
 12662 1794 3368     		ldr	r3, [r6]
2864:src/keys.c    **** 		return STATE_UNFINISHED;
 12663              		.loc 1 2864 19 is_stmt 0 view .LVU3855
 12664 1796 88F80B20 		strb	r2, [r8, #11]
2865:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12665              		.loc 1 2865 3 is_stmt 1 view .LVU3856
2865:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12666              		.loc 1 2865 10 is_stmt 0 view .LVU3857
 12667 179a 3324     		movs	r4, #51
 12668              	.LVL1076:
2865:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12669              		.loc 1 2865 10 view .LVU3858
 12670 179c FEF78DBC 		b	.L796
 12671              	.LVL1077:
 12672              	.L1387:
2865:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12673              		.loc 1 2865 10 view .LVU3859
 12674              	.LBE1138:
 12675              	.LBE1379:
 12676              	.LBB1380:
 12677              	.LBB867:
 287:src/keys.c    **** 					}
 12678              		.loc 1 287 7 is_stmt 1 view .LVU3860
 12679 17a0 0120     		movs	r0, #1
 12680 17a2 FFF7FEFF 		bl	finish_cpx_entry
 12681              	.LVL1078:
 287:src/keys.c    **** 					}
 12682              		.loc 1 287 7 is_stmt 0 view .LVU3861
 12683              	.LBE867:
 12684              	.LBE1380:
3326:src/keys.c    **** 		if (is_bad_cmdline())
ARM GAS  /tmp/ccF3vcso.s 			page 352


 12685              		.loc 1 3326 2 is_stmt 1 view .LVU3862
 12686              	.LBB1381:
 12687              	.LBB868:
 289:src/keys.c    **** 				default:
 12688              		.loc 1 289 13 is_stmt 0 view .LVU3863
 12689 17a6 4FF0110A 		mov	r10, #17
 12690 17aa FFF7FAB9 		b	.L899
 12691              	.LVL1079:
 12692              	.L1395:
 289:src/keys.c    **** 				default:
 12693              		.loc 1 289 13 view .LVU3864
 12694              	.LBE868:
 12695              	.LBE1381:
 12696              	.LBB1382:
 12697              	.LBB1091:
2999:src/keys.c    **** 	const int direct = State2.runmode;
 12698              		.loc 1 2999 37 view .LVU3865
 12699 17ae 5846     		mov	r0, fp
 12700 17b0 FFF7FEFF 		bl	getprog
 12701              	.LVL1080:
2999:src/keys.c    **** 	const int direct = State2.runmode;
 12702              		.loc 1 2999 63 view .LVU3866
 12703 17b4 20F47062 		bic	r2, r0, #3840
 12704 17b8 FFF75FBB 		b	.L941
 12705              	.LVL1081:
 12706              	.L1396:
3006:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12707              		.loc 1 3006 3 is_stmt 1 view .LVU3867
3006:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12708              		.loc 1 3006 8 is_stmt 0 view .LVU3868
 12709 17bc 4FEA8A34 		lsl	r4, r10, #14
 12710              	.LVL1082:
3006:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12711              		.loc 1 3006 6 view .LVU3869
 12712 17c0 44F00104 		orr	r4, r4, #1
 12713              	.LVL1083:
3007:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12714              		.loc 1 3007 3 is_stmt 1 view .LVU3870
3007:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12715              		.loc 1 3007 9 is_stmt 0 view .LVU3871
 12716 17c4 2046     		mov	r0, r4
 12717 17c6 FFF7FEFF 		bl	is_label_or_end_at
 12718              	.LVL1084:
3007:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12719              		.loc 1 3007 6 view .LVU3872
 12720 17ca 0246     		mov	r2, r0
 12721 17cc 0028     		cmp	r0, #0
 12722 17ce 00F0B382 		beq	.L1406
 12723              	.L944:
3009:src/keys.c    **** 		return STATE_UNFINISHED;
 12724              		.loc 1 3009 3 is_stmt 1 view .LVU3873
3009:src/keys.c    **** 		return STATE_UNFINISHED;
 12725              		.loc 1 3009 17 is_stmt 0 view .LVU3874
 12726 17d2 A8F80840 		strh	r4, [r8, #8]	@ movhi
3010:src/keys.c    **** 	}
 12727              		.loc 1 3010 3 is_stmt 1 view .LVU3875
 12728 17d6 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccF3vcso.s 			page 353


3010:src/keys.c    **** 	}
 12729              		.loc 1 3010 10 is_stmt 0 view .LVU3876
 12730 17d8 3324     		movs	r4, #51
 12731              	.LVL1085:
3010:src/keys.c    **** 	}
 12732              		.loc 1 3010 10 view .LVU3877
 12733 17da FEF76EBC 		b	.L796
 12734              	.LVL1086:
 12735              	.L1139:
3010:src/keys.c    **** 	}
 12736              		.loc 1 3010 10 view .LVU3878
 12737              	.LBE1091:
 12738              	.LBE1382:
 12739              	.LBB1383:
 12740              	.LBB869:
 306:src/keys.c    **** 		}
 12741              		.loc 1 306 11 view .LVU3879
 12742 17de 4FF0100A 		mov	r10, #16
 12743 17e2 FFF7DEB9 		b	.L899
 12744              	.LVL1087:
 12745              	.L1003:
 306:src/keys.c    **** 		}
 12746              		.loc 1 306 11 view .LVU3880
 12747              	.LBE869:
 12748              	.LBE1383:
 12749              	.LBB1384:
 12750              	.LBB1049:
 12751              	.LBB1041:
1828:src/keys.c    **** 	    if ( State2.runmode ) {
 12752              		.loc 1 1828 4 is_stmt 1 view .LVU3881
1828:src/keys.c    **** 	    if ( State2.runmode ) {
 12753              		.loc 1 1828 7 is_stmt 0 view .LVU3882
 12754 17e6 BAF1000F 		cmp	r10, #0
 12755 17ea 7EF40FAF 		bne	.L998
1829:src/keys.c    **** 	      // Alpha scroll left
 12756              		.loc 1 1829 6 is_stmt 1 view .LVU3883
1829:src/keys.c    **** 	      // Alpha scroll left
 12757              		.loc 1 1829 9 is_stmt 0 view .LVU3884
 12758 17ee 5006     		lsls	r0, r2, #25
 12759              	.LVL1088:
1829:src/keys.c    **** 	      // Alpha scroll left
 12760              		.loc 1 1829 9 view .LVU3885
 12761 17f0 7EF575AE 		bpl	.L1015
1837:src/keys.c    **** 		alpha_pos += 1;
 12762              		.loc 1 1837 8 is_stmt 1 view .LVU3886
1837:src/keys.c    **** 		alpha_pos += 1;
 12763              		.loc 1 1837 11 is_stmt 0 view .LVU3887
 12764 17f4 002B     		cmp	r3, #0
 12765 17f6 40F02881 		bne	.L1016
 12766              	.LVL1089:
 12767              	.L1018:
1838:src/keys.c    **** 	      }
 12768              		.loc 1 1838 3 is_stmt 1 view .LVU3888
1838:src/keys.c    **** 	      }
 12769              		.loc 1 1838 13 is_stmt 0 view .LVU3889
 12770 17fa 0133     		adds	r3, r3, #1
 12771 17fc 0093     		str	r3, [sp]
ARM GAS  /tmp/ccF3vcso.s 			page 354


 12772              	.LVL1090:
 12773              	.L1017:
1845:src/keys.c    **** #else
 12774              		.loc 1 1845 8 is_stmt 1 view .LVU3890
1845:src/keys.c    **** #else
 12775              		.loc 1 1845 25 is_stmt 0 view .LVU3891
 12776 17fe 009B     		ldr	r3, [sp]
 12777 1800 88F80D30 		strb	r3, [r8, #13]
1850:src/keys.c    **** 	    }
 12778              		.loc 1 1850 8 is_stmt 1 view .LVU3892
 12779              	.L1009:
 12780              	.LVL1091:
1850:src/keys.c    **** 	    }
 12781              		.loc 1 1850 8 is_stmt 0 view .LVU3893
 12782              	.LBE1041:
 12783              	.LBE1049:
3354:src/keys.c    **** 			print_tab(0);
 12784              		.loc 1 3354 3 is_stmt 1 view .LVU3894
3354:src/keys.c    **** 			print_tab(0);
 12785              		.loc 1 3354 7 is_stmt 0 view .LVU3895
 12786 1804 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
3354:src/keys.c    **** 			print_tab(0);
 12787              		.loc 1 3354 6 view .LVU3896
 12788 1808 10F00804 		ands	r4, r0, #8
 12789 180c 7EF4C1AF 		bne	.L1321
3354:src/keys.c    **** 			print_tab(0);
 12790              		.loc 1 3354 26 view .LVU3897
 12791 1810 6720     		movs	r0, #103
 12792 1812 FFF7FEFF 		bl	get_user_flag
 12793              	.LVL1092:
3354:src/keys.c    **** 			print_tab(0);
 12794              		.loc 1 3354 23 view .LVU3898
 12795 1816 0546     		mov	r5, r0
 12796 1818 0028     		cmp	r0, #0
 12797 181a 3EF4BAAF 		beq	.L1321
3355:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 12798              		.loc 1 3355 4 is_stmt 1 view .LVU3899
 12799 181e 2046     		mov	r0, r4
 12800 1820 FFF7FEFF 		bl	print_tab
 12801              	.LVL1093:
3356:src/keys.c    **** 		}
 12802              		.loc 1 3356 4 view .LVU3900
 12803 1824 C020     		movs	r0, #192
 12804 1826 FFF7FEFF 		bl	print_alpha
 12805              	.LVL1094:
3356:src/keys.c    **** 		}
 12806              		.loc 1 3356 4 is_stmt 0 view .LVU3901
 12807              	.LBE1384:
 12808              	.LBE1458:
 12809              	.LBE1531:
3615:src/keys.c    ****     case STATE_SST:
 12810              		.loc 1 3615 5 is_stmt 1 view .LVU3902
 12811              	.LBB1532:
 12812              	.LBB1459:
 12813              	.LBB1385:
3356:src/keys.c    **** 		}
 12814              		.loc 1 3356 4 is_stmt 0 view .LVU3903
ARM GAS  /tmp/ccF3vcso.s 			page 355


 12815 182a 3324     		movs	r4, #51
 12816 182c FEF703BE 		b	.L1318
 12817              	.LVL1095:
 12818              	.L1386:
3356:src/keys.c    **** 		}
 12819              		.loc 1 3356 4 view .LVU3904
 12820              	.LBE1385:
 12821              	.LBB1386:
 12822              	.LBB870:
 298:src/keys.c    **** 				stack_begin (1);
 12823              		.loc 1 298 5 is_stmt 1 view .LVU3905
 12824 1830 40F00200 		orr	r0, r0, #2
 12825 1834 8CF8AC07 		strb	r0, [ip, #1964]
 299:src/keys.c    **** 			}
 12826              		.loc 1 299 5 view .LVU3906
 12827 1838 1846     		mov	r0, r3
 12828 183a FFF7FEFF 		bl	stack_begin
 12829              	.LVL1096:
 299:src/keys.c    **** 			}
 12830              		.loc 1 299 5 is_stmt 0 view .LVU3907
 12831              	.LBE870:
 12832              	.LBE1386:
3326:src/keys.c    **** 		if (is_bad_cmdline())
 12833              		.loc 1 3326 2 is_stmt 1 view .LVU3908
 12834              	.LBB1387:
 12835              	.LBB871:
 306:src/keys.c    **** 		}
 12836              		.loc 1 306 11 is_stmt 0 view .LVU3909
 12837 183e 4FF0100A 		mov	r10, #16
 12838 1842 FFF7AEB9 		b	.L899
 12839              	.LVL1097:
 12840              	.L1401:
 306:src/keys.c    **** 		}
 12841              		.loc 1 306 11 view .LVU3910
 12842              	.LBE871:
 12843              	.LBE1387:
 12844              	.LBB1388:
 12845              	.LBB1336:
3149:src/keys.c    **** 		goto reset_window;
 12846              		.loc 1 3149 3 is_stmt 1 view .LVU3911
3149:src/keys.c    **** 		goto reset_window;
 12847              		.loc 1 3149 17 is_stmt 0 view .LVU3912
 12848 1846 A8F808B0 		strh	fp, [r8, #8]	@ movhi
3150:src/keys.c    **** 	}
 12849              		.loc 1 3150 3 is_stmt 1 view .LVU3913
 12850 184a D7E4     		b	.L972
 12851              	.L1399:
 12852              	.LBB1332:
3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12853              		.loc 1 3138 3 view .LVU3914
3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12854              		.loc 1 3138 19 is_stmt 0 view .LVU3915
 12855 184c B8F80810 		ldrh	r1, [r8, #8]
3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12856              		.loc 1 3138 27 view .LVU3916
 12857 1850 0A23     		movs	r3, #10
3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
ARM GAS  /tmp/ccF3vcso.s 			page 356


 12858              		.loc 1 3138 32 view .LVU3917
 12859 1852 03FB01B2 		mla	r2, r3, r1, fp
3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12860              		.loc 1 3138 37 view .LVU3918
 12861 1856 6424     		movs	r4, #100
 12862              	.LVL1098:
3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12863              		.loc 1 3138 37 view .LVU3919
 12864 1858 B2FBF4F3 		udiv	r3, r2, r4
 12865 185c 04FB1323 		mls	r3, r4, r3, r2
 12866              	.LVL1099:
3139:src/keys.c    **** 			dv = n;
 12867              		.loc 1 3139 3 is_stmt 1 view .LVU3920
3139:src/keys.c    **** 			dv = n;
 12868              		.loc 1 3139 6 is_stmt 0 view .LVU3921
 12869 1860 5345     		cmp	r3, r10
 12870 1862 09DA     		bge	.L974
3139:src/keys.c    **** 			dv = n;
 12871              		.loc 1 3139 21 view .LVU3922
 12872 1864 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3139:src/keys.c    **** 			dv = n;
 12873              		.loc 1 3139 17 view .LVU3923
 12874 1868 D407     		lsls	r4, r2, #31
 12875 186a 3FF5C5AC 		bmi	.L1311
3139:src/keys.c    **** 			dv = n;
 12876              		.loc 1 3139 36 view .LVU3924
 12877 186e 8842     		cmp	r0, r1
 12878 1870 02DD     		ble	.L974
3139:src/keys.c    **** 			dv = n;
 12879              		.loc 1 3139 63 view .LVU3925
 12880 1872 9842     		cmp	r0, r3
 12881 1874 3FF7C0AC 		bgt	.L1311
 12882              	.L974:
3140:src/keys.c    **** 		State2.digval = dv;
 12883              		.loc 1 3140 4 is_stmt 1 view .LVU3926
3140:src/keys.c    **** 		State2.digval = dv;
 12884              		.loc 1 3140 7 is_stmt 0 view .LVU3927
 12885 1878 5B46     		mov	r3, fp
 12886              	.LVL1100:
3141:src/keys.c    **** 		goto reset_window;
 12887              		.loc 1 3141 3 is_stmt 1 view .LVU3928
 12888 187a BDE4     		b	.L1311
 12889              	.LVL1101:
 12890              	.L812:
3141:src/keys.c    **** 		goto reset_window;
 12891              		.loc 1 3141 3 is_stmt 0 view .LVU3929
 12892              	.LBE1332:
 12893              	.LBE1336:
 12894              	.LBE1388:
 12895              	.LBB1389:
 12896              	.LBB1367:
1258:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12897              		.loc 1 1258 3 is_stmt 1 view .LVU3930
 12898 187c 6420     		movs	r0, #100
 12899 187e FFF7FEFF 		bl	get_reg_n
 12900              	.LVL1102:
 12901 1882 0446     		mov	r4, r0
ARM GAS  /tmp/ccF3vcso.s 			page 357


1258:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12902              		.loc 1 1258 33 is_stmt 0 view .LVU3931
 12903 1884 6E20     		movs	r0, #110
 12904 1886 FFF7FEFF 		bl	get_reg_n
 12905              	.LVL1103:
 12906 188a 0146     		mov	r1, r0
1258:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12907              		.loc 1 1258 3 view .LVU3932
 12908 188c 2046     		mov	r0, r4
 12909 188e FFF7FEFF 		bl	copyreg
 12910              	.LVL1104:
1259:src/keys.c    **** 	}
 12911              		.loc 1 1259 3 is_stmt 1 view .LVU3933
 12912 1892 6520     		movs	r0, #101
 12913 1894 5BE6     		b	.L1309
 12914              	.LVL1105:
 12915              	.L912:
1259:src/keys.c    **** 	}
 12916              		.loc 1 1259 3 is_stmt 0 view .LVU3934
 12917 1896 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12918              	.LBE1367:
 12919              	.LBE1389:
 12920              	.LBB1390:
 12921              	.LBB872:
 12922              	.LBB857:
 371:src/keys.c    **** #ifndef WINGUI
 12923              		.loc 1 371 8 view .LVU3935
 12924 189a D64A     		ldr	r2, .L1432
 377:src/keys.c    ****   }
 12925              		.loc 1 377 9 view .LVU3936
 12926 189c 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 12927              		.loc 1 373 73 view .LVU3937
 12928 189e 4FF0020E 		mov	lr, #2
 12929 18a2 FEF7E2BC 		b	.L911
 12930              	.LVL1106:
 12931              	.L933:
 373:src/keys.c    **** #else
 12932              		.loc 1 373 73 view .LVU3938
 12933              	.LBE857:
 12934              	.LBE872:
 12935              	.LBE1390:
 12936              	.LBB1391:
 12937              	.LBB1139:
2841:src/keys.c    **** 			return STATE_UNFINISHED;
 12938              		.loc 1 2841 5 is_stmt 1 view .LVU3939
2841:src/keys.c    **** 			return STATE_UNFINISHED;
 12939              		.loc 1 2841 20 is_stmt 0 view .LVU3940
 12940 18a6 013A     		subs	r2, r2, #1
 12941 18a8 3368     		ldr	r3, [r6]
 12942 18aa 88F80B20 		strb	r2, [r8, #11]
2842:src/keys.c    **** 		}
 12943              		.loc 1 2842 11 view .LVU3941
 12944 18ae 3324     		movs	r4, #51
 12945              	.LVL1107:
2842:src/keys.c    **** 		}
 12946              		.loc 1 2842 11 view .LVU3942
ARM GAS  /tmp/ccF3vcso.s 			page 358


 12947 18b0 FEF703BC 		b	.L796
 12948              	.LVL1108:
 12949              	.L1398:
2842:src/keys.c    **** 		}
 12950              		.loc 1 2842 11 view .LVU3943
 12951              	.LBE1139:
 12952              	.LBE1391:
 12953              	.LBB1392:
 12954              	.LBB1337:
3132:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12955              		.loc 1 3132 3 is_stmt 1 view .LVU3944
3132:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12956              		.loc 1 3132 7 is_stmt 0 view .LVU3945
 12957 18b4 FFF7FEFF 		bl	local_regs
 12958              	.LVL1109:
3132:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12959              		.loc 1 3132 6 view .LVU3946
 12960 18b8 68B1     		cbz	r0, .L970
3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12961              		.loc 1 3133 4 is_stmt 1 view .LVU3947
3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12962              		.loc 1 3133 19 is_stmt 0 view .LVU3948
 12963 18ba 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12964              		.loc 1 3133 34 view .LVU3949
 12965 18be 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12966              		.loc 1 3133 19 view .LVU3950
 12967 18c2 03F00101 		and	r1, r3, #1
3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12968              		.loc 1 3133 34 view .LVU3951
 12969 18c6 0A43     		orrs	r2, r1, r2
 12970 18c8 0CBF     		ite	eq
 12971 18ca 0122     		moveq	r2, #1
 12972 18cc 0022     		movne	r2, #0
3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12973              		.loc 1 3133 17 view .LVU3952
 12974 18ce 62F30003 		bfi	r3, r2, #0, #1
 12975 18d2 88F81630 		strb	r3, [r8, #22]
 12976              	.L970:
3134:src/keys.c    **** 		goto reset_window;
 12977              		.loc 1 3134 3 is_stmt 1 view .LVU3953
3134:src/keys.c    **** 		goto reset_window;
 12978              		.loc 1 3134 32 is_stmt 0 view .LVU3954
 12979 18d6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3134:src/keys.c    **** 		goto reset_window;
 12980              		.loc 1 3134 17 view .LVU3955
 12981 18da 13F0010F 		tst	r3, #1
 12982 18de 14BF     		ite	ne
 12983 18e0 0023     		movne	r3, #0
 12984 18e2 6423     		moveq	r3, #100
 12985 18e4 A8F80830 		strh	r3, [r8, #8]	@ movhi
3135:src/keys.c    **** 	}
 12986              		.loc 1 3135 3 is_stmt 1 view .LVU3956
 12987 18e8 88E4     		b	.L972
 12988              	.LVL1110:
 12989              	.L1004:
ARM GAS  /tmp/ccF3vcso.s 			page 359


3135:src/keys.c    **** 	}
 12990              		.loc 1 3135 3 is_stmt 0 view .LVU3957
 12991              	.LBE1337:
 12992              	.LBE1392:
 12993              	.LBB1393:
 12994              	.LBB1050:
 12995              	.LBB1042:
1821:src/keys.c    **** 			return STATE_BACKSPACE;
 12996              		.loc 1 1821 3 is_stmt 1 view .LVU3958
1821:src/keys.c    **** 			return STATE_BACKSPACE;
 12997              		.loc 1 1821 6 is_stmt 0 view .LVU3959
 12998 18ea BAF1000F 		cmp	r10, #0
 12999 18ee 3EF4EEAE 		beq	.L1012
 13000              	.LVL1111:
 13001              	.L1013:
1823:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13002              		.loc 1 1823 3 is_stmt 1 view .LVU3960
1823:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13003              		.loc 1 1823 6 is_stmt 0 view .LVU3961
 13004 18f2 BAF1030F 		cmp	r10, #3
 13005 18f6 7EF489AE 		bne	.L998
1824:src/keys.c    **** 		break;
 13006              		.loc 1 1824 11 view .LVU3962
 13007 18fa 4FF4BA74 		mov	r4, #372
 13008 18fe FEF78ABE 		b	.L1014
 13009              	.L1005:
1804:src/keys.c    **** 			break;
 13010              		.loc 1 1804 3 is_stmt 1 view .LVU3963
1804:src/keys.c    **** 			break;
 13011              		.loc 1 1804 24 is_stmt 0 view .LVU3964
 13012 1902 AAF10203 		sub	r3, r10, #2
 13013              	.LVL1112:
1804:src/keys.c    **** 			break;
 13014              		.loc 1 1804 6 view .LVU3965
 13015 1906 DBB2     		uxtb	r3, r3
 13016 1908 012B     		cmp	r3, #1
 13017 190a 7EF67FAE 		bls	.L998
1806:src/keys.c    **** 			State2.multi = 1;
 13018              		.loc 1 1806 3 is_stmt 1 view .LVU3966
1806:src/keys.c    **** 			State2.multi = 1;
 13019              		.loc 1 1806 6 is_stmt 0 view .LVU3967
 13020 190e BAF1010F 		cmp	r10, #1
 13021 1912 03D1     		bne	.L1011
1806:src/keys.c    **** 			State2.multi = 1;
 13022              		.loc 1 1806 24 view .LVU3968
 13023 1914 12F04002 		ands	r2, r2, #64
 13024 1918 00F07882 		beq	.L1407
 13025              	.L1011:
1812:src/keys.c    **** 		State2.alphashift = 0;
 13026              		.loc 1 1812 3 is_stmt 1 view .LVU3969
1813:src/keys.c    **** #ifdef DM42
 13027              		.loc 1 1813 3 view .LVU3970
1812:src/keys.c    **** 		State2.alphashift = 0;
 13028              		.loc 1 1812 17 is_stmt 0 view .LVU3971
 13029 191c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1815:src/keys.c    **** 		display_current_menu();
 13030              		.loc 1 1815 3 view .LVU3972
ARM GAS  /tmp/ccF3vcso.s 			page 360


 13031 1920 4FF0FF30 		mov	r0, #-1
 13032              	.LVL1113:
1812:src/keys.c    **** 		State2.alphashift = 0;
 13033              		.loc 1 1812 17 view .LVU3973
 13034 1924 23F01803 		bic	r3, r3, #24
 13035 1928 88F81630 		strb	r3, [r8, #22]
1815:src/keys.c    **** 		display_current_menu();
 13036              		.loc 1 1815 3 is_stmt 1 view .LVU3974
 13037 192c FFF7FEFF 		bl	set_menu
 13038              	.LVL1114:
1816:src/keys.c    **** #endif
 13039              		.loc 1 1816 3 view .LVU3975
 13040 1930 FFF7FEFF 		bl	display_current_menu
 13041              	.LVL1115:
1818:src/keys.c    **** 
 13042              		.loc 1 1818 3 view .LVU3976
1818:src/keys.c    **** 
 13043              		.loc 1 1818 10 is_stmt 0 view .LVU3977
 13044 1934 66E7     		b	.L1009
 13045              	.LVL1116:
 13046              	.L1359:
1818:src/keys.c    **** 
 13047              		.loc 1 1818 10 view .LVU3978
 13048              	.LBE1042:
 13049              	.LBE1050:
 13050              	.LBE1393:
 13051              	.LBE1459:
 13052              	.LBE1532:
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13053              		.loc 1 3652 2 is_stmt 1 view .LVU3979
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13054              		.loc 1 3652 18 is_stmt 0 view .LVU3980
 13055 1936 1A60     		str	r2, [r3]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13056              		.loc 1 3653 2 is_stmt 1 view .LVU3981
 13057 1938 FEF7EDBE 		b	.L1098
 13058              	.LVL1117:
 13059              	.L1394:
 13060              	.LBB1533:
 13061              	.LBB1460:
 13062              	.LBB1394:
 13063              	.LBB1140:
2867:src/keys.c    **** 		State2.numdigit = 2;
 13064              		.loc 1 2867 3 view .LVU3982
2868:src/keys.c    **** 		return STATE_UNFINISHED;
 13065              		.loc 1 2868 19 is_stmt 0 view .LVU3983
 13066 193c 0222     		movs	r2, #2
2867:src/keys.c    **** 		State2.numdigit = 2;
 13067              		.loc 1 2867 18 view .LVU3984
 13068 193e 88F80A40 		strb	r4, [r8, #10]
2868:src/keys.c    **** 		return STATE_UNFINISHED;
 13069              		.loc 1 2868 3 is_stmt 1 view .LVU3985
 13070 1942 3368     		ldr	r3, [r6]
2868:src/keys.c    **** 		return STATE_UNFINISHED;
 13071              		.loc 1 2868 19 is_stmt 0 view .LVU3986
 13072 1944 88F80B20 		strb	r2, [r8, #11]
2869:src/keys.c    **** 	}
ARM GAS  /tmp/ccF3vcso.s 			page 361


 13073              		.loc 1 2869 3 is_stmt 1 view .LVU3987
2869:src/keys.c    **** 	}
 13074              		.loc 1 2869 10 is_stmt 0 view .LVU3988
 13075 1948 3324     		movs	r4, #51
 13076              	.LVL1118:
2869:src/keys.c    **** 	}
 13077              		.loc 1 2869 10 view .LVU3989
 13078 194a FEF7B6BB 		b	.L796
 13079              	.LVL1119:
 13080              	.L1069:
2869:src/keys.c    **** 	}
 13081              		.loc 1 2869 10 view .LVU3990
 13082              	.LBE1140:
 13083              	.LBE1394:
 13084              	.LBB1395:
 13085              	.LBB969:
1443:src/keys.c    ****        CLEAR_REAL;
 13086              		.loc 1 1443 6 is_stmt 1 view .LVU3991
1443:src/keys.c    ****        CLEAR_REAL;
 13087              		.loc 1 1443 10 is_stmt 0 view .LVU3992
 13088 194e DBF80020 		ldr	r2, [fp]
 13089 1952 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1443:src/keys.c    ****        CLEAR_REAL;
 13090              		.loc 1 1443 9 view .LVU3993
 13091 1956 9807     		lsls	r0, r3, #30
 13092 1958 1DD4     		bmi	.L1408
1450:src/keys.c    ****        finish_cpx_entry (1);
 13093              		.loc 1 1450 11 is_stmt 1 view .LVU3994
1450:src/keys.c    ****        finish_cpx_entry (1);
 13094              		.loc 1 1450 14 is_stmt 0 view .LVU3995
 13095 195a 5907     		lsls	r1, r3, #29
 13096 195c 10D5     		bpl	.L1078
1451:src/keys.c    ****      }
 13097              		.loc 1 1451 8 is_stmt 1 view .LVU3996
 13098 195e 0120     		movs	r0, #1
 13099 1960 FFF7FEFF 		bl	finish_cpx_entry
 13100              	.LVL1120:
1457:src/keys.c    ****    default:;
 13101              		.loc 1 1457 13 is_stmt 0 view .LVU3997
 13102 1964 3324     		movs	r4, #51
 13103              	.LVL1121:
1457:src/keys.c    ****    default:;
 13104              		.loc 1 1457 13 view .LVU3998
 13105 1966 3368     		ldr	r3, [r6]
 13106 1968 FEF7A7BB 		b	.L796
 13107              	.LVL1122:
 13108              	.L1072:
1425:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13109              		.loc 1 1425 6 is_stmt 1 view .LVU3999
1425:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13110              		.loc 1 1425 11 is_stmt 0 view .LVU4000
 13111 196c DBF80020 		ldr	r2, [fp]
1425:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13112              		.loc 1 1425 21 view .LVU4001
 13113 1970 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1425:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13114              		.loc 1 1425 9 view .LVU4002
ARM GAS  /tmp/ccF3vcso.s 			page 362


 13115 1974 13F0060F 		tst	r3, #6
 13116 1978 2BD0     		beq	.L1409
 13117              	.L1071:
1441:src/keys.c    ****    case (K_CMPLX):
 13118              		.loc 1 1441 6 is_stmt 1 view .LVU4003
1441:src/keys.c    ****    case (K_CMPLX):
 13119              		.loc 1 1441 13 is_stmt 0 view .LVU4004
 13120 197a 2046     		mov	r0, r4
 13121 197c FEF7ACBC 		b	.L1313
 13122              	.L1078:
1454:src/keys.c    ****        stack_begin (1);
 13123              		.loc 1 1454 8 is_stmt 1 view .LVU4005
 13124 1980 43F00403 		orr	r3, r3, #4
 13125 1984 82F8AC37 		strb	r3, [r2, #1964]
1455:src/keys.c    ****      }
 13126              		.loc 1 1455 8 view .LVU4006
 13127 1988 0120     		movs	r0, #1
 13128 198a FFF7FEFF 		bl	stack_begin
 13129              	.LVL1123:
1457:src/keys.c    ****    default:;
 13130              		.loc 1 1457 13 is_stmt 0 view .LVU4007
 13131 198e 3324     		movs	r4, #51
 13132              	.LVL1124:
1457:src/keys.c    ****    default:;
 13133              		.loc 1 1457 13 view .LVU4008
 13134 1990 3368     		ldr	r3, [r6]
 13135 1992 FEF792BB 		b	.L796
 13136              	.LVL1125:
 13137              	.L1408:
1444:src/keys.c    ****        SET_IMAG;
 13138              		.loc 1 1444 8 is_stmt 1 view .LVU4009
1445:src/keys.c    ****        do_command_line();
 13139              		.loc 1 1445 8 view .LVU4010
1444:src/keys.c    ****        SET_IMAG;
 13140              		.loc 1 1444 8 is_stmt 0 view .LVU4011
 13141 1996 23F00603 		bic	r3, r3, #6
 13142              	.LBB891:
 13143              	.LBB892:
1203:src/keys.c    **** 		State2.state_lift = 0;
 13144              		.loc 1 1203 5 view .LVU4012
 13145 199a 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 13146              	.LBE892:
 13147              	.LBE891:
1444:src/keys.c    ****        SET_IMAG;
 13148              		.loc 1 1444 8 view .LVU4013
 13149 199e 43F00403 		orr	r3, r3, #4
 13150 19a2 82F8AC37 		strb	r3, [r2, #1964]
1446:src/keys.c    ****        State2.state_lift = 0;
 13151              		.loc 1 1446 8 is_stmt 1 view .LVU4014
 13152              	.LBB895:
 13153              	.LBI891:
1202:src/keys.c    **** 	if (CmdLineLength) {
 13154              		.loc 1 1202 13 view .LVU4015
 13155              	.LBB893:
1203:src/keys.c    **** 		State2.state_lift = 0;
 13156              		.loc 1 1203 2 view .LVU4016
1203:src/keys.c    **** 		State2.state_lift = 0;
ARM GAS  /tmp/ccF3vcso.s 			page 363


 13157              		.loc 1 1203 5 is_stmt 0 view .LVU4017
 13158 19a6 F1B9     		cbnz	r1, .L1410
 13159              	.L1077:
 13160              	.LBE893:
 13161              	.LBE895:
1447:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13162              		.loc 1 1447 8 is_stmt 1 view .LVU4018
1447:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13163              		.loc 1 1447 26 is_stmt 0 view .LVU4019
 13164 19a8 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1448:src/keys.c    ****      }
 13165              		.loc 1 1448 8 view .LVU4020
 13166 19ac 6420     		movs	r0, #100
1447:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13167              		.loc 1 1447 26 view .LVU4021
 13168 19ae 6FF38613 		bfc	r3, #6, #1
 13169 19b2 88F81730 		strb	r3, [r8, #23]
1448:src/keys.c    ****      }
 13170              		.loc 1 1448 8 is_stmt 1 view .LVU4022
 13171 19b6 FFF7FEFF 		bl	get_reg_n
 13172              	.LVL1126:
 13173 19ba 0446     		mov	r4, r0
 13174              	.LVL1127:
1448:src/keys.c    ****      }
 13175              		.loc 1 1448 8 is_stmt 0 view .LVU4023
 13176 19bc 6520     		movs	r0, #101
 13177 19be FFF7FEFF 		bl	get_reg_n
 13178              	.LVL1128:
 13179 19c2 0146     		mov	r1, r0
 13180 19c4 2046     		mov	r0, r4
 13181 19c6 FFF7FEFF 		bl	swap_reg
 13182              	.LVL1129:
1457:src/keys.c    ****    default:;
 13183              		.loc 1 1457 13 view .LVU4024
 13184 19ca 3324     		movs	r4, #51
 13185 19cc 3368     		ldr	r3, [r6]
 13186 19ce FEF774BB 		b	.L796
 13187              	.LVL1130:
 13188              	.L1409:
1426:src/keys.c    ****        stack_begin (1);
 13189              		.loc 1 1426 8 is_stmt 1 view .LVU4025
 13190 19d2 43F00203 		orr	r3, r3, #2
1427:src/keys.c    ****      }
 13191              		.loc 1 1427 8 is_stmt 0 view .LVU4026
 13192 19d6 0120     		movs	r0, #1
1426:src/keys.c    ****        stack_begin (1);
 13193              		.loc 1 1426 8 view .LVU4027
 13194 19d8 82F8AC37 		strb	r3, [r2, #1964]
1427:src/keys.c    ****      }
 13195              		.loc 1 1427 8 is_stmt 1 view .LVU4028
 13196 19dc FFF7FEFF 		bl	stack_begin
 13197              	.LVL1131:
1429:src/keys.c    ****    case (K22): // CHS
 13198              		.loc 1 1429 6 view .LVU4029
1441:src/keys.c    ****    case (K_CMPLX):
 13199              		.loc 1 1441 6 view .LVU4030
1441:src/keys.c    ****    case (K_CMPLX):
ARM GAS  /tmp/ccF3vcso.s 			page 364


 13200              		.loc 1 1441 13 is_stmt 0 view .LVU4031
 13201 19e0 2046     		mov	r0, r4
 13202 19e2 FEF779BC 		b	.L1313
 13203              	.L1410:
 13204              	.LBB896:
 13205              	.LBB894:
1204:src/keys.c    **** 		process_cmdline();
 13206              		.loc 1 1204 3 is_stmt 1 view .LVU4032
1204:src/keys.c    **** 		process_cmdline();
 13207              		.loc 1 1204 21 is_stmt 0 view .LVU4033
 13208 19e6 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 13209 19ea 6FF38613 		bfc	r3, #6, #1
 13210 19ee 88F81730 		strb	r3, [r8, #23]
1205:src/keys.c    **** 	}
 13211              		.loc 1 1205 3 is_stmt 1 view .LVU4034
 13212 19f2 FFF7FEFF 		bl	process_cmdline
 13213              	.LVL1132:
 13214 19f6 D7E7     		b	.L1077
 13215              	.LVL1133:
 13216              	.L999:
1205:src/keys.c    **** 	}
 13217              		.loc 1 1205 3 is_stmt 0 view .LVU4035
 13218              	.LBE894:
 13219              	.LBE896:
 13220              	.LBE969:
 13221              	.LBE1395:
 13222              	.LBB1396:
 13223              	.LBB1051:
 13224              	.LBB1043:
1883:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13225              		.loc 1 1883 3 is_stmt 1 view .LVU4036
1883:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13226              		.loc 1 1883 6 is_stmt 0 view .LVU4037
 13227 19f8 BAF1010F 		cmp	r10, #1
 13228 19fc 7EF406AE 		bne	.L998
1884:src/keys.c    **** 		break;
 13229              		.loc 1 1884 11 view .LVU4038
 13230 1a00 40F23B14 		movw	r4, #315
 13231 1a04 FEF707BE 		b	.L1014
 13232              	.L1001:
1869:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13233              		.loc 1 1869 3 is_stmt 1 view .LVU4039
1869:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13234              		.loc 1 1869 6 is_stmt 0 view .LVU4040
 13235 1a08 BAF1010F 		cmp	r10, #1
 13236 1a0c 2DD0     		beq	.L1411
1871:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13237              		.loc 1 1871 8 is_stmt 1 view .LVU4041
1871:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13238              		.loc 1 1871 11 is_stmt 0 view .LVU4042
 13239 1a0e BAF1030F 		cmp	r10, #3
 13240 1a12 26D0     		beq	.L1156
1873:src/keys.c    **** #ifdef DM42
 13241              		.loc 1 1873 8 is_stmt 1 view .LVU4043
1873:src/keys.c    **** #ifdef DM42
 13242              		.loc 1 1873 11 is_stmt 0 view .LVU4044
 13243 1a14 BAF1000F 		cmp	r10, #0
ARM GAS  /tmp/ccF3vcso.s 			page 365


 13244 1a18 7FF4F4AE 		bne	.L1009
1875:src/keys.c    **** 		  display_current_menu();
 13245              		.loc 1 1875 5 is_stmt 1 view .LVU4045
 13246 1a1c 4FF0FF30 		mov	r0, #-1
 13247              	.LVL1134:
1875:src/keys.c    **** 		  display_current_menu();
 13248              		.loc 1 1875 5 is_stmt 0 view .LVU4046
 13249 1a20 FFF7FEFF 		bl	set_menu
 13250              	.LVL1135:
1876:src/keys.c    **** #endif
 13251              		.loc 1 1876 5 is_stmt 1 view .LVU4047
 13252 1a24 FFF7FEFF 		bl	display_current_menu
 13253              	.LVL1136:
1878:src/keys.c    **** 		}
 13254              		.loc 1 1878 5 view .LVU4048
 13255 1a28 FFF7FEFF 		bl	init_state
 13256              	.LVL1137:
 13257 1a2c EAE6     		b	.L1009
 13258              	.LVL1138:
 13259              	.L1002:
1857:src/keys.c    **** 	    if ( State2.runmode ) {
 13260              		.loc 1 1857 4 view .LVU4049
1857:src/keys.c    **** 	    if ( State2.runmode ) {
 13261              		.loc 1 1857 7 is_stmt 0 view .LVU4050
 13262 1a2e BAF1000F 		cmp	r10, #0
 13263 1a32 7EF4EBAD 		bne	.L998
1858:src/keys.c    **** 	      // Alpha scroll right
 13264              		.loc 1 1858 6 is_stmt 1 view .LVU4051
1858:src/keys.c    **** 	      // Alpha scroll right
 13265              		.loc 1 1858 9 is_stmt 0 view .LVU4052
 13266 1a36 5106     		lsls	r1, r2, #25
 13267 1a38 7EF524AD 		bpl	.L1019
1860:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13268              		.loc 1 1860 8 is_stmt 1 view .LVU4053
1860:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13269              		.loc 1 1860 11 is_stmt 0 view .LVU4054
 13270 1a3c 002B     		cmp	r3, #0
 13271 1a3e 3FF4E1AE 		beq	.L1009
1861:src/keys.c    **** 	      return STATE_UNFINISHED;
 13272              		.loc 1 1861 3 is_stmt 1 view .LVU4055
1861:src/keys.c    **** 	      return STATE_UNFINISHED;
 13273              		.loc 1 1861 31 is_stmt 0 view .LVU4056
 13274 1a42 013B     		subs	r3, r3, #1
 13275              	.LVL1139:
1861:src/keys.c    **** 	      return STATE_UNFINISHED;
 13276              		.loc 1 1861 20 view .LVU4057
 13277 1a44 88F80D30 		strb	r3, [r8, #13]
 13278 1a48 DCE6     		b	.L1009
 13279              	.LVL1140:
 13280              	.L1016:
1861:src/keys.c    **** 	      return STATE_UNFINISHED;
 13281              		.loc 1 1861 20 view .LVU4058
 13282 1a4a 0193     		str	r3, [sp, #4]
1837:src/keys.c    **** 		alpha_pos += 1;
 13283              		.loc 1 1837 33 view .LVU4059
 13284 1a4c FFF7FEFF 		bl	alen
 13285              	.LVL1141:
ARM GAS  /tmp/ccF3vcso.s 			page 366


1837:src/keys.c    **** 		alpha_pos += 1;
 13286              		.loc 1 1837 41 view .LVU4060
 13287 1a50 019B     		ldr	r3, [sp, #4]
 13288 1a52 03EB4302 		add	r2, r3, r3, lsl #1
1837:src/keys.c    **** 		alpha_pos += 1;
 13289              		.loc 1 1837 39 view .LVU4061
 13290 1a56 A0EB4200 		sub	r0, r0, r2, lsl #1
1837:src/keys.c    **** 		alpha_pos += 1;
 13291              		.loc 1 1837 29 view .LVU4062
 13292 1a5a 1328     		cmp	r0, #19
 13293 1a5c 3FF6CDAE 		bhi	.L1018
1837:src/keys.c    **** 		alpha_pos += 1;
 13294              		.loc 1 1837 29 view .LVU4063
 13295 1a60 CDE6     		b	.L1017
 13296              	.LVL1142:
 13297              	.L1156:
1872:src/keys.c    **** 		else if (shift == SHIFT_N) {
 13298              		.loc 1 1872 11 view .LVU4064
 13299 1a62 4FF48174 		mov	r4, #258
 13300 1a66 FEF7D6BD 		b	.L1014
 13301              	.L1411:
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
 13302              		.loc 1 1870 4 is_stmt 1 view .LVU4065
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
 13303              		.loc 1 1870 34 is_stmt 0 view .LVU4066
 13304 1a6a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 13305              	.LVL1143:
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
 13306              		.loc 1 1870 34 view .LVU4067
 13307 1a6e C3F30012 		ubfx	r2, r3, #4, #1
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
 13308              		.loc 1 1870 26 view .LVU4068
 13309 1a72 C2F10102 		rsb	r2, r2, #1
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
 13310              		.loc 1 1870 22 view .LVU4069
 13311 1a76 62F30413 		bfi	r3, r2, #4, #1
 13312 1a7a 88F81630 		strb	r3, [r8, #22]
 13313 1a7e C1E6     		b	.L1009
 13314              	.LVL1144:
 13315              	.L983:
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
 13316              		.loc 1 1870 22 view .LVU4070
 13317              	.LBE1043:
 13318              	.LBE1051:
 13319              	.LBE1396:
 13320              	.LBB1397:
 13321              	.LBB1338:
3171:src/keys.c    **** 		goto reset_window;
 13322              		.loc 1 3171 4 is_stmt 1 view .LVU4071
3171:src/keys.c    **** 		goto reset_window;
 13323              		.loc 1 3171 18 is_stmt 0 view .LVU4072
 13324 1a80 0023     		movs	r3, #0
 13325 1a82 A8F80830 		strh	r3, [r8, #8]	@ movhi
 13326 1a86 FFF7B9BB 		b	.L972
 13327              	.LVL1145:
 13328              	.L1099:
3171:src/keys.c    **** 		goto reset_window;
ARM GAS  /tmp/ccF3vcso.s 			page 367


 13329              		.loc 1 3171 18 view .LVU4073
 13330              	.LBE1338:
 13331              	.LBE1397:
 13332              	.LBE1460:
 13333              	.LBE1533:
3651:src/keys.c    **** 	NonProgrammable = 0;
 13334              		.loc 1 3651 26 view .LVU4074
 13335 1a8a 5B4A     		ldr	r2, .L1432+4
 13336 1a8c 1368     		ldr	r3, [r2]
 13337 1a8e 2546     		mov	r5, r4
 13338 1a90 002B     		cmp	r3, #0
 13339 1a92 7EF4D5AD 		bne	.L1100
3651:src/keys.c    **** 	NonProgrammable = 0;
 13340              		.loc 1 3651 26 view .LVU4075
 13341 1a96 FEF745BD 		b	.L1101
 13342              	.LVL1146:
 13343              	.L1364:
 13344              	.LBB1534:
 13345              	.LBB1461:
 13346              	.LBB1398:
 13347              	.LBB1141:
2848:src/keys.c    **** 		else
 13348              		.loc 1 2848 4 is_stmt 1 view .LVU4076
2848:src/keys.c    **** 		else
 13349              		.loc 1 2848 34 is_stmt 0 view .LVU4077
 13350 1a9a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13351 1a9e 3368     		ldr	r3, [r6]
 13352 1aa0 C2F30011 		ubfx	r1, r2, #4, #1
 13353              	.LVL1147:
2848:src/keys.c    **** 		else
 13354              		.loc 1 2848 26 view .LVU4078
 13355 1aa4 C1F10101 		rsb	r1, r1, #1
2848:src/keys.c    **** 		else
 13356              		.loc 1 2848 22 view .LVU4079
 13357 1aa8 61F30412 		bfi	r2, r1, #4, #1
 13358 1aac 88F81620 		strb	r2, [r8, #22]
2851:src/keys.c    **** 
 13359              		.loc 1 2851 10 view .LVU4080
 13360 1ab0 3324     		movs	r4, #51
 13361              	.LVL1148:
2851:src/keys.c    **** 
 13362              		.loc 1 2851 10 view .LVU4081
 13363 1ab2 FEF702BB 		b	.L796
 13364              	.LVL1149:
 13365              	.L866:
2851:src/keys.c    **** 
 13366              		.loc 1 2851 10 view .LVU4082
 13367              	.LBE1141:
 13368              	.LBE1398:
 13369              	.LBB1399:
 13370              	.LBB1174:
2372:src/keys.c    **** 		// Special 1
 13371              		.loc 1 2372 7 is_stmt 1 view .LVU4083
2372:src/keys.c    **** 		// Special 1
 13372              		.loc 1 2372 10 is_stmt 0 view .LVU4084
 13373 1ab6 012B     		cmp	r3, #1
 13374 1ab8 7FF428A8 		bne	.L868
ARM GAS  /tmp/ccF3vcso.s 			page 368


2374:src/keys.c    **** 	}
 13375              		.loc 1 2374 3 is_stmt 1 view .LVU4085
2374:src/keys.c    **** 	}
 13376              		.loc 1 2374 18 is_stmt 0 view .LVU4086
 13377 1abc BEF1000F 		cmp	lr, #0
 13378 1ac0 14BF     		ite	ne
 13379 1ac2 2724     		movne	r4, #39
 13380              	.LVL1150:
2374:src/keys.c    **** 	}
 13381              		.loc 1 2374 18 view .LVU4087
 13382 1ac4 1E24     		moveq	r4, #30
2374:src/keys.c    **** 	}
 13383              		.loc 1 2374 47 view .LVU4088
 13384 1ac6 5444     		add	r4, r4, r10
 13385 1ac8 FEF790BC 		b	.L830
 13386              	.LVL1151:
 13387              	.L1034:
2374:src/keys.c    **** 	}
 13388              		.loc 1 2374 47 view .LVU4089
 13389              	.LBE1174:
 13390              	.LBE1399:
 13391              	.LBB1400:
 13392              	.LBB970:
1302:src/keys.c    ****      return process_fg_shifted (c);
 13393              		.loc 1 1302 4 is_stmt 1 view .LVU4090
1302:src/keys.c    ****      return process_fg_shifted (c);
 13394              		.loc 1 1302 7 is_stmt 0 view .LVU4091
 13395 1acc 631F     		subs	r3, r4, #5
 13396 1ace 032B     		cmp	r3, #3
 13397 1ad0 7FF69DAD 		bls	.L1314
1306:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13398              		.loc 1 1306 4 is_stmt 1 view .LVU4092
1306:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13399              		.loc 1 1306 7 is_stmt 0 view .LVU4093
 13400 1ad4 0F2C     		cmp	r4, #15
 13401 1ad6 3FF471AD 		beq	.L1121
 13402              	.L1307:
1333:src/keys.c    ****      switch (c) {
 13403              		.loc 1 1333 6 is_stmt 1 view .LVU4094
 13404 1ada 0020     		movs	r0, #0
 13405 1adc FFF7FEFF 		bl	finish_cpx_entry
 13406              	.LVL1152:
1334:src/keys.c    ****      case (K60):
 13407              		.loc 1 1334 6 view .LVU4095
 13408 1ae0 A4F10D03 		sub	r3, r4, #13
 13409 1ae4 192B     		cmp	r3, #25
 13410 1ae6 3FF66CAD 		bhi	.L1312
 13411 1aea 01A2     		adr	r2, .L1046
 13412 1aec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13413              		.p2align 2
 13414              	.L1046:
 13415 1af0 931B0000 		.word	.L1053+1
 13416 1af4 011C0000 		.word	.L1052+1
 13417 1af8 C3150000 		.word	.L1312+1
 13418 1afc 591C0000 		.word	.L1051+1
 13419 1b00 C3150000 		.word	.L1312+1
 13420 1b04 C3150000 		.word	.L1312+1
ARM GAS  /tmp/ccF3vcso.s 			page 369


 13421 1b08 C3150000 		.word	.L1312+1
 13422 1b0c C3150000 		.word	.L1312+1
 13423 1b10 C3150000 		.word	.L1312+1
 13424 1b14 E11B0000 		.word	.L1050+1
 13425 1b18 C3150000 		.word	.L1312+1
 13426 1b1c B71C0000 		.word	.L1049+1
 13427 1b20 C3150000 		.word	.L1312+1
 13428 1b24 C3150000 		.word	.L1312+1
 13429 1b28 C3150000 		.word	.L1312+1
 13430 1b2c 471C0000 		.word	.L1048+1
 13431 1b30 C3150000 		.word	.L1312+1
 13432 1b34 C3150000 		.word	.L1312+1
 13433 1b38 C3150000 		.word	.L1312+1
 13434 1b3c C3150000 		.word	.L1312+1
 13435 1b40 C3150000 		.word	.L1312+1
 13436 1b44 C3150000 		.word	.L1312+1
 13437 1b48 C3150000 		.word	.L1312+1
 13438 1b4c 831B0000 		.word	.L1047+1
 13439 1b50 C3150000 		.word	.L1312+1
 13440 1b54 591B0000 		.word	.L1045+1
 13441              		.p2align 1
 13442              	.L1045:
1370:src/keys.c    ****        if (shift == SHIFT_F) {
 13443              		.loc 1 1370 8 view .LVU4096
 13444              	.LBB897:
 13445              	.LBI897:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13446              		.loc 1 114 13 view .LVU4097
 13447              	.LBE897:
 13448              	.LBE970:
 13449              	.LBE1400:
 13450              	.LBE1461:
 13451              	.LBE1534:
 115:src/keys.c    **** }
 13452              		.loc 1 115 2 view .LVU4098
 13453              	.LVL1153:
 13454              	.LBB1535:
 13455              	.LBB1462:
 13456              	.LBB1401:
 13457              	.LBB971:
 13458              	.LBB904:
 13459              	.LBB898:
 13460              	.LBI898:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13461              		.loc 1 104 20 view .LVU4099
 13462              	.LBB899:
 105:src/keys.c    **** 	State2.shifts = shift;
 13463              		.loc 1 105 2 view .LVU4100
 13464              	.LBB900:
 13465              	.LBI900:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13466              		.loc 1 96 13 view .LVU4101
 13467              	.LBB901:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13468              		.loc 1 97 2 view .LVU4102
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13469              		.loc 1 97 18 is_stmt 0 view .LVU4103
ARM GAS  /tmp/ccF3vcso.s 			page 370


 13470 1b58 FFF7FEFF 		bl	shift_down
 13471              	.LVL1154:
  98:src/keys.c    **** }
 13472              		.loc 1 98 2 is_stmt 1 view .LVU4104
 13473              	.LBE901:
 13474              	.LBE900:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13475              		.loc 1 106 2 view .LVU4105
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13476              		.loc 1 106 16 is_stmt 0 view .LVU4106
 13477 1b5c 0023     		movs	r3, #0
 13478              	.LBE899:
 13479              	.LBE898:
 13480              	.LBE904:
1371:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13481              		.loc 1 1371 11 view .LVU4107
 13482 1b5e BAF1010F 		cmp	r10, #1
 13483              	.LBB905:
 13484              	.LBB903:
 13485              	.LBB902:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13486              		.loc 1 106 16 view .LVU4108
 13487 1b62 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13488              		.loc 1 108 2 is_stmt 1 view .LVU4109
 13489              	.LVL1155:
 108:src/keys.c    **** }
 13490              		.loc 1 108 2 is_stmt 0 view .LVU4110
 13491              	.LBE902:
 13492              	.LBE903:
 13493              	.LBE905:
1371:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13494              		.loc 1 1371 8 is_stmt 1 view .LVU4111
1371:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13495              		.loc 1 1371 11 is_stmt 0 view .LVU4112
 13496 1b66 00F09480 		beq	.L1062
1374:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13497              		.loc 1 1374 13 is_stmt 1 view .LVU4113
1374:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13498              		.loc 1 1374 16 is_stmt 0 view .LVU4114
 13499 1b6a BAF1020F 		cmp	r10, #2
 13500 1b6e 2CD0     		beq	.L1412
 13501              	.L1058:
1408:src/keys.c    ****      return STATE_UNFINISHED;
 13502              		.loc 1 1408 6 is_stmt 1 view .LVU4115
 13503              	.LBB906:
 13504              	.LBI906:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13505              		.loc 1 114 13 view .LVU4116
 13506              	.LBE906:
 13507              	.LBE971:
 13508              	.LBE1401:
 13509              	.LBE1462:
 13510              	.LBE1535:
 115:src/keys.c    **** }
 13511              		.loc 1 115 2 view .LVU4117
 13512              	.LVL1156:
ARM GAS  /tmp/ccF3vcso.s 			page 371


 13513              	.LBB1536:
 13514              	.LBB1463:
 13515              	.LBB1402:
 13516              	.LBB972:
 13517              	.LBB911:
 13518              	.LBB907:
 13519              	.LBI907:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13520              		.loc 1 104 20 view .LVU4118
 13521              	.LBB908:
 105:src/keys.c    **** 	State2.shifts = shift;
 13522              		.loc 1 105 2 view .LVU4119
 13523              	.LBB909:
 13524              	.LBI909:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13525              		.loc 1 96 13 view .LVU4120
 13526              	.LBB910:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13527              		.loc 1 97 2 view .LVU4121
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13528              		.loc 1 97 18 is_stmt 0 view .LVU4122
 13529 1b70 FFF7FEFF 		bl	shift_down
 13530              	.LVL1157:
  98:src/keys.c    **** }
 13531              		.loc 1 98 2 is_stmt 1 view .LVU4123
 13532              	.LBE910:
 13533              	.LBE909:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13534              		.loc 1 106 2 view .LVU4124
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13535              		.loc 1 106 16 is_stmt 0 view .LVU4125
 13536 1b74 0022     		movs	r2, #0
 13537 1b76 3368     		ldr	r3, [r6]
 13538 1b78 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13539              		.loc 1 108 2 is_stmt 1 view .LVU4126
 13540              	.LVL1158:
 108:src/keys.c    **** }
 13541              		.loc 1 108 2 is_stmt 0 view .LVU4127
 13542              	.LBE908:
 13543              	.LBE907:
 13544              	.LBE911:
1409:src/keys.c    ****    }
 13545              		.loc 1 1409 6 is_stmt 1 view .LVU4128
1409:src/keys.c    ****    }
 13546              		.loc 1 1409 13 is_stmt 0 view .LVU4129
 13547 1b7c 3324     		movs	r4, #51
 13548              	.LVL1159:
1409:src/keys.c    ****    }
 13549              		.loc 1 1409 13 view .LVU4130
 13550 1b7e FEF79CBA 		b	.L796
 13551              	.LVL1160:
 13552              	.L1047:
1336:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
 13553              		.loc 1 1336 8 is_stmt 1 view .LVU4131
 13554              	.LBB912:
 13555              	.LBI912:
ARM GAS  /tmp/ccF3vcso.s 			page 372


 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13556              		.loc 1 114 13 view .LVU4132
 13557              	.LBE912:
 13558              	.LBE972:
 13559              	.LBE1402:
 13560              	.LBE1463:
 13561              	.LBE1536:
 115:src/keys.c    **** }
 13562              		.loc 1 115 2 view .LVU4133
 13563              	.LBB1537:
 13564              	.LBB1464:
 13565              	.LBB1403:
 13566              	.LBB973:
 13567              	.LBB919:
 13568              	.LBB913:
 13569              	.LBI913:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13570              		.loc 1 104 20 view .LVU4134
 13571              	.LBB914:
 105:src/keys.c    **** 	State2.shifts = shift;
 13572              		.loc 1 105 2 view .LVU4135
 13573              	.LBB915:
 13574              	.LBI915:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13575              		.loc 1 96 13 view .LVU4136
 13576              	.LBB916:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13577              		.loc 1 97 2 view .LVU4137
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13578              		.loc 1 97 18 is_stmt 0 view .LVU4138
 13579 1b82 FFF7FEFF 		bl	shift_down
 13580              	.LVL1161:
  98:src/keys.c    **** }
 13581              		.loc 1 98 2 is_stmt 1 view .LVU4139
 13582              	.LBE916:
 13583              	.LBE915:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13584              		.loc 1 106 2 view .LVU4140
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13585              		.loc 1 106 16 is_stmt 0 view .LVU4141
 13586 1b86 0023     		movs	r3, #0
 13587              	.LBE914:
 13588              	.LBE913:
 13589              	.LBE919:
1337:src/keys.c    ****      case (K21): // x<->y key
 13590              		.loc 1 1337 11 view .LVU4142
 13591 1b88 BAF1030F 		cmp	r10, #3
 13592              	.LBB920:
 13593              	.LBB918:
 13594              	.LBB917:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13595              		.loc 1 106 16 view .LVU4143
 13596 1b8c 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13597              		.loc 1 108 2 is_stmt 1 view .LVU4144
 13598              	.LVL1162:
 108:src/keys.c    **** }
ARM GAS  /tmp/ccF3vcso.s 			page 373


 13599              		.loc 1 108 2 is_stmt 0 view .LVU4145
 13600              	.LBE917:
 13601              	.LBE918:
 13602              	.LBE920:
1337:src/keys.c    ****      case (K21): // x<->y key
 13603              		.loc 1 1337 8 is_stmt 1 view .LVU4146
1337:src/keys.c    ****      case (K21): // x<->y key
 13604              		.loc 1 1337 11 is_stmt 0 view .LVU4147
 13605 1b90 11D0     		beq	.L1054
 13606              	.L1053:
1339:src/keys.c    **** 	 return process_fg_shifted(c); // SHOW
 13607              		.loc 1 1339 8 is_stmt 1 view .LVU4148
1339:src/keys.c    **** 	 return process_fg_shifted(c); // SHOW
 13608              		.loc 1 1339 11 is_stmt 0 view .LVU4149
 13609 1b92 BAF1010F 		cmp	r10, #1
 13610 1b96 3FF43AAD 		beq	.L1314
1342:src/keys.c    **** 	 reset_shift();
 13611              		.loc 1 1342 8 is_stmt 1 view .LVU4150
1342:src/keys.c    **** 	 reset_shift();
 13612              		.loc 1 1342 11 is_stmt 0 view .LVU4151
 13613 1b9a BAF1020F 		cmp	r10, #2
 13614 1b9e E7D1     		bne	.L1058
1343:src/keys.c    **** 	 return process_normal(K21); // x<>y
 13615              		.loc 1 1343 3 is_stmt 1 view .LVU4152
 13616              	.LBB921:
 13617              	.LBI921:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13618              		.loc 1 114 13 view .LVU4153
 13619              	.LBE921:
 13620              	.LBE973:
 13621              	.LBE1403:
 13622              	.LBE1464:
 13623              	.LBE1537:
 115:src/keys.c    **** }
 13624              		.loc 1 115 2 view .LVU4154
 13625              	.LVL1163:
 13626              	.LBB1538:
 13627              	.LBB1465:
 13628              	.LBB1404:
 13629              	.LBB974:
 13630              	.LBB928:
 13631              	.LBB922:
 13632              	.LBI922:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13633              		.loc 1 104 20 view .LVU4155
 13634              	.LBB923:
 105:src/keys.c    **** 	State2.shifts = shift;
 13635              		.loc 1 105 2 view .LVU4156
 13636              	.LBB924:
 13637              	.LBI924:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13638              		.loc 1 96 13 view .LVU4157
 13639              	.LBB925:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13640              		.loc 1 97 2 view .LVU4158
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13641              		.loc 1 97 18 is_stmt 0 view .LVU4159
ARM GAS  /tmp/ccF3vcso.s 			page 374


 13642 1ba0 FFF7FEFF 		bl	shift_down
 13643              	.LVL1164:
  98:src/keys.c    **** }
 13644              		.loc 1 98 2 is_stmt 1 view .LVU4160
 13645              	.LBE925:
 13646              	.LBE924:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13647              		.loc 1 106 2 view .LVU4161
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13648              		.loc 1 106 16 is_stmt 0 view .LVU4162
 13649 1ba4 0023     		movs	r3, #0
 13650              	.LBE923:
 13651              	.LBE922:
 13652              	.LBE928:
1344:src/keys.c    ****        }
 13653              		.loc 1 1344 10 view .LVU4163
 13654 1ba6 0D20     		movs	r0, #13
 13655              	.LBB929:
 13656              	.LBB927:
 13657              	.LBB926:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13658              		.loc 1 106 16 view .LVU4164
 13659 1ba8 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13660              		.loc 1 108 2 is_stmt 1 view .LVU4165
 13661              	.LVL1165:
 108:src/keys.c    **** }
 13662              		.loc 1 108 2 is_stmt 0 view .LVU4166
 13663              	.LBE926:
 13664              	.LBE927:
 13665              	.LBE929:
1344:src/keys.c    ****        }
 13666              		.loc 1 1344 3 is_stmt 1 view .LVU4167
1344:src/keys.c    ****        }
 13667              		.loc 1 1344 10 is_stmt 0 view .LVU4168
 13668 1bac FFF7FEFF 		bl	process_normal
 13669              	.LVL1166:
 13670 1bb0 0446     		mov	r4, r0
 13671              	.LVL1167:
1344:src/keys.c    ****        }
 13672              		.loc 1 1344 10 view .LVU4169
 13673 1bb2 FEF71BBC 		b	.L830
 13674              	.LVL1168:
 13675              	.L1054:
1344:src/keys.c    ****        }
 13676              		.loc 1 1344 10 view .LVU4170
 13677              	.LBE974:
 13678              	.LBE1404:
 13679              	.LBE1465:
 13680              	.LBE1538:
3651:src/keys.c    **** 	NonProgrammable = 0;
 13681              		.loc 1 3651 7 is_stmt 1 view .LVU4171
3651:src/keys.c    **** 	NonProgrammable = 0;
 13682              		.loc 1 3651 11 is_stmt 0 view .LVU4172
 13683 1bb6 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3651:src/keys.c    **** 	NonProgrammable = 0;
 13684              		.loc 1 3651 10 view .LVU4173
ARM GAS  /tmp/ccF3vcso.s 			page 375


 13685 1bba 5106     		lsls	r1, r2, #25
 13686 1bbc 73D5     		bpl	.L1158
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13687              		.loc 1 3652 2 is_stmt 1 view .LVU4174
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13688              		.loc 1 3652 18 is_stmt 0 view .LVU4175
 13689 1bbe 0E4A     		ldr	r2, .L1432+4
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13690              		.loc 1 3653 32 view .LVU4176
 13691 1bc0 4FF48175 		mov	r5, #258
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13692              		.loc 1 3652 18 view .LVU4177
 13693 1bc4 1360     		str	r3, [r2]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13694              		.loc 1 3653 2 is_stmt 1 view .LVU4178
 13695 1bc6 FEF7A6BD 		b	.L1098
 13696              	.LVL1169:
 13697              	.L1412:
3651:src/keys.c    **** 	NonProgrammable = 0;
 13698              		.loc 1 3651 7 view .LVU4179
3651:src/keys.c    **** 	NonProgrammable = 0;
 13699              		.loc 1 3651 11 is_stmt 0 view .LVU4180
 13700 1bca 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3651:src/keys.c    **** 	NonProgrammable = 0;
 13701              		.loc 1 3651 10 view .LVU4181
 13702 1bce 5006     		lsls	r0, r2, #25
 13703 1bd0 40F1A080 		bpl	.L1162
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13704              		.loc 1 3652 2 is_stmt 1 view .LVU4182
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13705              		.loc 1 3652 18 is_stmt 0 view .LVU4183
 13706 1bd4 084A     		ldr	r2, .L1432+4
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13707              		.loc 1 3653 32 view .LVU4184
 13708 1bd6 4FF4E775 		mov	r5, #462
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13709              		.loc 1 3652 18 view .LVU4185
 13710 1bda 1360     		str	r3, [r2]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13711              		.loc 1 3653 2 is_stmt 1 view .LVU4186
 13712 1bdc FEF79BBD 		b	.L1098
 13713              	.LVL1170:
 13714              	.L1050:
 13715              	.LBB1539:
 13716              	.LBB1466:
 13717              	.LBB1405:
 13718              	.LBB975:
1386:src/keys.c    ****      case (K34): // divide key
 13719              		.loc 1 1386 8 view .LVU4187
1388:src/keys.c    **** 	 reset_shift();
 13720              		.loc 1 1388 8 view .LVU4188
1388:src/keys.c    **** 	 reset_shift();
 13721              		.loc 1 1388 11 is_stmt 0 view .LVU4189
 13722 1be0 BAF1030F 		cmp	r10, #3
 13723 1be4 3EF483AD 		beq	.L1413
1393:src/keys.c    ****        }
 13724              		.loc 1 1393 3 is_stmt 1 view .LVU4190
ARM GAS  /tmp/ccF3vcso.s 			page 376


1393:src/keys.c    ****        }
 13725              		.loc 1 1393 10 is_stmt 0 view .LVU4191
 13726 1be8 1620     		movs	r0, #22
 13727 1bea FFF7FEFF 		bl	process_cmplx
 13728              	.LVL1171:
 13729 1bee 0446     		mov	r4, r0
 13730              	.LVL1172:
1393:src/keys.c    ****        }
 13731              		.loc 1 1393 10 view .LVU4192
 13732 1bf0 FEF7FCBB 		b	.L830
 13733              	.L1433:
 13734              		.align	2
 13735              	.L1432:
 13736 1bf4 00000000 		.word	.LANCHOR17
 13737 1bf8 00000000 		.word	NonProgrammable
 13738 1bfc 00000000 		.word	main_ram
 13739              	.LVL1173:
 13740              	.L1052:
1361:src/keys.c    ****        if (shift == SHIFT_F ) {
 13741              		.loc 1 1361 8 is_stmt 1 view .LVU4193
 13742              	.LBB930:
 13743              	.LBI930:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13744              		.loc 1 114 13 view .LVU4194
 13745              	.LBE930:
 13746              	.LBE975:
 13747              	.LBE1405:
 13748              	.LBE1466:
 13749              	.LBE1539:
 115:src/keys.c    **** }
 13750              		.loc 1 115 2 view .LVU4195
 13751              	.LBB1540:
 13752              	.LBB1467:
 13753              	.LBB1406:
 13754              	.LBB976:
 13755              	.LBB937:
 13756              	.LBB931:
 13757              	.LBI931:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13758              		.loc 1 104 20 view .LVU4196
 13759              	.LBB932:
 105:src/keys.c    **** 	State2.shifts = shift;
 13760              		.loc 1 105 2 view .LVU4197
 13761              	.LBB933:
 13762              	.LBI933:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13763              		.loc 1 96 13 view .LVU4198
 13764              	.LBB934:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13765              		.loc 1 97 2 view .LVU4199
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13766              		.loc 1 97 18 is_stmt 0 view .LVU4200
 13767 1c00 FFF7FEFF 		bl	shift_down
 13768              	.LVL1174:
  98:src/keys.c    **** }
 13769              		.loc 1 98 2 is_stmt 1 view .LVU4201
 13770              	.LBE934:
ARM GAS  /tmp/ccF3vcso.s 			page 377


 13771              	.LBE933:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13772              		.loc 1 106 2 view .LVU4202
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13773              		.loc 1 106 16 is_stmt 0 view .LVU4203
 13774 1c04 0023     		movs	r3, #0
 13775              	.LBE932:
 13776              	.LBE931:
 13777              	.LBE937:
1362:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13778              		.loc 1 1362 11 view .LVU4204
 13779 1c06 BAF1010F 		cmp	r10, #1
 13780              	.LBB938:
 13781              	.LBB936:
 13782              	.LBB935:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13783              		.loc 1 106 16 view .LVU4205
 13784 1c0a 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13785              		.loc 1 108 2 is_stmt 1 view .LVU4206
 13786              	.LVL1175:
 108:src/keys.c    **** }
 13787              		.loc 1 108 2 is_stmt 0 view .LVU4207
 13788              	.LBE935:
 13789              	.LBE936:
 13790              	.LBE938:
1362:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13791              		.loc 1 1362 8 is_stmt 1 view .LVU4208
1362:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13792              		.loc 1 1362 11 is_stmt 0 view .LVU4209
 13793 1c0e 10D0     		beq	.L1060
1365:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13794              		.loc 1 1365 13 is_stmt 1 view .LVU4210
1365:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13795              		.loc 1 1365 16 is_stmt 0 view .LVU4211
 13796 1c10 BAF1030F 		cmp	r10, #3
 13797 1c14 ACD1     		bne	.L1058
 13798              	.LVL1176:
1365:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13799              		.loc 1 1365 16 view .LVU4212
 13800              	.LBE976:
 13801              	.LBE1406:
 13802              	.LBE1467:
 13803              	.LBE1540:
3651:src/keys.c    **** 	NonProgrammable = 0;
 13804              		.loc 1 3651 7 is_stmt 1 view .LVU4213
3651:src/keys.c    **** 	NonProgrammable = 0;
 13805              		.loc 1 3651 11 is_stmt 0 view .LVU4214
 13806 1c16 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3651:src/keys.c    **** 	NonProgrammable = 0;
 13807              		.loc 1 3651 10 view .LVU4215
 13808 1c1a 5506     		lsls	r5, r2, #25
 13809 1c1c 05D5     		bpl	.L1160
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13810              		.loc 1 3652 2 is_stmt 1 view .LVU4216
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13811              		.loc 1 3652 18 is_stmt 0 view .LVU4217
ARM GAS  /tmp/ccF3vcso.s 			page 378


 13812 1c1e 964A     		ldr	r2, .L1434
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13813              		.loc 1 3653 32 view .LVU4218
 13814 1c20 40F2CD15 		movw	r5, #461
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13815              		.loc 1 3652 18 view .LVU4219
 13816 1c24 1360     		str	r3, [r2]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13817              		.loc 1 3653 2 is_stmt 1 view .LVU4220
 13818 1c26 FEF776BD 		b	.L1098
 13819              	.L1160:
 13820              	.LBB1541:
 13821              	.LBB1468:
 13822              	.LBB1407:
 13823              	.LBB977:
1366:src/keys.c    ****        }
 13824              		.loc 1 1366 10 is_stmt 0 view .LVU4221
 13825 1c2a 40F2CD14 		movw	r4, #461
 13826 1c2e FEF76ABD 		b	.L1041
 13827              	.LVL1177:
 13828              	.L1060:
1366:src/keys.c    ****        }
 13829              		.loc 1 1366 10 view .LVU4222
 13830              	.LBE977:
 13831              	.LBE1407:
 13832              	.LBE1468:
 13833              	.LBE1541:
3651:src/keys.c    **** 	NonProgrammable = 0;
 13834              		.loc 1 3651 7 is_stmt 1 view .LVU4223
3651:src/keys.c    **** 	NonProgrammable = 0;
 13835              		.loc 1 3651 11 is_stmt 0 view .LVU4224
 13836 1c32 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3651:src/keys.c    **** 	NonProgrammable = 0;
 13837              		.loc 1 3651 10 view .LVU4225
 13838 1c36 5206     		lsls	r2, r2, #25
 13839 1c38 4DD5     		bpl	.L1159
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13840              		.loc 1 3652 2 is_stmt 1 view .LVU4226
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13841              		.loc 1 3652 18 is_stmt 0 view .LVU4227
 13842 1c3a 8F4A     		ldr	r2, .L1434
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13843              		.loc 1 3653 32 view .LVU4228
 13844 1c3c 4FF4E675 		mov	r5, #460
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13845              		.loc 1 3652 18 view .LVU4229
 13846 1c40 1360     		str	r3, [r2]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13847              		.loc 1 3653 2 is_stmt 1 view .LVU4230
 13848 1c42 FEF768BD 		b	.L1098
 13849              	.LVL1178:
 13850              	.L1048:
 13851              	.LBB1542:
 13852              	.LBB1469:
 13853              	.LBB1408:
 13854              	.LBB978:
1379:src/keys.c    **** 	 reset_shift();
ARM GAS  /tmp/ccF3vcso.s 			page 379


 13855              		.loc 1 1379 8 view .LVU4231
1379:src/keys.c    **** 	 reset_shift();
 13856              		.loc 1 1379 11 is_stmt 0 view .LVU4232
 13857 1c46 BAF1030F 		cmp	r10, #3
 13858 1c4a 67D0     		beq	.L1414
1384:src/keys.c    ****        }
 13859              		.loc 1 1384 3 is_stmt 1 view .LVU4233
1384:src/keys.c    ****        }
 13860              		.loc 1 1384 10 is_stmt 0 view .LVU4234
 13861 1c4c 1C20     		movs	r0, #28
 13862 1c4e FFF7FEFF 		bl	process_cmplx
 13863              	.LVL1179:
 13864 1c52 0446     		mov	r4, r0
 13865              	.LVL1180:
1384:src/keys.c    ****        }
 13866              		.loc 1 1384 10 view .LVU4235
 13867 1c54 FEF7CABB 		b	.L830
 13868              	.LVL1181:
 13869              	.L1051:
1395:src/keys.c    ****      case (K24): // <- key
 13870              		.loc 1 1395 8 is_stmt 1 view .LVU4236
1397:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13871              		.loc 1 1397 8 view .LVU4237
1397:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13872              		.loc 1 1397 12 is_stmt 0 view .LVU4238
 13873 1c58 DBF80030 		ldr	r3, [fp]
1397:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13874              		.loc 1 1397 11 view .LVU4239
 13875 1c5c 93F9AC37 		ldrsb	r3, [r3, #1964]
 13876 1c60 002B     		cmp	r3, #0
 13877 1c62 85DB     		blt	.L1058
1398:src/keys.c    **** 	 zero_X ();
 13878              		.loc 1 1398 8 is_stmt 1 view .LVU4240
1398:src/keys.c    **** 	 zero_X ();
 13879              		.loc 1 1398 11 is_stmt 0 view .LVU4241
 13880 1c64 BAF1030F 		cmp	r10, #3
 13881 1c68 82D1     		bne	.L1058
1399:src/keys.c    **** 	 State2.state_lift = 0;
 13882              		.loc 1 1399 3 is_stmt 1 view .LVU4242
 13883 1c6a FFF7FEFF 		bl	zero_X
 13884              	.LVL1182:
1400:src/keys.c    **** 	 SET_REAL;
 13885              		.loc 1 1400 3 view .LVU4243
1400:src/keys.c    **** 	 SET_REAL;
 13886              		.loc 1 1400 21 is_stmt 0 view .LVU4244
 13887 1c6e 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1401:src/keys.c    **** 	 stack_begin (0);
 13888              		.loc 1 1401 3 view .LVU4245
 13889 1c72 DBF80020 		ldr	r2, [fp]
1400:src/keys.c    **** 	 SET_REAL;
 13890              		.loc 1 1400 21 view .LVU4246
 13891 1c76 6FF38613 		bfc	r3, #6, #1
 13892 1c7a 88F81730 		strb	r3, [r8, #23]
1401:src/keys.c    **** 	 stack_begin (0);
 13893              		.loc 1 1401 3 is_stmt 1 view .LVU4247
 13894 1c7e 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 13895 1c82 43F00203 		orr	r3, r3, #2
ARM GAS  /tmp/ccF3vcso.s 			page 380


 13896 1c86 82F8AC37 		strb	r3, [r2, #1964]
1402:src/keys.c    ****        }
 13897              		.loc 1 1402 3 view .LVU4248
 13898 1c8a 0020     		movs	r0, #0
 13899 1c8c FFF7FEFF 		bl	stack_begin
 13900              	.LVL1183:
 13901 1c90 6EE7     		b	.L1058
 13902              	.L1062:
 13903              	.LVL1184:
1402:src/keys.c    ****        }
 13904              		.loc 1 1402 3 is_stmt 0 view .LVU4249
 13905              	.LBE978:
 13906              	.LBE1408:
 13907              	.LBE1469:
 13908              	.LBE1542:
3651:src/keys.c    **** 	NonProgrammable = 0;
 13909              		.loc 1 3651 7 is_stmt 1 view .LVU4250
3651:src/keys.c    **** 	NonProgrammable = 0;
 13910              		.loc 1 3651 11 is_stmt 0 view .LVU4251
 13911 1c92 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3651:src/keys.c    **** 	NonProgrammable = 0;
 13912              		.loc 1 3651 10 view .LVU4252
 13913 1c96 5406     		lsls	r4, r2, #25
 13914 1c98 09D5     		bpl	.L1161
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13915              		.loc 1 3652 2 is_stmt 1 view .LVU4253
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13916              		.loc 1 3652 18 is_stmt 0 view .LVU4254
 13917 1c9a 774A     		ldr	r2, .L1434
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13918              		.loc 1 3653 32 view .LVU4255
 13919 1c9c 40F2CF15 		movw	r5, #463
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13920              		.loc 1 3652 18 view .LVU4256
 13921 1ca0 1360     		str	r3, [r2]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13922              		.loc 1 3653 2 is_stmt 1 view .LVU4257
 13923 1ca2 FEF738BD 		b	.L1098
 13924              	.LVL1185:
 13925              	.L1158:
 13926              	.LBB1543:
 13927              	.LBB1470:
 13928              	.LBB1409:
 13929              	.LBB979:
1337:src/keys.c    ****      case (K21): // x<->y key
 13930              		.loc 1 1337 37 is_stmt 0 view .LVU4258
 13931 1ca6 4FF48174 		mov	r4, #258
 13932 1caa FEF72CBD 		b	.L1041
 13933              	.LVL1186:
 13934              	.L1161:
1372:src/keys.c    ****        }
 13935              		.loc 1 1372 10 view .LVU4259
 13936 1cae 40F2CF14 		movw	r4, #463
 13937 1cb2 FEF728BD 		b	.L1041
 13938              	.LVL1187:
 13939              	.L1049:
1348:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
ARM GAS  /tmp/ccF3vcso.s 			page 381


 13940              		.loc 1 1348 8 is_stmt 1 view .LVU4260
1348:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13941              		.loc 1 1348 11 is_stmt 0 view .LVU4261
 13942 1cb6 BAF1010F 		cmp	r10, #1
 13943 1cba 19D0     		beq	.L1415
1351:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13944              		.loc 1 1351 13 is_stmt 1 view .LVU4262
1351:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13945              		.loc 1 1351 16 is_stmt 0 view .LVU4263
 13946 1cbc BAF1020F 		cmp	r10, #2
 13947 1cc0 0DD0     		beq	.L1416
1356:src/keys.c    **** 	 return process_cmplx (c);
 13948              		.loc 1 1356 13 is_stmt 1 view .LVU4264
1356:src/keys.c    **** 	 return process_cmplx (c);
 13949              		.loc 1 1356 16 is_stmt 0 view .LVU4265
 13950 1cc2 BAF1030F 		cmp	r10, #3
 13951 1cc6 7FF453AF 		bne	.L1058
1357:src/keys.c    ****        }
 13952              		.loc 1 1357 3 is_stmt 1 view .LVU4266
1357:src/keys.c    ****        }
 13953              		.loc 1 1357 10 is_stmt 0 view .LVU4267
 13954 1cca 1820     		movs	r0, #24
 13955 1ccc FFF7FEFF 		bl	process_cmplx
 13956              	.LVL1188:
 13957 1cd0 0446     		mov	r4, r0
 13958              	.LVL1189:
1357:src/keys.c    ****        }
 13959              		.loc 1 1357 10 view .LVU4268
 13960 1cd2 FEF78BBB 		b	.L830
 13961              	.LVL1190:
 13962              	.L1159:
1363:src/keys.c    ****        }
 13963              		.loc 1 1363 10 view .LVU4269
 13964 1cd6 4FF4E674 		mov	r4, #460
 13965 1cda FEF714BD 		b	.L1041
 13966              	.LVL1191:
 13967              	.L1416:
1352:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13968              		.loc 1 1352 3 is_stmt 1 view .LVU4270
 13969 1cde DBF80020 		ldr	r2, [fp]
1353:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
 13970              		.loc 1 1353 3 view .LVU4271
1352:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13971              		.loc 1 1352 3 is_stmt 0 view .LVU4272
 13972 1ce2 B2F8AC37 		ldrh	r3, [r2, #1964]
 13973 1ce6 43F4C073 		orr	r3, r3, #384
 13974 1cea A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
1354:src/keys.c    ****        }
 13975              		.loc 1 1354 18 is_stmt 1 view .LVU4273
 13976 1cee 3FE7     		b	.L1058
 13977              	.L1415:
1349:src/keys.c    ****        }
 13978              		.loc 1 1349 3 view .LVU4274
 13979 1cf0 DBF80030 		ldr	r3, [fp]
 13980 1cf4 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 13981 1cf8 6FF3C712 		bfc	r2, #7, #1
 13982 1cfc 83F8AC27 		strb	r2, [r3, #1964]
ARM GAS  /tmp/ccF3vcso.s 			page 382


 13983 1d00 36E7     		b	.L1058
 13984              	.LVL1192:
 13985              	.L1363:
1349:src/keys.c    ****        }
 13986              		.loc 1 1349 3 is_stmt 0 view .LVU4275
 13987 1d02 2546     		mov	r5, r4
 13988 1d04 FEF70EBC 		b	.L1101
 13989              	.LVL1193:
 13990              	.L1067:
1349:src/keys.c    ****        }
 13991              		.loc 1 1349 3 view .LVU4276
 13992              	.LBE979:
 13993              	.LBE1409:
 13994              	.LBE1470:
 13995              	.LBE1543:
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13996              		.loc 1 3652 2 is_stmt 1 view .LVU4277
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13997              		.loc 1 3652 18 is_stmt 0 view .LVU4278
 13998 1d08 5B4A     		ldr	r2, .L1434
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13999              		.loc 1 3653 32 view .LVU4279
 14000 1d0a 4FF4C665 		mov	r5, #1584
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14001              		.loc 1 3652 18 view .LVU4280
 14002 1d0e 1360     		str	r3, [r2]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14003              		.loc 1 3653 2 is_stmt 1 view .LVU4281
 14004 1d10 FEF701BD 		b	.L1098
 14005              	.LVL1194:
 14006              	.L1162:
 14007              	.LBB1544:
 14008              	.LBB1471:
 14009              	.LBB1410:
 14010              	.LBB980:
1375:src/keys.c    ****        }
 14011              		.loc 1 1375 10 is_stmt 0 view .LVU4282
 14012 1d14 4FF4E774 		mov	r4, #462
 14013 1d18 FEF7F5BC 		b	.L1041
 14014              	.LVL1195:
 14015              	.L1414:
1380:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
 14016              		.loc 1 1380 3 is_stmt 1 view .LVU4283
 14017              	.LBB939:
 14018              	.LBI939:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14019              		.loc 1 114 13 view .LVU4284
 14020              	.LBE939:
 14021              	.LBE980:
 14022              	.LBE1410:
 14023              	.LBE1471:
 14024              	.LBE1544:
 115:src/keys.c    **** }
 14025              		.loc 1 115 2 view .LVU4285
 14026              	.LBB1545:
 14027              	.LBB1472:
 14028              	.LBB1411:
ARM GAS  /tmp/ccF3vcso.s 			page 383


 14029              	.LBB981:
 14030              	.LBB948:
 14031              	.LBB940:
 14032              	.LBI940:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14033              		.loc 1 104 20 view .LVU4286
 14034              	.LBB941:
 105:src/keys.c    **** 	State2.shifts = shift;
 14035              		.loc 1 105 2 view .LVU4287
 14036              	.LBB942:
 14037              	.LBI942:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14038              		.loc 1 96 13 view .LVU4288
 14039              	.LBB943:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14040              		.loc 1 97 2 view .LVU4289
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14041              		.loc 1 97 18 is_stmt 0 view .LVU4290
 14042 1d1c FFF7FEFF 		bl	shift_down
 14043              	.LVL1196:
  98:src/keys.c    **** }
 14044              		.loc 1 98 2 is_stmt 1 view .LVU4291
 14045              	.LBE943:
 14046              	.LBE942:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14047              		.loc 1 106 2 view .LVU4292
 14048              	.LBE941:
 14049              	.LBE940:
 14050              	.LBE948:
 14051              	.LBE981:
 14052              	.LBE1411:
 14053              	.LBE1472:
 14054              	.LBE1545:
3651:src/keys.c    **** 	NonProgrammable = 0;
 14055              		.loc 1 3651 11 is_stmt 0 view .LVU4293
 14056 1d20 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 14057              	.LBB1546:
 14058              	.LBB1473:
 14059              	.LBB1412:
 14060              	.LBB982:
 14061              	.LBB949:
 14062              	.LBB946:
 14063              	.LBB944:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14064              		.loc 1 106 16 view .LVU4294
 14065 1d24 0023     		movs	r3, #0
 14066              	.LBE944:
 14067              	.LBE946:
 14068              	.LBE949:
 14069              	.LBE982:
 14070              	.LBE1412:
 14071              	.LBE1473:
 14072              	.LBE1546:
3651:src/keys.c    **** 	NonProgrammable = 0;
 14073              		.loc 1 3651 10 view .LVU4295
 14074 1d26 5506     		lsls	r5, r2, #25
 14075              	.LBB1547:
ARM GAS  /tmp/ccF3vcso.s 			page 384


 14076              	.LBB1474:
 14077              	.LBB1413:
 14078              	.LBB983:
 14079              	.LBB950:
 14080              	.LBB947:
 14081              	.LBB945:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14082              		.loc 1 106 16 view .LVU4296
 14083 1d28 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14084              		.loc 1 108 2 is_stmt 1 view .LVU4297
 14085              	.LVL1197:
 108:src/keys.c    **** }
 14086              		.loc 1 108 2 is_stmt 0 view .LVU4298
 14087              	.LBE945:
 14088              	.LBE947:
 14089              	.LBE950:
1381:src/keys.c    ****        }
 14090              		.loc 1 1381 3 is_stmt 1 view .LVU4299
1381:src/keys.c    ****        }
 14091              		.loc 1 1381 3 is_stmt 0 view .LVU4300
 14092              	.LBE983:
 14093              	.LBE1413:
 14094              	.LBE1474:
 14095              	.LBE1547:
3651:src/keys.c    **** 	NonProgrammable = 0;
 14096              		.loc 1 3651 7 is_stmt 1 view .LVU4301
3651:src/keys.c    **** 	NonProgrammable = 0;
 14097              		.loc 1 3651 10 is_stmt 0 view .LVU4302
 14098 1d2c 00F18E80 		bmi	.L1065
 14099              	.LBB1548:
 14100              	.LBB1475:
 14101              	.LBB1414:
 14102              	.LBB984:
1381:src/keys.c    ****        }
 14103              		.loc 1 1381 10 view .LVU4303
 14104 1d30 40F22F64 		movw	r4, #1583
 14105 1d34 FEF7E7BC 		b	.L1041
 14106              	.LVL1198:
 14107              	.L1406:
1381:src/keys.c    ****        }
 14108              		.loc 1 1381 10 view .LVU4304
 14109              	.LBE984:
 14110              	.LBE1414:
 14111              	.LBB1415:
 14112              	.LBB1092:
3008:src/keys.c    **** 		State2.digval = pc;
 14113              		.loc 1 3008 4 is_stmt 1 view .LVU4305
3008:src/keys.c    **** 		State2.digval = pc;
 14114              		.loc 1 3008 9 is_stmt 0 view .LVU4306
 14115 1d38 2046     		mov	r0, r4
 14116 1d3a 0121     		movs	r1, #1
 14117 1d3c FFF7FEFF 		bl	advance_to_next_label
 14118              	.LVL1199:
 14119 1d40 0446     		mov	r4, r0
 14120              	.LVL1200:
3008:src/keys.c    **** 		State2.digval = pc;
ARM GAS  /tmp/ccF3vcso.s 			page 385


 14121              		.loc 1 3008 9 view .LVU4307
 14122 1d42 46E5     		b	.L944
 14123              	.LVL1201:
 14124              	.L1073:
3008:src/keys.c    **** 		State2.digval = pc;
 14125              		.loc 1 3008 9 view .LVU4308
 14126              	.LBE1092:
 14127              	.LBE1415:
 14128              	.LBB1416:
 14129              	.LBB985:
1432:src/keys.c    ****        return process_cmplx(c);
 14130              		.loc 1 1432 6 is_stmt 1 view .LVU4309
1432:src/keys.c    ****        return process_cmplx(c);
 14131              		.loc 1 1432 21 is_stmt 0 view .LVU4310
 14132 1d44 DBF80030 		ldr	r3, [fp]
 14133 1d48 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
1432:src/keys.c    ****        return process_cmplx(c);
 14134              		.loc 1 1432 9 view .LVU4311
 14135 1d4c 13F0060F 		tst	r3, #6
1433:src/keys.c    ****      }
 14136              		.loc 1 1433 15 view .LVU4312
 14137 1d50 4FF00E00 		mov	r0, #14
1432:src/keys.c    ****        return process_cmplx(c);
 14138              		.loc 1 1432 9 view .LVU4313
 14139 1d54 7EF4C0AA 		bne	.L1313
 14140 1d58 34E4     		b	.L1316
 14141              	.L1068:
1458:src/keys.c    ****    }
 14142              		.loc 1 1458 12 is_stmt 1 view .LVU4314
1460:src/keys.c    ****    return process_cmplx(c);
 14143              		.loc 1 1460 4 view .LVU4315
 14144 1d5a 0020     		movs	r0, #0
 14145 1d5c FFF7FEFF 		bl	finish_cpx_entry
 14146              	.LVL1202:
1461:src/keys.c    **** 
 14147              		.loc 1 1461 4 view .LVU4316
1461:src/keys.c    **** 
 14148              		.loc 1 1461 11 is_stmt 0 view .LVU4317
 14149 1d60 2046     		mov	r0, r4
 14150 1d62 FFF7FEFF 		bl	process_cmplx
 14151              	.LVL1203:
 14152 1d66 0446     		mov	r4, r0
 14153              	.LVL1204:
1461:src/keys.c    **** 
 14154              		.loc 1 1461 11 view .LVU4318
 14155 1d68 FEF740BB 		b	.L830
 14156              	.LVL1205:
 14157              	.L1392:
1461:src/keys.c    **** 
 14158              		.loc 1 1461 11 view .LVU4319
 14159              	.LBE985:
 14160              	.LBE1416:
 14161              	.LBB1417:
 14162              	.LBB1142:
 14163              	.LBB1132:
 14164              	.LBB1123:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
ARM GAS  /tmp/ccF3vcso.s 			page 386


 14165              		.loc 1 488 8 is_stmt 1 view .LVU4320
 489:src/keys.c    **** 	}
 14166              		.loc 1 489 10 is_stmt 0 view .LVU4321
 14167 1d6c 0229     		cmp	r1, #2
 14168 1d6e 08BF     		it	eq
 14169 1d70 0521     		moveq	r1, #5
 14170              	.LVL1206:
 489:src/keys.c    **** 	}
 14171              		.loc 1 489 10 view .LVU4322
 14172 1d72 FEF7E2BF 		b	.L932
 14173              	.LVL1207:
 14174              	.L1404:
 489:src/keys.c    **** 	}
 14175              		.loc 1 489 10 view .LVU4323
 14176              	.LBE1123:
 14177              	.LBE1132:
 14178              	.LBE1142:
 14179              	.LBE1417:
 14180              	.LBB1418:
 14181              	.LBB986:
 14182              	.LBB951:
1326:src/keys.c    **** 	 return process_cmplx(c);
 14183              		.loc 1 1326 3 is_stmt 1 view .LVU4324
 14184 1d76 0120     		movs	r0, #1
 14185 1d78 FFF7FEFF 		bl	finish_cpx_entry
 14186              	.LVL1208:
1327:src/keys.c    ****        }
 14187              		.loc 1 1327 3 view .LVU4325
1327:src/keys.c    ****        }
 14188              		.loc 1 1327 10 is_stmt 0 view .LVU4326
 14189 1d7c 2046     		mov	r0, r4
 14190 1d7e FFF7FEFF 		bl	process_cmplx
 14191              	.LVL1209:
 14192 1d82 0446     		mov	r4, r0
 14193              	.LVL1210:
1327:src/keys.c    ****        }
 14194              		.loc 1 1327 10 view .LVU4327
 14195 1d84 FEF732BB 		b	.L830
 14196              	.LVL1211:
 14197              	.L1403:
1327:src/keys.c    ****        }
 14198              		.loc 1 1327 10 view .LVU4328
 14199              	.LBE951:
1308:src/keys.c    ****        if ( CmdLineLength ) {
 14200              		.loc 1 1308 8 is_stmt 1 view .LVU4329
 14201              	.LBB952:
 14202              	.LBI952:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14203              		.loc 1 114 13 view .LVU4330
 14204              	.LBE952:
 14205              	.LBE986:
 14206              	.LBE1418:
 14207              	.LBE1475:
 14208              	.LBE1548:
 115:src/keys.c    **** }
 14209              		.loc 1 115 2 view .LVU4331
 14210              	.LBB1549:
ARM GAS  /tmp/ccF3vcso.s 			page 387


 14211              	.LBB1476:
 14212              	.LBB1419:
 14213              	.LBB987:
 14214              	.LBB959:
 14215              	.LBB953:
 14216              	.LBI953:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14217              		.loc 1 104 20 view .LVU4332
 14218              	.LBB954:
 105:src/keys.c    **** 	State2.shifts = shift;
 14219              		.loc 1 105 2 view .LVU4333
 14220              	.LBB955:
 14221              	.LBI955:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14222              		.loc 1 96 13 view .LVU4334
 14223              	.LBB956:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14224              		.loc 1 97 2 view .LVU4335
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14225              		.loc 1 97 18 is_stmt 0 view .LVU4336
 14226 1d88 FFF7FEFF 		bl	shift_down
 14227              	.LVL1212:
  98:src/keys.c    **** }
 14228              		.loc 1 98 2 is_stmt 1 view .LVU4337
 14229              	.LBE956:
 14230              	.LBE955:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14231              		.loc 1 106 2 view .LVU4338
 14232              	.LBE954:
 14233              	.LBE953:
 14234              	.LBE959:
1309:src/keys.c    **** 	 State2.state_lift = 0;
 14235              		.loc 1 1309 11 is_stmt 0 view .LVU4339
 14236 1d8c 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 14237              	.LBB960:
 14238              	.LBB958:
 14239              	.LBB957:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14240              		.loc 1 106 16 view .LVU4340
 14241 1d90 0023     		movs	r3, #0
 14242 1d92 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14243              		.loc 1 108 2 is_stmt 1 view .LVU4341
 14244              	.LVL1213:
 108:src/keys.c    **** }
 14245              		.loc 1 108 2 is_stmt 0 view .LVU4342
 14246              	.LBE957:
 14247              	.LBE958:
 14248              	.LBE960:
1309:src/keys.c    **** 	 State2.state_lift = 0;
 14249              		.loc 1 1309 8 is_stmt 1 view .LVU4343
1309:src/keys.c    **** 	 State2.state_lift = 0;
 14250              		.loc 1 1309 11 is_stmt 0 view .LVU4344
 14251 1d96 CAB1     		cbz	r2, .L1039
1310:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14252              		.loc 1 1310 3 is_stmt 1 view .LVU4345
1310:src/keys.c    **** 	 return OP_NIL | OP_PIB;
ARM GAS  /tmp/ccF3vcso.s 			page 388


 14253              		.loc 1 1310 21 is_stmt 0 view .LVU4346
 14254 1d98 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 14255              	.LBE987:
 14256              	.LBE1419:
 14257              	.LBE1476:
 14258              	.LBE1549:
3651:src/keys.c    **** 	NonProgrammable = 0;
 14259              		.loc 1 3651 11 view .LVU4347
 14260 1d9c 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 14261              	.LBB1550:
 14262              	.LBB1477:
 14263              	.LBB1420:
 14264              	.LBB988:
1310:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14265              		.loc 1 1310 21 view .LVU4348
 14266 1da0 63F38612 		bfi	r2, r3, #6, #1
 14267 1da4 88F81720 		strb	r2, [r8, #23]
1311:src/keys.c    ****        }
 14268              		.loc 1 1311 3 is_stmt 1 view .LVU4349
 14269              	.LVL1214:
1311:src/keys.c    ****        }
 14270              		.loc 1 1311 3 is_stmt 0 view .LVU4350
 14271              	.LBE988:
 14272              	.LBE1420:
 14273              	.LBE1477:
 14274              	.LBE1550:
3651:src/keys.c    **** 	NonProgrammable = 0;
 14275              		.loc 1 3651 7 is_stmt 1 view .LVU4351
3651:src/keys.c    **** 	NonProgrammable = 0;
 14276              		.loc 1 3651 10 is_stmt 0 view .LVU4352
 14277 1da8 4A06     		lsls	r2, r1, #25
 14278 1daa 09D4     		bmi	.L1040
 14279              	.LBB1551:
 14280              	.LBB1478:
 14281              	.LBB1421:
 14282              	.LBB989:
1311:src/keys.c    ****        }
 14283              		.loc 1 1311 10 view .LVU4353
 14284 1dac 40F2D114 		movw	r4, #465
 14285 1db0 FEF7A9BC 		b	.L1041
 14286              	.LVL1215:
 14287              	.L1405:
1295:src/keys.c    ****    }
 14288              		.loc 1 1295 6 is_stmt 1 view .LVU4354
1295:src/keys.c    ****    }
 14289              		.loc 1 1295 13 is_stmt 0 view .LVU4355
 14290 1db4 2046     		mov	r0, r4
 14291 1db6 FFF7FEFF 		bl	process_h_shifted
 14292              	.LVL1216:
 14293 1dba 0446     		mov	r4, r0
 14294              	.LVL1217:
1295:src/keys.c    ****    }
 14295              		.loc 1 1295 13 view .LVU4356
 14296 1dbc FEF716BB 		b	.L830
 14297              	.LVL1218:
 14298              	.L1040:
1295:src/keys.c    ****    }
ARM GAS  /tmp/ccF3vcso.s 			page 389


 14299              		.loc 1 1295 13 view .LVU4357
 14300              	.LBE989:
 14301              	.LBE1421:
 14302              	.LBE1478:
 14303              	.LBE1551:
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14304              		.loc 1 3652 2 is_stmt 1 view .LVU4358
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14305              		.loc 1 3652 18 is_stmt 0 view .LVU4359
 14306 1dc0 2D4A     		ldr	r2, .L1434
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14307              		.loc 1 3653 32 view .LVU4360
 14308 1dc2 40F2D115 		movw	r5, #465
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14309              		.loc 1 3652 18 view .LVU4361
 14310 1dc6 1360     		str	r3, [r2]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14311              		.loc 1 3653 2 is_stmt 1 view .LVU4362
 14312 1dc8 FEF7A5BC 		b	.L1098
 14313              	.LVL1219:
 14314              	.L1039:
3651:src/keys.c    **** 	NonProgrammable = 0;
 14315              		.loc 1 3651 7 view .LVU4363
3651:src/keys.c    **** 	NonProgrammable = 0;
 14316              		.loc 1 3651 11 is_stmt 0 view .LVU4364
 14317 1dcc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3651:src/keys.c    **** 	NonProgrammable = 0;
 14318              		.loc 1 3651 10 view .LVU4365
 14319 1dd0 5906     		lsls	r1, r3, #25
 14320 1dd2 34D5     		bpl	.L1163
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14321              		.loc 1 3652 2 is_stmt 1 view .LVU4366
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14322              		.loc 1 3652 18 is_stmt 0 view .LVU4367
 14323 1dd4 284B     		ldr	r3, .L1434
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14324              		.loc 1 3653 32 view .LVU4368
 14325 1dd6 4FF4E875 		mov	r5, #464
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14326              		.loc 1 3652 18 view .LVU4369
 14327 1dda 1A60     		str	r2, [r3]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14328              		.loc 1 3653 2 is_stmt 1 view .LVU4370
 14329 1ddc FEF79BBC 		b	.L1098
 14330              	.LVL1220:
 14331              	.L1006:
 14332              	.LBB1552:
 14333              	.LBB1479:
 14334              	.LBB1422:
 14335              	.LBB1052:
 14336              	.LBB1044:
1794:src/keys.c    **** 			init_arg(RARG_ARCL);
 14337              		.loc 1 1794 3 view .LVU4371
1794:src/keys.c    **** 			init_arg(RARG_ARCL);
 14338              		.loc 1 1794 6 is_stmt 0 view .LVU4372
 14339 1de0 BAF1010F 		cmp	r10, #1
 14340 1de4 3ED0     		beq	.L1417
ARM GAS  /tmp/ccF3vcso.s 			page 390


1797:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 14341              		.loc 1 1797 10 is_stmt 1 view .LVU4373
1797:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 14342              		.loc 1 1797 13 is_stmt 0 view .LVU4374
 14343 1de6 BAF1030F 		cmp	r10, #3
 14344 1dea 7EF40FAC 		bne	.L998
1798:src/keys.c    **** 			return STATE_UNFINISHED;
 14345              		.loc 1 1798 4 is_stmt 1 view .LVU4375
 14346              	.LVL1221:
 14347              	.LBB1033:
 14348              	.LBI1033:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 14349              		.loc 1 552 13 view .LVU4376
 14350              	.LBB1034:
 553:src/keys.c    **** 		return;
 14351              		.loc 1 553 2 view .LVU4377
 553:src/keys.c    **** 		return;
 14352              		.loc 1 553 6 is_stmt 0 view .LVU4378
 14353 1dee FFF7FEFF 		bl	is_bad_cmdline
 14354              	.LVL1222:
 553:src/keys.c    **** 		return;
 14355              		.loc 1 553 5 view .LVU4379
 14356 1df2 0028     		cmp	r0, #0
 14357 1df4 7FF406AD 		bne	.L1009
 14358 1df8 7320     		movs	r0, #115
 14359 1dfa FFF7FEFF 		bl	init_arg.part.0
 14360              	.LVL1223:
 14361 1dfe 01E5     		b	.L1009
 14362              	.LVL1224:
 14363              	.L980:
 553:src/keys.c    **** 		return;
 14364              		.loc 1 553 5 view .LVU4380
 14365              	.LBE1034:
 14366              	.LBE1033:
 14367              	.LBE1044:
 14368              	.LBE1052:
 14369              	.LBE1422:
 14370              	.LBB1423:
 14371              	.LBB1339:
3161:src/keys.c    **** 		goto reset_window;
 14372              		.loc 1 3161 4 is_stmt 1 view .LVU4381
3161:src/keys.c    **** 		goto reset_window;
 14373              		.loc 1 3161 24 is_stmt 0 view .LVU4382
 14374 1e00 0AF1FF3A 		add	r10, r10, #-1
 14375              	.LVL1225:
3161:src/keys.c    **** 		goto reset_window;
 14376              		.loc 1 3161 18 view .LVU4383
 14377 1e04 A8F808A0 		strh	r10, [r8, #8]	@ movhi
 14378 1e08 FFF7F8B9 		b	.L972
 14379              	.LVL1226:
 14380              	.L1407:
3161:src/keys.c    **** 		goto reset_window;
 14381              		.loc 1 3161 18 view .LVU4384
 14382              	.LBE1339:
 14383              	.LBE1423:
 14384              	.LBB1424:
 14385              	.LBB1053:
ARM GAS  /tmp/ccF3vcso.s 			page 391


 14386              	.LBB1045:
1807:src/keys.c    **** 			State2.numdigit = 0;
 14387              		.loc 1 1807 4 is_stmt 1 view .LVU4385
1807:src/keys.c    **** 			State2.numdigit = 0;
 14388              		.loc 1 1807 17 is_stmt 0 view .LVU4386
 14389 1e0c 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1808:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 14390              		.loc 1 1808 20 view .LVU4387
 14391 1e10 88F80B20 		strb	r2, [r8, #11]
1807:src/keys.c    **** 			State2.numdigit = 0;
 14392              		.loc 1 1807 17 view .LVU4388
 14393 1e14 43F00803 		orr	r3, r3, #8
1809:src/keys.c    **** 			return STATE_UNFINISHED;
 14394              		.loc 1 1809 12 view .LVU4389
 14395 1e18 0A22     		movs	r2, #10
1807:src/keys.c    **** 			State2.numdigit = 0;
 14396              		.loc 1 1807 17 view .LVU4390
 14397 1e1a 88F81530 		strb	r3, [r8, #21]
1808:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 14398              		.loc 1 1808 4 is_stmt 1 view .LVU4391
1809:src/keys.c    **** 			return STATE_UNFINISHED;
 14399              		.loc 1 1809 4 view .LVU4392
1809:src/keys.c    **** 			return STATE_UNFINISHED;
 14400              		.loc 1 1809 12 is_stmt 0 view .LVU4393
 14401 1e1e 88F81F20 		strb	r2, [r8, #31]
1810:src/keys.c    **** 		}
 14402              		.loc 1 1810 4 is_stmt 1 view .LVU4394
1810:src/keys.c    **** 		}
 14403              		.loc 1 1810 11 is_stmt 0 view .LVU4395
 14404 1e22 EFE4     		b	.L1009
 14405              	.LVL1227:
 14406              	.L1007:
1787:src/keys.c    **** 			init_arg(RARG_ASTO);
 14407              		.loc 1 1787 3 is_stmt 1 view .LVU4396
1787:src/keys.c    **** 			init_arg(RARG_ASTO);
 14408              		.loc 1 1787 6 is_stmt 0 view .LVU4397
 14409 1e24 BAF1010F 		cmp	r10, #1
 14410 1e28 7EF4F0AB 		bne	.L998
1788:src/keys.c    **** 			return STATE_UNFINISHED;
 14411              		.loc 1 1788 4 is_stmt 1 view .LVU4398
 14412              	.LVL1228:
 14413              	.LBB1035:
 14414              	.LBI1035:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 14415              		.loc 1 552 13 view .LVU4399
 14416              	.LBB1036:
 553:src/keys.c    **** 		return;
 14417              		.loc 1 553 2 view .LVU4400
 553:src/keys.c    **** 		return;
 14418              		.loc 1 553 6 is_stmt 0 view .LVU4401
 14419 1e2c FFF7FEFF 		bl	is_bad_cmdline
 14420              	.LVL1229:
 553:src/keys.c    **** 		return;
 14421              		.loc 1 553 5 view .LVU4402
 14422 1e30 0028     		cmp	r0, #0
 14423 1e32 7FF4E7AC 		bne	.L1009
 14424 1e36 2620     		movs	r0, #38
ARM GAS  /tmp/ccF3vcso.s 			page 392


 14425 1e38 FFF7FEFF 		bl	init_arg.part.0
 14426              	.LVL1230:
 14427 1e3c E2E4     		b	.L1009
 14428              	.LVL1231:
 14429              	.L1163:
 553:src/keys.c    **** 		return;
 14430              		.loc 1 553 5 view .LVU4403
 14431              	.LBE1036:
 14432              	.LBE1035:
 14433              	.LBE1045:
 14434              	.LBE1053:
 14435              	.LBE1424:
 14436              	.LBB1425:
 14437              	.LBB990:
1314:src/keys.c    ****        }
 14438              		.loc 1 1314 10 view .LVU4404
 14439 1e3e 4FF4E874 		mov	r4, #464
 14440 1e42 FEF760BC 		b	.L1041
 14441              	.LVL1232:
 14442              	.L1361:
1314:src/keys.c    ****        }
 14443              		.loc 1 1314 10 view .LVU4405
 14444 1e46 2546     		mov	r5, r4
 14445 1e48 FEF763BB 		b	.L857
 14446              	.LVL1233:
 14447              	.L1065:
1314:src/keys.c    ****        }
 14448              		.loc 1 1314 10 view .LVU4406
 14449              	.LBE990:
 14450              	.LBE1425:
 14451              	.LBE1479:
 14452              	.LBE1552:
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14453              		.loc 1 3652 2 is_stmt 1 view .LVU4407
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14454              		.loc 1 3652 18 is_stmt 0 view .LVU4408
 14455 1e4c 0A4A     		ldr	r2, .L1434
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14456              		.loc 1 3653 32 view .LVU4409
 14457 1e4e 40F22F65 		movw	r5, #1583
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14458              		.loc 1 3652 18 view .LVU4410
 14459 1e52 1360     		str	r3, [r2]
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14460              		.loc 1 3653 2 is_stmt 1 view .LVU4411
 14461 1e54 FEF75FBC 		b	.L1098
 14462              	.LVL1234:
 14463              	.L1402:
 14464              	.LBB1553:
 14465              	.LBB1480:
 14466              	.LBB1426:
 14467              	.LBB1340:
3157:src/keys.c    **** 			--State2.digval;
 14468              		.loc 1 3157 5 view .LVU4412
3157:src/keys.c    **** 			--State2.digval;
 14469              		.loc 1 3157 21 is_stmt 0 view .LVU4413
 14470 1e58 FFF7FEFF 		bl	global_regs
ARM GAS  /tmp/ccF3vcso.s 			page 393


 14471              	.LVL1235:
3157:src/keys.c    **** 			--State2.digval;
 14472              		.loc 1 3157 19 view .LVU4414
 14473 1e5c A8F80800 		strh	r0, [r8, #8]	@ movhi
 14474 1e60 FFF7C7B9 		b	.L981
 14475              	.LVL1236:
 14476              	.L1417:
3157:src/keys.c    **** 			--State2.digval;
 14477              		.loc 1 3157 19 view .LVU4415
 14478              	.LBE1340:
 14479              	.LBE1426:
 14480              	.LBB1427:
 14481              	.LBB1054:
 14482              	.LBB1046:
1795:src/keys.c    **** 			return STATE_UNFINISHED;
 14483              		.loc 1 1795 4 is_stmt 1 view .LVU4416
 14484              	.LBB1037:
 14485              	.LBI1037:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 14486              		.loc 1 552 13 view .LVU4417
 14487              	.LBB1038:
 553:src/keys.c    **** 		return;
 14488              		.loc 1 553 2 view .LVU4418
 553:src/keys.c    **** 		return;
 14489              		.loc 1 553 6 is_stmt 0 view .LVU4419
 14490 1e64 FFF7FEFF 		bl	is_bad_cmdline
 14491              	.LVL1237:
 553:src/keys.c    **** 		return;
 14492              		.loc 1 553 5 view .LVU4420
 14493 1e68 0028     		cmp	r0, #0
 14494 1e6a 7FF4CBAC 		bne	.L1009
 14495 1e6e 2720     		movs	r0, #39
 14496 1e70 FFF7FEFF 		bl	init_arg.part.0
 14497              	.LVL1238:
 14498 1e74 C6E4     		b	.L1009
 14499              	.L1435:
 14500 1e76 00BF     		.align	2
 14501              	.L1434:
 14502 1e78 00000000 		.word	NonProgrammable
 14503              	.LBE1038:
 14504              	.LBE1037:
 14505              	.LBE1046:
 14506              	.LBE1054:
 14507              	.LBE1427:
 14508              	.LBE1480:
 14509              	.LBE1553:
 14510              		.cfi_endproc
 14511              	.LFE63:
 14513              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14514              		.align	1
 14515              		.p2align 2,,3
 14516              		.global	process_keycode_with_shift
 14517              		.syntax unified
 14518              		.thumb
 14519              		.thumb_func
 14520              		.fpu fpv4-sp-d16
 14522              	process_keycode_with_shift:
ARM GAS  /tmp/ccF3vcso.s 			page 394


 14523              	.LFB62:
3384:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14524              		.loc 1 3384 61 is_stmt 1 view -0
 14525              		.cfi_startproc
 14526              		@ args = 0, pretend = 0, frame = 8
 14527              		@ frame_needed = 0, uses_anonymous_args = 0
 14528 0000 30B5     		push	{r4, r5, lr}
 14529              		.cfi_def_cfa_offset 12
 14530              		.cfi_offset 4, -12
 14531              		.cfi_offset 5, -8
 14532              		.cfi_offset 14, -4
 14533 0002 83B0     		sub	sp, sp, #12
 14534              		.cfi_def_cfa_offset 24
3384:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14535              		.loc 1 3384 61 is_stmt 0 view .LVU4422
 14536 0004 02AB     		add	r3, sp, #8
 14537 0006 03E90300 		stmdb	r3, {r0, r1}
 14538 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14539              	.LVL1239:
3385:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14540              		.loc 1 3385 4 is_stmt 1 view .LVU4423
3385:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14541              		.loc 1 3385 7 is_stmt 0 view .LVU4424
 14542 000e 2E2C     		cmp	r4, #46
 14543 0010 10D0     		beq	.L1436
3386:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14544              		.loc 1 3386 4 is_stmt 1 view .LVU4425
3386:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14545              		.loc 1 3386 7 is_stmt 0 view .LVU4426
 14546 0012 332C     		cmp	r4, #51
 14547 0014 1DD0     		beq	.L1443
3395:src/keys.c    ****      nd_opcode = remapped.shift;
 14548              		.loc 1 3395 7 view .LVU4427
 14549 0016 342C     		cmp	r4, #52
 14550 0018 019D     		ldr	r5, [sp, #4]
3395:src/keys.c    ****      nd_opcode = remapped.shift;
 14551              		.loc 1 3395 4 is_stmt 1 view .LVU4428
3395:src/keys.c    ****      nd_opcode = remapped.shift;
 14552              		.loc 1 3395 7 is_stmt 0 view .LVU4429
 14553 001a 0DD0     		beq	.L1444
3399:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14554              		.loc 1 3399 9 is_stmt 1 view .LVU4430
3399:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14555              		.loc 1 3399 12 is_stmt 0 view .LVU4431
 14556 001c 002D     		cmp	r5, #0
 14557 001e 03DB     		blt	.L1441
3399:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14558              		.loc 1 3399 34 is_stmt 1 discriminator 1 view .LVU4432
 14559              	.LVL1240:
 14560              	.LBB1554:
 14561              	.LBI1554:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14562              		.loc 1 104 20 discriminator 1 view .LVU4433
 14563              	.LBB1555:
 105:src/keys.c    **** 	State2.shifts = shift;
 14564              		.loc 1 105 2 discriminator 1 view .LVU4434
 14565              	.LBB1556:
ARM GAS  /tmp/ccF3vcso.s 			page 395


 14566              	.LBI1556:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14567              		.loc 1 96 13 discriminator 1 view .LVU4435
 14568              	.LBB1557:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14569              		.loc 1 97 2 discriminator 1 view .LVU4436
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14570              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4437
 14571 0020 FFF7FEFF 		bl	shift_down
 14572              	.LVL1241:
  98:src/keys.c    **** }
 14573              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4438
 14574              	.LBE1557:
 14575              	.LBE1556:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14576              		.loc 1 106 2 discriminator 1 view .LVU4439
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14577              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4440
 14578 0024 194B     		ldr	r3, .L1445
 14579              	.LBE1555:
 14580              	.LBE1554:
3399:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14581              		.loc 1 3399 34 discriminator 1 view .LVU4441
 14582 0026 1D74     		strb	r5, [r3, #16]
 14583              	.LBB1559:
 14584              	.LBB1558:
 108:src/keys.c    **** }
 14585              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4442
 14586              	.LVL1242:
 14587              	.L1441:
 108:src/keys.c    **** }
 14588              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4443
 14589              	.LBE1558:
 14590              	.LBE1559:
3400:src/keys.c    ****  }
 14591              		.loc 1 3400 4 is_stmt 1 view .LVU4444
 14592 0028 2046     		mov	r0, r4
3401:src/keys.c    ****  
 14593              		.loc 1 3401 2 is_stmt 0 view .LVU4445
 14594 002a 03B0     		add	sp, sp, #12
 14595              		.cfi_remember_state
 14596              		.cfi_def_cfa_offset 12
 14597              		@ sp needed
 14598 002c BDE83040 		pop	{r4, r5, lr}
 14599              		.cfi_restore 14
 14600              		.cfi_restore 5
 14601              		.cfi_restore 4
 14602              		.cfi_def_cfa_offset 0
 14603              	.LVL1243:
3400:src/keys.c    ****  }
 14604              		.loc 1 3400 4 view .LVU4446
 14605 0030 FFF7FEBF 		b	process_keycode
 14606              	.LVL1244:
 14607              	.L1436:
 14608              		.cfi_restore_state
3401:src/keys.c    ****  
 14609              		.loc 1 3401 2 view .LVU4447
ARM GAS  /tmp/ccF3vcso.s 			page 396


 14610 0034 03B0     		add	sp, sp, #12
 14611              		.cfi_remember_state
 14612              		.cfi_def_cfa_offset 12
 14613              		@ sp needed
 14614 0036 30BD     		pop	{r4, r5, pc}
 14615              	.LVL1245:
 14616              	.L1444:
 14617              		.cfi_restore_state
3396:src/keys.c    ****      set_shift(SHIFT_N);
 14618              		.loc 1 3396 6 is_stmt 1 view .LVU4448
3396:src/keys.c    ****      set_shift(SHIFT_N);
 14619              		.loc 1 3396 16 is_stmt 0 view .LVU4449
 14620 0038 154B     		ldr	r3, .L1445+4
 14621 003a 1D60     		str	r5, [r3]
3397:src/keys.c    ****    }
 14622              		.loc 1 3397 6 is_stmt 1 view .LVU4450
 14623              	.LVL1246:
 14624              	.LBB1560:
 14625              	.LBI1560:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14626              		.loc 1 104 20 view .LVU4451
 14627              	.LBB1561:
 105:src/keys.c    **** 	State2.shifts = shift;
 14628              		.loc 1 105 2 view .LVU4452
 14629              	.LBB1562:
 14630              	.LBI1562:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14631              		.loc 1 96 13 view .LVU4453
 14632              	.LBB1563:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14633              		.loc 1 97 2 view .LVU4454
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14634              		.loc 1 97 18 is_stmt 0 view .LVU4455
 14635 003c FFF7FEFF 		bl	shift_down
 14636              	.LVL1247:
  98:src/keys.c    **** }
 14637              		.loc 1 98 2 is_stmt 1 view .LVU4456
 14638              	.LBE1563:
 14639              	.LBE1562:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14640              		.loc 1 106 2 view .LVU4457
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14641              		.loc 1 106 16 is_stmt 0 view .LVU4458
 14642 0040 124B     		ldr	r3, .L1445
 14643 0042 0022     		movs	r2, #0
 14644              	.LBE1561:
 14645              	.LBE1560:
3400:src/keys.c    ****  }
 14646              		.loc 1 3400 4 view .LVU4459
 14647 0044 2046     		mov	r0, r4
 14648              	.LBB1565:
 14649              	.LBB1564:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14650              		.loc 1 106 16 view .LVU4460
 14651 0046 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14652              		.loc 1 108 2 is_stmt 1 view .LVU4461
ARM GAS  /tmp/ccF3vcso.s 			page 397


 14653              	.LVL1248:
 108:src/keys.c    **** }
 14654              		.loc 1 108 2 is_stmt 0 view .LVU4462
 14655              	.LBE1564:
 14656              	.LBE1565:
3400:src/keys.c    ****  }
 14657              		.loc 1 3400 4 is_stmt 1 view .LVU4463
3401:src/keys.c    ****  
 14658              		.loc 1 3401 2 is_stmt 0 view .LVU4464
 14659 0048 03B0     		add	sp, sp, #12
 14660              		.cfi_remember_state
 14661              		.cfi_def_cfa_offset 12
 14662              		@ sp needed
 14663 004a BDE83040 		pop	{r4, r5, lr}
 14664              		.cfi_restore 14
 14665              		.cfi_restore 5
 14666              		.cfi_restore 4
 14667              		.cfi_def_cfa_offset 0
 14668              	.LVL1249:
3400:src/keys.c    ****  }
 14669              		.loc 1 3400 4 view .LVU4465
 14670 004e FFF7FEBF 		b	process_keycode
 14671              	.LVL1250:
 14672              	.L1443:
 14673              		.cfi_restore_state
3387:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14674              		.loc 1 3387 6 is_stmt 1 view .LVU4466
 14675 0052 104B     		ldr	r3, .L1445+8
 14676 0054 41F23010 		movw	r0, #4400
 14677 0058 9847     		blx	r3
 14678              	.LVL1251:
3387:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14679              		.loc 1 3387 31 view .LVU4467
 14680 005a 0A20     		movs	r0, #10
 14681 005c 0E4B     		ldr	r3, .L1445+12
 14682 005e 9847     		blx	r3
 14683              	.LVL1252:
3387:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14684              		.loc 1 3387 46 view .LVU4468
 14685 0060 0E4B     		ldr	r3, .L1445+16
 14686 0062 9847     		blx	r3
 14687              	.LVL1253:
3388:src/keys.c    ****        // Was error just wait for confirmation
 14688              		.loc 1 3388 6 view .LVU4469
3388:src/keys.c    ****        // Was error just wait for confirmation
 14689              		.loc 1 3388 11 is_stmt 0 view .LVU4470
 14690 0064 0E4B     		ldr	r3, .L1445+20
 14691 0066 0120     		movs	r0, #1
 14692 0068 9847     		blx	r3
 14693              	.LVL1254:
3388:src/keys.c    ****        // Was error just wait for confirmation
 14694              		.loc 1 3388 9 view .LVU4471
 14695 006a 0228     		cmp	r0, #2
 14696 006c 01D1     		bne	.L1439
3390:src/keys.c    ****      }
 14697              		.loc 1 3390 8 is_stmt 1 view .LVU4472
 14698 006e 0D4B     		ldr	r3, .L1445+24
ARM GAS  /tmp/ccF3vcso.s 			page 398


 14699 0070 9847     		blx	r3
 14700              	.LVL1255:
 14701              	.L1439:
3392:src/keys.c    ****      return;
 14702              		.loc 1 3392 6 view .LVU4473
 14703 0072 084B     		ldr	r3, .L1445+8
 14704 0074 42F26020 		movw	r0, #8800
 14705 0078 9847     		blx	r3
 14706              	.LVL1256:
3392:src/keys.c    ****      return;
 14707              		.loc 1 3392 31 view .LVU4474
 14708 007a 074B     		ldr	r3, .L1445+12
 14709 007c 0A20     		movs	r0, #10
 14710 007e 9847     		blx	r3
 14711              	.LVL1257:
3392:src/keys.c    ****      return;
 14712              		.loc 1 3392 46 view .LVU4475
 14713 0080 064B     		ldr	r3, .L1445+16
3401:src/keys.c    ****  
 14714              		.loc 1 3401 2 is_stmt 0 view .LVU4476
 14715 0082 03B0     		add	sp, sp, #12
 14716              		.cfi_def_cfa_offset 12
 14717              		@ sp needed
 14718 0084 BDE83040 		pop	{r4, r5, lr}
 14719              		.cfi_restore 14
 14720              		.cfi_restore 5
 14721              		.cfi_restore 4
 14722              		.cfi_def_cfa_offset 0
 14723              	.LVL1258:
3392:src/keys.c    ****      return;
 14724              		.loc 1 3392 46 view .LVU4477
 14725 0088 1847     		bx	r3	@ indirect register sibling call
 14726              	.LVL1259:
 14727              	.L1446:
 14728 008a 00BF     		.align	2
 14729              	.L1445:
 14730 008c 00000000 		.word	StateWhileOn
 14731 0090 00000000 		.word	nd_opcode
 14732 0094 F5020008 		.word	134218485
 14733 0098 05040008 		.word	134218757
 14734 009c F9020008 		.word	134218489
 14735 00a0 79030008 		.word	134218617
 14736 00a4 99030008 		.word	134218649
 14737              		.cfi_endproc
 14738              	.LFE62:
 14740              		.comm	nd_opcode,4,4
 14741              		.comm	NonProgrammable,4,4
 14742              		.comm	GoFast,4,4
 14743              		.comm	OpCodeDisplayPending,4,4
 14744              		.comm	OpCode,4,4
 14745              		.comm	WasDataEntry,4,4
 14746              		.section	.bss.was_paused.9977,"aw",%nobits
 14747              		.align	2
 14748              		.set	.LANCHOR18,. + 0
 14751              	was_paused.9977:
 14752 0000 00000000 		.space	4
 14753              		.section	.rodata.alpha_arrows,"a"
ARM GAS  /tmp/ccF3vcso.s 			page 399


 14754              		.align	2
 14757              	alpha_arrows:
 14758 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14758      03049F5E 
 14758      7F
 14759              		.section	.rodata.alpha_catalogue,"a"
 14760              		.align	2
 14763              	alpha_catalogue:
 14764 0000 0D4AC280 		.ascii	"\015J\302\200\236\267J\242~\332\267\255\373\202\341"
 14764      9EB74AA2 
 14764      7EDAB7AD 
 14764      FB82E1
 14765 000f 284AB0   		.ascii	"(J\260"
 14766              		.section	.rodata.alpha_compares,"a"
 14767              		.align	2
 14770              	alpha_compares:
 14771 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14771      0A3E5B5D 
 14771      7B7D
 14772              		.section	.rodata.alpha_letters,"a"
 14773              		.align	2
 14774              		.set	.LANCHOR9,. + 0
 14777              	alpha_letters:
 14778 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14778      88C4C5C6 
 14778      C784C8C9 
 14778      CA
 14779 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14779      CECFD0D1 
 14779      D2D3D415 
 14779      D5
 14780 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14780      DADBDC01 
 14780      1902DD1A 
 14780      DE
 14781 0027 DF       		.ascii	"\337"
 14782              		.section	.rodata.alpha_letters_lower,"a"
 14783              		.align	2
 14784              		.set	.LANCHOR10,. + 0
 14787              	alpha_letters_lower:
 14788 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14788      89E4E5E6 
 14788      E785E8E9 
 14788      EA
 14789 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14789      EEEFF0F1 
 14789      F2F3F416 
 14789      F5
 14790 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14790      FAFBFC01 
 14790      1902FD1A 
 14790      FE
 14791 0027 FF       		.ascii	"\377"
 14792              		.section	.rodata.alpha_subscripts,"a"
 14793              		.align	2
 14796              	alpha_subscripts:
 14797 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
ARM GAS  /tmp/ccF3vcso.s 			page 400


 14797      9A80D798 
 14797      BB1486BC 
 14797      F7
 14798 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14798      BF818B9C 
 14798      8C999D90 
 14798      9B
 14799              		.section	.rodata.alpha_symbols,"a"
 14800              		.align	2
 14803              	alpha_symbols:
 14804 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14804      222A405F 
 14804      7E25240C 
 14804      1E1F8EAE 
 14804      926023
 14805              		.section	.rodata.alphamap.9460,"a"
 14806              		.align	2
 14807              		.set	.LANCHOR15,. + 0
 14810              	alphamap.9460:
 14811 0000 41004100 		.ascii	"A\000A\000a\240"
 14811      61A0
 14812 0006 42004200 		.ascii	"B\000B\000b\241"
 14812      62A1
 14813 000c 43008200 		.ascii	"C\000\202\000c\242"
 14813      63A2
 14814 0012 44008300 		.ascii	"D\000\203\000d\243"
 14814      64A3
 14815 0018 450D4500 		.ascii	"E\015E\000e\244"
 14815      65A4
 14816 001e 46009400 		.ascii	"F\000\224\000f\264"
 14816      66B4
 14817 0024 47008200 		.ascii	"G\000\202\000g\242"
 14817      67A2
 14818 002a 48005800 		.ascii	"H\000X\000h\265"
 14818      68B5
 14819 0030 49004900 		.ascii	"I\000I\000i\250"
 14819      69A8
 14820 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14820      6A00
 14821 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14821      6BA9
 14822 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14822      6CAA
 14823 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14823      00A6
 14824 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14824      6DAB
 14825 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14825      6EAC
 14826 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14826      6FB7
 14827 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14827      0000
 14828 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14828      0000
 14829 006c 50378F26 		.ascii	"P7\217&p\257"
 14829      70AF
ARM GAS  /tmp/ccF3vcso.s 			page 401


 14830 0072 5138007C 		.ascii	"Q8\000|q\000"
 14830      7100
 14831 0078 5239520B 		.ascii	"R9R\013r\260"
 14831      72B0
 14832 007e 532F915C 		.ascii	"S/\221\\s\261"
 14832      73B1
 14833 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14833      0000
 14834 008a 54345400 		.ascii	"T4T\000t\262"
 14834      74B2
 14835 0090 55350000 		.ascii	"U5\000\000u\000"
 14835      7500
 14836 0096 56360000 		.ascii	"V6\000\000v\000"
 14836      7600
 14837 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14837      7700
 14838 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14838      0000
 14839 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14839      78AD
 14840 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14840      79B3
 14841 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14841      7AA5
 14842 00ba 2D282900 		.ascii	"-()\000\000\000"
 14842      0000
 14843 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14843      0000
 14844 00c6 3A308720 		.ascii	":0\207 ;\247"
 14844      3BA7
 14845 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14845      2EB6
 14846 00d2 3F212100 		.ascii	"?!!\000?!"
 14846      3F21
 14847 00d8 202B3D06 		.ascii	" +=\006  "
 14847      2020
 14848 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14848      0000
 14849              		.section	.rodata.amap.9451,"a"
 14850              		.align	2
 14851              		.set	.LANCHOR16,. + 0
 14854              	amap.9451:
 14855 0000 04       		.byte	4
 14856 0001 000D00   		.ascii	"\000\015\000"
 14857 0004 05       		.byte	5
 14858 0005 000E09   		.ascii	"\000\016\011"
 14859 0008 2C       		.byte	44
 14860 0009 000D00   		.ascii	"\000\015\000"
 14861 000c 2D       		.byte	45
 14862 000d 000E09   		.ascii	"\000\016\011"
 14863 0010 08       		.byte	8
 14864 0011 00000F   		.ascii	"\000\000\017"
 14865 0014 1F       		.byte	31
 14866 0015 00000C   		.ascii	"\000\000\014"
 14867 0018 21       		.byte	33
 14868 0019 00000A   		.ascii	"\000\000\012"
 14869 001c 26       		.byte	38
ARM GAS  /tmp/ccF3vcso.s 			page 402


 14870 001d 00000B   		.ascii	"\000\000\013"
 14871              		.section	.rodata.catalogue,"a"
 14872              		.align	2
 14875              	catalogue:
 14876 0000 49DC26D8 		.ascii	"I\334&\330\301f\031\224D\242;Y\3074}K3Q\011\217jT\225"
 14876      C1661994 
 14876      44A23B59 
 14876      C7347D4B 
 14876      3351098F 
 14877 0017 299E485A 		.ascii	")\236HZ\244\241\020qS\304\365.t\335G\015\304l37q\220"
 14877      A4A11071 
 14877      53C4F52E 
 14877      74DD470D 
 14877      C46C3337 
 14878 002d 719D2481 		.ascii	"q\235$\201\340n\024\006u\265m\033&m\312vL7-\317Kr\264"
 14878      E06E1406 
 14878      75B56D1B 
 14878      266DCA76 
 14878      4C372DCF 
 14879 0044 4B2AC9B2 		.ascii	"K*\311\262tY50\263D0\243t\031\367D5c\214\244\215\"I"
 14879      74593530 
 14879      B34430A3 
 14879      7419F744 
 14879      35638CA4 
 14880 005b 126730AC 		.ascii	"\022g0\254uY\242\200\236\267J\242~\334\266\255\353~"
 14880      7559A280 
 14880      9EB74AA2 
 14880      7EDCB6AD 
 14880      EB7E
 14881 006d E0B86DB2 		.ascii	"\340\270m\262\204\253m\323\366\355\274n[\2479\227j\021"
 14881      84AB6DD3 
 14881      F6EDBC6E 
 14881      5BA73997 
 14881      6A11
 14882 007f B795C077 		.ascii	"\267\225\300w\330\206\025\277"
 14882      D88615BF 
 14883              		.section	.rodata.catalogue_sizes.9774,"a"
 14884              		.align	2
 14885              		.set	.LANCHOR8,. + 0
 14888              	catalogue_sizes.9774:
 14889 0000 006C1A11 		.ascii	"\000l\032\0216=Q\202%?\016\023\012\011(\032LLX\016\023"
 14889      363D5182 
 14889      253F0E13 
 14889      0A09281A 
 14889      4C4C580E 
 14890              		.section	.rodata.catalogues.9782,"a"
 14891              		.align	2
 14892              		.set	.LANCHOR12,. + 0
 14895              	catalogues.9782:
 14896 0000 00000000 		.word	0
 14897 0004 00000000 		.word	catalogue
 14898 0008 00000000 		.word	cplx_catalogue
 14899 000c 00000000 		.word	stats_catalogue
 14900 0010 00000000 		.word	prob_catalogue
 14901 0014 00000000 		.word	int_catalogue
 14902 0018 00000000 		.word	prog_catalogue
 14903 001c 00000000 		.word	program_xfcn
ARM GAS  /tmp/ccF3vcso.s 			page 403


 14904 0020 00000000 		.word	test_catalogue
 14905 0024 00000000 		.word	mode_catalogue
 14906 0028 00000000 		.word	alpha_catalogue
 14907 002c 00000000 		.word	alpha_symbols
 14908 0030 00000000 		.word	alpha_compares
 14909 0034 00000000 		.word	alpha_arrows
 14910 0038 00000000 		.word	alpha_letters
 14911 003c 00000000 		.word	alpha_subscripts
 14912 0040 00000000 		.word	0
 14913 0044 00000000 		.word	0
 14914 0048 00000000 		.word	0
 14915 004c 00000000 		.word	sums_catalogue
 14916 0050 00000000 		.word	matrix_catalogue
 14917              		.section	.rodata.cmap.9450,"a"
 14918              		.align	2
 14919              		.set	.LANCHOR17,. + 0
 14922              	cmap.9450:
 14923 0000 04       		.byte	4
 14924 0001 120012   		.ascii	"\022\000\022"
 14925 0004 05       		.byte	5
 14926 0005 090909   		.ascii	"\011\011\011"
 14927 0008 06       		.byte	6
 14928 0009 151515   		.ascii	"\025\025\025"
 14929 000c 0C       		.byte	12
 14930 000d 100011   		.ascii	"\020\000\021"
 14931 0010 19       		.byte	25
 14932 0011 040004   		.ascii	"\004\000\004"
 14933 0014 1A       		.byte	26
 14934 0015 030003   		.ascii	"\003\000\003"
 14935 0018 1B       		.byte	27
 14936 0019 130013   		.ascii	"\023\000\023"
 14937 001c 1C       		.byte	28
 14938 001d 140014   		.ascii	"\024\000\024"
 14939 0020 1E       		.byte	30
 14940 0021 171717   		.ascii	"\027\027\027"
 14941 0024 1F       		.byte	31
 14942 0025 080808   		.ascii	"\010\010\010"
 14943 0028 20       		.byte	32
 14944 0029 060606   		.ascii	"\006\006\006"
 14945 002c 21       		.byte	33
 14946 002d 010502   		.ascii	"\001\005\002"
 14947              		.section	.rodata.conv_catalogue,"a"
 14948              		.align	2
 14949              		.set	.LANCHOR11,. + 0
 14952              	conv_catalogue:
 14953 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 14953      2B2DDD37 
 14953      27393133 
 14953      111605DC 
 14953      DE19
 14954 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 14954      0D0F8D08 
 14954      8F0A2A2C 
 14954      47434517 
 14954      3F30
 14955 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 14955      02062622 
ARM GAS  /tmp/ccF3vcso.s 			page 404


 14955      20282435 
 14955      2F012310 
 14955      0C0E2112 
 14956 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 14956      1E292E09 
 14956      36383E3A 
 14956      3C4025DF 
 14956      3D8B8E03 
 14957 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 14957      4A484642 
 14957      441F
 14958              		.section	.rodata.conv_mapping.9821,"a"
 14959              		.align	2
 14960              		.set	.LANCHOR14,. + 0
 14963              	conv_mapping.9821:
 14964 0000 8502     		.short	645
 14965 0002 8402     		.short	644
 14966 0004 8602     		.short	646
 14967 0006 8702     		.short	647
 14968 0008 8202     		.short	642
 14969 000a 8302     		.short	643
 14970 000c 3202     		.short	562
 14971 000e 3302     		.short	563
 14972 0010 3402     		.short	564
 14973 0012 3502     		.short	565
 14974 0014 3602     		.short	566
 14975 0016 3702     		.short	567
 14976              		.section	.rodata.cplx_catalogue,"a"
 14977              		.align	2
 14980              	cplx_catalogue:
 14981 0000 8029BCFE 		.ascii	"\200)\274\376!;\316\341\015\372\200aXZ\211~i\030e\357"
 14981      213BCEE1 
 14981      0DFA8061 
 14981      585A897E 
 14981      691865EF 
 14982 0014 839FB7F5 		.ascii	"\203\237\267\365\377\253\255ZB\030\240_@"
 14982      FFABAD5A 
 14982      4218A05F 
 14982      40
 14983              		.section	.rodata.disp.9632,"a"
 14984              		.align	2
 14985              		.set	.LANCHOR21,. + 0
 14988              	disp.9632:
 14989 0000 03       		.byte	3
 14990 0001 02       		.byte	2
 14991 0002 05       		.byte	5
 14992 0003 04       		.byte	4
 14993              		.section	.rodata.int_catalogue,"a"
 14994              		.align	2
 14997              	int_catalogue:
 14998 0000 49F18307 		.ascii	"I\361\203\007\032D]\342Y\335\020\232\254m(D\034V\301"
 14998      1A445DE2 
 14998      59DD109A 
 14998      AC6D2844 
 14998      1C56C1
 14999 0013 C62531EC 		.ascii	"\306%1\354}\265m\030\326\311\312c\035\223\015\313%q"
 14999      7DB56D18 
ARM GAS  /tmp/ccF3vcso.s 			page 405


 14999      D6C9CA63 
 14999      1D930DCB 
 14999      2571
 15000 0025 2C5112C4 		.ascii	",Q\022\304\361\\dhE\261l_4g\303S)&s\012\307V\335*\255"
 15000      F15C6468 
 15000      45B16C5F 
 15000      3467C353 
 15000      2926730A 
 15001 003e CB6ADEB7 		.ascii	"\313j\336\267\356\013\206\333*\323\364m\346y\300"
 15001      EE0B86DB 
 15001      2AD3F46D 
 15001      E679C0
 15002              		.section	.rodata.linear_key_map.9416,"a"
 15003              		.align	2
 15004              		.set	.LANCHOR6,. + 0
 15007              	linear_key_map.9416:
 15008 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 15008      04050607 
 15008      08090A0B 
 15008      0C
 15009 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 15009      00111213 
 15009      14150016 
 15009      17
 15010 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 15010      1B1C1D1E 
 15010      1F002021 
 15010      22232425 
 15010      25252525 
 15011 002e 25       		.ascii	"%"
 15012              		.section	.rodata.linear_key_map.9420,"a"
 15013              		.align	2
 15014              		.set	.LANCHOR1,. + 0
 15017              	linear_key_map.9420:
 15018 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 15018      04050607 
 15018      08222222 
 15018      090A0B
 15019 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 15019      0F101112 
 15019      00131415 
 15019      16
 15020 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 15020      1A1B1C00 
 15020      1D1E1F20 
 15020      21222222 
 15021 002c 040522   		.ascii	"\004\005\""
 15022              		.section	.rodata.map.9432,"a"
 15023              		.align	2
 15024              		.set	.LANCHOR5,. + 0
 15027              	map.9432:
 15028 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 15028      FF7F7F7F 
 15028      6D6E6F6C 
 15028      FFFFFFFF 
 15029 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 15029      097F7FE7 
ARM GAS  /tmp/ccF3vcso.s 			page 406


 15029      05067F7F 
 15029      E4
 15030 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 15030      00F07F7F 
 15030      FFFFFFFF 
 15030      FF
 15031 002a FF       		.ascii	"\377"
 15032              		.section	.rodata.matrix_catalogue,"a"
 15033              		.align	2
 15036              	matrix_catalogue:
 15037 0000 699E4364 		.ascii	"i\236Cd\3305\336#m\240u\332\027Y\341v\032V\235\343i"
 15037      D835DE23 
 15037      6DA075DA 
 15037      1759E176 
 15037      1A569DE3 
 15038 0015 1A3688   		.ascii	"\0326\210"
 15039              		.section	.rodata.mode_catalogue,"a"
 15040              		.align	2
 15043              	mode_catalogue:
 15044 0000 2948C290 		.ascii	")H\302\220\213\310\006d\031\007BP\203\250\351\037\210"
 15044      8BC80664 
 15044      19074250 
 15044      83A8E91F 
 15044      88
 15045 0011 01FC7CC1 		.ascii	"\001\374|\301I\204-\012\030\314\362D\234&\306!\224\223"
 15045      49842D0A 
 15045      18CCF244 
 15045      9C26C621 
 15045      9493
 15046 0023 2489A193 		.ascii	"$\211\241\223-!\010<\313)\"\010s \2461\014s$\2471Lb"
 15046      2D21083C 
 15046      CB292208 
 15046      7320A631 
 15046      0C7324A7 
 15047 003a 38CE0E03 		.ascii	"8\316\016\003\234\260\206!H\334D\374>\311\235/E\321"
 15047      9CB08621 
 15047      48DC44FC 
 15047      3EC99D2F 
 15047      45D1
 15048 004c 10E434   		.ascii	"\020\3444"
 15049              		.section	.rodata.op_map.9504,"a"
 15050              		.align	2
 15051              		.set	.LANCHOR2,. + 0
 15054              	op_map.9504:
 15055 0000 1500     		.short	21
 15056 0002 0B02     		.short	523
 15057 0004 0003     		.short	768
 15058 0006 0A02     		.short	522
 15059 0008 1300     		.short	19
 15060 000a 1400     		.short	20
 15061 000c 0300     		.short	3
 15062 000e 0A00     		.short	10
 15063 0010 0701     		.short	263
 15064 0012 0000     		.short	0
 15065 0014 6531     		.short	12645
 15066 0016 0300     		.short	3
 15067 0018 0200     		.short	2
ARM GAS  /tmp/ccF3vcso.s 			page 407


 15068 001a 0100     		.short	1
 15069 001c 4400     		.short	68
 15070 001e 0C00     		.short	12
 15071 0020 0D00     		.short	13
 15072 0022 0E00     		.short	14
 15073 0024 0403     		.short	772
 15074 0026 2F00     		.short	47
 15075 0028 0900     		.short	9
 15076 002a 0A00     		.short	10
 15077 002c 0B00     		.short	11
 15078 002e 0303     		.short	771
 15079 0030 2E00     		.short	46
 15080 0032 0600     		.short	6
 15081 0034 0700     		.short	7
 15082 0036 0800     		.short	8
 15083 0038 0203     		.short	770
 15084 003a 3300     		.short	51
 15085 003c 0500     		.short	5
 15086 003e 0400     		.short	4
 15087 0040 3B01     		.short	315
 15088 0042 0103     		.short	769
 15089 0044 0001     		.short	256
 15090              		.section	.rodata.op_map.9527,"a"
 15091              		.align	2
 15092              		.set	.LANCHOR3,. + 0
 15095              	op_map.9527:
 15096 0000 0100     		.short	1
 15097 0002 0000     		.short	0
 15098 0004 20F2     		.short	-3552
 15099 0006 23F2     		.short	-3549
 15100 0008 21F2     		.short	-3551
 15101 000a 24F2     		.short	-3548
 15102 000c 22F2     		.short	-3550
 15103 000e 25F2     		.short	-3547
 15104 0010 47F1     		.short	-3769
 15105 0012 46F1     		.short	-3770
 15106 0014 4E01     		.short	334
 15107 0016 4D01     		.short	333
 15108 0018 5C01     		.short	348
 15109 001a 35F1     		.short	-3787
 15110 001c 5B01     		.short	347
 15111 001e 36F1     		.short	-3786
 15112 0020 3301     		.short	307
 15113 0022 37F1     		.short	-3785
 15114 0024 3300     		.short	51
 15115 0026 0C01     		.short	268
 15116 0028 2B00     		.short	43
 15117 002a 2C00     		.short	44
 15118 002c 028B     		.short	-29950
 15119 002e 088B     		.short	-29944
 15120 0030 0A8B     		.short	-29942
 15121 0032 108B     		.short	-29936
 15122 0034 4301     		.short	323
 15123 0036 3D01     		.short	317
 15124 0038 0902     		.short	521
 15125 003a 0802     		.short	520
 15126 003c 1002     		.short	528
ARM GAS  /tmp/ccF3vcso.s 			page 408


 15127 003e 0D02     		.short	525
 15128 0040 0F02     		.short	527
 15129 0042 0E02     		.short	526
 15130 0044 0003     		.short	768
 15131 0046 0803     		.short	776
 15132 0048 0BF2     		.short	-3573
 15133 004a 1603     		.short	790
 15134 004c 1203     		.short	786
 15135 004e 1303     		.short	787
 15136 0050 3DF2     		.short	-3523
 15137 0052 3EF2     		.short	-3522
 15138 0054 24F1     		.short	-3804
 15139 0056 1EF1     		.short	-3810
 15140 0058 75F2     		.short	-3467
 15141 005a 27F1     		.short	-3801
 15142 005c 0A02     		.short	522
 15143 005e 1602     		.short	534
 15144 0060 5100     		.short	81
 15145 0062 5200     		.short	82
 15146 0064 0000     		.short	0
 15147 0066 0100     		.short	1
 15148 0068 48F0     		.short	-4024
 15149 006a 4BF0     		.short	-4021
 15150 006c 47F0     		.short	-4025
 15151 006e 46F0     		.short	-4026
 15152 0070 77F2     		.short	-3465
 15153 0072 78F2     		.short	-3464
 15154 0074 64AB     		.short	-21660
 15155 0076 3300     		.short	51
 15156 0078 0502     		.short	517
 15157 007a 0602     		.short	518
 15158 007c 0402     		.short	516
 15159 007e 0002     		.short	512
 15160 0080 4200     		.short	66
 15161 0082 3801     		.short	312
 15162 0084 3A00     		.short	58
 15163 0086 3B00     		.short	59
 15164 0088 0001     		.short	256
 15165 008a 0001     		.short	256
 15166              		.section	.rodata.op_map.9550,"a"
 15167              		.align	2
 15168              		.set	.LANCHOR0,. + 0
 15171              	op_map.9550:
 15172 0000 4C80     		.short	-32692
 15173 0002 4D80     		.short	-32691
 15174 0004 4E80     		.short	-32690
 15175 0006 4F80     		.short	-32689
 15176 0008 3300     		.short	51
 15177 000a 3300     		.short	51
 15178 000c 3300     		.short	51
 15179 000e 2180     		.short	-32735
 15180 0010 0801     		.short	264
 15181 0012 8780     		.short	-32633
 15182 0014 1180     		.short	-32751
 15183 0016 7C02     		.short	636
 15184 0018 6660     		.short	24678
 15185 001a 3F01     		.short	319
ARM GAS  /tmp/ccF3vcso.s 			page 409


 15186 001c 4580     		.short	-32699
 15187 001e 1C03     		.short	796
 15188 0020 1D03     		.short	797
 15189 0022 1E03     		.short	798
 15190 0024 0603     		.short	774
 15191 0026 2F02     		.short	559
 15192 0028 3300     		.short	51
 15193 002a 3300     		.short	51
 15194 002c 3300     		.short	51
 15195 002e 3300     		.short	51
 15196 0030 3300     		.short	51
 15197 0032 3300     		.short	51
 15198 0034 3300     		.short	51
 15199 0036 3300     		.short	51
 15200 0038 1640     		.short	16406
 15201 003a 0201     		.short	258
 15202 003c 6D80     		.short	-32659
 15203 003e 5001     		.short	336
 15204 0040 3300     		.short	51
 15205 0042 1540     		.short	16405
 15206 0044 0001     		.short	256
 15207              		.section	.rodata.op_map.9605,"a"
 15208              		.align	2
 15209              		.set	.LANCHOR7,. + 0
 15212              	op_map.9605:
 15213 0000 0100     		.short	1
 15214 0002 0100     		.short	1
 15215 0004 0000     		.short	0
 15216 0006 0000     		.short	0
 15217 0008 0B05     		.short	1291
 15218 000a 2005     		.short	1312
 15219 000c 2305     		.short	1315
 15220 000e 3300     		.short	51
 15221 0010 0006     		.short	1536
 15222 0012 2105     		.short	1313
 15223 0014 2405     		.short	1316
 15224 0016 3300     		.short	51
 15225 0018 0A05     		.short	1290
 15226 001a 2205     		.short	1314
 15227 001c 2505     		.short	1317
 15228 001e 3300     		.short	51
 15229 0020 3300     		.short	51
 15230 0022 4701     		.short	327
 15231 0024 4601     		.short	326
 15232 0026 3300     		.short	51
 15233 0028 3300     		.short	51
 15234 002a 3300     		.short	51
 15235 002c 3300     		.short	51
 15236 002e 3300     		.short	51
 15237 0030 15FF     		.short	-235
 15238 0032 3300     		.short	51
 15239 0034 3300     		.short	51
 15240 0036 3300     		.short	51
 15241 0038 1AFF     		.short	-230
 15242 003a 3300     		.short	51
 15243 003c 3300     		.short	51
 15244 003e 93FF     		.short	-109
ARM GAS  /tmp/ccF3vcso.s 			page 410


 15245 0040 0901     		.short	265
 15246 0042 3300     		.short	51
 15247 0044 3300     		.short	51
 15248 0046 0A01     		.short	266
 15249 0048 0B01     		.short	267
 15250 004a 3300     		.short	51
 15251 004c 0D01     		.short	269
 15252 004e 0D01     		.short	269
 15253 0050 663F     		.short	16230
 15254 0052 3300     		.short	51
 15255 0054 3300     		.short	51
 15256 0056 1FFF     		.short	-225
 15257 0058 3805     		.short	1336
 15258 005a 3300     		.short	51
 15259 005c 3300     		.short	51
 15260 005e 3905     		.short	1337
 15261 0060 6621     		.short	8550
 15262 0062 3300     		.short	51
 15263 0064 3300     		.short	51
 15264 0066 6621     		.short	8550
 15265 0068 3300     		.short	51
 15266 006a 3300     		.short	51
 15267 006c 3300     		.short	51
 15268 006e 3300     		.short	51
 15269 0070 3300     		.short	51
 15270 0072 0905     		.short	1289
 15271 0074 0805     		.short	1288
 15272 0076 3300     		.short	51
 15273 0078 07A8     		.short	-22521
 15274 007a 1005     		.short	1296
 15275 007c 0D05     		.short	1293
 15276 007e 3300     		.short	51
 15277 0080 08A8     		.short	-22520
 15278 0082 0F05     		.short	1295
 15279 0084 0E05     		.short	1294
 15280 0086 3300     		.short	51
 15281 0088 09A8     		.short	-22519
 15282 008a 0006     		.short	1536
 15283 008c 0806     		.short	1544
 15284 008e 3300     		.short	51
 15285 0090 0406     		.short	1540
 15286 0092 0B05     		.short	1291
 15287 0094 1606     		.short	1558
 15288 0096 3300     		.short	51
 15289 0098 3300     		.short	51
 15290 009a 1206     		.short	1554
 15291 009c 1306     		.short	1555
 15292 009e 2F05     		.short	1327
 15293 00a0 04A8     		.short	-22524
 15294 00a2 3300     		.short	51
 15295 00a4 3300     		.short	51
 15296 00a6 3300     		.short	51
 15297 00a8 05A8     		.short	-22523
 15298 00aa 3300     		.short	51
 15299 00ac 3300     		.short	51
 15300 00ae 3300     		.short	51
 15301 00b0 06A8     		.short	-22522
ARM GAS  /tmp/ccF3vcso.s 			page 411


 15302 00b2 3300     		.short	51
 15303 00b4 3300     		.short	51
 15304 00b6 3300     		.short	51
 15305 00b8 0306     		.short	1539
 15306 00ba 0A05     		.short	1290
 15307 00bc 1605     		.short	1302
 15308 00be 1605     		.short	1302
 15309 00c0 3300     		.short	51
 15310 00c2 3300     		.short	51
 15311 00c4 3300     		.short	51
 15312 00c6 3300     		.short	51
 15313 00c8 01A8     		.short	-22527
 15314 00ca 0000     		.short	0
 15315 00cc 0100     		.short	1
 15316 00ce 3300     		.short	51
 15317 00d0 02A8     		.short	-22526
 15318 00d2 3300     		.short	51
 15319 00d4 3300     		.short	51
 15320 00d6 3300     		.short	51
 15321 00d8 03A8     		.short	-22525
 15322 00da 3300     		.short	51
 15323 00dc 3300     		.short	51
 15324 00de 3300     		.short	51
 15325 00e0 0206     		.short	1538
 15326 00e2 3300     		.short	51
 15327 00e4 3300     		.short	51
 15328 00e6 3300     		.short	51
 15329 00e8 3300     		.short	51
 15330 00ea 3300     		.short	51
 15331 00ec 3300     		.short	51
 15332 00ee 0201     		.short	258
 15333 00f0 00A8     		.short	-22528
 15334 00f2 0505     		.short	1285
 15335 00f4 0605     		.short	1286
 15336 00f6 3300     		.short	51
 15337 00f8 B801     		.short	440
 15338 00fa 0405     		.short	1284
 15339 00fc 0005     		.short	1280
 15340 00fe 3300     		.short	51
 15341 0100 D801     		.short	472
 15342 0102 3300     		.short	51
 15343 0104 3300     		.short	51
 15344 0106 3300     		.short	51
 15345 0108 0106     		.short	1537
 15346 010a 3300     		.short	51
 15347 010c 3300     		.short	51
 15348 010e 3300     		.short	51
 15349 0110 0001     		.short	256
 15350 0112 0001     		.short	256
 15351 0114 0001     		.short	256
 15352 0116 0001     		.short	256
 15353              		.section	.rodata.op_map.9617,"a"
 15354              		.align	2
 15355              		.set	.LANCHOR19,. + 0
 15358              	op_map.9617:
 15359 0000 2A27     		.ascii	"*'"
 15360 0002 2B28     		.ascii	"+("
ARM GAS  /tmp/ccF3vcso.s 			page 412


 15361 0004 2C29     		.ascii	",)"
 15362              		.section	.rodata.op_map.9631,"a"
 15363              		.align	2
 15364              		.set	.LANCHOR20,. + 0
 15367              	op_map.9631:
 15368 0000 1A02     		.short	538
 15369 0002 7B02     		.short	635
 15370 0004 1B02     		.short	539
 15371 0006 7A02     		.short	634
 15372 0008 1C02     		.short	540
 15373 000a 3300     		.short	51
 15374              		.section	.rodata.op_map2.9528,"a"
 15375              		.align	2
 15376              		.set	.LANCHOR4,. + 0
 15379              	op_map2.9528:
 15380 0000 3300     		.short	51
 15381 0002 3300     		.short	51
 15382 0004 0003     		.short	768
 15383 0006 0A02     		.short	522
 15384              		.section	.rodata.opcode_breaks,"a"
 15385              		.align	2
 15386              		.set	.LANCHOR13,. + 0
 15389              	opcode_breaks:
 15390 0000 34DB9C31 		.ascii	"4\333\2341\014\2341"
 15390      0C9C31
 15391              		.section	.rodata.prob_catalogue,"a"
 15392              		.align	2
 15395              	prob_catalogue:
 15396 0000 5795D5ED 		.ascii	"W\225\325\355_\\\327&\011tV\325\245\351\\U\027\205U"
 15396      5F5CD726 
 15396      097456D5 
 15396      A5E95C55 
 15396      178555
 15397 0013 5659D665 		.ascii	"VY\326e\371h[V\306\001n\\\026\366\005qZ\226\225\375"
 15397      F9685B56 
 15397      C6016E5C 
 15397      16F60571 
 15397      5A9695FD 
 15398 0027 6B591635 		.ascii	"kY\0265\365eXV\005\361bTWuISV\025u\345Y]T\265=PS\227"
 15398      F5655856 
 15398      05F16254 
 15398      57754953 
 15398      561575E5 
 15399 0043 60       		.ascii	"`"
 15400              		.section	.rodata.prog_catalogue,"a"
 15401              		.align	2
 15404              	prog_catalogue:
 15405 0000 BB0D1D1C 		.ascii	"\273\015\035\034y\035G\201\310t*3\353\324B\274o1\272"
 15405      791D4781 
 15405      C8742A33 
 15405      EBD442BC 
 15405      6F31BA
 15406 0013 B7C20E0B 		.ascii	"\267\302\016\013\372\3773/k\312\364\313\316#\220\347"
 15406      FAFF332F 
 15406      6BCAF4CB 
 15406      CE2390E7 
 15407 0023 38CE8CC4 		.ascii	"8\316\214\304\3367s\000\320\3349G\003\233.\266\015\361"
ARM GAS  /tmp/ccF3vcso.s 			page 413


 15407      DE377300 
 15407      D0DC3947 
 15407      039B2EB6 
 15407      0DF1
 15408 0035 D8CD1B4B 		.ascii	"\330\315\033K\022\274\262,\016\033\254\322\015\355s"
 15408      12BCB22C 
 15408      0E1BACD2 
 15408      0DED73
 15409 0044 02C92A72 		.ascii	"\002\311*r\200\350\313\261\354\214\224\256+rL\354\367"
 15409      80E8CBB1 
 15409      EC8C94AE 
 15409      2B724CEC 
 15409      F7
 15410 0055 D0B463C3 		.ascii	"\320\264c\303@<O-\014\370=\017S\314\366\320@"
 15410      403C4F2D 
 15410      0CF83D0F 
 15410      53CCF6D0 
 15410      40
 15411              		.section	.rodata.program_xfcn,"a"
 15412              		.align	2
 15415              	program_xfcn:
 15416 0000 49DC26DB 		.ascii	"I\334&\333\0300Y\206g\032DJ#\265\234s]\342Y\335\037"
 15416      18305986 
 15416      671A444A 
 15416      23B59C73 
 15416      5DE259DD 
 15417 0015 52CCD442 		.ascii	"R\314\324Bc\332\225%Jg\222\026\253\033J\021\007\025"
 15417      63DA9525 
 15417      4A679216 
 15417      AB1B4A11 
 15417      0715
 15418 0027 3C4F52E7 		.ascii	"<OR\347M\324p\334F\3033w\031\007\030\224t\222\007\201"
 15418      4DD470DC 
 15418      46C33377 
 15418      19071894 
 15418      74920781 
 15419 003b B85019DC 		.ascii	"\270P\031\334{\037m[F5\262f\334\2461\3310\334\267=-"
 15419      7B1F6D5B 
 15419      4635B266 
 15419      DCA631D9 
 15419      30DCB73D 
 15420 0050 CAC95C4B 		.ascii	"\312\311\\K\024D\261<W*\306rl\234hE\223\\X\302\305\363"
 15420      1444B13C 
 15420      572AC672 
 15420      6C9C6845 
 15420      935C58C2 
 15421 0066 4430A374 		.ascii	"D0\243t\031\367D5c\214\244\215\"I\022g0\254uY\242\200"
 15421      19F74435 
 15421      638CA48D 
 15421      22491267 
 15421      30AC7559 
 15422 007c 9EB74AA2 		.ascii	"\236\267J\242~\334\266\255\353~\340\270m\262\204\253"
 15422      7EDCB6AD 
 15422      EB7EE0B8 
 15422      6DB284AB 
 15423 008c 6DD3F6ED 		.ascii	"m\323\366\355\274n[\2479\227j\021\267\231\345p\035\366"
 15423      BC6E5BA7 
ARM GAS  /tmp/ccF3vcso.s 			page 414


 15423      39976A11 
 15423      B799E570 
 15423      1DF6
 15424 009e 21856FDE 		.ascii	"!\205o\336p"
 15424      70
 15425              		.section	.rodata.smap.9452,"a"
 15426              		.align	2
 15427              		.set	.LANCHOR22,. + 0
 15430              	smap.9452:
 15431 0000 00010002 		.ascii	"\000\001\000\002"
 15432              		.section	.rodata.stats_catalogue,"a"
 15433              		.align	2
 15436              	stats_catalogue:
 15437 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\226\014T\027\205"
 15437      5D17C971 
 15437      58611685 
 15437      960C5417 
 15437      85
 15438 0011 514C5761 		.ascii	"QLWa@"
 15438      40
 15439              		.section	.rodata.sums_catalogue,"a"
 15440              		.align	2
 15443              	sums_catalogue:
 15444 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15444      4A1384C1 
 15444      20451104 
 15444      F11C4911 
 15444      8500
 15445              		.section	.rodata.test_catalogue,"a"
 15446              		.align	2
 15449              	test_catalogue:
 15450 0000 C771CCE8 		.ascii	"\307q\314\350\353/\313\334+\016\3040\362\363\011\302"
 15450      EB2FCBDC 
 15450      2B0EC430 
 15450      F2F309C2 
 15451 0010 F0DC30D3 		.ascii	"\360\3340\323.\362;\340\2356\213\202\370\2725\013\223"
 15451      2EF23BE0 
 15451      9D368B82 
 15451      F8BA350B 
 15451      93
 15452 0021 40F9B96E 		.ascii	"@\371\271ncT\326\271.\213\234\267>\200"
 15452      6354D6B9 
 15452      2E8B9CB7 
 15452      3E80
 15453              		.text
 15454              	.Letext0:
 15455              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15456              		.file 3 "dmcp/dmcp.h"
 15457              		.file 4 "src/decNumber/decContext.h"
 15458              		.file 5 "src/decNumber/decNumber.h"
 15459              		.file 6 "src/decNumber/decimal64.h"
 15460              		.file 7 "src/decNumber/decimal128.h"
 15461              		.file 8 "src/xeq.h"
 15462              		.file 9 "src/data.h"
 15463              		.file 10 "src/keys.h"
 15464              		.file 11 "src/menu.h"
 15465              		.file 12 "src/display.h"
ARM GAS  /tmp/ccF3vcso.s 			page 415


 15466              		.file 13 "src/consts.h"
 15467              		.file 14 "src/storage.h"
 15468              		.file 15 "src/stats.h"
 15469              		.file 16 "src/catalogues.h"
 15470              		.file 17 "src/printer.h"
 15471              		.file 18 "src/lcd.h"
 15472              		.file 19 "src/int.h"
 15473              		.file 20 "src/decn.h"
ARM GAS  /tmp/ccF3vcso.s 			page 416


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccF3vcso.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccF3vcso.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccF3vcso.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccF3vcso.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccF3vcso.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccF3vcso.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccF3vcso.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccF3vcso.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccF3vcso.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccF3vcso.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccF3vcso.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccF3vcso.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccF3vcso.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccF3vcso.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccF3vcso.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccF3vcso.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccF3vcso.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccF3vcso.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccF3vcso.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccF3vcso.s:865    .text.check_confirm.part.0:0000000000000030 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccF3vcso.s:872    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccF3vcso.s:879    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccF3vcso.s:921    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccF3vcso.s:926    .text.reset_arg:0000000000000000 $t
     /tmp/ccF3vcso.s:933    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccF3vcso.s:977    .text.reset_arg:0000000000000018 $d
     /tmp/ccF3vcso.s:982    .text.arg_eval:0000000000000000 $t
     /tmp/ccF3vcso.s:989    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccF3vcso.s:1134   .text.arg_eval:0000000000000090 $d
     /tmp/ccF3vcso.s:1141   .text.arg_digit:0000000000000000 $t
     /tmp/ccF3vcso.s:1148   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccF3vcso.s:1407   .text.arg_digit:00000000000000f4 $d
     /tmp/ccF3vcso.s:1415   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccF3vcso.s:1422   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccF3vcso.s:1480   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccF3vcso.s:1485   .text.process_h_shifted:0000000000000000 $t
     /tmp/ccF3vcso.s:1492   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/ccF3vcso.s:1740   .text.process_h_shifted:00000000000000c8 $d
     /tmp/ccF3vcso.s:1748   .text.intltr:0000000000000000 $t
     /tmp/ccF3vcso.s:1755   .text.intltr:0000000000000000 intltr
     /tmp/ccF3vcso.s:1818   .text.intltr:0000000000000030 $d
     /tmp/ccF3vcso.s:1824   .text.process_normal:0000000000000000 $t
     /tmp/ccF3vcso.s:1831   .text.process_normal:0000000000000000 process_normal
     /tmp/ccF3vcso.s:1892   .text.process_normal:0000000000000022 $d
     /tmp/ccF3vcso.s:1938   .text.process_normal:000000000000007e $t
     /tmp/ccF3vcso.s:1987   .text.process_normal:00000000000000ac $d
     /tmp/ccF3vcso.s:2006   .text.process_normal:00000000000000f8 $t
     /tmp/ccF3vcso.s:2017   .text.process_normal:0000000000000104 $d
     /tmp/ccF3vcso.s:2060   .text.process_normal:00000000000001b0 $t
     /tmp/ccF3vcso.s:2261   .text.process_normal:0000000000000264 $d
     /tmp/ccF3vcso.s:2270   .text.process_fg_shifted:0000000000000000 $t
     /tmp/ccF3vcso.s:2277   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/ccF3vcso.s:2405   .text.process_fg_shifted:000000000000003e $d
     /tmp/ccF3vcso.s:2604   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/ccF3vcso.s 			page 417


     /tmp/ccF3vcso.s:2645   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/ccF3vcso.s:2841   .text.process_fg_shifted:0000000000000294 $d
     /tmp/ccF3vcso.s:2850   .text.set_window:0000000000000000 $t
     /tmp/ccF3vcso.s:2857   .text.set_window:0000000000000000 set_window
     /tmp/ccF3vcso.s:3004   .text.set_window:000000000000008c $d
     /tmp/ccF3vcso.s:3011   .text.arg_storcl:0000000000000000 $t
     /tmp/ccF3vcso.s:3018   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccF3vcso.s:3134   .text.arg_storcl:0000000000000040 $d
     /tmp/ccF3vcso.s:3139   .text.process_arg:0000000000000000 $t
     /tmp/ccF3vcso.s:3146   .text.process_arg:0000000000000000 process_arg
     /tmp/ccF3vcso.s:3352   .text.process_arg:000000000000008a $d
     /tmp/ccF3vcso.s:3356   .text.process_arg:0000000000000090 $t
     /tmp/ccF3vcso.s:3445   .text.process_arg:00000000000000f0 $d
     /tmp/ccF3vcso.s:3492   .text.process_arg:00000000000001a8 $t
     /tmp/ccF3vcso.s:3895   .text.process_arg:000000000000032c $d
     /tmp/ccF3vcso.s:3904   .text.process_arg:0000000000000340 $t
     /tmp/ccF3vcso.s:4395   .text.process_arg:000000000000054c $d
     /tmp/ccF3vcso.s:4400   .text.cur_shift:0000000000000000 $t
     /tmp/ccF3vcso.s:4408   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccF3vcso.s:4436   .text.cur_shift:0000000000000010 $d
     /tmp/ccF3vcso.s:4441   .text.reset_shift:0000000000000000 $t
     /tmp/ccF3vcso.s:4449   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccF3vcso.s:4507   .text.reset_shift:0000000000000014 $d
     /tmp/ccF3vcso.s:4512   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccF3vcso.s:4520   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccF3vcso.s:4548   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccF3vcso.s:4553   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccF3vcso.s:4561   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccF3vcso.s:4619   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccF3vcso.s:4624   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccF3vcso.s:4632   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccF3vcso.s:4668   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccF3vcso.s:4674   .text.init_state:0000000000000000 $t
     /tmp/ccF3vcso.s:4682   .text.init_state:0000000000000000 init_state
     /tmp/ccF3vcso.s:4798   .text.init_state:0000000000000074 $d
     /tmp/ccF3vcso.s:4805   .text.process_cmplx:0000000000000000 $t
     /tmp/ccF3vcso.s:4812   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/ccF3vcso.s:5168   .text.process_cmplx:00000000000000c4 $d
     /tmp/ccF3vcso.s:5175   .text.soft_init_state:0000000000000000 $t
     /tmp/ccF3vcso.s:5183   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccF3vcso.s:5298   .text.soft_init_state:0000000000000058 $d
     /tmp/ccF3vcso.s:5304   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/ccF3vcso.s:5312   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/ccF3vcso.s:5478   .text.finish_cpx_entry:00000000000000bc $d
     /tmp/ccF3vcso.s:5485   .text.stack_begin:0000000000000000 $t
     /tmp/ccF3vcso.s:5493   .text.stack_begin:0000000000000000 stack_begin
     /tmp/ccF3vcso.s:5633   .text.stack_begin:00000000000000b4 $d
     /tmp/ccF3vcso.s:5639   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccF3vcso.s:5647   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccF3vcso.s:5668   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccF3vcso.s:5674   .text.current_catalogue:0000000000000000 $t
     /tmp/ccF3vcso.s:5682   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccF3vcso.s:5938   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccF3vcso.s:5948   .text.process_catalogue:0000000000000000 $t
     /tmp/ccF3vcso.s:5955   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccF3vcso.s:6284   .text.process_catalogue:00000000000000fe $d
     /tmp/ccF3vcso.s:6316   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/ccF3vcso.s 			page 418


     /tmp/ccF3vcso.s:6824   .text.process_catalogue:00000000000002dc $d
     /tmp/ccF3vcso.s:6845   .text.process_catalogue:00000000000002fc $t
     /tmp/ccF3vcso.s:6875   .text.find_pos:0000000000000000 $t
     /tmp/ccF3vcso.s:6883   .text.find_pos:0000000000000000 find_pos
     /tmp/ccF3vcso.s:7056   .text.find_pos:0000000000000080 $d
     /tmp/ccF3vcso.s:7062   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccF3vcso.s:7070   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccF3vcso.s:7102   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccF3vcso.s:7108   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccF3vcso.s:7118   .text.process_keycode:0000000000000000 $t
     /tmp/ccF3vcso.s:7126   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccF3vcso.s:7750   .text.process_keycode:00000000000002e0 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccF3vcso.s:7774   .text.process_keycode:0000000000000324 $t
     /tmp/ccF3vcso.s:7976   .text.process_keycode:00000000000003fc $d
     /tmp/ccF3vcso.s:7985   .text.process_keycode:0000000000000420 $t
     /tmp/ccF3vcso.s:8390   .text.process_keycode:00000000000005d0 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccF3vcso.s:8414   .text.process_keycode:000000000000060c $t
     /tmp/ccF3vcso.s:8822   .text.process_keycode:0000000000000754 $d
     /tmp/ccF3vcso.s:8849   .text.process_keycode:000000000000076e $t
     /tmp/ccF3vcso.s:8939   .text.process_keycode:00000000000007c8 $d
     /tmp/ccF3vcso.s:8943   .text.process_keycode:00000000000007d8 $t
     /tmp/ccF3vcso.s:9214   .text.process_keycode:00000000000008d0 $d
     /tmp/ccF3vcso.s:9251   .text.process_keycode:0000000000000900 $t
     /tmp/ccF3vcso.s:10041  .text.process_keycode:0000000000000bd4 $d
     /tmp/ccF3vcso.s:10071  .text.process_keycode:0000000000000c4c $t
     /tmp/ccF3vcso.s:10103  .text.process_keycode:0000000000000c6c $d
     /tmp/ccF3vcso.s:10111  .text.process_keycode:0000000000000c80 $t
     /tmp/ccF3vcso.s:10800  .text.process_keycode:0000000000000ec0 $d
     /tmp/ccF3vcso.s:10835  .text.process_keycode:0000000000000f4c $t
     /tmp/ccF3vcso.s:11004  .text.process_keycode:0000000000000fec $d
     /tmp/ccF3vcso.s:11027  .text.process_keycode:000000000000100c $t
     /tmp/ccF3vcso.s:11099  .text.process_keycode:000000000000105c $d
     /tmp/ccF3vcso.s:11119  .text.process_keycode:00000000000010ac $t
     /tmp/ccF3vcso.s:11343  .text.process_keycode:0000000000001164 $d
     /tmp/ccF3vcso.s:11361  .text.process_keycode:00000000000011ac $t
     /tmp/ccF3vcso.s:11924  .text.process_keycode:000000000000137c $d
     /tmp/ccF3vcso.s:11962  .text.process_keycode:0000000000001404 $d
     /tmp/ccF3vcso.s:11974  .text.process_keycode:0000000000001420 $t
     /tmp/ccF3vcso.s:12023  .text.process_keycode:0000000000001450 $d
     /tmp/ccF3vcso.s:12058  .text.process_keycode:00000000000014d8 $t
     /tmp/ccF3vcso.s:12558  .text.process_keycode:00000000000016fe $d
     /tmp/ccF3vcso.s:12600  .text.process_keycode:0000000000001752 $t
     /tmp/ccF3vcso.s:12604  .text.process_keycode:0000000000001754 $d
     /tmp/ccF3vcso.s:12616  .text.process_keycode:0000000000001760 $t
     /tmp/ccF3vcso.s:13415  .text.process_keycode:0000000000001af0 $d
     /tmp/ccF3vcso.s:13441  .text.process_keycode:0000000000001b58 $t
     /tmp/ccF3vcso.s:13736  .text.process_keycode:0000000000001bf4 $d
     /tmp/ccF3vcso.s:13767  .text.process_keycode:0000000000001c00 $t
     /tmp/ccF3vcso.s:14502  .text.process_keycode:0000000000001e78 $d
     /tmp/ccF3vcso.s:14514  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccF3vcso.s:14522  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccF3vcso.s:14730  .text.process_keycode_with_shift:000000000000008c $d
ARM GAS  /tmp/ccF3vcso.s 			page 419


     /tmp/ccF3vcso.s:14747  .bss.was_paused.9977:0000000000000000 $d
     /tmp/ccF3vcso.s:14751  .bss.was_paused.9977:0000000000000000 was_paused.9977
     /tmp/ccF3vcso.s:14754  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccF3vcso.s:14757  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccF3vcso.s:14760  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:14763  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccF3vcso.s:14767  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccF3vcso.s:14770  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccF3vcso.s:14773  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccF3vcso.s:14777  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccF3vcso.s:14783  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccF3vcso.s:14787  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccF3vcso.s:14793  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccF3vcso.s:14796  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccF3vcso.s:14800  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccF3vcso.s:14803  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccF3vcso.s:14806  .rodata.alphamap.9460:0000000000000000 $d
     /tmp/ccF3vcso.s:14810  .rodata.alphamap.9460:0000000000000000 alphamap.9460
     /tmp/ccF3vcso.s:14850  .rodata.amap.9451:0000000000000000 $d
     /tmp/ccF3vcso.s:14854  .rodata.amap.9451:0000000000000000 amap.9451
     /tmp/ccF3vcso.s:14872  .rodata.catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:14875  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccF3vcso.s:14884  .rodata.catalogue_sizes.9774:0000000000000000 $d
     /tmp/ccF3vcso.s:14888  .rodata.catalogue_sizes.9774:0000000000000000 catalogue_sizes.9774
     /tmp/ccF3vcso.s:14891  .rodata.catalogues.9782:0000000000000000 $d
     /tmp/ccF3vcso.s:14895  .rodata.catalogues.9782:0000000000000000 catalogues.9782
     /tmp/ccF3vcso.s:14980  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccF3vcso.s:15436  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccF3vcso.s:15395  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccF3vcso.s:14997  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccF3vcso.s:15404  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccF3vcso.s:15415  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccF3vcso.s:15449  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccF3vcso.s:15043  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccF3vcso.s:15443  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccF3vcso.s:15036  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccF3vcso.s:14918  .rodata.cmap.9450:0000000000000000 $d
     /tmp/ccF3vcso.s:14922  .rodata.cmap.9450:0000000000000000 cmap.9450
     /tmp/ccF3vcso.s:14948  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:14952  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccF3vcso.s:14959  .rodata.conv_mapping.9821:0000000000000000 $d
     /tmp/ccF3vcso.s:14963  .rodata.conv_mapping.9821:0000000000000000 conv_mapping.9821
     /tmp/ccF3vcso.s:14977  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:14984  .rodata.disp.9632:0000000000000000 $d
     /tmp/ccF3vcso.s:14988  .rodata.disp.9632:0000000000000000 disp.9632
     /tmp/ccF3vcso.s:14994  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:15003  .rodata.linear_key_map.9416:0000000000000000 $d
     /tmp/ccF3vcso.s:15007  .rodata.linear_key_map.9416:0000000000000000 linear_key_map.9416
     /tmp/ccF3vcso.s:15013  .rodata.linear_key_map.9420:0000000000000000 $d
     /tmp/ccF3vcso.s:15017  .rodata.linear_key_map.9420:0000000000000000 linear_key_map.9420
     /tmp/ccF3vcso.s:15023  .rodata.map.9432:0000000000000000 $d
     /tmp/ccF3vcso.s:15027  .rodata.map.9432:0000000000000000 map.9432
     /tmp/ccF3vcso.s:15033  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:15040  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:15050  .rodata.op_map.9504:0000000000000000 $d
     /tmp/ccF3vcso.s:15054  .rodata.op_map.9504:0000000000000000 op_map.9504
     /tmp/ccF3vcso.s:15091  .rodata.op_map.9527:0000000000000000 $d
ARM GAS  /tmp/ccF3vcso.s 			page 420


     /tmp/ccF3vcso.s:15095  .rodata.op_map.9527:0000000000000000 op_map.9527
     /tmp/ccF3vcso.s:15167  .rodata.op_map.9550:0000000000000000 $d
     /tmp/ccF3vcso.s:15171  .rodata.op_map.9550:0000000000000000 op_map.9550
     /tmp/ccF3vcso.s:15208  .rodata.op_map.9605:0000000000000000 $d
     /tmp/ccF3vcso.s:15212  .rodata.op_map.9605:0000000000000000 op_map.9605
     /tmp/ccF3vcso.s:15354  .rodata.op_map.9617:0000000000000000 $d
     /tmp/ccF3vcso.s:15358  .rodata.op_map.9617:0000000000000000 op_map.9617
     /tmp/ccF3vcso.s:15363  .rodata.op_map.9631:0000000000000000 $d
     /tmp/ccF3vcso.s:15367  .rodata.op_map.9631:0000000000000000 op_map.9631
     /tmp/ccF3vcso.s:15375  .rodata.op_map2.9528:0000000000000000 $d
     /tmp/ccF3vcso.s:15379  .rodata.op_map2.9528:0000000000000000 op_map2.9528
     /tmp/ccF3vcso.s:15385  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccF3vcso.s:15389  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccF3vcso.s:15392  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:15401  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:15412  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccF3vcso.s:15426  .rodata.smap.9452:0000000000000000 $d
     /tmp/ccF3vcso.s:15430  .rodata.smap.9452:0000000000000000 smap.9452
     /tmp/ccF3vcso.s:15433  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:15440  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:15446  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccF3vcso.s:2446   .text.process_fg_shifted:0000000000000067 $d
     /tmp/ccF3vcso.s:2446   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
clear_disp
get_reg_n
swap_reg
ARM GAS  /tmp/ccF3vcso.s 			page 421


copyreg
op_p2r
RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
is_key_pressed
set_running_off
get_user_flag
print_tab
print_alpha
xeq_sst_bst
stoprog
clr_dot
message
find_char
delprog
prt
scopy_char
clpall
clrprog
reset
clrall
TraceBuffer
set_last_menu
find_user_pc
cmdgtocommon
global_regs
drop
convert_regK
local_regs
alen

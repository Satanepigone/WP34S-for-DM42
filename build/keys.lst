ARM GAS  /tmp/ccOshYsA.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.check_f_key,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	check_f_key:
  27              	.LVL0:
  28              	.LFB17:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccOshYsA.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */ //ND ???
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** /*
  82:src/keys.c    ****  *  Return the shift state
  83:src/keys.c    ****  */
  84:src/keys.c    **** enum shifts cur_shift(void) {
  85:src/keys.c    **** 	enum shifts s = shift_down();
  86:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccOshYsA.s 			page 3


  87:src/keys.c    **** }
  88:src/keys.c    **** 
  89:src/keys.c    **** /*
  90:src/keys.c    ****  *  Set new shift state, return previous state
  91:src/keys.c    ****  */
  92:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  93:src/keys.c    **** 	enum shifts r = cur_shift();
  94:src/keys.c    **** 	State2.shifts = shift;
  95:src/keys.c    **** 	State2.alpha_pos = 0;
  96:src/keys.c    **** 	return r;
  97:src/keys.c    **** }
  98:src/keys.c    **** 
  99:src/keys.c    **** /*
 100:src/keys.c    ****  *  Clear shift state and return previous state
 101:src/keys.c    ****  */
 102:src/keys.c    **** enum shifts reset_shift(void) {
 103:src/keys.c    **** 	return set_shift(SHIFT_N);
 104:src/keys.c    **** }
 105:src/keys.c    **** 
 106:src/keys.c    **** /*
 107:src/keys.c    ****  *  Toggle shift state
 108:src/keys.c    ****  */
 109:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 110:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 111:src/keys.c    **** }
 112:src/keys.c    **** 
 113:src/keys.c    **** 
 114:src/keys.c    **** /*
 115:src/keys.c    ****  * Mapping from the key code to a linear index
 116:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 117:src/keys.c    ****  */
 118:src/keys.c    **** // ND: understood, but not really needed I don't think given the memory available.
 119:src/keys.c    **** // Easy to implement if / when required. Note that f, g, h all have the same index.
 120:src/keys.c    **** // This relates to the keycode definitions in keys.h.
 121:src/keys.c    **** // Will need to refer to dmcp.h
 122:src/keys.c    **** 
 123:src/keys.c    **** #ifdef DM42
 124:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 125:src/keys.c    **** {
 126:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 127:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 128:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 129:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 130:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 131:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 132:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 133:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 134:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 135:src/keys.c    **** 	};
 136:src/keys.c    **** 	return linear_key_map[c];
 137:src/keys.c    **** }
 138:src/keys.c    **** 
 139:src/keys.c    **** static int keycode_to_linear(const keycode c)
 140:src/keys.c    **** {
 141:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 142:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 143:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
ARM GAS  /tmp/ccOshYsA.s 			page 4


 144:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 145:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 146:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 147:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 148:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 149:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 150:src/keys.c    **** 	};
 151:src/keys.c    **** 	return linear_key_map[c];
 152:src/keys.c    **** }
 153:src/keys.c    **** #else
 154:src/keys.c    **** static int keycode_to_linear(const keycode c)
 155:src/keys.c    **** {
 156:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 157:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 158:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 159:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 160:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 161:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 162:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 163:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 164:src/keys.c    **** 	};
 165:src/keys.c    **** 	return linear_key_map[c];
 166:src/keys.c    **** }
 167:src/keys.c    **** #endif
 168:src/keys.c    **** /*
 169:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 170:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 171:src/keys.c    ****  */
 172:src/keys.c    **** 
 173:src/keys.c    **** // ND: will need to change this a bit. Note the advance by six per row, even when
 174:src/keys.c    **** // there are only five keys.
 175:src/keys.c    **** 
 176:src/keys.c    **** int keycode_to_row_column(const int c)
 177:src/keys.c    **** {
 178:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 179:src/keys.c    **** }
 180:src/keys.c    **** 
 181:src/keys.c    **** /*
 182:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 183:src/keys.c    ****  * Used in PUTK and KTYPE.
 184:src/keys.c    ****  */
 185:src/keys.c    **** 
 186:src/keys.c    **** // ND: see above
 187:src/keys.c    **** int row_column_to_keycode(const int c)
 188:src/keys.c    **** {
 189:src/keys.c    **** 	int row = c / 10 - 1;
 190:src/keys.c    **** 	int col = c % 10 - 1;
 191:src/keys.c    **** 
 192:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 193:src/keys.c    **** 		return -1;
 194:src/keys.c    **** 	return row * 6 + col;
 195:src/keys.c    **** }
 196:src/keys.c    **** 
 197:src/keys.c    **** /*
 198:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 199:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 200:src/keys.c    ****  */
ARM GAS  /tmp/ccOshYsA.s 			page 5


 201:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 202:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 203:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 204:src/keys.c    **** 
 205:src/keys.c    **** #define NO_REG 0x7f
 206:src/keys.c    **** #define NO_SHORT 0x80
 207:src/keys.c    **** #ifdef DM42
 208:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 209:src/keys.c    **** {
 210:src/keys.c    ****   static const unsigned char map[] = {
 211:src/keys.c    ****     // K00 - K05
 212:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 213:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 214:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 215:src/keys.c    ****     // K10 - K15
 216:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 217:src/keys.c    ****     // K20 - K24
 218:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 219:src/keys.c    ****     // K30 - K34
 220:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 221:src/keys.c    ****     // K40 - K44
 222:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 223:src/keys.c    ****     // K50 - K54
 224:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 225:src/keys.c    ****     // K60 - K64
 226:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 227:src/keys.c    ****     regY_idx, regZ_idx,
 228:src/keys.c    ****     // Shifts
 229:src/keys.c    ****     NO_REG
 230:src/keys.c    ****   };
 231:src/keys.c    **** 
 232:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 233:src/keys.c    **** }
 234:src/keys.c    **** #else
 235:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 236:src/keys.c    **** {
 237:src/keys.c    ****   static const unsigned char map[] = {
 238:src/keys.c    **** 		// K00 - K05
 239:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 240:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 241:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 242:src/keys.c    **** 		// K10 - K12
 243:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 244:src/keys.c    **** 		// K20 - K24
 245:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 246:src/keys.c    **** 		// K30 - K34
 247:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 248:src/keys.c    **** 		// K40 - K44
 249:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 250:src/keys.c    **** 		// K50 - K54
 251:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 252:src/keys.c    **** 		// K60 - K63
 253:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 254:src/keys.c    **** 		regY_idx, regZ_idx,
 255:src/keys.c    **** 		// Shifts, etc
 256:src/keys.c    **** 		NO_REG
 257:src/keys.c    **** 	};
ARM GAS  /tmp/ccOshYsA.s 			page 6


 258:src/keys.c    **** 
 259:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 260:src/keys.c    **** }
 261:src/keys.c    **** #endif
 262:src/keys.c    **** /*
 263:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 264:src/keys.c    ****  */
 265:src/keys.c    **** 
 266:src/keys.c    **** // ND:  Seems straightforward: I'll just need to re-write the contents of the _map struct
 267:src/keys.c    **** // significantly, and remove the requirement of h-shiftedness.
 268:src/keys.c    **** // The three entries at present correspond to normal mode, int mode, and complex mode.
 269:src/keys.c    **** // I might need two tables - one for f, one for g.
 270:src/keys.c    **** //
 271:src/keys.c    **** 
 272:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 273:src/keys.c    **** {
 274:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 275:src/keys.c    ****   int i, col, max;
 276:src/keys.c    ****   const struct _map {
 277:src/keys.c    ****     unsigned char key, cat[3];
 278:src/keys.c    ****   } *cp;
 279:src/keys.c    **** 
 280:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 281:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 282:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 283:src/keys.c    **** 
 284:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 285:src/keys.c    ****     /*
 286:src/keys.c    ****      *  Normal processing - Not alpha mode
 287:src/keys.c    ****      */
 288:src/keys.c    ****     static const struct _map cmap[] = {
 289:src/keys.c    **** #ifdef DM42
 290:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 291:src/keys.c    **** #else
 292:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 293:src/keys.c    **** #endif
 294:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 295:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 296:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 297:src/keys.c    **** #else
 298:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 299:src/keys.c    **** #endif
 300:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 301:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 302:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 303:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 304:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 305:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 306:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 307:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 308:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 309:src/keys.c    **** #else
 310:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 311:src/keys.c    **** #endif
 312:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 313:src/keys.c    ****     };
 314:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 7


 315:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 316:src/keys.c    ****       /*
 317:src/keys.c    ****        *  SHOW starts register browser
 318:src/keys.c    ****        */
 319:src/keys.c    ****       return CATALOGUE_REGISTERS;
 320:src/keys.c    ****     }
 321:src/keys.c    **** #if 0
 322:src/keys.c    ****     // conflicts with c# 002 and c# 003
 323:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 324:src/keys.c    ****       /*
 325:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 326:src/keys.c    ****        */
 327:src/keys.c    ****       shift = SHIFT_H;
 328:src/keys.c    ****     }
 329:src/keys.c    **** #endif
 330:src/keys.c    ****     if (shift != SHIFT_H) {
 331:src/keys.c    ****       /*
 332:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 333:src/keys.c    ****        */
 334:src/keys.c    ****       return CATALOGUE_NONE;
 335:src/keys.c    ****     }
 336:src/keys.c    **** 
 337:src/keys.c    ****     /*
 338:src/keys.c    ****      *  Prepare search
 339:src/keys.c    ****      */
 340:src/keys.c    ****     cp = cmap;
 341:src/keys.c    **** #ifndef WINGUI
 342:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 343:src/keys.c    **** #else
 344:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 345:src/keys.c    **** #endif
 346:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 347:src/keys.c    ****   }
 348:src/keys.c    ****   else {
 349:src/keys.c    ****     /*
 350:src/keys.c    ****      *  All the alpha catalogues go here
 351:src/keys.c    ****      */
 352:src/keys.c    **** #ifdef DM42
 353:src/keys.c    ****     static const struct _map amap[] = {
 354:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 355:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 356:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 357:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 358:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 359:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 360:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 361:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 362:src/keys.c    ****     };
 363:src/keys.c    **** #else
 364:src/keys.c    ****     static const struct _map amap[] = {
 365:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 366:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 367:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 368:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 369:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 370:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 371:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
ARM GAS  /tmp/ccOshYsA.s 			page 8


 372:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 373:src/keys.c    ****     };
 374:src/keys.c    **** #endif
 375:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 376:src/keys.c    **** 
 377:src/keys.c    ****     /*
 378:src/keys.c    ****      *  Prepare search
 379:src/keys.c    ****      */
 380:src/keys.c    ****     cp = amap;
 381:src/keys.c    ****     col = smap[shift];
 382:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 383:src/keys.c    ****   }
 384:src/keys.c    **** 
 385:src/keys.c    ****   /*
 386:src/keys.c    ****    *  Search the key in one of the tables
 387:src/keys.c    ****    */
 388:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 389:src/keys.c    ****     if (cp->key == c) {
 390:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 391:src/keys.c    ****       break;
 392:src/keys.c    ****     }
 393:src/keys.c    ****   }
 394:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 395:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 396:src/keys.c    ****     cat = CATALOGUE_NONE;
 397:src/keys.c    ****   }
 398:src/keys.c    ****   return cat;
 399:src/keys.c    **** }
 400:src/keys.c    **** 
 401:src/keys.c    **** #ifdef DM42
 402:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 403:src/keys.c    **** {
 404:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 405:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 406:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 407:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 408:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 409:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 410:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 411:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 412:src/keys.c    **** 
 413:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 414:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 415:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 416:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 417:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 418:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 419:src/keys.c    **** 
 420:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 421:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 422:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 423:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 424:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 425:src/keys.c    **** 
 426:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 427:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 428:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
ARM GAS  /tmp/ccOshYsA.s 			page 9


 429:src/keys.c    **** 		{ 'R',  '9',  'R',  0000, 'r',  0260,  },  // K33
 430:src/keys.c    **** 		{ 'S',  '/',  0221, 0000, 's',  0261,  },  // K34
 431:src/keys.c    **** 
 432:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K40
 433:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 434:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 435:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 436:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 437:src/keys.c    **** 
 438:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K50
 439:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 440:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 441:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 442:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 443:src/keys.c    **** 
 444:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 445:src/keys.c    **** 		{ ':',  '0',  0207, 0000, ';',  0247,  },  // K61
 446:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 447:src/keys.c    **** 		{ '?',  0000, 0041, 0000, 0000, 0000,  },  // K63
 448:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, 0000, 0000,  },  // K64
 449:src/keys.c    **** 
 450:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 451:src/keys.c    **** 	};
 452:src/keys.c    **** 	if (State2.alphashift) {
 453:src/keys.c    **** 		if (shift == SHIFT_N)
 454:src/keys.c    **** 			shift = SHIFT_LC_N;
 455:src/keys.c    **** 		else if (shift == SHIFT_G)
 456:src/keys.c    **** 			shift = SHIFT_LC_G;
 457:src/keys.c    **** 	}
 458:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 459:src/keys.c    **** }
 460:src/keys.c    **** #else
 461:src/keys.c    **** /*
 462:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 463:src/keys.c    ****  * the two lower case planes.
 464:src/keys.c    ****  */
 465:src/keys.c    **** // ND: work here! K04 and K05 aren't arrow and complex here - this is nice, and helpful.
 466:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 467:src/keys.c    **** {
 468:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 469:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 470:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 471:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 472:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 473:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 474:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 475:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 478:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 479:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 480:src/keys.c    **** 
 481:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 482:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 483:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 484:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 485:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
ARM GAS  /tmp/ccOshYsA.s 			page 10


 486:src/keys.c    **** 
 487:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 488:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 489:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 490:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 491:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 492:src/keys.c    **** 
 493:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 494:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 495:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 496:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 497:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 498:src/keys.c    **** 
 499:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 500:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 501:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 502:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 503:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 504:src/keys.c    **** 
 505:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 506:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 507:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 508:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 509:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 510:src/keys.c    **** 	};
 511:src/keys.c    **** 	if (State2.alphashift) {
 512:src/keys.c    **** 		if (shift == SHIFT_N)
 513:src/keys.c    **** 			shift = SHIFT_LC_N;
 514:src/keys.c    **** 		else if (shift == SHIFT_G)
 515:src/keys.c    **** 			shift = SHIFT_LC_G;
 516:src/keys.c    **** 	}
 517:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 518:src/keys.c    **** }
 519:src/keys.c    **** #endif
 520:src/keys.c    **** static void init_arg(const enum rarg base) {
 521:src/keys.c    **** 	if (is_bad_cmdline())
 522:src/keys.c    **** 		return;
 523:src/keys.c    **** 	CmdBase = base;
 524:src/keys.c    **** 	State2.ind = 0;
 525:src/keys.c    **** 	State2.digval = 0;
 526:src/keys.c    **** 	State2.numdigit = 0;
 527:src/keys.c    **** 	State2.rarg = 1;
 528:src/keys.c    **** 	State2.dot = 0;
 529:src/keys.c    **** 	State2.local = 0;
 530:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 531:src/keys.c    **** }
 532:src/keys.c    **** 
 533:src/keys.c    **** static void init_cat(enum catalogues cat) {
 534:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 535:src/keys.c    **** 		// Save last catalogue for a later restore
 536:src/keys.c    **** 		State.last_cat = State2.catalogue;
 537:src/keys.c    **** 		CmdLineLength = 0;
 538:src/keys.c    **** 	}
 539:src/keys.c    **** 	process_cmdline();
 540:src/keys.c    **** 
 541:src/keys.c    **** 	State2.labellist = 0;
 542:src/keys.c    **** 	State2.registerlist = 0;
ARM GAS  /tmp/ccOshYsA.s 			page 11


 543:src/keys.c    **** 	State2.status = 0;
 544:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	switch (cat) {
 547:src/keys.c    **** 	case CATALOGUE_LABELS:
 548:src/keys.c    **** 		// Label browser
 549:src/keys.c    **** 		State2.labellist = 1;
 550:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 551:src/keys.c    **** 		break;
 552:src/keys.c    **** 	
 553:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 554:src/keys.c    **** 		// Register browser
 555:src/keys.c    **** 		State2.registerlist = 1;
 556:src/keys.c    **** 		State2.digval = regX_idx;
 557:src/keys.c    **** 		State2.digval2 = 0;
 558:src/keys.c    **** 		break;
 559:src/keys.c    **** 
 560:src/keys.c    **** 	case CATALOGUE_STATUS:
 561:src/keys.c    **** 		// Flag browser
 562:src/keys.c    **** 		State2.status = 1;
 563:src/keys.c    **** 		break;
 564:src/keys.c    **** 
 565:src/keys.c    **** 	default:
 566:src/keys.c    **** 		// Normal catalogue
 567:src/keys.c    **** 		State2.catalogue = cat;
 568:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 569:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 570:src/keys.c    **** 			// Different catalogue, reset position
 571:src/keys.c    **** 			State.catpos = 0;
 572:src/keys.c    **** 		}
 573:src/keys.c    **** 	}
 574:src/keys.c    **** 	reset_shift();
 575:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 576:src/keys.c    **** 	changed_catalog_state();
 577:src/keys.c    **** #endif
 578:src/keys.c    **** }
 579:src/keys.c    **** 
 580:src/keys.c    **** /*
 581:src/keys.c    ****  *  Reset the internal state to a sane default
 582:src/keys.c    ****  */
 583:src/keys.c    **** void init_state(void) {
 584:src/keys.c    **** #ifndef REALBUILD
 585:src/keys.c    **** 	unsigned int a = State2.flags;
 586:src/keys.c    **** 	unsigned int b = State2.trace;
 587:src/keys.c    **** #else
 588:src/keys.c    **** 	FLAG t = TestFlag;
 589:src/keys.c    **** #endif
 590:src/keys.c    **** 	int v = Voltage;
 591:src/keys.c    **** 	int k = LastKey;
 592:src/keys.c    **** 
 593:src/keys.c    **** 	CmdBase = 0;
 594:src/keys.c    **** 	// Removed: will clear any locals on power off
 595:src/keys.c    **** 	// clrretstk(0);
 596:src/keys.c    **** 
 597:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 598:src/keys.c    **** 	State2.test = TST_NONE;
 599:src/keys.c    **** 	State2.runmode = 1;
ARM GAS  /tmp/ccOshYsA.s 			page 12


 600:src/keys.c    **** 	update_program_bounds(1);
 601:src/keys.c    **** 	set_lift();
 602:src/keys.c    **** 
 603:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 604:src/keys.c    **** 	// but must not be cleared.
 605:src/keys.c    **** 	Voltage = v;
 606:src/keys.c    **** 	LastKey = k;
 607:src/keys.c    **** #ifndef REALBUILD
 608:src/keys.c    **** 	State2.trace = b;
 609:src/keys.c    **** 	State2.flags = a;
 610:src/keys.c    **** #else
 611:src/keys.c    **** 	TestFlag = t;
 612:src/keys.c    **** #endif
 613:src/keys.c    **** 	ShowRegister = regX_idx;
 614:src/keys.c    **** }
 615:src/keys.c    **** 
 616:src/keys.c    **** void soft_init_state(void) {
 617:src/keys.c    **** 	int soft;
 618:src/keys.c    **** 	unsigned int runmode;
 619:src/keys.c    **** 	unsigned int alphas;
 620:src/keys.c    **** 
 621:src/keys.c    **** 	if (CmdLineLength) {
 622:src/keys.c    **** 		CmdLineLength = 0;
 623:src/keys.c    **** 		CmdLineEex = 0;
 624:src/keys.c    **** 		CmdLineDot = 0;
 625:src/keys.c    **** 		return;
 626:src/keys.c    **** 	}
 627:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 628:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 629:src/keys.c    **** 	runmode = State2.runmode;
 630:src/keys.c    **** 	alphas = State2.alphas;
 631:src/keys.c    **** 	init_state();
 632:src/keys.c    **** 	if (soft) {
 633:src/keys.c    **** 		State2.runmode = runmode;
 634:src/keys.c    **** 		State2.alphas = alphas;
 635:src/keys.c    **** 	}
 636:src/keys.c    **** }
 637:src/keys.c    **** 
 638:src/keys.c    **** static int check_confirm(int op) {
 639:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 640:src/keys.c    **** 		const int nilop = argKIND(op);
 641:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 642:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 643:src/keys.c    **** 			return STATE_UNFINISHED;
 644:src/keys.c    **** 		}
 645:src/keys.c    **** #ifndef DM42		// ND: I may want to include this now. 
 646:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 647:src/keys.c    **** #endif
 648:src/keys.c    **** #ifdef DM42
 649:src/keys.c    **** 		    if (0    
 650:src/keys.c    **** #endif
 651:src/keys.c    **** #ifdef INFRARED
 652:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 653:src/keys.c    **** #endif
 654:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 655:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 656:src/keys.c    **** #endif
ARM GAS  /tmp/ccOshYsA.s 			page 13


 657:src/keys.c    **** 		) {
 658:src/keys.c    **** 			// These commands are not programmable
 659:src/keys.c    **** 			NonProgrammable = 1;
 660:src/keys.c    **** 		}
 661:src/keys.c    **** 	}
 662:src/keys.c    **** 	return op;
 663:src/keys.c    **** }
 664:src/keys.c    **** 
 665:src/keys.c    **** static void set_smode(const enum single_disp d) {
 666:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 667:src/keys.c    **** }
 668:src/keys.c    **** 
 669:src/keys.c    **** static int check_f_key(int n, const int dflt) {
  30              		.loc 1 669 47 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 670:src/keys.c    **** 	const int code = 100 + n;
  34              		.loc 1 670 2 view .LVU1
 669:src/keys.c    **** 	const int code = 100 + n;
  35              		.loc 1 669 47 is_stmt 0 view .LVU2
  36 0000 38B5     		push	{r3, r4, r5, lr}
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
 671:src/keys.c    **** 	unsigned int pc = state_pc();
 672:src/keys.c    **** 
 673:src/keys.c    **** 	if (State2.runmode) {
  42              		.loc 1 673 6 view .LVU3
  43 0002 0C4B     		ldr	r3, .L12
  44 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
  45              	.LVL1:
 671:src/keys.c    **** 	unsigned int pc = state_pc();
  46              		.loc 1 671 2 is_stmt 1 view .LVU4
  47              		.loc 1 673 2 view .LVU5
  48              		.loc 1 673 5 is_stmt 0 view .LVU6
  49 0006 5B06     		lsls	r3, r3, #25
 669:src/keys.c    **** 	const int code = 100 + n;
  50              		.loc 1 669 47 view .LVU7
  51 0008 0C46     		mov	r4, r1
  52              		.loc 1 673 5 view .LVU8
  53 000a 0ED5     		bpl	.L5
 671:src/keys.c    **** 	unsigned int pc = state_pc();
  54              		.loc 1 671 20 view .LVU9
  55 000c 0A4B     		ldr	r3, .L12+4
 671:src/keys.c    **** 	unsigned int pc = state_pc();
  56              		.loc 1 671 15 view .LVU10
  57 000e B3F8E037 		ldrh	r3, [r3, #2016]
 674:src/keys.c    **** 		if (isXROM(pc))
  58              		.loc 1 674 3 is_stmt 1 view .LVU11
  59              		.loc 1 674 7 is_stmt 0 view .LVU12
  60 0012 9A0B     		lsrs	r2, r3, #14
 675:src/keys.c    **** 			pc = 1;
  61              		.loc 1 675 7 view .LVU13
  62 0014 032A     		cmp	r2, #3
ARM GAS  /tmp/ccOshYsA.s 			page 14


  63              	.LVL2:
 676:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
  64              		.loc 1 676 3 is_stmt 1 view .LVU14
 670:src/keys.c    **** 	unsigned int pc = state_pc();
  65              		.loc 1 670 12 is_stmt 0 view .LVU15
  66 0016 00F16405 		add	r5, r0, #100
  67              	.LVL3:
  68              		.loc 1 676 7 view .LVU16
  69 001a 2946     		mov	r1, r5
  70              	.LVL4:
  71              		.loc 1 676 7 view .LVU17
  72 001c 14BF     		ite	ne
  73 001e 1846     		movne	r0, r3
  74              	.LVL5:
  75              		.loc 1 676 7 view .LVU18
  76 0020 0120     		moveq	r0, #1
  77 0022 0222     		movs	r2, #2
  78 0024 FFF7FEFF 		bl	find_label_from
  79              	.LVL6:
  80              		.loc 1 676 6 view .LVU19
  81 0028 08B9     		cbnz	r0, .L11
  82              	.LVL7:
  83              	.L5:
 677:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 678:src/keys.c    **** 	}
 679:src/keys.c    **** 	return dflt;
  84              		.loc 1 679 9 view .LVU20
  85 002a 2046     		mov	r0, r4
 680:src/keys.c    **** }
  86              		.loc 1 680 1 view .LVU21
  87 002c 38BD     		pop	{r3, r4, r5, pc}
  88              	.LVL8:
  89              	.L11:
 677:src/keys.c    **** 			return RARG(RARG_XEQ, code);
  90              		.loc 1 677 4 is_stmt 1 view .LVU22
 677:src/keys.c    **** 			return RARG(RARG_XEQ, code);
  91              		.loc 1 677 11 is_stmt 0 view .LVU23
  92 002e 45F4C840 		orr	r0, r5, #25600
  93              		.loc 1 680 1 view .LVU24
  94 0032 38BD     		pop	{r3, r4, r5, pc}
  95              	.LVL9:
  96              	.L13:
  97              		.loc 1 680 1 view .LVU25
  98              		.align	2
  99              	.L12:
 100 0034 00000000 		.word	StateWhileOn
 101 0038 00000000 		.word	PersistentRam
 102              		.cfi_endproc
 103              	.LFE17:
 105              		.section	.text.is_label_or_end_at,"ax",%progbits
 106              		.align	1
 107              		.p2align 2,,3
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 111              		.fpu fpv4-sp-d16
 113              	is_label_or_end_at:
ARM GAS  /tmp/ccOshYsA.s 			page 15


 114              	.LVL10:
 115              	.LFB49:
 681:src/keys.c    **** 
 682:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 683:src/keys.c    ****  * as digits.
 684:src/keys.c    ****  */
 685:src/keys.c    **** static int intltr(int d) {
 686:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 687:src/keys.c    **** }
 688:src/keys.c    **** 
 689:src/keys.c    **** /*
 690:src/keys.c    ****  *  Process a key code in the unshifted mode.
 691:src/keys.c    ****  */
 692:src/keys.c    **** 
 693:src/keys.c    **** // ND: straightforward? Probably.
 694:src/keys.c    **** static int process_normal(const keycode c)
 695:src/keys.c    **** {
 696:src/keys.c    **** 	static const unsigned short int op_map[] = {
 697:src/keys.c    **** 		// Row 1
 698:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 699:src/keys.c    **** 		OP_MON  | OP_RECIP,
 700:src/keys.c    **** 		OP_DYA  | OP_POW,
 701:src/keys.c    **** 		OP_MON  | OP_SQRT,
 702:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 703:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 704:src/keys.c    **** 		// Row 2
 705:src/keys.c    **** 		RARG_STO,
 706:src/keys.c    **** 		RARG_RCL,
 707:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 708:src/keys.c    **** 		// Row 3
 709:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 710:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 711:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 712:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 713:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 714:src/keys.c    **** 		// Row 4
 715:src/keys.c    **** 		RARG_XEQ,
 716:src/keys.c    **** 		OP_SPEC | OP_7,
 717:src/keys.c    **** 		OP_SPEC | OP_8,
 718:src/keys.c    **** 		OP_SPEC | OP_9,
 719:src/keys.c    **** 		OP_DYA  | OP_DIV,
 720:src/keys.c    **** 		// Row 5
 721:src/keys.c    **** 		STATE_BST,
 722:src/keys.c    **** 		OP_SPEC | OP_4,
 723:src/keys.c    **** 		OP_SPEC | OP_5,
 724:src/keys.c    **** 		OP_SPEC | OP_6,
 725:src/keys.c    **** 		OP_DYA  | OP_MUL,
 726:src/keys.c    **** 		// Row 6
 727:src/keys.c    **** 		STATE_SST,		// SST
 728:src/keys.c    **** 		OP_SPEC | OP_1,
 729:src/keys.c    **** 		OP_SPEC | OP_2,
 730:src/keys.c    **** 		OP_SPEC | OP_3,
 731:src/keys.c    **** 		OP_DYA  | OP_SUB,
 732:src/keys.c    **** 		// Row 7
 733:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 734:src/keys.c    **** 		OP_SPEC | OP_0,
 735:src/keys.c    **** 		OP_SPEC | OP_DOT,
ARM GAS  /tmp/ccOshYsA.s 			page 16


 736:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 737:src/keys.c    **** 		OP_DYA  | OP_ADD,
 738:src/keys.c    **** #ifdef DM42
 739:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 740:src/keys.c    **** #endif
 741:src/keys.c    **** 	};
 742:src/keys.c    **** 
 743:src/keys.c    **** 	int lc = keycode_to_linear(c);
 744:src/keys.c    **** 	// print_debug (10, lc);
 745:src/keys.c    **** 	int op = op_map[lc];
 746:src/keys.c    **** 	// print_debug (11, op);
 747:src/keys.c    **** 	
 748:src/keys.c    **** 	// The switch handles all the special cases
 749:src/keys.c    **** #ifdef DM42
 750:src/keys.c    **** 	int op_int;
 751:src/keys.c    **** 	if (UState.intm) {
 752:src/keys.c    **** 	  switch (c) {
 753:src/keys.c    **** 	  case K00:
 754:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 755:src/keys.c    **** 	    if (intltr(10)) {
 756:src/keys.c    **** 	      return op;
 757:src/keys.c    **** 	    }
 758:src/keys.c    **** 	    else {
 759:src/keys.c    **** 	      return check_f_key(0, op);
 760:src/keys.c    **** 	    }
 761:src/keys.c    **** 	  case K01:
 762:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 763:src/keys.c    **** 	    if (intltr(11)) {
 764:src/keys.c    **** 	      return op;
 765:src/keys.c    **** 	    }
 766:src/keys.c    **** 	    else {
 767:src/keys.c    **** 	      return check_f_key(1, op);
 768:src/keys.c    **** 	    }
 769:src/keys.c    **** 	  case K03:
 770:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 771:src/keys.c    **** 	    if (intltr(12)) {
 772:src/keys.c    **** 	      return op_int;
 773:src/keys.c    **** 	    }
 774:src/keys.c    **** 	    else {
 775:src/keys.c    **** 	      return check_f_key(2, op);
 776:src/keys.c    **** 	    }
 777:src/keys.c    **** 	  case K30:
 778:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 779:src/keys.c    **** 	    if (intltr(15)) {
 780:src/keys.c    **** 	      return op_int;
 781:src/keys.c    **** 	    }
 782:src/keys.c    **** 	    else {
 783:src/keys.c    **** 	      return check_f_key(5, op);
 784:src/keys.c    **** 	    }
 785:src/keys.c    **** 	  default:;
 786:src/keys.c    **** 	  }
 787:src/keys.c    **** 	}
 788:src/keys.c    **** #endif   	    
 789:src/keys.c    **** 	// print_debug (12, lc);
 790:src/keys.c    **** 
 791:src/keys.c    **** 	switch (c) {
 792:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccOshYsA.s 			page 17


 793:src/keys.c    **** 	case K00:
 794:src/keys.c    **** 		return check_f_key(0, op);
 795:src/keys.c    **** 	case K01:
 796:src/keys.c    **** 		return check_f_key(1, op);
 797:src/keys.c    **** 	case K03:
 798:src/keys.c    **** 		return check_f_key(2, op);
 799:src/keys.c    **** #else
 800:src/keys.c    **** 	case K00:
 801:src/keys.c    **** 	case K01:
 802:src/keys.c    **** 		if (UState.intm)
 803:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 804:src/keys.c    **** 	case K02:
 805:src/keys.c    **** 	case K03:
 806:src/keys.c    **** 		if (intltr(lc + 10)) {
 807:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 808:src/keys.c    **** 			return op;
 809:src/keys.c    **** 		}
 810:src/keys.c    **** 		return check_f_key(lc, op);
 811:src/keys.c    **** #endif		
 812:src/keys.c    **** 	case K_ARROW:
 813:src/keys.c    **** #ifndef DM42
 814:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 815:src/keys.c    **** 		if (intltr(14))
 816:src/keys.c    **** 			return op;
 817:src/keys.c    **** #else
 818:src/keys.c    **** 		if (UState.intm)
 819:src/keys.c    **** 			return op;
 820:src/keys.c    **** #endif
 821:src/keys.c    **** #endif		
 822:src/keys.c    **** 		if (is_bad_cmdline())
 823:src/keys.c    **** 			return STATE_UNFINISHED;
 824:src/keys.c    **** 		process_cmdline_set_lift();
 825:src/keys.c    **** 		State2.arrow = 1;
 826:src/keys.c    **** #ifdef DM42
 827:src/keys.c    **** 		set_menu (9);
 828:src/keys.c    **** 		display_current_menu ();
 829:src/keys.c    **** 		lcd_refresh ();
 830:src/keys.c    **** #else
 831:src/keys.c    **** 		set_shift(SHIFT_G);
 832:src/keys.c    **** #endif
 833:src/keys.c    **** 		break;
 834:src/keys.c    **** 
 835:src/keys.c    **** 	case K_CMPLX:
 836:src/keys.c    **** #ifndef DM42
 837:src/keys.c    **** 	  if (UState.intm)
 838:src/keys.c    **** 	    return op;
 839:src/keys.c    **** #endif
 840:src/keys.c    **** 		State2.cmplx = 1;
 841:src/keys.c    **** 		break;
 842:src/keys.c    **** 
 843:src/keys.c    **** 	case K24:				// <-
 844:src/keys.c    **** 		if (State2.disp_temp)
 845:src/keys.c    **** 			return STATE_UNFINISHED;
 846:src/keys.c    **** 		if (State2.runmode)
 847:src/keys.c    **** 			return op;
 848:src/keys.c    **** 		return STATE_BACKSPACE;
 849:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 18


 850:src/keys.c    **** 	case K10:				// STO
 851:src/keys.c    **** 	case K11:				// RCL
 852:src/keys.c    **** 	case K30:				// XEQ
 853:src/keys.c    **** 		init_arg((enum rarg)op);
 854:src/keys.c    **** 		break;
 855:src/keys.c    **** 
 856:src/keys.c    **** 	default:
 857:src/keys.c    **** 		return op;			// Keys handled by table
 858:src/keys.c    **** 	}
 859:src/keys.c    **** 	return STATE_UNFINISHED;
 860:src/keys.c    **** }
 861:src/keys.c    **** 
 862:src/keys.c    **** 
 863:src/keys.c    **** /*
 864:src/keys.c    ****  *  Process a key code after f or g shift
 865:src/keys.c    ****  */
 866:src/keys.c    **** // ND: if the last one has worked, this one should too:
 867:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 868:src/keys.c    **** 
 869:src/keys.c    **** #define NO_INT 0xf000
 870:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 871:src/keys.c    **** 		// Row 1
 872:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 873:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 874:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 875:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 876:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 877:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 878:src/keys.c    **** 		// Row 2
 879:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 880:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 881:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 882:src/keys.c    **** 		// Row 3
 883:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 884:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 885:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 886:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 887:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 888:src/keys.c    **** 		// Row 4
 889:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 890:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 891:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 892:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 893:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 894:src/keys.c    **** 		// Row 5
 895:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 896:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 897:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 898:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 899:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 900:src/keys.c    **** 		// Row 6
 901:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 902:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 903:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 904:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 905:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 906:src/keys.c    **** 		// Row 7
ARM GAS  /tmp/ccOshYsA.s 			page 19


 907:src/keys.c    **** #ifdef INFRARED
 908:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 909:src/keys.c    **** #else
 910:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 911:src/keys.c    **** #endif
 912:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 913:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 914:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 915:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 916:src/keys.c    **** #ifdef DM42
 917:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 918:src/keys.c    **** #endif
 919:src/keys.c    **** 	};
 920:src/keys.c    **** 
 921:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 922:src/keys.c    **** 		STATE_UNFINISHED,
 923:src/keys.c    **** 		STATE_UNFINISHED,
 924:src/keys.c    **** 		OP_DYA  | OP_POW,
 925:src/keys.c    **** 		OP_MON  | OP_SQRT
 926:src/keys.c    **** 	};
 927:src/keys.c    **** 
 928:src/keys.c    **** 	enum shifts shift = reset_shift();
 929:src/keys.c    **** 	int lc = keycode_to_linear(c);
 930:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 931:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 932:src/keys.c    **** 	if (no_int)
 933:src/keys.c    **** 		op &= ~NO_INT;
 934:src/keys.c    **** 
 935:src/keys.c    **** 	switch (c) {
 936:src/keys.c    **** 	case K00:
 937:src/keys.c    **** 	  if (! UState.intm) {
 938:src/keys.c    **** 	    State2.hyp = 1;
 939:src/keys.c    **** 	    State2.dot = op;
 940:src/keys.c    **** 	    // State2.cmplx = 0;
 941:src/keys.c    **** 	    return STATE_UNFINISHED;
 942:src/keys.c    **** 	  }
 943:src/keys.c    **** 	  // fall through
 944:src/keys.c    **** 	case K01:
 945:src/keys.c    **** #ifdef DM42
 946:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 947:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 948:src/keys.c    **** 	  }
 949:src/keys.c    **** 	  break;
 950:src/keys.c    **** #endif
 951:src/keys.c    **** #ifndef DM42
 952:src/keys.c    **** 	case K02:
 953:src/keys.c    **** #endif
 954:src/keys.c    **** 	case K03:
 955:src/keys.c    **** #ifdef DM42
 956:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 957:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 958:src/keys.c    **** 		}
 959:src/keys.c    **** 		break;
 960:src/keys.c    **** #else
 961:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 962:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 963:src/keys.c    **** 		}
ARM GAS  /tmp/ccOshYsA.s 			page 20


 964:src/keys.c    **** 		break;
 965:src/keys.c    **** #endif
 966:src/keys.c    **** 	case K20:				// Alpha
 967:src/keys.c    **** 		if (shift == SHIFT_F) {
 968:src/keys.c    **** 			if (is_bad_cmdline())
 969:src/keys.c    **** 				return STATE_UNFINISHED;
 970:src/keys.c    **** 			process_cmdline_set_lift();
 971:src/keys.c    **** 			State2.alphas = 1;
 972:src/keys.c    **** 		}
 973:src/keys.c    **** 		break;
 974:src/keys.c    **** #ifdef DM42
 975:src/keys.c    **** 	case K31:
 976:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 977:src/keys.c    **** 	    return OP_SPEC | OP_D;
 978:src/keys.c    **** 	  }
 979:src/keys.c    **** 	  break;
 980:src/keys.c    **** 	case K30:
 981:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 982:src/keys.c    **** 	    return OP_SPEC | OP_E;
 983:src/keys.c    **** 	  }
 984:src/keys.c    **** 	  break;
 985:src/keys.c    **** #endif
 986:src/keys.c    **** 	case K51:
 987:src/keys.c    **** 		if (is_bad_cmdline())
 988:src/keys.c    **** 			return STATE_UNFINISHED;
 989:src/keys.c    **** 		process_cmdline_set_lift();
 990:src/keys.c    **** 		State2.test = op;
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 992:src/keys.c    **** 
 993:src/keys.c    **** 	case K50:
 994:src/keys.c    **** #ifndef REALBUILD
 995:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 996:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 997:src/keys.c    **** 			return STATE_UNFINISHED;
 998:src/keys.c    **** 		}
 999:src/keys.c    **** #endif
1000:src/keys.c    **** 	case K52:
1001:src/keys.c    **** 	case K53:
1002:src/keys.c    **** 	case K63:
1003:src/keys.c    **** 	case K64:
1004:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1005:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1006:src/keys.c    **** 				init_arg((enum rarg) op);
1007:src/keys.c    **** 			}
1008:src/keys.c    **** 			return STATE_UNFINISHED;
1009:src/keys.c    **** 		}
1010:src/keys.c    **** 		break;
1011:src/keys.c    **** 
1012:src/keys.c    **** 	default:
1013:src/keys.c    **** 		break;
1014:src/keys.c    **** 	}
1015:src/keys.c    **** 	if (no_int && UState.intm)
1016:src/keys.c    **** 		return STATE_UNFINISHED;
1017:src/keys.c    **** 
1018:src/keys.c    **** 	return check_confirm(op);
1019:src/keys.c    **** #undef NO_INT
1020:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 21


1021:src/keys.c    **** 
1022:src/keys.c    **** /*
1023:src/keys.c    ****  *  Process a key code after h shift
1024:src/keys.c    ****  */
1025:src/keys.c    **** // ND: this has to be merged in with the above as there is no longer to be h-shift
1026:src/keys.c    **** static int process_h_shifted(const keycode c) {
1027:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1028:src/keys.c    **** #define NO_INT   0x4000
1029:src/keys.c    **** 	static const unsigned short int op_map[] = {
1030:src/keys.c    **** 		// Row 1
1031:src/keys.c    **** 		_RARG   | RARG_STD,
1032:src/keys.c    **** 		_RARG   | RARG_FIX,
1033:src/keys.c    **** 		_RARG   | RARG_SCI,
1034:src/keys.c    **** 		_RARG   | RARG_ENG,
1035:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1036:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1037:src/keys.c    **** 		// Row 2
1038:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1039:src/keys.c    **** 		_RARG   | RARG_VIEW,
1040:src/keys.c    **** 		OP_NIL  | OP_RUP,
1041:src/keys.c    **** 		// Row 3
1042:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1043:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1044:src/keys.c    **** 		OP_MON  | OP_NOT,
1045:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1046:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1047:src/keys.c    **** 		// Row 4
1048:src/keys.c    **** 		_RARG   | RARG_GTO,
1049:src/keys.c    **** 		OP_DYA  | OP_LAND,
1050:src/keys.c    **** 		OP_DYA  | OP_LOR,
1051:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1052:src/keys.c    **** 		OP_DYA  | OP_MOD,
1053:src/keys.c    **** 		// Row 5
1054:src/keys.c    **** 		OP_MON  | OP_FACT,
1055:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1056:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1057:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1058:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1059:src/keys.c    **** 		// Row 6
1060:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1061:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1062:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1063:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1064:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1065:src/keys.c    **** 		// Row 7
1066:src/keys.c    **** 		OP_NIL | OP_OFF,
1067:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1068:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1069:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1070:src/keys.c    **** #else
1071:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1072:src/keys.c    **** #endif
1073:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1074:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1075:src/keys.c    **** #ifdef DM42
1076:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1077:src/keys.c    **** #endif
ARM GAS  /tmp/ccOshYsA.s 			page 22


1078:src/keys.c    **** 	};
1079:src/keys.c    **** 
1080:src/keys.c    **** 	int lc = keycode_to_linear(c);
1081:src/keys.c    **** 	int op = op_map[lc];
1082:src/keys.c    **** 	reset_shift();
1083:src/keys.c    **** 
1084:src/keys.c    **** 	// The switch handles all the special cases
1085:src/keys.c    **** 	switch (c) {
1086:src/keys.c    **** 	case K62:
1087:src/keys.c    **** 		if (UState.intm)
1088:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1089:src/keys.c    **** 		else
1090:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1091:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1092:src/keys.c    **** #else
1093:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1094:src/keys.c    **** #endif
1095:src/keys.c    **** 		break;
1096:src/keys.c    **** 
1097:src/keys.c    **** 	case K63:					// Program<->Run mode
1098:src/keys.c    **** 		if (is_bad_cmdline())
1099:src/keys.c    **** 			return STATE_UNFINISHED;
1100:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1101:src/keys.c    **** 		process_cmdline_set_lift();
1102:src/keys.c    **** 		update_program_bounds(1);
1103:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1104:src/keys.c    **** 			set_pc(0);
1105:src/keys.c    **** 		break;
1106:src/keys.c    **** 
1107:src/keys.c    **** 	default:
1108:src/keys.c    **** 		break;
1109:src/keys.c    **** 	}
1110:src/keys.c    **** 
1111:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1112:src/keys.c    **** 		if (op & _RARG) {
1113:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1114:src/keys.c    **** 			op = STATE_UNFINISHED;
1115:src/keys.c    **** 		}
1116:src/keys.c    **** 	}
1117:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1118:src/keys.c    **** #undef _RARG
1119:src/keys.c    **** #undef NO_INT
1120:src/keys.c    **** }
1121:src/keys.c    **** 
1122:src/keys.c    **** /*
1123:src/keys.c    ****  *  Process a key code after CPX
1124:src/keys.c    ****  */
1125:src/keys.c    **** // ND: again, change;
1126:src/keys.c    **** static int process_cmplx(const keycode c) {
1127:src/keys.c    **** #define _RARG   0xFF00
1128:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1129:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1130:src/keys.c    **** 
1131:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1132:src/keys.c    **** 		// Row 1
1133:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1134:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
ARM GAS  /tmp/ccOshYsA.s 			page 23


1135:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1136:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1138:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1139:src/keys.c    **** 		// Row 2
1140:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1142:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1143:src/keys.c    **** 		// Row 3
1144:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1145:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1146:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1147:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1148:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** 		// Row 4
1150:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1151:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1152:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1153:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1154:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1155:src/keys.c    **** 		// Row 5
1156:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1157:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1158:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1159:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1160:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1161:src/keys.c    **** 		// Row 6
1162:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1163:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1164:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1165:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1166:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1167:src/keys.c    **** 		// Row 7
1168:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1169:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1170:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1171:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1172:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1173:src/keys.c    **** #else
1174:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1175:src/keys.c    **** #endif
1176:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1177:src/keys.c    **** #ifdef DM42
1178:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1179:src/keys.c    **** #endif
1180:src/keys.c    **** 	};
1181:src/keys.c    **** 
1182:src/keys.c    **** 	enum shifts shift = reset_shift();
1183:src/keys.c    **** 	int lc = keycode_to_linear(c);
1184:src/keys.c    **** 	int op = op_map[lc][shift];
1185:src/keys.c    **** 	State2.cmplx = 0;
1186:src/keys.c    **** 
1187:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1188:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1189:src/keys.c    **** 		return STATE_UNFINISHED;
1190:src/keys.c    **** 	}
1191:src/keys.c    **** 	if (c == K00) {
ARM GAS  /tmp/ccOshYsA.s 			page 24


1192:src/keys.c    **** 		// HYP
1193:src/keys.c    **** 		process_cmdline_set_lift();
1194:src/keys.c    **** 		State2.hyp = 1;
1195:src/keys.c    **** 		State2.dot = op;
1196:src/keys.c    **** 		State2.cmplx = 1;
1197:src/keys.c    **** 		return STATE_UNFINISHED;
1198:src/keys.c    **** 	}
1199:src/keys.c    **** 
1200:src/keys.c    **** 	if (shift != SHIFT_N) {
1201:src/keys.c    **** 		switch (c) {
1202:src/keys.c    **** 		case K_CMPLX:
1203:src/keys.c    **** 			set_shift(shift);
1204:src/keys.c    **** 			break;
1205:src/keys.c    **** 
1206:src/keys.c    **** 		case K51:
1207:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1208:src/keys.c    **** 				if (is_bad_cmdline())
1209:src/keys.c    **** 					return STATE_UNFINISHED;
1210:src/keys.c    **** 				process_cmdline_set_lift();
1211:src/keys.c    **** 				State2.cmplx = 1;
1212:src/keys.c    **** 				State2.test = op;
1213:src/keys.c    **** 			}
1214:src/keys.c    **** 			return STATE_UNFINISHED;
1215:src/keys.c    **** 
1216:src/keys.c    **** 		case K60:
1217:src/keys.c    **** 			init_state();
1218:src/keys.c    **** 			break;
1219:src/keys.c    **** 
1220:src/keys.c    **** 		default:
1221:src/keys.c    **** 			break;
1222:src/keys.c    **** 		}
1223:src/keys.c    **** 	}
1224:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1225:src/keys.c    **** 	return check_confirm(op);
1226:src/keys.c    **** #else
1227:src/keys.c    **** 	return op;
1228:src/keys.c    **** #endif
1229:src/keys.c    **** 
1230:src/keys.c    **** #undef _RARG
1231:src/keys.c    **** #undef CSWAPXZ
1232:src/keys.c    **** #undef CNUM
1233:src/keys.c    **** }
1234:src/keys.c    **** 
1235:src/keys.c    **** 
1236:src/keys.c    **** 
1237:src/keys.c    **** /*
1238:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1239:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1240:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1241:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1242:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1243:src/keys.c    ****  * the ON key are dealt with by our caller.
1244:src/keys.c    ****  */
1245:src/keys.c    **** // ND: change key 1-3 to whatever (14-16?)
1246:src/keys.c    **** // ND: leave for now - may not be needed.
1247:src/keys.c    **** static int process_hyp(const keycode c) {
1248:src/keys.c    **** 	static const unsigned char op_map[][2] = {
ARM GAS  /tmp/ccOshYsA.s 			page 25


1249:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1250:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1251:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1252:src/keys.c    **** 	};
1253:src/keys.c    **** 	int cmplx = State2.cmplx;
1254:src/keys.c    **** 	int f = State2.dot;
1255:src/keys.c    **** 
1256:src/keys.c    **** 	State2.hyp = 0;
1257:src/keys.c    **** 	State2.cmplx = 0;
1258:src/keys.c    **** 	State2.dot = 0;
1259:src/keys.c    **** #ifdef DM42
1260:src/keys.c    **** 	reset_shift();
1261:src/keys.c    **** #endif
1262:src/keys.c    **** 	switch ((int)c) {
1263:src/keys.c    **** 
1264:src/keys.c    **** 	case K01:
1265:src/keys.c    **** 	case K02:
1266:src/keys.c    **** 	case K03:
1267:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1268:src/keys.c    **** 
1269:src/keys.c    **** 	case K_CMPLX:
1270:src/keys.c    **** 		cmplx = ! cmplx;
1271:src/keys.c    **** 		goto stay;
1272:src/keys.c    **** 
1273:src/keys.c    **** 	case K_F: 
1274:src/keys.c    **** 	case K_G:
1275:src/keys.c    **** 		f = (c == K_F);
1276:src/keys.c    **** 		// fall trough
1277:src/keys.c    **** 	stay:
1278:src/keys.c    **** 		// process_cmdline_set_lift();
1279:src/keys.c    **** 		State2.hyp = 1;
1280:src/keys.c    **** 		State2.cmplx = cmplx;
1281:src/keys.c    **** 		State2.dot = f;
1282:src/keys.c    **** 		break;
1283:src/keys.c    **** 
1284:src/keys.c    **** 	default:
1285:src/keys.c    **** 		break;
1286:src/keys.c    **** 	}
1287:src/keys.c    **** 	return STATE_UNFINISHED;
1288:src/keys.c    **** }
1289:src/keys.c    **** 
1290:src/keys.c    **** 
1291:src/keys.c    **** /*
1292:src/keys.c    ****  *  Process a key code after ->
1293:src/keys.c    ****  */
1294:src/keys.c    **** // ND: again, key numbers to be changed:
1295:src/keys.c    **** static int process_arrow(const keycode c) {
1296:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1297:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1298:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1299:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1300:src/keys.c    **** 	};
1301:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1302:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1303:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1304:src/keys.c    **** 	};
1305:src/keys.c    **** 	const int shift = reset_shift();
ARM GAS  /tmp/ccOshYsA.s 			page 26


1306:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1307:src/keys.c    **** 
1308:src/keys.c    **** 	State2.arrow = 0;
1309:src/keys.c    **** 	set_last_menu ();
1310:src/keys.c    **** 	display_current_menu ();
1311:src/keys.c    **** 
1312:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1313:src/keys.c    **** 	
1314:src/keys.c    **** 	if (c >= K10 && c <= K12)
1315:src/keys.c    **** 		return op_map[c - K10][f];
1316:src/keys.c    **** 
1317:src/keys.c    **** 	if (c == K22 || c == K23)
1318:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1319:src/keys.c    **** 
1320:src/keys.c    **** 	return STATE_UNFINISHED;
1321:src/keys.c    **** }
1322:src/keys.c    **** 
1323:src/keys.c    **** 
1324:src/keys.c    **** /* Process a GTO . sequence
1325:src/keys.c    ****  */
1326:src/keys.c    **** static int gtodot_digit(const int n) {
1327:src/keys.c    **** 	const int val = State2.digval * 10 + n;
1328:src/keys.c    **** 	const int lib = nLIB(state_pc());
1329:src/keys.c    **** 
1330:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
1331:src/keys.c    **** 		return val;
1332:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
1333:src/keys.c    **** 		return val;
1334:src/keys.c    **** 	State2.digval = val;
1335:src/keys.c    **** 	return -1;
1336:src/keys.c    **** }
1337:src/keys.c    **** 
1338:src/keys.c    **** static int gtodot_fkey(int n) {
1339:src/keys.c    **** 	const int code = 100 + n;
1340:src/keys.c    **** 	unsigned int pc = state_pc();
1341:src/keys.c    **** 
1342:src/keys.c    **** 	if(isXROM(pc))
1343:src/keys.c    **** 		pc = 1;
1344:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1345:src/keys.c    **** 	if (pc > 0)
1346:src/keys.c    **** 		return pc;
1347:src/keys.c    **** 	return state_pc();
1348:src/keys.c    **** }
1349:src/keys.c    **** 
1350:src/keys.c    **** // ND: This one has keycodes in
1351:src/keys.c    **** static int process_gtodot(const keycode c) {
1352:src/keys.c    **** 	int pc = -1;
1353:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1354:src/keys.c    **** 
1355:src/keys.c    **** 	if (rawpc <= 9) {
1356:src/keys.c    **** 		// Digit 0 - 9
1357:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1358:src/keys.c    **** 	}
1359:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1360:src/keys.c    **** 		// A - D
1361:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1362:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/ccOshYsA.s 			page 27


1363:src/keys.c    **** 	}
1364:src/keys.c    **** 	else if (c == K62) {
1365:src/keys.c    **** 		// .
1366:src/keys.c    **** 		rawpc = ProgSize;
1367:src/keys.c    **** 		goto fin;
1368:src/keys.c    **** 	}
1369:src/keys.c    **** 	else if (c == K20) {
1370:src/keys.c    **** 		// ENTER - short circuit processing
1371:src/keys.c    **** 		pc = State2.digval;
1372:src/keys.c    **** 	}
1373:src/keys.c    **** 	else if (c == K24) {
1374:src/keys.c    **** 		// backspace
1375:src/keys.c    **** 		if (State2.numdigit == 0) {
1376:src/keys.c    **** 			goto fin2;
1377:src/keys.c    **** 		} else {
1378:src/keys.c    **** 			State2.numdigit--;
1379:src/keys.c    **** 			State2.digval /= 10;
1380:src/keys.c    **** 		}
1381:src/keys.c    **** 	}
1382:src/keys.c    **** 	else if (c == K_UP) {
1383:src/keys.c    **** 		// up
1384:src/keys.c    **** 		rawpc = state_pc();
1385:src/keys.c    **** 		if (rawpc == 1)
1386:src/keys.c    **** 			rawpc = 0;
1387:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1388:src/keys.c    **** 		update_program_bounds(1);
1389:src/keys.c    **** 		rawpc = ProgBegin;
1390:src/keys.c    **** 		goto fin;
1391:src/keys.c    **** 	}
1392:src/keys.c    **** 	else if (c == K_DOWN) {
1393:src/keys.c    **** 		// down
1394:src/keys.c    **** 		update_program_bounds(1);
1395:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1396:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1397:src/keys.c    **** 			rawpc = 1;
1398:src/keys.c    **** 		goto fin;
1399:src/keys.c    **** 	}
1400:src/keys.c    **** 	if (pc >= 0) {
1401:src/keys.c    **** 		rawpc = find_user_pc(pc);
1402:src/keys.c    **** fin:		set_pc(rawpc);
1403:src/keys.c    **** fin2:		State2.gtodot = 0;
1404:src/keys.c    **** 		State2.digval = 0;
1405:src/keys.c    **** 		State2.numdigit = 0;
1406:src/keys.c    **** 	}
1407:src/keys.c    **** 	return STATE_UNFINISHED;
1408:src/keys.c    **** }
1409:src/keys.c    **** 
1410:src/keys.c    **** 
1411:src/keys.c    **** /* Process a keystroke in alpha mode
1412:src/keys.c    ****  */
1413:src/keys.c    **** static int process_alpha(const keycode c) {
1414:src/keys.c    **** 	const enum shifts shift = reset_shift();
1415:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1416:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
1417:src/keys.c    ****         int op = STATE_UNFINISHED;
1418:src/keys.c    **** 	State2.alpha_pos = 0;
1419:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 28


1420:src/keys.c    **** 	switch (c) {
1421:src/keys.c    **** 	case K10:	// STO
1422:src/keys.c    **** 		if (shift == SHIFT_F) {
1423:src/keys.c    **** 			init_arg(RARG_ASTO);
1424:src/keys.c    **** 			return STATE_UNFINISHED;
1425:src/keys.c    **** 		}
1426:src/keys.c    **** 		break;
1427:src/keys.c    **** 
1428:src/keys.c    **** 	case K11:	// RCL - maybe view
1429:src/keys.c    **** 		if (shift == SHIFT_F) {
1430:src/keys.c    **** 			init_arg(RARG_ARCL);
1431:src/keys.c    **** 			return STATE_UNFINISHED;
1432:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1433:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1434:src/keys.c    **** 			return STATE_UNFINISHED;
1435:src/keys.c    **** 		}
1436:src/keys.c    **** 		break;
1437:src/keys.c    **** 
1438:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1439:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1440:src/keys.c    **** 			break;
1441:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1442:src/keys.c    **** 			State2.multi = 1;
1443:src/keys.c    **** 			State2.numdigit = 0;
1444:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1445:src/keys.c    **** 			return STATE_UNFINISHED;
1446:src/keys.c    **** 		}
1447:src/keys.c    **** 		State2.alphas = 0;
1448:src/keys.c    **** 		State2.alphashift = 0;
1449:src/keys.c    **** 		return op;
1450:src/keys.c    **** 
1451:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1452:src/keys.c    **** 		if (shift == SHIFT_N)
1453:src/keys.c    **** 			return STATE_BACKSPACE;
1454:src/keys.c    **** 		if (shift == SHIFT_H)
1455:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1456:src/keys.c    **** 		break;
1457:src/keys.c    **** 
1458:src/keys.c    **** 	case K_UP:
1459:src/keys.c    **** 		if (shift == SHIFT_N) {
1460:src/keys.c    **** 			if ( State2.runmode ) {
1461:src/keys.c    **** 				// Alpha scroll left
1462:src/keys.c    **** 				n = alpha_pos + 1;
1463:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1464:src/keys.c    **** 				return STATE_UNFINISHED;
1465:src/keys.c    **** 			}
1466:src/keys.c    **** 			return STATE_BST;
1467:src/keys.c    **** 		}
1468:src/keys.c    **** 		break;
1469:src/keys.c    **** 
1470:src/keys.c    **** 	case K_DOWN:
1471:src/keys.c    **** 		if (shift == SHIFT_N) {
1472:src/keys.c    **** 			if ( State2.runmode ) {
1473:src/keys.c    **** 				// Alpha scroll right
1474:src/keys.c    **** 				if (alpha_pos > 0)
1475:src/keys.c    **** 					State2.alpha_pos = alpha_pos-1;
1476:src/keys.c    **** 				return STATE_UNFINISHED;
ARM GAS  /tmp/ccOshYsA.s 			page 29


1477:src/keys.c    **** 			}
1478:src/keys.c    **** 			return STATE_SST;
1479:src/keys.c    **** 		}
1480:src/keys.c    **** 		break;
1481:src/keys.c    **** 
1482:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1483:src/keys.c    **** 		if (shift == SHIFT_F)
1484:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1485:src/keys.c    **** 		else if (shift == SHIFT_H)
1486:src/keys.c    **** 			return OP_NIL | OP_OFF;
1487:src/keys.c    **** 		else if (shift == SHIFT_N)
1488:src/keys.c    **** 			init_state();
1489:src/keys.c    **** 		return STATE_UNFINISHED;
1490:src/keys.c    **** 
1491:src/keys.c    **** 	case K63:
1492:src/keys.c    **** 		if (shift == SHIFT_F)
1493:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1494:src/keys.c    **** 		break;
1495:src/keys.c    **** 
1496:src/keys.c    **** 	default:
1497:src/keys.c    **** 		break;
1498:src/keys.c    **** 	}
1499:src/keys.c    **** 
1500:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1501:src/keys.c    **** 	if (ch == 0)
1502:src/keys.c    **** 		return STATE_UNFINISHED;
1503:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1504:src/keys.c    **** }
1505:src/keys.c    **** 
1506:src/keys.c    **** /*
1507:src/keys.c    ****  *  Code to handle all commands with arguments
1508:src/keys.c    ****  */
1509:src/keys.c    **** static void reset_arg(void) {
1510:src/keys.c    **** 	init_arg((enum rarg) 0);
1511:src/keys.c    **** 	State2.rarg = 0;
1512:src/keys.c    **** }
1513:src/keys.c    **** 
1514:src/keys.c    **** static int arg_eval(unsigned int val) {
1515:src/keys.c    **** 	const unsigned int base = CmdBase;
1516:src/keys.c    **** 	int r = RARG(base, val 
1517:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1518:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1519:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1520:src/keys.c    **** 
1521:src/keys.c    **** 	if (! State2.ind) {
1522:src/keys.c    **** 		/*
1523:src/keys.c    **** 		 *  Central argument checking for some commands
1524:src/keys.c    **** 		 */
1525:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1526:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1527:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1528:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1529:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1530:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1531:src/keys.c    **** 			if ( val == 0 )
1532:src/keys.c    **** 				return STATE_UNFINISHED;
1533:src/keys.c    **** 			r = RARG(base, val);
ARM GAS  /tmp/ccOshYsA.s 			page 30


1534:src/keys.c    **** 		}
1535:src/keys.c    **** #else
1536:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1537:src/keys.c    **** 			// Disallow odd complex register > 98
1538:src/keys.c    **** 			return STATE_UNFINISHED;
1539:src/keys.c    **** #endif
1540:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1541:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1542:src/keys.c    **** 			return STATE_UNFINISHED;
1543:src/keys.c    **** 	}
1544:src/keys.c    **** 	// Build op-code
1545:src/keys.c    **** 	reset_arg();
1546:src/keys.c    **** 	return r;
1547:src/keys.c    **** }
1548:src/keys.c    **** 
1549:src/keys.c    **** static int arg_digit(int n) {
1550:src/keys.c    **** 	int lim;
1551:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1552:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1553:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1554:src/keys.c    **** #else
1555:src/keys.c    **** 	const unsigned int base = CmdBase;
1556:src/keys.c    **** #endif
1557:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1558:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1559:src/keys.c    **** 	
1560:src/keys.c    **** 	if (State2.local) {
1561:src/keys.c    **** 		// Handle local registers and flags
1562:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1563:src/keys.c    **** 		if (State2.runmode) {
1564:src/keys.c    **** 			if (LocalRegs == 0)
1565:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1566:src/keys.c    **** 			if (is_reg) {
1567:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1568:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1569:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1570:src/keys.c    **** 			}
1571:src/keys.c    **** 		}
1572:src/keys.c    **** 	}
1573:src/keys.c    **** 	else if (is_reg)						// normal register
1574:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1575:src/keys.c    **** 	else {
1576:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1577:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1578:src/keys.c    **** 			lim = RARG_IND - 1;
1579:src/keys.c    **** 	}
1580:src/keys.c    **** 	if ((int) val > lim)
1581:src/keys.c    **** 		return STATE_UNFINISHED;
1582:src/keys.c    **** 
1583:src/keys.c    **** 	State2.digval = val;
1584:src/keys.c    **** 	++State2.numdigit;
1585:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1586:src/keys.c    **** 		int result = arg_eval(val);
1587:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1588:src/keys.c    **** 			--State2.numdigit;
1589:src/keys.c    **** 			State2.digval /= 10;
1590:src/keys.c    **** 		}
ARM GAS  /tmp/ccOshYsA.s 			page 31


1591:src/keys.c    **** 		return result;
1592:src/keys.c    **** 	}
1593:src/keys.c    **** 	return STATE_UNFINISHED;
1594:src/keys.c    **** }
1595:src/keys.c    **** 
1596:src/keys.c    **** static int arg_fkey(int n) {
1597:src/keys.c    **** 	const unsigned int b = CmdBase;
1598:src/keys.c    **** 
1599:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1600:src/keys.c    **** 	{
1601:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1602:src/keys.c    **** 			return STATE_UNFINISHED;
1603:src/keys.c    **** 		if (argcmds[b].lim < 100)
1604:src/keys.c    **** 			return STATE_UNFINISHED;
1605:src/keys.c    **** 		return arg_eval(n + 100);
1606:src/keys.c    **** 	}
1607:src/keys.c    **** 	return STATE_UNFINISHED;
1608:src/keys.c    **** }
1609:src/keys.c    **** 
1610:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1611:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1612:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1613:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1614:src/keys.c    **** #else
1615:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1616:src/keys.c    **** #endif
1617:src/keys.c    **** }
1618:src/keys.c    **** 
1619:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1620:src/keys.c    **** 	unsigned int b = CmdBase;
1621:src/keys.c    **** 
1622:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1623:src/keys.c    **** 		CmdBase += n;
1624:src/keys.c    **** 		return 1;
1625:src/keys.c    **** 	}
1626:src/keys.c    **** 	/* And we can turn off the operation too */
1627:src/keys.c    **** 	if (b >= n) {
1628:src/keys.c    **** 		b -= n;
1629:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1630:src/keys.c    **** 			CmdBase = b;
1631:src/keys.c    **** 			return 1;
1632:src/keys.c    **** 		}
1633:src/keys.c    **** 	}
1634:src/keys.c    **** 	return 0;
1635:src/keys.c    **** }
1636:src/keys.c    **** 
1637:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1638:src/keys.c    **** 
1639:src/keys.c    **** 	if (State2.numdigit == 0) {
1640:src/keys.c    **** 		// Only valid at beginning of entry
1641:src/keys.c    **** 		if (State2.dot || State2.local) {
1642:src/keys.c    **** 			// '..' or ENTER '.' = X
1643:src/keys.c    **** 			State2.local = 0;
1644:src/keys.c    **** 			return arg_eval(regX_idx);
1645:src/keys.c    **** 		}
1646:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1647:src/keys.c    **** 			// local register or flag select
ARM GAS  /tmp/ccOshYsA.s 			page 32


1648:src/keys.c    **** 			State2.local = 1;
1649:src/keys.c    **** 		}
1650:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1651:src/keys.c    **** 			// Special GTO . sequence
1652:src/keys.c    **** 			if (! State2.ind) {
1653:src/keys.c    **** 				State2.gtodot = 1;
1654:src/keys.c    **** 				reset_arg();
1655:src/keys.c    **** 			}
1656:src/keys.c    **** 		}
1657:src/keys.c    **** 	}
1658:src/keys.c    **** 	return STATE_UNFINISHED;
1659:src/keys.c    **** }
1660:src/keys.c    **** 
1661:src/keys.c    **** static int process_arg_shuffle(int r) {
1662:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1663:src/keys.c    **** 	if (State2.numdigit < 4)
1664:src/keys.c    **** 		return STATE_UNFINISHED;
1665:src/keys.c    **** 	return arg_eval(State2.digval);
1666:src/keys.c    **** }
1667:src/keys.c    **** 
1668:src/keys.c    **** 
1669:src/keys.c    **** static int process_arg(const keycode c) {
1670:src/keys.c    **** 	unsigned int base = CmdBase;
1671:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1672:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1673:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1674:src/keys.c    **** 	const enum shifts shift = reset_shift();
1675:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1676:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1677:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1678:src/keys.c    **** 
1679:src/keys.c    **** 	n &= ~NO_SHORT;
1680:src/keys.c    **** 	if (base >= NUM_RARG) {
1681:src/keys.c    **** 		reset_arg();
1682:src/keys.c    **** 		return STATE_UNFINISHED;
1683:src/keys.c    **** 	}
1684:src/keys.c    **** #ifdef DM42
1685:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1686:src/keys.c    **** 	  switch (n) {
1687:src/keys.c    **** 	  case regX_idx:
1688:src/keys.c    **** 	    return arg_digit(1);
1689:src/keys.c    **** 	  case regY_idx:
1690:src/keys.c    **** 	    return arg_digit(2);
1691:src/keys.c    **** 	  case regZ_idx:
1692:src/keys.c    **** 	    return arg_digit(3);
1693:src/keys.c    **** 	  case regT_idx:
1694:src/keys.c    **** 	    return arg_digit(4);
1695:src/keys.c    **** 	  case 5:
1696:src/keys.c    **** 	  case 6:
1697:src/keys.c    **** 	  case 7:
1698:src/keys.c    **** 	  case 8:
1699:src/keys.c    **** 	  case 9:
1700:src/keys.c    **** 	  case 0:
1701:src/keys.c    **** 	    return arg_digit(n);
1702:src/keys.c    **** 	  }
1703:src/keys.c    **** 	}
1704:src/keys.c    **** #else
ARM GAS  /tmp/ccOshYsA.s 			page 33


1705:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1706:src/keys.c    **** 		return arg_digit(n);
1707:src/keys.c    **** #endif	
1708:src/keys.c    **** 	if (shorthand)
1709:src/keys.c    **** 		// row column shorthand addressing
1710:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1711:src/keys.c    **** 
1712:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1713:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1714:src/keys.c    **** 		switch ((int)c) {
1715:src/keys.c    **** 		case K_UP:	// up arrow
1716:src/keys.c    **** 			if (--base < RARG_FIX)
1717:src/keys.c    **** 				base = RARG_SIG0;
1718:src/keys.c    **** 			break;
1719:src/keys.c    **** 
1720:src/keys.c    **** 		case K_DOWN:	// down arrow
1721:src/keys.c    **** 		case K01:	// B
1722:src/keys.c    **** 			if (++base > RARG_SIG0)
1723:src/keys.c    **** 				base = RARG_FIX;
1724:src/keys.c    **** 			break;
1725:src/keys.c    **** 		}
1726:src/keys.c    **** 		CmdBase = base;
1727:src/keys.c    **** 	}
1728:src/keys.c    **** #endif
1729:src/keys.c    **** 	/*
1730:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1731:src/keys.c    **** 	 *  Handle the rest here.
1732:src/keys.c    **** 	 */
1733:src/keys.c    **** 	switch ((int)c) {
1734:src/keys.c    **** 	case K_F:
1735:src/keys.c    **** 		if (label_addressing)
1736:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1737:src/keys.c    **** 		break;
1738:src/keys.c    **** 
1739:src/keys.c    **** 	case K_ARROW:		// arrow
1740:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1741:src/keys.c    **** 			State2.ind = ! State2.ind;
1742:src/keys.c    **** 			if (! stack_reg)
1743:src/keys.c    **** 				State2.dot = 0;
1744:src/keys.c    **** 		}
1745:src/keys.c    **** 		break;
1746:src/keys.c    **** 
1747:src/keys.c    **** 	case K_CMPLX:
1748:src/keys.c    **** 		if (State2.ind || State2.dot)
1749:src/keys.c    **** 			break;
1750:src/keys.c    **** 		if (base == RARG_STO)
1751:src/keys.c    **** 			CmdBase = RARG_STOM;
1752:src/keys.c    **** 		else if (base == RARG_RCL)
1753:src/keys.c    **** 			CmdBase = RARG_RCLM;
1754:src/keys.c    **** 		break;
1755:src/keys.c    **** #ifdef DM42
1756:src/keys.c    **** 	case K41:       // T
1757:src/keys.c    **** 	  if (State2.shuffle)
1758:src/keys.c    **** 	    return process_arg_shuffle(3);
1759:src/keys.c    **** 	case K51:       // X
1760:src/keys.c    **** 	  if (State2.shuffle)
1761:src/keys.c    **** 	    return process_arg_shuffle(0);
ARM GAS  /tmp/ccOshYsA.s 			page 34


1762:src/keys.c    **** 	case K52:	// Y
1763:src/keys.c    **** 	  if (State2.shuffle)
1764:src/keys.c    **** 	    return process_arg_shuffle(1);
1765:src/keys.c    **** 	case K53:       // Z
1766:src/keys.c    **** 	  if (State2.shuffle)
1767:src/keys.c    **** 	    return process_arg_shuffle(2);
1768:src/keys.c    **** #else
1769:src/keys.c    **** 	case K63:	// Y
1770:src/keys.c    **** 	  if (State2.shuffle)
1771:src/keys.c    **** 	    return process_arg_shuffle(1);
1772:src/keys.c    **** #endif
1773:src/keys.c    **** 	case K00:	// A
1774:src/keys.c    **** 	case K01:	// B
1775:src/keys.c    **** 	case K02:	// C
1776:src/keys.c    **** 	case K03:	// D
1777:src/keys.c    **** #ifdef DM42
1778:src/keys.c    **** 	case K12:	// I (lastY)
1779:src/keys.c    **** 	case K13:	// J
1780:src/keys.c    **** 	case K14:	// K
1781:src/keys.c    **** 	case K15:	// L (lastX)
1782:src/keys.c    **** #else
1783:src/keys.c    **** 	case K12:	// I (lastY)
1784:src/keys.c    **** 	case K21:	// J
1785:src/keys.c    **** 	case K22:	// K
1786:src/keys.c    **** 	case K23:	// L (lastX)
1787:src/keys.c    **** #endif
1788:src/keys.c    **** 	  if (State2.dot || stack_reg)
1789:src/keys.c    **** 			return arg_eval(n);
1790:src/keys.c    **** 		if ( c <= K03 )
1791:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1792:src/keys.c    **** 		break;
1793:src/keys.c    **** #ifdef DM42
1794:src/keys.c    **** 	case K62:	// '.'
1795:src/keys.c    **** 		return process_arg_dot(base);
1796:src/keys.c    **** 
1797:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1798:src/keys.c    **** 	case K64:		// plus
1799:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1800:src/keys.c    **** 			return arg_eval(n);
1801:src/keys.c    **** 		break;
1802:src/keys.c    **** 	case K54:               // minus
1803:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1804:src/keys.c    **** 			reset_arg();
1805:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1806:src/keys.c    **** 		}
1807:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1808:src/keys.c    **** 		break;
1809:src/keys.c    **** 	case K44:		// multiply
1810:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1811:src/keys.c    **** 			return arg_eval(n);
1812:src/keys.c    **** 		break;
1813:src/keys.c    **** 	case K34:
1814:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1815:src/keys.c    **** 		break;
1816:src/keys.c    **** #else
1817:src/keys.c    **** 	case K62:	// X, '.'
1818:src/keys.c    **** 		if (State2.shuffle)
ARM GAS  /tmp/ccOshYsA.s 			page 35


1819:src/keys.c    **** 			return process_arg_shuffle(0);
1820:src/keys.c    **** 		return process_arg_dot(base);
1821:src/keys.c    **** 
1822:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1823:src/keys.c    **** 	case K64:		// Z register
1824:src/keys.c    **** 		if (State2.shuffle)
1825:src/keys.c    **** 			return process_arg_shuffle(2);
1826:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1827:src/keys.c    **** 			return arg_eval(n);
1828:src/keys.c    **** 		break;
1829:src/keys.c    **** 
1830:src/keys.c    **** 	case K54:
1831:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1832:src/keys.c    **** 			reset_arg();
1833:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1834:src/keys.c    **** 		}
1835:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1836:src/keys.c    **** 		break;
1837:src/keys.c    **** 
1838:src/keys.c    **** 	case K44:		// T register
1839:src/keys.c    **** 		if (State2.shuffle)
1840:src/keys.c    **** 			return process_arg_shuffle(3);
1841:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1842:src/keys.c    **** 			return arg_eval(n);
1843:src/keys.c    **** 		break;
1844:src/keys.c    **** 
1845:src/keys.c    **** 	case K34:
1846:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1847:src/keys.c    **** 		break;
1848:src/keys.c    **** #endif
1849:src/keys.c    **** 	case K_UP:
1850:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1851:src/keys.c    **** 		break;
1852:src/keys.c    **** 
1853:src/keys.c    **** 	case K_DOWN:
1854:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1855:src/keys.c    **** 		break;
1856:src/keys.c    **** 
1857:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1858:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1859:src/keys.c    **** 			if (argcmds[base].label) {
1860:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1861:src/keys.c    **** 				State2.multi = 1;
1862:src/keys.c    **** 				State2.alphashift = 0;
1863:src/keys.c    **** 				State2.rarg = 0;
1864:src/keys.c    **** 			} else if (base == RARG_SCI) {
1865:src/keys.c    **** 				reset_arg();
1866:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1867:src/keys.c    **** 			} else if (base == RARG_ENG) {
1868:src/keys.c    **** 				reset_arg();
1869:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1870:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1871:src/keys.c    **** 				State2.dot = 1;
1872:src/keys.c    **** 		} else if (State2.numdigit > 0)
1873:src/keys.c    **** 			return arg_eval(State2.digval);
1874:src/keys.c    **** 		else if (stack_reg)
1875:src/keys.c    **** 			State2.dot = 1 - State2.dot;
ARM GAS  /tmp/ccOshYsA.s 			page 36


1876:src/keys.c    **** 		break;
1877:src/keys.c    **** 
1878:src/keys.c    **** 	case K24:	// <-
1879:src/keys.c    **** 		if (State2.numdigit == 0) {
1880:src/keys.c    **** 			if (State2.dot)
1881:src/keys.c    **** 				State2.dot = 0;
1882:src/keys.c    **** 			else if (State2.local)
1883:src/keys.c    **** 				State2.local = 0;
1884:src/keys.c    **** 			else if (State2.ind)
1885:src/keys.c    **** 				State2.ind = 0;
1886:src/keys.c    **** 			else
1887:src/keys.c    **** 				goto reset;
1888:src/keys.c    **** 		}
1889:src/keys.c    **** 		else {
1890:src/keys.c    **** 			--State2.numdigit;
1891:src/keys.c    **** 			if (State2.shuffle)
1892:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1893:src/keys.c    **** 			else
1894:src/keys.c    **** 				State2.digval /= 10;
1895:src/keys.c    **** 		}
1896:src/keys.c    **** 		break;
1897:src/keys.c    **** 
1898:src/keys.c    **** 	case K60:
1899:src/keys.c    **** 	reset:
1900:src/keys.c    **** 		reset_arg();
1901:src/keys.c    **** 	default:
1902:src/keys.c    **** 		break;
1903:src/keys.c    **** 	}
1904:src/keys.c    **** 	return STATE_UNFINISHED;
1905:src/keys.c    **** }
1906:src/keys.c    **** 
1907:src/keys.c    **** 
1908:src/keys.c    **** /*
1909:src/keys.c    ****  *  Process arguments to the diverse test commands
1910:src/keys.c    ****  */
1911:src/keys.c    **** static int process_test(const keycode c) {
1912:src/keys.c    **** 	int r = State2.test;
1913:src/keys.c    **** 	int cmpx = State2.cmplx;
1914:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1915:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1916:src/keys.c    **** 
1917:src/keys.c    **** 	State2.test = TST_NONE;
1918:src/keys.c    **** 	State2.cmplx = 0;
1919:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1920:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1921:src/keys.c    **** 		// Lettered register
1922:src/keys.c    **** 		if (cmpx && (n & 1)) {
1923:src/keys.c    **** 			if (n == regI_idx)
1924:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1925:src/keys.c    **** 			// Disallow odd complex registers > A
1926:src/keys.c    **** 			goto again;
1927:src/keys.c    **** 		}
1928:src/keys.c    **** 		// Return the command with the register completed
1929:src/keys.c    **** 		return RARG(base, n);
1930:src/keys.c    **** 	}
1931:src/keys.c    **** 	else if ( n == 0 ) {
1932:src/keys.c    **** 		// Special 0
ARM GAS  /tmp/ccOshYsA.s 			page 37


1933:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1934:src/keys.c    **** 	}
1935:src/keys.c    **** 	else if ( n == 1 ) {
1936:src/keys.c    **** 		// Special 1
1937:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1938:src/keys.c    **** 	}
1939:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1940:src/keys.c    **** 		// digit 2..9, -> or .
1941:src/keys.c    **** 		init_arg((enum rarg)base);
1942:src/keys.c    **** 		return process_arg(c);
1943:src/keys.c    **** 	}
1944:src/keys.c    **** 
1945:src/keys.c    **** 	switch (c) {
1946:src/keys.c    **** 	case K11:					// tests vs register
1947:src/keys.c    **** 	case K20:
1948:src/keys.c    **** 		init_arg((enum rarg)base);
1949:src/keys.c    **** 		return STATE_UNFINISHED;
1950:src/keys.c    **** 
1951:src/keys.c    **** 	//case K60:
1952:src/keys.c    **** 	case K24:
1953:src/keys.c    **** 		return STATE_UNFINISHED;
1954:src/keys.c    **** 
1955:src/keys.c    **** 	default:
1956:src/keys.c    **** 		break;
1957:src/keys.c    **** 	}
1958:src/keys.c    **** again:
1959:src/keys.c    **** 	State2.test = r;
1960:src/keys.c    **** 	State2.cmplx = cmpx;
1961:src/keys.c    **** 	return STATE_UNFINISHED;
1962:src/keys.c    **** }
1963:src/keys.c    **** 
1964:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1965:src/keys.c    **** /*
1966:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1967:src/keys.c    ****  */
1968:src/keys.c    **** #define USER_CAT_MAX 100
1969:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1970:src/keys.c    **** 
1971:src/keys.c    **** static int build_user_cat(void)
1972:src/keys.c    **** {
1973:src/keys.c    **** 	// find the label 'CAT'
1974:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1975:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1976:src/keys.c    **** 	int len = 0;
1977:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1978:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1979:src/keys.c    **** 		char buf1[16];
1980:src/keys.c    **** 		int i;
1981:src/keys.c    **** 		s_opcode op;
1982:src/keys.c    **** 	next:
1983:src/keys.c    **** 		pc = do_inc(pc, 0);
1984:src/keys.c    **** 		op = (s_opcode) getprog(pc);
1985:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
1986:src/keys.c    **** 			break;
1987:src/keys.c    **** 		if (isDBL(op))
1988:src/keys.c    **** 			continue;
1989:src/keys.c    **** 		if (isRARG(op)) {
ARM GAS  /tmp/ccOshYsA.s 			page 38


1990:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
1991:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
1992:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
1993:src/keys.c    **** 				op = op & 0xff00;	// remove argument
1994:src/keys.c    **** 		}
1995:src/keys.c    **** 		catcmd(op, buf1);
1996:src/keys.c    **** 		for (i = 0; i < len; ++i) {
1997:src/keys.c    **** 			// Find a position in the table to insert the new entry
1998:src/keys.c    **** 			char buf2[16];
1999:src/keys.c    **** 			const char *p, *q;
2000:src/keys.c    **** 			int diff = 0;
2001:src/keys.c    **** 			if (op == UserCat[i]) {
2002:src/keys.c    **** 				// duplicate entry - ignore
2003:src/keys.c    **** 				goto next;
2004:src/keys.c    **** 			}
2005:src/keys.c    **** 			p = buf1;
2006:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2007:src/keys.c    **** 				++p;
2008:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2009:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2010:src/keys.c    **** 				++q;
2011:src/keys.c    **** 			diff = 0;
2012:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2013:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2014:src/keys.c    **** 			}
2015:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2016:src/keys.c    **** 				// identical according to sort order, insert after
2017:src/keys.c    **** 				++i;
2018:src/keys.c    **** 				break;
2019:src/keys.c    **** 			}
2020:src/keys.c    **** 			if (diff > 0) {
2021:src/keys.c    **** 				// insert new entry before the one found because this is greater
2022:src/keys.c    **** 				break;
2023:src/keys.c    **** 			}
2024:src/keys.c    **** 		}
2025:src/keys.c    **** 		if (i < len) {
2026:src/keys.c    **** 			// Make room
2027:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2028:src/keys.c    **** 		}
2029:src/keys.c    **** 		UserCat[i] = op;
2030:src/keys.c    **** 		++len;
2031:src/keys.c    **** 	}
2032:src/keys.c    **** 	// return the number of entries
2033:src/keys.c    **** 	return len;
2034:src/keys.c    **** }
2035:src/keys.c    **** #endif
2036:src/keys.c    **** 
2037:src/keys.c    **** /* Return the number of entries in the current catalogue.
2038:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2039:src/keys.c    ****  * likely be the most space efficient method.
2040:src/keys.c    ****  */
2041:src/keys.c    **** int current_catalogue_max(void) {
2042:src/keys.c    **** 	// A quick table of catalogue sizes
2043:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2044:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2045:src/keys.c    **** 	{
2046:src/keys.c    **** 		0, // NONE
ARM GAS  /tmp/ccOshYsA.s 			page 39


2047:src/keys.c    **** 		SIZE_catalogue,
2048:src/keys.c    **** 		SIZE_cplx_catalogue,
2049:src/keys.c    **** 		SIZE_stats_catalogue,
2050:src/keys.c    **** 		SIZE_prob_catalogue,
2051:src/keys.c    **** 		SIZE_int_catalogue,
2052:src/keys.c    **** 		SIZE_prog_catalogue,
2053:src/keys.c    **** 		SIZE_program_xfcn,
2054:src/keys.c    **** 		SIZE_test_catalogue,
2055:src/keys.c    **** 		SIZE_mode_catalogue,
2056:src/keys.c    **** 		SIZE_alpha_catalogue,
2057:src/keys.c    **** 		SIZE_alpha_symbols,
2058:src/keys.c    **** 		SIZE_alpha_compares,
2059:src/keys.c    **** 		SIZE_alpha_arrows,
2060:src/keys.c    **** 		SIZE_alpha_letters,
2061:src/keys.c    **** 		SIZE_alpha_subscripts,
2062:src/keys.c    **** 		NUM_CONSTS_CAT,
2063:src/keys.c    **** 		NUM_CONSTS_CAT,
2064:src/keys.c    **** 		SIZE_conv_catalogue,
2065:src/keys.c    **** 		SIZE_sums_catalogue,
2066:src/keys.c    **** 		SIZE_matrix_catalogue,
2067:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2068:src/keys.c    **** 		SIZE_internal_catalogue,
2069:src/keys.c    **** #endif
2070:src/keys.c    **** 	};
2071:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2072:src/keys.c    **** 	const int cat = State2.catalogue;
2073:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2074:src/keys.c    **** #else
2075:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2076:src/keys.c    **** #endif
2077:src/keys.c    **** }
2078:src/keys.c    **** 
2079:src/keys.c    **** 
2080:src/keys.c    **** /* Look up the character position in the given byte array and
2081:src/keys.c    ****  * build the alpha op-code for it.
2082:src/keys.c    ****  */
2083:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2084:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2085:src/keys.c    **** }
2086:src/keys.c    **** 
2087:src/keys.c    **** 
2088:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2089:src/keys.c    ****  */
2090:src/keys.c    **** opcode current_catalogue(int n) {
2091:src/keys.c    **** 	// A quick table of catalogue tables
2092:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2093:src/keys.c    **** 	static const void *catalogues[] =
2094:src/keys.c    **** 	{
2095:src/keys.c    **** 		NULL, // NONE
2096:src/keys.c    **** 		catalogue,
2097:src/keys.c    **** 		cplx_catalogue,
2098:src/keys.c    **** 		stats_catalogue,
2099:src/keys.c    **** 		prob_catalogue,
2100:src/keys.c    **** 		int_catalogue,
2101:src/keys.c    **** 		prog_catalogue,
2102:src/keys.c    **** 		program_xfcn,
2103:src/keys.c    **** 		test_catalogue,
ARM GAS  /tmp/ccOshYsA.s 			page 40


2104:src/keys.c    **** 		mode_catalogue,
2105:src/keys.c    **** 		alpha_catalogue,
2106:src/keys.c    **** 		alpha_symbols,
2107:src/keys.c    **** 		alpha_compares,
2108:src/keys.c    **** 		alpha_arrows,
2109:src/keys.c    **** 		alpha_letters,
2110:src/keys.c    **** 		alpha_subscripts,
2111:src/keys.c    **** 		NULL,
2112:src/keys.c    **** 		NULL,
2113:src/keys.c    **** 		NULL, //CONV
2114:src/keys.c    **** 		sums_catalogue,
2115:src/keys.c    **** 		matrix_catalogue,
2116:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2117:src/keys.c    **** 		internal_catalogue,
2118:src/keys.c    **** #endif
2119:src/keys.c    **** 	};
2120:src/keys.c    **** 	const unsigned char *cat;
2121:src/keys.c    **** 	unsigned int c = State2.catalogue;
2122:src/keys.c    **** 	int m, i;
2123:src/keys.c    **** 	unsigned p, q;
2124:src/keys.c    **** 
2125:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2126:src/keys.c    **** 		if (n == OP_ZERO)
2127:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2128:src/keys.c    **** 		return CONST(n);
2129:src/keys.c    **** 	}
2130:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2131:src/keys.c    **** 		if (n == OP_ZERO)
2132:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2133:src/keys.c    **** 		return CONST_CMPLX(n);
2134:src/keys.c    **** 	}
2135:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2136:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2137:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2138:src/keys.c    **** 			// Monadic conversion routine
2139:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2140:src/keys.c    **** 		else
2141:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2142:src/keys.c    **** 	}
2143:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2144:src/keys.c    **** 	if (c == CATALOGUE_USER)
2145:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2146:src/keys.c    **** #endif
2147:src/keys.c    **** 
2148:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2149:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2150:src/keys.c    **** 	else
2151:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2152:src/keys.c    **** 
2153:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2154:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2155:src/keys.c    **** 	}
2156:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2157:src/keys.c    **** 		return OP_NIL | OP_NOP;
2158:src/keys.c    **** 
2159:src/keys.c    **** 	/* Unpack the opcode */
2160:src/keys.c    **** 	cat += n + (n >> 2);
ARM GAS  /tmp/ccOshYsA.s 			page 41


2161:src/keys.c    **** 	p = cat[0];
2162:src/keys.c    **** 	q = cat[1];
2163:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2164:src/keys.c    **** 
2165:src/keys.c    **** 	/* Now figure out which opcode it really is */
2166:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2167:src/keys.c    **** 		if (m < opcode_breaks[i])
2168:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2169:src/keys.c    **** 		m -= opcode_breaks[i];
2170:src/keys.c    **** 	}
2171:src/keys.c    **** 	return RARG_BASEOP(m);
2172:src/keys.c    **** }
2173:src/keys.c    **** 
2174:src/keys.c    **** 
2175:src/keys.c    **** /*
2176:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2177:src/keys.c    ****  *  in multi character commands.
2178:src/keys.c    ****  */
2179:src/keys.c    **** static int forbidden_alpha(int pos) {
2180:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2181:src/keys.c    **** }
2182:src/keys.c    **** 
2183:src/keys.c    **** /*
2184:src/keys.c    ****  *  Catalogue navigation
2185:src/keys.c    ****  */
2186:src/keys.c    **** static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2187:src/keys.c    **** 	int pos = State.catpos;
2188:src/keys.c    **** 	int ch;
2189:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2190:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
2191:src/keys.c    **** 
2192:src/keys.c    **** 	if (shift == SHIFT_N) {
2193:src/keys.c    **** 		switch (c) {
2194:src/keys.c    **** #ifdef DM42
2195:src/keys.c    **** 		case K05:			// XEQ accepts command
2196:src/keys.c    **** #else	  
2197:src/keys.c    **** 		case K30:			// XEQ accepts command
2198:src/keys.c    **** #endif						  
2199:src/keys.c    **** 		case K20:			// Enter accepts command
2200:src/keys.c    **** 			if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2201:src/keys.c    **** 				const opcode op = current_catalogue(pos);
2202:src/keys.c    **** 
2203:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2204:src/keys.c    **** 
2205:src/keys.c    **** 				if (isRARG(op)) {
2206:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
2207:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2208:src/keys.c    **** 						return op;
2209:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2210:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2211:src/keys.c    **** 					else
2212:src/keys.c    **** 						init_arg(RARG_CMD(op));
2213:src/keys.c    **** 				}
2214:src/keys.c    **** 				else {
2215:src/keys.c    **** 					return check_confirm(op);
2216:src/keys.c    **** 				}
2217:src/keys.c    **** 			} else
ARM GAS  /tmp/ccOshYsA.s 			page 42


2218:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2219:src/keys.c    **** 			return STATE_UNFINISHED;
2220:src/keys.c    **** 
2221:src/keys.c    **** 		case K24:			// backspace
2222:src/keys.c    **** #ifdef DM42
2223:src/keys.c    **** 		  if (CmdLineLength > 0 && keyticks() < 30) {
2224:src/keys.c    **** #else
2225:src/keys.c    **** 		    if (CmdLineLength > 0 && Keyticks < 30) {
2226:src/keys.c    **** #endif
2227:src/keys.c    **** 		      if (--CmdLineLength > 0)
2228:src/keys.c    **** 					goto search;
2229:src/keys.c    **** 				pos = 0;
2230:src/keys.c    **** 				goto set_pos;
2231:src/keys.c    **** 			} else
2232:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2233:src/keys.c    **** 			return STATE_UNFINISHED;
2234:src/keys.c    **** 
2235:src/keys.c    **** 		case K60:
2236:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2237:src/keys.c    **** 			return STATE_UNFINISHED;
2238:src/keys.c    **** 
2239:src/keys.c    **** 		case K_UP:
2240:src/keys.c    **** 			CmdLineLength = 0;
2241:src/keys.c    **** 			if (pos == 0)
2242:src/keys.c    **** 				goto set_max;
2243:src/keys.c    **** 			else
2244:src/keys.c    **** 				--pos;
2245:src/keys.c    **** 			goto set_pos;
2246:src/keys.c    **** 
2247:src/keys.c    **** 		case K_DOWN:
2248:src/keys.c    **** 			CmdLineLength = 0;
2249:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2250:src/keys.c    **** 			if (pos >= ctmax)
2251:src/keys.c    **** 				pos = 0;
2252:src/keys.c    **** 			goto set_pos;
2253:src/keys.c    **** 
2254:src/keys.c    **** 		default:
2255:src/keys.c    **** 			break;
2256:src/keys.c    **** 		}
2257:src/keys.c    **** 	} else if (shift == SHIFT_F) {
2258:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
2259:src/keys.c    **** 			/*
2260:src/keys.c    **** 			 * f 1/x in conversion catalogue
2261:src/keys.c    **** 			 */
2262:src/keys.c    **** 			/* A small table of commands in pairs containing inverse commands.
2263:src/keys.c    **** 			 * This table could be unsigned characters only storing the monadic kind.
2264:src/keys.c    **** 			 * this saves twelve bytes in the table at a cost of some bytes in the code below.
2265:src/keys.c    **** 			 * Not worth it since the maximum saving will be less than twelve bytes.
2266:src/keys.c    **** 			 */
2267:src/keys.c    **** 			static const unsigned short int conv_mapping[] = {
2268:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2269:src/keys.c    **** 				OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2270:src/keys.c    **** 				OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2271:src/keys.c    **** 				OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2272:src/keys.c    **** 				OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2273:src/keys.c    **** 				OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2274:src/keys.c    **** 			};
ARM GAS  /tmp/ccOshYsA.s 			page 43


2275:src/keys.c    **** 			const opcode op = current_catalogue(pos);
2276:src/keys.c    **** 			int i;
2277:src/keys.c    **** 
2278:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2279:src/keys.c    **** 			if (isRARG(op))
2280:src/keys.c    **** 				return op ^ 1;
2281:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2282:src/keys.c    **** 				if (op == conv_mapping[i])
2283:src/keys.c    **** 					return conv_mapping[i^1];
2284:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
2285:src/keys.c    **** 		}
2286:src/keys.c    **** 		else if (c == K60 && (State2.alphas || State2.multi)) {
2287:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
2288:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2289:src/keys.c    **** 			return STATE_UNFINISHED;
2290:src/keys.c    **** 		}
2291:src/keys.c    **** 	} else if (shift == SHIFT_G) {
2292:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
2293:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2294:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
2295:src/keys.c    **** 		}
2296:src/keys.c    **** 	}
2297:src/keys.c    **** 
2298:src/keys.c    **** 	/* We've got a key press, map it to a character and try to
2299:src/keys.c    **** 	 * jump to the appropriate catalogue entry.
2300:src/keys.c    **** 	 */
2301:src/keys.c    **** 	ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2302:src/keys.c    **** 	reset_shift();
2303:src/keys.c    **** 	if (ch == '\0')
2304:src/keys.c    **** 		return STATE_UNFINISHED;
2305:src/keys.c    **** 	if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2306:src/keys.c    **** 		// No multi character search in alpha catalogues
2307:src/keys.c    **** 		CmdLineLength = 0;
2308:src/keys.c    **** 	}
2309:src/keys.c    **** 	if (CmdLineLength < 10)
2310:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
2311:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
2312:src/keys.c    **** 
2313:src/keys.c    **** search:
2314:src/keys.c    **** 	Cmdline[CmdLineLength] = '\0';
2315:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2316:src/keys.c    **** 		char buf[16];
2317:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2318:src/keys.c    **** 		int i;
2319:src/keys.c    **** 
2320:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2321:src/keys.c    **** 			cmd++;
2322:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2323:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2324:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
2325:src/keys.c    **** 			if (c > cl)
2326:src/keys.c    **** 				goto set_pos;
2327:src/keys.c    **** 			else if (c < cl)
2328:src/keys.c    **** 				break;
2329:src/keys.c    **** 		}
2330:src/keys.c    **** 		if (Cmdline[i] == '\0')
2331:src/keys.c    **** 			goto set_pos;
ARM GAS  /tmp/ccOshYsA.s 			page 44


2332:src/keys.c    **** 	}
2333:src/keys.c    **** set_max:
2334:src/keys.c    **** 	pos = ctmax - 1;
2335:src/keys.c    **** set_pos:
2336:src/keys.c    **** 	while (is_multi && pos && forbidden_alpha(pos))
2337:src/keys.c    **** 		--pos;
2338:src/keys.c    **** 	State.catpos = pos;
2339:src/keys.c    **** 	return STATE_UNFINISHED;
2340:src/keys.c    **** }
2341:src/keys.c    **** 
2342:src/keys.c    **** #ifndef REALBUILD
2343:src/keys.c    **** int find_pos(const char* text) {
2344:src/keys.c    **** 	int pos;
2345:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2346:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2347:src/keys.c    **** 		char buf[16];
2348:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2349:src/keys.c    **** 		int i;
2350:src/keys.c    **** 
2351:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2352:src/keys.c    **** 			cmd++;
2353:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2354:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2355:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2356:src/keys.c    **** 			if (c > cl)
2357:src/keys.c    **** 				return pos;
2358:src/keys.c    **** 			else if (c < cl)
2359:src/keys.c    **** 				break;
2360:src/keys.c    **** 		}
2361:src/keys.c    **** 		if (text[i] == '\0')
2362:src/keys.c    **** 			return pos;
2363:src/keys.c    **** 	}
2364:src/keys.c    **** 	return pos;
2365:src/keys.c    **** }
2366:src/keys.c    **** 
2367:src/keys.c    **** #endif
2368:src/keys.c    **** 
2369:src/keys.c    **** /* Multi (2) word instruction entry
2370:src/keys.c    ****  */
2371:src/keys.c    **** static void reset_multi(void) {
2372:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2373:src/keys.c    **** 	State2.multi = 0;
2374:src/keys.c    **** 	if (! State2.alphas )
2375:src/keys.c    **** 		State2.alphashift = 0;
2376:src/keys.c    **** }
2377:src/keys.c    **** 
2378:src/keys.c    **** static int process_multi(const keycode c) {
2379:src/keys.c    **** 	enum shifts shift = reset_shift();
2380:src/keys.c    **** 	unsigned int ch = 0;
2381:src/keys.c    **** 	unsigned int opcode;
2382:src/keys.c    **** 
2383:src/keys.c    **** 	if (State2.catalogue) {
2384:src/keys.c    **** 		// Alpha catalogue from within multi character command
2385:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2386:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2387:src/keys.c    **** 			return opcode;
2388:src/keys.c    **** 		ch = (unsigned char) opcode;
ARM GAS  /tmp/ccOshYsA.s 			page 45


2389:src/keys.c    **** 		goto add_char;
2390:src/keys.c    **** 	}
2391:src/keys.c    **** 
2392:src/keys.c    **** 	switch (c) {
2393:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2394:src/keys.c    **** 		if (shift != SHIFT_N)
2395:src/keys.c    **** 				break;
2396:src/keys.c    **** 		reset_multi();
2397:src/keys.c    **** 		if (State2.numdigit == 0)
2398:src/keys.c    **** 			return STATE_UNFINISHED;
2399:src/keys.c    **** 		else if (State2.numdigit == 1)
2400:src/keys.c    **** 			State2.digval2 = 0;
2401:src/keys.c    **** 		goto fin;
2402:src/keys.c    **** 
2403:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2404:src/keys.c    **** 		if (shift != SHIFT_H) {
2405:src/keys.c    **** 			if (State2.numdigit == 0)
2406:src/keys.c    **** 				reset_multi();
2407:src/keys.c    **** 			else
2408:src/keys.c    **** 				State2.numdigit--;
2409:src/keys.c    **** 			return STATE_UNFINISHED;
2410:src/keys.c    **** 		}
2411:src/keys.c    **** 		break;
2412:src/keys.c    **** 
2413:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2414:src/keys.c    **** 		if (shift == SHIFT_F)
2415:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2416:src/keys.c    **** 		else
2417:src/keys.c    **** 			reset_multi();
2418:src/keys.c    **** 		return STATE_UNFINISHED;
2419:src/keys.c    **** 
2420:src/keys.c    **** 	default:
2421:src/keys.c    **** 		break;
2422:src/keys.c    **** 		}
2423:src/keys.c    **** 
2424:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2425:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2426:src/keys.c    **** 	if (ch == 0)
2427:src/keys.c    **** 		return STATE_UNFINISHED;
2428:src/keys.c    **** add_char:
2429:src/keys.c    **** 	if (State2.numdigit == 0) {
2430:src/keys.c    **** 		State2.digval = ch;
2431:src/keys.c    **** 		State2.numdigit = 1;
2432:src/keys.c    **** 		return STATE_UNFINISHED;
2433:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2434:src/keys.c    **** 		State2.digval2 = ch;
2435:src/keys.c    **** 		State2.numdigit = 2;
2436:src/keys.c    **** 		return STATE_UNFINISHED;
2437:src/keys.c    **** 	}
2438:src/keys.c    **** 	reset_multi();
2439:src/keys.c    **** 
2440:src/keys.c    **** fin:
2441:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2442:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2443:src/keys.c    **** 	return opcode;
2444:src/keys.c    **** }
2445:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 46


2446:src/keys.c    **** 
2447:src/keys.c    **** /* Handle YES/NO confirmations
2448:src/keys.c    ****  */
2449:src/keys.c    **** static int process_confirm(const keycode c) {
2450:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2451:src/keys.c    **** 	switch (c) {
2452:src/keys.c    **** #ifdef DM42
2453:src/keys.c    **** 	case K52:
2454:src/keys.c    **** #endif
2455:src/keys.c    **** 	case K63:			// Yes
2456:src/keys.c    **** 	  switch (State2.confirm) {
2457:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2458:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2459:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2460:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2461:src/keys.c    **** 	  }
2462:src/keys.c    **** 	case K24:
2463:src/keys.c    **** #ifdef DM42
2464:src/keys.c    **** 	case K22:
2465:src/keys.c    **** #else
2466:src/keys.c    **** 	case K32:
2467:src/keys.c    **** #endif
2468:src/keys.c    **** 	  // No
2469:src/keys.c    **** 	  State2.confirm = 0;
2470:src/keys.c    **** 	  State2.digval = 0;
2471:src/keys.c    **** 	  break;
2472:src/keys.c    **** 	default:			// No state change
2473:src/keys.c    **** 	  break;
2474:src/keys.c    **** 	}
2475:src/keys.c    **** 	return STATE_UNFINISHED;
2476:src/keys.c    **** }
2477:src/keys.c    **** 
2478:src/keys.c    **** 
2479:src/keys.c    **** /*
2480:src/keys.c    ****  *  STATUS
2481:src/keys.c    ****  */
2482:src/keys.c    **** static int process_status(const keycode c) {
2483:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2484:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2485:src/keys.c    **** 
2486:src/keys.c    **** 	if (c == K_UP) {
2487:src/keys.c    **** 		if (--n < -2)
2488:src/keys.c    **** 			n = max;
2489:src/keys.c    **** 	}
2490:src/keys.c    **** 	else if (c == K_DOWN) {
2491:src/keys.c    **** 		if (++n > max)
2492:src/keys.c    **** 			n = -2;
2493:src/keys.c    **** 	}
2494:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2495:src/keys.c    **** 		State2.status = 0;
2496:src/keys.c    **** 		return STATE_UNFINISHED;
2497:src/keys.c    **** 	} 
2498:src/keys.c    **** 	else {
2499:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2500:src/keys.c    **** 		if (nn <= 9)
2501:src/keys.c    **** 			n = nn;
2502:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
ARM GAS  /tmp/ccOshYsA.s 			page 47


2503:src/keys.c    **** 			n = n == max ? 10 : max;
2504:src/keys.c    **** 		else if (nn != NO_REG)
2505:src/keys.c    **** 			n = 10; 
2506:src/keys.c    **** 	}
2507:src/keys.c    **** 	State2.status = n + 3;
2508:src/keys.c    **** 
2509:src/keys.c    **** 	return STATE_UNFINISHED;
2510:src/keys.c    **** }
2511:src/keys.c    **** 
2512:src/keys.c    **** 
2513:src/keys.c    **** /*
2514:src/keys.c    ****  *  CAT helper
2515:src/keys.c    ****  */
2516:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 116              		.loc 1 2516 64 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
2517:src/keys.c    **** 	const unsigned int op = getprog(pc);
 120              		.loc 1 2517 2 view .LVU27
2516:src/keys.c    **** 	const unsigned int op = getprog(pc);
 121              		.loc 1 2516 64 is_stmt 0 view .LVU28
 122 0000 10B5     		push	{r4, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
2516:src/keys.c    **** 	const unsigned int op = getprog(pc);
 126              		.loc 1 2516 64 view .LVU29
 127 0002 0C46     		mov	r4, r1
 128              		.loc 1 2517 26 view .LVU30
 129 0004 FFF7FEFF 		bl	getprog
 130              	.LVL11:
2518:src/keys.c    **** 
2519:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 131              		.loc 1 2519 2 is_stmt 1 view .LVU31
 132              		.loc 1 2519 33 is_stmt 0 view .LVU32
 133 0008 B0F59D7F 		cmp	r0, #314
 134 000c 06D0     		beq	.L16
 135              		.loc 1 2519 53 discriminator 3 view .LVU33
 136 000e 00F47043 		and	r3, r0, #61440
 137              		.loc 1 2519 49 discriminator 3 view .LVU34
 138 0012 B3F5704F 		cmp	r3, #61440
 139 0016 03D0     		beq	.L19
 140              		.loc 1 2519 33 view .LVU35
 141 0018 0020     		movs	r0, #0
 142              	.LVL12:
2520:src/keys.c    **** }
 143              		.loc 1 2520 1 view .LVU36
 144 001a 10BD     		pop	{r4, pc}
 145              	.LVL13:
 146              	.L16:
2519:src/keys.c    **** }
 147              		.loc 1 2519 33 view .LVU37
 148 001c 0120     		movs	r0, #1
 149              	.LVL14:
 150              		.loc 1 2520 1 view .LVU38
 151 001e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccOshYsA.s 			page 48


 152              	.LVL15:
 153              	.L19:
2519:src/keys.c    **** }
 154              		.loc 1 2519 66 discriminator 5 view .LVU39
 155 0020 C0F30320 		ubfx	r0, r0, #8, #4
 156              	.LVL16:
2519:src/keys.c    **** }
 157              		.loc 1 2519 63 discriminator 5 view .LVU40
 158 0024 50EA0403 		orrs	r3, r0, r4
 159 0028 0CBF     		ite	eq
 160 002a 0120     		moveq	r0, #1
 161 002c 0020     		movne	r0, #0
 162              		.loc 1 2520 1 discriminator 5 view .LVU41
 163 002e 10BD     		pop	{r4, pc}
 164              		.loc 1 2520 1 discriminator 5 view .LVU42
 165              		.cfi_endproc
 166              	.LFE49:
 168              		.section	.text.advance_to_next_label,"ax",%progbits
 169              		.align	1
 170              		.p2align 2,,3
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	advance_to_next_label:
 177              	.LVL17:
 178              	.LFB50:
2521:src/keys.c    **** 
2522:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 179              		.loc 1 2522 85 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		.loc 1 2522 85 is_stmt 0 view .LVU44
 184 0000 70B5     		push	{r4, r5, r6, lr}
 185              		.cfi_def_cfa_offset 16
 186              		.cfi_offset 4, -16
 187              		.cfi_offset 5, -12
 188              		.cfi_offset 6, -8
 189              		.cfi_offset 14, -4
 190              		.loc 1 2522 85 view .LVU45
 191 0002 0446     		mov	r4, r0
2523:src/keys.c    **** 	do {
 192              		.loc 1 2523 2 is_stmt 1 view .LVU46
2524:src/keys.c    **** 		for (;;) {
 193              		.loc 1 2524 3 view .LVU47
2525:src/keys.c    **** 			if (inc) {
 194              		.loc 1 2525 4 view .LVU48
2522:src/keys.c    **** 	do {
 195              		.loc 1 2522 85 is_stmt 0 view .LVU49
 196 0004 1646     		mov	r6, r2
 197              		.loc 1 2525 7 view .LVU50
 198 0006 21B9     		cbnz	r1, .L24
 199              	.LVL18:
 200              	.L21:
2526:src/keys.c    **** 				pc = do_inc(pc, 0);
2527:src/keys.c    **** 				if (PcWrapped)
ARM GAS  /tmp/ccOshYsA.s 			page 49


2528:src/keys.c    **** 					break;
2529:src/keys.c    **** 			}
2530:src/keys.c    **** 			else
2531:src/keys.c    **** 				inc = 1;
2532:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 201              		.loc 1 2532 4 is_stmt 1 view .LVU51
 202              		.loc 1 2532 8 is_stmt 0 view .LVU52
 203 0008 3146     		mov	r1, r6
 204 000a 2046     		mov	r0, r4
 205              		.loc 1 2532 8 view .LVU53
 206 000c FFF7FEFF 		bl	is_label_or_end_at
 207              	.LVL19:
 208              		.loc 1 2532 7 view .LVU54
 209 0010 B8B9     		cbnz	r0, .L23
 210              	.LVL20:
 211              	.L24:
 212              		.loc 1 2532 7 view .LVU55
 213 0012 0D4D     		ldr	r5, .L32
 214              	.L25:
2526:src/keys.c    **** 				pc = do_inc(pc, 0);
 215              		.loc 1 2526 5 is_stmt 1 view .LVU56
2526:src/keys.c    **** 				pc = do_inc(pc, 0);
 216              		.loc 1 2526 10 is_stmt 0 view .LVU57
 217 0014 2046     		mov	r0, r4
 218 0016 0021     		movs	r1, #0
 219 0018 FFF7FEFF 		bl	do_inc
 220              	.LVL21:
2527:src/keys.c    **** 					break;
 221              		.loc 1 2527 8 view .LVU58
 222 001c 2B68     		ldr	r3, [r5]
2526:src/keys.c    **** 				pc = do_inc(pc, 0);
 223              		.loc 1 2526 10 view .LVU59
 224 001e 0446     		mov	r4, r0
 225              	.LVL22:
2527:src/keys.c    **** 					break;
 226              		.loc 1 2527 5 is_stmt 1 view .LVU60
2527:src/keys.c    **** 					break;
 227              		.loc 1 2527 8 is_stmt 0 view .LVU61
 228 0020 002B     		cmp	r3, #0
 229 0022 F1D0     		beq	.L21
2533:src/keys.c    **** 				return pc;
2534:src/keys.c    **** 			}
2535:src/keys.c    **** 		}
2536:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 230              		.loc 1 2536 3 is_stmt 1 view .LVU62
 231              		.loc 1 2536 8 is_stmt 0 view .LVU63
 232 0024 20F47F54 		bic	r4, r0, #16320
 233 0028 24F03F04 		bic	r4, r4, #63
 234 002c 04F58044 		add	r4, r4, #16384
 235 0030 A4B2     		uxth	r4, r4
 236              		.loc 1 2536 6 view .LVU64
 237 0032 44F00104 		orr	r4, r4, #1
 238              	.LVL23:
2537:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 239              		.loc 1 2537 10 is_stmt 1 view .LVU65
 240              		.loc 1 2537 13 is_stmt 0 view .LVU66
 241 0036 2046     		mov	r0, r4
ARM GAS  /tmp/ccOshYsA.s 			page 50


 242 0038 3146     		mov	r1, r6
 243 003a FFF7FEFF 		bl	is_label_or_end_at
 244              	.LVL24:
 245              		.loc 1 2537 2 view .LVU67
 246 003e 0028     		cmp	r0, #0
 247 0040 E8D0     		beq	.L25
 248              	.L23:
2538:src/keys.c    **** 	return pc;
2539:src/keys.c    **** }
 249              		.loc 1 2539 1 view .LVU68
 250 0042 2046     		mov	r0, r4
 251 0044 70BD     		pop	{r4, r5, r6, pc}
 252              	.LVL25:
 253              	.L33:
 254              		.loc 1 2539 1 view .LVU69
 255 0046 00BF     		.align	2
 256              	.L32:
 257 0048 00000000 		.word	PcWrapped
 258              		.cfi_endproc
 259              	.LFE50:
 261              		.section	.text.init_cat,"ax",%progbits
 262              		.align	1
 263              		.p2align 2,,3
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv4-sp-d16
 269              	init_cat:
 270              	.LVL26:
 271              	.LFB12:
 533:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 272              		.loc 1 533 43 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 534:src/keys.c    **** 		// Save last catalogue for a later restore
 276              		.loc 1 534 2 view .LVU71
 533:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 277              		.loc 1 533 43 is_stmt 0 view .LVU72
 278 0000 38B5     		push	{r3, r4, r5, lr}
 279              		.cfi_def_cfa_offset 16
 280              		.cfi_offset 3, -16
 281              		.cfi_offset 4, -12
 282              		.cfi_offset 5, -8
 283              		.cfi_offset 14, -4
 534:src/keys.c    **** 		// Save last catalogue for a later restore
 284              		.loc 1 534 37 view .LVU73
 285 0002 384C     		ldr	r4, .L53
 534:src/keys.c    **** 		// Save last catalogue for a later restore
 286              		.loc 1 534 5 view .LVU74
 287 0004 0546     		mov	r5, r0
 288 0006 D0B9     		cbnz	r0, .L35
 534:src/keys.c    **** 		// Save last catalogue for a later restore
 289              		.loc 1 534 37 discriminator 1 view .LVU75
 290 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 534:src/keys.c    **** 		// Save last catalogue for a later restore
 291              		.loc 1 534 28 discriminator 1 view .LVU76
ARM GAS  /tmp/ccOshYsA.s 			page 51


 292 000a 3BB1     		cbz	r3, .L36
 536:src/keys.c    **** 		CmdLineLength = 0;
 293              		.loc 1 536 3 is_stmt 1 view .LVU77
 536:src/keys.c    **** 		CmdLineLength = 0;
 294              		.loc 1 536 18 is_stmt 0 view .LVU78
 295 000c 364A     		ldr	r2, .L53+4
 537:src/keys.c    **** 	}
 296              		.loc 1 537 17 view .LVU79
 297 000e 2077     		strb	r0, [r4, #28]
 536:src/keys.c    **** 		CmdLineLength = 0;
 298              		.loc 1 536 18 view .LVU80
 299 0010 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 300 0014 63F30401 		bfi	r1, r3, #0, #5
 301 0018 82F8DC17 		strb	r1, [r2, #2012]
 537:src/keys.c    **** 	}
 302              		.loc 1 537 3 is_stmt 1 view .LVU81
 303              	.L36:
 539:src/keys.c    **** 
 304              		.loc 1 539 2 view .LVU82
 305 001c FFF7FEFF 		bl	process_cmdline
 306              	.LVL27:
 541:src/keys.c    **** 	State2.registerlist = 0;
 307              		.loc 1 541 2 view .LVU83
 542:src/keys.c    **** 	State2.status = 0;
 308              		.loc 1 542 2 view .LVU84
 543:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 309              		.loc 1 543 2 view .LVU85
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 310              		.loc 1 568 16 is_stmt 0 view .LVU86
 311 0020 6369     		ldr	r3, [r4, #20]
 312 0022 23F04063 		bic	r3, r3, #201326592
 313 0026 23F40073 		bic	r3, r3, #512
 543:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 314              		.loc 1 543 16 view .LVU87
 315 002a 0022     		movs	r2, #0
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 316              		.loc 1 568 16 view .LVU88
 317 002c 6361     		str	r3, [r4, #20]
 543:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 318              		.loc 1 543 16 view .LVU89
 319 002e 2273     		strb	r2, [r4, #12]
 544:src/keys.c    **** 
 320              		.loc 1 544 2 is_stmt 1 view .LVU90
 546:src/keys.c    **** 	case CATALOGUE_LABELS:
 321              		.loc 1 546 2 view .LVU91
 567:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 322              		.loc 1 567 3 view .LVU92
 567:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 323              		.loc 1 567 20 is_stmt 0 view .LVU93
 324 0030 A273     		strb	r2, [r4, #14]
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 325              		.loc 1 568 3 is_stmt 1 view .LVU94
 569:src/keys.c    **** 			// Different catalogue, reset position
 326              		.loc 1 569 3 view .LVU95
 574:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 327              		.loc 1 574 2 view .LVU96
 328              	.LBB232:
ARM GAS  /tmp/ccOshYsA.s 			page 52


 329              	.LBI232:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 330              		.loc 1 102 13 view .LVU97
 331              	.LBE232:
 103:src/keys.c    **** }
 332              		.loc 1 103 2 view .LVU98
 333              	.LVL28:
 334              	.LBB249:
 335              	.LBB233:
 336              	.LBI233:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 337              		.loc 1 92 20 view .LVU99
 338              	.LBB234:
  93:src/keys.c    **** 	State2.shifts = shift;
 339              		.loc 1 93 2 view .LVU100
 340              	.LBB235:
 341              	.LBI235:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 342              		.loc 1 84 13 view .LVU101
 343              	.LBB236:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 344              		.loc 1 85 2 view .LVU102
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 345              		.loc 1 85 18 is_stmt 0 view .LVU103
 346 0032 FFF7FEFF 		bl	shift_down
 347              	.LVL29:
  86:src/keys.c    **** }
 348              		.loc 1 86 2 is_stmt 1 view .LVU104
 349              	.LBE236:
 350              	.LBE235:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 351              		.loc 1 94 2 view .LVU105
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 352              		.loc 1 94 16 is_stmt 0 view .LVU106
 353 0036 0023     		movs	r3, #0
 354 0038 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 355              		.loc 1 95 2 is_stmt 1 view .LVU107
  95:src/keys.c    **** 	return r;
 356              		.loc 1 95 19 is_stmt 0 view .LVU108
 357 003a 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 358              		.loc 1 96 2 is_stmt 1 view .LVU109
 359              	.LVL30:
  96:src/keys.c    **** }
 360              		.loc 1 96 2 is_stmt 0 view .LVU110
 361              	.LBE234:
 362              	.LBE233:
 363              	.LBE249:
 578:src/keys.c    **** 
 364              		.loc 1 578 1 view .LVU111
 365 003c 38BD     		pop	{r3, r4, r5, pc}
 366              	.LVL31:
 367              	.L35:
 539:src/keys.c    **** 
 368              		.loc 1 539 2 is_stmt 1 view .LVU112
 369 003e FFF7FEFF 		bl	process_cmdline
ARM GAS  /tmp/ccOshYsA.s 			page 53


 370              	.LVL32:
 541:src/keys.c    **** 	State2.registerlist = 0;
 371              		.loc 1 541 2 view .LVU113
 542:src/keys.c    **** 	State2.status = 0;
 372              		.loc 1 542 2 view .LVU114
 541:src/keys.c    **** 	State2.registerlist = 0;
 373              		.loc 1 541 19 is_stmt 0 view .LVU115
 374 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 543:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 375              		.loc 1 543 16 view .LVU116
 376 0044 0022     		movs	r2, #0
 541:src/keys.c    **** 	State2.registerlist = 0;
 377              		.loc 1 541 19 view .LVU117
 378 0046 23F00C03 		bic	r3, r3, #12
 546:src/keys.c    **** 	case CATALOGUE_LABELS:
 379              		.loc 1 546 2 view .LVU118
 380 004a 162D     		cmp	r5, #22
 541:src/keys.c    **** 	State2.registerlist = 0;
 381              		.loc 1 541 19 view .LVU119
 382 004c E375     		strb	r3, [r4, #23]
 543:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 383              		.loc 1 543 2 is_stmt 1 view .LVU120
 543:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 384              		.loc 1 543 16 is_stmt 0 view .LVU121
 385 004e 2273     		strb	r2, [r4, #12]
 544:src/keys.c    **** 
 386              		.loc 1 544 2 is_stmt 1 view .LVU122
 544:src/keys.c    **** 
 387              		.loc 1 544 19 is_stmt 0 view .LVU123
 388 0050 A273     		strb	r2, [r4, #14]
 546:src/keys.c    **** 	case CATALOGUE_LABELS:
 389              		.loc 1 546 2 is_stmt 1 view .LVU124
 390 0052 1CD0     		beq	.L37
 391 0054 172D     		cmp	r5, #23
 392 0056 07D1     		bne	.L51
 562:src/keys.c    **** 		break;
 393              		.loc 1 562 3 view .LVU125
 562:src/keys.c    **** 		break;
 394              		.loc 1 562 17 is_stmt 0 view .LVU126
 395 0058 0123     		movs	r3, #1
 396 005a 2373     		strb	r3, [r4, #12]
 563:src/keys.c    **** 
 397              		.loc 1 563 3 is_stmt 1 view .LVU127
 574:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 398              		.loc 1 574 2 view .LVU128
 399              	.LBB250:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 400              		.loc 1 102 13 view .LVU129
 401              	.LBE250:
 103:src/keys.c    **** }
 402              		.loc 1 103 2 view .LVU130
 403              	.LVL33:
 404              	.LBB251:
 405              	.LBB246:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 406              		.loc 1 92 20 view .LVU131
 407              	.LBB243:
ARM GAS  /tmp/ccOshYsA.s 			page 54


  93:src/keys.c    **** 	State2.shifts = shift;
 408              		.loc 1 93 2 view .LVU132
 409              	.LBB240:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 410              		.loc 1 84 13 view .LVU133
 411              	.LBB237:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 412              		.loc 1 85 2 view .LVU134
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 413              		.loc 1 85 18 is_stmt 0 view .LVU135
 414 005c FFF7FEFF 		bl	shift_down
 415              	.LVL34:
  86:src/keys.c    **** }
 416              		.loc 1 86 2 is_stmt 1 view .LVU136
 417              	.LBE237:
 418              	.LBE240:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 419              		.loc 1 94 2 view .LVU137
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 420              		.loc 1 94 16 is_stmt 0 view .LVU138
 421 0060 0023     		movs	r3, #0
 422 0062 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 423              		.loc 1 95 2 is_stmt 1 view .LVU139
  95:src/keys.c    **** 	return r;
 424              		.loc 1 95 19 is_stmt 0 view .LVU140
 425 0064 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 426              		.loc 1 96 2 is_stmt 1 view .LVU141
 427              	.LVL35:
  96:src/keys.c    **** }
 428              		.loc 1 96 2 is_stmt 0 view .LVU142
 429              	.LBE243:
 430              	.LBE246:
 431              	.LBE251:
 578:src/keys.c    **** 
 432              		.loc 1 578 1 view .LVU143
 433 0066 38BD     		pop	{r3, r4, r5, pc}
 434              	.L51:
 546:src/keys.c    **** 	case CATALOGUE_LABELS:
 435              		.loc 1 546 2 view .LVU144
 436 0068 152D     		cmp	r5, #21
 437 006a 1DD1     		bne	.L39
 549:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 438              		.loc 1 549 3 is_stmt 1 view .LVU145
 550:src/keys.c    **** 		break;
 439              		.loc 1 550 41 is_stmt 0 view .LVU146
 440 006c 1E49     		ldr	r1, .L53+4
 549:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 441              		.loc 1 549 20 view .LVU147
 442 006e DBB2     		uxtb	r3, r3
 550:src/keys.c    **** 		break;
 443              		.loc 1 550 19 view .LVU148
 444 0070 B1F8EC07 		ldrh	r0, [r1, #2028]
 549:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 445              		.loc 1 549 20 view .LVU149
 446 0074 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/ccOshYsA.s 			page 55


 550:src/keys.c    **** 		break;
 447              		.loc 1 550 19 view .LVU150
 448 0078 1146     		mov	r1, r2
 549:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 449              		.loc 1 549 20 view .LVU151
 450 007a E375     		strb	r3, [r4, #23]
 550:src/keys.c    **** 		break;
 451              		.loc 1 550 3 is_stmt 1 view .LVU152
 550:src/keys.c    **** 		break;
 452              		.loc 1 550 19 is_stmt 0 view .LVU153
 453 007c FFF7FEFF 		bl	advance_to_next_label
 454              	.LVL36:
 550:src/keys.c    **** 		break;
 455              		.loc 1 550 17 view .LVU154
 456 0080 2081     		strh	r0, [r4, #8]	@ movhi
 551:src/keys.c    **** 	
 457              		.loc 1 551 3 is_stmt 1 view .LVU155
 458              	.L40:
 574:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 459              		.loc 1 574 2 view .LVU156
 460              	.LBB252:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 461              		.loc 1 102 13 view .LVU157
 462              	.LBE252:
 103:src/keys.c    **** }
 463              		.loc 1 103 2 view .LVU158
 464              	.LVL37:
 465              	.LBB253:
 466              	.LBB247:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 467              		.loc 1 92 20 view .LVU159
 468              	.LBB244:
  93:src/keys.c    **** 	State2.shifts = shift;
 469              		.loc 1 93 2 view .LVU160
 470              	.LBB241:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 471              		.loc 1 84 13 view .LVU161
 472              	.LBB238:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 473              		.loc 1 85 2 view .LVU162
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 474              		.loc 1 85 18 is_stmt 0 view .LVU163
 475 0082 FFF7FEFF 		bl	shift_down
 476              	.LVL38:
  86:src/keys.c    **** }
 477              		.loc 1 86 2 is_stmt 1 view .LVU164
 478              	.LBE238:
 479              	.LBE241:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 480              		.loc 1 94 2 view .LVU165
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 481              		.loc 1 94 16 is_stmt 0 view .LVU166
 482 0086 0023     		movs	r3, #0
 483 0088 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 484              		.loc 1 95 2 is_stmt 1 view .LVU167
  95:src/keys.c    **** 	return r;
ARM GAS  /tmp/ccOshYsA.s 			page 56


 485              		.loc 1 95 19 is_stmt 0 view .LVU168
 486 008a 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 487              		.loc 1 96 2 is_stmt 1 view .LVU169
 488              	.LVL39:
  96:src/keys.c    **** }
 489              		.loc 1 96 2 is_stmt 0 view .LVU170
 490              	.LBE244:
 491              	.LBE247:
 492              	.LBE253:
 578:src/keys.c    **** 
 493              		.loc 1 578 1 view .LVU171
 494 008c 38BD     		pop	{r3, r4, r5, pc}
 495              	.L37:
 555:src/keys.c    **** 		State2.digval = regX_idx;
 496              		.loc 1 555 3 is_stmt 1 view .LVU172
 555:src/keys.c    **** 		State2.digval = regX_idx;
 497              		.loc 1 555 23 is_stmt 0 view .LVU173
 498 008e E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 557:src/keys.c    **** 		break;
 499              		.loc 1 557 18 view .LVU174
 500 0090 A272     		strb	r2, [r4, #10]
 555:src/keys.c    **** 		State2.digval = regX_idx;
 501              		.loc 1 555 23 view .LVU175
 502 0092 43F00803 		orr	r3, r3, #8
 556:src/keys.c    **** 		State2.digval2 = 0;
 503              		.loc 1 556 17 view .LVU176
 504 0096 6422     		movs	r2, #100
 555:src/keys.c    **** 		State2.digval = regX_idx;
 505              		.loc 1 555 23 view .LVU177
 506 0098 E375     		strb	r3, [r4, #23]
 556:src/keys.c    **** 		State2.digval2 = 0;
 507              		.loc 1 556 3 is_stmt 1 view .LVU178
 556:src/keys.c    **** 		State2.digval2 = 0;
 508              		.loc 1 556 17 is_stmt 0 view .LVU179
 509 009a 2281     		strh	r2, [r4, #8]	@ movhi
 557:src/keys.c    **** 		break;
 510              		.loc 1 557 3 is_stmt 1 view .LVU180
 558:src/keys.c    **** 
 511              		.loc 1 558 3 view .LVU181
 574:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 512              		.loc 1 574 2 view .LVU182
 513              	.LBB254:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 514              		.loc 1 102 13 view .LVU183
 515              	.LBE254:
 103:src/keys.c    **** }
 516              		.loc 1 103 2 view .LVU184
 517              	.LVL40:
 518              	.LBB255:
 519              	.LBB248:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 520              		.loc 1 92 20 view .LVU185
 521              	.LBB245:
  93:src/keys.c    **** 	State2.shifts = shift;
 522              		.loc 1 93 2 view .LVU186
 523              	.LBB242:
ARM GAS  /tmp/ccOshYsA.s 			page 57


  84:src/keys.c    **** 	enum shifts s = shift_down();
 524              		.loc 1 84 13 view .LVU187
 525              	.LBB239:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 526              		.loc 1 85 2 view .LVU188
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 527              		.loc 1 85 18 is_stmt 0 view .LVU189
 528 009c FFF7FEFF 		bl	shift_down
 529              	.LVL41:
  86:src/keys.c    **** }
 530              		.loc 1 86 2 is_stmt 1 view .LVU190
 531              	.LBE239:
 532              	.LBE242:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 533              		.loc 1 94 2 view .LVU191
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 534              		.loc 1 94 16 is_stmt 0 view .LVU192
 535 00a0 0023     		movs	r3, #0
 536 00a2 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 537              		.loc 1 95 2 is_stmt 1 view .LVU193
  95:src/keys.c    **** 	return r;
 538              		.loc 1 95 19 is_stmt 0 view .LVU194
 539 00a4 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 540              		.loc 1 96 2 is_stmt 1 view .LVU195
 541              	.LVL42:
  96:src/keys.c    **** }
 542              		.loc 1 96 2 is_stmt 0 view .LVU196
 543              	.LBE245:
 544              	.LBE248:
 545              	.LBE255:
 578:src/keys.c    **** 
 546              		.loc 1 578 1 view .LVU197
 547 00a6 38BD     		pop	{r3, r4, r5, pc}
 548              	.L39:
 567:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 549              		.loc 1 567 3 is_stmt 1 view .LVU198
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 550              		.loc 1 568 44 is_stmt 0 view .LVU199
 551 00a8 022D     		cmp	r5, #2
 567:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 552              		.loc 1 567 20 view .LVU200
 553 00aa A573     		strb	r5, [r4, #14]
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 554              		.loc 1 568 3 is_stmt 1 view .LVU201
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 555              		.loc 1 568 44 is_stmt 0 view .LVU202
 556 00ac 11D1     		bne	.L52
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 557              		.loc 1 568 16 view .LVU203
 558 00ae 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 559 00b0 43F00203 		orr	r3, r3, #2
 560 00b4 6375     		strb	r3, [r4, #21]
 569:src/keys.c    **** 			// Different catalogue, reset position
 561              		.loc 1 569 3 is_stmt 1 view .LVU204
 562              	.L44:
ARM GAS  /tmp/ccOshYsA.s 			page 58


 569:src/keys.c    **** 			// Different catalogue, reset position
 563              		.loc 1 569 37 is_stmt 0 discriminator 1 view .LVU205
 564 00b6 0C4A     		ldr	r2, .L53+4
 565 00b8 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 569:src/keys.c    **** 			// Different catalogue, reset position
 566              		.loc 1 569 29 discriminator 1 view .LVU206
 567 00bc 03F01F03 		and	r3, r3, #31
 568 00c0 AB42     		cmp	r3, r5
 569 00c2 DED0     		beq	.L40
 571:src/keys.c    **** 		}
 570              		.loc 1 571 4 is_stmt 1 view .LVU207
 571:src/keys.c    **** 		}
 571              		.loc 1 571 17 is_stmt 0 view .LVU208
 572 00c4 B2F8DC37 		ldrh	r3, [r2, #2012]
 573 00c8 6FF34B13 		bfc	r3, #5, #7
 574 00cc A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 575 00d0 D7E7     		b	.L40
 576              	.L52:
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 577              		.loc 1 568 44 view .LVU209
 578 00d2 A5F11101 		sub	r1, r5, #17
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 579              		.loc 1 568 16 view .LVU210
 580 00d6 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 581              		.loc 1 568 44 view .LVU211
 582 00d8 4A42     		rsbs	r2, r1, #0
 583 00da 4A41     		adcs	r2, r2, r1
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 584              		.loc 1 568 16 view .LVU212
 585 00dc 62F34103 		bfi	r3, r2, #1, #1
 586 00e0 6375     		strb	r3, [r4, #21]
 569:src/keys.c    **** 			// Different catalogue, reset position
 587              		.loc 1 569 3 is_stmt 1 view .LVU213
 588 00e2 E8E7     		b	.L44
 589              	.L54:
 590              		.align	2
 591              	.L53:
 592 00e4 00000000 		.word	StateWhileOn
 593 00e8 00000000 		.word	PersistentRam
 594              		.cfi_endproc
 595              	.LFE12:
 597              		.section	.text.advance_to_previous_label,"ax",%progbits
 598              		.align	1
 599              		.p2align 2,,3
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv4-sp-d16
 605              	advance_to_previous_label:
 606              	.LVL43:
 607              	.LFB51:
2540:src/keys.c    **** 
2541:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 608              		.loc 1 2541 80 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccOshYsA.s 			page 59


 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		.loc 1 2541 80 is_stmt 0 view .LVU215
 613 0000 70B5     		push	{r4, r5, r6, lr}
 614              		.cfi_def_cfa_offset 16
 615              		.cfi_offset 4, -16
 616              		.cfi_offset 5, -12
 617              		.cfi_offset 6, -8
 618              		.cfi_offset 14, -4
 619 0002 124E     		ldr	r6, .L64
 620              		.loc 1 2541 80 view .LVU216
 621 0004 0446     		mov	r4, r0
 622 0006 0D46     		mov	r5, r1
 623              	.LVL44:
 624              	.L56:
2542:src/keys.c    **** 	do {
 625              		.loc 1 2542 2 is_stmt 1 view .LVU217
2543:src/keys.c    **** 		for (;;) {
 626              		.loc 1 2543 3 view .LVU218
2544:src/keys.c    **** 			pc = do_dec(pc, 0);
 627              		.loc 1 2544 4 view .LVU219
 628              		.loc 1 2544 9 is_stmt 0 view .LVU220
 629 0008 2046     		mov	r0, r4
 630 000a 0021     		movs	r1, #0
 631 000c FFF7FEFF 		bl	do_dec
 632              	.LVL45:
2545:src/keys.c    **** 			if (PcWrapped)
2546:src/keys.c    **** 				break;
2547:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 633              		.loc 1 2547 4 is_stmt 1 view .LVU221
2548:src/keys.c    **** 				return pc;
2549:src/keys.c    **** 			}
2550:src/keys.c    **** 		}
2551:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 634              		.loc 1 2551 3 view .LVU222
 635              		.loc 1 2551 8 is_stmt 0 view .LVU223
 636 0010 20F47F53 		bic	r3, r0, #16320
 637 0014 23F03F03 		bic	r3, r3, #63
2545:src/keys.c    **** 			if (PcWrapped)
 638              		.loc 1 2545 7 view .LVU224
 639 0018 3268     		ldr	r2, [r6]
 640              		.loc 1 2551 8 view .LVU225
 641 001a A3F58043 		sub	r3, r3, #16384
2552:src/keys.c    **** 		pc = do_dec(pc, 0);
 642              		.loc 1 2552 8 view .LVU226
 643 001e 0021     		movs	r1, #0
2544:src/keys.c    **** 			if (PcWrapped)
 644              		.loc 1 2544 9 view .LVU227
 645 0020 0446     		mov	r4, r0
 646              	.LVL46:
2545:src/keys.c    **** 				break;
 647              		.loc 1 2545 4 is_stmt 1 view .LVU228
2551:src/keys.c    **** 		pc = do_dec(pc, 0);
 648              		.loc 1 2551 8 is_stmt 0 view .LVU229
 649 0022 9BB2     		uxth	r3, r3
 650              	.LVL47:
 651              		.loc 1 2552 3 is_stmt 1 view .LVU230
2545:src/keys.c    **** 				break;
ARM GAS  /tmp/ccOshYsA.s 			page 60


 652              		.loc 1 2545 7 is_stmt 0 view .LVU231
 653 0024 32B9     		cbnz	r2, .L57
2547:src/keys.c    **** 				return pc;
 654              		.loc 1 2547 8 view .LVU232
 655 0026 2946     		mov	r1, r5
 656 0028 FFF7FEFF 		bl	is_label_or_end_at
 657              	.LVL48:
2547:src/keys.c    **** 				return pc;
 658              		.loc 1 2547 7 view .LVU233
 659 002c 0028     		cmp	r0, #0
 660 002e EBD0     		beq	.L56
2553:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2554:src/keys.c    **** 	return pc;
2555:src/keys.c    **** }
 661              		.loc 1 2555 1 view .LVU234
 662 0030 2046     		mov	r0, r4
 663 0032 70BD     		pop	{r4, r5, r6, pc}
 664              	.LVL49:
 665              	.L57:
2552:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 666              		.loc 1 2552 8 view .LVU235
 667 0034 43F00100 		orr	r0, r3, #1
 668 0038 FFF7FEFF 		bl	do_dec
 669              	.LVL50:
2553:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 670              		.loc 1 2553 13 view .LVU236
 671 003c 2946     		mov	r1, r5
2552:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 672              		.loc 1 2552 8 view .LVU237
 673 003e 0446     		mov	r4, r0
 674              	.LVL51:
2553:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 675              		.loc 1 2553 10 is_stmt 1 view .LVU238
2553:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 676              		.loc 1 2553 13 is_stmt 0 view .LVU239
 677 0040 FFF7FEFF 		bl	is_label_or_end_at
 678              	.LVL52:
2553:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 679              		.loc 1 2553 2 view .LVU240
 680 0044 0028     		cmp	r0, #0
 681 0046 DFD0     		beq	.L56
 682              		.loc 1 2555 1 view .LVU241
 683 0048 2046     		mov	r0, r4
 684 004a 70BD     		pop	{r4, r5, r6, pc}
 685              	.LVL53:
 686              	.L65:
 687              		.loc 1 2555 1 view .LVU242
 688              		.align	2
 689              	.L64:
 690 004c 00000000 		.word	PcWrapped
 691              		.cfi_endproc
 692              	.LFE51:
 694              		.section	.text.init_arg.part.0,"ax",%progbits
 695              		.align	1
 696              		.p2align 2,,3
 697              		.syntax unified
 698              		.thumb
ARM GAS  /tmp/ccOshYsA.s 			page 61


 699              		.thumb_func
 700              		.fpu fpv4-sp-d16
 702              	init_arg.part.0:
 703              	.LVL54:
 704              	.LFB61:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 705              		.loc 1 520 13 is_stmt 1 view -0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 523:src/keys.c    **** 	State2.ind = 0;
 710              		.loc 1 523 2 view .LVU244
 523:src/keys.c    **** 	State2.ind = 0;
 711              		.loc 1 523 10 is_stmt 0 view .LVU245
 712 0000 084B     		ldr	r3, .L67
 528:src/keys.c    **** 	State2.local = 0;
 713              		.loc 1 528 13 view .LVU246
 714 0002 5969     		ldr	r1, [r3, #20]
 523:src/keys.c    **** 	State2.ind = 0;
 715              		.loc 1 523 10 view .LVU247
 716 0004 D877     		strb	r0, [r3, #31]
 524:src/keys.c    **** 	State2.digval = 0;
 717              		.loc 1 524 2 is_stmt 1 view .LVU248
 525:src/keys.c    **** 	State2.numdigit = 0;
 718              		.loc 1 525 2 view .LVU249
 528:src/keys.c    **** 	State2.local = 0;
 719              		.loc 1 528 13 is_stmt 0 view .LVU250
 720 0006 21F40F11 		bic	r1, r1, #2342912
 721 000a 8628     		cmp	r0, #134
 722 000c 0CBF     		ite	eq
 723 000e 4FF40812 		moveq	r2, #2228224
 724 0012 4FF40012 		movne	r2, #2097152
 725 0016 0A43     		orrs	r2, r2, r1
 525:src/keys.c    **** 	State2.numdigit = 0;
 726              		.loc 1 525 16 view .LVU251
 727 0018 0021     		movs	r1, #0
 528:src/keys.c    **** 	State2.local = 0;
 728              		.loc 1 528 13 view .LVU252
 729 001a 5A61     		str	r2, [r3, #20]
 525:src/keys.c    **** 	State2.numdigit = 0;
 730              		.loc 1 525 16 view .LVU253
 731 001c 1981     		strh	r1, [r3, #8]	@ movhi
 526:src/keys.c    **** 	State2.rarg = 1;
 732              		.loc 1 526 2 is_stmt 1 view .LVU254
 526:src/keys.c    **** 	State2.rarg = 1;
 733              		.loc 1 526 18 is_stmt 0 view .LVU255
 734 001e D972     		strb	r1, [r3, #11]
 527:src/keys.c    **** 	State2.dot = 0;
 735              		.loc 1 527 2 is_stmt 1 view .LVU256
 528:src/keys.c    **** 	State2.local = 0;
 736              		.loc 1 528 2 view .LVU257
 529:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 737              		.loc 1 529 2 view .LVU258
 530:src/keys.c    **** }
 738              		.loc 1 530 2 view .LVU259
 531:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 62


 739              		.loc 1 531 1 is_stmt 0 view .LVU260
 740 0020 7047     		bx	lr
 741              	.L68:
 742 0022 00BF     		.align	2
 743              	.L67:
 744 0024 00000000 		.word	StateWhileOn
 745              		.cfi_endproc
 746              	.LFE61:
 748              		.section	.text.reset_arg,"ax",%progbits
 749              		.align	1
 750              		.p2align 2,,3
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 754              		.fpu fpv4-sp-d16
 756              	reset_arg:
 757              	.LFB29:
1509:src/keys.c    **** 	init_arg((enum rarg) 0);
 758              		.loc 1 1509 29 is_stmt 1 view -0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
1510:src/keys.c    **** 	State2.rarg = 0;
 762              		.loc 1 1510 2 view .LVU262
 763              	.LVL55:
 764              	.LBB256:
 765              	.LBI256:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 766              		.loc 1 520 13 view .LVU263
 767              	.LBB257:
 521:src/keys.c    **** 		return;
 768              		.loc 1 521 2 view .LVU264
 769              	.LBE257:
 770              	.LBE256:
1509:src/keys.c    **** 	init_arg((enum rarg) 0);
 771              		.loc 1 1509 29 is_stmt 0 view .LVU265
 772 0000 08B5     		push	{r3, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 3, -8
 775              		.cfi_offset 14, -4
 776              	.LBB259:
 777              	.LBB258:
 521:src/keys.c    **** 		return;
 778              		.loc 1 521 6 view .LVU266
 779 0002 FFF7FEFF 		bl	is_bad_cmdline
 780              	.LVL56:
 521:src/keys.c    **** 		return;
 781              		.loc 1 521 5 view .LVU267
 782 0006 08B9     		cbnz	r0, .L70
 783 0008 FFF7FEFF 		bl	init_arg.part.0
 784              	.LVL57:
 785              	.L70:
 521:src/keys.c    **** 		return;
 786              		.loc 1 521 5 view .LVU268
 787              	.LBE258:
 788              	.LBE259:
1511:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 63


 789              		.loc 1 1511 2 is_stmt 1 view .LVU269
1511:src/keys.c    **** }
 790              		.loc 1 1511 14 is_stmt 0 view .LVU270
 791 000c 024B     		ldr	r3, .L72
 792 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 793 0010 6FF34512 		bfc	r2, #5, #1
 794 0014 9A75     		strb	r2, [r3, #22]
1512:src/keys.c    **** 
 795              		.loc 1 1512 1 view .LVU271
 796 0016 08BD     		pop	{r3, pc}
 797              	.L73:
 798              		.align	2
 799              	.L72:
 800 0018 00000000 		.word	StateWhileOn
 801              		.cfi_endproc
 802              	.LFE29:
 804              		.section	.text.arg_eval,"ax",%progbits
 805              		.align	1
 806              		.p2align 2,,3
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 810              		.fpu fpv4-sp-d16
 812              	arg_eval:
 813              	.LVL58:
 814              	.LFB30:
1514:src/keys.c    **** 	const unsigned int base = CmdBase;
 815              		.loc 1 1514 39 is_stmt 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
1515:src/keys.c    **** 	int r = RARG(base, val 
 819              		.loc 1 1515 2 view .LVU273
1514:src/keys.c    **** 	const unsigned int base = CmdBase;
 820              		.loc 1 1514 39 is_stmt 0 view .LVU274
 821 0000 70B5     		push	{r4, r5, r6, lr}
 822              		.cfi_def_cfa_offset 16
 823              		.cfi_offset 4, -16
 824              		.cfi_offset 5, -12
 825              		.cfi_offset 6, -8
 826              		.cfi_offset 14, -4
1515:src/keys.c    **** 	int r = RARG(base, val 
 827              		.loc 1 1515 28 view .LVU275
 828 0002 1C4B     		ldr	r3, .L95
1516:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 829              		.loc 1 1516 10 view .LVU276
 830 0004 997D     		ldrb	r1, [r3, #22]	@ zero_extendqisi2
 831 0006 5E7D     		ldrb	r6, [r3, #21]	@ zero_extendqisi2
1515:src/keys.c    **** 	int r = RARG(base, val 
 832              		.loc 1 1515 21 view .LVU277
 833 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 834              	.LVL59:
1516:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 835              		.loc 1 1516 2 is_stmt 1 view .LVU278
1516:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 836              		.loc 1 1516 10 is_stmt 0 view .LVU279
 837 000a CD07     		lsls	r5, r1, #31
ARM GAS  /tmp/ccOshYsA.s 			page 64


1519:src/keys.c    **** 
 838              		.loc 1 1519 30 view .LVU280
 839 000c 1A4D     		ldr	r5, .L95+4
1516:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 840              		.loc 1 1516 10 view .LVU281
 841 000e 06F08003 		and	r3, r6, #128
 842 0012 0344     		add	r3, r3, r0
1519:src/keys.c    **** 
 843              		.loc 1 1519 30 view .LVU282
 844 0014 95F8EA57 		ldrb	r5, [r5, #2026]	@ zero_extendqisi2
1516:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 845              		.loc 1 1516 10 view .LVU283
 846 0018 02F12004 		add	r4, r2, #32
 847 001c 48BF     		it	mi
 848 001e 7033     		addmi	r3, r3, #112
 849 0020 2402     		lsls	r4, r4, #8
 850 0022 1C43     		orrs	r4, r4, r3
 851              	.LVL60:
1519:src/keys.c    **** 
 852              		.loc 1 1519 2 is_stmt 1 view .LVU284
1519:src/keys.c    **** 
 853              		.loc 1 1519 77 is_stmt 0 view .LVU285
 854 0024 2B07     		lsls	r3, r5, #28
 855 0026 1DD5     		bpl	.L81
1519:src/keys.c    **** 
 856              		.loc 1 1519 77 discriminator 2 view .LVU286
 857 0028 11F0400F 		tst	r1, #64
 858 002c 0CBF     		ite	eq
 859 002e 0421     		moveq	r1, #4
 860 0030 0821     		movne	r1, #8
 861              	.L76:
 862              	.LVL61:
1521:src/keys.c    **** 		/*
 863              		.loc 1 1521 2 is_stmt 1 discriminator 6 view .LVU287
1521:src/keys.c    **** 		/*
 864              		.loc 1 1521 5 is_stmt 0 discriminator 6 view .LVU288
 865 0032 3606     		lsls	r6, r6, #24
 866 0034 12D4     		bmi	.L77
1536:src/keys.c    **** 			// Disallow odd complex register > 98
 867              		.loc 1 1536 3 is_stmt 1 view .LVU289
1536:src/keys.c    **** 			// Disallow odd complex register > 98
 868              		.loc 1 1536 20 is_stmt 0 view .LVU290
 869 0036 114B     		ldr	r3, .L95+8
 870 0038 03EB0213 		add	r3, r3, r2, lsl #4
 871 003c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1536:src/keys.c    **** 			// Disallow odd complex register > 98
 872              		.loc 1 1536 6 view .LVU291
 873 003e DD06     		lsls	r5, r3, #27
 874 0040 09D5     		bpl	.L78
1536:src/keys.c    **** 			// Disallow odd complex register > 98
 875              		.loc 1 1536 27 discriminator 1 view .LVU292
 876 0042 6228     		cmp	r0, #98
 877 0044 07D9     		bls	.L78
1536:src/keys.c    **** 			// Disallow odd complex register > 98
 878              		.loc 1 1536 52 discriminator 2 view .LVU293
 879 0046 C307     		lsls	r3, r0, #31
 880 0048 02D4     		bmi	.L85
ARM GAS  /tmp/ccOshYsA.s 			page 65


1540:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 881              		.loc 1 1540 3 is_stmt 1 view .LVU294
1540:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 882              		.loc 1 1540 28 is_stmt 0 view .LVU295
 883 004a 223A     		subs	r2, r2, #34
 884              	.LVL62:
1540:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 885              		.loc 1 1540 6 view .LVU296
 886 004c 012A     		cmp	r2, #1
 887 004e 05D8     		bhi	.L77
 888              	.LVL63:
 889              	.L85:
1538:src/keys.c    **** #endif
 890              		.loc 1 1538 11 view .LVU297
 891 0050 3324     		movs	r4, #51
 892              	.LVL64:
1547:src/keys.c    **** 
 893              		.loc 1 1547 1 view .LVU298
 894 0052 2046     		mov	r0, r4
 895              	.LVL65:
1547:src/keys.c    **** 
 896              		.loc 1 1547 1 view .LVU299
 897 0054 70BD     		pop	{r4, r5, r6, pc}
 898              	.LVL66:
 899              	.L78:
1540:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 900              		.loc 1 1540 3 is_stmt 1 view .LVU300
1540:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 901              		.loc 1 1540 28 is_stmt 0 view .LVU301
 902 0056 223A     		subs	r2, r2, #34
 903              	.LVL67:
1540:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 904              		.loc 1 1540 6 view .LVU302
 905 0058 012A     		cmp	r2, #1
 906 005a 05D9     		bls	.L94
 907              	.LVL68:
 908              	.L77:
1545:src/keys.c    **** 	return r;
 909              		.loc 1 1545 2 is_stmt 1 view .LVU303
 910 005c FFF7FEFF 		bl	reset_arg
 911              	.LVL69:
1546:src/keys.c    **** }
 912              		.loc 1 1546 2 view .LVU304
1547:src/keys.c    **** 
 913              		.loc 1 1547 1 is_stmt 0 view .LVU305
 914 0060 2046     		mov	r0, r4
 915 0062 70BD     		pop	{r4, r5, r6, pc}
 916              	.LVL70:
 917              	.L81:
1519:src/keys.c    **** 
 918              		.loc 1 1519 77 view .LVU306
 919 0064 0421     		movs	r1, #4
 920 0066 E4E7     		b	.L76
 921              	.LVL71:
 922              	.L94:
1540:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 923              		.loc 1 1540 73 discriminator 1 view .LVU307
ARM GAS  /tmp/ccOshYsA.s 			page 66


 924 0068 C1F16401 		rsb	r1, r1, #100
 925              	.LVL72:
1540:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 926              		.loc 1 1540 52 discriminator 1 view .LVU308
 927 006c 8142     		cmp	r1, r0
 928 006e F5D2     		bcs	.L77
 929 0070 EEE7     		b	.L85
 930              	.L96:
 931 0072 00BF     		.align	2
 932              	.L95:
 933 0074 00000000 		.word	StateWhileOn
 934 0078 00000000 		.word	PersistentRam
 935 007c 00000000 		.word	argcmds
 936              		.cfi_endproc
 937              	.LFE30:
 939              		.section	.text.process_arg_shuffle,"ax",%progbits
 940              		.align	1
 941              		.p2align 2,,3
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu fpv4-sp-d16
 947              	process_arg_shuffle:
 948              	.LVL73:
 949              	.LFB36:
1661:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 950              		.loc 1 1661 39 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
1662:src/keys.c    **** 	if (State2.numdigit < 4)
 955              		.loc 1 1662 2 view .LVU310
1661:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 956              		.loc 1 1661 39 is_stmt 0 view .LVU311
 957 0000 10B4     		push	{r4}
 958              		.cfi_def_cfa_offset 4
 959              		.cfi_offset 4, -4
1662:src/keys.c    **** 	if (State2.numdigit < 4)
 960              		.loc 1 1662 31 view .LVU312
 961 0002 0A4A     		ldr	r2, .L100
 962 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1662:src/keys.c    **** 	if (State2.numdigit < 4)
 963              		.loc 1 1662 16 view .LVU313
 964 0006 1189     		ldrh	r1, [r2, #8]
1662:src/keys.c    **** 	if (State2.numdigit < 4)
 965              		.loc 1 1662 43 view .LVU314
 966 0008 5C00     		lsls	r4, r3, #1
1662:src/keys.c    **** 	if (State2.numdigit < 4)
 967              		.loc 1 1662 21 view .LVU315
 968 000a A040     		lsls	r0, r0, r4
 969              	.LVL74:
1662:src/keys.c    **** 	if (State2.numdigit < 4)
 970              		.loc 1 1662 40 view .LVU316
 971 000c 0133     		adds	r3, r3, #1
 972 000e DBB2     		uxtb	r3, r3
1662:src/keys.c    **** 	if (State2.numdigit < 4)
ARM GAS  /tmp/ccOshYsA.s 			page 67


 973              		.loc 1 1662 16 view .LVU317
 974 0010 0844     		add	r0, r0, r1
 975 0012 80B2     		uxth	r0, r0
1663:src/keys.c    **** 		return STATE_UNFINISHED;
 976              		.loc 1 1663 5 view .LVU318
 977 0014 032B     		cmp	r3, #3
1662:src/keys.c    **** 	if (State2.numdigit < 4)
 978              		.loc 1 1662 40 view .LVU319
 979 0016 D372     		strb	r3, [r2, #11]
1662:src/keys.c    **** 	if (State2.numdigit < 4)
 980              		.loc 1 1662 16 view .LVU320
 981 0018 1081     		strh	r0, [r2, #8]	@ movhi
1663:src/keys.c    **** 		return STATE_UNFINISHED;
 982              		.loc 1 1663 2 is_stmt 1 view .LVU321
1663:src/keys.c    **** 		return STATE_UNFINISHED;
 983              		.loc 1 1663 5 is_stmt 0 view .LVU322
 984 001a 03D9     		bls	.L98
1665:src/keys.c    **** }
 985              		.loc 1 1665 2 is_stmt 1 view .LVU323
1666:src/keys.c    **** 
 986              		.loc 1 1666 1 is_stmt 0 view .LVU324
 987 001c 5DF8044B 		ldr	r4, [sp], #4
 988              		.cfi_remember_state
 989              		.cfi_restore 4
 990              		.cfi_def_cfa_offset 0
1665:src/keys.c    **** }
 991              		.loc 1 1665 9 view .LVU325
 992 0020 FFF7FEBF 		b	arg_eval
 993              	.LVL75:
 994              	.L98:
 995              		.cfi_restore_state
1666:src/keys.c    **** 
 996              		.loc 1 1666 1 view .LVU326
 997 0024 3320     		movs	r0, #51
 998 0026 5DF8044B 		ldr	r4, [sp], #4
 999              		.cfi_restore 4
 1000              		.cfi_def_cfa_offset 0
 1001 002a 7047     		bx	lr
 1002              	.L101:
 1003              		.align	2
 1004              	.L100:
 1005 002c 00000000 		.word	StateWhileOn
 1006              		.cfi_endproc
 1007              	.LFE36:
 1009              		.section	.text.arg_digit,"ax",%progbits
 1010              		.align	1
 1011              		.p2align 2,,3
 1012              		.syntax unified
 1013              		.thumb
 1014              		.thumb_func
 1015              		.fpu fpv4-sp-d16
 1017              	arg_digit:
 1018              	.LVL76:
 1019              	.LFB31:
1549:src/keys.c    **** 	int lim;
 1020              		.loc 1 1549 29 is_stmt 1 view -0
 1021              		.cfi_startproc
ARM GAS  /tmp/ccOshYsA.s 			page 68


 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
1550:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1024              		.loc 1 1550 2 view .LVU328
1555:src/keys.c    **** #endif
 1025              		.loc 1 1555 2 view .LVU329
1549:src/keys.c    **** 	int lim;
 1026              		.loc 1 1549 29 is_stmt 0 view .LVU330
 1027 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1028              		.cfi_def_cfa_offset 24
 1029              		.cfi_offset 3, -24
 1030              		.cfi_offset 4, -20
 1031              		.cfi_offset 5, -16
 1032              		.cfi_offset 6, -12
 1033              		.cfi_offset 7, -8
 1034              		.cfi_offset 14, -4
1555:src/keys.c    **** #endif
 1035              		.loc 1 1555 28 view .LVU331
 1036 0002 334C     		ldr	r4, .L134
1558:src/keys.c    **** 	
 1037              		.loc 1 1558 34 view .LVU332
 1038 0004 334A     		ldr	r2, .L134+4
1555:src/keys.c    **** #endif
 1039              		.loc 1 1555 28 view .LVU333
 1040 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1041              	.LVL77:
1557:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1042              		.loc 1 1557 2 is_stmt 1 view .LVU334
1557:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1043              		.loc 1 1557 33 is_stmt 0 view .LVU335
 1044 0008 2389     		ldrh	r3, [r4, #8]
1558:src/keys.c    **** 	
 1045              		.loc 1 1558 34 view .LVU336
 1046 000a 02EB0712 		add	r2, r2, r7, lsl #4
1557:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1047              		.loc 1 1557 41 view .LVU337
 1048 000e 03EB8303 		add	r3, r3, r3, lsl #2
1558:src/keys.c    **** 	
 1049              		.loc 1 1558 34 view .LVU338
 1050 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
1557:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1051              		.loc 1 1557 46 view .LVU339
 1052 0014 00EB4305 		add	r5, r0, r3, lsl #1
 1053              	.LVL78:
1558:src/keys.c    **** 	
 1054              		.loc 1 1558 2 is_stmt 1 view .LVU340
1558:src/keys.c    **** 	
 1055              		.loc 1 1558 39 is_stmt 0 view .LVU341
 1056 0018 8807     		lsls	r0, r1, #30
 1057              	.LVL79:
1558:src/keys.c    **** 	
 1058              		.loc 1 1558 39 view .LVU342
 1059 001a 25D5     		bpl	.L103
 1060              	.LVL80:
1560:src/keys.c    **** 		// Handle local registers and flags
 1061              		.loc 1 1560 2 is_stmt 1 view .LVU343
1560:src/keys.c    **** 		// Handle local registers and flags
ARM GAS  /tmp/ccOshYsA.s 			page 69


 1062              		.loc 1 1560 6 is_stmt 0 view .LVU344
 1063 001c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1560:src/keys.c    **** 		// Handle local registers and flags
 1064              		.loc 1 1560 5 view .LVU345
 1065 001e D907     		lsls	r1, r3, #31
 1066 0020 1BD5     		bpl	.L105
 1067              	.L128:
1562:src/keys.c    **** 		if (State2.runmode) {
 1068              		.loc 1 1562 3 is_stmt 1 view .LVU346
 1069              	.LVL81:
1563:src/keys.c    **** 			if (LocalRegs == 0)
 1070              		.loc 1 1563 3 view .LVU347
1563:src/keys.c    **** 			if (LocalRegs == 0)
 1071              		.loc 1 1563 6 is_stmt 0 view .LVU348
 1072 0022 5E06     		lsls	r6, r3, #25
 1073 0024 37D4     		bmi	.L129
 1074              	.LVL82:
 1075              	.L117:
1562:src/keys.c    **** 		if (State2.runmode) {
 1076              		.loc 1 1562 7 view .LVU349
 1077 0026 0F20     		movs	r0, #15
 1078              	.LVL83:
 1079              	.L107:
1580:src/keys.c    **** 		return STATE_UNFINISHED;
 1080              		.loc 1 1580 2 is_stmt 1 view .LVU350
1580:src/keys.c    **** 		return STATE_UNFINISHED;
 1081              		.loc 1 1580 5 is_stmt 0 view .LVU351
 1082 0028 8542     		cmp	r5, r0
 1083 002a 1BDC     		bgt	.L111
 1084              	.L132:
1583:src/keys.c    **** 	++State2.numdigit;
 1085              		.loc 1 1583 2 is_stmt 1 view .LVU352
1584:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1086              		.loc 1 1584 2 is_stmt 0 view .LVU353
 1087 002c E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1583:src/keys.c    **** 	++State2.numdigit;
 1088              		.loc 1 1583 16 view .LVU354
 1089 002e 2581     		strh	r5, [r4, #8]	@ movhi
1584:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1090              		.loc 1 1584 2 is_stmt 1 view .LVU355
 1091 0030 0136     		adds	r6, r6, #1
1585:src/keys.c    **** 		int result = arg_eval(val);
 1092              		.loc 1 1585 16 is_stmt 0 view .LVU356
 1093 0032 05EB8503 		add	r3, r5, r5, lsl #2
1584:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1094              		.loc 1 1584 2 view .LVU357
 1095 0036 F6B2     		uxtb	r6, r6
1585:src/keys.c    **** 		int result = arg_eval(val);
 1096              		.loc 1 1585 5 view .LVU358
 1097 0038 B0EB430F 		cmp	r0, r3, lsl #1
1584:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1098              		.loc 1 1584 2 view .LVU359
 1099 003c E672     		strb	r6, [r4, #11]
1585:src/keys.c    **** 		int result = arg_eval(val);
 1100              		.loc 1 1585 2 is_stmt 1 view .LVU360
1585:src/keys.c    **** 		int result = arg_eval(val);
 1101              		.loc 1 1585 5 is_stmt 0 view .LVU361
ARM GAS  /tmp/ccOshYsA.s 			page 70


 1102 003e 04DB     		blt	.L115
1585:src/keys.c    **** 		int result = arg_eval(val);
 1103              		.loc 1 1585 49 discriminator 1 view .LVU362
 1104 0040 3846     		mov	r0, r7
 1105              	.LVL84:
1585:src/keys.c    **** 		int result = arg_eval(val);
 1106              		.loc 1 1585 49 discriminator 1 view .LVU363
 1107 0042 FFF7FEFF 		bl	num_arg_digits
 1108              	.LVL85:
1585:src/keys.c    **** 		int result = arg_eval(val);
 1109              		.loc 1 1585 27 discriminator 1 view .LVU364
 1110 0046 8642     		cmp	r6, r0
 1111 0048 0CDB     		blt	.L111
 1112              	.L115:
 1113              	.LBB260:
1586:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1114              		.loc 1 1586 3 is_stmt 1 view .LVU365
1586:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1115              		.loc 1 1586 16 is_stmt 0 view .LVU366
 1116 004a 2846     		mov	r0, r5
 1117 004c FFF7FEFF 		bl	arg_eval
 1118              	.LVL86:
1587:src/keys.c    **** 			--State2.numdigit;
 1119              		.loc 1 1587 3 is_stmt 1 view .LVU367
1587:src/keys.c    **** 			--State2.numdigit;
 1120              		.loc 1 1587 6 is_stmt 0 view .LVU368
 1121 0050 3328     		cmp	r0, #51
 1122 0052 2DD0     		beq	.L130
 1123              	.LBE260:
1594:src/keys.c    **** 
 1124              		.loc 1 1594 1 view .LVU369
 1125 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1126              	.LVL87:
 1127              	.L133:
1560:src/keys.c    **** 		// Handle local registers and flags
 1128              		.loc 1 1560 2 is_stmt 1 view .LVU370
1560:src/keys.c    **** 		// Handle local registers and flags
 1129              		.loc 1 1560 5 is_stmt 0 view .LVU371
 1130 0056 DA07     		lsls	r2, r3, #31
 1131 0058 E3D4     		bmi	.L128
 1132              	.L105:
1574:src/keys.c    **** 	else {
 1133              		.loc 1 1574 3 is_stmt 1 view .LVU372
1574:src/keys.c    **** 	else {
 1134              		.loc 1 1574 65 is_stmt 0 view .LVU373
 1135 005a 5B06     		lsls	r3, r3, #25
 1136 005c 32D4     		bmi	.L131
 1137 005e 6320     		movs	r0, #99
 1138              	.LVL88:
1580:src/keys.c    **** 		return STATE_UNFINISHED;
 1139              		.loc 1 1580 2 is_stmt 1 view .LVU374
1580:src/keys.c    **** 		return STATE_UNFINISHED;
 1140              		.loc 1 1580 5 is_stmt 0 view .LVU375
 1141 0060 8542     		cmp	r5, r0
 1142 0062 E3DD     		ble	.L132
 1143              	.LVL89:
 1144              	.L111:
ARM GAS  /tmp/ccOshYsA.s 			page 71


1565:src/keys.c    **** 			if (is_reg) {
 1145              		.loc 1 1565 12 view .LVU376
 1146 0064 3320     		movs	r0, #51
1594:src/keys.c    **** 
 1147              		.loc 1 1594 1 view .LVU377
 1148 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1149              	.LVL90:
 1150              	.L103:
1558:src/keys.c    **** 	
 1151              		.loc 1 1558 39 discriminator 2 view .LVU378
 1152 0068 94F91530 		ldrsb	r3, [r4, #21]
 1153 006c 002B     		cmp	r3, #0
1560:src/keys.c    **** 		// Handle local registers and flags
 1154              		.loc 1 1560 6 discriminator 2 view .LVU379
 1155 006e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1558:src/keys.c    **** 	
 1156              		.loc 1 1558 39 discriminator 2 view .LVU380
 1157 0070 F1DB     		blt	.L133
 1158              	.LVL91:
1560:src/keys.c    **** 		// Handle local registers and flags
 1159              		.loc 1 1560 2 is_stmt 1 view .LVU381
1560:src/keys.c    **** 		// Handle local registers and flags
 1160              		.loc 1 1560 5 is_stmt 0 view .LVU382
 1161 0072 D807     		lsls	r0, r3, #31
 1162 0074 07D5     		bpl	.L110
1562:src/keys.c    **** 		if (State2.runmode) {
 1163              		.loc 1 1562 3 is_stmt 1 view .LVU383
 1164              	.LVL92:
1563:src/keys.c    **** 			if (LocalRegs == 0)
 1165              		.loc 1 1563 3 view .LVU384
1563:src/keys.c    **** 			if (LocalRegs == 0)
 1166              		.loc 1 1563 6 is_stmt 0 view .LVU385
 1167 0076 5A06     		lsls	r2, r3, #25
 1168 0078 D5D5     		bpl	.L117
1564:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1169              		.loc 1 1564 4 is_stmt 1 view .LVU386
1564:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1170              		.loc 1 1564 8 is_stmt 0 view .LVU387
 1171 007a 174B     		ldr	r3, .L134+8
1564:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1172              		.loc 1 1564 7 view .LVU388
 1173 007c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1174 0080 002B     		cmp	r3, #0
 1175 0082 D0D1     		bne	.L117
 1176 0084 EEE7     		b	.L111
 1177              	.LVL93:
 1178              	.L110:
1573:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1179              		.loc 1 1573 7 is_stmt 1 view .LVU389
1576:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1180              		.loc 1 1576 3 view .LVU390
1576:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1181              		.loc 1 1576 7 is_stmt 0 view .LVU391
 1182 0086 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1183              	.LVL94:
1577:src/keys.c    **** 			lim = RARG_IND - 1;
 1184              		.loc 1 1577 3 is_stmt 1 view .LVU392
ARM GAS  /tmp/ccOshYsA.s 			page 72


1577:src/keys.c    **** 			lim = RARG_IND - 1;
 1185              		.loc 1 1577 6 is_stmt 0 view .LVU393
 1186 0088 7F28     		cmp	r0, #127
 1187 008a CDDD     		ble	.L107
1578:src/keys.c    **** 	}
 1188              		.loc 1 1578 8 discriminator 1 view .LVU394
 1189 008c 11F0010F 		tst	r1, #1
 1190 0090 18BF     		it	ne
 1191 0092 7F20     		movne	r0, #127
 1192              	.LVL95:
1578:src/keys.c    **** 	}
 1193              		.loc 1 1578 8 discriminator 1 view .LVU395
 1194 0094 C8E7     		b	.L107
 1195              	.LVL96:
 1196              	.L129:
1564:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1197              		.loc 1 1564 4 is_stmt 1 view .LVU396
1564:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1198              		.loc 1 1564 8 is_stmt 0 view .LVU397
 1199 0096 104B     		ldr	r3, .L134+8
1564:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1200              		.loc 1 1564 7 view .LVU398
 1201 0098 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1202 009c 002B     		cmp	r3, #0
 1203 009e E1D0     		beq	.L111
1567:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1204              		.loc 1 1567 5 is_stmt 1 view .LVU399
1567:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1205              		.loc 1 1567 11 is_stmt 0 view .LVU400
 1206 00a0 3846     		mov	r0, r7
 1207 00a2 FFF7FEFF 		bl	local_regs_rarg
 1208              	.LVL97:
1568:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1209              		.loc 1 1568 5 is_stmt 1 view .LVU401
1567:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1210              		.loc 1 1567 9 is_stmt 0 view .LVU402
 1211 00a6 0138     		subs	r0, r0, #1
 1212              	.LVL98:
1567:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1213              		.loc 1 1567 9 view .LVU403
 1214 00a8 0F28     		cmp	r0, #15
 1215 00aa A8BF     		it	ge
 1216 00ac 0F20     		movge	r0, #15
 1217              	.LVL99:
1567:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1218              		.loc 1 1567 9 view .LVU404
 1219 00ae BBE7     		b	.L107
 1220              	.LVL100:
 1221              	.L130:
 1222              	.LBB261:
1588:src/keys.c    **** 			State2.digval /= 10;
 1223              		.loc 1 1588 4 is_stmt 1 view .LVU405
1589:src/keys.c    **** 		}
 1224              		.loc 1 1589 18 is_stmt 0 view .LVU406
 1225 00b0 2389     		ldrh	r3, [r4, #8]
 1226 00b2 0A49     		ldr	r1, .L134+12
1588:src/keys.c    **** 			State2.digval /= 10;
ARM GAS  /tmp/ccOshYsA.s 			page 73


 1227              		.loc 1 1588 4 view .LVU407
 1228 00b4 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
1589:src/keys.c    **** 		}
 1229              		.loc 1 1589 18 view .LVU408
 1230 00b6 A1FB0313 		umull	r1, r3, r1, r3
 1231 00ba DB08     		lsrs	r3, r3, #3
1588:src/keys.c    **** 			State2.digval /= 10;
 1232              		.loc 1 1588 4 view .LVU409
 1233 00bc 013A     		subs	r2, r2, #1
1589:src/keys.c    **** 		}
 1234              		.loc 1 1589 18 view .LVU410
 1235 00be 2381     		strh	r3, [r4, #8]	@ movhi
1588:src/keys.c    **** 			State2.digval /= 10;
 1236              		.loc 1 1588 4 view .LVU411
 1237 00c0 E272     		strb	r2, [r4, #11]
1589:src/keys.c    **** 		}
 1238              		.loc 1 1589 4 is_stmt 1 view .LVU412
 1239              	.LBE261:
1594:src/keys.c    **** 
 1240              		.loc 1 1594 1 is_stmt 0 view .LVU413
 1241 00c2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1242              	.LVL101:
 1243              	.L131:
1574:src/keys.c    **** 	else {
 1244              		.loc 1 1574 26 discriminator 1 view .LVU414
 1245 00c4 3846     		mov	r0, r7
 1246 00c6 FFF7FEFF 		bl	global_regs_rarg
 1247              	.LVL102:
1574:src/keys.c    **** 	else {
 1248              		.loc 1 1574 61 discriminator 1 view .LVU415
 1249 00ca 0138     		subs	r0, r0, #1
 1250 00cc ACE7     		b	.L107
 1251              	.L135:
 1252 00ce 00BF     		.align	2
 1253              	.L134:
 1254 00d0 00000000 		.word	StateWhileOn
 1255 00d4 00000000 		.word	argcmds
 1256 00d8 00000000 		.word	PersistentRam
 1257 00dc CDCCCCCC 		.word	-858993459
 1258              		.cfi_endproc
 1259              	.LFE31:
 1261              		.section	.text.intltr,"ax",%progbits
 1262              		.align	1
 1263              		.p2align 2,,3
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1267              		.fpu fpv4-sp-d16
 1269              	intltr:
 1270              	.LVL103:
 1271              	.LFB18:
 685:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1272              		.loc 1 685 26 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 686:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 74


 1276              		.loc 1 686 2 view .LVU417
 686:src/keys.c    **** }
 1277              		.loc 1 686 10 is_stmt 0 view .LVU418
 1278 0000 0B4B     		ldr	r3, .L145
 1279 0002 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 686:src/keys.c    **** }
 1280              		.loc 1 686 22 view .LVU419
 1281 0006 13F00103 		ands	r3, r3, #1
 1282 000a 05D0     		beq	.L138
 686:src/keys.c    **** }
 1283              		.loc 1 686 26 discriminator 1 view .LVU420
 1284 000c 094B     		ldr	r3, .L145+4
 1285 000e 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 686:src/keys.c    **** }
 1286              		.loc 1 686 22 discriminator 1 view .LVU421
 1287 0010 5B06     		lsls	r3, r3, #25
 1288 0012 03D4     		bmi	.L144
 686:src/keys.c    **** }
 1289              		.loc 1 686 22 view .LVU422
 1290 0014 0120     		movs	r0, #1
 1291              	.LVL104:
 687:src/keys.c    **** 
 1292              		.loc 1 687 1 view .LVU423
 1293 0016 7047     		bx	lr
 1294              	.LVL105:
 1295              	.L138:
 686:src/keys.c    **** }
 1296              		.loc 1 686 22 view .LVU424
 1297 0018 1846     		mov	r0, r3
 1298              	.LVL106:
 686:src/keys.c    **** }
 1299              		.loc 1 686 22 view .LVU425
 1300 001a 7047     		bx	lr
 1301              	.LVL107:
 1302              	.L144:
 685:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1303              		.loc 1 685 26 view .LVU426
 1304 001c 10B5     		push	{r4, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 4, -8
 1307              		.cfi_offset 14, -4
 1308 001e 0446     		mov	r4, r0
 1309              	.LVL108:
 1310              	.LBB264:
 1311              	.LBI264:
 685:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1312              		.loc 1 685 12 is_stmt 1 view .LVU427
 1313              	.LBB265:
 686:src/keys.c    **** }
 1314              		.loc 1 686 52 is_stmt 0 view .LVU428
 1315 0020 FFF7FEFF 		bl	int_base
 1316              	.LVL109:
 686:src/keys.c    **** }
 1317              		.loc 1 686 43 view .LVU429
 1318 0024 8442     		cmp	r4, r0
 1319 0026 ACBF     		ite	ge
 1320 0028 0020     		movge	r0, #0
ARM GAS  /tmp/ccOshYsA.s 			page 75


 1321 002a 0120     		movlt	r0, #1
 1322              	.LBE265:
 1323              	.LBE264:
 687:src/keys.c    **** 
 1324              		.loc 1 687 1 view .LVU430
 1325 002c 10BD     		pop	{r4, pc}
 1326              	.LVL110:
 1327              	.L146:
 687:src/keys.c    **** 
 1328              		.loc 1 687 1 view .LVU431
 1329 002e 00BF     		.align	2
 1330              	.L145:
 1331 0030 00000000 		.word	PersistentRam
 1332 0034 00000000 		.word	StateWhileOn
 1333              		.cfi_endproc
 1334              	.LFE18:
 1336              		.section	.text.set_window,"ax",%progbits
 1337              		.align	1
 1338              		.p2align 2,,3
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu fpv4-sp-d16
 1344              	set_window:
 1345              	.LVL111:
 1346              	.LFB53:
2556:src/keys.c    **** 
2557:src/keys.c    **** 
2558:src/keys.c    **** /*
2559:src/keys.c    ****  *  CAT command
2560:src/keys.c    ****  */
2561:src/keys.c    **** static int process_labellist(const keycode c) {
2562:src/keys.c    **** 	unsigned int pc = State2.digval;
2563:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2564:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2565:src/keys.c    **** 	const int opcode = getprog(pc);
2566:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2567:src/keys.c    **** 	const int direct = State2.runmode;
2568:src/keys.c    **** 	const enum shifts shift = reset_shift();
2569:src/keys.c    **** 	int op = STATE_UNFINISHED;
2570:src/keys.c    **** 
2571:src/keys.c    **** 	if (n < REGION_XROM) {
2572:src/keys.c    **** 		// Digits take you to that segment
2573:src/keys.c    **** 		pc = addrLIB(1, n);
2574:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2575:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2576:src/keys.c    **** 		State2.digval = pc;
2577:src/keys.c    **** 		return STATE_UNFINISHED;
2578:src/keys.c    **** 	}
2579:src/keys.c    **** 
2580:src/keys.c    **** 	switch (c | (shift << 8)) {
2581:src/keys.c    **** 
2582:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2583:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2584:src/keys.c    **** 		goto next;
2585:src/keys.c    **** 
2586:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
ARM GAS  /tmp/ccOshYsA.s 			page 76


2587:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2588:src/keys.c    **** 	case K_DOWN:				// Find next label
2589:src/keys.c    **** 	next:
2590:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2591:src/keys.c    **** 		return STATE_UNFINISHED;
2592:src/keys.c    **** 
2593:src/keys.c    **** 	case K_UP:				// Find previous label
2594:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2595:src/keys.c    **** 		return STATE_UNFINISHED;
2596:src/keys.c    **** 
2597:src/keys.c    **** 	case K24:				// <- exits
2598:src/keys.c    **** 		break;
2599:src/keys.c    **** 
2600:src/keys.c    **** 	case K20:				// ENTER^
2601:src/keys.c    **** 	set_pc_and_exit:
2602:src/keys.c    **** 		set_pc(pc);			// forced branch
2603:src/keys.c    **** 		break;
2604:src/keys.c    **** 
2605:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2606:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2607:src/keys.c    **** 		goto set_pc_and_exit;
2608:src/keys.c    **** 
2609:src/keys.c    **** 	case K10:				// STO
2610:src/keys.c    **** 	case K11:				// RCL
2611:src/keys.c    **** #ifndef DM42	
2612:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2613:src/keys.c    **** #endif
2614:src/keys.c    **** #ifdef DM42
2615:src/keys.c    **** 	        op = OP_NIL;
2616:src/keys.c    **** #endif	    
2617:src/keys.c    **** 	  goto set_pc_and_exit;
2618:src/keys.c    **** #ifdef DM42
2619:src/keys.c    **** 	case K05:				// XEQ
2620:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2621:src/keys.c    **** 		goto xeq_or_gto;
2622:src/keys.c    **** 
2623:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2624:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2625:src/keys.c    **** 	xeq_or_gto:
2626:src/keys.c    **** 		if (label)
2627:src/keys.c    **** 			break;
2628:src/keys.c    **** 		return STATE_UNFINISHED;
2629:src/keys.c    **** #else
2630:src/keys.c    **** 	case K30:				// XEQ
2631:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2632:src/keys.c    **** 		goto xeq_or_gto;
2633:src/keys.c    **** 
2634:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2635:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2636:src/keys.c    **** 	xeq_or_gto:
2637:src/keys.c    **** 		if (label)
2638:src/keys.c    **** 			break;
2639:src/keys.c    **** 		return STATE_UNFINISHED;
2640:src/keys.c    **** #endif		
2641:src/keys.c    **** 	case K63:				// R/S
2642:src/keys.c    **** 		if (direct && label) {
2643:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
ARM GAS  /tmp/ccOshYsA.s 			page 77


2644:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2645:src/keys.c    **** 			break;
2646:src/keys.c    **** 		}
2647:src/keys.c    **** 		return STATE_UNFINISHED;
2648:src/keys.c    **** 
2649:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2650:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2651:src/keys.c    **** 		goto set_pc_and_exit;
2652:src/keys.c    **** 
2653:src/keys.c    **** 	default:
2654:src/keys.c    **** 		return STATE_UNFINISHED;
2655:src/keys.c    **** 	}
2656:src/keys.c    **** 	State2.digval = 0;
2657:src/keys.c    **** 	State2.labellist = 0;
2658:src/keys.c    **** 	return check_confirm(op);
2659:src/keys.c    **** }
2660:src/keys.c    **** 
2661:src/keys.c    **** 
2662:src/keys.c    **** static void set_window(int c) {
 1347              		.loc 1 2662 31 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
2663:src/keys.c    **** 
2664:src/keys.c    **** 	if (State2.runmode) {
 1351              		.loc 1 2664 2 view .LVU433
2662:src/keys.c    **** 
 1352              		.loc 1 2662 31 is_stmt 0 view .LVU434
 1353 0000 38B5     		push	{r3, r4, r5, lr}
 1354              		.cfi_def_cfa_offset 16
 1355              		.cfi_offset 3, -16
 1356              		.cfi_offset 4, -12
 1357              		.cfi_offset 5, -8
 1358              		.cfi_offset 14, -4
 1359              		.loc 1 2664 6 view .LVU435
 1360 0002 224C     		ldr	r4, .L162
 1361 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1362              		.loc 1 2664 5 view .LVU436
 1363 0006 5A06     		lsls	r2, r3, #25
 1364 0008 00D4     		bmi	.L159
 1365              	.LVL112:
 1366              	.L147:
2665:src/keys.c    **** 		process_cmdline_set_lift();
2666:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2667:src/keys.c    **** 		State2.disp_freeze = 0;
2668:src/keys.c    **** 		display();	
2669:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2670:src/keys.c    **** 			if (UState.intm) {
2671:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2672:src/keys.c    **** 					State2.window--;
2673:src/keys.c    **** 				return;
2674:src/keys.c    **** 			}
2675:src/keys.c    **** 			else 
2676:src/keys.c    **** 				State2.window = is_dblmode();
2677:src/keys.c    **** 		}
2678:src/keys.c    **** 		else {
2679:src/keys.c    **** 			if (UState.intm) {
ARM GAS  /tmp/ccOshYsA.s 			page 78


2680:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2681:src/keys.c    **** 					State2.window++;
2682:src/keys.c    **** 				return;
2683:src/keys.c    **** 			}
2684:src/keys.c    **** 			else
2685:src/keys.c    **** 				State2.window = 0;
2686:src/keys.c    **** 		}
2687:src/keys.c    **** 		set_smode(SDISP_SHOW);
2688:src/keys.c    **** 	}
2689:src/keys.c    **** }
 1367              		.loc 1 2689 1 view .LVU437
 1368 000a 38BD     		pop	{r3, r4, r5, pc}
 1369              	.LVL113:
 1370              	.L159:
2665:src/keys.c    **** 		process_cmdline_set_lift();
 1371              		.loc 1 2665 3 is_stmt 1 view .LVU438
 1372 000c 0546     		mov	r5, r0
 1373 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1374              	.LVL114:
2667:src/keys.c    **** 		display();	
 1375              		.loc 1 2667 3 view .LVU439
2667:src/keys.c    **** 		display();	
 1376              		.loc 1 2667 22 is_stmt 0 view .LVU440
 1377 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1378 0014 6FF30413 		bfc	r3, #4, #1
 1379 0018 E375     		strb	r3, [r4, #23]
2668:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1380              		.loc 1 2668 3 is_stmt 1 view .LVU441
 1381 001a FFF7FEFF 		bl	display
 1382              	.LVL115:
2669:src/keys.c    **** 			if (UState.intm) {
 1383              		.loc 1 2669 3 view .LVU442
2670:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1384              		.loc 1 2670 8 is_stmt 0 view .LVU443
 1385 001e 1C4B     		ldr	r3, .L162+4
2669:src/keys.c    **** 			if (UState.intm) {
 1386              		.loc 1 2669 6 view .LVU444
 1387 0020 2C2D     		cmp	r5, #44
2670:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1388              		.loc 1 2670 8 view .LVU445
 1389 0022 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2669:src/keys.c    **** 			if (UState.intm) {
 1390              		.loc 1 2669 6 view .LVU446
 1391 0026 18D0     		beq	.L160
2679:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1392              		.loc 1 2679 4 is_stmt 1 view .LVU447
2679:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1393              		.loc 1 2679 7 is_stmt 0 view .LVU448
 1394 0028 13F00103 		ands	r3, r3, #1
 1395 002c 09D1     		bne	.L161
2685:src/keys.c    **** 		}
 1396              		.loc 1 2685 5 is_stmt 1 view .LVU449
2685:src/keys.c    **** 		}
 1397              		.loc 1 2685 19 is_stmt 0 view .LVU450
 1398 002e 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1399 0030 63F3C502 		bfi	r2, r3, #3, #3
 1400 0034 2275     		strb	r2, [r4, #20]
ARM GAS  /tmp/ccOshYsA.s 			page 79


 1401              	.L153:
2687:src/keys.c    **** 	}
 1402              		.loc 1 2687 3 is_stmt 1 view .LVU451
 1403              	.LVL116:
 1404              	.LBB272:
 1405              	.LBI272:
 665:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1406              		.loc 1 665 13 view .LVU452
 1407              	.LBB273:
 666:src/keys.c    **** }
 1408              		.loc 1 666 2 view .LVU453
 666:src/keys.c    **** }
 1409              		.loc 1 666 15 is_stmt 0 view .LVU454
 1410 0036 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1411 0038 013B     		subs	r3, r3, #1
 1412 003a 18BF     		it	ne
 1413 003c 0123     		movne	r3, #1
 1414 003e 6374     		strb	r3, [r4, #17]
 1415              	.LVL117:
 666:src/keys.c    **** }
 1416              		.loc 1 666 15 view .LVU455
 1417              	.LBE273:
 1418              	.LBE272:
 1419              		.loc 1 2689 1 view .LVU456
 1420 0040 38BD     		pop	{r3, r4, r5, pc}
 1421              	.LVL118:
 1422              	.L161:
2680:src/keys.c    **** 					State2.window++;
 1423              		.loc 1 2680 5 is_stmt 1 view .LVU457
2680:src/keys.c    **** 					State2.window++;
 1424              		.loc 1 2680 22 is_stmt 0 view .LVU458
 1425 0042 144A     		ldr	r2, .L162+8
2680:src/keys.c    **** 					State2.window++;
 1426              		.loc 1 2680 42 view .LVU459
 1427 0044 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2680:src/keys.c    **** 					State2.window++;
 1428              		.loc 1 2680 8 view .LVU460
 1429 0046 1168     		ldr	r1, [r2]
2680:src/keys.c    **** 					State2.window++;
 1430              		.loc 1 2680 42 view .LVU461
 1431 0048 C3F3C202 		ubfx	r2, r3, #3, #3
2680:src/keys.c    **** 					State2.window++;
 1432              		.loc 1 2680 8 view .LVU462
 1433 004c 8A42     		cmp	r2, r1
 1434 004e DCDA     		bge	.L147
2681:src/keys.c    **** 				return;
 1435              		.loc 1 2681 6 is_stmt 1 view .LVU463
2681:src/keys.c    **** 				return;
 1436              		.loc 1 2681 19 is_stmt 0 view .LVU464
 1437 0050 0132     		adds	r2, r2, #1
 1438 0052 62F3C503 		bfi	r3, r2, #3, #3
 1439 0056 2375     		strb	r3, [r4, #20]
 1440              		.loc 1 2689 1 view .LVU465
 1441 0058 38BD     		pop	{r3, r4, r5, pc}
 1442              	.LVL119:
 1443              	.L160:
2670:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
ARM GAS  /tmp/ccOshYsA.s 			page 80


 1444              		.loc 1 2670 4 is_stmt 1 view .LVU466
2670:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1445              		.loc 1 2670 7 is_stmt 0 view .LVU467
 1446 005a DB07     		lsls	r3, r3, #31
 1447 005c 0ED5     		bpl	.L151
 1448              	.LBB274:
 1449              	.LBI274:
2662:src/keys.c    **** 
 1450              		.loc 1 2662 13 is_stmt 1 view .LVU468
 1451              	.LVL120:
 1452              	.LBB275:
2671:src/keys.c    **** 					State2.window--;
 1453              		.loc 1 2671 5 view .LVU469
2671:src/keys.c    **** 					State2.window--;
 1454              		.loc 1 2671 22 is_stmt 0 view .LVU470
 1455 005e 0D4B     		ldr	r3, .L162+8
2671:src/keys.c    **** 					State2.window--;
 1456              		.loc 1 2671 8 view .LVU471
 1457 0060 1B68     		ldr	r3, [r3]
 1458 0062 002B     		cmp	r3, #0
 1459 0064 D1DD     		ble	.L147
2671:src/keys.c    **** 					State2.window--;
 1460              		.loc 1 2671 43 view .LVU472
 1461 0066 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2671:src/keys.c    **** 					State2.window--;
 1462              		.loc 1 2671 26 view .LVU473
 1463 0068 13F0380F 		tst	r3, #56
 1464 006c CDD0     		beq	.L147
2672:src/keys.c    **** 				return;
 1465              		.loc 1 2672 6 is_stmt 1 view .LVU474
2672:src/keys.c    **** 				return;
 1466              		.loc 1 2672 12 is_stmt 0 view .LVU475
 1467 006e C3F3C202 		ubfx	r2, r3, #3, #3
2672:src/keys.c    **** 				return;
 1468              		.loc 1 2672 19 view .LVU476
 1469 0072 0732     		adds	r2, r2, #7
 1470 0074 62F3C503 		bfi	r3, r2, #3, #3
 1471 0078 2375     		strb	r3, [r4, #20]
 1472              	.LBE275:
 1473              	.LBE274:
 1474              		.loc 1 2689 1 view .LVU477
 1475 007a 38BD     		pop	{r3, r4, r5, pc}
 1476              	.LVL121:
 1477              	.L151:
2676:src/keys.c    **** 		}
 1478              		.loc 1 2676 5 is_stmt 1 view .LVU478
2676:src/keys.c    **** 		}
 1479              		.loc 1 2676 21 is_stmt 0 view .LVU479
 1480 007c FFF7FEFF 		bl	is_dblmode
 1481              	.LVL122:
2676:src/keys.c    **** 		}
 1482              		.loc 1 2676 19 view .LVU480
 1483 0080 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1484 0082 60F3C503 		bfi	r3, r0, #3, #3
 1485 0086 2375     		strb	r3, [r4, #20]
 1486 0088 D5E7     		b	.L153
 1487              	.L163:
ARM GAS  /tmp/ccOshYsA.s 			page 81


 1488 008a 00BF     		.align	2
 1489              	.L162:
 1490 008c 00000000 		.word	StateWhileOn
 1491 0090 00000000 		.word	PersistentRam
 1492 0094 00000000 		.word	IntMaxWindow
 1493              		.cfi_endproc
 1494              	.LFE53:
 1496              		.section	.text.arg_storcl,"ax",%progbits
 1497              		.align	1
 1498              		.p2align 2,,3
 1499              		.syntax unified
 1500              		.thumb
 1501              		.thumb_func
 1502              		.fpu fpv4-sp-d16
 1504              	arg_storcl:
 1505              	.LVL123:
 1506              	.LFB34:
1619:src/keys.c    **** 	unsigned int b = CmdBase;
 1507              		.loc 1 1619 56 is_stmt 1 view -0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              		@ link register save eliminated.
1620:src/keys.c    **** 
 1512              		.loc 1 1620 2 view .LVU482
1620:src/keys.c    **** 
 1513              		.loc 1 1620 19 is_stmt 0 view .LVU483
 1514 0000 0F4A     		ldr	r2, .L196
 1515 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1516              	.LVL124:
1622:src/keys.c    **** 		CmdBase += n;
 1517              		.loc 1 1622 2 is_stmt 1 view .LVU484
 1518              	.LBB284:
 1519              	.LBI284:
1610:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1520              		.loc 1 1610 12 view .LVU485
 1521              	.LBB285:
1615:src/keys.c    **** #endif
 1522              		.loc 1 1615 2 view .LVU486
1615:src/keys.c    **** #endif
 1523              		.loc 1 1615 41 is_stmt 0 view .LVU487
 1524 0004 032B     		cmp	r3, #3
 1525 0006 14D0     		beq	.L165
1615:src/keys.c    **** #endif
 1526              		.loc 1 1615 24 view .LVU488
 1527 0008 0A2B     		cmp	r3, #10
 1528 000a 12D0     		beq	.L165
 1529              	.LVL125:
 1530              	.LBB286:
 1531              	.LBI286:
1610:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1532              		.loc 1 1610 12 is_stmt 1 view .LVU489
 1533              	.LBB287:
1615:src/keys.c    **** #endif
 1534              		.loc 1 1615 41 is_stmt 0 view .LVU490
 1535 000c 19B1     		cbz	r1, .L166
1615:src/keys.c    **** #endif
ARM GAS  /tmp/ccOshYsA.s 			page 82


 1536              		.loc 1 1615 51 view .LVU491
 1537 000e 152B     		cmp	r3, #21
 1538 0010 0FD0     		beq	.L165
1615:src/keys.c    **** #endif
 1539              		.loc 1 1615 70 view .LVU492
 1540 0012 1A2B     		cmp	r3, #26
 1541 0014 0DD0     		beq	.L165
 1542              	.L166:
 1543              	.LVL126:
1615:src/keys.c    **** #endif
 1544              		.loc 1 1615 70 view .LVU493
 1545              	.LBE287:
 1546              	.LBE286:
 1547              	.LBE285:
 1548              	.LBE284:
1627:src/keys.c    **** 		b -= n;
 1549              		.loc 1 1627 2 is_stmt 1 view .LVU494
1627:src/keys.c    **** 		b -= n;
 1550              		.loc 1 1627 5 is_stmt 0 view .LVU495
 1551 0016 8342     		cmp	r3, r0
 1552 0018 09D3     		bcc	.L171
1628:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1553              		.loc 1 1628 3 is_stmt 1 view .LVU496
1628:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1554              		.loc 1 1628 5 is_stmt 0 view .LVU497
 1555 001a 1B1A     		subs	r3, r3, r0
 1556              	.LVL127:
1629:src/keys.c    **** 			CmdBase = b;
 1557              		.loc 1 1629 3 is_stmt 1 view .LVU498
 1558              	.LBB288:
 1559              	.LBI288:
1610:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1560              		.loc 1 1610 12 view .LVU499
 1561              	.LBB289:
1615:src/keys.c    **** #endif
 1562              		.loc 1 1615 2 view .LVU500
1615:src/keys.c    **** #endif
 1563              		.loc 1 1615 41 is_stmt 0 view .LVU501
 1564 001c 032B     		cmp	r3, #3
 1565 001e 0CD0     		beq	.L169
1615:src/keys.c    **** #endif
 1566              		.loc 1 1615 24 view .LVU502
 1567 0020 0A2B     		cmp	r3, #10
 1568 0022 0AD0     		beq	.L169
 1569              	.LVL128:
 1570              	.LBB290:
 1571              	.LBI290:
1610:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1572              		.loc 1 1610 12 is_stmt 1 view .LVU503
 1573              	.LBB291:
1615:src/keys.c    **** #endif
 1574              		.loc 1 1615 41 is_stmt 0 view .LVU504
 1575 0024 19B1     		cbz	r1, .L171
1615:src/keys.c    **** #endif
 1576              		.loc 1 1615 51 view .LVU505
 1577 0026 152B     		cmp	r3, #21
 1578 0028 07D0     		beq	.L169
ARM GAS  /tmp/ccOshYsA.s 			page 83


1615:src/keys.c    **** #endif
 1579              		.loc 1 1615 70 view .LVU506
 1580 002a 1A2B     		cmp	r3, #26
 1581 002c 05D0     		beq	.L169
 1582              	.LVL129:
 1583              	.L171:
1615:src/keys.c    **** #endif
 1584              		.loc 1 1615 70 view .LVU507
 1585              	.LBE291:
 1586              	.LBE290:
 1587              	.LBE289:
 1588              	.LBE288:
1634:src/keys.c    **** }
 1589              		.loc 1 1634 9 view .LVU508
 1590 002e 0020     		movs	r0, #0
 1591              	.LVL130:
1635:src/keys.c    **** 
 1592              		.loc 1 1635 1 view .LVU509
 1593 0030 7047     		bx	lr
 1594              	.LVL131:
 1595              	.L165:
1623:src/keys.c    **** 		return 1;
 1596              		.loc 1 1623 3 is_stmt 1 view .LVU510
1623:src/keys.c    **** 		return 1;
 1597              		.loc 1 1623 11 is_stmt 0 view .LVU511
 1598 0032 1844     		add	r0, r0, r3
 1599              	.LVL132:
1623:src/keys.c    **** 		return 1;
 1600              		.loc 1 1623 11 view .LVU512
 1601 0034 D077     		strb	r0, [r2, #31]
1624:src/keys.c    **** 	}
 1602              		.loc 1 1624 3 is_stmt 1 view .LVU513
1624:src/keys.c    **** 	}
 1603              		.loc 1 1624 10 is_stmt 0 view .LVU514
 1604 0036 0120     		movs	r0, #1
 1605 0038 7047     		bx	lr
 1606              	.LVL133:
 1607              	.L169:
1630:src/keys.c    **** 			return 1;
 1608              		.loc 1 1630 4 is_stmt 1 view .LVU515
1630:src/keys.c    **** 			return 1;
 1609              		.loc 1 1630 12 is_stmt 0 view .LVU516
 1610 003a D377     		strb	r3, [r2, #31]
1631:src/keys.c    **** 		}
 1611              		.loc 1 1631 4 is_stmt 1 view .LVU517
1631:src/keys.c    **** 		}
 1612              		.loc 1 1631 11 is_stmt 0 view .LVU518
 1613 003c 0120     		movs	r0, #1
 1614              	.LVL134:
1631:src/keys.c    **** 		}
 1615              		.loc 1 1631 11 view .LVU519
 1616 003e 7047     		bx	lr
 1617              	.L197:
 1618              		.align	2
 1619              	.L196:
 1620 0040 00000000 		.word	StateWhileOn
 1621              		.cfi_endproc
ARM GAS  /tmp/ccOshYsA.s 			page 84


 1622              	.LFE34:
 1624              		.section	.text.process_arg,"ax",%progbits
 1625              		.align	1
 1626              		.p2align 2,,3
 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1630              		.fpu fpv4-sp-d16
 1632              	process_arg:
 1633              	.LVL135:
 1634              	.LFB37:
1669:src/keys.c    **** 	unsigned int base = CmdBase;
 1635              		.loc 1 1669 41 is_stmt 1 view -0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 8
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
1670:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1639              		.loc 1 1670 2 view .LVU521
1669:src/keys.c    **** 	unsigned int base = CmdBase;
 1640              		.loc 1 1669 41 is_stmt 0 view .LVU522
 1641 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1642              		.cfi_def_cfa_offset 36
 1643              		.cfi_offset 4, -36
 1644              		.cfi_offset 5, -32
 1645              		.cfi_offset 6, -28
 1646              		.cfi_offset 7, -24
 1647              		.cfi_offset 8, -20
 1648              		.cfi_offset 9, -16
 1649              		.cfi_offset 10, -12
 1650              		.cfi_offset 11, -8
 1651              		.cfi_offset 14, -4
1670:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1652              		.loc 1 1670 22 view .LVU523
 1653 0004 AC4C     		ldr	r4, .L313
1672:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1654              		.loc 1 1672 31 view .LVU524
 1655 0006 DFF8C0B2 		ldr	fp, .L313+16
1670:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1656              		.loc 1 1670 22 view .LVU525
 1657 000a E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1658              	.LVL136:
1671:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1659              		.loc 1 1671 2 is_stmt 1 view .LVU526
 1660              	.LBB313:
 1661              	.LBB314:
 1662              	.LBB315:
 1663              	.LBB316:
 136:src/keys.c    **** }
 1664              		.loc 1 136 23 is_stmt 0 view .LVU527
 1665 000c AB4B     		ldr	r3, .L313+4
 1666              	.LBE316:
 1667              	.LBE315:
 232:src/keys.c    **** }
 1668              		.loc 1 232 28 view .LVU528
 1669 000e AC4A     		ldr	r2, .L313+8
 1670              	.LBB319:
 1671              	.LBB317:
ARM GAS  /tmp/ccOshYsA.s 			page 85


 136:src/keys.c    **** }
 1672              		.loc 1 136 23 view .LVU529
 1673 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1674              	.LBE317:
 1675              	.LBE319:
 1676              	.LBE314:
 1677              	.LBE313:
1672:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1678              		.loc 1 1672 31 view .LVU530
 1679 0012 0BEB0711 		add	r1, fp, r7, lsl #4
1669:src/keys.c    **** 	unsigned int base = CmdBase;
 1680              		.loc 1 1669 41 view .LVU531
 1681 0016 83B0     		sub	sp, sp, #12
 1682              		.cfi_def_cfa_offset 48
1672:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1683              		.loc 1 1672 31 view .LVU532
 1684 0018 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1685              	.LBB323:
 1686              	.LBB321:
 232:src/keys.c    **** }
 1687              		.loc 1 232 28 view .LVU533
 1688 001a 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1689              	.LBE321:
 1690              	.LBE323:
1672:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1691              		.loc 1 1672 31 view .LVU534
 1692 001e C1F38003 		ubfx	r3, r1, #2, #1
 1693 0022 0193     		str	r3, [sp, #4]
1672:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1694              		.loc 1 1672 40 view .LVU535
 1695 0024 4B07     		lsls	r3, r1, #29
 1696 0026 58BF     		it	pl
 1697 0028 94F91580 		ldrsbpl	r8, [r4, #21]
1673:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1698              		.loc 1 1673 20 view .LVU536
 1699 002c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1700 002e 0093     		str	r3, [sp]
1672:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1701              		.loc 1 1672 40 view .LVU537
 1702 0030 54BF     		ite	pl
 1703 0032 4FEAD878 		lsrpl	r8, r8, #31
 1704 0036 4FF00108 		movmi	r8, #1
1669:src/keys.c    **** 	unsigned int base = CmdBase;
 1705              		.loc 1 1669 41 view .LVU538
 1706 003a 0646     		mov	r6, r0
 1707              	.LVL137:
 1708              	.LBB324:
 1709              	.LBI313:
 208:src/keys.c    **** {
 1710              		.loc 1 208 14 is_stmt 1 view .LVU539
 1711              	.LBB322:
 210:src/keys.c    ****     // K00 - K05
 1712              		.loc 1 210 3 view .LVU540
 232:src/keys.c    **** }
 1713              		.loc 1 232 3 view .LVU541
 1714              	.LBB320:
 1715              	.LBI315:
ARM GAS  /tmp/ccOshYsA.s 			page 86


 124:src/keys.c    **** {
 1716              		.loc 1 124 12 view .LVU542
 1717              	.LBB318:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1718              		.loc 1 126 2 view .LVU543
 136:src/keys.c    **** }
 1719              		.loc 1 136 2 view .LVU544
 136:src/keys.c    **** }
 1720              		.loc 1 136 2 is_stmt 0 view .LVU545
 1721              	.LBE318:
 1722              	.LBE320:
 232:src/keys.c    **** }
 1723              		.loc 1 232 10 view .LVU546
 1724 003c 4D46     		mov	r5, r9
 1725              	.LVL138:
 232:src/keys.c    **** }
 1726              		.loc 1 232 10 view .LVU547
 1727              	.LBE322:
 1728              	.LBE324:
1672:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1729              		.loc 1 1672 2 is_stmt 1 view .LVU548
1673:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1730              		.loc 1 1673 2 view .LVU549
1674:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1731              		.loc 1 1674 2 view .LVU550
 1732              	.LBB325:
 1733              	.LBI325:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 1734              		.loc 1 102 13 view .LVU551
 1735              	.LBE325:
 103:src/keys.c    **** }
 1736              		.loc 1 103 2 view .LVU552
 1737              	.LBB340:
 1738              	.LBB326:
 1739              	.LBI326:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 1740              		.loc 1 92 20 view .LVU553
 1741              	.LBB327:
  93:src/keys.c    **** 	State2.shifts = shift;
 1742              		.loc 1 93 2 view .LVU554
 1743              	.LBB328:
 1744              	.LBI328:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 1745              		.loc 1 84 13 view .LVU555
 1746              	.LBB329:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1747              		.loc 1 85 2 view .LVU556
 1748              	.LBE329:
 1749              	.LBE328:
 1750              	.LBE327:
 1751              	.LBE326:
 1752              	.LBE340:
1672:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1753              		.loc 1 1672 31 is_stmt 0 view .LVU557
 1754 003e 4FEA071A 		lsl	r10, r7, #4
 1755              	.LBB341:
 1756              	.LBB336:
ARM GAS  /tmp/ccOshYsA.s 			page 87


 1757              	.LBB332:
 1758              	.LBB331:
 1759              	.LBB330:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1760              		.loc 1 85 18 view .LVU558
 1761 0042 FFF7FEFF 		bl	shift_down
 1762              	.LVL139:
  86:src/keys.c    **** }
 1763              		.loc 1 86 2 is_stmt 1 view .LVU559
  86:src/keys.c    **** }
 1764              		.loc 1 86 52 is_stmt 0 view .LVU560
 1765 0046 00B9     		cbnz	r0, .L200
 1766 0048 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1767              	.LVL140:
 1768              	.L200:
  86:src/keys.c    **** }
 1769              		.loc 1 86 52 view .LVU561
 1770              	.LBE330:
 1771              	.LBE331:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1772              		.loc 1 94 2 is_stmt 1 view .LVU562
 1773              	.LBE332:
 1774              	.LBE336:
 1775              	.LBE341:
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1776              		.loc 1 1675 38 is_stmt 0 view .LVU563
 1777 004a 0BEB0A01 		add	r1, fp, r10
 1778              	.LBB342:
 1779              	.LBB337:
 1780              	.LBB333:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1781              		.loc 1 94 16 view .LVU564
 1782 004e 4FF0000C 		mov	ip, #0
 1783              	.LBE333:
 1784              	.LBE337:
 1785              	.LBE342:
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1786              		.loc 1 1675 38 view .LVU565
 1787 0052 91F805E0 		ldrb	lr, [r1, #5]	@ zero_extendqisi2
 1788              	.LBB343:
 1789              	.LBB338:
 1790              	.LBB334:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1791              		.loc 1 94 16 view .LVU566
 1792 0056 84F810C0 		strb	ip, [r4, #16]
  95:src/keys.c    **** 	return r;
 1793              		.loc 1 95 2 is_stmt 1 view .LVU567
 1794              	.LBE334:
 1795              	.LBE338:
 1796              	.LBE343:
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1797              		.loc 1 1675 61 is_stmt 0 view .LVU568
 1798 005a 1EF0200F 		tst	lr, #32
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1799              		.loc 1 1675 38 view .LVU569
 1800 005e CEF34011 		ubfx	r1, lr, #5, #1
 1801              	.LBB344:
ARM GAS  /tmp/ccOshYsA.s 			page 88


 1802              	.LBB339:
 1803              	.LBB335:
  95:src/keys.c    **** 	return r;
 1804              		.loc 1 95 19 view .LVU570
 1805 0062 84F80DC0 		strb	ip, [r4, #13]
  96:src/keys.c    **** }
 1806              		.loc 1 96 2 is_stmt 1 view .LVU571
 1807              	.LVL141:
  96:src/keys.c    **** }
 1808              		.loc 1 96 2 is_stmt 0 view .LVU572
 1809              	.LBE335:
 1810              	.LBE339:
 1811              	.LBE344:
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1812              		.loc 1 1675 2 is_stmt 1 view .LVU573
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1813              		.loc 1 1675 61 is_stmt 0 view .LVU574
 1814 0066 47D0     		beq	.L201
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1815              		.loc 1 1675 61 discriminator 1 view .LVU575
 1816 0068 94F815E0 		ldrb	lr, [r4, #21]	@ zero_extendqisi2
 1817 006c 1EF0C00F 		tst	lr, #192
 1818 0070 57D1     		bne	.L202
 1819              	.LVL142:
1676:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1820              		.loc 1 1676 2 is_stmt 1 view .LVU576
1676:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1821              		.loc 1 1676 35 is_stmt 0 view .LVU577
 1822 0072 292E     		cmp	r6, #41
 1823 0074 7DD0     		beq	.L203
1677:src/keys.c    **** 
 1824              		.loc 1 1677 11 view .LVU578
 1825 0076 0128     		cmp	r0, #1
 1826 0078 00F09280 		beq	.L204
1677:src/keys.c    **** 
 1827              		.loc 1 1677 32 discriminator 3 view .LVU579
 1828 007c B9F1090F 		cmp	r9, #9
 1829 0080 00F28B80 		bhi	.L205
 1830              	.LVL143:
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 1831              		.loc 1 1679 2 is_stmt 1 view .LVU580
1680:src/keys.c    **** 		reset_arg();
 1832              		.loc 1 1680 2 view .LVU581
1680:src/keys.c    **** 		reset_arg();
 1833              		.loc 1 1680 5 is_stmt 0 view .LVU582
 1834 0084 9B2F     		cmp	r7, #155
 1835 0086 50D8     		bhi	.L262
1685:src/keys.c    **** 	  switch (n) {
 1836              		.loc 1 1685 35 view .LVU583
 1837 0088 6069     		ldr	r0, [r4, #20]
 1838              	.LVL144:
1685:src/keys.c    **** 	  switch (n) {
 1839              		.loc 1 1685 35 view .LVU584
 1840 008a 10F4103F 		tst	r0, #147456
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1841              		.loc 1 1675 61 view .LVU585
 1842 008e 4FF0010C 		mov	ip, #1
ARM GAS  /tmp/ccOshYsA.s 			page 89


1685:src/keys.c    **** 	  switch (n) {
 1843              		.loc 1 1685 35 view .LVU586
 1844 0092 7BD0     		beq	.L266
 1845              	.LVL145:
 1846              	.L213:
1708:src/keys.c    **** 		// row column shorthand addressing
 1847              		.loc 1 1708 2 is_stmt 1 view .LVU587
1733:src/keys.c    **** 	case K_F:
 1848              		.loc 1 1733 2 view .LVU588
 1849 0094 2D2E     		cmp	r6, #45
 1850 0096 4AD8     		bhi	.L300
 1851 0098 DFE816F0 		tbh	[pc, r6, lsl #1]
 1852              	.L264:
 1853 009c 4D00     		.2byte	(.L228-.L264)/2
 1854 009e 4D00     		.2byte	(.L228-.L264)/2
 1855 00a0 4D00     		.2byte	(.L228-.L264)/2
 1856 00a2 4D00     		.2byte	(.L228-.L264)/2
 1857 00a4 4900     		.2byte	(.L300-.L264)/2
 1858 00a6 4900     		.2byte	(.L300-.L264)/2
 1859 00a8 4900     		.2byte	(.L300-.L264)/2
 1860 00aa 4900     		.2byte	(.L300-.L264)/2
 1861 00ac 4D00     		.2byte	(.L228-.L264)/2
 1862 00ae 4D00     		.2byte	(.L228-.L264)/2
 1863 00b0 4D00     		.2byte	(.L228-.L264)/2
 1864 00b2 4D00     		.2byte	(.L228-.L264)/2
 1865 00b4 D700     		.2byte	(.L251-.L264)/2
 1866 00b6 4900     		.2byte	(.L300-.L264)/2
 1867 00b8 4900     		.2byte	(.L300-.L264)/2
 1868 00ba 4900     		.2byte	(.L300-.L264)/2
 1869 00bc 6901     		.2byte	(.L258-.L264)/2
 1870 00be 4900     		.2byte	(.L300-.L264)/2
 1871 00c0 DD00     		.2byte	(.L249-.L264)/2
 1872 00c2 4900     		.2byte	(.L300-.L264)/2
 1873 00c4 4900     		.2byte	(.L300-.L264)/2
 1874 00c6 4900     		.2byte	(.L300-.L264)/2
 1875 00c8 6301     		.2byte	(.L248-.L264)/2
 1876 00ca 4900     		.2byte	(.L300-.L264)/2
 1877 00cc 5701     		.2byte	(.L250-.L264)/2
 1878 00ce 5D01     		.2byte	(.L227-.L264)/2
 1879 00d0 4900     		.2byte	(.L300-.L264)/2
 1880 00d2 4900     		.2byte	(.L300-.L264)/2
 1881 00d4 9800     		.2byte	(.L245-.L264)/2
 1882 00d6 4900     		.2byte	(.L300-.L264)/2
 1883 00d8 4900     		.2byte	(.L300-.L264)/2
 1884 00da 4101     		.2byte	(.L229-.L264)/2
 1885 00dc 4B01     		.2byte	(.L230-.L264)/2
 1886 00de 5101     		.2byte	(.L231-.L264)/2
 1887 00e0 E300     		.2byte	(.L242-.L264)/2
 1888 00e2 4900     		.2byte	(.L300-.L264)/2
 1889 00e4 4700     		.2byte	(.L262-.L264)/2
 1890 00e6 4900     		.2byte	(.L300-.L264)/2
 1891 00e8 EF00     		.2byte	(.L235-.L264)/2
 1892 00ea 4900     		.2byte	(.L300-.L264)/2
 1893 00ec 1801     		.2byte	(.L239-.L264)/2
 1894 00ee B000     		.2byte	(.L221-.L264)/2
 1895 00f0 4900     		.2byte	(.L300-.L264)/2
 1896 00f2 4900     		.2byte	(.L300-.L264)/2
ARM GAS  /tmp/ccOshYsA.s 			page 90


 1897 00f4 2701     		.2byte	(.L223-.L264)/2
 1898 00f6 C800     		.2byte	(.L225-.L264)/2
 1899              	.LVL146:
 1900              		.p2align 1
 1901              	.L201:
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 1902              		.loc 1 1679 2 view .LVU589
1680:src/keys.c    **** 		reset_arg();
 1903              		.loc 1 1680 5 is_stmt 0 view .LVU590
 1904 00f8 9B2F     		cmp	r7, #155
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 1905              		.loc 1 1679 4 view .LVU591
 1906 00fa 29F08005 		bic	r5, r9, #128
 1907              	.LVL147:
1680:src/keys.c    **** 		reset_arg();
 1908              		.loc 1 1680 2 is_stmt 1 view .LVU592
1680:src/keys.c    **** 		reset_arg();
 1909              		.loc 1 1680 5 is_stmt 0 view .LVU593
 1910 00fe 14D8     		bhi	.L262
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1911              		.loc 1 1675 61 view .LVU594
 1912 0100 8C46     		mov	ip, r1
 1913              	.L210:
1685:src/keys.c    **** 	  switch (n) {
 1914              		.loc 1 1685 35 discriminator 1 view .LVU595
 1915 0102 6069     		ldr	r0, [r4, #20]
 1916              	.LVL148:
1685:src/keys.c    **** 	  switch (n) {
 1917              		.loc 1 1685 35 discriminator 1 view .LVU596
 1918 0104 10F4103F 		tst	r0, #147456
 1919 0108 C4D1     		bne	.L213
1686:src/keys.c    **** 	  case regX_idx:
 1920              		.loc 1 1686 4 is_stmt 1 view .LVU597
 1921 010a 672D     		cmp	r5, #103
 1922 010c C2D8     		bhi	.L213
 1923              	.LVL149:
 1924              	.L265:
1686:src/keys.c    **** 	  case regX_idx:
 1925              		.loc 1 1686 4 is_stmt 0 view .LVU598
 1926 010e 632D     		cmp	r5, #99
 1927 0110 3CD9     		bls	.L266
 1928 0112 653D     		subs	r5, r5, #101
 1929 0114 022D     		cmp	r5, #2
 1930 0116 00F2AA81 		bhi	.L216
 1931 011a DFE805F0 		tbb	[pc, r5]
 1932              	.L218:
 1933 011e 6B       		.byte	(.L220-.L218)/2
 1934 011f 65       		.byte	(.L219-.L218)/2
 1935 0120 6D       		.byte	(.L217-.L218)/2
 1936              	.LVL150:
 1937 0121 00       		.p2align 1
 1938              	.L202:
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 1939              		.loc 1 1679 2 is_stmt 1 view .LVU599
1680:src/keys.c    **** 		reset_arg();
 1940              		.loc 1 1680 5 is_stmt 0 view .LVU600
 1941 0122 9B2F     		cmp	r7, #155
ARM GAS  /tmp/ccOshYsA.s 			page 91


1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 1942              		.loc 1 1679 4 view .LVU601
 1943 0124 29F08005 		bic	r5, r9, #128
 1944              	.LVL151:
1680:src/keys.c    **** 		reset_arg();
 1945              		.loc 1 1680 2 is_stmt 1 view .LVU602
1680:src/keys.c    **** 		reset_arg();
 1946              		.loc 1 1680 5 is_stmt 0 view .LVU603
 1947 0128 EBD9     		bls	.L210
 1948              	.LVL152:
 1949              	.L262:
1900:src/keys.c    **** 	default:
 1950              		.loc 1 1900 3 is_stmt 1 view .LVU604
 1951 012a FFF7FEFF 		bl	reset_arg
 1952              	.LVL153:
 1953              	.L300:
1904:src/keys.c    **** }
 1954              		.loc 1 1904 9 is_stmt 0 view .LVU605
 1955 012e 3320     		movs	r0, #51
 1956              	.L198:
1905:src/keys.c    **** 
 1957              		.loc 1 1905 1 view .LVU606
 1958 0130 03B0     		add	sp, sp, #12
 1959              		.cfi_remember_state
 1960              		.cfi_def_cfa_offset 36
 1961              	.LVL154:
1905:src/keys.c    **** 
 1962              		.loc 1 1905 1 view .LVU607
 1963              		@ sp needed
 1964 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1965              	.LVL155:
 1966              	.L228:
 1967              		.cfi_restore_state
1788:src/keys.c    **** 			return arg_eval(n);
 1968              		.loc 1 1788 4 is_stmt 1 view .LVU608
1788:src/keys.c    **** 			return arg_eval(n);
 1969              		.loc 1 1788 8 is_stmt 0 view .LVU609
 1970 0136 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1788:src/keys.c    **** 			return arg_eval(n);
 1971              		.loc 1 1788 7 view .LVU610
 1972 0138 5F06     		lsls	r7, r3, #25
 1973              	.LVL156:
1788:src/keys.c    **** 			return arg_eval(n);
 1974              		.loc 1 1788 7 view .LVU611
 1975 013a 53D4     		bmi	.L247
1788:src/keys.c    **** 			return arg_eval(n);
 1976              		.loc 1 1788 19 discriminator 1 view .LVU612
 1977 013c B8F1000F 		cmp	r8, #0
 1978 0140 50D1     		bne	.L247
1790:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 1979              		.loc 1 1790 3 is_stmt 1 view .LVU613
1790:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 1980              		.loc 1 1790 6 is_stmt 0 view .LVU614
 1981 0142 032E     		cmp	r6, #3
 1982 0144 F3D8     		bhi	.L300
1791:src/keys.c    **** 		break;
 1983              		.loc 1 1791 4 is_stmt 1 view .LVU615
ARM GAS  /tmp/ccOshYsA.s 			page 92


 1984              	.LVL157:
 1985              	.LBB345:
 1986              	.LBI345:
1596:src/keys.c    **** 	const unsigned int b = CmdBase;
 1987              		.loc 1 1596 12 view .LVU616
 1988              	.LBB346:
1597:src/keys.c    **** 
 1989              		.loc 1 1597 2 view .LVU617
1597:src/keys.c    **** 
 1990              		.loc 1 1597 21 is_stmt 0 view .LVU618
 1991 0146 E27F     		ldrb	r2, [r4, #31]	@ zero_extendqisi2
 1992              	.LVL158:
1599:src/keys.c    **** 	{
 1993              		.loc 1 1599 2 is_stmt 1 view .LVU619
1599:src/keys.c    **** 	{
 1994              		.loc 1 1599 16 is_stmt 0 view .LVU620
 1995 0148 0BEB0210 		add	r0, fp, r2, lsl #4
 1996 014c 1101     		lsls	r1, r2, #4
 1997 014e 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1599:src/keys.c    **** 	{
 1998              		.loc 1 1599 5 view .LVU621
 1999 0150 8006     		lsls	r0, r0, #26
 2000 0152 02D4     		bmi	.L234
1599:src/keys.c    **** 	{
 2001              		.loc 1 1599 40 view .LVU622
 2002 0154 513A     		subs	r2, r2, #81
 2003              	.LVL159:
1599:src/keys.c    **** 	{
 2004              		.loc 1 1599 23 view .LVU623
 2005 0156 0A2A     		cmp	r2, #10
 2006 0158 E9D8     		bhi	.L300
 2007              	.LVL160:
 2008              	.L234:
1601:src/keys.c    **** 			return STATE_UNFINISHED;
 2009              		.loc 1 1601 3 is_stmt 1 view .LVU624
1601:src/keys.c    **** 			return STATE_UNFINISHED;
 2010              		.loc 1 1601 6 is_stmt 0 view .LVU625
 2011 015a 1F06     		lsls	r7, r3, #24
 2012 015c E7D4     		bmi	.L300
1601:src/keys.c    **** 			return STATE_UNFINISHED;
 2013              		.loc 1 1601 18 view .LVU626
 2014 015e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2015 0160 002B     		cmp	r3, #0
 2016 0162 E4D1     		bne	.L300
1603:src/keys.c    **** 			return STATE_UNFINISHED;
 2017              		.loc 1 1603 3 is_stmt 1 view .LVU627
1603:src/keys.c    **** 			return STATE_UNFINISHED;
 2018              		.loc 1 1603 17 is_stmt 0 view .LVU628
 2019 0164 5944     		add	r1, r1, fp
1603:src/keys.c    **** 			return STATE_UNFINISHED;
 2020              		.loc 1 1603 6 view .LVU629
 2021 0166 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2022 0168 632B     		cmp	r3, #99
 2023 016a E0D9     		bls	.L300
1605:src/keys.c    **** 	}
 2024              		.loc 1 1605 3 is_stmt 1 view .LVU630
1605:src/keys.c    **** 	}
ARM GAS  /tmp/ccOshYsA.s 			page 93


 2025              		.loc 1 1605 10 is_stmt 0 view .LVU631
 2026 016c 06F16400 		add	r0, r6, #100
 2027 0170 27E0     		b	.L302
 2028              	.LVL161:
 2029              	.L203:
1605:src/keys.c    **** 	}
 2030              		.loc 1 1605 10 view .LVU632
 2031              	.LBE346:
 2032              	.LBE345:
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 2033              		.loc 1 1679 2 is_stmt 1 view .LVU633
1680:src/keys.c    **** 		reset_arg();
 2034              		.loc 1 1680 2 view .LVU634
1680:src/keys.c    **** 		reset_arg();
 2035              		.loc 1 1680 5 is_stmt 0 view .LVU635
 2036 0172 9B2F     		cmp	r7, #155
 2037 0174 D9D8     		bhi	.L262
1685:src/keys.c    **** 	  switch (n) {
 2038              		.loc 1 1685 35 view .LVU636
 2039 0176 6069     		ldr	r0, [r4, #20]
 2040              	.LVL162:
1685:src/keys.c    **** 	  switch (n) {
 2041              		.loc 1 1685 35 view .LVU637
 2042 0178 10F4103F 		tst	r0, #147456
 2043 017c 41D1     		bne	.L222
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 2044              		.loc 1 1679 4 view .LVU638
 2045 017e 29F08005 		bic	r5, r9, #128
1686:src/keys.c    **** 	  case regX_idx:
 2046              		.loc 1 1686 4 is_stmt 1 view .LVU639
 2047 0182 672D     		cmp	r5, #103
 2048 0184 3DD8     		bhi	.L222
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2049              		.loc 1 1675 61 is_stmt 0 view .LVU640
 2050 0186 4FF0010C 		mov	ip, #1
 2051 018a C0E7     		b	.L265
 2052              	.LVL163:
 2053              	.L266:
1686:src/keys.c    **** 	  case regX_idx:
 2054              		.loc 1 1686 4 view .LVU641
 2055 018c 1DB1     		cbz	r5, .L215
 2056 018e 6B1F     		subs	r3, r5, #5
 2057 0190 042B     		cmp	r3, #4
 2058 0192 3FF67FAF 		bhi	.L213
 2059              	.L215:
1701:src/keys.c    **** 	  }
 2060              		.loc 1 1701 6 is_stmt 1 view .LVU642
1701:src/keys.c    **** 	  }
 2061              		.loc 1 1701 13 is_stmt 0 view .LVU643
 2062 0196 2846     		mov	r0, r5
 2063 0198 27E0     		b	.L301
 2064              	.LVL164:
 2065              	.L205:
1677:src/keys.c    **** 
 2066              		.loc 1 1677 42 discriminator 4 view .LVU644
 2067 019a 19F0800F 		tst	r9, #128
 2068 019e 3ED1     		bne	.L208
ARM GAS  /tmp/ccOshYsA.s 			page 94


 2069              	.L204:
 2070              	.LVL165:
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 2071              		.loc 1 1679 2 is_stmt 1 view .LVU645
1680:src/keys.c    **** 		reset_arg();
 2072              		.loc 1 1680 2 view .LVU646
1680:src/keys.c    **** 		reset_arg();
 2073              		.loc 1 1680 5 is_stmt 0 view .LVU647
 2074 01a0 9B2F     		cmp	r7, #155
 2075 01a2 C2D8     		bhi	.L262
1708:src/keys.c    **** 		// row column shorthand addressing
 2076              		.loc 1 1708 2 is_stmt 1 view .LVU648
1710:src/keys.c    **** 
 2077              		.loc 1 1710 3 view .LVU649
 2078              	.LVL166:
 2079              	.LBB347:
 2080              	.LBI347:
 176:src/keys.c    **** {
 2081              		.loc 1 176 5 view .LVU650
 2082              	.LBB348:
 178:src/keys.c    **** }
 2083              		.loc 1 178 2 view .LVU651
 178:src/keys.c    **** }
 2084              		.loc 1 178 18 is_stmt 0 view .LVU652
 2085 01a4 474B     		ldr	r3, .L313+12
 2086 01a6 A3FB0623 		umull	r2, r3, r3, r6
 178:src/keys.c    **** }
 2087              		.loc 1 178 24 view .LVU653
 2088 01aa 03F0FC00 		and	r0, r3, #252
 2089              	.LVL167:
 178:src/keys.c    **** }
 2090              		.loc 1 178 24 view .LVU654
 2091 01ae 00EB9300 		add	r0, r0, r3, lsr #2
 178:src/keys.c    **** }
 2092              		.loc 1 178 18 view .LVU655
 2093 01b2 9B08     		lsrs	r3, r3, #2
 178:src/keys.c    **** }
 2094              		.loc 1 178 24 view .LVU656
 2095 01b4 4000     		lsls	r0, r0, #1
 178:src/keys.c    **** }
 2096              		.loc 1 178 33 view .LVU657
 2097 01b6 03EB4303 		add	r3, r3, r3, lsl #1
 178:src/keys.c    **** }
 2098              		.loc 1 178 12 view .LVU658
 2099 01ba 0B30     		adds	r0, r0, #11
 178:src/keys.c    **** }
 2100              		.loc 1 178 33 view .LVU659
 2101 01bc A6EB4306 		sub	r6, r6, r3, lsl #1
 2102              	.LBE348:
 2103              	.LBE347:
1710:src/keys.c    **** 
 2104              		.loc 1 1710 10 view .LVU660
 2105 01c0 3044     		add	r0, r0, r6
 2106              	.LVL168:
 2107              	.L302:
1905:src/keys.c    **** 
 2108              		.loc 1 1905 1 view .LVU661
ARM GAS  /tmp/ccOshYsA.s 			page 95


 2109 01c2 03B0     		add	sp, sp, #12
 2110              		.cfi_remember_state
 2111              		.cfi_def_cfa_offset 36
 2112              	.LVL169:
1905:src/keys.c    **** 
 2113              		.loc 1 1905 1 view .LVU662
 2114              		@ sp needed
 2115 01c4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2116              		.cfi_restore 14
 2117              		.cfi_restore 11
 2118              		.cfi_restore 10
 2119              		.cfi_restore 9
 2120              		.cfi_restore 8
 2121              		.cfi_restore 7
 2122              		.cfi_restore 6
 2123              		.cfi_restore 5
 2124              		.cfi_restore 4
 2125              		.cfi_def_cfa_offset 0
 2126              	.LVL170:
1710:src/keys.c    **** 
 2127              		.loc 1 1710 10 view .LVU663
 2128 01c8 FFF7FEBF 		b	arg_eval
 2129              	.LVL171:
 2130              	.L245:
 2131              		.cfi_restore_state
1810:src/keys.c    **** 			return arg_eval(n);
 2132              		.loc 1 1810 3 is_stmt 1 view .LVU664
1810:src/keys.c    **** 			return arg_eval(n);
 2133              		.loc 1 1810 7 is_stmt 0 view .LVU665
 2134 01cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1810:src/keys.c    **** 			return arg_eval(n);
 2135              		.loc 1 1810 6 view .LVU666
 2136 01ce 5806     		lsls	r0, r3, #25
 2137 01d0 08D4     		bmi	.L247
1810:src/keys.c    **** 			return arg_eval(n);
 2138              		.loc 1 1810 25 discriminator 1 view .LVU667
 2139 01d2 0121     		movs	r1, #1
 2140 01d4 0320     		movs	r0, #3
 2141 01d6 FFF7FEFF 		bl	arg_storcl
 2142              	.LVL172:
1810:src/keys.c    **** 			return arg_eval(n);
 2143              		.loc 1 1810 18 discriminator 1 view .LVU668
 2144 01da 0028     		cmp	r0, #0
 2145 01dc A7D1     		bne	.L300
1810:src/keys.c    **** 			return arg_eval(n);
 2146              		.loc 1 1810 63 discriminator 2 view .LVU669
 2147 01de B8F1000F 		cmp	r8, #0
 2148 01e2 A4D0     		beq	.L300
 2149              	.LVL173:
 2150              	.L247:
1811:src/keys.c    **** 		break;
 2151              		.loc 1 1811 4 is_stmt 1 view .LVU670
1811:src/keys.c    **** 		break;
 2152              		.loc 1 1811 11 is_stmt 0 view .LVU671
 2153 01e4 2846     		mov	r0, r5
 2154 01e6 ECE7     		b	.L302
 2155              	.LVL174:
ARM GAS  /tmp/ccOshYsA.s 			page 96


 2156              	.L219:
1692:src/keys.c    **** 	  case regT_idx:
 2157              		.loc 1 1692 6 is_stmt 1 view .LVU672
1692:src/keys.c    **** 	  case regT_idx:
 2158              		.loc 1 1692 13 is_stmt 0 view .LVU673
 2159 01e8 0320     		movs	r0, #3
 2160              	.L301:
1905:src/keys.c    **** 
 2161              		.loc 1 1905 1 view .LVU674
 2162 01ea 03B0     		add	sp, sp, #12
 2163              		.cfi_remember_state
 2164              		.cfi_def_cfa_offset 36
 2165              	.LVL175:
1905:src/keys.c    **** 
 2166              		.loc 1 1905 1 view .LVU675
 2167              		@ sp needed
 2168 01ec BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2169              		.cfi_restore 14
 2170              		.cfi_restore 11
 2171              		.cfi_restore 10
 2172              		.cfi_restore 9
 2173              		.cfi_restore 8
 2174              		.cfi_restore 7
 2175              		.cfi_restore 6
 2176              		.cfi_restore 5
 2177              		.cfi_restore 4
 2178              		.cfi_def_cfa_offset 0
 2179              	.LVL176:
1690:src/keys.c    **** 	  case regZ_idx:
 2180              		.loc 1 1690 13 view .LVU676
 2181 01f0 FFF7FEBF 		b	arg_digit
 2182              	.LVL177:
 2183              	.L220:
 2184              		.cfi_restore_state
1690:src/keys.c    **** 	  case regZ_idx:
 2185              		.loc 1 1690 6 is_stmt 1 view .LVU677
1690:src/keys.c    **** 	  case regZ_idx:
 2186              		.loc 1 1690 13 is_stmt 0 view .LVU678
 2187 01f4 0220     		movs	r0, #2
 2188 01f6 F8E7     		b	.L301
 2189              	.L217:
1694:src/keys.c    **** 	  case 5:
 2190              		.loc 1 1694 6 is_stmt 1 view .LVU679
1694:src/keys.c    **** 	  case 5:
 2191              		.loc 1 1694 13 is_stmt 0 view .LVU680
 2192 01f8 0420     		movs	r0, #4
 2193 01fa F6E7     		b	.L301
 2194              	.L221:
1735:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2195              		.loc 1 1735 3 is_stmt 1 view .LVU681
1735:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2196              		.loc 1 1735 6 is_stmt 0 view .LVU682
 2197 01fc BCF1000F 		cmp	ip, #0
 2198 0200 95D0     		beq	.L300
 2199              	.L222:
1736:src/keys.c    **** 		break;
 2200              		.loc 1 1736 4 is_stmt 1 view .LVU683
ARM GAS  /tmp/ccOshYsA.s 			page 97


 2201              	.LVL178:
 2202              	.LBB349:
 2203              	.LBI349:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2204              		.loc 1 92 20 view .LVU684
 2205              	.LBB350:
  93:src/keys.c    **** 	State2.shifts = shift;
 2206              		.loc 1 93 2 view .LVU685
 2207              	.LBB351:
 2208              	.LBI351:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2209              		.loc 1 84 13 view .LVU686
 2210              	.LBB352:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2211              		.loc 1 85 2 view .LVU687
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2212              		.loc 1 85 18 is_stmt 0 view .LVU688
 2213 0202 FFF7FEFF 		bl	shift_down
 2214              	.LVL179:
  86:src/keys.c    **** }
 2215              		.loc 1 86 2 is_stmt 1 view .LVU689
 2216              	.LBE352:
 2217              	.LBE351:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2218              		.loc 1 94 2 view .LVU690
 2219              	.LBE350:
 2220              	.LBE349:
1736:src/keys.c    **** 		break;
 2221              		.loc 1 1736 4 is_stmt 0 view .LVU691
 2222 0206 009B     		ldr	r3, [sp]
 2223 0208 B3F10109 		subs	r9, r3, #1
 2224 020c 18BF     		it	ne
 2225 020e 4FF00109 		movne	r9, #1
 2226              	.LBB356:
 2227              	.LBB353:
  95:src/keys.c    **** 	return r;
 2228              		.loc 1 95 19 view .LVU692
 2229 0212 0023     		movs	r3, #0
 2230              	.LBE353:
 2231              	.LBE356:
1736:src/keys.c    **** 		break;
 2232              		.loc 1 1736 4 view .LVU693
 2233 0214 84F81090 		strb	r9, [r4, #16]
 2234              	.LBB357:
 2235              	.LBB354:
  95:src/keys.c    **** 	return r;
 2236              		.loc 1 95 2 is_stmt 1 view .LVU694
  95:src/keys.c    **** 	return r;
 2237              		.loc 1 95 19 is_stmt 0 view .LVU695
 2238 0218 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 2239              		.loc 1 96 2 is_stmt 1 view .LVU696
 2240              	.LBE354:
 2241              	.LBE357:
1904:src/keys.c    **** }
 2242              		.loc 1 1904 9 is_stmt 0 view .LVU697
 2243 021a 3320     		movs	r0, #51
ARM GAS  /tmp/ccOshYsA.s 			page 98


 2244              	.LBB358:
 2245              	.LBB355:
  96:src/keys.c    **** }
 2246              		.loc 1 96 9 view .LVU698
 2247 021c 88E7     		b	.L198
 2248              	.LVL180:
 2249              	.L208:
  96:src/keys.c    **** }
 2250              		.loc 1 96 9 view .LVU699
 2251              	.LBE355:
 2252              	.LBE358:
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 2253              		.loc 1 1679 2 is_stmt 1 view .LVU700
1680:src/keys.c    **** 		reset_arg();
 2254              		.loc 1 1680 5 is_stmt 0 view .LVU701
 2255 021e 9B2F     		cmp	r7, #155
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
 2256              		.loc 1 1679 4 view .LVU702
 2257 0220 29F08005 		bic	r5, r9, #128
 2258              	.LVL181:
1680:src/keys.c    **** 		reset_arg();
 2259              		.loc 1 1680 2 is_stmt 1 view .LVU703
1680:src/keys.c    **** 		reset_arg();
 2260              		.loc 1 1680 5 is_stmt 0 view .LVU704
 2261 0224 81D8     		bhi	.L262
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2262              		.loc 1 1675 61 view .LVU705
 2263 0226 4FF0010C 		mov	ip, #1
 2264 022a 6AE7     		b	.L210
 2265              	.LVL182:
 2266              	.L225:
1748:src/keys.c    **** 			break;
 2267              		.loc 1 1748 3 is_stmt 1 view .LVU706
1748:src/keys.c    **** 			break;
 2268              		.loc 1 1748 18 is_stmt 0 view .LVU707
 2269 022c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1748:src/keys.c    **** 			break;
 2270              		.loc 1 1748 6 view .LVU708
 2271 022e 13F0C00F 		tst	r3, #192
 2272 0232 7FF47CAF 		bne	.L300
1750:src/keys.c    **** 			CmdBase = RARG_STOM;
 2273              		.loc 1 1750 3 is_stmt 1 view .LVU709
1750:src/keys.c    **** 			CmdBase = RARG_STOM;
 2274              		.loc 1 1750 6 is_stmt 0 view .LVU710
 2275 0236 032F     		cmp	r7, #3
 2276 0238 00F0EE80 		beq	.L306
1752:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2277              		.loc 1 1752 8 is_stmt 1 view .LVU711
1752:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2278              		.loc 1 1752 11 is_stmt 0 view .LVU712
 2279 023c 0A2F     		cmp	r7, #10
 2280 023e 7FF476AF 		bne	.L300
1753:src/keys.c    **** 		break;
 2281              		.loc 1 1753 4 is_stmt 1 view .LVU713
1753:src/keys.c    **** 		break;
 2282              		.loc 1 1753 12 is_stmt 0 view .LVU714
 2283 0242 7823     		movs	r3, #120
ARM GAS  /tmp/ccOshYsA.s 			page 99


 2284 0244 E377     		strb	r3, [r4, #31]
1904:src/keys.c    **** }
 2285              		.loc 1 1904 9 view .LVU715
 2286 0246 3320     		movs	r0, #51
 2287 0248 72E7     		b	.L198
 2288              	.L251:
1858:src/keys.c    **** 			if (argcmds[base].label) {
 2289              		.loc 1 1858 3 is_stmt 1 view .LVU716
1858:src/keys.c    **** 			if (argcmds[base].label) {
 2290              		.loc 1 1858 6 is_stmt 0 view .LVU717
 2291 024a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2292 024c 002B     		cmp	r3, #0
 2293 024e 00F0A080 		beq	.L307
1872:src/keys.c    **** 			return arg_eval(State2.digval);
 2294              		.loc 1 1872 10 is_stmt 1 view .LVU718
1873:src/keys.c    **** 		else if (stack_reg)
 2295              		.loc 1 1873 4 view .LVU719
1873:src/keys.c    **** 		else if (stack_reg)
 2296              		.loc 1 1873 11 is_stmt 0 view .LVU720
 2297 0252 2089     		ldrh	r0, [r4, #8]
 2298 0254 B5E7     		b	.L302
 2299              	.L249:
1850:src/keys.c    **** 		break;
 2300              		.loc 1 1850 3 is_stmt 1 view .LVU721
 2301 0256 0021     		movs	r1, #0
 2302 0258 0620     		movs	r0, #6
 2303 025a FFF7FEFF 		bl	arg_storcl
 2304              	.LVL183:
1851:src/keys.c    **** 
 2305              		.loc 1 1851 3 view .LVU722
1904:src/keys.c    **** }
 2306              		.loc 1 1904 9 is_stmt 0 view .LVU723
 2307 025e 3320     		movs	r0, #51
1851:src/keys.c    **** 
 2308              		.loc 1 1851 3 view .LVU724
 2309 0260 66E7     		b	.L198
 2310              	.L242:
1803:src/keys.c    **** 			reset_arg();
 2311              		.loc 1 1803 3 is_stmt 1 view .LVU725
1803:src/keys.c    **** 			reset_arg();
 2312              		.loc 1 1803 6 is_stmt 0 view .LVU726
 2313 0262 212F     		cmp	r7, #33
 2314 0264 00F0C580 		beq	.L243
1803:src/keys.c    **** 			reset_arg();
 2315              		.loc 1 1803 25 discriminator 1 view .LVU727
 2316 0268 732F     		cmp	r7, #115
 2317 026a 00F0C280 		beq	.L243
1807:src/keys.c    **** 		break;
 2318              		.loc 1 1807 3 is_stmt 1 view .LVU728
 2319 026e 0121     		movs	r1, #1
 2320 0270 0220     		movs	r0, #2
 2321 0272 FFF7FEFF 		bl	arg_storcl
 2322              	.LVL184:
1808:src/keys.c    **** 	case K44:		// multiply
 2323              		.loc 1 1808 3 view .LVU729
1904:src/keys.c    **** }
 2324              		.loc 1 1904 9 is_stmt 0 view .LVU730
ARM GAS  /tmp/ccOshYsA.s 			page 100


 2325 0276 3320     		movs	r0, #51
1808:src/keys.c    **** 	case K44:		// multiply
 2326              		.loc 1 1808 3 view .LVU731
 2327 0278 5AE7     		b	.L198
 2328              	.L235:
1795:src/keys.c    **** 
 2329              		.loc 1 1795 3 is_stmt 1 view .LVU732
 2330              	.LVL185:
 2331              	.LBB359:
 2332              	.LBI359:
1637:src/keys.c    **** 
 2333              		.loc 1 1637 12 view .LVU733
 2334              	.LBB360:
1639:src/keys.c    **** 		// Only valid at beginning of entry
 2335              		.loc 1 1639 2 view .LVU734
1639:src/keys.c    **** 		// Only valid at beginning of entry
 2336              		.loc 1 1639 5 is_stmt 0 view .LVU735
 2337 027a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2338 027c 002B     		cmp	r3, #0
 2339 027e 7FF456AF 		bne	.L300
1641:src/keys.c    **** 			// '..' or ENTER '.' = X
 2340              		.loc 1 1641 3 is_stmt 1 view .LVU736
1641:src/keys.c    **** 			// '..' or ENTER '.' = X
 2341              		.loc 1 1641 6 is_stmt 0 view .LVU737
 2342 0282 10F4A03F 		tst	r0, #81920
 2343 0286 40F0CB80 		bne	.L308
1646:src/keys.c    **** 			// local register or flag select
 2344              		.loc 1 1646 3 is_stmt 1 view .LVU738
1646:src/keys.c    **** 			// local register or flag select
 2345              		.loc 1 1646 20 is_stmt 0 view .LVU739
 2346 028a 0BEB0A02 		add	r2, fp, r10
 2347 028e 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1646:src/keys.c    **** 			// local register or flag select
 2348              		.loc 1 1646 6 view .LVU740
 2349 0290 1D07     		lsls	r5, r3, #28
 2350 0292 00F1B380 		bmi	.L237
1646:src/keys.c    **** 			// local register or flag select
 2351              		.loc 1 1646 27 view .LVU741
 2352 0296 94F91530 		ldrsb	r3, [r4, #21]
 2353 029a 002B     		cmp	r3, #0
 2354 029c C0F2AE80 		blt	.L237
1650:src/keys.c    **** 			// Special GTO . sequence
 2355              		.loc 1 1650 8 is_stmt 1 view .LVU742
1650:src/keys.c    **** 			// Special GTO . sequence
 2356              		.loc 1 1650 29 is_stmt 0 view .LVU743
 2357 02a0 443F     		subs	r7, r7, #68
 2358              	.LVL186:
1650:src/keys.c    **** 			// Special GTO . sequence
 2359              		.loc 1 1650 11 view .LVU744
 2360 02a2 012F     		cmp	r7, #1
 2361 02a4 3FF643AF 		bhi	.L300
1652:src/keys.c    **** 				State2.gtodot = 1;
 2362              		.loc 1 1652 4 is_stmt 1 view .LVU745
1653:src/keys.c    **** 				reset_arg();
 2363              		.loc 1 1653 5 view .LVU746
1653:src/keys.c    **** 				reset_arg();
 2364              		.loc 1 1653 19 is_stmt 0 view .LVU747
ARM GAS  /tmp/ccOshYsA.s 			page 101


 2365 02a8 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2366 02aa 43F00103 		orr	r3, r3, #1
 2367 02ae 6375     		strb	r3, [r4, #21]
1654:src/keys.c    **** 			}
 2368              		.loc 1 1654 5 is_stmt 1 view .LVU748
 2369 02b0 FFF7FEFF 		bl	reset_arg
 2370              	.LVL187:
1658:src/keys.c    **** }
 2371              		.loc 1 1658 9 is_stmt 0 view .LVU749
 2372 02b4 3320     		movs	r0, #51
 2373 02b6 3BE7     		b	.L198
 2374              	.L314:
 2375              		.align	2
 2376              	.L313:
 2377 02b8 00000000 		.word	StateWhileOn
 2378 02bc 00000000 		.word	.LANCHOR1
 2379 02c0 00000000 		.word	.LANCHOR0
 2380 02c4 ABAAAAAA 		.word	-1431655765
 2381 02c8 00000000 		.word	argcmds
 2382              	.LVL188:
 2383              	.L239:
1658:src/keys.c    **** }
 2384              		.loc 1 1658 9 view .LVU750
 2385              	.LBE360:
 2386              	.LBE359:
1799:src/keys.c    **** 			return arg_eval(n);
 2387              		.loc 1 1799 3 is_stmt 1 view .LVU751
1799:src/keys.c    **** 			return arg_eval(n);
 2388              		.loc 1 1799 7 is_stmt 0 view .LVU752
 2389 02cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1799:src/keys.c    **** 			return arg_eval(n);
 2390              		.loc 1 1799 6 view .LVU753
 2391 02ce 5C06     		lsls	r4, r3, #25
 2392 02d0 88D4     		bmi	.L247
1799:src/keys.c    **** 			return arg_eval(n);
 2393              		.loc 1 1799 25 discriminator 1 view .LVU754
 2394 02d2 0121     		movs	r1, #1
 2395 02d4 0846     		mov	r0, r1
 2396 02d6 FFF7FEFF 		bl	arg_storcl
 2397              	.LVL189:
1799:src/keys.c    **** 			return arg_eval(n);
 2398              		.loc 1 1799 18 discriminator 1 view .LVU755
 2399 02da 0028     		cmp	r0, #0
 2400 02dc 7FF427AF 		bne	.L300
1810:src/keys.c    **** 			return arg_eval(n);
 2401              		.loc 1 1810 63 view .LVU756
 2402 02e0 B8F1000F 		cmp	r8, #0
 2403 02e4 3FF423AF 		beq	.L300
 2404 02e8 7CE7     		b	.L247
 2405              	.L223:
1740:src/keys.c    **** 			State2.ind = ! State2.ind;
 2406              		.loc 1 1740 3 is_stmt 1 view .LVU757
1740:src/keys.c    **** 			State2.ind = ! State2.ind;
 2407              		.loc 1 1740 7 is_stmt 0 view .LVU758
 2408 02ea 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1740:src/keys.c    **** 			State2.ind = ! State2.ind;
 2409              		.loc 1 1740 6 view .LVU759
ARM GAS  /tmp/ccOshYsA.s 			page 102


 2410 02ec 5E06     		lsls	r6, r3, #25
 2411 02ee 3FF51EAF 		bmi	.L300
1740:src/keys.c    **** 			State2.ind = ! State2.ind;
 2412              		.loc 1 1740 35 discriminator 1 view .LVU760
 2413 02f2 D344     		add	fp, fp, r10
 2414 02f4 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
1740:src/keys.c    **** 			State2.ind = ! State2.ind;
 2415              		.loc 1 1740 19 discriminator 1 view .LVU761
 2416 02f8 D507     		lsls	r5, r2, #31
 2417 02fa 7FF518AF 		bpl	.L300
1741:src/keys.c    **** 			if (! stack_reg)
 2418              		.loc 1 1741 4 is_stmt 1 view .LVU762
1741:src/keys.c    **** 			if (! stack_reg)
 2419              		.loc 1 1741 17 is_stmt 0 view .LVU763
 2420 02fe DA43     		mvns	r2, r3
 2421 0300 C2F3C012 		ubfx	r2, r2, #7, #1
1741:src/keys.c    **** 			if (! stack_reg)
 2422              		.loc 1 1741 15 view .LVU764
 2423 0304 62F3C713 		bfi	r3, r2, #7, #1
 2424 0308 6375     		strb	r3, [r4, #21]
1742:src/keys.c    **** 				State2.dot = 0;
 2425              		.loc 1 1742 4 is_stmt 1 view .LVU765
1742:src/keys.c    **** 				State2.dot = 0;
 2426              		.loc 1 1742 7 is_stmt 0 view .LVU766
 2427 030a B8F1000F 		cmp	r8, #0
 2428 030e 7FF40EAF 		bne	.L300
 2429              	.L260:
1743:src/keys.c    **** 		}
 2430              		.loc 1 1743 5 is_stmt 1 view .LVU767
1743:src/keys.c    **** 		}
 2431              		.loc 1 1743 16 is_stmt 0 view .LVU768
 2432 0312 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2433 0314 6FF38613 		bfc	r3, #6, #1
 2434 0318 6375     		strb	r3, [r4, #21]
1904:src/keys.c    **** }
 2435              		.loc 1 1904 9 view .LVU769
 2436 031a 3320     		movs	r0, #51
 2437 031c 08E7     		b	.L198
 2438              	.L229:
1760:src/keys.c    **** 	    return process_arg_shuffle(0);
 2439              		.loc 1 1760 4 is_stmt 1 view .LVU770
1760:src/keys.c    **** 	    return process_arg_shuffle(0);
 2440              		.loc 1 1760 8 is_stmt 0 view .LVU771
 2441 031e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1760:src/keys.c    **** 	    return process_arg_shuffle(0);
 2442              		.loc 1 1760 7 view .LVU772
 2443 0320 9907     		lsls	r1, r3, #30
 2444 0322 7FF508AF 		bpl	.L228
1761:src/keys.c    **** 	case K52:	// Y
 2445              		.loc 1 1761 6 is_stmt 1 view .LVU773
1761:src/keys.c    **** 	case K52:	// Y
 2446              		.loc 1 1761 13 is_stmt 0 view .LVU774
 2447 0326 0020     		movs	r0, #0
 2448              	.L303:
1905:src/keys.c    **** 
 2449              		.loc 1 1905 1 view .LVU775
 2450 0328 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccOshYsA.s 			page 103


 2451              		.cfi_remember_state
 2452              		.cfi_def_cfa_offset 36
 2453              	.LVL190:
1905:src/keys.c    **** 
 2454              		.loc 1 1905 1 view .LVU776
 2455              		@ sp needed
 2456 032a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2457              		.cfi_restore 14
 2458              		.cfi_restore 11
 2459              		.cfi_restore 10
 2460              		.cfi_restore 9
 2461              		.cfi_restore 8
 2462              		.cfi_restore 7
 2463              		.cfi_restore 6
 2464              		.cfi_restore 5
 2465              		.cfi_restore 4
 2466              		.cfi_def_cfa_offset 0
 2467              	.LVL191:
1767:src/keys.c    **** #else
 2468              		.loc 1 1767 13 view .LVU777
 2469 032e FFF7FEBF 		b	process_arg_shuffle
 2470              	.LVL192:
 2471              	.L230:
 2472              		.cfi_restore_state
1763:src/keys.c    **** 	    return process_arg_shuffle(1);
 2473              		.loc 1 1763 4 is_stmt 1 view .LVU778
1763:src/keys.c    **** 	    return process_arg_shuffle(1);
 2474              		.loc 1 1763 8 is_stmt 0 view .LVU779
 2475 0332 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1763:src/keys.c    **** 	    return process_arg_shuffle(1);
 2476              		.loc 1 1763 7 view .LVU780
 2477 0334 9A07     		lsls	r2, r3, #30
 2478 0336 7FF5FEAE 		bpl	.L228
1764:src/keys.c    **** 	case K53:       // Z
 2479              		.loc 1 1764 6 is_stmt 1 view .LVU781
1764:src/keys.c    **** 	case K53:       // Z
 2480              		.loc 1 1764 13 is_stmt 0 view .LVU782
 2481 033a 0120     		movs	r0, #1
 2482 033c F4E7     		b	.L303
 2483              	.L231:
1766:src/keys.c    **** 	    return process_arg_shuffle(2);
 2484              		.loc 1 1766 4 is_stmt 1 view .LVU783
1766:src/keys.c    **** 	    return process_arg_shuffle(2);
 2485              		.loc 1 1766 8 is_stmt 0 view .LVU784
 2486 033e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1766:src/keys.c    **** 	    return process_arg_shuffle(2);
 2487              		.loc 1 1766 7 view .LVU785
 2488 0340 9B07     		lsls	r3, r3, #30
 2489 0342 7FF5F8AE 		bpl	.L228
1767:src/keys.c    **** #else
 2490              		.loc 1 1767 6 is_stmt 1 view .LVU786
1767:src/keys.c    **** #else
 2491              		.loc 1 1767 13 is_stmt 0 view .LVU787
 2492 0346 0220     		movs	r0, #2
 2493 0348 EEE7     		b	.L303
 2494              	.L250:
1854:src/keys.c    **** 		break;
ARM GAS  /tmp/ccOshYsA.s 			page 104


 2495              		.loc 1 1854 3 is_stmt 1 view .LVU788
 2496 034a 0021     		movs	r1, #0
 2497 034c 0520     		movs	r0, #5
 2498 034e FFF7FEFF 		bl	arg_storcl
 2499              	.LVL193:
1855:src/keys.c    **** 
 2500              		.loc 1 1855 3 view .LVU789
1904:src/keys.c    **** }
 2501              		.loc 1 1904 9 is_stmt 0 view .LVU790
 2502 0352 3320     		movs	r0, #51
1855:src/keys.c    **** 
 2503              		.loc 1 1855 3 view .LVU791
 2504 0354 ECE6     		b	.L198
 2505              	.L227:
1757:src/keys.c    **** 	    return process_arg_shuffle(3);
 2506              		.loc 1 1757 4 is_stmt 1 view .LVU792
1757:src/keys.c    **** 	    return process_arg_shuffle(3);
 2507              		.loc 1 1757 8 is_stmt 0 view .LVU793
 2508 0356 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1757:src/keys.c    **** 	    return process_arg_shuffle(3);
 2509              		.loc 1 1757 7 view .LVU794
 2510 0358 9807     		lsls	r0, r3, #30
 2511 035a 7FF5ECAE 		bpl	.L228
1758:src/keys.c    **** 	case K51:       // X
 2512              		.loc 1 1758 6 is_stmt 1 view .LVU795
1758:src/keys.c    **** 	case K51:       // X
 2513              		.loc 1 1758 13 is_stmt 0 view .LVU796
 2514 035e 0320     		movs	r0, #3
 2515 0360 E2E7     		b	.L303
 2516              	.L248:
1814:src/keys.c    **** 		break;
 2517              		.loc 1 1814 3 is_stmt 1 view .LVU797
 2518 0362 0121     		movs	r1, #1
 2519 0364 0420     		movs	r0, #4
 2520 0366 FFF7FEFF 		bl	arg_storcl
 2521              	.LVL194:
1815:src/keys.c    **** #else
 2522              		.loc 1 1815 3 view .LVU798
1904:src/keys.c    **** }
 2523              		.loc 1 1904 9 is_stmt 0 view .LVU799
 2524 036a 3320     		movs	r0, #51
1815:src/keys.c    **** #else
 2525              		.loc 1 1815 3 view .LVU800
 2526 036c E0E6     		b	.L198
 2527              	.L258:
1879:src/keys.c    **** 			if (State2.dot)
 2528              		.loc 1 1879 3 is_stmt 1 view .LVU801
1879:src/keys.c    **** 			if (State2.dot)
 2529              		.loc 1 1879 13 is_stmt 0 view .LVU802
 2530 036e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
1879:src/keys.c    **** 			if (State2.dot)
 2531              		.loc 1 1879 6 view .LVU803
 2532 0370 7BBB     		cbnz	r3, .L259
1880:src/keys.c    **** 				State2.dot = 0;
 2533              		.loc 1 1880 4 is_stmt 1 view .LVU804
1880:src/keys.c    **** 				State2.dot = 0;
 2534              		.loc 1 1880 8 is_stmt 0 view .LVU805
ARM GAS  /tmp/ccOshYsA.s 			page 105


 2535 0372 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1880:src/keys.c    **** 				State2.dot = 0;
 2536              		.loc 1 1880 7 view .LVU806
 2537 0374 13F04001 		ands	r1, r3, #64
 2538 0378 CBD1     		bne	.L260
1882:src/keys.c    **** 				State2.local = 0;
 2539              		.loc 1 1882 9 is_stmt 1 view .LVU807
1882:src/keys.c    **** 				State2.local = 0;
 2540              		.loc 1 1882 13 is_stmt 0 view .LVU808
 2541 037a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1882:src/keys.c    **** 				State2.local = 0;
 2542              		.loc 1 1882 12 view .LVU809
 2543 037c 12F00100 		ands	r0, r2, #1
 2544 0380 54D1     		bne	.L309
1884:src/keys.c    **** 				State2.ind = 0;
 2545              		.loc 1 1884 9 is_stmt 1 view .LVU810
1884:src/keys.c    **** 				State2.ind = 0;
 2546              		.loc 1 1884 12 is_stmt 0 view .LVU811
 2547 0382 1906     		lsls	r1, r3, #24
 2548 0384 7FF5D1AE 		bpl	.L262
1885:src/keys.c    **** 			else
 2549              		.loc 1 1885 5 is_stmt 1 view .LVU812
1885:src/keys.c    **** 			else
 2550              		.loc 1 1885 16 is_stmt 0 view .LVU813
 2551 0388 60F3C713 		bfi	r3, r0, #7, #1
 2552 038c 6375     		strb	r3, [r4, #21]
1904:src/keys.c    **** }
 2553              		.loc 1 1904 9 view .LVU814
 2554 038e 3320     		movs	r0, #51
 2555 0390 CEE6     		b	.L198
 2556              	.L307:
1858:src/keys.c    **** 			if (argcmds[base].label) {
 2557              		.loc 1 1858 43 discriminator 1 view .LVU815
 2558 0392 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2559 0394 13F0C00F 		tst	r3, #192
 2560 0398 0ED1     		bne	.L253
1859:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2561              		.loc 1 1859 4 is_stmt 1 view .LVU816
1859:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2562              		.loc 1 1859 7 is_stmt 0 view .LVU817
 2563 039a 0029     		cmp	r1, #0
 2564 039c 4BD1     		bne	.L310
1864:src/keys.c    **** 				reset_arg();
 2565              		.loc 1 1864 11 is_stmt 1 view .LVU818
1864:src/keys.c    **** 				reset_arg();
 2566              		.loc 1 1864 14 is_stmt 0 view .LVU819
 2567 039e 4E2F     		cmp	r7, #78
 2568 03a0 5BD0     		beq	.L311
1867:src/keys.c    **** 				reset_arg();
 2569              		.loc 1 1867 11 is_stmt 1 view .LVU820
1867:src/keys.c    **** 				reset_arg();
 2570              		.loc 1 1867 14 is_stmt 0 view .LVU821
 2571 03a2 4F2F     		cmp	r7, #79
 2572 03a4 5ED0     		beq	.L312
1870:src/keys.c    **** 				State2.dot = 1;
 2573              		.loc 1 1870 11 is_stmt 1 view .LVU822
1870:src/keys.c    **** 				State2.dot = 1;
ARM GAS  /tmp/ccOshYsA.s 			page 106


 2574              		.loc 1 1870 14 is_stmt 0 view .LVU823
 2575 03a6 019A     		ldr	r2, [sp, #4]
 2576 03a8 002A     		cmp	r2, #0
 2577 03aa 3FF4C0AE 		beq	.L300
1871:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2578              		.loc 1 1871 5 is_stmt 1 view .LVU824
1871:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2579              		.loc 1 1871 16 is_stmt 0 view .LVU825
 2580 03ae 43F04003 		orr	r3, r3, #64
 2581 03b2 6375     		strb	r3, [r4, #21]
1904:src/keys.c    **** }
 2582              		.loc 1 1904 9 view .LVU826
 2583 03b4 3320     		movs	r0, #51
 2584 03b6 BBE6     		b	.L198
 2585              	.L253:
1872:src/keys.c    **** 			return arg_eval(State2.digval);
 2586              		.loc 1 1872 10 is_stmt 1 view .LVU827
1874:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2587              		.loc 1 1874 8 view .LVU828
1874:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2588              		.loc 1 1874 11 is_stmt 0 view .LVU829
 2589 03b8 B8F1000F 		cmp	r8, #0
 2590 03bc 3FF4B7AE 		beq	.L300
1875:src/keys.c    **** 		break;
 2591              		.loc 1 1875 4 is_stmt 1 view .LVU830
1875:src/keys.c    **** 		break;
 2592              		.loc 1 1875 27 is_stmt 0 view .LVU831
 2593 03c0 C3F38012 		ubfx	r2, r3, #6, #1
1875:src/keys.c    **** 		break;
 2594              		.loc 1 1875 19 view .LVU832
 2595 03c4 C2F10102 		rsb	r2, r2, #1
1875:src/keys.c    **** 		break;
 2596              		.loc 1 1875 15 view .LVU833
 2597 03c8 62F38613 		bfi	r3, r2, #6, #1
 2598 03cc 6375     		strb	r3, [r4, #21]
1904:src/keys.c    **** }
 2599              		.loc 1 1904 9 view .LVU834
 2600 03ce 3320     		movs	r0, #51
 2601 03d0 AEE6     		b	.L198
 2602              	.L259:
1890:src/keys.c    **** 			if (State2.shuffle)
 2603              		.loc 1 1890 4 is_stmt 1 view .LVU835
1891:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2604              		.loc 1 1891 8 is_stmt 0 view .LVU836
 2605 03d2 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1890:src/keys.c    **** 			if (State2.shuffle)
 2606              		.loc 1 1890 4 view .LVU837
 2607 03d4 013B     		subs	r3, r3, #1
 2608 03d6 DBB2     		uxtb	r3, r3
1891:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2609              		.loc 1 1891 7 view .LVU838
 2610 03d8 9207     		lsls	r2, r2, #30
1890:src/keys.c    **** 			if (State2.shuffle)
 2611              		.loc 1 1890 4 view .LVU839
 2612 03da E372     		strb	r3, [r4, #11]
1891:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2613              		.loc 1 1891 4 is_stmt 1 view .LVU840
ARM GAS  /tmp/ccOshYsA.s 			page 107


1891:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2614              		.loc 1 1891 7 is_stmt 0 view .LVU841
 2615 03dc 14D5     		bpl	.L263
1892:src/keys.c    **** 			else
 2616              		.loc 1 1892 5 is_stmt 1 view .LVU842
1892:src/keys.c    **** 			else
 2617              		.loc 1 1892 19 is_stmt 0 view .LVU843
 2618 03de 2289     		ldrh	r2, [r4, #8]
1892:src/keys.c    **** 			else
 2619              		.loc 1 1892 46 view .LVU844
 2620 03e0 5B00     		lsls	r3, r3, #1
1892:src/keys.c    **** 			else
 2621              		.loc 1 1892 26 view .LVU845
 2622 03e2 0321     		movs	r1, #3
 2623 03e4 01FA03F3 		lsl	r3, r1, r3
1892:src/keys.c    **** 			else
 2624              		.loc 1 1892 19 view .LVU846
 2625 03e8 22EA0303 		bic	r3, r2, r3
 2626 03ec 2381     		strh	r3, [r4, #8]	@ movhi
1904:src/keys.c    **** }
 2627              		.loc 1 1904 9 view .LVU847
 2628 03ee 3320     		movs	r0, #51
 2629 03f0 9EE6     		b	.L198
 2630              	.L243:
1804:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2631              		.loc 1 1804 4 is_stmt 1 view .LVU848
 2632 03f2 FFF7FEFF 		bl	reset_arg
 2633              	.LVL195:
1805:src/keys.c    **** 		}
 2634              		.loc 1 1805 4 view .LVU849
1805:src/keys.c    **** 		}
 2635              		.loc 1 1805 11 is_stmt 0 view .LVU850
 2636 03f6 40F27510 		movw	r0, #373
 2637 03fa 99E6     		b	.L198
 2638              	.LVL196:
 2639              	.L237:
 2640              	.LBB363:
 2641              	.LBB361:
1648:src/keys.c    **** 		}
 2642              		.loc 1 1648 4 is_stmt 1 view .LVU851
1648:src/keys.c    **** 		}
 2643              		.loc 1 1648 17 is_stmt 0 view .LVU852
 2644 03fc A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2645 03fe 43F00103 		orr	r3, r3, #1
 2646 0402 A375     		strb	r3, [r4, #22]
1658:src/keys.c    **** }
 2647              		.loc 1 1658 9 view .LVU853
 2648 0404 3320     		movs	r0, #51
1648:src/keys.c    **** 		}
 2649              		.loc 1 1648 17 view .LVU854
 2650 0406 93E6     		b	.L198
 2651              	.LVL197:
 2652              	.L263:
1648:src/keys.c    **** 		}
 2653              		.loc 1 1648 17 view .LVU855
 2654              	.LBE361:
 2655              	.LBE363:
ARM GAS  /tmp/ccOshYsA.s 			page 108


1894:src/keys.c    **** 		}
 2656              		.loc 1 1894 5 is_stmt 1 view .LVU856
1894:src/keys.c    **** 		}
 2657              		.loc 1 1894 19 is_stmt 0 view .LVU857
 2658 0408 2389     		ldrh	r3, [r4, #8]
 2659 040a 1A4A     		ldr	r2, .L315
 2660 040c A2FB0323 		umull	r2, r3, r2, r3
 2661 0410 DB08     		lsrs	r3, r3, #3
 2662 0412 2381     		strh	r3, [r4, #8]	@ movhi
1904:src/keys.c    **** }
 2663              		.loc 1 1904 9 view .LVU858
 2664 0414 3320     		movs	r0, #51
 2665 0416 8BE6     		b	.L198
 2666              	.L306:
1751:src/keys.c    **** 		else if (base == RARG_RCL)
 2667              		.loc 1 1751 4 is_stmt 1 view .LVU859
1751:src/keys.c    **** 		else if (base == RARG_RCL)
 2668              		.loc 1 1751 12 is_stmt 0 view .LVU860
 2669 0418 7723     		movs	r3, #119
 2670 041a E377     		strb	r3, [r4, #31]
1904:src/keys.c    **** }
 2671              		.loc 1 1904 9 view .LVU861
 2672 041c 3320     		movs	r0, #51
 2673 041e 87E6     		b	.L198
 2674              	.LVL198:
 2675              	.L308:
 2676              	.LBB364:
 2677              	.LBB362:
1643:src/keys.c    **** 			return arg_eval(regX_idx);
 2678              		.loc 1 1643 4 is_stmt 1 view .LVU862
1643:src/keys.c    **** 			return arg_eval(regX_idx);
 2679              		.loc 1 1643 17 is_stmt 0 view .LVU863
 2680 0420 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2681 0422 63F30002 		bfi	r2, r3, #0, #1
1644:src/keys.c    **** 		}
 2682              		.loc 1 1644 11 view .LVU864
 2683 0426 6420     		movs	r0, #100
1643:src/keys.c    **** 			return arg_eval(regX_idx);
 2684              		.loc 1 1643 17 view .LVU865
 2685 0428 A275     		strb	r2, [r4, #22]
1644:src/keys.c    **** 		}
 2686              		.loc 1 1644 4 is_stmt 1 view .LVU866
 2687 042a CAE6     		b	.L302
 2688              	.LVL199:
 2689              	.L309:
1644:src/keys.c    **** 		}
 2690              		.loc 1 1644 4 is_stmt 0 view .LVU867
 2691              	.LBE362:
 2692              	.LBE364:
1883:src/keys.c    **** 			else if (State2.ind)
 2693              		.loc 1 1883 5 is_stmt 1 view .LVU868
1883:src/keys.c    **** 			else if (State2.ind)
 2694              		.loc 1 1883 18 is_stmt 0 view .LVU869
 2695 042c 61F30002 		bfi	r2, r1, #0, #1
 2696 0430 A275     		strb	r2, [r4, #22]
1904:src/keys.c    **** }
 2697              		.loc 1 1904 9 view .LVU870
ARM GAS  /tmp/ccOshYsA.s 			page 109


 2698 0432 3320     		movs	r0, #51
 2699 0434 7CE6     		b	.L198
 2700              	.L310:
1860:src/keys.c    **** 				State2.multi = 1;
 2701              		.loc 1 1860 5 is_stmt 1 view .LVU871
 2702              	.LVL200:
 2703              	.LBB365:
 2704              	.LBI365:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 2705              		.loc 1 520 13 view .LVU872
 2706              	.LBB366:
 521:src/keys.c    **** 		return;
 2707              		.loc 1 521 2 view .LVU873
 521:src/keys.c    **** 		return;
 2708              		.loc 1 521 6 is_stmt 0 view .LVU874
 2709 0436 FFF7FEFF 		bl	is_bad_cmdline
 2710              	.LVL201:
 521:src/keys.c    **** 		return;
 2711              		.loc 1 521 5 view .LVU875
 2712 043a 20B9     		cbnz	r0, .L255
 2713              	.LBE366:
 2714              	.LBE365:
1860:src/keys.c    **** 				State2.multi = 1;
 2715              		.loc 1 1860 31 view .LVU876
 2716 043c A7F14200 		sub	r0, r7, #66
 2717              	.LBB368:
 2718              	.LBB367:
 2719 0440 C0B2     		uxtb	r0, r0
 2720 0442 FFF7FEFF 		bl	init_arg.part.0
 2721              	.LVL202:
 2722              	.L255:
1860:src/keys.c    **** 				State2.multi = 1;
 2723              		.loc 1 1860 31 view .LVU877
 2724              	.LBE367:
 2725              	.LBE368:
1861:src/keys.c    **** 				State2.alphashift = 0;
 2726              		.loc 1 1861 5 is_stmt 1 view .LVU878
1862:src/keys.c    **** 				State2.rarg = 0;
 2727              		.loc 1 1862 5 view .LVU879
1863:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2728              		.loc 1 1863 5 view .LVU880
1861:src/keys.c    **** 				State2.alphashift = 0;
 2729              		.loc 1 1861 18 is_stmt 0 view .LVU881
 2730 0446 6369     		ldr	r3, [r4, #20]
 2731 0448 23F44013 		bic	r3, r3, #3145728
 2732 044c 23F40063 		bic	r3, r3, #2048
 2733 0450 43F40063 		orr	r3, r3, #2048
 2734 0454 6361     		str	r3, [r4, #20]
1904:src/keys.c    **** }
 2735              		.loc 1 1904 9 view .LVU882
 2736 0456 3320     		movs	r0, #51
 2737 0458 6AE6     		b	.L198
 2738              	.L311:
1865:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2739              		.loc 1 1865 5 is_stmt 1 view .LVU883
 2740 045a FFF7FEFF 		bl	reset_arg
 2741              	.LVL203:
ARM GAS  /tmp/ccOshYsA.s 			page 110


1866:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2742              		.loc 1 1866 5 view .LVU884
1866:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2743              		.loc 1 1866 12 is_stmt 0 view .LVU885
 2744 045e 40F25510 		movw	r0, #341
 2745 0462 65E6     		b	.L198
 2746              	.L312:
1868:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2747              		.loc 1 1868 5 is_stmt 1 view .LVU886
 2748 0464 FFF7FEFF 		bl	reset_arg
 2749              	.LVL204:
1869:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2750              		.loc 1 1869 5 view .LVU887
1869:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2751              		.loc 1 1869 12 is_stmt 0 view .LVU888
 2752 0468 4FF4AB70 		mov	r0, #342
 2753 046c 60E6     		b	.L198
 2754              	.L216:
1688:src/keys.c    **** 	  case regY_idx:
 2755              		.loc 1 1688 6 is_stmt 1 view .LVU889
1688:src/keys.c    **** 	  case regY_idx:
 2756              		.loc 1 1688 13 is_stmt 0 view .LVU890
 2757 046e 0120     		movs	r0, #1
 2758 0470 BBE6     		b	.L301
 2759              	.L316:
 2760 0472 00BF     		.align	2
 2761              	.L315:
 2762 0474 CDCCCCCC 		.word	-858993459
 2763              		.cfi_endproc
 2764              	.LFE37:
 2766              		.section	.text.cur_shift,"ax",%progbits
 2767              		.align	1
 2768              		.p2align 2,,3
 2769              		.global	cur_shift
 2770              		.syntax unified
 2771              		.thumb
 2772              		.thumb_func
 2773              		.fpu fpv4-sp-d16
 2775              	cur_shift:
 2776              	.LFB0:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2777              		.loc 1 84 29 is_stmt 1 view -0
 2778              		.cfi_startproc
 2779              		@ args = 0, pretend = 0, frame = 0
 2780              		@ frame_needed = 0, uses_anonymous_args = 0
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2781              		.loc 1 85 2 view .LVU892
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2782              		.loc 1 84 29 is_stmt 0 view .LVU893
 2783 0000 08B5     		push	{r3, lr}
 2784              		.cfi_def_cfa_offset 8
 2785              		.cfi_offset 3, -8
 2786              		.cfi_offset 14, -4
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2787              		.loc 1 85 18 view .LVU894
 2788 0002 FFF7FEFF 		bl	shift_down
 2789              	.LVL205:
ARM GAS  /tmp/ccOshYsA.s 			page 111


  86:src/keys.c    **** }
 2790              		.loc 1 86 2 is_stmt 1 view .LVU895
  86:src/keys.c    **** }
 2791              		.loc 1 86 52 is_stmt 0 view .LVU896
 2792 0006 08B9     		cbnz	r0, .L318
  86:src/keys.c    **** }
 2793              		.loc 1 86 52 discriminator 1 view .LVU897
 2794 0008 014B     		ldr	r3, .L320
 2795 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2796              	.LVL206:
 2797              	.L318:
  87:src/keys.c    **** 
 2798              		.loc 1 87 1 discriminator 4 view .LVU898
 2799 000c 08BD     		pop	{r3, pc}
 2800              	.L321:
 2801 000e 00BF     		.align	2
 2802              	.L320:
 2803 0010 00000000 		.word	StateWhileOn
 2804              		.cfi_endproc
 2805              	.LFE0:
 2807              		.section	.text.reset_shift,"ax",%progbits
 2808              		.align	1
 2809              		.p2align 2,,3
 2810              		.global	reset_shift
 2811              		.syntax unified
 2812              		.thumb
 2813              		.thumb_func
 2814              		.fpu fpv4-sp-d16
 2816              	reset_shift:
 2817              	.LFB2:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 2818              		.loc 1 102 31 is_stmt 1 view -0
 2819              		.cfi_startproc
 2820              		@ args = 0, pretend = 0, frame = 0
 2821              		@ frame_needed = 0, uses_anonymous_args = 0
 103:src/keys.c    **** }
 2822              		.loc 1 103 2 view .LVU900
 2823              	.LVL207:
 2824              	.LBB369:
 2825              	.LBI369:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2826              		.loc 1 92 20 view .LVU901
 2827              	.LBB370:
  93:src/keys.c    **** 	State2.shifts = shift;
 2828              		.loc 1 93 2 view .LVU902
 2829              	.LBB371:
 2830              	.LBI371:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2831              		.loc 1 84 13 view .LVU903
 2832              	.LBB372:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2833              		.loc 1 85 2 view .LVU904
 2834              	.LBE372:
 2835              	.LBE371:
 2836              	.LBE370:
 2837              	.LBE369:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
ARM GAS  /tmp/ccOshYsA.s 			page 112


 2838              		.loc 1 102 31 is_stmt 0 view .LVU905
 2839 0000 08B5     		push	{r3, lr}
 2840              		.cfi_def_cfa_offset 8
 2841              		.cfi_offset 3, -8
 2842              		.cfi_offset 14, -4
 2843              	.LBB376:
 2844              	.LBB375:
 2845              	.LBB374:
 2846              	.LBB373:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2847              		.loc 1 85 18 view .LVU906
 2848 0002 FFF7FEFF 		bl	shift_down
 2849              	.LVL208:
  86:src/keys.c    **** }
 2850              		.loc 1 86 2 is_stmt 1 view .LVU907
  86:src/keys.c    **** }
 2851              		.loc 1 86 52 is_stmt 0 view .LVU908
 2852 0006 034B     		ldr	r3, .L327
 2853 0008 00B9     		cbnz	r0, .L323
 2854 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2855              	.LVL209:
 2856              	.L323:
  86:src/keys.c    **** }
 2857              		.loc 1 86 52 view .LVU909
 2858              	.LBE373:
 2859              	.LBE374:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2860              		.loc 1 94 2 is_stmt 1 view .LVU910
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2861              		.loc 1 94 16 is_stmt 0 view .LVU911
 2862 000c 0022     		movs	r2, #0
 2863 000e 1A74     		strb	r2, [r3, #16]
  95:src/keys.c    **** 	return r;
 2864              		.loc 1 95 2 is_stmt 1 view .LVU912
  95:src/keys.c    **** 	return r;
 2865              		.loc 1 95 19 is_stmt 0 view .LVU913
 2866 0010 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 2867              		.loc 1 96 2 is_stmt 1 view .LVU914
 2868              	.LVL210:
  96:src/keys.c    **** }
 2869              		.loc 1 96 2 is_stmt 0 view .LVU915
 2870              	.LBE375:
 2871              	.LBE376:
 104:src/keys.c    **** 
 2872              		.loc 1 104 1 view .LVU916
 2873 0012 08BD     		pop	{r3, pc}
 2874              	.L328:
 2875              		.align	2
 2876              	.L327:
 2877 0014 00000000 		.word	StateWhileOn
 2878              		.cfi_endproc
 2879              	.LFE2:
 2881              		.section	.text.keycode_to_row_column,"ax",%progbits
 2882              		.align	1
 2883              		.p2align 2,,3
 2884              		.global	keycode_to_row_column
ARM GAS  /tmp/ccOshYsA.s 			page 113


 2885              		.syntax unified
 2886              		.thumb
 2887              		.thumb_func
 2888              		.fpu fpv4-sp-d16
 2890              	keycode_to_row_column:
 2891              	.LVL211:
 2892              	.LFB6:
 177:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 2893              		.loc 1 177 1 is_stmt 1 view -0
 2894              		.cfi_startproc
 2895              		@ args = 0, pretend = 0, frame = 0
 2896              		@ frame_needed = 0, uses_anonymous_args = 0
 2897              		@ link register save eliminated.
 178:src/keys.c    **** }
 2898              		.loc 1 178 2 view .LVU918
 178:src/keys.c    **** }
 2899              		.loc 1 178 18 is_stmt 0 view .LVU919
 2900 0000 074A     		ldr	r2, .L330
 2901 0002 82FB0032 		smull	r3, r2, r2, r0
 2902 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 178:src/keys.c    **** }
 2903              		.loc 1 178 24 view .LVU920
 2904 000a 03EB8302 		add	r2, r3, r3, lsl #2
 2905 000e 5200     		lsls	r2, r2, #1
 178:src/keys.c    **** }
 2906              		.loc 1 178 33 view .LVU921
 2907 0010 03EB4303 		add	r3, r3, r3, lsl #1
 2908 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 178:src/keys.c    **** }
 2909              		.loc 1 178 12 view .LVU922
 2910 0018 02F10B00 		add	r0, r2, #11
 2911              	.LVL212:
 179:src/keys.c    **** 
 2912              		.loc 1 179 1 view .LVU923
 2913 001c 1844     		add	r0, r0, r3
 2914 001e 7047     		bx	lr
 2915              	.L331:
 2916              		.align	2
 2917              	.L330:
 2918 0020 ABAAAA2A 		.word	715827883
 2919              		.cfi_endproc
 2920              	.LFE6:
 2922              		.section	.text.row_column_to_keycode,"ax",%progbits
 2923              		.align	1
 2924              		.p2align 2,,3
 2925              		.global	row_column_to_keycode
 2926              		.syntax unified
 2927              		.thumb
 2928              		.thumb_func
 2929              		.fpu fpv4-sp-d16
 2931              	row_column_to_keycode:
 2932              	.LVL213:
 2933              	.LFB7:
 188:src/keys.c    **** 	int row = c / 10 - 1;
 2934              		.loc 1 188 1 is_stmt 1 view -0
 2935              		.cfi_startproc
 2936              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccOshYsA.s 			page 114


 2937              		@ frame_needed = 0, uses_anonymous_args = 0
 2938              		@ link register save eliminated.
 189:src/keys.c    **** 	int col = c % 10 - 1;
 2939              		.loc 1 189 2 view .LVU925
 189:src/keys.c    **** 	int col = c % 10 - 1;
 2940              		.loc 1 189 14 is_stmt 0 view .LVU926
 2941 0000 0E4A     		ldr	r2, .L338
 2942 0002 82FB0032 		smull	r3, r2, r2, r0
 2943 0006 C317     		asrs	r3, r0, #31
 2944 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 190:src/keys.c    **** 
 2945              		.loc 1 190 14 view .LVU927
 2946 000c 03EB8302 		add	r2, r3, r3, lsl #2
 189:src/keys.c    **** 	int col = c % 10 - 1;
 2947              		.loc 1 189 6 view .LVU928
 2948 0010 013B     		subs	r3, r3, #1
 2949              	.LVL214:
 190:src/keys.c    **** 
 2950              		.loc 1 190 2 is_stmt 1 view .LVU929
 190:src/keys.c    **** 
 2951              		.loc 1 190 14 is_stmt 0 view .LVU930
 2952 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 2953              	.LVL215:
 192:src/keys.c    **** 		return -1;
 2954              		.loc 1 192 5 view .LVU931
 2955 0016 062B     		cmp	r3, #6
 190:src/keys.c    **** 
 2956              		.loc 1 190 6 view .LVU932
 2957 0018 00F1FF30 		add	r0, r0, #-1
 2958              	.LVL216:
 192:src/keys.c    **** 		return -1;
 2959              		.loc 1 192 2 is_stmt 1 view .LVU933
 192:src/keys.c    **** 		return -1;
 2960              		.loc 1 192 5 is_stmt 0 view .LVU934
 2961 001c 0AD8     		bhi	.L337
 192:src/keys.c    **** 		return -1;
 2962              		.loc 1 192 36 discriminator 1 view .LVU935
 2963 001e 012B     		cmp	r3, #1
 2964 0020 CCBF     		ite	gt
 2965 0022 0422     		movgt	r2, #4
 2966 0024 0522     		movle	r2, #5
 192:src/keys.c    **** 		return -1;
 2967              		.loc 1 192 25 discriminator 1 view .LVU936
 2968 0026 8242     		cmp	r2, r0
 2969 0028 04DB     		blt	.L337
 194:src/keys.c    **** }
 2970              		.loc 1 194 2 is_stmt 1 view .LVU937
 194:src/keys.c    **** }
 2971              		.loc 1 194 13 is_stmt 0 view .LVU938
 2972 002a 03EB4303 		add	r3, r3, r3, lsl #1
 2973              	.LVL217:
 194:src/keys.c    **** }
 2974              		.loc 1 194 17 view .LVU939
 2975 002e 00EB4300 		add	r0, r0, r3, lsl #1
 2976              	.LVL218:
 194:src/keys.c    **** }
 2977              		.loc 1 194 17 view .LVU940
ARM GAS  /tmp/ccOshYsA.s 			page 115


 2978 0032 7047     		bx	lr
 2979              	.LVL219:
 2980              	.L337:
 193:src/keys.c    **** 	return row * 6 + col;
 2981              		.loc 1 193 10 view .LVU941
 2982 0034 4FF0FF30 		mov	r0, #-1
 2983              	.LVL220:
 195:src/keys.c    **** 
 2984              		.loc 1 195 1 view .LVU942
 2985 0038 7047     		bx	lr
 2986              	.L339:
 2987 003a 00BF     		.align	2
 2988              	.L338:
 2989 003c 67666666 		.word	1717986919
 2990              		.cfi_endproc
 2991              	.LFE7:
 2993              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 2994              		.align	1
 2995              		.p2align 2,,3
 2996              		.global	keycode_to_digit_or_register
 2997              		.syntax unified
 2998              		.thumb
 2999              		.thumb_func
 3000              		.fpu fpv4-sp-d16
 3002              	keycode_to_digit_or_register:
 3003              	.LVL221:
 3004              	.LFB8:
 209:src/keys.c    ****   static const unsigned char map[] = {
 3005              		.loc 1 209 1 is_stmt 1 view -0
 3006              		.cfi_startproc
 3007              		@ args = 0, pretend = 0, frame = 0
 3008              		@ frame_needed = 0, uses_anonymous_args = 0
 3009              		@ link register save eliminated.
 210:src/keys.c    ****     // K00 - K05
 3010              		.loc 1 210 3 view .LVU944
 232:src/keys.c    **** }
 3011              		.loc 1 232 3 view .LVU945
 3012              	.LBB377:
 3013              	.LBI377:
 124:src/keys.c    **** {
 3014              		.loc 1 124 12 view .LVU946
 3015              	.LBB378:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3016              		.loc 1 126 2 view .LVU947
 136:src/keys.c    **** }
 3017              		.loc 1 136 2 view .LVU948
 136:src/keys.c    **** }
 3018              		.loc 1 136 23 is_stmt 0 view .LVU949
 3019 0000 024B     		ldr	r3, .L341
 3020              	.LBE378:
 3021              	.LBE377:
 232:src/keys.c    **** }
 3022              		.loc 1 232 28 view .LVU950
 3023 0002 034A     		ldr	r2, .L341+4
 3024              	.LBB380:
 3025              	.LBB379:
 136:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 116


 3026              		.loc 1 136 23 view .LVU951
 3027 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3028              	.LBE379:
 3029              	.LBE380:
 233:src/keys.c    **** #else
 3030              		.loc 1 233 1 view .LVU952
 3031 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3032              	.LVL222:
 233:src/keys.c    **** #else
 3033              		.loc 1 233 1 view .LVU953
 3034 0008 7047     		bx	lr
 3035              	.L342:
 3036 000a 00BF     		.align	2
 3037              	.L341:
 3038 000c 00000000 		.word	.LANCHOR1
 3039 0010 00000000 		.word	.LANCHOR0
 3040              		.cfi_endproc
 3041              	.LFE8:
 3043              		.section	.text.init_state,"ax",%progbits
 3044              		.align	1
 3045              		.p2align 2,,3
 3046              		.global	init_state
 3047              		.syntax unified
 3048              		.thumb
 3049              		.thumb_func
 3050              		.fpu fpv4-sp-d16
 3052              	init_state:
 3053              	.LFB13:
 583:src/keys.c    **** #ifndef REALBUILD
 3054              		.loc 1 583 23 is_stmt 1 view -0
 3055              		.cfi_startproc
 3056              		@ args = 0, pretend = 0, frame = 0
 3057              		@ frame_needed = 0, uses_anonymous_args = 0
 585:src/keys.c    **** 	unsigned int b = State2.trace;
 3058              		.loc 1 585 2 view .LVU955
 583:src/keys.c    **** #ifndef REALBUILD
 3059              		.loc 1 583 23 is_stmt 0 view .LVU956
 3060 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3061              		.cfi_def_cfa_offset 24
 3062              		.cfi_offset 4, -24
 3063              		.cfi_offset 5, -20
 3064              		.cfi_offset 6, -16
 3065              		.cfi_offset 7, -12
 3066              		.cfi_offset 8, -8
 3067              		.cfi_offset 14, -4
 585:src/keys.c    **** 	unsigned int b = State2.trace;
 3068              		.loc 1 585 25 view .LVU957
 3069 0004 154C     		ldr	r4, .L345
 593:src/keys.c    **** 	// Removed: will clear any locals on power off
 3070              		.loc 1 593 10 view .LVU958
 3071 0006 0021     		movs	r1, #0
 597:src/keys.c    **** 	State2.test = TST_NONE;
 3072              		.loc 1 597 2 view .LVU959
 3073 0008 1422     		movs	r2, #20
 3074 000a 04F10800 		add	r0, r4, #8
 593:src/keys.c    **** 	// Removed: will clear any locals on power off
 3075              		.loc 1 593 10 view .LVU960
ARM GAS  /tmp/ccOshYsA.s 			page 117


 3076 000e E177     		strb	r1, [r4, #31]
 585:src/keys.c    **** 	unsigned int b = State2.trace;
 3077              		.loc 1 585 25 view .LVU961
 3078 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 586:src/keys.c    **** #else
 3079              		.loc 1 586 25 view .LVU962
 3080 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 590:src/keys.c    **** 	int k = LastKey;
 3081              		.loc 1 590 10 view .LVU963
 3082 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 591:src/keys.c    **** 
 3083              		.loc 1 591 10 view .LVU964
 3084 0016 94F91380 		ldrsb	r8, [r4, #19]
 597:src/keys.c    **** 	State2.test = TST_NONE;
 3085              		.loc 1 597 2 view .LVU965
 3086 001a FFF7FEFF 		bl	xset
 3087              	.LVL223:
 599:src/keys.c    **** 	update_program_bounds(1);
 3088              		.loc 1 599 17 view .LVU966
 3089 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 598:src/keys.c    **** 	State2.runmode = 1;
 3090              		.loc 1 598 14 view .LVU967
 3091 0020 0722     		movs	r2, #7
 599:src/keys.c    **** 	update_program_bounds(1);
 3092              		.loc 1 599 17 view .LVU968
 3093 0022 43F04003 		orr	r3, r3, #64
 600:src/keys.c    **** 	set_lift();
 3094              		.loc 1 600 2 view .LVU969
 3095 0026 0120     		movs	r0, #1
 598:src/keys.c    **** 	State2.runmode = 1;
 3096              		.loc 1 598 14 view .LVU970
 3097 0028 E273     		strb	r2, [r4, #15]
 599:src/keys.c    **** 	update_program_bounds(1);
 3098              		.loc 1 599 17 view .LVU971
 3099 002a A375     		strb	r3, [r4, #22]
 600:src/keys.c    **** 	set_lift();
 3100              		.loc 1 600 2 view .LVU972
 3101 002c FFF7FEFF 		bl	update_program_bounds
 3102              	.LVL224:
 601:src/keys.c    **** 
 3103              		.loc 1 601 2 view .LVU973
 3104 0030 FFF7FEFF 		bl	set_lift
 3105              	.LVL225:
 608:src/keys.c    **** 	State2.flags = a;
 3106              		.loc 1 608 15 view .LVU974
 3107 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 609:src/keys.c    **** #else
 3108              		.loc 1 609 15 view .LVU975
 3109 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 613:src/keys.c    **** }
 3110              		.loc 1 613 15 view .LVU976
 3111 0038 0949     		ldr	r1, .L345+4
 606:src/keys.c    **** #ifndef REALBUILD
 3112              		.loc 1 606 10 view .LVU977
 3113 003a 84F81380 		strb	r8, [r4, #19]
 585:src/keys.c    **** 	unsigned int b = State2.trace;
 3114              		.loc 1 585 25 view .LVU978
ARM GAS  /tmp/ccOshYsA.s 			page 118


 3115 003e 05F00105 		and	r5, r5, #1
 3116              	.LVL226:
 586:src/keys.c    **** #else
 3117              		.loc 1 586 2 is_stmt 1 view .LVU979
 586:src/keys.c    **** #else
 3118              		.loc 1 586 25 is_stmt 0 view .LVU980
 3119 0042 F609     		lsrs	r6, r6, #7
 3120              	.LVL227:
 590:src/keys.c    **** 	int k = LastKey;
 3121              		.loc 1 590 2 is_stmt 1 view .LVU981
 590:src/keys.c    **** 	int k = LastKey;
 3122              		.loc 1 590 10 is_stmt 0 view .LVU982
 3123 0044 FFB2     		uxtb	r7, r7
 3124              	.LVL228:
 591:src/keys.c    **** 
 3125              		.loc 1 591 2 is_stmt 1 view .LVU983
 593:src/keys.c    **** 	// Removed: will clear any locals on power off
 3126              		.loc 1 593 2 view .LVU984
 597:src/keys.c    **** 	State2.test = TST_NONE;
 3127              		.loc 1 597 2 view .LVU985
 598:src/keys.c    **** 	State2.runmode = 1;
 3128              		.loc 1 598 2 view .LVU986
 599:src/keys.c    **** 	update_program_bounds(1);
 3129              		.loc 1 599 2 view .LVU987
 600:src/keys.c    **** 	set_lift();
 3130              		.loc 1 600 2 view .LVU988
 601:src/keys.c    **** 
 3131              		.loc 1 601 2 view .LVU989
 605:src/keys.c    **** 	LastKey = k;
 3132              		.loc 1 605 2 view .LVU990
 608:src/keys.c    **** 	State2.flags = a;
 3133              		.loc 1 608 15 is_stmt 0 view .LVU991
 3134 0046 66F3C712 		bfi	r2, r6, #7, #1
 609:src/keys.c    **** #else
 3135              		.loc 1 609 15 view .LVU992
 3136 004a 65F30003 		bfi	r3, r5, #0, #1
 613:src/keys.c    **** }
 3137              		.loc 1 613 15 view .LVU993
 3138 004e 6420     		movs	r0, #100
 608:src/keys.c    **** 	State2.flags = a;
 3139              		.loc 1 608 15 view .LVU994
 3140 0050 E275     		strb	r2, [r4, #23]
 609:src/keys.c    **** #else
 3141              		.loc 1 609 15 view .LVU995
 3142 0052 2376     		strb	r3, [r4, #24]
 605:src/keys.c    **** 	LastKey = k;
 3143              		.loc 1 605 10 view .LVU996
 3144 0054 A774     		strb	r7, [r4, #18]
 606:src/keys.c    **** #ifndef REALBUILD
 3145              		.loc 1 606 2 is_stmt 1 view .LVU997
 608:src/keys.c    **** 	State2.flags = a;
 3146              		.loc 1 608 2 view .LVU998
 609:src/keys.c    **** #else
 3147              		.loc 1 609 2 view .LVU999
 613:src/keys.c    **** }
 3148              		.loc 1 613 2 view .LVU1000
 613:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 119


 3149              		.loc 1 613 15 is_stmt 0 view .LVU1001
 3150 0056 0860     		str	r0, [r1]
 614:src/keys.c    **** 
 3151              		.loc 1 614 1 view .LVU1002
 3152 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3153              	.LVL229:
 3154              	.L346:
 614:src/keys.c    **** 
 3155              		.loc 1 614 1 view .LVU1003
 3156              		.align	2
 3157              	.L345:
 3158 005c 00000000 		.word	StateWhileOn
 3159 0060 00000000 		.word	ShowRegister
 3160              		.cfi_endproc
 3161              	.LFE13:
 3163              		.section	.text.soft_init_state,"ax",%progbits
 3164              		.align	1
 3165              		.p2align 2,,3
 3166              		.global	soft_init_state
 3167              		.syntax unified
 3168              		.thumb
 3169              		.thumb_func
 3170              		.fpu fpv4-sp-d16
 3172              	soft_init_state:
 3173              	.LFB14:
 616:src/keys.c    **** 	int soft;
 3174              		.loc 1 616 28 is_stmt 1 view -0
 3175              		.cfi_startproc
 3176              		@ args = 0, pretend = 0, frame = 0
 3177              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int runmode;
 3178              		.loc 1 617 2 view .LVU1005
 618:src/keys.c    **** 	unsigned int alphas;
 3179              		.loc 1 618 2 view .LVU1006
 619:src/keys.c    **** 
 3180              		.loc 1 619 2 view .LVU1007
 621:src/keys.c    **** 		CmdLineLength = 0;
 3181              		.loc 1 621 2 view .LVU1008
 616:src/keys.c    **** 	int soft;
 3182              		.loc 1 616 28 is_stmt 0 view .LVU1009
 3183 0000 38B5     		push	{r3, r4, r5, lr}
 3184              		.cfi_def_cfa_offset 16
 3185              		.cfi_offset 3, -16
 3186              		.cfi_offset 4, -12
 3187              		.cfi_offset 5, -8
 3188              		.cfi_offset 14, -4
 621:src/keys.c    **** 		CmdLineLength = 0;
 3189              		.loc 1 621 6 view .LVU1010
 3190 0002 114C     		ldr	r4, .L354
 621:src/keys.c    **** 		CmdLineLength = 0;
 3191              		.loc 1 621 5 view .LVU1011
 3192 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3193 0006 D3B9     		cbnz	r3, .L353
 627:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3194              		.loc 1 627 2 is_stmt 1 view .LVU1012
 628:src/keys.c    **** 	runmode = State2.runmode;
 3195              		.loc 1 628 17 is_stmt 0 view .LVU1013
ARM GAS  /tmp/ccOshYsA.s 			page 120


 3196 0008 104A     		ldr	r2, .L354+4
 3197 000a 6369     		ldr	r3, [r4, #20]
 628:src/keys.c    **** 	runmode = State2.runmode;
 3198              		.loc 1 628 60 view .LVU1014
 3199 000c 1A42     		tst	r2, r3
 3200 000e 0AD0     		beq	.L350
 3201              	.L351:
 3202              	.LVL230:
 629:src/keys.c    **** 	alphas = State2.alphas;
 3203              		.loc 1 629 2 is_stmt 1 view .LVU1015
 630:src/keys.c    **** 	init_state();
 3204              		.loc 1 630 17 is_stmt 0 view .LVU1016
 3205 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3206              	.LVL231:
 630:src/keys.c    **** 	init_state();
 3207              		.loc 1 630 2 is_stmt 1 view .LVU1017
 631:src/keys.c    **** 	if (soft) {
 3208              		.loc 1 631 2 view .LVU1018
 3209 0012 FFF7FEFF 		bl	init_state
 3210              	.LVL232:
 632:src/keys.c    **** 		State2.runmode = runmode;
 3211              		.loc 1 632 2 view .LVU1019
 633:src/keys.c    **** 		State2.alphas = alphas;
 3212              		.loc 1 633 3 view .LVU1020
 634:src/keys.c    **** 	}
 3213              		.loc 1 634 3 view .LVU1021
 634:src/keys.c    **** 	}
 3214              		.loc 1 634 17 is_stmt 0 view .LVU1022
 3215 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3216 0018 05F04805 		and	r5, r5, #72
 3217 001c 23F04803 		bic	r3, r3, #72
 3218 0020 2B43     		orrs	r3, r3, r5
 3219 0022 A375     		strb	r3, [r4, #22]
 636:src/keys.c    **** 
 3220              		.loc 1 636 1 view .LVU1023
 3221 0024 38BD     		pop	{r3, r4, r5, pc}
 3222              	.LVL233:
 3223              	.L350:
 628:src/keys.c    **** 	runmode = State2.runmode;
 3224              		.loc 1 628 60 discriminator 2 view .LVU1024
 3225 0026 E368     		ldr	r3, [r4, #12]
 3226 0028 23F47F03 		bic	r3, r3, #16711680
 3227 002c 23F47F43 		bic	r3, r3, #65280
 3228 0030 B3F1E06F 		cmp	r3, #117440512
 3229 0034 ECD1     		bne	.L351
 3230              	.LVL234:
 629:src/keys.c    **** 	alphas = State2.alphas;
 3231              		.loc 1 629 2 is_stmt 1 view .LVU1025
 630:src/keys.c    **** 	init_state();
 3232              		.loc 1 630 2 view .LVU1026
 631:src/keys.c    **** 	if (soft) {
 3233              		.loc 1 631 2 view .LVU1027
 636:src/keys.c    **** 
 3234              		.loc 1 636 1 is_stmt 0 view .LVU1028
 3235 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3236              		.cfi_remember_state
 3237              		.cfi_restore 14
ARM GAS  /tmp/ccOshYsA.s 			page 121


 3238              		.cfi_restore 5
 3239              		.cfi_restore 4
 3240              		.cfi_restore 3
 3241              		.cfi_def_cfa_offset 0
 631:src/keys.c    **** 	if (soft) {
 3242              		.loc 1 631 2 view .LVU1029
 3243 003a FFF7FEBF 		b	init_state
 3244              	.LVL235:
 3245              	.L353:
 3246              		.cfi_restore_state
 3247              	.LBB383:
 3248              	.LBI383:
 616:src/keys.c    **** 	int soft;
 3249              		.loc 1 616 6 is_stmt 1 view .LVU1030
 3250              	.LBB384:
 622:src/keys.c    **** 		CmdLineEex = 0;
 3251              		.loc 1 622 3 view .LVU1031
 623:src/keys.c    **** 		CmdLineDot = 0;
 3252              		.loc 1 623 3 view .LVU1032
 624:src/keys.c    **** 		return;
 3253              		.loc 1 624 3 view .LVU1033
 622:src/keys.c    **** 		CmdLineEex = 0;
 3254              		.loc 1 622 17 is_stmt 0 view .LVU1034
 3255 003e 0023     		movs	r3, #0
 3256 0040 A383     		strh	r3, [r4, #28]	@ movhi
 624:src/keys.c    **** 		return;
 3257              		.loc 1 624 14 view .LVU1035
 3258 0042 A377     		strb	r3, [r4, #30]
 625:src/keys.c    **** 	}
 3259              		.loc 1 625 3 is_stmt 1 view .LVU1036
 3260              	.LBE384:
 3261              	.LBE383:
 636:src/keys.c    **** 
 3262              		.loc 1 636 1 is_stmt 0 view .LVU1037
 3263 0044 38BD     		pop	{r3, r4, r5, pc}
 3264              	.L355:
 3265 0046 00BF     		.align	2
 3266              	.L354:
 3267 0048 00000000 		.word	StateWhileOn
 3268 004c 002F2004 		.word	69218048
 3269              		.cfi_endproc
 3270              	.LFE14:
 3272              		.section	.text.current_catalogue_max,"ax",%progbits
 3273              		.align	1
 3274              		.p2align 2,,3
 3275              		.global	current_catalogue_max
 3276              		.syntax unified
 3277              		.thumb
 3278              		.thumb_func
 3279              		.fpu fpv4-sp-d16
 3281              	current_catalogue_max:
 3282              	.LFB39:
2041:src/keys.c    **** 	// A quick table of catalogue sizes
 3283              		.loc 1 2041 33 is_stmt 1 view -0
 3284              		.cfi_startproc
 3285              		@ args = 0, pretend = 0, frame = 0
 3286              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccOshYsA.s 			page 122


 3287              		@ link register save eliminated.
2044:src/keys.c    **** 	{
 3288              		.loc 1 2044 2 view .LVU1039
2075:src/keys.c    **** #endif
 3289              		.loc 1 2075 2 view .LVU1040
2075:src/keys.c    **** #endif
 3290              		.loc 1 2075 31 is_stmt 0 view .LVU1041
 3291 0000 024B     		ldr	r3, .L357
2075:src/keys.c    **** #endif
 3292              		.loc 1 2075 24 view .LVU1042
 3293 0002 034A     		ldr	r2, .L357+4
2075:src/keys.c    **** #endif
 3294              		.loc 1 2075 31 view .LVU1043
 3295 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2077:src/keys.c    **** 
 3296              		.loc 1 2077 1 view .LVU1044
 3297 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3298 0008 7047     		bx	lr
 3299              	.L358:
 3300 000a 00BF     		.align	2
 3301              	.L357:
 3302 000c 00000000 		.word	StateWhileOn
 3303 0010 00000000 		.word	.LANCHOR2
 3304              		.cfi_endproc
 3305              	.LFE39:
 3307              		.section	.text.current_catalogue,"ax",%progbits
 3308              		.align	1
 3309              		.p2align 2,,3
 3310              		.global	current_catalogue
 3311              		.syntax unified
 3312              		.thumb
 3313              		.thumb_func
 3314              		.fpu fpv4-sp-d16
 3316              	current_catalogue:
 3317              	.LVL236:
 3318              	.LFB41:
2090:src/keys.c    **** 	// A quick table of catalogue tables
 3319              		.loc 1 2090 33 is_stmt 1 view -0
 3320              		.cfi_startproc
 3321              		@ args = 0, pretend = 0, frame = 0
 3322              		@ frame_needed = 0, uses_anonymous_args = 0
 3323              		@ link register save eliminated.
2093:src/keys.c    **** 	{
 3324              		.loc 1 2093 2 view .LVU1046
2120:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3325              		.loc 1 2120 2 view .LVU1047
2121:src/keys.c    **** 	int m, i;
 3326              		.loc 1 2121 2 view .LVU1048
2121:src/keys.c    **** 	int m, i;
 3327              		.loc 1 2121 25 is_stmt 0 view .LVU1049
 3328 0000 314A     		ldr	r2, .L386
2121:src/keys.c    **** 	int m, i;
 3329              		.loc 1 2121 15 view .LVU1050
 3330 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3331              	.LVL237:
2122:src/keys.c    **** 	unsigned p, q;
 3332              		.loc 1 2122 2 is_stmt 1 view .LVU1051
ARM GAS  /tmp/ccOshYsA.s 			page 123


2123:src/keys.c    **** 
 3333              		.loc 1 2123 2 view .LVU1052
2125:src/keys.c    **** 		if (n == OP_ZERO)
 3334              		.loc 1 2125 2 view .LVU1053
2125:src/keys.c    **** 		if (n == OP_ZERO)
 3335              		.loc 1 2125 5 is_stmt 0 view .LVU1054
 3336 0004 102B     		cmp	r3, #16
 3337 0006 39D0     		beq	.L380
2130:src/keys.c    **** 		if (n == OP_ZERO)
 3338              		.loc 1 2130 2 is_stmt 1 view .LVU1055
2130:src/keys.c    **** 		if (n == OP_ZERO)
 3339              		.loc 1 2130 5 is_stmt 0 view .LVU1056
 3340 0008 112B     		cmp	r3, #17
 3341 000a 32D0     		beq	.L381
2135:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3342              		.loc 1 2135 2 is_stmt 1 view .LVU1057
2135:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3343              		.loc 1 2135 5 is_stmt 0 view .LVU1058
 3344 000c 122B     		cmp	r3, #18
 3345 000e 45D0     		beq	.L382
2148:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3346              		.loc 1 2148 2 is_stmt 1 view .LVU1059
2148:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3347              		.loc 1 2148 5 is_stmt 0 view .LVU1060
 3348 0010 0E2B     		cmp	r3, #14
 3349 0012 38D0     		beq	.L383
2151:src/keys.c    **** 
 3350              		.loc 1 2151 3 is_stmt 1 view .LVU1061
2151:src/keys.c    **** 
 3351              		.loc 1 2151 7 is_stmt 0 view .LVU1062
 3352 0014 2D4A     		ldr	r2, .L386+4
2153:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3353              		.loc 1 2153 35 view .LVU1063
 3354 0016 A3F10B01 		sub	r1, r3, #11
2153:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3355              		.loc 1 2153 5 view .LVU1064
 3356 001a 0429     		cmp	r1, #4
2151:src/keys.c    **** 
 3357              		.loc 1 2151 7 view .LVU1065
 3358 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3359              	.LVL238:
2153:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3360              		.loc 1 2153 2 is_stmt 1 view .LVU1066
2153:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3361              		.loc 1 2153 5 is_stmt 0 view .LVU1067
 3362 0020 38D9     		bls	.L366
2156:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3363              		.loc 1 2156 2 is_stmt 1 view .LVU1068
2156:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3364              		.loc 1 2156 5 is_stmt 0 view .LVU1069
 3365 0022 142B     		cmp	r3, #20
 3366 0024 4DD8     		bhi	.L374
2160:src/keys.c    **** 	p = cat[0];
 3367              		.loc 1 2160 2 is_stmt 1 view .LVU1070
2090:src/keys.c    **** 	// A quick table of catalogue tables
 3368              		.loc 1 2090 33 is_stmt 0 view .LVU1071
 3369 0026 10B4     		push	{r4}
ARM GAS  /tmp/ccOshYsA.s 			page 124


 3370              		.cfi_def_cfa_offset 4
 3371              		.cfi_offset 4, -4
2160:src/keys.c    **** 	p = cat[0];
 3372              		.loc 1 2160 11 view .LVU1072
 3373 0028 00EBA001 		add	r1, r0, r0, asr #2
2160:src/keys.c    **** 	p = cat[0];
 3374              		.loc 1 2160 6 view .LVU1073
 3375 002c 5318     		adds	r3, r2, r1
 3376              	.LVL239:
2161:src/keys.c    **** 	q = cat[1];
 3377              		.loc 1 2161 2 is_stmt 1 view .LVU1074
2162:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3378              		.loc 1 2162 2 view .LVU1075
2163:src/keys.c    **** 
 3379              		.loc 1 2163 2 view .LVU1076
2163:src/keys.c    **** 
 3380              		.loc 1 2163 35 is_stmt 0 view .LVU1077
 3381 002e 4000     		lsls	r0, r0, #1
 3382              	.LVL240:
2161:src/keys.c    **** 	q = cat[1];
 3383              		.loc 1 2161 4 view .LVU1078
 3384 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3385              	.LVL241:
2162:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3386              		.loc 1 2162 4 view .LVU1079
 3387 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3388              	.LVL242:
2162:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3389              		.loc 1 2162 4 view .LVU1080
 3390 0034 2649     		ldr	r1, .L386+8
 3391              	.LVL243:
2163:src/keys.c    **** 
 3392              		.loc 1 2163 54 view .LVU1081
 3393 0036 C443     		mvns	r4, r0
2163:src/keys.c    **** 
 3394              		.loc 1 2163 35 view .LVU1082
 3395 0038 00F00600 		and	r0, r0, #6
2163:src/keys.c    **** 
 3396              		.loc 1 2163 54 view .LVU1083
 3397 003c 04F00604 		and	r4, r4, #6
2163:src/keys.c    **** 
 3398              		.loc 1 2163 24 view .LVU1084
 3399 0040 0230     		adds	r0, r0, #2
2163:src/keys.c    **** 
 3400              		.loc 1 2163 48 view .LVU1085
 3401 0042 E340     		lsrs	r3, r3, r4
 3402              	.LVL244:
2163:src/keys.c    **** 
 3403              		.loc 1 2163 18 view .LVU1086
 3404 0044 02FA00F0 		lsl	r0, r2, r0
2163:src/keys.c    **** 
 3405              		.loc 1 2163 43 view .LVU1087
 3406 0048 1843     		orrs	r0, r0, r3
2163:src/keys.c    **** 
 3407              		.loc 1 2163 4 view .LVU1088
 3408 004a C0F30903 		ubfx	r3, r0, #0, #10
 3409              	.LVL245:
ARM GAS  /tmp/ccOshYsA.s 			page 125


2166:src/keys.c    **** 		if (m < opcode_breaks[i])
 3410              		.loc 1 2166 2 is_stmt 1 view .LVU1089
2166:src/keys.c    **** 		if (m < opcode_breaks[i])
 3411              		.loc 1 2166 12 view .LVU1090
2163:src/keys.c    **** 
 3412              		.loc 1 2163 4 is_stmt 0 view .LVU1091
 3413 004e 3422     		movs	r2, #52
 3414              	.LVL246:
2166:src/keys.c    **** 		if (m < opcode_breaks[i])
 3415              		.loc 1 2166 8 view .LVU1092
 3416 0050 0020     		movs	r0, #0
 3417 0052 01E0     		b	.L370
 3418              	.LVL247:
 3419              	.L385:
2166:src/keys.c    **** 		if (m < opcode_breaks[i])
 3420              		.loc 1 2166 8 view .LVU1093
 3421 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3422              	.LVL248:
 3423              	.L370:
2167:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3424              		.loc 1 2167 3 is_stmt 1 view .LVU1094
2169:src/keys.c    **** 	}
 3425              		.loc 1 2169 3 view .LVU1095
2167:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3426              		.loc 1 2167 6 is_stmt 0 view .LVU1096
 3427 0058 9A42     		cmp	r2, r3
 3428 005a 2FDC     		bgt	.L384
2166:src/keys.c    **** 		if (m < opcode_breaks[i])
 3429              		.loc 1 2166 25 discriminator 2 view .LVU1097
 3430 005c 0130     		adds	r0, r0, #1
 3431              	.LVL249:
2166:src/keys.c    **** 		if (m < opcode_breaks[i])
 3432              		.loc 1 2166 2 discriminator 2 view .LVU1098
 3433 005e 0728     		cmp	r0, #7
2169:src/keys.c    **** 	}
 3434              		.loc 1 2169 5 discriminator 2 view .LVU1099
 3435 0060 A3EB0203 		sub	r3, r3, r2
 3436              	.LVL250:
2166:src/keys.c    **** 		if (m < opcode_breaks[i])
 3437              		.loc 1 2166 24 is_stmt 1 discriminator 2 view .LVU1100
2166:src/keys.c    **** 		if (m < opcode_breaks[i])
 3438              		.loc 1 2166 12 discriminator 2 view .LVU1101
2166:src/keys.c    **** 		if (m < opcode_breaks[i])
 3439              		.loc 1 2166 2 is_stmt 0 discriminator 2 view .LVU1102
 3440 0064 F6D1     		bne	.L385
2171:src/keys.c    **** }
 3441              		.loc 1 2171 2 is_stmt 1 view .LVU1103
2171:src/keys.c    **** }
 3442              		.loc 1 2171 9 is_stmt 0 view .LVU1104
 3443 0066 03F12000 		add	r0, r3, #32
 3444              	.LVL251:
2171:src/keys.c    **** }
 3445              		.loc 1 2171 9 view .LVU1105
 3446 006a 0002     		lsls	r0, r0, #8
 3447              	.L359:
2172:src/keys.c    **** 
 3448              		.loc 1 2172 1 view .LVU1106
ARM GAS  /tmp/ccOshYsA.s 			page 126


 3449 006c 5DF8044B 		ldr	r4, [sp], #4
 3450              		.cfi_restore 4
 3451              		.cfi_def_cfa_offset 0
 3452 0070 7047     		bx	lr
 3453              	.LVL252:
 3454              	.L381:
2131:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3455              		.loc 1 2131 3 is_stmt 1 view .LVU1107
2131:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3456              		.loc 1 2131 6 is_stmt 0 view .LVU1108
 3457 0072 4B28     		cmp	r0, #75
 3458 0074 1FD0     		beq	.L372
2133:src/keys.c    **** 	}
 3459              		.loc 1 2133 3 is_stmt 1 view .LVU1109
2133:src/keys.c    **** 	}
 3460              		.loc 1 2133 10 is_stmt 0 view .LVU1110
 3461 0076 40F40450 		orr	r0, r0, #8448
 3462              	.LVL253:
2133:src/keys.c    **** 	}
 3463              		.loc 1 2133 10 view .LVU1111
 3464 007a 7047     		bx	lr
 3465              	.LVL254:
 3466              	.L380:
2126:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3467              		.loc 1 2126 3 is_stmt 1 view .LVU1112
2126:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3468              		.loc 1 2126 6 is_stmt 0 view .LVU1113
 3469 007c 4B28     		cmp	r0, #75
 3470 007e 17D0     		beq	.L371
2128:src/keys.c    **** 	}
 3471              		.loc 1 2128 3 is_stmt 1 view .LVU1114
2128:src/keys.c    **** 	}
 3472              		.loc 1 2128 10 is_stmt 0 view .LVU1115
 3473 0080 40F40050 		orr	r0, r0, #8192
 3474              	.LVL255:
2128:src/keys.c    **** 	}
 3475              		.loc 1 2128 10 view .LVU1116
 3476 0084 7047     		bx	lr
 3477              	.LVL256:
 3478              	.L383:
2148:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3479              		.loc 1 2148 35 discriminator 1 view .LVU1117
 3480 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2149:src/keys.c    **** 	else
 3481              		.loc 1 2149 7 discriminator 1 view .LVU1118
 3482 0088 124B     		ldr	r3, .L386+12
 3483              	.LVL257:
2149:src/keys.c    **** 	else
 3484              		.loc 1 2149 7 discriminator 1 view .LVU1119
 3485 008a 134A     		ldr	r2, .L386+16
 3486              	.LVL258:
2149:src/keys.c    **** 	else
 3487              		.loc 1 2149 7 discriminator 1 view .LVU1120
 3488 008c 11F0100F 		tst	r1, #16
 3489 0090 18BF     		it	ne
 3490 0092 1A46     		movne	r2, r3
 3491              	.L366:
ARM GAS  /tmp/ccOshYsA.s 			page 127


 3492              	.LVL259:
2154:src/keys.c    **** 	}
 3493              		.loc 1 2154 3 is_stmt 1 view .LVU1121
 3494              	.LBB385:
 3495              	.LBI385:
2083:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3496              		.loc 1 2083 15 view .LVU1122
 3497              	.LBB386:
2084:src/keys.c    **** }
 3498              		.loc 1 2084 2 view .LVU1123
2084:src/keys.c    **** }
 3499              		.loc 1 2084 9 is_stmt 0 view .LVU1124
 3500 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3501              	.LVL260:
2084:src/keys.c    **** }
 3502              		.loc 1 2084 9 view .LVU1125
 3503 0096 40F48840 		orr	r0, r0, #17408
 3504              	.LVL261:
2084:src/keys.c    **** }
 3505              		.loc 1 2084 9 view .LVU1126
 3506              	.LBE386:
 3507              	.LBE385:
2154:src/keys.c    **** 	}
 3508              		.loc 1 2154 10 view .LVU1127
 3509 009a 7047     		bx	lr
 3510              	.LVL262:
 3511              	.L382:
 3512              	.LBB387:
2136:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3513              		.loc 1 2136 3 is_stmt 1 view .LVU1128
2136:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3514              		.loc 1 2136 33 is_stmt 0 view .LVU1129
 3515 009c 0F4B     		ldr	r3, .L386+20
 3516              	.LVL263:
2136:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3517              		.loc 1 2136 13 view .LVU1130
 3518 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3519              	.LVL264:
2137:src/keys.c    **** 			// Monadic conversion routine
 3520              		.loc 1 2137 3 is_stmt 1 view .LVU1131
2137:src/keys.c    **** 			// Monadic conversion routine
 3521              		.loc 1 2137 6 is_stmt 0 view .LVU1132
 3522 00a0 5728     		cmp	r0, #87
2139:src/keys.c    **** 		else
 3523              		.loc 1 2139 4 is_stmt 1 view .LVU1133
2139:src/keys.c    **** 		else
 3524              		.loc 1 2139 25 is_stmt 0 view .LVU1134
 3525 00a2 C6BF     		itte	gt
 3526 00a4 5838     		subgt	r0, r0, #88
 3527              	.LVL265:
2139:src/keys.c    **** 		else
 3528              		.loc 1 2139 18 view .LVU1135
 3529 00a6 40F40070 		orrgt	r0, r0, #512
2141:src/keys.c    **** 	}
 3530              		.loc 1 2141 4 is_stmt 1 view .LVU1136
2141:src/keys.c    **** 	}
 3531              		.loc 1 2141 11 is_stmt 0 view .LVU1137
ARM GAS  /tmp/ccOshYsA.s 			page 128


 3532 00aa 40F40C40 		orrle	r0, r0, #35840
 3533 00ae 7047     		bx	lr
 3534              	.LVL266:
 3535              	.L371:
2141:src/keys.c    **** 	}
 3536              		.loc 1 2141 11 view .LVU1138
 3537              	.LBE387:
2127:src/keys.c    **** 		return CONST(n);
 3538              		.loc 1 2127 11 view .LVU1139
 3539 00b0 4FF42740 		mov	r0, #42752
 3540              	.LVL267:
2127:src/keys.c    **** 		return CONST(n);
 3541              		.loc 1 2127 11 view .LVU1140
 3542 00b4 7047     		bx	lr
 3543              	.LVL268:
 3544              	.L372:
2132:src/keys.c    **** 		return CONST_CMPLX(n);
 3545              		.loc 1 2132 11 view .LVU1141
 3546 00b6 4FF42840 		mov	r0, #43008
 3547              	.LVL269:
2132:src/keys.c    **** 		return CONST_CMPLX(n);
 3548              		.loc 1 2132 11 view .LVU1142
 3549 00ba 7047     		bx	lr
 3550              	.LVL270:
 3551              	.L384:
 3552              		.cfi_def_cfa_offset 4
 3553              		.cfi_offset 4, -4
2168:src/keys.c    **** 		m -= opcode_breaks[i];
 3554              		.loc 1 2168 4 is_stmt 1 view .LVU1143
2168:src/keys.c    **** 		m -= opcode_breaks[i];
 3555              		.loc 1 2168 29 is_stmt 0 view .LVU1144
 3556 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3557              	.LVL271:
2168:src/keys.c    **** 		m -= opcode_breaks[i];
 3558              		.loc 1 2168 29 view .LVU1145
 3559 00c0 D4E7     		b	.L359
 3560              	.LVL272:
 3561              	.L374:
 3562              		.cfi_def_cfa_offset 0
 3563              		.cfi_restore 4
2157:src/keys.c    **** 
 3564              		.loc 1 2157 10 view .LVU1146
 3565 00c2 4FF48070 		mov	r0, #256
 3566              	.LVL273:
2172:src/keys.c    **** 
 3567              		.loc 1 2172 1 view .LVU1147
 3568 00c6 7047     		bx	lr
 3569              	.L387:
 3570              		.align	2
 3571              	.L386:
 3572 00c8 00000000 		.word	StateWhileOn
 3573 00cc 00000000 		.word	.LANCHOR6
 3574 00d0 01000000 		.word	.LANCHOR7+1
 3575 00d4 00000000 		.word	.LANCHOR4
 3576 00d8 00000000 		.word	.LANCHOR3
 3577 00dc 00000000 		.word	.LANCHOR5
 3578              		.cfi_endproc
ARM GAS  /tmp/ccOshYsA.s 			page 129


 3579              	.LFE41:
 3581              		.section	.text.process_catalogue,"ax",%progbits
 3582              		.align	1
 3583              		.p2align 2,,3
 3584              		.syntax unified
 3585              		.thumb
 3586              		.thumb_func
 3587              		.fpu fpv4-sp-d16
 3589              	process_catalogue:
 3590              	.LVL274:
 3591              	.LFB43:
2186:src/keys.c    **** 	int pos = State.catpos;
 3592              		.loc 1 2186 92 is_stmt 1 view -0
 3593              		.cfi_startproc
 3594              		@ args = 0, pretend = 0, frame = 24
 3595              		@ frame_needed = 0, uses_anonymous_args = 0
2186:src/keys.c    **** 	int pos = State.catpos;
 3596              		.loc 1 2186 92 is_stmt 0 view .LVU1149
 3597 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3598              		.cfi_def_cfa_offset 36
 3599              		.cfi_offset 4, -36
 3600              		.cfi_offset 5, -32
 3601              		.cfi_offset 6, -28
 3602              		.cfi_offset 7, -24
 3603              		.cfi_offset 8, -20
 3604              		.cfi_offset 9, -16
 3605              		.cfi_offset 10, -12
 3606              		.cfi_offset 11, -8
 3607              		.cfi_offset 14, -4
2187:src/keys.c    **** 	int ch;
 3608              		.loc 1 2187 17 view .LVU1150
 3609 0004 AA4E     		ldr	r6, .L507
 3610              	.LBB418:
 3611              	.LBB419:
2075:src/keys.c    **** #endif
 3612              		.loc 1 2075 31 view .LVU1151
 3613 0006 AB4F     		ldr	r7, .L507+4
 3614              	.LBE419:
 3615              	.LBE418:
2187:src/keys.c    **** 	int ch;
 3616              		.loc 1 2187 17 view .LVU1152
 3617 0008 B6F8DC57 		ldrh	r5, [r6, #2012]
 3618              	.LBB423:
 3619              	.LBB420:
2075:src/keys.c    **** #endif
 3620              		.loc 1 2075 31 view .LVU1153
 3621 000c BC7B     		ldrb	r4, [r7, #14]	@ zero_extendqisi2
2075:src/keys.c    **** #endif
 3622              		.loc 1 2075 24 view .LVU1154
 3623 000e AA4B     		ldr	r3, .L507+8
 3624              	.LBE420:
 3625              	.LBE423:
2187:src/keys.c    **** 	int ch;
 3626              		.loc 1 2187 2 is_stmt 1 view .LVU1155
2186:src/keys.c    **** 	int pos = State.catpos;
 3627              		.loc 1 2186 92 is_stmt 0 view .LVU1156
 3628 0010 87B0     		sub	sp, sp, #28
ARM GAS  /tmp/ccOshYsA.s 			page 130


 3629              		.cfi_def_cfa_offset 64
 3630              	.LBB424:
 3631              	.LBB421:
2075:src/keys.c    **** #endif
 3632              		.loc 1 2075 24 view .LVU1157
 3633 0012 13F80490 		ldrb	r9, [r3, r4]	@ zero_extendqisi2
 3634              	.LBE421:
 3635              	.LBE424:
2186:src/keys.c    **** 	int pos = State.catpos;
 3636              		.loc 1 2186 92 view .LVU1158
 3637 0016 9046     		mov	r8, r2
2187:src/keys.c    **** 	int ch;
 3638              		.loc 1 2187 6 view .LVU1159
 3639 0018 C5F34615 		ubfx	r5, r5, #5, #7
 3640              	.LVL275:
2188:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 3641              		.loc 1 2188 2 is_stmt 1 view .LVU1160
2189:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
 3642              		.loc 1 2189 2 view .LVU1161
 3643              	.LBB425:
 3644              	.LBI418:
2041:src/keys.c    **** 	// A quick table of catalogue sizes
 3645              		.loc 1 2041 5 view .LVU1162
 3646              	.LBB422:
2044:src/keys.c    **** 	{
 3647              		.loc 1 2044 2 view .LVU1163
2075:src/keys.c    **** #endif
 3648              		.loc 1 2075 2 view .LVU1164
2075:src/keys.c    **** #endif
 3649              		.loc 1 2075 2 is_stmt 0 view .LVU1165
 3650              	.LBE422:
 3651              	.LBE425:
2190:src/keys.c    **** 
 3652              		.loc 1 2190 2 is_stmt 1 view .LVU1166
2192:src/keys.c    **** 		switch (c) {
 3653              		.loc 1 2192 2 view .LVU1167
2192:src/keys.c    **** 		switch (c) {
 3654              		.loc 1 2192 5 is_stmt 0 view .LVU1168
 3655 001c 0029     		cmp	r1, #0
 3656 001e 67D0     		beq	.L492
2257:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3657              		.loc 1 2257 9 is_stmt 1 view .LVU1169
2257:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3658              		.loc 1 2257 12 is_stmt 0 view .LVU1170
 3659 0020 0129     		cmp	r1, #1
 3660 0022 00F0E880 		beq	.L493
2291:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3661              		.loc 1 2291 9 is_stmt 1 view .LVU1171
2291:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3662              		.loc 1 2291 12 is_stmt 0 view .LVU1172
 3663 0026 0229     		cmp	r1, #2
 3664 0028 00F00581 		beq	.L494
 3665              	.LVL276:
 3666              	.L424:
 3667              	.LBB426:
 3668              	.LBB427:
 458:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 131


 3669              		.loc 1 458 2 is_stmt 1 view .LVU1173
 3670              	.LBB428:
 3671              	.LBI428:
 124:src/keys.c    **** {
 3672              		.loc 1 124 12 view .LVU1174
 3673              	.LBB429:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3674              		.loc 1 126 2 view .LVU1175
 136:src/keys.c    **** }
 3675              		.loc 1 136 2 view .LVU1176
 136:src/keys.c    **** }
 3676              		.loc 1 136 23 is_stmt 0 view .LVU1177
 3677 002c A34B     		ldr	r3, .L507+12
 3678              	.LBE429:
 3679              	.LBE428:
 458:src/keys.c    **** }
 3680              		.loc 1 458 49 view .LVU1178
 3681 002e A44A     		ldr	r2, .L507+16
 3682              	.LBB431:
 3683              	.LBB430:
 136:src/keys.c    **** }
 3684              		.loc 1 136 23 view .LVU1179
 3685 0030 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3686              	.LBE430:
 3687              	.LBE431:
 458:src/keys.c    **** }
 3688              		.loc 1 458 49 view .LVU1180
 3689 0032 03EB4303 		add	r3, r3, r3, lsl #1
 3690 0036 02EB4303 		add	r3, r2, r3, lsl #1
 3691              	.LBE427:
 3692              	.LBE426:
2301:src/keys.c    **** 	reset_shift();
 3693              		.loc 1 2301 7 view .LVU1181
 3694 003a 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 3695              	.LVL277:
2301:src/keys.c    **** 	reset_shift();
 3696              		.loc 1 2301 7 view .LVU1182
 3697 003c FFF7FEFF 		bl	remap_chars
 3698              	.LVL278:
 3699 0040 0546     		mov	r5, r0
 3700              	.LVL279:
2302:src/keys.c    **** 	if (ch == '\0')
 3701              		.loc 1 2302 2 is_stmt 1 view .LVU1183
 3702              	.LBB435:
 3703              	.LBI435:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3704              		.loc 1 102 13 view .LVU1184
 3705              	.LBE435:
 103:src/keys.c    **** }
 3706              		.loc 1 103 2 view .LVU1185
 3707              	.LBB440:
 3708              	.LBB436:
 3709              	.LBI436:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 3710              		.loc 1 92 20 view .LVU1186
 3711              	.LBB437:
  93:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccOshYsA.s 			page 132


 3712              		.loc 1 93 2 view .LVU1187
 3713              	.LBB438:
 3714              	.LBI438:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 3715              		.loc 1 84 13 view .LVU1188
 3716              	.LBB439:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3717              		.loc 1 85 2 view .LVU1189
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3718              		.loc 1 85 18 is_stmt 0 view .LVU1190
 3719 0042 FFF7FEFF 		bl	shift_down
 3720              	.LVL280:
  86:src/keys.c    **** }
 3721              		.loc 1 86 2 is_stmt 1 view .LVU1191
 3722              	.LBE439:
 3723              	.LBE438:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3724              		.loc 1 94 2 view .LVU1192
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3725              		.loc 1 94 16 is_stmt 0 view .LVU1193
 3726 0046 0023     		movs	r3, #0
 3727 0048 3B74     		strb	r3, [r7, #16]
  95:src/keys.c    **** 	return r;
 3728              		.loc 1 95 2 is_stmt 1 view .LVU1194
  95:src/keys.c    **** 	return r;
 3729              		.loc 1 95 19 is_stmt 0 view .LVU1195
 3730 004a 7B73     		strb	r3, [r7, #13]
  96:src/keys.c    **** }
 3731              		.loc 1 96 2 is_stmt 1 view .LVU1196
 3732              	.LVL281:
  96:src/keys.c    **** }
 3733              		.loc 1 96 2 is_stmt 0 view .LVU1197
 3734              	.LBE437:
 3735              	.LBE436:
 3736              	.LBE440:
2303:src/keys.c    **** 		return STATE_UNFINISHED;
 3737              		.loc 1 2303 2 is_stmt 1 view .LVU1198
2303:src/keys.c    **** 		return STATE_UNFINISHED;
 3738              		.loc 1 2303 5 is_stmt 0 view .LVU1199
 3739 004c 002D     		cmp	r5, #0
 3740 004e 00F0EC80 		beq	.L491
2305:src/keys.c    **** 		// No multi character search in alpha catalogues
 3741              		.loc 1 2305 2 is_stmt 1 view .LVU1200
2305:src/keys.c    **** 		// No multi character search in alpha catalogues
 3742              		.loc 1 2305 5 is_stmt 0 view .LVU1201
 3743 0052 0B3C     		subs	r4, r4, #11
 3744              	.LVL282:
2305:src/keys.c    **** 		// No multi character search in alpha catalogues
 3745              		.loc 1 2305 5 view .LVU1202
 3746 0054 042C     		cmp	r4, #4
 3747 0056 40F2C780 		bls	.L425
2309:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3748              		.loc 1 2309 2 is_stmt 1 view .LVU1203
2309:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3749              		.loc 1 2309 6 is_stmt 0 view .LVU1204
 3750 005a 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
2309:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
ARM GAS  /tmp/ccOshYsA.s 			page 133


 3751              		.loc 1 2309 5 view .LVU1205
 3752 005c 092A     		cmp	r2, #9
 3753 005e 40F2C280 		bls	.L495
 3754              	.LVL283:
 3755              	.L406:
2314:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3756              		.loc 1 2314 2 is_stmt 1 view .LVU1206
2314:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3757              		.loc 1 2314 25 is_stmt 0 view .LVU1207
 3758 0062 BB18     		adds	r3, r7, r2
 3759 0064 0025     		movs	r5, #0
 3760 0066 83F82050 		strb	r5, [r3, #32]
2315:src/keys.c    **** 		char buf[16];
 3761              		.loc 1 2315 2 is_stmt 1 view .LVU1208
 3762              	.LVL284:
2315:src/keys.c    **** 		char buf[16];
 3763              		.loc 1 2315 16 view .LVU1209
2315:src/keys.c    **** 		char buf[16];
 3764              		.loc 1 2315 2 is_stmt 0 view .LVU1210
 3765 006a B9F1000F 		cmp	r9, #0
 3766 006e 00F09F80 		beq	.L408
 3767              	.LVL285:
 3768              	.L431:
 3769              	.LBB441:
2316:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 3770              		.loc 1 2316 3 is_stmt 1 view .LVU1211
2317:src/keys.c    **** 		int i;
 3771              		.loc 1 2317 3 view .LVU1212
2317:src/keys.c    **** 		int i;
 3772              		.loc 1 2317 21 is_stmt 0 view .LVU1213
 3773 0072 2846     		mov	r0, r5
 3774 0074 FFF7FEFF 		bl	current_catalogue
 3775              	.LVL286:
 3776 0078 02A9     		add	r1, sp, #8
 3777 007a FFF7FEFF 		bl	catcmd
 3778              	.LVL287:
 3779 007e 0446     		mov	r4, r0
 3780              	.LVL288:
2318:src/keys.c    **** 
 3781              		.loc 1 2318 3 is_stmt 1 view .LVU1214
2320:src/keys.c    **** 			cmd++;
 3782              		.loc 1 2320 3 view .LVU1215
2321:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3783              		.loc 1 2321 4 view .LVU1216
2320:src/keys.c    **** 			cmd++;
 3784              		.loc 1 2320 7 is_stmt 0 view .LVU1217
 3785 0080 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3786              	.LVL289:
2320:src/keys.c    **** 			cmd++;
 3787              		.loc 1 2320 6 view .LVU1218
 3788 0082 1428     		cmp	r0, #20
 3789 0084 04BF     		itt	eq
 3790 0086 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2321:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3791              		.loc 1 2321 7 view .LVU1219
 3792 0088 0134     		addeq	r4, r4, #1
 3793              	.LVL290:
ARM GAS  /tmp/ccOshYsA.s 			page 134


2322:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3794              		.loc 1 2322 3 is_stmt 1 view .LVU1220
2322:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3795              		.loc 1 2322 13 view .LVU1221
2322:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3796              		.loc 1 2322 3 is_stmt 0 view .LVU1222
 3797 008a 0028     		cmp	r0, #0
 3798 008c 00F0B980 		beq	.L427
 3799 0090 DFF834B2 		ldr	fp, .L507+24
 3800 0094 C4F1010A 		rsb	r10, r4, #1
 3801 0098 06E0     		b	.L430
 3802              	.LVL291:
 3803              	.L497:
 3804              	.LBB442:
2327:src/keys.c    **** 				break;
 3805              		.loc 1 2327 12 view .LVU1223
 3806 009a C0F2B480 		blt	.L429
 3807              	.LBE442:
2322:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3808              		.loc 1 2322 16 discriminator 2 view .LVU1224
 3809 009e 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 3810              	.LVL292:
2322:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3811              		.loc 1 2322 3 discriminator 2 view .LVU1225
 3812 00a2 0028     		cmp	r0, #0
 3813 00a4 00F0B780 		beq	.L496
 3814              	.LVL293:
 3815              	.L430:
 3816              	.LBB443:
2323:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3817              		.loc 1 2323 4 is_stmt 1 view .LVU1226
2323:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3818              		.loc 1 2323 18 is_stmt 0 view .LVU1227
 3819 00a8 FFF7FEFF 		bl	remap_chars
 3820              	.LVL294:
2327:src/keys.c    **** 				break;
 3821              		.loc 1 2327 9 is_stmt 1 view .LVU1228
 3822              	.LBE443:
2322:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3823              		.loc 1 2322 29 view .LVU1229
 3824              	.LBB444:
2324:src/keys.c    **** 			if (c > cl)
 3825              		.loc 1 2324 4 view .LVU1230
2324:src/keys.c    **** 			if (c > cl)
 3826              		.loc 1 2324 42 is_stmt 0 view .LVU1231
 3827 00ac 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 3828              	.LVL295:
2325:src/keys.c    **** 				goto set_pos;
 3829              		.loc 1 2325 4 is_stmt 1 view .LVU1232
2325:src/keys.c    **** 				goto set_pos;
 3830              		.loc 1 2325 7 is_stmt 0 view .LVU1233
 3831 00b0 9842     		cmp	r0, r3
 3832 00b2 0AEB0402 		add	r2, r10, r4
 3833              	.LVL296:
2325:src/keys.c    **** 				goto set_pos;
 3834              		.loc 1 2325 7 view .LVU1234
 3835              	.LBE444:
ARM GAS  /tmp/ccOshYsA.s 			page 135


2322:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3836              		.loc 1 2322 13 is_stmt 1 view .LVU1235
 3837              	.LBB445:
2325:src/keys.c    **** 				goto set_pos;
 3838              		.loc 1 2325 7 is_stmt 0 view .LVU1236
 3839 00b6 F0DD     		ble	.L497
 3840              	.LVL297:
 3841              	.L409:
2325:src/keys.c    **** 				goto set_pos;
 3842              		.loc 1 2325 7 view .LVU1237
 3843              	.LBE445:
 3844              	.LBE441:
2336:src/keys.c    **** 		--pos;
 3845              		.loc 1 2336 8 is_stmt 1 view .LVU1238
 3846 00b8 B8F1000F 		cmp	r8, #0
 3847 00bc 00F09080 		beq	.L413
2336:src/keys.c    **** 		--pos;
 3848              		.loc 1 2336 18 is_stmt 0 view .LVU1239
 3849 00c0 4DB1     		cbz	r5, .L433
 3850              	.LVL298:
 3851              	.L490:
2336:src/keys.c    **** 		--pos;
 3852              		.loc 1 2336 18 view .LVU1240
 3853 00c2 2846     		mov	r0, r5
 3854 00c4 FFF7FEFF 		bl	current_catalogue
 3855              	.LVL299:
2337:src/keys.c    **** 	State.catpos = pos;
 3856              		.loc 1 2337 3 is_stmt 1 view .LVU1241
2336:src/keys.c    **** 		--pos;
 3857              		.loc 1 2336 8 view .LVU1242
 3858              	.LBB446:
 3859              	.LBI446:
2179:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 3860              		.loc 1 2179 12 view .LVU1243
 3861              	.LBB447:
2180:src/keys.c    **** }
 3862              		.loc 1 2180 2 view .LVU1244
2180:src/keys.c    **** }
 3863              		.loc 1 2180 33 is_stmt 0 view .LVU1245
 3864 00c8 00F0F000 		and	r0, r0, #240
 3865              	.LBE447:
 3866              	.LBE446:
2336:src/keys.c    **** 		--pos;
 3867              		.loc 1 2336 25 view .LVU1246
 3868 00cc F028     		cmp	r0, #240
 3869 00ce 40F08780 		bne	.L413
2336:src/keys.c    **** 		--pos;
 3870              		.loc 1 2336 18 view .LVU1247
 3871 00d2 013D     		subs	r5, r5, #1
 3872              	.LVL300:
2336:src/keys.c    **** 		--pos;
 3873              		.loc 1 2336 18 view .LVU1248
 3874 00d4 F5D1     		bne	.L490
 3875              	.LVL301:
 3876              	.L433:
2251:src/keys.c    **** 			goto set_pos;
 3877              		.loc 1 2251 9 view .LVU1249
ARM GAS  /tmp/ccOshYsA.s 			page 136


 3878 00d6 0025     		movs	r5, #0
 3879              	.L407:
2338:src/keys.c    **** 	return STATE_UNFINISHED;
 3880              		.loc 1 2338 2 is_stmt 1 view .LVU1250
2339:src/keys.c    **** }
 3881              		.loc 1 2339 9 is_stmt 0 view .LVU1251
 3882 00d8 3322     		movs	r2, #51
2338:src/keys.c    **** 	return STATE_UNFINISHED;
 3883              		.loc 1 2338 15 view .LVU1252
 3884 00da B6F8DC37 		ldrh	r3, [r6, #2012]
2339:src/keys.c    **** }
 3885              		.loc 1 2339 9 view .LVU1253
 3886 00de 0192     		str	r2, [sp, #4]
2340:src/keys.c    **** 
 3887              		.loc 1 2340 1 view .LVU1254
 3888 00e0 0198     		ldr	r0, [sp, #4]
2338:src/keys.c    **** 	return STATE_UNFINISHED;
 3889              		.loc 1 2338 15 view .LVU1255
 3890 00e2 65F34B13 		bfi	r3, r5, #5, #7
 3891 00e6 A6F8DC37 		strh	r3, [r6, #2012]	@ movhi
2339:src/keys.c    **** }
 3892              		.loc 1 2339 2 is_stmt 1 view .LVU1256
2340:src/keys.c    **** 
 3893              		.loc 1 2340 1 is_stmt 0 view .LVU1257
 3894 00ea 07B0     		add	sp, sp, #28
 3895              		.cfi_remember_state
 3896              		.cfi_def_cfa_offset 36
 3897              		@ sp needed
 3898 00ec BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3899              	.LVL302:
 3900              	.L492:
 3901              		.cfi_restore_state
2193:src/keys.c    **** #ifdef DM42
 3902              		.loc 1 2193 3 is_stmt 1 view .LVU1258
 3903 00f0 431F     		subs	r3, r0, #5
 3904 00f2 1F2B     		cmp	r3, #31
 3905 00f4 21D8     		bhi	.L390
 3906 00f6 DFE803F0 		tbb	[pc, r3]
 3907              	.LVL303:
 3908              	.L392:
 3909 00fa 27       		.byte	(.L396-.L392)/2
 3910 00fb 20       		.byte	(.L390-.L392)/2
 3911 00fc 20       		.byte	(.L390-.L392)/2
 3912 00fd 20       		.byte	(.L390-.L392)/2
 3913 00fe 20       		.byte	(.L390-.L392)/2
 3914 00ff 20       		.byte	(.L390-.L392)/2
 3915 0100 20       		.byte	(.L390-.L392)/2
 3916 0101 27       		.byte	(.L396-.L392)/2
 3917 0102 20       		.byte	(.L390-.L392)/2
 3918 0103 20       		.byte	(.L390-.L392)/2
 3919 0104 20       		.byte	(.L390-.L392)/2
 3920 0105 10       		.byte	(.L395-.L392)/2
 3921 0106 20       		.byte	(.L390-.L392)/2
 3922 0107 57       		.byte	(.L394-.L392)/2
 3923 0108 20       		.byte	(.L390-.L392)/2
 3924 0109 20       		.byte	(.L390-.L392)/2
 3925 010a 20       		.byte	(.L390-.L392)/2
ARM GAS  /tmp/ccOshYsA.s 			page 137


 3926 010b 20       		.byte	(.L390-.L392)/2
 3927 010c 20       		.byte	(.L390-.L392)/2
 3928 010d 5E       		.byte	(.L393-.L392)/2
 3929 010e 20       		.byte	(.L390-.L392)/2
 3930 010f 20       		.byte	(.L390-.L392)/2
 3931 0110 20       		.byte	(.L390-.L392)/2
 3932 0111 20       		.byte	(.L390-.L392)/2
 3933 0112 20       		.byte	(.L390-.L392)/2
 3934 0113 20       		.byte	(.L390-.L392)/2
 3935 0114 20       		.byte	(.L390-.L392)/2
 3936 0115 20       		.byte	(.L390-.L392)/2
 3937 0116 20       		.byte	(.L390-.L392)/2
 3938 0117 20       		.byte	(.L390-.L392)/2
 3939 0118 20       		.byte	(.L390-.L392)/2
 3940 0119 17       		.byte	(.L391-.L392)/2
 3941              		.p2align 1
 3942              	.L395:
2223:src/keys.c    **** #else
 3943              		.loc 1 2223 5 view .LVU1259
2223:src/keys.c    **** #else
 3944              		.loc 1 2223 8 is_stmt 0 view .LVU1260
 3945 011a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 3946 011c 23B1     		cbz	r3, .L391
2223:src/keys.c    **** #else
 3947              		.loc 1 2223 30 discriminator 1 view .LVU1261
 3948 011e FFF7FEFF 		bl	keyticks
 3949              	.LVL304:
2223:src/keys.c    **** #else
 3950              		.loc 1 2223 27 discriminator 1 view .LVU1262
 3951 0122 1D28     		cmp	r0, #29
 3952 0124 40F3AD80 		ble	.L498
 3953              	.LVL305:
 3954              	.L391:
2236:src/keys.c    **** 			return STATE_UNFINISHED;
 3955              		.loc 1 2236 4 is_stmt 1 view .LVU1263
 3956 0128 0020     		movs	r0, #0
 3957 012a FFF7FEFF 		bl	init_cat
 3958              	.LVL306:
2237:src/keys.c    **** 
 3959              		.loc 1 2237 4 view .LVU1264
2237:src/keys.c    **** 
 3960              		.loc 1 2237 11 is_stmt 0 view .LVU1265
 3961 012e 3323     		movs	r3, #51
 3962 0130 0193     		str	r3, [sp, #4]
 3963              	.LVL307:
 3964              	.L388:
2340:src/keys.c    **** 
 3965              		.loc 1 2340 1 view .LVU1266
 3966 0132 0198     		ldr	r0, [sp, #4]
 3967 0134 07B0     		add	sp, sp, #28
 3968              		.cfi_remember_state
 3969              		.cfi_def_cfa_offset 36
 3970              		@ sp needed
 3971 0136 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3972              	.LVL308:
 3973              	.L390:
 3974              		.cfi_restore_state
ARM GAS  /tmp/ccOshYsA.s 			page 138


 3975              	.LBB448:
 3976              	.LBI426:
 402:src/keys.c    **** {
 3977              		.loc 1 402 12 is_stmt 1 discriminator 4 view .LVU1267
 3978              	.LBB432:
 404:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 3979              		.loc 1 404 2 discriminator 4 view .LVU1268
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 3980              		.loc 1 452 2 discriminator 4 view .LVU1269
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 3981              		.loc 1 452 6 is_stmt 0 discriminator 4 view .LVU1270
 3982 013a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 3983              		.loc 1 452 5 discriminator 4 view .LVU1271
 3984 013c 13F0100F 		tst	r3, #16
 3985 0140 14BF     		ite	ne
 3986 0142 0421     		movne	r1, #4
 3987              	.LVL309:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 3988              		.loc 1 452 5 discriminator 4 view .LVU1272
 3989 0144 0021     		moveq	r1, #0
 3990 0146 71E7     		b	.L424
 3991              	.LVL310:
 3992              	.L396:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 3993              		.loc 1 452 5 discriminator 4 view .LVU1273
 3994              	.LBE432:
 3995              	.LBE448:
2200:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 3996              		.loc 1 2200 4 is_stmt 1 view .LVU1274
2200:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 3997              		.loc 1 2200 7 is_stmt 0 view .LVU1275
 3998 0148 4D45     		cmp	r5, r9
 3999 014a EDDA     		bge	.L391
 4000 014c 2846     		mov	r0, r5
 4001              	.LVL311:
2200:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4002              		.loc 1 2200 20 discriminator 1 view .LVU1276
 4003 014e B8F1000F 		cmp	r8, #0
 4004 0152 00F0A080 		beq	.L499
 4005              	.LVL312:
 4006              	.LBB449:
 4007              	.LBI449:
2179:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4008              		.loc 1 2179 12 is_stmt 1 view .LVU1277
 4009              	.LBB450:
2180:src/keys.c    **** }
 4010              		.loc 1 2180 2 view .LVU1278
2180:src/keys.c    **** }
 4011              		.loc 1 2180 10 is_stmt 0 view .LVU1279
 4012 0156 FFF7FEFF 		bl	current_catalogue
 4013              	.LVL313:
2180:src/keys.c    **** }
 4014              		.loc 1 2180 33 view .LVU1280
 4015 015a 00F0F003 		and	r3, r0, #240
 4016              	.LBE450:
 4017              	.LBE449:
ARM GAS  /tmp/ccOshYsA.s 			page 139


2200:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4018              		.loc 1 2200 23 view .LVU1281
 4019 015e F02B     		cmp	r3, #240
 4020              	.LBB452:
 4021              	.LBB451:
2180:src/keys.c    **** }
 4022              		.loc 1 2180 10 view .LVU1282
 4023 0160 0446     		mov	r4, r0
 4024              	.LVL314:
2180:src/keys.c    **** }
 4025              		.loc 1 2180 10 view .LVU1283
 4026              	.LBE451:
 4027              	.LBE452:
2200:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4028              		.loc 1 2200 23 view .LVU1284
 4029 0162 E1D0     		beq	.L391
 4030              	.L399:
 4031              	.LBB453:
2201:src/keys.c    **** 
 4032              		.loc 1 2201 5 is_stmt 1 view .LVU1285
2203:src/keys.c    **** 
 4033              		.loc 1 2203 5 view .LVU1286
 4034 0164 0020     		movs	r0, #0
 4035 0166 FFF7FEFF 		bl	init_cat
 4036              	.LVL315:
2205:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4037              		.loc 1 2205 5 view .LVU1287
2205:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4038              		.loc 1 2205 8 is_stmt 0 view .LVU1288
 4039 016a 14F47043 		ands	r3, r4, #61440
 4040 016e 00F0AD80 		beq	.L400
2205:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4041              		.loc 1 2205 9 discriminator 1 view .LVU1289
 4042 0172 B3F5704F 		cmp	r3, #61440
 4043 0176 00F0A980 		beq	.L400
 4044              	.LBB454:
2206:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4045              		.loc 1 2206 6 is_stmt 1 view .LVU1290
2206:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4046              		.loc 1 2206 32 is_stmt 0 view .LVU1291
 4047 017a C4F30723 		ubfx	r3, r4, #8, #8
 4048 017e A3F12005 		sub	r5, r3, #32
 4049              	.LVL316:
2206:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4050              		.loc 1 2206 32 view .LVU1292
 4051 0182 EDB2     		uxtb	r5, r5
 4052              	.LVL317:
2207:src/keys.c    **** 						return op;
 4053              		.loc 1 2207 6 is_stmt 1 view .LVU1293
2207:src/keys.c    **** 						return op;
 4054              		.loc 1 2207 9 is_stmt 0 view .LVU1294
 4055 0184 012D     		cmp	r5, #1
 4056 0186 40F2B680 		bls	.L401
2207:src/keys.c    **** 						return op;
 4057              		.loc 1 2207 57 discriminator 1 view .LVU1295
 4058 018a 6C2D     		cmp	r5, #108
 4059 018c 00F0B380 		beq	.L401
ARM GAS  /tmp/ccOshYsA.s 			page 140


2207:src/keys.c    **** 						return op;
 4060              		.loc 1 2207 78 discriminator 2 view .LVU1296
 4061 0190 242D     		cmp	r5, #36
 4062 0192 00F0B080 		beq	.L401
2209:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4063              		.loc 1 2209 6 is_stmt 1 view .LVU1297
2209:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4064              		.loc 1 2209 31 is_stmt 0 view .LVU1298
 4065 0196 A5F12D02 		sub	r2, r5, #45
2209:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4066              		.loc 1 2209 9 view .LVU1299
 4067 019a 062A     		cmp	r2, #6
 4068 019c 3FD8     		bhi	.L404
2210:src/keys.c    **** 					else
 4069              		.loc 1 2210 7 is_stmt 1 view .LVU1300
2210:src/keys.c    **** 					else
 4070              		.loc 1 2210 28 is_stmt 0 view .LVU1301
 4071 019e 4D3B     		subs	r3, r3, #77
2210:src/keys.c    **** 					else
 4072              		.loc 1 2210 19 view .LVU1302
 4073 01a0 FB73     		strb	r3, [r7, #15]
 4074              	.LBE454:
 4075              	.LBE453:
2219:src/keys.c    **** 
 4076              		.loc 1 2219 11 view .LVU1303
 4077 01a2 3323     		movs	r3, #51
 4078 01a4 0193     		str	r3, [sp, #4]
 4079              	.LBB467:
 4080              	.LBB457:
 4081 01a6 C4E7     		b	.L388
 4082              	.LVL318:
 4083              	.L394:
2219:src/keys.c    **** 
 4084              		.loc 1 2219 11 view .LVU1304
 4085              	.LBE457:
 4086              	.LBE467:
2240:src/keys.c    **** 			if (pos == 0)
 4087              		.loc 1 2240 4 is_stmt 1 view .LVU1305
2240:src/keys.c    **** 			if (pos == 0)
 4088              		.loc 1 2240 18 is_stmt 0 view .LVU1306
 4089 01a8 0023     		movs	r3, #0
 4090 01aa 3B77     		strb	r3, [r7, #28]
2241:src/keys.c    **** 				goto set_max;
 4091              		.loc 1 2241 4 is_stmt 1 view .LVU1307
2241:src/keys.c    **** 				goto set_max;
 4092              		.loc 1 2241 7 is_stmt 0 view .LVU1308
 4093 01ac 002D     		cmp	r5, #0
 4094 01ae 70D1     		bne	.L500
 4095              	.LVL319:
 4096              	.L408:
 4097              	.LDL1:
2334:src/keys.c    **** set_pos:
 4098              		.loc 1 2334 2 is_stmt 1 view .LVU1309
2334:src/keys.c    **** set_pos:
 4099              		.loc 1 2334 6 is_stmt 0 view .LVU1310
 4100 01b0 09F1FF35 		add	r5, r9, #-1
 4101              	.LVL320:
ARM GAS  /tmp/ccOshYsA.s 			page 141


2334:src/keys.c    **** set_pos:
 4102              		.loc 1 2334 6 view .LVU1311
 4103 01b4 80E7     		b	.L409
 4104              	.LVL321:
 4105              	.L393:
2248:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4106              		.loc 1 2248 4 is_stmt 1 view .LVU1312
2248:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4107              		.loc 1 2248 18 is_stmt 0 view .LVU1313
 4108 01b6 0023     		movs	r3, #0
 4109 01b8 3B77     		strb	r3, [r7, #28]
2249:src/keys.c    **** 			if (pos >= ctmax)
 4110              		.loc 1 2249 4 is_stmt 1 view .LVU1314
2249:src/keys.c    **** 			if (pos >= ctmax)
 4111              		.loc 1 2249 10 is_stmt 0 view .LVU1315
 4112 01ba 08E0     		b	.L412
 4113              	.LVL322:
 4114              	.L501:
2249:src/keys.c    **** 			if (pos >= ctmax)
 4115              		.loc 1 2249 25 discriminator 1 view .LVU1316
 4116 01bc B8F1000F 		cmp	r8, #0
 4117 01c0 0ED0     		beq	.L413
 4118              	.LBB468:
 4119              	.LBB469:
2180:src/keys.c    **** }
 4120              		.loc 1 2180 10 view .LVU1317
 4121 01c2 FFF7FEFF 		bl	current_catalogue
 4122              	.LVL323:
2180:src/keys.c    **** }
 4123              		.loc 1 2180 33 view .LVU1318
 4124 01c6 00F0F000 		and	r0, r0, #240
 4125              	.LBE469:
 4126              	.LBE468:
2249:src/keys.c    **** 			if (pos >= ctmax)
 4127              		.loc 1 2249 37 view .LVU1319
 4128 01ca F028     		cmp	r0, #240
 4129 01cc 08D1     		bne	.L413
 4130              	.L412:
2249:src/keys.c    **** 			if (pos >= ctmax)
 4131              		.loc 1 2249 61 is_stmt 1 discriminator 3 view .LVU1320
2249:src/keys.c    **** 			if (pos >= ctmax)
 4132              		.loc 1 2249 10 discriminator 3 view .LVU1321
 4133 01ce 0135     		adds	r5, r5, #1
 4134              	.LVL324:
 4135              	.LBB472:
 4136              	.LBI468:
2179:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4137              		.loc 1 2179 12 discriminator 3 view .LVU1322
 4138              	.LBB470:
2180:src/keys.c    **** }
 4139              		.loc 1 2180 2 discriminator 3 view .LVU1323
 4140              	.LBE470:
 4141              	.LBE472:
2249:src/keys.c    **** 			if (pos >= ctmax)
 4142              		.loc 1 2249 10 is_stmt 0 discriminator 3 view .LVU1324
 4143 01d0 A945     		cmp	r9, r5
 4144              	.LBB473:
ARM GAS  /tmp/ccOshYsA.s 			page 142


 4145              	.LBB471:
2180:src/keys.c    **** }
 4146              		.loc 1 2180 10 discriminator 3 view .LVU1325
 4147 01d2 2846     		mov	r0, r5
 4148              	.LBE471:
 4149              	.LBE473:
2249:src/keys.c    **** 			if (pos >= ctmax)
 4150              		.loc 1 2249 10 discriminator 3 view .LVU1326
 4151 01d4 F2DC     		bgt	.L501
 4152              	.LVL325:
2336:src/keys.c    **** 		--pos;
 4153              		.loc 1 2336 8 is_stmt 1 view .LVU1327
2251:src/keys.c    **** 			goto set_pos;
 4154              		.loc 1 2251 9 is_stmt 0 view .LVU1328
 4155 01d6 4546     		mov	r5, r8
 4156              	.LVL326:
2336:src/keys.c    **** 		--pos;
 4157              		.loc 1 2336 8 view .LVU1329
 4158 01d8 B8F1000F 		cmp	r8, #0
 4159 01dc 7FF47BAF 		bne	.L433
 4160              	.LVL327:
 4161              	.L413:
2336:src/keys.c    **** 		--pos;
 4162              		.loc 1 2336 8 view .LVU1330
 4163 01e0 05F07F05 		and	r5, r5, #127
 4164              	.LVL328:
2336:src/keys.c    **** 		--pos;
 4165              		.loc 1 2336 8 view .LVU1331
 4166 01e4 78E7     		b	.L407
 4167              	.LVL329:
 4168              	.L495:
2336:src/keys.c    **** 		--pos;
 4169              		.loc 1 2336 8 view .LVU1332
 4170 01e6 1346     		mov	r3, r2
 4171              	.L425:
2310:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4172              		.loc 1 2310 3 is_stmt 1 view .LVU1333
2310:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4173              		.loc 1 2310 24 is_stmt 0 view .LVU1334
 4174 01e8 5A1C     		adds	r2, r3, #1
2310:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4175              		.loc 1 2310 28 view .LVU1335
 4176 01ea 3B44     		add	r3, r3, r7
2310:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4177              		.loc 1 2310 24 view .LVU1336
 4178 01ec D2B2     		uxtb	r2, r2
 4179 01ee 3A77     		strb	r2, [r7, #28]
2310:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4180              		.loc 1 2310 28 view .LVU1337
 4181 01f0 83F82050 		strb	r5, [r3, #32]
 4182 01f4 35E7     		b	.L406
 4183              	.LVL330:
 4184              	.L493:
2258:src/keys.c    **** 			/*
 4185              		.loc 1 2258 3 is_stmt 1 view .LVU1338
2258:src/keys.c    **** 			/*
 4186              		.loc 1 2258 6 is_stmt 0 view .LVU1339
ARM GAS  /tmp/ccOshYsA.s 			page 143


 4187 01f6 122C     		cmp	r4, #18
 4188 01f8 21D0     		beq	.L502
 4189              	.L415:
2286:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4190              		.loc 1 2286 8 is_stmt 1 view .LVU1340
2286:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4191              		.loc 1 2286 11 is_stmt 0 view .LVU1341
 4192 01fa 2428     		cmp	r0, #36
 4193 01fc 32D0     		beq	.L503
 4194              	.LVL331:
 4195              	.L421:
2301:src/keys.c    **** 	reset_shift();
 4196              		.loc 1 2301 2 is_stmt 1 view .LVU1342
 4197              	.LBB474:
 402:src/keys.c    **** {
 4198              		.loc 1 402 12 view .LVU1343
 4199              	.LBB433:
 404:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4200              		.loc 1 404 2 view .LVU1344
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 4201              		.loc 1 452 2 view .LVU1345
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 4202              		.loc 1 452 5 is_stmt 0 view .LVU1346
 4203 01fe 0121     		movs	r1, #1
 4204              	.LVL332:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 4205              		.loc 1 452 5 view .LVU1347
 4206 0200 14E7     		b	.L424
 4207              	.LVL333:
 4208              	.L427:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 4209              		.loc 1 452 5 view .LVU1348
 4210 0202 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 4211              	.LVL334:
 4212              	.L429:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 4213              		.loc 1 452 5 view .LVU1349
 4214              	.LBE433:
 4215              	.LBE474:
 4216              	.LBB475:
2330:src/keys.c    **** 			goto set_pos;
 4217              		.loc 1 2330 3 is_stmt 1 view .LVU1350
2330:src/keys.c    **** 			goto set_pos;
 4218              		.loc 1 2330 6 is_stmt 0 view .LVU1351
 4219 0206 002B     		cmp	r3, #0
 4220 0208 3FF456AF 		beq	.L409
 4221              	.LBE475:
2315:src/keys.c    **** 		char buf[16];
 4222              		.loc 1 2315 29 is_stmt 1 view .LVU1352
 4223 020c 0135     		adds	r5, r5, #1
 4224              	.LVL335:
2315:src/keys.c    **** 		char buf[16];
 4225              		.loc 1 2315 16 view .LVU1353
2315:src/keys.c    **** 		char buf[16];
 4226              		.loc 1 2315 2 is_stmt 0 view .LVU1354
 4227 020e A945     		cmp	r9, r5
 4228 0210 7FF42FAF 		bne	.L431
ARM GAS  /tmp/ccOshYsA.s 			page 144


 4229 0214 CCE7     		b	.L408
 4230              	.LVL336:
 4231              	.L496:
2315:src/keys.c    **** 		char buf[16];
 4232              		.loc 1 2315 2 view .LVU1355
 4233 0216 3A44     		add	r2, r2, r7
 4234              	.LVL337:
2315:src/keys.c    **** 		char buf[16];
 4235              		.loc 1 2315 2 view .LVU1356
 4236 0218 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4237              	.LVL338:
2315:src/keys.c    **** 		char buf[16];
 4238              		.loc 1 2315 2 view .LVU1357
 4239 021c F3E7     		b	.L429
 4240              	.LVL339:
 4241              	.L404:
 4242              	.LBB476:
 4243              	.LBB458:
2212:src/keys.c    **** 				}
 4244              		.loc 1 2212 7 is_stmt 1 view .LVU1358
 4245              	.LBB455:
 4246              	.LBI455:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 4247              		.loc 1 520 13 view .LVU1359
 4248              	.LBB456:
 521:src/keys.c    **** 		return;
 4249              		.loc 1 521 2 view .LVU1360
 521:src/keys.c    **** 		return;
 4250              		.loc 1 521 6 is_stmt 0 view .LVU1361
 4251 021e FFF7FEFF 		bl	is_bad_cmdline
 4252              	.LVL340:
 521:src/keys.c    **** 		return;
 4253              		.loc 1 521 5 view .LVU1362
 4254 0222 10B9     		cbnz	r0, .L491
 4255 0224 2846     		mov	r0, r5
 4256 0226 FFF7FEFF 		bl	init_arg.part.0
 4257              	.LVL341:
 4258              	.L491:
 521:src/keys.c    **** 		return;
 4259              		.loc 1 521 5 view .LVU1363
 4260              	.LBE456:
 4261              	.LBE455:
 4262              	.LBE458:
 4263              	.LBE476:
2219:src/keys.c    **** 
 4264              		.loc 1 2219 11 view .LVU1364
 4265 022a 3323     		movs	r3, #51
 4266 022c 0193     		str	r3, [sp, #4]
2340:src/keys.c    **** 
 4267              		.loc 1 2340 1 view .LVU1365
 4268 022e 0198     		ldr	r0, [sp, #4]
 4269 0230 07B0     		add	sp, sp, #28
 4270              		.cfi_remember_state
 4271              		.cfi_def_cfa_offset 36
 4272              		@ sp needed
 4273 0232 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4274              	.LVL342:
ARM GAS  /tmp/ccOshYsA.s 			page 145


 4275              	.L494:
 4276              		.cfi_restore_state
2292:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4277              		.loc 1 2292 3 is_stmt 1 view .LVU1366
2292:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4278              		.loc 1 2292 6 is_stmt 0 view .LVU1367
 4279 0236 1028     		cmp	r0, #16
 4280 0238 31D0     		beq	.L504
 4281              	.L423:
2301:src/keys.c    **** 	reset_shift();
 4282              		.loc 1 2301 2 is_stmt 1 view .LVU1368
 4283              	.LVL343:
 4284              	.LBB477:
 402:src/keys.c    **** {
 4285              		.loc 1 402 12 view .LVU1369
 4286              	.LBB434:
 404:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4287              		.loc 1 404 2 view .LVU1370
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 4288              		.loc 1 452 2 view .LVU1371
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 4289              		.loc 1 452 5 is_stmt 0 view .LVU1372
 4290 023a 0521     		movs	r1, #5
 4291              	.LVL344:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 4292              		.loc 1 452 5 view .LVU1373
 4293 023c F6E6     		b	.L424
 4294              	.LVL345:
 4295              	.L502:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 4296              		.loc 1 452 5 view .LVU1374
 4297              	.LBE434:
 4298              	.LBE477:
2258:src/keys.c    **** 			/*
 4299              		.loc 1 2258 29 discriminator 1 view .LVU1375
 4300 023e 0128     		cmp	r0, #1
 4301 0240 DBD1     		bne	.L415
 4302              	.LBB478:
2267:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4303              		.loc 1 2267 4 is_stmt 1 view .LVU1376
2275:src/keys.c    **** 			int i;
 4304              		.loc 1 2275 4 view .LVU1377
2275:src/keys.c    **** 			int i;
 4305              		.loc 1 2275 22 is_stmt 0 view .LVU1378
 4306 0242 2846     		mov	r0, r5
 4307              	.LVL346:
2275:src/keys.c    **** 			int i;
 4308              		.loc 1 2275 22 view .LVU1379
 4309 0244 FFF7FEFF 		bl	current_catalogue
 4310              	.LVL347:
2275:src/keys.c    **** 			int i;
 4311              		.loc 1 2275 22 view .LVU1380
 4312 0248 0446     		mov	r4, r0
 4313              	.LVL348:
2276:src/keys.c    **** 
 4314              		.loc 1 2276 4 is_stmt 1 view .LVU1381
2278:src/keys.c    **** 			if (isRARG(op))
ARM GAS  /tmp/ccOshYsA.s 			page 146


 4315              		.loc 1 2278 4 view .LVU1382
 4316 024a 0020     		movs	r0, #0
 4317              	.LVL349:
2278:src/keys.c    **** 			if (isRARG(op))
 4318              		.loc 1 2278 4 is_stmt 0 view .LVU1383
 4319 024c FFF7FEFF 		bl	init_cat
 4320              	.LVL350:
2279:src/keys.c    **** 				return op ^ 1;
 4321              		.loc 1 2279 4 is_stmt 1 view .LVU1384
2279:src/keys.c    **** 				return op ^ 1;
 4322              		.loc 1 2279 7 is_stmt 0 view .LVU1385
 4323 0250 14F47043 		ands	r3, r4, #61440
 4324 0254 51D0     		beq	.L416
2279:src/keys.c    **** 				return op ^ 1;
 4325              		.loc 1 2279 8 discriminator 1 view .LVU1386
 4326 0256 B3F5704F 		cmp	r3, #61440
 4327 025a 4ED0     		beq	.L416
2280:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4328              		.loc 1 2280 5 is_stmt 1 view .LVU1387
2280:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4329              		.loc 1 2280 15 is_stmt 0 view .LVU1388
 4330 025c 84F00103 		eor	r3, r4, #1
 4331 0260 0193     		str	r3, [sp, #4]
 4332 0262 66E7     		b	.L388
 4333              	.LVL351:
 4334              	.L503:
2280:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4335              		.loc 1 2280 15 view .LVU1389
 4336              	.LBE478:
2286:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4337              		.loc 1 2286 39 discriminator 1 view .LVU1390
 4338 0264 174A     		ldr	r2, .L507+20
 4339              	.LVL352:
2286:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4340              		.loc 1 2286 39 discriminator 1 view .LVU1391
 4341 0266 7B69     		ldr	r3, [r7, #20]
2286:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4342              		.loc 1 2286 21 discriminator 1 view .LVU1392
 4343 0268 1A42     		tst	r2, r3
 4344 026a C8D0     		beq	.L421
2288:src/keys.c    **** 			return STATE_UNFINISHED;
 4345              		.loc 1 2288 4 is_stmt 1 view .LVU1393
2288:src/keys.c    **** 			return STATE_UNFINISHED;
 4346              		.loc 1 2288 34 is_stmt 0 view .LVU1394
 4347 026c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4348 026e C3F30012 		ubfx	r2, r3, #4, #1
2288:src/keys.c    **** 			return STATE_UNFINISHED;
 4349              		.loc 1 2288 26 view .LVU1395
 4350 0272 C2F10102 		rsb	r2, r2, #1
2288:src/keys.c    **** 			return STATE_UNFINISHED;
 4351              		.loc 1 2288 22 view .LVU1396
 4352 0276 62F30413 		bfi	r3, r2, #4, #1
2289:src/keys.c    **** 		}
 4353              		.loc 1 2289 11 view .LVU1397
 4354 027a 3322     		movs	r2, #51
 4355 027c 0192     		str	r2, [sp, #4]
2288:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccOshYsA.s 			page 147


 4356              		.loc 1 2288 22 view .LVU1398
 4357 027e BB75     		strb	r3, [r7, #22]
2289:src/keys.c    **** 		}
 4358              		.loc 1 2289 4 is_stmt 1 view .LVU1399
2289:src/keys.c    **** 		}
 4359              		.loc 1 2289 11 is_stmt 0 view .LVU1400
 4360 0280 57E7     		b	.L388
 4361              	.LVL353:
 4362              	.L498:
2227:src/keys.c    **** 					goto search;
 4363              		.loc 1 2227 9 is_stmt 1 view .LVU1401
2227:src/keys.c    **** 					goto search;
 4364              		.loc 1 2227 13 is_stmt 0 view .LVU1402
 4365 0282 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 4366 0284 013B     		subs	r3, r3, #1
 4367 0286 DAB2     		uxtb	r2, r3
2227:src/keys.c    **** 					goto search;
 4368              		.loc 1 2227 12 view .LVU1403
 4369 0288 3A77     		strb	r2, [r7, #28]
 4370 028a 002A     		cmp	r2, #0
 4371 028c 7FF4E9AE 		bne	.L406
 4372 0290 21E7     		b	.L433
 4373              	.LVL354:
 4374              	.L500:
2244:src/keys.c    **** 			goto set_pos;
 4375              		.loc 1 2244 5 is_stmt 1 view .LVU1404
 4376 0292 013D     		subs	r5, r5, #1
 4377              	.LVL355:
2245:src/keys.c    **** 
 4378              		.loc 1 2245 4 view .LVU1405
 4379 0294 10E7     		b	.L409
 4380              	.LVL356:
 4381              	.L499:
2245:src/keys.c    **** 
 4382              		.loc 1 2245 4 is_stmt 0 view .LVU1406
 4383 0296 FFF7FEFF 		bl	current_catalogue
 4384              	.LVL357:
2245:src/keys.c    **** 
 4385              		.loc 1 2245 4 view .LVU1407
 4386 029a 0446     		mov	r4, r0
 4387              	.LVL358:
2245:src/keys.c    **** 
 4388              		.loc 1 2245 4 view .LVU1408
 4389 029c 62E7     		b	.L399
 4390              	.LVL359:
 4391              	.L504:
2292:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4392              		.loc 1 2292 16 discriminator 1 view .LVU1409
 4393 029e 132C     		cmp	r4, #19
 4394 02a0 CBD1     		bne	.L423
2293:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4395              		.loc 1 2293 4 is_stmt 1 view .LVU1410
 4396 02a2 0020     		movs	r0, #0
 4397              	.LVL360:
2293:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4398              		.loc 1 2293 4 is_stmt 0 view .LVU1411
 4399 02a4 FFF7FEFF 		bl	init_cat
ARM GAS  /tmp/ccOshYsA.s 			page 148


 4400              	.LVL361:
2294:src/keys.c    **** 		}
 4401              		.loc 1 2294 4 is_stmt 1 view .LVU1412
2294:src/keys.c    **** 		}
 4402              		.loc 1 2294 11 is_stmt 0 view .LVU1413
 4403 02a8 40F23D13 		movw	r3, #317
 4404 02ac 0193     		str	r3, [sp, #4]
 4405 02ae 40E7     		b	.L388
 4406              	.L508:
 4407              		.align	2
 4408              	.L507:
 4409 02b0 00000000 		.word	PersistentRam
 4410 02b4 00000000 		.word	StateWhileOn
 4411 02b8 00000000 		.word	.LANCHOR2
 4412 02bc 00000000 		.word	.LANCHOR1
 4413 02c0 00000000 		.word	.LANCHOR9
 4414 02c4 00080800 		.word	526336
 4415 02c8 1F000000 		.word	StateWhileOn+31
 4416              	.LVL362:
 4417              	.L400:
 4418              	.LBB479:
2215:src/keys.c    **** 				}
 4419              		.loc 1 2215 6 is_stmt 1 view .LVU1414
 4420              	.LBB459:
 4421              	.LBB460:
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 4422              		.loc 1 639 5 is_stmt 0 view .LVU1415
 4423 02cc C4F30723 		ubfx	r3, r4, #8, #8
 4424 02d0 012B     		cmp	r3, #1
 4425              	.LBE460:
 4426              	.LBE459:
2215:src/keys.c    **** 				}
 4427              		.loc 1 2215 13 view .LVU1416
 4428 02d2 0194     		str	r4, [sp, #4]
 4429              	.LVL363:
 4430              	.LBB465:
 4431              	.LBI459:
 638:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4432              		.loc 1 638 12 is_stmt 1 view .LVU1417
 4433              	.LBB464:
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 4434              		.loc 1 639 2 view .LVU1418
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 4435              		.loc 1 639 5 is_stmt 0 view .LVU1419
 4436 02d4 7FF42DAF 		bne	.L388
 4437              	.LVL364:
 4438              	.LBB461:
 4439              	.LBI461:
 638:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4440              		.loc 1 638 12 is_stmt 1 view .LVU1420
 4441              	.LBB462:
 4442              	.LBB463:
 640:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 4443              		.loc 1 640 3 view .LVU1421
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 4444              		.loc 1 641 3 view .LVU1422
 640:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
ARM GAS  /tmp/ccOshYsA.s 			page 149


 4445              		.loc 1 640 13 is_stmt 0 view .LVU1423
 4446 02d8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 4447              		.loc 1 641 25 view .LVU1424
 4448 02dc 413B     		subs	r3, r3, #65
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 4449              		.loc 1 641 6 view .LVU1425
 4450 02de 032B     		cmp	r3, #3
 4451 02e0 3FF627AF 		bhi	.L388
 642:src/keys.c    **** 			return STATE_UNFINISHED;
 4452              		.loc 1 642 4 is_stmt 1 view .LVU1426
 642:src/keys.c    **** 			return STATE_UNFINISHED;
 4453              		.loc 1 642 19 is_stmt 0 view .LVU1427
 4454 02e4 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 642:src/keys.c    **** 			return STATE_UNFINISHED;
 4455              		.loc 1 642 35 view .LVU1428
 4456 02e6 A4F14002 		sub	r2, r4, #64
 642:src/keys.c    **** 			return STATE_UNFINISHED;
 4457              		.loc 1 642 19 view .LVU1429
 4458 02ea 62F30203 		bfi	r3, r2, #0, #3
 4459 02ee 3B75     		strb	r3, [r7, #20]
 643:src/keys.c    **** 		}
 4460              		.loc 1 643 4 is_stmt 1 view .LVU1430
 643:src/keys.c    **** 		}
 4461              		.loc 1 643 11 is_stmt 0 view .LVU1431
 4462 02f0 3323     		movs	r3, #51
 4463 02f2 0193     		str	r3, [sp, #4]
 4464 02f4 1DE7     		b	.L388
 4465              	.LVL365:
 4466              	.L401:
 643:src/keys.c    **** 		}
 4467              		.loc 1 643 11 view .LVU1432
 4468              	.LBE463:
 4469              	.LBE462:
 4470              	.LBE461:
 4471              	.LBE464:
 4472              	.LBE465:
 4473              	.LBB466:
2208:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4474              		.loc 1 2208 7 is_stmt 1 view .LVU1433
2208:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4475              		.loc 1 2208 14 is_stmt 0 view .LVU1434
 4476 02f6 0194     		str	r4, [sp, #4]
 4477 02f8 1BE7     		b	.L388
 4478              	.LVL366:
 4479              	.L416:
2208:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4480              		.loc 1 2208 14 view .LVU1435
 4481 02fa 0A48     		ldr	r0, .L509
 4482              	.LBE466:
 4483              	.LBE479:
2186:src/keys.c    **** 	int pos = State.catpos;
 4484              		.loc 1 2186 92 view .LVU1436
 4485 02fc 40F28522 		movw	r2, #645
 4486 0300 0146     		mov	r1, r0
 4487 0302 0023     		movs	r3, #0
 4488 0304 01E0     		b	.L418
ARM GAS  /tmp/ccOshYsA.s 			page 150


 4489              	.LVL367:
 4490              	.L506:
2186:src/keys.c    **** 	int pos = State.catpos;
 4491              		.loc 1 2186 92 view .LVU1437
 4492 0306 31F8022F 		ldrh	r2, [r1, #2]!
 4493              	.LVL368:
 4494              	.L418:
 4495              	.LBB480:
2282:src/keys.c    **** 					return conv_mapping[i^1];
 4496              		.loc 1 2282 5 is_stmt 1 view .LVU1438
2281:src/keys.c    **** 				if (op == conv_mapping[i])
 4497              		.loc 1 2281 68 view .LVU1439
2282:src/keys.c    **** 					return conv_mapping[i^1];
 4498              		.loc 1 2282 8 is_stmt 0 view .LVU1440
 4499 030a A242     		cmp	r2, r4
 4500 030c 03D0     		beq	.L505
2281:src/keys.c    **** 				if (op == conv_mapping[i])
 4501              		.loc 1 2281 68 discriminator 2 view .LVU1441
 4502 030e 0133     		adds	r3, r3, #1
 4503              	.LVL369:
2281:src/keys.c    **** 				if (op == conv_mapping[i])
 4504              		.loc 1 2281 16 is_stmt 1 discriminator 2 view .LVU1442
2281:src/keys.c    **** 				if (op == conv_mapping[i])
 4505              		.loc 1 2281 4 is_stmt 0 discriminator 2 view .LVU1443
 4506 0310 0C2B     		cmp	r3, #12
 4507 0312 F8D1     		bne	.L506
 4508 0314 89E7     		b	.L491
 4509              	.L505:
2283:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4510              		.loc 1 2283 6 is_stmt 1 view .LVU1444
2283:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4511              		.loc 1 2283 27 is_stmt 0 view .LVU1445
 4512 0316 83F00103 		eor	r3, r3, #1
 4513              	.LVL370:
2283:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4514              		.loc 1 2283 25 view .LVU1446
 4515 031a 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 4516              	.LVL371:
2283:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4517              		.loc 1 2283 25 view .LVU1447
 4518 031e 0193     		str	r3, [sp, #4]
 4519 0320 07E7     		b	.L388
 4520              	.L510:
 4521 0322 00BF     		.align	2
 4522              	.L509:
 4523 0324 00000000 		.word	.LANCHOR8
 4524              	.LBE480:
 4525              		.cfi_endproc
 4526              	.LFE43:
 4528              		.section	.text.find_pos,"ax",%progbits
 4529              		.align	1
 4530              		.p2align 2,,3
 4531              		.global	find_pos
 4532              		.syntax unified
 4533              		.thumb
 4534              		.thumb_func
 4535              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccOshYsA.s 			page 151


 4537              	find_pos:
 4538              	.LVL372:
 4539              	.LFB44:
2343:src/keys.c    **** 	int pos;
 4540              		.loc 1 2343 32 is_stmt 1 view -0
 4541              		.cfi_startproc
 4542              		@ args = 0, pretend = 0, frame = 16
 4543              		@ frame_needed = 0, uses_anonymous_args = 0
2344:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4544              		.loc 1 2344 2 view .LVU1449
2345:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4545              		.loc 1 2345 2 view .LVU1450
 4546              	.LBB481:
 4547              	.LBI481:
2041:src/keys.c    **** 	// A quick table of catalogue sizes
 4548              		.loc 1 2041 5 view .LVU1451
 4549              	.LBB482:
2044:src/keys.c    **** 	{
 4550              		.loc 1 2044 2 view .LVU1452
2075:src/keys.c    **** #endif
 4551              		.loc 1 2075 2 view .LVU1453
 4552              	.LBE482:
 4553              	.LBE481:
2343:src/keys.c    **** 	int pos;
 4554              		.loc 1 2343 32 is_stmt 0 view .LVU1454
 4555 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4556              		.cfi_def_cfa_offset 32
 4557              		.cfi_offset 4, -32
 4558              		.cfi_offset 5, -28
 4559              		.cfi_offset 6, -24
 4560              		.cfi_offset 7, -20
 4561              		.cfi_offset 8, -16
 4562              		.cfi_offset 9, -12
 4563              		.cfi_offset 10, -8
 4564              		.cfi_offset 14, -4
 4565              	.LBB484:
 4566              	.LBB483:
2075:src/keys.c    **** #endif
 4567              		.loc 1 2075 31 view .LVU1455
 4568 0004 1E4B     		ldr	r3, .L528
2075:src/keys.c    **** #endif
 4569              		.loc 1 2075 24 view .LVU1456
 4570 0006 1F4A     		ldr	r2, .L528+4
2075:src/keys.c    **** #endif
 4571              		.loc 1 2075 31 view .LVU1457
 4572 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2075:src/keys.c    **** #endif
 4573              		.loc 1 2075 24 view .LVU1458
 4574 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4575              	.LVL373:
2075:src/keys.c    **** #endif
 4576              		.loc 1 2075 24 view .LVU1459
 4577              	.LBE483:
 4578              	.LBE484:
2346:src/keys.c    **** 		char buf[16];
 4579              		.loc 1 2346 2 is_stmt 1 view .LVU1460
2346:src/keys.c    **** 		char buf[16];
ARM GAS  /tmp/ccOshYsA.s 			page 152


 4580              		.loc 1 2346 16 view .LVU1461
2343:src/keys.c    **** 	int pos;
 4581              		.loc 1 2343 32 is_stmt 0 view .LVU1462
 4582 000e 84B0     		sub	sp, sp, #16
 4583              		.cfi_def_cfa_offset 48
2346:src/keys.c    **** 		char buf[16];
 4584              		.loc 1 2346 2 view .LVU1463
 4585 0010 BAF1000F 		cmp	r10, #0
 4586 0014 32D0     		beq	.L518
 4587 0016 8146     		mov	r9, r0
2346:src/keys.c    **** 		char buf[16];
 4588              		.loc 1 2346 11 view .LVU1464
 4589 0018 4FF00008 		mov	r8, #0
 4590 001c C0F10107 		rsb	r7, r0, #1
 4591              	.LVL374:
 4592              	.L517:
 4593              	.LBB485:
2347:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4594              		.loc 1 2347 3 is_stmt 1 view .LVU1465
2348:src/keys.c    **** 		int i;
 4595              		.loc 1 2348 3 view .LVU1466
2348:src/keys.c    **** 		int i;
 4596              		.loc 1 2348 21 is_stmt 0 view .LVU1467
 4597 0020 4046     		mov	r0, r8
 4598 0022 FFF7FEFF 		bl	current_catalogue
 4599              	.LVL375:
 4600 0026 6946     		mov	r1, sp
 4601 0028 FFF7FEFF 		bl	catcmd
 4602              	.LVL376:
 4603 002c 0646     		mov	r6, r0
 4604              	.LVL377:
2349:src/keys.c    **** 
 4605              		.loc 1 2349 3 is_stmt 1 view .LVU1468
2351:src/keys.c    **** 			cmd++;
 4606              		.loc 1 2351 3 view .LVU1469
2352:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4607              		.loc 1 2352 4 view .LVU1470
2351:src/keys.c    **** 			cmd++;
 4608              		.loc 1 2351 7 is_stmt 0 view .LVU1471
 4609 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4610              	.LVL378:
2351:src/keys.c    **** 			cmd++;
 4611              		.loc 1 2351 6 view .LVU1472
 4612 0030 1428     		cmp	r0, #20
 4613 0032 04BF     		itt	eq
 4614 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2352:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4615              		.loc 1 2352 7 view .LVU1473
 4616 0036 0136     		addeq	r6, r6, #1
 4617              	.LVL379:
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4618              		.loc 1 2353 3 is_stmt 1 view .LVU1474
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4619              		.loc 1 2353 13 view .LVU1475
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4620              		.loc 1 2353 3 is_stmt 0 view .LVU1476
 4621 0038 A8B1     		cbz	r0, .L519
ARM GAS  /tmp/ccOshYsA.s 			page 153


 4622 003a 09F1FF33 		add	r3, r9, #-1
 4623 003e 04E0     		b	.L516
 4624              	.LVL380:
 4625              	.L527:
 4626              	.LBB486:
2358:src/keys.c    **** 				break;
 4627              		.loc 1 2358 12 view .LVU1477
 4628 0040 12DB     		blt	.L514
 4629              	.LBE486:
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4630              		.loc 1 2353 16 discriminator 2 view .LVU1478
 4631 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4632              	.LVL381:
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4633              		.loc 1 2353 16 discriminator 2 view .LVU1479
 4634 0046 3C44     		add	r4, r4, r7
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4635              		.loc 1 2353 3 discriminator 2 view .LVU1480
 4636 0048 B0B1     		cbz	r0, .L526
 4637              	.LVL382:
 4638              	.L516:
 4639              	.LBB487:
2354:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4640              		.loc 1 2354 4 is_stmt 1 view .LVU1481
 4641 004a 5C1C     		adds	r4, r3, #1
2354:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4642              		.loc 1 2354 18 is_stmt 0 view .LVU1482
 4643 004c FFF7FEFF 		bl	remap_chars
 4644              	.LVL383:
 4645 0050 0546     		mov	r5, r0
2355:src/keys.c    **** 			if (c > cl)
 4646              		.loc 1 2355 19 view .LVU1483
 4647 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4648              	.LVL384:
2355:src/keys.c    **** 			if (c > cl)
 4649              		.loc 1 2355 4 is_stmt 1 view .LVU1484
2355:src/keys.c    **** 			if (c > cl)
 4650              		.loc 1 2355 19 is_stmt 0 view .LVU1485
 4651 0054 FFF7FEFF 		bl	remap_chars
 4652              	.LVL385:
2358:src/keys.c    **** 				break;
 4653              		.loc 1 2358 9 is_stmt 1 view .LVU1486
 4654              	.LBE487:
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4655              		.loc 1 2353 29 view .LVU1487
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4656              		.loc 1 2353 13 view .LVU1488
 4657              	.LBB488:
2356:src/keys.c    **** 				return pos;
 4658              		.loc 1 2356 4 view .LVU1489
2356:src/keys.c    **** 				return pos;
 4659              		.loc 1 2356 7 is_stmt 0 view .LVU1490
 4660 0058 8542     		cmp	r5, r0
 4661 005a 2346     		mov	r3, r4
 4662 005c F0DD     		ble	.L527
 4663              	.LVL386:
 4664              	.L511:
ARM GAS  /tmp/ccOshYsA.s 			page 154


2356:src/keys.c    **** 				return pos;
 4665              		.loc 1 2356 7 view .LVU1491
 4666              	.LBE488:
 4667              	.LBE485:
2365:src/keys.c    **** 
 4668              		.loc 1 2365 1 view .LVU1492
 4669 005e 4046     		mov	r0, r8
 4670 0060 04B0     		add	sp, sp, #16
 4671              		.cfi_remember_state
 4672              		.cfi_def_cfa_offset 32
 4673              		@ sp needed
 4674 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4675              	.LVL387:
 4676              	.L519:
 4677              		.cfi_restore_state
 4678              	.LBB489:
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4679              		.loc 1 2353 3 view .LVU1493
 4680 0066 4C46     		mov	r4, r9
 4681              	.LVL388:
 4682              	.L514:
2361:src/keys.c    **** 			return pos;
 4683              		.loc 1 2361 3 is_stmt 1 view .LVU1494
2361:src/keys.c    **** 			return pos;
 4684              		.loc 1 2361 6 is_stmt 0 view .LVU1495
 4685 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4686 006a 002B     		cmp	r3, #0
 4687 006c F7D0     		beq	.L511
 4688              	.LBE489:
2346:src/keys.c    **** 		char buf[16];
 4689              		.loc 1 2346 29 is_stmt 1 view .LVU1496
 4690 006e 08F10108 		add	r8, r8, #1
 4691              	.LVL389:
2346:src/keys.c    **** 		char buf[16];
 4692              		.loc 1 2346 16 view .LVU1497
2346:src/keys.c    **** 		char buf[16];
 4693              		.loc 1 2346 2 is_stmt 0 view .LVU1498
 4694 0072 D045     		cmp	r8, r10
 4695 0074 D4D1     		bne	.L517
 4696 0076 F2E7     		b	.L511
 4697              	.LVL390:
 4698              	.L526:
2346:src/keys.c    **** 		char buf[16];
 4699              		.loc 1 2346 2 view .LVU1499
 4700 0078 4C44     		add	r4, r4, r9
 4701 007a F5E7     		b	.L514
 4702              	.LVL391:
 4703              	.L518:
2346:src/keys.c    **** 		char buf[16];
 4704              		.loc 1 2346 11 view .LVU1500
 4705 007c D046     		mov	r8, r10
 4706 007e EEE7     		b	.L511
 4707              	.L529:
 4708              		.align	2
 4709              	.L528:
 4710 0080 00000000 		.word	StateWhileOn
 4711 0084 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccOshYsA.s 			page 155


 4712              		.cfi_endproc
 4713              	.LFE44:
 4715              		.section	.text.get_alpha_state,"ax",%progbits
 4716              		.align	1
 4717              		.p2align 2,,3
 4718              		.global	get_alpha_state
 4719              		.syntax unified
 4720              		.thumb
 4721              		.thumb_func
 4722              		.fpu fpv4-sp-d16
 4724              	get_alpha_state:
 4725              	.LFB56:
2690:src/keys.c    **** 
2691:src/keys.c    **** 
2692:src/keys.c    **** static int process_registerlist(const keycode c) {
2693:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2694:src/keys.c    **** 	enum shifts shift = reset_shift();
2695:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2696:src/keys.c    **** 	const int g_max = global_regs();
2697:src/keys.c    **** 
2698:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2699:src/keys.c    **** 		if (local_regs())
2700:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2701:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2702:src/keys.c    **** 		goto reset_window;
2703:src/keys.c    **** 	}
2704:src/keys.c    **** 	else if (n <= 9) {
2705:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2706:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2707:src/keys.c    **** 			dv = n;
2708:src/keys.c    **** 		State2.digval = dv;
2709:src/keys.c    **** 		goto reset_window;
2710:src/keys.c    **** 	}
2711:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2712:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2713:src/keys.c    **** 		set_smode(SDISP_SHOW);
2714:src/keys.c    **** 	}
2715:src/keys.c    **** 	else if (n != NO_REG) {
2716:src/keys.c    **** 		State2.digval = n;
2717:src/keys.c    **** 		goto reset_window;
2718:src/keys.c    **** 	}
2719:src/keys.c    **** 
2720:src/keys.c    **** 	switch (c) {
2721:src/keys.c    **** 	case K_DOWN:
2722:src/keys.c    **** 		if (State2.digval > 0) {
2723:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2724:src/keys.c    **** 				State2.digval = global_regs();
2725:src/keys.c    **** 			--State2.digval;
2726:src/keys.c    **** 		}
2727:src/keys.c    **** 		else
2728:src/keys.c    **** 			State2.digval = max - 1;
2729:src/keys.c    **** 		goto reset_window;
2730:src/keys.c    **** 
2731:src/keys.c    **** 	case K_UP:
2732:src/keys.c    **** 		if (State2.digval < max - 1) {
2733:src/keys.c    **** 			State2.digval++;
2734:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
ARM GAS  /tmp/ccOshYsA.s 			page 156


2735:src/keys.c    **** 				State2.digval = regX_idx;
2736:src/keys.c    **** 		}
2737:src/keys.c    **** 		else	
2738:src/keys.c    **** 			State2.digval = 0;
2739:src/keys.c    **** 		goto reset_window;
2740:src/keys.c    **** 
2741:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2742:src/keys.c    **** 	case K04:
2743:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2744:src/keys.c    **** 		goto reset_window;
2745:src/keys.c    **** #endif
2746:src/keys.c    **** 
2747:src/keys.c    **** 	case K24:			
2748:src/keys.c    **** 	//case K60:
2749:src/keys.c    **** 		if (State2.disp_temp)
2750:src/keys.c    **** 			return STATE_UNFINISHED;
2751:src/keys.c    **** 		break;		// Exit doing nothing
2752:src/keys.c    **** 
2753:src/keys.c    **** 	case K20:		// ENTER
2754:src/keys.c    **** 		if (shift == SHIFT_F) {
2755:src/keys.c    **** 			State2.disp_as_alpha = 1;
2756:src/keys.c    **** 			goto reset_window;
2757:src/keys.c    **** 		}
2758:src/keys.c    **** 	case K11:		// RCL
2759:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2760:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2761:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2762:src/keys.c    **** #else
2763:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2764:src/keys.c    **** #endif
2765:src/keys.c    **** 			State2.registerlist = 0;
2766:src/keys.c    **** 			State2.digval = 0;
2767:src/keys.c    **** 			State2.digval2 = 0;
2768:src/keys.c    **** 			return n;
2769:src/keys.c    **** 		}
2770:src/keys.c    **** 	default:
2771:src/keys.c    **** 		return STATE_UNFINISHED;
2772:src/keys.c    **** 	}
2773:src/keys.c    **** 	State2.registerlist = 0;
2774:src/keys.c    **** 	State2.digval = 0;
2775:src/keys.c    **** 	State2.digval2 = 0;
2776:src/keys.c    **** reset_window:
2777:src/keys.c    **** 	State2.window = 0;
2778:src/keys.c    **** 	return STATE_UNFINISHED;
2779:src/keys.c    **** }
2780:src/keys.c    **** 
2781:src/keys.c    **** 
2782:src/keys.c    **** static int process(const int c) {
2783:src/keys.c    ****   const enum shifts shift = cur_shift();
2784:src/keys.c    ****   enum catalogues cat;
2785:src/keys.c    **** 
2786:src/keys.c    **** #ifdef DM42
2787:src/keys.c    ****   // print_debug (0, c);
2788:src/keys.c    ****   if (Running || PAUSED) {
2789:src/keys.c    ****     /*
2790:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2791:src/keys.c    ****      */
ARM GAS  /tmp/ccOshYsA.s 			page 157


2792:src/keys.c    ****     if (c == K60 || c == K63) {
2793:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
2794:src/keys.c    **** 	set_pc(0);
2795:src/keys.c    ****       start_pause (0); //end the pause
2796:src/keys.c    ****       xeq_xrom();
2797:src/keys.c    ****       set_running_off();
2798:src/keys.c    ****       DispMsg = "Stopped";
2799:src/keys.c    ****       State2.disp_freeze = 0;
2800:src/keys.c    ****       return STATE_UNFINISHED;
2801:src/keys.c    ****     }
2802:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2803:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2804:src/keys.c    ****       start_pause(0);			// leave PSE statement
2805:src/keys.c    ****       GoFast = 1;
2806:src/keys.c    ****     }
2807:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2808:src/keys.c    ****     return STATE_RUNNING;
2809:src/keys.c    ****   }
2810:src/keys.c    **** #else
2811:src/keys.c    ****   if (Running || Pause) {
2812:src/keys.c    ****     /*
2813:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2814:src/keys.c    ****      */
2815:src/keys.c    ****     if (c == K60 || c == K63) {
2816:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2817:src/keys.c    **** 	set_pc(0);
2818:src/keys.c    ****       Pause = 0;
2819:src/keys.c    ****       xeq_xrom();
2820:src/keys.c    ****       set_running_off();
2821:src/keys.c    ****       DispMsg = "Stopped";
2822:src/keys.c    ****       State2.disp_freeze = 0;
2823:src/keys.c    ****       return STATE_UNFINISHED;
2824:src/keys.c    ****     }
2825:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2826:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2827:src/keys.c    ****       Pause = 0;			// leave PSE statement
2828:src/keys.c    ****       GoFast = 1;
2829:src/keys.c    ****     }
2830:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2831:src/keys.c    ****     return STATE_RUNNING;
2832:src/keys.c    ****   }
2833:src/keys.c    **** #endif
2834:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2835:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2836:src/keys.c    ****    * if required.
2837:src/keys.c    ****    */
2838:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue) {
2839:src/keys.c    ****     soft_init_state();
2840:src/keys.c    ****     return STATE_UNFINISHED;
2841:src/keys.c    ****   }
2842:src/keys.c    **** 
2843:src/keys.c    **** #ifndef CONSOLE
2844:src/keys.c    **** 	if (c == K63 && JustStopped) {
2845:src/keys.c    **** 		// Avoid an accidental restart with R/S
2846:src/keys.c    **** 		JustStopped = 0;
2847:src/keys.c    **** 		return STATE_IGNORE;
2848:src/keys.c    **** 	}
ARM GAS  /tmp/ccOshYsA.s 			page 158


2849:src/keys.c    **** #endif
2850:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2851:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2852:src/keys.c    **** 	 */
2853:src/keys.c    **** #ifdef DM42
2854:src/keys.c    **** 	if (State2.catalogue && keyticks() > 30)	
2855:src/keys.c    **** #else	
2856:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2857:src/keys.c    **** #endif
2858:src/keys.c    **** 		CmdLineLength = 0;
2859:src/keys.c    **** 	// print_debug (1, c);
2860:src/keys.c    **** 	/*
2861:src/keys.c    **** 	 *  Process the various cases
2862:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2863:src/keys.c    **** 	 */
2864:src/keys.c    **** 	if (State2.confirm)
2865:src/keys.c    **** 		return process_confirm((const keycode)c);
2866:src/keys.c    **** 
2867:src/keys.c    **** 	if (State2.rarg)
2868:src/keys.c    **** 		return process_arg((const keycode)c);
2869:src/keys.c    **** 
2870:src/keys.c    **** 	if (State2.gtodot)
2871:src/keys.c    **** 		return process_gtodot((const keycode)c);
2872:src/keys.c    **** 
2873:src/keys.c    **** 	if (State2.hyp)
2874:src/keys.c    **** 		return process_hyp((const keycode)c);
2875:src/keys.c    **** 
2876:src/keys.c    **** 	if (State2.test != TST_NONE)
2877:src/keys.c    **** 		return process_test((const keycode)c);
2878:src/keys.c    **** 
2879:src/keys.c    **** 	if (State2.status)
2880:src/keys.c    **** 		return process_status((const keycode)c);
2881:src/keys.c    **** 
2882:src/keys.c    **** 	/*
2883:src/keys.c    **** 	 *  Process shift keys directly
2884:src/keys.c    **** 	 */
2885:src/keys.c    **** 	if (c == K_F) {
2886:src/keys.c    **** 		toggle_shift(SHIFT_F);
2887:src/keys.c    **** 		return STATE_UNFINISHED;
2888:src/keys.c    **** 	}
2889:src/keys.c    **** 	if (c == K_G) {
2890:src/keys.c    **** 		toggle_shift(SHIFT_G);
2891:src/keys.c    **** 		return STATE_UNFINISHED;
2892:src/keys.c    **** 	}
2893:src/keys.c    **** 	if (c == K_H) {
2894:src/keys.c    **** 		toggle_shift(SHIFT_H);
2895:src/keys.c    **** 		State2.arrow = 0;
2896:src/keys.c    **** 		return STATE_UNFINISHED;
2897:src/keys.c    **** 	}
2898:src/keys.c    **** 	/*
2899:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2900:src/keys.c    **** 	 */
2901:src/keys.c    **** 	// print_debug (2, c);
2902:src/keys.c    **** 	if (State2.arrow)
2903:src/keys.c    **** 		return process_arrow((const keycode)c);
2904:src/keys.c    **** 
2905:src/keys.c    **** 	/*
ARM GAS  /tmp/ccOshYsA.s 			page 159


2906:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2907:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2908:src/keys.c    **** 	 * works and were not
2909:src/keys.c    **** 	 */
2910:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2911:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2912:src/keys.c    **** 		if (is_bad_cmdline())
2913:src/keys.c    **** 			return STATE_UNFINISHED;
2914:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2915:src/keys.c    **** 		init_cat( cat );
2916:src/keys.c    **** 		return STATE_UNFINISHED;
2917:src/keys.c    **** 	}
2918:src/keys.c    **** 
2919:src/keys.c    **** 	/*
2920:src/keys.c    **** 	 *  More handlers...
2921:src/keys.c    **** 	 */
2922:src/keys.c    **** 	if (State2.multi)
2923:src/keys.c    **** 		return process_multi((const keycode)c);
2924:src/keys.c    **** 
2925:src/keys.c    **** 	if (State2.labellist)
2926:src/keys.c    **** 		return process_labellist((const keycode)c);
2927:src/keys.c    **** 
2928:src/keys.c    **** 	if (State2.registerlist)
2929:src/keys.c    **** 		return process_registerlist((const keycode)c);
2930:src/keys.c    **** 
2931:src/keys.c    **** 	if (State2.catalogue)
2932:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2933:src/keys.c    **** 
2934:src/keys.c    **** 	if (State2.alphas) {
2935:src/keys.c    **** #ifndef INFRARED
2936:src/keys.c    **** 		return process_alpha((const keycode)c);
2937:src/keys.c    **** #else
2938:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2939:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2940:src/keys.c    **** 			print_tab(0);
2941:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2942:src/keys.c    **** 		}
2943:src/keys.c    **** 		return i;
2944:src/keys.c    **** #endif
2945:src/keys.c    **** 	}
2946:src/keys.c    **** 
2947:src/keys.c    **** 	if (State2.cmplx) {
2948:src/keys.c    **** 		return process_cmplx((const keycode)c);
2949:src/keys.c    **** 	} else {
2950:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2951:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2952:src/keys.c    **** 		if (shift == SHIFT_H)
2953:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2954:src/keys.c    **** 		// print_debug (3, c);
2955:src/keys.c    **** 		return process_normal((const keycode)c);
2956:src/keys.c    **** 	}
2957:src/keys.c    **** }
2958:src/keys.c    **** 
2959:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4726              		.loc 1 2959 40 is_stmt 1 view -0
 4727              		.cfi_startproc
 4728              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccOshYsA.s 			page 160


 4729              		@ frame_needed = 0, uses_anonymous_args = 0
 4730              		@ link register save eliminated.
2960:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4731              		.loc 1 2960 4 view .LVU1502
 4732              		.loc 1 2960 53 is_stmt 0 view .LVU1503
 4733 0000 074B     		ldr	r3, .L535
 4734              		.loc 1 2960 44 view .LVU1504
 4735 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4736 0004 1AB9     		cbnz	r2, .L533
2961:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2962:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE) );
 4737              		.loc 1 2962 5 discriminator 2 view .LVU1505
 4738 0006 5969     		ldr	r1, [r3, #20]
 4739 0008 064A     		ldr	r2, .L535+4
 4740 000a 0A40     		ands	r2, r2, r1
 4741 000c 0AB1     		cbz	r2, .L534
 4742              	.L533:
 4743 000e 0120     		movs	r0, #1
2963:src/keys.c    ****  }
 4744              		.loc 1 2963 2 view .LVU1506
 4745 0010 7047     		bx	lr
 4746              	.L534:
2962:src/keys.c    ****  }
 4747              		.loc 1 2962 42 discriminator 3 view .LVU1507
 4748 0012 D889     		ldrh	r0, [r3, #14]
 4749 0014 B0F5E060 		subs	r0, r0, #1792
 4750 0018 18BF     		it	ne
 4751 001a 0120     		movne	r0, #1
 4752 001c 7047     		bx	lr
 4753              	.L536:
 4754 001e 00BF     		.align	2
 4755              	.L535:
 4756 0020 00000000 		.word	StateWhileOn
 4757 0024 0709280C 		.word	203950343
 4758              		.cfi_endproc
 4759              	.LFE56:
 4761              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4762              		.align	2
 4763              	.LC0:
 4764 0000 52554E00 		.ascii	"RUN\000"
 4765              		.align	2
 4766              	.LC1:
 4767 0004 4E554C4C 		.ascii	"NULL\000"
 4767      00
 4768 0009 000000   		.align	2
 4769              	.LC2:
 4770 000c 53746F70 		.ascii	"Stopped\000"
 4770      70656400 
 4771              		.section	.text.process_keycode,"ax",%progbits
 4772              		.align	1
 4773              		.p2align 2,,3
 4774              		.global	process_keycode
 4775              		.syntax unified
 4776              		.thumb
 4777              		.thumb_func
 4778              		.fpu fpv4-sp-d16
 4780              	process_keycode:
ARM GAS  /tmp/ccOshYsA.s 			page 161


 4781              	.LVL392:
 4782              	.LFB58:
2964:src/keys.c    **** 
2965:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2966:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
2967:src/keys.c    ****    process_keycode ( remapped.key_34s );
2968:src/keys.c    ****  }
2969:src/keys.c    ****  
2970:src/keys.c    **** /*
2971:src/keys.c    ****  *  Fed with key codes by the event loop
2972:src/keys.c    ****  */
2973:src/keys.c    **** void process_keycode(int c)
2974:src/keys.c    **** {
 4783              		.loc 1 2974 1 is_stmt 1 view -0
 4784              		.cfi_startproc
 4785              		@ args = 0, pretend = 0, frame = 8
 4786              		@ frame_needed = 0, uses_anonymous_args = 0
2975:src/keys.c    ****   static int was_paused;
 4787              		.loc 1 2975 3 view .LVU1509
2976:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2977:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4788              		.loc 1 2977 3 view .LVU1510
2978:src/keys.c    **** #ifdef DM42
2979:src/keys.c    ****   if (was_paused && ! PAUSED) {
 4789              		.loc 1 2979 3 view .LVU1511
2974:src/keys.c    ****   static int was_paused;
 4790              		.loc 1 2974 1 is_stmt 0 view .LVU1512
 4791 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4792              		.cfi_def_cfa_offset 36
 4793              		.cfi_offset 4, -36
 4794              		.cfi_offset 5, -32
 4795              		.cfi_offset 6, -28
 4796              		.cfi_offset 7, -24
 4797              		.cfi_offset 8, -20
 4798              		.cfi_offset 9, -16
 4799              		.cfi_offset 10, -12
 4800              		.cfi_offset 11, -8
 4801              		.cfi_offset 14, -4
 4802              		.loc 1 2979 7 view .LVU1513
 4803 0004 944E     		ldr	r6, .L1145
 4804              		.loc 1 2979 21 view .LVU1514
 4805 0006 954D     		ldr	r5, .L1145+4
 4806              		.loc 1 2979 6 view .LVU1515
 4807 0008 3368     		ldr	r3, [r6]
2974:src/keys.c    ****   static int was_paused;
 4808              		.loc 1 2974 1 view .LVU1516
 4809 000a 83B0     		sub	sp, sp, #12
 4810              		.cfi_def_cfa_offset 48
2974:src/keys.c    ****   static int was_paused;
 4811              		.loc 1 2974 1 view .LVU1517
 4812 000c 0446     		mov	r4, r0
 4813              		.loc 1 2979 6 view .LVU1518
 4814 000e 1BB1     		cbz	r3, .L538
 4815              		.loc 1 2979 21 discriminator 1 view .LVU1519
 4816 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4817              		.loc 1 2979 18 discriminator 1 view .LVU1520
 4818 0012 002B     		cmp	r3, #0
ARM GAS  /tmp/ccOshYsA.s 			page 162


 4819 0014 00F0E380 		beq	.L1074
 4820              	.LVL393:
 4821              	.L538:
2980:src/keys.c    ****     /*
2981:src/keys.c    ****      *  Continue XROM execution after a pause
2982:src/keys.c    ****      */
2983:src/keys.c    ****     xeq_xrom();
2984:src/keys.c    ****   }
2985:src/keys.c    ****   was_paused = PAUSED;
 4822              		.loc 1 2985 3 is_stmt 1 view .LVU1521
 4823              		.loc 1 2985 14 is_stmt 0 view .LVU1522
 4824 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4825 001a 3360     		str	r3, [r6]
2986:src/keys.c    **** #else
2987:src/keys.c    ****   if (was_paused && Pause == 0) {
2988:src/keys.c    ****     /*
2989:src/keys.c    ****      *  Continue XROM execution after a pause
2990:src/keys.c    ****      */
2991:src/keys.c    ****     xeq_xrom();
2992:src/keys.c    ****   }
2993:src/keys.c    ****   was_paused = Pause;
2994:src/keys.c    **** #endif
2995:src/keys.c    ****   if (c == K_HEARTBEAT) {
 4826              		.loc 1 2995 3 is_stmt 1 view .LVU1523
 4827              		.loc 1 2995 6 is_stmt 0 view .LVU1524
 4828 001c 622C     		cmp	r4, #98
 4829 001e 00F0AE80 		beq	.L1075
2996:src/keys.c    ****     /*
2997:src/keys.c    ****      *  Heartbeat processing goes here.
2998:src/keys.c    ****      *  This is totally thread safe!
2999:src/keys.c    ****      */
3000:src/keys.c    **** #ifdef DM42
3001:src/keys.c    ****     if (keyticks() >=2 ) {
3002:src/keys.c    **** #else
3003:src/keys.c    ****     if (Keyticks >= 2) {
3004:src/keys.c    **** #endif
3005:src/keys.c    ****       /*
3006:src/keys.c    ****        *  Some time has passed after last key press
3007:src/keys.c    ****        */
3008:src/keys.c    ****       if (OpCode != 0) {
3009:src/keys.c    **** 	/*
3010:src/keys.c    **** 	 *  Handle command display and NULL here
3011:src/keys.c    **** 	 */
3012:src/keys.c    **** 	if (OpCodeDisplayPending) {
3013:src/keys.c    **** 	  /*
3014:src/keys.c    **** 	   *  Show command to the user
3015:src/keys.c    **** 	   */
3016:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3017:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3018:src/keys.c    **** 	    DispMsg = "RUN";
3019:src/keys.c    **** 	  }
3020:src/keys.c    **** 	  else {
3021:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3022:src/keys.c    **** 	    DispMsg = TraceBuffer;
3023:src/keys.c    **** 	  }
3024:src/keys.c    **** 	  display();
3025:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
ARM GAS  /tmp/ccOshYsA.s 			page 163


3026:src/keys.c    **** 	}
3027:src/keys.c    **** #ifdef DM42
3028:src/keys.c    ****     else if (keyticks() > 12 ) {
3029:src/keys.c    **** #else
3030:src/keys.c    ****     else if (Keyticks > 12) {
3031:src/keys.c    **** #endif
3032:src/keys.c    **** 	  
3033:src/keys.c    **** 	  /*
3034:src/keys.c    **** 	   *  Key is too long held down
3035:src/keys.c    **** 	   */
3036:src/keys.c    **** 	  OpCode = 0;
3037:src/keys.c    **** 	  message("NULL", CNULL);
3038:src/keys.c    **** 	  // Force display update on key-up
3039:src/keys.c    **** 	  State2.disp_temp = 0;
3040:src/keys.c    **** 	}
3041:src/keys.c    ****       }
3042:src/keys.c    **** #ifdef DM42
3043:src/keys.c    **** 	if (keyticks() > 12 && shift_down() != SHIFT_N) {
3044:src/keys.c    **** #else
3045:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3046:src/keys.c    **** #endif
3047:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3048:src/keys.c    **** 	State2.shifts = SHIFT_N;
3049:src/keys.c    ****       }
3050:src/keys.c    ****     }
3051:src/keys.c    **** 
3052:src/keys.c    ****     /*
3053:src/keys.c    ****      *  Serve the watchdog
3054:src/keys.c    ****      */
3055:src/keys.c    ****     watchdog();
3056:src/keys.c    **** 
3057:src/keys.c    **** #ifndef CONSOLE
3058:src/keys.c    ****     /*
3059:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3060:src/keys.c    ****      */
3061:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3062:src/keys.c    ****       JustStopped = 0;
3063:src/keys.c    ****     }
3064:src/keys.c    **** #endif
3065:src/keys.c    **** 
3066:src/keys.c    ****     /*
3067:src/keys.c    ****      *  Do nothing if not running a program
3068:src/keys.c    ****      */
3069:src/keys.c    **** #ifdef DM42
3070:src/keys.c    ****     if (!Running && ! PAUSED)
3071:src/keys.c    **** #else
3072:src/keys.c    ****     if (!Running && ! Pause)
3073:src/keys.c    **** #endif
3074:src/keys.c    ****       return;
3075:src/keys.c    ****   }
3076:src/keys.c    ****   else {
3077:src/keys.c    ****     /*
3078:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3079:src/keys.c    ****      */
3080:src/keys.c    ****     xeq_init_contexts();
 4830              		.loc 1 3080 5 is_stmt 1 view .LVU1525
3081:src/keys.c    ****     State2.wascomplex = 0;
ARM GAS  /tmp/ccOshYsA.s 			page 164


 4831              		.loc 1 3081 23 is_stmt 0 view .LVU1526
 4832 0022 8F4E     		ldr	r6, .L1145+8
3080:src/keys.c    ****     State2.wascomplex = 0;
 4833              		.loc 1 3080 5 view .LVU1527
 4834 0024 FFF7FEFF 		bl	xeq_init_contexts
 4835              	.LVL394:
 4836              		.loc 1 3081 5 is_stmt 1 view .LVU1528
 4837              		.loc 1 3081 23 is_stmt 0 view .LVU1529
 4838 0028 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
3082:src/keys.c    **** 
3083:src/keys.c    ****     if (is_dot(RPN)) {
 4839              		.loc 1 3083 9 view .LVU1530
 4840 002a 8D20     		movs	r0, #141
3081:src/keys.c    **** 
 4841              		.loc 1 3081 23 view .LVU1531
 4842 002c 6FF38713 		bfc	r3, #6, #2
 4843 0030 3375     		strb	r3, [r6, #20]
 4844              		.loc 1 3083 5 is_stmt 1 view .LVU1532
 4845              		.loc 1 3083 9 is_stmt 0 view .LVU1533
 4846 0032 FFF7FEFF 		bl	is_dot
 4847              	.LVL395:
 4848              		.loc 1 3083 8 view .LVU1534
 4849 0036 0028     		cmp	r0, #0
 4850 0038 40F09880 		bne	.L1076
3084:src/keys.c    ****       /*
3085:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3086:src/keys.c    ****        */
3087:src/keys.c    ****       clr_dot(RPN);
3088:src/keys.c    ****       finish_display();
3089:src/keys.c    ****     }
3090:src/keys.c    **** 
3091:src/keys.c    **** #ifndef CONSOLE
3092:src/keys.c    ****     /*
3093:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3094:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3095:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3096:src/keys.c    ****      *  an accidental restart of the program.
3097:src/keys.c    ****      */
3098:src/keys.c    ****     if (c != K63)
 4851              		.loc 1 3098 5 is_stmt 1 view .LVU1535
 4852              		.loc 1 3098 8 is_stmt 0 view .LVU1536
 4853 003c 272C     		cmp	r4, #39
 4854 003e 3AD0     		beq	.L1053
 4855              	.L555:
3099:src/keys.c    ****       JustStopped = 0;
 4856              		.loc 1 3099 7 is_stmt 1 view .LVU1537
 4857              		.loc 1 3099 19 is_stmt 0 view .LVU1538
 4858 0040 884B     		ldr	r3, .L1145+12
 4859 0042 0022     		movs	r2, #0
3100:src/keys.c    **** #endif
3101:src/keys.c    ****   }
3102:src/keys.c    **** 
3103:src/keys.c    ****   /*
3104:src/keys.c    ****    *  Handle key release
3105:src/keys.c    ****    */
3106:src/keys.c    ****   if (c == K_RELEASE) {
 4860              		.loc 1 3106 6 view .LVU1539
ARM GAS  /tmp/ccOshYsA.s 			page 165


 4861 0044 632C     		cmp	r4, #99
3099:src/keys.c    ****       JustStopped = 0;
 4862              		.loc 1 3099 19 view .LVU1540
 4863 0046 1A60     		str	r2, [r3]
 4864              		.loc 1 3106 3 is_stmt 1 view .LVU1541
 4865              		.loc 1 3106 6 is_stmt 0 view .LVU1542
 4866 0048 35D1     		bne	.L1053
3107:src/keys.c    ****     if (OpCode != 0) {
 4867              		.loc 1 3107 5 is_stmt 1 view .LVU1543
 4868              		.loc 1 3107 16 is_stmt 0 view .LVU1544
 4869 004a 874B     		ldr	r3, .L1145+16
 4870 004c 1C68     		ldr	r4, [r3]
 4871              	.LVL396:
 4872              		.loc 1 3107 8 view .LVU1545
 4873 004e 002C     		cmp	r4, #0
 4874 0050 00F0C381 		beq	.L557
3108:src/keys.c    ****       /*
3109:src/keys.c    ****        * Execute the key on release
3110:src/keys.c    ****        */
3111:src/keys.c    ****       GoFast = 1;
 4875              		.loc 1 3111 7 is_stmt 1 view .LVU1546
 4876              		.loc 1 3111 14 is_stmt 0 view .LVU1547
 4877 0054 8549     		ldr	r1, .L1145+20
3112:src/keys.c    ****       c = OpCode;
3113:src/keys.c    ****       OpCode = 0;
 4878              		.loc 1 3113 14 view .LVU1548
 4879 0056 1A60     		str	r2, [r3]
3111:src/keys.c    ****       c = OpCode;
 4880              		.loc 1 3111 14 view .LVU1549
 4881 0058 0120     		movs	r0, #1
3114:src/keys.c    **** 
3115:src/keys.c    ****       if (c == STATE_SST)
 4882              		.loc 1 3115 10 view .LVU1550
 4883 005a 2E2C     		cmp	r4, #46
3112:src/keys.c    ****       OpCode = 0;
 4884              		.loc 1 3112 9 view .LVU1551
 4885 005c A346     		mov	fp, r4
3111:src/keys.c    ****       c = OpCode;
 4886              		.loc 1 3111 14 view .LVU1552
 4887 005e 0860     		str	r0, [r1]
3112:src/keys.c    ****       OpCode = 0;
 4888              		.loc 1 3112 7 is_stmt 1 view .LVU1553
 4889              	.LVL397:
3113:src/keys.c    **** 
 4890              		.loc 1 3113 7 view .LVU1554
 4891              		.loc 1 3115 7 view .LVU1555
 4892              		.loc 1 3115 10 is_stmt 0 view .LVU1556
 4893 0060 00F0CE81 		beq	.L1077
3116:src/keys.c    **** 	xeq_sst_bst(1);
3117:src/keys.c    ****       else {
3118:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 4894              		.loc 1 3118 2 is_stmt 1 view .LVU1557
 4895              		.loc 1 3118 5 is_stmt 0 view .LVU1558
 4896 0064 B4F5817F 		cmp	r4, #258
 4897 0068 04D0     		beq	.L563
 4898              		.loc 1 3118 29 discriminator 1 view .LVU1559
 4899 006a 40F23F13 		movw	r3, #319
ARM GAS  /tmp/ccOshYsA.s 			page 166


 4900 006e 9C42     		cmp	r4, r3
 4901 0070 40F0B880 		bne	.L1078
 4902              	.L563:
3119:src/keys.c    **** 	  xeq(c);
 4903              		.loc 1 3119 4 is_stmt 1 view .LVU1560
3120:src/keys.c    **** #ifdef DM42
3121:src/keys.c    **** 	  if (Running || PAUSED)
 4904              		.loc 1 3121 8 is_stmt 0 view .LVU1561
 4905 0074 7E4F     		ldr	r7, .L1145+24
3119:src/keys.c    **** 	  xeq(c);
 4906              		.loc 1 3119 4 view .LVU1562
 4907 0076 2046     		mov	r0, r4
 4908 0078 FFF7FEFF 		bl	xeq
 4909              	.LVL398:
 4910              		.loc 1 3121 4 is_stmt 1 view .LVU1563
 4911              		.loc 1 3121 7 is_stmt 0 view .LVU1564
 4912 007c 3B68     		ldr	r3, [r7]
 4913 007e 0BB9     		cbnz	r3, .L561
 4914              		.loc 1 3121 16 discriminator 1 view .LVU1565
 4915 0080 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4916 0082 0BB1     		cbz	r3, .L559
 4917              	.L561:
3122:src/keys.c    **** #else
3123:src/keys.c    **** 	  if (Running || Pause)
3124:src/keys.c    **** #endif
3125:src/keys.c    **** 	    xeqprog();
 4918              		.loc 1 3125 6 is_stmt 1 view .LVU1566
 4919 0084 FFF7FEFF 		bl	xeqprog
 4920              	.LVL399:
 4921              	.L559:
3126:src/keys.c    **** 	}
3127:src/keys.c    ****       }
3128:src/keys.c    ****       dot(RPN, ShowRPN);
 4922              		.loc 1 3128 7 view .LVU1567
 4923 0088 7A4C     		ldr	r4, .L1145+28
 4924              	.LVL400:
 4925              		.loc 1 3128 7 is_stmt 0 view .LVU1568
 4926 008a 8D20     		movs	r0, #141
 4927 008c 2168     		ldr	r1, [r4]
 4928 008e FFF7FEFF 		bl	dot
 4929              	.LVL401:
3129:src/keys.c    ****     }
3130:src/keys.c    ****     else {
3131:src/keys.c    ****       // Ignore key-up if no operation was pending
3132:src/keys.c    ****       dot(RPN, ShowRPN);
3133:src/keys.c    **** #ifndef CONSOLE
3134:src/keys.c    ****       if (! State2.disp_temp ) {
3135:src/keys.c    **** 	if (!WasDataEntry) {
3136:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3137:src/keys.c    **** 	  display();
3138:src/keys.c    **** 	}
3139:src/keys.c    **** 	else {
3140:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
3141:src/keys.c    **** 	}
3142:src/keys.c    ****       }
3143:src/keys.c    **** #endif
3144:src/keys.c    ****       return;
ARM GAS  /tmp/ccOshYsA.s 			page 167


3145:src/keys.c    ****     }
3146:src/keys.c    **** 
3147:src/keys.c    ****     /*
3148:src/keys.c    ****      *  Turn on the RPN symbol if desired
3149:src/keys.c    ****      */
3150:src/keys.c    ****     if (ShowRPN) {
 4930              		.loc 1 3150 5 is_stmt 1 view .LVU1569
 4931              		.loc 1 3150 9 is_stmt 0 view .LVU1570
 4932 0092 D4F80080 		ldr	r8, [r4]
 4933              		.loc 1 3150 8 view .LVU1571
 4934 0096 B8F1000F 		cmp	r8, #0
 4935 009a 3FD0     		beq	.L566
3151:src/keys.c    ****       finish_display();
 4936              		.loc 1 3151 7 is_stmt 1 view .LVU1572
 4937 009c FFF7FEFF 		bl	finish_display
 4938              	.LVL402:
3152:src/keys.c    ****     }
3153:src/keys.c    ****   }
3154:src/keys.c    ****   else {
3155:src/keys.c    ****     /*
3156:src/keys.c    ****      *  Decode the key 
3157:src/keys.c    ****      */
3158:src/keys.c    ****     // print_debug (100, c);
3159:src/keys.c    ****     WasDataEntry = 0;
3160:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3161:src/keys.c    ****     c = process(c);		// returns an op-code or state
3162:src/keys.c    ****     switch (c) {
3163:src/keys.c    ****     case STATE_SST:
3164:src/keys.c    ****       OpCode = c;
3165:src/keys.c    ****       OpCodeDisplayPending = 0;
3166:src/keys.c    ****       xeq_sst_bst(0);
3167:src/keys.c    ****       break;
3168:src/keys.c    **** 
3169:src/keys.c    ****     case STATE_BST:
3170:src/keys.c    ****       xeq_sst_bst(-1);
3171:src/keys.c    ****       break;
3172:src/keys.c    **** 
3173:src/keys.c    ****     case STATE_BACKSPACE:
3174:src/keys.c    ****       if (! State2.runmode)
3175:src/keys.c    **** 	delprog();
3176:src/keys.c    ****       else if (State2.alphas) {
3177:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3178:src/keys.c    **** 	if (p > Alpha)
3179:src/keys.c    **** 	  *--p = '\0';
3180:src/keys.c    ****       }
3181:src/keys.c    ****       break;
3182:src/keys.c    **** 
3183:src/keys.c    ****     case STATE_RUNNING:
3184:src/keys.c    ****       xeqprog();  // continue execution
3185:src/keys.c    ****       break;
3186:src/keys.c    **** 
3187:src/keys.c    ****     case STATE_WINDOWRIGHT:
3188:src/keys.c    ****     case STATE_WINDOWLEFT:
3189:src/keys.c    ****       if (!is_bad_cmdline())
3190:src/keys.c    **** 	set_window(c);
3191:src/keys.c    ****       break;
3192:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 168


3193:src/keys.c    ****     case STATE_UNFINISHED:
3194:src/keys.c    ****     case STATE_IGNORE:
3195:src/keys.c    ****       break;
3196:src/keys.c    **** 
3197:src/keys.c    ****     default:
3198:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3199:src/keys.c    **** 	NonProgrammable = 0;
3200:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3201:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3202:src/keys.c    **** 	    // Data entry key
3203:src/keys.c    **** #ifndef CONSOLE
3204:src/keys.c    **** 	    WasDataEntry = 1;
3205:src/keys.c    **** #endif
3206:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3207:src/keys.c    **** 	    xeq(c);
3208:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3209:src/keys.c    **** 	  }
3210:src/keys.c    **** 	}
3211:src/keys.c    **** 	else {
3212:src/keys.c    **** 	  // Save the op-code for execution on key-up
3213:src/keys.c    **** 	  OpCode = c;
3214:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3215:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
3216:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3217:src/keys.c    **** 	}
3218:src/keys.c    ****       }
3219:src/keys.c    ****       else {
3220:src/keys.c    **** 	stoprog(c);
3221:src/keys.c    ****       }
3222:src/keys.c    ****     }
3223:src/keys.c    ****   }
3224:src/keys.c    **** #ifdef DM42
3225:src/keys.c    ****   if (! Running && ! PAUSED
 4939              		.loc 1 3225 6 is_stmt 0 view .LVU1573
 4940 00a0 3B68     		ldr	r3, [r7]
2977:src/keys.c    **** #ifdef DM42
 4941              		.loc 1 2977 7 view .LVU1574
 4942 00a2 4FF00008 		mov	r8, #0
 4943              	.LVL403:
 4944              		.loc 1 3225 3 is_stmt 1 view .LVU1575
 4945              		.loc 1 3225 6 is_stmt 0 view .LVU1576
 4946 00a6 002B     		cmp	r3, #0
 4947 00a8 3BD0     		beq	.L580
 4948              	.L1068:
 4949              		.loc 1 3225 6 view .LVU1577
 4950 00aa 734C     		ldr	r4, .L1145+32
 4951              	.LVL404:
 4952              	.L836:
3226:src/keys.c    **** #else
3227:src/keys.c    ****   if (! Running && ! Pause
3228:src/keys.c    **** #endif
3229:src/keys.c    **** #ifndef CONSOLE
3230:src/keys.c    ****       && ! JustStopped
3231:src/keys.c    **** #endif
3232:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
3233:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
3234:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 169


3235:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
3236:src/keys.c    ****     display();
3237:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
3238:src/keys.c    ****   }
3239:src/keys.c    **** 
3240:src/keys.c    ****  no_display:
3241:src/keys.c    ****   JustDisplayed = 0;
 4953              		.loc 1 3241 3 is_stmt 1 view .LVU1578
 4954              		.loc 1 3241 17 is_stmt 0 view .LVU1579
 4955 00ac 0023     		movs	r3, #0
 4956 00ae 2360     		str	r3, [r4]
3242:src/keys.c    ****   watchdog();
 4957              		.loc 1 3242 13 is_stmt 1 view .LVU1580
3243:src/keys.c    **** }
 4958              		.loc 1 3243 1 is_stmt 0 view .LVU1581
 4959 00b0 03B0     		add	sp, sp, #12
 4960              		.cfi_remember_state
 4961              		.cfi_def_cfa_offset 36
 4962              		@ sp needed
 4963 00b2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4964              	.LVL405:
 4965              	.L1053:
 4966              		.cfi_restore_state
 4967              		.loc 1 3243 1 view .LVU1582
 4968 00b6 6E4F     		ldr	r7, .L1145+24
 4969 00b8 3B68     		ldr	r3, [r7]
 4970              	.L552:
3159:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 4971              		.loc 1 3159 5 is_stmt 1 view .LVU1583
3160:src/keys.c    ****     c = process(c);		// returns an op-code or state
 4972              		.loc 1 3160 13 is_stmt 0 view .LVU1584
 4973 00ba 6E49     		ldr	r1, .L1145+28
3159:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 4974              		.loc 1 3159 18 view .LVU1585
 4975 00bc DFF8D091 		ldr	r9, .L1145+56
3160:src/keys.c    ****     c = process(c);		// returns an op-code or state
 4976              		.loc 1 3160 15 view .LVU1586
 4977 00c0 B3FA83F3 		clz	r3, r3
 4978 00c4 5B09     		lsrs	r3, r3, #5
3159:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 4979              		.loc 1 3159 18 view .LVU1587
 4980 00c6 0022     		movs	r2, #0
3160:src/keys.c    ****     c = process(c);		// returns an op-code or state
 4981              		.loc 1 3160 13 view .LVU1588
 4982 00c8 0B60     		str	r3, [r1]
3159:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 4983              		.loc 1 3159 18 view .LVU1589
 4984 00ca C9F80020 		str	r2, [r9]
3160:src/keys.c    ****     c = process(c);		// returns an op-code or state
 4985              		.loc 1 3160 5 is_stmt 1 view .LVU1590
3161:src/keys.c    ****     switch (c) {
 4986              		.loc 1 3161 5 view .LVU1591
 4987              	.LVL406:
 4988              	.LBB672:
 4989              	.LBI672:
2782:src/keys.c    ****   const enum shifts shift = cur_shift();
 4990              		.loc 1 2782 12 view .LVU1592
ARM GAS  /tmp/ccOshYsA.s 			page 170


 4991              	.LBB673:
2783:src/keys.c    ****   enum catalogues cat;
 4992              		.loc 1 2783 3 view .LVU1593
 4993              	.LBB674:
 4994              	.LBI674:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 4995              		.loc 1 84 13 view .LVU1594
 4996              	.LBB675:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4997              		.loc 1 85 2 view .LVU1595
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4998              		.loc 1 85 18 is_stmt 0 view .LVU1596
 4999 00ce FFF7FEFF 		bl	shift_down
 5000              	.LVL407:
  86:src/keys.c    **** }
 5001              		.loc 1 86 2 is_stmt 1 view .LVU1597
  86:src/keys.c    **** }
 5002              		.loc 1 86 52 is_stmt 0 view .LVU1598
 5003 00d2 8246     		mov	r10, r0
 5004 00d4 10B9     		cbnz	r0, .L569
 5005 00d6 624B     		ldr	r3, .L1145+8
 5006 00d8 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5007              	.L569:
 5008              	.LVL408:
  86:src/keys.c    **** }
 5009              		.loc 1 86 52 view .LVU1599
 5010              	.LBE675:
 5011              	.LBE674:
2784:src/keys.c    **** 
 5012              		.loc 1 2784 3 is_stmt 1 view .LVU1600
2788:src/keys.c    ****     /*
 5013              		.loc 1 2788 3 view .LVU1601
2788:src/keys.c    ****     /*
 5014              		.loc 1 2788 7 is_stmt 0 view .LVU1602
 5015 00dc D7F80080 		ldr	r8, [r7]
2788:src/keys.c    ****     /*
 5016              		.loc 1 2788 6 view .LVU1603
 5017 00e0 B8F1000F 		cmp	r8, #0
 5018 00e4 03D1     		bne	.L570
2788:src/keys.c    ****     /*
 5019              		.loc 1 2788 15 view .LVU1604
 5020 00e6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5021 00e8 002B     		cmp	r3, #0
 5022 00ea 00F08280 		beq	.L571
 5023              	.L570:
2792:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
 5024              		.loc 1 2792 5 is_stmt 1 view .LVU1605
2792:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
 5025              		.loc 1 2792 8 is_stmt 0 view .LVU1606
 5026 00ee 242C     		cmp	r4, #36
 5027 00f0 00F08D80 		beq	.L572
2792:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
 5028              		.loc 1 2792 18 view .LVU1607
 5029 00f4 272C     		cmp	r4, #39
 5030 00f6 00F08A80 		beq	.L572
2802:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5031              		.loc 1 2802 5 is_stmt 1 view .LVU1608
ARM GAS  /tmp/ccOshYsA.s 			page 171


2802:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5032              		.loc 1 2802 8 is_stmt 0 view .LVU1609
 5033 00fa 622C     		cmp	r4, #98
 5034 00fc 08D0     		beq	.L575
2803:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5035              		.loc 1 2803 7 is_stmt 1 view .LVU1610
2803:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5036              		.loc 1 2803 15 is_stmt 0 view .LVU1611
 5037 00fe 584B     		ldr	r3, .L1145+8
2803:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5038              		.loc 1 2803 17 view .LVU1612
 5039 0100 0134     		adds	r4, r4, #1
 5040              	.LVL409:
2804:src/keys.c    ****       GoFast = 1;
 5041              		.loc 1 2804 7 view .LVU1613
 5042 0102 0020     		movs	r0, #0
2803:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5043              		.loc 1 2803 15 view .LVU1614
 5044 0104 DC74     		strb	r4, [r3, #19]
2804:src/keys.c    ****       GoFast = 1;
 5045              		.loc 1 2804 7 is_stmt 1 view .LVU1615
 5046 0106 FFF7FEFF 		bl	start_pause
 5047              	.LVL410:
2805:src/keys.c    ****     }
 5048              		.loc 1 2805 7 view .LVU1616
2805:src/keys.c    ****     }
 5049              		.loc 1 2805 14 is_stmt 0 view .LVU1617
 5050 010a 584B     		ldr	r3, .L1145+20
 5051 010c 0122     		movs	r2, #1
 5052 010e 1A60     		str	r2, [r3]
 5053              	.LVL411:
 5054              	.L575:
2805:src/keys.c    ****     }
 5055              		.loc 1 2805 14 view .LVU1618
 5056              	.LBE673:
 5057              	.LBE672:
3184:src/keys.c    ****       break;
 5058              		.loc 1 3184 7 is_stmt 1 view .LVU1619
 5059 0110 FFF7FEFF 		bl	xeqprog
 5060              	.LVL412:
3185:src/keys.c    **** 
 5061              		.loc 1 3185 7 view .LVU1620
2977:src/keys.c    **** #ifdef DM42
 5062              		.loc 1 2977 7 is_stmt 0 view .LVU1621
 5063 0114 4FF00008 		mov	r8, #0
3185:src/keys.c    **** 
 5064              		.loc 1 3185 7 view .LVU1622
 5065 0118 4FF0310B 		mov	fp, #49
 5066              	.LVL413:
 5067              	.L566:
3225:src/keys.c    **** #else
 5068              		.loc 1 3225 3 is_stmt 1 view .LVU1623
3225:src/keys.c    **** #else
 5069              		.loc 1 3225 6 is_stmt 0 view .LVU1624
 5070 011c 3B68     		ldr	r3, [r7]
 5071 011e 002B     		cmp	r3, #0
 5072 0120 C3D1     		bne	.L1068
ARM GAS  /tmp/ccOshYsA.s 			page 172


 5073              	.LVL414:
 5074              	.L580:
3225:src/keys.c    **** #else
 5075              		.loc 1 3225 20 discriminator 1 view .LVU1625
 5076 0122 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
3225:src/keys.c    **** #else
 5077              		.loc 1 3225 17 discriminator 1 view .LVU1626
 5078 0124 002B     		cmp	r3, #0
 5079 0126 C0D1     		bne	.L1068
3230:src/keys.c    **** #endif
 5080              		.loc 1 3230 10 view .LVU1627
 5081 0128 4E4B     		ldr	r3, .L1145+12
3232:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5082              		.loc 1 3232 10 view .LVU1628
 5083 012a 534C     		ldr	r4, .L1145+32
 5084 012c 1B68     		ldr	r3, [r3]
 5085 012e 2268     		ldr	r2, [r4]
3232:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5086              		.loc 1 3232 7 view .LVU1629
 5087 0130 1343     		orrs	r3, r3, r2
 5088 0132 BBD1     		bne	.L836
3232:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5089              		.loc 1 3232 26 discriminator 1 view .LVU1630
 5090 0134 BBF1320F 		cmp	fp, #50
 5091 0138 B8D0     		beq	.L836
 5092              	.LBB1253:
3233:src/keys.c    **** 
 5093              		.loc 1 3233 5 is_stmt 1 view .LVU1631
3233:src/keys.c    **** 
 5094              		.loc 1 3233 15 is_stmt 0 view .LVU1632
 5095 013a DFF85491 		ldr	r9, .L1145+56
 5096 013e D9F80050 		ldr	r5, [r9]
 5097              	.LVL415:
3235:src/keys.c    ****     display();
 5098              		.loc 1 3235 5 is_stmt 1 view .LVU1633
3235:src/keys.c    ****     display();
 5099              		.loc 1 3235 21 is_stmt 0 view .LVU1634
 5100 0142 BBF1000F 		cmp	fp, #0
 5101 0146 0AD0     		beq	.L838
3235:src/keys.c    ****     display();
 5102              		.loc 1 3235 49 discriminator 1 view .LVU1635
 5103 0148 B8F1000F 		cmp	r8, #0
 5104 014c 40F06E84 		bne	.L889
3235:src/keys.c    ****     display();
 5105              		.loc 1 3235 66 discriminator 3 view .LVU1636
 5106 0150 434B     		ldr	r3, .L1145+8
 5107 0152 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
3235:src/keys.c    ****     display();
 5108              		.loc 1 3235 21 discriminator 3 view .LVU1637
 5109 0154 9807     		lsls	r0, r3, #30
 5110 0156 00F10985 		bmi	.L890
 5111 015a 05F0010B 		and	fp, r5, #1
 5112              	.LVL416:
 5113              	.L838:
3235:src/keys.c    ****     display();
 5114              		.loc 1 3235 18 discriminator 8 view .LVU1638
 5115 015e C9F800B0 		str	fp, [r9]
ARM GAS  /tmp/ccOshYsA.s 			page 173


3236:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5116              		.loc 1 3236 5 is_stmt 1 discriminator 8 view .LVU1639
 5117 0162 FFF7FEFF 		bl	display
 5118              	.LVL417:
3237:src/keys.c    ****   }
 5119              		.loc 1 3237 5 discriminator 8 view .LVU1640
3237:src/keys.c    ****   }
 5120              		.loc 1 3237 18 is_stmt 0 discriminator 8 view .LVU1641
 5121 0166 C9F80050 		str	r5, [r9]
 5122 016a 9FE7     		b	.L836
 5123              	.LVL418:
 5124              	.L1076:
3237:src/keys.c    ****   }
 5125              		.loc 1 3237 18 discriminator 8 view .LVU1642
 5126              	.LBE1253:
3087:src/keys.c    ****       finish_display();
 5127              		.loc 1 3087 7 is_stmt 1 view .LVU1643
 5128 016c 8D20     		movs	r0, #141
 5129 016e FFF7FEFF 		bl	clr_dot
 5130              	.LVL419:
3088:src/keys.c    ****     }
 5131              		.loc 1 3088 7 view .LVU1644
 5132 0172 FFF7FEFF 		bl	finish_display
 5133              	.LVL420:
3098:src/keys.c    ****       JustStopped = 0;
 5134              		.loc 1 3098 5 view .LVU1645
3098:src/keys.c    ****       JustStopped = 0;
 5135              		.loc 1 3098 8 is_stmt 0 view .LVU1646
 5136 0176 272C     		cmp	r4, #39
 5137 0178 7FF462AF 		bne	.L555
 5138 017c 9BE7     		b	.L1053
 5139              	.L1075:
3001:src/keys.c    **** #else
 5140              		.loc 1 3001 5 is_stmt 1 view .LVU1647
3001:src/keys.c    **** #else
 5141              		.loc 1 3001 9 is_stmt 0 view .LVU1648
 5142 017e FFF7FEFF 		bl	keyticks
 5143              	.LVL421:
3001:src/keys.c    **** #else
 5144              		.loc 1 3001 8 view .LVU1649
 5145 0182 0128     		cmp	r0, #1
 5146 0184 1ADD     		ble	.L541
3008:src/keys.c    **** 	/*
 5147              		.loc 1 3008 7 is_stmt 1 view .LVU1650
3008:src/keys.c    **** 	/*
 5148              		.loc 1 3008 18 is_stmt 0 view .LVU1651
 5149 0186 384E     		ldr	r6, .L1145+16
 5150 0188 3068     		ldr	r0, [r6]
3008:src/keys.c    **** 	/*
 5151              		.loc 1 3008 10 view .LVU1652
 5152 018a 98B1     		cbz	r0, .L543
3012:src/keys.c    **** 	  /*
 5153              		.loc 1 3012 2 is_stmt 1 view .LVU1653
3012:src/keys.c    **** 	  /*
 5154              		.loc 1 3012 6 is_stmt 0 view .LVU1654
 5155 018c 3B4B     		ldr	r3, .L1145+36
3012:src/keys.c    **** 	  /*
ARM GAS  /tmp/ccOshYsA.s 			page 174


 5156              		.loc 1 3012 5 view .LVU1655
 5157 018e 1F68     		ldr	r7, [r3]
 5158 0190 002F     		cmp	r7, #0
 5159 0192 00F01183 		beq	.L544
3016:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5160              		.loc 1 3016 4 is_stmt 1 view .LVU1656
3017:src/keys.c    **** 	    DispMsg = "RUN";
 5161              		.loc 1 3017 7 is_stmt 0 view .LVU1657
 5162 0196 40F23B12 		movw	r2, #315
3016:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5163              		.loc 1 3016 25 view .LVU1658
 5164 019a 0026     		movs	r6, #0
3017:src/keys.c    **** 	    DispMsg = "RUN";
 5165              		.loc 1 3017 7 view .LVU1659
 5166 019c 9042     		cmp	r0, r2
3016:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5167              		.loc 1 3016 25 view .LVU1660
 5168 019e 1E60     		str	r6, [r3]
3017:src/keys.c    **** 	    DispMsg = "RUN";
 5169              		.loc 1 3017 4 is_stmt 1 view .LVU1661
3017:src/keys.c    **** 	    DispMsg = "RUN";
 5170              		.loc 1 3017 7 is_stmt 0 view .LVU1662
 5171 01a0 40F03281 		bne	.L545
3018:src/keys.c    **** 	  }
 5172              		.loc 1 3018 6 is_stmt 1 view .LVU1663
3018:src/keys.c    **** 	  }
 5173              		.loc 1 3018 14 is_stmt 0 view .LVU1664
 5174 01a4 364B     		ldr	r3, .L1145+40
 5175 01a6 374A     		ldr	r2, .L1145+44
 5176 01a8 1A60     		str	r2, [r3]
 5177              	.L546:
3024:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5178              		.loc 1 3024 4 is_stmt 1 view .LVU1665
 5179 01aa FFF7FEFF 		bl	display
 5180              	.LVL422:
3025:src/keys.c    **** 	}
 5181              		.loc 1 3025 4 view .LVU1666
3025:src/keys.c    **** 	}
 5182              		.loc 1 3025 12 is_stmt 0 view .LVU1667
 5183 01ae 314B     		ldr	r3, .L1145+28
 5184 01b0 0122     		movs	r2, #1
 5185 01b2 1A60     		str	r2, [r3]
 5186              	.L543:
3043:src/keys.c    **** #else
 5187              		.loc 1 3043 2 is_stmt 1 view .LVU1668
3043:src/keys.c    **** #else
 5188              		.loc 1 3043 6 is_stmt 0 view .LVU1669
 5189 01b4 FFF7FEFF 		bl	keyticks
 5190              	.LVL423:
3043:src/keys.c    **** #else
 5191              		.loc 1 3043 5 view .LVU1670
 5192 01b8 0C28     		cmp	r0, #12
 5193 01ba 45DC     		bgt	.L1079
 5194              	.L541:
3055:src/keys.c    **** 
 5195              		.loc 1 3055 15 is_stmt 1 view .LVU1671
3061:src/keys.c    ****       JustStopped = 0;
ARM GAS  /tmp/ccOshYsA.s 			page 175


 5196              		.loc 1 3061 5 view .LVU1672
3061:src/keys.c    ****       JustStopped = 0;
 5197              		.loc 1 3061 9 is_stmt 0 view .LVU1673
 5198 01bc 294E     		ldr	r6, .L1145+12
3061:src/keys.c    ****       JustStopped = 0;
 5199              		.loc 1 3061 8 view .LVU1674
 5200 01be 3368     		ldr	r3, [r6]
 5201 01c0 002B     		cmp	r3, #0
 5202 01c2 40F00381 		bne	.L1080
 5203              	.L550:
3070:src/keys.c    **** #else
 5204              		.loc 1 3070 5 is_stmt 1 view .LVU1675
3070:src/keys.c    **** #else
 5205              		.loc 1 3070 9 is_stmt 0 view .LVU1676
 5206 01c6 2A4F     		ldr	r7, .L1145+24
 5207 01c8 3B68     		ldr	r3, [r7]
3070:src/keys.c    **** #else
 5208              		.loc 1 3070 8 view .LVU1677
 5209 01ca 002B     		cmp	r3, #0
 5210 01cc 7FF475AF 		bne	.L552
3070:src/keys.c    **** #else
 5211              		.loc 1 3070 21 discriminator 1 view .LVU1678
 5212 01d0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
3070:src/keys.c    **** #else
 5213              		.loc 1 3070 18 discriminator 1 view .LVU1679
 5214 01d2 002A     		cmp	r2, #0
 5215 01d4 7FF471AF 		bne	.L552
 5216              	.LVL424:
 5217              	.L537:
 5218              		.loc 1 3243 1 view .LVU1680
 5219 01d8 03B0     		add	sp, sp, #12
 5220              		.cfi_remember_state
 5221              		.cfi_def_cfa_offset 36
 5222              		@ sp needed
 5223 01da BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5224              	.LVL425:
 5225              	.L1074:
 5226              		.cfi_restore_state
2983:src/keys.c    ****   }
 5227              		.loc 1 2983 5 is_stmt 1 view .LVU1681
 5228 01de FFF7FEFF 		bl	xeq_xrom
 5229              	.LVL426:
2983:src/keys.c    ****   }
 5230              		.loc 1 2983 5 is_stmt 0 view .LVU1682
 5231 01e2 19E7     		b	.L538
 5232              	.L1078:
3118:src/keys.c    **** 	  xeq(c);
 5233              		.loc 1 3118 60 discriminator 2 view .LVU1683
 5234 01e4 FFF7FEFF 		bl	is_bad_cmdline
 5235              	.LVL427:
3118:src/keys.c    **** 	  xeq(c);
 5236              		.loc 1 3118 56 discriminator 2 view .LVU1684
 5237 01e8 0028     		cmp	r0, #0
 5238 01ea 3FF443AF 		beq	.L563
 5239 01ee 204F     		ldr	r7, .L1145+24
 5240 01f0 4AE7     		b	.L559
 5241              	.LVL428:
ARM GAS  /tmp/ccOshYsA.s 			page 176


 5242              	.L571:
 5243              	.LBB1254:
 5244              	.LBB1197:
2838:src/keys.c    ****     soft_init_state();
 5245              		.loc 1 2838 3 is_stmt 1 view .LVU1685
2838:src/keys.c    ****     soft_init_state();
 5246              		.loc 1 2838 6 is_stmt 0 view .LVU1686
 5247 01f2 242C     		cmp	r4, #36
 5248 01f4 00F07183 		beq	.L1081
2844:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5249              		.loc 1 2844 2 is_stmt 1 view .LVU1687
2844:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5250              		.loc 1 2844 5 is_stmt 0 view .LVU1688
 5251 01f8 272C     		cmp	r4, #39
 5252 01fa 4BD1     		bne	.L579
2844:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5253              		.loc 1 2844 15 view .LVU1689
 5254 01fc 194B     		ldr	r3, .L1145+12
 5255 01fe 1A68     		ldr	r2, [r3]
 5256 0200 002A     		cmp	r2, #0
 5257 0202 47D0     		beq	.L579
2846:src/keys.c    **** 		return STATE_IGNORE;
 5258              		.loc 1 2846 3 is_stmt 1 view .LVU1690
2846:src/keys.c    **** 		return STATE_IGNORE;
 5259              		.loc 1 2846 15 is_stmt 0 view .LVU1691
 5260 0204 C3F80080 		str	r8, [r3]
2847:src/keys.c    **** 	}
 5261              		.loc 1 2847 3 is_stmt 1 view .LVU1692
 5262              	.LVL429:
2847:src/keys.c    **** 	}
 5263              		.loc 1 2847 3 is_stmt 0 view .LVU1693
 5264              	.LBE1197:
 5265              	.LBE1254:
3225:src/keys.c    **** #else
 5266              		.loc 1 3225 3 is_stmt 1 view .LVU1694
 5267              	.LBB1255:
 5268              	.LBB1198:
2847:src/keys.c    **** 	}
 5269              		.loc 1 2847 10 is_stmt 0 view .LVU1695
 5270 0208 4FF0320B 		mov	fp, #50
 5271 020c 89E7     		b	.L580
 5272              	.LVL430:
 5273              	.L572:
2793:src/keys.c    **** 	set_pc(0);
 5274              		.loc 1 2793 7 is_stmt 1 view .LVU1696
2793:src/keys.c    **** 	set_pc(0);
 5275              		.loc 1 2793 11 is_stmt 0 view .LVU1697
 5276 020e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
2793:src/keys.c    **** 	set_pc(0);
 5277              		.loc 1 2793 10 view .LVU1698
 5278 0210 33B1     		cbz	r3, .L574
2793:src/keys.c    **** 	set_pc(0);
 5279              		.loc 1 2793 21 view .LVU1699
 5280 0212 1D4B     		ldr	r3, .L1145+48
 5281 0214 B3F8E037 		ldrh	r3, [r3, #2016]
2793:src/keys.c    **** 	set_pc(0);
 5282              		.loc 1 2793 18 view .LVU1700
ARM GAS  /tmp/ccOshYsA.s 			page 177


 5283 0218 9B0B     		lsrs	r3, r3, #14
 5284 021a 032B     		cmp	r3, #3
 5285 021c 00F06F83 		beq	.L1082
 5286              	.L574:
2795:src/keys.c    ****       xeq_xrom();
 5287              		.loc 1 2795 7 is_stmt 1 view .LVU1701
 5288 0220 0020     		movs	r0, #0
 5289 0222 FFF7FEFF 		bl	start_pause
 5290              	.LVL431:
2796:src/keys.c    ****       set_running_off();
 5291              		.loc 1 2796 7 view .LVU1702
 5292 0226 FFF7FEFF 		bl	xeq_xrom
 5293              	.LVL432:
2797:src/keys.c    ****       DispMsg = "Stopped";
 5294              		.loc 1 2797 7 view .LVU1703
 5295 022a FFF7FEFF 		bl	set_running_off
 5296              	.LVL433:
2798:src/keys.c    ****       State2.disp_freeze = 0;
 5297              		.loc 1 2798 7 view .LVU1704
2799:src/keys.c    ****       return STATE_UNFINISHED;
 5298              		.loc 1 2799 26 is_stmt 0 view .LVU1705
 5299 022e 0C4B     		ldr	r3, .L1145+8
2798:src/keys.c    ****       State2.disp_freeze = 0;
 5300              		.loc 1 2798 15 view .LVU1706
 5301 0230 1349     		ldr	r1, .L1145+40
2799:src/keys.c    ****       return STATE_UNFINISHED;
 5302              		.loc 1 2799 26 view .LVU1707
 5303 0232 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
2798:src/keys.c    ****       State2.disp_freeze = 0;
 5304              		.loc 1 2798 15 view .LVU1708
 5305 0234 1548     		ldr	r0, .L1145+52
 5306 0236 0860     		str	r0, [r1]
2799:src/keys.c    ****       return STATE_UNFINISHED;
 5307              		.loc 1 2799 7 is_stmt 1 view .LVU1709
2799:src/keys.c    ****       return STATE_UNFINISHED;
 5308              		.loc 1 2799 26 is_stmt 0 view .LVU1710
 5309 0238 6FF30412 		bfc	r2, #4, #1
 5310 023c DA75     		strb	r2, [r3, #23]
2800:src/keys.c    ****     }
 5311              		.loc 1 2800 7 is_stmt 1 view .LVU1711
 5312              	.LBE1198:
 5313              	.LBE1255:
2977:src/keys.c    **** #ifdef DM42
 5314              		.loc 1 2977 7 is_stmt 0 view .LVU1712
 5315 023e 4FF00008 		mov	r8, #0
 5316              	.LBB1256:
 5317              	.LBB1199:
2800:src/keys.c    ****     }
 5318              		.loc 1 2800 14 view .LVU1713
 5319 0242 4FF0330B 		mov	fp, #51
 5320 0246 69E7     		b	.L566
 5321              	.LVL434:
 5322              	.L1079:
2800:src/keys.c    ****     }
 5323              		.loc 1 2800 14 view .LVU1714
 5324              	.LBE1199:
 5325              	.LBE1256:
ARM GAS  /tmp/ccOshYsA.s 			page 178


3043:src/keys.c    **** #else
 5326              		.loc 1 3043 25 discriminator 1 view .LVU1715
 5327 0248 FFF7FEFF 		bl	shift_down
 5328              	.LVL435:
3043:src/keys.c    **** #else
 5329              		.loc 1 3043 22 discriminator 1 view .LVU1716
 5330 024c 0028     		cmp	r0, #0
 5331 024e B5D0     		beq	.L541
3048:src/keys.c    ****       }
 5332              		.loc 1 3048 2 is_stmt 1 view .LVU1717
3048:src/keys.c    ****       }
 5333              		.loc 1 3048 16 is_stmt 0 view .LVU1718
 5334 0250 034B     		ldr	r3, .L1145+8
 5335 0252 0022     		movs	r2, #0
 5336 0254 1A74     		strb	r2, [r3, #16]
 5337 0256 B1E7     		b	.L541
 5338              	.L1146:
 5339              		.align	2
 5340              	.L1145:
 5341 0258 00000000 		.word	.LANCHOR12
 5342 025c 00000000 		.word	Pause
 5343 0260 00000000 		.word	StateWhileOn
 5344 0264 00000000 		.word	JustStopped
 5345 0268 00000000 		.word	OpCode
 5346 026c 00000000 		.word	GoFast
 5347 0270 00000000 		.word	Running
 5348 0274 00000000 		.word	ShowRPN
 5349 0278 00000000 		.word	JustDisplayed
 5350 027c 00000000 		.word	OpCodeDisplayPending
 5351 0280 00000000 		.word	DispMsg
 5352 0284 00000000 		.word	.LC0
 5353 0288 00000000 		.word	PersistentRam
 5354 028c 0C000000 		.word	.LC2
 5355 0290 00000000 		.word	WasDataEntry
 5356              	.LVL436:
 5357              	.L579:
3048:src/keys.c    ****       }
 5358              		.loc 1 3048 16 view .LVU1719
 5359 0294 8C4E     		ldr	r6, .L1147
 5360 0296 B37B     		ldrb	r3, [r6, #14]	@ zero_extendqisi2
 5361              	.L577:
 5362              	.LBB1257:
 5363              	.LBB1200:
2854:src/keys.c    **** #else	
 5364              		.loc 1 2854 2 is_stmt 1 view .LVU1720
2854:src/keys.c    **** #else	
 5365              		.loc 1 2854 5 is_stmt 0 view .LVU1721
 5366 0298 002B     		cmp	r3, #0
 5367 029a 40F08682 		bne	.L1083
 5368              	.L582:
2864:src/keys.c    **** 		return process_confirm((const keycode)c);
 5369              		.loc 1 2864 2 is_stmt 1 view .LVU1722
2864:src/keys.c    **** 		return process_confirm((const keycode)c);
 5370              		.loc 1 2864 6 is_stmt 0 view .LVU1723
 5371 029e 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
2864:src/keys.c    **** 		return process_confirm((const keycode)c);
 5372              		.loc 1 2864 5 view .LVU1724
ARM GAS  /tmp/ccOshYsA.s 			page 179


 5373 02a0 5B07     		lsls	r3, r3, #29
 5374 02a2 40F0A682 		bne	.L1084
2867:src/keys.c    **** 		return process_arg((const keycode)c);
 5375              		.loc 1 2867 2 is_stmt 1 view .LVU1725
2867:src/keys.c    **** 		return process_arg((const keycode)c);
 5376              		.loc 1 2867 6 is_stmt 0 view .LVU1726
 5377 02a6 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2867:src/keys.c    **** 		return process_arg((const keycode)c);
 5378              		.loc 1 2867 5 view .LVU1727
 5379 02a8 13F02001 		ands	r1, r3, #32
 5380 02ac 40F02283 		bne	.L1085
2870:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5381              		.loc 1 2870 2 is_stmt 1 view .LVU1728
2870:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5382              		.loc 1 2870 6 is_stmt 0 view .LVU1729
 5383 02b0 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
2870:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5384              		.loc 1 2870 5 view .LVU1730
 5385 02b2 12F0010B 		ands	fp, r2, #1
 5386 02b6 40F06B83 		bne	.L1086
2873:src/keys.c    **** 		return process_hyp((const keycode)c);
 5387              		.loc 1 2873 2 is_stmt 1 view .LVU1731
2873:src/keys.c    **** 		return process_hyp((const keycode)c);
 5388              		.loc 1 2873 5 is_stmt 0 view .LVU1732
 5389 02ba 12F02001 		ands	r1, r2, #32
 5390 02be 40F0AF80 		bne	.L1087
2876:src/keys.c    **** 		return process_test((const keycode)c);
 5391              		.loc 1 2876 2 is_stmt 1 view .LVU1733
2876:src/keys.c    **** 		return process_test((const keycode)c);
 5392              		.loc 1 2876 12 is_stmt 0 view .LVU1734
 5393 02c2 96F80FB0 		ldrb	fp, [r6, #15]	@ zero_extendqisi2
2876:src/keys.c    **** 		return process_test((const keycode)c);
 5394              		.loc 1 2876 5 view .LVU1735
 5395 02c6 BBF1070F 		cmp	fp, #7
 5396 02ca 40F02783 		bne	.L1088
2879:src/keys.c    **** 		return process_status((const keycode)c);
 5397              		.loc 1 2879 2 is_stmt 1 view .LVU1736
2879:src/keys.c    **** 		return process_status((const keycode)c);
 5398              		.loc 1 2879 12 is_stmt 0 view .LVU1737
 5399 02ce 337B     		ldrb	r3, [r6, #12]	@ zero_extendqisi2
2879:src/keys.c    **** 		return process_status((const keycode)c);
 5400              		.loc 1 2879 5 view .LVU1738
 5401 02d0 002B     		cmp	r3, #0
 5402 02d2 40F0BA83 		bne	.L1089
2885:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5403              		.loc 1 2885 2 is_stmt 1 view .LVU1739
2885:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5404              		.loc 1 2885 5 is_stmt 0 view .LVU1740
 5405 02d6 292C     		cmp	r4, #41
 5406 02d8 00F08884 		beq	.L1090
2889:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5407              		.loc 1 2889 2 is_stmt 1 view .LVU1741
2889:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5408              		.loc 1 2889 5 is_stmt 0 view .LVU1742
 5409 02dc 2A2C     		cmp	r4, #42
 5410 02de 00F0AB84 		beq	.L1091
2893:src/keys.c    **** 		toggle_shift(SHIFT_H);
ARM GAS  /tmp/ccOshYsA.s 			page 180


 5411              		.loc 1 2893 2 is_stmt 1 view .LVU1743
2893:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5412              		.loc 1 2893 5 is_stmt 0 view .LVU1744
 5413 02e2 2B2C     		cmp	r4, #43
 5414 02e4 00F0B884 		beq	.L1092
2902:src/keys.c    **** 		return process_arrow((const keycode)c);
 5415              		.loc 1 2902 2 is_stmt 1 view .LVU1745
2902:src/keys.c    **** 		return process_arrow((const keycode)c);
 5416              		.loc 1 2902 5 is_stmt 0 view .LVU1746
 5417 02e8 5007     		lsls	r0, r2, #29
 5418 02ea 00F1D783 		bmi	.L1093
2910:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5419              		.loc 1 2910 2 is_stmt 1 view .LVU1747
2910:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5420              		.loc 1 2910 8 is_stmt 0 view .LVU1748
 5421 02ee E4B2     		uxtb	r4, r4
 5422              	.LVL437:
 5423              	.LBB676:
 5424              	.LBI676:
 272:src/keys.c    **** {
 5425              		.loc 1 272 24 is_stmt 1 view .LVU1749
 5426              	.LBB677:
 274:src/keys.c    ****   int i, col, max;
 5427              		.loc 1 274 3 view .LVU1750
 275:src/keys.c    ****   const struct _map {
 5428              		.loc 1 275 3 view .LVU1751
 276:src/keys.c    ****     unsigned char key, cat[3];
 5429              		.loc 1 276 3 view .LVU1752
 281:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5430              		.loc 1 281 3 view .LVU1753
 281:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5431              		.loc 1 281 6 is_stmt 0 view .LVU1754
 5432 02f0 212C     		cmp	r4, #33
 5433 02f2 00F05984 		beq	.L1094
 284:src/keys.c    ****     /*
 5434              		.loc 1 284 3 is_stmt 1 view .LVU1755
 284:src/keys.c    ****     /*
 5435              		.loc 1 284 23 is_stmt 0 view .LVU1756
 5436 02f6 7549     		ldr	r1, .L1147+4
 5437 02f8 7369     		ldr	r3, [r6, #20]
 284:src/keys.c    ****     /*
 5438              		.loc 1 284 6 view .LVU1757
 5439 02fa 1942     		tst	r1, r3
 5440 02fc 40F00A84 		bne	.L656
 5441              	.LBB678:
 288:src/keys.c    **** #ifdef DM42
 5442              		.loc 1 288 5 is_stmt 1 view .LVU1758
 315:src/keys.c    ****       /*
 5443              		.loc 1 315 5 view .LVU1759
 315:src/keys.c    ****       /*
 5444              		.loc 1 315 8 is_stmt 0 view .LVU1760
 5445 0300 242C     		cmp	r4, #36
 5446 0302 03D1     		bne	.L657
 315:src/keys.c    ****       /*
 5447              		.loc 1 315 18 view .LVU1761
 5448 0304 BAF1020F 		cmp	r10, #2
 5449 0308 01F0B781 		beq	.L863
ARM GAS  /tmp/ccOshYsA.s 			page 181


 5450              	.L657:
 330:src/keys.c    ****       /*
 5451              		.loc 1 330 5 is_stmt 1 view .LVU1762
 330:src/keys.c    ****       /*
 5452              		.loc 1 330 8 is_stmt 0 view .LVU1763
 5453 030c BAF1030F 		cmp	r10, #3
 5454 0310 19D1     		bne	.L664
 5455              	.L852:
 340:src/keys.c    **** #ifndef WINGUI
 5456              		.loc 1 340 5 is_stmt 1 view .LVU1764
 5457              	.LVL438:
 342:src/keys.c    **** #else
 5458              		.loc 1 342 5 view .LVU1765
 342:src/keys.c    **** #else
 5459              		.loc 1 342 23 is_stmt 0 view .LVU1766
 5460 0312 6F4B     		ldr	r3, .L1147+8
 5461 0314 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 342:src/keys.c    **** #else
 5462              		.loc 1 342 27 view .LVU1767
 5463 0318 D907     		lsls	r1, r3, #31
 5464 031a 00F1F184 		bmi	.L864
 342:src/keys.c    **** #else
 5465              		.loc 1 342 73 view .LVU1768
 5466 031e 12F0020B 		ands	fp, r2, #2
 5467 0322 00F0A087 		beq	.L1095
 340:src/keys.c    **** #ifndef WINGUI
 5468              		.loc 1 340 8 view .LVU1769
 5469 0326 6B4B     		ldr	r3, .L1147+12
 346:src/keys.c    ****   }
 5470              		.loc 1 346 9 view .LVU1770
 5471 0328 0C21     		movs	r1, #12
 342:src/keys.c    **** #else
 5472              		.loc 1 342 73 view .LVU1771
 5473 032a 4FF0020C 		mov	ip, #2
 5474              	.LVL439:
 5475              	.L659:
 342:src/keys.c    **** #else
 5476              		.loc 1 342 73 view .LVU1772
 5477              	.LBE678:
 388:src/keys.c    ****     if (cp->key == c) {
 5478              		.loc 1 388 3 is_stmt 1 view .LVU1773
 388:src/keys.c    ****     if (cp->key == c) {
 5479              		.loc 1 388 15 view .LVU1774
 5480 032e 181F     		subs	r0, r3, #4
 5481 0330 00EB8100 		add	r0, r0, r1, lsl #2
 5482              	.LBB679:
 342:src/keys.c    **** #else
 5483              		.loc 1 342 73 is_stmt 0 view .LVU1775
 5484 0334 0421     		movs	r1, #4
 5485              	.LVL440:
 342:src/keys.c    **** #else
 5486              		.loc 1 342 73 view .LVU1776
 5487 0336 01E0     		b	.L665
 5488              	.LVL441:
 5489              	.L1097:
 342:src/keys.c    **** #else
 5490              		.loc 1 342 73 view .LVU1777
ARM GAS  /tmp/ccOshYsA.s 			page 182


 5491 0338 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 5492              	.LVL442:
 5493              	.L665:
 342:src/keys.c    **** #else
 5494              		.loc 1 342 73 view .LVU1778
 5495              	.LBE679:
 389:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5496              		.loc 1 389 5 is_stmt 1 view .LVU1779
 388:src/keys.c    ****     if (cp->key == c) {
 5497              		.loc 1 388 24 view .LVU1780
 388:src/keys.c    ****     if (cp->key == c) {
 5498              		.loc 1 388 15 view .LVU1781
 389:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5499              		.loc 1 389 8 is_stmt 0 view .LVU1782
 5500 033c 8C42     		cmp	r4, r1
 5501 033e 00F01884 		beq	.L1096
 388:src/keys.c    ****     if (cp->key == c) {
 5502              		.loc 1 388 3 view .LVU1783
 5503 0342 9842     		cmp	r0, r3
 5504 0344 F8D1     		bne	.L1097
 5505              	.LVL443:
 5506              	.L664:
 394:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5507              		.loc 1 394 3 is_stmt 1 view .LVU1784
 394:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5508              		.loc 1 394 6 is_stmt 0 view .LVU1785
 5509 0346 1107     		lsls	r1, r2, #28
 5510 0348 00F1DE80 		bmi	.L669
 5511              	.LVL444:
 5512              	.L668:
 394:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5513              		.loc 1 394 6 view .LVU1786
 5514              	.LBE677:
 5515              	.LBE676:
2925:src/keys.c    **** 		return process_labellist((const keycode)c);
 5516              		.loc 1 2925 2 is_stmt 1 view .LVU1787
2925:src/keys.c    **** 		return process_labellist((const keycode)c);
 5517              		.loc 1 2925 6 is_stmt 0 view .LVU1788
 5518 034c F17D     		ldrb	r1, [r6, #23]	@ zero_extendqisi2
2925:src/keys.c    **** 		return process_labellist((const keycode)c);
 5519              		.loc 1 2925 5 view .LVU1789
 5520 034e 4B07     		lsls	r3, r1, #29
 5521 0350 00F1DC84 		bmi	.L1098
2928:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5522              		.loc 1 2928 2 is_stmt 1 view .LVU1790
2928:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5523              		.loc 1 2928 5 is_stmt 0 view .LVU1791
 5524 0354 0807     		lsls	r0, r1, #28
 5525 0356 00F11986 		bmi	.L1099
2931:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5526              		.loc 1 2931 2 is_stmt 1 view .LVU1792
2931:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5527              		.loc 1 2931 5 is_stmt 0 view .LVU1793
 5528 035a B37B     		ldrb	r3, [r6, #14]	@ zero_extendqisi2
 5529 035c 002B     		cmp	r3, #0
 5530 035e 40F0B086 		bne	.L1100
2934:src/keys.c    **** #ifndef INFRARED
ARM GAS  /tmp/ccOshYsA.s 			page 183


 5531              		.loc 1 2934 2 is_stmt 1 view .LVU1794
2934:src/keys.c    **** #ifndef INFRARED
 5532              		.loc 1 2934 6 is_stmt 0 view .LVU1795
 5533 0362 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2934:src/keys.c    **** #ifndef INFRARED
 5534              		.loc 1 2934 5 view .LVU1796
 5535 0364 1807     		lsls	r0, r3, #28
 5536 0366 00F1BA86 		bmi	.L1101
2947:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5537              		.loc 1 2947 2 is_stmt 1 view .LVU1797
2947:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5538              		.loc 1 2947 5 is_stmt 0 view .LVU1798
 5539 036a 12F0020B 		ands	fp, r2, #2
 5540 036e 40F0EB87 		bne	.L1102
2950:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5541              		.loc 1 2950 3 is_stmt 1 view .LVU1799
2950:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5542              		.loc 1 2950 24 is_stmt 0 view .LVU1800
 5543 0372 0AF1FF32 		add	r2, r10, #-1
2950:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5544              		.loc 1 2950 6 view .LVU1801
 5545 0376 D2B2     		uxtb	r2, r2
 5546 0378 012A     		cmp	r2, #1
 5547 037a 41F26580 		bls	.L1103
2952:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5548              		.loc 1 2952 3 is_stmt 1 view .LVU1802
2952:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5549              		.loc 1 2952 6 is_stmt 0 view .LVU1803
 5550 037e BAF1030F 		cmp	r10, #3
 5551              	.LBB692:
 5552              	.LBB693:
 5553              	.LBB694:
 5554              	.LBB695:
 151:src/keys.c    **** }
 5555              		.loc 1 151 23 view .LVU1804
 5556 0382 554A     		ldr	r2, .L1147+16
 5557              	.LBE695:
 5558              	.LBE694:
 5559              	.LBE693:
 5560              	.LBE692:
2952:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5561              		.loc 1 2952 6 view .LVU1805
 5562 0384 00F02F87 		beq	.L1104
2955:src/keys.c    **** 	}
 5563              		.loc 1 2955 3 is_stmt 1 view .LVU1806
 5564              	.LVL445:
 5565              	.LBB716:
 5566              	.LBI716:
 694:src/keys.c    **** {
 5567              		.loc 1 694 12 view .LVU1807
 5568              	.LBB717:
 696:src/keys.c    **** 		// Row 1
 5569              		.loc 1 696 2 view .LVU1808
 743:src/keys.c    **** 	// print_debug (10, lc);
 5570              		.loc 1 743 2 view .LVU1809
 5571              	.LBB718:
 5572              	.LBI718:
ARM GAS  /tmp/ccOshYsA.s 			page 184


 139:src/keys.c    **** {
 5573              		.loc 1 139 12 view .LVU1810
 5574              	.LBB719:
 141:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5575              		.loc 1 141 2 view .LVU1811
 151:src/keys.c    **** }
 5576              		.loc 1 151 2 view .LVU1812
 151:src/keys.c    **** }
 5577              		.loc 1 151 2 is_stmt 0 view .LVU1813
 5578              	.LBE719:
 5579              	.LBE718:
 745:src/keys.c    **** 	// print_debug (11, op);
 5580              		.loc 1 745 2 is_stmt 1 view .LVU1814
 5581              	.LBB721:
 5582              	.LBB720:
 151:src/keys.c    **** }
 5583              		.loc 1 151 23 is_stmt 0 view .LVU1815
 5584 0388 12F804C0 		ldrb	ip, [r2, r4]	@ zero_extendqisi2
 5585              	.LBE720:
 5586              	.LBE721:
 751:src/keys.c    **** 	  switch (c) {
 5587              		.loc 1 751 6 view .LVU1816
 5588 038c 504A     		ldr	r2, .L1147+8
 745:src/keys.c    **** 	// print_debug (11, op);
 5589              		.loc 1 745 17 view .LVU1817
 5590 038e 5348     		ldr	r0, .L1147+20
 751:src/keys.c    **** 	  switch (c) {
 5591              		.loc 1 751 6 view .LVU1818
 5592 0390 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 745:src/keys.c    **** 	// print_debug (11, op);
 5593              		.loc 1 745 17 view .LVU1819
 5594 0394 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5595              	.LVL446:
 751:src/keys.c    **** 	  switch (c) {
 5596              		.loc 1 751 5 view .LVU1820
 5597 0398 D007     		lsls	r0, r2, #31
 745:src/keys.c    **** 	// print_debug (11, op);
 5598              		.loc 1 745 6 view .LVU1821
 5599 039a D346     		mov	fp, r10
 5600              	.LVL447:
 750:src/keys.c    **** 	if (UState.intm) {
 5601              		.loc 1 750 2 is_stmt 1 view .LVU1822
 751:src/keys.c    **** 	  switch (c) {
 5602              		.loc 1 751 2 view .LVU1823
 751:src/keys.c    **** 	  switch (c) {
 5603              		.loc 1 751 5 is_stmt 0 view .LVU1824
 5604 039c 79D5     		bpl	.L800
 752:src/keys.c    **** 	  case K00:
 5605              		.loc 1 752 4 is_stmt 1 view .LVU1825
 5606 039e 122C     		cmp	r4, #18
 5607 03a0 77D8     		bhi	.L800
 5608 03a2 DFE814F0 		tbh	[pc, r4, lsl #1]
 5609              	.L802:
 5610 03a6 8C01     		.2byte	(.L805-.L802)/2
 5611 03a8 8001     		.2byte	(.L804-.L802)/2
 5612 03aa 7600     		.2byte	(.L800-.L802)/2
 5613 03ac 6001     		.2byte	(.L803-.L802)/2
ARM GAS  /tmp/ccOshYsA.s 			page 185


 5614 03ae 7600     		.2byte	(.L800-.L802)/2
 5615 03b0 7600     		.2byte	(.L800-.L802)/2
 5616 03b2 7600     		.2byte	(.L800-.L802)/2
 5617 03b4 7600     		.2byte	(.L800-.L802)/2
 5618 03b6 7600     		.2byte	(.L800-.L802)/2
 5619 03b8 7600     		.2byte	(.L800-.L802)/2
 5620 03ba 7600     		.2byte	(.L800-.L802)/2
 5621 03bc 7600     		.2byte	(.L800-.L802)/2
 5622 03be 7600     		.2byte	(.L800-.L802)/2
 5623 03c0 7600     		.2byte	(.L800-.L802)/2
 5624 03c2 7600     		.2byte	(.L800-.L802)/2
 5625 03c4 7600     		.2byte	(.L800-.L802)/2
 5626 03c6 7600     		.2byte	(.L800-.L802)/2
 5627 03c8 7600     		.2byte	(.L800-.L802)/2
 5628 03ca 5401     		.2byte	(.L801-.L802)/2
 5629              	.LVL448:
 5630              		.p2align 1
 5631              	.L1080:
 752:src/keys.c    **** 	  case K00:
 5632              		.loc 1 752 4 is_stmt 0 view .LVU1826
 5633              	.LBE717:
 5634              	.LBE716:
 5635              	.LBE1200:
 5636              	.LBE1257:
3061:src/keys.c    ****       JustStopped = 0;
 5637              		.loc 1 3061 25 discriminator 1 view .LVU1827
 5638 03cc FFF7FEFF 		bl	is_key_pressed
 5639              	.LVL449:
3061:src/keys.c    ****       JustStopped = 0;
 5640              		.loc 1 3061 21 discriminator 1 view .LVU1828
 5641 03d0 0028     		cmp	r0, #0
 5642 03d2 7FF4F8AE 		bne	.L550
3062:src/keys.c    ****     }
 5643              		.loc 1 3062 7 is_stmt 1 view .LVU1829
3062:src/keys.c    ****     }
 5644              		.loc 1 3062 19 is_stmt 0 view .LVU1830
 5645 03d6 3060     		str	r0, [r6]
 5646 03d8 F5E6     		b	.L550
 5647              	.LVL450:
 5648              	.L557:
3132:src/keys.c    **** #ifndef CONSOLE
 5649              		.loc 1 3132 7 is_stmt 1 view .LVU1831
 5650 03da 414B     		ldr	r3, .L1147+24
 5651 03dc 8D20     		movs	r0, #141
 5652 03de 1968     		ldr	r1, [r3]
 5653 03e0 FFF7FEFF 		bl	dot
 5654              	.LVL451:
3134:src/keys.c    **** 	if (!WasDataEntry) {
 5655              		.loc 1 3134 7 view .LVU1832
3134:src/keys.c    **** 	if (!WasDataEntry) {
 5656              		.loc 1 3134 11 is_stmt 0 view .LVU1833
 5657 03e4 F37D     		ldrb	r3, [r6, #23]	@ zero_extendqisi2
3134:src/keys.c    **** 	if (!WasDataEntry) {
 5658              		.loc 1 3134 10 view .LVU1834
 5659 03e6 9A06     		lsls	r2, r3, #26
 5660 03e8 3FF5F6AE 		bmi	.L537
3135:src/keys.c    **** 	  // This will get rid of the last displayed op-code
ARM GAS  /tmp/ccOshYsA.s 			page 186


 5661              		.loc 1 3135 2 is_stmt 1 view .LVU1835
3135:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5662              		.loc 1 3135 6 is_stmt 0 view .LVU1836
 5663 03ec 3D4B     		ldr	r3, .L1147+28
3135:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5664              		.loc 1 3135 5 view .LVU1837
 5665 03ee 1B68     		ldr	r3, [r3]
 5666 03f0 002B     		cmp	r3, #0
 5667 03f2 40F0F981 		bne	.L568
3137:src/keys.c    **** 	}
 5668              		.loc 1 3137 4 is_stmt 1 view .LVU1838
 5669              		.loc 1 3243 1 is_stmt 0 view .LVU1839
 5670 03f6 03B0     		add	sp, sp, #12
 5671              		.cfi_remember_state
 5672              		.cfi_def_cfa_offset 36
 5673              		@ sp needed
 5674 03f8 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5675              		.cfi_restore 14
 5676              		.cfi_restore 11
 5677              		.cfi_restore 10
 5678              		.cfi_restore 9
 5679              		.cfi_restore 8
 5680              		.cfi_restore 7
 5681              		.cfi_restore 6
 5682              		.cfi_restore 5
 5683              		.cfi_restore 4
 5684              		.cfi_def_cfa_offset 0
3137:src/keys.c    **** 	}
 5685              		.loc 1 3137 4 view .LVU1840
 5686 03fc FFF7FEBF 		b	display
 5687              	.LVL452:
 5688              	.L1077:
 5689              		.cfi_restore_state
3116:src/keys.c    ****       else {
 5690              		.loc 1 3116 2 is_stmt 1 view .LVU1841
 5691 0400 FFF7FEFF 		bl	xeq_sst_bst
 5692              	.LVL453:
 5693 0404 384F     		ldr	r7, .L1147+32
 5694 0406 3FE6     		b	.L559
 5695              	.L545:
3021:src/keys.c    **** 	    DispMsg = TraceBuffer;
 5696              		.loc 1 3021 6 view .LVU1842
 5697 0408 384F     		ldr	r7, .L1147+36
 5698 040a 3946     		mov	r1, r7
 5699 040c FFF7FEFF 		bl	prt
 5700              	.LVL454:
 5701 0410 3246     		mov	r2, r6
 5702 0412 0146     		mov	r1, r0
 5703 0414 3846     		mov	r0, r7
 5704 0416 FFF7FEFF 		bl	scopy_char
 5705              	.LVL455:
3022:src/keys.c    **** 	  }
 5706              		.loc 1 3022 6 view .LVU1843
3022:src/keys.c    **** 	  }
 5707              		.loc 1 3022 14 is_stmt 0 view .LVU1844
 5708 041a 354B     		ldr	r3, .L1147+40
 5709 041c 1F60     		str	r7, [r3]
ARM GAS  /tmp/ccOshYsA.s 			page 187


 5710 041e C4E6     		b	.L546
 5711              	.LVL456:
 5712              	.L1087:
 5713              	.LBB1258:
 5714              	.LBB1201:
2874:src/keys.c    **** 
 5715              		.loc 1 2874 3 is_stmt 1 view .LVU1845
 5716              	.LBB737:
 5717              	.LBB738:
1257:src/keys.c    **** 	State2.dot = 0;
 5718              		.loc 1 1257 15 is_stmt 0 view .LVU1846
 5719 0420 22F06203 		bic	r3, r2, #98
 5720              	.LBE738:
 5721              	.LBE737:
2874:src/keys.c    **** 
 5722              		.loc 1 2874 10 view .LVU1847
 5723 0424 E4B2     		uxtb	r4, r4
 5724              	.LVL457:
 5725              	.LBB752:
 5726              	.LBI737:
1247:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 5727              		.loc 1 1247 12 is_stmt 1 view .LVU1848
 5728              	.LBB748:
1248:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 5729              		.loc 1 1248 2 view .LVU1849
1253:src/keys.c    **** 	int f = State2.dot;
 5730              		.loc 1 1253 2 view .LVU1850
1257:src/keys.c    **** 	State2.dot = 0;
 5731              		.loc 1 1257 15 is_stmt 0 view .LVU1851
 5732 0426 7375     		strb	r3, [r6, #21]
1253:src/keys.c    **** 	int f = State2.dot;
 5733              		.loc 1 1253 20 view .LVU1852
 5734 0428 C2F3400A 		ubfx	r10, r2, #1, #1
 5735              	.LVL458:
1254:src/keys.c    **** 
 5736              		.loc 1 1254 2 is_stmt 1 view .LVU1853
1254:src/keys.c    **** 
 5737              		.loc 1 1254 16 is_stmt 0 view .LVU1854
 5738 042c C2F38019 		ubfx	r9, r2, #6, #1
 5739              	.LVL459:
1256:src/keys.c    **** 	State2.cmplx = 0;
 5740              		.loc 1 1256 2 is_stmt 1 view .LVU1855
1257:src/keys.c    **** 	State2.dot = 0;
 5741              		.loc 1 1257 2 view .LVU1856
1258:src/keys.c    **** #ifdef DM42
 5742              		.loc 1 1258 2 view .LVU1857
1260:src/keys.c    **** #endif
 5743              		.loc 1 1260 2 view .LVU1858
 5744              	.LBB739:
 5745              	.LBI739:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 5746              		.loc 1 102 13 view .LVU1859
 5747              	.LBE739:
 5748              	.LBE748:
 5749              	.LBE752:
 5750              	.LBE1201:
 5751              	.LBE1258:
ARM GAS  /tmp/ccOshYsA.s 			page 188


 103:src/keys.c    **** }
 5752              		.loc 1 103 2 view .LVU1860
 5753              	.LBB1259:
 5754              	.LBB1202:
 5755              	.LBB753:
 5756              	.LBB749:
 5757              	.LBB746:
 5758              	.LBB740:
 5759              	.LBI740:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 5760              		.loc 1 92 20 view .LVU1861
 5761              	.LBB741:
  93:src/keys.c    **** 	State2.shifts = shift;
 5762              		.loc 1 93 2 view .LVU1862
 5763              	.LBB742:
 5764              	.LBI742:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5765              		.loc 1 84 13 view .LVU1863
 5766              	.LBB743:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5767              		.loc 1 85 2 view .LVU1864
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5768              		.loc 1 85 18 is_stmt 0 view .LVU1865
 5769 0430 FFF7FEFF 		bl	shift_down
 5770              	.LVL460:
  86:src/keys.c    **** }
 5771              		.loc 1 86 2 is_stmt 1 view .LVU1866
 5772              	.LBE743:
 5773              	.LBE742:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5774              		.loc 1 94 2 view .LVU1867
 5775              	.LBE741:
 5776              	.LBE740:
 5777              	.LBE746:
1262:src/keys.c    **** 
 5778              		.loc 1 1262 2 is_stmt 0 view .LVU1868
 5779 0434 2A2C     		cmp	r4, #42
 5780              	.LBB747:
 5781              	.LBB745:
 5782              	.LBB744:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5783              		.loc 1 94 16 view .LVU1869
 5784 0436 86F810B0 		strb	fp, [r6, #16]
  95:src/keys.c    **** 	return r;
 5785              		.loc 1 95 2 is_stmt 1 view .LVU1870
  95:src/keys.c    **** 	return r;
 5786              		.loc 1 95 19 is_stmt 0 view .LVU1871
 5787 043a 86F80DB0 		strb	fp, [r6, #13]
  96:src/keys.c    **** }
 5788              		.loc 1 96 2 is_stmt 1 view .LVU1872
 5789              	.LVL461:
  96:src/keys.c    **** }
 5790              		.loc 1 96 2 is_stmt 0 view .LVU1873
 5791              	.LBE744:
 5792              	.LBE745:
 5793              	.LBE747:
1262:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 189


 5794              		.loc 1 1262 2 is_stmt 1 view .LVU1874
 5795 043e 00F2DF82 		bhi	.L612
 5796 0442 282C     		cmp	r4, #40
 5797 0444 00F2DB83 		bhi	.L613
 5798 0448 013C     		subs	r4, r4, #1
 5799              	.LVL462:
1262:src/keys.c    **** 
 5800              		.loc 1 1262 2 is_stmt 0 view .LVU1875
 5801 044a E3B2     		uxtb	r3, r4
 5802 044c 022B     		cmp	r3, #2
 5803 044e 00F2C280 		bhi	.L1065
1267:src/keys.c    **** 
 5804              		.loc 1 1267 3 is_stmt 1 view .LVU1876
1267:src/keys.c    **** 
 5805              		.loc 1 1267 54 is_stmt 0 view .LVU1877
 5806 0452 284A     		ldr	r2, .L1147+44
 5807 0454 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 5808 0456 02EB4404 		add	r4, r2, r4, lsl #1
 5809              	.LVL463:
1267:src/keys.c    **** 
 5810              		.loc 1 1267 27 view .LVU1878
 5811 045a BAF1000F 		cmp	r10, #0
1267:src/keys.c    **** 
 5812              		.loc 1 1267 54 view .LVU1879
 5813 045e 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1267:src/keys.c    **** 
 5814              		.loc 1 1267 27 view .LVU1880
 5815 0462 14BF     		ite	ne
 5816 0464 4FF4A062 		movne	r2, #1280
 5817 0468 4FF40072 		moveq	r2, #512
1267:src/keys.c    **** 
 5818              		.loc 1 1267 37 view .LVU1881
 5819 046c 4BEA020B 		orr	fp, fp, r2
 5820 0470 5846     		mov	r0, fp
 5821              	.LVL464:
 5822              	.L617:
1267:src/keys.c    **** 
 5823              		.loc 1 1267 37 view .LVU1882
 5824              	.LBE749:
 5825              	.LBE753:
 5826              	.LBE1202:
 5827              	.LBE1259:
3198:src/keys.c    **** 	NonProgrammable = 0;
 5828              		.loc 1 3198 7 is_stmt 1 view .LVU1883
3198:src/keys.c    **** 	NonProgrammable = 0;
 5829              		.loc 1 3198 10 is_stmt 0 view .LVU1884
 5830 0472 13F04003 		ands	r3, r3, #64
 5831 0476 00F0E883 		beq	.L1105
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 5832              		.loc 1 3199 2 is_stmt 1 view .LVU1885
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 5833              		.loc 1 3199 18 is_stmt 0 view .LVU1886
 5834 047a 1F4B     		ldr	r3, .L1147+48
 5835 047c 0022     		movs	r2, #0
 5836 047e 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 5837              		.loc 1 3200 2 is_stmt 1 view .LVU1887
ARM GAS  /tmp/ccOshYsA.s 			page 190


 5838              	.LVL465:
 5839              	.L830:
3213:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 5840              		.loc 1 3213 4 view .LVU1888
3213:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 5841              		.loc 1 3213 11 is_stmt 0 view .LVU1889
 5842 0480 1E4A     		ldr	r2, .L1147+52
3214:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
 5843              		.loc 1 3214 25 view .LVU1890
 5844 0482 1F4B     		ldr	r3, .L1147+56
3213:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 5845              		.loc 1 3213 11 view .LVU1891
 5846 0484 1060     		str	r0, [r2]
3214:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
 5847              		.loc 1 3214 4 is_stmt 1 view .LVU1892
3214:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
 5848              		.loc 1 3214 25 is_stmt 0 view .LVU1893
 5849 0486 0122     		movs	r2, #1
 5850 0488 1E4C     		ldr	r4, .L1147+60
 5851 048a 1A60     		str	r2, [r3]
3215:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 5852              		.loc 1 3215 4 is_stmt 1 view .LVU1894
 5853 048c FFF7FEFF 		bl	finish_display
 5854              	.LVL466:
3216:src/keys.c    **** 	}
 5855              		.loc 1 3216 4 view .LVU1895
 5856 0490 0CE6     		b	.L836
 5857              	.LVL467:
 5858              	.L800:
 5859              	.LBB1260:
 5860              	.LBB1203:
 5861              	.LBB754:
 5862              	.LBB724:
 785:src/keys.c    **** 	  }
 5863              		.loc 1 785 12 view .LVU1896
 791:src/keys.c    **** #ifdef DM42
 5864              		.loc 1 791 2 view .LVU1897
 5865 0492 2D2C     		cmp	r4, #45
 5866 0494 7CD8     		bhi	.L595
 5867 0496 DFE804F0 		tbb	[pc, r4]
 5868              	.L811:
 5869 049a D4       		.byte	(.L817-.L811)/2
 5870 049b C8       		.byte	(.L816-.L811)/2
 5871 049c 7B       		.byte	(.L595-.L811)/2
 5872 049d CE       		.byte	(.L815-.L811)/2
 5873 049e 7B       		.byte	(.L595-.L811)/2
 5874 049f 7B       		.byte	(.L595-.L811)/2
 5875 04a0 95       		.byte	(.L813-.L811)/2
 5876 04a1 95       		.byte	(.L813-.L811)/2
 5877 04a2 7B       		.byte	(.L595-.L811)/2
 5878 04a3 7B       		.byte	(.L595-.L811)/2
 5879 04a4 7B       		.byte	(.L595-.L811)/2
 5880 04a5 7B       		.byte	(.L595-.L811)/2
 5881 04a6 7B       		.byte	(.L595-.L811)/2
 5882 04a7 7B       		.byte	(.L595-.L811)/2
 5883 04a8 7B       		.byte	(.L595-.L811)/2
 5884 04a9 7B       		.byte	(.L595-.L811)/2
ARM GAS  /tmp/ccOshYsA.s 			page 191


 5885 04aa BE       		.byte	(.L814-.L811)/2
 5886 04ab 7B       		.byte	(.L595-.L811)/2
 5887 04ac 95       		.byte	(.L813-.L811)/2
 5888 04ad 7B       		.byte	(.L595-.L811)/2
 5889 04ae 7B       		.byte	(.L595-.L811)/2
 5890 04af 7B       		.byte	(.L595-.L811)/2
 5891 04b0 7B       		.byte	(.L595-.L811)/2
 5892 04b1 7B       		.byte	(.L595-.L811)/2
 5893 04b2 7B       		.byte	(.L595-.L811)/2
 5894 04b3 7B       		.byte	(.L595-.L811)/2
 5895 04b4 7B       		.byte	(.L595-.L811)/2
 5896 04b5 7B       		.byte	(.L595-.L811)/2
 5897 04b6 7B       		.byte	(.L595-.L811)/2
 5898 04b7 7B       		.byte	(.L595-.L811)/2
 5899 04b8 7B       		.byte	(.L595-.L811)/2
 5900 04b9 7B       		.byte	(.L595-.L811)/2
 5901 04ba 7B       		.byte	(.L595-.L811)/2
 5902 04bb 7B       		.byte	(.L595-.L811)/2
 5903 04bc 7B       		.byte	(.L595-.L811)/2
 5904 04bd 7B       		.byte	(.L595-.L811)/2
 5905 04be 7B       		.byte	(.L595-.L811)/2
 5906 04bf 7B       		.byte	(.L595-.L811)/2
 5907 04c0 7B       		.byte	(.L595-.L811)/2
 5908 04c1 7B       		.byte	(.L595-.L811)/2
 5909 04c2 7B       		.byte	(.L595-.L811)/2
 5910 04c3 7B       		.byte	(.L595-.L811)/2
 5911 04c4 7B       		.byte	(.L595-.L811)/2
 5912 04c5 7B       		.byte	(.L595-.L811)/2
 5913 04c6 A8       		.byte	(.L812-.L811)/2
 5914 04c7 A1       		.byte	(.L810-.L811)/2
 5915              		.p2align 1
 5916              	.L1148:
 5917              		.align	2
 5918              	.L1147:
 5919 04c8 00000000 		.word	StateWhileOn
 5920 04cc 00080800 		.word	526336
 5921 04d0 00000000 		.word	PersistentRam
 5922 04d4 00000000 		.word	.LANCHOR11
 5923 04d8 00000000 		.word	.LANCHOR18
 5924 04dc 00000000 		.word	.LANCHOR22
 5925 04e0 00000000 		.word	ShowRPN
 5926 04e4 00000000 		.word	WasDataEntry
 5927 04e8 00000000 		.word	Running
 5928 04ec 00000000 		.word	TraceBuffer
 5929 04f0 00000000 		.word	DispMsg
 5930 04f4 00000000 		.word	.LANCHOR13
 5931 04f8 00000000 		.word	NonProgrammable
 5932 04fc 00000000 		.word	OpCode
 5933 0500 00000000 		.word	OpCodeDisplayPending
 5934 0504 00000000 		.word	JustDisplayed
 5935              	.LVL468:
 5936              	.L669:
 791:src/keys.c    **** #ifdef DM42
 5937              		.loc 1 791 2 is_stmt 0 view .LVU1898
 5938              	.LBE724:
 5939              	.LBE754:
2923:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 192


 5940              		.loc 1 2923 3 is_stmt 1 view .LVU1899
 5941              	.LBB755:
 5942              	.LBI755:
2378:src/keys.c    **** 	enum shifts shift = reset_shift();
 5943              		.loc 1 2378 12 view .LVU1900
 5944              	.LBB756:
2379:src/keys.c    **** 	unsigned int ch = 0;
 5945              		.loc 1 2379 2 view .LVU1901
 5946              	.LBB757:
 5947              	.LBI757:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 5948              		.loc 1 102 13 view .LVU1902
 5949              	.LBE757:
 5950              	.LBE756:
 5951              	.LBE755:
 5952              	.LBE1203:
 5953              	.LBE1260:
 103:src/keys.c    **** }
 5954              		.loc 1 103 2 view .LVU1903
 5955              	.LBB1261:
 5956              	.LBB1204:
 5957              	.LBB788:
 5958              	.LBB783:
 5959              	.LBB764:
 5960              	.LBB758:
 5961              	.LBI758:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 5962              		.loc 1 92 20 view .LVU1904
 5963              	.LBB759:
  93:src/keys.c    **** 	State2.shifts = shift;
 5964              		.loc 1 93 2 view .LVU1905
 5965              	.LBB760:
 5966              	.LBI760:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5967              		.loc 1 84 13 view .LVU1906
 5968              	.LBB761:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5969              		.loc 1 85 2 view .LVU1907
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5970              		.loc 1 85 18 is_stmt 0 view .LVU1908
 5971 0508 FFF7FEFF 		bl	shift_down
 5972              	.LVL469:
  86:src/keys.c    **** }
 5973              		.loc 1 86 2 is_stmt 1 view .LVU1909
  86:src/keys.c    **** }
 5974              		.loc 1 86 52 is_stmt 0 view .LVU1910
 5975 050c 0146     		mov	r1, r0
 5976 050e 00B9     		cbnz	r0, .L667
 5977 0510 317C     		ldrb	r1, [r6, #16]	@ zero_extendqisi2
 5978              	.L667:
 5979              	.LVL470:
  86:src/keys.c    **** }
 5980              		.loc 1 86 52 view .LVU1911
 5981              	.LBE761:
 5982              	.LBE760:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5983              		.loc 1 94 2 is_stmt 1 view .LVU1912
ARM GAS  /tmp/ccOshYsA.s 			page 193


 5984              	.LBE759:
 5985              	.LBE758:
 5986              	.LBE764:
2383:src/keys.c    **** 		// Alpha catalogue from within multi character command
 5987              		.loc 1 2383 5 is_stmt 0 view .LVU1913
 5988 0512 B27B     		ldrb	r2, [r6, #14]	@ zero_extendqisi2
 5989              	.LBB765:
 5990              	.LBB763:
 5991              	.LBB762:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5992              		.loc 1 94 16 view .LVU1914
 5993 0514 0023     		movs	r3, #0
 5994 0516 3374     		strb	r3, [r6, #16]
  95:src/keys.c    **** 	return r;
 5995              		.loc 1 95 2 is_stmt 1 view .LVU1915
  95:src/keys.c    **** 	return r;
 5996              		.loc 1 95 19 is_stmt 0 view .LVU1916
 5997 0518 7373     		strb	r3, [r6, #13]
  96:src/keys.c    **** }
 5998              		.loc 1 96 2 is_stmt 1 view .LVU1917
 5999              	.LVL471:
  96:src/keys.c    **** }
 6000              		.loc 1 96 2 is_stmt 0 view .LVU1918
 6001              	.LBE762:
 6002              	.LBE763:
 6003              	.LBE765:
2380:src/keys.c    **** 	unsigned int opcode;
 6004              		.loc 1 2380 2 is_stmt 1 view .LVU1919
2381:src/keys.c    **** 
 6005              		.loc 1 2381 2 view .LVU1920
2383:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6006              		.loc 1 2383 2 view .LVU1921
2383:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6007              		.loc 1 2383 5 is_stmt 0 view .LVU1922
 6008 051a 002A     		cmp	r2, #0
 6009 051c 40F05687 		bne	.L1106
2392:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 6010              		.loc 1 2392 2 is_stmt 1 view .LVU1923
 6011 0520 102C     		cmp	r4, #16
 6012 0522 01F00681 		beq	.L672
 6013 0526 242C     		cmp	r4, #36
 6014 0528 01F0F380 		beq	.L673
 6015 052c 0C2C     		cmp	r4, #12
 6016 052e 01F0D780 		beq	.L1107
 6017              	.L674:
2425:src/keys.c    **** 	if (ch == 0)
 6018              		.loc 1 2425 2 view .LVU1924
 6019              	.LBB766:
 6020              	.LBB767:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 6021              		.loc 1 452 6 is_stmt 0 view .LVU1925
 6022 0532 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 6023              	.LVL472:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 6024              		.loc 1 452 6 view .LVU1926
 6025              	.LBE767:
 6026              	.LBI766:
ARM GAS  /tmp/ccOshYsA.s 			page 194


 402:src/keys.c    **** {
 6027              		.loc 1 402 12 is_stmt 1 view .LVU1927
 6028              	.LBB772:
 404:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6029              		.loc 1 404 2 view .LVU1928
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 6030              		.loc 1 452 2 view .LVU1929
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 6031              		.loc 1 452 5 is_stmt 0 view .LVU1930
 6032 0534 DA06     		lsls	r2, r3, #27
 6033 0536 03D5     		bpl	.L677
 453:src/keys.c    **** 			shift = SHIFT_LC_N;
 6034              		.loc 1 453 3 is_stmt 1 view .LVU1931
 453:src/keys.c    **** 			shift = SHIFT_LC_N;
 6035              		.loc 1 453 6 is_stmt 0 view .LVU1932
 6036 0538 0029     		cmp	r1, #0
 6037 053a 41F0F082 		bne	.L1108
 454:src/keys.c    **** 		else if (shift == SHIFT_G)
 6038              		.loc 1 454 10 view .LVU1933
 6039 053e 0421     		movs	r1, #4
 6040              	.LVL473:
 6041              	.L677:
 458:src/keys.c    **** }
 6042              		.loc 1 458 2 is_stmt 1 view .LVU1934
 6043              	.LBB768:
 6044              	.LBI768:
 124:src/keys.c    **** {
 6045              		.loc 1 124 12 view .LVU1935
 6046              	.LBB769:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6047              		.loc 1 126 2 view .LVU1936
 136:src/keys.c    **** }
 6048              		.loc 1 136 2 view .LVU1937
 136:src/keys.c    **** }
 6049              		.loc 1 136 23 is_stmt 0 view .LVU1938
 6050 0540 CA4B     		ldr	r3, .L1149
 6051              	.LBE769:
 6052              	.LBE768:
 458:src/keys.c    **** }
 6053              		.loc 1 458 49 view .LVU1939
 6054 0542 CB4A     		ldr	r2, .L1149+4
 6055              	.LBB771:
 6056              	.LBB770:
 136:src/keys.c    **** }
 6057              		.loc 1 136 23 view .LVU1940
 6058 0544 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 6059              	.LBE770:
 6060              	.LBE771:
 458:src/keys.c    **** }
 6061              		.loc 1 458 49 view .LVU1941
 6062 0546 0620     		movs	r0, #6
 6063 0548 00FB0323 		mla	r3, r0, r3, r2
 6064              	.LBE772:
 6065              	.LBE766:
2425:src/keys.c    **** 	if (ch == 0)
 6066              		.loc 1 2425 5 view .LVU1942
 6067 054c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
ARM GAS  /tmp/ccOshYsA.s 			page 195


 6068              	.LVL474:
2426:src/keys.c    **** 		return STATE_UNFINISHED;
 6069              		.loc 1 2426 2 is_stmt 1 view .LVU1943
2426:src/keys.c    **** 		return STATE_UNFINISHED;
 6070              		.loc 1 2426 5 is_stmt 0 view .LVU1944
 6071 054e 002B     		cmp	r3, #0
 6072 0550 41D0     		beq	.L1065
 6073              	.L671:
2429:src/keys.c    **** 		State2.digval = ch;
 6074              		.loc 1 2429 2 is_stmt 1 view .LVU1945
2429:src/keys.c    **** 		State2.digval = ch;
 6075              		.loc 1 2429 12 is_stmt 0 view .LVU1946
 6076 0552 F27A     		ldrb	r2, [r6, #11]	@ zero_extendqisi2
2429:src/keys.c    **** 		State2.digval = ch;
 6077              		.loc 1 2429 5 view .LVU1947
 6078 0554 002A     		cmp	r2, #0
 6079 0556 01F0F880 		beq	.L1109
2433:src/keys.c    **** 		State2.digval2 = ch;
 6080              		.loc 1 2433 9 is_stmt 1 view .LVU1948
2433:src/keys.c    **** 		State2.digval2 = ch;
 6081              		.loc 1 2433 12 is_stmt 0 view .LVU1949
 6082 055a 012A     		cmp	r2, #1
 6083 055c 01F01881 		beq	.L1110
2438:src/keys.c    **** 
 6084              		.loc 1 2438 2 is_stmt 1 view .LVU1950
 6085              	.LBB774:
 6086              	.LBI774:
2371:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 6087              		.loc 1 2371 13 view .LVU1951
 6088              	.LBB775:
2373:src/keys.c    **** 	if (! State2.alphas )
 6089              		.loc 1 2373 2 view .LVU1952
2373:src/keys.c    **** 	if (! State2.alphas )
 6090              		.loc 1 2373 15 is_stmt 0 view .LVU1953
 6091 0560 717D     		ldrb	r1, [r6, #21]	@ zero_extendqisi2
2374:src/keys.c    **** 		State2.alphashift = 0;
 6092              		.loc 1 2374 6 view .LVU1954
 6093 0562 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2373:src/keys.c    **** 	if (! State2.alphas )
 6094              		.loc 1 2373 15 view .LVU1955
 6095 0564 6FF3C301 		bfc	r1, #3, #1
 6096 0568 7175     		strb	r1, [r6, #21]
2374:src/keys.c    **** 		State2.alphashift = 0;
 6097              		.loc 1 2374 2 is_stmt 1 view .LVU1956
2374:src/keys.c    **** 		State2.alphashift = 0;
 6098              		.loc 1 2374 5 is_stmt 0 view .LVU1957
 6099 056a 12F00801 		ands	r1, r2, #8
2375:src/keys.c    **** }
 6100              		.loc 1 2375 3 is_stmt 1 view .LVU1958
2375:src/keys.c    **** }
 6101              		.loc 1 2375 21 is_stmt 0 view .LVU1959
 6102 056e 04BF     		itt	eq
 6103 0570 61F30412 		bfieq	r2, r1, #4, #1
 6104 0574 B275     		strbeq	r2, [r6, #22]
 6105              	.LVL475:
 6106              	.L676:
2375:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 196


 6107              		.loc 1 2375 21 view .LVU1960
 6108              	.LBE775:
 6109              	.LBE774:
2441:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6110              		.loc 1 2441 2 is_stmt 1 view .LVU1961
2443:src/keys.c    **** }
 6111              		.loc 1 2443 2 view .LVU1962
2441:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6112              		.loc 1 2441 21 is_stmt 0 view .LVU1963
 6113 0576 96F81FB0 		ldrb	fp, [r6, #31]	@ zero_extendqisi2
2442:src/keys.c    **** 	return opcode;
 6114              		.loc 1 2442 17 view .LVU1964
 6115 057a 3189     		ldrh	r1, [r6, #8]
2442:src/keys.c    **** 	return opcode;
 6116              		.loc 1 2442 34 view .LVU1965
 6117 057c B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
2441:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6118              		.loc 1 2441 29 view .LVU1966
 6119 057e 4FEA0B2B 		lsl	fp, fp, #8
2441:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6120              		.loc 1 2441 18 view .LVU1967
 6121 0582 0BF5704B 		add	fp, fp, #61440
2442:src/keys.c    **** 	return opcode;
 6122              		.loc 1 2442 9 view .LVU1968
 6123 0586 8B44     		add	fp, fp, r1
2442:src/keys.c    **** 	return opcode;
 6124              		.loc 1 2442 25 view .LVU1969
 6125 0588 0BEB024B 		add	fp, fp, r2, lsl #16
2441:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6126              		.loc 1 2441 9 view .LVU1970
 6127 058c 0BEB036B 		add	fp, fp, r3, lsl #24
 6128              	.LVL476:
 6129              	.L595:
2441:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6130              		.loc 1 2441 9 view .LVU1971
 6131              	.LBE783:
 6132              	.LBE788:
 6133              	.LBE1204:
 6134              	.LBE1261:
3162:src/keys.c    ****     case STATE_SST:
 6135              		.loc 1 3162 5 is_stmt 1 view .LVU1972
 6136 0590 ABF12B03 		sub	r3, fp, #43
 6137 0594 082B     		cmp	r3, #8
 6138 0596 00F2D880 		bhi	.L851
 6139 059a 01A2     		adr	r2, .L820
 6140 059c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6141              		.p2align 2
 6142              	.L820:
 6143 05a0 D5060000 		.word	.L825+1
 6144 05a4 D5060000 		.word	.L825+1
 6145 05a8 4B070000 		.word	.L851+1
 6146 05ac 1D070000 		.word	.L754+1
 6147 05b0 03070000 		.word	.L753+1
 6148 05b4 F1060000 		.word	.L750+1
 6149 05b8 11010000 		.word	.L575+1
 6150 05bc 1D010000 		.word	.L566+1
 6151 05c0 1D010000 		.word	.L566+1
ARM GAS  /tmp/ccOshYsA.s 			page 197


 6152              	.LVL477:
 6153              		.p2align 1
 6154              	.L813:
 6155              	.LBB1262:
 6156              	.LBB1205:
 6157              	.LBB789:
 6158              	.LBB725:
 853:src/keys.c    **** 		break;
 6159              		.loc 1 853 3 view .LVU1973
 6160              	.LBB722:
 6161              	.LBI722:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 6162              		.loc 1 520 13 view .LVU1974
 6163              	.LBB723:
 521:src/keys.c    **** 		return;
 6164              		.loc 1 521 2 view .LVU1975
 521:src/keys.c    **** 		return;
 6165              		.loc 1 521 6 is_stmt 0 view .LVU1976
 6166 05c4 FFF7FEFF 		bl	is_bad_cmdline
 6167              	.LVL478:
 521:src/keys.c    **** 		return;
 6168              		.loc 1 521 5 view .LVU1977
 6169 05c8 0446     		mov	r4, r0
 6170 05ca 20B9     		cbnz	r0, .L1065
 6171 05cc 5FFA8AF0 		uxtb	r0, r10
 6172 05d0 FFF7FEFF 		bl	init_arg.part.0
 6173              	.LVL479:
 6174              	.LBE723:
 6175              	.LBE722:
 6176              	.LBE725:
 6177              	.LBE789:
 6178              	.LBE1205:
 6179              	.LBE1262:
2977:src/keys.c    **** #ifdef DM42
 6180              		.loc 1 2977 7 view .LVU1978
 6181 05d4 A046     		mov	r8, r4
 6182              	.LVL480:
 6183              	.L1065:
 6184              	.LBB1263:
 6185              	.LBB1206:
 6186              	.LBB790:
 6187              	.LBB791:
2778:src/keys.c    **** }
 6188              		.loc 1 2778 2 is_stmt 1 view .LVU1979
2778:src/keys.c    **** }
 6189              		.loc 1 2778 9 is_stmt 0 view .LVU1980
 6190 05d6 4FF0330B 		mov	fp, #51
 6191 05da 9FE5     		b	.L566
 6192              	.LVL481:
 6193              	.L810:
2778:src/keys.c    **** }
 6194              		.loc 1 2778 9 view .LVU1981
 6195              	.LBE791:
 6196              	.LBE790:
 6197              	.LBB823:
 6198              	.LBB726:
 840:src/keys.c    **** 		break;
ARM GAS  /tmp/ccOshYsA.s 			page 198


 6199              		.loc 1 840 3 is_stmt 1 view .LVU1982
 840:src/keys.c    **** 		break;
 6200              		.loc 1 840 16 is_stmt 0 view .LVU1983
 6201 05dc 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
 6202 05de 43F00203 		orr	r3, r3, #2
 6203 05e2 7375     		strb	r3, [r6, #21]
 841:src/keys.c    **** 
 6204              		.loc 1 841 3 is_stmt 1 view .LVU1984
 859:src/keys.c    **** }
 6205              		.loc 1 859 9 is_stmt 0 view .LVU1985
 6206 05e4 4FF0330B 		mov	fp, #51
 841:src/keys.c    **** 
 6207              		.loc 1 841 3 view .LVU1986
 6208 05e8 98E5     		b	.L566
 6209              	.L812:
 822:src/keys.c    **** 			return STATE_UNFINISHED;
 6210              		.loc 1 822 3 is_stmt 1 view .LVU1987
 822:src/keys.c    **** 			return STATE_UNFINISHED;
 6211              		.loc 1 822 7 is_stmt 0 view .LVU1988
 6212 05ea FFF7FEFF 		bl	is_bad_cmdline
 6213              	.LVL482:
 822:src/keys.c    **** 			return STATE_UNFINISHED;
 6214              		.loc 1 822 6 view .LVU1989
 6215 05ee 0446     		mov	r4, r0
 6216 05f0 0028     		cmp	r0, #0
 6217 05f2 F0D1     		bne	.L1065
 824:src/keys.c    **** 		State2.arrow = 1;
 6218              		.loc 1 824 3 is_stmt 1 view .LVU1990
 6219 05f4 FFF7FEFF 		bl	process_cmdline_set_lift
 6220              	.LVL483:
 825:src/keys.c    **** #ifdef DM42
 6221              		.loc 1 825 3 view .LVU1991
 825:src/keys.c    **** #ifdef DM42
 6222              		.loc 1 825 16 is_stmt 0 view .LVU1992
 6223 05f8 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
 6224 05fa 43F00403 		orr	r3, r3, #4
 827:src/keys.c    **** 		display_current_menu ();
 6225              		.loc 1 827 3 view .LVU1993
 6226 05fe 0920     		movs	r0, #9
 825:src/keys.c    **** #ifdef DM42
 6227              		.loc 1 825 16 view .LVU1994
 6228 0600 7375     		strb	r3, [r6, #21]
 827:src/keys.c    **** 		display_current_menu ();
 6229              		.loc 1 827 3 is_stmt 1 view .LVU1995
 6230 0602 FFF7FEFF 		bl	set_menu
 6231              	.LVL484:
 828:src/keys.c    **** 		lcd_refresh ();
 6232              		.loc 1 828 3 view .LVU1996
 6233 0606 FFF7FEFF 		bl	display_current_menu
 6234              	.LVL485:
 829:src/keys.c    **** #else
 6235              		.loc 1 829 3 view .LVU1997
 6236 060a 9A4B     		ldr	r3, .L1149+8
 6237 060c 9847     		blx	r3
 6238              	.LVL486:
 833:src/keys.c    **** 
 6239              		.loc 1 833 3 view .LVU1998
ARM GAS  /tmp/ccOshYsA.s 			page 199


 6240              	.LBE726:
 6241              	.LBE823:
 6242              	.LBE1206:
 6243              	.LBE1263:
2977:src/keys.c    **** #ifdef DM42
 6244              		.loc 1 2977 7 is_stmt 0 view .LVU1999
 6245 060e A046     		mov	r8, r4
 6246              	.LBB1264:
 6247              	.LBB1207:
 6248              	.LBB824:
 6249              	.LBB727:
 859:src/keys.c    **** }
 6250              		.loc 1 859 9 view .LVU2000
 6251 0610 4FF0330B 		mov	fp, #51
 833:src/keys.c    **** 
 6252              		.loc 1 833 3 view .LVU2001
 6253 0614 82E5     		b	.L566
 6254              	.L814:
 844:src/keys.c    **** 			return STATE_UNFINISHED;
 6255              		.loc 1 844 3 is_stmt 1 view .LVU2002
 844:src/keys.c    **** 			return STATE_UNFINISHED;
 6256              		.loc 1 844 6 is_stmt 0 view .LVU2003
 6257 0616 8A06     		lsls	r2, r1, #26
 6258 0618 DDD4     		bmi	.L1065
 846:src/keys.c    **** 			return op;
 6259              		.loc 1 846 3 is_stmt 1 view .LVU2004
 846:src/keys.c    **** 			return op;
 6260              		.loc 1 846 6 is_stmt 0 view .LVU2005
 6261 061a 5B06     		lsls	r3, r3, #25
 6262 061c 00F1A980 		bmi	.L818
 6263              	.LVL487:
 6264              	.L826:
 846:src/keys.c    **** 			return op;
 6265              		.loc 1 846 6 view .LVU2006
 6266              	.LBE727:
 6267              	.LBE824:
 6268              	.LBE1207:
 6269              	.LBE1264:
3175:src/keys.c    ****       else if (State2.alphas) {
 6270              		.loc 1 3175 2 is_stmt 1 view .LVU2007
 6271 0620 FFF7FEFF 		bl	delprog
 6272              	.LVL488:
 6273 0624 4FF0300B 		mov	fp, #48
 6274 0628 78E5     		b	.L566
 6275              	.LVL489:
 6276              	.L816:
 6277              	.LBB1265:
 6278              	.LBB1208:
 6279              	.LBB825:
 6280              	.LBB728:
 796:src/keys.c    **** 	case K03:
 6281              		.loc 1 796 3 view .LVU2008
 796:src/keys.c    **** 	case K03:
 6282              		.loc 1 796 10 is_stmt 0 view .LVU2009
 6283 062a 5146     		mov	r1, r10
 6284 062c 0120     		movs	r0, #1
 6285 062e FFF7FEFF 		bl	check_f_key
ARM GAS  /tmp/ccOshYsA.s 			page 200


 6286              	.LVL490:
 6287 0632 8346     		mov	fp, r0
 6288 0634 ACE7     		b	.L595
 6289              	.L815:
 798:src/keys.c    **** #else
 6290              		.loc 1 798 3 is_stmt 1 view .LVU2010
 798:src/keys.c    **** #else
 6291              		.loc 1 798 10 is_stmt 0 view .LVU2011
 6292 0636 5146     		mov	r1, r10
 6293 0638 0220     		movs	r0, #2
 6294 063a FFF7FEFF 		bl	check_f_key
 6295              	.LVL491:
 6296 063e 8346     		mov	fp, r0
 6297 0640 A6E7     		b	.L595
 6298              	.L817:
 794:src/keys.c    **** 	case K01:
 6299              		.loc 1 794 3 is_stmt 1 view .LVU2012
 794:src/keys.c    **** 	case K01:
 6300              		.loc 1 794 10 is_stmt 0 view .LVU2013
 6301 0642 5146     		mov	r1, r10
 6302 0644 0020     		movs	r0, #0
 6303 0646 FFF7FEFF 		bl	check_f_key
 6304              	.LVL492:
 6305 064a 8346     		mov	fp, r0
 6306 064c A0E7     		b	.L595
 6307              	.L801:
 778:src/keys.c    **** 	    if (intltr(15)) {
 6308              		.loc 1 778 6 is_stmt 1 view .LVU2014
 6309              	.LVL493:
 779:src/keys.c    **** 	      return op_int;
 6310              		.loc 1 779 6 view .LVU2015
 779:src/keys.c    **** 	      return op_int;
 6311              		.loc 1 779 10 is_stmt 0 view .LVU2016
 6312 064e 0F20     		movs	r0, #15
 6313 0650 FFF7FEFF 		bl	intltr
 6314              	.LVL494:
 779:src/keys.c    **** 	      return op_int;
 6315              		.loc 1 779 9 view .LVU2017
 6316 0654 0028     		cmp	r0, #0
 6317 0656 41F01F81 		bne	.L809
 783:src/keys.c    **** 	    }
 6318              		.loc 1 783 8 is_stmt 1 view .LVU2018
 783:src/keys.c    **** 	    }
 6319              		.loc 1 783 15 is_stmt 0 view .LVU2019
 6320 065a 5146     		mov	r1, r10
 6321 065c 0520     		movs	r0, #5
 6322 065e FFF7FEFF 		bl	check_f_key
 6323              	.LVL495:
 6324 0662 8346     		mov	fp, r0
 6325 0664 94E7     		b	.L595
 6326              	.LVL496:
 6327              	.L803:
 770:src/keys.c    **** 	    if (intltr(12)) {
 6328              		.loc 1 770 6 is_stmt 1 view .LVU2020
 771:src/keys.c    **** 	      return op_int;
 6329              		.loc 1 771 6 view .LVU2021
 771:src/keys.c    **** 	      return op_int;
ARM GAS  /tmp/ccOshYsA.s 			page 201


 6330              		.loc 1 771 10 is_stmt 0 view .LVU2022
 6331 0666 0C20     		movs	r0, #12
 6332 0668 FFF7FEFF 		bl	intltr
 6333              	.LVL497:
 771:src/keys.c    **** 	      return op_int;
 6334              		.loc 1 771 9 view .LVU2023
 6335 066c 0028     		cmp	r0, #0
 6336 066e E2D0     		beq	.L815
 6337              	.LVL498:
 771:src/keys.c    **** 	      return op_int;
 6338              		.loc 1 771 9 view .LVU2024
 6339              	.LBE728:
 6340              	.LBE825:
 6341              	.LBE1208:
 6342              	.LBE1265:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6343              		.loc 1 3198 7 is_stmt 1 view .LVU2025
3198:src/keys.c    **** 	NonProgrammable = 0;
 6344              		.loc 1 3198 11 is_stmt 0 view .LVU2026
 6345 0670 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 6346              		.loc 1 3198 10 view .LVU2027
 6347 0672 5806     		lsls	r0, r3, #25
 6348 0674 41F15882 		bpl	.L883
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6349              		.loc 1 3199 2 is_stmt 1 view .LVU2028
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6350              		.loc 1 3199 18 is_stmt 0 view .LVU2029
 6351 0678 7F4B     		ldr	r3, .L1149+12
 6352 067a 0022     		movs	r2, #0
 6353              	.LBB1266:
 6354              	.LBB1209:
 6355              	.LBB826:
 6356              	.LBB729:
 772:src/keys.c    **** 	    }
 6357              		.loc 1 772 15 view .LVU2030
 6358 067c 4FF0110B 		mov	fp, #17
 6359              	.LBE729:
 6360              	.LBE826:
 6361              	.LBE1209:
 6362              	.LBE1266:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6363              		.loc 1 3199 18 view .LVU2031
 6364 0680 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6365              		.loc 1 3200 2 is_stmt 1 view .LVU2032
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6366              		.loc 1 3200 32 is_stmt 0 view .LVU2033
 6367 0682 5846     		mov	r0, fp
 6368              	.LVL499:
 6369              	.L832:
3204:src/keys.c    **** #endif
 6370              		.loc 1 3204 6 is_stmt 1 view .LVU2034
3206:src/keys.c    **** 	    xeq(c);
 6371              		.loc 1 3206 37 is_stmt 0 view .LVU2035
 6372 0684 96F81C80 		ldrb	r8, [r6, #28]	@ zero_extendqisi2
3204:src/keys.c    **** #endif
ARM GAS  /tmp/ccOshYsA.s 			page 202


 6373              		.loc 1 3204 19 view .LVU2036
 6374 0688 0123     		movs	r3, #1
 6375 068a C9F80030 		str	r3, [r9]
3206:src/keys.c    **** 	    xeq(c);
 6376              		.loc 1 3206 6 is_stmt 1 view .LVU2037
3206:src/keys.c    **** 	    xeq(c);
 6377              		.loc 1 3206 37 is_stmt 0 view .LVU2038
 6378 068e B8FA88F8 		clz	r8, r8
3207:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6379              		.loc 1 3207 6 view .LVU2039
 6380 0692 FFF7FEFF 		bl	xeq
 6381              	.LVL500:
3208:src/keys.c    **** 	  }
 6382              		.loc 1 3208 38 view .LVU2040
 6383 0696 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
3206:src/keys.c    **** 	    xeq(c);
 6384              		.loc 1 3206 37 view .LVU2041
 6385 0698 4FEA5818 		lsr	r8, r8, #5
 6386              	.LVL501:
3207:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6387              		.loc 1 3207 6 is_stmt 1 view .LVU2042
3208:src/keys.c    **** 	  }
 6388              		.loc 1 3208 6 view .LVU2043
3208:src/keys.c    **** 	  }
 6389              		.loc 1 3208 20 is_stmt 0 view .LVU2044
 6390 069c 002B     		cmp	r3, #0
 6391 069e 08BF     		it	eq
 6392 06a0 4FF00108 		moveq	r8, #1
 6393              	.LVL502:
3208:src/keys.c    **** 	  }
 6394              		.loc 1 3208 20 view .LVU2045
 6395 06a4 3AE5     		b	.L566
 6396              	.LVL503:
 6397              	.L804:
 6398              	.LBB1267:
 6399              	.LBB1210:
 6400              	.LBB827:
 6401              	.LBB730:
 762:src/keys.c    **** 	    if (intltr(11)) {
 6402              		.loc 1 762 6 is_stmt 1 view .LVU2046
 763:src/keys.c    **** 	      return op;
 6403              		.loc 1 763 6 view .LVU2047
 763:src/keys.c    **** 	      return op;
 6404              		.loc 1 763 10 is_stmt 0 view .LVU2048
 6405 06a6 0B20     		movs	r0, #11
 6406 06a8 FFF7FEFF 		bl	intltr
 6407              	.LVL504:
 763:src/keys.c    **** 	      return op;
 6408              		.loc 1 763 9 view .LVU2049
 6409 06ac 0028     		cmp	r0, #0
 6410 06ae 41F07680 		bne	.L807
 767:src/keys.c    **** 	    }
 6411              		.loc 1 767 8 is_stmt 1 view .LVU2050
 767:src/keys.c    **** 	    }
 6412              		.loc 1 767 15 is_stmt 0 view .LVU2051
 6413 06b2 1021     		movs	r1, #16
 6414 06b4 0120     		movs	r0, #1
ARM GAS  /tmp/ccOshYsA.s 			page 203


 6415 06b6 FFF7FEFF 		bl	check_f_key
 6416              	.LVL505:
 6417 06ba 8346     		mov	fp, r0
 6418 06bc 68E7     		b	.L595
 6419              	.LVL506:
 6420              	.L805:
 754:src/keys.c    **** 	    if (intltr(10)) {
 6421              		.loc 1 754 6 is_stmt 1 view .LVU2052
 755:src/keys.c    **** 	      return op;
 6422              		.loc 1 755 6 view .LVU2053
 755:src/keys.c    **** 	      return op;
 6423              		.loc 1 755 10 is_stmt 0 view .LVU2054
 6424 06be 0A20     		movs	r0, #10
 6425 06c0 FFF7FEFF 		bl	intltr
 6426              	.LVL507:
 755:src/keys.c    **** 	      return op;
 6427              		.loc 1 755 9 view .LVU2055
 6428 06c4 0028     		cmp	r0, #0
 6429 06c6 41F0DB80 		bne	.L806
 759:src/keys.c    **** 	    }
 6430              		.loc 1 759 8 is_stmt 1 view .LVU2056
 759:src/keys.c    **** 	    }
 6431              		.loc 1 759 15 is_stmt 0 view .LVU2057
 6432 06ca 0F21     		movs	r1, #15
 6433 06cc FFF7FEFF 		bl	check_f_key
 6434              	.LVL508:
 6435 06d0 8346     		mov	fp, r0
 6436 06d2 5DE7     		b	.L595
 6437              	.LVL509:
 6438              	.L825:
 759:src/keys.c    **** 	    }
 6439              		.loc 1 759 15 view .LVU2058
 6440              	.LBE730:
 6441              	.LBE827:
 6442              	.LBE1210:
 6443              	.LBE1267:
3189:src/keys.c    **** 	set_window(c);
 6444              		.loc 1 3189 7 is_stmt 1 view .LVU2059
3189:src/keys.c    **** 	set_window(c);
 6445              		.loc 1 3189 12 is_stmt 0 view .LVU2060
 6446 06d4 FFF7FEFF 		bl	is_bad_cmdline
 6447              	.LVL510:
3189:src/keys.c    **** 	set_window(c);
 6448              		.loc 1 3189 10 view .LVU2061
 6449 06d8 0346     		mov	r3, r0
 6450 06da 0028     		cmp	r0, #0
 6451 06dc 7FF41EAD 		bne	.L566
3190:src/keys.c    ****       break;
 6452              		.loc 1 3190 2 is_stmt 1 view .LVU2062
 6453 06e0 5846     		mov	r0, fp
2977:src/keys.c    **** #ifdef DM42
 6454              		.loc 1 2977 7 is_stmt 0 view .LVU2063
 6455 06e2 9846     		mov	r8, r3
3190:src/keys.c    ****       break;
 6456              		.loc 1 3190 2 view .LVU2064
 6457 06e4 FFF7FEFF 		bl	set_window
 6458              	.LVL511:
ARM GAS  /tmp/ccOshYsA.s 			page 204


 6459 06e8 18E5     		b	.L566
 6460              	.LVL512:
 6461              	.L744:
 6462              	.LBB1268:
 6463              	.LBB1211:
 6464              	.LBB828:
 6465              	.LBB829:
1452:src/keys.c    **** 			return STATE_BACKSPACE;
 6466              		.loc 1 1452 3 is_stmt 1 view .LVU2065
1452:src/keys.c    **** 			return STATE_BACKSPACE;
 6467              		.loc 1 1452 6 is_stmt 0 view .LVU2066
 6468 06ea 0028     		cmp	r0, #0
 6469 06ec 41F06281 		bne	.L751
 6470              	.LVL513:
 6471              	.L750:
1452:src/keys.c    **** 			return STATE_BACKSPACE;
 6472              		.loc 1 1452 6 view .LVU2067
 6473              	.LBE829:
 6474              	.LBE828:
 6475              	.LBE1211:
 6476              	.LBE1268:
3174:src/keys.c    **** 	delprog();
 6477              		.loc 1 3174 7 is_stmt 1 view .LVU2068
3174:src/keys.c    **** 	delprog();
 6478              		.loc 1 3174 11 is_stmt 0 view .LVU2069
 6479 06f0 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3174:src/keys.c    **** 	delprog();
 6480              		.loc 1 3174 10 view .LVU2070
 6481 06f2 5C06     		lsls	r4, r3, #25
 6482 06f4 94D5     		bpl	.L826
3176:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6483              		.loc 1 3176 12 is_stmt 1 view .LVU2071
3176:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6484              		.loc 1 3176 15 is_stmt 0 view .LVU2072
 6485 06f6 1807     		lsls	r0, r3, #28
 6486 06f8 00F10581 		bmi	.L827
 6487              	.L1059:
 6488              	.LBB1269:
3179:src/keys.c    ****       }
 6489              		.loc 1 3179 9 view .LVU2073
 6490 06fc 4FF0300B 		mov	fp, #48
 6491 0700 0CE5     		b	.L566
 6492              	.L753:
 6493              	.LBE1269:
3170:src/keys.c    ****       break;
 6494              		.loc 1 3170 7 is_stmt 1 view .LVU2074
 6495 0702 4FF0FF30 		mov	r0, #-1
 6496 0706 FFF7FEFF 		bl	xeq_sst_bst
 6497              	.LVL514:
3171:src/keys.c    **** 
 6498              		.loc 1 3171 7 view .LVU2075
 6499 070a 4FF02F0B 		mov	fp, #47
 6500 070e 05E5     		b	.L566
 6501              	.LVL515:
 6502              	.L742:
 6503              	.LBB1270:
 6504              	.LBB1212:
ARM GAS  /tmp/ccOshYsA.s 			page 205


 6505              	.LBB886:
 6506              	.LBB872:
1471:src/keys.c    **** 			if ( State2.runmode ) {
 6507              		.loc 1 1471 3 view .LVU2076
1471:src/keys.c    **** 			if ( State2.runmode ) {
 6508              		.loc 1 1471 6 is_stmt 0 view .LVU2077
 6509 0710 0028     		cmp	r0, #0
 6510 0712 40F04985 		bne	.L738
1472:src/keys.c    **** 				// Alpha scroll right
 6511              		.loc 1 1472 4 is_stmt 1 view .LVU2078
1472:src/keys.c    **** 				// Alpha scroll right
 6512              		.loc 1 1472 7 is_stmt 0 view .LVU2079
 6513 0716 5E06     		lsls	r6, r3, #25
 6514 0718 3FF55DAF 		bmi	.L1065
 6515              	.LVL516:
 6516              	.L754:
1472:src/keys.c    **** 				// Alpha scroll right
 6517              		.loc 1 1472 7 view .LVU2080
 6518              	.LBE872:
 6519              	.LBE886:
 6520              	.LBE1212:
 6521              	.LBE1270:
3164:src/keys.c    ****       OpCodeDisplayPending = 0;
 6522              		.loc 1 3164 7 is_stmt 1 view .LVU2081
3164:src/keys.c    ****       OpCodeDisplayPending = 0;
 6523              		.loc 1 3164 14 is_stmt 0 view .LVU2082
 6524 071c 5749     		ldr	r1, .L1149+16
3165:src/keys.c    ****       xeq_sst_bst(0);
 6525              		.loc 1 3165 28 view .LVU2083
 6526 071e 584A     		ldr	r2, .L1149+20
3164:src/keys.c    ****       OpCodeDisplayPending = 0;
 6527              		.loc 1 3164 14 view .LVU2084
 6528 0720 2E23     		movs	r3, #46
3165:src/keys.c    ****       xeq_sst_bst(0);
 6529              		.loc 1 3165 28 view .LVU2085
 6530 0722 0020     		movs	r0, #0
3164:src/keys.c    ****       OpCodeDisplayPending = 0;
 6531              		.loc 1 3164 14 view .LVU2086
 6532 0724 0B60     		str	r3, [r1]
3165:src/keys.c    ****       xeq_sst_bst(0);
 6533              		.loc 1 3165 7 is_stmt 1 view .LVU2087
3167:src/keys.c    **** 
 6534              		.loc 1 3167 7 is_stmt 0 view .LVU2088
 6535 0726 9B46     		mov	fp, r3
3165:src/keys.c    ****       xeq_sst_bst(0);
 6536              		.loc 1 3165 28 view .LVU2089
 6537 0728 1060     		str	r0, [r2]
3166:src/keys.c    ****       break;
 6538              		.loc 1 3166 7 is_stmt 1 view .LVU2090
 6539 072a FFF7FEFF 		bl	xeq_sst_bst
 6540              	.LVL517:
3167:src/keys.c    **** 
 6541              		.loc 1 3167 7 view .LVU2091
 6542 072e F5E4     		b	.L566
 6543              	.LVL518:
 6544              	.L769:
 6545              	.LBB1271:
ARM GAS  /tmp/ccOshYsA.s 			page 206


 6546              	.LBB1213:
 6547              	.LBB887:
 6548              	.LBB888:
1004:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 6549              		.loc 1 1004 3 view .LVU2092
1004:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 6550              		.loc 1 1004 6 is_stmt 0 view .LVU2093
 6551 0730 BBF59C7F 		cmp	fp, #312
 6552 0734 41F08E81 		bne	.L1111
1015:src/keys.c    **** 		return STATE_UNFINISHED;
 6553              		.loc 1 1015 2 is_stmt 1 view .LVU2094
1015:src/keys.c    **** 		return STATE_UNFINISHED;
 6554              		.loc 1 1015 5 is_stmt 0 view .LVU2095
 6555 0738 BAF5704F 		cmp	r10, #61440
 6556 073c 05D1     		bne	.L851
1015:src/keys.c    **** 		return STATE_UNFINISHED;
 6557              		.loc 1 1015 13 view .LVU2096
 6558 073e 514B     		ldr	r3, .L1149+24
 6559 0740 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 6560 0744 DB07     		lsls	r3, r3, #31
 6561 0746 3FF546AF 		bmi	.L1065
 6562              	.LVL519:
 6563              	.L851:
1015:src/keys.c    **** 		return STATE_UNFINISHED;
 6564              		.loc 1 1015 13 view .LVU2097
 6565              	.LBE888:
 6566              	.LBE887:
 6567              	.LBE1213:
 6568              	.LBE1271:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6569              		.loc 1 3198 7 is_stmt 1 view .LVU2098
3198:src/keys.c    **** 	NonProgrammable = 0;
 6570              		.loc 1 3198 11 is_stmt 0 view .LVU2099
 6571 074a B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 6572              		.loc 1 3198 10 view .LVU2100
 6573 074c 5C06     		lsls	r4, r3, #25
 6574 074e 43D5     		bpl	.L833
 6575 0750 494A     		ldr	r2, .L1149+12
 6576 0752 5846     		mov	r0, fp
 6577              	.LVL520:
 6578              	.L834:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6579              		.loc 1 3199 2 is_stmt 1 view .LVU2101
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6580              		.loc 1 3199 18 is_stmt 0 view .LVU2102
 6581 0754 0023     		movs	r3, #0
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6582              		.loc 1 3200 5 view .LVU2103
 6583 0756 1428     		cmp	r0, #20
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6584              		.loc 1 3199 18 view .LVU2104
 6585 0758 1360     		str	r3, [r2]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6586              		.loc 1 3200 2 is_stmt 1 view .LVU2105
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6587              		.loc 1 3200 5 is_stmt 0 view .LVU2106
ARM GAS  /tmp/ccOshYsA.s 			page 207


 6588 075a 3FF691AE 		bhi	.L830
3201:src/keys.c    **** 	    // Data entry key
 6589              		.loc 1 3201 4 is_stmt 1 view .LVU2107
3201:src/keys.c    **** 	    // Data entry key
 6590              		.loc 1 3201 7 is_stmt 0 view .LVU2108
 6591 075e BBF1000F 		cmp	fp, #0
 6592 0762 8FD1     		bne	.L832
3201:src/keys.c    **** 	    // Data entry key
 6593              		.loc 1 3201 38 discriminator 1 view .LVU2109
 6594 0764 FFF7FEFF 		bl	is_bad_cmdline
 6595              	.LVL521:
3201:src/keys.c    **** 	    // Data entry key
 6596              		.loc 1 3201 34 discriminator 1 view .LVU2110
 6597 0768 0028     		cmp	r0, #0
 6598 076a 40F04681 		bne	.L888
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6599              		.loc 1 3200 32 view .LVU2111
 6600 076e 5846     		mov	r0, fp
 6601 0770 88E7     		b	.L832
 6602              	.LVL522:
 6603              	.L818:
3162:src/keys.c    ****     case STATE_SST:
 6604              		.loc 1 3162 5 is_stmt 1 view .LVU2112
 6605 0772 AAF12B03 		sub	r3, r10, #43
 6606 0776 082B     		cmp	r3, #8
 6607 0778 14D8     		bhi	.L846
 6608 077a 01A2     		adr	r2, .L847
 6609 077c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6610              		.p2align 2
 6611              	.L847:
 6612 0780 D5060000 		.word	.L825+1
 6613 0784 D5060000 		.word	.L825+1
 6614 0788 A5070000 		.word	.L846+1
 6615 078c 1D070000 		.word	.L754+1
 6616 0790 03070000 		.word	.L753+1
 6617 0794 F1060000 		.word	.L750+1
 6618 0798 11010000 		.word	.L575+1
 6619 079c 1D010000 		.word	.L566+1
 6620 07a0 1D010000 		.word	.L566+1
 6621              		.p2align 1
 6622              	.L846:
 6623 07a4 344A     		ldr	r2, .L1149+12
 6624 07a6 5046     		mov	r0, r10
 6625 07a8 D4E7     		b	.L834
 6626              	.LVL523:
 6627              	.L1083:
 6628              	.LBB1272:
 6629              	.LBB1214:
2854:src/keys.c    **** #else	
 6630              		.loc 1 2854 26 is_stmt 0 view .LVU2113
 6631 07aa FFF7FEFF 		bl	keyticks
 6632              	.LVL524:
2854:src/keys.c    **** #else	
 6633              		.loc 1 2854 23 view .LVU2114
 6634 07ae 1E28     		cmp	r0, #30
2858:src/keys.c    **** 	// print_debug (1, c);
 6635              		.loc 1 2858 3 is_stmt 1 view .LVU2115
ARM GAS  /tmp/ccOshYsA.s 			page 208


2858:src/keys.c    **** 	// print_debug (1, c);
 6636              		.loc 1 2858 17 is_stmt 0 view .LVU2116
 6637 07b0 C4BF     		itt	gt
 6638 07b2 0023     		movgt	r3, #0
 6639 07b4 3377     		strbgt	r3, [r6, #28]
 6640 07b6 72E5     		b	.L582
 6641              	.LVL525:
 6642              	.L544:
2858:src/keys.c    **** 	// print_debug (1, c);
 6643              		.loc 1 2858 17 view .LVU2117
 6644              	.LBE1214:
 6645              	.LBE1272:
3028:src/keys.c    **** #else
 6646              		.loc 1 3028 10 is_stmt 1 view .LVU2118
3028:src/keys.c    **** #else
 6647              		.loc 1 3028 14 is_stmt 0 view .LVU2119
 6648 07b8 FFF7FEFF 		bl	keyticks
 6649              	.LVL526:
3028:src/keys.c    **** #else
 6650              		.loc 1 3028 13 view .LVU2120
 6651 07bc 0C28     		cmp	r0, #12
 6652 07be 7FF7F9AC 		ble	.L543
3036:src/keys.c    **** 	  message("NULL", CNULL);
 6653              		.loc 1 3036 4 is_stmt 1 view .LVU2121
3037:src/keys.c    **** 	  // Force display update on key-up
 6654              		.loc 1 3037 4 is_stmt 0 view .LVU2122
 6655 07c2 3148     		ldr	r0, .L1149+28
3036:src/keys.c    **** 	  message("NULL", CNULL);
 6656              		.loc 1 3036 11 view .LVU2123
 6657 07c4 3760     		str	r7, [r6]
3037:src/keys.c    **** 	  // Force display update on key-up
 6658              		.loc 1 3037 4 is_stmt 1 view .LVU2124
 6659 07c6 3946     		mov	r1, r7
 6660 07c8 FFF7FEFF 		bl	message
 6661              	.LVL527:
3039:src/keys.c    **** 	}
 6662              		.loc 1 3039 4 view .LVU2125
3039:src/keys.c    **** 	}
 6663              		.loc 1 3039 21 is_stmt 0 view .LVU2126
 6664 07cc 2F4B     		ldr	r3, .L1149+32
 6665 07ce DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 6666 07d0 67F34512 		bfi	r2, r7, #5, #1
 6667 07d4 DA75     		strb	r2, [r3, #23]
 6668 07d6 EDE4     		b	.L543
 6669              	.LVL528:
 6670              	.L833:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6671              		.loc 1 3198 26 view .LVU2127
 6672 07d8 274A     		ldr	r2, .L1149+12
 6673 07da 1368     		ldr	r3, [r2]
 6674 07dc 5846     		mov	r0, fp
 6675 07de 002B     		cmp	r3, #0
 6676 07e0 B8D1     		bne	.L834
 6677              	.LVL529:
 6678              	.L835:
3220:src/keys.c    ****       }
 6679              		.loc 1 3220 2 is_stmt 1 view .LVU2128
ARM GAS  /tmp/ccOshYsA.s 			page 209


 6680 07e2 FFF7FEFF 		bl	stoprog
 6681              	.LVL530:
 6682 07e6 99E4     		b	.L566
 6683              	.LVL531:
 6684              	.L568:
3140:src/keys.c    **** 	}
 6685              		.loc 1 3140 4 view .LVU2129
 6686              		.loc 1 3243 1 is_stmt 0 view .LVU2130
 6687 07e8 03B0     		add	sp, sp, #12
 6688              		.cfi_remember_state
 6689              		.cfi_def_cfa_offset 36
 6690              		@ sp needed
 6691 07ea BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6692              		.cfi_restore 14
 6693              		.cfi_restore 11
 6694              		.cfi_restore 10
 6695              		.cfi_restore 9
 6696              		.cfi_restore 8
 6697              		.cfi_restore 7
 6698              		.cfi_restore 6
 6699              		.cfi_restore 5
 6700              		.cfi_restore 4
 6701              		.cfi_def_cfa_offset 0
3140:src/keys.c    **** 	}
 6702              		.loc 1 3140 4 view .LVU2131
 6703 07ee FFF7FEBF 		b	finish_display
 6704              	.LVL532:
 6705              	.L1084:
 6706              		.cfi_restore_state
 6707              	.LBB1273:
 6708              	.LBB1215:
2865:src/keys.c    **** 
 6709              		.loc 1 2865 3 is_stmt 1 view .LVU2132
 6710              	.LBB932:
 6711              	.LBI932:
2449:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6712              		.loc 1 2449 12 view .LVU2133
 6713              	.LBB933:
2451:src/keys.c    **** #ifdef DM42
 6714              		.loc 1 2451 2 view .LVU2134
 6715 07f2 E4B2     		uxtb	r4, r4
 6716              	.LVL533:
2451:src/keys.c    **** #ifdef DM42
 6717              		.loc 1 2451 2 is_stmt 0 view .LVU2135
 6718 07f4 0E3C     		subs	r4, r4, #14
 6719 07f6 192C     		cmp	r4, #25
 6720 07f8 3FF6EDAE 		bhi	.L1065
 6721 07fc 01A3     		adr	r3, .L587
 6722 07fe 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 6723 0802 00BF     		.p2align 2
 6724              	.L587:
 6725 0804 95080000 		.word	.L588+1
 6726 0808 D7050000 		.word	.L1065+1
 6727 080c 95080000 		.word	.L588+1
 6728 0810 D7050000 		.word	.L1065+1
 6729 0814 D7050000 		.word	.L1065+1
 6730 0818 D7050000 		.word	.L1065+1
ARM GAS  /tmp/ccOshYsA.s 			page 210


 6731 081c D7050000 		.word	.L1065+1
 6732 0820 D7050000 		.word	.L1065+1
 6733 0824 D7050000 		.word	.L1065+1
 6734 0828 D7050000 		.word	.L1065+1
 6735 082c D7050000 		.word	.L1065+1
 6736 0830 D7050000 		.word	.L1065+1
 6737 0834 D7050000 		.word	.L1065+1
 6738 0838 D7050000 		.word	.L1065+1
 6739 083c D7050000 		.word	.L1065+1
 6740 0840 D7050000 		.word	.L1065+1
 6741 0844 D7050000 		.word	.L1065+1
 6742 0848 D7050000 		.word	.L1065+1
 6743 084c A7080000 		.word	.L586+1
 6744 0850 D7050000 		.word	.L1065+1
 6745 0854 D7050000 		.word	.L1065+1
 6746 0858 D7050000 		.word	.L1065+1
 6747 085c D7050000 		.word	.L1065+1
 6748 0860 D7050000 		.word	.L1065+1
 6749 0864 D7050000 		.word	.L1065+1
 6750 0868 A7080000 		.word	.L586+1
 6751              		.p2align 1
 6752              	.L1150:
 6753              		.align	2
 6754              	.L1149:
 6755 086c 00000000 		.word	.LANCHOR1
 6756 0870 00000000 		.word	.LANCHOR9
 6757 0874 31020008 		.word	134218289
 6758 0878 00000000 		.word	NonProgrammable
 6759 087c 00000000 		.word	OpCode
 6760 0880 00000000 		.word	OpCodeDisplayPending
 6761 0884 00000000 		.word	PersistentRam
 6762 0888 04000000 		.word	.LC1
 6763 088c 00000000 		.word	StateWhileOn
 6764              	.L589:
2460:src/keys.c    **** 	  }
 6765              		.loc 1 2460 26 is_stmt 1 view .LVU2136
 6766 0890 FFF7FEFF 		bl	clpall
 6767              	.LVL534:
2460:src/keys.c    **** 	  }
 6768              		.loc 1 2460 36 view .LVU2137
 6769              	.L588:
2469:src/keys.c    **** 	  State2.digval = 0;
 6770              		.loc 1 2469 4 view .LVU2138
2469:src/keys.c    **** 	  State2.digval = 0;
 6771              		.loc 1 2469 19 is_stmt 0 view .LVU2139
 6772 0894 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
2470:src/keys.c    **** 	  break;
 6773              		.loc 1 2470 18 view .LVU2140
 6774 0896 0022     		movs	r2, #0
2469:src/keys.c    **** 	  State2.digval = 0;
 6775              		.loc 1 2469 19 view .LVU2141
 6776 0898 6FF30203 		bfc	r3, #0, #3
 6777 089c 3375     		strb	r3, [r6, #20]
2470:src/keys.c    **** 	  break;
 6778              		.loc 1 2470 4 is_stmt 1 view .LVU2142
2470:src/keys.c    **** 	  break;
 6779              		.loc 1 2470 18 is_stmt 0 view .LVU2143
ARM GAS  /tmp/ccOshYsA.s 			page 211


 6780 089e 3281     		strh	r2, [r6, #8]	@ movhi
2471:src/keys.c    **** 	default:			// No state change
 6781              		.loc 1 2471 4 is_stmt 1 view .LVU2144
 6782              	.LBE933:
 6783              	.LBE932:
2865:src/keys.c    **** 
 6784              		.loc 1 2865 10 is_stmt 0 view .LVU2145
 6785 08a0 4FF0330B 		mov	fp, #51
 6786              	.LBB935:
 6787              	.LBB934:
2471:src/keys.c    **** 	default:			// No state change
 6788              		.loc 1 2471 4 view .LVU2146
 6789 08a4 3AE4     		b	.L566
 6790              	.L586:
2456:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6791              		.loc 1 2456 4 is_stmt 1 view .LVU2147
2456:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6792              		.loc 1 2456 18 is_stmt 0 view .LVU2148
 6793 08a6 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 6794 08a8 03F00703 		and	r3, r3, #7
 6795 08ac 013B     		subs	r3, r3, #1
 6796 08ae 032B     		cmp	r3, #3
 6797 08b0 F0D8     		bhi	.L588
 6798 08b2 01A2     		adr	r2, .L590
 6799 08b4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6800              		.p2align 2
 6801              	.L590:
 6802 08b8 D5080000 		.word	.L593+1
 6803 08bc CF080000 		.word	.L592+1
 6804 08c0 C9080000 		.word	.L591+1
 6805 08c4 91080000 		.word	.L589+1
 6806              		.p2align 1
 6807              	.L591:
2459:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6808              		.loc 1 2459 26 is_stmt 1 view .LVU2149
 6809 08c8 FFF7FEFF 		bl	clrprog
 6810              	.LVL535:
2459:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6811              		.loc 1 2459 37 view .LVU2150
2459:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6812              		.loc 1 2459 4 is_stmt 0 view .LVU2151
 6813 08cc E2E7     		b	.L588
 6814              	.L592:
2458:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6815              		.loc 1 2458 25 is_stmt 1 view .LVU2152
 6816 08ce FFF7FEFF 		bl	reset
 6817              	.LVL536:
2458:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6818              		.loc 1 2458 34 view .LVU2153
2458:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6819              		.loc 1 2458 4 is_stmt 0 view .LVU2154
 6820 08d2 DFE7     		b	.L588
 6821              	.L593:
2457:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6822              		.loc 1 2457 25 is_stmt 1 view .LVU2155
 6823 08d4 FFF7FEFF 		bl	clrall
 6824              	.LVL537:
ARM GAS  /tmp/ccOshYsA.s 			page 212


2457:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6825              		.loc 1 2457 35 view .LVU2156
2457:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6826              		.loc 1 2457 4 is_stmt 0 view .LVU2157
 6827 08d8 DCE7     		b	.L588
 6828              	.LVL538:
 6829              	.L1081:
2457:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6830              		.loc 1 2457 4 view .LVU2158
 6831              	.LBE934:
 6832              	.LBE935:
2838:src/keys.c    ****     soft_init_state();
 6833              		.loc 1 2838 47 view .LVU2159
 6834 08da CC4E     		ldr	r6, .L1151
 6835 08dc B37B     		ldrb	r3, [r6, #14]	@ zero_extendqisi2
2838:src/keys.c    ****     soft_init_state();
 6836              		.loc 1 2838 36 view .LVU2160
 6837 08de 4AEA0302 		orr	r2, r10, r3
 6838 08e2 12F0FF0F 		tst	r2, #255
 6839 08e6 7FF4D7AC 		bne	.L577
2839:src/keys.c    ****     return STATE_UNFINISHED;
 6840              		.loc 1 2839 5 is_stmt 1 view .LVU2161
 6841 08ea FFF7FEFF 		bl	soft_init_state
 6842              	.LVL539:
2840:src/keys.c    ****   }
 6843              		.loc 1 2840 5 view .LVU2162
2840:src/keys.c    ****   }
 6844              		.loc 1 2840 12 is_stmt 0 view .LVU2163
 6845 08ee 4FF0330B 		mov	fp, #51
 6846 08f2 13E4     		b	.L566
 6847              	.L1085:
2868:src/keys.c    **** 
 6848              		.loc 1 2868 3 is_stmt 1 view .LVU2164
2868:src/keys.c    **** 
 6849              		.loc 1 2868 10 is_stmt 0 view .LVU2165
 6850 08f4 E0B2     		uxtb	r0, r4
 6851 08f6 FFF7FEFF 		bl	process_arg
 6852              	.LVL540:
 6853 08fa 8346     		mov	fp, r0
 6854 08fc 48E6     		b	.L595
 6855              	.L1082:
2794:src/keys.c    ****       start_pause (0); //end the pause
 6856              		.loc 1 2794 2 is_stmt 1 view .LVU2166
 6857 08fe 0020     		movs	r0, #0
 6858 0900 FFF7FEFF 		bl	set_pc
 6859              	.LVL541:
 6860 0904 8CE4     		b	.L574
 6861              	.LVL542:
 6862              	.L827:
2794:src/keys.c    ****       start_pause (0); //end the pause
 6863              		.loc 1 2794 2 is_stmt 0 view .LVU2167
 6864              	.LBE1215:
 6865              	.LBE1273:
 6866              	.LBB1274:
3177:src/keys.c    **** 	if (p > Alpha)
 6867              		.loc 1 3177 2 is_stmt 1 view .LVU2168
3177:src/keys.c    **** 	if (p > Alpha)
ARM GAS  /tmp/ccOshYsA.s 			page 213


 6868              		.loc 1 3177 12 is_stmt 0 view .LVU2169
 6869 0906 C24C     		ldr	r4, .L1151+4
 6870 0908 0021     		movs	r1, #0
 6871 090a 2046     		mov	r0, r4
 6872 090c FFF7FEFF 		bl	find_char
 6873              	.LVL543:
3178:src/keys.c    **** 	  *--p = '\0';
 6874              		.loc 1 3178 2 is_stmt 1 view .LVU2170
3178:src/keys.c    **** 	  *--p = '\0';
 6875              		.loc 1 3178 5 is_stmt 0 view .LVU2171
 6876 0910 A042     		cmp	r0, r4
3179:src/keys.c    ****       }
 6877              		.loc 1 3179 4 is_stmt 1 view .LVU2172
 6878              	.LVL544:
3179:src/keys.c    ****       }
 6879              		.loc 1 3179 9 is_stmt 0 view .LVU2173
 6880 0912 84BF     		itt	hi
 6881 0914 0023     		movhi	r3, #0
 6882 0916 00F8013C 		strbhi	r3, [r0, #-1]
 6883 091a EFE6     		b	.L1059
 6884              	.LVL545:
 6885              	.L1088:
3179:src/keys.c    ****       }
 6886              		.loc 1 3179 9 view .LVU2174
 6887              	.LBE1274:
 6888              	.LBB1275:
 6889              	.LBB1216:
2877:src/keys.c    **** 
 6890              		.loc 1 2877 3 is_stmt 1 view .LVU2175
 6891              	.LBB936:
 6892              	.LBI936:
1911:src/keys.c    **** 	int r = State2.test;
 6893              		.loc 1 1911 12 view .LVU2176
 6894              	.LBB937:
1912:src/keys.c    **** 	int cmpx = State2.cmplx;
 6895              		.loc 1 1912 2 view .LVU2177
1913:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6896              		.loc 1 1913 2 view .LVU2178
 6897              	.LBB938:
 6898              	.LBB939:
 6899              	.LBB940:
 6900              	.LBB941:
 136:src/keys.c    **** }
 6901              		.loc 1 136 23 is_stmt 0 view .LVU2179
 6902 091c BD48     		ldr	r0, .L1151+8
 6903              	.LBE941:
 6904              	.LBE940:
 232:src/keys.c    **** }
 6905              		.loc 1 232 28 view .LVU2180
 6906 091e DFF8F8C2 		ldr	ip, .L1151+12
 6907              	.LBB945:
 6908              	.LBB942:
 136:src/keys.c    **** }
 6909              		.loc 1 136 23 view .LVU2181
 6910 0922 E4B2     		uxtb	r4, r4
 6911              	.LVL546:
 136:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 214


 6912              		.loc 1 136 23 view .LVU2182
 6913              	.LBE942:
 6914              	.LBE945:
 6915              	.LBE939:
 6916              	.LBE938:
1915:src/keys.c    **** 
 6917              		.loc 1 1915 44 view .LVU2183
 6918 0924 12F0020F 		tst	r2, #2
 6919              	.LBB950:
 6920              	.LBB948:
 6921              	.LBB946:
 6922              	.LBB943:
 136:src/keys.c    **** }
 6923              		.loc 1 136 23 view .LVU2184
 6924 0928 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 6925              	.LBE943:
 6926              	.LBE946:
 232:src/keys.c    **** }
 6927              		.loc 1 232 28 view .LVU2185
 6928 092a 1CF800C0 		ldrb	ip, [ip, r0]	@ zero_extendqisi2
 6929              	.LBE948:
 6930              	.LBE950:
1913:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6931              		.loc 1 1913 19 view .LVU2186
 6932 092e C2F3400E 		ubfx	lr, r2, #1, #1
 6933              	.LVL547:
1914:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 6934              		.loc 1 1914 2 is_stmt 1 view .LVU2187
 6935              	.LBB951:
 6936              	.LBI938:
 208:src/keys.c    **** {
 6937              		.loc 1 208 14 view .LVU2188
 6938              	.LBB949:
 210:src/keys.c    ****     // K00 - K05
 6939              		.loc 1 210 3 view .LVU2189
 232:src/keys.c    **** }
 6940              		.loc 1 232 3 view .LVU2190
 6941              	.LBB947:
 6942              	.LBI940:
 124:src/keys.c    **** {
 6943              		.loc 1 124 12 view .LVU2191
 6944              	.LBB944:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6945              		.loc 1 126 2 view .LVU2192
 136:src/keys.c    **** }
 6946              		.loc 1 136 2 view .LVU2193
 136:src/keys.c    **** }
 6947              		.loc 1 136 2 is_stmt 0 view .LVU2194
 6948              	.LBE944:
 6949              	.LBE947:
 6950              	.LBE949:
 6951              	.LBE951:
1914:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 6952              		.loc 1 1914 15 view .LVU2195
 6953 0932 2CF08000 		bic	r0, ip, #128
 6954              	.LVL548:
1915:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 215


 6955              		.loc 1 1915 2 is_stmt 1 view .LVU2196
1915:src/keys.c    **** 
 6956              		.loc 1 1915 44 is_stmt 0 view .LVU2197
 6957 0936 7CD0     		beq	.L1112
1918:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 6958              		.loc 1 1918 15 view .LVU2198
 6959 0938 61F34102 		bfi	r2, r1, #1, #1
1919:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 6960              		.loc 1 1919 5 view .LVU2199
 6961 093c 6428     		cmp	r0, #100
1917:src/keys.c    **** 	State2.cmplx = 0;
 6962              		.loc 1 1917 14 view .LVU2200
 6963 093e 4FF00701 		mov	r1, #7
1918:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 6964              		.loc 1 1918 15 view .LVU2201
 6965 0942 7275     		strb	r2, [r6, #21]
1917:src/keys.c    **** 	State2.cmplx = 0;
 6966              		.loc 1 1917 14 view .LVU2202
 6967 0944 F173     		strb	r1, [r6, #15]
1915:src/keys.c    **** 
 6968              		.loc 1 1915 60 view .LVU2203
 6969 0946 0BF1340A 		add	r10, fp, #52
 6970              	.LVL549:
1917:src/keys.c    **** 	State2.cmplx = 0;
 6971              		.loc 1 1917 2 is_stmt 1 view .LVU2204
1918:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 6972              		.loc 1 1918 2 view .LVU2205
1919:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 6973              		.loc 1 1919 2 view .LVU2206
1919:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 6974              		.loc 1 1919 5 is_stmt 0 view .LVU2207
 6975 094a 00F0C081 		beq	.L629
 6976              	.L848:
1920:src/keys.c    **** 		// Lettered register
 6977              		.loc 1 1920 2 is_stmt 1 view .LVU2208
1920:src/keys.c    **** 		// Lettered register
 6978              		.loc 1 1920 5 is_stmt 0 view .LVU2209
 6979 094e 7F28     		cmp	r0, #127
 6980 0950 05D0     		beq	.L622
 6981              	.LVL550:
1920:src/keys.c    **** 		// Lettered register
 6982              		.loc 1 1920 18 view .LVU2210
 6983 0952 6328     		cmp	r0, #99
 6984 0954 40F23181 		bls	.L623
1920:src/keys.c    **** 		// Lettered register
 6985              		.loc 1 1920 37 view .LVU2211
 6986 0958 6F28     		cmp	r0, #111
 6987 095a 40F25B85 		bls	.L1113
 6988              	.L622:
1939:src/keys.c    **** 		// digit 2..9, -> or .
 6989              		.loc 1 1939 19 view .LVU2212
 6990 095e 2C2C     		cmp	r4, #44
 6991 0960 00F03881 		beq	.L631
1939:src/keys.c    **** 		// digit 2..9, -> or .
 6992              		.loc 1 1939 35 view .LVU2213
 6993 0964 262C     		cmp	r4, #38
 6994 0966 00F03581 		beq	.L631
ARM GAS  /tmp/ccOshYsA.s 			page 216


1945:src/keys.c    **** 	case K11:					// tests vs register
 6995              		.loc 1 1945 2 is_stmt 1 view .LVU2214
 6996 096a 0C2C     		cmp	r4, #12
 6997 096c 3FF42AAE 		beq	.L813
 6998 0970 102C     		cmp	r4, #16
 6999 0972 3FF430AE 		beq	.L1065
 7000 0976 072C     		cmp	r4, #7
 7001 0978 3FF424AE 		beq	.L813
 7002              	.L625:
1959:src/keys.c    **** 	State2.cmplx = cmpx;
 7003              		.loc 1 1959 2 view .LVU2215
1960:src/keys.c    **** 	return STATE_UNFINISHED;
 7004              		.loc 1 1960 15 is_stmt 0 view .LVU2216
 7005 097c 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1959:src/keys.c    **** 	State2.cmplx = cmpx;
 7006              		.loc 1 1959 14 view .LVU2217
 7007 097e 86F80FB0 		strb	fp, [r6, #15]
1960:src/keys.c    **** 	return STATE_UNFINISHED;
 7008              		.loc 1 1960 2 is_stmt 1 view .LVU2218
1960:src/keys.c    **** 	return STATE_UNFINISHED;
 7009              		.loc 1 1960 15 is_stmt 0 view .LVU2219
 7010 0982 6EF34103 		bfi	r3, lr, #1, #1
 7011 0986 7375     		strb	r3, [r6, #21]
1961:src/keys.c    **** }
 7012              		.loc 1 1961 2 is_stmt 1 view .LVU2220
1961:src/keys.c    **** }
 7013              		.loc 1 1961 9 is_stmt 0 view .LVU2221
 7014 0988 4FF0330B 		mov	fp, #51
 7015              	.LVL551:
1961:src/keys.c    **** }
 7016              		.loc 1 1961 9 view .LVU2222
 7017 098c FFF7C6BB 		b	.L566
 7018              	.LVL552:
 7019              	.L1086:
1961:src/keys.c    **** }
 7020              		.loc 1 1961 9 view .LVU2223
 7021              	.LBE937:
 7022              	.LBE936:
2871:src/keys.c    **** 
 7023              		.loc 1 2871 3 is_stmt 1 view .LVU2224
 7024              	.LBB958:
 7025              	.LBI958:
1351:src/keys.c    **** 	int pc = -1;
 7026              		.loc 1 1351 12 view .LVU2225
 7027              	.LBB959:
1352:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7028              		.loc 1 1352 2 view .LVU2226
1353:src/keys.c    **** 
 7029              		.loc 1 1353 2 view .LVU2227
 7030              	.LBB960:
 7031              	.LBI960:
 208:src/keys.c    **** {
 7032              		.loc 1 208 14 view .LVU2228
 7033              	.LBB961:
 210:src/keys.c    ****     // K00 - K05
 7034              		.loc 1 210 3 view .LVU2229
 232:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 217


 7035              		.loc 1 232 3 view .LVU2230
 7036              	.LBB962:
 7037              	.LBI962:
 124:src/keys.c    **** {
 7038              		.loc 1 124 12 view .LVU2231
 7039              	.LBB963:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7040              		.loc 1 126 2 view .LVU2232
 136:src/keys.c    **** }
 7041              		.loc 1 136 2 view .LVU2233
 136:src/keys.c    **** }
 7042              		.loc 1 136 23 is_stmt 0 view .LVU2234
 7043 0990 A04B     		ldr	r3, .L1151+8
 7044              	.LBE963:
 7045              	.LBE962:
 232:src/keys.c    **** }
 7046              		.loc 1 232 28 view .LVU2235
 7047 0992 A14A     		ldr	r2, .L1151+12
 7048 0994 E4B2     		uxtb	r4, r4
 7049              	.LVL553:
 7050              	.LBB965:
 7051              	.LBB964:
 136:src/keys.c    **** }
 7052              		.loc 1 136 23 view .LVU2236
 7053 0996 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7054              	.LBE964:
 7055              	.LBE965:
 232:src/keys.c    **** }
 7056              		.loc 1 232 28 view .LVU2237
 7057 0998 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7058              	.LVL554:
 232:src/keys.c    **** }
 7059              		.loc 1 232 28 view .LVU2238
 7060              	.LBE961:
 7061              	.LBE960:
1355:src/keys.c    **** 		// Digit 0 - 9
 7062              		.loc 1 1355 2 is_stmt 1 view .LVU2239
1355:src/keys.c    **** 		// Digit 0 - 9
 7063              		.loc 1 1355 5 is_stmt 0 view .LVU2240
 7064 099a 092B     		cmp	r3, #9
 7065 099c 40F2C080 		bls	.L1114
1359:src/keys.c    **** 		// A - D
 7066              		.loc 1 1359 7 is_stmt 1 view .LVU2241
1359:src/keys.c    **** 		// A - D
 7067              		.loc 1 1359 10 is_stmt 0 view .LVU2242
 7068 09a0 032C     		cmp	r4, #3
 7069 09a2 40F26C81 		bls	.L1115
1364:src/keys.c    **** 		// .
 7070              		.loc 1 1364 7 is_stmt 1 view .LVU2243
1364:src/keys.c    **** 		// .
 7071              		.loc 1 1364 10 is_stmt 0 view .LVU2244
 7072 09a6 262C     		cmp	r4, #38
 7073 09a8 00F08281 		beq	.L1116
1369:src/keys.c    **** 		// ENTER - short circuit processing
 7074              		.loc 1 1369 7 is_stmt 1 view .LVU2245
1369:src/keys.c    **** 		// ENTER - short circuit processing
 7075              		.loc 1 1369 10 is_stmt 0 view .LVU2246
ARM GAS  /tmp/ccOshYsA.s 			page 218


 7076 09ac 0C2C     		cmp	r4, #12
 7077 09ae 00F05F81 		beq	.L1117
1373:src/keys.c    **** 		// backspace
 7078              		.loc 1 1373 7 is_stmt 1 view .LVU2247
1373:src/keys.c    **** 		// backspace
 7079              		.loc 1 1373 10 is_stmt 0 view .LVU2248
 7080 09b2 102C     		cmp	r4, #16
 7081 09b4 00F08E81 		beq	.L1118
1382:src/keys.c    **** 		// up
 7082              		.loc 1 1382 7 is_stmt 1 view .LVU2249
1382:src/keys.c    **** 		// up
 7083              		.loc 1 1382 10 is_stmt 0 view .LVU2250
 7084 09b8 122C     		cmp	r4, #18
 7085 09ba 00F00284 		beq	.L1119
1392:src/keys.c    **** 		// down
 7086              		.loc 1 1392 7 is_stmt 1 view .LVU2251
1392:src/keys.c    **** 		// down
 7087              		.loc 1 1392 10 is_stmt 0 view .LVU2252
 7088 09be 182C     		cmp	r4, #24
 7089 09c0 7FF409AE 		bne	.L1065
1394:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7090              		.loc 1 1394 3 is_stmt 1 view .LVU2253
1395:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7091              		.loc 1 1395 18 is_stmt 0 view .LVU2254
 7092 09c4 954C     		ldr	r4, .L1151+16
1394:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7093              		.loc 1 1394 3 view .LVU2255
 7094 09c6 0120     		movs	r0, #1
 7095 09c8 FFF7FEFF 		bl	update_program_bounds
 7096              	.LVL555:
1395:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7097              		.loc 1 1395 3 is_stmt 1 view .LVU2256
1395:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7098              		.loc 1 1395 11 is_stmt 0 view .LVU2257
 7099 09cc B4F8EE07 		ldrh	r0, [r4, #2030]
 7100 09d0 0021     		movs	r1, #0
 7101 09d2 FFF7FEFF 		bl	do_inc
 7102              	.LVL556:
1396:src/keys.c    **** 			rawpc = 1;
 7103              		.loc 1 1396 3 is_stmt 1 view .LVU2258
1396:src/keys.c    **** 			rawpc = 1;
 7104              		.loc 1 1396 6 is_stmt 0 view .LVU2259
 7105 09d6 18B9     		cbnz	r0, .L603
1396:src/keys.c    **** 			rawpc = 1;
 7106              		.loc 1 1396 18 view .LVU2260
 7107 09d8 6088     		ldrh	r0, [r4, #2]
 7108              	.LVL557:
1396:src/keys.c    **** 			rawpc = 1;
 7109              		.loc 1 1396 18 view .LVU2261
 7110 09da 0038     		subs	r0, r0, #0
 7111 09dc 18BF     		it	ne
 7112 09de 0120     		movne	r0, #1
 7113              	.LVL558:
 7114              	.L603:
1402:src/keys.c    **** fin2:		State2.gtodot = 0;
 7115              		.loc 1 1402 7 is_stmt 1 view .LVU2262
 7116 09e0 FFF7FEFF 		bl	set_pc
ARM GAS  /tmp/ccOshYsA.s 			page 219


 7117              	.LVL559:
 7118              	.L607:
1403:src/keys.c    **** 		State2.digval = 0;
 7119              		.loc 1 1403 8 view .LVU2263
1403:src/keys.c    **** 		State2.digval = 0;
 7120              		.loc 1 1403 22 is_stmt 0 view .LVU2264
 7121 09e4 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
1404:src/keys.c    **** 		State2.numdigit = 0;
 7122              		.loc 1 1404 17 view .LVU2265
 7123 09e6 0023     		movs	r3, #0
1403:src/keys.c    **** 		State2.digval = 0;
 7124              		.loc 1 1403 22 view .LVU2266
 7125 09e8 6FF30002 		bfc	r2, #0, #1
 7126 09ec 7275     		strb	r2, [r6, #21]
1404:src/keys.c    **** 		State2.numdigit = 0;
 7127              		.loc 1 1404 3 is_stmt 1 view .LVU2267
1404:src/keys.c    **** 		State2.numdigit = 0;
 7128              		.loc 1 1404 17 is_stmt 0 view .LVU2268
 7129 09ee 3381     		strh	r3, [r6, #8]	@ movhi
1405:src/keys.c    **** 	}
 7130              		.loc 1 1405 3 is_stmt 1 view .LVU2269
1405:src/keys.c    **** 	}
 7131              		.loc 1 1405 19 is_stmt 0 view .LVU2270
 7132 09f0 F372     		strb	r3, [r6, #11]
 7133              	.LBE959:
 7134              	.LBE958:
2871:src/keys.c    **** 
 7135              		.loc 1 2871 10 view .LVU2271
 7136 09f2 4FF0330B 		mov	fp, #51
 7137 09f6 FFF791BB 		b	.L566
 7138              	.LVL560:
 7139              	.L888:
2871:src/keys.c    **** 
 7140              		.loc 1 2871 10 view .LVU2272
 7141              	.LBE1216:
 7142              	.LBE1275:
2977:src/keys.c    **** #ifdef DM42
 7143              		.loc 1 2977 7 view .LVU2273
 7144 09fa D846     		mov	r8, fp
 7145 09fc FFF78EBB 		b	.L566
 7146              	.LVL561:
 7147              	.L612:
 7148              	.LBB1276:
 7149              	.LBB1217:
 7150              	.LBB977:
 7151              	.LBB750:
1262:src/keys.c    **** 
 7152              		.loc 1 1262 2 view .LVU2274
 7153 0a00 2D2C     		cmp	r4, #45
 7154 0a02 7FF4E8AD 		bne	.L1065
1270:src/keys.c    **** 		goto stay;
 7155              		.loc 1 1270 3 is_stmt 1 view .LVU2275
 7156 0a06 8AF0010A 		eor	r10, r10, #1
 7157              	.LVL562:
1271:src/keys.c    **** 
 7158              		.loc 1 1271 3 view .LVU2276
 7159              	.L618:
ARM GAS  /tmp/ccOshYsA.s 			page 220


1279:src/keys.c    **** 		State2.cmplx = cmplx;
 7160              		.loc 1 1279 3 view .LVU2277
1280:src/keys.c    **** 		State2.dot = f;
 7161              		.loc 1 1280 3 view .LVU2278
1281:src/keys.c    **** 		break;
 7162              		.loc 1 1281 3 view .LVU2279
1280:src/keys.c    **** 		State2.dot = f;
 7163              		.loc 1 1280 16 is_stmt 0 view .LVU2280
 7164 0a0a 4FEA4A03 		lsl	r3, r10, #1
 7165 0a0e 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 7166 0a10 43F02003 		orr	r3, r3, #32
 7167 0a14 43EA8913 		orr	r3, r3, r9, lsl #6
 7168 0a18 03F06203 		and	r3, r3, #98
 7169 0a1c 22F06202 		bic	r2, r2, #98
 7170 0a20 1343     		orrs	r3, r3, r2
 7171 0a22 7375     		strb	r3, [r6, #21]
1282:src/keys.c    **** 
 7172              		.loc 1 1282 3 is_stmt 1 view .LVU2281
1287:src/keys.c    **** }
 7173              		.loc 1 1287 9 is_stmt 0 view .LVU2282
 7174 0a24 4FF0330B 		mov	fp, #51
1282:src/keys.c    **** 
 7175              		.loc 1 1282 3 view .LVU2283
 7176 0a28 FFF778BB 		b	.L566
 7177              	.LVL563:
 7178              	.L889:
1282:src/keys.c    **** 
 7179              		.loc 1 1282 3 view .LVU2284
 7180              	.LBE750:
 7181              	.LBE977:
 7182              	.LBE1217:
 7183              	.LBE1276:
 7184              	.LBB1277:
 7185 0a2c 9B46     		mov	fp, r3
 7186              	.LVL564:
1282:src/keys.c    **** 
 7187              		.loc 1 1282 3 view .LVU2285
 7188 0a2e FFF796BB 		b	.L838
 7189              	.LVL565:
 7190              	.L1112:
1282:src/keys.c    **** 
 7191              		.loc 1 1282 3 view .LVU2286
 7192              	.LBE1277:
 7193              	.LBB1278:
 7194              	.LBB1218:
 7195              	.LBB978:
 7196              	.LBB954:
1918:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7197              		.loc 1 1918 15 view .LVU2287
 7198 0a32 6EF34102 		bfi	r2, lr, #1, #1
1917:src/keys.c    **** 	State2.cmplx = 0;
 7199              		.loc 1 1917 14 view .LVU2288
 7200 0a36 0721     		movs	r1, #7
1919:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7201              		.loc 1 1919 5 view .LVU2289
 7202 0a38 6428     		cmp	r0, #100
1918:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
ARM GAS  /tmp/ccOshYsA.s 			page 221


 7203              		.loc 1 1918 15 view .LVU2290
 7204 0a3a 7275     		strb	r2, [r6, #21]
1917:src/keys.c    **** 	State2.cmplx = 0;
 7205              		.loc 1 1917 14 view .LVU2291
 7206 0a3c F173     		strb	r1, [r6, #15]
1915:src/keys.c    **** 
 7207              		.loc 1 1915 60 view .LVU2292
 7208 0a3e 0BF12D0A 		add	r10, fp, #45
 7209              	.LVL566:
1917:src/keys.c    **** 	State2.cmplx = 0;
 7210              		.loc 1 1917 2 is_stmt 1 view .LVU2293
1918:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7211              		.loc 1 1918 2 view .LVU2294
1919:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7212              		.loc 1 1919 2 view .LVU2295
1919:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7213              		.loc 1 1919 5 is_stmt 0 view .LVU2296
 7214 0a42 84D1     		bne	.L848
 7215              	.LVL567:
 7216              	.L849:
1937:src/keys.c    **** 	}
 7217              		.loc 1 1937 18 view .LVU2297
 7218 0a44 1E23     		movs	r3, #30
1937:src/keys.c    **** 	}
 7219              		.loc 1 1937 47 view .LVU2298
 7220 0a46 9B44     		add	fp, fp, r3
 7221              	.LVL568:
1937:src/keys.c    **** 	}
 7222              		.loc 1 1937 47 view .LVU2299
 7223 0a48 A2E5     		b	.L595
 7224              	.LVL569:
 7225              	.L1089:
1937:src/keys.c    **** 	}
 7226              		.loc 1 1937 47 view .LVU2300
 7227              	.LBE954:
 7228              	.LBE978:
2880:src/keys.c    **** 
 7229              		.loc 1 2880 3 is_stmt 1 view .LVU2301
 7230              	.LBB979:
 7231              	.LBB980:
2484:src/keys.c    **** 
 7232              		.loc 1 2484 12 is_stmt 0 view .LVU2302
 7233 0a4a 744A     		ldr	r2, .L1151+16
2484:src/keys.c    **** 
 7234              		.loc 1 2484 31 view .LVU2303
 7235 0a4c B2F9DE27 		ldrsh	r2, [r2, #2014]
 7236              	.LBE980:
 7237              	.LBE979:
2880:src/keys.c    **** 
 7238              		.loc 1 2880 10 view .LVU2304
 7239 0a50 E4B2     		uxtb	r4, r4
 7240              	.LVL570:
 7241              	.LBB999:
 7242              	.LBI979:
2482:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7243              		.loc 1 2482 12 is_stmt 1 view .LVU2305
 7244              	.LBB991:
ARM GAS  /tmp/ccOshYsA.s 			page 222


2483:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7245              		.loc 1 2483 2 view .LVU2306
2484:src/keys.c    **** 
 7246              		.loc 1 2484 2 view .LVU2307
2484:src/keys.c    **** 
 7247              		.loc 1 2484 31 is_stmt 0 view .LVU2308
 7248 0a52 002A     		cmp	r2, #0
 7249 0a54 B4BF     		ite	lt
 7250 0a56 0B22     		movlt	r2, #11
 7251 0a58 0A22     		movge	r2, #10
 7252              	.LVL571:
2486:src/keys.c    **** 		if (--n < -2)
 7253              		.loc 1 2486 2 is_stmt 1 view .LVU2309
2486:src/keys.c    **** 		if (--n < -2)
 7254              		.loc 1 2486 5 is_stmt 0 view .LVU2310
 7255 0a5a 122C     		cmp	r4, #18
 7256 0a5c 00F00A81 		beq	.L1120
2490:src/keys.c    **** 		if (++n > max)
 7257              		.loc 1 2490 7 is_stmt 1 view .LVU2311
2490:src/keys.c    **** 		if (++n > max)
 7258              		.loc 1 2490 10 is_stmt 0 view .LVU2312
 7259 0a60 182C     		cmp	r4, #24
 7260 0a62 00F04681 		beq	.L1121
2494:src/keys.c    **** 		State2.status = 0;
 7261              		.loc 1 2494 7 is_stmt 1 view .LVU2313
2494:src/keys.c    **** 		State2.status = 0;
 7262              		.loc 1 2494 10 is_stmt 0 view .LVU2314
 7263 0a66 102C     		cmp	r4, #16
 7264 0a68 00F0A683 		beq	.L1122
 7265              	.LBB981:
2499:src/keys.c    **** 		if (nn <= 9)
 7266              		.loc 1 2499 3 is_stmt 1 view .LVU2315
 7267              	.LVL572:
 7268              	.LBB982:
 7269              	.LBI982:
 208:src/keys.c    **** {
 7270              		.loc 1 208 14 view .LVU2316
 7271              	.LBB983:
 210:src/keys.c    ****     // K00 - K05
 7272              		.loc 1 210 3 view .LVU2317
 232:src/keys.c    **** }
 7273              		.loc 1 232 3 view .LVU2318
 7274              	.LBB984:
 7275              	.LBI984:
 124:src/keys.c    **** {
 7276              		.loc 1 124 12 view .LVU2319
 7277              	.LBB985:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7278              		.loc 1 126 2 view .LVU2320
 136:src/keys.c    **** }
 7279              		.loc 1 136 2 view .LVU2321
 136:src/keys.c    **** }
 7280              		.loc 1 136 23 is_stmt 0 view .LVU2322
 7281 0a6c 6949     		ldr	r1, .L1151+8
 7282              	.LBE985:
 7283              	.LBE984:
 232:src/keys.c    **** }
ARM GAS  /tmp/ccOshYsA.s 			page 223


 7284              		.loc 1 232 28 view .LVU2323
 7285 0a6e 6A48     		ldr	r0, .L1151+12
 7286              	.LBB987:
 7287              	.LBB986:
 136:src/keys.c    **** }
 7288              		.loc 1 136 23 view .LVU2324
 7289 0a70 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 7290 0a72 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 7291 0a74 01F07F01 		and	r1, r1, #127
 7292              	.LVL573:
 136:src/keys.c    **** }
 7293              		.loc 1 136 23 view .LVU2325
 7294              	.LBE986:
 7295              	.LBE987:
 7296              	.LBE983:
 7297              	.LBE982:
2500:src/keys.c    **** 			n = nn;
 7298              		.loc 1 2500 3 is_stmt 1 view .LVU2326
2500:src/keys.c    **** 			n = nn;
 7299              		.loc 1 2500 6 is_stmt 0 view .LVU2327
 7300 0a78 0929     		cmp	r1, #9
 7301 0a7a 40F27882 		bls	.L859
2502:src/keys.c    **** 			n = n == max ? 10 : max;
 7302              		.loc 1 2502 11 view .LVU2328
 7303 0a7e 7029     		cmp	r1, #112
 7304              	.LBE981:
2483:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7305              		.loc 1 2483 6 view .LVU2329
 7306 0a80 A3F10303 		sub	r3, r3, #3
 7307              	.LVL574:
 7308              	.LBB988:
2502:src/keys.c    **** 			n = n == max ? 10 : max;
 7309              		.loc 1 2502 8 is_stmt 1 view .LVU2330
2502:src/keys.c    **** 			n = n == max ? 10 : max;
 7310              		.loc 1 2502 11 is_stmt 0 view .LVU2331
 7311 0a84 00F0AF84 		beq	.L1123
2504:src/keys.c    **** 			n = 10; 
 7312              		.loc 1 2504 8 is_stmt 1 view .LVU2332
 7313              	.LBE988:
2483:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7314              		.loc 1 2483 6 is_stmt 0 view .LVU2333
 7315 0a88 7F29     		cmp	r1, #127
 7316 0a8a 0CBF     		ite	eq
 7317 0a8c 1A46     		moveq	r2, r3
 7318              	.LVL575:
2483:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7319              		.loc 1 2483 6 view .LVU2334
 7320 0a8e 0A22     		movne	r2, #10
 7321              	.LVL576:
 7322              	.L639:
2507:src/keys.c    **** 
 7323              		.loc 1 2507 2 is_stmt 1 view .LVU2335
2507:src/keys.c    **** 
 7324              		.loc 1 2507 20 is_stmt 0 view .LVU2336
 7325 0a90 0332     		adds	r2, r2, #3
 7326              	.LVL577:
2507:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 224


 7327              		.loc 1 2507 16 view .LVU2337
 7328 0a92 3273     		strb	r2, [r6, #12]
2509:src/keys.c    **** }
 7329              		.loc 1 2509 2 is_stmt 1 view .LVU2338
 7330              	.LBE991:
 7331              	.LBE999:
2880:src/keys.c    **** 
 7332              		.loc 1 2880 10 is_stmt 0 view .LVU2339
 7333 0a94 4FF0330B 		mov	fp, #51
 7334              	.LBB1000:
 7335              	.LBB992:
2509:src/keys.c    **** }
 7336              		.loc 1 2509 9 view .LVU2340
 7337 0a98 FFF740BB 		b	.L566
 7338              	.LVL578:
 7339              	.L1093:
2509:src/keys.c    **** }
 7340              		.loc 1 2509 9 view .LVU2341
 7341              	.LBE992:
 7342              	.LBE1000:
2903:src/keys.c    **** 
 7343              		.loc 1 2903 3 is_stmt 1 view .LVU2342
 7344              	.LBB1001:
 7345              	.LBB1002:
 7346              	.LBB1003:
 7347              	.LBB1004:
 7348              	.LBB1005:
 7349              	.LBB1006:
 7350              	.LBB1007:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7351              		.loc 1 85 18 is_stmt 0 view .LVU2343
 7352 0a9c FFF7FEFF 		bl	shift_down
 7353              	.LVL579:
 7354              	.LBE1007:
 7355              	.LBE1006:
 7356              	.LBE1005:
 7357              	.LBE1004:
 7358              	.LBE1003:
 7359              	.LBE1002:
 7360              	.LBE1001:
2903:src/keys.c    **** 
 7361              		.loc 1 2903 10 view .LVU2344
 7362 0aa0 E4B2     		uxtb	r4, r4
 7363              	.LVL580:
 7364              	.LBB1027:
 7365              	.LBI1001:
1295:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7366              		.loc 1 1295 12 is_stmt 1 view .LVU2345
 7367              	.LBB1024:
1296:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7368              		.loc 1 1296 2 view .LVU2346
1301:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7369              		.loc 1 1301 2 view .LVU2347
1305:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7370              		.loc 1 1305 2 view .LVU2348
 7371              	.LBB1016:
 7372              	.LBI1003:
ARM GAS  /tmp/ccOshYsA.s 			page 225


 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 7373              		.loc 1 102 13 view .LVU2349
 7374              	.LBE1016:
 7375              	.LBE1024:
 7376              	.LBE1027:
 7377              	.LBE1218:
 7378              	.LBE1278:
 103:src/keys.c    **** }
 7379              		.loc 1 103 2 view .LVU2350
 7380              	.LBB1279:
 7381              	.LBB1219:
 7382              	.LBB1028:
 7383              	.LBB1025:
 7384              	.LBB1017:
 7385              	.LBB1013:
 7386              	.LBI1004:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 7387              		.loc 1 92 20 view .LVU2351
 7388              	.LBB1010:
  93:src/keys.c    **** 	State2.shifts = shift;
 7389              		.loc 1 93 2 view .LVU2352
 7390              	.LBB1009:
 7391              	.LBI1006:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 7392              		.loc 1 84 13 view .LVU2353
 7393              	.LBB1008:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7394              		.loc 1 85 2 view .LVU2354
  86:src/keys.c    **** }
 7395              		.loc 1 86 2 view .LVU2355
  86:src/keys.c    **** }
 7396              		.loc 1 86 52 is_stmt 0 view .LVU2356
 7397 0aa2 8346     		mov	fp, r0
 7398 0aa4 08B9     		cbnz	r0, .L649
 7399 0aa6 96F810B0 		ldrb	fp, [r6, #16]	@ zero_extendqisi2
 7400              	.L649:
 7401              	.LVL581:
  86:src/keys.c    **** }
 7402              		.loc 1 86 52 view .LVU2357
 7403              	.LBE1008:
 7404              	.LBE1009:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7405              		.loc 1 94 2 is_stmt 1 view .LVU2358
 7406              	.LBE1010:
 7407              	.LBE1013:
 7408              	.LBE1017:
1308:src/keys.c    **** 	set_last_menu ();
 7409              		.loc 1 1308 15 is_stmt 0 view .LVU2359
 7410 0aaa 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 7411              	.LBB1018:
 7412              	.LBB1014:
 7413              	.LBB1011:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7414              		.loc 1 94 16 view .LVU2360
 7415 0aac 0023     		movs	r3, #0
 7416              	.LBE1011:
 7417              	.LBE1014:
ARM GAS  /tmp/ccOshYsA.s 			page 226


 7418              	.LBE1018:
1308:src/keys.c    **** 	set_last_menu ();
 7419              		.loc 1 1308 15 view .LVU2361
 7420 0aae 63F38202 		bfi	r2, r3, #2, #1
1306:src/keys.c    **** 
 7421              		.loc 1 1306 23 view .LVU2362
 7422 0ab2 ABF1010A 		sub	r10, fp, #1
 7423              	.LVL582:
1308:src/keys.c    **** 	set_last_menu ();
 7424              		.loc 1 1308 15 view .LVU2363
 7425 0ab6 7275     		strb	r2, [r6, #21]
1306:src/keys.c    **** 
 7426              		.loc 1 1306 23 view .LVU2364
 7427 0ab8 BAFA8AFA 		clz	r10, r10
 7428              	.LBB1019:
 7429              	.LBB1015:
 7430              	.LBB1012:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7431              		.loc 1 94 16 view .LVU2365
 7432 0abc 3374     		strb	r3, [r6, #16]
  95:src/keys.c    **** 	return r;
 7433              		.loc 1 95 2 is_stmt 1 view .LVU2366
  95:src/keys.c    **** 	return r;
 7434              		.loc 1 95 19 is_stmt 0 view .LVU2367
 7435 0abe 7373     		strb	r3, [r6, #13]
  96:src/keys.c    **** }
 7436              		.loc 1 96 2 is_stmt 1 view .LVU2368
 7437              	.LVL583:
  96:src/keys.c    **** }
 7438              		.loc 1 96 2 is_stmt 0 view .LVU2369
 7439              	.LBE1012:
 7440              	.LBE1015:
 7441              	.LBE1019:
1306:src/keys.c    **** 
 7442              		.loc 1 1306 2 is_stmt 1 view .LVU2370
1306:src/keys.c    **** 
 7443              		.loc 1 1306 23 is_stmt 0 view .LVU2371
 7444 0ac0 4FEA5A1A 		lsr	r10, r10, #5
 7445              	.LVL584:
1308:src/keys.c    **** 	set_last_menu ();
 7446              		.loc 1 1308 2 is_stmt 1 view .LVU2372
1309:src/keys.c    **** 	display_current_menu ();
 7447              		.loc 1 1309 2 view .LVU2373
 7448 0ac4 FFF7FEFF 		bl	set_last_menu
 7449              	.LVL585:
1310:src/keys.c    **** 
 7450              		.loc 1 1310 2 view .LVU2374
 7451 0ac8 FFF7FEFF 		bl	display_current_menu
 7452              	.LVL586:
1312:src/keys.c    **** 	
 7453              		.loc 1 1312 2 view .LVU2375
1312:src/keys.c    **** 	
 7454              		.loc 1 1312 5 is_stmt 0 view .LVU2376
 7455 0acc BBF1000F 		cmp	fp, #0
 7456 0ad0 3FF481AD 		beq	.L1065
1314:src/keys.c    **** 		return op_map[c - K10][f];
 7457              		.loc 1 1314 2 is_stmt 1 view .LVU2377
ARM GAS  /tmp/ccOshYsA.s 			page 227


1314:src/keys.c    **** 		return op_map[c - K10][f];
 7458              		.loc 1 1314 15 is_stmt 0 view .LVU2378
 7459 0ad4 A31F     		subs	r3, r4, #6
1314:src/keys.c    **** 		return op_map[c - K10][f];
 7460              		.loc 1 1314 5 view .LVU2379
 7461 0ad6 DAB2     		uxtb	r2, r3
 7462 0ad8 022A     		cmp	r2, #2
 7463 0ada 40F2EC80 		bls	.L1124
1317:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7464              		.loc 1 1317 2 is_stmt 1 view .LVU2380
1317:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7465              		.loc 1 1317 15 is_stmt 0 view .LVU2381
 7466 0ade 0E3C     		subs	r4, r4, #14
 7467              	.LVL587:
1317:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7468              		.loc 1 1317 5 view .LVU2382
 7469 0ae0 E3B2     		uxtb	r3, r4
 7470 0ae2 012B     		cmp	r3, #1
 7471 0ae4 3FF677AD 		bhi	.L1065
1318:src/keys.c    **** 
 7472              		.loc 1 1318 3 is_stmt 1 view .LVU2383
 7473 0ae8 4D4B     		ldr	r3, .L1151+20
 7474              	.LBB1020:
 7475              	.LBB1021:
 666:src/keys.c    **** }
 7476              		.loc 1 666 15 is_stmt 0 view .LVU2384
 7477 0aea 727C     		ldrb	r2, [r6, #17]	@ zero_extendqisi2
 7478              	.LBE1021:
 7479              	.LBE1020:
1318:src/keys.c    **** 
 7480              		.loc 1 1318 3 view .LVU2385
 7481 0aec 03EB4404 		add	r4, r3, r4, lsl #1
 7482              	.LVL588:
1320:src/keys.c    **** }
 7483              		.loc 1 1320 9 view .LVU2386
 7484 0af0 4FF0330B 		mov	fp, #51
 7485              	.LVL589:
1318:src/keys.c    **** 
 7486              		.loc 1 1318 3 view .LVU2387
 7487 0af4 14F80A30 		ldrb	r3, [r4, r10]	@ zero_extendqisi2
 7488              	.LVL590:
 7489              	.LBB1023:
 7490              	.LBI1020:
 665:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 7491              		.loc 1 665 13 is_stmt 1 view .LVU2388
 7492              	.LBB1022:
 666:src/keys.c    **** }
 7493              		.loc 1 666 2 view .LVU2389
 666:src/keys.c    **** }
 7494              		.loc 1 666 15 is_stmt 0 view .LVU2390
 7495 0af8 9A42     		cmp	r2, r3
 7496 0afa 08BF     		it	eq
 7497 0afc 0023     		moveq	r3, #0
 7498              	.LVL591:
 666:src/keys.c    **** }
 7499              		.loc 1 666 15 view .LVU2391
 7500 0afe 7374     		strb	r3, [r6, #17]
ARM GAS  /tmp/ccOshYsA.s 			page 228


 667:src/keys.c    **** 
 7501              		.loc 1 667 1 view .LVU2392
 7502 0b00 FFF70CBB 		b	.L566
 7503              	.LVL592:
 7504              	.L1126:
 667:src/keys.c    **** 
 7505              		.loc 1 667 1 view .LVU2393
 7506              	.LBE1022:
 7507              	.LBE1023:
 7508              	.LBE1025:
 7509              	.LBE1028:
 7510              	.LBB1029:
 7511              	.LBB685:
 281:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7512              		.loc 1 281 74 view .LVU2394
 7513 0b04 7369     		ldr	r3, [r6, #20]
 7514 0b06 4749     		ldr	r1, .L1151+24
 7515 0b08 0B42     		tst	r3, r1
 7516 0b0a 3DD0     		beq	.L654
 284:src/keys.c    ****     /*
 7517              		.loc 1 284 3 is_stmt 1 view .LVU2395
 284:src/keys.c    ****     /*
 7518              		.loc 1 284 23 is_stmt 0 view .LVU2396
 7519 0b0c 4649     		ldr	r1, .L1151+28
 284:src/keys.c    ****     /*
 7520              		.loc 1 284 6 view .LVU2397
 7521 0b0e 0B42     		tst	r3, r1
 7522 0b10 3FF4FFAB 		beq	.L852
 7523              	.L656:
 7524              	.LBB680:
 353:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7525              		.loc 1 353 5 is_stmt 1 view .LVU2398
 375:src/keys.c    **** 
 7526              		.loc 1 375 5 view .LVU2399
 380:src/keys.c    ****     col = smap[shift];
 7527              		.loc 1 380 5 view .LVU2400
 7528              	.LVL593:
 381:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7529              		.loc 1 381 5 view .LVU2401
 381:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7530              		.loc 1 381 15 is_stmt 0 view .LVU2402
 7531 0b14 4549     		ldr	r1, .L1151+32
 380:src/keys.c    ****     col = smap[shift];
 7532              		.loc 1 380 8 view .LVU2403
 7533 0b16 464B     		ldr	r3, .L1151+36
 381:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7534              		.loc 1 381 9 view .LVU2404
 7535 0b18 11F80AC0 		ldrb	ip, [r1, r10]	@ zero_extendqisi2
 7536              	.LVL594:
 382:src/keys.c    ****   }
 7537              		.loc 1 382 5 is_stmt 1 view .LVU2405
 382:src/keys.c    ****   }
 7538              		.loc 1 382 9 is_stmt 0 view .LVU2406
 7539 0b1c 0621     		movs	r1, #6
 7540 0b1e 06E4     		b	.L659
 7541              	.LVL595:
 7542              	.L1114:
ARM GAS  /tmp/ccOshYsA.s 			page 229


 382:src/keys.c    ****   }
 7543              		.loc 1 382 9 view .LVU2407
 7544              	.LBE680:
 7545              	.LBE685:
 7546              	.LBE1029:
 7547              	.LBB1030:
 7548              	.LBB970:
1357:src/keys.c    **** 	}
 7549              		.loc 1 1357 3 is_stmt 1 view .LVU2408
 7550              	.LBB966:
 7551              	.LBI966:
1326:src/keys.c    **** 	const int val = State2.digval * 10 + n;
 7552              		.loc 1 1326 12 view .LVU2409
 7553              	.LBB967:
1327:src/keys.c    **** 	const int lib = nLIB(state_pc());
 7554              		.loc 1 1327 2 view .LVU2410
1328:src/keys.c    **** 
 7555              		.loc 1 1328 18 is_stmt 0 view .LVU2411
 7556 0b20 3E4A     		ldr	r2, .L1151+16
1327:src/keys.c    **** 	const int lib = nLIB(state_pc());
 7557              		.loc 1 1327 24 view .LVU2412
 7558 0b22 3489     		ldrh	r4, [r6, #8]
1328:src/keys.c    **** 
 7559              		.loc 1 1328 18 view .LVU2413
 7560 0b24 B2F8E097 		ldrh	r9, [r2, #2016]
 7561 0b28 4FEA9939 		lsr	r9, r9, #14
1330:src/keys.c    **** 		return val;
 7562              		.loc 1 1330 12 view .LVU2414
 7563 0b2c 4846     		mov	r0, r9
1327:src/keys.c    **** 	const int lib = nLIB(state_pc());
 7564              		.loc 1 1327 32 view .LVU2415
 7565 0b2e 04EB8404 		add	r4, r4, r4, lsl #2
1327:src/keys.c    **** 	const int lib = nLIB(state_pc());
 7566              		.loc 1 1327 12 view .LVU2416
 7567 0b32 03EB4404 		add	r4, r3, r4, lsl #1
 7568              	.LVL596:
1328:src/keys.c    **** 
 7569              		.loc 1 1328 2 is_stmt 1 view .LVU2417
1330:src/keys.c    **** 		return val;
 7570              		.loc 1 1330 2 view .LVU2418
1330:src/keys.c    **** 		return val;
 7571              		.loc 1 1330 12 is_stmt 0 view .LVU2419
 7572 0b36 FFF7FEFF 		bl	sizeLIB
 7573              	.LVL597:
1330:src/keys.c    **** 		return val;
 7574              		.loc 1 1330 25 view .LVU2420
 7575 0b3a 3E4A     		ldr	r2, .L1151+40
 7576 0b3c 82FB0032 		smull	r3, r2, r2, r0
 7577 0b40 C317     		asrs	r3, r0, #31
 7578 0b42 C3EBA203 		rsb	r3, r3, r2, asr #2
1330:src/keys.c    **** 		return val;
 7579              		.loc 1 1330 5 view .LVU2421
 7580 0b46 9C42     		cmp	r4, r3
 7581 0b48 0CDC     		bgt	.L598
1332:src/keys.c    **** 		return val;
 7582              		.loc 1 1332 2 is_stmt 1 view .LVU2422
1332:src/keys.c    **** 		return val;
ARM GAS  /tmp/ccOshYsA.s 			page 230


 7583              		.loc 1 1332 6 is_stmt 0 view .LVU2423
 7584 0b4a F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
1332:src/keys.c    **** 		return val;
 7585              		.loc 1 1332 29 view .LVU2424
 7586 0b4c 19F0010F 		tst	r9, #1
1332:src/keys.c    **** 		return val;
 7587              		.loc 1 1332 6 view .LVU2425
 7588 0b50 03F10103 		add	r3, r3, #1
 7589 0b54 DBB2     		uxtb	r3, r3
1332:src/keys.c    **** 		return val;
 7590              		.loc 1 1332 29 view .LVU2426
 7591 0b56 0CBF     		ite	eq
 7592 0b58 0322     		moveq	r2, #3
 7593 0b5a 0422     		movne	r2, #4
1332:src/keys.c    **** 		return val;
 7594              		.loc 1 1332 5 view .LVU2427
 7595 0b5c 9342     		cmp	r3, r2
 7596 0b5e F372     		strb	r3, [r6, #11]
 7597 0b60 40F08685 		bne	.L687
 7598              	.LVL598:
 7599              	.L598:
1332:src/keys.c    **** 		return val;
 7600              		.loc 1 1332 5 view .LVU2428
 7601              	.LBE967:
 7602              	.LBE966:
1400:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7603              		.loc 1 1400 2 is_stmt 1 view .LVU2429
1401:src/keys.c    **** fin:		set_pc(rawpc);
 7604              		.loc 1 1401 3 view .LVU2430
1401:src/keys.c    **** fin:		set_pc(rawpc);
 7605              		.loc 1 1401 11 is_stmt 0 view .LVU2431
 7606 0b64 2046     		mov	r0, r4
 7607 0b66 FFF7FEFF 		bl	find_user_pc
 7608              	.LVL599:
1401:src/keys.c    **** fin:		set_pc(rawpc);
 7609              		.loc 1 1401 11 view .LVU2432
 7610 0b6a 39E7     		b	.L603
 7611              	.LVL600:
 7612              	.L890:
1401:src/keys.c    **** fin:		set_pc(rawpc);
 7613              		.loc 1 1401 11 view .LVU2433
 7614              	.LBE970:
 7615              	.LBE1030:
 7616              	.LBE1219:
 7617              	.LBE1279:
 7618              	.LBB1280:
 7619 0b6c C346     		mov	fp, r8
 7620              	.LVL601:
1401:src/keys.c    **** fin:		set_pc(rawpc);
 7621              		.loc 1 1401 11 view .LVU2434
 7622 0b6e FFF7F6BA 		b	.L838
 7623              	.LVL602:
 7624              	.L1096:
1401:src/keys.c    **** fin:		set_pc(rawpc);
 7625              		.loc 1 1401 11 view .LVU2435
 7626              	.LBE1280:
 7627              	.LBB1281:
ARM GAS  /tmp/ccOshYsA.s 			page 231


 7628              	.LBB1220:
 7629              	.LBB1031:
 7630              	.LBB686:
 390:src/keys.c    ****       break;
 7631              		.loc 1 390 7 is_stmt 1 view .LVU2436
 390:src/keys.c    ****       break;
 7632              		.loc 1 390 11 is_stmt 0 view .LVU2437
 7633 0b72 6344     		add	r3, r3, ip
 7634              	.LVL603:
 390:src/keys.c    ****       break;
 7635              		.loc 1 390 11 view .LVU2438
 7636 0b74 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7637              	.LVL604:
 391:src/keys.c    ****     }
 7638              		.loc 1 391 7 is_stmt 1 view .LVU2439
 394:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7639              		.loc 1 394 3 view .LVU2440
 394:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7640              		.loc 1 394 6 is_stmt 0 view .LVU2441
 7641 0b78 1307     		lsls	r3, r2, #28
 7642 0b7a 40F19380 		bpl	.L1125
 394:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7643              		.loc 1 394 20 view .LVU2442
 7644 0b7e ABF10B03 		sub	r3, fp, #11
 7645 0b82 042B     		cmp	r3, #4
 7646 0b84 3FF6C0AC 		bhi	.L669
 7647              	.LVL605:
 7648              	.L654:
 394:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7649              		.loc 1 394 20 view .LVU2443
 7650              	.LBE686:
 7651              	.LBE1031:
2912:src/keys.c    **** 			return STATE_UNFINISHED;
 7652              		.loc 1 2912 3 is_stmt 1 view .LVU2444
2912:src/keys.c    **** 			return STATE_UNFINISHED;
 7653              		.loc 1 2912 7 is_stmt 0 view .LVU2445
 7654 0b88 FFF7FEFF 		bl	is_bad_cmdline
 7655              	.LVL606:
2912:src/keys.c    **** 			return STATE_UNFINISHED;
 7656              		.loc 1 2912 6 view .LVU2446
 7657 0b8c 0446     		mov	r4, r0
 7658 0b8e 0028     		cmp	r0, #0
 7659 0b90 7FF421AD 		bne	.L1065
2914:src/keys.c    **** 		init_cat( cat );
 7660              		.loc 1 2914 3 is_stmt 1 view .LVU2447
 7661 0b94 FFF7FEFF 		bl	init_cat
 7662              	.LVL607:
2915:src/keys.c    **** 		return STATE_UNFINISHED;
 7663              		.loc 1 2915 3 view .LVU2448
 7664 0b98 5846     		mov	r0, fp
 7665 0b9a FFF7FEFF 		bl	init_cat
 7666              	.LVL608:
2916:src/keys.c    **** 	}
 7667              		.loc 1 2916 3 view .LVU2449
 7668              	.LBE1220:
 7669              	.LBE1281:
2977:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccOshYsA.s 			page 232


 7670              		.loc 1 2977 7 is_stmt 0 view .LVU2450
 7671 0b9e A046     		mov	r8, r4
 7672              	.LBB1282:
 7673              	.LBB1221:
2916:src/keys.c    **** 	}
 7674              		.loc 1 2916 10 view .LVU2451
 7675 0ba0 4FF0330B 		mov	fp, #51
 7676 0ba4 FFF7BABA 		b	.L566
 7677              	.LVL609:
 7678              	.L1094:
 7679              	.LBB1032:
 7680              	.LBB687:
 281:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7681              		.loc 1 281 16 view .LVU2452
 7682 0ba8 BAF1030F 		cmp	r10, #3
 7683 0bac AAD0     		beq	.L1126
 284:src/keys.c    ****     /*
 7684              		.loc 1 284 3 is_stmt 1 view .LVU2453
 284:src/keys.c    ****     /*
 7685              		.loc 1 284 23 is_stmt 0 view .LVU2454
 7686 0bae 1E49     		ldr	r1, .L1151+28
 7687 0bb0 7369     		ldr	r3, [r6, #20]
 284:src/keys.c    ****     /*
 7688              		.loc 1 284 6 view .LVU2455
 7689 0bb2 1942     		tst	r1, r3
 7690 0bb4 3FF4C7AB 		beq	.L664
 7691 0bb8 ACE7     		b	.L656
 7692              	.LVL610:
 7693              	.L623:
 284:src/keys.c    ****     /*
 7694              		.loc 1 284 6 view .LVU2456
 7695              	.LBE687:
 7696              	.LBE1032:
 7697              	.LBB1033:
 7698              	.LBB955:
1931:src/keys.c    **** 		// Special 0
 7699              		.loc 1 1931 7 is_stmt 1 view .LVU2457
1931:src/keys.c    **** 		// Special 0
 7700              		.loc 1 1931 10 is_stmt 0 view .LVU2458
 7701 0bba 0028     		cmp	r0, #0
 7702 0bbc 40F08180 		bne	.L626
1933:src/keys.c    **** 	}
 7703              		.loc 1 1933 3 is_stmt 1 view .LVU2459
1933:src/keys.c    **** 	}
 7704              		.loc 1 1933 18 is_stmt 0 view .LVU2460
 7705 0bc0 BEF1000F 		cmp	lr, #0
 7706 0bc4 14BF     		ite	ne
 7707 0bc6 2523     		movne	r3, #37
 7708 0bc8 1723     		moveq	r3, #23
1933:src/keys.c    **** 	}
 7709              		.loc 1 1933 47 view .LVU2461
 7710 0bca 9B44     		add	fp, fp, r3
 7711              	.LVL611:
1933:src/keys.c    **** 	}
 7712              		.loc 1 1933 47 view .LVU2462
 7713 0bcc E0E4     		b	.L595
 7714              	.LVL612:
ARM GAS  /tmp/ccOshYsA.s 			page 233


 7715              	.L628:
1939:src/keys.c    **** 		// digit 2..9, -> or .
 7716              		.loc 1 1939 7 is_stmt 1 view .LVU2463
1939:src/keys.c    **** 		// digit 2..9, -> or .
 7717              		.loc 1 1939 10 is_stmt 0 view .LVU2464
 7718 0bce 0928     		cmp	r0, #9
 7719 0bd0 3FF6C5AE 		bhi	.L622
 7720              	.L631:
1941:src/keys.c    **** 		return process_arg(c);
 7721              		.loc 1 1941 3 is_stmt 1 view .LVU2465
 7722              	.LVL613:
 7723              	.LBB952:
 7724              	.LBI952:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 7725              		.loc 1 520 13 view .LVU2466
 7726              	.LBB953:
 521:src/keys.c    **** 		return;
 7727              		.loc 1 521 2 view .LVU2467
 521:src/keys.c    **** 		return;
 7728              		.loc 1 521 6 is_stmt 0 view .LVU2468
 7729 0bd4 FFF7FEFF 		bl	is_bad_cmdline
 7730              	.LVL614:
 521:src/keys.c    **** 		return;
 7731              		.loc 1 521 5 view .LVU2469
 7732 0bd8 18B9     		cbnz	r0, .L633
 7733 0bda 5FFA8AF0 		uxtb	r0, r10
 7734 0bde FFF7FEFF 		bl	init_arg.part.0
 7735              	.LVL615:
 7736              	.L633:
 521:src/keys.c    **** 		return;
 7737              		.loc 1 521 5 view .LVU2470
 7738              	.LBE953:
 7739              	.LBE952:
1942:src/keys.c    **** 	}
 7740              		.loc 1 1942 3 is_stmt 1 view .LVU2471
1942:src/keys.c    **** 	}
 7741              		.loc 1 1942 10 is_stmt 0 view .LVU2472
 7742 0be2 2046     		mov	r0, r4
 7743 0be4 FFF7FEFF 		bl	process_arg
 7744              	.LVL616:
 7745 0be8 8346     		mov	fp, r0
 7746              	.LVL617:
1942:src/keys.c    **** 	}
 7747              		.loc 1 1942 10 view .LVU2473
 7748 0bea D1E4     		b	.L595
 7749              	.LVL618:
 7750              	.L1090:
1942:src/keys.c    **** 	}
 7751              		.loc 1 1942 10 view .LVU2474
 7752              	.LBE955:
 7753              	.LBE1033:
2886:src/keys.c    **** 		return STATE_UNFINISHED;
 7754              		.loc 1 2886 3 is_stmt 1 view .LVU2475
 7755              	.LBB1034:
 7756              	.LBI1034:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7757              		.loc 1 109 13 view .LVU2476
ARM GAS  /tmp/ccOshYsA.s 			page 234


 7758              	.LBB1035:
 110:src/keys.c    **** }
 7759              		.loc 1 110 2 view .LVU2477
 110:src/keys.c    **** }
 7760              		.loc 1 110 16 is_stmt 0 view .LVU2478
 7761 0bec 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 7762 0bee 013B     		subs	r3, r3, #1
 7763 0bf0 18BF     		it	ne
 7764 0bf2 0123     		movne	r3, #1
 7765 0bf4 3374     		strb	r3, [r6, #16]
 7766              	.LVL619:
 110:src/keys.c    **** }
 7767              		.loc 1 110 16 view .LVU2479
 7768              	.LBE1035:
 7769              	.LBE1034:
2887:src/keys.c    **** 	}
 7770              		.loc 1 2887 3 is_stmt 1 view .LVU2480
2887:src/keys.c    **** 	}
 7771              		.loc 1 2887 10 is_stmt 0 view .LVU2481
 7772 0bf6 4FF0330B 		mov	fp, #51
 7773 0bfa FFF78FBA 		b	.L566
 7774              	.LVL620:
 7775              	.L613:
 7776              	.LBB1036:
 7777              	.LBB751:
1275:src/keys.c    **** 		// fall trough
 7778              		.loc 1 1275 3 is_stmt 1 view .LVU2482
1275:src/keys.c    **** 		// fall trough
 7779              		.loc 1 1275 10 is_stmt 0 view .LVU2483
 7780 0bfe A4F12909 		sub	r9, r4, #41
 7781              	.LVL621:
1275:src/keys.c    **** 		// fall trough
 7782              		.loc 1 1275 10 view .LVU2484
 7783 0c02 B9FA89F9 		clz	r9, r9
 7784 0c06 4FEA5919 		lsr	r9, r9, #5
 7785              	.LVL622:
1275:src/keys.c    **** 		// fall trough
 7786              		.loc 1 1275 10 view .LVU2485
 7787 0c0a FEE6     		b	.L618
 7788              	.L1152:
 7789              		.align	2
 7790              	.L1151:
 7791 0c0c 00000000 		.word	StateWhileOn
 7792 0c10 B0070000 		.word	PersistentRam+1968
 7793 0c14 00000000 		.word	.LANCHOR1
 7794 0c18 00000000 		.word	.LANCHOR0
 7795 0c1c 00000000 		.word	PersistentRam
 7796 0c20 00000000 		.word	.LANCHOR15
 7797 0c24 000A4000 		.word	4196864
 7798 0c28 00080800 		.word	526336
 7799 0c2c 00000000 		.word	.LANCHOR16
 7800 0c30 00000000 		.word	.LANCHOR10
 7801 0c34 67666666 		.word	1717986919
 7802              	.LVL623:
 7803              	.L1091:
1275:src/keys.c    **** 		// fall trough
 7804              		.loc 1 1275 10 view .LVU2486
ARM GAS  /tmp/ccOshYsA.s 			page 235


 7805              	.LBE751:
 7806              	.LBE1036:
2890:src/keys.c    **** 		return STATE_UNFINISHED;
 7807              		.loc 1 2890 3 is_stmt 1 view .LVU2487
 7808              	.LBB1037:
 7809              	.LBI1037:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7810              		.loc 1 109 13 view .LVU2488
 7811              	.LBB1038:
 110:src/keys.c    **** }
 7812              		.loc 1 110 2 view .LVU2489
 110:src/keys.c    **** }
 7813              		.loc 1 110 16 is_stmt 0 view .LVU2490
 7814 0c38 327C     		ldrb	r2, [r6, #16]	@ zero_extendqisi2
 7815 0c3a 022A     		cmp	r2, #2
 7816 0c3c 18BF     		it	ne
 7817 0c3e 0223     		movne	r3, #2
 7818 0c40 3374     		strb	r3, [r6, #16]
 7819              	.LVL624:
 110:src/keys.c    **** }
 7820              		.loc 1 110 16 view .LVU2491
 7821              	.LBE1038:
 7822              	.LBE1037:
2891:src/keys.c    **** 	}
 7823              		.loc 1 2891 3 is_stmt 1 view .LVU2492
2891:src/keys.c    **** 	}
 7824              		.loc 1 2891 10 is_stmt 0 view .LVU2493
 7825 0c42 4FF0330B 		mov	fp, #51
 7826 0c46 FFF769BA 		b	.L566
 7827              	.LVL625:
 7828              	.L1105:
2891:src/keys.c    **** 	}
 7829              		.loc 1 2891 10 view .LVU2494
 7830              	.LBE1221:
 7831              	.LBE1282:
3198:src/keys.c    **** 	NonProgrammable = 0;
 7832              		.loc 1 3198 26 view .LVU2495
 7833 0c4a CA4A     		ldr	r2, .L1153
 7834 0c4c 1168     		ldr	r1, [r2]
 7835 0c4e 0029     		cmp	r1, #0
 7836 0c50 3FF4C7AD 		beq	.L835
 7837              	.LVL626:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 7838              		.loc 1 3199 2 is_stmt 1 view .LVU2496
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 7839              		.loc 1 3199 18 is_stmt 0 view .LVU2497
 7840 0c54 1360     		str	r3, [r2]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 7841              		.loc 1 3200 2 is_stmt 1 view .LVU2498
 7842 0c56 13E4     		b	.L830
 7843              	.LVL627:
 7844              	.L1092:
 7845              	.LBB1283:
 7846              	.LBB1222:
2894:src/keys.c    **** 		State2.arrow = 0;
 7847              		.loc 1 2894 3 view .LVU2499
 7848              	.LBB1039:
ARM GAS  /tmp/ccOshYsA.s 			page 236


 7849              	.LBI1039:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7850              		.loc 1 109 13 view .LVU2500
 7851              	.LBB1040:
 110:src/keys.c    **** }
 7852              		.loc 1 110 2 view .LVU2501
 110:src/keys.c    **** }
 7853              		.loc 1 110 16 is_stmt 0 view .LVU2502
 7854 0c58 307C     		ldrb	r0, [r6, #16]	@ zero_extendqisi2
 7855 0c5a 0328     		cmp	r0, #3
 7856              	.LBE1040:
 7857              	.LBE1039:
2895:src/keys.c    **** 		return STATE_UNFINISHED;
 7858              		.loc 1 2895 16 view .LVU2503
 7859 0c5c 61F38202 		bfi	r2, r1, #2, #1
 7860              	.LBB1043:
 7861              	.LBB1041:
 110:src/keys.c    **** }
 7862              		.loc 1 110 16 view .LVU2504
 7863 0c60 18BF     		it	ne
 7864 0c62 0323     		movne	r3, #3
 7865              	.LBE1041:
 7866              	.LBE1043:
2895:src/keys.c    **** 		return STATE_UNFINISHED;
 7867              		.loc 1 2895 16 view .LVU2505
 7868 0c64 7275     		strb	r2, [r6, #21]
 7869              	.LBB1044:
 7870              	.LBB1042:
 110:src/keys.c    **** }
 7871              		.loc 1 110 16 view .LVU2506
 7872 0c66 3374     		strb	r3, [r6, #16]
 7873              	.LVL628:
 110:src/keys.c    **** }
 7874              		.loc 1 110 16 view .LVU2507
 7875              	.LBE1042:
 7876              	.LBE1044:
2895:src/keys.c    **** 		return STATE_UNFINISHED;
 7877              		.loc 1 2895 3 is_stmt 1 view .LVU2508
2896:src/keys.c    **** 	}
 7878              		.loc 1 2896 3 view .LVU2509
2896:src/keys.c    **** 	}
 7879              		.loc 1 2896 10 is_stmt 0 view .LVU2510
 7880 0c68 4FF0330B 		mov	fp, #51
 7881 0c6c FFF756BA 		b	.L566
 7882              	.LVL629:
 7883              	.L1117:
 7884              	.LBB1045:
 7885              	.LBB971:
1371:src/keys.c    **** 	}
 7886              		.loc 1 1371 3 is_stmt 1 view .LVU2511
1371:src/keys.c    **** 	}
 7887              		.loc 1 1371 6 is_stmt 0 view .LVU2512
 7888 0c70 3489     		ldrh	r4, [r6, #8]
 7889              	.LVL630:
1371:src/keys.c    **** 	}
 7890              		.loc 1 1371 6 view .LVU2513
 7891 0c72 77E7     		b	.L598
ARM GAS  /tmp/ccOshYsA.s 			page 237


 7892              	.LVL631:
 7893              	.L1120:
1371:src/keys.c    **** 	}
 7894              		.loc 1 1371 6 view .LVU2514
 7895              	.LBE971:
 7896              	.LBE1045:
 7897              	.LBB1046:
 7898              	.LBB993:
2487:src/keys.c    **** 			n = max;
 7899              		.loc 1 2487 3 is_stmt 1 view .LVU2515
2487:src/keys.c    **** 			n = max;
 7900              		.loc 1 2487 6 is_stmt 0 view .LVU2516
 7901 0c74 191F     		subs	r1, r3, #4
 7902              	.LVL632:
2487:src/keys.c    **** 			n = max;
 7903              		.loc 1 2487 6 view .LVU2517
 7904 0c76 012B     		cmp	r3, #1
 7905 0c78 18BF     		it	ne
 7906 0c7a 0A46     		movne	r2, r1
 7907              	.LVL633:
2487:src/keys.c    **** 			n = max;
 7908              		.loc 1 2487 6 view .LVU2518
 7909 0c7c 08E7     		b	.L639
 7910              	.LVL634:
 7911              	.L1115:
2487:src/keys.c    **** 			n = max;
 7912              		.loc 1 2487 6 view .LVU2519
 7913              	.LBE993:
 7914              	.LBE1046:
 7915              	.LBB1047:
 7916              	.LBB972:
1361:src/keys.c    **** 		goto fin;
 7917              		.loc 1 1361 3 is_stmt 1 view .LVU2520
 7918              	.LBB968:
 7919              	.LBI968:
1338:src/keys.c    **** 	const int code = 100 + n;
 7920              		.loc 1 1338 12 view .LVU2521
 7921              	.LBB969:
1339:src/keys.c    **** 	unsigned int pc = state_pc();
 7922              		.loc 1 1339 2 view .LVU2522
1340:src/keys.c    **** 
 7923              		.loc 1 1340 2 view .LVU2523
1340:src/keys.c    **** 
 7924              		.loc 1 1340 20 is_stmt 0 view .LVU2524
 7925 0c7e DFF8F892 		ldr	r9, .L1153+4
1340:src/keys.c    **** 
 7926              		.loc 1 1340 15 view .LVU2525
 7927 0c82 B9F8E007 		ldrh	r0, [r9, #2016]
 7928              	.LVL635:
1342:src/keys.c    **** 		pc = 1;
 7929              		.loc 1 1342 2 is_stmt 1 view .LVU2526
1342:src/keys.c    **** 		pc = 1;
 7930              		.loc 1 1342 5 is_stmt 0 view .LVU2527
 7931 0c86 830B     		lsrs	r3, r0, #14
 7932              	.LVL636:
1343:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 7933              		.loc 1 1343 6 view .LVU2528
ARM GAS  /tmp/ccOshYsA.s 			page 238


 7934 0c88 032B     		cmp	r3, #3
 7935              	.LVL637:
1344:src/keys.c    **** 	if (pc > 0)
 7936              		.loc 1 1344 2 is_stmt 1 view .LVU2529
1344:src/keys.c    **** 	if (pc > 0)
 7937              		.loc 1 1344 7 is_stmt 0 view .LVU2530
 7938 0c8a 08BF     		it	eq
 7939 0c8c 0120     		moveq	r0, #1
 7940              	.LVL638:
1344:src/keys.c    **** 	if (pc > 0)
 7941              		.loc 1 1344 7 view .LVU2531
 7942 0c8e 04F16401 		add	r1, r4, #100
 7943              	.LVL639:
1344:src/keys.c    **** 	if (pc > 0)
 7944              		.loc 1 1344 7 view .LVU2532
 7945 0c92 0322     		movs	r2, #3
 7946              	.LVL640:
1344:src/keys.c    **** 	if (pc > 0)
 7947              		.loc 1 1344 7 view .LVU2533
 7948 0c94 FFF7FEFF 		bl	find_label_from
 7949              	.LVL641:
1345:src/keys.c    **** 		return pc;
 7950              		.loc 1 1345 2 is_stmt 1 view .LVU2534
1345:src/keys.c    **** 		return pc;
 7951              		.loc 1 1345 5 is_stmt 0 view .LVU2535
 7952 0c98 0028     		cmp	r0, #0
 7953 0c9a 7FF4A1AE 		bne	.L603
1347:src/keys.c    **** }
 7954              		.loc 1 1347 2 is_stmt 1 view .LVU2536
1347:src/keys.c    **** }
 7955              		.loc 1 1347 9 is_stmt 0 view .LVU2537
 7956 0c9e B9F8E007 		ldrh	r0, [r9, #2016]
 7957              	.LVL642:
1347:src/keys.c    **** }
 7958              		.loc 1 1347 9 view .LVU2538
 7959              	.LBE969:
 7960              	.LBE968:
1362:src/keys.c    **** 	}
 7961              		.loc 1 1362 3 is_stmt 1 view .LVU2539
 7962 0ca2 9DE6     		b	.L603
 7963              	.LVL643:
 7964              	.L1125:
1362:src/keys.c    **** 	}
 7965              		.loc 1 1362 3 is_stmt 0 view .LVU2540
 7966              	.LBE972:
 7967              	.LBE1047:
2911:src/keys.c    **** 		if (is_bad_cmdline())
 7968              		.loc 1 2911 2 is_stmt 1 view .LVU2541
2911:src/keys.c    **** 		if (is_bad_cmdline())
 7969              		.loc 1 2911 5 is_stmt 0 view .LVU2542
 7970 0ca4 BBF1000F 		cmp	fp, #0
 7971 0ca8 7FF46EAF 		bne	.L654
 7972 0cac FFF74EBB 		b	.L668
 7973              	.LVL644:
 7974              	.L1116:
 7975              	.LBB1048:
 7976              	.LBB973:
ARM GAS  /tmp/ccOshYsA.s 			page 239


1366:src/keys.c    **** 		goto fin;
 7977              		.loc 1 1366 3 is_stmt 1 view .LVU2543
1366:src/keys.c    **** 		goto fin;
 7978              		.loc 1 1366 11 is_stmt 0 view .LVU2544
 7979 0cb0 B14B     		ldr	r3, .L1153+4
 7980              	.LVL645:
1366:src/keys.c    **** 		goto fin;
 7981              		.loc 1 1366 9 view .LVU2545
 7982 0cb2 5888     		ldrh	r0, [r3, #2]
 7983              	.LVL646:
1367:src/keys.c    **** 	}
 7984              		.loc 1 1367 3 is_stmt 1 view .LVU2546
 7985 0cb4 94E6     		b	.L603
 7986              	.LVL647:
 7987              	.L1124:
1367:src/keys.c    **** 	}
 7988              		.loc 1 1367 3 is_stmt 0 view .LVU2547
 7989              	.LBE973:
 7990              	.LBE1048:
 7991              	.LBB1049:
 7992              	.LBB1026:
1315:src/keys.c    **** 
 7993              		.loc 1 1315 3 is_stmt 1 view .LVU2548
1315:src/keys.c    **** 
 7994              		.loc 1 1315 25 is_stmt 0 view .LVU2549
 7995 0cb6 B14A     		ldr	r2, .L1153+8
 7996 0cb8 0AEB4303 		add	r3, r10, r3, lsl #1
 7997 0cbc 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 7998              	.LVL648:
1315:src/keys.c    **** 
 7999              		.loc 1 1315 25 view .LVU2550
 8000 0cc0 66E4     		b	.L595
 8001              	.LVL649:
 8002              	.L626:
1315:src/keys.c    **** 
 8003              		.loc 1 1315 25 view .LVU2551
 8004              	.LBE1026:
 8005              	.LBE1049:
 8006              	.LBB1050:
 8007              	.LBB956:
1935:src/keys.c    **** 		// Special 1
 8008              		.loc 1 1935 7 is_stmt 1 view .LVU2552
1935:src/keys.c    **** 		// Special 1
 8009              		.loc 1 1935 10 is_stmt 0 view .LVU2553
 8010 0cc2 0128     		cmp	r0, #1
 8011 0cc4 83D1     		bne	.L628
1937:src/keys.c    **** 	}
 8012              		.loc 1 1937 3 is_stmt 1 view .LVU2554
1937:src/keys.c    **** 	}
 8013              		.loc 1 1937 18 is_stmt 0 view .LVU2555
 8014 0cc6 BEF1000F 		cmp	lr, #0
 8015 0cca 3FF4BBAE 		beq	.L849
 8016              	.L629:
1937:src/keys.c    **** 	}
 8017              		.loc 1 1937 18 view .LVU2556
 8018 0cce 2723     		movs	r3, #39
1937:src/keys.c    **** 	}
ARM GAS  /tmp/ccOshYsA.s 			page 240


 8019              		.loc 1 1937 47 view .LVU2557
 8020 0cd0 9B44     		add	fp, fp, r3
 8021              	.LVL650:
1937:src/keys.c    **** 	}
 8022              		.loc 1 1937 47 view .LVU2558
 8023 0cd2 5DE4     		b	.L595
 8024              	.LVL651:
 8025              	.L1118:
1937:src/keys.c    **** 	}
 8026              		.loc 1 1937 47 view .LVU2559
 8027              	.LBE956:
 8028              	.LBE1050:
 8029              	.LBB1051:
 8030              	.LBB974:
1375:src/keys.c    **** 			goto fin2;
 8031              		.loc 1 1375 3 is_stmt 1 view .LVU2560
1375:src/keys.c    **** 			goto fin2;
 8032              		.loc 1 1375 13 is_stmt 0 view .LVU2561
 8033 0cd4 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 8034              	.LVL652:
1375:src/keys.c    **** 			goto fin2;
 8035              		.loc 1 1375 6 view .LVU2562
 8036 0cd6 002B     		cmp	r3, #0
 8037 0cd8 3FF484AE 		beq	.L607
1378:src/keys.c    **** 			State2.digval /= 10;
 8038              		.loc 1 1378 4 is_stmt 1 view .LVU2563
1378:src/keys.c    **** 			State2.digval /= 10;
 8039              		.loc 1 1378 19 is_stmt 0 view .LVU2564
 8040 0cdc 013B     		subs	r3, r3, #1
 8041 0cde F372     		strb	r3, [r6, #11]
1379:src/keys.c    **** 		}
 8042              		.loc 1 1379 4 is_stmt 1 view .LVU2565
1379:src/keys.c    **** 		}
 8043              		.loc 1 1379 18 is_stmt 0 view .LVU2566
 8044 0ce0 0A22     		movs	r2, #10
 8045              	.LVL653:
1379:src/keys.c    **** 		}
 8046              		.loc 1 1379 18 view .LVU2567
 8047 0ce2 3389     		ldrh	r3, [r6, #8]
 8048 0ce4 B3FBF2F3 		udiv	r3, r3, r2
 8049              	.LBE974:
 8050              	.LBE1051:
2871:src/keys.c    **** 
 8051              		.loc 1 2871 10 view .LVU2568
 8052 0ce8 4FF0330B 		mov	fp, #51
 8053              	.LBB1052:
 8054              	.LBB975:
1379:src/keys.c    **** 		}
 8055              		.loc 1 1379 18 view .LVU2569
 8056 0cec 3381     		strh	r3, [r6, #8]	@ movhi
1400:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8057              		.loc 1 1400 2 is_stmt 1 view .LVU2570
 8058 0cee FFF715BA 		b	.L566
 8059              	.LVL654:
 8060              	.L1121:
1400:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8061              		.loc 1 1400 2 is_stmt 0 view .LVU2571
ARM GAS  /tmp/ccOshYsA.s 			page 241


 8062              	.LBE975:
 8063              	.LBE1052:
 8064              	.LBB1053:
 8065              	.LBB994:
2491:src/keys.c    **** 			n = -2;
 8066              		.loc 1 2491 3 is_stmt 1 view .LVU2572
2491:src/keys.c    **** 			n = -2;
 8067              		.loc 1 2491 6 is_stmt 0 view .LVU2573
 8068 0cf2 023B     		subs	r3, r3, #2
 8069              	.LVL655:
2492:src/keys.c    **** 	}
 8070              		.loc 1 2492 6 view .LVU2574
 8071 0cf4 9342     		cmp	r3, r2
 8072 0cf6 D4BF     		ite	le
 8073 0cf8 1A46     		movle	r2, r3
 8074              	.LVL656:
2492:src/keys.c    **** 	}
 8075              		.loc 1 2492 6 view .LVU2575
 8076 0cfa 6FF00102 		mvngt	r2, #1
 8077 0cfe C7E6     		b	.L639
 8078              	.LVL657:
 8079              	.L864:
2492:src/keys.c    **** 	}
 8080              		.loc 1 2492 6 view .LVU2576
 8081              	.LBE994:
 8082              	.LBE1053:
 8083              	.LBB1054:
 8084              	.LBB688:
 8085              	.LBB681:
 340:src/keys.c    **** #ifndef WINGUI
 8086              		.loc 1 340 8 view .LVU2577
 8087 0d00 9F4B     		ldr	r3, .L1153+12
 346:src/keys.c    ****   }
 8088              		.loc 1 346 9 view .LVU2578
 8089 0d02 0C21     		movs	r1, #12
 342:src/keys.c    **** #else
 8090              		.loc 1 342 27 view .LVU2579
 8091 0d04 4FF0010C 		mov	ip, #1
 8092 0d08 FFF711BB 		b	.L659
 8093              	.LVL658:
 8094              	.L1098:
 342:src/keys.c    **** #else
 8095              		.loc 1 342 27 view .LVU2580
 8096              	.LBE681:
 8097              	.LBE688:
 8098              	.LBE1054:
2926:src/keys.c    **** 
 8099              		.loc 1 2926 3 is_stmt 1 view .LVU2581
 8100              	.LBB1055:
 8101              	.LBI1055:
2561:src/keys.c    **** 	unsigned int pc = State2.digval;
 8102              		.loc 1 2561 12 view .LVU2582
 8103              	.LBB1056:
2562:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8104              		.loc 1 2562 2 view .LVU2583
2564:src/keys.c    **** 	const int opcode = getprog(pc);
 8105              		.loc 1 2564 27 is_stmt 0 view .LVU2584
ARM GAS  /tmp/ccOshYsA.s 			page 242


 8106 0d0c 262C     		cmp	r4, #38
2562:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8107              		.loc 1 2562 15 view .LVU2585
 8108 0d0e B6F808A0 		ldrh	r10, [r6, #8]
 8109              	.LVL659:
2563:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8110              		.loc 1 2563 2 is_stmt 1 view .LVU2586
2564:src/keys.c    **** 	const int opcode = getprog(pc);
 8111              		.loc 1 2564 27 is_stmt 0 view .LVU2587
 8112 0d12 00F0B382 		beq	.L869
 8113              	.LVL660:
 8114              	.LBB1057:
 8115              	.LBI1057:
 208:src/keys.c    **** {
 8116              		.loc 1 208 14 is_stmt 1 view .LVU2588
 8117              	.LBB1058:
 210:src/keys.c    ****     // K00 - K05
 8118              		.loc 1 210 3 view .LVU2589
 232:src/keys.c    **** }
 8119              		.loc 1 232 3 view .LVU2590
 8120              	.LBB1059:
 8121              	.LBI1059:
 124:src/keys.c    **** {
 8122              		.loc 1 124 12 view .LVU2591
 8123              	.LBB1060:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8124              		.loc 1 126 2 view .LVU2592
 136:src/keys.c    **** }
 8125              		.loc 1 136 2 view .LVU2593
 136:src/keys.c    **** }
 8126              		.loc 1 136 23 is_stmt 0 view .LVU2594
 8127 0d16 9B4B     		ldr	r3, .L1153+16
 8128              	.LBE1060:
 8129              	.LBE1059:
 232:src/keys.c    **** }
 8130              		.loc 1 232 28 view .LVU2595
 8131 0d18 9B4A     		ldr	r2, .L1153+20
 8132              	.LBB1062:
 8133              	.LBB1061:
 136:src/keys.c    **** }
 8134              		.loc 1 136 23 view .LVU2596
 8135 0d1a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8136              	.LBE1061:
 8137              	.LBE1062:
 232:src/keys.c    **** }
 8138              		.loc 1 232 10 view .LVU2597
 8139 0d1c 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8140              	.LBE1058:
 8141              	.LBE1057:
2564:src/keys.c    **** 	const int opcode = getprog(pc);
 8142              		.loc 1 2564 27 view .LVU2598
 8143 0d20 2BF0800B 		bic	fp, fp, #128
 8144              	.L683:
 8145              	.LVL661:
2565:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8146              		.loc 1 2565 2 is_stmt 1 view .LVU2599
2565:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
ARM GAS  /tmp/ccOshYsA.s 			page 243


 8147              		.loc 1 2565 21 is_stmt 0 view .LVU2600
 8148 0d24 5046     		mov	r0, r10
 8149 0d26 FFF7FEFF 		bl	getprog
 8150              	.LVL662:
2566:src/keys.c    **** 	const int direct = State2.runmode;
 8151              		.loc 1 2566 2 is_stmt 1 view .LVU2601
2566:src/keys.c    **** 	const int direct = State2.runmode;
 8152              		.loc 1 2566 20 is_stmt 0 view .LVU2602
 8153 0d2a 00F47040 		and	r0, r0, #61440
 8154              	.LVL663:
2566:src/keys.c    **** 	const int direct = State2.runmode;
 8155              		.loc 1 2566 63 view .LVU2603
 8156 0d2e B0F5704F 		cmp	r0, #61440
 8157 0d32 00F0B584 		beq	.L1127
 8158 0d36 0023     		movs	r3, #0
 8159              	.L684:
 8160              	.LVL664:
2567:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8161              		.loc 1 2567 2 is_stmt 1 view .LVU2604
2567:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8162              		.loc 1 2567 27 is_stmt 0 view .LVU2605
 8163 0d38 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
 8164 0d3a 0193     		str	r3, [sp, #4]
 8165              	.LVL665:
2567:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8166              		.loc 1 2567 27 view .LVU2606
 8167 0d3c C2F38012 		ubfx	r2, r2, #6, #1
 8168 0d40 0092     		str	r2, [sp]
 8169              	.LVL666:
2568:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8170              		.loc 1 2568 2 is_stmt 1 view .LVU2607
 8171              	.LBB1063:
 8172              	.LBI1063:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8173              		.loc 1 102 13 view .LVU2608
 8174              	.LBE1063:
 8175              	.LBE1056:
 8176              	.LBE1055:
 8177              	.LBE1222:
 8178              	.LBE1283:
 103:src/keys.c    **** }
 8179              		.loc 1 103 2 view .LVU2609
 8180              	.LBB1284:
 8181              	.LBB1223:
 8182              	.LBB1091:
 8183              	.LBB1084:
 8184              	.LBB1070:
 8185              	.LBB1064:
 8186              	.LBI1064:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8187              		.loc 1 92 20 view .LVU2610
 8188              	.LBB1065:
  93:src/keys.c    **** 	State2.shifts = shift;
 8189              		.loc 1 93 2 view .LVU2611
 8190              	.LBB1066:
 8191              	.LBI1066:
  84:src/keys.c    **** 	enum shifts s = shift_down();
ARM GAS  /tmp/ccOshYsA.s 			page 244


 8192              		.loc 1 84 13 view .LVU2612
 8193              	.LBB1067:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8194              		.loc 1 85 2 view .LVU2613
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8195              		.loc 1 85 18 is_stmt 0 view .LVU2614
 8196 0d42 FFF7FEFF 		bl	shift_down
 8197              	.LVL667:
  86:src/keys.c    **** }
 8198              		.loc 1 86 2 is_stmt 1 view .LVU2615
  86:src/keys.c    **** }
 8199              		.loc 1 86 52 is_stmt 0 view .LVU2616
 8200 0d46 DDE90023 		ldrd	r2, r3, [sp]
 8201 0d4a 00B9     		cbnz	r0, .L685
 8202 0d4c 307C     		ldrb	r0, [r6, #16]	@ zero_extendqisi2
 8203              	.LVL668:
 8204              	.L685:
  86:src/keys.c    **** }
 8205              		.loc 1 86 52 view .LVU2617
 8206              	.LBE1067:
 8207              	.LBE1066:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8208              		.loc 1 94 2 is_stmt 1 view .LVU2618
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8209              		.loc 1 94 16 is_stmt 0 view .LVU2619
 8210 0d4e 0021     		movs	r1, #0
 8211              	.LBE1065:
 8212              	.LBE1064:
 8213              	.LBE1070:
2571:src/keys.c    **** 		// Digits take you to that segment
 8214              		.loc 1 2571 5 view .LVU2620
 8215 0d50 BBF1020F 		cmp	fp, #2
 8216              	.LBB1071:
 8217              	.LBB1069:
 8218              	.LBB1068:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8219              		.loc 1 94 16 view .LVU2621
 8220 0d54 3174     		strb	r1, [r6, #16]
  95:src/keys.c    **** 	return r;
 8221              		.loc 1 95 2 is_stmt 1 view .LVU2622
  95:src/keys.c    **** 	return r;
 8222              		.loc 1 95 19 is_stmt 0 view .LVU2623
 8223 0d56 7173     		strb	r1, [r6, #13]
  96:src/keys.c    **** }
 8224              		.loc 1 96 2 is_stmt 1 view .LVU2624
 8225              	.LVL669:
  96:src/keys.c    **** }
 8226              		.loc 1 96 2 is_stmt 0 view .LVU2625
 8227              	.LBE1068:
 8228              	.LBE1069:
 8229              	.LBE1071:
2569:src/keys.c    **** 
 8230              		.loc 1 2569 2 is_stmt 1 view .LVU2626
2571:src/keys.c    **** 		// Digits take you to that segment
 8231              		.loc 1 2571 2 view .LVU2627
2571:src/keys.c    **** 		// Digits take you to that segment
 8232              		.loc 1 2571 5 is_stmt 0 view .LVU2628
ARM GAS  /tmp/ccOshYsA.s 			page 245


 8233 0d58 40F27C84 		bls	.L1128
2580:src/keys.c    **** 
 8234              		.loc 1 2580 2 is_stmt 1 view .LVU2629
2580:src/keys.c    **** 
 8235              		.loc 1 2580 12 is_stmt 0 view .LVU2630
 8236 0d5c 44EA0024 		orr	r4, r4, r0, lsl #8
2580:src/keys.c    **** 
 8237              		.loc 1 2580 2 view .LVU2631
 8238 0d60 272C     		cmp	r4, #39
 8239 0d62 00F3B880 		bgt	.L688
 8240 0d66 042C     		cmp	r4, #4
 8241 0d68 7FF735AC 		ble	.L1065
 8242 0d6c 053C     		subs	r4, r4, #5
 8243 0d6e 222C     		cmp	r4, #34
 8244 0d70 3FF631AC 		bhi	.L1065
 8245 0d74 01A1     		adr	r1, .L696
 8246 0d76 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 8247 0d7a 00BF     		.p2align 2
 8248              	.L696:
 8249 0d7c 810E0000 		.word	.L701+1
 8250 0d80 5B0E0000 		.word	.L872+1
 8251 0d84 5B0E0000 		.word	.L872+1
 8252 0d88 D7050000 		.word	.L1065+1
 8253 0d8c D7050000 		.word	.L1065+1
 8254 0d90 D7050000 		.word	.L1065+1
 8255 0d94 D7050000 		.word	.L1065+1
 8256 0d98 1B0E0000 		.word	.L1055+1
 8257 0d9c D7050000 		.word	.L1065+1
 8258 0da0 D7050000 		.word	.L1065+1
 8259 0da4 D7050000 		.word	.L1065+1
 8260 0da8 C30E0000 		.word	.L699+1
 8261 0dac D7050000 		.word	.L1065+1
 8262 0db0 B10E0000 		.word	.L698+1
 8263 0db4 D7050000 		.word	.L1065+1
 8264 0db8 D7050000 		.word	.L1065+1
 8265 0dbc D7050000 		.word	.L1065+1
 8266 0dc0 D7050000 		.word	.L1065+1
 8267 0dc4 D7050000 		.word	.L1065+1
 8268 0dc8 6D0E0000 		.word	.L697+1
 8269 0dcc D7050000 		.word	.L1065+1
 8270 0dd0 D7050000 		.word	.L1065+1
 8271 0dd4 D7050000 		.word	.L1065+1
 8272 0dd8 D7050000 		.word	.L1065+1
 8273 0ddc D7050000 		.word	.L1065+1
 8274 0de0 D7050000 		.word	.L1065+1
 8275 0de4 D7050000 		.word	.L1065+1
 8276 0de8 D7050000 		.word	.L1065+1
 8277 0dec D7050000 		.word	.L1065+1
 8278 0df0 D7050000 		.word	.L1065+1
 8279 0df4 D7050000 		.word	.L1065+1
 8280 0df8 D7050000 		.word	.L1065+1
 8281 0dfc D7050000 		.word	.L1065+1
 8282 0e00 D7050000 		.word	.L1065+1
 8283 0e04 8D0E0000 		.word	.L695+1
 8284              		.p2align 1
 8285              	.L702:
 8286 0e08 40F22733 		movw	r3, #807
ARM GAS  /tmp/ccOshYsA.s 			page 246


 8287 0e0c 9C42     		cmp	r4, r3
 8288 0e0e 7FF4E2AB 		bne	.L1065
2650:src/keys.c    **** 		goto set_pc_and_exit;
 8289              		.loc 1 2650 3 is_stmt 1 view .LVU2632
2650:src/keys.c    **** 		goto set_pc_and_exit;
 8290              		.loc 1 2650 18 is_stmt 0 view .LVU2633
 8291 0e12 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 8292 0e14 61F38613 		bfi	r3, r1, #6, #1
 8293 0e18 B375     		strb	r3, [r6, #22]
 8294              	.L1055:
2651:src/keys.c    **** 
 8295              		.loc 1 2651 3 is_stmt 1 view .LVU2634
2569:src/keys.c    **** 
 8296              		.loc 1 2569 6 is_stmt 0 view .LVU2635
 8297 0e1a 4FF0330B 		mov	fp, #51
 8298              	.LVL670:
 8299              	.L693:
2602:src/keys.c    **** 		break;
 8300              		.loc 1 2602 3 is_stmt 1 view .LVU2636
 8301 0e1e 5046     		mov	r0, r10
 8302              	.LVL671:
2602:src/keys.c    **** 		break;
 8303              		.loc 1 2602 3 is_stmt 0 view .LVU2637
 8304 0e20 FFF7FEFF 		bl	set_pc
 8305              	.LVL672:
2603:src/keys.c    **** 
 8306              		.loc 1 2603 3 is_stmt 1 view .LVU2638
 8307              	.L705:
2656:src/keys.c    **** 	State2.labellist = 0;
 8308              		.loc 1 2656 2 view .LVU2639
2657:src/keys.c    **** 	return check_confirm(op);
 8309              		.loc 1 2657 19 is_stmt 0 view .LVU2640
 8310 0e24 F17D     		ldrb	r1, [r6, #23]	@ zero_extendqisi2
2656:src/keys.c    **** 	State2.labellist = 0;
 8311              		.loc 1 2656 16 view .LVU2641
 8312 0e26 0022     		movs	r2, #0
 8313              	.LBB1072:
 8314              	.LBB1073:
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 8315              		.loc 1 639 5 view .LVU2642
 8316 0e28 CBF30723 		ubfx	r3, fp, #8, #8
 8317              	.LBE1073:
 8318              	.LBE1072:
2657:src/keys.c    **** 	return check_confirm(op);
 8319              		.loc 1 2657 19 view .LVU2643
 8320 0e2c 62F38201 		bfi	r1, r2, #2, #1
 8321              	.LBB1080:
 8322              	.LBB1076:
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 8323              		.loc 1 639 5 view .LVU2644
 8324 0e30 012B     		cmp	r3, #1
 8325              	.LBE1076:
 8326              	.LBE1080:
2657:src/keys.c    **** 	return check_confirm(op);
 8327              		.loc 1 2657 19 view .LVU2645
 8328 0e32 F175     		strb	r1, [r6, #23]
2656:src/keys.c    **** 	State2.labellist = 0;
ARM GAS  /tmp/ccOshYsA.s 			page 247


 8329              		.loc 1 2656 16 view .LVU2646
 8330 0e34 3281     		strh	r2, [r6, #8]	@ movhi
2657:src/keys.c    **** 	return check_confirm(op);
 8331              		.loc 1 2657 2 is_stmt 1 view .LVU2647
2658:src/keys.c    **** }
 8332              		.loc 1 2658 2 view .LVU2648
 8333              	.LVL673:
 8334              	.LBB1081:
 8335              	.LBI1072:
 638:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8336              		.loc 1 638 12 view .LVU2649
 8337              	.LBB1077:
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 8338              		.loc 1 639 2 view .LVU2650
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 8339              		.loc 1 639 5 is_stmt 0 view .LVU2651
 8340 0e36 7FF4ABAB 		bne	.L595
 8341              	.LVL674:
 8342              	.LBB1074:
 8343              	.LBI1074:
 638:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8344              		.loc 1 638 12 is_stmt 1 view .LVU2652
 8345              	.LBB1075:
 640:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 8346              		.loc 1 640 3 view .LVU2653
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 8347              		.loc 1 641 3 view .LVU2654
 640:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 8348              		.loc 1 640 13 is_stmt 0 view .LVU2655
 8349 0e3a 5FFA8BF3 		uxtb	r3, fp
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 8350              		.loc 1 641 25 view .LVU2656
 8351 0e3e 413B     		subs	r3, r3, #65
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 8352              		.loc 1 641 6 view .LVU2657
 8353 0e40 032B     		cmp	r3, #3
 8354 0e42 3FF6A5AB 		bhi	.L595
 8355              	.LVL675:
 8356              	.L1062:
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 8357              		.loc 1 641 6 view .LVU2658
 8358              	.LBE1075:
 8359              	.LBE1074:
 8360              	.LBE1077:
 8361              	.LBE1081:
 8362              	.LBE1084:
 8363              	.LBE1091:
 8364              	.LBB1092:
 8365              	.LBB920:
 8366              	.LBB889:
 8367              	.LBB890:
 8368              	.LBB891:
 8369              	.LBB892:
 642:src/keys.c    **** 			return STATE_UNFINISHED;
 8370              		.loc 1 642 4 is_stmt 1 view .LVU2659
 642:src/keys.c    **** 			return STATE_UNFINISHED;
 8371              		.loc 1 642 19 is_stmt 0 view .LVU2660
ARM GAS  /tmp/ccOshYsA.s 			page 248


 8372 0e46 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 642:src/keys.c    **** 			return STATE_UNFINISHED;
 8373              		.loc 1 642 35 view .LVU2661
 8374 0e48 ABF1400B 		sub	fp, fp, #64
 642:src/keys.c    **** 			return STATE_UNFINISHED;
 8375              		.loc 1 642 19 view .LVU2662
 8376 0e4c 6BF30203 		bfi	r3, fp, #0, #3
 8377 0e50 3375     		strb	r3, [r6, #20]
 643:src/keys.c    **** 		}
 8378              		.loc 1 643 4 is_stmt 1 view .LVU2663
 643:src/keys.c    **** 		}
 8379              		.loc 1 643 11 is_stmt 0 view .LVU2664
 8380 0e52 4FF0330B 		mov	fp, #51
 8381 0e56 FFF761B9 		b	.L566
 8382              	.LVL676:
 8383              	.L872:
 643:src/keys.c    **** 		}
 8384              		.loc 1 643 11 view .LVU2665
 8385              	.LBE892:
 8386              	.LBE891:
 8387              	.LBE890:
 8388              	.LBE889:
 8389              	.LBE920:
 8390              	.LBE1092:
 8391              	.LBB1093:
 8392              	.LBB1085:
2615:src/keys.c    **** #endif	    
 8393              		.loc 1 2615 13 view .LVU2666
 8394 0e5a 4FF4807B 		mov	fp, #256
 8395              	.LVL677:
2615:src/keys.c    **** #endif	    
 8396              		.loc 1 2615 13 view .LVU2667
 8397 0e5e DEE7     		b	.L693
 8398              	.LVL678:
 8399              	.L690:
2587:src/keys.c    **** 	case K_DOWN:				// Find next label
 8400              		.loc 1 2587 3 is_stmt 1 view .LVU2668
2587:src/keys.c    **** 	case K_DOWN:				// Find next label
 8401              		.loc 1 2587 8 is_stmt 0 view .LVU2669
 8402 0e60 5046     		mov	r0, r10
 8403              	.LVL679:
2587:src/keys.c    **** 	case K_DOWN:				// Find next label
 8404              		.loc 1 2587 8 view .LVU2670
 8405 0e62 0122     		movs	r2, #1
 8406 0e64 0021     		movs	r1, #0
 8407 0e66 FFF7FEFF 		bl	advance_to_next_label
 8408              	.LVL680:
 8409 0e6a 8246     		mov	r10, r0
 8410              	.LVL681:
 8411              	.L697:
2590:src/keys.c    **** 		return STATE_UNFINISHED;
 8412              		.loc 1 2590 3 is_stmt 1 view .LVU2671
2590:src/keys.c    **** 		return STATE_UNFINISHED;
 8413              		.loc 1 2590 19 is_stmt 0 view .LVU2672
 8414 0e6c 5046     		mov	r0, r10
 8415 0e6e 0022     		movs	r2, #0
 8416 0e70 0121     		movs	r1, #1
ARM GAS  /tmp/ccOshYsA.s 			page 249


 8417 0e72 FFF7FEFF 		bl	advance_to_next_label
 8418              	.LVL682:
2591:src/keys.c    **** 
 8419              		.loc 1 2591 10 view .LVU2673
 8420 0e76 4FF0330B 		mov	fp, #51
 8421              	.LVL683:
2590:src/keys.c    **** 		return STATE_UNFINISHED;
 8422              		.loc 1 2590 17 view .LVU2674
 8423 0e7a 3081     		strh	r0, [r6, #8]	@ movhi
2591:src/keys.c    **** 
 8424              		.loc 1 2591 3 is_stmt 1 view .LVU2675
2591:src/keys.c    **** 
 8425              		.loc 1 2591 10 is_stmt 0 view .LVU2676
 8426 0e7c FFF74EB9 		b	.L566
 8427              	.LVL684:
 8428              	.L701:
 8429              	.L706:
2620:src/keys.c    **** 		goto xeq_or_gto;
 8430              		.loc 1 2620 3 is_stmt 1 view .LVU2677
2620:src/keys.c    **** 		goto xeq_or_gto;
 8431              		.loc 1 2620 6 is_stmt 0 view .LVU2678
 8432 0e80 03F5007B 		add	fp, r3, #512
 8433              	.LVL685:
2621:src/keys.c    **** 
 8434              		.loc 1 2621 3 is_stmt 1 view .LVU2679
2626:src/keys.c    **** 			break;
 8435              		.loc 1 2626 3 view .LVU2680
2626:src/keys.c    **** 			break;
 8436              		.loc 1 2626 6 is_stmt 0 view .LVU2681
 8437 0e84 002B     		cmp	r3, #0
 8438 0e86 CDD1     		bne	.L705
 8439 0e88 FFF7A5BB 		b	.L1065
 8440              	.LVL686:
 8441              	.L695:
2642:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8442              		.loc 1 2642 3 is_stmt 1 view .LVU2682
2642:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8443              		.loc 1 2642 6 is_stmt 0 view .LVU2683
 8444 0e8c 002A     		cmp	r2, #0
 8445 0e8e 3FF4A2AB 		beq	.L1065
2642:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8446              		.loc 1 2642 14 view .LVU2684
 8447 0e92 002B     		cmp	r3, #0
 8448 0e94 3FF49FAB 		beq	.L1065
2643:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8449              		.loc 1 2643 4 is_stmt 1 view .LVU2685
 8450 0e98 5146     		mov	r1, r10
 8451 0e9a 0120     		movs	r0, #1
 8452              	.LVL687:
2643:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8453              		.loc 1 2643 4 is_stmt 0 view .LVU2686
 8454 0e9c FFF7FEFF 		bl	cmdgtocommon
 8455              	.LVL688:
2644:src/keys.c    **** 			break;
 8456              		.loc 1 2644 4 is_stmt 1 view .LVU2687
2645:src/keys.c    **** 		}
 8457              		.loc 1 2645 4 view .LVU2688
ARM GAS  /tmp/ccOshYsA.s 			page 250


2656:src/keys.c    **** 	State2.labellist = 0;
 8458              		.loc 1 2656 2 view .LVU2689
2657:src/keys.c    **** 	return check_confirm(op);
 8459              		.loc 1 2657 19 is_stmt 0 view .LVU2690
 8460 0ea0 F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
2656:src/keys.c    **** 	State2.labellist = 0;
 8461              		.loc 1 2656 16 view .LVU2691
 8462 0ea2 0023     		movs	r3, #0
2657:src/keys.c    **** 	return check_confirm(op);
 8463              		.loc 1 2657 19 view .LVU2692
 8464 0ea4 63F38202 		bfi	r2, r3, #2, #1
 8465 0ea8 F275     		strb	r2, [r6, #23]
2656:src/keys.c    **** 	State2.labellist = 0;
 8466              		.loc 1 2656 16 view .LVU2693
 8467 0eaa 3381     		strh	r3, [r6, #8]	@ movhi
2657:src/keys.c    **** 	return check_confirm(op);
 8468              		.loc 1 2657 2 is_stmt 1 view .LVU2694
2658:src/keys.c    **** }
 8469              		.loc 1 2658 2 view .LVU2695
 8470              	.LVL689:
 8471              	.LBB1082:
 638:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8472              		.loc 1 638 12 view .LVU2696
 8473              	.LBB1078:
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 8474              		.loc 1 639 2 view .LVU2697
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 8475              		.loc 1 639 2 is_stmt 0 view .LVU2698
 8476              	.LBE1078:
 8477              	.LBE1082:
 8478              	.LBE1085:
 8479              	.LBE1093:
 8480              	.LBE1223:
 8481              	.LBE1284:
3162:src/keys.c    ****     case STATE_SST:
 8482              		.loc 1 3162 5 is_stmt 1 view .LVU2699
 8483 0eac FFF730B9 		b	.L575
 8484              	.LVL690:
 8485              	.L698:
 8486              	.LBB1285:
 8487              	.LBB1224:
 8488              	.LBB1094:
 8489              	.LBB1086:
2594:src/keys.c    **** 		return STATE_UNFINISHED;
 8490              		.loc 1 2594 3 view .LVU2700
2594:src/keys.c    **** 		return STATE_UNFINISHED;
 8491              		.loc 1 2594 19 is_stmt 0 view .LVU2701
 8492 0eb0 5046     		mov	r0, r10
 8493              	.LVL691:
2594:src/keys.c    **** 		return STATE_UNFINISHED;
 8494              		.loc 1 2594 19 view .LVU2702
 8495 0eb2 0021     		movs	r1, #0
 8496 0eb4 FFF7FEFF 		bl	advance_to_previous_label
 8497              	.LVL692:
2595:src/keys.c    **** 
 8498              		.loc 1 2595 10 view .LVU2703
 8499 0eb8 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccOshYsA.s 			page 251


 8500              	.LVL693:
2594:src/keys.c    **** 		return STATE_UNFINISHED;
 8501              		.loc 1 2594 17 view .LVU2704
 8502 0ebc 3081     		strh	r0, [r6, #8]	@ movhi
2595:src/keys.c    **** 
 8503              		.loc 1 2595 3 is_stmt 1 view .LVU2705
2595:src/keys.c    **** 
 8504              		.loc 1 2595 10 is_stmt 0 view .LVU2706
 8505 0ebe FFF72DB9 		b	.L566
 8506              	.LVL694:
 8507              	.L699:
2656:src/keys.c    **** 	State2.labellist = 0;
 8508              		.loc 1 2656 2 is_stmt 1 view .LVU2707
2657:src/keys.c    **** 	return check_confirm(op);
 8509              		.loc 1 2657 19 is_stmt 0 view .LVU2708
 8510 0ec2 F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
2656:src/keys.c    **** 	State2.labellist = 0;
 8511              		.loc 1 2656 16 view .LVU2709
 8512 0ec4 0023     		movs	r3, #0
2657:src/keys.c    **** 	return check_confirm(op);
 8513              		.loc 1 2657 19 view .LVU2710
 8514 0ec6 63F38202 		bfi	r2, r3, #2, #1
 8515 0eca F275     		strb	r2, [r6, #23]
2656:src/keys.c    **** 	State2.labellist = 0;
 8516              		.loc 1 2656 16 view .LVU2711
 8517 0ecc 3381     		strh	r3, [r6, #8]	@ movhi
2657:src/keys.c    **** 	return check_confirm(op);
 8518              		.loc 1 2657 2 is_stmt 1 view .LVU2712
2658:src/keys.c    **** }
 8519              		.loc 1 2658 2 view .LVU2713
 8520              	.LVL695:
 8521              	.LBB1083:
 638:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8522              		.loc 1 638 12 view .LVU2714
 8523              	.LBB1079:
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 8524              		.loc 1 639 2 view .LVU2715
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 8525              		.loc 1 639 2 is_stmt 0 view .LVU2716
 8526              	.LBE1079:
 8527              	.LBE1083:
 8528              	.LBE1086:
 8529              	.LBE1094:
 8530              	.LBE1224:
 8531              	.LBE1285:
3162:src/keys.c    ****     case STATE_SST:
 8532              		.loc 1 3162 5 is_stmt 1 view .LVU2717
 8533              	.LBB1286:
 8534              	.LBB1225:
 8535              	.LBB1095:
 8536              	.LBB1087:
2569:src/keys.c    **** 
 8537              		.loc 1 2569 6 is_stmt 0 view .LVU2718
 8538 0ece 4FF0330B 		mov	fp, #51
 8539              	.LVL696:
2569:src/keys.c    **** 
 8540              		.loc 1 2569 6 view .LVU2719
ARM GAS  /tmp/ccOshYsA.s 			page 252


 8541 0ed2 FFF723B9 		b	.L566
 8542              	.LVL697:
 8543              	.L688:
2580:src/keys.c    **** 
 8544              		.loc 1 2580 2 view .LVU2720
 8545 0ed6 B4F58C7F 		cmp	r4, #280
 8546 0eda 95DC     		bgt	.L702
 8547 0edc B4F5827F 		cmp	r4, #260
 8548 0ee0 7FF779AB 		ble	.L1065
 8549 0ee4 6FF4827C 		mvn	ip, #260
 8550 0ee8 6444     		add	r4, r4, ip
 8551 0eea 132C     		cmp	r4, #19
 8552 0eec 3FF673AB 		bhi	.L1065
 8553 0ef0 01A2     		adr	r2, .L691
 8554 0ef2 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8555 0ef6 00BF     		.p2align 2
 8556              	.L691:
 8557 0ef8 4F0F0000 		.word	.L694+1
 8558 0efc D7050000 		.word	.L1065+1
 8559 0f00 D7050000 		.word	.L1065+1
 8560 0f04 D7050000 		.word	.L1065+1
 8561 0f08 D7050000 		.word	.L1065+1
 8562 0f0c D7050000 		.word	.L1065+1
 8563 0f10 D7050000 		.word	.L1065+1
 8564 0f14 D7050000 		.word	.L1065+1
 8565 0f18 D7050000 		.word	.L1065+1
 8566 0f1c D7050000 		.word	.L1065+1
 8567 0f20 D7050000 		.word	.L1065+1
 8568 0f24 490F0000 		.word	.L871+1
 8569 0f28 D7050000 		.word	.L1065+1
 8570 0f2c 5D0F0000 		.word	.L692+1
 8571 0f30 D7050000 		.word	.L1065+1
 8572 0f34 D7050000 		.word	.L1065+1
 8573 0f38 D7050000 		.word	.L1065+1
 8574 0f3c D7050000 		.word	.L1065+1
 8575 0f40 D7050000 		.word	.L1065+1
 8576 0f44 610E0000 		.word	.L690+1
 8577              		.p2align 1
 8578              	.L871:
 8579 0f48 40F2431B 		movw	fp, #323
 8580              	.LVL698:
2580:src/keys.c    **** 
 8581              		.loc 1 2580 2 view .LVU2721
 8582 0f4c 67E7     		b	.L693
 8583              	.LVL699:
 8584              	.L694:
2624:src/keys.c    **** 	xeq_or_gto:
 8585              		.loc 1 2624 3 is_stmt 1 view .LVU2722
2624:src/keys.c    **** 	xeq_or_gto:
 8586              		.loc 1 2624 6 is_stmt 0 view .LVU2723
 8587 0f4e 03F5407B 		add	fp, r3, #768
 8588              	.LVL700:
2626:src/keys.c    **** 			break;
 8589              		.loc 1 2626 3 is_stmt 1 view .LVU2724
2626:src/keys.c    **** 			break;
 8590              		.loc 1 2626 6 is_stmt 0 view .LVU2725
 8591 0f52 002B     		cmp	r3, #0
ARM GAS  /tmp/ccOshYsA.s 			page 253


 8592 0f54 7FF466AF 		bne	.L705
 8593 0f58 FFF73DBB 		b	.L1065
 8594              	.LVL701:
 8595              	.L692:
2583:src/keys.c    **** 		goto next;
 8596              		.loc 1 2583 3 is_stmt 1 view .LVU2726
2583:src/keys.c    **** 		goto next;
 8597              		.loc 1 2583 8 is_stmt 0 view .LVU2727
 8598 0f5c 5046     		mov	r0, r10
 8599              	.LVL702:
2583:src/keys.c    **** 		goto next;
 8600              		.loc 1 2583 8 view .LVU2728
 8601 0f5e 0121     		movs	r1, #1
 8602 0f60 FFF7FEFF 		bl	advance_to_previous_label
 8603              	.LVL703:
 8604 0f64 0121     		movs	r1, #1
 8605 0f66 FFF7FEFF 		bl	advance_to_previous_label
 8606              	.LVL704:
 8607 0f6a 8246     		mov	r10, r0
 8608              	.LVL705:
2584:src/keys.c    **** 
 8609              		.loc 1 2584 3 is_stmt 1 view .LVU2729
 8610 0f6c 7EE7     		b	.L697
 8611              	.LVL706:
 8612              	.L859:
2584:src/keys.c    **** 
 8613              		.loc 1 2584 3 is_stmt 0 view .LVU2730
 8614              	.LBE1087:
 8615              	.LBE1095:
 8616              	.LBB1096:
 8617              	.LBB995:
 8618              	.LBB989:
2499:src/keys.c    **** 		if (nn <= 9)
 8619              		.loc 1 2499 7 view .LVU2731
 8620 0f6e 0A46     		mov	r2, r1
 8621              	.LVL707:
2499:src/keys.c    **** 		if (nn <= 9)
 8622              		.loc 1 2499 7 view .LVU2732
 8623 0f70 8EE5     		b	.L639
 8624              	.L1154:
 8625 0f72 00BF     		.align	2
 8626              	.L1153:
 8627 0f74 00000000 		.word	NonProgrammable
 8628 0f78 00000000 		.word	PersistentRam
 8629 0f7c 00000000 		.word	.LANCHOR14
 8630 0f80 00000000 		.word	.LANCHOR11
 8631 0f84 00000000 		.word	.LANCHOR1
 8632 0f88 00000000 		.word	.LANCHOR0
 8633              	.LVL708:
 8634              	.L1099:
2499:src/keys.c    **** 		if (nn <= 9)
 8635              		.loc 1 2499 7 view .LVU2733
 8636              	.LBE989:
 8637              	.LBE995:
 8638              	.LBE1096:
2929:src/keys.c    **** 
 8639              		.loc 1 2929 3 is_stmt 1 view .LVU2734
ARM GAS  /tmp/ccOshYsA.s 			page 254


 8640              	.LBB1097:
 8641              	.LBI790:
2692:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8642              		.loc 1 2692 12 view .LVU2735
 8643              	.LBB815:
2693:src/keys.c    **** 	enum shifts shift = reset_shift();
 8644              		.loc 1 2693 2 view .LVU2736
 8645              	.LBB792:
 8646              	.LBI792:
 208:src/keys.c    **** {
 8647              		.loc 1 208 14 view .LVU2737
 8648              	.LBB793:
 210:src/keys.c    ****     // K00 - K05
 8649              		.loc 1 210 3 view .LVU2738
 232:src/keys.c    **** }
 8650              		.loc 1 232 3 view .LVU2739
 8651              	.LBB794:
 8652              	.LBI794:
 124:src/keys.c    **** {
 8653              		.loc 1 124 12 view .LVU2740
 8654              	.LBB795:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8655              		.loc 1 126 2 view .LVU2741
 136:src/keys.c    **** }
 8656              		.loc 1 136 2 view .LVU2742
 136:src/keys.c    **** }
 8657              		.loc 1 136 23 is_stmt 0 view .LVU2743
 8658 0f8c BD4B     		ldr	r3, .L1155
 8659              	.LBE795:
 8660              	.LBE794:
 232:src/keys.c    **** }
 8661              		.loc 1 232 28 view .LVU2744
 8662 0f8e BE4A     		ldr	r2, .L1155+4
 8663              	.LBB797:
 8664              	.LBB796:
 136:src/keys.c    **** }
 8665              		.loc 1 136 23 view .LVU2745
 8666 0f90 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8667              	.LBE796:
 8668              	.LBE797:
 232:src/keys.c    **** }
 8669              		.loc 1 232 10 view .LVU2746
 8670 0f92 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 8671              	.LVL709:
 232:src/keys.c    **** }
 8672              		.loc 1 232 10 view .LVU2747
 8673              	.LBE793:
 8674              	.LBE792:
 8675              	.LBB798:
 8676              	.LBB799:
 8677              	.LBB800:
 8678              	.LBB801:
 8679              	.LBB802:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8680              		.loc 1 85 18 view .LVU2748
 8681 0f96 FFF7FEFF 		bl	shift_down
 8682              	.LVL710:
ARM GAS  /tmp/ccOshYsA.s 			page 255


 8683              	.LBE802:
 8684              	.LBE801:
 8685              	.LBE800:
 8686              	.LBE799:
 8687              	.LBE798:
2693:src/keys.c    **** 	enum shifts shift = reset_shift();
 8688              		.loc 1 2693 15 view .LVU2749
 8689 0f9a 2AF0800A 		bic	r10, r10, #128
 8690              	.LVL711:
2694:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 8691              		.loc 1 2694 2 is_stmt 1 view .LVU2750
 8692              	.LBB809:
 8693              	.LBI798:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8694              		.loc 1 102 13 view .LVU2751
 8695              	.LBE809:
 8696              	.LBE815:
 8697              	.LBE1097:
 8698              	.LBE1225:
 8699              	.LBE1286:
 103:src/keys.c    **** }
 8700              		.loc 1 103 2 view .LVU2752
 8701              	.LBB1287:
 8702              	.LBB1226:
 8703              	.LBB1098:
 8704              	.LBB816:
 8705              	.LBB810:
 8706              	.LBB807:
 8707              	.LBI799:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8708              		.loc 1 92 20 view .LVU2753
 8709              	.LBB805:
  93:src/keys.c    **** 	State2.shifts = shift;
 8710              		.loc 1 93 2 view .LVU2754
 8711              	.LBB804:
 8712              	.LBI801:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8713              		.loc 1 84 13 view .LVU2755
 8714              	.LBB803:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8715              		.loc 1 85 2 view .LVU2756
  86:src/keys.c    **** }
 8716              		.loc 1 86 2 view .LVU2757
  86:src/keys.c    **** }
 8717              		.loc 1 86 52 is_stmt 0 view .LVU2758
 8718 0f9e 0346     		mov	r3, r0
 8719 0fa0 00B9     		cbnz	r0, .L708
 8720 0fa2 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 8721              	.L708:
 8722              	.LVL712:
  86:src/keys.c    **** }
 8723              		.loc 1 86 52 view .LVU2759
 8724              	.LBE803:
 8725              	.LBE804:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8726              		.loc 1 94 2 is_stmt 1 view .LVU2760
 8727              	.LBE805:
ARM GAS  /tmp/ccOshYsA.s 			page 256


 8728              	.LBE807:
 8729              	.LBE810:
2695:src/keys.c    **** 	const int g_max = global_regs();
 8730              		.loc 1 2695 31 is_stmt 0 view .LVU2761
 8731 0fa4 B17D     		ldrb	r1, [r6, #22]	@ zero_extendqisi2
 8732              	.LBB811:
 8733              	.LBB808:
 8734              	.LBB806:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8735              		.loc 1 94 16 view .LVU2762
 8736 0fa6 0022     		movs	r2, #0
 8737 0fa8 3274     		strb	r2, [r6, #16]
  95:src/keys.c    **** 	return r;
 8738              		.loc 1 95 2 is_stmt 1 view .LVU2763
  95:src/keys.c    **** 	return r;
 8739              		.loc 1 95 19 is_stmt 0 view .LVU2764
 8740 0faa 7273     		strb	r2, [r6, #13]
  96:src/keys.c    **** }
 8741              		.loc 1 96 2 is_stmt 1 view .LVU2765
 8742              	.LVL713:
  96:src/keys.c    **** }
 8743              		.loc 1 96 2 is_stmt 0 view .LVU2766
 8744              	.LBE806:
 8745              	.LBE808:
 8746              	.LBE811:
2695:src/keys.c    **** 	const int g_max = global_regs();
 8747              		.loc 1 2695 2 is_stmt 1 view .LVU2767
2695:src/keys.c    **** 	const int g_max = global_regs();
 8748              		.loc 1 2695 46 is_stmt 0 view .LVU2768
 8749 0fac CA07     		lsls	r2, r1, #31
 8750 0fae 00F14582 		bmi	.L1129
 8751 0fb2 4FF07009 		mov	r9, #112
 8752              	.LVL714:
 8753              	.L709:
2695:src/keys.c    **** 	const int g_max = global_regs();
 8754              		.loc 1 2695 46 view .LVU2769
 8755 0fb6 0093     		str	r3, [sp]
 8756              	.LVL715:
2696:src/keys.c    **** 
 8757              		.loc 1 2696 2 is_stmt 1 view .LVU2770
2696:src/keys.c    **** 
 8758              		.loc 1 2696 20 is_stmt 0 view .LVU2771
 8759 0fb8 FFF7FEFF 		bl	global_regs
 8760              	.LVL716:
2698:src/keys.c    **** 		if (local_regs())
 8761              		.loc 1 2698 2 is_stmt 1 view .LVU2772
2698:src/keys.c    **** 		if (local_regs())
 8762              		.loc 1 2698 5 is_stmt 0 view .LVU2773
 8763 0fbc BAF1700F 		cmp	r10, #112
 8764 0fc0 009B     		ldr	r3, [sp]
 8765 0fc2 00F0C983 		beq	.L1130
2704:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8766              		.loc 1 2704 7 is_stmt 1 view .LVU2774
2704:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8767              		.loc 1 2704 10 is_stmt 0 view .LVU2775
 8768 0fc6 BAF1090F 		cmp	r10, #9
 8769 0fca 40F27083 		bls	.L1131
ARM GAS  /tmp/ccOshYsA.s 			page 257


2711:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8770              		.loc 1 2711 7 is_stmt 1 view .LVU2776
2711:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8771              		.loc 1 2711 29 is_stmt 0 view .LVU2777
 8772 0fce 5A1E     		subs	r2, r3, #1
2711:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8773              		.loc 1 2711 10 view .LVU2778
 8774 0fd0 D2B2     		uxtb	r2, r2
 8775 0fd2 012A     		cmp	r2, #1
 8776 0fd4 40F20C82 		bls	.L1132
 8777              	.L717:
2715:src/keys.c    **** 		State2.digval = n;
 8778              		.loc 1 2715 7 is_stmt 1 view .LVU2779
2715:src/keys.c    **** 		State2.digval = n;
 8779              		.loc 1 2715 10 is_stmt 0 view .LVU2780
 8780 0fd8 BAF17F0F 		cmp	r10, #127
 8781 0fdc 40F07D83 		bne	.L1133
2720:src/keys.c    **** 	case K_DOWN:
 8782              		.loc 1 2720 2 is_stmt 1 view .LVU2781
 8783 0fe0 073C     		subs	r4, r4, #7
 8784 0fe2 112C     		cmp	r4, #17
 8785 0fe4 3FF6F7AA 		bhi	.L1065
 8786 0fe8 01A2     		adr	r2, .L839
 8787 0fea 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8788 0fee 00BF     		.p2align 2
 8789              	.L839:
 8790 0ff0 A1100000 		.word	.L730+1
 8791 0ff4 D7050000 		.word	.L1065+1
 8792 0ff8 D7050000 		.word	.L1065+1
 8793 0ffc D7050000 		.word	.L1065+1
 8794 1000 D7050000 		.word	.L1065+1
 8795 1004 9B100000 		.word	.L729+1
 8796 1008 D7050000 		.word	.L1065+1
 8797 100c D7050000 		.word	.L1065+1
 8798 1010 D7050000 		.word	.L1065+1
 8799 1014 85100000 		.word	.L727+1
 8800 1018 D7050000 		.word	.L1065+1
 8801 101c 5F100000 		.word	.L723+1
 8802 1020 D7050000 		.word	.L1065+1
 8803 1024 D7050000 		.word	.L1065+1
 8804 1028 D7050000 		.word	.L1065+1
 8805 102c D7050000 		.word	.L1065+1
 8806 1030 D7050000 		.word	.L1065+1
 8807 1034 39100000 		.word	.L720+1
 8808              		.p2align 1
 8809              	.L720:
2722:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 8810              		.loc 1 2722 3 view .LVU2782
2722:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 8811              		.loc 1 2722 13 is_stmt 0 view .LVU2783
 8812 1038 3389     		ldrh	r3, [r6, #8]
2722:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 8813              		.loc 1 2722 6 view .LVU2784
 8814 103a 002B     		cmp	r3, #0
 8815 103c 00F05A85 		beq	.L721
2723:src/keys.c    **** 				State2.digval = global_regs();
 8816              		.loc 1 2723 4 is_stmt 1 view .LVU2785
ARM GAS  /tmp/ccOshYsA.s 			page 258


2723:src/keys.c    **** 				State2.digval = global_regs();
 8817              		.loc 1 2723 8 is_stmt 0 view .LVU2786
 8818 1040 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2723:src/keys.c    **** 				State2.digval = global_regs();
 8819              		.loc 1 2723 7 view .LVU2787
 8820 1042 D207     		lsls	r2, r2, #31
 8821 1044 02D4     		bmi	.L722
2723:src/keys.c    **** 				State2.digval = global_regs();
 8822              		.loc 1 2723 23 view .LVU2788
 8823 1046 642B     		cmp	r3, #100
 8824 1048 00F05A85 		beq	.L1134
 8825              	.LVL717:
 8826              	.L722:
2725:src/keys.c    **** 		}
 8827              		.loc 1 2725 4 is_stmt 1 view .LVU2789
 8828 104c 3389     		ldrh	r3, [r6, #8]
 8829 104e 013B     		subs	r3, r3, #1
 8830              	.L1056:
2725:src/keys.c    **** 		}
 8831              		.loc 1 2725 4 is_stmt 0 view .LVU2790
 8832 1050 3381     		strh	r3, [r6, #8]	@ movhi
 8833              	.LVL718:
 8834              	.L713:
2777:src/keys.c    **** 	return STATE_UNFINISHED;
 8835              		.loc 1 2777 2 is_stmt 1 view .LVU2791
2777:src/keys.c    **** 	return STATE_UNFINISHED;
 8836              		.loc 1 2777 16 is_stmt 0 view .LVU2792
 8837 1052 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 8838 1054 6FF3C503 		bfc	r3, #3, #3
 8839 1058 3375     		strb	r3, [r6, #20]
 8840 105a FFF7BCBA 		b	.L1065
 8841              	.LVL719:
 8842              	.L723:
2732:src/keys.c    **** 			State2.digval++;
 8843              		.loc 1 2732 3 is_stmt 1 view .LVU2793
2732:src/keys.c    **** 			State2.digval++;
 8844              		.loc 1 2732 13 is_stmt 0 view .LVU2794
 8845 105e 3389     		ldrh	r3, [r6, #8]
2732:src/keys.c    **** 			State2.digval++;
 8846              		.loc 1 2732 27 view .LVU2795
 8847 1060 09F1FF39 		add	r9, r9, #-1
 8848              	.LVL720:
2732:src/keys.c    **** 			State2.digval++;
 8849              		.loc 1 2732 6 view .LVU2796
 8850 1064 4B45     		cmp	r3, r9
 8851 1066 80F25085 		bge	.L724
2733:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8852              		.loc 1 2733 4 is_stmt 1 view .LVU2797
2734:src/keys.c    **** 				State2.digval = regX_idx;
 8853              		.loc 1 2734 8 is_stmt 0 view .LVU2798
 8854 106a B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2733:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8855              		.loc 1 2733 17 view .LVU2799
 8856 106c 0133     		adds	r3, r3, #1
 8857 106e 9CB2     		uxth	r4, r3
2734:src/keys.c    **** 				State2.digval = regX_idx;
 8858              		.loc 1 2734 7 view .LVU2800
ARM GAS  /tmp/ccOshYsA.s 			page 259


 8859 1070 D307     		lsls	r3, r2, #31
2733:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8860              		.loc 1 2733 17 view .LVU2801
 8861 1072 3481     		strh	r4, [r6, #8]	@ movhi
2734:src/keys.c    **** 				State2.digval = regX_idx;
 8862              		.loc 1 2734 4 is_stmt 1 view .LVU2802
2734:src/keys.c    **** 				State2.digval = regX_idx;
 8863              		.loc 1 2734 7 is_stmt 0 view .LVU2803
 8864 1074 EDD4     		bmi	.L713
2734:src/keys.c    **** 				State2.digval = regX_idx;
 8865              		.loc 1 2734 43 view .LVU2804
 8866 1076 FFF7FEFF 		bl	global_regs
 8867              	.LVL721:
2734:src/keys.c    **** 				State2.digval = regX_idx;
 8868              		.loc 1 2734 23 view .LVU2805
 8869 107a 8442     		cmp	r4, r0
 8870 107c E9D1     		bne	.L713
2735:src/keys.c    **** 		}
 8871              		.loc 1 2735 5 is_stmt 1 view .LVU2806
2735:src/keys.c    **** 		}
 8872              		.loc 1 2735 19 is_stmt 0 view .LVU2807
 8873 107e 6423     		movs	r3, #100
 8874 1080 3381     		strh	r3, [r6, #8]	@ movhi
 8875 1082 E6E7     		b	.L713
 8876              	.LVL722:
 8877              	.L727:
2749:src/keys.c    **** 			return STATE_UNFINISHED;
 8878              		.loc 1 2749 3 is_stmt 1 view .LVU2808
2749:src/keys.c    **** 			return STATE_UNFINISHED;
 8879              		.loc 1 2749 7 is_stmt 0 view .LVU2809
 8880 1084 F37D     		ldrb	r3, [r6, #23]	@ zero_extendqisi2
2749:src/keys.c    **** 			return STATE_UNFINISHED;
 8881              		.loc 1 2749 6 view .LVU2810
 8882 1086 13F02002 		ands	r2, r3, #32
 8883 108a 7FF4A4AA 		bne	.L1065
2751:src/keys.c    **** 
 8884              		.loc 1 2751 3 is_stmt 1 view .LVU2811
2773:src/keys.c    **** 	State2.digval = 0;
 8885              		.loc 1 2773 2 view .LVU2812
2773:src/keys.c    **** 	State2.digval = 0;
 8886              		.loc 1 2773 22 is_stmt 0 view .LVU2813
 8887 108e 62F3C303 		bfi	r3, r2, #3, #1
 8888 1092 F375     		strb	r3, [r6, #23]
2774:src/keys.c    **** 	State2.digval2 = 0;
 8889              		.loc 1 2774 2 is_stmt 1 view .LVU2814
2774:src/keys.c    **** 	State2.digval2 = 0;
 8890              		.loc 1 2774 16 is_stmt 0 view .LVU2815
 8891 1094 3281     		strh	r2, [r6, #8]	@ movhi
2775:src/keys.c    **** reset_window:
 8892              		.loc 1 2775 2 is_stmt 1 view .LVU2816
2775:src/keys.c    **** reset_window:
 8893              		.loc 1 2775 17 is_stmt 0 view .LVU2817
 8894 1096 B272     		strb	r2, [r6, #10]
 8895 1098 DBE7     		b	.L713
 8896              	.L729:
2754:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8897              		.loc 1 2754 3 is_stmt 1 view .LVU2818
ARM GAS  /tmp/ccOshYsA.s 			page 260


2754:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8898              		.loc 1 2754 6 is_stmt 0 view .LVU2819
 8899 109a 012B     		cmp	r3, #1
 8900 109c 00F03985 		beq	.L1135
 8901              	.L730:
2759:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8902              		.loc 1 2759 3 is_stmt 1 view .LVU2820
2759:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8903              		.loc 1 2759 6 is_stmt 0 view .LVU2821
 8904 10a0 002B     		cmp	r3, #0
 8905 10a2 7FF498AA 		bne	.L1065
2763:src/keys.c    **** #endif
 8906              		.loc 1 2763 4 is_stmt 1 view .LVU2822
2763:src/keys.c    **** #endif
 8907              		.loc 1 2763 8 is_stmt 0 view .LVU2823
 8908 10a6 B6F808B0 		ldrh	fp, [r6, #8]
 8909              	.LVL723:
2765:src/keys.c    **** 			State2.digval = 0;
 8910              		.loc 1 2765 4 is_stmt 1 view .LVU2824
2765:src/keys.c    **** 			State2.digval = 0;
 8911              		.loc 1 2765 24 is_stmt 0 view .LVU2825
 8912 10aa F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
2767:src/keys.c    **** 			return n;
 8913              		.loc 1 2767 19 view .LVU2826
 8914 10ac B372     		strb	r3, [r6, #10]
2765:src/keys.c    **** 			State2.digval = 0;
 8915              		.loc 1 2765 24 view .LVU2827
 8916 10ae 63F3C302 		bfi	r2, r3, #3, #1
2768:src/keys.c    **** 		}
 8917              		.loc 1 2768 11 view .LVU2828
 8918 10b2 4BF4285B 		orr	fp, fp, #10752
 8919              	.LVL724:
2766:src/keys.c    **** 			State2.digval2 = 0;
 8920              		.loc 1 2766 18 view .LVU2829
 8921 10b6 3381     		strh	r3, [r6, #8]	@ movhi
 8922 10b8 5846     		mov	r0, fp
 8923              	.LVL725:
2766:src/keys.c    **** 			State2.digval2 = 0;
 8924              		.loc 1 2766 18 view .LVU2830
 8925 10ba B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2765:src/keys.c    **** 			State2.digval = 0;
 8926              		.loc 1 2765 24 view .LVU2831
 8927 10bc F275     		strb	r2, [r6, #23]
2766:src/keys.c    **** 			State2.digval2 = 0;
 8928              		.loc 1 2766 4 is_stmt 1 view .LVU2832
2767:src/keys.c    **** 			return n;
 8929              		.loc 1 2767 4 view .LVU2833
2768:src/keys.c    **** 		}
 8930              		.loc 1 2768 4 view .LVU2834
2768:src/keys.c    **** 		}
 8931              		.loc 1 2768 11 is_stmt 0 view .LVU2835
 8932 10be FFF7D8B9 		b	.L617
 8933              	.LVL726:
 8934              	.L1100:
2768:src/keys.c    **** 		}
 8935              		.loc 1 2768 11 view .LVU2836
 8936              	.LBE816:
ARM GAS  /tmp/ccOshYsA.s 			page 261


 8937              	.LBE1098:
2932:src/keys.c    **** 
 8938              		.loc 1 2932 3 is_stmt 1 view .LVU2837
 8939              	.LBB1099:
 8940              	.LBI1099:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8941              		.loc 1 102 13 view .LVU2838
 8942              	.LBE1099:
 8943              	.LBE1226:
 8944              	.LBE1287:
 103:src/keys.c    **** }
 8945              		.loc 1 103 2 view .LVU2839
 8946              	.LBB1288:
 8947              	.LBB1227:
 8948              	.LBB1106:
 8949              	.LBB1100:
 8950              	.LBI1100:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8951              		.loc 1 92 20 view .LVU2840
 8952              	.LBB1101:
  93:src/keys.c    **** 	State2.shifts = shift;
 8953              		.loc 1 93 2 view .LVU2841
 8954              	.LBB1102:
 8955              	.LBI1102:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8956              		.loc 1 84 13 view .LVU2842
 8957              	.LBB1103:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8958              		.loc 1 85 2 view .LVU2843
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8959              		.loc 1 85 18 is_stmt 0 view .LVU2844
 8960 10c2 FFF7FEFF 		bl	shift_down
 8961              	.LVL727:
  86:src/keys.c    **** }
 8962              		.loc 1 86 2 is_stmt 1 view .LVU2845
  86:src/keys.c    **** }
 8963              		.loc 1 86 52 is_stmt 0 view .LVU2846
 8964 10c6 0146     		mov	r1, r0
 8965 10c8 00B9     		cbnz	r0, .L732
 8966 10ca 317C     		ldrb	r1, [r6, #16]	@ zero_extendqisi2
 8967              	.L732:
 8968              	.LVL728:
  86:src/keys.c    **** }
 8969              		.loc 1 86 52 view .LVU2847
 8970              	.LBE1103:
 8971              	.LBE1102:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8972              		.loc 1 94 2 is_stmt 1 view .LVU2848
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8973              		.loc 1 94 16 is_stmt 0 view .LVU2849
 8974 10cc 0022     		movs	r2, #0
 8975              	.LBE1101:
 8976              	.LBE1100:
 8977              	.LBE1106:
2932:src/keys.c    **** 
 8978              		.loc 1 2932 10 view .LVU2850
 8979 10ce 2046     		mov	r0, r4
ARM GAS  /tmp/ccOshYsA.s 			page 262


 8980              	.LBB1107:
 8981              	.LBB1105:
 8982              	.LBB1104:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8983              		.loc 1 94 16 view .LVU2851
 8984 10d0 3274     		strb	r2, [r6, #16]
  95:src/keys.c    **** 	return r;
 8985              		.loc 1 95 2 is_stmt 1 view .LVU2852
  95:src/keys.c    **** 	return r;
 8986              		.loc 1 95 19 is_stmt 0 view .LVU2853
 8987 10d2 7273     		strb	r2, [r6, #13]
  96:src/keys.c    **** }
 8988              		.loc 1 96 2 is_stmt 1 view .LVU2854
 8989              	.LVL729:
  96:src/keys.c    **** }
 8990              		.loc 1 96 2 is_stmt 0 view .LVU2855
 8991              	.LBE1104:
 8992              	.LBE1105:
 8993              	.LBE1107:
2932:src/keys.c    **** 
 8994              		.loc 1 2932 10 view .LVU2856
 8995 10d4 FFF7FEFF 		bl	process_catalogue
 8996              	.LVL730:
2932:src/keys.c    **** 
 8997              		.loc 1 2932 10 view .LVU2857
 8998 10d8 8346     		mov	fp, r0
 8999 10da FFF759BA 		b	.L595
 9000              	.L1101:
2936:src/keys.c    **** #else
 9001              		.loc 1 2936 3 is_stmt 1 view .LVU2858
 9002              	.LVL731:
 9003              	.LBB1108:
 9004              	.LBI828:
1413:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9005              		.loc 1 1413 12 view .LVU2859
 9006              	.LBB873:
1414:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9007              		.loc 1 1414 2 view .LVU2860
 9008              	.LBB830:
 9009              	.LBI830:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9010              		.loc 1 102 13 view .LVU2861
 9011              	.LBE830:
 9012              	.LBE873:
 9013              	.LBE1108:
 9014              	.LBE1227:
 9015              	.LBE1288:
 103:src/keys.c    **** }
 9016              		.loc 1 103 2 view .LVU2862
 9017              	.LBB1289:
 9018              	.LBB1228:
 9019              	.LBB1109:
 9020              	.LBB874:
 9021              	.LBB839:
 9022              	.LBB831:
 9023              	.LBI831:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/ccOshYsA.s 			page 263


 9024              		.loc 1 92 20 view .LVU2863
 9025              	.LBB832:
  93:src/keys.c    **** 	State2.shifts = shift;
 9026              		.loc 1 93 2 view .LVU2864
 9027              	.LBB833:
 9028              	.LBI833:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9029              		.loc 1 84 13 view .LVU2865
 9030              	.LBB834:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9031              		.loc 1 85 2 view .LVU2866
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9032              		.loc 1 85 18 is_stmt 0 view .LVU2867
 9033 10de FFF7FEFF 		bl	shift_down
 9034              	.LVL732:
  86:src/keys.c    **** }
 9035              		.loc 1 86 2 is_stmt 1 view .LVU2868
  86:src/keys.c    **** }
 9036              		.loc 1 86 52 is_stmt 0 view .LVU2869
 9037 10e2 00B9     		cbnz	r0, .L734
 9038 10e4 307C     		ldrb	r0, [r6, #16]	@ zero_extendqisi2
 9039              	.LVL733:
 9040              	.L734:
  86:src/keys.c    **** }
 9041              		.loc 1 86 52 view .LVU2870
 9042              	.LBE834:
 9043              	.LBE833:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9044              		.loc 1 94 2 is_stmt 1 view .LVU2871
 9045              	.LBE832:
 9046              	.LBE831:
 9047              	.LBE839:
 9048              	.LBB840:
 9049              	.LBB841:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 9050              		.loc 1 452 6 is_stmt 0 view .LVU2872
 9051 10e6 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 9052              	.LBE841:
 9053              	.LBE840:
 9054              	.LBB855:
 9055              	.LBB837:
 9056              	.LBB835:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9057              		.loc 1 94 16 view .LVU2873
 9058 10e8 0022     		movs	r2, #0
 9059              	.LBE835:
 9060              	.LBE837:
 9061              	.LBE855:
 9062              	.LBB856:
 9063              	.LBB852:
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 9064              		.loc 1 452 5 view .LVU2874
 9065 10ea D906     		lsls	r1, r3, #27
 9066              	.LBE852:
 9067              	.LBE856:
 9068              	.LBB857:
 9069              	.LBB838:
ARM GAS  /tmp/ccOshYsA.s 			page 264


 9070              	.LBB836:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9071              		.loc 1 94 16 view .LVU2875
 9072 10ec 3274     		strb	r2, [r6, #16]
  95:src/keys.c    **** 	return r;
 9073              		.loc 1 95 2 is_stmt 1 view .LVU2876
  95:src/keys.c    **** 	return r;
 9074              		.loc 1 95 19 is_stmt 0 view .LVU2877
 9075 10ee 7273     		strb	r2, [r6, #13]
  96:src/keys.c    **** }
 9076              		.loc 1 96 2 is_stmt 1 view .LVU2878
 9077              	.LVL734:
  96:src/keys.c    **** }
 9078              		.loc 1 96 2 is_stmt 0 view .LVU2879
 9079              	.LBE836:
 9080              	.LBE838:
 9081              	.LBE857:
1415:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
 9082              		.loc 1 1415 2 is_stmt 1 view .LVU2880
1415:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
 9083              		.loc 1 1415 11 is_stmt 0 view .LVU2881
 9084 10f0 0246     		mov	r2, r0
 9085              	.LVL735:
 9086              	.LBB858:
 9087              	.LBI840:
 402:src/keys.c    **** {
 9088              		.loc 1 402 12 is_stmt 1 view .LVU2882
 9089              	.LBB853:
 404:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9090              		.loc 1 404 2 view .LVU2883
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 9091              		.loc 1 452 2 view .LVU2884
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 9092              		.loc 1 452 5 is_stmt 0 view .LVU2885
 9093 10f2 40F1D480 		bpl	.L735
 453:src/keys.c    **** 			shift = SHIFT_LC_N;
 9094              		.loc 1 453 3 is_stmt 1 view .LVU2886
 453:src/keys.c    **** 			shift = SHIFT_LC_N;
 9095              		.loc 1 453 6 is_stmt 0 view .LVU2887
 9096 10f6 0028     		cmp	r0, #0
 9097 10f8 00F0D080 		beq	.L876
 455:src/keys.c    **** 			shift = SHIFT_LC_G;
 9098              		.loc 1 455 8 is_stmt 1 view .LVU2888
 9099              	.LBB842:
 9100              	.LBB843:
 136:src/keys.c    **** }
 9101              		.loc 1 136 23 is_stmt 0 view .LVU2889
 9102 10fc 6149     		ldr	r1, .L1155
 9103              	.LBE843:
 9104              	.LBE842:
 458:src/keys.c    **** }
 9105              		.loc 1 458 49 view .LVU2890
 9106 10fe 634A     		ldr	r2, .L1155+8
 9107              	.LBB848:
 9108              	.LBB844:
 136:src/keys.c    **** }
 9109              		.loc 1 136 23 view .LVU2891
ARM GAS  /tmp/ccOshYsA.s 			page 265


 9110 1100 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9111              	.LBE844:
 9112              	.LBE848:
 456:src/keys.c    **** 	}
 9113              		.loc 1 456 10 view .LVU2892
 9114 1102 0228     		cmp	r0, #2
 458:src/keys.c    **** }
 9115              		.loc 1 458 49 view .LVU2893
 9116 1104 4FF0060C 		mov	ip, #6
 9117 1108 0CFB0121 		mla	r1, ip, r1, r2
 456:src/keys.c    **** 	}
 9118              		.loc 1 456 10 view .LVU2894
 9119 110c 14BF     		ite	ne
 9120 110e 0246     		movne	r2, r0
 9121 1110 0522     		moveq	r2, #5
 9122              	.LVL736:
 458:src/keys.c    **** }
 9123              		.loc 1 458 2 is_stmt 1 view .LVU2895
 9124              	.LBB849:
 9125              	.LBI842:
 124:src/keys.c    **** {
 9126              		.loc 1 124 12 view .LVU2896
 9127              	.LBB845:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9128              		.loc 1 126 2 view .LVU2897
 136:src/keys.c    **** }
 9129              		.loc 1 136 2 view .LVU2898
 136:src/keys.c    **** }
 9130              		.loc 1 136 2 is_stmt 0 view .LVU2899
 9131 1112 063C     		subs	r4, r4, #6
 9132              	.LBE845:
 9133              	.LBE849:
 458:src/keys.c    **** }
 9134              		.loc 1 458 49 view .LVU2900
 9135 1114 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9136              	.LVL737:
 458:src/keys.c    **** }
 9137              		.loc 1 458 49 view .LVU2901
 9138              	.LBE853:
 9139              	.LBE858:
1416:src/keys.c    ****         int op = STATE_UNFINISHED;
 9140              		.loc 1 1416 2 is_stmt 1 view .LVU2902
1417:src/keys.c    **** 	State2.alpha_pos = 0;
 9141              		.loc 1 1417 9 view .LVU2903
1418:src/keys.c    **** 
 9142              		.loc 1 1418 2 view .LVU2904
1420:src/keys.c    **** 	case K10:	// STO
 9143              		.loc 1 1420 2 view .LVU2905
 9144 1116 212C     		cmp	r4, #33
 9145 1118 46D8     		bhi	.L738
 9146 111a 01A1     		adr	r1, .L840
 9147 111c 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9148              		.p2align 2
 9149              	.L840:
 9150 1120 5F180000 		.word	.L747+1
 9151 1124 37180000 		.word	.L746+1
 9152 1128 A9110000 		.word	.L738+1
ARM GAS  /tmp/ccOshYsA.s 			page 266


 9153 112c A9110000 		.word	.L738+1
 9154 1130 A9110000 		.word	.L738+1
 9155 1134 A9110000 		.word	.L738+1
 9156 1138 11180000 		.word	.L745+1
 9157 113c A9110000 		.word	.L738+1
 9158 1140 A9110000 		.word	.L738+1
 9159 1144 A9110000 		.word	.L738+1
 9160 1148 B5190000 		.word	.L751+1
 9161 114c A9110000 		.word	.L738+1
 9162 1150 ED170000 		.word	.L743+1
 9163 1154 A9110000 		.word	.L738+1
 9164 1158 A9110000 		.word	.L738+1
 9165 115c A9110000 		.word	.L738+1
 9166 1160 A9110000 		.word	.L738+1
 9167 1164 A9110000 		.word	.L738+1
 9168 1168 11070000 		.word	.L742+1
 9169 116c A9110000 		.word	.L738+1
 9170 1170 A9110000 		.word	.L738+1
 9171 1174 A9110000 		.word	.L738+1
 9172 1178 A9110000 		.word	.L738+1
 9173 117c A9110000 		.word	.L738+1
 9174 1180 A9110000 		.word	.L738+1
 9175 1184 A9110000 		.word	.L738+1
 9176 1188 A9110000 		.word	.L738+1
 9177 118c A9110000 		.word	.L738+1
 9178 1190 A9110000 		.word	.L738+1
 9179 1194 A9110000 		.word	.L738+1
 9180 1198 D1170000 		.word	.L741+1
 9181 119c A9110000 		.word	.L738+1
 9182 11a0 A9110000 		.word	.L738+1
 9183 11a4 B7170000 		.word	.L739+1
 9184              		.p2align 1
 9185              	.L738:
1501:src/keys.c    **** 		return STATE_UNFINISHED;
 9186              		.loc 1 1501 2 view .LVU2906
1501:src/keys.c    **** 		return STATE_UNFINISHED;
 9187              		.loc 1 1501 5 is_stmt 0 view .LVU2907
 9188 11a8 002A     		cmp	r2, #0
 9189 11aa 3FF414AA 		beq	.L1065
1503:src/keys.c    **** }
 9190              		.loc 1 1503 2 is_stmt 1 view .LVU2908
1503:src/keys.c    **** }
 9191              		.loc 1 1503 9 is_stmt 0 view .LVU2909
 9192 11ae 42F4884B 		orr	fp, r2, #17408
 9193 11b2 5846     		mov	r0, fp
 9194              	.LVL738:
1503:src/keys.c    **** }
 9195              		.loc 1 1503 9 view .LVU2910
 9196 11b4 FFF75DB9 		b	.L617
 9197              	.LVL739:
 9198              	.L1122:
1503:src/keys.c    **** }
 9199              		.loc 1 1503 9 view .LVU2911
 9200              	.LBE874:
 9201              	.LBE1109:
 9202              	.LBB1110:
 9203              	.LBB996:
ARM GAS  /tmp/ccOshYsA.s 			page 267


2495:src/keys.c    **** 		return STATE_UNFINISHED;
 9204              		.loc 1 2495 3 is_stmt 1 view .LVU2912
2495:src/keys.c    **** 		return STATE_UNFINISHED;
 9205              		.loc 1 2495 17 is_stmt 0 view .LVU2913
 9206 11b8 3173     		strb	r1, [r6, #12]
2496:src/keys.c    **** 	} 
 9207              		.loc 1 2496 3 is_stmt 1 view .LVU2914
 9208              	.LBE996:
 9209              	.LBE1110:
2880:src/keys.c    **** 
 9210              		.loc 1 2880 10 is_stmt 0 view .LVU2915
 9211 11ba 4FF0330B 		mov	fp, #51
 9212              	.LBB1111:
 9213              	.LBB997:
2496:src/keys.c    **** 	} 
 9214              		.loc 1 2496 10 view .LVU2916
 9215 11be FEF7ADBF 		b	.L566
 9216              	.LVL740:
 9217              	.L1119:
2496:src/keys.c    **** 	} 
 9218              		.loc 1 2496 10 view .LVU2917
 9219              	.LBE997:
 9220              	.LBE1111:
 9221              	.LBB1112:
 9222              	.LBB976:
1384:src/keys.c    **** 		if (rawpc == 1)
 9223              		.loc 1 1384 3 is_stmt 1 view .LVU2918
1384:src/keys.c    **** 		if (rawpc == 1)
 9224              		.loc 1 1384 11 is_stmt 0 view .LVU2919
 9225 11c2 DFF8D090 		ldr	r9, .L1155+16
1384:src/keys.c    **** 		if (rawpc == 1)
 9226              		.loc 1 1384 9 view .LVU2920
 9227 11c6 B9F8E007 		ldrh	r0, [r9, #2016]
 9228              	.LVL741:
1385:src/keys.c    **** 			rawpc = 0;
 9229              		.loc 1 1385 3 is_stmt 1 view .LVU2921
1386:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 9230              		.loc 1 1386 10 is_stmt 0 view .LVU2922
 9231 11ca 0128     		cmp	r0, #1
 9232              	.LVL742:
1387:src/keys.c    **** 		update_program_bounds(1);
 9233              		.loc 1 1387 3 is_stmt 1 view .LVU2923
 9234 11cc 08BF     		it	eq
 9235 11ce 0020     		moveq	r0, #0
 9236              	.LVL743:
1387:src/keys.c    **** 		update_program_bounds(1);
 9237              		.loc 1 1387 3 is_stmt 0 view .LVU2924
 9238 11d0 FFF7FEFF 		bl	do_dec
 9239              	.LVL744:
1387:src/keys.c    **** 		update_program_bounds(1);
 9240              		.loc 1 1387 3 view .LVU2925
 9241 11d4 FFF7FEFF 		bl	set_pc
 9242              	.LVL745:
1388:src/keys.c    **** 		rawpc = ProgBegin;
 9243              		.loc 1 1388 3 is_stmt 1 view .LVU2926
 9244 11d8 0120     		movs	r0, #1
 9245 11da FFF7FEFF 		bl	update_program_bounds
ARM GAS  /tmp/ccOshYsA.s 			page 268


 9246              	.LVL746:
1389:src/keys.c    **** 		goto fin;
 9247              		.loc 1 1389 3 view .LVU2927
1389:src/keys.c    **** 		goto fin;
 9248              		.loc 1 1389 9 is_stmt 0 view .LVU2928
 9249 11de B9F8EC07 		ldrh	r0, [r9, #2028]
 9250              	.LVL747:
1390:src/keys.c    **** 	}
 9251              		.loc 1 1390 3 is_stmt 1 view .LVU2929
 9252 11e2 FFF7FDBB 		b	.L603
 9253              	.LVL748:
 9254              	.L1104:
1390:src/keys.c    **** 	}
 9255              		.loc 1 1390 3 is_stmt 0 view .LVU2930
 9256              	.LBE976:
 9257              	.LBE1112:
2953:src/keys.c    **** 		// print_debug (3, c);
 9258              		.loc 1 2953 4 is_stmt 1 view .LVU2931
 9259              	.LBB1113:
 9260              	.LBI692:
1026:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 9261              		.loc 1 1026 12 view .LVU2932
 9262              	.LBB711:
1029:src/keys.c    **** 		// Row 1
 9263              		.loc 1 1029 2 view .LVU2933
1080:src/keys.c    **** 	int op = op_map[lc];
 9264              		.loc 1 1080 2 view .LVU2934
 9265              	.LBB698:
 9266              	.LBI694:
 139:src/keys.c    **** {
 9267              		.loc 1 139 12 view .LVU2935
 9268              	.LBB696:
 141:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9269              		.loc 1 141 2 view .LVU2936
 151:src/keys.c    **** }
 9270              		.loc 1 151 2 view .LVU2937
 151:src/keys.c    **** }
 9271              		.loc 1 151 2 is_stmt 0 view .LVU2938
 9272              	.LBE696:
 9273              	.LBE698:
1081:src/keys.c    **** 	reset_shift();
 9274              		.loc 1 1081 2 is_stmt 1 view .LVU2939
1081:src/keys.c    **** 	reset_shift();
 9275              		.loc 1 1081 17 is_stmt 0 view .LVU2940
 9276 11e6 2A4B     		ldr	r3, .L1155+12
 9277              	.LBB699:
 9278              	.LBB697:
 151:src/keys.c    **** }
 9279              		.loc 1 151 23 view .LVU2941
 9280 11e8 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9281              	.LBE697:
 9282              	.LBE699:
1081:src/keys.c    **** 	reset_shift();
 9283              		.loc 1 1081 17 view .LVU2942
 9284 11ea 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 9285              	.LVL749:
1082:src/keys.c    **** 
ARM GAS  /tmp/ccOshYsA.s 			page 269


 9286              		.loc 1 1082 2 is_stmt 1 view .LVU2943
 9287              	.LBB700:
 9288              	.LBI700:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9289              		.loc 1 102 13 view .LVU2944
 9290              	.LBE700:
 9291              	.LBE711:
 9292              	.LBE1113:
 9293              	.LBE1228:
 9294              	.LBE1289:
 103:src/keys.c    **** }
 9295              		.loc 1 103 2 view .LVU2945
 9296              	.LBB1290:
 9297              	.LBB1229:
 9298              	.LBB1114:
 9299              	.LBB712:
 9300              	.LBB707:
 9301              	.LBB701:
 9302              	.LBI701:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9303              		.loc 1 92 20 view .LVU2946
 9304              	.LBB702:
  93:src/keys.c    **** 	State2.shifts = shift;
 9305              		.loc 1 93 2 view .LVU2947
 9306              	.LBB703:
 9307              	.LBI703:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9308              		.loc 1 84 13 view .LVU2948
 9309              	.LBB704:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9310              		.loc 1 85 2 view .LVU2949
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9311              		.loc 1 85 18 is_stmt 0 view .LVU2950
 9312 11ee FFF7FEFF 		bl	shift_down
 9313              	.LVL750:
  86:src/keys.c    **** }
 9314              		.loc 1 86 2 is_stmt 1 view .LVU2951
 9315              	.LBE704:
 9316              	.LBE703:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9317              		.loc 1 94 2 view .LVU2952
 9318              	.LBE702:
 9319              	.LBE701:
 9320              	.LBE707:
1085:src/keys.c    **** 	case K62:
 9321              		.loc 1 1085 2 is_stmt 0 view .LVU2953
 9322 11f2 262C     		cmp	r4, #38
 9323              	.LBB708:
 9324              	.LBB706:
 9325              	.LBB705:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9326              		.loc 1 94 16 view .LVU2954
 9327 11f4 86F810B0 		strb	fp, [r6, #16]
  95:src/keys.c    **** 	return r;
 9328              		.loc 1 95 2 is_stmt 1 view .LVU2955
  95:src/keys.c    **** 	return r;
 9329              		.loc 1 95 19 is_stmt 0 view .LVU2956
ARM GAS  /tmp/ccOshYsA.s 			page 270


 9330 11f8 86F80DB0 		strb	fp, [r6, #13]
  96:src/keys.c    **** }
 9331              		.loc 1 96 2 is_stmt 1 view .LVU2957
 9332              	.LVL751:
  96:src/keys.c    **** }
 9333              		.loc 1 96 2 is_stmt 0 view .LVU2958
 9334              	.LBE705:
 9335              	.LBE706:
 9336              	.LBE708:
1085:src/keys.c    **** 	case K62:
 9337              		.loc 1 1085 2 is_stmt 1 view .LVU2959
 9338 11fc 00F04182 		beq	.L789
 9339 1200 272C     		cmp	r4, #39
 9340 1202 1BD1     		bne	.L791
1098:src/keys.c    **** 			return STATE_UNFINISHED;
 9341              		.loc 1 1098 3 view .LVU2960
1098:src/keys.c    **** 			return STATE_UNFINISHED;
 9342              		.loc 1 1098 7 is_stmt 0 view .LVU2961
 9343 1204 FFF7FEFF 		bl	is_bad_cmdline
 9344              	.LVL752:
1098:src/keys.c    **** 			return STATE_UNFINISHED;
 9345              		.loc 1 1098 6 view .LVU2962
 9346 1208 0028     		cmp	r0, #0
 9347 120a 7FF4E4A9 		bne	.L1065
1100:src/keys.c    **** 		process_cmdline_set_lift();
 9348              		.loc 1 1100 3 is_stmt 1 view .LVU2963
1100:src/keys.c    **** 		process_cmdline_set_lift();
 9349              		.loc 1 1100 30 is_stmt 0 view .LVU2964
 9350 120e B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 9351 1210 C3F38012 		ubfx	r2, r3, #6, #1
1100:src/keys.c    **** 		process_cmdline_set_lift();
 9352              		.loc 1 1100 22 view .LVU2965
 9353 1214 C2F10102 		rsb	r2, r2, #1
1100:src/keys.c    **** 		process_cmdline_set_lift();
 9354              		.loc 1 1100 18 view .LVU2966
 9355 1218 62F38613 		bfi	r3, r2, #6, #1
 9356 121c B375     		strb	r3, [r6, #22]
1101:src/keys.c    **** 		update_program_bounds(1);
 9357              		.loc 1 1101 3 is_stmt 1 view .LVU2967
 9358 121e FFF7FEFF 		bl	process_cmdline_set_lift
 9359              	.LVL753:
1102:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 9360              		.loc 1 1102 3 view .LVU2968
 9361 1222 0120     		movs	r0, #1
 9362 1224 FFF7FEFF 		bl	update_program_bounds
 9363              	.LVL754:
1103:src/keys.c    **** 			set_pc(0);
 9364              		.loc 1 1103 3 view .LVU2969
1103:src/keys.c    **** 			set_pc(0);
 9365              		.loc 1 1103 7 is_stmt 0 view .LVU2970
 9366 1228 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1103:src/keys.c    **** 			set_pc(0);
 9367              		.loc 1 1103 6 view .LVU2971
 9368 122a 10F04000 		ands	r0, r0, #64
 9369 122e 05D1     		bne	.L791
1103:src/keys.c    **** 			set_pc(0);
 9370              		.loc 1 1103 27 view .LVU2972
ARM GAS  /tmp/ccOshYsA.s 			page 271


 9371 1230 184B     		ldr	r3, .L1155+16
1103:src/keys.c    **** 			set_pc(0);
 9372              		.loc 1 1103 24 view .LVU2973
 9373 1232 B3F8E027 		ldrh	r2, [r3, #2016]
 9374 1236 012A     		cmp	r2, #1
 9375 1238 00F0B483 		beq	.L1136
 9376              	.L791:
1111:src/keys.c    **** 		if (op & _RARG) {
 9377              		.loc 1 1111 5 view .LVU2974
 9378 123c BAF1330F 		cmp	r10, #51
1081:src/keys.c    **** 	reset_shift();
 9379              		.loc 1 1081 6 view .LVU2975
 9380 1240 D346     		mov	fp, r10
1111:src/keys.c    **** 		if (op & _RARG) {
 9381              		.loc 1 1111 2 is_stmt 1 view .LVU2976
1111:src/keys.c    **** 		if (op & _RARG) {
 9382              		.loc 1 1111 5 is_stmt 0 view .LVU2977
 9383 1242 0AD0     		beq	.L799
 9384              	.LVL755:
1112:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9385              		.loc 1 1112 3 is_stmt 1 view .LVU2978
1112:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9386              		.loc 1 1112 6 is_stmt 0 view .LVU2979
 9387 1244 1AF4004F 		tst	r10, #32768
 9388 1248 00F04183 		beq	.L1137
1113:src/keys.c    **** 			op = STATE_UNFINISHED;
 9389              		.loc 1 1113 4 is_stmt 1 view .LVU2980
 9390              	.LVL756:
 9391              	.LBB709:
 9392              	.LBI709:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 9393              		.loc 1 520 13 view .LVU2981
 9394              	.LBB710:
 521:src/keys.c    **** 		return;
 9395              		.loc 1 521 2 view .LVU2982
 521:src/keys.c    **** 		return;
 9396              		.loc 1 521 6 is_stmt 0 view .LVU2983
 9397 124c FFF7FEFF 		bl	is_bad_cmdline
 9398              	.LVL757:
 521:src/keys.c    **** 		return;
 9399              		.loc 1 521 5 view .LVU2984
 9400 1250 18B9     		cbnz	r0, .L799
 9401 1252 5FFA8AF0 		uxtb	r0, r10
 9402 1256 FFF7FEFF 		bl	init_arg.part.0
 9403              	.LVL758:
 9404              	.L799:
 521:src/keys.c    **** 		return;
 9405              		.loc 1 521 5 view .LVU2985
 9406              	.LBE710:
 9407              	.LBE709:
1117:src/keys.c    **** #undef _RARG
 9408              		.loc 1 1117 2 is_stmt 1 view .LVU2986
1093:src/keys.c    **** #endif
 9409              		.loc 1 1093 29 is_stmt 0 view .LVU2987
 9410 125a 4FF0330B 		mov	fp, #51
 9411              	.LVL759:
 9412              	.L794:
ARM GAS  /tmp/ccOshYsA.s 			page 272


1117:src/keys.c    **** #undef _RARG
 9413              		.loc 1 1117 57 view .LVU2988
 9414 125e 2BF4804B 		bic	fp, fp, #16384
 9415 1262 FFF795B9 		b	.L595
 9416              	.LVL760:
 9417              	.L1095:
1117:src/keys.c    **** #undef _RARG
 9418              		.loc 1 1117 57 view .LVU2989
 9419              	.LBE712:
 9420              	.LBE1114:
 9421              	.LBB1115:
 9422              	.LBB689:
 9423              	.LBB682:
 342:src/keys.c    **** #else
 9424              		.loc 1 342 45 view .LVU2990
 9425 1266 FFF7FEFF 		bl	shift_down
 9426              	.LVL761:
 342:src/keys.c    **** #else
 9427              		.loc 1 342 42 view .LVU2991
 9428 126a 0328     		cmp	r0, #3
 9429 126c 00F02083 		beq	.L660
 9430 1270 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 340:src/keys.c    **** #ifndef WINGUI
 9431              		.loc 1 340 8 view .LVU2992
 9432 1272 094B     		ldr	r3, .L1155+20
 342:src/keys.c    **** #else
 9433              		.loc 1 342 73 view .LVU2993
 9434 1274 DC46     		mov	ip, fp
 346:src/keys.c    ****   }
 9435              		.loc 1 346 9 view .LVU2994
 9436 1276 0C21     		movs	r1, #12
 9437 1278 FFF759B8 		b	.L659
 9438              	.LVL762:
 9439              	.L869:
 346:src/keys.c    ****   }
 9440              		.loc 1 346 9 view .LVU2995
 9441              	.LBE682:
 9442              	.LBE689:
 9443              	.LBE1115:
 9444              	.LBB1116:
 9445              	.LBB1088:
2564:src/keys.c    **** 	const int opcode = getprog(pc);
 9446              		.loc 1 2564 27 view .LVU2996
 9447 127c 4FF0030B 		mov	fp, #3
 9448 1280 50E5     		b	.L683
 9449              	.L1156:
 9450 1282 00BF     		.align	2
 9451              	.L1155:
 9452 1284 00000000 		.word	.LANCHOR1
 9453 1288 00000000 		.word	.LANCHOR0
 9454 128c 00000000 		.word	.LANCHOR9
 9455 1290 00000000 		.word	.LANCHOR21
 9456 1294 00000000 		.word	PersistentRam
 9457 1298 00000000 		.word	.LANCHOR11
 9458              	.LVL763:
 9459              	.L876:
2564:src/keys.c    **** 	const int opcode = getprog(pc);
ARM GAS  /tmp/ccOshYsA.s 			page 273


 9460              		.loc 1 2564 27 view .LVU2997
 9461              	.LBE1088:
 9462              	.LBE1116:
 9463              	.LBB1117:
 9464              	.LBB875:
 9465              	.LBB859:
 9466              	.LBB854:
 454:src/keys.c    **** 		else if (shift == SHIFT_G)
 9467              		.loc 1 454 10 view .LVU2998
 9468 129c 0422     		movs	r2, #4
 9469              	.L735:
 9470              	.LVL764:
 458:src/keys.c    **** }
 9471              		.loc 1 458 2 is_stmt 1 view .LVU2999
 9472              	.LBB850:
 124:src/keys.c    **** {
 9473              		.loc 1 124 12 view .LVU3000
 9474              	.LBB846:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9475              		.loc 1 126 2 view .LVU3001
 136:src/keys.c    **** }
 9476              		.loc 1 136 2 view .LVU3002
 136:src/keys.c    **** }
 9477              		.loc 1 136 23 is_stmt 0 view .LVU3003
 9478 129e D149     		ldr	r1, .L1157
 9479              	.LBE846:
 9480              	.LBE850:
 458:src/keys.c    **** }
 9481              		.loc 1 458 49 view .LVU3004
 9482 12a0 DFF854C3 		ldr	ip, .L1157+20
 9483              	.LBB851:
 9484              	.LBB847:
 136:src/keys.c    **** }
 9485              		.loc 1 136 23 view .LVU3005
 9486 12a4 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9487              	.LBE847:
 9488              	.LBE851:
 458:src/keys.c    **** }
 9489              		.loc 1 458 49 view .LVU3006
 9490 12a6 4FF0060E 		mov	lr, #6
 9491 12aa 0EFB01C1 		mla	r1, lr, r1, ip
 9492 12ae 063C     		subs	r4, r4, #6
 9493 12b0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9494              	.LVL765:
 458:src/keys.c    **** }
 9495              		.loc 1 458 49 view .LVU3007
 9496              	.LBE854:
 9497              	.LBE859:
1416:src/keys.c    ****         int op = STATE_UNFINISHED;
 9498              		.loc 1 1416 2 is_stmt 1 view .LVU3008
1417:src/keys.c    **** 	State2.alpha_pos = 0;
 9499              		.loc 1 1417 9 view .LVU3009
1418:src/keys.c    **** 
 9500              		.loc 1 1418 2 view .LVU3010
1420:src/keys.c    **** 	case K10:	// STO
 9501              		.loc 1 1420 2 view .LVU3011
 9502 12b2 212C     		cmp	r4, #33
ARM GAS  /tmp/ccOshYsA.s 			page 274


 9503 12b4 3FF678AF 		bhi	.L738
 9504 12b8 01A1     		adr	r1, .L740
 9505 12ba 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9506 12be 00BF     		.p2align 2
 9507              	.L740:
 9508 12c0 5F180000 		.word	.L747+1
 9509 12c4 37180000 		.word	.L746+1
 9510 12c8 A9110000 		.word	.L738+1
 9511 12cc A9110000 		.word	.L738+1
 9512 12d0 A9110000 		.word	.L738+1
 9513 12d4 A9110000 		.word	.L738+1
 9514 12d8 11180000 		.word	.L745+1
 9515 12dc A9110000 		.word	.L738+1
 9516 12e0 A9110000 		.word	.L738+1
 9517 12e4 A9110000 		.word	.L738+1
 9518 12e8 EB060000 		.word	.L744+1
 9519 12ec A9110000 		.word	.L738+1
 9520 12f0 ED170000 		.word	.L743+1
 9521 12f4 A9110000 		.word	.L738+1
 9522 12f8 A9110000 		.word	.L738+1
 9523 12fc A9110000 		.word	.L738+1
 9524 1300 A9110000 		.word	.L738+1
 9525 1304 A9110000 		.word	.L738+1
 9526 1308 11070000 		.word	.L742+1
 9527 130c A9110000 		.word	.L738+1
 9528 1310 A9110000 		.word	.L738+1
 9529 1314 A9110000 		.word	.L738+1
 9530 1318 A9110000 		.word	.L738+1
 9531 131c A9110000 		.word	.L738+1
 9532 1320 A9110000 		.word	.L738+1
 9533 1324 A9110000 		.word	.L738+1
 9534 1328 A9110000 		.word	.L738+1
 9535 132c A9110000 		.word	.L738+1
 9536 1330 A9110000 		.word	.L738+1
 9537 1334 A9110000 		.word	.L738+1
 9538 1338 D1170000 		.word	.L741+1
 9539 133c A9110000 		.word	.L738+1
 9540 1340 A9110000 		.word	.L738+1
 9541 1344 B7170000 		.word	.L739+1
 9542              	.LVL766:
 9543              		.p2align 1
 9544              	.L1102:
1420:src/keys.c    **** 	case K10:	// STO
 9545              		.loc 1 1420 2 is_stmt 0 view .LVU3012
 9546              	.LBE875:
 9547              	.LBE1117:
2948:src/keys.c    **** 	} else {
 9548              		.loc 1 2948 3 is_stmt 1 view .LVU3013
 9549              	.LBB1118:
 9550              	.LBI1118:
1126:src/keys.c    **** #define _RARG   0xFF00
 9551              		.loc 1 1126 12 view .LVU3014
 9552              	.LBB1119:
1131:src/keys.c    **** 		// Row 1
 9553              		.loc 1 1131 2 view .LVU3015
1182:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9554              		.loc 1 1182 2 view .LVU3016
ARM GAS  /tmp/ccOshYsA.s 			page 275


 9555              	.LBB1120:
 9556              	.LBI1120:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9557              		.loc 1 102 13 view .LVU3017
 9558              	.LBE1120:
 9559              	.LBE1119:
 9560              	.LBE1118:
 9561              	.LBE1229:
 9562              	.LBE1290:
 103:src/keys.c    **** }
 9563              		.loc 1 103 2 view .LVU3018
 9564              	.LBB1291:
 9565              	.LBB1230:
 9566              	.LBB1148:
 9567              	.LBB1145:
 9568              	.LBB1131:
 9569              	.LBB1121:
 9570              	.LBI1121:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9571              		.loc 1 92 20 view .LVU3019
 9572              	.LBB1122:
  93:src/keys.c    **** 	State2.shifts = shift;
 9573              		.loc 1 93 2 view .LVU3020
 9574              	.LBB1123:
 9575              	.LBI1123:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9576              		.loc 1 84 13 view .LVU3021
 9577              	.LBB1124:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9578              		.loc 1 85 2 view .LVU3022
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9579              		.loc 1 85 18 is_stmt 0 view .LVU3023
 9580 1348 FFF7FEFF 		bl	shift_down
 9581              	.LVL767:
  86:src/keys.c    **** }
 9582              		.loc 1 86 2 is_stmt 1 view .LVU3024
  86:src/keys.c    **** }
 9583              		.loc 1 86 52 is_stmt 0 view .LVU3025
 9584 134c 0346     		mov	r3, r0
 9585 134e 00B9     		cbnz	r0, .L759
 9586 1350 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 9587              	.L759:
 9588              	.LVL768:
  86:src/keys.c    **** }
 9589              		.loc 1 86 52 view .LVU3026
 9590              	.LBE1124:
 9591              	.LBE1123:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9592              		.loc 1 94 2 is_stmt 1 view .LVU3027
 9593              	.LBE1122:
 9594              	.LBE1121:
 9595              	.LBE1131:
 9596              	.LBB1132:
 9597              	.LBB1133:
 151:src/keys.c    **** }
 9598              		.loc 1 151 23 is_stmt 0 view .LVU3028
 9599 1352 A54A     		ldr	r2, .L1157+4
ARM GAS  /tmp/ccOshYsA.s 			page 276


 9600              	.LBE1133:
 9601              	.LBE1132:
1184:src/keys.c    **** 	State2.cmplx = 0;
 9602              		.loc 1 1184 21 view .LVU3029
 9603 1354 A548     		ldr	r0, .L1157+8
 9604              	.LBB1136:
 9605              	.LBB1134:
 151:src/keys.c    **** }
 9606              		.loc 1 151 23 view .LVU3030
 9607 1356 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9608              	.LBE1134:
 9609              	.LBE1136:
1185:src/keys.c    **** 
 9610              		.loc 1 1185 15 view .LVU3031
 9611 1358 717D     		ldrb	r1, [r6, #21]	@ zero_extendqisi2
1184:src/keys.c    **** 	State2.cmplx = 0;
 9612              		.loc 1 1184 21 view .LVU3032
 9613 135a 03EB8202 		add	r2, r3, r2, lsl #2
 9614              	.LBB1137:
 9615              	.LBB1128:
 9616              	.LBB1125:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9617              		.loc 1 94 16 view .LVU3033
 9618 135e 4FF0000A 		mov	r10, #0
 9619              	.LVL769:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9620              		.loc 1 94 16 view .LVU3034
 9621              	.LBE1125:
 9622              	.LBE1128:
 9623              	.LBE1137:
1184:src/keys.c    **** 	State2.cmplx = 0;
 9624              		.loc 1 1184 21 view .LVU3035
 9625 1362 30F812B0 		ldrh	fp, [r0, r2, lsl #1]
 9626              	.LBB1138:
 9627              	.LBB1129:
 9628              	.LBB1126:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9629              		.loc 1 94 16 view .LVU3036
 9630 1366 86F810A0 		strb	r10, [r6, #16]
  95:src/keys.c    **** 	return r;
 9631              		.loc 1 95 2 is_stmt 1 view .LVU3037
 9632              	.LBE1126:
 9633              	.LBE1129:
 9634              	.LBE1138:
1187:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9635              		.loc 1 1187 5 is_stmt 0 view .LVU3038
 9636 136a 0BF47F42 		and	r2, fp, #65280
1185:src/keys.c    **** 
 9637              		.loc 1 1185 15 view .LVU3039
 9638 136e 6AF34101 		bfi	r1, r10, #1, #1
1187:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9639              		.loc 1 1187 5 view .LVU3040
 9640 1372 B2F57F4F 		cmp	r2, #65280
1185:src/keys.c    **** 
 9641              		.loc 1 1185 15 view .LVU3041
 9642 1376 7175     		strb	r1, [r6, #21]
 9643              	.LBB1139:
ARM GAS  /tmp/ccOshYsA.s 			page 277


 9644              	.LBB1130:
 9645              	.LBB1127:
  95:src/keys.c    **** 	return r;
 9646              		.loc 1 95 19 view .LVU3042
 9647 1378 86F80DA0 		strb	r10, [r6, #13]
  96:src/keys.c    **** }
 9648              		.loc 1 96 2 is_stmt 1 view .LVU3043
 9649              	.LVL770:
  96:src/keys.c    **** }
 9650              		.loc 1 96 2 is_stmt 0 view .LVU3044
 9651              	.LBE1127:
 9652              	.LBE1130:
 9653              	.LBE1139:
1183:src/keys.c    **** 	int op = op_map[lc][shift];
 9654              		.loc 1 1183 2 is_stmt 1 view .LVU3045
 9655              	.LBB1140:
 9656              	.LBI1132:
 139:src/keys.c    **** {
 9657              		.loc 1 139 12 view .LVU3046
 9658              	.LBB1135:
 141:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9659              		.loc 1 141 2 view .LVU3047
 151:src/keys.c    **** }
 9660              		.loc 1 151 2 view .LVU3048
 151:src/keys.c    **** }
 9661              		.loc 1 151 2 is_stmt 0 view .LVU3049
 9662              	.LBE1135:
 9663              	.LBE1140:
1184:src/keys.c    **** 	State2.cmplx = 0;
 9664              		.loc 1 1184 2 is_stmt 1 view .LVU3050
1185:src/keys.c    **** 
 9665              		.loc 1 1185 2 view .LVU3051
1187:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9666              		.loc 1 1187 2 view .LVU3052
1187:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9667              		.loc 1 1187 5 is_stmt 0 view .LVU3053
 9668 137c 00F07383 		beq	.L785
1191:src/keys.c    **** 		// HYP
 9669              		.loc 1 1191 2 is_stmt 1 view .LVU3054
1191:src/keys.c    **** 		// HYP
 9670              		.loc 1 1191 5 is_stmt 0 view .LVU3055
 9671 1380 002C     		cmp	r4, #0
 9672 1382 00F05783 		beq	.L1138
1200:src/keys.c    **** 		switch (c) {
 9673              		.loc 1 1200 2 is_stmt 1 view .LVU3056
1200:src/keys.c    **** 		switch (c) {
 9674              		.loc 1 1200 5 is_stmt 0 view .LVU3057
 9675 1386 002B     		cmp	r3, #0
 9676 1388 3FF402A9 		beq	.L595
1201:src/keys.c    **** 		case K_CMPLX:
 9677              		.loc 1 1201 3 is_stmt 1 view .LVU3058
 9678 138c 242C     		cmp	r4, #36
 9679 138e 00F04D83 		beq	.L762
 9680 1392 2D2C     		cmp	r4, #45
 9681 1394 00F04183 		beq	.L763
 9682 1398 1F2C     		cmp	r4, #31
 9683 139a 7FF4F9A8 		bne	.L595
ARM GAS  /tmp/ccOshYsA.s 			page 278


1207:src/keys.c    **** 				if (is_bad_cmdline())
 9684              		.loc 1 1207 4 view .LVU3059
1207:src/keys.c    **** 				if (is_bad_cmdline())
 9685              		.loc 1 1207 7 is_stmt 0 view .LVU3060
 9686 139e BBF1330F 		cmp	fp, #51
 9687 13a2 3FF418A9 		beq	.L1065
1208:src/keys.c    **** 					return STATE_UNFINISHED;
 9688              		.loc 1 1208 5 is_stmt 1 view .LVU3061
1208:src/keys.c    **** 					return STATE_UNFINISHED;
 9689              		.loc 1 1208 9 is_stmt 0 view .LVU3062
 9690 13a6 FFF7FEFF 		bl	is_bad_cmdline
 9691              	.LVL771:
1208:src/keys.c    **** 					return STATE_UNFINISHED;
 9692              		.loc 1 1208 8 view .LVU3063
 9693 13aa 0446     		mov	r4, r0
 9694 13ac 0028     		cmp	r0, #0
 9695 13ae 7FF412A9 		bne	.L1065
1210:src/keys.c    **** 				State2.cmplx = 1;
 9696              		.loc 1 1210 5 is_stmt 1 view .LVU3064
 9697 13b2 FFF7FEFF 		bl	process_cmdline_set_lift
 9698              	.LVL772:
1211:src/keys.c    **** 				State2.test = op;
 9699              		.loc 1 1211 5 view .LVU3065
1211:src/keys.c    **** 				State2.test = op;
 9700              		.loc 1 1211 18 is_stmt 0 view .LVU3066
 9701 13b6 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1212:src/keys.c    **** 			}
 9702              		.loc 1 1212 17 view .LVU3067
 9703 13b8 86F80FB0 		strb	fp, [r6, #15]
1211:src/keys.c    **** 				State2.test = op;
 9704              		.loc 1 1211 18 view .LVU3068
 9705 13bc 43F00203 		orr	r3, r3, #2
 9706              	.LBE1145:
 9707              	.LBE1148:
 9708              	.LBE1230:
 9709              	.LBE1291:
2977:src/keys.c    **** #ifdef DM42
 9710              		.loc 1 2977 7 view .LVU3069
 9711 13c0 A046     		mov	r8, r4
 9712              	.LBB1292:
 9713              	.LBB1231:
 9714              	.LBB1149:
 9715              	.LBB1146:
1211:src/keys.c    **** 				State2.test = op;
 9716              		.loc 1 1211 18 view .LVU3070
 9717 13c2 7375     		strb	r3, [r6, #21]
1212:src/keys.c    **** 			}
 9718              		.loc 1 1212 5 is_stmt 1 view .LVU3071
1214:src/keys.c    **** 
 9719              		.loc 1 1214 11 is_stmt 0 view .LVU3072
 9720 13c4 4FF0330B 		mov	fp, #51
 9721              	.LVL773:
1214:src/keys.c    **** 
 9722              		.loc 1 1214 11 view .LVU3073
 9723 13c8 FEF7A8BE 		b	.L566
 9724              	.LVL774:
 9725              	.L1106:
ARM GAS  /tmp/ccOshYsA.s 			page 279


1214:src/keys.c    **** 
 9726              		.loc 1 1214 11 view .LVU3074
 9727              	.LBE1146:
 9728              	.LBE1149:
 9729              	.LBB1150:
 9730              	.LBB784:
2385:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9731              		.loc 1 2385 3 is_stmt 1 view .LVU3075
2385:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9732              		.loc 1 2385 12 is_stmt 0 view .LVU3076
 9733 13cc F27A     		ldrb	r2, [r6, #11]	@ zero_extendqisi2
 9734 13ce 2046     		mov	r0, r4
 9735 13d0 941E     		subs	r4, r2, #2
 9736 13d2 6242     		rsbs	r2, r4, #0
 9737 13d4 6241     		adcs	r2, r2, r4
 9738 13d6 FFF7FEFF 		bl	process_catalogue
 9739              	.LVL775:
2386:src/keys.c    **** 			return opcode;
 9740              		.loc 1 2386 3 is_stmt 1 view .LVU3077
2386:src/keys.c    **** 			return opcode;
 9741              		.loc 1 2386 6 is_stmt 0 view .LVU3078
 9742 13da 3328     		cmp	r0, #51
 9743 13dc 3FF4FBA8 		beq	.L1065
2388:src/keys.c    **** 		goto add_char;
 9744              		.loc 1 2388 3 is_stmt 1 view .LVU3079
2388:src/keys.c    **** 		goto add_char;
 9745              		.loc 1 2388 6 is_stmt 0 view .LVU3080
 9746 13e0 C3B2     		uxtb	r3, r0
 9747              	.LVL776:
2389:src/keys.c    **** 	}
 9748              		.loc 1 2389 3 is_stmt 1 view .LVU3081
 9749 13e2 FFF7B6B8 		b	.L671
 9750              	.LVL777:
 9751              	.L1123:
2389:src/keys.c    **** 	}
 9752              		.loc 1 2389 3 is_stmt 0 view .LVU3082
 9753              	.LBE784:
 9754              	.LBE1150:
 9755              	.LBB1151:
 9756              	.LBB998:
 9757              	.LBB990:
2503:src/keys.c    **** 		else if (nn != NO_REG)
 9758              		.loc 1 2503 4 is_stmt 1 view .LVU3083
2505:src/keys.c    **** 	}
 9759              		.loc 1 2505 6 is_stmt 0 view .LVU3084
 9760 13e6 9342     		cmp	r3, r2
 9761 13e8 08BF     		it	eq
 9762 13ea 0A22     		moveq	r2, #10
 9763              	.LVL778:
2505:src/keys.c    **** 	}
 9764              		.loc 1 2505 6 view .LVU3085
 9765 13ec FFF750BB 		b	.L639
 9766              	.LVL779:
 9767              	.L1132:
2505:src/keys.c    **** 	}
 9768              		.loc 1 2505 6 view .LVU3086
 9769              	.LBE990:
ARM GAS  /tmp/ccOshYsA.s 			page 280


 9770              	.LBE998:
 9771              	.LBE1151:
 9772              	.LBB1152:
 9773              	.LBB817:
2711:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9774              		.loc 1 2711 50 view .LVU3087
 9775 13f0 0D2C     		cmp	r4, #13
 9776 13f2 7FF4F1AD 		bne	.L717
2712:src/keys.c    **** 		set_smode(SDISP_SHOW);
 9777              		.loc 1 2712 3 is_stmt 1 view .LVU3088
 9778 13f6 012B     		cmp	r3, #1
 9779 13f8 14BF     		ite	ne
 9780 13fa 2C20     		movne	r0, #44
 9781              	.LVL780:
2712:src/keys.c    **** 		set_smode(SDISP_SHOW);
 9782              		.loc 1 2712 3 is_stmt 0 view .LVU3089
 9783 13fc 2B20     		moveq	r0, #43
 9784 13fe FFF7FEFF 		bl	set_window
 9785              	.LVL781:
2713:src/keys.c    **** 	}
 9786              		.loc 1 2713 3 is_stmt 1 view .LVU3090
 9787              	.LBB812:
 9788              	.LBI812:
 665:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9789              		.loc 1 665 13 view .LVU3091
 9790              	.LBB813:
 666:src/keys.c    **** }
 9791              		.loc 1 666 2 view .LVU3092
 666:src/keys.c    **** }
 9792              		.loc 1 666 15 is_stmt 0 view .LVU3093
 9793 1402 737C     		ldrb	r3, [r6, #17]	@ zero_extendqisi2
 9794 1404 013B     		subs	r3, r3, #1
 9795 1406 18BF     		it	ne
 9796 1408 0123     		movne	r3, #1
 9797 140a 7374     		strb	r3, [r6, #17]
 9798              	.LVL782:
 666:src/keys.c    **** }
 9799              		.loc 1 666 15 view .LVU3094
 9800              	.LBE813:
 9801              	.LBE812:
2720:src/keys.c    **** 	case K_DOWN:
 9802              		.loc 1 2720 2 is_stmt 1 view .LVU3095
2720:src/keys.c    **** 	case K_DOWN:
 9803              		.loc 1 2720 2 is_stmt 0 view .LVU3096
 9804              	.LBE817:
 9805              	.LBE1152:
 9806              	.LBE1231:
 9807              	.LBE1292:
3162:src/keys.c    ****     case STATE_SST:
 9808              		.loc 1 3162 5 is_stmt 1 view .LVU3097
 9809              	.LBB1293:
 9810              	.LBB1232:
 9811              	.LBB1153:
 9812              	.LBB818:
2771:src/keys.c    **** 	}
 9813              		.loc 1 2771 10 is_stmt 0 view .LVU3098
 9814 140c 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccOshYsA.s 			page 281


 9815 1410 FEF784BE 		b	.L566
 9816              	.LVL783:
 9817              	.L1113:
2771:src/keys.c    **** 	}
 9818              		.loc 1 2771 10 view .LVU3099
 9819              	.LBE818:
 9820              	.LBE1153:
 9821              	.LBB1154:
 9822              	.LBB957:
1922:src/keys.c    **** 			if (n == regI_idx)
 9823              		.loc 1 1922 3 is_stmt 1 view .LVU3100
1922:src/keys.c    **** 			if (n == regI_idx)
 9824              		.loc 1 1922 6 is_stmt 0 view .LVU3101
 9825 1414 BEF1000F 		cmp	lr, #0
 9826 1418 02D0     		beq	.L624
1922:src/keys.c    **** 			if (n == regI_idx)
 9827              		.loc 1 1922 12 view .LVU3102
 9828 141a 1CF0010F 		tst	ip, #1
 9829 141e 06D1     		bne	.L1139
 9830              	.L624:
1929:src/keys.c    **** 	}
 9831              		.loc 1 1929 3 is_stmt 1 view .LVU3103
1929:src/keys.c    **** 	}
 9832              		.loc 1 1929 10 is_stmt 0 view .LVU3104
 9833 1420 0AF1200A 		add	r10, r10, #32
 9834              	.LVL784:
1929:src/keys.c    **** 	}
 9835              		.loc 1 1929 10 view .LVU3105
 9836 1424 40EA0A20 		orr	r0, r0, r10, lsl #8
 9837 1428 8346     		mov	fp, r0
 9838              	.LVL785:
1929:src/keys.c    **** 	}
 9839              		.loc 1 1929 10 view .LVU3106
 9840 142a FFF722B8 		b	.L617
 9841              	.LVL786:
 9842              	.L1139:
1923:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9843              		.loc 1 1923 4 is_stmt 1 view .LVU3107
1923:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9844              		.loc 1 1923 7 is_stmt 0 view .LVU3108
 9845 142e 6D28     		cmp	r0, #109
 9846 1430 7FF4A4AA 		bne	.L625
1924:src/keys.c    **** 			// Disallow odd complex registers > A
 9847              		.loc 1 1924 5 is_stmt 1 view .LVU3109
1924:src/keys.c    **** 			// Disallow odd complex registers > A
 9848              		.loc 1 1924 30 is_stmt 0 view .LVU3110
 9849 1434 0BF1290B 		add	fp, fp, #41
 9850              	.LVL787:
1924:src/keys.c    **** 			// Disallow odd complex registers > A
 9851              		.loc 1 1924 30 view .LVU3111
 9852 1438 FFF7AAB8 		b	.L595
 9853              	.LVL788:
 9854              	.L1129:
1924:src/keys.c    **** 			// Disallow odd complex registers > A
 9855              		.loc 1 1924 30 view .LVU3112
 9856 143c 0093     		str	r3, [sp]
 9857              	.LBE957:
ARM GAS  /tmp/ccOshYsA.s 			page 282


 9858              	.LBE1154:
 9859              	.LBB1155:
 9860              	.LBB819:
2695:src/keys.c    **** 	const int g_max = global_regs();
 9861              		.loc 1 2695 33 view .LVU3113
 9862 143e FFF7FEFF 		bl	local_regs
 9863              	.LVL789:
2695:src/keys.c    **** 	const int g_max = global_regs();
 9864              		.loc 1 2695 33 view .LVU3114
 9865 1442 009B     		ldr	r3, [sp]
 9866 1444 8146     		mov	r9, r0
 9867 1446 B6E5     		b	.L709
 9868              	.LVL790:
 9869              	.L1103:
2695:src/keys.c    **** 	const int g_max = global_regs();
 9870              		.loc 1 2695 33 view .LVU3115
 9871              	.LBE819:
 9872              	.LBE1155:
2951:src/keys.c    **** 		if (shift == SHIFT_H)
 9873              		.loc 1 2951 4 is_stmt 1 view .LVU3116
 9874              	.LBB1156:
 9875              	.LBI887:
 867:src/keys.c    **** 
 9876              		.loc 1 867 12 view .LVU3117
 9877              	.LBB921:
 870:src/keys.c    **** 		// Row 1
 9878              		.loc 1 870 2 view .LVU3118
 921:src/keys.c    **** 		STATE_UNFINISHED,
 9879              		.loc 1 921 2 view .LVU3119
 928:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9880              		.loc 1 928 2 view .LVU3120
 9881              	.LBB896:
 9882              	.LBI896:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9883              		.loc 1 102 13 view .LVU3121
 9884              	.LBE896:
 9885              	.LBE921:
 9886              	.LBE1156:
 9887              	.LBE1232:
 9888              	.LBE1293:
 103:src/keys.c    **** }
 9889              		.loc 1 103 2 view .LVU3122
 9890              	.LBB1294:
 9891              	.LBB1233:
 9892              	.LBB1157:
 9893              	.LBB922:
 9894              	.LBB907:
 9895              	.LBB897:
 9896              	.LBI897:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9897              		.loc 1 92 20 view .LVU3123
 9898              	.LBB898:
  93:src/keys.c    **** 	State2.shifts = shift;
 9899              		.loc 1 93 2 view .LVU3124
 9900              	.LBB899:
 9901              	.LBI899:
  84:src/keys.c    **** 	enum shifts s = shift_down();
ARM GAS  /tmp/ccOshYsA.s 			page 283


 9902              		.loc 1 84 13 view .LVU3125
 9903              	.LBB900:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9904              		.loc 1 85 2 view .LVU3126
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9905              		.loc 1 85 18 is_stmt 0 view .LVU3127
 9906 1448 FFF7FEFF 		bl	shift_down
 9907              	.LVL791:
  86:src/keys.c    **** }
 9908              		.loc 1 86 2 is_stmt 1 view .LVU3128
  86:src/keys.c    **** }
 9909              		.loc 1 86 52 is_stmt 0 view .LVU3129
 9910 144c 0346     		mov	r3, r0
 9911 144e 00B9     		cbnz	r0, .L766
 9912 1450 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 9913              	.L766:
 9914              	.LVL792:
  86:src/keys.c    **** }
 9915              		.loc 1 86 52 view .LVU3130
 9916              	.LBE900:
 9917              	.LBE899:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9918              		.loc 1 94 2 is_stmt 1 view .LVU3131
 9919              	.LBE898:
 9920              	.LBE897:
 9921              	.LBE907:
 9922              	.LBB908:
 9923              	.LBB909:
 151:src/keys.c    **** }
 9924              		.loc 1 151 23 is_stmt 0 view .LVU3132
 9925 1452 654A     		ldr	r2, .L1157+4
 9926              	.LBE909:
 9927              	.LBE908:
 930:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9928              		.loc 1 930 21 view .LVU3133
 9929 1454 DFF8A4C1 		ldr	ip, .L1157+24
 9930              	.LBB912:
 9931              	.LBB910:
 151:src/keys.c    **** }
 9932              		.loc 1 151 23 view .LVU3134
 9933 1458 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 9934              	.LBE910:
 9935              	.LBE912:
 930:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9936              		.loc 1 930 21 view .LVU3135
 9937 145a 4200     		lsls	r2, r0, #1
 9938 145c 022B     		cmp	r3, #2
 9939 145e 08BF     		it	eq
 9940 1460 0132     		addeq	r2, r2, #1
 9941              	.LBB913:
 9942              	.LBB904:
 9943              	.LBB901:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9944              		.loc 1 94 16 view .LVU3136
 9945 1462 0021     		movs	r1, #0
 9946              	.LBE901:
 9947              	.LBE904:
ARM GAS  /tmp/ccOshYsA.s 			page 284


 9948              	.LBE913:
 930:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9949              		.loc 1 930 21 view .LVU3137
 9950 1464 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 9951              	.LBB914:
 9952              	.LBB905:
 9953              	.LBB902:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9954              		.loc 1 94 16 view .LVU3138
 9955 1468 3174     		strb	r1, [r6, #16]
  95:src/keys.c    **** 	return r;
 9956              		.loc 1 95 2 is_stmt 1 view .LVU3139
 9957 146a 0BF4704A 		and	r10, fp, #61440
 9958              	.LVL793:
  95:src/keys.c    **** 	return r;
 9959              		.loc 1 95 2 is_stmt 0 view .LVU3140
 9960              	.LBE902:
 9961              	.LBE905:
 9962              	.LBE914:
 932:src/keys.c    **** 		op &= ~NO_INT;
 9963              		.loc 1 932 5 view .LVU3141
 9964 146e BAF5704F 		cmp	r10, #61440
 9965              	.LBB915:
 9966              	.LBB906:
 9967              	.LBB903:
  95:src/keys.c    **** 	return r;
 9968              		.loc 1 95 19 view .LVU3142
 9969 1472 7173     		strb	r1, [r6, #13]
  96:src/keys.c    **** }
 9970              		.loc 1 96 2 is_stmt 1 view .LVU3143
 9971              	.LVL794:
  96:src/keys.c    **** }
 9972              		.loc 1 96 2 is_stmt 0 view .LVU3144
 9973              	.LBE903:
 9974              	.LBE906:
 9975              	.LBE915:
 929:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 9976              		.loc 1 929 2 is_stmt 1 view .LVU3145
 9977              	.LBB916:
 9978              	.LBI908:
 139:src/keys.c    **** {
 9979              		.loc 1 139 12 view .LVU3146
 9980              	.LBB911:
 141:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9981              		.loc 1 141 2 view .LVU3147
 151:src/keys.c    **** }
 9982              		.loc 1 151 2 view .LVU3148
 151:src/keys.c    **** }
 9983              		.loc 1 151 2 is_stmt 0 view .LVU3149
 9984              	.LBE911:
 9985              	.LBE916:
 930:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9986              		.loc 1 930 2 is_stmt 1 view .LVU3150
 931:src/keys.c    **** 	if (no_int)
 9987              		.loc 1 931 2 view .LVU3151
 932:src/keys.c    **** 		op &= ~NO_INT;
 9988              		.loc 1 932 2 view .LVU3152
ARM GAS  /tmp/ccOshYsA.s 			page 285


 932:src/keys.c    **** 		op &= ~NO_INT;
 9989              		.loc 1 932 5 is_stmt 0 view .LVU3153
 9990 1474 00F03C82 		beq	.L1140
 935:src/keys.c    **** 	case K00:
 9991              		.loc 1 935 2 is_stmt 1 view .LVU3154
 9992 1478 282C     		cmp	r4, #40
 9993 147a 63D8     		bhi	.L786
 9994 147c 01A2     		adr	r2, .L841
 9995 147e 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 9996 1482 00BF     		.p2align 2
 9997              	.L841:
 9998 1484 79150000 		.word	.L778+1
 9999 1488 29150000 		.word	.L776+1
 10000 148c 45150000 		.word	.L786+1
 10001 1490 29150000 		.word	.L776+1
 10002 1494 45150000 		.word	.L786+1
 10003 1498 45150000 		.word	.L786+1
 10004 149c 45150000 		.word	.L786+1
 10005 14a0 45150000 		.word	.L786+1
 10006 14a4 45150000 		.word	.L786+1
 10007 14a8 45150000 		.word	.L786+1
 10008 14ac 45150000 		.word	.L786+1
 10009 14b0 45150000 		.word	.L786+1
 10010 14b4 5D150000 		.word	.L775+1
 10011 14b8 45150000 		.word	.L786+1
 10012 14bc 45150000 		.word	.L786+1
 10013 14c0 45150000 		.word	.L786+1
 10014 14c4 45150000 		.word	.L786+1
 10015 14c8 45150000 		.word	.L786+1
 10016 14cc 01160000 		.word	.L774+1
 10017 14d0 B3150000 		.word	.L773+1
 10018 14d4 45150000 		.word	.L786+1
 10019 14d8 45150000 		.word	.L786+1
 10020 14dc 45150000 		.word	.L786+1
 10021 14e0 45150000 		.word	.L786+1
 10022 14e4 45150000 		.word	.L786+1
 10023 14e8 45150000 		.word	.L786+1
 10024 14ec 45150000 		.word	.L786+1
 10025 14f0 45150000 		.word	.L786+1
 10026 14f4 45150000 		.word	.L786+1
 10027 14f8 45150000 		.word	.L786+1
 10028 14fc 31160000 		.word	.L772+1
 10029 1500 95150000 		.word	.L771+1
 10030 1504 31070000 		.word	.L769+1
 10031 1508 31070000 		.word	.L769+1
 10032 150c 45150000 		.word	.L786+1
 10033 1510 45150000 		.word	.L786+1
 10034 1514 45150000 		.word	.L786+1
 10035 1518 45150000 		.word	.L786+1
 10036 151c 45150000 		.word	.L786+1
 10037 1520 31070000 		.word	.L769+1
 10038 1524 31070000 		.word	.L769+1
 10039              		.p2align 1
 10040              	.L776:
 956:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10041              		.loc 1 956 4 view .LVU3155
 956:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
ARM GAS  /tmp/ccOshYsA.s 			page 286


 10042              		.loc 1 956 8 is_stmt 0 view .LVU3156
 10043 1528 314A     		ldr	r2, .L1157+12
 10044 152a 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 956:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10045              		.loc 1 956 7 view .LVU3157
 10046 152e D107     		lsls	r1, r2, #31
 10047 1530 28D4     		bmi	.L1070
 10048              	.LVL795:
 10049              	.L780:
1015:src/keys.c    **** 		return STATE_UNFINISHED;
 10050              		.loc 1 1015 2 is_stmt 1 view .LVU3158
1015:src/keys.c    **** 		return STATE_UNFINISHED;
 10051              		.loc 1 1015 5 is_stmt 0 view .LVU3159
 10052 1532 BAF5704F 		cmp	r10, #61440
 10053 1536 05D1     		bne	.L786
 10054              	.L768:
1015:src/keys.c    **** 		return STATE_UNFINISHED;
 10055              		.loc 1 1015 13 view .LVU3160
 10056 1538 2D4B     		ldr	r3, .L1157+12
 10057 153a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10058 153e D907     		lsls	r1, r3, #31
 10059 1540 3FF549A8 		bmi	.L1065
 10060              	.LVL796:
 10061              	.L786:
1018:src/keys.c    **** #undef NO_INT
 10062              		.loc 1 1018 2 is_stmt 1 view .LVU3161
 10063              	.LBB917:
 10064              	.LBI889:
 638:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10065              		.loc 1 638 12 view .LVU3162
 10066              	.LBB895:
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 10067              		.loc 1 639 2 view .LVU3163
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 10068              		.loc 1 639 6 is_stmt 0 view .LVU3164
 10069 1544 4FEA2B23 		asr	r3, fp, #8
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 10070              		.loc 1 639 5 view .LVU3165
 10071 1548 012B     		cmp	r3, #1
 10072 154a 7FF421A8 		bne	.L595
 10073              	.LVL797:
 10074              	.LBB894:
 10075              	.LBI891:
 638:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10076              		.loc 1 638 12 is_stmt 1 view .LVU3166
 10077              	.LBB893:
 640:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 10078              		.loc 1 640 3 view .LVU3167
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 10079              		.loc 1 641 3 view .LVU3168
 640:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 10080              		.loc 1 640 13 is_stmt 0 view .LVU3169
 10081 154e 5FFA8BF3 		uxtb	r3, fp
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 10082              		.loc 1 641 25 view .LVU3170
 10083 1552 413B     		subs	r3, r3, #65
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
ARM GAS  /tmp/ccOshYsA.s 			page 287


 10084              		.loc 1 641 6 view .LVU3171
 10085 1554 032B     		cmp	r3, #3
 10086 1556 3FF6F8A8 		bhi	.L851
 10087 155a 74E4     		b	.L1062
 10088              	.LVL798:
 10089              	.L775:
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 10090              		.loc 1 641 6 view .LVU3172
 10091              	.LBE893:
 10092              	.LBE894:
 10093              	.LBE895:
 10094              	.LBE917:
 967:src/keys.c    **** 			if (is_bad_cmdline())
 10095              		.loc 1 967 3 is_stmt 1 view .LVU3173
 967:src/keys.c    **** 			if (is_bad_cmdline())
 10096              		.loc 1 967 6 is_stmt 0 view .LVU3174
 10097 155c 012B     		cmp	r3, #1
 10098 155e E8D1     		bne	.L780
 968:src/keys.c    **** 				return STATE_UNFINISHED;
 10099              		.loc 1 968 4 is_stmt 1 view .LVU3175
 968:src/keys.c    **** 				return STATE_UNFINISHED;
 10100              		.loc 1 968 8 is_stmt 0 view .LVU3176
 10101 1560 FFF7FEFF 		bl	is_bad_cmdline
 10102              	.LVL799:
 968:src/keys.c    **** 				return STATE_UNFINISHED;
 10103              		.loc 1 968 7 view .LVU3177
 10104 1564 0028     		cmp	r0, #0
 10105 1566 7FF436A8 		bne	.L1065
 970:src/keys.c    **** 			State2.alphas = 1;
 10106              		.loc 1 970 4 is_stmt 1 view .LVU3178
 10107 156a FFF7FEFF 		bl	process_cmdline_set_lift
 10108              	.LVL800:
 971:src/keys.c    **** 		}
 10109              		.loc 1 971 4 view .LVU3179
 971:src/keys.c    **** 		}
 10110              		.loc 1 971 18 is_stmt 0 view .LVU3180
 10111 156e B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 10112 1570 43F00803 		orr	r3, r3, #8
 10113 1574 B375     		strb	r3, [r6, #22]
 10114 1576 DCE7     		b	.L780
 10115              	.LVL801:
 10116              	.L778:
 937:src/keys.c    **** 	    State2.hyp = 1;
 10117              		.loc 1 937 4 is_stmt 1 view .LVU3181
 937:src/keys.c    **** 	    State2.hyp = 1;
 10118              		.loc 1 937 8 is_stmt 0 view .LVU3182
 10119 1578 1D4A     		ldr	r2, .L1157+12
 10120 157a 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 937:src/keys.c    **** 	    State2.hyp = 1;
 10121              		.loc 1 937 7 view .LVU3183
 10122 157e D407     		lsls	r4, r2, #31
 10123 1580 40F19F82 		bpl	.L1141
 10124              	.L1070:
 956:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10125              		.loc 1 956 20 view .LVU3184
 10126 1584 012B     		cmp	r3, #1
 10127 1586 00F0AA82 		beq	.L1142
ARM GAS  /tmp/ccOshYsA.s 			page 288


1015:src/keys.c    **** 		return STATE_UNFINISHED;
 10128              		.loc 1 1015 2 is_stmt 1 view .LVU3185
1015:src/keys.c    **** 		return STATE_UNFINISHED;
 10129              		.loc 1 1015 5 is_stmt 0 view .LVU3186
 10130 158a BAF5704F 		cmp	r10, #61440
 10131 158e D9D1     		bne	.L786
 10132 1590 FFF721B8 		b	.L1065
 10133              	.L771:
 987:src/keys.c    **** 			return STATE_UNFINISHED;
 10134              		.loc 1 987 3 is_stmt 1 view .LVU3187
 987:src/keys.c    **** 			return STATE_UNFINISHED;
 10135              		.loc 1 987 7 is_stmt 0 view .LVU3188
 10136 1594 FFF7FEFF 		bl	is_bad_cmdline
 10137              	.LVL802:
 987:src/keys.c    **** 			return STATE_UNFINISHED;
 10138              		.loc 1 987 6 view .LVU3189
 10139 1598 0446     		mov	r4, r0
 10140              	.LVL803:
 987:src/keys.c    **** 			return STATE_UNFINISHED;
 10141              		.loc 1 987 6 view .LVU3190
 10142 159a 0028     		cmp	r0, #0
 10143 159c 7FF41BA8 		bne	.L1065
 989:src/keys.c    **** 		State2.test = op;
 10144              		.loc 1 989 3 is_stmt 1 view .LVU3191
 10145 15a0 FFF7FEFF 		bl	process_cmdline_set_lift
 10146              	.LVL804:
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10147              		.loc 1 990 3 view .LVU3192
 10148              	.LBE922:
 10149              	.LBE1157:
 10150              	.LBE1233:
 10151              	.LBE1294:
2977:src/keys.c    **** #ifdef DM42
 10152              		.loc 1 2977 7 is_stmt 0 view .LVU3193
 10153 15a4 A046     		mov	r8, r4
 10154              	.LBB1295:
 10155              	.LBB1234:
 10156              	.LBB1158:
 10157              	.LBB923:
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10158              		.loc 1 990 15 view .LVU3194
 10159 15a6 86F80FB0 		strb	fp, [r6, #15]
 991:src/keys.c    **** 
 10160              		.loc 1 991 3 is_stmt 1 view .LVU3195
 991:src/keys.c    **** 
 10161              		.loc 1 991 10 is_stmt 0 view .LVU3196
 10162 15aa 4FF0330B 		mov	fp, #51
 10163              	.LVL805:
 991:src/keys.c    **** 
 10164              		.loc 1 991 10 view .LVU3197
 10165 15ae FEF7B5BD 		b	.L566
 10166              	.LVL806:
 10167              	.L773:
 976:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10168              		.loc 1 976 4 is_stmt 1 view .LVU3198
 976:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10169              		.loc 1 976 7 is_stmt 0 view .LVU3199
ARM GAS  /tmp/ccOshYsA.s 			page 289


 10170 15b2 022B     		cmp	r3, #2
 10171 15b4 BDD1     		bne	.L780
 976:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10172              		.loc 1 976 27 view .LVU3200
 10173 15b6 0E4B     		ldr	r3, .L1157+12
 10174              	.LVL807:
 976:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10175              		.loc 1 976 27 view .LVU3201
 10176 15b8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10177 15bc DA07     		lsls	r2, r3, #31
 10178 15be B8D5     		bpl	.L780
 976:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10179              		.loc 1 976 45 view .LVU3202
 10180 15c0 0D20     		movs	r0, #13
 10181              	.LVL808:
 976:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10182              		.loc 1 976 45 view .LVU3203
 10183 15c2 FFF7FEFF 		bl	intltr
 10184              	.LVL809:
 976:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10185              		.loc 1 976 42 view .LVU3204
 10186 15c6 0028     		cmp	r0, #0
 10187 15c8 B3D0     		beq	.L780
 10188              	.LVL810:
 976:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10189              		.loc 1 976 42 view .LVU3205
 10190              	.LBE923:
 10191              	.LBE1158:
 10192              	.LBE1234:
 10193              	.LBE1295:
3198:src/keys.c    **** 	NonProgrammable = 0;
 10194              		.loc 1 3198 7 is_stmt 1 view .LVU3206
3198:src/keys.c    **** 	NonProgrammable = 0;
 10195              		.loc 1 3198 11 is_stmt 0 view .LVU3207
 10196 15ca B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 10197              		.loc 1 3198 10 view .LVU3208
 10198 15cc 5A06     		lsls	r2, r3, #25
 10199 15ce 40F17582 		bpl	.L880
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10200              		.loc 1 3199 2 is_stmt 1 view .LVU3209
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10201              		.loc 1 3199 18 is_stmt 0 view .LVU3210
 10202 15d2 084B     		ldr	r3, .L1157+16
 10203 15d4 0022     		movs	r2, #0
 10204              	.LBB1296:
 10205              	.LBB1235:
 10206              	.LBB1159:
 10207              	.LBB924:
 977:src/keys.c    **** 	  }
 10208              		.loc 1 977 13 view .LVU3211
 10209 15d6 4FF0120B 		mov	fp, #18
 10210              	.LBE924:
 10211              	.LBE1159:
 10212              	.LBE1235:
 10213              	.LBE1296:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccOshYsA.s 			page 290


 10214              		.loc 1 3199 18 view .LVU3212
 10215 15da 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10216              		.loc 1 3200 2 is_stmt 1 view .LVU3213
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10217              		.loc 1 3200 32 is_stmt 0 view .LVU3214
 10218 15dc 5846     		mov	r0, fp
 10219 15de FFF751B8 		b	.L832
 10220              	.L1158:
 10221 15e2 00BF     		.align	2
 10222              	.L1157:
 10223 15e4 00000000 		.word	.LANCHOR1
 10224 15e8 00000000 		.word	.LANCHOR18
 10225 15ec 00000000 		.word	.LANCHOR17
 10226 15f0 00000000 		.word	PersistentRam
 10227 15f4 00000000 		.word	NonProgrammable
 10228 15f8 00000000 		.word	.LANCHOR9
 10229 15fc 00000000 		.word	.LANCHOR19
 10230              	.LVL811:
 10231              	.L774:
 10232              	.LBB1297:
 10233              	.LBB1236:
 10234              	.LBB1160:
 10235              	.LBB925:
 981:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10236              		.loc 1 981 4 is_stmt 1 view .LVU3215
 981:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10237              		.loc 1 981 7 is_stmt 0 view .LVU3216
 10238 1600 022B     		cmp	r3, #2
 10239 1602 96D1     		bne	.L780
 981:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10240              		.loc 1 981 27 view .LVU3217
 10241 1604 B74B     		ldr	r3, .L1159
 10242              	.LVL812:
 981:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10243              		.loc 1 981 27 view .LVU3218
 10244 1606 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10245 160a DB07     		lsls	r3, r3, #31
 10246 160c 91D5     		bpl	.L780
 981:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10247              		.loc 1 981 45 view .LVU3219
 10248 160e 0E20     		movs	r0, #14
 10249              	.LVL813:
 981:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10250              		.loc 1 981 45 view .LVU3220
 10251 1610 FFF7FEFF 		bl	intltr
 10252              	.LVL814:
 981:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10253              		.loc 1 981 42 view .LVU3221
 10254 1614 0028     		cmp	r0, #0
 10255 1616 8CD0     		beq	.L780
 10256              	.LVL815:
 981:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10257              		.loc 1 981 42 view .LVU3222
 10258              	.LBE925:
 10259              	.LBE1160:
 10260              	.LBE1236:
ARM GAS  /tmp/ccOshYsA.s 			page 291


 10261              	.LBE1297:
3198:src/keys.c    **** 	NonProgrammable = 0;
 10262              		.loc 1 3198 7 is_stmt 1 view .LVU3223
3198:src/keys.c    **** 	NonProgrammable = 0;
 10263              		.loc 1 3198 11 is_stmt 0 view .LVU3224
 10264 1618 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 10265              		.loc 1 3198 10 view .LVU3225
 10266 161a 5B06     		lsls	r3, r3, #25
 10267 161c 40F16782 		bpl	.L881
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10268              		.loc 1 3199 2 is_stmt 1 view .LVU3226
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10269              		.loc 1 3199 18 is_stmt 0 view .LVU3227
 10270 1620 B14B     		ldr	r3, .L1159+4
 10271 1622 0022     		movs	r2, #0
 10272              	.LBB1298:
 10273              	.LBB1237:
 10274              	.LBB1161:
 10275              	.LBB926:
 982:src/keys.c    **** 	  }
 10276              		.loc 1 982 13 view .LVU3228
 10277 1624 4FF0130B 		mov	fp, #19
 10278              	.LBE926:
 10279              	.LBE1161:
 10280              	.LBE1237:
 10281              	.LBE1298:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10282              		.loc 1 3199 18 view .LVU3229
 10283 1628 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10284              		.loc 1 3200 2 is_stmt 1 view .LVU3230
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10285              		.loc 1 3200 32 is_stmt 0 view .LVU3231
 10286 162a 5846     		mov	r0, fp
 10287 162c FFF72AB8 		b	.L832
 10288              	.LVL816:
 10289              	.L772:
 10290              	.LBB1299:
 10291              	.LBB1238:
 10292              	.LBB1162:
 10293              	.LBB927:
 995:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10294              		.loc 1 995 3 is_stmt 1 view .LVU3232
 10295 1630 0093     		str	r3, [sp]
 995:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10296              		.loc 1 995 18 is_stmt 0 view .LVU3233
 10297 1632 FFF7FEFF 		bl	shift_down
 10298              	.LVL817:
 995:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10299              		.loc 1 995 6 view .LVU3234
 10300 1636 009B     		ldr	r3, [sp]
 10301 1638 0028     		cmp	r0, #0
 10302 163a 3FF479A8 		beq	.L769
 996:src/keys.c    **** 			return STATE_UNFINISHED;
 10303              		.loc 1 996 4 is_stmt 1 view .LVU3235
 996:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccOshYsA.s 			page 292


 10304              		.loc 1 996 26 is_stmt 0 view .LVU3236
 10305 163e 5C1E     		subs	r4, r3, #1
 10306              	.LVL818:
 996:src/keys.c    **** 			return STATE_UNFINISHED;
 10307              		.loc 1 996 17 view .LVU3237
 10308 1640 F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
 996:src/keys.c    **** 			return STATE_UNFINISHED;
 10309              		.loc 1 996 26 view .LVU3238
 10310 1642 6342     		rsbs	r3, r4, #0
 10311 1644 6341     		adcs	r3, r3, r4
 996:src/keys.c    **** 			return STATE_UNFINISHED;
 10312              		.loc 1 996 17 view .LVU3239
 10313 1646 63F3C712 		bfi	r2, r3, #7, #1
 10314 164a F275     		strb	r2, [r6, #23]
 997:src/keys.c    **** 		}
 10315              		.loc 1 997 4 is_stmt 1 view .LVU3240
 997:src/keys.c    **** 		}
 10316              		.loc 1 997 11 is_stmt 0 view .LVU3241
 10317 164c 4FF0330B 		mov	fp, #51
 10318              	.LVL819:
 997:src/keys.c    **** 		}
 10319              		.loc 1 997 11 view .LVU3242
 10320 1650 FEF764BD 		b	.L566
 10321              	.LVL820:
 10322              	.L1128:
 997:src/keys.c    **** 		}
 10323              		.loc 1 997 11 view .LVU3243
 10324              	.LBE927:
 10325              	.LBE1162:
 10326              	.LBB1163:
 10327              	.LBB1089:
2573:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10328              		.loc 1 2573 3 is_stmt 1 view .LVU3244
2573:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10329              		.loc 1 2573 8 is_stmt 0 view .LVU3245
 10330 1654 4FEA8B34 		lsl	r4, fp, #14
2573:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10331              		.loc 1 2573 6 view .LVU3246
 10332 1658 44F00104 		orr	r4, r4, #1
 10333              	.LVL821:
2574:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10334              		.loc 1 2574 3 is_stmt 1 view .LVU3247
2574:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10335              		.loc 1 2574 9 is_stmt 0 view .LVU3248
 10336 165c 2046     		mov	r0, r4
 10337              	.LVL822:
2574:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10338              		.loc 1 2574 9 view .LVU3249
 10339 165e FFF7FEFF 		bl	is_label_or_end_at
 10340              	.LVL823:
2574:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10341              		.loc 1 2574 6 view .LVU3250
 10342 1662 0246     		mov	r2, r0
 10343 1664 20B9     		cbnz	r0, .L687
2575:src/keys.c    **** 		State2.digval = pc;
 10344              		.loc 1 2575 4 is_stmt 1 view .LVU3251
2575:src/keys.c    **** 		State2.digval = pc;
ARM GAS  /tmp/ccOshYsA.s 			page 293


 10345              		.loc 1 2575 9 is_stmt 0 view .LVU3252
 10346 1666 2046     		mov	r0, r4
 10347 1668 0121     		movs	r1, #1
 10348 166a FFF7FEFF 		bl	advance_to_next_label
 10349              	.LVL824:
 10350 166e 0446     		mov	r4, r0
 10351              	.LVL825:
 10352              	.L687:
2576:src/keys.c    **** 		return STATE_UNFINISHED;
 10353              		.loc 1 2576 3 is_stmt 1 view .LVU3253
2576:src/keys.c    **** 		return STATE_UNFINISHED;
 10354              		.loc 1 2576 17 is_stmt 0 view .LVU3254
 10355 1670 3481     		strh	r4, [r6, #8]	@ movhi
2577:src/keys.c    **** 	}
 10356              		.loc 1 2577 3 is_stmt 1 view .LVU3255
2577:src/keys.c    **** 	}
 10357              		.loc 1 2577 10 is_stmt 0 view .LVU3256
 10358 1672 4FF0330B 		mov	fp, #51
 10359 1676 FEF751BD 		b	.L566
 10360              	.LVL826:
 10361              	.L863:
2577:src/keys.c    **** 	}
 10362              		.loc 1 2577 10 view .LVU3257
 10363              	.LBE1089:
 10364              	.LBE1163:
 10365              	.LBB1164:
 10366              	.LBB690:
 10367              	.LBB683:
 319:src/keys.c    ****     }
 10368              		.loc 1 319 14 view .LVU3258
 10369 167a 4FF0160B 		mov	fp, #22
 10370 167e FFF783BA 		b	.L654
 10371              	.LVL827:
 10372              	.L789:
 319:src/keys.c    ****     }
 10373              		.loc 1 319 14 view .LVU3259
 10374              	.LBE683:
 10375              	.LBE690:
 10376              	.LBE1164:
 10377              	.LBB1165:
 10378              	.LBB713:
1087:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10379              		.loc 1 1087 3 is_stmt 1 view .LVU3260
1087:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10380              		.loc 1 1087 7 is_stmt 0 view .LVU3261
 10381 1682 984B     		ldr	r3, .L1159
 10382 1684 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1087:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10383              		.loc 1 1087 6 view .LVU3262
 10384 1688 D207     		lsls	r2, r2, #31
 10385 168a 40F11881 		bpl	.L792
1088:src/keys.c    **** 		else
 10386              		.loc 1 1088 4 is_stmt 1 view .LVU3263
1088:src/keys.c    **** 		else
 10387              		.loc 1 1088 57 is_stmt 0 view .LVU3264
 10388 168e 93F9E737 		ldrsb	r3, [r3, #2023]
 10389 1692 002B     		cmp	r3, #0
ARM GAS  /tmp/ccOshYsA.s 			page 294


 10390 1694 40F2531B 		movw	fp, #339
 10391 1698 A8BF     		it	ge
 10392 169a 4FF4AA7B 		movge	fp, #340
 10393 169e DEE5     		b	.L794
 10394              	.LVL828:
 10395              	.L1127:
1088:src/keys.c    **** 		else
 10396              		.loc 1 1088 57 view .LVU3265
 10397              	.LBE713:
 10398              	.LBE1165:
 10399              	.LBB1166:
 10400              	.LBB1090:
2566:src/keys.c    **** 	const int direct = State2.runmode;
 10401              		.loc 1 2566 37 view .LVU3266
 10402 16a0 5046     		mov	r0, r10
 10403 16a2 FFF7FEFF 		bl	getprog
 10404              	.LVL829:
2566:src/keys.c    **** 	const int direct = State2.runmode;
 10405              		.loc 1 2566 63 view .LVU3267
 10406 16a6 20F47063 		bic	r3, r0, #3840
 10407 16aa FFF745BB 		b	.L684
 10408              	.LVL830:
 10409              	.L1131:
2566:src/keys.c    **** 	const int direct = State2.runmode;
 10410              		.loc 1 2566 63 view .LVU3268
 10411              	.LBE1090:
 10412              	.LBE1166:
 10413              	.LBB1167:
 10414              	.LBB820:
 10415              	.LBB814:
2705:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10416              		.loc 1 2705 3 is_stmt 1 view .LVU3269
2705:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10417              		.loc 1 2705 19 is_stmt 0 view .LVU3270
 10418 16ae 3189     		ldrh	r1, [r6, #8]
2705:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10419              		.loc 1 2705 27 view .LVU3271
 10420 16b0 0A23     		movs	r3, #10
2705:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10421              		.loc 1 2705 32 view .LVU3272
 10422 16b2 03FB01A2 		mla	r2, r3, r1, r10
2705:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10423              		.loc 1 2705 37 view .LVU3273
 10424 16b6 6424     		movs	r4, #100
 10425 16b8 B2FBF4F3 		udiv	r3, r2, r4
 10426 16bc 04FB1323 		mls	r3, r4, r3, r2
 10427              	.LVL831:
2706:src/keys.c    **** 			dv = n;
 10428              		.loc 1 2706 3 is_stmt 1 view .LVU3274
2706:src/keys.c    **** 			dv = n;
 10429              		.loc 1 2706 6 is_stmt 0 view .LVU3275
 10430 16c0 4B45     		cmp	r3, r9
 10431 16c2 08DA     		bge	.L715
2706:src/keys.c    **** 			dv = n;
 10432              		.loc 1 2706 21 view .LVU3276
 10433 16c4 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2706:src/keys.c    **** 			dv = n;
ARM GAS  /tmp/ccOshYsA.s 			page 295


 10434              		.loc 1 2706 17 view .LVU3277
 10435 16c6 D407     		lsls	r4, r2, #31
 10436 16c8 3FF5C2AC 		bmi	.L1056
2706:src/keys.c    **** 			dv = n;
 10437              		.loc 1 2706 36 view .LVU3278
 10438 16cc 8842     		cmp	r0, r1
 10439 16ce 02DD     		ble	.L715
2706:src/keys.c    **** 			dv = n;
 10440              		.loc 1 2706 63 view .LVU3279
 10441 16d0 9842     		cmp	r0, r3
 10442 16d2 3FF7BDAC 		bgt	.L1056
 10443              	.L715:
2707:src/keys.c    **** 		State2.digval = dv;
 10444              		.loc 1 2707 4 is_stmt 1 view .LVU3280
2707:src/keys.c    **** 		State2.digval = dv;
 10445              		.loc 1 2707 7 is_stmt 0 view .LVU3281
 10446 16d6 5346     		mov	r3, r10
 10447              	.LVL832:
2708:src/keys.c    **** 		goto reset_window;
 10448              		.loc 1 2708 3 is_stmt 1 view .LVU3282
 10449 16d8 BAE4     		b	.L1056
 10450              	.LVL833:
 10451              	.L1133:
2708:src/keys.c    **** 		goto reset_window;
 10452              		.loc 1 2708 3 is_stmt 0 view .LVU3283
 10453              	.LBE814:
2716:src/keys.c    **** 		goto reset_window;
 10454              		.loc 1 2716 3 is_stmt 1 view .LVU3284
2716:src/keys.c    **** 		goto reset_window;
 10455              		.loc 1 2716 17 is_stmt 0 view .LVU3285
 10456 16da A6F808A0 		strh	r10, [r6, #8]	@ movhi
2717:src/keys.c    **** 	}
 10457              		.loc 1 2717 3 is_stmt 1 view .LVU3286
 10458 16de B8E4     		b	.L713
 10459              	.LVL834:
 10460              	.L1107:
2717:src/keys.c    **** 	}
 10461              		.loc 1 2717 3 is_stmt 0 view .LVU3287
 10462              	.LBE820:
 10463              	.LBE1167:
 10464              	.LBB1168:
 10465              	.LBB785:
2394:src/keys.c    **** 				break;
 10466              		.loc 1 2394 3 is_stmt 1 view .LVU3288
2394:src/keys.c    **** 				break;
 10467              		.loc 1 2394 6 is_stmt 0 view .LVU3289
 10468 16e0 0029     		cmp	r1, #0
 10469 16e2 7EF426AF 		bne	.L674
2396:src/keys.c    **** 		if (State2.numdigit == 0)
 10470              		.loc 1 2396 3 is_stmt 1 view .LVU3290
 10471              	.LBB776:
 10472              	.LBI776:
2371:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10473              		.loc 1 2371 13 view .LVU3291
 10474              	.LBB777:
2373:src/keys.c    **** 	if (! State2.alphas )
 10475              		.loc 1 2373 2 view .LVU3292
ARM GAS  /tmp/ccOshYsA.s 			page 296


2374:src/keys.c    **** 		State2.alphashift = 0;
 10476              		.loc 1 2374 6 is_stmt 0 view .LVU3293
 10477 16e6 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2373:src/keys.c    **** 	if (! State2.alphas )
 10478              		.loc 1 2373 15 view .LVU3294
 10479 16e8 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
2374:src/keys.c    **** 		State2.alphashift = 0;
 10480              		.loc 1 2374 5 view .LVU3295
 10481 16ea 1807     		lsls	r0, r3, #28
2375:src/keys.c    **** }
 10482              		.loc 1 2375 21 view .LVU3296
 10483 16ec 5CBF     		itt	pl
 10484 16ee 61F30413 		bfipl	r3, r1, #4, #1
 10485 16f2 B375     		strbpl	r3, [r6, #22]
 10486              	.LBE777:
 10487              	.LBE776:
2397:src/keys.c    **** 			return STATE_UNFINISHED;
 10488              		.loc 1 2397 13 view .LVU3297
 10489 16f4 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 10490              	.LBB779:
 10491              	.LBB778:
2373:src/keys.c    **** 	if (! State2.alphas )
 10492              		.loc 1 2373 15 view .LVU3298
 10493 16f6 61F3C302 		bfi	r2, r1, #3, #1
 10494 16fa 7275     		strb	r2, [r6, #21]
2374:src/keys.c    **** 		State2.alphashift = 0;
 10495              		.loc 1 2374 2 is_stmt 1 view .LVU3299
2375:src/keys.c    **** }
 10496              		.loc 1 2375 3 view .LVU3300
 10497              	.LBE778:
 10498              	.LBE779:
2397:src/keys.c    **** 			return STATE_UNFINISHED;
 10499              		.loc 1 2397 3 view .LVU3301
2397:src/keys.c    **** 			return STATE_UNFINISHED;
 10500              		.loc 1 2397 6 is_stmt 0 view .LVU3302
 10501 16fc 002B     		cmp	r3, #0
 10502 16fe 3EF46AAF 		beq	.L1065
2399:src/keys.c    **** 			State2.digval2 = 0;
 10503              		.loc 1 2399 8 is_stmt 1 view .LVU3303
2399:src/keys.c    **** 			State2.digval2 = 0;
 10504              		.loc 1 2399 11 is_stmt 0 view .LVU3304
 10505 1702 012B     		cmp	r3, #1
2400:src/keys.c    **** 		goto fin;
 10506              		.loc 1 2400 19 view .LVU3305
 10507 1704 4FF00003 		mov	r3, #0
2399:src/keys.c    **** 			State2.digval2 = 0;
 10508              		.loc 1 2399 11 view .LVU3306
 10509 1708 7EF435AF 		bne	.L676
2400:src/keys.c    **** 		goto fin;
 10510              		.loc 1 2400 4 is_stmt 1 view .LVU3307
2400:src/keys.c    **** 		goto fin;
 10511              		.loc 1 2400 19 is_stmt 0 view .LVU3308
 10512 170c B372     		strb	r3, [r6, #10]
 10513 170e FEF732BF 		b	.L676
 10514              	.L673:
2414:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10515              		.loc 1 2414 3 is_stmt 1 view .LVU3309
ARM GAS  /tmp/ccOshYsA.s 			page 297


2414:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10516              		.loc 1 2414 6 is_stmt 0 view .LVU3310
 10517 1712 0129     		cmp	r1, #1
 10518 1714 36D0     		beq	.L1067
 10519              	.L679:
2406:src/keys.c    **** 			else
 10520              		.loc 1 2406 5 is_stmt 1 view .LVU3311
 10521              	.LBB780:
 10522              	.LBI780:
2371:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10523              		.loc 1 2371 13 view .LVU3312
 10524              	.LBB781:
2373:src/keys.c    **** 	if (! State2.alphas )
 10525              		.loc 1 2373 2 view .LVU3313
2373:src/keys.c    **** 	if (! State2.alphas )
 10526              		.loc 1 2373 15 is_stmt 0 view .LVU3314
 10527 1716 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
2374:src/keys.c    **** 		State2.alphashift = 0;
 10528              		.loc 1 2374 6 view .LVU3315
 10529 1718 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2373:src/keys.c    **** 	if (! State2.alphas )
 10530              		.loc 1 2373 15 view .LVU3316
 10531 171a 6FF3C302 		bfc	r2, #3, #1
 10532 171e 7275     		strb	r2, [r6, #21]
2374:src/keys.c    **** 		State2.alphashift = 0;
 10533              		.loc 1 2374 2 is_stmt 1 view .LVU3317
2374:src/keys.c    **** 		State2.alphashift = 0;
 10534              		.loc 1 2374 5 is_stmt 0 view .LVU3318
 10535 1720 13F00802 		ands	r2, r3, #8
 10536 1724 7EF457AF 		bne	.L1065
 10537              	.LVL835:
 10538              	.L1063:
2374:src/keys.c    **** 		State2.alphashift = 0;
 10539              		.loc 1 2374 5 view .LVU3319
 10540              	.LBE781:
 10541              	.LBE780:
2415:src/keys.c    **** 		else
 10542              		.loc 1 2415 22 view .LVU3320
 10543 1728 62F30413 		bfi	r3, r2, #4, #1
 10544 172c B375     		strb	r3, [r6, #22]
 10545 172e FEF752BF 		b	.L1065
 10546              	.LVL836:
 10547              	.L672:
2404:src/keys.c    **** 			if (State2.numdigit == 0)
 10548              		.loc 1 2404 3 is_stmt 1 view .LVU3321
2404:src/keys.c    **** 			if (State2.numdigit == 0)
 10549              		.loc 1 2404 6 is_stmt 0 view .LVU3322
 10550 1732 0329     		cmp	r1, #3
 10551 1734 3EF404AF 		beq	.L677
2405:src/keys.c    **** 				reset_multi();
 10552              		.loc 1 2405 4 is_stmt 1 view .LVU3323
2405:src/keys.c    **** 				reset_multi();
 10553              		.loc 1 2405 14 is_stmt 0 view .LVU3324
 10554 1738 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
2405:src/keys.c    **** 				reset_multi();
 10555              		.loc 1 2405 7 view .LVU3325
 10556 173a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccOshYsA.s 			page 298


 10557 173c EBD0     		beq	.L679
2408:src/keys.c    **** 			return STATE_UNFINISHED;
 10558              		.loc 1 2408 5 is_stmt 1 view .LVU3326
2408:src/keys.c    **** 			return STATE_UNFINISHED;
 10559              		.loc 1 2408 20 is_stmt 0 view .LVU3327
 10560 173e 013B     		subs	r3, r3, #1
 10561 1740 F372     		strb	r3, [r6, #11]
2409:src/keys.c    **** 		}
 10562              		.loc 1 2409 11 view .LVU3328
 10563 1742 4FF0330B 		mov	fp, #51
 10564 1746 FEF7E9BC 		b	.L566
 10565              	.LVL837:
 10566              	.L1109:
2430:src/keys.c    **** 		State2.numdigit = 1;
 10567              		.loc 1 2430 3 is_stmt 1 view .LVU3329
2431:src/keys.c    **** 		return STATE_UNFINISHED;
 10568              		.loc 1 2431 19 is_stmt 0 view .LVU3330
 10569 174a 0122     		movs	r2, #1
2430:src/keys.c    **** 		State2.numdigit = 1;
 10570              		.loc 1 2430 17 view .LVU3331
 10571 174c 3381     		strh	r3, [r6, #8]	@ movhi
2431:src/keys.c    **** 		return STATE_UNFINISHED;
 10572              		.loc 1 2431 3 is_stmt 1 view .LVU3332
2431:src/keys.c    **** 		return STATE_UNFINISHED;
 10573              		.loc 1 2431 19 is_stmt 0 view .LVU3333
 10574 174e F272     		strb	r2, [r6, #11]
2432:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10575              		.loc 1 2432 3 is_stmt 1 view .LVU3334
2432:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10576              		.loc 1 2432 10 is_stmt 0 view .LVU3335
 10577 1750 4FF0330B 		mov	fp, #51
 10578 1754 FEF7E2BC 		b	.L566
 10579              	.LVL838:
 10580              	.L1130:
2432:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10581              		.loc 1 2432 10 view .LVU3336
 10582              	.LBE785:
 10583              	.LBE1168:
 10584              	.LBB1169:
 10585              	.LBB821:
2699:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10586              		.loc 1 2699 3 is_stmt 1 view .LVU3337
2699:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10587              		.loc 1 2699 7 is_stmt 0 view .LVU3338
 10588 1758 FFF7FEFF 		bl	local_regs
 10589              	.LVL839:
2699:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10590              		.loc 1 2699 6 view .LVU3339
 10591 175c 50B1     		cbz	r0, .L711
2700:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10592              		.loc 1 2700 4 is_stmt 1 view .LVU3340
2700:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10593              		.loc 1 2700 19 is_stmt 0 view .LVU3341
 10594 175e B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2700:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10595              		.loc 1 2700 34 view .LVU3342
 10596 1760 B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
ARM GAS  /tmp/ccOshYsA.s 			page 299


2700:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10597              		.loc 1 2700 19 view .LVU3343
 10598 1762 03F00101 		and	r1, r3, #1
2700:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10599              		.loc 1 2700 34 view .LVU3344
 10600 1766 0A43     		orrs	r2, r1, r2
 10601 1768 0CBF     		ite	eq
 10602 176a 0122     		moveq	r2, #1
 10603 176c 0022     		movne	r2, #0
2700:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10604              		.loc 1 2700 17 view .LVU3345
 10605 176e 62F30003 		bfi	r3, r2, #0, #1
 10606 1772 B375     		strb	r3, [r6, #22]
 10607              	.L711:
2701:src/keys.c    **** 		goto reset_window;
 10608              		.loc 1 2701 3 is_stmt 1 view .LVU3346
2701:src/keys.c    **** 		goto reset_window;
 10609              		.loc 1 2701 32 is_stmt 0 view .LVU3347
 10610 1774 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2701:src/keys.c    **** 		goto reset_window;
 10611              		.loc 1 2701 17 view .LVU3348
 10612 1776 13F0010F 		tst	r3, #1
 10613 177a 14BF     		ite	ne
 10614 177c 0023     		movne	r3, #0
 10615 177e 6423     		moveq	r3, #100
 10616 1780 3381     		strh	r3, [r6, #8]	@ movhi
2702:src/keys.c    **** 	}
 10617              		.loc 1 2702 3 is_stmt 1 view .LVU3349
 10618 1782 66E4     		b	.L713
 10619              	.LVL840:
 10620              	.L1067:
2702:src/keys.c    **** 	}
 10621              		.loc 1 2702 3 is_stmt 0 view .LVU3350
 10622              	.LBE821:
 10623              	.LBE1169:
 10624              	.LBB1170:
 10625              	.LBB786:
2415:src/keys.c    **** 		else
 10626              		.loc 1 2415 4 is_stmt 1 view .LVU3351
2415:src/keys.c    **** 		else
 10627              		.loc 1 2415 34 is_stmt 0 view .LVU3352
 10628 1784 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 10629 1786 C3F30012 		ubfx	r2, r3, #4, #1
2415:src/keys.c    **** 		else
 10630              		.loc 1 2415 26 view .LVU3353
 10631 178a C2F10102 		rsb	r2, r2, #1
 10632 178e CBE7     		b	.L1063
 10633              	.LVL841:
 10634              	.L1110:
2434:src/keys.c    **** 		State2.numdigit = 2;
 10635              		.loc 1 2434 3 is_stmt 1 view .LVU3354
2435:src/keys.c    **** 		return STATE_UNFINISHED;
 10636              		.loc 1 2435 19 is_stmt 0 view .LVU3355
 10637 1790 0222     		movs	r2, #2
2434:src/keys.c    **** 		State2.numdigit = 2;
 10638              		.loc 1 2434 18 view .LVU3356
 10639 1792 B372     		strb	r3, [r6, #10]
ARM GAS  /tmp/ccOshYsA.s 			page 300


2435:src/keys.c    **** 		return STATE_UNFINISHED;
 10640              		.loc 1 2435 3 is_stmt 1 view .LVU3357
2435:src/keys.c    **** 		return STATE_UNFINISHED;
 10641              		.loc 1 2435 19 is_stmt 0 view .LVU3358
 10642 1794 F272     		strb	r2, [r6, #11]
2436:src/keys.c    **** 	}
 10643              		.loc 1 2436 3 is_stmt 1 view .LVU3359
2436:src/keys.c    **** 	}
 10644              		.loc 1 2436 10 is_stmt 0 view .LVU3360
 10645 1796 4FF0330B 		mov	fp, #51
 10646 179a FEF7BFBC 		b	.L566
 10647              	.LVL842:
 10648              	.L807:
2436:src/keys.c    **** 	}
 10649              		.loc 1 2436 10 view .LVU3361
 10650              	.LBE786:
 10651              	.LBE1170:
 10652              	.LBE1238:
 10653              	.LBE1299:
3198:src/keys.c    **** 	NonProgrammable = 0;
 10654              		.loc 1 3198 7 is_stmt 1 view .LVU3362
3198:src/keys.c    **** 	NonProgrammable = 0;
 10655              		.loc 1 3198 11 is_stmt 0 view .LVU3363
 10656 179e B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 10657              		.loc 1 3198 10 view .LVU3364
 10658 17a0 5C06     		lsls	r4, r3, #25
 10659 17a2 40F1C481 		bpl	.L882
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10660              		.loc 1 3199 2 is_stmt 1 view .LVU3365
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10661              		.loc 1 3199 18 is_stmt 0 view .LVU3366
 10662 17a6 504B     		ldr	r3, .L1159+4
 10663 17a8 0022     		movs	r2, #0
 10664              	.LBB1300:
 10665              	.LBB1239:
 10666              	.LBB1171:
 10667              	.LBB731:
 764:src/keys.c    **** 	    }
 10668              		.loc 1 764 15 view .LVU3367
 10669 17aa 4FF0100B 		mov	fp, #16
 10670              	.LBE731:
 10671              	.LBE1171:
 10672              	.LBE1239:
 10673              	.LBE1300:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10674              		.loc 1 3199 18 view .LVU3368
 10675 17ae 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10676              		.loc 1 3200 2 is_stmt 1 view .LVU3369
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10677              		.loc 1 3200 32 is_stmt 0 view .LVU3370
 10678 17b0 5846     		mov	r0, fp
 10679 17b2 FEF767BF 		b	.L832
 10680              	.LVL843:
 10681              	.L739:
 10682              	.LBB1301:
ARM GAS  /tmp/ccOshYsA.s 			page 301


 10683              	.LBB1240:
 10684              	.LBB1172:
 10685              	.LBB876:
1492:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10686              		.loc 1 1492 3 is_stmt 1 view .LVU3371
1492:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10687              		.loc 1 1492 6 is_stmt 0 view .LVU3372
 10688 17b6 0128     		cmp	r0, #1
 10689 17b8 7FF4F6AC 		bne	.L738
 10690              	.LVL844:
1492:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10691              		.loc 1 1492 6 view .LVU3373
 10692              	.LBE876:
 10693              	.LBE1172:
 10694              	.LBE1240:
 10695              	.LBE1301:
3198:src/keys.c    **** 	NonProgrammable = 0;
 10696              		.loc 1 3198 7 is_stmt 1 view .LVU3374
3198:src/keys.c    **** 	NonProgrammable = 0;
 10697              		.loc 1 3198 10 is_stmt 0 view .LVU3375
 10698 17bc 5906     		lsls	r1, r3, #25
 10699 17be 40F11A81 		bpl	.L879
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10700              		.loc 1 3199 2 is_stmt 1 view .LVU3376
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10701              		.loc 1 3199 18 is_stmt 0 view .LVU3377
 10702 17c2 494B     		ldr	r3, .L1159+4
 10703 17c4 0022     		movs	r2, #0
 10704              	.LVL845:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10705              		.loc 1 3199 18 view .LVU3378
 10706 17c6 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10707              		.loc 1 3200 2 is_stmt 1 view .LVU3379
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10708              		.loc 1 3200 32 is_stmt 0 view .LVU3380
 10709 17c8 40F23B10 		movw	r0, #315
 10710              	.LVL846:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10711              		.loc 1 3200 32 view .LVU3381
 10712 17cc FEF758BE 		b	.L830
 10713              	.LVL847:
 10714              	.L741:
 10715              	.LBB1302:
 10716              	.LBB1241:
 10717              	.LBB1173:
 10718              	.LBB877:
1483:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10719              		.loc 1 1483 3 is_stmt 1 view .LVU3382
1483:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10720              		.loc 1 1483 6 is_stmt 0 view .LVU3383
 10721 17d0 0128     		cmp	r0, #1
 10722 17d2 D7D0     		beq	.L1067
1485:src/keys.c    **** 			return OP_NIL | OP_OFF;
 10723              		.loc 1 1485 8 is_stmt 1 view .LVU3384
1485:src/keys.c    **** 			return OP_NIL | OP_OFF;
 10724              		.loc 1 1485 11 is_stmt 0 view .LVU3385
ARM GAS  /tmp/ccOshYsA.s 			page 302


 10725 17d4 0328     		cmp	r0, #3
 10726 17d6 00F01181 		beq	.L756
1487:src/keys.c    **** 			init_state();
 10727              		.loc 1 1487 8 is_stmt 1 view .LVU3386
1487:src/keys.c    **** 			init_state();
 10728              		.loc 1 1487 11 is_stmt 0 view .LVU3387
 10729 17da 0028     		cmp	r0, #0
 10730 17dc 7EF4FBAE 		bne	.L1065
1488:src/keys.c    **** 		return STATE_UNFINISHED;
 10731              		.loc 1 1488 4 is_stmt 1 view .LVU3388
 10732 17e0 FFF7FEFF 		bl	init_state
 10733              	.LVL848:
1489:src/keys.c    **** 
 10734              		.loc 1 1489 10 is_stmt 0 view .LVU3389
 10735 17e4 4FF0330B 		mov	fp, #51
 10736 17e8 FEF798BC 		b	.L566
 10737              	.LVL849:
 10738              	.L743:
1459:src/keys.c    **** 			if ( State2.runmode ) {
 10739              		.loc 1 1459 3 is_stmt 1 view .LVU3390
1459:src/keys.c    **** 			if ( State2.runmode ) {
 10740              		.loc 1 1459 6 is_stmt 0 view .LVU3391
 10741 17ec 0028     		cmp	r0, #0
 10742 17ee 7FF4DBAC 		bne	.L738
1460:src/keys.c    **** 				// Alpha scroll left
 10743              		.loc 1 1460 4 is_stmt 1 view .LVU3392
1460:src/keys.c    **** 				// Alpha scroll left
 10744              		.loc 1 1460 7 is_stmt 0 view .LVU3393
 10745 17f2 5B06     		lsls	r3, r3, #25
 10746 17f4 7EF585AF 		bpl	.L753
1462:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
 10747              		.loc 1 1462 5 is_stmt 1 view .LVU3394
 10748              	.LVL850:
1463:src/keys.c    **** 				return STATE_UNFINISHED;
 10749              		.loc 1 1463 5 view .LVU3395
1463:src/keys.c    **** 				return STATE_UNFINISHED;
 10750              		.loc 1 1463 32 is_stmt 0 view .LVU3396
 10751 17f8 FFF7FEFF 		bl	alen
 10752              	.LVL851:
1463:src/keys.c    **** 				return STATE_UNFINISHED;
 10753              		.loc 1 1463 39 view .LVU3397
 10754 17fc 0530     		adds	r0, r0, #5
1463:src/keys.c    **** 				return STATE_UNFINISHED;
 10755              		.loc 1 1463 22 view .LVU3398
 10756 17fe 0B28     		cmp	r0, #11
 10757 1800 94BF     		ite	ls
 10758 1802 0023     		movls	r3, #0
 10759 1804 0123     		movhi	r3, #1
 10760 1806 7373     		strb	r3, [r6, #13]
1464:src/keys.c    **** 			}
 10761              		.loc 1 1464 5 is_stmt 1 view .LVU3399
1464:src/keys.c    **** 			}
 10762              		.loc 1 1464 12 is_stmt 0 view .LVU3400
 10763 1808 4FF0330B 		mov	fp, #51
 10764 180c FEF786BC 		b	.L566
 10765              	.LVL852:
 10766              	.L745:
ARM GAS  /tmp/ccOshYsA.s 			page 303


1439:src/keys.c    **** 			break;
 10767              		.loc 1 1439 3 is_stmt 1 view .LVU3401
1439:src/keys.c    **** 			break;
 10768              		.loc 1 1439 24 is_stmt 0 view .LVU3402
 10769 1810 811E     		subs	r1, r0, #2
1439:src/keys.c    **** 			break;
 10770              		.loc 1 1439 6 view .LVU3403
 10771 1812 C9B2     		uxtb	r1, r1
 10772 1814 0129     		cmp	r1, #1
 10773 1816 7FF6C7AC 		bls	.L738
1441:src/keys.c    **** 			State2.multi = 1;
 10774              		.loc 1 1441 3 is_stmt 1 view .LVU3404
1441:src/keys.c    **** 			State2.multi = 1;
 10775              		.loc 1 1441 6 is_stmt 0 view .LVU3405
 10776 181a 0128     		cmp	r0, #1
 10777 181c 03D1     		bne	.L749
1441:src/keys.c    **** 			State2.multi = 1;
 10778              		.loc 1 1441 24 view .LVU3406
 10779 181e 13F04002 		ands	r2, r3, #64
 10780              	.LVL853:
1441:src/keys.c    **** 			State2.multi = 1;
 10781              		.loc 1 1441 24 view .LVU3407
 10782 1822 00F0D380 		beq	.L1143
 10783              	.L749:
1447:src/keys.c    **** 		State2.alphashift = 0;
 10784              		.loc 1 1447 3 is_stmt 1 view .LVU3408
1448:src/keys.c    **** 		return op;
 10785              		.loc 1 1448 3 view .LVU3409
1447:src/keys.c    **** 		State2.alphashift = 0;
 10786              		.loc 1 1447 17 is_stmt 0 view .LVU3410
 10787 1826 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 10788 1828 23F01803 		bic	r3, r3, #24
 10789 182c B375     		strb	r3, [r6, #22]
1449:src/keys.c    **** 
 10790              		.loc 1 1449 3 is_stmt 1 view .LVU3411
1449:src/keys.c    **** 
 10791              		.loc 1 1449 10 is_stmt 0 view .LVU3412
 10792 182e 4FF0330B 		mov	fp, #51
 10793 1832 FEF773BC 		b	.L566
 10794              	.LVL854:
 10795              	.L746:
1429:src/keys.c    **** 			init_arg(RARG_ARCL);
 10796              		.loc 1 1429 3 is_stmt 1 view .LVU3413
1429:src/keys.c    **** 			init_arg(RARG_ARCL);
 10797              		.loc 1 1429 6 is_stmt 0 view .LVU3414
 10798 1836 0128     		cmp	r0, #1
 10799 1838 00F02481 		beq	.L1144
1432:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 10800              		.loc 1 1432 10 is_stmt 1 view .LVU3415
1432:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 10801              		.loc 1 1432 13 is_stmt 0 view .LVU3416
 10802 183c 0328     		cmp	r0, #3
 10803 183e 7FF4B3AC 		bne	.L738
1433:src/keys.c    **** 			return STATE_UNFINISHED;
 10804              		.loc 1 1433 4 is_stmt 1 view .LVU3417
 10805              	.LVL855:
 10806              	.LBB860:
ARM GAS  /tmp/ccOshYsA.s 			page 304


 10807              	.LBI860:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 10808              		.loc 1 520 13 view .LVU3418
 10809              	.LBB861:
 521:src/keys.c    **** 		return;
 10810              		.loc 1 521 2 view .LVU3419
 521:src/keys.c    **** 		return;
 10811              		.loc 1 521 6 is_stmt 0 view .LVU3420
 10812 1842 FFF7FEFF 		bl	is_bad_cmdline
 10813              	.LVL856:
 521:src/keys.c    **** 		return;
 10814              		.loc 1 521 5 view .LVU3421
 10815 1846 0346     		mov	r3, r0
 10816 1848 0028     		cmp	r0, #0
 10817 184a 7EF4C4AE 		bne	.L1065
 10818 184e 7320     		movs	r0, #115
 10819              	.LBE861:
 10820              	.LBE860:
 10821              	.LBE877:
 10822              	.LBE1173:
 10823              	.LBE1241:
 10824              	.LBE1302:
2977:src/keys.c    **** #ifdef DM42
 10825              		.loc 1 2977 7 view .LVU3422
 10826 1850 9846     		mov	r8, r3
 10827              	.LBB1303:
 10828              	.LBB1242:
 10829              	.LBB1174:
 10830              	.LBB878:
1434:src/keys.c    **** 		}
 10831              		.loc 1 1434 11 view .LVU3423
 10832 1852 4FF0330B 		mov	fp, #51
 10833              	.LBB863:
 10834              	.LBB862:
 10835 1856 FFF7FEFF 		bl	init_arg.part.0
 10836              	.LVL857:
 10837 185a FEF75FBC 		b	.L566
 10838              	.LVL858:
 10839              	.L747:
1434:src/keys.c    **** 		}
 10840              		.loc 1 1434 11 view .LVU3424
 10841              	.LBE862:
 10842              	.LBE863:
1422:src/keys.c    **** 			init_arg(RARG_ASTO);
 10843              		.loc 1 1422 3 is_stmt 1 view .LVU3425
1422:src/keys.c    **** 			init_arg(RARG_ASTO);
 10844              		.loc 1 1422 6 is_stmt 0 view .LVU3426
 10845 185e 0128     		cmp	r0, #1
 10846 1860 7FF4A2AC 		bne	.L738
1423:src/keys.c    **** 			return STATE_UNFINISHED;
 10847              		.loc 1 1423 4 is_stmt 1 view .LVU3427
 10848              	.LVL859:
 10849              	.LBB864:
 10850              	.LBI864:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 10851              		.loc 1 520 13 view .LVU3428
 10852              	.LBB865:
ARM GAS  /tmp/ccOshYsA.s 			page 305


 521:src/keys.c    **** 		return;
 10853              		.loc 1 521 2 view .LVU3429
 521:src/keys.c    **** 		return;
 10854              		.loc 1 521 6 is_stmt 0 view .LVU3430
 10855 1864 FFF7FEFF 		bl	is_bad_cmdline
 10856              	.LVL860:
 521:src/keys.c    **** 		return;
 10857              		.loc 1 521 5 view .LVU3431
 10858 1868 0346     		mov	r3, r0
 10859 186a 0028     		cmp	r0, #0
 10860 186c 7EF4B3AE 		bne	.L1065
 10861 1870 2620     		movs	r0, #38
 10862              	.LBE865:
 10863              	.LBE864:
 10864              	.LBE878:
 10865              	.LBE1174:
 10866              	.LBE1242:
 10867              	.LBE1303:
2977:src/keys.c    **** #ifdef DM42
 10868              		.loc 1 2977 7 view .LVU3432
 10869 1872 9846     		mov	r8, r3
 10870              	.LBB1304:
 10871              	.LBB1243:
 10872              	.LBB1175:
 10873              	.LBB879:
1424:src/keys.c    **** 		}
 10874              		.loc 1 1424 11 view .LVU3433
 10875 1874 4FF0330B 		mov	fp, #51
 10876              	.LBB867:
 10877              	.LBB866:
 10878 1878 FFF7FEFF 		bl	init_arg.part.0
 10879              	.LVL861:
 10880 187c FEF74EBC 		b	.L566
 10881              	.LVL862:
 10882              	.L806:
1424:src/keys.c    **** 		}
 10883              		.loc 1 1424 11 view .LVU3434
 10884              	.LBE866:
 10885              	.LBE867:
 10886              	.LBE879:
 10887              	.LBE1175:
 10888              	.LBE1243:
 10889              	.LBE1304:
3198:src/keys.c    **** 	NonProgrammable = 0;
 10890              		.loc 1 3198 7 is_stmt 1 view .LVU3435
3198:src/keys.c    **** 	NonProgrammable = 0;
 10891              		.loc 1 3198 11 is_stmt 0 view .LVU3436
 10892 1880 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 10893              		.loc 1 3198 10 view .LVU3437
 10894 1882 5A06     		lsls	r2, r3, #25
 10895 1884 40F10C81 		bpl	.L885
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10896              		.loc 1 3199 2 is_stmt 1 view .LVU3438
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10897              		.loc 1 3199 18 is_stmt 0 view .LVU3439
 10898 1888 174B     		ldr	r3, .L1159+4
ARM GAS  /tmp/ccOshYsA.s 			page 306


 10899 188a 0022     		movs	r2, #0
 10900              	.LBB1305:
 10901              	.LBB1244:
 10902              	.LBB1176:
 10903              	.LBB732:
 756:src/keys.c    **** 	    }
 10904              		.loc 1 756 15 view .LVU3440
 10905 188c 4FF00F0B 		mov	fp, #15
 10906              	.LBE732:
 10907              	.LBE1176:
 10908              	.LBE1244:
 10909              	.LBE1305:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10910              		.loc 1 3199 18 view .LVU3441
 10911 1890 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10912              		.loc 1 3200 2 is_stmt 1 view .LVU3442
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10913              		.loc 1 3200 32 is_stmt 0 view .LVU3443
 10914 1892 5846     		mov	r0, fp
 10915 1894 FEF7F6BE 		b	.L832
 10916              	.LVL863:
 10917              	.L809:
3198:src/keys.c    **** 	NonProgrammable = 0;
 10918              		.loc 1 3198 7 is_stmt 1 view .LVU3444
3198:src/keys.c    **** 	NonProgrammable = 0;
 10919              		.loc 1 3198 11 is_stmt 0 view .LVU3445
 10920 1898 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 10921              		.loc 1 3198 10 view .LVU3446
 10922 189a 5906     		lsls	r1, r3, #25
 10923 189c 40F10B81 		bpl	.L884
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10924              		.loc 1 3199 2 is_stmt 1 view .LVU3447
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10925              		.loc 1 3199 18 is_stmt 0 view .LVU3448
 10926 18a0 114B     		ldr	r3, .L1159+4
 10927 18a2 0022     		movs	r2, #0
 10928              	.LBB1306:
 10929              	.LBB1245:
 10930              	.LBB1177:
 10931              	.LBB733:
 780:src/keys.c    **** 	    }
 10932              		.loc 1 780 15 view .LVU3449
 10933 18a4 4FF0140B 		mov	fp, #20
 10934              	.LBE733:
 10935              	.LBE1177:
 10936              	.LBE1245:
 10937              	.LBE1306:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10938              		.loc 1 3199 18 view .LVU3450
 10939 18a8 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10940              		.loc 1 3200 2 is_stmt 1 view .LVU3451
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10941              		.loc 1 3200 32 is_stmt 0 view .LVU3452
 10942 18aa 5846     		mov	r0, fp
ARM GAS  /tmp/ccOshYsA.s 			page 307


 10943 18ac FEF7EABE 		b	.L832
 10944              	.LVL864:
 10945              	.L660:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10946              		.loc 1 3200 32 view .LVU3453
 10947 18b0 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 10948              	.LBB1307:
 10949              	.LBB1246:
 10950              	.LBB1178:
 10951              	.LBB691:
 10952              	.LBB684:
 340:src/keys.c    **** #ifndef WINGUI
 10953              		.loc 1 340 8 view .LVU3454
 10954 18b2 0E4B     		ldr	r3, .L1159+8
 346:src/keys.c    ****   }
 10955              		.loc 1 346 9 view .LVU3455
 10956 18b4 0C21     		movs	r1, #12
 342:src/keys.c    **** #else
 10957              		.loc 1 342 73 view .LVU3456
 10958 18b6 4FF0020C 		mov	ip, #2
 10959 18ba FEF738BD 		b	.L659
 10960              	.LVL865:
 10961              	.L792:
 342:src/keys.c    **** #else
 10962              		.loc 1 342 73 view .LVU3457
 10963              	.LBE684:
 10964              	.LBE691:
 10965              	.LBE1178:
 10966              	.LBB1179:
 10967              	.LBB714:
1093:src/keys.c    **** #endif
 10968              		.loc 1 1093 4 is_stmt 1 view .LVU3458
1093:src/keys.c    **** #endif
 10969              		.loc 1 1093 8 is_stmt 0 view .LVU3459
 10970 18be 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1093:src/keys.c    **** #endif
 10971              		.loc 1 1093 7 view .LVU3460
 10972 18c2 9B06     		lsls	r3, r3, #26
 10973 18c4 7FF5BAAC 		bpl	.L791
1093:src/keys.c    **** #endif
 10974              		.loc 1 1093 29 view .LVU3461
 10975 18c8 40F24F1B 		movw	fp, #335
 10976 18cc C7E4     		b	.L794
 10977              	.LVL866:
 10978              	.L1137:
1117:src/keys.c    **** #undef _RARG
 10979              		.loc 1 1117 2 is_stmt 1 view .LVU3462
1117:src/keys.c    **** #undef _RARG
 10980              		.loc 1 1117 9 is_stmt 0 view .LVU3463
 10981 18ce 054B     		ldr	r3, .L1159
 10982 18d0 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1117:src/keys.c    **** #undef _RARG
 10983              		.loc 1 1117 57 view .LVU3464
 10984 18d4 DC07     		lsls	r4, r3, #31
 10985 18d6 7FF5C2AC 		bpl	.L794
 10986              	.LVL867:
1117:src/keys.c    **** #undef _RARG
ARM GAS  /tmp/ccOshYsA.s 			page 308


 10987              		.loc 1 1117 21 view .LVU3465
 10988 18da 1AF4804F 		tst	r10, #16384
 10989 18de 7EF47AAE 		bne	.L1065
 10990 18e2 BCE4     		b	.L794
 10991              	.L1160:
 10992              		.align	2
 10993              	.L1159:
 10994 18e4 00000000 		.word	PersistentRam
 10995 18e8 00000000 		.word	NonProgrammable
 10996 18ec 00000000 		.word	.LANCHOR11
 10997              	.LVL868:
 10998              	.L1140:
1117:src/keys.c    **** #undef _RARG
 10999              		.loc 1 1117 21 view .LVU3466
 11000              	.LBE714:
 11001              	.LBE1179:
 11002              	.LBB1180:
 11003              	.LBB928:
 933:src/keys.c    **** 
 11004              		.loc 1 933 3 is_stmt 1 view .LVU3467
 933:src/keys.c    **** 
 11005              		.loc 1 933 6 is_stmt 0 view .LVU3468
 11006 18f0 2BF4704B 		bic	fp, fp, #61440
 11007              	.LVL869:
 935:src/keys.c    **** 	case K00:
 11008              		.loc 1 935 2 is_stmt 1 view .LVU3469
 11009 18f4 282C     		cmp	r4, #40
 11010 18f6 3FF61FAE 		bhi	.L768
 11011 18fa 01A2     		adr	r2, .L770
 11012 18fc 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 11013              		.p2align 2
 11014              	.L770:
 11015 1900 79150000 		.word	.L778+1
 11016 1904 29150000 		.word	.L776+1
 11017 1908 39150000 		.word	.L768+1
 11018 190c 29150000 		.word	.L776+1
 11019 1910 39150000 		.word	.L768+1
 11020 1914 39150000 		.word	.L768+1
 11021 1918 39150000 		.word	.L768+1
 11022 191c 39150000 		.word	.L768+1
 11023 1920 39150000 		.word	.L768+1
 11024 1924 39150000 		.word	.L768+1
 11025 1928 39150000 		.word	.L768+1
 11026 192c 39150000 		.word	.L768+1
 11027 1930 5D150000 		.word	.L775+1
 11028 1934 39150000 		.word	.L768+1
 11029 1938 39150000 		.word	.L768+1
 11030 193c 39150000 		.word	.L768+1
 11031 1940 39150000 		.word	.L768+1
 11032 1944 39150000 		.word	.L768+1
 11033 1948 01160000 		.word	.L774+1
 11034 194c B3150000 		.word	.L773+1
 11035 1950 39150000 		.word	.L768+1
 11036 1954 39150000 		.word	.L768+1
 11037 1958 39150000 		.word	.L768+1
 11038 195c 39150000 		.word	.L768+1
 11039 1960 39150000 		.word	.L768+1
ARM GAS  /tmp/ccOshYsA.s 			page 309


 11040 1964 39150000 		.word	.L768+1
 11041 1968 39150000 		.word	.L768+1
 11042 196c 39150000 		.word	.L768+1
 11043 1970 39150000 		.word	.L768+1
 11044 1974 39150000 		.word	.L768+1
 11045 1978 31160000 		.word	.L772+1
 11046 197c 95150000 		.word	.L771+1
 11047 1980 31070000 		.word	.L769+1
 11048 1984 31070000 		.word	.L769+1
 11049 1988 39150000 		.word	.L768+1
 11050 198c 39150000 		.word	.L768+1
 11051 1990 39150000 		.word	.L768+1
 11052 1994 39150000 		.word	.L768+1
 11053 1998 39150000 		.word	.L768+1
 11054 199c 31070000 		.word	.L769+1
 11055 19a0 31070000 		.word	.L769+1
 11056              	.LVL870:
 11057              		.p2align 1
 11058              	.L1136:
 935:src/keys.c    **** 	case K00:
 11059              		.loc 1 935 2 is_stmt 0 view .LVU3470
 11060              	.LBE928:
 11061              	.LBE1180:
 11062              	.LBB1181:
 11063              	.LBB715:
1103:src/keys.c    **** 			set_pc(0);
 11064              		.loc 1 1103 43 view .LVU3471
 11065 19a4 B3F8EE37 		ldrh	r3, [r3, #2030]
 11066 19a8 012B     		cmp	r3, #1
 11067 19aa 7FF447AC 		bne	.L791
1104:src/keys.c    **** 		break;
 11068              		.loc 1 1104 4 is_stmt 1 view .LVU3472
 11069 19ae FFF7FEFF 		bl	set_pc
 11070              	.LVL871:
 11071 19b2 43E4     		b	.L791
 11072              	.LVL872:
 11073              	.L751:
1104:src/keys.c    **** 		break;
 11074              		.loc 1 1104 4 is_stmt 0 view .LVU3473
 11075              	.LBE715:
 11076              	.LBE1181:
 11077              	.LBB1182:
 11078              	.LBB880:
1454:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11079              		.loc 1 1454 3 is_stmt 1 view .LVU3474
1454:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11080              		.loc 1 1454 6 is_stmt 0 view .LVU3475
 11081 19b4 0328     		cmp	r0, #3
 11082 19b6 7FF4F7AB 		bne	.L738
 11083              	.LVL873:
1454:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11084              		.loc 1 1454 6 view .LVU3476
 11085              	.LBE880:
 11086              	.LBE1182:
 11087              	.LBE1246:
 11088              	.LBE1307:
3198:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccOshYsA.s 			page 310


 11089              		.loc 1 3198 7 is_stmt 1 view .LVU3477
3198:src/keys.c    **** 	NonProgrammable = 0;
 11090              		.loc 1 3198 10 is_stmt 0 view .LVU3478
 11091 19ba 5B06     		lsls	r3, r3, #25
 11092 19bc 11D5     		bpl	.L886
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11093              		.loc 1 3199 2 is_stmt 1 view .LVU3479
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11094              		.loc 1 3199 18 is_stmt 0 view .LVU3480
 11095 19be 5D4B     		ldr	r3, .L1161
 11096 19c0 0022     		movs	r2, #0
 11097              	.LVL874:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11098              		.loc 1 3199 18 view .LVU3481
 11099 19c2 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11100              		.loc 1 3200 2 is_stmt 1 view .LVU3482
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11101              		.loc 1 3200 32 is_stmt 0 view .LVU3483
 11102 19c4 4FF4BA70 		mov	r0, #372
 11103              	.LVL875:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11104              		.loc 1 3200 32 view .LVU3484
 11105 19c8 FEF75ABD 		b	.L830
 11106              	.LVL876:
 11107              	.L1143:
 11108              	.LBB1308:
 11109              	.LBB1247:
 11110              	.LBB1183:
 11111              	.LBB881:
1442:src/keys.c    **** 			State2.numdigit = 0;
 11112              		.loc 1 1442 4 is_stmt 1 view .LVU3485
1442:src/keys.c    **** 			State2.numdigit = 0;
 11113              		.loc 1 1442 17 is_stmt 0 view .LVU3486
 11114 19cc 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1443:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11115              		.loc 1 1443 20 view .LVU3487
 11116 19ce F272     		strb	r2, [r6, #11]
1442:src/keys.c    **** 			State2.numdigit = 0;
 11117              		.loc 1 1442 17 view .LVU3488
 11118 19d0 43F00803 		orr	r3, r3, #8
1444:src/keys.c    **** 			return STATE_UNFINISHED;
 11119              		.loc 1 1444 12 view .LVU3489
 11120 19d4 0A22     		movs	r2, #10
1442:src/keys.c    **** 			State2.numdigit = 0;
 11121              		.loc 1 1442 17 view .LVU3490
 11122 19d6 7375     		strb	r3, [r6, #21]
1443:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11123              		.loc 1 1443 4 is_stmt 1 view .LVU3491
1444:src/keys.c    **** 			return STATE_UNFINISHED;
 11124              		.loc 1 1444 4 view .LVU3492
1444:src/keys.c    **** 			return STATE_UNFINISHED;
 11125              		.loc 1 1444 12 is_stmt 0 view .LVU3493
 11126 19d8 F277     		strb	r2, [r6, #31]
1445:src/keys.c    **** 		}
 11127              		.loc 1 1445 4 is_stmt 1 view .LVU3494
1445:src/keys.c    **** 		}
ARM GAS  /tmp/ccOshYsA.s 			page 311


 11128              		.loc 1 1445 11 is_stmt 0 view .LVU3495
 11129 19da 4FF0330B 		mov	fp, #51
 11130 19de FEF79DBB 		b	.L566
 11131              	.LVL877:
 11132              	.L886:
1455:src/keys.c    **** 		break;
 11133              		.loc 1 1455 11 view .LVU3496
 11134 19e2 4FF4BA7B 		mov	fp, #372
 11135              	.LVL878:
 11136              	.L829:
1455:src/keys.c    **** 		break;
 11137              		.loc 1 1455 11 view .LVU3497
 11138              	.LBE881:
 11139              	.LBE1183:
 11140              	.LBE1247:
 11141              	.LBE1308:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11142              		.loc 1 3198 26 view .LVU3498
 11143 19e6 534B     		ldr	r3, .L1161
 11144 19e8 1A68     		ldr	r2, [r3]
 11145              	.LVL879:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11146              		.loc 1 3198 26 view .LVU3499
 11147 19ea 82B1     		cbz	r2, .L1058
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11148              		.loc 1 3199 2 is_stmt 1 view .LVU3500
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11149              		.loc 1 3199 18 is_stmt 0 view .LVU3501
 11150 19ec 0022     		movs	r2, #0
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11151              		.loc 1 3200 32 view .LVU3502
 11152 19ee 5846     		mov	r0, fp
 11153              	.LVL880:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11154              		.loc 1 3199 18 view .LVU3503
 11155 19f0 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11156              		.loc 1 3200 2 is_stmt 1 view .LVU3504
 11157 19f2 FEF745BD 		b	.L830
 11158              	.LVL881:
 11159              	.L879:
 11160              	.LBB1309:
 11161              	.LBB1248:
 11162              	.LBB1184:
 11163              	.LBB882:
1493:src/keys.c    **** 		break;
 11164              		.loc 1 1493 11 is_stmt 0 view .LVU3505
 11165 19f6 40F23B1B 		movw	fp, #315
 11166 19fa F4E7     		b	.L829
 11167              	.LVL882:
 11168              	.L756:
1493:src/keys.c    **** 		break;
 11169              		.loc 1 1493 11 view .LVU3506
 11170              	.LBE882:
 11171              	.LBE1184:
 11172              	.LBE1248:
 11173              	.LBE1309:
ARM GAS  /tmp/ccOshYsA.s 			page 312


3198:src/keys.c    **** 	NonProgrammable = 0;
 11174              		.loc 1 3198 7 is_stmt 1 view .LVU3507
3198:src/keys.c    **** 	NonProgrammable = 0;
 11175              		.loc 1 3198 10 is_stmt 0 view .LVU3508
 11176 19fc 5E06     		lsls	r6, r3, #25
 11177 19fe 09D5     		bpl	.L887
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11178              		.loc 1 3199 2 is_stmt 1 view .LVU3509
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11179              		.loc 1 3199 18 is_stmt 0 view .LVU3510
 11180 1a00 4C4B     		ldr	r3, .L1161
 11181 1a02 0022     		movs	r2, #0
 11182              	.LVL883:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11183              		.loc 1 3199 18 view .LVU3511
 11184 1a04 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11185              		.loc 1 3200 2 is_stmt 1 view .LVU3512
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11186              		.loc 1 3200 32 is_stmt 0 view .LVU3513
 11187 1a06 4FF48170 		mov	r0, #258
 11188              	.LVL884:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11189              		.loc 1 3200 32 view .LVU3514
 11190 1a0a FEF739BD 		b	.L830
 11191              	.LVL885:
 11192              	.L1058:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11193              		.loc 1 3200 32 view .LVU3515
 11194 1a0e 5846     		mov	r0, fp
 11195 1a10 FEF7E7BE 		b	.L835
 11196              	.LVL886:
 11197              	.L887:
 11198              	.LBB1310:
 11199              	.LBB1249:
 11200              	.LBB1185:
 11201              	.LBB883:
1486:src/keys.c    **** 		else if (shift == SHIFT_N)
 11202              		.loc 1 1486 11 view .LVU3516
 11203 1a14 4FF4817B 		mov	fp, #258
 11204 1a18 E5E7     		b	.L829
 11205              	.LVL887:
 11206              	.L763:
1486:src/keys.c    **** 		else if (shift == SHIFT_N)
 11207              		.loc 1 1486 11 view .LVU3517
 11208 1a1a 0093     		str	r3, [sp]
 11209              	.LBE883:
 11210              	.LBE1185:
 11211              	.LBB1186:
 11212              	.LBB1147:
1203:src/keys.c    **** 			break;
 11213              		.loc 1 1203 4 is_stmt 1 view .LVU3518
 11214              	.LVL888:
 11215              	.LBB1141:
 11216              	.LBI1141:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11217              		.loc 1 92 20 view .LVU3519
ARM GAS  /tmp/ccOshYsA.s 			page 313


 11218              	.LBB1142:
  93:src/keys.c    **** 	State2.shifts = shift;
 11219              		.loc 1 93 2 view .LVU3520
 11220              	.LBB1143:
 11221              	.LBI1143:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11222              		.loc 1 84 13 view .LVU3521
 11223              	.LBB1144:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11224              		.loc 1 85 2 view .LVU3522
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11225              		.loc 1 85 18 is_stmt 0 view .LVU3523
 11226 1a1c FFF7FEFF 		bl	shift_down
 11227              	.LVL889:
  86:src/keys.c    **** }
 11228              		.loc 1 86 2 is_stmt 1 view .LVU3524
 11229              	.LBE1144:
 11230              	.LBE1143:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11231              		.loc 1 94 2 view .LVU3525
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11232              		.loc 1 94 16 is_stmt 0 view .LVU3526
 11233 1a20 009B     		ldr	r3, [sp]
 11234 1a22 3374     		strb	r3, [r6, #16]
  95:src/keys.c    **** 	return r;
 11235              		.loc 1 95 2 is_stmt 1 view .LVU3527
  95:src/keys.c    **** 	return r;
 11236              		.loc 1 95 19 is_stmt 0 view .LVU3528
 11237 1a24 86F80DA0 		strb	r10, [r6, #13]
  96:src/keys.c    **** }
 11238              		.loc 1 96 2 is_stmt 1 view .LVU3529
  96:src/keys.c    **** }
 11239              		.loc 1 96 9 is_stmt 0 view .LVU3530
 11240 1a28 FEF7B2BD 		b	.L595
 11241              	.LVL890:
 11242              	.L762:
  96:src/keys.c    **** }
 11243              		.loc 1 96 9 view .LVU3531
 11244              	.LBE1142:
 11245              	.LBE1141:
1217:src/keys.c    **** 			break;
 11246              		.loc 1 1217 4 is_stmt 1 view .LVU3532
 11247 1a2c FFF7FEFF 		bl	init_state
 11248              	.LVL891:
1218:src/keys.c    **** 
 11249              		.loc 1 1218 4 view .LVU3533
 11250 1a30 FEF7AEBD 		b	.L595
 11251              	.LVL892:
 11252              	.L1138:
1193:src/keys.c    **** 		State2.hyp = 1;
 11253              		.loc 1 1193 3 view .LVU3534
 11254 1a34 FFF7FEFF 		bl	process_cmdline_set_lift
 11255              	.LVL893:
1194:src/keys.c    **** 		State2.dot = op;
 11256              		.loc 1 1194 3 view .LVU3535
1195:src/keys.c    **** 		State2.cmplx = 1;
 11257              		.loc 1 1195 3 view .LVU3536
ARM GAS  /tmp/ccOshYsA.s 			page 314


1196:src/keys.c    **** 		return STATE_UNFINISHED;
 11258              		.loc 1 1196 3 view .LVU3537
1196:src/keys.c    **** 		return STATE_UNFINISHED;
 11259              		.loc 1 1196 16 is_stmt 0 view .LVU3538
 11260 1a38 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 11261 1a3a 0BF00103 		and	r3, fp, #1
 11262 1a3e 9B01     		lsls	r3, r3, #6
 11263 1a40 43F02203 		orr	r3, r3, #34
 11264 1a44 22F06202 		bic	r2, r2, #98
 11265 1a48 1343     		orrs	r3, r3, r2
 11266 1a4a 7375     		strb	r3, [r6, #21]
1197:src/keys.c    **** 	}
 11267              		.loc 1 1197 3 is_stmt 1 view .LVU3539
1197:src/keys.c    **** 	}
 11268              		.loc 1 1197 10 is_stmt 0 view .LVU3540
 11269 1a4c 4FF0330B 		mov	fp, #51
 11270              	.LVL894:
1197:src/keys.c    **** 	}
 11271              		.loc 1 1197 10 view .LVU3541
 11272 1a50 FEF764BB 		b	.L566
 11273              	.LVL895:
 11274              	.L1111:
1197:src/keys.c    **** 	}
 11275              		.loc 1 1197 10 view .LVU3542
 11276              	.LBE1147:
 11277              	.LBE1186:
 11278              	.LBB1187:
 11279              	.LBB929:
1005:src/keys.c    **** 				init_arg((enum rarg) op);
 11280              		.loc 1 1005 4 is_stmt 1 view .LVU3543
1005:src/keys.c    **** 				init_arg((enum rarg) op);
 11281              		.loc 1 1005 7 is_stmt 0 view .LVU3544
 11282 1a54 BAF5704F 		cmp	r10, #61440
 11283 1a58 05D1     		bne	.L785
1005:src/keys.c    **** 				init_arg((enum rarg) op);
 11284              		.loc 1 1005 18 view .LVU3545
 11285 1a5a 374B     		ldr	r3, .L1161+4
 11286 1a5c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1005:src/keys.c    **** 				init_arg((enum rarg) op);
 11287              		.loc 1 1005 8 view .LVU3546
 11288 1a60 D807     		lsls	r0, r3, #31
 11289 1a62 3EF5B8AD 		bmi	.L1065
 11290              	.LVL896:
 11291              	.L785:
1006:src/keys.c    **** 			}
 11292              		.loc 1 1006 5 is_stmt 1 view .LVU3547
 11293              	.LBB918:
 11294              	.LBI918:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 11295              		.loc 1 520 13 view .LVU3548
 11296              	.LBB919:
 521:src/keys.c    **** 		return;
 11297              		.loc 1 521 2 view .LVU3549
 521:src/keys.c    **** 		return;
 11298              		.loc 1 521 6 is_stmt 0 view .LVU3550
 11299 1a66 FFF7FEFF 		bl	is_bad_cmdline
 11300              	.LVL897:
ARM GAS  /tmp/ccOshYsA.s 			page 315


 521:src/keys.c    **** 		return;
 11301              		.loc 1 521 5 view .LVU3551
 11302 1a6a 0446     		mov	r4, r0
 11303 1a6c 0028     		cmp	r0, #0
 11304 1a6e 7EF4B2AD 		bne	.L1065
 11305 1a72 5FFA8BF0 		uxtb	r0, fp
 11306 1a76 FFF7FEFF 		bl	init_arg.part.0
 11307              	.LVL898:
 11308              	.LBE919:
 11309              	.LBE918:
 11310              	.LBE929:
 11311              	.LBE1187:
 11312              	.LBE1249:
 11313              	.LBE1310:
2977:src/keys.c    **** #ifdef DM42
 11314              		.loc 1 2977 7 view .LVU3552
 11315 1a7a A046     		mov	r8, r4
 11316              	.LBB1311:
 11317              	.LBB1250:
 11318              	.LBB1188:
 11319              	.LBB930:
1008:src/keys.c    **** 		}
 11320              		.loc 1 1008 11 view .LVU3553
 11321 1a7c 4FF0330B 		mov	fp, #51
 11322              	.LVL899:
1008:src/keys.c    **** 		}
 11323              		.loc 1 1008 11 view .LVU3554
 11324 1a80 FEF74CBB 		b	.L566
 11325              	.LVL900:
 11326              	.L1144:
1008:src/keys.c    **** 		}
 11327              		.loc 1 1008 11 view .LVU3555
 11328              	.LBE930:
 11329              	.LBE1188:
 11330              	.LBB1189:
 11331              	.LBB884:
1430:src/keys.c    **** 			return STATE_UNFINISHED;
 11332              		.loc 1 1430 4 is_stmt 1 view .LVU3556
 11333              	.LBB868:
 11334              	.LBI868:
 520:src/keys.c    **** 	if (is_bad_cmdline())
 11335              		.loc 1 520 13 view .LVU3557
 11336              	.LBB869:
 521:src/keys.c    **** 		return;
 11337              		.loc 1 521 2 view .LVU3558
 521:src/keys.c    **** 		return;
 11338              		.loc 1 521 6 is_stmt 0 view .LVU3559
 11339 1a84 FFF7FEFF 		bl	is_bad_cmdline
 11340              	.LVL901:
 521:src/keys.c    **** 		return;
 11341              		.loc 1 521 5 view .LVU3560
 11342 1a88 0346     		mov	r3, r0
 11343 1a8a 0028     		cmp	r0, #0
 11344 1a8c 7EF4A3AD 		bne	.L1065
 11345 1a90 2720     		movs	r0, #39
 11346              	.LBE869:
 11347              	.LBE868:
ARM GAS  /tmp/ccOshYsA.s 			page 316


 11348              	.LBE884:
 11349              	.LBE1189:
 11350              	.LBE1250:
 11351              	.LBE1311:
2977:src/keys.c    **** #ifdef DM42
 11352              		.loc 1 2977 7 view .LVU3561
 11353 1a92 9846     		mov	r8, r3
 11354              	.LBB1312:
 11355              	.LBB1251:
 11356              	.LBB1190:
 11357              	.LBB885:
1431:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11358              		.loc 1 1431 11 view .LVU3562
 11359 1a94 4FF0330B 		mov	fp, #51
 11360              	.LBB871:
 11361              	.LBB870:
 11362 1a98 FFF7FEFF 		bl	init_arg.part.0
 11363              	.LVL902:
 11364 1a9c FEF73EBB 		b	.L566
 11365              	.LVL903:
 11366              	.L885:
1431:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11367              		.loc 1 1431 11 view .LVU3563
 11368              	.LBE870:
 11369              	.LBE871:
 11370              	.LBE885:
 11371              	.LBE1190:
 11372              	.LBB1191:
 11373              	.LBB734:
 756:src/keys.c    **** 	    }
 11374              		.loc 1 756 15 view .LVU3564
 11375 1aa0 4FF00F0B 		mov	fp, #15
 11376              	.LVL904:
 11377              	.L831:
 756:src/keys.c    **** 	    }
 11378              		.loc 1 756 15 view .LVU3565
 11379              	.LBE734:
 11380              	.LBE1191:
 11381              	.LBE1251:
 11382              	.LBE1312:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11383              		.loc 1 3198 26 view .LVU3566
 11384 1aa4 234B     		ldr	r3, .L1161
 11385 1aa6 1A68     		ldr	r2, [r3]
 11386 1aa8 002A     		cmp	r2, #0
 11387 1aaa B0D0     		beq	.L1058
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11388              		.loc 1 3199 2 is_stmt 1 view .LVU3567
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11389              		.loc 1 3199 18 is_stmt 0 view .LVU3568
 11390 1aac 0022     		movs	r2, #0
 11391 1aae 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11392              		.loc 1 3200 2 is_stmt 1 view .LVU3569
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11393              		.loc 1 3200 32 is_stmt 0 view .LVU3570
 11394 1ab0 5846     		mov	r0, fp
ARM GAS  /tmp/ccOshYsA.s 			page 317


 11395 1ab2 FEF7E7BD 		b	.L832
 11396              	.LVL905:
 11397              	.L884:
 11398              	.LBB1313:
 11399              	.LBB1252:
 11400              	.LBB1192:
 11401              	.LBB735:
 780:src/keys.c    **** 	    }
 11402              		.loc 1 780 15 view .LVU3571
 11403 1ab6 4FF0140B 		mov	fp, #20
 11404 1aba F3E7     		b	.L831
 11405              	.LVL906:
 11406              	.L880:
 780:src/keys.c    **** 	    }
 11407              		.loc 1 780 15 view .LVU3572
 11408              	.LBE735:
 11409              	.LBE1192:
 11410              	.LBB1193:
 11411              	.LBB931:
 977:src/keys.c    **** 	  }
 11412              		.loc 1 977 13 view .LVU3573
 11413 1abc 4FF0120B 		mov	fp, #18
 11414 1ac0 F0E7     		b	.L831
 11415              	.LVL907:
 11416              	.L1141:
 938:src/keys.c    **** 	    State2.dot = op;
 11417              		.loc 1 938 6 is_stmt 1 view .LVU3574
 939:src/keys.c    **** 	    // State2.cmplx = 0;
 11418              		.loc 1 939 6 view .LVU3575
 938:src/keys.c    **** 	    State2.dot = op;
 11419              		.loc 1 938 17 is_stmt 0 view .LVU3576
 11420 1ac2 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 11421 1ac4 0BF00103 		and	r3, fp, #1
 11422              	.LVL908:
 938:src/keys.c    **** 	    State2.dot = op;
 11423              		.loc 1 938 17 view .LVU3577
 11424 1ac8 9B01     		lsls	r3, r3, #6
 11425 1aca 43F02003 		orr	r3, r3, #32
 11426 1ace 22F06002 		bic	r2, r2, #96
 11427 1ad2 1343     		orrs	r3, r3, r2
 11428 1ad4 7375     		strb	r3, [r6, #21]
 941:src/keys.c    **** 	  }
 11429              		.loc 1 941 6 is_stmt 1 view .LVU3578
 941:src/keys.c    **** 	  }
 11430              		.loc 1 941 13 is_stmt 0 view .LVU3579
 11431 1ad6 4FF0330B 		mov	fp, #51
 11432              	.LVL909:
 941:src/keys.c    **** 	  }
 11433              		.loc 1 941 13 view .LVU3580
 11434 1ada FEF71FBB 		b	.L566
 11435              	.LVL910:
 11436              	.L1142:
 957:src/keys.c    **** 		}
 11437              		.loc 1 957 4 is_stmt 1 view .LVU3581
 957:src/keys.c    **** 		}
 11438              		.loc 1 957 34 is_stmt 0 view .LVU3582
 11439 1ade 174B     		ldr	r3, .L1161+8
ARM GAS  /tmp/ccOshYsA.s 			page 318


 11440              	.LVL911:
 957:src/keys.c    **** 		}
 11441              		.loc 1 957 11 view .LVU3583
 11442 1ae0 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11443 1ae4 FFF7FEFF 		bl	check_f_key
 11444              	.LVL912:
 957:src/keys.c    **** 		}
 11445              		.loc 1 957 11 view .LVU3584
 11446 1ae8 8346     		mov	fp, r0
 11447              	.LVL913:
 957:src/keys.c    **** 		}
 11448              		.loc 1 957 11 view .LVU3585
 11449 1aea FEF751BD 		b	.L595
 11450              	.LVL914:
 11451              	.L881:
 982:src/keys.c    **** 	  }
 11452              		.loc 1 982 13 view .LVU3586
 11453 1aee 4FF0130B 		mov	fp, #19
 11454 1af2 D7E7     		b	.L831
 11455              	.LVL915:
 11456              	.L721:
 982:src/keys.c    **** 	  }
 11457              		.loc 1 982 13 view .LVU3587
 11458              	.LBE931:
 11459              	.LBE1193:
 11460              	.LBB1194:
 11461              	.LBB822:
2728:src/keys.c    **** 		goto reset_window;
 11462              		.loc 1 2728 4 is_stmt 1 view .LVU3588
2728:src/keys.c    **** 		goto reset_window;
 11463              		.loc 1 2728 24 is_stmt 0 view .LVU3589
 11464 1af4 09F1FF39 		add	r9, r9, #-1
 11465              	.LVL916:
2728:src/keys.c    **** 		goto reset_window;
 11466              		.loc 1 2728 18 view .LVU3590
 11467 1af8 A6F80890 		strh	r9, [r6, #8]	@ movhi
 11468 1afc FFF7A9BA 		b	.L713
 11469              	.LVL917:
 11470              	.L1134:
2724:src/keys.c    **** 			--State2.digval;
 11471              		.loc 1 2724 5 is_stmt 1 view .LVU3591
2724:src/keys.c    **** 			--State2.digval;
 11472              		.loc 1 2724 21 is_stmt 0 view .LVU3592
 11473 1b00 FFF7FEFF 		bl	global_regs
 11474              	.LVL918:
2724:src/keys.c    **** 			--State2.digval;
 11475              		.loc 1 2724 19 view .LVU3593
 11476 1b04 3081     		strh	r0, [r6, #8]	@ movhi
 11477 1b06 FFF7A1BA 		b	.L722
 11478              	.LVL919:
 11479              	.L724:
2738:src/keys.c    **** 		goto reset_window;
 11480              		.loc 1 2738 4 is_stmt 1 view .LVU3594
2738:src/keys.c    **** 		goto reset_window;
 11481              		.loc 1 2738 18 is_stmt 0 view .LVU3595
 11482 1b0a 0023     		movs	r3, #0
 11483 1b0c 3381     		strh	r3, [r6, #8]	@ movhi
ARM GAS  /tmp/ccOshYsA.s 			page 319


 11484 1b0e FFF7A0BA 		b	.L713
 11485              	.LVL920:
 11486              	.L1135:
2755:src/keys.c    **** 			goto reset_window;
 11487              		.loc 1 2755 4 is_stmt 1 view .LVU3596
2755:src/keys.c    **** 			goto reset_window;
 11488              		.loc 1 2755 25 is_stmt 0 view .LVU3597
 11489 1b12 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 11490 1b14 43F00403 		orr	r3, r3, #4
 11491 1b18 B375     		strb	r3, [r6, #22]
2756:src/keys.c    **** 		}
 11492              		.loc 1 2756 4 is_stmt 1 view .LVU3598
 11493 1b1a FFF79ABA 		b	.L713
 11494              	.LVL921:
 11495              	.L1108:
2756:src/keys.c    **** 		}
 11496              		.loc 1 2756 4 is_stmt 0 view .LVU3599
 11497              	.LBE822:
 11498              	.LBE1194:
 11499              	.LBB1195:
 11500              	.LBB787:
 11501              	.LBB782:
 11502              	.LBB773:
 455:src/keys.c    **** 			shift = SHIFT_LC_G;
 11503              		.loc 1 455 8 is_stmt 1 view .LVU3600
 456:src/keys.c    **** 	}
 11504              		.loc 1 456 10 is_stmt 0 view .LVU3601
 11505 1b1e 0229     		cmp	r1, #2
 11506 1b20 08BF     		it	eq
 11507 1b22 0521     		moveq	r1, #5
 11508              	.LVL922:
 456:src/keys.c    **** 	}
 11509              		.loc 1 456 10 view .LVU3602
 11510 1b24 FEF70CBD 		b	.L677
 11511              	.LVL923:
 11512              	.L883:
 456:src/keys.c    **** 	}
 11513              		.loc 1 456 10 view .LVU3603
 11514              	.LBE773:
 11515              	.LBE782:
 11516              	.LBE787:
 11517              	.LBE1195:
 11518              	.LBB1196:
 11519              	.LBB736:
 772:src/keys.c    **** 	    }
 11520              		.loc 1 772 15 view .LVU3604
 11521 1b28 4FF0110B 		mov	fp, #17
 11522 1b2c BAE7     		b	.L831
 11523              	.LVL924:
 11524              	.L882:
 764:src/keys.c    **** 	    }
 11525              		.loc 1 764 15 view .LVU3605
 11526 1b2e 4FF0100B 		mov	fp, #16
 11527 1b32 B7E7     		b	.L831
 11528              	.L1162:
 11529              		.align	2
 11530              	.L1161:
ARM GAS  /tmp/ccOshYsA.s 			page 320


 11531 1b34 00000000 		.word	NonProgrammable
 11532 1b38 00000000 		.word	PersistentRam
 11533 1b3c 00000000 		.word	.LANCHOR20
 11534              	.LBE736:
 11535              	.LBE1196:
 11536              	.LBE1252:
 11537              	.LBE1313:
 11538              		.cfi_endproc
 11539              	.LFE58:
 11541              		.section	.text.process_keycode_with_shift,"ax",%progbits
 11542              		.align	1
 11543              		.p2align 2,,3
 11544              		.global	process_keycode_with_shift
 11545              		.syntax unified
 11546              		.thumb
 11547              		.thumb_func
 11548              		.fpu fpv4-sp-d16
 11550              	process_keycode_with_shift:
 11551              	.LFB57:
2965:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11552              		.loc 1 2965 61 is_stmt 1 view -0
 11553              		.cfi_startproc
 11554              		@ args = 0, pretend = 0, frame = 8
 11555              		@ frame_needed = 0, uses_anonymous_args = 0
 11556 0000 10B5     		push	{r4, lr}
 11557              		.cfi_def_cfa_offset 8
 11558              		.cfi_offset 4, -8
 11559              		.cfi_offset 14, -4
 11560 0002 82B0     		sub	sp, sp, #8
 11561              		.cfi_def_cfa_offset 16
2965:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11562              		.loc 1 2965 61 is_stmt 0 view .LVU3607
 11563 0004 02AB     		add	r3, sp, #8
 11564 0006 03E90300 		stmdb	r3, {r0, r1}
 11565 000a 019C     		ldr	r4, [sp, #4]
 11566              	.LVL925:
2966:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11567              		.loc 1 2966 4 is_stmt 1 view .LVU3608
2966:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11568              		.loc 1 2966 7 is_stmt 0 view .LVU3609
 11569 000c 002C     		cmp	r4, #0
 11570 000e 05DB     		blt	.L1164
2966:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11571              		.loc 1 2966 29 is_stmt 1 discriminator 1 view .LVU3610
 11572              	.LVL926:
 11573              	.LBB1314:
 11574              	.LBI1314:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11575              		.loc 1 92 20 discriminator 1 view .LVU3611
 11576              	.LBB1315:
  93:src/keys.c    **** 	State2.shifts = shift;
 11577              		.loc 1 93 2 discriminator 1 view .LVU3612
 11578              	.LBB1316:
 11579              	.LBI1316:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11580              		.loc 1 84 13 discriminator 1 view .LVU3613
 11581              	.LBB1317:
ARM GAS  /tmp/ccOshYsA.s 			page 321


  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11582              		.loc 1 85 2 discriminator 1 view .LVU3614
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11583              		.loc 1 85 18 is_stmt 0 discriminator 1 view .LVU3615
 11584 0010 FFF7FEFF 		bl	shift_down
 11585              	.LVL927:
  86:src/keys.c    **** }
 11586              		.loc 1 86 2 is_stmt 1 discriminator 1 view .LVU3616
 11587              	.LBE1317:
 11588              	.LBE1316:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11589              		.loc 1 94 2 discriminator 1 view .LVU3617
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11590              		.loc 1 94 16 is_stmt 0 discriminator 1 view .LVU3618
 11591 0014 054B     		ldr	r3, .L1166
  95:src/keys.c    **** 	return r;
 11592              		.loc 1 95 19 discriminator 1 view .LVU3619
 11593 0016 0022     		movs	r2, #0
 11594              	.LBE1315:
 11595              	.LBE1314:
2966:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11596              		.loc 1 2966 29 discriminator 1 view .LVU3620
 11597 0018 1C74     		strb	r4, [r3, #16]
 11598              	.LBB1319:
 11599              	.LBB1318:
  95:src/keys.c    **** 	return r;
 11600              		.loc 1 95 2 is_stmt 1 discriminator 1 view .LVU3621
  95:src/keys.c    **** 	return r;
 11601              		.loc 1 95 19 is_stmt 0 discriminator 1 view .LVU3622
 11602 001a 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 11603              		.loc 1 96 2 is_stmt 1 discriminator 1 view .LVU3623
 11604              	.LVL928:
 11605              	.L1164:
  96:src/keys.c    **** }
 11606              		.loc 1 96 2 is_stmt 0 discriminator 1 view .LVU3624
 11607              	.LBE1318:
 11608              	.LBE1319:
2967:src/keys.c    ****  }
 11609              		.loc 1 2967 4 is_stmt 1 view .LVU3625
 11610 001c 9DF80000 		ldrb	r0, [sp]	@ zero_extendqisi2
2968:src/keys.c    ****  
 11611              		.loc 1 2968 2 is_stmt 0 view .LVU3626
 11612 0020 02B0     		add	sp, sp, #8
 11613              		.cfi_def_cfa_offset 8
 11614              		@ sp needed
 11615 0022 BDE81040 		pop	{r4, lr}
 11616              		.cfi_restore 14
 11617              		.cfi_restore 4
 11618              		.cfi_def_cfa_offset 0
 11619              	.LVL929:
2967:src/keys.c    ****  }
 11620              		.loc 1 2967 4 view .LVU3627
 11621 0026 FFF7FEBF 		b	process_keycode
 11622              	.LVL930:
 11623              	.L1167:
 11624 002a 00BF     		.align	2
ARM GAS  /tmp/ccOshYsA.s 			page 322


 11625              	.L1166:
 11626 002c 00000000 		.word	StateWhileOn
 11627              		.cfi_endproc
 11628              	.LFE57:
 11630              		.comm	NonProgrammable,4,4
 11631              		.comm	GoFast,4,4
 11632              		.comm	OpCodeDisplayPending,4,4
 11633              		.comm	OpCode,4,4
 11634              		.comm	WasDataEntry,4,4
 11635              		.section	.bss.was_paused.9659,"aw",%nobits
 11636              		.align	2
 11637              		.set	.LANCHOR12,. + 0
 11640              	was_paused.9659:
 11641 0000 00000000 		.space	4
 11642              		.section	.rodata.alpha_arrows,"a"
 11643              		.align	2
 11646              	alpha_arrows:
 11647 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 11647      03049F5E 
 11647      7F
 11648              		.section	.rodata.alpha_catalogue,"a"
 11649              		.align	2
 11652              	alpha_catalogue:
 11653 0000 0D4AC280 		.ascii	"\015J\302\200\236\257J\242~\272\257\253\373\002\301"
 11653      9EAF4AA2 
 11653      7EBAAFAB 
 11653      FB02C1
 11654 000f 284AB0   		.ascii	"(J\260"
 11655              		.section	.rodata.alpha_compares,"a"
 11656              		.align	2
 11659              	alpha_compares:
 11660 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 11660      0A3E5B5D 
 11660      7B7D
 11661              		.section	.rodata.alpha_letters,"a"
 11662              		.align	2
 11663              		.set	.LANCHOR3,. + 0
 11666              	alpha_letters:
 11667 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 11667      88C4C5C6 
 11667      C784C8C9 
 11667      CA
 11668 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 11668      CECFD0D1 
 11668      D2D3D415 
 11668      D5
 11669 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 11669      DADBDC01 
 11669      1902DD1A 
 11669      DE
 11670 0027 DF       		.ascii	"\337"
 11671              		.section	.rodata.alpha_letters_lower,"a"
 11672              		.align	2
 11673              		.set	.LANCHOR4,. + 0
 11676              	alpha_letters_lower:
 11677 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 11677      89E4E5E6 
ARM GAS  /tmp/ccOshYsA.s 			page 323


 11677      E785E8E9 
 11677      EA
 11678 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 11678      EEEFF0F1 
 11678      F2F3F416 
 11678      F5
 11679 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 11679      FAFBFC01 
 11679      1902FD1A 
 11679      FE
 11680 0027 FF       		.ascii	"\377"
 11681              		.section	.rodata.alpha_subscripts,"a"
 11682              		.align	2
 11685              	alpha_subscripts:
 11686 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 11686      9A80D798 
 11686      BB1486BC 
 11686      F7
 11687 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 11687      BF818B9C 
 11687      8C999D90 
 11687      9B
 11688              		.section	.rodata.alpha_symbols,"a"
 11689              		.align	2
 11692              	alpha_symbols:
 11693 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 11693      222A405F 
 11693      7E25240C 
 11693      1E1F8EAE 
 11693      926023
 11694              		.section	.rodata.alphamap.9191,"a"
 11695              		.align	2
 11696              		.set	.LANCHOR9,. + 0
 11699              	alphamap.9191:
 11700 0000 41004100 		.ascii	"A\000A\000a\240"
 11700      61A0
 11701 0006 42004200 		.ascii	"B\000B\000b\241"
 11701      62A1
 11702 000c 43008200 		.ascii	"C\000\202\000c\242"
 11702      63A2
 11703 0012 44008300 		.ascii	"D\000\203\000d\243"
 11703      64A3
 11704 0018 450D4500 		.ascii	"E\015E\000e\244"
 11704      65A4
 11705 001e 46009400 		.ascii	"F\000\224\000f\264"
 11705      66B4
 11706 0024 47008200 		.ascii	"G\000\202\000g\242"
 11706      67A2
 11707 002a 48005800 		.ascii	"H\000X\000h\265"
 11707      68B5
 11708 0030 49004900 		.ascii	"I\000I\000i\250"
 11708      69A8
 11709 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 11709      6A00
 11710 003c 4B004B00 		.ascii	"K\000K\000k\251"
 11710      6BA9
 11711 0042 4C008A00 		.ascii	"L\000\212\000l\252"
ARM GAS  /tmp/ccOshYsA.s 			page 324


 11711      6CAA
 11712 0048 00004800 		.ascii	"\000\000H\000\000\246"
 11712      00A6
 11713 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 11713      6DAB
 11714 0054 4E084E95 		.ascii	"N\010N\225n\254"
 11714      6EAC
 11715 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 11715      6FB7
 11716 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 11716      0000
 11717 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 11717      0000
 11718 006c 50378F26 		.ascii	"P7\217&p\257"
 11718      70AF
 11719 0072 5138007C 		.ascii	"Q8\000|q\000"
 11719      7100
 11720 0078 52395200 		.ascii	"R9R\000r\260"
 11720      72B0
 11721 007e 532F9100 		.ascii	"S/\221\000s\261"
 11721      73B1
 11722 0084 00000000 		.ascii	"\000\000\000\000\000\000"
 11722      0000
 11723 008a 54345400 		.ascii	"T4T\000t\262"
 11723      74B2
 11724 0090 55350000 		.ascii	"U5\000\000u\000"
 11724      7500
 11725 0096 56360000 		.ascii	"V6\000\000v\000"
 11725      7600
 11726 009c 571C0000 		.ascii	"W\034\000\000w\000"
 11726      7700
 11727 00a2 00000000 		.ascii	"\000\000\000\000\000\000"
 11727      0000
 11728 00a8 58318D00 		.ascii	"X1\215\000x\255"
 11728      78AD
 11729 00ae 59325900 		.ascii	"Y2Y\000y\263"
 11729      79B3
 11730 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 11730      7AA5
 11731 00ba 2D282900 		.ascii	"-()\000\000\000"
 11731      0000
 11732 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 11732      0000
 11733 00c6 3A308700 		.ascii	":0\207\000;\247"
 11733      3BA7
 11734 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 11734      2EB6
 11735 00d2 3F002100 		.ascii	"?\000!\000\000\000"
 11735      0000
 11736 00d8 202B3D00 		.ascii	" +=\000\000\000"
 11736      0000
 11737 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 11737      0000
 11738              		.section	.rodata.amap.9182,"a"
 11739              		.align	2
 11740              		.set	.LANCHOR10,. + 0
 11743              	amap.9182:
ARM GAS  /tmp/ccOshYsA.s 			page 325


 11744 0000 04       		.byte	4
 11745 0001 000D00   		.ascii	"\000\015\000"
 11746 0004 05       		.byte	5
 11747 0005 000E09   		.ascii	"\000\016\011"
 11748 0008 08       		.byte	8
 11749 0009 00000F   		.ascii	"\000\000\017"
 11750 000c 1F       		.byte	31
 11751 000d 00000C   		.ascii	"\000\000\014"
 11752 0010 21       		.byte	33
 11753 0011 00000A   		.ascii	"\000\000\012"
 11754 0014 26       		.byte	38
 11755 0015 00000B   		.ascii	"\000\000\013"
 11756              		.section	.rodata.catalogue,"a"
 11757              		.align	2
 11760              	catalogue:
 11761 0000 445A9674 		.ascii	"DZ\226t\301`\2303\354\242:Xf\320}E\261Q\011yL\323F!"
 11761      C1609833 
 11761      ECA23A58 
 11761      66D07D45 
 11761      B1510979 
 11762 0018 0B448FA6 		.ascii	"\013D\217\246\261&I\321\206\351\273j\232\266_\023pW"
 11762      B12649D1 
 11762      86E9BB6A 
 11762      9AB65F13 
 11762      7057
 11763 002a A6B5B942 		.ascii	"\246\265\271B\234V}*a\331\306m\231a[\027\000\303l\233"
 11763      9C567D2A 
 11763      61D9C66D 
 11763      99615B17 
 11763      00C36C9B 
 11764 003e 645F0B3F 		.ascii	"d_\013?0\254\033\007@\021\363\013\024(\333v%\270\015"
 11764      30AC1B07 
 11764      4011F30B 
 11764      1428DB76 
 11764      25B80D
 11765 0051 5783290D 		.ascii	"W\203)\015C\020\344A\263+\033\306\020\240'\253\322\250"
 11765      4310E441 
 11765      B32B1BC6 
 11765      10A027AB 
 11765      D2A8
 11766 0063 9FAF2BAA 		.ascii	"\237\257+\252\372\277\260,\032\354\241*\331\344\245"
 11766      FABFB02C 
 11766      1AECA12A 
 11766      D9E4A5
 11767 0072 A268DA06 		.ascii	"\242h\332\006\205\265`PW)\247q\027%\275\246"
 11767      85B56050 
 11767      5729A771 
 11767      1725BDA6 
 11768              		.section	.rodata.catalogue_sizes.9457,"a"
 11769              		.align	2
 11770              		.set	.LANCHOR2,. + 0
 11773              	catalogue_sizes.9457:
 11774 0000 00681911 		.ascii	"\000h\031\0216<T~&6\016\023\012\011(\032LLX\016\023"
 11774      363C547E 
 11774      26360E13 
 11774      0A09281A 
 11774      4C4C580E 
ARM GAS  /tmp/ccOshYsA.s 			page 326


 11775              		.section	.rodata.catalogues.9465,"a"
 11776              		.align	2
 11777              		.set	.LANCHOR6,. + 0
 11780              	catalogues.9465:
 11781 0000 00000000 		.word	0
 11782 0004 00000000 		.word	catalogue
 11783 0008 00000000 		.word	cplx_catalogue
 11784 000c 00000000 		.word	stats_catalogue
 11785 0010 00000000 		.word	prob_catalogue
 11786 0014 00000000 		.word	int_catalogue
 11787 0018 00000000 		.word	prog_catalogue
 11788 001c 00000000 		.word	program_xfcn
 11789 0020 00000000 		.word	test_catalogue
 11790 0024 00000000 		.word	mode_catalogue
 11791 0028 00000000 		.word	alpha_catalogue
 11792 002c 00000000 		.word	alpha_symbols
 11793 0030 00000000 		.word	alpha_compares
 11794 0034 00000000 		.word	alpha_arrows
 11795 0038 00000000 		.word	alpha_letters
 11796 003c 00000000 		.word	alpha_subscripts
 11797 0040 00000000 		.word	0
 11798 0044 00000000 		.word	0
 11799 0048 00000000 		.word	0
 11800 004c 00000000 		.word	sums_catalogue
 11801 0050 00000000 		.word	matrix_catalogue
 11802              		.section	.rodata.cmap.9181,"a"
 11803              		.align	2
 11804              		.set	.LANCHOR11,. + 0
 11807              	cmap.9181:
 11808 0000 04       		.byte	4
 11809 0001 120012   		.ascii	"\022\000\022"
 11810 0004 05       		.byte	5
 11811 0005 090909   		.ascii	"\011\011\011"
 11812 0008 06       		.byte	6
 11813 0009 151515   		.ascii	"\025\025\025"
 11814 000c 0C       		.byte	12
 11815 000d 100011   		.ascii	"\020\000\021"
 11816 0010 19       		.byte	25
 11817 0011 040004   		.ascii	"\004\000\004"
 11818 0014 1A       		.byte	26
 11819 0015 030003   		.ascii	"\003\000\003"
 11820 0018 1B       		.byte	27
 11821 0019 130013   		.ascii	"\023\000\023"
 11822 001c 1C       		.byte	28
 11823 001d 140014   		.ascii	"\024\000\024"
 11824 0020 1E       		.byte	30
 11825 0021 171717   		.ascii	"\027\027\027"
 11826 0024 1F       		.byte	31
 11827 0025 080808   		.ascii	"\010\010\010"
 11828 0028 20       		.byte	32
 11829 0029 060606   		.ascii	"\006\006\006"
 11830 002c 21       		.byte	33
 11831 002d 010502   		.ascii	"\001\005\002"
 11832              		.section	.rodata.conv_catalogue,"a"
 11833              		.align	2
 11834              		.set	.LANCHOR5,. + 0
 11837              	conv_catalogue:
ARM GAS  /tmp/ccOshYsA.s 			page 327


 11838 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 11838      2B2DDD37 
 11838      27393133 
 11838      111605DC 
 11838      DE19
 11839 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 11839      0D0F8D08 
 11839      8F0A2A2C 
 11839      47434517 
 11839      3F30
 11840 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 11840      02062622 
 11840      20282435 
 11840      2F012310 
 11840      0C0E2112 
 11841 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 11841      1E292E09 
 11841      36383E3A 
 11841      3C4025DF 
 11841      3D8B8E03 
 11842 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 11842      4A484642 
 11842      441F
 11843              		.section	.rodata.conv_mapping.9504,"a"
 11844              		.align	2
 11845              		.set	.LANCHOR8,. + 0
 11848              	conv_mapping.9504:
 11849 0000 8502     		.short	645
 11850 0002 8402     		.short	644
 11851 0004 8602     		.short	646
 11852 0006 8702     		.short	647
 11853 0008 8202     		.short	642
 11854 000a 8302     		.short	643
 11855 000c 3202     		.short	562
 11856 000e 3302     		.short	563
 11857 0010 3402     		.short	564
 11858 0012 3502     		.short	565
 11859 0014 3602     		.short	566
 11860 0016 3702     		.short	567
 11861              		.section	.rodata.cplx_catalogue,"a"
 11862              		.align	2
 11865              	cplx_catalogue:
 11866 0000 7967DC7E 		.ascii	"yg\334~\006:\316\241\015\337y\237\247\356kw\2477\371"
 11866      063ACEA1 
 11866      0DDF799F 
 11866      A7EE6B77 
 11866      A737F9
 11867 0013 D47CDE07 		.ascii	"\324|\336\007\211\344\244+Y\311\375v@"
 11867      89E4A42B 
 11867      59C9FD76 
 11867      40
 11868              		.section	.rodata.disp.9319,"a"
 11869              		.align	2
 11870              		.set	.LANCHOR15,. + 0
 11873              	disp.9319:
 11874 0000 03       		.byte	3
 11875 0001 02       		.byte	2
ARM GAS  /tmp/ccOshYsA.s 			page 328


 11876 0002 05       		.byte	5
 11877 0003 04       		.byte	4
 11878              		.section	.rodata.int_catalogue,"a"
 11879              		.align	2
 11882              	int_catalogue:
 11883 0000 446F8306 		.ascii	"Do\203\006\372>\3342Y\302\020\257\264H\372k\031v\264"
 11883      FA3EDC32 
 11883      59C210AF 
 11883      B448FA6B 
 11883      1976B4
 11884 0013 94BFAFF6 		.ascii	"\224\277\257\366q\233]\331\226\305vp\0146\310\225\274"
 11884      719B5DD9 
 11884      96C57670 
 11884      0C36C895 
 11884      BC
 11885 0024 AF43F2F3 		.ascii	"\257C\362\363\275o\221\241\000\275\257|Q\211\015L\244"
 11885      BD6F91A1 
 11885      00BDAF7C 
 11885      51890D4C 
 11885      A4
 11886 0035 41B32B1B 		.ascii	"A\263+\033\312\364\252\257+\252\372\277\260,\032\354"
 11886      CAF4AAAF 
 11886      2BAAFABF 
 11886      B02C1AEC 
 11887 0045 AB4A5057 		.ascii	"\253JPW-\314"
 11887      2DCC
 11888              		.section	.rodata.linear_key_map.9152,"a"
 11889              		.align	2
 11890              		.set	.LANCHOR1,. + 0
 11893              	linear_key_map.9152:
 11894 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 11894      04050607 
 11894      08090A0B 
 11894      0C
 11895 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 11895      00111213 
 11895      14150016 
 11895      17
 11896 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 11896      1B1C1D1E 
 11896      1F002021 
 11896      22232425 
 11896      25252525 
 11897 002e 25       		.ascii	"%"
 11898              		.section	.rodata.linear_key_map.9156,"a"
 11899              		.align	2
 11900              		.set	.LANCHOR18,. + 0
 11903              	linear_key_map.9156:
 11904 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 11904      04050607 
 11904      08222222 
 11904      090A0B
 11905 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 11905      0F101112 
 11905      00131415 
 11905      16
 11906 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
ARM GAS  /tmp/ccOshYsA.s 			page 329


 11906      1A1B1C00 
 11906      1D1E1F20 
 11906      21222222 
 11907 002c 040522   		.ascii	"\004\005\""
 11908              		.section	.rodata.map.9168,"a"
 11909              		.align	2
 11910              		.set	.LANCHOR0,. + 0
 11913              	map.9168:
 11914 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 11914      FF7F7F7F 
 11914      6D6E6F6C 
 11914      FFFFFFFF 
 11915 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 11915      097F7FE7 
 11915      05067F7F 
 11915      E4
 11916 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360ef\177"
 11916      00F06566 
 11916      7F
 11917              		.section	.rodata.matrix_catalogue,"a"
 11918              		.align	2
 11921              	matrix_catalogue:
 11922 0000 641C9364 		.ascii	"d\034\223d\3305\334sm\212o\230\266\365\306o\330\366"
 11922      D835DC73 
 11922      6D8A6F98 
 11922      B6F5C66F 
 11922      D8F6
 11923 0012 45C86398 		.ascii	"E\310c\230\3260"
 11923      D630
 11924              		.section	.rodata.mode_catalogue,"a"
 11925              		.align	2
 11928              	mode_catalogue:
 11929 0000 2948C290 		.ascii	")H\302\220\213\300\006c\230\345\037\210\001\374|\271"
 11929      8BC00663 
 11929      98E51F88 
 11929      01FC7CB9 
 11930 0010 49818CCF 		.ascii	"I\201\214\317$I\302lb\031I2H\232\0310\322\020\203\304"
 11930      2449C26C 
 11930      62194932 
 11930      489A1930 
 11930      D21083C4 
 11931 0024 B0922087 		.ascii	"\260\222 \2072\012c\020\3072Js\024\306#\214\340\340"
 11931      320A6310 
 11931      C7324A73 
 11931      14C6238C 
 11931      E0E0
 11932 0036 39C30862 		.ascii	"9\303\010b\024\215\274O\203\334\231\311r@"
 11932      148DBC4F 
 11932      83DC99C9 
 11932      7240
 11933              		.section	.rodata.op_map.9235,"a"
 11934              		.align	2
 11935              		.set	.LANCHOR22,. + 0
 11938              	op_map.9235:
 11939 0000 1500     		.short	21
 11940 0002 0B02     		.short	523
 11941 0004 0003     		.short	768
ARM GAS  /tmp/ccOshYsA.s 			page 330


 11942 0006 0A02     		.short	522
 11943 0008 1300     		.short	19
 11944 000a 1400     		.short	20
 11945 000c 0300     		.short	3
 11946 000e 0A00     		.short	10
 11947 0010 0701     		.short	263
 11948 0012 0000     		.short	0
 11949 0014 6531     		.short	12645
 11950 0016 0300     		.short	3
 11951 0018 0200     		.short	2
 11952 001a 0100     		.short	1
 11953 001c 4400     		.short	68
 11954 001e 0C00     		.short	12
 11955 0020 0D00     		.short	13
 11956 0022 0E00     		.short	14
 11957 0024 0403     		.short	772
 11958 0026 2F00     		.short	47
 11959 0028 0900     		.short	9
 11960 002a 0A00     		.short	10
 11961 002c 0B00     		.short	11
 11962 002e 0303     		.short	771
 11963 0030 2E00     		.short	46
 11964 0032 0600     		.short	6
 11965 0034 0700     		.short	7
 11966 0036 0800     		.short	8
 11967 0038 0203     		.short	770
 11968 003a 3300     		.short	51
 11969 003c 0500     		.short	5
 11970 003e 0400     		.short	4
 11971 0040 3B01     		.short	315
 11972 0042 0103     		.short	769
 11973 0044 0001     		.short	256
 11974              		.section	.rodata.op_map.9258,"a"
 11975              		.align	2
 11976              		.set	.LANCHOR19,. + 0
 11979              	op_map.9258:
 11980 0000 0100     		.short	1
 11981 0002 0000     		.short	0
 11982 0004 20F2     		.short	-3552
 11983 0006 23F2     		.short	-3549
 11984 0008 21F2     		.short	-3551
 11985 000a 24F2     		.short	-3548
 11986 000c 22F2     		.short	-3550
 11987 000e 25F2     		.short	-3547
 11988 0010 47F1     		.short	-3769
 11989 0012 46F1     		.short	-3770
 11990 0014 4E01     		.short	334
 11991 0016 4D01     		.short	333
 11992 0018 5C01     		.short	348
 11993 001a 35F1     		.short	-3787
 11994 001c 5B01     		.short	347
 11995 001e 36F1     		.short	-3786
 11996 0020 3301     		.short	307
 11997 0022 37F1     		.short	-3785
 11998 0024 3300     		.short	51
 11999 0026 0C01     		.short	268
 12000 0028 2B00     		.short	43
ARM GAS  /tmp/ccOshYsA.s 			page 331


 12001 002a 2C00     		.short	44
 12002 002c 028B     		.short	-29950
 12003 002e 088B     		.short	-29944
 12004 0030 0A8B     		.short	-29942
 12005 0032 108B     		.short	-29936
 12006 0034 4301     		.short	323
 12007 0036 3D01     		.short	317
 12008 0038 0902     		.short	521
 12009 003a 0802     		.short	520
 12010 003c 1002     		.short	528
 12011 003e 0D02     		.short	525
 12012 0040 0F02     		.short	527
 12013 0042 0E02     		.short	526
 12014 0044 0003     		.short	768
 12015 0046 0803     		.short	776
 12016 0048 0BF2     		.short	-3573
 12017 004a 1603     		.short	790
 12018 004c 1203     		.short	786
 12019 004e 1303     		.short	787
 12020 0050 3DF2     		.short	-3523
 12021 0052 3EF2     		.short	-3522
 12022 0054 24F1     		.short	-3804
 12023 0056 1EF1     		.short	-3810
 12024 0058 75F2     		.short	-3467
 12025 005a 27F1     		.short	-3801
 12026 005c 0A02     		.short	522
 12027 005e 1602     		.short	534
 12028 0060 5100     		.short	81
 12029 0062 5200     		.short	82
 12030 0064 0000     		.short	0
 12031 0066 0100     		.short	1
 12032 0068 48F0     		.short	-4024
 12033 006a 4BF0     		.short	-4021
 12034 006c 47F0     		.short	-4025
 12035 006e 46F0     		.short	-4026
 12036 0070 77F2     		.short	-3465
 12037 0072 78F2     		.short	-3464
 12038 0074 3300     		.short	51
 12039 0076 3300     		.short	51
 12040 0078 0502     		.short	517
 12041 007a 0602     		.short	518
 12042 007c 0402     		.short	516
 12043 007e 0002     		.short	512
 12044 0080 4200     		.short	66
 12045 0082 3801     		.short	312
 12046 0084 3A00     		.short	58
 12047 0086 3B00     		.short	59
 12048 0088 0001     		.short	256
 12049 008a 0001     		.short	256
 12050              		.section	.rodata.op_map.9281,"a"
 12051              		.align	2
 12052              		.set	.LANCHOR21,. + 0
 12055              	op_map.9281:
 12056 0000 4C80     		.short	-32692
 12057 0002 4D80     		.short	-32691
 12058 0004 4E80     		.short	-32690
 12059 0006 4F80     		.short	-32689
ARM GAS  /tmp/ccOshYsA.s 			page 332


 12060 0008 3300     		.short	51
 12061 000a 3300     		.short	51
 12062 000c 3300     		.short	51
 12063 000e 2180     		.short	-32735
 12064 0010 0801     		.short	264
 12065 0012 8780     		.short	-32633
 12066 0014 1180     		.short	-32751
 12067 0016 7C02     		.short	636
 12068 0018 5560     		.short	24661
 12069 001a 3F01     		.short	319
 12070 001c 4580     		.short	-32699
 12071 001e 1C03     		.short	796
 12072 0020 1D03     		.short	797
 12073 0022 1E03     		.short	798
 12074 0024 0603     		.short	774
 12075 0026 2F02     		.short	559
 12076 0028 3300     		.short	51
 12077 002a 3300     		.short	51
 12078 002c 3300     		.short	51
 12079 002e 3300     		.short	51
 12080 0030 3300     		.short	51
 12081 0032 3300     		.short	51
 12082 0034 3300     		.short	51
 12083 0036 3300     		.short	51
 12084 0038 1640     		.short	16406
 12085 003a 0201     		.short	258
 12086 003c 6D80     		.short	-32659
 12087 003e 5001     		.short	336
 12088 0040 3300     		.short	51
 12089 0042 1540     		.short	16405
 12090 0044 0001     		.short	256
 12091              		.section	.rodata.op_map.9291,"a"
 12092              		.align	2
 12093              		.set	.LANCHOR17,. + 0
 12096              	op_map.9291:
 12097 0000 0100     		.short	1
 12098 0002 0100     		.short	1
 12099 0004 0000     		.short	0
 12100 0006 0000     		.short	0
 12101 0008 0B05     		.short	1291
 12102 000a 2005     		.short	1312
 12103 000c 2305     		.short	1315
 12104 000e 3300     		.short	51
 12105 0010 0006     		.short	1536
 12106 0012 2105     		.short	1313
 12107 0014 2405     		.short	1316
 12108 0016 3300     		.short	51
 12109 0018 0A05     		.short	1290
 12110 001a 2205     		.short	1314
 12111 001c 2505     		.short	1317
 12112 001e 3300     		.short	51
 12113 0020 3300     		.short	51
 12114 0022 4701     		.short	327
 12115 0024 4601     		.short	326
 12116 0026 3300     		.short	51
 12117 0028 3300     		.short	51
 12118 002a 3300     		.short	51
ARM GAS  /tmp/ccOshYsA.s 			page 333


 12119 002c 3300     		.short	51
 12120 002e 3300     		.short	51
 12121 0030 15FF     		.short	-235
 12122 0032 3300     		.short	51
 12123 0034 3300     		.short	51
 12124 0036 3300     		.short	51
 12125 0038 1AFF     		.short	-230
 12126 003a 3300     		.short	51
 12127 003c 3300     		.short	51
 12128 003e 9BFF     		.short	-101
 12129 0040 0901     		.short	265
 12130 0042 3300     		.short	51
 12131 0044 3300     		.short	51
 12132 0046 0A01     		.short	266
 12133 0048 0B01     		.short	267
 12134 004a 3300     		.short	51
 12135 004c 0D01     		.short	269
 12136 004e 0D01     		.short	269
 12137 0050 663F     		.short	16230
 12138 0052 3300     		.short	51
 12139 0054 3300     		.short	51
 12140 0056 1FFF     		.short	-225
 12141 0058 3805     		.short	1336
 12142 005a 3300     		.short	51
 12143 005c 3300     		.short	51
 12144 005e 3905     		.short	1337
 12145 0060 5521     		.short	8533
 12146 0062 3300     		.short	51
 12147 0064 3300     		.short	51
 12148 0066 5521     		.short	8533
 12149 0068 3300     		.short	51
 12150 006a 3300     		.short	51
 12151 006c 3300     		.short	51
 12152 006e 3300     		.short	51
 12153 0070 3300     		.short	51
 12154 0072 0905     		.short	1289
 12155 0074 0805     		.short	1288
 12156 0076 3300     		.short	51
 12157 0078 07A8     		.short	-22521
 12158 007a 1005     		.short	1296
 12159 007c 0D05     		.short	1293
 12160 007e 3300     		.short	51
 12161 0080 08A8     		.short	-22520
 12162 0082 0F05     		.short	1295
 12163 0084 0E05     		.short	1294
 12164 0086 3300     		.short	51
 12165 0088 09A8     		.short	-22519
 12166 008a 0006     		.short	1536
 12167 008c 0806     		.short	1544
 12168 008e 3300     		.short	51
 12169 0090 0406     		.short	1540
 12170 0092 0B05     		.short	1291
 12171 0094 1606     		.short	1558
 12172 0096 3300     		.short	51
 12173 0098 3300     		.short	51
 12174 009a 1206     		.short	1554
 12175 009c 1306     		.short	1555
ARM GAS  /tmp/ccOshYsA.s 			page 334


 12176 009e 2F05     		.short	1327
 12177 00a0 04A8     		.short	-22524
 12178 00a2 3300     		.short	51
 12179 00a4 3300     		.short	51
 12180 00a6 3300     		.short	51
 12181 00a8 05A8     		.short	-22523
 12182 00aa 3300     		.short	51
 12183 00ac 3300     		.short	51
 12184 00ae 3300     		.short	51
 12185 00b0 06A8     		.short	-22522
 12186 00b2 3300     		.short	51
 12187 00b4 3300     		.short	51
 12188 00b6 3300     		.short	51
 12189 00b8 0306     		.short	1539
 12190 00ba 0A05     		.short	1290
 12191 00bc 1605     		.short	1302
 12192 00be 1605     		.short	1302
 12193 00c0 3300     		.short	51
 12194 00c2 3300     		.short	51
 12195 00c4 3300     		.short	51
 12196 00c6 3300     		.short	51
 12197 00c8 01A8     		.short	-22527
 12198 00ca 0000     		.short	0
 12199 00cc 0100     		.short	1
 12200 00ce 3300     		.short	51
 12201 00d0 02A8     		.short	-22526
 12202 00d2 3300     		.short	51
 12203 00d4 3300     		.short	51
 12204 00d6 3300     		.short	51
 12205 00d8 03A8     		.short	-22525
 12206 00da 3300     		.short	51
 12207 00dc 3300     		.short	51
 12208 00de 3300     		.short	51
 12209 00e0 0206     		.short	1538
 12210 00e2 3300     		.short	51
 12211 00e4 3300     		.short	51
 12212 00e6 3300     		.short	51
 12213 00e8 3300     		.short	51
 12214 00ea 3300     		.short	51
 12215 00ec 3300     		.short	51
 12216 00ee 0201     		.short	258
 12217 00f0 00A8     		.short	-22528
 12218 00f2 0505     		.short	1285
 12219 00f4 0605     		.short	1286
 12220 00f6 3300     		.short	51
 12221 00f8 B401     		.short	436
 12222 00fa 0405     		.short	1284
 12223 00fc 0005     		.short	1280
 12224 00fe 3300     		.short	51
 12225 0100 3300     		.short	51
 12226 0102 3300     		.short	51
 12227 0104 3300     		.short	51
 12228 0106 3300     		.short	51
 12229 0108 0106     		.short	1537
 12230 010a 3300     		.short	51
 12231 010c 3300     		.short	51
 12232 010e 3300     		.short	51
ARM GAS  /tmp/ccOshYsA.s 			page 335


 12233 0110 0001     		.short	256
 12234 0112 0001     		.short	256
 12235 0114 0001     		.short	256
 12236 0116 0001     		.short	256
 12237              		.section	.rodata.op_map.9303,"a"
 12238              		.align	2
 12239              		.set	.LANCHOR13,. + 0
 12242              	op_map.9303:
 12243 0000 2A27     		.ascii	"*'"
 12244 0002 2B28     		.ascii	"+("
 12245 0004 2C29     		.ascii	",)"
 12246              		.section	.rodata.op_map.9318,"a"
 12247              		.align	2
 12248              		.set	.LANCHOR14,. + 0
 12251              	op_map.9318:
 12252 0000 1A02     		.short	538
 12253 0002 7B02     		.short	635
 12254 0004 1B02     		.short	539
 12255 0006 7A02     		.short	634
 12256 0008 1C02     		.short	540
 12257 000a 3300     		.short	51
 12258              		.section	.rodata.op_map2.9259,"a"
 12259              		.align	2
 12260              		.set	.LANCHOR20,. + 0
 12263              	op_map2.9259:
 12264 0000 3300     		.short	51
 12265 0002 3300     		.short	51
 12266 0004 0003     		.short	768
 12267 0006 0A02     		.short	522
 12268              		.section	.rodata.opcode_breaks,"a"
 12269              		.align	2
 12270              		.set	.LANCHOR7,. + 0
 12273              	opcode_breaks:
 12274 0000 34C5992F 		.ascii	"4\305\231/\014\231/"
 12274      0C992F
 12275              		.section	.rodata.prob_catalogue,"a"
 12276              		.align	2
 12279              	prob_catalogue:
 12280 0000 52147595 		.ascii	"R\024u\225IWU\305\261^QTE\221FO\226$\375@TU\005\241"
 12280      495755C5 
 12280      B15E5154 
 12280      4591464F 
 12280      9624FD40 
 12281 0018 5255D565 		.ascii	"RU\325e\251XV\225\225\255[U\0255\245US\224\325\235O"
 12281      A9585695 
 12281      95AD5B55 
 12281      1535A555 
 12281      5394D59D 
 12282 002d 52D4A599 		.ascii	"R\324\245\231LN\326\024\361=P\224\025\215CW\323T\345"
 12282      4C4ED614 
 12282      F13D5094 
 12282      158D4357 
 12282      D354E5
 12283 0040 3A4E1600 		.ascii	":N\026\000"
 12284              		.section	.rodata.prog_catalogue,"a"
 12285              		.align	2
 12288              	prog_catalogue:
ARM GAS  /tmp/ccOshYsA.s 			page 336


 12289 0000 B30D1CBC 		.ascii	"\263\015\034\274y\035G\201\310t*1\353TB\264m1\272\227"
 12289      791D4781 
 12289      C8742A31 
 12289      EB5442B4 
 12289      6D31BA97 
 12290 0014 BA0E0B7A 		.ascii	"\272\016\013z\337\312\262|\243+\313r\2232\326\264\255"
 12290      DFCAB27C 
 12290      A32BCB72 
 12290      9332D6B4 
 12290      AD
 12291 0025 4C3CE2C4 		.ascii	"L<\342\304M\343w\020\015\015\303\214p90\352\340\337"
 12291      4DE37710 
 12291      0D0DC38C 
 12291      703930EA 
 12291      E0DF
 12292 0037 1D8CD1B4 		.ascii	"\035\214\321\264\261+\313\"\300\341\262\315 \336\267"
 12292      B12BCB22 
 12292      C0E1B2CD 
 12292      20DEB7
 12293 0046 302A92A7 		.ascii	"0*\222\247\010\016\214\272\236\250\301J\342\267\004"
 12293      080E8CBA 
 12293      9EA8C14A 
 12293      E2B704
 12294 0055 C6CF3C8B 		.ascii	"\306\317<\213&\313\216\314\200\355;\2623\320\360<N\363"
 12294      26CB8ECC 
 12294      80ED3BB2 
 12294      33D0F03C 
 12294      4EF3
 12295 0067 CB21     		.ascii	"\313!"
 12296              		.section	.rodata.program_xfcn,"a"
 12297              		.align	2
 12300              	program_xfcn:
 12301 0000 445A9676 		.ascii	"DZ\226v\3700X&\016\372>\312#\245\206m\0342Y\302\037"
 12301      F8305826 
 12301      0EFA3ECA 
 12301      23A5866D 
 12301      1C3259C2 
 12302 0015 516C5442 		.ascii	"QlTB^S4\321\210B\357\264H\372k\022d\235\030n\233\266"
 12302      5E5334D1 
 12302      8842EFB4 
 12302      48FA6B12 
 12302      649D186E 
 12303 002b A9AB65F1 		.ascii	"\251\253e\3617\005zkIF\345\012qY\364\251\207\277\257"
 12303      37057A6B 
 12303      4946E50A 
 12303      7159F4A9 
 12303      87BFAF
 12304 003e F6719B5D 		.ascii	"\366q\233]\331\226\025\261]\234\003\015\262m\221|,\225"
 12304      D99615B1 
 12304      5D9C030D 
 12304      B26D917C 
 12304      2C95
 12305 0050 BCAF43F2 		.ascii	"\274\257C\362\363\275p\253\347\006\301\306\204\001\037"
 12305      F3BD70AB 
 12305      E706C1C6 
 12305      84011F
 12306 005f BD8C2BDF 		.ascii	"\275\214+\337\024(\333v%\270\015W\203)\015C\020\344"
ARM GAS  /tmp/ccOshYsA.s 			page 337


 12306      1428DB76 
 12306      25B80D57 
 12306      83290D43 
 12306      10E4
 12307 0071 41B32B1B 		.ascii	"A\263+\033\306\020\240'\253\322\250\237\257+\252\372"
 12307      C610A027 
 12307      ABD2A89F 
 12307      AF2BAAFA 
 12308 0081 BFB02C1A 		.ascii	"\277\260,\032\354\241*\331\344\245\242h\332\006\205"
 12308      ECA12AD9 
 12308      E4A5A268 
 12308      DA0685
 12309 0090 B5605057 		.ascii	"\265`PW-\312i\334E\311oi\234\300"
 12309      2DCA69DC 
 12309      45C96F69 
 12309      9CC0
 12310              		.section	.rodata.smap.9183,"a"
 12311              		.align	2
 12312              		.set	.LANCHOR16,. + 0
 12315              	smap.9183:
 12316 0000 00010002 		.ascii	"\000\001\000\002"
 12317              		.section	.rodata.stats_catalogue,"a"
 12318              		.align	2
 12321              	stats_catalogue:
 12322 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\264T\027\205"
 12322      5D17C971 
 12322      58611685 
 12322      95B45417 
 12322      85
 12323 0011 514C575B 		.ascii	"QLW[\300"
 12323      C0
 12324              		.section	.rodata.sums_catalogue,"a"
 12325              		.align	2
 12328              	sums_catalogue:
 12329 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 12329      4A1384C1 
 12329      20451104 
 12329      F11C4911 
 12329      8500
 12330              		.section	.rodata.test_catalogue,"a"
 12331              		.align	2
 12334              	test_catalogue:
 12335 0000 BF6FCC68 		.ascii	"\277o\314h\347/\313\333\252\356\274.\362\362\351\272"
 12335      E72FCBDB 
 12335      AAEEBC2E 
 12335      F2F2E9BA 
 12336 0010 EEDBB32C 		.ascii	"\356\333\263,4\313\274\016\330'M\242\340\276.\215B\344"
 12336      34CBBC0E 
 12336      D8274DA2 
 12336      E0BE2E8D 
 12336      42E4
 12337 0022 D03D6C5B 		.ascii	"\320=l[\030\3255\254K\"\307-\317`"
 12337      18D535AC 
 12337      4B22C72D 
 12337      CF60
 12338              		.text
 12339              	.Letext0:
ARM GAS  /tmp/ccOshYsA.s 			page 338


 12340              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 12341              		.file 3 "dmcp/dmcp.h"
 12342              		.file 4 "src/decNumber/decContext.h"
 12343              		.file 5 "src/decNumber/decNumber.h"
 12344              		.file 6 "src/decNumber/decimal64.h"
 12345              		.file 7 "src/decNumber/decimal128.h"
 12346              		.file 8 "src/xeq.h"
 12347              		.file 9 "src/data.h"
 12348              		.file 10 "src/keys.h"
 12349              		.file 11 "src/display.h"
 12350              		.file 12 "src/consts.h"
 12351              		.file 13 "src/storage.h"
 12352              		.file 14 "src/stats.h"
 12353              		.file 15 "src/catalogues.h"
 12354              		.file 16 "src/lcd.h"
 12355              		.file 17 "src/int.h"
ARM GAS  /tmp/ccOshYsA.s 			page 339


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccOshYsA.s:18     .text.check_f_key:0000000000000000 $t
     /tmp/ccOshYsA.s:26     .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccOshYsA.s:100    .text.check_f_key:0000000000000034 $d
     /tmp/ccOshYsA.s:106    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccOshYsA.s:113    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccOshYsA.s:169    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccOshYsA.s:176    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccOshYsA.s:257    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccOshYsA.s:262    .text.init_cat:0000000000000000 $t
     /tmp/ccOshYsA.s:269    .text.init_cat:0000000000000000 init_cat
     /tmp/ccOshYsA.s:592    .text.init_cat:00000000000000e4 $d
     /tmp/ccOshYsA.s:598    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccOshYsA.s:605    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccOshYsA.s:690    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccOshYsA.s:695    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccOshYsA.s:702    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccOshYsA.s:744    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccOshYsA.s:749    .text.reset_arg:0000000000000000 $t
     /tmp/ccOshYsA.s:756    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccOshYsA.s:800    .text.reset_arg:0000000000000018 $d
     /tmp/ccOshYsA.s:805    .text.arg_eval:0000000000000000 $t
     /tmp/ccOshYsA.s:812    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccOshYsA.s:933    .text.arg_eval:0000000000000074 $d
     /tmp/ccOshYsA.s:940    .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccOshYsA.s:947    .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccOshYsA.s:1005   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccOshYsA.s:1010   .text.arg_digit:0000000000000000 $t
     /tmp/ccOshYsA.s:1017   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccOshYsA.s:1254   .text.arg_digit:00000000000000d0 $d
     /tmp/ccOshYsA.s:1262   .text.intltr:0000000000000000 $t
     /tmp/ccOshYsA.s:1269   .text.intltr:0000000000000000 intltr
     /tmp/ccOshYsA.s:1331   .text.intltr:0000000000000030 $d
     /tmp/ccOshYsA.s:1337   .text.set_window:0000000000000000 $t
     /tmp/ccOshYsA.s:1344   .text.set_window:0000000000000000 set_window
     /tmp/ccOshYsA.s:1490   .text.set_window:000000000000008c $d
     /tmp/ccOshYsA.s:1497   .text.arg_storcl:0000000000000000 $t
     /tmp/ccOshYsA.s:1504   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccOshYsA.s:1620   .text.arg_storcl:0000000000000040 $d
     /tmp/ccOshYsA.s:1625   .text.process_arg:0000000000000000 $t
     /tmp/ccOshYsA.s:1632   .text.process_arg:0000000000000000 process_arg
     /tmp/ccOshYsA.s:1853   .text.process_arg:000000000000009c $d
     /tmp/ccOshYsA.s:1900   .text.process_arg:00000000000000f8 $t
     /tmp/ccOshYsA.s:1933   .text.process_arg:000000000000011e $d
     /tmp/ccOshYsA.s:2377   .text.process_arg:00000000000002b8 $d
     /tmp/ccOshYsA.s:2389   .text.process_arg:00000000000002cc $t
     /tmp/ccOshYsA.s:2762   .text.process_arg:0000000000000474 $d
     /tmp/ccOshYsA.s:2767   .text.cur_shift:0000000000000000 $t
     /tmp/ccOshYsA.s:2775   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccOshYsA.s:2803   .text.cur_shift:0000000000000010 $d
     /tmp/ccOshYsA.s:2808   .text.reset_shift:0000000000000000 $t
     /tmp/ccOshYsA.s:2816   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccOshYsA.s:2877   .text.reset_shift:0000000000000014 $d
     /tmp/ccOshYsA.s:2882   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccOshYsA.s:2890   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccOshYsA.s:2918   .text.keycode_to_row_column:0000000000000020 $d
ARM GAS  /tmp/ccOshYsA.s 			page 340


     /tmp/ccOshYsA.s:2923   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccOshYsA.s:2931   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccOshYsA.s:2989   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccOshYsA.s:2994   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccOshYsA.s:3002   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccOshYsA.s:3038   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccOshYsA.s:3044   .text.init_state:0000000000000000 $t
     /tmp/ccOshYsA.s:3052   .text.init_state:0000000000000000 init_state
     /tmp/ccOshYsA.s:3158   .text.init_state:000000000000005c $d
     /tmp/ccOshYsA.s:3164   .text.soft_init_state:0000000000000000 $t
     /tmp/ccOshYsA.s:3172   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccOshYsA.s:3267   .text.soft_init_state:0000000000000048 $d
     /tmp/ccOshYsA.s:3273   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccOshYsA.s:3281   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccOshYsA.s:3302   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccOshYsA.s:3308   .text.current_catalogue:0000000000000000 $t
     /tmp/ccOshYsA.s:3316   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccOshYsA.s:3572   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccOshYsA.s:3582   .text.process_catalogue:0000000000000000 $t
     /tmp/ccOshYsA.s:3589   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccOshYsA.s:3909   .text.process_catalogue:00000000000000fa $d
     /tmp/ccOshYsA.s:3941   .text.process_catalogue:000000000000011a $t
     /tmp/ccOshYsA.s:4409   .text.process_catalogue:00000000000002b0 $d
     /tmp/ccOshYsA.s:4423   .text.process_catalogue:00000000000002cc $t
     /tmp/ccOshYsA.s:4523   .text.process_catalogue:0000000000000324 $d
     /tmp/ccOshYsA.s:4529   .text.find_pos:0000000000000000 $t
     /tmp/ccOshYsA.s:4537   .text.find_pos:0000000000000000 find_pos
     /tmp/ccOshYsA.s:4710   .text.find_pos:0000000000000080 $d
     /tmp/ccOshYsA.s:4716   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccOshYsA.s:4724   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccOshYsA.s:4756   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccOshYsA.s:4762   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccOshYsA.s:4772   .text.process_keycode:0000000000000000 $t
     /tmp/ccOshYsA.s:4780   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccOshYsA.s:5341   .text.process_keycode:0000000000000258 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccOshYsA.s:5359   .text.process_keycode:0000000000000294 $t
     /tmp/ccOshYsA.s:5610   .text.process_keycode:00000000000003a6 $d
     /tmp/ccOshYsA.s:5630   .text.process_keycode:00000000000003cc $t
     /tmp/ccOshYsA.s:5869   .text.process_keycode:000000000000049a $d
     /tmp/ccOshYsA.s:5919   .text.process_keycode:00000000000004c8 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccOshYsA.s:5971   .text.process_keycode:0000000000000508 $t
     /tmp/ccOshYsA.s:6143   .text.process_keycode:00000000000005a0 $d
     /tmp/ccOshYsA.s:6153   .text.process_keycode:00000000000005c4 $t
     /tmp/ccOshYsA.s:6612   .text.process_keycode:0000000000000780 $d
     /tmp/ccOshYsA.s:6621   .text.process_keycode:00000000000007a4 $t
     /tmp/ccOshYsA.s:6725   .text.process_keycode:0000000000000804 $d
     /tmp/ccOshYsA.s:6755   .text.process_keycode:000000000000086c $d
     /tmp/ccOshYsA.s:6766   .text.process_keycode:0000000000000890 $t
     /tmp/ccOshYsA.s:6802   .text.process_keycode:00000000000008b8 $d
     /tmp/ccOshYsA.s:6806   .text.process_keycode:00000000000008c8 $t
     /tmp/ccOshYsA.s:7791   .text.process_keycode:0000000000000c0c $d
     /tmp/ccOshYsA.s:7814   .text.process_keycode:0000000000000c38 $t
ARM GAS  /tmp/ccOshYsA.s 			page 341


     /tmp/ccOshYsA.s:8249   .text.process_keycode:0000000000000d7c $d
     /tmp/ccOshYsA.s:8284   .text.process_keycode:0000000000000e08 $t
     /tmp/ccOshYsA.s:8557   .text.process_keycode:0000000000000ef8 $d
     /tmp/ccOshYsA.s:8577   .text.process_keycode:0000000000000f48 $t
     /tmp/ccOshYsA.s:8627   .text.process_keycode:0000000000000f74 $d
     /tmp/ccOshYsA.s:8658   .text.process_keycode:0000000000000f8c $t
     /tmp/ccOshYsA.s:8790   .text.process_keycode:0000000000000ff0 $d
     /tmp/ccOshYsA.s:8808   .text.process_keycode:0000000000001038 $t
     /tmp/ccOshYsA.s:9150   .text.process_keycode:0000000000001120 $d
     /tmp/ccOshYsA.s:9184   .text.process_keycode:00000000000011a8 $t
     /tmp/ccOshYsA.s:9452   .text.process_keycode:0000000000001284 $d
     /tmp/ccOshYsA.s:9468   .text.process_keycode:000000000000129c $t
     /tmp/ccOshYsA.s:9508   .text.process_keycode:00000000000012c0 $d
     /tmp/ccOshYsA.s:9543   .text.process_keycode:0000000000001348 $t
     /tmp/ccOshYsA.s:9998   .text.process_keycode:0000000000001484 $d
     /tmp/ccOshYsA.s:10039  .text.process_keycode:0000000000001528 $t
     /tmp/ccOshYsA.s:10223  .text.process_keycode:00000000000015e4 $d
     /tmp/ccOshYsA.s:10238  .text.process_keycode:0000000000001600 $t
     /tmp/ccOshYsA.s:10994  .text.process_keycode:00000000000018e4 $d
     /tmp/ccOshYsA.s:11006  .text.process_keycode:00000000000018f0 $t
     /tmp/ccOshYsA.s:11015  .text.process_keycode:0000000000001900 $d
     /tmp/ccOshYsA.s:11057  .text.process_keycode:00000000000019a4 $t
     /tmp/ccOshYsA.s:11531  .text.process_keycode:0000000000001b34 $d
     /tmp/ccOshYsA.s:11542  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccOshYsA.s:11550  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccOshYsA.s:11626  .text.process_keycode_with_shift:000000000000002c $d
     /tmp/ccOshYsA.s:11636  .bss.was_paused.9659:0000000000000000 $d
     /tmp/ccOshYsA.s:11640  .bss.was_paused.9659:0000000000000000 was_paused.9659
     /tmp/ccOshYsA.s:11643  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccOshYsA.s:11646  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccOshYsA.s:11649  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:11652  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccOshYsA.s:11656  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccOshYsA.s:11659  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccOshYsA.s:11662  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccOshYsA.s:11666  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccOshYsA.s:11672  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccOshYsA.s:11676  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccOshYsA.s:11682  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccOshYsA.s:11685  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccOshYsA.s:11689  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccOshYsA.s:11692  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccOshYsA.s:11695  .rodata.alphamap.9191:0000000000000000 $d
     /tmp/ccOshYsA.s:11699  .rodata.alphamap.9191:0000000000000000 alphamap.9191
     /tmp/ccOshYsA.s:11739  .rodata.amap.9182:0000000000000000 $d
     /tmp/ccOshYsA.s:11743  .rodata.amap.9182:0000000000000000 amap.9182
     /tmp/ccOshYsA.s:11757  .rodata.catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:11760  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccOshYsA.s:11769  .rodata.catalogue_sizes.9457:0000000000000000 $d
     /tmp/ccOshYsA.s:11773  .rodata.catalogue_sizes.9457:0000000000000000 catalogue_sizes.9457
     /tmp/ccOshYsA.s:11776  .rodata.catalogues.9465:0000000000000000 $d
     /tmp/ccOshYsA.s:11780  .rodata.catalogues.9465:0000000000000000 catalogues.9465
     /tmp/ccOshYsA.s:11865  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccOshYsA.s:12321  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccOshYsA.s:12279  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccOshYsA.s:11882  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccOshYsA.s:12288  .rodata.prog_catalogue:0000000000000000 prog_catalogue
ARM GAS  /tmp/ccOshYsA.s 			page 342


     /tmp/ccOshYsA.s:12300  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccOshYsA.s:12334  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccOshYsA.s:11928  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccOshYsA.s:12328  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccOshYsA.s:11921  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccOshYsA.s:11803  .rodata.cmap.9181:0000000000000000 $d
     /tmp/ccOshYsA.s:11807  .rodata.cmap.9181:0000000000000000 cmap.9181
     /tmp/ccOshYsA.s:11833  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:11837  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccOshYsA.s:11844  .rodata.conv_mapping.9504:0000000000000000 $d
     /tmp/ccOshYsA.s:11848  .rodata.conv_mapping.9504:0000000000000000 conv_mapping.9504
     /tmp/ccOshYsA.s:11862  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:11869  .rodata.disp.9319:0000000000000000 $d
     /tmp/ccOshYsA.s:11873  .rodata.disp.9319:0000000000000000 disp.9319
     /tmp/ccOshYsA.s:11879  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:11889  .rodata.linear_key_map.9152:0000000000000000 $d
     /tmp/ccOshYsA.s:11893  .rodata.linear_key_map.9152:0000000000000000 linear_key_map.9152
     /tmp/ccOshYsA.s:11899  .rodata.linear_key_map.9156:0000000000000000 $d
     /tmp/ccOshYsA.s:11903  .rodata.linear_key_map.9156:0000000000000000 linear_key_map.9156
     /tmp/ccOshYsA.s:11909  .rodata.map.9168:0000000000000000 $d
     /tmp/ccOshYsA.s:11913  .rodata.map.9168:0000000000000000 map.9168
     /tmp/ccOshYsA.s:11918  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:11925  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:11934  .rodata.op_map.9235:0000000000000000 $d
     /tmp/ccOshYsA.s:11938  .rodata.op_map.9235:0000000000000000 op_map.9235
     /tmp/ccOshYsA.s:11975  .rodata.op_map.9258:0000000000000000 $d
     /tmp/ccOshYsA.s:11979  .rodata.op_map.9258:0000000000000000 op_map.9258
     /tmp/ccOshYsA.s:12051  .rodata.op_map.9281:0000000000000000 $d
     /tmp/ccOshYsA.s:12055  .rodata.op_map.9281:0000000000000000 op_map.9281
     /tmp/ccOshYsA.s:12092  .rodata.op_map.9291:0000000000000000 $d
     /tmp/ccOshYsA.s:12096  .rodata.op_map.9291:0000000000000000 op_map.9291
     /tmp/ccOshYsA.s:12238  .rodata.op_map.9303:0000000000000000 $d
     /tmp/ccOshYsA.s:12242  .rodata.op_map.9303:0000000000000000 op_map.9303
     /tmp/ccOshYsA.s:12247  .rodata.op_map.9318:0000000000000000 $d
     /tmp/ccOshYsA.s:12251  .rodata.op_map.9318:0000000000000000 op_map.9318
     /tmp/ccOshYsA.s:12259  .rodata.op_map2.9259:0000000000000000 $d
     /tmp/ccOshYsA.s:12263  .rodata.op_map2.9259:0000000000000000 op_map2.9259
     /tmp/ccOshYsA.s:12269  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccOshYsA.s:12273  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccOshYsA.s:12276  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:12285  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:12297  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccOshYsA.s:12311  .rodata.smap.9183:0000000000000000 $d
     /tmp/ccOshYsA.s:12315  .rodata.smap.9183:0000000000000000 smap.9183
     /tmp/ccOshYsA.s:12318  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:12325  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:12331  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccOshYsA.s:1937   .text.process_arg:0000000000000121 $d
     /tmp/ccOshYsA.s:1937   .text.process_arg:0000000000000122 $t

UNDEFINED SYMBOLS
find_label_from
StateWhileOn
PersistentRam
getprog
do_inc
PcWrapped
ARM GAS  /tmp/ccOshYsA.s 			page 343


process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
num_arg_digits
local_regs_rarg
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
finish_display
start_pause
clr_dot
xeq_xrom
set_running_off
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
is_key_pressed
xeq_sst_bst
prt
scopy_char
TraceBuffer
set_menu
display_current_menu
delprog
message
stoprog
clpall
clrprog
reset
clrall
set_pc
find_char
set_last_menu
sizeLIB
find_user_pc
cmdgtocommon
global_regs
ARM GAS  /tmp/ccOshYsA.s 			page 344


local_regs
alen

ARM GAS  /tmp/ccwxoOej.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccwxoOej.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifdef INFRARED
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/ccwxoOej.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/ccwxoOej.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/ccwxoOej.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/ccwxoOej.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/ccwxoOej.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccwxoOej.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  '!',  0041, 0000, '?',  '!',  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0006, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/ccwxoOej.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/ccwxoOej.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/ccwxoOej.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 638:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 639:src/keys.c    **** #endif							//JM5
 640:src/keys.c    **** 
 641:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 642:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 643:src/keys.c    **** #endif							//JM5
 644:src/keys.c    **** 
 645:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 646:src/keys.c    **** 	UState.show_y = 1;
 647:src/keys.c    **** #endif
 648:src/keys.c    **** 
 649:src/keys.c    **** #ifdef DEFAULT_TO_J
 650:src/keys.c    **** 	SET_CPX_J;
 651:src/keys.c    **** #endif
 652:src/keys.c    **** 
 653:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 654:src/keys.c    **** 	cpx_nop(OP_CYES);
 655:src/keys.c    **** #endif
 656:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 13


 657:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 658:src/keys.c    **** 	cpx_nop(OP_CYES);
 659:src/keys.c    **** 	cpx_nop(OP_C_ON);
 660:src/keys.c    **** #endif
 661:src/keys.c    **** 
 662:src/keys.c    **** #ifdef ENTRY_RPN
 663:src/keys.c    **** 
 664:src/keys.c    **** #ifdef DEFAULT_TO_ENTRY_RPN
 665:src/keys.c    **** 	ENTRY_RPN_ON;
 666:src/keys.c    **** #else
 667:src/keys.c    **** 	ENTRY_RPN_OFF;
 668:src/keys.c    **** #endif
 669:src/keys.c    **** 
 670:src/keys.c    **** #endif
 671:src/keys.c    **** 	
 672:src/keys.c    **** #endif
 673:src/keys.c    **** 
 674:src/keys.c    **** 	State2.test = TST_NONE;
 675:src/keys.c    **** 	State2.runmode = 1;
 676:src/keys.c    **** 	update_program_bounds(1);
 677:src/keys.c    **** 	set_lift();
 678:src/keys.c    **** 
 679:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 680:src/keys.c    **** 	// but must not be cleared.
 681:src/keys.c    **** 	Voltage = v;
 682:src/keys.c    **** 	LastKey = k;
 683:src/keys.c    **** #ifndef REALBUILD
 684:src/keys.c    **** 	State2.trace = b;
 685:src/keys.c    **** 	State2.flags = a;
 686:src/keys.c    **** #else
 687:src/keys.c    **** 	TestFlag = t;
 688:src/keys.c    **** #endif
 689:src/keys.c    **** 	ShowRegister = regX_idx;
 690:src/keys.c    **** }
 691:src/keys.c    **** 
 692:src/keys.c    **** void soft_init_state(void) {
 693:src/keys.c    **** 	int soft;
 694:src/keys.c    **** 	unsigned int runmode;
 695:src/keys.c    **** 	unsigned int alphas;
 696:src/keys.c    **** 
 697:src/keys.c    **** 	if (CmdLineLength) {
 698:src/keys.c    **** 		CmdLineLength = 0;
 699:src/keys.c    **** 		CmdLineEex = 0;
 700:src/keys.c    **** 		CmdLineDot = 0;
 701:src/keys.c    **** 		return;
 702:src/keys.c    **** 	}
 703:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 704:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 705:src/keys.c    **** 	runmode = State2.runmode;
 706:src/keys.c    **** 	alphas = State2.alphas;
 707:src/keys.c    **** 	init_state();
 708:src/keys.c    **** 	if (soft) {
 709:src/keys.c    **** 		State2.runmode = runmode;
 710:src/keys.c    **** 		State2.alphas = alphas;
 711:src/keys.c    **** 	}
 712:src/keys.c    **** }
 713:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 14


 714:src/keys.c    **** static int check_confirm(int op) {
 715:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 716:src/keys.c    **** 		const int nilop = argKIND(op);
 717:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 718:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 719:src/keys.c    **** 			return STATE_UNFINISHED;
 720:src/keys.c    **** 		}
 721:src/keys.c    **** #ifndef DM42		
 722:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 723:src/keys.c    **** #endif
 724:src/keys.c    **** #ifdef DM42
 725:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 726:src/keys.c    **** #endif
 727:src/keys.c    **** #ifdef INFRARED
 728:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 729:src/keys.c    **** #endif
 730:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 731:src/keys.c    **** //			|| nilop == OP_STOPWATCH // so it can go in a user menu
 732:src/keys.c    **** #endif
 733:src/keys.c    **** 		) {
 734:src/keys.c    **** 			// These commands are not programmable
 735:src/keys.c    **** 			NonProgrammable = 1;
 736:src/keys.c    **** 		}
 737:src/keys.c    **** 	}
 738:src/keys.c    **** 	return op;
 739:src/keys.c    **** }
 740:src/keys.c    **** 
 741:src/keys.c    **** static void set_smode(const enum single_disp d) {
 742:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 743:src/keys.c    **** }
 744:src/keys.c    **** 
 745:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 746:src/keys.c    **** 	const int code = 100 + n;
 747:src/keys.c    **** 	unsigned int pc = state_pc();
 748:src/keys.c    **** 
 749:src/keys.c    **** 	if (State2.runmode) {
 750:src/keys.c    **** 		if (isXROM(pc))
 751:src/keys.c    **** 			pc = 1;
 752:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 753:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 754:src/keys.c    **** 	}
 755:src/keys.c    **** 	return dflt;
 756:src/keys.c    **** }
 757:src/keys.c    **** 
 758:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 759:src/keys.c    ****  * as digits.
 760:src/keys.c    ****  */
 761:src/keys.c    **** static int intltr(int d) {
 762:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 763:src/keys.c    **** }
 764:src/keys.c    **** 
 765:src/keys.c    **** /*
 766:src/keys.c    ****  *  Process a key code in the unshifted mode.
 767:src/keys.c    ****  */
 768:src/keys.c    **** static int process_normal(const keycode c)
 769:src/keys.c    **** {
 770:src/keys.c    **** 	static const unsigned short int op_map[] = {
ARM GAS  /tmp/ccwxoOej.s 			page 15


 771:src/keys.c    **** 		// Row 1
 772:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 773:src/keys.c    **** 		OP_MON  | OP_RECIP,
 774:src/keys.c    **** 		OP_DYA  | OP_POW,
 775:src/keys.c    **** 		OP_MON  | OP_SQRT,
 776:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 777:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 778:src/keys.c    **** 		// Row 2
 779:src/keys.c    **** 		RARG_STO,
 780:src/keys.c    **** 		RARG_RCL,
 781:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 782:src/keys.c    **** 		// Row 3
 783:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 784:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 785:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 786:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 787:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 788:src/keys.c    **** 		// Row 4
 789:src/keys.c    **** 		RARG_XEQ,
 790:src/keys.c    **** 		OP_SPEC | OP_7,
 791:src/keys.c    **** 		OP_SPEC | OP_8,
 792:src/keys.c    **** 		OP_SPEC | OP_9,
 793:src/keys.c    **** 		OP_DYA  | OP_DIV,
 794:src/keys.c    **** 		// Row 5
 795:src/keys.c    **** 		STATE_BST,
 796:src/keys.c    **** 		OP_SPEC | OP_4,
 797:src/keys.c    **** 		OP_SPEC | OP_5,
 798:src/keys.c    **** 		OP_SPEC | OP_6,
 799:src/keys.c    **** 		OP_DYA  | OP_MUL,
 800:src/keys.c    **** 		// Row 6
 801:src/keys.c    **** 		STATE_SST,		// SST
 802:src/keys.c    **** 		OP_SPEC | OP_1,
 803:src/keys.c    **** 		OP_SPEC | OP_2,
 804:src/keys.c    **** 		OP_SPEC | OP_3,
 805:src/keys.c    **** 		OP_DYA  | OP_SUB,
 806:src/keys.c    **** 		// Row 7
 807:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 808:src/keys.c    **** 		OP_SPEC | OP_0,
 809:src/keys.c    **** 		OP_SPEC | OP_DOT,
 810:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 811:src/keys.c    **** 		OP_DYA  | OP_ADD,
 812:src/keys.c    **** #ifdef DM42
 813:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 814:src/keys.c    **** #endif
 815:src/keys.c    **** 	};
 816:src/keys.c    **** 
 817:src/keys.c    **** 	int lc = keycode_to_linear(c);
 818:src/keys.c    **** 	int op = op_map[lc];
 819:src/keys.c    **** 	
 820:src/keys.c    **** 	// The switch handles all the special cases
 821:src/keys.c    **** #ifdef DM42
 822:src/keys.c    **** 	int op_int;
 823:src/keys.c    **** 	if (UState.intm) {
 824:src/keys.c    **** 	  switch (c) {
 825:src/keys.c    **** 	  case K00:
 826:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 827:src/keys.c    **** 	    if (intltr(10)) {
ARM GAS  /tmp/ccwxoOej.s 			page 16


 828:src/keys.c    **** 	      return op;
 829:src/keys.c    **** 	    }
 830:src/keys.c    **** 	    else {
 831:src/keys.c    **** 	      return check_f_key(0, op);
 832:src/keys.c    **** 	    }
 833:src/keys.c    **** 	  case K01:
 834:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 835:src/keys.c    **** 	    if (intltr(11)) {
 836:src/keys.c    **** 	      return op;
 837:src/keys.c    **** 	    }
 838:src/keys.c    **** 	    else {
 839:src/keys.c    **** 	      return check_f_key(1, op);
 840:src/keys.c    **** 	    }
 841:src/keys.c    **** 	  case K03:
 842:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 843:src/keys.c    **** 	    if (intltr(12)) {
 844:src/keys.c    **** 	      return op_int;
 845:src/keys.c    **** 	    }
 846:src/keys.c    **** 	    else {
 847:src/keys.c    **** 	      return check_f_key(2, op);
 848:src/keys.c    **** 	    }
 849:src/keys.c    **** 	  case K30:
 850:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 851:src/keys.c    **** 	    if (intltr(15)) {
 852:src/keys.c    **** 	      return op_int;
 853:src/keys.c    **** 	    }
 854:src/keys.c    **** 	  default:;
 855:src/keys.c    **** 	  }
 856:src/keys.c    **** 	}
 857:src/keys.c    **** #endif  
 858:src/keys.c    **** 
 859:src/keys.c    **** 	switch (c) {
 860:src/keys.c    **** #ifdef DM42
 861:src/keys.c    **** 	case K00:
 862:src/keys.c    **** 		return check_f_key(0, op);
 863:src/keys.c    **** 	case K01:
 864:src/keys.c    **** 		return check_f_key(1, op);
 865:src/keys.c    **** 	case K03:
 866:src/keys.c    **** 		return check_f_key(2, op);
 867:src/keys.c    **** #else
 868:src/keys.c    **** 	case K00:
 869:src/keys.c    **** 	case K01:
 870:src/keys.c    **** 		if (UState.intm)
 871:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 872:src/keys.c    **** 	case K02:
 873:src/keys.c    **** 	case K03:
 874:src/keys.c    **** 		if (intltr(lc + 10)) {
 875:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 876:src/keys.c    **** 			return op;
 877:src/keys.c    **** 		}
 878:src/keys.c    **** 		return check_f_key(lc, op);
 879:src/keys.c    **** #endif		
 880:src/keys.c    **** 	case K_ARROW:
 881:src/keys.c    **** #ifndef DM42
 882:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 883:src/keys.c    **** 		if (intltr(14))
 884:src/keys.c    **** 			return op;
ARM GAS  /tmp/ccwxoOej.s 			page 17


 885:src/keys.c    **** #else
 886:src/keys.c    **** 		if (UState.intm)
 887:src/keys.c    **** 			return op;
 888:src/keys.c    **** #endif
 889:src/keys.c    **** #endif		
 890:src/keys.c    **** 		if (is_bad_cmdline())
 891:src/keys.c    **** 			return STATE_UNFINISHED;
 892:src/keys.c    **** 		process_cmdline_set_lift();
 893:src/keys.c    **** 		State2.arrow = 1;
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 		set_menu (M_Arrow); // arrow menu
 896:src/keys.c    **** 		display_current_menu ();
 897:src/keys.c    **** 		lcd_refresh ();
 898:src/keys.c    **** #else
 899:src/keys.c    **** 		set_shift(SHIFT_G);
 900:src/keys.c    **** #endif
 901:src/keys.c    **** 		break;
 902:src/keys.c    **** 
 903:src/keys.c    **** 	case K_CMPLX:
 904:src/keys.c    **** #ifdef DM42
 905:src/keys.c    **** 	  if (UState.intm)
 906:src/keys.c    **** 	    break; // return nothing
 907:src/keys.c    **** 	  State2.cmplx = 1;
 908:src/keys.c    **** #else
 909:src/keys.c    **** 	  if (UState.intm)
 910:src/keys.c    **** 	    return op;
 911:src/keys.c    **** 	  State2.cmplx = 1;
 912:src/keys.c    **** #endif
 913:src/keys.c    **** 	  break;
 914:src/keys.c    **** 
 915:src/keys.c    **** 	case K24:				// <-
 916:src/keys.c    **** 		if (State2.disp_temp)
 917:src/keys.c    **** 			return STATE_UNFINISHED;
 918:src/keys.c    **** 		if (State2.runmode)
 919:src/keys.c    **** 			return op;
 920:src/keys.c    **** 		return STATE_BACKSPACE;
 921:src/keys.c    **** 
 922:src/keys.c    **** 	case K10:				// STO
 923:src/keys.c    **** 	case K11:				// RCL
 924:src/keys.c    **** 	case K30:				// XEQ
 925:src/keys.c    **** 		init_arg((enum rarg)op);
 926:src/keys.c    **** 		break;
 927:src/keys.c    **** 
 928:src/keys.c    **** 	default:
 929:src/keys.c    **** 		return op;			// Keys handled by table
 930:src/keys.c    **** 	}
 931:src/keys.c    **** 	return STATE_UNFINISHED;
 932:src/keys.c    **** }
 933:src/keys.c    **** 
 934:src/keys.c    **** 
 935:src/keys.c    **** /*
 936:src/keys.c    ****  *  Process a key code after f or g shift
 937:src/keys.c    ****  */
 938:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 939:src/keys.c    **** 
 940:src/keys.c    **** #define NO_INT 0xf000
 941:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
ARM GAS  /tmp/ccwxoOej.s 			page 18


 942:src/keys.c    **** 		// Row 1
 943:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 944:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 945:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 946:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 947:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 948:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 949:src/keys.c    **** 		// Row 2
 950:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 951:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 952:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 953:src/keys.c    **** 		// Row 3
 954:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 955:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 956:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 957:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 958:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 959:src/keys.c    **** 		// Row 4
 960:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 961:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 962:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 963:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 964:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 965:src/keys.c    **** 		// Row 5
 966:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 967:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 968:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 969:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 970:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 971:src/keys.c    **** 		// Row 6
 972:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 973:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 974:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 975:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 976:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 977:src/keys.c    **** 		// Row 7
 978:src/keys.c    **** #ifdef INFRARED
 979:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 980:src/keys.c    **** #else
 981:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 982:src/keys.c    **** #endif
 983:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 984:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 985:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 986:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 987:src/keys.c    **** #ifdef DM42
 988:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 989:src/keys.c    **** #endif
 990:src/keys.c    **** 	};
 991:src/keys.c    **** 
 992:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 993:src/keys.c    **** 		STATE_UNFINISHED,
 994:src/keys.c    **** 		STATE_UNFINISHED,
 995:src/keys.c    **** 		OP_DYA  | OP_POW,
 996:src/keys.c    **** 		OP_MON  | OP_SQRT
 997:src/keys.c    **** 	};
 998:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 19


 999:src/keys.c    **** 	enum shifts shift = reset_shift();
1000:src/keys.c    **** 	int lc = keycode_to_linear(c);
1001:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
1002:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
1003:src/keys.c    **** 	if (no_int)
1004:src/keys.c    **** 		op &= ~NO_INT;
1005:src/keys.c    **** 
1006:src/keys.c    **** 	switch (c) {
1007:src/keys.c    **** 	case K00:
1008:src/keys.c    **** 	  if (! UState.intm) {
1009:src/keys.c    **** 	    //	    print_debug(100,0);
1010:src/keys.c    **** 	    State2.hyp = 1;
1011:src/keys.c    **** 	    State2.dot = op;
1012:src/keys.c    **** 	    // State2.cmplx = 0;
1013:src/keys.c    **** 	    return STATE_UNFINISHED;
1014:src/keys.c    **** 	  }
1015:src/keys.c    **** 	  // fall through
1016:src/keys.c    **** 	case K01:
1017:src/keys.c    **** #ifdef DM42
1018:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1019:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1020:src/keys.c    **** 	  }
1021:src/keys.c    **** 	  break;
1022:src/keys.c    **** #endif
1023:src/keys.c    **** #ifndef DM42
1024:src/keys.c    **** 	case K02:
1025:src/keys.c    **** #endif
1026:src/keys.c    **** 	case K03:
1027:src/keys.c    **** #ifdef DM42
1028:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1029:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1030:src/keys.c    **** 		}
1031:src/keys.c    **** 		break;
1032:src/keys.c    **** #else
1033:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1034:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1035:src/keys.c    **** 		}
1036:src/keys.c    **** 		break;
1037:src/keys.c    **** #endif
1038:src/keys.c    **** 	case K20:				// Alpha
1039:src/keys.c    **** 		if (shift == SHIFT_F) {
1040:src/keys.c    **** 			if (is_bad_cmdline())
1041:src/keys.c    **** 				return STATE_UNFINISHED;
1042:src/keys.c    **** 			process_cmdline_set_lift();
1043:src/keys.c    **** 			State2.alphas = 1;
1044:src/keys.c    **** #ifdef DM42
1045:src/keys.c    **** 			set_menu(M_Alpha);
1046:src/keys.c    **** 			display_current_menu();
1047:src/keys.c    **** #endif
1048:src/keys.c    **** 		}
1049:src/keys.c    **** 		break;
1050:src/keys.c    **** #ifdef DM42
1051:src/keys.c    **** 	case K31:
1052:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
1054:src/keys.c    **** 	  }
1055:src/keys.c    **** 	  break;
ARM GAS  /tmp/ccwxoOej.s 			page 20


1056:src/keys.c    **** 	case K30:
1057:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
1059:src/keys.c    **** 	  }
1060:src/keys.c    **** 	  break;
1061:src/keys.c    **** #endif
1062:src/keys.c    **** 	case K51:
1063:src/keys.c    **** 		if (is_bad_cmdline())
1064:src/keys.c    **** 			return STATE_UNFINISHED;
1065:src/keys.c    **** 		process_cmdline_set_lift();
1066:src/keys.c    **** 		State2.test = op;
1067:src/keys.c    **** 		return STATE_UNFINISHED;
1068:src/keys.c    **** 
1069:src/keys.c    **** 	case K50:
1070:src/keys.c    **** #ifndef REALBUILD
1071:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1072:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1073:src/keys.c    **** 			return STATE_UNFINISHED;
1074:src/keys.c    **** 		}
1075:src/keys.c    **** #endif
1076:src/keys.c    **** 	case K52:
1077:src/keys.c    **** 	case K53:
1078:src/keys.c    **** 	case K63:
1079:src/keys.c    **** 	case K64:
1080:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1081:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1082:src/keys.c    **** 				init_arg((enum rarg) op);
1083:src/keys.c    **** 			}
1084:src/keys.c    **** 			return STATE_UNFINISHED;
1085:src/keys.c    **** 		}
1086:src/keys.c    **** 		break;
1087:src/keys.c    **** 
1088:src/keys.c    **** 	default:
1089:src/keys.c    **** 		break;
1090:src/keys.c    **** 	}
1091:src/keys.c    **** 	if (no_int && UState.intm)
1092:src/keys.c    **** 		return STATE_UNFINISHED;
1093:src/keys.c    **** 
1094:src/keys.c    **** 	return check_confirm(op);
1095:src/keys.c    **** #undef NO_INT
1096:src/keys.c    **** }
1097:src/keys.c    **** 
1098:src/keys.c    **** /*
1099:src/keys.c    ****  *  Process a key code after h shift
1100:src/keys.c    ****  */
1101:src/keys.c    **** static int process_h_shifted(const keycode c) {
1102:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1103:src/keys.c    **** #define NO_INT   0x4000
1104:src/keys.c    **** 	static const unsigned short int op_map[] = {
1105:src/keys.c    **** 		// Row 1
1106:src/keys.c    **** 		_RARG   | RARG_STD,
1107:src/keys.c    **** 		_RARG   | RARG_FIX,
1108:src/keys.c    **** 		_RARG   | RARG_SCI,
1109:src/keys.c    **** 		_RARG   | RARG_ENG,
1110:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1111:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1112:src/keys.c    **** 		// Row 2
ARM GAS  /tmp/ccwxoOej.s 			page 21


1113:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1114:src/keys.c    **** 		_RARG   | RARG_VIEW,
1115:src/keys.c    **** 		OP_NIL  | OP_RUP,
1116:src/keys.c    **** 		// Row 3
1117:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1118:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1119:src/keys.c    **** 		OP_MON  | OP_NOT,
1120:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1121:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1122:src/keys.c    **** 		// Row 4
1123:src/keys.c    **** 		_RARG   | RARG_GTO,
1124:src/keys.c    **** 		OP_DYA  | OP_LAND,
1125:src/keys.c    **** 		OP_DYA  | OP_LOR,
1126:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1127:src/keys.c    **** 		OP_DYA  | OP_MOD,
1128:src/keys.c    **** 		// Row 5
1129:src/keys.c    **** 		OP_MON  | OP_FACT,
1130:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1131:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1132:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1133:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1134:src/keys.c    **** 		// Row 6
1135:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1136:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1137:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1138:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1139:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1140:src/keys.c    **** 		// Row 7
1141:src/keys.c    **** 		OP_NIL | OP_OFF,
1142:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1143:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1144:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1145:src/keys.c    **** #else
1146:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1147:src/keys.c    **** #endif
1148:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1149:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1150:src/keys.c    **** #ifdef DM42
1151:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1152:src/keys.c    **** #endif
1153:src/keys.c    **** 	};
1154:src/keys.c    **** 
1155:src/keys.c    **** 	int lc = keycode_to_linear(c);
1156:src/keys.c    **** 	int op = op_map[lc];
1157:src/keys.c    **** 	reset_shift();
1158:src/keys.c    **** 
1159:src/keys.c    **** 	// The switch handles all the special cases
1160:src/keys.c    **** 	switch (c) {
1161:src/keys.c    **** 	case K62:
1162:src/keys.c    **** 		if (UState.intm)
1163:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1164:src/keys.c    **** 		else
1165:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1166:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1167:src/keys.c    **** #else
1168:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1169:src/keys.c    **** #endif
ARM GAS  /tmp/ccwxoOej.s 			page 22


1170:src/keys.c    **** 		break;
1171:src/keys.c    **** 
1172:src/keys.c    **** 	case K63:					// Program<->Run mode
1173:src/keys.c    **** 		if (is_bad_cmdline())
1174:src/keys.c    **** 			return STATE_UNFINISHED;
1175:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1176:src/keys.c    **** 		process_cmdline_set_lift();
1177:src/keys.c    **** 		update_program_bounds(1);
1178:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1179:src/keys.c    **** 			set_pc(0);
1180:src/keys.c    **** 		break;
1181:src/keys.c    **** 
1182:src/keys.c    **** 	default:
1183:src/keys.c    **** 		break;
1184:src/keys.c    **** 	}
1185:src/keys.c    **** 
1186:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1187:src/keys.c    **** 		if (op & _RARG) {
1188:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1189:src/keys.c    **** 			op = STATE_UNFINISHED;
1190:src/keys.c    **** 		}
1191:src/keys.c    **** 	}
1192:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1193:src/keys.c    **** #undef _RARG
1194:src/keys.c    **** #undef NO_INT
1195:src/keys.c    **** }
1196:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1197:src/keys.c    **** 
1198:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1199:src/keys.c    **** 
1200:src/keys.c    **** static void do_command_line ( void ) {
1201:src/keys.c    **** 	if (CmdLineLength) {
1202:src/keys.c    **** 		State2.state_lift = 0;
1203:src/keys.c    **** 		process_cmdline();
1204:src/keys.c    **** 	}
1205:src/keys.c    **** }
1206:src/keys.c    **** 
1207:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1208:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1209:src/keys.c    **** // The argument sets the lift state after entry is finished.
1210:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1211:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1212:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1213:src/keys.c    **** 
1214:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1215:src/keys.c    **** 		CLEAR_REAL;
1216:src/keys.c    **** 		do_command_line();
1217:src/keys.c    **** 	}
1218:src/keys.c    **** 	else if (IMAG_FLAG) {
1219:src/keys.c    **** 		CLEAR_IMAG;
1220:src/keys.c    **** 		do_command_line();
1221:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1222:src/keys.c    **** 	}
1223:src/keys.c    **** */
1224:src/keys.c    **** 	do_command_line();
1225:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1226:src/keys.c    **** 	CLEAR_REAL;
ARM GAS  /tmp/ccwxoOej.s 			page 23


1227:src/keys.c    **** 	CLEAR_IMAG;
1228:src/keys.c    **** 
1229:src/keys.c    **** 	State2.state_lift = lift;
1230:src/keys.c    **** 
1231:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1232:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1233:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1234:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1235:src/keys.c    **** 		//call p2r
1236:src/keys.c    **** 		update_speed(0);
1237:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1238:src/keys.c    **** #ifdef RP_PREFIX
1239:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1240:src/keys.c    **** #endif
1241:src/keys.c    **** 		SET_POLAR_READY;
1242:src/keys.c    **** 	}
1243:src/keys.c    **** }
1244:src/keys.c    **** 
1245:src/keys.c    **** static void stack_restore ( void ) { 
1246:src/keys.c    **** 	// called if number entry terminated by EXIT key
1247:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1248:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1249:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1250:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1251:src/keys.c    **** 		drop ( OP_DROPXY );
1252:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1253:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1254:src/keys.c    **** 	}
1255:src/keys.c    **** 	else { // X, Y have been overwritten
1256:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1257:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1258:src/keys.c    **** 	}
1259:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
1261:src/keys.c    **** 	CLEAR_POLAR_READY;
1262:src/keys.c    **** }
1263:src/keys.c    **** 
1264:src/keys.c    **** void stack_begin ( int zero_y ) { 
1265:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1266:src/keys.c    **** 	// zeros y if requested. 
1267:src/keys.c    **** 	CLEAR_POLAR_READY;
1268:src/keys.c    **** 	if ( State2.state_lift ){
1269:src/keys.c    **** 		SET_INIT_LIFT;
1270:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1271:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1272:src/keys.c    **** 		lift();
1273:src/keys.c    **** 		zero_X();
1274:src/keys.c    **** 		lift();
1275:src/keys.c    **** 		State2.state_lift = 0;
1276:src/keys.c    **** 	}
1277:src/keys.c    **** 	else {
1278:src/keys.c    **** 		CLEAR_INIT_LIFT;
1279:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1280:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1281:src/keys.c    **** 		zero_X();
1282:src/keys.c    **** 		if ( zero_y ) zero_Y();
1283:src/keys.c    **** 	}
ARM GAS  /tmp/ccwxoOej.s 			page 24


1284:src/keys.c    **** }
1285:src/keys.c    **** 
1286:src/keys.c    ****  static int process_c_lock ( const keycode c ) { // main function - called from process (c) functio
1287:src/keys.c    **** 
1288:src/keys.c    ****    enum shifts shift = cur_shift();
1289:src/keys.c    **** 
1290:src/keys.c    ****    // Individual keys needing special treatment
1291:src/keys.c    **** 
1292:src/keys.c    ****    if ( (c < K05) && shift == SHIFT_H ){ // display modes
1293:src/keys.c    ****      return process_h_shifted (c);
1294:src/keys.c    ****    }
1295:src/keys.c    **** 
1296:src/keys.c    **** 
1297:src/keys.c    ****    if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because oth
1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
1299:src/keys.c    ****    }
1300:src/keys.c    ****    if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, H
1301:src/keys.c    ****      return process_fg_shifted (c);
1302:src/keys.c    ****    }
1303:src/keys.c    **** 
1304:src/keys.c    ****    if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry comple
1305:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
1306:src/keys.c    ****        reset_shift();
1307:src/keys.c    ****        if ( CmdLineLength ) {
1308:src/keys.c    **** 	 State2.state_lift = 0;
1309:src/keys.c    **** 	 return OP_NIL | OP_PIB;
1310:src/keys.c    ****        }
1311:src/keys.c    ****        else {
1312:src/keys.c    **** 	 return OP_NIL | OP_PIA;
1313:src/keys.c    ****        }
1314:src/keys.c    ****      }
1315:src/keys.c    ****      else {
1316:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1317:src/keys.c    ****        const int eex_pi = 1;
1318:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1319:src/keys.c    ****        const int eex_pi = get_user_flag(regL_idx);
1320:src/keys.c    **** #else
1321:src/keys.c    ****        const int eex_pi = 0;
1322:src/keys.c    **** #endif
1323:src/keys.c    ****        if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // norma
1324:src/keys.c    **** 	 finish_cpx_entry(1);
1325:src/keys.c    **** 	 return process_cmplx(c);
1326:src/keys.c    ****        }
1327:src/keys.c    ****      }
1328:src/keys.c    ****    }
1329:src/keys.c    **** 
1330:src/keys.c    ****    if (shift != SHIFT_N) { // other shifted keys - special cases first.
1331:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
1332:src/keys.c    ****      switch (c) {
1333:src/keys.c    ****      case (K60):
1334:src/keys.c    ****        reset_shift();
1335:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1336:src/keys.c    ****      case (K21): // x<->y key
1337:src/keys.c    ****        if (shift == SHIFT_F || shift == SHIFT_G) { // exchanges real and imag parts with either shi
1338:src/keys.c    **** 	 reset_shift();
1339:src/keys.c    **** 	 CLEAR_POLAR_READY;
1340:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
ARM GAS  /tmp/ccwxoOej.s 			page 25


1341:src/keys.c    ****        }
1342:src/keys.c    ****        else if (shift == SHIFT_H) {
1343:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
1344:src/keys.c    ****        }
1345:src/keys.c    ****        break;
1346:src/keys.c    ****      case (K40): // up-arrow key
1347:src/keys.c    ****        if (shift == SHIFT_F) {
1348:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
1349:src/keys.c    ****        }
1350:src/keys.c    ****        else if (shift == SHIFT_G) {
1351:src/keys.c    **** 	 SET_POLAR_DISPLAY;
1352:src/keys.c    **** 	 CLEAR_POLAR_READY;
1353:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
1354:src/keys.c    ****        }
1355:src/keys.c    ****        else if (shift == SHIFT_H) { // ND addition on DM42 - should work on ordinary calculator too
1356:src/keys.c    **** 	 return process_cmplx (c);
1357:src/keys.c    ****        }
1358:src/keys.c    ****        break;
1359:src/keys.c    ****      case (K22): // +/- key
1360:src/keys.c    ****        reset_shift();
1361:src/keys.c    ****        if (shift == SHIFT_F ) {
1362:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
1363:src/keys.c    ****        }
1364:src/keys.c    ****        else if (shift == SHIFT_H) {
1365:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
1366:src/keys.c    ****        }
1367:src/keys.c    ****        break;
1368:src/keys.c    ****      case (K62): // IP/FP key
1369:src/keys.c    ****        reset_shift();
1370:src/keys.c    ****        if (shift == SHIFT_F) {
1371:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
1372:src/keys.c    ****        }
1373:src/keys.c    ****        else if (shift == SHIFT_G) {
1374:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
1375:src/keys.c    ****        }
1376:src/keys.c    ****        break;
1377:src/keys.c    ****      case (K44): // x (times) key
1378:src/keys.c    ****        if (shift == SHIFT_H) { // real*real + i imag*imag
1379:src/keys.c    **** 	 reset_shift();
1380:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
1381:src/keys.c    ****        }
1382:src/keys.c    ****        else {
1383:src/keys.c    **** 	 return process_cmplx(c);
1384:src/keys.c    ****        }
1385:src/keys.c    ****        break;
1386:src/keys.c    ****      case (K34): // divide key
1387:src/keys.c    ****        if (shift == SHIFT_H) { // real/real + i imag/imag
1388:src/keys.c    **** 	 reset_shift();
1389:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
1390:src/keys.c    ****        }
1391:src/keys.c    ****        else {
1392:src/keys.c    **** 	 return process_cmplx(c);
1393:src/keys.c    ****        }
1394:src/keys.c    ****        break;
1395:src/keys.c    ****      case (K24): // <- key
1396:src/keys.c    ****        if (POLAR_DISPLAY) break;
1397:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
ARM GAS  /tmp/ccwxoOej.s 			page 26


1398:src/keys.c    **** 	 zero_X ();
1399:src/keys.c    **** 	 State2.state_lift = 0;
1400:src/keys.c    **** 	 SET_REAL;
1401:src/keys.c    **** 	 stack_begin (0);
1402:src/keys.c    ****        }
1403:src/keys.c    ****        break;
1404:src/keys.c    ****      default:
1405:src/keys.c    ****        return process_cmplx(c); // for shifted keys not listed above
1406:src/keys.c    ****      }
1407:src/keys.c    ****      reset_shift(); // for the keys listed above; functions complete
1408:src/keys.c    ****      return STATE_UNFINISHED;
1409:src/keys.c    ****    }
1410:src/keys.c    **** 
1411:src/keys.c    ****    switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally n
1412:src/keys.c    ****    case (K61):
1413:src/keys.c    ****    case (K62):
1414:src/keys.c    ****    case (K51):
1415:src/keys.c    ****    case (K52):
1416:src/keys.c    ****    case (K53):
1417:src/keys.c    ****    case (K41):
1418:src/keys.c    ****    case (K42):
1419:src/keys.c    ****    case (K43):
1420:src/keys.c    ****    case (K31):
1421:src/keys.c    ****    case (K32):
1422:src/keys.c    ****    case (K33):
1423:src/keys.c    ****    case (K23): // 0.123456789EEX
1424:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1425:src/keys.c    ****        SET_REAL; // start and continuation of real entry
1426:src/keys.c    ****        stack_begin (1);
1427:src/keys.c    ****      }
1428:src/keys.c    ****      return process_normal(c);
1429:src/keys.c    ****    case (K22): // CHS
1430:src/keys.c    ****      //	case (K23): // EEX
1431:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1432:src/keys.c    ****        return process_cmplx(c);
1433:src/keys.c    ****      }
1434:src/keys.c    ****      else {
1435:src/keys.c    ****        return process_normal(c);
1436:src/keys.c    ****      }
1437:src/keys.c    ****    case (K24): // backspace
1438:src/keys.c    ****    case (K04): // arrow
1439:src/keys.c    ****    case (K_ARROW):
1440:src/keys.c    ****      return process_normal(c);
1441:src/keys.c    ****    case (K_CMPLX):
1442:src/keys.c    ****      if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1443:src/keys.c    ****        CLEAR_REAL;
1444:src/keys.c    ****        SET_IMAG;
1445:src/keys.c    ****        do_command_line();
1446:src/keys.c    ****        State2.state_lift = 0;
1447:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1448:src/keys.c    ****      }
1449:src/keys.c    ****      else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1450:src/keys.c    ****        finish_cpx_entry (1);
1451:src/keys.c    ****      }
1452:src/keys.c    ****      else { // down here we need a part that deals with CPX being pressed without a real part being
1453:src/keys.c    ****        SET_IMAG;
1454:src/keys.c    ****        stack_begin (1);
ARM GAS  /tmp/ccwxoOej.s 			page 27


1455:src/keys.c    ****      }
1456:src/keys.c    ****      return STATE_UNFINISHED;
1457:src/keys.c    ****    default:;
1458:src/keys.c    ****    }
1459:src/keys.c    ****    finish_cpx_entry(0);
1460:src/keys.c    ****    return process_cmplx(c);
1461:src/keys.c    **** 
1462:src/keys.c    ****  }
1463:src/keys.c    **** 
1464:src/keys.c    **** #endif
1465:src/keys.c    **** 
1466:src/keys.c    **** /*
1467:src/keys.c    ****  *  Process a key code after CPX
1468:src/keys.c    ****  */
1469:src/keys.c    **** static int process_cmplx(const keycode c) {
1470:src/keys.c    **** #define _RARG   0xFF00
1471:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1472:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1473:src/keys.c    **** 
1474:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1475:src/keys.c    **** 		// Row 1
1476:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1477:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1478:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1479:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1480:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1481:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1482:src/keys.c    **** 		// Row 2
1483:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1484:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1485:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1486:src/keys.c    **** 		// Row 3
1487:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1488:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1489:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1490:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1491:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1492:src/keys.c    **** 		// Row 4
1493:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1494:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1495:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1496:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1497:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1498:src/keys.c    **** 		// Row 5
1499:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1500:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1501:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1502:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1503:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1504:src/keys.c    **** 		// Row 6
1505:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1506:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1507:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1508:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1509:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1510:src/keys.c    **** 		// Row 7
1511:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
ARM GAS  /tmp/ccwxoOej.s 			page 28


1512:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1513:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1514:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1515:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1516:src/keys.c    **** #else
1517:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1518:src/keys.c    **** #endif
1519:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1520:src/keys.c    **** #ifdef DM42
1521:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1522:src/keys.c    **** #endif
1523:src/keys.c    **** 	};
1524:src/keys.c    **** 
1525:src/keys.c    **** 	enum shifts shift = reset_shift();
1526:src/keys.c    **** 	int lc = keycode_to_linear(c);
1527:src/keys.c    **** 	int op = op_map[lc][shift];
1528:src/keys.c    **** 	State2.cmplx = 0;
1529:src/keys.c    **** 
1530:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1531:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1532:src/keys.c    **** 		return STATE_UNFINISHED;
1533:src/keys.c    **** 	}
1534:src/keys.c    **** 	if (c == K00) {
1535:src/keys.c    **** 		// HYP
1536:src/keys.c    **** 		process_cmdline_set_lift();
1537:src/keys.c    **** 		//		print_debug(100,1);
1538:src/keys.c    **** 		State2.hyp = 1;
1539:src/keys.c    **** 		State2.dot = op;
1540:src/keys.c    **** 		State2.cmplx = 1;
1541:src/keys.c    **** 		return STATE_UNFINISHED;
1542:src/keys.c    **** 	}
1543:src/keys.c    **** 
1544:src/keys.c    **** 	if (shift != SHIFT_N) {
1545:src/keys.c    **** 		switch (c) {
1546:src/keys.c    **** 		case K_CMPLX:
1547:src/keys.c    **** 			set_shift(shift);
1548:src/keys.c    **** 			break;
1549:src/keys.c    **** 
1550:src/keys.c    **** 		case K51:
1551:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1552:src/keys.c    **** 				if (is_bad_cmdline())
1553:src/keys.c    **** 					return STATE_UNFINISHED;
1554:src/keys.c    **** 				process_cmdline_set_lift();
1555:src/keys.c    **** 				State2.cmplx = 1;
1556:src/keys.c    **** 				State2.test = op;
1557:src/keys.c    **** 			}
1558:src/keys.c    **** 			return STATE_UNFINISHED;
1559:src/keys.c    **** 
1560:src/keys.c    **** 		case K60:
1561:src/keys.c    **** 			init_state();
1562:src/keys.c    **** 			break;
1563:src/keys.c    **** 
1564:src/keys.c    **** 		default:
1565:src/keys.c    **** 			break;
1566:src/keys.c    **** 		}
1567:src/keys.c    **** 	}
1568:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
ARM GAS  /tmp/ccwxoOej.s 			page 29


1569:src/keys.c    **** 	return check_confirm(op);
1570:src/keys.c    **** #else
1571:src/keys.c    **** 	return op;
1572:src/keys.c    **** #endif
1573:src/keys.c    **** 
1574:src/keys.c    **** #undef _RARG
1575:src/keys.c    **** #undef CSWAPXZ
1576:src/keys.c    **** #undef CNUM
1577:src/keys.c    **** }
1578:src/keys.c    **** 
1579:src/keys.c    **** 
1580:src/keys.c    **** 
1581:src/keys.c    **** /*
1582:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1583:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1584:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1585:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1586:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1587:src/keys.c    ****  * the ON key are dealt with by our caller.
1588:src/keys.c    ****  */
1589:src/keys.c    **** static int process_hyp(const keycode c) {
1590:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1591:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1592:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1593:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1594:src/keys.c    **** 	};
1595:src/keys.c    **** 	int cmplx = State2.cmplx;
1596:src/keys.c    **** 	int f = State2.dot;
1597:src/keys.c    **** 
1598:src/keys.c    **** 	State2.hyp = 0;
1599:src/keys.c    **** 	State2.cmplx = 0;
1600:src/keys.c    **** 	State2.dot = 0;
1601:src/keys.c    **** #ifdef DM42
1602:src/keys.c    **** 	reset_shift();
1603:src/keys.c    **** #endif
1604:src/keys.c    **** 	switch ((int)c) {
1605:src/keys.c    **** 
1606:src/keys.c    **** 	case K01:
1607:src/keys.c    **** 	case K02:
1608:src/keys.c    **** 	case K03:
1609:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1610:src/keys.c    **** 
1611:src/keys.c    **** 	case K_CMPLX:
1612:src/keys.c    **** 		cmplx = ! cmplx;
1613:src/keys.c    **** 		goto stay;
1614:src/keys.c    **** 
1615:src/keys.c    **** #ifndef DM42
1616:src/keys.c    **** 	case K_F: 
1617:src/keys.c    **** 	case K_G:
1618:src/keys.c    **** 		f = (c == K_F);
1619:src/keys.c    **** 		// fall through
1620:src/keys.c    **** #else
1621:src/keys.c    **** 	case K_F:
1622:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1623:src/keys.c    **** #endif
1624:src/keys.c    **** 	stay:
1625:src/keys.c    **** 		// process_cmdline_set_lift();
ARM GAS  /tmp/ccwxoOej.s 			page 30


1626:src/keys.c    **** 	  //	  print_debug(100,2);
1627:src/keys.c    **** 	  
1628:src/keys.c    **** 	  State2.hyp = 1;
1629:src/keys.c    **** 		State2.cmplx = cmplx;
1630:src/keys.c    **** 		State2.dot = f;
1631:src/keys.c    **** 		break;
1632:src/keys.c    **** 
1633:src/keys.c    **** 	default:
1634:src/keys.c    **** 		break;
1635:src/keys.c    **** 	}
1636:src/keys.c    **** 	return STATE_UNFINISHED;
1637:src/keys.c    **** }
1638:src/keys.c    **** 
1639:src/keys.c    **** 
1640:src/keys.c    **** /*
1641:src/keys.c    ****  *  Process a key code after ->
1642:src/keys.c    ****  */
1643:src/keys.c    **** static int process_arrow(const keycode c) {
1644:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1645:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1646:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1647:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1648:src/keys.c    **** 	};
1649:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1650:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1651:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1652:src/keys.c    **** 	};
1653:src/keys.c    **** 	const int shift = reset_shift();
1654:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1655:src/keys.c    **** 
1656:src/keys.c    **** 	State2.arrow = 0;
1657:src/keys.c    **** #ifdef DM42
1658:src/keys.c    **** 	set_last_menu ();
1659:src/keys.c    **** 	display_current_menu ();
1660:src/keys.c    **** #endif
1661:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1662:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1663:src/keys.c    **** 	  if (!C_LOCK_ON) {
1664:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1665:src/keys.c    **** 	  }
1666:src/keys.c    **** 	  else {
1667:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1668:src/keys.c    **** 	  }
1669:src/keys.c    **** 	}
1670:src/keys.c    **** #endif
1671:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1672:src/keys.c    **** 	
1673:src/keys.c    **** 	if (c >= K10 && c <= K12)
1674:src/keys.c    **** 		return op_map[c - K10][f];
1675:src/keys.c    **** 
1676:src/keys.c    **** 	if (c == K22 || c == K23)
1677:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1678:src/keys.c    **** 
1679:src/keys.c    **** 	return STATE_UNFINISHED;
1680:src/keys.c    **** }
1681:src/keys.c    **** 
1682:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 31


1683:src/keys.c    **** /* Process a GTO . sequence
1684:src/keys.c    ****  */
1685:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1685 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1686 2 view .LVU1
1687:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1687 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1685 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1686 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1687 18 view .LVU5
  48 0008 B2F8E05F 		ldrh	r5, [r2, #4064]
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1686 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1687 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1686 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1685 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1688:src/keys.c    **** 
1689:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1689 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1686:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1686 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1687:src/keys.c    **** 
  63              		.loc 1 1687 2 is_stmt 1 view .LVU12
  64              		.loc 1 1689 2 view .LVU13
  65              		.loc 1 1689 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1689 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
ARM GAS  /tmp/ccwxoOej.s 			page 32


  73              		.loc 1 1689 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1690:src/keys.c    **** 		return val;
1691:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1691 2 is_stmt 1 view .LVU17
  77              		.loc 1 1691 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1691 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1691 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1691 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1691 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1692:src/keys.c    **** 		return val;
1693:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1693 2 is_stmt 1 view .LVU23
  91              		.loc 1 1693 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1694:src/keys.c    **** 	return -1;
  94              		.loc 1 1694 2 is_stmt 1 view .LVU25
1691:src/keys.c    **** 		return val;
  95              		.loc 1 1691 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1694 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1695:src/keys.c    **** }
 102              		.loc 1 1695 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1695 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
ARM GAS  /tmp/ccwxoOej.s 			page 33


 125              	.LVL6:
 126              	.LFB17:
 745:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 745 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 746:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 746 2 view .LVU31
 745:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 745 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 749:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 749 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 747:src/keys.c    **** 
 143              		.loc 1 747 2 is_stmt 1 view .LVU34
 749:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 749 2 view .LVU35
 749:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 749 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 745:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 745 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 749:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 749 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 747:src/keys.c    **** 
 151              		.loc 1 747 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 747:src/keys.c    **** 
 154              		.loc 1 747 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 747:src/keys.c    **** 
 157              		.loc 1 747 15 view .LVU41
 158 0010 B3F8E03F 		ldrh	r3, [r3, #4064]
 159              	.LVL10:
 750:src/keys.c    **** 			pc = 1;
 160              		.loc 1 750 3 is_stmt 1 view .LVU42
 750:src/keys.c    **** 			pc = 1;
 161              		.loc 1 750 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 751:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 751 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
ARM GAS  /tmp/ccwxoOej.s 			page 34


 166              		.loc 1 752 3 is_stmt 1 view .LVU45
 746:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 746 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 752 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 752 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 752 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 752 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 755:src/keys.c    **** }
 186              		.loc 1 755 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 756:src/keys.c    **** 
 188              		.loc 1 756 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 753:src/keys.c    **** 	}
 192              		.loc 1 753 4 is_stmt 1 view .LVU53
 753:src/keys.c    **** 	}
 193              		.loc 1 753 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 756:src/keys.c    **** 
 195              		.loc 1 756 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 756:src/keys.c    **** 
 199              		.loc 1 756 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
ARM GAS  /tmp/ccwxoOej.s 			page 35


 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
1696:src/keys.c    **** 
1697:src/keys.c    **** static int gtodot_fkey(int n) {
1698:src/keys.c    **** 	const int code = 100 + n;
1699:src/keys.c    **** 	unsigned int pc = state_pc();
1700:src/keys.c    **** 
1701:src/keys.c    **** 	if(isXROM(pc))
1702:src/keys.c    **** 		pc = 1;
1703:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1704:src/keys.c    **** 	if (pc > 0)
1705:src/keys.c    **** 		return pc;
1706:src/keys.c    **** 	return state_pc();
1707:src/keys.c    **** }
1708:src/keys.c    **** 
1709:src/keys.c    **** static int process_gtodot(const keycode c) {
1710:src/keys.c    **** 	int pc = -1;
1711:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1712:src/keys.c    **** 
1713:src/keys.c    **** 	if (rawpc <= 9) {
1714:src/keys.c    **** 		// Digit 0 - 9
1715:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1716:src/keys.c    **** 	}
1717:src/keys.c    **** #ifdef DM42
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1721:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1722:src/keys.c    **** #endif
1723:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1724:src/keys.c    **** 		// A - D
1725:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1726:src/keys.c    **** 		goto fin;
1727:src/keys.c    **** 	}
1728:src/keys.c    **** 	else if (c == K62) {
1729:src/keys.c    **** 		// .
1730:src/keys.c    **** 		rawpc = ProgSize;
1731:src/keys.c    **** 		goto fin;
1732:src/keys.c    **** 	}
1733:src/keys.c    **** 	else if (c == K20) {
1734:src/keys.c    **** 		// ENTER - short circuit processing
1735:src/keys.c    **** 		pc = State2.digval;
1736:src/keys.c    **** 	}
1737:src/keys.c    **** 	else if (c == K24) {
1738:src/keys.c    **** 		// backspace
1739:src/keys.c    **** 		if (State2.numdigit == 0) {
1740:src/keys.c    **** 			goto fin2;
1741:src/keys.c    **** 		} else {
1742:src/keys.c    **** 			State2.numdigit--;
1743:src/keys.c    **** 			State2.digval /= 10;
1744:src/keys.c    **** 		}
1745:src/keys.c    **** 	}
1746:src/keys.c    **** 	else if (c == K_UP) {
1747:src/keys.c    **** 		// up
1748:src/keys.c    **** 		rawpc = state_pc();
ARM GAS  /tmp/ccwxoOej.s 			page 36


1749:src/keys.c    **** 		if (rawpc == 1)
1750:src/keys.c    **** 			rawpc = 0;
1751:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1752:src/keys.c    **** 		update_program_bounds(1);
1753:src/keys.c    **** 		rawpc = ProgBegin;
1754:src/keys.c    **** 		goto fin;
1755:src/keys.c    **** 	}
1756:src/keys.c    **** 	else if (c == K_DOWN) {
1757:src/keys.c    **** 		// down
1758:src/keys.c    **** 		update_program_bounds(1);
1759:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1760:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1761:src/keys.c    **** 			rawpc = 1;
1762:src/keys.c    **** 		goto fin;
1763:src/keys.c    **** 	}
1764:src/keys.c    **** 	if (pc >= 0) {
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
1766:src/keys.c    **** fin:		set_pc(rawpc);
1767:src/keys.c    **** fin2:		State2.gtodot = 0;
1768:src/keys.c    **** 		State2.digval = 0;
1769:src/keys.c    **** 		State2.numdigit = 0;
1770:src/keys.c    **** 	}
1771:src/keys.c    **** 	return STATE_UNFINISHED;
1772:src/keys.c    **** }
1773:src/keys.c    **** 
1774:src/keys.c    **** 
1775:src/keys.c    **** /* Process a keystroke in alpha mode
1776:src/keys.c    ****  */
1777:src/keys.c    **** static int process_alpha(const keycode c) {
1778:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1779:src/keys.c    ****         int op = STATE_UNFINISHED;
1780:src/keys.c    **** 	const enum shifts shift = reset_shift();
1781:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1782:src/keys.c    **** 	State2.alpha_pos = 0;
1783:src/keys.c    **** 
1784:src/keys.c    **** 	switch (c) {
1785:src/keys.c    **** 	case K10:	// STO
1786:src/keys.c    **** 		if (shift == SHIFT_F) {
1787:src/keys.c    **** 			init_arg(RARG_ASTO);
1788:src/keys.c    **** 			return STATE_UNFINISHED;
1789:src/keys.c    **** 		}
1790:src/keys.c    **** 		break;
1791:src/keys.c    **** 
1792:src/keys.c    **** 	case K11:	// RCL - maybe view
1793:src/keys.c    **** 		if (shift == SHIFT_F) {
1794:src/keys.c    **** 			init_arg(RARG_ARCL);
1795:src/keys.c    **** 			return STATE_UNFINISHED;
1796:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1797:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1798:src/keys.c    **** 			return STATE_UNFINISHED;
1799:src/keys.c    **** 		}
1800:src/keys.c    **** 		break;
1801:src/keys.c    **** 
1802:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1803:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1804:src/keys.c    **** 			break;
1805:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
ARM GAS  /tmp/ccwxoOej.s 			page 37


1806:src/keys.c    **** 			State2.multi = 1;
1807:src/keys.c    **** 			State2.numdigit = 0;
1808:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1809:src/keys.c    **** 			return STATE_UNFINISHED;
1810:src/keys.c    **** 		}
1811:src/keys.c    **** 		State2.alphas = 0;
1812:src/keys.c    **** 		State2.alphashift = 0;
1813:src/keys.c    **** #ifdef DM42
1814:src/keys.c    **** 		set_menu(M_Last);
1815:src/keys.c    **** 		display_current_menu();
1816:src/keys.c    **** #endif
1817:src/keys.c    **** 		return op;
1818:src/keys.c    **** 
1819:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1820:src/keys.c    **** 		if (shift == SHIFT_N)
1821:src/keys.c    **** 			return STATE_BACKSPACE;
1822:src/keys.c    **** 		if (shift == SHIFT_H)
1823:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1824:src/keys.c    **** 		break;
1825:src/keys.c    **** 
1826:src/keys.c    **** 	case K_UP:
1827:src/keys.c    **** 	  if (shift == SHIFT_N) {
1828:src/keys.c    **** 	    if ( State2.runmode ) {
1829:src/keys.c    **** 	      // Alpha scroll left
1830:src/keys.c    **** #ifdef DM42
1831:src/keys.c    **** 	      /* 
1832:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1833:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1834:src/keys.c    **** 	       */
1835:src/keys.c    **** #ifdef BIGGER_DISPLAY
1836:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1837:src/keys.c    **** 		alpha_pos += 1;
1838:src/keys.c    **** 	      }
1839:src/keys.c    **** #else
1840:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1841:src/keys.c    **** 		alpha_pos += 1;
1842:src/keys.c    **** 	      }
1843:src/keys.c    **** #endif
1844:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1845:src/keys.c    **** #else
1846:src/keys.c    **** 	      int n = alpha_pos + 1;
1847:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1848:src/keys.c    **** #endif
1849:src/keys.c    **** 	      return STATE_UNFINISHED;
1850:src/keys.c    **** 	    }
1851:src/keys.c    **** 	    return STATE_BST;
1852:src/keys.c    **** 	  }
1853:src/keys.c    **** 	  break;
1854:src/keys.c    **** 
1855:src/keys.c    **** 	case K_DOWN:
1856:src/keys.c    **** 	  if (shift == SHIFT_N) {
1857:src/keys.c    **** 	    if ( State2.runmode ) {
1858:src/keys.c    **** 	      // Alpha scroll right
1859:src/keys.c    **** 	      if (alpha_pos > 0)
1860:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1861:src/keys.c    **** 	      return STATE_UNFINISHED;
1862:src/keys.c    **** 	    }
ARM GAS  /tmp/ccwxoOej.s 			page 38


1863:src/keys.c    **** 	    return STATE_SST;
1864:src/keys.c    **** 	  }
1865:src/keys.c    **** 	  break;
1866:src/keys.c    **** 
1867:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1868:src/keys.c    **** 		if (shift == SHIFT_F)
1869:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
1871:src/keys.c    **** 			return OP_NIL | OP_OFF;
1872:src/keys.c    **** 		else if (shift == SHIFT_N) {
1873:src/keys.c    **** #ifdef DM42
1874:src/keys.c    **** 		  set_menu(M_Last);
1875:src/keys.c    **** 		  display_current_menu();
1876:src/keys.c    **** #endif
1877:src/keys.c    **** 		  init_state();
1878:src/keys.c    **** 		}
1879:src/keys.c    **** 		return STATE_UNFINISHED;
1880:src/keys.c    **** 
1881:src/keys.c    **** 	case K63:
1882:src/keys.c    **** 		if (shift == SHIFT_F)
1883:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1884:src/keys.c    **** 		break;
1885:src/keys.c    **** 
1886:src/keys.c    **** 	default:
1887:src/keys.c    **** 		break;
1888:src/keys.c    **** 	}
1889:src/keys.c    **** 
1890:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1891:src/keys.c    **** 	if (ch == 0)
1892:src/keys.c    **** 		return STATE_UNFINISHED;
1893:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1894:src/keys.c    **** }
1895:src/keys.c    **** 
1896:src/keys.c    **** /*
1897:src/keys.c    ****  *  Code to handle all commands with arguments
1898:src/keys.c    ****  */
1899:src/keys.c    **** static void reset_arg(void) {
1900:src/keys.c    **** 	init_arg((enum rarg) 0);
1901:src/keys.c    **** 	State2.rarg = 0;
1902:src/keys.c    **** }
1903:src/keys.c    **** 
1904:src/keys.c    ****  static int arg_eval(unsigned int val) {
1905:src/keys.c    ****    const unsigned int base = CmdBase;
1906:src/keys.c    ****    int r = RARG(base, val 
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1908:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1909:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1910:src/keys.c    **** 
1911:src/keys.c    ****    if (! State2.ind) {
1912:src/keys.c    ****      /*
1913:src/keys.c    ****       *  Central argument checking for some commands
1914:src/keys.c    ****       */
1915:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1916:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1917:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1918:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1919:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
ARM GAS  /tmp/ccwxoOej.s 			page 39


1920:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1921:src/keys.c    ****        if ( val == 0 )
1922:src/keys.c    **** 	 return STATE_UNFINISHED;
1923:src/keys.c    ****        r = RARG(base, val);
1924:src/keys.c    ****      }
1925:src/keys.c    **** #endif
1926:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1927:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1928:src/keys.c    ****        if (C_LOCKED) {
1929:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1930:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1931:src/keys.c    ****        }
1932:src/keys.c    ****        else {
1933:src/keys.c    **** 	 return STATE_UNFINISHED;
1934:src/keys.c    ****        }
1935:src/keys.c    ****      }
1936:src/keys.c    **** #else
1937:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1938:src/keys.c    ****        // Disallow odd complex register > 98
1939:src/keys.c    ****        return STATE_UNFINISHED;
1940:src/keys.c    **** #endif
1941:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1942:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1943:src/keys.c    ****        return STATE_UNFINISHED;
1944:src/keys.c    ****    }
1945:src/keys.c    ****    // Build op-code
1946:src/keys.c    ****    reset_arg();
1947:src/keys.c    ****    return r;
1948:src/keys.c    ****  }
1949:src/keys.c    **** 
1950:src/keys.c    **** static int arg_digit(int n) {
1951:src/keys.c    **** 	int lim;
1952:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1953:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1954:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1955:src/keys.c    **** #else
1956:src/keys.c    **** 	const unsigned int base = CmdBase;
1957:src/keys.c    **** #endif
1958:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1959:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1960:src/keys.c    **** 	
1961:src/keys.c    **** 	if (State2.local) {
1962:src/keys.c    **** 		// Handle local registers and flags
1963:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1964:src/keys.c    **** 		if (State2.runmode) {
1965:src/keys.c    **** 			if (LocalRegs == 0)
1966:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1967:src/keys.c    **** 			if (is_reg) {
1968:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1969:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1970:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1971:src/keys.c    **** 			}
1972:src/keys.c    **** 		}
1973:src/keys.c    **** 	}
1974:src/keys.c    **** 	else if (is_reg)						// normal register
1975:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1976:src/keys.c    **** 	else {
ARM GAS  /tmp/ccwxoOej.s 			page 40


1977:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1978:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1979:src/keys.c    **** 			lim = RARG_IND - 1;
1980:src/keys.c    **** 	}
1981:src/keys.c    **** 	if ((int) val > lim)
1982:src/keys.c    **** 		return STATE_UNFINISHED;
1983:src/keys.c    **** 
1984:src/keys.c    **** 	State2.digval = val;
1985:src/keys.c    **** 	++State2.numdigit;
1986:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1987:src/keys.c    **** 		int result = arg_eval(val);
1988:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1989:src/keys.c    **** 			--State2.numdigit;
1990:src/keys.c    **** 			State2.digval /= 10;
1991:src/keys.c    **** 		}
1992:src/keys.c    **** 		return result;
1993:src/keys.c    **** 	}
1994:src/keys.c    **** 	return STATE_UNFINISHED;
1995:src/keys.c    **** }
1996:src/keys.c    **** 
1997:src/keys.c    **** static int arg_fkey(int n) {
1998:src/keys.c    **** 	const unsigned int b = CmdBase;
1999:src/keys.c    **** 
2000:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
2001:src/keys.c    **** 	{
2002:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
2003:src/keys.c    **** 			return STATE_UNFINISHED;
2004:src/keys.c    **** 		if (argcmds[b].lim < 100)
2005:src/keys.c    **** 			return STATE_UNFINISHED;
2006:src/keys.c    **** 		return arg_eval(n + 100);
2007:src/keys.c    **** 	}
2008:src/keys.c    **** 	return STATE_UNFINISHED;
2009:src/keys.c    **** }
2010:src/keys.c    **** 
2011:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2012:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2013:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2014:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2015:src/keys.c    **** #else
2016:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2017:src/keys.c    **** #endif
2018:src/keys.c    **** }
2019:src/keys.c    **** 
2020:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2021:src/keys.c    **** 	unsigned int b = CmdBase;
2022:src/keys.c    **** 
2023:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2024:src/keys.c    **** 		CmdBase += n;
2025:src/keys.c    **** 		return 1;
2026:src/keys.c    **** 	}
2027:src/keys.c    **** 	/* And we can turn off the operation too */
2028:src/keys.c    **** 	if (b >= n) {
2029:src/keys.c    **** 		b -= n;
2030:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2031:src/keys.c    **** 			CmdBase = b;
2032:src/keys.c    **** 			return 1;
2033:src/keys.c    **** 		}
ARM GAS  /tmp/ccwxoOej.s 			page 41


2034:src/keys.c    **** 	}
2035:src/keys.c    **** 	return 0;
2036:src/keys.c    **** }
2037:src/keys.c    **** 
2038:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2039:src/keys.c    **** 
2040:src/keys.c    **** 	if (State2.numdigit == 0) {
2041:src/keys.c    **** 		// Only valid at beginning of entry
2042:src/keys.c    **** 		if (State2.dot || State2.local) {
2043:src/keys.c    **** 			// '..' or ENTER '.' = X
2044:src/keys.c    **** 			State2.local = 0;
2045:src/keys.c    **** 			return arg_eval(regX_idx);
2046:src/keys.c    **** 		}
2047:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2048:src/keys.c    **** 			// local register or flag select
2049:src/keys.c    **** 			State2.local = 1;
2050:src/keys.c    **** 		}
2051:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2052:src/keys.c    **** 			// Special GTO . sequence
2053:src/keys.c    **** 			if (! State2.ind) {
2054:src/keys.c    **** 				State2.gtodot = 1;
2055:src/keys.c    **** 				reset_arg();
2056:src/keys.c    **** 			}
2057:src/keys.c    **** 		}
2058:src/keys.c    **** 	}
2059:src/keys.c    **** 	return STATE_UNFINISHED;
2060:src/keys.c    **** }
2061:src/keys.c    **** 
2062:src/keys.c    **** static int process_arg_shuffle(int r) {
2063:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2064:src/keys.c    **** 	if (State2.numdigit < 4)
2065:src/keys.c    **** 		return STATE_UNFINISHED;
2066:src/keys.c    **** 	return arg_eval(State2.digval);
2067:src/keys.c    **** }
2068:src/keys.c    **** 
2069:src/keys.c    **** 
2070:src/keys.c    **** static int process_arg(const keycode c) {
2071:src/keys.c    **** 	unsigned int base = CmdBase;
2072:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2073:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2075:src/keys.c    **** 	const enum shifts shift = reset_shift();
2076:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2078:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2079:src/keys.c    **** 
2080:src/keys.c    **** 	n &= ~NO_SHORT;
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
2082:src/keys.c    **** 		reset_arg();
2083:src/keys.c    **** 		return STATE_UNFINISHED;
2084:src/keys.c    **** 	}
2085:src/keys.c    **** #ifdef DM42
2086:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2087:src/keys.c    **** 	  switch (n) {
2088:src/keys.c    **** 	  case regX_idx:
2089:src/keys.c    **** 	    return arg_digit(1);
2090:src/keys.c    **** 	  case regY_idx:
ARM GAS  /tmp/ccwxoOej.s 			page 42


2091:src/keys.c    **** 	    return arg_digit(2);
2092:src/keys.c    **** 	  case regZ_idx:
2093:src/keys.c    **** 	    return arg_digit(3);
2094:src/keys.c    **** 	  case regT_idx:
2095:src/keys.c    **** 	    return arg_digit(4);
2096:src/keys.c    **** 	  case 5:
2097:src/keys.c    **** 	  case 6:
2098:src/keys.c    **** 	  case 7:
2099:src/keys.c    **** 	  case 8:
2100:src/keys.c    **** 	  case 9:
2101:src/keys.c    **** 	  case 0:
2102:src/keys.c    **** 	    return arg_digit(n);
2103:src/keys.c    **** 	  }
2104:src/keys.c    **** 	}
2105:src/keys.c    **** #else
2106:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2107:src/keys.c    **** 		return arg_digit(n);
2108:src/keys.c    **** #endif	
2109:src/keys.c    **** 	if (shorthand)
2110:src/keys.c    **** 		// row column shorthand addressing
2111:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2112:src/keys.c    **** 
2113:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2114:src/keys.c    **** #ifdef DM42
2115:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2116:src/keys.c    **** 		switch ((int)c) {
2117:src/keys.c    **** 		case K_UP:	// up arrow
2118:src/keys.c    **** 		  if (base == RARG_FIX) {
2119:src/keys.c    **** 		    base = RARG_SIG;
2120:src/keys.c    **** 		    break;
2121:src/keys.c    **** 		  }
2122:src/keys.c    **** 		  if (base == RARG_SIG) {
2123:src/keys.c    **** 		    base = RARG_SIG0;
2124:src/keys.c    **** 		    break;
2125:src/keys.c    **** 		  }
2126:src/keys.c    **** 		  if (base == RARG_SIG0) {
2127:src/keys.c    **** 		    base = RARG_FIX;
2128:src/keys.c    **** 		    break;
2129:src/keys.c    **** 		  }
2130:src/keys.c    **** 		case K_DOWN:	// down arrow
2131:src/keys.c    **** 		case K01:	// B
2132:src/keys.c    **** 		  if (base == RARG_FIX) {
2133:src/keys.c    **** 		    base = RARG_SIG0;
2134:src/keys.c    **** 		    break;
2135:src/keys.c    **** 		  }
2136:src/keys.c    **** 		  if (base == RARG_SIG) {
2137:src/keys.c    **** 		    base = RARG_FIX;
2138:src/keys.c    **** 		    break;
2139:src/keys.c    **** 		  }
2140:src/keys.c    **** 		  if (base == RARG_SIG0) {
2141:src/keys.c    **** 		    base = RARG_SIG;
2142:src/keys.c    **** 		    break;
2143:src/keys.c    **** 		  }
2144:src/keys.c    **** 		}
2145:src/keys.c    **** 	}
2146:src/keys.c    **** 		CmdBase = base;
2147:src/keys.c    **** #else
ARM GAS  /tmp/ccwxoOej.s 			page 43


2148:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2149:src/keys.c    **** 		switch ((int)c) {
2150:src/keys.c    **** 		case K_UP:	// up arrow
2151:src/keys.c    **** 			if (--base < RARG_FIX)
2152:src/keys.c    **** 				base = RARG_SIG0;
2153:src/keys.c    **** 			break;
2154:src/keys.c    **** 
2155:src/keys.c    **** 		case K_DOWN:	// down arrow
2156:src/keys.c    **** 		case K01:	// B
2157:src/keys.c    **** 			if (++base > RARG_SIG0)
2158:src/keys.c    **** 				base = RARG_FIX;
2159:src/keys.c    **** 			break;
2160:src/keys.c    **** 		}
2161:src/keys.c    **** 		CmdBase = base;
2162:src/keys.c    **** 	}
2163:src/keys.c    **** #endif
2164:src/keys.c    **** #endif
2165:src/keys.c    **** 	/*
2166:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2167:src/keys.c    **** 	 *  Handle the rest here.
2168:src/keys.c    **** 	 */
2169:src/keys.c    **** 	switch ((int)c) {
2170:src/keys.c    **** 	case K_F:
2171:src/keys.c    **** 		if (label_addressing)
2172:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2173:src/keys.c    **** 		break;
2174:src/keys.c    **** 
2175:src/keys.c    **** 	case K_ARROW:		// arrow
2176:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
2178:src/keys.c    **** 			if (! stack_reg)
2179:src/keys.c    **** 				State2.dot = 0;
2180:src/keys.c    **** 		}
2181:src/keys.c    **** 		break;
2182:src/keys.c    **** 
2183:src/keys.c    **** 	case K_CMPLX:
2184:src/keys.c    **** 		if (State2.ind || State2.dot)
2185:src/keys.c    **** 			break;
2186:src/keys.c    **** 		if (base == RARG_STO)
2187:src/keys.c    **** 			CmdBase = RARG_STOM;
2188:src/keys.c    **** 		else if (base == RARG_RCL)
2189:src/keys.c    **** 			CmdBase = RARG_RCLM;
2190:src/keys.c    **** 		break;
2191:src/keys.c    **** #ifdef DM42
2192:src/keys.c    **** 	case K41:       // T
2193:src/keys.c    **** 	  if (State2.shuffle)
2194:src/keys.c    **** 	    return process_arg_shuffle(3);
2195:src/keys.c    **** 	case K51:       // X
2196:src/keys.c    **** 	  if (State2.shuffle)
2197:src/keys.c    **** 	    return process_arg_shuffle(0);
2198:src/keys.c    **** 	case K52:	// Y
2199:src/keys.c    **** 	  if (State2.shuffle)
2200:src/keys.c    **** 	    return process_arg_shuffle(1);
2201:src/keys.c    **** 	case K53:       // Z
2202:src/keys.c    **** 	  if (State2.shuffle)
2203:src/keys.c    **** 	    return process_arg_shuffle(2);
2204:src/keys.c    **** #else
ARM GAS  /tmp/ccwxoOej.s 			page 44


2205:src/keys.c    **** 	case K63:	// Y
2206:src/keys.c    **** 	  if (State2.shuffle)
2207:src/keys.c    **** 	    return process_arg_shuffle(1);
2208:src/keys.c    **** #endif
2209:src/keys.c    **** 	case K00:	// A
2210:src/keys.c    **** 	case K01:	// B
2211:src/keys.c    **** 	case K02:	// C
2212:src/keys.c    **** 	case K03:	// D
2213:src/keys.c    **** #ifdef DM42
2214:src/keys.c    **** 	case K12:	// I (lastY)
2215:src/keys.c    **** 	case K13:	// J
2216:src/keys.c    **** 	case K14:	// K
2217:src/keys.c    **** 	case K15:	// L (lastX)
2218:src/keys.c    **** #else
2219:src/keys.c    **** 	case K12:	// I (lastY)
2220:src/keys.c    **** 	case K21:	// J
2221:src/keys.c    **** 	case K22:	// K
2222:src/keys.c    **** 	case K23:	// L (lastX)
2223:src/keys.c    **** #endif
2224:src/keys.c    **** 	  if (State2.dot || stack_reg)
2225:src/keys.c    **** 			return arg_eval(n);
2226:src/keys.c    **** 		if ( c <= K03 )
2227:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2228:src/keys.c    **** 		break;
2229:src/keys.c    **** #ifdef DM42
2230:src/keys.c    **** 	case K62:	// '.'
2231:src/keys.c    **** 		return process_arg_dot(base);
2232:src/keys.c    **** 
2233:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2234:src/keys.c    **** 	case K64:		// plus
2235:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2236:src/keys.c    **** 			return arg_eval(n);
2237:src/keys.c    **** 		break;
2238:src/keys.c    **** 	case K54:               // minus
2239:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2240:src/keys.c    **** 			reset_arg();
2241:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2242:src/keys.c    **** 		}
2243:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2244:src/keys.c    **** 		break;
2245:src/keys.c    **** 	case K44:		// multiply
2246:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2247:src/keys.c    **** 			return arg_eval(n);
2248:src/keys.c    **** 		break;
2249:src/keys.c    **** 	case K34:
2250:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2251:src/keys.c    **** 		break;
2252:src/keys.c    **** #else
2253:src/keys.c    **** 	case K62:	// X, '.'
2254:src/keys.c    **** 		if (State2.shuffle)
2255:src/keys.c    **** 			return process_arg_shuffle(0);
2256:src/keys.c    **** 		return process_arg_dot(base);
2257:src/keys.c    **** 
2258:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2259:src/keys.c    **** 	case K64:		// Z register
2260:src/keys.c    **** 		if (State2.shuffle)
2261:src/keys.c    **** 			return process_arg_shuffle(2);
ARM GAS  /tmp/ccwxoOej.s 			page 45


2262:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2263:src/keys.c    **** 			return arg_eval(n);
2264:src/keys.c    **** 		break;
2265:src/keys.c    **** 
2266:src/keys.c    **** 	case K54:
2267:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2268:src/keys.c    **** 			reset_arg();
2269:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2270:src/keys.c    **** 		}
2271:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2272:src/keys.c    **** 		break;
2273:src/keys.c    **** 
2274:src/keys.c    **** 	case K44:		// T register
2275:src/keys.c    **** 		if (State2.shuffle)
2276:src/keys.c    **** 			return process_arg_shuffle(3);
2277:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2278:src/keys.c    **** 			return arg_eval(n);
2279:src/keys.c    **** 		break;
2280:src/keys.c    **** 
2281:src/keys.c    **** 	case K34:
2282:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2283:src/keys.c    **** 		break;
2284:src/keys.c    **** #endif
2285:src/keys.c    **** 	case K_UP:
2286:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2287:src/keys.c    **** 		break;
2288:src/keys.c    **** 
2289:src/keys.c    **** 	case K_DOWN:
2290:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2291:src/keys.c    **** 		break;
2292:src/keys.c    **** 
2293:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2294:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2295:src/keys.c    **** 			if (argcmds[base].label) {
2296:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2297:src/keys.c    **** 				State2.multi = 1;
2298:src/keys.c    **** 				State2.alphashift = 0;
2299:src/keys.c    **** 				State2.rarg = 0;
2300:src/keys.c    **** 			} else if (base == RARG_SCI) {
2301:src/keys.c    **** 				reset_arg();
2302:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2303:src/keys.c    **** 			} else if (base == RARG_ENG) {
2304:src/keys.c    **** 				reset_arg();
2305:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2306:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2307:src/keys.c    **** 				State2.dot = 1;
2308:src/keys.c    **** 		} else if (State2.numdigit > 0)
2309:src/keys.c    **** 			return arg_eval(State2.digval);
2310:src/keys.c    **** 		else if (stack_reg)
2311:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2312:src/keys.c    **** 		break;
2313:src/keys.c    **** 
2314:src/keys.c    **** 	case K24:	// <-
2315:src/keys.c    **** 		if (State2.numdigit == 0) {
2316:src/keys.c    **** 			if (State2.dot)
2317:src/keys.c    **** 				State2.dot = 0;
2318:src/keys.c    **** 			else if (State2.local)
ARM GAS  /tmp/ccwxoOej.s 			page 46


2319:src/keys.c    **** 				State2.local = 0;
2320:src/keys.c    **** 			else if (State2.ind)
2321:src/keys.c    **** 				State2.ind = 0;
2322:src/keys.c    **** 			else
2323:src/keys.c    **** 				goto reset;
2324:src/keys.c    **** 		}
2325:src/keys.c    **** 		else {
2326:src/keys.c    **** 			--State2.numdigit;
2327:src/keys.c    **** 			if (State2.shuffle)
2328:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2329:src/keys.c    **** 			else
2330:src/keys.c    **** 				State2.digval /= 10;
2331:src/keys.c    **** 		}
2332:src/keys.c    **** 		break;
2333:src/keys.c    **** 
2334:src/keys.c    **** 	case K60:
2335:src/keys.c    **** 	reset:
2336:src/keys.c    **** 		reset_arg();
2337:src/keys.c    **** 	default:
2338:src/keys.c    **** 		break;
2339:src/keys.c    **** 	}
2340:src/keys.c    **** 	return STATE_UNFINISHED;
2341:src/keys.c    **** }
2342:src/keys.c    **** 
2343:src/keys.c    **** 
2344:src/keys.c    **** /*
2345:src/keys.c    ****  *  Process arguments to the diverse test commands
2346:src/keys.c    ****  */
2347:src/keys.c    **** static int process_test(const keycode c) {
2348:src/keys.c    **** 	int r = State2.test;
2349:src/keys.c    **** 	int cmpx = State2.cmplx;
2350:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2351:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2352:src/keys.c    **** 
2353:src/keys.c    **** 	State2.test = TST_NONE;
2354:src/keys.c    **** 	State2.cmplx = 0;
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2357:src/keys.c    **** 		// Lettered register
2358:src/keys.c    **** 		if (cmpx && (n & 1)) {
2359:src/keys.c    **** 			if (n == regI_idx)
2360:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2361:src/keys.c    **** 			// Disallow odd complex registers > A
2362:src/keys.c    **** 			goto again;
2363:src/keys.c    **** 		}
2364:src/keys.c    **** 		// Return the command with the register completed
2365:src/keys.c    **** 		return RARG(base, n);
2366:src/keys.c    **** 	}
2367:src/keys.c    **** 	else if ( n == 0 ) {
2368:src/keys.c    **** 		// Special 0
2369:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2370:src/keys.c    **** 	}
2371:src/keys.c    **** 	else if ( n == 1 ) {
2372:src/keys.c    **** 		// Special 1
2373:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2374:src/keys.c    **** 	}
2375:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
ARM GAS  /tmp/ccwxoOej.s 			page 47


2376:src/keys.c    **** 		// digit 2..9, -> or .
2377:src/keys.c    **** 		init_arg((enum rarg)base);
2378:src/keys.c    **** 		return process_arg(c);
2379:src/keys.c    **** 	}
2380:src/keys.c    **** 
2381:src/keys.c    **** 	switch (c) {
2382:src/keys.c    **** 	case K11:					// tests vs register
2383:src/keys.c    **** 	case K20:
2384:src/keys.c    **** 		init_arg((enum rarg)base);
2385:src/keys.c    **** 		return STATE_UNFINISHED;
2386:src/keys.c    **** 
2387:src/keys.c    **** 	//case K60:
2388:src/keys.c    **** 	case K24:
2389:src/keys.c    **** 		return STATE_UNFINISHED;
2390:src/keys.c    **** 
2391:src/keys.c    **** 	default:
2392:src/keys.c    **** 		break;
2393:src/keys.c    **** 	}
2394:src/keys.c    **** again:
2395:src/keys.c    **** 	State2.test = r;
2396:src/keys.c    **** 	State2.cmplx = cmpx;
2397:src/keys.c    **** 	return STATE_UNFINISHED;
2398:src/keys.c    **** }
2399:src/keys.c    **** 
2400:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2401:src/keys.c    **** /*
2402:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2403:src/keys.c    ****  */
2404:src/keys.c    **** #define USER_CAT_MAX 100
2405:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2406:src/keys.c    **** 
2407:src/keys.c    **** static int build_user_cat(void)
2408:src/keys.c    **** {
2409:src/keys.c    **** 	// find the label 'CAT'
2410:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2411:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2412:src/keys.c    **** 	int len = 0;
2413:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2414:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2415:src/keys.c    **** 		char buf1[16];
2416:src/keys.c    **** 		int i;
2417:src/keys.c    **** 		s_opcode op;
2418:src/keys.c    **** 	next:
2419:src/keys.c    **** 		pc = do_inc(pc, 0);
2420:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2421:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2422:src/keys.c    **** 			break;
2423:src/keys.c    **** 		if (isDBL(op))
2424:src/keys.c    **** 			continue;
2425:src/keys.c    **** 		if (isRARG(op)) {
2426:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2427:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2428:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2429:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2430:src/keys.c    **** 		}
2431:src/keys.c    **** 		catcmd(op, buf1);
2432:src/keys.c    **** 		for (i = 0; i < len; ++i) {
ARM GAS  /tmp/ccwxoOej.s 			page 48


2433:src/keys.c    **** 			// Find a position in the table to insert the new entry
2434:src/keys.c    **** 			char buf2[16];
2435:src/keys.c    **** 			const char *p, *q;
2436:src/keys.c    **** 			int diff = 0;
2437:src/keys.c    **** 			if (op == UserCat[i]) {
2438:src/keys.c    **** 				// duplicate entry - ignore
2439:src/keys.c    **** 				goto next;
2440:src/keys.c    **** 			}
2441:src/keys.c    **** 			p = buf1;
2442:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2443:src/keys.c    **** 				++p;
2444:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2445:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2446:src/keys.c    **** 				++q;
2447:src/keys.c    **** 			diff = 0;
2448:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2449:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2450:src/keys.c    **** 			}
2451:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2452:src/keys.c    **** 				// identical according to sort order, insert after
2453:src/keys.c    **** 				++i;
2454:src/keys.c    **** 				break;
2455:src/keys.c    **** 			}
2456:src/keys.c    **** 			if (diff > 0) {
2457:src/keys.c    **** 				// insert new entry before the one found because this is greater
2458:src/keys.c    **** 				break;
2459:src/keys.c    **** 			}
2460:src/keys.c    **** 		}
2461:src/keys.c    **** 		if (i < len) {
2462:src/keys.c    **** 			// Make room
2463:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2464:src/keys.c    **** 		}
2465:src/keys.c    **** 		UserCat[i] = op;
2466:src/keys.c    **** 		++len;
2467:src/keys.c    **** 	}
2468:src/keys.c    **** 	// return the number of entries
2469:src/keys.c    **** 	return len;
2470:src/keys.c    **** }
2471:src/keys.c    **** #endif
2472:src/keys.c    **** 
2473:src/keys.c    **** /* Return the number of entries in the current catalogue.
2474:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2475:src/keys.c    ****  * likely be the most space efficient method.
2476:src/keys.c    ****  */
2477:src/keys.c    **** int current_catalogue_max(void) {
2478:src/keys.c    **** 	// A quick table of catalogue sizes
2479:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2480:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2481:src/keys.c    **** 	{
2482:src/keys.c    **** 		0, // NONE
2483:src/keys.c    **** 		SIZE_catalogue,
2484:src/keys.c    **** 		SIZE_cplx_catalogue,
2485:src/keys.c    **** 		SIZE_stats_catalogue,
2486:src/keys.c    **** 		SIZE_prob_catalogue,
2487:src/keys.c    **** 		SIZE_int_catalogue,
2488:src/keys.c    **** 		SIZE_prog_catalogue,
2489:src/keys.c    **** 		SIZE_program_xfcn,
ARM GAS  /tmp/ccwxoOej.s 			page 49


2490:src/keys.c    **** 		SIZE_test_catalogue,
2491:src/keys.c    **** 		SIZE_mode_catalogue,
2492:src/keys.c    **** 		SIZE_alpha_catalogue,
2493:src/keys.c    **** 		SIZE_alpha_symbols,
2494:src/keys.c    **** 		SIZE_alpha_compares,
2495:src/keys.c    **** 		SIZE_alpha_arrows,
2496:src/keys.c    **** 		SIZE_alpha_letters,
2497:src/keys.c    **** 		SIZE_alpha_subscripts,
2498:src/keys.c    **** 		NUM_CONSTS_CAT,
2499:src/keys.c    **** 		NUM_CONSTS_CAT,
2500:src/keys.c    **** 		SIZE_conv_catalogue,
2501:src/keys.c    **** 		SIZE_sums_catalogue,
2502:src/keys.c    **** 		SIZE_matrix_catalogue,
2503:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2504:src/keys.c    **** 		SIZE_internal_catalogue,
2505:src/keys.c    **** #endif
2506:src/keys.c    **** 	};
2507:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2508:src/keys.c    **** 	const int cat = State2.catalogue;
2509:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2510:src/keys.c    **** #else
2511:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2512:src/keys.c    **** #endif
2513:src/keys.c    **** }
2514:src/keys.c    **** 
2515:src/keys.c    **** 
2516:src/keys.c    **** /* Look up the character position in the given byte array and
2517:src/keys.c    ****  * build the alpha op-code for it.
2518:src/keys.c    ****  */
2519:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2520:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2521:src/keys.c    **** }
2522:src/keys.c    **** 
2523:src/keys.c    **** 
2524:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2525:src/keys.c    ****  */
2526:src/keys.c    **** opcode current_catalogue(int n) {
2527:src/keys.c    **** 	// A quick table of catalogue tables
2528:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2529:src/keys.c    **** 	static const void *catalogues[] =
2530:src/keys.c    **** 	{
2531:src/keys.c    **** 		NULL, // NONE
2532:src/keys.c    **** 		catalogue,
2533:src/keys.c    **** 		cplx_catalogue,
2534:src/keys.c    **** 		stats_catalogue,
2535:src/keys.c    **** 		prob_catalogue,
2536:src/keys.c    **** 		int_catalogue,
2537:src/keys.c    **** 		prog_catalogue,
2538:src/keys.c    **** 		program_xfcn,
2539:src/keys.c    **** 		test_catalogue,
2540:src/keys.c    **** 		mode_catalogue,
2541:src/keys.c    **** 		alpha_catalogue,
2542:src/keys.c    **** 		alpha_symbols,
2543:src/keys.c    **** 		alpha_compares,
2544:src/keys.c    **** 		alpha_arrows,
2545:src/keys.c    **** 		alpha_letters,
2546:src/keys.c    **** 		alpha_subscripts,
ARM GAS  /tmp/ccwxoOej.s 			page 50


2547:src/keys.c    **** 		NULL,
2548:src/keys.c    **** 		NULL,
2549:src/keys.c    **** 		NULL, //CONV
2550:src/keys.c    **** 		sums_catalogue,
2551:src/keys.c    **** 		matrix_catalogue,
2552:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2553:src/keys.c    **** 		internal_catalogue,
2554:src/keys.c    **** #endif
2555:src/keys.c    **** 	};
2556:src/keys.c    **** 	const unsigned char *cat;
2557:src/keys.c    **** 	unsigned int c = State2.catalogue;
2558:src/keys.c    **** 	int m, i;
2559:src/keys.c    **** 	unsigned p, q;
2560:src/keys.c    **** 
2561:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2562:src/keys.c    **** 		if (n == OP_ZERO)
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2564:src/keys.c    **** 		return CONST(n);
2565:src/keys.c    **** 	}
2566:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2567:src/keys.c    **** 		if (n == OP_ZERO)
2568:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2569:src/keys.c    **** 		return CONST_CMPLX(n);
2570:src/keys.c    **** 	}
2571:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2572:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2573:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2574:src/keys.c    **** 			// Monadic conversion routine
2575:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2576:src/keys.c    **** 		else
2577:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2578:src/keys.c    **** 	}
2579:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2580:src/keys.c    **** 	if (c == CATALOGUE_USER)
2581:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2582:src/keys.c    **** #endif
2583:src/keys.c    **** 
2584:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2585:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2586:src/keys.c    **** 	else
2587:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2588:src/keys.c    **** 
2589:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2590:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2591:src/keys.c    **** 	}
2592:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2593:src/keys.c    **** 		return OP_NIL | OP_NOP;
2594:src/keys.c    **** 
2595:src/keys.c    **** 	/* Unpack the opcode */
2596:src/keys.c    **** 	cat += n + (n >> 2);
2597:src/keys.c    **** 	p = cat[0];
2598:src/keys.c    **** 	q = cat[1];
2599:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2600:src/keys.c    **** 
2601:src/keys.c    **** 	/* Now figure out which opcode it really is */
2602:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
ARM GAS  /tmp/ccwxoOej.s 			page 51


2604:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2605:src/keys.c    **** 		m -= opcode_breaks[i];
2606:src/keys.c    **** 	}
2607:src/keys.c    **** 	return RARG_BASEOP(m);
2608:src/keys.c    **** }
2609:src/keys.c    **** 
2610:src/keys.c    **** 
2611:src/keys.c    **** /*
2612:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2613:src/keys.c    ****  *  in multi character commands.
2614:src/keys.c    ****  */
2615:src/keys.c    **** static int forbidden_alpha(int pos) {
2616:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2617:src/keys.c    **** }
2618:src/keys.c    **** 
2619:src/keys.c    **** /*
2620:src/keys.c    ****  *  Catalogue navigation
2621:src/keys.c    ****  */
2622:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2623:src/keys.c    ****    int pos = State.catpos;
2624:src/keys.c    ****    int ch;
2625:src/keys.c    ****    const int ctmax = current_catalogue_max();
2626:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2627:src/keys.c    **** 
2628:src/keys.c    ****    if (shift == SHIFT_N) {
2629:src/keys.c    ****      switch (c) {
2630:src/keys.c    **** #ifdef DM42
2631:src/keys.c    ****      case K05:			// XEQ accepts command
2632:src/keys.c    **** #else	  
2633:src/keys.c    ****      case K30:			// XEQ accepts command
2634:src/keys.c    **** #endif						  
2635:src/keys.c    ****      case K20:			// Enter accepts command
2636:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2637:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2638:src/keys.c    **** 
2639:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2640:src/keys.c    **** 
2641:src/keys.c    **** 	 if (isRARG(op)) {
2642:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2643:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2644:src/keys.c    **** 	     return op;
2645:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2646:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2647:src/keys.c    **** 	   else
2648:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2649:src/keys.c    **** 	 }
2650:src/keys.c    **** 	 else {
2651:src/keys.c    **** 	   return check_confirm(op);
2652:src/keys.c    **** 	 }
2653:src/keys.c    ****        } else
2654:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2655:src/keys.c    ****        return STATE_UNFINISHED;
2656:src/keys.c    **** 
2657:src/keys.c    ****      case K24:			// backspace
2658:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2659:src/keys.c    **** 	 if (--CmdLineLength > 0)
2660:src/keys.c    **** 	   goto search;
ARM GAS  /tmp/ccwxoOej.s 			page 52


2661:src/keys.c    **** 	 pos = 0;
2662:src/keys.c    **** 	 goto set_pos;
2663:src/keys.c    ****        } else
2664:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2665:src/keys.c    ****        return STATE_UNFINISHED;
2666:src/keys.c    **** 
2667:src/keys.c    ****      case K60:
2668:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2669:src/keys.c    ****        return STATE_UNFINISHED;
2670:src/keys.c    **** 
2671:src/keys.c    ****      case K_UP:
2672:src/keys.c    ****        CmdLineLength = 0;
2673:src/keys.c    ****        if (pos == 0)
2674:src/keys.c    **** 	 goto set_max;
2675:src/keys.c    ****        else
2676:src/keys.c    **** 	 --pos;
2677:src/keys.c    ****        goto set_pos;
2678:src/keys.c    **** 
2679:src/keys.c    ****      case K_DOWN:
2680:src/keys.c    ****        CmdLineLength = 0;
2681:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2682:src/keys.c    ****        if (pos >= ctmax)
2683:src/keys.c    **** 	 pos = 0;
2684:src/keys.c    ****        goto set_pos;
2685:src/keys.c    **** 
2686:src/keys.c    ****      default:
2687:src/keys.c    ****        break;
2688:src/keys.c    ****      }
2689:src/keys.c    ****    } else if (shift == SHIFT_F) {
2690:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2691:src/keys.c    ****        /*
2692:src/keys.c    **** 	* f 1/x in conversion catalogue
2693:src/keys.c    **** 	*/
2694:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2695:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2696:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2697:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2698:src/keys.c    **** 	*/
2699:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2700:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2701:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2702:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2703:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2704:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2705:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2706:src/keys.c    ****        };
2707:src/keys.c    ****        const opcode op = current_catalogue(pos);
2708:src/keys.c    ****        int i;
2709:src/keys.c    **** 
2710:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2711:src/keys.c    ****        if (isRARG(op))
2712:src/keys.c    **** 	 return op ^ 1;
2713:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2714:src/keys.c    **** 	 if (op == conv_mapping[i])
2715:src/keys.c    **** 	   return conv_mapping[i^1];
2716:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2717:src/keys.c    ****      }
ARM GAS  /tmp/ccwxoOej.s 			page 53


2718:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2719:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2720:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2721:src/keys.c    ****        return STATE_UNFINISHED;
2722:src/keys.c    ****      }
2723:src/keys.c    ****    } else if (shift == SHIFT_G) {
2724:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2725:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2726:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2727:src/keys.c    ****      }
2728:src/keys.c    ****    }
2729:src/keys.c    **** 
2730:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2731:src/keys.c    ****     * jump to the appropriate catalogue entry.
2732:src/keys.c    ****     */
2733:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2734:src/keys.c    ****    reset_shift();
2735:src/keys.c    ****    if (ch == '\0')
2736:src/keys.c    ****      return STATE_UNFINISHED;
2737:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2738:src/keys.c    ****      // No multi character search in alpha catalogues
2739:src/keys.c    ****      CmdLineLength = 0;
2740:src/keys.c    ****    }
2741:src/keys.c    ****    if (CmdLineLength < 10)
2742:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2743:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2744:src/keys.c    **** 
2745:src/keys.c    ****  search:
2746:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2747:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2748:src/keys.c    ****      char buf[16];
2749:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2750:src/keys.c    ****      int i;
2751:src/keys.c    **** 
2752:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2753:src/keys.c    ****        cmd++;
2754:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2756:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2757:src/keys.c    ****        if (c > cl)
2758:src/keys.c    **** 	 goto set_pos;
2759:src/keys.c    ****        else if (c < cl)
2760:src/keys.c    **** 	 break;
2761:src/keys.c    ****      }
2762:src/keys.c    ****      if (Cmdline[i] == '\0')
2763:src/keys.c    ****        goto set_pos;
2764:src/keys.c    ****    }
2765:src/keys.c    ****  set_max:
2766:src/keys.c    ****    pos = ctmax - 1;
2767:src/keys.c    ****  set_pos:
2768:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2769:src/keys.c    ****      --pos;
2770:src/keys.c    ****    State.catpos = pos;
2771:src/keys.c    ****    return STATE_UNFINISHED;
2772:src/keys.c    ****  }
2773:src/keys.c    **** 
2774:src/keys.c    **** #ifndef REALBUILD
ARM GAS  /tmp/ccwxoOej.s 			page 54


2775:src/keys.c    **** int find_pos(const char* text) {
2776:src/keys.c    **** 	int pos;
2777:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2778:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2779:src/keys.c    **** 		char buf[16];
2780:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2781:src/keys.c    **** 		int i;
2782:src/keys.c    **** 
2783:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2784:src/keys.c    **** 			cmd++;
2785:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2787:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2788:src/keys.c    **** 			if (c > cl)
2789:src/keys.c    **** 				return pos;
2790:src/keys.c    **** 			else if (c < cl)
2791:src/keys.c    **** 				break;
2792:src/keys.c    **** 		}
2793:src/keys.c    **** 		if (text[i] == '\0')
2794:src/keys.c    **** 			return pos;
2795:src/keys.c    **** 	}
2796:src/keys.c    **** 	return pos;
2797:src/keys.c    **** }
2798:src/keys.c    **** 
2799:src/keys.c    **** #endif
2800:src/keys.c    **** 
2801:src/keys.c    **** /* Multi (2) word instruction entry
2802:src/keys.c    ****  */
2803:src/keys.c    **** static void reset_multi(void) {
2804:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2805:src/keys.c    **** 	State2.multi = 0;
2806:src/keys.c    **** 	if (! State2.alphas )
2807:src/keys.c    **** 		State2.alphashift = 0;
2808:src/keys.c    **** }
2809:src/keys.c    **** 
2810:src/keys.c    **** static int process_multi(const keycode c) {
2811:src/keys.c    **** 	enum shifts shift = reset_shift();
2812:src/keys.c    **** 	unsigned int ch = 0;
2813:src/keys.c    **** 	unsigned int opcode;
2814:src/keys.c    **** 
2815:src/keys.c    **** 	if (State2.catalogue) {
2816:src/keys.c    **** 		// Alpha catalogue from within multi character command
2817:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2818:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2819:src/keys.c    **** 			return opcode;
2820:src/keys.c    **** 		ch = (unsigned char) opcode;
2821:src/keys.c    **** 		goto add_char;
2822:src/keys.c    **** 	}
2823:src/keys.c    **** 
2824:src/keys.c    **** 	switch (c) {
2825:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2826:src/keys.c    **** 		if (shift != SHIFT_N)
2827:src/keys.c    **** 				break;
2828:src/keys.c    **** 		reset_multi();
2829:src/keys.c    **** 		if (State2.numdigit == 0)
2830:src/keys.c    **** 			return STATE_UNFINISHED;
2831:src/keys.c    **** 		else if (State2.numdigit == 1)
ARM GAS  /tmp/ccwxoOej.s 			page 55


2832:src/keys.c    **** 			State2.digval2 = 0;
2833:src/keys.c    **** 		goto fin;
2834:src/keys.c    **** 
2835:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2836:src/keys.c    **** 		if (shift != SHIFT_H) {
2837:src/keys.c    **** 			if (State2.numdigit == 0)
2838:src/keys.c    **** 				reset_multi();
2839:src/keys.c    **** 			else
2840:src/keys.c    **** 				State2.numdigit--;
2841:src/keys.c    **** 			return STATE_UNFINISHED;
2842:src/keys.c    **** 		}
2843:src/keys.c    **** 		break;
2844:src/keys.c    **** 
2845:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2846:src/keys.c    **** 		if (shift == SHIFT_F)
2847:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2848:src/keys.c    **** 		else
2849:src/keys.c    **** 			reset_multi();
2850:src/keys.c    **** 		return STATE_UNFINISHED;
2851:src/keys.c    **** 
2852:src/keys.c    **** 	default:
2853:src/keys.c    **** 		break;
2854:src/keys.c    **** 		}
2855:src/keys.c    **** 
2856:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2857:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2858:src/keys.c    **** 	if (ch == 0)
2859:src/keys.c    **** 		return STATE_UNFINISHED;
2860:src/keys.c    **** add_char:
2861:src/keys.c    **** 	if (State2.numdigit == 0) {
2862:src/keys.c    **** 		State2.digval = ch;
2863:src/keys.c    **** 		State2.numdigit = 1;
2864:src/keys.c    **** 		return STATE_UNFINISHED;
2865:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2866:src/keys.c    **** 		State2.digval2 = ch;
2867:src/keys.c    **** 		State2.numdigit = 2;
2868:src/keys.c    **** 		return STATE_UNFINISHED;
2869:src/keys.c    **** 	}
2870:src/keys.c    **** 	reset_multi();
2871:src/keys.c    **** 
2872:src/keys.c    **** fin:
2873:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2874:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2875:src/keys.c    **** 	return opcode;
2876:src/keys.c    **** }
2877:src/keys.c    **** 
2878:src/keys.c    **** 
2879:src/keys.c    **** /* Handle YES/NO confirmations
2880:src/keys.c    ****  */
2881:src/keys.c    **** static int process_confirm(const keycode c) {
2882:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2883:src/keys.c    **** 	switch (c) {
2884:src/keys.c    **** #ifdef DM42
2885:src/keys.c    **** 	case K52:
2886:src/keys.c    **** #endif
2887:src/keys.c    **** 	case K63:			// Yes
2888:src/keys.c    **** 	  switch (State2.confirm) {
ARM GAS  /tmp/ccwxoOej.s 			page 56


2889:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2890:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2891:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2892:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2893:src/keys.c    **** 	  }
2894:src/keys.c    **** 	case K24:
2895:src/keys.c    **** #ifdef DM42
2896:src/keys.c    **** 	case K22:
2897:src/keys.c    **** #else
2898:src/keys.c    **** 	case K32:
2899:src/keys.c    **** #endif
2900:src/keys.c    **** 	  // No
2901:src/keys.c    **** 	  State2.confirm = 0;
2902:src/keys.c    **** 	  State2.digval = 0;
2903:src/keys.c    **** 	  break;
2904:src/keys.c    **** 	default:			// No state change
2905:src/keys.c    **** 	  break;
2906:src/keys.c    **** 	}
2907:src/keys.c    **** 	return STATE_UNFINISHED;
2908:src/keys.c    **** }
2909:src/keys.c    **** 
2910:src/keys.c    **** 
2911:src/keys.c    **** /*
2912:src/keys.c    ****  *  STATUS
2913:src/keys.c    ****  */
2914:src/keys.c    **** static int process_status(const keycode c) {
2915:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2916:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2917:src/keys.c    **** 
2918:src/keys.c    **** 	if (c == K_UP) {
2919:src/keys.c    **** 		if (--n < -2)
2920:src/keys.c    **** 			n = max;
2921:src/keys.c    **** 	}
2922:src/keys.c    **** 	else if (c == K_DOWN) {
2923:src/keys.c    **** 		if (++n > max)
2924:src/keys.c    **** 			n = -2;
2925:src/keys.c    **** 	}
2926:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2927:src/keys.c    **** 		State2.status = 0;
2928:src/keys.c    **** 		return STATE_UNFINISHED;
2929:src/keys.c    **** 	} 
2930:src/keys.c    **** 	else {
2931:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2932:src/keys.c    **** 		if (nn <= 9)
2933:src/keys.c    **** 			n = nn;
2934:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2935:src/keys.c    **** 			n = n == max ? 10 : max;
2936:src/keys.c    **** 		else if (nn != NO_REG)
2937:src/keys.c    **** 			n = 10; 
2938:src/keys.c    **** 	}
2939:src/keys.c    **** 	State2.status = n + 3;
2940:src/keys.c    **** 
2941:src/keys.c    **** 	return STATE_UNFINISHED;
2942:src/keys.c    **** }
2943:src/keys.c    **** 
2944:src/keys.c    **** 
2945:src/keys.c    **** /*
ARM GAS  /tmp/ccwxoOej.s 			page 57


2946:src/keys.c    ****  *  CAT helper
2947:src/keys.c    ****  */
2948:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2948 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2949:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2949 2 view .LVU58
2948:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2948 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2948:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2948 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2949 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2950:src/keys.c    **** 
2951:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2951 2 is_stmt 1 view .LVU62
 234              		.loc 1 2951 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2951 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2951 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2951 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2952:src/keys.c    **** }
 245              		.loc 1 2952 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2951:src/keys.c    **** }
 249              		.loc 1 2951 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2952 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2951:src/keys.c    **** }
 256              		.loc 1 2951 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2951:src/keys.c    **** }
 259              		.loc 1 2951 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
ARM GAS  /tmp/ccwxoOej.s 			page 58


 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2952 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2952 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2953:src/keys.c    **** 
2954:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2954 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2954 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2954 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2955:src/keys.c    **** 	do {
 294              		.loc 1 2955 2 is_stmt 1 view .LVU77
2956:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2956 3 view .LVU78
2957:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2957 4 view .LVU79
2954:src/keys.c    **** 	do {
 297              		.loc 1 2954 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2957 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
2959:src/keys.c    **** 				if (PcWrapped)
2960:src/keys.c    **** 					break;
2961:src/keys.c    **** 			}
2962:src/keys.c    **** 			else
2963:src/keys.c    **** 				inc = 1;
2964:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2964 4 is_stmt 1 view .LVU82
 304              		.loc 1 2964 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2964 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
ARM GAS  /tmp/ccwxoOej.s 			page 59


 309              	.LVL28:
 310              		.loc 1 2964 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2964 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2958 5 is_stmt 1 view .LVU87
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2958 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2959:src/keys.c    **** 					break;
 323              		.loc 1 2959 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2958 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2959:src/keys.c    **** 					break;
 328              		.loc 1 2959 5 is_stmt 1 view .LVU91
2959:src/keys.c    **** 					break;
 329              		.loc 1 2959 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2965:src/keys.c    **** 				return pc;
2966:src/keys.c    **** 			}
2967:src/keys.c    **** 		}
2968:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2968 3 is_stmt 1 view .LVU93
 333              		.loc 1 2968 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2968 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2969:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2969 10 is_stmt 1 view .LVU96
 342              		.loc 1 2969 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2969 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2970:src/keys.c    **** 	return pc;
2971:src/keys.c    **** }
 351              		.loc 1 2971 1 view .LVU99
 352 0042 2046     		mov	r0, r4
ARM GAS  /tmp/ccwxoOej.s 			page 60


 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2971 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
ARM GAS  /tmp/ccwxoOej.s 			page 61


 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC1F 		ldrb	r1, [r2, #4060]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC1F 		strb	r1, [r2, #4060]
 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB307:
 432              	.LBI307:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE307:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB324:
 438              	.LBB308:
 439              	.LBI308:
ARM GAS  /tmp/ccwxoOej.s 			page 62


 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB309:
 105:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 105 2 view .LVU131
 443              	.LBB310:
 444              	.LBI310:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB311:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE311:
 453              	.LBE310:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE309:
 462              	.LBE308:
 463              	.LBE324:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
ARM GAS  /tmp/ccwxoOej.s 			page 63


 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB325:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE325:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB326:
 505              	.LBB321:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB318:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB315:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB312:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE312:
ARM GAS  /tmp/ccwxoOej.s 			page 64


 518              	.LBE315:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE318:
 527              	.LBE321:
 528              	.LBE326:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC0F 		ldrh	r0, [r1, #4076]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB327:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
ARM GAS  /tmp/ccwxoOej.s 			page 65


 558              	.LBE327:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
 561              	.LBB328:
 562              	.LBB322:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB319:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB316:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB313:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE313:
 575              	.LBE316:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE319:
 584              	.LBE322:
 585              	.LBE328:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
ARM GAS  /tmp/ccwxoOej.s 			page 66


 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB329:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE329:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB330:
 612              	.LBB323:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB320:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB317:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB314:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE314:
 625              	.LBE317:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE320:
 634              	.LBE323:
 635              	.LBE330:
 610:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 67


 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC3F 		ldrb	r3, [r2, #4060]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC3F 		ldrh	r3, [r2, #4060]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC3F 		strh	r3, [r2, #4060]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
ARM GAS  /tmp/ccwxoOej.s 			page 68


 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2972:src/keys.c    **** 
2973:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2973 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2973 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2973 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2974:src/keys.c    **** 	do {
 717              		.loc 1 2974 2 is_stmt 1 view .LVU239
2975:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2975 3 view .LVU240
2976:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2976 4 view .LVU241
 720              		.loc 1 2976 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2977:src/keys.c    **** 			if (PcWrapped)
2978:src/keys.c    **** 				break;
2979:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2979 4 is_stmt 1 view .LVU243
2980:src/keys.c    **** 				return pc;
ARM GAS  /tmp/ccwxoOej.s 			page 69


2981:src/keys.c    **** 			}
2982:src/keys.c    **** 		}
2983:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2983 3 view .LVU244
 727              		.loc 1 2983 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2977:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2977 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2983 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2984:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2984 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2976:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2976 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2977:src/keys.c    **** 				break;
 739              		.loc 1 2977 4 is_stmt 1 view .LVU250
2983:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2983 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2984 3 is_stmt 1 view .LVU252
2977:src/keys.c    **** 				break;
 744              		.loc 1 2977 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2979:src/keys.c    **** 				return pc;
 746              		.loc 1 2979 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2979:src/keys.c    **** 				return pc;
 750              		.loc 1 2979 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2986:src/keys.c    **** 	return pc;
2987:src/keys.c    **** }
 753              		.loc 1 2987 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2984 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2985 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2984 8 view .LVU259
 765 003e 0446     		mov	r4, r0
ARM GAS  /tmp/ccwxoOej.s 			page 70


 766              	.LVL60:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2985 10 is_stmt 1 view .LVU260
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2985 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2985 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2987 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2987 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 714 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB331:
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 716 3 view .LVU266
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 804              		.loc 1 716 13 is_stmt 0 view .LVU267
 805 0000 C3B2     		uxtb	r3, r0
 806              	.LVL64:
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 717 3 is_stmt 1 view .LVU268
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 808              		.loc 1 717 25 is_stmt 0 view .LVU269
 809 0002 A3F14102 		sub	r2, r3, #65
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 810              		.loc 1 717 6 view .LVU270
 811 0006 032A     		cmp	r2, #3
 812 0008 0AD9     		bls	.L76
 725:src/keys.c    **** #endif
 813              		.loc 1 725 7 is_stmt 1 view .LVU271
 725:src/keys.c    **** #endif
ARM GAS  /tmp/ccwxoOej.s 			page 71


 814              		.loc 1 725 29 is_stmt 0 view .LVU272
 815 000a A3F1AD02 		sub	r2, r3, #173
 725:src/keys.c    **** #endif
 816              		.loc 1 725 10 view .LVU273
 817 000e 052A     		cmp	r2, #5
 818 0010 03D8     		bhi	.L77
 819              	.L74:
 735:src/keys.c    **** 		}
 820              		.loc 1 735 4 is_stmt 1 view .LVU274
 735:src/keys.c    **** 		}
 821              		.loc 1 735 20 is_stmt 0 view .LVU275
 822 0012 074B     		ldr	r3, .L78
 823              	.LVL65:
 735:src/keys.c    **** 		}
 824              		.loc 1 735 20 view .LVU276
 825 0014 0122     		movs	r2, #1
 826              	.LVL66:
 735:src/keys.c    **** 		}
 827              		.loc 1 735 20 view .LVU277
 828 0016 1A60     		str	r2, [r3]
 829              	.LBE331:
 739:src/keys.c    **** 
 830              		.loc 1 739 1 view .LVU278
 831 0018 7047     		bx	lr
 832              	.LVL67:
 833              	.L77:
 834              	.LBB332:
 728:src/keys.c    **** #endif
 835              		.loc 1 728 4 view .LVU279
 836 001a BC2B     		cmp	r3, #188
 837 001c F9D0     		beq	.L74
 838              	.LBE332:
 739:src/keys.c    **** 
 839              		.loc 1 739 1 view .LVU280
 840 001e 7047     		bx	lr
 841              	.L76:
 842              	.LBB333:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 843              		.loc 1 718 4 is_stmt 1 view .LVU281
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 844              		.loc 1 718 19 is_stmt 0 view .LVU282
 845 0020 044B     		ldr	r3, .L78+4
 846              	.LVL68:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 847              		.loc 1 718 19 view .LVU283
 848 0022 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 849              	.LVL69:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 850              		.loc 1 718 35 view .LVU284
 851 0024 4038     		subs	r0, r0, #64
 852              	.LVL70:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 853              		.loc 1 718 19 view .LVU285
 854 0026 60F30202 		bfi	r2, r0, #0, #3
 855 002a 1A75     		strb	r2, [r3, #20]
 719:src/keys.c    **** 		}
 856              		.loc 1 719 4 is_stmt 1 view .LVU286
ARM GAS  /tmp/ccwxoOej.s 			page 72


 719:src/keys.c    **** 		}
 857              		.loc 1 719 11 is_stmt 0 view .LVU287
 858 002c 3320     		movs	r0, #51
 859              	.LVL71:
 719:src/keys.c    **** 		}
 860              		.loc 1 719 11 view .LVU288
 861 002e 7047     		bx	lr
 862              	.L79:
 863              		.align	2
 864              	.L78:
 865 0030 00000000 		.word	NonProgrammable
 866 0034 00000000 		.word	StateWhileOn
 867              	.LBE333:
 868              		.cfi_endproc
 869              	.LFE64:
 871              		.section	.text.init_arg.part.0,"ax",%progbits
 872              		.align	1
 873              		.p2align 2,,3
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	init_arg.part.0:
 880              	.LVL72:
 881              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 882              		.loc 1 552 13 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 887              		.loc 1 555 2 view .LVU290
 555:src/keys.c    **** 	State2.ind = 0;
 888              		.loc 1 555 10 is_stmt 0 view .LVU291
 889 0000 084B     		ldr	r3, .L81
 560:src/keys.c    **** 	State2.local = 0;
 890              		.loc 1 560 13 view .LVU292
 891 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 892              		.loc 1 555 10 view .LVU293
 893 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 894              		.loc 1 556 2 is_stmt 1 view .LVU294
 557:src/keys.c    **** 	State2.numdigit = 0;
 895              		.loc 1 557 2 view .LVU295
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 13 is_stmt 0 view .LVU296
 897 0006 21F40F11 		bic	r1, r1, #2342912
 898 000a 8628     		cmp	r0, #134
 899 000c 0CBF     		ite	eq
 900 000e 4FF40812 		moveq	r2, #2228224
 901 0012 4FF40012 		movne	r2, #2097152
 902 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 903              		.loc 1 557 16 view .LVU297
 904 0018 0021     		movs	r1, #0
ARM GAS  /tmp/ccwxoOej.s 			page 73


 560:src/keys.c    **** 	State2.local = 0;
 905              		.loc 1 560 13 view .LVU298
 906 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 907              		.loc 1 557 16 view .LVU299
 908 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 909              		.loc 1 558 2 is_stmt 1 view .LVU300
 558:src/keys.c    **** 	State2.rarg = 1;
 910              		.loc 1 558 18 is_stmt 0 view .LVU301
 911 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 912              		.loc 1 559 2 is_stmt 1 view .LVU302
 560:src/keys.c    **** 	State2.local = 0;
 913              		.loc 1 560 2 view .LVU303
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 914              		.loc 1 561 2 view .LVU304
 562:src/keys.c    **** }
 915              		.loc 1 562 2 view .LVU305
 563:src/keys.c    **** 
 916              		.loc 1 563 1 is_stmt 0 view .LVU306
 917 0020 7047     		bx	lr
 918              	.L82:
 919 0022 00BF     		.align	2
 920              	.L81:
 921 0024 00000000 		.word	StateWhileOn
 922              		.cfi_endproc
 923              	.LFE66:
 925              		.section	.text.reset_arg,"ax",%progbits
 926              		.align	1
 927              		.p2align 2,,3
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 931              		.fpu fpv4-sp-d16
 933              	reset_arg:
 934              	.LFB34:
1899:src/keys.c    **** 	init_arg((enum rarg) 0);
 935              		.loc 1 1899 29 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
1900:src/keys.c    **** 	State2.rarg = 0;
 939              		.loc 1 1900 2 view .LVU308
 940              	.LVL73:
 941              	.LBB334:
 942              	.LBI334:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 943              		.loc 1 552 13 view .LVU309
 944              	.LBB335:
 553:src/keys.c    **** 		return;
 945              		.loc 1 553 2 view .LVU310
 946              	.LBE335:
 947              	.LBE334:
1899:src/keys.c    **** 	init_arg((enum rarg) 0);
 948              		.loc 1 1899 29 is_stmt 0 view .LVU311
 949 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccwxoOej.s 			page 74


 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 3, -8
 952              		.cfi_offset 14, -4
 953              	.LBB337:
 954              	.LBB336:
 553:src/keys.c    **** 		return;
 955              		.loc 1 553 6 view .LVU312
 956 0002 FFF7FEFF 		bl	is_bad_cmdline
 957              	.LVL74:
 553:src/keys.c    **** 		return;
 958              		.loc 1 553 5 view .LVU313
 959 0006 08B9     		cbnz	r0, .L84
 960 0008 FFF7FEFF 		bl	init_arg.part.0
 961              	.LVL75:
 962              	.L84:
 553:src/keys.c    **** 		return;
 963              		.loc 1 553 5 view .LVU314
 964              	.LBE336:
 965              	.LBE337:
1901:src/keys.c    **** }
 966              		.loc 1 1901 2 is_stmt 1 view .LVU315
1901:src/keys.c    **** }
 967              		.loc 1 1901 14 is_stmt 0 view .LVU316
 968 000c 024B     		ldr	r3, .L86
 969 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 970 0010 6FF34512 		bfc	r2, #5, #1
 971 0014 9A75     		strb	r2, [r3, #22]
1902:src/keys.c    **** 
 972              		.loc 1 1902 1 view .LVU317
 973 0016 08BD     		pop	{r3, pc}
 974              	.L87:
 975              		.align	2
 976              	.L86:
 977 0018 00000000 		.word	StateWhileOn
 978              		.cfi_endproc
 979              	.LFE34:
 981              		.section	.text.arg_eval,"ax",%progbits
 982              		.align	1
 983              		.p2align 2,,3
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
 989              	arg_eval:
 990              	.LVL76:
 991              	.LFB35:
1904:src/keys.c    ****    const unsigned int base = CmdBase;
 992              		.loc 1 1904 40 is_stmt 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
1905:src/keys.c    ****    int r = RARG(base, val 
 996              		.loc 1 1905 4 view .LVU319
1904:src/keys.c    ****    const unsigned int base = CmdBase;
 997              		.loc 1 1904 40 is_stmt 0 view .LVU320
 998 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 999              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccwxoOej.s 			page 75


 1000              		.cfi_offset 3, -24
 1001              		.cfi_offset 4, -20
 1002              		.cfi_offset 5, -16
 1003              		.cfi_offset 6, -12
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
1905:src/keys.c    ****    int r = RARG(base, val 
 1006              		.loc 1 1905 30 view .LVU321
 1007 0002 234B     		ldr	r3, .L112
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1008              		.loc 1 1906 12 view .LVU322
 1009 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 1010 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1905:src/keys.c    ****    int r = RARG(base, val 
 1011              		.loc 1 1905 23 view .LVU323
 1012 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 1013              	.LVL77:
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1014              		.loc 1 1906 4 is_stmt 1 view .LVU324
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1906 12 is_stmt 0 view .LVU325
 1016 000a EE07     		lsls	r6, r5, #31
1909:src/keys.c    **** 
 1017              		.loc 1 1909 34 view .LVU326
 1018 000c 214E     		ldr	r6, .L112+4
 1019 000e 3668     		ldr	r6, [r6]
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1020              		.loc 1 1906 12 view .LVU327
 1021 0010 01F08003 		and	r3, r1, #128
1909:src/keys.c    **** 
 1022              		.loc 1 1909 32 view .LVU328
 1023 0014 96F8EA7F 		ldrb	r7, [r6, #4074]	@ zero_extendqisi2
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1024              		.loc 1 1906 12 view .LVU329
 1025 0018 0344     		add	r3, r3, r0
 1026 001a 02F12004 		add	r4, r2, #32
 1027 001e 48BF     		it	mi
 1028 0020 7033     		addmi	r3, r3, #112
 1029 0022 2402     		lsls	r4, r4, #8
1909:src/keys.c    **** 
 1030              		.loc 1 1909 79 view .LVU330
 1031 0024 3F07     		lsls	r7, r7, #28
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1032              		.loc 1 1906 12 view .LVU331
 1033 0026 44EA0304 		orr	r4, r4, r3
 1034              	.LVL78:
1909:src/keys.c    **** 
 1035              		.loc 1 1909 4 is_stmt 1 view .LVU332
1909:src/keys.c    **** 
 1036              		.loc 1 1909 79 is_stmt 0 view .LVU333
 1037 002a 25D5     		bpl	.L95
1909:src/keys.c    **** 
 1038              		.loc 1 1909 79 discriminator 2 view .LVU334
 1039 002c 15F0400F 		tst	r5, #64
 1040 0030 0CBF     		ite	eq
 1041 0032 0425     		moveq	r5, #4
 1042 0034 0825     		movne	r5, #8
ARM GAS  /tmp/ccwxoOej.s 			page 76


 1043              	.L90:
 1044              	.LVL79:
1911:src/keys.c    ****      /*
 1045              		.loc 1 1911 4 is_stmt 1 discriminator 6 view .LVU335
1911:src/keys.c    ****      /*
 1046              		.loc 1 1911 7 is_stmt 0 discriminator 6 view .LVU336
 1047 0036 0B06     		lsls	r3, r1, #24
 1048 0038 1AD4     		bmi	.L91
1927:src/keys.c    ****        if (C_LOCKED) {
 1049              		.loc 1 1927 6 is_stmt 1 view .LVU337
1927:src/keys.c    ****        if (C_LOCKED) {
 1050              		.loc 1 1927 23 is_stmt 0 view .LVU338
 1051 003a 174B     		ldr	r3, .L112+8
 1052 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1053 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1927:src/keys.c    ****        if (C_LOCKED) {
 1054              		.loc 1 1927 9 view .LVU339
 1055 0042 DF06     		lsls	r7, r3, #27
 1056 0044 10D5     		bpl	.L92
1927:src/keys.c    ****        if (C_LOCKED) {
 1057              		.loc 1 1927 55 discriminator 1 view .LVU340
 1058 0046 96F8AC3F 		ldrb	r3, [r6, #4012]	@ zero_extendqisi2
 1059 004a 03F04103 		and	r3, r3, #65
1927:src/keys.c    ****        if (C_LOCKED) {
 1060              		.loc 1 1927 40 discriminator 1 view .LVU341
 1061 004e 412B     		cmp	r3, #65
 1062 0050 0CBF     		ite	eq
 1063 0052 0021     		moveq	r1, #0
 1064 0054 6221     		movne	r1, #98
1927:src/keys.c    ****        if (C_LOCKED) {
 1065              		.loc 1 1927 30 discriminator 1 view .LVU342
 1066 0056 8142     		cmp	r1, r0
 1067 0058 06D2     		bcs	.L92
1927:src/keys.c    ****        if (C_LOCKED) {
 1068              		.loc 1 1927 86 discriminator 6 view .LVU343
 1069 005a C107     		lsls	r1, r0, #31
 1070 005c 04D5     		bpl	.L92
1928:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1071              		.loc 1 1928 8 is_stmt 1 view .LVU344
1928:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1072              		.loc 1 1928 11 is_stmt 0 view .LVU345
 1073 005e 412B     		cmp	r3, #65
 1074 0060 11D0     		beq	.L110
 1075              	.LVL80:
 1076              	.L99:
1933:src/keys.c    ****        }
 1077              		.loc 1 1933 10 view .LVU346
 1078 0062 3324     		movs	r4, #51
 1079              	.LVL81:
1948:src/keys.c    **** 
 1080              		.loc 1 1948 2 view .LVU347
 1081 0064 2046     		mov	r0, r4
 1082              	.LVL82:
1948:src/keys.c    **** 
 1083              		.loc 1 1948 2 view .LVU348
 1084 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1085              	.LVL83:
ARM GAS  /tmp/ccwxoOej.s 			page 77


 1086              	.L92:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1087              		.loc 1 1941 6 is_stmt 1 view .LVU349
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1088              		.loc 1 1941 31 is_stmt 0 view .LVU350
 1089 0068 A2F12203 		sub	r3, r2, #34
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1090              		.loc 1 1941 9 view .LVU351
 1091 006c 012B     		cmp	r3, #1
 1092 006e 05D9     		bls	.L111
 1093              	.LVL84:
 1094              	.L91:
1946:src/keys.c    ****    return r;
 1095              		.loc 1 1946 4 is_stmt 1 view .LVU352
 1096 0070 FFF7FEFF 		bl	reset_arg
 1097              	.LVL85:
1947:src/keys.c    ****  }
 1098              		.loc 1 1947 4 view .LVU353
 1099              	.L88:
1948:src/keys.c    **** 
 1100              		.loc 1 1948 2 is_stmt 0 view .LVU354
 1101 0074 2046     		mov	r0, r4
 1102 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1103              	.LVL86:
 1104              	.L95:
1909:src/keys.c    **** 
 1105              		.loc 1 1909 79 view .LVU355
 1106 0078 0425     		movs	r5, #4
 1107 007a DCE7     		b	.L90
 1108              	.LVL87:
 1109              	.L111:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1110              		.loc 1 1941 76 discriminator 1 view .LVU356
 1111 007c C5F16405 		rsb	r5, r5, #100
 1112              	.LVL88:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1113              		.loc 1 1941 55 discriminator 1 view .LVU357
 1114 0080 8542     		cmp	r5, r0
 1115 0082 F5D2     		bcs	.L91
 1116 0084 EDE7     		b	.L99
 1117              	.LVL89:
 1118              	.L110:
1929:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1119              		.loc 1 1929 3 is_stmt 1 view .LVU358
 1120 0086 1920     		movs	r0, #25
 1121              	.LVL90:
1929:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1122              		.loc 1 1929 3 is_stmt 0 view .LVU359
 1123 0088 FFF7FEFF 		bl	error_message
 1124              	.LVL91:
1930:src/keys.c    ****        }
 1125              		.loc 1 1930 3 is_stmt 1 view .LVU360
1930:src/keys.c    ****        }
 1126              		.loc 1 1930 10 is_stmt 0 view .LVU361
 1127 008c 3324     		movs	r4, #51
 1128              	.LVL92:
1930:src/keys.c    ****        }
ARM GAS  /tmp/ccwxoOej.s 			page 78


 1129              		.loc 1 1930 10 view .LVU362
 1130 008e F1E7     		b	.L88
 1131              	.L113:
 1132              		.align	2
 1133              	.L112:
 1134 0090 00000000 		.word	StateWhileOn
 1135 0094 00000000 		.word	main_ram
 1136 0098 00000000 		.word	argcmds
 1137              		.cfi_endproc
 1138              	.LFE35:
 1140              		.section	.text.arg_digit,"ax",%progbits
 1141              		.align	1
 1142              		.p2align 2,,3
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu fpv4-sp-d16
 1148              	arg_digit:
 1149              	.LVL93:
 1150              	.LFB36:
1950:src/keys.c    **** 	int lim;
 1151              		.loc 1 1950 29 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 8
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
1951:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1155              		.loc 1 1951 2 view .LVU364
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1156              		.loc 1 1953 2 view .LVU365
1950:src/keys.c    **** 	int lim;
 1157              		.loc 1 1950 29 is_stmt 0 view .LVU366
 1158 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1159              		.cfi_def_cfa_offset 20
 1160              		.cfi_offset 4, -20
 1161              		.cfi_offset 5, -16
 1162              		.cfi_offset 6, -12
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
1954:src/keys.c    **** #else
 1165              		.loc 1 1954 29 view .LVU367
 1166 0002 3C4D     		ldr	r5, .L149
1950:src/keys.c    **** 	int lim;
 1167              		.loc 1 1950 29 view .LVU368
 1168 0004 83B0     		sub	sp, sp, #12
 1169              		.cfi_def_cfa_offset 32
1950:src/keys.c    **** 	int lim;
 1170              		.loc 1 1950 29 view .LVU369
 1171 0006 0446     		mov	r4, r0
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1172              		.loc 1 1953 17 view .LVU370
 1173 0008 01A8     		add	r0, sp, #4
 1174              	.LVL94:
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1175              		.loc 1 1953 17 view .LVU371
 1176 000a FFF7FEFF 		bl	get_dispmode_digs
 1177              	.LVL95:
1954:src/keys.c    **** #else
ARM GAS  /tmp/ccwxoOej.s 			page 79


 1178              		.loc 1 1954 29 view .LVU372
 1179 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1180              	.LVL96:
1954:src/keys.c    **** #else
 1181              		.loc 1 1954 2 is_stmt 1 view .LVU373
 1182 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1954:src/keys.c    **** #else
 1183              		.loc 1 1954 130 is_stmt 0 view .LVU374
 1184 0012 11F0400C 		ands	ip, r1, #64
 1185 0016 01D0     		beq	.L117
1954:src/keys.c    **** #else
 1186              		.loc 1 1954 44 discriminator 2 view .LVU375
 1187 0018 502E     		cmp	r6, #80
 1188 001a 5DD0     		beq	.L144
 1189              	.LVL97:
 1190              	.L117:
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1191              		.loc 1 1958 2 is_stmt 1 discriminator 8 view .LVU376
1959:src/keys.c    **** 	
 1192              		.loc 1 1959 34 is_stmt 0 discriminator 8 view .LVU377
 1193 001c 364A     		ldr	r2, .L149+4
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1194              		.loc 1 1958 33 discriminator 8 view .LVU378
 1195 001e 2B89     		ldrh	r3, [r5, #8]
1959:src/keys.c    **** 	
 1196              		.loc 1 1959 34 discriminator 8 view .LVU379
 1197 0020 02EB0612 		add	r2, r2, r6, lsl #4
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1198              		.loc 1 1958 41 discriminator 8 view .LVU380
 1199 0024 03EB8303 		add	r3, r3, r3, lsl #2
1959:src/keys.c    **** 	
 1200              		.loc 1 1959 34 discriminator 8 view .LVU381
 1201 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1959:src/keys.c    **** 	
 1202              		.loc 1 1959 39 discriminator 8 view .LVU382
 1203 002a B807     		lsls	r0, r7, #30
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1204              		.loc 1 1958 46 discriminator 8 view .LVU383
 1205 002c 04EB4304 		add	r4, r4, r3, lsl #1
 1206              	.LVL98:
1959:src/keys.c    **** 	
 1207              		.loc 1 1959 2 is_stmt 1 discriminator 8 view .LVU384
1959:src/keys.c    **** 	
 1208              		.loc 1 1959 39 is_stmt 0 discriminator 8 view .LVU385
 1209 0030 C7F34003 		ubfx	r3, r7, #1, #1
 1210 0034 2AD4     		bmi	.L143
1959:src/keys.c    **** 	
 1211              		.loc 1 1959 39 discriminator 2 view .LVU386
 1212 0036 95F91500 		ldrsb	r0, [r5, #21]
 1213 003a 0028     		cmp	r0, #0
 1214 003c 26DB     		blt	.L143
 1215              	.LVL99:
1961:src/keys.c    **** 		// Handle local registers and flags
 1216              		.loc 1 1961 2 is_stmt 1 view .LVU387
1961:src/keys.c    **** 		// Handle local registers and flags
 1217              		.loc 1 1961 5 is_stmt 0 view .LVU388
 1218 003e C907     		lsls	r1, r1, #31
ARM GAS  /tmp/ccwxoOej.s 			page 80


 1219 0040 27D4     		bmi	.L119
1974:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1220              		.loc 1 1974 7 is_stmt 1 view .LVU389
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1221              		.loc 1 1977 3 view .LVU390
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1222              		.loc 1 1977 9 is_stmt 0 view .LVU391
 1223 0042 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1224              		.loc 1 1977 7 view .LVU392
 1225 0044 0190     		str	r0, [sp, #4]
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1226              		.loc 1 1978 3 is_stmt 1 view .LVU393
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1227              		.loc 1 1978 6 is_stmt 0 view .LVU394
 1228 0046 7F28     		cmp	r0, #127
 1229 0048 4BDC     		bgt	.L145
 1230              	.LVL100:
 1231              	.L123:
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1232              		.loc 1 1981 2 is_stmt 1 view .LVU395
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1233              		.loc 1 1981 5 is_stmt 0 view .LVU396
 1234 004a 8442     		cmp	r4, r0
 1235 004c 3FDC     		bgt	.L128
 1236              	.L148:
1984:src/keys.c    **** 	++State2.numdigit;
 1237              		.loc 1 1984 2 is_stmt 1 view .LVU397
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1238              		.loc 1 1985 2 is_stmt 0 view .LVU398
 1239 004e EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1984:src/keys.c    **** 	++State2.numdigit;
 1240              		.loc 1 1984 16 view .LVU399
 1241 0050 2C81     		strh	r4, [r5, #8]	@ movhi
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1242              		.loc 1 1985 2 is_stmt 1 view .LVU400
 1243 0052 0137     		adds	r7, r7, #1
1986:src/keys.c    **** 		int result = arg_eval(val);
 1244              		.loc 1 1986 16 is_stmt 0 view .LVU401
 1245 0054 04EB8403 		add	r3, r4, r4, lsl #2
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1246              		.loc 1 1985 2 view .LVU402
 1247 0058 FFB2     		uxtb	r7, r7
1986:src/keys.c    **** 		int result = arg_eval(val);
 1248              		.loc 1 1986 5 view .LVU403
 1249 005a B0EB430F 		cmp	r0, r3, lsl #1
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1250              		.loc 1 1985 2 view .LVU404
 1251 005e EF72     		strb	r7, [r5, #11]
1986:src/keys.c    **** 		int result = arg_eval(val);
 1252              		.loc 1 1986 2 is_stmt 1 view .LVU405
1986:src/keys.c    **** 		int result = arg_eval(val);
 1253              		.loc 1 1986 5 is_stmt 0 view .LVU406
 1254 0060 04DB     		blt	.L131
1986:src/keys.c    **** 		int result = arg_eval(val);
 1255              		.loc 1 1986 49 discriminator 1 view .LVU407
 1256 0062 3046     		mov	r0, r6
ARM GAS  /tmp/ccwxoOej.s 			page 81


 1257 0064 FFF7FEFF 		bl	num_arg_digits
 1258              	.LVL101:
1986:src/keys.c    **** 		int result = arg_eval(val);
 1259              		.loc 1 1986 27 discriminator 1 view .LVU408
 1260 0068 8742     		cmp	r7, r0
 1261 006a 30DB     		blt	.L128
 1262              	.L131:
 1263              	.LBB338:
1987:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1264              		.loc 1 1987 3 is_stmt 1 view .LVU409
1987:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1265              		.loc 1 1987 16 is_stmt 0 view .LVU410
 1266 006c 2046     		mov	r0, r4
 1267 006e FFF7FEFF 		bl	arg_eval
 1268              	.LVL102:
1988:src/keys.c    **** 			--State2.numdigit;
 1269              		.loc 1 1988 3 is_stmt 1 view .LVU411
1988:src/keys.c    **** 			--State2.numdigit;
 1270              		.loc 1 1988 6 is_stmt 0 view .LVU412
 1271 0072 3328     		cmp	r0, #51
 1272 0074 08D1     		bne	.L114
1989:src/keys.c    **** 			State2.digval /= 10;
 1273              		.loc 1 1989 4 is_stmt 1 view .LVU413
1990:src/keys.c    **** 		}
 1274              		.loc 1 1990 18 is_stmt 0 view .LVU414
 1275 0076 2B89     		ldrh	r3, [r5, #8]
 1276 0078 2049     		ldr	r1, .L149+8
1989:src/keys.c    **** 			State2.digval /= 10;
 1277              		.loc 1 1989 4 view .LVU415
 1278 007a EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1990:src/keys.c    **** 		}
 1279              		.loc 1 1990 18 view .LVU416
 1280 007c A1FB0313 		umull	r1, r3, r1, r3
 1281 0080 DB08     		lsrs	r3, r3, #3
1989:src/keys.c    **** 			State2.digval /= 10;
 1282              		.loc 1 1989 4 view .LVU417
 1283 0082 013A     		subs	r2, r2, #1
1990:src/keys.c    **** 		}
 1284              		.loc 1 1990 18 view .LVU418
 1285 0084 2B81     		strh	r3, [r5, #8]	@ movhi
1989:src/keys.c    **** 			State2.digval /= 10;
 1286              		.loc 1 1989 4 view .LVU419
 1287 0086 EA72     		strb	r2, [r5, #11]
1990:src/keys.c    **** 		}
 1288              		.loc 1 1990 4 is_stmt 1 view .LVU420
 1289              	.L114:
 1290              	.LBE338:
1995:src/keys.c    **** 
 1291              		.loc 1 1995 1 is_stmt 0 view .LVU421
 1292 0088 03B0     		add	sp, sp, #12
 1293              		.cfi_remember_state
 1294              		.cfi_def_cfa_offset 20
 1295              		@ sp needed
 1296 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 1297              	.LVL103:
 1298              	.L143:
 1299              		.cfi_restore_state
ARM GAS  /tmp/ccwxoOej.s 			page 82


1961:src/keys.c    **** 		// Handle local registers and flags
 1300              		.loc 1 1961 2 is_stmt 1 view .LVU422
1961:src/keys.c    **** 		// Handle local registers and flags
 1301              		.loc 1 1961 5 is_stmt 0 view .LVU423
 1302 008c C807     		lsls	r0, r1, #31
 1303 008e 17D5     		bpl	.L146
1959:src/keys.c    **** 	
 1304              		.loc 1 1959 39 view .LVU424
 1305 0090 0123     		movs	r3, #1
 1306              	.LVL104:
 1307              	.L119:
1963:src/keys.c    **** 		if (State2.runmode) {
 1308              		.loc 1 1963 3 is_stmt 1 view .LVU425
1963:src/keys.c    **** 		if (State2.runmode) {
 1309              		.loc 1 1963 7 is_stmt 0 view .LVU426
 1310 0092 0F27     		movs	r7, #15
 1311 0094 0197     		str	r7, [sp, #4]
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1312              		.loc 1 1964 3 is_stmt 1 view .LVU427
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1313              		.loc 1 1964 6 is_stmt 0 view .LVU428
 1314 0096 BCF1000F 		cmp	ip, #0
 1315 009a 1BD0     		beq	.L136
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1316              		.loc 1 1965 4 is_stmt 1 view .LVU429
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1317              		.loc 1 1965 18 is_stmt 0 view .LVU430
 1318 009c 184A     		ldr	r2, .L149+12
 1319 009e 1268     		ldr	r2, [r2]
 1320 00a0 B2F8DE2F 		ldrh	r2, [r2, #4062]
 1321 00a4 22F01F02 		bic	r2, r2, #31
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1322              		.loc 1 1965 7 view .LVU431
 1323 00a8 92B2     		uxth	r2, r2
 1324 00aa 82B1     		cbz	r2, .L128
1967:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1325              		.loc 1 1967 4 is_stmt 1 view .LVU432
1967:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1326              		.loc 1 1967 7 is_stmt 0 view .LVU433
 1327 00ac 93B1     		cbz	r3, .L136
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1328              		.loc 1 1968 5 is_stmt 1 view .LVU434
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1329              		.loc 1 1968 11 is_stmt 0 view .LVU435
 1330 00ae F0B2     		uxtb	r0, r6
 1331 00b0 FFF7FEFF 		bl	local_regs_rarg
 1332              	.LVL105:
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1333              		.loc 1 1968 45 view .LVU436
 1334 00b4 0138     		subs	r0, r0, #1
1969:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1335              		.loc 1 1969 5 is_stmt 1 view .LVU437
1969:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1336              		.loc 1 1969 8 is_stmt 0 view .LVU438
 1337 00b6 0F28     		cmp	r0, #15
 1338 00b8 06DD     		ble	.L142
1970:src/keys.c    **** 			}
ARM GAS  /tmp/ccwxoOej.s 			page 83


 1339              		.loc 1 1970 6 is_stmt 1 view .LVU439
1970:src/keys.c    **** 			}
 1340              		.loc 1 1970 10 is_stmt 0 view .LVU440
 1341 00ba 0197     		str	r7, [sp, #4]
 1342 00bc 3846     		mov	r0, r7
 1343 00be C4E7     		b	.L123
 1344              	.LVL106:
 1345              	.L146:
1975:src/keys.c    **** 	else {
 1346              		.loc 1 1975 3 is_stmt 1 view .LVU441
1975:src/keys.c    **** 	else {
 1347              		.loc 1 1975 65 is_stmt 0 view .LVU442
 1348 00c0 BCF1000F 		cmp	ip, #0
 1349 00c4 11D1     		bne	.L147
 1350 00c6 6320     		movs	r0, #99
 1351              	.LVL107:
 1352              	.L142:
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1353              		.loc 1 1981 5 view .LVU443
 1354 00c8 8442     		cmp	r4, r0
1979:src/keys.c    **** 	}
 1355              		.loc 1 1979 8 view .LVU444
 1356 00ca 0190     		str	r0, [sp, #4]
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1357              		.loc 1 1981 2 is_stmt 1 view .LVU445
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1358              		.loc 1 1981 5 is_stmt 0 view .LVU446
 1359 00cc BFDD     		ble	.L148
 1360              	.L128:
1966:src/keys.c    **** 			if (is_reg) {
 1361              		.loc 1 1966 12 view .LVU447
 1362 00ce 3320     		movs	r0, #51
1995:src/keys.c    **** 
 1363              		.loc 1 1995 1 view .LVU448
 1364 00d0 03B0     		add	sp, sp, #12
 1365              		.cfi_remember_state
 1366              		.cfi_def_cfa_offset 20
 1367              		@ sp needed
 1368 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1369              	.LVL108:
 1370              	.L136:
 1371              		.cfi_restore_state
1995:src/keys.c    **** 
 1372              		.loc 1 1995 1 view .LVU449
 1373 00d4 3846     		mov	r0, r7
 1374 00d6 B8E7     		b	.L123
 1375              	.LVL109:
 1376              	.L144:
1954:src/keys.c    **** #else
 1377              		.loc 1 1954 93 discriminator 4 view .LVU450
 1378 00d8 0438     		subs	r0, r0, #4
 1379              	.LVL110:
1954:src/keys.c    **** #else
 1380              		.loc 1 1954 68 discriminator 4 view .LVU451
 1381 00da 0128     		cmp	r0, #1
1954:src/keys.c    **** #else
 1382              		.loc 1 1954 130 discriminator 4 view .LVU452
ARM GAS  /tmp/ccwxoOej.s 			page 84


 1383 00dc 98BF     		it	ls
 1384 00de 9426     		movls	r6, #148
 1385 00e0 9CE7     		b	.L117
 1386              	.LVL111:
 1387              	.L145:
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1388              		.loc 1 1978 23 discriminator 1 view .LVU453
 1389 00e2 FB07     		lsls	r3, r7, #31
 1390 00e4 B1D5     		bpl	.L123
1979:src/keys.c    **** 	}
 1391              		.loc 1 1979 4 is_stmt 1 view .LVU454
1979:src/keys.c    **** 	}
 1392              		.loc 1 1979 8 is_stmt 0 view .LVU455
 1393 00e6 7F20     		movs	r0, #127
 1394 00e8 EEE7     		b	.L142
 1395              	.LVL112:
 1396              	.L147:
1975:src/keys.c    **** 	else {
 1397              		.loc 1 1975 26 discriminator 1 view .LVU456
 1398 00ea F0B2     		uxtb	r0, r6
 1399 00ec FFF7FEFF 		bl	global_regs_rarg
 1400              	.LVL113:
1975:src/keys.c    **** 	else {
 1401              		.loc 1 1975 61 discriminator 1 view .LVU457
 1402 00f0 0138     		subs	r0, r0, #1
 1403 00f2 E9E7     		b	.L142
 1404              	.L150:
 1405              		.align	2
 1406              	.L149:
 1407 00f4 00000000 		.word	StateWhileOn
 1408 00f8 00000000 		.word	argcmds
 1409 00fc CDCCCCCC 		.word	-858993459
 1410 0100 00000000 		.word	main_ram
 1411              		.cfi_endproc
 1412              	.LFE36:
 1414              		.section	.text.process_arg_shuffle,"ax",%progbits
 1415              		.align	1
 1416              		.p2align 2,,3
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu fpv4-sp-d16
 1422              	process_arg_shuffle:
 1423              	.LVL114:
 1424              	.LFB41:
2062:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1425              		.loc 1 2062 39 is_stmt 1 view -0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429              		@ link register save eliminated.
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1430              		.loc 1 2063 2 view .LVU459
2062:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1431              		.loc 1 2062 39 is_stmt 0 view .LVU460
 1432 0000 10B4     		push	{r4}
 1433              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccwxoOej.s 			page 85


 1434              		.cfi_offset 4, -4
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1435              		.loc 1 2063 31 view .LVU461
 1436 0002 0A4A     		ldr	r2, .L154
 1437 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1438              		.loc 1 2063 16 view .LVU462
 1439 0006 1189     		ldrh	r1, [r2, #8]
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1440              		.loc 1 2063 43 view .LVU463
 1441 0008 5C00     		lsls	r4, r3, #1
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1442              		.loc 1 2063 21 view .LVU464
 1443 000a A040     		lsls	r0, r0, r4
 1444              	.LVL115:
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1445              		.loc 1 2063 40 view .LVU465
 1446 000c 0133     		adds	r3, r3, #1
 1447 000e DBB2     		uxtb	r3, r3
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1448              		.loc 1 2063 16 view .LVU466
 1449 0010 0844     		add	r0, r0, r1
 1450 0012 80B2     		uxth	r0, r0
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1451              		.loc 1 2064 5 view .LVU467
 1452 0014 032B     		cmp	r3, #3
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1453              		.loc 1 2063 40 view .LVU468
 1454 0016 D372     		strb	r3, [r2, #11]
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1455              		.loc 1 2063 16 view .LVU469
 1456 0018 1081     		strh	r0, [r2, #8]	@ movhi
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1457              		.loc 1 2064 2 is_stmt 1 view .LVU470
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1458              		.loc 1 2064 5 is_stmt 0 view .LVU471
 1459 001a 03D9     		bls	.L152
2066:src/keys.c    **** }
 1460              		.loc 1 2066 2 is_stmt 1 view .LVU472
2067:src/keys.c    **** 
 1461              		.loc 1 2067 1 is_stmt 0 view .LVU473
 1462 001c 5DF8044B 		ldr	r4, [sp], #4
 1463              		.cfi_remember_state
 1464              		.cfi_restore 4
 1465              		.cfi_def_cfa_offset 0
2066:src/keys.c    **** }
 1466              		.loc 1 2066 9 view .LVU474
 1467 0020 FFF7FEBF 		b	arg_eval
 1468              	.LVL116:
 1469              	.L152:
 1470              		.cfi_restore_state
2067:src/keys.c    **** 
 1471              		.loc 1 2067 1 view .LVU475
 1472 0024 3320     		movs	r0, #51
 1473 0026 5DF8044B 		ldr	r4, [sp], #4
 1474              		.cfi_restore 4
 1475              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccwxoOej.s 			page 86


 1476 002a 7047     		bx	lr
 1477              	.L155:
 1478              		.align	2
 1479              	.L154:
 1480 002c 00000000 		.word	StateWhileOn
 1481              		.cfi_endproc
 1482              	.LFE41:
 1484              		.section	.text.process_h_shifted,"ax",%progbits
 1485              		.align	1
 1486              		.p2align 2,,3
 1487              		.syntax unified
 1488              		.thumb
 1489              		.thumb_func
 1490              		.fpu fpv4-sp-d16
 1492              	process_h_shifted:
 1493              	.LVL117:
 1494              	.LFB21:
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1495              		.loc 1 1101 47 is_stmt 1 view -0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
1104:src/keys.c    **** 		// Row 1
 1499              		.loc 1 1104 2 view .LVU477
1155:src/keys.c    **** 	int op = op_map[lc];
 1500              		.loc 1 1155 2 view .LVU478
 1501              	.LBB339:
 1502              	.LBB340:
 158:src/keys.c    **** }
 1503              		.loc 1 158 23 is_stmt 0 view .LVU479
 1504 0000 314A     		ldr	r2, .L187
 1505              	.LBE340:
 1506              	.LBE339:
1156:src/keys.c    **** 	reset_shift();
 1507              		.loc 1 1156 17 view .LVU480
 1508 0002 324B     		ldr	r3, .L187+4
 1509              	.LBB343:
 1510              	.LBB341:
 158:src/keys.c    **** }
 1511              		.loc 1 158 23 view .LVU481
 1512 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1513              	.LBE341:
 1514              	.LBE343:
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1515              		.loc 1 1101 47 view .LVU482
 1516 0006 70B5     		push	{r4, r5, r6, lr}
 1517              		.cfi_def_cfa_offset 16
 1518              		.cfi_offset 4, -16
 1519              		.cfi_offset 5, -12
 1520              		.cfi_offset 6, -8
 1521              		.cfi_offset 14, -4
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1522              		.loc 1 1101 47 view .LVU483
 1523 0008 0446     		mov	r4, r0
 1524              	.LVL118:
 1525              	.LBB344:
 1526              	.LBI339:
ARM GAS  /tmp/ccwxoOej.s 			page 87


 146:src/keys.c    **** {
 1527              		.loc 1 146 12 is_stmt 1 view .LVU484
 1528              	.LBB342:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1529              		.loc 1 148 2 view .LVU485
 158:src/keys.c    **** }
 1530              		.loc 1 158 2 view .LVU486
 158:src/keys.c    **** }
 1531              		.loc 1 158 2 is_stmt 0 view .LVU487
 1532              	.LBE342:
 1533              	.LBE344:
1156:src/keys.c    **** 	reset_shift();
 1534              		.loc 1 1156 2 is_stmt 1 view .LVU488
 1535              	.LBB345:
 1536              	.LBB346:
 1537              	.LBB347:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1538              		.loc 1 106 16 is_stmt 0 view .LVU489
 1539 000a 314E     		ldr	r6, .L187+8
 1540              	.LBE347:
 1541              	.LBE346:
 1542              	.LBE345:
1156:src/keys.c    **** 	reset_shift();
 1543              		.loc 1 1156 17 view .LVU490
 1544 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1545              	.LVL119:
1157:src/keys.c    **** 
 1546              		.loc 1 1157 2 is_stmt 1 view .LVU491
 1547              	.LBB354:
 1548              	.LBI345:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1549              		.loc 1 114 13 view .LVU492
 1550              	.LBE354:
 115:src/keys.c    **** }
 1551              		.loc 1 115 2 view .LVU493
 1552              	.LBB355:
 1553              	.LBB352:
 1554              	.LBI346:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1555              		.loc 1 104 20 view .LVU494
 1556              	.LBB350:
 105:src/keys.c    **** 	State2.shifts = shift;
 1557              		.loc 1 105 2 view .LVU495
 1558              	.LBB348:
 1559              	.LBI348:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1560              		.loc 1 96 13 view .LVU496
 1561              	.LBB349:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1562              		.loc 1 97 2 view .LVU497
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1563              		.loc 1 97 18 is_stmt 0 view .LVU498
 1564 0010 FFF7FEFF 		bl	shift_down
 1565              	.LVL120:
  98:src/keys.c    **** }
 1566              		.loc 1 98 2 is_stmt 1 view .LVU499
 1567              	.LBE349:
ARM GAS  /tmp/ccwxoOej.s 			page 88


 1568              	.LBE348:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1569              		.loc 1 106 2 view .LVU500
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1570              		.loc 1 106 16 is_stmt 0 view .LVU501
 1571 0014 0023     		movs	r3, #0
 1572              	.LBE350:
 1573              	.LBE352:
 1574              	.LBE355:
1160:src/keys.c    **** 	case K62:
 1575              		.loc 1 1160 2 view .LVU502
 1576 0016 262C     		cmp	r4, #38
 1577              	.LBB356:
 1578              	.LBB353:
 1579              	.LBB351:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1580              		.loc 1 106 16 view .LVU503
 1581 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1582              		.loc 1 108 2 is_stmt 1 view .LVU504
 1583              	.LVL121:
 108:src/keys.c    **** }
 1584              		.loc 1 108 2 is_stmt 0 view .LVU505
 1585              	.LBE351:
 1586              	.LBE353:
 1587              	.LBE356:
1160:src/keys.c    **** 	case K62:
 1588              		.loc 1 1160 2 is_stmt 1 view .LVU506
 1589 001a 27D0     		beq	.L157
 1590 001c 272C     		cmp	r4, #39
 1591 001e 19D1     		bne	.L159
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1592              		.loc 1 1173 3 view .LVU507
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1593              		.loc 1 1173 7 is_stmt 0 view .LVU508
 1594 0020 FFF7FEFF 		bl	is_bad_cmdline
 1595              	.LVL122:
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1596              		.loc 1 1173 6 view .LVU509
 1597 0024 00BB     		cbnz	r0, .L169
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1598              		.loc 1 1175 3 is_stmt 1 view .LVU510
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1599              		.loc 1 1175 30 is_stmt 0 view .LVU511
 1600 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1601 0028 C3F38012 		ubfx	r2, r3, #6, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1602              		.loc 1 1175 22 view .LVU512
 1603 002c C2F10102 		rsb	r2, r2, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1604              		.loc 1 1175 18 view .LVU513
 1605 0030 62F38613 		bfi	r3, r2, #6, #1
 1606 0034 B375     		strb	r3, [r6, #22]
1176:src/keys.c    **** 		update_program_bounds(1);
 1607              		.loc 1 1176 3 is_stmt 1 view .LVU514
 1608 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1609              	.LVL123:
ARM GAS  /tmp/ccwxoOej.s 			page 89


1177:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1610              		.loc 1 1177 3 view .LVU515
 1611 003a 0120     		movs	r0, #1
 1612 003c FFF7FEFF 		bl	update_program_bounds
 1613              	.LVL124:
1178:src/keys.c    **** 			set_pc(0);
 1614              		.loc 1 1178 3 view .LVU516
1178:src/keys.c    **** 			set_pc(0);
 1615              		.loc 1 1178 7 is_stmt 0 view .LVU517
 1616 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1178:src/keys.c    **** 			set_pc(0);
 1617              		.loc 1 1178 6 view .LVU518
 1618 0042 10F04000 		ands	r0, r0, #64
 1619 0046 05D1     		bne	.L159
1178:src/keys.c    **** 			set_pc(0);
 1620              		.loc 1 1178 27 discriminator 1 view .LVU519
 1621 0048 224B     		ldr	r3, .L187+12
 1622 004a 1B68     		ldr	r3, [r3]
1178:src/keys.c    **** 			set_pc(0);
 1623              		.loc 1 1178 24 discriminator 1 view .LVU520
 1624 004c B3F8E02F 		ldrh	r2, [r3, #4064]
 1625 0050 012A     		cmp	r2, #1
 1626 0052 32D0     		beq	.L183
 1627              	.L159:
1186:src/keys.c    **** 		if (op & _RARG) {
 1628              		.loc 1 1186 2 is_stmt 1 view .LVU521
1186:src/keys.c    **** 		if (op & _RARG) {
 1629              		.loc 1 1186 5 is_stmt 0 view .LVU522
 1630 0054 332D     		cmp	r5, #51
 1631 0056 07D0     		beq	.L169
 1632              	.LVL125:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1633              		.loc 1 1187 3 is_stmt 1 view .LVU523
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1634              		.loc 1 1187 6 is_stmt 0 view .LVU524
 1635 0058 2804     		lsls	r0, r5, #16
 1636 005a 14D5     		bpl	.L184
 1637              	.L167:
1188:src/keys.c    **** 			op = STATE_UNFINISHED;
 1638              		.loc 1 1188 4 is_stmt 1 view .LVU525
 1639              	.LVL126:
 1640              	.LBB357:
 1641              	.LBI357:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1642              		.loc 1 552 13 view .LVU526
 1643              	.LBB358:
 553:src/keys.c    **** 		return;
 1644              		.loc 1 553 2 view .LVU527
 553:src/keys.c    **** 		return;
 1645              		.loc 1 553 6 is_stmt 0 view .LVU528
 1646 005c FFF7FEFF 		bl	is_bad_cmdline
 1647              	.LVL127:
 553:src/keys.c    **** 		return;
 1648              		.loc 1 553 5 view .LVU529
 1649 0060 10B9     		cbnz	r0, .L169
 1650 0062 E8B2     		uxtb	r0, r5
 1651 0064 FFF7FEFF 		bl	init_arg.part.0
ARM GAS  /tmp/ccwxoOej.s 			page 90


 1652              	.LVL128:
 1653              	.L169:
 553:src/keys.c    **** 		return;
 1654              		.loc 1 553 5 view .LVU530
 1655              	.LBE358:
 1656              	.LBE357:
1192:src/keys.c    **** #undef _RARG
 1657              		.loc 1 1192 2 is_stmt 1 view .LVU531
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1658              		.loc 1 1101 47 is_stmt 0 view .LVU532
 1659 0068 3320     		movs	r0, #51
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1660              		.loc 1 1195 1 view .LVU533
 1661 006a 70BD     		pop	{r4, r5, r6, pc}
 1662              	.LVL129:
 1663              	.L157:
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1664              		.loc 1 1162 3 is_stmt 1 view .LVU534
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1665              		.loc 1 1162 7 is_stmt 0 view .LVU535
 1666 006c 194B     		ldr	r3, .L187+12
 1667 006e 1B68     		ldr	r3, [r3]
 1668 0070 93F8E82F 		ldrb	r2, [r3, #4072]	@ zero_extendqisi2
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1669              		.loc 1 1162 6 view .LVU536
 1670 0074 D607     		lsls	r6, r2, #31
 1671 0076 0FD4     		bmi	.L185
1168:src/keys.c    **** #endif
 1672              		.loc 1 1168 4 is_stmt 1 view .LVU537
1168:src/keys.c    **** #endif
 1673              		.loc 1 1168 8 is_stmt 0 view .LVU538
 1674 0078 93F8E73F 		ldrb	r3, [r3, #4071]	@ zero_extendqisi2
1168:src/keys.c    **** #endif
 1675              		.loc 1 1168 7 view .LVU539
 1676 007c 9C06     		lsls	r4, r3, #26
 1677 007e 14D5     		bpl	.L186
 1678 0080 40F24F10 		movw	r0, #335
 1679              	.LVL130:
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1680              		.loc 1 1195 1 view .LVU540
 1681 0084 70BD     		pop	{r4, r5, r6, pc}
 1682              	.L184:
 1683              	.LVL131:
1192:src/keys.c    **** #undef _RARG
 1684              		.loc 1 1192 2 is_stmt 1 view .LVU541
1192:src/keys.c    **** #undef _RARG
 1685              		.loc 1 1192 9 is_stmt 0 view .LVU542
 1686 0086 134B     		ldr	r3, .L187+12
 1687 0088 1B68     		ldr	r3, [r3]
 1688 008a 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
1192:src/keys.c    **** #undef _RARG
 1689              		.loc 1 1192 57 view .LVU543
 1690 008e D907     		lsls	r1, r3, #31
 1691 0090 10D4     		bmi	.L168
 1692              	.LVL132:
 1693              	.L171:
1192:src/keys.c    **** #undef _RARG
ARM GAS  /tmp/ccwxoOej.s 			page 91


 1694              		.loc 1 1192 57 view .LVU544
 1695 0092 25F48040 		bic	r0, r5, #16384
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1696              		.loc 1 1195 1 view .LVU545
 1697 0096 70BD     		pop	{r4, r5, r6, pc}
 1698              	.LVL133:
 1699              	.L185:
1163:src/keys.c    **** 		else
 1700              		.loc 1 1163 4 is_stmt 1 view .LVU546
1163:src/keys.c    **** 		else
 1701              		.loc 1 1163 57 is_stmt 0 view .LVU547
 1702 0098 93F9E73F 		ldrsb	r3, [r3, #4071]
 1703 009c 002B     		cmp	r3, #0
 1704 009e 40F25315 		movw	r5, #339
 1705              	.LVL134:
1163:src/keys.c    **** 		else
 1706              		.loc 1 1163 57 view .LVU548
 1707 00a2 A8BF     		it	ge
 1708 00a4 4FF4AA75 		movge	r5, #340
 1709 00a8 F3E7     		b	.L171
 1710              	.LVL135:
 1711              	.L186:
1186:src/keys.c    **** 		if (op & _RARG) {
 1712              		.loc 1 1186 2 is_stmt 1 view .LVU549
1186:src/keys.c    **** 		if (op & _RARG) {
 1713              		.loc 1 1186 5 is_stmt 0 view .LVU550
 1714 00aa 332D     		cmp	r5, #51
 1715 00ac DCD0     		beq	.L169
 1716              	.LVL136:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1717              		.loc 1 1187 3 is_stmt 1 view .LVU551
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1718              		.loc 1 1187 6 is_stmt 0 view .LVU552
 1719 00ae 2B04     		lsls	r3, r5, #16
 1720 00b0 D4D4     		bmi	.L167
 1721 00b2 EEE7     		b	.L171
 1722              	.LVL137:
 1723              	.L168:
1192:src/keys.c    **** #undef _RARG
 1724              		.loc 1 1192 21 view .LVU553
 1725 00b4 6A04     		lsls	r2, r5, #17
 1726 00b6 D7D4     		bmi	.L169
 1727 00b8 EBE7     		b	.L171
 1728              	.L183:
1178:src/keys.c    **** 			set_pc(0);
 1729              		.loc 1 1178 43 discriminator 2 view .LVU554
 1730 00ba B3F8EE3F 		ldrh	r3, [r3, #4078]
 1731 00be 012B     		cmp	r3, #1
 1732 00c0 C8D1     		bne	.L159
1179:src/keys.c    **** 		break;
 1733              		.loc 1 1179 4 is_stmt 1 view .LVU555
 1734 00c2 FFF7FEFF 		bl	set_pc
 1735              	.LVL138:
 1736 00c6 C5E7     		b	.L159
 1737              	.L188:
 1738              		.align	2
 1739              	.L187:
ARM GAS  /tmp/ccwxoOej.s 			page 92


 1740 00c8 00000000 		.word	.LANCHOR1
 1741 00cc 00000000 		.word	.LANCHOR0
 1742 00d0 00000000 		.word	StateWhileOn
 1743 00d4 00000000 		.word	main_ram
 1744              		.cfi_endproc
 1745              	.LFE21:
 1747              		.section	.text.intltr,"ax",%progbits
 1748              		.align	1
 1749              		.p2align 2,,3
 1750              		.syntax unified
 1751              		.thumb
 1752              		.thumb_func
 1753              		.fpu fpv4-sp-d16
 1755              	intltr:
 1756              	.LVL139:
 1757              	.LFB18:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1758              		.loc 1 761 26 view -0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 0
 1761              		@ frame_needed = 0, uses_anonymous_args = 0
 762:src/keys.c    **** }
 1762              		.loc 1 762 2 view .LVU557
 762:src/keys.c    **** }
 1763              		.loc 1 762 10 is_stmt 0 view .LVU558
 1764 0000 0B4B     		ldr	r3, .L198
 1765 0002 1B68     		ldr	r3, [r3]
 1766 0004 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1767              		.loc 1 762 22 view .LVU559
 1768 0008 13F00103 		ands	r3, r3, #1
 1769 000c 05D0     		beq	.L191
 762:src/keys.c    **** }
 1770              		.loc 1 762 26 discriminator 1 view .LVU560
 1771 000e 094B     		ldr	r3, .L198+4
 1772 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1773              		.loc 1 762 22 discriminator 1 view .LVU561
 1774 0012 5B06     		lsls	r3, r3, #25
 1775 0014 03D4     		bmi	.L197
 762:src/keys.c    **** }
 1776              		.loc 1 762 22 view .LVU562
 1777 0016 0120     		movs	r0, #1
 1778              	.LVL140:
 763:src/keys.c    **** 
 1779              		.loc 1 763 1 view .LVU563
 1780 0018 7047     		bx	lr
 1781              	.LVL141:
 1782              	.L191:
 762:src/keys.c    **** }
 1783              		.loc 1 762 22 view .LVU564
 1784 001a 1846     		mov	r0, r3
 1785              	.LVL142:
 762:src/keys.c    **** }
 1786              		.loc 1 762 22 view .LVU565
 1787 001c 7047     		bx	lr
 1788              	.LVL143:
ARM GAS  /tmp/ccwxoOej.s 			page 93


 1789              	.L197:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1790              		.loc 1 761 26 view .LVU566
 1791 001e 10B5     		push	{r4, lr}
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 4, -8
 1794              		.cfi_offset 14, -4
 1795 0020 0446     		mov	r4, r0
 1796              	.LVL144:
 1797              	.LBB361:
 1798              	.LBI361:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1799              		.loc 1 761 12 is_stmt 1 view .LVU567
 1800              	.LBB362:
 762:src/keys.c    **** }
 1801              		.loc 1 762 52 is_stmt 0 view .LVU568
 1802 0022 FFF7FEFF 		bl	int_base
 1803              	.LVL145:
 762:src/keys.c    **** }
 1804              		.loc 1 762 43 view .LVU569
 1805 0026 8442     		cmp	r4, r0
 1806 0028 ACBF     		ite	ge
 1807 002a 0020     		movge	r0, #0
 1808 002c 0120     		movlt	r0, #1
 1809              	.LBE362:
 1810              	.LBE361:
 763:src/keys.c    **** 
 1811              		.loc 1 763 1 view .LVU570
 1812 002e 10BD     		pop	{r4, pc}
 1813              	.LVL146:
 1814              	.L199:
 763:src/keys.c    **** 
 1815              		.loc 1 763 1 view .LVU571
 1816              		.align	2
 1817              	.L198:
 1818 0030 00000000 		.word	main_ram
 1819 0034 00000000 		.word	StateWhileOn
 1820              		.cfi_endproc
 1821              	.LFE18:
 1823              		.section	.text.process_normal,"ax",%progbits
 1824              		.align	1
 1825              		.p2align 2,,3
 1826              		.syntax unified
 1827              		.thumb
 1828              		.thumb_func
 1829              		.fpu fpv4-sp-d16
 1831              	process_normal:
 1832              	.LVL147:
 1833              	.LFB19:
 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1834              		.loc 1 769 1 is_stmt 1 view -0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
 770:src/keys.c    **** 		// Row 1
 1838              		.loc 1 770 2 view .LVU573
 817:src/keys.c    **** 	int op = op_map[lc];
ARM GAS  /tmp/ccwxoOej.s 			page 94


 1839              		.loc 1 817 2 view .LVU574
 1840              	.LBB363:
 1841              	.LBI363:
 146:src/keys.c    **** {
 1842              		.loc 1 146 12 view .LVU575
 1843              	.LBB364:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1844              		.loc 1 148 2 view .LVU576
 158:src/keys.c    **** }
 1845              		.loc 1 158 2 view .LVU577
 158:src/keys.c    **** }
 1846              		.loc 1 158 2 is_stmt 0 view .LVU578
 1847              	.LBE364:
 1848              	.LBE363:
 818:src/keys.c    **** 	
 1849              		.loc 1 818 2 is_stmt 1 view .LVU579
 823:src/keys.c    **** 	  switch (c) {
 1850              		.loc 1 823 6 is_stmt 0 view .LVU580
 1851 0000 984B     		ldr	r3, .L231
 1852              	.LBB367:
 1853              	.LBB365:
 158:src/keys.c    **** }
 1854              		.loc 1 158 23 view .LVU581
 1855 0002 994A     		ldr	r2, .L231+4
 1856              	.LBE365:
 1857              	.LBE367:
 823:src/keys.c    **** 	  switch (c) {
 1858              		.loc 1 823 6 view .LVU582
 1859 0004 1B68     		ldr	r3, [r3]
 1860              	.LBB368:
 1861              	.LBB366:
 158:src/keys.c    **** }
 1862              		.loc 1 158 23 view .LVU583
 1863 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1864              	.LBE366:
 1865              	.LBE368:
 818:src/keys.c    **** 	
 1866              		.loc 1 818 17 view .LVU584
 1867 0008 984A     		ldr	r2, .L231+8
 823:src/keys.c    **** 	  switch (c) {
 1868              		.loc 1 823 6 view .LVU585
 1869 000a 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1870              		.loc 1 769 1 view .LVU586
 1871 000e 10B5     		push	{r4, lr}
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 4, -8
 1874              		.cfi_offset 14, -4
 818:src/keys.c    **** 	
 1875              		.loc 1 818 17 view .LVU587
 1876 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 823:src/keys.c    **** 	  switch (c) {
 1877              		.loc 1 823 5 view .LVU588
 1878 0014 DB07     		lsls	r3, r3, #31
 818:src/keys.c    **** 	
 1879              		.loc 1 818 6 view .LVU589
 1880 0016 2246     		mov	r2, r4
ARM GAS  /tmp/ccwxoOej.s 			page 95


 1881              	.LVL148:
 822:src/keys.c    **** 	if (UState.intm) {
 1882              		.loc 1 822 2 is_stmt 1 view .LVU590
 823:src/keys.c    **** 	  switch (c) {
 1883              		.loc 1 823 2 view .LVU591
 823:src/keys.c    **** 	  switch (c) {
 1884              		.loc 1 823 5 is_stmt 0 view .LVU592
 1885 0018 42D4     		bmi	.L227
 854:src/keys.c    **** 	  }
 1886              		.loc 1 854 12 is_stmt 1 view .LVU593
 859:src/keys.c    **** #ifdef DM42
 1887              		.loc 1 859 2 view .LVU594
 1888 001a 2D28     		cmp	r0, #45
 1889 001c 3ED8     		bhi	.L200
 1890 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1891              	.L219:
 1892 0022 0801     		.2byte	(.L215-.L219)/2
 1893 0024 0E01     		.2byte	(.L216-.L219)/2
 1894 0026 3D00     		.2byte	(.L200-.L219)/2
 1895 0028 CF00     		.2byte	(.L214-.L219)/2
 1896 002a 3D00     		.2byte	(.L200-.L219)/2
 1897 002c 3D00     		.2byte	(.L200-.L219)/2
 1898 002e 3400     		.2byte	(.L209-.L219)/2
 1899 0030 3400     		.2byte	(.L209-.L219)/2
 1900 0032 3D00     		.2byte	(.L200-.L219)/2
 1901 0034 3D00     		.2byte	(.L200-.L219)/2
 1902 0036 3D00     		.2byte	(.L200-.L219)/2
 1903 0038 3D00     		.2byte	(.L200-.L219)/2
 1904 003a 3D00     		.2byte	(.L200-.L219)/2
 1905 003c 3D00     		.2byte	(.L200-.L219)/2
 1906 003e 3D00     		.2byte	(.L200-.L219)/2
 1907 0040 3D00     		.2byte	(.L200-.L219)/2
 1908 0042 E900     		.2byte	(.L213-.L219)/2
 1909 0044 3D00     		.2byte	(.L200-.L219)/2
 1910 0046 3400     		.2byte	(.L209-.L219)/2
 1911 0048 3D00     		.2byte	(.L200-.L219)/2
 1912 004a 3D00     		.2byte	(.L200-.L219)/2
 1913 004c 3D00     		.2byte	(.L200-.L219)/2
 1914 004e 3D00     		.2byte	(.L200-.L219)/2
 1915 0050 3D00     		.2byte	(.L200-.L219)/2
 1916 0052 3D00     		.2byte	(.L200-.L219)/2
 1917 0054 3D00     		.2byte	(.L200-.L219)/2
 1918 0056 3D00     		.2byte	(.L200-.L219)/2
 1919 0058 3D00     		.2byte	(.L200-.L219)/2
 1920 005a 3D00     		.2byte	(.L200-.L219)/2
 1921 005c 3D00     		.2byte	(.L200-.L219)/2
 1922 005e 3D00     		.2byte	(.L200-.L219)/2
 1923 0060 3D00     		.2byte	(.L200-.L219)/2
 1924 0062 3D00     		.2byte	(.L200-.L219)/2
 1925 0064 3D00     		.2byte	(.L200-.L219)/2
 1926 0066 3D00     		.2byte	(.L200-.L219)/2
 1927 0068 3D00     		.2byte	(.L200-.L219)/2
 1928 006a 3D00     		.2byte	(.L200-.L219)/2
 1929 006c 3D00     		.2byte	(.L200-.L219)/2
 1930 006e 3D00     		.2byte	(.L200-.L219)/2
 1931 0070 3D00     		.2byte	(.L200-.L219)/2
 1932 0072 3D00     		.2byte	(.L200-.L219)/2
ARM GAS  /tmp/ccwxoOej.s 			page 96


 1933 0074 3D00     		.2byte	(.L200-.L219)/2
 1934 0076 3D00     		.2byte	(.L200-.L219)/2
 1935 0078 3D00     		.2byte	(.L200-.L219)/2
 1936 007a F400     		.2byte	(.L212-.L219)/2
 1937 007c C700     		.2byte	(.L218-.L219)/2
 1938              		.p2align 1
 1939              	.L203:
 850:src/keys.c    **** 	    if (intltr(15)) {
 1940              		.loc 1 850 6 view .LVU595
 1941              	.LVL149:
 851:src/keys.c    **** 	      return op_int;
 1942              		.loc 1 851 6 view .LVU596
 851:src/keys.c    **** 	      return op_int;
 1943              		.loc 1 851 10 is_stmt 0 view .LVU597
 1944 007e 0F20     		movs	r0, #15
 1945              	.LVL150:
 851:src/keys.c    **** 	      return op_int;
 1946              		.loc 1 851 10 view .LVU598
 1947 0080 FFF7FEFF 		bl	intltr
 1948              	.LVL151:
 851:src/keys.c    **** 	      return op_int;
 1949              		.loc 1 851 9 view .LVU599
 1950 0084 0028     		cmp	r0, #0
 1951 0086 40F0EB80 		bne	.L228
 1952              	.LVL152:
 1953              	.L209:
 925:src/keys.c    **** 		break;
 1954              		.loc 1 925 3 is_stmt 1 view .LVU600
 1955              	.LBB369:
 1956              	.LBI369:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1957              		.loc 1 552 13 view .LVU601
 1958              	.LBB370:
 553:src/keys.c    **** 		return;
 1959              		.loc 1 553 2 view .LVU602
 553:src/keys.c    **** 		return;
 1960              		.loc 1 553 6 is_stmt 0 view .LVU603
 1961 008a FFF7FEFF 		bl	is_bad_cmdline
 1962              	.LVL153:
 553:src/keys.c    **** 		return;
 1963              		.loc 1 553 5 view .LVU604
 1964 008e 0028     		cmp	r0, #0
 1965 0090 40F09380 		bne	.L226
 1966 0094 E0B2     		uxtb	r0, r4
 1967 0096 FFF7FEFF 		bl	init_arg.part.0
 1968              	.LVL154:
 1969              	.LBE370:
 1970              	.LBE369:
 931:src/keys.c    **** }
 1971              		.loc 1 931 9 view .LVU605
 1972 009a 3322     		movs	r2, #51
 1973              	.LVL155:
 1974              	.L200:
 932:src/keys.c    **** 
 1975              		.loc 1 932 1 view .LVU606
 1976 009c 1046     		mov	r0, r2
 1977 009e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccwxoOej.s 			page 97


 1978              	.LVL156:
 1979              	.L227:
 824:src/keys.c    **** 	  case K00:
 1980              		.loc 1 824 4 is_stmt 1 view .LVU607
 1981 00a0 1228     		cmp	r0, #18
 1982 00a2 29D8     		bhi	.L202
 1983 00a4 01A3     		adr	r3, .L204
 1984 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1985 00aa 00BF     		.p2align 2
 1986              	.L204:
 1987 00ac E9010000 		.word	.L207+1
 1988 00b0 DB010000 		.word	.L206+1
 1989 00b4 F9000000 		.word	.L202+1
 1990 00b8 CD010000 		.word	.L205+1
 1991 00bc F9000000 		.word	.L202+1
 1992 00c0 F9000000 		.word	.L202+1
 1993 00c4 F9000000 		.word	.L202+1
 1994 00c8 F9000000 		.word	.L202+1
 1995 00cc F9000000 		.word	.L202+1
 1996 00d0 F9000000 		.word	.L202+1
 1997 00d4 F9000000 		.word	.L202+1
 1998 00d8 F9000000 		.word	.L202+1
 1999 00dc F9000000 		.word	.L202+1
 2000 00e0 F9000000 		.word	.L202+1
 2001 00e4 F9000000 		.word	.L202+1
 2002 00e8 F9000000 		.word	.L202+1
 2003 00ec F9000000 		.word	.L202+1
 2004 00f0 F9000000 		.word	.L202+1
 2005 00f4 7F000000 		.word	.L203+1
 2006              		.p2align 1
 2007              	.L202:
 854:src/keys.c    **** 	  }
 2008              		.loc 1 854 12 view .LVU608
 859:src/keys.c    **** #ifdef DM42
 2009              		.loc 1 859 2 view .LVU609
 2010 00f8 C31E     		subs	r3, r0, #3
 2011 00fa 2A2B     		cmp	r3, #42
 2012 00fc CED8     		bhi	.L200
 2013 00fe 01A1     		adr	r1, .L211
 2014 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2015              		.p2align 2
 2016              	.L211:
 2017 0104 C1010000 		.word	.L214+1
 2018 0108 9D000000 		.word	.L200+1
 2019 010c 9D000000 		.word	.L200+1
 2020 0110 8B000000 		.word	.L209+1
 2021 0114 8B000000 		.word	.L209+1
 2022 0118 9D000000 		.word	.L200+1
 2023 011c 9D000000 		.word	.L200+1
 2024 0120 9D000000 		.word	.L200+1
 2025 0124 9D000000 		.word	.L200+1
 2026 0128 9D000000 		.word	.L200+1
 2027 012c 9D000000 		.word	.L200+1
 2028 0130 9D000000 		.word	.L200+1
 2029 0134 9D000000 		.word	.L200+1
 2030 0138 F5010000 		.word	.L213+1
 2031 013c 9D000000 		.word	.L200+1
ARM GAS  /tmp/ccwxoOej.s 			page 98


 2032 0140 8B000000 		.word	.L209+1
 2033 0144 9D000000 		.word	.L200+1
 2034 0148 9D000000 		.word	.L200+1
 2035 014c 9D000000 		.word	.L200+1
 2036 0150 9D000000 		.word	.L200+1
 2037 0154 9D000000 		.word	.L200+1
 2038 0158 9D000000 		.word	.L200+1
 2039 015c 9D000000 		.word	.L200+1
 2040 0160 9D000000 		.word	.L200+1
 2041 0164 9D000000 		.word	.L200+1
 2042 0168 9D000000 		.word	.L200+1
 2043 016c 9D000000 		.word	.L200+1
 2044 0170 9D000000 		.word	.L200+1
 2045 0174 9D000000 		.word	.L200+1
 2046 0178 9D000000 		.word	.L200+1
 2047 017c 9D000000 		.word	.L200+1
 2048 0180 9D000000 		.word	.L200+1
 2049 0184 9D000000 		.word	.L200+1
 2050 0188 9D000000 		.word	.L200+1
 2051 018c 9D000000 		.word	.L200+1
 2052 0190 9D000000 		.word	.L200+1
 2053 0194 9D000000 		.word	.L200+1
 2054 0198 9D000000 		.word	.L200+1
 2055 019c 9D000000 		.word	.L200+1
 2056 01a0 9D000000 		.word	.L200+1
 2057 01a4 9D000000 		.word	.L200+1
 2058 01a8 0B020000 		.word	.L212+1
 2059 01ac BB010000 		.word	.L226+1
 2060              		.p2align 1
 2061              	.L218:
 907:src/keys.c    **** #else
 2062              		.loc 1 907 4 view .LVU610
 907:src/keys.c    **** #else
 2063              		.loc 1 907 17 is_stmt 0 view .LVU611
 2064 01b0 2F4A     		ldr	r2, .L231+12
 2065              	.LVL157:
 907:src/keys.c    **** #else
 2066              		.loc 1 907 17 view .LVU612
 2067 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2068 01b4 43F00203 		orr	r3, r3, #2
 2069 01b8 5375     		strb	r3, [r2, #21]
 2070              	.LVL158:
 2071              	.L226:
 913:src/keys.c    **** 
 2072              		.loc 1 913 4 is_stmt 1 view .LVU613
 931:src/keys.c    **** }
 2073              		.loc 1 931 9 is_stmt 0 view .LVU614
 2074 01ba 3322     		movs	r2, #51
 932:src/keys.c    **** 
 2075              		.loc 1 932 1 view .LVU615
 2076 01bc 1046     		mov	r0, r2
 2077 01be 10BD     		pop	{r4, pc}
 2078              	.LVL159:
 2079              	.L214:
 866:src/keys.c    **** #else
 2080              		.loc 1 866 3 is_stmt 1 view .LVU616
 866:src/keys.c    **** #else
ARM GAS  /tmp/ccwxoOej.s 			page 99


 2081              		.loc 1 866 10 is_stmt 0 view .LVU617
 2082 01c0 2146     		mov	r1, r4
 2083 01c2 0220     		movs	r0, #2
 932:src/keys.c    **** 
 2084              		.loc 1 932 1 view .LVU618
 2085 01c4 BDE81040 		pop	{r4, lr}
 2086              		.cfi_remember_state
 2087              		.cfi_restore 14
 2088              		.cfi_restore 4
 2089              		.cfi_def_cfa_offset 0
 2090              	.LVL160:
 866:src/keys.c    **** #else
 2091              		.loc 1 866 10 view .LVU619
 2092 01c8 FFF7FEBF 		b	check_f_key
 2093              	.LVL161:
 2094              	.L205:
 2095              		.cfi_restore_state
 842:src/keys.c    **** 	    if (intltr(12)) {
 2096              		.loc 1 842 6 is_stmt 1 view .LVU620
 843:src/keys.c    **** 	      return op_int;
 2097              		.loc 1 843 6 view .LVU621
 843:src/keys.c    **** 	      return op_int;
 2098              		.loc 1 843 10 is_stmt 0 view .LVU622
 2099 01cc 0C20     		movs	r0, #12
 2100              	.LVL162:
 843:src/keys.c    **** 	      return op_int;
 2101              		.loc 1 843 10 view .LVU623
 2102 01ce FFF7FEFF 		bl	intltr
 2103              	.LVL163:
 843:src/keys.c    **** 	      return op_int;
 2104              		.loc 1 843 9 view .LVU624
 2105 01d2 0028     		cmp	r0, #0
 2106 01d4 F4D0     		beq	.L214
 844:src/keys.c    **** 	    }
 2107              		.loc 1 844 15 view .LVU625
 2108 01d6 1122     		movs	r2, #17
 2109 01d8 60E7     		b	.L200
 2110              	.LVL164:
 2111              	.L206:
 834:src/keys.c    **** 	    if (intltr(11)) {
 2112              		.loc 1 834 6 is_stmt 1 view .LVU626
 835:src/keys.c    **** 	      return op;
 2113              		.loc 1 835 6 view .LVU627
 835:src/keys.c    **** 	      return op;
 2114              		.loc 1 835 10 is_stmt 0 view .LVU628
 2115 01da 0B20     		movs	r0, #11
 2116              	.LVL165:
 835:src/keys.c    **** 	      return op;
 2117              		.loc 1 835 10 view .LVU629
 2118 01dc FFF7FEFF 		bl	intltr
 2119              	.LVL166:
 835:src/keys.c    **** 	      return op;
 2120              		.loc 1 835 9 view .LVU630
 2121 01e0 0028     		cmp	r0, #0
 2122 01e2 37D0     		beq	.L229
 836:src/keys.c    **** 	    }
 2123              		.loc 1 836 15 view .LVU631
ARM GAS  /tmp/ccwxoOej.s 			page 100


 2124 01e4 1022     		movs	r2, #16
 2125 01e6 59E7     		b	.L200
 2126              	.LVL167:
 2127              	.L207:
 826:src/keys.c    **** 	    if (intltr(10)) {
 2128              		.loc 1 826 6 is_stmt 1 view .LVU632
 827:src/keys.c    **** 	      return op;
 2129              		.loc 1 827 6 view .LVU633
 827:src/keys.c    **** 	      return op;
 2130              		.loc 1 827 10 is_stmt 0 view .LVU634
 2131 01e8 0A20     		movs	r0, #10
 2132              	.LVL168:
 827:src/keys.c    **** 	      return op;
 2133              		.loc 1 827 10 view .LVU635
 2134 01ea FFF7FEFF 		bl	intltr
 2135              	.LVL169:
 827:src/keys.c    **** 	      return op;
 2136              		.loc 1 827 9 view .LVU636
 2137 01ee 60B3     		cbz	r0, .L230
 828:src/keys.c    **** 	    }
 2138              		.loc 1 828 15 view .LVU637
 2139 01f0 0F22     		movs	r2, #15
 2140 01f2 53E7     		b	.L200
 2141              	.LVL170:
 2142              	.L213:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2143              		.loc 1 916 3 is_stmt 1 view .LVU638
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2144              		.loc 1 916 7 is_stmt 0 view .LVU639
 2145 01f4 1E4B     		ldr	r3, .L231+12
 2146 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2147              	.LVL171:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 916 6 view .LVU640
 2149 01f8 9106     		lsls	r1, r2, #26
 2150 01fa DED4     		bmi	.L226
 918:src/keys.c    **** 			return op;
 2151              		.loc 1 918 3 is_stmt 1 view .LVU641
 918:src/keys.c    **** 			return op;
 2152              		.loc 1 918 7 is_stmt 0 view .LVU642
 2153 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 920:src/keys.c    **** 
 2154              		.loc 1 920 10 view .LVU643
 2155 01fe 13F0400F 		tst	r3, #64
 2156 0202 14BF     		ite	ne
 2157 0204 2246     		movne	r2, r4
 2158 0206 3022     		moveq	r2, #48
 2159 0208 48E7     		b	.L200
 2160              	.LVL172:
 2161              	.L212:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2162              		.loc 1 890 3 is_stmt 1 view .LVU644
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2163              		.loc 1 890 7 is_stmt 0 view .LVU645
 2164 020a FFF7FEFF 		bl	is_bad_cmdline
 2165              	.LVL173:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccwxoOej.s 			page 101


 2166              		.loc 1 890 6 view .LVU646
 2167 020e 0028     		cmp	r0, #0
 2168 0210 D3D1     		bne	.L226
 892:src/keys.c    **** 		State2.arrow = 1;
 2169              		.loc 1 892 3 is_stmt 1 view .LVU647
 2170 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2171              	.LVL174:
 893:src/keys.c    **** #ifdef DM42
 2172              		.loc 1 893 3 view .LVU648
 893:src/keys.c    **** #ifdef DM42
 2173              		.loc 1 893 16 is_stmt 0 view .LVU649
 2174 0216 164A     		ldr	r2, .L231+12
 2175 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2176 021a 43F00403 		orr	r3, r3, #4
 2177 021e 5375     		strb	r3, [r2, #21]
 895:src/keys.c    **** 		display_current_menu ();
 2178              		.loc 1 895 3 is_stmt 1 view .LVU650
 2179 0220 0920     		movs	r0, #9
 2180 0222 FFF7FEFF 		bl	set_menu
 2181              	.LVL175:
 896:src/keys.c    **** 		lcd_refresh ();
 2182              		.loc 1 896 3 view .LVU651
 2183 0226 FFF7FEFF 		bl	display_current_menu
 2184              	.LVL176:
 897:src/keys.c    **** #else
 2185              		.loc 1 897 3 view .LVU652
 2186 022a 124B     		ldr	r3, .L231+16
 2187 022c 9847     		blx	r3
 2188              	.LVL177:
 901:src/keys.c    **** 
 2189              		.loc 1 901 3 view .LVU653
 931:src/keys.c    **** }
 2190              		.loc 1 931 9 is_stmt 0 view .LVU654
 2191 022e 3322     		movs	r2, #51
 901:src/keys.c    **** 
 2192              		.loc 1 901 3 view .LVU655
 2193 0230 34E7     		b	.L200
 2194              	.LVL178:
 2195              	.L215:
 862:src/keys.c    **** 	case K01:
 2196              		.loc 1 862 3 is_stmt 1 view .LVU656
 862:src/keys.c    **** 	case K01:
 2197              		.loc 1 862 10 is_stmt 0 view .LVU657
 2198 0232 2146     		mov	r1, r4
 2199 0234 0020     		movs	r0, #0
 2200              	.LVL179:
 932:src/keys.c    **** 
 2201              		.loc 1 932 1 view .LVU658
 2202 0236 BDE81040 		pop	{r4, lr}
 2203              		.cfi_remember_state
 2204              		.cfi_restore 14
 2205              		.cfi_restore 4
 2206              		.cfi_def_cfa_offset 0
 862:src/keys.c    **** 	case K01:
 2207              		.loc 1 862 10 view .LVU659
 2208 023a FFF7FEBF 		b	check_f_key
 2209              	.LVL180:
ARM GAS  /tmp/ccwxoOej.s 			page 102


 2210              	.L216:
 2211              		.cfi_restore_state
 864:src/keys.c    **** 	case K03:
 2212              		.loc 1 864 3 is_stmt 1 view .LVU660
 864:src/keys.c    **** 	case K03:
 2213              		.loc 1 864 10 is_stmt 0 view .LVU661
 2214 023e 2146     		mov	r1, r4
 2215 0240 0120     		movs	r0, #1
 2216              	.LVL181:
 932:src/keys.c    **** 
 2217              		.loc 1 932 1 view .LVU662
 2218 0242 BDE81040 		pop	{r4, lr}
 2219              		.cfi_remember_state
 2220              		.cfi_restore 14
 2221              		.cfi_restore 4
 2222              		.cfi_def_cfa_offset 0
 864:src/keys.c    **** 	case K03:
 2223              		.loc 1 864 10 view .LVU663
 2224 0246 FFF7FEBF 		b	check_f_key
 2225              	.LVL182:
 2226              	.L230:
 2227              		.cfi_restore_state
 831:src/keys.c    **** 	    }
 2228              		.loc 1 831 8 is_stmt 1 view .LVU664
 932:src/keys.c    **** 
 2229              		.loc 1 932 1 is_stmt 0 view .LVU665
 2230 024a BDE81040 		pop	{r4, lr}
 2231              		.cfi_remember_state
 2232              		.cfi_restore 14
 2233              		.cfi_restore 4
 2234              		.cfi_def_cfa_offset 0
 831:src/keys.c    **** 	    }
 2235              		.loc 1 831 15 view .LVU666
 2236 024e 0F21     		movs	r1, #15
 2237 0250 FFF7FEBF 		b	check_f_key
 2238              	.LVL183:
 2239              	.L229:
 2240              		.cfi_restore_state
 839:src/keys.c    **** 	    }
 2241              		.loc 1 839 8 is_stmt 1 view .LVU667
 932:src/keys.c    **** 
 2242              		.loc 1 932 1 is_stmt 0 view .LVU668
 2243 0254 BDE81040 		pop	{r4, lr}
 2244              		.cfi_remember_state
 2245              		.cfi_restore 14
 2246              		.cfi_restore 4
 2247              		.cfi_def_cfa_offset 0
 839:src/keys.c    **** 	    }
 2248              		.loc 1 839 15 view .LVU669
 2249 0258 1021     		movs	r1, #16
 2250 025a 0120     		movs	r0, #1
 2251 025c FFF7FEBF 		b	check_f_key
 2252              	.LVL184:
 2253              	.L228:
 2254              		.cfi_restore_state
 852:src/keys.c    **** 	    }
 2255              		.loc 1 852 15 view .LVU670
ARM GAS  /tmp/ccwxoOej.s 			page 103


 2256 0260 1422     		movs	r2, #20
 2257 0262 1BE7     		b	.L200
 2258              	.L232:
 2259              		.align	2
 2260              	.L231:
 2261 0264 00000000 		.word	main_ram
 2262 0268 00000000 		.word	.LANCHOR1
 2263 026c 00000000 		.word	.LANCHOR2
 2264 0270 00000000 		.word	StateWhileOn
 2265 0274 31020008 		.word	134218289
 2266              		.cfi_endproc
 2267              	.LFE19:
 2269              		.section	.text.process_fg_shifted,"ax",%progbits
 2270              		.align	1
 2271              		.p2align 2,,3
 2272              		.syntax unified
 2273              		.thumb
 2274              		.thumb_func
 2275              		.fpu fpv4-sp-d16
 2277              	process_fg_shifted:
 2278              	.LVL185:
 2279              	.LFB20:
 938:src/keys.c    **** 
 2280              		.loc 1 938 48 is_stmt 1 view -0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 0
 2283              		@ frame_needed = 0, uses_anonymous_args = 0
 941:src/keys.c    **** 		// Row 1
 2284              		.loc 1 941 2 view .LVU672
 992:src/keys.c    **** 		STATE_UNFINISHED,
 2285              		.loc 1 992 2 view .LVU673
 999:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2286              		.loc 1 999 2 view .LVU674
 2287              	.LBB371:
 2288              	.LBI371:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2289              		.loc 1 114 13 view .LVU675
 2290              	.LBE371:
 115:src/keys.c    **** }
 2291              		.loc 1 115 2 view .LVU676
 2292              	.LBB388:
 2293              	.LBB372:
 2294              	.LBI372:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2295              		.loc 1 104 20 view .LVU677
 2296              	.LBB373:
 105:src/keys.c    **** 	State2.shifts = shift;
 2297              		.loc 1 105 2 view .LVU678
 2298              	.LBB374:
 2299              	.LBI374:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2300              		.loc 1 96 13 view .LVU679
 2301              	.LBB375:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2302              		.loc 1 97 2 view .LVU680
 2303              	.LBE375:
 2304              	.LBE374:
ARM GAS  /tmp/ccwxoOej.s 			page 104


 2305              	.LBE373:
 2306              	.LBE372:
 2307              	.LBE388:
 938:src/keys.c    **** 
 2308              		.loc 1 938 48 is_stmt 0 view .LVU681
 2309 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2310              		.cfi_def_cfa_offset 24
 2311              		.cfi_offset 4, -24
 2312              		.cfi_offset 5, -20
 2313              		.cfi_offset 6, -16
 2314              		.cfi_offset 7, -12
 2315              		.cfi_offset 8, -8
 2316              		.cfi_offset 14, -4
 938:src/keys.c    **** 
 2317              		.loc 1 938 48 view .LVU682
 2318 0004 0446     		mov	r4, r0
 2319              	.LBB389:
 2320              	.LBB384:
 2321              	.LBB380:
 2322              	.LBB378:
 2323              	.LBB376:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2324              		.loc 1 97 18 view .LVU683
 2325 0006 FFF7FEFF 		bl	shift_down
 2326              	.LVL186:
  98:src/keys.c    **** }
 2327              		.loc 1 98 2 is_stmt 1 view .LVU684
  98:src/keys.c    **** }
 2328              		.loc 1 98 52 is_stmt 0 view .LVU685
 2329 000a 0028     		cmp	r0, #0
 2330 000c 72D0     		beq	.L280
 2331 000e DFF89482 		ldr	r8, .L294+16
 2332 0012 0546     		mov	r5, r0
 2333              	.L234:
 2334              	.LVL187:
  98:src/keys.c    **** }
 2335              		.loc 1 98 52 view .LVU686
 2336              	.LBE376:
 2337              	.LBE378:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2338              		.loc 1 106 2 is_stmt 1 view .LVU687
 2339              	.LBE380:
 2340              	.LBE384:
 2341              	.LBE389:
 2342              	.LBB390:
 2343              	.LBB391:
 158:src/keys.c    **** }
 2344              		.loc 1 158 23 is_stmt 0 view .LVU688
 2345 0014 9F4B     		ldr	r3, .L294
 2346              	.LBE391:
 2347              	.LBE390:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2348              		.loc 1 1001 21 view .LVU689
 2349 0016 A049     		ldr	r1, .L294+4
 2350              	.LBB394:
 2351              	.LBB392:
 158:src/keys.c    **** }
ARM GAS  /tmp/ccwxoOej.s 			page 105


 2352              		.loc 1 158 23 view .LVU690
 2353 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2354              	.LBE392:
 2355              	.LBE394:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2356              		.loc 1 1001 21 view .LVU691
 2357 001a 4300     		lsls	r3, r0, #1
 2358 001c 022D     		cmp	r5, #2
 2359 001e 08BF     		it	eq
 2360 0020 0133     		addeq	r3, r3, #1
 2361              	.LBB395:
 2362              	.LBB385:
 2363              	.LBB381:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2364              		.loc 1 106 16 view .LVU692
 2365 0022 0022     		movs	r2, #0
 2366              	.LBE381:
 2367              	.LBE385:
 2368              	.LBE395:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2369              		.loc 1 1001 21 view .LVU693
 2370 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2371              	.LBB396:
 2372              	.LBB386:
 2373              	.LBB382:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2374              		.loc 1 106 16 view .LVU694
 2375 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2376              		.loc 1 108 2 is_stmt 1 view .LVU695
 2377              	.LVL188:
 108:src/keys.c    **** }
 2378              		.loc 1 108 2 is_stmt 0 view .LVU696
 2379              	.LBE382:
 2380              	.LBE386:
 2381              	.LBE396:
1000:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2382              		.loc 1 1000 2 is_stmt 1 view .LVU697
 2383              	.LBB397:
 2384              	.LBI390:
 146:src/keys.c    **** {
 2385              		.loc 1 146 12 view .LVU698
 2386              	.LBB393:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2387              		.loc 1 148 2 view .LVU699
 158:src/keys.c    **** }
 2388              		.loc 1 158 2 view .LVU700
 158:src/keys.c    **** }
 2389              		.loc 1 158 2 is_stmt 0 view .LVU701
 2390              	.LBE393:
 2391              	.LBE397:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2392              		.loc 1 1001 2 is_stmt 1 view .LVU702
1002:src/keys.c    **** 	if (no_int)
 2393              		.loc 1 1002 2 view .LVU703
 2394 002c 06F47047 		and	r7, r6, #61440
 2395              	.LVL189:
ARM GAS  /tmp/ccwxoOej.s 			page 106


1003:src/keys.c    **** 		op &= ~NO_INT;
 2396              		.loc 1 1003 2 view .LVU704
1003:src/keys.c    **** 		op &= ~NO_INT;
 2397              		.loc 1 1003 5 is_stmt 0 view .LVU705
 2398 0030 B7F5704F 		cmp	r7, #61440
 2399 0034 63D0     		beq	.L288
1006:src/keys.c    **** 	case K00:
 2400              		.loc 1 1006 2 is_stmt 1 view .LVU706
 2401 0036 282C     		cmp	r4, #40
 2402 0038 34D8     		bhi	.L255
 2403 003a DFE804F0 		tbb	[pc, r4]
 2404              	.L256:
 2405 003e D3       		.byte	(.L246-.L256)/2
 2406 003f 39       		.byte	(.L244-.L256)/2
 2407 0040 33       		.byte	(.L255-.L256)/2
 2408 0041 39       		.byte	(.L244-.L256)/2
 2409 0042 33       		.byte	(.L255-.L256)/2
 2410 0043 33       		.byte	(.L255-.L256)/2
 2411 0044 33       		.byte	(.L255-.L256)/2
 2412 0045 33       		.byte	(.L255-.L256)/2
 2413 0046 33       		.byte	(.L255-.L256)/2
 2414 0047 33       		.byte	(.L255-.L256)/2
 2415 0048 33       		.byte	(.L255-.L256)/2
 2416 0049 33       		.byte	(.L255-.L256)/2
 2417 004a 15       		.byte	(.L243-.L256)/2
 2418 004b 33       		.byte	(.L255-.L256)/2
 2419 004c 33       		.byte	(.L255-.L256)/2
 2420 004d 33       		.byte	(.L255-.L256)/2
 2421 004e 33       		.byte	(.L255-.L256)/2
 2422 004f 33       		.byte	(.L255-.L256)/2
 2423 0050 E0       		.byte	(.L242-.L256)/2
 2424 0051 B9       		.byte	(.L241-.L256)/2
 2425 0052 33       		.byte	(.L255-.L256)/2
 2426 0053 33       		.byte	(.L255-.L256)/2
 2427 0054 33       		.byte	(.L255-.L256)/2
 2428 0055 33       		.byte	(.L255-.L256)/2
 2429 0056 33       		.byte	(.L255-.L256)/2
 2430 0057 33       		.byte	(.L255-.L256)/2
 2431 0058 33       		.byte	(.L255-.L256)/2
 2432 0059 33       		.byte	(.L255-.L256)/2
 2433 005a 33       		.byte	(.L255-.L256)/2
 2434 005b 33       		.byte	(.L255-.L256)/2
 2435 005c 44       		.byte	(.L240-.L256)/2
 2436 005d CB       		.byte	(.L239-.L256)/2
 2437 005e 49       		.byte	(.L237-.L256)/2
 2438 005f 49       		.byte	(.L237-.L256)/2
 2439 0060 33       		.byte	(.L255-.L256)/2
 2440 0061 33       		.byte	(.L255-.L256)/2
 2441 0062 33       		.byte	(.L255-.L256)/2
 2442 0063 33       		.byte	(.L255-.L256)/2
 2443 0064 33       		.byte	(.L255-.L256)/2
 2444 0065 49       		.byte	(.L237-.L256)/2
 2445 0066 49       		.byte	(.L237-.L256)/2
 2446 0067 00       		.p2align 1
 2447              	.L243:
1039:src/keys.c    **** 			if (is_bad_cmdline())
 2448              		.loc 1 1039 3 view .LVU707
ARM GAS  /tmp/ccwxoOej.s 			page 107


1039:src/keys.c    **** 			if (is_bad_cmdline())
 2449              		.loc 1 1039 6 is_stmt 0 view .LVU708
 2450 0068 012D     		cmp	r5, #1
 2451 006a 11D1     		bne	.L249
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2452              		.loc 1 1040 4 is_stmt 1 view .LVU709
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2453              		.loc 1 1040 8 is_stmt 0 view .LVU710
 2454 006c FFF7FEFF 		bl	is_bad_cmdline
 2455              	.LVL190:
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2456              		.loc 1 1040 7 view .LVU711
 2457 0070 0028     		cmp	r0, #0
 2458 0072 40F0B380 		bne	.L282
1042:src/keys.c    **** 			State2.alphas = 1;
 2459              		.loc 1 1042 4 is_stmt 1 view .LVU712
 2460 0076 FFF7FEFF 		bl	process_cmdline_set_lift
 2461              	.LVL191:
1043:src/keys.c    **** #ifdef DM42
 2462              		.loc 1 1043 4 view .LVU713
1043:src/keys.c    **** #ifdef DM42
 2463              		.loc 1 1043 18 is_stmt 0 view .LVU714
 2464 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1045:src/keys.c    **** 			display_current_menu();
 2465              		.loc 1 1045 4 view .LVU715
 2466 007e 1020     		movs	r0, #16
1043:src/keys.c    **** #ifdef DM42
 2467              		.loc 1 1043 18 view .LVU716
 2468 0080 43F00803 		orr	r3, r3, #8
 2469 0084 88F81630 		strb	r3, [r8, #22]
1045:src/keys.c    **** 			display_current_menu();
 2470              		.loc 1 1045 4 is_stmt 1 view .LVU717
 2471 0088 FFF7FEFF 		bl	set_menu
 2472              	.LVL192:
1046:src/keys.c    **** #endif
 2473              		.loc 1 1046 4 view .LVU718
 2474 008c FFF7FEFF 		bl	display_current_menu
 2475              	.LVL193:
 2476              	.L249:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2477              		.loc 1 1091 2 view .LVU719
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2478              		.loc 1 1091 5 is_stmt 0 view .LVU720
 2479 0090 B7F5704F 		cmp	r7, #61440
 2480 0094 06D1     		bne	.L255
 2481              	.L236:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2482              		.loc 1 1091 13 discriminator 1 view .LVU721
 2483 0096 814B     		ldr	r3, .L294+8
 2484 0098 1B68     		ldr	r3, [r3]
 2485 009a 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
 2486 009e DA07     		lsls	r2, r3, #31
 2487 00a0 00F19C80 		bmi	.L282
 2488              	.L255:
1094:src/keys.c    **** #undef NO_INT
 2489              		.loc 1 1094 2 is_stmt 1 view .LVU722
 2490              	.LVL194:
ARM GAS  /tmp/ccwxoOej.s 			page 108


 2491              	.LBB398:
 2492              	.LBI398:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2493              		.loc 1 714 12 view .LVU723
 2494              	.LBB399:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2495              		.loc 1 715 2 view .LVU724
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2496              		.loc 1 715 6 is_stmt 0 view .LVU725
 2497 00a4 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2498              		.loc 1 715 5 view .LVU726
 2499 00a6 012B     		cmp	r3, #1
 2500 00a8 1FD0     		beq	.L258
 2501              	.LVL195:
 2502              	.L233:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2503              		.loc 1 715 5 view .LVU727
 2504              	.LBE399:
 2505              	.LBE398:
1096:src/keys.c    **** 
 2506              		.loc 1 1096 1 view .LVU728
 2507 00aa 3046     		mov	r0, r6
 2508 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2509              	.LVL196:
 2510              	.L244:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2511              		.loc 1 1028 4 is_stmt 1 view .LVU729
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2512              		.loc 1 1028 8 is_stmt 0 view .LVU730
 2513 00b0 7A4B     		ldr	r3, .L294+8
 2514 00b2 1B68     		ldr	r3, [r3]
 2515 00b4 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2516              		.loc 1 1028 7 view .LVU731
 2517 00b8 DB07     		lsls	r3, r3, #31
 2518 00ba 00F19980 		bmi	.L285
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2519              		.loc 1 1091 2 is_stmt 1 view .LVU732
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2520              		.loc 1 1091 5 is_stmt 0 view .LVU733
 2521 00be B7F5704F 		cmp	r7, #61440
 2522 00c2 EFD1     		bne	.L255
 2523 00c4 E7E7     		b	.L236
 2524              	.L240:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2525              		.loc 1 1071 3 is_stmt 1 view .LVU734
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2526              		.loc 1 1071 18 is_stmt 0 view .LVU735
 2527 00c6 FFF7FEFF 		bl	shift_down
 2528              	.LVL197:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2529              		.loc 1 1071 6 view .LVU736
 2530 00ca 0028     		cmp	r0, #0
 2531 00cc 40F0BA80 		bne	.L289
 2532              	.L237:
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
ARM GAS  /tmp/ccwxoOej.s 			page 109


 2533              		.loc 1 1080 3 is_stmt 1 view .LVU737
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2534              		.loc 1 1080 6 is_stmt 0 view .LVU738
 2535 00d0 B6F59C7F 		cmp	r6, #312
 2536 00d4 40F0A580 		bne	.L290
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2537              		.loc 1 1091 2 is_stmt 1 view .LVU739
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2538              		.loc 1 1091 5 is_stmt 0 view .LVU740
 2539 00d8 B7F5704F 		cmp	r7, #61440
 2540 00dc 05D1     		bne	.L258
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2541              		.loc 1 1091 13 view .LVU741
 2542 00de 6F4B     		ldr	r3, .L294+8
 2543 00e0 1B68     		ldr	r3, [r3]
 2544 00e2 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
 2545 00e6 DB07     		lsls	r3, r3, #31
 2546 00e8 78D4     		bmi	.L282
 2547              	.LVL198:
 2548              	.L258:
 2549              	.LBB402:
 2550              	.LBB400:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2551              		.loc 1 1091 13 view .LVU742
 2552 00ea 3046     		mov	r0, r6
 2553              	.LBE400:
 2554              	.LBE402:
1096:src/keys.c    **** 
 2555              		.loc 1 1096 1 view .LVU743
 2556 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2557              		.cfi_remember_state
 2558              		.cfi_restore 14
 2559              		.cfi_restore 8
 2560              		.cfi_restore 7
 2561              		.cfi_restore 6
 2562              		.cfi_restore 5
 2563              		.cfi_restore 4
 2564              		.cfi_def_cfa_offset 0
 2565              	.LVL199:
 2566              	.LBB403:
 2567              	.LBB401:
1096:src/keys.c    **** 
 2568              		.loc 1 1096 1 view .LVU744
 2569 00f0 FFF7FEBF 		b	check_confirm.part.0
 2570              	.LVL200:
 2571              	.L280:
 2572              		.cfi_restore_state
1096:src/keys.c    **** 
 2573              		.loc 1 1096 1 view .LVU745
 2574              	.LBE401:
 2575              	.LBE403:
 2576              	.LBB404:
 2577              	.LBB387:
 2578              	.LBB383:
 2579              	.LBB379:
 2580              	.LBB377:
  98:src/keys.c    **** }
ARM GAS  /tmp/ccwxoOej.s 			page 110


 2581              		.loc 1 98 52 view .LVU746
 2582 00f4 DFF8AC81 		ldr	r8, .L294+16
 2583 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2584 00fc 8AE7     		b	.L234
 2585              	.LVL201:
 2586              	.L288:
  98:src/keys.c    **** }
 2587              		.loc 1 98 52 view .LVU747
 2588              	.LBE377:
 2589              	.LBE379:
 2590              	.LBE383:
 2591              	.LBE387:
 2592              	.LBE404:
1004:src/keys.c    **** 
 2593              		.loc 1 1004 3 is_stmt 1 view .LVU748
1004:src/keys.c    **** 
 2594              		.loc 1 1004 6 is_stmt 0 view .LVU749
 2595 00fe 26F47046 		bic	r6, r6, #61440
 2596              	.LVL202:
1006:src/keys.c    **** 	case K00:
 2597              		.loc 1 1006 2 is_stmt 1 view .LVU750
 2598 0102 282C     		cmp	r4, #40
 2599 0104 C7D8     		bhi	.L236
 2600 0106 01A3     		adr	r3, .L238
 2601 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2602              		.p2align 2
 2603              	.L238:
 2604 010c E5010000 		.word	.L246+1
 2605 0110 B1000000 		.word	.L244+1
 2606 0114 97000000 		.word	.L236+1
 2607 0118 B1000000 		.word	.L244+1
 2608 011c 97000000 		.word	.L236+1
 2609 0120 97000000 		.word	.L236+1
 2610 0124 97000000 		.word	.L236+1
 2611 0128 97000000 		.word	.L236+1
 2612 012c 97000000 		.word	.L236+1
 2613 0130 97000000 		.word	.L236+1
 2614 0134 97000000 		.word	.L236+1
 2615 0138 97000000 		.word	.L236+1
 2616 013c 69000000 		.word	.L243+1
 2617 0140 97000000 		.word	.L236+1
 2618 0144 97000000 		.word	.L236+1
 2619 0148 97000000 		.word	.L236+1
 2620 014c 97000000 		.word	.L236+1
 2621 0150 97000000 		.word	.L236+1
 2622 0154 FF010000 		.word	.L242+1
 2623 0158 B1010000 		.word	.L241+1
 2624 015c 97000000 		.word	.L236+1
 2625 0160 97000000 		.word	.L236+1
 2626 0164 97000000 		.word	.L236+1
 2627 0168 97000000 		.word	.L236+1
 2628 016c 97000000 		.word	.L236+1
 2629 0170 97000000 		.word	.L236+1
 2630 0174 97000000 		.word	.L236+1
 2631 0178 97000000 		.word	.L236+1
 2632 017c 97000000 		.word	.L236+1
 2633 0180 97000000 		.word	.L236+1
ARM GAS  /tmp/ccwxoOej.s 			page 111


 2634 0184 C7000000 		.word	.L240+1
 2635 0188 D5010000 		.word	.L239+1
 2636 018c D1000000 		.word	.L237+1
 2637 0190 D1000000 		.word	.L237+1
 2638 0194 97000000 		.word	.L236+1
 2639 0198 97000000 		.word	.L236+1
 2640 019c 97000000 		.word	.L236+1
 2641 01a0 97000000 		.word	.L236+1
 2642 01a4 97000000 		.word	.L236+1
 2643 01a8 D1000000 		.word	.L237+1
 2644 01ac D1000000 		.word	.L237+1
 2645              		.p2align 1
 2646              	.L241:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2647              		.loc 1 1052 4 view .LVU751
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2648              		.loc 1 1052 7 is_stmt 0 view .LVU752
 2649 01b0 022D     		cmp	r5, #2
 2650 01b2 7FF46DAF 		bne	.L249
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2651              		.loc 1 1052 27 discriminator 1 view .LVU753
 2652 01b6 394B     		ldr	r3, .L294+8
 2653 01b8 1B68     		ldr	r3, [r3]
 2654 01ba 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
 2655 01be DC07     		lsls	r4, r3, #31
 2656 01c0 7FF566AF 		bpl	.L249
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2657              		.loc 1 1052 45 discriminator 2 view .LVU754
 2658 01c4 0D20     		movs	r0, #13
 2659              	.LVL203:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2660              		.loc 1 1052 45 discriminator 2 view .LVU755
 2661 01c6 FFF7FEFF 		bl	intltr
 2662              	.LVL204:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2663              		.loc 1 1052 42 discriminator 2 view .LVU756
 2664 01ca 0028     		cmp	r0, #0
 2665 01cc 3FF460AF 		beq	.L249
1053:src/keys.c    **** 	  }
 2666              		.loc 1 1053 13 view .LVU757
 2667 01d0 1226     		movs	r6, #18
 2668              	.LVL205:
1053:src/keys.c    **** 	  }
 2669              		.loc 1 1053 13 view .LVU758
 2670 01d2 6AE7     		b	.L233
 2671              	.LVL206:
 2672              	.L239:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2673              		.loc 1 1063 3 is_stmt 1 view .LVU759
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2674              		.loc 1 1063 7 is_stmt 0 view .LVU760
 2675 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2676              	.LVL207:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2677              		.loc 1 1063 6 view .LVU761
 2678 01d8 0028     		cmp	r0, #0
 2679 01da 40D0     		beq	.L291
ARM GAS  /tmp/ccwxoOej.s 			page 112


 2680              	.LVL208:
 2681              	.L282:
1084:src/keys.c    **** 		}
 2682              		.loc 1 1084 11 view .LVU762
 2683 01dc 3326     		movs	r6, #51
 2684              	.LVL209:
1096:src/keys.c    **** 
 2685              		.loc 1 1096 1 view .LVU763
 2686 01de 3046     		mov	r0, r6
 2687 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2688              	.LVL210:
 2689              	.L246:
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2690              		.loc 1 1008 4 is_stmt 1 view .LVU764
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2691              		.loc 1 1008 8 is_stmt 0 view .LVU765
 2692 01e4 2D4B     		ldr	r3, .L294+8
 2693 01e6 1B68     		ldr	r3, [r3]
 2694 01e8 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2695              		.loc 1 1008 7 view .LVU766
 2696 01ec DA07     		lsls	r2, r3, #31
 2697 01ee 3CD5     		bpl	.L292
 2698              	.L285:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2699              		.loc 1 1028 20 discriminator 1 view .LVU767
 2700 01f0 012D     		cmp	r5, #1
 2701 01f2 48D0     		beq	.L293
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2702              		.loc 1 1091 2 is_stmt 1 view .LVU768
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2703              		.loc 1 1091 5 is_stmt 0 view .LVU769
 2704 01f4 B7F5704F 		cmp	r7, #61440
 2705 01f8 7FF454AF 		bne	.L255
 2706 01fc EEE7     		b	.L282
 2707              	.L242:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2708              		.loc 1 1057 4 is_stmt 1 view .LVU770
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2709              		.loc 1 1057 7 is_stmt 0 view .LVU771
 2710 01fe 022D     		cmp	r5, #2
 2711 0200 7FF446AF 		bne	.L249
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2712              		.loc 1 1057 27 discriminator 1 view .LVU772
 2713 0204 254B     		ldr	r3, .L294+8
 2714 0206 1B68     		ldr	r3, [r3]
 2715 0208 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
 2716 020c D807     		lsls	r0, r3, #31
 2717              	.LVL211:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2718              		.loc 1 1057 27 discriminator 1 view .LVU773
 2719 020e 7FF53FAF 		bpl	.L249
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2720              		.loc 1 1057 45 discriminator 2 view .LVU774
 2721 0212 0E20     		movs	r0, #14
 2722 0214 FFF7FEFF 		bl	intltr
 2723              	.LVL212:
ARM GAS  /tmp/ccwxoOej.s 			page 113


1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2724              		.loc 1 1057 42 discriminator 2 view .LVU775
 2725 0218 0028     		cmp	r0, #0
 2726 021a 3FF439AF 		beq	.L249
1058:src/keys.c    **** 	  }
 2727              		.loc 1 1058 13 view .LVU776
 2728 021e 1326     		movs	r6, #19
 2729              	.LVL213:
1058:src/keys.c    **** 	  }
 2730              		.loc 1 1058 13 view .LVU777
 2731 0220 43E7     		b	.L233
 2732              	.LVL214:
 2733              	.L290:
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2734              		.loc 1 1081 4 is_stmt 1 view .LVU778
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2735              		.loc 1 1081 7 is_stmt 0 view .LVU779
 2736 0222 B7F5704F 		cmp	r7, #61440
 2737 0226 05D1     		bne	.L254
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2738              		.loc 1 1081 18 discriminator 1 view .LVU780
 2739 0228 1C4B     		ldr	r3, .L294+8
 2740 022a 1B68     		ldr	r3, [r3]
 2741 022c 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2742              		.loc 1 1081 8 discriminator 1 view .LVU781
 2743 0230 D907     		lsls	r1, r3, #31
 2744 0232 D3D4     		bmi	.L282
 2745              	.L254:
1082:src/keys.c    **** 			}
 2746              		.loc 1 1082 5 is_stmt 1 view .LVU782
 2747              	.LVL215:
 2748              	.LBB405:
 2749              	.LBI405:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2750              		.loc 1 552 13 view .LVU783
 2751              	.LBB406:
 553:src/keys.c    **** 		return;
 2752              		.loc 1 553 2 view .LVU784
 553:src/keys.c    **** 		return;
 2753              		.loc 1 553 6 is_stmt 0 view .LVU785
 2754 0234 FFF7FEFF 		bl	is_bad_cmdline
 2755              	.LVL216:
 553:src/keys.c    **** 		return;
 2756              		.loc 1 553 5 view .LVU786
 2757 0238 0028     		cmp	r0, #0
 2758 023a CFD1     		bne	.L282
 2759 023c F0B2     		uxtb	r0, r6
 2760 023e FFF7FEFF 		bl	init_arg.part.0
 2761              	.LVL217:
 2762 0242 CBE7     		b	.L282
 2763              	.LVL218:
 2764              	.L289:
 553:src/keys.c    **** 		return;
 2765              		.loc 1 553 5 view .LVU787
 2766              	.LBE406:
 2767              	.LBE405:
ARM GAS  /tmp/ccwxoOej.s 			page 114


1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2768              		.loc 1 1072 4 is_stmt 1 view .LVU788
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2769              		.loc 1 1072 26 is_stmt 0 view .LVU789
 2770 0244 A5F10105 		sub	r5, #1
 2771              	.LVL219:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2772              		.loc 1 1072 17 view .LVU790
 2773 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2774              		.loc 1 1072 26 view .LVU791
 2775 024c B5FA85F5 		clz	r5, r5
 2776 0250 6D09     		lsrs	r5, r5, #5
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2777              		.loc 1 1072 17 view .LVU792
 2778 0252 65F3C713 		bfi	r3, r5, #7, #1
 2779 0256 88F81730 		strb	r3, [r8, #23]
1073:src/keys.c    **** 		}
 2780              		.loc 1 1073 4 is_stmt 1 view .LVU793
1073:src/keys.c    **** 		}
 2781              		.loc 1 1073 11 is_stmt 0 view .LVU794
 2782 025a 3326     		movs	r6, #51
 2783              	.LVL220:
1073:src/keys.c    **** 		}
 2784              		.loc 1 1073 11 view .LVU795
 2785 025c 25E7     		b	.L233
 2786              	.LVL221:
 2787              	.L291:
1065:src/keys.c    **** 		State2.test = op;
 2788              		.loc 1 1065 3 is_stmt 1 view .LVU796
 2789 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2790              	.LVL222:
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2791              		.loc 1 1066 3 view .LVU797
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2792              		.loc 1 1066 15 is_stmt 0 view .LVU798
 2793 0262 88F80F60 		strb	r6, [r8, #15]
1067:src/keys.c    **** 
 2794              		.loc 1 1067 3 is_stmt 1 view .LVU799
1067:src/keys.c    **** 
 2795              		.loc 1 1067 10 is_stmt 0 view .LVU800
 2796 0266 3326     		movs	r6, #51
 2797              	.LVL223:
1067:src/keys.c    **** 
 2798              		.loc 1 1067 10 view .LVU801
 2799 0268 1FE7     		b	.L233
 2800              	.LVL224:
 2801              	.L292:
1010:src/keys.c    **** 	    State2.dot = op;
 2802              		.loc 1 1010 6 is_stmt 1 view .LVU802
1011:src/keys.c    **** 	    // State2.cmplx = 0;
 2803              		.loc 1 1011 6 view .LVU803
1010:src/keys.c    **** 	    State2.dot = op;
 2804              		.loc 1 1010 17 is_stmt 0 view .LVU804
 2805 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2806 026e 06F00103 		and	r3, r6, #1
 2807 0272 9B01     		lsls	r3, r3, #6
ARM GAS  /tmp/ccwxoOej.s 			page 115


 2808 0274 43F02003 		orr	r3, r3, #32
 2809 0278 22F06002 		bic	r2, r2, #96
 2810 027c 1343     		orrs	r3, r3, r2
 2811 027e 88F81530 		strb	r3, [r8, #21]
1013:src/keys.c    **** 	  }
 2812              		.loc 1 1013 6 is_stmt 1 view .LVU805
1013:src/keys.c    **** 	  }
 2813              		.loc 1 1013 13 is_stmt 0 view .LVU806
 2814 0282 3326     		movs	r6, #51
 2815              	.LVL225:
1013:src/keys.c    **** 	  }
 2816              		.loc 1 1013 13 view .LVU807
 2817 0284 11E7     		b	.L233
 2818              	.LVL226:
 2819              	.L293:
1029:src/keys.c    **** 		}
 2820              		.loc 1 1029 4 is_stmt 1 view .LVU808
1029:src/keys.c    **** 		}
 2821              		.loc 1 1029 34 is_stmt 0 view .LVU809
 2822 0286 064B     		ldr	r3, .L294+12
1096:src/keys.c    **** 
 2823              		.loc 1 1096 1 view .LVU810
 2824 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2825              		.cfi_restore 14
 2826              		.cfi_restore 8
 2827              		.cfi_restore 7
 2828              		.cfi_restore 6
 2829              		.cfi_restore 5
 2830              		.cfi_restore 4
 2831              		.cfi_def_cfa_offset 0
 2832              	.LVL227:
1029:src/keys.c    **** 		}
 2833              		.loc 1 1029 11 view .LVU811
 2834 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2835 0290 FFF7FEBF 		b	check_f_key
 2836              	.LVL228:
 2837              	.L295:
1029:src/keys.c    **** 		}
 2838              		.loc 1 1029 11 view .LVU812
 2839              		.align	2
 2840              	.L294:
 2841 0294 00000000 		.word	.LANCHOR1
 2842 0298 00000000 		.word	.LANCHOR3
 2843 029c 00000000 		.word	main_ram
 2844 02a0 00000000 		.word	.LANCHOR4
 2845 02a4 00000000 		.word	StateWhileOn
 2846              		.cfi_endproc
 2847              	.LFE20:
 2849              		.section	.text.set_window,"ax",%progbits
 2850              		.align	1
 2851              		.p2align 2,,3
 2852              		.syntax unified
 2853              		.thumb
 2854              		.thumb_func
 2855              		.fpu fpv4-sp-d16
 2857              	set_window:
 2858              	.LVL229:
ARM GAS  /tmp/ccwxoOej.s 			page 116


 2859              	.LFB58:
2988:src/keys.c    **** 
2989:src/keys.c    **** 
2990:src/keys.c    **** /*
2991:src/keys.c    ****  *  CAT command
2992:src/keys.c    ****  */
2993:src/keys.c    **** static int process_labellist(const keycode c) {
2994:src/keys.c    **** 	unsigned int pc = State2.digval;
2995:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2996:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2997:src/keys.c    **** 	const int opcode = getprog(pc);
2998:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2999:src/keys.c    **** 	const int direct = State2.runmode;
3000:src/keys.c    **** 	const enum shifts shift = reset_shift();
3001:src/keys.c    **** 	int op = STATE_UNFINISHED;
3002:src/keys.c    **** 
3003:src/keys.c    **** 	if (n < REGION_XROM) {
3004:src/keys.c    **** 		// Digits take you to that segment
3005:src/keys.c    **** 		pc = addrLIB(1, n);
3006:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
3007:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
3008:src/keys.c    **** 		State2.digval = pc;
3009:src/keys.c    **** 		return STATE_UNFINISHED;
3010:src/keys.c    **** 	}
3011:src/keys.c    **** 
3012:src/keys.c    **** 	switch (c | (shift << 8)) {
3013:src/keys.c    **** 
3014:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3015:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3016:src/keys.c    **** 		goto next;
3017:src/keys.c    **** 
3018:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3019:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3020:src/keys.c    **** 	case K_DOWN:				// Find next label
3021:src/keys.c    **** 	next:
3022:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3023:src/keys.c    **** 		return STATE_UNFINISHED;
3024:src/keys.c    **** 
3025:src/keys.c    **** 	case K_UP:				// Find previous label
3026:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3027:src/keys.c    **** 		return STATE_UNFINISHED;
3028:src/keys.c    **** 
3029:src/keys.c    **** 	case K24:				// <- exits
3030:src/keys.c    **** 		break;
3031:src/keys.c    **** 
3032:src/keys.c    **** 	case K20:				// ENTER^
3033:src/keys.c    **** 	set_pc_and_exit:
3034:src/keys.c    **** 		set_pc(pc);			// forced branch
3035:src/keys.c    **** 		break;
3036:src/keys.c    **** 
3037:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3038:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3039:src/keys.c    **** 		goto set_pc_and_exit;
3040:src/keys.c    **** 
3041:src/keys.c    **** 	case K10:				// STO
3042:src/keys.c    **** 	case K11:				// RCL
3043:src/keys.c    **** 	  //#ifndef DM42	
ARM GAS  /tmp/ccwxoOej.s 			page 117


3044:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3045:src/keys.c    **** 	  //#endif
3046:src/keys.c    **** /* #ifdef DM42 */
3047:src/keys.c    **** /* 	        op = OP_NIL; */
3048:src/keys.c    **** /* #endif	     */
3049:src/keys.c    **** 	  goto set_pc_and_exit;
3050:src/keys.c    **** #ifdef DM42
3051:src/keys.c    **** 	case K05:				// XEQ
3052:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3053:src/keys.c    **** 		goto xeq_or_gto;
3054:src/keys.c    **** 
3055:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3056:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3057:src/keys.c    **** 	xeq_or_gto:
3058:src/keys.c    **** 		if (label)
3059:src/keys.c    **** 			break;
3060:src/keys.c    **** 		return STATE_UNFINISHED;
3061:src/keys.c    **** #else
3062:src/keys.c    **** 	case K30:				// XEQ
3063:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3064:src/keys.c    **** 		goto xeq_or_gto;
3065:src/keys.c    **** 
3066:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3067:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3068:src/keys.c    **** 	xeq_or_gto:
3069:src/keys.c    **** 		if (label)
3070:src/keys.c    **** 			break;
3071:src/keys.c    **** 		return STATE_UNFINISHED;
3072:src/keys.c    **** #endif		
3073:src/keys.c    **** 	case K63:				// R/S
3074:src/keys.c    **** 		if (direct && label) {
3075:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3076:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3077:src/keys.c    **** 			break;
3078:src/keys.c    **** 		}
3079:src/keys.c    **** 		return STATE_UNFINISHED;
3080:src/keys.c    **** 
3081:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3082:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3083:src/keys.c    **** 		goto set_pc_and_exit;
3084:src/keys.c    **** 
3085:src/keys.c    **** 	default:
3086:src/keys.c    **** 		return STATE_UNFINISHED;
3087:src/keys.c    **** 	}
3088:src/keys.c    **** 	State2.digval = 0;
3089:src/keys.c    **** 	State2.labellist = 0;
3090:src/keys.c    **** 	return check_confirm(op);
3091:src/keys.c    **** }
3092:src/keys.c    **** 
3093:src/keys.c    **** 
3094:src/keys.c    **** static void set_window(int c) {
 2860              		.loc 1 3094 31 is_stmt 1 view -0
 2861              		.cfi_startproc
 2862              		@ args = 0, pretend = 0, frame = 0
 2863              		@ frame_needed = 0, uses_anonymous_args = 0
3095:src/keys.c    **** 
3096:src/keys.c    **** 	if (State2.runmode) {
ARM GAS  /tmp/ccwxoOej.s 			page 118


 2864              		.loc 1 3096 2 view .LVU814
3094:src/keys.c    **** 
 2865              		.loc 1 3094 31 is_stmt 0 view .LVU815
 2866 0000 38B5     		push	{r3, r4, r5, lr}
 2867              		.cfi_def_cfa_offset 16
 2868              		.cfi_offset 3, -16
 2869              		.cfi_offset 4, -12
 2870              		.cfi_offset 5, -8
 2871              		.cfi_offset 14, -4
 2872              		.loc 1 3096 6 view .LVU816
 2873 0002 224C     		ldr	r4, .L311
 2874 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2875              		.loc 1 3096 5 view .LVU817
 2876 0006 5A06     		lsls	r2, r3, #25
 2877 0008 00D4     		bmi	.L308
 2878              	.LVL230:
 2879              	.L296:
3097:src/keys.c    **** 		process_cmdline_set_lift();
3098:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3099:src/keys.c    **** 		State2.disp_freeze = 0;
3100:src/keys.c    **** 		display();	
3101:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3102:src/keys.c    **** 			if (UState.intm) {
3103:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3104:src/keys.c    **** 					State2.window--;
3105:src/keys.c    **** 				return;
3106:src/keys.c    **** 			}
3107:src/keys.c    **** 			else 
3108:src/keys.c    **** 				State2.window = is_dblmode();
3109:src/keys.c    **** 		}
3110:src/keys.c    **** 		else {
3111:src/keys.c    **** 			if (UState.intm) {
3112:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3113:src/keys.c    **** 					State2.window++;
3114:src/keys.c    **** 				return;
3115:src/keys.c    **** 			}
3116:src/keys.c    **** 			else
3117:src/keys.c    **** 				State2.window = 0;
3118:src/keys.c    **** 		}
3119:src/keys.c    **** 		set_smode(SDISP_SHOW);
3120:src/keys.c    **** 	}
3121:src/keys.c    **** }
 2880              		.loc 1 3121 1 view .LVU818
 2881 000a 38BD     		pop	{r3, r4, r5, pc}
 2882              	.LVL231:
 2883              	.L308:
3097:src/keys.c    **** 		process_cmdline_set_lift();
 2884              		.loc 1 3097 3 is_stmt 1 view .LVU819
 2885 000c 0546     		mov	r5, r0
 2886 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2887              	.LVL232:
3099:src/keys.c    **** 		display();	
 2888              		.loc 1 3099 3 view .LVU820
3099:src/keys.c    **** 		display();	
 2889              		.loc 1 3099 22 is_stmt 0 view .LVU821
 2890 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2891 0014 6FF30413 		bfc	r3, #4, #1
ARM GAS  /tmp/ccwxoOej.s 			page 119


 2892 0018 E375     		strb	r3, [r4, #23]
3100:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2893              		.loc 1 3100 3 is_stmt 1 view .LVU822
 2894 001a FFF7FEFF 		bl	display
 2895              	.LVL233:
3101:src/keys.c    **** 			if (UState.intm) {
 2896              		.loc 1 3101 3 view .LVU823
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2897              		.loc 1 3102 8 is_stmt 0 view .LVU824
 2898 001e 1C4B     		ldr	r3, .L311+4
 2899 0020 1B68     		ldr	r3, [r3]
3101:src/keys.c    **** 			if (UState.intm) {
 2900              		.loc 1 3101 6 view .LVU825
 2901 0022 2C2D     		cmp	r5, #44
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2902              		.loc 1 3102 8 view .LVU826
 2903 0024 93F8E83F 		ldrb	r3, [r3, #4072]	@ zero_extendqisi2
3101:src/keys.c    **** 			if (UState.intm) {
 2904              		.loc 1 3101 6 view .LVU827
 2905 0028 18D0     		beq	.L309
3111:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2906              		.loc 1 3111 4 is_stmt 1 view .LVU828
3111:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2907              		.loc 1 3111 7 is_stmt 0 view .LVU829
 2908 002a 13F00103 		ands	r3, r3, #1
 2909 002e 09D1     		bne	.L310
3117:src/keys.c    **** 		}
 2910              		.loc 1 3117 5 is_stmt 1 view .LVU830
3117:src/keys.c    **** 		}
 2911              		.loc 1 3117 19 is_stmt 0 view .LVU831
 2912 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2913 0032 63F3C502 		bfi	r2, r3, #3, #3
 2914 0036 2275     		strb	r2, [r4, #20]
 2915              	.L302:
3119:src/keys.c    **** 	}
 2916              		.loc 1 3119 3 is_stmt 1 view .LVU832
 2917              	.LVL234:
 2918              	.LBB413:
 2919              	.LBI413:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2920              		.loc 1 741 13 view .LVU833
 2921              	.LBB414:
 742:src/keys.c    **** }
 2922              		.loc 1 742 2 view .LVU834
 742:src/keys.c    **** }
 2923              		.loc 1 742 15 is_stmt 0 view .LVU835
 2924 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2925 003a 013B     		subs	r3, r3, #1
 2926 003c 18BF     		it	ne
 2927 003e 0123     		movne	r3, #1
 2928 0040 6374     		strb	r3, [r4, #17]
 2929              	.LVL235:
 742:src/keys.c    **** }
 2930              		.loc 1 742 15 view .LVU836
 2931              	.LBE414:
 2932              	.LBE413:
 2933              		.loc 1 3121 1 view .LVU837
ARM GAS  /tmp/ccwxoOej.s 			page 120


 2934 0042 38BD     		pop	{r3, r4, r5, pc}
 2935              	.LVL236:
 2936              	.L310:
3112:src/keys.c    **** 					State2.window++;
 2937              		.loc 1 3112 5 is_stmt 1 view .LVU838
3112:src/keys.c    **** 					State2.window++;
 2938              		.loc 1 3112 22 is_stmt 0 view .LVU839
 2939 0044 134A     		ldr	r2, .L311+8
3112:src/keys.c    **** 					State2.window++;
 2940              		.loc 1 3112 42 view .LVU840
 2941 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3112:src/keys.c    **** 					State2.window++;
 2942              		.loc 1 3112 8 view .LVU841
 2943 0048 1168     		ldr	r1, [r2]
3112:src/keys.c    **** 					State2.window++;
 2944              		.loc 1 3112 42 view .LVU842
 2945 004a C3F3C202 		ubfx	r2, r3, #3, #3
3112:src/keys.c    **** 					State2.window++;
 2946              		.loc 1 3112 8 view .LVU843
 2947 004e 8A42     		cmp	r2, r1
 2948 0050 DBDA     		bge	.L296
3113:src/keys.c    **** 				return;
 2949              		.loc 1 3113 6 is_stmt 1 view .LVU844
3113:src/keys.c    **** 				return;
 2950              		.loc 1 3113 19 is_stmt 0 view .LVU845
 2951 0052 0132     		adds	r2, r2, #1
 2952 0054 62F3C503 		bfi	r3, r2, #3, #3
 2953 0058 2375     		strb	r3, [r4, #20]
 2954              		.loc 1 3121 1 view .LVU846
 2955 005a 38BD     		pop	{r3, r4, r5, pc}
 2956              	.LVL237:
 2957              	.L309:
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2958              		.loc 1 3102 4 is_stmt 1 view .LVU847
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2959              		.loc 1 3102 7 is_stmt 0 view .LVU848
 2960 005c DB07     		lsls	r3, r3, #31
 2961 005e 0ED5     		bpl	.L300
 2962              	.LBB415:
 2963              	.LBI415:
3094:src/keys.c    **** 
 2964              		.loc 1 3094 13 is_stmt 1 view .LVU849
 2965              	.LVL238:
 2966              	.LBB416:
3103:src/keys.c    **** 					State2.window--;
 2967              		.loc 1 3103 5 view .LVU850
3103:src/keys.c    **** 					State2.window--;
 2968              		.loc 1 3103 22 is_stmt 0 view .LVU851
 2969 0060 0C4B     		ldr	r3, .L311+8
3103:src/keys.c    **** 					State2.window--;
 2970              		.loc 1 3103 8 view .LVU852
 2971 0062 1B68     		ldr	r3, [r3]
 2972 0064 002B     		cmp	r3, #0
 2973 0066 D0DD     		ble	.L296
3103:src/keys.c    **** 					State2.window--;
 2974              		.loc 1 3103 43 view .LVU853
 2975 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
ARM GAS  /tmp/ccwxoOej.s 			page 121


3103:src/keys.c    **** 					State2.window--;
 2976              		.loc 1 3103 26 view .LVU854
 2977 006a 13F0380F 		tst	r3, #56
 2978 006e CCD0     		beq	.L296
3104:src/keys.c    **** 				return;
 2979              		.loc 1 3104 6 is_stmt 1 view .LVU855
3104:src/keys.c    **** 				return;
 2980              		.loc 1 3104 12 is_stmt 0 view .LVU856
 2981 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3104:src/keys.c    **** 				return;
 2982              		.loc 1 3104 19 view .LVU857
 2983 0074 0732     		adds	r2, r2, #7
 2984 0076 62F3C503 		bfi	r3, r2, #3, #3
 2985 007a 2375     		strb	r3, [r4, #20]
 2986              	.LBE416:
 2987              	.LBE415:
 2988              		.loc 1 3121 1 view .LVU858
 2989 007c 38BD     		pop	{r3, r4, r5, pc}
 2990              	.LVL239:
 2991              	.L300:
3108:src/keys.c    **** 		}
 2992              		.loc 1 3108 5 is_stmt 1 view .LVU859
3108:src/keys.c    **** 		}
 2993              		.loc 1 3108 21 is_stmt 0 view .LVU860
 2994 007e FFF7FEFF 		bl	is_dblmode
 2995              	.LVL240:
3108:src/keys.c    **** 		}
 2996              		.loc 1 3108 19 view .LVU861
 2997 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2998 0084 60F3C503 		bfi	r3, r0, #3, #3
 2999 0088 2375     		strb	r3, [r4, #20]
 3000 008a D5E7     		b	.L302
 3001              	.L312:
 3002              		.align	2
 3003              	.L311:
 3004 008c 00000000 		.word	StateWhileOn
 3005 0090 00000000 		.word	main_ram
 3006 0094 00000000 		.word	IntMaxWindow
 3007              		.cfi_endproc
 3008              	.LFE58:
 3010              		.section	.text.arg_storcl,"ax",%progbits
 3011              		.align	1
 3012              		.p2align 2,,3
 3013              		.syntax unified
 3014              		.thumb
 3015              		.thumb_func
 3016              		.fpu fpv4-sp-d16
 3018              	arg_storcl:
 3019              	.LVL241:
 3020              	.LFB39:
2020:src/keys.c    **** 	unsigned int b = CmdBase;
 3021              		.loc 1 2020 56 is_stmt 1 view -0
 3022              		.cfi_startproc
 3023              		@ args = 0, pretend = 0, frame = 0
 3024              		@ frame_needed = 0, uses_anonymous_args = 0
 3025              		@ link register save eliminated.
2021:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 122


 3026              		.loc 1 2021 2 view .LVU863
2021:src/keys.c    **** 
 3027              		.loc 1 2021 19 is_stmt 0 view .LVU864
 3028 0000 0F4A     		ldr	r2, .L345
 3029 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3030              	.LVL242:
2023:src/keys.c    **** 		CmdBase += n;
 3031              		.loc 1 2023 2 is_stmt 1 view .LVU865
 3032              	.LBB425:
 3033              	.LBI425:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3034              		.loc 1 2011 12 view .LVU866
 3035              	.LBB426:
2016:src/keys.c    **** #endif
 3036              		.loc 1 2016 2 view .LVU867
2016:src/keys.c    **** #endif
 3037              		.loc 1 2016 41 is_stmt 0 view .LVU868
 3038 0004 032B     		cmp	r3, #3
 3039 0006 14D0     		beq	.L314
2016:src/keys.c    **** #endif
 3040              		.loc 1 2016 24 view .LVU869
 3041 0008 0A2B     		cmp	r3, #10
 3042 000a 12D0     		beq	.L314
 3043              	.LVL243:
 3044              	.LBB427:
 3045              	.LBI427:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3046              		.loc 1 2011 12 is_stmt 1 view .LVU870
 3047              	.LBB428:
2016:src/keys.c    **** #endif
 3048              		.loc 1 2016 41 is_stmt 0 view .LVU871
 3049 000c 19B1     		cbz	r1, .L315
2016:src/keys.c    **** #endif
 3050              		.loc 1 2016 51 view .LVU872
 3051 000e 152B     		cmp	r3, #21
 3052 0010 0FD0     		beq	.L314
2016:src/keys.c    **** #endif
 3053              		.loc 1 2016 70 view .LVU873
 3054 0012 1A2B     		cmp	r3, #26
 3055 0014 0DD0     		beq	.L314
 3056              	.L315:
 3057              	.LVL244:
2016:src/keys.c    **** #endif
 3058              		.loc 1 2016 70 view .LVU874
 3059              	.LBE428:
 3060              	.LBE427:
 3061              	.LBE426:
 3062              	.LBE425:
2028:src/keys.c    **** 		b -= n;
 3063              		.loc 1 2028 2 is_stmt 1 view .LVU875
2028:src/keys.c    **** 		b -= n;
 3064              		.loc 1 2028 5 is_stmt 0 view .LVU876
 3065 0016 8342     		cmp	r3, r0
 3066 0018 09D3     		bcc	.L320
2029:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3067              		.loc 1 2029 3 is_stmt 1 view .LVU877
2029:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
ARM GAS  /tmp/ccwxoOej.s 			page 123


 3068              		.loc 1 2029 5 is_stmt 0 view .LVU878
 3069 001a 1B1A     		subs	r3, r3, r0
 3070              	.LVL245:
2030:src/keys.c    **** 			CmdBase = b;
 3071              		.loc 1 2030 3 is_stmt 1 view .LVU879
 3072              	.LBB429:
 3073              	.LBI429:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3074              		.loc 1 2011 12 view .LVU880
 3075              	.LBB430:
2016:src/keys.c    **** #endif
 3076              		.loc 1 2016 2 view .LVU881
2016:src/keys.c    **** #endif
 3077              		.loc 1 2016 41 is_stmt 0 view .LVU882
 3078 001c 032B     		cmp	r3, #3
 3079 001e 0CD0     		beq	.L318
2016:src/keys.c    **** #endif
 3080              		.loc 1 2016 24 view .LVU883
 3081 0020 0A2B     		cmp	r3, #10
 3082 0022 0AD0     		beq	.L318
 3083              	.LVL246:
 3084              	.LBB431:
 3085              	.LBI431:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3086              		.loc 1 2011 12 is_stmt 1 view .LVU884
 3087              	.LBB432:
2016:src/keys.c    **** #endif
 3088              		.loc 1 2016 41 is_stmt 0 view .LVU885
 3089 0024 19B1     		cbz	r1, .L320
2016:src/keys.c    **** #endif
 3090              		.loc 1 2016 51 view .LVU886
 3091 0026 152B     		cmp	r3, #21
 3092 0028 07D0     		beq	.L318
2016:src/keys.c    **** #endif
 3093              		.loc 1 2016 70 view .LVU887
 3094 002a 1A2B     		cmp	r3, #26
 3095 002c 05D0     		beq	.L318
 3096              	.LVL247:
 3097              	.L320:
2016:src/keys.c    **** #endif
 3098              		.loc 1 2016 70 view .LVU888
 3099              	.LBE432:
 3100              	.LBE431:
 3101              	.LBE430:
 3102              	.LBE429:
2035:src/keys.c    **** }
 3103              		.loc 1 2035 9 view .LVU889
 3104 002e 0020     		movs	r0, #0
 3105              	.LVL248:
2036:src/keys.c    **** 
 3106              		.loc 1 2036 1 view .LVU890
 3107 0030 7047     		bx	lr
 3108              	.LVL249:
 3109              	.L314:
2024:src/keys.c    **** 		return 1;
 3110              		.loc 1 2024 3 is_stmt 1 view .LVU891
2024:src/keys.c    **** 		return 1;
ARM GAS  /tmp/ccwxoOej.s 			page 124


 3111              		.loc 1 2024 11 is_stmt 0 view .LVU892
 3112 0032 1844     		add	r0, r0, r3
 3113              	.LVL250:
2024:src/keys.c    **** 		return 1;
 3114              		.loc 1 2024 11 view .LVU893
 3115 0034 D077     		strb	r0, [r2, #31]
2025:src/keys.c    **** 	}
 3116              		.loc 1 2025 3 is_stmt 1 view .LVU894
2025:src/keys.c    **** 	}
 3117              		.loc 1 2025 10 is_stmt 0 view .LVU895
 3118 0036 0120     		movs	r0, #1
 3119 0038 7047     		bx	lr
 3120              	.LVL251:
 3121              	.L318:
2031:src/keys.c    **** 			return 1;
 3122              		.loc 1 2031 4 is_stmt 1 view .LVU896
2031:src/keys.c    **** 			return 1;
 3123              		.loc 1 2031 12 is_stmt 0 view .LVU897
 3124 003a D377     		strb	r3, [r2, #31]
2032:src/keys.c    **** 		}
 3125              		.loc 1 2032 4 is_stmt 1 view .LVU898
2032:src/keys.c    **** 		}
 3126              		.loc 1 2032 11 is_stmt 0 view .LVU899
 3127 003c 0120     		movs	r0, #1
 3128              	.LVL252:
2032:src/keys.c    **** 		}
 3129              		.loc 1 2032 11 view .LVU900
 3130 003e 7047     		bx	lr
 3131              	.L346:
 3132              		.align	2
 3133              	.L345:
 3134 0040 00000000 		.word	StateWhileOn
 3135              		.cfi_endproc
 3136              	.LFE39:
 3138              		.section	.text.process_arg,"ax",%progbits
 3139              		.align	1
 3140              		.p2align 2,,3
 3141              		.syntax unified
 3142              		.thumb
 3143              		.thumb_func
 3144              		.fpu fpv4-sp-d16
 3146              	process_arg:
 3147              	.LVL253:
 3148              	.LFB42:
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3149              		.loc 1 2070 41 is_stmt 1 view -0
 3150              		.cfi_startproc
 3151              		@ args = 0, pretend = 0, frame = 8
 3152              		@ frame_needed = 0, uses_anonymous_args = 0
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3153              		.loc 1 2071 2 view .LVU902
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3154              		.loc 1 2070 41 is_stmt 0 view .LVU903
 3155 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3156              		.cfi_def_cfa_offset 36
 3157              		.cfi_offset 4, -36
 3158              		.cfi_offset 5, -32
ARM GAS  /tmp/ccwxoOej.s 			page 125


 3159              		.cfi_offset 6, -28
 3160              		.cfi_offset 7, -24
 3161              		.cfi_offset 8, -20
 3162              		.cfi_offset 9, -16
 3163              		.cfi_offset 10, -12
 3164              		.cfi_offset 11, -8
 3165              		.cfi_offset 14, -4
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3166              		.loc 1 2071 22 view .LVU904
 3167 0004 C94C     		ldr	r4, .L491
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3168              		.loc 1 2073 31 view .LVU905
 3169 0006 DFF834A3 		ldr	r10, .L491+16
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3170              		.loc 1 2071 22 view .LVU906
 3171 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3172              	.LBB454:
 3173              	.LBB455:
 3174              	.LBB456:
 3175              	.LBB457:
 143:src/keys.c    **** }
 3176              		.loc 1 143 23 view .LVU907
 3177 000c C84A     		ldr	r2, .L491+4
 3178              	.LBE457:
 3179              	.LBE456:
 234:src/keys.c    **** }
 3180              		.loc 1 234 28 view .LVU908
 3181 000e C94E     		ldr	r6, .L491+8
 3182              	.LBB460:
 3183              	.LBB458:
 143:src/keys.c    **** }
 3184              		.loc 1 143 23 view .LVU909
 3185 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3186              	.LBE458:
 3187              	.LBE460:
 3188              	.LBE455:
 3189              	.LBE454:
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3190              		.loc 1 2074 20 view .LVU910
 3191 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3192              	.LBB464:
 3193              	.LBB462:
 234:src/keys.c    **** }
 3194              		.loc 1 234 28 view .LVU911
 3195 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3196              	.LBE462:
 3197              	.LBE464:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3198              		.loc 1 2073 31 view .LVU912
 3199 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3200              		.loc 1 2070 41 view .LVU913
 3201 001c 83B0     		sub	sp, sp, #12
 3202              		.cfi_def_cfa_offset 48
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3203              		.loc 1 2073 31 view .LVU914
 3204 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
ARM GAS  /tmp/ccwxoOej.s 			page 126


2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3205              		.loc 1 2071 15 view .LVU915
 3206 0020 0095     		str	r5, [sp]
 3207              	.LVL254:
2072:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3208              		.loc 1 2072 2 is_stmt 1 view .LVU916
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3209              		.loc 1 2073 40 is_stmt 0 view .LVU917
 3210 0022 4A07     		lsls	r2, r1, #29
 3211 0024 58BF     		it	pl
 3212 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3213              		.loc 1 2074 20 view .LVU918
 3214 002a 0193     		str	r3, [sp, #4]
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3215              		.loc 1 2073 40 view .LVU919
 3216 002c 54BF     		ite	pl
 3217 002e 4FEAD878 		lsrpl	r8, r8, #31
 3218 0032 4FF00108 		movmi	r8, #1
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3219              		.loc 1 2070 41 view .LVU920
 3220 0036 0746     		mov	r7, r0
 3221              	.LVL255:
 3222              	.LBB465:
 3223              	.LBI454:
 210:src/keys.c    **** {
 3224              		.loc 1 210 14 is_stmt 1 view .LVU921
 3225              	.LBB463:
 212:src/keys.c    ****     // K00 - K05
 3226              		.loc 1 212 3 view .LVU922
 234:src/keys.c    **** }
 3227              		.loc 1 234 3 view .LVU923
 3228              	.LBB461:
 3229              	.LBI456:
 131:src/keys.c    **** {
 3230              		.loc 1 131 12 view .LVU924
 3231              	.LBB459:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3232              		.loc 1 133 2 view .LVU925
 143:src/keys.c    **** }
 3233              		.loc 1 143 2 view .LVU926
 143:src/keys.c    **** }
 3234              		.loc 1 143 2 is_stmt 0 view .LVU927
 3235              	.LBE459:
 3236              	.LBE461:
 234:src/keys.c    **** }
 3237              		.loc 1 234 10 view .LVU928
 3238 0038 4E46     		mov	r6, r9
 3239              	.LVL256:
 234:src/keys.c    **** }
 3240              		.loc 1 234 10 view .LVU929
 3241              	.LBE463:
 3242              	.LBE465:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3243              		.loc 1 2073 2 is_stmt 1 view .LVU930
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3244              		.loc 1 2074 2 view .LVU931
ARM GAS  /tmp/ccwxoOej.s 			page 127


2075:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3245              		.loc 1 2075 2 view .LVU932
 3246              	.LBB466:
 3247              	.LBI466:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3248              		.loc 1 114 13 view .LVU933
 3249              	.LBE466:
 115:src/keys.c    **** }
 3250              		.loc 1 115 2 view .LVU934
 3251              	.LBB479:
 3252              	.LBB467:
 3253              	.LBI467:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3254              		.loc 1 104 20 view .LVU935
 3255              	.LBB468:
 105:src/keys.c    **** 	State2.shifts = shift;
 3256              		.loc 1 105 2 view .LVU936
 3257              	.LBB469:
 3258              	.LBI469:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3259              		.loc 1 96 13 view .LVU937
 3260              	.LBB470:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3261              		.loc 1 97 2 view .LVU938
 3262              	.LBE470:
 3263              	.LBE469:
 3264              	.LBE468:
 3265              	.LBE467:
 3266              	.LBE479:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3267              		.loc 1 2073 31 is_stmt 0 view .LVU939
 3268 003a 4FEA051B 		lsl	fp, r5, #4
 3269              	.LBB480:
 3270              	.LBB476:
 3271              	.LBB473:
 3272              	.LBB472:
 3273              	.LBB471:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3274              		.loc 1 97 18 view .LVU940
 3275 003e FFF7FEFF 		bl	shift_down
 3276              	.LVL257:
  98:src/keys.c    **** }
 3277              		.loc 1 98 2 is_stmt 1 view .LVU941
  98:src/keys.c    **** }
 3278              		.loc 1 98 52 is_stmt 0 view .LVU942
 3279 0042 00B9     		cbnz	r0, .L349
 3280 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3281              	.LVL258:
 3282              	.L349:
  98:src/keys.c    **** }
 3283              		.loc 1 98 52 view .LVU943
 3284              	.LBE471:
 3285              	.LBE472:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3286              		.loc 1 106 2 is_stmt 1 view .LVU944
 3287              	.LBE473:
 3288              	.LBE476:
ARM GAS  /tmp/ccwxoOej.s 			page 128


 3289              	.LBE480:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3290              		.loc 1 2076 38 is_stmt 0 view .LVU945
 3291 0046 D344     		add	fp, fp, r10
 3292              	.LBB481:
 3293              	.LBB477:
 3294              	.LBB474:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3295              		.loc 1 106 16 view .LVU946
 3296 0048 4FF0000E 		mov	lr, #0
 3297              	.LBE474:
 3298              	.LBE477:
 3299              	.LBE481:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3300              		.loc 1 2076 38 view .LVU947
 3301 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3302              	.LBB482:
 3303              	.LBB478:
 3304              	.LBB475:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3305              		.loc 1 106 16 view .LVU948
 3306 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3307              		.loc 1 108 2 is_stmt 1 view .LVU949
 3308              	.LVL259:
 108:src/keys.c    **** }
 3309              		.loc 1 108 2 is_stmt 0 view .LVU950
 3310              	.LBE475:
 3311              	.LBE478:
 3312              	.LBE482:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3313              		.loc 1 2076 2 is_stmt 1 view .LVU951
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3314              		.loc 1 2076 61 is_stmt 0 view .LVU952
 3315 0054 8B06     		lsls	r3, r1, #26
 3316 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3317 005a 19D5     		bpl	.L350
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3318              		.loc 1 2076 61 discriminator 1 view .LVU953
 3319 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3320 005e 11F0C00F 		tst	r1, #192
 3321 0062 1FD0     		beq	.L479
 3322              	.LVL260:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3323              		.loc 1 2080 2 is_stmt 1 view .LVU954
2081:src/keys.c    **** 		reset_arg();
 3324              		.loc 1 2081 5 is_stmt 0 view .LVU955
 3325 0064 962D     		cmp	r5, #150
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3326              		.loc 1 2080 4 view .LVU956
 3327 0066 29F08006 		bic	r6, r9, #128
 3328              	.LVL261:
2081:src/keys.c    **** 		reset_arg();
 3329              		.loc 1 2081 2 is_stmt 1 view .LVU957
2081:src/keys.c    **** 		reset_arg();
 3330              		.loc 1 2081 5 is_stmt 0 view .LVU958
 3331 006a 15D8     		bhi	.L379
ARM GAS  /tmp/ccwxoOej.s 			page 129


2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3332              		.loc 1 2076 61 view .LVU959
 3333 006c F446     		mov	ip, lr
 3334              	.L359:
2086:src/keys.c    **** 	  switch (n) {
 3335              		.loc 1 2086 35 discriminator 1 view .LVU960
 3336 006e 6169     		ldr	r1, [r4, #20]
 3337 0070 11F4103F 		tst	r1, #147456
 3338 0074 2ED1     		bne	.L361
2087:src/keys.c    **** 	  case regX_idx:
 3339              		.loc 1 2087 4 is_stmt 1 view .LVU961
 3340 0076 672E     		cmp	r6, #103
 3341 0078 2CD8     		bhi	.L361
2087:src/keys.c    **** 	  case regX_idx:
 3342              		.loc 1 2087 4 is_stmt 0 view .LVU962
 3343 007a 632E     		cmp	r6, #99
 3344 007c 24D9     		bls	.L421
 3345 007e 653E     		subs	r6, r6, #101
 3346              	.LVL262:
2087:src/keys.c    **** 	  case regX_idx:
 3347              		.loc 1 2087 4 view .LVU963
 3348 0080 022E     		cmp	r6, #2
 3349 0082 00F26082 		bhi	.L364
 3350 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3351              	.L366:
 3352 008a 1101     		.2byte	(.L368-.L366)/2
 3353 008c 0B01     		.2byte	(.L367-.L366)/2
 3354 008e 1301     		.2byte	(.L365-.L366)/2
 3355              	.LVL263:
 3356              		.p2align 1
 3357              	.L350:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3358              		.loc 1 2080 2 is_stmt 1 view .LVU964
2081:src/keys.c    **** 		reset_arg();
 3359              		.loc 1 2081 5 is_stmt 0 view .LVU965
 3360 0090 962D     		cmp	r5, #150
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3361              		.loc 1 2080 4 view .LVU966
 3362 0092 29F08006 		bic	r6, r9, #128
 3363              	.LVL264:
2081:src/keys.c    **** 		reset_arg();
 3364              		.loc 1 2081 2 is_stmt 1 view .LVU967
2081:src/keys.c    **** 		reset_arg();
 3365              		.loc 1 2081 5 is_stmt 0 view .LVU968
 3366 0096 EAD9     		bls	.L359
 3367              	.LVL265:
 3368              	.L379:
2336:src/keys.c    **** 	default:
 3369              		.loc 1 2336 3 is_stmt 1 view .LVU969
 3370 0098 FFF7FEFF 		bl	reset_arg
 3371              	.LVL266:
 3372              	.L472:
2340:src/keys.c    **** }
 3373              		.loc 1 2340 9 is_stmt 0 view .LVU970
 3374 009c 3320     		movs	r0, #51
 3375              	.L347:
2341:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 130


 3376              		.loc 1 2341 1 view .LVU971
 3377 009e 03B0     		add	sp, sp, #12
 3378              		.cfi_remember_state
 3379              		.cfi_def_cfa_offset 36
 3380              		@ sp needed
 3381 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3382              	.LVL267:
 3383              	.L479:
 3384              		.cfi_restore_state
2077:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3385              		.loc 1 2077 2 is_stmt 1 view .LVU972
2077:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3386              		.loc 1 2077 35 is_stmt 0 view .LVU973
 3387 00a4 292F     		cmp	r7, #41
 3388 00a6 00F0C080 		beq	.L352
2078:src/keys.c    **** 
 3389              		.loc 1 2078 11 view .LVU974
 3390 00aa 0128     		cmp	r0, #1
 3391 00ac 00F0D180 		beq	.L353
2078:src/keys.c    **** 
 3392              		.loc 1 2078 32 discriminator 3 view .LVU975
 3393 00b0 B9F1090F 		cmp	r9, #9
 3394 00b4 00F2B680 		bhi	.L354
 3395              	.LVL268:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3396              		.loc 1 2080 2 is_stmt 1 view .LVU976
2081:src/keys.c    **** 		reset_arg();
 3397              		.loc 1 2081 2 view .LVU977
2081:src/keys.c    **** 		reset_arg();
 3398              		.loc 1 2081 5 is_stmt 0 view .LVU978
 3399 00b8 962D     		cmp	r5, #150
 3400 00ba EDD8     		bhi	.L379
2086:src/keys.c    **** 	  switch (n) {
 3401              		.loc 1 2086 35 view .LVU979
 3402 00bc 6169     		ldr	r1, [r4, #20]
 3403 00be 11F4103F 		tst	r1, #147456
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3404              		.loc 1 2076 61 view .LVU980
 3405 00c2 4FF0010C 		mov	ip, #1
2086:src/keys.c    **** 	  switch (n) {
 3406              		.loc 1 2086 35 view .LVU981
 3407 00c6 05D1     		bne	.L361
 3408              	.L421:
2087:src/keys.c    **** 	  case regX_idx:
 3409              		.loc 1 2087 4 view .LVU982
 3410 00c8 16B1     		cbz	r6, .L363
 3411 00ca 721F     		subs	r2, r6, #5
 3412 00cc 042A     		cmp	r2, #4
 3413 00ce 01D8     		bhi	.L361
 3414              	.L363:
2102:src/keys.c    **** 	  }
 3415              		.loc 1 2102 6 is_stmt 1 view .LVU983
2102:src/keys.c    **** 	  }
 3416              		.loc 1 2102 13 is_stmt 0 view .LVU984
 3417 00d0 3046     		mov	r0, r6
 3418              	.LVL269:
2102:src/keys.c    **** 	  }
ARM GAS  /tmp/ccwxoOej.s 			page 131


 3419              		.loc 1 2102 13 view .LVU985
 3420 00d2 E6E0     		b	.L473
 3421              	.LVL270:
 3422              	.L361:
2109:src/keys.c    **** 		// row column shorthand addressing
 3423              		.loc 1 2109 2 is_stmt 1 view .LVU986
2115:src/keys.c    **** 		switch ((int)c) {
 3424              		.loc 1 2115 2 view .LVU987
2115:src/keys.c    **** 		switch ((int)c) {
 3425              		.loc 1 2115 5 is_stmt 0 view .LVU988
 3426 00d4 4D2D     		cmp	r5, #77
 3427 00d6 00F0B180 		beq	.L480
2115:src/keys.c    **** 		switch ((int)c) {
 3428              		.loc 1 2115 23 discriminator 1 view .LVU989
 3429 00da 05F16C02 		add	r2, r5, #108
 3430 00de D2B2     		uxtb	r2, r2
 3431 00e0 012A     		cmp	r2, #1
 3432 00e2 61D9     		bls	.L481
 3433              	.LVL271:
 3434              	.L370:
2146:src/keys.c    **** #else
 3435              		.loc 1 2146 3 is_stmt 1 view .LVU990
2146:src/keys.c    **** #else
 3436              		.loc 1 2146 11 is_stmt 0 view .LVU991
 3437 00e4 E577     		strb	r5, [r4, #31]
2169:src/keys.c    **** 	case K_F:
 3438              		.loc 1 2169 2 is_stmt 1 view .LVU992
 3439 00e6 2D2F     		cmp	r7, #45
 3440 00e8 D8D8     		bhi	.L472
 3441 00ea 01A3     		adr	r3, .L374
 3442 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3443              		.p2align 2
 3444              	.L374:
 3445 00f0 C1010000 		.word	.L391+1
 3446 00f4 C1010000 		.word	.L391+1
 3447 00f8 C1010000 		.word	.L391+1
 3448 00fc C1010000 		.word	.L391+1
 3449 0100 9D000000 		.word	.L472+1
 3450 0104 9D000000 		.word	.L472+1
 3451 0108 9D000000 		.word	.L472+1
 3452 010c 9D000000 		.word	.L472+1
 3453 0110 C1010000 		.word	.L391+1
 3454 0114 C1010000 		.word	.L391+1
 3455 0118 C1010000 		.word	.L391+1
 3456 011c C1010000 		.word	.L391+1
 3457 0120 45040000 		.word	.L390+1
 3458 0124 9D000000 		.word	.L472+1
 3459 0128 9D000000 		.word	.L472+1
 3460 012c 9D000000 		.word	.L472+1
 3461 0130 C7020000 		.word	.L389+1
 3462 0134 9D000000 		.word	.L472+1
 3463 0138 19020000 		.word	.L388+1
 3464 013c 9D000000 		.word	.L472+1
 3465 0140 9D000000 		.word	.L472+1
 3466 0144 9D000000 		.word	.L472+1
 3467 0148 F3020000 		.word	.L387+1
 3468 014c 9D000000 		.word	.L472+1
ARM GAS  /tmp/ccwxoOej.s 			page 132


 3469 0150 FF020000 		.word	.L386+1
 3470 0154 0B030000 		.word	.L385+1
 3471 0158 9D000000 		.word	.L472+1
 3472 015c 9D000000 		.word	.L472+1
 3473 0160 81020000 		.word	.L384+1
 3474 0164 9D000000 		.word	.L472+1
 3475 0168 9D000000 		.word	.L472+1
 3476 016c 1F030000 		.word	.L383+1
 3477 0170 4D040000 		.word	.L382+1
 3478 0174 41030000 		.word	.L381+1
 3479 0178 4D030000 		.word	.L380+1
 3480 017c 9D000000 		.word	.L472+1
 3481 0180 99000000 		.word	.L379+1
 3482 0184 9D000000 		.word	.L472+1
 3483 0188 67030000 		.word	.L378+1
 3484 018c 9D000000 		.word	.L472+1
 3485 0190 AD030000 		.word	.L377+1
 3486 0194 CD030000 		.word	.L376+1
 3487 0198 9D000000 		.word	.L472+1
 3488 019c 9D000000 		.word	.L472+1
 3489 01a0 ED030000 		.word	.L375+1
 3490 01a4 25040000 		.word	.L373+1
 3491              	.LVL272:
 3492              		.p2align 1
 3493              	.L481:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 3494              		.loc 1 2116 3 view .LVU993
 3495 01a8 122F     		cmp	r7, #18
 3496 01aa 2FD0     		beq	.L417
 3497 01ac 182F     		cmp	r7, #24
 3498 01ae 01D0     		beq	.L418
 3499 01b0 012F     		cmp	r7, #1
 3500 01b2 97D1     		bne	.L370
 3501              	.L418:
2132:src/keys.c    **** 		    base = RARG_SIG0;
 3502              		.loc 1 2132 5 view .LVU994
2136:src/keys.c    **** 		    base = RARG_FIX;
 3503              		.loc 1 2136 5 view .LVU995
2136:src/keys.c    **** 		    base = RARG_FIX;
 3504              		.loc 1 2136 8 is_stmt 0 view .LVU996
 3505 01b4 942D     		cmp	r5, #148
 3506 01b6 7DD1     		bne	.L482
 3507 01b8 4D23     		movs	r3, #77
 3508 01ba 0093     		str	r3, [sp]
 3509              	.LVL273:
2137:src/keys.c    **** 		    break;
 3510              		.loc 1 2137 12 view .LVU997
 3511 01bc 1D46     		mov	r5, r3
 3512 01be 91E7     		b	.L370
 3513              	.LVL274:
 3514              	.L391:
2224:src/keys.c    **** 			return arg_eval(n);
 3515              		.loc 1 2224 4 is_stmt 1 view .LVU998
2224:src/keys.c    **** 			return arg_eval(n);
 3516              		.loc 1 2224 8 is_stmt 0 view .LVU999
 3517 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2224:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/ccwxoOej.s 			page 133


 3518              		.loc 1 2224 7 view .LVU1000
 3519 01c2 5306     		lsls	r3, r2, #25
 3520 01c4 6AD4     		bmi	.L406
2224:src/keys.c    **** 			return arg_eval(n);
 3521              		.loc 1 2224 19 discriminator 1 view .LVU1001
 3522 01c6 B8F1000F 		cmp	r8, #0
 3523 01ca 67D1     		bne	.L406
2226:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3524              		.loc 1 2226 3 is_stmt 1 view .LVU1002
2226:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3525              		.loc 1 2226 6 is_stmt 0 view .LVU1003
 3526 01cc 032F     		cmp	r7, #3
 3527 01ce 3FF665AF 		bhi	.L472
2227:src/keys.c    **** 		break;
 3528              		.loc 1 2227 4 is_stmt 1 view .LVU1004
 3529              	.LVL275:
 3530              	.LBB483:
 3531              	.LBI483:
1997:src/keys.c    **** 	const unsigned int b = CmdBase;
 3532              		.loc 1 1997 12 view .LVU1005
 3533              	.LBB484:
1998:src/keys.c    **** 
 3534              		.loc 1 1998 2 view .LVU1006
2000:src/keys.c    **** 	{
 3535              		.loc 1 2000 2 view .LVU1007
2000:src/keys.c    **** 	{
 3536              		.loc 1 2000 16 is_stmt 0 view .LVU1008
 3537 01d2 009B     		ldr	r3, [sp]
 3538 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3539 01d8 1801     		lsls	r0, r3, #4
 3540 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2000:src/keys.c    **** 	{
 3541              		.loc 1 2000 5 view .LVU1009
 3542 01dc 8D06     		lsls	r5, r1, #26
 3543 01de 05D4     		bmi	.L397
2000:src/keys.c    **** 	{
 3544              		.loc 1 2000 40 view .LVU1010
 3545 01e0 A3F15109 		sub	r9, r3, #81
2000:src/keys.c    **** 	{
 3546              		.loc 1 2000 23 view .LVU1011
 3547 01e4 B9F10A0F 		cmp	r9, #10
 3548 01e8 3FF658AF 		bhi	.L472
 3549              	.L397:
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3550              		.loc 1 2002 3 is_stmt 1 view .LVU1012
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3551              		.loc 1 2002 6 is_stmt 0 view .LVU1013
 3552 01ec 1106     		lsls	r1, r2, #24
 3553 01ee 3FF555AF 		bmi	.L472
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3554              		.loc 1 2002 18 view .LVU1014
 3555 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3556 01f4 002A     		cmp	r2, #0
 3557 01f6 7FF451AF 		bne	.L472
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3558              		.loc 1 2004 3 is_stmt 1 view .LVU1015
2004:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccwxoOej.s 			page 134


 3559              		.loc 1 2004 17 is_stmt 0 view .LVU1016
 3560 01fa 0AEB0003 		add	r3, r10, r0
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3561              		.loc 1 2004 6 view .LVU1017
 3562 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3563 0200 632B     		cmp	r3, #99
 3564 0202 7FF64BAF 		bls	.L472
2006:src/keys.c    **** 	}
 3565              		.loc 1 2006 3 is_stmt 1 view .LVU1018
2006:src/keys.c    **** 	}
 3566              		.loc 1 2006 10 is_stmt 0 view .LVU1019
 3567 0206 07F16400 		add	r0, r7, #100
 3568 020a 34E0     		b	.L474
 3569              	.LVL276:
 3570              	.L417:
2006:src/keys.c    **** 	}
 3571              		.loc 1 2006 10 view .LVU1020
 3572              	.LBE484:
 3573              	.LBE483:
2118:src/keys.c    **** 		    base = RARG_SIG;
 3574              		.loc 1 2118 5 is_stmt 1 view .LVU1021
2122:src/keys.c    **** 		    base = RARG_SIG0;
 3575              		.loc 1 2122 5 view .LVU1022
2122:src/keys.c    **** 		    base = RARG_SIG0;
 3576              		.loc 1 2122 8 is_stmt 0 view .LVU1023
 3577 020c 942D     		cmp	r5, #148
 3578 020e 01D0     		beq	.L467
2126:src/keys.c    **** 		    base = RARG_FIX;
 3579              		.loc 1 2126 5 is_stmt 1 view .LVU1024
2126:src/keys.c    **** 		    base = RARG_FIX;
 3580              		.loc 1 2126 8 is_stmt 0 view .LVU1025
 3581 0210 952D     		cmp	r5, #149
 3582 0212 56D0     		beq	.L483
 3583              	.L467:
2146:src/keys.c    **** #else
 3584              		.loc 1 2146 3 is_stmt 1 view .LVU1026
2146:src/keys.c    **** #else
 3585              		.loc 1 2146 11 is_stmt 0 view .LVU1027
 3586 0214 9523     		movs	r3, #149
 3587              	.LVL277:
 3588              	.L471:
2146:src/keys.c    **** #else
 3589              		.loc 1 2146 11 view .LVU1028
 3590 0216 E377     		strb	r3, [r4, #31]
2169:src/keys.c    **** 	case K_F:
 3591              		.loc 1 2169 2 is_stmt 1 view .LVU1029
 3592              	.L388:
2286:src/keys.c    **** 		break;
 3593              		.loc 1 2286 3 view .LVU1030
 3594 0218 0021     		movs	r1, #0
 3595 021a 0620     		movs	r0, #6
 3596              	.LVL278:
2286:src/keys.c    **** 		break;
 3597              		.loc 1 2286 3 is_stmt 0 view .LVU1031
 3598 021c FFF7FEFF 		bl	arg_storcl
 3599              	.LVL279:
2287:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 135


 3600              		.loc 1 2287 3 is_stmt 1 view .LVU1032
2340:src/keys.c    **** }
 3601              		.loc 1 2340 9 is_stmt 0 view .LVU1033
 3602 0220 3320     		movs	r0, #51
2287:src/keys.c    **** 
 3603              		.loc 1 2287 3 view .LVU1034
 3604 0222 3CE7     		b	.L347
 3605              	.LVL280:
 3606              	.L354:
2078:src/keys.c    **** 
 3607              		.loc 1 2078 42 discriminator 4 view .LVU1035
 3608 0224 19F0800F 		tst	r9, #128
 3609 0228 13D0     		beq	.L353
 3610              	.L352:
 3611              	.LVL281:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3612              		.loc 1 2080 2 is_stmt 1 view .LVU1036
2081:src/keys.c    **** 		reset_arg();
 3613              		.loc 1 2081 5 is_stmt 0 view .LVU1037
 3614 022a 962D     		cmp	r5, #150
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3615              		.loc 1 2080 4 view .LVU1038
 3616 022c 29F08006 		bic	r6, r9, #128
 3617              	.LVL282:
2081:src/keys.c    **** 		reset_arg();
 3618              		.loc 1 2081 2 is_stmt 1 view .LVU1039
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3619              		.loc 1 2076 61 is_stmt 0 view .LVU1040
 3620 0230 98BF     		it	ls
 3621 0232 4FF0010C 		movls	ip, #1
2081:src/keys.c    **** 		reset_arg();
 3622              		.loc 1 2081 5 view .LVU1041
 3623 0236 7FF61AAF 		bls	.L359
 3624 023a 2DE7     		b	.L379
 3625              	.L480:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 3626              		.loc 1 2116 3 is_stmt 1 view .LVU1042
 3627 023c 122F     		cmp	r7, #18
 3628 023e 00F00B81 		beq	.L429
 3629 0242 182F     		cmp	r7, #24
 3630 0244 02D0     		beq	.L431
 3631 0246 012F     		cmp	r7, #1
 3632 0248 7FF44CAF 		bne	.L370
 3633              	.L431:
 3634 024c 9525     		movs	r5, #149
 3635              	.LVL283:
2133:src/keys.c    **** 		    break;
 3636              		.loc 1 2133 12 is_stmt 0 view .LVU1043
 3637 024e 0095     		str	r5, [sp]
 3638 0250 48E7     		b	.L370
 3639              	.LVL284:
 3640              	.L353:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3641              		.loc 1 2080 2 is_stmt 1 view .LVU1044
2081:src/keys.c    **** 		reset_arg();
 3642              		.loc 1 2081 2 view .LVU1045
2081:src/keys.c    **** 		reset_arg();
ARM GAS  /tmp/ccwxoOej.s 			page 136


 3643              		.loc 1 2081 5 is_stmt 0 view .LVU1046
 3644 0252 962D     		cmp	r5, #150
 3645 0254 3FF620AF 		bhi	.L379
2109:src/keys.c    **** 		// row column shorthand addressing
 3646              		.loc 1 2109 2 is_stmt 1 view .LVU1047
2111:src/keys.c    **** 
 3647              		.loc 1 2111 3 view .LVU1048
 3648              	.LVL285:
 3649              	.LBB485:
 3650              	.LBI485:
 179:src/keys.c    **** {
 3651              		.loc 1 179 5 view .LVU1049
 3652              	.LBB486:
 181:src/keys.c    **** }
 3653              		.loc 1 181 2 view .LVU1050
 181:src/keys.c    **** }
 3654              		.loc 1 181 18 is_stmt 0 view .LVU1051
 3655 0258 374B     		ldr	r3, .L491+12
 3656 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3657              		.loc 1 181 24 view .LVU1052
 3658 025e 03F0FC00 		and	r0, r3, #252
 3659              	.LVL286:
 181:src/keys.c    **** }
 3660              		.loc 1 181 24 view .LVU1053
 3661 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3662              		.loc 1 181 18 view .LVU1054
 3663 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3664              		.loc 1 181 24 view .LVU1055
 3665 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3666              		.loc 1 181 33 view .LVU1056
 3667 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3668              		.loc 1 181 12 view .LVU1057
 3669 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3670              		.loc 1 181 33 view .LVU1058
 3671 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3672              	.LBE486:
 3673              	.LBE485:
2111:src/keys.c    **** 
 3674              		.loc 1 2111 10 view .LVU1059
 3675 0274 3844     		add	r0, r0, r7
 3676              	.LVL287:
 3677              	.L474:
2341:src/keys.c    **** 
 3678              		.loc 1 2341 1 view .LVU1060
 3679 0276 03B0     		add	sp, sp, #12
 3680              		.cfi_remember_state
 3681              		.cfi_def_cfa_offset 36
 3682              		@ sp needed
 3683 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3684              		.cfi_restore 14
 3685              		.cfi_restore 11
ARM GAS  /tmp/ccwxoOej.s 			page 137


 3686              		.cfi_restore 10
 3687              		.cfi_restore 9
 3688              		.cfi_restore 8
 3689              		.cfi_restore 7
 3690              		.cfi_restore 6
 3691              		.cfi_restore 5
 3692              		.cfi_restore 4
 3693              		.cfi_def_cfa_offset 0
 3694              	.LVL288:
2111:src/keys.c    **** 
 3695              		.loc 1 2111 10 view .LVU1061
 3696 027c FFF7FEBF 		b	arg_eval
 3697              	.LVL289:
 3698              	.L384:
 3699              		.cfi_restore_state
2246:src/keys.c    **** 			return arg_eval(n);
 3700              		.loc 1 2246 3 is_stmt 1 view .LVU1062
2246:src/keys.c    **** 			return arg_eval(n);
 3701              		.loc 1 2246 7 is_stmt 0 view .LVU1063
 3702 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2246:src/keys.c    **** 			return arg_eval(n);
 3703              		.loc 1 2246 6 view .LVU1064
 3704 0282 5F06     		lsls	r7, r3, #25
 3705 0284 0AD4     		bmi	.L406
2246:src/keys.c    **** 			return arg_eval(n);
 3706              		.loc 1 2246 25 discriminator 1 view .LVU1065
 3707 0286 0121     		movs	r1, #1
 3708 0288 0320     		movs	r0, #3
 3709              	.LVL290:
2246:src/keys.c    **** 			return arg_eval(n);
 3710              		.loc 1 2246 25 discriminator 1 view .LVU1066
 3711 028a FFF7FEFF 		bl	arg_storcl
 3712              	.LVL291:
2246:src/keys.c    **** 			return arg_eval(n);
 3713              		.loc 1 2246 18 discriminator 1 view .LVU1067
 3714 028e 0028     		cmp	r0, #0
 3715 0290 7FF404AF 		bne	.L472
2246:src/keys.c    **** 			return arg_eval(n);
 3716              		.loc 1 2246 63 discriminator 2 view .LVU1068
 3717 0294 B8F1000F 		cmp	r8, #0
 3718 0298 3FF400AF 		beq	.L472
 3719              	.L406:
2247:src/keys.c    **** 		break;
 3720              		.loc 1 2247 4 is_stmt 1 view .LVU1069
2247:src/keys.c    **** 		break;
 3721              		.loc 1 2247 11 is_stmt 0 view .LVU1070
 3722 029c 3046     		mov	r0, r6
 3723 029e EAE7     		b	.L474
 3724              	.LVL292:
 3725              	.L367:
2093:src/keys.c    **** 	  case regT_idx:
 3726              		.loc 1 2093 6 is_stmt 1 view .LVU1071
2093:src/keys.c    **** 	  case regT_idx:
 3727              		.loc 1 2093 13 is_stmt 0 view .LVU1072
 3728 02a0 0320     		movs	r0, #3
 3729              	.LVL293:
 3730              	.L473:
ARM GAS  /tmp/ccwxoOej.s 			page 138


2341:src/keys.c    **** 
 3731              		.loc 1 2341 1 view .LVU1073
 3732 02a2 03B0     		add	sp, sp, #12
 3733              		.cfi_remember_state
 3734              		.cfi_def_cfa_offset 36
 3735              		@ sp needed
 3736 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3737              		.cfi_restore 14
 3738              		.cfi_restore 11
 3739              		.cfi_restore 10
 3740              		.cfi_restore 9
 3741              		.cfi_restore 8
 3742              		.cfi_restore 7
 3743              		.cfi_restore 6
 3744              		.cfi_restore 5
 3745              		.cfi_restore 4
 3746              		.cfi_def_cfa_offset 0
 3747              	.LVL294:
2091:src/keys.c    **** 	  case regZ_idx:
 3748              		.loc 1 2091 13 view .LVU1074
 3749 02a8 FFF7FEBF 		b	arg_digit
 3750              	.LVL295:
 3751              	.L368:
 3752              		.cfi_restore_state
2091:src/keys.c    **** 	  case regZ_idx:
 3753              		.loc 1 2091 6 is_stmt 1 view .LVU1075
2091:src/keys.c    **** 	  case regZ_idx:
 3754              		.loc 1 2091 13 is_stmt 0 view .LVU1076
 3755 02ac 0220     		movs	r0, #2
 3756              	.LVL296:
2091:src/keys.c    **** 	  case regZ_idx:
 3757              		.loc 1 2091 13 view .LVU1077
 3758 02ae F8E7     		b	.L473
 3759              	.LVL297:
 3760              	.L365:
2095:src/keys.c    **** 	  case 5:
 3761              		.loc 1 2095 6 is_stmt 1 view .LVU1078
2095:src/keys.c    **** 	  case 5:
 3762              		.loc 1 2095 13 is_stmt 0 view .LVU1079
 3763 02b0 0420     		movs	r0, #4
 3764              	.LVL298:
2095:src/keys.c    **** 	  case 5:
 3765              		.loc 1 2095 13 view .LVU1080
 3766 02b2 F6E7     		b	.L473
 3767              	.LVL299:
 3768              	.L482:
2140:src/keys.c    **** 		    base = RARG_SIG;
 3769              		.loc 1 2140 5 is_stmt 1 view .LVU1081
2140:src/keys.c    **** 		    base = RARG_SIG;
 3770              		.loc 1 2140 8 is_stmt 0 view .LVU1082
 3771 02b4 952D     		cmp	r5, #149
 3772 02b6 40F00B81 		bne	.L427
 3773 02ba 9423     		movs	r3, #148
 3774 02bc 0093     		str	r3, [sp]
 3775              	.LVL300:
2141:src/keys.c    **** 		    break;
 3776              		.loc 1 2141 12 view .LVU1083
ARM GAS  /tmp/ccwxoOej.s 			page 139


 3777 02be 1D46     		mov	r5, r3
 3778 02c0 10E7     		b	.L370
 3779              	.LVL301:
 3780              	.L483:
2141:src/keys.c    **** 		    break;
 3781              		.loc 1 2141 12 view .LVU1084
 3782 02c2 4D23     		movs	r3, #77
 3783 02c4 A7E7     		b	.L471
 3784              	.LVL302:
 3785              	.L389:
2315:src/keys.c    **** 			if (State2.dot)
 3786              		.loc 1 2315 3 is_stmt 1 view .LVU1085
2315:src/keys.c    **** 			if (State2.dot)
 3787              		.loc 1 2315 13 is_stmt 0 view .LVU1086
 3788 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2315:src/keys.c    **** 			if (State2.dot)
 3789              		.loc 1 2315 6 view .LVU1087
 3790 02c8 002B     		cmp	r3, #0
 3791 02ca 40F0EC80 		bne	.L413
2316:src/keys.c    **** 				State2.dot = 0;
 3792              		.loc 1 2316 4 is_stmt 1 view .LVU1088
2316:src/keys.c    **** 				State2.dot = 0;
 3793              		.loc 1 2316 8 is_stmt 0 view .LVU1089
 3794 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2316:src/keys.c    **** 				State2.dot = 0;
 3795              		.loc 1 2316 7 view .LVU1090
 3796 02d0 13F04001 		ands	r1, r3, #64
 3797 02d4 40F0A080 		bne	.L414
2318:src/keys.c    **** 				State2.local = 0;
 3798              		.loc 1 2318 9 is_stmt 1 view .LVU1091
2318:src/keys.c    **** 				State2.local = 0;
 3799              		.loc 1 2318 13 is_stmt 0 view .LVU1092
 3800 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2318:src/keys.c    **** 				State2.local = 0;
 3801              		.loc 1 2318 12 view .LVU1093
 3802 02da 12F00100 		ands	r0, r2, #1
 3803              	.LVL303:
2318:src/keys.c    **** 				State2.local = 0;
 3804              		.loc 1 2318 12 view .LVU1094
 3805 02de 40F01181 		bne	.L484
2320:src/keys.c    **** 				State2.ind = 0;
 3806              		.loc 1 2320 9 is_stmt 1 view .LVU1095
2320:src/keys.c    **** 				State2.ind = 0;
 3807              		.loc 1 2320 12 is_stmt 0 view .LVU1096
 3808 02e2 1906     		lsls	r1, r3, #24
 3809 02e4 7FF5D8AE 		bpl	.L379
2321:src/keys.c    **** 			else
 3810              		.loc 1 2321 5 is_stmt 1 view .LVU1097
2321:src/keys.c    **** 			else
 3811              		.loc 1 2321 16 is_stmt 0 view .LVU1098
 3812 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3813 02ec 6375     		strb	r3, [r4, #21]
2340:src/keys.c    **** }
 3814              		.loc 1 2340 9 view .LVU1099
 3815 02ee 3320     		movs	r0, #51
 3816 02f0 D5E6     		b	.L347
 3817              	.LVL304:
ARM GAS  /tmp/ccwxoOej.s 			page 140


 3818              	.L387:
2250:src/keys.c    **** 		break;
 3819              		.loc 1 2250 3 is_stmt 1 view .LVU1100
 3820 02f2 0121     		movs	r1, #1
 3821 02f4 0420     		movs	r0, #4
 3822              	.LVL305:
2250:src/keys.c    **** 		break;
 3823              		.loc 1 2250 3 is_stmt 0 view .LVU1101
 3824 02f6 FFF7FEFF 		bl	arg_storcl
 3825              	.LVL306:
2251:src/keys.c    **** #else
 3826              		.loc 1 2251 3 is_stmt 1 view .LVU1102
2340:src/keys.c    **** }
 3827              		.loc 1 2340 9 is_stmt 0 view .LVU1103
 3828 02fa 3320     		movs	r0, #51
2251:src/keys.c    **** #else
 3829              		.loc 1 2251 3 view .LVU1104
 3830 02fc CFE6     		b	.L347
 3831              	.LVL307:
 3832              	.L386:
2290:src/keys.c    **** 		break;
 3833              		.loc 1 2290 3 is_stmt 1 view .LVU1105
 3834 02fe 0021     		movs	r1, #0
 3835 0300 0520     		movs	r0, #5
 3836              	.LVL308:
2290:src/keys.c    **** 		break;
 3837              		.loc 1 2290 3 is_stmt 0 view .LVU1106
 3838 0302 FFF7FEFF 		bl	arg_storcl
 3839              	.LVL309:
2291:src/keys.c    **** 
 3840              		.loc 1 2291 3 is_stmt 1 view .LVU1107
2340:src/keys.c    **** }
 3841              		.loc 1 2340 9 is_stmt 0 view .LVU1108
 3842 0306 3320     		movs	r0, #51
2291:src/keys.c    **** 
 3843              		.loc 1 2291 3 view .LVU1109
 3844 0308 C9E6     		b	.L347
 3845              	.LVL310:
 3846              	.L385:
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3847              		.loc 1 2193 4 is_stmt 1 view .LVU1110
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3848              		.loc 1 2193 8 is_stmt 0 view .LVU1111
 3849 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3850              		.loc 1 2193 7 view .LVU1112
 3851 030c 9507     		lsls	r5, r2, #30
 3852 030e 7FF557AF 		bpl	.L391
2194:src/keys.c    **** 	case K51:       // X
 3853              		.loc 1 2194 6 is_stmt 1 view .LVU1113
2194:src/keys.c    **** 	case K51:       // X
 3854              		.loc 1 2194 13 is_stmt 0 view .LVU1114
 3855 0312 0320     		movs	r0, #3
 3856              	.LVL311:
 3857              	.L475:
2341:src/keys.c    **** 
 3858              		.loc 1 2341 1 view .LVU1115
ARM GAS  /tmp/ccwxoOej.s 			page 141


 3859 0314 03B0     		add	sp, sp, #12
 3860              		.cfi_remember_state
 3861              		.cfi_def_cfa_offset 36
 3862              		@ sp needed
 3863 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3864              		.cfi_restore 14
 3865              		.cfi_restore 11
 3866              		.cfi_restore 10
 3867              		.cfi_restore 9
 3868              		.cfi_restore 8
 3869              		.cfi_restore 7
 3870              		.cfi_restore 6
 3871              		.cfi_restore 5
 3872              		.cfi_restore 4
 3873              		.cfi_def_cfa_offset 0
 3874              	.LVL312:
2203:src/keys.c    **** #else
 3875              		.loc 1 2203 13 view .LVU1116
 3876 031a FFF7FEBF 		b	process_arg_shuffle
 3877              	.LVL313:
 3878              	.L383:
 3879              		.cfi_restore_state
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3880              		.loc 1 2196 4 is_stmt 1 view .LVU1117
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3881              		.loc 1 2196 8 is_stmt 0 view .LVU1118
 3882 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3883              		.loc 1 2196 7 view .LVU1119
 3884 0320 9007     		lsls	r0, r2, #30
 3885              	.LVL314:
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3886              		.loc 1 2196 7 view .LVU1120
 3887 0322 7FF54DAF 		bpl	.L391
2197:src/keys.c    **** 	case K52:	// Y
 3888              		.loc 1 2197 6 is_stmt 1 view .LVU1121
2197:src/keys.c    **** 	case K52:	// Y
 3889              		.loc 1 2197 13 is_stmt 0 view .LVU1122
 3890 0326 0020     		movs	r0, #0
 3891 0328 F4E7     		b	.L475
 3892              	.L492:
 3893 032a 00BF     		.align	2
 3894              	.L491:
 3895 032c 00000000 		.word	StateWhileOn
 3896 0330 00000000 		.word	.LANCHOR6
 3897 0334 00000000 		.word	.LANCHOR5
 3898 0338 ABAAAAAA 		.word	-1431655765
 3899 033c 00000000 		.word	argcmds
 3900              	.LVL315:
 3901              	.L381:
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3902              		.loc 1 2202 4 is_stmt 1 view .LVU1123
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3903              		.loc 1 2202 8 is_stmt 0 view .LVU1124
 3904 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3905              		.loc 1 2202 7 view .LVU1125
ARM GAS  /tmp/ccwxoOej.s 			page 142


 3906 0342 9207     		lsls	r2, r2, #30
 3907 0344 7FF53CAF 		bpl	.L391
2203:src/keys.c    **** #else
 3908              		.loc 1 2203 6 is_stmt 1 view .LVU1126
2203:src/keys.c    **** #else
 3909              		.loc 1 2203 13 is_stmt 0 view .LVU1127
 3910 0348 0220     		movs	r0, #2
 3911              	.LVL316:
2203:src/keys.c    **** #else
 3912              		.loc 1 2203 13 view .LVU1128
 3913 034a E3E7     		b	.L475
 3914              	.LVL317:
 3915              	.L380:
2239:src/keys.c    **** 			reset_arg();
 3916              		.loc 1 2239 3 is_stmt 1 view .LVU1129
2239:src/keys.c    **** 			reset_arg();
 3917              		.loc 1 2239 6 is_stmt 0 view .LVU1130
 3918 034c 009B     		ldr	r3, [sp]
 3919 034e 212B     		cmp	r3, #33
 3920 0350 00F0B980 		beq	.L403
2239:src/keys.c    **** 			reset_arg();
 3921              		.loc 1 2239 25 discriminator 1 view .LVU1131
 3922 0354 732B     		cmp	r3, #115
 3923 0356 00F0B680 		beq	.L403
2243:src/keys.c    **** 		break;
 3924              		.loc 1 2243 3 is_stmt 1 view .LVU1132
 3925 035a 0121     		movs	r1, #1
 3926 035c 0220     		movs	r0, #2
 3927              	.LVL318:
2243:src/keys.c    **** 		break;
 3928              		.loc 1 2243 3 is_stmt 0 view .LVU1133
 3929 035e FFF7FEFF 		bl	arg_storcl
 3930              	.LVL319:
2244:src/keys.c    **** 	case K44:		// multiply
 3931              		.loc 1 2244 3 is_stmt 1 view .LVU1134
2340:src/keys.c    **** }
 3932              		.loc 1 2340 9 is_stmt 0 view .LVU1135
 3933 0362 3320     		movs	r0, #51
2244:src/keys.c    **** 	case K44:		// multiply
 3934              		.loc 1 2244 3 view .LVU1136
 3935 0364 9BE6     		b	.L347
 3936              	.LVL320:
 3937              	.L378:
2231:src/keys.c    **** 
 3938              		.loc 1 2231 3 is_stmt 1 view .LVU1137
 3939              	.LBB487:
 3940              	.LBI487:
2038:src/keys.c    **** 
 3941              		.loc 1 2038 12 view .LVU1138
 3942              	.LBB488:
2040:src/keys.c    **** 		// Only valid at beginning of entry
 3943              		.loc 1 2040 2 view .LVU1139
2040:src/keys.c    **** 		// Only valid at beginning of entry
 3944              		.loc 1 2040 5 is_stmt 0 view .LVU1140
 3945 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3946 0368 002A     		cmp	r2, #0
 3947 036a 7FF497AE 		bne	.L472
ARM GAS  /tmp/ccwxoOej.s 			page 143


2042:src/keys.c    **** 			// '..' or ENTER '.' = X
 3948              		.loc 1 2042 3 is_stmt 1 view .LVU1141
2042:src/keys.c    **** 			// '..' or ENTER '.' = X
 3949              		.loc 1 2042 6 is_stmt 0 view .LVU1142
 3950 036e 11F4A03F 		tst	r1, #81920
 3951 0372 40F0C180 		bne	.L485
2047:src/keys.c    **** 			// local register or flag select
 3952              		.loc 1 2047 3 is_stmt 1 view .LVU1143
2047:src/keys.c    **** 			// local register or flag select
 3953              		.loc 1 2047 20 is_stmt 0 view .LVU1144
 3954 0376 009B     		ldr	r3, [sp]
 3955 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3956 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2047:src/keys.c    **** 			// local register or flag select
 3957              		.loc 1 2047 6 view .LVU1145
 3958 037e 1A07     		lsls	r2, r3, #28
 3959 0380 00F1A880 		bmi	.L399
2047:src/keys.c    **** 			// local register or flag select
 3960              		.loc 1 2047 27 view .LVU1146
 3961 0384 94F91530 		ldrsb	r3, [r4, #21]
 3962 0388 002B     		cmp	r3, #0
 3963 038a C0F2A380 		blt	.L399
2051:src/keys.c    **** 			// Special GTO . sequence
 3964              		.loc 1 2051 8 is_stmt 1 view .LVU1147
2051:src/keys.c    **** 			// Special GTO . sequence
 3965              		.loc 1 2051 29 is_stmt 0 view .LVU1148
 3966 038e 009B     		ldr	r3, [sp]
 3967 0390 A3F14409 		sub	r9, r3, #68
2051:src/keys.c    **** 			// Special GTO . sequence
 3968              		.loc 1 2051 11 view .LVU1149
 3969 0394 B9F1010F 		cmp	r9, #1
 3970 0398 3FF680AE 		bhi	.L472
2053:src/keys.c    **** 				State2.gtodot = 1;
 3971              		.loc 1 2053 4 is_stmt 1 view .LVU1150
2054:src/keys.c    **** 				reset_arg();
 3972              		.loc 1 2054 5 view .LVU1151
2054:src/keys.c    **** 				reset_arg();
 3973              		.loc 1 2054 19 is_stmt 0 view .LVU1152
 3974 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3975 039e 43F00103 		orr	r3, r3, #1
 3976 03a2 6375     		strb	r3, [r4, #21]
2055:src/keys.c    **** 			}
 3977              		.loc 1 2055 5 is_stmt 1 view .LVU1153
 3978 03a4 FFF7FEFF 		bl	reset_arg
 3979              	.LVL321:
2059:src/keys.c    **** }
 3980              		.loc 1 2059 9 is_stmt 0 view .LVU1154
 3981 03a8 3320     		movs	r0, #51
 3982 03aa 78E6     		b	.L347
 3983              	.LVL322:
 3984              	.L377:
2059:src/keys.c    **** }
 3985              		.loc 1 2059 9 view .LVU1155
 3986              	.LBE488:
 3987              	.LBE487:
2235:src/keys.c    **** 			return arg_eval(n);
 3988              		.loc 1 2235 3 is_stmt 1 view .LVU1156
ARM GAS  /tmp/ccwxoOej.s 			page 144


2235:src/keys.c    **** 			return arg_eval(n);
 3989              		.loc 1 2235 7 is_stmt 0 view .LVU1157
 3990 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2235:src/keys.c    **** 			return arg_eval(n);
 3991              		.loc 1 2235 6 view .LVU1158
 3992 03ae 5B06     		lsls	r3, r3, #25
 3993 03b0 3FF574AF 		bmi	.L406
2235:src/keys.c    **** 			return arg_eval(n);
 3994              		.loc 1 2235 25 discriminator 1 view .LVU1159
 3995 03b4 0121     		movs	r1, #1
 3996 03b6 0846     		mov	r0, r1
 3997              	.LVL323:
2235:src/keys.c    **** 			return arg_eval(n);
 3998              		.loc 1 2235 25 discriminator 1 view .LVU1160
 3999 03b8 FFF7FEFF 		bl	arg_storcl
 4000              	.LVL324:
2235:src/keys.c    **** 			return arg_eval(n);
 4001              		.loc 1 2235 18 discriminator 1 view .LVU1161
 4002 03bc 0028     		cmp	r0, #0
 4003 03be 7FF46DAE 		bne	.L472
2246:src/keys.c    **** 			return arg_eval(n);
 4004              		.loc 1 2246 63 view .LVU1162
 4005 03c2 B8F1000F 		cmp	r8, #0
 4006 03c6 3FF469AE 		beq	.L472
 4007 03ca 67E7     		b	.L406
 4008              	.LVL325:
 4009              	.L376:
2171:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4010              		.loc 1 2171 3 is_stmt 1 view .LVU1163
2171:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4011              		.loc 1 2171 6 is_stmt 0 view .LVU1164
 4012 03cc BCF1000F 		cmp	ip, #0
 4013 03d0 3FF464AE 		beq	.L472
2172:src/keys.c    **** 		break;
 4014              		.loc 1 2172 4 is_stmt 1 view .LVU1165
 4015              	.LVL326:
 4016              	.LBB491:
 4017              	.LBI491:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4018              		.loc 1 104 20 view .LVU1166
 4019              	.LBB492:
 105:src/keys.c    **** 	State2.shifts = shift;
 4020              		.loc 1 105 2 view .LVU1167
 4021              	.LBB493:
 4022              	.LBI493:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4023              		.loc 1 96 13 view .LVU1168
 4024              	.LBB494:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4025              		.loc 1 97 2 view .LVU1169
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4026              		.loc 1 97 18 is_stmt 0 view .LVU1170
 4027 03d4 FFF7FEFF 		bl	shift_down
 4028              	.LVL327:
  98:src/keys.c    **** }
 4029              		.loc 1 98 2 is_stmt 1 view .LVU1171
 4030              	.LBE494:
ARM GAS  /tmp/ccwxoOej.s 			page 145


 4031              	.LBE493:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4032              		.loc 1 106 2 view .LVU1172
 4033              	.LBE492:
 4034              	.LBE491:
2172:src/keys.c    **** 		break;
 4035              		.loc 1 2172 4 is_stmt 0 view .LVU1173
 4036 03d8 019B     		ldr	r3, [sp, #4]
 4037 03da B3F1010A 		subs	r10, r3, #1
 4038 03de 18BF     		it	ne
 4039 03e0 4FF0010A 		movne	r10, #1
 4040 03e4 84F810A0 		strb	r10, [r4, #16]
 4041              	.LBB497:
 4042              	.LBB495:
 108:src/keys.c    **** }
 4043              		.loc 1 108 2 is_stmt 1 view .LVU1174
 4044              	.LBE495:
 4045              	.LBE497:
2340:src/keys.c    **** }
 4046              		.loc 1 2340 9 is_stmt 0 view .LVU1175
 4047 03e8 3320     		movs	r0, #51
 4048              	.LBB498:
 4049              	.LBB496:
 108:src/keys.c    **** }
 4050              		.loc 1 108 9 view .LVU1176
 4051 03ea 58E6     		b	.L347
 4052              	.LVL328:
 4053              	.L375:
 108:src/keys.c    **** }
 4054              		.loc 1 108 9 view .LVU1177
 4055              	.LBE496:
 4056              	.LBE498:
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4057              		.loc 1 2176 3 is_stmt 1 view .LVU1178
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4058              		.loc 1 2176 7 is_stmt 0 view .LVU1179
 4059 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4060              		.loc 1 2176 6 view .LVU1180
 4061 03ee 5706     		lsls	r7, r2, #25
 4062 03f0 3FF554AE 		bmi	.L472
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4063              		.loc 1 2176 35 discriminator 1 view .LVU1181
 4064 03f4 009B     		ldr	r3, [sp]
 4065 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4066 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4067              		.loc 1 2176 19 discriminator 1 view .LVU1182
 4068 03fe DE07     		lsls	r6, r3, #31
 4069              	.LVL329:
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4070              		.loc 1 2176 19 discriminator 1 view .LVU1183
 4071 0400 7FF54CAE 		bpl	.L472
2177:src/keys.c    **** 			if (! stack_reg)
 4072              		.loc 1 2177 4 is_stmt 1 view .LVU1184
2177:src/keys.c    **** 			if (! stack_reg)
 4073              		.loc 1 2177 17 is_stmt 0 view .LVU1185
ARM GAS  /tmp/ccwxoOej.s 			page 146


 4074 0404 D343     		mvns	r3, r2
 4075 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2177:src/keys.c    **** 			if (! stack_reg)
 4076              		.loc 1 2177 15 view .LVU1186
 4077 040a 63F3C712 		bfi	r2, r3, #7, #1
 4078 040e 6275     		strb	r2, [r4, #21]
2178:src/keys.c    **** 				State2.dot = 0;
 4079              		.loc 1 2178 4 is_stmt 1 view .LVU1187
2178:src/keys.c    **** 				State2.dot = 0;
 4080              		.loc 1 2178 7 is_stmt 0 view .LVU1188
 4081 0410 B8F1000F 		cmp	r8, #0
 4082 0414 7FF442AE 		bne	.L472
 4083              	.L414:
2179:src/keys.c    **** 		}
 4084              		.loc 1 2179 5 is_stmt 1 view .LVU1189
2179:src/keys.c    **** 		}
 4085              		.loc 1 2179 16 is_stmt 0 view .LVU1190
 4086 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4087 041a 6FF38613 		bfc	r3, #6, #1
 4088 041e 6375     		strb	r3, [r4, #21]
2340:src/keys.c    **** }
 4089              		.loc 1 2340 9 view .LVU1191
 4090 0420 3320     		movs	r0, #51
 4091              	.LVL330:
2340:src/keys.c    **** }
 4092              		.loc 1 2340 9 view .LVU1192
 4093 0422 3CE6     		b	.L347
 4094              	.LVL331:
 4095              	.L373:
2184:src/keys.c    **** 			break;
 4096              		.loc 1 2184 3 is_stmt 1 view .LVU1193
2184:src/keys.c    **** 			break;
 4097              		.loc 1 2184 18 is_stmt 0 view .LVU1194
 4098 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2184:src/keys.c    **** 			break;
 4099              		.loc 1 2184 6 view .LVU1195
 4100 0426 13F0C00F 		tst	r3, #192
 4101 042a 7FF437AE 		bne	.L472
2186:src/keys.c    **** 			CmdBase = RARG_STOM;
 4102              		.loc 1 2186 3 is_stmt 1 view .LVU1196
2186:src/keys.c    **** 			CmdBase = RARG_STOM;
 4103              		.loc 1 2186 6 is_stmt 0 view .LVU1197
 4104 042e 009B     		ldr	r3, [sp]
 4105 0430 032B     		cmp	r3, #3
 4106 0432 5DD0     		beq	.L486
2188:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4107              		.loc 1 2188 8 is_stmt 1 view .LVU1198
2188:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4108              		.loc 1 2188 11 is_stmt 0 view .LVU1199
 4109 0434 009B     		ldr	r3, [sp]
 4110 0436 0A2B     		cmp	r3, #10
 4111 0438 7FF430AE 		bne	.L472
2189:src/keys.c    **** 		break;
 4112              		.loc 1 2189 4 is_stmt 1 view .LVU1200
2189:src/keys.c    **** 		break;
 4113              		.loc 1 2189 12 is_stmt 0 view .LVU1201
 4114 043c 7823     		movs	r3, #120
ARM GAS  /tmp/ccwxoOej.s 			page 147


 4115 043e E377     		strb	r3, [r4, #31]
2340:src/keys.c    **** }
 4116              		.loc 1 2340 9 view .LVU1202
 4117 0440 3320     		movs	r0, #51
 4118              	.LVL332:
2340:src/keys.c    **** }
 4119              		.loc 1 2340 9 view .LVU1203
 4120 0442 2CE6     		b	.L347
 4121              	.LVL333:
 4122              	.L390:
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4123              		.loc 1 2294 3 is_stmt 1 view .LVU1204
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4124              		.loc 1 2294 6 is_stmt 0 view .LVU1205
 4125 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4126 0446 4AB1     		cbz	r2, .L487
2308:src/keys.c    **** 			return arg_eval(State2.digval);
 4127              		.loc 1 2308 10 is_stmt 1 view .LVU1206
2309:src/keys.c    **** 		else if (stack_reg)
 4128              		.loc 1 2309 4 view .LVU1207
2309:src/keys.c    **** 		else if (stack_reg)
 4129              		.loc 1 2309 11 is_stmt 0 view .LVU1208
 4130 0448 2089     		ldrh	r0, [r4, #8]
 4131              	.LVL334:
2309:src/keys.c    **** 		else if (stack_reg)
 4132              		.loc 1 2309 11 view .LVU1209
 4133 044a 14E7     		b	.L474
 4134              	.LVL335:
 4135              	.L382:
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4136              		.loc 1 2199 4 is_stmt 1 view .LVU1210
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4137              		.loc 1 2199 8 is_stmt 0 view .LVU1211
 4138 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4139              		.loc 1 2199 7 view .LVU1212
 4140 044e 9107     		lsls	r1, r2, #30
 4141 0450 7FF5B6AE 		bpl	.L391
2200:src/keys.c    **** 	case K53:       // Z
 4142              		.loc 1 2200 6 is_stmt 1 view .LVU1213
2200:src/keys.c    **** 	case K53:       // Z
 4143              		.loc 1 2200 13 is_stmt 0 view .LVU1214
 4144 0454 0120     		movs	r0, #1
 4145              	.LVL336:
2200:src/keys.c    **** 	case K53:       // Z
 4146              		.loc 1 2200 13 view .LVU1215
 4147 0456 5DE7     		b	.L475
 4148              	.LVL337:
 4149              	.L429:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 4150              		.loc 1 2116 3 view .LVU1216
 4151 0458 9423     		movs	r3, #148
 4152              	.LVL338:
2146:src/keys.c    **** #else
 4153              		.loc 1 2146 3 is_stmt 1 view .LVU1217
 4154 045a DCE6     		b	.L471
 4155              	.L487:
ARM GAS  /tmp/ccwxoOej.s 			page 148


2294:src/keys.c    **** 			if (argcmds[base].label) {
 4156              		.loc 1 2294 43 is_stmt 0 discriminator 1 view .LVU1218
 4157 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4158 045e 12F0C00F 		tst	r2, #192
 4159 0462 13D1     		bne	.L408
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4160              		.loc 1 2295 4 is_stmt 1 view .LVU1219
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4161              		.loc 1 2295 21 is_stmt 0 view .LVU1220
 4162 0464 009B     		ldr	r3, [sp]
 4163 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4164 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4165              		.loc 1 2295 7 view .LVU1221
 4166 046c 9E06     		lsls	r6, r3, #26
 4167              	.LVL339:
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4168              		.loc 1 2295 7 view .LVU1222
 4169 046e 4ED4     		bmi	.L488
2300:src/keys.c    **** 				reset_arg();
 4170              		.loc 1 2300 11 is_stmt 1 view .LVU1223
2300:src/keys.c    **** 				reset_arg();
 4171              		.loc 1 2300 14 is_stmt 0 view .LVU1224
 4172 0470 0099     		ldr	r1, [sp]
 4173 0472 4E29     		cmp	r1, #78
 4174 0474 5DD0     		beq	.L489
2303:src/keys.c    **** 				reset_arg();
 4175              		.loc 1 2303 11 is_stmt 1 view .LVU1225
2303:src/keys.c    **** 				reset_arg();
 4176              		.loc 1 2303 14 is_stmt 0 view .LVU1226
 4177 0476 0099     		ldr	r1, [sp]
 4178 0478 4F29     		cmp	r1, #79
 4179 047a 5FD0     		beq	.L490
2306:src/keys.c    **** 				State2.dot = 1;
 4180              		.loc 1 2306 11 is_stmt 1 view .LVU1227
2306:src/keys.c    **** 				State2.dot = 1;
 4181              		.loc 1 2306 14 is_stmt 0 view .LVU1228
 4182 047c 5807     		lsls	r0, r3, #29
 4183              	.LVL340:
2306:src/keys.c    **** 				State2.dot = 1;
 4184              		.loc 1 2306 14 view .LVU1229
 4185 047e 7FF50DAE 		bpl	.L472
2307:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4186              		.loc 1 2307 5 is_stmt 1 view .LVU1230
2307:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4187              		.loc 1 2307 16 is_stmt 0 view .LVU1231
 4188 0482 42F04002 		orr	r2, r2, #64
 4189 0486 6275     		strb	r2, [r4, #21]
2340:src/keys.c    **** }
 4190              		.loc 1 2340 9 view .LVU1232
 4191 0488 3320     		movs	r0, #51
 4192 048a 08E6     		b	.L347
 4193              	.LVL341:
 4194              	.L408:
2308:src/keys.c    **** 			return arg_eval(State2.digval);
 4195              		.loc 1 2308 10 is_stmt 1 view .LVU1233
2310:src/keys.c    **** 			State2.dot = 1 - State2.dot;
ARM GAS  /tmp/ccwxoOej.s 			page 149


 4196              		.loc 1 2310 8 view .LVU1234
2310:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4197              		.loc 1 2310 11 is_stmt 0 view .LVU1235
 4198 048c B8F1000F 		cmp	r8, #0
 4199 0490 3FF404AE 		beq	.L472
2311:src/keys.c    **** 		break;
 4200              		.loc 1 2311 4 is_stmt 1 view .LVU1236
2311:src/keys.c    **** 		break;
 4201              		.loc 1 2311 27 is_stmt 0 view .LVU1237
 4202 0494 C2F38013 		ubfx	r3, r2, #6, #1
2311:src/keys.c    **** 		break;
 4203              		.loc 1 2311 19 view .LVU1238
 4204 0498 C3F10103 		rsb	r3, r3, #1
2311:src/keys.c    **** 		break;
 4205              		.loc 1 2311 15 view .LVU1239
 4206 049c 63F38612 		bfi	r2, r3, #6, #1
 4207 04a0 6275     		strb	r2, [r4, #21]
2340:src/keys.c    **** }
 4208              		.loc 1 2340 9 view .LVU1240
 4209 04a2 3320     		movs	r0, #51
 4210              	.LVL342:
2340:src/keys.c    **** }
 4211              		.loc 1 2340 9 view .LVU1241
 4212 04a4 FBE5     		b	.L347
 4213              	.LVL343:
 4214              	.L413:
2326:src/keys.c    **** 			if (State2.shuffle)
 4215              		.loc 1 2326 4 is_stmt 1 view .LVU1242
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4216              		.loc 1 2327 8 is_stmt 0 view .LVU1243
 4217 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2326:src/keys.c    **** 			if (State2.shuffle)
 4218              		.loc 1 2326 4 view .LVU1244
 4219 04a8 013B     		subs	r3, r3, #1
 4220 04aa DBB2     		uxtb	r3, r3
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4221              		.loc 1 2327 7 view .LVU1245
 4222 04ac 9207     		lsls	r2, r2, #30
2326:src/keys.c    **** 			if (State2.shuffle)
 4223              		.loc 1 2326 4 view .LVU1246
 4224 04ae E372     		strb	r3, [r4, #11]
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4225              		.loc 1 2327 4 is_stmt 1 view .LVU1247
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4226              		.loc 1 2327 7 is_stmt 0 view .LVU1248
 4227 04b0 16D5     		bpl	.L416
2328:src/keys.c    **** 			else
 4228              		.loc 1 2328 5 is_stmt 1 view .LVU1249
2328:src/keys.c    **** 			else
 4229              		.loc 1 2328 19 is_stmt 0 view .LVU1250
 4230 04b2 2289     		ldrh	r2, [r4, #8]
2328:src/keys.c    **** 			else
 4231              		.loc 1 2328 46 view .LVU1251
 4232 04b4 5B00     		lsls	r3, r3, #1
2328:src/keys.c    **** 			else
 4233              		.loc 1 2328 26 view .LVU1252
 4234 04b6 0321     		movs	r1, #3
ARM GAS  /tmp/ccwxoOej.s 			page 150


 4235 04b8 01FA03F3 		lsl	r3, r1, r3
2328:src/keys.c    **** 			else
 4236              		.loc 1 2328 19 view .LVU1253
 4237 04bc 22EA0303 		bic	r3, r2, r3
 4238 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2340:src/keys.c    **** }
 4239              		.loc 1 2340 9 view .LVU1254
 4240 04c2 3320     		movs	r0, #51
 4241              	.LVL344:
2340:src/keys.c    **** }
 4242              		.loc 1 2340 9 view .LVU1255
 4243 04c4 EBE5     		b	.L347
 4244              	.LVL345:
 4245              	.L403:
2240:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4246              		.loc 1 2240 4 is_stmt 1 view .LVU1256
 4247 04c6 FFF7FEFF 		bl	reset_arg
 4248              	.LVL346:
2241:src/keys.c    **** 		}
 4249              		.loc 1 2241 4 view .LVU1257
2241:src/keys.c    **** 		}
 4250              		.loc 1 2241 11 is_stmt 0 view .LVU1258
 4251 04ca 40F27510 		movw	r0, #373
 4252 04ce E6E5     		b	.L347
 4253              	.LVL347:
 4254              	.L427:
2241:src/keys.c    **** 		}
 4255              		.loc 1 2241 11 view .LVU1259
 4256 04d0 9525     		movs	r5, #149
 4257              	.LVL348:
2241:src/keys.c    **** 		}
 4258              		.loc 1 2241 11 view .LVU1260
 4259 04d2 07E6     		b	.L370
 4260              	.LVL349:
 4261              	.L399:
 4262              	.LBB499:
 4263              	.LBB489:
2049:src/keys.c    **** 		}
 4264              		.loc 1 2049 4 is_stmt 1 view .LVU1261
2049:src/keys.c    **** 		}
 4265              		.loc 1 2049 17 is_stmt 0 view .LVU1262
 4266 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4267 04d6 43F00103 		orr	r3, r3, #1
 4268 04da A375     		strb	r3, [r4, #22]
2059:src/keys.c    **** }
 4269              		.loc 1 2059 9 view .LVU1263
 4270 04dc 3320     		movs	r0, #51
 4271              	.LVL350:
2049:src/keys.c    **** 		}
 4272              		.loc 1 2049 17 view .LVU1264
 4273 04de DEE5     		b	.L347
 4274              	.LVL351:
 4275              	.L416:
2049:src/keys.c    **** 		}
 4276              		.loc 1 2049 17 view .LVU1265
 4277              	.LBE489:
 4278              	.LBE499:
ARM GAS  /tmp/ccwxoOej.s 			page 151


2330:src/keys.c    **** 		}
 4279              		.loc 1 2330 5 is_stmt 1 view .LVU1266
2330:src/keys.c    **** 		}
 4280              		.loc 1 2330 19 is_stmt 0 view .LVU1267
 4281 04e0 2389     		ldrh	r3, [r4, #8]
 4282 04e2 1A4A     		ldr	r2, .L493
 4283 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4284 04e8 DB08     		lsrs	r3, r3, #3
 4285 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2340:src/keys.c    **** }
 4286              		.loc 1 2340 9 view .LVU1268
 4287 04ec 3320     		movs	r0, #51
 4288              	.LVL352:
2340:src/keys.c    **** }
 4289              		.loc 1 2340 9 view .LVU1269
 4290 04ee D6E5     		b	.L347
 4291              	.LVL353:
 4292              	.L486:
2187:src/keys.c    **** 		else if (base == RARG_RCL)
 4293              		.loc 1 2187 4 is_stmt 1 view .LVU1270
2187:src/keys.c    **** 		else if (base == RARG_RCL)
 4294              		.loc 1 2187 12 is_stmt 0 view .LVU1271
 4295 04f0 7723     		movs	r3, #119
 4296 04f2 E377     		strb	r3, [r4, #31]
2340:src/keys.c    **** }
 4297              		.loc 1 2340 9 view .LVU1272
 4298 04f4 3320     		movs	r0, #51
 4299              	.LVL354:
2340:src/keys.c    **** }
 4300              		.loc 1 2340 9 view .LVU1273
 4301 04f6 D2E5     		b	.L347
 4302              	.LVL355:
 4303              	.L485:
 4304              	.LBB500:
 4305              	.LBB490:
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4306              		.loc 1 2044 4 is_stmt 1 view .LVU1274
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4307              		.loc 1 2044 17 is_stmt 0 view .LVU1275
 4308 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4309 04fa 62F30003 		bfi	r3, r2, #0, #1
2045:src/keys.c    **** 		}
 4310              		.loc 1 2045 11 view .LVU1276
 4311 04fe 6420     		movs	r0, #100
 4312              	.LVL356:
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4313              		.loc 1 2044 17 view .LVU1277
 4314 0500 A375     		strb	r3, [r4, #22]
2045:src/keys.c    **** 		}
 4315              		.loc 1 2045 4 is_stmt 1 view .LVU1278
 4316 0502 B8E6     		b	.L474
 4317              	.L484:
2045:src/keys.c    **** 		}
 4318              		.loc 1 2045 4 is_stmt 0 view .LVU1279
 4319              	.LBE490:
 4320              	.LBE500:
2319:src/keys.c    **** 			else if (State2.ind)
ARM GAS  /tmp/ccwxoOej.s 			page 152


 4321              		.loc 1 2319 5 is_stmt 1 view .LVU1280
2319:src/keys.c    **** 			else if (State2.ind)
 4322              		.loc 1 2319 18 is_stmt 0 view .LVU1281
 4323 0504 61F30002 		bfi	r2, r1, #0, #1
 4324 0508 A275     		strb	r2, [r4, #22]
2340:src/keys.c    **** }
 4325              		.loc 1 2340 9 view .LVU1282
 4326 050a 3320     		movs	r0, #51
 4327 050c C7E5     		b	.L347
 4328              	.LVL357:
 4329              	.L488:
2296:src/keys.c    **** 				State2.multi = 1;
 4330              		.loc 1 2296 5 is_stmt 1 view .LVU1283
 4331              	.LBB501:
 4332              	.LBI501:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4333              		.loc 1 552 13 view .LVU1284
 4334              	.LBB502:
 553:src/keys.c    **** 		return;
 4335              		.loc 1 553 2 view .LVU1285
 553:src/keys.c    **** 		return;
 4336              		.loc 1 553 6 is_stmt 0 view .LVU1286
 4337 050e FFF7FEFF 		bl	is_bad_cmdline
 4338              	.LVL358:
 553:src/keys.c    **** 		return;
 4339              		.loc 1 553 5 view .LVU1287
 4340 0512 20B9     		cbnz	r0, .L410
 4341              	.LBE502:
 4342              	.LBE501:
2296:src/keys.c    **** 				State2.multi = 1;
 4343              		.loc 1 2296 31 view .LVU1288
 4344 0514 A5F14200 		sub	r0, r5, #66
 4345              	.LBB504:
 4346              	.LBB503:
 4347 0518 C0B2     		uxtb	r0, r0
 4348 051a FFF7FEFF 		bl	init_arg.part.0
 4349              	.LVL359:
 4350              	.L410:
2296:src/keys.c    **** 				State2.multi = 1;
 4351              		.loc 1 2296 31 view .LVU1289
 4352              	.LBE503:
 4353              	.LBE504:
2297:src/keys.c    **** 				State2.alphashift = 0;
 4354              		.loc 1 2297 5 is_stmt 1 view .LVU1290
2298:src/keys.c    **** 				State2.rarg = 0;
 4355              		.loc 1 2298 5 view .LVU1291
2299:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4356              		.loc 1 2299 5 view .LVU1292
2297:src/keys.c    **** 				State2.alphashift = 0;
 4357              		.loc 1 2297 18 is_stmt 0 view .LVU1293
 4358 051e 6369     		ldr	r3, [r4, #20]
 4359 0520 23F44013 		bic	r3, r3, #3145728
 4360 0524 23F40063 		bic	r3, r3, #2048
 4361 0528 43F40063 		orr	r3, r3, #2048
 4362 052c 6361     		str	r3, [r4, #20]
2340:src/keys.c    **** }
 4363              		.loc 1 2340 9 view .LVU1294
ARM GAS  /tmp/ccwxoOej.s 			page 153


 4364 052e 3320     		movs	r0, #51
 4365 0530 B5E5     		b	.L347
 4366              	.LVL360:
 4367              	.L489:
2301:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4368              		.loc 1 2301 5 is_stmt 1 view .LVU1295
 4369 0532 FFF7FEFF 		bl	reset_arg
 4370              	.LVL361:
2302:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4371              		.loc 1 2302 5 view .LVU1296
2302:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4372              		.loc 1 2302 12 is_stmt 0 view .LVU1297
 4373 0536 40F25510 		movw	r0, #341
 4374 053a B0E5     		b	.L347
 4375              	.LVL362:
 4376              	.L490:
2304:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 4377              		.loc 1 2304 5 is_stmt 1 view .LVU1298
 4378 053c FFF7FEFF 		bl	reset_arg
 4379              	.LVL363:
2305:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4380              		.loc 1 2305 5 view .LVU1299
2305:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4381              		.loc 1 2305 12 is_stmt 0 view .LVU1300
 4382 0540 4FF4AB70 		mov	r0, #342
 4383 0544 ABE5     		b	.L347
 4384              	.LVL364:
 4385              	.L364:
2089:src/keys.c    **** 	  case regY_idx:
 4386              		.loc 1 2089 6 is_stmt 1 view .LVU1301
2089:src/keys.c    **** 	  case regY_idx:
 4387              		.loc 1 2089 13 is_stmt 0 view .LVU1302
 4388 0546 0120     		movs	r0, #1
 4389              	.LVL365:
2089:src/keys.c    **** 	  case regY_idx:
 4390              		.loc 1 2089 13 view .LVU1303
 4391 0548 ABE6     		b	.L473
 4392              	.L494:
 4393 054a 00BF     		.align	2
 4394              	.L493:
 4395 054c CDCCCCCC 		.word	-858993459
 4396              		.cfi_endproc
 4397              	.LFE42:
 4399              		.section	.text.cur_shift,"ax",%progbits
 4400              		.align	1
 4401              		.p2align 2,,3
 4402              		.global	cur_shift
 4403              		.syntax unified
 4404              		.thumb
 4405              		.thumb_func
 4406              		.fpu fpv4-sp-d16
 4408              	cur_shift:
 4409              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4410              		.loc 1 96 29 is_stmt 1 view -0
 4411              		.cfi_startproc
 4412              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwxoOej.s 			page 154


 4413              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4414              		.loc 1 97 2 view .LVU1305
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4415              		.loc 1 96 29 is_stmt 0 view .LVU1306
 4416 0000 08B5     		push	{r3, lr}
 4417              		.cfi_def_cfa_offset 8
 4418              		.cfi_offset 3, -8
 4419              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4420              		.loc 1 97 18 view .LVU1307
 4421 0002 FFF7FEFF 		bl	shift_down
 4422              	.LVL366:
  98:src/keys.c    **** }
 4423              		.loc 1 98 2 is_stmt 1 view .LVU1308
  98:src/keys.c    **** }
 4424              		.loc 1 98 52 is_stmt 0 view .LVU1309
 4425 0006 08B9     		cbnz	r0, .L496
  98:src/keys.c    **** }
 4426              		.loc 1 98 52 discriminator 1 view .LVU1310
 4427 0008 014B     		ldr	r3, .L498
 4428 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4429              	.LVL367:
 4430              	.L496:
  99:src/keys.c    **** 
 4431              		.loc 1 99 1 discriminator 4 view .LVU1311
 4432 000c 08BD     		pop	{r3, pc}
 4433              	.L499:
 4434 000e 00BF     		.align	2
 4435              	.L498:
 4436 0010 00000000 		.word	StateWhileOn
 4437              		.cfi_endproc
 4438              	.LFE0:
 4440              		.section	.text.reset_shift,"ax",%progbits
 4441              		.align	1
 4442              		.p2align 2,,3
 4443              		.global	reset_shift
 4444              		.syntax unified
 4445              		.thumb
 4446              		.thumb_func
 4447              		.fpu fpv4-sp-d16
 4449              	reset_shift:
 4450              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4451              		.loc 1 114 31 is_stmt 1 view -0
 4452              		.cfi_startproc
 4453              		@ args = 0, pretend = 0, frame = 0
 4454              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4455              		.loc 1 115 2 view .LVU1313
 4456              	.LVL368:
 4457              	.LBB505:
 4458              	.LBI505:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4459              		.loc 1 104 20 view .LVU1314
 4460              	.LBB506:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccwxoOej.s 			page 155


 4461              		.loc 1 105 2 view .LVU1315
 4462              	.LBB507:
 4463              	.LBI507:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4464              		.loc 1 96 13 view .LVU1316
 4465              	.LBB508:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4466              		.loc 1 97 2 view .LVU1317
 4467              	.LBE508:
 4468              	.LBE507:
 4469              	.LBE506:
 4470              	.LBE505:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4471              		.loc 1 114 31 is_stmt 0 view .LVU1318
 4472 0000 08B5     		push	{r3, lr}
 4473              		.cfi_def_cfa_offset 8
 4474              		.cfi_offset 3, -8
 4475              		.cfi_offset 14, -4
 4476              	.LBB512:
 4477              	.LBB511:
 4478              	.LBB510:
 4479              	.LBB509:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4480              		.loc 1 97 18 view .LVU1319
 4481 0002 FFF7FEFF 		bl	shift_down
 4482              	.LVL369:
  98:src/keys.c    **** }
 4483              		.loc 1 98 2 is_stmt 1 view .LVU1320
  98:src/keys.c    **** }
 4484              		.loc 1 98 52 is_stmt 0 view .LVU1321
 4485 0006 034B     		ldr	r3, .L505
 4486 0008 00B9     		cbnz	r0, .L501
 4487 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4488              	.LVL370:
 4489              	.L501:
  98:src/keys.c    **** }
 4490              		.loc 1 98 52 view .LVU1322
 4491              	.LBE509:
 4492              	.LBE510:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4493              		.loc 1 106 2 is_stmt 1 view .LVU1323
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4494              		.loc 1 106 16 is_stmt 0 view .LVU1324
 4495 000c 0022     		movs	r2, #0
 4496 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4497              		.loc 1 108 2 is_stmt 1 view .LVU1325
 4498              	.LVL371:
 108:src/keys.c    **** }
 4499              		.loc 1 108 2 is_stmt 0 view .LVU1326
 4500              	.LBE511:
 4501              	.LBE512:
 116:src/keys.c    **** 
 4502              		.loc 1 116 1 view .LVU1327
 4503 0010 08BD     		pop	{r3, pc}
 4504              	.L506:
 4505 0012 00BF     		.align	2
ARM GAS  /tmp/ccwxoOej.s 			page 156


 4506              	.L505:
 4507 0014 00000000 		.word	StateWhileOn
 4508              		.cfi_endproc
 4509              	.LFE2:
 4511              		.section	.text.keycode_to_row_column,"ax",%progbits
 4512              		.align	1
 4513              		.p2align 2,,3
 4514              		.global	keycode_to_row_column
 4515              		.syntax unified
 4516              		.thumb
 4517              		.thumb_func
 4518              		.fpu fpv4-sp-d16
 4520              	keycode_to_row_column:
 4521              	.LVL372:
 4522              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4523              		.loc 1 180 1 is_stmt 1 view -0
 4524              		.cfi_startproc
 4525              		@ args = 0, pretend = 0, frame = 0
 4526              		@ frame_needed = 0, uses_anonymous_args = 0
 4527              		@ link register save eliminated.
 181:src/keys.c    **** }
 4528              		.loc 1 181 2 view .LVU1329
 181:src/keys.c    **** }
 4529              		.loc 1 181 18 is_stmt 0 view .LVU1330
 4530 0000 074A     		ldr	r2, .L508
 4531 0002 82FB0032 		smull	r3, r2, r2, r0
 4532 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4533              		.loc 1 181 24 view .LVU1331
 4534 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4535 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4536              		.loc 1 181 33 view .LVU1332
 4537 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4538 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4539              		.loc 1 181 12 view .LVU1333
 4540 0018 02F10B00 		add	r0, r2, #11
 4541              	.LVL373:
 182:src/keys.c    **** 
 4542              		.loc 1 182 1 view .LVU1334
 4543 001c 1844     		add	r0, r0, r3
 4544 001e 7047     		bx	lr
 4545              	.L509:
 4546              		.align	2
 4547              	.L508:
 4548 0020 ABAAAA2A 		.word	715827883
 4549              		.cfi_endproc
 4550              	.LFE6:
 4552              		.section	.text.row_column_to_keycode,"ax",%progbits
 4553              		.align	1
 4554              		.p2align 2,,3
 4555              		.global	row_column_to_keycode
 4556              		.syntax unified
 4557              		.thumb
 4558              		.thumb_func
ARM GAS  /tmp/ccwxoOej.s 			page 157


 4559              		.fpu fpv4-sp-d16
 4561              	row_column_to_keycode:
 4562              	.LVL374:
 4563              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4564              		.loc 1 190 1 is_stmt 1 view -0
 4565              		.cfi_startproc
 4566              		@ args = 0, pretend = 0, frame = 0
 4567              		@ frame_needed = 0, uses_anonymous_args = 0
 4568              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4569              		.loc 1 191 2 view .LVU1336
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4570              		.loc 1 191 14 is_stmt 0 view .LVU1337
 4571 0000 0E4A     		ldr	r2, .L516
 4572 0002 82FB0032 		smull	r3, r2, r2, r0
 4573 0006 C317     		asrs	r3, r0, #31
 4574 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4575              		.loc 1 192 14 view .LVU1338
 4576 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4577              		.loc 1 191 6 view .LVU1339
 4578 0010 013B     		subs	r3, r3, #1
 4579              	.LVL375:
 192:src/keys.c    **** 
 4580              		.loc 1 192 2 is_stmt 1 view .LVU1340
 192:src/keys.c    **** 
 4581              		.loc 1 192 14 is_stmt 0 view .LVU1341
 4582 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4583              	.LVL376:
 194:src/keys.c    **** 		return -1;
 4584              		.loc 1 194 5 view .LVU1342
 4585 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4586              		.loc 1 192 6 view .LVU1343
 4587 0018 00F1FF30 		add	r0, r0, #-1
 4588              	.LVL377:
 194:src/keys.c    **** 		return -1;
 4589              		.loc 1 194 2 is_stmt 1 view .LVU1344
 194:src/keys.c    **** 		return -1;
 4590              		.loc 1 194 5 is_stmt 0 view .LVU1345
 4591 001c 0AD8     		bhi	.L515
 194:src/keys.c    **** 		return -1;
 4592              		.loc 1 194 36 discriminator 1 view .LVU1346
 4593 001e 012B     		cmp	r3, #1
 4594 0020 CCBF     		ite	gt
 4595 0022 0422     		movgt	r2, #4
 4596 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4597              		.loc 1 194 25 discriminator 1 view .LVU1347
 4598 0026 8242     		cmp	r2, r0
 4599 0028 04DB     		blt	.L515
 196:src/keys.c    **** }
 4600              		.loc 1 196 2 is_stmt 1 view .LVU1348
 196:src/keys.c    **** }
 4601              		.loc 1 196 13 is_stmt 0 view .LVU1349
ARM GAS  /tmp/ccwxoOej.s 			page 158


 4602 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4603              	.LVL378:
 196:src/keys.c    **** }
 4604              		.loc 1 196 17 view .LVU1350
 4605 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4606              	.LVL379:
 196:src/keys.c    **** }
 4607              		.loc 1 196 17 view .LVU1351
 4608 0032 7047     		bx	lr
 4609              	.LVL380:
 4610              	.L515:
 195:src/keys.c    **** 	return row * 6 + col;
 4611              		.loc 1 195 10 view .LVU1352
 4612 0034 4FF0FF30 		mov	r0, #-1
 4613              	.LVL381:
 197:src/keys.c    **** 
 4614              		.loc 1 197 1 view .LVU1353
 4615 0038 7047     		bx	lr
 4616              	.L517:
 4617 003a 00BF     		.align	2
 4618              	.L516:
 4619 003c 67666666 		.word	1717986919
 4620              		.cfi_endproc
 4621              	.LFE7:
 4623              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4624              		.align	1
 4625              		.p2align 2,,3
 4626              		.global	keycode_to_digit_or_register
 4627              		.syntax unified
 4628              		.thumb
 4629              		.thumb_func
 4630              		.fpu fpv4-sp-d16
 4632              	keycode_to_digit_or_register:
 4633              	.LVL382:
 4634              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4635              		.loc 1 211 1 is_stmt 1 view -0
 4636              		.cfi_startproc
 4637              		@ args = 0, pretend = 0, frame = 0
 4638              		@ frame_needed = 0, uses_anonymous_args = 0
 4639              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4640              		.loc 1 212 3 view .LVU1355
 234:src/keys.c    **** }
 4641              		.loc 1 234 3 view .LVU1356
 4642              	.LBB513:
 4643              	.LBI513:
 131:src/keys.c    **** {
 4644              		.loc 1 131 12 view .LVU1357
 4645              	.LBB514:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4646              		.loc 1 133 2 view .LVU1358
 143:src/keys.c    **** }
 4647              		.loc 1 143 2 view .LVU1359
 143:src/keys.c    **** }
 4648              		.loc 1 143 23 is_stmt 0 view .LVU1360
 4649 0000 024B     		ldr	r3, .L519
ARM GAS  /tmp/ccwxoOej.s 			page 159


 4650              	.LBE514:
 4651              	.LBE513:
 234:src/keys.c    **** }
 4652              		.loc 1 234 28 view .LVU1361
 4653 0002 034A     		ldr	r2, .L519+4
 4654              	.LBB516:
 4655              	.LBB515:
 143:src/keys.c    **** }
 4656              		.loc 1 143 23 view .LVU1362
 4657 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4658              	.LBE515:
 4659              	.LBE516:
 235:src/keys.c    **** #else
 4660              		.loc 1 235 1 view .LVU1363
 4661 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4662              	.LVL383:
 235:src/keys.c    **** #else
 4663              		.loc 1 235 1 view .LVU1364
 4664 0008 7047     		bx	lr
 4665              	.L520:
 4666 000a 00BF     		.align	2
 4667              	.L519:
 4668 000c 00000000 		.word	.LANCHOR6
 4669 0010 00000000 		.word	.LANCHOR5
 4670              		.cfi_endproc
 4671              	.LFE8:
 4673              		.section	.text.init_state,"ax",%progbits
 4674              		.align	1
 4675              		.p2align 2,,3
 4676              		.global	init_state
 4677              		.syntax unified
 4678              		.thumb
 4679              		.thumb_func
 4680              		.fpu fpv4-sp-d16
 4682              	init_state:
 4683              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4684              		.loc 1 615 23 is_stmt 1 view -0
 4685              		.cfi_startproc
 4686              		@ args = 0, pretend = 0, frame = 0
 4687              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4688              		.loc 1 617 2 view .LVU1366
 615:src/keys.c    **** #ifndef REALBUILD
 4689              		.loc 1 615 23 is_stmt 0 view .LVU1367
 4690 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4691              		.cfi_def_cfa_offset 32
 4692              		.cfi_offset 3, -32
 4693              		.cfi_offset 4, -28
 4694              		.cfi_offset 5, -24
 4695              		.cfi_offset 6, -20
 4696              		.cfi_offset 7, -16
 4697              		.cfi_offset 8, -12
 4698              		.cfi_offset 9, -8
 4699              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4700              		.loc 1 617 25 view .LVU1368
ARM GAS  /tmp/ccwxoOej.s 			page 160


 4701 0004 1B4C     		ldr	r4, .L523
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4702              		.loc 1 625 10 view .LVU1369
 4703 0006 4FF00008 		mov	r8, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4704              		.loc 1 629 2 view .LVU1370
 4705 000a 4146     		mov	r1, r8
 4706 000c 1422     		movs	r2, #20
 4707 000e 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4708              		.loc 1 617 25 view .LVU1371
 4709 0012 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4710              		.loc 1 618 25 view .LVU1372
 4711 0014 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4712              		.loc 1 622 10 view .LVU1373
 4713 0016 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4714              		.loc 1 623 10 view .LVU1374
 4715 0018 94F91390 		ldrsb	r9, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4716              		.loc 1 625 10 view .LVU1375
 4717 001c 84F81F80 		strb	r8, [r4, #31]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4718              		.loc 1 629 2 view .LVU1376
 4719 0020 FFF7FEFF 		bl	xset
 4720              	.LVL384:
 667:src/keys.c    **** #endif
 4721              		.loc 1 667 2 view .LVU1377
 4722 0024 144B     		ldr	r3, .L523+4
 4723 0026 1B68     		ldr	r3, [r3]
 4724 0028 93F8AD2F 		ldrb	r2, [r3, #4013]	@ zero_extendqisi2
 4725 002c 68F34102 		bfi	r2, r8, #1, #1
 4726 0030 83F8AD2F 		strb	r2, [r3, #4013]
 675:src/keys.c    **** 	update_program_bounds(1);
 4727              		.loc 1 675 17 view .LVU1378
 4728 0034 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 674:src/keys.c    **** 	State2.runmode = 1;
 4729              		.loc 1 674 14 view .LVU1379
 4730 0036 0722     		movs	r2, #7
 675:src/keys.c    **** 	update_program_bounds(1);
 4731              		.loc 1 675 17 view .LVU1380
 4732 0038 43F04003 		orr	r3, r3, #64
 676:src/keys.c    **** 	set_lift();
 4733              		.loc 1 676 2 view .LVU1381
 4734 003c 0120     		movs	r0, #1
 674:src/keys.c    **** 	State2.runmode = 1;
 4735              		.loc 1 674 14 view .LVU1382
 4736 003e E273     		strb	r2, [r4, #15]
 675:src/keys.c    **** 	update_program_bounds(1);
 4737              		.loc 1 675 17 view .LVU1383
 4738 0040 A375     		strb	r3, [r4, #22]
 676:src/keys.c    **** 	set_lift();
 4739              		.loc 1 676 2 view .LVU1384
 4740 0042 FFF7FEFF 		bl	update_program_bounds
 4741              	.LVL385:
ARM GAS  /tmp/ccwxoOej.s 			page 161


 677:src/keys.c    **** 
 4742              		.loc 1 677 2 view .LVU1385
 4743 0046 FFF7FEFF 		bl	set_lift
 4744              	.LVL386:
 684:src/keys.c    **** 	State2.flags = a;
 4745              		.loc 1 684 15 view .LVU1386
 4746 004a E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 685:src/keys.c    **** #else
 4747              		.loc 1 685 15 view .LVU1387
 4748 004c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 689:src/keys.c    **** }
 4749              		.loc 1 689 15 view .LVU1388
 4750 004e 0B49     		ldr	r1, .L523+8
 682:src/keys.c    **** #ifndef REALBUILD
 4751              		.loc 1 682 10 view .LVU1389
 4752 0050 84F81390 		strb	r9, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4753              		.loc 1 617 25 view .LVU1390
 4754 0054 05F00105 		and	r5, r5, #1
 4755              	.LVL387:
 618:src/keys.c    **** #else
 4756              		.loc 1 618 2 is_stmt 1 view .LVU1391
 618:src/keys.c    **** #else
 4757              		.loc 1 618 25 is_stmt 0 view .LVU1392
 4758 0058 F609     		lsrs	r6, r6, #7
 4759              	.LVL388:
 622:src/keys.c    **** 	int k = LastKey;
 4760              		.loc 1 622 2 is_stmt 1 view .LVU1393
 622:src/keys.c    **** 	int k = LastKey;
 4761              		.loc 1 622 10 is_stmt 0 view .LVU1394
 4762 005a FFB2     		uxtb	r7, r7
 4763              	.LVL389:
 623:src/keys.c    **** 
 4764              		.loc 1 623 2 is_stmt 1 view .LVU1395
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4765              		.loc 1 625 2 view .LVU1396
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4766              		.loc 1 629 2 view .LVU1397
 667:src/keys.c    **** #endif
 4767              		.loc 1 667 2 view .LVU1398
 674:src/keys.c    **** 	State2.runmode = 1;
 4768              		.loc 1 674 2 view .LVU1399
 675:src/keys.c    **** 	update_program_bounds(1);
 4769              		.loc 1 675 2 view .LVU1400
 676:src/keys.c    **** 	set_lift();
 4770              		.loc 1 676 2 view .LVU1401
 677:src/keys.c    **** 
 4771              		.loc 1 677 2 view .LVU1402
 681:src/keys.c    **** 	LastKey = k;
 4772              		.loc 1 681 2 view .LVU1403
 684:src/keys.c    **** 	State2.flags = a;
 4773              		.loc 1 684 15 is_stmt 0 view .LVU1404
 4774 005c 66F3C712 		bfi	r2, r6, #7, #1
 685:src/keys.c    **** #else
 4775              		.loc 1 685 15 view .LVU1405
 4776 0060 65F30003 		bfi	r3, r5, #0, #1
 689:src/keys.c    **** }
ARM GAS  /tmp/ccwxoOej.s 			page 162


 4777              		.loc 1 689 15 view .LVU1406
 4778 0064 6420     		movs	r0, #100
 684:src/keys.c    **** 	State2.flags = a;
 4779              		.loc 1 684 15 view .LVU1407
 4780 0066 E275     		strb	r2, [r4, #23]
 685:src/keys.c    **** #else
 4781              		.loc 1 685 15 view .LVU1408
 4782 0068 2376     		strb	r3, [r4, #24]
 681:src/keys.c    **** 	LastKey = k;
 4783              		.loc 1 681 10 view .LVU1409
 4784 006a A774     		strb	r7, [r4, #18]
 682:src/keys.c    **** #ifndef REALBUILD
 4785              		.loc 1 682 2 is_stmt 1 view .LVU1410
 684:src/keys.c    **** 	State2.flags = a;
 4786              		.loc 1 684 2 view .LVU1411
 685:src/keys.c    **** #else
 4787              		.loc 1 685 2 view .LVU1412
 689:src/keys.c    **** }
 4788              		.loc 1 689 2 view .LVU1413
 689:src/keys.c    **** }
 4789              		.loc 1 689 15 is_stmt 0 view .LVU1414
 4790 006c 0860     		str	r0, [r1]
 690:src/keys.c    **** 
 4791              		.loc 1 690 1 view .LVU1415
 4792 006e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4793              	.LVL390:
 4794              	.L524:
 690:src/keys.c    **** 
 4795              		.loc 1 690 1 view .LVU1416
 4796 0072 00BF     		.align	2
 4797              	.L523:
 4798 0074 00000000 		.word	StateWhileOn
 4799 0078 00000000 		.word	main_ram
 4800 007c 00000000 		.word	ShowRegister
 4801              		.cfi_endproc
 4802              	.LFE13:
 4804              		.section	.text.process_cmplx,"ax",%progbits
 4805              		.align	1
 4806              		.p2align 2,,3
 4807              		.syntax unified
 4808              		.thumb
 4809              		.thumb_func
 4810              		.fpu fpv4-sp-d16
 4812              	process_cmplx:
 4813              	.LVL391:
 4814              	.LFB27:
1469:src/keys.c    **** #define _RARG   0xFF00
 4815              		.loc 1 1469 43 is_stmt 1 view -0
 4816              		.cfi_startproc
 4817              		@ args = 0, pretend = 0, frame = 0
 4818              		@ frame_needed = 0, uses_anonymous_args = 0
1474:src/keys.c    **** 		// Row 1
 4819              		.loc 1 1474 2 view .LVU1418
1525:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4820              		.loc 1 1525 2 view .LVU1419
 4821              	.LBB517:
 4822              	.LBI517:
ARM GAS  /tmp/ccwxoOej.s 			page 163


 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4823              		.loc 1 114 13 view .LVU1420
 4824              	.LBE517:
 115:src/keys.c    **** }
 4825              		.loc 1 115 2 view .LVU1421
 4826              	.LBB534:
 4827              	.LBB518:
 4828              	.LBI518:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4829              		.loc 1 104 20 view .LVU1422
 4830              	.LBB519:
 105:src/keys.c    **** 	State2.shifts = shift;
 4831              		.loc 1 105 2 view .LVU1423
 4832              	.LBB520:
 4833              	.LBI520:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4834              		.loc 1 96 13 view .LVU1424
 4835              	.LBB521:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4836              		.loc 1 97 2 view .LVU1425
 4837              	.LBE521:
 4838              	.LBE520:
 4839              	.LBE519:
 4840              	.LBE518:
 4841              	.LBE534:
1469:src/keys.c    **** #define _RARG   0xFF00
 4842              		.loc 1 1469 43 is_stmt 0 view .LVU1426
 4843 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4844              		.cfi_def_cfa_offset 24
 4845              		.cfi_offset 3, -24
 4846              		.cfi_offset 4, -20
 4847              		.cfi_offset 5, -16
 4848              		.cfi_offset 6, -12
 4849              		.cfi_offset 7, -8
 4850              		.cfi_offset 14, -4
1469:src/keys.c    **** #define _RARG   0xFF00
 4851              		.loc 1 1469 43 view .LVU1427
 4852 0002 0546     		mov	r5, r0
 4853              	.LBB535:
 4854              	.LBB530:
 4855              	.LBB526:
 4856              	.LBB524:
 4857              	.LBB522:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4858              		.loc 1 97 18 view .LVU1428
 4859 0004 FFF7FEFF 		bl	shift_down
 4860              	.LVL392:
  98:src/keys.c    **** }
 4861              		.loc 1 98 2 is_stmt 1 view .LVU1429
  98:src/keys.c    **** }
 4862              		.loc 1 98 52 is_stmt 0 view .LVU1430
 4863 0008 00B3     		cbz	r0, .L543
 4864 000a 2E4F     		ldr	r7, .L551
 4865 000c 0446     		mov	r4, r0
 4866              	.L526:
 4867              	.LVL393:
  98:src/keys.c    **** }
ARM GAS  /tmp/ccwxoOej.s 			page 164


 4868              		.loc 1 98 52 view .LVU1431
 4869              	.LBE522:
 4870              	.LBE524:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4871              		.loc 1 106 2 is_stmt 1 view .LVU1432
 4872              	.LBE526:
 4873              	.LBE530:
 4874              	.LBE535:
 4875              	.LBB536:
 4876              	.LBB537:
 158:src/keys.c    **** }
 4877              		.loc 1 158 23 is_stmt 0 view .LVU1433
 4878 000e 2E4B     		ldr	r3, .L551+4
 4879              	.LBE537:
 4880              	.LBE536:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4881              		.loc 1 1527 21 view .LVU1434
 4882 0010 2E48     		ldr	r0, .L551+8
 4883              	.LBB540:
 4884              	.LBB538:
 158:src/keys.c    **** }
 4885              		.loc 1 158 23 view .LVU1435
 4886 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4887              	.LBE538:
 4888              	.LBE540:
1528:src/keys.c    **** 
 4889              		.loc 1 1528 15 view .LVU1436
 4890 0014 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
1527:src/keys.c    **** 	State2.cmplx = 0;
 4891              		.loc 1 1527 21 view .LVU1437
 4892 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4893              	.LBB541:
 4894              	.LBB531:
 4895              	.LBB527:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4896              		.loc 1 106 16 view .LVU1438
 4897 001a 0021     		movs	r1, #0
 4898              	.LBE527:
 4899              	.LBE531:
 4900              	.LBE541:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4901              		.loc 1 1527 21 view .LVU1439
 4902 001c 30F81360 		ldrh	r6, [r0, r3, lsl #1]
 4903              	.LBB542:
 4904              	.LBB532:
 4905              	.LBB528:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4906              		.loc 1 106 16 view .LVU1440
 4907 0020 3974     		strb	r1, [r7, #16]
 108:src/keys.c    **** }
 4908              		.loc 1 108 2 is_stmt 1 view .LVU1441
 4909              	.LVL394:
 108:src/keys.c    **** }
 4910              		.loc 1 108 2 is_stmt 0 view .LVU1442
 4911              	.LBE528:
 4912              	.LBE532:
 4913              	.LBE542:
ARM GAS  /tmp/ccwxoOej.s 			page 165


1526:src/keys.c    **** 	int op = op_map[lc][shift];
 4914              		.loc 1 1526 2 is_stmt 1 view .LVU1443
 4915              	.LBB543:
 4916              	.LBI536:
 146:src/keys.c    **** {
 4917              		.loc 1 146 12 view .LVU1444
 4918              	.LBB539:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4919              		.loc 1 148 2 view .LVU1445
 158:src/keys.c    **** }
 4920              		.loc 1 158 2 view .LVU1446
 158:src/keys.c    **** }
 4921              		.loc 1 158 2 is_stmt 0 view .LVU1447
 4922              	.LBE539:
 4923              	.LBE543:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4924              		.loc 1 1527 2 is_stmt 1 view .LVU1448
1528:src/keys.c    **** 
 4925              		.loc 1 1528 2 view .LVU1449
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4926              		.loc 1 1530 5 is_stmt 0 view .LVU1450
 4927 0022 06F47F43 		and	r3, r6, #65280
1528:src/keys.c    **** 
 4928              		.loc 1 1528 15 view .LVU1451
 4929 0026 61F34102 		bfi	r2, r1, #1, #1
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4930              		.loc 1 1530 5 view .LVU1452
 4931 002a B3F57F4F 		cmp	r3, #65280
1528:src/keys.c    **** 
 4932              		.loc 1 1528 15 view .LVU1453
 4933 002e 7A75     		strb	r2, [r7, #21]
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4934              		.loc 1 1530 2 is_stmt 1 view .LVU1454
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4935              		.loc 1 1530 5 is_stmt 0 view .LVU1455
 4936 0030 36D0     		beq	.L546
1534:src/keys.c    **** 		// HYP
 4937              		.loc 1 1534 2 is_stmt 1 view .LVU1456
1534:src/keys.c    **** 		// HYP
 4938              		.loc 1 1534 5 is_stmt 0 view .LVU1457
 4939 0032 DDB1     		cbz	r5, .L547
1544:src/keys.c    **** 		switch (c) {
 4940              		.loc 1 1544 2 is_stmt 1 view .LVU1458
1544:src/keys.c    **** 		switch (c) {
 4941              		.loc 1 1544 5 is_stmt 0 view .LVU1459
 4942 0034 2CB1     		cbz	r4, .L531
1545:src/keys.c    **** 		case K_CMPLX:
 4943              		.loc 1 1545 3 is_stmt 1 view .LVU1460
 4944 0036 242D     		cmp	r5, #36
 4945 0038 2CD0     		beq	.L532
 4946 003a 2D2D     		cmp	r5, #45
 4947 003c 23D0     		beq	.L533
 4948 003e 1F2D     		cmp	r5, #31
 4949 0040 0CD0     		beq	.L548
 4950              	.L531:
1569:src/keys.c    **** #else
 4951              		.loc 1 1569 2 view .LVU1461
ARM GAS  /tmp/ccwxoOej.s 			page 166


 4952              	.LVL395:
 4953              	.LBB544:
 4954              	.LBI544:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4955              		.loc 1 714 12 view .LVU1462
 4956              	.LBB545:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4957              		.loc 1 715 2 view .LVU1463
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4958              		.loc 1 715 6 is_stmt 0 view .LVU1464
 4959 0042 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4960              		.loc 1 715 5 view .LVU1465
 4961 0044 012B     		cmp	r3, #1
 4962 0046 04D0     		beq	.L549
 4963              	.LVL396:
 4964              	.L525:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4965              		.loc 1 715 5 view .LVU1466
 4966              	.LBE545:
 4967              	.LBE544:
1577:src/keys.c    **** 
 4968              		.loc 1 1577 1 view .LVU1467
 4969 0048 3046     		mov	r0, r6
 4970 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4971              	.LVL397:
 4972              	.L543:
 4973              	.LBB551:
 4974              	.LBB533:
 4975              	.LBB529:
 4976              	.LBB525:
 4977              	.LBB523:
  98:src/keys.c    **** }
 4978              		.loc 1 98 52 view .LVU1468
 4979 004c 1D4F     		ldr	r7, .L551
 4980 004e 3C7C     		ldrb	r4, [r7, #16]	@ zero_extendqisi2
 4981 0050 DDE7     		b	.L526
 4982              	.LVL398:
 4983              	.L549:
  98:src/keys.c    **** }
 4984              		.loc 1 98 52 view .LVU1469
 4985              	.LBE523:
 4986              	.LBE525:
 4987              	.LBE529:
 4988              	.LBE533:
 4989              	.LBE551:
 4990              	.LBB552:
 4991              	.LBB546:
 4992 0052 3046     		mov	r0, r6
 4993              	.LBE546:
 4994              	.LBE552:
1577:src/keys.c    **** 
 4995              		.loc 1 1577 1 view .LVU1470
 4996 0054 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 4997              		.cfi_remember_state
 4998              		.cfi_restore 14
 4999              		.cfi_restore 7
ARM GAS  /tmp/ccwxoOej.s 			page 167


 5000              		.cfi_restore 6
 5001              		.cfi_restore 5
 5002              		.cfi_restore 4
 5003              		.cfi_restore 3
 5004              		.cfi_def_cfa_offset 0
 5005              	.LVL399:
 5006              	.LBB553:
 5007              	.LBB547:
1577:src/keys.c    **** 
 5008              		.loc 1 1577 1 view .LVU1471
 5009 0058 FFF7FEBF 		b	check_confirm.part.0
 5010              	.LVL400:
 5011              	.L548:
 5012              		.cfi_restore_state
1577:src/keys.c    **** 
 5013              		.loc 1 1577 1 view .LVU1472
 5014              	.LBE547:
 5015              	.LBE553:
1551:src/keys.c    **** 				if (is_bad_cmdline())
 5016              		.loc 1 1551 4 is_stmt 1 view .LVU1473
1551:src/keys.c    **** 				if (is_bad_cmdline())
 5017              		.loc 1 1551 7 is_stmt 0 view .LVU1474
 5018 005c 332E     		cmp	r6, #51
 5019 005e 02D0     		beq	.L545
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 5020              		.loc 1 1552 5 is_stmt 1 view .LVU1475
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 5021              		.loc 1 1552 9 is_stmt 0 view .LVU1476
 5022 0060 FFF7FEFF 		bl	is_bad_cmdline
 5023              	.LVL401:
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 5024              		.loc 1 1552 8 view .LVU1477
 5025 0064 28B3     		cbz	r0, .L550
 5026              	.L545:
1541:src/keys.c    **** 	}
 5027              		.loc 1 1541 3 is_stmt 1 view .LVU1478
1541:src/keys.c    **** 	}
 5028              		.loc 1 1541 10 is_stmt 0 view .LVU1479
 5029 0066 3326     		movs	r6, #51
 5030              	.LVL402:
1577:src/keys.c    **** 
 5031              		.loc 1 1577 1 view .LVU1480
 5032 0068 3046     		mov	r0, r6
 5033 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5034              	.LVL403:
 5035              	.L547:
1536:src/keys.c    **** 		//		print_debug(100,1);
 5036              		.loc 1 1536 3 is_stmt 1 view .LVU1481
 5037 006c FFF7FEFF 		bl	process_cmdline_set_lift
 5038              	.LVL404:
1538:src/keys.c    **** 		State2.dot = op;
 5039              		.loc 1 1538 3 view .LVU1482
1539:src/keys.c    **** 		State2.cmplx = 1;
 5040              		.loc 1 1539 3 view .LVU1483
1540:src/keys.c    **** 		return STATE_UNFINISHED;
 5041              		.loc 1 1540 3 view .LVU1484
1540:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccwxoOej.s 			page 168


 5042              		.loc 1 1540 16 is_stmt 0 view .LVU1485
 5043 0070 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 5044 0072 06F00103 		and	r3, r6, #1
 5045 0076 9B01     		lsls	r3, r3, #6
 5046 0078 43F02203 		orr	r3, r3, #34
 5047 007c 22F06202 		bic	r2, r2, #98
 5048 0080 1343     		orrs	r3, r3, r2
 5049 0082 7B75     		strb	r3, [r7, #21]
 5050 0084 EFE7     		b	.L545
 5051              	.L533:
1547:src/keys.c    **** 			break;
 5052              		.loc 1 1547 4 is_stmt 1 view .LVU1486
 5053              	.LVL405:
 5054              	.LBB554:
 5055              	.LBI554:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5056              		.loc 1 104 20 view .LVU1487
 5057              	.LBB555:
 105:src/keys.c    **** 	State2.shifts = shift;
 5058              		.loc 1 105 2 view .LVU1488
 5059              	.LBB556:
 5060              	.LBI556:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5061              		.loc 1 96 13 view .LVU1489
 5062              	.LBB557:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5063              		.loc 1 97 2 view .LVU1490
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5064              		.loc 1 97 18 is_stmt 0 view .LVU1491
 5065 0086 FFF7FEFF 		bl	shift_down
 5066              	.LVL406:
  98:src/keys.c    **** }
 5067              		.loc 1 98 2 is_stmt 1 view .LVU1492
 5068              	.LBE557:
 5069              	.LBE556:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5070              		.loc 1 106 2 view .LVU1493
 5071              	.LBE555:
 5072              	.LBE554:
 5073              	.LBB559:
 5074              	.LBB548:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5075              		.loc 1 715 6 is_stmt 0 view .LVU1494
 5076 008a 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5077              		.loc 1 715 5 view .LVU1495
 5078 008c 012B     		cmp	r3, #1
 5079              	.LBE548:
 5080              	.LBE559:
 5081              	.LBB560:
 5082              	.LBB558:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5083              		.loc 1 106 16 view .LVU1496
 5084 008e 3C74     		strb	r4, [r7, #16]
 108:src/keys.c    **** }
 5085              		.loc 1 108 2 is_stmt 1 view .LVU1497
 5086              	.LVL407:
ARM GAS  /tmp/ccwxoOej.s 			page 169


 108:src/keys.c    **** }
 5087              		.loc 1 108 2 is_stmt 0 view .LVU1498
 5088              	.LBE558:
 5089              	.LBE560:
1569:src/keys.c    **** #else
 5090              		.loc 1 1569 2 is_stmt 1 view .LVU1499
 5091              	.LBB561:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5092              		.loc 1 714 12 view .LVU1500
 5093              	.LBB549:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5094              		.loc 1 715 2 view .LVU1501
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5095              		.loc 1 715 5 is_stmt 0 view .LVU1502
 5096 0090 DAD1     		bne	.L525
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5097              		.loc 1 715 5 view .LVU1503
 5098 0092 DEE7     		b	.L549
 5099              	.LVL408:
 5100              	.L532:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5101              		.loc 1 715 5 view .LVU1504
 5102              	.LBE549:
 5103              	.LBE561:
1561:src/keys.c    **** 			break;
 5104              		.loc 1 1561 4 is_stmt 1 view .LVU1505
 5105 0094 FFF7FEFF 		bl	init_state
 5106              	.LVL409:
1562:src/keys.c    **** 
 5107              		.loc 1 1562 4 view .LVU1506
1569:src/keys.c    **** #else
 5108              		.loc 1 1569 2 view .LVU1507
 5109              	.LBB562:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5110              		.loc 1 714 12 view .LVU1508
 5111              	.LBB550:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5112              		.loc 1 715 2 view .LVU1509
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5113              		.loc 1 715 6 is_stmt 0 view .LVU1510
 5114 0098 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5115              		.loc 1 715 5 view .LVU1511
 5116 009a 012B     		cmp	r3, #1
 5117 009c D4D1     		bne	.L525
 5118 009e D8E7     		b	.L549
 5119              	.LVL410:
 5120              	.L546:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5121              		.loc 1 715 5 view .LVU1512
 5122              	.LBE550:
 5123              	.LBE562:
1531:src/keys.c    **** 		return STATE_UNFINISHED;
 5124              		.loc 1 1531 3 is_stmt 1 view .LVU1513
 5125              	.LBB563:
 5126              	.LBI563:
 552:src/keys.c    **** 	if (is_bad_cmdline())
ARM GAS  /tmp/ccwxoOej.s 			page 170


 5127              		.loc 1 552 13 view .LVU1514
 5128              	.LBB564:
 553:src/keys.c    **** 		return;
 5129              		.loc 1 553 2 view .LVU1515
 553:src/keys.c    **** 		return;
 5130              		.loc 1 553 6 is_stmt 0 view .LVU1516
 5131 00a0 FFF7FEFF 		bl	is_bad_cmdline
 5132              	.LVL411:
 553:src/keys.c    **** 		return;
 5133              		.loc 1 553 5 view .LVU1517
 5134 00a4 0028     		cmp	r0, #0
 5135 00a6 DED1     		bne	.L545
 5136 00a8 F0B2     		uxtb	r0, r6
 5137 00aa FFF7FEFF 		bl	init_arg.part.0
 5138              	.LVL412:
 5139              	.LBE564:
 5140              	.LBE563:
1532:src/keys.c    **** 	}
 5141              		.loc 1 1532 10 view .LVU1518
 5142 00ae 3326     		movs	r6, #51
 5143              	.LVL413:
1532:src/keys.c    **** 	}
 5144              		.loc 1 1532 10 view .LVU1519
 5145 00b0 CAE7     		b	.L525
 5146              	.LVL414:
 5147              	.L550:
1554:src/keys.c    **** 				State2.cmplx = 1;
 5148              		.loc 1 1554 5 is_stmt 1 view .LVU1520
 5149 00b2 FFF7FEFF 		bl	process_cmdline_set_lift
 5150              	.LVL415:
1555:src/keys.c    **** 				State2.test = op;
 5151              		.loc 1 1555 5 view .LVU1521
1555:src/keys.c    **** 				State2.test = op;
 5152              		.loc 1 1555 18 is_stmt 0 view .LVU1522
 5153 00b6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
1556:src/keys.c    **** 			}
 5154              		.loc 1 1556 17 view .LVU1523
 5155 00b8 FE73     		strb	r6, [r7, #15]
1555:src/keys.c    **** 				State2.test = op;
 5156              		.loc 1 1555 18 view .LVU1524
 5157 00ba 43F00203 		orr	r3, r3, #2
 5158 00be 7B75     		strb	r3, [r7, #21]
1556:src/keys.c    **** 			}
 5159              		.loc 1 1556 5 is_stmt 1 view .LVU1525
1558:src/keys.c    **** 
 5160              		.loc 1 1558 11 is_stmt 0 view .LVU1526
 5161 00c0 3326     		movs	r6, #51
 5162              	.LVL416:
1558:src/keys.c    **** 
 5163              		.loc 1 1558 11 view .LVU1527
 5164 00c2 C1E7     		b	.L525
 5165              	.L552:
 5166              		.align	2
 5167              	.L551:
 5168 00c4 00000000 		.word	StateWhileOn
 5169 00c8 00000000 		.word	.LANCHOR1
 5170 00cc 00000000 		.word	.LANCHOR7
ARM GAS  /tmp/ccwxoOej.s 			page 171


 5171              		.cfi_endproc
 5172              	.LFE27:
 5174              		.section	.text.soft_init_state,"ax",%progbits
 5175              		.align	1
 5176              		.p2align 2,,3
 5177              		.global	soft_init_state
 5178              		.syntax unified
 5179              		.thumb
 5180              		.thumb_func
 5181              		.fpu fpv4-sp-d16
 5183              	soft_init_state:
 5184              	.LFB14:
 692:src/keys.c    **** 	int soft;
 5185              		.loc 1 692 28 is_stmt 1 view -0
 5186              		.cfi_startproc
 5187              		@ args = 0, pretend = 0, frame = 0
 5188              		@ frame_needed = 0, uses_anonymous_args = 0
 693:src/keys.c    **** 	unsigned int runmode;
 5189              		.loc 1 693 2 view .LVU1529
 694:src/keys.c    **** 	unsigned int alphas;
 5190              		.loc 1 694 2 view .LVU1530
 695:src/keys.c    **** 
 5191              		.loc 1 695 2 view .LVU1531
 697:src/keys.c    **** 		CmdLineLength = 0;
 5192              		.loc 1 697 2 view .LVU1532
 692:src/keys.c    **** 	int soft;
 5193              		.loc 1 692 28 is_stmt 0 view .LVU1533
 5194 0000 38B5     		push	{r3, r4, r5, lr}
 5195              		.cfi_def_cfa_offset 16
 5196              		.cfi_offset 3, -16
 5197              		.cfi_offset 4, -12
 5198              		.cfi_offset 5, -8
 5199              		.cfi_offset 14, -4
 697:src/keys.c    **** 		CmdLineLength = 0;
 5200              		.loc 1 697 6 view .LVU1534
 5201 0002 114C     		ldr	r4, .L560
 697:src/keys.c    **** 		CmdLineLength = 0;
 5202              		.loc 1 697 5 view .LVU1535
 5203 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5204 0006 D3B9     		cbnz	r3, .L559
 703:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5205              		.loc 1 703 2 is_stmt 1 view .LVU1536
 704:src/keys.c    **** 	runmode = State2.runmode;
 5206              		.loc 1 704 17 is_stmt 0 view .LVU1537
 5207 0008 104A     		ldr	r2, .L560+4
 5208 000a 6369     		ldr	r3, [r4, #20]
 704:src/keys.c    **** 	runmode = State2.runmode;
 5209              		.loc 1 704 60 view .LVU1538
 5210 000c 1A42     		tst	r2, r3
 5211 000e 0AD0     		beq	.L556
 5212              	.L557:
 5213              	.LVL417:
 705:src/keys.c    **** 	alphas = State2.alphas;
 5214              		.loc 1 705 2 is_stmt 1 view .LVU1539
 706:src/keys.c    **** 	init_state();
 5215              		.loc 1 706 17 is_stmt 0 view .LVU1540
 5216 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccwxoOej.s 			page 172


 5217              	.LVL418:
 706:src/keys.c    **** 	init_state();
 5218              		.loc 1 706 2 is_stmt 1 view .LVU1541
 707:src/keys.c    **** 	if (soft) {
 5219              		.loc 1 707 2 view .LVU1542
 5220 0012 FFF7FEFF 		bl	init_state
 5221              	.LVL419:
 708:src/keys.c    **** 		State2.runmode = runmode;
 5222              		.loc 1 708 2 view .LVU1543
 709:src/keys.c    **** 		State2.alphas = alphas;
 5223              		.loc 1 709 3 view .LVU1544
 710:src/keys.c    **** 	}
 5224              		.loc 1 710 3 view .LVU1545
 710:src/keys.c    **** 	}
 5225              		.loc 1 710 17 is_stmt 0 view .LVU1546
 5226 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5227 0018 05F04805 		and	r5, r5, #72
 5228 001c 23F04803 		bic	r3, r3, #72
 5229 0020 2B43     		orrs	r3, r3, r5
 5230 0022 A375     		strb	r3, [r4, #22]
 712:src/keys.c    **** 
 5231              		.loc 1 712 1 view .LVU1547
 5232 0024 38BD     		pop	{r3, r4, r5, pc}
 5233              	.LVL420:
 5234              	.L556:
 704:src/keys.c    **** 	runmode = State2.runmode;
 5235              		.loc 1 704 60 discriminator 2 view .LVU1548
 5236 0026 E368     		ldr	r3, [r4, #12]
 5237 0028 23F47F03 		bic	r3, r3, #16711680
 5238 002c 23F47F43 		bic	r3, r3, #65280
 5239 0030 B3F1E06F 		cmp	r3, #117440512
 5240 0034 ECD1     		bne	.L557
 5241              	.LVL421:
 705:src/keys.c    **** 	alphas = State2.alphas;
 5242              		.loc 1 705 2 is_stmt 1 view .LVU1549
 706:src/keys.c    **** 	init_state();
 5243              		.loc 1 706 2 view .LVU1550
 707:src/keys.c    **** 	if (soft) {
 5244              		.loc 1 707 2 view .LVU1551
 712:src/keys.c    **** 
 5245              		.loc 1 712 1 is_stmt 0 view .LVU1552
 5246 0036 BDE83840 		pop	{r3, r4, r5, lr}
 5247              		.cfi_remember_state
 5248              		.cfi_restore 14
 5249              		.cfi_restore 5
 5250              		.cfi_restore 4
 5251              		.cfi_restore 3
 5252              		.cfi_def_cfa_offset 0
 707:src/keys.c    **** 	if (soft) {
 5253              		.loc 1 707 2 view .LVU1553
 5254 003a FFF7FEBF 		b	init_state
 5255              	.LVL422:
 5256              	.L559:
 5257              		.cfi_restore_state
 5258              	.LBB567:
 5259              	.LBI567:
 692:src/keys.c    **** 	int soft;
ARM GAS  /tmp/ccwxoOej.s 			page 173


 5260              		.loc 1 692 6 is_stmt 1 view .LVU1554
 5261              	.LBB568:
 698:src/keys.c    **** 		CmdLineEex = 0;
 5262              		.loc 1 698 3 view .LVU1555
 699:src/keys.c    **** 		CmdLineDot = 0;
 5263              		.loc 1 699 3 view .LVU1556
 700:src/keys.c    **** 		return;
 5264              		.loc 1 700 3 view .LVU1557
 698:src/keys.c    **** 		CmdLineEex = 0;
 5265              		.loc 1 698 17 is_stmt 0 view .LVU1558
 5266 003e 0023     		movs	r3, #0
 5267 0040 A383     		strh	r3, [r4, #28]	@ movhi
 700:src/keys.c    **** 		return;
 5268              		.loc 1 700 14 view .LVU1559
 5269 0042 A377     		strb	r3, [r4, #30]
 701:src/keys.c    **** 	}
 5270              		.loc 1 701 3 is_stmt 1 view .LVU1560
 5271              	.LBE568:
 5272              	.LBE567:
 712:src/keys.c    **** 
 5273              		.loc 1 712 1 is_stmt 0 view .LVU1561
 5274 0044 38BD     		pop	{r3, r4, r5, pc}
 5275              	.L561:
 5276 0046 00BF     		.align	2
 5277              	.L560:
 5278 0048 00000000 		.word	StateWhileOn
 5279 004c 002F2004 		.word	69218048
 5280              		.cfi_endproc
 5281              	.LFE14:
 5283              		.section	.text.finish_cpx_entry,"ax",%progbits
 5284              		.align	1
 5285              		.p2align 2,,3
 5286              		.global	finish_cpx_entry
 5287              		.syntax unified
 5288              		.thumb
 5289              		.thumb_func
 5290              		.fpu fpv4-sp-d16
 5292              	finish_cpx_entry:
 5293              	.LVL423:
 5294              	.LFB23:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5295              		.loc 1 1207 36 is_stmt 1 view -0
 5296              		.cfi_startproc
 5297              		@ args = 0, pretend = 0, frame = 0
 5298              		@ frame_needed = 0, uses_anonymous_args = 0
1212:src/keys.c    **** 
 5299              		.loc 1 1212 2 view .LVU1563
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5300              		.loc 1 1207 36 is_stmt 0 view .LVU1564
 5301 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5302              		.cfi_def_cfa_offset 24
 5303              		.cfi_offset 3, -24
 5304              		.cfi_offset 4, -20
 5305              		.cfi_offset 5, -16
 5306              		.cfi_offset 6, -12
 5307              		.cfi_offset 7, -8
 5308              		.cfi_offset 14, -4
ARM GAS  /tmp/ccwxoOej.s 			page 174


1212:src/keys.c    **** 
 5309              		.loc 1 1212 10 view .LVU1565
 5310 0002 2E4E     		ldr	r6, .L578
 5311 0004 3368     		ldr	r3, [r6]
1212:src/keys.c    **** 
 5312              		.loc 1 1212 7 view .LVU1566
 5313 0006 93F8AC2F 		ldrb	r2, [r3, #4012]	@ zero_extendqisi2
1212:src/keys.c    **** 
 5314              		.loc 1 1212 5 view .LVU1567
 5315 000a 12F0060F 		tst	r2, #6
 5316 000e 16D0     		beq	.L562
1224:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5317              		.loc 1 1224 2 is_stmt 1 view .LVU1568
 5318              	.LBB575:
 5319              	.LBI575:
1200:src/keys.c    **** 	if (CmdLineLength) {
 5320              		.loc 1 1200 13 view .LVU1569
 5321              	.LBB576:
1201:src/keys.c    **** 		State2.state_lift = 0;
 5322              		.loc 1 1201 2 view .LVU1570
1201:src/keys.c    **** 		State2.state_lift = 0;
 5323              		.loc 1 1201 6 is_stmt 0 view .LVU1571
 5324 0010 2B4C     		ldr	r4, .L578+4
1201:src/keys.c    **** 		State2.state_lift = 0;
 5325              		.loc 1 1201 5 view .LVU1572
 5326 0012 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 5327 0014 0546     		mov	r5, r0
 5328 0016 01BB     		cbnz	r1, .L575
 5329              	.LBE576:
 5330              	.LBE575:
1225:src/keys.c    **** 	CLEAR_REAL;
 5331              		.loc 1 1225 2 is_stmt 1 view .LVU1573
1225:src/keys.c    **** 	CLEAR_REAL;
 5332              		.loc 1 1225 5 is_stmt 0 view .LVU1574
 5333 0018 5207     		lsls	r2, r2, #29
 5334 001a 11D4     		bmi	.L576
 5335              	.LVL424:
 5336              	.L566:
1226:src/keys.c    **** 	CLEAR_IMAG;
 5337              		.loc 1 1226 2 is_stmt 1 view .LVU1575
1227:src/keys.c    **** 
 5338              		.loc 1 1227 2 view .LVU1576
1226:src/keys.c    **** 	CLEAR_IMAG;
 5339              		.loc 1 1226 2 is_stmt 0 view .LVU1577
 5340 001c 93F8AC2F 		ldrb	r2, [r3, #4012]	@ zero_extendqisi2
 5341 0020 22F00602 		bic	r2, r2, #6
 5342 0024 83F8AC2F 		strb	r2, [r3, #4012]
1229:src/keys.c    **** 
 5343              		.loc 1 1229 2 is_stmt 1 view .LVU1578
1229:src/keys.c    **** 
 5344              		.loc 1 1229 20 is_stmt 0 view .LVU1579
 5345 0028 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5346 002a 65F38612 		bfi	r2, r5, #6, #1
 5347              	.LVL425:
1229:src/keys.c    **** 
 5348              		.loc 1 1229 20 view .LVU1580
 5349 002e E275     		strb	r2, [r4, #23]
ARM GAS  /tmp/ccwxoOej.s 			page 175


1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5350              		.loc 1 1231 2 is_stmt 1 view .LVU1581
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5351              		.loc 1 1231 21 is_stmt 0 view .LVU1582
 5352 0030 B3F8AC3F 		ldrh	r3, [r3, #4012]
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5353              		.loc 1 1231 5 view .LVU1583
 5354 0034 03F4C073 		and	r3, r3, #384
 5355 0038 B3F5C07F 		cmp	r3, #384
 5356 003c 19D0     		beq	.L577
 5357              	.L562:
1243:src/keys.c    **** 
 5358              		.loc 1 1243 1 view .LVU1584
 5359 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5360              	.LVL426:
 5361              	.L576:
1225:src/keys.c    **** 	CLEAR_REAL;
 5362              		.loc 1 1225 17 is_stmt 1 discriminator 1 view .LVU1585
 5363 0040 6420     		movs	r0, #100
 5364 0042 FFF7FEFF 		bl	get_reg_n
 5365              	.LVL427:
 5366 0046 0746     		mov	r7, r0
 5367 0048 6520     		movs	r0, #101
 5368 004a FFF7FEFF 		bl	get_reg_n
 5369              	.LVL428:
 5370 004e 0146     		mov	r1, r0
 5371 0050 3846     		mov	r0, r7
 5372 0052 FFF7FEFF 		bl	swap_reg
 5373              	.LVL429:
 5374 0056 3368     		ldr	r3, [r6]
 5375 0058 E0E7     		b	.L566
 5376              	.LVL430:
 5377              	.L575:
 5378              	.LBB578:
 5379              	.LBB577:
1202:src/keys.c    **** 		process_cmdline();
 5380              		.loc 1 1202 3 view .LVU1586
1202:src/keys.c    **** 		process_cmdline();
 5381              		.loc 1 1202 21 is_stmt 0 view .LVU1587
 5382 005a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5383 005c 6FF38613 		bfc	r3, #6, #1
 5384 0060 E375     		strb	r3, [r4, #23]
1203:src/keys.c    **** 	}
 5385              		.loc 1 1203 3 is_stmt 1 view .LVU1588
 5386 0062 FFF7FEFF 		bl	process_cmdline
 5387              	.LVL431:
1203:src/keys.c    **** 	}
 5388              		.loc 1 1203 3 is_stmt 0 view .LVU1589
 5389 0066 3368     		ldr	r3, [r6]
 5390 0068 93F8AC2F 		ldrb	r2, [r3, #4012]	@ zero_extendqisi2
 5391              	.LBE577:
 5392              	.LBE578:
1225:src/keys.c    **** 	CLEAR_REAL;
 5393              		.loc 1 1225 2 is_stmt 1 view .LVU1590
1225:src/keys.c    **** 	CLEAR_REAL;
 5394              		.loc 1 1225 5 is_stmt 0 view .LVU1591
 5395 006c 5207     		lsls	r2, r2, #29
ARM GAS  /tmp/ccwxoOej.s 			page 176


 5396 006e D5D5     		bpl	.L566
 5397 0070 E6E7     		b	.L576
 5398              	.LVL432:
 5399              	.L577:
 5400              	.LBB579:
 5401              	.LBI579:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5402              		.loc 1 1207 6 is_stmt 1 view .LVU1592
 5403              	.LBB580:
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5404              		.loc 1 1233 3 view .LVU1593
 5405 0072 6E20     		movs	r0, #110
 5406 0074 FFF7FEFF 		bl	get_reg_n
 5407              	.LVL433:
 5408 0078 0446     		mov	r4, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5409              		.loc 1 1233 33 is_stmt 0 view .LVU1594
 5410 007a 6420     		movs	r0, #100
 5411 007c FFF7FEFF 		bl	get_reg_n
 5412              	.LVL434:
 5413 0080 0146     		mov	r1, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5414              		.loc 1 1233 3 view .LVU1595
 5415 0082 2046     		mov	r0, r4
 5416 0084 FFF7FEFF 		bl	copyreg
 5417              	.LVL435:
1234:src/keys.c    **** 		//call p2r
 5418              		.loc 1 1234 3 is_stmt 1 view .LVU1596
 5419 0088 6F20     		movs	r0, #111
 5420 008a FFF7FEFF 		bl	get_reg_n
 5421              	.LVL436:
 5422 008e 0446     		mov	r4, r0
1234:src/keys.c    **** 		//call p2r
 5423              		.loc 1 1234 33 is_stmt 0 view .LVU1597
 5424 0090 6520     		movs	r0, #101
 5425 0092 FFF7FEFF 		bl	get_reg_n
 5426              	.LVL437:
 5427 0096 0146     		mov	r1, r0
1234:src/keys.c    **** 		//call p2r
 5428              		.loc 1 1234 3 view .LVU1598
 5429 0098 2046     		mov	r0, r4
 5430 009a FFF7FEFF 		bl	copyreg
 5431              	.LVL438:
1236:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5432              		.loc 1 1236 18 is_stmt 1 view .LVU1599
1237:src/keys.c    **** #ifdef RP_PREFIX
 5433              		.loc 1 1237 3 view .LVU1600
 5434 009e 0020     		movs	r0, #0
 5435 00a0 FFF7FEFF 		bl	op_p2r
 5436              	.LVL439:
1239:src/keys.c    **** #endif
 5437              		.loc 1 1239 3 view .LVU1601
1239:src/keys.c    **** #endif
 5438              		.loc 1 1239 15 is_stmt 0 view .LVU1602
 5439 00a4 074A     		ldr	r2, .L578+8
1241:src/keys.c    **** 	}
 5440              		.loc 1 1241 3 view .LVU1603
ARM GAS  /tmp/ccwxoOej.s 			page 177


 5441 00a6 3368     		ldr	r3, [r6]
1239:src/keys.c    **** #endif
 5442              		.loc 1 1239 15 view .LVU1604
 5443 00a8 0121     		movs	r1, #1
 5444 00aa 1160     		str	r1, [r2]
1241:src/keys.c    **** 	}
 5445              		.loc 1 1241 3 is_stmt 1 view .LVU1605
 5446 00ac 93F8AD2F 		ldrb	r2, [r3, #4013]	@ zero_extendqisi2
 5447 00b0 6FF30002 		bfc	r2, #0, #1
 5448 00b4 83F8AD2F 		strb	r2, [r3, #4013]
 5449              	.LVL440:
1241:src/keys.c    **** 	}
 5450              		.loc 1 1241 3 is_stmt 0 view .LVU1606
 5451              	.LBE580:
 5452              	.LBE579:
1243:src/keys.c    **** 
 5453              		.loc 1 1243 1 view .LVU1607
 5454 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5455              	.L579:
 5456 00ba 00BF     		.align	2
 5457              	.L578:
 5458 00bc 00000000 		.word	main_ram
 5459 00c0 00000000 		.word	StateWhileOn
 5460 00c4 00000000 		.word	RectPolConv
 5461              		.cfi_endproc
 5462              	.LFE23:
 5464              		.section	.text.stack_begin,"ax",%progbits
 5465              		.align	1
 5466              		.p2align 2,,3
 5467              		.global	stack_begin
 5468              		.syntax unified
 5469              		.thumb
 5470              		.thumb_func
 5471              		.fpu fpv4-sp-d16
 5473              	stack_begin:
 5474              	.LVL441:
 5475              	.LFB25:
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5476              		.loc 1 1264 33 is_stmt 1 view -0
 5477              		.cfi_startproc
 5478              		@ args = 0, pretend = 0, frame = 0
 5479              		@ frame_needed = 0, uses_anonymous_args = 0
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5480              		.loc 1 1267 2 view .LVU1609
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5481              		.loc 1 1264 33 is_stmt 0 view .LVU1610
 5482 0000 38B5     		push	{r3, r4, r5, lr}
 5483              		.cfi_def_cfa_offset 16
 5484              		.cfi_offset 3, -16
 5485              		.cfi_offset 4, -12
 5486              		.cfi_offset 5, -8
 5487              		.cfi_offset 14, -4
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5488              		.loc 1 1267 2 view .LVU1611
 5489 0002 2C4B     		ldr	r3, .L587
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5490              		.loc 1 1268 7 view .LVU1612
ARM GAS  /tmp/ccwxoOej.s 			page 178


 5491 0004 2C4C     		ldr	r4, .L587+4
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5492              		.loc 1 1267 2 view .LVU1613
 5493 0006 1B68     		ldr	r3, [r3]
 5494 0008 93F8AD2F 		ldrb	r2, [r3, #4013]	@ zero_extendqisi2
 5495 000c 42F00102 		orr	r2, r2, #1
 5496 0010 83F8AD2F 		strb	r2, [r3, #4013]
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5497              		.loc 1 1268 2 is_stmt 1 view .LVU1614
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5498              		.loc 1 1268 7 is_stmt 0 view .LVU1615
 5499 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5500              		.loc 1 1268 5 view .LVU1616
 5501 0016 12F04002 		ands	r2, r2, #64
 5502 001a 26D0     		beq	.L581
1269:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5503              		.loc 1 1269 3 is_stmt 1 view .LVU1617
 5504 001c 93F8AC2F 		ldrb	r2, [r3, #4012]	@ zero_extendqisi2
 5505 0020 42F01002 		orr	r2, r2, #16
 5506 0024 83F8AC2F 		strb	r2, [r3, #4012]
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5507              		.loc 1 1270 3 view .LVU1618
 5508 0028 6E20     		movs	r0, #110
 5509              	.LVL442:
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5510              		.loc 1 1270 3 is_stmt 0 view .LVU1619
 5511 002a FFF7FEFF 		bl	get_reg_n
 5512              	.LVL443:
 5513 002e 0546     		mov	r5, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5514              		.loc 1 1270 33 view .LVU1620
 5515 0030 6A20     		movs	r0, #106
 5516 0032 FFF7FEFF 		bl	get_reg_n
 5517              	.LVL444:
 5518 0036 0146     		mov	r1, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5519              		.loc 1 1270 3 view .LVU1621
 5520 0038 2846     		mov	r0, r5
 5521 003a FFF7FEFF 		bl	copyreg
 5522              	.LVL445:
1271:src/keys.c    **** 		lift();
 5523              		.loc 1 1271 3 is_stmt 1 view .LVU1622
 5524 003e 6F20     		movs	r0, #111
 5525 0040 FFF7FEFF 		bl	get_reg_n
 5526              	.LVL446:
 5527 0044 0546     		mov	r5, r0
1271:src/keys.c    **** 		lift();
 5528              		.loc 1 1271 33 is_stmt 0 view .LVU1623
 5529 0046 6B20     		movs	r0, #107
 5530 0048 FFF7FEFF 		bl	get_reg_n
 5531              	.LVL447:
 5532 004c 0146     		mov	r1, r0
1271:src/keys.c    **** 		lift();
 5533              		.loc 1 1271 3 view .LVU1624
 5534 004e 2846     		mov	r0, r5
 5535 0050 FFF7FEFF 		bl	copyreg
ARM GAS  /tmp/ccwxoOej.s 			page 179


 5536              	.LVL448:
1272:src/keys.c    **** 		zero_X();
 5537              		.loc 1 1272 3 is_stmt 1 view .LVU1625
 5538 0054 FFF7FEFF 		bl	lift
 5539              	.LVL449:
1273:src/keys.c    **** 		lift();
 5540              		.loc 1 1273 3 view .LVU1626
 5541 0058 FFF7FEFF 		bl	zero_X
 5542              	.LVL450:
1274:src/keys.c    **** 		State2.state_lift = 0;
 5543              		.loc 1 1274 3 view .LVU1627
 5544 005c FFF7FEFF 		bl	lift
 5545              	.LVL451:
1275:src/keys.c    **** 	}
 5546              		.loc 1 1275 3 view .LVU1628
1275:src/keys.c    **** 	}
 5547              		.loc 1 1275 21 is_stmt 0 view .LVU1629
 5548 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5549 0062 6FF38613 		bfc	r3, #6, #1
 5550 0066 E375     		strb	r3, [r4, #23]
 5551              	.L580:
1284:src/keys.c    **** 
 5552              		.loc 1 1284 1 view .LVU1630
 5553 0068 38BD     		pop	{r3, r4, r5, pc}
 5554              	.LVL452:
 5555              	.L581:
1278:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5556              		.loc 1 1278 3 is_stmt 1 view .LVU1631
 5557 006a 93F8AC1F 		ldrb	r1, [r3, #4012]	@ zero_extendqisi2
 5558 006e 62F30411 		bfi	r1, r2, #4, #1
 5559 0072 83F8AC1F 		strb	r1, [r3, #4012]
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5560              		.loc 1 1279 3 view .LVU1632
 5561 0076 0546     		mov	r5, r0
 5562 0078 6E20     		movs	r0, #110
 5563              	.LVL453:
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5564              		.loc 1 1279 3 is_stmt 0 view .LVU1633
 5565 007a FFF7FEFF 		bl	get_reg_n
 5566              	.LVL454:
 5567 007e 0446     		mov	r4, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5568              		.loc 1 1279 33 view .LVU1634
 5569 0080 6420     		movs	r0, #100
 5570 0082 FFF7FEFF 		bl	get_reg_n
 5571              	.LVL455:
 5572 0086 0146     		mov	r1, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5573              		.loc 1 1279 3 view .LVU1635
 5574 0088 2046     		mov	r0, r4
 5575 008a FFF7FEFF 		bl	copyreg
 5576              	.LVL456:
1280:src/keys.c    **** 		zero_X();
 5577              		.loc 1 1280 3 is_stmt 1 view .LVU1636
 5578 008e 6F20     		movs	r0, #111
 5579 0090 FFF7FEFF 		bl	get_reg_n
 5580              	.LVL457:
ARM GAS  /tmp/ccwxoOej.s 			page 180


 5581 0094 0446     		mov	r4, r0
1280:src/keys.c    **** 		zero_X();
 5582              		.loc 1 1280 33 is_stmt 0 view .LVU1637
 5583 0096 6520     		movs	r0, #101
 5584 0098 FFF7FEFF 		bl	get_reg_n
 5585              	.LVL458:
 5586 009c 0146     		mov	r1, r0
1280:src/keys.c    **** 		zero_X();
 5587              		.loc 1 1280 3 view .LVU1638
 5588 009e 2046     		mov	r0, r4
 5589 00a0 FFF7FEFF 		bl	copyreg
 5590              	.LVL459:
1281:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5591              		.loc 1 1281 3 is_stmt 1 view .LVU1639
 5592 00a4 FFF7FEFF 		bl	zero_X
 5593              	.LVL460:
1282:src/keys.c    **** 	}
 5594              		.loc 1 1282 3 view .LVU1640
1282:src/keys.c    **** 	}
 5595              		.loc 1 1282 6 is_stmt 0 view .LVU1641
 5596 00a8 002D     		cmp	r5, #0
 5597 00aa DDD0     		beq	.L580
1282:src/keys.c    **** 	}
 5598              		.loc 1 1282 17 is_stmt 1 discriminator 1 view .LVU1642
1284:src/keys.c    **** 
 5599              		.loc 1 1284 1 is_stmt 0 discriminator 1 view .LVU1643
 5600 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5601              		.cfi_restore 14
 5602              		.cfi_restore 5
 5603              		.cfi_restore 4
 5604              		.cfi_restore 3
 5605              		.cfi_def_cfa_offset 0
 5606              	.LVL461:
1282:src/keys.c    **** 	}
 5607              		.loc 1 1282 17 discriminator 1 view .LVU1644
 5608 00b0 FFF7FEBF 		b	zero_Y
 5609              	.LVL462:
 5610              	.L588:
 5611              		.align	2
 5612              	.L587:
 5613 00b4 00000000 		.word	main_ram
 5614 00b8 00000000 		.word	StateWhileOn
 5615              		.cfi_endproc
 5616              	.LFE25:
 5618              		.section	.text.current_catalogue_max,"ax",%progbits
 5619              		.align	1
 5620              		.p2align 2,,3
 5621              		.global	current_catalogue_max
 5622              		.syntax unified
 5623              		.thumb
 5624              		.thumb_func
 5625              		.fpu fpv4-sp-d16
 5627              	current_catalogue_max:
 5628              	.LFB44:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 5629              		.loc 1 2477 33 is_stmt 1 view -0
 5630              		.cfi_startproc
ARM GAS  /tmp/ccwxoOej.s 			page 181


 5631              		@ args = 0, pretend = 0, frame = 0
 5632              		@ frame_needed = 0, uses_anonymous_args = 0
 5633              		@ link register save eliminated.
2480:src/keys.c    **** 	{
 5634              		.loc 1 2480 2 view .LVU1646
2511:src/keys.c    **** #endif
 5635              		.loc 1 2511 2 view .LVU1647
2511:src/keys.c    **** #endif
 5636              		.loc 1 2511 31 is_stmt 0 view .LVU1648
 5637 0000 024B     		ldr	r3, .L590
2511:src/keys.c    **** #endif
 5638              		.loc 1 2511 24 view .LVU1649
 5639 0002 034A     		ldr	r2, .L590+4
2511:src/keys.c    **** #endif
 5640              		.loc 1 2511 31 view .LVU1650
 5641 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2513:src/keys.c    **** 
 5642              		.loc 1 2513 1 view .LVU1651
 5643 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5644 0008 7047     		bx	lr
 5645              	.L591:
 5646 000a 00BF     		.align	2
 5647              	.L590:
 5648 000c 00000000 		.word	StateWhileOn
 5649 0010 00000000 		.word	.LANCHOR8
 5650              		.cfi_endproc
 5651              	.LFE44:
 5653              		.section	.text.current_catalogue,"ax",%progbits
 5654              		.align	1
 5655              		.p2align 2,,3
 5656              		.global	current_catalogue
 5657              		.syntax unified
 5658              		.thumb
 5659              		.thumb_func
 5660              		.fpu fpv4-sp-d16
 5662              	current_catalogue:
 5663              	.LVL463:
 5664              	.LFB46:
2526:src/keys.c    **** 	// A quick table of catalogue tables
 5665              		.loc 1 2526 33 is_stmt 1 view -0
 5666              		.cfi_startproc
 5667              		@ args = 0, pretend = 0, frame = 0
 5668              		@ frame_needed = 0, uses_anonymous_args = 0
 5669              		@ link register save eliminated.
2529:src/keys.c    **** 	{
 5670              		.loc 1 2529 2 view .LVU1653
2556:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5671              		.loc 1 2556 2 view .LVU1654
2557:src/keys.c    **** 	int m, i;
 5672              		.loc 1 2557 2 view .LVU1655
2557:src/keys.c    **** 	int m, i;
 5673              		.loc 1 2557 25 is_stmt 0 view .LVU1656
 5674 0000 314A     		ldr	r2, .L619
2557:src/keys.c    **** 	int m, i;
 5675              		.loc 1 2557 15 view .LVU1657
 5676 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 5677              	.LVL464:
ARM GAS  /tmp/ccwxoOej.s 			page 182


2558:src/keys.c    **** 	unsigned p, q;
 5678              		.loc 1 2558 2 is_stmt 1 view .LVU1658
2559:src/keys.c    **** 
 5679              		.loc 1 2559 2 view .LVU1659
2561:src/keys.c    **** 		if (n == OP_ZERO)
 5680              		.loc 1 2561 2 view .LVU1660
2561:src/keys.c    **** 		if (n == OP_ZERO)
 5681              		.loc 1 2561 5 is_stmt 0 view .LVU1661
 5682 0004 102B     		cmp	r3, #16
 5683 0006 39D0     		beq	.L613
2566:src/keys.c    **** 		if (n == OP_ZERO)
 5684              		.loc 1 2566 2 is_stmt 1 view .LVU1662
2566:src/keys.c    **** 		if (n == OP_ZERO)
 5685              		.loc 1 2566 5 is_stmt 0 view .LVU1663
 5686 0008 112B     		cmp	r3, #17
 5687 000a 32D0     		beq	.L614
2571:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5688              		.loc 1 2571 2 is_stmt 1 view .LVU1664
2571:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5689              		.loc 1 2571 5 is_stmt 0 view .LVU1665
 5690 000c 122B     		cmp	r3, #18
 5691 000e 45D0     		beq	.L615
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5692              		.loc 1 2584 2 is_stmt 1 view .LVU1666
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5693              		.loc 1 2584 5 is_stmt 0 view .LVU1667
 5694 0010 0E2B     		cmp	r3, #14
 5695 0012 38D0     		beq	.L616
2587:src/keys.c    **** 
 5696              		.loc 1 2587 3 is_stmt 1 view .LVU1668
2587:src/keys.c    **** 
 5697              		.loc 1 2587 7 is_stmt 0 view .LVU1669
 5698 0014 2D4A     		ldr	r2, .L619+4
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5699              		.loc 1 2589 35 view .LVU1670
 5700 0016 A3F10B01 		sub	r1, r3, #11
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5701              		.loc 1 2589 5 view .LVU1671
 5702 001a 0429     		cmp	r1, #4
2587:src/keys.c    **** 
 5703              		.loc 1 2587 7 view .LVU1672
 5704 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5705              	.LVL465:
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5706              		.loc 1 2589 2 is_stmt 1 view .LVU1673
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5707              		.loc 1 2589 5 is_stmt 0 view .LVU1674
 5708 0020 38D9     		bls	.L599
2592:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5709              		.loc 1 2592 2 is_stmt 1 view .LVU1675
2592:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5710              		.loc 1 2592 5 is_stmt 0 view .LVU1676
 5711 0022 142B     		cmp	r3, #20
 5712 0024 4DD8     		bhi	.L607
2596:src/keys.c    **** 	p = cat[0];
 5713              		.loc 1 2596 2 is_stmt 1 view .LVU1677
2526:src/keys.c    **** 	// A quick table of catalogue tables
ARM GAS  /tmp/ccwxoOej.s 			page 183


 5714              		.loc 1 2526 33 is_stmt 0 view .LVU1678
 5715 0026 10B4     		push	{r4}
 5716              		.cfi_def_cfa_offset 4
 5717              		.cfi_offset 4, -4
2596:src/keys.c    **** 	p = cat[0];
 5718              		.loc 1 2596 11 view .LVU1679
 5719 0028 00EBA001 		add	r1, r0, r0, asr #2
2596:src/keys.c    **** 	p = cat[0];
 5720              		.loc 1 2596 6 view .LVU1680
 5721 002c 5318     		adds	r3, r2, r1
 5722              	.LVL466:
2597:src/keys.c    **** 	q = cat[1];
 5723              		.loc 1 2597 2 is_stmt 1 view .LVU1681
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5724              		.loc 1 2598 2 view .LVU1682
2599:src/keys.c    **** 
 5725              		.loc 1 2599 2 view .LVU1683
2599:src/keys.c    **** 
 5726              		.loc 1 2599 35 is_stmt 0 view .LVU1684
 5727 002e 4000     		lsls	r0, r0, #1
 5728              	.LVL467:
2597:src/keys.c    **** 	q = cat[1];
 5729              		.loc 1 2597 4 view .LVU1685
 5730 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5731              	.LVL468:
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5732              		.loc 1 2598 4 view .LVU1686
 5733 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5734              	.LVL469:
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5735              		.loc 1 2598 4 view .LVU1687
 5736 0034 2649     		ldr	r1, .L619+8
 5737              	.LVL470:
2599:src/keys.c    **** 
 5738              		.loc 1 2599 54 view .LVU1688
 5739 0036 C443     		mvns	r4, r0
2599:src/keys.c    **** 
 5740              		.loc 1 2599 35 view .LVU1689
 5741 0038 00F00600 		and	r0, r0, #6
2599:src/keys.c    **** 
 5742              		.loc 1 2599 54 view .LVU1690
 5743 003c 04F00604 		and	r4, r4, #6
2599:src/keys.c    **** 
 5744              		.loc 1 2599 24 view .LVU1691
 5745 0040 0230     		adds	r0, r0, #2
2599:src/keys.c    **** 
 5746              		.loc 1 2599 48 view .LVU1692
 5747 0042 E340     		lsrs	r3, r3, r4
 5748              	.LVL471:
2599:src/keys.c    **** 
 5749              		.loc 1 2599 18 view .LVU1693
 5750 0044 02FA00F0 		lsl	r0, r2, r0
2599:src/keys.c    **** 
 5751              		.loc 1 2599 43 view .LVU1694
 5752 0048 1843     		orrs	r0, r0, r3
2599:src/keys.c    **** 
 5753              		.loc 1 2599 4 view .LVU1695
ARM GAS  /tmp/ccwxoOej.s 			page 184


 5754 004a C0F30903 		ubfx	r3, r0, #0, #10
 5755              	.LVL472:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5756              		.loc 1 2602 2 is_stmt 1 view .LVU1696
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5757              		.loc 1 2602 12 view .LVU1697
2599:src/keys.c    **** 
 5758              		.loc 1 2599 4 is_stmt 0 view .LVU1698
 5759 004e 3422     		movs	r2, #52
 5760              	.LVL473:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5761              		.loc 1 2602 8 view .LVU1699
 5762 0050 0020     		movs	r0, #0
 5763 0052 01E0     		b	.L603
 5764              	.LVL474:
 5765              	.L618:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5766              		.loc 1 2602 8 view .LVU1700
 5767 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5768              	.LVL475:
 5769              	.L603:
2603:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5770              		.loc 1 2603 3 is_stmt 1 view .LVU1701
2605:src/keys.c    **** 	}
 5771              		.loc 1 2605 3 view .LVU1702
2603:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5772              		.loc 1 2603 6 is_stmt 0 view .LVU1703
 5773 0058 9A42     		cmp	r2, r3
 5774 005a 2FDC     		bgt	.L617
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5775              		.loc 1 2602 25 discriminator 2 view .LVU1704
 5776 005c 0130     		adds	r0, r0, #1
 5777              	.LVL476:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5778              		.loc 1 2602 2 discriminator 2 view .LVU1705
 5779 005e 0728     		cmp	r0, #7
2605:src/keys.c    **** 	}
 5780              		.loc 1 2605 5 discriminator 2 view .LVU1706
 5781 0060 A3EB0203 		sub	r3, r3, r2
 5782              	.LVL477:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5783              		.loc 1 2602 24 is_stmt 1 discriminator 2 view .LVU1707
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5784              		.loc 1 2602 12 discriminator 2 view .LVU1708
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5785              		.loc 1 2602 2 is_stmt 0 discriminator 2 view .LVU1709
 5786 0064 F6D1     		bne	.L618
2607:src/keys.c    **** }
 5787              		.loc 1 2607 2 is_stmt 1 view .LVU1710
2607:src/keys.c    **** }
 5788              		.loc 1 2607 9 is_stmt 0 view .LVU1711
 5789 0066 03F12000 		add	r0, r3, #32
 5790              	.LVL478:
2607:src/keys.c    **** }
 5791              		.loc 1 2607 9 view .LVU1712
 5792 006a 0002     		lsls	r0, r0, #8
 5793              	.L592:
ARM GAS  /tmp/ccwxoOej.s 			page 185


2608:src/keys.c    **** 
 5794              		.loc 1 2608 1 view .LVU1713
 5795 006c 5DF8044B 		ldr	r4, [sp], #4
 5796              		.cfi_restore 4
 5797              		.cfi_def_cfa_offset 0
 5798 0070 7047     		bx	lr
 5799              	.LVL479:
 5800              	.L614:
2567:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5801              		.loc 1 2567 3 is_stmt 1 view .LVU1714
2567:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5802              		.loc 1 2567 6 is_stmt 0 view .LVU1715
 5803 0072 4B28     		cmp	r0, #75
 5804 0074 1FD0     		beq	.L605
2569:src/keys.c    **** 	}
 5805              		.loc 1 2569 3 is_stmt 1 view .LVU1716
2569:src/keys.c    **** 	}
 5806              		.loc 1 2569 10 is_stmt 0 view .LVU1717
 5807 0076 40F40450 		orr	r0, r0, #8448
 5808              	.LVL480:
2569:src/keys.c    **** 	}
 5809              		.loc 1 2569 10 view .LVU1718
 5810 007a 7047     		bx	lr
 5811              	.LVL481:
 5812              	.L613:
2562:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5813              		.loc 1 2562 3 is_stmt 1 view .LVU1719
2562:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5814              		.loc 1 2562 6 is_stmt 0 view .LVU1720
 5815 007c 4B28     		cmp	r0, #75
 5816 007e 17D0     		beq	.L604
2564:src/keys.c    **** 	}
 5817              		.loc 1 2564 3 is_stmt 1 view .LVU1721
2564:src/keys.c    **** 	}
 5818              		.loc 1 2564 10 is_stmt 0 view .LVU1722
 5819 0080 40F40050 		orr	r0, r0, #8192
 5820              	.LVL482:
2564:src/keys.c    **** 	}
 5821              		.loc 1 2564 10 view .LVU1723
 5822 0084 7047     		bx	lr
 5823              	.LVL483:
 5824              	.L616:
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5825              		.loc 1 2584 35 discriminator 1 view .LVU1724
 5826 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2585:src/keys.c    **** 	else
 5827              		.loc 1 2585 7 discriminator 1 view .LVU1725
 5828 0088 124B     		ldr	r3, .L619+12
 5829              	.LVL484:
2585:src/keys.c    **** 	else
 5830              		.loc 1 2585 7 discriminator 1 view .LVU1726
 5831 008a 134A     		ldr	r2, .L619+16
 5832              	.LVL485:
2585:src/keys.c    **** 	else
 5833              		.loc 1 2585 7 discriminator 1 view .LVU1727
 5834 008c 11F0100F 		tst	r1, #16
 5835 0090 18BF     		it	ne
ARM GAS  /tmp/ccwxoOej.s 			page 186


 5836 0092 1A46     		movne	r2, r3
 5837              	.L599:
 5838              	.LVL486:
2590:src/keys.c    **** 	}
 5839              		.loc 1 2590 3 is_stmt 1 view .LVU1728
 5840              	.LBB581:
 5841              	.LBI581:
2519:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5842              		.loc 1 2519 15 view .LVU1729
 5843              	.LBB582:
2520:src/keys.c    **** }
 5844              		.loc 1 2520 2 view .LVU1730
2520:src/keys.c    **** }
 5845              		.loc 1 2520 9 is_stmt 0 view .LVU1731
 5846 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5847              	.LVL487:
2520:src/keys.c    **** }
 5848              		.loc 1 2520 9 view .LVU1732
 5849 0096 40F48840 		orr	r0, r0, #17408
 5850              	.LVL488:
2520:src/keys.c    **** }
 5851              		.loc 1 2520 9 view .LVU1733
 5852              	.LBE582:
 5853              	.LBE581:
2590:src/keys.c    **** 	}
 5854              		.loc 1 2590 10 view .LVU1734
 5855 009a 7047     		bx	lr
 5856              	.LVL489:
 5857              	.L615:
 5858              	.LBB583:
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5859              		.loc 1 2572 3 is_stmt 1 view .LVU1735
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5860              		.loc 1 2572 33 is_stmt 0 view .LVU1736
 5861 009c 0F4B     		ldr	r3, .L619+20
 5862              	.LVL490:
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5863              		.loc 1 2572 13 view .LVU1737
 5864 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5865              	.LVL491:
2573:src/keys.c    **** 			// Monadic conversion routine
 5866              		.loc 1 2573 3 is_stmt 1 view .LVU1738
2573:src/keys.c    **** 			// Monadic conversion routine
 5867              		.loc 1 2573 6 is_stmt 0 view .LVU1739
 5868 00a0 5728     		cmp	r0, #87
2575:src/keys.c    **** 		else
 5869              		.loc 1 2575 4 is_stmt 1 view .LVU1740
2575:src/keys.c    **** 		else
 5870              		.loc 1 2575 25 is_stmt 0 view .LVU1741
 5871 00a2 C6BF     		itte	gt
 5872 00a4 5838     		subgt	r0, r0, #88
 5873              	.LVL492:
2575:src/keys.c    **** 		else
 5874              		.loc 1 2575 18 view .LVU1742
 5875 00a6 40F40070 		orrgt	r0, r0, #512
2577:src/keys.c    **** 	}
 5876              		.loc 1 2577 4 is_stmt 1 view .LVU1743
ARM GAS  /tmp/ccwxoOej.s 			page 187


2577:src/keys.c    **** 	}
 5877              		.loc 1 2577 11 is_stmt 0 view .LVU1744
 5878 00aa 40F40C40 		orrle	r0, r0, #35840
 5879 00ae 7047     		bx	lr
 5880              	.LVL493:
 5881              	.L604:
2577:src/keys.c    **** 	}
 5882              		.loc 1 2577 11 view .LVU1745
 5883              	.LBE583:
2563:src/keys.c    **** 		return CONST(n);
 5884              		.loc 1 2563 11 view .LVU1746
 5885 00b0 4FF42740 		mov	r0, #42752
 5886              	.LVL494:
2563:src/keys.c    **** 		return CONST(n);
 5887              		.loc 1 2563 11 view .LVU1747
 5888 00b4 7047     		bx	lr
 5889              	.LVL495:
 5890              	.L605:
2568:src/keys.c    **** 		return CONST_CMPLX(n);
 5891              		.loc 1 2568 11 view .LVU1748
 5892 00b6 4FF42840 		mov	r0, #43008
 5893              	.LVL496:
2568:src/keys.c    **** 		return CONST_CMPLX(n);
 5894              		.loc 1 2568 11 view .LVU1749
 5895 00ba 7047     		bx	lr
 5896              	.LVL497:
 5897              	.L617:
 5898              		.cfi_def_cfa_offset 4
 5899              		.cfi_offset 4, -4
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5900              		.loc 1 2604 4 is_stmt 1 view .LVU1750
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5901              		.loc 1 2604 29 is_stmt 0 view .LVU1751
 5902 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5903              	.LVL498:
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5904              		.loc 1 2604 29 view .LVU1752
 5905 00c0 D4E7     		b	.L592
 5906              	.LVL499:
 5907              	.L607:
 5908              		.cfi_def_cfa_offset 0
 5909              		.cfi_restore 4
2593:src/keys.c    **** 
 5910              		.loc 1 2593 10 view .LVU1753
 5911 00c2 4FF48070 		mov	r0, #256
 5912              	.LVL500:
2608:src/keys.c    **** 
 5913              		.loc 1 2608 1 view .LVU1754
 5914 00c6 7047     		bx	lr
 5915              	.L620:
 5916              		.align	2
 5917              	.L619:
 5918 00c8 00000000 		.word	StateWhileOn
 5919 00cc 00000000 		.word	.LANCHOR12
 5920 00d0 01000000 		.word	.LANCHOR13+1
 5921 00d4 00000000 		.word	.LANCHOR10
 5922 00d8 00000000 		.word	.LANCHOR9
ARM GAS  /tmp/ccwxoOej.s 			page 188


 5923 00dc 00000000 		.word	.LANCHOR11
 5924              		.cfi_endproc
 5925              	.LFE46:
 5927              		.section	.text.process_catalogue,"ax",%progbits
 5928              		.align	1
 5929              		.p2align 2,,3
 5930              		.syntax unified
 5931              		.thumb
 5932              		.thumb_func
 5933              		.fpu fpv4-sp-d16
 5935              	process_catalogue:
 5936              	.LVL501:
 5937              	.LFB48:
2622:src/keys.c    ****    int pos = State.catpos;
 5938              		.loc 1 2622 93 is_stmt 1 view -0
 5939              		.cfi_startproc
 5940              		@ args = 0, pretend = 0, frame = 16
 5941              		@ frame_needed = 0, uses_anonymous_args = 0
2622:src/keys.c    ****    int pos = State.catpos;
 5942              		.loc 1 2622 93 is_stmt 0 view .LVU1756
 5943 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5944              		.cfi_def_cfa_offset 36
 5945              		.cfi_offset 4, -36
 5946              		.cfi_offset 5, -32
 5947              		.cfi_offset 6, -28
 5948              		.cfi_offset 7, -24
 5949              		.cfi_offset 8, -20
 5950              		.cfi_offset 9, -16
 5951              		.cfi_offset 10, -12
 5952              		.cfi_offset 11, -8
 5953              		.cfi_offset 14, -4
2623:src/keys.c    ****    int ch;
 5954              		.loc 1 2623 14 view .LVU1757
 5955 0004 DFF8EC92 		ldr	r9, .L735+24
 5956              	.LBB584:
 5957              	.LBB585:
2511:src/keys.c    **** #endif
 5958              		.loc 1 2511 31 view .LVU1758
 5959 0008 B44F     		ldr	r7, .L735
 5960              	.LBE585:
 5961              	.LBE584:
2623:src/keys.c    ****    int ch;
 5962              		.loc 1 2623 14 view .LVU1759
 5963 000a D9F80040 		ldr	r4, [r9]
 5964              	.LBB590:
 5965              	.LBB586:
2511:src/keys.c    **** #endif
 5966              		.loc 1 2511 31 view .LVU1760
 5967 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5968              	.LBE586:
 5969              	.LBE590:
2623:src/keys.c    ****    int ch;
 5970              		.loc 1 2623 19 view .LVU1761
 5971 0012 B4F8DC5F 		ldrh	r5, [r4, #4060]
 5972              	.LBB591:
 5973              	.LBB587:
2511:src/keys.c    **** #endif
ARM GAS  /tmp/ccwxoOej.s 			page 189


 5974              		.loc 1 2511 24 view .LVU1762
 5975 0016 B24B     		ldr	r3, .L735+4
 5976              	.LBE587:
 5977              	.LBE591:
2623:src/keys.c    ****    int ch;
 5978              		.loc 1 2623 4 is_stmt 1 view .LVU1763
2622:src/keys.c    ****    int pos = State.catpos;
 5979              		.loc 1 2622 93 is_stmt 0 view .LVU1764
 5980 0018 85B0     		sub	sp, sp, #20
 5981              		.cfi_def_cfa_offset 56
 5982              	.LBB592:
 5983              	.LBB588:
2511:src/keys.c    **** #endif
 5984              		.loc 1 2511 24 view .LVU1765
 5985 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 5986              	.LBE588:
 5987              	.LBE592:
2622:src/keys.c    ****    int pos = State.catpos;
 5988              		.loc 1 2622 93 view .LVU1766
 5989 001e 1646     		mov	r6, r2
2623:src/keys.c    ****    int ch;
 5990              		.loc 1 2623 8 view .LVU1767
 5991 0020 C5F34615 		ubfx	r5, r5, #5, #7
 5992              	.LVL502:
2624:src/keys.c    ****    const int ctmax = current_catalogue_max();
 5993              		.loc 1 2624 4 is_stmt 1 view .LVU1768
2625:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 5994              		.loc 1 2625 4 view .LVU1769
 5995              	.LBB593:
 5996              	.LBI584:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 5997              		.loc 1 2477 5 view .LVU1770
 5998              	.LBB589:
2480:src/keys.c    **** 	{
 5999              		.loc 1 2480 2 view .LVU1771
2511:src/keys.c    **** #endif
 6000              		.loc 1 2511 2 view .LVU1772
2511:src/keys.c    **** #endif
 6001              		.loc 1 2511 2 is_stmt 0 view .LVU1773
 6002              	.LBE589:
 6003              	.LBE593:
2626:src/keys.c    **** 
 6004              		.loc 1 2626 4 is_stmt 1 view .LVU1774
2628:src/keys.c    ****      switch (c) {
 6005              		.loc 1 2628 4 view .LVU1775
2628:src/keys.c    ****      switch (c) {
 6006              		.loc 1 2628 7 is_stmt 0 view .LVU1776
 6007 0024 0029     		cmp	r1, #0
 6008 0026 65D0     		beq	.L720
2689:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 6009              		.loc 1 2689 11 is_stmt 1 view .LVU1777
2689:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 6010              		.loc 1 2689 14 is_stmt 0 view .LVU1778
 6011 0028 0129     		cmp	r1, #1
 6012 002a 00F0ED80 		beq	.L721
2723:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 6013              		.loc 1 2723 11 is_stmt 1 view .LVU1779
ARM GAS  /tmp/ccwxoOej.s 			page 190


2723:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 6014              		.loc 1 2723 14 is_stmt 0 view .LVU1780
 6015 002e 0229     		cmp	r1, #2
 6016 0030 00F00B81 		beq	.L722
 6017              	.LVL503:
 6018              	.L657:
 6019              	.LBB594:
 6020              	.LBB595:
 491:src/keys.c    **** }
 6021              		.loc 1 491 2 is_stmt 1 view .LVU1781
 6022              	.LBB596:
 6023              	.LBI596:
 131:src/keys.c    **** {
 6024              		.loc 1 131 12 view .LVU1782
 6025              	.LBB597:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6026              		.loc 1 133 2 view .LVU1783
 143:src/keys.c    **** }
 6027              		.loc 1 143 2 view .LVU1784
 143:src/keys.c    **** }
 6028              		.loc 1 143 23 is_stmt 0 view .LVU1785
 6029 0034 AB4B     		ldr	r3, .L735+8
 6030              	.LBE597:
 6031              	.LBE596:
 491:src/keys.c    **** }
 6032              		.loc 1 491 49 view .LVU1786
 6033 0036 AC4A     		ldr	r2, .L735+12
 6034              	.LBB599:
 6035              	.LBB598:
 143:src/keys.c    **** }
 6036              		.loc 1 143 23 view .LVU1787
 6037 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 6038              	.LBE598:
 6039              	.LBE599:
 491:src/keys.c    **** }
 6040              		.loc 1 491 49 view .LVU1788
 6041 003a 03EB4303 		add	r3, r3, r3, lsl #1
 6042 003e 02EB4303 		add	r3, r2, r3, lsl #1
 6043              	.LBE595:
 6044              	.LBE594:
 6045              	.LBB603:
 6046              	.LBB604:
 6047              	.LBB605:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6048              		.loc 1 106 16 view .LVU1789
 6049 0042 0025     		movs	r5, #0
 6050              	.LVL504:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6051              		.loc 1 106 16 view .LVU1790
 6052              	.LBE605:
 6053              	.LBE604:
 6054              	.LBE603:
2733:src/keys.c    ****    reset_shift();
 6055              		.loc 1 2733 9 view .LVU1791
 6056 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 6057              	.LVL505:
2733:src/keys.c    ****    reset_shift();
ARM GAS  /tmp/ccwxoOej.s 			page 191


 6058              		.loc 1 2733 9 view .LVU1792
 6059 0046 FFF7FEFF 		bl	remap_chars
 6060              	.LVL506:
2733:src/keys.c    ****    reset_shift();
 6061              		.loc 1 2733 9 view .LVU1793
 6062 004a 0446     		mov	r4, r0
 6063              	.LVL507:
2734:src/keys.c    ****    if (ch == '\0')
 6064              		.loc 1 2734 4 is_stmt 1 view .LVU1794
 6065              	.LBB610:
 6066              	.LBI603:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 6067              		.loc 1 114 13 view .LVU1795
 6068              	.LBE610:
 115:src/keys.c    **** }
 6069              		.loc 1 115 2 view .LVU1796
 6070              	.LBB611:
 6071              	.LBB609:
 6072              	.LBI604:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 6073              		.loc 1 104 20 view .LVU1797
 6074              	.LBB608:
 105:src/keys.c    **** 	State2.shifts = shift;
 6075              		.loc 1 105 2 view .LVU1798
 6076              	.LBB606:
 6077              	.LBI606:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 6078              		.loc 1 96 13 view .LVU1799
 6079              	.LBB607:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6080              		.loc 1 97 2 view .LVU1800
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6081              		.loc 1 97 18 is_stmt 0 view .LVU1801
 6082 004c FFF7FEFF 		bl	shift_down
 6083              	.LVL508:
  98:src/keys.c    **** }
 6084              		.loc 1 98 2 is_stmt 1 view .LVU1802
 6085              	.LBE607:
 6086              	.LBE606:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6087              		.loc 1 106 2 view .LVU1803
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6088              		.loc 1 106 16 is_stmt 0 view .LVU1804
 6089 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6090              		.loc 1 108 2 is_stmt 1 view .LVU1805
 6091              	.LVL509:
 108:src/keys.c    **** }
 6092              		.loc 1 108 2 is_stmt 0 view .LVU1806
 6093              	.LBE608:
 6094              	.LBE609:
 6095              	.LBE611:
2735:src/keys.c    ****      return STATE_UNFINISHED;
 6096              		.loc 1 2735 4 is_stmt 1 view .LVU1807
2735:src/keys.c    ****      return STATE_UNFINISHED;
 6097              		.loc 1 2735 7 is_stmt 0 view .LVU1808
 6098 0052 002C     		cmp	r4, #0
ARM GAS  /tmp/ccwxoOej.s 			page 192


 6099 0054 6FD0     		beq	.L719
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6100              		.loc 1 2737 4 is_stmt 1 view .LVU1809
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6101              		.loc 1 2737 7 is_stmt 0 view .LVU1810
 6102 0056 AAF10B0A 		sub	r10, r10, #11
 6103              	.LVL510:
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6104              		.loc 1 2737 7 view .LVU1811
 6105 005a BAF1040F 		cmp	r10, #4
 6106 005e 40F2CB80 		bls	.L671
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6107              		.loc 1 2741 4 is_stmt 1 view .LVU1812
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6108              		.loc 1 2741 8 is_stmt 0 view .LVU1813
 6109 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6110              		.loc 1 2741 7 view .LVU1814
 6111 0064 092D     		cmp	r5, #9
 6112 0066 40F2C780 		bls	.L671
 6113              	.LVL511:
 6114              	.L639:
2746:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6115              		.loc 1 2746 4 is_stmt 1 view .LVU1815
2746:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6116              		.loc 1 2746 27 is_stmt 0 view .LVU1816
 6117 006a 7B19     		adds	r3, r7, r5
 6118 006c 0025     		movs	r5, #0
 6119 006e 83F82050 		strb	r5, [r3, #32]
2747:src/keys.c    ****      char buf[16];
 6120              		.loc 1 2747 4 is_stmt 1 view .LVU1817
 6121              	.LVL512:
2747:src/keys.c    ****      char buf[16];
 6122              		.loc 1 2747 18 view .LVU1818
2747:src/keys.c    ****      char buf[16];
 6123              		.loc 1 2747 4 is_stmt 0 view .LVU1819
 6124 0072 B8F1000F 		cmp	r8, #0
 6125 0076 00F0D780 		beq	.L717
 6126              	.LVL513:
 6127              	.L659:
 6128              	.LBB612:
2748:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6129              		.loc 1 2748 6 is_stmt 1 view .LVU1820
2749:src/keys.c    ****      int i;
 6130              		.loc 1 2749 6 view .LVU1821
2749:src/keys.c    ****      int i;
 6131              		.loc 1 2749 24 is_stmt 0 view .LVU1822
 6132 007a 2846     		mov	r0, r5
 6133 007c FFF7FEFF 		bl	current_catalogue
 6134              	.LVL514:
 6135 0080 6946     		mov	r1, sp
 6136 0082 FFF7FEFF 		bl	catcmd
 6137              	.LVL515:
 6138 0086 0446     		mov	r4, r0
 6139              	.LVL516:
2750:src/keys.c    **** 
 6140              		.loc 1 2750 6 is_stmt 1 view .LVU1823
ARM GAS  /tmp/ccwxoOej.s 			page 193


2752:src/keys.c    ****        cmd++;
 6141              		.loc 1 2752 6 view .LVU1824
2753:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6142              		.loc 1 2753 8 view .LVU1825
2752:src/keys.c    ****        cmd++;
 6143              		.loc 1 2752 10 is_stmt 0 view .LVU1826
 6144 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6145              	.LVL517:
2752:src/keys.c    ****        cmd++;
 6146              		.loc 1 2752 9 view .LVU1827
 6147 008a 1428     		cmp	r0, #20
 6148 008c 04BF     		itt	eq
 6149 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2753:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6150              		.loc 1 2753 11 view .LVU1828
 6151 0090 0134     		addeq	r4, r4, #1
 6152              	.LVL518:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6153              		.loc 1 2754 6 is_stmt 1 view .LVU1829
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6154              		.loc 1 2754 16 view .LVU1830
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6155              		.loc 1 2754 6 is_stmt 0 view .LVU1831
 6156 0092 0028     		cmp	r0, #0
 6157 0094 00F0BF80 		beq	.L661
 6158 0098 DFF85CB2 		ldr	fp, .L735+28
 6159 009c C4F1010A 		rsb	r10, r4, #1
 6160 00a0 06E0     		b	.L664
 6161              	.LVL519:
 6162              	.L724:
 6163              	.LBB613:
2759:src/keys.c    **** 	 break;
 6164              		.loc 1 2759 16 view .LVU1832
 6165 00a2 C0F2BA80 		blt	.L663
 6166              	.LBE613:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6167              		.loc 1 2754 19 discriminator 2 view .LVU1833
 6168 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6169              	.LVL520:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6170              		.loc 1 2754 6 discriminator 2 view .LVU1834
 6171 00aa 0028     		cmp	r0, #0
 6172 00ac 00F0BF80 		beq	.L723
 6173              	.LVL521:
 6174              	.L664:
 6175              	.LBB614:
2755:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6176              		.loc 1 2755 8 is_stmt 1 view .LVU1835
2755:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6177              		.loc 1 2755 22 is_stmt 0 view .LVU1836
 6178 00b0 FFF7FEFF 		bl	remap_chars
 6179              	.LVL522:
2759:src/keys.c    **** 	 break;
 6180              		.loc 1 2759 13 is_stmt 1 view .LVU1837
 6181              	.LBE614:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6182              		.loc 1 2754 32 view .LVU1838
ARM GAS  /tmp/ccwxoOej.s 			page 194


 6183              	.LBB615:
2756:src/keys.c    ****        if (c > cl)
 6184              		.loc 1 2756 8 view .LVU1839
2756:src/keys.c    ****        if (c > cl)
 6185              		.loc 1 2756 46 is_stmt 0 view .LVU1840
 6186 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6187              	.LVL523:
2757:src/keys.c    **** 	 goto set_pos;
 6188              		.loc 1 2757 8 is_stmt 1 view .LVU1841
2757:src/keys.c    **** 	 goto set_pos;
 6189              		.loc 1 2757 11 is_stmt 0 view .LVU1842
 6190 00b8 9842     		cmp	r0, r3
 6191 00ba 0AEB0402 		add	r2, r10, r4
 6192              	.LVL524:
2757:src/keys.c    **** 	 goto set_pos;
 6193              		.loc 1 2757 11 view .LVU1843
 6194              	.LBE615:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6195              		.loc 1 2754 16 is_stmt 1 view .LVU1844
 6196              	.LBB616:
2757:src/keys.c    **** 	 goto set_pos;
 6197              		.loc 1 2757 11 is_stmt 0 view .LVU1845
 6198 00be F0DD     		ble	.L724
 6199              	.LVL525:
 6200              	.L662:
2757:src/keys.c    **** 	 goto set_pos;
 6201              		.loc 1 2757 11 view .LVU1846
 6202 00c0 D9F80040 		ldr	r4, [r9]
 6203              	.L642:
2757:src/keys.c    **** 	 goto set_pos;
 6204              		.loc 1 2757 11 view .LVU1847
 6205              	.LBE616:
 6206              	.LBE612:
2768:src/keys.c    ****      --pos;
 6207              		.loc 1 2768 10 is_stmt 1 view .LVU1848
 6208 00c4 002E     		cmp	r6, #0
 6209 00c6 00F0B680 		beq	.L646
2768:src/keys.c    ****      --pos;
 6210              		.loc 1 2768 20 is_stmt 0 view .LVU1849
 6211 00ca 4DB1     		cbz	r5, .L640
 6212              	.LVL526:
 6213              	.L718:
2768:src/keys.c    ****      --pos;
 6214              		.loc 1 2768 20 view .LVU1850
 6215 00cc 2846     		mov	r0, r5
 6216 00ce FFF7FEFF 		bl	current_catalogue
 6217              	.LVL527:
2769:src/keys.c    ****    State.catpos = pos;
 6218              		.loc 1 2769 6 is_stmt 1 view .LVU1851
2768:src/keys.c    ****      --pos;
 6219              		.loc 1 2768 10 view .LVU1852
 6220              	.LBB617:
 6221              	.LBI617:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6222              		.loc 1 2615 12 view .LVU1853
 6223              	.LBB618:
2616:src/keys.c    **** }
ARM GAS  /tmp/ccwxoOej.s 			page 195


 6224              		.loc 1 2616 2 view .LVU1854
2616:src/keys.c    **** }
 6225              		.loc 1 2616 33 is_stmt 0 view .LVU1855
 6226 00d2 00F0F000 		and	r0, r0, #240
 6227              	.LBE618:
 6228              	.LBE617:
2768:src/keys.c    ****      --pos;
 6229              		.loc 1 2768 27 view .LVU1856
 6230 00d6 F028     		cmp	r0, #240
 6231 00d8 40F0AD80 		bne	.L646
2768:src/keys.c    ****      --pos;
 6232              		.loc 1 2768 20 view .LVU1857
 6233 00dc 013D     		subs	r5, r5, #1
 6234              	.LVL528:
2768:src/keys.c    ****      --pos;
 6235              		.loc 1 2768 20 view .LVU1858
 6236 00de F5D1     		bne	.L718
 6237              	.LVL529:
 6238              	.L640:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6239              		.loc 1 2770 4 is_stmt 1 view .LVU1859
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6240              		.loc 1 2770 17 is_stmt 0 view .LVU1860
 6241 00e0 B4F8DC3F 		ldrh	r3, [r4, #4060]
 6242 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6243 00e8 A4F8DC3F 		strh	r3, [r4, #4060]	@ movhi
2771:src/keys.c    ****  }
 6244              		.loc 1 2771 4 is_stmt 1 view .LVU1861
2771:src/keys.c    ****  }
 6245              		.loc 1 2771 11 is_stmt 0 view .LVU1862
 6246 00ec 3320     		movs	r0, #51
 6247              	.L731:
2772:src/keys.c    **** 
 6248              		.loc 1 2772 2 view .LVU1863
 6249 00ee 05B0     		add	sp, sp, #20
 6250              		.cfi_remember_state
 6251              		.cfi_def_cfa_offset 36
 6252              		@ sp needed
 6253 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6254              	.LVL530:
 6255              	.L720:
 6256              		.cfi_restore_state
2629:src/keys.c    **** #ifdef DM42
 6257              		.loc 1 2629 6 is_stmt 1 view .LVU1864
 6258 00f4 431F     		subs	r3, r0, #5
 6259 00f6 1F2B     		cmp	r3, #31
 6260 00f8 2FD8     		bhi	.L623
 6261 00fa DFE803F0 		tbb	[pc, r3]
 6262              	.LVL531:
 6263              	.L625:
 6264 00fe 35       		.byte	(.L629-.L625)/2
 6265 00ff 2E       		.byte	(.L623-.L625)/2
 6266 0100 2E       		.byte	(.L623-.L625)/2
 6267 0101 2E       		.byte	(.L623-.L625)/2
 6268 0102 2E       		.byte	(.L623-.L625)/2
 6269 0103 2E       		.byte	(.L623-.L625)/2
 6270 0104 2E       		.byte	(.L623-.L625)/2
ARM GAS  /tmp/ccwxoOej.s 			page 196


 6271 0105 35       		.byte	(.L629-.L625)/2
 6272 0106 2E       		.byte	(.L623-.L625)/2
 6273 0107 2E       		.byte	(.L623-.L625)/2
 6274 0108 2E       		.byte	(.L623-.L625)/2
 6275 0109 20       		.byte	(.L628-.L625)/2
 6276 010a 2E       		.byte	(.L623-.L625)/2
 6277 010b 64       		.byte	(.L627-.L625)/2
 6278 010c 2E       		.byte	(.L623-.L625)/2
 6279 010d 2E       		.byte	(.L623-.L625)/2
 6280 010e 2E       		.byte	(.L623-.L625)/2
 6281 010f 2E       		.byte	(.L623-.L625)/2
 6282 0110 2E       		.byte	(.L623-.L625)/2
 6283 0111 6B       		.byte	(.L626-.L625)/2
 6284 0112 2E       		.byte	(.L623-.L625)/2
 6285 0113 2E       		.byte	(.L623-.L625)/2
 6286 0114 2E       		.byte	(.L623-.L625)/2
 6287 0115 2E       		.byte	(.L623-.L625)/2
 6288 0116 2E       		.byte	(.L623-.L625)/2
 6289 0117 2E       		.byte	(.L623-.L625)/2
 6290 0118 2E       		.byte	(.L623-.L625)/2
 6291 0119 2E       		.byte	(.L623-.L625)/2
 6292 011a 2E       		.byte	(.L623-.L625)/2
 6293 011b 2E       		.byte	(.L623-.L625)/2
 6294 011c 2E       		.byte	(.L623-.L625)/2
 6295 011d 27       		.byte	(.L624-.L625)/2
 6296              		.p2align 1
 6297              	.L730:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6298              		.loc 1 2718 42 is_stmt 0 discriminator 1 view .LVU1865
 6299 011e 734A     		ldr	r2, .L735+16
 6300              	.LVL532:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6301              		.loc 1 2718 42 discriminator 1 view .LVU1866
 6302 0120 7B69     		ldr	r3, [r7, #20]
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6303              		.loc 1 2718 24 discriminator 1 view .LVU1867
 6304 0122 1A42     		tst	r2, r3
 6305 0124 75D0     		beq	.L654
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6306              		.loc 1 2720 8 is_stmt 1 view .LVU1868
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6307              		.loc 1 2720 38 is_stmt 0 view .LVU1869
 6308 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6309 0128 C3F30012 		ubfx	r2, r3, #4, #1
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6310              		.loc 1 2720 30 view .LVU1870
 6311 012c C2F10102 		rsb	r2, r2, #1
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6312              		.loc 1 2720 26 view .LVU1871
 6313 0130 62F30413 		bfi	r3, r2, #4, #1
 6314 0134 BB75     		strb	r3, [r7, #22]
 6315              	.LVL533:
 6316              	.L719:
2721:src/keys.c    ****      }
 6317              		.loc 1 2721 8 is_stmt 1 view .LVU1872
2721:src/keys.c    ****      }
 6318              		.loc 1 2721 15 is_stmt 0 view .LVU1873
ARM GAS  /tmp/ccwxoOej.s 			page 197


 6319 0136 3320     		movs	r0, #51
 6320              	.L621:
2772:src/keys.c    **** 
 6321              		.loc 1 2772 2 view .LVU1874
 6322 0138 05B0     		add	sp, sp, #20
 6323              		.cfi_remember_state
 6324              		.cfi_def_cfa_offset 36
 6325              		@ sp needed
 6326 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6327              	.LVL534:
 6328              	.L628:
 6329              		.cfi_restore_state
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6330              		.loc 1 2658 8 is_stmt 1 view .LVU1875
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6331              		.loc 1 2658 11 is_stmt 0 view .LVU1876
 6332 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6333 0140 23B1     		cbz	r3, .L624
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6334              		.loc 1 2658 33 discriminator 1 view .LVU1877
 6335 0142 FFF7FEFF 		bl	keyticks
 6336              	.LVL535:
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6337              		.loc 1 2658 30 discriminator 1 view .LVU1878
 6338 0146 1D28     		cmp	r0, #29
 6339 0148 40F39580 		ble	.L725
 6340              	.L624:
2668:src/keys.c    ****        return STATE_UNFINISHED;
 6341              		.loc 1 2668 8 is_stmt 1 view .LVU1879
 6342 014c 0020     		movs	r0, #0
 6343 014e FFF7FEFF 		bl	init_cat
 6344              	.LVL536:
2669:src/keys.c    **** 
 6345              		.loc 1 2669 8 view .LVU1880
2669:src/keys.c    **** 
 6346              		.loc 1 2669 15 is_stmt 0 view .LVU1881
 6347 0152 3320     		movs	r0, #51
2772:src/keys.c    **** 
 6348              		.loc 1 2772 2 view .LVU1882
 6349 0154 05B0     		add	sp, sp, #20
 6350              		.cfi_remember_state
 6351              		.cfi_def_cfa_offset 36
 6352              		@ sp needed
 6353 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6354              	.LVL537:
 6355              	.L623:
 6356              		.cfi_restore_state
 6357              	.LBB619:
 6358              	.LBI594:
 435:src/keys.c    **** {
 6359              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1883
 6360              	.LBB600:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6361              		.loc 1 437 2 discriminator 4 view .LVU1884
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6362              		.loc 1 485 2 discriminator 4 view .LVU1885
 485:src/keys.c    **** 		if (shift == SHIFT_N)
ARM GAS  /tmp/ccwxoOej.s 			page 198


 6363              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1886
 6364 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6365              		.loc 1 485 5 discriminator 4 view .LVU1887
 6366 015c 13F0100F 		tst	r3, #16
 6367 0160 14BF     		ite	ne
 6368 0162 0421     		movne	r1, #4
 6369              	.LVL538:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6370              		.loc 1 485 5 discriminator 4 view .LVU1888
 6371 0164 0021     		moveq	r1, #0
 6372 0166 65E7     		b	.L657
 6373              	.LVL539:
 6374              	.L629:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6375              		.loc 1 485 5 discriminator 4 view .LVU1889
 6376              	.LBE600:
 6377              	.LBE619:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6378              		.loc 1 2636 8 is_stmt 1 view .LVU1890
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6379              		.loc 1 2636 11 is_stmt 0 view .LVU1891
 6380 0168 4545     		cmp	r5, r8
 6381 016a EFDA     		bge	.L624
 6382 016c 2846     		mov	r0, r5
 6383              	.LVL540:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6384              		.loc 1 2636 24 discriminator 1 view .LVU1892
 6385 016e 002E     		cmp	r6, #0
 6386 0170 00F08D80 		beq	.L726
 6387              	.LVL541:
 6388              	.LBB620:
 6389              	.LBI620:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6390              		.loc 1 2615 12 is_stmt 1 view .LVU1893
 6391              	.LBB621:
2616:src/keys.c    **** }
 6392              		.loc 1 2616 2 view .LVU1894
2616:src/keys.c    **** }
 6393              		.loc 1 2616 10 is_stmt 0 view .LVU1895
 6394 0174 FFF7FEFF 		bl	current_catalogue
 6395              	.LVL542:
2616:src/keys.c    **** }
 6396              		.loc 1 2616 33 view .LVU1896
 6397 0178 00F0F003 		and	r3, r0, #240
 6398              	.LBE621:
 6399              	.LBE620:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6400              		.loc 1 2636 27 view .LVU1897
 6401 017c F02B     		cmp	r3, #240
 6402              	.LBB623:
 6403              	.LBB622:
2616:src/keys.c    **** }
 6404              		.loc 1 2616 10 view .LVU1898
 6405 017e 0446     		mov	r4, r0
 6406              	.LBE622:
 6407              	.LBE623:
ARM GAS  /tmp/ccwxoOej.s 			page 199


2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6408              		.loc 1 2636 27 view .LVU1899
 6409 0180 E4D0     		beq	.L624
 6410              	.L632:
 6411              	.LBB624:
2637:src/keys.c    **** 
 6412              		.loc 1 2637 3 is_stmt 1 view .LVU1900
2639:src/keys.c    **** 
 6413              		.loc 1 2639 3 view .LVU1901
 6414 0182 0020     		movs	r0, #0
 6415 0184 FFF7FEFF 		bl	init_cat
 6416              	.LVL543:
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6417              		.loc 1 2641 3 view .LVU1902
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6418              		.loc 1 2641 6 is_stmt 0 view .LVU1903
 6419 0188 14F47043 		ands	r3, r4, #61440
 6420 018c 00F08C80 		beq	.L633
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6421              		.loc 1 2641 7 discriminator 1 view .LVU1904
 6422 0190 B3F5704F 		cmp	r3, #61440
 6423 0194 00F08880 		beq	.L633
 6424              	.LBB625:
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6425              		.loc 1 2642 5 is_stmt 1 view .LVU1905
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6426              		.loc 1 2642 31 is_stmt 0 view .LVU1906
 6427 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6428 019c A3F12005 		sub	r5, r3, #32
 6429              	.LVL544:
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6430              		.loc 1 2642 31 view .LVU1907
 6431 01a0 EDB2     		uxtb	r5, r5
 6432              	.LVL545:
2643:src/keys.c    **** 	     return op;
 6433              		.loc 1 2643 5 is_stmt 1 view .LVU1908
2643:src/keys.c    **** 	     return op;
 6434              		.loc 1 2643 8 is_stmt 0 view .LVU1909
 6435 01a2 012D     		cmp	r5, #1
 6436 01a4 40F28980 		bls	.L634
2643:src/keys.c    **** 	     return op;
 6437              		.loc 1 2643 56 discriminator 1 view .LVU1910
 6438 01a8 6C2D     		cmp	r5, #108
 6439 01aa 00F08680 		beq	.L634
2643:src/keys.c    **** 	     return op;
 6440              		.loc 1 2643 77 discriminator 2 view .LVU1911
 6441 01ae 242D     		cmp	r5, #36
 6442 01b0 00F08380 		beq	.L634
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6443              		.loc 1 2645 5 is_stmt 1 view .LVU1912
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6444              		.loc 1 2645 30 is_stmt 0 view .LVU1913
 6445 01b4 A5F12D02 		sub	r2, r5, #45
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6446              		.loc 1 2645 8 view .LVU1914
 6447 01b8 062A     		cmp	r2, #6
 6448 01ba 00F29F80 		bhi	.L637
ARM GAS  /tmp/ccwxoOej.s 			page 200


2646:src/keys.c    **** 	   else
 6449              		.loc 1 2646 7 is_stmt 1 view .LVU1915
2646:src/keys.c    **** 	   else
 6450              		.loc 1 2646 28 is_stmt 0 view .LVU1916
 6451 01be 4D3B     		subs	r3, r3, #77
2646:src/keys.c    **** 	   else
 6452              		.loc 1 2646 19 view .LVU1917
 6453 01c0 FB73     		strb	r3, [r7, #15]
 6454              	.LBE625:
 6455              	.LBE624:
2655:src/keys.c    **** 
 6456              		.loc 1 2655 15 view .LVU1918
 6457 01c2 3320     		movs	r0, #51
 6458              	.LBB635:
 6459              	.LBB628:
 6460 01c4 B8E7     		b	.L621
 6461              	.LVL546:
 6462              	.L627:
2655:src/keys.c    **** 
 6463              		.loc 1 2655 15 view .LVU1919
 6464              	.LBE628:
 6465              	.LBE635:
2672:src/keys.c    ****        if (pos == 0)
 6466              		.loc 1 2672 8 is_stmt 1 view .LVU1920
2672:src/keys.c    ****        if (pos == 0)
 6467              		.loc 1 2672 22 is_stmt 0 view .LVU1921
 6468 01c6 0023     		movs	r3, #0
 6469 01c8 3B77     		strb	r3, [r7, #28]
2673:src/keys.c    **** 	 goto set_max;
 6470              		.loc 1 2673 8 is_stmt 1 view .LVU1922
2673:src/keys.c    **** 	 goto set_max;
 6471              		.loc 1 2673 11 is_stmt 0 view .LVU1923
 6472 01ca 002D     		cmp	r5, #0
 6473 01cc 5DD1     		bne	.L727
 6474              	.LVL547:
 6475              	.L641:
2766:src/keys.c    ****  set_pos:
 6476              		.loc 1 2766 4 is_stmt 1 view .LVU1924
2766:src/keys.c    ****  set_pos:
 6477              		.loc 1 2766 8 is_stmt 0 view .LVU1925
 6478 01ce 08F1FF35 		add	r5, r8, #-1
 6479              	.LVL548:
2766:src/keys.c    ****  set_pos:
 6480              		.loc 1 2766 8 view .LVU1926
 6481 01d2 77E7     		b	.L642
 6482              	.LVL549:
 6483              	.L626:
2680:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6484              		.loc 1 2680 8 is_stmt 1 view .LVU1927
2680:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6485              		.loc 1 2680 22 is_stmt 0 view .LVU1928
 6486 01d4 0023     		movs	r3, #0
 6487 01d6 3B77     		strb	r3, [r7, #28]
2681:src/keys.c    ****        if (pos >= ctmax)
 6488              		.loc 1 2681 8 is_stmt 1 view .LVU1929
2681:src/keys.c    ****        if (pos >= ctmax)
 6489              		.loc 1 2681 14 is_stmt 0 view .LVU1930
ARM GAS  /tmp/ccwxoOej.s 			page 201


 6490 01d8 06E0     		b	.L645
 6491              	.LVL550:
 6492              	.L728:
2681:src/keys.c    ****        if (pos >= ctmax)
 6493              		.loc 1 2681 29 discriminator 1 view .LVU1931
 6494 01da 66B3     		cbz	r6, .L646
 6495              	.LBB636:
 6496              	.LBB637:
2616:src/keys.c    **** }
 6497              		.loc 1 2616 10 view .LVU1932
 6498 01dc FFF7FEFF 		bl	current_catalogue
 6499              	.LVL551:
2616:src/keys.c    **** }
 6500              		.loc 1 2616 33 view .LVU1933
 6501 01e0 00F0F000 		and	r0, r0, #240
 6502              	.LBE637:
 6503              	.LBE636:
2681:src/keys.c    ****        if (pos >= ctmax)
 6504              		.loc 1 2681 41 view .LVU1934
 6505 01e4 F028     		cmp	r0, #240
 6506 01e6 26D1     		bne	.L646
 6507              	.L645:
2681:src/keys.c    ****        if (pos >= ctmax)
 6508              		.loc 1 2681 65 is_stmt 1 discriminator 3 view .LVU1935
2681:src/keys.c    ****        if (pos >= ctmax)
 6509              		.loc 1 2681 14 discriminator 3 view .LVU1936
 6510 01e8 0135     		adds	r5, r5, #1
 6511              	.LVL552:
 6512              	.LBB640:
 6513              	.LBI636:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6514              		.loc 1 2615 12 discriminator 3 view .LVU1937
 6515              	.LBB638:
2616:src/keys.c    **** }
 6516              		.loc 1 2616 2 discriminator 3 view .LVU1938
 6517              	.LBE638:
 6518              	.LBE640:
2681:src/keys.c    ****        if (pos >= ctmax)
 6519              		.loc 1 2681 14 is_stmt 0 discriminator 3 view .LVU1939
 6520 01ea A845     		cmp	r8, r5
 6521              	.LBB641:
 6522              	.LBB639:
2616:src/keys.c    **** }
 6523              		.loc 1 2616 10 discriminator 3 view .LVU1940
 6524 01ec 2846     		mov	r0, r5
 6525              	.LBE639:
 6526              	.LBE641:
2681:src/keys.c    ****        if (pos >= ctmax)
 6527              		.loc 1 2681 14 discriminator 3 view .LVU1941
 6528 01ee F4DC     		bgt	.L728
 6529              	.LVL553:
2768:src/keys.c    ****      --pos;
 6530              		.loc 1 2768 10 is_stmt 1 view .LVU1942
2683:src/keys.c    ****        goto set_pos;
 6531              		.loc 1 2683 7 is_stmt 0 view .LVU1943
 6532 01f0 3546     		mov	r5, r6
 6533              	.LVL554:
ARM GAS  /tmp/ccwxoOej.s 			page 202


2768:src/keys.c    ****      --pos;
 6534              		.loc 1 2768 10 view .LVU1944
 6535 01f2 06B3     		cbz	r6, .L646
 6536              	.LVL555:
2768:src/keys.c    ****      --pos;
 6537              		.loc 1 2768 10 view .LVU1945
 6538 01f4 0025     		movs	r5, #0
 6539              	.LVL556:
2768:src/keys.c    ****      --pos;
 6540              		.loc 1 2768 10 view .LVU1946
 6541 01f6 73E7     		b	.L640
 6542              	.LVL557:
 6543              	.L671:
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6544              		.loc 1 2741 8 view .LVU1947
 6545 01f8 2B46     		mov	r3, r5
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6546              		.loc 1 2742 6 is_stmt 1 view .LVU1948
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6547              		.loc 1 2742 31 is_stmt 0 view .LVU1949
 6548 01fa 3B44     		add	r3, r3, r7
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6549              		.loc 1 2742 27 view .LVU1950
 6550 01fc 0135     		adds	r5, r5, #1
 6551 01fe EDB2     		uxtb	r5, r5
 6552 0200 3D77     		strb	r5, [r7, #28]
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6553              		.loc 1 2742 31 view .LVU1951
 6554 0202 83F82040 		strb	r4, [r3, #32]
 6555 0206 30E7     		b	.L639
 6556              	.LVL558:
 6557              	.L721:
2690:src/keys.c    ****        /*
 6558              		.loc 1 2690 6 is_stmt 1 view .LVU1952
2690:src/keys.c    ****        /*
 6559              		.loc 1 2690 9 is_stmt 0 view .LVU1953
 6560 0208 BAF1120F 		cmp	r10, #18
 6561 020c 21D0     		beq	.L729
 6562              	.L648:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6563              		.loc 1 2718 11 is_stmt 1 view .LVU1954
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6564              		.loc 1 2718 14 is_stmt 0 view .LVU1955
 6565 020e 2428     		cmp	r0, #36
 6566 0210 85D0     		beq	.L730
 6567              	.LVL559:
 6568              	.L654:
2733:src/keys.c    ****    reset_shift();
 6569              		.loc 1 2733 4 is_stmt 1 view .LVU1956
 6570              	.LBB642:
 435:src/keys.c    **** {
 6571              		.loc 1 435 12 view .LVU1957
 6572              	.LBB601:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6573              		.loc 1 437 2 view .LVU1958
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6574              		.loc 1 485 2 view .LVU1959
ARM GAS  /tmp/ccwxoOej.s 			page 203


 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6575              		.loc 1 485 5 is_stmt 0 view .LVU1960
 6576 0212 0121     		movs	r1, #1
 6577              	.LVL560:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6578              		.loc 1 485 5 view .LVU1961
 6579 0214 0EE7     		b	.L657
 6580              	.LVL561:
 6581              	.L661:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6582              		.loc 1 485 5 view .LVU1962
 6583 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6584              	.LVL562:
 6585              	.L663:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6586              		.loc 1 485 5 view .LVU1963
 6587              	.LBE601:
 6588              	.LBE642:
 6589              	.LBB643:
2762:src/keys.c    ****        goto set_pos;
 6590              		.loc 1 2762 6 is_stmt 1 view .LVU1964
2762:src/keys.c    ****        goto set_pos;
 6591              		.loc 1 2762 9 is_stmt 0 view .LVU1965
 6592 021a 002B     		cmp	r3, #0
 6593 021c 3FF450AF 		beq	.L662
 6594              	.LBE643:
2747:src/keys.c    ****      char buf[16];
 6595              		.loc 1 2747 31 is_stmt 1 view .LVU1966
 6596 0220 0135     		adds	r5, r5, #1
 6597              	.LVL563:
2747:src/keys.c    ****      char buf[16];
 6598              		.loc 1 2747 18 view .LVU1967
2747:src/keys.c    ****      char buf[16];
 6599              		.loc 1 2747 4 is_stmt 0 view .LVU1968
 6600 0222 A845     		cmp	r8, r5
 6601 0224 7FF429AF 		bne	.L659
 6602              	.LVL564:
 6603              	.L717:
2747:src/keys.c    ****      char buf[16];
 6604              		.loc 1 2747 4 view .LVU1969
 6605 0228 D9F80040 		ldr	r4, [r9]
 6606 022c CFE7     		b	.L641
 6607              	.LVL565:
 6608              	.L723:
2747:src/keys.c    ****      char buf[16];
 6609              		.loc 1 2747 4 view .LVU1970
 6610 022e 3A44     		add	r2, r2, r7
 6611              	.LVL566:
2747:src/keys.c    ****      char buf[16];
 6612              		.loc 1 2747 4 view .LVU1971
 6613 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6614              	.LVL567:
2747:src/keys.c    ****      char buf[16];
 6615              		.loc 1 2747 4 view .LVU1972
 6616 0234 F1E7     		b	.L663
 6617              	.LVL568:
 6618              	.L646:
ARM GAS  /tmp/ccwxoOej.s 			page 204


2770:src/keys.c    ****    return STATE_UNFINISHED;
 6619              		.loc 1 2770 17 view .LVU1973
 6620 0236 B4F8DC3F 		ldrh	r3, [r4, #4060]
 6621 023a 05F07F05 		and	r5, r5, #127
 6622              	.LVL569:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6623              		.loc 1 2770 4 is_stmt 1 view .LVU1974
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6624              		.loc 1 2770 17 is_stmt 0 view .LVU1975
 6625 023e 65F34B13 		bfi	r3, r5, #5, #7
 6626 0242 A4F8DC3F 		strh	r3, [r4, #4060]	@ movhi
2771:src/keys.c    ****  }
 6627              		.loc 1 2771 4 is_stmt 1 view .LVU1976
2771:src/keys.c    ****  }
 6628              		.loc 1 2771 11 is_stmt 0 view .LVU1977
 6629 0246 3320     		movs	r0, #51
 6630 0248 51E7     		b	.L731
 6631              	.LVL570:
 6632              	.L722:
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6633              		.loc 1 2724 6 is_stmt 1 view .LVU1978
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6634              		.loc 1 2724 9 is_stmt 0 view .LVU1979
 6635 024a 1028     		cmp	r0, #16
 6636 024c 23D0     		beq	.L732
 6637              	.L656:
2733:src/keys.c    ****    reset_shift();
 6638              		.loc 1 2733 4 is_stmt 1 view .LVU1980
 6639              	.LVL571:
 6640              	.LBB644:
 435:src/keys.c    **** {
 6641              		.loc 1 435 12 view .LVU1981
 6642              	.LBB602:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6643              		.loc 1 437 2 view .LVU1982
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6644              		.loc 1 485 2 view .LVU1983
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6645              		.loc 1 485 5 is_stmt 0 view .LVU1984
 6646 024e 0521     		movs	r1, #5
 6647              	.LVL572:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6648              		.loc 1 485 5 view .LVU1985
 6649 0250 F0E6     		b	.L657
 6650              	.LVL573:
 6651              	.L729:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6652              		.loc 1 485 5 view .LVU1986
 6653              	.LBE602:
 6654              	.LBE644:
2690:src/keys.c    ****        /*
 6655              		.loc 1 2690 32 discriminator 1 view .LVU1987
 6656 0252 0128     		cmp	r0, #1
 6657 0254 DBD1     		bne	.L648
 6658              	.LBB645:
2699:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 6659              		.loc 1 2699 8 is_stmt 1 view .LVU1988
ARM GAS  /tmp/ccwxoOej.s 			page 205


2707:src/keys.c    ****        int i;
 6660              		.loc 1 2707 8 view .LVU1989
2707:src/keys.c    ****        int i;
 6661              		.loc 1 2707 26 is_stmt 0 view .LVU1990
 6662 0256 2846     		mov	r0, r5
 6663              	.LVL574:
2707:src/keys.c    ****        int i;
 6664              		.loc 1 2707 26 view .LVU1991
 6665 0258 FFF7FEFF 		bl	current_catalogue
 6666              	.LVL575:
2707:src/keys.c    ****        int i;
 6667              		.loc 1 2707 26 view .LVU1992
 6668 025c 0446     		mov	r4, r0
 6669              	.LVL576:
2708:src/keys.c    **** 
 6670              		.loc 1 2708 8 is_stmt 1 view .LVU1993
2710:src/keys.c    ****        if (isRARG(op))
 6671              		.loc 1 2710 8 view .LVU1994
 6672 025e 0020     		movs	r0, #0
 6673              	.LVL577:
2710:src/keys.c    ****        if (isRARG(op))
 6674              		.loc 1 2710 8 is_stmt 0 view .LVU1995
 6675 0260 FFF7FEFF 		bl	init_cat
 6676              	.LVL578:
2711:src/keys.c    **** 	 return op ^ 1;
 6677              		.loc 1 2711 8 is_stmt 1 view .LVU1996
2711:src/keys.c    **** 	 return op ^ 1;
 6678              		.loc 1 2711 11 is_stmt 0 view .LVU1997
 6679 0264 14F47043 		ands	r3, r4, #61440
 6680 0268 29D0     		beq	.L649
2711:src/keys.c    **** 	 return op ^ 1;
 6681              		.loc 1 2711 12 discriminator 1 view .LVU1998
 6682 026a B3F5704F 		cmp	r3, #61440
 6683 026e 26D0     		beq	.L649
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6684              		.loc 1 2712 3 is_stmt 1 view .LVU1999
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6685              		.loc 1 2712 13 is_stmt 0 view .LVU2000
 6686 0270 84F00100 		eor	r0, r4, #1
 6687 0274 60E7     		b	.L621
 6688              	.LVL579:
 6689              	.L725:
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6690              		.loc 1 2712 13 view .LVU2001
 6691              	.LBE645:
2659:src/keys.c    **** 	   goto search;
 6692              		.loc 1 2659 3 is_stmt 1 view .LVU2002
2659:src/keys.c    **** 	   goto search;
 6693              		.loc 1 2659 7 is_stmt 0 view .LVU2003
 6694 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6695              	.LVL580:
2659:src/keys.c    **** 	   goto search;
 6696              		.loc 1 2659 7 view .LVU2004
 6697 0278 013D     		subs	r5, r5, #1
 6698 027a EDB2     		uxtb	r5, r5
2659:src/keys.c    **** 	   goto search;
 6699              		.loc 1 2659 6 view .LVU2005
ARM GAS  /tmp/ccwxoOej.s 			page 206


 6700 027c 3D77     		strb	r5, [r7, #28]
 6701 027e 002D     		cmp	r5, #0
 6702 0280 7FF4F3AE 		bne	.L639
 6703 0284 D9F80040 		ldr	r4, [r9]
 6704 0288 2AE7     		b	.L640
 6705              	.LVL581:
 6706              	.L727:
2676:src/keys.c    ****        goto set_pos;
 6707              		.loc 1 2676 3 is_stmt 1 view .LVU2006
 6708 028a 013D     		subs	r5, r5, #1
 6709              	.LVL582:
2677:src/keys.c    **** 
 6710              		.loc 1 2677 8 view .LVU2007
 6711 028c 1AE7     		b	.L642
 6712              	.LVL583:
 6713              	.L726:
2677:src/keys.c    **** 
 6714              		.loc 1 2677 8 is_stmt 0 view .LVU2008
 6715 028e FFF7FEFF 		bl	current_catalogue
 6716              	.LVL584:
2677:src/keys.c    **** 
 6717              		.loc 1 2677 8 view .LVU2009
 6718 0292 0446     		mov	r4, r0
 6719 0294 75E7     		b	.L632
 6720              	.LVL585:
 6721              	.L732:
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6722              		.loc 1 2724 19 discriminator 1 view .LVU2010
 6723 0296 BAF1130F 		cmp	r10, #19
 6724 029a D8D1     		bne	.L656
2725:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6725              		.loc 1 2725 8 is_stmt 1 view .LVU2011
 6726 029c 0020     		movs	r0, #0
 6727              	.LVL586:
2725:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6728              		.loc 1 2725 8 is_stmt 0 view .LVU2012
 6729 029e FFF7FEFF 		bl	init_cat
 6730              	.LVL587:
2726:src/keys.c    ****      }
 6731              		.loc 1 2726 8 is_stmt 1 view .LVU2013
2726:src/keys.c    ****      }
 6732              		.loc 1 2726 15 is_stmt 0 view .LVU2014
 6733 02a2 40F23D10 		movw	r0, #317
 6734 02a6 47E7     		b	.L621
 6735              	.L633:
 6736              	.LBB646:
2651:src/keys.c    **** 	 }
 6737              		.loc 1 2651 5 is_stmt 1 view .LVU2015
 6738              	.LBB629:
 6739              	.LBB630:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6740              		.loc 1 715 5 is_stmt 0 view .LVU2016
 6741 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6742 02ac 012B     		cmp	r3, #1
 6743              	.LBE630:
 6744              	.LBE629:
2651:src/keys.c    **** 	 }
ARM GAS  /tmp/ccwxoOej.s 			page 207


 6745              		.loc 1 2651 12 view .LVU2017
 6746 02ae 2046     		mov	r0, r4
 6747              	.LVL588:
 6748              	.LBB632:
 6749              	.LBI629:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6750              		.loc 1 714 12 is_stmt 1 view .LVU2018
 6751              	.LBB631:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6752              		.loc 1 715 2 view .LVU2019
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6753              		.loc 1 715 5 is_stmt 0 view .LVU2020
 6754 02b0 7FF442AF 		bne	.L621
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6755              		.loc 1 715 5 view .LVU2021
 6756 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6757              	.LVL589:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6758              		.loc 1 715 5 view .LVU2022
 6759 02b8 3EE7     		b	.L621
 6760              	.LVL590:
 6761              	.L634:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6762              		.loc 1 715 5 view .LVU2023
 6763              	.LBE631:
 6764              	.LBE632:
 6765              	.LBB633:
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6766              		.loc 1 2644 7 is_stmt 1 view .LVU2024
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6767              		.loc 1 2644 14 is_stmt 0 view .LVU2025
 6768 02ba 2046     		mov	r0, r4
 6769 02bc 3CE7     		b	.L621
 6770              	.LVL591:
 6771              	.L649:
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6772              		.loc 1 2644 14 view .LVU2026
 6773 02be 0C48     		ldr	r0, .L735+20
 6774              	.LBE633:
 6775              	.LBE646:
2622:src/keys.c    ****    int pos = State.catpos;
 6776              		.loc 1 2622 93 view .LVU2027
 6777 02c0 40F28522 		movw	r2, #645
 6778 02c4 0146     		mov	r1, r0
 6779 02c6 0023     		movs	r3, #0
 6780 02c8 01E0     		b	.L651
 6781              	.LVL592:
 6782              	.L734:
2622:src/keys.c    ****    int pos = State.catpos;
 6783              		.loc 1 2622 93 view .LVU2028
 6784 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6785              	.LVL593:
 6786              	.L651:
 6787              	.LBB647:
2714:src/keys.c    **** 	   return conv_mapping[i^1];
 6788              		.loc 1 2714 3 is_stmt 1 view .LVU2029
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
ARM GAS  /tmp/ccwxoOej.s 			page 208


 6789              		.loc 1 2713 72 view .LVU2030
2714:src/keys.c    **** 	   return conv_mapping[i^1];
 6790              		.loc 1 2714 6 is_stmt 0 view .LVU2031
 6791 02ce A242     		cmp	r2, r4
 6792 02d0 1ED0     		beq	.L733
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6793              		.loc 1 2713 72 discriminator 2 view .LVU2032
 6794 02d2 0133     		adds	r3, r3, #1
 6795              	.LVL594:
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6796              		.loc 1 2713 20 is_stmt 1 discriminator 2 view .LVU2033
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6797              		.loc 1 2713 8 is_stmt 0 discriminator 2 view .LVU2034
 6798 02d4 0C2B     		cmp	r3, #12
 6799 02d6 F8D1     		bne	.L734
 6800 02d8 2DE7     		b	.L719
 6801              	.L736:
 6802 02da 00BF     		.align	2
 6803              	.L735:
 6804 02dc 00000000 		.word	StateWhileOn
 6805 02e0 00000000 		.word	.LANCHOR8
 6806 02e4 00000000 		.word	.LANCHOR6
 6807 02e8 00000000 		.word	.LANCHOR15
 6808 02ec 00080800 		.word	526336
 6809 02f0 00000000 		.word	.LANCHOR14
 6810 02f4 00000000 		.word	main_ram
 6811 02f8 1F000000 		.word	StateWhileOn+31
 6812              	.LVL595:
 6813              	.L637:
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6814              		.loc 1 2713 8 discriminator 2 view .LVU2035
 6815              	.LBE647:
 6816              	.LBB648:
 6817              	.LBB634:
2648:src/keys.c    **** 	 }
 6818              		.loc 1 2648 7 is_stmt 1 view .LVU2036
 6819              	.LBB626:
 6820              	.LBI626:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6821              		.loc 1 552 13 view .LVU2037
 6822              	.LBB627:
 553:src/keys.c    **** 		return;
 6823              		.loc 1 553 2 view .LVU2038
 553:src/keys.c    **** 		return;
 6824              		.loc 1 553 6 is_stmt 0 view .LVU2039
 6825 02fc FFF7FEFF 		bl	is_bad_cmdline
 6826              	.LVL596:
 553:src/keys.c    **** 		return;
 6827              		.loc 1 553 5 view .LVU2040
 6828 0300 0028     		cmp	r0, #0
 6829 0302 7FF418AF 		bne	.L719
 6830 0306 2846     		mov	r0, r5
 6831 0308 FFF7FEFF 		bl	init_arg.part.0
 6832              	.LVL597:
 6833              	.LBE627:
 6834              	.LBE626:
 6835              	.LBE634:
ARM GAS  /tmp/ccwxoOej.s 			page 209


 6836              	.LBE648:
2655:src/keys.c    **** 
 6837              		.loc 1 2655 15 view .LVU2041
 6838 030c 3320     		movs	r0, #51
 6839 030e 13E7     		b	.L621
 6840              	.LVL598:
 6841              	.L733:
 6842              	.LBB649:
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6843              		.loc 1 2715 5 is_stmt 1 view .LVU2042
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6844              		.loc 1 2715 26 is_stmt 0 view .LVU2043
 6845 0310 83F00103 		eor	r3, r3, #1
 6846              	.LVL599:
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6847              		.loc 1 2715 24 view .LVU2044
 6848 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6849 0318 0EE7     		b	.L621
 6850              	.LBE649:
 6851              		.cfi_endproc
 6852              	.LFE48:
 6854              		.section	.text.find_pos,"ax",%progbits
 6855              		.align	1
 6856              		.p2align 2,,3
 6857              		.global	find_pos
 6858              		.syntax unified
 6859              		.thumb
 6860              		.thumb_func
 6861              		.fpu fpv4-sp-d16
 6863              	find_pos:
 6864              	.LVL600:
 6865              	.LFB49:
2775:src/keys.c    **** 	int pos;
 6866              		.loc 1 2775 32 is_stmt 1 view -0
 6867              		.cfi_startproc
 6868              		@ args = 0, pretend = 0, frame = 16
 6869              		@ frame_needed = 0, uses_anonymous_args = 0
2776:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6870              		.loc 1 2776 2 view .LVU2046
2777:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6871              		.loc 1 2777 2 view .LVU2047
 6872              	.LBB650:
 6873              	.LBI650:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 6874              		.loc 1 2477 5 view .LVU2048
 6875              	.LBB651:
2480:src/keys.c    **** 	{
 6876              		.loc 1 2480 2 view .LVU2049
2511:src/keys.c    **** #endif
 6877              		.loc 1 2511 2 view .LVU2050
 6878              	.LBE651:
 6879              	.LBE650:
2775:src/keys.c    **** 	int pos;
 6880              		.loc 1 2775 32 is_stmt 0 view .LVU2051
 6881 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6882              		.cfi_def_cfa_offset 32
 6883              		.cfi_offset 4, -32
ARM GAS  /tmp/ccwxoOej.s 			page 210


 6884              		.cfi_offset 5, -28
 6885              		.cfi_offset 6, -24
 6886              		.cfi_offset 7, -20
 6887              		.cfi_offset 8, -16
 6888              		.cfi_offset 9, -12
 6889              		.cfi_offset 10, -8
 6890              		.cfi_offset 14, -4
 6891              	.LBB653:
 6892              	.LBB652:
2511:src/keys.c    **** #endif
 6893              		.loc 1 2511 31 view .LVU2052
 6894 0004 1E4B     		ldr	r3, .L754
2511:src/keys.c    **** #endif
 6895              		.loc 1 2511 24 view .LVU2053
 6896 0006 1F4A     		ldr	r2, .L754+4
2511:src/keys.c    **** #endif
 6897              		.loc 1 2511 31 view .LVU2054
 6898 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2511:src/keys.c    **** #endif
 6899              		.loc 1 2511 24 view .LVU2055
 6900 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6901              	.LVL601:
2511:src/keys.c    **** #endif
 6902              		.loc 1 2511 24 view .LVU2056
 6903              	.LBE652:
 6904              	.LBE653:
2778:src/keys.c    **** 		char buf[16];
 6905              		.loc 1 2778 2 is_stmt 1 view .LVU2057
2778:src/keys.c    **** 		char buf[16];
 6906              		.loc 1 2778 16 view .LVU2058
2775:src/keys.c    **** 	int pos;
 6907              		.loc 1 2775 32 is_stmt 0 view .LVU2059
 6908 000e 84B0     		sub	sp, sp, #16
 6909              		.cfi_def_cfa_offset 48
2778:src/keys.c    **** 		char buf[16];
 6910              		.loc 1 2778 2 view .LVU2060
 6911 0010 BAF1000F 		cmp	r10, #0
 6912 0014 32D0     		beq	.L744
 6913 0016 8146     		mov	r9, r0
2778:src/keys.c    **** 		char buf[16];
 6914              		.loc 1 2778 11 view .LVU2061
 6915 0018 4FF00008 		mov	r8, #0
 6916 001c C0F10107 		rsb	r7, r0, #1
 6917              	.LVL602:
 6918              	.L743:
 6919              	.LBB654:
2779:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6920              		.loc 1 2779 3 is_stmt 1 view .LVU2062
2780:src/keys.c    **** 		int i;
 6921              		.loc 1 2780 3 view .LVU2063
2780:src/keys.c    **** 		int i;
 6922              		.loc 1 2780 21 is_stmt 0 view .LVU2064
 6923 0020 4046     		mov	r0, r8
 6924 0022 FFF7FEFF 		bl	current_catalogue
 6925              	.LVL603:
 6926 0026 6946     		mov	r1, sp
 6927 0028 FFF7FEFF 		bl	catcmd
ARM GAS  /tmp/ccwxoOej.s 			page 211


 6928              	.LVL604:
 6929 002c 0646     		mov	r6, r0
 6930              	.LVL605:
2781:src/keys.c    **** 
 6931              		.loc 1 2781 3 is_stmt 1 view .LVU2065
2783:src/keys.c    **** 			cmd++;
 6932              		.loc 1 2783 3 view .LVU2066
2784:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6933              		.loc 1 2784 4 view .LVU2067
2783:src/keys.c    **** 			cmd++;
 6934              		.loc 1 2783 7 is_stmt 0 view .LVU2068
 6935 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6936              	.LVL606:
2783:src/keys.c    **** 			cmd++;
 6937              		.loc 1 2783 6 view .LVU2069
 6938 0030 1428     		cmp	r0, #20
 6939 0032 04BF     		itt	eq
 6940 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2784:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6941              		.loc 1 2784 7 view .LVU2070
 6942 0036 0136     		addeq	r6, r6, #1
 6943              	.LVL607:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6944              		.loc 1 2785 3 is_stmt 1 view .LVU2071
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6945              		.loc 1 2785 13 view .LVU2072
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6946              		.loc 1 2785 3 is_stmt 0 view .LVU2073
 6947 0038 A8B1     		cbz	r0, .L745
 6948 003a 09F1FF33 		add	r3, r9, #-1
 6949 003e 04E0     		b	.L742
 6950              	.LVL608:
 6951              	.L753:
 6952              	.LBB655:
2790:src/keys.c    **** 				break;
 6953              		.loc 1 2790 12 view .LVU2074
 6954 0040 12DB     		blt	.L740
 6955              	.LBE655:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6956              		.loc 1 2785 16 discriminator 2 view .LVU2075
 6957 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6958              	.LVL609:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6959              		.loc 1 2785 16 discriminator 2 view .LVU2076
 6960 0046 3C44     		add	r4, r4, r7
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6961              		.loc 1 2785 3 discriminator 2 view .LVU2077
 6962 0048 B0B1     		cbz	r0, .L752
 6963              	.LVL610:
 6964              	.L742:
 6965              	.LBB656:
2786:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6966              		.loc 1 2786 4 is_stmt 1 view .LVU2078
 6967 004a 5C1C     		adds	r4, r3, #1
2786:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6968              		.loc 1 2786 18 is_stmt 0 view .LVU2079
 6969 004c FFF7FEFF 		bl	remap_chars
ARM GAS  /tmp/ccwxoOej.s 			page 212


 6970              	.LVL611:
 6971 0050 0546     		mov	r5, r0
2787:src/keys.c    **** 			if (c > cl)
 6972              		.loc 1 2787 19 view .LVU2080
 6973 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6974              	.LVL612:
2787:src/keys.c    **** 			if (c > cl)
 6975              		.loc 1 2787 4 is_stmt 1 view .LVU2081
2787:src/keys.c    **** 			if (c > cl)
 6976              		.loc 1 2787 19 is_stmt 0 view .LVU2082
 6977 0054 FFF7FEFF 		bl	remap_chars
 6978              	.LVL613:
2790:src/keys.c    **** 				break;
 6979              		.loc 1 2790 9 is_stmt 1 view .LVU2083
 6980              	.LBE656:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6981              		.loc 1 2785 29 view .LVU2084
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6982              		.loc 1 2785 13 view .LVU2085
 6983              	.LBB657:
2788:src/keys.c    **** 				return pos;
 6984              		.loc 1 2788 4 view .LVU2086
2788:src/keys.c    **** 				return pos;
 6985              		.loc 1 2788 7 is_stmt 0 view .LVU2087
 6986 0058 8542     		cmp	r5, r0
 6987 005a 2346     		mov	r3, r4
 6988 005c F0DD     		ble	.L753
 6989              	.LVL614:
 6990              	.L737:
2788:src/keys.c    **** 				return pos;
 6991              		.loc 1 2788 7 view .LVU2088
 6992              	.LBE657:
 6993              	.LBE654:
2797:src/keys.c    **** 
 6994              		.loc 1 2797 1 view .LVU2089
 6995 005e 4046     		mov	r0, r8
 6996 0060 04B0     		add	sp, sp, #16
 6997              		.cfi_remember_state
 6998              		.cfi_def_cfa_offset 32
 6999              		@ sp needed
 7000 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7001              	.LVL615:
 7002              	.L745:
 7003              		.cfi_restore_state
 7004              	.LBB658:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7005              		.loc 1 2785 3 view .LVU2090
 7006 0066 4C46     		mov	r4, r9
 7007              	.LVL616:
 7008              	.L740:
2793:src/keys.c    **** 			return pos;
 7009              		.loc 1 2793 3 is_stmt 1 view .LVU2091
2793:src/keys.c    **** 			return pos;
 7010              		.loc 1 2793 6 is_stmt 0 view .LVU2092
 7011 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7012 006a 002B     		cmp	r3, #0
 7013 006c F7D0     		beq	.L737
ARM GAS  /tmp/ccwxoOej.s 			page 213


 7014              	.LBE658:
2778:src/keys.c    **** 		char buf[16];
 7015              		.loc 1 2778 29 is_stmt 1 view .LVU2093
 7016 006e 08F10108 		add	r8, r8, #1
 7017              	.LVL617:
2778:src/keys.c    **** 		char buf[16];
 7018              		.loc 1 2778 16 view .LVU2094
2778:src/keys.c    **** 		char buf[16];
 7019              		.loc 1 2778 2 is_stmt 0 view .LVU2095
 7020 0072 D045     		cmp	r8, r10
 7021 0074 D4D1     		bne	.L743
 7022 0076 F2E7     		b	.L737
 7023              	.LVL618:
 7024              	.L752:
2778:src/keys.c    **** 		char buf[16];
 7025              		.loc 1 2778 2 view .LVU2096
 7026 0078 4C44     		add	r4, r4, r9
 7027 007a F5E7     		b	.L740
 7028              	.LVL619:
 7029              	.L744:
2778:src/keys.c    **** 		char buf[16];
 7030              		.loc 1 2778 11 view .LVU2097
 7031 007c D046     		mov	r8, r10
 7032 007e EEE7     		b	.L737
 7033              	.L755:
 7034              		.align	2
 7035              	.L754:
 7036 0080 00000000 		.word	StateWhileOn
 7037 0084 00000000 		.word	.LANCHOR8
 7038              		.cfi_endproc
 7039              	.LFE49:
 7041              		.section	.text.get_alpha_state,"ax",%progbits
 7042              		.align	1
 7043              		.p2align 2,,3
 7044              		.global	get_alpha_state
 7045              		.syntax unified
 7046              		.thumb
 7047              		.thumb_func
 7048              		.fpu fpv4-sp-d16
 7050              	get_alpha_state:
 7051              	.LFB61:
3122:src/keys.c    **** 
3123:src/keys.c    **** 
3124:src/keys.c    **** static int process_registerlist(const keycode c) {
3125:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3126:src/keys.c    **** 	enum shifts shift = reset_shift();
3127:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3128:src/keys.c    **** 	const int g_max = global_regs();
3129:src/keys.c    **** 
3130:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3131:src/keys.c    **** 		if (local_regs())
3132:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3134:src/keys.c    **** 		goto reset_window;
3135:src/keys.c    **** 	}
3136:src/keys.c    **** 	else if (n <= 9) {
3137:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
ARM GAS  /tmp/ccwxoOej.s 			page 214


3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3139:src/keys.c    **** 			dv = n;
3140:src/keys.c    **** 		State2.digval = dv;
3141:src/keys.c    **** 		goto reset_window;
3142:src/keys.c    **** 	}
3143:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3144:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3145:src/keys.c    **** 		set_smode(SDISP_SHOW);
3146:src/keys.c    **** 	}
3147:src/keys.c    **** 	else if (n != NO_REG) {
3148:src/keys.c    **** 		State2.digval = n;
3149:src/keys.c    **** 		goto reset_window;
3150:src/keys.c    **** 	}
3151:src/keys.c    **** 
3152:src/keys.c    **** 	switch (c) {
3153:src/keys.c    **** 	case K_DOWN:
3154:src/keys.c    **** 		if (State2.digval > 0) {
3155:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3156:src/keys.c    **** 				State2.digval = global_regs();
3157:src/keys.c    **** 			--State2.digval;
3158:src/keys.c    **** 		}
3159:src/keys.c    **** 		else
3160:src/keys.c    **** 			State2.digval = max - 1;
3161:src/keys.c    **** 		goto reset_window;
3162:src/keys.c    **** 
3163:src/keys.c    **** 	case K_UP:
3164:src/keys.c    **** 		if (State2.digval < max - 1) {
3165:src/keys.c    **** 			State2.digval++;
3166:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3167:src/keys.c    **** 				State2.digval = regX_idx;
3168:src/keys.c    **** 		}
3169:src/keys.c    **** 		else	
3170:src/keys.c    **** 			State2.digval = 0;
3171:src/keys.c    **** 		goto reset_window;
3172:src/keys.c    **** 
3173:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3174:src/keys.c    **** 	case K04:
3175:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3176:src/keys.c    **** 		goto reset_window;
3177:src/keys.c    **** #endif
3178:src/keys.c    **** 
3179:src/keys.c    **** 	case K24:			
3180:src/keys.c    **** 	//case K60:
3181:src/keys.c    **** 		if (State2.disp_temp)
3182:src/keys.c    **** 			return STATE_UNFINISHED;
3183:src/keys.c    **** 		break;		// Exit doing nothing
3184:src/keys.c    **** 
3185:src/keys.c    **** 	case K20:		// ENTER
3186:src/keys.c    **** 		if (shift == SHIFT_F) {
3187:src/keys.c    **** 			State2.disp_as_alpha = 1;
3188:src/keys.c    **** 			goto reset_window;
3189:src/keys.c    **** 		}
3190:src/keys.c    **** 	case K11:		// RCL
3191:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3192:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3193:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
3194:src/keys.c    **** #else
ARM GAS  /tmp/ccwxoOej.s 			page 215


3195:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3196:src/keys.c    **** #endif
3197:src/keys.c    **** 			State2.registerlist = 0;
3198:src/keys.c    **** 			State2.digval = 0;
3199:src/keys.c    **** 			State2.digval2 = 0;
3200:src/keys.c    **** 			return n;
3201:src/keys.c    **** 		}
3202:src/keys.c    **** 	default:
3203:src/keys.c    **** 		return STATE_UNFINISHED;
3204:src/keys.c    **** 	}
3205:src/keys.c    **** 	State2.registerlist = 0;
3206:src/keys.c    **** 	State2.digval = 0;
3207:src/keys.c    **** 	State2.digval2 = 0;
3208:src/keys.c    **** reset_window:
3209:src/keys.c    **** 	State2.window = 0;
3210:src/keys.c    **** 	return STATE_UNFINISHED;
3211:src/keys.c    **** }
3212:src/keys.c    **** 
3213:src/keys.c    **** 
3214:src/keys.c    **** static int process(const int c) {
3215:src/keys.c    ****   const enum shifts shift = cur_shift();
3216:src/keys.c    ****   enum catalogues cat;
3217:src/keys.c    **** 
3218:src/keys.c    ****   if (Running || Pause) {
3219:src/keys.c    ****     /*
3220:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3221:src/keys.c    ****      */
3222:src/keys.c    ****     if (c == K60 || c == K63) {
3223:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3224:src/keys.c    **** 	set_pc(0);
3225:src/keys.c    ****       Pause = 0;
3226:src/keys.c    ****       xeq_xrom();
3227:src/keys.c    ****       set_running_off();
3228:src/keys.c    ****       DispMsg = "Stopped";
3229:src/keys.c    ****       State2.disp_freeze = 0;
3230:src/keys.c    ****       return STATE_UNFINISHED;
3231:src/keys.c    ****     }
3232:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3233:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3234:src/keys.c    ****       Pause = 0;			// leave PSE statement
3235:src/keys.c    ****       GoFast = 1;
3236:src/keys.c    ****     }
3237:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3238:src/keys.c    ****     return STATE_RUNNING;
3239:src/keys.c    ****   }
3240:src/keys.c    **** 
3241:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3242:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3243:src/keys.c    ****    * if required.
3244:src/keys.c    ****    */
3245:src/keys.c    **** #ifdef DM42
3246:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3247:src/keys.c    **** #else
3248:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3249:src/keys.c    **** #endif
3250:src/keys.c    ****     {
3251:src/keys.c    **** #ifdef INCLUDE_C_LOCK
ARM GAS  /tmp/ccwxoOej.s 			page 216


3252:src/keys.c    ****       if (C_LOCKED) {
3253:src/keys.c    **** 	stack_restore();
3254:src/keys.c    **** 	CLEAR_REAL;
3255:src/keys.c    **** 	CLEAR_IMAG;
3256:src/keys.c    ****       }
3257:src/keys.c    **** #endif
3258:src/keys.c    ****       soft_init_state();
3259:src/keys.c    ****       return STATE_UNFINISHED;
3260:src/keys.c    ****     }
3261:src/keys.c    **** 
3262:src/keys.c    **** #ifndef CONSOLE
3263:src/keys.c    **** 	if (c == K63 && JustStopped) {
3264:src/keys.c    **** 		// Avoid an accidental restart with R/S
3265:src/keys.c    **** 		JustStopped = 0;
3266:src/keys.c    **** 		return STATE_IGNORE;
3267:src/keys.c    **** 	}
3268:src/keys.c    **** #endif
3269:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3270:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3271:src/keys.c    **** 	 */
3272:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3273:src/keys.c    **** 		CmdLineLength = 0;
3274:src/keys.c    **** 	/*
3275:src/keys.c    **** 	 *  Process the various cases
3276:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3277:src/keys.c    **** 	 */
3278:src/keys.c    **** 	if (State2.confirm)
3279:src/keys.c    **** 		return process_confirm((const keycode)c);
3280:src/keys.c    **** 
3281:src/keys.c    **** 	if (State2.rarg)
3282:src/keys.c    **** 		return process_arg((const keycode)c);
3283:src/keys.c    **** 
3284:src/keys.c    **** 	if (State2.gtodot)
3285:src/keys.c    **** 		return process_gtodot((const keycode)c);
3286:src/keys.c    **** 
3287:src/keys.c    **** 	if (State2.hyp)
3288:src/keys.c    **** 		return process_hyp((const keycode)c);
3289:src/keys.c    **** 
3290:src/keys.c    **** 	if (State2.test != TST_NONE)
3291:src/keys.c    **** 		return process_test((const keycode)c);
3292:src/keys.c    **** 
3293:src/keys.c    **** 	if (State2.status)
3294:src/keys.c    **** 		return process_status((const keycode)c);
3295:src/keys.c    **** 
3296:src/keys.c    **** 	/*
3297:src/keys.c    **** 	 *  Process shift keys directly
3298:src/keys.c    **** 	 */
3299:src/keys.c    **** 	if (c == K_F) {
3300:src/keys.c    **** 		toggle_shift(SHIFT_F);
3301:src/keys.c    **** 		return STATE_UNFINISHED;
3302:src/keys.c    **** 	}
3303:src/keys.c    **** 	if (c == K_G) {
3304:src/keys.c    **** 		toggle_shift(SHIFT_G);
3305:src/keys.c    **** 		return STATE_UNFINISHED;
3306:src/keys.c    **** 	}
3307:src/keys.c    **** 	if (c == K_H) {
3308:src/keys.c    **** 		toggle_shift(SHIFT_H);
ARM GAS  /tmp/ccwxoOej.s 			page 217


3309:src/keys.c    **** 		State2.arrow = 0;
3310:src/keys.c    **** 		return STATE_UNFINISHED;
3311:src/keys.c    **** 	}
3312:src/keys.c    **** 	/*
3313:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3314:src/keys.c    **** 	 */
3315:src/keys.c    **** 	// print_debug (2, c);
3316:src/keys.c    **** 	if (State2.arrow)
3317:src/keys.c    **** 		return process_arrow((const keycode)c);
3318:src/keys.c    **** 
3319:src/keys.c    **** 	/*
3320:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3321:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3322:src/keys.c    **** 	 * works and were not
3323:src/keys.c    **** 	 */
3324:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3325:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3326:src/keys.c    **** 		if (is_bad_cmdline())
3327:src/keys.c    **** 			return STATE_UNFINISHED;
3328:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3329:src/keys.c    **** 		init_cat( cat );
3330:src/keys.c    **** 		return STATE_UNFINISHED;
3331:src/keys.c    **** 	}
3332:src/keys.c    **** 
3333:src/keys.c    **** 	/*
3334:src/keys.c    **** 	 *  More handlers...
3335:src/keys.c    **** 	 */
3336:src/keys.c    **** 	if (State2.multi)
3337:src/keys.c    **** 		return process_multi((const keycode)c);
3338:src/keys.c    **** 
3339:src/keys.c    **** 	if (State2.labellist)
3340:src/keys.c    **** 		return process_labellist((const keycode)c);
3341:src/keys.c    **** 
3342:src/keys.c    **** 	if (State2.registerlist)
3343:src/keys.c    **** 		return process_registerlist((const keycode)c);
3344:src/keys.c    **** 
3345:src/keys.c    **** 	if (State2.catalogue)
3346:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3347:src/keys.c    **** 
3348:src/keys.c    **** 	if (State2.alphas) {
3349:src/keys.c    **** #ifndef INFRARED
3350:src/keys.c    **** 		return process_alpha((const keycode)c);
3351:src/keys.c    **** #else
3352:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3353:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3354:src/keys.c    **** 			print_tab(0);
3355:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3356:src/keys.c    **** 		}
3357:src/keys.c    **** 		return i;
3358:src/keys.c    **** #endif
3359:src/keys.c    **** 	}
3360:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3361:src/keys.c    **** 	if (C_LOCKED) {
3362:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3363:src/keys.c    **** 	}
3364:src/keys.c    **** #endif
3365:src/keys.c    **** 	if (State2.cmplx) {
ARM GAS  /tmp/ccwxoOej.s 			page 218


3366:src/keys.c    **** 		return process_cmplx((const keycode)c);
3367:src/keys.c    **** 	} else {
3368:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3369:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3370:src/keys.c    **** 		if (shift == SHIFT_H)
3371:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3372:src/keys.c    **** 		// print_debug (3, c);
3373:src/keys.c    **** 		return process_normal((const keycode)c);
3374:src/keys.c    **** 	}
3375:src/keys.c    **** }
3376:src/keys.c    **** 
3377:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 7052              		.loc 1 3377 40 is_stmt 1 view -0
 7053              		.cfi_startproc
 7054              		@ args = 0, pretend = 0, frame = 0
 7055              		@ frame_needed = 0, uses_anonymous_args = 0
 7056              		@ link register save eliminated.
3378:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 7057              		.loc 1 3378 4 view .LVU2099
 7058              		.loc 1 3378 53 is_stmt 0 view .LVU2100
 7059 0000 074B     		ldr	r3, .L761
 7060              		.loc 1 3378 44 view .LVU2101
 7061 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 7062 0004 1AB9     		cbnz	r2, .L759
3379:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3380:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 7063              		.loc 1 3380 5 discriminator 2 view .LVU2102
 7064 0006 5969     		ldr	r1, [r3, #20]
 7065 0008 064A     		ldr	r2, .L761+4
 7066 000a 0A40     		ands	r2, r2, r1
 7067 000c 0AB1     		cbz	r2, .L760
 7068              	.L759:
 7069 000e 0120     		movs	r0, #1
3381:src/keys.c    ****  }
 7070              		.loc 1 3381 2 view .LVU2103
 7071 0010 7047     		bx	lr
 7072              	.L760:
3380:src/keys.c    ****  }
 7073              		.loc 1 3380 42 discriminator 3 view .LVU2104
 7074 0012 D889     		ldrh	r0, [r3, #14]
 7075 0014 B0F5E060 		subs	r0, r0, #1792
 7076 0018 18BF     		it	ne
 7077 001a 0120     		movne	r0, #1
 7078 001c 7047     		bx	lr
 7079              	.L762:
 7080 001e 00BF     		.align	2
 7081              	.L761:
 7082 0020 00000000 		.word	StateWhileOn
 7083 0024 0709280C 		.word	203950343
 7084              		.cfi_endproc
 7085              	.LFE61:
 7087              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 7088              		.align	2
 7089              	.LC0:
 7090 0000 52554E00 		.ascii	"RUN\000"
 7091              		.align	2
 7092              	.LC1:
ARM GAS  /tmp/ccwxoOej.s 			page 219


 7093 0004 4E554C4C 		.ascii	"NULL\000"
 7093      00
 7094 0009 000000   		.align	2
 7095              	.LC2:
 7096 000c 53746F70 		.ascii	"Stopped\000"
 7096      70656400 
 7097              		.section	.text.process_keycode,"ax",%progbits
 7098              		.align	1
 7099              		.p2align 2,,3
 7100              		.global	process_keycode
 7101              		.syntax unified
 7102              		.thumb
 7103              		.thumb_func
 7104              		.fpu fpv4-sp-d16
 7106              	process_keycode:
 7107              	.LVL620:
 7108              	.LFB63:
3382:src/keys.c    **** 
3383:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3384:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3385:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3386:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3387:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3388:src/keys.c    ****        // Was error just wait for confirmation
3389:src/keys.c    ****        wait_for_key_press();
3390:src/keys.c    ****      }
3391:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3392:src/keys.c    ****      return;
3393:src/keys.c    ****    }
3394:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3395:src/keys.c    ****      nd_opcode = remapped.shift;
3396:src/keys.c    ****      set_shift(SHIFT_N);
3397:src/keys.c    ****    }
3398:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3399:src/keys.c    ****    process_keycode ( remapped.key_34s );
3400:src/keys.c    ****  }
3401:src/keys.c    ****  
3402:src/keys.c    **** /*
3403:src/keys.c    ****  *  Fed with key codes by the event loop
3404:src/keys.c    ****  */
3405:src/keys.c    **** void process_keycode(int c)
3406:src/keys.c    **** {
 7109              		.loc 1 3406 1 is_stmt 1 view -0
 7110              		.cfi_startproc
 7111              		@ args = 0, pretend = 0, frame = 8
 7112              		@ frame_needed = 0, uses_anonymous_args = 0
3407:src/keys.c    ****   static int was_paused;
 7113              		.loc 1 3407 3 view .LVU2106
3408:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3409:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7114              		.loc 1 3409 3 view .LVU2107
3410:src/keys.c    ****   //print_debug(60,c);
3411:src/keys.c    ****   if (was_paused && Pause == 0)
 7115              		.loc 1 3411 3 view .LVU2108
3406:src/keys.c    ****   static int was_paused;
 7116              		.loc 1 3406 1 is_stmt 0 view .LVU2109
 7117 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  /tmp/ccwxoOej.s 			page 220


 7118              		.cfi_def_cfa_offset 36
 7119              		.cfi_offset 4, -36
 7120              		.cfi_offset 5, -32
 7121              		.cfi_offset 6, -28
 7122              		.cfi_offset 7, -24
 7123              		.cfi_offset 8, -20
 7124              		.cfi_offset 9, -16
 7125              		.cfi_offset 10, -12
 7126              		.cfi_offset 11, -8
 7127              		.cfi_offset 14, -4
 7128              		.loc 1 3411 7 view .LVU2110
 7129 0004 B54D     		ldr	r5, .L1419
 7130              		.loc 1 3411 27 view .LVU2111
 7131 0006 B64F     		ldr	r7, .L1419+4
 7132              		.loc 1 3411 6 view .LVU2112
 7133 0008 2B68     		ldr	r3, [r5]
3406:src/keys.c    ****   static int was_paused;
 7134              		.loc 1 3406 1 view .LVU2113
 7135 000a 83B0     		sub	sp, sp, #12
 7136              		.cfi_def_cfa_offset 48
3406:src/keys.c    ****   static int was_paused;
 7137              		.loc 1 3406 1 view .LVU2114
 7138 000c 0446     		mov	r4, r0
 7139              		.loc 1 3411 6 view .LVU2115
 7140 000e 1BB1     		cbz	r3, .L764
 7141              		.loc 1 3411 27 discriminator 1 view .LVU2116
 7142 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7143              		.loc 1 3411 18 discriminator 1 view .LVU2117
 7144 0012 002B     		cmp	r3, #0
 7145 0014 00F0DD81 		beq	.L1324
 7146              	.LVL621:
 7147              	.L764:
3412:src/keys.c    ****     {
3413:src/keys.c    ****     /*
3414:src/keys.c    ****      *  Continue XROM execution after a pause
3415:src/keys.c    ****      */
3416:src/keys.c    ****       xeq_xrom();
3417:src/keys.c    ****     }
3418:src/keys.c    ****   was_paused = Pause;
 7148              		.loc 1 3418 3 is_stmt 1 view .LVU2118
 7149              		.loc 1 3418 14 is_stmt 0 view .LVU2119
 7150 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7151 001a 2B60     		str	r3, [r5]
3419:src/keys.c    ****   if (c == K_NOP)
 7152              		.loc 1 3419 3 is_stmt 1 view .LVU2120
 7153              		.loc 1 3419 6 is_stmt 0 view .LVU2121
 7154 001c 2E2C     		cmp	r4, #46
 7155 001e 00F09981 		beq	.L1325
3420:src/keys.c    ****     {
3421:src/keys.c    ****       OpCode = 0;
3422:src/keys.c    ****     }
3423:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7156              		.loc 1 3423 8 is_stmt 1 view .LVU2122
 7157              		.loc 1 3423 11 is_stmt 0 view .LVU2123
 7158 0022 622C     		cmp	r4, #98
 7159 0024 6FD0     		beq	.L1326
3424:src/keys.c    ****     {
ARM GAS  /tmp/ccwxoOej.s 			page 221


3425:src/keys.c    ****     /*
3426:src/keys.c    ****      *  Heartbeat processing goes here.
3427:src/keys.c    ****      *  This is totally thread safe!
3428:src/keys.c    ****      */
3429:src/keys.c    ****     if (Keyticks >= 2) {
3430:src/keys.c    ****       /*
3431:src/keys.c    ****        *  Some time has passed after last key press
3432:src/keys.c    ****        */
3433:src/keys.c    ****       if (OpCode != 0) {
3434:src/keys.c    **** 	/*
3435:src/keys.c    **** 	 *  Handle command display and NULL here
3436:src/keys.c    **** 	 */
3437:src/keys.c    **** 	if (OpCodeDisplayPending) {
3438:src/keys.c    **** 	  /*
3439:src/keys.c    **** 	   *  Show command to the user
3440:src/keys.c    **** 	   */
3441:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3442:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3443:src/keys.c    **** 	    DispMsg = "RUN";
3444:src/keys.c    **** 	  }
3445:src/keys.c    **** 	  else {
3446:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3447:src/keys.c    **** 	    DispMsg = TraceBuffer;
3448:src/keys.c    **** 	  }
3449:src/keys.c    **** 	  display();
3450:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3451:src/keys.c    **** 	}
3452:src/keys.c    ****     else if (Keyticks > 12) {
3453:src/keys.c    **** 	  /*
3454:src/keys.c    **** 	   *  Key is too long held down
3455:src/keys.c    **** 	   */
3456:src/keys.c    **** 	  OpCode = 0;
3457:src/keys.c    **** 	  message("NULL", CNULL);
3458:src/keys.c    **** 	  // Force display update on key-up
3459:src/keys.c    **** 	  State2.disp_temp = 0;
3460:src/keys.c    **** 	}
3461:src/keys.c    ****       }
3462:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3463:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3464:src/keys.c    **** 	State2.shifts = SHIFT_N;
3465:src/keys.c    ****       }
3466:src/keys.c    ****     }
3467:src/keys.c    **** 
3468:src/keys.c    ****     /*
3469:src/keys.c    ****      *  Serve the watchdog
3470:src/keys.c    ****      */
3471:src/keys.c    ****     watchdog();
3472:src/keys.c    **** 
3473:src/keys.c    **** #ifndef CONSOLE
3474:src/keys.c    ****     /*
3475:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3476:src/keys.c    ****      */
3477:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3478:src/keys.c    ****       JustStopped = 0;
3479:src/keys.c    ****     }
3480:src/keys.c    **** #endif
3481:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 222


3482:src/keys.c    ****     /*
3483:src/keys.c    ****      *  Do nothing if not running a program
3484:src/keys.c    ****      */
3485:src/keys.c    ****     if (!Running && ! Pause)
3486:src/keys.c    ****       return;
3487:src/keys.c    ****   }
3488:src/keys.c    ****   else {
3489:src/keys.c    ****     /*
3490:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3491:src/keys.c    ****      */
3492:src/keys.c    ****     xeq_init_contexts();
 7160              		.loc 1 3492 5 is_stmt 1 view .LVU2124
3493:src/keys.c    ****     State2.wascomplex = 0;
 7161              		.loc 1 3493 23 is_stmt 0 view .LVU2125
 7162 0026 DFF8D482 		ldr	r8, .L1419+32
3492:src/keys.c    ****     State2.wascomplex = 0;
 7163              		.loc 1 3492 5 view .LVU2126
 7164 002a FFF7FEFF 		bl	xeq_init_contexts
 7165              	.LVL622:
 7166              		.loc 1 3493 5 is_stmt 1 view .LVU2127
 7167              		.loc 1 3493 23 is_stmt 0 view .LVU2128
 7168 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3494:src/keys.c    **** 
3495:src/keys.c    ****     if (is_dot(RPN)) {
 7169              		.loc 1 3495 9 view .LVU2129
 7170 0032 8D20     		movs	r0, #141
3493:src/keys.c    **** 
 7171              		.loc 1 3493 23 view .LVU2130
 7172 0034 6FF38713 		bfc	r3, #6, #2
 7173 0038 88F81430 		strb	r3, [r8, #20]
 7174              		.loc 1 3495 5 is_stmt 1 view .LVU2131
 7175              		.loc 1 3495 9 is_stmt 0 view .LVU2132
 7176 003c FFF7FEFF 		bl	is_dot
 7177              	.LVL623:
 7178              		.loc 1 3495 8 view .LVU2133
 7179 0040 0028     		cmp	r0, #0
 7180 0042 40F09782 		bne	.L1327
 7181              	.L782:
3496:src/keys.c    ****       /*
3497:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3498:src/keys.c    ****        */
3499:src/keys.c    ****       clr_dot(RPN);
3500:src/keys.c    ****       finish_RPN(); // RPN
3501:src/keys.c    ****     }
3502:src/keys.c    **** 
3503:src/keys.c    **** #ifndef CONSOLE
3504:src/keys.c    ****     /*
3505:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3506:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3507:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3508:src/keys.c    ****      *  an accidental restart of the program.
3509:src/keys.c    ****      */
3510:src/keys.c    ****     if (c != K63)
 7182              		.loc 1 3510 5 is_stmt 1 view .LVU2134
 7183              		.loc 1 3510 8 is_stmt 0 view .LVU2135
 7184 0046 272C     		cmp	r4, #39
 7185 0048 00F09182 		beq	.L1328
ARM GAS  /tmp/ccwxoOej.s 			page 223


3511:src/keys.c    ****       JustStopped = 0;
 7186              		.loc 1 3511 7 is_stmt 1 view .LVU2136
 7187              		.loc 1 3511 19 is_stmt 0 view .LVU2137
 7188 004c A54B     		ldr	r3, .L1419+8
 7189 004e 0020     		movs	r0, #0
3512:src/keys.c    **** #endif
3513:src/keys.c    ****   }
3514:src/keys.c    **** 
3515:src/keys.c    ****   /*
3516:src/keys.c    ****    *  Handle key release
3517:src/keys.c    ****    */
3518:src/keys.c    ****   if (c == K_RELEASE)
 7190              		.loc 1 3518 6 view .LVU2138
 7191 0050 632C     		cmp	r4, #99
3511:src/keys.c    ****       JustStopped = 0;
 7192              		.loc 1 3511 19 view .LVU2139
 7193 0052 1860     		str	r0, [r3]
 7194              		.loc 1 3518 3 is_stmt 1 view .LVU2140
 7195              		.loc 1 3518 6 is_stmt 0 view .LVU2141
 7196 0054 40F08D81 		bne	.L784
3519:src/keys.c    ****     {
3520:src/keys.c    ****       //      print_debug (80,c);
3521:src/keys.c    ****     if (OpCode != 0) {
 7197              		.loc 1 3521 5 is_stmt 1 view .LVU2142
 7198              		.loc 1 3521 16 is_stmt 0 view .LVU2143
 7199 0058 A34B     		ldr	r3, .L1419+12
 7200 005a 1D68     		ldr	r5, [r3]
 7201              		.loc 1 3521 8 view .LVU2144
 7202 005c 002D     		cmp	r5, #0
 7203 005e 00F09482 		beq	.L785
3522:src/keys.c    ****       /*
3523:src/keys.c    ****        * Execute the key on release
3524:src/keys.c    ****        */
3525:src/keys.c    ****       GoFast = 1;
 7204              		.loc 1 3525 7 is_stmt 1 view .LVU2145
 7205              		.loc 1 3525 14 is_stmt 0 view .LVU2146
 7206 0062 A24A     		ldr	r2, .L1419+16
3526:src/keys.c    ****       c = OpCode;
3527:src/keys.c    ****       //      print_debug(81,c);
3528:src/keys.c    ****       OpCode = 0;
 7207              		.loc 1 3528 14 view .LVU2147
 7208 0064 1860     		str	r0, [r3]
3529:src/keys.c    **** 
3530:src/keys.c    ****       if (c == STATE_SST)
 7209              		.loc 1 3530 10 view .LVU2148
 7210 0066 2E2D     		cmp	r5, #46
3525:src/keys.c    ****       c = OpCode;
 7211              		.loc 1 3525 14 view .LVU2149
 7212 0068 4FF00100 		mov	r0, #1
3526:src/keys.c    ****       c = OpCode;
 7213              		.loc 1 3526 9 view .LVU2150
 7214 006c 2C46     		mov	r4, r5
 7215              	.LVL624:
3525:src/keys.c    ****       c = OpCode;
 7216              		.loc 1 3525 14 view .LVU2151
 7217 006e 1060     		str	r0, [r2]
3526:src/keys.c    ****       c = OpCode;
ARM GAS  /tmp/ccwxoOej.s 			page 224


 7218              		.loc 1 3526 7 is_stmt 1 view .LVU2152
 7219              	.LVL625:
3528:src/keys.c    **** 
 7220              		.loc 1 3528 7 view .LVU2153
 7221              		.loc 1 3530 7 view .LVU2154
 7222              		.loc 1 3530 10 is_stmt 0 view .LVU2155
 7223 0070 00F09F82 		beq	.L1329
3531:src/keys.c    **** 	xeq_sst_bst(1);
3532:src/keys.c    ****       else {
3533:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7224              		.loc 1 3533 2 is_stmt 1 view .LVU2156
 7225              		.loc 1 3533 5 is_stmt 0 view .LVU2157
 7226 0074 B5F5817F 		cmp	r5, #258
 7227 0078 08D0     		beq	.L791
 7228              		.loc 1 3533 29 discriminator 1 view .LVU2158
 7229 007a 40F23F13 		movw	r3, #319
 7230 007e 9D42     		cmp	r5, r3
 7231 0080 04D0     		beq	.L791
 7232              		.loc 1 3533 60 discriminator 2 view .LVU2159
 7233 0082 FFF7FEFF 		bl	is_bad_cmdline
 7234              	.LVL626:
 7235              		.loc 1 3533 56 discriminator 2 view .LVU2160
 7236 0086 0028     		cmp	r0, #0
 7237 0088 40F0A082 		bne	.L1330
 7238              	.L791:
3534:src/keys.c    **** 	  xeq(c);
 7239              		.loc 1 3534 4 is_stmt 1 view .LVU2161
3535:src/keys.c    **** 	  if (Running || Pause)
 7240              		.loc 1 3535 8 is_stmt 0 view .LVU2162
 7241 008c 984E     		ldr	r6, .L1419+20
3534:src/keys.c    **** 	  xeq(c);
 7242              		.loc 1 3534 4 view .LVU2163
 7243 008e 2846     		mov	r0, r5
 7244 0090 FFF7FEFF 		bl	xeq
 7245              	.LVL627:
 7246              		.loc 1 3535 4 is_stmt 1 view .LVU2164
 7247              		.loc 1 3535 7 is_stmt 0 view .LVU2165
 7248 0094 3368     		ldr	r3, [r6]
 7249 0096 0BB9     		cbnz	r3, .L789
 7250              		.loc 1 3535 16 discriminator 1 view .LVU2166
 7251 0098 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7252 009a 0BB1     		cbz	r3, .L787
 7253              	.L789:
3536:src/keys.c    **** 	    xeqprog();
 7254              		.loc 1 3536 6 is_stmt 1 view .LVU2167
 7255 009c FFF7FEFF 		bl	xeqprog
 7256              	.LVL628:
 7257              	.L787:
3537:src/keys.c    **** 	}
3538:src/keys.c    ****       }
3539:src/keys.c    ****       dot(RPN, ShowRPN);
 7258              		.loc 1 3539 7 view .LVU2168
 7259 00a0 944D     		ldr	r5, .L1419+24
 7260 00a2 8D20     		movs	r0, #141
 7261 00a4 2968     		ldr	r1, [r5]
 7262 00a6 FFF7FEFF 		bl	dot
 7263              	.LVL629:
ARM GAS  /tmp/ccwxoOej.s 			page 225


3540:src/keys.c    ****     }
3541:src/keys.c    ****     else {
3542:src/keys.c    ****       // Ignore key-up if no operation was pending
3543:src/keys.c    ****       dot(RPN, ShowRPN);
3544:src/keys.c    **** #ifndef CONSOLE
3545:src/keys.c    ****       if (! State2.disp_temp ) {
3546:src/keys.c    **** 	if (!WasDataEntry) {
3547:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3548:src/keys.c    **** 	  display();
3549:src/keys.c    **** 	}
3550:src/keys.c    **** 	else {
3551:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3552:src/keys.c    **** 	}
3553:src/keys.c    ****       }
3554:src/keys.c    **** #endif
3555:src/keys.c    ****       return;
3556:src/keys.c    ****     }
3557:src/keys.c    **** 
3558:src/keys.c    ****     /*
3559:src/keys.c    ****      *  Turn on the RPN symbol if desired
3560:src/keys.c    ****      */
3561:src/keys.c    ****     if (ShowRPN) {
 7264              		.loc 1 3561 5 view .LVU2169
 7265              		.loc 1 3561 9 is_stmt 0 view .LVU2170
 7266 00aa 2D68     		ldr	r5, [r5]
 7267              		.loc 1 3561 8 view .LVU2171
 7268 00ac 002D     		cmp	r5, #0
 7269 00ae 40F06782 		bne	.L793
 7270              	.LVL630:
 7271              	.L1318:
3562:src/keys.c    ****       finish_RPN(); // RPN
3563:src/keys.c    ****     }
3564:src/keys.c    ****   }
3565:src/keys.c    ****   else {
3566:src/keys.c    ****     /*
3567:src/keys.c    ****      *  Decode the key 
3568:src/keys.c    ****      */
3569:src/keys.c    ****     //    print_debug (90, cur_shift());
3570:src/keys.c    ****     WasDataEntry = 0;
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3572:src/keys.c    **** #ifdef DM42
3573:src/keys.c    ****     if (c != K_OP) {
3574:src/keys.c    ****       c = process(c);
3575:src/keys.c    ****       //print_debug (91,cur_shift());
3576:src/keys.c    ****       // returns an op-code or state
3577:src/keys.c    ****     }
3578:src/keys.c    ****     else {
3579:src/keys.c    ****       if (isRARG(nd_opcode)) {
3580:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3581:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3582:src/keys.c    **** 	  c = nd_opcode;
3583:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3584:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3585:src/keys.c    **** 	  c = STATE_UNFINISHED;
3586:src/keys.c    **** 	}
3587:src/keys.c    **** 	else if ( (nd_opcode & 0x00ff) != 0 ) { // has argument
3588:src/keys.c    **** 	  c = nd_opcode;
ARM GAS  /tmp/ccwxoOej.s 			page 226


3589:src/keys.c    **** 	}
3590:src/keys.c    **** 	else {
3591:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3592:src/keys.c    **** 	  c = STATE_UNFINISHED;
3593:src/keys.c    **** 	}
3594:src/keys.c    ****       }
3595:src/keys.c    ****       else if (isDBL(nd_opcode)) {
3596:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
3597:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
3598:src/keys.c    **** 	  State2.multi = 1;
3599:src/keys.c    **** 	  State2.alphashift = 0;
3600:src/keys.c    **** 	  State2.rarg = 0;
3601:src/keys.c    **** 	  c = STATE_UNFINISHED;
3602:src/keys.c    **** 	}
3603:src/keys.c    **** 	else { // let argument through
3604:src/keys.c    **** 	  c = nd_opcode;
3605:src/keys.c    **** 	}
3606:src/keys.c    ****       }
3607:src/keys.c    ****       else {
3608:src/keys.c    **** 	c = check_confirm(nd_opcode);
3609:src/keys.c    ****       }      
3610:src/keys.c    ****     }
3611:src/keys.c    **** #else
3612:src/keys.c    ****     c = process(c);		// returns an op-code or state
3613:src/keys.c    **** #endif
3614:src/keys.c    ****     switch (c) {
3615:src/keys.c    ****     case STATE_SST:
3616:src/keys.c    ****       OpCode = c;
3617:src/keys.c    ****       OpCodeDisplayPending = 0;
3618:src/keys.c    ****       xeq_sst_bst(0);
3619:src/keys.c    ****       break;
 7272              		.loc 1 3619 7 is_stmt 1 view .LVU2172
 7273 00b2 3368     		ldr	r3, [r6]
 7274              	.LVL631:
 7275              	.L794:
3620:src/keys.c    **** 
3621:src/keys.c    ****     case STATE_BST:
3622:src/keys.c    ****       xeq_sst_bst(-1);
3623:src/keys.c    ****       break;
3624:src/keys.c    **** 
3625:src/keys.c    ****     case STATE_BACKSPACE:
3626:src/keys.c    ****       if (! State2.runmode)
3627:src/keys.c    **** 	delprog();
3628:src/keys.c    ****       else if (State2.alphas) {
3629:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3630:src/keys.c    **** 	if (p > Alpha)
3631:src/keys.c    **** 	  *--p = '\0';
3632:src/keys.c    ****       }
3633:src/keys.c    ****       break;
3634:src/keys.c    **** 
3635:src/keys.c    ****     case STATE_RUNNING:
3636:src/keys.c    ****       xeqprog();  // continue execution
3637:src/keys.c    ****       break;
3638:src/keys.c    **** 
3639:src/keys.c    ****     case STATE_WINDOWRIGHT:
3640:src/keys.c    ****     case STATE_WINDOWLEFT:
3641:src/keys.c    ****       if (!is_bad_cmdline())
ARM GAS  /tmp/ccwxoOej.s 			page 227


3642:src/keys.c    **** 	set_window(c);
3643:src/keys.c    ****       break;
3644:src/keys.c    **** 
3645:src/keys.c    ****     case STATE_UNFINISHED:
3646:src/keys.c    ****     case STATE_IGNORE:
3647:src/keys.c    ****       break;
3648:src/keys.c    **** 
3649:src/keys.c    ****     default:
3650:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3651:src/keys.c    **** 	NonProgrammable = 0;
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3654:src/keys.c    **** 	    // Data entry key
3655:src/keys.c    **** #ifndef CONSOLE
3656:src/keys.c    **** 	    WasDataEntry = 1;
3657:src/keys.c    **** #endif
3658:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3659:src/keys.c    **** 	    xeq(c);
3660:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3661:src/keys.c    **** 	  }
3662:src/keys.c    **** 	}
3663:src/keys.c    **** 	else {
3664:src/keys.c    **** 	  // Save the op-code for execution on key-up
3665:src/keys.c    **** 	  //print_debug(70,c);
3666:src/keys.c    **** 	  OpCode = c;
3667:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3668:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3669:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3670:src/keys.c    **** 	}
3671:src/keys.c    ****       }
3672:src/keys.c    ****       else {
3673:src/keys.c    **** 	stoprog(c);
3674:src/keys.c    ****       }
3675:src/keys.c    ****     }
3676:src/keys.c    ****   }
3677:src/keys.c    ****   if (! Running && ! Pause
 7276              		.loc 1 3677 3 view .LVU2173
 7277              		.loc 1 3677 6 is_stmt 0 view .LVU2174
 7278 00b4 002B     		cmp	r3, #0
 7279 00b6 40F04981 		bne	.L1323
 7280              	.LVL632:
 7281              	.L814:
 7282              		.loc 1 3677 20 discriminator 1 view .LVU2175
 7283 00ba 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7284              		.loc 1 3677 17 discriminator 1 view .LVU2176
 7285 00bc 002B     		cmp	r3, #0
 7286 00be 40F04581 		bne	.L1323
3678:src/keys.c    **** #ifndef CONSOLE
3679:src/keys.c    ****       && ! JustStopped
 7287              		.loc 1 3679 10 view .LVU2177
 7288 00c2 884B     		ldr	r3, .L1419+8
3680:src/keys.c    **** #endif
3681:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7289              		.loc 1 3681 10 view .LVU2178
 7290 00c4 8C4E     		ldr	r6, .L1419+28
 7291 00c6 1B68     		ldr	r3, [r3]
 7292 00c8 3268     		ldr	r2, [r6]
ARM GAS  /tmp/ccwxoOej.s 			page 228


 7293              		.loc 1 3681 7 view .LVU2179
 7294 00ca 1343     		orrs	r3, r3, r2
 7295 00cc 16D1     		bne	.L1104
 7296              		.loc 1 3681 26 discriminator 1 view .LVU2180
 7297 00ce 322C     		cmp	r4, #50
 7298 00d0 14D0     		beq	.L1104
 7299              	.LBB845:
3682:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7300              		.loc 1 3682 5 is_stmt 1 view .LVU2181
 7301              		.loc 1 3682 15 is_stmt 0 view .LVU2182
 7302 00d2 DFF84092 		ldr	r9, .L1419+56
 7303 00d6 D9F80070 		ldr	r7, [r9]
 7304              	.LVL633:
3683:src/keys.c    **** 
3684:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7305              		.loc 1 3684 5 is_stmt 1 view .LVU2183
 7306              		.loc 1 3684 21 is_stmt 0 view .LVU2184
 7307 00da 4CB1     		cbz	r4, .L1106
 7308              		.loc 1 3684 49 discriminator 1 view .LVU2185
 7309 00dc 002D     		cmp	r5, #0
 7310 00de 40F04A84 		bne	.L1166
 7311              		.loc 1 3684 66 discriminator 3 view .LVU2186
 7312 00e2 864B     		ldr	r3, .L1419+32
 7313 00e4 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7314              		.loc 1 3684 21 discriminator 3 view .LVU2187
 7315 00e6 9B07     		lsls	r3, r3, #30
 7316 00e8 00F1AE84 		bmi	.L1167
 7317 00ec 07F00104 		and	r4, r7, #1
 7318              	.LVL634:
 7319              	.L1106:
 7320              		.loc 1 3684 18 discriminator 8 view .LVU2188
 7321 00f0 C9F80040 		str	r4, [r9]
3685:src/keys.c    ****     display();
 7322              		.loc 1 3685 5 is_stmt 1 discriminator 8 view .LVU2189
 7323 00f4 FFF7FEFF 		bl	display
 7324              	.LVL635:
3686:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7325              		.loc 1 3686 5 discriminator 8 view .LVU2190
 7326              		.loc 1 3686 18 is_stmt 0 discriminator 8 view .LVU2191
 7327 00f8 C9F80070 		str	r7, [r9]
 7328              	.LVL636:
 7329              	.L1104:
 7330              		.loc 1 3686 18 discriminator 8 view .LVU2192
 7331              	.LBE845:
3687:src/keys.c    ****   }
3688:src/keys.c    **** 
3689:src/keys.c    ****  no_display:
3690:src/keys.c    ****   JustDisplayed = 0;
 7332              		.loc 1 3690 3 is_stmt 1 view .LVU2193
 7333              		.loc 1 3690 17 is_stmt 0 view .LVU2194
 7334 00fc 0023     		movs	r3, #0
 7335 00fe 3360     		str	r3, [r6]
3691:src/keys.c    ****   watchdog();
 7336              		.loc 1 3691 13 is_stmt 1 view .LVU2195
 7337              	.L763:
3692:src/keys.c    **** }
 7338              		.loc 1 3692 1 is_stmt 0 view .LVU2196
ARM GAS  /tmp/ccwxoOej.s 			page 229


 7339 0100 03B0     		add	sp, sp, #12
 7340              		.cfi_remember_state
 7341              		.cfi_def_cfa_offset 36
 7342              		@ sp needed
 7343 0102 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7344              	.LVL637:
 7345              	.L1326:
 7346              		.cfi_restore_state
3429:src/keys.c    ****       /*
 7347              		.loc 1 3429 5 is_stmt 1 view .LVU2197
3429:src/keys.c    ****       /*
 7348              		.loc 1 3429 9 is_stmt 0 view .LVU2198
 7349 0106 FFF7FEFF 		bl	keyticks
 7350              	.LVL638:
3429:src/keys.c    ****       /*
 7351              		.loc 1 3429 8 view .LVU2199
 7352 010a 0128     		cmp	r0, #1
 7353 010c 1BDD     		ble	.L769
3433:src/keys.c    **** 	/*
 7354              		.loc 1 3433 7 is_stmt 1 view .LVU2200
3433:src/keys.c    **** 	/*
 7355              		.loc 1 3433 18 is_stmt 0 view .LVU2201
 7356 010e 764D     		ldr	r5, .L1419+12
 7357 0110 2868     		ldr	r0, [r5]
3433:src/keys.c    **** 	/*
 7358              		.loc 1 3433 10 view .LVU2202
 7359 0112 98B1     		cbz	r0, .L771
3437:src/keys.c    **** 	  /*
 7360              		.loc 1 3437 2 is_stmt 1 view .LVU2203
3437:src/keys.c    **** 	  /*
 7361              		.loc 1 3437 6 is_stmt 0 view .LVU2204
 7362 0114 7A4B     		ldr	r3, .L1419+36
3437:src/keys.c    **** 	  /*
 7363              		.loc 1 3437 5 view .LVU2205
 7364 0116 1E68     		ldr	r6, [r3]
 7365 0118 002E     		cmp	r6, #0
 7366 011a 00F06E82 		beq	.L772
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7367              		.loc 1 3441 4 is_stmt 1 view .LVU2206
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7368              		.loc 1 3442 7 is_stmt 0 view .LVU2207
 7369 011e 40F23B12 		movw	r2, #315
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7370              		.loc 1 3441 25 view .LVU2208
 7371 0122 0025     		movs	r5, #0
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7372              		.loc 1 3442 7 view .LVU2209
 7373 0124 9042     		cmp	r0, r2
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7374              		.loc 1 3441 25 view .LVU2210
 7375 0126 1D60     		str	r5, [r3]
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7376              		.loc 1 3442 4 is_stmt 1 view .LVU2211
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7377              		.loc 1 3442 7 is_stmt 0 view .LVU2212
 7378 0128 40F00083 		bne	.L773
3443:src/keys.c    **** 	  }
ARM GAS  /tmp/ccwxoOej.s 			page 230


 7379              		.loc 1 3443 6 is_stmt 1 view .LVU2213
3443:src/keys.c    **** 	  }
 7380              		.loc 1 3443 14 is_stmt 0 view .LVU2214
 7381 012c 754B     		ldr	r3, .L1419+40
 7382 012e 764A     		ldr	r2, .L1419+44
 7383 0130 1A60     		str	r2, [r3]
 7384              	.L774:
3449:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 7385              		.loc 1 3449 4 is_stmt 1 view .LVU2215
 7386 0132 FFF7FEFF 		bl	display
 7387              	.LVL639:
3450:src/keys.c    **** 	}
 7388              		.loc 1 3450 4 view .LVU2216
3450:src/keys.c    **** 	}
 7389              		.loc 1 3450 12 is_stmt 0 view .LVU2217
 7390 0136 6F4B     		ldr	r3, .L1419+24
 7391 0138 0122     		movs	r2, #1
 7392 013a 1A60     		str	r2, [r3]
 7393              	.L771:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7394              		.loc 1 3462 7 is_stmt 1 view .LVU2218
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7395              		.loc 1 3462 11 is_stmt 0 view .LVU2219
 7396 013c FFF7FEFF 		bl	keyticks
 7397              	.LVL640:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7398              		.loc 1 3462 10 view .LVU2220
 7399 0140 0C28     		cmp	r0, #12
 7400 0142 00F33A82 		bgt	.L1331
 7401              	.L769:
3471:src/keys.c    **** 
 7402              		.loc 1 3471 15 is_stmt 1 view .LVU2221
3477:src/keys.c    ****       JustStopped = 0;
 7403              		.loc 1 3477 5 view .LVU2222
3477:src/keys.c    ****       JustStopped = 0;
 7404              		.loc 1 3477 9 is_stmt 0 view .LVU2223
 7405 0146 674D     		ldr	r5, .L1419+8
3477:src/keys.c    ****       JustStopped = 0;
 7406              		.loc 1 3477 8 view .LVU2224
 7407 0148 2B68     		ldr	r3, [r5]
 7408 014a 002B     		cmp	r3, #0
 7409 014c 40F09881 		bne	.L1332
 7410              	.L778:
3485:src/keys.c    ****       return;
 7411              		.loc 1 3485 5 is_stmt 1 view .LVU2225
3485:src/keys.c    ****       return;
 7412              		.loc 1 3485 9 is_stmt 0 view .LVU2226
 7413 0150 674E     		ldr	r6, .L1419+20
 7414 0152 3368     		ldr	r3, [r6]
3485:src/keys.c    ****       return;
 7415              		.loc 1 3485 8 view .LVU2227
 7416 0154 002B     		cmp	r3, #0
 7417 0156 00F05F81 		beq	.L1333
 7418              	.L780:
3518:src/keys.c    ****     {
 7419              		.loc 1 3518 3 is_stmt 1 view .LVU2228
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
ARM GAS  /tmp/ccwxoOej.s 			page 231


 7420              		.loc 1 3570 5 view .LVU2229
3571:src/keys.c    **** #ifdef DM42
 7421              		.loc 1 3571 13 is_stmt 0 view .LVU2230
 7422 015a 664A     		ldr	r2, .L1419+24
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7423              		.loc 1 3570 18 view .LVU2231
 7424 015c DFF8B491 		ldr	r9, .L1419+56
3571:src/keys.c    **** #ifdef DM42
 7425              		.loc 1 3571 15 view .LVU2232
 7426 0160 B3FA83F3 		clz	r3, r3
 7427 0164 5B09     		lsrs	r3, r3, #5
3571:src/keys.c    **** #ifdef DM42
 7428              		.loc 1 3571 13 view .LVU2233
 7429 0166 1360     		str	r3, [r2]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7430              		.loc 1 3570 18 view .LVU2234
 7431 0168 0023     		movs	r3, #0
 7432 016a C9F80030 		str	r3, [r9]
3571:src/keys.c    **** #ifdef DM42
 7433              		.loc 1 3571 5 is_stmt 1 view .LVU2235
3573:src/keys.c    ****       c = process(c);
 7434              		.loc 1 3573 5 view .LVU2236
 7435              	.L766:
3574:src/keys.c    ****       //print_debug (91,cur_shift());
 7436              		.loc 1 3574 7 view .LVU2237
 7437              	.LVL641:
 7438              	.LBB846:
 7439              	.LBI846:
3214:src/keys.c    ****   const enum shifts shift = cur_shift();
 7440              		.loc 1 3214 12 view .LVU2238
 7441              	.LBB847:
3215:src/keys.c    ****   enum catalogues cat;
 7442              		.loc 1 3215 3 view .LVU2239
 7443              	.LBB848:
 7444              	.LBI848:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7445              		.loc 1 96 13 view .LVU2240
 7446              	.LBB849:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7447              		.loc 1 97 2 view .LVU2241
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7448              		.loc 1 97 18 is_stmt 0 view .LVU2242
 7449 016e FFF7FEFF 		bl	shift_down
 7450              	.LVL642:
  98:src/keys.c    **** }
 7451              		.loc 1 98 2 is_stmt 1 view .LVU2243
  98:src/keys.c    **** }
 7452              		.loc 1 98 52 is_stmt 0 view .LVU2244
 7453 0172 0346     		mov	r3, r0
 7454 0174 08B9     		cbnz	r0, .L798
 7455 0176 614B     		ldr	r3, .L1419+32
 7456 0178 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 7457              	.L798:
 7458              	.LVL643:
  98:src/keys.c    **** }
 7459              		.loc 1 98 52 view .LVU2245
 7460              	.LBE849:
ARM GAS  /tmp/ccwxoOej.s 			page 232


 7461              	.LBE848:
3216:src/keys.c    **** 
 7462              		.loc 1 3216 3 is_stmt 1 view .LVU2246
3218:src/keys.c    ****     /*
 7463              		.loc 1 3218 3 view .LVU2247
3218:src/keys.c    ****     /*
 7464              		.loc 1 3218 7 is_stmt 0 view .LVU2248
 7465 017a 3568     		ldr	r5, [r6]
3218:src/keys.c    ****     /*
 7466              		.loc 1 3218 6 view .LVU2249
 7467 017c 002D     		cmp	r5, #0
 7468 017e 40F0CD80 		bne	.L799
3218:src/keys.c    ****     /*
 7469              		.loc 1 3218 15 view .LVU2250
 7470 0182 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 7471 0184 002A     		cmp	r2, #0
 7472 0186 40F0C980 		bne	.L799
3246:src/keys.c    **** #else
 7473              		.loc 1 3246 3 is_stmt 1 view .LVU2251
3246:src/keys.c    **** #else
 7474              		.loc 1 3246 6 is_stmt 0 view .LVU2252
 7475 018a 242C     		cmp	r4, #36
 7476 018c 00F04D83 		beq	.L1334
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7477              		.loc 1 3263 2 is_stmt 1 view .LVU2253
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7478              		.loc 1 3263 5 is_stmt 0 view .LVU2254
 7479 0190 272C     		cmp	r4, #39
 7480 0192 04D1     		bne	.L813
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7481              		.loc 1 3263 15 view .LVU2255
 7482 0194 534A     		ldr	r2, .L1419+8
 7483 0196 1168     		ldr	r1, [r2]
 7484 0198 0029     		cmp	r1, #0
 7485 019a 40F04484 		bne	.L1335
 7486              	.L813:
 7487 019e DFF85C81 		ldr	r8, .L1419+32
 7488 01a2 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 7489              	.L806:
3272:src/keys.c    **** 		CmdLineLength = 0;
 7490              		.loc 1 3272 2 is_stmt 1 view .LVU2256
3272:src/keys.c    **** 		CmdLineLength = 0;
 7491              		.loc 1 3272 5 is_stmt 0 view .LVU2257
 7492 01a6 4AB1     		cbz	r2, .L816
 7493 01a8 0093     		str	r3, [sp]
3272:src/keys.c    **** 		CmdLineLength = 0;
 7494              		.loc 1 3272 26 view .LVU2258
 7495 01aa FFF7FEFF 		bl	keyticks
 7496              	.LVL644:
3272:src/keys.c    **** 		CmdLineLength = 0;
 7497              		.loc 1 3272 23 view .LVU2259
 7498 01ae 1E28     		cmp	r0, #30
3273:src/keys.c    **** 	/*
 7499              		.loc 1 3273 17 view .LVU2260
 7500 01b0 C8BF     		it	gt
 7501 01b2 0022     		movgt	r2, #0
3272:src/keys.c    **** 		CmdLineLength = 0;
ARM GAS  /tmp/ccwxoOej.s 			page 233


 7502              		.loc 1 3272 23 view .LVU2261
 7503 01b4 009B     		ldr	r3, [sp]
3273:src/keys.c    **** 	/*
 7504              		.loc 1 3273 3 is_stmt 1 view .LVU2262
3273:src/keys.c    **** 	/*
 7505              		.loc 1 3273 17 is_stmt 0 view .LVU2263
 7506 01b6 C8BF     		it	gt
 7507 01b8 88F81C20 		strbgt	r2, [r8, #28]
 7508              	.L816:
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7509              		.loc 1 3278 2 is_stmt 1 view .LVU2264
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7510              		.loc 1 3278 6 is_stmt 0 view .LVU2265
 7511 01bc 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7512              		.loc 1 3278 5 view .LVU2266
 7513 01c0 5007     		lsls	r0, r2, #29
 7514 01c2 40F0D082 		bne	.L1336
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7515              		.loc 1 3281 2 is_stmt 1 view .LVU2267
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7516              		.loc 1 3281 6 is_stmt 0 view .LVU2268
 7517 01c6 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7518              		.loc 1 3281 5 view .LVU2269
 7519 01ca 9106     		lsls	r1, r2, #26
 7520 01cc 00F14D83 		bmi	.L1337
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7521              		.loc 1 3284 2 is_stmt 1 view .LVU2270
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7522              		.loc 1 3284 6 is_stmt 0 view .LVU2271
 7523 01d0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7524              		.loc 1 3284 5 view .LVU2272
 7525 01d4 11F0010A 		ands	r10, r1, #1
 7526 01d8 40F08483 		bne	.L1338
3287:src/keys.c    **** 		return process_hyp((const keycode)c);
 7527              		.loc 1 3287 2 is_stmt 1 view .LVU2273
3287:src/keys.c    **** 		return process_hyp((const keycode)c);
 7528              		.loc 1 3287 5 is_stmt 0 view .LVU2274
 7529 01dc 11F02000 		ands	r0, r1, #32
 7530 01e0 40F0E283 		bne	.L1339
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7531              		.loc 1 3290 2 is_stmt 1 view .LVU2275
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7532              		.loc 1 3290 12 is_stmt 0 view .LVU2276
 7533 01e4 98F80FA0 		ldrb	r10, [r8, #15]	@ zero_extendqisi2
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7534              		.loc 1 3290 5 view .LVU2277
 7535 01e8 BAF1070F 		cmp	r10, #7
 7536 01ec 40F04283 		bne	.L1340
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7537              		.loc 1 3293 2 is_stmt 1 view .LVU2278
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7538              		.loc 1 3293 12 is_stmt 0 view .LVU2279
 7539 01f0 98F80C20 		ldrb	r2, [r8, #12]	@ zero_extendqisi2
3293:src/keys.c    **** 		return process_status((const keycode)c);
ARM GAS  /tmp/ccwxoOej.s 			page 234


 7540              		.loc 1 3293 5 view .LVU2280
 7541 01f4 002A     		cmp	r2, #0
 7542 01f6 40F02A84 		bne	.L1341
3299:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7543              		.loc 1 3299 2 is_stmt 1 view .LVU2281
3299:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7544              		.loc 1 3299 5 is_stmt 0 view .LVU2282
 7545 01fa 292C     		cmp	r4, #41
 7546 01fc 00F05B85 		beq	.L1342
3303:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7547              		.loc 1 3303 2 is_stmt 1 view .LVU2283
3303:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7548              		.loc 1 3303 5 is_stmt 0 view .LVU2284
 7549 0200 2A2C     		cmp	r4, #42
 7550 0202 00F06385 		beq	.L1343
3307:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7551              		.loc 1 3307 2 is_stmt 1 view .LVU2285
3307:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7552              		.loc 1 3307 5 is_stmt 0 view .LVU2286
 7553 0206 2B2C     		cmp	r4, #43
 7554 0208 00F0D785 		beq	.L1344
3316:src/keys.c    **** 		return process_arrow((const keycode)c);
 7555              		.loc 1 3316 2 is_stmt 1 view .LVU2287
3316:src/keys.c    **** 		return process_arrow((const keycode)c);
 7556              		.loc 1 3316 5 is_stmt 0 view .LVU2288
 7557 020c 4A07     		lsls	r2, r1, #29
 7558 020e 00F14A84 		bmi	.L1345
3324:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7559              		.loc 1 3324 2 is_stmt 1 view .LVU2289
 7560              	.LBB850:
 7561              	.LBB851:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7562              		.loc 1 276 6 is_stmt 0 view .LVU2290
 7563 0212 DFF804B1 		ldr	fp, .L1419+60
 7564 0216 DBF800C0 		ldr	ip, [fp]
 7565 021a 9CF8AC0F 		ldrb	r0, [ip, #4012]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7566              		.loc 1 276 5 view .LVU2291
 7567 021e 00F04102 		and	r2, r0, #65
 7568 0222 412A     		cmp	r2, #65
 7569              	.LBE851:
 7570              	.LBE850:
3324:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7571              		.loc 1 3324 8 view .LVU2292
 7572 0224 E4B2     		uxtb	r4, r4
 7573              	.LVL645:
 7574              	.LBB870:
 7575              	.LBI850:
 267:src/keys.c    **** {
 7576              		.loc 1 267 24 is_stmt 1 view .LVU2293
 7577              	.LBB858:
 269:src/keys.c    ****   int i, col, max;
 7578              		.loc 1 269 3 view .LVU2294
 270:src/keys.c    ****   const struct _map {
 7579              		.loc 1 270 3 view .LVU2295
 271:src/keys.c    ****     unsigned char key, cat[3];
 7580              		.loc 1 271 3 view .LVU2296
ARM GAS  /tmp/ccwxoOej.s 			page 235


 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7581              		.loc 1 276 2 view .LVU2297
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7582              		.loc 1 276 5 is_stmt 0 view .LVU2298
 7583 0226 00F0A984 		beq	.L1346
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7584              		.loc 1 312 3 is_stmt 1 view .LVU2299
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7585              		.loc 1 312 6 is_stmt 0 view .LVU2300
 7586 022a 212C     		cmp	r4, #33
 7587 022c 00F02685 		beq	.L1347
 315:src/keys.c    ****     /*
 7588              		.loc 1 315 3 is_stmt 1 view .LVU2301
 315:src/keys.c    ****     /*
 7589              		.loc 1 315 23 is_stmt 0 view .LVU2302
 7590 0230 3648     		ldr	r0, .L1419+48
 7591 0232 D8F81420 		ldr	r2, [r8, #20]
 315:src/keys.c    ****     /*
 7592              		.loc 1 315 6 view .LVU2303
 7593 0236 1042     		tst	r0, r2
 7594 0238 40F02985 		bne	.L907
 7595              	.LBB852:
 319:src/keys.c    **** #ifdef DM42
 7596              		.loc 1 319 5 is_stmt 1 view .LVU2304
 346:src/keys.c    ****       /*
 7597              		.loc 1 346 5 view .LVU2305
 346:src/keys.c    ****       /*
 7598              		.loc 1 346 8 is_stmt 0 view .LVU2306
 7599 023c 242C     		cmp	r4, #36
 7600 023e 02D1     		bne	.L908
 346:src/keys.c    ****       /*
 7601              		.loc 1 346 18 view .LVU2307
 7602 0240 022B     		cmp	r3, #2
 7603 0242 01F04C80 		beq	.L1141
 7604              	.L908:
 361:src/keys.c    ****       /*
 7605              		.loc 1 361 5 is_stmt 1 view .LVU2308
 361:src/keys.c    ****       /*
 7606              		.loc 1 361 8 is_stmt 0 view .LVU2309
 7607 0246 032B     		cmp	r3, #3
 7608 0248 19D1     		bne	.L914
 7609              	.L1124:
 371:src/keys.c    **** #ifndef WINGUI
 7610              		.loc 1 371 5 is_stmt 1 view .LVU2310
 7611              	.LVL646:
 373:src/keys.c    **** #else
 7612              		.loc 1 373 5 view .LVU2311
 373:src/keys.c    **** #else
 7613              		.loc 1 373 23 is_stmt 0 view .LVU2312
 7614 024a 9CF8E82F 		ldrb	r2, [ip, #4072]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 7615              		.loc 1 373 27 view .LVU2313
 7616 024e D007     		lsls	r0, r2, #31
 7617 0250 01F13C80 		bmi	.L1142
 373:src/keys.c    **** #else
 7618              		.loc 1 373 73 view .LVU2314
 7619 0254 11F0020A 		ands	r10, r1, #2
ARM GAS  /tmp/ccwxoOej.s 			page 236


 7620 0258 01F05D82 		beq	.L1348
 371:src/keys.c    **** #ifndef WINGUI
 7621              		.loc 1 371 8 view .LVU2315
 7622 025c 2C4A     		ldr	r2, .L1419+52
 377:src/keys.c    ****   }
 7623              		.loc 1 377 9 view .LVU2316
 7624 025e 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 7625              		.loc 1 373 73 view .LVU2317
 7626 0260 4FF0020E 		mov	lr, #2
 7627              	.LVL647:
 7628              	.L909:
 373:src/keys.c    **** #else
 7629              		.loc 1 373 73 view .LVU2318
 7630              	.LBE852:
 421:src/keys.c    ****     if (cp->key == c) {
 7631              		.loc 1 421 3 is_stmt 1 view .LVU2319
 421:src/keys.c    ****     if (cp->key == c) {
 7632              		.loc 1 421 15 view .LVU2320
 7633 0264 A2F1040C 		sub	ip, r2, #4
 7634 0268 0CEB800C 		add	ip, ip, r0, lsl #2
 7635              	.LBB853:
 373:src/keys.c    **** #else
 7636              		.loc 1 373 73 is_stmt 0 view .LVU2321
 7637 026c 0420     		movs	r0, #4
 7638              	.LVL648:
 373:src/keys.c    **** #else
 7639              		.loc 1 373 73 view .LVU2322
 7640 026e 01E0     		b	.L915
 7641              	.LVL649:
 7642              	.L1350:
 373:src/keys.c    **** #else
 7643              		.loc 1 373 73 view .LVU2323
 7644 0270 12F8040F 		ldrb	r0, [r2, #4]!	@ zero_extendqisi2
 7645              	.LVL650:
 7646              	.L915:
 373:src/keys.c    **** #else
 7647              		.loc 1 373 73 view .LVU2324
 7648              	.LBE853:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7649              		.loc 1 422 5 is_stmt 1 view .LVU2325
 421:src/keys.c    ****     if (cp->key == c) {
 7650              		.loc 1 421 24 view .LVU2326
 421:src/keys.c    ****     if (cp->key == c) {
 7651              		.loc 1 421 15 view .LVU2327
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7652              		.loc 1 422 8 is_stmt 0 view .LVU2328
 7653 0274 8442     		cmp	r4, r0
 7654 0276 00F04585 		beq	.L1349
 421:src/keys.c    ****     if (cp->key == c) {
 7655              		.loc 1 421 3 view .LVU2329
 7656 027a 6245     		cmp	r2, ip
 7657 027c F8D1     		bne	.L1350
 7658              	.LVL651:
 7659              	.L914:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7660              		.loc 1 427 3 is_stmt 1 view .LVU2330
ARM GAS  /tmp/ccwxoOej.s 			page 237


 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7661              		.loc 1 427 6 is_stmt 0 view .LVU2331
 7662 027e 0A07     		lsls	r2, r1, #28
 7663 0280 00F14B85 		bmi	.L920
 7664              	.LVL652:
 7665              	.L918:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7666              		.loc 1 427 6 view .LVU2332
 7667              	.LBE858:
 7668              	.LBE870:
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7669              		.loc 1 3339 2 is_stmt 1 view .LVU2333
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7670              		.loc 1 3339 6 is_stmt 0 view .LVU2334
 7671 0284 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7672              		.loc 1 3339 5 view .LVU2335
 7673 0288 5007     		lsls	r0, r2, #29
 7674 028a 00F1EF85 		bmi	.L1351
3342:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7675              		.loc 1 3342 2 is_stmt 1 view .LVU2336
3342:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7676              		.loc 1 3342 5 is_stmt 0 view .LVU2337
 7677 028e 1207     		lsls	r2, r2, #28
 7678 0290 00F14287 		bmi	.L1352
3345:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7679              		.loc 1 3345 2 is_stmt 1 view .LVU2338
3345:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7680              		.loc 1 3345 5 is_stmt 0 view .LVU2339
 7681 0294 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 7682 0298 002A     		cmp	r2, #0
 7683 029a 40F0F587 		bne	.L1353
3348:src/keys.c    **** #ifndef INFRARED
 7684              		.loc 1 3348 2 is_stmt 1 view .LVU2340
3348:src/keys.c    **** #ifndef INFRARED
 7685              		.loc 1 3348 6 is_stmt 0 view .LVU2341
 7686 029e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3348:src/keys.c    **** #ifndef INFRARED
 7687              		.loc 1 3348 5 view .LVU2342
 7688 02a2 1007     		lsls	r0, r2, #28
 7689 02a4 01F13D80 		bmi	.L1354
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7690              		.loc 1 3361 2 is_stmt 1 view .LVU2343
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7691              		.loc 1 3361 6 is_stmt 0 view .LVU2344
 7692 02a8 DBF80020 		ldr	r2, [fp]
 7693 02ac 92F8AC2F 		ldrb	r2, [r2, #4012]	@ zero_extendqisi2
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7694              		.loc 1 3361 5 view .LVU2345
 7695 02b0 02F04102 		and	r2, r2, #65
 7696 02b4 412A     		cmp	r2, #65
 7697 02b6 01F0C881 		beq	.L1355
3365:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7698              		.loc 1 3365 2 is_stmt 1 view .LVU2346
3365:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7699              		.loc 1 3365 5 is_stmt 0 view .LVU2347
 7700 02ba 8D07     		lsls	r5, r1, #30
ARM GAS  /tmp/ccwxoOej.s 			page 238


 7701 02bc 01F11781 		bmi	.L1315
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7702              		.loc 1 3368 3 is_stmt 1 view .LVU2348
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7703              		.loc 1 3368 24 is_stmt 0 view .LVU2349
 7704 02c0 5A1E     		subs	r2, r3, #1
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7705              		.loc 1 3368 6 view .LVU2350
 7706 02c2 D2B2     		uxtb	r2, r2
 7707 02c4 012A     		cmp	r2, #1
 7708 02c6 41F2BA81 		bls	.L1317
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7709              		.loc 1 3370 3 is_stmt 1 view .LVU2351
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7710              		.loc 1 3370 6 is_stmt 0 view .LVU2352
 7711 02ca 032B     		cmp	r3, #3
3371:src/keys.c    **** 		// print_debug (3, c);
 7712              		.loc 1 3371 11 view .LVU2353
 7713 02cc 2046     		mov	r0, r4
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7714              		.loc 1 3370 6 view .LVU2354
 7715 02ce 01F07281 		beq	.L1356
 7716              	.L1081:
3373:src/keys.c    **** 	}
 7717              		.loc 1 3373 3 is_stmt 1 view .LVU2355
3373:src/keys.c    **** 	}
 7718              		.loc 1 3373 10 is_stmt 0 view .LVU2356
 7719 02d2 FFF7FEFF 		bl	process_normal
 7720              	.LVL653:
 7721 02d6 0446     		mov	r4, r0
 7722 02d8 84E0     		b	.L828
 7723              	.L1420:
 7724 02da 00BF     		.align	2
 7725              	.L1419:
 7726 02dc 00000000 		.word	.LANCHOR18
 7727 02e0 00000000 		.word	Pause
 7728 02e4 00000000 		.word	JustStopped
 7729 02e8 00000000 		.word	OpCode
 7730 02ec 00000000 		.word	GoFast
 7731 02f0 00000000 		.word	Running
 7732 02f4 00000000 		.word	ShowRPN
 7733 02f8 00000000 		.word	JustDisplayed
 7734 02fc 00000000 		.word	StateWhileOn
 7735 0300 00000000 		.word	OpCodeDisplayPending
 7736 0304 00000000 		.word	DispMsg
 7737 0308 00000000 		.word	.LC0
 7738 030c 00080800 		.word	526336
 7739 0310 00000000 		.word	.LANCHOR17
 7740 0314 00000000 		.word	WasDataEntry
 7741 0318 00000000 		.word	main_ram
 7742              	.LVL654:
 7743              	.L799:
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7744              		.loc 1 3222 5 is_stmt 1 view .LVU2357
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7745              		.loc 1 3222 8 is_stmt 0 view .LVU2358
 7746 031c 242C     		cmp	r4, #36
ARM GAS  /tmp/ccwxoOej.s 			page 239


 7747 031e 00F0B680 		beq	.L801
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7748              		.loc 1 3222 18 view .LVU2359
 7749 0322 272C     		cmp	r4, #39
 7750 0324 00F0B380 		beq	.L801
3232:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7751              		.loc 1 3232 5 is_stmt 1 view .LVU2360
3232:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7752              		.loc 1 3232 8 is_stmt 0 view .LVU2361
 7753 0328 622C     		cmp	r4, #98
 7754 032a 07D0     		beq	.L804
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7755              		.loc 1 3233 7 is_stmt 1 view .LVU2362
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7756              		.loc 1 3233 15 is_stmt 0 view .LVU2363
 7757 032c BB4B     		ldr	r3, .L1421
 7758              	.LVL655:
3235:src/keys.c    ****     }
 7759              		.loc 1 3235 14 view .LVU2364
 7760 032e BC4A     		ldr	r2, .L1421+4
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7761              		.loc 1 3233 17 view .LVU2365
 7762 0330 0134     		adds	r4, r4, #1
 7763              	.LVL656:
3235:src/keys.c    ****     }
 7764              		.loc 1 3235 14 view .LVU2366
 7765 0332 0121     		movs	r1, #1
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7766              		.loc 1 3233 15 view .LVU2367
 7767 0334 DC74     		strb	r4, [r3, #19]
3234:src/keys.c    ****       GoFast = 1;
 7768              		.loc 1 3234 7 is_stmt 1 view .LVU2368
3234:src/keys.c    ****       GoFast = 1;
 7769              		.loc 1 3234 13 is_stmt 0 view .LVU2369
 7770 0336 0023     		movs	r3, #0
3235:src/keys.c    ****     }
 7771              		.loc 1 3235 14 view .LVU2370
 7772 0338 1160     		str	r1, [r2]
3234:src/keys.c    ****       GoFast = 1;
 7773              		.loc 1 3234 13 view .LVU2371
 7774 033a 3B70     		strb	r3, [r7]
3235:src/keys.c    ****     }
 7775              		.loc 1 3235 7 is_stmt 1 view .LVU2372
 7776              	.LVL657:
 7777              	.L804:
3235:src/keys.c    ****     }
 7778              		.loc 1 3235 7 is_stmt 0 view .LVU2373
 7779              	.LBE847:
 7780              	.LBE846:
3636:src/keys.c    ****       break;
 7781              		.loc 1 3636 7 is_stmt 1 view .LVU2374
 7782 033c FFF7FEFF 		bl	xeqprog
 7783              	.LVL658:
3637:src/keys.c    **** 
 7784              		.loc 1 3637 7 view .LVU2375
 7785 0340 3368     		ldr	r3, [r6]
3409:src/keys.c    ****   //print_debug(60,c);
ARM GAS  /tmp/ccwxoOej.s 			page 240


 7786              		.loc 1 3409 7 is_stmt 0 view .LVU2376
 7787 0342 0025     		movs	r5, #0
3637:src/keys.c    **** 
 7788              		.loc 1 3637 7 view .LVU2377
 7789 0344 3124     		movs	r4, #49
 7790              	.LVL659:
3677:src/keys.c    **** #ifndef CONSOLE
 7791              		.loc 1 3677 3 is_stmt 1 view .LVU2378
3677:src/keys.c    **** #ifndef CONSOLE
 7792              		.loc 1 3677 6 is_stmt 0 view .LVU2379
 7793 0346 002B     		cmp	r3, #0
 7794 0348 3FF4B7AE 		beq	.L814
 7795              	.L1323:
3677:src/keys.c    **** #ifndef CONSOLE
 7796              		.loc 1 3677 6 view .LVU2380
 7797 034c B54E     		ldr	r6, .L1421+8
3690:src/keys.c    ****   watchdog();
 7798              		.loc 1 3690 3 is_stmt 1 view .LVU2381
3690:src/keys.c    ****   watchdog();
 7799              		.loc 1 3690 17 is_stmt 0 view .LVU2382
 7800 034e 0023     		movs	r3, #0
 7801 0350 3360     		str	r3, [r6]
3691:src/keys.c    **** }
 7802              		.loc 1 3691 13 is_stmt 1 view .LVU2383
 7803 0352 D5E6     		b	.L763
 7804              	.LVL660:
 7805              	.L1325:
3421:src/keys.c    ****     }
 7806              		.loc 1 3421 7 view .LVU2384
3571:src/keys.c    **** #ifdef DM42
 7807              		.loc 1 3571 15 is_stmt 0 view .LVU2385
 7808 0354 B44E     		ldr	r6, .L1421+12
3571:src/keys.c    **** #ifdef DM42
 7809              		.loc 1 3571 13 view .LVU2386
 7810 0356 B549     		ldr	r1, .L1421+16
3571:src/keys.c    **** #ifdef DM42
 7811              		.loc 1 3571 15 view .LVU2387
 7812 0358 3368     		ldr	r3, [r6]
3421:src/keys.c    ****     }
 7813              		.loc 1 3421 14 view .LVU2388
 7814 035a B54A     		ldr	r2, .L1421+20
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7815              		.loc 1 3570 18 view .LVU2389
 7816 035c DFF8EC92 		ldr	r9, .L1421+48
3571:src/keys.c    **** #ifdef DM42
 7817              		.loc 1 3571 15 view .LVU2390
 7818 0360 B3FA83F3 		clz	r3, r3
 7819 0364 5B09     		lsrs	r3, r3, #5
3571:src/keys.c    **** #ifdef DM42
 7820              		.loc 1 3571 13 view .LVU2391
 7821 0366 0B60     		str	r3, [r1]
3421:src/keys.c    ****     }
 7822              		.loc 1 3421 14 view .LVU2392
 7823 0368 0023     		movs	r3, #0
 7824 036a 1360     		str	r3, [r2]
3518:src/keys.c    ****     {
 7825              		.loc 1 3518 3 is_stmt 1 view .LVU2393
ARM GAS  /tmp/ccwxoOej.s 			page 241


3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7826              		.loc 1 3570 5 view .LVU2394
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7827              		.loc 1 3570 18 is_stmt 0 view .LVU2395
 7828 036c C9F80030 		str	r3, [r9]
3571:src/keys.c    **** #ifdef DM42
 7829              		.loc 1 3571 5 is_stmt 1 view .LVU2396
3573:src/keys.c    ****       c = process(c);
 7830              		.loc 1 3573 5 view .LVU2397
 7831 0370 FDE6     		b	.L766
 7832              	.L784:
3573:src/keys.c    ****       c = process(c);
 7833              		.loc 1 3573 5 is_stmt 0 view .LVU2398
 7834 0372 AD4E     		ldr	r6, .L1421+12
3571:src/keys.c    **** #ifdef DM42
 7835              		.loc 1 3571 13 view .LVU2399
 7836 0374 AD49     		ldr	r1, .L1421+16
 7837 0376 3368     		ldr	r3, [r6]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7838              		.loc 1 3570 5 is_stmt 1 view .LVU2400
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7839              		.loc 1 3570 18 is_stmt 0 view .LVU2401
 7840 0378 DFF8D092 		ldr	r9, .L1421+48
3571:src/keys.c    **** #ifdef DM42
 7841              		.loc 1 3571 15 view .LVU2402
 7842 037c B3FA83F2 		clz	r2, r3
 7843 0380 5209     		lsrs	r2, r2, #5
3573:src/keys.c    ****       c = process(c);
 7844              		.loc 1 3573 8 view .LVU2403
 7845 0382 342C     		cmp	r4, #52
3571:src/keys.c    **** #ifdef DM42
 7846              		.loc 1 3571 13 view .LVU2404
 7847 0384 0A60     		str	r2, [r1]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7848              		.loc 1 3570 18 view .LVU2405
 7849 0386 C9F80000 		str	r0, [r9]
3571:src/keys.c    **** #ifdef DM42
 7850              		.loc 1 3571 5 is_stmt 1 view .LVU2406
3573:src/keys.c    ****       c = process(c);
 7851              		.loc 1 3573 5 view .LVU2407
3573:src/keys.c    ****       c = process(c);
 7852              		.loc 1 3573 8 is_stmt 0 view .LVU2408
 7853 038a 7FF4F0AE 		bne	.L766
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7854              		.loc 1 3579 7 is_stmt 1 view .LVU2409
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7855              		.loc 1 3579 11 is_stmt 0 view .LVU2410
 7856 038e A94A     		ldr	r2, .L1421+24
 7857 0390 1568     		ldr	r5, [r2]
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7858              		.loc 1 3579 10 view .LVU2411
 7859 0392 15F47042 		ands	r2, r5, #61440
 7860 0396 1FD0     		beq	.L1082
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7861              		.loc 1 3579 11 discriminator 1 view .LVU2412
 7862 0398 B2F5704F 		cmp	r2, #61440
 7863 039c 00F0D480 		beq	.L1083
ARM GAS  /tmp/ccwxoOej.s 			page 242


 7864              	.LBB1463:
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7865              		.loc 1 3580 2 is_stmt 1 view .LVU2413
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7866              		.loc 1 3580 28 is_stmt 0 view .LVU2414
 7867 03a0 C5F30722 		ubfx	r2, r5, #8, #8
 7868 03a4 A2F12004 		sub	r4, r2, #32
 7869              	.LVL661:
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7870              		.loc 1 3580 28 view .LVU2415
 7871 03a8 E4B2     		uxtb	r4, r4
 7872              	.LVL662:
3581:src/keys.c    **** 	  c = nd_opcode;
 7873              		.loc 1 3581 2 is_stmt 1 view .LVU2416
3581:src/keys.c    **** 	  c = nd_opcode;
 7874              		.loc 1 3581 5 is_stmt 0 view .LVU2417
 7875 03aa 012C     		cmp	r4, #1
 7876 03ac 40F2CF80 		bls	.L1089
3581:src/keys.c    **** 	  c = nd_opcode;
 7877              		.loc 1 3581 53 discriminator 1 view .LVU2418
 7878 03b0 6C2C     		cmp	r4, #108
 7879 03b2 00F0CC80 		beq	.L1089
3581:src/keys.c    **** 	  c = nd_opcode;
 7880              		.loc 1 3581 74 discriminator 2 view .LVU2419
 7881 03b6 242C     		cmp	r4, #36
 7882 03b8 00F0C980 		beq	.L1089
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7883              		.loc 1 3583 7 is_stmt 1 view .LVU2420
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7884              		.loc 1 3583 32 is_stmt 0 view .LVU2421
 7885 03bc A4F12D01 		sub	r1, r4, #45
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7886              		.loc 1 3583 10 view .LVU2422
 7887 03c0 0629     		cmp	r1, #6
 7888 03c2 00F22282 		bhi	.L1086
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7889              		.loc 1 3584 4 is_stmt 1 view .LVU2423
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7890              		.loc 1 3584 25 is_stmt 0 view .LVU2424
 7891 03c6 4D3A     		subs	r2, r2, #77
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7892              		.loc 1 3584 16 view .LVU2425
 7893 03c8 88F80F20 		strb	r2, [r8, #15]
3585:src/keys.c    **** 	}
 7894              		.loc 1 3585 4 is_stmt 1 view .LVU2426
 7895              	.LVL663:
3585:src/keys.c    **** 	}
 7896              		.loc 1 3585 4 is_stmt 0 view .LVU2427
 7897              	.LBE1463:
3614:src/keys.c    ****     case STATE_SST:
 7898              		.loc 1 3614 5 is_stmt 1 view .LVU2428
3409:src/keys.c    ****   //print_debug(60,c);
 7899              		.loc 1 3409 7 is_stmt 0 view .LVU2429
 7900 03cc 0546     		mov	r5, r0
 7901              	.LBB1466:
3585:src/keys.c    **** 	}
 7902              		.loc 1 3585 6 view .LVU2430
ARM GAS  /tmp/ccwxoOej.s 			page 243


 7903 03ce 3324     		movs	r4, #51
 7904              	.LVL664:
3585:src/keys.c    **** 	}
 7905              		.loc 1 3585 6 view .LVU2431
 7906 03d0 70E6     		b	.L794
 7907              	.LVL665:
 7908              	.L1324:
3585:src/keys.c    **** 	}
 7909              		.loc 1 3585 6 view .LVU2432
 7910              	.LBE1466:
3416:src/keys.c    ****     }
 7911              		.loc 1 3416 7 is_stmt 1 view .LVU2433
 7912 03d2 FFF7FEFF 		bl	xeq_xrom
 7913              	.LVL666:
3416:src/keys.c    ****     }
 7914              		.loc 1 3416 7 is_stmt 0 view .LVU2434
 7915 03d6 1FE6     		b	.L764
 7916              	.L1082:
3608:src/keys.c    ****       }      
 7917              		.loc 1 3608 2 is_stmt 1 view .LVU2435
 7918              	.LBB1467:
 7919              	.LBB1468:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7920              		.loc 1 715 5 is_stmt 0 view .LVU2436
 7921 03d8 C5F30723 		ubfx	r3, r5, #8, #8
 7922 03dc 012B     		cmp	r3, #1
 7923              	.LBE1468:
 7924              	.LBE1467:
3608:src/keys.c    ****       }      
 7925              		.loc 1 3608 6 view .LVU2437
 7926 03de 2C46     		mov	r4, r5
 7927              	.LVL667:
 7928              	.LBB1471:
 7929              	.LBI1467:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7930              		.loc 1 714 12 is_stmt 1 view .LVU2438
 7931              	.LBB1469:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7932              		.loc 1 715 2 view .LVU2439
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7933              		.loc 1 715 5 is_stmt 0 view .LVU2440
 7934 03e0 00F09481 		beq	.L1316
 7935              	.LVL668:
 7936              	.L828:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7937              		.loc 1 715 5 view .LVU2441
 7938              	.LBE1469:
 7939              	.LBE1471:
3614:src/keys.c    ****     case STATE_SST:
 7940              		.loc 1 3614 5 is_stmt 1 view .LVU2442
 7941 03e4 A4F12B03 		sub	r3, r4, #43
 7942 03e8 082B     		cmp	r3, #8
 7943 03ea 00F24681 		bhi	.L1091
 7944 03ee 01A2     		adr	r2, .L1092
 7945 03f0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7946              		.p2align 2
 7947              	.L1092:
ARM GAS  /tmp/ccwxoOej.s 			page 244


 7948 03f4 6D040000 		.word	.L1093+1
 7949 03f8 6D040000 		.word	.L1093+1
 7950 03fc 7B060000 		.word	.L1091+1
 7951 0400 E1040000 		.word	.L1023+1
 7952 0404 39050000 		.word	.L1025+1
 7953 0408 09050000 		.word	.L1019+1
 7954 040c 3D030000 		.word	.L804+1
 7955 0410 67040000 		.word	.L1319+1
 7956 0414 67040000 		.word	.L1319+1
 7957              		.p2align 1
 7958              	.L1333:
3485:src/keys.c    ****       return;
 7959              		.loc 1 3485 21 is_stmt 0 discriminator 1 view .LVU2443
 7960 0418 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3485:src/keys.c    ****       return;
 7961              		.loc 1 3485 18 discriminator 1 view .LVU2444
 7962 041a 002A     		cmp	r2, #0
 7963 041c 7FF49DAE 		bne	.L780
 7964 0420 6EE6     		b	.L763
 7965              	.LVL669:
 7966              	.L1001:
 7967              	.LBB1472:
 7968              	.LBB1410:
 7969              	.LBB871:
 7970              	.LBB872:
 7971              	.LBB873:
1827:src/keys.c    **** 	    if ( State2.runmode ) {
 7972              		.loc 1 1827 4 is_stmt 1 view .LVU2445
1827:src/keys.c    **** 	    if ( State2.runmode ) {
 7973              		.loc 1 1827 7 is_stmt 0 view .LVU2446
 7974 0422 BAF1000F 		cmp	r10, #0
 7975 0426 40F01581 		bne	.L996
1828:src/keys.c    **** 	      // Alpha scroll left
 7976              		.loc 1 1828 6 is_stmt 1 view .LVU2447
1828:src/keys.c    **** 	      // Alpha scroll left
 7977              		.loc 1 1828 9 is_stmt 0 view .LVU2448
 7978 042a 5006     		lsls	r0, r2, #25
 7979              	.LVL670:
1828:src/keys.c    **** 	      // Alpha scroll left
 7980              		.loc 1 1828 9 view .LVU2449
 7981 042c 78D5     		bpl	.L1013
1836:src/keys.c    **** 		alpha_pos += 1;
 7982              		.loc 1 1836 8 is_stmt 1 view .LVU2450
1836:src/keys.c    **** 		alpha_pos += 1;
 7983              		.loc 1 1836 11 is_stmt 0 view .LVU2451
 7984 042e 002B     		cmp	r3, #0
 7985 0430 41F0BA82 		bne	.L1014
 7986              	.LVL671:
 7987              	.L1016:
1837:src/keys.c    **** 	      }
 7988              		.loc 1 1837 3 is_stmt 1 view .LVU2452
1837:src/keys.c    **** 	      }
 7989              		.loc 1 1837 13 is_stmt 0 view .LVU2453
 7990 0434 0133     		adds	r3, r3, #1
 7991 0436 0093     		str	r3, [sp]
 7992              	.LVL672:
 7993              	.L1015:
ARM GAS  /tmp/ccwxoOej.s 			page 245


1844:src/keys.c    **** #else
 7994              		.loc 1 1844 8 is_stmt 1 view .LVU2454
1844:src/keys.c    **** #else
 7995              		.loc 1 1844 25 is_stmt 0 view .LVU2455
 7996 0438 009B     		ldr	r3, [sp]
 7997 043a 88F80D30 		strb	r3, [r8, #13]
1849:src/keys.c    **** 	    }
 7998              		.loc 1 1849 8 is_stmt 1 view .LVU2456
 7999              	.L1007:
 8000              	.LVL673:
1849:src/keys.c    **** 	    }
 8001              		.loc 1 1849 8 is_stmt 0 view .LVU2457
 8002              	.LBE873:
 8003              	.LBE872:
3353:src/keys.c    **** 			print_tab(0);
 8004              		.loc 1 3353 3 is_stmt 1 view .LVU2458
3353:src/keys.c    **** 			print_tab(0);
 8005              		.loc 1 3353 7 is_stmt 0 view .LVU2459
 8006 043e 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
3353:src/keys.c    **** 			print_tab(0);
 8007              		.loc 1 3353 6 view .LVU2460
 8008 0442 10F00804 		ands	r4, r0, #8
 8009 0446 40F0B381 		bne	.L1322
3353:src/keys.c    **** 			print_tab(0);
 8010              		.loc 1 3353 26 view .LVU2461
 8011 044a 6720     		movs	r0, #103
 8012 044c FFF7FEFF 		bl	get_user_flag
 8013              	.LVL674:
3353:src/keys.c    **** 			print_tab(0);
 8014              		.loc 1 3353 23 view .LVU2462
 8015 0450 0546     		mov	r5, r0
 8016 0452 0028     		cmp	r0, #0
 8017 0454 00F0AC81 		beq	.L1322
3354:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8018              		.loc 1 3354 4 is_stmt 1 view .LVU2463
 8019 0458 2046     		mov	r0, r4
 8020 045a FFF7FEFF 		bl	print_tab
 8021              	.LVL675:
3355:src/keys.c    **** 		}
 8022              		.loc 1 3355 4 view .LVU2464
 8023 045e C020     		movs	r0, #192
 8024 0460 FFF7FEFF 		bl	print_alpha
 8025              	.LVL676:
3355:src/keys.c    **** 		}
 8026              		.loc 1 3355 4 is_stmt 0 view .LVU2465
 8027              	.LBE871:
 8028              	.LBE1410:
 8029              	.LBE1472:
3614:src/keys.c    ****     case STATE_SST:
 8030              		.loc 1 3614 5 is_stmt 1 view .LVU2466
 8031              	.LBB1473:
 8032              	.LBB1411:
 8033              	.LBB931:
3355:src/keys.c    **** 		}
 8034              		.loc 1 3355 4 is_stmt 0 view .LVU2467
 8035 0464 3324     		movs	r4, #51
 8036              	.LVL677:
ARM GAS  /tmp/ccwxoOej.s 			page 246


 8037              	.L1319:
3355:src/keys.c    **** 		}
 8038              		.loc 1 3355 4 view .LVU2468
 8039 0466 3368     		ldr	r3, [r6]
 8040              	.LBE931:
 8041              	.LBE1411:
 8042              	.LBE1473:
3409:src/keys.c    ****   //print_debug(60,c);
 8043              		.loc 1 3409 7 view .LVU2469
 8044 0468 0025     		movs	r5, #0
 8045 046a 23E6     		b	.L794
 8046              	.LVL678:
 8047              	.L1093:
3641:src/keys.c    **** 	set_window(c);
 8048              		.loc 1 3641 7 is_stmt 1 view .LVU2470
3641:src/keys.c    **** 	set_window(c);
 8049              		.loc 1 3641 12 is_stmt 0 view .LVU2471
 8050 046c FFF7FEFF 		bl	is_bad_cmdline
 8051              	.LVL679:
3641:src/keys.c    **** 	set_window(c);
 8052              		.loc 1 3641 10 view .LVU2472
 8053 0470 0546     		mov	r5, r0
 8054 0472 0028     		cmp	r0, #0
 8055 0474 F7D1     		bne	.L1319
3642:src/keys.c    ****       break;
 8056              		.loc 1 3642 2 is_stmt 1 view .LVU2473
 8057 0476 2046     		mov	r0, r4
 8058 0478 FFF7FEFF 		bl	set_window
 8059              	.LVL680:
 8060 047c 3368     		ldr	r3, [r6]
 8061 047e 19E6     		b	.L794
 8062              	.L1332:
3477:src/keys.c    ****       JustStopped = 0;
 8063              		.loc 1 3477 25 is_stmt 0 discriminator 1 view .LVU2474
 8064 0480 FFF7FEFF 		bl	is_key_pressed
 8065              	.LVL681:
3477:src/keys.c    ****       JustStopped = 0;
 8066              		.loc 1 3477 21 discriminator 1 view .LVU2475
 8067 0484 0028     		cmp	r0, #0
 8068 0486 7FF463AE 		bne	.L778
3478:src/keys.c    ****     }
 8069              		.loc 1 3478 7 is_stmt 1 view .LVU2476
3478:src/keys.c    ****     }
 8070              		.loc 1 3478 19 is_stmt 0 view .LVU2477
 8071 048a 2860     		str	r0, [r5]
 8072 048c 60E6     		b	.L778
 8073              	.LVL682:
 8074              	.L801:
 8075              	.LBB1474:
 8076              	.LBB1412:
3223:src/keys.c    **** 	set_pc(0);
 8077              		.loc 1 3223 7 is_stmt 1 view .LVU2478
3223:src/keys.c    **** 	set_pc(0);
 8078              		.loc 1 3223 11 is_stmt 0 view .LVU2479
 8079 048e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 8080              	.LVL683:
3223:src/keys.c    **** 	set_pc(0);
ARM GAS  /tmp/ccwxoOej.s 			page 247


 8081              		.loc 1 3223 10 view .LVU2480
 8082 0490 4BB1     		cbz	r3, .L803
3223:src/keys.c    **** 	set_pc(0);
 8083              		.loc 1 3223 20 view .LVU2481
 8084 0492 694B     		ldr	r3, .L1421+28
 8085 0494 1B68     		ldr	r3, [r3]
 8086 0496 B3F8E03F 		ldrh	r3, [r3, #4064]
3223:src/keys.c    **** 	set_pc(0);
 8087              		.loc 1 3223 17 view .LVU2482
 8088 049a 9B0B     		lsrs	r3, r3, #14
 8089 049c 032B     		cmp	r3, #3
 8090 049e 02D1     		bne	.L803
3224:src/keys.c    ****       Pause = 0;
 8091              		.loc 1 3224 2 is_stmt 1 view .LVU2483
 8092 04a0 0020     		movs	r0, #0
 8093 04a2 FFF7FEFF 		bl	set_pc
 8094              	.LVL684:
 8095              	.L803:
3225:src/keys.c    ****       xeq_xrom();
 8096              		.loc 1 3225 7 view .LVU2484
3225:src/keys.c    ****       xeq_xrom();
 8097              		.loc 1 3225 13 is_stmt 0 view .LVU2485
 8098 04a6 0025     		movs	r5, #0
 8099 04a8 3D70     		strb	r5, [r7]
3226:src/keys.c    ****       set_running_off();
 8100              		.loc 1 3226 7 is_stmt 1 view .LVU2486
 8101 04aa FFF7FEFF 		bl	xeq_xrom
 8102              	.LVL685:
3227:src/keys.c    ****       DispMsg = "Stopped";
 8103              		.loc 1 3227 7 view .LVU2487
 8104 04ae FFF7FEFF 		bl	set_running_off
 8105              	.LVL686:
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8106              		.loc 1 3228 7 view .LVU2488
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8107              		.loc 1 3229 26 is_stmt 0 view .LVU2489
 8108 04b2 5A4A     		ldr	r2, .L1421
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8109              		.loc 1 3228 15 view .LVU2490
 8110 04b4 6148     		ldr	r0, .L1421+32
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8111              		.loc 1 3229 26 view .LVU2491
 8112 04b6 D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8113              		.loc 1 3228 15 view .LVU2492
 8114 04b8 614C     		ldr	r4, .L1421+36
 8115              	.LVL687:
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8116              		.loc 1 3228 15 view .LVU2493
 8117 04ba 0460     		str	r4, [r0]
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8118              		.loc 1 3229 7 is_stmt 1 view .LVU2494
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8119              		.loc 1 3229 26 is_stmt 0 view .LVU2495
 8120 04bc 65F30411 		bfi	r1, r5, #4, #1
 8121 04c0 3368     		ldr	r3, [r6]
 8122 04c2 D175     		strb	r1, [r2, #23]
ARM GAS  /tmp/ccwxoOej.s 			page 248


3230:src/keys.c    ****     }
 8123              		.loc 1 3230 7 is_stmt 1 view .LVU2496
3230:src/keys.c    ****     }
 8124              		.loc 1 3230 14 is_stmt 0 view .LVU2497
 8125 04c4 3324     		movs	r4, #51
 8126 04c6 F5E5     		b	.L794
 8127              	.LVL688:
 8128              	.L1017:
 8129              	.LBB932:
3353:src/keys.c    **** 			print_tab(0);
 8130              		.loc 1 3353 3 is_stmt 1 view .LVU2498
3353:src/keys.c    **** 			print_tab(0);
 8131              		.loc 1 3353 6 is_stmt 0 view .LVU2499
 8132 04c8 1007     		lsls	r0, r2, #28
 8133              	.LVL689:
3353:src/keys.c    **** 			print_tab(0);
 8134              		.loc 1 3353 6 view .LVU2500
 8135 04ca 09D4     		bmi	.L1023
3353:src/keys.c    **** 			print_tab(0);
 8136              		.loc 1 3353 26 view .LVU2501
 8137 04cc 6720     		movs	r0, #103
 8138 04ce FFF7FEFF 		bl	get_user_flag
 8139              	.LVL690:
3353:src/keys.c    **** 			print_tab(0);
 8140              		.loc 1 3353 23 view .LVU2502
 8141 04d2 28B1     		cbz	r0, .L1023
3354:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8142              		.loc 1 3354 4 is_stmt 1 view .LVU2503
 8143 04d4 5046     		mov	r0, r10
 8144 04d6 FFF7FEFF 		bl	print_tab
 8145              	.LVL691:
3355:src/keys.c    **** 		}
 8146              		.loc 1 3355 4 view .LVU2504
 8147 04da C020     		movs	r0, #192
 8148 04dc FFF7FEFF 		bl	print_alpha
 8149              	.LVL692:
3355:src/keys.c    **** 		}
 8150              		.loc 1 3355 4 is_stmt 0 view .LVU2505
 8151              	.LBE932:
 8152              	.LBE1412:
 8153              	.LBE1474:
3614:src/keys.c    ****     case STATE_SST:
 8154              		.loc 1 3614 5 is_stmt 1 view .LVU2506
 8155              	.L1023:
3616:src/keys.c    ****       OpCodeDisplayPending = 0;
 8156              		.loc 1 3616 7 view .LVU2507
3616:src/keys.c    ****       OpCodeDisplayPending = 0;
 8157              		.loc 1 3616 14 is_stmt 0 view .LVU2508
 8158 04e0 534A     		ldr	r2, .L1421+20
3617:src/keys.c    ****       xeq_sst_bst(0);
 8159              		.loc 1 3617 28 view .LVU2509
 8160 04e2 584B     		ldr	r3, .L1421+40
 8161 04e4 0020     		movs	r0, #0
3616:src/keys.c    ****       OpCodeDisplayPending = 0;
 8162              		.loc 1 3616 14 view .LVU2510
 8163 04e6 2E24     		movs	r4, #46
 8164 04e8 1460     		str	r4, [r2]
ARM GAS  /tmp/ccwxoOej.s 			page 249


3617:src/keys.c    ****       xeq_sst_bst(0);
 8165              		.loc 1 3617 7 is_stmt 1 view .LVU2511
3617:src/keys.c    ****       xeq_sst_bst(0);
 8166              		.loc 1 3617 28 is_stmt 0 view .LVU2512
 8167 04ea 1860     		str	r0, [r3]
3618:src/keys.c    ****       break;
 8168              		.loc 1 3618 7 is_stmt 1 view .LVU2513
3409:src/keys.c    ****   //print_debug(60,c);
 8169              		.loc 1 3409 7 is_stmt 0 view .LVU2514
 8170 04ec 0546     		mov	r5, r0
3618:src/keys.c    ****       break;
 8171              		.loc 1 3618 7 view .LVU2515
 8172 04ee FFF7FEFF 		bl	xeq_sst_bst
 8173              	.LVL693:
 8174 04f2 DEE5     		b	.L1318
 8175              	.LVL694:
 8176              	.L1362:
 8177              	.LBB1475:
 8178              	.LBB1413:
 8179              	.LBB933:
3353:src/keys.c    **** 			print_tab(0);
 8180              		.loc 1 3353 26 view .LVU2516
 8181 04f4 6720     		movs	r0, #103
 8182              	.LVL695:
3353:src/keys.c    **** 			print_tab(0);
 8183              		.loc 1 3353 26 view .LVU2517
 8184 04f6 FFF7FEFF 		bl	get_user_flag
 8185              	.LVL696:
3353:src/keys.c    **** 			print_tab(0);
 8186              		.loc 1 3353 23 view .LVU2518
 8187 04fa 28B1     		cbz	r0, .L1019
3354:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8188              		.loc 1 3354 4 is_stmt 1 view .LVU2519
 8189 04fc 5046     		mov	r0, r10
 8190 04fe FFF7FEFF 		bl	print_tab
 8191              	.LVL697:
3355:src/keys.c    **** 		}
 8192              		.loc 1 3355 4 view .LVU2520
 8193 0502 C020     		movs	r0, #192
 8194 0504 FFF7FEFF 		bl	print_alpha
 8195              	.LVL698:
3355:src/keys.c    **** 		}
 8196              		.loc 1 3355 4 is_stmt 0 view .LVU2521
 8197              	.LBE933:
 8198              	.LBE1413:
 8199              	.LBE1475:
3614:src/keys.c    ****     case STATE_SST:
 8200              		.loc 1 3614 5 is_stmt 1 view .LVU2522
 8201              	.L1019:
3626:src/keys.c    **** 	delprog();
 8202              		.loc 1 3626 7 view .LVU2523
3626:src/keys.c    **** 	delprog();
 8203              		.loc 1 3626 11 is_stmt 0 view .LVU2524
 8204 0508 98F81650 		ldrb	r5, [r8, #22]	@ zero_extendqisi2
3626:src/keys.c    **** 	delprog();
 8205              		.loc 1 3626 10 view .LVU2525
 8206 050c 6806     		lsls	r0, r5, #25
ARM GAS  /tmp/ccwxoOej.s 			page 250


 8207 050e 40F10781 		bpl	.L1120
3628:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8208              		.loc 1 3628 12 is_stmt 1 view .LVU2526
3628:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8209              		.loc 1 3628 15 is_stmt 0 view .LVU2527
 8210 0512 15F00805 		ands	r5, r5, #8
 8211 0516 40F0D380 		bne	.L1357
 8212              	.L1321:
 8213 051a 3368     		ldr	r3, [r6]
 8214              	.LBB1476:
3631:src/keys.c    ****       }
 8215              		.loc 1 3631 9 view .LVU2528
 8216 051c 3024     		movs	r4, #48
 8217 051e C9E5     		b	.L794
 8218              	.LVL699:
 8219              	.L1013:
3631:src/keys.c    ****       }
 8220              		.loc 1 3631 9 view .LVU2529
 8221              	.LBE1476:
 8222              	.LBB1477:
 8223              	.LBB1414:
 8224              	.LBB934:
3353:src/keys.c    **** 			print_tab(0);
 8225              		.loc 1 3353 3 is_stmt 1 view .LVU2530
3353:src/keys.c    **** 			print_tab(0);
 8226              		.loc 1 3353 6 is_stmt 0 view .LVU2531
 8227 0520 1407     		lsls	r4, r2, #28
 8228 0522 09D4     		bmi	.L1025
3353:src/keys.c    **** 			print_tab(0);
 8229              		.loc 1 3353 26 view .LVU2532
 8230 0524 6720     		movs	r0, #103
 8231 0526 FFF7FEFF 		bl	get_user_flag
 8232              	.LVL700:
3353:src/keys.c    **** 			print_tab(0);
 8233              		.loc 1 3353 23 view .LVU2533
 8234 052a 28B1     		cbz	r0, .L1025
3354:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8235              		.loc 1 3354 4 is_stmt 1 view .LVU2534
 8236 052c 5046     		mov	r0, r10
 8237 052e FFF7FEFF 		bl	print_tab
 8238              	.LVL701:
3355:src/keys.c    **** 		}
 8239              		.loc 1 3355 4 view .LVU2535
 8240 0532 C020     		movs	r0, #192
 8241 0534 FFF7FEFF 		bl	print_alpha
 8242              	.LVL702:
3355:src/keys.c    **** 		}
 8243              		.loc 1 3355 4 is_stmt 0 view .LVU2536
 8244              	.LBE934:
 8245              	.LBE1414:
 8246              	.LBE1477:
3614:src/keys.c    ****     case STATE_SST:
 8247              		.loc 1 3614 5 is_stmt 1 view .LVU2537
 8248              	.L1025:
3622:src/keys.c    ****       break;
 8249              		.loc 1 3622 7 view .LVU2538
 8250 0538 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccwxoOej.s 			page 251


 8251 053c FFF7FEFF 		bl	xeq_sst_bst
 8252              	.LVL703:
3623:src/keys.c    **** 
 8253              		.loc 1 3623 7 view .LVU2539
3409:src/keys.c    ****   //print_debug(60,c);
 8254              		.loc 1 3409 7 is_stmt 0 view .LVU2540
 8255 0540 0025     		movs	r5, #0
 8256 0542 3368     		ldr	r3, [r6]
3623:src/keys.c    **** 
 8257              		.loc 1 3623 7 view .LVU2541
 8258 0544 2F24     		movs	r4, #47
 8259 0546 B5E5     		b	.L794
 8260              	.LVL704:
 8261              	.L1083:
3595:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
 8262              		.loc 1 3595 12 is_stmt 1 view .LVU2542
3596:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 8263              		.loc 1 3596 2 view .LVU2543
3596:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 8264              		.loc 1 3596 5 is_stmt 0 view .LVU2544
 8265 0548 35F47F43 		bics	r3, r5, #65280
 8266 054c 40D0     		beq	.L1358
 8267              	.LVL705:
 8268              	.L1089:
3604:src/keys.c    **** 	}
 8269              		.loc 1 3604 4 is_stmt 1 view .LVU2545
 8270 054e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3604:src/keys.c    **** 	}
 8271              		.loc 1 3604 6 is_stmt 0 view .LVU2546
 8272 0552 2C46     		mov	r4, r5
 8273              	.LVL706:
 8274              	.L855:
3650:src/keys.c    **** 	NonProgrammable = 0;
 8275              		.loc 1 3650 7 is_stmt 1 view .LVU2547
3650:src/keys.c    **** 	NonProgrammable = 0;
 8276              		.loc 1 3650 10 is_stmt 0 view .LVU2548
 8277 0554 12F04002 		ands	r2, r2, #64
 8278 0558 40F0F980 		bne	.L1359
3650:src/keys.c    **** 	NonProgrammable = 0;
 8279              		.loc 1 3650 26 view .LVU2549
 8280 055c 3A4B     		ldr	r3, .L1421+44
 8281 055e 1968     		ldr	r1, [r3]
 8282 0560 0029     		cmp	r1, #0
 8283 0562 41F07B81 		bne	.L1360
 8284              	.LVL707:
 8285              	.L1101:
3673:src/keys.c    ****       }
 8286              		.loc 1 3673 2 is_stmt 1 view .LVU2550
 8287 0566 2846     		mov	r0, r5
 8288 0568 FFF7FEFF 		bl	stoprog
 8289              	.LVL708:
 8290 056c 7BE7     		b	.L1319
 8291              	.LVL709:
 8292              	.L1328:
3673:src/keys.c    ****       }
 8293              		.loc 1 3673 2 is_stmt 0 view .LVU2551
 8294 056e 2E4E     		ldr	r6, .L1421+12
ARM GAS  /tmp/ccwxoOej.s 			page 252


 8295 0570 3368     		ldr	r3, [r6]
 8296 0572 F2E5     		b	.L780
 8297              	.L1327:
3499:src/keys.c    ****       finish_RPN(); // RPN
 8298              		.loc 1 3499 7 is_stmt 1 view .LVU2552
 8299 0574 8D20     		movs	r0, #141
 8300 0576 FFF7FEFF 		bl	clr_dot
 8301              	.LVL710:
3500:src/keys.c    ****     }
 8302              		.loc 1 3500 7 view .LVU2553
 8303 057a FFF7FEFF 		bl	finish_RPN
 8304              	.LVL711:
 8305 057e 62E5     		b	.L782
 8306              	.L793:
3562:src/keys.c    ****     }
 8307              		.loc 1 3562 7 view .LVU2554
 8308 0580 FFF7FEFF 		bl	finish_RPN
 8309              	.LVL712:
3409:src/keys.c    ****   //print_debug(60,c);
 8310              		.loc 1 3409 7 is_stmt 0 view .LVU2555
 8311 0584 0025     		movs	r5, #0
 8312 0586 3368     		ldr	r3, [r6]
 8313 0588 94E5     		b	.L794
 8314              	.L785:
3543:src/keys.c    **** #ifndef CONSOLE
 8315              		.loc 1 3543 7 is_stmt 1 view .LVU2556
 8316 058a 284B     		ldr	r3, .L1421+16
 8317 058c 8D20     		movs	r0, #141
 8318 058e 1968     		ldr	r1, [r3]
 8319 0590 FFF7FEFF 		bl	dot
 8320              	.LVL713:
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8321              		.loc 1 3545 7 view .LVU2557
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8322              		.loc 1 3545 11 is_stmt 0 view .LVU2558
 8323 0594 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8324              		.loc 1 3545 10 view .LVU2559
 8325 0598 9D06     		lsls	r5, r3, #26
 8326 059a 3FF5B1AD 		bmi	.L763
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8327              		.loc 1 3546 2 is_stmt 1 view .LVU2560
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8328              		.loc 1 3546 6 is_stmt 0 view .LVU2561
 8329 059e 2B4B     		ldr	r3, .L1421+48
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8330              		.loc 1 3546 5 view .LVU2562
 8331 05a0 1B68     		ldr	r3, [r3]
 8332 05a2 002B     		cmp	r3, #0
 8333 05a4 40F0CE80 		bne	.L796
3548:src/keys.c    **** 	}
 8334              		.loc 1 3548 4 is_stmt 1 view .LVU2563
 8335              		.loc 1 3692 1 is_stmt 0 view .LVU2564
 8336 05a8 03B0     		add	sp, sp, #12
 8337              		.cfi_remember_state
 8338              		.cfi_def_cfa_offset 36
 8339              		@ sp needed
ARM GAS  /tmp/ccwxoOej.s 			page 253


 8340 05aa BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8341              		.cfi_restore 14
 8342              		.cfi_restore 11
 8343              		.cfi_restore 10
 8344              		.cfi_restore 9
 8345              		.cfi_restore 8
 8346              		.cfi_restore 7
 8347              		.cfi_restore 6
 8348              		.cfi_restore 5
 8349              		.cfi_restore 4
 8350              		.cfi_def_cfa_offset 0
 8351              	.LVL714:
3548:src/keys.c    **** 	}
 8352              		.loc 1 3548 4 view .LVU2565
 8353 05ae FFF7FEBF 		b	display
 8354              	.LVL715:
 8355              	.L1329:
 8356              		.cfi_restore_state
3531:src/keys.c    ****       else {
 8357              		.loc 1 3531 2 is_stmt 1 view .LVU2566
 8358 05b2 FFF7FEFF 		bl	xeq_sst_bst
 8359              	.LVL716:
 8360 05b6 1C4E     		ldr	r6, .L1421+12
 8361 05b8 72E5     		b	.L787
 8362              	.L1331:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8363              		.loc 1 3462 28 is_stmt 0 discriminator 1 view .LVU2567
 8364 05ba FFF7FEFF 		bl	shift_down
 8365              	.LVL717:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8366              		.loc 1 3462 25 discriminator 1 view .LVU2568
 8367 05be 0028     		cmp	r0, #0
 8368 05c0 3FF4C1AD 		beq	.L769
3464:src/keys.c    ****       }
 8369              		.loc 1 3464 2 is_stmt 1 view .LVU2569
3464:src/keys.c    ****       }
 8370              		.loc 1 3464 16 is_stmt 0 view .LVU2570
 8371 05c4 154B     		ldr	r3, .L1421
 8372 05c6 0022     		movs	r2, #0
 8373 05c8 1A74     		strb	r2, [r3, #16]
 8374 05ca BCE5     		b	.L769
 8375              	.L1330:
3464:src/keys.c    ****       }
 8376              		.loc 1 3464 16 view .LVU2571
 8377 05cc 164E     		ldr	r6, .L1421+12
 8378 05ce 67E5     		b	.L787
 8379              	.L1358:
3597:src/keys.c    **** 	  State2.multi = 1;
 8380              		.loc 1 3597 4 is_stmt 1 view .LVU2572
 8381              	.LVL718:
 8382              	.LBB1478:
 8383              	.LBI1478:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8384              		.loc 1 552 13 view .LVU2573
 8385              	.LBB1479:
 553:src/keys.c    **** 		return;
 8386              		.loc 1 553 2 view .LVU2574
ARM GAS  /tmp/ccwxoOej.s 			page 254


 553:src/keys.c    **** 		return;
 8387              		.loc 1 553 6 is_stmt 0 view .LVU2575
 8388 05d0 FFF7FEFF 		bl	is_bad_cmdline
 8389              	.LVL719:
 553:src/keys.c    **** 		return;
 8390              		.loc 1 553 5 view .LVU2576
 8391 05d4 18B9     		cbnz	r0, .L1090
 8392 05d6 C5F30320 		ubfx	r0, r5, #8, #4
 8393 05da FFF7FEFF 		bl	init_arg.part.0
 8394              	.LVL720:
 8395              	.L1090:
 553:src/keys.c    **** 		return;
 8396              		.loc 1 553 5 view .LVU2577
 8397              	.LBE1479:
 8398              	.LBE1478:
3598:src/keys.c    **** 	  State2.alphashift = 0;
 8399              		.loc 1 3598 4 is_stmt 1 view .LVU2578
3599:src/keys.c    **** 	  State2.rarg = 0;
 8400              		.loc 1 3599 4 view .LVU2579
3600:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8401              		.loc 1 3600 4 view .LVU2580
3598:src/keys.c    **** 	  State2.alphashift = 0;
 8402              		.loc 1 3598 17 is_stmt 0 view .LVU2581
 8403 05de D8F81420 		ldr	r2, [r8, #20]
 8404 05e2 3368     		ldr	r3, [r6]
 8405 05e4 22F44012 		bic	r2, r2, #3145728
 8406 05e8 22F40062 		bic	r2, r2, #2048
 8407 05ec 42F40062 		orr	r2, r2, #2048
 8408 05f0 C8F81420 		str	r2, [r8, #20]
3601:src/keys.c    **** 	}
 8409              		.loc 1 3601 4 is_stmt 1 view .LVU2582
 8410              	.LVL721:
3614:src/keys.c    ****     case STATE_SST:
 8411              		.loc 1 3614 5 view .LVU2583
3409:src/keys.c    ****   //print_debug(60,c);
 8412              		.loc 1 3409 7 is_stmt 0 view .LVU2584
 8413 05f4 0025     		movs	r5, #0
3601:src/keys.c    **** 	}
 8414              		.loc 1 3601 6 view .LVU2585
 8415 05f6 3324     		movs	r4, #51
 8416 05f8 5CE5     		b	.L794
 8417              	.LVL722:
 8418              	.L772:
3452:src/keys.c    **** 	  /*
 8419              		.loc 1 3452 10 is_stmt 1 view .LVU2586
3452:src/keys.c    **** 	  /*
 8420              		.loc 1 3452 14 is_stmt 0 view .LVU2587
 8421 05fa FFF7FEFF 		bl	keyticks
 8422              	.LVL723:
3452:src/keys.c    **** 	  /*
 8423              		.loc 1 3452 13 view .LVU2588
 8424 05fe 0C28     		cmp	r0, #12
 8425 0600 7FF79CAD 		ble	.L771
3456:src/keys.c    **** 	  message("NULL", CNULL);
 8426              		.loc 1 3456 4 is_stmt 1 view .LVU2589
3457:src/keys.c    **** 	  // Force display update on key-up
 8427              		.loc 1 3457 4 is_stmt 0 view .LVU2590
ARM GAS  /tmp/ccwxoOej.s 			page 255


 8428 0604 1248     		ldr	r0, .L1421+52
3456:src/keys.c    **** 	  message("NULL", CNULL);
 8429              		.loc 1 3456 11 view .LVU2591
 8430 0606 2E60     		str	r6, [r5]
3457:src/keys.c    **** 	  // Force display update on key-up
 8431              		.loc 1 3457 4 is_stmt 1 view .LVU2592
 8432 0608 3146     		mov	r1, r6
 8433 060a FFF7FEFF 		bl	message
 8434              	.LVL724:
3459:src/keys.c    **** 	}
 8435              		.loc 1 3459 4 view .LVU2593
3459:src/keys.c    **** 	}
 8436              		.loc 1 3459 21 is_stmt 0 view .LVU2594
 8437 060e 034B     		ldr	r3, .L1421
 8438 0610 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8439 0612 66F34512 		bfi	r2, r6, #5, #1
 8440 0616 DA75     		strb	r2, [r3, #23]
 8441 0618 90E5     		b	.L771
 8442              	.L1422:
 8443 061a 00BF     		.align	2
 8444              	.L1421:
 8445 061c 00000000 		.word	StateWhileOn
 8446 0620 00000000 		.word	GoFast
 8447 0624 00000000 		.word	JustDisplayed
 8448 0628 00000000 		.word	Running
 8449 062c 00000000 		.word	ShowRPN
 8450 0630 00000000 		.word	OpCode
 8451 0634 00000000 		.word	nd_opcode
 8452 0638 00000000 		.word	main_ram
 8453 063c 00000000 		.word	DispMsg
 8454 0640 0C000000 		.word	.LC2
 8455 0644 00000000 		.word	OpCodeDisplayPending
 8456 0648 00000000 		.word	NonProgrammable
 8457 064c 00000000 		.word	WasDataEntry
 8458 0650 04000000 		.word	.LC1
 8459              	.LVL725:
 8460              	.L996:
 8461              	.LBB1480:
 8462              	.LBB1415:
 8463              	.LBB935:
 8464              	.LBB925:
 8465              	.LBB919:
1891:src/keys.c    **** 		return STATE_UNFINISHED;
 8466              		.loc 1 1891 2 is_stmt 1 view .LVU2595
1891:src/keys.c    **** 		return STATE_UNFINISHED;
 8467              		.loc 1 1891 5 is_stmt 0 view .LVU2596
 8468 0654 0028     		cmp	r0, #0
 8469 0656 3FF4F2AE 		beq	.L1007
1893:src/keys.c    **** }
 8470              		.loc 1 1893 2 is_stmt 1 view .LVU2597
1893:src/keys.c    **** }
 8471              		.loc 1 1893 9 is_stmt 0 view .LVU2598
 8472 065a 40F48844 		orr	r4, r0, #17408
 8473              	.L1012:
 8474              	.LVL726:
1893:src/keys.c    **** }
 8475              		.loc 1 1893 9 view .LVU2599
ARM GAS  /tmp/ccwxoOej.s 			page 256


 8476              	.LBE919:
 8477              	.LBE925:
3353:src/keys.c    **** 			print_tab(0);
 8478              		.loc 1 3353 3 is_stmt 1 view .LVU2600
3353:src/keys.c    **** 			print_tab(0);
 8479              		.loc 1 3353 6 is_stmt 0 view .LVU2601
 8480 065e 12F00805 		ands	r5, r2, #8
 8481 0662 41F03281 		bne	.L1361
3353:src/keys.c    **** 			print_tab(0);
 8482              		.loc 1 3353 26 view .LVU2602
 8483 0666 6720     		movs	r0, #103
 8484              	.LVL727:
3353:src/keys.c    **** 			print_tab(0);
 8485              		.loc 1 3353 26 view .LVU2603
 8486 0668 FFF7FEFF 		bl	get_user_flag
 8487              	.LVL728:
3353:src/keys.c    **** 			print_tab(0);
 8488              		.loc 1 3353 23 view .LVU2604
 8489 066c 28B1     		cbz	r0, .L1091
3354:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8490              		.loc 1 3354 4 is_stmt 1 view .LVU2605
 8491 066e 2846     		mov	r0, r5
 8492 0670 FFF7FEFF 		bl	print_tab
 8493              	.LVL729:
3355:src/keys.c    **** 		}
 8494              		.loc 1 3355 4 view .LVU2606
 8495 0674 C020     		movs	r0, #192
 8496 0676 FFF7FEFF 		bl	print_alpha
 8497              	.LVL730:
 8498              	.L1091:
3355:src/keys.c    **** 		}
 8499              		.loc 1 3355 4 is_stmt 0 view .LVU2607
 8500              	.LBE935:
 8501              	.LBE1415:
 8502              	.LBE1480:
3650:src/keys.c    **** 	NonProgrammable = 0;
 8503              		.loc 1 3650 7 is_stmt 1 view .LVU2608
3650:src/keys.c    **** 	NonProgrammable = 0;
 8504              		.loc 1 3650 11 is_stmt 0 view .LVU2609
 8505 067a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 8506              		.loc 1 3650 10 view .LVU2610
 8507 067e 5A06     		lsls	r2, r3, #25
 8508 0680 41F1E480 		bpl	.L1099
 8509 0684 BD4A     		ldr	r2, .L1423
 8510 0686 2546     		mov	r5, r4
 8511              	.L1100:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8512              		.loc 1 3651 2 is_stmt 1 view .LVU2611
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8513              		.loc 1 3651 18 is_stmt 0 view .LVU2612
 8514 0688 0023     		movs	r3, #0
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8515              		.loc 1 3652 5 view .LVU2613
 8516 068a 142C     		cmp	r4, #20
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8517              		.loc 1 3651 18 view .LVU2614
ARM GAS  /tmp/ccwxoOej.s 			page 257


 8518 068c 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8519              		.loc 1 3652 2 is_stmt 1 view .LVU2615
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8520              		.loc 1 3652 5 is_stmt 0 view .LVU2616
 8521 068e 61D8     		bhi	.L1098
3653:src/keys.c    **** 	    // Data entry key
 8522              		.loc 1 3653 4 is_stmt 1 view .LVU2617
3653:src/keys.c    **** 	    // Data entry key
 8523              		.loc 1 3653 7 is_stmt 0 view .LVU2618
 8524 0690 24B9     		cbnz	r4, .L1103
3653:src/keys.c    **** 	    // Data entry key
 8525              		.loc 1 3653 38 discriminator 1 view .LVU2619
 8526 0692 FFF7FEFF 		bl	is_bad_cmdline
 8527              	.LVL731:
3653:src/keys.c    **** 	    // Data entry key
 8528              		.loc 1 3653 34 discriminator 1 view .LVU2620
 8529 0696 0028     		cmp	r0, #0
 8530 0698 7FF4E5AE 		bne	.L1319
 8531              	.L1103:
3656:src/keys.c    **** #endif
 8532              		.loc 1 3656 6 is_stmt 1 view .LVU2621
3658:src/keys.c    **** 	    xeq(c);
 8533              		.loc 1 3658 37 is_stmt 0 view .LVU2622
 8534 069c 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3656:src/keys.c    **** #endif
 8535              		.loc 1 3656 19 view .LVU2623
 8536 06a0 0123     		movs	r3, #1
3659:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8537              		.loc 1 3659 6 view .LVU2624
 8538 06a2 2046     		mov	r0, r4
3656:src/keys.c    **** #endif
 8539              		.loc 1 3656 19 view .LVU2625
 8540 06a4 C9F80030 		str	r3, [r9]
3658:src/keys.c    **** 	    xeq(c);
 8541              		.loc 1 3658 6 is_stmt 1 view .LVU2626
3658:src/keys.c    **** 	    xeq(c);
 8542              		.loc 1 3658 37 is_stmt 0 view .LVU2627
 8543 06a8 B5FA85F5 		clz	r5, r5
3659:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8544              		.loc 1 3659 6 view .LVU2628
 8545 06ac FFF7FEFF 		bl	xeq
 8546              	.LVL732:
3660:src/keys.c    **** 	  }
 8547              		.loc 1 3660 38 view .LVU2629
 8548 06b0 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8549 06b4 3368     		ldr	r3, [r6]
3658:src/keys.c    **** 	    xeq(c);
 8550              		.loc 1 3658 37 view .LVU2630
 8551 06b6 6D09     		lsrs	r5, r5, #5
 8552              	.LVL733:
3659:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8553              		.loc 1 3659 6 is_stmt 1 view .LVU2631
3660:src/keys.c    **** 	  }
 8554              		.loc 1 3660 6 view .LVU2632
3660:src/keys.c    **** 	  }
 8555              		.loc 1 3660 20 is_stmt 0 view .LVU2633
ARM GAS  /tmp/ccwxoOej.s 			page 258


 8556 06b8 0028     		cmp	r0, #0
 8557 06ba 08BF     		it	eq
 8558 06bc 0125     		moveq	r5, #1
 8559              	.LVL734:
3660:src/keys.c    **** 	  }
 8560              		.loc 1 3660 20 view .LVU2634
 8561 06be F9E4     		b	.L794
 8562              	.LVL735:
 8563              	.L1357:
3660:src/keys.c    **** 	  }
 8564              		.loc 1 3660 20 view .LVU2635
 8565 06c0 DFF8DCB2 		ldr	fp, .L1423+36
 8566              	.L1095:
 8567              	.LBB1481:
3629:src/keys.c    **** 	if (p > Alpha)
 8568              		.loc 1 3629 2 is_stmt 1 view .LVU2636
3629:src/keys.c    **** 	if (p > Alpha)
 8569              		.loc 1 3629 22 is_stmt 0 view .LVU2637
 8570 06c4 DBF80000 		ldr	r0, [fp]
3629:src/keys.c    **** 	if (p > Alpha)
 8571              		.loc 1 3629 12 view .LVU2638
 8572 06c8 0021     		movs	r1, #0
 8573 06ca 00F57B60 		add	r0, r0, #4016
 8574 06ce FFF7FEFF 		bl	find_char
 8575              	.LVL736:
3630:src/keys.c    **** 	  *--p = '\0';
 8576              		.loc 1 3630 8 view .LVU2639
 8577 06d2 DBF80030 		ldr	r3, [fp]
 8578              	.LVL737:
3630:src/keys.c    **** 	  *--p = '\0';
 8579              		.loc 1 3630 2 is_stmt 1 view .LVU2640
3630:src/keys.c    **** 	  *--p = '\0';
 8580              		.loc 1 3630 8 is_stmt 0 view .LVU2641
 8581 06d6 03F57B63 		add	r3, r3, #4016
3630:src/keys.c    **** 	  *--p = '\0';
 8582              		.loc 1 3630 5 view .LVU2642
 8583 06da 9842     		cmp	r0, r3
 8584 06dc 00F2FE80 		bhi	.L1096
 8585 06e0 3368     		ldr	r3, [r6]
 8586              	.LBE1481:
3409:src/keys.c    ****   //print_debug(60,c);
 8587              		.loc 1 3409 7 view .LVU2643
 8588 06e2 0025     		movs	r5, #0
 8589              	.LBB1482:
3630:src/keys.c    **** 	  *--p = '\0';
 8590              		.loc 1 3630 5 view .LVU2644
 8591 06e4 3024     		movs	r4, #48
 8592 06e6 E5E4     		b	.L794
 8593              	.LVL738:
 8594              	.L1150:
3630:src/keys.c    **** 	  *--p = '\0';
 8595              		.loc 1 3630 5 view .LVU2645
 8596              	.LBE1482:
 8597              	.LBB1483:
 8598              	.LBB1416:
 8599              	.LBB936:
 8600              	.LBB937:
ARM GAS  /tmp/ccwxoOej.s 			page 259


3001:src/keys.c    **** 
 8601              		.loc 1 3001 6 view .LVU2646
 8602 06e8 3324     		movs	r4, #51
 8603              	.LVL739:
 8604              	.L949:
3034:src/keys.c    **** 		break;
 8605              		.loc 1 3034 3 is_stmt 1 view .LVU2647
 8606 06ea 5846     		mov	r0, fp
 8607 06ec FFF7FEFF 		bl	set_pc
 8608              	.LVL740:
3035:src/keys.c    **** 
 8609              		.loc 1 3035 3 view .LVU2648
 8610              	.L961:
3088:src/keys.c    **** 	State2.labellist = 0;
 8611              		.loc 1 3088 2 view .LVU2649
3089:src/keys.c    **** 	return check_confirm(op);
 8612              		.loc 1 3089 19 is_stmt 0 view .LVU2650
 8613 06f0 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3088:src/keys.c    **** 	State2.labellist = 0;
 8614              		.loc 1 3088 16 view .LVU2651
 8615 06f4 0022     		movs	r2, #0
 8616              	.LBB938:
 8617              	.LBB939:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8618              		.loc 1 715 5 view .LVU2652
 8619 06f6 C4F30723 		ubfx	r3, r4, #8, #8
 8620              	.LBE939:
 8621              	.LBE938:
3089:src/keys.c    **** 	return check_confirm(op);
 8622              		.loc 1 3089 19 view .LVU2653
 8623 06fa 62F38201 		bfi	r1, r2, #2, #1
 8624              	.LBB944:
 8625              	.LBB940:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8626              		.loc 1 715 5 view .LVU2654
 8627 06fe 012B     		cmp	r3, #1
 8628              	.LBE940:
 8629              	.LBE944:
3089:src/keys.c    **** 	return check_confirm(op);
 8630              		.loc 1 3089 19 view .LVU2655
 8631 0700 88F81710 		strb	r1, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 8632              		.loc 1 3088 16 view .LVU2656
 8633 0704 A8F80820 		strh	r2, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 8634              		.loc 1 3089 2 is_stmt 1 view .LVU2657
3090:src/keys.c    **** }
 8635              		.loc 1 3090 2 view .LVU2658
 8636              	.LVL741:
 8637              	.LBB945:
 8638              	.LBI938:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8639              		.loc 1 714 12 view .LVU2659
 8640              	.LBB941:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8641              		.loc 1 715 2 view .LVU2660
 715:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/ccwxoOej.s 			page 260


 8642              		.loc 1 715 5 is_stmt 0 view .LVU2661
 8643 0708 7FF46CAE 		bne	.L828
 8644              	.LVL742:
 8645              	.L1316:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8646              		.loc 1 715 5 view .LVU2662
 8647              	.LBE941:
 8648              	.LBE945:
 8649              	.LBE937:
 8650              	.LBE936:
 8651              	.LBE1416:
 8652              	.LBE1483:
 8653              	.LBB1484:
 8654              	.LBB1470:
 8655 070c 2046     		mov	r0, r4
 8656 070e FFF7FEFF 		bl	check_confirm.part.0
 8657              	.LVL743:
 8658 0712 0446     		mov	r4, r0
 8659 0714 66E6     		b	.L828
 8660              	.LVL744:
 8661              	.L1010:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8662              		.loc 1 715 5 view .LVU2663
 8663              	.LBE1470:
 8664              	.LBE1484:
 8665              	.LBB1485:
 8666              	.LBB1417:
 8667              	.LBB972:
3353:src/keys.c    **** 			print_tab(0);
 8668              		.loc 1 3353 3 is_stmt 1 view .LVU2664
3353:src/keys.c    **** 			print_tab(0);
 8669              		.loc 1 3353 6 is_stmt 0 view .LVU2665
 8670 0716 1107     		lsls	r1, r2, #28
 8671 0718 7FF5ECAE 		bpl	.L1362
 8672              	.LVL745:
3353:src/keys.c    **** 			print_tab(0);
 8673              		.loc 1 3353 6 view .LVU2666
 8674              	.LBE972:
 8675              	.LBE1417:
 8676              	.LBE1485:
3626:src/keys.c    **** 	delprog();
 8677              		.loc 1 3626 7 is_stmt 1 view .LVU2667
3626:src/keys.c    **** 	delprog();
 8678              		.loc 1 3626 10 is_stmt 0 view .LVU2668
 8679 071c 5306     		lsls	r3, r2, #25
 8680 071e D1D4     		bmi	.L1095
 8681              	.LVL746:
 8682              	.L1120:
3627:src/keys.c    ****       else if (State2.alphas) {
 8683              		.loc 1 3627 2 is_stmt 1 view .LVU2669
 8684 0720 FFF7FEFF 		bl	delprog
 8685              	.LVL747:
3409:src/keys.c    ****   //print_debug(60,c);
 8686              		.loc 1 3409 7 is_stmt 0 view .LVU2670
 8687 0724 0025     		movs	r5, #0
 8688 0726 3368     		ldr	r3, [r6]
 8689 0728 3024     		movs	r4, #48
ARM GAS  /tmp/ccwxoOej.s 			page 261


 8690 072a C3E4     		b	.L794
 8691              	.LVL748:
 8692              	.L773:
3446:src/keys.c    **** 	    DispMsg = TraceBuffer;
 8693              		.loc 1 3446 6 is_stmt 1 view .LVU2671
 8694 072c 944E     		ldr	r6, .L1423+4
 8695 072e 3146     		mov	r1, r6
 8696 0730 FFF7FEFF 		bl	prt
 8697              	.LVL749:
 8698 0734 2A46     		mov	r2, r5
 8699 0736 0146     		mov	r1, r0
 8700 0738 3046     		mov	r0, r6
 8701 073a FFF7FEFF 		bl	scopy_char
 8702              	.LVL750:
3447:src/keys.c    **** 	  }
 8703              		.loc 1 3447 6 view .LVU2672
3447:src/keys.c    **** 	  }
 8704              		.loc 1 3447 14 is_stmt 0 view .LVU2673
 8705 073e 914B     		ldr	r3, .L1423+8
 8706 0740 1E60     		str	r6, [r3]
 8707 0742 F6E4     		b	.L774
 8708              	.L796:
3551:src/keys.c    **** 	}
 8709              		.loc 1 3551 4 is_stmt 1 view .LVU2674
 8710              		.loc 1 3692 1 is_stmt 0 view .LVU2675
 8711 0744 03B0     		add	sp, sp, #12
 8712              		.cfi_remember_state
 8713              		.cfi_def_cfa_offset 36
 8714              		@ sp needed
 8715 0746 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8716              		.cfi_restore 14
 8717              		.cfi_restore 11
 8718              		.cfi_restore 10
 8719              		.cfi_restore 9
 8720              		.cfi_restore 8
 8721              		.cfi_restore 7
 8722              		.cfi_restore 6
 8723              		.cfi_restore 5
 8724              		.cfi_restore 4
 8725              		.cfi_def_cfa_offset 0
 8726              	.LVL751:
3551:src/keys.c    **** 	}
 8727              		.loc 1 3551 4 view .LVU2676
 8728 074a FFF7FEBF 		b	finish_RPN
 8729              	.LVL752:
 8730              	.L1359:
 8731              		.cfi_restore_state
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8732              		.loc 1 3651 2 is_stmt 1 view .LVU2677
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8733              		.loc 1 3651 18 is_stmt 0 view .LVU2678
 8734 074e 8B4B     		ldr	r3, .L1423
 8735 0750 0022     		movs	r2, #0
 8736 0752 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8737              		.loc 1 3652 2 is_stmt 1 view .LVU2679
 8738              	.LVL753:
ARM GAS  /tmp/ccwxoOej.s 			page 262


 8739              	.L1098:
3666:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8740              		.loc 1 3666 4 view .LVU2680
3666:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8741              		.loc 1 3666 11 is_stmt 0 view .LVU2681
 8742 0754 8C4A     		ldr	r2, .L1423+12
3667:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8743              		.loc 1 3667 25 view .LVU2682
 8744 0756 8D4B     		ldr	r3, .L1423+16
3666:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8745              		.loc 1 3666 11 view .LVU2683
 8746 0758 1560     		str	r5, [r2]
3667:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8747              		.loc 1 3667 4 is_stmt 1 view .LVU2684
3667:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8748              		.loc 1 3667 25 is_stmt 0 view .LVU2685
 8749 075a 0122     		movs	r2, #1
 8750 075c 8C4E     		ldr	r6, .L1423+20
 8751 075e 1A60     		str	r2, [r3]
3668:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8752              		.loc 1 3668 4 is_stmt 1 view .LVU2686
 8753 0760 FFF7FEFF 		bl	finish_RPN
 8754              	.LVL754:
3669:src/keys.c    **** 	}
 8755              		.loc 1 3669 4 view .LVU2687
 8756 0764 CAE4     		b	.L1104
 8757              	.LVL755:
 8758              	.L1336:
 8759              	.LBB1486:
 8760              	.LBB1418:
3279:src/keys.c    **** 
 8761              		.loc 1 3279 3 view .LVU2688
 8762              	.LBB973:
 8763              	.LBI973:
2881:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8764              		.loc 1 2881 12 view .LVU2689
 8765              	.LBB974:
2883:src/keys.c    **** #ifdef DM42
 8766              		.loc 1 2883 2 view .LVU2690
 8767 0766 E3B2     		uxtb	r3, r4
 8768 0768 0E3B     		subs	r3, r3, #14
 8769 076a 192B     		cmp	r3, #25
 8770 076c 20D8     		bhi	.L1322
 8771 076e DFE803F0 		tbb	[pc, r3]
 8772              	.L820:
 8773 0772 24       		.byte	(.L821-.L820)/2
 8774 0773 1F       		.byte	(.L1322-.L820)/2
 8775 0774 24       		.byte	(.L821-.L820)/2
 8776 0775 1F       		.byte	(.L1322-.L820)/2
 8777 0776 1F       		.byte	(.L1322-.L820)/2
 8778 0777 1F       		.byte	(.L1322-.L820)/2
 8779 0778 1F       		.byte	(.L1322-.L820)/2
 8780 0779 1F       		.byte	(.L1322-.L820)/2
 8781 077a 1F       		.byte	(.L1322-.L820)/2
 8782 077b 1F       		.byte	(.L1322-.L820)/2
 8783 077c 1F       		.byte	(.L1322-.L820)/2
 8784 077d 1F       		.byte	(.L1322-.L820)/2
ARM GAS  /tmp/ccwxoOej.s 			page 263


 8785 077e 1F       		.byte	(.L1322-.L820)/2
 8786 077f 1F       		.byte	(.L1322-.L820)/2
 8787 0780 1F       		.byte	(.L1322-.L820)/2
 8788 0781 1F       		.byte	(.L1322-.L820)/2
 8789 0782 1F       		.byte	(.L1322-.L820)/2
 8790 0783 1F       		.byte	(.L1322-.L820)/2
 8791 0784 30       		.byte	(.L819-.L820)/2
 8792 0785 1F       		.byte	(.L1322-.L820)/2
 8793 0786 1F       		.byte	(.L1322-.L820)/2
 8794 0787 1F       		.byte	(.L1322-.L820)/2
 8795 0788 1F       		.byte	(.L1322-.L820)/2
 8796 0789 1F       		.byte	(.L1322-.L820)/2
 8797 078a 1F       		.byte	(.L1322-.L820)/2
 8798 078b 30       		.byte	(.L819-.L820)/2
 8799              	.LVL756:
 8800              		.p2align 1
 8801              	.L925:
2883:src/keys.c    **** #ifdef DM42
 8802              		.loc 1 2883 2 is_stmt 0 view .LVU2691
 8803              	.LBE974:
 8804              	.LBE973:
 8805              	.LBB977:
 8806              	.LBB978:
2846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 8807              		.loc 1 2846 3 is_stmt 1 view .LVU2692
2846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 8808              		.loc 1 2846 6 is_stmt 0 view .LVU2693
 8809 078c 0129     		cmp	r1, #1
 8810 078e 01F09F80 		beq	.L1363
2849:src/keys.c    **** 		return STATE_UNFINISHED;
 8811              		.loc 1 2849 4 is_stmt 1 view .LVU2694
 8812              	.LBB979:
 8813              	.LBI979:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 8814              		.loc 1 2803 13 view .LVU2695
 8815              	.LBB980:
2805:src/keys.c    **** 	if (! State2.alphas )
 8816              		.loc 1 2805 2 view .LVU2696
2805:src/keys.c    **** 	if (! State2.alphas )
 8817              		.loc 1 2805 15 is_stmt 0 view .LVU2697
 8818 0792 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 8819              		.loc 1 2806 6 view .LVU2698
 8820 0796 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 8821              		.loc 1 2805 15 view .LVU2699
 8822 079a 60F3C302 		bfi	r2, r0, #3, #1
 8823 079e 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 8824              		.loc 1 2806 2 is_stmt 1 view .LVU2700
2806:src/keys.c    **** 		State2.alphashift = 0;
 8825              		.loc 1 2806 5 is_stmt 0 view .LVU2701
 8826 07a2 13F00802 		ands	r2, r3, #8
 8827 07a6 03D1     		bne	.L1322
 8828              	.LVL757:
 8829              	.L934:
2807:src/keys.c    **** }
ARM GAS  /tmp/ccwxoOej.s 			page 264


 8830              		.loc 1 2807 3 is_stmt 1 view .LVU2702
2807:src/keys.c    **** }
 8831              		.loc 1 2807 21 is_stmt 0 view .LVU2703
 8832 07a8 62F30413 		bfi	r3, r2, #4, #1
 8833 07ac 88F81630 		strb	r3, [r8, #22]
 8834              	.LVL758:
 8835              	.L1322:
2807:src/keys.c    **** }
 8836              		.loc 1 2807 21 view .LVU2704
 8837 07b0 3368     		ldr	r3, [r6]
 8838              	.LBE980:
 8839              	.LBE979:
2850:src/keys.c    **** 
 8840              		.loc 1 2850 10 view .LVU2705
 8841 07b2 3324     		movs	r4, #51
 8842 07b4 7EE4     		b	.L794
 8843              	.LVL759:
 8844              	.L822:
2850:src/keys.c    **** 
 8845              		.loc 1 2850 10 view .LVU2706
 8846              	.LBE978:
 8847              	.LBE977:
 8848              	.LBB1015:
 8849              	.LBB975:
2892:src/keys.c    **** 	  }
 8850              		.loc 1 2892 26 is_stmt 1 view .LVU2707
 8851 07b6 FFF7FEFF 		bl	clpall
 8852              	.LVL760:
2892:src/keys.c    **** 	  }
 8853              		.loc 1 2892 36 view .LVU2708
 8854              	.L821:
2901:src/keys.c    **** 	  State2.digval = 0;
 8855              		.loc 1 2901 4 view .LVU2709
2901:src/keys.c    **** 	  State2.digval = 0;
 8856              		.loc 1 2901 19 is_stmt 0 view .LVU2710
 8857 07ba 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8858 07be 3368     		ldr	r3, [r6]
 8859 07c0 6FF30202 		bfc	r2, #0, #3
2902:src/keys.c    **** 	  break;
 8860              		.loc 1 2902 18 view .LVU2711
 8861 07c4 0021     		movs	r1, #0
2901:src/keys.c    **** 	  State2.digval = 0;
 8862              		.loc 1 2901 19 view .LVU2712
 8863 07c6 88F81420 		strb	r2, [r8, #20]
2902:src/keys.c    **** 	  break;
 8864              		.loc 1 2902 4 is_stmt 1 view .LVU2713
2902:src/keys.c    **** 	  break;
 8865              		.loc 1 2902 18 is_stmt 0 view .LVU2714
 8866 07ca A8F80810 		strh	r1, [r8, #8]	@ movhi
2903:src/keys.c    **** 	default:			// No state change
 8867              		.loc 1 2903 4 is_stmt 1 view .LVU2715
 8868              	.LBE975:
 8869              	.LBE1015:
3279:src/keys.c    **** 
 8870              		.loc 1 3279 10 is_stmt 0 view .LVU2716
 8871 07ce 3324     		movs	r4, #51
 8872              	.LVL761:
ARM GAS  /tmp/ccwxoOej.s 			page 265


 8873              	.LBB1016:
 8874              	.LBB976:
2903:src/keys.c    **** 	default:			// No state change
 8875              		.loc 1 2903 4 view .LVU2717
 8876 07d0 70E4     		b	.L794
 8877              	.LVL762:
 8878              	.L819:
2888:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8879              		.loc 1 2888 4 is_stmt 1 view .LVU2718
2888:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8880              		.loc 1 2888 18 is_stmt 0 view .LVU2719
 8881 07d2 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8882 07d6 03F00703 		and	r3, r3, #7
 8883 07da 013B     		subs	r3, r3, #1
 8884 07dc 032B     		cmp	r3, #3
 8885 07de ECD8     		bhi	.L821
 8886 07e0 01A2     		adr	r2, .L823
 8887 07e2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8888 07e6 00BF     		.p2align 2
 8889              	.L823:
 8890 07e8 05080000 		.word	.L826+1
 8891 07ec FF070000 		.word	.L825+1
 8892 07f0 F9070000 		.word	.L824+1
 8893 07f4 B7070000 		.word	.L822+1
 8894              		.p2align 1
 8895              	.L824:
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8896              		.loc 1 2891 26 is_stmt 1 view .LVU2720
 8897 07f8 FFF7FEFF 		bl	clrprog
 8898              	.LVL763:
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8899              		.loc 1 2891 37 view .LVU2721
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8900              		.loc 1 2891 4 is_stmt 0 view .LVU2722
 8901 07fc DDE7     		b	.L821
 8902              	.L825:
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8903              		.loc 1 2890 25 is_stmt 1 view .LVU2723
 8904 07fe FFF7FEFF 		bl	reset
 8905              	.LVL764:
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8906              		.loc 1 2890 34 view .LVU2724
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8907              		.loc 1 2890 4 is_stmt 0 view .LVU2725
 8908 0802 DAE7     		b	.L821
 8909              	.L826:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8910              		.loc 1 2889 25 is_stmt 1 view .LVU2726
 8911 0804 FFF7FEFF 		bl	clrall
 8912              	.LVL765:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8913              		.loc 1 2889 35 view .LVU2727
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8914              		.loc 1 2889 4 is_stmt 0 view .LVU2728
 8915 0808 D7E7     		b	.L821
 8916              	.LVL766:
 8917              	.L1086:
ARM GAS  /tmp/ccwxoOej.s 			page 266


2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8918              		.loc 1 2889 4 view .LVU2729
 8919              	.LBE976:
 8920              	.LBE1016:
 8921              	.LBE1418:
 8922              	.LBE1486:
 8923              	.LBB1487:
3587:src/keys.c    **** 	  c = nd_opcode;
 8924              		.loc 1 3587 7 is_stmt 1 view .LVU2730
3587:src/keys.c    **** 	  c = nd_opcode;
 8925              		.loc 1 3587 10 is_stmt 0 view .LVU2731
 8926 080a 15F0FF0F 		tst	r5, #255
 8927 080e 7FF49EAE 		bne	.L1089
3591:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8928              		.loc 1 3591 4 is_stmt 1 view .LVU2732
 8929              	.LVL767:
 8930              	.LBB1464:
 8931              	.LBI1464:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8932              		.loc 1 552 13 view .LVU2733
 8933              	.LBB1465:
 553:src/keys.c    **** 		return;
 8934              		.loc 1 553 2 view .LVU2734
 553:src/keys.c    **** 		return;
 8935              		.loc 1 553 6 is_stmt 0 view .LVU2735
 8936 0812 FFF7FEFF 		bl	is_bad_cmdline
 8937              	.LVL768:
 553:src/keys.c    **** 		return;
 8938              		.loc 1 553 5 view .LVU2736
 8939 0816 0546     		mov	r5, r0
 8940 0818 0028     		cmp	r0, #0
 8941 081a 40F0DD82 		bne	.L1364
 8942 081e 2046     		mov	r0, r4
 8943 0820 FFF7FEFF 		bl	init_arg.part.0
 8944              	.LVL769:
 8945              	.LBE1465:
 8946              	.LBE1464:
3592:src/keys.c    **** 	}
 8947              		.loc 1 3592 6 view .LVU2737
 8948 0824 3324     		movs	r4, #51
 8949              	.LVL770:
3592:src/keys.c    **** 	}
 8950              		.loc 1 3592 6 view .LVU2738
 8951 0826 3368     		ldr	r3, [r6]
 8952 0828 44E4     		b	.L794
 8953              	.LVL771:
 8954              	.L1334:
3592:src/keys.c    **** 	}
 8955              		.loc 1 3592 6 view .LVU2739
 8956              	.LBE1487:
 8957              	.LBB1488:
 8958              	.LBB1419:
3246:src/keys.c    **** #else
 8959              		.loc 1 3246 47 view .LVU2740
 8960 082a DFF87881 		ldr	r8, .L1423+40
 8961 082e 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
3246:src/keys.c    **** #else
ARM GAS  /tmp/ccwxoOej.s 			page 267


 8962              		.loc 1 3246 36 view .LVU2741
 8963 0832 43EA0201 		orr	r1, r3, r2
 8964 0836 11F0FF0F 		tst	r1, #255
 8965 083a 7FF4B4AC 		bne	.L806
3246:src/keys.c    **** #else
 8966              		.loc 1 3246 76 view .LVU2742
 8967 083e 5549     		ldr	r1, .L1423+24
 8968 0840 D8F81420 		ldr	r2, [r8, #20]
 8969 0844 1142     		tst	r1, r2
 8970 0846 7FF4B9AC 		bne	.L816
3252:src/keys.c    **** 	stack_restore();
 8971              		.loc 1 3252 7 is_stmt 1 view .LVU2743
3252:src/keys.c    **** 	stack_restore();
 8972              		.loc 1 3252 11 is_stmt 0 view .LVU2744
 8973 084a DFF854B1 		ldr	fp, .L1423+36
 8974 084e DBF80030 		ldr	r3, [fp]
 8975              	.LVL772:
3252:src/keys.c    **** 	stack_restore();
 8976              		.loc 1 3252 11 view .LVU2745
 8977 0852 93F8AC3F 		ldrb	r3, [r3, #4012]	@ zero_extendqisi2
3252:src/keys.c    **** 	stack_restore();
 8978              		.loc 1 3252 10 view .LVU2746
 8979 0856 03F04102 		and	r2, r3, #65
 8980 085a 412A     		cmp	r2, #65
 8981 085c 00F06E86 		beq	.L1365
 8982              	.LVL773:
 8983              	.L808:
3258:src/keys.c    ****       return STATE_UNFINISHED;
 8984              		.loc 1 3258 7 is_stmt 1 view .LVU2747
 8985 0860 FFF7FEFF 		bl	soft_init_state
 8986              	.LVL774:
3259:src/keys.c    ****     }
 8987              		.loc 1 3259 7 view .LVU2748
3259:src/keys.c    ****     }
 8988              		.loc 1 3259 14 is_stmt 0 view .LVU2749
 8989 0864 3324     		movs	r4, #51
 8990 0866 3368     		ldr	r3, [r6]
 8991 0868 24E4     		b	.L794
 8992              	.LVL775:
 8993              	.L1337:
3282:src/keys.c    **** 
 8994              		.loc 1 3282 3 is_stmt 1 view .LVU2750
3282:src/keys.c    **** 
 8995              		.loc 1 3282 10 is_stmt 0 view .LVU2751
 8996 086a E0B2     		uxtb	r0, r4
 8997 086c FFF7FEFF 		bl	process_arg
 8998              	.LVL776:
 8999 0870 0446     		mov	r4, r0
 9000              	.LVL777:
3282:src/keys.c    **** 
 9001              		.loc 1 3282 10 view .LVU2752
 9002 0872 B7E5     		b	.L828
 9003              	.LVL778:
 9004              	.L1340:
3291:src/keys.c    **** 
 9005              		.loc 1 3291 3 is_stmt 1 view .LVU2753
 9006              	.LBB1017:
ARM GAS  /tmp/ccwxoOej.s 			page 268


 9007              	.LBI1017:
2347:src/keys.c    **** 	int r = State2.test;
 9008              		.loc 1 2347 12 view .LVU2754
 9009              	.LBB1018:
2348:src/keys.c    **** 	int cmpx = State2.cmplx;
 9010              		.loc 1 2348 2 view .LVU2755
2349:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9011              		.loc 1 2349 2 view .LVU2756
 9012              	.LBB1019:
 9013              	.LBB1020:
 9014              	.LBB1021:
 9015              	.LBB1022:
 143:src/keys.c    **** }
 9016              		.loc 1 143 23 is_stmt 0 view .LVU2757
 9017 0874 484B     		ldr	r3, .L1423+28
 9018              	.LBE1022:
 9019              	.LBE1021:
 234:src/keys.c    **** }
 9020              		.loc 1 234 28 view .LVU2758
 9021 0876 DFF824C1 		ldr	ip, .L1423+32
 9022              	.LBB1026:
 9023              	.LBB1023:
 143:src/keys.c    **** }
 9024              		.loc 1 143 23 view .LVU2759
 9025 087a E4B2     		uxtb	r4, r4
 9026              	.LVL779:
 143:src/keys.c    **** }
 9027              		.loc 1 143 23 view .LVU2760
 9028              	.LBE1023:
 9029              	.LBE1026:
 9030              	.LBE1020:
 9031              	.LBE1019:
2351:src/keys.c    **** 
 9032              		.loc 1 2351 44 view .LVU2761
 9033 087c 11F0020F 		tst	r1, #2
 9034              	.LBB1031:
 9035              	.LBB1029:
 9036              	.LBB1027:
 9037              	.LBB1024:
 143:src/keys.c    **** }
 9038              		.loc 1 143 23 view .LVU2762
 9039 0880 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9040              	.LBE1024:
 9041              	.LBE1027:
 234:src/keys.c    **** }
 9042              		.loc 1 234 28 view .LVU2763
 9043 0882 1CF803C0 		ldrb	ip, [ip, r3]	@ zero_extendqisi2
 9044              	.LBE1029:
 9045              	.LBE1031:
2349:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9046              		.loc 1 2349 19 view .LVU2764
 9047 0886 C1F3400E 		ubfx	lr, r1, #1, #1
 9048              	.LVL780:
2350:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 9049              		.loc 1 2350 2 is_stmt 1 view .LVU2765
 9050              	.LBB1032:
 9051              	.LBI1019:
ARM GAS  /tmp/ccwxoOej.s 			page 269


 210:src/keys.c    **** {
 9052              		.loc 1 210 14 view .LVU2766
 9053              	.LBB1030:
 212:src/keys.c    ****     // K00 - K05
 9054              		.loc 1 212 3 view .LVU2767
 234:src/keys.c    **** }
 9055              		.loc 1 234 3 view .LVU2768
 9056              	.LBB1028:
 9057              	.LBI1021:
 131:src/keys.c    **** {
 9058              		.loc 1 131 12 view .LVU2769
 9059              	.LBB1025:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9060              		.loc 1 133 2 view .LVU2770
 143:src/keys.c    **** }
 9061              		.loc 1 143 2 view .LVU2771
 143:src/keys.c    **** }
 9062              		.loc 1 143 2 is_stmt 0 view .LVU2772
 9063              	.LBE1025:
 9064              	.LBE1028:
 9065              	.LBE1030:
 9066              	.LBE1032:
2350:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 9067              		.loc 1 2350 15 view .LVU2773
 9068 088a 2CF08003 		bic	r3, ip, #128
 9069              	.LVL781:
2351:src/keys.c    **** 
 9070              		.loc 1 2351 2 is_stmt 1 view .LVU2774
2351:src/keys.c    **** 
 9071              		.loc 1 2351 44 is_stmt 0 view .LVU2775
 9072 088e 00F0CE80 		beq	.L1366
 9073              	.LVL782:
2353:src/keys.c    **** 	State2.cmplx = 0;
 9074              		.loc 1 2353 2 is_stmt 1 view .LVU2776
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9075              		.loc 1 2354 15 is_stmt 0 view .LVU2777
 9076 0892 60F34101 		bfi	r1, r0, #1, #1
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9077              		.loc 1 2355 5 view .LVU2778
 9078 0896 642B     		cmp	r3, #100
2353:src/keys.c    **** 	State2.cmplx = 0;
 9079              		.loc 1 2353 14 view .LVU2779
 9080 0898 4FF00700 		mov	r0, #7
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9081              		.loc 1 2354 15 view .LVU2780
 9082 089c 88F81510 		strb	r1, [r8, #21]
2353:src/keys.c    **** 	State2.cmplx = 0;
 9083              		.loc 1 2353 14 view .LVU2781
 9084 08a0 88F80F00 		strb	r0, [r8, #15]
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9085              		.loc 1 2354 2 is_stmt 1 view .LVU2782
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9086              		.loc 1 2355 2 view .LVU2783
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9087              		.loc 1 2355 5 is_stmt 0 view .LVU2784
 9088 08a4 00F0FF84 		beq	.L1168
2351:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 270


 9089              		.loc 1 2351 44 view .LVU2785
 9090 08a8 4FF0340B 		mov	fp, #52
 9091              	.LVL783:
 9092              	.L1125:
2356:src/keys.c    **** 		// Lettered register
 9093              		.loc 1 2356 5 view .LVU2786
 9094 08ac 7F2B     		cmp	r3, #127
2351:src/keys.c    **** 
 9095              		.loc 1 2351 60 view .LVU2787
 9096 08ae D344     		add	fp, fp, r10
2356:src/keys.c    **** 		// Lettered register
 9097              		.loc 1 2356 2 is_stmt 1 view .LVU2788
2356:src/keys.c    **** 		// Lettered register
 9098              		.loc 1 2356 5 is_stmt 0 view .LVU2789
 9099 08b0 00F03781 		beq	.L860
 9100              	.LVL784:
2356:src/keys.c    **** 		// Lettered register
 9101              		.loc 1 2356 18 view .LVU2790
 9102 08b4 632B     		cmp	r3, #99
 9103 08b6 40F25781 		bls	.L861
2356:src/keys.c    **** 		// Lettered register
 9104              		.loc 1 2356 37 view .LVU2791
 9105 08ba 6F2B     		cmp	r3, #111
 9106 08bc 00F23181 		bhi	.L860
2358:src/keys.c    **** 			if (n == regI_idx)
 9107              		.loc 1 2358 3 is_stmt 1 view .LVU2792
2358:src/keys.c    **** 			if (n == regI_idx)
 9108              		.loc 1 2358 6 is_stmt 0 view .LVU2793
 9109 08c0 BEF1000F 		cmp	lr, #0
 9110 08c4 00F0B082 		beq	.L862
2358:src/keys.c    **** 			if (n == regI_idx)
 9111              		.loc 1 2358 12 view .LVU2794
 9112 08c8 1CF0010F 		tst	ip, #1
 9113 08cc 00F0AC82 		beq	.L862
2359:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9114              		.loc 1 2359 4 is_stmt 1 view .LVU2795
2359:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9115              		.loc 1 2359 7 is_stmt 0 view .LVU2796
 9116 08d0 6D2B     		cmp	r3, #109
 9117 08d2 40F03581 		bne	.L863
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 9118              		.loc 1 2360 5 is_stmt 1 view .LVU2797
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 9119              		.loc 1 2360 30 is_stmt 0 view .LVU2798
 9120 08d6 0AF12904 		add	r4, r10, #41
 9121              	.LVL785:
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 9122              		.loc 1 2360 30 view .LVU2799
 9123 08da 83E5     		b	.L828
 9124              	.LVL786:
 9125              	.L1096:
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 9126              		.loc 1 2360 30 view .LVU2800
 9127              	.LBE1018:
 9128              	.LBE1017:
 9129              	.LBE1419:
 9130              	.LBE1488:
ARM GAS  /tmp/ccwxoOej.s 			page 271


 9131              	.LBB1489:
3631:src/keys.c    ****       }
 9132              		.loc 1 3631 4 is_stmt 1 view .LVU2801
3631:src/keys.c    ****       }
 9133              		.loc 1 3631 9 is_stmt 0 view .LVU2802
 9134 08dc 0025     		movs	r5, #0
 9135 08de 00F8015C 		strb	r5, [r0, #-1]
 9136 08e2 1AE6     		b	.L1321
 9137              	.LVL787:
 9138              	.L1338:
3631:src/keys.c    ****       }
 9139              		.loc 1 3631 9 view .LVU2803
 9140              	.LBE1489:
 9141              	.LBB1490:
 9142              	.LBB1420:
3285:src/keys.c    **** 
 9143              		.loc 1 3285 3 is_stmt 1 view .LVU2804
 9144              	.LBB1046:
 9145              	.LBI1046:
1709:src/keys.c    **** 	int pc = -1;
 9146              		.loc 1 1709 12 view .LVU2805
 9147              	.LBB1047:
1710:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 9148              		.loc 1 1710 2 view .LVU2806
1711:src/keys.c    **** 
 9149              		.loc 1 1711 2 view .LVU2807
 9150              	.LBB1048:
 9151              	.LBI1048:
 210:src/keys.c    **** {
 9152              		.loc 1 210 14 view .LVU2808
 9153              	.LBB1049:
 212:src/keys.c    ****     // K00 - K05
 9154              		.loc 1 212 3 view .LVU2809
 234:src/keys.c    **** }
 9155              		.loc 1 234 3 view .LVU2810
 9156              	.LBB1050:
 9157              	.LBI1050:
 131:src/keys.c    **** {
 9158              		.loc 1 131 12 view .LVU2811
 9159              	.LBB1051:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9160              		.loc 1 133 2 view .LVU2812
 143:src/keys.c    **** }
 9161              		.loc 1 143 2 view .LVU2813
 143:src/keys.c    **** }
 9162              		.loc 1 143 23 is_stmt 0 view .LVU2814
 9163 08e4 2C4B     		ldr	r3, .L1423+28
 9164              	.LBE1051:
 9165              	.LBE1050:
 234:src/keys.c    **** }
 9166              		.loc 1 234 28 view .LVU2815
 9167 08e6 2D4A     		ldr	r2, .L1423+32
 9168 08e8 E1B2     		uxtb	r1, r4
 9169              	.LVL788:
 9170              	.LBB1053:
 9171              	.LBB1052:
 143:src/keys.c    **** }
ARM GAS  /tmp/ccwxoOej.s 			page 272


 9172              		.loc 1 143 23 view .LVU2816
 9173 08ea 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 9174              	.LBE1052:
 9175              	.LBE1053:
 234:src/keys.c    **** }
 9176              		.loc 1 234 28 view .LVU2817
 9177 08ec D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 9178              	.LVL789:
 234:src/keys.c    **** }
 9179              		.loc 1 234 28 view .LVU2818
 9180              	.LBE1049:
 9181              	.LBE1048:
1713:src/keys.c    **** 		// Digit 0 - 9
 9182              		.loc 1 1713 2 is_stmt 1 view .LVU2819
1713:src/keys.c    **** 		// Digit 0 - 9
 9183              		.loc 1 1713 5 is_stmt 0 view .LVU2820
 9184 08ee 0928     		cmp	r0, #9
 9185 08f0 40F23281 		bls	.L1367
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9186              		.loc 1 1718 7 is_stmt 1 view .LVU2821
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9187              		.loc 1 1718 18 is_stmt 0 view .LVU2822
 9188 08f4 20F08000 		bic	r0, r0, #128
 9189              	.LVL790:
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9190              		.loc 1 1718 10 view .LVU2823
 9191 08f8 6428     		cmp	r0, #100
 9192 08fa 00F07782 		beq	.L1368
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 9193              		.loc 1 1719 7 is_stmt 1 view .LVU2824
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 9194              		.loc 1 1719 10 is_stmt 0 view .LVU2825
 9195 08fe 6528     		cmp	r0, #101
 9196 0900 00F08B82 		beq	.L1369
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 9197              		.loc 1 1720 7 is_stmt 1 view .LVU2826
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 9198              		.loc 1 1720 10 is_stmt 0 view .LVU2827
 9199 0904 6628     		cmp	r0, #102
 9200 0906 00F0A382 		beq	.L1370
1721:src/keys.c    **** #endif
 9201              		.loc 1 1721 7 is_stmt 1 view .LVU2828
1721:src/keys.c    **** #endif
 9202              		.loc 1 1721 10 is_stmt 0 view .LVU2829
 9203 090a 6728     		cmp	r0, #103
 9204 090c 00F0FD83 		beq	.L1371
1723:src/keys.c    **** 		// A - D
 9205              		.loc 1 1723 7 is_stmt 1 view .LVU2830
1723:src/keys.c    **** 		// A - D
 9206              		.loc 1 1723 10 is_stmt 0 view .LVU2831
 9207 0910 0329     		cmp	r1, #3
 9208 0912 40F2EA84 		bls	.L1372
1728:src/keys.c    **** 		// .
 9209              		.loc 1 1728 7 is_stmt 1 view .LVU2832
1728:src/keys.c    **** 		// .
 9210              		.loc 1 1728 10 is_stmt 0 view .LVU2833
 9211 0916 2629     		cmp	r1, #38
ARM GAS  /tmp/ccwxoOej.s 			page 273


 9212 0918 00F0FE84 		beq	.L1373
1733:src/keys.c    **** 		// ENTER - short circuit processing
 9213              		.loc 1 1733 7 is_stmt 1 view .LVU2834
1733:src/keys.c    **** 		// ENTER - short circuit processing
 9214              		.loc 1 1733 10 is_stmt 0 view .LVU2835
 9215 091c 0C29     		cmp	r1, #12
 9216 091e 00F0E184 		beq	.L1374
1737:src/keys.c    **** 		// backspace
 9217              		.loc 1 1737 7 is_stmt 1 view .LVU2836
1737:src/keys.c    **** 		// backspace
 9218              		.loc 1 1737 10 is_stmt 0 view .LVU2837
 9219 0922 1029     		cmp	r1, #16
 9220 0924 00F0E985 		beq	.L1375
1746:src/keys.c    **** 		// up
 9221              		.loc 1 1746 7 is_stmt 1 view .LVU2838
1746:src/keys.c    **** 		// up
 9222              		.loc 1 1746 10 is_stmt 0 view .LVU2839
 9223 0928 1229     		cmp	r1, #18
 9224 092a 00F07887 		beq	.L1376
1756:src/keys.c    **** 		// down
 9225              		.loc 1 1756 7 is_stmt 1 view .LVU2840
1756:src/keys.c    **** 		// down
 9226              		.loc 1 1756 10 is_stmt 0 view .LVU2841
 9227 092e 1829     		cmp	r1, #24
 9228 0930 7FF43EAF 		bne	.L1322
1758:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 9229              		.loc 1 1758 3 is_stmt 1 view .LVU2842
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9230              		.loc 1 1759 18 is_stmt 0 view .LVU2843
 9231 0934 1A4C     		ldr	r4, .L1423+36
 9232              	.LVL791:
1758:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 9233              		.loc 1 1758 3 view .LVU2844
 9234 0936 0120     		movs	r0, #1
 9235 0938 FFF7FEFF 		bl	update_program_bounds
 9236              	.LVL792:
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9237              		.loc 1 1759 3 is_stmt 1 view .LVU2845
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9238              		.loc 1 1759 18 is_stmt 0 view .LVU2846
 9239 093c 2368     		ldr	r3, [r4]
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9240              		.loc 1 1759 11 view .LVU2847
 9241 093e 0021     		movs	r1, #0
 9242 0940 B3F8EE0F 		ldrh	r0, [r3, #4078]
 9243 0944 FFF7FEFF 		bl	do_inc
 9244              	.LVL793:
1760:src/keys.c    **** 			rawpc = 1;
 9245              		.loc 1 1760 3 is_stmt 1 view .LVU2848
1760:src/keys.c    **** 			rawpc = 1;
 9246              		.loc 1 1760 6 is_stmt 0 view .LVU2849
 9247 0948 20B9     		cbnz	r0, .L840
1760:src/keys.c    **** 			rawpc = 1;
 9248              		.loc 1 1760 21 view .LVU2850
 9249 094a 2368     		ldr	r3, [r4]
1760:src/keys.c    **** 			rawpc = 1;
 9250              		.loc 1 1760 18 view .LVU2851
ARM GAS  /tmp/ccwxoOej.s 			page 274


 9251 094c 5888     		ldrh	r0, [r3, #2]
 9252              	.LVL794:
1760:src/keys.c    **** 			rawpc = 1;
 9253              		.loc 1 1760 18 view .LVU2852
 9254 094e 0038     		subs	r0, r0, #0
 9255 0950 18BF     		it	ne
 9256 0952 0120     		movne	r0, #1
 9257              	.LVL795:
 9258              	.L840:
1766:src/keys.c    **** fin2:		State2.gtodot = 0;
 9259              		.loc 1 1766 7 is_stmt 1 view .LVU2853
 9260 0954 FFF7FEFF 		bl	set_pc
 9261              	.LVL796:
 9262              	.L844:
1767:src/keys.c    **** 		State2.digval = 0;
 9263              		.loc 1 1767 8 view .LVU2854
1767:src/keys.c    **** 		State2.digval = 0;
 9264              		.loc 1 1767 22 is_stmt 0 view .LVU2855
 9265 0958 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9266 095c 3368     		ldr	r3, [r6]
1768:src/keys.c    **** 		State2.numdigit = 0;
 9267              		.loc 1 1768 17 view .LVU2856
 9268 095e 0022     		movs	r2, #0
1767:src/keys.c    **** 		State2.digval = 0;
 9269              		.loc 1 1767 22 view .LVU2857
 9270 0960 6FF30001 		bfc	r1, #0, #1
 9271 0964 88F81510 		strb	r1, [r8, #21]
1768:src/keys.c    **** 		State2.numdigit = 0;
 9272              		.loc 1 1768 3 is_stmt 1 view .LVU2858
1768:src/keys.c    **** 		State2.numdigit = 0;
 9273              		.loc 1 1768 17 is_stmt 0 view .LVU2859
 9274 0968 A8F80820 		strh	r2, [r8, #8]	@ movhi
1769:src/keys.c    **** 	}
 9275              		.loc 1 1769 3 is_stmt 1 view .LVU2860
1769:src/keys.c    **** 	}
 9276              		.loc 1 1769 19 is_stmt 0 view .LVU2861
 9277 096c 88F80B20 		strb	r2, [r8, #11]
 9278              	.LBE1047:
 9279              	.LBE1046:
3285:src/keys.c    **** 
 9280              		.loc 1 3285 10 view .LVU2862
 9281 0970 3324     		movs	r4, #51
 9282 0972 FFF79FBB 		b	.L794
 9283              	.LVL797:
 9284              	.L1166:
3285:src/keys.c    **** 
 9285              		.loc 1 3285 10 view .LVU2863
 9286              	.LBE1420:
 9287              	.LBE1490:
 9288              	.LBB1491:
 9289 0976 1C46     		mov	r4, r3
 9290              	.LVL798:
3285:src/keys.c    **** 
 9291              		.loc 1 3285 10 view .LVU2864
 9292 0978 FFF7BABB 		b	.L1106
 9293              	.L1424:
 9294              		.align	2
ARM GAS  /tmp/ccwxoOej.s 			page 275


 9295              	.L1423:
 9296 097c 00000000 		.word	NonProgrammable
 9297 0980 00000000 		.word	TraceBuffer
 9298 0984 00000000 		.word	DispMsg
 9299 0988 00000000 		.word	OpCode
 9300 098c 00000000 		.word	OpCodeDisplayPending
 9301 0990 00000000 		.word	JustDisplayed
 9302 0994 00040800 		.word	525312
 9303 0998 00000000 		.word	.LANCHOR6
 9304 099c 00000000 		.word	.LANCHOR5
 9305 09a0 00000000 		.word	main_ram
 9306 09a4 00000000 		.word	StateWhileOn
 9307              	.LVL799:
 9308              	.L1339:
3285:src/keys.c    **** 
 9309              		.loc 1 3285 10 view .LVU2865
 9310              	.LBE1491:
 9311              	.LBB1492:
 9312              	.LBB1421:
3288:src/keys.c    **** 
 9313              		.loc 1 3288 3 is_stmt 1 view .LVU2866
 9314              	.LBB1065:
 9315              	.LBB1066:
1599:src/keys.c    **** 	State2.dot = 0;
 9316              		.loc 1 1599 15 is_stmt 0 view .LVU2867
 9317 09a8 21F06203 		bic	r3, r1, #98
 9318              	.LBE1066:
 9319              	.LBE1065:
3288:src/keys.c    **** 
 9320              		.loc 1 3288 10 view .LVU2868
 9321 09ac E4B2     		uxtb	r4, r4
 9322              	.LVL800:
 9323              	.LBB1079:
 9324              	.LBI1065:
1589:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 9325              		.loc 1 1589 12 is_stmt 1 view .LVU2869
 9326              	.LBB1076:
1590:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 9327              		.loc 1 1590 2 view .LVU2870
1595:src/keys.c    **** 	int f = State2.dot;
 9328              		.loc 1 1595 2 view .LVU2871
1599:src/keys.c    **** 	State2.dot = 0;
 9329              		.loc 1 1599 15 is_stmt 0 view .LVU2872
 9330 09ae 88F81530 		strb	r3, [r8, #21]
1595:src/keys.c    **** 	int f = State2.dot;
 9331              		.loc 1 1595 20 view .LVU2873
 9332 09b2 C1F34009 		ubfx	r9, r1, #1, #1
 9333              	.LVL801:
1596:src/keys.c    **** 
 9334              		.loc 1 1596 2 is_stmt 1 view .LVU2874
1596:src/keys.c    **** 
 9335              		.loc 1 1596 16 is_stmt 0 view .LVU2875
 9336 09b6 C1F3801B 		ubfx	fp, r1, #6, #1
 9337              	.LVL802:
1598:src/keys.c    **** 	State2.cmplx = 0;
 9338              		.loc 1 1598 2 is_stmt 1 view .LVU2876
1599:src/keys.c    **** 	State2.dot = 0;
ARM GAS  /tmp/ccwxoOej.s 			page 276


 9339              		.loc 1 1599 2 view .LVU2877
1600:src/keys.c    **** #ifdef DM42
 9340              		.loc 1 1600 2 view .LVU2878
1602:src/keys.c    **** #endif
 9341              		.loc 1 1602 2 view .LVU2879
 9342              	.LBB1067:
 9343              	.LBI1067:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9344              		.loc 1 114 13 view .LVU2880
 9345              	.LBE1067:
 9346              	.LBE1076:
 9347              	.LBE1079:
 9348              	.LBE1421:
 9349              	.LBE1492:
 115:src/keys.c    **** }
 9350              		.loc 1 115 2 view .LVU2881
 9351              	.LBB1493:
 9352              	.LBB1422:
 9353              	.LBB1080:
 9354              	.LBB1077:
 9355              	.LBB1074:
 9356              	.LBB1068:
 9357              	.LBI1068:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9358              		.loc 1 104 20 view .LVU2882
 9359              	.LBB1069:
 105:src/keys.c    **** 	State2.shifts = shift;
 9360              		.loc 1 105 2 view .LVU2883
 9361              	.LBB1070:
 9362              	.LBI1070:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9363              		.loc 1 96 13 view .LVU2884
 9364              	.LBB1071:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9365              		.loc 1 97 2 view .LVU2885
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9366              		.loc 1 97 18 is_stmt 0 view .LVU2886
 9367 09ba FFF7FEFF 		bl	shift_down
 9368              	.LVL803:
  98:src/keys.c    **** }
 9369              		.loc 1 98 2 is_stmt 1 view .LVU2887
 9370              	.LBE1071:
 9371              	.LBE1070:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9372              		.loc 1 106 2 view .LVU2888
 9373              	.LBE1069:
 9374              	.LBE1068:
 9375              	.LBE1074:
1604:src/keys.c    **** 
 9376              		.loc 1 1604 2 is_stmt 0 view .LVU2889
 9377 09be 292C     		cmp	r4, #41
 9378              	.LBB1075:
 9379              	.LBB1073:
 9380              	.LBB1072:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9381              		.loc 1 106 16 view .LVU2890
 9382 09c0 88F810A0 		strb	r10, [r8, #16]
ARM GAS  /tmp/ccwxoOej.s 			page 277


 108:src/keys.c    **** }
 9383              		.loc 1 108 2 is_stmt 1 view .LVU2891
 9384              	.LVL804:
 108:src/keys.c    **** }
 9385              		.loc 1 108 2 is_stmt 0 view .LVU2892
 9386              	.LBE1072:
 9387              	.LBE1073:
 9388              	.LBE1075:
1604:src/keys.c    **** 
 9389              		.loc 1 1604 2 is_stmt 1 view .LVU2893
 9390 09c4 00F08A83 		beq	.L849
 9391 09c8 15D8     		bhi	.L850
 9392 09ca 013C     		subs	r4, r4, #1
 9393              	.LVL805:
1604:src/keys.c    **** 
 9394              		.loc 1 1604 2 is_stmt 0 view .LVU2894
 9395 09cc E3B2     		uxtb	r3, r4
 9396 09ce 022B     		cmp	r3, #2
 9397 09d0 3FF6EEAE 		bhi	.L1322
1609:src/keys.c    **** 
 9398              		.loc 1 1609 3 is_stmt 1 view .LVU2895
1609:src/keys.c    **** 
 9399              		.loc 1 1609 54 is_stmt 0 view .LVU2896
 9400 09d4 C34B     		ldr	r3, .L1425
 9401 09d6 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 9402 09da 03EB4404 		add	r4, r3, r4, lsl #1
 9403              	.LVL806:
1609:src/keys.c    **** 
 9404              		.loc 1 1609 27 view .LVU2897
 9405 09de B9F1000F 		cmp	r9, #0
1609:src/keys.c    **** 
 9406              		.loc 1 1609 54 view .LVU2898
 9407 09e2 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1609:src/keys.c    **** 
 9408              		.loc 1 1609 27 view .LVU2899
 9409 09e6 14BF     		ite	ne
 9410 09e8 4FF4A063 		movne	r3, #1280
 9411 09ec 4FF40073 		moveq	r3, #512
1609:src/keys.c    **** 
 9412              		.loc 1 1609 37 view .LVU2900
 9413 09f0 1C43     		orrs	r4, r4, r3
 9414 09f2 2546     		mov	r5, r4
 9415 09f4 AEE5     		b	.L855
 9416              	.LVL807:
 9417              	.L850:
1604:src/keys.c    **** 
 9418              		.loc 1 1604 2 view .LVU2901
 9419 09f6 2D2C     		cmp	r4, #45
 9420 09f8 7FF4DAAE 		bne	.L1322
1612:src/keys.c    **** 		goto stay;
 9421              		.loc 1 1612 3 is_stmt 1 view .LVU2902
 9422 09fc 89F00109 		eor	r9, r9, #1
 9423              	.LVL808:
1613:src/keys.c    **** 
 9424              		.loc 1 1613 3 view .LVU2903
 9425              	.L856:
1628:src/keys.c    **** 		State2.cmplx = cmplx;
ARM GAS  /tmp/ccwxoOej.s 			page 278


 9426              		.loc 1 1628 4 view .LVU2904
1629:src/keys.c    **** 		State2.dot = f;
 9427              		.loc 1 1629 3 view .LVU2905
1630:src/keys.c    **** 		break;
 9428              		.loc 1 1630 3 view .LVU2906
1629:src/keys.c    **** 		State2.dot = f;
 9429              		.loc 1 1629 16 is_stmt 0 view .LVU2907
 9430 0a00 4FEA4902 		lsl	r2, r9, #1
 9431 0a04 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9432 0a08 3368     		ldr	r3, [r6]
 9433 0a0a 42F02002 		orr	r2, r2, #32
 9434 0a0e 42EA8B12 		orr	r2, r2, fp, lsl #6
 9435 0a12 02F06202 		and	r2, r2, #98
 9436 0a16 21F06201 		bic	r1, r1, #98
 9437 0a1a 0A43     		orrs	r2, r2, r1
 9438 0a1c 88F81520 		strb	r2, [r8, #21]
1631:src/keys.c    **** 
 9439              		.loc 1 1631 3 is_stmt 1 view .LVU2908
1636:src/keys.c    **** }
 9440              		.loc 1 1636 9 is_stmt 0 view .LVU2909
 9441 0a20 3324     		movs	r4, #51
 9442              	.LVL809:
1631:src/keys.c    **** 
 9443              		.loc 1 1631 3 view .LVU2910
 9444 0a22 FFF747BB 		b	.L794
 9445              	.LVL810:
 9446              	.L1335:
1631:src/keys.c    **** 
 9447              		.loc 1 1631 3 view .LVU2911
 9448              	.LBE1077:
 9449              	.LBE1080:
3265:src/keys.c    **** 		return STATE_IGNORE;
 9450              		.loc 1 3265 3 is_stmt 1 view .LVU2912
3265:src/keys.c    **** 		return STATE_IGNORE;
 9451              		.loc 1 3265 15 is_stmt 0 view .LVU2913
 9452 0a26 1560     		str	r5, [r2]
3266:src/keys.c    **** 	}
 9453              		.loc 1 3266 3 is_stmt 1 view .LVU2914
 9454              	.LVL811:
3266:src/keys.c    **** 	}
 9455              		.loc 1 3266 3 is_stmt 0 view .LVU2915
 9456              	.LBE1422:
 9457              	.LBE1493:
3677:src/keys.c    **** #ifndef CONSOLE
 9458              		.loc 1 3677 3 is_stmt 1 view .LVU2916
 9459              	.LBB1494:
 9460              	.LBB1423:
3266:src/keys.c    **** 	}
 9461              		.loc 1 3266 10 is_stmt 0 view .LVU2917
 9462 0a28 3224     		movs	r4, #50
 9463 0a2a FFF746BB 		b	.L814
 9464              	.LVL812:
 9465              	.L1366:
 9466              	.LBB1081:
 9467              	.LBB1037:
2353:src/keys.c    **** 	State2.cmplx = 0;
 9468              		.loc 1 2353 2 is_stmt 1 view .LVU2918
ARM GAS  /tmp/ccwxoOej.s 			page 279


2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9469              		.loc 1 2354 15 is_stmt 0 view .LVU2919
 9470 0a2e 6EF34101 		bfi	r1, lr, #1, #1
2353:src/keys.c    **** 	State2.cmplx = 0;
 9471              		.loc 1 2353 14 view .LVU2920
 9472 0a32 0720     		movs	r0, #7
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9473              		.loc 1 2355 5 view .LVU2921
 9474 0a34 642B     		cmp	r3, #100
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9475              		.loc 1 2354 15 view .LVU2922
 9476 0a36 88F81510 		strb	r1, [r8, #21]
2353:src/keys.c    **** 	State2.cmplx = 0;
 9477              		.loc 1 2353 14 view .LVU2923
 9478 0a3a 88F80F00 		strb	r0, [r8, #15]
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9479              		.loc 1 2354 2 is_stmt 1 view .LVU2924
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9480              		.loc 1 2355 2 view .LVU2925
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9481              		.loc 1 2355 5 is_stmt 0 view .LVU2926
 9482 0a3e 00F03684 		beq	.L1169
2351:src/keys.c    **** 
 9483              		.loc 1 2351 44 view .LVU2927
 9484 0a42 4FF02D0B 		mov	fp, #45
 9485 0a46 31E7     		b	.L1125
 9486              	.LVL813:
 9487              	.L1167:
2351:src/keys.c    **** 
 9488              		.loc 1 2351 44 view .LVU2928
 9489              	.LBE1037:
 9490              	.LBE1081:
 9491              	.LBE1423:
 9492              	.LBE1494:
 9493              	.LBB1495:
 9494 0a48 2C46     		mov	r4, r5
 9495              	.LVL814:
2351:src/keys.c    **** 
 9496              		.loc 1 2351 44 view .LVU2929
 9497 0a4a FFF751BB 		b	.L1106
 9498              	.LVL815:
 9499              	.L1341:
2351:src/keys.c    **** 
 9500              		.loc 1 2351 44 view .LVU2930
 9501              	.LBE1495:
 9502              	.LBB1496:
 9503              	.LBB1424:
3294:src/keys.c    **** 
 9504              		.loc 1 3294 3 is_stmt 1 view .LVU2931
 9505              	.LBB1082:
 9506              	.LBB1083:
2916:src/keys.c    **** 
 9507              		.loc 1 2916 12 is_stmt 0 view .LVU2932
 9508 0a4e A64B     		ldr	r3, .L1425+4
 9509 0a50 1B68     		ldr	r3, [r3]
 9510 0a52 B3F8DE3F 		ldrh	r3, [r3, #4062]
 9511              	.LBE1083:
ARM GAS  /tmp/ccwxoOej.s 			page 280


 9512              	.LBE1082:
3294:src/keys.c    **** 
 9513              		.loc 1 3294 10 view .LVU2933
 9514 0a56 E4B2     		uxtb	r4, r4
 9515              	.LVL816:
 9516              	.LBB1102:
 9517              	.LBI1082:
2914:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9518              		.loc 1 2914 12 is_stmt 1 view .LVU2934
 9519              	.LBB1094:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9520              		.loc 1 2915 2 view .LVU2935
2916:src/keys.c    **** 
 9521              		.loc 1 2916 2 view .LVU2936
2916:src/keys.c    **** 
 9522              		.loc 1 2916 31 is_stmt 0 view .LVU2937
 9523 0a58 13F4004F 		tst	r3, #32768
 9524 0a5c 14BF     		ite	ne
 9525 0a5e 0B23     		movne	r3, #11
 9526 0a60 0A23     		moveq	r3, #10
 9527              	.LVL817:
2918:src/keys.c    **** 		if (--n < -2)
 9528              		.loc 1 2918 2 is_stmt 1 view .LVU2938
2918:src/keys.c    **** 		if (--n < -2)
 9529              		.loc 1 2918 5 is_stmt 0 view .LVU2939
 9530 0a62 122C     		cmp	r4, #18
 9531 0a64 00F0BD81 		beq	.L1377
2922:src/keys.c    **** 		if (++n > max)
 9532              		.loc 1 2922 7 is_stmt 1 view .LVU2940
2922:src/keys.c    **** 		if (++n > max)
 9533              		.loc 1 2922 10 is_stmt 0 view .LVU2941
 9534 0a68 182C     		cmp	r4, #24
 9535 0a6a 00F0E481 		beq	.L1378
2926:src/keys.c    **** 		State2.status = 0;
 9536              		.loc 1 2926 7 is_stmt 1 view .LVU2942
2926:src/keys.c    **** 		State2.status = 0;
 9537              		.loc 1 2926 10 is_stmt 0 view .LVU2943
 9538 0a6e 102C     		cmp	r4, #16
 9539 0a70 00F0CA84 		beq	.L1379
 9540              	.LBB1084:
2931:src/keys.c    **** 		if (nn <= 9)
 9541              		.loc 1 2931 3 is_stmt 1 view .LVU2944
 9542              	.LVL818:
 9543              	.LBB1085:
 9544              	.LBI1085:
 210:src/keys.c    **** {
 9545              		.loc 1 210 14 view .LVU2945
 9546              	.LBB1086:
 212:src/keys.c    ****     // K00 - K05
 9547              		.loc 1 212 3 view .LVU2946
 234:src/keys.c    **** }
 9548              		.loc 1 234 3 view .LVU2947
 9549              	.LBB1087:
 9550              	.LBI1087:
 131:src/keys.c    **** {
 9551              		.loc 1 131 12 view .LVU2948
 9552              	.LBB1088:
ARM GAS  /tmp/ccwxoOej.s 			page 281


 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9553              		.loc 1 133 2 view .LVU2949
 143:src/keys.c    **** }
 9554              		.loc 1 143 2 view .LVU2950
 143:src/keys.c    **** }
 9555              		.loc 1 143 23 is_stmt 0 view .LVU2951
 9556 0a74 9D49     		ldr	r1, .L1425+8
 9557              	.LBE1088:
 9558              	.LBE1087:
 234:src/keys.c    **** }
 9559              		.loc 1 234 28 view .LVU2952
 9560 0a76 9E48     		ldr	r0, .L1425+12
 9561              	.LBB1090:
 9562              	.LBB1089:
 143:src/keys.c    **** }
 9563              		.loc 1 143 23 view .LVU2953
 9564 0a78 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9565 0a7a 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 9566 0a7c 01F07F01 		and	r1, r1, #127
 9567              	.LVL819:
 143:src/keys.c    **** }
 9568              		.loc 1 143 23 view .LVU2954
 9569              	.LBE1089:
 9570              	.LBE1090:
 9571              	.LBE1086:
 9572              	.LBE1085:
2932:src/keys.c    **** 			n = nn;
 9573              		.loc 1 2932 3 is_stmt 1 view .LVU2955
2932:src/keys.c    **** 			n = nn;
 9574              		.loc 1 2932 6 is_stmt 0 view .LVU2956
 9575 0a80 0929     		cmp	r1, #9
 9576 0a82 40F2CF82 		bls	.L1133
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9577              		.loc 1 2934 11 view .LVU2957
 9578 0a86 7029     		cmp	r1, #112
 9579              	.LBE1084:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9580              		.loc 1 2915 6 view .LVU2958
 9581 0a88 A2F10302 		sub	r2, r2, #3
 9582              	.LVL820:
 9583              	.LBB1091:
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9584              		.loc 1 2934 8 is_stmt 1 view .LVU2959
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9585              		.loc 1 2934 11 is_stmt 0 view .LVU2960
 9586 0a8c 00F05486 		beq	.L1380
2936:src/keys.c    **** 			n = 10; 
 9587              		.loc 1 2936 8 is_stmt 1 view .LVU2961
 9588              	.LBE1091:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9589              		.loc 1 2915 6 is_stmt 0 view .LVU2962
 9590 0a90 7F29     		cmp	r1, #127
 9591 0a92 0CBF     		ite	eq
 9592 0a94 1346     		moveq	r3, r2
 9593              	.LVL821:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9594              		.loc 1 2915 6 view .LVU2963
ARM GAS  /tmp/ccwxoOej.s 			page 282


 9595 0a96 0A23     		movne	r3, #10
 9596              	.LVL822:
 9597              	.L877:
2939:src/keys.c    **** 
 9598              		.loc 1 2939 2 is_stmt 1 view .LVU2964
2939:src/keys.c    **** 
 9599              		.loc 1 2939 20 is_stmt 0 view .LVU2965
 9600 0a98 0333     		adds	r3, r3, #3
 9601              	.LVL823:
2939:src/keys.c    **** 
 9602              		.loc 1 2939 16 view .LVU2966
 9603 0a9a 88F80C30 		strb	r3, [r8, #12]
2941:src/keys.c    **** }
 9604              		.loc 1 2941 2 is_stmt 1 view .LVU2967
 9605              	.LBE1094:
 9606              	.LBE1102:
3294:src/keys.c    **** 
 9607              		.loc 1 3294 10 is_stmt 0 view .LVU2968
 9608 0a9e 3324     		movs	r4, #51
 9609              	.LVL824:
3294:src/keys.c    **** 
 9610              		.loc 1 3294 10 view .LVU2969
 9611 0aa0 3368     		ldr	r3, [r6]
 9612              	.LVL825:
 9613              	.LBB1103:
 9614              	.LBB1095:
2941:src/keys.c    **** }
 9615              		.loc 1 2941 9 view .LVU2970
 9616 0aa2 FFF707BB 		b	.L794
 9617              	.LVL826:
 9618              	.L1345:
2941:src/keys.c    **** }
 9619              		.loc 1 2941 9 view .LVU2971
 9620              	.LBE1095:
 9621              	.LBE1103:
3317:src/keys.c    **** 
 9622              		.loc 1 3317 3 is_stmt 1 view .LVU2972
 9623              	.LBB1104:
 9624              	.LBB1105:
 9625              	.LBB1106:
 9626              	.LBB1107:
 9627              	.LBB1108:
 9628              	.LBB1109:
 9629              	.LBB1110:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9630              		.loc 1 97 18 is_stmt 0 view .LVU2973
 9631 0aa6 FFF7FEFF 		bl	shift_down
 9632              	.LVL827:
 9633              	.LBE1110:
 9634              	.LBE1109:
 9635              	.LBE1108:
 9636              	.LBE1107:
 9637              	.LBE1106:
 9638              	.LBE1105:
 9639              	.LBE1104:
3317:src/keys.c    **** 
 9640              		.loc 1 3317 10 view .LVU2974
ARM GAS  /tmp/ccwxoOej.s 			page 283


 9641 0aaa E4B2     		uxtb	r4, r4
 9642              	.LVL828:
 9643              	.LBB1133:
 9644              	.LBI1104:
1643:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 9645              		.loc 1 1643 12 is_stmt 1 view .LVU2975
 9646              	.LBB1127:
1644:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 9647              		.loc 1 1644 2 view .LVU2976
1649:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 9648              		.loc 1 1649 2 view .LVU2977
1653:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 9649              		.loc 1 1653 2 view .LVU2978
 9650              	.LBB1119:
 9651              	.LBI1106:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9652              		.loc 1 114 13 view .LVU2979
 9653              	.LBE1119:
 9654              	.LBE1127:
 9655              	.LBE1133:
 9656              	.LBE1424:
 9657              	.LBE1496:
 115:src/keys.c    **** }
 9658              		.loc 1 115 2 view .LVU2980
 9659              	.LBB1497:
 9660              	.LBB1425:
 9661              	.LBB1134:
 9662              	.LBB1128:
 9663              	.LBB1120:
 9664              	.LBB1116:
 9665              	.LBI1107:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9666              		.loc 1 104 20 view .LVU2981
 9667              	.LBB1113:
 105:src/keys.c    **** 	State2.shifts = shift;
 9668              		.loc 1 105 2 view .LVU2982
 9669              	.LBB1112:
 9670              	.LBI1109:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9671              		.loc 1 96 13 view .LVU2983
 9672              	.LBB1111:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9673              		.loc 1 97 2 view .LVU2984
  98:src/keys.c    **** }
 9674              		.loc 1 98 2 view .LVU2985
  98:src/keys.c    **** }
 9675              		.loc 1 98 52 is_stmt 0 view .LVU2986
 9676 0aac 8346     		mov	fp, r0
 9677 0aae 08B9     		cbnz	r0, .L887
 9678 0ab0 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 9679              	.L887:
 9680              	.LVL829:
  98:src/keys.c    **** }
 9681              		.loc 1 98 52 view .LVU2987
 9682              	.LBE1111:
 9683              	.LBE1112:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccwxoOej.s 			page 284


 9684              		.loc 1 106 2 is_stmt 1 view .LVU2988
 9685              	.LBE1113:
 9686              	.LBE1116:
 9687              	.LBE1120:
1656:src/keys.c    **** #ifdef DM42
 9688              		.loc 1 1656 15 is_stmt 0 view .LVU2989
 9689 0ab4 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9690              	.LBB1121:
 9691              	.LBB1117:
 9692              	.LBB1114:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9693              		.loc 1 106 16 view .LVU2990
 9694 0ab8 0023     		movs	r3, #0
 9695              	.LBE1114:
 9696              	.LBE1117:
 9697              	.LBE1121:
1656:src/keys.c    **** #ifdef DM42
 9698              		.loc 1 1656 15 view .LVU2991
 9699 0aba 63F38202 		bfi	r2, r3, #2, #1
1654:src/keys.c    **** 
 9700              		.loc 1 1654 23 view .LVU2992
 9701 0abe ABF1010A 		sub	r10, fp, #1
1656:src/keys.c    **** #ifdef DM42
 9702              		.loc 1 1656 15 view .LVU2993
 9703 0ac2 88F81520 		strb	r2, [r8, #21]
 9704              	.LBB1122:
 9705              	.LBB1118:
 9706              	.LBB1115:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9707              		.loc 1 106 16 view .LVU2994
 9708 0ac6 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9709              		.loc 1 108 2 is_stmt 1 view .LVU2995
 9710              	.LVL830:
 108:src/keys.c    **** }
 9711              		.loc 1 108 2 is_stmt 0 view .LVU2996
 9712              	.LBE1115:
 9713              	.LBE1118:
 9714              	.LBE1122:
1654:src/keys.c    **** 
 9715              		.loc 1 1654 2 is_stmt 1 view .LVU2997
1654:src/keys.c    **** 
 9716              		.loc 1 1654 23 is_stmt 0 view .LVU2998
 9717 0aca BAFA8AFA 		clz	r10, r10
1658:src/keys.c    **** 	display_current_menu ();
 9718              		.loc 1 1658 2 view .LVU2999
 9719 0ace FFF7FEFF 		bl	set_last_menu
 9720              	.LVL831:
1659:src/keys.c    **** #endif
 9721              		.loc 1 1659 2 view .LVU3000
 9722 0ad2 FFF7FEFF 		bl	display_current_menu
 9723              	.LVL832:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9724              		.loc 1 1662 5 view .LVU3001
 9725 0ad6 2D2C     		cmp	r4, #45
1654:src/keys.c    **** 
 9726              		.loc 1 1654 23 view .LVU3002
ARM GAS  /tmp/ccwxoOej.s 			page 285


 9727 0ad8 4FEA5A1A 		lsr	r10, r10, #5
 9728              	.LVL833:
1656:src/keys.c    **** #ifdef DM42
 9729              		.loc 1 1656 2 is_stmt 1 view .LVU3003
1658:src/keys.c    **** 	display_current_menu ();
 9730              		.loc 1 1658 2 view .LVU3004
1659:src/keys.c    **** #endif
 9731              		.loc 1 1659 2 view .LVU3005
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9732              		.loc 1 1662 2 view .LVU3006
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9733              		.loc 1 1662 5 is_stmt 0 view .LVU3007
 9734 0adc 00F08D81 		beq	.L1381
1671:src/keys.c    **** 	
 9735              		.loc 1 1671 2 is_stmt 1 view .LVU3008
1671:src/keys.c    **** 	
 9736              		.loc 1 1671 5 is_stmt 0 view .LVU3009
 9737 0ae0 BBF1000F 		cmp	fp, #0
 9738 0ae4 3FF464AE 		beq	.L1322
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9739              		.loc 1 1673 2 is_stmt 1 view .LVU3010
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9740              		.loc 1 1673 15 is_stmt 0 view .LVU3011
 9741 0ae8 A31F     		subs	r3, r4, #6
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9742              		.loc 1 1673 5 view .LVU3012
 9743 0aea DAB2     		uxtb	r2, r3
 9744 0aec 022A     		cmp	r2, #2
 9745 0aee 40F2B681 		bls	.L1382
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9746              		.loc 1 1676 2 is_stmt 1 view .LVU3013
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9747              		.loc 1 1676 15 is_stmt 0 view .LVU3014
 9748 0af2 0E3C     		subs	r4, r4, #14
 9749              	.LVL834:
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9750              		.loc 1 1676 5 view .LVU3015
 9751 0af4 E3B2     		uxtb	r3, r4
 9752 0af6 012B     		cmp	r3, #1
 9753 0af8 3FF65AAE 		bhi	.L1322
1677:src/keys.c    **** 
 9754              		.loc 1 1677 3 is_stmt 1 view .LVU3016
 9755 0afc 7D4A     		ldr	r2, .L1425+16
 9756              	.LBB1123:
 9757              	.LBB1124:
 742:src/keys.c    **** }
 9758              		.loc 1 742 15 is_stmt 0 view .LVU3017
 9759 0afe 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 9760 0b02 3368     		ldr	r3, [r6]
 9761              	.LBE1124:
 9762              	.LBE1123:
1677:src/keys.c    **** 
 9763              		.loc 1 1677 3 view .LVU3018
 9764 0b04 02EB4402 		add	r2, r2, r4, lsl #1
1679:src/keys.c    **** }
 9765              		.loc 1 1679 9 view .LVU3019
 9766 0b08 3324     		movs	r4, #51
ARM GAS  /tmp/ccwxoOej.s 			page 286


 9767              	.LVL835:
1677:src/keys.c    **** 
 9768              		.loc 1 1677 3 view .LVU3020
 9769 0b0a 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
 9770              	.LVL836:
 9771              	.LBB1126:
 9772              	.LBI1123:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9773              		.loc 1 741 13 is_stmt 1 view .LVU3021
 9774              	.LBB1125:
 742:src/keys.c    **** }
 9775              		.loc 1 742 2 view .LVU3022
 742:src/keys.c    **** }
 9776              		.loc 1 742 15 is_stmt 0 view .LVU3023
 9777 0b0e 9142     		cmp	r1, r2
 9778 0b10 08BF     		it	eq
 9779 0b12 0022     		moveq	r2, #0
 9780              	.LVL837:
 742:src/keys.c    **** }
 9781              		.loc 1 742 15 view .LVU3024
 9782 0b14 88F81120 		strb	r2, [r8, #17]
 743:src/keys.c    **** 
 9783              		.loc 1 743 1 view .LVU3025
 9784 0b18 FFF7CCBA 		b	.L794
 9785              	.LVL838:
 9786              	.L866:
 743:src/keys.c    **** 
 9787              		.loc 1 743 1 view .LVU3026
 9788              	.LBE1125:
 9789              	.LBE1126:
 9790              	.LBE1128:
 9791              	.LBE1134:
 9792              	.LBB1135:
 9793              	.LBB1038:
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9794              		.loc 1 2375 7 is_stmt 1 view .LVU3027
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9795              		.loc 1 2375 10 is_stmt 0 view .LVU3028
 9796 0b1c 092B     		cmp	r3, #9
 9797 0b1e 40F2BD80 		bls	.L868
 9798              	.L860:
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9799              		.loc 1 2375 19 view .LVU3029
 9800 0b22 2C2C     		cmp	r4, #44
 9801 0b24 00F0BA80 		beq	.L868
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9802              		.loc 1 2375 35 view .LVU3030
 9803 0b28 262C     		cmp	r4, #38
 9804 0b2a 00F0B780 		beq	.L868
2381:src/keys.c    **** 	case K11:					// tests vs register
 9805              		.loc 1 2381 2 is_stmt 1 view .LVU3031
 9806 0b2e 0C2C     		cmp	r4, #12
 9807 0b30 00F06982 		beq	.L871
 9808 0b34 102C     		cmp	r4, #16
 9809 0b36 3FF43BAE 		beq	.L1322
 9810 0b3a 072C     		cmp	r4, #7
 9811 0b3c 00F06382 		beq	.L871
ARM GAS  /tmp/ccwxoOej.s 			page 287


 9812              	.L863:
2395:src/keys.c    **** 	State2.cmplx = cmpx;
 9813              		.loc 1 2395 2 view .LVU3032
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9814              		.loc 1 2396 15 is_stmt 0 view .LVU3033
 9815 0b40 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9816 0b44 3368     		ldr	r3, [r6]
2395:src/keys.c    **** 	State2.cmplx = cmpx;
 9817              		.loc 1 2395 14 view .LVU3034
 9818 0b46 88F80FA0 		strb	r10, [r8, #15]
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9819              		.loc 1 2396 2 is_stmt 1 view .LVU3035
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9820              		.loc 1 2396 15 is_stmt 0 view .LVU3036
 9821 0b4a 6EF34102 		bfi	r2, lr, #1, #1
 9822 0b4e 88F81520 		strb	r2, [r8, #21]
2397:src/keys.c    **** }
 9823              		.loc 1 2397 2 is_stmt 1 view .LVU3037
2397:src/keys.c    **** }
 9824              		.loc 1 2397 9 is_stmt 0 view .LVU3038
 9825 0b52 3324     		movs	r4, #51
 9826              	.LVL839:
2397:src/keys.c    **** }
 9827              		.loc 1 2397 9 view .LVU3039
 9828 0b54 FFF7AEBA 		b	.L794
 9829              	.LVL840:
 9830              	.L1367:
2397:src/keys.c    **** }
 9831              		.loc 1 2397 9 view .LVU3040
 9832              	.LBE1038:
 9833              	.LBE1135:
 9834              	.LBB1136:
 9835              	.LBB1056:
1715:src/keys.c    **** 	}
 9836              		.loc 1 1715 3 is_stmt 1 view .LVU3041
1715:src/keys.c    **** 	}
 9837              		.loc 1 1715 8 is_stmt 0 view .LVU3042
 9838 0b58 FFF7FEFF 		bl	gtodot_digit
 9839              	.LVL841:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9840              		.loc 1 1764 2 is_stmt 1 view .LVU3043
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9841              		.loc 1 1764 5 is_stmt 0 view .LVU3044
 9842 0b5c 0028     		cmp	r0, #0
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9843              		.loc 1 1764 5 view .LVU3045
 9844 0b5e FFF627AE 		blt	.L1322
 9845              	.L831:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9846              		.loc 1 1765 3 is_stmt 1 view .LVU3046
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9847              		.loc 1 1765 11 is_stmt 0 view .LVU3047
 9848 0b62 FFF7FEFF 		bl	find_user_pc
 9849              	.LVL842:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9850              		.loc 1 1765 11 view .LVU3048
 9851 0b66 F5E6     		b	.L840
ARM GAS  /tmp/ccwxoOej.s 			page 288


 9852              	.LVL843:
 9853              	.L861:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9854              		.loc 1 1765 11 view .LVU3049
 9855              	.LBE1056:
 9856              	.LBE1136:
 9857              	.LBB1137:
 9858              	.LBB1039:
2367:src/keys.c    **** 		// Special 0
 9859              		.loc 1 2367 7 is_stmt 1 view .LVU3050
2367:src/keys.c    **** 		// Special 0
 9860              		.loc 1 2367 10 is_stmt 0 view .LVU3051
 9861 0b68 002B     		cmp	r3, #0
 9862 0b6a 40F09A86 		bne	.L864
2369:src/keys.c    **** 	}
 9863              		.loc 1 2369 3 is_stmt 1 view .LVU3052
2369:src/keys.c    **** 	}
 9864              		.loc 1 2369 18 is_stmt 0 view .LVU3053
 9865 0b6e BEF1000F 		cmp	lr, #0
 9866 0b72 14BF     		ite	ne
 9867 0b74 2524     		movne	r4, #37
 9868              	.LVL844:
2369:src/keys.c    **** 	}
 9869              		.loc 1 2369 18 view .LVU3054
 9870 0b76 1724     		moveq	r4, #23
2369:src/keys.c    **** 	}
 9871              		.loc 1 2369 47 view .LVU3055
 9872 0b78 5444     		add	r4, r4, r10
 9873 0b7a 33E4     		b	.L828
 9874              	.LVL845:
 9875              	.L1346:
2369:src/keys.c    **** 	}
 9876              		.loc 1 2369 47 view .LVU3056
 9877              	.LBE1039:
 9878              	.LBE1137:
 9879              	.LBB1138:
 9880              	.LBB859:
 277:src/keys.c    **** 			switch (c) {
 9881              		.loc 1 277 3 is_stmt 1 view .LVU3057
 277:src/keys.c    **** 			switch (c) {
 9882              		.loc 1 277 6 is_stmt 0 view .LVU3058
 9883 0b7c 032B     		cmp	r3, #3
 9884 0b7e 28D0     		beq	.L1383
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 9885              		.loc 1 294 3 is_stmt 1 view .LVU3059
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 9886              		.loc 1 294 6 is_stmt 0 view .LVU3060
 9887 0b80 022B     		cmp	r3, #2
 9888 0b82 00F0A983 		beq	.L1384
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9889              		.loc 1 296 3 is_stmt 1 view .LVU3061
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9890              		.loc 1 296 6 is_stmt 0 view .LVU3062
 9891 0b86 012B     		cmp	r3, #1
 9892 0b88 7FF479AB 		bne	.L914
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9893              		.loc 1 296 27 view .LVU3063
ARM GAS  /tmp/ccwxoOej.s 			page 289


 9894 0b8c 0C2C     		cmp	r4, #12
 9895 0b8e 7FF476AB 		bne	.L914
 297:src/keys.c    **** 				SET_REAL;
 9896              		.loc 1 297 4 is_stmt 1 view .LVU3064
 297:src/keys.c    **** 				SET_REAL;
 9897              		.loc 1 297 7 is_stmt 0 view .LVU3065
 9898 0b92 10F0060F 		tst	r0, #6
 9899 0b96 00F03786 		beq	.L1385
 301:src/keys.c    **** 				CmdLineLength = 0;
 9900              		.loc 1 301 9 is_stmt 1 view .LVU3066
 301:src/keys.c    **** 				CmdLineLength = 0;
 9901              		.loc 1 301 12 is_stmt 0 view .LVU3067
 9902 0b9a 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 9903              	.LVL846:
 301:src/keys.c    **** 				CmdLineLength = 0;
 9904              		.loc 1 301 12 view .LVU3068
 9905 0b9e 002B     		cmp	r3, #0
 9906 0ba0 00F02E86 		beq	.L1140
 302:src/keys.c    **** 				CmdLineEex = 0;
 9907              		.loc 1 302 5 is_stmt 1 view .LVU3069
 303:src/keys.c    **** 				CmdLineDot = 0;
 9908              		.loc 1 303 5 view .LVU3070
 304:src/keys.c    **** 			}
 9909              		.loc 1 304 5 view .LVU3071
 302:src/keys.c    **** 				CmdLineEex = 0;
 9910              		.loc 1 302 19 is_stmt 0 view .LVU3072
 9911 0ba4 0023     		movs	r3, #0
 9912 0ba6 A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 9913              		.loc 1 304 16 view .LVU3073
 9914 0baa 88F81E30 		strb	r3, [r8, #30]
 9915              	.LVL847:
 304:src/keys.c    **** 			}
 9916              		.loc 1 304 16 view .LVU3074
 9917              	.LBE859:
 9918              	.LBE1138:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 9919              		.loc 1 3325 2 is_stmt 1 view .LVU3075
 9920              	.LBB1139:
 9921              	.LBB860:
 306:src/keys.c    **** 		}
 9922              		.loc 1 306 11 is_stmt 0 view .LVU3076
 9923 0bae 4FF0100A 		mov	r10, #16
 9924              	.LVL848:
 9925              	.L897:
 306:src/keys.c    **** 		}
 9926              		.loc 1 306 11 view .LVU3077
 9927              	.LBE860:
 9928              	.LBE1139:
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 9929              		.loc 1 3326 3 is_stmt 1 view .LVU3078
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 9930              		.loc 1 3326 7 is_stmt 0 view .LVU3079
 9931 0bb2 FFF7FEFF 		bl	is_bad_cmdline
 9932              	.LVL849:
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 9933              		.loc 1 3326 6 view .LVU3080
ARM GAS  /tmp/ccwxoOej.s 			page 290


 9934 0bb6 0446     		mov	r4, r0
 9935 0bb8 0028     		cmp	r0, #0
 9936 0bba 7FF4F9AD 		bne	.L1322
3328:src/keys.c    **** 		init_cat( cat );
 9937              		.loc 1 3328 3 is_stmt 1 view .LVU3081
 9938 0bbe FFF7FEFF 		bl	init_cat
 9939              	.LVL850:
3329:src/keys.c    **** 		return STATE_UNFINISHED;
 9940              		.loc 1 3329 3 view .LVU3082
 9941 0bc2 5046     		mov	r0, r10
 9942 0bc4 FFF7FEFF 		bl	init_cat
 9943              	.LVL851:
3330:src/keys.c    **** 	}
 9944              		.loc 1 3330 3 view .LVU3083
 9945              	.LBE1425:
 9946              	.LBE1497:
3409:src/keys.c    ****   //print_debug(60,c);
 9947              		.loc 1 3409 7 is_stmt 0 view .LVU3084
 9948 0bc8 2546     		mov	r5, r4
 9949 0bca 3368     		ldr	r3, [r6]
 9950              	.LBB1498:
 9951              	.LBB1426:
3330:src/keys.c    **** 	}
 9952              		.loc 1 3330 10 view .LVU3085
 9953 0bcc 3324     		movs	r4, #51
 9954 0bce FFF771BA 		b	.L794
 9955              	.LVL852:
 9956              	.L1383:
 9957              	.LBB1140:
 9958              	.LBB861:
 278:src/keys.c    **** 				case K53:
 9959              		.loc 1 278 4 is_stmt 1 view .LVU3086
 9960 0bd2 221F     		subs	r2, r4, #4
 9961 0bd4 1D2A     		cmp	r2, #29
 9962 0bd6 3FF652AB 		bhi	.L914
 9963 0bda 0FF2080C 		adr	ip, .L898
 9964 0bde 5CF822F0 		ldr	pc, [ip, r2, lsl #2]
 9965 0be2 00BF     		.p2align 2
 9966              	.L898:
 9967 0be4 630C0000 		.word	.L901+1
 9968 0be8 770C0000 		.word	.L900+1
 9969 0bec 7F020000 		.word	.L914+1
 9970 0bf0 7F020000 		.word	.L914+1
 9971 0bf4 7F020000 		.word	.L914+1
 9972 0bf8 7F020000 		.word	.L914+1
 9973 0bfc 7F020000 		.word	.L914+1
 9974 0c00 7F020000 		.word	.L914+1
 9975 0c04 690C0000 		.word	.L899+1
 9976 0c08 7F020000 		.word	.L914+1
 9977 0c0c 7F020000 		.word	.L914+1
 9978 0c10 7F020000 		.word	.L914+1
 9979 0c14 7F020000 		.word	.L914+1
 9980 0c18 7F020000 		.word	.L914+1
 9981 0c1c 7F020000 		.word	.L914+1
 9982 0c20 7F020000 		.word	.L914+1
 9983 0c24 7F020000 		.word	.L914+1
 9984 0c28 7F020000 		.word	.L914+1
ARM GAS  /tmp/ccwxoOej.s 			page 291


 9985 0c2c 7F020000 		.word	.L914+1
 9986 0c30 7F020000 		.word	.L914+1
 9987 0c34 7F020000 		.word	.L914+1
 9988 0c38 7F020000 		.word	.L914+1
 9989 0c3c 7F020000 		.word	.L914+1
 9990 0c40 7F020000 		.word	.L914+1
 9991 0c44 7F020000 		.word	.L914+1
 9992 0c48 7F020000 		.word	.L914+1
 9993 0c4c 7F020000 		.word	.L914+1
 9994 0c50 7F020000 		.word	.L914+1
 9995 0c54 7F020000 		.word	.L914+1
 9996 0c58 5D0C0000 		.word	.L1137+1
 9997              		.p2align 1
 9998              	.L1137:
 280:src/keys.c    **** 				case K04:
 9999              		.loc 1 280 13 is_stmt 0 view .LVU3087
 10000 0c5c 4FF0020A 		mov	r10, #2
 10001 0c60 A7E7     		b	.L897
 10002              	.L901:
 277:src/keys.c    **** 			switch (c) {
 10003              		.loc 1 277 6 view .LVU3088
 10004 0c62 4FF0120A 		mov	r10, #18
 10005 0c66 A4E7     		b	.L897
 10006              	.L899:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 10007              		.loc 1 286 6 is_stmt 1 view .LVU3089
 286:src/keys.c    **** 						finish_cpx_entry(1);
 10008              		.loc 1 286 9 is_stmt 0 view .LVU3090
 10009 0c68 10F0060F 		tst	r0, #6
 10010 0c6c 40F0C185 		bne	.L1386
 289:src/keys.c    **** 				default:
 10011              		.loc 1 289 13 view .LVU3091
 10012 0c70 4FF0110A 		mov	r10, #17
 10013 0c74 9DE7     		b	.L897
 10014              	.L900:
 284:src/keys.c    **** 				case K20:
 10015              		.loc 1 284 6 is_stmt 1 view .LVU3092
 10016              	.LVL853:
 284:src/keys.c    **** 				case K20:
 10017              		.loc 1 284 6 is_stmt 0 view .LVU3093
 10018              	.LBE861:
 10019              	.LBE1140:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 10020              		.loc 1 3325 2 is_stmt 1 view .LVU3094
 10021              	.LBB1141:
 10022              	.LBB862:
 284:src/keys.c    **** 				case K20:
 10023              		.loc 1 284 13 is_stmt 0 view .LVU3095
 10024 0c76 4FF0090A 		mov	r10, #9
 10025 0c7a 9AE7     		b	.L897
 10026              	.LVL854:
 10027              	.L1347:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10028              		.loc 1 312 16 view .LVU3096
 10029 0c7c 032B     		cmp	r3, #3
 10030 0c7e 00F01A83 		beq	.L1387
 315:src/keys.c    ****     /*
ARM GAS  /tmp/ccwxoOej.s 			page 292


 10031              		.loc 1 315 3 is_stmt 1 view .LVU3097
 315:src/keys.c    ****     /*
 10032              		.loc 1 315 23 is_stmt 0 view .LVU3098
 10033 0c82 1D48     		ldr	r0, .L1425+20
 10034 0c84 D8F81420 		ldr	r2, [r8, #20]
 315:src/keys.c    ****     /*
 10035              		.loc 1 315 6 view .LVU3099
 10036 0c88 1042     		tst	r0, r2
 10037 0c8a 3FF4F8AA 		beq	.L914
 10038              	.L907:
 10039              	.LBB854:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 10040              		.loc 1 384 5 is_stmt 1 view .LVU3100
 408:src/keys.c    **** 
 10041              		.loc 1 408 5 view .LVU3101
 413:src/keys.c    ****     col = smap[shift];
 10042              		.loc 1 413 5 view .LVU3102
 10043              	.LVL855:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10044              		.loc 1 414 5 view .LVU3103
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10045              		.loc 1 414 15 is_stmt 0 view .LVU3104
 10046 0c8e 1B48     		ldr	r0, .L1425+24
 413:src/keys.c    ****     col = smap[shift];
 10047              		.loc 1 413 8 view .LVU3105
 10048 0c90 1B4A     		ldr	r2, .L1425+28
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10049              		.loc 1 414 9 view .LVU3106
 10050 0c92 10F803E0 		ldrb	lr, [r0, r3]	@ zero_extendqisi2
 10051              	.LVL856:
 415:src/keys.c    ****   }
 10052              		.loc 1 415 5 is_stmt 1 view .LVU3107
 415:src/keys.c    ****   }
 10053              		.loc 1 415 9 is_stmt 0 view .LVU3108
 10054 0c96 0820     		movs	r0, #8
 10055 0c98 FFF7E4BA 		b	.L909
 10056              	.LVL857:
 10057              	.L868:
 415:src/keys.c    ****   }
 10058              		.loc 1 415 9 view .LVU3109
 10059              	.LBE854:
 10060              	.LBE862:
 10061              	.LBE1141:
 10062              	.LBB1142:
 10063              	.LBB1040:
2377:src/keys.c    **** 		return process_arg(c);
 10064              		.loc 1 2377 3 is_stmt 1 view .LVU3110
 10065              	.LBB1033:
 10066              	.LBI1033:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10067              		.loc 1 552 13 view .LVU3111
 10068              	.LBB1034:
 553:src/keys.c    **** 		return;
 10069              		.loc 1 553 2 view .LVU3112
 553:src/keys.c    **** 		return;
 10070              		.loc 1 553 6 is_stmt 0 view .LVU3113
 10071 0c9c FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccwxoOej.s 			page 293


 10072              	.LVL858:
 553:src/keys.c    **** 		return;
 10073              		.loc 1 553 5 view .LVU3114
 10074 0ca0 18B9     		cbnz	r0, .L870
 10075 0ca2 5FFA8BF0 		uxtb	r0, fp
 10076 0ca6 FFF7FEFF 		bl	init_arg.part.0
 10077              	.LVL859:
 10078              	.L870:
 553:src/keys.c    **** 		return;
 10079              		.loc 1 553 5 view .LVU3115
 10080              	.LBE1034:
 10081              	.LBE1033:
2378:src/keys.c    **** 	}
 10082              		.loc 1 2378 3 is_stmt 1 view .LVU3116
2378:src/keys.c    **** 	}
 10083              		.loc 1 2378 10 is_stmt 0 view .LVU3117
 10084 0caa 2046     		mov	r0, r4
 10085 0cac FFF7FEFF 		bl	process_arg
 10086              	.LVL860:
 10087 0cb0 0446     		mov	r4, r0
 10088              	.LVL861:
2378:src/keys.c    **** 	}
 10089              		.loc 1 2378 10 view .LVU3118
 10090 0cb2 FFF797BB 		b	.L828
 10091              	.LVL862:
 10092              	.L1342:
2378:src/keys.c    **** 	}
 10093              		.loc 1 2378 10 view .LVU3119
 10094              	.LBE1040:
 10095              	.LBE1142:
3300:src/keys.c    **** 		return STATE_UNFINISHED;
 10096              		.loc 1 3300 3 is_stmt 1 view .LVU3120
 10097              	.LBB1143:
 10098              	.LBI1143:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10099              		.loc 1 121 13 view .LVU3121
 10100              	.LBB1144:
 122:src/keys.c    **** }
 10101              		.loc 1 122 2 view .LVU3122
 122:src/keys.c    **** }
 10102              		.loc 1 122 16 is_stmt 0 view .LVU3123
 10103 0cb6 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 10104 0cba 3368     		ldr	r3, [r6]
 10105 0cbc 013A     		subs	r2, r2, #1
 10106 0cbe 18BF     		it	ne
 10107 0cc0 0122     		movne	r2, #1
 10108 0cc2 88F81020 		strb	r2, [r8, #16]
 10109              	.LVL863:
 122:src/keys.c    **** }
 10110              		.loc 1 122 16 view .LVU3124
 10111              	.LBE1144:
 10112              	.LBE1143:
3301:src/keys.c    **** 	}
 10113              		.loc 1 3301 3 is_stmt 1 view .LVU3125
3301:src/keys.c    **** 	}
 10114              		.loc 1 3301 10 is_stmt 0 view .LVU3126
 10115 0cc6 3324     		movs	r4, #51
ARM GAS  /tmp/ccwxoOej.s 			page 294


 10116              	.LVL864:
3301:src/keys.c    **** 	}
 10117              		.loc 1 3301 10 view .LVU3127
 10118 0cc8 FFF7F4B9 		b	.L794
 10119              	.LVL865:
 10120              	.L1343:
3304:src/keys.c    **** 		return STATE_UNFINISHED;
 10121              		.loc 1 3304 3 is_stmt 1 view .LVU3128
 10122              	.LBB1145:
 10123              	.LBI1145:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10124              		.loc 1 121 13 view .LVU3129
 10125              	.LBB1146:
 122:src/keys.c    **** }
 10126              		.loc 1 122 2 view .LVU3130
 122:src/keys.c    **** }
 10127              		.loc 1 122 16 is_stmt 0 view .LVU3131
 10128 0ccc 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 10129 0cd0 3368     		ldr	r3, [r6]
 10130 0cd2 0229     		cmp	r1, #2
 10131 0cd4 18BF     		it	ne
 10132 0cd6 0222     		movne	r2, #2
 10133 0cd8 88F81020 		strb	r2, [r8, #16]
 10134              	.LVL866:
 122:src/keys.c    **** }
 10135              		.loc 1 122 16 view .LVU3132
 10136              	.LBE1146:
 10137              	.LBE1145:
3305:src/keys.c    **** 	}
 10138              		.loc 1 3305 3 is_stmt 1 view .LVU3133
3305:src/keys.c    **** 	}
 10139              		.loc 1 3305 10 is_stmt 0 view .LVU3134
 10140 0cdc 3324     		movs	r4, #51
 10141              	.LVL867:
3305:src/keys.c    **** 	}
 10142              		.loc 1 3305 10 view .LVU3135
 10143 0cde FFF7E9B9 		b	.L794
 10144              	.L1426:
 10145 0ce2 00BF     		.align	2
 10146              	.L1425:
 10147 0ce4 00000000 		.word	.LANCHOR19
 10148 0ce8 00000000 		.word	main_ram
 10149 0cec 00000000 		.word	.LANCHOR6
 10150 0cf0 00000000 		.word	.LANCHOR5
 10151 0cf4 00000000 		.word	.LANCHOR21
 10152 0cf8 00080800 		.word	526336
 10153 0cfc 00000000 		.word	.LANCHOR22
 10154 0d00 00000000 		.word	.LANCHOR16
 10155              	.LVL868:
 10156              	.L1349:
 10157              	.LBB1147:
 10158              	.LBB863:
 423:src/keys.c    ****       break;
 10159              		.loc 1 423 7 is_stmt 1 view .LVU3136
 423:src/keys.c    ****       break;
 10160              		.loc 1 423 11 is_stmt 0 view .LVU3137
 10161 0d04 7244     		add	r2, r2, lr
ARM GAS  /tmp/ccwxoOej.s 			page 295


 10162              	.LVL869:
 423:src/keys.c    ****       break;
 10163              		.loc 1 423 11 view .LVU3138
 10164 0d06 92F801A0 		ldrb	r10, [r2, #1]	@ zero_extendqisi2
 10165              	.LVL870:
 424:src/keys.c    ****     }
 10166              		.loc 1 424 7 is_stmt 1 view .LVU3139
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 10167              		.loc 1 427 3 view .LVU3140
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 10168              		.loc 1 427 6 is_stmt 0 view .LVU3141
 10169 0d0a 0A07     		lsls	r2, r1, #28
 10170 0d0c 40F19A80 		bpl	.L1388
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 10171              		.loc 1 427 20 view .LVU3142
 10172 0d10 AAF10B03 		sub	r3, r10, #11
 10173 0d14 042B     		cmp	r3, #4
 10174 0d16 7FF64CAF 		bls	.L897
 10175              	.LVL871:
 10176              	.L920:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 10177              		.loc 1 427 20 view .LVU3143
 10178              	.LBE863:
 10179              	.LBE1147:
3337:src/keys.c    **** 
 10180              		.loc 1 3337 3 is_stmt 1 view .LVU3144
 10181              	.LBB1148:
 10182              	.LBI977:
2810:src/keys.c    **** 	enum shifts shift = reset_shift();
 10183              		.loc 1 2810 12 view .LVU3145
 10184              	.LBB1007:
2811:src/keys.c    **** 	unsigned int ch = 0;
 10185              		.loc 1 2811 2 view .LVU3146
 10186              	.LBB981:
 10187              	.LBI981:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10188              		.loc 1 114 13 view .LVU3147
 10189              	.LBE981:
 10190              	.LBE1007:
 10191              	.LBE1148:
 10192              	.LBE1426:
 10193              	.LBE1498:
 115:src/keys.c    **** }
 10194              		.loc 1 115 2 view .LVU3148
 10195              	.LBB1499:
 10196              	.LBB1427:
 10197              	.LBB1149:
 10198              	.LBB1008:
 10199              	.LBB988:
 10200              	.LBB982:
 10201              	.LBI982:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10202              		.loc 1 104 20 view .LVU3149
 10203              	.LBB983:
 105:src/keys.c    **** 	State2.shifts = shift;
 10204              		.loc 1 105 2 view .LVU3150
 10205              	.LBB984:
ARM GAS  /tmp/ccwxoOej.s 			page 296


 10206              	.LBI984:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10207              		.loc 1 96 13 view .LVU3151
 10208              	.LBB985:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10209              		.loc 1 97 2 view .LVU3152
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10210              		.loc 1 97 18 is_stmt 0 view .LVU3153
 10211 0d1a FFF7FEFF 		bl	shift_down
 10212              	.LVL872:
  98:src/keys.c    **** }
 10213              		.loc 1 98 2 is_stmt 1 view .LVU3154
  98:src/keys.c    **** }
 10214              		.loc 1 98 52 is_stmt 0 view .LVU3155
 10215 0d1e 0146     		mov	r1, r0
 10216 0d20 08B9     		cbnz	r0, .L917
 10217 0d22 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 10218              	.L917:
 10219              	.LVL873:
  98:src/keys.c    **** }
 10220              		.loc 1 98 52 view .LVU3156
 10221              	.LBE985:
 10222              	.LBE984:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10223              		.loc 1 106 2 is_stmt 1 view .LVU3157
 10224              	.LBE983:
 10225              	.LBE982:
 10226              	.LBE988:
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 10227              		.loc 1 2815 5 is_stmt 0 view .LVU3158
 10228 0d26 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 10229              	.LBB989:
 10230              	.LBB987:
 10231              	.LBB986:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10232              		.loc 1 106 16 view .LVU3159
 10233 0d2a 0023     		movs	r3, #0
 10234 0d2c 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 10235              		.loc 1 108 2 is_stmt 1 view .LVU3160
 10236              	.LVL874:
 108:src/keys.c    **** }
 10237              		.loc 1 108 2 is_stmt 0 view .LVU3161
 10238              	.LBE986:
 10239              	.LBE987:
 10240              	.LBE989:
2812:src/keys.c    **** 	unsigned int opcode;
 10241              		.loc 1 2812 2 is_stmt 1 view .LVU3162
2813:src/keys.c    **** 
 10242              		.loc 1 2813 2 view .LVU3163
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 10243              		.loc 1 2815 2 view .LVU3164
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 10244              		.loc 1 2815 5 is_stmt 0 view .LVU3165
 10245 0d30 0028     		cmp	r0, #0
 10246 0d32 40F0F583 		bne	.L1389
2824:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
ARM GAS  /tmp/ccwxoOej.s 			page 297


 10247              		.loc 1 2824 2 is_stmt 1 view .LVU3166
 10248 0d36 102C     		cmp	r4, #16
 10249 0d38 00F04284 		beq	.L924
 10250 0d3c 242C     		cmp	r4, #36
 10251 0d3e 3FF425AD 		beq	.L925
 10252 0d42 0C2C     		cmp	r4, #12
 10253 0d44 00F05284 		beq	.L1390
 10254              	.L926:
2857:src/keys.c    **** 	if (ch == 0)
 10255              		.loc 1 2857 2 view .LVU3167
 10256              	.LBB990:
 10257              	.LBB991:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10258              		.loc 1 485 6 is_stmt 0 view .LVU3168
 10259 0d48 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10260              	.LVL875:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10261              		.loc 1 485 6 view .LVU3169
 10262              	.LBE991:
 10263              	.LBI990:
 435:src/keys.c    **** {
 10264              		.loc 1 435 12 is_stmt 1 view .LVU3170
 10265              	.LBB996:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 10266              		.loc 1 437 2 view .LVU3171
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10267              		.loc 1 485 2 view .LVU3172
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10268              		.loc 1 485 5 is_stmt 0 view .LVU3173
 10269 0d4c DB06     		lsls	r3, r3, #27
 10270 0d4e 03D5     		bpl	.L930
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 10271              		.loc 1 486 3 is_stmt 1 view .LVU3174
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 10272              		.loc 1 486 6 is_stmt 0 view .LVU3175
 10273 0d50 0029     		cmp	r1, #0
 10274 0d52 40F08685 		bne	.L1391
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 10275              		.loc 1 487 10 view .LVU3176
 10276 0d56 0421     		movs	r1, #4
 10277              	.LVL876:
 10278              	.L930:
 491:src/keys.c    **** }
 10279              		.loc 1 491 2 is_stmt 1 view .LVU3177
 10280              	.LBB992:
 10281              	.LBI992:
 131:src/keys.c    **** {
 10282              		.loc 1 131 12 view .LVU3178
 10283              	.LBB993:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10284              		.loc 1 133 2 view .LVU3179
 143:src/keys.c    **** }
 10285              		.loc 1 143 2 view .LVU3180
 143:src/keys.c    **** }
 10286              		.loc 1 143 23 is_stmt 0 view .LVU3181
 10287 0d58 E24B     		ldr	r3, .L1427
 10288              	.LBE993:
ARM GAS  /tmp/ccwxoOej.s 			page 298


 10289              	.LBE992:
 491:src/keys.c    **** }
 10290              		.loc 1 491 49 view .LVU3182
 10291 0d5a E34A     		ldr	r2, .L1427+4
 10292              	.LBB995:
 10293              	.LBB994:
 143:src/keys.c    **** }
 10294              		.loc 1 143 23 view .LVU3183
 10295 0d5c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10296              	.LBE994:
 10297              	.LBE995:
 491:src/keys.c    **** }
 10298              		.loc 1 491 49 view .LVU3184
 10299 0d5e 0620     		movs	r0, #6
 10300 0d60 00FB0323 		mla	r3, r0, r3, r2
 10301              	.LBE996:
 10302              	.LBE990:
2857:src/keys.c    **** 	if (ch == 0)
 10303              		.loc 1 2857 5 view .LVU3185
 10304 0d64 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 10305              	.LVL877:
2858:src/keys.c    **** 		return STATE_UNFINISHED;
 10306              		.loc 1 2858 2 is_stmt 1 view .LVU3186
2858:src/keys.c    **** 		return STATE_UNFINISHED;
 10307              		.loc 1 2858 5 is_stmt 0 view .LVU3187
 10308 0d66 002C     		cmp	r4, #0
 10309 0d68 3FF422AD 		beq	.L1322
 10310              	.L923:
2861:src/keys.c    **** 		State2.digval = ch;
 10311              		.loc 1 2861 2 is_stmt 1 view .LVU3188
2861:src/keys.c    **** 		State2.digval = ch;
 10312              		.loc 1 2861 12 is_stmt 0 view .LVU3189
 10313 0d6c 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2861:src/keys.c    **** 		State2.digval = ch;
 10314              		.loc 1 2861 5 view .LVU3190
 10315 0d70 002B     		cmp	r3, #0
 10316 0d72 00F01985 		beq	.L1392
2865:src/keys.c    **** 		State2.digval2 = ch;
 10317              		.loc 1 2865 9 is_stmt 1 view .LVU3191
2865:src/keys.c    **** 		State2.digval2 = ch;
 10318              		.loc 1 2865 12 is_stmt 0 view .LVU3192
 10319 0d76 012B     		cmp	r3, #1
 10320 0d78 00F09E85 		beq	.L1393
2870:src/keys.c    **** 
 10321              		.loc 1 2870 2 is_stmt 1 view .LVU3193
 10322              	.LBB998:
 10323              	.LBI998:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10324              		.loc 1 2803 13 view .LVU3194
 10325              	.LBB999:
2805:src/keys.c    **** 	if (! State2.alphas )
 10326              		.loc 1 2805 2 view .LVU3195
2805:src/keys.c    **** 	if (! State2.alphas )
 10327              		.loc 1 2805 15 is_stmt 0 view .LVU3196
 10328 0d7c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 10329              		.loc 1 2806 6 view .LVU3197
ARM GAS  /tmp/ccwxoOej.s 			page 299


 10330 0d80 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 10331              		.loc 1 2805 15 view .LVU3198
 10332 0d84 6FF3C302 		bfc	r2, #3, #1
 10333 0d88 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 10334              		.loc 1 2806 2 is_stmt 1 view .LVU3199
2806:src/keys.c    **** 		State2.alphashift = 0;
 10335              		.loc 1 2806 5 is_stmt 0 view .LVU3200
 10336 0d8c 13F00802 		ands	r2, r3, #8
2807:src/keys.c    **** }
 10337              		.loc 1 2807 3 is_stmt 1 view .LVU3201
2807:src/keys.c    **** }
 10338              		.loc 1 2807 21 is_stmt 0 view .LVU3202
 10339 0d90 04BF     		itt	eq
 10340 0d92 62F30413 		bfieq	r3, r2, #4, #1
 10341 0d96 88F81630 		strbeq	r3, [r8, #22]
 10342              	.LVL878:
 10343              	.L929:
2807:src/keys.c    **** }
 10344              		.loc 1 2807 21 view .LVU3203
 10345              	.LBE999:
 10346              	.LBE998:
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10347              		.loc 1 2873 2 is_stmt 1 view .LVU3204
2875:src/keys.c    **** }
 10348              		.loc 1 2875 2 view .LVU3205
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10349              		.loc 1 2873 21 is_stmt 0 view .LVU3206
 10350 0d9a 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2874:src/keys.c    **** 	return opcode;
 10351              		.loc 1 2874 17 view .LVU3207
 10352 0d9e B8F80810 		ldrh	r1, [r8, #8]
2874:src/keys.c    **** 	return opcode;
 10353              		.loc 1 2874 34 view .LVU3208
 10354 0da2 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10355              		.loc 1 2873 29 view .LVU3209
 10356 0da6 1B02     		lsls	r3, r3, #8
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10357              		.loc 1 2873 18 view .LVU3210
 10358 0da8 03F57043 		add	r3, r3, #61440
2874:src/keys.c    **** 	return opcode;
 10359              		.loc 1 2874 9 view .LVU3211
 10360 0dac 0B44     		add	r3, r3, r1
2874:src/keys.c    **** 	return opcode;
 10361              		.loc 1 2874 25 view .LVU3212
 10362 0dae 03EB0243 		add	r3, r3, r2, lsl #16
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10363              		.loc 1 2873 9 view .LVU3213
 10364 0db2 03EB0464 		add	r4, r3, r4, lsl #24
 10365              	.LVL879:
2875:src/keys.c    **** }
 10366              		.loc 1 2875 9 view .LVU3214
 10367 0db6 FFF715BB 		b	.L828
 10368              	.LVL880:
 10369              	.L1344:
ARM GAS  /tmp/ccwxoOej.s 			page 300


2875:src/keys.c    **** }
 10370              		.loc 1 2875 9 view .LVU3215
 10371              	.LBE1008:
 10372              	.LBE1149:
3308:src/keys.c    **** 		State2.arrow = 0;
 10373              		.loc 1 3308 3 is_stmt 1 view .LVU3216
 10374              	.LBB1150:
 10375              	.LBI1150:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10376              		.loc 1 121 13 view .LVU3217
 10377              	.LBB1151:
 122:src/keys.c    **** }
 10378              		.loc 1 122 2 view .LVU3218
 122:src/keys.c    **** }
 10379              		.loc 1 122 16 is_stmt 0 view .LVU3219
 10380 0dba 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 10381              	.LVL881:
 122:src/keys.c    **** }
 10382              		.loc 1 122 16 view .LVU3220
 10383 0dbe 3368     		ldr	r3, [r6]
 10384 0dc0 032C     		cmp	r4, #3
 10385              	.LBE1151:
 10386              	.LBE1150:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10387              		.loc 1 3309 16 view .LVU3221
 10388 0dc2 60F38201 		bfi	r1, r0, #2, #1
 10389              	.LBB1154:
 10390              	.LBB1152:
 122:src/keys.c    **** }
 10391              		.loc 1 122 16 view .LVU3222
 10392 0dc6 18BF     		it	ne
 10393 0dc8 0322     		movne	r2, #3
 10394              	.LBE1152:
 10395              	.LBE1154:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10396              		.loc 1 3309 16 view .LVU3223
 10397 0dca 88F81510 		strb	r1, [r8, #21]
 10398              	.LBB1155:
 10399              	.LBB1153:
 122:src/keys.c    **** }
 10400              		.loc 1 122 16 view .LVU3224
 10401 0dce 88F81020 		strb	r2, [r8, #16]
 10402              	.LVL882:
 122:src/keys.c    **** }
 10403              		.loc 1 122 16 view .LVU3225
 10404              	.LBE1153:
 10405              	.LBE1155:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10406              		.loc 1 3309 3 is_stmt 1 view .LVU3226
3310:src/keys.c    **** 	}
 10407              		.loc 1 3310 3 view .LVU3227
3310:src/keys.c    **** 	}
 10408              		.loc 1 3310 10 is_stmt 0 view .LVU3228
 10409 0dd2 3324     		movs	r4, #51
 10410 0dd4 FFF76EB9 		b	.L794
 10411              	.LVL883:
 10412              	.L1364:
ARM GAS  /tmp/ccwxoOej.s 			page 301


3310:src/keys.c    **** 	}
 10413              		.loc 1 3310 10 view .LVU3229
 10414 0dd8 3368     		ldr	r3, [r6]
 10415              	.LBE1427:
 10416              	.LBE1499:
3409:src/keys.c    ****   //print_debug(60,c);
 10417              		.loc 1 3409 7 view .LVU3230
 10418 0dda 0025     		movs	r5, #0
 10419              	.LBB1500:
3592:src/keys.c    **** 	}
 10420              		.loc 1 3592 6 view .LVU3231
 10421 0ddc 3324     		movs	r4, #51
 10422              	.LVL884:
3592:src/keys.c    **** 	}
 10423              		.loc 1 3592 6 view .LVU3232
 10424 0dde FFF769B9 		b	.L794
 10425              	.LVL885:
 10426              	.L1377:
3592:src/keys.c    **** 	}
 10427              		.loc 1 3592 6 view .LVU3233
 10428              	.LBE1500:
 10429              	.LBB1501:
 10430              	.LBB1428:
 10431              	.LBB1156:
 10432              	.LBB1096:
2919:src/keys.c    **** 			n = max;
 10433              		.loc 1 2919 3 is_stmt 1 view .LVU3234
2919:src/keys.c    **** 			n = max;
 10434              		.loc 1 2919 6 is_stmt 0 view .LVU3235
 10435 0de2 111F     		subs	r1, r2, #4
 10436              	.LVL886:
2919:src/keys.c    **** 			n = max;
 10437              		.loc 1 2919 6 view .LVU3236
 10438 0de4 012A     		cmp	r2, #1
 10439 0de6 18BF     		it	ne
 10440 0de8 0B46     		movne	r3, r1
 10441              	.LVL887:
2919:src/keys.c    **** 			n = max;
 10442              		.loc 1 2919 6 view .LVU3237
 10443 0dea 55E6     		b	.L877
 10444              	.LVL888:
 10445              	.L1368:
2919:src/keys.c    **** 			n = max;
 10446              		.loc 1 2919 6 view .LVU3238
 10447              	.LBE1096:
 10448              	.LBE1156:
 10449              	.LBB1157:
 10450              	.LBB1057:
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10451              		.loc 1 1718 44 is_stmt 1 view .LVU3239
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10452              		.loc 1 1718 52 is_stmt 0 view .LVU3240
 10453 0dec 0120     		movs	r0, #1
 10454 0dee FFF7FEFF 		bl	gtodot_digit
 10455              	.LVL889:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10456              		.loc 1 1764 2 is_stmt 1 view .LVU3241
ARM GAS  /tmp/ccwxoOej.s 			page 302


 10457              	.LBE1057:
 10458              	.LBE1157:
3285:src/keys.c    **** 
 10459              		.loc 1 3285 10 is_stmt 0 view .LVU3242
 10460 0df2 3324     		movs	r4, #51
 10461              	.LVL890:
3285:src/keys.c    **** 
 10462              		.loc 1 3285 10 view .LVU3243
 10463 0df4 3368     		ldr	r3, [r6]
 10464 0df6 FFF75DB9 		b	.L794
 10465              	.LVL891:
 10466              	.L1381:
 10467              	.LBB1158:
 10468              	.LBB1129:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10469              		.loc 1 1662 19 view .LVU3244
 10470 0dfa BC4B     		ldr	r3, .L1427+8
 10471 0dfc 1B68     		ldr	r3, [r3]
 10472 0dfe 93F8AC3F 		ldrb	r3, [r3, #4012]	@ zero_extendqisi2
 10473 0e02 5C06     		lsls	r4, r3, #25
 10474              	.LVL892:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10475              		.loc 1 1662 19 view .LVU3245
 10476 0e04 40F17881 		bpl	.L889
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10477              		.loc 1 1663 4 is_stmt 1 view .LVU3246
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10478              		.loc 1 1663 7 is_stmt 0 view .LVU3247
 10479 0e08 03F00103 		and	r3, r3, #1
 10480 0e0c 03F5E574 		add	r4, r3, #458
 10481 0e10 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 10482 0e14 2546     		mov	r5, r4
 10483 0e16 FFF79DBB 		b	.L855
 10484              	.LVL893:
 10485              	.L1369:
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10486              		.loc 1 1663 7 view .LVU3248
 10487              	.LBE1129:
 10488              	.LBE1158:
 10489              	.LBB1159:
 10490              	.LBB1058:
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10491              		.loc 1 1719 44 is_stmt 1 view .LVU3249
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10492              		.loc 1 1719 52 is_stmt 0 view .LVU3250
 10493 0e1a 0220     		movs	r0, #2
 10494 0e1c FFF7FEFF 		bl	gtodot_digit
 10495              	.LVL894:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10496              		.loc 1 1764 2 is_stmt 1 view .LVU3251
 10497              	.LBE1058:
 10498              	.LBE1159:
3285:src/keys.c    **** 
 10499              		.loc 1 3285 10 is_stmt 0 view .LVU3252
 10500 0e20 3324     		movs	r4, #51
 10501              	.LVL895:
3285:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 303


 10502              		.loc 1 3285 10 view .LVU3253
 10503 0e22 3368     		ldr	r3, [r6]
 10504 0e24 FFF746B9 		b	.L794
 10505              	.LVL896:
 10506              	.L862:
 10507              	.LBB1160:
 10508              	.LBB1041:
2365:src/keys.c    **** 	}
 10509              		.loc 1 2365 3 is_stmt 1 view .LVU3254
2365:src/keys.c    **** 	}
 10510              		.loc 1 2365 10 is_stmt 0 view .LVU3255
 10511 0e28 0BF12005 		add	r5, fp, #32
 10512 0e2c 43EA0525 		orr	r5, r3, r5, lsl #8
 10513 0e30 2C46     		mov	r4, r5
 10514              	.LVL897:
2365:src/keys.c    **** 	}
 10515              		.loc 1 2365 10 view .LVU3256
 10516 0e32 FFF78FBB 		b	.L855
 10517              	.LVL898:
 10518              	.L1378:
2365:src/keys.c    **** 	}
 10519              		.loc 1 2365 10 view .LVU3257
 10520              	.LBE1041:
 10521              	.LBE1160:
 10522              	.LBB1161:
 10523              	.LBB1097:
2923:src/keys.c    **** 			n = -2;
 10524              		.loc 1 2923 3 is_stmt 1 view .LVU3258
2923:src/keys.c    **** 			n = -2;
 10525              		.loc 1 2923 6 is_stmt 0 view .LVU3259
 10526 0e36 023A     		subs	r2, r2, #2
 10527              	.LVL899:
2924:src/keys.c    **** 	}
 10528              		.loc 1 2924 6 view .LVU3260
 10529 0e38 9A42     		cmp	r2, r3
 10530 0e3a D4BF     		ite	le
 10531 0e3c 1346     		movle	r3, r2
 10532              	.LVL900:
2924:src/keys.c    **** 	}
 10533              		.loc 1 2924 6 view .LVU3261
 10534 0e3e 6FF00103 		mvngt	r3, #1
 10535 0e42 29E6     		b	.L877
 10536              	.LVL901:
 10537              	.L1388:
2924:src/keys.c    **** 	}
 10538              		.loc 1 2924 6 view .LVU3262
 10539              	.LBE1097:
 10540              	.LBE1161:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 10541              		.loc 1 3325 2 is_stmt 1 view .LVU3263
3325:src/keys.c    **** 		if (is_bad_cmdline())
 10542              		.loc 1 3325 5 is_stmt 0 view .LVU3264
 10543 0e44 BAF1000F 		cmp	r10, #0
 10544 0e48 7FF4B3AE 		bne	.L897
 10545 0e4c FFF71ABA 		b	.L918
 10546              	.LVL902:
 10547              	.L1370:
ARM GAS  /tmp/ccwxoOej.s 			page 304


 10548              	.LBB1162:
 10549              	.LBB1059:
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10550              		.loc 1 1720 44 is_stmt 1 view .LVU3265
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10551              		.loc 1 1720 52 is_stmt 0 view .LVU3266
 10552 0e50 0320     		movs	r0, #3
 10553 0e52 FFF7FEFF 		bl	gtodot_digit
 10554              	.LVL903:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10555              		.loc 1 1764 2 is_stmt 1 view .LVU3267
 10556              	.LBE1059:
 10557              	.LBE1162:
3285:src/keys.c    **** 
 10558              		.loc 1 3285 10 is_stmt 0 view .LVU3268
 10559 0e56 3324     		movs	r4, #51
 10560              	.LVL904:
3285:src/keys.c    **** 
 10561              		.loc 1 3285 10 view .LVU3269
 10562 0e58 3368     		ldr	r3, [r6]
 10563 0e5a FFF72BB9 		b	.L794
 10564              	.LVL905:
 10565              	.L1382:
 10566              	.LBB1163:
 10567              	.LBB1130:
1674:src/keys.c    **** 
 10568              		.loc 1 1674 3 is_stmt 1 view .LVU3270
1674:src/keys.c    **** 
 10569              		.loc 1 1674 25 is_stmt 0 view .LVU3271
 10570 0e5e A44A     		ldr	r2, .L1427+12
 10571 0e60 0AEB4303 		add	r3, r10, r3, lsl #1
 10572 0e64 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10573              	.LVL906:
1674:src/keys.c    **** 
 10574              		.loc 1 1674 25 view .LVU3272
 10575 0e68 FFF7BCBA 		b	.L828
 10576              	.LVL907:
 10577              	.L1351:
1674:src/keys.c    **** 
 10578              		.loc 1 1674 25 view .LVU3273
 10579              	.LBE1130:
 10580              	.LBE1163:
3340:src/keys.c    **** 
 10581              		.loc 1 3340 3 is_stmt 1 view .LVU3274
 10582              	.LBB1164:
 10583              	.LBI936:
2993:src/keys.c    **** 	unsigned int pc = State2.digval;
 10584              		.loc 1 2993 12 view .LVU3275
 10585              	.LBB963:
2994:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10586              		.loc 1 2994 2 view .LVU3276
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10587              		.loc 1 2996 27 is_stmt 0 view .LVU3277
 10588 0e6c 262C     		cmp	r4, #38
2994:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10589              		.loc 1 2994 15 view .LVU3278
 10590 0e6e B8F808B0 		ldrh	fp, [r8, #8]
ARM GAS  /tmp/ccwxoOej.s 			page 305


 10591              	.LVL908:
2995:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10592              		.loc 1 2995 2 is_stmt 1 view .LVU3279
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10593              		.loc 1 2996 27 is_stmt 0 view .LVU3280
 10594 0e72 00F05D84 		beq	.L1147
 10595              	.LVL909:
 10596              	.LBB946:
 10597              	.LBI946:
 210:src/keys.c    **** {
 10598              		.loc 1 210 14 is_stmt 1 view .LVU3281
 10599              	.LBB947:
 212:src/keys.c    ****     // K00 - K05
 10600              		.loc 1 212 3 view .LVU3282
 234:src/keys.c    **** }
 10601              		.loc 1 234 3 view .LVU3283
 10602              	.LBB948:
 10603              	.LBI948:
 131:src/keys.c    **** {
 10604              		.loc 1 131 12 view .LVU3284
 10605              	.LBB949:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10606              		.loc 1 133 2 view .LVU3285
 143:src/keys.c    **** }
 10607              		.loc 1 143 2 view .LVU3286
 143:src/keys.c    **** }
 10608              		.loc 1 143 23 is_stmt 0 view .LVU3287
 10609 0e76 9B4B     		ldr	r3, .L1427
 10610              	.LBE949:
 10611              	.LBE948:
 234:src/keys.c    **** }
 10612              		.loc 1 234 28 view .LVU3288
 10613 0e78 9E4A     		ldr	r2, .L1427+16
 10614              	.LBB951:
 10615              	.LBB950:
 143:src/keys.c    **** }
 10616              		.loc 1 143 23 view .LVU3289
 10617 0e7a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10618              	.LBE950:
 10619              	.LBE951:
 234:src/keys.c    **** }
 10620              		.loc 1 234 10 view .LVU3290
 10621 0e7c 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 10622              	.LBE947:
 10623              	.LBE946:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10624              		.loc 1 2996 27 view .LVU3291
 10625 0e80 2AF0800A 		bic	r10, r10, #128
 10626              	.L938:
 10627              	.LVL910:
2997:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10628              		.loc 1 2997 2 is_stmt 1 view .LVU3292
2997:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10629              		.loc 1 2997 21 is_stmt 0 view .LVU3293
 10630 0e84 5846     		mov	r0, fp
 10631 0e86 FFF7FEFF 		bl	getprog
 10632              	.LVL911:
ARM GAS  /tmp/ccwxoOej.s 			page 306


2998:src/keys.c    **** 	const int direct = State2.runmode;
 10633              		.loc 1 2998 2 is_stmt 1 view .LVU3294
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10634              		.loc 1 2998 20 is_stmt 0 view .LVU3295
 10635 0e8a 00F47040 		and	r0, r0, #61440
 10636              	.LVL912:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10637              		.loc 1 2998 63 view .LVU3296
 10638 0e8e B0F5704F 		cmp	r0, #61440
 10639 0e92 00F09284 		beq	.L1394
 10640 0e96 0022     		movs	r2, #0
 10641              	.L939:
 10642              	.LVL913:
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10643              		.loc 1 2999 2 is_stmt 1 view .LVU3297
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10644              		.loc 1 2999 27 is_stmt 0 view .LVU3298
 10645 0e98 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10646 0e9c 0192     		str	r2, [sp, #4]
 10647              	.LVL914:
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10648              		.loc 1 2999 27 view .LVU3299
 10649 0e9e C3F38013 		ubfx	r3, r3, #6, #1
 10650 0ea2 0093     		str	r3, [sp]
 10651              	.LVL915:
3000:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10652              		.loc 1 3000 2 is_stmt 1 view .LVU3300
 10653              	.LBB952:
 10654              	.LBI952:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10655              		.loc 1 114 13 view .LVU3301
 10656              	.LBE952:
 10657              	.LBE963:
 10658              	.LBE1164:
 10659              	.LBE1428:
 10660              	.LBE1501:
 115:src/keys.c    **** }
 10661              		.loc 1 115 2 view .LVU3302
 10662              	.LBB1502:
 10663              	.LBB1429:
 10664              	.LBB1165:
 10665              	.LBB964:
 10666              	.LBB959:
 10667              	.LBB953:
 10668              	.LBI953:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10669              		.loc 1 104 20 view .LVU3303
 10670              	.LBB954:
 105:src/keys.c    **** 	State2.shifts = shift;
 10671              		.loc 1 105 2 view .LVU3304
 10672              	.LBB955:
 10673              	.LBI955:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10674              		.loc 1 96 13 view .LVU3305
 10675              	.LBB956:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10676              		.loc 1 97 2 view .LVU3306
ARM GAS  /tmp/ccwxoOej.s 			page 307


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10677              		.loc 1 97 18 is_stmt 0 view .LVU3307
 10678 0ea4 FFF7FEFF 		bl	shift_down
 10679              	.LVL916:
  98:src/keys.c    **** }
 10680              		.loc 1 98 2 is_stmt 1 view .LVU3308
  98:src/keys.c    **** }
 10681              		.loc 1 98 52 is_stmt 0 view .LVU3309
 10682 0ea8 019A     		ldr	r2, [sp, #4]
 10683 0eaa 0346     		mov	r3, r0
 10684 0eac 08B9     		cbnz	r0, .L940
 10685 0eae 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10686              	.L940:
 10687              	.LVL917:
  98:src/keys.c    **** }
 10688              		.loc 1 98 52 view .LVU3310
 10689              	.LBE956:
 10690              	.LBE955:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10691              		.loc 1 106 2 is_stmt 1 view .LVU3311
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10692              		.loc 1 106 16 is_stmt 0 view .LVU3312
 10693 0eb2 0021     		movs	r1, #0
 10694              	.LBE954:
 10695              	.LBE953:
 10696              	.LBE959:
3003:src/keys.c    **** 		// Digits take you to that segment
 10697              		.loc 1 3003 5 view .LVU3313
 10698 0eb4 BAF1020F 		cmp	r10, #2
 10699              	.LBB960:
 10700              	.LBB958:
 10701              	.LBB957:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10702              		.loc 1 106 16 view .LVU3314
 10703 0eb8 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10704              		.loc 1 108 2 is_stmt 1 view .LVU3315
 10705              	.LVL918:
 108:src/keys.c    **** }
 10706              		.loc 1 108 2 is_stmt 0 view .LVU3316
 10707              	.LBE957:
 10708              	.LBE958:
 10709              	.LBE960:
3001:src/keys.c    **** 
 10710              		.loc 1 3001 2 is_stmt 1 view .LVU3317
3003:src/keys.c    **** 		// Digits take you to that segment
 10711              		.loc 1 3003 2 view .LVU3318
3003:src/keys.c    **** 		// Digits take you to that segment
 10712              		.loc 1 3003 5 is_stmt 0 view .LVU3319
 10713 0ebc 40F26084 		bls	.L1395
3012:src/keys.c    **** 
 10714              		.loc 1 3012 2 is_stmt 1 view .LVU3320
3012:src/keys.c    **** 
 10715              		.loc 1 3012 12 is_stmt 0 view .LVU3321
 10716 0ec0 44EA0323 		orr	r3, r4, r3, lsl #8
 10717              	.LVL919:
3012:src/keys.c    **** 
ARM GAS  /tmp/ccwxoOej.s 			page 308


 10718              		.loc 1 3012 2 view .LVU3322
 10719 0ec4 272B     		cmp	r3, #39
 10720 0ec6 00F3AF80 		bgt	.L943
 10721 0eca 042B     		cmp	r3, #4
 10722 0ecc 7FF770AC 		ble	.L1322
 10723 0ed0 053B     		subs	r3, r3, #5
 10724 0ed2 222B     		cmp	r3, #34
 10725 0ed4 3FF66CAC 		bhi	.L1322
 10726 0ed8 01A1     		adr	r1, .L952
 10727 0eda 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10728 0ede 00BF     		.p2align 2
 10729              	.L952:
 10730 0ee0 CB0F0000 		.word	.L957+1
 10731 0ee4 BB0F0000 		.word	.L956+1
 10732 0ee8 BB0F0000 		.word	.L956+1
 10733 0eec B1070000 		.word	.L1322+1
 10734 0ef0 B1070000 		.word	.L1322+1
 10735 0ef4 B1070000 		.word	.L1322+1
 10736 0ef8 B1070000 		.word	.L1322+1
 10737 0efc E9060000 		.word	.L1150+1
 10738 0f00 B1070000 		.word	.L1322+1
 10739 0f04 B1070000 		.word	.L1322+1
 10740 0f08 B1070000 		.word	.L1322+1
 10741 0f0c ED0F0000 		.word	.L955+1
 10742 0f10 B1070000 		.word	.L1322+1
 10743 0f14 D90F0000 		.word	.L954+1
 10744 0f18 B1070000 		.word	.L1322+1
 10745 0f1c B1070000 		.word	.L1322+1
 10746 0f20 B1070000 		.word	.L1322+1
 10747 0f24 B1070000 		.word	.L1322+1
 10748 0f28 B1070000 		.word	.L1322+1
 10749 0f2c 790F0000 		.word	.L953+1
 10750 0f30 B1070000 		.word	.L1322+1
 10751 0f34 B1070000 		.word	.L1322+1
 10752 0f38 B1070000 		.word	.L1322+1
 10753 0f3c B1070000 		.word	.L1322+1
 10754 0f40 B1070000 		.word	.L1322+1
 10755 0f44 B1070000 		.word	.L1322+1
 10756 0f48 B1070000 		.word	.L1322+1
 10757 0f4c B1070000 		.word	.L1322+1
 10758 0f50 B1070000 		.word	.L1322+1
 10759 0f54 B1070000 		.word	.L1322+1
 10760 0f58 B1070000 		.word	.L1322+1
 10761 0f5c B1070000 		.word	.L1322+1
 10762 0f60 B1070000 		.word	.L1322+1
 10763 0f64 B1070000 		.word	.L1322+1
 10764 0f68 8F0F0000 		.word	.L951+1
 10765              		.p2align 1
 10766              	.L946:
3019:src/keys.c    **** 	case K_DOWN:				// Find next label
 10767              		.loc 1 3019 3 is_stmt 1 view .LVU3323
3019:src/keys.c    **** 	case K_DOWN:				// Find next label
 10768              		.loc 1 3019 8 is_stmt 0 view .LVU3324
 10769 0f6c 5846     		mov	r0, fp
 10770 0f6e 0122     		movs	r2, #1
 10771 0f70 0021     		movs	r1, #0
 10772 0f72 FFF7FEFF 		bl	advance_to_next_label
ARM GAS  /tmp/ccwxoOej.s 			page 309


 10773              	.LVL920:
 10774 0f76 8346     		mov	fp, r0
 10775              	.LVL921:
 10776              	.L953:
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10777              		.loc 1 3022 3 is_stmt 1 view .LVU3325
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10778              		.loc 1 3022 19 is_stmt 0 view .LVU3326
 10779 0f78 5846     		mov	r0, fp
 10780 0f7a 0022     		movs	r2, #0
 10781 0f7c 0121     		movs	r1, #1
 10782 0f7e FFF7FEFF 		bl	advance_to_next_label
 10783              	.LVL922:
3023:src/keys.c    **** 
 10784              		.loc 1 3023 10 view .LVU3327
 10785 0f82 3324     		movs	r4, #51
 10786              	.LVL923:
3023:src/keys.c    **** 
 10787              		.loc 1 3023 10 view .LVU3328
 10788 0f84 3368     		ldr	r3, [r6]
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10789              		.loc 1 3022 17 view .LVU3329
 10790 0f86 A8F80800 		strh	r0, [r8, #8]	@ movhi
3023:src/keys.c    **** 
 10791              		.loc 1 3023 3 is_stmt 1 view .LVU3330
3023:src/keys.c    **** 
 10792              		.loc 1 3023 10 is_stmt 0 view .LVU3331
 10793 0f8a FFF793B8 		b	.L794
 10794              	.LVL924:
 10795              	.L951:
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10796              		.loc 1 3074 3 is_stmt 1 view .LVU3332
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10797              		.loc 1 3074 6 is_stmt 0 view .LVU3333
 10798 0f8e 009B     		ldr	r3, [sp]
 10799 0f90 002B     		cmp	r3, #0
 10800 0f92 3FF40DAC 		beq	.L1322
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10801              		.loc 1 3074 14 view .LVU3334
 10802 0f96 002A     		cmp	r2, #0
 10803 0f98 3FF40AAC 		beq	.L1322
3075:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10804              		.loc 1 3075 4 is_stmt 1 view .LVU3335
 10805 0f9c 5946     		mov	r1, fp
 10806 0f9e 0120     		movs	r0, #1
 10807 0fa0 FFF7FEFF 		bl	cmdgtocommon
 10808              	.LVL925:
3076:src/keys.c    **** 			break;
 10809              		.loc 1 3076 4 view .LVU3336
3077:src/keys.c    **** 		}
 10810              		.loc 1 3077 4 view .LVU3337
3088:src/keys.c    **** 	State2.labellist = 0;
 10811              		.loc 1 3088 2 view .LVU3338
3089:src/keys.c    **** 	return check_confirm(op);
 10812              		.loc 1 3089 19 is_stmt 0 view .LVU3339
 10813 0fa4 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3088:src/keys.c    **** 	State2.labellist = 0;
ARM GAS  /tmp/ccwxoOej.s 			page 310


 10814              		.loc 1 3088 16 view .LVU3340
 10815 0fa8 0023     		movs	r3, #0
3089:src/keys.c    **** 	return check_confirm(op);
 10816              		.loc 1 3089 19 view .LVU3341
 10817 0faa 63F38202 		bfi	r2, r3, #2, #1
 10818 0fae 88F81720 		strb	r2, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10819              		.loc 1 3088 16 view .LVU3342
 10820 0fb2 A8F80830 		strh	r3, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10821              		.loc 1 3089 2 is_stmt 1 view .LVU3343
3090:src/keys.c    **** }
 10822              		.loc 1 3090 2 view .LVU3344
 10823              	.LVL926:
 10824              	.LBB961:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10825              		.loc 1 714 12 view .LVU3345
 10826              	.LBB942:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10827              		.loc 1 715 2 view .LVU3346
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10828              		.loc 1 715 2 is_stmt 0 view .LVU3347
 10829              	.LBE942:
 10830              	.LBE961:
 10831              	.LBE964:
 10832              	.LBE1165:
 10833              	.LBE1429:
 10834              	.LBE1502:
3614:src/keys.c    ****     case STATE_SST:
 10835              		.loc 1 3614 5 is_stmt 1 view .LVU3348
 10836 0fb6 FFF7C1B9 		b	.L804
 10837              	.LVL927:
 10838              	.L956:
 10839              	.LBB1503:
 10840              	.LBB1430:
 10841              	.LBB1166:
 10842              	.LBB965:
3044:src/keys.c    **** 	  //#endif
 10843              		.loc 1 3044 3 view .LVU3349
3044:src/keys.c    **** 	  //#endif
 10844              		.loc 1 3044 38 is_stmt 0 view .LVU3350
 10845 0fba 062C     		cmp	r4, #6
 10846 0fbc 40F2B114 		movw	r4, #433
 10847              	.LVL928:
3044:src/keys.c    **** 	  //#endif
 10848              		.loc 1 3044 38 view .LVU3351
 10849 0fc0 08BF     		it	eq
 10850 0fc2 4FF4D974 		moveq	r4, #434
 10851 0fc6 FFF790BB 		b	.L949
 10852              	.LVL929:
 10853              	.L957:
 10854              	.L962:
3052:src/keys.c    **** 		goto xeq_or_gto;
 10855              		.loc 1 3052 3 is_stmt 1 view .LVU3352
3052:src/keys.c    **** 		goto xeq_or_gto;
 10856              		.loc 1 3052 6 is_stmt 0 view .LVU3353
 10857 0fca 02F50074 		add	r4, r2, #512
ARM GAS  /tmp/ccwxoOej.s 			page 311


 10858              	.LVL930:
3053:src/keys.c    **** 
 10859              		.loc 1 3053 3 is_stmt 1 view .LVU3354
3058:src/keys.c    **** 			break;
 10860              		.loc 1 3058 3 view .LVU3355
3058:src/keys.c    **** 			break;
 10861              		.loc 1 3058 6 is_stmt 0 view .LVU3356
 10862 0fce 002A     		cmp	r2, #0
 10863 0fd0 7FF48EAB 		bne	.L961
 10864 0fd4 FFF7ECBB 		b	.L1322
 10865              	.LVL931:
 10866              	.L954:
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10867              		.loc 1 3026 3 is_stmt 1 view .LVU3357
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10868              		.loc 1 3026 19 is_stmt 0 view .LVU3358
 10869 0fd8 5846     		mov	r0, fp
 10870 0fda 0021     		movs	r1, #0
 10871 0fdc FFF7FEFF 		bl	advance_to_previous_label
 10872              	.LVL932:
3027:src/keys.c    **** 
 10873              		.loc 1 3027 10 view .LVU3359
 10874 0fe0 3324     		movs	r4, #51
 10875              	.LVL933:
3027:src/keys.c    **** 
 10876              		.loc 1 3027 10 view .LVU3360
 10877 0fe2 3368     		ldr	r3, [r6]
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10878              		.loc 1 3026 17 view .LVU3361
 10879 0fe4 A8F80800 		strh	r0, [r8, #8]	@ movhi
3027:src/keys.c    **** 
 10880              		.loc 1 3027 3 is_stmt 1 view .LVU3362
3027:src/keys.c    **** 
 10881              		.loc 1 3027 10 is_stmt 0 view .LVU3363
 10882 0fe8 FFF764B8 		b	.L794
 10883              	.LVL934:
 10884              	.L955:
3088:src/keys.c    **** 	State2.labellist = 0;
 10885              		.loc 1 3088 2 is_stmt 1 view .LVU3364
3089:src/keys.c    **** 	return check_confirm(op);
 10886              		.loc 1 3089 19 is_stmt 0 view .LVU3365
 10887 0fec 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10888 0ff0 3368     		ldr	r3, [r6]
3088:src/keys.c    **** 	State2.labellist = 0;
 10889              		.loc 1 3088 16 view .LVU3366
 10890 0ff2 0022     		movs	r2, #0
3089:src/keys.c    **** 	return check_confirm(op);
 10891              		.loc 1 3089 19 view .LVU3367
 10892 0ff4 62F38201 		bfi	r1, r2, #2, #1
 10893 0ff8 88F81710 		strb	r1, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10894              		.loc 1 3088 16 view .LVU3368
 10895 0ffc A8F80820 		strh	r2, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10896              		.loc 1 3089 2 is_stmt 1 view .LVU3369
3090:src/keys.c    **** }
 10897              		.loc 1 3090 2 view .LVU3370
ARM GAS  /tmp/ccwxoOej.s 			page 312


 10898              	.LVL935:
 10899              	.LBB962:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10900              		.loc 1 714 12 view .LVU3371
 10901              	.LBB943:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10902              		.loc 1 715 2 view .LVU3372
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10903              		.loc 1 715 2 is_stmt 0 view .LVU3373
 10904              	.LBE943:
 10905              	.LBE962:
 10906              	.LBE965:
 10907              	.LBE1166:
 10908              	.LBE1430:
 10909              	.LBE1503:
3614:src/keys.c    ****     case STATE_SST:
 10910              		.loc 1 3614 5 is_stmt 1 view .LVU3374
 10911              	.LBB1504:
 10912              	.LBB1431:
 10913              	.LBB1167:
 10914              	.LBB966:
3001:src/keys.c    **** 
 10915              		.loc 1 3001 6 is_stmt 0 view .LVU3375
 10916 1000 3324     		movs	r4, #51
 10917 1002 FFF757B8 		b	.L794
 10918              	.LVL936:
 10919              	.L871:
3001:src/keys.c    **** 
 10920              		.loc 1 3001 6 view .LVU3376
 10921              	.LBE966:
 10922              	.LBE1167:
 10923              	.LBB1168:
 10924              	.LBB1042:
2384:src/keys.c    **** 		return STATE_UNFINISHED;
 10925              		.loc 1 2384 3 is_stmt 1 view .LVU3377
 10926              	.LBB1035:
 10927              	.LBI1035:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10928              		.loc 1 552 13 view .LVU3378
 10929              	.LBB1036:
 553:src/keys.c    **** 		return;
 10930              		.loc 1 553 2 view .LVU3379
 553:src/keys.c    **** 		return;
 10931              		.loc 1 553 6 is_stmt 0 view .LVU3380
 10932 1006 FFF7FEFF 		bl	is_bad_cmdline
 10933              	.LVL937:
 553:src/keys.c    **** 		return;
 10934              		.loc 1 553 5 view .LVU3381
 10935 100a 0446     		mov	r4, r0
 10936              	.LVL938:
 553:src/keys.c    **** 		return;
 10937              		.loc 1 553 5 view .LVU3382
 10938 100c 0028     		cmp	r0, #0
 10939 100e 7FF4CFAB 		bne	.L1322
 10940 1012 5FFA8BF0 		uxtb	r0, fp
 10941 1016 FFF7FEFF 		bl	init_arg.part.0
 10942              	.LVL939:
ARM GAS  /tmp/ccwxoOej.s 			page 313


 10943              	.LBE1036:
 10944              	.LBE1035:
 10945              	.LBE1042:
 10946              	.LBE1168:
 10947              	.LBE1431:
 10948              	.LBE1504:
3409:src/keys.c    ****   //print_debug(60,c);
 10949              		.loc 1 3409 7 view .LVU3383
 10950 101a 2546     		mov	r5, r4
 10951 101c 3368     		ldr	r3, [r6]
 10952              	.LBB1505:
 10953              	.LBB1432:
 10954              	.LBB1169:
 10955              	.LBB1043:
2385:src/keys.c    **** 
 10956              		.loc 1 2385 10 view .LVU3384
 10957 101e 3324     		movs	r4, #51
 10958 1020 FFF748B8 		b	.L794
 10959              	.LVL940:
 10960              	.L1133:
2385:src/keys.c    **** 
 10961              		.loc 1 2385 10 view .LVU3385
 10962              	.LBE1043:
 10963              	.LBE1169:
 10964              	.LBB1170:
 10965              	.LBB1098:
 10966              	.LBB1092:
2931:src/keys.c    **** 		if (nn <= 9)
 10967              		.loc 1 2931 7 view .LVU3386
 10968 1024 0B46     		mov	r3, r1
 10969              	.LVL941:
2931:src/keys.c    **** 		if (nn <= 9)
 10970              		.loc 1 2931 7 view .LVU3387
 10971 1026 37E5     		b	.L877
 10972              	.LVL942:
 10973              	.L943:
2931:src/keys.c    **** 		if (nn <= 9)
 10974              		.loc 1 2931 7 view .LVU3388
 10975              	.LBE1092:
 10976              	.LBE1098:
 10977              	.LBE1170:
 10978              	.LBB1171:
 10979              	.LBB967:
3012:src/keys.c    **** 
 10980              		.loc 1 3012 2 view .LVU3389
 10981 1028 B3F58C7F 		cmp	r3, #280
 10982 102c 48DC     		bgt	.L958
 10983 102e B3F5827F 		cmp	r3, #260
 10984 1032 7FF7BDAB 		ble	.L1322
 10985 1036 6FF48271 		mvn	r1, #260
 10986 103a 0B44     		add	r3, r3, r1
 10987 103c 132B     		cmp	r3, #19
 10988 103e 3FF6B7AB 		bhi	.L1322
 10989 1042 01A1     		adr	r1, .L947
 10990 1044 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10991              		.p2align 2
 10992              	.L947:
ARM GAS  /tmp/ccwxoOej.s 			page 314


 10993 1048 A1100000 		.word	.L950+1
 10994 104c B1070000 		.word	.L1322+1
 10995 1050 B1070000 		.word	.L1322+1
 10996 1054 B1070000 		.word	.L1322+1
 10997 1058 B1070000 		.word	.L1322+1
 10998 105c B1070000 		.word	.L1322+1
 10999 1060 B1070000 		.word	.L1322+1
 11000 1064 B1070000 		.word	.L1322+1
 11001 1068 B1070000 		.word	.L1322+1
 11002 106c B1070000 		.word	.L1322+1
 11003 1070 B1070000 		.word	.L1322+1
 11004 1074 99100000 		.word	.L1149+1
 11005 1078 B1070000 		.word	.L1322+1
 11006 107c AF100000 		.word	.L948+1
 11007 1080 B1070000 		.word	.L1322+1
 11008 1084 B1070000 		.word	.L1322+1
 11009 1088 B1070000 		.word	.L1322+1
 11010 108c B1070000 		.word	.L1322+1
 11011 1090 B1070000 		.word	.L1322+1
 11012 1094 6D0F0000 		.word	.L946+1
 11013              		.p2align 1
 11014              	.L1149:
 11015 1098 40F24314 		movw	r4, #323
 11016              	.LVL943:
3012:src/keys.c    **** 
 11017              		.loc 1 3012 2 view .LVU3390
 11018 109c FFF725BB 		b	.L949
 11019              	.LVL944:
 11020              	.L950:
3056:src/keys.c    **** 	xeq_or_gto:
 11021              		.loc 1 3056 3 is_stmt 1 view .LVU3391
3056:src/keys.c    **** 	xeq_or_gto:
 11022              		.loc 1 3056 6 is_stmt 0 view .LVU3392
 11023 10a0 02F54074 		add	r4, r2, #768
 11024              	.LVL945:
3058:src/keys.c    **** 			break;
 11025              		.loc 1 3058 3 is_stmt 1 view .LVU3393
3058:src/keys.c    **** 			break;
 11026              		.loc 1 3058 6 is_stmt 0 view .LVU3394
 11027 10a4 002A     		cmp	r2, #0
 11028 10a6 7FF423AB 		bne	.L961
 11029 10aa FFF781BB 		b	.L1322
 11030              	.LVL946:
 11031              	.L948:
3015:src/keys.c    **** 		goto next;
 11032              		.loc 1 3015 3 is_stmt 1 view .LVU3395
3015:src/keys.c    **** 		goto next;
 11033              		.loc 1 3015 8 is_stmt 0 view .LVU3396
 11034 10ae 5846     		mov	r0, fp
 11035 10b0 0121     		movs	r1, #1
 11036 10b2 FFF7FEFF 		bl	advance_to_previous_label
 11037              	.LVL947:
 11038 10b6 0121     		movs	r1, #1
 11039 10b8 FFF7FEFF 		bl	advance_to_previous_label
 11040              	.LVL948:
 11041 10bc 8346     		mov	fp, r0
 11042              	.LVL949:
ARM GAS  /tmp/ccwxoOej.s 			page 315


3016:src/keys.c    **** 
 11043              		.loc 1 3016 3 is_stmt 1 view .LVU3397
 11044 10be 5BE7     		b	.L953
 11045              	.LVL950:
 11046              	.L958:
3012:src/keys.c    **** 
 11047              		.loc 1 3012 2 is_stmt 0 view .LVU3398
 11048 10c0 40F22732 		movw	r2, #807
 11049 10c4 9342     		cmp	r3, r2
 11050 10c6 7FF473AB 		bne	.L1322
3082:src/keys.c    **** 		goto set_pc_and_exit;
 11051              		.loc 1 3082 3 is_stmt 1 view .LVU3399
3082:src/keys.c    **** 		goto set_pc_and_exit;
 11052              		.loc 1 3082 18 is_stmt 0 view .LVU3400
 11053 10ca 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11054 10ce 61F38613 		bfi	r3, r1, #6, #1
 11055 10d2 88F81630 		strb	r3, [r8, #22]
3083:src/keys.c    **** 
 11056              		.loc 1 3083 3 is_stmt 1 view .LVU3401
3001:src/keys.c    **** 
 11057              		.loc 1 3001 6 is_stmt 0 view .LVU3402
 11058 10d6 3324     		movs	r4, #51
 11059              	.LVL951:
3083:src/keys.c    **** 
 11060              		.loc 1 3083 3 view .LVU3403
 11061 10d8 FFF707BB 		b	.L949
 11062              	.LVL952:
 11063              	.L849:
3083:src/keys.c    **** 
 11064              		.loc 1 3083 3 view .LVU3404
 11065              	.LBE967:
 11066              	.LBE1171:
 11067              	.LBB1172:
 11068              	.LBB1078:
1622:src/keys.c    **** #endif
 11069              		.loc 1 1622 4 is_stmt 1 view .LVU3405
1622:src/keys.c    **** #endif
 11070              		.loc 1 1622 18 view .LVU3406
1622:src/keys.c    **** #endif
 11071              		.loc 1 1622 18 is_stmt 0 view .LVU3407
 11072 10dc 8BF0010B 		eor	fp, fp, #1
 11073              	.LVL953:
1622:src/keys.c    **** #endif
 11074              		.loc 1 1622 18 view .LVU3408
 11075 10e0 8EE4     		b	.L856
 11076              	.L1428:
 11077 10e2 00BF     		.align	2
 11078              	.L1427:
 11079 10e4 00000000 		.word	.LANCHOR6
 11080 10e8 00000000 		.word	.LANCHOR15
 11081 10ec 00000000 		.word	main_ram
 11082 10f0 00000000 		.word	.LANCHOR20
 11083 10f4 00000000 		.word	.LANCHOR5
 11084              	.LVL954:
 11085              	.L889:
1622:src/keys.c    **** #endif
 11086              		.loc 1 1622 18 view .LVU3409
ARM GAS  /tmp/ccwxoOej.s 			page 316


 11087              	.LBE1078:
 11088              	.LBE1172:
 11089              	.LBB1173:
 11090              	.LBB1131:
1671:src/keys.c    **** 	
 11091              		.loc 1 1671 2 is_stmt 1 view .LVU3410
1671:src/keys.c    **** 	
 11092              		.loc 1 1671 5 is_stmt 0 view .LVU3411
 11093 10f8 BBF1000F 		cmp	fp, #0
 11094 10fc 7FF458AB 		bne	.L1322
 11095 1100 3368     		ldr	r3, [r6]
 11096              	.LBE1131:
 11097              	.LBE1173:
 11098              	.LBE1432:
 11099              	.LBE1505:
3409:src/keys.c    ****   //print_debug(60,c);
 11100              		.loc 1 3409 7 view .LVU3412
 11101 1102 5D46     		mov	r5, fp
 11102              	.LBB1506:
 11103              	.LBB1433:
 11104              	.LBB1174:
 11105              	.LBB1132:
1671:src/keys.c    **** 	
 11106              		.loc 1 1671 31 view .LVU3413
 11107 1104 3324     		movs	r4, #51
 11108 1106 FEF7D5BF 		b	.L794
 11109              	.LVL955:
 11110              	.L1371:
1671:src/keys.c    **** 	
 11111              		.loc 1 1671 31 view .LVU3414
 11112              	.LBE1132:
 11113              	.LBE1174:
 11114              	.LBB1175:
 11115              	.LBB1060:
1721:src/keys.c    **** #endif
 11116              		.loc 1 1721 44 is_stmt 1 view .LVU3415
1721:src/keys.c    **** #endif
 11117              		.loc 1 1721 52 is_stmt 0 view .LVU3416
 11118 110a 0420     		movs	r0, #4
 11119 110c FFF7FEFF 		bl	gtodot_digit
 11120              	.LVL956:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11121              		.loc 1 1764 2 is_stmt 1 view .LVU3417
 11122              	.LBE1060:
 11123              	.LBE1175:
3285:src/keys.c    **** 
 11124              		.loc 1 3285 10 is_stmt 0 view .LVU3418
 11125 1110 3324     		movs	r4, #51
 11126              	.LVL957:
3285:src/keys.c    **** 
 11127              		.loc 1 3285 10 view .LVU3419
 11128 1112 3368     		ldr	r3, [r6]
 11129 1114 FEF7CEBF 		b	.L794
 11130              	.LVL958:
 11131              	.L1352:
3343:src/keys.c    **** 
 11132              		.loc 1 3343 3 is_stmt 1 view .LVU3420
ARM GAS  /tmp/ccwxoOej.s 			page 317


 11133              	.LBB1176:
 11134              	.LBI1176:
3124:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 11135              		.loc 1 3124 12 view .LVU3421
 11136              	.LBB1177:
3125:src/keys.c    **** 	enum shifts shift = reset_shift();
 11137              		.loc 1 3125 2 view .LVU3422
 11138              	.LBB1178:
 11139              	.LBI1178:
 210:src/keys.c    **** {
 11140              		.loc 1 210 14 view .LVU3423
 11141              	.LBB1179:
 212:src/keys.c    ****     // K00 - K05
 11142              		.loc 1 212 3 view .LVU3424
 234:src/keys.c    **** }
 11143              		.loc 1 234 3 view .LVU3425
 11144              	.LBB1180:
 11145              	.LBI1180:
 131:src/keys.c    **** {
 11146              		.loc 1 131 12 view .LVU3426
 11147              	.LBB1181:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11148              		.loc 1 133 2 view .LVU3427
 143:src/keys.c    **** }
 11149              		.loc 1 143 2 view .LVU3428
 143:src/keys.c    **** }
 11150              		.loc 1 143 23 is_stmt 0 view .LVU3429
 11151 1118 BE4B     		ldr	r3, .L1429
 11152              	.LBE1181:
 11153              	.LBE1180:
 234:src/keys.c    **** }
 11154              		.loc 1 234 28 view .LVU3430
 11155 111a BF4A     		ldr	r2, .L1429+4
 11156              	.LBB1183:
 11157              	.LBB1182:
 143:src/keys.c    **** }
 11158              		.loc 1 143 23 view .LVU3431
 11159 111c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 11160              	.LBE1182:
 11161              	.LBE1183:
 234:src/keys.c    **** }
 11162              		.loc 1 234 10 view .LVU3432
 11163 111e 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 11164              	.LBE1179:
 11165              	.LBE1178:
 11166              	.LBB1184:
 11167              	.LBB1185:
 11168              	.LBB1186:
 11169              	.LBB1187:
 11170              	.LBB1188:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11171              		.loc 1 97 18 view .LVU3433
 11172 1122 FFF7FEFF 		bl	shift_down
 11173              	.LVL959:
 11174              	.LBE1188:
 11175              	.LBE1187:
 11176              	.LBE1186:
ARM GAS  /tmp/ccwxoOej.s 			page 318


 11177              	.LBE1185:
 11178              	.LBE1184:
3125:src/keys.c    **** 	enum shifts shift = reset_shift();
 11179              		.loc 1 3125 15 view .LVU3434
 11180 1126 2BF0800B 		bic	fp, fp, #128
 11181              	.LVL960:
3126:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 11182              		.loc 1 3126 2 is_stmt 1 view .LVU3435
 11183              	.LBB1197:
 11184              	.LBI1184:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11185              		.loc 1 114 13 view .LVU3436
 11186              	.LBE1197:
 11187              	.LBE1177:
 11188              	.LBE1176:
 11189              	.LBE1433:
 11190              	.LBE1506:
 115:src/keys.c    **** }
 11191              		.loc 1 115 2 view .LVU3437
 11192              	.LBB1507:
 11193              	.LBB1434:
 11194              	.LBB1213:
 11195              	.LBB1204:
 11196              	.LBB1198:
 11197              	.LBB1194:
 11198              	.LBI1185:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11199              		.loc 1 104 20 view .LVU3438
 11200              	.LBB1191:
 105:src/keys.c    **** 	State2.shifts = shift;
 11201              		.loc 1 105 2 view .LVU3439
 11202              	.LBB1190:
 11203              	.LBI1187:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11204              		.loc 1 96 13 view .LVU3440
 11205              	.LBB1189:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11206              		.loc 1 97 2 view .LVU3441
  98:src/keys.c    **** }
 11207              		.loc 1 98 2 view .LVU3442
  98:src/keys.c    **** }
 11208              		.loc 1 98 52 is_stmt 0 view .LVU3443
 11209 112a 8146     		mov	r9, r0
 11210 112c 08B9     		cbnz	r0, .L965
 11211 112e 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 11212              	.L965:
 11213              	.LVL961:
  98:src/keys.c    **** }
 11214              		.loc 1 98 52 view .LVU3444
 11215              	.LBE1189:
 11216              	.LBE1190:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11217              		.loc 1 106 2 is_stmt 1 view .LVU3445
 11218              	.LBE1191:
 11219              	.LBE1194:
 11220              	.LBE1198:
3127:src/keys.c    **** 	const int g_max = global_regs();
ARM GAS  /tmp/ccwxoOej.s 			page 319


 11221              		.loc 1 3127 31 is_stmt 0 view .LVU3446
 11222 1132 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11223              	.LBB1199:
 11224              	.LBB1195:
 11225              	.LBB1192:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11226              		.loc 1 106 16 view .LVU3447
 11227 1136 0022     		movs	r2, #0
 11228              	.LBE1192:
 11229              	.LBE1195:
 11230              	.LBE1199:
3127:src/keys.c    **** 	const int g_max = global_regs();
 11231              		.loc 1 3127 46 view .LVU3448
 11232 1138 DB07     		lsls	r3, r3, #31
 11233              	.LBB1200:
 11234              	.LBB1196:
 11235              	.LBB1193:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11236              		.loc 1 106 16 view .LVU3449
 11237 113a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11238              		.loc 1 108 2 is_stmt 1 view .LVU3450
 11239              	.LVL962:
 108:src/keys.c    **** }
 11240              		.loc 1 108 2 is_stmt 0 view .LVU3451
 11241              	.LBE1193:
 11242              	.LBE1196:
 11243              	.LBE1200:
3127:src/keys.c    **** 	const int g_max = global_regs();
 11244              		.loc 1 3127 2 is_stmt 1 view .LVU3452
3127:src/keys.c    **** 	const int g_max = global_regs();
 11245              		.loc 1 3127 46 is_stmt 0 view .LVU3453
 11246 113e 00F1E682 		bmi	.L1396
 11247 1142 4FF0700A 		mov	r10, #112
 11248              	.L966:
 11249              	.LVL963:
3128:src/keys.c    **** 
 11250              		.loc 1 3128 2 is_stmt 1 view .LVU3454
3128:src/keys.c    **** 
 11251              		.loc 1 3128 20 is_stmt 0 view .LVU3455
 11252 1146 FFF7FEFF 		bl	global_regs
 11253              	.LVL964:
3130:src/keys.c    **** 		if (local_regs())
 11254              		.loc 1 3130 2 is_stmt 1 view .LVU3456
3130:src/keys.c    **** 		if (local_regs())
 11255              		.loc 1 3130 5 is_stmt 0 view .LVU3457
 11256 114a BBF1700F 		cmp	fp, #112
 11257 114e 00F08D83 		beq	.L1397
3136:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11258              		.loc 1 3136 7 is_stmt 1 view .LVU3458
3136:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11259              		.loc 1 3136 10 is_stmt 0 view .LVU3459
 11260 1152 BBF1090F 		cmp	fp, #9
 11261 1156 40F2F482 		bls	.L1398
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11262              		.loc 1 3143 7 is_stmt 1 view .LVU3460
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
ARM GAS  /tmp/ccwxoOej.s 			page 320


 11263              		.loc 1 3143 29 is_stmt 0 view .LVU3461
 11264 115a 09F1FF33 		add	r3, r9, #-1
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11265              		.loc 1 3143 10 view .LVU3462
 11266 115e DBB2     		uxtb	r3, r3
 11267 1160 012B     		cmp	r3, #1
 11268 1162 40F2BF82 		bls	.L1399
 11269              	.L974:
3147:src/keys.c    **** 		State2.digval = n;
 11270              		.loc 1 3147 7 is_stmt 1 view .LVU3463
3147:src/keys.c    **** 		State2.digval = n;
 11271              		.loc 1 3147 10 is_stmt 0 view .LVU3464
 11272 1166 BBF17F0F 		cmp	fp, #127
 11273 116a 40F01A83 		bne	.L1400
3152:src/keys.c    **** 	case K_DOWN:
 11274              		.loc 1 3152 2 is_stmt 1 view .LVU3465
 11275 116e 073C     		subs	r4, r4, #7
 11276              	.LVL965:
3152:src/keys.c    **** 	case K_DOWN:
 11277              		.loc 1 3152 2 is_stmt 0 view .LVU3466
 11278 1170 112C     		cmp	r4, #17
 11279 1172 3FF61DAB 		bhi	.L1322
 11280 1176 01A3     		adr	r3, .L1108
 11281 1178 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11282              		.p2align 2
 11283              	.L1108:
 11284 117c C5110000 		.word	.L987+1
 11285 1180 B1070000 		.word	.L1322+1
 11286 1184 B1070000 		.word	.L1322+1
 11287 1188 B1070000 		.word	.L1322+1
 11288 118c B1070000 		.word	.L1322+1
 11289 1190 75120000 		.word	.L986+1
 11290 1194 B1070000 		.word	.L1322+1
 11291 1198 B1070000 		.word	.L1322+1
 11292 119c B1070000 		.word	.L1322+1
 11293 11a0 57120000 		.word	.L984+1
 11294 11a4 B1070000 		.word	.L1322+1
 11295 11a8 29120000 		.word	.L980+1
 11296 11ac B1070000 		.word	.L1322+1
 11297 11b0 B1070000 		.word	.L1322+1
 11298 11b4 B1070000 		.word	.L1322+1
 11299 11b8 B1070000 		.word	.L1322+1
 11300 11bc B1070000 		.word	.L1322+1
 11301 11c0 F3110000 		.word	.L977+1
 11302              		.p2align 1
 11303              	.L987:
3191:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11304              		.loc 1 3191 3 is_stmt 1 view .LVU3467
3191:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11305              		.loc 1 3191 6 is_stmt 0 view .LVU3468
 11306 11c4 B9F1000F 		cmp	r9, #0
 11307 11c8 7FF4F2AA 		bne	.L1322
3195:src/keys.c    **** #endif
 11308              		.loc 1 3195 4 is_stmt 1 view .LVU3469
3195:src/keys.c    **** #endif
 11309              		.loc 1 3195 8 is_stmt 0 view .LVU3470
 11310 11cc B8F80840 		ldrh	r4, [r8, #8]
ARM GAS  /tmp/ccwxoOej.s 			page 321


 11311              	.LVL966:
3197:src/keys.c    **** 			State2.digval = 0;
 11312              		.loc 1 3197 4 is_stmt 1 view .LVU3471
3197:src/keys.c    **** 			State2.digval = 0;
 11313              		.loc 1 3197 24 is_stmt 0 view .LVU3472
 11314 11d0 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 11315 11d4 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3199:src/keys.c    **** 			return n;
 11316              		.loc 1 3199 19 view .LVU3473
 11317 11d8 88F80A90 		strb	r9, [r8, #10]
3200:src/keys.c    **** 		}
 11318              		.loc 1 3200 11 view .LVU3474
 11319 11dc 44F42854 		orr	r4, r4, #10752
 11320              	.LVL967:
3197:src/keys.c    **** 			State2.digval = 0;
 11321              		.loc 1 3197 24 view .LVU3475
 11322 11e0 69F3C303 		bfi	r3, r9, #3, #1
3198:src/keys.c    **** 			State2.digval2 = 0;
 11323              		.loc 1 3198 18 view .LVU3476
 11324 11e4 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11325 11e8 2546     		mov	r5, r4
3197:src/keys.c    **** 			State2.digval = 0;
 11326              		.loc 1 3197 24 view .LVU3477
 11327 11ea 88F81730 		strb	r3, [r8, #23]
3198:src/keys.c    **** 			State2.digval2 = 0;
 11328              		.loc 1 3198 4 is_stmt 1 view .LVU3478
3199:src/keys.c    **** 			return n;
 11329              		.loc 1 3199 4 view .LVU3479
3200:src/keys.c    **** 		}
 11330              		.loc 1 3200 4 view .LVU3480
3200:src/keys.c    **** 		}
 11331              		.loc 1 3200 11 is_stmt 0 view .LVU3481
 11332 11ee FFF7B1B9 		b	.L855
 11333              	.LVL968:
 11334              	.L977:
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11335              		.loc 1 3154 3 is_stmt 1 view .LVU3482
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11336              		.loc 1 3154 13 is_stmt 0 view .LVU3483
 11337 11f2 B8F80830 		ldrh	r3, [r8, #8]
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11338              		.loc 1 3154 6 view .LVU3484
 11339 11f6 002B     		cmp	r3, #0
 11340 11f8 00F0E084 		beq	.L978
3155:src/keys.c    **** 				State2.digval = global_regs();
 11341              		.loc 1 3155 4 is_stmt 1 view .LVU3485
3155:src/keys.c    **** 				State2.digval = global_regs();
 11342              		.loc 1 3155 8 is_stmt 0 view .LVU3486
 11343 11fc 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3155:src/keys.c    **** 				State2.digval = global_regs();
 11344              		.loc 1 3155 7 view .LVU3487
 11345 1200 D207     		lsls	r2, r2, #31
 11346 1202 02D4     		bmi	.L979
3155:src/keys.c    **** 				State2.digval = global_regs();
 11347              		.loc 1 3155 23 view .LVU3488
 11348 1204 642B     		cmp	r3, #100
 11349 1206 00F00285 		beq	.L1401
ARM GAS  /tmp/ccwxoOej.s 			page 322


 11350              	.LVL969:
 11351              	.L979:
3157:src/keys.c    **** 		}
 11352              		.loc 1 3157 4 is_stmt 1 view .LVU3489
 11353 120a B8F80830 		ldrh	r3, [r8, #8]
 11354 120e 013B     		subs	r3, r3, #1
 11355              	.LVL970:
 11356              	.L1313:
3157:src/keys.c    **** 		}
 11357              		.loc 1 3157 4 is_stmt 0 view .LVU3490
 11358 1210 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11359              	.LVL971:
 11360              	.L970:
3209:src/keys.c    **** 	return STATE_UNFINISHED;
 11361              		.loc 1 3209 2 is_stmt 1 view .LVU3491
3209:src/keys.c    **** 	return STATE_UNFINISHED;
 11362              		.loc 1 3209 16 is_stmt 0 view .LVU3492
 11363 1214 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 11364 1218 3368     		ldr	r3, [r6]
 11365 121a 6FF3C502 		bfc	r2, #3, #3
 11366 121e 88F81420 		strb	r2, [r8, #20]
3210:src/keys.c    **** }
 11367              		.loc 1 3210 2 is_stmt 1 view .LVU3493
3210:src/keys.c    **** }
 11368              		.loc 1 3210 9 is_stmt 0 view .LVU3494
 11369 1222 3324     		movs	r4, #51
 11370 1224 FEF746BF 		b	.L794
 11371              	.LVL972:
 11372              	.L980:
3164:src/keys.c    **** 			State2.digval++;
 11373              		.loc 1 3164 3 is_stmt 1 view .LVU3495
3164:src/keys.c    **** 			State2.digval++;
 11374              		.loc 1 3164 13 is_stmt 0 view .LVU3496
 11375 1228 B8F80830 		ldrh	r3, [r8, #8]
3164:src/keys.c    **** 			State2.digval++;
 11376              		.loc 1 3164 27 view .LVU3497
 11377 122c 0AF1FF3A 		add	r10, r10, #-1
 11378              	.LVL973:
3164:src/keys.c    **** 			State2.digval++;
 11379              		.loc 1 3164 6 view .LVU3498
 11380 1230 5345     		cmp	r3, r10
 11381 1232 80F28684 		bge	.L981
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11382              		.loc 1 3165 4 is_stmt 1 view .LVU3499
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11383              		.loc 1 3166 8 is_stmt 0 view .LVU3500
 11384 1236 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11385              		.loc 1 3165 17 view .LVU3501
 11386 123a 0133     		adds	r3, r3, #1
 11387 123c 9CB2     		uxth	r4, r3
 11388              	.LVL974:
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11389              		.loc 1 3166 7 view .LVU3502
 11390 123e D307     		lsls	r3, r2, #31
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11391              		.loc 1 3165 17 view .LVU3503
ARM GAS  /tmp/ccwxoOej.s 			page 323


 11392 1240 A8F80840 		strh	r4, [r8, #8]	@ movhi
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11393              		.loc 1 3166 4 is_stmt 1 view .LVU3504
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11394              		.loc 1 3166 7 is_stmt 0 view .LVU3505
 11395 1244 E6D4     		bmi	.L970
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11396              		.loc 1 3166 43 view .LVU3506
 11397 1246 FFF7FEFF 		bl	global_regs
 11398              	.LVL975:
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11399              		.loc 1 3166 23 view .LVU3507
 11400 124a 8442     		cmp	r4, r0
 11401 124c E2D1     		bne	.L970
3167:src/keys.c    **** 		}
 11402              		.loc 1 3167 5 is_stmt 1 view .LVU3508
3167:src/keys.c    **** 		}
 11403              		.loc 1 3167 19 is_stmt 0 view .LVU3509
 11404 124e 6423     		movs	r3, #100
 11405 1250 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11406 1254 DEE7     		b	.L970
 11407              	.LVL976:
 11408              	.L984:
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11409              		.loc 1 3181 3 is_stmt 1 view .LVU3510
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11410              		.loc 1 3181 7 is_stmt 0 view .LVU3511
 11411 1256 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11412              		.loc 1 3181 6 view .LVU3512
 11413 125a 13F02002 		ands	r2, r3, #32
 11414 125e 7FF4A7AA 		bne	.L1322
3183:src/keys.c    **** 
 11415              		.loc 1 3183 3 is_stmt 1 view .LVU3513
3205:src/keys.c    **** 	State2.digval = 0;
 11416              		.loc 1 3205 2 view .LVU3514
3205:src/keys.c    **** 	State2.digval = 0;
 11417              		.loc 1 3205 22 is_stmt 0 view .LVU3515
 11418 1262 62F3C303 		bfi	r3, r2, #3, #1
 11419 1266 88F81730 		strb	r3, [r8, #23]
3206:src/keys.c    **** 	State2.digval2 = 0;
 11420              		.loc 1 3206 2 is_stmt 1 view .LVU3516
3206:src/keys.c    **** 	State2.digval2 = 0;
 11421              		.loc 1 3206 16 is_stmt 0 view .LVU3517
 11422 126a A8F80820 		strh	r2, [r8, #8]	@ movhi
3207:src/keys.c    **** reset_window:
 11423              		.loc 1 3207 2 is_stmt 1 view .LVU3518
3207:src/keys.c    **** reset_window:
 11424              		.loc 1 3207 17 is_stmt 0 view .LVU3519
 11425 126e 88F80A20 		strb	r2, [r8, #10]
 11426 1272 CFE7     		b	.L970
 11427              	.L986:
3186:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11428              		.loc 1 3186 3 is_stmt 1 view .LVU3520
3186:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11429              		.loc 1 3186 6 is_stmt 0 view .LVU3521
 11430 1274 B9F1010F 		cmp	r9, #1
ARM GAS  /tmp/ccwxoOej.s 			page 324


 11431 1278 A4D1     		bne	.L987
3187:src/keys.c    **** 			goto reset_window;
 11432              		.loc 1 3187 4 is_stmt 1 view .LVU3522
3187:src/keys.c    **** 			goto reset_window;
 11433              		.loc 1 3187 25 is_stmt 0 view .LVU3523
 11434 127a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11435 127e 43F00403 		orr	r3, r3, #4
 11436 1282 88F81630 		strb	r3, [r8, #22]
3188:src/keys.c    **** 		}
 11437              		.loc 1 3188 4 is_stmt 1 view .LVU3524
 11438 1286 C5E7     		b	.L970
 11439              	.LVL977:
 11440              	.L1353:
3188:src/keys.c    **** 		}
 11441              		.loc 1 3188 4 is_stmt 0 view .LVU3525
 11442              	.LBE1204:
 11443              	.LBE1213:
3346:src/keys.c    **** 
 11444              		.loc 1 3346 3 is_stmt 1 view .LVU3526
 11445              	.LBB1214:
 11446              	.LBI1214:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11447              		.loc 1 114 13 view .LVU3527
 11448              	.LBE1214:
 11449              	.LBE1434:
 11450              	.LBE1507:
 115:src/keys.c    **** }
 11451              		.loc 1 115 2 view .LVU3528
 11452              	.LBB1508:
 11453              	.LBB1435:
 11454              	.LBB1221:
 11455              	.LBB1215:
 11456              	.LBI1215:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11457              		.loc 1 104 20 view .LVU3529
 11458              	.LBB1216:
 105:src/keys.c    **** 	State2.shifts = shift;
 11459              		.loc 1 105 2 view .LVU3530
 11460              	.LBB1217:
 11461              	.LBI1217:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11462              		.loc 1 96 13 view .LVU3531
 11463              	.LBB1218:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11464              		.loc 1 97 2 view .LVU3532
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11465              		.loc 1 97 18 is_stmt 0 view .LVU3533
 11466 1288 FFF7FEFF 		bl	shift_down
 11467              	.LVL978:
  98:src/keys.c    **** }
 11468              		.loc 1 98 2 is_stmt 1 view .LVU3534
  98:src/keys.c    **** }
 11469              		.loc 1 98 52 is_stmt 0 view .LVU3535
 11470 128c 0146     		mov	r1, r0
 11471 128e 08B9     		cbnz	r0, .L990
 11472 1290 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11473              	.L990:
ARM GAS  /tmp/ccwxoOej.s 			page 325


 11474              	.LVL979:
  98:src/keys.c    **** }
 11475              		.loc 1 98 52 view .LVU3536
 11476              	.LBE1218:
 11477              	.LBE1217:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11478              		.loc 1 106 2 is_stmt 1 view .LVU3537
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11479              		.loc 1 106 16 is_stmt 0 view .LVU3538
 11480 1294 0022     		movs	r2, #0
 11481              	.LBE1216:
 11482              	.LBE1215:
 11483              	.LBE1221:
3346:src/keys.c    **** 
 11484              		.loc 1 3346 10 view .LVU3539
 11485 1296 2046     		mov	r0, r4
 11486              	.LBB1222:
 11487              	.LBB1220:
 11488              	.LBB1219:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11489              		.loc 1 106 16 view .LVU3540
 11490 1298 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11491              		.loc 1 108 2 is_stmt 1 view .LVU3541
 11492              	.LVL980:
 108:src/keys.c    **** }
 11493              		.loc 1 108 2 is_stmt 0 view .LVU3542
 11494              	.LBE1219:
 11495              	.LBE1220:
 11496              	.LBE1222:
3346:src/keys.c    **** 
 11497              		.loc 1 3346 10 view .LVU3543
 11498 129c FFF7FEFF 		bl	process_catalogue
 11499              	.LVL981:
3346:src/keys.c    **** 
 11500              		.loc 1 3346 10 view .LVU3544
 11501 12a0 0446     		mov	r4, r0
 11502 12a2 FFF79FB8 		b	.L828
 11503              	.LVL982:
 11504              	.L1168:
 11505              	.LBB1223:
 11506              	.LBB1044:
2373:src/keys.c    **** 	}
 11507              		.loc 1 2373 18 view .LVU3545
 11508 12a6 2724     		movs	r4, #39
 11509              	.LVL983:
2373:src/keys.c    **** 	}
 11510              		.loc 1 2373 47 view .LVU3546
 11511 12a8 5444     		add	r4, r4, r10
 11512 12aa FFF79BB8 		b	.L828
 11513              	.LVL984:
 11514              	.L1169:
2373:src/keys.c    **** 	}
 11515              		.loc 1 2373 18 view .LVU3547
 11516 12ae 1E24     		movs	r4, #30
 11517              	.LVL985:
2373:src/keys.c    **** 	}
ARM GAS  /tmp/ccwxoOej.s 			page 326


 11518              		.loc 1 2373 47 view .LVU3548
 11519 12b0 5444     		add	r4, r4, r10
 11520 12b2 FFF797B8 		b	.L828
 11521              	.LVL986:
 11522              	.L1387:
2373:src/keys.c    **** 	}
 11523              		.loc 1 2373 47 view .LVU3549
 11524              	.LBE1044:
 11525              	.LBE1223:
 11526              	.LBB1224:
 11527              	.LBB864:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 11528              		.loc 1 312 74 view .LVU3550
 11529 12b6 D8F81420 		ldr	r2, [r8, #20]
 11530 12ba 5848     		ldr	r0, .L1429+8
 11531 12bc 0242     		tst	r2, r0
 11532 12be 3FF478AC 		beq	.L897
 315:src/keys.c    ****     /*
 11533              		.loc 1 315 3 is_stmt 1 view .LVU3551
 315:src/keys.c    ****     /*
 11534              		.loc 1 315 23 is_stmt 0 view .LVU3552
 11535 12c2 5748     		ldr	r0, .L1429+12
 315:src/keys.c    ****     /*
 11536              		.loc 1 315 6 view .LVU3553
 11537 12c4 0242     		tst	r2, r0
 11538 12c6 3EF4C0AF 		beq	.L1124
 11539 12ca E0E4     		b	.L907
 11540              	.LVL987:
 11541              	.L1142:
 11542              	.LBB855:
 371:src/keys.c    **** #ifndef WINGUI
 11543              		.loc 1 371 8 view .LVU3554
 11544 12cc 554A     		ldr	r2, .L1429+16
 377:src/keys.c    ****   }
 11545              		.loc 1 377 9 view .LVU3555
 11546 12ce 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 11547              		.loc 1 373 27 view .LVU3556
 11548 12d0 4FF0010E 		mov	lr, #1
 11549 12d4 FEF7C6BF 		b	.L909
 11550              	.LVL988:
 11551              	.L1384:
 373:src/keys.c    **** #else
 11552              		.loc 1 373 27 view .LVU3557
 11553              	.LBE855:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11554              		.loc 1 294 27 view .LVU3558
 11555 12d8 242C     		cmp	r4, #36
 11556 12da 7EF4D0AF 		bne	.L914
 11557              	.L1141:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11558              		.loc 1 295 11 view .LVU3559
 11559 12de 4FF0160A 		mov	r10, #22
 11560 12e2 66E4     		b	.L897
 11561              	.LVL989:
 11562              	.L1374:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
ARM GAS  /tmp/ccwxoOej.s 			page 327


 11563              		.loc 1 295 11 view .LVU3560
 11564              	.LBE864:
 11565              	.LBE1224:
 11566              	.LBB1225:
 11567              	.LBB1061:
1735:src/keys.c    **** 	}
 11568              		.loc 1 1735 3 is_stmt 1 view .LVU3561
1735:src/keys.c    **** 	}
 11569              		.loc 1 1735 6 is_stmt 0 view .LVU3562
 11570 12e4 B8F80800 		ldrh	r0, [r8, #8]
 11571              	.LVL990:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11572              		.loc 1 1764 2 is_stmt 1 view .LVU3563
 11573 12e8 3BE4     		b	.L831
 11574              	.LVL991:
 11575              	.L1372:
1725:src/keys.c    **** 		goto fin;
 11576              		.loc 1 1725 3 view .LVU3564
 11577              	.LBB1054:
 11578              	.LBI1054:
1697:src/keys.c    **** 	const int code = 100 + n;
 11579              		.loc 1 1697 12 view .LVU3565
 11580              	.LBB1055:
1698:src/keys.c    **** 	unsigned int pc = state_pc();
 11581              		.loc 1 1698 2 view .LVU3566
1699:src/keys.c    **** 
 11582              		.loc 1 1699 2 view .LVU3567
1699:src/keys.c    **** 
 11583              		.loc 1 1699 20 is_stmt 0 view .LVU3568
 11584 12ea DFF83CB1 		ldr	fp, .L1429+20
 11585 12ee DBF80030 		ldr	r3, [fp]
 11586              	.LVL992:
1699:src/keys.c    **** 
 11587              		.loc 1 1699 15 view .LVU3569
 11588 12f2 B3F8E00F 		ldrh	r0, [r3, #4064]
 11589              	.LVL993:
1701:src/keys.c    **** 		pc = 1;
 11590              		.loc 1 1701 2 is_stmt 1 view .LVU3570
1701:src/keys.c    **** 		pc = 1;
 11591              		.loc 1 1701 5 is_stmt 0 view .LVU3571
 11592 12f6 830B     		lsrs	r3, r0, #14
1702:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11593              		.loc 1 1702 6 view .LVU3572
 11594 12f8 032B     		cmp	r3, #3
 11595              	.LVL994:
1703:src/keys.c    **** 	if (pc > 0)
 11596              		.loc 1 1703 2 is_stmt 1 view .LVU3573
1703:src/keys.c    **** 	if (pc > 0)
 11597              		.loc 1 1703 7 is_stmt 0 view .LVU3574
 11598 12fa 08BF     		it	eq
 11599 12fc 0120     		moveq	r0, #1
 11600              	.LVL995:
1703:src/keys.c    **** 	if (pc > 0)
 11601              		.loc 1 1703 7 view .LVU3575
 11602 12fe 6431     		adds	r1, r1, #100
 11603              	.LVL996:
1703:src/keys.c    **** 	if (pc > 0)
ARM GAS  /tmp/ccwxoOej.s 			page 328


 11604              		.loc 1 1703 7 view .LVU3576
 11605 1300 0322     		movs	r2, #3
 11606              	.LVL997:
1703:src/keys.c    **** 	if (pc > 0)
 11607              		.loc 1 1703 7 view .LVU3577
 11608 1302 FFF7FEFF 		bl	find_label_from
 11609              	.LVL998:
1704:src/keys.c    **** 		return pc;
 11610              		.loc 1 1704 2 is_stmt 1 view .LVU3578
1704:src/keys.c    **** 		return pc;
 11611              		.loc 1 1704 5 is_stmt 0 view .LVU3579
 11612 1306 0028     		cmp	r0, #0
 11613 1308 7FF424AB 		bne	.L840
1706:src/keys.c    **** }
 11614              		.loc 1 1706 2 is_stmt 1 view .LVU3580
1706:src/keys.c    **** }
 11615              		.loc 1 1706 9 is_stmt 0 view .LVU3581
 11616 130c DBF80030 		ldr	r3, [fp]
 11617 1310 B3F8E00F 		ldrh	r0, [r3, #4064]
 11618              	.LVL999:
1706:src/keys.c    **** }
 11619              		.loc 1 1706 9 view .LVU3582
 11620              	.LBE1055:
 11621              	.LBE1054:
1726:src/keys.c    **** 	}
 11622              		.loc 1 1726 3 is_stmt 1 view .LVU3583
 11623 1314 FFF71EBB 		b	.L840
 11624              	.LVL1000:
 11625              	.L1373:
1730:src/keys.c    **** 		goto fin;
 11626              		.loc 1 1730 3 view .LVU3584
1730:src/keys.c    **** 		goto fin;
 11627              		.loc 1 1730 11 is_stmt 0 view .LVU3585
 11628 1318 434B     		ldr	r3, .L1429+20
 11629              	.LVL1001:
1730:src/keys.c    **** 		goto fin;
 11630              		.loc 1 1730 11 view .LVU3586
 11631 131a 1B68     		ldr	r3, [r3]
1730:src/keys.c    **** 		goto fin;
 11632              		.loc 1 1730 9 view .LVU3587
 11633 131c 5888     		ldrh	r0, [r3, #2]
 11634              	.LVL1002:
1731:src/keys.c    **** 	}
 11635              		.loc 1 1731 3 is_stmt 1 view .LVU3588
 11636 131e FFF719BB 		b	.L840
 11637              	.LVL1003:
 11638              	.L1354:
1731:src/keys.c    **** 	}
 11639              		.loc 1 1731 3 is_stmt 0 view .LVU3589
 11640              	.LBE1061:
 11641              	.LBE1225:
 11642              	.LBB1226:
3352:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
 11643              		.loc 1 3352 3 is_stmt 1 view .LVU3590
 11644              	.LBB926:
 11645              	.LBI872:
1777:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
ARM GAS  /tmp/ccwxoOej.s 			page 329


 11646              		.loc 1 1777 12 view .LVU3591
 11647              	.LBB920:
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11648              		.loc 1 1778 2 view .LVU3592
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11649              		.loc 1 1778 33 is_stmt 0 view .LVU3593
 11650 1322 98F80D30 		ldrb	r3, [r8, #13]	@ zero_extendqisi2
 11651 1326 0093     		str	r3, [sp]
 11652              	.LBB874:
 11653              	.LBB875:
 11654              	.LBB876:
 11655              	.LBB877:
 11656              	.LBB878:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11657              		.loc 1 97 18 view .LVU3594
 11658 1328 FFF7FEFF 		bl	shift_down
 11659              	.LVL1004:
 11660              	.LBE878:
 11661              	.LBE877:
 11662              	.LBE876:
 11663              	.LBE875:
 11664              	.LBE874:
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11665              		.loc 1 1778 15 view .LVU3595
 11666 132c 009B     		ldr	r3, [sp]
 11667              	.LVL1005:
1779:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11668              		.loc 1 1779 9 is_stmt 1 view .LVU3596
1780:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11669              		.loc 1 1780 2 view .LVU3597
 11670              	.LBB887:
 11671              	.LBI874:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11672              		.loc 1 114 13 view .LVU3598
 11673              	.LBE887:
 11674              	.LBE920:
 11675              	.LBE926:
 11676              	.LBE1226:
 11677              	.LBE1435:
 11678              	.LBE1508:
 115:src/keys.c    **** }
 11679              		.loc 1 115 2 view .LVU3599
 11680              	.LBB1509:
 11681              	.LBB1436:
 11682              	.LBB1227:
 11683              	.LBB927:
 11684              	.LBB921:
 11685              	.LBB888:
 11686              	.LBB884:
 11687              	.LBI875:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11688              		.loc 1 104 20 view .LVU3600
 11689              	.LBB881:
 105:src/keys.c    **** 	State2.shifts = shift;
 11690              		.loc 1 105 2 view .LVU3601
 11691              	.LBB880:
 11692              	.LBI877:
ARM GAS  /tmp/ccwxoOej.s 			page 330


  96:src/keys.c    **** 	enum shifts s = shift_down();
 11693              		.loc 1 96 13 view .LVU3602
 11694              	.LBB879:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11695              		.loc 1 97 2 view .LVU3603
  98:src/keys.c    **** }
 11696              		.loc 1 98 2 view .LVU3604
  98:src/keys.c    **** }
 11697              		.loc 1 98 52 is_stmt 0 view .LVU3605
 11698 132e 8246     		mov	r10, r0
 11699 1330 08B9     		cbnz	r0, .L992
 11700 1332 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 11701              	.L992:
 11702              	.LVL1006:
  98:src/keys.c    **** }
 11703              		.loc 1 98 52 view .LVU3606
 11704              	.LBE879:
 11705              	.LBE880:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11706              		.loc 1 106 2 is_stmt 1 view .LVU3607
 11707              	.LBE881:
 11708              	.LBE884:
 11709              	.LBE888:
 11710              	.LBB889:
 11711              	.LBB890:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11712              		.loc 1 485 6 is_stmt 0 view .LVU3608
 11713 1336 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 11714              	.LBE890:
 11715              	.LBE889:
 11716              	.LBB906:
 11717              	.LBB885:
 11718              	.LBB882:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11719              		.loc 1 106 16 view .LVU3609
 11720 133a 4FF0000E 		mov	lr, #0
 11721              	.LBE882:
 11722              	.LBE885:
 11723              	.LBE906:
 11724              	.LBB907:
 11725              	.LBB901:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11726              		.loc 1 485 5 view .LVU3610
 11727 133e D106     		lsls	r1, r2, #27
 11728              	.LBE901:
 11729              	.LBE907:
 11730              	.LBB908:
 11731              	.LBB886:
 11732              	.LBB883:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11733              		.loc 1 106 16 view .LVU3611
 11734 1340 88F810E0 		strb	lr, [r8, #16]
 108:src/keys.c    **** }
 11735              		.loc 1 108 2 is_stmt 1 view .LVU3612
 11736              	.LVL1007:
 108:src/keys.c    **** }
 11737              		.loc 1 108 2 is_stmt 0 view .LVU3613
ARM GAS  /tmp/ccwxoOej.s 			page 331


 11738              	.LBE883:
 11739              	.LBE886:
 11740              	.LBE908:
1781:src/keys.c    **** 	State2.alpha_pos = 0;
 11741              		.loc 1 1781 2 is_stmt 1 view .LVU3614
1781:src/keys.c    **** 	State2.alpha_pos = 0;
 11742              		.loc 1 1781 11 is_stmt 0 view .LVU3615
 11743 1344 5046     		mov	r0, r10
 11744              	.LVL1008:
 11745              	.LBB909:
 11746              	.LBI889:
 435:src/keys.c    **** {
 11747              		.loc 1 435 12 is_stmt 1 view .LVU3616
 11748              	.LBB902:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11749              		.loc 1 437 2 view .LVU3617
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11750              		.loc 1 485 2 view .LVU3618
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11751              		.loc 1 485 5 is_stmt 0 view .LVU3619
 11752 1346 74D5     		bpl	.L993
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11753              		.loc 1 486 3 is_stmt 1 view .LVU3620
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11754              		.loc 1 486 6 is_stmt 0 view .LVU3621
 11755 1348 BAF1000F 		cmp	r10, #0
 11756 134c 70D0     		beq	.L1155
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11757              		.loc 1 488 8 is_stmt 1 view .LVU3622
 11758              	.LBB891:
 11759              	.LBB892:
 143:src/keys.c    **** }
 11760              		.loc 1 143 23 is_stmt 0 view .LVU3623
 11761 134e 3149     		ldr	r1, .L1429
 11762              	.LBE892:
 11763              	.LBE891:
 491:src/keys.c    **** }
 11764              		.loc 1 491 49 view .LVU3624
 11765 1350 3648     		ldr	r0, .L1429+24
 11766              	.LVL1009:
 11767              	.LBB897:
 11768              	.LBB893:
 143:src/keys.c    **** }
 11769              		.loc 1 143 23 view .LVU3625
 11770 1352 11F804C0 		ldrb	ip, [r1, r4]	@ zero_extendqisi2
 11771              	.LBE893:
 11772              	.LBE897:
 11773              	.LBE902:
 11774              	.LBE909:
1782:src/keys.c    **** 
 11775              		.loc 1 1782 19 view .LVU3626
 11776 1356 88F80DE0 		strb	lr, [r8, #13]
 11777              	.LBB910:
 11778              	.LBB903:
 489:src/keys.c    **** 	}
 11779              		.loc 1 489 10 view .LVU3627
 11780 135a BAF1020F 		cmp	r10, #2
ARM GAS  /tmp/ccwxoOej.s 			page 332


 491:src/keys.c    **** }
 11781              		.loc 1 491 49 view .LVU3628
 11782 135e 4FF0060E 		mov	lr, #6
 11783 1362 0EFB0C0C 		mla	ip, lr, ip, r0
 489:src/keys.c    **** 	}
 11784              		.loc 1 489 10 view .LVU3629
 11785 1366 14BF     		ite	ne
 11786 1368 5046     		movne	r0, r10
 11787 136a 0520     		moveq	r0, #5
 11788              	.LVL1010:
 491:src/keys.c    **** }
 11789              		.loc 1 491 2 is_stmt 1 view .LVU3630
 11790              	.LBB898:
 11791              	.LBI891:
 131:src/keys.c    **** {
 11792              		.loc 1 131 12 view .LVU3631
 11793              	.LBB894:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11794              		.loc 1 133 2 view .LVU3632
 143:src/keys.c    **** }
 11795              		.loc 1 143 2 view .LVU3633
 143:src/keys.c    **** }
 11796              		.loc 1 143 2 is_stmt 0 view .LVU3634
 11797 136c 063C     		subs	r4, r4, #6
 11798              	.LVL1011:
 143:src/keys.c    **** }
 11799              		.loc 1 143 2 view .LVU3635
 11800              	.LBE894:
 11801              	.LBE898:
 491:src/keys.c    **** }
 11802              		.loc 1 491 49 view .LVU3636
 11803 136e 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 11804              	.LVL1012:
 491:src/keys.c    **** }
 11805              		.loc 1 491 49 view .LVU3637
 11806              	.LBE903:
 11807              	.LBE910:
1782:src/keys.c    **** 
 11808              		.loc 1 1782 2 is_stmt 1 view .LVU3638
1784:src/keys.c    **** 	case K10:	// STO
 11809              		.loc 1 1784 2 view .LVU3639
 11810 1372 212C     		cmp	r4, #33
 11811 1374 3FF66EA9 		bhi	.L996
 11812 1378 01A1     		adr	r1, .L1116
 11813 137a 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 11814 137e 00BF     		.p2align 2
 11815              	.L1116:
 11816 1380 7B1B0000 		.word	.L1005+1
 11817 1384 591B0000 		.word	.L1004+1
 11818 1388 55060000 		.word	.L996+1
 11819 138c 55060000 		.word	.L996+1
 11820 1390 55060000 		.word	.L996+1
 11821 1394 55060000 		.word	.L996+1
 11822 1398 05190000 		.word	.L1003+1
 11823 139c 55060000 		.word	.L996+1
 11824 13a0 55060000 		.word	.L996+1
 11825 13a4 55060000 		.word	.L996+1
ARM GAS  /tmp/ccwxoOej.s 			page 333


 11826 13a8 F5180000 		.word	.L1011+1
 11827 13ac 55060000 		.word	.L996+1
 11828 13b0 23040000 		.word	.L1001+1
 11829 13b4 55060000 		.word	.L996+1
 11830 13b8 55060000 		.word	.L996+1
 11831 13bc 55060000 		.word	.L996+1
 11832 13c0 55060000 		.word	.L996+1
 11833 13c4 55060000 		.word	.L996+1
 11834 13c8 8B190000 		.word	.L1000+1
 11835 13cc 55060000 		.word	.L996+1
 11836 13d0 55060000 		.word	.L996+1
 11837 13d4 55060000 		.word	.L996+1
 11838 13d8 55060000 		.word	.L996+1
 11839 13dc 55060000 		.word	.L996+1
 11840 13e0 55060000 		.word	.L996+1
 11841 13e4 55060000 		.word	.L996+1
 11842 13e8 55060000 		.word	.L996+1
 11843 13ec 55060000 		.word	.L996+1
 11844 13f0 55060000 		.word	.L996+1
 11845 13f4 55060000 		.word	.L996+1
 11846 13f8 63190000 		.word	.L999+1
 11847 13fc 55060000 		.word	.L996+1
 11848 1400 55060000 		.word	.L996+1
 11849 1404 53190000 		.word	.L997+1
 11850              	.LVL1013:
 11851              		.p2align 1
 11852              	.L1379:
1784:src/keys.c    **** 	case K10:	// STO
 11853              		.loc 1 1784 2 is_stmt 0 view .LVU3640
 11854              	.LBE921:
 11855              	.LBE927:
 11856              	.LBE1227:
 11857              	.LBB1228:
 11858              	.LBB1099:
2927:src/keys.c    **** 		return STATE_UNFINISHED;
 11859              		.loc 1 2927 3 is_stmt 1 view .LVU3641
 11860 1408 3368     		ldr	r3, [r6]
 11861              	.LVL1014:
2927:src/keys.c    **** 		return STATE_UNFINISHED;
 11862              		.loc 1 2927 17 is_stmt 0 view .LVU3642
 11863 140a 88F80C00 		strb	r0, [r8, #12]
2928:src/keys.c    **** 	} 
 11864              		.loc 1 2928 3 is_stmt 1 view .LVU3643
 11865              	.LBE1099:
 11866              	.LBE1228:
3294:src/keys.c    **** 
 11867              		.loc 1 3294 10 is_stmt 0 view .LVU3644
 11868 140e 3324     		movs	r4, #51
 11869              	.LVL1015:
 11870              	.LBB1229:
 11871              	.LBB1100:
2928:src/keys.c    **** 	} 
 11872              		.loc 1 2928 10 view .LVU3645
 11873 1410 FEF750BE 		b	.L794
 11874              	.L1430:
 11875              		.align	2
 11876              	.L1429:
ARM GAS  /tmp/ccwxoOej.s 			page 334


 11877 1414 00000000 		.word	.LANCHOR6
 11878 1418 00000000 		.word	.LANCHOR5
 11879 141c 000A4000 		.word	4196864
 11880 1420 00080800 		.word	526336
 11881 1424 00000000 		.word	.LANCHOR17
 11882 1428 00000000 		.word	main_ram
 11883 142c 00000000 		.word	.LANCHOR15
 11884              	.LVL1016:
 11885              	.L1155:
2928:src/keys.c    **** 	} 
 11886              		.loc 1 2928 10 view .LVU3646
 11887              	.LBE1100:
 11888              	.LBE1229:
 11889              	.LBB1230:
 11890              	.LBB928:
 11891              	.LBB922:
 11892              	.LBB911:
 11893              	.LBB904:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 11894              		.loc 1 487 10 view .LVU3647
 11895 1430 0420     		movs	r0, #4
 11896              	.LVL1017:
 11897              	.L993:
 491:src/keys.c    **** }
 11898              		.loc 1 491 2 is_stmt 1 view .LVU3648
 11899              	.LBB899:
 131:src/keys.c    **** {
 11900              		.loc 1 131 12 view .LVU3649
 11901              	.LBB895:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11902              		.loc 1 133 2 view .LVU3650
 143:src/keys.c    **** }
 11903              		.loc 1 143 2 view .LVU3651
 143:src/keys.c    **** }
 11904              		.loc 1 143 23 is_stmt 0 view .LVU3652
 11905 1432 DFF848C3 		ldr	ip, .L1431+8
 11906              	.LBE895:
 11907              	.LBE899:
 491:src/keys.c    **** }
 11908              		.loc 1 491 49 view .LVU3653
 11909 1436 CF49     		ldr	r1, .L1431
 11910              	.LBB900:
 11911              	.LBB896:
 143:src/keys.c    **** }
 11912              		.loc 1 143 23 view .LVU3654
 11913 1438 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 11914              	.LBE896:
 11915              	.LBE900:
 491:src/keys.c    **** }
 11916              		.loc 1 491 49 view .LVU3655
 11917 143c 4FF0060E 		mov	lr, #6
 11918 1440 0EFB0C1C 		mla	ip, lr, ip, r1
 11919 1444 063C     		subs	r4, r4, #6
 11920              	.LVL1018:
 491:src/keys.c    **** }
 11921              		.loc 1 491 49 view .LVU3656
 11922              	.LBE904:
ARM GAS  /tmp/ccwxoOej.s 			page 335


 11923              	.LBE911:
1782:src/keys.c    **** 
 11924              		.loc 1 1782 19 view .LVU3657
 11925 1446 4FF0000E 		mov	lr, #0
 11926              	.LBB912:
 11927              	.LBB905:
 491:src/keys.c    **** }
 11928              		.loc 1 491 49 view .LVU3658
 11929 144a 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 11930              	.LVL1019:
 491:src/keys.c    **** }
 11931              		.loc 1 491 49 view .LVU3659
 11932              	.LBE905:
 11933              	.LBE912:
1782:src/keys.c    **** 
 11934              		.loc 1 1782 2 is_stmt 1 view .LVU3660
1782:src/keys.c    **** 
 11935              		.loc 1 1782 19 is_stmt 0 view .LVU3661
 11936 144e 88F80DE0 		strb	lr, [r8, #13]
1784:src/keys.c    **** 	case K10:	// STO
 11937              		.loc 1 1784 2 is_stmt 1 view .LVU3662
 11938 1452 212C     		cmp	r4, #33
 11939 1454 3FF6FEA8 		bhi	.L996
 11940 1458 01A1     		adr	r1, .L998
 11941 145a 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 11942 145e 00BF     		.p2align 2
 11943              	.L998:
 11944 1460 7B1B0000 		.word	.L1005+1
 11945 1464 591B0000 		.word	.L1004+1
 11946 1468 55060000 		.word	.L996+1
 11947 146c 55060000 		.word	.L996+1
 11948 1470 55060000 		.word	.L996+1
 11949 1474 55060000 		.word	.L996+1
 11950 1478 05190000 		.word	.L1003+1
 11951 147c 55060000 		.word	.L996+1
 11952 1480 55060000 		.word	.L996+1
 11953 1484 55060000 		.word	.L996+1
 11954 1488 ED180000 		.word	.L1002+1
 11955 148c 55060000 		.word	.L996+1
 11956 1490 23040000 		.word	.L1001+1
 11957 1494 55060000 		.word	.L996+1
 11958 1498 55060000 		.word	.L996+1
 11959 149c 55060000 		.word	.L996+1
 11960 14a0 55060000 		.word	.L996+1
 11961 14a4 55060000 		.word	.L996+1
 11962 14a8 8B190000 		.word	.L1000+1
 11963 14ac 55060000 		.word	.L996+1
 11964 14b0 55060000 		.word	.L996+1
 11965 14b4 55060000 		.word	.L996+1
 11966 14b8 55060000 		.word	.L996+1
 11967 14bc 55060000 		.word	.L996+1
 11968 14c0 55060000 		.word	.L996+1
 11969 14c4 55060000 		.word	.L996+1
 11970 14c8 55060000 		.word	.L996+1
 11971 14cc 55060000 		.word	.L996+1
 11972 14d0 55060000 		.word	.L996+1
 11973 14d4 55060000 		.word	.L996+1
ARM GAS  /tmp/ccwxoOej.s 			page 336


 11974 14d8 63190000 		.word	.L999+1
 11975 14dc 55060000 		.word	.L996+1
 11976 14e0 55060000 		.word	.L996+1
 11977 14e4 53190000 		.word	.L997+1
 11978              	.LVL1020:
 11979              		.p2align 1
 11980              	.L1122:
1784:src/keys.c    **** 	case K10:	// STO
 11981              		.loc 1 1784 2 is_stmt 0 view .LVU3663
 11982              	.LBE922:
 11983              	.LBE928:
 11984              	.LBE1230:
 11985              	.LBB1231:
 11986              	.LBB1232:
1331:src/keys.c    ****      switch (c) {
 11987              		.loc 1 1331 6 is_stmt 1 view .LVU3664
 11988 14e8 0020     		movs	r0, #0
 11989 14ea FFF7FEFF 		bl	finish_cpx_entry
 11990              	.LVL1021:
1332:src/keys.c    ****      case (K60):
 11991              		.loc 1 1332 6 view .LVU3665
 11992              	.L1315:
1332:src/keys.c    ****      case (K60):
 11993              		.loc 1 1332 6 is_stmt 0 view .LVU3666
 11994              	.LBE1232:
 11995              	.LBE1231:
3366:src/keys.c    **** 	} else {
 11996              		.loc 1 3366 3 is_stmt 1 view .LVU3667
3366:src/keys.c    **** 	} else {
 11997              		.loc 1 3366 10 is_stmt 0 view .LVU3668
 11998 14ee 2046     		mov	r0, r4
 11999              	.L1314:
 12000 14f0 FFF7FEFF 		bl	process_cmplx
 12001              	.LVL1022:
 12002 14f4 0446     		mov	r4, r0
 12003 14f6 FEF775BF 		b	.L828
 12004              	.LVL1023:
 12005              	.L1375:
 12006              	.LBB1347:
 12007              	.LBB1062:
1739:src/keys.c    **** 			goto fin2;
 12008              		.loc 1 1739 3 is_stmt 1 view .LVU3669
1739:src/keys.c    **** 			goto fin2;
 12009              		.loc 1 1739 13 is_stmt 0 view .LVU3670
 12010 14fa 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 12011              	.LVL1024:
1739:src/keys.c    **** 			goto fin2;
 12012              		.loc 1 1739 6 view .LVU3671
 12013 14fe 002B     		cmp	r3, #0
 12014 1500 3FF42AAA 		beq	.L844
1742:src/keys.c    **** 			State2.digval /= 10;
 12015              		.loc 1 1742 4 is_stmt 1 view .LVU3672
1742:src/keys.c    **** 			State2.digval /= 10;
 12016              		.loc 1 1742 19 is_stmt 0 view .LVU3673
 12017 1504 013B     		subs	r3, r3, #1
1743:src/keys.c    **** 		}
 12018              		.loc 1 1743 18 view .LVU3674
ARM GAS  /tmp/ccwxoOej.s 			page 337


 12019 1506 B8F80820 		ldrh	r2, [r8, #8]
 12020              	.LVL1025:
1742:src/keys.c    **** 			State2.digval /= 10;
 12021              		.loc 1 1742 19 view .LVU3675
 12022 150a 88F80B30 		strb	r3, [r8, #11]
1743:src/keys.c    **** 		}
 12023              		.loc 1 1743 4 is_stmt 1 view .LVU3676
1743:src/keys.c    **** 		}
 12024              		.loc 1 1743 18 is_stmt 0 view .LVU3677
 12025 150e 0A21     		movs	r1, #10
 12026              	.LVL1026:
1743:src/keys.c    **** 		}
 12027              		.loc 1 1743 18 view .LVU3678
 12028 1510 3368     		ldr	r3, [r6]
 12029 1512 B2FBF1F2 		udiv	r2, r2, r1
 12030              	.LBE1062:
 12031              	.LBE1347:
3285:src/keys.c    **** 
 12032              		.loc 1 3285 10 view .LVU3679
 12033 1516 3324     		movs	r4, #51
 12034              	.LVL1027:
 12035              	.LBB1348:
 12036              	.LBB1063:
1743:src/keys.c    **** 		}
 12037              		.loc 1 1743 18 view .LVU3680
 12038 1518 A8F80820 		strh	r2, [r8, #8]	@ movhi
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 12039              		.loc 1 1764 2 is_stmt 1 view .LVU3681
 12040 151c FEF7CABD 		b	.L794
 12041              	.LVL1028:
 12042              	.L1389:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 12043              		.loc 1 1764 2 is_stmt 0 view .LVU3682
 12044              	.LBE1063:
 12045              	.LBE1348:
 12046              	.LBB1349:
 12047              	.LBB1009:
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12048              		.loc 1 2817 3 is_stmt 1 view .LVU3683
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12049              		.loc 1 2817 12 is_stmt 0 view .LVU3684
 12050 1520 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 12051 1524 2046     		mov	r0, r4
 12052 1526 941E     		subs	r4, r2, #2
 12053              	.LVL1029:
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12054              		.loc 1 2817 12 view .LVU3685
 12055 1528 6242     		rsbs	r2, r4, #0
 12056 152a 6241     		adcs	r2, r2, r4
 12057 152c FFF7FEFF 		bl	process_catalogue
 12058              	.LVL1030:
2818:src/keys.c    **** 			return opcode;
 12059              		.loc 1 2818 6 view .LVU3686
 12060 1530 3328     		cmp	r0, #51
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12061              		.loc 1 2817 12 view .LVU3687
 12062 1532 0446     		mov	r4, r0
ARM GAS  /tmp/ccwxoOej.s 			page 338


 12063              	.LVL1031:
2818:src/keys.c    **** 			return opcode;
 12064              		.loc 1 2818 3 is_stmt 1 view .LVU3688
2818:src/keys.c    **** 			return opcode;
 12065              		.loc 1 2818 6 is_stmt 0 view .LVU3689
 12066 1534 3EF4BDAD 		beq	.L1318
2820:src/keys.c    **** 		goto add_char;
 12067              		.loc 1 2820 3 is_stmt 1 view .LVU3690
2820:src/keys.c    **** 		goto add_char;
 12068              		.loc 1 2820 6 is_stmt 0 view .LVU3691
 12069 1538 C4B2     		uxtb	r4, r0
 12070              	.LVL1032:
2821:src/keys.c    **** 	}
 12071              		.loc 1 2821 3 is_stmt 1 view .LVU3692
 12072 153a 17E4     		b	.L923
 12073              	.LVL1033:
 12074              	.L1365:
2821:src/keys.c    **** 	}
 12075              		.loc 1 2821 3 is_stmt 0 view .LVU3693
 12076              	.LBE1009:
 12077              	.LBE1349:
3253:src/keys.c    **** 	CLEAR_REAL;
 12078              		.loc 1 3253 2 is_stmt 1 view .LVU3694
 12079              	.LBB1350:
 12080              	.LBI1350:
1245:src/keys.c    **** 	// called if number entry terminated by EXIT key
 12081              		.loc 1 1245 13 view .LVU3695
 12082              	.LBB1351:
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12083              		.loc 1 1249 2 view .LVU3696
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12084              		.loc 1 1249 5 is_stmt 0 view .LVU3697
 12085 153c 13F0060F 		tst	r3, #6
 12086 1540 2FD0     		beq	.L809
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 12087              		.loc 1 1250 2 is_stmt 1 view .LVU3698
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 12088              		.loc 1 1250 5 is_stmt 0 view .LVU3699
 12089 1542 DC06     		lsls	r4, r3, #27
 12090              	.LVL1034:
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 12091              		.loc 1 1250 5 view .LVU3700
 12092 1544 40F14881 		bpl	.L810
1251:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 12093              		.loc 1 1251 3 is_stmt 1 view .LVU3701
 12094 1548 0F20     		movs	r0, #15
 12095 154a FFF7FEFF 		bl	drop
 12096              	.LVL1035:
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12097              		.loc 1 1252 3 view .LVU3702
 12098 154e 6A20     		movs	r0, #106
 12099 1550 FFF7FEFF 		bl	get_reg_n
 12100              	.LVL1036:
 12101 1554 0446     		mov	r4, r0
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12102              		.loc 1 1252 33 is_stmt 0 view .LVU3703
 12103 1556 6E20     		movs	r0, #110
ARM GAS  /tmp/ccwxoOej.s 			page 339


 12104 1558 FFF7FEFF 		bl	get_reg_n
 12105              	.LVL1037:
 12106 155c 0146     		mov	r1, r0
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12107              		.loc 1 1252 3 view .LVU3704
 12108 155e 2046     		mov	r0, r4
 12109 1560 FFF7FEFF 		bl	copyreg
 12110              	.LVL1038:
1253:src/keys.c    **** 	}
 12111              		.loc 1 1253 3 is_stmt 1 view .LVU3705
 12112 1564 6B20     		movs	r0, #107
 12113              	.L1311:
1257:src/keys.c    **** 	}
 12114              		.loc 1 1257 3 is_stmt 0 view .LVU3706
 12115 1566 FFF7FEFF 		bl	get_reg_n
 12116              	.LVL1039:
 12117 156a 0446     		mov	r4, r0
1257:src/keys.c    **** 	}
 12118              		.loc 1 1257 33 view .LVU3707
 12119 156c 6F20     		movs	r0, #111
 12120 156e FFF7FEFF 		bl	get_reg_n
 12121              	.LVL1040:
 12122 1572 0146     		mov	r1, r0
1257:src/keys.c    **** 	}
 12123              		.loc 1 1257 3 view .LVU3708
 12124 1574 2046     		mov	r0, r4
 12125 1576 FFF7FEFF 		bl	copyreg
 12126              	.LVL1041:
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12127              		.loc 1 1259 2 is_stmt 1 view .LVU3709
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12128              		.loc 1 1259 22 is_stmt 0 view .LVU3710
 12129 157a DBF80020 		ldr	r2, [fp]
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12130              		.loc 1 1259 20 view .LVU3711
 12131 157e 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12132              		.loc 1 1259 22 view .LVU3712
 12133 1582 92F8AC3F 		ldrb	r3, [r2, #4012]	@ zero_extendqisi2
 12134 1586 C3F30013 		ubfx	r3, r3, #4, #1
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12135              		.loc 1 1259 20 view .LVU3713
 12136 158a 63F38611 		bfi	r1, r3, #6, #1
 12137 158e 88F81710 		strb	r1, [r8, #23]
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 12138              		.loc 1 1260 2 is_stmt 1 view .LVU3714
1261:src/keys.c    **** }
 12139              		.loc 1 1261 2 view .LVU3715
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 12140              		.loc 1 1260 2 is_stmt 0 view .LVU3716
 12141 1592 B2F8AC3F 		ldrh	r3, [r2, #4012]
 12142 1596 23F48873 		bic	r3, r3, #272
 12143 159a 43F48073 		orr	r3, r3, #256
 12144 159e A2F8AC3F 		strh	r3, [r2, #4012]	@ movhi
 12145              	.L809:
 12146              	.LBE1351:
 12147              	.LBE1350:
ARM GAS  /tmp/ccwxoOej.s 			page 340


3254:src/keys.c    **** 	CLEAR_IMAG;
 12148              		.loc 1 3254 2 is_stmt 1 view .LVU3717
 12149 15a2 DBF80020 		ldr	r2, [fp]
3255:src/keys.c    ****       }
 12150              		.loc 1 3255 2 view .LVU3718
3254:src/keys.c    **** 	CLEAR_IMAG;
 12151              		.loc 1 3254 2 is_stmt 0 view .LVU3719
 12152 15a6 92F8AC3F 		ldrb	r3, [r2, #4012]	@ zero_extendqisi2
 12153 15aa 23F00603 		bic	r3, r3, #6
 12154 15ae 82F8AC3F 		strb	r3, [r2, #4012]
 12155 15b2 FFF755B9 		b	.L808
 12156              	.L1356:
3371:src/keys.c    **** 		// print_debug (3, c);
 12157              		.loc 1 3371 4 is_stmt 1 view .LVU3720
3371:src/keys.c    **** 		// print_debug (3, c);
 12158              		.loc 1 3371 11 is_stmt 0 view .LVU3721
 12159 15b6 FFF7FEFF 		bl	process_h_shifted
 12160              	.LVL1042:
 12161 15ba 0446     		mov	r4, r0
 12162 15bc FEF712BF 		b	.L828
 12163              	.LVL1043:
 12164              	.L924:
 12165              	.LBB1353:
 12166              	.LBB1010:
2836:src/keys.c    **** 			if (State2.numdigit == 0)
 12167              		.loc 1 2836 3 is_stmt 1 view .LVU3722
2836:src/keys.c    **** 			if (State2.numdigit == 0)
 12168              		.loc 1 2836 6 is_stmt 0 view .LVU3723
 12169 15c0 0329     		cmp	r1, #3
 12170 15c2 3FF4C9AB 		beq	.L930
2837:src/keys.c    **** 				reset_multi();
 12171              		.loc 1 2837 4 is_stmt 1 view .LVU3724
2837:src/keys.c    **** 				reset_multi();
 12172              		.loc 1 2837 14 is_stmt 0 view .LVU3725
 12173 15c6 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2837:src/keys.c    **** 				reset_multi();
 12174              		.loc 1 2837 7 view .LVU3726
 12175 15ca 002A     		cmp	r2, #0
 12176 15cc 40F00982 		bne	.L931
2838:src/keys.c    **** 			else
 12177              		.loc 1 2838 5 is_stmt 1 view .LVU3727
 12178              	.LBB1000:
 12179              	.LBI1000:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12180              		.loc 1 2803 13 view .LVU3728
 12181              	.LBB1001:
2805:src/keys.c    **** 	if (! State2.alphas )
 12182              		.loc 1 2805 2 view .LVU3729
2805:src/keys.c    **** 	if (! State2.alphas )
 12183              		.loc 1 2805 15 is_stmt 0 view .LVU3730
 12184 15d0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12185              	.LVL1044:
2806:src/keys.c    **** 		State2.alphashift = 0;
 12186              		.loc 1 2806 6 view .LVU3731
 12187 15d4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 12188              		.loc 1 2805 15 view .LVU3732
ARM GAS  /tmp/ccwxoOej.s 			page 341


 12189 15d8 62F3C301 		bfi	r1, r2, #3, #1
2806:src/keys.c    **** 		State2.alphashift = 0;
 12190              		.loc 1 2806 5 view .LVU3733
 12191 15dc 13F00802 		ands	r2, r3, #8
2805:src/keys.c    **** 	if (! State2.alphas )
 12192              		.loc 1 2805 15 view .LVU3734
 12193 15e0 88F81510 		strb	r1, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 12194              		.loc 1 2806 2 is_stmt 1 view .LVU3735
2806:src/keys.c    **** 		State2.alphashift = 0;
 12195              		.loc 1 2806 5 is_stmt 0 view .LVU3736
 12196 15e4 3FF4E0A8 		beq	.L934
 12197 15e8 FFF7E2B8 		b	.L1322
 12198              	.LVL1045:
 12199              	.L1390:
2806:src/keys.c    **** 		State2.alphashift = 0;
 12200              		.loc 1 2806 5 view .LVU3737
 12201              	.LBE1001:
 12202              	.LBE1000:
2826:src/keys.c    **** 				break;
 12203              		.loc 1 2826 3 is_stmt 1 view .LVU3738
2826:src/keys.c    **** 				break;
 12204              		.loc 1 2826 6 is_stmt 0 view .LVU3739
 12205 15ec 0029     		cmp	r1, #0
 12206 15ee 7FF4ABAB 		bne	.L926
2828:src/keys.c    **** 		if (State2.numdigit == 0)
 12207              		.loc 1 2828 3 is_stmt 1 view .LVU3740
 12208              	.LBB1002:
 12209              	.LBI1002:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12210              		.loc 1 2803 13 view .LVU3741
 12211              	.LBB1003:
2805:src/keys.c    **** 	if (! State2.alphas )
 12212              		.loc 1 2805 2 view .LVU3742
2805:src/keys.c    **** 	if (! State2.alphas )
 12213              		.loc 1 2805 15 is_stmt 0 view .LVU3743
 12214 15f2 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 12215              		.loc 1 2806 6 view .LVU3744
 12216 15f6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 12217              		.loc 1 2805 15 view .LVU3745
 12218 15fa 61F3C302 		bfi	r2, r1, #3, #1
 12219 15fe 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 12220              		.loc 1 2806 2 is_stmt 1 view .LVU3746
2806:src/keys.c    **** 		State2.alphashift = 0;
 12221              		.loc 1 2806 5 is_stmt 0 view .LVU3747
 12222 1602 1A07     		lsls	r2, r3, #28
2807:src/keys.c    **** }
 12223              		.loc 1 2807 3 is_stmt 1 view .LVU3748
 12224              	.LBE1003:
 12225              	.LBE1002:
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 12226              		.loc 1 2829 3 view .LVU3749
 12227              	.LBB1005:
 12228              	.LBB1004:
ARM GAS  /tmp/ccwxoOej.s 			page 342


2807:src/keys.c    **** }
 12229              		.loc 1 2807 21 is_stmt 0 view .LVU3750
 12230 1604 5CBF     		itt	pl
 12231 1606 61F30413 		bfipl	r3, r1, #4, #1
 12232 160a 88F81630 		strbpl	r3, [r8, #22]
 12233              	.LBE1004:
 12234              	.LBE1005:
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 12235              		.loc 1 2829 13 view .LVU3751
 12236 160e 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 12237              		.loc 1 2829 6 view .LVU3752
 12238 1612 002B     		cmp	r3, #0
 12239 1614 3FF4CCA8 		beq	.L1322
2831:src/keys.c    **** 			State2.digval2 = 0;
 12240              		.loc 1 2831 8 is_stmt 1 view .LVU3753
2831:src/keys.c    **** 			State2.digval2 = 0;
 12241              		.loc 1 2831 11 is_stmt 0 view .LVU3754
 12242 1618 012B     		cmp	r3, #1
2832:src/keys.c    **** 		goto fin;
 12243              		.loc 1 2832 19 view .LVU3755
 12244 161a 4FF00004 		mov	r4, #0
 12245              	.LVL1046:
2831:src/keys.c    **** 			State2.digval2 = 0;
 12246              		.loc 1 2831 11 view .LVU3756
 12247 161e 7FF4BCAB 		bne	.L929
2832:src/keys.c    **** 		goto fin;
 12248              		.loc 1 2832 4 is_stmt 1 view .LVU3757
2832:src/keys.c    **** 		goto fin;
 12249              		.loc 1 2832 19 is_stmt 0 view .LVU3758
 12250 1622 88F80A40 		strb	r4, [r8, #10]
 12251 1626 FFF7B8BB 		b	.L929
 12252              	.LVL1047:
 12253              	.L1029:
2832:src/keys.c    **** 		goto fin;
 12254              		.loc 1 2832 19 view .LVU3759
 12255              	.LBE1010:
 12256              	.LBE1353:
 12257              	.LBB1354:
 12258              	.LBB1318:
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12259              		.loc 1 1297 4 is_stmt 1 view .LVU3760
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12260              		.loc 1 1297 7 is_stmt 0 view .LVU3761
 12261 162a BAF1020F 		cmp	r10, #2
 12262 162e 1CD1     		bne	.L1031
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12263              		.loc 1 1297 28 view .LVU3762
 12264 1630 A01F     		subs	r0, r4, #6
 12265 1632 C0B2     		uxtb	r0, r0
 12266 1634 0228     		cmp	r0, #2
 12267 1636 00F22482 		bhi	.L1032
1298:src/keys.c    ****    }
 12268              		.loc 1 1298 6 is_stmt 1 view .LVU3763
 12269 163a FFF7FEFF 		bl	convert_regK
 12270              	.LVL1048:
1300:src/keys.c    ****      return process_fg_shifted (c);
ARM GAS  /tmp/ccwxoOej.s 			page 343


 12271              		.loc 1 1300 4 view .LVU3764
 12272              	.L1317:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12273              		.loc 1 1300 4 is_stmt 0 view .LVU3765
 12274              	.LBE1318:
 12275              	.LBE1354:
3369:src/keys.c    **** 		if (shift == SHIFT_H)
 12276              		.loc 1 3369 4 is_stmt 1 view .LVU3766
3369:src/keys.c    **** 		if (shift == SHIFT_H)
 12277              		.loc 1 3369 11 is_stmt 0 view .LVU3767
 12278 163e 2046     		mov	r0, r4
 12279 1640 FFF7FEFF 		bl	process_fg_shifted
 12280              	.LVL1049:
 12281 1644 0446     		mov	r4, r0
 12282 1646 FEF7CDBE 		b	.L828
 12283              	.L1355:
3362:src/keys.c    **** 	}
 12284              		.loc 1 3362 3 is_stmt 1 view .LVU3768
 12285              	.LVL1050:
 12286              	.LBB1355:
 12287              	.LBI1231:
1286:src/keys.c    **** 
 12288              		.loc 1 1286 13 view .LVU3769
 12289              	.LBB1319:
1288:src/keys.c    **** 
 12290              		.loc 1 1288 4 view .LVU3770
 12291              	.LBB1233:
 12292              	.LBI1233:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12293              		.loc 1 96 13 view .LVU3771
 12294              	.LBB1234:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12295              		.loc 1 97 2 view .LVU3772
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12296              		.loc 1 97 18 is_stmt 0 view .LVU3773
 12297 164a FFF7FEFF 		bl	shift_down
 12298              	.LVL1051:
  98:src/keys.c    **** }
 12299              		.loc 1 98 2 is_stmt 1 view .LVU3774
  98:src/keys.c    **** }
 12300              		.loc 1 98 52 is_stmt 0 view .LVU3775
 12301 164e 8246     		mov	r10, r0
 12302 1650 08B9     		cbnz	r0, .L1028
 12303 1652 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 12304              	.L1028:
 12305              	.LVL1052:
  98:src/keys.c    **** }
 12306              		.loc 1 98 52 view .LVU3776
 12307              	.LBE1234:
 12308              	.LBE1233:
1292:src/keys.c    ****      return process_h_shifted (c);
 12309              		.loc 1 1292 4 is_stmt 1 view .LVU3777
1292:src/keys.c    ****      return process_h_shifted (c);
 12310              		.loc 1 1292 7 is_stmt 0 view .LVU3778
 12311 1656 042C     		cmp	r4, #4
 12312 1658 E7D8     		bhi	.L1029
1292:src/keys.c    ****      return process_h_shifted (c);
ARM GAS  /tmp/ccwxoOej.s 			page 344


 12313              		.loc 1 1292 19 view .LVU3779
 12314 165a BAF1030F 		cmp	r10, #3
 12315 165e 00F05782 		beq	.L1402
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12316              		.loc 1 1297 4 is_stmt 1 view .LVU3780
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12317              		.loc 1 1297 7 is_stmt 0 view .LVU3781
 12318 1662 BAF1020F 		cmp	r10, #2
 12319 1666 00F00C82 		beq	.L1032
 12320              	.L1031:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12321              		.loc 1 1300 4 is_stmt 1 view .LVU3782
1300:src/keys.c    ****      return process_fg_shifted (c);
 12322              		.loc 1 1300 7 is_stmt 0 view .LVU3783
 12323 166a 631F     		subs	r3, r4, #5
 12324 166c 032B     		cmp	r3, #3
 12325 166e 00F2BF81 		bhi	.L1034
1300:src/keys.c    ****      return process_fg_shifted (c);
 12326              		.loc 1 1300 55 view .LVU3784
 12327 1672 0AF1FF33 		add	r3, r10, #-1
1300:src/keys.c    ****      return process_fg_shifted (c);
 12328              		.loc 1 1300 34 view .LVU3785
 12329 1676 DBB2     		uxtb	r3, r3
 12330 1678 012B     		cmp	r3, #1
 12331 167a E0D9     		bls	.L1317
 12332              	.L1035:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12333              		.loc 1 1330 4 is_stmt 1 view .LVU3786
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12334              		.loc 1 1330 7 is_stmt 0 view .LVU3787
 12335 167c BAF1000F 		cmp	r10, #0
 12336 1680 40F00682 		bne	.L1309
1411:src/keys.c    ****    case (K61):
 12337              		.loc 1 1411 4 is_stmt 1 view .LVU3788
 12338 1684 231F     		subs	r3, r4, #4
 12339 1686 292B     		cmp	r3, #41
 12340 1688 00F2A982 		bhi	.L1068
 12341 168c DFE813F0 		tbh	[pc, r3, lsl #1]
 12342              	.L1070:
 12343 1690 C401     		.2byte	(.L1071-.L1070)/2
 12344 1692 A702     		.2byte	(.L1068-.L1070)/2
 12345 1694 A702     		.2byte	(.L1068-.L1070)/2
 12346 1696 A702     		.2byte	(.L1068-.L1070)/2
 12347 1698 A702     		.2byte	(.L1068-.L1070)/2
 12348 169a A702     		.2byte	(.L1068-.L1070)/2
 12349 169c A702     		.2byte	(.L1068-.L1070)/2
 12350 169e A702     		.2byte	(.L1068-.L1070)/2
 12351 16a0 A702     		.2byte	(.L1068-.L1070)/2
 12352 16a2 A702     		.2byte	(.L1068-.L1070)/2
 12353 16a4 9C02     		.2byte	(.L1073-.L1070)/2
 12354 16a6 BD01     		.2byte	(.L1072-.L1070)/2
 12355 16a8 C401     		.2byte	(.L1071-.L1070)/2
 12356 16aa A702     		.2byte	(.L1068-.L1070)/2
 12357 16ac A702     		.2byte	(.L1068-.L1070)/2
 12358 16ae BD01     		.2byte	(.L1072-.L1070)/2
 12359 16b0 BD01     		.2byte	(.L1072-.L1070)/2
 12360 16b2 BD01     		.2byte	(.L1072-.L1070)/2
ARM GAS  /tmp/ccwxoOej.s 			page 345


 12361 16b4 A702     		.2byte	(.L1068-.L1070)/2
 12362 16b6 A702     		.2byte	(.L1068-.L1070)/2
 12363 16b8 A702     		.2byte	(.L1068-.L1070)/2
 12364 16ba BD01     		.2byte	(.L1072-.L1070)/2
 12365 16bc BD01     		.2byte	(.L1072-.L1070)/2
 12366 16be BD01     		.2byte	(.L1072-.L1070)/2
 12367 16c0 A702     		.2byte	(.L1068-.L1070)/2
 12368 16c2 A702     		.2byte	(.L1068-.L1070)/2
 12369 16c4 A702     		.2byte	(.L1068-.L1070)/2
 12370 16c6 BD01     		.2byte	(.L1072-.L1070)/2
 12371 16c8 BD01     		.2byte	(.L1072-.L1070)/2
 12372 16ca BD01     		.2byte	(.L1072-.L1070)/2
 12373 16cc A702     		.2byte	(.L1068-.L1070)/2
 12374 16ce A702     		.2byte	(.L1068-.L1070)/2
 12375 16d0 A702     		.2byte	(.L1068-.L1070)/2
 12376 16d2 BD01     		.2byte	(.L1072-.L1070)/2
 12377 16d4 BD01     		.2byte	(.L1072-.L1070)/2
 12378 16d6 A702     		.2byte	(.L1068-.L1070)/2
 12379 16d8 A702     		.2byte	(.L1068-.L1070)/2
 12380 16da A702     		.2byte	(.L1068-.L1070)/2
 12381 16dc A702     		.2byte	(.L1068-.L1070)/2
 12382 16de A702     		.2byte	(.L1068-.L1070)/2
 12383 16e0 C401     		.2byte	(.L1071-.L1070)/2
 12384 16e2 B002     		.2byte	(.L1069-.L1070)/2
 12385              	.LVL1053:
 12386              		.p2align 1
 12387              	.L1399:
1411:src/keys.c    ****    case (K61):
 12388              		.loc 1 1411 4 is_stmt 0 view .LVU3789
 12389              	.LBE1319:
 12390              	.LBE1355:
 12391              	.LBB1356:
 12392              	.LBB1205:
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 12393              		.loc 1 3143 50 view .LVU3790
 12394 16e4 0D2C     		cmp	r4, #13
 12395 16e6 7FF43EAD 		bne	.L974
3144:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12396              		.loc 1 3144 3 is_stmt 1 view .LVU3791
 12397 16ea B9F1010F 		cmp	r9, #1
 12398 16ee 14BF     		ite	ne
 12399 16f0 2C20     		movne	r0, #44
 12400              	.LVL1054:
3144:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12401              		.loc 1 3144 3 is_stmt 0 view .LVU3792
 12402 16f2 2B20     		moveq	r0, #43
 12403 16f4 FFF7FEFF 		bl	set_window
 12404              	.LVL1055:
3145:src/keys.c    **** 	}
 12405              		.loc 1 3145 3 is_stmt 1 view .LVU3793
 12406              	.LBB1201:
 12407              	.LBI1201:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 12408              		.loc 1 741 13 view .LVU3794
 12409              	.LBB1202:
 742:src/keys.c    **** }
 12410              		.loc 1 742 2 view .LVU3795
ARM GAS  /tmp/ccwxoOej.s 			page 346


 742:src/keys.c    **** }
 12411              		.loc 1 742 15 is_stmt 0 view .LVU3796
 12412 16f8 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 12413 16fc 3368     		ldr	r3, [r6]
 12414 16fe 013A     		subs	r2, r2, #1
 12415 1700 18BF     		it	ne
 12416 1702 0122     		movne	r2, #1
 12417 1704 88F81120 		strb	r2, [r8, #17]
 12418              	.LVL1056:
 742:src/keys.c    **** }
 12419              		.loc 1 742 15 view .LVU3797
 12420              	.LBE1202:
 12421              	.LBE1201:
3152:src/keys.c    **** 	case K_DOWN:
 12422              		.loc 1 3152 2 is_stmt 1 view .LVU3798
3152:src/keys.c    **** 	case K_DOWN:
 12423              		.loc 1 3152 2 is_stmt 0 view .LVU3799
 12424              	.LBE1205:
 12425              	.LBE1356:
 12426              	.LBE1436:
 12427              	.LBE1509:
3614:src/keys.c    ****     case STATE_SST:
 12428              		.loc 1 3614 5 is_stmt 1 view .LVU3800
 12429              	.LBB1510:
 12430              	.LBB1437:
 12431              	.LBB1357:
 12432              	.LBB1206:
3203:src/keys.c    **** 	}
 12433              		.loc 1 3203 10 is_stmt 0 view .LVU3801
 12434 1708 3324     		movs	r4, #51
 12435 170a FEF7D3BC 		b	.L794
 12436              	.LVL1057:
 12437              	.L1396:
3127:src/keys.c    **** 	const int g_max = global_regs();
 12438              		.loc 1 3127 33 view .LVU3802
 12439 170e FFF7FEFF 		bl	local_regs
 12440              	.LVL1058:
 12441 1712 8246     		mov	r10, r0
 12442 1714 17E5     		b	.L966
 12443              	.LVL1059:
 12444              	.L1348:
3127:src/keys.c    **** 	const int g_max = global_regs();
 12445              		.loc 1 3127 33 view .LVU3803
 12446 1716 0093     		str	r3, [sp]
 12447              	.LBE1206:
 12448              	.LBE1357:
 12449              	.LBB1358:
 12450              	.LBB865:
 12451              	.LBB856:
 373:src/keys.c    **** #else
 12452              		.loc 1 373 45 view .LVU3804
 12453 1718 FFF7FEFF 		bl	shift_down
 12454              	.LVL1060:
 373:src/keys.c    **** #else
 12455              		.loc 1 373 42 view .LVU3805
 12456 171c 0328     		cmp	r0, #3
 12457 171e 009B     		ldr	r3, [sp]
ARM GAS  /tmp/ccwxoOej.s 			page 347


 12458 1720 52D0     		beq	.L910
 12459 1722 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 371:src/keys.c    **** #ifndef WINGUI
 12460              		.loc 1 371 8 view .LVU3806
 12461 1726 144A     		ldr	r2, .L1431+4
 373:src/keys.c    **** #else
 12462              		.loc 1 373 73 view .LVU3807
 12463 1728 D646     		mov	lr, r10
 377:src/keys.c    ****   }
 12464              		.loc 1 377 9 view .LVU3808
 12465 172a 0C20     		movs	r0, #12
 12466 172c FEF79ABD 		b	.L909
 12467              	.LVL1061:
 12468              	.L1147:
 377:src/keys.c    ****   }
 12469              		.loc 1 377 9 view .LVU3809
 12470              	.LBE856:
 12471              	.LBE865:
 12472              	.LBE1358:
 12473              	.LBB1359:
 12474              	.LBB968:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 12475              		.loc 1 2996 27 view .LVU3810
 12476 1730 4FF0030A 		mov	r10, #3
 12477 1734 FFF7A6BB 		b	.L938
 12478              	.LVL1062:
 12479              	.L1380:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 12480              		.loc 1 2996 27 view .LVU3811
 12481              	.LBE968:
 12482              	.LBE1359:
 12483              	.LBB1360:
 12484              	.LBB1101:
 12485              	.LBB1093:
2935:src/keys.c    **** 		else if (nn != NO_REG)
 12486              		.loc 1 2935 4 is_stmt 1 view .LVU3812
2937:src/keys.c    **** 	}
 12487              		.loc 1 2937 6 is_stmt 0 view .LVU3813
 12488 1738 9A42     		cmp	r2, r3
 12489 173a 08BF     		it	eq
 12490 173c 0A23     		moveq	r3, #10
 12491              	.LVL1063:
2937:src/keys.c    **** 	}
 12492              		.loc 1 2937 6 view .LVU3814
 12493 173e FFF7ABB9 		b	.L877
 12494              	.LVL1064:
 12495              	.L1398:
2937:src/keys.c    **** 	}
 12496              		.loc 1 2937 6 view .LVU3815
 12497              	.LBE1093:
 12498              	.LBE1101:
 12499              	.LBE1360:
 12500              	.LBB1361:
 12501              	.LBB1207:
 12502              	.LBB1203:
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12503              		.loc 1 3137 3 is_stmt 1 view .LVU3816
ARM GAS  /tmp/ccwxoOej.s 			page 348


3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12504              		.loc 1 3137 19 is_stmt 0 view .LVU3817
 12505 1742 B8F80810 		ldrh	r1, [r8, #8]
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12506              		.loc 1 3137 27 view .LVU3818
 12507 1746 0A23     		movs	r3, #10
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12508              		.loc 1 3137 32 view .LVU3819
 12509 1748 03FB01B2 		mla	r2, r3, r1, fp
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12510              		.loc 1 3137 37 view .LVU3820
 12511 174c 6424     		movs	r4, #100
 12512              	.LVL1065:
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12513              		.loc 1 3137 37 view .LVU3821
 12514 174e B2FBF4F3 		udiv	r3, r2, r4
 12515 1752 04FB1323 		mls	r3, r4, r3, r2
 12516              	.LVL1066:
3138:src/keys.c    **** 			dv = n;
 12517              		.loc 1 3138 3 is_stmt 1 view .LVU3822
3138:src/keys.c    **** 			dv = n;
 12518              		.loc 1 3138 6 is_stmt 0 view .LVU3823
 12519 1756 5345     		cmp	r3, r10
 12520 1758 09DA     		bge	.L972
3138:src/keys.c    **** 			dv = n;
 12521              		.loc 1 3138 21 view .LVU3824
 12522 175a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3138:src/keys.c    **** 			dv = n;
 12523              		.loc 1 3138 17 view .LVU3825
 12524 175e D407     		lsls	r4, r2, #31
 12525 1760 3FF556AD 		bmi	.L1313
3138:src/keys.c    **** 			dv = n;
 12526              		.loc 1 3138 36 view .LVU3826
 12527 1764 8842     		cmp	r0, r1
 12528 1766 02DD     		ble	.L972
3138:src/keys.c    **** 			dv = n;
 12529              		.loc 1 3138 63 view .LVU3827
 12530 1768 9842     		cmp	r0, r3
 12531 176a 3FF751AD 		bgt	.L1313
 12532              	.L972:
3139:src/keys.c    **** 		State2.digval = dv;
 12533              		.loc 1 3139 4 is_stmt 1 view .LVU3828
3139:src/keys.c    **** 		State2.digval = dv;
 12534              		.loc 1 3139 7 is_stmt 0 view .LVU3829
 12535 176e 5B46     		mov	r3, fp
 12536              	.LVL1067:
3140:src/keys.c    **** 		goto reset_window;
 12537              		.loc 1 3140 3 is_stmt 1 view .LVU3830
 12538 1770 4EE5     		b	.L1313
 12539              	.L1432:
 12540 1772 00BF     		.align	2
 12541              	.L1431:
 12542 1774 00000000 		.word	.LANCHOR15
 12543 1778 00000000 		.word	.LANCHOR17
 12544 177c 00000000 		.word	.LANCHOR6
 12545              	.LVL1068:
 12546              	.L1395:
ARM GAS  /tmp/ccwxoOej.s 			page 349


3140:src/keys.c    **** 		goto reset_window;
 12547              		.loc 1 3140 3 is_stmt 0 view .LVU3831
 12548              	.LBE1203:
 12549              	.LBE1207:
 12550              	.LBE1361:
 12551              	.LBB1362:
 12552              	.LBB969:
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12553              		.loc 1 3005 3 is_stmt 1 view .LVU3832
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12554              		.loc 1 3005 8 is_stmt 0 view .LVU3833
 12555 1780 4FEA8A34 		lsl	r4, r10, #14
 12556              	.LVL1069:
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12557              		.loc 1 3005 6 view .LVU3834
 12558 1784 44F00104 		orr	r4, r4, #1
 12559              	.LVL1070:
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12560              		.loc 1 3006 3 is_stmt 1 view .LVU3835
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12561              		.loc 1 3006 9 is_stmt 0 view .LVU3836
 12562 1788 2046     		mov	r0, r4
 12563 178a FFF7FEFF 		bl	is_label_or_end_at
 12564              	.LVL1071:
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12565              		.loc 1 3006 6 view .LVU3837
 12566 178e 0246     		mov	r2, r0
 12567 1790 0028     		cmp	r0, #0
 12568 1792 00F00A82 		beq	.L1403
 12569              	.L942:
3008:src/keys.c    **** 		return STATE_UNFINISHED;
 12570              		.loc 1 3008 3 is_stmt 1 view .LVU3838
3008:src/keys.c    **** 		return STATE_UNFINISHED;
 12571              		.loc 1 3008 17 is_stmt 0 view .LVU3839
 12572 1796 A8F80840 		strh	r4, [r8, #8]	@ movhi
3009:src/keys.c    **** 	}
 12573              		.loc 1 3009 3 is_stmt 1 view .LVU3840
 12574 179a 3368     		ldr	r3, [r6]
3009:src/keys.c    **** 	}
 12575              		.loc 1 3009 10 is_stmt 0 view .LVU3841
 12576 179c 3324     		movs	r4, #51
 12577              	.LVL1072:
3009:src/keys.c    **** 	}
 12578              		.loc 1 3009 10 view .LVU3842
 12579 179e FEF789BC 		b	.L794
 12580              	.LVL1073:
 12581              	.L1400:
3009:src/keys.c    **** 	}
 12582              		.loc 1 3009 10 view .LVU3843
 12583              	.LBE969:
 12584              	.LBE1362:
 12585              	.LBB1363:
 12586              	.LBB1208:
3148:src/keys.c    **** 		goto reset_window;
 12587              		.loc 1 3148 3 is_stmt 1 view .LVU3844
3148:src/keys.c    **** 		goto reset_window;
 12588              		.loc 1 3148 17 is_stmt 0 view .LVU3845
ARM GAS  /tmp/ccwxoOej.s 			page 350


 12589 17a2 A8F808B0 		strh	fp, [r8, #8]	@ movhi
3149:src/keys.c    **** 	}
 12590              		.loc 1 3149 3 is_stmt 1 view .LVU3846
 12591 17a6 35E5     		b	.L970
 12592              	.LVL1074:
 12593              	.L1392:
3149:src/keys.c    **** 	}
 12594              		.loc 1 3149 3 is_stmt 0 view .LVU3847
 12595              	.LBE1208:
 12596              	.LBE1363:
 12597              	.LBB1364:
 12598              	.LBB1011:
2862:src/keys.c    **** 		State2.numdigit = 1;
 12599              		.loc 1 2862 3 is_stmt 1 view .LVU3848
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12600              		.loc 1 2863 19 is_stmt 0 view .LVU3849
 12601 17a8 0122     		movs	r2, #1
2862:src/keys.c    **** 		State2.numdigit = 1;
 12602              		.loc 1 2862 17 view .LVU3850
 12603 17aa A8F80840 		strh	r4, [r8, #8]	@ movhi
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12604              		.loc 1 2863 3 is_stmt 1 view .LVU3851
 12605 17ae 3368     		ldr	r3, [r6]
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12606              		.loc 1 2863 19 is_stmt 0 view .LVU3852
 12607 17b0 88F80B20 		strb	r2, [r8, #11]
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12608              		.loc 1 2864 3 is_stmt 1 view .LVU3853
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12609              		.loc 1 2864 10 is_stmt 0 view .LVU3854
 12610 17b4 3324     		movs	r4, #51
 12611              	.LVL1075:
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12612              		.loc 1 2864 10 view .LVU3855
 12613 17b6 FEF77DBC 		b	.L794
 12614              	.LVL1076:
 12615              	.L1394:
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12616              		.loc 1 2864 10 view .LVU3856
 12617              	.LBE1011:
 12618              	.LBE1364:
 12619              	.LBB1365:
 12620              	.LBB970:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12621              		.loc 1 2998 37 view .LVU3857
 12622 17ba 5846     		mov	r0, fp
 12623 17bc FFF7FEFF 		bl	getprog
 12624              	.LVL1077:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12625              		.loc 1 2998 63 view .LVU3858
 12626 17c0 20F47062 		bic	r2, r0, #3840
 12627 17c4 FFF768BB 		b	.L939
 12628              	.LVL1078:
 12629              	.L910:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12630              		.loc 1 2998 63 view .LVU3859
 12631 17c8 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccwxoOej.s 			page 351


 12632              	.LBE970:
 12633              	.LBE1365:
 12634              	.LBB1366:
 12635              	.LBB866:
 12636              	.LBB857:
 371:src/keys.c    **** #ifndef WINGUI
 12637              		.loc 1 371 8 view .LVU3860
 12638 17cc DF4A     		ldr	r2, .L1433
 377:src/keys.c    ****   }
 12639              		.loc 1 377 9 view .LVU3861
 12640 17ce 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 12641              		.loc 1 373 73 view .LVU3862
 12642 17d0 4FF0020E 		mov	lr, #2
 12643 17d4 FEF746BD 		b	.L909
 12644              	.LVL1079:
 12645              	.L810:
 373:src/keys.c    **** #else
 12646              		.loc 1 373 73 view .LVU3863
 12647              	.LBE857:
 12648              	.LBE866:
 12649              	.LBE1366:
 12650              	.LBB1367:
 12651              	.LBB1352:
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12652              		.loc 1 1256 3 is_stmt 1 view .LVU3864
 12653 17d8 6420     		movs	r0, #100
 12654 17da FFF7FEFF 		bl	get_reg_n
 12655              	.LVL1080:
 12656 17de 0446     		mov	r4, r0
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12657              		.loc 1 1256 33 is_stmt 0 view .LVU3865
 12658 17e0 6E20     		movs	r0, #110
 12659 17e2 FFF7FEFF 		bl	get_reg_n
 12660              	.LVL1081:
 12661 17e6 0146     		mov	r1, r0
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12662              		.loc 1 1256 3 view .LVU3866
 12663 17e8 2046     		mov	r0, r4
 12664 17ea FFF7FEFF 		bl	copyreg
 12665              	.LVL1082:
1257:src/keys.c    **** 	}
 12666              		.loc 1 1257 3 is_stmt 1 view .LVU3867
 12667 17ee 6520     		movs	r0, #101
 12668 17f0 B9E6     		b	.L1311
 12669              	.LVL1083:
 12670              	.L1386:
1257:src/keys.c    **** 	}
 12671              		.loc 1 1257 3 is_stmt 0 view .LVU3868
 12672              	.LBE1352:
 12673              	.LBE1367:
 12674              	.LBB1368:
 12675              	.LBB867:
 287:src/keys.c    **** 					}
 12676              		.loc 1 287 7 is_stmt 1 view .LVU3869
 12677 17f2 0120     		movs	r0, #1
 12678 17f4 FFF7FEFF 		bl	finish_cpx_entry
ARM GAS  /tmp/ccwxoOej.s 			page 352


 12679              	.LVL1084:
 287:src/keys.c    **** 					}
 12680              		.loc 1 287 7 is_stmt 0 view .LVU3870
 12681              	.LBE867:
 12682              	.LBE1368:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 12683              		.loc 1 3325 2 is_stmt 1 view .LVU3871
 12684              	.LBB1369:
 12685              	.LBB868:
 289:src/keys.c    **** 				default:
 12686              		.loc 1 289 13 is_stmt 0 view .LVU3872
 12687 17f8 4FF0110A 		mov	r10, #17
 12688 17fc FFF7D9B9 		b	.L897
 12689              	.LVL1085:
 12690              	.L1140:
 306:src/keys.c    **** 		}
 12691              		.loc 1 306 11 view .LVU3873
 12692 1800 4FF0100A 		mov	r10, #16
 12693 1804 FFF7D5B9 		b	.L897
 12694              	.LVL1086:
 12695              	.L1385:
 298:src/keys.c    **** 				stack_begin (1);
 12696              		.loc 1 298 5 is_stmt 1 view .LVU3874
 12697 1808 40F00200 		orr	r0, r0, #2
 12698 180c 8CF8AC0F 		strb	r0, [ip, #4012]
 299:src/keys.c    **** 			}
 12699              		.loc 1 299 5 view .LVU3875
 12700 1810 1846     		mov	r0, r3
 12701 1812 FFF7FEFF 		bl	stack_begin
 12702              	.LVL1087:
 299:src/keys.c    **** 			}
 12703              		.loc 1 299 5 is_stmt 0 view .LVU3876
 12704              	.LBE868:
 12705              	.LBE1369:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 12706              		.loc 1 3325 2 is_stmt 1 view .LVU3877
 12707              	.LBB1370:
 12708              	.LBB869:
 306:src/keys.c    **** 		}
 12709              		.loc 1 306 11 is_stmt 0 view .LVU3878
 12710 1816 4FF0100A 		mov	r10, #16
 12711 181a FFF7CAB9 		b	.L897
 12712              	.LVL1088:
 12713              	.L1376:
 306:src/keys.c    **** 		}
 12714              		.loc 1 306 11 view .LVU3879
 12715              	.LBE869:
 12716              	.LBE1370:
 12717              	.LBB1371:
 12718              	.LBB1064:
1748:src/keys.c    **** 		if (rawpc == 1)
 12719              		.loc 1 1748 3 is_stmt 1 view .LVU3880
1748:src/keys.c    **** 		if (rawpc == 1)
 12720              		.loc 1 1748 11 is_stmt 0 view .LVU3881
 12721 181e DFF834B3 		ldr	fp, .L1433+8
 12722 1822 DBF80030 		ldr	r3, [fp]
 12723              	.LVL1089:
ARM GAS  /tmp/ccwxoOej.s 			page 353


1748:src/keys.c    **** 		if (rawpc == 1)
 12724              		.loc 1 1748 9 view .LVU3882
 12725 1826 B3F8E00F 		ldrh	r0, [r3, #4064]
 12726              	.LVL1090:
1749:src/keys.c    **** 			rawpc = 0;
 12727              		.loc 1 1749 3 is_stmt 1 view .LVU3883
1750:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12728              		.loc 1 1750 10 is_stmt 0 view .LVU3884
 12729 182a 0128     		cmp	r0, #1
 12730              	.LVL1091:
1751:src/keys.c    **** 		update_program_bounds(1);
 12731              		.loc 1 1751 3 is_stmt 1 view .LVU3885
 12732 182c 08BF     		it	eq
 12733 182e 0020     		moveq	r0, #0
 12734              	.LVL1092:
1751:src/keys.c    **** 		update_program_bounds(1);
 12735              		.loc 1 1751 3 is_stmt 0 view .LVU3886
 12736 1830 0021     		movs	r1, #0
 12737 1832 FFF7FEFF 		bl	do_dec
 12738              	.LVL1093:
1751:src/keys.c    **** 		update_program_bounds(1);
 12739              		.loc 1 1751 3 view .LVU3887
 12740 1836 FFF7FEFF 		bl	set_pc
 12741              	.LVL1094:
1752:src/keys.c    **** 		rawpc = ProgBegin;
 12742              		.loc 1 1752 3 is_stmt 1 view .LVU3888
 12743 183a 0120     		movs	r0, #1
 12744 183c FFF7FEFF 		bl	update_program_bounds
 12745              	.LVL1095:
1753:src/keys.c    **** 		goto fin;
 12746              		.loc 1 1753 3 view .LVU3889
1753:src/keys.c    **** 		goto fin;
 12747              		.loc 1 1753 11 is_stmt 0 view .LVU3890
 12748 1840 DBF80030 		ldr	r3, [fp]
1753:src/keys.c    **** 		goto fin;
 12749              		.loc 1 1753 9 view .LVU3891
 12750 1844 B3F8EC0F 		ldrh	r0, [r3, #4076]
 12751              	.LVL1096:
1754:src/keys.c    **** 	}
 12752              		.loc 1 1754 3 is_stmt 1 view .LVU3892
 12753 1848 FFF784B8 		b	.L840
 12754              	.LVL1097:
 12755              	.L1099:
1754:src/keys.c    **** 	}
 12756              		.loc 1 1754 3 is_stmt 0 view .LVU3893
 12757              	.LBE1064:
 12758              	.LBE1371:
 12759              	.LBE1437:
 12760              	.LBE1510:
3650:src/keys.c    **** 	NonProgrammable = 0;
 12761              		.loc 1 3650 26 view .LVU3894
 12762 184c C04A     		ldr	r2, .L1433+4
 12763 184e 1368     		ldr	r3, [r2]
 12764 1850 2546     		mov	r5, r4
 12765 1852 002B     		cmp	r3, #0
 12766 1854 7EF418AF 		bne	.L1100
3650:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccwxoOej.s 			page 354


 12767              		.loc 1 3650 26 view .LVU3895
 12768 1858 FEF785BE 		b	.L1101
 12769              	.L1360:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12770              		.loc 1 3651 2 is_stmt 1 view .LVU3896
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12771              		.loc 1 3651 18 is_stmt 0 view .LVU3897
 12772 185c 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12773              		.loc 1 3652 2 is_stmt 1 view .LVU3898
 12774 185e FEF779BF 		b	.L1098
 12775              	.LVL1098:
 12776              	.L1391:
 12777              	.LBB1511:
 12778              	.LBB1438:
 12779              	.LBB1372:
 12780              	.LBB1012:
 12781              	.LBB1006:
 12782              	.LBB997:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 12783              		.loc 1 488 8 view .LVU3899
 489:src/keys.c    **** 	}
 12784              		.loc 1 489 10 is_stmt 0 view .LVU3900
 12785 1862 0229     		cmp	r1, #2
 12786 1864 08BF     		it	eq
 12787 1866 0521     		moveq	r1, #5
 12788              	.LVL1099:
 489:src/keys.c    **** 	}
 12789              		.loc 1 489 10 view .LVU3901
 12790 1868 FFF776BA 		b	.L930
 12791              	.LVL1100:
 12792              	.L1397:
 489:src/keys.c    **** 	}
 12793              		.loc 1 489 10 view .LVU3902
 12794              	.LBE997:
 12795              	.LBE1006:
 12796              	.LBE1012:
 12797              	.LBE1372:
 12798              	.LBB1373:
 12799              	.LBB1209:
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12800              		.loc 1 3131 3 is_stmt 1 view .LVU3903
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12801              		.loc 1 3131 7 is_stmt 0 view .LVU3904
 12802 186c FFF7FEFF 		bl	local_regs
 12803              	.LVL1101:
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12804              		.loc 1 3131 6 view .LVU3905
 12805 1870 68B1     		cbz	r0, .L968
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12806              		.loc 1 3132 4 is_stmt 1 view .LVU3906
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12807              		.loc 1 3132 19 is_stmt 0 view .LVU3907
 12808 1872 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12809              		.loc 1 3132 34 view .LVU3908
 12810 1876 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
ARM GAS  /tmp/ccwxoOej.s 			page 355


3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12811              		.loc 1 3132 19 view .LVU3909
 12812 187a 03F00101 		and	r1, r3, #1
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12813              		.loc 1 3132 34 view .LVU3910
 12814 187e 0A43     		orrs	r2, r1, r2
 12815 1880 0CBF     		ite	eq
 12816 1882 0122     		moveq	r2, #1
 12817 1884 0022     		movne	r2, #0
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12818              		.loc 1 3132 17 view .LVU3911
 12819 1886 62F30003 		bfi	r3, r2, #0, #1
 12820 188a 88F81630 		strb	r3, [r8, #22]
 12821              	.L968:
3133:src/keys.c    **** 		goto reset_window;
 12822              		.loc 1 3133 3 is_stmt 1 view .LVU3912
3133:src/keys.c    **** 		goto reset_window;
 12823              		.loc 1 3133 32 is_stmt 0 view .LVU3913
 12824 188e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3133:src/keys.c    **** 		goto reset_window;
 12825              		.loc 1 3133 17 view .LVU3914
 12826 1892 13F0010F 		tst	r3, #1
 12827 1896 14BF     		ite	ne
 12828 1898 0023     		movne	r3, #0
 12829 189a 6423     		moveq	r3, #100
 12830 189c A8F80830 		strh	r3, [r8, #8]	@ movhi
3134:src/keys.c    **** 	}
 12831              		.loc 1 3134 3 is_stmt 1 view .LVU3915
 12832 18a0 B8E4     		b	.L970
 12833              	.LVL1102:
 12834              	.L864:
3134:src/keys.c    **** 	}
 12835              		.loc 1 3134 3 is_stmt 0 view .LVU3916
 12836              	.LBE1209:
 12837              	.LBE1373:
 12838              	.LBB1374:
 12839              	.LBB1045:
2371:src/keys.c    **** 		// Special 1
 12840              		.loc 1 2371 7 is_stmt 1 view .LVU3917
2371:src/keys.c    **** 		// Special 1
 12841              		.loc 1 2371 10 is_stmt 0 view .LVU3918
 12842 18a2 012B     		cmp	r3, #1
 12843 18a4 7FF43AA9 		bne	.L866
2373:src/keys.c    **** 	}
 12844              		.loc 1 2373 3 is_stmt 1 view .LVU3919
2373:src/keys.c    **** 	}
 12845              		.loc 1 2373 18 is_stmt 0 view .LVU3920
 12846 18a8 BEF1000F 		cmp	lr, #0
 12847 18ac 14BF     		ite	ne
 12848 18ae 2724     		movne	r4, #39
 12849              	.LVL1103:
2373:src/keys.c    **** 	}
 12850              		.loc 1 2373 18 view .LVU3921
 12851 18b0 1E24     		moveq	r4, #30
2373:src/keys.c    **** 	}
 12852              		.loc 1 2373 47 view .LVU3922
 12853 18b2 5444     		add	r4, r4, r10
ARM GAS  /tmp/ccwxoOej.s 			page 356


 12854 18b4 FEF796BD 		b	.L828
 12855              	.LVL1104:
 12856              	.L1393:
2373:src/keys.c    **** 	}
 12857              		.loc 1 2373 47 view .LVU3923
 12858              	.LBE1045:
 12859              	.LBE1374:
 12860              	.LBB1375:
 12861              	.LBB1013:
2866:src/keys.c    **** 		State2.numdigit = 2;
 12862              		.loc 1 2866 3 is_stmt 1 view .LVU3924
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 12863              		.loc 1 2867 19 is_stmt 0 view .LVU3925
 12864 18b8 0222     		movs	r2, #2
2866:src/keys.c    **** 		State2.numdigit = 2;
 12865              		.loc 1 2866 18 view .LVU3926
 12866 18ba 88F80A40 		strb	r4, [r8, #10]
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 12867              		.loc 1 2867 3 is_stmt 1 view .LVU3927
 12868 18be 3368     		ldr	r3, [r6]
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 12869              		.loc 1 2867 19 is_stmt 0 view .LVU3928
 12870 18c0 88F80B20 		strb	r2, [r8, #11]
2868:src/keys.c    **** 	}
 12871              		.loc 1 2868 3 is_stmt 1 view .LVU3929
2868:src/keys.c    **** 	}
 12872              		.loc 1 2868 10 is_stmt 0 view .LVU3930
 12873 18c4 3324     		movs	r4, #51
 12874              	.LVL1105:
2868:src/keys.c    **** 	}
 12875              		.loc 1 2868 10 view .LVU3931
 12876 18c6 FEF7F5BB 		b	.L794
 12877              	.LVL1106:
 12878              	.L1361:
2868:src/keys.c    **** 	}
 12879              		.loc 1 2868 10 view .LVU3932
 12880 18ca 2546     		mov	r5, r4
 12881 18cc FEF742BE 		b	.L855
 12882              	.LVL1107:
 12883              	.L1363:
2847:src/keys.c    **** 		else
 12884              		.loc 1 2847 4 is_stmt 1 view .LVU3933
2847:src/keys.c    **** 		else
 12885              		.loc 1 2847 34 is_stmt 0 view .LVU3934
 12886 18d0 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 12887 18d4 3368     		ldr	r3, [r6]
 12888 18d6 C2F30011 		ubfx	r1, r2, #4, #1
 12889              	.LVL1108:
2847:src/keys.c    **** 		else
 12890              		.loc 1 2847 26 view .LVU3935
 12891 18da C1F10101 		rsb	r1, r1, #1
2847:src/keys.c    **** 		else
 12892              		.loc 1 2847 22 view .LVU3936
 12893 18de 61F30412 		bfi	r2, r1, #4, #1
 12894 18e2 88F81620 		strb	r2, [r8, #22]
2850:src/keys.c    **** 
 12895              		.loc 1 2850 10 view .LVU3937
ARM GAS  /tmp/ccwxoOej.s 			page 357


 12896 18e6 3324     		movs	r4, #51
 12897              	.LVL1109:
2850:src/keys.c    **** 
 12898              		.loc 1 2850 10 view .LVU3938
 12899 18e8 FEF7E4BB 		b	.L794
 12900              	.LVL1110:
 12901              	.L1002:
2850:src/keys.c    **** 
 12902              		.loc 1 2850 10 view .LVU3939
 12903              	.LBE1013:
 12904              	.LBE1375:
 12905              	.LBB1376:
 12906              	.LBB929:
 12907              	.LBB923:
1820:src/keys.c    **** 			return STATE_BACKSPACE;
 12908              		.loc 1 1820 3 is_stmt 1 view .LVU3940
1820:src/keys.c    **** 			return STATE_BACKSPACE;
 12909              		.loc 1 1820 6 is_stmt 0 view .LVU3941
 12910 18ec BAF1000F 		cmp	r10, #0
 12911 18f0 3EF411AF 		beq	.L1010
 12912              	.LVL1111:
 12913              	.L1011:
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12914              		.loc 1 1822 3 is_stmt 1 view .LVU3942
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12915              		.loc 1 1822 6 is_stmt 0 view .LVU3943
 12916 18f4 BAF1030F 		cmp	r10, #3
 12917 18f8 7EF4ACAE 		bne	.L996
1823:src/keys.c    **** 		break;
 12918              		.loc 1 1823 11 view .LVU3944
 12919 18fc 4FF4BA74 		mov	r4, #372
 12920 1900 FEF7ADBE 		b	.L1012
 12921              	.L1003:
1803:src/keys.c    **** 			break;
 12922              		.loc 1 1803 3 is_stmt 1 view .LVU3945
1803:src/keys.c    **** 			break;
 12923              		.loc 1 1803 24 is_stmt 0 view .LVU3946
 12924 1904 AAF10203 		sub	r3, r10, #2
 12925              	.LVL1112:
1803:src/keys.c    **** 			break;
 12926              		.loc 1 1803 6 view .LVU3947
 12927 1908 DBB2     		uxtb	r3, r3
 12928 190a 012B     		cmp	r3, #1
 12929 190c 7EF6A2AE 		bls	.L996
1805:src/keys.c    **** 			State2.multi = 1;
 12930              		.loc 1 1805 3 is_stmt 1 view .LVU3948
1805:src/keys.c    **** 			State2.multi = 1;
 12931              		.loc 1 1805 6 is_stmt 0 view .LVU3949
 12932 1910 BAF1010F 		cmp	r10, #1
 12933 1914 02D1     		bne	.L1009
1805:src/keys.c    **** 			State2.multi = 1;
 12934              		.loc 1 1805 24 view .LVU3950
 12935 1916 12F04002 		ands	r2, r2, #64
 12936 191a 0DD0     		beq	.L1404
 12937              	.L1009:
1811:src/keys.c    **** 		State2.alphashift = 0;
 12938              		.loc 1 1811 3 is_stmt 1 view .LVU3951
ARM GAS  /tmp/ccwxoOej.s 			page 358


1812:src/keys.c    **** #ifdef DM42
 12939              		.loc 1 1812 3 view .LVU3952
1811:src/keys.c    **** 		State2.alphashift = 0;
 12940              		.loc 1 1811 17 is_stmt 0 view .LVU3953
 12941 191c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1814:src/keys.c    **** 		display_current_menu();
 12942              		.loc 1 1814 3 view .LVU3954
 12943 1920 4FF0FF30 		mov	r0, #-1
 12944              	.LVL1113:
1811:src/keys.c    **** 		State2.alphashift = 0;
 12945              		.loc 1 1811 17 view .LVU3955
 12946 1924 23F01803 		bic	r3, r3, #24
 12947 1928 88F81630 		strb	r3, [r8, #22]
1814:src/keys.c    **** 		display_current_menu();
 12948              		.loc 1 1814 3 is_stmt 1 view .LVU3956
 12949 192c FFF7FEFF 		bl	set_menu
 12950              	.LVL1114:
1815:src/keys.c    **** #endif
 12951              		.loc 1 1815 3 view .LVU3957
 12952 1930 FFF7FEFF 		bl	display_current_menu
 12953              	.LVL1115:
1817:src/keys.c    **** 
 12954              		.loc 1 1817 3 view .LVU3958
1817:src/keys.c    **** 
 12955              		.loc 1 1817 10 is_stmt 0 view .LVU3959
 12956 1934 FEF783BD 		b	.L1007
 12957              	.LVL1116:
 12958              	.L1404:
1806:src/keys.c    **** 			State2.numdigit = 0;
 12959              		.loc 1 1806 4 is_stmt 1 view .LVU3960
1806:src/keys.c    **** 			State2.numdigit = 0;
 12960              		.loc 1 1806 17 is_stmt 0 view .LVU3961
 12961 1938 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1807:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12962              		.loc 1 1807 20 view .LVU3962
 12963 193c 88F80B20 		strb	r2, [r8, #11]
1806:src/keys.c    **** 			State2.numdigit = 0;
 12964              		.loc 1 1806 17 view .LVU3963
 12965 1940 43F00803 		orr	r3, r3, #8
1808:src/keys.c    **** 			return STATE_UNFINISHED;
 12966              		.loc 1 1808 12 view .LVU3964
 12967 1944 0A22     		movs	r2, #10
1806:src/keys.c    **** 			State2.numdigit = 0;
 12968              		.loc 1 1806 17 view .LVU3965
 12969 1946 88F81530 		strb	r3, [r8, #21]
1807:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12970              		.loc 1 1807 4 is_stmt 1 view .LVU3966
1808:src/keys.c    **** 			return STATE_UNFINISHED;
 12971              		.loc 1 1808 4 view .LVU3967
1808:src/keys.c    **** 			return STATE_UNFINISHED;
 12972              		.loc 1 1808 12 is_stmt 0 view .LVU3968
 12973 194a 88F81F20 		strb	r2, [r8, #31]
1809:src/keys.c    **** 		}
 12974              		.loc 1 1809 4 is_stmt 1 view .LVU3969
1809:src/keys.c    **** 		}
 12975              		.loc 1 1809 11 is_stmt 0 view .LVU3970
 12976 194e FEF776BD 		b	.L1007
ARM GAS  /tmp/ccwxoOej.s 			page 359


 12977              	.LVL1117:
 12978              	.L997:
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 12979              		.loc 1 1882 3 is_stmt 1 view .LVU3971
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 12980              		.loc 1 1882 6 is_stmt 0 view .LVU3972
 12981 1952 BAF1010F 		cmp	r10, #1
 12982 1956 7EF47DAE 		bne	.L996
1883:src/keys.c    **** 		break;
 12983              		.loc 1 1883 11 view .LVU3973
 12984 195a 40F23B14 		movw	r4, #315
 12985 195e FEF77EBE 		b	.L1012
 12986              	.L999:
1868:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12987              		.loc 1 1868 3 is_stmt 1 view .LVU3974
1868:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12988              		.loc 1 1868 6 is_stmt 0 view .LVU3975
 12989 1962 BAF1010F 		cmp	r10, #1
 12990 1966 30D0     		beq	.L1405
1870:src/keys.c    **** 			return OP_NIL | OP_OFF;
 12991              		.loc 1 1870 8 is_stmt 1 view .LVU3976
1870:src/keys.c    **** 			return OP_NIL | OP_OFF;
 12992              		.loc 1 1870 11 is_stmt 0 view .LVU3977
 12993 1968 BAF1030F 		cmp	r10, #3
 12994 196c 29D0     		beq	.L1157
1872:src/keys.c    **** #ifdef DM42
 12995              		.loc 1 1872 8 is_stmt 1 view .LVU3978
1872:src/keys.c    **** #ifdef DM42
 12996              		.loc 1 1872 11 is_stmt 0 view .LVU3979
 12997 196e BAF1000F 		cmp	r10, #0
 12998 1972 7EF464AD 		bne	.L1007
1874:src/keys.c    **** 		  display_current_menu();
 12999              		.loc 1 1874 5 is_stmt 1 view .LVU3980
 13000 1976 4FF0FF30 		mov	r0, #-1
 13001              	.LVL1118:
1874:src/keys.c    **** 		  display_current_menu();
 13002              		.loc 1 1874 5 is_stmt 0 view .LVU3981
 13003 197a FFF7FEFF 		bl	set_menu
 13004              	.LVL1119:
1875:src/keys.c    **** #endif
 13005              		.loc 1 1875 5 is_stmt 1 view .LVU3982
 13006 197e FFF7FEFF 		bl	display_current_menu
 13007              	.LVL1120:
1877:src/keys.c    **** 		}
 13008              		.loc 1 1877 5 view .LVU3983
 13009 1982 FFF7FEFF 		bl	init_state
 13010              	.LVL1121:
 13011 1986 FEF75ABD 		b	.L1007
 13012              	.LVL1122:
 13013              	.L1000:
1856:src/keys.c    **** 	    if ( State2.runmode ) {
 13014              		.loc 1 1856 4 view .LVU3984
1856:src/keys.c    **** 	    if ( State2.runmode ) {
 13015              		.loc 1 1856 7 is_stmt 0 view .LVU3985
 13016 198a BAF1000F 		cmp	r10, #0
 13017 198e 7EF461AE 		bne	.L996
1857:src/keys.c    **** 	      // Alpha scroll right
ARM GAS  /tmp/ccwxoOej.s 			page 360


 13018              		.loc 1 1857 6 is_stmt 1 view .LVU3986
1857:src/keys.c    **** 	      // Alpha scroll right
 13019              		.loc 1 1857 9 is_stmt 0 view .LVU3987
 13020 1992 5106     		lsls	r1, r2, #25
 13021 1994 7EF598AD 		bpl	.L1017
1859:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13022              		.loc 1 1859 8 is_stmt 1 view .LVU3988
1859:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13023              		.loc 1 1859 11 is_stmt 0 view .LVU3989
 13024 1998 002B     		cmp	r3, #0
 13025 199a 3EF450AD 		beq	.L1007
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 13026              		.loc 1 1860 3 is_stmt 1 view .LVU3990
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 13027              		.loc 1 1860 31 is_stmt 0 view .LVU3991
 13028 199e 013B     		subs	r3, r3, #1
 13029              	.LVL1123:
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 13030              		.loc 1 1860 20 view .LVU3992
 13031 19a0 88F80D30 		strb	r3, [r8, #13]
 13032 19a4 FEF74BBD 		b	.L1007
 13033              	.LVL1124:
 13034              	.L1014:
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 13035              		.loc 1 1860 20 view .LVU3993
 13036 19a8 0193     		str	r3, [sp, #4]
1836:src/keys.c    **** 		alpha_pos += 1;
 13037              		.loc 1 1836 33 view .LVU3994
 13038 19aa FFF7FEFF 		bl	alen
 13039              	.LVL1125:
1836:src/keys.c    **** 		alpha_pos += 1;
 13040              		.loc 1 1836 41 view .LVU3995
 13041 19ae 019B     		ldr	r3, [sp, #4]
 13042 19b0 03EB4302 		add	r2, r3, r3, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 13043              		.loc 1 1836 39 view .LVU3996
 13044 19b4 A0EB4200 		sub	r0, r0, r2, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 13045              		.loc 1 1836 29 view .LVU3997
 13046 19b8 1328     		cmp	r0, #19
 13047 19ba 3EF63BAD 		bhi	.L1016
1836:src/keys.c    **** 		alpha_pos += 1;
 13048              		.loc 1 1836 29 view .LVU3998
 13049 19be FEF73BBD 		b	.L1015
 13050              	.LVL1126:
 13051              	.L1157:
1871:src/keys.c    **** 		else if (shift == SHIFT_N) {
 13052              		.loc 1 1871 11 view .LVU3999
 13053 19c2 4FF48174 		mov	r4, #258
 13054 19c6 FEF74ABE 		b	.L1012
 13055              	.L1405:
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13056              		.loc 1 1869 4 is_stmt 1 view .LVU4000
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13057              		.loc 1 1869 34 is_stmt 0 view .LVU4001
 13058 19ca 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 13059              	.LVL1127:
ARM GAS  /tmp/ccwxoOej.s 			page 361


1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13060              		.loc 1 1869 34 view .LVU4002
 13061 19ce C3F30012 		ubfx	r2, r3, #4, #1
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13062              		.loc 1 1869 26 view .LVU4003
 13063 19d2 C2F10102 		rsb	r2, r2, #1
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13064              		.loc 1 1869 22 view .LVU4004
 13065 19d6 62F30413 		bfi	r3, r2, #4, #1
 13066 19da 88F81630 		strb	r3, [r8, #22]
 13067 19de FEF72EBD 		b	.L1007
 13068              	.LVL1128:
 13069              	.L931:
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13070              		.loc 1 1869 22 view .LVU4005
 13071              	.LBE923:
 13072              	.LBE929:
 13073              	.LBE1376:
 13074              	.LBB1377:
 13075              	.LBB1014:
2840:src/keys.c    **** 			return STATE_UNFINISHED;
 13076              		.loc 1 2840 5 is_stmt 1 view .LVU4006
2840:src/keys.c    **** 			return STATE_UNFINISHED;
 13077              		.loc 1 2840 20 is_stmt 0 view .LVU4007
 13078 19e2 013A     		subs	r2, r2, #1
 13079 19e4 3368     		ldr	r3, [r6]
 13080 19e6 88F80B20 		strb	r2, [r8, #11]
2841:src/keys.c    **** 		}
 13081              		.loc 1 2841 11 view .LVU4008
 13082 19ea 3324     		movs	r4, #51
 13083              	.LVL1129:
2841:src/keys.c    **** 		}
 13084              		.loc 1 2841 11 view .LVU4009
 13085 19ec FEF762BB 		b	.L794
 13086              	.LVL1130:
 13087              	.L1034:
2841:src/keys.c    **** 		}
 13088              		.loc 1 2841 11 view .LVU4010
 13089              	.LBE1014:
 13090              	.LBE1377:
 13091              	.LBB1378:
 13092              	.LBB1320:
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13093              		.loc 1 1304 4 is_stmt 1 view .LVU4011
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13094              		.loc 1 1304 7 is_stmt 0 view .LVU4012
 13095 19f0 0F2C     		cmp	r4, #15
 13096 19f2 7FF443AE 		bne	.L1035
1305:src/keys.c    ****        reset_shift();
 13097              		.loc 1 1305 6 is_stmt 1 view .LVU4013
1305:src/keys.c    ****        reset_shift();
 13098              		.loc 1 1305 9 is_stmt 0 view .LVU4014
 13099 19f6 BAF1010F 		cmp	r10, #1
 13100 19fa 24D0     		beq	.L1406
 13101              	.LBB1235:
1321:src/keys.c    **** #endif
 13102              		.loc 1 1321 8 is_stmt 1 view .LVU4015
ARM GAS  /tmp/ccwxoOej.s 			page 362


 13103              	.LVL1131:
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 13104              		.loc 1 1323 8 view .LVU4016
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 13105              		.loc 1 1323 11 is_stmt 0 view .LVU4017
 13106 19fc BAF1030F 		cmp	r10, #3
 13107 1a00 18D0     		beq	.L1407
 13108              	.LBE1235:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 13109              		.loc 1 1330 4 is_stmt 1 view .LVU4018
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 13110              		.loc 1 1330 7 is_stmt 0 view .LVU4019
 13111 1a02 BAF1000F 		cmp	r10, #0
 13112 1a06 7FF46FAD 		bne	.L1122
 13113              	.LVL1132:
 13114              	.L1072:
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13115              		.loc 1 1424 6 is_stmt 1 view .LVU4020
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13116              		.loc 1 1424 11 is_stmt 0 view .LVU4021
 13117 1a0a DBF80020 		ldr	r2, [fp]
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13118              		.loc 1 1424 21 view .LVU4022
 13119 1a0e 92F8AC3F 		ldrb	r3, [r2, #4012]	@ zero_extendqisi2
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13120              		.loc 1 1424 9 view .LVU4023
 13121 1a12 13F0060F 		tst	r3, #6
 13122 1a16 05D0     		beq	.L1408
 13123              	.L1071:
1440:src/keys.c    ****    case (K_CMPLX):
 13124              		.loc 1 1440 6 is_stmt 1 view .LVU4024
1440:src/keys.c    ****    case (K_CMPLX):
 13125              		.loc 1 1440 13 is_stmt 0 view .LVU4025
 13126 1a18 2046     		mov	r0, r4
 13127 1a1a FFF7FEFF 		bl	process_normal
 13128              	.LVL1133:
 13129 1a1e 0446     		mov	r4, r0
 13130              	.LVL1134:
1440:src/keys.c    ****    case (K_CMPLX):
 13131              		.loc 1 1440 13 view .LVU4026
 13132 1a20 FEF7E0BC 		b	.L828
 13133              	.LVL1135:
 13134              	.L1408:
1425:src/keys.c    ****        stack_begin (1);
 13135              		.loc 1 1425 8 is_stmt 1 view .LVU4027
 13136 1a24 43F00203 		orr	r3, r3, #2
 13137 1a28 82F8AC3F 		strb	r3, [r2, #4012]
1426:src/keys.c    ****      }
 13138              		.loc 1 1426 8 view .LVU4028
 13139 1a2c 0120     		movs	r0, #1
 13140 1a2e FFF7FEFF 		bl	stack_begin
 13141              	.LVL1136:
1428:src/keys.c    ****    case (K22): // CHS
 13142              		.loc 1 1428 6 view .LVU4029
 13143 1a32 F1E7     		b	.L1071
 13144              	.LVL1137:
 13145              	.L1407:
ARM GAS  /tmp/ccwxoOej.s 			page 363


 13146              	.LBB1236:
1324:src/keys.c    **** 	 return process_cmplx(c);
 13147              		.loc 1 1324 3 view .LVU4030
 13148 1a34 0120     		movs	r0, #1
 13149 1a36 FFF7FEFF 		bl	finish_cpx_entry
 13150              	.LVL1138:
1325:src/keys.c    ****        }
 13151              		.loc 1 1325 3 view .LVU4031
1325:src/keys.c    ****        }
 13152              		.loc 1 1325 10 is_stmt 0 view .LVU4032
 13153 1a3a 2046     		mov	r0, r4
 13154 1a3c FFF7FEFF 		bl	process_cmplx
 13155              	.LVL1139:
 13156 1a40 0446     		mov	r4, r0
 13157              	.LVL1140:
1325:src/keys.c    ****        }
 13158              		.loc 1 1325 10 view .LVU4033
 13159 1a42 FEF7CFBC 		b	.L828
 13160              	.LVL1141:
 13161              	.L1406:
1325:src/keys.c    ****        }
 13162              		.loc 1 1325 10 view .LVU4034
 13163              	.LBE1236:
1306:src/keys.c    ****        if ( CmdLineLength ) {
 13164              		.loc 1 1306 8 is_stmt 1 view .LVU4035
 13165              	.LBB1237:
 13166              	.LBI1237:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13167              		.loc 1 114 13 view .LVU4036
 13168              	.LBE1237:
 13169              	.LBE1320:
 13170              	.LBE1378:
 13171              	.LBE1438:
 13172              	.LBE1511:
 115:src/keys.c    **** }
 13173              		.loc 1 115 2 view .LVU4037
 13174              	.LBB1512:
 13175              	.LBB1439:
 13176              	.LBB1379:
 13177              	.LBB1321:
 13178              	.LBB1244:
 13179              	.LBB1238:
 13180              	.LBI1238:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13181              		.loc 1 104 20 view .LVU4038
 13182              	.LBB1239:
 105:src/keys.c    **** 	State2.shifts = shift;
 13183              		.loc 1 105 2 view .LVU4039
 13184              	.LBB1240:
 13185              	.LBI1240:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13186              		.loc 1 96 13 view .LVU4040
 13187              	.LBB1241:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13188              		.loc 1 97 2 view .LVU4041
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13189              		.loc 1 97 18 is_stmt 0 view .LVU4042
ARM GAS  /tmp/ccwxoOej.s 			page 364


 13190 1a46 FFF7FEFF 		bl	shift_down
 13191              	.LVL1142:
  98:src/keys.c    **** }
 13192              		.loc 1 98 2 is_stmt 1 view .LVU4043
 13193              	.LBE1241:
 13194              	.LBE1240:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13195              		.loc 1 106 2 view .LVU4044
 13196              	.LBE1239:
 13197              	.LBE1238:
 13198              	.LBE1244:
1307:src/keys.c    **** 	 State2.state_lift = 0;
 13199              		.loc 1 1307 11 is_stmt 0 view .LVU4045
 13200 1a4a 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 13201              	.LBB1245:
 13202              	.LBB1243:
 13203              	.LBB1242:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13204              		.loc 1 106 16 view .LVU4046
 13205 1a4e 0023     		movs	r3, #0
 13206 1a50 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13207              		.loc 1 108 2 is_stmt 1 view .LVU4047
 13208              	.LVL1143:
 108:src/keys.c    **** }
 13209              		.loc 1 108 2 is_stmt 0 view .LVU4048
 13210              	.LBE1242:
 13211              	.LBE1243:
 13212              	.LBE1245:
1307:src/keys.c    **** 	 State2.state_lift = 0;
 13213              		.loc 1 1307 8 is_stmt 1 view .LVU4049
1307:src/keys.c    **** 	 State2.state_lift = 0;
 13214              		.loc 1 1307 11 is_stmt 0 view .LVU4050
 13215 1a54 002A     		cmp	r2, #0
 13216 1a56 6AD0     		beq	.L1037
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13217              		.loc 1 1308 3 is_stmt 1 view .LVU4051
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13218              		.loc 1 1308 21 is_stmt 0 view .LVU4052
 13219 1a58 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 13220              	.LBE1321:
 13221              	.LBE1379:
 13222              	.LBE1439:
 13223              	.LBE1512:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13224              		.loc 1 3650 11 view .LVU4053
 13225 1a5c 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 13226              	.LBB1513:
 13227              	.LBB1440:
 13228              	.LBB1380:
 13229              	.LBB1322:
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13230              		.loc 1 1308 21 view .LVU4054
 13231 1a60 63F38612 		bfi	r2, r3, #6, #1
 13232 1a64 88F81720 		strb	r2, [r8, #23]
1309:src/keys.c    ****        }
 13233              		.loc 1 1309 3 is_stmt 1 view .LVU4055
ARM GAS  /tmp/ccwxoOej.s 			page 365


 13234              	.LVL1144:
1309:src/keys.c    ****        }
 13235              		.loc 1 1309 3 is_stmt 0 view .LVU4056
 13236              	.LBE1322:
 13237              	.LBE1380:
 13238              	.LBE1440:
 13239              	.LBE1513:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13240              		.loc 1 3650 7 is_stmt 1 view .LVU4057
3650:src/keys.c    **** 	NonProgrammable = 0;
 13241              		.loc 1 3650 10 is_stmt 0 view .LVU4058
 13242 1a68 4A06     		lsls	r2, r1, #25
 13243 1a6a 5AD4     		bmi	.L1038
 13244              	.LBB1514:
 13245              	.LBB1441:
 13246              	.LBB1381:
 13247              	.LBB1323:
1309:src/keys.c    ****        }
 13248              		.loc 1 1309 10 view .LVU4059
 13249 1a6c 40F2D114 		movw	r4, #465
 13250              	.LVL1145:
 13251              	.L1039:
1309:src/keys.c    ****        }
 13252              		.loc 1 1309 10 view .LVU4060
 13253              	.LBE1323:
 13254              	.LBE1381:
 13255              	.LBE1441:
 13256              	.LBE1514:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13257              		.loc 1 3650 26 view .LVU4061
 13258 1a70 374B     		ldr	r3, .L1433+4
 13259 1a72 1A68     		ldr	r2, [r3]
 13260 1a74 002A     		cmp	r2, #0
 13261 1a76 51D0     		beq	.L1409
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13262              		.loc 1 3651 2 is_stmt 1 view .LVU4062
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13263              		.loc 1 3651 18 is_stmt 0 view .LVU4063
 13264 1a78 0022     		movs	r2, #0
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13265              		.loc 1 3652 32 view .LVU4064
 13266 1a7a 2546     		mov	r5, r4
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13267              		.loc 1 3651 18 view .LVU4065
 13268 1a7c 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13269              		.loc 1 3652 2 is_stmt 1 view .LVU4066
 13270 1a7e FEF769BE 		b	.L1098
 13271              	.LVL1146:
 13272              	.L1032:
 13273              	.LBB1515:
 13274              	.LBB1442:
 13275              	.LBB1382:
 13276              	.LBB1324:
1300:src/keys.c    ****      return process_fg_shifted (c);
 13277              		.loc 1 1300 4 view .LVU4067
1300:src/keys.c    ****      return process_fg_shifted (c);
ARM GAS  /tmp/ccwxoOej.s 			page 366


 13278              		.loc 1 1300 7 is_stmt 0 view .LVU4068
 13279 1a82 631F     		subs	r3, r4, #5
 13280 1a84 032B     		cmp	r3, #3
 13281 1a86 7FF6DAAD 		bls	.L1317
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13282              		.loc 1 1304 4 is_stmt 1 view .LVU4069
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13283              		.loc 1 1304 7 is_stmt 0 view .LVU4070
 13284 1a8a 0F2C     		cmp	r4, #15
 13285 1a8c 3FF42CAD 		beq	.L1122
 13286              	.L1309:
1331:src/keys.c    ****      switch (c) {
 13287              		.loc 1 1331 6 is_stmt 1 view .LVU4071
 13288 1a90 0020     		movs	r0, #0
 13289 1a92 FFF7FEFF 		bl	finish_cpx_entry
 13290              	.LVL1147:
1332:src/keys.c    ****      case (K60):
 13291              		.loc 1 1332 6 view .LVU4072
 13292 1a96 A4F10D03 		sub	r3, r4, #13
 13293 1a9a 192B     		cmp	r3, #25
 13294 1a9c 3FF627AD 		bhi	.L1315
 13295 1aa0 01A2     		adr	r2, .L1044
 13296 1aa2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13297 1aa6 00BF     		.p2align 2
 13298              	.L1044:
 13299 1aa8 E91D0000 		.word	.L1051+1
 13300 1aac 151D0000 		.word	.L1050+1
 13301 1ab0 EF140000 		.word	.L1315+1
 13302 1ab4 AF1C0000 		.word	.L1049+1
 13303 1ab8 EF140000 		.word	.L1315+1
 13304 1abc EF140000 		.word	.L1315+1
 13305 1ac0 EF140000 		.word	.L1315+1
 13306 1ac4 EF140000 		.word	.L1315+1
 13307 1ac8 EF140000 		.word	.L1315+1
 13308 1acc 9D1C0000 		.word	.L1048+1
 13309 1ad0 EF140000 		.word	.L1315+1
 13310 1ad4 C91D0000 		.word	.L1047+1
 13311 1ad8 EF140000 		.word	.L1315+1
 13312 1adc EF140000 		.word	.L1315+1
 13313 1ae0 EF140000 		.word	.L1315+1
 13314 1ae4 031D0000 		.word	.L1046+1
 13315 1ae8 EF140000 		.word	.L1315+1
 13316 1aec EF140000 		.word	.L1315+1
 13317 1af0 EF140000 		.word	.L1315+1
 13318 1af4 EF140000 		.word	.L1315+1
 13319 1af8 EF140000 		.word	.L1315+1
 13320 1afc EF140000 		.word	.L1315+1
 13321 1b00 EF140000 		.word	.L1315+1
 13322 1b04 411D0000 		.word	.L1045+1
 13323 1b08 EF140000 		.word	.L1315+1
 13324 1b0c 711C0000 		.word	.L1043+1
 13325              		.p2align 1
 13326              	.L1402:
1293:src/keys.c    ****    }
 13327              		.loc 1 1293 6 view .LVU4073
1293:src/keys.c    ****    }
 13328              		.loc 1 1293 13 is_stmt 0 view .LVU4074
ARM GAS  /tmp/ccwxoOej.s 			page 367


 13329 1b10 2046     		mov	r0, r4
 13330 1b12 FFF7FEFF 		bl	process_h_shifted
 13331              	.LVL1148:
 13332 1b16 0446     		mov	r4, r0
 13333              	.LVL1149:
1293:src/keys.c    ****    }
 13334              		.loc 1 1293 13 view .LVU4075
 13335 1b18 FEF764BC 		b	.L828
 13336              	.LVL1150:
 13337              	.L1409:
1293:src/keys.c    ****    }
 13338              		.loc 1 1293 13 view .LVU4076
 13339 1b1c 2546     		mov	r5, r4
 13340 1b1e FEF722BD 		b	.L1101
 13341              	.LVL1151:
 13342              	.L1038:
1293:src/keys.c    ****    }
 13343              		.loc 1 1293 13 view .LVU4077
 13344              	.LBE1324:
 13345              	.LBE1382:
 13346              	.LBE1442:
 13347              	.LBE1515:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13348              		.loc 1 3651 2 is_stmt 1 view .LVU4078
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13349              		.loc 1 3651 18 is_stmt 0 view .LVU4079
 13350 1b22 0B4A     		ldr	r2, .L1433+4
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13351              		.loc 1 3652 32 view .LVU4080
 13352 1b24 40F2D115 		movw	r5, #465
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13353              		.loc 1 3651 18 view .LVU4081
 13354 1b28 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13355              		.loc 1 3652 2 is_stmt 1 view .LVU4082
 13356 1b2a FEF713BE 		b	.L1098
 13357              	.LVL1152:
 13358              	.L1037:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13359              		.loc 1 3650 7 view .LVU4083
3650:src/keys.c    **** 	NonProgrammable = 0;
 13360              		.loc 1 3650 11 is_stmt 0 view .LVU4084
 13361 1b2e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 13362              		.loc 1 3650 10 view .LVU4085
 13363 1b32 5906     		lsls	r1, r3, #25
 13364 1b34 3FD5     		bpl	.L1164
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13365              		.loc 1 3651 2 is_stmt 1 view .LVU4086
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13366              		.loc 1 3651 18 is_stmt 0 view .LVU4087
 13367 1b36 064B     		ldr	r3, .L1433+4
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13368              		.loc 1 3652 32 view .LVU4088
 13369 1b38 4FF4E875 		mov	r5, #464
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13370              		.loc 1 3651 18 view .LVU4089
ARM GAS  /tmp/ccwxoOej.s 			page 368


 13371 1b3c 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13372              		.loc 1 3652 2 is_stmt 1 view .LVU4090
 13373 1b3e FEF709BE 		b	.L1098
 13374              	.LVL1153:
 13375              	.L981:
 13376              	.LBB1516:
 13377              	.LBB1443:
 13378              	.LBB1383:
 13379              	.LBB1210:
3170:src/keys.c    **** 		goto reset_window;
 13380              		.loc 1 3170 4 view .LVU4091
3170:src/keys.c    **** 		goto reset_window;
 13381              		.loc 1 3170 18 is_stmt 0 view .LVU4092
 13382 1b42 0023     		movs	r3, #0
 13383 1b44 A8F80830 		strh	r3, [r8, #8]	@ movhi
 13384 1b48 FFF764BB 		b	.L970
 13385              	.L1434:
 13386              		.align	2
 13387              	.L1433:
 13388 1b4c 00000000 		.word	.LANCHOR17
 13389 1b50 00000000 		.word	NonProgrammable
 13390 1b54 00000000 		.word	main_ram
 13391              	.LVL1154:
 13392              	.L1004:
3170:src/keys.c    **** 		goto reset_window;
 13393              		.loc 1 3170 18 view .LVU4093
 13394              	.LBE1210:
 13395              	.LBE1383:
 13396              	.LBB1384:
 13397              	.LBB930:
 13398              	.LBB924:
1793:src/keys.c    **** 			init_arg(RARG_ARCL);
 13399              		.loc 1 1793 3 is_stmt 1 view .LVU4094
1793:src/keys.c    **** 			init_arg(RARG_ARCL);
 13400              		.loc 1 1793 6 is_stmt 0 view .LVU4095
 13401 1b58 BAF1010F 		cmp	r10, #1
 13402 1b5c 1BD0     		beq	.L1410
1796:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13403              		.loc 1 1796 10 is_stmt 1 view .LVU4096
1796:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13404              		.loc 1 1796 13 is_stmt 0 view .LVU4097
 13405 1b5e BAF1030F 		cmp	r10, #3
 13406 1b62 7EF477AD 		bne	.L996
1797:src/keys.c    **** 			return STATE_UNFINISHED;
 13407              		.loc 1 1797 4 is_stmt 1 view .LVU4098
 13408              	.LVL1155:
 13409              	.LBB913:
 13410              	.LBI913:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13411              		.loc 1 552 13 view .LVU4099
 13412              	.LBB914:
 553:src/keys.c    **** 		return;
 13413              		.loc 1 553 2 view .LVU4100
 553:src/keys.c    **** 		return;
 13414              		.loc 1 553 6 is_stmt 0 view .LVU4101
 13415 1b66 FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccwxoOej.s 			page 369


 13416              	.LVL1156:
 553:src/keys.c    **** 		return;
 13417              		.loc 1 553 5 view .LVU4102
 13418 1b6a 0028     		cmp	r0, #0
 13419 1b6c 7EF467AC 		bne	.L1007
 13420 1b70 7320     		movs	r0, #115
 13421 1b72 FFF7FEFF 		bl	init_arg.part.0
 13422              	.LVL1157:
 13423 1b76 FEF762BC 		b	.L1007
 13424              	.LVL1158:
 13425              	.L1005:
 553:src/keys.c    **** 		return;
 13426              		.loc 1 553 5 view .LVU4103
 13427              	.LBE914:
 13428              	.LBE913:
1786:src/keys.c    **** 			init_arg(RARG_ASTO);
 13429              		.loc 1 1786 3 is_stmt 1 view .LVU4104
1786:src/keys.c    **** 			init_arg(RARG_ASTO);
 13430              		.loc 1 1786 6 is_stmt 0 view .LVU4105
 13431 1b7a BAF1010F 		cmp	r10, #1
 13432 1b7e 7EF469AD 		bne	.L996
1787:src/keys.c    **** 			return STATE_UNFINISHED;
 13433              		.loc 1 1787 4 is_stmt 1 view .LVU4106
 13434              	.LVL1159:
 13435              	.LBB915:
 13436              	.LBI915:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13437              		.loc 1 552 13 view .LVU4107
 13438              	.LBB916:
 553:src/keys.c    **** 		return;
 13439              		.loc 1 553 2 view .LVU4108
 553:src/keys.c    **** 		return;
 13440              		.loc 1 553 6 is_stmt 0 view .LVU4109
 13441 1b82 FFF7FEFF 		bl	is_bad_cmdline
 13442              	.LVL1160:
 553:src/keys.c    **** 		return;
 13443              		.loc 1 553 5 view .LVU4110
 13444 1b86 0028     		cmp	r0, #0
 13445 1b88 7EF459AC 		bne	.L1007
 13446 1b8c 2620     		movs	r0, #38
 13447 1b8e FFF7FEFF 		bl	init_arg.part.0
 13448              	.LVL1161:
 13449 1b92 FEF754BC 		b	.L1007
 13450              	.LVL1162:
 13451              	.L1410:
 553:src/keys.c    **** 		return;
 13452              		.loc 1 553 5 view .LVU4111
 13453              	.LBE916:
 13454              	.LBE915:
1794:src/keys.c    **** 			return STATE_UNFINISHED;
 13455              		.loc 1 1794 4 is_stmt 1 view .LVU4112
 13456              	.LBB917:
 13457              	.LBI917:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13458              		.loc 1 552 13 view .LVU4113
 13459              	.LBB918:
 553:src/keys.c    **** 		return;
ARM GAS  /tmp/ccwxoOej.s 			page 370


 13460              		.loc 1 553 2 view .LVU4114
 553:src/keys.c    **** 		return;
 13461              		.loc 1 553 6 is_stmt 0 view .LVU4115
 13462 1b96 FFF7FEFF 		bl	is_bad_cmdline
 13463              	.LVL1163:
 553:src/keys.c    **** 		return;
 13464              		.loc 1 553 5 view .LVU4116
 13465 1b9a 0028     		cmp	r0, #0
 13466 1b9c 7EF44FAC 		bne	.L1007
 13467 1ba0 2720     		movs	r0, #39
 13468 1ba2 FFF7FEFF 		bl	init_arg.part.0
 13469              	.LVL1164:
 13470 1ba6 FEF74ABC 		b	.L1007
 13471              	.LVL1165:
 13472              	.L1403:
 553:src/keys.c    **** 		return;
 13473              		.loc 1 553 5 view .LVU4117
 13474              	.LBE918:
 13475              	.LBE917:
 13476              	.LBE924:
 13477              	.LBE930:
 13478              	.LBE1384:
 13479              	.LBB1385:
 13480              	.LBB971:
3007:src/keys.c    **** 		State2.digval = pc;
 13481              		.loc 1 3007 4 is_stmt 1 view .LVU4118
3007:src/keys.c    **** 		State2.digval = pc;
 13482              		.loc 1 3007 9 is_stmt 0 view .LVU4119
 13483 1baa 2046     		mov	r0, r4
 13484 1bac 0121     		movs	r1, #1
 13485 1bae FFF7FEFF 		bl	advance_to_next_label
 13486              	.LVL1166:
 13487 1bb2 0446     		mov	r4, r0
 13488              	.LVL1167:
3007:src/keys.c    **** 		State2.digval = pc;
 13489              		.loc 1 3007 9 view .LVU4120
 13490 1bb4 EFE5     		b	.L942
 13491              	.LVL1168:
 13492              	.L1164:
3007:src/keys.c    **** 		State2.digval = pc;
 13493              		.loc 1 3007 9 view .LVU4121
 13494              	.LBE971:
 13495              	.LBE1385:
 13496              	.LBB1386:
 13497              	.LBB1325:
1312:src/keys.c    ****        }
 13498              		.loc 1 1312 10 view .LVU4122
 13499 1bb6 4FF4E874 		mov	r4, #464
 13500 1bba 59E7     		b	.L1039
 13501              	.LVL1169:
 13502              	.L978:
1312:src/keys.c    ****        }
 13503              		.loc 1 1312 10 view .LVU4123
 13504              	.LBE1325:
 13505              	.LBE1386:
 13506              	.LBB1387:
 13507              	.LBB1211:
ARM GAS  /tmp/ccwxoOej.s 			page 371


3160:src/keys.c    **** 		goto reset_window;
 13508              		.loc 1 3160 4 is_stmt 1 view .LVU4124
3160:src/keys.c    **** 		goto reset_window;
 13509              		.loc 1 3160 24 is_stmt 0 view .LVU4125
 13510 1bbc 0AF1FF3A 		add	r10, r10, #-1
 13511              	.LVL1170:
3160:src/keys.c    **** 		goto reset_window;
 13512              		.loc 1 3160 18 view .LVU4126
 13513 1bc0 A8F808A0 		strh	r10, [r8, #8]	@ movhi
 13514 1bc4 FFF726BB 		b	.L970
 13515              	.LVL1171:
 13516              	.L1073:
3160:src/keys.c    **** 		goto reset_window;
 13517              		.loc 1 3160 18 view .LVU4127
 13518              	.LBE1211:
 13519              	.LBE1387:
 13520              	.LBB1388:
 13521              	.LBB1326:
1431:src/keys.c    ****        return process_cmplx(c);
 13522              		.loc 1 1431 6 is_stmt 1 view .LVU4128
1431:src/keys.c    ****        return process_cmplx(c);
 13523              		.loc 1 1431 21 is_stmt 0 view .LVU4129
 13524 1bc8 DBF80030 		ldr	r3, [fp]
 13525 1bcc 93F8AC3F 		ldrb	r3, [r3, #4012]	@ zero_extendqisi2
1431:src/keys.c    ****        return process_cmplx(c);
 13526              		.loc 1 1431 9 view .LVU4130
 13527 1bd0 13F0060F 		tst	r3, #6
1432:src/keys.c    ****      }
 13528              		.loc 1 1432 15 view .LVU4131
 13529 1bd4 4FF00E00 		mov	r0, #14
1431:src/keys.c    ****        return process_cmplx(c);
 13530              		.loc 1 1431 9 view .LVU4132
 13531 1bd8 7EF47BAB 		bne	.L1081
 13532 1bdc 88E4     		b	.L1314
 13533              	.L1068:
1457:src/keys.c    ****    }
 13534              		.loc 1 1457 12 is_stmt 1 view .LVU4133
1459:src/keys.c    ****    return process_cmplx(c);
 13535              		.loc 1 1459 4 view .LVU4134
 13536 1bde 0020     		movs	r0, #0
 13537 1be0 FFF7FEFF 		bl	finish_cpx_entry
 13538              	.LVL1172:
1460:src/keys.c    **** 
 13539              		.loc 1 1460 4 view .LVU4135
1460:src/keys.c    **** 
 13540              		.loc 1 1460 11 is_stmt 0 view .LVU4136
 13541 1be4 2046     		mov	r0, r4
 13542 1be6 FFF7FEFF 		bl	process_cmplx
 13543              	.LVL1173:
 13544 1bea 0446     		mov	r4, r0
 13545              	.LVL1174:
1460:src/keys.c    **** 
 13546              		.loc 1 1460 11 view .LVU4137
 13547 1bec FEF7FABB 		b	.L828
 13548              	.LVL1175:
 13549              	.L1069:
1442:src/keys.c    ****        CLEAR_REAL;
ARM GAS  /tmp/ccwxoOej.s 			page 372


 13550              		.loc 1 1442 6 is_stmt 1 view .LVU4138
1442:src/keys.c    ****        CLEAR_REAL;
 13551              		.loc 1 1442 10 is_stmt 0 view .LVU4139
 13552 1bf0 DBF80020 		ldr	r2, [fp]
 13553 1bf4 92F8AC3F 		ldrb	r3, [r2, #4012]	@ zero_extendqisi2
1442:src/keys.c    ****        CLEAR_REAL;
 13554              		.loc 1 1442 9 view .LVU4140
 13555 1bf8 9807     		lsls	r0, r3, #30
 13556 1bfa 19D4     		bmi	.L1411
1449:src/keys.c    ****        finish_cpx_entry (1);
 13557              		.loc 1 1449 11 is_stmt 1 view .LVU4141
1449:src/keys.c    ****        finish_cpx_entry (1);
 13558              		.loc 1 1449 14 is_stmt 0 view .LVU4142
 13559 1bfc 5907     		lsls	r1, r3, #29
 13560 1bfe 0CD5     		bpl	.L1078
1450:src/keys.c    ****      }
 13561              		.loc 1 1450 8 is_stmt 1 view .LVU4143
 13562 1c00 0120     		movs	r0, #1
 13563 1c02 FFF7FEFF 		bl	finish_cpx_entry
 13564              	.LVL1176:
1456:src/keys.c    ****    default:;
 13565              		.loc 1 1456 13 is_stmt 0 view .LVU4144
 13566 1c06 3324     		movs	r4, #51
 13567              	.LVL1177:
1456:src/keys.c    ****    default:;
 13568              		.loc 1 1456 13 view .LVU4145
 13569 1c08 3368     		ldr	r3, [r6]
 13570 1c0a FEF753BA 		b	.L794
 13571              	.LVL1178:
 13572              	.L1401:
1456:src/keys.c    ****    default:;
 13573              		.loc 1 1456 13 view .LVU4146
 13574              	.LBE1326:
 13575              	.LBE1388:
 13576              	.LBB1389:
 13577              	.LBB1212:
3156:src/keys.c    **** 			--State2.digval;
 13578              		.loc 1 3156 5 is_stmt 1 view .LVU4147
3156:src/keys.c    **** 			--State2.digval;
 13579              		.loc 1 3156 21 is_stmt 0 view .LVU4148
 13580 1c0e FFF7FEFF 		bl	global_regs
 13581              	.LVL1179:
3156:src/keys.c    **** 			--State2.digval;
 13582              		.loc 1 3156 19 view .LVU4149
 13583 1c12 A8F80800 		strh	r0, [r8, #8]	@ movhi
 13584 1c16 FFF7F8BA 		b	.L979
 13585              	.LVL1180:
 13586              	.L1078:
3156:src/keys.c    **** 			--State2.digval;
 13587              		.loc 1 3156 19 view .LVU4150
 13588              	.LBE1212:
 13589              	.LBE1389:
 13590              	.LBB1390:
 13591              	.LBB1327:
1453:src/keys.c    ****        stack_begin (1);
 13592              		.loc 1 1453 8 is_stmt 1 view .LVU4151
 13593 1c1a 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/ccwxoOej.s 			page 373


 13594 1c1e 82F8AC3F 		strb	r3, [r2, #4012]
1454:src/keys.c    ****      }
 13595              		.loc 1 1454 8 view .LVU4152
 13596 1c22 0120     		movs	r0, #1
 13597 1c24 FFF7FEFF 		bl	stack_begin
 13598              	.LVL1181:
1456:src/keys.c    ****    default:;
 13599              		.loc 1 1456 13 is_stmt 0 view .LVU4153
 13600 1c28 3324     		movs	r4, #51
 13601              	.LVL1182:
1456:src/keys.c    ****    default:;
 13602              		.loc 1 1456 13 view .LVU4154
 13603 1c2a 3368     		ldr	r3, [r6]
 13604 1c2c FEF742BA 		b	.L794
 13605              	.LVL1183:
 13606              	.L1411:
1443:src/keys.c    ****        SET_IMAG;
 13607              		.loc 1 1443 8 is_stmt 1 view .LVU4155
1444:src/keys.c    ****        do_command_line();
 13608              		.loc 1 1444 8 view .LVU4156
1443:src/keys.c    ****        SET_IMAG;
 13609              		.loc 1 1443 8 is_stmt 0 view .LVU4157
 13610 1c30 23F00603 		bic	r3, r3, #6
 13611              	.LBB1246:
 13612              	.LBB1247:
1201:src/keys.c    **** 		State2.state_lift = 0;
 13613              		.loc 1 1201 5 view .LVU4158
 13614 1c34 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 13615              	.LBE1247:
 13616              	.LBE1246:
1443:src/keys.c    ****        SET_IMAG;
 13617              		.loc 1 1443 8 view .LVU4159
 13618 1c38 43F00403 		orr	r3, r3, #4
 13619 1c3c 82F8AC3F 		strb	r3, [r2, #4012]
1445:src/keys.c    ****        State2.state_lift = 0;
 13620              		.loc 1 1445 8 is_stmt 1 view .LVU4160
 13621              	.LBB1250:
 13622              	.LBI1246:
1200:src/keys.c    **** 	if (CmdLineLength) {
 13623              		.loc 1 1200 13 view .LVU4161
 13624              	.LBB1248:
1201:src/keys.c    **** 		State2.state_lift = 0;
 13625              		.loc 1 1201 2 view .LVU4162
1201:src/keys.c    **** 		State2.state_lift = 0;
 13626              		.loc 1 1201 5 is_stmt 0 view .LVU4163
 13627 1c40 0029     		cmp	r1, #0
 13628 1c42 40F09E80 		bne	.L1412
 13629              	.L1077:
 13630              	.LBE1248:
 13631              	.LBE1250:
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13632              		.loc 1 1446 8 is_stmt 1 view .LVU4164
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13633              		.loc 1 1446 26 is_stmt 0 view .LVU4165
 13634 1c46 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1447:src/keys.c    ****      }
 13635              		.loc 1 1447 8 view .LVU4166
ARM GAS  /tmp/ccwxoOej.s 			page 374


 13636 1c4a 6420     		movs	r0, #100
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13637              		.loc 1 1446 26 view .LVU4167
 13638 1c4c 6FF38613 		bfc	r3, #6, #1
 13639 1c50 88F81730 		strb	r3, [r8, #23]
1447:src/keys.c    ****      }
 13640              		.loc 1 1447 8 is_stmt 1 view .LVU4168
 13641 1c54 FFF7FEFF 		bl	get_reg_n
 13642              	.LVL1184:
 13643 1c58 0446     		mov	r4, r0
 13644              	.LVL1185:
1447:src/keys.c    ****      }
 13645              		.loc 1 1447 8 is_stmt 0 view .LVU4169
 13646 1c5a 6520     		movs	r0, #101
 13647 1c5c FFF7FEFF 		bl	get_reg_n
 13648              	.LVL1186:
 13649 1c60 0146     		mov	r1, r0
 13650 1c62 2046     		mov	r0, r4
 13651 1c64 FFF7FEFF 		bl	swap_reg
 13652              	.LVL1187:
1456:src/keys.c    ****    default:;
 13653              		.loc 1 1456 13 view .LVU4170
 13654 1c68 3324     		movs	r4, #51
 13655 1c6a 3368     		ldr	r3, [r6]
 13656 1c6c FEF722BA 		b	.L794
 13657              	.LVL1188:
 13658              	.L1043:
1369:src/keys.c    ****        if (shift == SHIFT_F) {
 13659              		.loc 1 1369 8 is_stmt 1 view .LVU4171
 13660              	.LBB1251:
 13661              	.LBI1251:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13662              		.loc 1 114 13 view .LVU4172
 13663              	.LBE1251:
 13664              	.LBE1327:
 13665              	.LBE1390:
 13666              	.LBE1443:
 13667              	.LBE1516:
 115:src/keys.c    **** }
 13668              		.loc 1 115 2 view .LVU4173
 13669              	.LBB1517:
 13670              	.LBB1444:
 13671              	.LBB1391:
 13672              	.LBB1328:
 13673              	.LBB1258:
 13674              	.LBB1252:
 13675              	.LBI1252:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13676              		.loc 1 104 20 view .LVU4174
 13677              	.LBB1253:
 105:src/keys.c    **** 	State2.shifts = shift;
 13678              		.loc 1 105 2 view .LVU4175
 13679              	.LBB1254:
 13680              	.LBI1254:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13681              		.loc 1 96 13 view .LVU4176
 13682              	.LBB1255:
ARM GAS  /tmp/ccwxoOej.s 			page 375


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13683              		.loc 1 97 2 view .LVU4177
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13684              		.loc 1 97 18 is_stmt 0 view .LVU4178
 13685 1c70 FFF7FEFF 		bl	shift_down
 13686              	.LVL1189:
  98:src/keys.c    **** }
 13687              		.loc 1 98 2 is_stmt 1 view .LVU4179
 13688              	.LBE1255:
 13689              	.LBE1254:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13690              		.loc 1 106 2 view .LVU4180
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13691              		.loc 1 106 16 is_stmt 0 view .LVU4181
 13692 1c74 0023     		movs	r3, #0
 13693              	.LBE1253:
 13694              	.LBE1252:
 13695              	.LBE1258:
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13696              		.loc 1 1370 11 view .LVU4182
 13697 1c76 BAF1010F 		cmp	r10, #1
 13698              	.LBB1259:
 13699              	.LBB1257:
 13700              	.LBB1256:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13701              		.loc 1 106 16 view .LVU4183
 13702 1c7a 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13703              		.loc 1 108 2 is_stmt 1 view .LVU4184
 13704              	.LVL1190:
 108:src/keys.c    **** }
 13705              		.loc 1 108 2 is_stmt 0 view .LVU4185
 13706              	.LBE1256:
 13707              	.LBE1257:
 13708              	.LBE1259:
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13709              		.loc 1 1370 8 is_stmt 1 view .LVU4186
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13710              		.loc 1 1370 11 is_stmt 0 view .LVU4187
 13711 1c7e 00F0D180 		beq	.L1062
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13712              		.loc 1 1373 13 is_stmt 1 view .LVU4188
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13713              		.loc 1 1373 16 is_stmt 0 view .LVU4189
 13714 1c82 BAF1020F 		cmp	r10, #2
 13715 1c86 00F09580 		beq	.L1413
 13716              	.L1058:
1407:src/keys.c    ****      return STATE_UNFINISHED;
 13717              		.loc 1 1407 6 is_stmt 1 view .LVU4190
 13718              	.LBB1260:
 13719              	.LBI1260:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13720              		.loc 1 114 13 view .LVU4191
 13721              	.LBE1260:
 13722              	.LBE1328:
 13723              	.LBE1391:
 13724              	.LBE1444:
ARM GAS  /tmp/ccwxoOej.s 			page 376


 13725              	.LBE1517:
 115:src/keys.c    **** }
 13726              		.loc 1 115 2 view .LVU4192
 13727              	.LVL1191:
 13728              	.LBB1518:
 13729              	.LBB1445:
 13730              	.LBB1392:
 13731              	.LBB1329:
 13732              	.LBB1265:
 13733              	.LBB1261:
 13734              	.LBI1261:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13735              		.loc 1 104 20 view .LVU4193
 13736              	.LBB1262:
 105:src/keys.c    **** 	State2.shifts = shift;
 13737              		.loc 1 105 2 view .LVU4194
 13738              	.LBB1263:
 13739              	.LBI1263:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13740              		.loc 1 96 13 view .LVU4195
 13741              	.LBB1264:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13742              		.loc 1 97 2 view .LVU4196
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13743              		.loc 1 97 18 is_stmt 0 view .LVU4197
 13744 1c8a FFF7FEFF 		bl	shift_down
 13745              	.LVL1192:
  98:src/keys.c    **** }
 13746              		.loc 1 98 2 is_stmt 1 view .LVU4198
 13747              	.LBE1264:
 13748              	.LBE1263:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13749              		.loc 1 106 2 view .LVU4199
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13750              		.loc 1 106 16 is_stmt 0 view .LVU4200
 13751 1c8e 0022     		movs	r2, #0
 13752 1c90 3368     		ldr	r3, [r6]
 13753 1c92 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13754              		.loc 1 108 2 is_stmt 1 view .LVU4201
 13755              	.LVL1193:
 108:src/keys.c    **** }
 13756              		.loc 1 108 2 is_stmt 0 view .LVU4202
 13757              	.LBE1262:
 13758              	.LBE1261:
 13759              	.LBE1265:
1408:src/keys.c    ****    }
 13760              		.loc 1 1408 6 is_stmt 1 view .LVU4203
1408:src/keys.c    ****    }
 13761              		.loc 1 1408 13 is_stmt 0 view .LVU4204
 13762 1c96 3324     		movs	r4, #51
 13763              	.LVL1194:
1408:src/keys.c    ****    }
 13764              		.loc 1 1408 13 view .LVU4205
 13765 1c98 FEF70CBA 		b	.L794
 13766              	.LVL1195:
 13767              	.L1048:
ARM GAS  /tmp/ccwxoOej.s 			page 377


1385:src/keys.c    ****      case (K34): // divide key
 13768              		.loc 1 1385 8 is_stmt 1 view .LVU4206
1387:src/keys.c    **** 	 reset_shift();
 13769              		.loc 1 1387 8 view .LVU4207
1387:src/keys.c    **** 	 reset_shift();
 13770              		.loc 1 1387 11 is_stmt 0 view .LVU4208
 13771 1c9c BAF1030F 		cmp	r10, #3
 13772 1ca0 22D0     		beq	.L1414
1392:src/keys.c    ****        }
 13773              		.loc 1 1392 3 is_stmt 1 view .LVU4209
1392:src/keys.c    ****        }
 13774              		.loc 1 1392 10 is_stmt 0 view .LVU4210
 13775 1ca2 1620     		movs	r0, #22
 13776 1ca4 FFF7FEFF 		bl	process_cmplx
 13777              	.LVL1196:
 13778 1ca8 0446     		mov	r4, r0
 13779              	.LVL1197:
1392:src/keys.c    ****        }
 13780              		.loc 1 1392 10 view .LVU4211
 13781 1caa FEF79BBB 		b	.L828
 13782              	.LVL1198:
 13783              	.L1049:
1394:src/keys.c    ****      case (K24): // <- key
 13784              		.loc 1 1394 8 is_stmt 1 view .LVU4212
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13785              		.loc 1 1396 8 view .LVU4213
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13786              		.loc 1 1396 12 is_stmt 0 view .LVU4214
 13787 1cae DBF80030 		ldr	r3, [fp]
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13788              		.loc 1 1396 11 view .LVU4215
 13789 1cb2 93F9AC3F 		ldrsb	r3, [r3, #4012]
 13790 1cb6 002B     		cmp	r3, #0
 13791 1cb8 E7DB     		blt	.L1058
1397:src/keys.c    **** 	 zero_X ();
 13792              		.loc 1 1397 8 is_stmt 1 view .LVU4216
1397:src/keys.c    **** 	 zero_X ();
 13793              		.loc 1 1397 11 is_stmt 0 view .LVU4217
 13794 1cba BAF1030F 		cmp	r10, #3
 13795 1cbe E4D1     		bne	.L1058
1398:src/keys.c    **** 	 State2.state_lift = 0;
 13796              		.loc 1 1398 3 is_stmt 1 view .LVU4218
 13797 1cc0 FFF7FEFF 		bl	zero_X
 13798              	.LVL1199:
1399:src/keys.c    **** 	 SET_REAL;
 13799              		.loc 1 1399 3 view .LVU4219
1399:src/keys.c    **** 	 SET_REAL;
 13800              		.loc 1 1399 21 is_stmt 0 view .LVU4220
 13801 1cc4 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1400:src/keys.c    **** 	 stack_begin (0);
 13802              		.loc 1 1400 3 view .LVU4221
 13803 1cc8 DBF80020 		ldr	r2, [fp]
1399:src/keys.c    **** 	 SET_REAL;
 13804              		.loc 1 1399 21 view .LVU4222
 13805 1ccc 6FF38613 		bfc	r3, #6, #1
 13806 1cd0 88F81730 		strb	r3, [r8, #23]
1400:src/keys.c    **** 	 stack_begin (0);
ARM GAS  /tmp/ccwxoOej.s 			page 378


 13807              		.loc 1 1400 3 is_stmt 1 view .LVU4223
 13808 1cd4 92F8AC3F 		ldrb	r3, [r2, #4012]	@ zero_extendqisi2
 13809 1cd8 43F00203 		orr	r3, r3, #2
 13810 1cdc 82F8AC3F 		strb	r3, [r2, #4012]
1401:src/keys.c    ****        }
 13811              		.loc 1 1401 3 view .LVU4224
 13812 1ce0 0020     		movs	r0, #0
 13813 1ce2 FFF7FEFF 		bl	stack_begin
 13814              	.LVL1200:
 13815 1ce6 D0E7     		b	.L1058
 13816              	.L1414:
1388:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
 13817              		.loc 1 1388 3 view .LVU4225
 13818              	.LBB1266:
 13819              	.LBI1266:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13820              		.loc 1 114 13 view .LVU4226
 13821              	.LBE1266:
 13822              	.LBE1329:
 13823              	.LBE1392:
 13824              	.LBE1445:
 13825              	.LBE1518:
 115:src/keys.c    **** }
 13826              		.loc 1 115 2 view .LVU4227
 13827              	.LVL1201:
 13828              	.LBB1519:
 13829              	.LBB1446:
 13830              	.LBB1393:
 13831              	.LBB1330:
 13832              	.LBB1275:
 13833              	.LBB1267:
 13834              	.LBI1267:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13835              		.loc 1 104 20 view .LVU4228
 13836              	.LBB1268:
 105:src/keys.c    **** 	State2.shifts = shift;
 13837              		.loc 1 105 2 view .LVU4229
 13838              	.LBB1269:
 13839              	.LBI1269:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13840              		.loc 1 96 13 view .LVU4230
 13841              	.LBB1270:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13842              		.loc 1 97 2 view .LVU4231
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13843              		.loc 1 97 18 is_stmt 0 view .LVU4232
 13844 1ce8 FFF7FEFF 		bl	shift_down
 13845              	.LVL1202:
  98:src/keys.c    **** }
 13846              		.loc 1 98 2 is_stmt 1 view .LVU4233
 13847              	.LBE1270:
 13848              	.LBE1269:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13849              		.loc 1 106 2 view .LVU4234
 13850              	.LBE1268:
 13851              	.LBE1267:
 13852              	.LBE1275:
ARM GAS  /tmp/ccwxoOej.s 			page 379


 13853              	.LBE1330:
 13854              	.LBE1393:
 13855              	.LBE1446:
 13856              	.LBE1519:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13857              		.loc 1 3650 11 is_stmt 0 view .LVU4235
 13858 1cec 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13859              	.LBB1520:
 13860              	.LBB1447:
 13861              	.LBB1394:
 13862              	.LBB1331:
 13863              	.LBB1276:
 13864              	.LBB1273:
 13865              	.LBB1271:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13866              		.loc 1 106 16 view .LVU4236
 13867 1cf0 0023     		movs	r3, #0
 13868              	.LBE1271:
 13869              	.LBE1273:
 13870              	.LBE1276:
 13871              	.LBE1331:
 13872              	.LBE1394:
 13873              	.LBE1447:
 13874              	.LBE1520:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13875              		.loc 1 3650 10 view .LVU4237
 13876 1cf2 5406     		lsls	r4, r2, #25
 13877              	.LVL1203:
 13878              	.LBB1521:
 13879              	.LBB1448:
 13880              	.LBB1395:
 13881              	.LBB1332:
 13882              	.LBB1277:
 13883              	.LBB1274:
 13884              	.LBB1272:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13885              		.loc 1 106 16 view .LVU4238
 13886 1cf4 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13887              		.loc 1 108 2 is_stmt 1 view .LVU4239
 13888              	.LVL1204:
 108:src/keys.c    **** }
 13889              		.loc 1 108 2 is_stmt 0 view .LVU4240
 13890              	.LBE1272:
 13891              	.LBE1274:
 13892              	.LBE1277:
1389:src/keys.c    ****        }
 13893              		.loc 1 1389 3 is_stmt 1 view .LVU4241
1389:src/keys.c    ****        }
 13894              		.loc 1 1389 3 is_stmt 0 view .LVU4242
 13895              	.LBE1332:
 13896              	.LBE1395:
 13897              	.LBE1448:
 13898              	.LBE1521:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13899              		.loc 1 3650 7 is_stmt 1 view .LVU4243
3650:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccwxoOej.s 			page 380


 13900              		.loc 1 3650 10 is_stmt 0 view .LVU4244
 13901 1cf8 00F1B680 		bmi	.L1067
 13902              	.LBB1522:
 13903              	.LBB1449:
 13904              	.LBB1396:
 13905              	.LBB1333:
1389:src/keys.c    ****        }
 13906              		.loc 1 1389 10 view .LVU4245
 13907 1cfc 40F23464 		movw	r4, #1588
 13908 1d00 B6E6     		b	.L1039
 13909              	.LVL1205:
 13910              	.L1046:
1378:src/keys.c    **** 	 reset_shift();
 13911              		.loc 1 1378 8 is_stmt 1 view .LVU4246
1378:src/keys.c    **** 	 reset_shift();
 13912              		.loc 1 1378 11 is_stmt 0 view .LVU4247
 13913 1d02 BAF1030F 		cmp	r10, #3
 13914 1d06 7ED0     		beq	.L1415
1383:src/keys.c    ****        }
 13915              		.loc 1 1383 3 is_stmt 1 view .LVU4248
1383:src/keys.c    ****        }
 13916              		.loc 1 1383 10 is_stmt 0 view .LVU4249
 13917 1d08 1C20     		movs	r0, #28
 13918 1d0a FFF7FEFF 		bl	process_cmplx
 13919              	.LVL1206:
 13920 1d0e 0446     		mov	r4, r0
 13921              	.LVL1207:
1383:src/keys.c    ****        }
 13922              		.loc 1 1383 10 view .LVU4250
 13923 1d10 FEF768BB 		b	.L828
 13924              	.LVL1208:
 13925              	.L1050:
1360:src/keys.c    ****        if (shift == SHIFT_F ) {
 13926              		.loc 1 1360 8 is_stmt 1 view .LVU4251
 13927              	.LBB1278:
 13928              	.LBI1278:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13929              		.loc 1 114 13 view .LVU4252
 13930              	.LBE1278:
 13931              	.LBE1333:
 13932              	.LBE1396:
 13933              	.LBE1449:
 13934              	.LBE1522:
 115:src/keys.c    **** }
 13935              		.loc 1 115 2 view .LVU4253
 13936              	.LBB1523:
 13937              	.LBB1450:
 13938              	.LBB1397:
 13939              	.LBB1334:
 13940              	.LBB1285:
 13941              	.LBB1279:
 13942              	.LBI1279:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13943              		.loc 1 104 20 view .LVU4254
 13944              	.LBB1280:
 105:src/keys.c    **** 	State2.shifts = shift;
 13945              		.loc 1 105 2 view .LVU4255
ARM GAS  /tmp/ccwxoOej.s 			page 381


 13946              	.LBB1281:
 13947              	.LBI1281:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13948              		.loc 1 96 13 view .LVU4256
 13949              	.LBB1282:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13950              		.loc 1 97 2 view .LVU4257
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13951              		.loc 1 97 18 is_stmt 0 view .LVU4258
 13952 1d14 FFF7FEFF 		bl	shift_down
 13953              	.LVL1209:
  98:src/keys.c    **** }
 13954              		.loc 1 98 2 is_stmt 1 view .LVU4259
 13955              	.LBE1282:
 13956              	.LBE1281:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13957              		.loc 1 106 2 view .LVU4260
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13958              		.loc 1 106 16 is_stmt 0 view .LVU4261
 13959 1d18 0023     		movs	r3, #0
 13960              	.LBE1280:
 13961              	.LBE1279:
 13962              	.LBE1285:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13963              		.loc 1 1361 11 view .LVU4262
 13964 1d1a BAF1010F 		cmp	r10, #1
 13965              	.LBB1286:
 13966              	.LBB1284:
 13967              	.LBB1283:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13968              		.loc 1 106 16 view .LVU4263
 13969 1d1e 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13970              		.loc 1 108 2 is_stmt 1 view .LVU4264
 13971              	.LVL1210:
 108:src/keys.c    **** }
 13972              		.loc 1 108 2 is_stmt 0 view .LVU4265
 13973              	.LBE1283:
 13974              	.LBE1284:
 13975              	.LBE1286:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13976              		.loc 1 1361 8 is_stmt 1 view .LVU4266
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13977              		.loc 1 1361 11 is_stmt 0 view .LVU4267
 13978 1d22 00F0AA80 		beq	.L1060
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13979              		.loc 1 1364 13 is_stmt 1 view .LVU4268
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13980              		.loc 1 1364 16 is_stmt 0 view .LVU4269
 13981 1d26 BAF1030F 		cmp	r10, #3
 13982 1d2a AED1     		bne	.L1058
 13983              	.LVL1211:
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13984              		.loc 1 1364 16 view .LVU4270
 13985              	.LBE1334:
 13986              	.LBE1397:
 13987              	.LBE1450:
ARM GAS  /tmp/ccwxoOej.s 			page 382


 13988              	.LBE1523:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13989              		.loc 1 3650 7 is_stmt 1 view .LVU4271
3650:src/keys.c    **** 	NonProgrammable = 0;
 13990              		.loc 1 3650 11 is_stmt 0 view .LVU4272
 13991 1d2c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 13992              		.loc 1 3650 10 view .LVU4273
 13993 1d30 5506     		lsls	r5, r2, #25
 13994 1d32 74D5     		bpl	.L1161
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13995              		.loc 1 3651 2 is_stmt 1 view .LVU4274
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13996              		.loc 1 3651 18 is_stmt 0 view .LVU4275
 13997 1d34 5A4A     		ldr	r2, .L1435
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13998              		.loc 1 3652 32 view .LVU4276
 13999 1d36 40F2CD15 		movw	r5, #461
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14000              		.loc 1 3651 18 view .LVU4277
 14001 1d3a 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14002              		.loc 1 3652 2 is_stmt 1 view .LVU4278
 14003 1d3c FEF70ABD 		b	.L1098
 14004              	.LVL1212:
 14005              	.L1045:
 14006              	.LBB1524:
 14007              	.LBB1451:
 14008              	.LBB1398:
 14009              	.LBB1335:
1334:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
 14010              		.loc 1 1334 8 view .LVU4279
 14011              	.LBB1287:
 14012              	.LBI1287:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14013              		.loc 1 114 13 view .LVU4280
 14014              	.LBE1287:
 14015              	.LBE1335:
 14016              	.LBE1398:
 14017              	.LBE1451:
 14018              	.LBE1524:
 115:src/keys.c    **** }
 14019              		.loc 1 115 2 view .LVU4281
 14020              	.LBB1525:
 14021              	.LBB1452:
 14022              	.LBB1399:
 14023              	.LBB1336:
 14024              	.LBB1294:
 14025              	.LBB1288:
 14026              	.LBI1288:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14027              		.loc 1 104 20 view .LVU4282
 14028              	.LBB1289:
 105:src/keys.c    **** 	State2.shifts = shift;
 14029              		.loc 1 105 2 view .LVU4283
 14030              	.LBB1290:
 14031              	.LBI1290:
ARM GAS  /tmp/ccwxoOej.s 			page 383


  96:src/keys.c    **** 	enum shifts s = shift_down();
 14032              		.loc 1 96 13 view .LVU4284
 14033              	.LBB1291:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14034              		.loc 1 97 2 view .LVU4285
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14035              		.loc 1 97 18 is_stmt 0 view .LVU4286
 14036 1d40 FFF7FEFF 		bl	shift_down
 14037              	.LVL1213:
  98:src/keys.c    **** }
 14038              		.loc 1 98 2 is_stmt 1 view .LVU4287
 14039              	.LBE1291:
 14040              	.LBE1290:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14041              		.loc 1 106 2 view .LVU4288
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14042              		.loc 1 106 16 is_stmt 0 view .LVU4289
 14043 1d44 0023     		movs	r3, #0
 14044              	.LBE1289:
 14045              	.LBE1288:
 14046              	.LBE1294:
1335:src/keys.c    ****      case (K21): // x<->y key
 14047              		.loc 1 1335 11 view .LVU4290
 14048 1d46 BAF1030F 		cmp	r10, #3
 14049              	.LBB1295:
 14050              	.LBB1293:
 14051              	.LBB1292:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14052              		.loc 1 106 16 view .LVU4291
 14053 1d4a 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14054              		.loc 1 108 2 is_stmt 1 view .LVU4292
 14055              	.LVL1214:
 108:src/keys.c    **** }
 14056              		.loc 1 108 2 is_stmt 0 view .LVU4293
 14057              	.LBE1292:
 14058              	.LBE1293:
 14059              	.LBE1295:
1335:src/keys.c    ****      case (K21): // x<->y key
 14060              		.loc 1 1335 8 is_stmt 1 view .LVU4294
1335:src/keys.c    ****      case (K21): // x<->y key
 14061              		.loc 1 1335 11 is_stmt 0 view .LVU4295
 14062 1d4e 27D0     		beq	.L1416
1337:src/keys.c    **** 	 reset_shift();
 14063              		.loc 1 1337 8 is_stmt 1 view .LVU4296
1337:src/keys.c    **** 	 reset_shift();
 14064              		.loc 1 1337 29 is_stmt 0 view .LVU4297
 14065 1d50 0AF1FF33 		add	r3, r10, #-1
1337:src/keys.c    **** 	 reset_shift();
 14066              		.loc 1 1337 11 view .LVU4298
 14067 1d54 DBB2     		uxtb	r3, r3
 14068 1d56 012B     		cmp	r3, #1
 14069 1d58 97D8     		bhi	.L1058
 14070              	.L1121:
1338:src/keys.c    **** 	 CLEAR_POLAR_READY;
 14071              		.loc 1 1338 3 is_stmt 1 view .LVU4299
 14072              	.LBB1296:
ARM GAS  /tmp/ccwxoOej.s 			page 384


 14073              	.LBI1296:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14074              		.loc 1 114 13 view .LVU4300
 14075              	.LBE1296:
 14076              	.LBE1336:
 14077              	.LBE1399:
 14078              	.LBE1452:
 14079              	.LBE1525:
 115:src/keys.c    **** }
 14080              		.loc 1 115 2 view .LVU4301
 14081              	.LVL1215:
 14082              	.LBB1526:
 14083              	.LBB1453:
 14084              	.LBB1400:
 14085              	.LBB1337:
 14086              	.LBB1303:
 14087              	.LBB1297:
 14088              	.LBI1297:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14089              		.loc 1 104 20 view .LVU4302
 14090              	.LBB1298:
 105:src/keys.c    **** 	State2.shifts = shift;
 14091              		.loc 1 105 2 view .LVU4303
 14092              	.LBB1299:
 14093              	.LBI1299:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14094              		.loc 1 96 13 view .LVU4304
 14095              	.LBB1300:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14096              		.loc 1 97 2 view .LVU4305
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14097              		.loc 1 97 18 is_stmt 0 view .LVU4306
 14098 1d5a FFF7FEFF 		bl	shift_down
 14099              	.LVL1216:
  98:src/keys.c    **** }
 14100              		.loc 1 98 2 is_stmt 1 view .LVU4307
 14101              	.LBE1300:
 14102              	.LBE1299:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14103              		.loc 1 106 2 view .LVU4308
 14104              	.LBE1298:
 14105              	.LBE1297:
 14106              	.LBE1303:
1339:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 14107              		.loc 1 1339 3 is_stmt 0 view .LVU4309
 14108 1d5e DBF80010 		ldr	r1, [fp]
 14109              	.LBB1304:
 14110              	.LBB1302:
 14111              	.LBB1301:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14112              		.loc 1 106 16 view .LVU4310
 14113 1d62 0022     		movs	r2, #0
 14114 1d64 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 14115              		.loc 1 108 2 is_stmt 1 view .LVU4311
 14116              	.LVL1217:
 108:src/keys.c    **** }
ARM GAS  /tmp/ccwxoOej.s 			page 385


 14117              		.loc 1 108 2 is_stmt 0 view .LVU4312
 14118              	.LBE1301:
 14119              	.LBE1302:
 14120              	.LBE1304:
1339:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 14121              		.loc 1 1339 3 is_stmt 1 view .LVU4313
 14122 1d68 91F8AD3F 		ldrb	r3, [r1, #4013]	@ zero_extendqisi2
 14123 1d6c 43F00103 		orr	r3, r3, #1
 14124 1d70 81F8AD3F 		strb	r3, [r1, #4013]
1340:src/keys.c    ****        }
 14125              		.loc 1 1340 3 view .LVU4314
 14126              	.LVL1218:
1340:src/keys.c    ****        }
 14127              		.loc 1 1340 3 is_stmt 0 view .LVU4315
 14128              	.LBE1337:
 14129              	.LBE1400:
 14130              	.LBE1453:
 14131              	.LBE1526:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14132              		.loc 1 3650 7 is_stmt 1 view .LVU4316
3650:src/keys.c    **** 	NonProgrammable = 0;
 14133              		.loc 1 3650 11 is_stmt 0 view .LVU4317
 14134 1d74 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 14135              		.loc 1 3650 10 view .LVU4318
 14136 1d78 5B06     		lsls	r3, r3, #25
 14137 1d7a 0BD4     		bmi	.L1055
 14138              	.LBB1527:
 14139              	.LBB1454:
 14140              	.LBB1401:
 14141              	.LBB1338:
1340:src/keys.c    ****        }
 14142              		.loc 1 1340 10 view .LVU4319
 14143 1d7c 43F26514 		movw	r4, #12645
 14144 1d80 76E6     		b	.L1039
 14145              	.LVL1219:
 14146              	.L1412:
 14147              	.LBB1305:
 14148              	.LBB1249:
1202:src/keys.c    **** 		process_cmdline();
 14149              		.loc 1 1202 3 is_stmt 1 view .LVU4320
1202:src/keys.c    **** 		process_cmdline();
 14150              		.loc 1 1202 21 is_stmt 0 view .LVU4321
 14151 1d82 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 14152 1d86 6FF38613 		bfc	r3, #6, #1
 14153 1d8a 88F81730 		strb	r3, [r8, #23]
1203:src/keys.c    **** 	}
 14154              		.loc 1 1203 3 is_stmt 1 view .LVU4322
 14155 1d8e FFF7FEFF 		bl	process_cmdline
 14156              	.LVL1220:
 14157 1d92 58E7     		b	.L1077
 14158              	.LVL1221:
 14159              	.L1055:
1203:src/keys.c    **** 	}
 14160              		.loc 1 1203 3 is_stmt 0 view .LVU4323
 14161              	.LBE1249:
 14162              	.LBE1305:
ARM GAS  /tmp/ccwxoOej.s 			page 386


 14163              	.LBE1338:
 14164              	.LBE1401:
 14165              	.LBE1454:
 14166              	.LBE1527:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14167              		.loc 1 3651 2 is_stmt 1 view .LVU4324
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14168              		.loc 1 3651 18 is_stmt 0 view .LVU4325
 14169 1d94 424B     		ldr	r3, .L1435
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14170              		.loc 1 3652 32 view .LVU4326
 14171 1d96 43F26515 		movw	r5, #12645
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14172              		.loc 1 3651 18 view .LVU4327
 14173 1d9a 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14174              		.loc 1 3652 2 is_stmt 1 view .LVU4328
 14175 1d9c FEF7DABC 		b	.L1098
 14176              	.LVL1222:
 14177              	.L1416:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14178              		.loc 1 3650 7 view .LVU4329
3650:src/keys.c    **** 	NonProgrammable = 0;
 14179              		.loc 1 3650 11 is_stmt 0 view .LVU4330
 14180 1da0 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 14181              		.loc 1 3650 10 view .LVU4331
 14182 1da4 5106     		lsls	r1, r2, #25
 14183 1da6 47D5     		bpl	.L1159
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14184              		.loc 1 3651 2 is_stmt 1 view .LVU4332
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14185              		.loc 1 3651 18 is_stmt 0 view .LVU4333
 14186 1da8 3D4A     		ldr	r2, .L1435
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14187              		.loc 1 3652 32 view .LVU4334
 14188 1daa 4FF48175 		mov	r5, #258
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14189              		.loc 1 3651 18 view .LVU4335
 14190 1dae 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14191              		.loc 1 3652 2 is_stmt 1 view .LVU4336
 14192 1db0 FEF7D0BC 		b	.L1098
 14193              	.LVL1223:
 14194              	.L1413:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14195              		.loc 1 3650 7 view .LVU4337
3650:src/keys.c    **** 	NonProgrammable = 0;
 14196              		.loc 1 3650 11 is_stmt 0 view .LVU4338
 14197 1db4 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 14198              		.loc 1 3650 10 view .LVU4339
 14199 1db8 5006     		lsls	r0, r2, #25
 14200 1dba 5BD5     		bpl	.L1163
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14201              		.loc 1 3651 2 is_stmt 1 view .LVU4340
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccwxoOej.s 			page 387


 14202              		.loc 1 3651 18 is_stmt 0 view .LVU4341
 14203 1dbc 384A     		ldr	r2, .L1435
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14204              		.loc 1 3652 32 view .LVU4342
 14205 1dbe 4FF4E775 		mov	r5, #462
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14206              		.loc 1 3651 18 view .LVU4343
 14207 1dc2 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14208              		.loc 1 3652 2 is_stmt 1 view .LVU4344
 14209 1dc4 FEF7C6BC 		b	.L1098
 14210              	.LVL1224:
 14211              	.L1047:
 14212              	.LBB1528:
 14213              	.LBB1455:
 14214              	.LBB1402:
 14215              	.LBB1339:
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 14216              		.loc 1 1347 8 view .LVU4345
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 14217              		.loc 1 1347 11 is_stmt 0 view .LVU4346
 14218 1dc8 BAF1010F 		cmp	r10, #1
 14219 1dcc 43D0     		beq	.L1417
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 14220              		.loc 1 1350 13 is_stmt 1 view .LVU4347
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 14221              		.loc 1 1350 16 is_stmt 0 view .LVU4348
 14222 1dce BAF1020F 		cmp	r10, #2
 14223 1dd2 37D0     		beq	.L1418
1355:src/keys.c    **** 	 return process_cmplx (c);
 14224              		.loc 1 1355 13 is_stmt 1 view .LVU4349
1355:src/keys.c    **** 	 return process_cmplx (c);
 14225              		.loc 1 1355 16 is_stmt 0 view .LVU4350
 14226 1dd4 BAF1030F 		cmp	r10, #3
 14227 1dd8 7FF457AF 		bne	.L1058
1356:src/keys.c    ****        }
 14228              		.loc 1 1356 3 is_stmt 1 view .LVU4351
1356:src/keys.c    ****        }
 14229              		.loc 1 1356 10 is_stmt 0 view .LVU4352
 14230 1ddc 1820     		movs	r0, #24
 14231 1dde FFF7FEFF 		bl	process_cmplx
 14232              	.LVL1225:
 14233 1de2 0446     		mov	r4, r0
 14234              	.LVL1226:
1356:src/keys.c    ****        }
 14235              		.loc 1 1356 10 view .LVU4353
 14236 1de4 FEF7FEBA 		b	.L828
 14237              	.LVL1227:
 14238              	.L1051:
1337:src/keys.c    **** 	 reset_shift();
 14239              		.loc 1 1337 8 is_stmt 1 view .LVU4354
1337:src/keys.c    **** 	 reset_shift();
 14240              		.loc 1 1337 29 is_stmt 0 view .LVU4355
 14241 1de8 0AF1FF33 		add	r3, r10, #-1
1337:src/keys.c    **** 	 reset_shift();
 14242              		.loc 1 1337 11 view .LVU4356
 14243 1dec DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccwxoOej.s 			page 388


 14244 1dee 012B     		cmp	r3, #1
 14245 1df0 B3D9     		bls	.L1121
1342:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 14246              		.loc 1 1342 13 is_stmt 1 view .LVU4357
1342:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 14247              		.loc 1 1342 16 is_stmt 0 view .LVU4358
 14248 1df2 BAF1030F 		cmp	r10, #3
 14249 1df6 7FF448AF 		bne	.L1058
1343:src/keys.c    ****        }
 14250              		.loc 1 1343 3 is_stmt 1 view .LVU4359
1343:src/keys.c    ****        }
 14251              		.loc 1 1343 10 is_stmt 0 view .LVU4360
 14252 1dfa 0D20     		movs	r0, #13
 14253 1dfc FFF7FEFF 		bl	process_cmplx
 14254              	.LVL1228:
 14255 1e00 0446     		mov	r4, r0
 14256              	.LVL1229:
1343:src/keys.c    ****        }
 14257              		.loc 1 1343 10 view .LVU4361
 14258 1e02 FEF7EFBA 		b	.L828
 14259              	.LVL1230:
 14260              	.L1415:
1379:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
 14261              		.loc 1 1379 3 is_stmt 1 view .LVU4362
 14262              	.LBB1306:
 14263              	.LBI1306:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14264              		.loc 1 114 13 view .LVU4363
 14265              	.LBE1306:
 14266              	.LBE1339:
 14267              	.LBE1402:
 14268              	.LBE1455:
 14269              	.LBE1528:
 115:src/keys.c    **** }
 14270              		.loc 1 115 2 view .LVU4364
 14271              	.LBB1529:
 14272              	.LBB1456:
 14273              	.LBB1403:
 14274              	.LBB1340:
 14275              	.LBB1315:
 14276              	.LBB1307:
 14277              	.LBI1307:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14278              		.loc 1 104 20 view .LVU4365
 14279              	.LBB1308:
 105:src/keys.c    **** 	State2.shifts = shift;
 14280              		.loc 1 105 2 view .LVU4366
 14281              	.LBB1309:
 14282              	.LBI1309:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14283              		.loc 1 96 13 view .LVU4367
 14284              	.LBB1310:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14285              		.loc 1 97 2 view .LVU4368
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14286              		.loc 1 97 18 is_stmt 0 view .LVU4369
 14287 1e06 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccwxoOej.s 			page 389


 14288              	.LVL1231:
  98:src/keys.c    **** }
 14289              		.loc 1 98 2 is_stmt 1 view .LVU4370
 14290              	.LBE1310:
 14291              	.LBE1309:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14292              		.loc 1 106 2 view .LVU4371
 14293              	.LBE1308:
 14294              	.LBE1307:
 14295              	.LBE1315:
 14296              	.LBE1340:
 14297              	.LBE1403:
 14298              	.LBE1456:
 14299              	.LBE1529:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14300              		.loc 1 3650 11 is_stmt 0 view .LVU4372
 14301 1e0a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 14302              	.LBB1530:
 14303              	.LBB1457:
 14304              	.LBB1404:
 14305              	.LBB1341:
 14306              	.LBB1316:
 14307              	.LBB1313:
 14308              	.LBB1311:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14309              		.loc 1 106 16 view .LVU4373
 14310 1e0e 0023     		movs	r3, #0
 14311              	.LBE1311:
 14312              	.LBE1313:
 14313              	.LBE1316:
 14314              	.LBE1341:
 14315              	.LBE1404:
 14316              	.LBE1457:
 14317              	.LBE1530:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14318              		.loc 1 3650 10 view .LVU4374
 14319 1e10 5506     		lsls	r5, r2, #25
 14320              	.LBB1531:
 14321              	.LBB1458:
 14322              	.LBB1405:
 14323              	.LBB1342:
 14324              	.LBB1317:
 14325              	.LBB1314:
 14326              	.LBB1312:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14327              		.loc 1 106 16 view .LVU4375
 14328 1e12 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14329              		.loc 1 108 2 is_stmt 1 view .LVU4376
 14330              	.LVL1232:
 108:src/keys.c    **** }
 14331              		.loc 1 108 2 is_stmt 0 view .LVU4377
 14332              	.LBE1312:
 14333              	.LBE1314:
 14334              	.LBE1317:
1380:src/keys.c    ****        }
 14335              		.loc 1 1380 3 is_stmt 1 view .LVU4378
ARM GAS  /tmp/ccwxoOej.s 			page 390


1380:src/keys.c    ****        }
 14336              		.loc 1 1380 3 is_stmt 0 view .LVU4379
 14337              	.LBE1342:
 14338              	.LBE1405:
 14339              	.LBE1458:
 14340              	.LBE1531:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14341              		.loc 1 3650 7 is_stmt 1 view .LVU4380
3650:src/keys.c    **** 	NonProgrammable = 0;
 14342              		.loc 1 3650 10 is_stmt 0 view .LVU4381
 14343 1e16 3AD4     		bmi	.L1065
 14344              	.LBB1532:
 14345              	.LBB1459:
 14346              	.LBB1406:
 14347              	.LBB1343:
1380:src/keys.c    ****        }
 14348              		.loc 1 1380 10 view .LVU4382
 14349 1e18 40F23364 		movw	r4, #1587
 14350 1e1c 28E6     		b	.L1039
 14351              	.LVL1233:
 14352              	.L1161:
1365:src/keys.c    ****        }
 14353              		.loc 1 1365 10 view .LVU4383
 14354 1e1e 40F2CD14 		movw	r4, #461
 14355 1e22 25E6     		b	.L1039
 14356              	.LVL1234:
 14357              	.L1062:
1365:src/keys.c    ****        }
 14358              		.loc 1 1365 10 view .LVU4384
 14359              	.LBE1343:
 14360              	.LBE1406:
 14361              	.LBE1459:
 14362              	.LBE1532:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14363              		.loc 1 3650 7 is_stmt 1 view .LVU4385
3650:src/keys.c    **** 	NonProgrammable = 0;
 14364              		.loc 1 3650 11 is_stmt 0 view .LVU4386
 14365 1e24 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 14366              		.loc 1 3650 10 view .LVU4387
 14367 1e28 5406     		lsls	r4, r2, #25
 14368 1e2a 08D5     		bpl	.L1162
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14369              		.loc 1 3651 2 is_stmt 1 view .LVU4388
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14370              		.loc 1 3651 18 is_stmt 0 view .LVU4389
 14371 1e2c 1C4A     		ldr	r2, .L1435
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14372              		.loc 1 3652 32 view .LVU4390
 14373 1e2e 40F2CF15 		movw	r5, #463
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14374              		.loc 1 3651 18 view .LVU4391
 14375 1e32 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14376              		.loc 1 3652 2 is_stmt 1 view .LVU4392
 14377 1e34 FEF78EBC 		b	.L1098
 14378              	.LVL1235:
ARM GAS  /tmp/ccwxoOej.s 			page 391


 14379              	.L1159:
 14380              	.LBB1533:
 14381              	.LBB1460:
 14382              	.LBB1407:
 14383              	.LBB1344:
1335:src/keys.c    ****      case (K21): // x<->y key
 14384              		.loc 1 1335 37 is_stmt 0 view .LVU4393
 14385 1e38 4FF48174 		mov	r4, #258
 14386 1e3c 18E6     		b	.L1039
 14387              	.LVL1236:
 14388              	.L1162:
1371:src/keys.c    ****        }
 14389              		.loc 1 1371 10 view .LVU4394
 14390 1e3e 40F2CF14 		movw	r4, #463
 14391 1e42 15E6     		b	.L1039
 14392              	.LVL1237:
 14393              	.L1418:
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 14394              		.loc 1 1351 3 is_stmt 1 view .LVU4395
 14395 1e44 DBF80020 		ldr	r2, [fp]
1352:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
 14396              		.loc 1 1352 3 view .LVU4396
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 14397              		.loc 1 1351 3 is_stmt 0 view .LVU4397
 14398 1e48 B2F8AC3F 		ldrh	r3, [r2, #4012]
 14399 1e4c 43F4C073 		orr	r3, r3, #384
 14400 1e50 A2F8AC3F 		strh	r3, [r2, #4012]	@ movhi
1353:src/keys.c    ****        }
 14401              		.loc 1 1353 18 is_stmt 1 view .LVU4398
 14402 1e54 19E7     		b	.L1058
 14403              	.L1417:
1348:src/keys.c    ****        }
 14404              		.loc 1 1348 3 view .LVU4399
 14405 1e56 DBF80030 		ldr	r3, [fp]
 14406 1e5a 93F8AC2F 		ldrb	r2, [r3, #4012]	@ zero_extendqisi2
 14407 1e5e 6FF3C712 		bfc	r2, #7, #1
 14408 1e62 83F8AC2F 		strb	r2, [r3, #4012]
 14409 1e66 10E7     		b	.L1058
 14410              	.LVL1238:
 14411              	.L1067:
1348:src/keys.c    ****        }
 14412              		.loc 1 1348 3 is_stmt 0 view .LVU4400
 14413              	.LBE1344:
 14414              	.LBE1407:
 14415              	.LBE1460:
 14416              	.LBE1533:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14417              		.loc 1 3651 2 is_stmt 1 view .LVU4401
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14418              		.loc 1 3651 18 is_stmt 0 view .LVU4402
 14419 1e68 0D4A     		ldr	r2, .L1435
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14420              		.loc 1 3652 32 view .LVU4403
 14421 1e6a 40F23465 		movw	r5, #1588
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14422              		.loc 1 3651 18 view .LVU4404
 14423 1e6e 1360     		str	r3, [r2]
ARM GAS  /tmp/ccwxoOej.s 			page 392


3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14424              		.loc 1 3652 2 is_stmt 1 view .LVU4405
 14425 1e70 FEF770BC 		b	.L1098
 14426              	.LVL1239:
 14427              	.L1163:
 14428              	.LBB1534:
 14429              	.LBB1461:
 14430              	.LBB1408:
 14431              	.LBB1345:
1374:src/keys.c    ****        }
 14432              		.loc 1 1374 10 is_stmt 0 view .LVU4406
 14433 1e74 4FF4E774 		mov	r4, #462
 14434 1e78 FAE5     		b	.L1039
 14435              	.LVL1240:
 14436              	.L1060:
1374:src/keys.c    ****        }
 14437              		.loc 1 1374 10 view .LVU4407
 14438              	.LBE1345:
 14439              	.LBE1408:
 14440              	.LBE1461:
 14441              	.LBE1534:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14442              		.loc 1 3650 7 is_stmt 1 view .LVU4408
3650:src/keys.c    **** 	NonProgrammable = 0;
 14443              		.loc 1 3650 11 is_stmt 0 view .LVU4409
 14444 1e7a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 14445              		.loc 1 3650 10 view .LVU4410
 14446 1e7e 5206     		lsls	r2, r2, #25
 14447 1e80 0BD5     		bpl	.L1160
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14448              		.loc 1 3651 2 is_stmt 1 view .LVU4411
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14449              		.loc 1 3651 18 is_stmt 0 view .LVU4412
 14450 1e82 074A     		ldr	r2, .L1435
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14451              		.loc 1 3652 32 view .LVU4413
 14452 1e84 4FF4E675 		mov	r5, #460
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14453              		.loc 1 3651 18 view .LVU4414
 14454 1e88 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14455              		.loc 1 3652 2 is_stmt 1 view .LVU4415
 14456 1e8a FEF763BC 		b	.L1098
 14457              	.LVL1241:
 14458              	.L1065:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14459              		.loc 1 3651 2 view .LVU4416
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14460              		.loc 1 3651 18 is_stmt 0 view .LVU4417
 14461 1e8e 044A     		ldr	r2, .L1435
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14462              		.loc 1 3652 32 view .LVU4418
 14463 1e90 40F23365 		movw	r5, #1587
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14464              		.loc 1 3651 18 view .LVU4419
 14465 1e94 1360     		str	r3, [r2]
ARM GAS  /tmp/ccwxoOej.s 			page 393


3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14466              		.loc 1 3652 2 is_stmt 1 view .LVU4420
 14467 1e96 FEF75DBC 		b	.L1098
 14468              	.LVL1242:
 14469              	.L1160:
 14470              	.LBB1535:
 14471              	.LBB1462:
 14472              	.LBB1409:
 14473              	.LBB1346:
1362:src/keys.c    ****        }
 14474              		.loc 1 1362 10 is_stmt 0 view .LVU4421
 14475 1e9a 4FF4E674 		mov	r4, #460
 14476 1e9e E7E5     		b	.L1039
 14477              	.L1436:
 14478              		.align	2
 14479              	.L1435:
 14480 1ea0 00000000 		.word	NonProgrammable
 14481              	.LBE1346:
 14482              	.LBE1409:
 14483              	.LBE1462:
 14484              	.LBE1535:
 14485              		.cfi_endproc
 14486              	.LFE63:
 14488              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14489              		.align	1
 14490              		.p2align 2,,3
 14491              		.global	process_keycode_with_shift
 14492              		.syntax unified
 14493              		.thumb
 14494              		.thumb_func
 14495              		.fpu fpv4-sp-d16
 14497              	process_keycode_with_shift:
 14498              	.LFB62:
3383:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14499              		.loc 1 3383 61 is_stmt 1 view -0
 14500              		.cfi_startproc
 14501              		@ args = 0, pretend = 0, frame = 8
 14502              		@ frame_needed = 0, uses_anonymous_args = 0
 14503 0000 30B5     		push	{r4, r5, lr}
 14504              		.cfi_def_cfa_offset 12
 14505              		.cfi_offset 4, -12
 14506              		.cfi_offset 5, -8
 14507              		.cfi_offset 14, -4
 14508 0002 83B0     		sub	sp, sp, #12
 14509              		.cfi_def_cfa_offset 24
3383:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14510              		.loc 1 3383 61 is_stmt 0 view .LVU4423
 14511 0004 02AB     		add	r3, sp, #8
 14512 0006 03E90300 		stmdb	r3, {r0, r1}
 14513 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14514              	.LVL1243:
3384:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14515              		.loc 1 3384 4 is_stmt 1 view .LVU4424
3384:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14516              		.loc 1 3384 7 is_stmt 0 view .LVU4425
 14517 000e 2E2C     		cmp	r4, #46
 14518 0010 10D0     		beq	.L1437
ARM GAS  /tmp/ccwxoOej.s 			page 394


3385:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14519              		.loc 1 3385 4 is_stmt 1 view .LVU4426
3385:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14520              		.loc 1 3385 7 is_stmt 0 view .LVU4427
 14521 0012 332C     		cmp	r4, #51
 14522 0014 1DD0     		beq	.L1444
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14523              		.loc 1 3394 7 view .LVU4428
 14524 0016 342C     		cmp	r4, #52
 14525 0018 019D     		ldr	r5, [sp, #4]
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14526              		.loc 1 3394 4 is_stmt 1 view .LVU4429
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14527              		.loc 1 3394 7 is_stmt 0 view .LVU4430
 14528 001a 0DD0     		beq	.L1445
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14529              		.loc 1 3398 9 is_stmt 1 view .LVU4431
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14530              		.loc 1 3398 12 is_stmt 0 view .LVU4432
 14531 001c 002D     		cmp	r5, #0
 14532 001e 03DB     		blt	.L1442
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14533              		.loc 1 3398 34 is_stmt 1 discriminator 1 view .LVU4433
 14534              	.LVL1244:
 14535              	.LBB1536:
 14536              	.LBI1536:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14537              		.loc 1 104 20 discriminator 1 view .LVU4434
 14538              	.LBB1537:
 105:src/keys.c    **** 	State2.shifts = shift;
 14539              		.loc 1 105 2 discriminator 1 view .LVU4435
 14540              	.LBB1538:
 14541              	.LBI1538:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14542              		.loc 1 96 13 discriminator 1 view .LVU4436
 14543              	.LBB1539:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14544              		.loc 1 97 2 discriminator 1 view .LVU4437
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14545              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4438
 14546 0020 FFF7FEFF 		bl	shift_down
 14547              	.LVL1245:
  98:src/keys.c    **** }
 14548              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4439
 14549              	.LBE1539:
 14550              	.LBE1538:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14551              		.loc 1 106 2 discriminator 1 view .LVU4440
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14552              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4441
 14553 0024 194B     		ldr	r3, .L1446
 14554              	.LBE1537:
 14555              	.LBE1536:
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14556              		.loc 1 3398 34 discriminator 1 view .LVU4442
 14557 0026 1D74     		strb	r5, [r3, #16]
 14558              	.LBB1541:
ARM GAS  /tmp/ccwxoOej.s 			page 395


 14559              	.LBB1540:
 108:src/keys.c    **** }
 14560              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4443
 14561              	.LVL1246:
 14562              	.L1442:
 108:src/keys.c    **** }
 14563              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4444
 14564              	.LBE1540:
 14565              	.LBE1541:
3399:src/keys.c    ****  }
 14566              		.loc 1 3399 4 is_stmt 1 view .LVU4445
 14567 0028 2046     		mov	r0, r4
3400:src/keys.c    ****  
 14568              		.loc 1 3400 2 is_stmt 0 view .LVU4446
 14569 002a 03B0     		add	sp, sp, #12
 14570              		.cfi_remember_state
 14571              		.cfi_def_cfa_offset 12
 14572              		@ sp needed
 14573 002c BDE83040 		pop	{r4, r5, lr}
 14574              		.cfi_restore 14
 14575              		.cfi_restore 5
 14576              		.cfi_restore 4
 14577              		.cfi_def_cfa_offset 0
 14578              	.LVL1247:
3399:src/keys.c    ****  }
 14579              		.loc 1 3399 4 view .LVU4447
 14580 0030 FFF7FEBF 		b	process_keycode
 14581              	.LVL1248:
 14582              	.L1437:
 14583              		.cfi_restore_state
3400:src/keys.c    ****  
 14584              		.loc 1 3400 2 view .LVU4448
 14585 0034 03B0     		add	sp, sp, #12
 14586              		.cfi_remember_state
 14587              		.cfi_def_cfa_offset 12
 14588              		@ sp needed
 14589 0036 30BD     		pop	{r4, r5, pc}
 14590              	.LVL1249:
 14591              	.L1445:
 14592              		.cfi_restore_state
3395:src/keys.c    ****      set_shift(SHIFT_N);
 14593              		.loc 1 3395 6 is_stmt 1 view .LVU4449
3395:src/keys.c    ****      set_shift(SHIFT_N);
 14594              		.loc 1 3395 16 is_stmt 0 view .LVU4450
 14595 0038 154B     		ldr	r3, .L1446+4
 14596 003a 1D60     		str	r5, [r3]
3396:src/keys.c    ****    }
 14597              		.loc 1 3396 6 is_stmt 1 view .LVU4451
 14598              	.LVL1250:
 14599              	.LBB1542:
 14600              	.LBI1542:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14601              		.loc 1 104 20 view .LVU4452
 14602              	.LBB1543:
 105:src/keys.c    **** 	State2.shifts = shift;
 14603              		.loc 1 105 2 view .LVU4453
 14604              	.LBB1544:
ARM GAS  /tmp/ccwxoOej.s 			page 396


 14605              	.LBI1544:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14606              		.loc 1 96 13 view .LVU4454
 14607              	.LBB1545:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14608              		.loc 1 97 2 view .LVU4455
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14609              		.loc 1 97 18 is_stmt 0 view .LVU4456
 14610 003c FFF7FEFF 		bl	shift_down
 14611              	.LVL1251:
  98:src/keys.c    **** }
 14612              		.loc 1 98 2 is_stmt 1 view .LVU4457
 14613              	.LBE1545:
 14614              	.LBE1544:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14615              		.loc 1 106 2 view .LVU4458
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14616              		.loc 1 106 16 is_stmt 0 view .LVU4459
 14617 0040 124B     		ldr	r3, .L1446
 14618 0042 0022     		movs	r2, #0
 14619              	.LBE1543:
 14620              	.LBE1542:
3399:src/keys.c    ****  }
 14621              		.loc 1 3399 4 view .LVU4460
 14622 0044 2046     		mov	r0, r4
 14623              	.LBB1547:
 14624              	.LBB1546:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14625              		.loc 1 106 16 view .LVU4461
 14626 0046 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14627              		.loc 1 108 2 is_stmt 1 view .LVU4462
 14628              	.LVL1252:
 108:src/keys.c    **** }
 14629              		.loc 1 108 2 is_stmt 0 view .LVU4463
 14630              	.LBE1546:
 14631              	.LBE1547:
3399:src/keys.c    ****  }
 14632              		.loc 1 3399 4 is_stmt 1 view .LVU4464
3400:src/keys.c    ****  
 14633              		.loc 1 3400 2 is_stmt 0 view .LVU4465
 14634 0048 03B0     		add	sp, sp, #12
 14635              		.cfi_remember_state
 14636              		.cfi_def_cfa_offset 12
 14637              		@ sp needed
 14638 004a BDE83040 		pop	{r4, r5, lr}
 14639              		.cfi_restore 14
 14640              		.cfi_restore 5
 14641              		.cfi_restore 4
 14642              		.cfi_def_cfa_offset 0
 14643              	.LVL1253:
3399:src/keys.c    ****  }
 14644              		.loc 1 3399 4 view .LVU4466
 14645 004e FFF7FEBF 		b	process_keycode
 14646              	.LVL1254:
 14647              	.L1444:
 14648              		.cfi_restore_state
ARM GAS  /tmp/ccwxoOej.s 			page 397


3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14649              		.loc 1 3386 6 is_stmt 1 view .LVU4467
 14650 0052 104B     		ldr	r3, .L1446+8
 14651 0054 41F23010 		movw	r0, #4400
 14652 0058 9847     		blx	r3
 14653              	.LVL1255:
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14654              		.loc 1 3386 31 view .LVU4468
 14655 005a 0A20     		movs	r0, #10
 14656 005c 0E4B     		ldr	r3, .L1446+12
 14657 005e 9847     		blx	r3
 14658              	.LVL1256:
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14659              		.loc 1 3386 46 view .LVU4469
 14660 0060 0E4B     		ldr	r3, .L1446+16
 14661 0062 9847     		blx	r3
 14662              	.LVL1257:
3387:src/keys.c    ****        // Was error just wait for confirmation
 14663              		.loc 1 3387 6 view .LVU4470
3387:src/keys.c    ****        // Was error just wait for confirmation
 14664              		.loc 1 3387 11 is_stmt 0 view .LVU4471
 14665 0064 0E4B     		ldr	r3, .L1446+20
 14666 0066 0120     		movs	r0, #1
 14667 0068 9847     		blx	r3
 14668              	.LVL1258:
3387:src/keys.c    ****        // Was error just wait for confirmation
 14669              		.loc 1 3387 9 view .LVU4472
 14670 006a 0228     		cmp	r0, #2
 14671 006c 01D1     		bne	.L1440
3389:src/keys.c    ****      }
 14672              		.loc 1 3389 8 is_stmt 1 view .LVU4473
 14673 006e 0D4B     		ldr	r3, .L1446+24
 14674 0070 9847     		blx	r3
 14675              	.LVL1259:
 14676              	.L1440:
3391:src/keys.c    ****      return;
 14677              		.loc 1 3391 6 view .LVU4474
 14678 0072 084B     		ldr	r3, .L1446+8
 14679 0074 42F26020 		movw	r0, #8800
 14680 0078 9847     		blx	r3
 14681              	.LVL1260:
3391:src/keys.c    ****      return;
 14682              		.loc 1 3391 31 view .LVU4475
 14683 007a 074B     		ldr	r3, .L1446+12
 14684 007c 0A20     		movs	r0, #10
 14685 007e 9847     		blx	r3
 14686              	.LVL1261:
3391:src/keys.c    ****      return;
 14687              		.loc 1 3391 46 view .LVU4476
 14688 0080 064B     		ldr	r3, .L1446+16
3400:src/keys.c    ****  
 14689              		.loc 1 3400 2 is_stmt 0 view .LVU4477
 14690 0082 03B0     		add	sp, sp, #12
 14691              		.cfi_def_cfa_offset 12
 14692              		@ sp needed
 14693 0084 BDE83040 		pop	{r4, r5, lr}
 14694              		.cfi_restore 14
ARM GAS  /tmp/ccwxoOej.s 			page 398


 14695              		.cfi_restore 5
 14696              		.cfi_restore 4
 14697              		.cfi_def_cfa_offset 0
 14698              	.LVL1262:
3391:src/keys.c    ****      return;
 14699              		.loc 1 3391 46 view .LVU4478
 14700 0088 1847     		bx	r3	@ indirect register sibling call
 14701              	.LVL1263:
 14702              	.L1447:
 14703 008a 00BF     		.align	2
 14704              	.L1446:
 14705 008c 00000000 		.word	StateWhileOn
 14706 0090 00000000 		.word	nd_opcode
 14707 0094 F5020008 		.word	134218485
 14708 0098 05040008 		.word	134218757
 14709 009c F9020008 		.word	134218489
 14710 00a0 79030008 		.word	134218617
 14711 00a4 99030008 		.word	134218649
 14712              		.cfi_endproc
 14713              	.LFE62:
 14715              		.comm	nd_opcode,4,4
 14716              		.comm	NonProgrammable,4,4
 14717              		.comm	GoFast,4,4
 14718              		.comm	OpCodeDisplayPending,4,4
 14719              		.comm	OpCode,4,4
 14720              		.comm	WasDataEntry,4,4
 14721              		.section	.bss.was_paused.9952,"aw",%nobits
 14722              		.align	2
 14723              		.set	.LANCHOR18,. + 0
 14726              	was_paused.9952:
 14727 0000 00000000 		.space	4
 14728              		.section	.rodata.alpha_arrows,"a"
 14729              		.align	2
 14732              	alpha_arrows:
 14733 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14733      03049F5E 
 14733      7F
 14734              		.section	.rodata.alpha_catalogue,"a"
 14735              		.align	2
 14738              	alpha_catalogue:
 14739 0000 0D4AC280 		.ascii	"\015J\302\200\236\271J\242~\342\271\256{\242\351(J\260"
 14739      9EB94AA2 
 14739      7EE2B9AE 
 14739      7BA2E928 
 14739      4AB0
 14740              		.section	.rodata.alpha_compares,"a"
 14741              		.align	2
 14744              	alpha_compares:
 14745 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14745      0A3E5B5D 
 14745      7B7D
 14746              		.section	.rodata.alpha_letters,"a"
 14747              		.align	2
 14748              		.set	.LANCHOR9,. + 0
 14751              	alpha_letters:
 14752 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14752      88C4C5C6 
ARM GAS  /tmp/ccwxoOej.s 			page 399


 14752      C784C8C9 
 14752      CA
 14753 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14753      CECFD0D1 
 14753      D2D3D415 
 14753      D5
 14754 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14754      DADBDC01 
 14754      1902DD1A 
 14754      DE
 14755 0027 DF       		.ascii	"\337"
 14756              		.section	.rodata.alpha_letters_lower,"a"
 14757              		.align	2
 14758              		.set	.LANCHOR10,. + 0
 14761              	alpha_letters_lower:
 14762 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14762      89E4E5E6 
 14762      E785E8E9 
 14762      EA
 14763 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14763      EEEFF0F1 
 14763      F2F3F416 
 14763      F5
 14764 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14764      FAFBFC01 
 14764      1902FD1A 
 14764      FE
 14765 0027 FF       		.ascii	"\377"
 14766              		.section	.rodata.alpha_subscripts,"a"
 14767              		.align	2
 14770              	alpha_subscripts:
 14771 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14771      9A80D798 
 14771      BB1486BC 
 14771      F7
 14772 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14772      BF818B9C 
 14772      8C999D90 
 14772      9B
 14773              		.section	.rodata.alpha_symbols,"a"
 14774              		.align	2
 14777              	alpha_symbols:
 14778 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14778      222A405F 
 14778      7E25240C 
 14778      1E1F8EAE 
 14778      926023
 14779              		.section	.rodata.alphamap.9435,"a"
 14780              		.align	2
 14781              		.set	.LANCHOR15,. + 0
 14784              	alphamap.9435:
 14785 0000 41004100 		.ascii	"A\000A\000a\240"
 14785      61A0
 14786 0006 42004200 		.ascii	"B\000B\000b\241"
 14786      62A1
 14787 000c 43008200 		.ascii	"C\000\202\000c\242"
 14787      63A2
ARM GAS  /tmp/ccwxoOej.s 			page 400


 14788 0012 44008300 		.ascii	"D\000\203\000d\243"
 14788      64A3
 14789 0018 450D4500 		.ascii	"E\015E\000e\244"
 14789      65A4
 14790 001e 46009400 		.ascii	"F\000\224\000f\264"
 14790      66B4
 14791 0024 47008200 		.ascii	"G\000\202\000g\242"
 14791      67A2
 14792 002a 48005800 		.ascii	"H\000X\000h\265"
 14792      68B5
 14793 0030 49004900 		.ascii	"I\000I\000i\250"
 14793      69A8
 14794 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14794      6A00
 14795 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14795      6BA9
 14796 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14796      6CAA
 14797 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14797      00A6
 14798 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14798      6DAB
 14799 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14799      6EAC
 14800 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14800      6FB7
 14801 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14801      0000
 14802 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14802      0000
 14803 006c 50378F26 		.ascii	"P7\217&p\257"
 14803      70AF
 14804 0072 5138007C 		.ascii	"Q8\000|q\000"
 14804      7100
 14805 0078 5239520B 		.ascii	"R9R\013r\260"
 14805      72B0
 14806 007e 532F915C 		.ascii	"S/\221\\s\261"
 14806      73B1
 14807 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14807      0000
 14808 008a 54345400 		.ascii	"T4T\000t\262"
 14808      74B2
 14809 0090 55350000 		.ascii	"U5\000\000u\000"
 14809      7500
 14810 0096 56360000 		.ascii	"V6\000\000v\000"
 14810      7600
 14811 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14811      7700
 14812 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14812      0000
 14813 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14813      78AD
 14814 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14814      79B3
 14815 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14815      7AA5
 14816 00ba 2D282900 		.ascii	"-()\000\000\000"
ARM GAS  /tmp/ccwxoOej.s 			page 401


 14816      0000
 14817 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14817      0000
 14818 00c6 3A308720 		.ascii	":0\207 ;\247"
 14818      3BA7
 14819 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14819      2EB6
 14820 00d2 3F212100 		.ascii	"?!!\000?!"
 14820      3F21
 14821 00d8 202B3D06 		.ascii	" +=\006  "
 14821      2020
 14822 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14822      0000
 14823              		.section	.rodata.amap.9426,"a"
 14824              		.align	2
 14825              		.set	.LANCHOR16,. + 0
 14828              	amap.9426:
 14829 0000 04       		.byte	4
 14830 0001 000D00   		.ascii	"\000\015\000"
 14831 0004 05       		.byte	5
 14832 0005 000E09   		.ascii	"\000\016\011"
 14833 0008 2C       		.byte	44
 14834 0009 000D00   		.ascii	"\000\015\000"
 14835 000c 2D       		.byte	45
 14836 000d 000E09   		.ascii	"\000\016\011"
 14837 0010 08       		.byte	8
 14838 0011 00000F   		.ascii	"\000\000\017"
 14839 0014 1F       		.byte	31
 14840 0015 00000C   		.ascii	"\000\000\014"
 14841 0018 21       		.byte	33
 14842 0019 00000A   		.ascii	"\000\000\012"
 14843 001c 26       		.byte	38
 14844 001d 00000B   		.ascii	"\000\000\013"
 14845              		.section	.rodata.catalogue,"a"
 14846              		.align	2
 14849              	catalogue:
 14850 0000 49DC26D8 		.ascii	"I\334&\330\301f\031\224D\242;Y\3074}K3\321\011\217j"
 14850      C1661994 
 14850      44A23B59 
 14850      C7347D4B 
 14850      33D1098F 
 14851 0015 5495299E 		.ascii	"T\225)\236HZ\244\241\020qS\304\365.t\335G\015\304l\035"
 14851      485AA4A1 
 14851      107153C4 
 14851      F52E74DD 
 14851      470DC46C 
 14852 002a BCEDE076 		.ascii	"\274\355\340v\231\007u\306t\222\007\221\270P\031\326"
 14852      990775C6 
 14852      74920791 
 14852      B85019D6 
 14853 003a D5B46C99 		.ascii	"\325\264l\231\267)\3310\334\267=-\314\321,\313.\313"
 14853      B729D930 
 14853      DCB73D2D 
 14853      CCD12CCB 
 14853      2ECB
 14854 004c D164D4C2 		.ascii	"\321d\324\302\317\020\302\215\320g\335\020\325\2162"
 14854      CF10C28D 
ARM GAS  /tmp/ccwxoOej.s 			page 402


 14854      D067DD10 
 14854      D58E32
 14855 005b 92348924 		.ascii	"\2224\211$I\234\302\261\325f\235\302\200\236\271J\242"
 14855      499CC2B1 
 14855      D5669DC2 
 14855      809EB94A 
 14855      A2
 14856 006c 7EE4B8AE 		.ascii	"~\344\270\256k\236\350\272n2\204\253m\323\366\355\274"
 14856      6B9EE8BA 
 14856      6E3284AB 
 14856      6DD3F6ED 
 14856      BC
 14857 007d 6E5BA739 		.ascii	"n[\2479\227j\021\267\245\300x\330\206\025\277"
 14857      976A11B7 
 14857      A5C078D8 
 14857      8615BF
 14858              		.section	.rodata.catalogue_sizes.9749,"a"
 14859              		.align	2
 14860              		.set	.LANCHOR8,. + 0
 14863              	catalogue_sizes.9749:
 14864 0000 00701E11 		.ascii	"\000p\036\0216=Q\206%?\016\023\012\011(\032LLX\016\023"
 14864      363D5186 
 14864      253F0E13 
 14864      0A09281A 
 14864      4C4C580E 
 14865              		.section	.rodata.catalogues.9757,"a"
 14866              		.align	2
 14867              		.set	.LANCHOR12,. + 0
 14870              	catalogues.9757:
 14871 0000 00000000 		.word	0
 14872 0004 00000000 		.word	catalogue
 14873 0008 00000000 		.word	cplx_catalogue
 14874 000c 00000000 		.word	stats_catalogue
 14875 0010 00000000 		.word	prob_catalogue
 14876 0014 00000000 		.word	int_catalogue
 14877 0018 00000000 		.word	prog_catalogue
 14878 001c 00000000 		.word	program_xfcn
 14879 0020 00000000 		.word	test_catalogue
 14880 0024 00000000 		.word	mode_catalogue
 14881 0028 00000000 		.word	alpha_catalogue
 14882 002c 00000000 		.word	alpha_symbols
 14883 0030 00000000 		.word	alpha_compares
 14884 0034 00000000 		.word	alpha_arrows
 14885 0038 00000000 		.word	alpha_letters
 14886 003c 00000000 		.word	alpha_subscripts
 14887 0040 00000000 		.word	0
 14888 0044 00000000 		.word	0
 14889 0048 00000000 		.word	0
 14890 004c 00000000 		.word	sums_catalogue
 14891 0050 00000000 		.word	matrix_catalogue
 14892              		.section	.rodata.cmap.9425,"a"
 14893              		.align	2
 14894              		.set	.LANCHOR17,. + 0
 14897              	cmap.9425:
 14898 0000 04       		.byte	4
 14899 0001 120012   		.ascii	"\022\000\022"
 14900 0004 05       		.byte	5
ARM GAS  /tmp/ccwxoOej.s 			page 403


 14901 0005 090909   		.ascii	"\011\011\011"
 14902 0008 06       		.byte	6
 14903 0009 151515   		.ascii	"\025\025\025"
 14904 000c 0C       		.byte	12
 14905 000d 100011   		.ascii	"\020\000\021"
 14906 0010 19       		.byte	25
 14907 0011 040004   		.ascii	"\004\000\004"
 14908 0014 1A       		.byte	26
 14909 0015 030003   		.ascii	"\003\000\003"
 14910 0018 1B       		.byte	27
 14911 0019 130013   		.ascii	"\023\000\023"
 14912 001c 1C       		.byte	28
 14913 001d 140014   		.ascii	"\024\000\024"
 14914 0020 1E       		.byte	30
 14915 0021 171717   		.ascii	"\027\027\027"
 14916 0024 1F       		.byte	31
 14917 0025 080808   		.ascii	"\010\010\010"
 14918 0028 20       		.byte	32
 14919 0029 060606   		.ascii	"\006\006\006"
 14920 002c 21       		.byte	33
 14921 002d 010502   		.ascii	"\001\005\002"
 14922              		.section	.rodata.conv_catalogue,"a"
 14923              		.align	2
 14924              		.set	.LANCHOR11,. + 0
 14927              	conv_catalogue:
 14928 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 14928      2B2DDD37 
 14928      27393133 
 14928      111605DC 
 14928      DE19
 14929 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 14929      0D0F8D08 
 14929      8F0A2A2C 
 14929      47434517 
 14929      3F30
 14930 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 14930      02062622 
 14930      20282435 
 14930      2F012310 
 14930      0C0E2112 
 14931 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 14931      1E292E09 
 14931      36383E3A 
 14931      3C4025DF 
 14931      3D8B8E03 
 14932 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 14932      4A484642 
 14932      441F
 14933              		.section	.rodata.conv_mapping.9796,"a"
 14934              		.align	2
 14935              		.set	.LANCHOR14,. + 0
 14938              	conv_mapping.9796:
 14939 0000 8502     		.short	645
 14940 0002 8402     		.short	644
 14941 0004 8602     		.short	646
 14942 0006 8702     		.short	647
 14943 0008 8202     		.short	642
ARM GAS  /tmp/ccwxoOej.s 			page 404


 14944 000a 8302     		.short	643
 14945 000c 3202     		.short	562
 14946 000e 3302     		.short	563
 14947 0010 3402     		.short	564
 14948 0012 3502     		.short	565
 14949 0014 3602     		.short	566
 14950 0016 3702     		.short	567
 14951              		.section	.rodata.cplx_catalogue,"a"
 14952              		.align	2
 14955              	cplx_catalogue:
 14956 0000 8129FD1E 		.ascii	"\201)\375\036%;\316\341\015\376\201a\230j\215\256+z"
 14956      253BCEE1 
 14956      0DFE8161 
 14956      986A8DAE 
 14956      2B7A
 14957 0012 E9FDA561 		.ascii	"\351\375\245a\327\316\022\177\340\030\016\262\256m\332"
 14957      D7CE127F 
 14957      E0180EB2 
 14957      AE6DDA
 14958 0021 521CA15F 		.ascii	"R\034\241_\200"
 14958      80
 14959              		.section	.rodata.disp.9607,"a"
 14960              		.align	2
 14961              		.set	.LANCHOR21,. + 0
 14964              	disp.9607:
 14965 0000 03       		.byte	3
 14966 0001 02       		.byte	2
 14967 0002 05       		.byte	5
 14968 0003 04       		.byte	4
 14969              		.section	.rodata.int_catalogue,"a"
 14970              		.align	2
 14973              	int_catalogue:
 14974 0000 49F20307 		.ascii	"I\362\003\007\"D^\"Y\341\020\232\254\215(D\034V\301"
 14974      22445E22 
 14974      59E1109A 
 14974      AC8D2844 
 14974      1C56C1
 14975 0013 C625326C 		.ascii	"\306%2l\235\265m\030\326\311\312c\035\223\015\313%q"
 14975      9DB56D18 
 14975      D6C9CA63 
 14975      1D930DCB 
 14975      2571
 14976 0025 AC7112C6 		.ascii	"\254q\022\306\361\334\204hE\261\354\177<g\303S)&s\012"
 14976      F1DC8468 
 14976      45B1EC7F 
 14976      3C67C353 
 14976      2926730A 
 14977 0039 C756E52A 		.ascii	"\307V\345*\256K\212\346\271\356\213\246\343*\323\364"
 14977      AE4B8AE6 
 14977      B9EE8BA6 
 14977      E32AD3F4 
 14978 0049 6DEA7AC0 		.ascii	"m\352z\300"
 14979              		.section	.rodata.linear_key_map.9391,"a"
 14980              		.align	2
 14981              		.set	.LANCHOR6,. + 0
 14984              	linear_key_map.9391:
 14985 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
ARM GAS  /tmp/ccwxoOej.s 			page 405


 14985      04050607 
 14985      08090A0B 
 14985      0C
 14986 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 14986      00111213 
 14986      14150016 
 14986      17
 14987 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 14987      1B1C1D1E 
 14987      1F002021 
 14987      22232425 
 14987      25252525 
 14988 002e 25       		.ascii	"%"
 14989              		.section	.rodata.linear_key_map.9395,"a"
 14990              		.align	2
 14991              		.set	.LANCHOR1,. + 0
 14994              	linear_key_map.9395:
 14995 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 14995      04050607 
 14995      08222222 
 14995      090A0B
 14996 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 14996      0F101112 
 14996      00131415 
 14996      16
 14997 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 14997      1A1B1C00 
 14997      1D1E1F20 
 14997      21222222 
 14998 002c 040522   		.ascii	"\004\005\""
 14999              		.section	.rodata.map.9407,"a"
 15000              		.align	2
 15001              		.set	.LANCHOR5,. + 0
 15004              	map.9407:
 15005 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 15005      FF7F7F7F 
 15005      6D6E6F6C 
 15005      FFFFFFFF 
 15006 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 15006      097F7FE7 
 15006      05067F7F 
 15006      E4
 15007 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 15007      00F07F7F 
 15007      FFFFFFFF 
 15007      FF
 15008 002a FF       		.ascii	"\377"
 15009              		.section	.rodata.matrix_catalogue,"a"
 15010              		.align	2
 15013              	matrix_catalogue:
 15014 0000 699E8364 		.ascii	"i\236\203d\3305\336cm\240u\332\027Y\345v\032V\235\347"
 15014      D835DE63 
 15014      6DA075DA 
 15014      1759E576 
 15014      1A569DE7 
 15015 0014 691A3688 		.ascii	"i\0326\210"
 15016              		.section	.rodata.mode_catalogue,"a"
ARM GAS  /tmp/ccwxoOej.s 			page 406


 15017              		.align	2
 15020              	mode_catalogue:
 15021 0000 2948C290 		.ascii	")H\302\220\213\312\006d\031\007BP\203\250\351\037\210"
 15021      8BCA0664 
 15021      19074250 
 15021      83A8E91F 
 15021      88
 15022 0011 01FC7CC3 		.ascii	"\001\374|\303I\204-\012\030\314\362D\234&\306!\224\223"
 15022      49842D0A 
 15022      18CCF244 
 15022      9C26C621 
 15022      9493
 15023 0023 2489A193 		.ascii	"$\211\241\2235!\010<\3531\"\010s \2461\014s$\2471Lb"
 15023      3521083C 
 15023      EB312208 
 15023      7320A631 
 15023      0C7324A7 
 15024 003a 38CE0E03 		.ascii	"8\316\016\003\234\320\206!H\334d\374>\311\235OM\323"
 15024      9CD08621 
 15024      48DC64FC 
 15024      3EC99D4F 
 15024      4DD3
 15025 004c 10E434   		.ascii	"\020\3444"
 15026              		.section	.rodata.op_map.9479,"a"
 15027              		.align	2
 15028              		.set	.LANCHOR2,. + 0
 15031              	op_map.9479:
 15032 0000 1500     		.short	21
 15033 0002 0B02     		.short	523
 15034 0004 0003     		.short	768
 15035 0006 0A02     		.short	522
 15036 0008 1300     		.short	19
 15037 000a 1400     		.short	20
 15038 000c 0300     		.short	3
 15039 000e 0A00     		.short	10
 15040 0010 0701     		.short	263
 15041 0012 0000     		.short	0
 15042 0014 6531     		.short	12645
 15043 0016 0300     		.short	3
 15044 0018 0200     		.short	2
 15045 001a 0100     		.short	1
 15046 001c 4400     		.short	68
 15047 001e 0C00     		.short	12
 15048 0020 0D00     		.short	13
 15049 0022 0E00     		.short	14
 15050 0024 0403     		.short	772
 15051 0026 2F00     		.short	47
 15052 0028 0900     		.short	9
 15053 002a 0A00     		.short	10
 15054 002c 0B00     		.short	11
 15055 002e 0303     		.short	771
 15056 0030 2E00     		.short	46
 15057 0032 0600     		.short	6
 15058 0034 0700     		.short	7
 15059 0036 0800     		.short	8
 15060 0038 0203     		.short	770
 15061 003a 3300     		.short	51
ARM GAS  /tmp/ccwxoOej.s 			page 407


 15062 003c 0500     		.short	5
 15063 003e 0400     		.short	4
 15064 0040 3B01     		.short	315
 15065 0042 0103     		.short	769
 15066 0044 0001     		.short	256
 15067              		.section	.rodata.op_map.9502,"a"
 15068              		.align	2
 15069              		.set	.LANCHOR3,. + 0
 15072              	op_map.9502:
 15073 0000 0100     		.short	1
 15074 0002 0000     		.short	0
 15075 0004 20F2     		.short	-3552
 15076 0006 23F2     		.short	-3549
 15077 0008 21F2     		.short	-3551
 15078 000a 24F2     		.short	-3548
 15079 000c 22F2     		.short	-3550
 15080 000e 25F2     		.short	-3547
 15081 0010 47F1     		.short	-3769
 15082 0012 46F1     		.short	-3770
 15083 0014 4E01     		.short	334
 15084 0016 4D01     		.short	333
 15085 0018 5C01     		.short	348
 15086 001a 35F1     		.short	-3787
 15087 001c 5B01     		.short	347
 15088 001e 36F1     		.short	-3786
 15089 0020 3301     		.short	307
 15090 0022 37F1     		.short	-3785
 15091 0024 3300     		.short	51
 15092 0026 0C01     		.short	268
 15093 0028 2B00     		.short	43
 15094 002a 2C00     		.short	44
 15095 002c 028B     		.short	-29950
 15096 002e 088B     		.short	-29944
 15097 0030 0A8B     		.short	-29942
 15098 0032 108B     		.short	-29936
 15099 0034 4301     		.short	323
 15100 0036 3D01     		.short	317
 15101 0038 0902     		.short	521
 15102 003a 0802     		.short	520
 15103 003c 1002     		.short	528
 15104 003e 0D02     		.short	525
 15105 0040 0F02     		.short	527
 15106 0042 0E02     		.short	526
 15107 0044 0003     		.short	768
 15108 0046 0803     		.short	776
 15109 0048 0BF2     		.short	-3573
 15110 004a 1603     		.short	790
 15111 004c 1203     		.short	786
 15112 004e 1303     		.short	787
 15113 0050 3DF2     		.short	-3523
 15114 0052 3EF2     		.short	-3522
 15115 0054 24F1     		.short	-3804
 15116 0056 1EF1     		.short	-3810
 15117 0058 75F2     		.short	-3467
 15118 005a 27F1     		.short	-3801
 15119 005c 0A02     		.short	522
 15120 005e 1602     		.short	534
ARM GAS  /tmp/ccwxoOej.s 			page 408


 15121 0060 5100     		.short	81
 15122 0062 5200     		.short	82
 15123 0064 0000     		.short	0
 15124 0066 0100     		.short	1
 15125 0068 48F0     		.short	-4024
 15126 006a 4BF0     		.short	-4021
 15127 006c 47F0     		.short	-4025
 15128 006e 46F0     		.short	-4026
 15129 0070 77F2     		.short	-3465
 15130 0072 78F2     		.short	-3464
 15131 0074 64AB     		.short	-21660
 15132 0076 3300     		.short	51
 15133 0078 0502     		.short	517
 15134 007a 0602     		.short	518
 15135 007c 0402     		.short	516
 15136 007e 0002     		.short	512
 15137 0080 4200     		.short	66
 15138 0082 3801     		.short	312
 15139 0084 3A00     		.short	58
 15140 0086 3B00     		.short	59
 15141 0088 0001     		.short	256
 15142 008a 0001     		.short	256
 15143              		.section	.rodata.op_map.9525,"a"
 15144              		.align	2
 15145              		.set	.LANCHOR0,. + 0
 15148              	op_map.9525:
 15149 0000 4C80     		.short	-32692
 15150 0002 4D80     		.short	-32691
 15151 0004 4E80     		.short	-32690
 15152 0006 4F80     		.short	-32689
 15153 0008 3300     		.short	51
 15154 000a 3300     		.short	51
 15155 000c 3300     		.short	51
 15156 000e 2180     		.short	-32735
 15157 0010 0801     		.short	264
 15158 0012 8780     		.short	-32633
 15159 0014 1180     		.short	-32751
 15160 0016 7C02     		.short	636
 15161 0018 6660     		.short	24678
 15162 001a 3F01     		.short	319
 15163 001c 4580     		.short	-32699
 15164 001e 1C03     		.short	796
 15165 0020 1D03     		.short	797
 15166 0022 1E03     		.short	798
 15167 0024 0603     		.short	774
 15168 0026 2F02     		.short	559
 15169 0028 3300     		.short	51
 15170 002a 3300     		.short	51
 15171 002c 3300     		.short	51
 15172 002e 3300     		.short	51
 15173 0030 3300     		.short	51
 15174 0032 3300     		.short	51
 15175 0034 3300     		.short	51
 15176 0036 3300     		.short	51
 15177 0038 1640     		.short	16406
 15178 003a 0201     		.short	258
 15179 003c 6D80     		.short	-32659
ARM GAS  /tmp/ccwxoOej.s 			page 409


 15180 003e 5001     		.short	336
 15181 0040 3300     		.short	51
 15182 0042 1540     		.short	16405
 15183 0044 0001     		.short	256
 15184              		.section	.rodata.op_map.9580,"a"
 15185              		.align	2
 15186              		.set	.LANCHOR7,. + 0
 15189              	op_map.9580:
 15190 0000 0100     		.short	1
 15191 0002 0100     		.short	1
 15192 0004 0000     		.short	0
 15193 0006 0000     		.short	0
 15194 0008 0B05     		.short	1291
 15195 000a 2005     		.short	1312
 15196 000c 2305     		.short	1315
 15197 000e 3300     		.short	51
 15198 0010 0006     		.short	1536
 15199 0012 2105     		.short	1313
 15200 0014 2405     		.short	1316
 15201 0016 3300     		.short	51
 15202 0018 0A05     		.short	1290
 15203 001a 2205     		.short	1314
 15204 001c 2505     		.short	1317
 15205 001e 3300     		.short	51
 15206 0020 3300     		.short	51
 15207 0022 4701     		.short	327
 15208 0024 4601     		.short	326
 15209 0026 3300     		.short	51
 15210 0028 3300     		.short	51
 15211 002a 3300     		.short	51
 15212 002c 3300     		.short	51
 15213 002e 3300     		.short	51
 15214 0030 15FF     		.short	-235
 15215 0032 3300     		.short	51
 15216 0034 3300     		.short	51
 15217 0036 3300     		.short	51
 15218 0038 1AFF     		.short	-230
 15219 003a 3300     		.short	51
 15220 003c 3300     		.short	51
 15221 003e 93FF     		.short	-109
 15222 0040 0901     		.short	265
 15223 0042 3300     		.short	51
 15224 0044 3300     		.short	51
 15225 0046 0A01     		.short	266
 15226 0048 0B01     		.short	267
 15227 004a 3300     		.short	51
 15228 004c 0D01     		.short	269
 15229 004e 0D01     		.short	269
 15230 0050 663F     		.short	16230
 15231 0052 3300     		.short	51
 15232 0054 3300     		.short	51
 15233 0056 1FFF     		.short	-225
 15234 0058 3805     		.short	1336
 15235 005a 3300     		.short	51
 15236 005c 3300     		.short	51
 15237 005e 3905     		.short	1337
 15238 0060 6621     		.short	8550
ARM GAS  /tmp/ccwxoOej.s 			page 410


 15239 0062 3300     		.short	51
 15240 0064 3300     		.short	51
 15241 0066 6621     		.short	8550
 15242 0068 3300     		.short	51
 15243 006a 3300     		.short	51
 15244 006c 3300     		.short	51
 15245 006e 3300     		.short	51
 15246 0070 3300     		.short	51
 15247 0072 0905     		.short	1289
 15248 0074 0805     		.short	1288
 15249 0076 3300     		.short	51
 15250 0078 07A8     		.short	-22521
 15251 007a 1005     		.short	1296
 15252 007c 0D05     		.short	1293
 15253 007e 3300     		.short	51
 15254 0080 08A8     		.short	-22520
 15255 0082 0F05     		.short	1295
 15256 0084 0E05     		.short	1294
 15257 0086 3300     		.short	51
 15258 0088 09A8     		.short	-22519
 15259 008a 0006     		.short	1536
 15260 008c 0806     		.short	1544
 15261 008e 3300     		.short	51
 15262 0090 0406     		.short	1540
 15263 0092 0B05     		.short	1291
 15264 0094 1606     		.short	1558
 15265 0096 3300     		.short	51
 15266 0098 3300     		.short	51
 15267 009a 1206     		.short	1554
 15268 009c 1306     		.short	1555
 15269 009e 2F05     		.short	1327
 15270 00a0 04A8     		.short	-22524
 15271 00a2 3300     		.short	51
 15272 00a4 3300     		.short	51
 15273 00a6 3300     		.short	51
 15274 00a8 05A8     		.short	-22523
 15275 00aa 3300     		.short	51
 15276 00ac 3300     		.short	51
 15277 00ae 3300     		.short	51
 15278 00b0 06A8     		.short	-22522
 15279 00b2 3300     		.short	51
 15280 00b4 3300     		.short	51
 15281 00b6 3300     		.short	51
 15282 00b8 0306     		.short	1539
 15283 00ba 0A05     		.short	1290
 15284 00bc 1605     		.short	1302
 15285 00be 1605     		.short	1302
 15286 00c0 3300     		.short	51
 15287 00c2 3300     		.short	51
 15288 00c4 3300     		.short	51
 15289 00c6 3300     		.short	51
 15290 00c8 01A8     		.short	-22527
 15291 00ca 0000     		.short	0
 15292 00cc 0100     		.short	1
 15293 00ce 3300     		.short	51
 15294 00d0 02A8     		.short	-22526
 15295 00d2 3300     		.short	51
ARM GAS  /tmp/ccwxoOej.s 			page 411


 15296 00d4 3300     		.short	51
 15297 00d6 3300     		.short	51
 15298 00d8 03A8     		.short	-22525
 15299 00da 3300     		.short	51
 15300 00dc 3300     		.short	51
 15301 00de 3300     		.short	51
 15302 00e0 0206     		.short	1538
 15303 00e2 3300     		.short	51
 15304 00e4 3300     		.short	51
 15305 00e6 3300     		.short	51
 15306 00e8 3300     		.short	51
 15307 00ea 3300     		.short	51
 15308 00ec 3300     		.short	51
 15309 00ee 0201     		.short	258
 15310 00f0 00A8     		.short	-22528
 15311 00f2 0505     		.short	1285
 15312 00f4 0605     		.short	1286
 15313 00f6 3300     		.short	51
 15314 00f8 B801     		.short	440
 15315 00fa 0405     		.short	1284
 15316 00fc 0005     		.short	1280
 15317 00fe 3300     		.short	51
 15318 0100 D801     		.short	472
 15319 0102 3300     		.short	51
 15320 0104 3300     		.short	51
 15321 0106 3300     		.short	51
 15322 0108 0106     		.short	1537
 15323 010a 3300     		.short	51
 15324 010c 3300     		.short	51
 15325 010e 3300     		.short	51
 15326 0110 0001     		.short	256
 15327 0112 0001     		.short	256
 15328 0114 0001     		.short	256
 15329 0116 0001     		.short	256
 15330              		.section	.rodata.op_map.9592,"a"
 15331              		.align	2
 15332              		.set	.LANCHOR19,. + 0
 15335              	op_map.9592:
 15336 0000 2A27     		.ascii	"*'"
 15337 0002 2B28     		.ascii	"+("
 15338 0004 2C29     		.ascii	",)"
 15339              		.section	.rodata.op_map.9606,"a"
 15340              		.align	2
 15341              		.set	.LANCHOR20,. + 0
 15344              	op_map.9606:
 15345 0000 1A02     		.short	538
 15346 0002 7B02     		.short	635
 15347 0004 1B02     		.short	539
 15348 0006 7A02     		.short	634
 15349 0008 1C02     		.short	540
 15350 000a 3300     		.short	51
 15351              		.section	.rodata.op_map2.9503,"a"
 15352              		.align	2
 15353              		.set	.LANCHOR4,. + 0
 15356              	op_map2.9503:
 15357 0000 3300     		.short	51
 15358 0002 3300     		.short	51
ARM GAS  /tmp/ccwxoOej.s 			page 412


 15359 0004 0003     		.short	768
 15360 0006 0A02     		.short	522
 15361              		.section	.rodata.opcode_breaks,"a"
 15362              		.align	2
 15363              		.set	.LANCHOR13,. + 0
 15366              	opcode_breaks:
 15367 0000 34DB9C35 		.ascii	"4\333\2345\014\2345"
 15367      0C9C35
 15368              		.section	.rodata.prob_catalogue,"a"
 15369              		.align	2
 15372              	prob_catalogue:
 15373 0000 5795D5ED 		.ascii	"W\225\325\355_\\\327&\011tV\325\245\351\\U\027\205U"
 15373      5F5CD726 
 15373      097456D5 
 15373      A5E95C55 
 15373      178555
 15374 0013 5659D665 		.ascii	"VY\326e\371h[V\306\001n\\\026\366\005qZ\226\225\375"
 15374      F9685B56 
 15374      C6016E5C 
 15374      16F60571 
 15374      5A9695FD 
 15375 0027 6B591635 		.ascii	"kY\0265\365eXV\005\361bTWuISV\025u\345Y]T\265=PS\227"
 15375      F5655856 
 15375      05F16254 
 15375      57754953 
 15375      561575E5 
 15376 0043 60       		.ascii	"`"
 15377              		.section	.rodata.prog_catalogue,"a"
 15378              		.align	2
 15381              	prog_catalogue:
 15382 0000 BD0D1D3C 		.ascii	"\275\015\035<y\035G\201\310t*4k\364B\276o\261\272\277"
 15382      791D4781 
 15382      C8742A34 
 15382      6BF442BE 
 15382      6FB1BABF 
 15383 0014 C40E0C1B 		.ascii	"\304\016\014\033\0073/\353\352\374\315\316#\220\347"
 15383      07332FEB 
 15383      EAFCCDCE 
 15383      2390E7
 15384 0023 38CE8CE4 		.ascii	"8\316\214\344\3367s\200\320\3349G\003\2336\270\015\361"
 15384      DE377380 
 15384      D0DC3947 
 15384      039B36B8 
 15384      0DF1
 15385 0035 D8CD1B4B 		.ascii	"\330\315\033K\022\274\262,\016\033\314\322\015\355\363"
 15385      12BCB22C 
 15385      0E1BCCD2 
 15385      0DEDF3
 15386 0044 02D12A73 		.ascii	"\002\321*s\000\350\313\263\355\014\264\256+r\315\014"
 15386      00E8CBB3 
 15386      ED0CB4AE 
 15386      2B72CD0C 
 15387 0054 F7D2B4E3 		.ascii	"\367\322\264\343\303H<O-,\370=\017S\314\366\322@"
 15387      C3483C4F 
 15387      2D2CF83D 
 15387      0F53CCF6 
 15387      D240
ARM GAS  /tmp/ccwxoOej.s 			page 413


 15388              		.section	.rodata.program_xfcn,"a"
 15389              		.align	2
 15392              	program_xfcn:
 15393 0000 49DC26DB 		.ascii	"I\334&\333 0Y\206g\"DJ#\265\234s^\"Y\341\037R\314\364"
 15393      20305986 
 15393      6722444A 
 15393      23B59C73 
 15393      5E2259E1 
 15394 0018 4263DA95 		.ascii	"Bc\332\225%Jg\222\026\253#J\021\007\025<OR\347M\324"
 15394      254A6792 
 15394      16AB234A 
 15394      1107153C 
 15394      4F52E74D 
 15395 002d 70DC46C1 		.ascii	"p\334F\301\333\316\336\007i\220w\\bQ\322H\036F\341@"
 15395      DBCEDE07 
 15395      6990775C 
 15395      6251D248 
 15395      1E46E140 
 15396 0041 67726C9D 		.ascii	"grl\235\265m\030\326\311\233r\230\307d\303r\334\364"
 15396      B56D18D6 
 15396      C99B7298 
 15396      C764C372 
 15396      DCF4
 15397 0053 B7332571 		.ascii	"\2673%q\254q\022\306\361\334\313!\313\262\361\241\026"
 15397      AC7112C6 
 15397      F1DCCB21 
 15397      CBB2F1A1 
 15397      16
 15398 0064 4D71E30B 		.ascii	"Mq\343\013\037\317\020\302\215\320g\335\020\325\216"
 15398      1FCF10C2 
 15398      8DD067DD 
 15398      10D58E
 15399 0073 32923489 		.ascii	"2\2224\211$I\234\302\261\325f\235\302\200\236\271J\242"
 15399      24499CC2 
 15399      B1D5669D 
 15399      C2809EB9 
 15399      4AA2
 15400 0085 7EE4B8AE 		.ascii	"~\344\270\256k\236\350\272n2\204\253m\323\366\355\274"
 15400      6B9EE8BA 
 15400      6E3284AB 
 15400      6DD3F6ED 
 15400      BC
 15401 0096 6E5BA739 		.ascii	"n[\2479\227j\021\267\251\351p\0366!\205o\336\260"
 15401      976A11B7 
 15401      A9E9701E 
 15401      3621856F 
 15401      DEB0
 15402              		.section	.rodata.smap.9427,"a"
 15403              		.align	2
 15404              		.set	.LANCHOR22,. + 0
 15407              	smap.9427:
 15408 0000 00010002 		.ascii	"\000\001\000\002"
 15409              		.section	.rodata.stats_catalogue,"a"
 15410              		.align	2
 15413              	stats_catalogue:
 15414 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\226\014T\027\205"
 15414      5D17C971 
ARM GAS  /tmp/ccwxoOej.s 			page 414


 15414      58611685 
 15414      960C5417 
 15414      85
 15415 0011 514C5761 		.ascii	"QLWa@"
 15415      40
 15416              		.section	.rodata.sums_catalogue,"a"
 15417              		.align	2
 15420              	sums_catalogue:
 15421 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15421      4A1384C1 
 15421      20451104 
 15421      F11C4911 
 15421      8500
 15422              		.section	.rodata.test_catalogue,"a"
 15423              		.align	2
 15426              	test_catalogue:
 15427 0000 C9724D08 		.ascii	"\311rM\010\353/\313\334K\026\3061r\363\021\304\361\\"
 15427      EB2FCBDC 
 15427      4B16C631 
 15427      72F311C4 
 15427      F15C
 15428 0012 50D32EF2 		.ascii	"P\323.\362\274\000\2356\213\202\370\2725\013\223@\371"
 15428      BC009D36 
 15428      8B82F8BA 
 15428      350B9340 
 15428      F9
 15429 0023 BB6EE354 		.ascii	"\273n\343T\326\273/\013\274\267>\200"
 15429      D6BB2F0B 
 15429      BCB73E80 
 15430              		.text
 15431              	.Letext0:
 15432              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15433              		.file 3 "dmcp/dmcp.h"
 15434              		.file 4 "src/decNumber/decContext.h"
 15435              		.file 5 "src/decNumber/decNumber.h"
 15436              		.file 6 "src/decNumber/decimal64.h"
 15437              		.file 7 "src/decNumber/decimal128.h"
 15438              		.file 8 "src/xeq.h"
 15439              		.file 9 "src/data.h"
 15440              		.file 10 "src/keys.h"
 15441              		.file 11 "src/menu.h"
 15442              		.file 12 "src/display.h"
 15443              		.file 13 "src/consts.h"
 15444              		.file 14 "src/storage.h"
 15445              		.file 15 "src/stats.h"
 15446              		.file 16 "src/catalogues.h"
 15447              		.file 17 "src/printer.h"
 15448              		.file 18 "src/lcd.h"
 15449              		.file 19 "src/int.h"
 15450              		.file 20 "src/decn.h"
ARM GAS  /tmp/ccwxoOej.s 			page 415


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccwxoOej.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccwxoOej.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccwxoOej.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccwxoOej.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccwxoOej.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccwxoOej.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccwxoOej.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccwxoOej.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccwxoOej.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccwxoOej.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccwxoOej.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccwxoOej.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccwxoOej.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccwxoOej.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccwxoOej.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccwxoOej.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccwxoOej.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccwxoOej.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccwxoOej.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccwxoOej.s:865    .text.check_confirm.part.0:0000000000000030 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccwxoOej.s:872    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccwxoOej.s:879    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccwxoOej.s:921    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccwxoOej.s:926    .text.reset_arg:0000000000000000 $t
     /tmp/ccwxoOej.s:933    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccwxoOej.s:977    .text.reset_arg:0000000000000018 $d
     /tmp/ccwxoOej.s:982    .text.arg_eval:0000000000000000 $t
     /tmp/ccwxoOej.s:989    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccwxoOej.s:1134   .text.arg_eval:0000000000000090 $d
     /tmp/ccwxoOej.s:1141   .text.arg_digit:0000000000000000 $t
     /tmp/ccwxoOej.s:1148   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccwxoOej.s:1407   .text.arg_digit:00000000000000f4 $d
     /tmp/ccwxoOej.s:1415   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccwxoOej.s:1422   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccwxoOej.s:1480   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccwxoOej.s:1485   .text.process_h_shifted:0000000000000000 $t
     /tmp/ccwxoOej.s:1492   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/ccwxoOej.s:1740   .text.process_h_shifted:00000000000000c8 $d
     /tmp/ccwxoOej.s:1748   .text.intltr:0000000000000000 $t
     /tmp/ccwxoOej.s:1755   .text.intltr:0000000000000000 intltr
     /tmp/ccwxoOej.s:1818   .text.intltr:0000000000000030 $d
     /tmp/ccwxoOej.s:1824   .text.process_normal:0000000000000000 $t
     /tmp/ccwxoOej.s:1831   .text.process_normal:0000000000000000 process_normal
     /tmp/ccwxoOej.s:1892   .text.process_normal:0000000000000022 $d
     /tmp/ccwxoOej.s:1938   .text.process_normal:000000000000007e $t
     /tmp/ccwxoOej.s:1987   .text.process_normal:00000000000000ac $d
     /tmp/ccwxoOej.s:2006   .text.process_normal:00000000000000f8 $t
     /tmp/ccwxoOej.s:2017   .text.process_normal:0000000000000104 $d
     /tmp/ccwxoOej.s:2060   .text.process_normal:00000000000001b0 $t
     /tmp/ccwxoOej.s:2261   .text.process_normal:0000000000000264 $d
     /tmp/ccwxoOej.s:2270   .text.process_fg_shifted:0000000000000000 $t
     /tmp/ccwxoOej.s:2277   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/ccwxoOej.s:2405   .text.process_fg_shifted:000000000000003e $d
     /tmp/ccwxoOej.s:2604   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/ccwxoOej.s 			page 416


     /tmp/ccwxoOej.s:2645   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/ccwxoOej.s:2841   .text.process_fg_shifted:0000000000000294 $d
     /tmp/ccwxoOej.s:2850   .text.set_window:0000000000000000 $t
     /tmp/ccwxoOej.s:2857   .text.set_window:0000000000000000 set_window
     /tmp/ccwxoOej.s:3004   .text.set_window:000000000000008c $d
     /tmp/ccwxoOej.s:3011   .text.arg_storcl:0000000000000000 $t
     /tmp/ccwxoOej.s:3018   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccwxoOej.s:3134   .text.arg_storcl:0000000000000040 $d
     /tmp/ccwxoOej.s:3139   .text.process_arg:0000000000000000 $t
     /tmp/ccwxoOej.s:3146   .text.process_arg:0000000000000000 process_arg
     /tmp/ccwxoOej.s:3352   .text.process_arg:000000000000008a $d
     /tmp/ccwxoOej.s:3356   .text.process_arg:0000000000000090 $t
     /tmp/ccwxoOej.s:3445   .text.process_arg:00000000000000f0 $d
     /tmp/ccwxoOej.s:3492   .text.process_arg:00000000000001a8 $t
     /tmp/ccwxoOej.s:3895   .text.process_arg:000000000000032c $d
     /tmp/ccwxoOej.s:3904   .text.process_arg:0000000000000340 $t
     /tmp/ccwxoOej.s:4395   .text.process_arg:000000000000054c $d
     /tmp/ccwxoOej.s:4400   .text.cur_shift:0000000000000000 $t
     /tmp/ccwxoOej.s:4408   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccwxoOej.s:4436   .text.cur_shift:0000000000000010 $d
     /tmp/ccwxoOej.s:4441   .text.reset_shift:0000000000000000 $t
     /tmp/ccwxoOej.s:4449   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccwxoOej.s:4507   .text.reset_shift:0000000000000014 $d
     /tmp/ccwxoOej.s:4512   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccwxoOej.s:4520   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccwxoOej.s:4548   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccwxoOej.s:4553   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccwxoOej.s:4561   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccwxoOej.s:4619   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccwxoOej.s:4624   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccwxoOej.s:4632   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccwxoOej.s:4668   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccwxoOej.s:4674   .text.init_state:0000000000000000 $t
     /tmp/ccwxoOej.s:4682   .text.init_state:0000000000000000 init_state
     /tmp/ccwxoOej.s:4798   .text.init_state:0000000000000074 $d
     /tmp/ccwxoOej.s:4805   .text.process_cmplx:0000000000000000 $t
     /tmp/ccwxoOej.s:4812   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/ccwxoOej.s:5168   .text.process_cmplx:00000000000000c4 $d
     /tmp/ccwxoOej.s:5175   .text.soft_init_state:0000000000000000 $t
     /tmp/ccwxoOej.s:5183   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccwxoOej.s:5278   .text.soft_init_state:0000000000000048 $d
     /tmp/ccwxoOej.s:5284   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/ccwxoOej.s:5292   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/ccwxoOej.s:5458   .text.finish_cpx_entry:00000000000000bc $d
     /tmp/ccwxoOej.s:5465   .text.stack_begin:0000000000000000 $t
     /tmp/ccwxoOej.s:5473   .text.stack_begin:0000000000000000 stack_begin
     /tmp/ccwxoOej.s:5613   .text.stack_begin:00000000000000b4 $d
     /tmp/ccwxoOej.s:5619   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccwxoOej.s:5627   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccwxoOej.s:5648   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccwxoOej.s:5654   .text.current_catalogue:0000000000000000 $t
     /tmp/ccwxoOej.s:5662   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccwxoOej.s:5918   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccwxoOej.s:5928   .text.process_catalogue:0000000000000000 $t
     /tmp/ccwxoOej.s:5935   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccwxoOej.s:6264   .text.process_catalogue:00000000000000fe $d
     /tmp/ccwxoOej.s:6296   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/ccwxoOej.s 			page 417


     /tmp/ccwxoOej.s:6804   .text.process_catalogue:00000000000002dc $d
     /tmp/ccwxoOej.s:6825   .text.process_catalogue:00000000000002fc $t
     /tmp/ccwxoOej.s:6855   .text.find_pos:0000000000000000 $t
     /tmp/ccwxoOej.s:6863   .text.find_pos:0000000000000000 find_pos
     /tmp/ccwxoOej.s:7036   .text.find_pos:0000000000000080 $d
     /tmp/ccwxoOej.s:7042   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccwxoOej.s:7050   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccwxoOej.s:7082   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccwxoOej.s:7088   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccwxoOej.s:7098   .text.process_keycode:0000000000000000 $t
     /tmp/ccwxoOej.s:7106   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccwxoOej.s:7726   .text.process_keycode:00000000000002dc $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccwxoOej.s:7746   .text.process_keycode:000000000000031c $t
     /tmp/ccwxoOej.s:7948   .text.process_keycode:00000000000003f4 $d
     /tmp/ccwxoOej.s:7957   .text.process_keycode:0000000000000418 $t
     /tmp/ccwxoOej.s:8445   .text.process_keycode:000000000000061c $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccwxoOej.s:8468   .text.process_keycode:0000000000000654 $t
     /tmp/ccwxoOej.s:8773   .text.process_keycode:0000000000000772 $d
     /tmp/ccwxoOej.s:8800   .text.process_keycode:000000000000078c $t
     /tmp/ccwxoOej.s:8890   .text.process_keycode:00000000000007e8 $d
     /tmp/ccwxoOej.s:8894   .text.process_keycode:00000000000007f8 $t
     /tmp/ccwxoOej.s:9296   .text.process_keycode:000000000000097c $d
     /tmp/ccwxoOej.s:9317   .text.process_keycode:00000000000009a8 $t
     /tmp/ccwxoOej.s:9967   .text.process_keycode:0000000000000be4 $d
     /tmp/ccwxoOej.s:9997   .text.process_keycode:0000000000000c5c $t
     /tmp/ccwxoOej.s:10147  .text.process_keycode:0000000000000ce4 $d
     /tmp/ccwxoOej.s:10161  .text.process_keycode:0000000000000d04 $t
     /tmp/ccwxoOej.s:10730  .text.process_keycode:0000000000000ee0 $d
     /tmp/ccwxoOej.s:10765  .text.process_keycode:0000000000000f6c $t
     /tmp/ccwxoOej.s:10993  .text.process_keycode:0000000000001048 $d
     /tmp/ccwxoOej.s:11013  .text.process_keycode:0000000000001098 $t
     /tmp/ccwxoOej.s:11079  .text.process_keycode:00000000000010e4 $d
     /tmp/ccwxoOej.s:11093  .text.process_keycode:00000000000010f8 $t
     /tmp/ccwxoOej.s:11284  .text.process_keycode:000000000000117c $d
     /tmp/ccwxoOej.s:11302  .text.process_keycode:00000000000011c4 $t
     /tmp/ccwxoOej.s:11816  .text.process_keycode:0000000000001380 $d
     /tmp/ccwxoOej.s:11851  .text.process_keycode:0000000000001408 $t
     /tmp/ccwxoOej.s:11877  .text.process_keycode:0000000000001414 $d
     /tmp/ccwxoOej.s:11895  .text.process_keycode:0000000000001430 $t
     /tmp/ccwxoOej.s:11944  .text.process_keycode:0000000000001460 $d
     /tmp/ccwxoOej.s:11979  .text.process_keycode:00000000000014e8 $t
     /tmp/ccwxoOej.s:12343  .text.process_keycode:0000000000001690 $d
     /tmp/ccwxoOej.s:12386  .text.process_keycode:00000000000016e4 $t
     /tmp/ccwxoOej.s:12542  .text.process_keycode:0000000000001774 $d
     /tmp/ccwxoOej.s:12555  .text.process_keycode:0000000000001780 $t
     /tmp/ccwxoOej.s:13299  .text.process_keycode:0000000000001aa8 $d
     /tmp/ccwxoOej.s:13325  .text.process_keycode:0000000000001b10 $t
     /tmp/ccwxoOej.s:13388  .text.process_keycode:0000000000001b4c $d
     /tmp/ccwxoOej.s:13401  .text.process_keycode:0000000000001b58 $t
     /tmp/ccwxoOej.s:14480  .text.process_keycode:0000000000001ea0 $d
     /tmp/ccwxoOej.s:14489  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccwxoOej.s:14497  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
ARM GAS  /tmp/ccwxoOej.s 			page 418


     /tmp/ccwxoOej.s:14705  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/ccwxoOej.s:14722  .bss.was_paused.9952:0000000000000000 $d
     /tmp/ccwxoOej.s:14726  .bss.was_paused.9952:0000000000000000 was_paused.9952
     /tmp/ccwxoOej.s:14729  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccwxoOej.s:14732  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccwxoOej.s:14735  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:14738  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccwxoOej.s:14741  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccwxoOej.s:14744  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccwxoOej.s:14747  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccwxoOej.s:14751  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccwxoOej.s:14757  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccwxoOej.s:14761  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccwxoOej.s:14767  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccwxoOej.s:14770  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccwxoOej.s:14774  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccwxoOej.s:14777  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccwxoOej.s:14780  .rodata.alphamap.9435:0000000000000000 $d
     /tmp/ccwxoOej.s:14784  .rodata.alphamap.9435:0000000000000000 alphamap.9435
     /tmp/ccwxoOej.s:14824  .rodata.amap.9426:0000000000000000 $d
     /tmp/ccwxoOej.s:14828  .rodata.amap.9426:0000000000000000 amap.9426
     /tmp/ccwxoOej.s:14846  .rodata.catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:14849  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccwxoOej.s:14859  .rodata.catalogue_sizes.9749:0000000000000000 $d
     /tmp/ccwxoOej.s:14863  .rodata.catalogue_sizes.9749:0000000000000000 catalogue_sizes.9749
     /tmp/ccwxoOej.s:14866  .rodata.catalogues.9757:0000000000000000 $d
     /tmp/ccwxoOej.s:14870  .rodata.catalogues.9757:0000000000000000 catalogues.9757
     /tmp/ccwxoOej.s:14955  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccwxoOej.s:15413  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccwxoOej.s:15372  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccwxoOej.s:14973  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccwxoOej.s:15381  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccwxoOej.s:15392  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccwxoOej.s:15426  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccwxoOej.s:15020  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccwxoOej.s:15420  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccwxoOej.s:15013  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccwxoOej.s:14893  .rodata.cmap.9425:0000000000000000 $d
     /tmp/ccwxoOej.s:14897  .rodata.cmap.9425:0000000000000000 cmap.9425
     /tmp/ccwxoOej.s:14923  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:14927  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccwxoOej.s:14934  .rodata.conv_mapping.9796:0000000000000000 $d
     /tmp/ccwxoOej.s:14938  .rodata.conv_mapping.9796:0000000000000000 conv_mapping.9796
     /tmp/ccwxoOej.s:14952  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:14960  .rodata.disp.9607:0000000000000000 $d
     /tmp/ccwxoOej.s:14964  .rodata.disp.9607:0000000000000000 disp.9607
     /tmp/ccwxoOej.s:14970  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:14980  .rodata.linear_key_map.9391:0000000000000000 $d
     /tmp/ccwxoOej.s:14984  .rodata.linear_key_map.9391:0000000000000000 linear_key_map.9391
     /tmp/ccwxoOej.s:14990  .rodata.linear_key_map.9395:0000000000000000 $d
     /tmp/ccwxoOej.s:14994  .rodata.linear_key_map.9395:0000000000000000 linear_key_map.9395
     /tmp/ccwxoOej.s:15000  .rodata.map.9407:0000000000000000 $d
     /tmp/ccwxoOej.s:15004  .rodata.map.9407:0000000000000000 map.9407
     /tmp/ccwxoOej.s:15010  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:15017  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:15027  .rodata.op_map.9479:0000000000000000 $d
     /tmp/ccwxoOej.s:15031  .rodata.op_map.9479:0000000000000000 op_map.9479
ARM GAS  /tmp/ccwxoOej.s 			page 419


     /tmp/ccwxoOej.s:15068  .rodata.op_map.9502:0000000000000000 $d
     /tmp/ccwxoOej.s:15072  .rodata.op_map.9502:0000000000000000 op_map.9502
     /tmp/ccwxoOej.s:15144  .rodata.op_map.9525:0000000000000000 $d
     /tmp/ccwxoOej.s:15148  .rodata.op_map.9525:0000000000000000 op_map.9525
     /tmp/ccwxoOej.s:15185  .rodata.op_map.9580:0000000000000000 $d
     /tmp/ccwxoOej.s:15189  .rodata.op_map.9580:0000000000000000 op_map.9580
     /tmp/ccwxoOej.s:15331  .rodata.op_map.9592:0000000000000000 $d
     /tmp/ccwxoOej.s:15335  .rodata.op_map.9592:0000000000000000 op_map.9592
     /tmp/ccwxoOej.s:15340  .rodata.op_map.9606:0000000000000000 $d
     /tmp/ccwxoOej.s:15344  .rodata.op_map.9606:0000000000000000 op_map.9606
     /tmp/ccwxoOej.s:15352  .rodata.op_map2.9503:0000000000000000 $d
     /tmp/ccwxoOej.s:15356  .rodata.op_map2.9503:0000000000000000 op_map2.9503
     /tmp/ccwxoOej.s:15362  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccwxoOej.s:15366  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccwxoOej.s:15369  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:15378  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:15389  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccwxoOej.s:15403  .rodata.smap.9427:0000000000000000 $d
     /tmp/ccwxoOej.s:15407  .rodata.smap.9427:0000000000000000 smap.9427
     /tmp/ccwxoOej.s:15410  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:15417  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:15423  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccwxoOej.s:2446   .text.process_fg_shifted:0000000000000067 $d
     /tmp/ccwxoOej.s:2446   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
get_reg_n
swap_reg
ARM GAS  /tmp/ccwxoOej.s 			page 420


copyreg
op_p2r
RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
get_user_flag
print_tab
print_alpha
is_key_pressed
set_running_off
xeq_sst_bst
stoprog
clr_dot
finish_RPN
message
find_char
delprog
prt
scopy_char
clpall
clrprog
reset
clrall
TraceBuffer
set_last_menu
find_user_pc
cmdgtocommon
global_regs
drop
convert_regK
local_regs
alen

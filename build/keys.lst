ARM GAS  /tmp/ccGwaFaD.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccGwaFaD.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** unsigned int nd_opcode;
  82:src/keys.c    **** 
  83:src/keys.c    **** /*
  84:src/keys.c    ****  *  Return the shift state
  85:src/keys.c    ****  */
  86:src/keys.c    **** enum shifts cur_shift(void) {
ARM GAS  /tmp/ccGwaFaD.s 			page 3


  87:src/keys.c    **** 	enum shifts s = shift_down();
  88:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  89:src/keys.c    **** }
  90:src/keys.c    **** 
  91:src/keys.c    **** /*
  92:src/keys.c    ****  *  Set new shift state, return previous state
  93:src/keys.c    ****  */
  94:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  95:src/keys.c    **** 	enum shifts r = cur_shift();
  96:src/keys.c    **** 	State2.shifts = shift;
  97:src/keys.c    **** 	//	State2.alpha_pos = 0;
  98:src/keys.c    **** 	return r;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Clear shift state and return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** enum shifts reset_shift(void) {
 105:src/keys.c    **** 	return set_shift(SHIFT_N);
 106:src/keys.c    **** }
 107:src/keys.c    **** 
 108:src/keys.c    **** /*
 109:src/keys.c    ****  *  Toggle shift state
 110:src/keys.c    ****  */
 111:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 112:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 113:src/keys.c    **** }
 114:src/keys.c    **** 
 115:src/keys.c    **** 
 116:src/keys.c    **** /*
 117:src/keys.c    ****  * Mapping from the key code to a linear index
 118:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 119:src/keys.c    ****  */
 120:src/keys.c    **** #ifdef DM42
 121:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 122:src/keys.c    **** {
 123:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 124:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 125:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 126:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 127:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 128:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 129:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 130:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 131:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 132:src/keys.c    **** 	};
 133:src/keys.c    **** 	return linear_key_map[c];
 134:src/keys.c    **** }
 135:src/keys.c    **** 
 136:src/keys.c    **** static int keycode_to_linear(const keycode c)
 137:src/keys.c    **** {
 138:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 139:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 140:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 141:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 142:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 143:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
ARM GAS  /tmp/ccGwaFaD.s 			page 4


 144:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 145:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 146:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 147:src/keys.c    **** 	};
 148:src/keys.c    **** 	return linear_key_map[c];
 149:src/keys.c    **** }
 150:src/keys.c    **** #else
 151:src/keys.c    **** static int keycode_to_linear(const keycode c)
 152:src/keys.c    **** {
 153:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 154:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 155:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 156:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 157:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 158:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 159:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 160:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 161:src/keys.c    **** 	};
 162:src/keys.c    **** 	return linear_key_map[c];
 163:src/keys.c    **** }
 164:src/keys.c    **** #endif
 165:src/keys.c    **** /*
 166:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 167:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 168:src/keys.c    ****  */
 169:src/keys.c    **** int keycode_to_row_column(const int c)
 170:src/keys.c    **** {
 171:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 172:src/keys.c    **** }
 173:src/keys.c    **** 
 174:src/keys.c    **** /*
 175:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 176:src/keys.c    ****  * Used in PUTK and KTYPE.
 177:src/keys.c    ****  */
 178:src/keys.c    **** 
 179:src/keys.c    **** int row_column_to_keycode(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	int row = c / 10 - 1;
 182:src/keys.c    **** 	int col = c % 10 - 1;
 183:src/keys.c    **** 
 184:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 185:src/keys.c    **** 		return -1;
 186:src/keys.c    **** 	return row * 6 + col;
 187:src/keys.c    **** }
 188:src/keys.c    **** 
 189:src/keys.c    **** /*
 190:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 191:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 192:src/keys.c    ****  */
 193:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 194:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 195:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 196:src/keys.c    **** 
 197:src/keys.c    **** #define NO_REG 0x7f
 198:src/keys.c    **** #define NO_SHORT 0x80
 199:src/keys.c    **** #ifdef DM42
 200:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
ARM GAS  /tmp/ccGwaFaD.s 			page 5


 201:src/keys.c    **** {
 202:src/keys.c    ****   static const unsigned char map[] = {
 203:src/keys.c    ****     // K00 - K05
 204:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 205:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 206:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 207:src/keys.c    ****     // K10 - K15
 208:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 209:src/keys.c    ****     // K20 - K24
 210:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 211:src/keys.c    ****     // K30 - K34
 212:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 213:src/keys.c    ****     // K40 - K44
 214:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 215:src/keys.c    ****     // K50 - K54
 216:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 217:src/keys.c    ****     // K60 - K64
 218:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 219:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 222:src/keys.c    ****   };
 223:src/keys.c    **** 
 224:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 225:src/keys.c    **** }
 226:src/keys.c    **** #else
 227:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 228:src/keys.c    **** {
 229:src/keys.c    ****   static const unsigned char map[] = {
 230:src/keys.c    **** 		// K00 - K05
 231:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 232:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 233:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 234:src/keys.c    **** 		// K10 - K12
 235:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 236:src/keys.c    **** 		// K20 - K24
 237:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 238:src/keys.c    **** 		// K30 - K34
 239:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 240:src/keys.c    **** 		// K40 - K44
 241:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 242:src/keys.c    **** 		// K50 - K54
 243:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 244:src/keys.c    **** 		// K60 - K63
 245:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 246:src/keys.c    **** 		regY_idx, regZ_idx,
 247:src/keys.c    **** 		// Shifts, etc
 248:src/keys.c    **** 		NO_REG
 249:src/keys.c    **** 	};
 250:src/keys.c    **** 
 251:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 252:src/keys.c    **** }
 253:src/keys.c    **** #endif
 254:src/keys.c    **** /*
 255:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 256:src/keys.c    ****  */
 257:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
ARM GAS  /tmp/ccGwaFaD.s 			page 6


 258:src/keys.c    **** {
 259:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 260:src/keys.c    ****   int i, col, max;
 261:src/keys.c    ****   const struct _map {
 262:src/keys.c    ****     unsigned char key, cat[3];
 263:src/keys.c    ****   } *cp;
 264:src/keys.c    **** 
 265:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 266:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 267:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 268:src/keys.c    **** 
 269:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 270:src/keys.c    ****     /*
 271:src/keys.c    ****      *  Normal processing - Not alpha mode
 272:src/keys.c    ****      */
 273:src/keys.c    ****     static const struct _map cmap[] = {
 274:src/keys.c    **** #ifdef DM42
 275:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 276:src/keys.c    **** #else
 277:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 278:src/keys.c    **** #endif
 279:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 280:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 281:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 282:src/keys.c    **** #else
 283:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 284:src/keys.c    **** #endif
 285:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 286:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 287:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 288:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 289:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 290:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 291:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 292:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 293:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 294:src/keys.c    **** #else
 295:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 296:src/keys.c    **** #endif
 297:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 298:src/keys.c    ****     };
 299:src/keys.c    **** 
 300:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 301:src/keys.c    ****       /*
 302:src/keys.c    ****        *  SHOW starts register browser
 303:src/keys.c    ****        */
 304:src/keys.c    ****       return CATALOGUE_REGISTERS;
 305:src/keys.c    ****     }
 306:src/keys.c    **** #if 0
 307:src/keys.c    ****     // conflicts with c# 002 and c# 003
 308:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 309:src/keys.c    ****       /*
 310:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 311:src/keys.c    ****        */
 312:src/keys.c    ****       shift = SHIFT_H;
 313:src/keys.c    ****     }
 314:src/keys.c    **** #endif
ARM GAS  /tmp/ccGwaFaD.s 			page 7


 315:src/keys.c    ****     if (shift != SHIFT_H) {
 316:src/keys.c    ****       /*
 317:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 318:src/keys.c    ****        */
 319:src/keys.c    ****       return CATALOGUE_NONE;
 320:src/keys.c    ****     }
 321:src/keys.c    **** 
 322:src/keys.c    ****     /*
 323:src/keys.c    ****      *  Prepare search
 324:src/keys.c    ****      */
 325:src/keys.c    ****     cp = cmap;
 326:src/keys.c    **** #ifndef WINGUI
 327:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 328:src/keys.c    **** #else
 329:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 330:src/keys.c    **** #endif
 331:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 332:src/keys.c    ****   }
 333:src/keys.c    ****   else {
 334:src/keys.c    ****     /*
 335:src/keys.c    ****      *  All the alpha catalogues go here
 336:src/keys.c    ****      */
 337:src/keys.c    **** #ifdef DM42
 338:src/keys.c    ****     static const struct _map amap[] = {
 339:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 340:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 341:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 342:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 343:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 344:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 345:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 346:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 347:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 348:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 349:src/keys.c    ****     };
 350:src/keys.c    **** #else
 351:src/keys.c    ****     static const struct _map amap[] = {
 352:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 353:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 354:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 355:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 356:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 357:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 358:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 359:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 360:src/keys.c    ****     };
 361:src/keys.c    **** #endif
 362:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 363:src/keys.c    **** 
 364:src/keys.c    ****     /*
 365:src/keys.c    ****      *  Prepare search
 366:src/keys.c    ****      */
 367:src/keys.c    ****     cp = amap;
 368:src/keys.c    ****     col = smap[shift];
 369:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 370:src/keys.c    ****   }
 371:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 8


 372:src/keys.c    ****   /*
 373:src/keys.c    ****    *  Search the key in one of the tables
 374:src/keys.c    ****    */
 375:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 376:src/keys.c    ****     if (cp->key == c) {
 377:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 378:src/keys.c    ****       break;
 379:src/keys.c    ****     }
 380:src/keys.c    ****   }
 381:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 382:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 383:src/keys.c    ****     cat = CATALOGUE_NONE;
 384:src/keys.c    ****   }
 385:src/keys.c    ****   return cat;
 386:src/keys.c    **** }
 387:src/keys.c    **** 
 388:src/keys.c    **** #ifdef DM42
 389:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 390:src/keys.c    **** {
 391:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 392:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 393:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 394:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 395:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 396:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 397:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 398:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 399:src/keys.c    **** 
 400:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 401:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 402:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 403:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 404:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 405:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 406:src/keys.c    **** 
 407:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 408:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 409:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 410:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 411:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 412:src/keys.c    **** 
 413:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 414:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 415:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 416:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 417:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 418:src/keys.c    **** 
 419:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 420:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 421:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 422:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 423:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 424:src/keys.c    **** 
 425:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 426:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 427:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 428:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
ARM GAS  /tmp/ccGwaFaD.s 			page 9


 429:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 430:src/keys.c    **** 
 431:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 432:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 433:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 434:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 435:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 436:src/keys.c    **** 
 437:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 438:src/keys.c    **** 	};
 439:src/keys.c    **** 	if (State2.alphashift) {
 440:src/keys.c    **** 		if (shift == SHIFT_N)
 441:src/keys.c    **** 			shift = SHIFT_LC_N;
 442:src/keys.c    **** 		else if (shift == SHIFT_G)
 443:src/keys.c    **** 			shift = SHIFT_LC_G;
 444:src/keys.c    **** 	}
 445:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 446:src/keys.c    **** }
 447:src/keys.c    **** #else
 448:src/keys.c    **** /*
 449:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 450:src/keys.c    ****  * the two lower case planes.
 451:src/keys.c    ****  */
 452:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 453:src/keys.c    **** {
 454:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 455:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 456:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 457:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 458:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 459:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 460:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 461:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 462:src/keys.c    **** 
 463:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 464:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 465:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 466:src/keys.c    **** 
 467:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 468:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 469:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 470:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 471:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 472:src/keys.c    **** 
 473:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 474:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 475:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 476:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 477:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 478:src/keys.c    **** 
 479:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 480:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 481:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 482:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 483:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 484:src/keys.c    **** 
 485:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
ARM GAS  /tmp/ccGwaFaD.s 			page 10


 486:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 487:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 488:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 489:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 490:src/keys.c    **** 
 491:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 492:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 493:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 494:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 495:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 496:src/keys.c    **** 	};
 497:src/keys.c    **** 	if (State2.alphashift) {
 498:src/keys.c    **** 		if (shift == SHIFT_N)
 499:src/keys.c    **** 			shift = SHIFT_LC_N;
 500:src/keys.c    **** 		else if (shift == SHIFT_G)
 501:src/keys.c    **** 			shift = SHIFT_LC_G;
 502:src/keys.c    **** 	}
 503:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 504:src/keys.c    **** }
 505:src/keys.c    **** #endif
 506:src/keys.c    **** static void init_arg(const enum rarg base) {
 507:src/keys.c    **** 	if (is_bad_cmdline())
 508:src/keys.c    **** 		return;
 509:src/keys.c    **** 	CmdBase = base;
 510:src/keys.c    **** 	State2.ind = 0;
 511:src/keys.c    **** 	State2.digval = 0;
 512:src/keys.c    **** 	State2.numdigit = 0;
 513:src/keys.c    **** 	State2.rarg = 1;
 514:src/keys.c    **** 	State2.dot = 0;
 515:src/keys.c    **** 	State2.local = 0;
 516:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 517:src/keys.c    **** }
 518:src/keys.c    **** 
 519:src/keys.c    **** static void init_cat(enum catalogues cat) {
 520:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 521:src/keys.c    **** 		// Save last catalogue for a later restore
 522:src/keys.c    **** 		State.last_cat = State2.catalogue;
 523:src/keys.c    **** 		CmdLineLength = 0;
 524:src/keys.c    **** 	}
 525:src/keys.c    **** 	process_cmdline();
 526:src/keys.c    **** 
 527:src/keys.c    **** 	State2.labellist = 0;
 528:src/keys.c    **** 	State2.registerlist = 0;
 529:src/keys.c    **** 	State2.status = 0;
 530:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 531:src/keys.c    **** 
 532:src/keys.c    **** 	switch (cat) {
 533:src/keys.c    **** 	case CATALOGUE_LABELS:
 534:src/keys.c    **** 		// Label browser
 535:src/keys.c    **** 		State2.labellist = 1;
 536:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 537:src/keys.c    **** 		break;
 538:src/keys.c    **** 	
 539:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 540:src/keys.c    **** 		// Register browser
 541:src/keys.c    **** 		State2.registerlist = 1;
 542:src/keys.c    **** 		State2.digval = regX_idx;
ARM GAS  /tmp/ccGwaFaD.s 			page 11


 543:src/keys.c    **** 		State2.digval2 = 0;
 544:src/keys.c    **** 		break;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	case CATALOGUE_STATUS:
 547:src/keys.c    **** 		// Flag browser
 548:src/keys.c    **** 		State2.status = 1;
 549:src/keys.c    **** 		break;
 550:src/keys.c    **** 
 551:src/keys.c    **** 	default:
 552:src/keys.c    **** 		// Normal catalogue
 553:src/keys.c    **** 		State2.catalogue = cat;
 554:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 555:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 556:src/keys.c    **** 			// Different catalogue, reset position
 557:src/keys.c    **** 			State.catpos = 0;
 558:src/keys.c    **** 		}
 559:src/keys.c    **** 	}
 560:src/keys.c    **** 	reset_shift();
 561:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 562:src/keys.c    **** 	changed_catalog_state();
 563:src/keys.c    **** #endif
 564:src/keys.c    **** }
 565:src/keys.c    **** 
 566:src/keys.c    **** /*
 567:src/keys.c    ****  *  Reset the internal state to a sane default
 568:src/keys.c    ****  */
 569:src/keys.c    **** void init_state(void) {
 570:src/keys.c    **** #ifndef REALBUILD
 571:src/keys.c    **** 	unsigned int a = State2.flags;
 572:src/keys.c    **** 	unsigned int b = State2.trace;
 573:src/keys.c    **** #else
 574:src/keys.c    **** 	FLAG t = TestFlag;
 575:src/keys.c    **** #endif
 576:src/keys.c    **** 	int v = Voltage;
 577:src/keys.c    **** 	int k = LastKey;
 578:src/keys.c    **** 
 579:src/keys.c    **** 	CmdBase = 0;
 580:src/keys.c    **** 	// Removed: will clear any locals on power off
 581:src/keys.c    **** 	// clrretstk(0);
 582:src/keys.c    **** 
 583:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 584:src/keys.c    **** 	State2.test = TST_NONE;
 585:src/keys.c    **** 	State2.runmode = 1;
 586:src/keys.c    **** 	update_program_bounds(1);
 587:src/keys.c    **** 	set_lift();
 588:src/keys.c    **** 
 589:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 590:src/keys.c    **** 	// but must not be cleared.
 591:src/keys.c    **** 	Voltage = v;
 592:src/keys.c    **** 	LastKey = k;
 593:src/keys.c    **** #ifndef REALBUILD
 594:src/keys.c    **** 	State2.trace = b;
 595:src/keys.c    **** 	State2.flags = a;
 596:src/keys.c    **** #else
 597:src/keys.c    **** 	TestFlag = t;
 598:src/keys.c    **** #endif
 599:src/keys.c    **** 	ShowRegister = regX_idx;
ARM GAS  /tmp/ccGwaFaD.s 			page 12


 600:src/keys.c    **** }
 601:src/keys.c    **** 
 602:src/keys.c    **** void soft_init_state(void) {
 603:src/keys.c    **** 	int soft;
 604:src/keys.c    **** 	unsigned int runmode;
 605:src/keys.c    **** 	unsigned int alphas;
 606:src/keys.c    **** 
 607:src/keys.c    **** 	if (CmdLineLength) {
 608:src/keys.c    **** 		CmdLineLength = 0;
 609:src/keys.c    **** 		CmdLineEex = 0;
 610:src/keys.c    **** 		CmdLineDot = 0;
 611:src/keys.c    **** 		return;
 612:src/keys.c    **** 	}
 613:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 614:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 615:src/keys.c    **** 	runmode = State2.runmode;
 616:src/keys.c    **** 	alphas = State2.alphas;
 617:src/keys.c    **** 	init_state();
 618:src/keys.c    **** 	if (soft) {
 619:src/keys.c    **** 		State2.runmode = runmode;
 620:src/keys.c    **** 		State2.alphas = alphas;
 621:src/keys.c    **** 	}
 622:src/keys.c    **** }
 623:src/keys.c    **** 
 624:src/keys.c    **** static int check_confirm(int op) {
 625:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 626:src/keys.c    **** 		const int nilop = argKIND(op);
 627:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 628:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 629:src/keys.c    **** 			return STATE_UNFINISHED;
 630:src/keys.c    **** 		}
 631:src/keys.c    **** #ifndef DM42		
 632:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 633:src/keys.c    **** #endif
 634:src/keys.c    **** #ifdef DM42
 635:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 636:src/keys.c    **** #endif
 637:src/keys.c    **** #ifdef INFRARED
 638:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 639:src/keys.c    **** #endif
 640:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 641:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 642:src/keys.c    **** #endif
 643:src/keys.c    **** 		) {
 644:src/keys.c    **** 			// These commands are not programmable
 645:src/keys.c    **** 			NonProgrammable = 1;
 646:src/keys.c    **** 		}
 647:src/keys.c    **** 	}
 648:src/keys.c    **** 	return op;
 649:src/keys.c    **** }
 650:src/keys.c    **** 
 651:src/keys.c    **** static void set_smode(const enum single_disp d) {
 652:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 653:src/keys.c    **** }
 654:src/keys.c    **** 
 655:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 656:src/keys.c    **** 	const int code = 100 + n;
ARM GAS  /tmp/ccGwaFaD.s 			page 13


 657:src/keys.c    **** 	unsigned int pc = state_pc();
 658:src/keys.c    **** 
 659:src/keys.c    **** 	if (State2.runmode) {
 660:src/keys.c    **** 		if (isXROM(pc))
 661:src/keys.c    **** 			pc = 1;
 662:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 663:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 664:src/keys.c    **** 	}
 665:src/keys.c    **** 	return dflt;
 666:src/keys.c    **** }
 667:src/keys.c    **** 
 668:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 669:src/keys.c    ****  * as digits.
 670:src/keys.c    ****  */
 671:src/keys.c    **** static int intltr(int d) {
 672:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 673:src/keys.c    **** }
 674:src/keys.c    **** 
 675:src/keys.c    **** /*
 676:src/keys.c    ****  *  Process a key code in the unshifted mode.
 677:src/keys.c    ****  */
 678:src/keys.c    **** static int process_normal(const keycode c)
 679:src/keys.c    **** {
 680:src/keys.c    **** 	static const unsigned short int op_map[] = {
 681:src/keys.c    **** 		// Row 1
 682:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 683:src/keys.c    **** 		OP_MON  | OP_RECIP,
 684:src/keys.c    **** 		OP_DYA  | OP_POW,
 685:src/keys.c    **** 		OP_MON  | OP_SQRT,
 686:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 687:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 688:src/keys.c    **** 		// Row 2
 689:src/keys.c    **** 		RARG_STO,
 690:src/keys.c    **** 		RARG_RCL,
 691:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 692:src/keys.c    **** 		// Row 3
 693:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 694:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 695:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 696:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 697:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 698:src/keys.c    **** 		// Row 4
 699:src/keys.c    **** 		RARG_XEQ,
 700:src/keys.c    **** 		OP_SPEC | OP_7,
 701:src/keys.c    **** 		OP_SPEC | OP_8,
 702:src/keys.c    **** 		OP_SPEC | OP_9,
 703:src/keys.c    **** 		OP_DYA  | OP_DIV,
 704:src/keys.c    **** 		// Row 5
 705:src/keys.c    **** 		STATE_BST,
 706:src/keys.c    **** 		OP_SPEC | OP_4,
 707:src/keys.c    **** 		OP_SPEC | OP_5,
 708:src/keys.c    **** 		OP_SPEC | OP_6,
 709:src/keys.c    **** 		OP_DYA  | OP_MUL,
 710:src/keys.c    **** 		// Row 6
 711:src/keys.c    **** 		STATE_SST,		// SST
 712:src/keys.c    **** 		OP_SPEC | OP_1,
 713:src/keys.c    **** 		OP_SPEC | OP_2,
ARM GAS  /tmp/ccGwaFaD.s 			page 14


 714:src/keys.c    **** 		OP_SPEC | OP_3,
 715:src/keys.c    **** 		OP_DYA  | OP_SUB,
 716:src/keys.c    **** 		// Row 7
 717:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 718:src/keys.c    **** 		OP_SPEC | OP_0,
 719:src/keys.c    **** 		OP_SPEC | OP_DOT,
 720:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 721:src/keys.c    **** 		OP_DYA  | OP_ADD,
 722:src/keys.c    **** #ifdef DM42
 723:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 724:src/keys.c    **** #endif
 725:src/keys.c    **** 	};
 726:src/keys.c    **** 
 727:src/keys.c    **** 	int lc = keycode_to_linear(c);
 728:src/keys.c    **** 	int op = op_map[lc];
 729:src/keys.c    **** 	
 730:src/keys.c    **** 	// The switch handles all the special cases
 731:src/keys.c    **** #ifdef DM42
 732:src/keys.c    **** 	int op_int;
 733:src/keys.c    **** 	if (UState.intm) {
 734:src/keys.c    **** 	  switch (c) {
 735:src/keys.c    **** 	  case K00:
 736:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 737:src/keys.c    **** 	    if (intltr(10)) {
 738:src/keys.c    **** 	      return op;
 739:src/keys.c    **** 	    }
 740:src/keys.c    **** 	    else {
 741:src/keys.c    **** 	      return check_f_key(0, op);
 742:src/keys.c    **** 	    }
 743:src/keys.c    **** 	  case K01:
 744:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 745:src/keys.c    **** 	    if (intltr(11)) {
 746:src/keys.c    **** 	      return op;
 747:src/keys.c    **** 	    }
 748:src/keys.c    **** 	    else {
 749:src/keys.c    **** 	      return check_f_key(1, op);
 750:src/keys.c    **** 	    }
 751:src/keys.c    **** 	  case K03:
 752:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 753:src/keys.c    **** 	    if (intltr(12)) {
 754:src/keys.c    **** 	      return op_int;
 755:src/keys.c    **** 	    }
 756:src/keys.c    **** 	    else {
 757:src/keys.c    **** 	      return check_f_key(2, op);
 758:src/keys.c    **** 	    }
 759:src/keys.c    **** 	  case K30:
 760:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 761:src/keys.c    **** 	    if (intltr(15)) {
 762:src/keys.c    **** 	      return op_int;
 763:src/keys.c    **** 	    }
 764:src/keys.c    **** 	  default:;
 765:src/keys.c    **** 	  }
 766:src/keys.c    **** 	}
 767:src/keys.c    **** #endif  
 768:src/keys.c    **** 
 769:src/keys.c    **** 	switch (c) {
 770:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccGwaFaD.s 			page 15


 771:src/keys.c    **** 	case K00:
 772:src/keys.c    **** 		return check_f_key(0, op);
 773:src/keys.c    **** 	case K01:
 774:src/keys.c    **** 		return check_f_key(1, op);
 775:src/keys.c    **** 	case K03:
 776:src/keys.c    **** 		return check_f_key(2, op);
 777:src/keys.c    **** #else
 778:src/keys.c    **** 	case K00:
 779:src/keys.c    **** 	case K01:
 780:src/keys.c    **** 		if (UState.intm)
 781:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 782:src/keys.c    **** 	case K02:
 783:src/keys.c    **** 	case K03:
 784:src/keys.c    **** 		if (intltr(lc + 10)) {
 785:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 786:src/keys.c    **** 			return op;
 787:src/keys.c    **** 		}
 788:src/keys.c    **** 		return check_f_key(lc, op);
 789:src/keys.c    **** #endif		
 790:src/keys.c    **** 	case K_ARROW:
 791:src/keys.c    **** #ifndef DM42
 792:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 793:src/keys.c    **** 		if (intltr(14))
 794:src/keys.c    **** 			return op;
 795:src/keys.c    **** #else
 796:src/keys.c    **** 		if (UState.intm)
 797:src/keys.c    **** 			return op;
 798:src/keys.c    **** #endif
 799:src/keys.c    **** #endif		
 800:src/keys.c    **** 		if (is_bad_cmdline())
 801:src/keys.c    **** 			return STATE_UNFINISHED;
 802:src/keys.c    **** 		process_cmdline_set_lift();
 803:src/keys.c    **** 		State2.arrow = 1;
 804:src/keys.c    **** #ifdef DM42
 805:src/keys.c    **** 		set_menu (9); // arrow menu
 806:src/keys.c    **** 		display_current_menu ();
 807:src/keys.c    **** 		lcd_refresh ();
 808:src/keys.c    **** #else
 809:src/keys.c    **** 		set_shift(SHIFT_G);
 810:src/keys.c    **** #endif
 811:src/keys.c    **** 		break;
 812:src/keys.c    **** 
 813:src/keys.c    **** 	case K_CMPLX:
 814:src/keys.c    **** #ifdef DM42
 815:src/keys.c    **** 	  if (UState.intm)
 816:src/keys.c    **** 	    break; // return nothing
 817:src/keys.c    **** 	  State2.cmplx = 1;
 818:src/keys.c    **** #else
 819:src/keys.c    **** 	  if (UState.intm)
 820:src/keys.c    **** 	    return op;
 821:src/keys.c    **** 	  State2.cmplx = 1;
 822:src/keys.c    **** #endif
 823:src/keys.c    **** 	  break;
 824:src/keys.c    **** 
 825:src/keys.c    **** 	case K24:				// <-
 826:src/keys.c    **** 		if (State2.disp_temp)
 827:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccGwaFaD.s 			page 16


 828:src/keys.c    **** 		if (State2.runmode)
 829:src/keys.c    **** 			return op;
 830:src/keys.c    **** 		return STATE_BACKSPACE;
 831:src/keys.c    **** 
 832:src/keys.c    **** 	case K10:				// STO
 833:src/keys.c    **** 	case K11:				// RCL
 834:src/keys.c    **** 	case K30:				// XEQ
 835:src/keys.c    **** 		init_arg((enum rarg)op);
 836:src/keys.c    **** 		break;
 837:src/keys.c    **** 
 838:src/keys.c    **** 	default:
 839:src/keys.c    **** 		return op;			// Keys handled by table
 840:src/keys.c    **** 	}
 841:src/keys.c    **** 	return STATE_UNFINISHED;
 842:src/keys.c    **** }
 843:src/keys.c    **** 
 844:src/keys.c    **** 
 845:src/keys.c    **** /*
 846:src/keys.c    ****  *  Process a key code after f or g shift
 847:src/keys.c    ****  */
 848:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 849:src/keys.c    **** 
 850:src/keys.c    **** #define NO_INT 0xf000
 851:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 852:src/keys.c    **** 		// Row 1
 853:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 854:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 855:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 856:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 857:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 858:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 859:src/keys.c    **** 		// Row 2
 860:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 861:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 862:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 863:src/keys.c    **** 		// Row 3
 864:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 865:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 866:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 867:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 868:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 869:src/keys.c    **** 		// Row 4
 870:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 871:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 872:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 873:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 874:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 875:src/keys.c    **** 		// Row 5
 876:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 877:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 878:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 879:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 880:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 881:src/keys.c    **** 		// Row 6
 882:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 883:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 884:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
ARM GAS  /tmp/ccGwaFaD.s 			page 17


 885:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 886:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 887:src/keys.c    **** 		// Row 7
 888:src/keys.c    **** #ifdef INFRARED
 889:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 890:src/keys.c    **** #else
 891:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 892:src/keys.c    **** #endif
 893:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 894:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 895:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 896:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 897:src/keys.c    **** #ifdef DM42
 898:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 899:src/keys.c    **** #endif
 900:src/keys.c    **** 	};
 901:src/keys.c    **** 
 902:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 903:src/keys.c    **** 		STATE_UNFINISHED,
 904:src/keys.c    **** 		STATE_UNFINISHED,
 905:src/keys.c    **** 		OP_DYA  | OP_POW,
 906:src/keys.c    **** 		OP_MON  | OP_SQRT
 907:src/keys.c    **** 	};
 908:src/keys.c    **** 
 909:src/keys.c    **** 	enum shifts shift = reset_shift();
 910:src/keys.c    **** 	int lc = keycode_to_linear(c);
 911:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 912:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 913:src/keys.c    **** 	if (no_int)
 914:src/keys.c    **** 		op &= ~NO_INT;
 915:src/keys.c    **** 
 916:src/keys.c    **** 	switch (c) {
 917:src/keys.c    **** 	case K00:
 918:src/keys.c    **** 	  if (! UState.intm) {
 919:src/keys.c    **** 	    State2.hyp = 1;
 920:src/keys.c    **** 	    State2.dot = op;
 921:src/keys.c    **** 	    // State2.cmplx = 0;
 922:src/keys.c    **** 	    return STATE_UNFINISHED;
 923:src/keys.c    **** 	  }
 924:src/keys.c    **** 	  // fall through
 925:src/keys.c    **** 	case K01:
 926:src/keys.c    **** #ifdef DM42
 927:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 928:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 929:src/keys.c    **** 	  }
 930:src/keys.c    **** 	  break;
 931:src/keys.c    **** #endif
 932:src/keys.c    **** #ifndef DM42
 933:src/keys.c    **** 	case K02:
 934:src/keys.c    **** #endif
 935:src/keys.c    **** 	case K03:
 936:src/keys.c    **** #ifdef DM42
 937:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 938:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 939:src/keys.c    **** 		}
 940:src/keys.c    **** 		break;
 941:src/keys.c    **** #else
ARM GAS  /tmp/ccGwaFaD.s 			page 18


 942:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 943:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 944:src/keys.c    **** 		}
 945:src/keys.c    **** 		break;
 946:src/keys.c    **** #endif
 947:src/keys.c    **** 	case K20:				// Alpha
 948:src/keys.c    **** 		if (shift == SHIFT_F) {
 949:src/keys.c    **** 			if (is_bad_cmdline())
 950:src/keys.c    **** 				return STATE_UNFINISHED;
 951:src/keys.c    **** 			process_cmdline_set_lift();
 952:src/keys.c    **** 			State2.alphas = 1;
 953:src/keys.c    **** #ifdef DM42
 954:src/keys.c    **** 			set_menu(16);
 955:src/keys.c    **** 			display_current_menu();
 956:src/keys.c    **** #endif
 957:src/keys.c    **** 		}
 958:src/keys.c    **** 		break;
 959:src/keys.c    **** #ifdef DM42
 960:src/keys.c    **** 	case K31:
 961:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 962:src/keys.c    **** 	    return OP_SPEC | OP_D;
 963:src/keys.c    **** 	  }
 964:src/keys.c    **** 	  break;
 965:src/keys.c    **** 	case K30:
 966:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 967:src/keys.c    **** 	    return OP_SPEC | OP_E;
 968:src/keys.c    **** 	  }
 969:src/keys.c    **** 	  break;
 970:src/keys.c    **** #endif
 971:src/keys.c    **** 	case K51:
 972:src/keys.c    **** 		if (is_bad_cmdline())
 973:src/keys.c    **** 			return STATE_UNFINISHED;
 974:src/keys.c    **** 		process_cmdline_set_lift();
 975:src/keys.c    **** 		State2.test = op;
 976:src/keys.c    **** 		return STATE_UNFINISHED;
 977:src/keys.c    **** 
 978:src/keys.c    **** 	case K50:
 979:src/keys.c    **** #ifndef REALBUILD
 980:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 981:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 982:src/keys.c    **** 			return STATE_UNFINISHED;
 983:src/keys.c    **** 		}
 984:src/keys.c    **** #endif
 985:src/keys.c    **** 	case K52:
 986:src/keys.c    **** 	case K53:
 987:src/keys.c    **** 	case K63:
 988:src/keys.c    **** 	case K64:
 989:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 990:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 991:src/keys.c    **** 				init_arg((enum rarg) op);
 992:src/keys.c    **** 			}
 993:src/keys.c    **** 			return STATE_UNFINISHED;
 994:src/keys.c    **** 		}
 995:src/keys.c    **** 		break;
 996:src/keys.c    **** 
 997:src/keys.c    **** 	default:
 998:src/keys.c    **** 		break;
ARM GAS  /tmp/ccGwaFaD.s 			page 19


 999:src/keys.c    **** 	}
1000:src/keys.c    **** 	if (no_int && UState.intm)
1001:src/keys.c    **** 		return STATE_UNFINISHED;
1002:src/keys.c    **** 
1003:src/keys.c    **** 	return check_confirm(op);
1004:src/keys.c    **** #undef NO_INT
1005:src/keys.c    **** }
1006:src/keys.c    **** 
1007:src/keys.c    **** /*
1008:src/keys.c    ****  *  Process a key code after h shift
1009:src/keys.c    ****  */
1010:src/keys.c    **** static int process_h_shifted(const keycode c) {
1011:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1012:src/keys.c    **** #define NO_INT   0x4000
1013:src/keys.c    **** 	static const unsigned short int op_map[] = {
1014:src/keys.c    **** 		// Row 1
1015:src/keys.c    **** 		_RARG   | RARG_STD,
1016:src/keys.c    **** 		_RARG   | RARG_FIX,
1017:src/keys.c    **** 		_RARG   | RARG_SCI,
1018:src/keys.c    **** 		_RARG   | RARG_ENG,
1019:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1020:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1021:src/keys.c    **** 		// Row 2
1022:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1023:src/keys.c    **** 		_RARG   | RARG_VIEW,
1024:src/keys.c    **** 		OP_NIL  | OP_RUP,
1025:src/keys.c    **** 		// Row 3
1026:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1027:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1028:src/keys.c    **** 		OP_MON  | OP_NOT,
1029:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1030:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1031:src/keys.c    **** 		// Row 4
1032:src/keys.c    **** 		_RARG   | RARG_GTO,
1033:src/keys.c    **** 		OP_DYA  | OP_LAND,
1034:src/keys.c    **** 		OP_DYA  | OP_LOR,
1035:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1036:src/keys.c    **** 		OP_DYA  | OP_MOD,
1037:src/keys.c    **** 		// Row 5
1038:src/keys.c    **** 		OP_MON  | OP_FACT,
1039:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1040:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1041:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1042:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1043:src/keys.c    **** 		// Row 6
1044:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1045:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1046:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1047:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1048:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1049:src/keys.c    **** 		// Row 7
1050:src/keys.c    **** 		OP_NIL | OP_OFF,
1051:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1052:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1053:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1054:src/keys.c    **** #else
1055:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
ARM GAS  /tmp/ccGwaFaD.s 			page 20


1056:src/keys.c    **** #endif
1057:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1058:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1059:src/keys.c    **** #ifdef DM42
1060:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1061:src/keys.c    **** #endif
1062:src/keys.c    **** 	};
1063:src/keys.c    **** 
1064:src/keys.c    **** 	int lc = keycode_to_linear(c);
1065:src/keys.c    **** 	int op = op_map[lc];
1066:src/keys.c    **** 	reset_shift();
1067:src/keys.c    **** 
1068:src/keys.c    **** 	// The switch handles all the special cases
1069:src/keys.c    **** 	switch (c) {
1070:src/keys.c    **** 	case K62:
1071:src/keys.c    **** 		if (UState.intm)
1072:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1073:src/keys.c    **** 		else
1074:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1075:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1076:src/keys.c    **** #else
1077:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1078:src/keys.c    **** #endif
1079:src/keys.c    **** 		break;
1080:src/keys.c    **** 
1081:src/keys.c    **** 	case K63:					// Program<->Run mode
1082:src/keys.c    **** 		if (is_bad_cmdline())
1083:src/keys.c    **** 			return STATE_UNFINISHED;
1084:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1085:src/keys.c    **** 		process_cmdline_set_lift();
1086:src/keys.c    **** 		update_program_bounds(1);
1087:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1088:src/keys.c    **** 			set_pc(0);
1089:src/keys.c    **** 		break;
1090:src/keys.c    **** 
1091:src/keys.c    **** 	default:
1092:src/keys.c    **** 		break;
1093:src/keys.c    **** 	}
1094:src/keys.c    **** 
1095:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1096:src/keys.c    **** 		if (op & _RARG) {
1097:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1098:src/keys.c    **** 			op = STATE_UNFINISHED;
1099:src/keys.c    **** 		}
1100:src/keys.c    **** 	}
1101:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1102:src/keys.c    **** #undef _RARG
1103:src/keys.c    **** #undef NO_INT
1104:src/keys.c    **** }
1105:src/keys.c    **** 
1106:src/keys.c    **** /*
1107:src/keys.c    ****  *  Process a key code after CPX
1108:src/keys.c    ****  */
1109:src/keys.c    **** static int process_cmplx(const keycode c) {
1110:src/keys.c    **** #define _RARG   0xFF00
1111:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1112:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
ARM GAS  /tmp/ccGwaFaD.s 			page 21


1113:src/keys.c    **** 
1114:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1115:src/keys.c    **** 		// Row 1
1116:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1117:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1118:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1119:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1120:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1121:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1122:src/keys.c    **** 		// Row 2
1123:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1124:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1125:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1126:src/keys.c    **** 		// Row 3
1127:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1128:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1129:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1130:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1131:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1132:src/keys.c    **** 		// Row 4
1133:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1135:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1136:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1138:src/keys.c    **** 		// Row 5
1139:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1140:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1142:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1143:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1144:src/keys.c    **** 		// Row 6
1145:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1146:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1147:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1148:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1150:src/keys.c    **** 		// Row 7
1151:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1152:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1153:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1154:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1155:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1156:src/keys.c    **** #else
1157:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1158:src/keys.c    **** #endif
1159:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1160:src/keys.c    **** #ifdef DM42
1161:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1162:src/keys.c    **** #endif
1163:src/keys.c    **** 	};
1164:src/keys.c    **** 
1165:src/keys.c    **** 	enum shifts shift = reset_shift();
1166:src/keys.c    **** 	int lc = keycode_to_linear(c);
1167:src/keys.c    **** 	int op = op_map[lc][shift];
1168:src/keys.c    **** 	State2.cmplx = 0;
1169:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 22


1170:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1171:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1172:src/keys.c    **** 		return STATE_UNFINISHED;
1173:src/keys.c    **** 	}
1174:src/keys.c    **** 	if (c == K00) {
1175:src/keys.c    **** 		// HYP
1176:src/keys.c    **** 		process_cmdline_set_lift();
1177:src/keys.c    **** 		State2.hyp = 1;
1178:src/keys.c    **** 		State2.dot = op;
1179:src/keys.c    **** 		State2.cmplx = 1;
1180:src/keys.c    **** 		return STATE_UNFINISHED;
1181:src/keys.c    **** 	}
1182:src/keys.c    **** 
1183:src/keys.c    **** 	if (shift != SHIFT_N) {
1184:src/keys.c    **** 		switch (c) {
1185:src/keys.c    **** 		case K_CMPLX:
1186:src/keys.c    **** 			set_shift(shift);
1187:src/keys.c    **** 			break;
1188:src/keys.c    **** 
1189:src/keys.c    **** 		case K51:
1190:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1191:src/keys.c    **** 				if (is_bad_cmdline())
1192:src/keys.c    **** 					return STATE_UNFINISHED;
1193:src/keys.c    **** 				process_cmdline_set_lift();
1194:src/keys.c    **** 				State2.cmplx = 1;
1195:src/keys.c    **** 				State2.test = op;
1196:src/keys.c    **** 			}
1197:src/keys.c    **** 			return STATE_UNFINISHED;
1198:src/keys.c    **** 
1199:src/keys.c    **** 		case K60:
1200:src/keys.c    **** 			init_state();
1201:src/keys.c    **** 			break;
1202:src/keys.c    **** 
1203:src/keys.c    **** 		default:
1204:src/keys.c    **** 			break;
1205:src/keys.c    **** 		}
1206:src/keys.c    **** 	}
1207:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1208:src/keys.c    **** 	return check_confirm(op);
1209:src/keys.c    **** #else
1210:src/keys.c    **** 	return op;
1211:src/keys.c    **** #endif
1212:src/keys.c    **** 
1213:src/keys.c    **** #undef _RARG
1214:src/keys.c    **** #undef CSWAPXZ
1215:src/keys.c    **** #undef CNUM
1216:src/keys.c    **** }
1217:src/keys.c    **** 
1218:src/keys.c    **** 
1219:src/keys.c    **** 
1220:src/keys.c    **** /*
1221:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1222:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1223:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1224:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1225:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1226:src/keys.c    ****  * the ON key are dealt with by our caller.
ARM GAS  /tmp/ccGwaFaD.s 			page 23


1227:src/keys.c    ****  */
1228:src/keys.c    **** static int process_hyp(const keycode c) {
1229:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1230:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1231:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1232:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1233:src/keys.c    **** 	};
1234:src/keys.c    **** 	int cmplx = State2.cmplx;
1235:src/keys.c    **** 	int f = State2.dot;
1236:src/keys.c    **** 
1237:src/keys.c    **** 	State2.hyp = 0;
1238:src/keys.c    **** 	State2.cmplx = 0;
1239:src/keys.c    **** 	State2.dot = 0;
1240:src/keys.c    **** #ifdef DM42
1241:src/keys.c    **** 	reset_shift();
1242:src/keys.c    **** #endif
1243:src/keys.c    **** 	switch ((int)c) {
1244:src/keys.c    **** 
1245:src/keys.c    **** 	case K01:
1246:src/keys.c    **** 	case K02:
1247:src/keys.c    **** 	case K03:
1248:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1249:src/keys.c    **** 
1250:src/keys.c    **** 	case K_CMPLX:
1251:src/keys.c    **** 		cmplx = ! cmplx;
1252:src/keys.c    **** 		goto stay;
1253:src/keys.c    **** 
1254:src/keys.c    **** #ifndef DM42
1255:src/keys.c    **** 	case K_F: 
1256:src/keys.c    **** 	case K_G:
1257:src/keys.c    **** 		f = (c == K_F);
1258:src/keys.c    **** 		// fall through
1259:src/keys.c    **** #else
1260:src/keys.c    **** 	case K_F:
1261:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1262:src/keys.c    **** #endif
1263:src/keys.c    **** 	stay:
1264:src/keys.c    **** 		// process_cmdline_set_lift();
1265:src/keys.c    **** 		State2.hyp = 1;
1266:src/keys.c    **** 		State2.cmplx = cmplx;
1267:src/keys.c    **** 		State2.dot = f;
1268:src/keys.c    **** 		break;
1269:src/keys.c    **** 
1270:src/keys.c    **** 	default:
1271:src/keys.c    **** 		break;
1272:src/keys.c    **** 	}
1273:src/keys.c    **** 	return STATE_UNFINISHED;
1274:src/keys.c    **** }
1275:src/keys.c    **** 
1276:src/keys.c    **** 
1277:src/keys.c    **** /*
1278:src/keys.c    ****  *  Process a key code after ->
1279:src/keys.c    ****  */
1280:src/keys.c    **** static int process_arrow(const keycode c) {
1281:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1282:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1283:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
ARM GAS  /tmp/ccGwaFaD.s 			page 24


1284:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1285:src/keys.c    **** 	};
1286:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1287:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1288:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1289:src/keys.c    **** 	};
1290:src/keys.c    **** 	const int shift = reset_shift();
1291:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1292:src/keys.c    **** 
1293:src/keys.c    **** 	State2.arrow = 0;
1294:src/keys.c    **** #ifdef DM42
1295:src/keys.c    **** 	set_last_menu ();
1296:src/keys.c    **** 	display_current_menu ();
1297:src/keys.c    **** #endif
1298:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1299:src/keys.c    **** 	
1300:src/keys.c    **** 	if (c >= K10 && c <= K12)
1301:src/keys.c    **** 		return op_map[c - K10][f];
1302:src/keys.c    **** 
1303:src/keys.c    **** 	if (c == K22 || c == K23)
1304:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1305:src/keys.c    **** 
1306:src/keys.c    **** 	return STATE_UNFINISHED;
1307:src/keys.c    **** }
1308:src/keys.c    **** 
1309:src/keys.c    **** 
1310:src/keys.c    **** /* Process a GTO . sequence
1311:src/keys.c    ****  */
1312:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1312 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1313 2 view .LVU1
1314:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1314 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1312:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1312 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1313 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1314 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1313 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1314 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
ARM GAS  /tmp/ccGwaFaD.s 			page 25


1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1313 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1312:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1312 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1315:src/keys.c    **** 
1316:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1316 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1313:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1313 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1314:src/keys.c    **** 
  63              		.loc 1 1314 2 is_stmt 1 view .LVU12
  64              		.loc 1 1316 2 view .LVU13
  65              		.loc 1 1316 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1316 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1316 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1317:src/keys.c    **** 		return val;
1318:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1318 2 is_stmt 1 view .LVU17
  77              		.loc 1 1318 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1318 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1318 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1318 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1318 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1319:src/keys.c    **** 		return val;
1320:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1320 2 is_stmt 1 view .LVU23
  91              		.loc 1 1320 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1321:src/keys.c    **** 	return -1;
  94              		.loc 1 1321 2 is_stmt 1 view .LVU25
1318:src/keys.c    **** 		return val;
  95              		.loc 1 1318 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1321 9 view .LVU27
ARM GAS  /tmp/ccGwaFaD.s 			page 26


  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1322:src/keys.c    **** }
 102              		.loc 1 1322 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1322 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 655:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 655 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 656:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 656 2 view .LVU31
 655:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 655 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 659:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 659 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 657:src/keys.c    **** 
 143              		.loc 1 657 2 is_stmt 1 view .LVU34
 659:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 659 2 view .LVU35
 659:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 659 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 655:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 655 47 view .LVU37
ARM GAS  /tmp/ccGwaFaD.s 			page 27


 148 0008 0C46     		mov	r4, r1
 659:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 659 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 657:src/keys.c    **** 
 151              		.loc 1 657 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 657:src/keys.c    **** 
 154              		.loc 1 657 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 657:src/keys.c    **** 
 157              		.loc 1 657 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 660:src/keys.c    **** 			pc = 1;
 160              		.loc 1 660 3 is_stmt 1 view .LVU42
 660:src/keys.c    **** 			pc = 1;
 161              		.loc 1 660 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 661:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 661 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 662 3 is_stmt 1 view .LVU45
 656:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 656 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 662 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 662 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 662 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 662 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 665:src/keys.c    **** }
 186              		.loc 1 665 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 666:src/keys.c    **** 
 188              		.loc 1 666 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccGwaFaD.s 			page 28


 190              	.LVL17:
 191              	.L16:
 663:src/keys.c    **** 	}
 192              		.loc 1 663 4 is_stmt 1 view .LVU53
 663:src/keys.c    **** 	}
 193              		.loc 1 663 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 666:src/keys.c    **** 
 195              		.loc 1 666 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 666:src/keys.c    **** 
 199              		.loc 1 666 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1323:src/keys.c    **** 
1324:src/keys.c    **** static int gtodot_fkey(int n) {
1325:src/keys.c    **** 	const int code = 100 + n;
1326:src/keys.c    **** 	unsigned int pc = state_pc();
1327:src/keys.c    **** 
1328:src/keys.c    **** 	if(isXROM(pc))
1329:src/keys.c    **** 		pc = 1;
1330:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1331:src/keys.c    **** 	if (pc > 0)
1332:src/keys.c    **** 		return pc;
1333:src/keys.c    **** 	return state_pc();
1334:src/keys.c    **** }
1335:src/keys.c    **** 
1336:src/keys.c    **** static int process_gtodot(const keycode c) {
1337:src/keys.c    **** 	int pc = -1;
1338:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1339:src/keys.c    **** 
1340:src/keys.c    **** 	if (rawpc <= 9) {
1341:src/keys.c    **** 		// Digit 0 - 9
1342:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1343:src/keys.c    **** 	}
1344:src/keys.c    **** #ifdef DM42
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1348:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1349:src/keys.c    **** #endif
ARM GAS  /tmp/ccGwaFaD.s 			page 29


1350:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1351:src/keys.c    **** 		// A - D
1352:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1353:src/keys.c    **** 		goto fin;
1354:src/keys.c    **** 	}
1355:src/keys.c    **** 	else if (c == K62) {
1356:src/keys.c    **** 		// .
1357:src/keys.c    **** 		rawpc = ProgSize;
1358:src/keys.c    **** 		goto fin;
1359:src/keys.c    **** 	}
1360:src/keys.c    **** 	else if (c == K20) {
1361:src/keys.c    **** 		// ENTER - short circuit processing
1362:src/keys.c    **** 		pc = State2.digval;
1363:src/keys.c    **** 	}
1364:src/keys.c    **** 	else if (c == K24) {
1365:src/keys.c    **** 		// backspace
1366:src/keys.c    **** 		if (State2.numdigit == 0) {
1367:src/keys.c    **** 			goto fin2;
1368:src/keys.c    **** 		} else {
1369:src/keys.c    **** 			State2.numdigit--;
1370:src/keys.c    **** 			State2.digval /= 10;
1371:src/keys.c    **** 		}
1372:src/keys.c    **** 	}
1373:src/keys.c    **** 	else if (c == K_UP) {
1374:src/keys.c    **** 		// up
1375:src/keys.c    **** 		rawpc = state_pc();
1376:src/keys.c    **** 		if (rawpc == 1)
1377:src/keys.c    **** 			rawpc = 0;
1378:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1379:src/keys.c    **** 		update_program_bounds(1);
1380:src/keys.c    **** 		rawpc = ProgBegin;
1381:src/keys.c    **** 		goto fin;
1382:src/keys.c    **** 	}
1383:src/keys.c    **** 	else if (c == K_DOWN) {
1384:src/keys.c    **** 		// down
1385:src/keys.c    **** 		update_program_bounds(1);
1386:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1387:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1388:src/keys.c    **** 			rawpc = 1;
1389:src/keys.c    **** 		goto fin;
1390:src/keys.c    **** 	}
1391:src/keys.c    **** 	if (pc >= 0) {
1392:src/keys.c    **** 		rawpc = find_user_pc(pc);
1393:src/keys.c    **** fin:		set_pc(rawpc);
1394:src/keys.c    **** fin2:		State2.gtodot = 0;
1395:src/keys.c    **** 		State2.digval = 0;
1396:src/keys.c    **** 		State2.numdigit = 0;
1397:src/keys.c    **** 	}
1398:src/keys.c    **** 	return STATE_UNFINISHED;
1399:src/keys.c    **** }
1400:src/keys.c    **** 
1401:src/keys.c    **** 
1402:src/keys.c    **** /* Process a keystroke in alpha mode
1403:src/keys.c    ****  */
1404:src/keys.c    **** static int process_alpha(const keycode c) {
1405:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1406:src/keys.c    ****         int op = STATE_UNFINISHED;
ARM GAS  /tmp/ccGwaFaD.s 			page 30


1407:src/keys.c    **** 	const enum shifts shift = reset_shift();
1408:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1409:src/keys.c    **** 	State2.alpha_pos = 0;
1410:src/keys.c    **** 
1411:src/keys.c    **** 	switch (c) {
1412:src/keys.c    **** 	case K10:	// STO
1413:src/keys.c    **** 		if (shift == SHIFT_F) {
1414:src/keys.c    **** 			init_arg(RARG_ASTO);
1415:src/keys.c    **** 			return STATE_UNFINISHED;
1416:src/keys.c    **** 		}
1417:src/keys.c    **** 		break;
1418:src/keys.c    **** 
1419:src/keys.c    **** 	case K11:	// RCL - maybe view
1420:src/keys.c    **** 		if (shift == SHIFT_F) {
1421:src/keys.c    **** 			init_arg(RARG_ARCL);
1422:src/keys.c    **** 			return STATE_UNFINISHED;
1423:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1424:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1425:src/keys.c    **** 			return STATE_UNFINISHED;
1426:src/keys.c    **** 		}
1427:src/keys.c    **** 		break;
1428:src/keys.c    **** 
1429:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1430:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1431:src/keys.c    **** 			break;
1432:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1433:src/keys.c    **** 			State2.multi = 1;
1434:src/keys.c    **** 			State2.numdigit = 0;
1435:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1436:src/keys.c    **** 			return STATE_UNFINISHED;
1437:src/keys.c    **** 		}
1438:src/keys.c    **** 		State2.alphas = 0;
1439:src/keys.c    **** 		State2.alphashift = 0;
1440:src/keys.c    **** #ifdef DM42
1441:src/keys.c    **** 		set_menu(-1);
1442:src/keys.c    **** 		display_current_menu();
1443:src/keys.c    **** #endif
1444:src/keys.c    **** 		return op;
1445:src/keys.c    **** 
1446:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1447:src/keys.c    **** 		if (shift == SHIFT_N)
1448:src/keys.c    **** 			return STATE_BACKSPACE;
1449:src/keys.c    **** 		if (shift == SHIFT_H)
1450:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1451:src/keys.c    **** 		break;
1452:src/keys.c    **** 
1453:src/keys.c    **** 	case K_UP:
1454:src/keys.c    **** 	  if (shift == SHIFT_N) {
1455:src/keys.c    **** 	    if ( State2.runmode ) {
1456:src/keys.c    **** 	      // Alpha scroll left
1457:src/keys.c    **** #ifdef DM42
1458:src/keys.c    **** 	      /* 
1459:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1460:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1461:src/keys.c    **** 	       */
1462:src/keys.c    **** #ifdef BIGGER_DISPLAY
1463:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
ARM GAS  /tmp/ccGwaFaD.s 			page 31


1464:src/keys.c    **** 		alpha_pos += 1;
1465:src/keys.c    **** 	      }
1466:src/keys.c    **** #else
1467:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1468:src/keys.c    **** 		alpha_pos += 1;
1469:src/keys.c    **** 	      }
1470:src/keys.c    **** #endif
1471:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1472:src/keys.c    **** #else
1473:src/keys.c    **** 	      int n = alpha_pos + 1;
1474:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1475:src/keys.c    **** #endif
1476:src/keys.c    **** 	      return STATE_UNFINISHED;
1477:src/keys.c    **** 	    }
1478:src/keys.c    **** 	    return STATE_BST;
1479:src/keys.c    **** 	  }
1480:src/keys.c    **** 	  break;
1481:src/keys.c    **** 
1482:src/keys.c    **** 	case K_DOWN:
1483:src/keys.c    **** 	  if (shift == SHIFT_N) {
1484:src/keys.c    **** 	    if ( State2.runmode ) {
1485:src/keys.c    **** 	      // Alpha scroll right
1486:src/keys.c    **** 	      if (alpha_pos > 0)
1487:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1488:src/keys.c    **** 	      return STATE_UNFINISHED;
1489:src/keys.c    **** 	    }
1490:src/keys.c    **** 	    return STATE_SST;
1491:src/keys.c    **** 	  }
1492:src/keys.c    **** 	  break;
1493:src/keys.c    **** 
1494:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1495:src/keys.c    **** 		if (shift == SHIFT_F)
1496:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1497:src/keys.c    **** 		else if (shift == SHIFT_H)
1498:src/keys.c    **** 			return OP_NIL | OP_OFF;
1499:src/keys.c    **** 		else if (shift == SHIFT_N) {
1500:src/keys.c    **** #ifdef DM42
1501:src/keys.c    **** 		  set_menu(-1);
1502:src/keys.c    **** 		  display_current_menu();
1503:src/keys.c    **** #endif
1504:src/keys.c    **** 		  init_state();
1505:src/keys.c    **** 		}
1506:src/keys.c    **** 		return STATE_UNFINISHED;
1507:src/keys.c    **** 
1508:src/keys.c    **** 	case K63:
1509:src/keys.c    **** 		if (shift == SHIFT_F)
1510:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1511:src/keys.c    **** 		break;
1512:src/keys.c    **** 
1513:src/keys.c    **** 	default:
1514:src/keys.c    **** 		break;
1515:src/keys.c    **** 	}
1516:src/keys.c    **** 
1517:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1518:src/keys.c    **** 	if (ch == 0)
1519:src/keys.c    **** 		return STATE_UNFINISHED;
1520:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
ARM GAS  /tmp/ccGwaFaD.s 			page 32


1521:src/keys.c    **** }
1522:src/keys.c    **** 
1523:src/keys.c    **** /*
1524:src/keys.c    ****  *  Code to handle all commands with arguments
1525:src/keys.c    ****  */
1526:src/keys.c    **** static void reset_arg(void) {
1527:src/keys.c    **** 	init_arg((enum rarg) 0);
1528:src/keys.c    **** 	State2.rarg = 0;
1529:src/keys.c    **** }
1530:src/keys.c    **** 
1531:src/keys.c    **** static int arg_eval(unsigned int val) {
1532:src/keys.c    **** 	const unsigned int base = CmdBase;
1533:src/keys.c    **** 	int r = RARG(base, val 
1534:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1535:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1536:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1537:src/keys.c    **** 
1538:src/keys.c    **** 	if (! State2.ind) {
1539:src/keys.c    **** 		/*
1540:src/keys.c    **** 		 *  Central argument checking for some commands
1541:src/keys.c    **** 		 */
1542:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1543:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1544:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1545:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1546:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1547:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1548:src/keys.c    **** 			if ( val == 0 )
1549:src/keys.c    **** 				return STATE_UNFINISHED;
1550:src/keys.c    **** 			r = RARG(base, val);
1551:src/keys.c    **** 		}
1552:src/keys.c    **** #else
1553:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1554:src/keys.c    **** 			// Disallow odd complex register > 98
1555:src/keys.c    **** 			return STATE_UNFINISHED;
1556:src/keys.c    **** #endif
1557:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1558:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1559:src/keys.c    **** 			return STATE_UNFINISHED;
1560:src/keys.c    **** 	}
1561:src/keys.c    **** 	// Build op-code
1562:src/keys.c    **** 	reset_arg();
1563:src/keys.c    **** 	return r;
1564:src/keys.c    **** }
1565:src/keys.c    **** 
1566:src/keys.c    **** static int arg_digit(int n) {
1567:src/keys.c    **** 	int lim;
1568:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1569:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1570:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1571:src/keys.c    **** #else
1572:src/keys.c    **** 	const unsigned int base = CmdBase;
1573:src/keys.c    **** #endif
1574:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1575:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1576:src/keys.c    **** 	
1577:src/keys.c    **** 	if (State2.local) {
ARM GAS  /tmp/ccGwaFaD.s 			page 33


1578:src/keys.c    **** 		// Handle local registers and flags
1579:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1580:src/keys.c    **** 		if (State2.runmode) {
1581:src/keys.c    **** 			if (LocalRegs == 0)
1582:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1583:src/keys.c    **** 			if (is_reg) {
1584:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1585:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1586:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1587:src/keys.c    **** 			}
1588:src/keys.c    **** 		}
1589:src/keys.c    **** 	}
1590:src/keys.c    **** 	else if (is_reg)						// normal register
1591:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1592:src/keys.c    **** 	else {
1593:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1594:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1595:src/keys.c    **** 			lim = RARG_IND - 1;
1596:src/keys.c    **** 	}
1597:src/keys.c    **** 	if ((int) val > lim)
1598:src/keys.c    **** 		return STATE_UNFINISHED;
1599:src/keys.c    **** 
1600:src/keys.c    **** 	State2.digval = val;
1601:src/keys.c    **** 	++State2.numdigit;
1602:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1603:src/keys.c    **** 		int result = arg_eval(val);
1604:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1605:src/keys.c    **** 			--State2.numdigit;
1606:src/keys.c    **** 			State2.digval /= 10;
1607:src/keys.c    **** 		}
1608:src/keys.c    **** 		return result;
1609:src/keys.c    **** 	}
1610:src/keys.c    **** 	return STATE_UNFINISHED;
1611:src/keys.c    **** }
1612:src/keys.c    **** 
1613:src/keys.c    **** static int arg_fkey(int n) {
1614:src/keys.c    **** 	const unsigned int b = CmdBase;
1615:src/keys.c    **** 
1616:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1617:src/keys.c    **** 	{
1618:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1619:src/keys.c    **** 			return STATE_UNFINISHED;
1620:src/keys.c    **** 		if (argcmds[b].lim < 100)
1621:src/keys.c    **** 			return STATE_UNFINISHED;
1622:src/keys.c    **** 		return arg_eval(n + 100);
1623:src/keys.c    **** 	}
1624:src/keys.c    **** 	return STATE_UNFINISHED;
1625:src/keys.c    **** }
1626:src/keys.c    **** 
1627:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1628:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1629:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1630:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1631:src/keys.c    **** #else
1632:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1633:src/keys.c    **** #endif
1634:src/keys.c    **** }
ARM GAS  /tmp/ccGwaFaD.s 			page 34


1635:src/keys.c    **** 
1636:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1637:src/keys.c    **** 	unsigned int b = CmdBase;
1638:src/keys.c    **** 
1639:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1640:src/keys.c    **** 		CmdBase += n;
1641:src/keys.c    **** 		return 1;
1642:src/keys.c    **** 	}
1643:src/keys.c    **** 	/* And we can turn off the operation too */
1644:src/keys.c    **** 	if (b >= n) {
1645:src/keys.c    **** 		b -= n;
1646:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1647:src/keys.c    **** 			CmdBase = b;
1648:src/keys.c    **** 			return 1;
1649:src/keys.c    **** 		}
1650:src/keys.c    **** 	}
1651:src/keys.c    **** 	return 0;
1652:src/keys.c    **** }
1653:src/keys.c    **** 
1654:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1655:src/keys.c    **** 
1656:src/keys.c    **** 	if (State2.numdigit == 0) {
1657:src/keys.c    **** 		// Only valid at beginning of entry
1658:src/keys.c    **** 		if (State2.dot || State2.local) {
1659:src/keys.c    **** 			// '..' or ENTER '.' = X
1660:src/keys.c    **** 			State2.local = 0;
1661:src/keys.c    **** 			return arg_eval(regX_idx);
1662:src/keys.c    **** 		}
1663:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1664:src/keys.c    **** 			// local register or flag select
1665:src/keys.c    **** 			State2.local = 1;
1666:src/keys.c    **** 		}
1667:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1668:src/keys.c    **** 			// Special GTO . sequence
1669:src/keys.c    **** 			if (! State2.ind) {
1670:src/keys.c    **** 				State2.gtodot = 1;
1671:src/keys.c    **** 				reset_arg();
1672:src/keys.c    **** 			}
1673:src/keys.c    **** 		}
1674:src/keys.c    **** 	}
1675:src/keys.c    **** 	return STATE_UNFINISHED;
1676:src/keys.c    **** }
1677:src/keys.c    **** 
1678:src/keys.c    **** static int process_arg_shuffle(int r) {
1679:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1680:src/keys.c    **** 	if (State2.numdigit < 4)
1681:src/keys.c    **** 		return STATE_UNFINISHED;
1682:src/keys.c    **** 	return arg_eval(State2.digval);
1683:src/keys.c    **** }
1684:src/keys.c    **** 
1685:src/keys.c    **** 
1686:src/keys.c    **** static int process_arg(const keycode c) {
1687:src/keys.c    **** 	unsigned int base = CmdBase;
1688:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1689:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1690:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1691:src/keys.c    **** 	const enum shifts shift = reset_shift();
ARM GAS  /tmp/ccGwaFaD.s 			page 35


1692:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1693:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1694:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1695:src/keys.c    **** 
1696:src/keys.c    **** 	n &= ~NO_SHORT;
1697:src/keys.c    **** 	if (base >= NUM_RARG) {
1698:src/keys.c    **** 		reset_arg();
1699:src/keys.c    **** 		return STATE_UNFINISHED;
1700:src/keys.c    **** 	}
1701:src/keys.c    **** #ifdef DM42
1702:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1703:src/keys.c    **** 	  switch (n) {
1704:src/keys.c    **** 	  case regX_idx:
1705:src/keys.c    **** 	    return arg_digit(1);
1706:src/keys.c    **** 	  case regY_idx:
1707:src/keys.c    **** 	    return arg_digit(2);
1708:src/keys.c    **** 	  case regZ_idx:
1709:src/keys.c    **** 	    return arg_digit(3);
1710:src/keys.c    **** 	  case regT_idx:
1711:src/keys.c    **** 	    return arg_digit(4);
1712:src/keys.c    **** 	  case 5:
1713:src/keys.c    **** 	  case 6:
1714:src/keys.c    **** 	  case 7:
1715:src/keys.c    **** 	  case 8:
1716:src/keys.c    **** 	  case 9:
1717:src/keys.c    **** 	  case 0:
1718:src/keys.c    **** 	    return arg_digit(n);
1719:src/keys.c    **** 	  }
1720:src/keys.c    **** 	}
1721:src/keys.c    **** #else
1722:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1723:src/keys.c    **** 		return arg_digit(n);
1724:src/keys.c    **** #endif	
1725:src/keys.c    **** 	if (shorthand)
1726:src/keys.c    **** 		// row column shorthand addressing
1727:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1728:src/keys.c    **** 
1729:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1730:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1731:src/keys.c    **** 		switch ((int)c) {
1732:src/keys.c    **** 		case K_UP:	// up arrow
1733:src/keys.c    **** 			if (--base < RARG_FIX)
1734:src/keys.c    **** 				base = RARG_SIG0;
1735:src/keys.c    **** 			break;
1736:src/keys.c    **** 
1737:src/keys.c    **** 		case K_DOWN:	// down arrow
1738:src/keys.c    **** 		case K01:	// B
1739:src/keys.c    **** 			if (++base > RARG_SIG0)
1740:src/keys.c    **** 				base = RARG_FIX;
1741:src/keys.c    **** 			break;
1742:src/keys.c    **** 		}
1743:src/keys.c    **** 		CmdBase = base;
1744:src/keys.c    **** 	}
1745:src/keys.c    **** #endif
1746:src/keys.c    **** 	/*
1747:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1748:src/keys.c    **** 	 *  Handle the rest here.
ARM GAS  /tmp/ccGwaFaD.s 			page 36


1749:src/keys.c    **** 	 */
1750:src/keys.c    **** 	switch ((int)c) {
1751:src/keys.c    **** 	case K_F:
1752:src/keys.c    **** 		if (label_addressing)
1753:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1754:src/keys.c    **** 		break;
1755:src/keys.c    **** 
1756:src/keys.c    **** 	case K_ARROW:		// arrow
1757:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1758:src/keys.c    **** 			State2.ind = ! State2.ind;
1759:src/keys.c    **** 			if (! stack_reg)
1760:src/keys.c    **** 				State2.dot = 0;
1761:src/keys.c    **** 		}
1762:src/keys.c    **** 		break;
1763:src/keys.c    **** 
1764:src/keys.c    **** 	case K_CMPLX:
1765:src/keys.c    **** 		if (State2.ind || State2.dot)
1766:src/keys.c    **** 			break;
1767:src/keys.c    **** 		if (base == RARG_STO)
1768:src/keys.c    **** 			CmdBase = RARG_STOM;
1769:src/keys.c    **** 		else if (base == RARG_RCL)
1770:src/keys.c    **** 			CmdBase = RARG_RCLM;
1771:src/keys.c    **** 		break;
1772:src/keys.c    **** #ifdef DM42
1773:src/keys.c    **** 	case K41:       // T
1774:src/keys.c    **** 	  if (State2.shuffle)
1775:src/keys.c    **** 	    return process_arg_shuffle(3);
1776:src/keys.c    **** 	case K51:       // X
1777:src/keys.c    **** 	  if (State2.shuffle)
1778:src/keys.c    **** 	    return process_arg_shuffle(0);
1779:src/keys.c    **** 	case K52:	// Y
1780:src/keys.c    **** 	  if (State2.shuffle)
1781:src/keys.c    **** 	    return process_arg_shuffle(1);
1782:src/keys.c    **** 	case K53:       // Z
1783:src/keys.c    **** 	  if (State2.shuffle)
1784:src/keys.c    **** 	    return process_arg_shuffle(2);
1785:src/keys.c    **** #else
1786:src/keys.c    **** 	case K63:	// Y
1787:src/keys.c    **** 	  if (State2.shuffle)
1788:src/keys.c    **** 	    return process_arg_shuffle(1);
1789:src/keys.c    **** #endif
1790:src/keys.c    **** 	case K00:	// A
1791:src/keys.c    **** 	case K01:	// B
1792:src/keys.c    **** 	case K02:	// C
1793:src/keys.c    **** 	case K03:	// D
1794:src/keys.c    **** #ifdef DM42
1795:src/keys.c    **** 	case K12:	// I (lastY)
1796:src/keys.c    **** 	case K13:	// J
1797:src/keys.c    **** 	case K14:	// K
1798:src/keys.c    **** 	case K15:	// L (lastX)
1799:src/keys.c    **** #else
1800:src/keys.c    **** 	case K12:	// I (lastY)
1801:src/keys.c    **** 	case K21:	// J
1802:src/keys.c    **** 	case K22:	// K
1803:src/keys.c    **** 	case K23:	// L (lastX)
1804:src/keys.c    **** #endif
1805:src/keys.c    **** 	  if (State2.dot || stack_reg)
ARM GAS  /tmp/ccGwaFaD.s 			page 37


1806:src/keys.c    **** 			return arg_eval(n);
1807:src/keys.c    **** 		if ( c <= K03 )
1808:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1809:src/keys.c    **** 		break;
1810:src/keys.c    **** #ifdef DM42
1811:src/keys.c    **** 	case K62:	// '.'
1812:src/keys.c    **** 		return process_arg_dot(base);
1813:src/keys.c    **** 
1814:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1815:src/keys.c    **** 	case K64:		// plus
1816:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1817:src/keys.c    **** 			return arg_eval(n);
1818:src/keys.c    **** 		break;
1819:src/keys.c    **** 	case K54:               // minus
1820:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1821:src/keys.c    **** 			reset_arg();
1822:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1823:src/keys.c    **** 		}
1824:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1825:src/keys.c    **** 		break;
1826:src/keys.c    **** 	case K44:		// multiply
1827:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1828:src/keys.c    **** 			return arg_eval(n);
1829:src/keys.c    **** 		break;
1830:src/keys.c    **** 	case K34:
1831:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1832:src/keys.c    **** 		break;
1833:src/keys.c    **** #else
1834:src/keys.c    **** 	case K62:	// X, '.'
1835:src/keys.c    **** 		if (State2.shuffle)
1836:src/keys.c    **** 			return process_arg_shuffle(0);
1837:src/keys.c    **** 		return process_arg_dot(base);
1838:src/keys.c    **** 
1839:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1840:src/keys.c    **** 	case K64:		// Z register
1841:src/keys.c    **** 		if (State2.shuffle)
1842:src/keys.c    **** 			return process_arg_shuffle(2);
1843:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1844:src/keys.c    **** 			return arg_eval(n);
1845:src/keys.c    **** 		break;
1846:src/keys.c    **** 
1847:src/keys.c    **** 	case K54:
1848:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1849:src/keys.c    **** 			reset_arg();
1850:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1851:src/keys.c    **** 		}
1852:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1853:src/keys.c    **** 		break;
1854:src/keys.c    **** 
1855:src/keys.c    **** 	case K44:		// T register
1856:src/keys.c    **** 		if (State2.shuffle)
1857:src/keys.c    **** 			return process_arg_shuffle(3);
1858:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1859:src/keys.c    **** 			return arg_eval(n);
1860:src/keys.c    **** 		break;
1861:src/keys.c    **** 
1862:src/keys.c    **** 	case K34:
ARM GAS  /tmp/ccGwaFaD.s 			page 38


1863:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1864:src/keys.c    **** 		break;
1865:src/keys.c    **** #endif
1866:src/keys.c    **** 	case K_UP:
1867:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1868:src/keys.c    **** 		break;
1869:src/keys.c    **** 
1870:src/keys.c    **** 	case K_DOWN:
1871:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1872:src/keys.c    **** 		break;
1873:src/keys.c    **** 
1874:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1875:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1876:src/keys.c    **** 			if (argcmds[base].label) {
1877:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1878:src/keys.c    **** 				State2.multi = 1;
1879:src/keys.c    **** 				State2.alphashift = 0;
1880:src/keys.c    **** 				State2.rarg = 0;
1881:src/keys.c    **** 			} else if (base == RARG_SCI) {
1882:src/keys.c    **** 				reset_arg();
1883:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1884:src/keys.c    **** 			} else if (base == RARG_ENG) {
1885:src/keys.c    **** 				reset_arg();
1886:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1887:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1888:src/keys.c    **** 				State2.dot = 1;
1889:src/keys.c    **** 		} else if (State2.numdigit > 0)
1890:src/keys.c    **** 			return arg_eval(State2.digval);
1891:src/keys.c    **** 		else if (stack_reg)
1892:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1893:src/keys.c    **** 		break;
1894:src/keys.c    **** 
1895:src/keys.c    **** 	case K24:	// <-
1896:src/keys.c    **** 		if (State2.numdigit == 0) {
1897:src/keys.c    **** 			if (State2.dot)
1898:src/keys.c    **** 				State2.dot = 0;
1899:src/keys.c    **** 			else if (State2.local)
1900:src/keys.c    **** 				State2.local = 0;
1901:src/keys.c    **** 			else if (State2.ind)
1902:src/keys.c    **** 				State2.ind = 0;
1903:src/keys.c    **** 			else
1904:src/keys.c    **** 				goto reset;
1905:src/keys.c    **** 		}
1906:src/keys.c    **** 		else {
1907:src/keys.c    **** 			--State2.numdigit;
1908:src/keys.c    **** 			if (State2.shuffle)
1909:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1910:src/keys.c    **** 			else
1911:src/keys.c    **** 				State2.digval /= 10;
1912:src/keys.c    **** 		}
1913:src/keys.c    **** 		break;
1914:src/keys.c    **** 
1915:src/keys.c    **** 	case K60:
1916:src/keys.c    **** 	reset:
1917:src/keys.c    **** 		reset_arg();
1918:src/keys.c    **** 	default:
1919:src/keys.c    **** 		break;
ARM GAS  /tmp/ccGwaFaD.s 			page 39


1920:src/keys.c    **** 	}
1921:src/keys.c    **** 	return STATE_UNFINISHED;
1922:src/keys.c    **** }
1923:src/keys.c    **** 
1924:src/keys.c    **** 
1925:src/keys.c    **** /*
1926:src/keys.c    ****  *  Process arguments to the diverse test commands
1927:src/keys.c    ****  */
1928:src/keys.c    **** static int process_test(const keycode c) {
1929:src/keys.c    **** 	int r = State2.test;
1930:src/keys.c    **** 	int cmpx = State2.cmplx;
1931:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1932:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1933:src/keys.c    **** 
1934:src/keys.c    **** 	State2.test = TST_NONE;
1935:src/keys.c    **** 	State2.cmplx = 0;
1936:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1937:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1938:src/keys.c    **** 		// Lettered register
1939:src/keys.c    **** 		if (cmpx && (n & 1)) {
1940:src/keys.c    **** 			if (n == regI_idx)
1941:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1942:src/keys.c    **** 			// Disallow odd complex registers > A
1943:src/keys.c    **** 			goto again;
1944:src/keys.c    **** 		}
1945:src/keys.c    **** 		// Return the command with the register completed
1946:src/keys.c    **** 		return RARG(base, n);
1947:src/keys.c    **** 	}
1948:src/keys.c    **** 	else if ( n == 0 ) {
1949:src/keys.c    **** 		// Special 0
1950:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1951:src/keys.c    **** 	}
1952:src/keys.c    **** 	else if ( n == 1 ) {
1953:src/keys.c    **** 		// Special 1
1954:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1955:src/keys.c    **** 	}
1956:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1957:src/keys.c    **** 		// digit 2..9, -> or .
1958:src/keys.c    **** 		init_arg((enum rarg)base);
1959:src/keys.c    **** 		return process_arg(c);
1960:src/keys.c    **** 	}
1961:src/keys.c    **** 
1962:src/keys.c    **** 	switch (c) {
1963:src/keys.c    **** 	case K11:					// tests vs register
1964:src/keys.c    **** 	case K20:
1965:src/keys.c    **** 		init_arg((enum rarg)base);
1966:src/keys.c    **** 		return STATE_UNFINISHED;
1967:src/keys.c    **** 
1968:src/keys.c    **** 	//case K60:
1969:src/keys.c    **** 	case K24:
1970:src/keys.c    **** 		return STATE_UNFINISHED;
1971:src/keys.c    **** 
1972:src/keys.c    **** 	default:
1973:src/keys.c    **** 		break;
1974:src/keys.c    **** 	}
1975:src/keys.c    **** again:
1976:src/keys.c    **** 	State2.test = r;
ARM GAS  /tmp/ccGwaFaD.s 			page 40


1977:src/keys.c    **** 	State2.cmplx = cmpx;
1978:src/keys.c    **** 	return STATE_UNFINISHED;
1979:src/keys.c    **** }
1980:src/keys.c    **** 
1981:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1982:src/keys.c    **** /*
1983:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1984:src/keys.c    ****  */
1985:src/keys.c    **** #define USER_CAT_MAX 100
1986:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1987:src/keys.c    **** 
1988:src/keys.c    **** static int build_user_cat(void)
1989:src/keys.c    **** {
1990:src/keys.c    **** 	// find the label 'CAT'
1991:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1992:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1993:src/keys.c    **** 	int len = 0;
1994:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1995:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1996:src/keys.c    **** 		char buf1[16];
1997:src/keys.c    **** 		int i;
1998:src/keys.c    **** 		s_opcode op;
1999:src/keys.c    **** 	next:
2000:src/keys.c    **** 		pc = do_inc(pc, 0);
2001:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2002:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2003:src/keys.c    **** 			break;
2004:src/keys.c    **** 		if (isDBL(op))
2005:src/keys.c    **** 			continue;
2006:src/keys.c    **** 		if (isRARG(op)) {
2007:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2008:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2009:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2010:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2011:src/keys.c    **** 		}
2012:src/keys.c    **** 		catcmd(op, buf1);
2013:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2014:src/keys.c    **** 			// Find a position in the table to insert the new entry
2015:src/keys.c    **** 			char buf2[16];
2016:src/keys.c    **** 			const char *p, *q;
2017:src/keys.c    **** 			int diff = 0;
2018:src/keys.c    **** 			if (op == UserCat[i]) {
2019:src/keys.c    **** 				// duplicate entry - ignore
2020:src/keys.c    **** 				goto next;
2021:src/keys.c    **** 			}
2022:src/keys.c    **** 			p = buf1;
2023:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2024:src/keys.c    **** 				++p;
2025:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2026:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2027:src/keys.c    **** 				++q;
2028:src/keys.c    **** 			diff = 0;
2029:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2030:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2031:src/keys.c    **** 			}
2032:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2033:src/keys.c    **** 				// identical according to sort order, insert after
ARM GAS  /tmp/ccGwaFaD.s 			page 41


2034:src/keys.c    **** 				++i;
2035:src/keys.c    **** 				break;
2036:src/keys.c    **** 			}
2037:src/keys.c    **** 			if (diff > 0) {
2038:src/keys.c    **** 				// insert new entry before the one found because this is greater
2039:src/keys.c    **** 				break;
2040:src/keys.c    **** 			}
2041:src/keys.c    **** 		}
2042:src/keys.c    **** 		if (i < len) {
2043:src/keys.c    **** 			// Make room
2044:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2045:src/keys.c    **** 		}
2046:src/keys.c    **** 		UserCat[i] = op;
2047:src/keys.c    **** 		++len;
2048:src/keys.c    **** 	}
2049:src/keys.c    **** 	// return the number of entries
2050:src/keys.c    **** 	return len;
2051:src/keys.c    **** }
2052:src/keys.c    **** #endif
2053:src/keys.c    **** 
2054:src/keys.c    **** /* Return the number of entries in the current catalogue.
2055:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2056:src/keys.c    ****  * likely be the most space efficient method.
2057:src/keys.c    ****  */
2058:src/keys.c    **** int current_catalogue_max(void) {
2059:src/keys.c    **** 	// A quick table of catalogue sizes
2060:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2061:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2062:src/keys.c    **** 	{
2063:src/keys.c    **** 		0, // NONE
2064:src/keys.c    **** 		SIZE_catalogue,
2065:src/keys.c    **** 		SIZE_cplx_catalogue,
2066:src/keys.c    **** 		SIZE_stats_catalogue,
2067:src/keys.c    **** 		SIZE_prob_catalogue,
2068:src/keys.c    **** 		SIZE_int_catalogue,
2069:src/keys.c    **** 		SIZE_prog_catalogue,
2070:src/keys.c    **** 		SIZE_program_xfcn,
2071:src/keys.c    **** 		SIZE_test_catalogue,
2072:src/keys.c    **** 		SIZE_mode_catalogue,
2073:src/keys.c    **** 		SIZE_alpha_catalogue,
2074:src/keys.c    **** 		SIZE_alpha_symbols,
2075:src/keys.c    **** 		SIZE_alpha_compares,
2076:src/keys.c    **** 		SIZE_alpha_arrows,
2077:src/keys.c    **** 		SIZE_alpha_letters,
2078:src/keys.c    **** 		SIZE_alpha_subscripts,
2079:src/keys.c    **** 		NUM_CONSTS_CAT,
2080:src/keys.c    **** 		NUM_CONSTS_CAT,
2081:src/keys.c    **** 		SIZE_conv_catalogue,
2082:src/keys.c    **** 		SIZE_sums_catalogue,
2083:src/keys.c    **** 		SIZE_matrix_catalogue,
2084:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2085:src/keys.c    **** 		SIZE_internal_catalogue,
2086:src/keys.c    **** #endif
2087:src/keys.c    **** 	};
2088:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2089:src/keys.c    **** 	const int cat = State2.catalogue;
2090:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
ARM GAS  /tmp/ccGwaFaD.s 			page 42


2091:src/keys.c    **** #else
2092:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2093:src/keys.c    **** #endif
2094:src/keys.c    **** }
2095:src/keys.c    **** 
2096:src/keys.c    **** 
2097:src/keys.c    **** /* Look up the character position in the given byte array and
2098:src/keys.c    ****  * build the alpha op-code for it.
2099:src/keys.c    ****  */
2100:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2101:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2102:src/keys.c    **** }
2103:src/keys.c    **** 
2104:src/keys.c    **** 
2105:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2106:src/keys.c    ****  */
2107:src/keys.c    **** opcode current_catalogue(int n) {
2108:src/keys.c    **** 	// A quick table of catalogue tables
2109:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2110:src/keys.c    **** 	static const void *catalogues[] =
2111:src/keys.c    **** 	{
2112:src/keys.c    **** 		NULL, // NONE
2113:src/keys.c    **** 		catalogue,
2114:src/keys.c    **** 		cplx_catalogue,
2115:src/keys.c    **** 		stats_catalogue,
2116:src/keys.c    **** 		prob_catalogue,
2117:src/keys.c    **** 		int_catalogue,
2118:src/keys.c    **** 		prog_catalogue,
2119:src/keys.c    **** 		program_xfcn,
2120:src/keys.c    **** 		test_catalogue,
2121:src/keys.c    **** 		mode_catalogue,
2122:src/keys.c    **** 		alpha_catalogue,
2123:src/keys.c    **** 		alpha_symbols,
2124:src/keys.c    **** 		alpha_compares,
2125:src/keys.c    **** 		alpha_arrows,
2126:src/keys.c    **** 		alpha_letters,
2127:src/keys.c    **** 		alpha_subscripts,
2128:src/keys.c    **** 		NULL,
2129:src/keys.c    **** 		NULL,
2130:src/keys.c    **** 		NULL, //CONV
2131:src/keys.c    **** 		sums_catalogue,
2132:src/keys.c    **** 		matrix_catalogue,
2133:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2134:src/keys.c    **** 		internal_catalogue,
2135:src/keys.c    **** #endif
2136:src/keys.c    **** 	};
2137:src/keys.c    **** 	const unsigned char *cat;
2138:src/keys.c    **** 	unsigned int c = State2.catalogue;
2139:src/keys.c    **** 	int m, i;
2140:src/keys.c    **** 	unsigned p, q;
2141:src/keys.c    **** 
2142:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2143:src/keys.c    **** 		if (n == OP_ZERO)
2144:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2145:src/keys.c    **** 		return CONST(n);
2146:src/keys.c    **** 	}
2147:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
ARM GAS  /tmp/ccGwaFaD.s 			page 43


2148:src/keys.c    **** 		if (n == OP_ZERO)
2149:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2150:src/keys.c    **** 		return CONST_CMPLX(n);
2151:src/keys.c    **** 	}
2152:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2153:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2154:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2155:src/keys.c    **** 			// Monadic conversion routine
2156:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2157:src/keys.c    **** 		else
2158:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2159:src/keys.c    **** 	}
2160:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2161:src/keys.c    **** 	if (c == CATALOGUE_USER)
2162:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2163:src/keys.c    **** #endif
2164:src/keys.c    **** 
2165:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2166:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2167:src/keys.c    **** 	else
2168:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2169:src/keys.c    **** 
2170:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2171:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2172:src/keys.c    **** 	}
2173:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2174:src/keys.c    **** 		return OP_NIL | OP_NOP;
2175:src/keys.c    **** 
2176:src/keys.c    **** 	/* Unpack the opcode */
2177:src/keys.c    **** 	cat += n + (n >> 2);
2178:src/keys.c    **** 	p = cat[0];
2179:src/keys.c    **** 	q = cat[1];
2180:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2181:src/keys.c    **** 
2182:src/keys.c    **** 	/* Now figure out which opcode it really is */
2183:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2184:src/keys.c    **** 		if (m < opcode_breaks[i])
2185:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2186:src/keys.c    **** 		m -= opcode_breaks[i];
2187:src/keys.c    **** 	}
2188:src/keys.c    **** 	return RARG_BASEOP(m);
2189:src/keys.c    **** }
2190:src/keys.c    **** 
2191:src/keys.c    **** 
2192:src/keys.c    **** /*
2193:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2194:src/keys.c    ****  *  in multi character commands.
2195:src/keys.c    ****  */
2196:src/keys.c    **** static int forbidden_alpha(int pos) {
2197:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2198:src/keys.c    **** }
2199:src/keys.c    **** 
2200:src/keys.c    **** /*
2201:src/keys.c    ****  *  Catalogue navigation
2202:src/keys.c    ****  */
2203:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2204:src/keys.c    ****    int pos = State.catpos;
ARM GAS  /tmp/ccGwaFaD.s 			page 44


2205:src/keys.c    ****    int ch;
2206:src/keys.c    ****    const int ctmax = current_catalogue_max();
2207:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2208:src/keys.c    **** 
2209:src/keys.c    ****    if (shift == SHIFT_N) {
2210:src/keys.c    ****      switch (c) {
2211:src/keys.c    **** #ifdef DM42
2212:src/keys.c    ****      case K05:			// XEQ accepts command
2213:src/keys.c    **** #else	  
2214:src/keys.c    ****      case K30:			// XEQ accepts command
2215:src/keys.c    **** #endif						  
2216:src/keys.c    ****      case K20:			// Enter accepts command
2217:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2218:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2219:src/keys.c    **** 
2220:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2221:src/keys.c    **** 
2222:src/keys.c    **** 	 if (isRARG(op)) {
2223:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2224:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2225:src/keys.c    **** 	     return op;
2226:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2227:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2228:src/keys.c    **** 	   else
2229:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2230:src/keys.c    **** 	 }
2231:src/keys.c    **** 	 else {
2232:src/keys.c    **** 	   return check_confirm(op);
2233:src/keys.c    **** 	 }
2234:src/keys.c    ****        } else
2235:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2236:src/keys.c    ****        return STATE_UNFINISHED;
2237:src/keys.c    **** 
2238:src/keys.c    ****      case K24:			// backspace
2239:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2240:src/keys.c    **** 	 if (--CmdLineLength > 0)
2241:src/keys.c    **** 	   goto search;
2242:src/keys.c    **** 	 pos = 0;
2243:src/keys.c    **** 	 goto set_pos;
2244:src/keys.c    ****        } else
2245:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2246:src/keys.c    ****        return STATE_UNFINISHED;
2247:src/keys.c    **** 
2248:src/keys.c    ****      case K60:
2249:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2250:src/keys.c    ****        return STATE_UNFINISHED;
2251:src/keys.c    **** 
2252:src/keys.c    ****      case K_UP:
2253:src/keys.c    ****        CmdLineLength = 0;
2254:src/keys.c    ****        if (pos == 0)
2255:src/keys.c    **** 	 goto set_max;
2256:src/keys.c    ****        else
2257:src/keys.c    **** 	 --pos;
2258:src/keys.c    ****        goto set_pos;
2259:src/keys.c    **** 
2260:src/keys.c    ****      case K_DOWN:
2261:src/keys.c    ****        CmdLineLength = 0;
ARM GAS  /tmp/ccGwaFaD.s 			page 45


2262:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2263:src/keys.c    ****        if (pos >= ctmax)
2264:src/keys.c    **** 	 pos = 0;
2265:src/keys.c    ****        goto set_pos;
2266:src/keys.c    **** 
2267:src/keys.c    ****      default:
2268:src/keys.c    ****        break;
2269:src/keys.c    ****      }
2270:src/keys.c    ****    } else if (shift == SHIFT_F) {
2271:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2272:src/keys.c    ****        /*
2273:src/keys.c    **** 	* f 1/x in conversion catalogue
2274:src/keys.c    **** 	*/
2275:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2276:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2277:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2278:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2279:src/keys.c    **** 	*/
2280:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2281:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2282:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2283:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2284:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2285:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2286:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2287:src/keys.c    ****        };
2288:src/keys.c    ****        const opcode op = current_catalogue(pos);
2289:src/keys.c    ****        int i;
2290:src/keys.c    **** 
2291:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2292:src/keys.c    ****        if (isRARG(op))
2293:src/keys.c    **** 	 return op ^ 1;
2294:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2295:src/keys.c    **** 	 if (op == conv_mapping[i])
2296:src/keys.c    **** 	   return conv_mapping[i^1];
2297:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2298:src/keys.c    ****      }
2299:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2300:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2301:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2302:src/keys.c    ****        return STATE_UNFINISHED;
2303:src/keys.c    ****      }
2304:src/keys.c    ****    } else if (shift == SHIFT_G) {
2305:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2306:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2307:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2308:src/keys.c    ****      }
2309:src/keys.c    ****    }
2310:src/keys.c    **** 
2311:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2312:src/keys.c    ****     * jump to the appropriate catalogue entry.
2313:src/keys.c    ****     */
2314:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2315:src/keys.c    ****    reset_shift();
2316:src/keys.c    ****    if (ch == '\0')
2317:src/keys.c    ****      return STATE_UNFINISHED;
2318:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
ARM GAS  /tmp/ccGwaFaD.s 			page 46


2319:src/keys.c    ****      // No multi character search in alpha catalogues
2320:src/keys.c    ****      CmdLineLength = 0;
2321:src/keys.c    ****    }
2322:src/keys.c    ****    if (CmdLineLength < 10)
2323:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2324:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2325:src/keys.c    **** 
2326:src/keys.c    ****  search:
2327:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2328:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2329:src/keys.c    ****      char buf[16];
2330:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2331:src/keys.c    ****      int i;
2332:src/keys.c    **** 
2333:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2334:src/keys.c    ****        cmd++;
2335:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2336:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2337:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2338:src/keys.c    ****        if (c > cl)
2339:src/keys.c    **** 	 goto set_pos;
2340:src/keys.c    ****        else if (c < cl)
2341:src/keys.c    **** 	 break;
2342:src/keys.c    ****      }
2343:src/keys.c    ****      if (Cmdline[i] == '\0')
2344:src/keys.c    ****        goto set_pos;
2345:src/keys.c    ****    }
2346:src/keys.c    ****  set_max:
2347:src/keys.c    ****    pos = ctmax - 1;
2348:src/keys.c    ****  set_pos:
2349:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2350:src/keys.c    ****      --pos;
2351:src/keys.c    ****    State.catpos = pos;
2352:src/keys.c    ****    return STATE_UNFINISHED;
2353:src/keys.c    ****  }
2354:src/keys.c    **** 
2355:src/keys.c    **** #ifndef REALBUILD
2356:src/keys.c    **** int find_pos(const char* text) {
2357:src/keys.c    **** 	int pos;
2358:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2359:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2360:src/keys.c    **** 		char buf[16];
2361:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2362:src/keys.c    **** 		int i;
2363:src/keys.c    **** 
2364:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2365:src/keys.c    **** 			cmd++;
2366:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2367:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2368:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2369:src/keys.c    **** 			if (c > cl)
2370:src/keys.c    **** 				return pos;
2371:src/keys.c    **** 			else if (c < cl)
2372:src/keys.c    **** 				break;
2373:src/keys.c    **** 		}
2374:src/keys.c    **** 		if (text[i] == '\0')
2375:src/keys.c    **** 			return pos;
ARM GAS  /tmp/ccGwaFaD.s 			page 47


2376:src/keys.c    **** 	}
2377:src/keys.c    **** 	return pos;
2378:src/keys.c    **** }
2379:src/keys.c    **** 
2380:src/keys.c    **** #endif
2381:src/keys.c    **** 
2382:src/keys.c    **** /* Multi (2) word instruction entry
2383:src/keys.c    ****  */
2384:src/keys.c    **** static void reset_multi(void) {
2385:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2386:src/keys.c    **** 	State2.multi = 0;
2387:src/keys.c    **** 	if (! State2.alphas )
2388:src/keys.c    **** 		State2.alphashift = 0;
2389:src/keys.c    **** }
2390:src/keys.c    **** 
2391:src/keys.c    **** static int process_multi(const keycode c) {
2392:src/keys.c    **** 	enum shifts shift = reset_shift();
2393:src/keys.c    **** 	unsigned int ch = 0;
2394:src/keys.c    **** 	unsigned int opcode;
2395:src/keys.c    **** 
2396:src/keys.c    **** 	if (State2.catalogue) {
2397:src/keys.c    **** 		// Alpha catalogue from within multi character command
2398:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2399:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2400:src/keys.c    **** 			return opcode;
2401:src/keys.c    **** 		ch = (unsigned char) opcode;
2402:src/keys.c    **** 		goto add_char;
2403:src/keys.c    **** 	}
2404:src/keys.c    **** 
2405:src/keys.c    **** 	switch (c) {
2406:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2407:src/keys.c    **** 		if (shift != SHIFT_N)
2408:src/keys.c    **** 				break;
2409:src/keys.c    **** 		reset_multi();
2410:src/keys.c    **** 		if (State2.numdigit == 0)
2411:src/keys.c    **** 			return STATE_UNFINISHED;
2412:src/keys.c    **** 		else if (State2.numdigit == 1)
2413:src/keys.c    **** 			State2.digval2 = 0;
2414:src/keys.c    **** 		goto fin;
2415:src/keys.c    **** 
2416:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2417:src/keys.c    **** 		if (shift != SHIFT_H) {
2418:src/keys.c    **** 			if (State2.numdigit == 0)
2419:src/keys.c    **** 				reset_multi();
2420:src/keys.c    **** 			else
2421:src/keys.c    **** 				State2.numdigit--;
2422:src/keys.c    **** 			return STATE_UNFINISHED;
2423:src/keys.c    **** 		}
2424:src/keys.c    **** 		break;
2425:src/keys.c    **** 
2426:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2427:src/keys.c    **** 		if (shift == SHIFT_F)
2428:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2429:src/keys.c    **** 		else
2430:src/keys.c    **** 			reset_multi();
2431:src/keys.c    **** 		return STATE_UNFINISHED;
2432:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 48


2433:src/keys.c    **** 	default:
2434:src/keys.c    **** 		break;
2435:src/keys.c    **** 		}
2436:src/keys.c    **** 
2437:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2438:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2439:src/keys.c    **** 	if (ch == 0)
2440:src/keys.c    **** 		return STATE_UNFINISHED;
2441:src/keys.c    **** add_char:
2442:src/keys.c    **** 	if (State2.numdigit == 0) {
2443:src/keys.c    **** 		State2.digval = ch;
2444:src/keys.c    **** 		State2.numdigit = 1;
2445:src/keys.c    **** 		return STATE_UNFINISHED;
2446:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2447:src/keys.c    **** 		State2.digval2 = ch;
2448:src/keys.c    **** 		State2.numdigit = 2;
2449:src/keys.c    **** 		return STATE_UNFINISHED;
2450:src/keys.c    **** 	}
2451:src/keys.c    **** 	reset_multi();
2452:src/keys.c    **** 
2453:src/keys.c    **** fin:
2454:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2455:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2456:src/keys.c    **** 	return opcode;
2457:src/keys.c    **** }
2458:src/keys.c    **** 
2459:src/keys.c    **** 
2460:src/keys.c    **** /* Handle YES/NO confirmations
2461:src/keys.c    ****  */
2462:src/keys.c    **** static int process_confirm(const keycode c) {
2463:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2464:src/keys.c    **** 	switch (c) {
2465:src/keys.c    **** #ifdef DM42
2466:src/keys.c    **** 	case K52:
2467:src/keys.c    **** #endif
2468:src/keys.c    **** 	case K63:			// Yes
2469:src/keys.c    **** 	  switch (State2.confirm) {
2470:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2471:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2472:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2473:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2474:src/keys.c    **** 	  }
2475:src/keys.c    **** 	case K24:
2476:src/keys.c    **** #ifdef DM42
2477:src/keys.c    **** 	case K22:
2478:src/keys.c    **** #else
2479:src/keys.c    **** 	case K32:
2480:src/keys.c    **** #endif
2481:src/keys.c    **** 	  // No
2482:src/keys.c    **** 	  State2.confirm = 0;
2483:src/keys.c    **** 	  State2.digval = 0;
2484:src/keys.c    **** 	  break;
2485:src/keys.c    **** 	default:			// No state change
2486:src/keys.c    **** 	  break;
2487:src/keys.c    **** 	}
2488:src/keys.c    **** 	return STATE_UNFINISHED;
2489:src/keys.c    **** }
ARM GAS  /tmp/ccGwaFaD.s 			page 49


2490:src/keys.c    **** 
2491:src/keys.c    **** 
2492:src/keys.c    **** /*
2493:src/keys.c    ****  *  STATUS
2494:src/keys.c    ****  */
2495:src/keys.c    **** static int process_status(const keycode c) {
2496:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2497:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2498:src/keys.c    **** 
2499:src/keys.c    **** 	if (c == K_UP) {
2500:src/keys.c    **** 		if (--n < -2)
2501:src/keys.c    **** 			n = max;
2502:src/keys.c    **** 	}
2503:src/keys.c    **** 	else if (c == K_DOWN) {
2504:src/keys.c    **** 		if (++n > max)
2505:src/keys.c    **** 			n = -2;
2506:src/keys.c    **** 	}
2507:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2508:src/keys.c    **** 		State2.status = 0;
2509:src/keys.c    **** 		return STATE_UNFINISHED;
2510:src/keys.c    **** 	} 
2511:src/keys.c    **** 	else {
2512:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2513:src/keys.c    **** 		if (nn <= 9)
2514:src/keys.c    **** 			n = nn;
2515:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2516:src/keys.c    **** 			n = n == max ? 10 : max;
2517:src/keys.c    **** 		else if (nn != NO_REG)
2518:src/keys.c    **** 			n = 10; 
2519:src/keys.c    **** 	}
2520:src/keys.c    **** 	State2.status = n + 3;
2521:src/keys.c    **** 
2522:src/keys.c    **** 	return STATE_UNFINISHED;
2523:src/keys.c    **** }
2524:src/keys.c    **** 
2525:src/keys.c    **** 
2526:src/keys.c    **** /*
2527:src/keys.c    ****  *  CAT helper
2528:src/keys.c    ****  */
2529:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2529 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2530:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2530 2 view .LVU58
2529:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2529 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2529:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2529 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2530 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
ARM GAS  /tmp/ccGwaFaD.s 			page 50


 232              	.LVL20:
2531:src/keys.c    **** 
2532:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2532 2 is_stmt 1 view .LVU62
 234              		.loc 1 2532 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2532 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2532 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2532 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2533:src/keys.c    **** }
 245              		.loc 1 2533 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2532:src/keys.c    **** }
 249              		.loc 1 2532 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2533 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2532:src/keys.c    **** }
 256              		.loc 1 2532 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2532:src/keys.c    **** }
 259              		.loc 1 2532 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2533 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2533 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2534:src/keys.c    **** 
2535:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2535 85 is_stmt 1 view -0
 282              		.cfi_startproc
ARM GAS  /tmp/ccGwaFaD.s 			page 51


 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2535 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2535 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2536:src/keys.c    **** 	do {
 294              		.loc 1 2536 2 is_stmt 1 view .LVU77
2537:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2537 3 view .LVU78
2538:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2538 4 view .LVU79
2535:src/keys.c    **** 	do {
 297              		.loc 1 2535 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2538 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2539:src/keys.c    **** 				pc = do_inc(pc, 0);
2540:src/keys.c    **** 				if (PcWrapped)
2541:src/keys.c    **** 					break;
2542:src/keys.c    **** 			}
2543:src/keys.c    **** 			else
2544:src/keys.c    **** 				inc = 1;
2545:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2545 4 is_stmt 1 view .LVU82
 304              		.loc 1 2545 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2545 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2545 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2545 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2539:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2539 5 is_stmt 1 view .LVU87
2539:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2539 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2540:src/keys.c    **** 					break;
 323              		.loc 1 2540 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2539:src/keys.c    **** 				pc = do_inc(pc, 0);
ARM GAS  /tmp/ccGwaFaD.s 			page 52


 325              		.loc 1 2539 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2540:src/keys.c    **** 					break;
 328              		.loc 1 2540 5 is_stmt 1 view .LVU91
2540:src/keys.c    **** 					break;
 329              		.loc 1 2540 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2546:src/keys.c    **** 				return pc;
2547:src/keys.c    **** 			}
2548:src/keys.c    **** 		}
2549:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2549 3 is_stmt 1 view .LVU93
 333              		.loc 1 2549 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2549 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2550:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2550 10 is_stmt 1 view .LVU96
 342              		.loc 1 2550 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2550 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2551:src/keys.c    **** 	return pc;
2552:src/keys.c    **** }
 351              		.loc 1 2552 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2552 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 519:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
ARM GAS  /tmp/ccGwaFaD.s 			page 53


 374              		.loc 1 519 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 520 2 view .LVU102
 519:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 519 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 520 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 520 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 520 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 520 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 522:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 522 3 is_stmt 1 view .LVU108
 522:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 522 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 523:src/keys.c    **** 	}
 398              		.loc 1 523 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 522:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 522 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 523:src/keys.c    **** 	}
 405              		.loc 1 523 3 is_stmt 1 view .LVU112
 406              	.L41:
 525:src/keys.c    **** 
 407              		.loc 1 525 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 527:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 527 2 view .LVU114
 528:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 528 2 view .LVU115
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 529 2 view .LVU116
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 554 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
ARM GAS  /tmp/ccGwaFaD.s 			page 54


 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 529 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 554 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 529 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 530:src/keys.c    **** 
 423              		.loc 1 530 2 is_stmt 1 view .LVU121
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 532 2 view .LVU122
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 553 3 view .LVU123
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 553 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 554 3 is_stmt 1 view .LVU125
 555:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 555 3 view .LVU126
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 560 2 view .LVU127
 431              	.LBB244:
 432              	.LBI244:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 104 13 view .LVU128
 434              	.LBE244:
 105:src/keys.c    **** }
 435              		.loc 1 105 2 view .LVU129
 436              	.LVL37:
 437              	.LBB261:
 438              	.LBB245:
 439              	.LBI245:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 94 20 view .LVU130
 441              	.LBB246:
  95:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 95 2 view .LVU131
 443              	.LBB247:
 444              	.LBI247:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 86 13 view .LVU132
 446              	.LBB248:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 87 2 view .LVU133
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 87 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  88:src/keys.c    **** }
 451              		.loc 1 88 2 is_stmt 1 view .LVU135
 452              	.LBE248:
 453              	.LBE247:
ARM GAS  /tmp/ccGwaFaD.s 			page 55


  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 96 2 view .LVU136
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 96 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 458              		.loc 1 98 2 is_stmt 1 view .LVU138
 459              	.LVL39:
  98:src/keys.c    **** }
 460              		.loc 1 98 2 is_stmt 0 view .LVU139
 461              	.LBE246:
 462              	.LBE245:
 463              	.LBE261:
 564:src/keys.c    **** 
 464              		.loc 1 564 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 525:src/keys.c    **** 
 468              		.loc 1 525 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 527:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 527 2 view .LVU142
 528:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 528 2 view .LVU143
 527:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 527 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 529 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 527:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 527 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 532 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 527:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 527 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 529 2 is_stmt 1 view .LVU149
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 529 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 530:src/keys.c    **** 
 486              		.loc 1 530 2 is_stmt 1 view .LVU151
 530:src/keys.c    **** 
 487              		.loc 1 530 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 532 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
ARM GAS  /tmp/ccGwaFaD.s 			page 56


 548:src/keys.c    **** 		break;
 493              		.loc 1 548 3 view .LVU154
 548:src/keys.c    **** 		break;
 494              		.loc 1 548 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 549:src/keys.c    **** 
 497              		.loc 1 549 3 is_stmt 1 view .LVU156
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 560 2 view .LVU157
 499              	.LBB262:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 104 13 view .LVU158
 501              	.LBE262:
 105:src/keys.c    **** }
 502              		.loc 1 105 2 view .LVU159
 503              	.LVL42:
 504              	.LBB263:
 505              	.LBB258:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 94 20 view .LVU160
 507              	.LBB255:
  95:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 95 2 view .LVU161
 509              	.LBB252:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 86 13 view .LVU162
 511              	.LBB249:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 87 2 view .LVU163
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 87 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  88:src/keys.c    **** }
 516              		.loc 1 88 2 is_stmt 1 view .LVU165
 517              	.LBE249:
 518              	.LBE252:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 96 2 view .LVU166
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 96 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 523              		.loc 1 98 2 is_stmt 1 view .LVU168
 524              	.LVL44:
  98:src/keys.c    **** }
 525              		.loc 1 98 2 is_stmt 0 view .LVU169
 526              	.LBE255:
 527              	.LBE258:
 528              	.LBE263:
 564:src/keys.c    **** 
 529              		.loc 1 564 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
ARM GAS  /tmp/ccGwaFaD.s 			page 57


 532              		.loc 1 532 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 535 3 is_stmt 1 view .LVU172
 536:src/keys.c    **** 		break;
 536              		.loc 1 536 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 535 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 536:src/keys.c    **** 		break;
 540              		.loc 1 536 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 535 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 536:src/keys.c    **** 		break;
 545              		.loc 1 536 3 is_stmt 1 view .LVU177
 536:src/keys.c    **** 		break;
 546              		.loc 1 536 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 536:src/keys.c    **** 		break;
 551              		.loc 1 536 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 537:src/keys.c    **** 	
 553              		.loc 1 537 3 is_stmt 1 view .LVU180
 554              	.L45:
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 560 2 view .LVU181
 556              	.LBB264:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 104 13 view .LVU182
 558              	.LBE264:
 105:src/keys.c    **** }
 559              		.loc 1 105 2 view .LVU183
 560              	.LVL46:
 561              	.LBB265:
 562              	.LBB259:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 94 20 view .LVU184
 564              	.LBB256:
  95:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 95 2 view .LVU185
 566              	.LBB253:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 86 13 view .LVU186
 568              	.LBB250:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 87 2 view .LVU187
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 87 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccGwaFaD.s 			page 58


 572              	.LVL47:
  88:src/keys.c    **** }
 573              		.loc 1 88 2 is_stmt 1 view .LVU189
 574              	.LBE250:
 575              	.LBE253:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 96 2 view .LVU190
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 96 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 580              		.loc 1 98 2 is_stmt 1 view .LVU192
 581              	.LVL48:
  98:src/keys.c    **** }
 582              		.loc 1 98 2 is_stmt 0 view .LVU193
 583              	.LBE256:
 584              	.LBE259:
 585              	.LBE265:
 564:src/keys.c    **** 
 586              		.loc 1 564 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 541:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 541 3 is_stmt 1 view .LVU195
 541:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 541 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 543:src/keys.c    **** 		break;
 592              		.loc 1 543 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 541:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 541 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 542:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 542 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 541:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 541 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 542:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 542 3 is_stmt 1 view .LVU201
 542:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 542 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 543:src/keys.c    **** 		break;
 603              		.loc 1 543 3 is_stmt 1 view .LVU203
 544:src/keys.c    **** 
 604              		.loc 1 544 3 view .LVU204
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 560 2 view .LVU205
 606              	.LBB266:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 104 13 view .LVU206
 608              	.LBE266:
 105:src/keys.c    **** }
 609              		.loc 1 105 2 view .LVU207
ARM GAS  /tmp/ccGwaFaD.s 			page 59


 610              	.LVL49:
 611              	.LBB267:
 612              	.LBB260:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 94 20 view .LVU208
 614              	.LBB257:
  95:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 95 2 view .LVU209
 616              	.LBB254:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 86 13 view .LVU210
 618              	.LBB251:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 87 2 view .LVU211
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 87 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  88:src/keys.c    **** }
 623              		.loc 1 88 2 is_stmt 1 view .LVU213
 624              	.LBE251:
 625              	.LBE254:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 96 2 view .LVU214
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 96 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 630              		.loc 1 98 2 is_stmt 1 view .LVU216
 631              	.LVL51:
  98:src/keys.c    **** }
 632              		.loc 1 98 2 is_stmt 0 view .LVU217
 633              	.LBE257:
 634              	.LBE260:
 635              	.LBE267:
 564:src/keys.c    **** 
 636              		.loc 1 564 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 553 3 is_stmt 1 view .LVU219
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 554 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 553 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 554 3 is_stmt 1 view .LVU222
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 554 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 554 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
ARM GAS  /tmp/ccGwaFaD.s 			page 60


 650 00b0 6375     		strb	r3, [r4, #21]
 555:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 555 3 is_stmt 1 view .LVU225
 652              	.L49:
 555:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 555 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 555:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 555 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 555:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 555 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 557:src/keys.c    **** 		}
 662              		.loc 1 557 4 is_stmt 1 view .LVU229
 557:src/keys.c    **** 		}
 663              		.loc 1 557 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 554 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 554 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 554 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 554 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 555:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 555 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
ARM GAS  /tmp/ccGwaFaD.s 			page 61


 698              	.LVL52:
 699              	.LFB51:
2553:src/keys.c    **** 
2554:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2554 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2554 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2554 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2555:src/keys.c    **** 	do {
 717              		.loc 1 2555 2 is_stmt 1 view .LVU239
2556:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2556 3 view .LVU240
2557:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2557 4 view .LVU241
 720              		.loc 1 2557 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2558:src/keys.c    **** 			if (PcWrapped)
2559:src/keys.c    **** 				break;
2560:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2560 4 is_stmt 1 view .LVU243
2561:src/keys.c    **** 				return pc;
2562:src/keys.c    **** 			}
2563:src/keys.c    **** 		}
2564:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2564 3 view .LVU244
 727              		.loc 1 2564 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2558:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2558 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2564 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2565:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2565 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2557:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2557 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2558:src/keys.c    **** 				break;
ARM GAS  /tmp/ccGwaFaD.s 			page 62


 739              		.loc 1 2558 4 is_stmt 1 view .LVU250
2564:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2564 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2565 3 is_stmt 1 view .LVU252
2558:src/keys.c    **** 				break;
 744              		.loc 1 2558 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2560:src/keys.c    **** 				return pc;
 746              		.loc 1 2560 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2560:src/keys.c    **** 				return pc;
 750              		.loc 1 2560 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2566:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2567:src/keys.c    **** 	return pc;
2568:src/keys.c    **** }
 753              		.loc 1 2568 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2565:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2565 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2566:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2566 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2565:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2565 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2566:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2566 10 is_stmt 1 view .LVU260
2566:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2566 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2566:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2566 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2568 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2568 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
ARM GAS  /tmp/ccGwaFaD.s 			page 63


 783              		.cfi_endproc
 784              	.LFE51:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB59:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 624 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB268:
 626:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 626 3 view .LVU266
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 627 3 view .LVU267
 626:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 626 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 627 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 627 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 635:src/keys.c    **** #endif
 812              		.loc 1 635 7 is_stmt 1 view .LVU271
 635:src/keys.c    **** #endif
 813              		.loc 1 635 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 635:src/keys.c    **** #endif
 815              		.loc 1 635 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 645:src/keys.c    **** 		}
 818              		.loc 1 645 4 is_stmt 1 view .LVU274
 645:src/keys.c    **** 		}
 819              		.loc 1 645 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE268:
 649:src/keys.c    **** 
 825              		.loc 1 649 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB269:
 628:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccGwaFaD.s 			page 64


 829              		.loc 1 628 4 is_stmt 1 view .LVU277
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 628 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 628 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 628 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 629:src/keys.c    **** 		}
 839              		.loc 1 629 4 is_stmt 1 view .LVU281
 629:src/keys.c    **** 		}
 840              		.loc 1 629 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 629:src/keys.c    **** 		}
 843              		.loc 1 629 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE269:
 851              		.cfi_endproc
 852              	.LFE59:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB61:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 506 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 509:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 509 2 view .LVU285
 509:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 509 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 514:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 514 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 509:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 509 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
ARM GAS  /tmp/ccGwaFaD.s 			page 65


 510:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 510 2 is_stmt 1 view .LVU289
 511:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 511 2 view .LVU290
 514:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 514 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 511:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 511 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 514:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 514 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 511:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 511 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 512:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 512 2 is_stmt 1 view .LVU295
 512:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 512 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 513:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 513 2 is_stmt 1 view .LVU297
 514:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 514 2 view .LVU298
 515:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 515 2 view .LVU299
 516:src/keys.c    **** }
 898              		.loc 1 516 2 view .LVU300
 517:src/keys.c    **** 
 899              		.loc 1 517 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE61:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB29:
1526:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1526 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccGwaFaD.s 			page 66


1527:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1527 2 view .LVU303
 923              	.LVL67:
 924              	.LBB270:
 925              	.LBI270:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 506 13 view .LVU304
 927              	.LBB271:
 507:src/keys.c    **** 		return;
 928              		.loc 1 507 2 view .LVU305
 929              	.LBE271:
 930              	.LBE270:
1526:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1526 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB273:
 937              	.LBB272:
 507:src/keys.c    **** 		return;
 938              		.loc 1 507 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 507:src/keys.c    **** 		return;
 941              		.loc 1 507 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 507:src/keys.c    **** 		return;
 946              		.loc 1 507 5 view .LVU309
 947              	.LBE272:
 948              	.LBE273:
1528:src/keys.c    **** }
 949              		.loc 1 1528 2 is_stmt 1 view .LVU310
1528:src/keys.c    **** }
 950              		.loc 1 1528 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1529:src/keys.c    **** 
 955              		.loc 1 1529 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE29:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
ARM GAS  /tmp/ccGwaFaD.s 			page 67


 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB30:
1531:src/keys.c    **** 	const unsigned int base = CmdBase;
 975              		.loc 1 1531 39 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1532:src/keys.c    **** 	int r = RARG(base, val 
 979              		.loc 1 1532 2 view .LVU314
1532:src/keys.c    **** 	int r = RARG(base, val 
 980              		.loc 1 1532 28 is_stmt 0 view .LVU315
 981 0000 1C4B     		ldr	r3, .L106
1531:src/keys.c    **** 	const unsigned int base = CmdBase;
 982              		.loc 1 1531 39 view .LVU316
 983 0002 70B5     		push	{r4, r5, r6, lr}
 984              		.cfi_def_cfa_offset 16
 985              		.cfi_offset 4, -16
 986              		.cfi_offset 5, -12
 987              		.cfi_offset 6, -8
 988              		.cfi_offset 14, -4
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 989              		.loc 1 1533 10 view .LVU317
 990 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 991 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1532:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1532 21 view .LVU318
 993 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 994              	.LVL71:
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 995              		.loc 1 1533 2 is_stmt 1 view .LVU319
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 996              		.loc 1 1533 10 is_stmt 0 view .LVU320
 997 000a EE07     		lsls	r6, r5, #31
1536:src/keys.c    **** 
 998              		.loc 1 1536 30 view .LVU321
 999 000c 1A4E     		ldr	r6, .L106+4
 1000 000e 3668     		ldr	r6, [r6]
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1533 10 view .LVU322
 1002 0010 01F08003 		and	r3, r1, #128
 1003 0014 0344     		add	r3, r3, r0
1536:src/keys.c    **** 
 1004              		.loc 1 1536 30 view .LVU323
 1005 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1006              		.loc 1 1533 10 view .LVU324
 1007 001a 02F12004 		add	r4, r2, #32
 1008 001e 48BF     		it	mi
 1009 0020 7033     		addmi	r3, r3, #112
 1010 0022 2402     		lsls	r4, r4, #8
 1011 0024 1C43     		orrs	r4, r4, r3
 1012              	.LVL72:
1536:src/keys.c    **** 
 1013              		.loc 1 1536 2 is_stmt 1 view .LVU325
1536:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 68


 1014              		.loc 1 1536 77 is_stmt 0 view .LVU326
 1015 0026 3307     		lsls	r3, r6, #28
 1016 0028 1DD5     		bpl	.L92
1536:src/keys.c    **** 
 1017              		.loc 1 1536 77 discriminator 2 view .LVU327
 1018 002a 15F0400F 		tst	r5, #64
 1019 002e 0CBF     		ite	eq
 1020 0030 0425     		moveq	r5, #4
 1021 0032 0825     		movne	r5, #8
 1022              	.L87:
 1023              	.LVL73:
1538:src/keys.c    **** 		/*
 1024              		.loc 1 1538 2 is_stmt 1 discriminator 6 view .LVU328
1538:src/keys.c    **** 		/*
 1025              		.loc 1 1538 5 is_stmt 0 discriminator 6 view .LVU329
 1026 0034 0E06     		lsls	r6, r1, #24
 1027 0036 12D4     		bmi	.L88
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1028              		.loc 1 1553 3 is_stmt 1 view .LVU330
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1029              		.loc 1 1553 20 is_stmt 0 view .LVU331
 1030 0038 104B     		ldr	r3, .L106+8
 1031 003a 03EB0213 		add	r3, r3, r2, lsl #4
 1032 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1033              		.loc 1 1553 6 view .LVU332
 1034 0040 D906     		lsls	r1, r3, #27
 1035 0042 09D5     		bpl	.L89
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1036              		.loc 1 1553 27 discriminator 1 view .LVU333
 1037 0044 6228     		cmp	r0, #98
 1038 0046 07D9     		bls	.L89
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1039              		.loc 1 1553 52 discriminator 2 view .LVU334
 1040 0048 C307     		lsls	r3, r0, #31
 1041 004a 02D4     		bmi	.L96
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1042              		.loc 1 1557 3 is_stmt 1 view .LVU335
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1043              		.loc 1 1557 28 is_stmt 0 view .LVU336
 1044 004c 223A     		subs	r2, r2, #34
 1045              	.LVL74:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1046              		.loc 1 1557 6 view .LVU337
 1047 004e 012A     		cmp	r2, #1
 1048 0050 05D8     		bhi	.L88
 1049              	.LVL75:
 1050              	.L96:
1555:src/keys.c    **** #endif
 1051              		.loc 1 1555 11 view .LVU338
 1052 0052 3324     		movs	r4, #51
 1053              	.LVL76:
1564:src/keys.c    **** 
 1054              		.loc 1 1564 1 view .LVU339
 1055 0054 2046     		mov	r0, r4
 1056              	.LVL77:
1564:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 69


 1057              		.loc 1 1564 1 view .LVU340
 1058 0056 70BD     		pop	{r4, r5, r6, pc}
 1059              	.LVL78:
 1060              	.L89:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1061              		.loc 1 1557 3 is_stmt 1 view .LVU341
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1062              		.loc 1 1557 28 is_stmt 0 view .LVU342
 1063 0058 223A     		subs	r2, r2, #34
 1064              	.LVL79:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1065              		.loc 1 1557 6 view .LVU343
 1066 005a 012A     		cmp	r2, #1
 1067 005c 05D9     		bls	.L105
 1068              	.LVL80:
 1069              	.L88:
1562:src/keys.c    **** 	return r;
 1070              		.loc 1 1562 2 is_stmt 1 view .LVU344
 1071 005e FFF7FEFF 		bl	reset_arg
 1072              	.LVL81:
1563:src/keys.c    **** }
 1073              		.loc 1 1563 2 view .LVU345
1564:src/keys.c    **** 
 1074              		.loc 1 1564 1 is_stmt 0 view .LVU346
 1075 0062 2046     		mov	r0, r4
 1076 0064 70BD     		pop	{r4, r5, r6, pc}
 1077              	.LVL82:
 1078              	.L92:
1536:src/keys.c    **** 
 1079              		.loc 1 1536 77 view .LVU347
 1080 0066 0425     		movs	r5, #4
 1081 0068 E4E7     		b	.L87
 1082              	.LVL83:
 1083              	.L105:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1084              		.loc 1 1557 73 discriminator 1 view .LVU348
 1085 006a C5F16405 		rsb	r5, r5, #100
 1086              	.LVL84:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1087              		.loc 1 1557 52 discriminator 1 view .LVU349
 1088 006e 8542     		cmp	r5, r0
 1089 0070 F5D2     		bcs	.L88
 1090 0072 EEE7     		b	.L96
 1091              	.L107:
 1092              		.align	2
 1093              	.L106:
 1094 0074 00000000 		.word	StateWhileOn
 1095 0078 00000000 		.word	main_ram
 1096 007c 00000000 		.word	argcmds
 1097              		.cfi_endproc
 1098              	.LFE30:
 1100              		.section	.text.process_arg_shuffle,"ax",%progbits
 1101              		.align	1
 1102              		.p2align 2,,3
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
ARM GAS  /tmp/ccGwaFaD.s 			page 70


 1106              		.fpu fpv4-sp-d16
 1108              	process_arg_shuffle:
 1109              	.LVL85:
 1110              	.LFB36:
1678:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1111              		.loc 1 1678 39 is_stmt 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1116              		.loc 1 1679 2 view .LVU351
1678:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1117              		.loc 1 1678 39 is_stmt 0 view .LVU352
 1118 0000 10B4     		push	{r4}
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 4, -4
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1121              		.loc 1 1679 31 view .LVU353
 1122 0002 0A4A     		ldr	r2, .L111
 1123 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1124              		.loc 1 1679 16 view .LVU354
 1125 0006 1189     		ldrh	r1, [r2, #8]
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1126              		.loc 1 1679 43 view .LVU355
 1127 0008 5C00     		lsls	r4, r3, #1
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1679 21 view .LVU356
 1129 000a A040     		lsls	r0, r0, r4
 1130              	.LVL86:
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1131              		.loc 1 1679 40 view .LVU357
 1132 000c 0133     		adds	r3, r3, #1
 1133 000e DBB2     		uxtb	r3, r3
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1134              		.loc 1 1679 16 view .LVU358
 1135 0010 0844     		add	r0, r0, r1
 1136 0012 80B2     		uxth	r0, r0
1680:src/keys.c    **** 		return STATE_UNFINISHED;
 1137              		.loc 1 1680 5 view .LVU359
 1138 0014 032B     		cmp	r3, #3
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1139              		.loc 1 1679 40 view .LVU360
 1140 0016 D372     		strb	r3, [r2, #11]
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1141              		.loc 1 1679 16 view .LVU361
 1142 0018 1081     		strh	r0, [r2, #8]	@ movhi
1680:src/keys.c    **** 		return STATE_UNFINISHED;
 1143              		.loc 1 1680 2 is_stmt 1 view .LVU362
1680:src/keys.c    **** 		return STATE_UNFINISHED;
 1144              		.loc 1 1680 5 is_stmt 0 view .LVU363
 1145 001a 03D9     		bls	.L109
1682:src/keys.c    **** }
 1146              		.loc 1 1682 2 is_stmt 1 view .LVU364
1683:src/keys.c    **** 
 1147              		.loc 1 1683 1 is_stmt 0 view .LVU365
ARM GAS  /tmp/ccGwaFaD.s 			page 71


 1148 001c 5DF8044B 		ldr	r4, [sp], #4
 1149              		.cfi_remember_state
 1150              		.cfi_restore 4
 1151              		.cfi_def_cfa_offset 0
1682:src/keys.c    **** }
 1152              		.loc 1 1682 9 view .LVU366
 1153 0020 FFF7FEBF 		b	arg_eval
 1154              	.LVL87:
 1155              	.L109:
 1156              		.cfi_restore_state
1683:src/keys.c    **** 
 1157              		.loc 1 1683 1 view .LVU367
 1158 0024 3320     		movs	r0, #51
 1159 0026 5DF8044B 		ldr	r4, [sp], #4
 1160              		.cfi_restore 4
 1161              		.cfi_def_cfa_offset 0
 1162 002a 7047     		bx	lr
 1163              	.L112:
 1164              		.align	2
 1165              	.L111:
 1166 002c 00000000 		.word	StateWhileOn
 1167              		.cfi_endproc
 1168              	.LFE36:
 1170              		.section	.text.arg_digit,"ax",%progbits
 1171              		.align	1
 1172              		.p2align 2,,3
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	arg_digit:
 1179              	.LVL88:
 1180              	.LFB31:
1566:src/keys.c    **** 	int lim;
 1181              		.loc 1 1566 29 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
1567:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1185              		.loc 1 1567 2 view .LVU369
1572:src/keys.c    **** #endif
 1186              		.loc 1 1572 2 view .LVU370
1566:src/keys.c    **** 	int lim;
 1187              		.loc 1 1566 29 is_stmt 0 view .LVU371
 1188 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1189              		.cfi_def_cfa_offset 24
 1190              		.cfi_offset 3, -24
 1191              		.cfi_offset 4, -20
 1192              		.cfi_offset 5, -16
 1193              		.cfi_offset 6, -12
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
1572:src/keys.c    **** #endif
 1196              		.loc 1 1572 28 view .LVU372
 1197 0002 314C     		ldr	r4, .L138
1575:src/keys.c    **** 	
 1198              		.loc 1 1575 34 view .LVU373
ARM GAS  /tmp/ccGwaFaD.s 			page 72


 1199 0004 314A     		ldr	r2, .L138+4
1572:src/keys.c    **** #endif
 1200              		.loc 1 1572 28 view .LVU374
 1201 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1202              	.LVL89:
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1203              		.loc 1 1574 2 is_stmt 1 view .LVU375
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1204              		.loc 1 1574 33 is_stmt 0 view .LVU376
 1205 0008 2389     		ldrh	r3, [r4, #8]
1575:src/keys.c    **** 	
 1206              		.loc 1 1575 34 view .LVU377
 1207 000a 02EB0712 		add	r2, r2, r7, lsl #4
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1208              		.loc 1 1574 41 view .LVU378
 1209 000e 03EB8303 		add	r3, r3, r3, lsl #2
1575:src/keys.c    **** 	
 1210              		.loc 1 1575 34 view .LVU379
 1211 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
1575:src/keys.c    **** 	
 1212              		.loc 1 1575 39 view .LVU380
 1213 0014 8E07     		lsls	r6, r1, #30
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1214              		.loc 1 1574 46 view .LVU381
 1215 0016 00EB4305 		add	r5, r0, r3, lsl #1
 1216              	.LVL90:
1575:src/keys.c    **** 	
 1217              		.loc 1 1575 2 is_stmt 1 view .LVU382
1575:src/keys.c    **** 	
 1218              		.loc 1 1575 39 is_stmt 0 view .LVU383
 1219 001a C1F34000 		ubfx	r0, r1, #1, #1
 1220              	.LVL91:
1575:src/keys.c    **** 	
 1221              		.loc 1 1575 39 view .LVU384
 1222 001e 32D5     		bpl	.L114
 1223              	.LVL92:
1577:src/keys.c    **** 		// Handle local registers and flags
 1224              		.loc 1 1577 2 is_stmt 1 view .LVU385
1577:src/keys.c    **** 		// Handle local registers and flags
 1225              		.loc 1 1577 6 is_stmt 0 view .LVU386
 1226 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1577:src/keys.c    **** 		// Handle local registers and flags
 1227              		.loc 1 1577 5 view .LVU387
 1228 0022 D907     		lsls	r1, r3, #31
 1229 0024 28D5     		bpl	.L116
 1230              	.L127:
1575:src/keys.c    **** 	
 1231              		.loc 1 1575 39 view .LVU388
 1232 0026 0120     		movs	r0, #1
 1233              	.LVL93:
 1234              	.L115:
1579:src/keys.c    **** 		if (State2.runmode) {
 1235              		.loc 1 1579 3 is_stmt 1 view .LVU389
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1236              		.loc 1 1580 3 view .LVU390
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1237              		.loc 1 1580 6 is_stmt 0 view .LVU391
ARM GAS  /tmp/ccGwaFaD.s 			page 73


 1238 0028 5A06     		lsls	r2, r3, #25
 1239 002a 3BD5     		bpl	.L129
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1240              		.loc 1 1581 4 is_stmt 1 view .LVU392
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1241              		.loc 1 1581 8 is_stmt 0 view .LVU393
 1242 002c 284B     		ldr	r3, .L138+8
 1243 002e 1B68     		ldr	r3, [r3]
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1244              		.loc 1 1581 7 view .LVU394
 1245 0030 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1246 0034 2BB3     		cbz	r3, .L122
1583:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1247              		.loc 1 1583 4 is_stmt 1 view .LVU395
1583:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1248              		.loc 1 1583 7 is_stmt 0 view .LVU396
 1249 0036 A8B3     		cbz	r0, .L129
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1250              		.loc 1 1584 5 is_stmt 1 view .LVU397
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1251              		.loc 1 1584 11 is_stmt 0 view .LVU398
 1252 0038 3846     		mov	r0, r7
 1253 003a FFF7FEFF 		bl	local_regs_rarg
 1254              	.LVL94:
1585:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1255              		.loc 1 1585 5 is_stmt 1 view .LVU399
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1256              		.loc 1 1584 9 is_stmt 0 view .LVU400
 1257 003e 0138     		subs	r0, r0, #1
 1258              	.LVL95:
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1259              		.loc 1 1584 9 view .LVU401
 1260 0040 0F28     		cmp	r0, #15
 1261 0042 A8BF     		it	ge
 1262 0044 0F20     		movge	r0, #15
 1263              	.LVL96:
 1264              	.L119:
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1265              		.loc 1 1597 2 is_stmt 1 view .LVU402
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1266              		.loc 1 1597 5 is_stmt 0 view .LVU403
 1267 0046 8542     		cmp	r5, r0
 1268 0048 1BDC     		bgt	.L122
 1269              	.L136:
1600:src/keys.c    **** 	++State2.numdigit;
 1270              		.loc 1 1600 2 is_stmt 1 view .LVU404
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1271              		.loc 1 1601 2 is_stmt 0 view .LVU405
 1272 004a E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1600:src/keys.c    **** 	++State2.numdigit;
 1273              		.loc 1 1600 16 view .LVU406
 1274 004c 2581     		strh	r5, [r4, #8]	@ movhi
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1275              		.loc 1 1601 2 is_stmt 1 view .LVU407
 1276 004e 0136     		adds	r6, r6, #1
1602:src/keys.c    **** 		int result = arg_eval(val);
 1277              		.loc 1 1602 16 is_stmt 0 view .LVU408
ARM GAS  /tmp/ccGwaFaD.s 			page 74


 1278 0050 05EB8503 		add	r3, r5, r5, lsl #2
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1279              		.loc 1 1601 2 view .LVU409
 1280 0054 F6B2     		uxtb	r6, r6
1602:src/keys.c    **** 		int result = arg_eval(val);
 1281              		.loc 1 1602 5 view .LVU410
 1282 0056 B0EB430F 		cmp	r0, r3, lsl #1
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1601 2 view .LVU411
 1284 005a E672     		strb	r6, [r4, #11]
1602:src/keys.c    **** 		int result = arg_eval(val);
 1285              		.loc 1 1602 2 is_stmt 1 view .LVU412
1602:src/keys.c    **** 		int result = arg_eval(val);
 1286              		.loc 1 1602 5 is_stmt 0 view .LVU413
 1287 005c 04DB     		blt	.L125
1602:src/keys.c    **** 		int result = arg_eval(val);
 1288              		.loc 1 1602 49 discriminator 1 view .LVU414
 1289 005e 3846     		mov	r0, r7
 1290              	.LVL97:
1602:src/keys.c    **** 		int result = arg_eval(val);
 1291              		.loc 1 1602 49 discriminator 1 view .LVU415
 1292 0060 FFF7FEFF 		bl	num_arg_digits
 1293              	.LVL98:
1602:src/keys.c    **** 		int result = arg_eval(val);
 1294              		.loc 1 1602 27 discriminator 1 view .LVU416
 1295 0064 8642     		cmp	r6, r0
 1296 0066 0CDB     		blt	.L122
 1297              	.L125:
 1298              	.LBB274:
1603:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1299              		.loc 1 1603 3 is_stmt 1 view .LVU417
1603:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1300              		.loc 1 1603 16 is_stmt 0 view .LVU418
 1301 0068 2846     		mov	r0, r5
 1302 006a FFF7FEFF 		bl	arg_eval
 1303              	.LVL99:
1604:src/keys.c    **** 			--State2.numdigit;
 1304              		.loc 1 1604 3 is_stmt 1 view .LVU419
1604:src/keys.c    **** 			--State2.numdigit;
 1305              		.loc 1 1604 6 is_stmt 0 view .LVU420
 1306 006e 3328     		cmp	r0, #51
 1307 0070 1AD0     		beq	.L134
 1308              	.LBE274:
1611:src/keys.c    **** 
 1309              		.loc 1 1611 1 view .LVU421
 1310 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1311              	.LVL100:
 1312              	.L137:
1577:src/keys.c    **** 		// Handle local registers and flags
 1313              		.loc 1 1577 2 is_stmt 1 view .LVU422
1577:src/keys.c    **** 		// Handle local registers and flags
 1314              		.loc 1 1577 5 is_stmt 0 view .LVU423
 1315 0074 DA07     		lsls	r2, r3, #31
 1316 0076 D6D4     		bmi	.L127
 1317              	.L116:
1591:src/keys.c    **** 	else {
 1318              		.loc 1 1591 3 is_stmt 1 view .LVU424
ARM GAS  /tmp/ccGwaFaD.s 			page 75


1591:src/keys.c    **** 	else {
 1319              		.loc 1 1591 65 is_stmt 0 view .LVU425
 1320 0078 5B06     		lsls	r3, r3, #25
 1321 007a 1FD4     		bmi	.L135
 1322 007c 6320     		movs	r0, #99
 1323              	.LVL101:
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1324              		.loc 1 1597 2 is_stmt 1 view .LVU426
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1325              		.loc 1 1597 5 is_stmt 0 view .LVU427
 1326 007e 8542     		cmp	r5, r0
 1327 0080 E3DD     		ble	.L136
 1328              	.LVL102:
 1329              	.L122:
1582:src/keys.c    **** 			if (is_reg) {
 1330              		.loc 1 1582 12 view .LVU428
 1331 0082 3320     		movs	r0, #51
1611:src/keys.c    **** 
 1332              		.loc 1 1611 1 view .LVU429
 1333 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1334              	.LVL103:
 1335              	.L114:
1575:src/keys.c    **** 	
 1336              		.loc 1 1575 39 discriminator 2 view .LVU430
 1337 0086 94F91530 		ldrsb	r3, [r4, #21]
 1338 008a 002B     		cmp	r3, #0
1577:src/keys.c    **** 		// Handle local registers and flags
 1339              		.loc 1 1577 6 discriminator 2 view .LVU431
 1340 008c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1575:src/keys.c    **** 	
 1341              		.loc 1 1575 39 discriminator 2 view .LVU432
 1342 008e F1DB     		blt	.L137
 1343              	.LVL104:
1577:src/keys.c    **** 		// Handle local registers and flags
 1344              		.loc 1 1577 2 is_stmt 1 view .LVU433
1577:src/keys.c    **** 		// Handle local registers and flags
 1345              		.loc 1 1577 5 is_stmt 0 view .LVU434
 1346 0090 DE07     		lsls	r6, r3, #31
 1347 0092 C9D4     		bmi	.L115
1590:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1348              		.loc 1 1590 7 is_stmt 1 view .LVU435
1593:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1349              		.loc 1 1593 3 view .LVU436
1593:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1350              		.loc 1 1593 7 is_stmt 0 view .LVU437
 1351 0094 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1352              	.LVL105:
1594:src/keys.c    **** 			lim = RARG_IND - 1;
 1353              		.loc 1 1594 3 is_stmt 1 view .LVU438
1594:src/keys.c    **** 			lim = RARG_IND - 1;
 1354              		.loc 1 1594 6 is_stmt 0 view .LVU439
 1355 0096 7F28     		cmp	r0, #127
 1356 0098 D5DD     		ble	.L119
1595:src/keys.c    **** 	}
 1357              		.loc 1 1595 8 discriminator 1 view .LVU440
 1358 009a 11F0010F 		tst	r1, #1
 1359 009e 18BF     		it	ne
ARM GAS  /tmp/ccGwaFaD.s 			page 76


 1360 00a0 7F20     		movne	r0, #127
 1361              	.LVL106:
1595:src/keys.c    **** 	}
 1362              		.loc 1 1595 8 discriminator 1 view .LVU441
 1363 00a2 D0E7     		b	.L119
 1364              	.LVL107:
 1365              	.L129:
1579:src/keys.c    **** 		if (State2.runmode) {
 1366              		.loc 1 1579 7 view .LVU442
 1367 00a4 0F20     		movs	r0, #15
 1368 00a6 CEE7     		b	.L119
 1369              	.LVL108:
 1370              	.L134:
 1371              	.LBB275:
1605:src/keys.c    **** 			State2.digval /= 10;
 1372              		.loc 1 1605 4 is_stmt 1 view .LVU443
1606:src/keys.c    **** 		}
 1373              		.loc 1 1606 18 is_stmt 0 view .LVU444
 1374 00a8 2389     		ldrh	r3, [r4, #8]
 1375 00aa 0A49     		ldr	r1, .L138+12
1605:src/keys.c    **** 			State2.digval /= 10;
 1376              		.loc 1 1605 4 view .LVU445
 1377 00ac E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
1606:src/keys.c    **** 		}
 1378              		.loc 1 1606 18 view .LVU446
 1379 00ae A1FB0313 		umull	r1, r3, r1, r3
 1380 00b2 DB08     		lsrs	r3, r3, #3
1605:src/keys.c    **** 			State2.digval /= 10;
 1381              		.loc 1 1605 4 view .LVU447
 1382 00b4 013A     		subs	r2, r2, #1
1606:src/keys.c    **** 		}
 1383              		.loc 1 1606 18 view .LVU448
 1384 00b6 2381     		strh	r3, [r4, #8]	@ movhi
1605:src/keys.c    **** 			State2.digval /= 10;
 1385              		.loc 1 1605 4 view .LVU449
 1386 00b8 E272     		strb	r2, [r4, #11]
1606:src/keys.c    **** 		}
 1387              		.loc 1 1606 4 is_stmt 1 view .LVU450
 1388              	.LBE275:
1611:src/keys.c    **** 
 1389              		.loc 1 1611 1 is_stmt 0 view .LVU451
 1390 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1391              	.LVL109:
 1392              	.L135:
1591:src/keys.c    **** 	else {
 1393              		.loc 1 1591 26 discriminator 1 view .LVU452
 1394 00bc 3846     		mov	r0, r7
 1395 00be FFF7FEFF 		bl	global_regs_rarg
 1396              	.LVL110:
1591:src/keys.c    **** 	else {
 1397              		.loc 1 1591 61 discriminator 1 view .LVU453
 1398 00c2 0138     		subs	r0, r0, #1
 1399 00c4 BFE7     		b	.L119
 1400              	.L139:
 1401 00c6 00BF     		.align	2
 1402              	.L138:
 1403 00c8 00000000 		.word	StateWhileOn
ARM GAS  /tmp/ccGwaFaD.s 			page 77


 1404 00cc 00000000 		.word	argcmds
 1405 00d0 00000000 		.word	main_ram
 1406 00d4 CDCCCCCC 		.word	-858993459
 1407              		.cfi_endproc
 1408              	.LFE31:
 1410              		.section	.text.intltr,"ax",%progbits
 1411              		.align	1
 1412              		.p2align 2,,3
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1416              		.fpu fpv4-sp-d16
 1418              	intltr:
 1419              	.LVL111:
 1420              	.LFB18:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1421              		.loc 1 671 26 is_stmt 1 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 672:src/keys.c    **** }
 1425              		.loc 1 672 2 view .LVU455
 672:src/keys.c    **** }
 1426              		.loc 1 672 10 is_stmt 0 view .LVU456
 1427 0000 0B4B     		ldr	r3, .L149
 1428 0002 1B68     		ldr	r3, [r3]
 1429 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 672:src/keys.c    **** }
 1430              		.loc 1 672 22 view .LVU457
 1431 0008 13F00103 		ands	r3, r3, #1
 1432 000c 05D0     		beq	.L142
 672:src/keys.c    **** }
 1433              		.loc 1 672 26 discriminator 1 view .LVU458
 1434 000e 094B     		ldr	r3, .L149+4
 1435 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 672:src/keys.c    **** }
 1436              		.loc 1 672 22 discriminator 1 view .LVU459
 1437 0012 5B06     		lsls	r3, r3, #25
 1438 0014 03D4     		bmi	.L148
 672:src/keys.c    **** }
 1439              		.loc 1 672 22 view .LVU460
 1440 0016 0120     		movs	r0, #1
 1441              	.LVL112:
 673:src/keys.c    **** 
 1442              		.loc 1 673 1 view .LVU461
 1443 0018 7047     		bx	lr
 1444              	.LVL113:
 1445              	.L142:
 672:src/keys.c    **** }
 1446              		.loc 1 672 22 view .LVU462
 1447 001a 1846     		mov	r0, r3
 1448              	.LVL114:
 672:src/keys.c    **** }
 1449              		.loc 1 672 22 view .LVU463
 1450 001c 7047     		bx	lr
 1451              	.LVL115:
 1452              	.L148:
ARM GAS  /tmp/ccGwaFaD.s 			page 78


 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1453              		.loc 1 671 26 view .LVU464
 1454 001e 10B5     		push	{r4, lr}
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 4, -8
 1457              		.cfi_offset 14, -4
 1458 0020 0446     		mov	r4, r0
 1459              	.LVL116:
 1460              	.LBB278:
 1461              	.LBI278:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1462              		.loc 1 671 12 is_stmt 1 view .LVU465
 1463              	.LBB279:
 672:src/keys.c    **** }
 1464              		.loc 1 672 52 is_stmt 0 view .LVU466
 1465 0022 FFF7FEFF 		bl	int_base
 1466              	.LVL117:
 672:src/keys.c    **** }
 1467              		.loc 1 672 43 view .LVU467
 1468 0026 8442     		cmp	r4, r0
 1469 0028 ACBF     		ite	ge
 1470 002a 0020     		movge	r0, #0
 1471 002c 0120     		movlt	r0, #1
 1472              	.LBE279:
 1473              	.LBE278:
 673:src/keys.c    **** 
 1474              		.loc 1 673 1 view .LVU468
 1475 002e 10BD     		pop	{r4, pc}
 1476              	.LVL118:
 1477              	.L150:
 673:src/keys.c    **** 
 1478              		.loc 1 673 1 view .LVU469
 1479              		.align	2
 1480              	.L149:
 1481 0030 00000000 		.word	main_ram
 1482 0034 00000000 		.word	StateWhileOn
 1483              		.cfi_endproc
 1484              	.LFE18:
 1486              		.section	.text.set_window,"ax",%progbits
 1487              		.align	1
 1488              		.p2align 2,,3
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv4-sp-d16
 1494              	set_window:
 1495              	.LVL119:
 1496              	.LFB53:
2569:src/keys.c    **** 
2570:src/keys.c    **** 
2571:src/keys.c    **** /*
2572:src/keys.c    ****  *  CAT command
2573:src/keys.c    ****  */
2574:src/keys.c    **** static int process_labellist(const keycode c) {
2575:src/keys.c    **** 	unsigned int pc = State2.digval;
2576:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2577:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
ARM GAS  /tmp/ccGwaFaD.s 			page 79


2578:src/keys.c    **** 	const int opcode = getprog(pc);
2579:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2580:src/keys.c    **** 	const int direct = State2.runmode;
2581:src/keys.c    **** 	const enum shifts shift = reset_shift();
2582:src/keys.c    **** 	int op = STATE_UNFINISHED;
2583:src/keys.c    **** 
2584:src/keys.c    **** 	if (n < REGION_XROM) {
2585:src/keys.c    **** 		// Digits take you to that segment
2586:src/keys.c    **** 		pc = addrLIB(1, n);
2587:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2588:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2589:src/keys.c    **** 		State2.digval = pc;
2590:src/keys.c    **** 		return STATE_UNFINISHED;
2591:src/keys.c    **** 	}
2592:src/keys.c    **** 
2593:src/keys.c    **** 	switch (c | (shift << 8)) {
2594:src/keys.c    **** 
2595:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2596:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2597:src/keys.c    **** 		goto next;
2598:src/keys.c    **** 
2599:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2600:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2601:src/keys.c    **** 	case K_DOWN:				// Find next label
2602:src/keys.c    **** 	next:
2603:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2604:src/keys.c    **** 		return STATE_UNFINISHED;
2605:src/keys.c    **** 
2606:src/keys.c    **** 	case K_UP:				// Find previous label
2607:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2608:src/keys.c    **** 		return STATE_UNFINISHED;
2609:src/keys.c    **** 
2610:src/keys.c    **** 	case K24:				// <- exits
2611:src/keys.c    **** 		break;
2612:src/keys.c    **** 
2613:src/keys.c    **** 	case K20:				// ENTER^
2614:src/keys.c    **** 	set_pc_and_exit:
2615:src/keys.c    **** 		set_pc(pc);			// forced branch
2616:src/keys.c    **** 		break;
2617:src/keys.c    **** 
2618:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2619:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2620:src/keys.c    **** 		goto set_pc_and_exit;
2621:src/keys.c    **** 
2622:src/keys.c    **** 	case K10:				// STO
2623:src/keys.c    **** 	case K11:				// RCL
2624:src/keys.c    **** 	  //#ifndef DM42	
2625:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2626:src/keys.c    **** 	  //#endif
2627:src/keys.c    **** /* #ifdef DM42 */
2628:src/keys.c    **** /* 	        op = OP_NIL; */
2629:src/keys.c    **** /* #endif	     */
2630:src/keys.c    **** 	  goto set_pc_and_exit;
2631:src/keys.c    **** #ifdef DM42
2632:src/keys.c    **** 	case K05:				// XEQ
2633:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2634:src/keys.c    **** 		goto xeq_or_gto;
ARM GAS  /tmp/ccGwaFaD.s 			page 80


2635:src/keys.c    **** 
2636:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2637:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2638:src/keys.c    **** 	xeq_or_gto:
2639:src/keys.c    **** 		if (label)
2640:src/keys.c    **** 			break;
2641:src/keys.c    **** 		return STATE_UNFINISHED;
2642:src/keys.c    **** #else
2643:src/keys.c    **** 	case K30:				// XEQ
2644:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2645:src/keys.c    **** 		goto xeq_or_gto;
2646:src/keys.c    **** 
2647:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2648:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2649:src/keys.c    **** 	xeq_or_gto:
2650:src/keys.c    **** 		if (label)
2651:src/keys.c    **** 			break;
2652:src/keys.c    **** 		return STATE_UNFINISHED;
2653:src/keys.c    **** #endif		
2654:src/keys.c    **** 	case K63:				// R/S
2655:src/keys.c    **** 		if (direct && label) {
2656:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2657:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2658:src/keys.c    **** 			break;
2659:src/keys.c    **** 		}
2660:src/keys.c    **** 		return STATE_UNFINISHED;
2661:src/keys.c    **** 
2662:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2663:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2664:src/keys.c    **** 		goto set_pc_and_exit;
2665:src/keys.c    **** 
2666:src/keys.c    **** 	default:
2667:src/keys.c    **** 		return STATE_UNFINISHED;
2668:src/keys.c    **** 	}
2669:src/keys.c    **** 	State2.digval = 0;
2670:src/keys.c    **** 	State2.labellist = 0;
2671:src/keys.c    **** 	return check_confirm(op);
2672:src/keys.c    **** }
2673:src/keys.c    **** 
2674:src/keys.c    **** 
2675:src/keys.c    **** static void set_window(int c) {
 1497              		.loc 1 2675 31 is_stmt 1 view -0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
2676:src/keys.c    **** 
2677:src/keys.c    **** 	if (State2.runmode) {
 1501              		.loc 1 2677 2 view .LVU471
2675:src/keys.c    **** 
 1502              		.loc 1 2675 31 is_stmt 0 view .LVU472
 1503 0000 38B5     		push	{r3, r4, r5, lr}
 1504              		.cfi_def_cfa_offset 16
 1505              		.cfi_offset 3, -16
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 5, -8
 1508              		.cfi_offset 14, -4
 1509              		.loc 1 2677 6 view .LVU473
ARM GAS  /tmp/ccGwaFaD.s 			page 81


 1510 0002 224C     		ldr	r4, .L166
 1511 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1512              		.loc 1 2677 5 view .LVU474
 1513 0006 5A06     		lsls	r2, r3, #25
 1514 0008 00D4     		bmi	.L163
 1515              	.LVL120:
 1516              	.L151:
2678:src/keys.c    **** 		process_cmdline_set_lift();
2679:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2680:src/keys.c    **** 		State2.disp_freeze = 0;
2681:src/keys.c    **** 		display();	
2682:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2683:src/keys.c    **** 			if (UState.intm) {
2684:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2685:src/keys.c    **** 					State2.window--;
2686:src/keys.c    **** 				return;
2687:src/keys.c    **** 			}
2688:src/keys.c    **** 			else 
2689:src/keys.c    **** 				State2.window = is_dblmode();
2690:src/keys.c    **** 		}
2691:src/keys.c    **** 		else {
2692:src/keys.c    **** 			if (UState.intm) {
2693:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2694:src/keys.c    **** 					State2.window++;
2695:src/keys.c    **** 				return;
2696:src/keys.c    **** 			}
2697:src/keys.c    **** 			else
2698:src/keys.c    **** 				State2.window = 0;
2699:src/keys.c    **** 		}
2700:src/keys.c    **** 		set_smode(SDISP_SHOW);
2701:src/keys.c    **** 	}
2702:src/keys.c    **** }
 1517              		.loc 1 2702 1 view .LVU475
 1518 000a 38BD     		pop	{r3, r4, r5, pc}
 1519              	.LVL121:
 1520              	.L163:
2678:src/keys.c    **** 		process_cmdline_set_lift();
 1521              		.loc 1 2678 3 is_stmt 1 view .LVU476
 1522 000c 0546     		mov	r5, r0
 1523 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1524              	.LVL122:
2680:src/keys.c    **** 		display();	
 1525              		.loc 1 2680 3 view .LVU477
2680:src/keys.c    **** 		display();	
 1526              		.loc 1 2680 22 is_stmt 0 view .LVU478
 1527 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1528 0014 6FF30413 		bfc	r3, #4, #1
 1529 0018 E375     		strb	r3, [r4, #23]
2681:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1530              		.loc 1 2681 3 is_stmt 1 view .LVU479
 1531 001a FFF7FEFF 		bl	display
 1532              	.LVL123:
2682:src/keys.c    **** 			if (UState.intm) {
 1533              		.loc 1 2682 3 view .LVU480
2683:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1534              		.loc 1 2683 8 is_stmt 0 view .LVU481
 1535 001e 1C4B     		ldr	r3, .L166+4
ARM GAS  /tmp/ccGwaFaD.s 			page 82


 1536 0020 1B68     		ldr	r3, [r3]
2682:src/keys.c    **** 			if (UState.intm) {
 1537              		.loc 1 2682 6 view .LVU482
 1538 0022 2C2D     		cmp	r5, #44
2683:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1539              		.loc 1 2683 8 view .LVU483
 1540 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2682:src/keys.c    **** 			if (UState.intm) {
 1541              		.loc 1 2682 6 view .LVU484
 1542 0028 18D0     		beq	.L164
2692:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1543              		.loc 1 2692 4 is_stmt 1 view .LVU485
2692:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1544              		.loc 1 2692 7 is_stmt 0 view .LVU486
 1545 002a 13F00103 		ands	r3, r3, #1
 1546 002e 09D1     		bne	.L165
2698:src/keys.c    **** 		}
 1547              		.loc 1 2698 5 is_stmt 1 view .LVU487
2698:src/keys.c    **** 		}
 1548              		.loc 1 2698 19 is_stmt 0 view .LVU488
 1549 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1550 0032 63F3C502 		bfi	r2, r3, #3, #3
 1551 0036 2275     		strb	r2, [r4, #20]
 1552              	.L157:
2700:src/keys.c    **** 	}
 1553              		.loc 1 2700 3 is_stmt 1 view .LVU489
 1554              	.LVL124:
 1555              	.LBB286:
 1556              	.LBI286:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1557              		.loc 1 651 13 view .LVU490
 1558              	.LBB287:
 652:src/keys.c    **** }
 1559              		.loc 1 652 2 view .LVU491
 652:src/keys.c    **** }
 1560              		.loc 1 652 15 is_stmt 0 view .LVU492
 1561 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1562 003a 013B     		subs	r3, r3, #1
 1563 003c 18BF     		it	ne
 1564 003e 0123     		movne	r3, #1
 1565 0040 6374     		strb	r3, [r4, #17]
 1566              	.LVL125:
 652:src/keys.c    **** }
 1567              		.loc 1 652 15 view .LVU493
 1568              	.LBE287:
 1569              	.LBE286:
 1570              		.loc 1 2702 1 view .LVU494
 1571 0042 38BD     		pop	{r3, r4, r5, pc}
 1572              	.LVL126:
 1573              	.L165:
2693:src/keys.c    **** 					State2.window++;
 1574              		.loc 1 2693 5 is_stmt 1 view .LVU495
2693:src/keys.c    **** 					State2.window++;
 1575              		.loc 1 2693 22 is_stmt 0 view .LVU496
 1576 0044 134A     		ldr	r2, .L166+8
2693:src/keys.c    **** 					State2.window++;
 1577              		.loc 1 2693 42 view .LVU497
ARM GAS  /tmp/ccGwaFaD.s 			page 83


 1578 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2693:src/keys.c    **** 					State2.window++;
 1579              		.loc 1 2693 8 view .LVU498
 1580 0048 1168     		ldr	r1, [r2]
2693:src/keys.c    **** 					State2.window++;
 1581              		.loc 1 2693 42 view .LVU499
 1582 004a C3F3C202 		ubfx	r2, r3, #3, #3
2693:src/keys.c    **** 					State2.window++;
 1583              		.loc 1 2693 8 view .LVU500
 1584 004e 8A42     		cmp	r2, r1
 1585 0050 DBDA     		bge	.L151
2694:src/keys.c    **** 				return;
 1586              		.loc 1 2694 6 is_stmt 1 view .LVU501
2694:src/keys.c    **** 				return;
 1587              		.loc 1 2694 19 is_stmt 0 view .LVU502
 1588 0052 0132     		adds	r2, r2, #1
 1589 0054 62F3C503 		bfi	r3, r2, #3, #3
 1590 0058 2375     		strb	r3, [r4, #20]
 1591              		.loc 1 2702 1 view .LVU503
 1592 005a 38BD     		pop	{r3, r4, r5, pc}
 1593              	.LVL127:
 1594              	.L164:
2683:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1595              		.loc 1 2683 4 is_stmt 1 view .LVU504
2683:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1596              		.loc 1 2683 7 is_stmt 0 view .LVU505
 1597 005c DB07     		lsls	r3, r3, #31
 1598 005e 0ED5     		bpl	.L155
 1599              	.LBB288:
 1600              	.LBI288:
2675:src/keys.c    **** 
 1601              		.loc 1 2675 13 is_stmt 1 view .LVU506
 1602              	.LVL128:
 1603              	.LBB289:
2684:src/keys.c    **** 					State2.window--;
 1604              		.loc 1 2684 5 view .LVU507
2684:src/keys.c    **** 					State2.window--;
 1605              		.loc 1 2684 22 is_stmt 0 view .LVU508
 1606 0060 0C4B     		ldr	r3, .L166+8
2684:src/keys.c    **** 					State2.window--;
 1607              		.loc 1 2684 8 view .LVU509
 1608 0062 1B68     		ldr	r3, [r3]
 1609 0064 002B     		cmp	r3, #0
 1610 0066 D0DD     		ble	.L151
2684:src/keys.c    **** 					State2.window--;
 1611              		.loc 1 2684 43 view .LVU510
 1612 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2684:src/keys.c    **** 					State2.window--;
 1613              		.loc 1 2684 26 view .LVU511
 1614 006a 13F0380F 		tst	r3, #56
 1615 006e CCD0     		beq	.L151
2685:src/keys.c    **** 				return;
 1616              		.loc 1 2685 6 is_stmt 1 view .LVU512
2685:src/keys.c    **** 				return;
 1617              		.loc 1 2685 12 is_stmt 0 view .LVU513
 1618 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2685:src/keys.c    **** 				return;
ARM GAS  /tmp/ccGwaFaD.s 			page 84


 1619              		.loc 1 2685 19 view .LVU514
 1620 0074 0732     		adds	r2, r2, #7
 1621 0076 62F3C503 		bfi	r3, r2, #3, #3
 1622 007a 2375     		strb	r3, [r4, #20]
 1623              	.LBE289:
 1624              	.LBE288:
 1625              		.loc 1 2702 1 view .LVU515
 1626 007c 38BD     		pop	{r3, r4, r5, pc}
 1627              	.LVL129:
 1628              	.L155:
2689:src/keys.c    **** 		}
 1629              		.loc 1 2689 5 is_stmt 1 view .LVU516
2689:src/keys.c    **** 		}
 1630              		.loc 1 2689 21 is_stmt 0 view .LVU517
 1631 007e FFF7FEFF 		bl	is_dblmode
 1632              	.LVL130:
2689:src/keys.c    **** 		}
 1633              		.loc 1 2689 19 view .LVU518
 1634 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1635 0084 60F3C503 		bfi	r3, r0, #3, #3
 1636 0088 2375     		strb	r3, [r4, #20]
 1637 008a D5E7     		b	.L157
 1638              	.L167:
 1639              		.align	2
 1640              	.L166:
 1641 008c 00000000 		.word	StateWhileOn
 1642 0090 00000000 		.word	main_ram
 1643 0094 00000000 		.word	IntMaxWindow
 1644              		.cfi_endproc
 1645              	.LFE53:
 1647              		.section	.text.arg_storcl,"ax",%progbits
 1648              		.align	1
 1649              		.p2align 2,,3
 1650              		.syntax unified
 1651              		.thumb
 1652              		.thumb_func
 1653              		.fpu fpv4-sp-d16
 1655              	arg_storcl:
 1656              	.LVL131:
 1657              	.LFB34:
1636:src/keys.c    **** 	unsigned int b = CmdBase;
 1658              		.loc 1 1636 56 is_stmt 1 view -0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 1662              		@ link register save eliminated.
1637:src/keys.c    **** 
 1663              		.loc 1 1637 2 view .LVU520
1637:src/keys.c    **** 
 1664              		.loc 1 1637 19 is_stmt 0 view .LVU521
 1665 0000 0F4A     		ldr	r2, .L200
 1666 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1667              	.LVL132:
1639:src/keys.c    **** 		CmdBase += n;
 1668              		.loc 1 1639 2 is_stmt 1 view .LVU522
 1669              	.LBB298:
 1670              	.LBI298:
ARM GAS  /tmp/ccGwaFaD.s 			page 85


1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1671              		.loc 1 1627 12 view .LVU523
 1672              	.LBB299:
1632:src/keys.c    **** #endif
 1673              		.loc 1 1632 2 view .LVU524
1632:src/keys.c    **** #endif
 1674              		.loc 1 1632 41 is_stmt 0 view .LVU525
 1675 0004 032B     		cmp	r3, #3
 1676 0006 14D0     		beq	.L169
1632:src/keys.c    **** #endif
 1677              		.loc 1 1632 24 view .LVU526
 1678 0008 0A2B     		cmp	r3, #10
 1679 000a 12D0     		beq	.L169
 1680              	.LVL133:
 1681              	.LBB300:
 1682              	.LBI300:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1683              		.loc 1 1627 12 is_stmt 1 view .LVU527
 1684              	.LBB301:
1632:src/keys.c    **** #endif
 1685              		.loc 1 1632 41 is_stmt 0 view .LVU528
 1686 000c 19B1     		cbz	r1, .L170
1632:src/keys.c    **** #endif
 1687              		.loc 1 1632 51 view .LVU529
 1688 000e 152B     		cmp	r3, #21
 1689 0010 0FD0     		beq	.L169
1632:src/keys.c    **** #endif
 1690              		.loc 1 1632 70 view .LVU530
 1691 0012 1A2B     		cmp	r3, #26
 1692 0014 0DD0     		beq	.L169
 1693              	.L170:
 1694              	.LVL134:
1632:src/keys.c    **** #endif
 1695              		.loc 1 1632 70 view .LVU531
 1696              	.LBE301:
 1697              	.LBE300:
 1698              	.LBE299:
 1699              	.LBE298:
1644:src/keys.c    **** 		b -= n;
 1700              		.loc 1 1644 2 is_stmt 1 view .LVU532
1644:src/keys.c    **** 		b -= n;
 1701              		.loc 1 1644 5 is_stmt 0 view .LVU533
 1702 0016 8342     		cmp	r3, r0
 1703 0018 09D3     		bcc	.L175
1645:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1704              		.loc 1 1645 3 is_stmt 1 view .LVU534
1645:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1705              		.loc 1 1645 5 is_stmt 0 view .LVU535
 1706 001a 1B1A     		subs	r3, r3, r0
 1707              	.LVL135:
1646:src/keys.c    **** 			CmdBase = b;
 1708              		.loc 1 1646 3 is_stmt 1 view .LVU536
 1709              	.LBB302:
 1710              	.LBI302:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1711              		.loc 1 1627 12 view .LVU537
 1712              	.LBB303:
ARM GAS  /tmp/ccGwaFaD.s 			page 86


1632:src/keys.c    **** #endif
 1713              		.loc 1 1632 2 view .LVU538
1632:src/keys.c    **** #endif
 1714              		.loc 1 1632 41 is_stmt 0 view .LVU539
 1715 001c 032B     		cmp	r3, #3
 1716 001e 0CD0     		beq	.L173
1632:src/keys.c    **** #endif
 1717              		.loc 1 1632 24 view .LVU540
 1718 0020 0A2B     		cmp	r3, #10
 1719 0022 0AD0     		beq	.L173
 1720              	.LVL136:
 1721              	.LBB304:
 1722              	.LBI304:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1723              		.loc 1 1627 12 is_stmt 1 view .LVU541
 1724              	.LBB305:
1632:src/keys.c    **** #endif
 1725              		.loc 1 1632 41 is_stmt 0 view .LVU542
 1726 0024 19B1     		cbz	r1, .L175
1632:src/keys.c    **** #endif
 1727              		.loc 1 1632 51 view .LVU543
 1728 0026 152B     		cmp	r3, #21
 1729 0028 07D0     		beq	.L173
1632:src/keys.c    **** #endif
 1730              		.loc 1 1632 70 view .LVU544
 1731 002a 1A2B     		cmp	r3, #26
 1732 002c 05D0     		beq	.L173
 1733              	.LVL137:
 1734              	.L175:
1632:src/keys.c    **** #endif
 1735              		.loc 1 1632 70 view .LVU545
 1736              	.LBE305:
 1737              	.LBE304:
 1738              	.LBE303:
 1739              	.LBE302:
1651:src/keys.c    **** }
 1740              		.loc 1 1651 9 view .LVU546
 1741 002e 0020     		movs	r0, #0
 1742              	.LVL138:
1652:src/keys.c    **** 
 1743              		.loc 1 1652 1 view .LVU547
 1744 0030 7047     		bx	lr
 1745              	.LVL139:
 1746              	.L169:
1640:src/keys.c    **** 		return 1;
 1747              		.loc 1 1640 3 is_stmt 1 view .LVU548
1640:src/keys.c    **** 		return 1;
 1748              		.loc 1 1640 11 is_stmt 0 view .LVU549
 1749 0032 1844     		add	r0, r0, r3
 1750              	.LVL140:
1640:src/keys.c    **** 		return 1;
 1751              		.loc 1 1640 11 view .LVU550
 1752 0034 D077     		strb	r0, [r2, #31]
1641:src/keys.c    **** 	}
 1753              		.loc 1 1641 3 is_stmt 1 view .LVU551
1641:src/keys.c    **** 	}
 1754              		.loc 1 1641 10 is_stmt 0 view .LVU552
ARM GAS  /tmp/ccGwaFaD.s 			page 87


 1755 0036 0120     		movs	r0, #1
 1756 0038 7047     		bx	lr
 1757              	.LVL141:
 1758              	.L173:
1647:src/keys.c    **** 			return 1;
 1759              		.loc 1 1647 4 is_stmt 1 view .LVU553
1647:src/keys.c    **** 			return 1;
 1760              		.loc 1 1647 12 is_stmt 0 view .LVU554
 1761 003a D377     		strb	r3, [r2, #31]
1648:src/keys.c    **** 		}
 1762              		.loc 1 1648 4 is_stmt 1 view .LVU555
1648:src/keys.c    **** 		}
 1763              		.loc 1 1648 11 is_stmt 0 view .LVU556
 1764 003c 0120     		movs	r0, #1
 1765              	.LVL142:
1648:src/keys.c    **** 		}
 1766              		.loc 1 1648 11 view .LVU557
 1767 003e 7047     		bx	lr
 1768              	.L201:
 1769              		.align	2
 1770              	.L200:
 1771 0040 00000000 		.word	StateWhileOn
 1772              		.cfi_endproc
 1773              	.LFE34:
 1775              		.section	.text.process_arg,"ax",%progbits
 1776              		.align	1
 1777              		.p2align 2,,3
 1778              		.syntax unified
 1779              		.thumb
 1780              		.thumb_func
 1781              		.fpu fpv4-sp-d16
 1783              	process_arg:
 1784              	.LVL143:
 1785              	.LFB37:
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1786              		.loc 1 1686 41 is_stmt 1 view -0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 8
 1789              		@ frame_needed = 0, uses_anonymous_args = 0
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1790              		.loc 1 1687 2 view .LVU559
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1791              		.loc 1 1686 41 is_stmt 0 view .LVU560
 1792 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1793              		.cfi_def_cfa_offset 36
 1794              		.cfi_offset 4, -36
 1795              		.cfi_offset 5, -32
 1796              		.cfi_offset 6, -28
 1797              		.cfi_offset 7, -24
 1798              		.cfi_offset 8, -20
 1799              		.cfi_offset 9, -16
 1800              		.cfi_offset 10, -12
 1801              		.cfi_offset 11, -8
 1802              		.cfi_offset 14, -4
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1803              		.loc 1 1687 22 view .LVU561
 1804 0004 A94D     		ldr	r5, .L317
ARM GAS  /tmp/ccGwaFaD.s 			page 88


1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1805              		.loc 1 1689 31 view .LVU562
 1806 0006 DFF8B4B2 		ldr	fp, .L317+16
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1807              		.loc 1 1687 22 view .LVU563
 1808 000a EF7F     		ldrb	r7, [r5, #31]	@ zero_extendqisi2
 1809              	.LVL144:
1688:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1810              		.loc 1 1688 2 is_stmt 1 view .LVU564
 1811              	.LBB327:
 1812              	.LBB328:
 1813              	.LBB329:
 1814              	.LBB330:
 133:src/keys.c    **** }
 1815              		.loc 1 133 23 is_stmt 0 view .LVU565
 1816 000c A84B     		ldr	r3, .L317+4
 1817              	.LBE330:
 1818              	.LBE329:
 224:src/keys.c    **** }
 1819              		.loc 1 224 28 view .LVU566
 1820 000e A94A     		ldr	r2, .L317+8
 1821              	.LBB333:
 1822              	.LBB331:
 133:src/keys.c    **** }
 1823              		.loc 1 133 23 view .LVU567
 1824 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1825              	.LBE331:
 1826              	.LBE333:
 1827              	.LBE328:
 1828              	.LBE327:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1829              		.loc 1 1689 31 view .LVU568
 1830 0012 0BEB0711 		add	r1, fp, r7, lsl #4
 1831              	.LBB337:
 1832              	.LBB335:
 224:src/keys.c    **** }
 1833              		.loc 1 224 28 view .LVU569
 1834 0016 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1835              	.LBE335:
 1836              	.LBE337:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1837              		.loc 1 1689 31 view .LVU570
 1838 001a 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1839              		.loc 1 1686 41 view .LVU571
 1840 001c 83B0     		sub	sp, sp, #12
 1841              		.cfi_def_cfa_offset 48
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1842              		.loc 1 1689 40 view .LVU572
 1843 001e 4A07     		lsls	r2, r1, #29
 1844 0020 58BF     		it	pl
 1845 0022 95F91580 		ldrsbpl	r8, [r5, #21]
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1846              		.loc 1 1689 31 view .LVU573
 1847 0026 C1F38003 		ubfx	r3, r1, #2, #1
 1848 002a 0193     		str	r3, [sp, #4]
1690:src/keys.c    **** 	const enum shifts shift = reset_shift();
ARM GAS  /tmp/ccGwaFaD.s 			page 89


 1849              		.loc 1 1690 20 view .LVU574
 1850 002c 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 1851 002e 0093     		str	r3, [sp]
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1852              		.loc 1 1689 40 view .LVU575
 1853 0030 54BF     		ite	pl
 1854 0032 4FEAD878 		lsrpl	r8, r8, #31
 1855 0036 4FF00108 		movmi	r8, #1
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1856              		.loc 1 1686 41 view .LVU576
 1857 003a 0646     		mov	r6, r0
 1858              	.LVL145:
 1859              	.LBB338:
 1860              	.LBI327:
 200:src/keys.c    **** {
 1861              		.loc 1 200 14 is_stmt 1 view .LVU577
 1862              	.LBB336:
 202:src/keys.c    ****     // K00 - K05
 1863              		.loc 1 202 3 view .LVU578
 224:src/keys.c    **** }
 1864              		.loc 1 224 3 view .LVU579
 1865              	.LBB334:
 1866              	.LBI329:
 121:src/keys.c    **** {
 1867              		.loc 1 121 12 view .LVU580
 1868              	.LBB332:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1869              		.loc 1 123 2 view .LVU581
 133:src/keys.c    **** }
 1870              		.loc 1 133 2 view .LVU582
 133:src/keys.c    **** }
 1871              		.loc 1 133 2 is_stmt 0 view .LVU583
 1872              	.LBE332:
 1873              	.LBE334:
 224:src/keys.c    **** }
 1874              		.loc 1 224 10 view .LVU584
 1875 003c 4C46     		mov	r4, r9
 1876              	.LVL146:
 224:src/keys.c    **** }
 1877              		.loc 1 224 10 view .LVU585
 1878              	.LBE336:
 1879              	.LBE338:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1880              		.loc 1 1689 2 is_stmt 1 view .LVU586
1690:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1881              		.loc 1 1690 2 view .LVU587
1691:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1882              		.loc 1 1691 2 view .LVU588
 1883              	.LBB339:
 1884              	.LBI339:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 1885              		.loc 1 104 13 view .LVU589
 1886              	.LBE339:
 105:src/keys.c    **** }
 1887              		.loc 1 105 2 view .LVU590
 1888              	.LBB352:
 1889              	.LBB340:
ARM GAS  /tmp/ccGwaFaD.s 			page 90


 1890              	.LBI340:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 1891              		.loc 1 94 20 view .LVU591
 1892              	.LBB341:
  95:src/keys.c    **** 	State2.shifts = shift;
 1893              		.loc 1 95 2 view .LVU592
 1894              	.LBB342:
 1895              	.LBI342:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 1896              		.loc 1 86 13 view .LVU593
 1897              	.LBB343:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1898              		.loc 1 87 2 view .LVU594
 1899              	.LBE343:
 1900              	.LBE342:
 1901              	.LBE341:
 1902              	.LBE340:
 1903              	.LBE352:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1904              		.loc 1 1689 31 is_stmt 0 view .LVU595
 1905 003e 4FEA071A 		lsl	r10, r7, #4
 1906              	.LBB353:
 1907              	.LBB349:
 1908              	.LBB346:
 1909              	.LBB345:
 1910              	.LBB344:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1911              		.loc 1 87 18 view .LVU596
 1912 0042 FFF7FEFF 		bl	shift_down
 1913              	.LVL147:
  88:src/keys.c    **** }
 1914              		.loc 1 88 2 is_stmt 1 view .LVU597
  88:src/keys.c    **** }
 1915              		.loc 1 88 52 is_stmt 0 view .LVU598
 1916 0046 00B9     		cbnz	r0, .L204
 1917 0048 287C     		ldrb	r0, [r5, #16]	@ zero_extendqisi2
 1918              	.LVL148:
 1919              	.L204:
  88:src/keys.c    **** }
 1920              		.loc 1 88 52 view .LVU599
 1921              	.LBE344:
 1922              	.LBE345:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1923              		.loc 1 96 2 is_stmt 1 view .LVU600
 1924              	.LBE346:
 1925              	.LBE349:
 1926              	.LBE353:
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1927              		.loc 1 1692 38 is_stmt 0 view .LVU601
 1928 004a 0BEB0A01 		add	r1, fp, r10
 1929              	.LBB354:
 1930              	.LBB350:
 1931              	.LBB347:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1932              		.loc 1 96 16 view .LVU602
 1933 004e 4FF0000C 		mov	ip, #0
 1934              	.LBE347:
ARM GAS  /tmp/ccGwaFaD.s 			page 91


 1935              	.LBE350:
 1936              	.LBE354:
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1937              		.loc 1 1692 38 view .LVU603
 1938 0052 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1939              	.LBB355:
 1940              	.LBB351:
 1941              	.LBB348:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1942              		.loc 1 96 16 view .LVU604
 1943 0054 85F810C0 		strb	ip, [r5, #16]
  98:src/keys.c    **** }
 1944              		.loc 1 98 2 is_stmt 1 view .LVU605
 1945              	.LVL149:
  98:src/keys.c    **** }
 1946              		.loc 1 98 2 is_stmt 0 view .LVU606
 1947              	.LBE348:
 1948              	.LBE351:
 1949              	.LBE355:
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1950              		.loc 1 1692 2 is_stmt 1 view .LVU607
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1951              		.loc 1 1692 61 is_stmt 0 view .LVU608
 1952 0058 8B06     		lsls	r3, r1, #26
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1953              		.loc 1 1692 38 view .LVU609
 1954 005a C1F3401E 		ubfx	lr, r1, #5, #1
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1955              		.loc 1 1692 61 view .LVU610
 1956 005e 46D5     		bpl	.L205
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1957              		.loc 1 1692 61 discriminator 1 view .LVU611
 1958 0060 697D     		ldrb	r1, [r5, #21]	@ zero_extendqisi2
 1959 0062 11F0C00F 		tst	r1, #192
 1960 0066 57D1     		bne	.L206
 1961              	.LVL150:
1693:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1962              		.loc 1 1693 2 is_stmt 1 view .LVU612
1693:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1963              		.loc 1 1693 35 is_stmt 0 view .LVU613
 1964 0068 292E     		cmp	r6, #41
 1965 006a 7DD0     		beq	.L207
1694:src/keys.c    **** 
 1966              		.loc 1 1694 11 view .LVU614
 1967 006c 0128     		cmp	r0, #1
 1968 006e 00F09280 		beq	.L208
1694:src/keys.c    **** 
 1969              		.loc 1 1694 32 discriminator 3 view .LVU615
 1970 0072 B9F1090F 		cmp	r9, #9
 1971 0076 00F28B80 		bhi	.L209
 1972              	.LVL151:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 1973              		.loc 1 1696 2 is_stmt 1 view .LVU616
1697:src/keys.c    **** 		reset_arg();
 1974              		.loc 1 1697 2 view .LVU617
1697:src/keys.c    **** 		reset_arg();
 1975              		.loc 1 1697 5 is_stmt 0 view .LVU618
ARM GAS  /tmp/ccGwaFaD.s 			page 92


 1976 007a 8C2F     		cmp	r7, #140
 1977 007c 50D8     		bhi	.L266
1702:src/keys.c    **** 	  switch (n) {
 1978              		.loc 1 1702 35 view .LVU619
 1979 007e 6969     		ldr	r1, [r5, #20]
 1980 0080 11F4103F 		tst	r1, #147456
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1981              		.loc 1 1692 61 view .LVU620
 1982 0084 4FF0010C 		mov	ip, #1
1702:src/keys.c    **** 	  switch (n) {
 1983              		.loc 1 1702 35 view .LVU621
 1984 0088 7BD0     		beq	.L270
 1985              	.LVL152:
 1986              	.L217:
1725:src/keys.c    **** 		// row column shorthand addressing
 1987              		.loc 1 1725 2 is_stmt 1 view .LVU622
1750:src/keys.c    **** 	case K_F:
 1988              		.loc 1 1750 2 view .LVU623
 1989 008a 2D2E     		cmp	r6, #45
 1990 008c 4AD8     		bhi	.L304
 1991 008e DFE816F0 		tbh	[pc, r6, lsl #1]
 1992              	.L268:
 1993 0092 4D00     		.2byte	(.L232-.L268)/2
 1994 0094 4D00     		.2byte	(.L232-.L268)/2
 1995 0096 4D00     		.2byte	(.L232-.L268)/2
 1996 0098 4D00     		.2byte	(.L232-.L268)/2
 1997 009a 4900     		.2byte	(.L304-.L268)/2
 1998 009c 4900     		.2byte	(.L304-.L268)/2
 1999 009e 4900     		.2byte	(.L304-.L268)/2
 2000 00a0 4900     		.2byte	(.L304-.L268)/2
 2001 00a2 4D00     		.2byte	(.L232-.L268)/2
 2002 00a4 4D00     		.2byte	(.L232-.L268)/2
 2003 00a6 4D00     		.2byte	(.L232-.L268)/2
 2004 00a8 4D00     		.2byte	(.L232-.L268)/2
 2005 00aa D500     		.2byte	(.L255-.L268)/2
 2006 00ac 4900     		.2byte	(.L304-.L268)/2
 2007 00ae 4900     		.2byte	(.L304-.L268)/2
 2008 00b0 4900     		.2byte	(.L304-.L268)/2
 2009 00b2 6801     		.2byte	(.L262-.L268)/2
 2010 00b4 4900     		.2byte	(.L304-.L268)/2
 2011 00b6 DB00     		.2byte	(.L253-.L268)/2
 2012 00b8 4900     		.2byte	(.L304-.L268)/2
 2013 00ba 4900     		.2byte	(.L304-.L268)/2
 2014 00bc 4900     		.2byte	(.L304-.L268)/2
 2015 00be 6201     		.2byte	(.L252-.L268)/2
 2016 00c0 4900     		.2byte	(.L304-.L268)/2
 2017 00c2 5601     		.2byte	(.L254-.L268)/2
 2018 00c4 5C01     		.2byte	(.L231-.L268)/2
 2019 00c6 4900     		.2byte	(.L304-.L268)/2
 2020 00c8 4900     		.2byte	(.L304-.L268)/2
 2021 00ca 9800     		.2byte	(.L249-.L268)/2
 2022 00cc 4900     		.2byte	(.L304-.L268)/2
 2023 00ce 4900     		.2byte	(.L304-.L268)/2
 2024 00d0 4001     		.2byte	(.L233-.L268)/2
 2025 00d2 4A01     		.2byte	(.L234-.L268)/2
 2026 00d4 5001     		.2byte	(.L235-.L268)/2
 2027 00d6 E100     		.2byte	(.L246-.L268)/2
ARM GAS  /tmp/ccGwaFaD.s 			page 93


 2028 00d8 4900     		.2byte	(.L304-.L268)/2
 2029 00da 4700     		.2byte	(.L266-.L268)/2
 2030 00dc 4900     		.2byte	(.L304-.L268)/2
 2031 00de ED00     		.2byte	(.L239-.L268)/2
 2032 00e0 4900     		.2byte	(.L304-.L268)/2
 2033 00e2 1701     		.2byte	(.L243-.L268)/2
 2034 00e4 B000     		.2byte	(.L225-.L268)/2
 2035 00e6 4900     		.2byte	(.L304-.L268)/2
 2036 00e8 4900     		.2byte	(.L304-.L268)/2
 2037 00ea 2601     		.2byte	(.L227-.L268)/2
 2038 00ec C600     		.2byte	(.L229-.L268)/2
 2039              	.LVL153:
 2040              		.p2align 1
 2041              	.L205:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2042              		.loc 1 1696 2 view .LVU624
1697:src/keys.c    **** 		reset_arg();
 2043              		.loc 1 1697 5 is_stmt 0 view .LVU625
 2044 00ee 8C2F     		cmp	r7, #140
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2045              		.loc 1 1696 4 view .LVU626
 2046 00f0 29F08004 		bic	r4, r9, #128
 2047              	.LVL154:
1697:src/keys.c    **** 		reset_arg();
 2048              		.loc 1 1697 2 is_stmt 1 view .LVU627
1697:src/keys.c    **** 		reset_arg();
 2049              		.loc 1 1697 5 is_stmt 0 view .LVU628
 2050 00f4 14D8     		bhi	.L266
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2051              		.loc 1 1692 61 view .LVU629
 2052 00f6 F446     		mov	ip, lr
 2053              	.L214:
1702:src/keys.c    **** 	  switch (n) {
 2054              		.loc 1 1702 35 discriminator 1 view .LVU630
 2055 00f8 6969     		ldr	r1, [r5, #20]
 2056 00fa 11F4103F 		tst	r1, #147456
 2057 00fe C4D1     		bne	.L217
1703:src/keys.c    **** 	  case regX_idx:
 2058              		.loc 1 1703 4 is_stmt 1 view .LVU631
 2059 0100 672C     		cmp	r4, #103
 2060 0102 C2D8     		bhi	.L217
 2061              	.LVL155:
 2062              	.L269:
1703:src/keys.c    **** 	  case regX_idx:
 2063              		.loc 1 1703 4 is_stmt 0 view .LVU632
 2064 0104 632C     		cmp	r4, #99
 2065 0106 3CD9     		bls	.L270
 2066 0108 653C     		subs	r4, r4, #101
 2067 010a 022C     		cmp	r4, #2
 2068 010c 00F2AA81 		bhi	.L220
 2069 0110 DFE804F0 		tbb	[pc, r4]
 2070              	.L222:
 2071 0114 6B       		.byte	(.L224-.L222)/2
 2072 0115 65       		.byte	(.L223-.L222)/2
 2073 0116 6D       		.byte	(.L221-.L222)/2
 2074              	.LVL156:
 2075 0117 00       		.p2align 1
ARM GAS  /tmp/ccGwaFaD.s 			page 94


 2076              	.L206:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2077              		.loc 1 1696 2 is_stmt 1 view .LVU633
1697:src/keys.c    **** 		reset_arg();
 2078              		.loc 1 1697 5 is_stmt 0 view .LVU634
 2079 0118 8C2F     		cmp	r7, #140
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2080              		.loc 1 1696 4 view .LVU635
 2081 011a 29F08004 		bic	r4, r9, #128
 2082              	.LVL157:
1697:src/keys.c    **** 		reset_arg();
 2083              		.loc 1 1697 2 is_stmt 1 view .LVU636
1697:src/keys.c    **** 		reset_arg();
 2084              		.loc 1 1697 5 is_stmt 0 view .LVU637
 2085 011e EBD9     		bls	.L214
 2086              	.LVL158:
 2087              	.L266:
1917:src/keys.c    **** 	default:
 2088              		.loc 1 1917 3 is_stmt 1 view .LVU638
 2089 0120 FFF7FEFF 		bl	reset_arg
 2090              	.LVL159:
 2091              	.L304:
1921:src/keys.c    **** }
 2092              		.loc 1 1921 9 is_stmt 0 view .LVU639
 2093 0124 3320     		movs	r0, #51
 2094              	.L202:
1922:src/keys.c    **** 
 2095              		.loc 1 1922 1 view .LVU640
 2096 0126 03B0     		add	sp, sp, #12
 2097              		.cfi_remember_state
 2098              		.cfi_def_cfa_offset 36
 2099              	.LVL160:
1922:src/keys.c    **** 
 2100              		.loc 1 1922 1 view .LVU641
 2101              		@ sp needed
 2102 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2103              	.LVL161:
 2104              	.L232:
 2105              		.cfi_restore_state
1805:src/keys.c    **** 			return arg_eval(n);
 2106              		.loc 1 1805 4 is_stmt 1 view .LVU642
1805:src/keys.c    **** 			return arg_eval(n);
 2107              		.loc 1 1805 8 is_stmt 0 view .LVU643
 2108 012c 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1805:src/keys.c    **** 			return arg_eval(n);
 2109              		.loc 1 1805 7 view .LVU644
 2110 012e 5F06     		lsls	r7, r3, #25
 2111              	.LVL162:
1805:src/keys.c    **** 			return arg_eval(n);
 2112              		.loc 1 1805 7 view .LVU645
 2113 0130 53D4     		bmi	.L251
1805:src/keys.c    **** 			return arg_eval(n);
 2114              		.loc 1 1805 19 discriminator 1 view .LVU646
 2115 0132 B8F1000F 		cmp	r8, #0
 2116 0136 50D1     		bne	.L251
1807:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2117              		.loc 1 1807 3 is_stmt 1 view .LVU647
ARM GAS  /tmp/ccGwaFaD.s 			page 95


1807:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2118              		.loc 1 1807 6 is_stmt 0 view .LVU648
 2119 0138 032E     		cmp	r6, #3
 2120 013a F3D8     		bhi	.L304
1808:src/keys.c    **** 		break;
 2121              		.loc 1 1808 4 is_stmt 1 view .LVU649
 2122              	.LVL163:
 2123              	.LBB356:
 2124              	.LBI356:
1613:src/keys.c    **** 	const unsigned int b = CmdBase;
 2125              		.loc 1 1613 12 view .LVU650
 2126              	.LBB357:
1614:src/keys.c    **** 
 2127              		.loc 1 1614 2 view .LVU651
1614:src/keys.c    **** 
 2128              		.loc 1 1614 21 is_stmt 0 view .LVU652
 2129 013c EA7F     		ldrb	r2, [r5, #31]	@ zero_extendqisi2
 2130              	.LVL164:
1616:src/keys.c    **** 	{
 2131              		.loc 1 1616 2 is_stmt 1 view .LVU653
1616:src/keys.c    **** 	{
 2132              		.loc 1 1616 16 is_stmt 0 view .LVU654
 2133 013e 0BEB0210 		add	r0, fp, r2, lsl #4
 2134 0142 1101     		lsls	r1, r2, #4
 2135 0144 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1616:src/keys.c    **** 	{
 2136              		.loc 1 1616 5 view .LVU655
 2137 0146 8006     		lsls	r0, r0, #26
 2138 0148 02D4     		bmi	.L238
1616:src/keys.c    **** 	{
 2139              		.loc 1 1616 40 view .LVU656
 2140 014a 513A     		subs	r2, r2, #81
 2141              	.LVL165:
1616:src/keys.c    **** 	{
 2142              		.loc 1 1616 23 view .LVU657
 2143 014c 0A2A     		cmp	r2, #10
 2144 014e E9D8     		bhi	.L304
 2145              	.LVL166:
 2146              	.L238:
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 1618 3 is_stmt 1 view .LVU658
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 1618 6 is_stmt 0 view .LVU659
 2149 0150 1F06     		lsls	r7, r3, #24
 2150 0152 E7D4     		bmi	.L304
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 1618 18 view .LVU660
 2152 0154 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2153 0156 002B     		cmp	r3, #0
 2154 0158 E4D1     		bne	.L304
1620:src/keys.c    **** 			return STATE_UNFINISHED;
 2155              		.loc 1 1620 3 is_stmt 1 view .LVU661
1620:src/keys.c    **** 			return STATE_UNFINISHED;
 2156              		.loc 1 1620 17 is_stmt 0 view .LVU662
 2157 015a 5944     		add	r1, r1, fp
1620:src/keys.c    **** 			return STATE_UNFINISHED;
 2158              		.loc 1 1620 6 view .LVU663
ARM GAS  /tmp/ccGwaFaD.s 			page 96


 2159 015c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2160 015e 632B     		cmp	r3, #99
 2161 0160 E0D9     		bls	.L304
1622:src/keys.c    **** 	}
 2162              		.loc 1 1622 3 is_stmt 1 view .LVU664
1622:src/keys.c    **** 	}
 2163              		.loc 1 1622 10 is_stmt 0 view .LVU665
 2164 0162 06F16400 		add	r0, r6, #100
 2165 0166 27E0     		b	.L306
 2166              	.LVL167:
 2167              	.L207:
1622:src/keys.c    **** 	}
 2168              		.loc 1 1622 10 view .LVU666
 2169              	.LBE357:
 2170              	.LBE356:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2171              		.loc 1 1696 2 is_stmt 1 view .LVU667
1697:src/keys.c    **** 		reset_arg();
 2172              		.loc 1 1697 2 view .LVU668
1697:src/keys.c    **** 		reset_arg();
 2173              		.loc 1 1697 5 is_stmt 0 view .LVU669
 2174 0168 8C2F     		cmp	r7, #140
 2175 016a D9D8     		bhi	.L266
1702:src/keys.c    **** 	  switch (n) {
 2176              		.loc 1 1702 35 view .LVU670
 2177 016c 6969     		ldr	r1, [r5, #20]
 2178 016e 11F4103F 		tst	r1, #147456
 2179 0172 41D1     		bne	.L226
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2180              		.loc 1 1696 4 view .LVU671
 2181 0174 29F08004 		bic	r4, r9, #128
1703:src/keys.c    **** 	  case regX_idx:
 2182              		.loc 1 1703 4 is_stmt 1 view .LVU672
 2183 0178 672C     		cmp	r4, #103
 2184 017a 3DD8     		bhi	.L226
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2185              		.loc 1 1692 61 is_stmt 0 view .LVU673
 2186 017c 4FF0010C 		mov	ip, #1
 2187 0180 C0E7     		b	.L269
 2188              	.LVL168:
 2189              	.L270:
1703:src/keys.c    **** 	  case regX_idx:
 2190              		.loc 1 1703 4 view .LVU674
 2191 0182 1CB1     		cbz	r4, .L219
 2192 0184 631F     		subs	r3, r4, #5
 2193 0186 042B     		cmp	r3, #4
 2194 0188 3FF67FAF 		bhi	.L217
 2195              	.L219:
1718:src/keys.c    **** 	  }
 2196              		.loc 1 1718 6 is_stmt 1 view .LVU675
1718:src/keys.c    **** 	  }
 2197              		.loc 1 1718 13 is_stmt 0 view .LVU676
 2198 018c 2046     		mov	r0, r4
 2199              	.LVL169:
1718:src/keys.c    **** 	  }
 2200              		.loc 1 1718 13 view .LVU677
 2201 018e 27E0     		b	.L305
ARM GAS  /tmp/ccGwaFaD.s 			page 97


 2202              	.LVL170:
 2203              	.L209:
1694:src/keys.c    **** 
 2204              		.loc 1 1694 42 discriminator 4 view .LVU678
 2205 0190 19F0800F 		tst	r9, #128
 2206 0194 3CD1     		bne	.L212
 2207              	.L208:
 2208              	.LVL171:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2209              		.loc 1 1696 2 is_stmt 1 view .LVU679
1697:src/keys.c    **** 		reset_arg();
 2210              		.loc 1 1697 2 view .LVU680
1697:src/keys.c    **** 		reset_arg();
 2211              		.loc 1 1697 5 is_stmt 0 view .LVU681
 2212 0196 8C2F     		cmp	r7, #140
 2213 0198 C2D8     		bhi	.L266
1725:src/keys.c    **** 		// row column shorthand addressing
 2214              		.loc 1 1725 2 is_stmt 1 view .LVU682
1727:src/keys.c    **** 
 2215              		.loc 1 1727 3 view .LVU683
 2216              	.LVL172:
 2217              	.LBB358:
 2218              	.LBI358:
 169:src/keys.c    **** {
 2219              		.loc 1 169 5 view .LVU684
 2220              	.LBB359:
 171:src/keys.c    **** }
 2221              		.loc 1 171 2 view .LVU685
 171:src/keys.c    **** }
 2222              		.loc 1 171 18 is_stmt 0 view .LVU686
 2223 019a 474B     		ldr	r3, .L317+12
 2224 019c A3FB0623 		umull	r2, r3, r3, r6
 171:src/keys.c    **** }
 2225              		.loc 1 171 24 view .LVU687
 2226 01a0 03F0FC00 		and	r0, r3, #252
 2227              	.LVL173:
 171:src/keys.c    **** }
 2228              		.loc 1 171 24 view .LVU688
 2229 01a4 00EB9300 		add	r0, r0, r3, lsr #2
 171:src/keys.c    **** }
 2230              		.loc 1 171 18 view .LVU689
 2231 01a8 9B08     		lsrs	r3, r3, #2
 171:src/keys.c    **** }
 2232              		.loc 1 171 24 view .LVU690
 2233 01aa 4000     		lsls	r0, r0, #1
 171:src/keys.c    **** }
 2234              		.loc 1 171 33 view .LVU691
 2235 01ac 03EB4303 		add	r3, r3, r3, lsl #1
 171:src/keys.c    **** }
 2236              		.loc 1 171 12 view .LVU692
 2237 01b0 0B30     		adds	r0, r0, #11
 171:src/keys.c    **** }
 2238              		.loc 1 171 33 view .LVU693
 2239 01b2 A6EB4306 		sub	r6, r6, r3, lsl #1
 2240              	.LBE359:
 2241              	.LBE358:
1727:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 98


 2242              		.loc 1 1727 10 view .LVU694
 2243 01b6 3044     		add	r0, r0, r6
 2244              	.LVL174:
 2245              	.L306:
1922:src/keys.c    **** 
 2246              		.loc 1 1922 1 view .LVU695
 2247 01b8 03B0     		add	sp, sp, #12
 2248              		.cfi_remember_state
 2249              		.cfi_def_cfa_offset 36
 2250              	.LVL175:
1922:src/keys.c    **** 
 2251              		.loc 1 1922 1 view .LVU696
 2252              		@ sp needed
 2253 01ba BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2254              		.cfi_restore 14
 2255              		.cfi_restore 11
 2256              		.cfi_restore 10
 2257              		.cfi_restore 9
 2258              		.cfi_restore 8
 2259              		.cfi_restore 7
 2260              		.cfi_restore 6
 2261              		.cfi_restore 5
 2262              		.cfi_restore 4
 2263              		.cfi_def_cfa_offset 0
 2264              	.LVL176:
1727:src/keys.c    **** 
 2265              		.loc 1 1727 10 view .LVU697
 2266 01be FFF7FEBF 		b	arg_eval
 2267              	.LVL177:
 2268              	.L249:
 2269              		.cfi_restore_state
1827:src/keys.c    **** 			return arg_eval(n);
 2270              		.loc 1 1827 3 is_stmt 1 view .LVU698
1827:src/keys.c    **** 			return arg_eval(n);
 2271              		.loc 1 1827 7 is_stmt 0 view .LVU699
 2272 01c2 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1827:src/keys.c    **** 			return arg_eval(n);
 2273              		.loc 1 1827 6 view .LVU700
 2274 01c4 5806     		lsls	r0, r3, #25
 2275              	.LVL178:
1827:src/keys.c    **** 			return arg_eval(n);
 2276              		.loc 1 1827 6 view .LVU701
 2277 01c6 08D4     		bmi	.L251
1827:src/keys.c    **** 			return arg_eval(n);
 2278              		.loc 1 1827 25 discriminator 1 view .LVU702
 2279 01c8 0121     		movs	r1, #1
 2280 01ca 0320     		movs	r0, #3
 2281 01cc FFF7FEFF 		bl	arg_storcl
 2282              	.LVL179:
1827:src/keys.c    **** 			return arg_eval(n);
 2283              		.loc 1 1827 18 discriminator 1 view .LVU703
 2284 01d0 0028     		cmp	r0, #0
 2285 01d2 A7D1     		bne	.L304
1827:src/keys.c    **** 			return arg_eval(n);
 2286              		.loc 1 1827 63 discriminator 2 view .LVU704
 2287 01d4 B8F1000F 		cmp	r8, #0
 2288 01d8 A4D0     		beq	.L304
ARM GAS  /tmp/ccGwaFaD.s 			page 99


 2289              	.LVL180:
 2290              	.L251:
1828:src/keys.c    **** 		break;
 2291              		.loc 1 1828 4 is_stmt 1 view .LVU705
1828:src/keys.c    **** 		break;
 2292              		.loc 1 1828 11 is_stmt 0 view .LVU706
 2293 01da 2046     		mov	r0, r4
 2294 01dc ECE7     		b	.L306
 2295              	.LVL181:
 2296              	.L223:
1709:src/keys.c    **** 	  case regT_idx:
 2297              		.loc 1 1709 6 is_stmt 1 view .LVU707
1709:src/keys.c    **** 	  case regT_idx:
 2298              		.loc 1 1709 13 is_stmt 0 view .LVU708
 2299 01de 0320     		movs	r0, #3
 2300              	.LVL182:
 2301              	.L305:
1922:src/keys.c    **** 
 2302              		.loc 1 1922 1 view .LVU709
 2303 01e0 03B0     		add	sp, sp, #12
 2304              		.cfi_remember_state
 2305              		.cfi_def_cfa_offset 36
 2306              	.LVL183:
1922:src/keys.c    **** 
 2307              		.loc 1 1922 1 view .LVU710
 2308              		@ sp needed
 2309 01e2 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2310              		.cfi_restore 14
 2311              		.cfi_restore 11
 2312              		.cfi_restore 10
 2313              		.cfi_restore 9
 2314              		.cfi_restore 8
 2315              		.cfi_restore 7
 2316              		.cfi_restore 6
 2317              		.cfi_restore 5
 2318              		.cfi_restore 4
 2319              		.cfi_def_cfa_offset 0
 2320              	.LVL184:
1707:src/keys.c    **** 	  case regZ_idx:
 2321              		.loc 1 1707 13 view .LVU711
 2322 01e6 FFF7FEBF 		b	arg_digit
 2323              	.LVL185:
 2324              	.L224:
 2325              		.cfi_restore_state
1707:src/keys.c    **** 	  case regZ_idx:
 2326              		.loc 1 1707 6 is_stmt 1 view .LVU712
1707:src/keys.c    **** 	  case regZ_idx:
 2327              		.loc 1 1707 13 is_stmt 0 view .LVU713
 2328 01ea 0220     		movs	r0, #2
 2329              	.LVL186:
1707:src/keys.c    **** 	  case regZ_idx:
 2330              		.loc 1 1707 13 view .LVU714
 2331 01ec F8E7     		b	.L305
 2332              	.LVL187:
 2333              	.L221:
1711:src/keys.c    **** 	  case 5:
 2334              		.loc 1 1711 6 is_stmt 1 view .LVU715
ARM GAS  /tmp/ccGwaFaD.s 			page 100


1711:src/keys.c    **** 	  case 5:
 2335              		.loc 1 1711 13 is_stmt 0 view .LVU716
 2336 01ee 0420     		movs	r0, #4
 2337              	.LVL188:
1711:src/keys.c    **** 	  case 5:
 2338              		.loc 1 1711 13 view .LVU717
 2339 01f0 F6E7     		b	.L305
 2340              	.LVL189:
 2341              	.L225:
1752:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2342              		.loc 1 1752 3 is_stmt 1 view .LVU718
1752:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2343              		.loc 1 1752 6 is_stmt 0 view .LVU719
 2344 01f2 BCF1000F 		cmp	ip, #0
 2345 01f6 95D0     		beq	.L304
 2346              	.L226:
1753:src/keys.c    **** 		break;
 2347              		.loc 1 1753 4 is_stmt 1 view .LVU720
 2348              	.LVL190:
 2349              	.LBB360:
 2350              	.LBI360:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 2351              		.loc 1 94 20 view .LVU721
 2352              	.LBB361:
  95:src/keys.c    **** 	State2.shifts = shift;
 2353              		.loc 1 95 2 view .LVU722
 2354              	.LBB362:
 2355              	.LBI362:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2356              		.loc 1 86 13 view .LVU723
 2357              	.LBB363:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2358              		.loc 1 87 2 view .LVU724
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2359              		.loc 1 87 18 is_stmt 0 view .LVU725
 2360 01f8 FFF7FEFF 		bl	shift_down
 2361              	.LVL191:
  88:src/keys.c    **** }
 2362              		.loc 1 88 2 is_stmt 1 view .LVU726
 2363              	.LBE363:
 2364              	.LBE362:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2365              		.loc 1 96 2 view .LVU727
 2366              	.LBE361:
 2367              	.LBE360:
1753:src/keys.c    **** 		break;
 2368              		.loc 1 1753 4 is_stmt 0 view .LVU728
 2369 01fc 009B     		ldr	r3, [sp]
 2370 01fe B3F10109 		subs	r9, r3, #1
 2371 0202 18BF     		it	ne
 2372 0204 4FF00109 		movne	r9, #1
 2373 0208 85F81090 		strb	r9, [r5, #16]
 2374              	.LBB366:
 2375              	.LBB364:
  98:src/keys.c    **** }
 2376              		.loc 1 98 2 is_stmt 1 view .LVU729
 2377              	.LBE364:
ARM GAS  /tmp/ccGwaFaD.s 			page 101


 2378              	.LBE366:
1921:src/keys.c    **** }
 2379              		.loc 1 1921 9 is_stmt 0 view .LVU730
 2380 020c 3320     		movs	r0, #51
 2381              	.LBB367:
 2382              	.LBB365:
  98:src/keys.c    **** }
 2383              		.loc 1 98 9 view .LVU731
 2384 020e 8AE7     		b	.L202
 2385              	.LVL192:
 2386              	.L212:
  98:src/keys.c    **** }
 2387              		.loc 1 98 9 view .LVU732
 2388              	.LBE365:
 2389              	.LBE367:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2390              		.loc 1 1696 2 is_stmt 1 view .LVU733
1697:src/keys.c    **** 		reset_arg();
 2391              		.loc 1 1697 5 is_stmt 0 view .LVU734
 2392 0210 8C2F     		cmp	r7, #140
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2393              		.loc 1 1696 4 view .LVU735
 2394 0212 29F08004 		bic	r4, r9, #128
 2395              	.LVL193:
1697:src/keys.c    **** 		reset_arg();
 2396              		.loc 1 1697 2 is_stmt 1 view .LVU736
1697:src/keys.c    **** 		reset_arg();
 2397              		.loc 1 1697 5 is_stmt 0 view .LVU737
 2398 0216 83D8     		bhi	.L266
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2399              		.loc 1 1692 61 view .LVU738
 2400 0218 4FF0010C 		mov	ip, #1
 2401 021c 6CE7     		b	.L214
 2402              	.LVL194:
 2403              	.L229:
1765:src/keys.c    **** 			break;
 2404              		.loc 1 1765 3 is_stmt 1 view .LVU739
1765:src/keys.c    **** 			break;
 2405              		.loc 1 1765 18 is_stmt 0 view .LVU740
 2406 021e 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1765:src/keys.c    **** 			break;
 2407              		.loc 1 1765 6 view .LVU741
 2408 0220 13F0C00F 		tst	r3, #192
 2409 0224 7FF47EAF 		bne	.L304
1767:src/keys.c    **** 			CmdBase = RARG_STOM;
 2410              		.loc 1 1767 3 is_stmt 1 view .LVU742
1767:src/keys.c    **** 			CmdBase = RARG_STOM;
 2411              		.loc 1 1767 6 is_stmt 0 view .LVU743
 2412 0228 032F     		cmp	r7, #3
 2413 022a 00F0F080 		beq	.L310
1769:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2414              		.loc 1 1769 8 is_stmt 1 view .LVU744
1769:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2415              		.loc 1 1769 11 is_stmt 0 view .LVU745
 2416 022e 0A2F     		cmp	r7, #10
 2417 0230 7FF478AF 		bne	.L304
1770:src/keys.c    **** 		break;
ARM GAS  /tmp/ccGwaFaD.s 			page 102


 2418              		.loc 1 1770 4 is_stmt 1 view .LVU746
1770:src/keys.c    **** 		break;
 2419              		.loc 1 1770 12 is_stmt 0 view .LVU747
 2420 0234 7823     		movs	r3, #120
 2421 0236 EB77     		strb	r3, [r5, #31]
1921:src/keys.c    **** }
 2422              		.loc 1 1921 9 view .LVU748
 2423 0238 3320     		movs	r0, #51
 2424              	.LVL195:
1921:src/keys.c    **** }
 2425              		.loc 1 1921 9 view .LVU749
 2426 023a 74E7     		b	.L202
 2427              	.LVL196:
 2428              	.L255:
1875:src/keys.c    **** 			if (argcmds[base].label) {
 2429              		.loc 1 1875 3 is_stmt 1 view .LVU750
1875:src/keys.c    **** 			if (argcmds[base].label) {
 2430              		.loc 1 1875 6 is_stmt 0 view .LVU751
 2431 023c EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2432 023e 002B     		cmp	r3, #0
 2433 0240 00F0A180 		beq	.L311
1889:src/keys.c    **** 			return arg_eval(State2.digval);
 2434              		.loc 1 1889 10 is_stmt 1 view .LVU752
1890:src/keys.c    **** 		else if (stack_reg)
 2435              		.loc 1 1890 4 view .LVU753
1890:src/keys.c    **** 		else if (stack_reg)
 2436              		.loc 1 1890 11 is_stmt 0 view .LVU754
 2437 0244 2889     		ldrh	r0, [r5, #8]
 2438              	.LVL197:
1890:src/keys.c    **** 		else if (stack_reg)
 2439              		.loc 1 1890 11 view .LVU755
 2440 0246 B7E7     		b	.L306
 2441              	.LVL198:
 2442              	.L253:
1867:src/keys.c    **** 		break;
 2443              		.loc 1 1867 3 is_stmt 1 view .LVU756
 2444 0248 0021     		movs	r1, #0
 2445 024a 0620     		movs	r0, #6
 2446              	.LVL199:
1867:src/keys.c    **** 		break;
 2447              		.loc 1 1867 3 is_stmt 0 view .LVU757
 2448 024c FFF7FEFF 		bl	arg_storcl
 2449              	.LVL200:
1868:src/keys.c    **** 
 2450              		.loc 1 1868 3 is_stmt 1 view .LVU758
1921:src/keys.c    **** }
 2451              		.loc 1 1921 9 is_stmt 0 view .LVU759
 2452 0250 3320     		movs	r0, #51
1868:src/keys.c    **** 
 2453              		.loc 1 1868 3 view .LVU760
 2454 0252 68E7     		b	.L202
 2455              	.LVL201:
 2456              	.L246:
1820:src/keys.c    **** 			reset_arg();
 2457              		.loc 1 1820 3 is_stmt 1 view .LVU761
1820:src/keys.c    **** 			reset_arg();
 2458              		.loc 1 1820 6 is_stmt 0 view .LVU762
ARM GAS  /tmp/ccGwaFaD.s 			page 103


 2459 0254 212F     		cmp	r7, #33
 2460 0256 00F0C780 		beq	.L247
1820:src/keys.c    **** 			reset_arg();
 2461              		.loc 1 1820 25 discriminator 1 view .LVU763
 2462 025a 732F     		cmp	r7, #115
 2463 025c 00F0C480 		beq	.L247
1824:src/keys.c    **** 		break;
 2464              		.loc 1 1824 3 is_stmt 1 view .LVU764
 2465 0260 0121     		movs	r1, #1
 2466 0262 0220     		movs	r0, #2
 2467              	.LVL202:
1824:src/keys.c    **** 		break;
 2468              		.loc 1 1824 3 is_stmt 0 view .LVU765
 2469 0264 FFF7FEFF 		bl	arg_storcl
 2470              	.LVL203:
1825:src/keys.c    **** 	case K44:		// multiply
 2471              		.loc 1 1825 3 is_stmt 1 view .LVU766
1921:src/keys.c    **** }
 2472              		.loc 1 1921 9 is_stmt 0 view .LVU767
 2473 0268 3320     		movs	r0, #51
1825:src/keys.c    **** 	case K44:		// multiply
 2474              		.loc 1 1825 3 view .LVU768
 2475 026a 5CE7     		b	.L202
 2476              	.LVL204:
 2477              	.L239:
1812:src/keys.c    **** 
 2478              		.loc 1 1812 3 is_stmt 1 view .LVU769
 2479              	.LBB368:
 2480              	.LBI368:
1654:src/keys.c    **** 
 2481              		.loc 1 1654 12 view .LVU770
 2482              	.LBB369:
1656:src/keys.c    **** 		// Only valid at beginning of entry
 2483              		.loc 1 1656 2 view .LVU771
1656:src/keys.c    **** 		// Only valid at beginning of entry
 2484              		.loc 1 1656 5 is_stmt 0 view .LVU772
 2485 026c EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2486 026e 002B     		cmp	r3, #0
 2487 0270 7FF458AF 		bne	.L304
1658:src/keys.c    **** 			// '..' or ENTER '.' = X
 2488              		.loc 1 1658 3 is_stmt 1 view .LVU773
1658:src/keys.c    **** 			// '..' or ENTER '.' = X
 2489              		.loc 1 1658 6 is_stmt 0 view .LVU774
 2490 0274 11F4A03F 		tst	r1, #81920
 2491 0278 40F0CD80 		bne	.L312
1663:src/keys.c    **** 			// local register or flag select
 2492              		.loc 1 1663 3 is_stmt 1 view .LVU775
1663:src/keys.c    **** 			// local register or flag select
 2493              		.loc 1 1663 20 is_stmt 0 view .LVU776
 2494 027c 0BEB0A02 		add	r2, fp, r10
 2495 0280 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1663:src/keys.c    **** 			// local register or flag select
 2496              		.loc 1 1663 6 view .LVU777
 2497 0282 1E07     		lsls	r6, r3, #28
 2498 0284 00F1B580 		bmi	.L241
1663:src/keys.c    **** 			// local register or flag select
 2499              		.loc 1 1663 27 view .LVU778
ARM GAS  /tmp/ccGwaFaD.s 			page 104


 2500 0288 95F91530 		ldrsb	r3, [r5, #21]
 2501 028c 002B     		cmp	r3, #0
 2502 028e C0F2B080 		blt	.L241
1667:src/keys.c    **** 			// Special GTO . sequence
 2503              		.loc 1 1667 8 is_stmt 1 view .LVU779
1667:src/keys.c    **** 			// Special GTO . sequence
 2504              		.loc 1 1667 29 is_stmt 0 view .LVU780
 2505 0292 443F     		subs	r7, r7, #68
 2506              	.LVL205:
1667:src/keys.c    **** 			// Special GTO . sequence
 2507              		.loc 1 1667 11 view .LVU781
 2508 0294 012F     		cmp	r7, #1
 2509 0296 3FF645AF 		bhi	.L304
1669:src/keys.c    **** 				State2.gtodot = 1;
 2510              		.loc 1 1669 4 is_stmt 1 view .LVU782
1670:src/keys.c    **** 				reset_arg();
 2511              		.loc 1 1670 5 view .LVU783
1670:src/keys.c    **** 				reset_arg();
 2512              		.loc 1 1670 19 is_stmt 0 view .LVU784
 2513 029a 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2514 029c 43F00103 		orr	r3, r3, #1
 2515 02a0 6B75     		strb	r3, [r5, #21]
1671:src/keys.c    **** 			}
 2516              		.loc 1 1671 5 is_stmt 1 view .LVU785
 2517 02a2 FFF7FEFF 		bl	reset_arg
 2518              	.LVL206:
1675:src/keys.c    **** }
 2519              		.loc 1 1675 9 is_stmt 0 view .LVU786
 2520 02a6 3320     		movs	r0, #51
 2521 02a8 3DE7     		b	.L202
 2522              	.L318:
 2523 02aa 00BF     		.align	2
 2524              	.L317:
 2525 02ac 00000000 		.word	StateWhileOn
 2526 02b0 00000000 		.word	.LANCHOR1
 2527 02b4 00000000 		.word	.LANCHOR0
 2528 02b8 ABAAAAAA 		.word	-1431655765
 2529 02bc 00000000 		.word	argcmds
 2530              	.LVL207:
 2531              	.L243:
1675:src/keys.c    **** }
 2532              		.loc 1 1675 9 view .LVU787
 2533              	.LBE369:
 2534              	.LBE368:
1816:src/keys.c    **** 			return arg_eval(n);
 2535              		.loc 1 1816 3 is_stmt 1 view .LVU788
1816:src/keys.c    **** 			return arg_eval(n);
 2536              		.loc 1 1816 7 is_stmt 0 view .LVU789
 2537 02c0 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1816:src/keys.c    **** 			return arg_eval(n);
 2538              		.loc 1 1816 6 view .LVU790
 2539 02c2 5D06     		lsls	r5, r3, #25
 2540 02c4 89D4     		bmi	.L251
1816:src/keys.c    **** 			return arg_eval(n);
 2541              		.loc 1 1816 25 discriminator 1 view .LVU791
 2542 02c6 0121     		movs	r1, #1
 2543 02c8 0846     		mov	r0, r1
ARM GAS  /tmp/ccGwaFaD.s 			page 105


 2544              	.LVL208:
1816:src/keys.c    **** 			return arg_eval(n);
 2545              		.loc 1 1816 25 discriminator 1 view .LVU792
 2546 02ca FFF7FEFF 		bl	arg_storcl
 2547              	.LVL209:
1816:src/keys.c    **** 			return arg_eval(n);
 2548              		.loc 1 1816 18 discriminator 1 view .LVU793
 2549 02ce 0028     		cmp	r0, #0
 2550 02d0 7FF428AF 		bne	.L304
1827:src/keys.c    **** 			return arg_eval(n);
 2551              		.loc 1 1827 63 view .LVU794
 2552 02d4 B8F1000F 		cmp	r8, #0
 2553 02d8 3FF424AF 		beq	.L304
 2554 02dc 7DE7     		b	.L251
 2555              	.LVL210:
 2556              	.L227:
1757:src/keys.c    **** 			State2.ind = ! State2.ind;
 2557              		.loc 1 1757 3 is_stmt 1 view .LVU795
1757:src/keys.c    **** 			State2.ind = ! State2.ind;
 2558              		.loc 1 1757 7 is_stmt 0 view .LVU796
 2559 02de 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1757:src/keys.c    **** 			State2.ind = ! State2.ind;
 2560              		.loc 1 1757 6 view .LVU797
 2561 02e0 5E06     		lsls	r6, r3, #25
 2562 02e2 3FF51FAF 		bmi	.L304
1757:src/keys.c    **** 			State2.ind = ! State2.ind;
 2563              		.loc 1 1757 35 discriminator 1 view .LVU798
 2564 02e6 D344     		add	fp, fp, r10
 2565 02e8 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
1757:src/keys.c    **** 			State2.ind = ! State2.ind;
 2566              		.loc 1 1757 19 discriminator 1 view .LVU799
 2567 02ec D407     		lsls	r4, r2, #31
 2568 02ee 7FF519AF 		bpl	.L304
1758:src/keys.c    **** 			if (! stack_reg)
 2569              		.loc 1 1758 4 is_stmt 1 view .LVU800
1758:src/keys.c    **** 			if (! stack_reg)
 2570              		.loc 1 1758 17 is_stmt 0 view .LVU801
 2571 02f2 DA43     		mvns	r2, r3
 2572 02f4 C2F3C012 		ubfx	r2, r2, #7, #1
1758:src/keys.c    **** 			if (! stack_reg)
 2573              		.loc 1 1758 15 view .LVU802
 2574 02f8 62F3C713 		bfi	r3, r2, #7, #1
 2575 02fc 6B75     		strb	r3, [r5, #21]
1759:src/keys.c    **** 				State2.dot = 0;
 2576              		.loc 1 1759 4 is_stmt 1 view .LVU803
1759:src/keys.c    **** 				State2.dot = 0;
 2577              		.loc 1 1759 7 is_stmt 0 view .LVU804
 2578 02fe B8F1000F 		cmp	r8, #0
 2579 0302 7FF40FAF 		bne	.L304
 2580              	.L264:
1760:src/keys.c    **** 		}
 2581              		.loc 1 1760 5 is_stmt 1 view .LVU805
1760:src/keys.c    **** 		}
 2582              		.loc 1 1760 16 is_stmt 0 view .LVU806
 2583 0306 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2584 0308 6FF38613 		bfc	r3, #6, #1
 2585 030c 6B75     		strb	r3, [r5, #21]
ARM GAS  /tmp/ccGwaFaD.s 			page 106


1921:src/keys.c    **** }
 2586              		.loc 1 1921 9 view .LVU807
 2587 030e 3320     		movs	r0, #51
 2588              	.LVL211:
1921:src/keys.c    **** }
 2589              		.loc 1 1921 9 view .LVU808
 2590 0310 09E7     		b	.L202
 2591              	.LVL212:
 2592              	.L233:
1777:src/keys.c    **** 	    return process_arg_shuffle(0);
 2593              		.loc 1 1777 4 is_stmt 1 view .LVU809
1777:src/keys.c    **** 	    return process_arg_shuffle(0);
 2594              		.loc 1 1777 8 is_stmt 0 view .LVU810
 2595 0312 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1777:src/keys.c    **** 	    return process_arg_shuffle(0);
 2596              		.loc 1 1777 7 view .LVU811
 2597 0314 9907     		lsls	r1, r3, #30
 2598 0316 7FF509AF 		bpl	.L232
1778:src/keys.c    **** 	case K52:	// Y
 2599              		.loc 1 1778 6 is_stmt 1 view .LVU812
1778:src/keys.c    **** 	case K52:	// Y
 2600              		.loc 1 1778 13 is_stmt 0 view .LVU813
 2601 031a 0020     		movs	r0, #0
 2602              	.LVL213:
 2603              	.L307:
1922:src/keys.c    **** 
 2604              		.loc 1 1922 1 view .LVU814
 2605 031c 03B0     		add	sp, sp, #12
 2606              		.cfi_remember_state
 2607              		.cfi_def_cfa_offset 36
 2608              	.LVL214:
1922:src/keys.c    **** 
 2609              		.loc 1 1922 1 view .LVU815
 2610              		@ sp needed
 2611 031e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2612              		.cfi_restore 14
 2613              		.cfi_restore 11
 2614              		.cfi_restore 10
 2615              		.cfi_restore 9
 2616              		.cfi_restore 8
 2617              		.cfi_restore 7
 2618              		.cfi_restore 6
 2619              		.cfi_restore 5
 2620              		.cfi_restore 4
 2621              		.cfi_def_cfa_offset 0
 2622              	.LVL215:
1784:src/keys.c    **** #else
 2623              		.loc 1 1784 13 view .LVU816
 2624 0322 FFF7FEBF 		b	process_arg_shuffle
 2625              	.LVL216:
 2626              	.L234:
 2627              		.cfi_restore_state
1780:src/keys.c    **** 	    return process_arg_shuffle(1);
 2628              		.loc 1 1780 4 is_stmt 1 view .LVU817
1780:src/keys.c    **** 	    return process_arg_shuffle(1);
 2629              		.loc 1 1780 8 is_stmt 0 view .LVU818
 2630 0326 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccGwaFaD.s 			page 107


1780:src/keys.c    **** 	    return process_arg_shuffle(1);
 2631              		.loc 1 1780 7 view .LVU819
 2632 0328 9A07     		lsls	r2, r3, #30
 2633 032a 7FF5FFAE 		bpl	.L232
1781:src/keys.c    **** 	case K53:       // Z
 2634              		.loc 1 1781 6 is_stmt 1 view .LVU820
1781:src/keys.c    **** 	case K53:       // Z
 2635              		.loc 1 1781 13 is_stmt 0 view .LVU821
 2636 032e 0120     		movs	r0, #1
 2637              	.LVL217:
1781:src/keys.c    **** 	case K53:       // Z
 2638              		.loc 1 1781 13 view .LVU822
 2639 0330 F4E7     		b	.L307
 2640              	.LVL218:
 2641              	.L235:
1783:src/keys.c    **** 	    return process_arg_shuffle(2);
 2642              		.loc 1 1783 4 is_stmt 1 view .LVU823
1783:src/keys.c    **** 	    return process_arg_shuffle(2);
 2643              		.loc 1 1783 8 is_stmt 0 view .LVU824
 2644 0332 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1783:src/keys.c    **** 	    return process_arg_shuffle(2);
 2645              		.loc 1 1783 7 view .LVU825
 2646 0334 9B07     		lsls	r3, r3, #30
 2647 0336 7FF5F9AE 		bpl	.L232
1784:src/keys.c    **** #else
 2648              		.loc 1 1784 6 is_stmt 1 view .LVU826
1784:src/keys.c    **** #else
 2649              		.loc 1 1784 13 is_stmt 0 view .LVU827
 2650 033a 0220     		movs	r0, #2
 2651              	.LVL219:
1784:src/keys.c    **** #else
 2652              		.loc 1 1784 13 view .LVU828
 2653 033c EEE7     		b	.L307
 2654              	.LVL220:
 2655              	.L254:
1871:src/keys.c    **** 		break;
 2656              		.loc 1 1871 3 is_stmt 1 view .LVU829
 2657 033e 0021     		movs	r1, #0
 2658 0340 0520     		movs	r0, #5
 2659              	.LVL221:
1871:src/keys.c    **** 		break;
 2660              		.loc 1 1871 3 is_stmt 0 view .LVU830
 2661 0342 FFF7FEFF 		bl	arg_storcl
 2662              	.LVL222:
1872:src/keys.c    **** 
 2663              		.loc 1 1872 3 is_stmt 1 view .LVU831
1921:src/keys.c    **** }
 2664              		.loc 1 1921 9 is_stmt 0 view .LVU832
 2665 0346 3320     		movs	r0, #51
1872:src/keys.c    **** 
 2666              		.loc 1 1872 3 view .LVU833
 2667 0348 EDE6     		b	.L202
 2668              	.LVL223:
 2669              	.L231:
1774:src/keys.c    **** 	    return process_arg_shuffle(3);
 2670              		.loc 1 1774 4 is_stmt 1 view .LVU834
1774:src/keys.c    **** 	    return process_arg_shuffle(3);
ARM GAS  /tmp/ccGwaFaD.s 			page 108


 2671              		.loc 1 1774 8 is_stmt 0 view .LVU835
 2672 034a AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1774:src/keys.c    **** 	    return process_arg_shuffle(3);
 2673              		.loc 1 1774 7 view .LVU836
 2674 034c 9807     		lsls	r0, r3, #30
 2675              	.LVL224:
1774:src/keys.c    **** 	    return process_arg_shuffle(3);
 2676              		.loc 1 1774 7 view .LVU837
 2677 034e 7FF5EDAE 		bpl	.L232
1775:src/keys.c    **** 	case K51:       // X
 2678              		.loc 1 1775 6 is_stmt 1 view .LVU838
1775:src/keys.c    **** 	case K51:       // X
 2679              		.loc 1 1775 13 is_stmt 0 view .LVU839
 2680 0352 0320     		movs	r0, #3
 2681 0354 E2E7     		b	.L307
 2682              	.LVL225:
 2683              	.L252:
1831:src/keys.c    **** 		break;
 2684              		.loc 1 1831 3 is_stmt 1 view .LVU840
 2685 0356 0121     		movs	r1, #1
 2686 0358 0420     		movs	r0, #4
 2687              	.LVL226:
1831:src/keys.c    **** 		break;
 2688              		.loc 1 1831 3 is_stmt 0 view .LVU841
 2689 035a FFF7FEFF 		bl	arg_storcl
 2690              	.LVL227:
1832:src/keys.c    **** #else
 2691              		.loc 1 1832 3 is_stmt 1 view .LVU842
1921:src/keys.c    **** }
 2692              		.loc 1 1921 9 is_stmt 0 view .LVU843
 2693 035e 3320     		movs	r0, #51
1832:src/keys.c    **** #else
 2694              		.loc 1 1832 3 view .LVU844
 2695 0360 E1E6     		b	.L202
 2696              	.LVL228:
 2697              	.L262:
1896:src/keys.c    **** 			if (State2.dot)
 2698              		.loc 1 1896 3 is_stmt 1 view .LVU845
1896:src/keys.c    **** 			if (State2.dot)
 2699              		.loc 1 1896 13 is_stmt 0 view .LVU846
 2700 0362 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
1896:src/keys.c    **** 			if (State2.dot)
 2701              		.loc 1 1896 6 view .LVU847
 2702 0364 83BB     		cbnz	r3, .L263
1897:src/keys.c    **** 				State2.dot = 0;
 2703              		.loc 1 1897 4 is_stmt 1 view .LVU848
1897:src/keys.c    **** 				State2.dot = 0;
 2704              		.loc 1 1897 8 is_stmt 0 view .LVU849
 2705 0366 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1897:src/keys.c    **** 				State2.dot = 0;
 2706              		.loc 1 1897 7 view .LVU850
 2707 0368 13F04001 		ands	r1, r3, #64
 2708 036c CBD1     		bne	.L264
1899:src/keys.c    **** 				State2.local = 0;
 2709              		.loc 1 1899 9 is_stmt 1 view .LVU851
1899:src/keys.c    **** 				State2.local = 0;
 2710              		.loc 1 1899 13 is_stmt 0 view .LVU852
ARM GAS  /tmp/ccGwaFaD.s 			page 109


 2711 036e AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
1899:src/keys.c    **** 				State2.local = 0;
 2712              		.loc 1 1899 12 view .LVU853
 2713 0370 12F00100 		ands	r0, r2, #1
 2714              	.LVL229:
1899:src/keys.c    **** 				State2.local = 0;
 2715              		.loc 1 1899 12 view .LVU854
 2716 0374 55D1     		bne	.L313
1901:src/keys.c    **** 				State2.ind = 0;
 2717              		.loc 1 1901 9 is_stmt 1 view .LVU855
1901:src/keys.c    **** 				State2.ind = 0;
 2718              		.loc 1 1901 12 is_stmt 0 view .LVU856
 2719 0376 1906     		lsls	r1, r3, #24
 2720 0378 7FF5D2AE 		bpl	.L266
1902:src/keys.c    **** 			else
 2721              		.loc 1 1902 5 is_stmt 1 view .LVU857
1902:src/keys.c    **** 			else
 2722              		.loc 1 1902 16 is_stmt 0 view .LVU858
 2723 037c 60F3C713 		bfi	r3, r0, #7, #1
 2724 0380 6B75     		strb	r3, [r5, #21]
1921:src/keys.c    **** }
 2725              		.loc 1 1921 9 view .LVU859
 2726 0382 3320     		movs	r0, #51
 2727 0384 CFE6     		b	.L202
 2728              	.LVL230:
 2729              	.L311:
1875:src/keys.c    **** 			if (argcmds[base].label) {
 2730              		.loc 1 1875 43 discriminator 1 view .LVU860
 2731 0386 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2732 0388 13F0C00F 		tst	r3, #192
 2733 038c 0FD1     		bne	.L257
1876:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2734              		.loc 1 1876 4 is_stmt 1 view .LVU861
1876:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2735              		.loc 1 1876 7 is_stmt 0 view .LVU862
 2736 038e BEF1000F 		cmp	lr, #0
 2737 0392 4BD1     		bne	.L314
1881:src/keys.c    **** 				reset_arg();
 2738              		.loc 1 1881 11 is_stmt 1 view .LVU863
1881:src/keys.c    **** 				reset_arg();
 2739              		.loc 1 1881 14 is_stmt 0 view .LVU864
 2740 0394 4E2F     		cmp	r7, #78
 2741 0396 5BD0     		beq	.L315
1884:src/keys.c    **** 				reset_arg();
 2742              		.loc 1 1884 11 is_stmt 1 view .LVU865
1884:src/keys.c    **** 				reset_arg();
 2743              		.loc 1 1884 14 is_stmt 0 view .LVU866
 2744 0398 4F2F     		cmp	r7, #79
 2745 039a 5ED0     		beq	.L316
1887:src/keys.c    **** 				State2.dot = 1;
 2746              		.loc 1 1887 11 is_stmt 1 view .LVU867
1887:src/keys.c    **** 				State2.dot = 1;
 2747              		.loc 1 1887 14 is_stmt 0 view .LVU868
 2748 039c 019A     		ldr	r2, [sp, #4]
 2749 039e 002A     		cmp	r2, #0
 2750 03a0 3FF4C0AE 		beq	.L304
1888:src/keys.c    **** 		} else if (State2.numdigit > 0)
ARM GAS  /tmp/ccGwaFaD.s 			page 110


 2751              		.loc 1 1888 5 is_stmt 1 view .LVU869
1888:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2752              		.loc 1 1888 16 is_stmt 0 view .LVU870
 2753 03a4 43F04003 		orr	r3, r3, #64
 2754 03a8 6B75     		strb	r3, [r5, #21]
1921:src/keys.c    **** }
 2755              		.loc 1 1921 9 view .LVU871
 2756 03aa 3320     		movs	r0, #51
 2757              	.LVL231:
1921:src/keys.c    **** }
 2758              		.loc 1 1921 9 view .LVU872
 2759 03ac BBE6     		b	.L202
 2760              	.LVL232:
 2761              	.L257:
1889:src/keys.c    **** 			return arg_eval(State2.digval);
 2762              		.loc 1 1889 10 is_stmt 1 view .LVU873
1891:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2763              		.loc 1 1891 8 view .LVU874
1891:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2764              		.loc 1 1891 11 is_stmt 0 view .LVU875
 2765 03ae B8F1000F 		cmp	r8, #0
 2766 03b2 3FF4B7AE 		beq	.L304
1892:src/keys.c    **** 		break;
 2767              		.loc 1 1892 4 is_stmt 1 view .LVU876
1892:src/keys.c    **** 		break;
 2768              		.loc 1 1892 27 is_stmt 0 view .LVU877
 2769 03b6 C3F38012 		ubfx	r2, r3, #6, #1
1892:src/keys.c    **** 		break;
 2770              		.loc 1 1892 19 view .LVU878
 2771 03ba C2F10102 		rsb	r2, r2, #1
1892:src/keys.c    **** 		break;
 2772              		.loc 1 1892 15 view .LVU879
 2773 03be 62F38613 		bfi	r3, r2, #6, #1
 2774 03c2 6B75     		strb	r3, [r5, #21]
1921:src/keys.c    **** }
 2775              		.loc 1 1921 9 view .LVU880
 2776 03c4 3320     		movs	r0, #51
 2777              	.LVL233:
1921:src/keys.c    **** }
 2778              		.loc 1 1921 9 view .LVU881
 2779 03c6 AEE6     		b	.L202
 2780              	.LVL234:
 2781              	.L263:
1907:src/keys.c    **** 			if (State2.shuffle)
 2782              		.loc 1 1907 4 is_stmt 1 view .LVU882
1908:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2783              		.loc 1 1908 8 is_stmt 0 view .LVU883
 2784 03c8 AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
1907:src/keys.c    **** 			if (State2.shuffle)
 2785              		.loc 1 1907 4 view .LVU884
 2786 03ca 013B     		subs	r3, r3, #1
 2787 03cc DBB2     		uxtb	r3, r3
1908:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2788              		.loc 1 1908 7 view .LVU885
 2789 03ce 9207     		lsls	r2, r2, #30
1907:src/keys.c    **** 			if (State2.shuffle)
 2790              		.loc 1 1907 4 view .LVU886
ARM GAS  /tmp/ccGwaFaD.s 			page 111


 2791 03d0 EB72     		strb	r3, [r5, #11]
1908:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2792              		.loc 1 1908 4 is_stmt 1 view .LVU887
1908:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2793              		.loc 1 1908 7 is_stmt 0 view .LVU888
 2794 03d2 14D5     		bpl	.L267
1909:src/keys.c    **** 			else
 2795              		.loc 1 1909 5 is_stmt 1 view .LVU889
1909:src/keys.c    **** 			else
 2796              		.loc 1 1909 19 is_stmt 0 view .LVU890
 2797 03d4 2A89     		ldrh	r2, [r5, #8]
1909:src/keys.c    **** 			else
 2798              		.loc 1 1909 46 view .LVU891
 2799 03d6 5B00     		lsls	r3, r3, #1
1909:src/keys.c    **** 			else
 2800              		.loc 1 1909 26 view .LVU892
 2801 03d8 0321     		movs	r1, #3
 2802 03da 01FA03F3 		lsl	r3, r1, r3
1909:src/keys.c    **** 			else
 2803              		.loc 1 1909 19 view .LVU893
 2804 03de 22EA0303 		bic	r3, r2, r3
 2805 03e2 2B81     		strh	r3, [r5, #8]	@ movhi
1921:src/keys.c    **** }
 2806              		.loc 1 1921 9 view .LVU894
 2807 03e4 3320     		movs	r0, #51
 2808              	.LVL235:
1921:src/keys.c    **** }
 2809              		.loc 1 1921 9 view .LVU895
 2810 03e6 9EE6     		b	.L202
 2811              	.LVL236:
 2812              	.L247:
1821:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2813              		.loc 1 1821 4 is_stmt 1 view .LVU896
 2814 03e8 FFF7FEFF 		bl	reset_arg
 2815              	.LVL237:
1822:src/keys.c    **** 		}
 2816              		.loc 1 1822 4 view .LVU897
1822:src/keys.c    **** 		}
 2817              		.loc 1 1822 11 is_stmt 0 view .LVU898
 2818 03ec 40F27510 		movw	r0, #373
 2819 03f0 99E6     		b	.L202
 2820              	.LVL238:
 2821              	.L241:
 2822              	.LBB372:
 2823              	.LBB370:
1665:src/keys.c    **** 		}
 2824              		.loc 1 1665 4 is_stmt 1 view .LVU899
1665:src/keys.c    **** 		}
 2825              		.loc 1 1665 17 is_stmt 0 view .LVU900
 2826 03f2 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
 2827 03f4 43F00103 		orr	r3, r3, #1
 2828 03f8 AB75     		strb	r3, [r5, #22]
1675:src/keys.c    **** }
 2829              		.loc 1 1675 9 view .LVU901
 2830 03fa 3320     		movs	r0, #51
 2831              	.LVL239:
1665:src/keys.c    **** 		}
ARM GAS  /tmp/ccGwaFaD.s 			page 112


 2832              		.loc 1 1665 17 view .LVU902
 2833 03fc 93E6     		b	.L202
 2834              	.LVL240:
 2835              	.L267:
1665:src/keys.c    **** 		}
 2836              		.loc 1 1665 17 view .LVU903
 2837              	.LBE370:
 2838              	.LBE372:
1911:src/keys.c    **** 		}
 2839              		.loc 1 1911 5 is_stmt 1 view .LVU904
1911:src/keys.c    **** 		}
 2840              		.loc 1 1911 19 is_stmt 0 view .LVU905
 2841 03fe 2B89     		ldrh	r3, [r5, #8]
 2842 0400 194A     		ldr	r2, .L319
 2843 0402 A2FB0323 		umull	r2, r3, r2, r3
 2844 0406 DB08     		lsrs	r3, r3, #3
 2845 0408 2B81     		strh	r3, [r5, #8]	@ movhi
1921:src/keys.c    **** }
 2846              		.loc 1 1921 9 view .LVU906
 2847 040a 3320     		movs	r0, #51
 2848              	.LVL241:
1921:src/keys.c    **** }
 2849              		.loc 1 1921 9 view .LVU907
 2850 040c 8BE6     		b	.L202
 2851              	.LVL242:
 2852              	.L310:
1768:src/keys.c    **** 		else if (base == RARG_RCL)
 2853              		.loc 1 1768 4 is_stmt 1 view .LVU908
1768:src/keys.c    **** 		else if (base == RARG_RCL)
 2854              		.loc 1 1768 12 is_stmt 0 view .LVU909
 2855 040e 7723     		movs	r3, #119
 2856 0410 EB77     		strb	r3, [r5, #31]
1921:src/keys.c    **** }
 2857              		.loc 1 1921 9 view .LVU910
 2858 0412 3320     		movs	r0, #51
 2859              	.LVL243:
1921:src/keys.c    **** }
 2860              		.loc 1 1921 9 view .LVU911
 2861 0414 87E6     		b	.L202
 2862              	.LVL244:
 2863              	.L312:
 2864              	.LBB373:
 2865              	.LBB371:
1660:src/keys.c    **** 			return arg_eval(regX_idx);
 2866              		.loc 1 1660 4 is_stmt 1 view .LVU912
1660:src/keys.c    **** 			return arg_eval(regX_idx);
 2867              		.loc 1 1660 17 is_stmt 0 view .LVU913
 2868 0416 AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
 2869 0418 63F30002 		bfi	r2, r3, #0, #1
1661:src/keys.c    **** 		}
 2870              		.loc 1 1661 11 view .LVU914
 2871 041c 6420     		movs	r0, #100
 2872              	.LVL245:
1660:src/keys.c    **** 			return arg_eval(regX_idx);
 2873              		.loc 1 1660 17 view .LVU915
 2874 041e AA75     		strb	r2, [r5, #22]
1661:src/keys.c    **** 		}
ARM GAS  /tmp/ccGwaFaD.s 			page 113


 2875              		.loc 1 1661 4 is_stmt 1 view .LVU916
 2876 0420 CAE6     		b	.L306
 2877              	.LVL246:
 2878              	.L313:
1661:src/keys.c    **** 		}
 2879              		.loc 1 1661 4 is_stmt 0 view .LVU917
 2880              	.LBE371:
 2881              	.LBE373:
1900:src/keys.c    **** 			else if (State2.ind)
 2882              		.loc 1 1900 5 is_stmt 1 view .LVU918
1900:src/keys.c    **** 			else if (State2.ind)
 2883              		.loc 1 1900 18 is_stmt 0 view .LVU919
 2884 0422 61F30002 		bfi	r2, r1, #0, #1
 2885 0426 AA75     		strb	r2, [r5, #22]
1921:src/keys.c    **** }
 2886              		.loc 1 1921 9 view .LVU920
 2887 0428 3320     		movs	r0, #51
 2888 042a 7CE6     		b	.L202
 2889              	.LVL247:
 2890              	.L314:
1877:src/keys.c    **** 				State2.multi = 1;
 2891              		.loc 1 1877 5 is_stmt 1 view .LVU921
 2892              	.LBB374:
 2893              	.LBI374:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 2894              		.loc 1 506 13 view .LVU922
 2895              	.LBB375:
 507:src/keys.c    **** 		return;
 2896              		.loc 1 507 2 view .LVU923
 507:src/keys.c    **** 		return;
 2897              		.loc 1 507 6 is_stmt 0 view .LVU924
 2898 042c FFF7FEFF 		bl	is_bad_cmdline
 2899              	.LVL248:
 507:src/keys.c    **** 		return;
 2900              		.loc 1 507 5 view .LVU925
 2901 0430 20B9     		cbnz	r0, .L259
 2902              	.LBE375:
 2903              	.LBE374:
1877:src/keys.c    **** 				State2.multi = 1;
 2904              		.loc 1 1877 31 view .LVU926
 2905 0432 A7F14200 		sub	r0, r7, #66
 2906              	.LBB377:
 2907              	.LBB376:
 2908 0436 C0B2     		uxtb	r0, r0
 2909 0438 FFF7FEFF 		bl	init_arg.part.0
 2910              	.LVL249:
 2911              	.L259:
1877:src/keys.c    **** 				State2.multi = 1;
 2912              		.loc 1 1877 31 view .LVU927
 2913              	.LBE376:
 2914              	.LBE377:
1878:src/keys.c    **** 				State2.alphashift = 0;
 2915              		.loc 1 1878 5 is_stmt 1 view .LVU928
1879:src/keys.c    **** 				State2.rarg = 0;
 2916              		.loc 1 1879 5 view .LVU929
1880:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2917              		.loc 1 1880 5 view .LVU930
ARM GAS  /tmp/ccGwaFaD.s 			page 114


1878:src/keys.c    **** 				State2.alphashift = 0;
 2918              		.loc 1 1878 18 is_stmt 0 view .LVU931
 2919 043c 6B69     		ldr	r3, [r5, #20]
 2920 043e 23F44013 		bic	r3, r3, #3145728
 2921 0442 23F40063 		bic	r3, r3, #2048
 2922 0446 43F40063 		orr	r3, r3, #2048
 2923 044a 6B61     		str	r3, [r5, #20]
1921:src/keys.c    **** }
 2924              		.loc 1 1921 9 view .LVU932
 2925 044c 3320     		movs	r0, #51
 2926 044e 6AE6     		b	.L202
 2927              	.LVL250:
 2928              	.L315:
1882:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2929              		.loc 1 1882 5 is_stmt 1 view .LVU933
 2930 0450 FFF7FEFF 		bl	reset_arg
 2931              	.LVL251:
1883:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2932              		.loc 1 1883 5 view .LVU934
1883:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2933              		.loc 1 1883 12 is_stmt 0 view .LVU935
 2934 0454 40F25510 		movw	r0, #341
 2935 0458 65E6     		b	.L202
 2936              	.LVL252:
 2937              	.L316:
1885:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2938              		.loc 1 1885 5 is_stmt 1 view .LVU936
 2939 045a FFF7FEFF 		bl	reset_arg
 2940              	.LVL253:
1886:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2941              		.loc 1 1886 5 view .LVU937
1886:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2942              		.loc 1 1886 12 is_stmt 0 view .LVU938
 2943 045e 4FF4AB70 		mov	r0, #342
 2944 0462 60E6     		b	.L202
 2945              	.LVL254:
 2946              	.L220:
1705:src/keys.c    **** 	  case regY_idx:
 2947              		.loc 1 1705 6 is_stmt 1 view .LVU939
1705:src/keys.c    **** 	  case regY_idx:
 2948              		.loc 1 1705 13 is_stmt 0 view .LVU940
 2949 0464 0120     		movs	r0, #1
 2950              	.LVL255:
1705:src/keys.c    **** 	  case regY_idx:
 2951              		.loc 1 1705 13 view .LVU941
 2952 0466 BBE6     		b	.L305
 2953              	.L320:
 2954              		.align	2
 2955              	.L319:
 2956 0468 CDCCCCCC 		.word	-858993459
 2957              		.cfi_endproc
 2958              	.LFE37:
 2960              		.section	.text.cur_shift,"ax",%progbits
 2961              		.align	1
 2962              		.p2align 2,,3
 2963              		.global	cur_shift
 2964              		.syntax unified
ARM GAS  /tmp/ccGwaFaD.s 			page 115


 2965              		.thumb
 2966              		.thumb_func
 2967              		.fpu fpv4-sp-d16
 2969              	cur_shift:
 2970              	.LFB0:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2971              		.loc 1 86 29 is_stmt 1 view -0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 0
 2974              		@ frame_needed = 0, uses_anonymous_args = 0
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2975              		.loc 1 87 2 view .LVU943
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2976              		.loc 1 86 29 is_stmt 0 view .LVU944
 2977 0000 08B5     		push	{r3, lr}
 2978              		.cfi_def_cfa_offset 8
 2979              		.cfi_offset 3, -8
 2980              		.cfi_offset 14, -4
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2981              		.loc 1 87 18 view .LVU945
 2982 0002 FFF7FEFF 		bl	shift_down
 2983              	.LVL256:
  88:src/keys.c    **** }
 2984              		.loc 1 88 2 is_stmt 1 view .LVU946
  88:src/keys.c    **** }
 2985              		.loc 1 88 52 is_stmt 0 view .LVU947
 2986 0006 08B9     		cbnz	r0, .L322
  88:src/keys.c    **** }
 2987              		.loc 1 88 52 discriminator 1 view .LVU948
 2988 0008 014B     		ldr	r3, .L324
 2989 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2990              	.LVL257:
 2991              	.L322:
  89:src/keys.c    **** 
 2992              		.loc 1 89 1 discriminator 4 view .LVU949
 2993 000c 08BD     		pop	{r3, pc}
 2994              	.L325:
 2995 000e 00BF     		.align	2
 2996              	.L324:
 2997 0010 00000000 		.word	StateWhileOn
 2998              		.cfi_endproc
 2999              	.LFE0:
 3001              		.section	.text.reset_shift,"ax",%progbits
 3002              		.align	1
 3003              		.p2align 2,,3
 3004              		.global	reset_shift
 3005              		.syntax unified
 3006              		.thumb
 3007              		.thumb_func
 3008              		.fpu fpv4-sp-d16
 3010              	reset_shift:
 3011              	.LFB2:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3012              		.loc 1 104 31 is_stmt 1 view -0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 0
 3015              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccGwaFaD.s 			page 116


 105:src/keys.c    **** }
 3016              		.loc 1 105 2 view .LVU951
 3017              	.LVL258:
 3018              	.LBB378:
 3019              	.LBI378:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 3020              		.loc 1 94 20 view .LVU952
 3021              	.LBB379:
  95:src/keys.c    **** 	State2.shifts = shift;
 3022              		.loc 1 95 2 view .LVU953
 3023              	.LBB380:
 3024              	.LBI380:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3025              		.loc 1 86 13 view .LVU954
 3026              	.LBB381:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3027              		.loc 1 87 2 view .LVU955
 3028              	.LBE381:
 3029              	.LBE380:
 3030              	.LBE379:
 3031              	.LBE378:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3032              		.loc 1 104 31 is_stmt 0 view .LVU956
 3033 0000 08B5     		push	{r3, lr}
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 3, -8
 3036              		.cfi_offset 14, -4
 3037              	.LBB385:
 3038              	.LBB384:
 3039              	.LBB383:
 3040              	.LBB382:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3041              		.loc 1 87 18 view .LVU957
 3042 0002 FFF7FEFF 		bl	shift_down
 3043              	.LVL259:
  88:src/keys.c    **** }
 3044              		.loc 1 88 2 is_stmt 1 view .LVU958
  88:src/keys.c    **** }
 3045              		.loc 1 88 52 is_stmt 0 view .LVU959
 3046 0006 034B     		ldr	r3, .L331
 3047 0008 00B9     		cbnz	r0, .L327
 3048 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3049              	.LVL260:
 3050              	.L327:
  88:src/keys.c    **** }
 3051              		.loc 1 88 52 view .LVU960
 3052              	.LBE382:
 3053              	.LBE383:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3054              		.loc 1 96 2 is_stmt 1 view .LVU961
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3055              		.loc 1 96 16 is_stmt 0 view .LVU962
 3056 000c 0022     		movs	r2, #0
 3057 000e 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 3058              		.loc 1 98 2 is_stmt 1 view .LVU963
 3059              	.LVL261:
ARM GAS  /tmp/ccGwaFaD.s 			page 117


  98:src/keys.c    **** }
 3060              		.loc 1 98 2 is_stmt 0 view .LVU964
 3061              	.LBE384:
 3062              	.LBE385:
 106:src/keys.c    **** 
 3063              		.loc 1 106 1 view .LVU965
 3064 0010 08BD     		pop	{r3, pc}
 3065              	.L332:
 3066 0012 00BF     		.align	2
 3067              	.L331:
 3068 0014 00000000 		.word	StateWhileOn
 3069              		.cfi_endproc
 3070              	.LFE2:
 3072              		.section	.text.keycode_to_row_column,"ax",%progbits
 3073              		.align	1
 3074              		.p2align 2,,3
 3075              		.global	keycode_to_row_column
 3076              		.syntax unified
 3077              		.thumb
 3078              		.thumb_func
 3079              		.fpu fpv4-sp-d16
 3081              	keycode_to_row_column:
 3082              	.LVL262:
 3083              	.LFB6:
 170:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3084              		.loc 1 170 1 is_stmt 1 view -0
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 0
 3087              		@ frame_needed = 0, uses_anonymous_args = 0
 3088              		@ link register save eliminated.
 171:src/keys.c    **** }
 3089              		.loc 1 171 2 view .LVU967
 171:src/keys.c    **** }
 3090              		.loc 1 171 18 is_stmt 0 view .LVU968
 3091 0000 074A     		ldr	r2, .L334
 3092 0002 82FB0032 		smull	r3, r2, r2, r0
 3093 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 171:src/keys.c    **** }
 3094              		.loc 1 171 24 view .LVU969
 3095 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3096 000e 5200     		lsls	r2, r2, #1
 171:src/keys.c    **** }
 3097              		.loc 1 171 33 view .LVU970
 3098 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3099 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 171:src/keys.c    **** }
 3100              		.loc 1 171 12 view .LVU971
 3101 0018 02F10B00 		add	r0, r2, #11
 3102              	.LVL263:
 172:src/keys.c    **** 
 3103              		.loc 1 172 1 view .LVU972
 3104 001c 1844     		add	r0, r0, r3
 3105 001e 7047     		bx	lr
 3106              	.L335:
 3107              		.align	2
 3108              	.L334:
 3109 0020 ABAAAA2A 		.word	715827883
ARM GAS  /tmp/ccGwaFaD.s 			page 118


 3110              		.cfi_endproc
 3111              	.LFE6:
 3113              		.section	.text.row_column_to_keycode,"ax",%progbits
 3114              		.align	1
 3115              		.p2align 2,,3
 3116              		.global	row_column_to_keycode
 3117              		.syntax unified
 3118              		.thumb
 3119              		.thumb_func
 3120              		.fpu fpv4-sp-d16
 3122              	row_column_to_keycode:
 3123              	.LVL264:
 3124              	.LFB7:
 180:src/keys.c    **** 	int row = c / 10 - 1;
 3125              		.loc 1 180 1 is_stmt 1 view -0
 3126              		.cfi_startproc
 3127              		@ args = 0, pretend = 0, frame = 0
 3128              		@ frame_needed = 0, uses_anonymous_args = 0
 3129              		@ link register save eliminated.
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3130              		.loc 1 181 2 view .LVU974
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3131              		.loc 1 181 14 is_stmt 0 view .LVU975
 3132 0000 0E4A     		ldr	r2, .L342
 3133 0002 82FB0032 		smull	r3, r2, r2, r0
 3134 0006 C317     		asrs	r3, r0, #31
 3135 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 182:src/keys.c    **** 
 3136              		.loc 1 182 14 view .LVU976
 3137 000c 03EB8302 		add	r2, r3, r3, lsl #2
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3138              		.loc 1 181 6 view .LVU977
 3139 0010 013B     		subs	r3, r3, #1
 3140              	.LVL265:
 182:src/keys.c    **** 
 3141              		.loc 1 182 2 is_stmt 1 view .LVU978
 182:src/keys.c    **** 
 3142              		.loc 1 182 14 is_stmt 0 view .LVU979
 3143 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3144              	.LVL266:
 184:src/keys.c    **** 		return -1;
 3145              		.loc 1 184 5 view .LVU980
 3146 0016 062B     		cmp	r3, #6
 182:src/keys.c    **** 
 3147              		.loc 1 182 6 view .LVU981
 3148 0018 00F1FF30 		add	r0, r0, #-1
 3149              	.LVL267:
 184:src/keys.c    **** 		return -1;
 3150              		.loc 1 184 2 is_stmt 1 view .LVU982
 184:src/keys.c    **** 		return -1;
 3151              		.loc 1 184 5 is_stmt 0 view .LVU983
 3152 001c 0AD8     		bhi	.L341
 184:src/keys.c    **** 		return -1;
 3153              		.loc 1 184 36 discriminator 1 view .LVU984
 3154 001e 012B     		cmp	r3, #1
 3155 0020 CCBF     		ite	gt
 3156 0022 0422     		movgt	r2, #4
ARM GAS  /tmp/ccGwaFaD.s 			page 119


 3157 0024 0522     		movle	r2, #5
 184:src/keys.c    **** 		return -1;
 3158              		.loc 1 184 25 discriminator 1 view .LVU985
 3159 0026 8242     		cmp	r2, r0
 3160 0028 04DB     		blt	.L341
 186:src/keys.c    **** }
 3161              		.loc 1 186 2 is_stmt 1 view .LVU986
 186:src/keys.c    **** }
 3162              		.loc 1 186 13 is_stmt 0 view .LVU987
 3163 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3164              	.LVL268:
 186:src/keys.c    **** }
 3165              		.loc 1 186 17 view .LVU988
 3166 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3167              	.LVL269:
 186:src/keys.c    **** }
 3168              		.loc 1 186 17 view .LVU989
 3169 0032 7047     		bx	lr
 3170              	.LVL270:
 3171              	.L341:
 185:src/keys.c    **** 	return row * 6 + col;
 3172              		.loc 1 185 10 view .LVU990
 3173 0034 4FF0FF30 		mov	r0, #-1
 3174              	.LVL271:
 187:src/keys.c    **** 
 3175              		.loc 1 187 1 view .LVU991
 3176 0038 7047     		bx	lr
 3177              	.L343:
 3178 003a 00BF     		.align	2
 3179              	.L342:
 3180 003c 67666666 		.word	1717986919
 3181              		.cfi_endproc
 3182              	.LFE7:
 3184              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3185              		.align	1
 3186              		.p2align 2,,3
 3187              		.global	keycode_to_digit_or_register
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu fpv4-sp-d16
 3193              	keycode_to_digit_or_register:
 3194              	.LVL272:
 3195              	.LFB8:
 201:src/keys.c    ****   static const unsigned char map[] = {
 3196              		.loc 1 201 1 is_stmt 1 view -0
 3197              		.cfi_startproc
 3198              		@ args = 0, pretend = 0, frame = 0
 3199              		@ frame_needed = 0, uses_anonymous_args = 0
 3200              		@ link register save eliminated.
 202:src/keys.c    ****     // K00 - K05
 3201              		.loc 1 202 3 view .LVU993
 224:src/keys.c    **** }
 3202              		.loc 1 224 3 view .LVU994
 3203              	.LBB386:
 3204              	.LBI386:
 121:src/keys.c    **** {
ARM GAS  /tmp/ccGwaFaD.s 			page 120


 3205              		.loc 1 121 12 view .LVU995
 3206              	.LBB387:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3207              		.loc 1 123 2 view .LVU996
 133:src/keys.c    **** }
 3208              		.loc 1 133 2 view .LVU997
 133:src/keys.c    **** }
 3209              		.loc 1 133 23 is_stmt 0 view .LVU998
 3210 0000 024B     		ldr	r3, .L345
 3211              	.LBE387:
 3212              	.LBE386:
 224:src/keys.c    **** }
 3213              		.loc 1 224 28 view .LVU999
 3214 0002 034A     		ldr	r2, .L345+4
 3215              	.LBB389:
 3216              	.LBB388:
 133:src/keys.c    **** }
 3217              		.loc 1 133 23 view .LVU1000
 3218 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3219              	.LBE388:
 3220              	.LBE389:
 225:src/keys.c    **** #else
 3221              		.loc 1 225 1 view .LVU1001
 3222 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3223              	.LVL273:
 225:src/keys.c    **** #else
 3224              		.loc 1 225 1 view .LVU1002
 3225 0008 7047     		bx	lr
 3226              	.L346:
 3227 000a 00BF     		.align	2
 3228              	.L345:
 3229 000c 00000000 		.word	.LANCHOR1
 3230 0010 00000000 		.word	.LANCHOR0
 3231              		.cfi_endproc
 3232              	.LFE8:
 3234              		.section	.text.init_state,"ax",%progbits
 3235              		.align	1
 3236              		.p2align 2,,3
 3237              		.global	init_state
 3238              		.syntax unified
 3239              		.thumb
 3240              		.thumb_func
 3241              		.fpu fpv4-sp-d16
 3243              	init_state:
 3244              	.LFB13:
 569:src/keys.c    **** #ifndef REALBUILD
 3245              		.loc 1 569 23 is_stmt 1 view -0
 3246              		.cfi_startproc
 3247              		@ args = 0, pretend = 0, frame = 0
 3248              		@ frame_needed = 0, uses_anonymous_args = 0
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3249              		.loc 1 571 2 view .LVU1004
 569:src/keys.c    **** #ifndef REALBUILD
 3250              		.loc 1 569 23 is_stmt 0 view .LVU1005
 3251 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3252              		.cfi_def_cfa_offset 24
 3253              		.cfi_offset 4, -24
ARM GAS  /tmp/ccGwaFaD.s 			page 121


 3254              		.cfi_offset 5, -20
 3255              		.cfi_offset 6, -16
 3256              		.cfi_offset 7, -12
 3257              		.cfi_offset 8, -8
 3258              		.cfi_offset 14, -4
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3259              		.loc 1 571 25 view .LVU1006
 3260 0004 154C     		ldr	r4, .L349
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3261              		.loc 1 579 10 view .LVU1007
 3262 0006 0021     		movs	r1, #0
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3263              		.loc 1 583 2 view .LVU1008
 3264 0008 1422     		movs	r2, #20
 3265 000a 04F10800 		add	r0, r4, #8
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3266              		.loc 1 579 10 view .LVU1009
 3267 000e E177     		strb	r1, [r4, #31]
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3268              		.loc 1 571 25 view .LVU1010
 3269 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 572:src/keys.c    **** #else
 3270              		.loc 1 572 25 view .LVU1011
 3271 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 576:src/keys.c    **** 	int k = LastKey;
 3272              		.loc 1 576 10 view .LVU1012
 3273 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 577:src/keys.c    **** 
 3274              		.loc 1 577 10 view .LVU1013
 3275 0016 94F91380 		ldrsb	r8, [r4, #19]
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3276              		.loc 1 583 2 view .LVU1014
 3277 001a FFF7FEFF 		bl	xset
 3278              	.LVL274:
 585:src/keys.c    **** 	update_program_bounds(1);
 3279              		.loc 1 585 17 view .LVU1015
 3280 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 584:src/keys.c    **** 	State2.runmode = 1;
 3281              		.loc 1 584 14 view .LVU1016
 3282 0020 0722     		movs	r2, #7
 585:src/keys.c    **** 	update_program_bounds(1);
 3283              		.loc 1 585 17 view .LVU1017
 3284 0022 43F04003 		orr	r3, r3, #64
 586:src/keys.c    **** 	set_lift();
 3285              		.loc 1 586 2 view .LVU1018
 3286 0026 0120     		movs	r0, #1
 584:src/keys.c    **** 	State2.runmode = 1;
 3287              		.loc 1 584 14 view .LVU1019
 3288 0028 E273     		strb	r2, [r4, #15]
 585:src/keys.c    **** 	update_program_bounds(1);
 3289              		.loc 1 585 17 view .LVU1020
 3290 002a A375     		strb	r3, [r4, #22]
 586:src/keys.c    **** 	set_lift();
 3291              		.loc 1 586 2 view .LVU1021
 3292 002c FFF7FEFF 		bl	update_program_bounds
 3293              	.LVL275:
 587:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 122


 3294              		.loc 1 587 2 view .LVU1022
 3295 0030 FFF7FEFF 		bl	set_lift
 3296              	.LVL276:
 594:src/keys.c    **** 	State2.flags = a;
 3297              		.loc 1 594 15 view .LVU1023
 3298 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 595:src/keys.c    **** #else
 3299              		.loc 1 595 15 view .LVU1024
 3300 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 599:src/keys.c    **** }
 3301              		.loc 1 599 15 view .LVU1025
 3302 0038 0949     		ldr	r1, .L349+4
 592:src/keys.c    **** #ifndef REALBUILD
 3303              		.loc 1 592 10 view .LVU1026
 3304 003a 84F81380 		strb	r8, [r4, #19]
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3305              		.loc 1 571 25 view .LVU1027
 3306 003e 05F00105 		and	r5, r5, #1
 3307              	.LVL277:
 572:src/keys.c    **** #else
 3308              		.loc 1 572 2 is_stmt 1 view .LVU1028
 572:src/keys.c    **** #else
 3309              		.loc 1 572 25 is_stmt 0 view .LVU1029
 3310 0042 F609     		lsrs	r6, r6, #7
 3311              	.LVL278:
 576:src/keys.c    **** 	int k = LastKey;
 3312              		.loc 1 576 2 is_stmt 1 view .LVU1030
 576:src/keys.c    **** 	int k = LastKey;
 3313              		.loc 1 576 10 is_stmt 0 view .LVU1031
 3314 0044 FFB2     		uxtb	r7, r7
 3315              	.LVL279:
 577:src/keys.c    **** 
 3316              		.loc 1 577 2 is_stmt 1 view .LVU1032
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3317              		.loc 1 579 2 view .LVU1033
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3318              		.loc 1 583 2 view .LVU1034
 584:src/keys.c    **** 	State2.runmode = 1;
 3319              		.loc 1 584 2 view .LVU1035
 585:src/keys.c    **** 	update_program_bounds(1);
 3320              		.loc 1 585 2 view .LVU1036
 586:src/keys.c    **** 	set_lift();
 3321              		.loc 1 586 2 view .LVU1037
 587:src/keys.c    **** 
 3322              		.loc 1 587 2 view .LVU1038
 591:src/keys.c    **** 	LastKey = k;
 3323              		.loc 1 591 2 view .LVU1039
 594:src/keys.c    **** 	State2.flags = a;
 3324              		.loc 1 594 15 is_stmt 0 view .LVU1040
 3325 0046 66F3C712 		bfi	r2, r6, #7, #1
 595:src/keys.c    **** #else
 3326              		.loc 1 595 15 view .LVU1041
 3327 004a 65F30003 		bfi	r3, r5, #0, #1
 599:src/keys.c    **** }
 3328              		.loc 1 599 15 view .LVU1042
 3329 004e 6420     		movs	r0, #100
 594:src/keys.c    **** 	State2.flags = a;
ARM GAS  /tmp/ccGwaFaD.s 			page 123


 3330              		.loc 1 594 15 view .LVU1043
 3331 0050 E275     		strb	r2, [r4, #23]
 595:src/keys.c    **** #else
 3332              		.loc 1 595 15 view .LVU1044
 3333 0052 2376     		strb	r3, [r4, #24]
 591:src/keys.c    **** 	LastKey = k;
 3334              		.loc 1 591 10 view .LVU1045
 3335 0054 A774     		strb	r7, [r4, #18]
 592:src/keys.c    **** #ifndef REALBUILD
 3336              		.loc 1 592 2 is_stmt 1 view .LVU1046
 594:src/keys.c    **** 	State2.flags = a;
 3337              		.loc 1 594 2 view .LVU1047
 595:src/keys.c    **** #else
 3338              		.loc 1 595 2 view .LVU1048
 599:src/keys.c    **** }
 3339              		.loc 1 599 2 view .LVU1049
 599:src/keys.c    **** }
 3340              		.loc 1 599 15 is_stmt 0 view .LVU1050
 3341 0056 0860     		str	r0, [r1]
 600:src/keys.c    **** 
 3342              		.loc 1 600 1 view .LVU1051
 3343 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3344              	.LVL280:
 3345              	.L350:
 600:src/keys.c    **** 
 3346              		.loc 1 600 1 view .LVU1052
 3347              		.align	2
 3348              	.L349:
 3349 005c 00000000 		.word	StateWhileOn
 3350 0060 00000000 		.word	ShowRegister
 3351              		.cfi_endproc
 3352              	.LFE13:
 3354              		.section	.text.soft_init_state,"ax",%progbits
 3355              		.align	1
 3356              		.p2align 2,,3
 3357              		.global	soft_init_state
 3358              		.syntax unified
 3359              		.thumb
 3360              		.thumb_func
 3361              		.fpu fpv4-sp-d16
 3363              	soft_init_state:
 3364              	.LFB14:
 602:src/keys.c    **** 	int soft;
 3365              		.loc 1 602 28 is_stmt 1 view -0
 3366              		.cfi_startproc
 3367              		@ args = 0, pretend = 0, frame = 0
 3368              		@ frame_needed = 0, uses_anonymous_args = 0
 603:src/keys.c    **** 	unsigned int runmode;
 3369              		.loc 1 603 2 view .LVU1054
 604:src/keys.c    **** 	unsigned int alphas;
 3370              		.loc 1 604 2 view .LVU1055
 605:src/keys.c    **** 
 3371              		.loc 1 605 2 view .LVU1056
 607:src/keys.c    **** 		CmdLineLength = 0;
 3372              		.loc 1 607 2 view .LVU1057
 602:src/keys.c    **** 	int soft;
 3373              		.loc 1 602 28 is_stmt 0 view .LVU1058
ARM GAS  /tmp/ccGwaFaD.s 			page 124


 3374 0000 38B5     		push	{r3, r4, r5, lr}
 3375              		.cfi_def_cfa_offset 16
 3376              		.cfi_offset 3, -16
 3377              		.cfi_offset 4, -12
 3378              		.cfi_offset 5, -8
 3379              		.cfi_offset 14, -4
 607:src/keys.c    **** 		CmdLineLength = 0;
 3380              		.loc 1 607 6 view .LVU1059
 3381 0002 114C     		ldr	r4, .L358
 607:src/keys.c    **** 		CmdLineLength = 0;
 3382              		.loc 1 607 5 view .LVU1060
 3383 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3384 0006 D3B9     		cbnz	r3, .L357
 613:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3385              		.loc 1 613 2 is_stmt 1 view .LVU1061
 614:src/keys.c    **** 	runmode = State2.runmode;
 3386              		.loc 1 614 17 is_stmt 0 view .LVU1062
 3387 0008 104A     		ldr	r2, .L358+4
 3388 000a 6369     		ldr	r3, [r4, #20]
 614:src/keys.c    **** 	runmode = State2.runmode;
 3389              		.loc 1 614 60 view .LVU1063
 3390 000c 1A42     		tst	r2, r3
 3391 000e 0AD0     		beq	.L354
 3392              	.L355:
 3393              	.LVL281:
 615:src/keys.c    **** 	alphas = State2.alphas;
 3394              		.loc 1 615 2 is_stmt 1 view .LVU1064
 616:src/keys.c    **** 	init_state();
 3395              		.loc 1 616 17 is_stmt 0 view .LVU1065
 3396 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3397              	.LVL282:
 616:src/keys.c    **** 	init_state();
 3398              		.loc 1 616 2 is_stmt 1 view .LVU1066
 617:src/keys.c    **** 	if (soft) {
 3399              		.loc 1 617 2 view .LVU1067
 3400 0012 FFF7FEFF 		bl	init_state
 3401              	.LVL283:
 618:src/keys.c    **** 		State2.runmode = runmode;
 3402              		.loc 1 618 2 view .LVU1068
 619:src/keys.c    **** 		State2.alphas = alphas;
 3403              		.loc 1 619 3 view .LVU1069
 620:src/keys.c    **** 	}
 3404              		.loc 1 620 3 view .LVU1070
 620:src/keys.c    **** 	}
 3405              		.loc 1 620 17 is_stmt 0 view .LVU1071
 3406 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3407 0018 05F04805 		and	r5, r5, #72
 3408 001c 23F04803 		bic	r3, r3, #72
 3409 0020 2B43     		orrs	r3, r3, r5
 3410 0022 A375     		strb	r3, [r4, #22]
 622:src/keys.c    **** 
 3411              		.loc 1 622 1 view .LVU1072
 3412 0024 38BD     		pop	{r3, r4, r5, pc}
 3413              	.LVL284:
 3414              	.L354:
 614:src/keys.c    **** 	runmode = State2.runmode;
 3415              		.loc 1 614 60 discriminator 2 view .LVU1073
ARM GAS  /tmp/ccGwaFaD.s 			page 125


 3416 0026 E368     		ldr	r3, [r4, #12]
 3417 0028 23F47F03 		bic	r3, r3, #16711680
 3418 002c 23F47F43 		bic	r3, r3, #65280
 3419 0030 B3F1E06F 		cmp	r3, #117440512
 3420 0034 ECD1     		bne	.L355
 3421              	.LVL285:
 615:src/keys.c    **** 	alphas = State2.alphas;
 3422              		.loc 1 615 2 is_stmt 1 view .LVU1074
 616:src/keys.c    **** 	init_state();
 3423              		.loc 1 616 2 view .LVU1075
 617:src/keys.c    **** 	if (soft) {
 3424              		.loc 1 617 2 view .LVU1076
 622:src/keys.c    **** 
 3425              		.loc 1 622 1 is_stmt 0 view .LVU1077
 3426 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3427              		.cfi_remember_state
 3428              		.cfi_restore 14
 3429              		.cfi_restore 5
 3430              		.cfi_restore 4
 3431              		.cfi_restore 3
 3432              		.cfi_def_cfa_offset 0
 617:src/keys.c    **** 	if (soft) {
 3433              		.loc 1 617 2 view .LVU1078
 3434 003a FFF7FEBF 		b	init_state
 3435              	.LVL286:
 3436              	.L357:
 3437              		.cfi_restore_state
 3438              	.LBB392:
 3439              	.LBI392:
 602:src/keys.c    **** 	int soft;
 3440              		.loc 1 602 6 is_stmt 1 view .LVU1079
 3441              	.LBB393:
 608:src/keys.c    **** 		CmdLineEex = 0;
 3442              		.loc 1 608 3 view .LVU1080
 609:src/keys.c    **** 		CmdLineDot = 0;
 3443              		.loc 1 609 3 view .LVU1081
 610:src/keys.c    **** 		return;
 3444              		.loc 1 610 3 view .LVU1082
 608:src/keys.c    **** 		CmdLineEex = 0;
 3445              		.loc 1 608 17 is_stmt 0 view .LVU1083
 3446 003e 0023     		movs	r3, #0
 3447 0040 A383     		strh	r3, [r4, #28]	@ movhi
 610:src/keys.c    **** 		return;
 3448              		.loc 1 610 14 view .LVU1084
 3449 0042 A377     		strb	r3, [r4, #30]
 611:src/keys.c    **** 	}
 3450              		.loc 1 611 3 is_stmt 1 view .LVU1085
 3451              	.LBE393:
 3452              	.LBE392:
 622:src/keys.c    **** 
 3453              		.loc 1 622 1 is_stmt 0 view .LVU1086
 3454 0044 38BD     		pop	{r3, r4, r5, pc}
 3455              	.L359:
 3456 0046 00BF     		.align	2
 3457              	.L358:
 3458 0048 00000000 		.word	StateWhileOn
 3459 004c 002F2004 		.word	69218048
ARM GAS  /tmp/ccGwaFaD.s 			page 126


 3460              		.cfi_endproc
 3461              	.LFE14:
 3463              		.section	.text.current_catalogue_max,"ax",%progbits
 3464              		.align	1
 3465              		.p2align 2,,3
 3466              		.global	current_catalogue_max
 3467              		.syntax unified
 3468              		.thumb
 3469              		.thumb_func
 3470              		.fpu fpv4-sp-d16
 3472              	current_catalogue_max:
 3473              	.LFB39:
2058:src/keys.c    **** 	// A quick table of catalogue sizes
 3474              		.loc 1 2058 33 is_stmt 1 view -0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 0, uses_anonymous_args = 0
 3478              		@ link register save eliminated.
2061:src/keys.c    **** 	{
 3479              		.loc 1 2061 2 view .LVU1088
2092:src/keys.c    **** #endif
 3480              		.loc 1 2092 2 view .LVU1089
2092:src/keys.c    **** #endif
 3481              		.loc 1 2092 31 is_stmt 0 view .LVU1090
 3482 0000 024B     		ldr	r3, .L361
2092:src/keys.c    **** #endif
 3483              		.loc 1 2092 24 view .LVU1091
 3484 0002 034A     		ldr	r2, .L361+4
2092:src/keys.c    **** #endif
 3485              		.loc 1 2092 31 view .LVU1092
 3486 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2094:src/keys.c    **** 
 3487              		.loc 1 2094 1 view .LVU1093
 3488 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3489 0008 7047     		bx	lr
 3490              	.L362:
 3491 000a 00BF     		.align	2
 3492              	.L361:
 3493 000c 00000000 		.word	StateWhileOn
 3494 0010 00000000 		.word	.LANCHOR2
 3495              		.cfi_endproc
 3496              	.LFE39:
 3498              		.section	.text.current_catalogue,"ax",%progbits
 3499              		.align	1
 3500              		.p2align 2,,3
 3501              		.global	current_catalogue
 3502              		.syntax unified
 3503              		.thumb
 3504              		.thumb_func
 3505              		.fpu fpv4-sp-d16
 3507              	current_catalogue:
 3508              	.LVL287:
 3509              	.LFB41:
2107:src/keys.c    **** 	// A quick table of catalogue tables
 3510              		.loc 1 2107 33 is_stmt 1 view -0
 3511              		.cfi_startproc
 3512              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccGwaFaD.s 			page 127


 3513              		@ frame_needed = 0, uses_anonymous_args = 0
 3514              		@ link register save eliminated.
2110:src/keys.c    **** 	{
 3515              		.loc 1 2110 2 view .LVU1095
2137:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3516              		.loc 1 2137 2 view .LVU1096
2138:src/keys.c    **** 	int m, i;
 3517              		.loc 1 2138 2 view .LVU1097
2138:src/keys.c    **** 	int m, i;
 3518              		.loc 1 2138 25 is_stmt 0 view .LVU1098
 3519 0000 314A     		ldr	r2, .L390
2138:src/keys.c    **** 	int m, i;
 3520              		.loc 1 2138 15 view .LVU1099
 3521 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3522              	.LVL288:
2139:src/keys.c    **** 	unsigned p, q;
 3523              		.loc 1 2139 2 is_stmt 1 view .LVU1100
2140:src/keys.c    **** 
 3524              		.loc 1 2140 2 view .LVU1101
2142:src/keys.c    **** 		if (n == OP_ZERO)
 3525              		.loc 1 2142 2 view .LVU1102
2142:src/keys.c    **** 		if (n == OP_ZERO)
 3526              		.loc 1 2142 5 is_stmt 0 view .LVU1103
 3527 0004 102B     		cmp	r3, #16
 3528 0006 39D0     		beq	.L384
2147:src/keys.c    **** 		if (n == OP_ZERO)
 3529              		.loc 1 2147 2 is_stmt 1 view .LVU1104
2147:src/keys.c    **** 		if (n == OP_ZERO)
 3530              		.loc 1 2147 5 is_stmt 0 view .LVU1105
 3531 0008 112B     		cmp	r3, #17
 3532 000a 32D0     		beq	.L385
2152:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3533              		.loc 1 2152 2 is_stmt 1 view .LVU1106
2152:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3534              		.loc 1 2152 5 is_stmt 0 view .LVU1107
 3535 000c 122B     		cmp	r3, #18
 3536 000e 45D0     		beq	.L386
2165:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3537              		.loc 1 2165 2 is_stmt 1 view .LVU1108
2165:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3538              		.loc 1 2165 5 is_stmt 0 view .LVU1109
 3539 0010 0E2B     		cmp	r3, #14
 3540 0012 38D0     		beq	.L387
2168:src/keys.c    **** 
 3541              		.loc 1 2168 3 is_stmt 1 view .LVU1110
2168:src/keys.c    **** 
 3542              		.loc 1 2168 7 is_stmt 0 view .LVU1111
 3543 0014 2D4A     		ldr	r2, .L390+4
2170:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3544              		.loc 1 2170 35 view .LVU1112
 3545 0016 A3F10B01 		sub	r1, r3, #11
2170:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3546              		.loc 1 2170 5 view .LVU1113
 3547 001a 0429     		cmp	r1, #4
2168:src/keys.c    **** 
 3548              		.loc 1 2168 7 view .LVU1114
 3549 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
ARM GAS  /tmp/ccGwaFaD.s 			page 128


 3550              	.LVL289:
2170:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3551              		.loc 1 2170 2 is_stmt 1 view .LVU1115
2170:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3552              		.loc 1 2170 5 is_stmt 0 view .LVU1116
 3553 0020 38D9     		bls	.L370
2173:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3554              		.loc 1 2173 2 is_stmt 1 view .LVU1117
2173:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3555              		.loc 1 2173 5 is_stmt 0 view .LVU1118
 3556 0022 142B     		cmp	r3, #20
 3557 0024 4DD8     		bhi	.L378
2177:src/keys.c    **** 	p = cat[0];
 3558              		.loc 1 2177 2 is_stmt 1 view .LVU1119
2107:src/keys.c    **** 	// A quick table of catalogue tables
 3559              		.loc 1 2107 33 is_stmt 0 view .LVU1120
 3560 0026 10B4     		push	{r4}
 3561              		.cfi_def_cfa_offset 4
 3562              		.cfi_offset 4, -4
2177:src/keys.c    **** 	p = cat[0];
 3563              		.loc 1 2177 11 view .LVU1121
 3564 0028 00EBA001 		add	r1, r0, r0, asr #2
2177:src/keys.c    **** 	p = cat[0];
 3565              		.loc 1 2177 6 view .LVU1122
 3566 002c 5318     		adds	r3, r2, r1
 3567              	.LVL290:
2178:src/keys.c    **** 	q = cat[1];
 3568              		.loc 1 2178 2 is_stmt 1 view .LVU1123
2179:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3569              		.loc 1 2179 2 view .LVU1124
2180:src/keys.c    **** 
 3570              		.loc 1 2180 2 view .LVU1125
2180:src/keys.c    **** 
 3571              		.loc 1 2180 35 is_stmt 0 view .LVU1126
 3572 002e 4000     		lsls	r0, r0, #1
 3573              	.LVL291:
2178:src/keys.c    **** 	q = cat[1];
 3574              		.loc 1 2178 4 view .LVU1127
 3575 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3576              	.LVL292:
2179:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3577              		.loc 1 2179 4 view .LVU1128
 3578 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3579              	.LVL293:
2179:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3580              		.loc 1 2179 4 view .LVU1129
 3581 0034 2649     		ldr	r1, .L390+8
 3582              	.LVL294:
2180:src/keys.c    **** 
 3583              		.loc 1 2180 54 view .LVU1130
 3584 0036 C443     		mvns	r4, r0
2180:src/keys.c    **** 
 3585              		.loc 1 2180 35 view .LVU1131
 3586 0038 00F00600 		and	r0, r0, #6
2180:src/keys.c    **** 
 3587              		.loc 1 2180 54 view .LVU1132
 3588 003c 04F00604 		and	r4, r4, #6
ARM GAS  /tmp/ccGwaFaD.s 			page 129


2180:src/keys.c    **** 
 3589              		.loc 1 2180 24 view .LVU1133
 3590 0040 0230     		adds	r0, r0, #2
2180:src/keys.c    **** 
 3591              		.loc 1 2180 48 view .LVU1134
 3592 0042 E340     		lsrs	r3, r3, r4
 3593              	.LVL295:
2180:src/keys.c    **** 
 3594              		.loc 1 2180 18 view .LVU1135
 3595 0044 02FA00F0 		lsl	r0, r2, r0
2180:src/keys.c    **** 
 3596              		.loc 1 2180 43 view .LVU1136
 3597 0048 1843     		orrs	r0, r0, r3
2180:src/keys.c    **** 
 3598              		.loc 1 2180 4 view .LVU1137
 3599 004a C0F30903 		ubfx	r3, r0, #0, #10
 3600              	.LVL296:
2183:src/keys.c    **** 		if (m < opcode_breaks[i])
 3601              		.loc 1 2183 2 is_stmt 1 view .LVU1138
2183:src/keys.c    **** 		if (m < opcode_breaks[i])
 3602              		.loc 1 2183 12 view .LVU1139
2180:src/keys.c    **** 
 3603              		.loc 1 2180 4 is_stmt 0 view .LVU1140
 3604 004e 3422     		movs	r2, #52
 3605              	.LVL297:
2183:src/keys.c    **** 		if (m < opcode_breaks[i])
 3606              		.loc 1 2183 8 view .LVU1141
 3607 0050 0020     		movs	r0, #0
 3608 0052 01E0     		b	.L374
 3609              	.LVL298:
 3610              	.L389:
2183:src/keys.c    **** 		if (m < opcode_breaks[i])
 3611              		.loc 1 2183 8 view .LVU1142
 3612 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3613              	.LVL299:
 3614              	.L374:
2184:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3615              		.loc 1 2184 3 is_stmt 1 view .LVU1143
2186:src/keys.c    **** 	}
 3616              		.loc 1 2186 3 view .LVU1144
2184:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3617              		.loc 1 2184 6 is_stmt 0 view .LVU1145
 3618 0058 9A42     		cmp	r2, r3
 3619 005a 2FDC     		bgt	.L388
2183:src/keys.c    **** 		if (m < opcode_breaks[i])
 3620              		.loc 1 2183 25 discriminator 2 view .LVU1146
 3621 005c 0130     		adds	r0, r0, #1
 3622              	.LVL300:
2183:src/keys.c    **** 		if (m < opcode_breaks[i])
 3623              		.loc 1 2183 2 discriminator 2 view .LVU1147
 3624 005e 0728     		cmp	r0, #7
2186:src/keys.c    **** 	}
 3625              		.loc 1 2186 5 discriminator 2 view .LVU1148
 3626 0060 A3EB0203 		sub	r3, r3, r2
 3627              	.LVL301:
2183:src/keys.c    **** 		if (m < opcode_breaks[i])
 3628              		.loc 1 2183 24 is_stmt 1 discriminator 2 view .LVU1149
ARM GAS  /tmp/ccGwaFaD.s 			page 130


2183:src/keys.c    **** 		if (m < opcode_breaks[i])
 3629              		.loc 1 2183 12 discriminator 2 view .LVU1150
2183:src/keys.c    **** 		if (m < opcode_breaks[i])
 3630              		.loc 1 2183 2 is_stmt 0 discriminator 2 view .LVU1151
 3631 0064 F6D1     		bne	.L389
2188:src/keys.c    **** }
 3632              		.loc 1 2188 2 is_stmt 1 view .LVU1152
2188:src/keys.c    **** }
 3633              		.loc 1 2188 9 is_stmt 0 view .LVU1153
 3634 0066 03F12000 		add	r0, r3, #32
 3635              	.LVL302:
2188:src/keys.c    **** }
 3636              		.loc 1 2188 9 view .LVU1154
 3637 006a 0002     		lsls	r0, r0, #8
 3638              	.L363:
2189:src/keys.c    **** 
 3639              		.loc 1 2189 1 view .LVU1155
 3640 006c 5DF8044B 		ldr	r4, [sp], #4
 3641              		.cfi_restore 4
 3642              		.cfi_def_cfa_offset 0
 3643 0070 7047     		bx	lr
 3644              	.LVL303:
 3645              	.L385:
2148:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3646              		.loc 1 2148 3 is_stmt 1 view .LVU1156
2148:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3647              		.loc 1 2148 6 is_stmt 0 view .LVU1157
 3648 0072 4B28     		cmp	r0, #75
 3649 0074 1FD0     		beq	.L376
2150:src/keys.c    **** 	}
 3650              		.loc 1 2150 3 is_stmt 1 view .LVU1158
2150:src/keys.c    **** 	}
 3651              		.loc 1 2150 10 is_stmt 0 view .LVU1159
 3652 0076 40F40450 		orr	r0, r0, #8448
 3653              	.LVL304:
2150:src/keys.c    **** 	}
 3654              		.loc 1 2150 10 view .LVU1160
 3655 007a 7047     		bx	lr
 3656              	.LVL305:
 3657              	.L384:
2143:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3658              		.loc 1 2143 3 is_stmt 1 view .LVU1161
2143:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3659              		.loc 1 2143 6 is_stmt 0 view .LVU1162
 3660 007c 4B28     		cmp	r0, #75
 3661 007e 17D0     		beq	.L375
2145:src/keys.c    **** 	}
 3662              		.loc 1 2145 3 is_stmt 1 view .LVU1163
2145:src/keys.c    **** 	}
 3663              		.loc 1 2145 10 is_stmt 0 view .LVU1164
 3664 0080 40F40050 		orr	r0, r0, #8192
 3665              	.LVL306:
2145:src/keys.c    **** 	}
 3666              		.loc 1 2145 10 view .LVU1165
 3667 0084 7047     		bx	lr
 3668              	.LVL307:
 3669              	.L387:
ARM GAS  /tmp/ccGwaFaD.s 			page 131


2165:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3670              		.loc 1 2165 35 discriminator 1 view .LVU1166
 3671 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2166:src/keys.c    **** 	else
 3672              		.loc 1 2166 7 discriminator 1 view .LVU1167
 3673 0088 124B     		ldr	r3, .L390+12
 3674              	.LVL308:
2166:src/keys.c    **** 	else
 3675              		.loc 1 2166 7 discriminator 1 view .LVU1168
 3676 008a 134A     		ldr	r2, .L390+16
 3677              	.LVL309:
2166:src/keys.c    **** 	else
 3678              		.loc 1 2166 7 discriminator 1 view .LVU1169
 3679 008c 11F0100F 		tst	r1, #16
 3680 0090 18BF     		it	ne
 3681 0092 1A46     		movne	r2, r3
 3682              	.L370:
 3683              	.LVL310:
2171:src/keys.c    **** 	}
 3684              		.loc 1 2171 3 is_stmt 1 view .LVU1170
 3685              	.LBB394:
 3686              	.LBI394:
2100:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3687              		.loc 1 2100 15 view .LVU1171
 3688              	.LBB395:
2101:src/keys.c    **** }
 3689              		.loc 1 2101 2 view .LVU1172
2101:src/keys.c    **** }
 3690              		.loc 1 2101 9 is_stmt 0 view .LVU1173
 3691 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3692              	.LVL311:
2101:src/keys.c    **** }
 3693              		.loc 1 2101 9 view .LVU1174
 3694 0096 40F48840 		orr	r0, r0, #17408
 3695              	.LVL312:
2101:src/keys.c    **** }
 3696              		.loc 1 2101 9 view .LVU1175
 3697              	.LBE395:
 3698              	.LBE394:
2171:src/keys.c    **** 	}
 3699              		.loc 1 2171 10 view .LVU1176
 3700 009a 7047     		bx	lr
 3701              	.LVL313:
 3702              	.L386:
 3703              	.LBB396:
2153:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3704              		.loc 1 2153 3 is_stmt 1 view .LVU1177
2153:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3705              		.loc 1 2153 33 is_stmt 0 view .LVU1178
 3706 009c 0F4B     		ldr	r3, .L390+20
 3707              	.LVL314:
2153:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3708              		.loc 1 2153 13 view .LVU1179
 3709 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3710              	.LVL315:
2154:src/keys.c    **** 			// Monadic conversion routine
 3711              		.loc 1 2154 3 is_stmt 1 view .LVU1180
ARM GAS  /tmp/ccGwaFaD.s 			page 132


2154:src/keys.c    **** 			// Monadic conversion routine
 3712              		.loc 1 2154 6 is_stmt 0 view .LVU1181
 3713 00a0 5728     		cmp	r0, #87
2156:src/keys.c    **** 		else
 3714              		.loc 1 2156 4 is_stmt 1 view .LVU1182
2156:src/keys.c    **** 		else
 3715              		.loc 1 2156 25 is_stmt 0 view .LVU1183
 3716 00a2 C6BF     		itte	gt
 3717 00a4 5838     		subgt	r0, r0, #88
 3718              	.LVL316:
2156:src/keys.c    **** 		else
 3719              		.loc 1 2156 18 view .LVU1184
 3720 00a6 40F40070 		orrgt	r0, r0, #512
2158:src/keys.c    **** 	}
 3721              		.loc 1 2158 4 is_stmt 1 view .LVU1185
2158:src/keys.c    **** 	}
 3722              		.loc 1 2158 11 is_stmt 0 view .LVU1186
 3723 00aa 40F40C40 		orrle	r0, r0, #35840
 3724 00ae 7047     		bx	lr
 3725              	.LVL317:
 3726              	.L375:
2158:src/keys.c    **** 	}
 3727              		.loc 1 2158 11 view .LVU1187
 3728              	.LBE396:
2144:src/keys.c    **** 		return CONST(n);
 3729              		.loc 1 2144 11 view .LVU1188
 3730 00b0 4FF42740 		mov	r0, #42752
 3731              	.LVL318:
2144:src/keys.c    **** 		return CONST(n);
 3732              		.loc 1 2144 11 view .LVU1189
 3733 00b4 7047     		bx	lr
 3734              	.LVL319:
 3735              	.L376:
2149:src/keys.c    **** 		return CONST_CMPLX(n);
 3736              		.loc 1 2149 11 view .LVU1190
 3737 00b6 4FF42840 		mov	r0, #43008
 3738              	.LVL320:
2149:src/keys.c    **** 		return CONST_CMPLX(n);
 3739              		.loc 1 2149 11 view .LVU1191
 3740 00ba 7047     		bx	lr
 3741              	.LVL321:
 3742              	.L388:
 3743              		.cfi_def_cfa_offset 4
 3744              		.cfi_offset 4, -4
2185:src/keys.c    **** 		m -= opcode_breaks[i];
 3745              		.loc 1 2185 4 is_stmt 1 view .LVU1192
2185:src/keys.c    **** 		m -= opcode_breaks[i];
 3746              		.loc 1 2185 29 is_stmt 0 view .LVU1193
 3747 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3748              	.LVL322:
2185:src/keys.c    **** 		m -= opcode_breaks[i];
 3749              		.loc 1 2185 29 view .LVU1194
 3750 00c0 D4E7     		b	.L363
 3751              	.LVL323:
 3752              	.L378:
 3753              		.cfi_def_cfa_offset 0
 3754              		.cfi_restore 4
ARM GAS  /tmp/ccGwaFaD.s 			page 133


2174:src/keys.c    **** 
 3755              		.loc 1 2174 10 view .LVU1195
 3756 00c2 4FF48070 		mov	r0, #256
 3757              	.LVL324:
2189:src/keys.c    **** 
 3758              		.loc 1 2189 1 view .LVU1196
 3759 00c6 7047     		bx	lr
 3760              	.L391:
 3761              		.align	2
 3762              	.L390:
 3763 00c8 00000000 		.word	StateWhileOn
 3764 00cc 00000000 		.word	.LANCHOR6
 3765 00d0 01000000 		.word	.LANCHOR7+1
 3766 00d4 00000000 		.word	.LANCHOR4
 3767 00d8 00000000 		.word	.LANCHOR3
 3768 00dc 00000000 		.word	.LANCHOR5
 3769              		.cfi_endproc
 3770              	.LFE41:
 3772              		.section	.text.process_catalogue,"ax",%progbits
 3773              		.align	1
 3774              		.p2align 2,,3
 3775              		.syntax unified
 3776              		.thumb
 3777              		.thumb_func
 3778              		.fpu fpv4-sp-d16
 3780              	process_catalogue:
 3781              	.LVL325:
 3782              	.LFB43:
2203:src/keys.c    ****    int pos = State.catpos;
 3783              		.loc 1 2203 93 is_stmt 1 view -0
 3784              		.cfi_startproc
 3785              		@ args = 0, pretend = 0, frame = 16
 3786              		@ frame_needed = 0, uses_anonymous_args = 0
2203:src/keys.c    ****    int pos = State.catpos;
 3787              		.loc 1 2203 93 is_stmt 0 view .LVU1198
 3788 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3789              		.cfi_def_cfa_offset 36
 3790              		.cfi_offset 4, -36
 3791              		.cfi_offset 5, -32
 3792              		.cfi_offset 6, -28
 3793              		.cfi_offset 7, -24
 3794              		.cfi_offset 8, -20
 3795              		.cfi_offset 9, -16
 3796              		.cfi_offset 10, -12
 3797              		.cfi_offset 11, -8
 3798              		.cfi_offset 14, -4
2204:src/keys.c    ****    int ch;
 3799              		.loc 1 2204 14 view .LVU1199
 3800 0004 DFF8EC92 		ldr	r9, .L506+24
 3801              	.LBB397:
 3802              	.LBB398:
2092:src/keys.c    **** #endif
 3803              		.loc 1 2092 31 view .LVU1200
 3804 0008 B44F     		ldr	r7, .L506
 3805              	.LBE398:
 3806              	.LBE397:
2204:src/keys.c    ****    int ch;
ARM GAS  /tmp/ccGwaFaD.s 			page 134


 3807              		.loc 1 2204 14 view .LVU1201
 3808 000a D9F80040 		ldr	r4, [r9]
 3809              	.LBB403:
 3810              	.LBB399:
2092:src/keys.c    **** #endif
 3811              		.loc 1 2092 31 view .LVU1202
 3812 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 3813              	.LBE399:
 3814              	.LBE403:
2204:src/keys.c    ****    int ch;
 3815              		.loc 1 2204 19 view .LVU1203
 3816 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3817              	.LBB404:
 3818              	.LBB400:
2092:src/keys.c    **** #endif
 3819              		.loc 1 2092 24 view .LVU1204
 3820 0016 B24B     		ldr	r3, .L506+4
 3821              	.LBE400:
 3822              	.LBE404:
2204:src/keys.c    ****    int ch;
 3823              		.loc 1 2204 4 is_stmt 1 view .LVU1205
2203:src/keys.c    ****    int pos = State.catpos;
 3824              		.loc 1 2203 93 is_stmt 0 view .LVU1206
 3825 0018 85B0     		sub	sp, sp, #20
 3826              		.cfi_def_cfa_offset 56
 3827              	.LBB405:
 3828              	.LBB401:
2092:src/keys.c    **** #endif
 3829              		.loc 1 2092 24 view .LVU1207
 3830 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3831              	.LBE401:
 3832              	.LBE405:
2203:src/keys.c    ****    int pos = State.catpos;
 3833              		.loc 1 2203 93 view .LVU1208
 3834 001e 1646     		mov	r6, r2
2204:src/keys.c    ****    int ch;
 3835              		.loc 1 2204 8 view .LVU1209
 3836 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3837              	.LVL326:
2205:src/keys.c    ****    const int ctmax = current_catalogue_max();
 3838              		.loc 1 2205 4 is_stmt 1 view .LVU1210
2206:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 3839              		.loc 1 2206 4 view .LVU1211
 3840              	.LBB406:
 3841              	.LBI397:
2058:src/keys.c    **** 	// A quick table of catalogue sizes
 3842              		.loc 1 2058 5 view .LVU1212
 3843              	.LBB402:
2061:src/keys.c    **** 	{
 3844              		.loc 1 2061 2 view .LVU1213
2092:src/keys.c    **** #endif
 3845              		.loc 1 2092 2 view .LVU1214
2092:src/keys.c    **** #endif
 3846              		.loc 1 2092 2 is_stmt 0 view .LVU1215
 3847              	.LBE402:
 3848              	.LBE406:
2207:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 135


 3849              		.loc 1 2207 4 is_stmt 1 view .LVU1216
2209:src/keys.c    ****      switch (c) {
 3850              		.loc 1 2209 4 view .LVU1217
2209:src/keys.c    ****      switch (c) {
 3851              		.loc 1 2209 7 is_stmt 0 view .LVU1218
 3852 0024 0029     		cmp	r1, #0
 3853 0026 65D0     		beq	.L491
2270:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3854              		.loc 1 2270 11 is_stmt 1 view .LVU1219
2270:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3855              		.loc 1 2270 14 is_stmt 0 view .LVU1220
 3856 0028 0129     		cmp	r1, #1
 3857 002a 00F0ED80 		beq	.L492
2304:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3858              		.loc 1 2304 11 is_stmt 1 view .LVU1221
2304:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3859              		.loc 1 2304 14 is_stmt 0 view .LVU1222
 3860 002e 0229     		cmp	r1, #2
 3861 0030 00F00B81 		beq	.L493
 3862              	.LVL327:
 3863              	.L428:
 3864              	.LBB407:
 3865              	.LBB408:
 445:src/keys.c    **** }
 3866              		.loc 1 445 2 is_stmt 1 view .LVU1223
 3867              	.LBB409:
 3868              	.LBI409:
 121:src/keys.c    **** {
 3869              		.loc 1 121 12 view .LVU1224
 3870              	.LBB410:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3871              		.loc 1 123 2 view .LVU1225
 133:src/keys.c    **** }
 3872              		.loc 1 133 2 view .LVU1226
 133:src/keys.c    **** }
 3873              		.loc 1 133 23 is_stmt 0 view .LVU1227
 3874 0034 AB4B     		ldr	r3, .L506+8
 3875              	.LBE410:
 3876              	.LBE409:
 445:src/keys.c    **** }
 3877              		.loc 1 445 49 view .LVU1228
 3878 0036 AC4A     		ldr	r2, .L506+12
 3879              	.LBB412:
 3880              	.LBB411:
 133:src/keys.c    **** }
 3881              		.loc 1 133 23 view .LVU1229
 3882 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3883              	.LBE411:
 3884              	.LBE412:
 445:src/keys.c    **** }
 3885              		.loc 1 445 49 view .LVU1230
 3886 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3887 003e 02EB4303 		add	r3, r2, r3, lsl #1
 3888              	.LBE408:
 3889              	.LBE407:
 3890              	.LBB416:
 3891              	.LBB417:
ARM GAS  /tmp/ccGwaFaD.s 			page 136


 3892              	.LBB418:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3893              		.loc 1 96 16 view .LVU1231
 3894 0042 0025     		movs	r5, #0
 3895              	.LVL328:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3896              		.loc 1 96 16 view .LVU1232
 3897              	.LBE418:
 3898              	.LBE417:
 3899              	.LBE416:
2314:src/keys.c    ****    reset_shift();
 3900              		.loc 1 2314 9 view .LVU1233
 3901 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 3902              	.LVL329:
2314:src/keys.c    ****    reset_shift();
 3903              		.loc 1 2314 9 view .LVU1234
 3904 0046 FFF7FEFF 		bl	remap_chars
 3905              	.LVL330:
2314:src/keys.c    ****    reset_shift();
 3906              		.loc 1 2314 9 view .LVU1235
 3907 004a 0446     		mov	r4, r0
 3908              	.LVL331:
2315:src/keys.c    ****    if (ch == '\0')
 3909              		.loc 1 2315 4 is_stmt 1 view .LVU1236
 3910              	.LBB423:
 3911              	.LBI416:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3912              		.loc 1 104 13 view .LVU1237
 3913              	.LBE423:
 105:src/keys.c    **** }
 3914              		.loc 1 105 2 view .LVU1238
 3915              	.LBB424:
 3916              	.LBB422:
 3917              	.LBI417:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 3918              		.loc 1 94 20 view .LVU1239
 3919              	.LBB421:
  95:src/keys.c    **** 	State2.shifts = shift;
 3920              		.loc 1 95 2 view .LVU1240
 3921              	.LBB419:
 3922              	.LBI419:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3923              		.loc 1 86 13 view .LVU1241
 3924              	.LBB420:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3925              		.loc 1 87 2 view .LVU1242
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3926              		.loc 1 87 18 is_stmt 0 view .LVU1243
 3927 004c FFF7FEFF 		bl	shift_down
 3928              	.LVL332:
  88:src/keys.c    **** }
 3929              		.loc 1 88 2 is_stmt 1 view .LVU1244
 3930              	.LBE420:
 3931              	.LBE419:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3932              		.loc 1 96 2 view .LVU1245
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccGwaFaD.s 			page 137


 3933              		.loc 1 96 16 is_stmt 0 view .LVU1246
 3934 0050 3D74     		strb	r5, [r7, #16]
  98:src/keys.c    **** }
 3935              		.loc 1 98 2 is_stmt 1 view .LVU1247
 3936              	.LVL333:
  98:src/keys.c    **** }
 3937              		.loc 1 98 2 is_stmt 0 view .LVU1248
 3938              	.LBE421:
 3939              	.LBE422:
 3940              	.LBE424:
2316:src/keys.c    ****      return STATE_UNFINISHED;
 3941              		.loc 1 2316 4 is_stmt 1 view .LVU1249
2316:src/keys.c    ****      return STATE_UNFINISHED;
 3942              		.loc 1 2316 7 is_stmt 0 view .LVU1250
 3943 0052 002C     		cmp	r4, #0
 3944 0054 6FD0     		beq	.L490
2318:src/keys.c    ****      // No multi character search in alpha catalogues
 3945              		.loc 1 2318 4 is_stmt 1 view .LVU1251
2318:src/keys.c    ****      // No multi character search in alpha catalogues
 3946              		.loc 1 2318 7 is_stmt 0 view .LVU1252
 3947 0056 AAF10B0A 		sub	r10, r10, #11
 3948              	.LVL334:
2318:src/keys.c    ****      // No multi character search in alpha catalogues
 3949              		.loc 1 2318 7 view .LVU1253
 3950 005a BAF1040F 		cmp	r10, #4
 3951 005e 40F2CB80 		bls	.L442
2322:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 3952              		.loc 1 2322 4 is_stmt 1 view .LVU1254
2322:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 3953              		.loc 1 2322 8 is_stmt 0 view .LVU1255
 3954 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2322:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 3955              		.loc 1 2322 7 view .LVU1256
 3956 0064 092D     		cmp	r5, #9
 3957 0066 40F2C780 		bls	.L442
 3958              	.LVL335:
 3959              	.L410:
2327:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 3960              		.loc 1 2327 4 is_stmt 1 view .LVU1257
2327:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 3961              		.loc 1 2327 27 is_stmt 0 view .LVU1258
 3962 006a 7B19     		adds	r3, r7, r5
 3963 006c 0025     		movs	r5, #0
 3964 006e 83F82050 		strb	r5, [r3, #32]
2328:src/keys.c    ****      char buf[16];
 3965              		.loc 1 2328 4 is_stmt 1 view .LVU1259
 3966              	.LVL336:
2328:src/keys.c    ****      char buf[16];
 3967              		.loc 1 2328 18 view .LVU1260
2328:src/keys.c    ****      char buf[16];
 3968              		.loc 1 2328 4 is_stmt 0 view .LVU1261
 3969 0072 B8F1000F 		cmp	r8, #0
 3970 0076 00F0D780 		beq	.L488
 3971              	.LVL337:
 3972              	.L430:
 3973              	.LBB425:
2329:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
ARM GAS  /tmp/ccGwaFaD.s 			page 138


 3974              		.loc 1 2329 6 is_stmt 1 view .LVU1262
2330:src/keys.c    ****      int i;
 3975              		.loc 1 2330 6 view .LVU1263
2330:src/keys.c    ****      int i;
 3976              		.loc 1 2330 24 is_stmt 0 view .LVU1264
 3977 007a 2846     		mov	r0, r5
 3978 007c FFF7FEFF 		bl	current_catalogue
 3979              	.LVL338:
 3980 0080 6946     		mov	r1, sp
 3981 0082 FFF7FEFF 		bl	catcmd
 3982              	.LVL339:
 3983 0086 0446     		mov	r4, r0
 3984              	.LVL340:
2331:src/keys.c    **** 
 3985              		.loc 1 2331 6 is_stmt 1 view .LVU1265
2333:src/keys.c    ****        cmd++;
 3986              		.loc 1 2333 6 view .LVU1266
2334:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 3987              		.loc 1 2334 8 view .LVU1267
2333:src/keys.c    ****        cmd++;
 3988              		.loc 1 2333 10 is_stmt 0 view .LVU1268
 3989 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3990              	.LVL341:
2333:src/keys.c    ****        cmd++;
 3991              		.loc 1 2333 9 view .LVU1269
 3992 008a 1428     		cmp	r0, #20
 3993 008c 04BF     		itt	eq
 3994 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2334:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 3995              		.loc 1 2334 11 view .LVU1270
 3996 0090 0134     		addeq	r4, r4, #1
 3997              	.LVL342:
2335:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 3998              		.loc 1 2335 6 is_stmt 1 view .LVU1271
2335:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 3999              		.loc 1 2335 16 view .LVU1272
2335:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4000              		.loc 1 2335 6 is_stmt 0 view .LVU1273
 4001 0092 0028     		cmp	r0, #0
 4002 0094 00F0BF80 		beq	.L432
 4003 0098 DFF85CB2 		ldr	fp, .L506+28
 4004 009c C4F1010A 		rsb	r10, r4, #1
 4005 00a0 06E0     		b	.L435
 4006              	.LVL343:
 4007              	.L495:
 4008              	.LBB426:
2340:src/keys.c    **** 	 break;
 4009              		.loc 1 2340 16 view .LVU1274
 4010 00a2 C0F2BA80 		blt	.L434
 4011              	.LBE426:
2335:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4012              		.loc 1 2335 19 discriminator 2 view .LVU1275
 4013 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 4014              	.LVL344:
2335:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4015              		.loc 1 2335 6 discriminator 2 view .LVU1276
 4016 00aa 0028     		cmp	r0, #0
ARM GAS  /tmp/ccGwaFaD.s 			page 139


 4017 00ac 00F0BF80 		beq	.L494
 4018              	.LVL345:
 4019              	.L435:
 4020              	.LBB427:
2336:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4021              		.loc 1 2336 8 is_stmt 1 view .LVU1277
2336:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4022              		.loc 1 2336 22 is_stmt 0 view .LVU1278
 4023 00b0 FFF7FEFF 		bl	remap_chars
 4024              	.LVL346:
2340:src/keys.c    **** 	 break;
 4025              		.loc 1 2340 13 is_stmt 1 view .LVU1279
 4026              	.LBE427:
2335:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4027              		.loc 1 2335 32 view .LVU1280
 4028              	.LBB428:
2337:src/keys.c    ****        if (c > cl)
 4029              		.loc 1 2337 8 view .LVU1281
2337:src/keys.c    ****        if (c > cl)
 4030              		.loc 1 2337 46 is_stmt 0 view .LVU1282
 4031 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 4032              	.LVL347:
2338:src/keys.c    **** 	 goto set_pos;
 4033              		.loc 1 2338 8 is_stmt 1 view .LVU1283
2338:src/keys.c    **** 	 goto set_pos;
 4034              		.loc 1 2338 11 is_stmt 0 view .LVU1284
 4035 00b8 9842     		cmp	r0, r3
 4036 00ba 0AEB0402 		add	r2, r10, r4
 4037              	.LVL348:
2338:src/keys.c    **** 	 goto set_pos;
 4038              		.loc 1 2338 11 view .LVU1285
 4039              	.LBE428:
2335:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4040              		.loc 1 2335 16 is_stmt 1 view .LVU1286
 4041              	.LBB429:
2338:src/keys.c    **** 	 goto set_pos;
 4042              		.loc 1 2338 11 is_stmt 0 view .LVU1287
 4043 00be F0DD     		ble	.L495
 4044              	.LVL349:
 4045              	.L433:
2338:src/keys.c    **** 	 goto set_pos;
 4046              		.loc 1 2338 11 view .LVU1288
 4047 00c0 D9F80040 		ldr	r4, [r9]
 4048              	.L413:
2338:src/keys.c    **** 	 goto set_pos;
 4049              		.loc 1 2338 11 view .LVU1289
 4050              	.LBE429:
 4051              	.LBE425:
2349:src/keys.c    ****      --pos;
 4052              		.loc 1 2349 10 is_stmt 1 view .LVU1290
 4053 00c4 002E     		cmp	r6, #0
 4054 00c6 00F0B680 		beq	.L417
2349:src/keys.c    ****      --pos;
 4055              		.loc 1 2349 20 is_stmt 0 view .LVU1291
 4056 00ca 4DB1     		cbz	r5, .L411
 4057              	.LVL350:
 4058              	.L489:
ARM GAS  /tmp/ccGwaFaD.s 			page 140


2349:src/keys.c    ****      --pos;
 4059              		.loc 1 2349 20 view .LVU1292
 4060 00cc 2846     		mov	r0, r5
 4061 00ce FFF7FEFF 		bl	current_catalogue
 4062              	.LVL351:
2350:src/keys.c    ****    State.catpos = pos;
 4063              		.loc 1 2350 6 is_stmt 1 view .LVU1293
2349:src/keys.c    ****      --pos;
 4064              		.loc 1 2349 10 view .LVU1294
 4065              	.LBB430:
 4066              	.LBI430:
2196:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4067              		.loc 1 2196 12 view .LVU1295
 4068              	.LBB431:
2197:src/keys.c    **** }
 4069              		.loc 1 2197 2 view .LVU1296
2197:src/keys.c    **** }
 4070              		.loc 1 2197 33 is_stmt 0 view .LVU1297
 4071 00d2 00F0F000 		and	r0, r0, #240
 4072              	.LBE431:
 4073              	.LBE430:
2349:src/keys.c    ****      --pos;
 4074              		.loc 1 2349 27 view .LVU1298
 4075 00d6 F028     		cmp	r0, #240
 4076 00d8 40F0AD80 		bne	.L417
2349:src/keys.c    ****      --pos;
 4077              		.loc 1 2349 20 view .LVU1299
 4078 00dc 013D     		subs	r5, r5, #1
 4079              	.LVL352:
2349:src/keys.c    ****      --pos;
 4080              		.loc 1 2349 20 view .LVU1300
 4081 00de F5D1     		bne	.L489
 4082              	.LVL353:
 4083              	.L411:
2351:src/keys.c    ****    return STATE_UNFINISHED;
 4084              		.loc 1 2351 4 is_stmt 1 view .LVU1301
2351:src/keys.c    ****    return STATE_UNFINISHED;
 4085              		.loc 1 2351 17 is_stmt 0 view .LVU1302
 4086 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 4087 00e4 65F34B13 		bfi	r3, r5, #5, #7
 4088 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2352:src/keys.c    ****  }
 4089              		.loc 1 2352 4 is_stmt 1 view .LVU1303
2352:src/keys.c    ****  }
 4090              		.loc 1 2352 11 is_stmt 0 view .LVU1304
 4091 00ec 3320     		movs	r0, #51
 4092              	.L502:
2353:src/keys.c    **** 
 4093              		.loc 1 2353 2 view .LVU1305
 4094 00ee 05B0     		add	sp, sp, #20
 4095              		.cfi_remember_state
 4096              		.cfi_def_cfa_offset 36
 4097              		@ sp needed
 4098 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4099              	.LVL354:
 4100              	.L491:
 4101              		.cfi_restore_state
ARM GAS  /tmp/ccGwaFaD.s 			page 141


2210:src/keys.c    **** #ifdef DM42
 4102              		.loc 1 2210 6 is_stmt 1 view .LVU1306
 4103 00f4 431F     		subs	r3, r0, #5
 4104 00f6 1F2B     		cmp	r3, #31
 4105 00f8 2FD8     		bhi	.L394
 4106 00fa DFE803F0 		tbb	[pc, r3]
 4107              	.LVL355:
 4108              	.L396:
 4109 00fe 35       		.byte	(.L400-.L396)/2
 4110 00ff 2E       		.byte	(.L394-.L396)/2
 4111 0100 2E       		.byte	(.L394-.L396)/2
 4112 0101 2E       		.byte	(.L394-.L396)/2
 4113 0102 2E       		.byte	(.L394-.L396)/2
 4114 0103 2E       		.byte	(.L394-.L396)/2
 4115 0104 2E       		.byte	(.L394-.L396)/2
 4116 0105 35       		.byte	(.L400-.L396)/2
 4117 0106 2E       		.byte	(.L394-.L396)/2
 4118 0107 2E       		.byte	(.L394-.L396)/2
 4119 0108 2E       		.byte	(.L394-.L396)/2
 4120 0109 20       		.byte	(.L399-.L396)/2
 4121 010a 2E       		.byte	(.L394-.L396)/2
 4122 010b 64       		.byte	(.L398-.L396)/2
 4123 010c 2E       		.byte	(.L394-.L396)/2
 4124 010d 2E       		.byte	(.L394-.L396)/2
 4125 010e 2E       		.byte	(.L394-.L396)/2
 4126 010f 2E       		.byte	(.L394-.L396)/2
 4127 0110 2E       		.byte	(.L394-.L396)/2
 4128 0111 6B       		.byte	(.L397-.L396)/2
 4129 0112 2E       		.byte	(.L394-.L396)/2
 4130 0113 2E       		.byte	(.L394-.L396)/2
 4131 0114 2E       		.byte	(.L394-.L396)/2
 4132 0115 2E       		.byte	(.L394-.L396)/2
 4133 0116 2E       		.byte	(.L394-.L396)/2
 4134 0117 2E       		.byte	(.L394-.L396)/2
 4135 0118 2E       		.byte	(.L394-.L396)/2
 4136 0119 2E       		.byte	(.L394-.L396)/2
 4137 011a 2E       		.byte	(.L394-.L396)/2
 4138 011b 2E       		.byte	(.L394-.L396)/2
 4139 011c 2E       		.byte	(.L394-.L396)/2
 4140 011d 27       		.byte	(.L395-.L396)/2
 4141              		.p2align 1
 4142              	.L501:
2299:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4143              		.loc 1 2299 42 is_stmt 0 discriminator 1 view .LVU1307
 4144 011e 734A     		ldr	r2, .L506+16
 4145              	.LVL356:
2299:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4146              		.loc 1 2299 42 discriminator 1 view .LVU1308
 4147 0120 7B69     		ldr	r3, [r7, #20]
2299:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4148              		.loc 1 2299 24 discriminator 1 view .LVU1309
 4149 0122 1A42     		tst	r2, r3
 4150 0124 75D0     		beq	.L425
2301:src/keys.c    ****        return STATE_UNFINISHED;
 4151              		.loc 1 2301 8 is_stmt 1 view .LVU1310
2301:src/keys.c    ****        return STATE_UNFINISHED;
 4152              		.loc 1 2301 38 is_stmt 0 view .LVU1311
ARM GAS  /tmp/ccGwaFaD.s 			page 142


 4153 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4154 0128 C3F30012 		ubfx	r2, r3, #4, #1
2301:src/keys.c    ****        return STATE_UNFINISHED;
 4155              		.loc 1 2301 30 view .LVU1312
 4156 012c C2F10102 		rsb	r2, r2, #1
2301:src/keys.c    ****        return STATE_UNFINISHED;
 4157              		.loc 1 2301 26 view .LVU1313
 4158 0130 62F30413 		bfi	r3, r2, #4, #1
 4159 0134 BB75     		strb	r3, [r7, #22]
 4160              	.LVL357:
 4161              	.L490:
2302:src/keys.c    ****      }
 4162              		.loc 1 2302 8 is_stmt 1 view .LVU1314
2302:src/keys.c    ****      }
 4163              		.loc 1 2302 15 is_stmt 0 view .LVU1315
 4164 0136 3320     		movs	r0, #51
 4165              	.L392:
2353:src/keys.c    **** 
 4166              		.loc 1 2353 2 view .LVU1316
 4167 0138 05B0     		add	sp, sp, #20
 4168              		.cfi_remember_state
 4169              		.cfi_def_cfa_offset 36
 4170              		@ sp needed
 4171 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4172              	.LVL358:
 4173              	.L399:
 4174              		.cfi_restore_state
2239:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4175              		.loc 1 2239 8 is_stmt 1 view .LVU1317
2239:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4176              		.loc 1 2239 11 is_stmt 0 view .LVU1318
 4177 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 4178 0140 23B1     		cbz	r3, .L395
2239:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4179              		.loc 1 2239 33 discriminator 1 view .LVU1319
 4180 0142 FFF7FEFF 		bl	keyticks
 4181              	.LVL359:
2239:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4182              		.loc 1 2239 30 discriminator 1 view .LVU1320
 4183 0146 1D28     		cmp	r0, #29
 4184 0148 40F39580 		ble	.L496
 4185              	.L395:
2249:src/keys.c    ****        return STATE_UNFINISHED;
 4186              		.loc 1 2249 8 is_stmt 1 view .LVU1321
 4187 014c 0020     		movs	r0, #0
 4188 014e FFF7FEFF 		bl	init_cat
 4189              	.LVL360:
2250:src/keys.c    **** 
 4190              		.loc 1 2250 8 view .LVU1322
2250:src/keys.c    **** 
 4191              		.loc 1 2250 15 is_stmt 0 view .LVU1323
 4192 0152 3320     		movs	r0, #51
2353:src/keys.c    **** 
 4193              		.loc 1 2353 2 view .LVU1324
 4194 0154 05B0     		add	sp, sp, #20
 4195              		.cfi_remember_state
 4196              		.cfi_def_cfa_offset 36
ARM GAS  /tmp/ccGwaFaD.s 			page 143


 4197              		@ sp needed
 4198 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4199              	.LVL361:
 4200              	.L394:
 4201              		.cfi_restore_state
 4202              	.LBB432:
 4203              	.LBI407:
 389:src/keys.c    **** {
 4204              		.loc 1 389 12 is_stmt 1 discriminator 4 view .LVU1325
 4205              	.LBB413:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4206              		.loc 1 391 2 discriminator 4 view .LVU1326
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4207              		.loc 1 439 2 discriminator 4 view .LVU1327
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4208              		.loc 1 439 6 is_stmt 0 discriminator 4 view .LVU1328
 4209 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4210              		.loc 1 439 5 discriminator 4 view .LVU1329
 4211 015c 13F0100F 		tst	r3, #16
 4212 0160 14BF     		ite	ne
 4213 0162 0421     		movne	r1, #4
 4214              	.LVL362:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4215              		.loc 1 439 5 discriminator 4 view .LVU1330
 4216 0164 0021     		moveq	r1, #0
 4217 0166 65E7     		b	.L428
 4218              	.LVL363:
 4219              	.L400:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4220              		.loc 1 439 5 discriminator 4 view .LVU1331
 4221              	.LBE413:
 4222              	.LBE432:
2217:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4223              		.loc 1 2217 8 is_stmt 1 view .LVU1332
2217:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4224              		.loc 1 2217 11 is_stmt 0 view .LVU1333
 4225 0168 4545     		cmp	r5, r8
 4226 016a EFDA     		bge	.L395
 4227 016c 2846     		mov	r0, r5
 4228              	.LVL364:
2217:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4229              		.loc 1 2217 24 discriminator 1 view .LVU1334
 4230 016e 002E     		cmp	r6, #0
 4231 0170 00F08D80 		beq	.L497
 4232              	.LVL365:
 4233              	.LBB433:
 4234              	.LBI433:
2196:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4235              		.loc 1 2196 12 is_stmt 1 view .LVU1335
 4236              	.LBB434:
2197:src/keys.c    **** }
 4237              		.loc 1 2197 2 view .LVU1336
2197:src/keys.c    **** }
 4238              		.loc 1 2197 10 is_stmt 0 view .LVU1337
 4239 0174 FFF7FEFF 		bl	current_catalogue
 4240              	.LVL366:
ARM GAS  /tmp/ccGwaFaD.s 			page 144


2197:src/keys.c    **** }
 4241              		.loc 1 2197 33 view .LVU1338
 4242 0178 00F0F003 		and	r3, r0, #240
 4243              	.LBE434:
 4244              	.LBE433:
2217:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4245              		.loc 1 2217 27 view .LVU1339
 4246 017c F02B     		cmp	r3, #240
 4247              	.LBB436:
 4248              	.LBB435:
2197:src/keys.c    **** }
 4249              		.loc 1 2197 10 view .LVU1340
 4250 017e 0446     		mov	r4, r0
 4251              	.LBE435:
 4252              	.LBE436:
2217:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4253              		.loc 1 2217 27 view .LVU1341
 4254 0180 E4D0     		beq	.L395
 4255              	.L403:
 4256              	.LBB437:
2218:src/keys.c    **** 
 4257              		.loc 1 2218 3 is_stmt 1 view .LVU1342
2220:src/keys.c    **** 
 4258              		.loc 1 2220 3 view .LVU1343
 4259 0182 0020     		movs	r0, #0
 4260 0184 FFF7FEFF 		bl	init_cat
 4261              	.LVL367:
2222:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4262              		.loc 1 2222 3 view .LVU1344
2222:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4263              		.loc 1 2222 6 is_stmt 0 view .LVU1345
 4264 0188 14F47043 		ands	r3, r4, #61440
 4265 018c 00F08C80 		beq	.L404
2222:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4266              		.loc 1 2222 7 discriminator 1 view .LVU1346
 4267 0190 B3F5704F 		cmp	r3, #61440
 4268 0194 00F08880 		beq	.L404
 4269              	.LBB438:
2223:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4270              		.loc 1 2223 5 is_stmt 1 view .LVU1347
2223:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4271              		.loc 1 2223 31 is_stmt 0 view .LVU1348
 4272 0198 C4F30723 		ubfx	r3, r4, #8, #8
 4273 019c A3F12005 		sub	r5, r3, #32
 4274              	.LVL368:
2223:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4275              		.loc 1 2223 31 view .LVU1349
 4276 01a0 EDB2     		uxtb	r5, r5
 4277              	.LVL369:
2224:src/keys.c    **** 	     return op;
 4278              		.loc 1 2224 5 is_stmt 1 view .LVU1350
2224:src/keys.c    **** 	     return op;
 4279              		.loc 1 2224 8 is_stmt 0 view .LVU1351
 4280 01a2 012D     		cmp	r5, #1
 4281 01a4 40F28980 		bls	.L405
2224:src/keys.c    **** 	     return op;
 4282              		.loc 1 2224 56 discriminator 1 view .LVU1352
ARM GAS  /tmp/ccGwaFaD.s 			page 145


 4283 01a8 6C2D     		cmp	r5, #108
 4284 01aa 00F08680 		beq	.L405
2224:src/keys.c    **** 	     return op;
 4285              		.loc 1 2224 77 discriminator 2 view .LVU1353
 4286 01ae 242D     		cmp	r5, #36
 4287 01b0 00F08380 		beq	.L405
2226:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4288              		.loc 1 2226 5 is_stmt 1 view .LVU1354
2226:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4289              		.loc 1 2226 30 is_stmt 0 view .LVU1355
 4290 01b4 A5F12D02 		sub	r2, r5, #45
2226:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4291              		.loc 1 2226 8 view .LVU1356
 4292 01b8 062A     		cmp	r2, #6
 4293 01ba 00F29F80 		bhi	.L408
2227:src/keys.c    **** 	   else
 4294              		.loc 1 2227 7 is_stmt 1 view .LVU1357
2227:src/keys.c    **** 	   else
 4295              		.loc 1 2227 28 is_stmt 0 view .LVU1358
 4296 01be 4D3B     		subs	r3, r3, #77
2227:src/keys.c    **** 	   else
 4297              		.loc 1 2227 19 view .LVU1359
 4298 01c0 FB73     		strb	r3, [r7, #15]
 4299              	.LBE438:
 4300              	.LBE437:
2236:src/keys.c    **** 
 4301              		.loc 1 2236 15 view .LVU1360
 4302 01c2 3320     		movs	r0, #51
 4303              	.LBB448:
 4304              	.LBB441:
 4305 01c4 B8E7     		b	.L392
 4306              	.LVL370:
 4307              	.L398:
2236:src/keys.c    **** 
 4308              		.loc 1 2236 15 view .LVU1361
 4309              	.LBE441:
 4310              	.LBE448:
2253:src/keys.c    ****        if (pos == 0)
 4311              		.loc 1 2253 8 is_stmt 1 view .LVU1362
2253:src/keys.c    ****        if (pos == 0)
 4312              		.loc 1 2253 22 is_stmt 0 view .LVU1363
 4313 01c6 0023     		movs	r3, #0
 4314 01c8 3B77     		strb	r3, [r7, #28]
2254:src/keys.c    **** 	 goto set_max;
 4315              		.loc 1 2254 8 is_stmt 1 view .LVU1364
2254:src/keys.c    **** 	 goto set_max;
 4316              		.loc 1 2254 11 is_stmt 0 view .LVU1365
 4317 01ca 002D     		cmp	r5, #0
 4318 01cc 5DD1     		bne	.L498
 4319              	.LVL371:
 4320              	.L412:
2347:src/keys.c    ****  set_pos:
 4321              		.loc 1 2347 4 is_stmt 1 view .LVU1366
2347:src/keys.c    ****  set_pos:
 4322              		.loc 1 2347 8 is_stmt 0 view .LVU1367
 4323 01ce 08F1FF35 		add	r5, r8, #-1
 4324              	.LVL372:
ARM GAS  /tmp/ccGwaFaD.s 			page 146


2347:src/keys.c    ****  set_pos:
 4325              		.loc 1 2347 8 view .LVU1368
 4326 01d2 77E7     		b	.L413
 4327              	.LVL373:
 4328              	.L397:
2261:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4329              		.loc 1 2261 8 is_stmt 1 view .LVU1369
2261:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4330              		.loc 1 2261 22 is_stmt 0 view .LVU1370
 4331 01d4 0023     		movs	r3, #0
 4332 01d6 3B77     		strb	r3, [r7, #28]
2262:src/keys.c    ****        if (pos >= ctmax)
 4333              		.loc 1 2262 8 is_stmt 1 view .LVU1371
2262:src/keys.c    ****        if (pos >= ctmax)
 4334              		.loc 1 2262 14 is_stmt 0 view .LVU1372
 4335 01d8 06E0     		b	.L416
 4336              	.LVL374:
 4337              	.L499:
2262:src/keys.c    ****        if (pos >= ctmax)
 4338              		.loc 1 2262 29 discriminator 1 view .LVU1373
 4339 01da 66B3     		cbz	r6, .L417
 4340              	.LBB449:
 4341              	.LBB450:
2197:src/keys.c    **** }
 4342              		.loc 1 2197 10 view .LVU1374
 4343 01dc FFF7FEFF 		bl	current_catalogue
 4344              	.LVL375:
2197:src/keys.c    **** }
 4345              		.loc 1 2197 33 view .LVU1375
 4346 01e0 00F0F000 		and	r0, r0, #240
 4347              	.LBE450:
 4348              	.LBE449:
2262:src/keys.c    ****        if (pos >= ctmax)
 4349              		.loc 1 2262 41 view .LVU1376
 4350 01e4 F028     		cmp	r0, #240
 4351 01e6 26D1     		bne	.L417
 4352              	.L416:
2262:src/keys.c    ****        if (pos >= ctmax)
 4353              		.loc 1 2262 65 is_stmt 1 discriminator 3 view .LVU1377
2262:src/keys.c    ****        if (pos >= ctmax)
 4354              		.loc 1 2262 14 discriminator 3 view .LVU1378
 4355 01e8 0135     		adds	r5, r5, #1
 4356              	.LVL376:
 4357              	.LBB453:
 4358              	.LBI449:
2196:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4359              		.loc 1 2196 12 discriminator 3 view .LVU1379
 4360              	.LBB451:
2197:src/keys.c    **** }
 4361              		.loc 1 2197 2 discriminator 3 view .LVU1380
 4362              	.LBE451:
 4363              	.LBE453:
2262:src/keys.c    ****        if (pos >= ctmax)
 4364              		.loc 1 2262 14 is_stmt 0 discriminator 3 view .LVU1381
 4365 01ea A845     		cmp	r8, r5
 4366              	.LBB454:
 4367              	.LBB452:
ARM GAS  /tmp/ccGwaFaD.s 			page 147


2197:src/keys.c    **** }
 4368              		.loc 1 2197 10 discriminator 3 view .LVU1382
 4369 01ec 2846     		mov	r0, r5
 4370              	.LBE452:
 4371              	.LBE454:
2262:src/keys.c    ****        if (pos >= ctmax)
 4372              		.loc 1 2262 14 discriminator 3 view .LVU1383
 4373 01ee F4DC     		bgt	.L499
 4374              	.LVL377:
2349:src/keys.c    ****      --pos;
 4375              		.loc 1 2349 10 is_stmt 1 view .LVU1384
2264:src/keys.c    ****        goto set_pos;
 4376              		.loc 1 2264 7 is_stmt 0 view .LVU1385
 4377 01f0 3546     		mov	r5, r6
 4378              	.LVL378:
2349:src/keys.c    ****      --pos;
 4379              		.loc 1 2349 10 view .LVU1386
 4380 01f2 06B3     		cbz	r6, .L417
 4381              	.LVL379:
2349:src/keys.c    ****      --pos;
 4382              		.loc 1 2349 10 view .LVU1387
 4383 01f4 0025     		movs	r5, #0
 4384              	.LVL380:
2349:src/keys.c    ****      --pos;
 4385              		.loc 1 2349 10 view .LVU1388
 4386 01f6 73E7     		b	.L411
 4387              	.LVL381:
 4388              	.L442:
2322:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4389              		.loc 1 2322 8 view .LVU1389
 4390 01f8 2B46     		mov	r3, r5
2323:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4391              		.loc 1 2323 6 is_stmt 1 view .LVU1390
2323:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4392              		.loc 1 2323 31 is_stmt 0 view .LVU1391
 4393 01fa 3B44     		add	r3, r3, r7
2323:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4394              		.loc 1 2323 27 view .LVU1392
 4395 01fc 0135     		adds	r5, r5, #1
 4396 01fe EDB2     		uxtb	r5, r5
 4397 0200 3D77     		strb	r5, [r7, #28]
2323:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4398              		.loc 1 2323 31 view .LVU1393
 4399 0202 83F82040 		strb	r4, [r3, #32]
 4400 0206 30E7     		b	.L410
 4401              	.LVL382:
 4402              	.L492:
2271:src/keys.c    ****        /*
 4403              		.loc 1 2271 6 is_stmt 1 view .LVU1394
2271:src/keys.c    ****        /*
 4404              		.loc 1 2271 9 is_stmt 0 view .LVU1395
 4405 0208 BAF1120F 		cmp	r10, #18
 4406 020c 21D0     		beq	.L500
 4407              	.L419:
2299:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4408              		.loc 1 2299 11 is_stmt 1 view .LVU1396
2299:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
ARM GAS  /tmp/ccGwaFaD.s 			page 148


 4409              		.loc 1 2299 14 is_stmt 0 view .LVU1397
 4410 020e 2428     		cmp	r0, #36
 4411 0210 85D0     		beq	.L501
 4412              	.LVL383:
 4413              	.L425:
2314:src/keys.c    ****    reset_shift();
 4414              		.loc 1 2314 4 is_stmt 1 view .LVU1398
 4415              	.LBB455:
 389:src/keys.c    **** {
 4416              		.loc 1 389 12 view .LVU1399
 4417              	.LBB414:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4418              		.loc 1 391 2 view .LVU1400
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4419              		.loc 1 439 2 view .LVU1401
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4420              		.loc 1 439 5 is_stmt 0 view .LVU1402
 4421 0212 0121     		movs	r1, #1
 4422              	.LVL384:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4423              		.loc 1 439 5 view .LVU1403
 4424 0214 0EE7     		b	.L428
 4425              	.LVL385:
 4426              	.L432:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4427              		.loc 1 439 5 view .LVU1404
 4428 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 4429              	.LVL386:
 4430              	.L434:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4431              		.loc 1 439 5 view .LVU1405
 4432              	.LBE414:
 4433              	.LBE455:
 4434              	.LBB456:
2343:src/keys.c    ****        goto set_pos;
 4435              		.loc 1 2343 6 is_stmt 1 view .LVU1406
2343:src/keys.c    ****        goto set_pos;
 4436              		.loc 1 2343 9 is_stmt 0 view .LVU1407
 4437 021a 002B     		cmp	r3, #0
 4438 021c 3FF450AF 		beq	.L433
 4439              	.LBE456:
2328:src/keys.c    ****      char buf[16];
 4440              		.loc 1 2328 31 is_stmt 1 view .LVU1408
 4441 0220 0135     		adds	r5, r5, #1
 4442              	.LVL387:
2328:src/keys.c    ****      char buf[16];
 4443              		.loc 1 2328 18 view .LVU1409
2328:src/keys.c    ****      char buf[16];
 4444              		.loc 1 2328 4 is_stmt 0 view .LVU1410
 4445 0222 A845     		cmp	r8, r5
 4446 0224 7FF429AF 		bne	.L430
 4447              	.LVL388:
 4448              	.L488:
2328:src/keys.c    ****      char buf[16];
 4449              		.loc 1 2328 4 view .LVU1411
 4450 0228 D9F80040 		ldr	r4, [r9]
 4451 022c CFE7     		b	.L412
ARM GAS  /tmp/ccGwaFaD.s 			page 149


 4452              	.LVL389:
 4453              	.L494:
2328:src/keys.c    ****      char buf[16];
 4454              		.loc 1 2328 4 view .LVU1412
 4455 022e 3A44     		add	r2, r2, r7
 4456              	.LVL390:
2328:src/keys.c    ****      char buf[16];
 4457              		.loc 1 2328 4 view .LVU1413
 4458 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4459              	.LVL391:
2328:src/keys.c    ****      char buf[16];
 4460              		.loc 1 2328 4 view .LVU1414
 4461 0234 F1E7     		b	.L434
 4462              	.LVL392:
 4463              	.L417:
2351:src/keys.c    ****    return STATE_UNFINISHED;
 4464              		.loc 1 2351 17 view .LVU1415
 4465 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 4466 023a 05F07F05 		and	r5, r5, #127
 4467              	.LVL393:
2351:src/keys.c    ****    return STATE_UNFINISHED;
 4468              		.loc 1 2351 4 is_stmt 1 view .LVU1416
2351:src/keys.c    ****    return STATE_UNFINISHED;
 4469              		.loc 1 2351 17 is_stmt 0 view .LVU1417
 4470 023e 65F34B13 		bfi	r3, r5, #5, #7
 4471 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2352:src/keys.c    ****  }
 4472              		.loc 1 2352 4 is_stmt 1 view .LVU1418
2352:src/keys.c    ****  }
 4473              		.loc 1 2352 11 is_stmt 0 view .LVU1419
 4474 0246 3320     		movs	r0, #51
 4475 0248 51E7     		b	.L502
 4476              	.LVL394:
 4477              	.L493:
2305:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4478              		.loc 1 2305 6 is_stmt 1 view .LVU1420
2305:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4479              		.loc 1 2305 9 is_stmt 0 view .LVU1421
 4480 024a 1028     		cmp	r0, #16
 4481 024c 23D0     		beq	.L503
 4482              	.L427:
2314:src/keys.c    ****    reset_shift();
 4483              		.loc 1 2314 4 is_stmt 1 view .LVU1422
 4484              	.LVL395:
 4485              	.LBB457:
 389:src/keys.c    **** {
 4486              		.loc 1 389 12 view .LVU1423
 4487              	.LBB415:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4488              		.loc 1 391 2 view .LVU1424
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4489              		.loc 1 439 2 view .LVU1425
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4490              		.loc 1 439 5 is_stmt 0 view .LVU1426
 4491 024e 0521     		movs	r1, #5
 4492              	.LVL396:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
ARM GAS  /tmp/ccGwaFaD.s 			page 150


 4493              		.loc 1 439 5 view .LVU1427
 4494 0250 F0E6     		b	.L428
 4495              	.LVL397:
 4496              	.L500:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4497              		.loc 1 439 5 view .LVU1428
 4498              	.LBE415:
 4499              	.LBE457:
2271:src/keys.c    ****        /*
 4500              		.loc 1 2271 32 discriminator 1 view .LVU1429
 4501 0252 0128     		cmp	r0, #1
 4502 0254 DBD1     		bne	.L419
 4503              	.LBB458:
2280:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4504              		.loc 1 2280 8 is_stmt 1 view .LVU1430
2288:src/keys.c    ****        int i;
 4505              		.loc 1 2288 8 view .LVU1431
2288:src/keys.c    ****        int i;
 4506              		.loc 1 2288 26 is_stmt 0 view .LVU1432
 4507 0256 2846     		mov	r0, r5
 4508              	.LVL398:
2288:src/keys.c    ****        int i;
 4509              		.loc 1 2288 26 view .LVU1433
 4510 0258 FFF7FEFF 		bl	current_catalogue
 4511              	.LVL399:
2288:src/keys.c    ****        int i;
 4512              		.loc 1 2288 26 view .LVU1434
 4513 025c 0446     		mov	r4, r0
 4514              	.LVL400:
2289:src/keys.c    **** 
 4515              		.loc 1 2289 8 is_stmt 1 view .LVU1435
2291:src/keys.c    ****        if (isRARG(op))
 4516              		.loc 1 2291 8 view .LVU1436
 4517 025e 0020     		movs	r0, #0
 4518              	.LVL401:
2291:src/keys.c    ****        if (isRARG(op))
 4519              		.loc 1 2291 8 is_stmt 0 view .LVU1437
 4520 0260 FFF7FEFF 		bl	init_cat
 4521              	.LVL402:
2292:src/keys.c    **** 	 return op ^ 1;
 4522              		.loc 1 2292 8 is_stmt 1 view .LVU1438
2292:src/keys.c    **** 	 return op ^ 1;
 4523              		.loc 1 2292 11 is_stmt 0 view .LVU1439
 4524 0264 14F47043 		ands	r3, r4, #61440
 4525 0268 29D0     		beq	.L420
2292:src/keys.c    **** 	 return op ^ 1;
 4526              		.loc 1 2292 12 discriminator 1 view .LVU1440
 4527 026a B3F5704F 		cmp	r3, #61440
 4528 026e 26D0     		beq	.L420
2293:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4529              		.loc 1 2293 3 is_stmt 1 view .LVU1441
2293:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4530              		.loc 1 2293 13 is_stmt 0 view .LVU1442
 4531 0270 84F00100 		eor	r0, r4, #1
 4532 0274 60E7     		b	.L392
 4533              	.LVL403:
 4534              	.L496:
ARM GAS  /tmp/ccGwaFaD.s 			page 151


2293:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4535              		.loc 1 2293 13 view .LVU1443
 4536              	.LBE458:
2240:src/keys.c    **** 	   goto search;
 4537              		.loc 1 2240 3 is_stmt 1 view .LVU1444
2240:src/keys.c    **** 	   goto search;
 4538              		.loc 1 2240 7 is_stmt 0 view .LVU1445
 4539 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 4540              	.LVL404:
2240:src/keys.c    **** 	   goto search;
 4541              		.loc 1 2240 7 view .LVU1446
 4542 0278 013D     		subs	r5, r5, #1
 4543 027a EDB2     		uxtb	r5, r5
2240:src/keys.c    **** 	   goto search;
 4544              		.loc 1 2240 6 view .LVU1447
 4545 027c 3D77     		strb	r5, [r7, #28]
 4546 027e 002D     		cmp	r5, #0
 4547 0280 7FF4F3AE 		bne	.L410
 4548 0284 D9F80040 		ldr	r4, [r9]
 4549 0288 2AE7     		b	.L411
 4550              	.LVL405:
 4551              	.L498:
2257:src/keys.c    ****        goto set_pos;
 4552              		.loc 1 2257 3 is_stmt 1 view .LVU1448
 4553 028a 013D     		subs	r5, r5, #1
 4554              	.LVL406:
2258:src/keys.c    **** 
 4555              		.loc 1 2258 8 view .LVU1449
 4556 028c 1AE7     		b	.L413
 4557              	.LVL407:
 4558              	.L497:
2258:src/keys.c    **** 
 4559              		.loc 1 2258 8 is_stmt 0 view .LVU1450
 4560 028e FFF7FEFF 		bl	current_catalogue
 4561              	.LVL408:
2258:src/keys.c    **** 
 4562              		.loc 1 2258 8 view .LVU1451
 4563 0292 0446     		mov	r4, r0
 4564 0294 75E7     		b	.L403
 4565              	.LVL409:
 4566              	.L503:
2305:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4567              		.loc 1 2305 19 discriminator 1 view .LVU1452
 4568 0296 BAF1130F 		cmp	r10, #19
 4569 029a D8D1     		bne	.L427
2306:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 4570              		.loc 1 2306 8 is_stmt 1 view .LVU1453
 4571 029c 0020     		movs	r0, #0
 4572              	.LVL410:
2306:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 4573              		.loc 1 2306 8 is_stmt 0 view .LVU1454
 4574 029e FFF7FEFF 		bl	init_cat
 4575              	.LVL411:
2307:src/keys.c    ****      }
 4576              		.loc 1 2307 8 is_stmt 1 view .LVU1455
2307:src/keys.c    ****      }
 4577              		.loc 1 2307 15 is_stmt 0 view .LVU1456
ARM GAS  /tmp/ccGwaFaD.s 			page 152


 4578 02a2 40F23D10 		movw	r0, #317
 4579 02a6 47E7     		b	.L392
 4580              	.L404:
 4581              	.LBB459:
2232:src/keys.c    **** 	 }
 4582              		.loc 1 2232 5 is_stmt 1 view .LVU1457
 4583              	.LBB442:
 4584              	.LBB443:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4585              		.loc 1 625 5 is_stmt 0 view .LVU1458
 4586 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 4587 02ac 012B     		cmp	r3, #1
 4588              	.LBE443:
 4589              	.LBE442:
2232:src/keys.c    **** 	 }
 4590              		.loc 1 2232 12 view .LVU1459
 4591 02ae 2046     		mov	r0, r4
 4592              	.LVL412:
 4593              	.LBB445:
 4594              	.LBI442:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4595              		.loc 1 624 12 is_stmt 1 view .LVU1460
 4596              	.LBB444:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4597              		.loc 1 625 2 view .LVU1461
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4598              		.loc 1 625 5 is_stmt 0 view .LVU1462
 4599 02b0 7FF442AF 		bne	.L392
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4600              		.loc 1 625 5 view .LVU1463
 4601 02b4 FFF7FEFF 		bl	check_confirm.part.0
 4602              	.LVL413:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4603              		.loc 1 625 5 view .LVU1464
 4604 02b8 3EE7     		b	.L392
 4605              	.LVL414:
 4606              	.L405:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4607              		.loc 1 625 5 view .LVU1465
 4608              	.LBE444:
 4609              	.LBE445:
 4610              	.LBB446:
2225:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4611              		.loc 1 2225 7 is_stmt 1 view .LVU1466
2225:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4612              		.loc 1 2225 14 is_stmt 0 view .LVU1467
 4613 02ba 2046     		mov	r0, r4
 4614 02bc 3CE7     		b	.L392
 4615              	.LVL415:
 4616              	.L420:
2225:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4617              		.loc 1 2225 14 view .LVU1468
 4618 02be 0C48     		ldr	r0, .L506+20
 4619              	.LBE446:
 4620              	.LBE459:
2203:src/keys.c    ****    int pos = State.catpos;
 4621              		.loc 1 2203 93 view .LVU1469
ARM GAS  /tmp/ccGwaFaD.s 			page 153


 4622 02c0 40F28522 		movw	r2, #645
 4623 02c4 0146     		mov	r1, r0
 4624 02c6 0023     		movs	r3, #0
 4625 02c8 01E0     		b	.L422
 4626              	.LVL416:
 4627              	.L505:
2203:src/keys.c    ****    int pos = State.catpos;
 4628              		.loc 1 2203 93 view .LVU1470
 4629 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 4630              	.LVL417:
 4631              	.L422:
 4632              	.LBB460:
2295:src/keys.c    **** 	   return conv_mapping[i^1];
 4633              		.loc 1 2295 3 is_stmt 1 view .LVU1471
2294:src/keys.c    **** 	 if (op == conv_mapping[i])
 4634              		.loc 1 2294 72 view .LVU1472
2295:src/keys.c    **** 	   return conv_mapping[i^1];
 4635              		.loc 1 2295 6 is_stmt 0 view .LVU1473
 4636 02ce A242     		cmp	r2, r4
 4637 02d0 1ED0     		beq	.L504
2294:src/keys.c    **** 	 if (op == conv_mapping[i])
 4638              		.loc 1 2294 72 discriminator 2 view .LVU1474
 4639 02d2 0133     		adds	r3, r3, #1
 4640              	.LVL418:
2294:src/keys.c    **** 	 if (op == conv_mapping[i])
 4641              		.loc 1 2294 20 is_stmt 1 discriminator 2 view .LVU1475
2294:src/keys.c    **** 	 if (op == conv_mapping[i])
 4642              		.loc 1 2294 8 is_stmt 0 discriminator 2 view .LVU1476
 4643 02d4 0C2B     		cmp	r3, #12
 4644 02d6 F8D1     		bne	.L505
 4645 02d8 2DE7     		b	.L490
 4646              	.L507:
 4647 02da 00BF     		.align	2
 4648              	.L506:
 4649 02dc 00000000 		.word	StateWhileOn
 4650 02e0 00000000 		.word	.LANCHOR2
 4651 02e4 00000000 		.word	.LANCHOR1
 4652 02e8 00000000 		.word	.LANCHOR9
 4653 02ec 00080800 		.word	526336
 4654 02f0 00000000 		.word	.LANCHOR8
 4655 02f4 00000000 		.word	main_ram
 4656 02f8 1F000000 		.word	StateWhileOn+31
 4657              	.LVL419:
 4658              	.L408:
2294:src/keys.c    **** 	 if (op == conv_mapping[i])
 4659              		.loc 1 2294 8 discriminator 2 view .LVU1477
 4660              	.LBE460:
 4661              	.LBB461:
 4662              	.LBB447:
2229:src/keys.c    **** 	 }
 4663              		.loc 1 2229 7 is_stmt 1 view .LVU1478
 4664              	.LBB439:
 4665              	.LBI439:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 4666              		.loc 1 506 13 view .LVU1479
 4667              	.LBB440:
 507:src/keys.c    **** 		return;
ARM GAS  /tmp/ccGwaFaD.s 			page 154


 4668              		.loc 1 507 2 view .LVU1480
 507:src/keys.c    **** 		return;
 4669              		.loc 1 507 6 is_stmt 0 view .LVU1481
 4670 02fc FFF7FEFF 		bl	is_bad_cmdline
 4671              	.LVL420:
 507:src/keys.c    **** 		return;
 4672              		.loc 1 507 5 view .LVU1482
 4673 0300 0028     		cmp	r0, #0
 4674 0302 7FF418AF 		bne	.L490
 4675 0306 2846     		mov	r0, r5
 4676 0308 FFF7FEFF 		bl	init_arg.part.0
 4677              	.LVL421:
 4678              	.LBE440:
 4679              	.LBE439:
 4680              	.LBE447:
 4681              	.LBE461:
2236:src/keys.c    **** 
 4682              		.loc 1 2236 15 view .LVU1483
 4683 030c 3320     		movs	r0, #51
 4684 030e 13E7     		b	.L392
 4685              	.LVL422:
 4686              	.L504:
 4687              	.LBB462:
2296:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4688              		.loc 1 2296 5 is_stmt 1 view .LVU1484
2296:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4689              		.loc 1 2296 26 is_stmt 0 view .LVU1485
 4690 0310 83F00103 		eor	r3, r3, #1
 4691              	.LVL423:
2296:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4692              		.loc 1 2296 24 view .LVU1486
 4693 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4694 0318 0EE7     		b	.L392
 4695              	.LBE462:
 4696              		.cfi_endproc
 4697              	.LFE43:
 4699              		.section	.text.find_pos,"ax",%progbits
 4700              		.align	1
 4701              		.p2align 2,,3
 4702              		.global	find_pos
 4703              		.syntax unified
 4704              		.thumb
 4705              		.thumb_func
 4706              		.fpu fpv4-sp-d16
 4708              	find_pos:
 4709              	.LVL424:
 4710              	.LFB44:
2356:src/keys.c    **** 	int pos;
 4711              		.loc 1 2356 32 is_stmt 1 view -0
 4712              		.cfi_startproc
 4713              		@ args = 0, pretend = 0, frame = 16
 4714              		@ frame_needed = 0, uses_anonymous_args = 0
2357:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4715              		.loc 1 2357 2 view .LVU1488
2358:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4716              		.loc 1 2358 2 view .LVU1489
 4717              	.LBB463:
ARM GAS  /tmp/ccGwaFaD.s 			page 155


 4718              	.LBI463:
2058:src/keys.c    **** 	// A quick table of catalogue sizes
 4719              		.loc 1 2058 5 view .LVU1490
 4720              	.LBB464:
2061:src/keys.c    **** 	{
 4721              		.loc 1 2061 2 view .LVU1491
2092:src/keys.c    **** #endif
 4722              		.loc 1 2092 2 view .LVU1492
 4723              	.LBE464:
 4724              	.LBE463:
2356:src/keys.c    **** 	int pos;
 4725              		.loc 1 2356 32 is_stmt 0 view .LVU1493
 4726 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4727              		.cfi_def_cfa_offset 32
 4728              		.cfi_offset 4, -32
 4729              		.cfi_offset 5, -28
 4730              		.cfi_offset 6, -24
 4731              		.cfi_offset 7, -20
 4732              		.cfi_offset 8, -16
 4733              		.cfi_offset 9, -12
 4734              		.cfi_offset 10, -8
 4735              		.cfi_offset 14, -4
 4736              	.LBB466:
 4737              	.LBB465:
2092:src/keys.c    **** #endif
 4738              		.loc 1 2092 31 view .LVU1494
 4739 0004 1E4B     		ldr	r3, .L525
2092:src/keys.c    **** #endif
 4740              		.loc 1 2092 24 view .LVU1495
 4741 0006 1F4A     		ldr	r2, .L525+4
2092:src/keys.c    **** #endif
 4742              		.loc 1 2092 31 view .LVU1496
 4743 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2092:src/keys.c    **** #endif
 4744              		.loc 1 2092 24 view .LVU1497
 4745 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4746              	.LVL425:
2092:src/keys.c    **** #endif
 4747              		.loc 1 2092 24 view .LVU1498
 4748              	.LBE465:
 4749              	.LBE466:
2359:src/keys.c    **** 		char buf[16];
 4750              		.loc 1 2359 2 is_stmt 1 view .LVU1499
2359:src/keys.c    **** 		char buf[16];
 4751              		.loc 1 2359 16 view .LVU1500
2356:src/keys.c    **** 	int pos;
 4752              		.loc 1 2356 32 is_stmt 0 view .LVU1501
 4753 000e 84B0     		sub	sp, sp, #16
 4754              		.cfi_def_cfa_offset 48
2359:src/keys.c    **** 		char buf[16];
 4755              		.loc 1 2359 2 view .LVU1502
 4756 0010 BAF1000F 		cmp	r10, #0
 4757 0014 32D0     		beq	.L515
 4758 0016 8146     		mov	r9, r0
2359:src/keys.c    **** 		char buf[16];
 4759              		.loc 1 2359 11 view .LVU1503
 4760 0018 4FF00008 		mov	r8, #0
ARM GAS  /tmp/ccGwaFaD.s 			page 156


 4761 001c C0F10107 		rsb	r7, r0, #1
 4762              	.LVL426:
 4763              	.L514:
 4764              	.LBB467:
2360:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4765              		.loc 1 2360 3 is_stmt 1 view .LVU1504
2361:src/keys.c    **** 		int i;
 4766              		.loc 1 2361 3 view .LVU1505
2361:src/keys.c    **** 		int i;
 4767              		.loc 1 2361 21 is_stmt 0 view .LVU1506
 4768 0020 4046     		mov	r0, r8
 4769 0022 FFF7FEFF 		bl	current_catalogue
 4770              	.LVL427:
 4771 0026 6946     		mov	r1, sp
 4772 0028 FFF7FEFF 		bl	catcmd
 4773              	.LVL428:
 4774 002c 0646     		mov	r6, r0
 4775              	.LVL429:
2362:src/keys.c    **** 
 4776              		.loc 1 2362 3 is_stmt 1 view .LVU1507
2364:src/keys.c    **** 			cmd++;
 4777              		.loc 1 2364 3 view .LVU1508
2365:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4778              		.loc 1 2365 4 view .LVU1509
2364:src/keys.c    **** 			cmd++;
 4779              		.loc 1 2364 7 is_stmt 0 view .LVU1510
 4780 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4781              	.LVL430:
2364:src/keys.c    **** 			cmd++;
 4782              		.loc 1 2364 6 view .LVU1511
 4783 0030 1428     		cmp	r0, #20
 4784 0032 04BF     		itt	eq
 4785 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2365:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4786              		.loc 1 2365 7 view .LVU1512
 4787 0036 0136     		addeq	r6, r6, #1
 4788              	.LVL431:
2366:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4789              		.loc 1 2366 3 is_stmt 1 view .LVU1513
2366:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4790              		.loc 1 2366 13 view .LVU1514
2366:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4791              		.loc 1 2366 3 is_stmt 0 view .LVU1515
 4792 0038 A8B1     		cbz	r0, .L516
 4793 003a 09F1FF33 		add	r3, r9, #-1
 4794 003e 04E0     		b	.L513
 4795              	.LVL432:
 4796              	.L524:
 4797              	.LBB468:
2371:src/keys.c    **** 				break;
 4798              		.loc 1 2371 12 view .LVU1516
 4799 0040 12DB     		blt	.L511
 4800              	.LBE468:
2366:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4801              		.loc 1 2366 16 discriminator 2 view .LVU1517
 4802 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4803              	.LVL433:
ARM GAS  /tmp/ccGwaFaD.s 			page 157


2366:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4804              		.loc 1 2366 16 discriminator 2 view .LVU1518
 4805 0046 3C44     		add	r4, r4, r7
2366:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4806              		.loc 1 2366 3 discriminator 2 view .LVU1519
 4807 0048 B0B1     		cbz	r0, .L523
 4808              	.LVL434:
 4809              	.L513:
 4810              	.LBB469:
2367:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4811              		.loc 1 2367 4 is_stmt 1 view .LVU1520
 4812 004a 5C1C     		adds	r4, r3, #1
2367:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4813              		.loc 1 2367 18 is_stmt 0 view .LVU1521
 4814 004c FFF7FEFF 		bl	remap_chars
 4815              	.LVL435:
 4816 0050 0546     		mov	r5, r0
2368:src/keys.c    **** 			if (c > cl)
 4817              		.loc 1 2368 19 view .LVU1522
 4818 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4819              	.LVL436:
2368:src/keys.c    **** 			if (c > cl)
 4820              		.loc 1 2368 4 is_stmt 1 view .LVU1523
2368:src/keys.c    **** 			if (c > cl)
 4821              		.loc 1 2368 19 is_stmt 0 view .LVU1524
 4822 0054 FFF7FEFF 		bl	remap_chars
 4823              	.LVL437:
2371:src/keys.c    **** 				break;
 4824              		.loc 1 2371 9 is_stmt 1 view .LVU1525
 4825              	.LBE469:
2366:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4826              		.loc 1 2366 29 view .LVU1526
2366:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4827              		.loc 1 2366 13 view .LVU1527
 4828              	.LBB470:
2369:src/keys.c    **** 				return pos;
 4829              		.loc 1 2369 4 view .LVU1528
2369:src/keys.c    **** 				return pos;
 4830              		.loc 1 2369 7 is_stmt 0 view .LVU1529
 4831 0058 8542     		cmp	r5, r0
 4832 005a 2346     		mov	r3, r4
 4833 005c F0DD     		ble	.L524
 4834              	.LVL438:
 4835              	.L508:
2369:src/keys.c    **** 				return pos;
 4836              		.loc 1 2369 7 view .LVU1530
 4837              	.LBE470:
 4838              	.LBE467:
2378:src/keys.c    **** 
 4839              		.loc 1 2378 1 view .LVU1531
 4840 005e 4046     		mov	r0, r8
 4841 0060 04B0     		add	sp, sp, #16
 4842              		.cfi_remember_state
 4843              		.cfi_def_cfa_offset 32
 4844              		@ sp needed
 4845 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4846              	.LVL439:
ARM GAS  /tmp/ccGwaFaD.s 			page 158


 4847              	.L516:
 4848              		.cfi_restore_state
 4849              	.LBB471:
2366:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4850              		.loc 1 2366 3 view .LVU1532
 4851 0066 4C46     		mov	r4, r9
 4852              	.LVL440:
 4853              	.L511:
2374:src/keys.c    **** 			return pos;
 4854              		.loc 1 2374 3 is_stmt 1 view .LVU1533
2374:src/keys.c    **** 			return pos;
 4855              		.loc 1 2374 6 is_stmt 0 view .LVU1534
 4856 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4857 006a 002B     		cmp	r3, #0
 4858 006c F7D0     		beq	.L508
 4859              	.LBE471:
2359:src/keys.c    **** 		char buf[16];
 4860              		.loc 1 2359 29 is_stmt 1 view .LVU1535
 4861 006e 08F10108 		add	r8, r8, #1
 4862              	.LVL441:
2359:src/keys.c    **** 		char buf[16];
 4863              		.loc 1 2359 16 view .LVU1536
2359:src/keys.c    **** 		char buf[16];
 4864              		.loc 1 2359 2 is_stmt 0 view .LVU1537
 4865 0072 D045     		cmp	r8, r10
 4866 0074 D4D1     		bne	.L514
 4867 0076 F2E7     		b	.L508
 4868              	.LVL442:
 4869              	.L523:
2359:src/keys.c    **** 		char buf[16];
 4870              		.loc 1 2359 2 view .LVU1538
 4871 0078 4C44     		add	r4, r4, r9
 4872 007a F5E7     		b	.L511
 4873              	.LVL443:
 4874              	.L515:
2359:src/keys.c    **** 		char buf[16];
 4875              		.loc 1 2359 11 view .LVU1539
 4876 007c D046     		mov	r8, r10
 4877 007e EEE7     		b	.L508
 4878              	.L526:
 4879              		.align	2
 4880              	.L525:
 4881 0080 00000000 		.word	StateWhileOn
 4882 0084 00000000 		.word	.LANCHOR2
 4883              		.cfi_endproc
 4884              	.LFE44:
 4886              		.section	.text.get_alpha_state,"ax",%progbits
 4887              		.align	1
 4888              		.p2align 2,,3
 4889              		.global	get_alpha_state
 4890              		.syntax unified
 4891              		.thumb
 4892              		.thumb_func
 4893              		.fpu fpv4-sp-d16
 4895              	get_alpha_state:
 4896              	.LFB56:
2703:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 159


2704:src/keys.c    **** 
2705:src/keys.c    **** static int process_registerlist(const keycode c) {
2706:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2707:src/keys.c    **** 	enum shifts shift = reset_shift();
2708:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2709:src/keys.c    **** 	const int g_max = global_regs();
2710:src/keys.c    **** 
2711:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2712:src/keys.c    **** 		if (local_regs())
2713:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2714:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2715:src/keys.c    **** 		goto reset_window;
2716:src/keys.c    **** 	}
2717:src/keys.c    **** 	else if (n <= 9) {
2718:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2719:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2720:src/keys.c    **** 			dv = n;
2721:src/keys.c    **** 		State2.digval = dv;
2722:src/keys.c    **** 		goto reset_window;
2723:src/keys.c    **** 	}
2724:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2725:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2726:src/keys.c    **** 		set_smode(SDISP_SHOW);
2727:src/keys.c    **** 	}
2728:src/keys.c    **** 	else if (n != NO_REG) {
2729:src/keys.c    **** 		State2.digval = n;
2730:src/keys.c    **** 		goto reset_window;
2731:src/keys.c    **** 	}
2732:src/keys.c    **** 
2733:src/keys.c    **** 	switch (c) {
2734:src/keys.c    **** 	case K_DOWN:
2735:src/keys.c    **** 		if (State2.digval > 0) {
2736:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2737:src/keys.c    **** 				State2.digval = global_regs();
2738:src/keys.c    **** 			--State2.digval;
2739:src/keys.c    **** 		}
2740:src/keys.c    **** 		else
2741:src/keys.c    **** 			State2.digval = max - 1;
2742:src/keys.c    **** 		goto reset_window;
2743:src/keys.c    **** 
2744:src/keys.c    **** 	case K_UP:
2745:src/keys.c    **** 		if (State2.digval < max - 1) {
2746:src/keys.c    **** 			State2.digval++;
2747:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2748:src/keys.c    **** 				State2.digval = regX_idx;
2749:src/keys.c    **** 		}
2750:src/keys.c    **** 		else	
2751:src/keys.c    **** 			State2.digval = 0;
2752:src/keys.c    **** 		goto reset_window;
2753:src/keys.c    **** 
2754:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2755:src/keys.c    **** 	case K04:
2756:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2757:src/keys.c    **** 		goto reset_window;
2758:src/keys.c    **** #endif
2759:src/keys.c    **** 
2760:src/keys.c    **** 	case K24:			
ARM GAS  /tmp/ccGwaFaD.s 			page 160


2761:src/keys.c    **** 	//case K60:
2762:src/keys.c    **** 		if (State2.disp_temp)
2763:src/keys.c    **** 			return STATE_UNFINISHED;
2764:src/keys.c    **** 		break;		// Exit doing nothing
2765:src/keys.c    **** 
2766:src/keys.c    **** 	case K20:		// ENTER
2767:src/keys.c    **** 		if (shift == SHIFT_F) {
2768:src/keys.c    **** 			State2.disp_as_alpha = 1;
2769:src/keys.c    **** 			goto reset_window;
2770:src/keys.c    **** 		}
2771:src/keys.c    **** 	case K11:		// RCL
2772:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2773:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2774:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2775:src/keys.c    **** #else
2776:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2777:src/keys.c    **** #endif
2778:src/keys.c    **** 			State2.registerlist = 0;
2779:src/keys.c    **** 			State2.digval = 0;
2780:src/keys.c    **** 			State2.digval2 = 0;
2781:src/keys.c    **** 			return n;
2782:src/keys.c    **** 		}
2783:src/keys.c    **** 	default:
2784:src/keys.c    **** 		return STATE_UNFINISHED;
2785:src/keys.c    **** 	}
2786:src/keys.c    **** 	State2.registerlist = 0;
2787:src/keys.c    **** 	State2.digval = 0;
2788:src/keys.c    **** 	State2.digval2 = 0;
2789:src/keys.c    **** reset_window:
2790:src/keys.c    **** 	State2.window = 0;
2791:src/keys.c    **** 	return STATE_UNFINISHED;
2792:src/keys.c    **** }
2793:src/keys.c    **** 
2794:src/keys.c    **** 
2795:src/keys.c    **** static int process(const int c) {
2796:src/keys.c    ****   const enum shifts shift = cur_shift();
2797:src/keys.c    ****   enum catalogues cat;
2798:src/keys.c    **** 
2799:src/keys.c    ****   if (Running || Pause) {
2800:src/keys.c    ****     /*
2801:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2802:src/keys.c    ****      */
2803:src/keys.c    ****     if (c == K60 || c == K63) {
2804:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2805:src/keys.c    **** 	set_pc(0);
2806:src/keys.c    ****       Pause = 0;
2807:src/keys.c    ****       xeq_xrom();
2808:src/keys.c    ****       set_running_off();
2809:src/keys.c    ****       DispMsg = "Stopped";
2810:src/keys.c    ****       State2.disp_freeze = 0;
2811:src/keys.c    ****       return STATE_UNFINISHED;
2812:src/keys.c    ****     }
2813:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2814:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2815:src/keys.c    ****       Pause = 0;			// leave PSE statement
2816:src/keys.c    ****       GoFast = 1;
2817:src/keys.c    ****     }
ARM GAS  /tmp/ccGwaFaD.s 			page 161


2818:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2819:src/keys.c    ****     return STATE_RUNNING;
2820:src/keys.c    ****   }
2821:src/keys.c    **** 
2822:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2823:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2824:src/keys.c    ****    * if required.
2825:src/keys.c    ****    */
2826:src/keys.c    **** #ifdef DM42
2827:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
2828:src/keys.c    **** #else
2829:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
2830:src/keys.c    **** #endif
2831:src/keys.c    ****     {
2832:src/keys.c    ****       soft_init_state();
2833:src/keys.c    ****       return STATE_UNFINISHED;
2834:src/keys.c    ****     }
2835:src/keys.c    **** 
2836:src/keys.c    **** #ifndef CONSOLE
2837:src/keys.c    **** 	if (c == K63 && JustStopped) {
2838:src/keys.c    **** 		// Avoid an accidental restart with R/S
2839:src/keys.c    **** 		JustStopped = 0;
2840:src/keys.c    **** 		return STATE_IGNORE;
2841:src/keys.c    **** 	}
2842:src/keys.c    **** #endif
2843:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2844:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2845:src/keys.c    **** 	 */
2846:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2847:src/keys.c    **** 		CmdLineLength = 0;
2848:src/keys.c    **** 	/*
2849:src/keys.c    **** 	 *  Process the various cases
2850:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2851:src/keys.c    **** 	 */
2852:src/keys.c    **** 	if (State2.confirm)
2853:src/keys.c    **** 		return process_confirm((const keycode)c);
2854:src/keys.c    **** 
2855:src/keys.c    **** 	if (State2.rarg)
2856:src/keys.c    **** 		return process_arg((const keycode)c);
2857:src/keys.c    **** 
2858:src/keys.c    **** 	if (State2.gtodot)
2859:src/keys.c    **** 		return process_gtodot((const keycode)c);
2860:src/keys.c    **** 
2861:src/keys.c    **** 	if (State2.hyp)
2862:src/keys.c    **** 		return process_hyp((const keycode)c);
2863:src/keys.c    **** 
2864:src/keys.c    **** 	if (State2.test != TST_NONE)
2865:src/keys.c    **** 		return process_test((const keycode)c);
2866:src/keys.c    **** 
2867:src/keys.c    **** 	if (State2.status)
2868:src/keys.c    **** 		return process_status((const keycode)c);
2869:src/keys.c    **** 
2870:src/keys.c    **** 	/*
2871:src/keys.c    **** 	 *  Process shift keys directly
2872:src/keys.c    **** 	 */
2873:src/keys.c    **** 	if (c == K_F) {
2874:src/keys.c    **** 		toggle_shift(SHIFT_F);
ARM GAS  /tmp/ccGwaFaD.s 			page 162


2875:src/keys.c    **** 		return STATE_UNFINISHED;
2876:src/keys.c    **** 	}
2877:src/keys.c    **** 	if (c == K_G) {
2878:src/keys.c    **** 		toggle_shift(SHIFT_G);
2879:src/keys.c    **** 		return STATE_UNFINISHED;
2880:src/keys.c    **** 	}
2881:src/keys.c    **** 	if (c == K_H) {
2882:src/keys.c    **** 		toggle_shift(SHIFT_H);
2883:src/keys.c    **** 		State2.arrow = 0;
2884:src/keys.c    **** 		return STATE_UNFINISHED;
2885:src/keys.c    **** 	}
2886:src/keys.c    **** 	/*
2887:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2888:src/keys.c    **** 	 */
2889:src/keys.c    **** 	// print_debug (2, c);
2890:src/keys.c    **** 	if (State2.arrow)
2891:src/keys.c    **** 		return process_arrow((const keycode)c);
2892:src/keys.c    **** 
2893:src/keys.c    **** 	/*
2894:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2895:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2896:src/keys.c    **** 	 * works and were not
2897:src/keys.c    **** 	 */
2898:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2899:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2900:src/keys.c    **** 		if (is_bad_cmdline())
2901:src/keys.c    **** 			return STATE_UNFINISHED;
2902:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2903:src/keys.c    **** 		init_cat( cat );
2904:src/keys.c    **** 		return STATE_UNFINISHED;
2905:src/keys.c    **** 	}
2906:src/keys.c    **** 
2907:src/keys.c    **** 	/*
2908:src/keys.c    **** 	 *  More handlers...
2909:src/keys.c    **** 	 */
2910:src/keys.c    **** 	if (State2.multi)
2911:src/keys.c    **** 		return process_multi((const keycode)c);
2912:src/keys.c    **** 
2913:src/keys.c    **** 	if (State2.labellist)
2914:src/keys.c    **** 		return process_labellist((const keycode)c);
2915:src/keys.c    **** 
2916:src/keys.c    **** 	if (State2.registerlist)
2917:src/keys.c    **** 		return process_registerlist((const keycode)c);
2918:src/keys.c    **** 
2919:src/keys.c    **** 	if (State2.catalogue)
2920:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2921:src/keys.c    **** 
2922:src/keys.c    **** 	if (State2.alphas) {
2923:src/keys.c    **** #ifndef INFRARED
2924:src/keys.c    **** 		return process_alpha((const keycode)c);
2925:src/keys.c    **** #else
2926:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2927:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2928:src/keys.c    **** 			print_tab(0);
2929:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2930:src/keys.c    **** 		}
2931:src/keys.c    **** 		return i;
ARM GAS  /tmp/ccGwaFaD.s 			page 163


2932:src/keys.c    **** #endif
2933:src/keys.c    **** 	}
2934:src/keys.c    **** 
2935:src/keys.c    **** 	if (State2.cmplx) {
2936:src/keys.c    **** 		return process_cmplx((const keycode)c);
2937:src/keys.c    **** 	} else {
2938:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2939:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2940:src/keys.c    **** 		if (shift == SHIFT_H)
2941:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2942:src/keys.c    **** 		// print_debug (3, c);
2943:src/keys.c    **** 		return process_normal((const keycode)c);
2944:src/keys.c    **** 	}
2945:src/keys.c    **** }
2946:src/keys.c    **** 
2947:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4897              		.loc 1 2947 40 is_stmt 1 view -0
 4898              		.cfi_startproc
 4899              		@ args = 0, pretend = 0, frame = 0
 4900              		@ frame_needed = 0, uses_anonymous_args = 0
 4901              		@ link register save eliminated.
2948:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4902              		.loc 1 2948 4 view .LVU1541
 4903              		.loc 1 2948 53 is_stmt 0 view .LVU1542
 4904 0000 074B     		ldr	r3, .L532
 4905              		.loc 1 2948 44 view .LVU1543
 4906 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4907 0004 1AB9     		cbnz	r2, .L530
2949:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2950:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 4908              		.loc 1 2950 5 discriminator 2 view .LVU1544
 4909 0006 5969     		ldr	r1, [r3, #20]
 4910 0008 064A     		ldr	r2, .L532+4
 4911 000a 0A40     		ands	r2, r2, r1
 4912 000c 0AB1     		cbz	r2, .L531
 4913              	.L530:
 4914 000e 0120     		movs	r0, #1
2951:src/keys.c    ****  }
 4915              		.loc 1 2951 2 view .LVU1545
 4916 0010 7047     		bx	lr
 4917              	.L531:
2950:src/keys.c    ****  }
 4918              		.loc 1 2950 42 discriminator 3 view .LVU1546
 4919 0012 D889     		ldrh	r0, [r3, #14]
 4920 0014 B0F5E060 		subs	r0, r0, #1792
 4921 0018 18BF     		it	ne
 4922 001a 0120     		movne	r0, #1
 4923 001c 7047     		bx	lr
 4924              	.L533:
 4925 001e 00BF     		.align	2
 4926              	.L532:
 4927 0020 00000000 		.word	StateWhileOn
 4928 0024 0709280C 		.word	203950343
 4929              		.cfi_endproc
 4930              	.LFE56:
 4932              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4933              		.align	2
ARM GAS  /tmp/ccGwaFaD.s 			page 164


 4934              	.LC0:
 4935 0000 52554E00 		.ascii	"RUN\000"
 4936              		.align	2
 4937              	.LC1:
 4938 0004 4E554C4C 		.ascii	"NULL\000"
 4938      00
 4939 0009 000000   		.align	2
 4940              	.LC2:
 4941 000c 53746F70 		.ascii	"Stopped\000"
 4941      70656400 
 4942              		.section	.text.process_keycode,"ax",%progbits
 4943              		.align	1
 4944              		.p2align 2,,3
 4945              		.global	process_keycode
 4946              		.syntax unified
 4947              		.thumb
 4948              		.thumb_func
 4949              		.fpu fpv4-sp-d16
 4951              	process_keycode:
 4952              	.LVL444:
 4953              	.LFB58:
2952:src/keys.c    **** 
2953:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2954:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
2955:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
2956:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
2957:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
2958:src/keys.c    ****        // Was error just wait for confirmation
2959:src/keys.c    ****        wait_for_key_press();
2960:src/keys.c    ****      }
2961:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
2962:src/keys.c    ****      return;
2963:src/keys.c    ****    }
2964:src/keys.c    ****    if (remapped.key_34s == K_OP) {
2965:src/keys.c    ****      nd_opcode = remapped.shift;
2966:src/keys.c    ****      set_shift(SHIFT_N);
2967:src/keys.c    ****    }
2968:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
2969:src/keys.c    ****    process_keycode ( remapped.key_34s );
2970:src/keys.c    ****  }
2971:src/keys.c    ****  
2972:src/keys.c    **** /*
2973:src/keys.c    ****  *  Fed with key codes by the event loop
2974:src/keys.c    ****  */
2975:src/keys.c    **** void process_keycode(int c)
2976:src/keys.c    **** {
 4954              		.loc 1 2976 1 is_stmt 1 view -0
 4955              		.cfi_startproc
 4956              		@ args = 0, pretend = 0, frame = 8
 4957              		@ frame_needed = 0, uses_anonymous_args = 0
2977:src/keys.c    ****   static int was_paused;
 4958              		.loc 1 2977 3 view .LVU1548
2978:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2979:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4959              		.loc 1 2979 3 view .LVU1549
2980:src/keys.c    ****   if (was_paused && Pause == 0)
 4960              		.loc 1 2980 3 view .LVU1550
ARM GAS  /tmp/ccGwaFaD.s 			page 165


2976:src/keys.c    ****   static int was_paused;
 4961              		.loc 1 2976 1 is_stmt 0 view .LVU1551
 4962 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4963              		.cfi_def_cfa_offset 36
 4964              		.cfi_offset 4, -36
 4965              		.cfi_offset 5, -32
 4966              		.cfi_offset 6, -28
 4967              		.cfi_offset 7, -24
 4968              		.cfi_offset 8, -20
 4969              		.cfi_offset 9, -16
 4970              		.cfi_offset 10, -12
 4971              		.cfi_offset 11, -8
 4972              		.cfi_offset 14, -4
 4973              		.loc 1 2980 7 view .LVU1552
 4974 0004 964D     		ldr	r5, .L1202
 4975              		.loc 1 2980 27 view .LVU1553
 4976 0006 974F     		ldr	r7, .L1202+4
 4977              		.loc 1 2980 6 view .LVU1554
 4978 0008 2B68     		ldr	r3, [r5]
2976:src/keys.c    ****   static int was_paused;
 4979              		.loc 1 2976 1 view .LVU1555
 4980 000a 83B0     		sub	sp, sp, #12
 4981              		.cfi_def_cfa_offset 48
2976:src/keys.c    ****   static int was_paused;
 4982              		.loc 1 2976 1 view .LVU1556
 4983 000c 0446     		mov	r4, r0
 4984              		.loc 1 2980 6 view .LVU1557
 4985 000e 1BB1     		cbz	r3, .L535
 4986              		.loc 1 2980 27 discriminator 1 view .LVU1558
 4987 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4988              		.loc 1 2980 18 discriminator 1 view .LVU1559
 4989 0012 002B     		cmp	r3, #0
 4990 0014 00F00B82 		beq	.L1102
 4991              	.LVL445:
 4992              	.L535:
2981:src/keys.c    ****     {
2982:src/keys.c    ****     /*
2983:src/keys.c    ****      *  Continue XROM execution after a pause
2984:src/keys.c    ****      */
2985:src/keys.c    ****       xeq_xrom();
2986:src/keys.c    ****     }
2987:src/keys.c    ****   was_paused = Pause;
 4993              		.loc 1 2987 3 is_stmt 1 view .LVU1560
 4994              		.loc 1 2987 14 is_stmt 0 view .LVU1561
 4995 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4996 001a 2B60     		str	r3, [r5]
2988:src/keys.c    ****   if (c == K_NOP)
 4997              		.loc 1 2988 3 is_stmt 1 view .LVU1562
 4998              		.loc 1 2988 6 is_stmt 0 view .LVU1563
 4999 001c 2E2C     		cmp	r4, #46
 5000 001e 00F0C781 		beq	.L1103
2989:src/keys.c    ****     {
2990:src/keys.c    ****       OpCode = 0;
2991:src/keys.c    ****     }
2992:src/keys.c    ****   else if (c == K_HEARTBEAT)
 5001              		.loc 1 2992 8 is_stmt 1 view .LVU1564
 5002              		.loc 1 2992 11 is_stmt 0 view .LVU1565
ARM GAS  /tmp/ccGwaFaD.s 			page 166


 5003 0022 622C     		cmp	r4, #98
 5004 0024 71D0     		beq	.L1104
2993:src/keys.c    ****     {
2994:src/keys.c    ****     /*
2995:src/keys.c    ****      *  Heartbeat processing goes here.
2996:src/keys.c    ****      *  This is totally thread safe!
2997:src/keys.c    ****      */
2998:src/keys.c    ****     if (Keyticks >= 2) {
2999:src/keys.c    ****       /*
3000:src/keys.c    ****        *  Some time has passed after last key press
3001:src/keys.c    ****        */
3002:src/keys.c    ****       if (OpCode != 0) {
3003:src/keys.c    **** 	/*
3004:src/keys.c    **** 	 *  Handle command display and NULL here
3005:src/keys.c    **** 	 */
3006:src/keys.c    **** 	if (OpCodeDisplayPending) {
3007:src/keys.c    **** 	  /*
3008:src/keys.c    **** 	   *  Show command to the user
3009:src/keys.c    **** 	   */
3010:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3011:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3012:src/keys.c    **** 	    DispMsg = "RUN";
3013:src/keys.c    **** 	  }
3014:src/keys.c    **** 	  else {
3015:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3016:src/keys.c    **** 	    DispMsg = TraceBuffer;
3017:src/keys.c    **** 	  }
3018:src/keys.c    **** 	  display();
3019:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3020:src/keys.c    **** 	}
3021:src/keys.c    ****     else if (Keyticks > 12) {
3022:src/keys.c    **** 	  /*
3023:src/keys.c    **** 	   *  Key is too long held down
3024:src/keys.c    **** 	   */
3025:src/keys.c    **** 	  OpCode = 0;
3026:src/keys.c    **** 	  message("NULL", CNULL);
3027:src/keys.c    **** 	  // Force display update on key-up
3028:src/keys.c    **** 	  State2.disp_temp = 0;
3029:src/keys.c    **** 	}
3030:src/keys.c    ****       }
3031:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3032:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3033:src/keys.c    **** 	State2.shifts = SHIFT_N;
3034:src/keys.c    ****       }
3035:src/keys.c    ****     }
3036:src/keys.c    **** 
3037:src/keys.c    ****     /*
3038:src/keys.c    ****      *  Serve the watchdog
3039:src/keys.c    ****      */
3040:src/keys.c    ****     watchdog();
3041:src/keys.c    **** 
3042:src/keys.c    **** #ifndef CONSOLE
3043:src/keys.c    ****     /*
3044:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3045:src/keys.c    ****      */
3046:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3047:src/keys.c    ****       JustStopped = 0;
ARM GAS  /tmp/ccGwaFaD.s 			page 167


3048:src/keys.c    ****     }
3049:src/keys.c    **** #endif
3050:src/keys.c    **** 
3051:src/keys.c    ****     /*
3052:src/keys.c    ****      *  Do nothing if not running a program
3053:src/keys.c    ****      */
3054:src/keys.c    ****     if (!Running && ! Pause)
3055:src/keys.c    ****       return;
3056:src/keys.c    ****   }
3057:src/keys.c    ****   else {
3058:src/keys.c    ****     /*
3059:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3060:src/keys.c    ****      */
3061:src/keys.c    ****     xeq_init_contexts();
 5005              		.loc 1 3061 5 is_stmt 1 view .LVU1566
3062:src/keys.c    ****     State2.wascomplex = 0;
 5006              		.loc 1 3062 23 is_stmt 0 view .LVU1567
 5007 0026 DFF85882 		ldr	r8, .L1202+32
3061:src/keys.c    ****     State2.wascomplex = 0;
 5008              		.loc 1 3061 5 view .LVU1568
 5009 002a FFF7FEFF 		bl	xeq_init_contexts
 5010              	.LVL446:
 5011              		.loc 1 3062 5 is_stmt 1 view .LVU1569
 5012              		.loc 1 3062 23 is_stmt 0 view .LVU1570
 5013 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3063:src/keys.c    **** 
3064:src/keys.c    ****     if (is_dot(RPN)) {
 5014              		.loc 1 3064 9 view .LVU1571
 5015 0032 8D20     		movs	r0, #141
3062:src/keys.c    **** 
 5016              		.loc 1 3062 23 view .LVU1572
 5017 0034 6FF38713 		bfc	r3, #6, #2
 5018 0038 88F81430 		strb	r3, [r8, #20]
 5019              		.loc 1 3064 5 is_stmt 1 view .LVU1573
 5020              		.loc 1 3064 9 is_stmt 0 view .LVU1574
 5021 003c FFF7FEFF 		bl	is_dot
 5022              	.LVL447:
 5023              		.loc 1 3064 8 view .LVU1575
 5024 0040 0028     		cmp	r0, #0
 5025 0042 40F07F82 		bne	.L1105
 5026              	.L553:
3065:src/keys.c    ****       /*
3066:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3067:src/keys.c    ****        */
3068:src/keys.c    ****       clr_dot(RPN);
3069:src/keys.c    ****       finish_RPN(); // RPN
3070:src/keys.c    ****     }
3071:src/keys.c    **** 
3072:src/keys.c    **** #ifndef CONSOLE
3073:src/keys.c    ****     /*
3074:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3075:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3076:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3077:src/keys.c    ****      *  an accidental restart of the program.
3078:src/keys.c    ****      */
3079:src/keys.c    ****     if (c != K63)
 5027              		.loc 1 3079 5 is_stmt 1 view .LVU1576
ARM GAS  /tmp/ccGwaFaD.s 			page 168


 5028              		.loc 1 3079 8 is_stmt 0 view .LVU1577
 5029 0046 272C     		cmp	r4, #39
 5030 0048 00F07982 		beq	.L1106
3080:src/keys.c    ****       JustStopped = 0;
 5031              		.loc 1 3080 7 is_stmt 1 view .LVU1578
 5032              		.loc 1 3080 19 is_stmt 0 view .LVU1579
 5033 004c 864B     		ldr	r3, .L1202+8
 5034 004e 0025     		movs	r5, #0
3081:src/keys.c    **** #endif
3082:src/keys.c    ****   }
3083:src/keys.c    **** 
3084:src/keys.c    ****   /*
3085:src/keys.c    ****    *  Handle key release
3086:src/keys.c    ****    */
3087:src/keys.c    ****   if (c == K_RELEASE)
 5035              		.loc 1 3087 6 view .LVU1580
 5036 0050 632C     		cmp	r4, #99
3080:src/keys.c    ****       JustStopped = 0;
 5037              		.loc 1 3080 19 view .LVU1581
 5038 0052 1D60     		str	r5, [r3]
 5039              		.loc 1 3087 3 is_stmt 1 view .LVU1582
 5040              		.loc 1 3087 6 is_stmt 0 view .LVU1583
 5041 0054 40F0BB81 		bne	.L555
3088:src/keys.c    ****     {
3089:src/keys.c    ****     if (OpCode != 0) {
 5042              		.loc 1 3089 5 is_stmt 1 view .LVU1584
 5043              		.loc 1 3089 16 is_stmt 0 view .LVU1585
 5044 0058 844B     		ldr	r3, .L1202+12
 5045 005a 1C68     		ldr	r4, [r3]
 5046              	.LVL448:
 5047              		.loc 1 3089 8 view .LVU1586
 5048 005c 002C     		cmp	r4, #0
 5049 005e 00F08482 		beq	.L556
3090:src/keys.c    ****       /*
3091:src/keys.c    ****        * Execute the key on release
3092:src/keys.c    ****        */
3093:src/keys.c    ****       GoFast = 1;
 5050              		.loc 1 3093 7 is_stmt 1 view .LVU1587
 5051              		.loc 1 3093 14 is_stmt 0 view .LVU1588
 5052 0062 834A     		ldr	r2, .L1202+16
3094:src/keys.c    ****       c = OpCode;
3095:src/keys.c    ****       OpCode = 0;
 5053              		.loc 1 3095 14 view .LVU1589
 5054 0064 1D60     		str	r5, [r3]
3093:src/keys.c    ****       c = OpCode;
 5055              		.loc 1 3093 14 view .LVU1590
 5056 0066 0120     		movs	r0, #1
3096:src/keys.c    **** 
3097:src/keys.c    ****       if (c == STATE_SST)
 5057              		.loc 1 3097 10 view .LVU1591
 5058 0068 2E2C     		cmp	r4, #46
3094:src/keys.c    ****       OpCode = 0;
 5059              		.loc 1 3094 9 view .LVU1592
 5060 006a A346     		mov	fp, r4
3093:src/keys.c    ****       c = OpCode;
 5061              		.loc 1 3093 14 view .LVU1593
 5062 006c 1060     		str	r0, [r2]
ARM GAS  /tmp/ccGwaFaD.s 			page 169


3094:src/keys.c    ****       OpCode = 0;
 5063              		.loc 1 3094 7 is_stmt 1 view .LVU1594
 5064              	.LVL449:
3095:src/keys.c    **** 
 5065              		.loc 1 3095 7 view .LVU1595
 5066              		.loc 1 3097 7 view .LVU1596
 5067              		.loc 1 3097 10 is_stmt 0 view .LVU1597
 5068 006e 00F09082 		beq	.L1107
3098:src/keys.c    **** 	xeq_sst_bst(1);
3099:src/keys.c    ****       else {
3100:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5069              		.loc 1 3100 2 is_stmt 1 view .LVU1598
 5070              		.loc 1 3100 5 is_stmt 0 view .LVU1599
 5071 0072 B4F5817F 		cmp	r4, #258
 5072 0076 08D0     		beq	.L562
 5073              		.loc 1 3100 29 discriminator 1 view .LVU1600
 5074 0078 40F23F13 		movw	r3, #319
 5075 007c 9C42     		cmp	r4, r3
 5076 007e 04D0     		beq	.L562
 5077              		.loc 1 3100 60 discriminator 2 view .LVU1601
 5078 0080 FFF7FEFF 		bl	is_bad_cmdline
 5079              	.LVL450:
 5080              		.loc 1 3100 56 discriminator 2 view .LVU1602
 5081 0084 0028     		cmp	r0, #0
 5082 0086 40F09482 		bne	.L1108
 5083              	.L562:
3101:src/keys.c    **** 	  xeq(c);
 5084              		.loc 1 3101 4 is_stmt 1 view .LVU1603
3102:src/keys.c    **** 	  if (Running || Pause)
 5085              		.loc 1 3102 8 is_stmt 0 view .LVU1604
 5086 008a 7A4E     		ldr	r6, .L1202+20
3101:src/keys.c    **** 	  xeq(c);
 5087              		.loc 1 3101 4 view .LVU1605
 5088 008c 2046     		mov	r0, r4
 5089 008e FFF7FEFF 		bl	xeq
 5090              	.LVL451:
 5091              		.loc 1 3102 4 is_stmt 1 view .LVU1606
 5092              		.loc 1 3102 7 is_stmt 0 view .LVU1607
 5093 0092 3368     		ldr	r3, [r6]
 5094 0094 0BB9     		cbnz	r3, .L560
 5095              		.loc 1 3102 16 discriminator 1 view .LVU1608
 5096 0096 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5097 0098 0BB1     		cbz	r3, .L558
 5098              	.L560:
3103:src/keys.c    **** 	    xeqprog();
 5099              		.loc 1 3103 6 is_stmt 1 view .LVU1609
 5100 009a FFF7FEFF 		bl	xeqprog
 5101              	.LVL452:
 5102              	.L558:
3104:src/keys.c    **** 	}
3105:src/keys.c    ****       }
3106:src/keys.c    ****       dot(RPN, ShowRPN);
 5103              		.loc 1 3106 7 view .LVU1610
 5104 009e 764C     		ldr	r4, .L1202+24
 5105              	.LVL453:
 5106              		.loc 1 3106 7 is_stmt 0 view .LVU1611
 5107 00a0 8D20     		movs	r0, #141
ARM GAS  /tmp/ccGwaFaD.s 			page 170


 5108 00a2 2168     		ldr	r1, [r4]
 5109 00a4 FFF7FEFF 		bl	dot
 5110              	.LVL454:
3107:src/keys.c    ****     }
3108:src/keys.c    ****     else {
3109:src/keys.c    ****       // Ignore key-up if no operation was pending
3110:src/keys.c    ****       dot(RPN, ShowRPN);
3111:src/keys.c    **** #ifndef CONSOLE
3112:src/keys.c    ****       if (! State2.disp_temp ) {
3113:src/keys.c    **** 	if (!WasDataEntry) {
3114:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3115:src/keys.c    **** 	  display();
3116:src/keys.c    **** 	}
3117:src/keys.c    **** 	else {
3118:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3119:src/keys.c    **** 	}
3120:src/keys.c    ****       }
3121:src/keys.c    **** #endif
3122:src/keys.c    ****       return;
3123:src/keys.c    ****     }
3124:src/keys.c    **** 
3125:src/keys.c    ****     /*
3126:src/keys.c    ****      *  Turn on the RPN symbol if desired
3127:src/keys.c    ****      */
3128:src/keys.c    ****     if (ShowRPN) {
 5111              		.loc 1 3128 5 is_stmt 1 view .LVU1612
 5112              		.loc 1 3128 9 is_stmt 0 view .LVU1613
 5113 00a8 2568     		ldr	r5, [r4]
 5114              		.loc 1 3128 8 view .LVU1614
 5115 00aa 002D     		cmp	r5, #0
 5116 00ac 40F05082 		bne	.L564
 5117 00b0 3268     		ldr	r2, [r6]
 5118              	.LVL455:
 5119              	.L565:
3129:src/keys.c    ****       finish_RPN(); // RPN
3130:src/keys.c    ****     }
3131:src/keys.c    ****   }
3132:src/keys.c    ****   else {
3133:src/keys.c    ****     /*
3134:src/keys.c    ****      *  Decode the key 
3135:src/keys.c    ****      */
3136:src/keys.c    ****     // print_debug (100, c);
3137:src/keys.c    ****     WasDataEntry = 0;
3138:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3139:src/keys.c    **** #ifdef DM42
3140:src/keys.c    ****     if (c != K_OP) {
3141:src/keys.c    ****       c = process(c);		// returns an op-code or state
3142:src/keys.c    ****     }
3143:src/keys.c    ****     else {
3144:src/keys.c    ****       if (isRARG(nd_opcode)) {
3145:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3146:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3147:src/keys.c    **** 	  c = nd_opcode;
3148:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3149:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3150:src/keys.c    **** 	  c = STATE_UNFINISHED;
3151:src/keys.c    **** 	}
ARM GAS  /tmp/ccGwaFaD.s 			page 171


3152:src/keys.c    **** 	else {
3153:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3154:src/keys.c    **** 	  c = STATE_UNFINISHED;
3155:src/keys.c    **** 	}
3156:src/keys.c    ****       }
3157:src/keys.c    ****       else {
3158:src/keys.c    **** 	c = check_confirm(nd_opcode);
3159:src/keys.c    ****       }      
3160:src/keys.c    ****     }
3161:src/keys.c    **** #else
3162:src/keys.c    ****     c = process(c);		// returns an op-code or state
3163:src/keys.c    **** #endif
3164:src/keys.c    ****     switch (c) {
3165:src/keys.c    ****     case STATE_SST:
3166:src/keys.c    ****       OpCode = c;
3167:src/keys.c    ****       OpCodeDisplayPending = 0;
3168:src/keys.c    ****       xeq_sst_bst(0);
3169:src/keys.c    ****       break;
3170:src/keys.c    **** 
3171:src/keys.c    ****     case STATE_BST:
3172:src/keys.c    ****       xeq_sst_bst(-1);
3173:src/keys.c    ****       break;
3174:src/keys.c    **** 
3175:src/keys.c    ****     case STATE_BACKSPACE:
3176:src/keys.c    ****       if (! State2.runmode)
3177:src/keys.c    **** 	delprog();
3178:src/keys.c    ****       else if (State2.alphas) {
3179:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3180:src/keys.c    **** 	if (p > Alpha)
3181:src/keys.c    **** 	  *--p = '\0';
3182:src/keys.c    ****       }
3183:src/keys.c    ****       break;
3184:src/keys.c    **** 
3185:src/keys.c    ****     case STATE_RUNNING:
3186:src/keys.c    ****       xeqprog();  // continue execution
3187:src/keys.c    ****       break;
3188:src/keys.c    **** 
3189:src/keys.c    ****     case STATE_WINDOWRIGHT:
3190:src/keys.c    ****     case STATE_WINDOWLEFT:
3191:src/keys.c    ****       if (!is_bad_cmdline())
3192:src/keys.c    **** 	set_window(c);
3193:src/keys.c    ****       break;
3194:src/keys.c    **** 
3195:src/keys.c    ****     case STATE_UNFINISHED:
3196:src/keys.c    ****     case STATE_IGNORE:
3197:src/keys.c    ****       break;
3198:src/keys.c    **** 
3199:src/keys.c    ****     default:
3200:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3201:src/keys.c    **** 	NonProgrammable = 0;
3202:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3203:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3204:src/keys.c    **** 	    // Data entry key
3205:src/keys.c    **** #ifndef CONSOLE
3206:src/keys.c    **** 	    WasDataEntry = 1;
3207:src/keys.c    **** #endif
3208:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
ARM GAS  /tmp/ccGwaFaD.s 			page 172


3209:src/keys.c    **** 	    xeq(c);
3210:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3211:src/keys.c    **** 	  }
3212:src/keys.c    **** 	}
3213:src/keys.c    **** 	else {
3214:src/keys.c    **** 	  // Save the op-code for execution on key-up
3215:src/keys.c    **** 	  OpCode = c;
3216:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3217:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3218:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3219:src/keys.c    **** 	}
3220:src/keys.c    ****       }
3221:src/keys.c    ****       else {
3222:src/keys.c    **** 	stoprog(c);
3223:src/keys.c    ****       }
3224:src/keys.c    ****     }
3225:src/keys.c    ****   }
3226:src/keys.c    ****   if (! Running && ! Pause
 5120              		.loc 1 3226 3 is_stmt 1 view .LVU1615
 5121              		.loc 1 3226 6 is_stmt 0 view .LVU1616
 5122 00b2 002A     		cmp	r2, #0
 5123 00b4 40F07881 		bne	.L1098
 5124              	.LVL456:
 5125              	.L581:
 5126              		.loc 1 3226 20 discriminator 1 view .LVU1617
 5127 00b8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5128              		.loc 1 3226 17 discriminator 1 view .LVU1618
 5129 00ba 002B     		cmp	r3, #0
 5130 00bc 40F07481 		bne	.L1098
3227:src/keys.c    **** #ifndef CONSOLE
3228:src/keys.c    ****       && ! JustStopped
 5131              		.loc 1 3228 10 view .LVU1619
 5132 00c0 694B     		ldr	r3, .L1202+8
3229:src/keys.c    **** #endif
3230:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 5133              		.loc 1 3230 10 view .LVU1620
 5134 00c2 6E4C     		ldr	r4, .L1202+28
 5135 00c4 1B68     		ldr	r3, [r3]
 5136 00c6 2268     		ldr	r2, [r4]
 5137              		.loc 1 3230 7 view .LVU1621
 5138 00c8 1343     		orrs	r3, r3, r2
 5139 00ca 19D1     		bne	.L878
 5140              		.loc 1 3230 26 discriminator 1 view .LVU1622
 5141 00cc BBF1320F 		cmp	fp, #50
 5142 00d0 16D0     		beq	.L878
 5143              	.LBB652:
3231:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5144              		.loc 1 3231 5 is_stmt 1 view .LVU1623
 5145              		.loc 1 3231 15 is_stmt 0 view .LVU1624
 5146 00d2 DFF8C891 		ldr	r9, .L1202+60
 5147 00d6 D9F80060 		ldr	r6, [r9]
 5148              	.LVL457:
3232:src/keys.c    **** 
3233:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 5149              		.loc 1 3233 5 is_stmt 1 view .LVU1625
 5150              		.loc 1 3233 21 is_stmt 0 view .LVU1626
 5151 00da BBF1000F 		cmp	fp, #0
ARM GAS  /tmp/ccGwaFaD.s 			page 173


 5152 00de 09D0     		beq	.L880
 5153              		.loc 1 3233 49 discriminator 1 view .LVU1627
 5154 00e0 002D     		cmp	r5, #0
 5155 00e2 40F0CD84 		bne	.L939
 5156              		.loc 1 3233 66 discriminator 3 view .LVU1628
 5157 00e6 664B     		ldr	r3, .L1202+32
 5158 00e8 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 5159              		.loc 1 3233 21 discriminator 3 view .LVU1629
 5160 00ea 9F07     		lsls	r7, r3, #30
 5161 00ec 00F11E85 		bmi	.L940
 5162 00f0 06F0010B 		and	fp, r6, #1
 5163              	.LVL458:
 5164              	.L880:
 5165              		.loc 1 3233 18 discriminator 8 view .LVU1630
 5166 00f4 C9F800B0 		str	fp, [r9]
3234:src/keys.c    ****     display();
 5167              		.loc 1 3234 5 is_stmt 1 discriminator 8 view .LVU1631
 5168 00f8 FFF7FEFF 		bl	display
 5169              	.LVL459:
3235:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5170              		.loc 1 3235 5 discriminator 8 view .LVU1632
 5171              		.loc 1 3235 18 is_stmt 0 discriminator 8 view .LVU1633
 5172 00fc C9F80060 		str	r6, [r9]
 5173              	.LVL460:
 5174              	.L878:
 5175              		.loc 1 3235 18 discriminator 8 view .LVU1634
 5176              	.LBE652:
3236:src/keys.c    ****   }
3237:src/keys.c    **** 
3238:src/keys.c    ****  no_display:
3239:src/keys.c    ****   JustDisplayed = 0;
 5177              		.loc 1 3239 3 is_stmt 1 view .LVU1635
 5178              		.loc 1 3239 17 is_stmt 0 view .LVU1636
 5179 0100 0023     		movs	r3, #0
 5180 0102 2360     		str	r3, [r4]
3240:src/keys.c    ****   watchdog();
 5181              		.loc 1 3240 13 is_stmt 1 view .LVU1637
 5182              	.L534:
3241:src/keys.c    **** }
 5183              		.loc 1 3241 1 is_stmt 0 view .LVU1638
 5184 0104 03B0     		add	sp, sp, #12
 5185              		.cfi_remember_state
 5186              		.cfi_def_cfa_offset 36
 5187              		@ sp needed
 5188 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5189              	.LVL461:
 5190              	.L1104:
 5191              		.cfi_restore_state
2998:src/keys.c    ****       /*
 5192              		.loc 1 2998 5 is_stmt 1 view .LVU1639
2998:src/keys.c    ****       /*
 5193              		.loc 1 2998 9 is_stmt 0 view .LVU1640
 5194 010a FFF7FEFF 		bl	keyticks
 5195              	.LVL462:
2998:src/keys.c    ****       /*
 5196              		.loc 1 2998 8 view .LVU1641
 5197 010e 0128     		cmp	r0, #1
ARM GAS  /tmp/ccGwaFaD.s 			page 174


 5198 0110 1BDD     		ble	.L540
3002:src/keys.c    **** 	/*
 5199              		.loc 1 3002 7 is_stmt 1 view .LVU1642
3002:src/keys.c    **** 	/*
 5200              		.loc 1 3002 18 is_stmt 0 view .LVU1643
 5201 0112 564D     		ldr	r5, .L1202+12
 5202 0114 2868     		ldr	r0, [r5]
3002:src/keys.c    **** 	/*
 5203              		.loc 1 3002 10 view .LVU1644
 5204 0116 98B1     		cbz	r0, .L542
3006:src/keys.c    **** 	  /*
 5205              		.loc 1 3006 2 is_stmt 1 view .LVU1645
3006:src/keys.c    **** 	  /*
 5206              		.loc 1 3006 6 is_stmt 0 view .LVU1646
 5207 0118 5A4B     		ldr	r3, .L1202+36
3006:src/keys.c    **** 	  /*
 5208              		.loc 1 3006 5 view .LVU1647
 5209 011a 1E68     		ldr	r6, [r3]
 5210 011c 002E     		cmp	r6, #0
 5211 011e 00F06982 		beq	.L543
3010:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5212              		.loc 1 3010 4 is_stmt 1 view .LVU1648
3011:src/keys.c    **** 	    DispMsg = "RUN";
 5213              		.loc 1 3011 7 is_stmt 0 view .LVU1649
 5214 0122 40F23B12 		movw	r2, #315
3010:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5215              		.loc 1 3010 25 view .LVU1650
 5216 0126 0025     		movs	r5, #0
3011:src/keys.c    **** 	    DispMsg = "RUN";
 5217              		.loc 1 3011 7 view .LVU1651
 5218 0128 9042     		cmp	r0, r2
3010:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5219              		.loc 1 3010 25 view .LVU1652
 5220 012a 1D60     		str	r5, [r3]
3011:src/keys.c    **** 	    DispMsg = "RUN";
 5221              		.loc 1 3011 4 is_stmt 1 view .LVU1653
3011:src/keys.c    **** 	    DispMsg = "RUN";
 5222              		.loc 1 3011 7 is_stmt 0 view .LVU1654
 5223 012c 40F0A683 		bne	.L544
3012:src/keys.c    **** 	  }
 5224              		.loc 1 3012 6 is_stmt 1 view .LVU1655
3012:src/keys.c    **** 	  }
 5225              		.loc 1 3012 14 is_stmt 0 view .LVU1656
 5226 0130 554B     		ldr	r3, .L1202+40
 5227 0132 564A     		ldr	r2, .L1202+44
 5228 0134 1A60     		str	r2, [r3]
 5229              	.L545:
3018:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5230              		.loc 1 3018 4 is_stmt 1 view .LVU1657
 5231 0136 FFF7FEFF 		bl	display
 5232              	.LVL463:
3019:src/keys.c    **** 	}
 5233              		.loc 1 3019 4 view .LVU1658
3019:src/keys.c    **** 	}
 5234              		.loc 1 3019 12 is_stmt 0 view .LVU1659
 5235 013a 4F4B     		ldr	r3, .L1202+24
 5236 013c 0122     		movs	r2, #1
ARM GAS  /tmp/ccGwaFaD.s 			page 175


 5237 013e 1A60     		str	r2, [r3]
 5238              	.L542:
3031:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5239              		.loc 1 3031 7 is_stmt 1 view .LVU1660
3031:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5240              		.loc 1 3031 11 is_stmt 0 view .LVU1661
 5241 0140 FFF7FEFF 		bl	keyticks
 5242              	.LVL464:
3031:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5243              		.loc 1 3031 10 view .LVU1662
 5244 0144 0C28     		cmp	r0, #12
 5245 0146 00F32B82 		bgt	.L1109
 5246              	.L540:
3040:src/keys.c    **** 
 5247              		.loc 1 3040 15 is_stmt 1 view .LVU1663
3046:src/keys.c    ****       JustStopped = 0;
 5248              		.loc 1 3046 5 view .LVU1664
3046:src/keys.c    ****       JustStopped = 0;
 5249              		.loc 1 3046 9 is_stmt 0 view .LVU1665
 5250 014a 474D     		ldr	r5, .L1202+8
3046:src/keys.c    ****       JustStopped = 0;
 5251              		.loc 1 3046 8 view .LVU1666
 5252 014c 2B68     		ldr	r3, [r5]
 5253 014e 002B     		cmp	r3, #0
 5254 0150 40F09E81 		bne	.L1110
 5255              	.L549:
3054:src/keys.c    ****       return;
 5256              		.loc 1 3054 5 is_stmt 1 view .LVU1667
3054:src/keys.c    ****       return;
 5257              		.loc 1 3054 9 is_stmt 0 view .LVU1668
 5258 0154 474E     		ldr	r6, .L1202+20
 5259 0156 3368     		ldr	r3, [r6]
3054:src/keys.c    ****       return;
 5260              		.loc 1 3054 8 view .LVU1669
 5261 0158 002B     		cmp	r3, #0
 5262 015a 00F08B81 		beq	.L1111
 5263              	.L551:
3087:src/keys.c    ****     {
 5264              		.loc 1 3087 3 is_stmt 1 view .LVU1670
3137:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5265              		.loc 1 3137 5 view .LVU1671
3138:src/keys.c    **** #ifdef DM42
 5266              		.loc 1 3138 13 is_stmt 0 view .LVU1672
 5267 015e 464A     		ldr	r2, .L1202+24
3137:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5268              		.loc 1 3137 18 view .LVU1673
 5269 0160 DFF83891 		ldr	r9, .L1202+60
3138:src/keys.c    **** #ifdef DM42
 5270              		.loc 1 3138 15 view .LVU1674
 5271 0164 B3FA83F3 		clz	r3, r3
 5272 0168 5B09     		lsrs	r3, r3, #5
3138:src/keys.c    **** #ifdef DM42
 5273              		.loc 1 3138 13 view .LVU1675
 5274 016a 1360     		str	r3, [r2]
3137:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5275              		.loc 1 3137 18 view .LVU1676
 5276 016c 0023     		movs	r3, #0
ARM GAS  /tmp/ccGwaFaD.s 			page 176


 5277 016e C9F80030 		str	r3, [r9]
3138:src/keys.c    **** #ifdef DM42
 5278              		.loc 1 3138 5 is_stmt 1 view .LVU1677
3140:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5279              		.loc 1 3140 5 view .LVU1678
 5280              	.L537:
3141:src/keys.c    ****     }
 5281              		.loc 1 3141 7 view .LVU1679
 5282              	.LVL465:
 5283              	.LBB653:
 5284              	.LBI653:
2795:src/keys.c    ****   const enum shifts shift = cur_shift();
 5285              		.loc 1 2795 12 view .LVU1680
 5286              	.LBB654:
2796:src/keys.c    ****   enum catalogues cat;
 5287              		.loc 1 2796 3 view .LVU1681
 5288              	.LBB655:
 5289              	.LBI655:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 5290              		.loc 1 86 13 view .LVU1682
 5291              	.LBB656:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5292              		.loc 1 87 2 view .LVU1683
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5293              		.loc 1 87 18 is_stmt 0 view .LVU1684
 5294 0172 FFF7FEFF 		bl	shift_down
 5295              	.LVL466:
  88:src/keys.c    **** }
 5296              		.loc 1 88 2 is_stmt 1 view .LVU1685
  88:src/keys.c    **** }
 5297              		.loc 1 88 52 is_stmt 0 view .LVU1686
 5298 0176 8246     		mov	r10, r0
 5299 0178 10B9     		cbnz	r0, .L569
 5300 017a 414B     		ldr	r3, .L1202+32
 5301 017c 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5302              	.L569:
 5303              	.LVL467:
  88:src/keys.c    **** }
 5304              		.loc 1 88 52 view .LVU1687
 5305              	.LBE656:
 5306              	.LBE655:
2797:src/keys.c    **** 
 5307              		.loc 1 2797 3 is_stmt 1 view .LVU1688
2799:src/keys.c    ****     /*
 5308              		.loc 1 2799 3 view .LVU1689
2799:src/keys.c    ****     /*
 5309              		.loc 1 2799 7 is_stmt 0 view .LVU1690
 5310 0180 3568     		ldr	r5, [r6]
2799:src/keys.c    ****     /*
 5311              		.loc 1 2799 6 view .LVU1691
 5312 0182 002D     		cmp	r5, #0
 5313 0184 40F0F780 		bne	.L570
2799:src/keys.c    ****     /*
 5314              		.loc 1 2799 15 view .LVU1692
 5315 0188 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5316 018a 002B     		cmp	r3, #0
 5317 018c 40F0F380 		bne	.L570
ARM GAS  /tmp/ccGwaFaD.s 			page 177


2827:src/keys.c    **** #else
 5318              		.loc 1 2827 3 is_stmt 1 view .LVU1693
2827:src/keys.c    **** #else
 5319              		.loc 1 2827 6 is_stmt 0 view .LVU1694
 5320 0190 242C     		cmp	r4, #36
 5321 0192 00F0E283 		beq	.L1112
2837:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5322              		.loc 1 2837 2 is_stmt 1 view .LVU1695
2837:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5323              		.loc 1 2837 5 is_stmt 0 view .LVU1696
 5324 0196 272C     		cmp	r4, #39
 5325 0198 04D1     		bne	.L580
2837:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5326              		.loc 1 2837 15 view .LVU1697
 5327 019a 334B     		ldr	r3, .L1202+8
 5328 019c 1A68     		ldr	r2, [r3]
 5329 019e 002A     		cmp	r2, #0
 5330 01a0 40F0B284 		bne	.L1113
 5331              	.L580:
 5332 01a4 DFF8D880 		ldr	r8, .L1202+32
 5333 01a8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5334              	.L577:
2846:src/keys.c    **** 		CmdLineLength = 0;
 5335              		.loc 1 2846 2 is_stmt 1 view .LVU1698
2846:src/keys.c    **** 		CmdLineLength = 0;
 5336              		.loc 1 2846 5 is_stmt 0 view .LVU1699
 5337 01ac 33B1     		cbz	r3, .L583
2846:src/keys.c    **** 		CmdLineLength = 0;
 5338              		.loc 1 2846 26 view .LVU1700
 5339 01ae FFF7FEFF 		bl	keyticks
 5340              	.LVL468:
2846:src/keys.c    **** 		CmdLineLength = 0;
 5341              		.loc 1 2846 23 view .LVU1701
 5342 01b2 1E28     		cmp	r0, #30
2847:src/keys.c    **** 	/*
 5343              		.loc 1 2847 3 is_stmt 1 view .LVU1702
2847:src/keys.c    **** 	/*
 5344              		.loc 1 2847 17 is_stmt 0 view .LVU1703
 5345 01b4 C4BF     		itt	gt
 5346 01b6 0023     		movgt	r3, #0
 5347 01b8 88F81C30 		strbgt	r3, [r8, #28]
 5348              	.L583:
2852:src/keys.c    **** 		return process_confirm((const keycode)c);
 5349              		.loc 1 2852 2 is_stmt 1 view .LVU1704
2852:src/keys.c    **** 		return process_confirm((const keycode)c);
 5350              		.loc 1 2852 6 is_stmt 0 view .LVU1705
 5351 01bc 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2852:src/keys.c    **** 		return process_confirm((const keycode)c);
 5352              		.loc 1 2852 5 view .LVU1706
 5353 01c0 5907     		lsls	r1, r3, #29
 5354 01c2 40F08583 		bne	.L1114
2855:src/keys.c    **** 		return process_arg((const keycode)c);
 5355              		.loc 1 2855 2 is_stmt 1 view .LVU1707
2855:src/keys.c    **** 		return process_arg((const keycode)c);
 5356              		.loc 1 2855 6 is_stmt 0 view .LVU1708
 5357 01c6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2855:src/keys.c    **** 		return process_arg((const keycode)c);
ARM GAS  /tmp/ccGwaFaD.s 			page 178


 5358              		.loc 1 2855 5 view .LVU1709
 5359 01ca 9A06     		lsls	r2, r3, #26
 5360 01cc 00F1DC83 		bmi	.L1115
2858:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5361              		.loc 1 2858 2 is_stmt 1 view .LVU1710
2858:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5362              		.loc 1 2858 6 is_stmt 0 view .LVU1711
 5363 01d0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
2858:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5364              		.loc 1 2858 5 view .LVU1712
 5365 01d4 11F0010B 		ands	fp, r1, #1
 5366 01d8 40F01784 		bne	.L1116
2861:src/keys.c    **** 		return process_hyp((const keycode)c);
 5367              		.loc 1 2861 2 is_stmt 1 view .LVU1713
2861:src/keys.c    **** 		return process_hyp((const keycode)c);
 5368              		.loc 1 2861 5 is_stmt 0 view .LVU1714
 5369 01dc 11F02000 		ands	r0, r1, #32
 5370 01e0 40F05184 		bne	.L1117
2864:src/keys.c    **** 		return process_test((const keycode)c);
 5371              		.loc 1 2864 2 is_stmt 1 view .LVU1715
2864:src/keys.c    **** 		return process_test((const keycode)c);
 5372              		.loc 1 2864 12 is_stmt 0 view .LVU1716
 5373 01e4 98F80FB0 		ldrb	fp, [r8, #15]	@ zero_extendqisi2
2864:src/keys.c    **** 		return process_test((const keycode)c);
 5374              		.loc 1 2864 5 view .LVU1717
 5375 01e8 BBF1070F 		cmp	fp, #7
 5376 01ec 40F0D983 		bne	.L1118
2867:src/keys.c    **** 		return process_status((const keycode)c);
 5377              		.loc 1 2867 2 is_stmt 1 view .LVU1718
2867:src/keys.c    **** 		return process_status((const keycode)c);
 5378              		.loc 1 2867 12 is_stmt 0 view .LVU1719
 5379 01f0 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
2867:src/keys.c    **** 		return process_status((const keycode)c);
 5380              		.loc 1 2867 5 view .LVU1720
 5381 01f4 002B     		cmp	r3, #0
 5382 01f6 40F09C84 		bne	.L1119
2873:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5383              		.loc 1 2873 2 is_stmt 1 view .LVU1721
2873:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5384              		.loc 1 2873 5 is_stmt 0 view .LVU1722
 5385 01fa 292C     		cmp	r4, #41
 5386 01fc 00F05A85 		beq	.L1120
2877:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5387              		.loc 1 2877 2 is_stmt 1 view .LVU1723
2877:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5388              		.loc 1 2877 5 is_stmt 0 view .LVU1724
 5389 0200 2A2C     		cmp	r4, #42
 5390 0202 00F07A85 		beq	.L1121
2881:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5391              		.loc 1 2881 2 is_stmt 1 view .LVU1725
2881:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5392              		.loc 1 2881 5 is_stmt 0 view .LVU1726
 5393 0206 2B2C     		cmp	r4, #43
 5394 0208 00F09985 		beq	.L1122
2890:src/keys.c    **** 		return process_arrow((const keycode)c);
 5395              		.loc 1 2890 2 is_stmt 1 view .LVU1727
2890:src/keys.c    **** 		return process_arrow((const keycode)c);
ARM GAS  /tmp/ccGwaFaD.s 			page 179


 5396              		.loc 1 2890 5 is_stmt 0 view .LVU1728
 5397 020c 4807     		lsls	r0, r1, #29
 5398 020e 00F1BC84 		bmi	.L1123
2898:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5399              		.loc 1 2898 2 is_stmt 1 view .LVU1729
2898:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5400              		.loc 1 2898 8 is_stmt 0 view .LVU1730
 5401 0212 E4B2     		uxtb	r4, r4
 5402              	.LVL469:
 5403              	.LBB657:
 5404              	.LBI657:
 257:src/keys.c    **** {
 5405              		.loc 1 257 24 is_stmt 1 view .LVU1731
 5406              	.LBB658:
 259:src/keys.c    ****   int i, col, max;
 5407              		.loc 1 259 3 view .LVU1732
 260:src/keys.c    ****   const struct _map {
 5408              		.loc 1 260 3 view .LVU1733
 261:src/keys.c    ****     unsigned char key, cat[3];
 5409              		.loc 1 261 3 view .LVU1734
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5410              		.loc 1 266 3 view .LVU1735
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5411              		.loc 1 266 6 is_stmt 0 view .LVU1736
 5412 0214 212C     		cmp	r4, #33
 5413 0216 00F0E484 		beq	.L1124
 269:src/keys.c    ****     /*
 5414              		.loc 1 269 3 is_stmt 1 view .LVU1737
 269:src/keys.c    ****     /*
 5415              		.loc 1 269 23 is_stmt 0 view .LVU1738
 5416 021a 1D4A     		ldr	r2, .L1202+48
 5417 021c D8F81430 		ldr	r3, [r8, #20]
 269:src/keys.c    ****     /*
 5418              		.loc 1 269 6 view .LVU1739
 5419 0220 1A42     		tst	r2, r3
 5420 0222 40F0E884 		bne	.L663
 5421              	.LBB659:
 273:src/keys.c    **** #ifdef DM42
 5422              		.loc 1 273 5 is_stmt 1 view .LVU1740
 300:src/keys.c    ****       /*
 5423              		.loc 1 300 5 view .LVU1741
 300:src/keys.c    ****       /*
 5424              		.loc 1 300 8 is_stmt 0 view .LVU1742
 5425 0226 242C     		cmp	r4, #36
 5426 0228 03D1     		bne	.L664
 300:src/keys.c    ****       /*
 5427              		.loc 1 300 18 view .LVU1743
 5428 022a BAF1020F 		cmp	r10, #2
 5429 022e 01F03683 		beq	.L912
 5430              	.L664:
 315:src/keys.c    ****       /*
 5431              		.loc 1 315 5 is_stmt 1 view .LVU1744
 315:src/keys.c    ****       /*
 5432              		.loc 1 315 8 is_stmt 0 view .LVU1745
 5433 0232 BAF1030F 		cmp	r10, #3
 5434 0236 3AD1     		bne	.L671
 5435              	.L894:
ARM GAS  /tmp/ccGwaFaD.s 			page 180


 325:src/keys.c    **** #ifndef WINGUI
 5436              		.loc 1 325 5 is_stmt 1 view .LVU1746
 5437              	.LVL470:
 327:src/keys.c    **** #else
 5438              		.loc 1 327 5 view .LVU1747
 327:src/keys.c    **** #else
 5439              		.loc 1 327 23 is_stmt 0 view .LVU1748
 5440 0238 164B     		ldr	r3, .L1202+52
 5441 023a 1B68     		ldr	r3, [r3]
 5442 023c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 327:src/keys.c    **** #else
 5443              		.loc 1 327 27 view .LVU1749
 5444 0240 DA07     		lsls	r2, r3, #31
 5445 0242 00F12086 		bmi	.L913
 327:src/keys.c    **** #else
 5446              		.loc 1 327 73 view .LVU1750
 5447 0246 11F0020B 		ands	fp, r1, #2
 5448 024a 01F06081 		beq	.L1125
 325:src/keys.c    **** #ifndef WINGUI
 5449              		.loc 1 325 8 view .LVU1751
 5450 024e 124B     		ldr	r3, .L1202+56
 331:src/keys.c    ****   }
 5451              		.loc 1 331 9 view .LVU1752
 5452 0250 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 5453              		.loc 1 327 73 view .LVU1753
 5454 0252 4FF0020C 		mov	ip, #2
 5455              	.LVL471:
 5456              	.L666:
 327:src/keys.c    **** #else
 5457              		.loc 1 327 73 view .LVU1754
 5458              	.LBE659:
 375:src/keys.c    ****     if (cp->key == c) {
 5459              		.loc 1 375 3 is_stmt 1 view .LVU1755
 375:src/keys.c    ****     if (cp->key == c) {
 5460              		.loc 1 375 15 view .LVU1756
 5461 0256 181F     		subs	r0, r3, #4
 5462 0258 00EB8200 		add	r0, r0, r2, lsl #2
 5463              	.LBB660:
 327:src/keys.c    **** #else
 5464              		.loc 1 327 73 is_stmt 0 view .LVU1757
 5465 025c 0422     		movs	r2, #4
 5466              	.LVL472:
 327:src/keys.c    **** #else
 5467              		.loc 1 327 73 view .LVU1758
 5468 025e 21E0     		b	.L672
 5469              	.L1203:
 5470              		.align	2
 5471              	.L1202:
 5472 0260 00000000 		.word	.LANCHOR12
 5473 0264 00000000 		.word	Pause
 5474 0268 00000000 		.word	JustStopped
 5475 026c 00000000 		.word	OpCode
 5476 0270 00000000 		.word	GoFast
 5477 0274 00000000 		.word	Running
 5478 0278 00000000 		.word	ShowRPN
 5479 027c 00000000 		.word	JustDisplayed
ARM GAS  /tmp/ccGwaFaD.s 			page 181


 5480 0280 00000000 		.word	StateWhileOn
 5481 0284 00000000 		.word	OpCodeDisplayPending
 5482 0288 00000000 		.word	DispMsg
 5483 028c 00000000 		.word	.LC0
 5484 0290 00080800 		.word	526336
 5485 0294 00000000 		.word	main_ram
 5486 0298 00000000 		.word	.LANCHOR11
 5487 029c 00000000 		.word	WasDataEntry
 5488              	.LVL473:
 5489              	.L1127:
 327:src/keys.c    **** #else
 5490              		.loc 1 327 73 view .LVU1759
 5491 02a0 13F8042F 		ldrb	r2, [r3, #4]!	@ zero_extendqisi2
 5492              	.LVL474:
 5493              	.L672:
 327:src/keys.c    **** #else
 5494              		.loc 1 327 73 view .LVU1760
 5495              	.LBE660:
 376:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5496              		.loc 1 376 5 is_stmt 1 view .LVU1761
 375:src/keys.c    ****     if (cp->key == c) {
 5497              		.loc 1 375 24 view .LVU1762
 375:src/keys.c    ****     if (cp->key == c) {
 5498              		.loc 1 375 15 view .LVU1763
 376:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5499              		.loc 1 376 8 is_stmt 0 view .LVU1764
 5500 02a4 9442     		cmp	r4, r2
 5501 02a6 00F0E384 		beq	.L1126
 375:src/keys.c    ****     if (cp->key == c) {
 5502              		.loc 1 375 3 view .LVU1765
 5503 02aa 9842     		cmp	r0, r3
 5504 02ac F8D1     		bne	.L1127
 5505              	.LVL475:
 5506              	.L671:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5507              		.loc 1 381 3 is_stmt 1 view .LVU1766
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5508              		.loc 1 381 6 is_stmt 0 view .LVU1767
 5509 02ae 0807     		lsls	r0, r1, #28
 5510 02b0 00F15A85 		bmi	.L677
 5511              	.LVL476:
 5512              	.L675:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5513              		.loc 1 381 6 view .LVU1768
 5514              	.LBE658:
 5515              	.LBE657:
2913:src/keys.c    **** 		return process_labellist((const keycode)c);
 5516              		.loc 1 2913 2 is_stmt 1 view .LVU1769
2913:src/keys.c    **** 		return process_labellist((const keycode)c);
 5517              		.loc 1 2913 6 is_stmt 0 view .LVU1770
 5518 02b4 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2913:src/keys.c    **** 		return process_labellist((const keycode)c);
 5519              		.loc 1 2913 5 view .LVU1771
 5520 02b8 5807     		lsls	r0, r3, #29
 5521 02ba 00F11D86 		bmi	.L1128
2916:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5522              		.loc 1 2916 2 is_stmt 1 view .LVU1772
ARM GAS  /tmp/ccGwaFaD.s 			page 182


2916:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5523              		.loc 1 2916 5 is_stmt 0 view .LVU1773
 5524 02be 1A07     		lsls	r2, r3, #28
 5525 02c0 00F13387 		bmi	.L1129
2919:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5526              		.loc 1 2919 2 is_stmt 1 view .LVU1774
2919:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5527              		.loc 1 2919 5 is_stmt 0 view .LVU1775
 5528 02c4 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 5529 02c8 002A     		cmp	r2, #0
 5530 02ca 40F0F187 		bne	.L1130
2922:src/keys.c    **** #ifndef INFRARED
 5531              		.loc 1 2922 2 is_stmt 1 view .LVU1776
2922:src/keys.c    **** #ifndef INFRARED
 5532              		.loc 1 2922 6 is_stmt 0 view .LVU1777
 5533 02ce 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2922:src/keys.c    **** #ifndef INFRARED
 5534              		.loc 1 2922 5 view .LVU1778
 5535 02d2 1007     		lsls	r0, r2, #28
 5536 02d4 01F12280 		bmi	.L1131
2935:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5537              		.loc 1 2935 2 is_stmt 1 view .LVU1779
2935:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5538              		.loc 1 2935 5 is_stmt 0 view .LVU1780
 5539 02d8 11F0020B 		ands	fp, r1, #2
 5540 02dc 41F0CE80 		bne	.L1132
2938:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5541              		.loc 1 2938 3 is_stmt 1 view .LVU1781
2938:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5542              		.loc 1 2938 24 is_stmt 0 view .LVU1782
 5543 02e0 0AF1FF31 		add	r1, r10, #-1
2938:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5544              		.loc 1 2938 6 view .LVU1783
 5545 02e4 C9B2     		uxtb	r1, r1
 5546 02e6 0129     		cmp	r1, #1
 5547 02e8 41F2A681 		bls	.L1133
2940:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5548              		.loc 1 2940 3 is_stmt 1 view .LVU1784
2940:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5549              		.loc 1 2940 6 is_stmt 0 view .LVU1785
 5550 02ec BAF1030F 		cmp	r10, #3
 5551 02f0 01F01C81 		beq	.L1134
2943:src/keys.c    **** 	}
 5552              		.loc 1 2943 3 is_stmt 1 view .LVU1786
 5553              	.LVL477:
 5554              	.LBB672:
 5555              	.LBI672:
 678:src/keys.c    **** {
 5556              		.loc 1 678 12 view .LVU1787
 5557              	.LBB673:
 680:src/keys.c    **** 		// Row 1
 5558              		.loc 1 680 2 view .LVU1788
 727:src/keys.c    **** 	int op = op_map[lc];
 5559              		.loc 1 727 2 view .LVU1789
 5560              	.LBB674:
 5561              	.LBI674:
 136:src/keys.c    **** {
ARM GAS  /tmp/ccGwaFaD.s 			page 183


 5562              		.loc 1 136 12 view .LVU1790
 5563              	.LBB675:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5564              		.loc 1 138 2 view .LVU1791
 148:src/keys.c    **** }
 5565              		.loc 1 148 2 view .LVU1792
 148:src/keys.c    **** }
 5566              		.loc 1 148 2 is_stmt 0 view .LVU1793
 5567              	.LBE675:
 5568              	.LBE674:
 728:src/keys.c    **** 	
 5569              		.loc 1 728 2 is_stmt 1 view .LVU1794
 733:src/keys.c    **** 	  switch (c) {
 5570              		.loc 1 733 6 is_stmt 0 view .LVU1795
 5571 02f4 B049     		ldr	r1, .L1204
 5572              	.LBB678:
 5573              	.LBB676:
 148:src/keys.c    **** }
 5574              		.loc 1 148 23 view .LVU1796
 5575 02f6 B148     		ldr	r0, .L1204+4
 5576              	.LBE676:
 5577              	.LBE678:
 733:src/keys.c    **** 	  switch (c) {
 5578              		.loc 1 733 6 view .LVU1797
 5579 02f8 0968     		ldr	r1, [r1]
 5580              	.LBB679:
 5581              	.LBB677:
 148:src/keys.c    **** }
 5582              		.loc 1 148 23 view .LVU1798
 5583 02fa 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5584              	.LBE677:
 5585              	.LBE679:
 728:src/keys.c    **** 	
 5586              		.loc 1 728 17 view .LVU1799
 5587 02fe B048     		ldr	r0, .L1204+8
 733:src/keys.c    **** 	  switch (c) {
 5588              		.loc 1 733 6 view .LVU1800
 5589 0300 91F8E817 		ldrb	r1, [r1, #2024]	@ zero_extendqisi2
 728:src/keys.c    **** 	
 5590              		.loc 1 728 17 view .LVU1801
 5591 0304 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5592              	.LVL478:
 733:src/keys.c    **** 	  switch (c) {
 5593              		.loc 1 733 5 view .LVU1802
 5594 0308 C807     		lsls	r0, r1, #31
 728:src/keys.c    **** 	
 5595              		.loc 1 728 6 view .LVU1803
 5596 030a D346     		mov	fp, r10
 5597              	.LVL479:
 732:src/keys.c    **** 	if (UState.intm) {
 5598              		.loc 1 732 2 is_stmt 1 view .LVU1804
 733:src/keys.c    **** 	  switch (c) {
 5599              		.loc 1 733 2 view .LVU1805
 733:src/keys.c    **** 	  switch (c) {
 5600              		.loc 1 733 5 is_stmt 0 view .LVU1806
 5601 030c 00F1BB81 		bmi	.L1135
 764:src/keys.c    **** 	  }
ARM GAS  /tmp/ccGwaFaD.s 			page 184


 5602              		.loc 1 764 12 is_stmt 1 view .LVU1807
 769:src/keys.c    **** #ifdef DM42
 5603              		.loc 1 769 2 view .LVU1808
 5604 0310 2D2C     		cmp	r4, #45
 5605 0312 00F29580 		bhi	.L595
 5606 0316 DFE814F0 		tbh	[pc, r4, lsl #1]
 5607              	.L900:
 5608 031a D00A     		.2byte	(.L847-.L900)/2
 5609 031c C90A     		.2byte	(.L848-.L900)/2
 5610 031e 9300     		.2byte	(.L595-.L900)/2
 5611 0320 2C02     		.2byte	(.L846-.L900)/2
 5612 0322 9300     		.2byte	(.L595-.L900)/2
 5613 0324 9300     		.2byte	(.L595-.L900)/2
 5614 0326 3802     		.2byte	(.L841-.L900)/2
 5615 0328 3802     		.2byte	(.L841-.L900)/2
 5616 032a 9300     		.2byte	(.L595-.L900)/2
 5617 032c 9300     		.2byte	(.L595-.L900)/2
 5618 032e 9300     		.2byte	(.L595-.L900)/2
 5619 0330 9300     		.2byte	(.L595-.L900)/2
 5620 0332 9300     		.2byte	(.L595-.L900)/2
 5621 0334 9300     		.2byte	(.L595-.L900)/2
 5622 0336 9300     		.2byte	(.L595-.L900)/2
 5623 0338 9300     		.2byte	(.L595-.L900)/2
 5624 033a 2102     		.2byte	(.L845-.L900)/2
 5625 033c 9300     		.2byte	(.L595-.L900)/2
 5626 033e 3802     		.2byte	(.L841-.L900)/2
 5627 0340 9300     		.2byte	(.L595-.L900)/2
 5628 0342 9300     		.2byte	(.L595-.L900)/2
 5629 0344 9300     		.2byte	(.L595-.L900)/2
 5630 0346 9300     		.2byte	(.L595-.L900)/2
 5631 0348 9300     		.2byte	(.L595-.L900)/2
 5632 034a 9300     		.2byte	(.L595-.L900)/2
 5633 034c 9300     		.2byte	(.L595-.L900)/2
 5634 034e 9300     		.2byte	(.L595-.L900)/2
 5635 0350 9300     		.2byte	(.L595-.L900)/2
 5636 0352 9300     		.2byte	(.L595-.L900)/2
 5637 0354 9300     		.2byte	(.L595-.L900)/2
 5638 0356 9300     		.2byte	(.L595-.L900)/2
 5639 0358 9300     		.2byte	(.L595-.L900)/2
 5640 035a 9300     		.2byte	(.L595-.L900)/2
 5641 035c 9300     		.2byte	(.L595-.L900)/2
 5642 035e 9300     		.2byte	(.L595-.L900)/2
 5643 0360 9300     		.2byte	(.L595-.L900)/2
 5644 0362 9300     		.2byte	(.L595-.L900)/2
 5645 0364 9300     		.2byte	(.L595-.L900)/2
 5646 0366 9300     		.2byte	(.L595-.L900)/2
 5647 0368 9300     		.2byte	(.L595-.L900)/2
 5648 036a 9300     		.2byte	(.L595-.L900)/2
 5649 036c 9300     		.2byte	(.L595-.L900)/2
 5650 036e 9300     		.2byte	(.L595-.L900)/2
 5651 0370 9300     		.2byte	(.L595-.L900)/2
 5652 0372 6802     		.2byte	(.L844-.L900)/2
 5653 0374 9C0D     		.2byte	(.L850-.L900)/2
 5654              	.LVL480:
 5655              		.p2align 1
 5656              	.L570:
 769:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccGwaFaD.s 			page 185


 5657              		.loc 1 769 2 is_stmt 0 view .LVU1809
 5658              	.LBE673:
 5659              	.LBE672:
2803:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5660              		.loc 1 2803 5 is_stmt 1 view .LVU1810
2803:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5661              		.loc 1 2803 8 is_stmt 0 view .LVU1811
 5662 0376 242C     		cmp	r4, #36
 5663 0378 00F09180 		beq	.L572
2803:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5664              		.loc 1 2803 18 view .LVU1812
 5665 037c 272C     		cmp	r4, #39
 5666 037e 00F08E80 		beq	.L572
2813:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5667              		.loc 1 2813 5 is_stmt 1 view .LVU1813
2813:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5668              		.loc 1 2813 8 is_stmt 0 view .LVU1814
 5669 0382 622C     		cmp	r4, #98
 5670 0384 07D0     		beq	.L575
2814:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5671              		.loc 1 2814 7 is_stmt 1 view .LVU1815
2814:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5672              		.loc 1 2814 15 is_stmt 0 view .LVU1816
 5673 0386 8F4B     		ldr	r3, .L1204+12
2816:src/keys.c    ****     }
 5674              		.loc 1 2816 14 view .LVU1817
 5675 0388 8F4A     		ldr	r2, .L1204+16
2814:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5676              		.loc 1 2814 17 view .LVU1818
 5677 038a 0134     		adds	r4, r4, #1
 5678              	.LVL481:
2816:src/keys.c    ****     }
 5679              		.loc 1 2816 14 view .LVU1819
 5680 038c 0121     		movs	r1, #1
2814:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5681              		.loc 1 2814 15 view .LVU1820
 5682 038e DC74     		strb	r4, [r3, #19]
2815:src/keys.c    ****       GoFast = 1;
 5683              		.loc 1 2815 7 is_stmt 1 view .LVU1821
2815:src/keys.c    ****       GoFast = 1;
 5684              		.loc 1 2815 13 is_stmt 0 view .LVU1822
 5685 0390 0023     		movs	r3, #0
2816:src/keys.c    ****     }
 5686              		.loc 1 2816 14 view .LVU1823
 5687 0392 1160     		str	r1, [r2]
2815:src/keys.c    ****       GoFast = 1;
 5688              		.loc 1 2815 13 view .LVU1824
 5689 0394 3B70     		strb	r3, [r7]
2816:src/keys.c    ****     }
 5690              		.loc 1 2816 7 is_stmt 1 view .LVU1825
 5691              	.LVL482:
 5692              	.L575:
2816:src/keys.c    ****     }
 5693              		.loc 1 2816 7 is_stmt 0 view .LVU1826
 5694              	.LBE654:
 5695              	.LBE653:
3186:src/keys.c    ****       break;
ARM GAS  /tmp/ccGwaFaD.s 			page 186


 5696              		.loc 1 3186 7 is_stmt 1 view .LVU1827
 5697 0396 FFF7FEFF 		bl	xeqprog
 5698              	.LVL483:
3187:src/keys.c    **** 
 5699              		.loc 1 3187 7 view .LVU1828
 5700 039a 3268     		ldr	r2, [r6]
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 5701              		.loc 1 2979 7 is_stmt 0 view .LVU1829
 5702 039c 0025     		movs	r5, #0
3187:src/keys.c    **** 
 5703              		.loc 1 3187 7 view .LVU1830
 5704 039e 4FF0310B 		mov	fp, #49
 5705              	.LVL484:
3226:src/keys.c    **** #ifndef CONSOLE
 5706              		.loc 1 3226 3 is_stmt 1 view .LVU1831
3226:src/keys.c    **** #ifndef CONSOLE
 5707              		.loc 1 3226 6 is_stmt 0 view .LVU1832
 5708 03a2 002A     		cmp	r2, #0
 5709 03a4 3FF488AE 		beq	.L581
 5710              	.L1098:
3226:src/keys.c    **** #ifndef CONSOLE
 5711              		.loc 1 3226 6 view .LVU1833
 5712 03a8 884C     		ldr	r4, .L1204+20
3239:src/keys.c    ****   watchdog();
 5713              		.loc 1 3239 3 is_stmt 1 view .LVU1834
3239:src/keys.c    ****   watchdog();
 5714              		.loc 1 3239 17 is_stmt 0 view .LVU1835
 5715 03aa 0023     		movs	r3, #0
 5716 03ac 2360     		str	r3, [r4]
3240:src/keys.c    **** }
 5717              		.loc 1 3240 13 is_stmt 1 view .LVU1836
 5718 03ae A9E6     		b	.L534
 5719              	.LVL485:
 5720              	.L1103:
2990:src/keys.c    ****     }
 5721              		.loc 1 2990 7 view .LVU1837
3138:src/keys.c    **** #ifdef DM42
 5722              		.loc 1 3138 15 is_stmt 0 view .LVU1838
 5723 03b0 874E     		ldr	r6, .L1204+24
3138:src/keys.c    **** #ifdef DM42
 5724              		.loc 1 3138 13 view .LVU1839
 5725 03b2 8849     		ldr	r1, .L1204+28
3138:src/keys.c    **** #ifdef DM42
 5726              		.loc 1 3138 15 view .LVU1840
 5727 03b4 3368     		ldr	r3, [r6]
2990:src/keys.c    ****     }
 5728              		.loc 1 2990 14 view .LVU1841
 5729 03b6 884A     		ldr	r2, .L1204+32
3137:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5730              		.loc 1 3137 18 view .LVU1842
 5731 03b8 DFF83492 		ldr	r9, .L1204+56
3138:src/keys.c    **** #ifdef DM42
 5732              		.loc 1 3138 15 view .LVU1843
 5733 03bc B3FA83F3 		clz	r3, r3
 5734 03c0 5B09     		lsrs	r3, r3, #5
3138:src/keys.c    **** #ifdef DM42
 5735              		.loc 1 3138 13 view .LVU1844
ARM GAS  /tmp/ccGwaFaD.s 			page 187


 5736 03c2 0B60     		str	r3, [r1]
2990:src/keys.c    ****     }
 5737              		.loc 1 2990 14 view .LVU1845
 5738 03c4 0023     		movs	r3, #0
 5739 03c6 1360     		str	r3, [r2]
3087:src/keys.c    ****     {
 5740              		.loc 1 3087 3 is_stmt 1 view .LVU1846
3137:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5741              		.loc 1 3137 5 view .LVU1847
3137:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5742              		.loc 1 3137 18 is_stmt 0 view .LVU1848
 5743 03c8 C9F80030 		str	r3, [r9]
3138:src/keys.c    **** #ifdef DM42
 5744              		.loc 1 3138 5 is_stmt 1 view .LVU1849
3140:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5745              		.loc 1 3140 5 view .LVU1850
 5746 03cc D1E6     		b	.L537
 5747              	.L555:
3140:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5748              		.loc 1 3140 5 is_stmt 0 view .LVU1851
 5749 03ce 804E     		ldr	r6, .L1204+24
3138:src/keys.c    **** #ifdef DM42
 5750              		.loc 1 3138 13 view .LVU1852
 5751 03d0 8049     		ldr	r1, .L1204+28
 5752 03d2 3268     		ldr	r2, [r6]
3137:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5753              		.loc 1 3137 5 is_stmt 1 view .LVU1853
3137:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5754              		.loc 1 3137 18 is_stmt 0 view .LVU1854
 5755 03d4 DFF81892 		ldr	r9, .L1204+56
3138:src/keys.c    **** #ifdef DM42
 5756              		.loc 1 3138 15 view .LVU1855
 5757 03d8 B2FA82F3 		clz	r3, r2
 5758 03dc 5B09     		lsrs	r3, r3, #5
3140:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5759              		.loc 1 3140 8 view .LVU1856
 5760 03de 342C     		cmp	r4, #52
3138:src/keys.c    **** #ifdef DM42
 5761              		.loc 1 3138 13 view .LVU1857
 5762 03e0 0B60     		str	r3, [r1]
3137:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5763              		.loc 1 3137 18 view .LVU1858
 5764 03e2 C9F80050 		str	r5, [r9]
3138:src/keys.c    **** #ifdef DM42
 5765              		.loc 1 3138 5 is_stmt 1 view .LVU1859
3140:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5766              		.loc 1 3140 5 view .LVU1860
3140:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5767              		.loc 1 3140 8 is_stmt 0 view .LVU1861
 5768 03e6 7FF4C4AE 		bne	.L537
3144:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5769              		.loc 1 3144 7 is_stmt 1 view .LVU1862
3144:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5770              		.loc 1 3144 11 is_stmt 0 view .LVU1863
 5771 03ea 7C4B     		ldr	r3, .L1204+36
 5772 03ec 1868     		ldr	r0, [r3]
3144:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
ARM GAS  /tmp/ccGwaFaD.s 			page 188


 5773              		.loc 1 3144 10 view .LVU1864
 5774 03ee 10F47043 		ands	r3, r0, #61440
 5775 03f2 1FD0     		beq	.L853
3144:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5776              		.loc 1 3144 11 discriminator 1 view .LVU1865
 5777 03f4 B3F5704F 		cmp	r3, #61440
 5778              	.LBB1273:
3145:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5779              		.loc 1 3145 28 discriminator 1 view .LVU1866
 5780 03f8 C0F30723 		ubfx	r3, r0, #8, #8
 5781              	.LBE1273:
3144:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5782              		.loc 1 3144 11 discriminator 1 view .LVU1867
 5783 03fc 00F0AD80 		beq	.L854
 5784              	.LBB1276:
3145:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5785              		.loc 1 3145 2 is_stmt 1 view .LVU1868
3145:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5786              		.loc 1 3145 28 is_stmt 0 view .LVU1869
 5787 0400 A3F12004 		sub	r4, r3, #32
 5788              	.LVL486:
3145:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5789              		.loc 1 3145 28 view .LVU1870
 5790 0404 E4B2     		uxtb	r4, r4
 5791              	.LVL487:
3146:src/keys.c    **** 	  c = nd_opcode;
 5792              		.loc 1 3146 2 is_stmt 1 view .LVU1871
3146:src/keys.c    **** 	  c = nd_opcode;
 5793              		.loc 1 3146 5 is_stmt 0 view .LVU1872
 5794 0406 012C     		cmp	r4, #1
 5795 0408 40F28980 		bls	.L855
3146:src/keys.c    **** 	  c = nd_opcode;
 5796              		.loc 1 3146 53 discriminator 1 view .LVU1873
 5797 040c 6C2C     		cmp	r4, #108
 5798 040e 00F08680 		beq	.L855
3146:src/keys.c    **** 	  c = nd_opcode;
 5799              		.loc 1 3146 74 discriminator 2 view .LVU1874
 5800 0412 242C     		cmp	r4, #36
 5801 0414 00F08380 		beq	.L855
3148:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5802              		.loc 1 3148 7 is_stmt 1 view .LVU1875
3148:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5803              		.loc 1 3148 32 is_stmt 0 view .LVU1876
 5804 0418 A4F12D01 		sub	r1, r4, #45
3148:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5805              		.loc 1 3148 10 view .LVU1877
 5806 041c 0629     		cmp	r1, #6
 5807 041e 00F22183 		bhi	.L857
3149:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5808              		.loc 1 3149 4 is_stmt 1 view .LVU1878
3149:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5809              		.loc 1 3149 25 is_stmt 0 view .LVU1879
 5810 0422 4D3B     		subs	r3, r3, #77
3149:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5811              		.loc 1 3149 16 view .LVU1880
 5812 0424 88F80F30 		strb	r3, [r8, #15]
3150:src/keys.c    **** 	}
ARM GAS  /tmp/ccGwaFaD.s 			page 189


 5813              		.loc 1 3150 4 is_stmt 1 view .LVU1881
 5814              	.LVL488:
3150:src/keys.c    **** 	}
 5815              		.loc 1 3150 4 is_stmt 0 view .LVU1882
 5816              	.LBE1276:
3164:src/keys.c    ****     case STATE_SST:
 5817              		.loc 1 3164 5 is_stmt 1 view .LVU1883
 5818              	.LBB1277:
3150:src/keys.c    **** 	}
 5819              		.loc 1 3150 6 is_stmt 0 view .LVU1884
 5820 0428 4FF0330B 		mov	fp, #51
 5821 042c 41E6     		b	.L565
 5822              	.LVL489:
 5823              	.L1102:
3150:src/keys.c    **** 	}
 5824              		.loc 1 3150 6 view .LVU1885
 5825              	.LBE1277:
2985:src/keys.c    ****     }
 5826              		.loc 1 2985 7 is_stmt 1 view .LVU1886
 5827 042e FFF7FEFF 		bl	xeq_xrom
 5828              	.LVL490:
2985:src/keys.c    ****     }
 5829              		.loc 1 2985 7 is_stmt 0 view .LVU1887
 5830 0432 F1E5     		b	.L535
 5831              	.L853:
3158:src/keys.c    ****       }      
 5832              		.loc 1 3158 2 is_stmt 1 view .LVU1888
 5833              	.LBB1278:
 5834              	.LBB1279:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5835              		.loc 1 625 5 is_stmt 0 view .LVU1889
 5836 0434 C0F30723 		ubfx	r3, r0, #8, #8
 5837 0438 012B     		cmp	r3, #1
 5838              	.LBE1279:
 5839              	.LBE1278:
3158:src/keys.c    ****       }      
 5840              		.loc 1 3158 6 view .LVU1890
 5841 043a 8346     		mov	fp, r0
 5842              	.LVL491:
 5843              	.LBB1283:
 5844              	.LBI1278:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5845              		.loc 1 624 12 is_stmt 1 view .LVU1891
 5846              	.LBB1280:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5847              		.loc 1 625 2 view .LVU1892
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5848              		.loc 1 625 5 is_stmt 0 view .LVU1893
 5849 043c 00F09180 		beq	.L895
 5850              	.LVL492:
 5851              	.L595:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5852              		.loc 1 625 5 view .LVU1894
 5853              	.LBE1280:
 5854              	.LBE1283:
3164:src/keys.c    ****     case STATE_SST:
 5855              		.loc 1 3164 5 is_stmt 1 view .LVU1895
ARM GAS  /tmp/ccGwaFaD.s 			page 190


 5856 0440 ABF12B03 		sub	r3, fp, #43
 5857 0444 082B     		cmp	r3, #8
 5858 0446 00F2E580 		bhi	.L859
 5859 044a 01A2     		adr	r2, .L861
 5860 044c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5861              		.p2align 2
 5862              	.L861:
 5863 0450 7F040000 		.word	.L866+1
 5864 0454 7F040000 		.word	.L866+1
 5865 0458 15060000 		.word	.L859+1
 5866 045c ED040000 		.word	.L775+1
 5867 0460 DB040000 		.word	.L771+1
 5868 0464 05050000 		.word	.L768+1
 5869 0468 97030000 		.word	.L575+1
 5870 046c 9B050000 		.word	.L860+1
 5871 0470 9B050000 		.word	.L860+1
 5872              	.LVL493:
 5873              		.p2align 1
 5874              	.L1111:
3054:src/keys.c    ****       return;
 5875              		.loc 1 3054 21 is_stmt 0 discriminator 1 view .LVU1896
 5876 0474 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3054:src/keys.c    ****       return;
 5877              		.loc 1 3054 18 discriminator 1 view .LVU1897
 5878 0476 002A     		cmp	r2, #0
 5879 0478 7FF471AE 		bne	.L551
 5880 047c 42E6     		b	.L534
 5881              	.LVL494:
 5882              	.L866:
3191:src/keys.c    **** 	set_window(c);
 5883              		.loc 1 3191 7 is_stmt 1 view .LVU1898
3191:src/keys.c    **** 	set_window(c);
 5884              		.loc 1 3191 12 is_stmt 0 view .LVU1899
 5885 047e FFF7FEFF 		bl	is_bad_cmdline
 5886              	.LVL495:
3191:src/keys.c    **** 	set_window(c);
 5887              		.loc 1 3191 10 view .LVU1900
 5888 0482 0546     		mov	r5, r0
 5889 0484 0028     		cmp	r0, #0
 5890 0486 00F0F481 		beq	.L870
 5891 048a 3268     		ldr	r2, [r6]
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 5892              		.loc 1 2979 7 view .LVU1901
 5893 048c 0025     		movs	r5, #0
 5894 048e 10E6     		b	.L565
 5895              	.LVL496:
 5896              	.L1110:
3046:src/keys.c    ****       JustStopped = 0;
 5897              		.loc 1 3046 25 discriminator 1 view .LVU1902
 5898 0490 FFF7FEFF 		bl	is_key_pressed
 5899              	.LVL497:
3046:src/keys.c    ****       JustStopped = 0;
 5900              		.loc 1 3046 21 discriminator 1 view .LVU1903
 5901 0494 0028     		cmp	r0, #0
 5902 0496 7FF45DAE 		bne	.L549
3047:src/keys.c    ****     }
 5903              		.loc 1 3047 7 is_stmt 1 view .LVU1904
ARM GAS  /tmp/ccGwaFaD.s 			page 191


3047:src/keys.c    ****     }
 5904              		.loc 1 3047 19 is_stmt 0 view .LVU1905
 5905 049a 2860     		str	r0, [r5]
 5906 049c 5AE6     		b	.L549
 5907              	.LVL498:
 5908              	.L572:
 5909              	.LBB1284:
 5910              	.LBB1222:
2804:src/keys.c    **** 	set_pc(0);
 5911              		.loc 1 2804 7 is_stmt 1 view .LVU1906
2804:src/keys.c    **** 	set_pc(0);
 5912              		.loc 1 2804 11 is_stmt 0 view .LVU1907
 5913 049e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
2804:src/keys.c    **** 	set_pc(0);
 5914              		.loc 1 2804 10 view .LVU1908
 5915 04a0 4BB1     		cbz	r3, .L574
2804:src/keys.c    **** 	set_pc(0);
 5916              		.loc 1 2804 20 view .LVU1909
 5917 04a2 454B     		ldr	r3, .L1204
 5918 04a4 1B68     		ldr	r3, [r3]
 5919 04a6 B3F8E037 		ldrh	r3, [r3, #2016]
2804:src/keys.c    **** 	set_pc(0);
 5920              		.loc 1 2804 17 view .LVU1910
 5921 04aa 9B0B     		lsrs	r3, r3, #14
 5922 04ac 032B     		cmp	r3, #3
 5923 04ae 02D1     		bne	.L574
2805:src/keys.c    ****       Pause = 0;
 5924              		.loc 1 2805 2 is_stmt 1 view .LVU1911
 5925 04b0 0020     		movs	r0, #0
 5926 04b2 FFF7FEFF 		bl	set_pc
 5927              	.LVL499:
 5928              	.L574:
2806:src/keys.c    ****       xeq_xrom();
 5929              		.loc 1 2806 7 view .LVU1912
2806:src/keys.c    ****       xeq_xrom();
 5930              		.loc 1 2806 13 is_stmt 0 view .LVU1913
 5931 04b6 0025     		movs	r5, #0
 5932 04b8 3D70     		strb	r5, [r7]
2807:src/keys.c    ****       set_running_off();
 5933              		.loc 1 2807 7 is_stmt 1 view .LVU1914
 5934 04ba FFF7FEFF 		bl	xeq_xrom
 5935              	.LVL500:
2808:src/keys.c    ****       DispMsg = "Stopped";
 5936              		.loc 1 2808 7 view .LVU1915
 5937 04be FFF7FEFF 		bl	set_running_off
 5938              	.LVL501:
2809:src/keys.c    ****       State2.disp_freeze = 0;
 5939              		.loc 1 2809 7 view .LVU1916
2810:src/keys.c    ****       return STATE_UNFINISHED;
 5940              		.loc 1 2810 26 is_stmt 0 view .LVU1917
 5941 04c2 404B     		ldr	r3, .L1204+12
2809:src/keys.c    ****       State2.disp_freeze = 0;
 5942              		.loc 1 2809 15 view .LVU1918
 5943 04c4 4648     		ldr	r0, .L1204+40
2810:src/keys.c    ****       return STATE_UNFINISHED;
 5944              		.loc 1 2810 26 view .LVU1919
 5945 04c6 D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccGwaFaD.s 			page 192


2809:src/keys.c    ****       State2.disp_freeze = 0;
 5946              		.loc 1 2809 15 view .LVU1920
 5947 04c8 464C     		ldr	r4, .L1204+44
 5948              	.LVL502:
2809:src/keys.c    ****       State2.disp_freeze = 0;
 5949              		.loc 1 2809 15 view .LVU1921
 5950 04ca 3268     		ldr	r2, [r6]
 5951 04cc 0460     		str	r4, [r0]
2810:src/keys.c    ****       return STATE_UNFINISHED;
 5952              		.loc 1 2810 7 is_stmt 1 view .LVU1922
2810:src/keys.c    ****       return STATE_UNFINISHED;
 5953              		.loc 1 2810 26 is_stmt 0 view .LVU1923
 5954 04ce 65F30411 		bfi	r1, r5, #4, #1
 5955 04d2 D975     		strb	r1, [r3, #23]
2811:src/keys.c    ****     }
 5956              		.loc 1 2811 7 is_stmt 1 view .LVU1924
2811:src/keys.c    ****     }
 5957              		.loc 1 2811 14 is_stmt 0 view .LVU1925
 5958 04d4 4FF0330B 		mov	fp, #51
 5959 04d8 EBE5     		b	.L565
 5960              	.LVL503:
 5961              	.L771:
2811:src/keys.c    ****     }
 5962              		.loc 1 2811 14 view .LVU1926
 5963              	.LBE1222:
 5964              	.LBE1284:
3172:src/keys.c    ****       break;
 5965              		.loc 1 3172 7 is_stmt 1 view .LVU1927
 5966 04da 4FF0FF30 		mov	r0, #-1
 5967 04de FFF7FEFF 		bl	xeq_sst_bst
 5968              	.LVL504:
3173:src/keys.c    **** 
 5969              		.loc 1 3173 7 view .LVU1928
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 5970              		.loc 1 2979 7 is_stmt 0 view .LVU1929
 5971 04e2 0025     		movs	r5, #0
 5972 04e4 3268     		ldr	r2, [r6]
3173:src/keys.c    **** 
 5973              		.loc 1 3173 7 view .LVU1930
 5974 04e6 4FF02F0B 		mov	fp, #47
 5975 04ea E2E5     		b	.L565
 5976              	.L775:
3166:src/keys.c    ****       OpCodeDisplayPending = 0;
 5977              		.loc 1 3166 7 is_stmt 1 view .LVU1931
3167:src/keys.c    ****       xeq_sst_bst(0);
 5978              		.loc 1 3167 28 is_stmt 0 view .LVU1932
 5979 04ec 3E4A     		ldr	r2, .L1204+48
3166:src/keys.c    ****       OpCodeDisplayPending = 0;
 5980              		.loc 1 3166 14 view .LVU1933
 5981 04ee 3A49     		ldr	r1, .L1204+32
3167:src/keys.c    ****       xeq_sst_bst(0);
 5982              		.loc 1 3167 28 view .LVU1934
 5983 04f0 0020     		movs	r0, #0
3166:src/keys.c    ****       OpCodeDisplayPending = 0;
 5984              		.loc 1 3166 14 view .LVU1935
 5985 04f2 2E23     		movs	r3, #46
3167:src/keys.c    ****       xeq_sst_bst(0);
ARM GAS  /tmp/ccGwaFaD.s 			page 193


 5986              		.loc 1 3167 28 view .LVU1936
 5987 04f4 1060     		str	r0, [r2]
3166:src/keys.c    ****       OpCodeDisplayPending = 0;
 5988              		.loc 1 3166 14 view .LVU1937
 5989 04f6 0B60     		str	r3, [r1]
3167:src/keys.c    ****       xeq_sst_bst(0);
 5990              		.loc 1 3167 7 is_stmt 1 view .LVU1938
3168:src/keys.c    ****       break;
 5991              		.loc 1 3168 7 view .LVU1939
3169:src/keys.c    **** 
 5992              		.loc 1 3169 7 is_stmt 0 view .LVU1940
 5993 04f8 9B46     		mov	fp, r3
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 5994              		.loc 1 2979 7 view .LVU1941
 5995 04fa 0546     		mov	r5, r0
3168:src/keys.c    ****       break;
 5996              		.loc 1 3168 7 view .LVU1942
 5997 04fc FFF7FEFF 		bl	xeq_sst_bst
 5998              	.LVL505:
3169:src/keys.c    **** 
 5999              		.loc 1 3169 7 is_stmt 1 view .LVU1943
 6000 0500 3268     		ldr	r2, [r6]
 6001 0502 D6E5     		b	.L565
 6002              	.L768:
3176:src/keys.c    **** 	delprog();
 6003              		.loc 1 3176 7 view .LVU1944
3176:src/keys.c    **** 	delprog();
 6004              		.loc 1 3176 11 is_stmt 0 view .LVU1945
 6005 0504 98F81650 		ldrb	r5, [r8, #22]	@ zero_extendqisi2
3176:src/keys.c    **** 	delprog();
 6006              		.loc 1 3176 10 view .LVU1946
 6007 0508 6C06     		lsls	r4, r5, #25
 6008 050a 40F12B81 		bpl	.L867
3178:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6009              		.loc 1 3178 12 is_stmt 1 view .LVU1947
3178:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6010              		.loc 1 3178 15 is_stmt 0 view .LVU1948
 6011 050e 15F00805 		ands	r5, r5, #8
 6012 0512 40F09680 		bne	.L868
 6013 0516 3268     		ldr	r2, [r6]
 6014 0518 4FF0300B 		mov	fp, #48
 6015 051c C9E5     		b	.L565
 6016              	.LVL506:
 6017              	.L855:
 6018              	.LBB1285:
3147:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6019              		.loc 1 3147 4 is_stmt 1 view .LVU1949
 6020 051e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3147:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6021              		.loc 1 3147 6 is_stmt 0 view .LVU1950
 6022 0522 8346     		mov	fp, r0
 6023              	.LVL507:
 6024              	.L622:
3147:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6025              		.loc 1 3147 6 view .LVU1951
 6026              	.LBE1285:
3200:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccGwaFaD.s 			page 194


 6027              		.loc 1 3200 7 is_stmt 1 view .LVU1952
3200:src/keys.c    **** 	NonProgrammable = 0;
 6028              		.loc 1 3200 10 is_stmt 0 view .LVU1953
 6029 0524 5906     		lsls	r1, r3, #25
 6030 0526 00F1BA81 		bmi	.L1136
 6031              	.L888:
3200:src/keys.c    **** 	NonProgrammable = 0;
 6032              		.loc 1 3200 26 view .LVU1954
 6033 052a 304B     		ldr	r3, .L1204+52
 6034 052c 1A68     		ldr	r2, [r3]
 6035 052e 002A     		cmp	r2, #0
 6036 0530 41F0BE84 		bne	.L1137
 6037              	.LVL508:
 6038              	.L876:
3222:src/keys.c    ****       }
 6039              		.loc 1 3222 2 is_stmt 1 view .LVU1955
 6040 0534 FFF7FEFF 		bl	stoprog
 6041              	.LVL509:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 6042              		.loc 1 2979 7 is_stmt 0 view .LVU1956
 6043 0538 0025     		movs	r5, #0
 6044 053a 3268     		ldr	r2, [r6]
 6045 053c B9E5     		b	.L565
 6046              	.LVL510:
 6047              	.L1106:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 6048              		.loc 1 2979 7 view .LVU1957
 6049 053e 244E     		ldr	r6, .L1204+24
 6050 0540 3368     		ldr	r3, [r6]
 6051 0542 0CE6     		b	.L551
 6052              	.L1105:
3068:src/keys.c    ****       finish_RPN(); // RPN
 6053              		.loc 1 3068 7 is_stmt 1 view .LVU1958
 6054 0544 8D20     		movs	r0, #141
 6055 0546 FFF7FEFF 		bl	clr_dot
 6056              	.LVL511:
3069:src/keys.c    ****     }
 6057              		.loc 1 3069 7 view .LVU1959
 6058 054a FFF7FEFF 		bl	finish_RPN
 6059              	.LVL512:
 6060 054e 7AE5     		b	.L553
 6061              	.LVL513:
 6062              	.L564:
3129:src/keys.c    ****     }
 6063              		.loc 1 3129 7 view .LVU1960
 6064 0550 FFF7FEFF 		bl	finish_RPN
 6065              	.LVL514:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 6066              		.loc 1 2979 7 is_stmt 0 view .LVU1961
 6067 0554 0025     		movs	r5, #0
 6068 0556 3268     		ldr	r2, [r6]
 6069 0558 ABE5     		b	.L565
 6070              	.LVL515:
 6071              	.L854:
3158:src/keys.c    ****       }      
 6072              		.loc 1 3158 2 is_stmt 1 view .LVU1962
 6073              	.LBB1286:
ARM GAS  /tmp/ccGwaFaD.s 			page 195


 6074              	.LBB1281:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6075              		.loc 1 625 5 is_stmt 0 view .LVU1963
 6076 055a 012B     		cmp	r3, #1
 6077              	.LBE1281:
 6078              	.LBE1286:
3158:src/keys.c    ****       }      
 6079              		.loc 1 3158 6 view .LVU1964
 6080 055c 8346     		mov	fp, r0
 6081              	.LVL516:
 6082              	.LBB1287:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6083              		.loc 1 624 12 is_stmt 1 view .LVU1965
 6084              	.LBB1282:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6085              		.loc 1 625 2 view .LVU1966
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6086              		.loc 1 625 5 is_stmt 0 view .LVU1967
 6087 055e 40F08280 		bne	.L1138
 6088              	.LVL517:
 6089              	.L895:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6090              		.loc 1 625 5 view .LVU1968
 6091 0562 FFF7FEFF 		bl	check_confirm.part.0
 6092              	.LVL518:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6093              		.loc 1 625 5 view .LVU1969
 6094 0566 8346     		mov	fp, r0
 6095              	.LVL519:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6096              		.loc 1 625 5 view .LVU1970
 6097 0568 6AE7     		b	.L595
 6098              	.LVL520:
 6099              	.L556:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6100              		.loc 1 625 5 view .LVU1971
 6101              	.LBE1282:
 6102              	.LBE1287:
3110:src/keys.c    **** #ifndef CONSOLE
 6103              		.loc 1 3110 7 is_stmt 1 view .LVU1972
 6104 056a 1A4B     		ldr	r3, .L1204+28
 6105 056c 8D20     		movs	r0, #141
 6106 056e 1968     		ldr	r1, [r3]
 6107 0570 FFF7FEFF 		bl	dot
 6108              	.LVL521:
3112:src/keys.c    **** 	if (!WasDataEntry) {
 6109              		.loc 1 3112 7 view .LVU1973
3112:src/keys.c    **** 	if (!WasDataEntry) {
 6110              		.loc 1 3112 11 is_stmt 0 view .LVU1974
 6111 0574 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3112:src/keys.c    **** 	if (!WasDataEntry) {
 6112              		.loc 1 3112 10 view .LVU1975
 6113 0578 9806     		lsls	r0, r3, #26
 6114 057a 3FF5C3AD 		bmi	.L534
3113:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6115              		.loc 1 3113 2 is_stmt 1 view .LVU1976
3113:src/keys.c    **** 	  // This will get rid of the last displayed op-code
ARM GAS  /tmp/ccGwaFaD.s 			page 196


 6116              		.loc 1 3113 6 is_stmt 0 view .LVU1977
 6117 057e 1C4B     		ldr	r3, .L1204+56
3113:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6118              		.loc 1 3113 5 view .LVU1978
 6119 0580 1B68     		ldr	r3, [r3]
 6120 0582 002B     		cmp	r3, #0
 6121 0584 40F08681 		bne	.L567
3115:src/keys.c    **** 	}
 6122              		.loc 1 3115 4 is_stmt 1 view .LVU1979
 6123              		.loc 1 3241 1 is_stmt 0 view .LVU1980
 6124 0588 03B0     		add	sp, sp, #12
 6125              		.cfi_remember_state
 6126              		.cfi_def_cfa_offset 36
 6127              		@ sp needed
 6128 058a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6129              		.cfi_restore 14
 6130              		.cfi_restore 11
 6131              		.cfi_restore 10
 6132              		.cfi_restore 9
 6133              		.cfi_restore 8
 6134              		.cfi_restore 7
 6135              		.cfi_restore 6
 6136              		.cfi_restore 5
 6137              		.cfi_restore 4
 6138              		.cfi_def_cfa_offset 0
3115:src/keys.c    **** 	}
 6139              		.loc 1 3115 4 view .LVU1981
 6140 058e FFF7FEBF 		b	display
 6141              	.LVL522:
 6142              	.L1107:
 6143              		.cfi_restore_state
3098:src/keys.c    ****       else {
 6144              		.loc 1 3098 2 is_stmt 1 view .LVU1982
 6145 0592 FFF7FEFF 		bl	xeq_sst_bst
 6146              	.LVL523:
 6147 0596 0E4E     		ldr	r6, .L1204+24
 6148 0598 81E5     		b	.L558
 6149              	.LVL524:
 6150              	.L860:
3098:src/keys.c    ****       else {
 6151              		.loc 1 3098 2 is_stmt 0 view .LVU1983
 6152 059a 3268     		ldr	r2, [r6]
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 6153              		.loc 1 2979 7 view .LVU1984
 6154 059c 0025     		movs	r5, #0
 6155 059e 88E5     		b	.L565
 6156              	.LVL525:
 6157              	.L1109:
3031:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 6158              		.loc 1 3031 28 discriminator 1 view .LVU1985
 6159 05a0 FFF7FEFF 		bl	shift_down
 6160              	.LVL526:
3031:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 6161              		.loc 1 3031 25 discriminator 1 view .LVU1986
 6162 05a4 0028     		cmp	r0, #0
 6163 05a6 3FF4D0AD 		beq	.L540
3033:src/keys.c    ****       }
ARM GAS  /tmp/ccGwaFaD.s 			page 197


 6164              		.loc 1 3033 2 is_stmt 1 view .LVU1987
3033:src/keys.c    ****       }
 6165              		.loc 1 3033 16 is_stmt 0 view .LVU1988
 6166 05aa 064B     		ldr	r3, .L1204+12
 6167 05ac 0022     		movs	r2, #0
 6168 05ae 1A74     		strb	r2, [r3, #16]
 6169 05b0 CBE5     		b	.L540
 6170              	.L1108:
3033:src/keys.c    ****       }
 6171              		.loc 1 3033 16 view .LVU1989
 6172 05b2 074E     		ldr	r6, .L1204+24
 6173 05b4 73E5     		b	.L558
 6174              	.L1205:
 6175 05b6 00BF     		.align	2
 6176              	.L1204:
 6177 05b8 00000000 		.word	main_ram
 6178 05bc 00000000 		.word	.LANCHOR18
 6179 05c0 00000000 		.word	.LANCHOR22
 6180 05c4 00000000 		.word	StateWhileOn
 6181 05c8 00000000 		.word	GoFast
 6182 05cc 00000000 		.word	JustDisplayed
 6183 05d0 00000000 		.word	Running
 6184 05d4 00000000 		.word	ShowRPN
 6185 05d8 00000000 		.word	OpCode
 6186 05dc 00000000 		.word	nd_opcode
 6187 05e0 00000000 		.word	DispMsg
 6188 05e4 0C000000 		.word	.LC2
 6189 05e8 00000000 		.word	OpCodeDisplayPending
 6190 05ec 00000000 		.word	NonProgrammable
 6191 05f0 00000000 		.word	WasDataEntry
 6192              	.L543:
3021:src/keys.c    **** 	  /*
 6193              		.loc 1 3021 10 is_stmt 1 view .LVU1990
3021:src/keys.c    **** 	  /*
 6194              		.loc 1 3021 14 is_stmt 0 view .LVU1991
 6195 05f4 FFF7FEFF 		bl	keyticks
 6196              	.LVL527:
3021:src/keys.c    **** 	  /*
 6197              		.loc 1 3021 13 view .LVU1992
 6198 05f8 0C28     		cmp	r0, #12
 6199 05fa 7FF7A1AD 		ble	.L542
3025:src/keys.c    **** 	  message("NULL", CNULL);
 6200              		.loc 1 3025 4 is_stmt 1 view .LVU1993
3026:src/keys.c    **** 	  // Force display update on key-up
 6201              		.loc 1 3026 4 is_stmt 0 view .LVU1994
 6202 05fe AB48     		ldr	r0, .L1206
3025:src/keys.c    **** 	  message("NULL", CNULL);
 6203              		.loc 1 3025 11 view .LVU1995
 6204 0600 2E60     		str	r6, [r5]
3026:src/keys.c    **** 	  // Force display update on key-up
 6205              		.loc 1 3026 4 is_stmt 1 view .LVU1996
 6206 0602 3146     		mov	r1, r6
 6207 0604 FFF7FEFF 		bl	message
 6208              	.LVL528:
3028:src/keys.c    **** 	}
 6209              		.loc 1 3028 4 view .LVU1997
3028:src/keys.c    **** 	}
ARM GAS  /tmp/ccGwaFaD.s 			page 198


 6210              		.loc 1 3028 21 is_stmt 0 view .LVU1998
 6211 0608 A94B     		ldr	r3, .L1206+4
 6212 060a DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 6213 060c 66F34512 		bfi	r2, r6, #5, #1
 6214 0610 DA75     		strb	r2, [r3, #23]
 6215 0612 95E5     		b	.L542
 6216              	.LVL529:
 6217              	.L859:
3200:src/keys.c    **** 	NonProgrammable = 0;
 6218              		.loc 1 3200 11 view .LVU1999
 6219 0614 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6220 0618 A64A     		ldr	r2, .L1206+8
3200:src/keys.c    **** 	NonProgrammable = 0;
 6221              		.loc 1 3200 10 view .LVU2000
 6222 061a 5B06     		lsls	r3, r3, #25
 6223 061c 5846     		mov	r0, fp
 6224              	.LVL530:
3200:src/keys.c    **** 	NonProgrammable = 0;
 6225              		.loc 1 3200 7 is_stmt 1 view .LVU2001
3200:src/keys.c    **** 	NonProgrammable = 0;
 6226              		.loc 1 3200 10 is_stmt 0 view .LVU2002
 6227 061e 41F18582 		bpl	.L1090
 6228              	.L875:
 6229              	.LVL531:
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6230              		.loc 1 3201 2 is_stmt 1 view .LVU2003
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6231              		.loc 1 3201 18 is_stmt 0 view .LVU2004
 6232 0622 0023     		movs	r3, #0
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6233              		.loc 1 3202 5 view .LVU2005
 6234 0624 1428     		cmp	r0, #20
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6235              		.loc 1 3201 18 view .LVU2006
 6236 0626 1360     		str	r3, [r2]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6237              		.loc 1 3202 2 is_stmt 1 view .LVU2007
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6238              		.loc 1 3202 5 is_stmt 0 view .LVU2008
 6239 0628 24D8     		bhi	.L872
3203:src/keys.c    **** 	    // Data entry key
 6240              		.loc 1 3203 4 is_stmt 1 view .LVU2009
3203:src/keys.c    **** 	    // Data entry key
 6241              		.loc 1 3203 7 is_stmt 0 view .LVU2010
 6242 062a BBF1000F 		cmp	fp, #0
 6243 062e 40F0CB80 		bne	.L874
3203:src/keys.c    **** 	    // Data entry key
 6244              		.loc 1 3203 38 discriminator 1 view .LVU2011
 6245 0632 FFF7FEFF 		bl	is_bad_cmdline
 6246              	.LVL532:
3203:src/keys.c    **** 	    // Data entry key
 6247              		.loc 1 3203 34 discriminator 1 view .LVU2012
 6248 0636 0028     		cmp	r0, #0
 6249 0638 00F03581 		beq	.L938
 6250 063c 3268     		ldr	r2, [r6]
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 6251              		.loc 1 2979 7 view .LVU2013
ARM GAS  /tmp/ccGwaFaD.s 			page 199


 6252 063e 5D46     		mov	r5, fp
 6253 0640 37E5     		b	.L565
 6254              	.L868:
 6255              	.LBB1288:
3179:src/keys.c    **** 	if (p > Alpha)
 6256              		.loc 1 3179 2 is_stmt 1 view .LVU2014
3179:src/keys.c    **** 	if (p > Alpha)
 6257              		.loc 1 3179 22 is_stmt 0 view .LVU2015
 6258 0642 9D4C     		ldr	r4, .L1206+12
 6259 0644 2068     		ldr	r0, [r4]
3179:src/keys.c    **** 	if (p > Alpha)
 6260              		.loc 1 3179 12 view .LVU2016
 6261 0646 0021     		movs	r1, #0
 6262 0648 00F5F660 		add	r0, r0, #1968
 6263 064c FFF7FEFF 		bl	find_char
 6264              	.LVL533:
3180:src/keys.c    **** 	  *--p = '\0';
 6265              		.loc 1 3180 8 view .LVU2017
 6266 0650 2368     		ldr	r3, [r4]
 6267              	.LVL534:
3180:src/keys.c    **** 	  *--p = '\0';
 6268              		.loc 1 3180 2 is_stmt 1 view .LVU2018
3180:src/keys.c    **** 	  *--p = '\0';
 6269              		.loc 1 3180 8 is_stmt 0 view .LVU2019
 6270 0652 03F5F663 		add	r3, r3, #1968
3180:src/keys.c    **** 	  *--p = '\0';
 6271              		.loc 1 3180 5 view .LVU2020
 6272 0656 9842     		cmp	r0, r3
 6273 0658 00F29B81 		bhi	.L869
 6274 065c 3268     		ldr	r2, [r6]
 6275              	.LBE1288:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 6276              		.loc 1 2979 7 view .LVU2021
 6277 065e 0025     		movs	r5, #0
 6278              	.LBB1289:
3180:src/keys.c    **** 	  *--p = '\0';
 6279              		.loc 1 3180 5 view .LVU2022
 6280 0660 4FF0300B 		mov	fp, #48
 6281 0664 25E5     		b	.L565
 6282              	.LVL535:
 6283              	.L1138:
3180:src/keys.c    **** 	  *--p = '\0';
 6284              		.loc 1 3180 5 view .LVU2023
 6285              	.LBE1289:
3200:src/keys.c    **** 	NonProgrammable = 0;
 6286              		.loc 1 3200 7 is_stmt 1 view .LVU2024
3200:src/keys.c    **** 	NonProgrammable = 0;
 6287              		.loc 1 3200 11 is_stmt 0 view .LVU2025
 6288 0666 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3200:src/keys.c    **** 	NonProgrammable = 0;
 6289              		.loc 1 3200 10 view .LVU2026
 6290 066a 5A06     		lsls	r2, r3, #25
 6291 066c 7FF55DAF 		bpl	.L888
 6292              	.LVL536:
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6293              		.loc 1 3201 2 is_stmt 1 view .LVU2027
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccGwaFaD.s 			page 200


 6294              		.loc 1 3201 18 is_stmt 0 view .LVU2028
 6295 0670 904B     		ldr	r3, .L1206+8
 6296 0672 1D60     		str	r5, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6297              		.loc 1 3202 2 is_stmt 1 view .LVU2029
 6298              	.L872:
3215:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6299              		.loc 1 3215 4 view .LVU2030
3215:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6300              		.loc 1 3215 11 is_stmt 0 view .LVU2031
 6301 0674 914A     		ldr	r2, .L1206+16
3216:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6302              		.loc 1 3216 25 view .LVU2032
 6303 0676 924B     		ldr	r3, .L1206+20
3215:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6304              		.loc 1 3215 11 view .LVU2033
 6305 0678 1060     		str	r0, [r2]
3216:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6306              		.loc 1 3216 4 is_stmt 1 view .LVU2034
3216:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6307              		.loc 1 3216 25 is_stmt 0 view .LVU2035
 6308 067a 0122     		movs	r2, #1
 6309 067c 914C     		ldr	r4, .L1206+24
 6310 067e 1A60     		str	r2, [r3]
3217:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 6311              		.loc 1 3217 4 is_stmt 1 view .LVU2036
 6312 0680 FFF7FEFF 		bl	finish_RPN
 6313              	.LVL537:
3218:src/keys.c    **** 	}
 6314              		.loc 1 3218 4 view .LVU2037
 6315 0684 3CE5     		b	.L878
 6316              	.LVL538:
 6317              	.L1135:
 6318              	.LBB1290:
 6319              	.LBB1223:
 6320              	.LBB697:
 6321              	.LBB682:
 734:src/keys.c    **** 	  case K00:
 6322              		.loc 1 734 4 view .LVU2038
 6323 0686 122C     		cmp	r4, #18
 6324 0688 0BD8     		bhi	.L831
 6325 068a DFE804F0 		tbb	[pc, r4]
 6326              	.L833:
 6327 068e C4       		.byte	(.L836-.L833)/2
 6328 068f B8       		.byte	(.L835-.L833)/2
 6329 0690 0A       		.byte	(.L831-.L833)/2
 6330 0691 8D       		.byte	(.L834-.L833)/2
 6331 0692 0A       		.byte	(.L831-.L833)/2
 6332 0693 0A       		.byte	(.L831-.L833)/2
 6333 0694 0A       		.byte	(.L831-.L833)/2
 6334 0695 0A       		.byte	(.L831-.L833)/2
 6335 0696 0A       		.byte	(.L831-.L833)/2
 6336 0697 0A       		.byte	(.L831-.L833)/2
 6337 0698 0A       		.byte	(.L831-.L833)/2
 6338 0699 0A       		.byte	(.L831-.L833)/2
 6339 069a 0A       		.byte	(.L831-.L833)/2
 6340 069b 0A       		.byte	(.L831-.L833)/2
ARM GAS  /tmp/ccGwaFaD.s 			page 201


 6341 069c 0A       		.byte	(.L831-.L833)/2
 6342 069d 0A       		.byte	(.L831-.L833)/2
 6343 069e 0A       		.byte	(.L831-.L833)/2
 6344 069f 0A       		.byte	(.L831-.L833)/2
 6345 06a0 78       		.byte	(.L832-.L833)/2
 6346 06a1 00       		.p2align 1
 6347              	.L831:
 764:src/keys.c    **** 	  }
 6348              		.loc 1 764 12 view .LVU2039
 769:src/keys.c    **** #ifdef DM42
 6349              		.loc 1 769 2 view .LVU2040
 6350 06a2 033C     		subs	r4, r4, #3
 6351 06a4 2A2C     		cmp	r4, #42
 6352 06a6 3FF6CBAE 		bhi	.L595
 6353 06aa 01A1     		adr	r1, .L843
 6354 06ac 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 6355              		.p2align 2
 6356              	.L843:
 6357 06b0 73070000 		.word	.L846+1
 6358 06b4 41040000 		.word	.L595+1
 6359 06b8 41040000 		.word	.L595+1
 6360 06bc 8B070000 		.word	.L841+1
 6361 06c0 8B070000 		.word	.L841+1
 6362 06c4 41040000 		.word	.L595+1
 6363 06c8 41040000 		.word	.L595+1
 6364 06cc 41040000 		.word	.L595+1
 6365 06d0 41040000 		.word	.L595+1
 6366 06d4 41040000 		.word	.L595+1
 6367 06d8 41040000 		.word	.L595+1
 6368 06dc 41040000 		.word	.L595+1
 6369 06e0 41040000 		.word	.L595+1
 6370 06e4 5D070000 		.word	.L845+1
 6371 06e8 41040000 		.word	.L595+1
 6372 06ec 8B070000 		.word	.L841+1
 6373 06f0 41040000 		.word	.L595+1
 6374 06f4 41040000 		.word	.L595+1
 6375 06f8 41040000 		.word	.L595+1
 6376 06fc 41040000 		.word	.L595+1
 6377 0700 41040000 		.word	.L595+1
 6378 0704 41040000 		.word	.L595+1
 6379 0708 41040000 		.word	.L595+1
 6380 070c 41040000 		.word	.L595+1
 6381 0710 41040000 		.word	.L595+1
 6382 0714 41040000 		.word	.L595+1
 6383 0718 41040000 		.word	.L595+1
 6384 071c 41040000 		.word	.L595+1
 6385 0720 41040000 		.word	.L595+1
 6386 0724 41040000 		.word	.L595+1
 6387 0728 41040000 		.word	.L595+1
 6388 072c 41040000 		.word	.L595+1
 6389 0730 41040000 		.word	.L595+1
 6390 0734 41040000 		.word	.L595+1
 6391 0738 41040000 		.word	.L595+1
 6392 073c 41040000 		.word	.L595+1
 6393 0740 41040000 		.word	.L595+1
 6394 0744 41040000 		.word	.L595+1
 6395 0748 41040000 		.word	.L595+1
ARM GAS  /tmp/ccGwaFaD.s 			page 202


 6396 074c 41040000 		.word	.L595+1
 6397 0750 41040000 		.word	.L595+1
 6398 0754 EB070000 		.word	.L844+1
 6399 0758 2D080000 		.word	.L842+1
 6400              		.p2align 1
 6401              	.L845:
 826:src/keys.c    **** 			return STATE_UNFINISHED;
 6402              		.loc 1 826 3 view .LVU2041
 826:src/keys.c    **** 			return STATE_UNFINISHED;
 6403              		.loc 1 826 6 is_stmt 0 view .LVU2042
 6404 075c 9906     		lsls	r1, r3, #26
 6405 075e 65D4     		bmi	.L842
 828:src/keys.c    **** 			return op;
 6406              		.loc 1 828 3 is_stmt 1 view .LVU2043
 828:src/keys.c    **** 			return op;
 6407              		.loc 1 828 6 is_stmt 0 view .LVU2044
 6408 0760 5306     		lsls	r3, r2, #25
 6409 0762 67D4     		bmi	.L851
 6410              	.LVL539:
 6411              	.L867:
 828:src/keys.c    **** 			return op;
 6412              		.loc 1 828 6 view .LVU2045
 6413              	.LBE682:
 6414              	.LBE697:
 6415              	.LBE1223:
 6416              	.LBE1290:
3177:src/keys.c    ****       else if (State2.alphas) {
 6417              		.loc 1 3177 2 is_stmt 1 view .LVU2046
 6418 0764 FFF7FEFF 		bl	delprog
 6419              	.LVL540:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 6420              		.loc 1 2979 7 is_stmt 0 view .LVU2047
 6421 0768 0025     		movs	r5, #0
 6422 076a 3268     		ldr	r2, [r6]
 6423 076c 4FF0300B 		mov	fp, #48
 6424 0770 9FE4     		b	.L565
 6425              	.LVL541:
 6426              	.L846:
 6427              	.LBB1291:
 6428              	.LBB1224:
 6429              	.LBB698:
 6430              	.LBB683:
 776:src/keys.c    **** #else
 6431              		.loc 1 776 3 is_stmt 1 view .LVU2048
 776:src/keys.c    **** #else
 6432              		.loc 1 776 10 is_stmt 0 view .LVU2049
 6433 0772 5146     		mov	r1, r10
 6434 0774 0220     		movs	r0, #2
 6435 0776 FFF7FEFF 		bl	check_f_key
 6436              	.LVL542:
 6437 077a 8346     		mov	fp, r0
 6438 077c 60E6     		b	.L595
 6439              	.L832:
 760:src/keys.c    **** 	    if (intltr(15)) {
 6440              		.loc 1 760 6 is_stmt 1 view .LVU2050
 6441              	.LVL543:
 761:src/keys.c    **** 	      return op_int;
ARM GAS  /tmp/ccGwaFaD.s 			page 203


 6442              		.loc 1 761 6 view .LVU2051
 761:src/keys.c    **** 	      return op_int;
 6443              		.loc 1 761 10 is_stmt 0 view .LVU2052
 6444 077e 0F20     		movs	r0, #15
 6445 0780 FFF7FEFF 		bl	intltr
 6446              	.LVL544:
 761:src/keys.c    **** 	      return op_int;
 6447              		.loc 1 761 9 view .LVU2053
 6448 0784 0028     		cmp	r0, #0
 6449 0786 41F0FE81 		bne	.L1139
 6450              	.LVL545:
 6451              	.L841:
 835:src/keys.c    **** 		break;
 6452              		.loc 1 835 3 is_stmt 1 view .LVU2054
 6453              	.LBB680:
 6454              	.LBI680:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 6455              		.loc 1 506 13 view .LVU2055
 6456              	.LBB681:
 507:src/keys.c    **** 		return;
 6457              		.loc 1 507 2 view .LVU2056
 507:src/keys.c    **** 		return;
 6458              		.loc 1 507 6 is_stmt 0 view .LVU2057
 6459 078a FFF7FEFF 		bl	is_bad_cmdline
 6460              	.LVL546:
 507:src/keys.c    **** 		return;
 6461              		.loc 1 507 5 view .LVU2058
 6462 078e 0446     		mov	r4, r0
 6463 0790 0028     		cmp	r0, #0
 6464 0792 41F00482 		bne	.L1140
 6465 0796 5FFA8AF0 		uxtb	r0, r10
 6466 079a FFF7FEFF 		bl	init_arg.part.0
 6467              	.LVL547:
 6468              	.LBE681:
 6469              	.LBE680:
 6470              	.LBE683:
 6471              	.LBE698:
 6472              	.LBE1224:
 6473              	.LBE1291:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 6474              		.loc 1 2979 7 view .LVU2059
 6475 079e 2546     		mov	r5, r4
 6476 07a0 3268     		ldr	r2, [r6]
 6477              	.LBB1292:
 6478              	.LBB1225:
 6479              	.LBB699:
 6480              	.LBB684:
 841:src/keys.c    **** }
 6481              		.loc 1 841 9 view .LVU2060
 6482 07a2 4FF0330B 		mov	fp, #51
 6483 07a6 84E4     		b	.L565
 6484              	.LVL548:
 6485              	.L834:
 752:src/keys.c    **** 	    if (intltr(12)) {
 6486              		.loc 1 752 6 is_stmt 1 view .LVU2061
 753:src/keys.c    **** 	      return op_int;
 6487              		.loc 1 753 6 view .LVU2062
ARM GAS  /tmp/ccGwaFaD.s 			page 204


 753:src/keys.c    **** 	      return op_int;
 6488              		.loc 1 753 10 is_stmt 0 view .LVU2063
 6489 07a8 0C20     		movs	r0, #12
 6490 07aa FFF7FEFF 		bl	intltr
 6491              	.LVL549:
 753:src/keys.c    **** 	      return op_int;
 6492              		.loc 1 753 9 view .LVU2064
 6493 07ae 0028     		cmp	r0, #0
 6494 07b0 DFD0     		beq	.L846
 6495              	.LVL550:
 753:src/keys.c    **** 	      return op_int;
 6496              		.loc 1 753 9 view .LVU2065
 6497              	.LBE684:
 6498              	.LBE699:
 6499              	.LBE1225:
 6500              	.LBE1292:
3200:src/keys.c    **** 	NonProgrammable = 0;
 6501              		.loc 1 3200 7 is_stmt 1 view .LVU2066
3200:src/keys.c    **** 	NonProgrammable = 0;
 6502              		.loc 1 3200 11 is_stmt 0 view .LVU2067
 6503 07b2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3200:src/keys.c    **** 	NonProgrammable = 0;
 6504              		.loc 1 3200 10 view .LVU2068
 6505 07b6 5D06     		lsls	r5, r3, #25
 6506 07b8 41F1CD81 		bpl	.L933
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6507              		.loc 1 3201 2 is_stmt 1 view .LVU2069
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6508              		.loc 1 3201 18 is_stmt 0 view .LVU2070
 6509 07bc 3D4B     		ldr	r3, .L1206+8
 6510 07be 0022     		movs	r2, #0
 6511              	.LBB1293:
 6512              	.LBB1226:
 6513              	.LBB700:
 6514              	.LBB685:
 754:src/keys.c    **** 	    }
 6515              		.loc 1 754 15 view .LVU2071
 6516 07c0 4FF0110B 		mov	fp, #17
 6517              	.LBE685:
 6518              	.LBE700:
 6519              	.LBE1226:
 6520              	.LBE1293:
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6521              		.loc 1 3201 18 view .LVU2072
 6522 07c4 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6523              		.loc 1 3202 2 is_stmt 1 view .LVU2073
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6524              		.loc 1 3202 32 is_stmt 0 view .LVU2074
 6525 07c6 5846     		mov	r0, fp
 6526              	.LVL551:
 6527              	.L874:
3206:src/keys.c    **** #endif
 6528              		.loc 1 3206 6 is_stmt 1 view .LVU2075
3208:src/keys.c    **** 	    xeq(c);
 6529              		.loc 1 3208 37 is_stmt 0 view .LVU2076
 6530 07c8 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
ARM GAS  /tmp/ccGwaFaD.s 			page 205


3206:src/keys.c    **** #endif
 6531              		.loc 1 3206 19 view .LVU2077
 6532 07cc 0123     		movs	r3, #1
3208:src/keys.c    **** 	    xeq(c);
 6533              		.loc 1 3208 37 view .LVU2078
 6534 07ce B5FA85F5 		clz	r5, r5
3206:src/keys.c    **** #endif
 6535              		.loc 1 3206 19 view .LVU2079
 6536 07d2 C9F80030 		str	r3, [r9]
3208:src/keys.c    **** 	    xeq(c);
 6537              		.loc 1 3208 6 is_stmt 1 view .LVU2080
3209:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6538              		.loc 1 3209 6 is_stmt 0 view .LVU2081
 6539 07d6 FFF7FEFF 		bl	xeq
 6540              	.LVL552:
3210:src/keys.c    **** 	  }
 6541              		.loc 1 3210 38 view .LVU2082
 6542 07da 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 6543 07de 3268     		ldr	r2, [r6]
3208:src/keys.c    **** 	    xeq(c);
 6544              		.loc 1 3208 37 view .LVU2083
 6545 07e0 6D09     		lsrs	r5, r5, #5
 6546              	.LVL553:
3209:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6547              		.loc 1 3209 6 is_stmt 1 view .LVU2084
3210:src/keys.c    **** 	  }
 6548              		.loc 1 3210 6 view .LVU2085
3210:src/keys.c    **** 	  }
 6549              		.loc 1 3210 20 is_stmt 0 view .LVU2086
 6550 07e2 0028     		cmp	r0, #0
 6551 07e4 08BF     		it	eq
 6552 07e6 0125     		moveq	r5, #1
 6553              	.LVL554:
3210:src/keys.c    **** 	  }
 6554              		.loc 1 3210 20 view .LVU2087
 6555 07e8 63E4     		b	.L565
 6556              	.LVL555:
 6557              	.L844:
 6558              	.LBB1294:
 6559              	.LBB1227:
 6560              	.LBB701:
 6561              	.LBB686:
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6562              		.loc 1 800 3 is_stmt 1 view .LVU2088
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6563              		.loc 1 800 7 is_stmt 0 view .LVU2089
 6564 07ea FFF7FEFF 		bl	is_bad_cmdline
 6565              	.LVL556:
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6566              		.loc 1 800 6 view .LVU2090
 6567 07ee 0446     		mov	r4, r0
 6568 07f0 0028     		cmp	r0, #0
 6569 07f2 01F03C83 		beq	.L849
 6570 07f6 3268     		ldr	r2, [r6]
 801:src/keys.c    **** 		process_cmdline_set_lift();
 6571              		.loc 1 801 11 view .LVU2091
 6572 07f8 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccGwaFaD.s 			page 206


 6573 07fc 59E4     		b	.L565
 6574              	.L835:
 744:src/keys.c    **** 	    if (intltr(11)) {
 6575              		.loc 1 744 6 is_stmt 1 view .LVU2092
 6576              	.LVL557:
 745:src/keys.c    **** 	      return op;
 6577              		.loc 1 745 6 view .LVU2093
 745:src/keys.c    **** 	      return op;
 6578              		.loc 1 745 10 is_stmt 0 view .LVU2094
 6579 07fe 0B20     		movs	r0, #11
 6580 0800 FFF7FEFF 		bl	intltr
 6581              	.LVL558:
 745:src/keys.c    **** 	      return op;
 6582              		.loc 1 745 9 view .LVU2095
 6583 0804 0028     		cmp	r0, #0
 6584 0806 41F04783 		bne	.L838
 749:src/keys.c    **** 	    }
 6585              		.loc 1 749 8 is_stmt 1 view .LVU2096
 749:src/keys.c    **** 	    }
 6586              		.loc 1 749 15 is_stmt 0 view .LVU2097
 6587 080a 1021     		movs	r1, #16
 6588 080c 0120     		movs	r0, #1
 6589 080e FFF7FEFF 		bl	check_f_key
 6590              	.LVL559:
 6591 0812 8346     		mov	fp, r0
 6592 0814 14E6     		b	.L595
 6593              	.LVL560:
 6594              	.L836:
 736:src/keys.c    **** 	    if (intltr(10)) {
 6595              		.loc 1 736 6 is_stmt 1 view .LVU2098
 737:src/keys.c    **** 	      return op;
 6596              		.loc 1 737 6 view .LVU2099
 737:src/keys.c    **** 	      return op;
 6597              		.loc 1 737 10 is_stmt 0 view .LVU2100
 6598 0816 0A20     		movs	r0, #10
 6599 0818 FFF7FEFF 		bl	intltr
 6600              	.LVL561:
 737:src/keys.c    **** 	      return op;
 6601              		.loc 1 737 9 view .LVU2101
 6602 081c 0028     		cmp	r0, #0
 6603 081e 41F00C83 		bne	.L837
 741:src/keys.c    **** 	    }
 6604              		.loc 1 741 8 is_stmt 1 view .LVU2102
 741:src/keys.c    **** 	    }
 6605              		.loc 1 741 15 is_stmt 0 view .LVU2103
 6606 0822 0F21     		movs	r1, #15
 6607 0824 FFF7FEFF 		bl	check_f_key
 6608              	.LVL562:
 6609 0828 8346     		mov	fp, r0
 6610 082a 09E6     		b	.L595
 6611              	.LVL563:
 6612              	.L842:
 741:src/keys.c    **** 	    }
 6613              		.loc 1 741 15 view .LVU2104
 6614 082c 3268     		ldr	r2, [r6]
 841:src/keys.c    **** }
 6615              		.loc 1 841 9 view .LVU2105
ARM GAS  /tmp/ccGwaFaD.s 			page 207


 6616 082e 4FF0330B 		mov	fp, #51
 6617 0832 3EE4     		b	.L565
 6618              	.L851:
 6619              	.LVL564:
 841:src/keys.c    **** }
 6620              		.loc 1 841 9 view .LVU2106
 6621              	.LBE686:
 6622              	.LBE701:
 6623              	.LBE1227:
 6624              	.LBE1294:
3164:src/keys.c    ****     case STATE_SST:
 6625              		.loc 1 3164 5 is_stmt 1 view .LVU2107
 6626 0834 AAF12B03 		sub	r3, r10, #43
 6627 0838 082B     		cmp	r3, #8
 6628 083a 17D8     		bhi	.L889
 6629 083c 01A2     		adr	r2, .L891
 6630 083e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6631 0842 00BF     		.p2align 2
 6632              	.L891:
 6633 0844 7F040000 		.word	.L866+1
 6634 0848 7F040000 		.word	.L866+1
 6635 084c 6D080000 		.word	.L889+1
 6636 0850 ED040000 		.word	.L775+1
 6637 0854 DB040000 		.word	.L771+1
 6638 0858 05050000 		.word	.L768+1
 6639 085c 97030000 		.word	.L575+1
 6640 0860 69080000 		.word	.L890+1
 6641 0864 69080000 		.word	.L890+1
 6642              		.p2align 1
 6643              	.L890:
 6644 0868 3268     		ldr	r2, [r6]
 6645 086a 22E4     		b	.L565
 6646              	.L889:
 6647 086c 114A     		ldr	r2, .L1206+8
 6648 086e 5046     		mov	r0, r10
 6649 0870 D7E6     		b	.L875
 6650              	.LVL565:
 6651              	.L870:
3192:src/keys.c    ****       break;
 6652              		.loc 1 3192 2 view .LVU2108
 6653 0872 5846     		mov	r0, fp
 6654 0874 FFF7FEFF 		bl	set_window
 6655              	.LVL566:
 6656 0878 3268     		ldr	r2, [r6]
 6657 087a 1AE4     		b	.L565
 6658              	.LVL567:
 6659              	.L544:
3015:src/keys.c    **** 	    DispMsg = TraceBuffer;
 6660              		.loc 1 3015 6 view .LVU2109
 6661 087c 124E     		ldr	r6, .L1206+28
 6662 087e 3146     		mov	r1, r6
 6663 0880 FFF7FEFF 		bl	prt
 6664              	.LVL568:
 6665 0884 2A46     		mov	r2, r5
 6666 0886 0146     		mov	r1, r0
 6667 0888 3046     		mov	r0, r6
 6668 088a FFF7FEFF 		bl	scopy_char
ARM GAS  /tmp/ccGwaFaD.s 			page 208


 6669              	.LVL569:
3016:src/keys.c    **** 	  }
 6670              		.loc 1 3016 6 view .LVU2110
3016:src/keys.c    **** 	  }
 6671              		.loc 1 3016 14 is_stmt 0 view .LVU2111
 6672 088e 0F4B     		ldr	r3, .L1206+32
 6673 0890 1E60     		str	r6, [r3]
 6674 0892 50E4     		b	.L545
 6675              	.LVL570:
 6676              	.L567:
3118:src/keys.c    **** 	}
 6677              		.loc 1 3118 4 is_stmt 1 view .LVU2112
 6678              		.loc 1 3241 1 is_stmt 0 view .LVU2113
 6679 0894 03B0     		add	sp, sp, #12
 6680              		.cfi_remember_state
 6681              		.cfi_def_cfa_offset 36
 6682              		@ sp needed
 6683 0896 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6684              		.cfi_restore 14
 6685              		.cfi_restore 11
 6686              		.cfi_restore 10
 6687              		.cfi_restore 9
 6688              		.cfi_restore 8
 6689              		.cfi_restore 7
 6690              		.cfi_restore 6
 6691              		.cfi_restore 5
 6692              		.cfi_restore 4
 6693              		.cfi_def_cfa_offset 0
3118:src/keys.c    **** 	}
 6694              		.loc 1 3118 4 view .LVU2114
 6695 089a FFF7FEBF 		b	finish_RPN
 6696              	.LVL571:
 6697              	.L1136:
 6698              		.cfi_restore_state
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6699              		.loc 1 3201 2 is_stmt 1 view .LVU2115
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6700              		.loc 1 3201 18 is_stmt 0 view .LVU2116
 6701 089e 054B     		ldr	r3, .L1206+8
 6702 08a0 0022     		movs	r2, #0
 6703 08a2 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6704              		.loc 1 3202 2 is_stmt 1 view .LVU2117
 6705 08a4 E6E6     		b	.L872
 6706              	.LVL572:
 6707              	.L938:
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6708              		.loc 1 3202 32 is_stmt 0 view .LVU2118
 6709 08a6 5846     		mov	r0, fp
 6710 08a8 8EE7     		b	.L874
 6711              	.L1207:
 6712 08aa 00BF     		.align	2
 6713              	.L1206:
 6714 08ac 04000000 		.word	.LC1
 6715 08b0 00000000 		.word	StateWhileOn
 6716 08b4 00000000 		.word	NonProgrammable
 6717 08b8 00000000 		.word	main_ram
ARM GAS  /tmp/ccGwaFaD.s 			page 209


 6718 08bc 00000000 		.word	OpCode
 6719 08c0 00000000 		.word	OpCodeDisplayPending
 6720 08c4 00000000 		.word	JustDisplayed
 6721 08c8 00000000 		.word	TraceBuffer
 6722 08cc 00000000 		.word	DispMsg
 6723              	.LVL573:
 6724              	.L1114:
 6725              	.LBB1295:
 6726              	.LBB1228:
2853:src/keys.c    **** 
 6727              		.loc 1 2853 3 is_stmt 1 view .LVU2119
 6728              	.LBB702:
 6729              	.LBI702:
2462:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6730              		.loc 1 2462 12 view .LVU2120
 6731              	.LBB703:
2464:src/keys.c    **** #ifdef DM42
 6732              		.loc 1 2464 2 view .LVU2121
 6733 08d0 E4B2     		uxtb	r4, r4
 6734              	.LVL574:
2464:src/keys.c    **** #ifdef DM42
 6735              		.loc 1 2464 2 is_stmt 0 view .LVU2122
 6736 08d2 A4F10E03 		sub	r3, r4, #14
 6737 08d6 192B     		cmp	r3, #25
 6738 08d8 0ED8     		bhi	.L585
 6739 08da DFE803F0 		tbb	[pc, r3]
 6740              	.L587:
 6741 08de 14       		.byte	(.L588-.L587)/2
 6742 08df 0D       		.byte	(.L585-.L587)/2
 6743 08e0 14       		.byte	(.L588-.L587)/2
 6744 08e1 0D       		.byte	(.L585-.L587)/2
 6745 08e2 0D       		.byte	(.L585-.L587)/2
 6746 08e3 0D       		.byte	(.L585-.L587)/2
 6747 08e4 0D       		.byte	(.L585-.L587)/2
 6748 08e5 0D       		.byte	(.L585-.L587)/2
 6749 08e6 0D       		.byte	(.L585-.L587)/2
 6750 08e7 0D       		.byte	(.L585-.L587)/2
 6751 08e8 0D       		.byte	(.L585-.L587)/2
 6752 08e9 0D       		.byte	(.L585-.L587)/2
 6753 08ea 0D       		.byte	(.L585-.L587)/2
 6754 08eb 0D       		.byte	(.L585-.L587)/2
 6755 08ec 0D       		.byte	(.L585-.L587)/2
 6756 08ed 0D       		.byte	(.L585-.L587)/2
 6757 08ee 0D       		.byte	(.L585-.L587)/2
 6758 08ef 0D       		.byte	(.L585-.L587)/2
 6759 08f0 22       		.byte	(.L586-.L587)/2
 6760 08f1 0D       		.byte	(.L585-.L587)/2
 6761 08f2 0D       		.byte	(.L585-.L587)/2
 6762 08f3 0D       		.byte	(.L585-.L587)/2
 6763 08f4 0D       		.byte	(.L585-.L587)/2
 6764 08f5 0D       		.byte	(.L585-.L587)/2
 6765 08f6 0D       		.byte	(.L585-.L587)/2
 6766 08f7 22       		.byte	(.L586-.L587)/2
 6767              		.p2align 1
 6768              	.L585:
 6769 08f8 3268     		ldr	r2, [r6]
 6770              	.LBE703:
ARM GAS  /tmp/ccGwaFaD.s 			page 210


 6771              	.LBE702:
2853:src/keys.c    **** 
 6772              		.loc 1 2853 10 view .LVU2123
 6773 08fa 4FF0330B 		mov	fp, #51
 6774 08fe FFF7D8BB 		b	.L565
 6775              	.L589:
 6776              	.LBB706:
 6777              	.LBB704:
2473:src/keys.c    **** 	  }
 6778              		.loc 1 2473 26 is_stmt 1 view .LVU2124
 6779 0902 FFF7FEFF 		bl	clpall
 6780              	.LVL575:
2473:src/keys.c    **** 	  }
 6781              		.loc 1 2473 36 view .LVU2125
 6782              	.L588:
2482:src/keys.c    **** 	  State2.digval = 0;
 6783              		.loc 1 2482 4 view .LVU2126
2482:src/keys.c    **** 	  State2.digval = 0;
 6784              		.loc 1 2482 19 is_stmt 0 view .LVU2127
 6785 0906 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6786 090a 3268     		ldr	r2, [r6]
 6787 090c 6FF30203 		bfc	r3, #0, #3
2483:src/keys.c    **** 	  break;
 6788              		.loc 1 2483 18 view .LVU2128
 6789 0910 0021     		movs	r1, #0
2482:src/keys.c    **** 	  State2.digval = 0;
 6790              		.loc 1 2482 19 view .LVU2129
 6791 0912 88F81430 		strb	r3, [r8, #20]
2483:src/keys.c    **** 	  break;
 6792              		.loc 1 2483 4 is_stmt 1 view .LVU2130
2483:src/keys.c    **** 	  break;
 6793              		.loc 1 2483 18 is_stmt 0 view .LVU2131
 6794 0916 A8F80810 		strh	r1, [r8, #8]	@ movhi
2484:src/keys.c    **** 	default:			// No state change
 6795              		.loc 1 2484 4 is_stmt 1 view .LVU2132
 6796              	.LBE704:
 6797              	.LBE706:
2853:src/keys.c    **** 
 6798              		.loc 1 2853 10 is_stmt 0 view .LVU2133
 6799 091a 4FF0330B 		mov	fp, #51
 6800              	.LBB707:
 6801              	.LBB705:
2484:src/keys.c    **** 	default:			// No state change
 6802              		.loc 1 2484 4 view .LVU2134
 6803 091e FFF7C8BB 		b	.L565
 6804              	.L586:
2469:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6805              		.loc 1 2469 4 is_stmt 1 view .LVU2135
2469:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6806              		.loc 1 2469 18 is_stmt 0 view .LVU2136
 6807 0922 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6808 0926 03F00703 		and	r3, r3, #7
 6809 092a 013B     		subs	r3, r3, #1
 6810 092c 032B     		cmp	r3, #3
 6811 092e EAD8     		bhi	.L588
 6812 0930 01A2     		adr	r2, .L590
 6813 0932 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  /tmp/ccGwaFaD.s 			page 211


 6814 0936 00BF     		.p2align 2
 6815              	.L590:
 6816 0938 55090000 		.word	.L593+1
 6817 093c 4F090000 		.word	.L592+1
 6818 0940 49090000 		.word	.L591+1
 6819 0944 03090000 		.word	.L589+1
 6820              		.p2align 1
 6821              	.L591:
2472:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6822              		.loc 1 2472 26 is_stmt 1 view .LVU2137
 6823 0948 FFF7FEFF 		bl	clrprog
 6824              	.LVL576:
2472:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6825              		.loc 1 2472 37 view .LVU2138
2472:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6826              		.loc 1 2472 4 is_stmt 0 view .LVU2139
 6827 094c DBE7     		b	.L588
 6828              	.L592:
2471:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6829              		.loc 1 2471 25 is_stmt 1 view .LVU2140
 6830 094e FFF7FEFF 		bl	reset
 6831              	.LVL577:
2471:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6832              		.loc 1 2471 34 view .LVU2141
2471:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6833              		.loc 1 2471 4 is_stmt 0 view .LVU2142
 6834 0952 D8E7     		b	.L588
 6835              	.L593:
2470:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6836              		.loc 1 2470 25 is_stmt 1 view .LVU2143
 6837 0954 FFF7FEFF 		bl	clrall
 6838              	.LVL578:
2470:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6839              		.loc 1 2470 35 view .LVU2144
2470:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6840              		.loc 1 2470 4 is_stmt 0 view .LVU2145
 6841 0958 D5E7     		b	.L588
 6842              	.LVL579:
 6843              	.L1112:
2470:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6844              		.loc 1 2470 4 view .LVU2146
 6845              	.LBE705:
 6846              	.LBE707:
2827:src/keys.c    **** #else
 6847              		.loc 1 2827 47 view .LVU2147
 6848 095a DFF89083 		ldr	r8, .L1208+32
 6849 095e 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
2827:src/keys.c    **** #else
 6850              		.loc 1 2827 36 view .LVU2148
 6851 0962 4AEA0302 		orr	r2, r10, r3
 6852 0966 12F0FF0F 		tst	r2, #255
 6853 096a 7FF41FAC 		bne	.L577
2827:src/keys.c    **** #else
 6854              		.loc 1 2827 76 view .LVU2149
 6855 096e D74A     		ldr	r2, .L1208
 6856 0970 D8F81430 		ldr	r3, [r8, #20]
 6857 0974 1A42     		tst	r2, r3
ARM GAS  /tmp/ccGwaFaD.s 			page 212


 6858 0976 7FF421AC 		bne	.L583
2832:src/keys.c    ****       return STATE_UNFINISHED;
 6859              		.loc 1 2832 7 is_stmt 1 view .LVU2150
 6860 097a FFF7FEFF 		bl	soft_init_state
 6861              	.LVL580:
2833:src/keys.c    ****     }
 6862              		.loc 1 2833 7 view .LVU2151
2833:src/keys.c    ****     }
 6863              		.loc 1 2833 14 is_stmt 0 view .LVU2152
 6864 097e 4FF0330B 		mov	fp, #51
 6865 0982 3268     		ldr	r2, [r6]
 6866 0984 FFF795BB 		b	.L565
 6867              	.L1115:
2856:src/keys.c    **** 
 6868              		.loc 1 2856 3 is_stmt 1 view .LVU2153
2856:src/keys.c    **** 
 6869              		.loc 1 2856 10 is_stmt 0 view .LVU2154
 6870 0988 E0B2     		uxtb	r0, r4
 6871 098a FFF7FEFF 		bl	process_arg
 6872              	.LVL581:
 6873 098e 8346     		mov	fp, r0
 6874 0990 56E5     		b	.L595
 6875              	.LVL582:
 6876              	.L869:
2856:src/keys.c    **** 
 6877              		.loc 1 2856 10 view .LVU2155
 6878              	.LBE1228:
 6879              	.LBE1295:
 6880              	.LBB1296:
3181:src/keys.c    ****       }
 6881              		.loc 1 3181 4 is_stmt 1 view .LVU2156
3181:src/keys.c    ****       }
 6882              		.loc 1 3181 9 is_stmt 0 view .LVU2157
 6883 0992 0025     		movs	r5, #0
 6884 0994 00F8015C 		strb	r5, [r0, #-1]
 6885 0998 3268     		ldr	r2, [r6]
 6886 099a 4FF0300B 		mov	fp, #48
 6887 099e FFF788BB 		b	.L565
 6888              	.LVL583:
 6889              	.L1118:
3181:src/keys.c    ****       }
 6890              		.loc 1 3181 9 view .LVU2158
 6891              	.LBE1296:
 6892              	.LBB1297:
 6893              	.LBB1229:
2865:src/keys.c    **** 
 6894              		.loc 1 2865 3 is_stmt 1 view .LVU2159
 6895              	.LBB708:
 6896              	.LBI708:
1928:src/keys.c    **** 	int r = State2.test;
 6897              		.loc 1 1928 12 view .LVU2160
 6898              	.LBB709:
1929:src/keys.c    **** 	int cmpx = State2.cmplx;
 6899              		.loc 1 1929 2 view .LVU2161
1930:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6900              		.loc 1 1930 2 view .LVU2162
 6901              	.LBB710:
ARM GAS  /tmp/ccGwaFaD.s 			page 213


 6902              	.LBB711:
 6903              	.LBB712:
 6904              	.LBB713:
 133:src/keys.c    **** }
 6905              		.loc 1 133 23 is_stmt 0 view .LVU2163
 6906 09a2 CB4A     		ldr	r2, .L1208+4
 6907              	.LBE713:
 6908              	.LBE712:
 224:src/keys.c    **** }
 6909              		.loc 1 224 28 view .LVU2164
 6910 09a4 DFF82CC3 		ldr	ip, .L1208+8
 6911              	.LBB717:
 6912              	.LBB714:
 133:src/keys.c    **** }
 6913              		.loc 1 133 23 view .LVU2165
 6914 09a8 E4B2     		uxtb	r4, r4
 6915              	.LVL584:
 133:src/keys.c    **** }
 6916              		.loc 1 133 23 view .LVU2166
 6917              	.LBE714:
 6918              	.LBE717:
 6919              	.LBE711:
 6920              	.LBE710:
1932:src/keys.c    **** 
 6921              		.loc 1 1932 44 view .LVU2167
 6922 09aa 11F0020F 		tst	r1, #2
 6923              	.LBB722:
 6924              	.LBB720:
 6925              	.LBB718:
 6926              	.LBB715:
 133:src/keys.c    **** }
 6927              		.loc 1 133 23 view .LVU2168
 6928 09ae 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 6929              	.LBE715:
 6930              	.LBE718:
 224:src/keys.c    **** }
 6931              		.loc 1 224 28 view .LVU2169
 6932 09b0 1CF802C0 		ldrb	ip, [ip, r2]	@ zero_extendqisi2
 6933              	.LBE720:
 6934              	.LBE722:
1930:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6935              		.loc 1 1930 19 view .LVU2170
 6936 09b4 C1F3400E 		ubfx	lr, r1, #1, #1
 6937              	.LVL585:
1931:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 6938              		.loc 1 1931 2 is_stmt 1 view .LVU2171
 6939              	.LBB723:
 6940              	.LBI710:
 200:src/keys.c    **** {
 6941              		.loc 1 200 14 view .LVU2172
 6942              	.LBB721:
 202:src/keys.c    ****     // K00 - K05
 6943              		.loc 1 202 3 view .LVU2173
 224:src/keys.c    **** }
 6944              		.loc 1 224 3 view .LVU2174
 6945              	.LBB719:
 6946              	.LBI712:
ARM GAS  /tmp/ccGwaFaD.s 			page 214


 121:src/keys.c    **** {
 6947              		.loc 1 121 12 view .LVU2175
 6948              	.LBB716:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6949              		.loc 1 123 2 view .LVU2176
 133:src/keys.c    **** }
 6950              		.loc 1 133 2 view .LVU2177
 133:src/keys.c    **** }
 6951              		.loc 1 133 2 is_stmt 0 view .LVU2178
 6952              	.LBE716:
 6953              	.LBE719:
 6954              	.LBE721:
 6955              	.LBE723:
1931:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 6956              		.loc 1 1931 15 view .LVU2179
 6957 09b8 2CF08002 		bic	r2, ip, #128
 6958              	.LVL586:
1932:src/keys.c    **** 
 6959              		.loc 1 1932 2 is_stmt 1 view .LVU2180
1932:src/keys.c    **** 
 6960              		.loc 1 1932 44 is_stmt 0 view .LVU2181
 6961 09bc 00F0A980 		beq	.L1141
 6962              	.LVL587:
1934:src/keys.c    **** 	State2.cmplx = 0;
 6963              		.loc 1 1934 2 is_stmt 1 view .LVU2182
1935:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 6964              		.loc 1 1935 15 is_stmt 0 view .LVU2183
 6965 09c0 60F34101 		bfi	r1, r0, #1, #1
1936:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 6966              		.loc 1 1936 5 view .LVU2184
 6967 09c4 642A     		cmp	r2, #100
1934:src/keys.c    **** 	State2.cmplx = 0;
 6968              		.loc 1 1934 14 view .LVU2185
 6969 09c6 4FF00700 		mov	r0, #7
1935:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 6970              		.loc 1 1935 15 view .LVU2186
 6971 09ca 88F81510 		strb	r1, [r8, #21]
1934:src/keys.c    **** 	State2.cmplx = 0;
 6972              		.loc 1 1934 14 view .LVU2187
 6973 09ce 88F80F00 		strb	r0, [r8, #15]
1935:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 6974              		.loc 1 1935 2 is_stmt 1 view .LVU2188
1936:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 6975              		.loc 1 1936 2 view .LVU2189
1936:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 6976              		.loc 1 1936 5 is_stmt 0 view .LVU2190
 6977 09d2 00F07C84 		beq	.L941
1932:src/keys.c    **** 
 6978              		.loc 1 1932 44 view .LVU2191
 6979 09d6 4FF0340A 		mov	r10, #52
 6980              	.LVL588:
 6981              	.L898:
1937:src/keys.c    **** 		// Lettered register
 6982              		.loc 1 1937 5 view .LVU2192
 6983 09da 7F2A     		cmp	r2, #127
1932:src/keys.c    **** 
 6984              		.loc 1 1932 60 view .LVU2193
ARM GAS  /tmp/ccGwaFaD.s 			page 215


 6985 09dc DA44     		add	r10, r10, fp
1937:src/keys.c    **** 		// Lettered register
 6986              		.loc 1 1937 2 is_stmt 1 view .LVU2194
1937:src/keys.c    **** 		// Lettered register
 6987              		.loc 1 1937 5 is_stmt 0 view .LVU2195
 6988 09de 00F01381 		beq	.L627
 6989              	.LVL589:
1937:src/keys.c    **** 		// Lettered register
 6990              		.loc 1 1937 18 view .LVU2196
 6991 09e2 632A     		cmp	r2, #99
 6992 09e4 40F23981 		bls	.L628
1937:src/keys.c    **** 		// Lettered register
 6993              		.loc 1 1937 37 view .LVU2197
 6994 09e8 6F2A     		cmp	r2, #111
 6995 09ea 00F20D81 		bhi	.L627
1939:src/keys.c    **** 			if (n == regI_idx)
 6996              		.loc 1 1939 3 is_stmt 1 view .LVU2198
1939:src/keys.c    **** 			if (n == regI_idx)
 6997              		.loc 1 1939 6 is_stmt 0 view .LVU2199
 6998 09ee BEF1000F 		cmp	lr, #0
 6999 09f2 00F02082 		beq	.L629
1939:src/keys.c    **** 			if (n == regI_idx)
 7000              		.loc 1 1939 12 view .LVU2200
 7001 09f6 1CF0010F 		tst	ip, #1
 7002 09fa 00F01C82 		beq	.L629
1940:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7003              		.loc 1 1940 4 is_stmt 1 view .LVU2201
1940:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7004              		.loc 1 1940 7 is_stmt 0 view .LVU2202
 7005 09fe 6D2A     		cmp	r2, #109
 7006 0a00 40F00F81 		bne	.L630
1941:src/keys.c    **** 			// Disallow odd complex registers > A
 7007              		.loc 1 1941 5 is_stmt 1 view .LVU2203
1941:src/keys.c    **** 			// Disallow odd complex registers > A
 7008              		.loc 1 1941 30 is_stmt 0 view .LVU2204
 7009 0a04 0BF1290B 		add	fp, fp, #41
 7010              	.LVL590:
1941:src/keys.c    **** 			// Disallow odd complex registers > A
 7011              		.loc 1 1941 30 view .LVU2205
 7012 0a08 1AE5     		b	.L595
 7013              	.LVL591:
 7014              	.L1116:
1941:src/keys.c    **** 			// Disallow odd complex registers > A
 7015              		.loc 1 1941 30 view .LVU2206
 7016              	.LBE709:
 7017              	.LBE708:
2859:src/keys.c    **** 
 7018              		.loc 1 2859 3 is_stmt 1 view .LVU2207
 7019              	.LBB738:
 7020              	.LBI738:
1336:src/keys.c    **** 	int pc = -1;
 7021              		.loc 1 1336 12 view .LVU2208
 7022              	.LBB739:
1337:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7023              		.loc 1 1337 2 view .LVU2209
1338:src/keys.c    **** 
 7024              		.loc 1 1338 2 view .LVU2210
ARM GAS  /tmp/ccGwaFaD.s 			page 216


 7025              	.LBB740:
 7026              	.LBI740:
 200:src/keys.c    **** {
 7027              		.loc 1 200 14 view .LVU2211
 7028              	.LBB741:
 202:src/keys.c    ****     // K00 - K05
 7029              		.loc 1 202 3 view .LVU2212
 224:src/keys.c    **** }
 7030              		.loc 1 224 3 view .LVU2213
 7031              	.LBB742:
 7032              	.LBI742:
 121:src/keys.c    **** {
 7033              		.loc 1 121 12 view .LVU2214
 7034              	.LBB743:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7035              		.loc 1 123 2 view .LVU2215
 133:src/keys.c    **** }
 7036              		.loc 1 133 2 view .LVU2216
 133:src/keys.c    **** }
 7037              		.loc 1 133 23 is_stmt 0 view .LVU2217
 7038 0a0a B14B     		ldr	r3, .L1208+4
 7039              	.LBE743:
 7040              	.LBE742:
 224:src/keys.c    **** }
 7041              		.loc 1 224 28 view .LVU2218
 7042 0a0c B14A     		ldr	r2, .L1208+8
 7043 0a0e E4B2     		uxtb	r4, r4
 7044              	.LVL592:
 7045              	.LBB745:
 7046              	.LBB744:
 133:src/keys.c    **** }
 7047              		.loc 1 133 23 view .LVU2219
 7048 0a10 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7049              	.LBE744:
 7050              	.LBE745:
 224:src/keys.c    **** }
 7051              		.loc 1 224 28 view .LVU2220
 7052 0a12 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7053              	.LVL593:
 224:src/keys.c    **** }
 7054              		.loc 1 224 28 view .LVU2221
 7055              	.LBE741:
 7056              	.LBE740:
1340:src/keys.c    **** 		// Digit 0 - 9
 7057              		.loc 1 1340 2 is_stmt 1 view .LVU2222
1340:src/keys.c    **** 		// Digit 0 - 9
 7058              		.loc 1 1340 5 is_stmt 0 view .LVU2223
 7059 0a14 0928     		cmp	r0, #9
 7060 0a16 40F21781 		bls	.L1142
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7061              		.loc 1 1345 7 is_stmt 1 view .LVU2224
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7062              		.loc 1 1345 18 is_stmt 0 view .LVU2225
 7063 0a1a 20F08000 		bic	r0, r0, #128
 7064              	.LVL594:
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7065              		.loc 1 1345 10 view .LVU2226
ARM GAS  /tmp/ccGwaFaD.s 			page 217


 7066 0a1e 6428     		cmp	r0, #100
 7067 0a20 00F0F381 		beq	.L1143
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7068              		.loc 1 1346 7 is_stmt 1 view .LVU2227
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7069              		.loc 1 1346 10 is_stmt 0 view .LVU2228
 7070 0a24 6528     		cmp	r0, #101
 7071 0a26 00F0FE81 		beq	.L1144
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7072              		.loc 1 1347 7 is_stmt 1 view .LVU2229
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7073              		.loc 1 1347 10 is_stmt 0 view .LVU2230
 7074 0a2a 6628     		cmp	r0, #102
 7075 0a2c 00F01882 		beq	.L1145
1348:src/keys.c    **** #endif
 7076              		.loc 1 1348 7 is_stmt 1 view .LVU2231
1348:src/keys.c    **** #endif
 7077              		.loc 1 1348 10 is_stmt 0 view .LVU2232
 7078 0a30 6728     		cmp	r0, #103
 7079 0a32 00F01E84 		beq	.L1146
1350:src/keys.c    **** 		// A - D
 7080              		.loc 1 1350 7 is_stmt 1 view .LVU2233
1350:src/keys.c    **** 		// A - D
 7081              		.loc 1 1350 10 is_stmt 0 view .LVU2234
 7082 0a36 032C     		cmp	r4, #3
 7083 0a38 40F22384 		bls	.L1147
1355:src/keys.c    **** 		// .
 7084              		.loc 1 1355 7 is_stmt 1 view .LVU2235
1355:src/keys.c    **** 		// .
 7085              		.loc 1 1355 10 is_stmt 0 view .LVU2236
 7086 0a3c 262C     		cmp	r4, #38
 7087 0a3e 00F05584 		beq	.L1148
1360:src/keys.c    **** 		// ENTER - short circuit processing
 7088              		.loc 1 1360 7 is_stmt 1 view .LVU2237
1360:src/keys.c    **** 		// ENTER - short circuit processing
 7089              		.loc 1 1360 10 is_stmt 0 view .LVU2238
 7090 0a42 0C2C     		cmp	r4, #12
 7091 0a44 00F06581 		beq	.L1149
1364:src/keys.c    **** 		// backspace
 7092              		.loc 1 1364 7 is_stmt 1 view .LVU2239
1364:src/keys.c    **** 		// backspace
 7093              		.loc 1 1364 10 is_stmt 0 view .LVU2240
 7094 0a48 102C     		cmp	r4, #16
 7095 0a4a 00F05384 		beq	.L1150
1373:src/keys.c    **** 		// up
 7096              		.loc 1 1373 7 is_stmt 1 view .LVU2241
1373:src/keys.c    **** 		// up
 7097              		.loc 1 1373 10 is_stmt 0 view .LVU2242
 7098 0a4e 122C     		cmp	r4, #18
 7099 0a50 00F00E87 		beq	.L1151
1383:src/keys.c    **** 		// down
 7100              		.loc 1 1383 7 is_stmt 1 view .LVU2243
1383:src/keys.c    **** 		// down
 7101              		.loc 1 1383 10 is_stmt 0 view .LVU2244
 7102 0a54 182C     		cmp	r4, #24
 7103 0a56 00F04B87 		beq	.L614
 7104 0a5a 3268     		ldr	r2, [r6]
ARM GAS  /tmp/ccGwaFaD.s 			page 218


 7105              	.LVL595:
1383:src/keys.c    **** 		// down
 7106              		.loc 1 1383 10 view .LVU2245
 7107              	.LBE739:
 7108              	.LBE738:
2859:src/keys.c    **** 
 7109              		.loc 1 2859 10 view .LVU2246
 7110 0a5c 4FF0330B 		mov	fp, #51
 7111 0a60 FFF727BB 		b	.L565
 7112              	.LVL596:
 7113              	.L857:
2859:src/keys.c    **** 
 7114              		.loc 1 2859 10 view .LVU2247
 7115              	.LBE1229:
 7116              	.LBE1297:
 7117              	.LBB1298:
3153:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7118              		.loc 1 3153 4 is_stmt 1 view .LVU2248
 7119              	.LBB1274:
 7120              	.LBI1274:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 7121              		.loc 1 506 13 view .LVU2249
 7122              	.LBB1275:
 507:src/keys.c    **** 		return;
 7123              		.loc 1 507 2 view .LVU2250
 507:src/keys.c    **** 		return;
 7124              		.loc 1 507 6 is_stmt 0 view .LVU2251
 7125 0a64 FFF7FEFF 		bl	is_bad_cmdline
 7126              	.LVL597:
 507:src/keys.c    **** 		return;
 7127              		.loc 1 507 5 view .LVU2252
 7128 0a68 0546     		mov	r5, r0
 7129 0a6a 0028     		cmp	r0, #0
 7130 0a6c 40F0E680 		bne	.L1152
 7131 0a70 2046     		mov	r0, r4
 7132 0a72 FFF7FEFF 		bl	init_arg.part.0
 7133              	.LVL598:
 7134              	.LBE1275:
 7135              	.LBE1274:
3154:src/keys.c    **** 	}
 7136              		.loc 1 3154 6 view .LVU2253
 7137 0a76 4FF0330B 		mov	fp, #51
 7138 0a7a 3268     		ldr	r2, [r6]
 7139 0a7c FFF719BB 		b	.L565
 7140              	.LVL599:
 7141              	.L939:
3154:src/keys.c    **** 	}
 7142              		.loc 1 3154 6 view .LVU2254
 7143              	.LBE1298:
 7144              	.LBB1299:
 7145 0a80 9B46     		mov	fp, r3
 7146              	.LVL600:
3154:src/keys.c    **** 	}
 7147              		.loc 1 3154 6 view .LVU2255
 7148 0a82 FFF737BB 		b	.L880
 7149              	.LVL601:
 7150              	.L1117:
ARM GAS  /tmp/ccGwaFaD.s 			page 219


3154:src/keys.c    **** 	}
 7151              		.loc 1 3154 6 view .LVU2256
 7152              	.LBE1299:
 7153              	.LBB1300:
 7154              	.LBB1230:
2862:src/keys.c    **** 
 7155              		.loc 1 2862 3 is_stmt 1 view .LVU2257
 7156              	.LBB759:
 7157              	.LBB760:
1238:src/keys.c    **** 	State2.dot = 0;
 7158              		.loc 1 1238 15 is_stmt 0 view .LVU2258
 7159 0a86 21F06203 		bic	r3, r1, #98
 7160              	.LBE760:
 7161              	.LBE759:
2862:src/keys.c    **** 
 7162              		.loc 1 2862 10 view .LVU2259
 7163 0a8a E4B2     		uxtb	r4, r4
 7164              	.LVL602:
 7165              	.LBB774:
 7166              	.LBI759:
1228:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 7167              		.loc 1 1228 12 is_stmt 1 view .LVU2260
 7168              	.LBB770:
1229:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 7169              		.loc 1 1229 2 view .LVU2261
1234:src/keys.c    **** 	int f = State2.dot;
 7170              		.loc 1 1234 2 view .LVU2262
1238:src/keys.c    **** 	State2.dot = 0;
 7171              		.loc 1 1238 15 is_stmt 0 view .LVU2263
 7172 0a8c 88F81530 		strb	r3, [r8, #21]
1234:src/keys.c    **** 	int f = State2.dot;
 7173              		.loc 1 1234 20 view .LVU2264
 7174 0a90 C1F3400A 		ubfx	r10, r1, #1, #1
 7175              	.LVL603:
1235:src/keys.c    **** 
 7176              		.loc 1 1235 2 is_stmt 1 view .LVU2265
1235:src/keys.c    **** 
 7177              		.loc 1 1235 16 is_stmt 0 view .LVU2266
 7178 0a94 C1F38019 		ubfx	r9, r1, #6, #1
 7179              	.LVL604:
1237:src/keys.c    **** 	State2.cmplx = 0;
 7180              		.loc 1 1237 2 is_stmt 1 view .LVU2267
1238:src/keys.c    **** 	State2.dot = 0;
 7181              		.loc 1 1238 2 view .LVU2268
1239:src/keys.c    **** #ifdef DM42
 7182              		.loc 1 1239 2 view .LVU2269
1241:src/keys.c    **** #endif
 7183              		.loc 1 1241 2 view .LVU2270
 7184              	.LBB761:
 7185              	.LBI761:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7186              		.loc 1 104 13 view .LVU2271
 7187              	.LBE761:
 7188              	.LBE770:
 7189              	.LBE774:
 7190              	.LBE1230:
 7191              	.LBE1300:
ARM GAS  /tmp/ccGwaFaD.s 			page 220


 105:src/keys.c    **** }
 7192              		.loc 1 105 2 view .LVU2272
 7193              	.LBB1301:
 7194              	.LBB1231:
 7195              	.LBB775:
 7196              	.LBB771:
 7197              	.LBB768:
 7198              	.LBB762:
 7199              	.LBI762:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7200              		.loc 1 94 20 view .LVU2273
 7201              	.LBB763:
  95:src/keys.c    **** 	State2.shifts = shift;
 7202              		.loc 1 95 2 view .LVU2274
 7203              	.LBB764:
 7204              	.LBI764:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7205              		.loc 1 86 13 view .LVU2275
 7206              	.LBB765:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7207              		.loc 1 87 2 view .LVU2276
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7208              		.loc 1 87 18 is_stmt 0 view .LVU2277
 7209 0a98 FFF7FEFF 		bl	shift_down
 7210              	.LVL605:
  88:src/keys.c    **** }
 7211              		.loc 1 88 2 is_stmt 1 view .LVU2278
 7212              	.LBE765:
 7213              	.LBE764:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7214              		.loc 1 96 2 view .LVU2279
 7215              	.LBE763:
 7216              	.LBE762:
 7217              	.LBE768:
1243:src/keys.c    **** 
 7218              		.loc 1 1243 2 is_stmt 0 view .LVU2280
 7219 0a9c 292C     		cmp	r4, #41
 7220              	.LBB769:
 7221              	.LBB767:
 7222              	.LBB766:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7223              		.loc 1 96 16 view .LVU2281
 7224 0a9e 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 7225              		.loc 1 98 2 is_stmt 1 view .LVU2282
 7226              	.LVL606:
  98:src/keys.c    **** }
 7227              		.loc 1 98 2 is_stmt 0 view .LVU2283
 7228              	.LBE766:
 7229              	.LBE767:
 7230              	.LBE769:
1243:src/keys.c    **** 
 7231              		.loc 1 1243 2 is_stmt 1 view .LVU2284
 7232 0aa2 00F0E383 		beq	.L616
 7233 0aa6 16D8     		bhi	.L617
 7234 0aa8 013C     		subs	r4, r4, #1
 7235              	.LVL607:
ARM GAS  /tmp/ccGwaFaD.s 			page 221


1243:src/keys.c    **** 
 7236              		.loc 1 1243 2 is_stmt 0 view .LVU2285
 7237 0aaa E3B2     		uxtb	r3, r4
 7238 0aac 022B     		cmp	r3, #2
 7239 0aae 00F21F81 		bhi	.L618
1248:src/keys.c    **** 
 7240              		.loc 1 1248 3 is_stmt 1 view .LVU2286
1248:src/keys.c    **** 
 7241              		.loc 1 1248 54 is_stmt 0 view .LVU2287
 7242 0ab2 894A     		ldr	r2, .L1208+12
 7243 0ab4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 7244 0ab8 02EB4404 		add	r4, r2, r4, lsl #1
 7245              	.LVL608:
1248:src/keys.c    **** 
 7246              		.loc 1 1248 27 view .LVU2288
 7247 0abc BAF1000F 		cmp	r10, #0
1248:src/keys.c    **** 
 7248              		.loc 1 1248 54 view .LVU2289
 7249 0ac0 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1248:src/keys.c    **** 
 7250              		.loc 1 1248 27 view .LVU2290
 7251 0ac4 14BF     		ite	ne
 7252 0ac6 4FF4A062 		movne	r2, #1280
 7253 0aca 4FF40072 		moveq	r2, #512
1248:src/keys.c    **** 
 7254              		.loc 1 1248 37 view .LVU2291
 7255 0ace 4BEA020B 		orr	fp, fp, r2
 7256 0ad2 5846     		mov	r0, fp
 7257 0ad4 26E5     		b	.L622
 7258              	.LVL609:
 7259              	.L617:
1243:src/keys.c    **** 
 7260              		.loc 1 1243 2 view .LVU2292
 7261 0ad6 2D2C     		cmp	r4, #45
 7262 0ad8 40F00A81 		bne	.L618
1251:src/keys.c    **** 		goto stay;
 7263              		.loc 1 1251 3 is_stmt 1 view .LVU2293
 7264 0adc 8AF0010A 		eor	r10, r10, #1
 7265              	.LVL610:
1252:src/keys.c    **** 
 7266              		.loc 1 1252 3 view .LVU2294
 7267              	.L623:
1265:src/keys.c    **** 		State2.cmplx = cmplx;
 7268              		.loc 1 1265 3 view .LVU2295
1266:src/keys.c    **** 		State2.dot = f;
 7269              		.loc 1 1266 3 view .LVU2296
1267:src/keys.c    **** 		break;
 7270              		.loc 1 1267 3 view .LVU2297
1266:src/keys.c    **** 		State2.dot = f;
 7271              		.loc 1 1266 16 is_stmt 0 view .LVU2298
 7272 0ae0 4FEA4A03 		lsl	r3, r10, #1
 7273 0ae4 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 7274 0ae8 3268     		ldr	r2, [r6]
 7275 0aea 43F02003 		orr	r3, r3, #32
 7276 0aee 43EA8913 		orr	r3, r3, r9, lsl #6
 7277 0af2 03F06203 		and	r3, r3, #98
 7278 0af6 21F06201 		bic	r1, r1, #98
ARM GAS  /tmp/ccGwaFaD.s 			page 222


 7279 0afa 0B43     		orrs	r3, r3, r1
 7280 0afc 88F81530 		strb	r3, [r8, #21]
1268:src/keys.c    **** 
 7281              		.loc 1 1268 3 is_stmt 1 view .LVU2299
1273:src/keys.c    **** }
 7282              		.loc 1 1273 9 is_stmt 0 view .LVU2300
 7283 0b00 4FF0330B 		mov	fp, #51
1268:src/keys.c    **** 
 7284              		.loc 1 1268 3 view .LVU2301
 7285 0b04 FFF7D5BA 		b	.L565
 7286              	.LVL611:
 7287              	.L1113:
1268:src/keys.c    **** 
 7288              		.loc 1 1268 3 view .LVU2302
 7289              	.LBE771:
 7290              	.LBE775:
2839:src/keys.c    **** 		return STATE_IGNORE;
 7291              		.loc 1 2839 3 is_stmt 1 view .LVU2303
2839:src/keys.c    **** 		return STATE_IGNORE;
 7292              		.loc 1 2839 15 is_stmt 0 view .LVU2304
 7293 0b08 1D60     		str	r5, [r3]
2840:src/keys.c    **** 	}
 7294              		.loc 1 2840 3 is_stmt 1 view .LVU2305
 7295              	.LVL612:
2840:src/keys.c    **** 	}
 7296              		.loc 1 2840 3 is_stmt 0 view .LVU2306
 7297              	.LBE1231:
 7298              	.LBE1301:
3226:src/keys.c    **** #ifndef CONSOLE
 7299              		.loc 1 3226 3 is_stmt 1 view .LVU2307
 7300              	.LBB1302:
 7301              	.LBB1232:
2840:src/keys.c    **** 	}
 7302              		.loc 1 2840 10 is_stmt 0 view .LVU2308
 7303 0b0a 4FF0320B 		mov	fp, #50
 7304 0b0e FFF7D3BA 		b	.L581
 7305              	.LVL613:
 7306              	.L1141:
 7307              	.LBB776:
 7308              	.LBB728:
1934:src/keys.c    **** 	State2.cmplx = 0;
 7309              		.loc 1 1934 2 is_stmt 1 view .LVU2309
1935:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7310              		.loc 1 1935 15 is_stmt 0 view .LVU2310
 7311 0b12 6EF34101 		bfi	r1, lr, #1, #1
1934:src/keys.c    **** 	State2.cmplx = 0;
 7312              		.loc 1 1934 14 view .LVU2311
 7313 0b16 0720     		movs	r0, #7
1936:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7314              		.loc 1 1936 5 view .LVU2312
 7315 0b18 642A     		cmp	r2, #100
1935:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7316              		.loc 1 1935 15 view .LVU2313
 7317 0b1a 88F81510 		strb	r1, [r8, #21]
1934:src/keys.c    **** 	State2.cmplx = 0;
 7318              		.loc 1 1934 14 view .LVU2314
 7319 0b1e 88F80F00 		strb	r0, [r8, #15]
ARM GAS  /tmp/ccGwaFaD.s 			page 223


1935:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7320              		.loc 1 1935 2 is_stmt 1 view .LVU2315
1936:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7321              		.loc 1 1936 2 view .LVU2316
1936:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7322              		.loc 1 1936 5 is_stmt 0 view .LVU2317
 7323 0b22 00F0D883 		beq	.L942
1932:src/keys.c    **** 
 7324              		.loc 1 1932 44 view .LVU2318
 7325 0b26 4FF02D0A 		mov	r10, #45
 7326              	.LVL614:
1932:src/keys.c    **** 
 7327              		.loc 1 1932 44 view .LVU2319
 7328 0b2a 56E7     		b	.L898
 7329              	.LVL615:
 7330              	.L940:
1932:src/keys.c    **** 
 7331              		.loc 1 1932 44 view .LVU2320
 7332              	.LBE728:
 7333              	.LBE776:
 7334              	.LBE1232:
 7335              	.LBE1302:
 7336              	.LBB1303:
 7337 0b2c AB46     		mov	fp, r5
 7338              	.LVL616:
1932:src/keys.c    **** 
 7339              		.loc 1 1932 44 view .LVU2321
 7340 0b2e FFF7E1BA 		b	.L880
 7341              	.LVL617:
 7342              	.L1119:
1932:src/keys.c    **** 
 7343              		.loc 1 1932 44 view .LVU2322
 7344              	.LBE1303:
 7345              	.LBB1304:
 7346              	.LBB1233:
2868:src/keys.c    **** 
 7347              		.loc 1 2868 3 is_stmt 1 view .LVU2323
 7348              	.LBB777:
 7349              	.LBB778:
2497:src/keys.c    **** 
 7350              		.loc 1 2497 12 is_stmt 0 view .LVU2324
 7351 0b32 6A4A     		ldr	r2, .L1208+16
 7352 0b34 1268     		ldr	r2, [r2]
2497:src/keys.c    **** 
 7353              		.loc 1 2497 31 view .LVU2325
 7354 0b36 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7355              	.LBE778:
 7356              	.LBE777:
2868:src/keys.c    **** 
 7357              		.loc 1 2868 10 view .LVU2326
 7358 0b3a E4B2     		uxtb	r4, r4
 7359              	.LVL618:
 7360              	.LBB797:
 7361              	.LBI777:
2495:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7362              		.loc 1 2495 12 is_stmt 1 view .LVU2327
 7363              	.LBB789:
ARM GAS  /tmp/ccGwaFaD.s 			page 224


2496:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7364              		.loc 1 2496 2 view .LVU2328
2497:src/keys.c    **** 
 7365              		.loc 1 2497 2 view .LVU2329
2497:src/keys.c    **** 
 7366              		.loc 1 2497 31 is_stmt 0 view .LVU2330
 7367 0b3c 002A     		cmp	r2, #0
 7368 0b3e B4BF     		ite	lt
 7369 0b40 0B22     		movlt	r2, #11
 7370 0b42 0A22     		movge	r2, #10
 7371              	.LVL619:
2499:src/keys.c    **** 		if (--n < -2)
 7372              		.loc 1 2499 2 is_stmt 1 view .LVU2331
2499:src/keys.c    **** 		if (--n < -2)
 7373              		.loc 1 2499 5 is_stmt 0 view .LVU2332
 7374 0b44 122C     		cmp	r4, #18
 7375 0b46 00F00A81 		beq	.L1153
2503:src/keys.c    **** 		if (++n > max)
 7376              		.loc 1 2503 7 is_stmt 1 view .LVU2333
2503:src/keys.c    **** 		if (++n > max)
 7377              		.loc 1 2503 10 is_stmt 0 view .LVU2334
 7378 0b4a 182C     		cmp	r4, #24
 7379 0b4c 00F08181 		beq	.L1154
2507:src/keys.c    **** 		State2.status = 0;
 7380              		.loc 1 2507 7 is_stmt 1 view .LVU2335
2507:src/keys.c    **** 		State2.status = 0;
 7381              		.loc 1 2507 10 is_stmt 0 view .LVU2336
 7382 0b50 102C     		cmp	r4, #16
 7383 0b52 00F0C483 		beq	.L1155
 7384              	.LBB779:
2512:src/keys.c    **** 		if (nn <= 9)
 7385              		.loc 1 2512 3 is_stmt 1 view .LVU2337
 7386              	.LVL620:
 7387              	.LBB780:
 7388              	.LBI780:
 200:src/keys.c    **** {
 7389              		.loc 1 200 14 view .LVU2338
 7390              	.LBB781:
 202:src/keys.c    ****     // K00 - K05
 7391              		.loc 1 202 3 view .LVU2339
 224:src/keys.c    **** }
 7392              		.loc 1 224 3 view .LVU2340
 7393              	.LBB782:
 7394              	.LBI782:
 121:src/keys.c    **** {
 7395              		.loc 1 121 12 view .LVU2341
 7396              	.LBB783:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7397              		.loc 1 123 2 view .LVU2342
 133:src/keys.c    **** }
 7398              		.loc 1 133 2 view .LVU2343
 133:src/keys.c    **** }
 7399              		.loc 1 133 23 is_stmt 0 view .LVU2344
 7400 0b56 5E49     		ldr	r1, .L1208+4
 7401              	.LBE783:
 7402              	.LBE782:
 224:src/keys.c    **** }
ARM GAS  /tmp/ccGwaFaD.s 			page 225


 7403              		.loc 1 224 28 view .LVU2345
 7404 0b58 5E48     		ldr	r0, .L1208+8
 7405              	.LBB785:
 7406              	.LBB784:
 133:src/keys.c    **** }
 7407              		.loc 1 133 23 view .LVU2346
 7408 0b5a 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 7409 0b5c 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 7410 0b5e 01F07F01 		and	r1, r1, #127
 7411              	.LVL621:
 133:src/keys.c    **** }
 7412              		.loc 1 133 23 view .LVU2347
 7413              	.LBE784:
 7414              	.LBE785:
 7415              	.LBE781:
 7416              	.LBE780:
2513:src/keys.c    **** 			n = nn;
 7417              		.loc 1 2513 3 is_stmt 1 view .LVU2348
2513:src/keys.c    **** 			n = nn;
 7418              		.loc 1 2513 6 is_stmt 0 view .LVU2349
 7419 0b62 0929     		cmp	r1, #9
 7420 0b64 40F2B581 		bls	.L908
2515:src/keys.c    **** 			n = n == max ? 10 : max;
 7421              		.loc 1 2515 11 view .LVU2350
 7422 0b68 7029     		cmp	r1, #112
 7423              	.LBE779:
2496:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7424              		.loc 1 2496 6 view .LVU2351
 7425 0b6a A3F10303 		sub	r3, r3, #3
 7426              	.LVL622:
 7427              	.LBB786:
2515:src/keys.c    **** 			n = n == max ? 10 : max;
 7428              		.loc 1 2515 8 is_stmt 1 view .LVU2352
2515:src/keys.c    **** 			n = n == max ? 10 : max;
 7429              		.loc 1 2515 11 is_stmt 0 view .LVU2353
 7430 0b6e 00F02085 		beq	.L1156
2517:src/keys.c    **** 			n = 10; 
 7431              		.loc 1 2517 8 is_stmt 1 view .LVU2354
 7432              	.LBE786:
2496:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7433              		.loc 1 2496 6 is_stmt 0 view .LVU2355
 7434 0b72 7F29     		cmp	r1, #127
 7435 0b74 0CBF     		ite	eq
 7436 0b76 1A46     		moveq	r2, r3
 7437              	.LVL623:
2496:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7438              		.loc 1 2496 6 view .LVU2356
 7439 0b78 0A22     		movne	r2, #10
 7440              	.LVL624:
 7441              	.L644:
2520:src/keys.c    **** 
 7442              		.loc 1 2520 2 is_stmt 1 view .LVU2357
2520:src/keys.c    **** 
 7443              		.loc 1 2520 20 is_stmt 0 view .LVU2358
 7444 0b7a 0332     		adds	r2, r2, #3
 7445              	.LVL625:
2520:src/keys.c    **** 
ARM GAS  /tmp/ccGwaFaD.s 			page 226


 7446              		.loc 1 2520 16 view .LVU2359
 7447 0b7c 88F80C20 		strb	r2, [r8, #12]
2522:src/keys.c    **** }
 7448              		.loc 1 2522 2 is_stmt 1 view .LVU2360
 7449              	.LBE789:
 7450              	.LBE797:
2868:src/keys.c    **** 
 7451              		.loc 1 2868 10 is_stmt 0 view .LVU2361
 7452 0b80 4FF0330B 		mov	fp, #51
 7453 0b84 3268     		ldr	r2, [r6]
 7454              	.LVL626:
 7455              	.LBB798:
 7456              	.LBB790:
2522:src/keys.c    **** }
 7457              		.loc 1 2522 9 view .LVU2362
 7458 0b86 FFF794BA 		b	.L565
 7459              	.LVL627:
 7460              	.L1123:
2522:src/keys.c    **** }
 7461              		.loc 1 2522 9 view .LVU2363
 7462              	.LBE790:
 7463              	.LBE798:
2891:src/keys.c    **** 
 7464              		.loc 1 2891 3 is_stmt 1 view .LVU2364
 7465              	.LBB799:
 7466              	.LBB800:
 7467              	.LBB801:
 7468              	.LBB802:
 7469              	.LBB803:
 7470              	.LBB804:
 7471              	.LBB805:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7472              		.loc 1 87 18 is_stmt 0 view .LVU2365
 7473 0b8a FFF7FEFF 		bl	shift_down
 7474              	.LVL628:
 7475              	.LBE805:
 7476              	.LBE804:
 7477              	.LBE803:
 7478              	.LBE802:
 7479              	.LBE801:
 7480              	.LBE800:
 7481              	.LBE799:
2891:src/keys.c    **** 
 7482              		.loc 1 2891 10 view .LVU2366
 7483 0b8e E4B2     		uxtb	r4, r4
 7484              	.LVL629:
 7485              	.LBB826:
 7486              	.LBI799:
1280:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7487              		.loc 1 1280 12 is_stmt 1 view .LVU2367
 7488              	.LBB822:
1281:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7489              		.loc 1 1281 2 view .LVU2368
1286:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7490              		.loc 1 1286 2 view .LVU2369
1290:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7491              		.loc 1 1290 2 view .LVU2370
ARM GAS  /tmp/ccGwaFaD.s 			page 227


 7492              	.LBB814:
 7493              	.LBI801:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7494              		.loc 1 104 13 view .LVU2371
 7495              	.LBE814:
 7496              	.LBE822:
 7497              	.LBE826:
 7498              	.LBE1233:
 7499              	.LBE1304:
 105:src/keys.c    **** }
 7500              		.loc 1 105 2 view .LVU2372
 7501              	.LBB1305:
 7502              	.LBB1234:
 7503              	.LBB827:
 7504              	.LBB823:
 7505              	.LBB815:
 7506              	.LBB811:
 7507              	.LBI802:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7508              		.loc 1 94 20 view .LVU2373
 7509              	.LBB808:
  95:src/keys.c    **** 	State2.shifts = shift;
 7510              		.loc 1 95 2 view .LVU2374
 7511              	.LBB807:
 7512              	.LBI804:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7513              		.loc 1 86 13 view .LVU2375
 7514              	.LBB806:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7515              		.loc 1 87 2 view .LVU2376
  88:src/keys.c    **** }
 7516              		.loc 1 88 2 view .LVU2377
  88:src/keys.c    **** }
 7517              		.loc 1 88 52 is_stmt 0 view .LVU2378
 7518 0b90 8346     		mov	fp, r0
 7519 0b92 08B9     		cbnz	r0, .L654
 7520 0b94 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 7521              	.L654:
 7522              	.LVL630:
  88:src/keys.c    **** }
 7523              		.loc 1 88 52 view .LVU2379
 7524              	.LBE806:
 7525              	.LBE807:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7526              		.loc 1 96 2 is_stmt 1 view .LVU2380
 7527              	.LBE808:
 7528              	.LBE811:
 7529              	.LBE815:
1293:src/keys.c    **** #ifdef DM42
 7530              		.loc 1 1293 15 is_stmt 0 view .LVU2381
 7531 0b98 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7532              	.LBB816:
 7533              	.LBB812:
 7534              	.LBB809:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7535              		.loc 1 96 16 view .LVU2382
 7536 0b9c 0023     		movs	r3, #0
ARM GAS  /tmp/ccGwaFaD.s 			page 228


 7537              	.LBE809:
 7538              	.LBE812:
 7539              	.LBE816:
1291:src/keys.c    **** 
 7540              		.loc 1 1291 23 view .LVU2383
 7541 0b9e ABF1010A 		sub	r10, fp, #1
 7542              	.LVL631:
1293:src/keys.c    **** #ifdef DM42
 7543              		.loc 1 1293 15 view .LVU2384
 7544 0ba2 63F38202 		bfi	r2, r3, #2, #1
1291:src/keys.c    **** 
 7545              		.loc 1 1291 23 view .LVU2385
 7546 0ba6 BAFA8AFA 		clz	r10, r10
1293:src/keys.c    **** #ifdef DM42
 7547              		.loc 1 1293 15 view .LVU2386
 7548 0baa 88F81520 		strb	r2, [r8, #21]
 7549              	.LBB817:
 7550              	.LBB813:
 7551              	.LBB810:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7552              		.loc 1 96 16 view .LVU2387
 7553 0bae 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 7554              		.loc 1 98 2 is_stmt 1 view .LVU2388
 7555              	.LVL632:
  98:src/keys.c    **** }
 7556              		.loc 1 98 2 is_stmt 0 view .LVU2389
 7557              	.LBE810:
 7558              	.LBE813:
 7559              	.LBE817:
1291:src/keys.c    **** 
 7560              		.loc 1 1291 2 is_stmt 1 view .LVU2390
1291:src/keys.c    **** 
 7561              		.loc 1 1291 23 is_stmt 0 view .LVU2391
 7562 0bb2 4FEA5A1A 		lsr	r10, r10, #5
 7563              	.LVL633:
1293:src/keys.c    **** #ifdef DM42
 7564              		.loc 1 1293 2 is_stmt 1 view .LVU2392
1295:src/keys.c    **** 	display_current_menu ();
 7565              		.loc 1 1295 2 view .LVU2393
 7566 0bb6 FFF7FEFF 		bl	set_last_menu
 7567              	.LVL634:
1296:src/keys.c    **** #endif
 7568              		.loc 1 1296 2 view .LVU2394
 7569 0bba FFF7FEFF 		bl	display_current_menu
 7570              	.LVL635:
1298:src/keys.c    **** 	
 7571              		.loc 1 1298 2 view .LVU2395
1298:src/keys.c    **** 	
 7572              		.loc 1 1298 5 is_stmt 0 view .LVU2396
 7573 0bbe BBF1000F 		cmp	fp, #0
 7574 0bc2 09D0     		beq	.L657
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7575              		.loc 1 1300 2 is_stmt 1 view .LVU2397
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7576              		.loc 1 1300 15 is_stmt 0 view .LVU2398
 7577 0bc4 A31F     		subs	r3, r4, #6
ARM GAS  /tmp/ccGwaFaD.s 			page 229


1300:src/keys.c    **** 		return op_map[c - K10][f];
 7578              		.loc 1 1300 5 view .LVU2399
 7579 0bc6 DAB2     		uxtb	r2, r3
 7580 0bc8 022A     		cmp	r2, #2
 7581 0bca 40F23B81 		bls	.L1157
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7582              		.loc 1 1303 2 is_stmt 1 view .LVU2400
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7583              		.loc 1 1303 15 is_stmt 0 view .LVU2401
 7584 0bce 0E3C     		subs	r4, r4, #14
 7585              	.LVL636:
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7586              		.loc 1 1303 5 view .LVU2402
 7587 0bd0 E3B2     		uxtb	r3, r4
 7588 0bd2 012B     		cmp	r3, #1
 7589 0bd4 40F27F81 		bls	.L1158
 7590              	.LVL637:
 7591              	.L657:
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7592              		.loc 1 1303 5 view .LVU2403
 7593 0bd8 3268     		ldr	r2, [r6]
1298:src/keys.c    **** 	
 7594              		.loc 1 1298 31 view .LVU2404
 7595 0bda 4FF0330B 		mov	fp, #51
 7596              	.LVL638:
1298:src/keys.c    **** 	
 7597              		.loc 1 1298 31 view .LVU2405
 7598 0bde FFF768BA 		b	.L565
 7599              	.LVL639:
 7600              	.L1124:
1298:src/keys.c    **** 	
 7601              		.loc 1 1298 31 view .LVU2406
 7602              	.LBE823:
 7603              	.LBE827:
 7604              	.LBB828:
 7605              	.LBB666:
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7606              		.loc 1 266 16 view .LVU2407
 7607 0be2 BAF1030F 		cmp	r10, #3
 7608 0be6 00F04381 		beq	.L1159
 269:src/keys.c    ****     /*
 7609              		.loc 1 269 3 is_stmt 1 view .LVU2408
 269:src/keys.c    ****     /*
 7610              		.loc 1 269 23 is_stmt 0 view .LVU2409
 7611 0bea 3D4A     		ldr	r2, .L1208+20
 7612 0bec D8F81430 		ldr	r3, [r8, #20]
 269:src/keys.c    ****     /*
 7613              		.loc 1 269 6 view .LVU2410
 7614 0bf0 1A42     		tst	r2, r3
 7615 0bf2 3FF45CAB 		beq	.L671
 7616              	.L663:
 7617              	.LBB661:
 338:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7618              		.loc 1 338 5 is_stmt 1 view .LVU2411
 362:src/keys.c    **** 
 7619              		.loc 1 362 5 view .LVU2412
 367:src/keys.c    ****     col = smap[shift];
ARM GAS  /tmp/ccGwaFaD.s 			page 230


 7620              		.loc 1 367 5 view .LVU2413
 7621              	.LVL640:
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7622              		.loc 1 368 5 view .LVU2414
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7623              		.loc 1 368 15 is_stmt 0 view .LVU2415
 7624 0bf6 3B4A     		ldr	r2, .L1208+24
 367:src/keys.c    ****     col = smap[shift];
 7625              		.loc 1 367 8 view .LVU2416
 7626 0bf8 3B4B     		ldr	r3, .L1208+28
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7627              		.loc 1 368 9 view .LVU2417
 7628 0bfa 12F80AC0 		ldrb	ip, [r2, r10]	@ zero_extendqisi2
 7629              	.LVL641:
 369:src/keys.c    ****   }
 7630              		.loc 1 369 5 is_stmt 1 view .LVU2418
 369:src/keys.c    ****   }
 7631              		.loc 1 369 9 is_stmt 0 view .LVU2419
 7632 0bfe 0822     		movs	r2, #8
 7633 0c00 FFF729BB 		b	.L666
 7634              	.LVL642:
 7635              	.L633:
 369:src/keys.c    ****   }
 7636              		.loc 1 369 9 view .LVU2420
 7637              	.LBE661:
 7638              	.LBE666:
 7639              	.LBE828:
 7640              	.LBB829:
 7641              	.LBB729:
1956:src/keys.c    **** 		// digit 2..9, -> or .
 7642              		.loc 1 1956 7 is_stmt 1 view .LVU2421
1956:src/keys.c    **** 		// digit 2..9, -> or .
 7643              		.loc 1 1956 10 is_stmt 0 view .LVU2422
 7644 0c04 092A     		cmp	r2, #9
 7645 0c06 48D9     		bls	.L635
 7646              	.L627:
1956:src/keys.c    **** 		// digit 2..9, -> or .
 7647              		.loc 1 1956 19 view .LVU2423
 7648 0c08 2C2C     		cmp	r4, #44
 7649 0c0a 46D0     		beq	.L635
1956:src/keys.c    **** 		// digit 2..9, -> or .
 7650              		.loc 1 1956 35 view .LVU2424
 7651 0c0c 262C     		cmp	r4, #38
 7652 0c0e 44D0     		beq	.L635
1962:src/keys.c    **** 	case K11:					// tests vs register
 7653              		.loc 1 1962 2 is_stmt 1 view .LVU2425
 7654 0c10 0C2C     		cmp	r4, #12
 7655 0c12 00F04381 		beq	.L638
 7656 0c16 102C     		cmp	r4, #16
 7657 0c18 00F03B81 		beq	.L639
 7658 0c1c 072C     		cmp	r4, #7
 7659 0c1e 00F03D81 		beq	.L638
 7660              	.L630:
1976:src/keys.c    **** 	State2.cmplx = cmpx;
 7661              		.loc 1 1976 2 view .LVU2426
1977:src/keys.c    **** 	return STATE_UNFINISHED;
 7662              		.loc 1 1977 15 is_stmt 0 view .LVU2427
ARM GAS  /tmp/ccGwaFaD.s 			page 231


 7663 0c22 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 7664 0c26 3268     		ldr	r2, [r6]
1976:src/keys.c    **** 	State2.cmplx = cmpx;
 7665              		.loc 1 1976 14 view .LVU2428
 7666 0c28 88F80FB0 		strb	fp, [r8, #15]
1977:src/keys.c    **** 	return STATE_UNFINISHED;
 7667              		.loc 1 1977 2 is_stmt 1 view .LVU2429
1977:src/keys.c    **** 	return STATE_UNFINISHED;
 7668              		.loc 1 1977 15 is_stmt 0 view .LVU2430
 7669 0c2c 6EF34103 		bfi	r3, lr, #1, #1
 7670 0c30 88F81530 		strb	r3, [r8, #21]
1978:src/keys.c    **** }
 7671              		.loc 1 1978 2 is_stmt 1 view .LVU2431
1978:src/keys.c    **** }
 7672              		.loc 1 1978 9 is_stmt 0 view .LVU2432
 7673 0c34 4FF0330B 		mov	fp, #51
 7674              	.LVL643:
1978:src/keys.c    **** }
 7675              		.loc 1 1978 9 view .LVU2433
 7676 0c38 FFF73BBA 		b	.L565
 7677              	.LVL644:
 7678              	.L1152:
1978:src/keys.c    **** }
 7679              		.loc 1 1978 9 view .LVU2434
 7680 0c3c 3268     		ldr	r2, [r6]
 7681              	.LBE729:
 7682              	.LBE829:
 7683              	.LBE1234:
 7684              	.LBE1305:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 7685              		.loc 1 2979 7 view .LVU2435
 7686 0c3e 0025     		movs	r5, #0
 7687              	.LBB1306:
3154:src/keys.c    **** 	}
 7688              		.loc 1 3154 6 view .LVU2436
 7689 0c40 4FF0330B 		mov	fp, #51
 7690 0c44 FFF735BA 		b	.L565
 7691              	.LVL645:
 7692              	.L1142:
3154:src/keys.c    **** 	}
 7693              		.loc 1 3154 6 view .LVU2437
 7694              	.LBE1306:
 7695              	.LBB1307:
 7696              	.LBB1235:
 7697              	.LBB830:
 7698              	.LBB748:
1342:src/keys.c    **** 	}
 7699              		.loc 1 1342 3 is_stmt 1 view .LVU2438
1342:src/keys.c    **** 	}
 7700              		.loc 1 1342 8 is_stmt 0 view .LVU2439
 7701 0c48 FFF7FEFF 		bl	gtodot_digit
 7702              	.LVL646:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7703              		.loc 1 1391 2 is_stmt 1 view .LVU2440
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7704              		.loc 1 1391 5 is_stmt 0 view .LVU2441
 7705 0c4c 0028     		cmp	r0, #0
ARM GAS  /tmp/ccGwaFaD.s 			page 232


1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7706              		.loc 1 1391 5 view .LVU2442
 7707 0c4e 62DA     		bge	.L598
 7708 0c50 3268     		ldr	r2, [r6]
 7709              	.LBE748:
 7710              	.LBE830:
2859:src/keys.c    **** 
 7711              		.loc 1 2859 10 view .LVU2443
 7712 0c52 4FF0330B 		mov	fp, #51
 7713 0c56 FFF72CBA 		b	.L565
 7714              	.LVL647:
 7715              	.L628:
 7716              	.LBB831:
 7717              	.LBB730:
1948:src/keys.c    **** 		// Special 0
 7718              		.loc 1 1948 7 is_stmt 1 view .LVU2444
1948:src/keys.c    **** 		// Special 0
 7719              		.loc 1 1948 10 is_stmt 0 view .LVU2445
 7720 0c5a 002A     		cmp	r2, #0
 7721 0c5c 41F05D80 		bne	.L631
1950:src/keys.c    **** 	}
 7722              		.loc 1 1950 3 is_stmt 1 view .LVU2446
1950:src/keys.c    **** 	}
 7723              		.loc 1 1950 18 is_stmt 0 view .LVU2447
 7724 0c60 BEF1000F 		cmp	lr, #0
 7725 0c64 14BF     		ite	ne
 7726 0c66 2523     		movne	r3, #37
 7727 0c68 1723     		moveq	r3, #23
1950:src/keys.c    **** 	}
 7728              		.loc 1 1950 47 view .LVU2448
 7729 0c6a 9B44     		add	fp, fp, r3
 7730              	.LVL648:
1950:src/keys.c    **** 	}
 7731              		.loc 1 1950 47 view .LVU2449
 7732 0c6c FFF7E8BB 		b	.L595
 7733              	.LVL649:
 7734              	.L1126:
1950:src/keys.c    **** 	}
 7735              		.loc 1 1950 47 view .LVU2450
 7736              	.LBE730:
 7737              	.LBE831:
 7738              	.LBB832:
 7739              	.LBB667:
 377:src/keys.c    ****       break;
 7740              		.loc 1 377 7 is_stmt 1 view .LVU2451
 377:src/keys.c    ****       break;
 7741              		.loc 1 377 11 is_stmt 0 view .LVU2452
 7742 0c70 6344     		add	r3, r3, ip
 7743              	.LVL650:
 377:src/keys.c    ****       break;
 7744              		.loc 1 377 11 view .LVU2453
 7745 0c72 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7746              	.LVL651:
 378:src/keys.c    ****     }
 7747              		.loc 1 378 7 is_stmt 1 view .LVU2454
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7748              		.loc 1 381 3 view .LVU2455
ARM GAS  /tmp/ccGwaFaD.s 			page 233


 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7749              		.loc 1 381 6 is_stmt 0 view .LVU2456
 7750 0c76 0B07     		lsls	r3, r1, #28
 7751 0c78 40F1CF80 		bpl	.L1160
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7752              		.loc 1 381 20 view .LVU2457
 7753 0c7c ABF10B03 		sub	r3, fp, #11
 7754 0c80 042B     		cmp	r3, #4
 7755 0c82 71D8     		bhi	.L677
 7756              	.LVL652:
 7757              	.L661:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7758              		.loc 1 381 20 view .LVU2458
 7759              	.LBE667:
 7760              	.LBE832:
2900:src/keys.c    **** 			return STATE_UNFINISHED;
 7761              		.loc 1 2900 3 is_stmt 1 view .LVU2459
2900:src/keys.c    **** 			return STATE_UNFINISHED;
 7762              		.loc 1 2900 7 is_stmt 0 view .LVU2460
 7763 0c84 FFF7FEFF 		bl	is_bad_cmdline
 7764              	.LVL653:
2900:src/keys.c    **** 			return STATE_UNFINISHED;
 7765              		.loc 1 2900 6 view .LVU2461
 7766 0c88 0446     		mov	r4, r0
 7767 0c8a 0028     		cmp	r0, #0
 7768 0c8c 00F01681 		beq	.L676
 7769 0c90 3268     		ldr	r2, [r6]
2901:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
 7770              		.loc 1 2901 11 view .LVU2462
 7771 0c92 4FF0330B 		mov	fp, #51
 7772 0c96 FFF70CBA 		b	.L565
 7773              	.LVL654:
 7774              	.L635:
 7775              	.LBB833:
 7776              	.LBB731:
1958:src/keys.c    **** 		return process_arg(c);
 7777              		.loc 1 1958 3 is_stmt 1 view .LVU2463
 7778              	.LBB724:
 7779              	.LBI724:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 7780              		.loc 1 506 13 view .LVU2464
 7781              	.LBB725:
 507:src/keys.c    **** 		return;
 7782              		.loc 1 507 2 view .LVU2465
 507:src/keys.c    **** 		return;
 7783              		.loc 1 507 6 is_stmt 0 view .LVU2466
 7784 0c9a FFF7FEFF 		bl	is_bad_cmdline
 7785              	.LVL655:
 507:src/keys.c    **** 		return;
 7786              		.loc 1 507 5 view .LVU2467
 7787 0c9e 18B9     		cbnz	r0, .L637
 7788 0ca0 5FFA8AF0 		uxtb	r0, r10
 7789 0ca4 FFF7FEFF 		bl	init_arg.part.0
 7790              	.LVL656:
 7791              	.L637:
 507:src/keys.c    **** 		return;
 7792              		.loc 1 507 5 view .LVU2468
ARM GAS  /tmp/ccGwaFaD.s 			page 234


 7793              	.LBE725:
 7794              	.LBE724:
1959:src/keys.c    **** 	}
 7795              		.loc 1 1959 3 is_stmt 1 view .LVU2469
1959:src/keys.c    **** 	}
 7796              		.loc 1 1959 10 is_stmt 0 view .LVU2470
 7797 0ca8 2046     		mov	r0, r4
 7798 0caa FFF7FEFF 		bl	process_arg
 7799              	.LVL657:
 7800 0cae 8346     		mov	fp, r0
 7801              	.LVL658:
1959:src/keys.c    **** 	}
 7802              		.loc 1 1959 10 view .LVU2471
 7803 0cb0 FFF7C6BB 		b	.L595
 7804              	.LVL659:
 7805              	.L1120:
1959:src/keys.c    **** 	}
 7806              		.loc 1 1959 10 view .LVU2472
 7807              	.LBE731:
 7808              	.LBE833:
2874:src/keys.c    **** 		return STATE_UNFINISHED;
 7809              		.loc 1 2874 3 is_stmt 1 view .LVU2473
 7810              	.LBB834:
 7811              	.LBI834:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7812              		.loc 1 111 13 view .LVU2474
 7813              	.LBB835:
 112:src/keys.c    **** }
 7814              		.loc 1 112 2 view .LVU2475
 112:src/keys.c    **** }
 7815              		.loc 1 112 16 is_stmt 0 view .LVU2476
 7816 0cb4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7817 0cb8 3268     		ldr	r2, [r6]
 7818 0cba 013B     		subs	r3, r3, #1
 7819 0cbc 18BF     		it	ne
 7820 0cbe 0123     		movne	r3, #1
 7821 0cc0 88F81030 		strb	r3, [r8, #16]
 7822              	.LVL660:
 112:src/keys.c    **** }
 7823              		.loc 1 112 16 view .LVU2477
 7824              	.LBE835:
 7825              	.LBE834:
2875:src/keys.c    **** 	}
 7826              		.loc 1 2875 3 is_stmt 1 view .LVU2478
2875:src/keys.c    **** 	}
 7827              		.loc 1 2875 10 is_stmt 0 view .LVU2479
 7828 0cc4 4FF0330B 		mov	fp, #51
 7829 0cc8 FFF7F3B9 		b	.L565
 7830              	.L1209:
 7831              		.align	2
 7832              	.L1208:
 7833 0ccc 00040800 		.word	525312
 7834 0cd0 00000000 		.word	.LANCHOR1
 7835 0cd4 00000000 		.word	.LANCHOR0
 7836 0cd8 00000000 		.word	.LANCHOR13
 7837 0cdc 00000000 		.word	main_ram
 7838 0ce0 00080800 		.word	526336
ARM GAS  /tmp/ccGwaFaD.s 			page 235


 7839 0ce4 00000000 		.word	.LANCHOR16
 7840 0ce8 00000000 		.word	.LANCHOR10
 7841 0cec 00000000 		.word	StateWhileOn
 7842              	.LVL661:
 7843              	.L618:
2875:src/keys.c    **** 	}
 7844              		.loc 1 2875 10 view .LVU2480
 7845 0cf0 3268     		ldr	r2, [r6]
 7846              	.LBB836:
 7847              	.LBB772:
1273:src/keys.c    **** }
 7848              		.loc 1 1273 9 view .LVU2481
 7849 0cf2 4FF0330B 		mov	fp, #51
 7850 0cf6 FFF7DCB9 		b	.L565
 7851              	.LVL662:
 7852              	.L1121:
1273:src/keys.c    **** }
 7853              		.loc 1 1273 9 view .LVU2482
 7854              	.LBE772:
 7855              	.LBE836:
2878:src/keys.c    **** 		return STATE_UNFINISHED;
 7856              		.loc 1 2878 3 is_stmt 1 view .LVU2483
 7857              	.LBB837:
 7858              	.LBI837:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7859              		.loc 1 111 13 view .LVU2484
 7860              	.LBB838:
 112:src/keys.c    **** }
 7861              		.loc 1 112 2 view .LVU2485
 112:src/keys.c    **** }
 7862              		.loc 1 112 16 is_stmt 0 view .LVU2486
 7863 0cfa 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 7864 0cfe 3268     		ldr	r2, [r6]
 7865 0d00 0229     		cmp	r1, #2
 7866 0d02 18BF     		it	ne
 7867 0d04 0223     		movne	r3, #2
 7868 0d06 88F81030 		strb	r3, [r8, #16]
 7869              	.LVL663:
 112:src/keys.c    **** }
 7870              		.loc 1 112 16 view .LVU2487
 7871              	.LBE838:
 7872              	.LBE837:
2879:src/keys.c    **** 	}
 7873              		.loc 1 2879 3 is_stmt 1 view .LVU2488
2879:src/keys.c    **** 	}
 7874              		.loc 1 2879 10 is_stmt 0 view .LVU2489
 7875 0d0a 4FF0330B 		mov	fp, #51
 7876 0d0e FFF7D0B9 		b	.L565
 7877              	.LVL664:
 7878              	.L1149:
 7879              	.LBB839:
 7880              	.LBB749:
1362:src/keys.c    **** 	}
 7881              		.loc 1 1362 3 is_stmt 1 view .LVU2490
1362:src/keys.c    **** 	}
 7882              		.loc 1 1362 6 is_stmt 0 view .LVU2491
 7883 0d12 B8F80800 		ldrh	r0, [r8, #8]
ARM GAS  /tmp/ccGwaFaD.s 			page 236


 7884              	.LVL665:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7885              		.loc 1 1391 2 is_stmt 1 view .LVU2492
 7886              	.L598:
1392:src/keys.c    **** fin:		set_pc(rawpc);
 7887              		.loc 1 1392 3 view .LVU2493
1392:src/keys.c    **** fin:		set_pc(rawpc);
 7888              		.loc 1 1392 11 is_stmt 0 view .LVU2494
 7889 0d16 FFF7FEFF 		bl	find_user_pc
 7890              	.LVL666:
 7891              	.L607:
1393:src/keys.c    **** fin2:		State2.gtodot = 0;
 7892              		.loc 1 1393 7 is_stmt 1 view .LVU2495
 7893 0d1a FFF7FEFF 		bl	set_pc
 7894              	.LVL667:
 7895              	.L611:
1394:src/keys.c    **** 		State2.digval = 0;
 7896              		.loc 1 1394 8 view .LVU2496
1394:src/keys.c    **** 		State2.digval = 0;
 7897              		.loc 1 1394 22 is_stmt 0 view .LVU2497
 7898 0d1e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 7899 0d22 3268     		ldr	r2, [r6]
1395:src/keys.c    **** 		State2.numdigit = 0;
 7900              		.loc 1 1395 17 view .LVU2498
 7901 0d24 0023     		movs	r3, #0
1394:src/keys.c    **** 		State2.digval = 0;
 7902              		.loc 1 1394 22 view .LVU2499
 7903 0d26 6FF30001 		bfc	r1, #0, #1
 7904 0d2a 88F81510 		strb	r1, [r8, #21]
1395:src/keys.c    **** 		State2.numdigit = 0;
 7905              		.loc 1 1395 3 is_stmt 1 view .LVU2500
1395:src/keys.c    **** 		State2.numdigit = 0;
 7906              		.loc 1 1395 17 is_stmt 0 view .LVU2501
 7907 0d2e A8F80830 		strh	r3, [r8, #8]	@ movhi
1396:src/keys.c    **** 	}
 7908              		.loc 1 1396 3 is_stmt 1 view .LVU2502
1396:src/keys.c    **** 	}
 7909              		.loc 1 1396 19 is_stmt 0 view .LVU2503
 7910 0d32 88F80B30 		strb	r3, [r8, #11]
 7911              	.LBE749:
 7912              	.LBE839:
2859:src/keys.c    **** 
 7913              		.loc 1 2859 10 view .LVU2504
 7914 0d36 4FF0330B 		mov	fp, #51
 7915 0d3a FFF7BAB9 		b	.L565
 7916              	.LVL668:
 7917              	.L1122:
2882:src/keys.c    **** 		State2.arrow = 0;
 7918              		.loc 1 2882 3 is_stmt 1 view .LVU2505
 7919              	.LBB840:
 7920              	.LBI840:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7921              		.loc 1 111 13 view .LVU2506
 7922              	.LBB841:
 112:src/keys.c    **** }
 7923              		.loc 1 112 2 view .LVU2507
 112:src/keys.c    **** }
ARM GAS  /tmp/ccGwaFaD.s 			page 237


 7924              		.loc 1 112 16 is_stmt 0 view .LVU2508
 7925 0d3e 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 7926              	.LVL669:
 112:src/keys.c    **** }
 7927              		.loc 1 112 16 view .LVU2509
 7928 0d42 3268     		ldr	r2, [r6]
 7929 0d44 032C     		cmp	r4, #3
 7930              	.LBE841:
 7931              	.LBE840:
2883:src/keys.c    **** 		return STATE_UNFINISHED;
 7932              		.loc 1 2883 16 view .LVU2510
 7933 0d46 60F38201 		bfi	r1, r0, #2, #1
 7934              	.LBB844:
 7935              	.LBB842:
 112:src/keys.c    **** }
 7936              		.loc 1 112 16 view .LVU2511
 7937 0d4a 18BF     		it	ne
 7938 0d4c 0323     		movne	r3, #3
 7939              	.LBE842:
 7940              	.LBE844:
2883:src/keys.c    **** 		return STATE_UNFINISHED;
 7941              		.loc 1 2883 16 view .LVU2512
 7942 0d4e 88F81510 		strb	r1, [r8, #21]
 7943              	.LBB845:
 7944              	.LBB843:
 112:src/keys.c    **** }
 7945              		.loc 1 112 16 view .LVU2513
 7946 0d52 88F81030 		strb	r3, [r8, #16]
 7947              	.LVL670:
 112:src/keys.c    **** }
 7948              		.loc 1 112 16 view .LVU2514
 7949              	.LBE843:
 7950              	.LBE845:
2883:src/keys.c    **** 		return STATE_UNFINISHED;
 7951              		.loc 1 2883 3 is_stmt 1 view .LVU2515
2884:src/keys.c    **** 	}
 7952              		.loc 1 2884 3 view .LVU2516
2884:src/keys.c    **** 	}
 7953              		.loc 1 2884 10 is_stmt 0 view .LVU2517
 7954 0d56 4FF0330B 		mov	fp, #51
 7955 0d5a FFF7AAB9 		b	.L565
 7956              	.LVL671:
 7957              	.L1153:
 7958              	.LBB846:
 7959              	.LBB791:
2500:src/keys.c    **** 			n = max;
 7960              		.loc 1 2500 3 is_stmt 1 view .LVU2518
2500:src/keys.c    **** 			n = max;
 7961              		.loc 1 2500 6 is_stmt 0 view .LVU2519
 7962 0d5e 191F     		subs	r1, r3, #4
 7963              	.LVL672:
2500:src/keys.c    **** 			n = max;
 7964              		.loc 1 2500 6 view .LVU2520
 7965 0d60 012B     		cmp	r3, #1
 7966 0d62 18BF     		it	ne
 7967 0d64 0A46     		movne	r2, r1
 7968              	.LVL673:
ARM GAS  /tmp/ccGwaFaD.s 			page 238


2500:src/keys.c    **** 			n = max;
 7969              		.loc 1 2500 6 view .LVU2521
 7970 0d66 08E7     		b	.L644
 7971              	.LVL674:
 7972              	.L677:
2500:src/keys.c    **** 			n = max;
 7973              		.loc 1 2500 6 view .LVU2522
 7974              	.LBE791:
 7975              	.LBE846:
2911:src/keys.c    **** 
 7976              		.loc 1 2911 3 is_stmt 1 view .LVU2523
 7977              	.LBB847:
 7978              	.LBI847:
2391:src/keys.c    **** 	enum shifts shift = reset_shift();
 7979              		.loc 1 2391 12 view .LVU2524
 7980              	.LBB848:
2392:src/keys.c    **** 	unsigned int ch = 0;
 7981              		.loc 1 2392 2 view .LVU2525
 7982              	.LBB849:
 7983              	.LBI849:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7984              		.loc 1 104 13 view .LVU2526
 7985              	.LBE849:
 7986              	.LBE848:
 7987              	.LBE847:
 7988              	.LBE1235:
 7989              	.LBE1307:
 105:src/keys.c    **** }
 7990              		.loc 1 105 2 view .LVU2527
 7991              	.LBB1308:
 7992              	.LBB1236:
 7993              	.LBB885:
 7994              	.LBB877:
 7995              	.LBB856:
 7996              	.LBB850:
 7997              	.LBI850:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7998              		.loc 1 94 20 view .LVU2528
 7999              	.LBB851:
  95:src/keys.c    **** 	State2.shifts = shift;
 8000              		.loc 1 95 2 view .LVU2529
 8001              	.LBB852:
 8002              	.LBI852:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8003              		.loc 1 86 13 view .LVU2530
 8004              	.LBB853:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8005              		.loc 1 87 2 view .LVU2531
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8006              		.loc 1 87 18 is_stmt 0 view .LVU2532
 8007 0d68 FFF7FEFF 		bl	shift_down
 8008              	.LVL675:
  88:src/keys.c    **** }
 8009              		.loc 1 88 2 is_stmt 1 view .LVU2533
  88:src/keys.c    **** }
 8010              		.loc 1 88 52 is_stmt 0 view .LVU2534
 8011 0d6c 0146     		mov	r1, r0
ARM GAS  /tmp/ccGwaFaD.s 			page 239


 8012 0d6e 08B9     		cbnz	r0, .L674
 8013 0d70 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 8014              	.L674:
 8015              	.LVL676:
  88:src/keys.c    **** }
 8016              		.loc 1 88 52 view .LVU2535
 8017              	.LBE853:
 8018              	.LBE852:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8019              		.loc 1 96 2 is_stmt 1 view .LVU2536
 8020              	.LBE851:
 8021              	.LBE850:
 8022              	.LBE856:
2396:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8023              		.loc 1 2396 5 is_stmt 0 view .LVU2537
 8024 0d74 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 8025              	.LBB857:
 8026              	.LBB855:
 8027              	.LBB854:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8028              		.loc 1 96 16 view .LVU2538
 8029 0d78 0023     		movs	r3, #0
 8030 0d7a 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 8031              		.loc 1 98 2 is_stmt 1 view .LVU2539
 8032              	.LVL677:
  98:src/keys.c    **** }
 8033              		.loc 1 98 2 is_stmt 0 view .LVU2540
 8034              	.LBE854:
 8035              	.LBE855:
 8036              	.LBE857:
2393:src/keys.c    **** 	unsigned int opcode;
 8037              		.loc 1 2393 2 is_stmt 1 view .LVU2541
2394:src/keys.c    **** 
 8038              		.loc 1 2394 2 view .LVU2542
2396:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8039              		.loc 1 2396 2 view .LVU2543
2396:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8040              		.loc 1 2396 5 is_stmt 0 view .LVU2544
 8041 0d7e 0028     		cmp	r0, #0
 8042 0d80 40F0B783 		bne	.L1161
2405:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 8043              		.loc 1 2405 2 is_stmt 1 view .LVU2545
 8044 0d84 102C     		cmp	r4, #16
 8045 0d86 00F03185 		beq	.L681
 8046 0d8a 242C     		cmp	r4, #36
 8047 0d8c 00F01785 		beq	.L682
 8048 0d90 0C2C     		cmp	r4, #12
 8049 0d92 00F01384 		beq	.L1162
 8050              	.L683:
2438:src/keys.c    **** 	if (ch == 0)
 8051              		.loc 1 2438 2 view .LVU2546
 8052              	.LBB858:
 8053              	.LBB859:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8054              		.loc 1 439 6 is_stmt 0 view .LVU2547
 8055 0d96 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccGwaFaD.s 			page 240


 8056              	.LVL678:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8057              		.loc 1 439 6 view .LVU2548
 8058              	.LBE859:
 8059              	.LBI858:
 389:src/keys.c    **** {
 8060              		.loc 1 389 12 is_stmt 1 view .LVU2549
 8061              	.LBB864:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 8062              		.loc 1 391 2 view .LVU2550
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8063              		.loc 1 439 2 view .LVU2551
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8064              		.loc 1 439 5 is_stmt 0 view .LVU2552
 8065 0d9a DB06     		lsls	r3, r3, #27
 8066 0d9c 03D5     		bpl	.L687
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 8067              		.loc 1 440 3 is_stmt 1 view .LVU2553
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 8068              		.loc 1 440 6 is_stmt 0 view .LVU2554
 8069 0d9e 0029     		cmp	r1, #0
 8070 0da0 40F0CF86 		bne	.L1163
 441:src/keys.c    **** 		else if (shift == SHIFT_G)
 8071              		.loc 1 441 10 view .LVU2555
 8072 0da4 0421     		movs	r1, #4
 8073              	.LVL679:
 8074              	.L687:
 445:src/keys.c    **** }
 8075              		.loc 1 445 2 is_stmt 1 view .LVU2556
 8076              	.LBB860:
 8077              	.LBI860:
 121:src/keys.c    **** {
 8078              		.loc 1 121 12 view .LVU2557
 8079              	.LBB861:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8080              		.loc 1 123 2 view .LVU2558
 133:src/keys.c    **** }
 8081              		.loc 1 133 2 view .LVU2559
 133:src/keys.c    **** }
 8082              		.loc 1 133 23 is_stmt 0 view .LVU2560
 8083 0da6 AF4B     		ldr	r3, .L1210
 8084              	.LBE861:
 8085              	.LBE860:
 445:src/keys.c    **** }
 8086              		.loc 1 445 49 view .LVU2561
 8087 0da8 AF4A     		ldr	r2, .L1210+4
 8088              	.LBB863:
 8089              	.LBB862:
 133:src/keys.c    **** }
 8090              		.loc 1 133 23 view .LVU2562
 8091 0daa 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8092              	.LBE862:
 8093              	.LBE863:
 445:src/keys.c    **** }
 8094              		.loc 1 445 49 view .LVU2563
 8095 0dac 0620     		movs	r0, #6
 8096 0dae 00FB0323 		mla	r3, r0, r3, r2
ARM GAS  /tmp/ccGwaFaD.s 			page 241


 8097              	.LBE864:
 8098              	.LBE858:
2438:src/keys.c    **** 	if (ch == 0)
 8099              		.loc 1 2438 5 view .LVU2564
 8100 0db2 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 8101              	.LVL680:
2439:src/keys.c    **** 		return STATE_UNFINISHED;
 8102              		.loc 1 2439 2 is_stmt 1 view .LVU2565
2439:src/keys.c    **** 		return STATE_UNFINISHED;
 8103              		.loc 1 2439 5 is_stmt 0 view .LVU2566
 8104 0db4 0028     		cmp	r0, #0
 8105 0db6 00F09685 		beq	.L1164
 8106              	.L680:
2442:src/keys.c    **** 		State2.digval = ch;
 8107              		.loc 1 2442 2 is_stmt 1 view .LVU2567
2442:src/keys.c    **** 		State2.digval = ch;
 8108              		.loc 1 2442 12 is_stmt 0 view .LVU2568
 8109 0dba 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2442:src/keys.c    **** 		State2.digval = ch;
 8110              		.loc 1 2442 5 view .LVU2569
 8111 0dbe 002B     		cmp	r3, #0
 8112 0dc0 00F03185 		beq	.L1165
2446:src/keys.c    **** 		State2.digval2 = ch;
 8113              		.loc 1 2446 9 is_stmt 1 view .LVU2570
2446:src/keys.c    **** 		State2.digval2 = ch;
 8114              		.loc 1 2446 12 is_stmt 0 view .LVU2571
 8115 0dc4 012B     		cmp	r3, #1
 8116 0dc6 00F0BB87 		beq	.L1166
2451:src/keys.c    **** 
 8117              		.loc 1 2451 2 is_stmt 1 view .LVU2572
 8118              	.LBB866:
 8119              	.LBI866:
2384:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 8120              		.loc 1 2384 13 view .LVU2573
 8121              	.LBB867:
2386:src/keys.c    **** 	if (! State2.alphas )
 8122              		.loc 1 2386 2 view .LVU2574
2386:src/keys.c    **** 	if (! State2.alphas )
 8123              		.loc 1 2386 15 is_stmt 0 view .LVU2575
 8124 0dca 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2387:src/keys.c    **** 		State2.alphashift = 0;
 8125              		.loc 1 2387 6 view .LVU2576
 8126 0dce 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2386:src/keys.c    **** 	if (! State2.alphas )
 8127              		.loc 1 2386 15 view .LVU2577
 8128 0dd2 6FF3C302 		bfc	r2, #3, #1
 8129 0dd6 88F81520 		strb	r2, [r8, #21]
2387:src/keys.c    **** 		State2.alphashift = 0;
 8130              		.loc 1 2387 2 is_stmt 1 view .LVU2578
2387:src/keys.c    **** 		State2.alphashift = 0;
 8131              		.loc 1 2387 5 is_stmt 0 view .LVU2579
 8132 0dda 13F00802 		ands	r2, r3, #8
2388:src/keys.c    **** }
 8133              		.loc 1 2388 3 is_stmt 1 view .LVU2580
2388:src/keys.c    **** }
 8134              		.loc 1 2388 21 is_stmt 0 view .LVU2581
 8135 0dde 04BF     		itt	eq
ARM GAS  /tmp/ccGwaFaD.s 			page 242


 8136 0de0 62F30413 		bfieq	r3, r2, #4, #1
 8137 0de4 88F81630 		strbeq	r3, [r8, #22]
 8138              	.LVL681:
 8139              	.L686:
2388:src/keys.c    **** }
 8140              		.loc 1 2388 21 view .LVU2582
 8141              	.LBE867:
 8142              	.LBE866:
2454:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8143              		.loc 1 2454 2 is_stmt 1 view .LVU2583
2456:src/keys.c    **** }
 8144              		.loc 1 2456 2 view .LVU2584
2454:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8145              		.loc 1 2454 21 is_stmt 0 view .LVU2585
 8146 0de8 98F81FB0 		ldrb	fp, [r8, #31]	@ zero_extendqisi2
2455:src/keys.c    **** 	return opcode;
 8147              		.loc 1 2455 17 view .LVU2586
 8148 0dec B8F80820 		ldrh	r2, [r8, #8]
2455:src/keys.c    **** 	return opcode;
 8149              		.loc 1 2455 34 view .LVU2587
 8150 0df0 98F80A30 		ldrb	r3, [r8, #10]	@ zero_extendqisi2
2454:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8151              		.loc 1 2454 29 view .LVU2588
 8152 0df4 4FEA0B2B 		lsl	fp, fp, #8
2454:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8153              		.loc 1 2454 18 view .LVU2589
 8154 0df8 0BF5704B 		add	fp, fp, #61440
2455:src/keys.c    **** 	return opcode;
 8155              		.loc 1 2455 9 view .LVU2590
 8156 0dfc 9344     		add	fp, fp, r2
2455:src/keys.c    **** 	return opcode;
 8157              		.loc 1 2455 25 view .LVU2591
 8158 0dfe 0BEB034B 		add	fp, fp, r3, lsl #16
2454:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8159              		.loc 1 2454 9 view .LVU2592
 8160 0e02 0BEB006B 		add	fp, fp, r0, lsl #24
2456:src/keys.c    **** }
 8161              		.loc 1 2456 9 view .LVU2593
 8162 0e06 FFF71BBB 		b	.L595
 8163              	.LVL682:
 8164              	.L1143:
2456:src/keys.c    **** }
 8165              		.loc 1 2456 9 view .LVU2594
 8166              	.LBE877:
 8167              	.LBE885:
 8168              	.LBB886:
 8169              	.LBB750:
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8170              		.loc 1 1345 44 is_stmt 1 view .LVU2595
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8171              		.loc 1 1345 52 is_stmt 0 view .LVU2596
 8172 0e0a 0120     		movs	r0, #1
 8173 0e0c FFF7FEFF 		bl	gtodot_digit
 8174              	.LVL683:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8175              		.loc 1 1391 2 is_stmt 1 view .LVU2597
 8176              	.LBE750:
ARM GAS  /tmp/ccGwaFaD.s 			page 243


 8177              	.LBE886:
2859:src/keys.c    **** 
 8178              		.loc 1 2859 10 is_stmt 0 view .LVU2598
 8179 0e10 4FF0330B 		mov	fp, #51
 8180 0e14 3268     		ldr	r2, [r6]
 8181 0e16 FFF74CB9 		b	.L565
 8182              	.LVL684:
 8183              	.L1160:
2899:src/keys.c    **** 		if (is_bad_cmdline())
 8184              		.loc 1 2899 2 is_stmt 1 view .LVU2599
2899:src/keys.c    **** 		if (is_bad_cmdline())
 8185              		.loc 1 2899 5 is_stmt 0 view .LVU2600
 8186 0e1a BBF1000F 		cmp	fp, #0
 8187 0e1e 7FF431AF 		bne	.L661
 8188 0e22 FFF747BA 		b	.L675
 8189              	.LVL685:
 8190              	.L1144:
 8191              	.LBB887:
 8192              	.LBB751:
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8193              		.loc 1 1346 44 is_stmt 1 view .LVU2601
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8194              		.loc 1 1346 52 is_stmt 0 view .LVU2602
 8195 0e26 0220     		movs	r0, #2
 8196 0e28 FFF7FEFF 		bl	gtodot_digit
 8197              	.LVL686:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8198              		.loc 1 1391 2 is_stmt 1 view .LVU2603
 8199              	.LBE751:
 8200              	.LBE887:
2859:src/keys.c    **** 
 8201              		.loc 1 2859 10 is_stmt 0 view .LVU2604
 8202 0e2c 4FF0330B 		mov	fp, #51
 8203 0e30 3268     		ldr	r2, [r6]
 8204 0e32 FFF73EB9 		b	.L565
 8205              	.LVL687:
 8206              	.L629:
 8207              	.LBB888:
 8208              	.LBB732:
1946:src/keys.c    **** 	}
 8209              		.loc 1 1946 3 is_stmt 1 view .LVU2605
1946:src/keys.c    **** 	}
 8210              		.loc 1 1946 10 is_stmt 0 view .LVU2606
 8211 0e36 0AF12000 		add	r0, r10, #32
 8212 0e3a 42EA0020 		orr	r0, r2, r0, lsl #8
 8213 0e3e 8346     		mov	fp, r0
 8214              	.LVL688:
1946:src/keys.c    **** 	}
 8215              		.loc 1 1946 10 view .LVU2607
 8216 0e40 FFF770BB 		b	.L622
 8217              	.LVL689:
 8218              	.L1157:
1946:src/keys.c    **** 	}
 8219              		.loc 1 1946 10 view .LVU2608
 8220              	.LBE732:
 8221              	.LBE888:
 8222              	.LBB889:
ARM GAS  /tmp/ccGwaFaD.s 			page 244


 8223              	.LBB824:
1301:src/keys.c    **** 
 8224              		.loc 1 1301 3 is_stmt 1 view .LVU2609
1301:src/keys.c    **** 
 8225              		.loc 1 1301 25 is_stmt 0 view .LVU2610
 8226 0e44 894A     		ldr	r2, .L1210+8
 8227 0e46 0AEB4303 		add	r3, r10, r3, lsl #1
 8228 0e4a 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8229              	.LVL690:
1301:src/keys.c    **** 
 8230              		.loc 1 1301 25 view .LVU2611
 8231 0e4e FFF7F7BA 		b	.L595
 8232              	.LVL691:
 8233              	.L1154:
1301:src/keys.c    **** 
 8234              		.loc 1 1301 25 view .LVU2612
 8235              	.LBE824:
 8236              	.LBE889:
 8237              	.LBB890:
 8238              	.LBB792:
2504:src/keys.c    **** 			n = -2;
 8239              		.loc 1 2504 3 is_stmt 1 view .LVU2613
2504:src/keys.c    **** 			n = -2;
 8240              		.loc 1 2504 6 is_stmt 0 view .LVU2614
 8241 0e52 023B     		subs	r3, r3, #2
 8242              	.LVL692:
2505:src/keys.c    **** 	}
 8243              		.loc 1 2505 6 view .LVU2615
 8244 0e54 9342     		cmp	r3, r2
 8245 0e56 D4BF     		ite	le
 8246 0e58 1A46     		movle	r2, r3
 8247              	.LVL693:
2505:src/keys.c    **** 	}
 8248              		.loc 1 2505 6 view .LVU2616
 8249 0e5a 6FF00102 		mvngt	r2, #1
 8250 0e5e 8CE6     		b	.L644
 8251              	.LVL694:
 8252              	.L1145:
2505:src/keys.c    **** 	}
 8253              		.loc 1 2505 6 view .LVU2617
 8254              	.LBE792:
 8255              	.LBE890:
 8256              	.LBB891:
 8257              	.LBB752:
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8258              		.loc 1 1347 44 is_stmt 1 view .LVU2618
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8259              		.loc 1 1347 52 is_stmt 0 view .LVU2619
 8260 0e60 0320     		movs	r0, #3
 8261 0e62 FFF7FEFF 		bl	gtodot_digit
 8262              	.LVL695:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8263              		.loc 1 1391 2 is_stmt 1 view .LVU2620
 8264              	.LBE752:
 8265              	.LBE891:
2859:src/keys.c    **** 
 8266              		.loc 1 2859 10 is_stmt 0 view .LVU2621
ARM GAS  /tmp/ccGwaFaD.s 			page 245


 8267 0e66 4FF0330B 		mov	fp, #51
 8268 0e6a 3268     		ldr	r2, [r6]
 8269 0e6c FFF721B9 		b	.L565
 8270              	.LVL696:
 8271              	.L1159:
 8272              	.LBB892:
 8273              	.LBB668:
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 8274              		.loc 1 266 74 view .LVU2622
 8275 0e70 D8F81430 		ldr	r3, [r8, #20]
 8276 0e74 7E4A     		ldr	r2, .L1210+12
 8277 0e76 1342     		tst	r3, r2
 8278 0e78 3FF404AF 		beq	.L661
 269:src/keys.c    ****     /*
 8279              		.loc 1 269 3 is_stmt 1 view .LVU2623
 269:src/keys.c    ****     /*
 8280              		.loc 1 269 23 is_stmt 0 view .LVU2624
 8281 0e7c 7D4A     		ldr	r2, .L1210+16
 269:src/keys.c    ****     /*
 8282              		.loc 1 269 6 view .LVU2625
 8283 0e7e 1342     		tst	r3, r2
 8284 0e80 3FF4DAA9 		beq	.L894
 8285 0e84 B7E6     		b	.L663
 8286              	.LVL697:
 8287              	.L913:
 8288              	.LBB662:
 325:src/keys.c    **** #ifndef WINGUI
 8289              		.loc 1 325 8 view .LVU2626
 8290 0e86 7C4B     		ldr	r3, .L1210+20
 331:src/keys.c    ****   }
 8291              		.loc 1 331 9 view .LVU2627
 8292 0e88 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 8293              		.loc 1 327 27 view .LVU2628
 8294 0e8a 4FF0010C 		mov	ip, #1
 8295 0e8e FFF7E2B9 		b	.L666
 8296              	.LVL698:
 8297              	.L639:
 327:src/keys.c    **** #else
 8298              		.loc 1 327 27 view .LVU2629
 8299 0e92 3268     		ldr	r2, [r6]
 8300              	.LBE662:
 8301              	.LBE668:
 8302              	.LBE892:
 8303              	.LBB893:
 8304              	.LBB733:
1970:src/keys.c    **** 
 8305              		.loc 1 1970 10 view .LVU2630
 8306 0e94 4FF0330B 		mov	fp, #51
 8307              	.LVL699:
1970:src/keys.c    **** 
 8308              		.loc 1 1970 10 view .LVU2631
 8309 0e98 FFF70BB9 		b	.L565
 8310              	.LVL700:
 8311              	.L638:
1965:src/keys.c    **** 		return STATE_UNFINISHED;
 8312              		.loc 1 1965 3 is_stmt 1 view .LVU2632
ARM GAS  /tmp/ccGwaFaD.s 			page 246


 8313              	.LBB726:
 8314              	.LBI726:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 8315              		.loc 1 506 13 view .LVU2633
 8316              	.LBB727:
 507:src/keys.c    **** 		return;
 8317              		.loc 1 507 2 view .LVU2634
 507:src/keys.c    **** 		return;
 8318              		.loc 1 507 6 is_stmt 0 view .LVU2635
 8319 0e9c FFF7FEFF 		bl	is_bad_cmdline
 8320              	.LVL701:
 507:src/keys.c    **** 		return;
 8321              		.loc 1 507 5 view .LVU2636
 8322 0ea0 0446     		mov	r4, r0
 8323 0ea2 0028     		cmp	r0, #0
 8324 0ea4 40F0A983 		bne	.L1167
 8325 0ea8 5FFA8AF0 		uxtb	r0, r10
 8326 0eac FFF7FEFF 		bl	init_arg.part.0
 8327              	.LVL702:
 8328              	.LBE727:
 8329              	.LBE726:
 8330              	.LBE733:
 8331              	.LBE893:
 8332              	.LBE1236:
 8333              	.LBE1308:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 8334              		.loc 1 2979 7 view .LVU2637
 8335 0eb0 2546     		mov	r5, r4
 8336 0eb2 3268     		ldr	r2, [r6]
 8337              	.LBB1309:
 8338              	.LBB1237:
 8339              	.LBB894:
 8340              	.LBB734:
1966:src/keys.c    **** 
 8341              		.loc 1 1966 10 view .LVU2638
 8342 0eb4 4FF0330B 		mov	fp, #51
 8343              	.LVL703:
1966:src/keys.c    **** 
 8344              		.loc 1 1966 10 view .LVU2639
 8345 0eb8 FFF7FBB8 		b	.L565
 8346              	.LVL704:
 8347              	.L676:
1966:src/keys.c    **** 
 8348              		.loc 1 1966 10 view .LVU2640
 8349              	.LBE734:
 8350              	.LBE894:
2902:src/keys.c    **** 		init_cat( cat );
 8351              		.loc 1 2902 3 is_stmt 1 view .LVU2641
 8352 0ebc FFF7FEFF 		bl	init_cat
 8353              	.LVL705:
2903:src/keys.c    **** 		return STATE_UNFINISHED;
 8354              		.loc 1 2903 3 view .LVU2642
 8355 0ec0 5846     		mov	r0, fp
 8356 0ec2 FFF7FEFF 		bl	init_cat
 8357              	.LVL706:
2904:src/keys.c    **** 	}
 8358              		.loc 1 2904 3 view .LVU2643
ARM GAS  /tmp/ccGwaFaD.s 			page 247


 8359              	.LBE1237:
 8360              	.LBE1309:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 8361              		.loc 1 2979 7 is_stmt 0 view .LVU2644
 8362 0ec6 2546     		mov	r5, r4
 8363 0ec8 3268     		ldr	r2, [r6]
 8364              	.LBB1310:
 8365              	.LBB1238:
2904:src/keys.c    **** 	}
 8366              		.loc 1 2904 10 view .LVU2645
 8367 0eca 4FF0330B 		mov	fp, #51
 8368 0ece FFF7F0B8 		b	.L565
 8369              	.LVL707:
 8370              	.L908:
 8371              	.LBB895:
 8372              	.LBB793:
 8373              	.LBB787:
2512:src/keys.c    **** 		if (nn <= 9)
 8374              		.loc 1 2512 7 view .LVU2646
 8375 0ed2 0A46     		mov	r2, r1
 8376              	.LVL708:
2512:src/keys.c    **** 		if (nn <= 9)
 8377              		.loc 1 2512 7 view .LVU2647
 8378 0ed4 51E6     		b	.L644
 8379              	.LVL709:
 8380              	.L1158:
2512:src/keys.c    **** 		if (nn <= 9)
 8381              		.loc 1 2512 7 view .LVU2648
 8382              	.LBE787:
 8383              	.LBE793:
 8384              	.LBE895:
 8385              	.LBB896:
 8386              	.LBB825:
1304:src/keys.c    **** 
 8387              		.loc 1 1304 3 is_stmt 1 view .LVU2649
 8388 0ed6 694B     		ldr	r3, .L1210+24
 8389              	.LBB818:
 8390              	.LBB819:
 652:src/keys.c    **** }
 8391              		.loc 1 652 15 is_stmt 0 view .LVU2650
 8392 0ed8 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 8393 0edc 3268     		ldr	r2, [r6]
 8394              	.LBE819:
 8395              	.LBE818:
1304:src/keys.c    **** 
 8396              		.loc 1 1304 3 view .LVU2651
 8397 0ede 03EB4403 		add	r3, r3, r4, lsl #1
1306:src/keys.c    **** }
 8398              		.loc 1 1306 9 view .LVU2652
 8399 0ee2 4FF0330B 		mov	fp, #51
 8400              	.LVL710:
1304:src/keys.c    **** 
 8401              		.loc 1 1304 3 view .LVU2653
 8402 0ee6 13F80A30 		ldrb	r3, [r3, r10]	@ zero_extendqisi2
 8403              	.LVL711:
 8404              	.LBB821:
 8405              	.LBI818:
ARM GAS  /tmp/ccGwaFaD.s 			page 248


 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 8406              		.loc 1 651 13 is_stmt 1 view .LVU2654
 8407              	.LBB820:
 652:src/keys.c    **** }
 8408              		.loc 1 652 2 view .LVU2655
 652:src/keys.c    **** }
 8409              		.loc 1 652 15 is_stmt 0 view .LVU2656
 8410 0eea 9942     		cmp	r1, r3
 8411 0eec 08BF     		it	eq
 8412 0eee 0023     		moveq	r3, #0
 8413              	.LVL712:
 652:src/keys.c    **** }
 8414              		.loc 1 652 15 view .LVU2657
 8415 0ef0 88F81130 		strb	r3, [r8, #17]
 653:src/keys.c    **** 
 8416              		.loc 1 653 1 view .LVU2658
 8417 0ef4 FFF7DDB8 		b	.L565
 8418              	.LVL713:
 8419              	.L1128:
 653:src/keys.c    **** 
 8420              		.loc 1 653 1 view .LVU2659
 8421              	.LBE820:
 8422              	.LBE821:
 8423              	.LBE825:
 8424              	.LBE896:
2914:src/keys.c    **** 
 8425              		.loc 1 2914 3 is_stmt 1 view .LVU2660
 8426              	.LBB897:
 8427              	.LBI897:
2574:src/keys.c    **** 	unsigned int pc = State2.digval;
 8428              		.loc 1 2574 12 view .LVU2661
 8429              	.LBB898:
2575:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8430              		.loc 1 2575 2 view .LVU2662
2577:src/keys.c    **** 	const int opcode = getprog(pc);
 8431              		.loc 1 2577 27 is_stmt 0 view .LVU2663
 8432 0ef8 262C     		cmp	r4, #38
2575:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8433              		.loc 1 2575 15 view .LVU2664
 8434 0efa B8F808A0 		ldrh	r10, [r8, #8]
 8435              	.LVL714:
2576:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8436              		.loc 1 2576 2 is_stmt 1 view .LVU2665
2577:src/keys.c    **** 	const int opcode = getprog(pc);
 8437              		.loc 1 2577 27 is_stmt 0 view .LVU2666
 8438 0efe 00F01283 		beq	.L918
 8439              	.LVL715:
 8440              	.LBB899:
 8441              	.LBI899:
 200:src/keys.c    **** {
 8442              		.loc 1 200 14 is_stmt 1 view .LVU2667
 8443              	.LBB900:
 202:src/keys.c    ****     // K00 - K05
 8444              		.loc 1 202 3 view .LVU2668
 224:src/keys.c    **** }
 8445              		.loc 1 224 3 view .LVU2669
 8446              	.LBB901:
ARM GAS  /tmp/ccGwaFaD.s 			page 249


 8447              	.LBI901:
 121:src/keys.c    **** {
 8448              		.loc 1 121 12 view .LVU2670
 8449              	.LBB902:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8450              		.loc 1 123 2 view .LVU2671
 133:src/keys.c    **** }
 8451              		.loc 1 133 2 view .LVU2672
 133:src/keys.c    **** }
 8452              		.loc 1 133 23 is_stmt 0 view .LVU2673
 8453 0f02 584B     		ldr	r3, .L1210
 8454              	.LBE902:
 8455              	.LBE901:
 224:src/keys.c    **** }
 8456              		.loc 1 224 28 view .LVU2674
 8457 0f04 5E4A     		ldr	r2, .L1210+28
 8458              	.LBB904:
 8459              	.LBB903:
 133:src/keys.c    **** }
 8460              		.loc 1 133 23 view .LVU2675
 8461 0f06 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8462              	.LBE903:
 8463              	.LBE904:
 224:src/keys.c    **** }
 8464              		.loc 1 224 10 view .LVU2676
 8465 0f08 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8466              	.LBE900:
 8467              	.LBE899:
2577:src/keys.c    **** 	const int opcode = getprog(pc);
 8468              		.loc 1 2577 27 view .LVU2677
 8469 0f0c 2BF0800B 		bic	fp, fp, #128
 8470              	.L695:
 8471              	.LVL716:
2578:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8472              		.loc 1 2578 2 is_stmt 1 view .LVU2678
2578:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8473              		.loc 1 2578 21 is_stmt 0 view .LVU2679
 8474 0f10 5046     		mov	r0, r10
 8475 0f12 FFF7FEFF 		bl	getprog
 8476              	.LVL717:
2579:src/keys.c    **** 	const int direct = State2.runmode;
 8477              		.loc 1 2579 2 is_stmt 1 view .LVU2680
2579:src/keys.c    **** 	const int direct = State2.runmode;
 8478              		.loc 1 2579 20 is_stmt 0 view .LVU2681
 8479 0f16 00F47040 		and	r0, r0, #61440
 8480              	.LVL718:
2579:src/keys.c    **** 	const int direct = State2.runmode;
 8481              		.loc 1 2579 63 view .LVU2682
 8482 0f1a B0F5704F 		cmp	r0, #61440
 8483 0f1e 00F0D384 		beq	.L1168
 8484 0f22 0022     		movs	r2, #0
 8485              	.L696:
 8486              	.LVL719:
2580:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8487              		.loc 1 2580 2 is_stmt 1 view .LVU2683
2580:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8488              		.loc 1 2580 27 is_stmt 0 view .LVU2684
ARM GAS  /tmp/ccGwaFaD.s 			page 250


 8489 0f24 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8490 0f28 0192     		str	r2, [sp, #4]
 8491              	.LVL720:
2580:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8492              		.loc 1 2580 27 view .LVU2685
 8493 0f2a C3F38013 		ubfx	r3, r3, #6, #1
 8494 0f2e 0093     		str	r3, [sp]
 8495              	.LVL721:
2581:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8496              		.loc 1 2581 2 is_stmt 1 view .LVU2686
 8497              	.LBB905:
 8498              	.LBI905:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8499              		.loc 1 104 13 view .LVU2687
 8500              	.LBE905:
 8501              	.LBE898:
 8502              	.LBE897:
 8503              	.LBE1238:
 8504              	.LBE1310:
 105:src/keys.c    **** }
 8505              		.loc 1 105 2 view .LVU2688
 8506              	.LBB1311:
 8507              	.LBB1239:
 8508              	.LBB932:
 8509              	.LBB924:
 8510              	.LBB912:
 8511              	.LBB906:
 8512              	.LBI906:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 8513              		.loc 1 94 20 view .LVU2689
 8514              	.LBB907:
  95:src/keys.c    **** 	State2.shifts = shift;
 8515              		.loc 1 95 2 view .LVU2690
 8516              	.LBB908:
 8517              	.LBI908:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8518              		.loc 1 86 13 view .LVU2691
 8519              	.LBB909:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8520              		.loc 1 87 2 view .LVU2692
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8521              		.loc 1 87 18 is_stmt 0 view .LVU2693
 8522 0f30 FFF7FEFF 		bl	shift_down
 8523              	.LVL722:
  88:src/keys.c    **** }
 8524              		.loc 1 88 2 is_stmt 1 view .LVU2694
  88:src/keys.c    **** }
 8525              		.loc 1 88 52 is_stmt 0 view .LVU2695
 8526 0f34 019A     		ldr	r2, [sp, #4]
 8527 0f36 0346     		mov	r3, r0
 8528 0f38 08B9     		cbnz	r0, .L697
 8529 0f3a 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8530              	.L697:
 8531              	.LVL723:
  88:src/keys.c    **** }
 8532              		.loc 1 88 52 view .LVU2696
 8533              	.LBE909:
ARM GAS  /tmp/ccGwaFaD.s 			page 251


 8534              	.LBE908:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8535              		.loc 1 96 2 is_stmt 1 view .LVU2697
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8536              		.loc 1 96 16 is_stmt 0 view .LVU2698
 8537 0f3e 0021     		movs	r1, #0
 8538              	.LBE907:
 8539              	.LBE906:
 8540              	.LBE912:
2584:src/keys.c    **** 		// Digits take you to that segment
 8541              		.loc 1 2584 5 view .LVU2699
 8542 0f40 BBF1020F 		cmp	fp, #2
 8543              	.LBB913:
 8544              	.LBB911:
 8545              	.LBB910:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8546              		.loc 1 96 16 view .LVU2700
 8547 0f44 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 8548              		.loc 1 98 2 is_stmt 1 view .LVU2701
 8549              	.LVL724:
  98:src/keys.c    **** }
 8550              		.loc 1 98 2 is_stmt 0 view .LVU2702
 8551              	.LBE910:
 8552              	.LBE911:
 8553              	.LBE913:
2582:src/keys.c    **** 
 8554              		.loc 1 2582 2 is_stmt 1 view .LVU2703
2584:src/keys.c    **** 		// Digits take you to that segment
 8555              		.loc 1 2584 2 view .LVU2704
2584:src/keys.c    **** 		// Digits take you to that segment
 8556              		.loc 1 2584 5 is_stmt 0 view .LVU2705
 8557 0f48 40F26C85 		bls	.L1169
2593:src/keys.c    **** 
 8558              		.loc 1 2593 2 is_stmt 1 view .LVU2706
2593:src/keys.c    **** 
 8559              		.loc 1 2593 12 is_stmt 0 view .LVU2707
 8560 0f4c 44EA0323 		orr	r3, r4, r3, lsl #8
 8561              	.LVL725:
2593:src/keys.c    **** 
 8562              		.loc 1 2593 2 view .LVU2708
 8563 0f50 272B     		cmp	r3, #39
 8564 0f52 00F39780 		bgt	.L700
 8565 0f56 042B     		cmp	r3, #4
 8566 0f58 4ADD     		ble	.L702
 8567 0f5a 053B     		subs	r3, r3, #5
 8568 0f5c 222B     		cmp	r3, #34
 8569 0f5e 47D8     		bhi	.L702
 8570 0f60 DFE803F0 		tbb	[pc, r3]
 8571              	.L709:
 8572 0f64 3D       		.byte	(.L714-.L709)/2
 8573 0f65 4B       		.byte	(.L713-.L709)/2
 8574 0f66 4B       		.byte	(.L713-.L709)/2
 8575 0f67 46       		.byte	(.L702-.L709)/2
 8576 0f68 46       		.byte	(.L702-.L709)/2
 8577 0f69 46       		.byte	(.L702-.L709)/2
 8578 0f6a 46       		.byte	(.L702-.L709)/2
ARM GAS  /tmp/ccGwaFaD.s 			page 252


 8579 0f6b 12       		.byte	(.L921-.L709)/2
 8580 0f6c 46       		.byte	(.L702-.L709)/2
 8581 0f6d 46       		.byte	(.L702-.L709)/2
 8582 0f6e 46       		.byte	(.L702-.L709)/2
 8583 0f6f 71       		.byte	(.L712-.L709)/2
 8584 0f70 46       		.byte	(.L702-.L709)/2
 8585 0f71 66       		.byte	(.L711-.L709)/2
 8586 0f72 46       		.byte	(.L702-.L709)/2
 8587 0f73 46       		.byte	(.L702-.L709)/2
 8588 0f74 46       		.byte	(.L702-.L709)/2
 8589 0f75 46       		.byte	(.L702-.L709)/2
 8590 0f76 46       		.byte	(.L702-.L709)/2
 8591 0f77 31       		.byte	(.L710-.L709)/2
 8592 0f78 46       		.byte	(.L702-.L709)/2
 8593 0f79 46       		.byte	(.L702-.L709)/2
 8594 0f7a 46       		.byte	(.L702-.L709)/2
 8595 0f7b 46       		.byte	(.L702-.L709)/2
 8596 0f7c 46       		.byte	(.L702-.L709)/2
 8597 0f7d 46       		.byte	(.L702-.L709)/2
 8598 0f7e 46       		.byte	(.L702-.L709)/2
 8599 0f7f 46       		.byte	(.L702-.L709)/2
 8600 0f80 46       		.byte	(.L702-.L709)/2
 8601 0f81 46       		.byte	(.L702-.L709)/2
 8602 0f82 46       		.byte	(.L702-.L709)/2
 8603 0f83 46       		.byte	(.L702-.L709)/2
 8604 0f84 46       		.byte	(.L702-.L709)/2
 8605 0f85 46       		.byte	(.L702-.L709)/2
 8606 0f86 52       		.byte	(.L708-.L709)/2
 8607 0f87 00       		.p2align 1
 8608              	.L921:
2582:src/keys.c    **** 
 8609              		.loc 1 2582 6 view .LVU2709
 8610 0f88 4FF0330B 		mov	fp, #51
 8611              	.LVL726:
 8612              	.L706:
2615:src/keys.c    **** 		break;
 8613              		.loc 1 2615 3 is_stmt 1 view .LVU2710
 8614 0f8c 5046     		mov	r0, r10
 8615 0f8e FFF7FEFF 		bl	set_pc
 8616              	.LVL727:
2616:src/keys.c    **** 
 8617              		.loc 1 2616 3 view .LVU2711
 8618              	.L718:
2669:src/keys.c    **** 	State2.labellist = 0;
 8619              		.loc 1 2669 2 view .LVU2712
2670:src/keys.c    **** 	return check_confirm(op);
 8620              		.loc 1 2670 19 is_stmt 0 view .LVU2713
 8621 0f92 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2669:src/keys.c    **** 	State2.labellist = 0;
 8622              		.loc 1 2669 16 view .LVU2714
 8623 0f96 0022     		movs	r2, #0
 8624              	.LBB914:
 8625              	.LBB915:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8626              		.loc 1 625 5 view .LVU2715
 8627 0f98 CBF30723 		ubfx	r3, fp, #8, #8
 8628              	.LBE915:
ARM GAS  /tmp/ccGwaFaD.s 			page 253


 8629              	.LBE914:
2670:src/keys.c    **** 	return check_confirm(op);
 8630              		.loc 1 2670 19 view .LVU2716
 8631 0f9c 62F38201 		bfi	r1, r2, #2, #1
 8632              	.LBB920:
 8633              	.LBB916:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8634              		.loc 1 625 5 view .LVU2717
 8635 0fa0 012B     		cmp	r3, #1
 8636              	.LBE916:
 8637              	.LBE920:
2670:src/keys.c    **** 	return check_confirm(op);
 8638              		.loc 1 2670 19 view .LVU2718
 8639 0fa2 88F81710 		strb	r1, [r8, #23]
2669:src/keys.c    **** 	State2.labellist = 0;
 8640              		.loc 1 2669 16 view .LVU2719
 8641 0fa6 A8F80820 		strh	r2, [r8, #8]	@ movhi
2670:src/keys.c    **** 	return check_confirm(op);
 8642              		.loc 1 2670 2 is_stmt 1 view .LVU2720
2671:src/keys.c    **** }
 8643              		.loc 1 2671 2 view .LVU2721
 8644              	.LVL728:
 8645              	.LBB921:
 8646              	.LBI914:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8647              		.loc 1 624 12 view .LVU2722
 8648              	.LBB917:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8649              		.loc 1 625 2 view .LVU2723
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8650              		.loc 1 625 5 is_stmt 0 view .LVU2724
 8651 0faa 7FF449AA 		bne	.L595
 8652              	.LVL729:
 8653              	.L893:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8654              		.loc 1 625 5 view .LVU2725
 8655              	.LBE917:
 8656              	.LBE921:
 8657              	.LBE924:
 8658              	.LBE932:
 8659              	.LBB933:
 8660              	.LBB934:
 8661              	.LBB935:
 8662              	.LBB936:
 8663 0fae 5846     		mov	r0, fp
 8664 0fb0 FFF7FEFF 		bl	check_confirm.part.0
 8665              	.LVL730:
 8666 0fb4 8346     		mov	fp, r0
 8667              	.LVL731:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8668              		.loc 1 625 5 view .LVU2726
 8669 0fb6 FFF743BA 		b	.L595
 8670              	.LVL732:
 8671              	.L703:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8672              		.loc 1 625 5 view .LVU2727
 8673              	.LBE936:
ARM GAS  /tmp/ccGwaFaD.s 			page 254


 8674              	.LBE935:
 8675              	.LBE934:
 8676              	.LBE933:
 8677              	.LBB973:
 8678              	.LBB925:
2600:src/keys.c    **** 	case K_DOWN:				// Find next label
 8679              		.loc 1 2600 3 is_stmt 1 view .LVU2728
2600:src/keys.c    **** 	case K_DOWN:				// Find next label
 8680              		.loc 1 2600 8 is_stmt 0 view .LVU2729
 8681 0fba 5046     		mov	r0, r10
 8682 0fbc 0122     		movs	r2, #1
 8683 0fbe 0021     		movs	r1, #0
 8684 0fc0 FFF7FEFF 		bl	advance_to_next_label
 8685              	.LVL733:
 8686 0fc4 8246     		mov	r10, r0
 8687              	.LVL734:
 8688              	.L710:
2603:src/keys.c    **** 		return STATE_UNFINISHED;
 8689              		.loc 1 2603 3 is_stmt 1 view .LVU2730
2603:src/keys.c    **** 		return STATE_UNFINISHED;
 8690              		.loc 1 2603 19 is_stmt 0 view .LVU2731
 8691 0fc6 0022     		movs	r2, #0
 8692 0fc8 5046     		mov	r0, r10
 8693 0fca 0121     		movs	r1, #1
 8694 0fcc FFF7FEFF 		bl	advance_to_next_label
 8695              	.LVL735:
2604:src/keys.c    **** 
 8696              		.loc 1 2604 10 view .LVU2732
 8697 0fd0 4FF0330B 		mov	fp, #51
 8698              	.LVL736:
2604:src/keys.c    **** 
 8699              		.loc 1 2604 10 view .LVU2733
 8700 0fd4 3268     		ldr	r2, [r6]
2603:src/keys.c    **** 		return STATE_UNFINISHED;
 8701              		.loc 1 2603 17 view .LVU2734
 8702 0fd6 A8F80800 		strh	r0, [r8, #8]	@ movhi
2604:src/keys.c    **** 
 8703              		.loc 1 2604 3 is_stmt 1 view .LVU2735
2604:src/keys.c    **** 
 8704              		.loc 1 2604 10 is_stmt 0 view .LVU2736
 8705 0fda FFF76AB8 		b	.L565
 8706              	.LVL737:
 8707              	.L714:
2633:src/keys.c    **** 		goto xeq_or_gto;
 8708              		.loc 1 2633 3 is_stmt 1 view .LVU2737
2633:src/keys.c    **** 		goto xeq_or_gto;
 8709              		.loc 1 2633 6 is_stmt 0 view .LVU2738
 8710 0fde 02F5007B 		add	fp, r2, #512
 8711              	.LVL738:
2634:src/keys.c    **** 
 8712              		.loc 1 2634 3 is_stmt 1 view .LVU2739
 8713              	.L719:
2639:src/keys.c    **** 			break;
 8714              		.loc 1 2639 3 view .LVU2740
2639:src/keys.c    **** 			break;
 8715              		.loc 1 2639 6 is_stmt 0 view .LVU2741
 8716 0fe2 002A     		cmp	r2, #0
ARM GAS  /tmp/ccGwaFaD.s 			page 255


 8717 0fe4 D5D1     		bne	.L718
 8718              	.LVL739:
 8719              	.L720:
2639:src/keys.c    **** 			break;
 8720              		.loc 1 2639 6 view .LVU2742
 8721 0fe6 3268     		ldr	r2, [r6]
2641:src/keys.c    **** #else
 8722              		.loc 1 2641 10 view .LVU2743
 8723 0fe8 4FF0330B 		mov	fp, #51
 8724 0fec FFF761B8 		b	.L565
 8725              	.LVL740:
 8726              	.L702:
2641:src/keys.c    **** #else
 8727              		.loc 1 2641 10 view .LVU2744
 8728 0ff0 3268     		ldr	r2, [r6]
2667:src/keys.c    **** 	}
 8729              		.loc 1 2667 10 view .LVU2745
 8730 0ff2 4FF0330B 		mov	fp, #51
 8731              	.LVL741:
2667:src/keys.c    **** 	}
 8732              		.loc 1 2667 10 view .LVU2746
 8733 0ff6 FFF75CB8 		b	.L565
 8734              	.LVL742:
 8735              	.L713:
2625:src/keys.c    **** 	  //#endif
 8736              		.loc 1 2625 3 is_stmt 1 view .LVU2747
2625:src/keys.c    **** 	  //#endif
 8737              		.loc 1 2625 38 is_stmt 0 view .LVU2748
 8738 0ffa 062C     		cmp	r4, #6
 8739 0ffc 40F2B11B 		movw	fp, #433
 8740              	.LVL743:
2625:src/keys.c    **** 	  //#endif
 8741              		.loc 1 2625 38 view .LVU2749
 8742 1000 08BF     		it	eq
 8743 1002 4FF4D97B 		moveq	fp, #434
 8744 1006 C1E7     		b	.L706
 8745              	.LVL744:
 8746              	.L708:
2655:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8747              		.loc 1 2655 3 is_stmt 1 view .LVU2750
2655:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8748              		.loc 1 2655 6 is_stmt 0 view .LVU2751
 8749 1008 009B     		ldr	r3, [sp]
 8750 100a 002B     		cmp	r3, #0
 8751 100c EBD0     		beq	.L720
2655:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8752              		.loc 1 2655 14 view .LVU2752
 8753 100e 002A     		cmp	r2, #0
 8754 1010 E9D0     		beq	.L720
2656:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8755              		.loc 1 2656 4 is_stmt 1 view .LVU2753
 8756 1012 5146     		mov	r1, r10
 8757 1014 0120     		movs	r0, #1
 8758 1016 FFF7FEFF 		bl	cmdgtocommon
 8759              	.LVL745:
2657:src/keys.c    **** 			break;
 8760              		.loc 1 2657 4 view .LVU2754
ARM GAS  /tmp/ccGwaFaD.s 			page 256


2658:src/keys.c    **** 		}
 8761              		.loc 1 2658 4 view .LVU2755
2669:src/keys.c    **** 	State2.labellist = 0;
 8762              		.loc 1 2669 2 view .LVU2756
2670:src/keys.c    **** 	return check_confirm(op);
 8763              		.loc 1 2670 19 is_stmt 0 view .LVU2757
 8764 101a 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2669:src/keys.c    **** 	State2.labellist = 0;
 8765              		.loc 1 2669 16 view .LVU2758
 8766 101e 0023     		movs	r3, #0
2670:src/keys.c    **** 	return check_confirm(op);
 8767              		.loc 1 2670 19 view .LVU2759
 8768 1020 63F38202 		bfi	r2, r3, #2, #1
 8769 1024 88F81720 		strb	r2, [r8, #23]
2669:src/keys.c    **** 	State2.labellist = 0;
 8770              		.loc 1 2669 16 view .LVU2760
 8771 1028 A8F80830 		strh	r3, [r8, #8]	@ movhi
2670:src/keys.c    **** 	return check_confirm(op);
 8772              		.loc 1 2670 2 is_stmt 1 view .LVU2761
2671:src/keys.c    **** }
 8773              		.loc 1 2671 2 view .LVU2762
 8774              	.LVL746:
 8775              	.LBB922:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8776              		.loc 1 624 12 view .LVU2763
 8777              	.LBB918:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8778              		.loc 1 625 2 view .LVU2764
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8779              		.loc 1 625 2 is_stmt 0 view .LVU2765
 8780              	.LBE918:
 8781              	.LBE922:
 8782              	.LBE925:
 8783              	.LBE973:
 8784              	.LBE1239:
 8785              	.LBE1311:
3164:src/keys.c    ****     case STATE_SST:
 8786              		.loc 1 3164 5 is_stmt 1 view .LVU2766
 8787 102c FFF7B3B9 		b	.L575
 8788              	.LVL747:
 8789              	.L711:
 8790              	.LBB1312:
 8791              	.LBB1240:
 8792              	.LBB974:
 8793              	.LBB926:
2607:src/keys.c    **** 		return STATE_UNFINISHED;
 8794              		.loc 1 2607 3 view .LVU2767
2607:src/keys.c    **** 		return STATE_UNFINISHED;
 8795              		.loc 1 2607 19 is_stmt 0 view .LVU2768
 8796 1030 5046     		mov	r0, r10
 8797 1032 0021     		movs	r1, #0
 8798 1034 FFF7FEFF 		bl	advance_to_previous_label
 8799              	.LVL748:
2608:src/keys.c    **** 
 8800              		.loc 1 2608 10 view .LVU2769
 8801 1038 4FF0330B 		mov	fp, #51
 8802              	.LVL749:
ARM GAS  /tmp/ccGwaFaD.s 			page 257


2608:src/keys.c    **** 
 8803              		.loc 1 2608 10 view .LVU2770
 8804 103c 3268     		ldr	r2, [r6]
2607:src/keys.c    **** 		return STATE_UNFINISHED;
 8805              		.loc 1 2607 17 view .LVU2771
 8806 103e A8F80800 		strh	r0, [r8, #8]	@ movhi
2608:src/keys.c    **** 
 8807              		.loc 1 2608 3 is_stmt 1 view .LVU2772
2608:src/keys.c    **** 
 8808              		.loc 1 2608 10 is_stmt 0 view .LVU2773
 8809 1042 FFF736B8 		b	.L565
 8810              	.LVL750:
 8811              	.L712:
2669:src/keys.c    **** 	State2.labellist = 0;
 8812              		.loc 1 2669 2 is_stmt 1 view .LVU2774
2670:src/keys.c    **** 	return check_confirm(op);
 8813              		.loc 1 2670 19 is_stmt 0 view .LVU2775
 8814 1046 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 8815 104a 3268     		ldr	r2, [r6]
2669:src/keys.c    **** 	State2.labellist = 0;
 8816              		.loc 1 2669 16 view .LVU2776
 8817 104c 0023     		movs	r3, #0
2670:src/keys.c    **** 	return check_confirm(op);
 8818              		.loc 1 2670 19 view .LVU2777
 8819 104e 63F38201 		bfi	r1, r3, #2, #1
 8820 1052 88F81710 		strb	r1, [r8, #23]
2669:src/keys.c    **** 	State2.labellist = 0;
 8821              		.loc 1 2669 16 view .LVU2778
 8822 1056 A8F80830 		strh	r3, [r8, #8]	@ movhi
2670:src/keys.c    **** 	return check_confirm(op);
 8823              		.loc 1 2670 2 is_stmt 1 view .LVU2779
2671:src/keys.c    **** }
 8824              		.loc 1 2671 2 view .LVU2780
 8825              	.LVL751:
 8826              	.LBB923:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8827              		.loc 1 624 12 view .LVU2781
 8828              	.LBB919:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8829              		.loc 1 625 2 view .LVU2782
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8830              		.loc 1 625 2 is_stmt 0 view .LVU2783
 8831              	.LBE919:
 8832              	.LBE923:
 8833              	.LBE926:
 8834              	.LBE974:
 8835              	.LBE1240:
 8836              	.LBE1312:
3164:src/keys.c    ****     case STATE_SST:
 8837              		.loc 1 3164 5 is_stmt 1 view .LVU2784
 8838              	.LBB1313:
 8839              	.LBB1241:
 8840              	.LBB975:
 8841              	.LBB927:
2582:src/keys.c    **** 
 8842              		.loc 1 2582 6 is_stmt 0 view .LVU2785
 8843 105a 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccGwaFaD.s 			page 258


 8844              	.LVL752:
2582:src/keys.c    **** 
 8845              		.loc 1 2582 6 view .LVU2786
 8846 105e FFF728B8 		b	.L565
 8847              	.L1211:
 8848 1062 00BF     		.align	2
 8849              	.L1210:
 8850 1064 00000000 		.word	.LANCHOR1
 8851 1068 00000000 		.word	.LANCHOR9
 8852 106c 00000000 		.word	.LANCHOR14
 8853 1070 000A4000 		.word	4196864
 8854 1074 00080800 		.word	526336
 8855 1078 00000000 		.word	.LANCHOR11
 8856 107c 00000000 		.word	.LANCHOR15
 8857 1080 00000000 		.word	.LANCHOR0
 8858              	.LVL753:
 8859              	.L700:
2593:src/keys.c    **** 
 8860              		.loc 1 2593 2 view .LVU2787
 8861 1084 B3F58C7F 		cmp	r3, #280
 8862 1088 41DC     		bgt	.L715
 8863 108a B3F5827F 		cmp	r3, #260
 8864 108e AFDD     		ble	.L702
 8865 1090 6FF48271 		mvn	r1, #260
 8866 1094 0B44     		add	r3, r3, r1
 8867 1096 132B     		cmp	r3, #19
 8868 1098 AAD8     		bhi	.L702
 8869 109a 01A1     		adr	r1, .L704
 8870 109c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8871              		.p2align 2
 8872              	.L704:
 8873 10a0 F7100000 		.word	.L707+1
 8874 10a4 F10F0000 		.word	.L702+1
 8875 10a8 F10F0000 		.word	.L702+1
 8876 10ac F10F0000 		.word	.L702+1
 8877 10b0 F10F0000 		.word	.L702+1
 8878 10b4 F10F0000 		.word	.L702+1
 8879 10b8 F10F0000 		.word	.L702+1
 8880 10bc F10F0000 		.word	.L702+1
 8881 10c0 F10F0000 		.word	.L702+1
 8882 10c4 F10F0000 		.word	.L702+1
 8883 10c8 F10F0000 		.word	.L702+1
 8884 10cc F1100000 		.word	.L920+1
 8885 10d0 F10F0000 		.word	.L702+1
 8886 10d4 FD100000 		.word	.L705+1
 8887 10d8 F10F0000 		.word	.L702+1
 8888 10dc F10F0000 		.word	.L702+1
 8889 10e0 F10F0000 		.word	.L702+1
 8890 10e4 F10F0000 		.word	.L702+1
 8891 10e8 F10F0000 		.word	.L702+1
 8892 10ec BB0F0000 		.word	.L703+1
 8893              		.p2align 1
 8894              	.L920:
 8895 10f0 40F2431B 		movw	fp, #323
 8896              	.LVL754:
2593:src/keys.c    **** 
 8897              		.loc 1 2593 2 view .LVU2788
ARM GAS  /tmp/ccGwaFaD.s 			page 259


 8898 10f4 4AE7     		b	.L706
 8899              	.LVL755:
 8900              	.L707:
2637:src/keys.c    **** 	xeq_or_gto:
 8901              		.loc 1 2637 3 is_stmt 1 view .LVU2789
2637:src/keys.c    **** 	xeq_or_gto:
 8902              		.loc 1 2637 6 is_stmt 0 view .LVU2790
 8903 10f6 02F5407B 		add	fp, r2, #768
 8904              	.LVL756:
2637:src/keys.c    **** 	xeq_or_gto:
 8905              		.loc 1 2637 6 view .LVU2791
 8906 10fa 72E7     		b	.L719
 8907              	.LVL757:
 8908              	.L705:
2596:src/keys.c    **** 		goto next;
 8909              		.loc 1 2596 3 is_stmt 1 view .LVU2792
2596:src/keys.c    **** 		goto next;
 8910              		.loc 1 2596 8 is_stmt 0 view .LVU2793
 8911 10fc 5046     		mov	r0, r10
 8912 10fe 0121     		movs	r1, #1
 8913 1100 FFF7FEFF 		bl	advance_to_previous_label
 8914              	.LVL758:
 8915 1104 0121     		movs	r1, #1
 8916 1106 FFF7FEFF 		bl	advance_to_previous_label
 8917              	.LVL759:
 8918 110a 8246     		mov	r10, r0
 8919              	.LVL760:
2597:src/keys.c    **** 
 8920              		.loc 1 2597 3 is_stmt 1 view .LVU2794
 8921 110c 5BE7     		b	.L710
 8922              	.LVL761:
 8923              	.L715:
2593:src/keys.c    **** 
 8924              		.loc 1 2593 2 is_stmt 0 view .LVU2795
 8925 110e 40F22732 		movw	r2, #807
 8926 1112 9342     		cmp	r3, r2
 8927 1114 7FF46CAF 		bne	.L702
2663:src/keys.c    **** 		goto set_pc_and_exit;
 8928              		.loc 1 2663 3 is_stmt 1 view .LVU2796
2663:src/keys.c    **** 		goto set_pc_and_exit;
 8929              		.loc 1 2663 18 is_stmt 0 view .LVU2797
 8930 1118 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8931 111c 61F38613 		bfi	r3, r1, #6, #1
 8932 1120 88F81630 		strb	r3, [r8, #22]
2664:src/keys.c    **** 
 8933              		.loc 1 2664 3 is_stmt 1 view .LVU2798
2582:src/keys.c    **** 
 8934              		.loc 1 2582 6 is_stmt 0 view .LVU2799
 8935 1124 4FF0330B 		mov	fp, #51
 8936              	.LVL762:
2664:src/keys.c    **** 
 8937              		.loc 1 2664 3 view .LVU2800
 8938 1128 30E7     		b	.L706
 8939              	.LVL763:
 8940              	.L1129:
2664:src/keys.c    **** 
 8941              		.loc 1 2664 3 view .LVU2801
ARM GAS  /tmp/ccGwaFaD.s 			page 260


 8942              	.LBE927:
 8943              	.LBE975:
2917:src/keys.c    **** 
 8944              		.loc 1 2917 3 is_stmt 1 view .LVU2802
 8945              	.LBB976:
 8946              	.LBI976:
2705:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8947              		.loc 1 2705 12 view .LVU2803
 8948              	.LBB977:
2706:src/keys.c    **** 	enum shifts shift = reset_shift();
 8949              		.loc 1 2706 2 view .LVU2804
 8950              	.LBB978:
 8951              	.LBI978:
 200:src/keys.c    **** {
 8952              		.loc 1 200 14 view .LVU2805
 8953              	.LBB979:
 202:src/keys.c    ****     // K00 - K05
 8954              		.loc 1 202 3 view .LVU2806
 224:src/keys.c    **** }
 8955              		.loc 1 224 3 view .LVU2807
 8956              	.LBB980:
 8957              	.LBI980:
 121:src/keys.c    **** {
 8958              		.loc 1 121 12 view .LVU2808
 8959              	.LBB981:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8960              		.loc 1 123 2 view .LVU2809
 133:src/keys.c    **** }
 8961              		.loc 1 133 2 view .LVU2810
 133:src/keys.c    **** }
 8962              		.loc 1 133 23 is_stmt 0 view .LVU2811
 8963 112a A44B     		ldr	r3, .L1212
 8964              	.LBE981:
 8965              	.LBE980:
 224:src/keys.c    **** }
 8966              		.loc 1 224 28 view .LVU2812
 8967 112c A44A     		ldr	r2, .L1212+4
 8968              	.LBB983:
 8969              	.LBB982:
 133:src/keys.c    **** }
 8970              		.loc 1 133 23 view .LVU2813
 8971 112e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8972              	.LBE982:
 8973              	.LBE983:
 224:src/keys.c    **** }
 8974              		.loc 1 224 10 view .LVU2814
 8975 1130 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8976              	.LBE979:
 8977              	.LBE978:
 8978              	.LBB984:
 8979              	.LBB985:
 8980              	.LBB986:
 8981              	.LBB987:
 8982              	.LBB988:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8983              		.loc 1 87 18 view .LVU2815
 8984 1134 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccGwaFaD.s 			page 261


 8985              	.LVL764:
 8986              	.LBE988:
 8987              	.LBE987:
 8988              	.LBE986:
 8989              	.LBE985:
 8990              	.LBE984:
2706:src/keys.c    **** 	enum shifts shift = reset_shift();
 8991              		.loc 1 2706 15 view .LVU2816
 8992 1138 2BF0800B 		bic	fp, fp, #128
 8993              	.LVL765:
2707:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 8994              		.loc 1 2707 2 is_stmt 1 view .LVU2817
 8995              	.LBB997:
 8996              	.LBI984:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8997              		.loc 1 104 13 view .LVU2818
 8998              	.LBE997:
 8999              	.LBE977:
 9000              	.LBE976:
 9001              	.LBE1241:
 9002              	.LBE1313:
 105:src/keys.c    **** }
 9003              		.loc 1 105 2 view .LVU2819
 9004              	.LBB1314:
 9005              	.LBB1242:
 9006              	.LBB1012:
 9007              	.LBB1004:
 9008              	.LBB998:
 9009              	.LBB994:
 9010              	.LBI985:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9011              		.loc 1 94 20 view .LVU2820
 9012              	.LBB991:
  95:src/keys.c    **** 	State2.shifts = shift;
 9013              		.loc 1 95 2 view .LVU2821
 9014              	.LBB990:
 9015              	.LBI987:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9016              		.loc 1 86 13 view .LVU2822
 9017              	.LBB989:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9018              		.loc 1 87 2 view .LVU2823
  88:src/keys.c    **** }
 9019              		.loc 1 88 2 view .LVU2824
  88:src/keys.c    **** }
 9020              		.loc 1 88 52 is_stmt 0 view .LVU2825
 9021 113c 8146     		mov	r9, r0
 9022 113e 08B9     		cbnz	r0, .L722
 9023 1140 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 9024              	.L722:
 9025              	.LVL766:
  88:src/keys.c    **** }
 9026              		.loc 1 88 52 view .LVU2826
 9027              	.LBE989:
 9028              	.LBE990:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9029              		.loc 1 96 2 is_stmt 1 view .LVU2827
ARM GAS  /tmp/ccGwaFaD.s 			page 262


 9030              	.LBE991:
 9031              	.LBE994:
 9032              	.LBE998:
2708:src/keys.c    **** 	const int g_max = global_regs();
 9033              		.loc 1 2708 31 is_stmt 0 view .LVU2828
 9034 1144 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9035              	.LBB999:
 9036              	.LBB995:
 9037              	.LBB992:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9038              		.loc 1 96 16 view .LVU2829
 9039 1148 0022     		movs	r2, #0
 9040              	.LBE992:
 9041              	.LBE995:
 9042              	.LBE999:
2708:src/keys.c    **** 	const int g_max = global_regs();
 9043              		.loc 1 2708 46 view .LVU2830
 9044 114a DB07     		lsls	r3, r3, #31
 9045              	.LBB1000:
 9046              	.LBB996:
 9047              	.LBB993:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9048              		.loc 1 96 16 view .LVU2831
 9049 114c 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9050              		.loc 1 98 2 is_stmt 1 view .LVU2832
 9051              	.LVL767:
  98:src/keys.c    **** }
 9052              		.loc 1 98 2 is_stmt 0 view .LVU2833
 9053              	.LBE993:
 9054              	.LBE996:
 9055              	.LBE1000:
2708:src/keys.c    **** 	const int g_max = global_regs();
 9056              		.loc 1 2708 2 is_stmt 1 view .LVU2834
2708:src/keys.c    **** 	const int g_max = global_regs();
 9057              		.loc 1 2708 46 is_stmt 0 view .LVU2835
 9058 1150 00F15882 		bmi	.L1170
 9059 1154 4FF0700A 		mov	r10, #112
 9060              	.LVL768:
 9061              	.L723:
2709:src/keys.c    **** 
 9062              		.loc 1 2709 2 is_stmt 1 view .LVU2836
2709:src/keys.c    **** 
 9063              		.loc 1 2709 20 is_stmt 0 view .LVU2837
 9064 1158 FFF7FEFF 		bl	global_regs
 9065              	.LVL769:
2711:src/keys.c    **** 		if (local_regs())
 9066              		.loc 1 2711 2 is_stmt 1 view .LVU2838
2711:src/keys.c    **** 		if (local_regs())
 9067              		.loc 1 2711 5 is_stmt 0 view .LVU2839
 9068 115c BBF1700F 		cmp	fp, #112
 9069 1160 00F04C85 		beq	.L1171
2717:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9070              		.loc 1 2717 7 is_stmt 1 view .LVU2840
2717:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9071              		.loc 1 2717 10 is_stmt 0 view .LVU2841
 9072 1164 BBF1090F 		cmp	fp, #9
ARM GAS  /tmp/ccGwaFaD.s 			page 263


 9073 1168 40F26783 		bls	.L1172
2724:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9074              		.loc 1 2724 7 is_stmt 1 view .LVU2842
2724:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9075              		.loc 1 2724 29 is_stmt 0 view .LVU2843
 9076 116c 09F1FF33 		add	r3, r9, #-1
2724:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9077              		.loc 1 2724 10 view .LVU2844
 9078 1170 DBB2     		uxtb	r3, r3
 9079 1172 012B     		cmp	r3, #1
 9080 1174 40F24A82 		bls	.L1173
 9081              	.L731:
2728:src/keys.c    **** 		State2.digval = n;
 9082              		.loc 1 2728 7 is_stmt 1 view .LVU2845
2728:src/keys.c    **** 		State2.digval = n;
 9083              		.loc 1 2728 10 is_stmt 0 view .LVU2846
 9084 1178 BBF17F0F 		cmp	fp, #127
 9085 117c 40F07583 		bne	.L1174
2733:src/keys.c    **** 	case K_DOWN:
 9086              		.loc 1 2733 2 is_stmt 1 view .LVU2847
 9087 1180 073C     		subs	r4, r4, #7
 9088 1182 112C     		cmp	r4, #17
 9089 1184 21D8     		bhi	.L881
 9090 1186 DFE804F0 		tbb	[pc, r4]
 9091              	.L882:
 9092 118a 09       		.byte	(.L744-.L882)/2
 9093 118b 20       		.byte	(.L881-.L882)/2
 9094 118c 20       		.byte	(.L881-.L882)/2
 9095 118d 20       		.byte	(.L881-.L882)/2
 9096 118e 20       		.byte	(.L881-.L882)/2
 9097 118f 50       		.byte	(.L743-.L882)/2
 9098 1190 20       		.byte	(.L881-.L882)/2
 9099 1191 20       		.byte	(.L881-.L882)/2
 9100 1192 20       		.byte	(.L881-.L882)/2
 9101 1193 41       		.byte	(.L741-.L882)/2
 9102 1194 20       		.byte	(.L881-.L882)/2
 9103 1195 5A       		.byte	(.L737-.L882)/2
 9104 1196 20       		.byte	(.L881-.L882)/2
 9105 1197 20       		.byte	(.L881-.L882)/2
 9106 1198 20       		.byte	(.L881-.L882)/2
 9107 1199 20       		.byte	(.L881-.L882)/2
 9108 119a 20       		.byte	(.L881-.L882)/2
 9109 119b 25       		.byte	(.L734-.L882)/2
 9110              		.p2align 1
 9111              	.L744:
2772:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9112              		.loc 1 2772 3 view .LVU2848
2772:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9113              		.loc 1 2772 6 is_stmt 0 view .LVU2849
 9114 119c B9F1000F 		cmp	r9, #0
 9115 11a0 40F0E083 		bne	.L745
2776:src/keys.c    **** #endif
 9116              		.loc 1 2776 4 is_stmt 1 view .LVU2850
2776:src/keys.c    **** #endif
 9117              		.loc 1 2776 8 is_stmt 0 view .LVU2851
 9118 11a4 B8F808B0 		ldrh	fp, [r8, #8]
 9119              	.LVL770:
ARM GAS  /tmp/ccGwaFaD.s 			page 264


2778:src/keys.c    **** 			State2.digval = 0;
 9120              		.loc 1 2778 4 is_stmt 1 view .LVU2852
2778:src/keys.c    **** 			State2.digval = 0;
 9121              		.loc 1 2778 24 is_stmt 0 view .LVU2853
 9122 11a8 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2780:src/keys.c    **** 			return n;
 9123              		.loc 1 2780 19 view .LVU2854
 9124 11ac 88F80A90 		strb	r9, [r8, #10]
2778:src/keys.c    **** 			State2.digval = 0;
 9125              		.loc 1 2778 24 view .LVU2855
 9126 11b0 69F3C303 		bfi	r3, r9, #3, #1
2781:src/keys.c    **** 		}
 9127              		.loc 1 2781 11 view .LVU2856
 9128 11b4 4BF4285B 		orr	fp, fp, #10752
 9129              	.LVL771:
2778:src/keys.c    **** 			State2.digval = 0;
 9130              		.loc 1 2778 24 view .LVU2857
 9131 11b8 88F81730 		strb	r3, [r8, #23]
2779:src/keys.c    **** 			State2.digval2 = 0;
 9132              		.loc 1 2779 4 is_stmt 1 view .LVU2858
2780:src/keys.c    **** 			return n;
 9133              		.loc 1 2780 4 view .LVU2859
2781:src/keys.c    **** 		}
 9134              		.loc 1 2781 4 view .LVU2860
2779:src/keys.c    **** 			State2.digval2 = 0;
 9135              		.loc 1 2779 18 is_stmt 0 view .LVU2861
 9136 11bc A8F80890 		strh	r9, [r8, #8]	@ movhi
 9137 11c0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9138 11c4 5846     		mov	r0, fp
 9139              	.LVL772:
2781:src/keys.c    **** 		}
 9140              		.loc 1 2781 11 view .LVU2862
 9141 11c6 FFF7ADB9 		b	.L622
 9142              	.LVL773:
 9143              	.L881:
2781:src/keys.c    **** 		}
 9144              		.loc 1 2781 11 view .LVU2863
 9145 11ca 3268     		ldr	r2, [r6]
2784:src/keys.c    **** 	}
 9146              		.loc 1 2784 10 view .LVU2864
 9147 11cc 4FF0330B 		mov	fp, #51
 9148              	.LVL774:
2784:src/keys.c    **** 	}
 9149              		.loc 1 2784 10 view .LVU2865
 9150 11d0 FEF76FBF 		b	.L565
 9151              	.LVL775:
 9152              	.L734:
2735:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9153              		.loc 1 2735 3 is_stmt 1 view .LVU2866
2735:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9154              		.loc 1 2735 13 is_stmt 0 view .LVU2867
 9155 11d4 B8F80830 		ldrh	r3, [r8, #8]
2735:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9156              		.loc 1 2735 6 view .LVU2868
 9157 11d8 002B     		cmp	r3, #0
 9158 11da 00F09B84 		beq	.L735
2736:src/keys.c    **** 				State2.digval = global_regs();
ARM GAS  /tmp/ccGwaFaD.s 			page 265


 9159              		.loc 1 2736 4 is_stmt 1 view .LVU2869
2736:src/keys.c    **** 				State2.digval = global_regs();
 9160              		.loc 1 2736 8 is_stmt 0 view .LVU2870
 9161 11de 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2736:src/keys.c    **** 				State2.digval = global_regs();
 9162              		.loc 1 2736 7 view .LVU2871
 9163 11e2 D207     		lsls	r2, r2, #31
 9164 11e4 02D4     		bmi	.L736
2736:src/keys.c    **** 				State2.digval = global_regs();
 9165              		.loc 1 2736 23 view .LVU2872
 9166 11e6 642B     		cmp	r3, #100
 9167 11e8 00F09A84 		beq	.L1175
 9168              	.LVL776:
 9169              	.L736:
2738:src/keys.c    **** 		}
 9170              		.loc 1 2738 4 is_stmt 1 view .LVU2873
 9171 11ec B8F80830 		ldrh	r3, [r8, #8]
 9172 11f0 013B     		subs	r3, r3, #1
 9173              	.L1095:
2738:src/keys.c    **** 		}
 9174              		.loc 1 2738 4 is_stmt 0 view .LVU2874
 9175 11f2 A8F80830 		strh	r3, [r8, #8]	@ movhi
 9176              	.LVL777:
 9177              	.L727:
2790:src/keys.c    **** 	return STATE_UNFINISHED;
 9178              		.loc 1 2790 2 is_stmt 1 view .LVU2875
2790:src/keys.c    **** 	return STATE_UNFINISHED;
 9179              		.loc 1 2790 16 is_stmt 0 view .LVU2876
 9180 11f6 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 9181 11fa 3268     		ldr	r2, [r6]
 9182 11fc 6FF3C503 		bfc	r3, #3, #3
 9183 1200 88F81430 		strb	r3, [r8, #20]
2791:src/keys.c    **** }
 9184              		.loc 1 2791 2 is_stmt 1 view .LVU2877
2791:src/keys.c    **** }
 9185              		.loc 1 2791 9 is_stmt 0 view .LVU2878
 9186 1204 4FF0330B 		mov	fp, #51
 9187              	.LVL778:
2791:src/keys.c    **** }
 9188              		.loc 1 2791 9 view .LVU2879
 9189 1208 FEF753BF 		b	.L565
 9190              	.LVL779:
 9191              	.L741:
2762:src/keys.c    **** 			return STATE_UNFINISHED;
 9192              		.loc 1 2762 3 is_stmt 1 view .LVU2880
2762:src/keys.c    **** 			return STATE_UNFINISHED;
 9193              		.loc 1 2762 7 is_stmt 0 view .LVU2881
 9194 120c 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2762:src/keys.c    **** 			return STATE_UNFINISHED;
 9195              		.loc 1 2762 6 view .LVU2882
 9196 1210 13F02002 		ands	r2, r3, #32
 9197 1214 40F0A683 		bne	.L745
2764:src/keys.c    **** 
 9198              		.loc 1 2764 3 is_stmt 1 view .LVU2883
2786:src/keys.c    **** 	State2.digval = 0;
 9199              		.loc 1 2786 2 view .LVU2884
2786:src/keys.c    **** 	State2.digval = 0;
ARM GAS  /tmp/ccGwaFaD.s 			page 266


 9200              		.loc 1 2786 22 is_stmt 0 view .LVU2885
 9201 1218 62F3C303 		bfi	r3, r2, #3, #1
 9202 121c 88F81730 		strb	r3, [r8, #23]
2787:src/keys.c    **** 	State2.digval2 = 0;
 9203              		.loc 1 2787 2 is_stmt 1 view .LVU2886
2787:src/keys.c    **** 	State2.digval2 = 0;
 9204              		.loc 1 2787 16 is_stmt 0 view .LVU2887
 9205 1220 A8F80820 		strh	r2, [r8, #8]	@ movhi
2788:src/keys.c    **** reset_window:
 9206              		.loc 1 2788 2 is_stmt 1 view .LVU2888
2788:src/keys.c    **** reset_window:
 9207              		.loc 1 2788 17 is_stmt 0 view .LVU2889
 9208 1224 88F80A20 		strb	r2, [r8, #10]
 9209 1228 E5E7     		b	.L727
 9210              	.L743:
2767:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9211              		.loc 1 2767 3 is_stmt 1 view .LVU2890
2767:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9212              		.loc 1 2767 6 is_stmt 0 view .LVU2891
 9213 122a B9F1010F 		cmp	r9, #1
 9214 122e B5D1     		bne	.L744
2768:src/keys.c    **** 			goto reset_window;
 9215              		.loc 1 2768 4 is_stmt 1 view .LVU2892
2768:src/keys.c    **** 			goto reset_window;
 9216              		.loc 1 2768 25 is_stmt 0 view .LVU2893
 9217 1230 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9218 1234 43F00403 		orr	r3, r3, #4
 9219 1238 88F81630 		strb	r3, [r8, #22]
2769:src/keys.c    **** 		}
 9220              		.loc 1 2769 4 is_stmt 1 view .LVU2894
 9221 123c DBE7     		b	.L727
 9222              	.L737:
2745:src/keys.c    **** 			State2.digval++;
 9223              		.loc 1 2745 3 view .LVU2895
2745:src/keys.c    **** 			State2.digval++;
 9224              		.loc 1 2745 13 is_stmt 0 view .LVU2896
 9225 123e B8F80830 		ldrh	r3, [r8, #8]
2745:src/keys.c    **** 			State2.digval++;
 9226              		.loc 1 2745 27 view .LVU2897
 9227 1242 0AF1FF3A 		add	r10, r10, #-1
 9228              	.LVL780:
2745:src/keys.c    **** 			State2.digval++;
 9229              		.loc 1 2745 6 view .LVU2898
 9230 1246 5345     		cmp	r3, r10
 9231 1248 80F27684 		bge	.L738
2746:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9232              		.loc 1 2746 4 is_stmt 1 view .LVU2899
2747:src/keys.c    **** 				State2.digval = regX_idx;
 9233              		.loc 1 2747 8 is_stmt 0 view .LVU2900
 9234 124c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2746:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9235              		.loc 1 2746 17 view .LVU2901
 9236 1250 0133     		adds	r3, r3, #1
 9237 1252 9CB2     		uxth	r4, r3
2747:src/keys.c    **** 				State2.digval = regX_idx;
 9238              		.loc 1 2747 7 view .LVU2902
 9239 1254 D307     		lsls	r3, r2, #31
ARM GAS  /tmp/ccGwaFaD.s 			page 267


2746:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9240              		.loc 1 2746 17 view .LVU2903
 9241 1256 A8F80840 		strh	r4, [r8, #8]	@ movhi
2747:src/keys.c    **** 				State2.digval = regX_idx;
 9242              		.loc 1 2747 4 is_stmt 1 view .LVU2904
2747:src/keys.c    **** 				State2.digval = regX_idx;
 9243              		.loc 1 2747 7 is_stmt 0 view .LVU2905
 9244 125a CCD4     		bmi	.L727
2747:src/keys.c    **** 				State2.digval = regX_idx;
 9245              		.loc 1 2747 43 view .LVU2906
 9246 125c FFF7FEFF 		bl	global_regs
 9247              	.LVL781:
2747:src/keys.c    **** 				State2.digval = regX_idx;
 9248              		.loc 1 2747 23 view .LVU2907
 9249 1260 8442     		cmp	r4, r0
 9250 1262 C8D1     		bne	.L727
2748:src/keys.c    **** 		}
 9251              		.loc 1 2748 5 is_stmt 1 view .LVU2908
2748:src/keys.c    **** 		}
 9252              		.loc 1 2748 19 is_stmt 0 view .LVU2909
 9253 1264 6423     		movs	r3, #100
 9254 1266 A8F80830 		strh	r3, [r8, #8]	@ movhi
 9255 126a C4E7     		b	.L727
 9256              	.LVL782:
 9257              	.L616:
2748:src/keys.c    **** 		}
 9258              		.loc 1 2748 19 view .LVU2910
 9259              	.LBE1004:
 9260              	.LBE1012:
 9261              	.LBB1013:
 9262              	.LBB773:
1261:src/keys.c    **** #endif
 9263              		.loc 1 1261 4 is_stmt 1 view .LVU2911
1261:src/keys.c    **** #endif
 9264              		.loc 1 1261 18 view .LVU2912
1261:src/keys.c    **** #endif
 9265              		.loc 1 1261 18 is_stmt 0 view .LVU2913
 9266 126c 89F00109 		eor	r9, r9, #1
 9267              	.LVL783:
1261:src/keys.c    **** #endif
 9268              		.loc 1 1261 18 view .LVU2914
 9269 1270 36E4     		b	.L623
 9270              	.LVL784:
 9271              	.L1146:
1261:src/keys.c    **** #endif
 9272              		.loc 1 1261 18 view .LVU2915
 9273              	.LBE773:
 9274              	.LBE1013:
 9275              	.LBB1014:
 9276              	.LBB753:
1348:src/keys.c    **** #endif
 9277              		.loc 1 1348 44 is_stmt 1 view .LVU2916
1348:src/keys.c    **** #endif
 9278              		.loc 1 1348 52 is_stmt 0 view .LVU2917
 9279 1272 0420     		movs	r0, #4
 9280 1274 FFF7FEFF 		bl	gtodot_digit
 9281              	.LVL785:
ARM GAS  /tmp/ccGwaFaD.s 			page 268


1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9282              		.loc 1 1391 2 is_stmt 1 view .LVU2918
 9283              	.LBE753:
 9284              	.LBE1014:
2859:src/keys.c    **** 
 9285              		.loc 1 2859 10 is_stmt 0 view .LVU2919
 9286 1278 4FF0330B 		mov	fp, #51
 9287 127c 3268     		ldr	r2, [r6]
 9288 127e FEF718BF 		b	.L565
 9289              	.LVL786:
 9290              	.L1147:
 9291              	.LBB1015:
 9292              	.LBB754:
1352:src/keys.c    **** 		goto fin;
 9293              		.loc 1 1352 3 is_stmt 1 view .LVU2920
 9294              	.LBB746:
 9295              	.LBI746:
1324:src/keys.c    **** 	const int code = 100 + n;
 9296              		.loc 1 1324 12 view .LVU2921
 9297              	.LBB747:
1325:src/keys.c    **** 	unsigned int pc = state_pc();
 9298              		.loc 1 1325 2 view .LVU2922
1326:src/keys.c    **** 
 9299              		.loc 1 1326 2 view .LVU2923
1326:src/keys.c    **** 
 9300              		.loc 1 1326 20 is_stmt 0 view .LVU2924
 9301 1282 DFF84091 		ldr	r9, .L1212+8
 9302 1286 D9F80030 		ldr	r3, [r9]
 9303              	.LVL787:
1326:src/keys.c    **** 
 9304              		.loc 1 1326 15 view .LVU2925
 9305 128a B3F8E007 		ldrh	r0, [r3, #2016]
 9306              	.LVL788:
1328:src/keys.c    **** 		pc = 1;
 9307              		.loc 1 1328 2 is_stmt 1 view .LVU2926
1328:src/keys.c    **** 		pc = 1;
 9308              		.loc 1 1328 5 is_stmt 0 view .LVU2927
 9309 128e 830B     		lsrs	r3, r0, #14
1329:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9310              		.loc 1 1329 6 view .LVU2928
 9311 1290 032B     		cmp	r3, #3
 9312              	.LVL789:
1330:src/keys.c    **** 	if (pc > 0)
 9313              		.loc 1 1330 2 is_stmt 1 view .LVU2929
1330:src/keys.c    **** 	if (pc > 0)
 9314              		.loc 1 1330 7 is_stmt 0 view .LVU2930
 9315 1292 08BF     		it	eq
 9316 1294 0120     		moveq	r0, #1
 9317              	.LVL790:
1330:src/keys.c    **** 	if (pc > 0)
 9318              		.loc 1 1330 7 view .LVU2931
 9319 1296 04F16401 		add	r1, r4, #100
 9320              	.LVL791:
1330:src/keys.c    **** 	if (pc > 0)
 9321              		.loc 1 1330 7 view .LVU2932
 9322 129a 0322     		movs	r2, #3
 9323              	.LVL792:
ARM GAS  /tmp/ccGwaFaD.s 			page 269


1330:src/keys.c    **** 	if (pc > 0)
 9324              		.loc 1 1330 7 view .LVU2933
 9325 129c FFF7FEFF 		bl	find_label_from
 9326              	.LVL793:
1331:src/keys.c    **** 		return pc;
 9327              		.loc 1 1331 2 is_stmt 1 view .LVU2934
1331:src/keys.c    **** 		return pc;
 9328              		.loc 1 1331 5 is_stmt 0 view .LVU2935
 9329 12a0 0028     		cmp	r0, #0
 9330 12a2 7FF43AAD 		bne	.L607
1333:src/keys.c    **** }
 9331              		.loc 1 1333 2 is_stmt 1 view .LVU2936
1333:src/keys.c    **** }
 9332              		.loc 1 1333 9 is_stmt 0 view .LVU2937
 9333 12a6 D9F80030 		ldr	r3, [r9]
 9334 12aa B3F8E007 		ldrh	r0, [r3, #2016]
 9335              	.LVL794:
1333:src/keys.c    **** }
 9336              		.loc 1 1333 9 view .LVU2938
 9337              	.LBE747:
 9338              	.LBE746:
1353:src/keys.c    **** 	}
 9339              		.loc 1 1353 3 is_stmt 1 view .LVU2939
 9340 12ae 34E5     		b	.L607
 9341              	.LVL795:
 9342              	.L1130:
1353:src/keys.c    **** 	}
 9343              		.loc 1 1353 3 is_stmt 0 view .LVU2940
 9344              	.LBE754:
 9345              	.LBE1015:
2920:src/keys.c    **** 
 9346              		.loc 1 2920 3 is_stmt 1 view .LVU2941
 9347              	.LBB1016:
 9348              	.LBI1016:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9349              		.loc 1 104 13 view .LVU2942
 9350              	.LBE1016:
 9351              	.LBE1242:
 9352              	.LBE1314:
 105:src/keys.c    **** }
 9353              		.loc 1 105 2 view .LVU2943
 9354              	.LBB1315:
 9355              	.LBB1243:
 9356              	.LBB1023:
 9357              	.LBB1017:
 9358              	.LBI1017:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9359              		.loc 1 94 20 view .LVU2944
 9360              	.LBB1018:
  95:src/keys.c    **** 	State2.shifts = shift;
 9361              		.loc 1 95 2 view .LVU2945
 9362              	.LBB1019:
 9363              	.LBI1019:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9364              		.loc 1 86 13 view .LVU2946
 9365              	.LBB1020:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccGwaFaD.s 			page 270


 9366              		.loc 1 87 2 view .LVU2947
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9367              		.loc 1 87 18 is_stmt 0 view .LVU2948
 9368 12b0 FFF7FEFF 		bl	shift_down
 9369              	.LVL796:
  88:src/keys.c    **** }
 9370              		.loc 1 88 2 is_stmt 1 view .LVU2949
  88:src/keys.c    **** }
 9371              		.loc 1 88 52 is_stmt 0 view .LVU2950
 9372 12b4 0146     		mov	r1, r0
 9373 12b6 08B9     		cbnz	r0, .L747
 9374 12b8 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9375              	.L747:
 9376              	.LVL797:
  88:src/keys.c    **** }
 9377              		.loc 1 88 52 view .LVU2951
 9378              	.LBE1020:
 9379              	.LBE1019:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9380              		.loc 1 96 2 is_stmt 1 view .LVU2952
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9381              		.loc 1 96 16 is_stmt 0 view .LVU2953
 9382 12bc 0022     		movs	r2, #0
 9383              	.LBE1018:
 9384              	.LBE1017:
 9385              	.LBE1023:
2920:src/keys.c    **** 
 9386              		.loc 1 2920 10 view .LVU2954
 9387 12be 2046     		mov	r0, r4
 9388              	.LBB1024:
 9389              	.LBB1022:
 9390              	.LBB1021:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9391              		.loc 1 96 16 view .LVU2955
 9392 12c0 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9393              		.loc 1 98 2 is_stmt 1 view .LVU2956
 9394              	.LVL798:
  98:src/keys.c    **** }
 9395              		.loc 1 98 2 is_stmt 0 view .LVU2957
 9396              	.LBE1021:
 9397              	.LBE1022:
 9398              	.LBE1024:
2920:src/keys.c    **** 
 9399              		.loc 1 2920 10 view .LVU2958
 9400 12c4 FFF7FEFF 		bl	process_catalogue
 9401              	.LVL799:
2920:src/keys.c    **** 
 9402              		.loc 1 2920 10 view .LVU2959
 9403 12c8 8346     		mov	fp, r0
 9404 12ca FFF7B9B8 		b	.L595
 9405              	.LVL800:
 9406              	.L941:
 9407              	.LBB1025:
 9408              	.LBB735:
1954:src/keys.c    **** 	}
 9409              		.loc 1 1954 18 view .LVU2960
ARM GAS  /tmp/ccGwaFaD.s 			page 271


 9410 12ce 2723     		movs	r3, #39
1954:src/keys.c    **** 	}
 9411              		.loc 1 1954 47 view .LVU2961
 9412 12d0 9B44     		add	fp, fp, r3
 9413              	.LVL801:
1954:src/keys.c    **** 	}
 9414              		.loc 1 1954 47 view .LVU2962
 9415 12d2 FFF7B5B8 		b	.L595
 9416              	.LVL802:
 9417              	.L942:
1954:src/keys.c    **** 	}
 9418              		.loc 1 1954 18 view .LVU2963
 9419 12d6 1E23     		movs	r3, #30
1954:src/keys.c    **** 	}
 9420              		.loc 1 1954 47 view .LVU2964
 9421 12d8 9B44     		add	fp, fp, r3
 9422              	.LVL803:
1954:src/keys.c    **** 	}
 9423              		.loc 1 1954 47 view .LVU2965
 9424 12da FFF7B1B8 		b	.L595
 9425              	.LVL804:
 9426              	.L1155:
1954:src/keys.c    **** 	}
 9427              		.loc 1 1954 47 view .LVU2966
 9428              	.LBE735:
 9429              	.LBE1025:
 9430              	.LBB1026:
 9431              	.LBB794:
2508:src/keys.c    **** 		return STATE_UNFINISHED;
 9432              		.loc 1 2508 3 is_stmt 1 view .LVU2967
 9433 12de 3268     		ldr	r2, [r6]
 9434              	.LVL805:
2508:src/keys.c    **** 		return STATE_UNFINISHED;
 9435              		.loc 1 2508 17 is_stmt 0 view .LVU2968
 9436 12e0 88F80C00 		strb	r0, [r8, #12]
2509:src/keys.c    **** 	} 
 9437              		.loc 1 2509 3 is_stmt 1 view .LVU2969
 9438              	.LBE794:
 9439              	.LBE1026:
2868:src/keys.c    **** 
 9440              		.loc 1 2868 10 is_stmt 0 view .LVU2970
 9441 12e4 4FF0330B 		mov	fp, #51
 9442              	.LBB1027:
 9443              	.LBB795:
2509:src/keys.c    **** 	} 
 9444              		.loc 1 2509 10 view .LVU2971
 9445 12e8 FEF7E3BE 		b	.L565
 9446              	.LVL806:
 9447              	.L1148:
2509:src/keys.c    **** 	} 
 9448              		.loc 1 2509 10 view .LVU2972
 9449              	.LBE795:
 9450              	.LBE1027:
 9451              	.LBB1028:
 9452              	.LBB755:
1357:src/keys.c    **** 		goto fin;
 9453              		.loc 1 1357 3 is_stmt 1 view .LVU2973
ARM GAS  /tmp/ccGwaFaD.s 			page 272


1357:src/keys.c    **** 		goto fin;
 9454              		.loc 1 1357 11 is_stmt 0 view .LVU2974
 9455 12ec 354B     		ldr	r3, .L1212+8
 9456              	.LVL807:
1357:src/keys.c    **** 		goto fin;
 9457              		.loc 1 1357 11 view .LVU2975
 9458 12ee 1B68     		ldr	r3, [r3]
1357:src/keys.c    **** 		goto fin;
 9459              		.loc 1 1357 9 view .LVU2976
 9460 12f0 5888     		ldrh	r0, [r3, #2]
 9461              	.LVL808:
1358:src/keys.c    **** 	}
 9462              		.loc 1 1358 3 is_stmt 1 view .LVU2977
 9463 12f2 12E5     		b	.L607
 9464              	.LVL809:
 9465              	.L1150:
1366:src/keys.c    **** 			goto fin2;
 9466              		.loc 1 1366 3 view .LVU2978
1366:src/keys.c    **** 			goto fin2;
 9467              		.loc 1 1366 13 is_stmt 0 view .LVU2979
 9468 12f4 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 9469              	.LVL810:
1366:src/keys.c    **** 			goto fin2;
 9470              		.loc 1 1366 6 view .LVU2980
 9471 12f8 002B     		cmp	r3, #0
 9472 12fa 3FF410AD 		beq	.L611
1369:src/keys.c    **** 			State2.digval /= 10;
 9473              		.loc 1 1369 4 is_stmt 1 view .LVU2981
1369:src/keys.c    **** 			State2.digval /= 10;
 9474              		.loc 1 1369 19 is_stmt 0 view .LVU2982
 9475 12fe 013B     		subs	r3, r3, #1
 9476 1300 88F80B30 		strb	r3, [r8, #11]
1370:src/keys.c    **** 		}
 9477              		.loc 1 1370 4 is_stmt 1 view .LVU2983
1370:src/keys.c    **** 		}
 9478              		.loc 1 1370 18 is_stmt 0 view .LVU2984
 9479 1304 0A21     		movs	r1, #10
 9480 1306 B8F80830 		ldrh	r3, [r8, #8]
 9481 130a 3268     		ldr	r2, [r6]
 9482              	.LVL811:
1370:src/keys.c    **** 		}
 9483              		.loc 1 1370 18 view .LVU2985
 9484 130c B3FBF1F3 		udiv	r3, r3, r1
 9485              	.LBE755:
 9486              	.LBE1028:
2859:src/keys.c    **** 
 9487              		.loc 1 2859 10 view .LVU2986
 9488 1310 4FF0330B 		mov	fp, #51
 9489              	.LBB1029:
 9490              	.LBB756:
1370:src/keys.c    **** 		}
 9491              		.loc 1 1370 18 view .LVU2987
 9492 1314 A8F80830 		strh	r3, [r8, #8]	@ movhi
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9493              		.loc 1 1391 2 is_stmt 1 view .LVU2988
 9494 1318 FEF7CBBE 		b	.L565
 9495              	.LVL812:
ARM GAS  /tmp/ccGwaFaD.s 			page 273


 9496              	.L1131:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9497              		.loc 1 1391 2 is_stmt 0 view .LVU2989
 9498              	.LBE756:
 9499              	.LBE1029:
2924:src/keys.c    **** #else
 9500              		.loc 1 2924 3 is_stmt 1 view .LVU2990
 9501              	.LBB1030:
 9502              	.LBI1030:
1404:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 9503              		.loc 1 1404 12 view .LVU2991
 9504              	.LBB1031:
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9505              		.loc 1 1405 2 view .LVU2992
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9506              		.loc 1 1405 33 is_stmt 0 view .LVU2993
 9507 131c 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 9508              	.LBB1032:
 9509              	.LBB1033:
 9510              	.LBB1034:
 9511              	.LBB1035:
 9512              	.LBB1036:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9513              		.loc 1 87 18 view .LVU2994
 9514 1320 FFF7FEFF 		bl	shift_down
 9515              	.LVL813:
 9516              	.LBE1036:
 9517              	.LBE1035:
 9518              	.LBE1034:
 9519              	.LBE1033:
 9520              	.LBE1032:
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9521              		.loc 1 1405 15 view .LVU2995
 9522 1324 CA46     		mov	r10, r9
 9523              	.LVL814:
1406:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9524              		.loc 1 1406 9 is_stmt 1 view .LVU2996
1407:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9525              		.loc 1 1407 2 view .LVU2997
 9526              	.LBB1045:
 9527              	.LBI1032:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9528              		.loc 1 104 13 view .LVU2998
 9529              	.LBE1045:
 9530              	.LBE1031:
 9531              	.LBE1030:
 9532              	.LBE1243:
 9533              	.LBE1315:
 105:src/keys.c    **** }
 9534              		.loc 1 105 2 view .LVU2999
 9535              	.LBB1316:
 9536              	.LBB1244:
 9537              	.LBB1095:
 9538              	.LBB1083:
 9539              	.LBB1046:
 9540              	.LBB1042:
 9541              	.LBI1033:
ARM GAS  /tmp/ccGwaFaD.s 			page 274


  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9542              		.loc 1 94 20 view .LVU3000
 9543              	.LBB1039:
  95:src/keys.c    **** 	State2.shifts = shift;
 9544              		.loc 1 95 2 view .LVU3001
 9545              	.LBB1038:
 9546              	.LBI1035:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9547              		.loc 1 86 13 view .LVU3002
 9548              	.LBB1037:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9549              		.loc 1 87 2 view .LVU3003
  88:src/keys.c    **** }
 9550              		.loc 1 88 2 view .LVU3004
  88:src/keys.c    **** }
 9551              		.loc 1 88 52 is_stmt 0 view .LVU3005
 9552 1326 08B9     		cbnz	r0, .L749
 9553 1328 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 9554              	.LVL815:
 9555              	.L749:
  88:src/keys.c    **** }
 9556              		.loc 1 88 52 view .LVU3006
 9557              	.LBE1037:
 9558              	.LBE1038:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9559              		.loc 1 96 2 is_stmt 1 view .LVU3007
 9560              	.LBE1039:
 9561              	.LBE1042:
 9562              	.LBE1046:
 9563              	.LBB1047:
 9564              	.LBB1048:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9565              		.loc 1 439 6 is_stmt 0 view .LVU3008
 9566 132c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9567              	.LBE1048:
 9568              	.LBE1047:
 9569              	.LBB1064:
 9570              	.LBB1043:
 9571              	.LBB1040:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9572              		.loc 1 96 16 view .LVU3009
 9573 1330 4FF0000C 		mov	ip, #0
 9574              	.LBE1040:
 9575              	.LBE1043:
 9576              	.LBE1064:
 9577              	.LBB1065:
 9578              	.LBB1059:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9579              		.loc 1 439 5 view .LVU3010
 9580 1334 D906     		lsls	r1, r3, #27
 9581              	.LBE1059:
 9582              	.LBE1065:
 9583              	.LBB1066:
 9584              	.LBB1044:
 9585              	.LBB1041:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9586              		.loc 1 96 16 view .LVU3011
ARM GAS  /tmp/ccGwaFaD.s 			page 275


 9587 1336 88F810C0 		strb	ip, [r8, #16]
  98:src/keys.c    **** }
 9588              		.loc 1 98 2 is_stmt 1 view .LVU3012
 9589              	.LVL816:
  98:src/keys.c    **** }
 9590              		.loc 1 98 2 is_stmt 0 view .LVU3013
 9591              	.LBE1041:
 9592              	.LBE1044:
 9593              	.LBE1066:
1408:src/keys.c    **** 	State2.alpha_pos = 0;
 9594              		.loc 1 1408 2 is_stmt 1 view .LVU3014
1408:src/keys.c    **** 	State2.alpha_pos = 0;
 9595              		.loc 1 1408 11 is_stmt 0 view .LVU3015
 9596 133a 0246     		mov	r2, r0
 9597              	.LVL817:
 9598              	.LBB1067:
 9599              	.LBI1047:
 389:src/keys.c    **** {
 9600              		.loc 1 389 12 is_stmt 1 view .LVU3016
 9601              	.LBB1060:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9602              		.loc 1 391 2 view .LVU3017
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9603              		.loc 1 439 2 view .LVU3018
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9604              		.loc 1 439 5 is_stmt 0 view .LVU3019
 9605 133c 47D5     		bpl	.L750
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 9606              		.loc 1 440 3 is_stmt 1 view .LVU3020
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 9607              		.loc 1 440 6 is_stmt 0 view .LVU3021
 9608 133e 0028     		cmp	r0, #0
 9609 1340 44D0     		beq	.L926
 442:src/keys.c    **** 			shift = SHIFT_LC_G;
 9610              		.loc 1 442 8 is_stmt 1 view .LVU3022
 9611              	.LBB1049:
 9612              	.LBB1050:
 133:src/keys.c    **** }
 9613              		.loc 1 133 23 is_stmt 0 view .LVU3023
 9614 1342 1E49     		ldr	r1, .L1212
 9615              	.LBE1050:
 9616              	.LBE1049:
 445:src/keys.c    **** }
 9617              		.loc 1 445 49 view .LVU3024
 9618 1344 204A     		ldr	r2, .L1212+12
 9619              	.LBB1055:
 9620              	.LBB1051:
 133:src/keys.c    **** }
 9621              		.loc 1 133 23 view .LVU3025
 9622 1346 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9623              	.LBE1051:
 9624              	.LBE1055:
 9625              	.LBE1060:
 9626              	.LBE1067:
1409:src/keys.c    **** 
 9627              		.loc 1 1409 19 view .LVU3026
 9628 1348 88F80DC0 		strb	ip, [r8, #13]
ARM GAS  /tmp/ccGwaFaD.s 			page 276


 9629              	.LBB1068:
 9630              	.LBB1061:
 443:src/keys.c    **** 	}
 9631              		.loc 1 443 10 view .LVU3027
 9632 134c 0228     		cmp	r0, #2
 445:src/keys.c    **** }
 9633              		.loc 1 445 49 view .LVU3028
 9634 134e 4FF0060C 		mov	ip, #6
 9635 1352 0CFB0121 		mla	r1, ip, r1, r2
 443:src/keys.c    **** 	}
 9636              		.loc 1 443 10 view .LVU3029
 9637 1356 14BF     		ite	ne
 9638 1358 0246     		movne	r2, r0
 9639 135a 0522     		moveq	r2, #5
 9640              	.LVL818:
 445:src/keys.c    **** }
 9641              		.loc 1 445 2 is_stmt 1 view .LVU3030
 9642              	.LBB1056:
 9643              	.LBI1049:
 121:src/keys.c    **** {
 9644              		.loc 1 121 12 view .LVU3031
 9645              	.LBB1052:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9646              		.loc 1 123 2 view .LVU3032
 133:src/keys.c    **** }
 9647              		.loc 1 133 2 view .LVU3033
 133:src/keys.c    **** }
 9648              		.loc 1 133 2 is_stmt 0 view .LVU3034
 9649 135c 063C     		subs	r4, r4, #6
 9650              	.LBE1052:
 9651              	.LBE1056:
 445:src/keys.c    **** }
 9652              		.loc 1 445 49 view .LVU3035
 9653 135e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9654              	.LVL819:
 445:src/keys.c    **** }
 9655              		.loc 1 445 49 view .LVU3036
 9656              	.LBE1061:
 9657              	.LBE1068:
1409:src/keys.c    **** 
 9658              		.loc 1 1409 2 is_stmt 1 view .LVU3037
1411:src/keys.c    **** 	case K10:	// STO
 9659              		.loc 1 1411 2 view .LVU3038
 9660 1360 212C     		cmp	r4, #33
 9661 1362 23D8     		bhi	.L753
 9662 1364 DFE814F0 		tbh	[pc, r4, lsl #1]
 9663              	.L883:
 9664 1368 BA05     		.2byte	(.L762-.L883)/2
 9665 136a A805     		.2byte	(.L761-.L883)/2
 9666 136c 2200     		.2byte	(.L753-.L883)/2
 9667 136e 2200     		.2byte	(.L753-.L883)/2
 9668 1370 2200     		.2byte	(.L753-.L883)/2
 9669 1372 2200     		.2byte	(.L753-.L883)/2
 9670 1374 CF05     		.2byte	(.L760-.L883)/2
 9671 1376 2200     		.2byte	(.L753-.L883)/2
 9672 1378 2200     		.2byte	(.L753-.L883)/2
 9673 137a 2200     		.2byte	(.L753-.L883)/2
ARM GAS  /tmp/ccGwaFaD.s 			page 277


 9674 137c 0304     		.2byte	(.L769-.L883)/2
 9675 137e 2200     		.2byte	(.L753-.L883)/2
 9676 1380 B504     		.2byte	(.L758-.L883)/2
 9677 1382 2200     		.2byte	(.L753-.L883)/2
 9678 1384 2200     		.2byte	(.L753-.L883)/2
 9679 1386 2200     		.2byte	(.L753-.L883)/2
 9680 1388 2200     		.2byte	(.L753-.L883)/2
 9681 138a 2200     		.2byte	(.L753-.L883)/2
 9682 138c A704     		.2byte	(.L757-.L883)/2
 9683 138e 2200     		.2byte	(.L753-.L883)/2
 9684 1390 2200     		.2byte	(.L753-.L883)/2
 9685 1392 2200     		.2byte	(.L753-.L883)/2
 9686 1394 2200     		.2byte	(.L753-.L883)/2
 9687 1396 2200     		.2byte	(.L753-.L883)/2
 9688 1398 2200     		.2byte	(.L753-.L883)/2
 9689 139a 2200     		.2byte	(.L753-.L883)/2
 9690 139c 2200     		.2byte	(.L753-.L883)/2
 9691 139e 2200     		.2byte	(.L753-.L883)/2
 9692 13a0 2200     		.2byte	(.L753-.L883)/2
 9693 13a2 2200     		.2byte	(.L753-.L883)/2
 9694 13a4 7204     		.2byte	(.L756-.L883)/2
 9695 13a6 2200     		.2byte	(.L753-.L883)/2
 9696 13a8 2200     		.2byte	(.L753-.L883)/2
 9697 13aa 6604     		.2byte	(.L754-.L883)/2
 9698              		.p2align 1
 9699              	.L753:
1518:src/keys.c    **** 		return STATE_UNFINISHED;
 9700              		.loc 1 1518 2 view .LVU3039
1518:src/keys.c    **** 		return STATE_UNFINISHED;
 9701              		.loc 1 1518 5 is_stmt 0 view .LVU3040
 9702 13ac 0029     		cmp	r1, #0
 9703 13ae 00F0D382 		beq	.L1176
1520:src/keys.c    **** }
 9704              		.loc 1 1520 2 is_stmt 1 view .LVU3041
1520:src/keys.c    **** }
 9705              		.loc 1 1520 9 is_stmt 0 view .LVU3042
 9706 13b2 41F4884B 		orr	fp, r1, #17408
 9707 13b6 5846     		mov	r0, fp
 9708              	.LVL820:
1520:src/keys.c    **** }
 9709              		.loc 1 1520 9 view .LVU3043
 9710 13b8 FFF7B4B8 		b	.L622
 9711              	.L1213:
 9712              		.align	2
 9713              	.L1212:
 9714 13bc 00000000 		.word	.LANCHOR1
 9715 13c0 00000000 		.word	.LANCHOR0
 9716 13c4 00000000 		.word	main_ram
 9717 13c8 00000000 		.word	.LANCHOR9
 9718              	.LVL821:
 9719              	.L926:
 9720              	.LBB1069:
 9721              	.LBB1062:
 441:src/keys.c    **** 		else if (shift == SHIFT_G)
 9722              		.loc 1 441 10 view .LVU3044
 9723 13cc 0422     		movs	r2, #4
 9724              	.L750:
ARM GAS  /tmp/ccGwaFaD.s 			page 278


 9725              	.LVL822:
 445:src/keys.c    **** }
 9726              		.loc 1 445 2 is_stmt 1 view .LVU3045
 9727              	.LBB1057:
 121:src/keys.c    **** {
 9728              		.loc 1 121 12 view .LVU3046
 9729              	.LBB1053:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9730              		.loc 1 123 2 view .LVU3047
 133:src/keys.c    **** }
 9731              		.loc 1 133 2 view .LVU3048
 133:src/keys.c    **** }
 9732              		.loc 1 133 23 is_stmt 0 view .LVU3049
 9733 13ce BC49     		ldr	r1, .L1214
 9734              	.LBE1053:
 9735              	.LBE1057:
 445:src/keys.c    **** }
 9736              		.loc 1 445 49 view .LVU3050
 9737 13d0 DFF804C3 		ldr	ip, .L1214+24
 9738              	.LBB1058:
 9739              	.LBB1054:
 133:src/keys.c    **** }
 9740              		.loc 1 133 23 view .LVU3051
 9741 13d4 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9742              	.LBE1054:
 9743              	.LBE1058:
 445:src/keys.c    **** }
 9744              		.loc 1 445 49 view .LVU3052
 9745 13d6 4FF0060E 		mov	lr, #6
 9746 13da 0EFB01C1 		mla	r1, lr, r1, ip
 9747 13de 063C     		subs	r4, r4, #6
 9748              	.LBE1062:
 9749              	.LBE1069:
1409:src/keys.c    **** 
 9750              		.loc 1 1409 19 view .LVU3053
 9751 13e0 4FF0000C 		mov	ip, #0
 9752              	.LBB1070:
 9753              	.LBB1063:
 445:src/keys.c    **** }
 9754              		.loc 1 445 49 view .LVU3054
 9755 13e4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9756              	.LVL823:
 445:src/keys.c    **** }
 9757              		.loc 1 445 49 view .LVU3055
 9758              	.LBE1063:
 9759              	.LBE1070:
1409:src/keys.c    **** 
 9760              		.loc 1 1409 2 is_stmt 1 view .LVU3056
1409:src/keys.c    **** 
 9761              		.loc 1 1409 19 is_stmt 0 view .LVU3057
 9762 13e6 88F80DC0 		strb	ip, [r8, #13]
1411:src/keys.c    **** 	case K10:	// STO
 9763              		.loc 1 1411 2 is_stmt 1 view .LVU3058
 9764 13ea 212C     		cmp	r4, #33
 9765 13ec DED8     		bhi	.L753
 9766 13ee 01A2     		adr	r2, .L755
 9767 13f0 52F824F0 		ldr	pc, [r2, r4, lsl #2]
ARM GAS  /tmp/ccGwaFaD.s 			page 279


 9768              		.p2align 2
 9769              	.L755:
 9770 13f4 DD1E0000 		.word	.L762+1
 9771 13f8 B91E0000 		.word	.L761+1
 9772 13fc AD130000 		.word	.L753+1
 9773 1400 AD130000 		.word	.L753+1
 9774 1404 AD130000 		.word	.L753+1
 9775 1408 AD130000 		.word	.L753+1
 9776 140c 071F0000 		.word	.L760+1
 9777 1410 AD130000 		.word	.L753+1
 9778 1414 AD130000 		.word	.L753+1
 9779 1418 AD130000 		.word	.L753+1
 9780 141c 691B0000 		.word	.L759+1
 9781 1420 AD130000 		.word	.L753+1
 9782 1424 D31C0000 		.word	.L758+1
 9783 1428 AD130000 		.word	.L753+1
 9784 142c AD130000 		.word	.L753+1
 9785 1430 AD130000 		.word	.L753+1
 9786 1434 AD130000 		.word	.L753+1
 9787 1438 AD130000 		.word	.L753+1
 9788 143c B71C0000 		.word	.L757+1
 9789 1440 AD130000 		.word	.L753+1
 9790 1444 AD130000 		.word	.L753+1
 9791 1448 AD130000 		.word	.L753+1
 9792 144c AD130000 		.word	.L753+1
 9793 1450 AD130000 		.word	.L753+1
 9794 1454 AD130000 		.word	.L753+1
 9795 1458 AD130000 		.word	.L753+1
 9796 145c AD130000 		.word	.L753+1
 9797 1460 AD130000 		.word	.L753+1
 9798 1464 AD130000 		.word	.L753+1
 9799 1468 AD130000 		.word	.L753+1
 9800 146c 4D1C0000 		.word	.L756+1
 9801 1470 AD130000 		.word	.L753+1
 9802 1474 AD130000 		.word	.L753+1
 9803 1478 351C0000 		.word	.L754+1
 9804              	.LVL824:
 9805              		.p2align 1
 9806              	.L1132:
1411:src/keys.c    **** 	case K10:	// STO
 9807              		.loc 1 1411 2 is_stmt 0 view .LVU3059
 9808              	.LBE1083:
 9809              	.LBE1095:
2936:src/keys.c    **** 	} else {
 9810              		.loc 1 2936 3 is_stmt 1 view .LVU3060
 9811              	.LBB1096:
 9812              	.LBI1096:
1109:src/keys.c    **** #define _RARG   0xFF00
 9813              		.loc 1 1109 12 view .LVU3061
 9814              	.LBB1097:
1114:src/keys.c    **** 		// Row 1
 9815              		.loc 1 1114 2 view .LVU3062
1165:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9816              		.loc 1 1165 2 view .LVU3063
 9817              	.LBB1098:
 9818              	.LBI1098:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
ARM GAS  /tmp/ccGwaFaD.s 			page 280


 9819              		.loc 1 104 13 view .LVU3064
 9820              	.LBE1098:
 9821              	.LBE1097:
 9822              	.LBE1096:
 9823              	.LBE1244:
 9824              	.LBE1316:
 105:src/keys.c    **** }
 9825              		.loc 1 105 2 view .LVU3065
 9826              	.LBB1317:
 9827              	.LBB1245:
 9828              	.LBB1128:
 9829              	.LBB1122:
 9830              	.LBB1107:
 9831              	.LBB1099:
 9832              	.LBI1099:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9833              		.loc 1 94 20 view .LVU3066
 9834              	.LBB1100:
  95:src/keys.c    **** 	State2.shifts = shift;
 9835              		.loc 1 95 2 view .LVU3067
 9836              	.LBB1101:
 9837              	.LBI1101:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9838              		.loc 1 86 13 view .LVU3068
 9839              	.LBB1102:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9840              		.loc 1 87 2 view .LVU3069
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9841              		.loc 1 87 18 is_stmt 0 view .LVU3070
 9842 147c FFF7FEFF 		bl	shift_down
 9843              	.LVL825:
  88:src/keys.c    **** }
 9844              		.loc 1 88 2 is_stmt 1 view .LVU3071
  88:src/keys.c    **** }
 9845              		.loc 1 88 52 is_stmt 0 view .LVU3072
 9846 1480 8246     		mov	r10, r0
 9847              	.LVL826:
  88:src/keys.c    **** }
 9848              		.loc 1 88 52 view .LVU3073
 9849 1482 08B9     		cbnz	r0, .L783
 9850 1484 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 9851              	.L783:
 9852              	.LVL827:
  88:src/keys.c    **** }
 9853              		.loc 1 88 52 view .LVU3074
 9854              	.LBE1102:
 9855              	.LBE1101:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9856              		.loc 1 96 2 is_stmt 1 view .LVU3075
 9857              	.LBE1100:
 9858              	.LBE1099:
 9859              	.LBE1107:
 9860              	.LBB1108:
 9861              	.LBB1109:
 148:src/keys.c    **** }
 9862              		.loc 1 148 23 is_stmt 0 view .LVU3076
 9863 1488 8E4B     		ldr	r3, .L1214+4
ARM GAS  /tmp/ccGwaFaD.s 			page 281


 9864              	.LBE1109:
 9865              	.LBE1108:
1167:src/keys.c    **** 	State2.cmplx = 0;
 9866              		.loc 1 1167 21 view .LVU3077
 9867 148a 8F48     		ldr	r0, .L1214+8
 9868              	.LBB1112:
 9869              	.LBB1110:
 148:src/keys.c    **** }
 9870              		.loc 1 148 23 view .LVU3078
 9871 148c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9872              	.LBE1110:
 9873              	.LBE1112:
1168:src/keys.c    **** 
 9874              		.loc 1 1168 15 view .LVU3079
 9875 148e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1167:src/keys.c    **** 	State2.cmplx = 0;
 9876              		.loc 1 1167 21 view .LVU3080
 9877 1492 0AEB8303 		add	r3, r10, r3, lsl #2
 9878              	.LBB1113:
 9879              	.LBB1105:
 9880              	.LBB1103:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9881              		.loc 1 96 16 view .LVU3081
 9882 1496 0021     		movs	r1, #0
 9883              	.LBE1103:
 9884              	.LBE1105:
 9885              	.LBE1113:
1167:src/keys.c    **** 	State2.cmplx = 0;
 9886              		.loc 1 1167 21 view .LVU3082
 9887 1498 30F813B0 		ldrh	fp, [r0, r3, lsl #1]
 9888              	.LBB1114:
 9889              	.LBB1106:
 9890              	.LBB1104:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9891              		.loc 1 96 16 view .LVU3083
 9892 149c 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 9893              		.loc 1 98 2 is_stmt 1 view .LVU3084
 9894              	.LVL828:
  98:src/keys.c    **** }
 9895              		.loc 1 98 2 is_stmt 0 view .LVU3085
 9896              	.LBE1104:
 9897              	.LBE1106:
 9898              	.LBE1114:
1166:src/keys.c    **** 	int op = op_map[lc][shift];
 9899              		.loc 1 1166 2 is_stmt 1 view .LVU3086
 9900              	.LBB1115:
 9901              	.LBI1108:
 136:src/keys.c    **** {
 9902              		.loc 1 136 12 view .LVU3087
 9903              	.LBB1111:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9904              		.loc 1 138 2 view .LVU3088
 148:src/keys.c    **** }
 9905              		.loc 1 148 2 view .LVU3089
 148:src/keys.c    **** }
 9906              		.loc 1 148 2 is_stmt 0 view .LVU3090
ARM GAS  /tmp/ccGwaFaD.s 			page 282


 9907              	.LBE1111:
 9908              	.LBE1115:
1167:src/keys.c    **** 	State2.cmplx = 0;
 9909              		.loc 1 1167 2 is_stmt 1 view .LVU3091
1168:src/keys.c    **** 
 9910              		.loc 1 1168 2 view .LVU3092
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9911              		.loc 1 1170 5 is_stmt 0 view .LVU3093
 9912 14a0 0BF47F43 		and	r3, fp, #65280
1168:src/keys.c    **** 
 9913              		.loc 1 1168 15 view .LVU3094
 9914 14a4 61F34102 		bfi	r2, r1, #1, #1
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9915              		.loc 1 1170 5 view .LVU3095
 9916 14a8 B3F57F4F 		cmp	r3, #65280
1168:src/keys.c    **** 
 9917              		.loc 1 1168 15 view .LVU3096
 9918 14ac 88F81520 		strb	r2, [r8, #21]
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9919              		.loc 1 1170 2 is_stmt 1 view .LVU3097
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9920              		.loc 1 1170 5 is_stmt 0 view .LVU3098
 9921 14b0 00F0A784 		beq	.L1177
1174:src/keys.c    **** 		// HYP
 9922              		.loc 1 1174 2 is_stmt 1 view .LVU3099
1174:src/keys.c    **** 		// HYP
 9923              		.loc 1 1174 5 is_stmt 0 view .LVU3100
 9924 14b4 002C     		cmp	r4, #0
 9925 14b6 00F09184 		beq	.L1178
1183:src/keys.c    **** 		switch (c) {
 9926              		.loc 1 1183 2 is_stmt 1 view .LVU3101
1183:src/keys.c    **** 		switch (c) {
 9927              		.loc 1 1183 5 is_stmt 0 view .LVU3102
 9928 14ba BAF1000F 		cmp	r10, #0
 9929 14be 3EF4BFAF 		beq	.L595
1184:src/keys.c    **** 		case K_CMPLX:
 9930              		.loc 1 1184 3 is_stmt 1 view .LVU3103
 9931 14c2 242C     		cmp	r4, #36
 9932 14c4 00F0AB84 		beq	.L787
 9933 14c8 2D2C     		cmp	r4, #45
 9934 14ca 00F07C84 		beq	.L788
 9935 14ce 1F2C     		cmp	r4, #31
 9936 14d0 7EF4B6AF 		bne	.L595
1190:src/keys.c    **** 				if (is_bad_cmdline())
 9937              		.loc 1 1190 4 view .LVU3104
1190:src/keys.c    **** 				if (is_bad_cmdline())
 9938              		.loc 1 1190 7 is_stmt 0 view .LVU3105
 9939 14d4 BBF1330F 		cmp	fp, #51
 9940 14d8 00F06484 		beq	.L1179
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 9941              		.loc 1 1191 5 is_stmt 1 view .LVU3106
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 9942              		.loc 1 1191 9 is_stmt 0 view .LVU3107
 9943 14dc FFF7FEFF 		bl	is_bad_cmdline
 9944              	.LVL829:
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 9945              		.loc 1 1191 8 view .LVU3108
ARM GAS  /tmp/ccGwaFaD.s 			page 283


 9946 14e0 0446     		mov	r4, r0
 9947 14e2 0028     		cmp	r0, #0
 9948 14e4 00F04E84 		beq	.L791
 9949 14e8 3268     		ldr	r2, [r6]
1192:src/keys.c    **** 				process_cmdline_set_lift();
 9950              		.loc 1 1192 13 view .LVU3109
 9951 14ea 4FF0330B 		mov	fp, #51
 9952              	.LVL830:
1192:src/keys.c    **** 				process_cmdline_set_lift();
 9953              		.loc 1 1192 13 view .LVU3110
 9954 14ee FEF7E0BD 		b	.L565
 9955              	.LVL831:
 9956              	.L1161:
1192:src/keys.c    **** 				process_cmdline_set_lift();
 9957              		.loc 1 1192 13 view .LVU3111
 9958              	.LBE1122:
 9959              	.LBE1128:
 9960              	.LBB1129:
 9961              	.LBB878:
2398:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9962              		.loc 1 2398 3 is_stmt 1 view .LVU3112
2398:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9963              		.loc 1 2398 12 is_stmt 0 view .LVU3113
 9964 14f2 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 9965 14f6 2046     		mov	r0, r4
 9966 14f8 941E     		subs	r4, r2, #2
 9967 14fa 6242     		rsbs	r2, r4, #0
 9968 14fc 6241     		adcs	r2, r2, r4
 9969 14fe FFF7FEFF 		bl	process_catalogue
 9970              	.LVL832:
2399:src/keys.c    **** 			return opcode;
 9971              		.loc 1 2399 6 view .LVU3114
 9972 1502 3328     		cmp	r0, #51
2398:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9973              		.loc 1 2398 12 view .LVU3115
 9974 1504 8346     		mov	fp, r0
 9975              	.LVL833:
2399:src/keys.c    **** 			return opcode;
 9976              		.loc 1 2399 3 is_stmt 1 view .LVU3116
2399:src/keys.c    **** 			return opcode;
 9977              		.loc 1 2399 6 is_stmt 0 view .LVU3117
 9978 1506 00F0CE81 		beq	.L1180
2401:src/keys.c    **** 		goto add_char;
 9979              		.loc 1 2401 3 is_stmt 1 view .LVU3118
2401:src/keys.c    **** 		goto add_char;
 9980              		.loc 1 2401 6 is_stmt 0 view .LVU3119
 9981 150a C0B2     		uxtb	r0, r0
 9982              	.LVL834:
2402:src/keys.c    **** 	}
 9983              		.loc 1 2402 3 is_stmt 1 view .LVU3120
 9984 150c 55E4     		b	.L680
 9985              	.LVL835:
 9986              	.L1125:
2402:src/keys.c    **** 	}
 9987              		.loc 1 2402 3 is_stmt 0 view .LVU3121
 9988              	.LBE878:
 9989              	.LBE1129:
ARM GAS  /tmp/ccGwaFaD.s 			page 284


 9990              	.LBB1130:
 9991              	.LBB669:
 9992              	.LBB663:
 327:src/keys.c    **** #else
 9993              		.loc 1 327 45 view .LVU3122
 9994 150e FFF7FEFF 		bl	shift_down
 9995              	.LVL836:
 327:src/keys.c    **** #else
 9996              		.loc 1 327 42 view .LVU3123
 9997 1512 0328     		cmp	r0, #3
 9998 1514 00F0DF81 		beq	.L667
 9999 1518 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 325:src/keys.c    **** #ifndef WINGUI
 10000              		.loc 1 325 8 view .LVU3124
 10001 151c 6B4B     		ldr	r3, .L1214+12
 327:src/keys.c    **** #else
 10002              		.loc 1 327 73 view .LVU3125
 10003 151e DC46     		mov	ip, fp
 331:src/keys.c    ****   }
 10004              		.loc 1 331 9 view .LVU3126
 10005 1520 0C22     		movs	r2, #12
 10006 1522 FEF798BE 		b	.L666
 10007              	.LVL837:
 10008              	.L918:
 331:src/keys.c    ****   }
 10009              		.loc 1 331 9 view .LVU3127
 10010              	.LBE663:
 10011              	.LBE669:
 10012              	.LBE1130:
 10013              	.LBB1131:
 10014              	.LBB928:
2577:src/keys.c    **** 	const int opcode = getprog(pc);
 10015              		.loc 1 2577 27 view .LVU3128
 10016 1526 4FF0030B 		mov	fp, #3
 10017 152a F1E4     		b	.L695
 10018              	.LVL838:
 10019              	.L1134:
2577:src/keys.c    **** 	const int opcode = getprog(pc);
 10020              		.loc 1 2577 27 view .LVU3129
 10021              	.LBE928:
 10022              	.LBE1131:
2941:src/keys.c    **** 		// print_debug (3, c);
 10023              		.loc 1 2941 4 is_stmt 1 view .LVU3130
 10024              	.LBB1132:
 10025              	.LBI1132:
1010:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 10026              		.loc 1 1010 12 view .LVU3131
 10027              	.LBB1133:
1013:src/keys.c    **** 		// Row 1
 10028              		.loc 1 1013 2 view .LVU3132
1064:src/keys.c    **** 	int op = op_map[lc];
 10029              		.loc 1 1064 2 view .LVU3133
 10030              	.LBB1134:
 10031              	.LBI1134:
 136:src/keys.c    **** {
 10032              		.loc 1 136 12 view .LVU3134
 10033              	.LBB1135:
ARM GAS  /tmp/ccGwaFaD.s 			page 285


 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10034              		.loc 1 138 2 view .LVU3135
 148:src/keys.c    **** }
 10035              		.loc 1 148 2 view .LVU3136
 148:src/keys.c    **** }
 10036              		.loc 1 148 2 is_stmt 0 view .LVU3137
 10037              	.LBE1135:
 10038              	.LBE1134:
1065:src/keys.c    **** 	reset_shift();
 10039              		.loc 1 1065 2 is_stmt 1 view .LVU3138
 10040              	.LBB1138:
 10041              	.LBB1136:
 148:src/keys.c    **** }
 10042              		.loc 1 148 23 is_stmt 0 view .LVU3139
 10043 152c 654A     		ldr	r2, .L1214+4
 10044              	.LBE1136:
 10045              	.LBE1138:
1065:src/keys.c    **** 	reset_shift();
 10046              		.loc 1 1065 17 view .LVU3140
 10047 152e 684B     		ldr	r3, .L1214+16
 10048              	.LBB1139:
 10049              	.LBB1137:
 148:src/keys.c    **** }
 10050              		.loc 1 148 23 view .LVU3141
 10051 1530 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 10052              	.LBE1137:
 10053              	.LBE1139:
1065:src/keys.c    **** 	reset_shift();
 10054              		.loc 1 1065 17 view .LVU3142
 10055 1532 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 10056              	.LVL839:
1066:src/keys.c    **** 
 10057              		.loc 1 1066 2 is_stmt 1 view .LVU3143
 10058              	.LBB1140:
 10059              	.LBI1140:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10060              		.loc 1 104 13 view .LVU3144
 10061              	.LBE1140:
 10062              	.LBE1133:
 10063              	.LBE1132:
 10064              	.LBE1245:
 10065              	.LBE1317:
 105:src/keys.c    **** }
 10066              		.loc 1 105 2 view .LVU3145
 10067              	.LBB1318:
 10068              	.LBB1246:
 10069              	.LBB1155:
 10070              	.LBB1151:
 10071              	.LBB1147:
 10072              	.LBB1141:
 10073              	.LBI1141:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10074              		.loc 1 94 20 view .LVU3146
 10075              	.LBB1142:
  95:src/keys.c    **** 	State2.shifts = shift;
 10076              		.loc 1 95 2 view .LVU3147
 10077              	.LBB1143:
ARM GAS  /tmp/ccGwaFaD.s 			page 286


 10078              	.LBI1143:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 10079              		.loc 1 86 13 view .LVU3148
 10080              	.LBB1144:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10081              		.loc 1 87 2 view .LVU3149
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10082              		.loc 1 87 18 is_stmt 0 view .LVU3150
 10083 1536 FFF7FEFF 		bl	shift_down
 10084              	.LVL840:
  88:src/keys.c    **** }
 10085              		.loc 1 88 2 is_stmt 1 view .LVU3151
 10086              	.LBE1144:
 10087              	.LBE1143:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10088              		.loc 1 96 2 view .LVU3152
 10089              	.LBE1142:
 10090              	.LBE1141:
 10091              	.LBE1147:
1069:src/keys.c    **** 	case K62:
 10092              		.loc 1 1069 2 is_stmt 0 view .LVU3153
 10093 153a 262C     		cmp	r4, #38
 10094              	.LBB1148:
 10095              	.LBB1146:
 10096              	.LBB1145:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10097              		.loc 1 96 16 view .LVU3154
 10098 153c 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 10099              		.loc 1 98 2 is_stmt 1 view .LVU3155
 10100              	.LVL841:
  98:src/keys.c    **** }
 10101              		.loc 1 98 2 is_stmt 0 view .LVU3156
 10102              	.LBE1145:
 10103              	.LBE1146:
 10104              	.LBE1148:
1069:src/keys.c    **** 	case K62:
 10105              		.loc 1 1069 2 is_stmt 1 view .LVU3157
 10106 1540 00F0EA81 		beq	.L818
 10107 1544 272C     		cmp	r4, #39
 10108 1546 1FD1     		bne	.L820
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10109              		.loc 1 1082 3 view .LVU3158
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10110              		.loc 1 1082 7 is_stmt 0 view .LVU3159
 10111 1548 FFF7FEFF 		bl	is_bad_cmdline
 10112              	.LVL842:
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10113              		.loc 1 1082 6 view .LVU3160
 10114 154c 0028     		cmp	r0, #0
 10115 154e 40F04183 		bne	.L1181
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10116              		.loc 1 1084 3 is_stmt 1 view .LVU3161
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10117              		.loc 1 1084 30 is_stmt 0 view .LVU3162
 10118 1552 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10119 1556 C3F38012 		ubfx	r2, r3, #6, #1
ARM GAS  /tmp/ccGwaFaD.s 			page 287


1084:src/keys.c    **** 		process_cmdline_set_lift();
 10120              		.loc 1 1084 22 view .LVU3163
 10121 155a C2F10102 		rsb	r2, r2, #1
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10122              		.loc 1 1084 18 view .LVU3164
 10123 155e 62F38613 		bfi	r3, r2, #6, #1
 10124 1562 88F81630 		strb	r3, [r8, #22]
1085:src/keys.c    **** 		update_program_bounds(1);
 10125              		.loc 1 1085 3 is_stmt 1 view .LVU3165
 10126 1566 FFF7FEFF 		bl	process_cmdline_set_lift
 10127              	.LVL843:
1086:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 10128              		.loc 1 1086 3 view .LVU3166
 10129 156a 0120     		movs	r0, #1
 10130 156c FFF7FEFF 		bl	update_program_bounds
 10131              	.LVL844:
1087:src/keys.c    **** 			set_pc(0);
 10132              		.loc 1 1087 3 view .LVU3167
1087:src/keys.c    **** 			set_pc(0);
 10133              		.loc 1 1087 7 is_stmt 0 view .LVU3168
 10134 1570 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
1087:src/keys.c    **** 			set_pc(0);
 10135              		.loc 1 1087 6 view .LVU3169
 10136 1574 10F04000 		ands	r0, r0, #64
 10137 1578 06D1     		bne	.L820
1087:src/keys.c    **** 			set_pc(0);
 10138              		.loc 1 1087 27 view .LVU3170
 10139 157a 564B     		ldr	r3, .L1214+20
 10140 157c 1B68     		ldr	r3, [r3]
1087:src/keys.c    **** 			set_pc(0);
 10141              		.loc 1 1087 24 view .LVU3171
 10142 157e B3F8E027 		ldrh	r2, [r3, #2016]
 10143 1582 012A     		cmp	r2, #1
 10144 1584 00F01E83 		beq	.L1182
 10145              	.L820:
1095:src/keys.c    **** 		if (op & _RARG) {
 10146              		.loc 1 1095 5 view .LVU3172
 10147 1588 BAF1330F 		cmp	r10, #51
1065:src/keys.c    **** 	reset_shift();
 10148              		.loc 1 1065 6 view .LVU3173
 10149 158c D346     		mov	fp, r10
1095:src/keys.c    **** 		if (op & _RARG) {
 10150              		.loc 1 1095 2 is_stmt 1 view .LVU3174
1095:src/keys.c    **** 		if (op & _RARG) {
 10151              		.loc 1 1095 5 is_stmt 0 view .LVU3175
 10152 158e 0AD0     		beq	.L829
 10153              	.LVL845:
1096:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 10154              		.loc 1 1096 3 is_stmt 1 view .LVU3176
1096:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 10155              		.loc 1 1096 6 is_stmt 0 view .LVU3177
 10156 1590 1AF4004F 		tst	r10, #32768
 10157 1594 00F0D081 		beq	.L1183
1097:src/keys.c    **** 			op = STATE_UNFINISHED;
 10158              		.loc 1 1097 4 is_stmt 1 view .LVU3178
 10159              	.LVL846:
 10160              	.LBB1149:
ARM GAS  /tmp/ccGwaFaD.s 			page 288


 10161              	.LBI1149:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 10162              		.loc 1 506 13 view .LVU3179
 10163              	.LBB1150:
 507:src/keys.c    **** 		return;
 10164              		.loc 1 507 2 view .LVU3180
 507:src/keys.c    **** 		return;
 10165              		.loc 1 507 6 is_stmt 0 view .LVU3181
 10166 1598 FFF7FEFF 		bl	is_bad_cmdline
 10167              	.LVL847:
 507:src/keys.c    **** 		return;
 10168              		.loc 1 507 5 view .LVU3182
 10169 159c 18B9     		cbnz	r0, .L829
 10170 159e 5FFA8AF0 		uxtb	r0, r10
 10171 15a2 FFF7FEFF 		bl	init_arg.part.0
 10172              	.LVL848:
 10173              	.L829:
 507:src/keys.c    **** 		return;
 10174              		.loc 1 507 5 view .LVU3183
 10175              	.LBE1150:
 10176              	.LBE1149:
1101:src/keys.c    **** #undef _RARG
 10177              		.loc 1 1101 2 is_stmt 1 view .LVU3184
1077:src/keys.c    **** #endif
 10178              		.loc 1 1077 29 is_stmt 0 view .LVU3185
 10179 15a6 4FF0330B 		mov	fp, #51
 10180              	.LVL849:
 10181              	.L823:
1101:src/keys.c    **** #undef _RARG
 10182              		.loc 1 1101 57 view .LVU3186
 10183 15aa 2BF4804B 		bic	fp, fp, #16384
 10184 15ae FEF747BF 		b	.L595
 10185              	.LVL850:
 10186              	.L1156:
1101:src/keys.c    **** #undef _RARG
 10187              		.loc 1 1101 57 view .LVU3187
 10188              	.LBE1151:
 10189              	.LBE1155:
 10190              	.LBB1156:
 10191              	.LBB796:
 10192              	.LBB788:
2516:src/keys.c    **** 		else if (nn != NO_REG)
 10193              		.loc 1 2516 4 is_stmt 1 view .LVU3188
2518:src/keys.c    **** 	}
 10194              		.loc 1 2518 6 is_stmt 0 view .LVU3189
 10195 15b2 9342     		cmp	r3, r2
 10196 15b4 08BF     		it	eq
 10197 15b6 0A22     		moveq	r2, #10
 10198              	.LVL851:
2518:src/keys.c    **** 	}
 10199              		.loc 1 2518 6 view .LVU3190
 10200 15b8 FFF7DFBA 		b	.L644
 10201              	.LVL852:
 10202              	.L1162:
2518:src/keys.c    **** 	}
 10203              		.loc 1 2518 6 view .LVU3191
 10204              	.LBE788:
ARM GAS  /tmp/ccGwaFaD.s 			page 289


 10205              	.LBE796:
 10206              	.LBE1156:
 10207              	.LBB1157:
 10208              	.LBB879:
2407:src/keys.c    **** 				break;
 10209              		.loc 1 2407 3 is_stmt 1 view .LVU3192
2407:src/keys.c    **** 				break;
 10210              		.loc 1 2407 6 is_stmt 0 view .LVU3193
 10211 15bc 0029     		cmp	r1, #0
 10212 15be 7FF4EAAB 		bne	.L683
2409:src/keys.c    **** 		if (State2.numdigit == 0)
 10213              		.loc 1 2409 3 is_stmt 1 view .LVU3194
 10214              	.LBB868:
 10215              	.LBI868:
2384:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10216              		.loc 1 2384 13 view .LVU3195
 10217              	.LBB869:
2386:src/keys.c    **** 	if (! State2.alphas )
 10218              		.loc 1 2386 2 view .LVU3196
2386:src/keys.c    **** 	if (! State2.alphas )
 10219              		.loc 1 2386 15 is_stmt 0 view .LVU3197
 10220 15c2 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2387:src/keys.c    **** 		State2.alphashift = 0;
 10221              		.loc 1 2387 6 view .LVU3198
 10222 15c6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2386:src/keys.c    **** 	if (! State2.alphas )
 10223              		.loc 1 2386 15 view .LVU3199
 10224 15ca 61F3C302 		bfi	r2, r1, #3, #1
 10225 15ce 88F81520 		strb	r2, [r8, #21]
2387:src/keys.c    **** 		State2.alphashift = 0;
 10226              		.loc 1 2387 2 is_stmt 1 view .LVU3200
2387:src/keys.c    **** 		State2.alphashift = 0;
 10227              		.loc 1 2387 5 is_stmt 0 view .LVU3201
 10228 15d2 1A07     		lsls	r2, r3, #28
2388:src/keys.c    **** }
 10229              		.loc 1 2388 3 is_stmt 1 view .LVU3202
 10230              	.LBE869:
 10231              	.LBE868:
2410:src/keys.c    **** 			return STATE_UNFINISHED;
 10232              		.loc 1 2410 3 view .LVU3203
 10233              	.LBB871:
 10234              	.LBB870:
2388:src/keys.c    **** }
 10235              		.loc 1 2388 21 is_stmt 0 view .LVU3204
 10236 15d4 5CBF     		itt	pl
 10237 15d6 61F30413 		bfipl	r3, r1, #4, #1
 10238 15da 88F81630 		strbpl	r3, [r8, #22]
 10239              	.LBE870:
 10240              	.LBE871:
2410:src/keys.c    **** 			return STATE_UNFINISHED;
 10241              		.loc 1 2410 13 view .LVU3205
 10242 15de 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2410:src/keys.c    **** 			return STATE_UNFINISHED;
 10243              		.loc 1 2410 6 view .LVU3206
 10244 15e2 002B     		cmp	r3, #0
 10245 15e4 00F0B282 		beq	.L1184
2412:src/keys.c    **** 			State2.digval2 = 0;
ARM GAS  /tmp/ccGwaFaD.s 			page 290


 10246              		.loc 1 2412 8 is_stmt 1 view .LVU3207
2412:src/keys.c    **** 			State2.digval2 = 0;
 10247              		.loc 1 2412 11 is_stmt 0 view .LVU3208
 10248 15e8 012B     		cmp	r3, #1
2413:src/keys.c    **** 		goto fin;
 10249              		.loc 1 2413 19 view .LVU3209
 10250 15ea 4FF00000 		mov	r0, #0
2412:src/keys.c    **** 			State2.digval2 = 0;
 10251              		.loc 1 2412 11 view .LVU3210
 10252 15ee 7FF4FBAB 		bne	.L686
2413:src/keys.c    **** 		goto fin;
 10253              		.loc 1 2413 4 is_stmt 1 view .LVU3211
2413:src/keys.c    **** 		goto fin;
 10254              		.loc 1 2413 19 is_stmt 0 view .LVU3212
 10255 15f2 88F80A00 		strb	r0, [r8, #10]
 10256 15f6 FFF7F7BB 		b	.L686
 10257              	.LVL853:
 10258              	.L1167:
2413:src/keys.c    **** 		goto fin;
 10259              		.loc 1 2413 19 view .LVU3213
 10260 15fa 3268     		ldr	r2, [r6]
 10261              	.LBE879:
 10262              	.LBE1157:
 10263              	.LBB1158:
 10264              	.LBB736:
1966:src/keys.c    **** 
 10265              		.loc 1 1966 10 view .LVU3214
 10266 15fc 4FF0330B 		mov	fp, #51
 10267              	.LVL854:
1966:src/keys.c    **** 
 10268              		.loc 1 1966 10 view .LVU3215
 10269 1600 FEF757BD 		b	.L565
 10270              	.LVL855:
 10271              	.L1170:
1966:src/keys.c    **** 
 10272              		.loc 1 1966 10 view .LVU3216
 10273              	.LBE736:
 10274              	.LBE1158:
 10275              	.LBB1159:
 10276              	.LBB1005:
2708:src/keys.c    **** 	const int g_max = global_regs();
 10277              		.loc 1 2708 33 view .LVU3217
 10278 1604 FFF7FEFF 		bl	local_regs
 10279              	.LVL856:
 10280 1608 8246     		mov	r10, r0
 10281              	.LVL857:
2708:src/keys.c    **** 	const int g_max = global_regs();
 10282              		.loc 1 2708 33 view .LVU3218
 10283 160a A5E5     		b	.L723
 10284              	.LVL858:
 10285              	.L1173:
2724:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10286              		.loc 1 2724 50 view .LVU3219
 10287 160c 0D2C     		cmp	r4, #13
 10288 160e 7FF4B3AD 		bne	.L731
2725:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10289              		.loc 1 2725 3 is_stmt 1 view .LVU3220
ARM GAS  /tmp/ccGwaFaD.s 			page 291


 10290 1612 B9F1010F 		cmp	r9, #1
 10291 1616 14BF     		ite	ne
 10292 1618 2C20     		movne	r0, #44
 10293              	.LVL859:
2725:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10294              		.loc 1 2725 3 is_stmt 0 view .LVU3221
 10295 161a 2B20     		moveq	r0, #43
 10296 161c FFF7FEFF 		bl	set_window
 10297              	.LVL860:
2726:src/keys.c    **** 	}
 10298              		.loc 1 2726 3 is_stmt 1 view .LVU3222
 10299              	.LBB1001:
 10300              	.LBI1001:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10301              		.loc 1 651 13 view .LVU3223
 10302              	.LBB1002:
 652:src/keys.c    **** }
 10303              		.loc 1 652 2 view .LVU3224
 652:src/keys.c    **** }
 10304              		.loc 1 652 15 is_stmt 0 view .LVU3225
 10305 1620 98F81130 		ldrb	r3, [r8, #17]	@ zero_extendqisi2
 10306 1624 3268     		ldr	r2, [r6]
 10307 1626 013B     		subs	r3, r3, #1
 10308 1628 18BF     		it	ne
 10309 162a 0123     		movne	r3, #1
 10310 162c 88F81130 		strb	r3, [r8, #17]
 10311              	.LVL861:
 652:src/keys.c    **** }
 10312              		.loc 1 652 15 view .LVU3226
 10313              	.LBE1002:
 10314              	.LBE1001:
2733:src/keys.c    **** 	case K_DOWN:
 10315              		.loc 1 2733 2 is_stmt 1 view .LVU3227
2733:src/keys.c    **** 	case K_DOWN:
 10316              		.loc 1 2733 2 is_stmt 0 view .LVU3228
 10317              	.LBE1005:
 10318              	.LBE1159:
 10319              	.LBE1246:
 10320              	.LBE1318:
3164:src/keys.c    ****     case STATE_SST:
 10321              		.loc 1 3164 5 is_stmt 1 view .LVU3229
 10322              	.LBB1319:
 10323              	.LBB1247:
 10324              	.LBB1160:
 10325              	.LBB1006:
2784:src/keys.c    **** 	}
 10326              		.loc 1 2784 10 is_stmt 0 view .LVU3230
 10327 1630 4FF0330B 		mov	fp, #51
 10328 1634 FEF73DBD 		b	.L565
 10329              	.LVL862:
 10330              	.L1133:
2784:src/keys.c    **** 	}
 10331              		.loc 1 2784 10 view .LVU3231
 10332              	.LBE1006:
 10333              	.LBE1160:
2939:src/keys.c    **** 		if (shift == SHIFT_H)
 10334              		.loc 1 2939 4 is_stmt 1 view .LVU3232
ARM GAS  /tmp/ccGwaFaD.s 			page 292


 10335              	.LBB1161:
 10336              	.LBI933:
 848:src/keys.c    **** 
 10337              		.loc 1 848 12 view .LVU3233
 10338              	.LBB959:
 851:src/keys.c    **** 		// Row 1
 10339              		.loc 1 851 2 view .LVU3234
 902:src/keys.c    **** 		STATE_UNFINISHED,
 10340              		.loc 1 902 2 view .LVU3235
 909:src/keys.c    **** 	int lc = keycode_to_linear(c);
 10341              		.loc 1 909 2 view .LVU3236
 10342              	.LBB938:
 10343              	.LBI938:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10344              		.loc 1 104 13 view .LVU3237
 10345              	.LBE938:
 10346              	.LBE959:
 10347              	.LBE1161:
 10348              	.LBE1247:
 10349              	.LBE1319:
 105:src/keys.c    **** }
 10350              		.loc 1 105 2 view .LVU3238
 10351              	.LBB1320:
 10352              	.LBB1248:
 10353              	.LBB1162:
 10354              	.LBB960:
 10355              	.LBB947:
 10356              	.LBB939:
 10357              	.LBI939:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10358              		.loc 1 94 20 view .LVU3239
 10359              	.LBB940:
  95:src/keys.c    **** 	State2.shifts = shift;
 10360              		.loc 1 95 2 view .LVU3240
 10361              	.LBB941:
 10362              	.LBI941:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 10363              		.loc 1 86 13 view .LVU3241
 10364              	.LBB942:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10365              		.loc 1 87 2 view .LVU3242
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10366              		.loc 1 87 18 is_stmt 0 view .LVU3243
 10367 1638 FFF7FEFF 		bl	shift_down
 10368              	.LVL863:
  88:src/keys.c    **** }
 10369              		.loc 1 88 2 is_stmt 1 view .LVU3244
  88:src/keys.c    **** }
 10370              		.loc 1 88 52 is_stmt 0 view .LVU3245
 10371 163c 0346     		mov	r3, r0
 10372 163e 08B9     		cbnz	r0, .L793
 10373 1640 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10374              	.L793:
 10375              	.LVL864:
  88:src/keys.c    **** }
 10376              		.loc 1 88 52 view .LVU3246
 10377              	.LBE942:
ARM GAS  /tmp/ccGwaFaD.s 			page 293


 10378              	.LBE941:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10379              		.loc 1 96 2 is_stmt 1 view .LVU3247
 10380              	.LBE940:
 10381              	.LBE939:
 10382              	.LBE947:
 10383              	.LBB948:
 10384              	.LBB949:
 148:src/keys.c    **** }
 10385              		.loc 1 148 23 is_stmt 0 view .LVU3248
 10386 1644 1F4A     		ldr	r2, .L1214+4
 10387              	.LBE949:
 10388              	.LBE948:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10389              		.loc 1 911 21 view .LVU3249
 10390 1646 DFF894C0 		ldr	ip, .L1214+28
 10391              	.LBB952:
 10392              	.LBB950:
 148:src/keys.c    **** }
 10393              		.loc 1 148 23 view .LVU3250
 10394 164a 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 10395              	.LBE950:
 10396              	.LBE952:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10397              		.loc 1 911 21 view .LVU3251
 10398 164c 4200     		lsls	r2, r0, #1
 10399 164e 022B     		cmp	r3, #2
 10400 1650 08BF     		it	eq
 10401 1652 0132     		addeq	r2, r2, #1
 10402              	.LBB953:
 10403              	.LBB945:
 10404              	.LBB943:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10405              		.loc 1 96 16 view .LVU3252
 10406 1654 0021     		movs	r1, #0
 10407              	.LBE943:
 10408              	.LBE945:
 10409              	.LBE953:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10410              		.loc 1 911 21 view .LVU3253
 10411 1656 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 10412              	.LBB954:
 10413              	.LBB946:
 10414              	.LBB944:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10415              		.loc 1 96 16 view .LVU3254
 10416 165a 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 10417              		.loc 1 98 2 is_stmt 1 view .LVU3255
 10418              	.LVL865:
  98:src/keys.c    **** }
 10419              		.loc 1 98 2 is_stmt 0 view .LVU3256
 10420              	.LBE944:
 10421              	.LBE946:
 10422              	.LBE954:
 910:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10423              		.loc 1 910 2 is_stmt 1 view .LVU3257
ARM GAS  /tmp/ccGwaFaD.s 			page 294


 10424              	.LBB955:
 10425              	.LBI948:
 136:src/keys.c    **** {
 10426              		.loc 1 136 12 view .LVU3258
 10427              	.LBB951:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10428              		.loc 1 138 2 view .LVU3259
 148:src/keys.c    **** }
 10429              		.loc 1 148 2 view .LVU3260
 148:src/keys.c    **** }
 10430              		.loc 1 148 2 is_stmt 0 view .LVU3261
 10431              	.LBE951:
 10432              	.LBE955:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10433              		.loc 1 911 2 is_stmt 1 view .LVU3262
 912:src/keys.c    **** 	if (no_int)
 10434              		.loc 1 912 2 view .LVU3263
 10435 165e 0BF4704A 		and	r10, fp, #61440
 10436              	.LVL866:
 913:src/keys.c    **** 		op &= ~NO_INT;
 10437              		.loc 1 913 2 view .LVU3264
 913:src/keys.c    **** 		op &= ~NO_INT;
 10438              		.loc 1 913 5 is_stmt 0 view .LVU3265
 10439 1662 BAF5704F 		cmp	r10, #61440
 10440 1666 00F08281 		beq	.L1185
 916:src/keys.c    **** 	case K00:
 10441              		.loc 1 916 2 is_stmt 1 view .LVU3266
 10442 166a 282C     		cmp	r4, #40
 10443 166c 22D8     		bhi	.L816
 10444 166e DFE804F0 		tbb	[pc, r4]
 10445              	.L884:
 10446 1672 5D       		.byte	(.L805-.L884)/2
 10447 1673 9E       		.byte	(.L803-.L884)/2
 10448 1674 21       		.byte	(.L816-.L884)/2
 10449 1675 9E       		.byte	(.L803-.L884)/2
 10450 1676 21       		.byte	(.L816-.L884)/2
 10451 1677 21       		.byte	(.L816-.L884)/2
 10452 1678 21       		.byte	(.L816-.L884)/2
 10453 1679 21       		.byte	(.L816-.L884)/2
 10454 167a 21       		.byte	(.L816-.L884)/2
 10455 167b 21       		.byte	(.L816-.L884)/2
 10456 167c 21       		.byte	(.L816-.L884)/2
 10457 167d 21       		.byte	(.L816-.L884)/2
 10458 167e 89       		.byte	(.L802-.L884)/2
 10459 167f 21       		.byte	(.L816-.L884)/2
 10460 1680 21       		.byte	(.L816-.L884)/2
 10461 1681 21       		.byte	(.L816-.L884)/2
 10462 1682 21       		.byte	(.L816-.L884)/2
 10463 1683 21       		.byte	(.L816-.L884)/2
 10464 1684 6F       		.byte	(.L801-.L884)/2
 10465 1685 15       		.byte	(.L800-.L884)/2
 10466 1686 21       		.byte	(.L816-.L884)/2
 10467 1687 21       		.byte	(.L816-.L884)/2
 10468 1688 21       		.byte	(.L816-.L884)/2
 10469 1689 21       		.byte	(.L816-.L884)/2
 10470 168a 21       		.byte	(.L816-.L884)/2
 10471 168b 21       		.byte	(.L816-.L884)/2
ARM GAS  /tmp/ccGwaFaD.s 			page 295


 10472 168c 21       		.byte	(.L816-.L884)/2
 10473 168d 21       		.byte	(.L816-.L884)/2
 10474 168e 21       		.byte	(.L816-.L884)/2
 10475 168f 21       		.byte	(.L816-.L884)/2
 10476 1690 42       		.byte	(.L799-.L884)/2
 10477 1691 37       		.byte	(.L798-.L884)/2
 10478 1692 49       		.byte	(.L796-.L884)/2
 10479 1693 49       		.byte	(.L796-.L884)/2
 10480 1694 21       		.byte	(.L816-.L884)/2
 10481 1695 21       		.byte	(.L816-.L884)/2
 10482 1696 21       		.byte	(.L816-.L884)/2
 10483 1697 21       		.byte	(.L816-.L884)/2
 10484 1698 21       		.byte	(.L816-.L884)/2
 10485 1699 49       		.byte	(.L796-.L884)/2
 10486 169a 49       		.byte	(.L796-.L884)/2
 10487 169b 00       		.p2align 1
 10488              	.L800:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10489              		.loc 1 961 4 view .LVU3267
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10490              		.loc 1 961 7 is_stmt 0 view .LVU3268
 10491 169c 022B     		cmp	r3, #2
 10492 169e 00F00B82 		beq	.L1186
 10493              	.LVL867:
 10494              	.L807:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10495              		.loc 1 1000 2 is_stmt 1 view .LVU3269
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10496              		.loc 1 1000 5 is_stmt 0 view .LVU3270
 10497 16a2 BAF5704F 		cmp	r10, #61440
 10498 16a6 05D1     		bne	.L816
 10499              	.L795:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10500              		.loc 1 1000 13 view .LVU3271
 10501 16a8 0A4B     		ldr	r3, .L1214+20
 10502 16aa 1B68     		ldr	r3, [r3]
 10503 16ac 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10504 16b0 D907     		lsls	r1, r3, #31
 10505 16b2 36D4     		bmi	.L899
 10506              	.LVL868:
 10507              	.L816:
1003:src/keys.c    **** #undef NO_INT
 10508              		.loc 1 1003 2 is_stmt 1 view .LVU3272
 10509              	.LBB956:
 10510              	.LBI935:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10511              		.loc 1 624 12 view .LVU3273
 10512              	.LBB937:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10513              		.loc 1 625 2 view .LVU3274
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10514              		.loc 1 625 6 is_stmt 0 view .LVU3275
 10515 16b4 4FEA2B23 		asr	r3, fp, #8
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10516              		.loc 1 625 5 view .LVU3276
 10517 16b8 012B     		cmp	r3, #1
 10518 16ba 7EF4C1AE 		bne	.L595
ARM GAS  /tmp/ccGwaFaD.s 			page 296


 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10519              		.loc 1 625 5 view .LVU3277
 10520 16be 76E4     		b	.L893
 10521              	.L1215:
 10522              		.align	2
 10523              	.L1214:
 10524 16c0 00000000 		.word	.LANCHOR1
 10525 16c4 00000000 		.word	.LANCHOR18
 10526 16c8 00000000 		.word	.LANCHOR17
 10527 16cc 00000000 		.word	.LANCHOR11
 10528 16d0 00000000 		.word	.LANCHOR21
 10529 16d4 00000000 		.word	main_ram
 10530 16d8 00000000 		.word	.LANCHOR9
 10531 16dc 00000000 		.word	.LANCHOR19
 10532              	.LVL869:
 10533              	.L798:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10534              		.loc 1 625 5 view .LVU3278
 10535              	.LBE937:
 10536              	.LBE956:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10537              		.loc 1 972 3 is_stmt 1 view .LVU3279
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10538              		.loc 1 972 7 is_stmt 0 view .LVU3280
 10539 16e0 FFF7FEFF 		bl	is_bad_cmdline
 10540              	.LVL870:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10541              		.loc 1 972 6 view .LVU3281
 10542 16e4 0446     		mov	r4, r0
 10543              	.LVL871:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10544              		.loc 1 972 6 view .LVU3282
 10545 16e6 0028     		cmp	r0, #0
 10546 16e8 00F03483 		beq	.L812
 10547 16ec 3268     		ldr	r2, [r6]
 973:src/keys.c    **** 		process_cmdline_set_lift();
 10548              		.loc 1 973 11 view .LVU3283
 10549 16ee 4FF0330B 		mov	fp, #51
 10550              	.LVL872:
 973:src/keys.c    **** 		process_cmdline_set_lift();
 10551              		.loc 1 973 11 view .LVU3284
 10552 16f2 FEF7DEBC 		b	.L565
 10553              	.LVL873:
 10554              	.L799:
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10555              		.loc 1 980 3 is_stmt 1 view .LVU3285
 10556 16f6 0093     		str	r3, [sp]
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10557              		.loc 1 980 18 is_stmt 0 view .LVU3286
 10558 16f8 FFF7FEFF 		bl	shift_down
 10559              	.LVL874:
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10560              		.loc 1 980 6 view .LVU3287
 10561 16fc 009B     		ldr	r3, [sp]
 10562 16fe 0028     		cmp	r0, #0
 10563 1700 40F0CC81 		bne	.L1187
 10564              	.L796:
ARM GAS  /tmp/ccGwaFaD.s 			page 297


 989:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10565              		.loc 1 989 3 is_stmt 1 view .LVU3288
 989:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10566              		.loc 1 989 6 is_stmt 0 view .LVU3289
 10567 1704 BBF59C7F 		cmp	fp, #312
 10568 1708 40F02E83 		bne	.L1188
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10569              		.loc 1 1000 2 is_stmt 1 view .LVU3290
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10570              		.loc 1 1000 5 is_stmt 0 view .LVU3291
 10571 170c BAF5704F 		cmp	r10, #61440
 10572 1710 7FF44DAC 		bne	.L893
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10573              		.loc 1 1000 13 view .LVU3292
 10574 1714 DD4B     		ldr	r3, .L1216
 10575 1716 1B68     		ldr	r3, [r3]
 10576 1718 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10577 171c DB07     		lsls	r3, r3, #31
 10578 171e 7FF546AC 		bpl	.L893
 10579              	.L899:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10580              		.loc 1 1000 13 view .LVU3293
 10581 1722 3268     		ldr	r2, [r6]
1001:src/keys.c    **** 
 10582              		.loc 1 1001 10 view .LVU3294
 10583 1724 4FF0330B 		mov	fp, #51
 10584              	.LVL875:
1001:src/keys.c    **** 
 10585              		.loc 1 1001 10 view .LVU3295
 10586 1728 FEF7C3BC 		b	.L565
 10587              	.LVL876:
 10588              	.L805:
 918:src/keys.c    **** 	    State2.hyp = 1;
 10589              		.loc 1 918 4 is_stmt 1 view .LVU3296
 918:src/keys.c    **** 	    State2.hyp = 1;
 10590              		.loc 1 918 8 is_stmt 0 view .LVU3297
 10591 172c D74A     		ldr	r2, .L1216
 10592 172e 1268     		ldr	r2, [r2]
 10593 1730 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 918:src/keys.c    **** 	    State2.hyp = 1;
 10594              		.loc 1 918 7 view .LVU3298
 10595 1734 D407     		lsls	r4, r2, #31
 10596 1736 40F19781 		bpl	.L1189
 10597              	.L1100:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10598              		.loc 1 937 20 view .LVU3299
 10599 173a 012B     		cmp	r3, #1
 10600 173c 00F08C81 		beq	.L1190
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10601              		.loc 1 1000 2 is_stmt 1 view .LVU3300
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10602              		.loc 1 1000 5 is_stmt 0 view .LVU3301
 10603 1740 BAF5704F 		cmp	r10, #61440
 10604 1744 B6D1     		bne	.L816
 10605 1746 3268     		ldr	r2, [r6]
1001:src/keys.c    **** 
 10606              		.loc 1 1001 10 view .LVU3302
ARM GAS  /tmp/ccGwaFaD.s 			page 298


 10607 1748 4FF0330B 		mov	fp, #51
 10608              	.LVL877:
1001:src/keys.c    **** 
 10609              		.loc 1 1001 10 view .LVU3303
 10610 174c FEF7B1BC 		b	.L565
 10611              	.LVL878:
 10612              	.L801:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10613              		.loc 1 966 4 is_stmt 1 view .LVU3304
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10614              		.loc 1 966 7 is_stmt 0 view .LVU3305
 10615 1750 022B     		cmp	r3, #2
 10616 1752 A6D1     		bne	.L807
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10617              		.loc 1 966 27 view .LVU3306
 10618 1754 CD4B     		ldr	r3, .L1216
 10619              	.LVL879:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10620              		.loc 1 966 27 view .LVU3307
 10621 1756 1B68     		ldr	r3, [r3]
 10622 1758 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10623 175c DB07     		lsls	r3, r3, #31
 10624 175e A0D5     		bpl	.L807
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10625              		.loc 1 966 45 view .LVU3308
 10626 1760 0E20     		movs	r0, #14
 10627              	.LVL880:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10628              		.loc 1 966 45 view .LVU3309
 10629 1762 FFF7FEFF 		bl	intltr
 10630              	.LVL881:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10631              		.loc 1 966 42 view .LVU3310
 10632 1766 0028     		cmp	r0, #0
 10633 1768 9BD0     		beq	.L807
 10634              	.LVL882:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10635              		.loc 1 966 42 view .LVU3311
 10636              	.LBE960:
 10637              	.LBE1162:
 10638              	.LBE1248:
 10639              	.LBE1320:
3200:src/keys.c    **** 	NonProgrammable = 0;
 10640              		.loc 1 3200 7 is_stmt 1 view .LVU3312
3200:src/keys.c    **** 	NonProgrammable = 0;
 10641              		.loc 1 3200 11 is_stmt 0 view .LVU3313
 10642 176a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3200:src/keys.c    **** 	NonProgrammable = 0;
 10643              		.loc 1 3200 10 view .LVU3314
 10644 176e 5A06     		lsls	r2, r3, #25
 10645 1770 40F1BB81 		bpl	.L931
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10646              		.loc 1 3201 2 is_stmt 1 view .LVU3315
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10647              		.loc 1 3201 18 is_stmt 0 view .LVU3316
 10648 1774 C64B     		ldr	r3, .L1216+4
 10649 1776 0022     		movs	r2, #0
ARM GAS  /tmp/ccGwaFaD.s 			page 299


 10650              	.LBB1321:
 10651              	.LBB1249:
 10652              	.LBB1163:
 10653              	.LBB961:
 967:src/keys.c    **** 	  }
 10654              		.loc 1 967 13 view .LVU3317
 10655 1778 4FF0130B 		mov	fp, #19
 10656              	.LBE961:
 10657              	.LBE1163:
 10658              	.LBE1249:
 10659              	.LBE1321:
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10660              		.loc 1 3201 18 view .LVU3318
 10661 177c 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10662              		.loc 1 3202 2 is_stmt 1 view .LVU3319
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10663              		.loc 1 3202 32 is_stmt 0 view .LVU3320
 10664 177e 5846     		mov	r0, fp
 10665 1780 FFF722B8 		b	.L874
 10666              	.LVL883:
 10667              	.L802:
 10668              	.LBB1322:
 10669              	.LBB1250:
 10670              	.LBB1164:
 10671              	.LBB962:
 948:src/keys.c    **** 			if (is_bad_cmdline())
 10672              		.loc 1 948 3 is_stmt 1 view .LVU3321
 948:src/keys.c    **** 			if (is_bad_cmdline())
 10673              		.loc 1 948 6 is_stmt 0 view .LVU3322
 10674 1784 012B     		cmp	r3, #1
 10675 1786 8CD1     		bne	.L807
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 10676              		.loc 1 949 4 is_stmt 1 view .LVU3323
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 10677              		.loc 1 949 8 is_stmt 0 view .LVU3324
 10678 1788 FFF7FEFF 		bl	is_bad_cmdline
 10679              	.LVL884:
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 10680              		.loc 1 949 7 view .LVU3325
 10681 178c 0028     		cmp	r0, #0
 10682 178e 40F0B681 		bne	.L1191
 951:src/keys.c    **** 			State2.alphas = 1;
 10683              		.loc 1 951 4 is_stmt 1 view .LVU3326
 10684 1792 FFF7FEFF 		bl	process_cmdline_set_lift
 10685              	.LVL885:
 952:src/keys.c    **** #ifdef DM42
 10686              		.loc 1 952 4 view .LVU3327
 952:src/keys.c    **** #ifdef DM42
 10687              		.loc 1 952 18 is_stmt 0 view .LVU3328
 10688 1796 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 954:src/keys.c    **** 			display_current_menu();
 10689              		.loc 1 954 4 view .LVU3329
 10690 179a 1020     		movs	r0, #16
 952:src/keys.c    **** #ifdef DM42
 10691              		.loc 1 952 18 view .LVU3330
 10692 179c 43F00803 		orr	r3, r3, #8
ARM GAS  /tmp/ccGwaFaD.s 			page 300


 10693 17a0 88F81630 		strb	r3, [r8, #22]
 954:src/keys.c    **** 			display_current_menu();
 10694              		.loc 1 954 4 is_stmt 1 view .LVU3331
 10695 17a4 FFF7FEFF 		bl	set_menu
 10696              	.LVL886:
 955:src/keys.c    **** #endif
 10697              		.loc 1 955 4 view .LVU3332
 10698 17a8 FFF7FEFF 		bl	display_current_menu
 10699              	.LVL887:
 10700 17ac 79E7     		b	.L807
 10701              	.LVL888:
 10702              	.L803:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10703              		.loc 1 937 4 view .LVU3333
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10704              		.loc 1 937 8 is_stmt 0 view .LVU3334
 10705 17ae B74A     		ldr	r2, .L1216
 10706 17b0 1268     		ldr	r2, [r2]
 10707 17b2 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10708              		.loc 1 937 7 view .LVU3335
 10709 17b6 D107     		lsls	r1, r2, #31
 10710 17b8 7FF573AF 		bpl	.L807
 10711 17bc BDE7     		b	.L1100
 10712              	.LVL889:
 10713              	.L682:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10714              		.loc 1 937 7 view .LVU3336
 10715              	.LBE962:
 10716              	.LBE1164:
 10717              	.LBB1165:
 10718              	.LBB880:
2427:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10719              		.loc 1 2427 3 is_stmt 1 view .LVU3337
2427:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10720              		.loc 1 2427 6 is_stmt 0 view .LVU3338
 10721 17be 0129     		cmp	r1, #1
 10722 17c0 00F00D82 		beq	.L1192
2430:src/keys.c    **** 		return STATE_UNFINISHED;
 10723              		.loc 1 2430 4 is_stmt 1 view .LVU3339
 10724              	.LBB872:
 10725              	.LBI872:
2384:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10726              		.loc 1 2384 13 view .LVU3340
 10727              	.LBB873:
2386:src/keys.c    **** 	if (! State2.alphas )
 10728              		.loc 1 2386 2 view .LVU3341
2386:src/keys.c    **** 	if (! State2.alphas )
 10729              		.loc 1 2386 15 is_stmt 0 view .LVU3342
 10730 17c4 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2387:src/keys.c    **** 		State2.alphashift = 0;
 10731              		.loc 1 2387 6 view .LVU3343
 10732 17c8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2386:src/keys.c    **** 	if (! State2.alphas )
 10733              		.loc 1 2386 15 view .LVU3344
 10734 17cc 60F3C302 		bfi	r2, r0, #3, #1
 10735 17d0 88F81520 		strb	r2, [r8, #21]
ARM GAS  /tmp/ccGwaFaD.s 			page 301


2387:src/keys.c    **** 		State2.alphashift = 0;
 10736              		.loc 1 2387 2 is_stmt 1 view .LVU3345
2387:src/keys.c    **** 		State2.alphashift = 0;
 10737              		.loc 1 2387 5 is_stmt 0 view .LVU3346
 10738 17d4 13F00802 		ands	r2, r3, #8
2388:src/keys.c    **** }
 10739              		.loc 1 2388 3 is_stmt 1 view .LVU3347
2388:src/keys.c    **** }
 10740              		.loc 1 2388 21 is_stmt 0 view .LVU3348
 10741 17d8 04BF     		itt	eq
 10742 17da 62F30413 		bfieq	r3, r2, #4, #1
 10743 17de 88F81630 		strbeq	r3, [r8, #22]
 10744 17e2 3268     		ldr	r2, [r6]
 10745              	.LBE873:
 10746              	.LBE872:
2431:src/keys.c    **** 
 10747              		.loc 1 2431 10 view .LVU3349
 10748 17e4 4FF0330B 		mov	fp, #51
 10749 17e8 FEF763BC 		b	.L565
 10750              	.L681:
2417:src/keys.c    **** 			if (State2.numdigit == 0)
 10751              		.loc 1 2417 3 is_stmt 1 view .LVU3350
2417:src/keys.c    **** 			if (State2.numdigit == 0)
 10752              		.loc 1 2417 6 is_stmt 0 view .LVU3351
 10753 17ec 0329     		cmp	r1, #3
 10754 17ee 3FF4DAAA 		beq	.L687
2418:src/keys.c    **** 				reset_multi();
 10755              		.loc 1 2418 4 is_stmt 1 view .LVU3352
2418:src/keys.c    **** 				reset_multi();
 10756              		.loc 1 2418 14 is_stmt 0 view .LVU3353
 10757 17f2 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2418:src/keys.c    **** 				reset_multi();
 10758              		.loc 1 2418 7 view .LVU3354
 10759 17f6 002A     		cmp	r2, #0
 10760 17f8 40F09A82 		bne	.L688
2419:src/keys.c    **** 			else
 10761              		.loc 1 2419 5 is_stmt 1 view .LVU3355
 10762              	.LBB874:
 10763              	.LBI874:
2384:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10764              		.loc 1 2384 13 view .LVU3356
 10765              	.LBB875:
2386:src/keys.c    **** 	if (! State2.alphas )
 10766              		.loc 1 2386 2 view .LVU3357
2387:src/keys.c    **** 		State2.alphashift = 0;
 10767              		.loc 1 2387 6 is_stmt 0 view .LVU3358
 10768 17fc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2386:src/keys.c    **** 	if (! State2.alphas )
 10769              		.loc 1 2386 15 view .LVU3359
 10770 1800 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 10771              	.LVL890:
2386:src/keys.c    **** 	if (! State2.alphas )
 10772              		.loc 1 2386 15 view .LVU3360
 10773 1804 62F3C301 		bfi	r1, r2, #3, #1
2387:src/keys.c    **** 		State2.alphashift = 0;
 10774              		.loc 1 2387 5 view .LVU3361
 10775 1808 13F00802 		ands	r2, r3, #8
ARM GAS  /tmp/ccGwaFaD.s 			page 302


2388:src/keys.c    **** }
 10776              		.loc 1 2388 21 view .LVU3362
 10777 180c 08BF     		it	eq
 10778 180e 62F30413 		bfieq	r3, r2, #4, #1
2386:src/keys.c    **** 	if (! State2.alphas )
 10779              		.loc 1 2386 15 view .LVU3363
 10780 1812 88F81510 		strb	r1, [r8, #21]
2387:src/keys.c    **** 		State2.alphashift = 0;
 10781              		.loc 1 2387 2 is_stmt 1 view .LVU3364
2388:src/keys.c    **** }
 10782              		.loc 1 2388 3 view .LVU3365
2388:src/keys.c    **** }
 10783              		.loc 1 2388 21 is_stmt 0 view .LVU3366
 10784 1816 08BF     		it	eq
 10785 1818 88F81630 		strbeq	r3, [r8, #22]
 10786 181c 3268     		ldr	r2, [r6]
 10787              	.LBE875:
 10788              	.LBE874:
2422:src/keys.c    **** 		}
 10789              		.loc 1 2422 11 view .LVU3367
 10790 181e 4FF0330B 		mov	fp, #51
 10791 1822 FEF746BC 		b	.L565
 10792              	.LVL891:
 10793              	.L1165:
2443:src/keys.c    **** 		State2.numdigit = 1;
 10794              		.loc 1 2443 3 is_stmt 1 view .LVU3368
2444:src/keys.c    **** 		return STATE_UNFINISHED;
 10795              		.loc 1 2444 19 is_stmt 0 view .LVU3369
 10796 1826 0123     		movs	r3, #1
 10797 1828 3268     		ldr	r2, [r6]
2443:src/keys.c    **** 		State2.numdigit = 1;
 10798              		.loc 1 2443 17 view .LVU3370
 10799 182a A8F80800 		strh	r0, [r8, #8]	@ movhi
2444:src/keys.c    **** 		return STATE_UNFINISHED;
 10800              		.loc 1 2444 3 is_stmt 1 view .LVU3371
2444:src/keys.c    **** 		return STATE_UNFINISHED;
 10801              		.loc 1 2444 19 is_stmt 0 view .LVU3372
 10802 182e 88F80B30 		strb	r3, [r8, #11]
2445:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10803              		.loc 1 2445 3 is_stmt 1 view .LVU3373
2445:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10804              		.loc 1 2445 10 is_stmt 0 view .LVU3374
 10805 1832 4FF0330B 		mov	fp, #51
 10806 1836 FEF73CBC 		b	.L565
 10807              	.LVL892:
 10808              	.L1172:
2445:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10809              		.loc 1 2445 10 view .LVU3375
 10810              	.LBE880:
 10811              	.LBE1165:
 10812              	.LBB1166:
 10813              	.LBB1007:
 10814              	.LBB1003:
2718:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10815              		.loc 1 2718 3 is_stmt 1 view .LVU3376
2718:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10816              		.loc 1 2718 19 is_stmt 0 view .LVU3377
ARM GAS  /tmp/ccGwaFaD.s 			page 303


 10817 183a B8F80810 		ldrh	r1, [r8, #8]
2718:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10818              		.loc 1 2718 27 view .LVU3378
 10819 183e 0A23     		movs	r3, #10
2718:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10820              		.loc 1 2718 32 view .LVU3379
 10821 1840 03FB01B2 		mla	r2, r3, r1, fp
2718:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10822              		.loc 1 2718 37 view .LVU3380
 10823 1844 6424     		movs	r4, #100
 10824 1846 B2FBF4F3 		udiv	r3, r2, r4
 10825 184a 04FB1323 		mls	r3, r4, r3, r2
 10826              	.LVL893:
2719:src/keys.c    **** 			dv = n;
 10827              		.loc 1 2719 3 is_stmt 1 view .LVU3381
2719:src/keys.c    **** 			dv = n;
 10828              		.loc 1 2719 6 is_stmt 0 view .LVU3382
 10829 184e 5345     		cmp	r3, r10
 10830 1850 09DA     		bge	.L729
2719:src/keys.c    **** 			dv = n;
 10831              		.loc 1 2719 21 view .LVU3383
 10832 1852 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2719:src/keys.c    **** 			dv = n;
 10833              		.loc 1 2719 17 view .LVU3384
 10834 1856 D407     		lsls	r4, r2, #31
 10835 1858 3FF5CBAC 		bmi	.L1095
2719:src/keys.c    **** 			dv = n;
 10836              		.loc 1 2719 36 view .LVU3385
 10837 185c 8842     		cmp	r0, r1
 10838 185e 02DD     		ble	.L729
2719:src/keys.c    **** 			dv = n;
 10839              		.loc 1 2719 63 view .LVU3386
 10840 1860 9842     		cmp	r0, r3
 10841 1862 3FF7C6AC 		bgt	.L1095
 10842              	.L729:
2720:src/keys.c    **** 		State2.digval = dv;
 10843              		.loc 1 2720 4 is_stmt 1 view .LVU3387
2720:src/keys.c    **** 		State2.digval = dv;
 10844              		.loc 1 2720 7 is_stmt 0 view .LVU3388
 10845 1866 5B46     		mov	r3, fp
 10846              	.LVL894:
2721:src/keys.c    **** 		goto reset_window;
 10847              		.loc 1 2721 3 is_stmt 1 view .LVU3389
 10848 1868 C3E4     		b	.L1095
 10849              	.LVL895:
 10850              	.L1174:
2721:src/keys.c    **** 		goto reset_window;
 10851              		.loc 1 2721 3 is_stmt 0 view .LVU3390
 10852              	.LBE1003:
2729:src/keys.c    **** 		goto reset_window;
 10853              		.loc 1 2729 3 is_stmt 1 view .LVU3391
2729:src/keys.c    **** 		goto reset_window;
 10854              		.loc 1 2729 17 is_stmt 0 view .LVU3392
 10855 186a A8F808B0 		strh	fp, [r8, #8]	@ movhi
2730:src/keys.c    **** 	}
 10856              		.loc 1 2730 3 is_stmt 1 view .LVU3393
 10857 186e C2E4     		b	.L727
ARM GAS  /tmp/ccGwaFaD.s 			page 304


 10858              	.LVL896:
 10859              	.L1151:
2730:src/keys.c    **** 	}
 10860              		.loc 1 2730 3 is_stmt 0 view .LVU3394
 10861              	.LBE1007:
 10862              	.LBE1166:
 10863              	.LBB1167:
 10864              	.LBB757:
1375:src/keys.c    **** 		if (rawpc == 1)
 10865              		.loc 1 1375 3 is_stmt 1 view .LVU3395
1375:src/keys.c    **** 		if (rawpc == 1)
 10866              		.loc 1 1375 11 is_stmt 0 view .LVU3396
 10867 1870 DFF81892 		ldr	r9, .L1216
 10868 1874 D9F80030 		ldr	r3, [r9]
 10869              	.LVL897:
1375:src/keys.c    **** 		if (rawpc == 1)
 10870              		.loc 1 1375 9 view .LVU3397
 10871 1878 B3F8E007 		ldrh	r0, [r3, #2016]
 10872              	.LVL898:
1376:src/keys.c    **** 			rawpc = 0;
 10873              		.loc 1 1376 3 is_stmt 1 view .LVU3398
1377:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10874              		.loc 1 1377 10 is_stmt 0 view .LVU3399
 10875 187c 0128     		cmp	r0, #1
 10876              	.LVL899:
1378:src/keys.c    **** 		update_program_bounds(1);
 10877              		.loc 1 1378 3 is_stmt 1 view .LVU3400
 10878 187e 08BF     		it	eq
 10879 1880 0020     		moveq	r0, #0
 10880              	.LVL900:
1378:src/keys.c    **** 		update_program_bounds(1);
 10881              		.loc 1 1378 3 is_stmt 0 view .LVU3401
 10882 1882 0021     		movs	r1, #0
 10883 1884 FFF7FEFF 		bl	do_dec
 10884              	.LVL901:
1378:src/keys.c    **** 		update_program_bounds(1);
 10885              		.loc 1 1378 3 view .LVU3402
 10886 1888 FFF7FEFF 		bl	set_pc
 10887              	.LVL902:
1379:src/keys.c    **** 		rawpc = ProgBegin;
 10888              		.loc 1 1379 3 is_stmt 1 view .LVU3403
 10889 188c 0120     		movs	r0, #1
 10890 188e FFF7FEFF 		bl	update_program_bounds
 10891              	.LVL903:
1380:src/keys.c    **** 		goto fin;
 10892              		.loc 1 1380 3 view .LVU3404
1380:src/keys.c    **** 		goto fin;
 10893              		.loc 1 1380 11 is_stmt 0 view .LVU3405
 10894 1892 D9F80030 		ldr	r3, [r9]
1380:src/keys.c    **** 		goto fin;
 10895              		.loc 1 1380 9 view .LVU3406
 10896 1896 B3F8EC07 		ldrh	r0, [r3, #2028]
 10897              	.LVL904:
1381:src/keys.c    **** 	}
 10898              		.loc 1 1381 3 is_stmt 1 view .LVU3407
 10899 189a FFF73EBA 		b	.L607
 10900              	.LVL905:
ARM GAS  /tmp/ccGwaFaD.s 			page 305


 10901              	.L912:
1381:src/keys.c    **** 	}
 10902              		.loc 1 1381 3 is_stmt 0 view .LVU3408
 10903              	.LBE757:
 10904              	.LBE1167:
 10905              	.LBB1168:
 10906              	.LBB670:
 10907              	.LBB664:
 304:src/keys.c    ****     }
 10908              		.loc 1 304 14 view .LVU3409
 10909 189e 4FF0160B 		mov	fp, #22
 10910 18a2 FFF7EFB9 		b	.L661
 10911              	.LVL906:
 10912              	.L1180:
 304:src/keys.c    ****     }
 10913              		.loc 1 304 14 view .LVU3410
 10914 18a6 3268     		ldr	r2, [r6]
 10915 18a8 FEF703BC 		b	.L565
 10916              	.LVL907:
 10917              	.L848:
 304:src/keys.c    ****     }
 10918              		.loc 1 304 14 view .LVU3411
 10919              	.LBE664:
 10920              	.LBE670:
 10921              	.LBE1168:
 10922              	.LBB1169:
 10923              	.LBB687:
 774:src/keys.c    **** 	case K03:
 10924              		.loc 1 774 3 is_stmt 1 view .LVU3412
 774:src/keys.c    **** 	case K03:
 10925              		.loc 1 774 10 is_stmt 0 view .LVU3413
 10926 18ac 5146     		mov	r1, r10
 10927 18ae 0120     		movs	r0, #1
 10928 18b0 FFF7FEFF 		bl	check_f_key
 10929              	.LVL908:
 10930 18b4 8346     		mov	fp, r0
 10931 18b6 FEF7C3BD 		b	.L595
 10932              	.L847:
 772:src/keys.c    **** 	case K01:
 10933              		.loc 1 772 3 is_stmt 1 view .LVU3414
 772:src/keys.c    **** 	case K01:
 10934              		.loc 1 772 10 is_stmt 0 view .LVU3415
 10935 18ba 5146     		mov	r1, r10
 10936 18bc 0020     		movs	r0, #0
 10937 18be FFF7FEFF 		bl	check_f_key
 10938              	.LVL909:
 10939 18c2 8346     		mov	fp, r0
 10940 18c4 FEF7BCBD 		b	.L595
 10941              	.LVL910:
 10942              	.L1168:
 772:src/keys.c    **** 	case K01:
 10943              		.loc 1 772 10 view .LVU3416
 10944              	.LBE687:
 10945              	.LBE1169:
 10946              	.LBB1170:
 10947              	.LBB929:
2579:src/keys.c    **** 	const int direct = State2.runmode;
ARM GAS  /tmp/ccGwaFaD.s 			page 306


 10948              		.loc 1 2579 37 view .LVU3417
 10949 18c8 5046     		mov	r0, r10
 10950 18ca FFF7FEFF 		bl	getprog
 10951              	.LVL911:
2579:src/keys.c    **** 	const int direct = State2.runmode;
 10952              		.loc 1 2579 63 view .LVU3418
 10953 18ce 20F47062 		bic	r2, r0, #3840
 10954 18d2 FFF727BB 		b	.L696
 10955              	.LVL912:
 10956              	.L667:
2579:src/keys.c    **** 	const int direct = State2.runmode;
 10957              		.loc 1 2579 63 view .LVU3419
 10958 18d6 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 10959              	.LBE929:
 10960              	.LBE1170:
 10961              	.LBB1171:
 10962              	.LBB671:
 10963              	.LBB665:
 325:src/keys.c    **** #ifndef WINGUI
 10964              		.loc 1 325 8 view .LVU3420
 10965 18da 6E4B     		ldr	r3, .L1216+8
 331:src/keys.c    ****   }
 10966              		.loc 1 331 9 view .LVU3421
 10967 18dc 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 10968              		.loc 1 327 73 view .LVU3422
 10969 18de 4FF0020C 		mov	ip, #2
 10970 18e2 FEF7B8BC 		b	.L666
 10971              	.LVL913:
 10972              	.L1164:
 327:src/keys.c    **** #else
 10973              		.loc 1 327 73 view .LVU3423
 10974 18e6 3268     		ldr	r2, [r6]
 10975              	.LBE665:
 10976              	.LBE671:
 10977              	.LBE1171:
 10978              	.LBB1172:
 10979              	.LBB881:
2440:src/keys.c    **** add_char:
 10980              		.loc 1 2440 10 view .LVU3424
 10981 18e8 4FF0330B 		mov	fp, #51
 10982 18ec FEF7E1BB 		b	.L565
 10983              	.LVL914:
 10984              	.L614:
2440:src/keys.c    **** add_char:
 10985              		.loc 1 2440 10 view .LVU3425
 10986              	.LBE881:
 10987              	.LBE1172:
 10988              	.LBB1173:
 10989              	.LBB758:
1385:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 10990              		.loc 1 1385 3 is_stmt 1 view .LVU3426
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 10991              		.loc 1 1386 18 is_stmt 0 view .LVU3427
 10992 18f0 664C     		ldr	r4, .L1216
1385:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 10993              		.loc 1 1385 3 view .LVU3428
ARM GAS  /tmp/ccGwaFaD.s 			page 307


 10994 18f2 0120     		movs	r0, #1
 10995 18f4 FFF7FEFF 		bl	update_program_bounds
 10996              	.LVL915:
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 10997              		.loc 1 1386 3 is_stmt 1 view .LVU3429
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 10998              		.loc 1 1386 18 is_stmt 0 view .LVU3430
 10999 18f8 2368     		ldr	r3, [r4]
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11000              		.loc 1 1386 11 view .LVU3431
 11001 18fa 0021     		movs	r1, #0
 11002 18fc B3F8EE07 		ldrh	r0, [r3, #2030]
 11003 1900 FFF7FEFF 		bl	do_inc
 11004              	.LVL916:
1387:src/keys.c    **** 			rawpc = 1;
 11005              		.loc 1 1387 3 is_stmt 1 view .LVU3432
1387:src/keys.c    **** 			rawpc = 1;
 11006              		.loc 1 1387 6 is_stmt 0 view .LVU3433
 11007 1904 0028     		cmp	r0, #0
 11008 1906 7FF408AA 		bne	.L607
1387:src/keys.c    **** 			rawpc = 1;
 11009              		.loc 1 1387 21 view .LVU3434
 11010 190a 2368     		ldr	r3, [r4]
1387:src/keys.c    **** 			rawpc = 1;
 11011              		.loc 1 1387 18 view .LVU3435
 11012 190c 5888     		ldrh	r0, [r3, #2]
 11013              	.LVL917:
1387:src/keys.c    **** 			rawpc = 1;
 11014              		.loc 1 1387 18 view .LVU3436
 11015 190e 0038     		subs	r0, r0, #0
 11016 1910 18BF     		it	ne
 11017 1912 0120     		movne	r0, #1
 11018 1914 FFF701BA 		b	.L607
 11019              	.LVL918:
 11020              	.L818:
1387:src/keys.c    **** 			rawpc = 1;
 11021              		.loc 1 1387 18 view .LVU3437
 11022              	.LBE758:
 11023              	.LBE1173:
 11024              	.LBB1174:
 11025              	.LBB1152:
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 11026              		.loc 1 1071 3 is_stmt 1 view .LVU3438
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 11027              		.loc 1 1071 7 is_stmt 0 view .LVU3439
 11028 1918 5C4B     		ldr	r3, .L1216
 11029 191a 1B68     		ldr	r3, [r3]
 11030 191c 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 11031              		.loc 1 1071 6 view .LVU3440
 11032 1920 D207     		lsls	r2, r2, #31
 11033 1922 40F19180 		bpl	.L821
1072:src/keys.c    **** 		else
 11034              		.loc 1 1072 4 is_stmt 1 view .LVU3441
1072:src/keys.c    **** 		else
 11035              		.loc 1 1072 57 is_stmt 0 view .LVU3442
 11036 1926 93F9E737 		ldrsb	r3, [r3, #2023]
ARM GAS  /tmp/ccGwaFaD.s 			page 308


 11037 192a 002B     		cmp	r3, #0
 11038 192c 40F2531B 		movw	fp, #339
 11039 1930 A8BF     		it	ge
 11040 1932 4FF4AA7B 		movge	fp, #340
 11041 1936 38E6     		b	.L823
 11042              	.LVL919:
 11043              	.L1183:
1101:src/keys.c    **** #undef _RARG
 11044              		.loc 1 1101 2 is_stmt 1 view .LVU3443
1101:src/keys.c    **** #undef _RARG
 11045              		.loc 1 1101 9 is_stmt 0 view .LVU3444
 11046 1938 544B     		ldr	r3, .L1216
 11047 193a 1B68     		ldr	r3, [r3]
 11048 193c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1101:src/keys.c    **** #undef _RARG
 11049              		.loc 1 1101 57 view .LVU3445
 11050 1940 DC07     		lsls	r4, r3, #31
 11051 1942 7FF532AE 		bpl	.L823
 11052              	.LVL920:
1101:src/keys.c    **** #undef _RARG
 11053              		.loc 1 1101 21 view .LVU3446
 11054 1946 1AF4804F 		tst	r10, #16384
 11055 194a 3FF42EAE 		beq	.L823
 11056 194e 3268     		ldr	r2, [r6]
1101:src/keys.c    **** #undef _RARG
 11057              		.loc 1 1101 57 view .LVU3447
 11058 1950 4FF0330B 		mov	fp, #51
 11059 1954 FEF7ADBB 		b	.L565
 11060              	.LVL921:
 11061              	.L1176:
1101:src/keys.c    **** #undef _RARG
 11062              		.loc 1 1101 57 view .LVU3448
 11063 1958 3268     		ldr	r2, [r6]
 11064              	.LBE1152:
 11065              	.LBE1174:
 11066              	.LBE1250:
 11067              	.LBE1322:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 11068              		.loc 1 2979 7 view .LVU3449
 11069 195a 0D46     		mov	r5, r1
 11070              	.LBB1323:
 11071              	.LBB1251:
 11072              	.LBB1175:
 11073              	.LBB1084:
1519:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11074              		.loc 1 1519 10 view .LVU3450
 11075 195c 4FF0330B 		mov	fp, #51
 11076 1960 FEF7A7BB 		b	.L565
 11077              	.LVL922:
 11078              	.L745:
1519:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11079              		.loc 1 1519 10 view .LVU3451
 11080 1964 3268     		ldr	r2, [r6]
 11081              	.LBE1084:
 11082              	.LBE1175:
 11083              	.LBB1176:
 11084              	.LBB1008:
ARM GAS  /tmp/ccGwaFaD.s 			page 309


2763:src/keys.c    **** 		break;		// Exit doing nothing
 11085              		.loc 1 2763 11 view .LVU3452
 11086 1966 4FF0330B 		mov	fp, #51
 11087              	.LVL923:
2763:src/keys.c    **** 		break;		// Exit doing nothing
 11088              		.loc 1 2763 11 view .LVU3453
 11089 196a FEF7A2BB 		b	.L565
 11090              	.LVL924:
 11091              	.L1185:
2763:src/keys.c    **** 		break;		// Exit doing nothing
 11092              		.loc 1 2763 11 view .LVU3454
 11093              	.LBE1008:
 11094              	.LBE1176:
 11095              	.LBB1177:
 11096              	.LBB963:
 914:src/keys.c    **** 
 11097              		.loc 1 914 3 is_stmt 1 view .LVU3455
 914:src/keys.c    **** 
 11098              		.loc 1 914 6 is_stmt 0 view .LVU3456
 11099 196e 2BF4704B 		bic	fp, fp, #61440
 11100              	.LVL925:
 916:src/keys.c    **** 	case K00:
 11101              		.loc 1 916 2 is_stmt 1 view .LVU3457
 11102 1972 282C     		cmp	r4, #40
 11103 1974 3FF698AE 		bhi	.L795
 11104 1978 01A2     		adr	r2, .L797
 11105 197a 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 11106 197e 00BF     		.p2align 2
 11107              	.L797:
 11108 1980 2D170000 		.word	.L805+1
 11109 1984 AF170000 		.word	.L803+1
 11110 1988 A9160000 		.word	.L795+1
 11111 198c AF170000 		.word	.L803+1
 11112 1990 A9160000 		.word	.L795+1
 11113 1994 A9160000 		.word	.L795+1
 11114 1998 A9160000 		.word	.L795+1
 11115 199c A9160000 		.word	.L795+1
 11116 19a0 A9160000 		.word	.L795+1
 11117 19a4 A9160000 		.word	.L795+1
 11118 19a8 A9160000 		.word	.L795+1
 11119 19ac A9160000 		.word	.L795+1
 11120 19b0 85170000 		.word	.L802+1
 11121 19b4 A9160000 		.word	.L795+1
 11122 19b8 A9160000 		.word	.L795+1
 11123 19bc A9160000 		.word	.L795+1
 11124 19c0 A9160000 		.word	.L795+1
 11125 19c4 A9160000 		.word	.L795+1
 11126 19c8 51170000 		.word	.L801+1
 11127 19cc 9D160000 		.word	.L800+1
 11128 19d0 A9160000 		.word	.L795+1
 11129 19d4 A9160000 		.word	.L795+1
 11130 19d8 A9160000 		.word	.L795+1
 11131 19dc A9160000 		.word	.L795+1
 11132 19e0 A9160000 		.word	.L795+1
 11133 19e4 A9160000 		.word	.L795+1
 11134 19e8 A9160000 		.word	.L795+1
 11135 19ec A9160000 		.word	.L795+1
ARM GAS  /tmp/ccGwaFaD.s 			page 310


 11136 19f0 A9160000 		.word	.L795+1
 11137 19f4 A9160000 		.word	.L795+1
 11138 19f8 F7160000 		.word	.L799+1
 11139 19fc E1160000 		.word	.L798+1
 11140 1a00 05170000 		.word	.L796+1
 11141 1a04 05170000 		.word	.L796+1
 11142 1a08 A9160000 		.word	.L795+1
 11143 1a0c A9160000 		.word	.L795+1
 11144 1a10 A9160000 		.word	.L795+1
 11145 1a14 A9160000 		.word	.L795+1
 11146 1a18 A9160000 		.word	.L795+1
 11147 1a1c 05170000 		.word	.L796+1
 11148 1a20 05170000 		.word	.L796+1
 11149              	.LVL926:
 11150              		.p2align 1
 11151              	.L1169:
 916:src/keys.c    **** 	case K00:
 11152              		.loc 1 916 2 is_stmt 0 view .LVU3458
 11153              	.LBE963:
 11154              	.LBE1177:
 11155              	.LBB1178:
 11156              	.LBB930:
2586:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11157              		.loc 1 2586 3 is_stmt 1 view .LVU3459
2586:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11158              		.loc 1 2586 8 is_stmt 0 view .LVU3460
 11159 1a24 4FEA8B34 		lsl	r4, fp, #14
2586:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11160              		.loc 1 2586 6 view .LVU3461
 11161 1a28 44F00104 		orr	r4, r4, #1
 11162              	.LVL927:
2587:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11163              		.loc 1 2587 3 is_stmt 1 view .LVU3462
2587:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11164              		.loc 1 2587 9 is_stmt 0 view .LVU3463
 11165 1a2c 2046     		mov	r0, r4
 11166 1a2e FFF7FEFF 		bl	is_label_or_end_at
 11167              	.LVL928:
2587:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11168              		.loc 1 2587 6 view .LVU3464
 11169 1a32 0246     		mov	r2, r0
 11170 1a34 0028     		cmp	r0, #0
 11171 1a36 00F09180 		beq	.L1193
 11172              	.L699:
2589:src/keys.c    **** 		return STATE_UNFINISHED;
 11173              		.loc 1 2589 3 is_stmt 1 view .LVU3465
 11174 1a3a 3268     		ldr	r2, [r6]
2589:src/keys.c    **** 		return STATE_UNFINISHED;
 11175              		.loc 1 2589 17 is_stmt 0 view .LVU3466
 11176 1a3c A8F80840 		strh	r4, [r8, #8]	@ movhi
2590:src/keys.c    **** 	}
 11177              		.loc 1 2590 3 is_stmt 1 view .LVU3467
2590:src/keys.c    **** 	}
 11178              		.loc 1 2590 10 is_stmt 0 view .LVU3468
 11179 1a40 4FF0330B 		mov	fp, #51
 11180              	.LVL929:
2590:src/keys.c    **** 	}
ARM GAS  /tmp/ccGwaFaD.s 			page 311


 11181              		.loc 1 2590 10 view .LVU3469
 11182 1a44 FEF735BB 		b	.L565
 11183              	.LVL930:
 11184              	.L821:
2590:src/keys.c    **** 	}
 11185              		.loc 1 2590 10 view .LVU3470
 11186              	.LBE930:
 11187              	.LBE1178:
 11188              	.LBB1179:
 11189              	.LBB1153:
1077:src/keys.c    **** #endif
 11190              		.loc 1 1077 4 is_stmt 1 view .LVU3471
1077:src/keys.c    **** #endif
 11191              		.loc 1 1077 8 is_stmt 0 view .LVU3472
 11192 1a48 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1077:src/keys.c    **** #endif
 11193              		.loc 1 1077 7 view .LVU3473
 11194 1a4c 9B06     		lsls	r3, r3, #26
 11195 1a4e 7FF59BAD 		bpl	.L820
1077:src/keys.c    **** #endif
 11196              		.loc 1 1077 29 view .LVU3474
 11197 1a52 40F24F1B 		movw	fp, #335
 11198 1a56 A8E5     		b	.L823
 11199              	.LVL931:
 11200              	.L1190:
1077:src/keys.c    **** #endif
 11201              		.loc 1 1077 29 view .LVU3475
 11202              	.LBE1153:
 11203              	.LBE1179:
 11204              	.LBB1180:
 11205              	.LBB964:
 938:src/keys.c    **** 		}
 11206              		.loc 1 938 4 is_stmt 1 view .LVU3476
 938:src/keys.c    **** 		}
 11207              		.loc 1 938 34 is_stmt 0 view .LVU3477
 11208 1a58 0F4B     		ldr	r3, .L1216+12
 11209              	.LVL932:
 938:src/keys.c    **** 		}
 11210              		.loc 1 938 11 view .LVU3478
 11211 1a5a 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11212 1a5e FFF7FEFF 		bl	check_f_key
 11213              	.LVL933:
 938:src/keys.c    **** 		}
 11214              		.loc 1 938 11 view .LVU3479
 11215 1a62 8346     		mov	fp, r0
 11216              	.LVL934:
 938:src/keys.c    **** 		}
 11217              		.loc 1 938 11 view .LVU3480
 11218 1a64 FEF7ECBC 		b	.L595
 11219              	.LVL935:
 11220              	.L1189:
 919:src/keys.c    **** 	    State2.dot = op;
 11221              		.loc 1 919 6 is_stmt 1 view .LVU3481
 920:src/keys.c    **** 	    // State2.cmplx = 0;
 11222              		.loc 1 920 6 view .LVU3482
 919:src/keys.c    **** 	    State2.dot = op;
 11223              		.loc 1 919 17 is_stmt 0 view .LVU3483
ARM GAS  /tmp/ccGwaFaD.s 			page 312


 11224 1a68 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 11225 1a6c 3268     		ldr	r2, [r6]
 11226 1a6e 0BF00103 		and	r3, fp, #1
 11227              	.LVL936:
 919:src/keys.c    **** 	    State2.dot = op;
 11228              		.loc 1 919 17 view .LVU3484
 11229 1a72 9B01     		lsls	r3, r3, #6
 11230 1a74 43F02003 		orr	r3, r3, #32
 11231 1a78 21F06001 		bic	r1, r1, #96
 11232 1a7c 0B43     		orrs	r3, r3, r1
 11233 1a7e 88F81530 		strb	r3, [r8, #21]
 922:src/keys.c    **** 	  }
 11234              		.loc 1 922 6 is_stmt 1 view .LVU3485
 922:src/keys.c    **** 	  }
 11235              		.loc 1 922 13 is_stmt 0 view .LVU3486
 11236 1a82 4FF0330B 		mov	fp, #51
 11237              	.LVL937:
 922:src/keys.c    **** 	  }
 11238              		.loc 1 922 13 view .LVU3487
 11239 1a86 FEF714BB 		b	.L565
 11240              	.L1217:
 11241 1a8a 00BF     		.align	2
 11242              	.L1216:
 11243 1a8c 00000000 		.word	main_ram
 11244 1a90 00000000 		.word	NonProgrammable
 11245 1a94 00000000 		.word	.LANCHOR11
 11246 1a98 00000000 		.word	.LANCHOR20
 11247              	.LVL938:
 11248              	.L1187:
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11249              		.loc 1 981 4 is_stmt 1 view .LVU3488
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11250              		.loc 1 981 26 is_stmt 0 view .LVU3489
 11251 1a9c 5C1E     		subs	r4, r3, #1
 11252              	.LVL939:
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11253              		.loc 1 981 17 view .LVU3490
 11254 1a9e 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 11255 1aa2 3268     		ldr	r2, [r6]
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11256              		.loc 1 981 26 view .LVU3491
 11257 1aa4 6342     		rsbs	r3, r4, #0
 11258 1aa6 6341     		adcs	r3, r3, r4
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11259              		.loc 1 981 17 view .LVU3492
 11260 1aa8 63F3C711 		bfi	r1, r3, #7, #1
 11261 1aac 88F81710 		strb	r1, [r8, #23]
 982:src/keys.c    **** 		}
 11262              		.loc 1 982 4 is_stmt 1 view .LVU3493
 982:src/keys.c    **** 		}
 11263              		.loc 1 982 11 is_stmt 0 view .LVU3494
 11264 1ab0 4FF0330B 		mov	fp, #51
 11265              	.LVL940:
 982:src/keys.c    **** 		}
 11266              		.loc 1 982 11 view .LVU3495
 11267 1ab4 FEF7FDBA 		b	.L565
 11268              	.LVL941:
ARM GAS  /tmp/ccGwaFaD.s 			page 313


 11269              	.L1186:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11270              		.loc 1 961 27 view .LVU3496
 11271 1ab8 C64B     		ldr	r3, .L1218
 11272              	.LVL942:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11273              		.loc 1 961 27 view .LVU3497
 11274 1aba 1B68     		ldr	r3, [r3]
 11275 1abc 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 11276 1ac0 DA07     		lsls	r2, r3, #31
 11277 1ac2 7FF5EEAD 		bpl	.L807
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11278              		.loc 1 961 45 view .LVU3498
 11279 1ac6 0D20     		movs	r0, #13
 11280              	.LVL943:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11281              		.loc 1 961 45 view .LVU3499
 11282 1ac8 FFF7FEFF 		bl	intltr
 11283              	.LVL944:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11284              		.loc 1 961 42 view .LVU3500
 11285 1acc 0028     		cmp	r0, #0
 11286 1ace 3FF4E8AD 		beq	.L807
 11287              	.LVL945:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11288              		.loc 1 961 42 view .LVU3501
 11289              	.LBE964:
 11290              	.LBE1180:
 11291              	.LBE1251:
 11292              	.LBE1323:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11293              		.loc 1 3200 7 is_stmt 1 view .LVU3502
3200:src/keys.c    **** 	NonProgrammable = 0;
 11294              		.loc 1 3200 11 is_stmt 0 view .LVU3503
 11295 1ad2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3200:src/keys.c    **** 	NonProgrammable = 0;
 11296              		.loc 1 3200 10 view .LVU3504
 11297 1ad6 5906     		lsls	r1, r3, #25
 11298 1ad8 16D5     		bpl	.L930
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11299              		.loc 1 3201 2 is_stmt 1 view .LVU3505
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11300              		.loc 1 3201 18 is_stmt 0 view .LVU3506
 11301 1ada BF4B     		ldr	r3, .L1218+4
 11302 1adc 0022     		movs	r2, #0
 11303              	.LBB1324:
 11304              	.LBB1252:
 11305              	.LBB1181:
 11306              	.LBB965:
 962:src/keys.c    **** 	  }
 11307              		.loc 1 962 13 view .LVU3507
 11308 1ade 4FF0120B 		mov	fp, #18
 11309              	.LBE965:
 11310              	.LBE1181:
 11311              	.LBE1252:
 11312              	.LBE1324:
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccGwaFaD.s 			page 314


 11313              		.loc 1 3201 18 view .LVU3508
 11314 1ae2 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11315              		.loc 1 3202 2 is_stmt 1 view .LVU3509
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11316              		.loc 1 3202 32 is_stmt 0 view .LVU3510
 11317 1ae4 5846     		mov	r0, fp
 11318 1ae6 FEF76FBE 		b	.L874
 11319              	.LVL946:
 11320              	.L931:
 11321              	.LBB1325:
 11322              	.LBB1253:
 11323              	.LBB1182:
 11324              	.LBB966:
 967:src/keys.c    **** 	  }
 11325              		.loc 1 967 13 view .LVU3511
 11326 1aea 4FF0130B 		mov	fp, #19
 11327              	.LVL947:
 11328              	.L873:
 967:src/keys.c    **** 	  }
 11329              		.loc 1 967 13 view .LVU3512
 11330              	.LBE966:
 11331              	.LBE1182:
 11332              	.LBE1253:
 11333              	.LBE1325:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11334              		.loc 1 3200 26 view .LVU3513
 11335 1aee BA4B     		ldr	r3, .L1218+4
 11336 1af0 1A68     		ldr	r2, [r3]
 11337 1af2 62B1     		cbz	r2, .L1097
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11338              		.loc 1 3201 2 is_stmt 1 view .LVU3514
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11339              		.loc 1 3201 18 is_stmt 0 view .LVU3515
 11340 1af4 0022     		movs	r2, #0
 11341 1af6 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11342              		.loc 1 3202 2 is_stmt 1 view .LVU3516
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11343              		.loc 1 3202 32 is_stmt 0 view .LVU3517
 11344 1af8 5846     		mov	r0, fp
 11345 1afa FEF765BE 		b	.L874
 11346              	.LVL948:
 11347              	.L1191:
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11348              		.loc 1 3202 32 view .LVU3518
 11349 1afe 3268     		ldr	r2, [r6]
 11350              	.LBB1326:
 11351              	.LBB1254:
 11352              	.LBB1183:
 11353              	.LBB967:
 950:src/keys.c    **** 			process_cmdline_set_lift();
 11354              		.loc 1 950 12 view .LVU3519
 11355 1b00 4FF0330B 		mov	fp, #51
 11356              	.LVL949:
 950:src/keys.c    **** 			process_cmdline_set_lift();
 11357              		.loc 1 950 12 view .LVU3520
ARM GAS  /tmp/ccGwaFaD.s 			page 315


 11358 1b04 FEF7D5BA 		b	.L565
 11359              	.LVL950:
 11360              	.L930:
 962:src/keys.c    **** 	  }
 11361              		.loc 1 962 13 view .LVU3521
 11362 1b08 4FF0120B 		mov	fp, #18
 11363 1b0c EFE7     		b	.L873
 11364              	.LVL951:
 11365              	.L1097:
 962:src/keys.c    **** 	  }
 11366              		.loc 1 962 13 view .LVU3522
 11367 1b0e 5846     		mov	r0, fp
 11368 1b10 FEF710BD 		b	.L876
 11369              	.LVL952:
 11370              	.L735:
 962:src/keys.c    **** 	  }
 11371              		.loc 1 962 13 view .LVU3523
 11372              	.LBE967:
 11373              	.LBE1183:
 11374              	.LBB1184:
 11375              	.LBB1009:
2741:src/keys.c    **** 		goto reset_window;
 11376              		.loc 1 2741 4 is_stmt 1 view .LVU3524
2741:src/keys.c    **** 		goto reset_window;
 11377              		.loc 1 2741 24 is_stmt 0 view .LVU3525
 11378 1b14 0AF1FF3A 		add	r10, r10, #-1
 11379              	.LVL953:
2741:src/keys.c    **** 		goto reset_window;
 11380              		.loc 1 2741 18 view .LVU3526
 11381 1b18 A8F808A0 		strh	r10, [r8, #8]	@ movhi
 11382 1b1c FFF76BBB 		b	.L727
 11383              	.LVL954:
 11384              	.L1175:
2737:src/keys.c    **** 			--State2.digval;
 11385              		.loc 1 2737 5 is_stmt 1 view .LVU3527
2737:src/keys.c    **** 			--State2.digval;
 11386              		.loc 1 2737 21 is_stmt 0 view .LVU3528
 11387 1b20 FFF7FEFF 		bl	global_regs
 11388              	.LVL955:
2737:src/keys.c    **** 			--State2.digval;
 11389              		.loc 1 2737 19 view .LVU3529
 11390 1b24 A8F80800 		strh	r0, [r8, #8]	@ movhi
 11391 1b28 FFF760BB 		b	.L736
 11392              	.LVL956:
 11393              	.L1090:
2737:src/keys.c    **** 			--State2.digval;
 11394              		.loc 1 2737 19 view .LVU3530
 11395              	.LBE1009:
 11396              	.LBE1184:
 11397              	.LBE1254:
 11398              	.LBE1326:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11399              		.loc 1 3200 26 discriminator 1 view .LVU3531
 11400 1b2c 1368     		ldr	r3, [r2]
 11401 1b2e 002B     		cmp	r3, #0
 11402 1b30 7EF477AD 		bne	.L875
 11403 1b34 FEF7FEBC 		b	.L876
ARM GAS  /tmp/ccGwaFaD.s 			page 316


 11404              	.LVL957:
 11405              	.L738:
 11406              	.LBB1327:
 11407              	.LBB1255:
 11408              	.LBB1185:
 11409              	.LBB1010:
2751:src/keys.c    **** 		goto reset_window;
 11410              		.loc 1 2751 4 is_stmt 1 view .LVU3532
2751:src/keys.c    **** 		goto reset_window;
 11411              		.loc 1 2751 18 is_stmt 0 view .LVU3533
 11412 1b38 0023     		movs	r3, #0
 11413 1b3a A8F80830 		strh	r3, [r8, #8]	@ movhi
 11414 1b3e FFF75ABB 		b	.L727
 11415              	.LVL958:
 11416              	.L1163:
2751:src/keys.c    **** 		goto reset_window;
 11417              		.loc 1 2751 18 view .LVU3534
 11418              	.LBE1010:
 11419              	.LBE1185:
 11420              	.LBB1186:
 11421              	.LBB882:
 11422              	.LBB876:
 11423              	.LBB865:
 442:src/keys.c    **** 			shift = SHIFT_LC_G;
 11424              		.loc 1 442 8 is_stmt 1 view .LVU3535
 443:src/keys.c    **** 	}
 11425              		.loc 1 443 10 is_stmt 0 view .LVU3536
 11426 1b42 0229     		cmp	r1, #2
 11427 1b44 08BF     		it	eq
 11428 1b46 0521     		moveq	r1, #5
 11429              	.LVL959:
 443:src/keys.c    **** 	}
 11430              		.loc 1 443 10 view .LVU3537
 11431 1b48 FFF72DB9 		b	.L687
 11432              	.LVL960:
 11433              	.L1184:
 443:src/keys.c    **** 	}
 11434              		.loc 1 443 10 view .LVU3538
 11435 1b4c 3268     		ldr	r2, [r6]
 11436              	.LBE865:
 11437              	.LBE876:
2411:src/keys.c    **** 		else if (State2.numdigit == 1)
 11438              		.loc 1 2411 11 view .LVU3539
 11439 1b4e 4FF0330B 		mov	fp, #51
 11440 1b52 FEF7AEBA 		b	.L565
 11441              	.LVL961:
 11442              	.L933:
2411:src/keys.c    **** 		else if (State2.numdigit == 1)
 11443              		.loc 1 2411 11 view .LVU3540
 11444              	.LBE882:
 11445              	.LBE1186:
 11446              	.LBB1187:
 11447              	.LBB688:
 754:src/keys.c    **** 	    }
 11448              		.loc 1 754 15 view .LVU3541
 11449 1b56 4FF0110B 		mov	fp, #17
 11450 1b5a C8E7     		b	.L873
ARM GAS  /tmp/ccGwaFaD.s 			page 317


 11451              	.LVL962:
 11452              	.L1193:
 754:src/keys.c    **** 	    }
 11453              		.loc 1 754 15 view .LVU3542
 11454              	.LBE688:
 11455              	.LBE1187:
 11456              	.LBB1188:
 11457              	.LBB931:
2588:src/keys.c    **** 		State2.digval = pc;
 11458              		.loc 1 2588 4 is_stmt 1 view .LVU3543
2588:src/keys.c    **** 		State2.digval = pc;
 11459              		.loc 1 2588 9 is_stmt 0 view .LVU3544
 11460 1b5c 2046     		mov	r0, r4
 11461 1b5e 0121     		movs	r1, #1
 11462 1b60 FFF7FEFF 		bl	advance_to_next_label
 11463              	.LVL963:
 11464 1b64 0446     		mov	r4, r0
 11465              	.LVL964:
2588:src/keys.c    **** 		State2.digval = pc;
 11466              		.loc 1 2588 9 view .LVU3545
 11467 1b66 68E7     		b	.L699
 11468              	.LVL965:
 11469              	.L759:
2588:src/keys.c    **** 		State2.digval = pc;
 11470              		.loc 1 2588 9 view .LVU3546
 11471              	.LBE931:
 11472              	.LBE1188:
 11473              	.LBB1189:
 11474              	.LBB1085:
1447:src/keys.c    **** 			return STATE_BACKSPACE;
 11475              		.loc 1 1447 3 is_stmt 1 view .LVU3547
1447:src/keys.c    **** 			return STATE_BACKSPACE;
 11476              		.loc 1 1447 6 is_stmt 0 view .LVU3548
 11477 1b68 0028     		cmp	r0, #0
 11478 1b6a 3EF4CBAC 		beq	.L768
 11479              	.L769:
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11480              		.loc 1 1449 3 is_stmt 1 view .LVU3549
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11481              		.loc 1 1449 6 is_stmt 0 view .LVU3550
 11482 1b6e 0328     		cmp	r0, #3
 11483 1b70 7FF41CAC 		bne	.L753
 11484              	.LVL966:
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11485              		.loc 1 1449 6 view .LVU3551
 11486              	.LBE1085:
 11487              	.LBE1189:
 11488              	.LBE1255:
 11489              	.LBE1327:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11490              		.loc 1 3200 7 is_stmt 1 view .LVU3552
3200:src/keys.c    **** 	NonProgrammable = 0;
 11491              		.loc 1 3200 10 is_stmt 0 view .LVU3553
 11492 1b74 5906     		lsls	r1, r3, #25
 11493              	.LVL967:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11494              		.loc 1 3200 10 view .LVU3554
ARM GAS  /tmp/ccGwaFaD.s 			page 318


 11495 1b76 17D5     		bpl	.L936
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11496              		.loc 1 3201 2 is_stmt 1 view .LVU3555
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11497              		.loc 1 3201 18 is_stmt 0 view .LVU3556
 11498 1b78 974B     		ldr	r3, .L1218+4
 11499 1b7a 0022     		movs	r2, #0
 11500 1b7c 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11501              		.loc 1 3202 2 is_stmt 1 view .LVU3557
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11502              		.loc 1 3202 32 is_stmt 0 view .LVU3558
 11503 1b7e 4FF4BA70 		mov	r0, #372
 11504              	.LVL968:
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11505              		.loc 1 3202 32 view .LVU3559
 11506 1b82 FEF777BD 		b	.L872
 11507              	.LVL969:
 11508              	.L1139:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11509              		.loc 1 3200 7 is_stmt 1 view .LVU3560
3200:src/keys.c    **** 	NonProgrammable = 0;
 11510              		.loc 1 3200 11 is_stmt 0 view .LVU3561
 11511 1b86 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3200:src/keys.c    **** 	NonProgrammable = 0;
 11512              		.loc 1 3200 10 view .LVU3562
 11513 1b8a 5C06     		lsls	r4, r3, #25
 11514 1b8c 17D5     		bpl	.L934
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11515              		.loc 1 3201 2 is_stmt 1 view .LVU3563
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11516              		.loc 1 3201 18 is_stmt 0 view .LVU3564
 11517 1b8e 924B     		ldr	r3, .L1218+4
 11518 1b90 0022     		movs	r2, #0
 11519              	.LBB1328:
 11520              	.LBB1256:
 11521              	.LBB1190:
 11522              	.LBB689:
 762:src/keys.c    **** 	    }
 11523              		.loc 1 762 15 view .LVU3565
 11524 1b92 4FF0140B 		mov	fp, #20
 11525              	.LBE689:
 11526              	.LBE1190:
 11527              	.LBE1256:
 11528              	.LBE1328:
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11529              		.loc 1 3201 18 view .LVU3566
 11530 1b96 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11531              		.loc 1 3202 2 is_stmt 1 view .LVU3567
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11532              		.loc 1 3202 32 is_stmt 0 view .LVU3568
 11533 1b98 5846     		mov	r0, fp
 11534 1b9a FEF715BE 		b	.L874
 11535              	.LVL970:
 11536              	.L1140:
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/ccGwaFaD.s 			page 319


 11537              		.loc 1 3202 32 view .LVU3569
 11538 1b9e 3268     		ldr	r2, [r6]
 11539              	.LBB1329:
 11540              	.LBB1257:
 11541              	.LBB1191:
 11542              	.LBB690:
 841:src/keys.c    **** }
 11543              		.loc 1 841 9 view .LVU3570
 11544 1ba0 4FF0330B 		mov	fp, #51
 11545 1ba4 FEF785BA 		b	.L565
 11546              	.LVL971:
 11547              	.L936:
 841:src/keys.c    **** }
 11548              		.loc 1 841 9 view .LVU3571
 11549              	.LBE690:
 11550              	.LBE1191:
 11551              	.LBB1192:
 11552              	.LBB1086:
1450:src/keys.c    **** 		break;
 11553              		.loc 1 1450 11 view .LVU3572
 11554 1ba8 4FF4BA7B 		mov	fp, #372
 11555              	.LVL972:
 11556              	.L871:
1450:src/keys.c    **** 		break;
 11557              		.loc 1 1450 11 view .LVU3573
 11558              	.LBE1086:
 11559              	.LBE1192:
 11560              	.LBE1257:
 11561              	.LBE1329:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11562              		.loc 1 3200 26 view .LVU3574
 11563 1bac 8A4B     		ldr	r3, .L1218+4
 11564 1bae 1A68     		ldr	r2, [r3]
 11565 1bb0 002A     		cmp	r2, #0
 11566 1bb2 ACD0     		beq	.L1097
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11567              		.loc 1 3201 2 is_stmt 1 view .LVU3575
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11568              		.loc 1 3201 18 is_stmt 0 view .LVU3576
 11569 1bb4 0022     		movs	r2, #0
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11570              		.loc 1 3202 32 view .LVU3577
 11571 1bb6 5846     		mov	r0, fp
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11572              		.loc 1 3201 18 view .LVU3578
 11573 1bb8 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11574              		.loc 1 3202 2 is_stmt 1 view .LVU3579
 11575 1bba FEF75BBD 		b	.L872
 11576              	.LVL973:
 11577              	.L934:
 11578              	.LBB1330:
 11579              	.LBB1258:
 11580              	.LBB1193:
 11581              	.LBB691:
 762:src/keys.c    **** 	    }
 11582              		.loc 1 762 15 is_stmt 0 view .LVU3580
ARM GAS  /tmp/ccGwaFaD.s 			page 320


 11583 1bbe 4FF0140B 		mov	fp, #20
 11584 1bc2 94E7     		b	.L873
 11585              	.LVL974:
 11586              	.L1182:
 762:src/keys.c    **** 	    }
 11587              		.loc 1 762 15 view .LVU3581
 11588              	.LBE691:
 11589              	.LBE1193:
 11590              	.LBB1194:
 11591              	.LBB1154:
1087:src/keys.c    **** 			set_pc(0);
 11592              		.loc 1 1087 43 view .LVU3582
 11593 1bc4 B3F8EE37 		ldrh	r3, [r3, #2030]
 11594 1bc8 012B     		cmp	r3, #1
 11595 1bca 7FF4DDAC 		bne	.L820
1088:src/keys.c    **** 		break;
 11596              		.loc 1 1088 4 is_stmt 1 view .LVU3583
 11597 1bce FFF7FEFF 		bl	set_pc
 11598              	.LVL975:
 11599 1bd2 D9E4     		b	.L820
 11600              	.L1181:
 11601 1bd4 3268     		ldr	r2, [r6]
1083:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11602              		.loc 1 1083 11 is_stmt 0 view .LVU3584
 11603 1bd6 4FF0330B 		mov	fp, #51
 11604 1bda FEF76ABA 		b	.L565
 11605              	.LVL976:
 11606              	.L1192:
1083:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11607              		.loc 1 1083 11 view .LVU3585
 11608              	.LBE1154:
 11609              	.LBE1194:
 11610              	.LBB1195:
 11611              	.LBB883:
2428:src/keys.c    **** 		else
 11612              		.loc 1 2428 4 is_stmt 1 view .LVU3586
2428:src/keys.c    **** 		else
 11613              		.loc 1 2428 34 is_stmt 0 view .LVU3587
 11614 1bde 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11615 1be2 3268     		ldr	r2, [r6]
 11616 1be4 C3F30011 		ubfx	r1, r3, #4, #1
 11617              	.LVL977:
2428:src/keys.c    **** 		else
 11618              		.loc 1 2428 26 view .LVU3588
 11619 1be8 C1F10101 		rsb	r1, r1, #1
2428:src/keys.c    **** 		else
 11620              		.loc 1 2428 22 view .LVU3589
 11621 1bec 61F30413 		bfi	r3, r1, #4, #1
 11622 1bf0 88F81630 		strb	r3, [r8, #22]
2431:src/keys.c    **** 
 11623              		.loc 1 2431 10 view .LVU3590
 11624 1bf4 4FF0330B 		mov	fp, #51
 11625 1bf8 FEF75BBA 		b	.L565
 11626              	.LVL978:
 11627              	.L1171:
2431:src/keys.c    **** 
 11628              		.loc 1 2431 10 view .LVU3591
ARM GAS  /tmp/ccGwaFaD.s 			page 321


 11629              	.LBE883:
 11630              	.LBE1195:
 11631              	.LBB1196:
 11632              	.LBB1011:
2712:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11633              		.loc 1 2712 3 is_stmt 1 view .LVU3592
2712:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11634              		.loc 1 2712 7 is_stmt 0 view .LVU3593
 11635 1bfc FFF7FEFF 		bl	local_regs
 11636              	.LVL979:
2712:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11637              		.loc 1 2712 6 view .LVU3594
 11638 1c00 68B1     		cbz	r0, .L725
2713:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11639              		.loc 1 2713 4 is_stmt 1 view .LVU3595
2713:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11640              		.loc 1 2713 19 is_stmt 0 view .LVU3596
 11641 1c02 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2713:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11642              		.loc 1 2713 34 view .LVU3597
 11643 1c06 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2713:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11644              		.loc 1 2713 19 view .LVU3598
 11645 1c0a 03F00101 		and	r1, r3, #1
2713:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11646              		.loc 1 2713 34 view .LVU3599
 11647 1c0e 0A43     		orrs	r2, r1, r2
 11648 1c10 0CBF     		ite	eq
 11649 1c12 0122     		moveq	r2, #1
 11650 1c14 0022     		movne	r2, #0
2713:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11651              		.loc 1 2713 17 view .LVU3600
 11652 1c16 62F30003 		bfi	r3, r2, #0, #1
 11653 1c1a 88F81630 		strb	r3, [r8, #22]
 11654              	.L725:
2714:src/keys.c    **** 		goto reset_window;
 11655              		.loc 1 2714 3 is_stmt 1 view .LVU3601
2714:src/keys.c    **** 		goto reset_window;
 11656              		.loc 1 2714 32 is_stmt 0 view .LVU3602
 11657 1c1e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2714:src/keys.c    **** 		goto reset_window;
 11658              		.loc 1 2714 17 view .LVU3603
 11659 1c22 13F0010F 		tst	r3, #1
 11660 1c26 14BF     		ite	ne
 11661 1c28 0023     		movne	r3, #0
 11662 1c2a 6423     		moveq	r3, #100
 11663 1c2c A8F80830 		strh	r3, [r8, #8]	@ movhi
2715:src/keys.c    **** 	}
 11664              		.loc 1 2715 3 is_stmt 1 view .LVU3604
 11665 1c30 FFF7E1BA 		b	.L727
 11666              	.LVL980:
 11667              	.L754:
2715:src/keys.c    **** 	}
 11668              		.loc 1 2715 3 is_stmt 0 view .LVU3605
 11669              	.LBE1011:
 11670              	.LBE1196:
 11671              	.LBB1197:
ARM GAS  /tmp/ccGwaFaD.s 			page 322


 11672              	.LBB1087:
1509:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11673              		.loc 1 1509 3 is_stmt 1 view .LVU3606
1509:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11674              		.loc 1 1509 6 is_stmt 0 view .LVU3607
 11675 1c34 0128     		cmp	r0, #1
 11676 1c36 7FF4B9AB 		bne	.L753
 11677              	.LVL981:
1509:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11678              		.loc 1 1509 6 view .LVU3608
 11679              	.LBE1087:
 11680              	.LBE1197:
 11681              	.LBE1258:
 11682              	.LBE1330:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11683              		.loc 1 3200 7 is_stmt 1 view .LVU3609
3200:src/keys.c    **** 	NonProgrammable = 0;
 11684              		.loc 1 3200 10 is_stmt 0 view .LVU3610
 11685 1c3a 5806     		lsls	r0, r3, #25
 11686              	.LVL982:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11687              		.loc 1 3200 10 view .LVU3611
 11688 1c3c 10D5     		bpl	.L929
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11689              		.loc 1 3201 2 is_stmt 1 view .LVU3612
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11690              		.loc 1 3201 18 is_stmt 0 view .LVU3613
 11691 1c3e 664B     		ldr	r3, .L1218+4
 11692 1c40 0022     		movs	r2, #0
 11693 1c42 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11694              		.loc 1 3202 2 is_stmt 1 view .LVU3614
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11695              		.loc 1 3202 32 is_stmt 0 view .LVU3615
 11696 1c44 40F23B10 		movw	r0, #315
 11697 1c48 FEF714BD 		b	.L872
 11698              	.LVL983:
 11699              	.L756:
 11700              	.LBB1331:
 11701              	.LBB1259:
 11702              	.LBB1198:
 11703              	.LBB1088:
1495:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11704              		.loc 1 1495 3 is_stmt 1 view .LVU3616
1495:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11705              		.loc 1 1495 6 is_stmt 0 view .LVU3617
 11706 1c4c 0128     		cmp	r0, #1
 11707 1c4e 20D0     		beq	.L1194
1497:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11708              		.loc 1 1497 8 is_stmt 1 view .LVU3618
1497:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11709              		.loc 1 1497 11 is_stmt 0 view .LVU3619
 11710 1c50 0328     		cmp	r0, #3
 11711 1c52 15D0     		beq	.L778
1499:src/keys.c    **** #ifdef DM42
 11712              		.loc 1 1499 8 is_stmt 1 view .LVU3620
1499:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccGwaFaD.s 			page 323


 11713              		.loc 1 1499 11 is_stmt 0 view .LVU3621
 11714 1c54 38B1     		cbz	r0, .L779
 11715 1c56 3268     		ldr	r2, [r6]
1506:src/keys.c    **** 
 11716              		.loc 1 1506 10 view .LVU3622
 11717 1c58 4FF0330B 		mov	fp, #51
 11718 1c5c FEF729BA 		b	.L565
 11719              	.LVL984:
 11720              	.L929:
1510:src/keys.c    **** 		break;
 11721              		.loc 1 1510 11 view .LVU3623
 11722 1c60 40F23B1B 		movw	fp, #315
 11723 1c64 A2E7     		b	.L871
 11724              	.LVL985:
 11725              	.L779:
1501:src/keys.c    **** 		  display_current_menu();
 11726              		.loc 1 1501 5 is_stmt 1 view .LVU3624
 11727 1c66 4FF0FF30 		mov	r0, #-1
 11728              	.LVL986:
1501:src/keys.c    **** 		  display_current_menu();
 11729              		.loc 1 1501 5 is_stmt 0 view .LVU3625
 11730 1c6a FFF7FEFF 		bl	set_menu
 11731              	.LVL987:
1502:src/keys.c    **** #endif
 11732              		.loc 1 1502 5 is_stmt 1 view .LVU3626
1506:src/keys.c    **** 
 11733              		.loc 1 1506 10 is_stmt 0 view .LVU3627
 11734 1c6e 4FF0330B 		mov	fp, #51
1502:src/keys.c    **** #endif
 11735              		.loc 1 1502 5 view .LVU3628
 11736 1c72 FFF7FEFF 		bl	display_current_menu
 11737              	.LVL988:
1504:src/keys.c    **** 		}
 11738              		.loc 1 1504 5 is_stmt 1 view .LVU3629
 11739 1c76 FFF7FEFF 		bl	init_state
 11740              	.LVL989:
 11741 1c7a 3268     		ldr	r2, [r6]
 11742 1c7c FEF719BA 		b	.L565
 11743              	.LVL990:
 11744              	.L778:
1504:src/keys.c    **** 		}
 11745              		.loc 1 1504 5 is_stmt 0 view .LVU3630
 11746              	.LBE1088:
 11747              	.LBE1198:
 11748              	.LBE1259:
 11749              	.LBE1331:
3200:src/keys.c    **** 	NonProgrammable = 0;
 11750              		.loc 1 3200 7 is_stmt 1 view .LVU3631
3200:src/keys.c    **** 	NonProgrammable = 0;
 11751              		.loc 1 3200 10 is_stmt 0 view .LVU3632
 11752 1c80 5A06     		lsls	r2, r3, #25
 11753 1c82 15D5     		bpl	.L937
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11754              		.loc 1 3201 2 is_stmt 1 view .LVU3633
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11755              		.loc 1 3201 18 is_stmt 0 view .LVU3634
 11756 1c84 544B     		ldr	r3, .L1218+4
ARM GAS  /tmp/ccGwaFaD.s 			page 324


 11757 1c86 0022     		movs	r2, #0
 11758 1c88 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11759              		.loc 1 3202 2 is_stmt 1 view .LVU3635
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11760              		.loc 1 3202 32 is_stmt 0 view .LVU3636
 11761 1c8a 4FF48170 		mov	r0, #258
 11762              	.LVL991:
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11763              		.loc 1 3202 32 view .LVU3637
 11764 1c8e FEF7F1BC 		b	.L872
 11765              	.LVL992:
 11766              	.L1194:
 11767              	.LBB1332:
 11768              	.LBB1260:
 11769              	.LBB1199:
 11770              	.LBB1089:
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11771              		.loc 1 1496 4 is_stmt 1 view .LVU3638
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11772              		.loc 1 1496 34 is_stmt 0 view .LVU3639
 11773 1c92 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11774 1c96 3268     		ldr	r2, [r6]
 11775 1c98 C3F30011 		ubfx	r1, r3, #4, #1
 11776              	.LVL993:
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11777              		.loc 1 1496 26 view .LVU3640
 11778 1c9c C1F10101 		rsb	r1, r1, #1
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11779              		.loc 1 1496 22 view .LVU3641
 11780 1ca0 61F30413 		bfi	r3, r1, #4, #1
 11781 1ca4 88F81630 		strb	r3, [r8, #22]
1506:src/keys.c    **** 
 11782              		.loc 1 1506 10 view .LVU3642
 11783 1ca8 4FF0330B 		mov	fp, #51
 11784 1cac FEF701BA 		b	.L565
 11785              	.LVL994:
 11786              	.L937:
1498:src/keys.c    **** 		else if (shift == SHIFT_N) {
 11787              		.loc 1 1498 11 view .LVU3643
 11788 1cb0 4FF4817B 		mov	fp, #258
 11789 1cb4 7AE7     		b	.L871
 11790              	.LVL995:
 11791              	.L757:
1483:src/keys.c    **** 	    if ( State2.runmode ) {
 11792              		.loc 1 1483 4 is_stmt 1 view .LVU3644
1483:src/keys.c    **** 	    if ( State2.runmode ) {
 11793              		.loc 1 1483 7 is_stmt 0 view .LVU3645
 11794 1cb6 0028     		cmp	r0, #0
 11795 1cb8 7FF478AB 		bne	.L753
1484:src/keys.c    **** 	      // Alpha scroll right
 11796              		.loc 1 1484 6 is_stmt 1 view .LVU3646
1484:src/keys.c    **** 	      // Alpha scroll right
 11797              		.loc 1 1484 9 is_stmt 0 view .LVU3647
 11798 1cbc 5B06     		lsls	r3, r3, #25
 11799 1cbe 7EF515AC 		bpl	.L775
1486:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
ARM GAS  /tmp/ccGwaFaD.s 			page 325


 11800              		.loc 1 1486 8 is_stmt 1 view .LVU3648
1486:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11801              		.loc 1 1486 11 is_stmt 0 view .LVU3649
 11802 1cc2 B9F1000F 		cmp	r9, #0
 11803 1cc6 16D1     		bne	.L776
 11804 1cc8 3268     		ldr	r2, [r6]
1488:src/keys.c    **** 	    }
 11805              		.loc 1 1488 15 view .LVU3650
 11806 1cca 4FF0330B 		mov	fp, #51
 11807 1cce FEF7F0B9 		b	.L565
 11808              	.L758:
1454:src/keys.c    **** 	    if ( State2.runmode ) {
 11809              		.loc 1 1454 4 is_stmt 1 view .LVU3651
1454:src/keys.c    **** 	    if ( State2.runmode ) {
 11810              		.loc 1 1454 7 is_stmt 0 view .LVU3652
 11811 1cd2 0028     		cmp	r0, #0
 11812 1cd4 7FF46AAB 		bne	.L753
1455:src/keys.c    **** 	      // Alpha scroll left
 11813              		.loc 1 1455 6 is_stmt 1 view .LVU3653
1455:src/keys.c    **** 	      // Alpha scroll left
 11814              		.loc 1 1455 9 is_stmt 0 view .LVU3654
 11815 1cd8 5A06     		lsls	r2, r3, #25
 11816 1cda 7EF5FEAB 		bpl	.L771
1463:src/keys.c    **** 		alpha_pos += 1;
 11817              		.loc 1 1463 8 is_stmt 1 view .LVU3655
1463:src/keys.c    **** 		alpha_pos += 1;
 11818              		.loc 1 1463 11 is_stmt 0 view .LVU3656
 11819 1cde B9F1000F 		cmp	r9, #0
 11820 1ce2 11D1     		bne	.L772
 11821              	.LVL996:
 11822              	.L774:
1464:src/keys.c    **** 	      }
 11823              		.loc 1 1464 3 is_stmt 1 view .LVU3657
1464:src/keys.c    **** 	      }
 11824              		.loc 1 1464 13 is_stmt 0 view .LVU3658
 11825 1ce4 09F1010A 		add	r10, r9, #1
 11826              	.LVL997:
 11827              	.L773:
1471:src/keys.c    **** #else
 11828              		.loc 1 1471 8 is_stmt 1 view .LVU3659
 11829 1ce8 3268     		ldr	r2, [r6]
1471:src/keys.c    **** #else
 11830              		.loc 1 1471 25 is_stmt 0 view .LVU3660
 11831 1cea 88F80DA0 		strb	r10, [r8, #13]
1476:src/keys.c    **** 	    }
 11832              		.loc 1 1476 8 is_stmt 1 view .LVU3661
1476:src/keys.c    **** 	    }
 11833              		.loc 1 1476 15 is_stmt 0 view .LVU3662
 11834 1cee 4FF0330B 		mov	fp, #51
 11835 1cf2 FEF7DEB9 		b	.L565
 11836              	.LVL998:
 11837              	.L776:
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11838              		.loc 1 1487 3 is_stmt 1 view .LVU3663
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11839              		.loc 1 1487 31 is_stmt 0 view .LVU3664
 11840 1cf6 09F1FF39 		add	r9, r9, #-1
ARM GAS  /tmp/ccGwaFaD.s 			page 326


 11841              	.LVL999:
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11842              		.loc 1 1487 31 view .LVU3665
 11843 1cfa 3268     		ldr	r2, [r6]
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11844              		.loc 1 1487 20 view .LVU3666
 11845 1cfc 88F80D90 		strb	r9, [r8, #13]
1488:src/keys.c    **** 	    }
 11846              		.loc 1 1488 15 view .LVU3667
 11847 1d00 4FF0330B 		mov	fp, #51
 11848 1d04 FEF7D5B9 		b	.L565
 11849              	.LVL1000:
 11850              	.L772:
1463:src/keys.c    **** 		alpha_pos += 1;
 11851              		.loc 1 1463 33 view .LVU3668
 11852 1d08 FFF7FEFF 		bl	alen
 11853              	.LVL1001:
1463:src/keys.c    **** 		alpha_pos += 1;
 11854              		.loc 1 1463 41 view .LVU3669
 11855 1d0c 09EB4903 		add	r3, r9, r9, lsl #1
1463:src/keys.c    **** 		alpha_pos += 1;
 11856              		.loc 1 1463 39 view .LVU3670
 11857 1d10 A0EB4300 		sub	r0, r0, r3, lsl #1
1463:src/keys.c    **** 		alpha_pos += 1;
 11858              		.loc 1 1463 29 view .LVU3671
 11859 1d14 1328     		cmp	r0, #19
 11860 1d16 E5D8     		bhi	.L774
 11861 1d18 E6E7     		b	.L773
 11862              	.LVL1002:
 11863              	.L631:
1463:src/keys.c    **** 		alpha_pos += 1;
 11864              		.loc 1 1463 29 view .LVU3672
 11865              	.LBE1089:
 11866              	.LBE1199:
 11867              	.LBB1200:
 11868              	.LBB737:
1952:src/keys.c    **** 		// Special 1
 11869              		.loc 1 1952 7 is_stmt 1 view .LVU3673
1952:src/keys.c    **** 		// Special 1
 11870              		.loc 1 1952 10 is_stmt 0 view .LVU3674
 11871 1d1a 012A     		cmp	r2, #1
 11872 1d1c 7EF472AF 		bne	.L633
1954:src/keys.c    **** 	}
 11873              		.loc 1 1954 3 is_stmt 1 view .LVU3675
1954:src/keys.c    **** 	}
 11874              		.loc 1 1954 18 is_stmt 0 view .LVU3676
 11875 1d20 BEF1000F 		cmp	lr, #0
 11876 1d24 14BF     		ite	ne
 11877 1d26 2723     		movne	r3, #39
 11878 1d28 1E23     		moveq	r3, #30
1954:src/keys.c    **** 	}
 11879              		.loc 1 1954 47 view .LVU3677
 11880 1d2a 9B44     		add	fp, fp, r3
 11881              	.LVL1003:
1954:src/keys.c    **** 	}
 11882              		.loc 1 1954 47 view .LVU3678
 11883 1d2c FEF788BB 		b	.L595
ARM GAS  /tmp/ccGwaFaD.s 			page 327


 11884              	.LVL1004:
 11885              	.L688:
1954:src/keys.c    **** 	}
 11886              		.loc 1 1954 47 view .LVU3679
 11887              	.LBE737:
 11888              	.LBE1200:
 11889              	.LBB1201:
 11890              	.LBB884:
2421:src/keys.c    **** 			return STATE_UNFINISHED;
 11891              		.loc 1 2421 5 is_stmt 1 view .LVU3680
2421:src/keys.c    **** 			return STATE_UNFINISHED;
 11892              		.loc 1 2421 20 is_stmt 0 view .LVU3681
 11893 1d30 013A     		subs	r2, r2, #1
 11894 1d32 88F80B20 		strb	r2, [r8, #11]
2422:src/keys.c    **** 		}
 11895              		.loc 1 2422 11 view .LVU3682
 11896 1d36 4FF0330B 		mov	fp, #51
 11897 1d3a 3268     		ldr	r2, [r6]
 11898 1d3c FEF7B9B9 		b	.L565
 11899              	.LVL1005:
 11900              	.L1166:
2447:src/keys.c    **** 		State2.numdigit = 2;
 11901              		.loc 1 2447 3 is_stmt 1 view .LVU3683
2448:src/keys.c    **** 		return STATE_UNFINISHED;
 11902              		.loc 1 2448 19 is_stmt 0 view .LVU3684
 11903 1d40 0223     		movs	r3, #2
 11904 1d42 3268     		ldr	r2, [r6]
2447:src/keys.c    **** 		State2.numdigit = 2;
 11905              		.loc 1 2447 18 view .LVU3685
 11906 1d44 88F80A00 		strb	r0, [r8, #10]
2448:src/keys.c    **** 		return STATE_UNFINISHED;
 11907              		.loc 1 2448 3 is_stmt 1 view .LVU3686
2448:src/keys.c    **** 		return STATE_UNFINISHED;
 11908              		.loc 1 2448 19 is_stmt 0 view .LVU3687
 11909 1d48 88F80B30 		strb	r3, [r8, #11]
2449:src/keys.c    **** 	}
 11910              		.loc 1 2449 3 is_stmt 1 view .LVU3688
2449:src/keys.c    **** 	}
 11911              		.loc 1 2449 10 is_stmt 0 view .LVU3689
 11912 1d4c 4FF0330B 		mov	fp, #51
 11913 1d50 FEF7AFB9 		b	.L565
 11914              	.LVL1006:
 11915              	.L812:
2449:src/keys.c    **** 	}
 11916              		.loc 1 2449 10 view .LVU3690
 11917              	.LBE884:
 11918              	.LBE1201:
 11919              	.LBB1202:
 11920              	.LBB968:
 974:src/keys.c    **** 		State2.test = op;
 11921              		.loc 1 974 3 is_stmt 1 view .LVU3691
 11922 1d54 FFF7FEFF 		bl	process_cmdline_set_lift
 11923              	.LVL1007:
 975:src/keys.c    **** 		return STATE_UNFINISHED;
 11924              		.loc 1 975 3 view .LVU3692
 11925              	.LBE968:
 11926              	.LBE1202:
ARM GAS  /tmp/ccGwaFaD.s 			page 328


 11927              	.LBE1260:
 11928              	.LBE1332:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 11929              		.loc 1 2979 7 is_stmt 0 view .LVU3693
 11930 1d58 2546     		mov	r5, r4
 11931              	.LBB1333:
 11932              	.LBB1261:
 11933              	.LBB1203:
 11934              	.LBB969:
 975:src/keys.c    **** 		return STATE_UNFINISHED;
 11935              		.loc 1 975 15 view .LVU3694
 11936 1d5a 88F80FB0 		strb	fp, [r8, #15]
 976:src/keys.c    **** 
 11937              		.loc 1 976 3 is_stmt 1 view .LVU3695
 11938 1d5e 3268     		ldr	r2, [r6]
 976:src/keys.c    **** 
 11939              		.loc 1 976 10 is_stmt 0 view .LVU3696
 11940 1d60 4FF0330B 		mov	fp, #51
 11941              	.LVL1008:
 976:src/keys.c    **** 
 11942              		.loc 1 976 10 view .LVU3697
 11943 1d64 FEF7A5B9 		b	.L565
 11944              	.LVL1009:
 11945              	.L1188:
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 11946              		.loc 1 990 4 is_stmt 1 view .LVU3698
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 11947              		.loc 1 990 7 is_stmt 0 view .LVU3699
 11948 1d68 BAF5704F 		cmp	r10, #61440
 11949 1d6c 1DD1     		bne	.L814
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 11950              		.loc 1 990 18 view .LVU3700
 11951 1d6e 194B     		ldr	r3, .L1218
 11952 1d70 1B68     		ldr	r3, [r3]
 11953 1d72 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 11954              		.loc 1 990 8 view .LVU3701
 11955 1d76 D807     		lsls	r0, r3, #31
 11956 1d78 17D5     		bpl	.L814
 11957 1d7a 3268     		ldr	r2, [r6]
 993:src/keys.c    **** 		}
 11958              		.loc 1 993 11 view .LVU3702
 11959 1d7c 4FF0330B 		mov	fp, #51
 11960              	.LVL1010:
 993:src/keys.c    **** 		}
 11961              		.loc 1 993 11 view .LVU3703
 11962 1d80 FEF797B9 		b	.L565
 11963              	.LVL1011:
 11964              	.L791:
 993:src/keys.c    **** 		}
 11965              		.loc 1 993 11 view .LVU3704
 11966              	.LBE969:
 11967              	.LBE1203:
 11968              	.LBB1204:
 11969              	.LBB1123:
1193:src/keys.c    **** 				State2.cmplx = 1;
 11970              		.loc 1 1193 5 is_stmt 1 view .LVU3705
ARM GAS  /tmp/ccGwaFaD.s 			page 329


 11971 1d84 FFF7FEFF 		bl	process_cmdline_set_lift
 11972              	.LVL1012:
1194:src/keys.c    **** 				State2.test = op;
 11973              		.loc 1 1194 5 view .LVU3706
1194:src/keys.c    **** 				State2.test = op;
 11974              		.loc 1 1194 18 is_stmt 0 view .LVU3707
 11975 1d88 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 11976 1d8c 3268     		ldr	r2, [r6]
1195:src/keys.c    **** 			}
 11977              		.loc 1 1195 17 view .LVU3708
 11978 1d8e 88F80FB0 		strb	fp, [r8, #15]
1194:src/keys.c    **** 				State2.test = op;
 11979              		.loc 1 1194 18 view .LVU3709
 11980 1d92 43F00203 		orr	r3, r3, #2
 11981 1d96 88F81530 		strb	r3, [r8, #21]
1195:src/keys.c    **** 			}
 11982              		.loc 1 1195 5 is_stmt 1 view .LVU3710
 11983              	.LBE1123:
 11984              	.LBE1204:
 11985              	.LBE1261:
 11986              	.LBE1333:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 11987              		.loc 1 2979 7 is_stmt 0 view .LVU3711
 11988 1d9a 2546     		mov	r5, r4
 11989              	.LBB1334:
 11990              	.LBB1262:
 11991              	.LBB1205:
 11992              	.LBB1124:
1197:src/keys.c    **** 
 11993              		.loc 1 1197 11 view .LVU3712
 11994 1d9c 4FF0330B 		mov	fp, #51
 11995              	.LVL1013:
1197:src/keys.c    **** 
 11996              		.loc 1 1197 11 view .LVU3713
 11997 1da0 FEF787B9 		b	.L565
 11998              	.LVL1014:
 11999              	.L1179:
1197:src/keys.c    **** 
 12000              		.loc 1 1197 11 view .LVU3714
 12001 1da4 3268     		ldr	r2, [r6]
 12002 1da6 FEF784B9 		b	.L565
 12003              	.LVL1015:
 12004              	.L814:
1197:src/keys.c    **** 
 12005              		.loc 1 1197 11 view .LVU3715
 12006              	.LBE1124:
 12007              	.LBE1205:
 12008              	.LBB1206:
 12009              	.LBB970:
 991:src/keys.c    **** 			}
 12010              		.loc 1 991 5 is_stmt 1 view .LVU3716
 12011              	.LBB957:
 12012              	.LBI957:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12013              		.loc 1 506 13 view .LVU3717
 12014              	.LBB958:
 507:src/keys.c    **** 		return;
ARM GAS  /tmp/ccGwaFaD.s 			page 330


 12015              		.loc 1 507 2 view .LVU3718
 507:src/keys.c    **** 		return;
 12016              		.loc 1 507 6 is_stmt 0 view .LVU3719
 12017 1daa FFF7FEFF 		bl	is_bad_cmdline
 12018              	.LVL1016:
 507:src/keys.c    **** 		return;
 12019              		.loc 1 507 5 view .LVU3720
 12020 1dae 0446     		mov	r4, r0
 12021              	.LVL1017:
 507:src/keys.c    **** 		return;
 12022              		.loc 1 507 5 view .LVU3721
 12023 1db0 C8BB     		cbnz	r0, .L1195
 12024 1db2 5FFA8BF0 		uxtb	r0, fp
 12025 1db6 FFF7FEFF 		bl	init_arg.part.0
 12026              	.LVL1018:
 12027              	.LBE958:
 12028              	.LBE957:
 12029              	.LBE970:
 12030              	.LBE1206:
 12031              	.LBE1262:
 12032              	.LBE1334:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 12033              		.loc 1 2979 7 view .LVU3722
 12034 1dba 2546     		mov	r5, r4
 12035 1dbc 3268     		ldr	r2, [r6]
 12036              	.LBB1335:
 12037              	.LBB1263:
 12038              	.LBB1207:
 12039              	.LBB971:
 993:src/keys.c    **** 		}
 12040              		.loc 1 993 11 view .LVU3723
 12041 1dbe 4FF0330B 		mov	fp, #51
 12042              	.LVL1019:
 993:src/keys.c    **** 		}
 12043              		.loc 1 993 11 view .LVU3724
 12044 1dc2 FEF776B9 		b	.L565
 12045              	.LVL1020:
 12046              	.L788:
 993:src/keys.c    **** 		}
 12047              		.loc 1 993 11 view .LVU3725
 12048              	.LBE971:
 12049              	.LBE1207:
 12050              	.LBB1208:
 12051              	.LBB1125:
1186:src/keys.c    **** 			break;
 12052              		.loc 1 1186 4 is_stmt 1 view .LVU3726
 12053              	.LBB1116:
 12054              	.LBI1116:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12055              		.loc 1 94 20 view .LVU3727
 12056              	.LBB1117:
  95:src/keys.c    **** 	State2.shifts = shift;
 12057              		.loc 1 95 2 view .LVU3728
 12058              	.LBB1118:
 12059              	.LBI1118:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12060              		.loc 1 86 13 view .LVU3729
ARM GAS  /tmp/ccGwaFaD.s 			page 331


 12061              	.LBB1119:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12062              		.loc 1 87 2 view .LVU3730
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12063              		.loc 1 87 18 is_stmt 0 view .LVU3731
 12064 1dc6 FFF7FEFF 		bl	shift_down
 12065              	.LVL1021:
  88:src/keys.c    **** }
 12066              		.loc 1 88 2 is_stmt 1 view .LVU3732
 12067              	.LBE1119:
 12068              	.LBE1118:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12069              		.loc 1 96 2 view .LVU3733
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12070              		.loc 1 96 16 is_stmt 0 view .LVU3734
 12071 1dca 88F810A0 		strb	r10, [r8, #16]
  98:src/keys.c    **** }
 12072              		.loc 1 98 2 is_stmt 1 view .LVU3735
  98:src/keys.c    **** }
 12073              		.loc 1 98 9 is_stmt 0 view .LVU3736
 12074 1dce FEF737BB 		b	.L595
 12075              	.L1219:
 12076 1dd2 00BF     		.align	2
 12077              	.L1218:
 12078 1dd4 00000000 		.word	main_ram
 12079 1dd8 00000000 		.word	NonProgrammable
 12080              	.LVL1022:
 12081              	.L1178:
  98:src/keys.c    **** }
 12082              		.loc 1 98 9 view .LVU3737
 12083              	.LBE1117:
 12084              	.LBE1116:
1176:src/keys.c    **** 		State2.hyp = 1;
 12085              		.loc 1 1176 3 is_stmt 1 view .LVU3738
 12086 1ddc FFF7FEFF 		bl	process_cmdline_set_lift
 12087              	.LVL1023:
1177:src/keys.c    **** 		State2.dot = op;
 12088              		.loc 1 1177 3 view .LVU3739
1178:src/keys.c    **** 		State2.cmplx = 1;
 12089              		.loc 1 1178 3 view .LVU3740
1179:src/keys.c    **** 		return STATE_UNFINISHED;
 12090              		.loc 1 1179 3 view .LVU3741
1179:src/keys.c    **** 		return STATE_UNFINISHED;
 12091              		.loc 1 1179 16 is_stmt 0 view .LVU3742
 12092 1de0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12093 1de4 3268     		ldr	r2, [r6]
 12094 1de6 0BF00103 		and	r3, fp, #1
 12095 1dea 9B01     		lsls	r3, r3, #6
 12096 1dec 43F02203 		orr	r3, r3, #34
 12097 1df0 21F06201 		bic	r1, r1, #98
 12098 1df4 0B43     		orrs	r3, r3, r1
 12099 1df6 88F81530 		strb	r3, [r8, #21]
1180:src/keys.c    **** 	}
 12100              		.loc 1 1180 3 is_stmt 1 view .LVU3743
1180:src/keys.c    **** 	}
 12101              		.loc 1 1180 10 is_stmt 0 view .LVU3744
 12102 1dfa 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccGwaFaD.s 			page 332


 12103              	.LVL1024:
1180:src/keys.c    **** 	}
 12104              		.loc 1 1180 10 view .LVU3745
 12105 1dfe FEF758B9 		b	.L565
 12106              	.LVL1025:
 12107              	.L1177:
1171:src/keys.c    **** 		return STATE_UNFINISHED;
 12108              		.loc 1 1171 3 is_stmt 1 view .LVU3746
 12109              	.LBB1120:
 12110              	.LBI1120:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12111              		.loc 1 506 13 view .LVU3747
 12112              	.LBB1121:
 507:src/keys.c    **** 		return;
 12113              		.loc 1 507 2 view .LVU3748
 507:src/keys.c    **** 		return;
 12114              		.loc 1 507 6 is_stmt 0 view .LVU3749
 12115 1e02 FFF7FEFF 		bl	is_bad_cmdline
 12116              	.LVL1026:
 507:src/keys.c    **** 		return;
 12117              		.loc 1 507 5 view .LVU3750
 12118 1e06 0446     		mov	r4, r0
 12119 1e08 90B9     		cbnz	r0, .L1196
 12120 1e0a 5FFA8BF0 		uxtb	r0, fp
 12121 1e0e FFF7FEFF 		bl	init_arg.part.0
 12122              	.LVL1027:
 12123              	.LBE1121:
 12124              	.LBE1120:
 12125              	.LBE1125:
 12126              	.LBE1208:
 12127              	.LBE1263:
 12128              	.LBE1335:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 12129              		.loc 1 2979 7 view .LVU3751
 12130 1e12 2546     		mov	r5, r4
 12131 1e14 3268     		ldr	r2, [r6]
 12132              	.LBB1336:
 12133              	.LBB1264:
 12134              	.LBB1209:
 12135              	.LBB1126:
1172:src/keys.c    **** 	}
 12136              		.loc 1 1172 10 view .LVU3752
 12137 1e16 4FF0330B 		mov	fp, #51
 12138              	.LVL1028:
1172:src/keys.c    **** 	}
 12139              		.loc 1 1172 10 view .LVU3753
 12140 1e1a FEF74AB9 		b	.L565
 12141              	.LVL1029:
 12142              	.L787:
1200:src/keys.c    **** 			break;
 12143              		.loc 1 1200 4 is_stmt 1 view .LVU3754
 12144 1e1e FFF7FEFF 		bl	init_state
 12145              	.LVL1030:
1201:src/keys.c    **** 
 12146              		.loc 1 1201 4 view .LVU3755
 12147 1e22 FEF70DBB 		b	.L595
 12148              	.LVL1031:
ARM GAS  /tmp/ccGwaFaD.s 			page 333


 12149              	.L1195:
1201:src/keys.c    **** 
 12150              		.loc 1 1201 4 is_stmt 0 view .LVU3756
 12151 1e26 3268     		ldr	r2, [r6]
 12152              	.LBE1126:
 12153              	.LBE1209:
 12154              	.LBB1210:
 12155              	.LBB972:
 993:src/keys.c    **** 		}
 12156              		.loc 1 993 11 view .LVU3757
 12157 1e28 4FF0330B 		mov	fp, #51
 12158              	.LVL1032:
 993:src/keys.c    **** 		}
 12159              		.loc 1 993 11 view .LVU3758
 12160 1e2c FEF741B9 		b	.L565
 12161              	.LVL1033:
 12162              	.L1196:
 993:src/keys.c    **** 		}
 12163              		.loc 1 993 11 view .LVU3759
 12164 1e30 3268     		ldr	r2, [r6]
 12165              	.LBE972:
 12166              	.LBE1210:
 12167              	.LBB1211:
 12168              	.LBB1127:
1172:src/keys.c    **** 	}
 12169              		.loc 1 1172 10 view .LVU3760
 12170 1e32 4FF0330B 		mov	fp, #51
 12171              	.LVL1034:
1172:src/keys.c    **** 	}
 12172              		.loc 1 1172 10 view .LVU3761
 12173 1e36 FEF73CB9 		b	.L565
 12174              	.LVL1035:
 12175              	.L837:
1172:src/keys.c    **** 	}
 12176              		.loc 1 1172 10 view .LVU3762
 12177              	.LBE1127:
 12178              	.LBE1211:
 12179              	.LBE1264:
 12180              	.LBE1336:
3200:src/keys.c    **** 	NonProgrammable = 0;
 12181              		.loc 1 3200 7 is_stmt 1 view .LVU3763
3200:src/keys.c    **** 	NonProgrammable = 0;
 12182              		.loc 1 3200 11 is_stmt 0 view .LVU3764
 12183 1e3a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3200:src/keys.c    **** 	NonProgrammable = 0;
 12184              		.loc 1 3200 10 view .LVU3765
 12185 1e3e 5806     		lsls	r0, r3, #25
 12186 1e40 12D5     		bpl	.L935
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12187              		.loc 1 3201 2 is_stmt 1 view .LVU3766
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12188              		.loc 1 3201 18 is_stmt 0 view .LVU3767
 12189 1e42 534B     		ldr	r3, .L1220
 12190 1e44 0022     		movs	r2, #0
 12191              	.LBB1337:
 12192              	.LBB1265:
 12193              	.LBB1212:
ARM GAS  /tmp/ccGwaFaD.s 			page 334


 12194              	.LBB692:
 738:src/keys.c    **** 	    }
 12195              		.loc 1 738 15 view .LVU3768
 12196 1e46 4FF00F0B 		mov	fp, #15
 12197              	.LBE692:
 12198              	.LBE1212:
 12199              	.LBE1265:
 12200              	.LBE1337:
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12201              		.loc 1 3201 18 view .LVU3769
 12202 1e4a 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12203              		.loc 1 3202 2 is_stmt 1 view .LVU3770
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12204              		.loc 1 3202 32 is_stmt 0 view .LVU3771
 12205 1e4c 5846     		mov	r0, fp
 12206 1e4e FEF7BBBC 		b	.L874
 12207              	.LVL1036:
 12208              	.L850:
 12209              	.LBB1338:
 12210              	.LBB1266:
 12211              	.LBB1213:
 12212              	.LBB693:
 817:src/keys.c    **** #else
 12213              		.loc 1 817 4 is_stmt 1 view .LVU3772
 817:src/keys.c    **** #else
 12214              		.loc 1 817 17 is_stmt 0 view .LVU3773
 12215 1e52 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 12216 1e56 3268     		ldr	r2, [r6]
 12217 1e58 43F00203 		orr	r3, r3, #2
 12218 1e5c 88F81530 		strb	r3, [r8, #21]
 823:src/keys.c    **** 
 12219              		.loc 1 823 4 is_stmt 1 view .LVU3774
 841:src/keys.c    **** }
 12220              		.loc 1 841 9 is_stmt 0 view .LVU3775
 12221 1e60 4FF0330B 		mov	fp, #51
 823:src/keys.c    **** 
 12222              		.loc 1 823 4 view .LVU3776
 12223 1e64 FEF725B9 		b	.L565
 12224              	.LVL1037:
 12225              	.L935:
 738:src/keys.c    **** 	    }
 12226              		.loc 1 738 15 view .LVU3777
 12227 1e68 4FF00F0B 		mov	fp, #15
 12228 1e6c 3FE6     		b	.L873
 12229              	.LVL1038:
 12230              	.L849:
 802:src/keys.c    **** 		State2.arrow = 1;
 12231              		.loc 1 802 3 is_stmt 1 view .LVU3778
 12232 1e6e FFF7FEFF 		bl	process_cmdline_set_lift
 12233              	.LVL1039:
 803:src/keys.c    **** #ifdef DM42
 12234              		.loc 1 803 3 view .LVU3779
 803:src/keys.c    **** #ifdef DM42
 12235              		.loc 1 803 16 is_stmt 0 view .LVU3780
 12236 1e72 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 805:src/keys.c    **** 		display_current_menu ();
ARM GAS  /tmp/ccGwaFaD.s 			page 335


 12237              		.loc 1 805 3 view .LVU3781
 12238 1e76 0920     		movs	r0, #9
 803:src/keys.c    **** #ifdef DM42
 12239              		.loc 1 803 16 view .LVU3782
 12240 1e78 43F00403 		orr	r3, r3, #4
 12241 1e7c 88F81530 		strb	r3, [r8, #21]
 805:src/keys.c    **** 		display_current_menu ();
 12242              		.loc 1 805 3 is_stmt 1 view .LVU3783
 12243 1e80 FFF7FEFF 		bl	set_menu
 12244              	.LVL1040:
 806:src/keys.c    **** 		lcd_refresh ();
 12245              		.loc 1 806 3 view .LVU3784
 12246 1e84 FFF7FEFF 		bl	display_current_menu
 12247              	.LVL1041:
 807:src/keys.c    **** #else
 12248              		.loc 1 807 3 view .LVU3785
 12249 1e88 424B     		ldr	r3, .L1220+4
 12250 1e8a 9847     		blx	r3
 12251              	.LVL1042:
 811:src/keys.c    **** 
 12252              		.loc 1 811 3 view .LVU3786
 12253              	.LBE693:
 12254              	.LBE1213:
 12255              	.LBE1266:
 12256              	.LBE1338:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 12257              		.loc 1 2979 7 is_stmt 0 view .LVU3787
 12258 1e8c 2546     		mov	r5, r4
 12259 1e8e 3268     		ldr	r2, [r6]
 12260              	.LBB1339:
 12261              	.LBB1267:
 12262              	.LBB1214:
 12263              	.LBB694:
 841:src/keys.c    **** }
 12264              		.loc 1 841 9 view .LVU3788
 12265 1e90 4FF0330B 		mov	fp, #51
 811:src/keys.c    **** 
 12266              		.loc 1 811 3 view .LVU3789
 12267 1e94 FEF70DB9 		b	.L565
 12268              	.LVL1043:
 12269              	.L838:
 811:src/keys.c    **** 
 12270              		.loc 1 811 3 view .LVU3790
 12271              	.LBE694:
 12272              	.LBE1214:
 12273              	.LBE1267:
 12274              	.LBE1339:
3200:src/keys.c    **** 	NonProgrammable = 0;
 12275              		.loc 1 3200 7 is_stmt 1 view .LVU3791
3200:src/keys.c    **** 	NonProgrammable = 0;
 12276              		.loc 1 3200 11 is_stmt 0 view .LVU3792
 12277 1e98 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3200:src/keys.c    **** 	NonProgrammable = 0;
 12278              		.loc 1 3200 10 view .LVU3793
 12279 1e9c 5B06     		lsls	r3, r3, #25
 12280 1e9e 64D5     		bpl	.L932
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccGwaFaD.s 			page 336


 12281              		.loc 1 3201 2 is_stmt 1 view .LVU3794
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12282              		.loc 1 3201 18 is_stmt 0 view .LVU3795
 12283 1ea0 3B4B     		ldr	r3, .L1220
 12284 1ea2 0022     		movs	r2, #0
 12285              	.LBB1340:
 12286              	.LBB1268:
 12287              	.LBB1215:
 12288              	.LBB695:
 746:src/keys.c    **** 	    }
 12289              		.loc 1 746 15 view .LVU3796
 12290 1ea4 4FF0100B 		mov	fp, #16
 12291              	.LBE695:
 12292              	.LBE1215:
 12293              	.LBE1268:
 12294              	.LBE1340:
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12295              		.loc 1 3201 18 view .LVU3797
 12296 1ea8 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12297              		.loc 1 3202 2 is_stmt 1 view .LVU3798
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12298              		.loc 1 3202 32 is_stmt 0 view .LVU3799
 12299 1eaa 5846     		mov	r0, fp
 12300 1eac FEF78CBC 		b	.L874
 12301              	.LVL1044:
 12302              	.L1137:
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12303              		.loc 1 3201 2 is_stmt 1 view .LVU3800
3201:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12304              		.loc 1 3201 18 is_stmt 0 view .LVU3801
 12305 1eb0 0022     		movs	r2, #0
 12306 1eb2 1A60     		str	r2, [r3]
3202:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12307              		.loc 1 3202 2 is_stmt 1 view .LVU3802
 12308 1eb4 FEF7DEBB 		b	.L872
 12309              	.LVL1045:
 12310              	.L761:
 12311              	.LBB1341:
 12312              	.LBB1269:
 12313              	.LBB1216:
 12314              	.LBB1090:
1420:src/keys.c    **** 			init_arg(RARG_ARCL);
 12315              		.loc 1 1420 3 view .LVU3803
1420:src/keys.c    **** 			init_arg(RARG_ARCL);
 12316              		.loc 1 1420 6 is_stmt 0 view .LVU3804
 12317 1eb8 0128     		cmp	r0, #1
 12318 1eba 3FD0     		beq	.L1197
1423:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12319              		.loc 1 1423 10 is_stmt 1 view .LVU3805
1423:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12320              		.loc 1 1423 13 is_stmt 0 view .LVU3806
 12321 1ebc 0328     		cmp	r0, #3
 12322 1ebe 7FF475AA 		bne	.L753
1424:src/keys.c    **** 			return STATE_UNFINISHED;
 12323              		.loc 1 1424 4 is_stmt 1 view .LVU3807
 12324              	.LVL1046:
ARM GAS  /tmp/ccGwaFaD.s 			page 337


 12325              	.LBB1071:
 12326              	.LBI1071:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12327              		.loc 1 506 13 view .LVU3808
 12328              	.LBB1072:
 507:src/keys.c    **** 		return;
 12329              		.loc 1 507 2 view .LVU3809
 507:src/keys.c    **** 		return;
 12330              		.loc 1 507 6 is_stmt 0 view .LVU3810
 12331 1ec2 FFF7FEFF 		bl	is_bad_cmdline
 12332              	.LVL1047:
 507:src/keys.c    **** 		return;
 12333              		.loc 1 507 5 view .LVU3811
 12334 1ec6 0346     		mov	r3, r0
 12335 1ec8 C0B9     		cbnz	r0, .L1198
 12336 1eca 7320     		movs	r0, #115
 12337              	.LBE1072:
 12338              	.LBE1071:
 12339              	.LBE1090:
 12340              	.LBE1216:
 12341              	.LBE1269:
 12342              	.LBE1341:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 12343              		.loc 1 2979 7 view .LVU3812
 12344 1ecc 1D46     		mov	r5, r3
 12345              	.LBB1342:
 12346              	.LBB1270:
 12347              	.LBB1217:
 12348              	.LBB1091:
1425:src/keys.c    **** 		}
 12349              		.loc 1 1425 11 view .LVU3813
 12350 1ece 4FF0330B 		mov	fp, #51
 12351              	.LBB1074:
 12352              	.LBB1073:
 12353 1ed2 FFF7FEFF 		bl	init_arg.part.0
 12354              	.LVL1048:
 12355 1ed6 3268     		ldr	r2, [r6]
 12356 1ed8 FEF7EBB8 		b	.L565
 12357              	.LVL1049:
 12358              	.L762:
1425:src/keys.c    **** 		}
 12359              		.loc 1 1425 11 view .LVU3814
 12360              	.LBE1073:
 12361              	.LBE1074:
1413:src/keys.c    **** 			init_arg(RARG_ASTO);
 12362              		.loc 1 1413 3 is_stmt 1 view .LVU3815
1413:src/keys.c    **** 			init_arg(RARG_ASTO);
 12363              		.loc 1 1413 6 is_stmt 0 view .LVU3816
 12364 1edc 0128     		cmp	r0, #1
 12365 1ede 7FF465AA 		bne	.L753
1414:src/keys.c    **** 			return STATE_UNFINISHED;
 12366              		.loc 1 1414 4 is_stmt 1 view .LVU3817
 12367              	.LVL1050:
 12368              	.LBB1075:
 12369              	.LBI1075:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12370              		.loc 1 506 13 view .LVU3818
ARM GAS  /tmp/ccGwaFaD.s 			page 338


 12371              	.LBB1076:
 507:src/keys.c    **** 		return;
 12372              		.loc 1 507 2 view .LVU3819
 507:src/keys.c    **** 		return;
 12373              		.loc 1 507 6 is_stmt 0 view .LVU3820
 12374 1ee2 FFF7FEFF 		bl	is_bad_cmdline
 12375              	.LVL1051:
 507:src/keys.c    **** 		return;
 12376              		.loc 1 507 5 view .LVU3821
 12377 1ee6 0346     		mov	r3, r0
 12378 1ee8 A8BB     		cbnz	r0, .L1199
 12379 1eea 2620     		movs	r0, #38
 12380              	.LBE1076:
 12381              	.LBE1075:
 12382              	.LBE1091:
 12383              	.LBE1217:
 12384              	.LBE1270:
 12385              	.LBE1342:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 12386              		.loc 1 2979 7 view .LVU3822
 12387 1eec 1D46     		mov	r5, r3
 12388              	.LBB1343:
 12389              	.LBB1271:
 12390              	.LBB1218:
 12391              	.LBB1092:
1415:src/keys.c    **** 		}
 12392              		.loc 1 1415 11 view .LVU3823
 12393 1eee 4FF0330B 		mov	fp, #51
 12394              	.LBB1078:
 12395              	.LBB1077:
 12396 1ef2 FFF7FEFF 		bl	init_arg.part.0
 12397              	.LVL1052:
 12398 1ef6 3268     		ldr	r2, [r6]
 12399 1ef8 FEF7DBB8 		b	.L565
 12400              	.LVL1053:
 12401              	.L1198:
1415:src/keys.c    **** 		}
 12402              		.loc 1 1415 11 view .LVU3824
 12403 1efc 3268     		ldr	r2, [r6]
 12404              	.LBE1077:
 12405              	.LBE1078:
1425:src/keys.c    **** 		}
 12406              		.loc 1 1425 11 view .LVU3825
 12407 1efe 4FF0330B 		mov	fp, #51
 12408 1f02 FEF7D6B8 		b	.L565
 12409              	.LVL1054:
 12410              	.L760:
1430:src/keys.c    **** 			break;
 12411              		.loc 1 1430 3 is_stmt 1 view .LVU3826
1430:src/keys.c    **** 			break;
 12412              		.loc 1 1430 24 is_stmt 0 view .LVU3827
 12413 1f06 821E     		subs	r2, r0, #2
1430:src/keys.c    **** 			break;
 12414              		.loc 1 1430 6 view .LVU3828
 12415 1f08 D2B2     		uxtb	r2, r2
 12416 1f0a 012A     		cmp	r2, #1
 12417 1f0c 7FF64EAA 		bls	.L753
ARM GAS  /tmp/ccGwaFaD.s 			page 339


1432:src/keys.c    **** 			State2.multi = 1;
 12418              		.loc 1 1432 3 is_stmt 1 view .LVU3829
1432:src/keys.c    **** 			State2.multi = 1;
 12419              		.loc 1 1432 6 is_stmt 0 view .LVU3830
 12420 1f10 0128     		cmp	r0, #1
 12421 1f12 02D1     		bne	.L767
1432:src/keys.c    **** 			State2.multi = 1;
 12422              		.loc 1 1432 24 view .LVU3831
 12423 1f14 13F04002 		ands	r2, r3, #64
 12424 1f18 2AD0     		beq	.L1200
 12425              	.L767:
1438:src/keys.c    **** 		State2.alphashift = 0;
 12426              		.loc 1 1438 3 is_stmt 1 view .LVU3832
1439:src/keys.c    **** #ifdef DM42
 12427              		.loc 1 1439 3 view .LVU3833
1438:src/keys.c    **** 		State2.alphashift = 0;
 12428              		.loc 1 1438 17 is_stmt 0 view .LVU3834
 12429 1f1a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1441:src/keys.c    **** 		display_current_menu();
 12430              		.loc 1 1441 3 view .LVU3835
 12431 1f1e 4FF0FF30 		mov	r0, #-1
 12432              	.LVL1055:
1438:src/keys.c    **** 		State2.alphashift = 0;
 12433              		.loc 1 1438 17 view .LVU3836
 12434 1f22 23F01803 		bic	r3, r3, #24
 12435 1f26 88F81630 		strb	r3, [r8, #22]
1441:src/keys.c    **** 		display_current_menu();
 12436              		.loc 1 1441 3 is_stmt 1 view .LVU3837
1444:src/keys.c    **** 
 12437              		.loc 1 1444 10 is_stmt 0 view .LVU3838
 12438 1f2a 4FF0330B 		mov	fp, #51
1441:src/keys.c    **** 		display_current_menu();
 12439              		.loc 1 1441 3 view .LVU3839
 12440 1f2e FFF7FEFF 		bl	set_menu
 12441              	.LVL1056:
1442:src/keys.c    **** #endif
 12442              		.loc 1 1442 3 is_stmt 1 view .LVU3840
 12443 1f32 FFF7FEFF 		bl	display_current_menu
 12444              	.LVL1057:
1444:src/keys.c    **** 
 12445              		.loc 1 1444 3 view .LVU3841
 12446 1f36 3268     		ldr	r2, [r6]
1444:src/keys.c    **** 
 12447              		.loc 1 1444 10 is_stmt 0 view .LVU3842
 12448 1f38 FEF7BBB8 		b	.L565
 12449              	.LVL1058:
 12450              	.L1197:
1421:src/keys.c    **** 			return STATE_UNFINISHED;
 12451              		.loc 1 1421 4 is_stmt 1 view .LVU3843
 12452              	.LBB1079:
 12453              	.LBI1079:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12454              		.loc 1 506 13 view .LVU3844
 12455              	.LBB1080:
 507:src/keys.c    **** 		return;
 12456              		.loc 1 507 2 view .LVU3845
 507:src/keys.c    **** 		return;
ARM GAS  /tmp/ccGwaFaD.s 			page 340


 12457              		.loc 1 507 6 is_stmt 0 view .LVU3846
 12458 1f3c FFF7FEFF 		bl	is_bad_cmdline
 12459              	.LVL1059:
 507:src/keys.c    **** 		return;
 12460              		.loc 1 507 5 view .LVU3847
 12461 1f40 0346     		mov	r3, r0
 12462 1f42 68B9     		cbnz	r0, .L1201
 12463 1f44 2720     		movs	r0, #39
 12464              	.LBE1080:
 12465              	.LBE1079:
 12466              	.LBE1092:
 12467              	.LBE1218:
 12468              	.LBE1271:
 12469              	.LBE1343:
2979:src/keys.c    ****   if (was_paused && Pause == 0)
 12470              		.loc 1 2979 7 view .LVU3848
 12471 1f46 1D46     		mov	r5, r3
 12472              	.LBB1344:
 12473              	.LBB1272:
 12474              	.LBB1219:
 12475              	.LBB1093:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12476              		.loc 1 1422 11 view .LVU3849
 12477 1f48 4FF0330B 		mov	fp, #51
 12478              	.LBB1082:
 12479              	.LBB1081:
 12480 1f4c FFF7FEFF 		bl	init_arg.part.0
 12481              	.LVL1060:
 12482 1f50 3268     		ldr	r2, [r6]
 12483 1f52 FEF7AEB8 		b	.L565
 12484              	.LVL1061:
 12485              	.L1199:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12486              		.loc 1 1422 11 view .LVU3850
 12487 1f56 3268     		ldr	r2, [r6]
 12488              	.LBE1081:
 12489              	.LBE1082:
1415:src/keys.c    **** 		}
 12490              		.loc 1 1415 11 view .LVU3851
 12491 1f58 4FF0330B 		mov	fp, #51
 12492 1f5c FEF7A9B8 		b	.L565
 12493              	.LVL1062:
 12494              	.L1201:
1415:src/keys.c    **** 		}
 12495              		.loc 1 1415 11 view .LVU3852
 12496 1f60 3268     		ldr	r2, [r6]
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12497              		.loc 1 1422 11 view .LVU3853
 12498 1f62 4FF0330B 		mov	fp, #51
 12499 1f66 FEF7A4B8 		b	.L565
 12500              	.LVL1063:
 12501              	.L932:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12502              		.loc 1 1422 11 view .LVU3854
 12503              	.LBE1093:
 12504              	.LBE1219:
 12505              	.LBB1220:
ARM GAS  /tmp/ccGwaFaD.s 			page 341


 12506              	.LBB696:
 746:src/keys.c    **** 	    }
 12507              		.loc 1 746 15 view .LVU3855
 12508 1f6a 4FF0100B 		mov	fp, #16
 12509 1f6e BEE5     		b	.L873
 12510              	.LVL1064:
 12511              	.L1200:
 746:src/keys.c    **** 	    }
 12512              		.loc 1 746 15 view .LVU3856
 12513              	.LBE696:
 12514              	.LBE1220:
 12515              	.LBB1221:
 12516              	.LBB1094:
1433:src/keys.c    **** 			State2.numdigit = 0;
 12517              		.loc 1 1433 4 is_stmt 1 view .LVU3857
1433:src/keys.c    **** 			State2.numdigit = 0;
 12518              		.loc 1 1433 17 is_stmt 0 view .LVU3858
 12519 1f70 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1434:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12520              		.loc 1 1434 20 view .LVU3859
 12521 1f74 88F80B20 		strb	r2, [r8, #11]
1433:src/keys.c    **** 			State2.numdigit = 0;
 12522              		.loc 1 1433 17 view .LVU3860
 12523 1f78 43F00803 		orr	r3, r3, #8
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12524              		.loc 1 1435 12 view .LVU3861
 12525 1f7c 0A21     		movs	r1, #10
 12526              	.LVL1065:
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12527              		.loc 1 1435 12 view .LVU3862
 12528 1f7e 3268     		ldr	r2, [r6]
 12529 1f80 88F81F10 		strb	r1, [r8, #31]
1433:src/keys.c    **** 			State2.numdigit = 0;
 12530              		.loc 1 1433 17 view .LVU3863
 12531 1f84 88F81530 		strb	r3, [r8, #21]
1434:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12532              		.loc 1 1434 4 is_stmt 1 view .LVU3864
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12533              		.loc 1 1435 4 view .LVU3865
1436:src/keys.c    **** 		}
 12534              		.loc 1 1436 4 view .LVU3866
1436:src/keys.c    **** 		}
 12535              		.loc 1 1436 11 is_stmt 0 view .LVU3867
 12536 1f88 4FF0330B 		mov	fp, #51
 12537 1f8c FEF791B8 		b	.L565
 12538              	.L1221:
 12539              		.align	2
 12540              	.L1220:
 12541 1f90 00000000 		.word	NonProgrammable
 12542 1f94 31020008 		.word	134218289
 12543              	.LBE1094:
 12544              	.LBE1221:
 12545              	.LBE1272:
 12546              	.LBE1344:
 12547              		.cfi_endproc
 12548              	.LFE58:
 12550              		.section	.text.process_keycode_with_shift,"ax",%progbits
ARM GAS  /tmp/ccGwaFaD.s 			page 342


 12551              		.align	1
 12552              		.p2align 2,,3
 12553              		.global	process_keycode_with_shift
 12554              		.syntax unified
 12555              		.thumb
 12556              		.thumb_func
 12557              		.fpu fpv4-sp-d16
 12559              	process_keycode_with_shift:
 12560              	.LFB57:
2953:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12561              		.loc 1 2953 61 is_stmt 1 view -0
 12562              		.cfi_startproc
 12563              		@ args = 0, pretend = 0, frame = 8
 12564              		@ frame_needed = 0, uses_anonymous_args = 0
 12565 0000 30B5     		push	{r4, r5, lr}
 12566              		.cfi_def_cfa_offset 12
 12567              		.cfi_offset 4, -12
 12568              		.cfi_offset 5, -8
 12569              		.cfi_offset 14, -4
 12570 0002 83B0     		sub	sp, sp, #12
 12571              		.cfi_def_cfa_offset 24
2953:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12572              		.loc 1 2953 61 is_stmt 0 view .LVU3869
 12573 0004 02AB     		add	r3, sp, #8
 12574 0006 03E90300 		stmdb	r3, {r0, r1}
 12575 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 12576              	.LVL1066:
2954:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12577              		.loc 1 2954 4 is_stmt 1 view .LVU3870
2954:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12578              		.loc 1 2954 7 is_stmt 0 view .LVU3871
 12579 000e 2E2C     		cmp	r4, #46
 12580 0010 10D0     		beq	.L1222
2955:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12581              		.loc 1 2955 4 is_stmt 1 view .LVU3872
2955:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12582              		.loc 1 2955 7 is_stmt 0 view .LVU3873
 12583 0012 332C     		cmp	r4, #51
 12584 0014 1DD0     		beq	.L1229
2964:src/keys.c    ****      nd_opcode = remapped.shift;
 12585              		.loc 1 2964 7 view .LVU3874
 12586 0016 342C     		cmp	r4, #52
 12587 0018 019D     		ldr	r5, [sp, #4]
2964:src/keys.c    ****      nd_opcode = remapped.shift;
 12588              		.loc 1 2964 4 is_stmt 1 view .LVU3875
2964:src/keys.c    ****      nd_opcode = remapped.shift;
 12589              		.loc 1 2964 7 is_stmt 0 view .LVU3876
 12590 001a 0DD0     		beq	.L1230
2968:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12591              		.loc 1 2968 9 is_stmt 1 view .LVU3877
2968:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12592              		.loc 1 2968 12 is_stmt 0 view .LVU3878
 12593 001c 002D     		cmp	r5, #0
 12594 001e 03DB     		blt	.L1227
2968:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12595              		.loc 1 2968 34 is_stmt 1 discriminator 1 view .LVU3879
 12596              	.LVL1067:
ARM GAS  /tmp/ccGwaFaD.s 			page 343


 12597              	.LBB1345:
 12598              	.LBI1345:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12599              		.loc 1 94 20 discriminator 1 view .LVU3880
 12600              	.LBB1346:
  95:src/keys.c    **** 	State2.shifts = shift;
 12601              		.loc 1 95 2 discriminator 1 view .LVU3881
 12602              	.LBB1347:
 12603              	.LBI1347:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12604              		.loc 1 86 13 discriminator 1 view .LVU3882
 12605              	.LBB1348:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12606              		.loc 1 87 2 discriminator 1 view .LVU3883
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12607              		.loc 1 87 18 is_stmt 0 discriminator 1 view .LVU3884
 12608 0020 FFF7FEFF 		bl	shift_down
 12609              	.LVL1068:
  88:src/keys.c    **** }
 12610              		.loc 1 88 2 is_stmt 1 discriminator 1 view .LVU3885
 12611              	.LBE1348:
 12612              	.LBE1347:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12613              		.loc 1 96 2 discriminator 1 view .LVU3886
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12614              		.loc 1 96 16 is_stmt 0 discriminator 1 view .LVU3887
 12615 0024 194B     		ldr	r3, .L1231
 12616              	.LBE1346:
 12617              	.LBE1345:
2968:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12618              		.loc 1 2968 34 discriminator 1 view .LVU3888
 12619 0026 1D74     		strb	r5, [r3, #16]
 12620              	.LBB1350:
 12621              	.LBB1349:
  98:src/keys.c    **** }
 12622              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU3889
 12623              	.LVL1069:
 12624              	.L1227:
  98:src/keys.c    **** }
 12625              		.loc 1 98 2 is_stmt 0 discriminator 1 view .LVU3890
 12626              	.LBE1349:
 12627              	.LBE1350:
2969:src/keys.c    ****  }
 12628              		.loc 1 2969 4 is_stmt 1 view .LVU3891
 12629 0028 2046     		mov	r0, r4
2970:src/keys.c    ****  
 12630              		.loc 1 2970 2 is_stmt 0 view .LVU3892
 12631 002a 03B0     		add	sp, sp, #12
 12632              		.cfi_remember_state
 12633              		.cfi_def_cfa_offset 12
 12634              		@ sp needed
 12635 002c BDE83040 		pop	{r4, r5, lr}
 12636              		.cfi_restore 14
 12637              		.cfi_restore 5
 12638              		.cfi_restore 4
 12639              		.cfi_def_cfa_offset 0
 12640              	.LVL1070:
ARM GAS  /tmp/ccGwaFaD.s 			page 344


2969:src/keys.c    ****  }
 12641              		.loc 1 2969 4 view .LVU3893
 12642 0030 FFF7FEBF 		b	process_keycode
 12643              	.LVL1071:
 12644              	.L1222:
 12645              		.cfi_restore_state
2970:src/keys.c    ****  
 12646              		.loc 1 2970 2 view .LVU3894
 12647 0034 03B0     		add	sp, sp, #12
 12648              		.cfi_remember_state
 12649              		.cfi_def_cfa_offset 12
 12650              		@ sp needed
 12651 0036 30BD     		pop	{r4, r5, pc}
 12652              	.LVL1072:
 12653              	.L1230:
 12654              		.cfi_restore_state
2965:src/keys.c    ****      set_shift(SHIFT_N);
 12655              		.loc 1 2965 6 is_stmt 1 view .LVU3895
2965:src/keys.c    ****      set_shift(SHIFT_N);
 12656              		.loc 1 2965 16 is_stmt 0 view .LVU3896
 12657 0038 154B     		ldr	r3, .L1231+4
 12658 003a 1D60     		str	r5, [r3]
2966:src/keys.c    ****    }
 12659              		.loc 1 2966 6 is_stmt 1 view .LVU3897
 12660              	.LVL1073:
 12661              	.LBB1351:
 12662              	.LBI1351:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12663              		.loc 1 94 20 view .LVU3898
 12664              	.LBB1352:
  95:src/keys.c    **** 	State2.shifts = shift;
 12665              		.loc 1 95 2 view .LVU3899
 12666              	.LBB1353:
 12667              	.LBI1353:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12668              		.loc 1 86 13 view .LVU3900
 12669              	.LBB1354:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12670              		.loc 1 87 2 view .LVU3901
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12671              		.loc 1 87 18 is_stmt 0 view .LVU3902
 12672 003c FFF7FEFF 		bl	shift_down
 12673              	.LVL1074:
  88:src/keys.c    **** }
 12674              		.loc 1 88 2 is_stmt 1 view .LVU3903
 12675              	.LBE1354:
 12676              	.LBE1353:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12677              		.loc 1 96 2 view .LVU3904
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12678              		.loc 1 96 16 is_stmt 0 view .LVU3905
 12679 0040 124B     		ldr	r3, .L1231
 12680 0042 0022     		movs	r2, #0
 12681              	.LBE1352:
 12682              	.LBE1351:
2969:src/keys.c    ****  }
 12683              		.loc 1 2969 4 view .LVU3906
ARM GAS  /tmp/ccGwaFaD.s 			page 345


 12684 0044 2046     		mov	r0, r4
 12685              	.LBB1356:
 12686              	.LBB1355:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12687              		.loc 1 96 16 view .LVU3907
 12688 0046 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 12689              		.loc 1 98 2 is_stmt 1 view .LVU3908
 12690              	.LVL1075:
  98:src/keys.c    **** }
 12691              		.loc 1 98 2 is_stmt 0 view .LVU3909
 12692              	.LBE1355:
 12693              	.LBE1356:
2969:src/keys.c    ****  }
 12694              		.loc 1 2969 4 is_stmt 1 view .LVU3910
2970:src/keys.c    ****  
 12695              		.loc 1 2970 2 is_stmt 0 view .LVU3911
 12696 0048 03B0     		add	sp, sp, #12
 12697              		.cfi_remember_state
 12698              		.cfi_def_cfa_offset 12
 12699              		@ sp needed
 12700 004a BDE83040 		pop	{r4, r5, lr}
 12701              		.cfi_restore 14
 12702              		.cfi_restore 5
 12703              		.cfi_restore 4
 12704              		.cfi_def_cfa_offset 0
 12705              	.LVL1076:
2969:src/keys.c    ****  }
 12706              		.loc 1 2969 4 view .LVU3912
 12707 004e FFF7FEBF 		b	process_keycode
 12708              	.LVL1077:
 12709              	.L1229:
 12710              		.cfi_restore_state
2956:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12711              		.loc 1 2956 6 is_stmt 1 view .LVU3913
 12712 0052 104B     		ldr	r3, .L1231+8
 12713 0054 41F23010 		movw	r0, #4400
 12714 0058 9847     		blx	r3
 12715              	.LVL1078:
2956:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12716              		.loc 1 2956 31 view .LVU3914
 12717 005a 0A20     		movs	r0, #10
 12718 005c 0E4B     		ldr	r3, .L1231+12
 12719 005e 9847     		blx	r3
 12720              	.LVL1079:
2956:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12721              		.loc 1 2956 46 view .LVU3915
 12722 0060 0E4B     		ldr	r3, .L1231+16
 12723 0062 9847     		blx	r3
 12724              	.LVL1080:
2957:src/keys.c    ****        // Was error just wait for confirmation
 12725              		.loc 1 2957 6 view .LVU3916
2957:src/keys.c    ****        // Was error just wait for confirmation
 12726              		.loc 1 2957 11 is_stmt 0 view .LVU3917
 12727 0064 0E4B     		ldr	r3, .L1231+20
 12728 0066 0120     		movs	r0, #1
 12729 0068 9847     		blx	r3
ARM GAS  /tmp/ccGwaFaD.s 			page 346


 12730              	.LVL1081:
2957:src/keys.c    ****        // Was error just wait for confirmation
 12731              		.loc 1 2957 9 view .LVU3918
 12732 006a 0228     		cmp	r0, #2
 12733 006c 01D1     		bne	.L1225
2959:src/keys.c    ****      }
 12734              		.loc 1 2959 8 is_stmt 1 view .LVU3919
 12735 006e 0D4B     		ldr	r3, .L1231+24
 12736 0070 9847     		blx	r3
 12737              	.LVL1082:
 12738              	.L1225:
2961:src/keys.c    ****      return;
 12739              		.loc 1 2961 6 view .LVU3920
 12740 0072 084B     		ldr	r3, .L1231+8
 12741 0074 42F26020 		movw	r0, #8800
 12742 0078 9847     		blx	r3
 12743              	.LVL1083:
2961:src/keys.c    ****      return;
 12744              		.loc 1 2961 31 view .LVU3921
 12745 007a 074B     		ldr	r3, .L1231+12
 12746 007c 0A20     		movs	r0, #10
 12747 007e 9847     		blx	r3
 12748              	.LVL1084:
2961:src/keys.c    ****      return;
 12749              		.loc 1 2961 46 view .LVU3922
 12750 0080 064B     		ldr	r3, .L1231+16
2970:src/keys.c    ****  
 12751              		.loc 1 2970 2 is_stmt 0 view .LVU3923
 12752 0082 03B0     		add	sp, sp, #12
 12753              		.cfi_def_cfa_offset 12
 12754              		@ sp needed
 12755 0084 BDE83040 		pop	{r4, r5, lr}
 12756              		.cfi_restore 14
 12757              		.cfi_restore 5
 12758              		.cfi_restore 4
 12759              		.cfi_def_cfa_offset 0
 12760              	.LVL1085:
2961:src/keys.c    ****      return;
 12761              		.loc 1 2961 46 view .LVU3924
 12762 0088 1847     		bx	r3	@ indirect register sibling call
 12763              	.LVL1086:
 12764              	.L1232:
 12765 008a 00BF     		.align	2
 12766              	.L1231:
 12767 008c 00000000 		.word	StateWhileOn
 12768 0090 00000000 		.word	nd_opcode
 12769 0094 F5020008 		.word	134218485
 12770 0098 05040008 		.word	134218757
 12771 009c F9020008 		.word	134218489
 12772 00a0 79030008 		.word	134218617
 12773 00a4 99030008 		.word	134218649
 12774              		.cfi_endproc
 12775              	.LFE57:
 12777              		.comm	nd_opcode,4,4
 12778              		.comm	NonProgrammable,4,4
 12779              		.comm	GoFast,4,4
 12780              		.comm	OpCodeDisplayPending,4,4
ARM GAS  /tmp/ccGwaFaD.s 			page 347


 12781              		.comm	OpCode,4,4
 12782              		.comm	WasDataEntry,4,4
 12783              		.section	.bss.was_paused.9650,"aw",%nobits
 12784              		.align	2
 12785              		.set	.LANCHOR12,. + 0
 12788              	was_paused.9650:
 12789 0000 00000000 		.space	4
 12790              		.section	.rodata.alpha_arrows,"a"
 12791              		.align	2
 12794              	alpha_arrows:
 12795 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 12795      03049F5E 
 12795      7F
 12796              		.section	.rodata.alpha_catalogue,"a"
 12797              		.align	2
 12800              	alpha_catalogue:
 12801 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 12801      9EAE0AA2 
 12801      7EB5AE6B 
 12801      AAEEBC
 12802 000f 284AB0   		.ascii	"(J\260"
 12803              		.section	.rodata.alpha_compares,"a"
 12804              		.align	2
 12807              	alpha_compares:
 12808 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 12808      0A3E5B5D 
 12808      7B7D
 12809              		.section	.rodata.alpha_letters,"a"
 12810              		.align	2
 12811              		.set	.LANCHOR3,. + 0
 12814              	alpha_letters:
 12815 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 12815      88C4C5C6 
 12815      C784C8C9 
 12815      CA
 12816 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 12816      CECFD0D1 
 12816      D2D3D415 
 12816      D5
 12817 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 12817      DADBDC01 
 12817      1902DD1A 
 12817      DE
 12818 0027 DF       		.ascii	"\337"
 12819              		.section	.rodata.alpha_letters_lower,"a"
 12820              		.align	2
 12821              		.set	.LANCHOR4,. + 0
 12824              	alpha_letters_lower:
 12825 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 12825      89E4E5E6 
 12825      E785E8E9 
 12825      EA
 12826 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 12826      EEEFF0F1 
 12826      F2F3F416 
 12826      F5
 12827 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
ARM GAS  /tmp/ccGwaFaD.s 			page 348


 12827      FAFBFC01 
 12827      1902FD1A 
 12827      FE
 12828 0027 FF       		.ascii	"\377"
 12829              		.section	.rodata.alpha_subscripts,"a"
 12830              		.align	2
 12833              	alpha_subscripts:
 12834 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 12834      9A80D798 
 12834      BB1486BC 
 12834      F7
 12835 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 12835      BF818B9C 
 12835      8C999D90 
 12835      9B
 12836              		.section	.rodata.alpha_symbols,"a"
 12837              		.align	2
 12840              	alpha_symbols:
 12841 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 12841      222A405F 
 12841      7E25240C 
 12841      1E1F8EAE 
 12841      926023
 12842              		.section	.rodata.alphamap.9184,"a"
 12843              		.align	2
 12844              		.set	.LANCHOR9,. + 0
 12847              	alphamap.9184:
 12848 0000 41004100 		.ascii	"A\000A\000a\240"
 12848      61A0
 12849 0006 42004200 		.ascii	"B\000B\000b\241"
 12849      62A1
 12850 000c 43008200 		.ascii	"C\000\202\000c\242"
 12850      63A2
 12851 0012 44008300 		.ascii	"D\000\203\000d\243"
 12851      64A3
 12852 0018 450D4500 		.ascii	"E\015E\000e\244"
 12852      65A4
 12853 001e 46009400 		.ascii	"F\000\224\000f\264"
 12853      66B4
 12854 0024 47008200 		.ascii	"G\000\202\000g\242"
 12854      67A2
 12855 002a 48005800 		.ascii	"H\000X\000h\265"
 12855      68B5
 12856 0030 49004900 		.ascii	"I\000I\000i\250"
 12856      69A8
 12857 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 12857      6A00
 12858 003c 4B004B00 		.ascii	"K\000K\000k\251"
 12858      6BA9
 12859 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 12859      6CAA
 12860 0048 00004800 		.ascii	"\000\000H\000\000\246"
 12860      00A6
 12861 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 12861      6DAB
 12862 0054 4E084E95 		.ascii	"N\010N\225n\254"
 12862      6EAC
ARM GAS  /tmp/ccGwaFaD.s 			page 349


 12863 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 12863      6FB7
 12864 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 12864      0000
 12865 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 12865      0000
 12866 006c 50378F26 		.ascii	"P7\217&p\257"
 12866      70AF
 12867 0072 5138007C 		.ascii	"Q8\000|q\000"
 12867      7100
 12868 0078 5239520B 		.ascii	"R9R\013r\260"
 12868      72B0
 12869 007e 532F915C 		.ascii	"S/\221\\s\261"
 12869      73B1
 12870 0084 00000021 		.ascii	"\000\000\000!\000\000"
 12870      0000
 12871 008a 54345400 		.ascii	"T4T\000t\262"
 12871      74B2
 12872 0090 55350000 		.ascii	"U5\000\000u\000"
 12872      7500
 12873 0096 56360000 		.ascii	"V6\000\000v\000"
 12873      7600
 12874 009c 571C0000 		.ascii	"W\034\000\000w\000"
 12874      7700
 12875 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 12875      0000
 12876 00a8 58318D00 		.ascii	"X1\215\000x\255"
 12876      78AD
 12877 00ae 59325900 		.ascii	"Y2Y\000y\263"
 12877      79B3
 12878 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 12878      7AA5
 12879 00ba 2D282900 		.ascii	"-()\000\000\000"
 12879      0000
 12880 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 12880      0000
 12881 00c6 3A308720 		.ascii	":0\207 ;\247"
 12881      3BA7
 12882 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 12882      2EB6
 12883 00d2 3F002100 		.ascii	"?\000!\000?\000"
 12883      3F00
 12884 00d8 202B3D00 		.ascii	" +=\000  "
 12884      2020
 12885 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 12885      0000
 12886              		.section	.rodata.amap.9175,"a"
 12887              		.align	2
 12888              		.set	.LANCHOR10,. + 0
 12891              	amap.9175:
 12892 0000 04       		.byte	4
 12893 0001 000D00   		.ascii	"\000\015\000"
 12894 0004 05       		.byte	5
 12895 0005 000E09   		.ascii	"\000\016\011"
 12896 0008 2C       		.byte	44
 12897 0009 000D00   		.ascii	"\000\015\000"
 12898 000c 2D       		.byte	45
ARM GAS  /tmp/ccGwaFaD.s 			page 350


 12899 000d 000E09   		.ascii	"\000\016\011"
 12900 0010 08       		.byte	8
 12901 0011 00000F   		.ascii	"\000\000\017"
 12902 0014 1F       		.byte	31
 12903 0015 00000C   		.ascii	"\000\000\014"
 12904 0018 21       		.byte	33
 12905 0019 00000A   		.ascii	"\000\000\012"
 12906 001c 26       		.byte	38
 12907 001d 00000B   		.ascii	"\000\000\013"
 12908              		.section	.rodata.catalogue,"a"
 12909              		.align	2
 12912              	catalogue:
 12913 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 12913      C15F57E3 
 12913      D8A23B58 
 12913      16BC7D44 
 12913      71010974 
 12914 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 12914      4F569D21 
 12914      489136D5 
 12914      B6695A66 
 12914      4B0E6F17 
 12915 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 12915      69256099 
 12915      76599460 
 12915      1AC6ECC3 
 12915      6B5B144B 
 12916 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
 12916      023ED1A3 
 12916      0B0F28DB 
 12916      2611B30D 
 12916      57
 12917 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 12917      D0942DAE 
 12917      2B1B75FC 
 12917      A027AB82 
 12917      A89F
 12918 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 12918      BAAEEBCA 
 12918      D8A12AD9 
 12918      94919D
 12919 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
 12919      B05F1007 
 12919      15A26FD6 
 12919      D5A9A1
 12920              		.section	.rodata.catalogue_sizes.9448,"a"
 12921              		.align	2
 12922              		.set	.LANCHOR2,. + 0
 12925              	catalogue_sizes.9448:
 12926 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
 12926      363C437E 
 12926      25340E13 
 12926      0A09281A 
 12926      4C4C580E 
 12927              		.section	.rodata.catalogues.9456,"a"
 12928              		.align	2
 12929              		.set	.LANCHOR6,. + 0
ARM GAS  /tmp/ccGwaFaD.s 			page 351


 12932              	catalogues.9456:
 12933 0000 00000000 		.word	0
 12934 0004 00000000 		.word	catalogue
 12935 0008 00000000 		.word	cplx_catalogue
 12936 000c 00000000 		.word	stats_catalogue
 12937 0010 00000000 		.word	prob_catalogue
 12938 0014 00000000 		.word	int_catalogue
 12939 0018 00000000 		.word	prog_catalogue
 12940 001c 00000000 		.word	program_xfcn
 12941 0020 00000000 		.word	test_catalogue
 12942 0024 00000000 		.word	mode_catalogue
 12943 0028 00000000 		.word	alpha_catalogue
 12944 002c 00000000 		.word	alpha_symbols
 12945 0030 00000000 		.word	alpha_compares
 12946 0034 00000000 		.word	alpha_arrows
 12947 0038 00000000 		.word	alpha_letters
 12948 003c 00000000 		.word	alpha_subscripts
 12949 0040 00000000 		.word	0
 12950 0044 00000000 		.word	0
 12951 0048 00000000 		.word	0
 12952 004c 00000000 		.word	sums_catalogue
 12953 0050 00000000 		.word	matrix_catalogue
 12954              		.section	.rodata.cmap.9174,"a"
 12955              		.align	2
 12956              		.set	.LANCHOR11,. + 0
 12959              	cmap.9174:
 12960 0000 04       		.byte	4
 12961 0001 120012   		.ascii	"\022\000\022"
 12962 0004 05       		.byte	5
 12963 0005 090909   		.ascii	"\011\011\011"
 12964 0008 06       		.byte	6
 12965 0009 151515   		.ascii	"\025\025\025"
 12966 000c 0C       		.byte	12
 12967 000d 100011   		.ascii	"\020\000\021"
 12968 0010 19       		.byte	25
 12969 0011 040004   		.ascii	"\004\000\004"
 12970 0014 1A       		.byte	26
 12971 0015 030003   		.ascii	"\003\000\003"
 12972 0018 1B       		.byte	27
 12973 0019 130013   		.ascii	"\023\000\023"
 12974 001c 1C       		.byte	28
 12975 001d 140014   		.ascii	"\024\000\024"
 12976 0020 1E       		.byte	30
 12977 0021 171717   		.ascii	"\027\027\027"
 12978 0024 1F       		.byte	31
 12979 0025 080808   		.ascii	"\010\010\010"
 12980 0028 20       		.byte	32
 12981 0029 060606   		.ascii	"\006\006\006"
 12982 002c 21       		.byte	33
 12983 002d 010502   		.ascii	"\001\005\002"
 12984              		.section	.rodata.conv_catalogue,"a"
 12985              		.align	2
 12986              		.set	.LANCHOR5,. + 0
 12989              	conv_catalogue:
 12990 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 12990      2B2DDD37 
 12990      27393133 
ARM GAS  /tmp/ccGwaFaD.s 			page 352


 12990      111605DC 
 12990      DE19
 12991 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 12991      0D0F8D08 
 12991      8F0A2A2C 
 12991      47434517 
 12991      3F30
 12992 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 12992      02062622 
 12992      20282435 
 12992      2F012310 
 12992      0C0E2112 
 12993 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 12993      1E292E09 
 12993      36383E3A 
 12993      3C4025DF 
 12993      3D8B8E03 
 12994 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 12994      4A484642 
 12994      441F
 12995              		.section	.rodata.conv_mapping.9495,"a"
 12996              		.align	2
 12997              		.set	.LANCHOR8,. + 0
 13000              	conv_mapping.9495:
 13001 0000 8502     		.short	645
 13002 0002 8402     		.short	644
 13003 0004 8602     		.short	646
 13004 0006 8702     		.short	647
 13005 0008 8202     		.short	642
 13006 000a 8302     		.short	643
 13007 000c 3202     		.short	562
 13008 000e 3302     		.short	563
 13009 0010 3402     		.short	564
 13010 0012 3502     		.short	565
 13011 0014 3602     		.short	566
 13012 0016 3702     		.short	567
 13013              		.section	.rodata.cplx_catalogue,"a"
 13014              		.align	2
 13017              	cplx_catalogue:
 13018 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 13018      013BCEE1 
 13018      0DDA785F 
 13018      57DA6676 
 13018      66E7E5CF 
 13019 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
 13019      A2EB09B5 
 13019      F87500
 13020              		.section	.rodata.disp.9311,"a"
 13021              		.align	2
 13022              		.set	.LANCHOR15,. + 0
 13025              	disp.9311:
 13026 0000 03       		.byte	3
 13027 0001 02       		.byte	2
 13028 0002 05       		.byte	5
 13029 0003 04       		.byte	4
 13030              		.section	.rodata.int_catalogue,"a"
 13031              		.align	2
ARM GAS  /tmp/ccGwaFaD.s 			page 353


 13034              	int_catalogue:
 13035 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 13035      F53D9BE2 
 13035      59BD10AF 
 13035      6434F569 
 13035      D926A094 
 13036 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 13036      965C9946 
 13036      B1716ECC 
 13036      36B495BB 
 13036      6EF3DE
 13037 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 13037      A0FBBC6F 
 13037      2C3D840D 
 13037      4CA42DAE 
 13037      2B1B7AE0 
 13038 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
 13038      E6BAAEEB 
 13038      CAD8AB49 
 13038      100719
 13039 004a C7       		.ascii	"\307"
 13040              		.section	.rodata.linear_key_map.9145,"a"
 13041              		.align	2
 13042              		.set	.LANCHOR1,. + 0
 13045              	linear_key_map.9145:
 13046 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 13046      04050607 
 13046      08090A0B 
 13046      0C
 13047 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 13047      00111213 
 13047      14150016 
 13047      17
 13048 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 13048      1B1C1D1E 
 13048      1F002021 
 13048      22232425 
 13048      25252525 
 13049 002e 25       		.ascii	"%"
 13050              		.section	.rodata.linear_key_map.9149,"a"
 13051              		.align	2
 13052              		.set	.LANCHOR18,. + 0
 13055              	linear_key_map.9149:
 13056 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 13056      04050607 
 13056      08222222 
 13056      090A0B
 13057 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 13057      0F101112 
 13057      00131415 
 13057      16
 13058 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 13058      1A1B1C00 
 13058      1D1E1F20 
 13058      21222222 
 13059 002c 040522   		.ascii	"\004\005\""
 13060              		.section	.rodata.map.9161,"a"
ARM GAS  /tmp/ccGwaFaD.s 			page 354


 13061              		.align	2
 13062              		.set	.LANCHOR0,. + 0
 13065              	map.9161:
 13066 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 13066      FF7F7F7F 
 13066      6D6E6F6C 
 13066      FFFFFFFF 
 13067 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 13067      097F7FE7 
 13067      05067F7F 
 13067      E4
 13068 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 13068      00F07F7F 
 13068      FFFFFFFF 
 13068      FF
 13069 002a FF       		.ascii	"\377"
 13070              		.section	.rodata.matrix_catalogue,"a"
 13071              		.align	2
 13074              	matrix_catalogue:
 13075 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 13075      D835DC23 
 13075      6D856E58 
 13075      66E1C16E 
 13075      98A631C3 
 13076 0017 1C       		.ascii	"\034"
 13077              		.section	.rodata.mode_catalogue,"a"
 13078              		.align	2
 13081              	mode_catalogue:
 13082 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 13082      8BBEC663 
 13082      A8E91F88 
 13082      01FC7CB8 
 13083 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 13083      2449C26C 
 13083      62194932 
 13083      489A1930 
 13083      821083
 13084 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 13084      87320A63 
 13084      10C7324A 
 13084      7314C623 
 13084      8CE0E039 
 13085 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 13085      BB0F33C8 
 13085      99
 13086              		.section	.rodata.op_map.9228,"a"
 13087              		.align	2
 13088              		.set	.LANCHOR22,. + 0
 13091              	op_map.9228:
 13092 0000 1500     		.short	21
 13093 0002 0B02     		.short	523
 13094 0004 0003     		.short	768
 13095 0006 0A02     		.short	522
 13096 0008 1300     		.short	19
 13097 000a 1400     		.short	20
 13098 000c 0300     		.short	3
 13099 000e 0A00     		.short	10
ARM GAS  /tmp/ccGwaFaD.s 			page 355


 13100 0010 0701     		.short	263
 13101 0012 0000     		.short	0
 13102 0014 6531     		.short	12645
 13103 0016 0300     		.short	3
 13104 0018 0200     		.short	2
 13105 001a 0100     		.short	1
 13106 001c 4400     		.short	68
 13107 001e 0C00     		.short	12
 13108 0020 0D00     		.short	13
 13109 0022 0E00     		.short	14
 13110 0024 0403     		.short	772
 13111 0026 2F00     		.short	47
 13112 0028 0900     		.short	9
 13113 002a 0A00     		.short	10
 13114 002c 0B00     		.short	11
 13115 002e 0303     		.short	771
 13116 0030 2E00     		.short	46
 13117 0032 0600     		.short	6
 13118 0034 0700     		.short	7
 13119 0036 0800     		.short	8
 13120 0038 0203     		.short	770
 13121 003a 3300     		.short	51
 13122 003c 0500     		.short	5
 13123 003e 0400     		.short	4
 13124 0040 3B01     		.short	315
 13125 0042 0103     		.short	769
 13126 0044 0001     		.short	256
 13127              		.section	.rodata.op_map.9251,"a"
 13128              		.align	2
 13129              		.set	.LANCHOR19,. + 0
 13132              	op_map.9251:
 13133 0000 0100     		.short	1
 13134 0002 0000     		.short	0
 13135 0004 20F2     		.short	-3552
 13136 0006 23F2     		.short	-3549
 13137 0008 21F2     		.short	-3551
 13138 000a 24F2     		.short	-3548
 13139 000c 22F2     		.short	-3550
 13140 000e 25F2     		.short	-3547
 13141 0010 47F1     		.short	-3769
 13142 0012 46F1     		.short	-3770
 13143 0014 4E01     		.short	334
 13144 0016 4D01     		.short	333
 13145 0018 5C01     		.short	348
 13146 001a 35F1     		.short	-3787
 13147 001c 5B01     		.short	347
 13148 001e 36F1     		.short	-3786
 13149 0020 3301     		.short	307
 13150 0022 37F1     		.short	-3785
 13151 0024 3300     		.short	51
 13152 0026 0C01     		.short	268
 13153 0028 2B00     		.short	43
 13154 002a 2C00     		.short	44
 13155 002c 028B     		.short	-29950
 13156 002e 088B     		.short	-29944
 13157 0030 0A8B     		.short	-29942
 13158 0032 108B     		.short	-29936
ARM GAS  /tmp/ccGwaFaD.s 			page 356


 13159 0034 4301     		.short	323
 13160 0036 3D01     		.short	317
 13161 0038 0902     		.short	521
 13162 003a 0802     		.short	520
 13163 003c 1002     		.short	528
 13164 003e 0D02     		.short	525
 13165 0040 0F02     		.short	527
 13166 0042 0E02     		.short	526
 13167 0044 0003     		.short	768
 13168 0046 0803     		.short	776
 13169 0048 0BF2     		.short	-3573
 13170 004a 1603     		.short	790
 13171 004c 1203     		.short	786
 13172 004e 1303     		.short	787
 13173 0050 3DF2     		.short	-3523
 13174 0052 3EF2     		.short	-3522
 13175 0054 24F1     		.short	-3804
 13176 0056 1EF1     		.short	-3810
 13177 0058 75F2     		.short	-3467
 13178 005a 27F1     		.short	-3801
 13179 005c 0A02     		.short	522
 13180 005e 1602     		.short	534
 13181 0060 5100     		.short	81
 13182 0062 5200     		.short	82
 13183 0064 0000     		.short	0
 13184 0066 0100     		.short	1
 13185 0068 48F0     		.short	-4024
 13186 006a 4BF0     		.short	-4021
 13187 006c 47F0     		.short	-4025
 13188 006e 46F0     		.short	-4026
 13189 0070 77F2     		.short	-3465
 13190 0072 78F2     		.short	-3464
 13191 0074 3300     		.short	51
 13192 0076 3300     		.short	51
 13193 0078 0502     		.short	517
 13194 007a 0602     		.short	518
 13195 007c 0402     		.short	516
 13196 007e 0002     		.short	512
 13197 0080 4200     		.short	66
 13198 0082 3801     		.short	312
 13199 0084 3A00     		.short	58
 13200 0086 3B00     		.short	59
 13201 0088 0001     		.short	256
 13202 008a 0001     		.short	256
 13203              		.section	.rodata.op_map.9274,"a"
 13204              		.align	2
 13205              		.set	.LANCHOR21,. + 0
 13208              	op_map.9274:
 13209 0000 4C80     		.short	-32692
 13210 0002 4D80     		.short	-32691
 13211 0004 4E80     		.short	-32690
 13212 0006 4F80     		.short	-32689
 13213 0008 3300     		.short	51
 13214 000a 3300     		.short	51
 13215 000c 3300     		.short	51
 13216 000e 2180     		.short	-32735
 13217 0010 0801     		.short	264
ARM GAS  /tmp/ccGwaFaD.s 			page 357


 13218 0012 8780     		.short	-32633
 13219 0014 1180     		.short	-32751
 13220 0016 7C02     		.short	636
 13221 0018 5560     		.short	24661
 13222 001a 3F01     		.short	319
 13223 001c 4580     		.short	-32699
 13224 001e 1C03     		.short	796
 13225 0020 1D03     		.short	797
 13226 0022 1E03     		.short	798
 13227 0024 0603     		.short	774
 13228 0026 2F02     		.short	559
 13229 0028 3300     		.short	51
 13230 002a 3300     		.short	51
 13231 002c 3300     		.short	51
 13232 002e 3300     		.short	51
 13233 0030 3300     		.short	51
 13234 0032 3300     		.short	51
 13235 0034 3300     		.short	51
 13236 0036 3300     		.short	51
 13237 0038 1640     		.short	16406
 13238 003a 0201     		.short	258
 13239 003c 6D80     		.short	-32659
 13240 003e 5001     		.short	336
 13241 0040 3300     		.short	51
 13242 0042 1540     		.short	16405
 13243 0044 0001     		.short	256
 13244              		.section	.rodata.op_map.9284,"a"
 13245              		.align	2
 13246              		.set	.LANCHOR17,. + 0
 13249              	op_map.9284:
 13250 0000 0100     		.short	1
 13251 0002 0100     		.short	1
 13252 0004 0000     		.short	0
 13253 0006 0000     		.short	0
 13254 0008 0B05     		.short	1291
 13255 000a 2005     		.short	1312
 13256 000c 2305     		.short	1315
 13257 000e 3300     		.short	51
 13258 0010 0006     		.short	1536
 13259 0012 2105     		.short	1313
 13260 0014 2405     		.short	1316
 13261 0016 3300     		.short	51
 13262 0018 0A05     		.short	1290
 13263 001a 2205     		.short	1314
 13264 001c 2505     		.short	1317
 13265 001e 3300     		.short	51
 13266 0020 3300     		.short	51
 13267 0022 4701     		.short	327
 13268 0024 4601     		.short	326
 13269 0026 3300     		.short	51
 13270 0028 3300     		.short	51
 13271 002a 3300     		.short	51
 13272 002c 3300     		.short	51
 13273 002e 3300     		.short	51
 13274 0030 15FF     		.short	-235
 13275 0032 3300     		.short	51
 13276 0034 3300     		.short	51
ARM GAS  /tmp/ccGwaFaD.s 			page 358


 13277 0036 3300     		.short	51
 13278 0038 1AFF     		.short	-230
 13279 003a 3300     		.short	51
 13280 003c 3300     		.short	51
 13281 003e 8CFF     		.short	-116
 13282 0040 0901     		.short	265
 13283 0042 3300     		.short	51
 13284 0044 3300     		.short	51
 13285 0046 0A01     		.short	266
 13286 0048 0B01     		.short	267
 13287 004a 3300     		.short	51
 13288 004c 0D01     		.short	269
 13289 004e 0D01     		.short	269
 13290 0050 663F     		.short	16230
 13291 0052 3300     		.short	51
 13292 0054 3300     		.short	51
 13293 0056 1FFF     		.short	-225
 13294 0058 3805     		.short	1336
 13295 005a 3300     		.short	51
 13296 005c 3300     		.short	51
 13297 005e 3905     		.short	1337
 13298 0060 5521     		.short	8533
 13299 0062 3300     		.short	51
 13300 0064 3300     		.short	51
 13301 0066 5521     		.short	8533
 13302 0068 3300     		.short	51
 13303 006a 3300     		.short	51
 13304 006c 3300     		.short	51
 13305 006e 3300     		.short	51
 13306 0070 3300     		.short	51
 13307 0072 0905     		.short	1289
 13308 0074 0805     		.short	1288
 13309 0076 3300     		.short	51
 13310 0078 07A8     		.short	-22521
 13311 007a 1005     		.short	1296
 13312 007c 0D05     		.short	1293
 13313 007e 3300     		.short	51
 13314 0080 08A8     		.short	-22520
 13315 0082 0F05     		.short	1295
 13316 0084 0E05     		.short	1294
 13317 0086 3300     		.short	51
 13318 0088 09A8     		.short	-22519
 13319 008a 0006     		.short	1536
 13320 008c 0806     		.short	1544
 13321 008e 3300     		.short	51
 13322 0090 0406     		.short	1540
 13323 0092 0B05     		.short	1291
 13324 0094 1606     		.short	1558
 13325 0096 3300     		.short	51
 13326 0098 3300     		.short	51
 13327 009a 1206     		.short	1554
 13328 009c 1306     		.short	1555
 13329 009e 2F05     		.short	1327
 13330 00a0 04A8     		.short	-22524
 13331 00a2 3300     		.short	51
 13332 00a4 3300     		.short	51
 13333 00a6 3300     		.short	51
ARM GAS  /tmp/ccGwaFaD.s 			page 359


 13334 00a8 05A8     		.short	-22523
 13335 00aa 3300     		.short	51
 13336 00ac 3300     		.short	51
 13337 00ae 3300     		.short	51
 13338 00b0 06A8     		.short	-22522
 13339 00b2 3300     		.short	51
 13340 00b4 3300     		.short	51
 13341 00b6 3300     		.short	51
 13342 00b8 0306     		.short	1539
 13343 00ba 0A05     		.short	1290
 13344 00bc 1605     		.short	1302
 13345 00be 1605     		.short	1302
 13346 00c0 3300     		.short	51
 13347 00c2 3300     		.short	51
 13348 00c4 3300     		.short	51
 13349 00c6 3300     		.short	51
 13350 00c8 01A8     		.short	-22527
 13351 00ca 0000     		.short	0
 13352 00cc 0100     		.short	1
 13353 00ce 3300     		.short	51
 13354 00d0 02A8     		.short	-22526
 13355 00d2 3300     		.short	51
 13356 00d4 3300     		.short	51
 13357 00d6 3300     		.short	51
 13358 00d8 03A8     		.short	-22525
 13359 00da 3300     		.short	51
 13360 00dc 3300     		.short	51
 13361 00de 3300     		.short	51
 13362 00e0 0206     		.short	1538
 13363 00e2 3300     		.short	51
 13364 00e4 3300     		.short	51
 13365 00e6 3300     		.short	51
 13366 00e8 3300     		.short	51
 13367 00ea 3300     		.short	51
 13368 00ec 3300     		.short	51
 13369 00ee 0201     		.short	258
 13370 00f0 00A8     		.short	-22528
 13371 00f2 0505     		.short	1285
 13372 00f4 0605     		.short	1286
 13373 00f6 3300     		.short	51
 13374 00f8 B801     		.short	440
 13375 00fa 0405     		.short	1284
 13376 00fc 0005     		.short	1280
 13377 00fe 3300     		.short	51
 13378 0100 3300     		.short	51
 13379 0102 3300     		.short	51
 13380 0104 3300     		.short	51
 13381 0106 3300     		.short	51
 13382 0108 0106     		.short	1537
 13383 010a 3300     		.short	51
 13384 010c 3300     		.short	51
 13385 010e 3300     		.short	51
 13386 0110 0001     		.short	256
 13387 0112 0001     		.short	256
 13388 0114 0001     		.short	256
 13389 0116 0001     		.short	256
 13390              		.section	.rodata.op_map.9296,"a"
ARM GAS  /tmp/ccGwaFaD.s 			page 360


 13391              		.align	2
 13392              		.set	.LANCHOR13,. + 0
 13395              	op_map.9296:
 13396 0000 2A27     		.ascii	"*'"
 13397 0002 2B28     		.ascii	"+("
 13398 0004 2C29     		.ascii	",)"
 13399              		.section	.rodata.op_map.9310,"a"
 13400              		.align	2
 13401              		.set	.LANCHOR14,. + 0
 13404              	op_map.9310:
 13405 0000 1A02     		.short	538
 13406 0002 7B02     		.short	635
 13407 0004 1B02     		.short	539
 13408 0006 7A02     		.short	634
 13409 0008 1C02     		.short	540
 13410 000a 3300     		.short	51
 13411              		.section	.rodata.op_map2.9252,"a"
 13412              		.align	2
 13413              		.set	.LANCHOR20,. + 0
 13416              	op_map2.9252:
 13417 0000 3300     		.short	51
 13418 0002 3300     		.short	51
 13419 0004 0003     		.short	768
 13420 0006 0A02     		.short	522
 13421              		.section	.rodata.opcode_breaks,"a"
 13422              		.align	2
 13423              		.set	.LANCHOR7,. + 0
 13426              	opcode_breaks:
 13427 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 13427      0C992F
 13428              		.section	.rodata.prob_catalogue,"a"
 13429              		.align	2
 13432              	prob_catalogue:
 13433 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 13433      44561575 
 13433      9D595013 
 13433      F57D414E 
 13433      55D4E93B 
 13434 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 13434      15955355 
 13434      55459956 
 13434      53D4E591 
 13434      50525485 
 13435 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 13435      85474D95 
 13435      C4DD384F 
 13435      53C5793E 
 13435      569304D1 
 13436 0043 B0       		.ascii	"\260"
 13437              		.section	.rodata.prog_catalogue,"a"
 13438              		.align	2
 13441              	prog_catalogue:
 13442 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 13442      791D4781 
 13442      C8742A31 
 13442      9B4042B3 
 13442      2CE1BA92 
ARM GAS  /tmp/ccGwaFaD.s 			page 361


 13443 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
 13443      DA332D1B 
 13443      36CFC28E 
 13443      2390E738 
 13443      CE8C
 13444 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 13444      B0D0DC39 
 13444      47039B09 
 13444      ACCDF1D8 
 13444      CD
 13445 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 13445      B22C0E1B 
 13445      18D20DEB 
 13445      2302A4
 13446 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 13446      CBA8AA3C 
 13446      00AE2B6F 
 13446      FC58
 13447              		.section	.rodata.program_xfcn,"a"
 13448              		.align	2
 13451              	program_xfcn:
 13452 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 13452      F33057D5 
 13452      FAF53D8A 
 13452      23B5816B 
 13452      DBE259BD 
 13453 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 13453      425D12E4 
 13453      BD8341AF 
 13453      6434F569 
 13453      D21489
 13454 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
 13454      95A664B0 
 13454      E6F1756A 
 13454      0946D105 
 13454      7019A4
 13455 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 13455      A65D965C 
 13455      994601AC 
 13455      5C5BB30D 
 13455      AD
 13456 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 13456      95BB6EF3 
 13456      DEEEBC30 
 13456      5BD301C0 
 13456      8683
 13457 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 13457      2BCB0F28 
 13457      DB2611B3 
 13457      0D573329 
 13457      0841D0
 13458 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 13458      1B75FCA0 
 13458      27AB82A8 
 13458      9FADEB5A 
 13458      E6
 13459 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
ARM GAS  /tmp/ccGwaFaD.s 			page 362


 13459      D8A12AD9 
 13459      94919D67 
 13459      99B671
 13460 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 13460      19C5689B 
 13460      F5B56A68 
 13460      5C70
 13461              		.section	.rodata.smap.9176,"a"
 13462              		.align	2
 13463              		.set	.LANCHOR16,. + 0
 13466              	smap.9176:
 13467 0000 00010002 		.ascii	"\000\001\000\002"
 13468              		.section	.rodata.stats_catalogue,"a"
 13469              		.align	2
 13472              	stats_catalogue:
 13473 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 13473      5D17C971 
 13473      58611685 
 13473      95A05417 
 13473      85
 13474 0011 514C575A 		.ascii	"QLWZ\200"
 13474      80
 13475              		.section	.rodata.sums_catalogue,"a"
 13476              		.align	2
 13479              	sums_catalogue:
 13480 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 13480      4A1384C1 
 13480      20451104 
 13480      F11C4911 
 13480      8500
 13481              		.section	.rodata.test_catalogue,"a"
 13482              		.align	2
 13485              	test_catalogue:
 13486 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 13486      EB2FCBDB 
 13486      96E9BAEE 
 13486      A2F2E4B9 
 13487 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 13487      2EEFEB4C 
 13487      9D368B82 
 13487      F8BA350B 
 13488 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 13488      2C1354D6 
 13488      AFEC3B08 
 13488      B73C40
 13489              		.text
 13490              	.Letext0:
 13491              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 13492              		.file 3 "dmcp/dmcp.h"
 13493              		.file 4 "src/decNumber/decContext.h"
 13494              		.file 5 "src/decNumber/decNumber.h"
 13495              		.file 6 "src/decNumber/decimal64.h"
 13496              		.file 7 "src/decNumber/decimal128.h"
 13497              		.file 8 "src/xeq.h"
 13498              		.file 9 "src/data.h"
 13499              		.file 10 "src/keys.h"
 13500              		.file 11 "src/display.h"
ARM GAS  /tmp/ccGwaFaD.s 			page 363


 13501              		.file 12 "src/consts.h"
 13502              		.file 13 "src/storage.h"
 13503              		.file 14 "src/stats.h"
 13504              		.file 15 "src/catalogues.h"
 13505              		.file 16 "src/lcd.h"
 13506              		.file 17 "src/int.h"
ARM GAS  /tmp/ccGwaFaD.s 			page 364


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccGwaFaD.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccGwaFaD.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccGwaFaD.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccGwaFaD.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccGwaFaD.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccGwaFaD.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccGwaFaD.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccGwaFaD.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccGwaFaD.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccGwaFaD.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccGwaFaD.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccGwaFaD.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccGwaFaD.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccGwaFaD.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccGwaFaD.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccGwaFaD.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccGwaFaD.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccGwaFaD.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccGwaFaD.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccGwaFaD.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccGwaFaD.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccGwaFaD.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccGwaFaD.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccGwaFaD.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/ccGwaFaD.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccGwaFaD.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/ccGwaFaD.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/ccGwaFaD.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccGwaFaD.s:1094   .text.arg_eval:0000000000000074 $d
     /tmp/ccGwaFaD.s:1101   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccGwaFaD.s:1108   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccGwaFaD.s:1166   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccGwaFaD.s:1171   .text.arg_digit:0000000000000000 $t
     /tmp/ccGwaFaD.s:1178   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccGwaFaD.s:1403   .text.arg_digit:00000000000000c8 $d
     /tmp/ccGwaFaD.s:1411   .text.intltr:0000000000000000 $t
     /tmp/ccGwaFaD.s:1418   .text.intltr:0000000000000000 intltr
     /tmp/ccGwaFaD.s:1481   .text.intltr:0000000000000030 $d
     /tmp/ccGwaFaD.s:1487   .text.set_window:0000000000000000 $t
     /tmp/ccGwaFaD.s:1494   .text.set_window:0000000000000000 set_window
     /tmp/ccGwaFaD.s:1641   .text.set_window:000000000000008c $d
     /tmp/ccGwaFaD.s:1648   .text.arg_storcl:0000000000000000 $t
     /tmp/ccGwaFaD.s:1655   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccGwaFaD.s:1771   .text.arg_storcl:0000000000000040 $d
     /tmp/ccGwaFaD.s:1776   .text.process_arg:0000000000000000 $t
     /tmp/ccGwaFaD.s:1783   .text.process_arg:0000000000000000 process_arg
     /tmp/ccGwaFaD.s:1993   .text.process_arg:0000000000000092 $d
     /tmp/ccGwaFaD.s:2040   .text.process_arg:00000000000000ee $t
     /tmp/ccGwaFaD.s:2071   .text.process_arg:0000000000000114 $d
     /tmp/ccGwaFaD.s:2525   .text.process_arg:00000000000002ac $d
     /tmp/ccGwaFaD.s:2537   .text.process_arg:00000000000002c0 $t
     /tmp/ccGwaFaD.s:2956   .text.process_arg:0000000000000468 $d
     /tmp/ccGwaFaD.s:2961   .text.cur_shift:0000000000000000 $t
     /tmp/ccGwaFaD.s:2969   .text.cur_shift:0000000000000000 cur_shift
ARM GAS  /tmp/ccGwaFaD.s 			page 365


     /tmp/ccGwaFaD.s:2997   .text.cur_shift:0000000000000010 $d
     /tmp/ccGwaFaD.s:3002   .text.reset_shift:0000000000000000 $t
     /tmp/ccGwaFaD.s:3010   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccGwaFaD.s:3068   .text.reset_shift:0000000000000014 $d
     /tmp/ccGwaFaD.s:3073   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccGwaFaD.s:3081   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccGwaFaD.s:3109   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccGwaFaD.s:3114   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccGwaFaD.s:3122   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccGwaFaD.s:3180   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccGwaFaD.s:3185   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccGwaFaD.s:3193   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccGwaFaD.s:3229   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccGwaFaD.s:3235   .text.init_state:0000000000000000 $t
     /tmp/ccGwaFaD.s:3243   .text.init_state:0000000000000000 init_state
     /tmp/ccGwaFaD.s:3349   .text.init_state:000000000000005c $d
     /tmp/ccGwaFaD.s:3355   .text.soft_init_state:0000000000000000 $t
     /tmp/ccGwaFaD.s:3363   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccGwaFaD.s:3458   .text.soft_init_state:0000000000000048 $d
     /tmp/ccGwaFaD.s:3464   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccGwaFaD.s:3472   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccGwaFaD.s:3493   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccGwaFaD.s:3499   .text.current_catalogue:0000000000000000 $t
     /tmp/ccGwaFaD.s:3507   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccGwaFaD.s:3763   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccGwaFaD.s:3773   .text.process_catalogue:0000000000000000 $t
     /tmp/ccGwaFaD.s:3780   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccGwaFaD.s:4109   .text.process_catalogue:00000000000000fe $d
     /tmp/ccGwaFaD.s:4141   .text.process_catalogue:000000000000011e $t
     /tmp/ccGwaFaD.s:4649   .text.process_catalogue:00000000000002dc $d
     /tmp/ccGwaFaD.s:4670   .text.process_catalogue:00000000000002fc $t
     /tmp/ccGwaFaD.s:4700   .text.find_pos:0000000000000000 $t
     /tmp/ccGwaFaD.s:4708   .text.find_pos:0000000000000000 find_pos
     /tmp/ccGwaFaD.s:4881   .text.find_pos:0000000000000080 $d
     /tmp/ccGwaFaD.s:4887   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccGwaFaD.s:4895   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccGwaFaD.s:4927   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccGwaFaD.s:4933   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccGwaFaD.s:4943   .text.process_keycode:0000000000000000 $t
     /tmp/ccGwaFaD.s:4951   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccGwaFaD.s:5472   .text.process_keycode:0000000000000260 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccGwaFaD.s:5491   .text.process_keycode:00000000000002a0 $t
     /tmp/ccGwaFaD.s:5608   .text.process_keycode:000000000000031a $d
     /tmp/ccGwaFaD.s:5655   .text.process_keycode:0000000000000376 $t
     /tmp/ccGwaFaD.s:5863   .text.process_keycode:0000000000000450 $d
     /tmp/ccGwaFaD.s:5873   .text.process_keycode:0000000000000474 $t
     /tmp/ccGwaFaD.s:6177   .text.process_keycode:00000000000005b8 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccGwaFaD.s:6195   .text.process_keycode:00000000000005f4 $t
     /tmp/ccGwaFaD.s:6327   .text.process_keycode:000000000000068e $d
     /tmp/ccGwaFaD.s:6357   .text.process_keycode:00000000000006b0 $d
     /tmp/ccGwaFaD.s:6400   .text.process_keycode:000000000000075c $t
     /tmp/ccGwaFaD.s:6633   .text.process_keycode:0000000000000844 $d
ARM GAS  /tmp/ccGwaFaD.s 			page 366


     /tmp/ccGwaFaD.s:6642   .text.process_keycode:0000000000000868 $t
     /tmp/ccGwaFaD.s:6714   .text.process_keycode:00000000000008ac $d
     /tmp/ccGwaFaD.s:6733   .text.process_keycode:00000000000008d0 $t
     /tmp/ccGwaFaD.s:6741   .text.process_keycode:00000000000008de $d
     /tmp/ccGwaFaD.s:6767   .text.process_keycode:00000000000008f8 $t
     /tmp/ccGwaFaD.s:6816   .text.process_keycode:0000000000000938 $d
     /tmp/ccGwaFaD.s:6820   .text.process_keycode:0000000000000948 $t
     /tmp/ccGwaFaD.s:7833   .text.process_keycode:0000000000000ccc $d
     /tmp/ccGwaFaD.s:7845   .text.process_keycode:0000000000000cf0 $t
     /tmp/ccGwaFaD.s:8572   .text.process_keycode:0000000000000f64 $d
     /tmp/ccGwaFaD.s:8850   .text.process_keycode:0000000000001064 $d
     /tmp/ccGwaFaD.s:8861   .text.process_keycode:0000000000001084 $t
     /tmp/ccGwaFaD.s:8873   .text.process_keycode:00000000000010a0 $d
     /tmp/ccGwaFaD.s:8893   .text.process_keycode:00000000000010f0 $t
     /tmp/ccGwaFaD.s:9092   .text.process_keycode:000000000000118a $d
     /tmp/ccGwaFaD.s:9110   .text.process_keycode:000000000000119c $t
     /tmp/ccGwaFaD.s:9664   .text.process_keycode:0000000000001368 $d
     /tmp/ccGwaFaD.s:9698   .text.process_keycode:00000000000013ac $t
     /tmp/ccGwaFaD.s:9714   .text.process_keycode:00000000000013bc $d
     /tmp/ccGwaFaD.s:9723   .text.process_keycode:00000000000013cc $t
     /tmp/ccGwaFaD.s:9770   .text.process_keycode:00000000000013f4 $d
     /tmp/ccGwaFaD.s:9805   .text.process_keycode:000000000000147c $t
     /tmp/ccGwaFaD.s:10446  .text.process_keycode:0000000000001672 $d
     /tmp/ccGwaFaD.s:10524  .text.process_keycode:00000000000016c0 $d
     /tmp/ccGwaFaD.s:10539  .text.process_keycode:00000000000016e0 $t
     /tmp/ccGwaFaD.s:11108  .text.process_keycode:0000000000001980 $d
     /tmp/ccGwaFaD.s:11150  .text.process_keycode:0000000000001a24 $t
     /tmp/ccGwaFaD.s:11243  .text.process_keycode:0000000000001a8c $d
     /tmp/ccGwaFaD.s:11251  .text.process_keycode:0000000000001a9c $t
     /tmp/ccGwaFaD.s:12078  .text.process_keycode:0000000000001dd4 $d
     /tmp/ccGwaFaD.s:12086  .text.process_keycode:0000000000001ddc $t
     /tmp/ccGwaFaD.s:12541  .text.process_keycode:0000000000001f90 $d
     /tmp/ccGwaFaD.s:12551  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccGwaFaD.s:12559  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccGwaFaD.s:12767  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/ccGwaFaD.s:12784  .bss.was_paused.9650:0000000000000000 $d
     /tmp/ccGwaFaD.s:12788  .bss.was_paused.9650:0000000000000000 was_paused.9650
     /tmp/ccGwaFaD.s:12791  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccGwaFaD.s:12794  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccGwaFaD.s:12797  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:12800  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccGwaFaD.s:12804  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccGwaFaD.s:12807  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccGwaFaD.s:12810  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccGwaFaD.s:12814  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccGwaFaD.s:12820  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccGwaFaD.s:12824  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccGwaFaD.s:12830  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccGwaFaD.s:12833  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccGwaFaD.s:12837  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccGwaFaD.s:12840  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccGwaFaD.s:12843  .rodata.alphamap.9184:0000000000000000 $d
     /tmp/ccGwaFaD.s:12847  .rodata.alphamap.9184:0000000000000000 alphamap.9184
     /tmp/ccGwaFaD.s:12887  .rodata.amap.9175:0000000000000000 $d
     /tmp/ccGwaFaD.s:12891  .rodata.amap.9175:0000000000000000 amap.9175
     /tmp/ccGwaFaD.s:12909  .rodata.catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:12912  .rodata.catalogue:0000000000000000 catalogue
ARM GAS  /tmp/ccGwaFaD.s 			page 367


     /tmp/ccGwaFaD.s:12921  .rodata.catalogue_sizes.9448:0000000000000000 $d
     /tmp/ccGwaFaD.s:12925  .rodata.catalogue_sizes.9448:0000000000000000 catalogue_sizes.9448
     /tmp/ccGwaFaD.s:12928  .rodata.catalogues.9456:0000000000000000 $d
     /tmp/ccGwaFaD.s:12932  .rodata.catalogues.9456:0000000000000000 catalogues.9456
     /tmp/ccGwaFaD.s:13017  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccGwaFaD.s:13472  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccGwaFaD.s:13432  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccGwaFaD.s:13034  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccGwaFaD.s:13441  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccGwaFaD.s:13451  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccGwaFaD.s:13485  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccGwaFaD.s:13081  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccGwaFaD.s:13479  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccGwaFaD.s:13074  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccGwaFaD.s:12955  .rodata.cmap.9174:0000000000000000 $d
     /tmp/ccGwaFaD.s:12959  .rodata.cmap.9174:0000000000000000 cmap.9174
     /tmp/ccGwaFaD.s:12985  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:12989  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccGwaFaD.s:12996  .rodata.conv_mapping.9495:0000000000000000 $d
     /tmp/ccGwaFaD.s:13000  .rodata.conv_mapping.9495:0000000000000000 conv_mapping.9495
     /tmp/ccGwaFaD.s:13014  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:13021  .rodata.disp.9311:0000000000000000 $d
     /tmp/ccGwaFaD.s:13025  .rodata.disp.9311:0000000000000000 disp.9311
     /tmp/ccGwaFaD.s:13031  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:13041  .rodata.linear_key_map.9145:0000000000000000 $d
     /tmp/ccGwaFaD.s:13045  .rodata.linear_key_map.9145:0000000000000000 linear_key_map.9145
     /tmp/ccGwaFaD.s:13051  .rodata.linear_key_map.9149:0000000000000000 $d
     /tmp/ccGwaFaD.s:13055  .rodata.linear_key_map.9149:0000000000000000 linear_key_map.9149
     /tmp/ccGwaFaD.s:13061  .rodata.map.9161:0000000000000000 $d
     /tmp/ccGwaFaD.s:13065  .rodata.map.9161:0000000000000000 map.9161
     /tmp/ccGwaFaD.s:13071  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:13078  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:13087  .rodata.op_map.9228:0000000000000000 $d
     /tmp/ccGwaFaD.s:13091  .rodata.op_map.9228:0000000000000000 op_map.9228
     /tmp/ccGwaFaD.s:13128  .rodata.op_map.9251:0000000000000000 $d
     /tmp/ccGwaFaD.s:13132  .rodata.op_map.9251:0000000000000000 op_map.9251
     /tmp/ccGwaFaD.s:13204  .rodata.op_map.9274:0000000000000000 $d
     /tmp/ccGwaFaD.s:13208  .rodata.op_map.9274:0000000000000000 op_map.9274
     /tmp/ccGwaFaD.s:13245  .rodata.op_map.9284:0000000000000000 $d
     /tmp/ccGwaFaD.s:13249  .rodata.op_map.9284:0000000000000000 op_map.9284
     /tmp/ccGwaFaD.s:13391  .rodata.op_map.9296:0000000000000000 $d
     /tmp/ccGwaFaD.s:13395  .rodata.op_map.9296:0000000000000000 op_map.9296
     /tmp/ccGwaFaD.s:13400  .rodata.op_map.9310:0000000000000000 $d
     /tmp/ccGwaFaD.s:13404  .rodata.op_map.9310:0000000000000000 op_map.9310
     /tmp/ccGwaFaD.s:13412  .rodata.op_map2.9252:0000000000000000 $d
     /tmp/ccGwaFaD.s:13416  .rodata.op_map2.9252:0000000000000000 op_map2.9252
     /tmp/ccGwaFaD.s:13422  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccGwaFaD.s:13426  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccGwaFaD.s:13429  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:13438  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:13448  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccGwaFaD.s:13462  .rodata.smap.9176:0000000000000000 $d
     /tmp/ccGwaFaD.s:13466  .rodata.smap.9176:0000000000000000 smap.9176
     /tmp/ccGwaFaD.s:13469  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:13476  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:13482  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccGwaFaD.s:2075   .text.process_arg:0000000000000117 $d
ARM GAS  /tmp/ccGwaFaD.s 			page 368


     /tmp/ccGwaFaD.s:2075   .text.process_arg:0000000000000118 $t
     /tmp/ccGwaFaD.s:6346   .text.process_keycode:00000000000006a1 $d
     /tmp/ccGwaFaD.s:6346   .text.process_keycode:00000000000006a2 $t
     /tmp/ccGwaFaD.s:8607   .text.process_keycode:0000000000000f87 $d
     /tmp/ccGwaFaD.s:8607   .text.process_keycode:0000000000000f88 $t
     /tmp/ccGwaFaD.s:10487  .text.process_keycode:000000000000169b $d
     /tmp/ccGwaFaD.s:10487  .text.process_keycode:000000000000169c $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
local_regs_rarg
num_arg_digits
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
is_key_pressed
set_pc
set_running_off
xeq_sst_bst
stoprog
clr_dot
finish_RPN
message
find_char
ARM GAS  /tmp/ccGwaFaD.s 			page 369


delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
display_current_menu
find_user_pc
cmdgtocommon
global_regs
local_regs
set_menu
alen

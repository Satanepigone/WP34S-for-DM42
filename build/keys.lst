ARM GAS  /tmp/ccczu93l.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccczu93l.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** unsigned int nd_opcode;
  82:src/keys.c    **** 
  83:src/keys.c    **** /*
  84:src/keys.c    ****  *  Return the shift state
  85:src/keys.c    ****  */
  86:src/keys.c    **** enum shifts cur_shift(void) {
ARM GAS  /tmp/ccczu93l.s 			page 3


  87:src/keys.c    **** 	enum shifts s = shift_down();
  88:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  89:src/keys.c    **** }
  90:src/keys.c    **** 
  91:src/keys.c    **** /*
  92:src/keys.c    ****  *  Set new shift state, return previous state
  93:src/keys.c    ****  */
  94:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  95:src/keys.c    **** 	enum shifts r = cur_shift();
  96:src/keys.c    **** 	State2.shifts = shift;
  97:src/keys.c    **** 	//	State2.alpha_pos = 0;
  98:src/keys.c    **** 	return r;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Clear shift state and return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** enum shifts reset_shift(void) {
 105:src/keys.c    **** 	return set_shift(SHIFT_N);
 106:src/keys.c    **** }
 107:src/keys.c    **** 
 108:src/keys.c    **** /*
 109:src/keys.c    ****  *  Toggle shift state
 110:src/keys.c    ****  */
 111:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 112:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 113:src/keys.c    **** }
 114:src/keys.c    **** 
 115:src/keys.c    **** 
 116:src/keys.c    **** /*
 117:src/keys.c    ****  * Mapping from the key code to a linear index
 118:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 119:src/keys.c    ****  */
 120:src/keys.c    **** #ifdef DM42
 121:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 122:src/keys.c    **** {
 123:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 124:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 125:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 126:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 127:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 128:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 129:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 130:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 131:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 132:src/keys.c    **** 	};
 133:src/keys.c    **** 	return linear_key_map[c];
 134:src/keys.c    **** }
 135:src/keys.c    **** 
 136:src/keys.c    **** static int keycode_to_linear(const keycode c)
 137:src/keys.c    **** {
 138:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 139:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 140:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 141:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 142:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 143:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
ARM GAS  /tmp/ccczu93l.s 			page 4


 144:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 145:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 146:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 147:src/keys.c    **** 	};
 148:src/keys.c    **** 	return linear_key_map[c];
 149:src/keys.c    **** }
 150:src/keys.c    **** #else
 151:src/keys.c    **** static int keycode_to_linear(const keycode c)
 152:src/keys.c    **** {
 153:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 154:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 155:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 156:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 157:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 158:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 159:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 160:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 161:src/keys.c    **** 	};
 162:src/keys.c    **** 	return linear_key_map[c];
 163:src/keys.c    **** }
 164:src/keys.c    **** #endif
 165:src/keys.c    **** /*
 166:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 167:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 168:src/keys.c    ****  */
 169:src/keys.c    **** int keycode_to_row_column(const int c)
 170:src/keys.c    **** {
 171:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 172:src/keys.c    **** }
 173:src/keys.c    **** 
 174:src/keys.c    **** /*
 175:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 176:src/keys.c    ****  * Used in PUTK and KTYPE.
 177:src/keys.c    ****  */
 178:src/keys.c    **** 
 179:src/keys.c    **** int row_column_to_keycode(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	int row = c / 10 - 1;
 182:src/keys.c    **** 	int col = c % 10 - 1;
 183:src/keys.c    **** 
 184:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 185:src/keys.c    **** 		return -1;
 186:src/keys.c    **** 	return row * 6 + col;
 187:src/keys.c    **** }
 188:src/keys.c    **** 
 189:src/keys.c    **** /*
 190:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 191:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 192:src/keys.c    ****  */
 193:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 194:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 195:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 196:src/keys.c    **** 
 197:src/keys.c    **** #define NO_REG 0x7f
 198:src/keys.c    **** #define NO_SHORT 0x80
 199:src/keys.c    **** #ifdef DM42
 200:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
ARM GAS  /tmp/ccczu93l.s 			page 5


 201:src/keys.c    **** {
 202:src/keys.c    ****   static const unsigned char map[] = {
 203:src/keys.c    ****     // K00 - K05
 204:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 205:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 206:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 207:src/keys.c    ****     // K10 - K15
 208:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 209:src/keys.c    ****     // K20 - K24
 210:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 211:src/keys.c    ****     // K30 - K34
 212:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 213:src/keys.c    ****     // K40 - K44
 214:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 215:src/keys.c    ****     // K50 - K54
 216:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 217:src/keys.c    ****     // K60 - K64
 218:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 219:src/keys.c    ****     // Shifts
 220:src/keys.c    ****     NO_REG
 221:src/keys.c    ****   };
 222:src/keys.c    **** 
 223:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 224:src/keys.c    **** }
 225:src/keys.c    **** #else
 226:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 227:src/keys.c    **** {
 228:src/keys.c    ****   static const unsigned char map[] = {
 229:src/keys.c    **** 		// K00 - K05
 230:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 231:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 232:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 233:src/keys.c    **** 		// K10 - K12
 234:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 235:src/keys.c    **** 		// K20 - K24
 236:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 237:src/keys.c    **** 		// K30 - K34
 238:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 239:src/keys.c    **** 		// K40 - K44
 240:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 241:src/keys.c    **** 		// K50 - K54
 242:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 243:src/keys.c    **** 		// K60 - K63
 244:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 245:src/keys.c    **** 		regY_idx, regZ_idx,
 246:src/keys.c    **** 		// Shifts, etc
 247:src/keys.c    **** 		NO_REG
 248:src/keys.c    **** 	};
 249:src/keys.c    **** 
 250:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 251:src/keys.c    **** }
 252:src/keys.c    **** #endif
 253:src/keys.c    **** /*
 254:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 255:src/keys.c    ****  */
 256:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 257:src/keys.c    **** {
ARM GAS  /tmp/ccczu93l.s 			page 6


 258:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 259:src/keys.c    ****   int i, col, max;
 260:src/keys.c    ****   const struct _map {
 261:src/keys.c    ****     unsigned char key, cat[3];
 262:src/keys.c    ****   } *cp;
 263:src/keys.c    **** 
 264:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 265:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 267:src/keys.c    **** 
 268:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 269:src/keys.c    ****     /*
 270:src/keys.c    ****      *  Normal processing - Not alpha mode
 271:src/keys.c    ****      */
 272:src/keys.c    ****     static const struct _map cmap[] = {
 273:src/keys.c    **** #ifdef DM42
 274:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 275:src/keys.c    **** #else
 276:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 277:src/keys.c    **** #endif
 278:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 279:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 280:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 281:src/keys.c    **** #else
 282:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 283:src/keys.c    **** #endif
 284:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 285:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 286:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 287:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 288:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 289:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 290:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 291:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 292:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 293:src/keys.c    **** #else
 294:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 295:src/keys.c    **** #endif
 296:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 297:src/keys.c    ****     };
 298:src/keys.c    **** 
 299:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 300:src/keys.c    ****       /*
 301:src/keys.c    ****        *  SHOW starts register browser
 302:src/keys.c    ****        */
 303:src/keys.c    ****       return CATALOGUE_REGISTERS;
 304:src/keys.c    ****     }
 305:src/keys.c    **** #if 0
 306:src/keys.c    ****     // conflicts with c# 002 and c# 003
 307:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 308:src/keys.c    ****       /*
 309:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 310:src/keys.c    ****        */
 311:src/keys.c    ****       shift = SHIFT_H;
 312:src/keys.c    ****     }
 313:src/keys.c    **** #endif
 314:src/keys.c    ****     if (shift != SHIFT_H) {
ARM GAS  /tmp/ccczu93l.s 			page 7


 315:src/keys.c    ****       /*
 316:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 317:src/keys.c    ****        */
 318:src/keys.c    ****       return CATALOGUE_NONE;
 319:src/keys.c    ****     }
 320:src/keys.c    **** 
 321:src/keys.c    ****     /*
 322:src/keys.c    ****      *  Prepare search
 323:src/keys.c    ****      */
 324:src/keys.c    ****     cp = cmap;
 325:src/keys.c    **** #ifndef WINGUI
 326:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 327:src/keys.c    **** #else
 328:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 329:src/keys.c    **** #endif
 330:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 331:src/keys.c    ****   }
 332:src/keys.c    ****   else {
 333:src/keys.c    ****     /*
 334:src/keys.c    ****      *  All the alpha catalogues go here
 335:src/keys.c    ****      */
 336:src/keys.c    **** #ifdef DM42
 337:src/keys.c    ****     static const struct _map amap[] = {
 338:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 339:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 340:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 341:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 342:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 343:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 344:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 345:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 346:src/keys.c    ****     };
 347:src/keys.c    **** #else
 348:src/keys.c    ****     static const struct _map amap[] = {
 349:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 350:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 351:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 352:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 353:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 354:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 355:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 356:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 357:src/keys.c    ****     };
 358:src/keys.c    **** #endif
 359:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 360:src/keys.c    **** 
 361:src/keys.c    ****     /*
 362:src/keys.c    ****      *  Prepare search
 363:src/keys.c    ****      */
 364:src/keys.c    ****     cp = amap;
 365:src/keys.c    ****     col = smap[shift];
 366:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 367:src/keys.c    ****   }
 368:src/keys.c    **** 
 369:src/keys.c    ****   /*
 370:src/keys.c    ****    *  Search the key in one of the tables
 371:src/keys.c    ****    */
ARM GAS  /tmp/ccczu93l.s 			page 8


 372:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 373:src/keys.c    ****     if (cp->key == c) {
 374:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 375:src/keys.c    ****       break;
 376:src/keys.c    ****     }
 377:src/keys.c    ****   }
 378:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 379:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 380:src/keys.c    ****     cat = CATALOGUE_NONE;
 381:src/keys.c    ****   }
 382:src/keys.c    ****   return cat;
 383:src/keys.c    **** }
 384:src/keys.c    **** 
 385:src/keys.c    **** #ifdef DM42
 386:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 387:src/keys.c    **** {
 388:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 389:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 390:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 391:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 392:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 393:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 394:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 395:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 396:src/keys.c    **** 
 397:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 398:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 399:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 400:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 401:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 402:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 403:src/keys.c    **** 
 404:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 405:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 406:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 407:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 408:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 409:src/keys.c    **** 
 410:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 411:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 412:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 413:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 414:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 415:src/keys.c    **** 
 416:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 417:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 418:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 419:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 420:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 421:src/keys.c    **** 
 422:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 423:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 424:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 425:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 426:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 427:src/keys.c    **** 
 428:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
ARM GAS  /tmp/ccczu93l.s 			page 9


 429:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 430:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 431:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 432:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 433:src/keys.c    **** 
 434:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 435:src/keys.c    **** 	};
 436:src/keys.c    **** 	if (State2.alphashift) {
 437:src/keys.c    **** 		if (shift == SHIFT_N)
 438:src/keys.c    **** 			shift = SHIFT_LC_N;
 439:src/keys.c    **** 		else if (shift == SHIFT_G)
 440:src/keys.c    **** 			shift = SHIFT_LC_G;
 441:src/keys.c    **** 	}
 442:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 443:src/keys.c    **** }
 444:src/keys.c    **** #else
 445:src/keys.c    **** /*
 446:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 447:src/keys.c    ****  * the two lower case planes.
 448:src/keys.c    ****  */
 449:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 450:src/keys.c    **** {
 451:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 452:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 453:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 454:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 455:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 456:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 457:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 458:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 459:src/keys.c    **** 
 460:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 461:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 462:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 463:src/keys.c    **** 
 464:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 465:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 466:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 467:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 468:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 469:src/keys.c    **** 
 470:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 471:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 472:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 473:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 474:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 475:src/keys.c    **** 
 476:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 477:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 478:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 479:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 480:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 481:src/keys.c    **** 
 482:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 483:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 484:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 485:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
ARM GAS  /tmp/ccczu93l.s 			page 10


 486:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 487:src/keys.c    **** 
 488:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 489:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 490:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 491:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 492:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 493:src/keys.c    **** 	};
 494:src/keys.c    **** 	if (State2.alphashift) {
 495:src/keys.c    **** 		if (shift == SHIFT_N)
 496:src/keys.c    **** 			shift = SHIFT_LC_N;
 497:src/keys.c    **** 		else if (shift == SHIFT_G)
 498:src/keys.c    **** 			shift = SHIFT_LC_G;
 499:src/keys.c    **** 	}
 500:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 501:src/keys.c    **** }
 502:src/keys.c    **** #endif
 503:src/keys.c    **** static void init_arg(const enum rarg base) {
 504:src/keys.c    **** 	if (is_bad_cmdline())
 505:src/keys.c    **** 		return;
 506:src/keys.c    **** 	CmdBase = base;
 507:src/keys.c    **** 	State2.ind = 0;
 508:src/keys.c    **** 	State2.digval = 0;
 509:src/keys.c    **** 	State2.numdigit = 0;
 510:src/keys.c    **** 	State2.rarg = 1;
 511:src/keys.c    **** 	State2.dot = 0;
 512:src/keys.c    **** 	State2.local = 0;
 513:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 514:src/keys.c    **** }
 515:src/keys.c    **** 
 516:src/keys.c    **** static void init_cat(enum catalogues cat) {
 517:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 518:src/keys.c    **** 		// Save last catalogue for a later restore
 519:src/keys.c    **** 		State.last_cat = State2.catalogue;
 520:src/keys.c    **** 		CmdLineLength = 0;
 521:src/keys.c    **** 	}
 522:src/keys.c    **** 	process_cmdline();
 523:src/keys.c    **** 
 524:src/keys.c    **** 	State2.labellist = 0;
 525:src/keys.c    **** 	State2.registerlist = 0;
 526:src/keys.c    **** 	State2.status = 0;
 527:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 528:src/keys.c    **** 
 529:src/keys.c    **** 	switch (cat) {
 530:src/keys.c    **** 	case CATALOGUE_LABELS:
 531:src/keys.c    **** 		// Label browser
 532:src/keys.c    **** 		State2.labellist = 1;
 533:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 534:src/keys.c    **** 		break;
 535:src/keys.c    **** 	
 536:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 537:src/keys.c    **** 		// Register browser
 538:src/keys.c    **** 		State2.registerlist = 1;
 539:src/keys.c    **** 		State2.digval = regX_idx;
 540:src/keys.c    **** 		State2.digval2 = 0;
 541:src/keys.c    **** 		break;
 542:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 11


 543:src/keys.c    **** 	case CATALOGUE_STATUS:
 544:src/keys.c    **** 		// Flag browser
 545:src/keys.c    **** 		State2.status = 1;
 546:src/keys.c    **** 		break;
 547:src/keys.c    **** 
 548:src/keys.c    **** 	default:
 549:src/keys.c    **** 		// Normal catalogue
 550:src/keys.c    **** 		State2.catalogue = cat;
 551:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 552:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 553:src/keys.c    **** 			// Different catalogue, reset position
 554:src/keys.c    **** 			State.catpos = 0;
 555:src/keys.c    **** 		}
 556:src/keys.c    **** 	}
 557:src/keys.c    **** 	reset_shift();
 558:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 559:src/keys.c    **** 	changed_catalog_state();
 560:src/keys.c    **** #endif
 561:src/keys.c    **** }
 562:src/keys.c    **** 
 563:src/keys.c    **** /*
 564:src/keys.c    ****  *  Reset the internal state to a sane default
 565:src/keys.c    ****  */
 566:src/keys.c    **** void init_state(void) {
 567:src/keys.c    **** #ifndef REALBUILD
 568:src/keys.c    **** 	unsigned int a = State2.flags;
 569:src/keys.c    **** 	unsigned int b = State2.trace;
 570:src/keys.c    **** #else
 571:src/keys.c    **** 	FLAG t = TestFlag;
 572:src/keys.c    **** #endif
 573:src/keys.c    **** 	int v = Voltage;
 574:src/keys.c    **** 	int k = LastKey;
 575:src/keys.c    **** 
 576:src/keys.c    **** 	CmdBase = 0;
 577:src/keys.c    **** 	// Removed: will clear any locals on power off
 578:src/keys.c    **** 	// clrretstk(0);
 579:src/keys.c    **** 
 580:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 581:src/keys.c    **** 	State2.test = TST_NONE;
 582:src/keys.c    **** 	State2.runmode = 1;
 583:src/keys.c    **** 	update_program_bounds(1);
 584:src/keys.c    **** 	set_lift();
 585:src/keys.c    **** 
 586:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 587:src/keys.c    **** 	// but must not be cleared.
 588:src/keys.c    **** 	Voltage = v;
 589:src/keys.c    **** 	LastKey = k;
 590:src/keys.c    **** #ifndef REALBUILD
 591:src/keys.c    **** 	State2.trace = b;
 592:src/keys.c    **** 	State2.flags = a;
 593:src/keys.c    **** #else
 594:src/keys.c    **** 	TestFlag = t;
 595:src/keys.c    **** #endif
 596:src/keys.c    **** 	ShowRegister = regX_idx;
 597:src/keys.c    **** }
 598:src/keys.c    **** 
 599:src/keys.c    **** void soft_init_state(void) {
ARM GAS  /tmp/ccczu93l.s 			page 12


 600:src/keys.c    **** 	int soft;
 601:src/keys.c    **** 	unsigned int runmode;
 602:src/keys.c    **** 	unsigned int alphas;
 603:src/keys.c    **** 
 604:src/keys.c    **** 	if (CmdLineLength) {
 605:src/keys.c    **** 		CmdLineLength = 0;
 606:src/keys.c    **** 		CmdLineEex = 0;
 607:src/keys.c    **** 		CmdLineDot = 0;
 608:src/keys.c    **** 		return;
 609:src/keys.c    **** 	}
 610:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 611:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 612:src/keys.c    **** 	runmode = State2.runmode;
 613:src/keys.c    **** 	alphas = State2.alphas;
 614:src/keys.c    **** 	init_state();
 615:src/keys.c    **** 	if (soft) {
 616:src/keys.c    **** 		State2.runmode = runmode;
 617:src/keys.c    **** 		State2.alphas = alphas;
 618:src/keys.c    **** 	}
 619:src/keys.c    **** }
 620:src/keys.c    **** 
 621:src/keys.c    **** static int check_confirm(int op) {
 622:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 623:src/keys.c    **** 		const int nilop = argKIND(op);
 624:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 625:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 626:src/keys.c    **** 			return STATE_UNFINISHED;
 627:src/keys.c    **** 		}
 628:src/keys.c    **** #ifndef DM42		
 629:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 630:src/keys.c    **** #endif
 631:src/keys.c    **** #ifdef DM42
 632:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 633:src/keys.c    **** #endif
 634:src/keys.c    **** #ifdef INFRARED
 635:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 636:src/keys.c    **** #endif
 637:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 638:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 639:src/keys.c    **** #endif
 640:src/keys.c    **** 		) {
 641:src/keys.c    **** 			// These commands are not programmable
 642:src/keys.c    **** 			NonProgrammable = 1;
 643:src/keys.c    **** 		}
 644:src/keys.c    **** 	}
 645:src/keys.c    **** 	return op;
 646:src/keys.c    **** }
 647:src/keys.c    **** 
 648:src/keys.c    **** static void set_smode(const enum single_disp d) {
 649:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 650:src/keys.c    **** }
 651:src/keys.c    **** 
 652:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 653:src/keys.c    **** 	const int code = 100 + n;
 654:src/keys.c    **** 	unsigned int pc = state_pc();
 655:src/keys.c    **** 
 656:src/keys.c    **** 	if (State2.runmode) {
ARM GAS  /tmp/ccczu93l.s 			page 13


 657:src/keys.c    **** 		if (isXROM(pc))
 658:src/keys.c    **** 			pc = 1;
 659:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 660:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 661:src/keys.c    **** 	}
 662:src/keys.c    **** 	return dflt;
 663:src/keys.c    **** }
 664:src/keys.c    **** 
 665:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 666:src/keys.c    ****  * as digits.
 667:src/keys.c    ****  */
 668:src/keys.c    **** static int intltr(int d) {
 669:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 670:src/keys.c    **** }
 671:src/keys.c    **** 
 672:src/keys.c    **** /*
 673:src/keys.c    ****  *  Process a key code in the unshifted mode.
 674:src/keys.c    ****  */
 675:src/keys.c    **** static int process_normal(const keycode c)
 676:src/keys.c    **** {
 677:src/keys.c    **** 	static const unsigned short int op_map[] = {
 678:src/keys.c    **** 		// Row 1
 679:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 680:src/keys.c    **** 		OP_MON  | OP_RECIP,
 681:src/keys.c    **** 		OP_DYA  | OP_POW,
 682:src/keys.c    **** 		OP_MON  | OP_SQRT,
 683:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 684:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 685:src/keys.c    **** 		// Row 2
 686:src/keys.c    **** 		RARG_STO,
 687:src/keys.c    **** 		RARG_RCL,
 688:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 689:src/keys.c    **** 		// Row 3
 690:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 691:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 692:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 693:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 694:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 695:src/keys.c    **** 		// Row 4
 696:src/keys.c    **** 		RARG_XEQ,
 697:src/keys.c    **** 		OP_SPEC | OP_7,
 698:src/keys.c    **** 		OP_SPEC | OP_8,
 699:src/keys.c    **** 		OP_SPEC | OP_9,
 700:src/keys.c    **** 		OP_DYA  | OP_DIV,
 701:src/keys.c    **** 		// Row 5
 702:src/keys.c    **** 		STATE_BST,
 703:src/keys.c    **** 		OP_SPEC | OP_4,
 704:src/keys.c    **** 		OP_SPEC | OP_5,
 705:src/keys.c    **** 		OP_SPEC | OP_6,
 706:src/keys.c    **** 		OP_DYA  | OP_MUL,
 707:src/keys.c    **** 		// Row 6
 708:src/keys.c    **** 		STATE_SST,		// SST
 709:src/keys.c    **** 		OP_SPEC | OP_1,
 710:src/keys.c    **** 		OP_SPEC | OP_2,
 711:src/keys.c    **** 		OP_SPEC | OP_3,
 712:src/keys.c    **** 		OP_DYA  | OP_SUB,
 713:src/keys.c    **** 		// Row 7
ARM GAS  /tmp/ccczu93l.s 			page 14


 714:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 715:src/keys.c    **** 		OP_SPEC | OP_0,
 716:src/keys.c    **** 		OP_SPEC | OP_DOT,
 717:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 718:src/keys.c    **** 		OP_DYA  | OP_ADD,
 719:src/keys.c    **** #ifdef DM42
 720:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 721:src/keys.c    **** #endif
 722:src/keys.c    **** 	};
 723:src/keys.c    **** 
 724:src/keys.c    **** 	int lc = keycode_to_linear(c);
 725:src/keys.c    **** 	int op = op_map[lc];
 726:src/keys.c    **** 	
 727:src/keys.c    **** 	// The switch handles all the special cases
 728:src/keys.c    **** #ifdef DM42
 729:src/keys.c    **** 	int op_int;
 730:src/keys.c    **** 	if (UState.intm) {
 731:src/keys.c    **** 	  switch (c) {
 732:src/keys.c    **** 	  case K00:
 733:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 734:src/keys.c    **** 	    if (intltr(10)) {
 735:src/keys.c    **** 	      return op;
 736:src/keys.c    **** 	    }
 737:src/keys.c    **** 	    else {
 738:src/keys.c    **** 	      return check_f_key(0, op);
 739:src/keys.c    **** 	    }
 740:src/keys.c    **** 	  case K01:
 741:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 742:src/keys.c    **** 	    if (intltr(11)) {
 743:src/keys.c    **** 	      return op;
 744:src/keys.c    **** 	    }
 745:src/keys.c    **** 	    else {
 746:src/keys.c    **** 	      return check_f_key(1, op);
 747:src/keys.c    **** 	    }
 748:src/keys.c    **** 	  case K03:
 749:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 750:src/keys.c    **** 	    if (intltr(12)) {
 751:src/keys.c    **** 	      return op_int;
 752:src/keys.c    **** 	    }
 753:src/keys.c    **** 	    else {
 754:src/keys.c    **** 	      return check_f_key(2, op);
 755:src/keys.c    **** 	    }
 756:src/keys.c    **** 	  case K30:
 757:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 758:src/keys.c    **** 	    if (intltr(15)) {
 759:src/keys.c    **** 	      return op_int;
 760:src/keys.c    **** 	    }
 761:src/keys.c    **** 	  default:;
 762:src/keys.c    **** 	  }
 763:src/keys.c    **** 	}
 764:src/keys.c    **** #endif  
 765:src/keys.c    **** 
 766:src/keys.c    **** 	switch (c) {
 767:src/keys.c    **** #ifdef DM42
 768:src/keys.c    **** 	case K00:
 769:src/keys.c    **** 		return check_f_key(0, op);
 770:src/keys.c    **** 	case K01:
ARM GAS  /tmp/ccczu93l.s 			page 15


 771:src/keys.c    **** 		return check_f_key(1, op);
 772:src/keys.c    **** 	case K03:
 773:src/keys.c    **** 		return check_f_key(2, op);
 774:src/keys.c    **** #else
 775:src/keys.c    **** 	case K00:
 776:src/keys.c    **** 	case K01:
 777:src/keys.c    **** 		if (UState.intm)
 778:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 779:src/keys.c    **** 	case K02:
 780:src/keys.c    **** 	case K03:
 781:src/keys.c    **** 		if (intltr(lc + 10)) {
 782:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 783:src/keys.c    **** 			return op;
 784:src/keys.c    **** 		}
 785:src/keys.c    **** 		return check_f_key(lc, op);
 786:src/keys.c    **** #endif		
 787:src/keys.c    **** 	case K_ARROW:
 788:src/keys.c    **** #ifndef DM42
 789:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 790:src/keys.c    **** 		if (intltr(14))
 791:src/keys.c    **** 			return op;
 792:src/keys.c    **** #else
 793:src/keys.c    **** 		if (UState.intm)
 794:src/keys.c    **** 			return op;
 795:src/keys.c    **** #endif
 796:src/keys.c    **** #endif		
 797:src/keys.c    **** 		if (is_bad_cmdline())
 798:src/keys.c    **** 			return STATE_UNFINISHED;
 799:src/keys.c    **** 		process_cmdline_set_lift();
 800:src/keys.c    **** 		State2.arrow = 1;
 801:src/keys.c    **** #ifdef DM42
 802:src/keys.c    **** 		set_menu (9); // arrow menu
 803:src/keys.c    **** 		display_current_menu ();
 804:src/keys.c    **** 		lcd_refresh ();
 805:src/keys.c    **** #else
 806:src/keys.c    **** 		set_shift(SHIFT_G);
 807:src/keys.c    **** #endif
 808:src/keys.c    **** 		break;
 809:src/keys.c    **** 
 810:src/keys.c    **** 	case K_CMPLX:
 811:src/keys.c    **** #ifdef DM42
 812:src/keys.c    **** 	  if (UState.intm)
 813:src/keys.c    **** 	    break; // return nothing
 814:src/keys.c    **** 	  State2.cmplx = 1;
 815:src/keys.c    **** #else
 816:src/keys.c    **** 	  if (UState.intm)
 817:src/keys.c    **** 	    return op;
 818:src/keys.c    **** 	  State2.cmplx = 1;
 819:src/keys.c    **** #endif
 820:src/keys.c    **** 	  break;
 821:src/keys.c    **** 
 822:src/keys.c    **** 	case K24:				// <-
 823:src/keys.c    **** 		if (State2.disp_temp)
 824:src/keys.c    **** 			return STATE_UNFINISHED;
 825:src/keys.c    **** 		if (State2.runmode)
 826:src/keys.c    **** 			return op;
 827:src/keys.c    **** 		return STATE_BACKSPACE;
ARM GAS  /tmp/ccczu93l.s 			page 16


 828:src/keys.c    **** 
 829:src/keys.c    **** 	case K10:				// STO
 830:src/keys.c    **** 	case K11:				// RCL
 831:src/keys.c    **** 	case K30:				// XEQ
 832:src/keys.c    **** 		init_arg((enum rarg)op);
 833:src/keys.c    **** 		break;
 834:src/keys.c    **** 
 835:src/keys.c    **** 	default:
 836:src/keys.c    **** 		return op;			// Keys handled by table
 837:src/keys.c    **** 	}
 838:src/keys.c    **** 	return STATE_UNFINISHED;
 839:src/keys.c    **** }
 840:src/keys.c    **** 
 841:src/keys.c    **** 
 842:src/keys.c    **** /*
 843:src/keys.c    ****  *  Process a key code after f or g shift
 844:src/keys.c    ****  */
 845:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 846:src/keys.c    **** 
 847:src/keys.c    **** #define NO_INT 0xf000
 848:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 849:src/keys.c    **** 		// Row 1
 850:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 851:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 852:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 853:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 854:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 855:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 856:src/keys.c    **** 		// Row 2
 857:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 858:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 859:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 860:src/keys.c    **** 		// Row 3
 861:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 862:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 863:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 864:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 865:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 866:src/keys.c    **** 		// Row 4
 867:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 868:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 869:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 870:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 871:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 872:src/keys.c    **** 		// Row 5
 873:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 874:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 875:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 876:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 877:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 878:src/keys.c    **** 		// Row 6
 879:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 880:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 881:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 882:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 883:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 884:src/keys.c    **** 		// Row 7
ARM GAS  /tmp/ccczu93l.s 			page 17


 885:src/keys.c    **** #ifdef INFRARED
 886:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 887:src/keys.c    **** #else
 888:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 889:src/keys.c    **** #endif
 890:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 891:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 892:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 893:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 896:src/keys.c    **** #endif
 897:src/keys.c    **** 	};
 898:src/keys.c    **** 
 899:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 900:src/keys.c    **** 		STATE_UNFINISHED,
 901:src/keys.c    **** 		STATE_UNFINISHED,
 902:src/keys.c    **** 		OP_DYA  | OP_POW,
 903:src/keys.c    **** 		OP_MON  | OP_SQRT
 904:src/keys.c    **** 	};
 905:src/keys.c    **** 
 906:src/keys.c    **** 	enum shifts shift = reset_shift();
 907:src/keys.c    **** 	int lc = keycode_to_linear(c);
 908:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 909:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 910:src/keys.c    **** 	if (no_int)
 911:src/keys.c    **** 		op &= ~NO_INT;
 912:src/keys.c    **** 
 913:src/keys.c    **** 	switch (c) {
 914:src/keys.c    **** 	case K00:
 915:src/keys.c    **** 	  if (! UState.intm) {
 916:src/keys.c    **** 	    State2.hyp = 1;
 917:src/keys.c    **** 	    State2.dot = op;
 918:src/keys.c    **** 	    // State2.cmplx = 0;
 919:src/keys.c    **** 	    return STATE_UNFINISHED;
 920:src/keys.c    **** 	  }
 921:src/keys.c    **** 	  // fall through
 922:src/keys.c    **** 	case K01:
 923:src/keys.c    **** #ifdef DM42
 924:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 925:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 926:src/keys.c    **** 	  }
 927:src/keys.c    **** 	  break;
 928:src/keys.c    **** #endif
 929:src/keys.c    **** #ifndef DM42
 930:src/keys.c    **** 	case K02:
 931:src/keys.c    **** #endif
 932:src/keys.c    **** 	case K03:
 933:src/keys.c    **** #ifdef DM42
 934:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 935:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 936:src/keys.c    **** 		}
 937:src/keys.c    **** 		break;
 938:src/keys.c    **** #else
 939:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 940:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 941:src/keys.c    **** 		}
ARM GAS  /tmp/ccczu93l.s 			page 18


 942:src/keys.c    **** 		break;
 943:src/keys.c    **** #endif
 944:src/keys.c    **** 	case K20:				// Alpha
 945:src/keys.c    **** 		if (shift == SHIFT_F) {
 946:src/keys.c    **** 			if (is_bad_cmdline())
 947:src/keys.c    **** 				return STATE_UNFINISHED;
 948:src/keys.c    **** 			process_cmdline_set_lift();
 949:src/keys.c    **** 			State2.alphas = 1;
 950:src/keys.c    **** 		}
 951:src/keys.c    **** 		break;
 952:src/keys.c    **** #ifdef DM42
 953:src/keys.c    **** 	case K31:
 954:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 955:src/keys.c    **** 	    return OP_SPEC | OP_D;
 956:src/keys.c    **** 	  }
 957:src/keys.c    **** 	  break;
 958:src/keys.c    **** 	case K30:
 959:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 960:src/keys.c    **** 	    return OP_SPEC | OP_E;
 961:src/keys.c    **** 	  }
 962:src/keys.c    **** 	  break;
 963:src/keys.c    **** #endif
 964:src/keys.c    **** 	case K51:
 965:src/keys.c    **** 		if (is_bad_cmdline())
 966:src/keys.c    **** 			return STATE_UNFINISHED;
 967:src/keys.c    **** 		process_cmdline_set_lift();
 968:src/keys.c    **** 		State2.test = op;
 969:src/keys.c    **** 		return STATE_UNFINISHED;
 970:src/keys.c    **** 
 971:src/keys.c    **** 	case K50:
 972:src/keys.c    **** #ifndef REALBUILD
 973:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 974:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 975:src/keys.c    **** 			return STATE_UNFINISHED;
 976:src/keys.c    **** 		}
 977:src/keys.c    **** #endif
 978:src/keys.c    **** 	case K52:
 979:src/keys.c    **** 	case K53:
 980:src/keys.c    **** 	case K63:
 981:src/keys.c    **** 	case K64:
 982:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 983:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 984:src/keys.c    **** 				init_arg((enum rarg) op);
 985:src/keys.c    **** 			}
 986:src/keys.c    **** 			return STATE_UNFINISHED;
 987:src/keys.c    **** 		}
 988:src/keys.c    **** 		break;
 989:src/keys.c    **** 
 990:src/keys.c    **** 	default:
 991:src/keys.c    **** 		break;
 992:src/keys.c    **** 	}
 993:src/keys.c    **** 	if (no_int && UState.intm)
 994:src/keys.c    **** 		return STATE_UNFINISHED;
 995:src/keys.c    **** 
 996:src/keys.c    **** 	return check_confirm(op);
 997:src/keys.c    **** #undef NO_INT
 998:src/keys.c    **** }
ARM GAS  /tmp/ccczu93l.s 			page 19


 999:src/keys.c    **** 
1000:src/keys.c    **** /*
1001:src/keys.c    ****  *  Process a key code after h shift
1002:src/keys.c    ****  */
1003:src/keys.c    **** static int process_h_shifted(const keycode c) {
1004:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1005:src/keys.c    **** #define NO_INT   0x4000
1006:src/keys.c    **** 	static const unsigned short int op_map[] = {
1007:src/keys.c    **** 		// Row 1
1008:src/keys.c    **** 		_RARG   | RARG_STD,
1009:src/keys.c    **** 		_RARG   | RARG_FIX,
1010:src/keys.c    **** 		_RARG   | RARG_SCI,
1011:src/keys.c    **** 		_RARG   | RARG_ENG,
1012:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1013:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1014:src/keys.c    **** 		// Row 2
1015:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1016:src/keys.c    **** 		_RARG   | RARG_VIEW,
1017:src/keys.c    **** 		OP_NIL  | OP_RUP,
1018:src/keys.c    **** 		// Row 3
1019:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1020:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1021:src/keys.c    **** 		OP_MON  | OP_NOT,
1022:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1023:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1024:src/keys.c    **** 		// Row 4
1025:src/keys.c    **** 		_RARG   | RARG_GTO,
1026:src/keys.c    **** 		OP_DYA  | OP_LAND,
1027:src/keys.c    **** 		OP_DYA  | OP_LOR,
1028:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1029:src/keys.c    **** 		OP_DYA  | OP_MOD,
1030:src/keys.c    **** 		// Row 5
1031:src/keys.c    **** 		OP_MON  | OP_FACT,
1032:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1033:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1034:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1035:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1036:src/keys.c    **** 		// Row 6
1037:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1038:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1039:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1040:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1041:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1042:src/keys.c    **** 		// Row 7
1043:src/keys.c    **** 		OP_NIL | OP_OFF,
1044:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1045:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1046:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1047:src/keys.c    **** #else
1048:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1049:src/keys.c    **** #endif
1050:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1051:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1052:src/keys.c    **** #ifdef DM42
1053:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1054:src/keys.c    **** #endif
1055:src/keys.c    **** 	};
ARM GAS  /tmp/ccczu93l.s 			page 20


1056:src/keys.c    **** 
1057:src/keys.c    **** 	int lc = keycode_to_linear(c);
1058:src/keys.c    **** 	int op = op_map[lc];
1059:src/keys.c    **** 	reset_shift();
1060:src/keys.c    **** 
1061:src/keys.c    **** 	// The switch handles all the special cases
1062:src/keys.c    **** 	switch (c) {
1063:src/keys.c    **** 	case K62:
1064:src/keys.c    **** 		if (UState.intm)
1065:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1066:src/keys.c    **** 		else
1067:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1068:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1069:src/keys.c    **** #else
1070:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1071:src/keys.c    **** #endif
1072:src/keys.c    **** 		break;
1073:src/keys.c    **** 
1074:src/keys.c    **** 	case K63:					// Program<->Run mode
1075:src/keys.c    **** 		if (is_bad_cmdline())
1076:src/keys.c    **** 			return STATE_UNFINISHED;
1077:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1078:src/keys.c    **** 		process_cmdline_set_lift();
1079:src/keys.c    **** 		update_program_bounds(1);
1080:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1081:src/keys.c    **** 			set_pc(0);
1082:src/keys.c    **** 		break;
1083:src/keys.c    **** 
1084:src/keys.c    **** 	default:
1085:src/keys.c    **** 		break;
1086:src/keys.c    **** 	}
1087:src/keys.c    **** 
1088:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1089:src/keys.c    **** 		if (op & _RARG) {
1090:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1091:src/keys.c    **** 			op = STATE_UNFINISHED;
1092:src/keys.c    **** 		}
1093:src/keys.c    **** 	}
1094:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1095:src/keys.c    **** #undef _RARG
1096:src/keys.c    **** #undef NO_INT
1097:src/keys.c    **** }
1098:src/keys.c    **** 
1099:src/keys.c    **** /*
1100:src/keys.c    ****  *  Process a key code after CPX
1101:src/keys.c    ****  */
1102:src/keys.c    **** static int process_cmplx(const keycode c) {
1103:src/keys.c    **** #define _RARG   0xFF00
1104:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1105:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1106:src/keys.c    **** 
1107:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1108:src/keys.c    **** 		// Row 1
1109:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1110:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1111:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1112:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
ARM GAS  /tmp/ccczu93l.s 			page 21


1113:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1114:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1115:src/keys.c    **** 		// Row 2
1116:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1117:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1118:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1119:src/keys.c    **** 		// Row 3
1120:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1121:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1122:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1123:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1124:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1125:src/keys.c    **** 		// Row 4
1126:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1127:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1128:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1129:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1130:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1131:src/keys.c    **** 		// Row 5
1132:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1133:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1135:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1136:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1137:src/keys.c    **** 		// Row 6
1138:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1139:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1140:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1142:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1143:src/keys.c    **** 		// Row 7
1144:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1145:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1146:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1147:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1148:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** #else
1150:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1151:src/keys.c    **** #endif
1152:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1153:src/keys.c    **** #ifdef DM42
1154:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1155:src/keys.c    **** #endif
1156:src/keys.c    **** 	};
1157:src/keys.c    **** 
1158:src/keys.c    **** 	enum shifts shift = reset_shift();
1159:src/keys.c    **** 	int lc = keycode_to_linear(c);
1160:src/keys.c    **** 	int op = op_map[lc][shift];
1161:src/keys.c    **** 	State2.cmplx = 0;
1162:src/keys.c    **** 
1163:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1164:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1165:src/keys.c    **** 		return STATE_UNFINISHED;
1166:src/keys.c    **** 	}
1167:src/keys.c    **** 	if (c == K00) {
1168:src/keys.c    **** 		// HYP
1169:src/keys.c    **** 		process_cmdline_set_lift();
ARM GAS  /tmp/ccczu93l.s 			page 22


1170:src/keys.c    **** 		State2.hyp = 1;
1171:src/keys.c    **** 		State2.dot = op;
1172:src/keys.c    **** 		State2.cmplx = 1;
1173:src/keys.c    **** 		return STATE_UNFINISHED;
1174:src/keys.c    **** 	}
1175:src/keys.c    **** 
1176:src/keys.c    **** 	if (shift != SHIFT_N) {
1177:src/keys.c    **** 		switch (c) {
1178:src/keys.c    **** 		case K_CMPLX:
1179:src/keys.c    **** 			set_shift(shift);
1180:src/keys.c    **** 			break;
1181:src/keys.c    **** 
1182:src/keys.c    **** 		case K51:
1183:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1184:src/keys.c    **** 				if (is_bad_cmdline())
1185:src/keys.c    **** 					return STATE_UNFINISHED;
1186:src/keys.c    **** 				process_cmdline_set_lift();
1187:src/keys.c    **** 				State2.cmplx = 1;
1188:src/keys.c    **** 				State2.test = op;
1189:src/keys.c    **** 			}
1190:src/keys.c    **** 			return STATE_UNFINISHED;
1191:src/keys.c    **** 
1192:src/keys.c    **** 		case K60:
1193:src/keys.c    **** 			init_state();
1194:src/keys.c    **** 			break;
1195:src/keys.c    **** 
1196:src/keys.c    **** 		default:
1197:src/keys.c    **** 			break;
1198:src/keys.c    **** 		}
1199:src/keys.c    **** 	}
1200:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1201:src/keys.c    **** 	return check_confirm(op);
1202:src/keys.c    **** #else
1203:src/keys.c    **** 	return op;
1204:src/keys.c    **** #endif
1205:src/keys.c    **** 
1206:src/keys.c    **** #undef _RARG
1207:src/keys.c    **** #undef CSWAPXZ
1208:src/keys.c    **** #undef CNUM
1209:src/keys.c    **** }
1210:src/keys.c    **** 
1211:src/keys.c    **** 
1212:src/keys.c    **** 
1213:src/keys.c    **** /*
1214:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1215:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1216:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1217:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1218:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1219:src/keys.c    ****  * the ON key are dealt with by our caller.
1220:src/keys.c    ****  */
1221:src/keys.c    **** static int process_hyp(const keycode c) {
1222:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1223:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1224:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1225:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1226:src/keys.c    **** 	};
ARM GAS  /tmp/ccczu93l.s 			page 23


1227:src/keys.c    **** 	int cmplx = State2.cmplx;
1228:src/keys.c    **** 	int f = State2.dot;
1229:src/keys.c    **** 
1230:src/keys.c    **** 	State2.hyp = 0;
1231:src/keys.c    **** 	State2.cmplx = 0;
1232:src/keys.c    **** 	State2.dot = 0;
1233:src/keys.c    **** #ifdef DM42
1234:src/keys.c    **** 	reset_shift();
1235:src/keys.c    **** #endif
1236:src/keys.c    **** 	switch ((int)c) {
1237:src/keys.c    **** 
1238:src/keys.c    **** 	case K01:
1239:src/keys.c    **** 	case K02:
1240:src/keys.c    **** 	case K03:
1241:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1242:src/keys.c    **** 
1243:src/keys.c    **** 	case K_CMPLX:
1244:src/keys.c    **** 		cmplx = ! cmplx;
1245:src/keys.c    **** 		goto stay;
1246:src/keys.c    **** 
1247:src/keys.c    **** 	case K_F: 
1248:src/keys.c    **** 	case K_G:
1249:src/keys.c    **** 		f = (c == K_F);
1250:src/keys.c    **** 		// fall trough
1251:src/keys.c    **** 	stay:
1252:src/keys.c    **** 		// process_cmdline_set_lift();
1253:src/keys.c    **** 		State2.hyp = 1;
1254:src/keys.c    **** 		State2.cmplx = cmplx;
1255:src/keys.c    **** 		State2.dot = f;
1256:src/keys.c    **** 		break;
1257:src/keys.c    **** 
1258:src/keys.c    **** 	default:
1259:src/keys.c    **** 		break;
1260:src/keys.c    **** 	}
1261:src/keys.c    **** 	return STATE_UNFINISHED;
1262:src/keys.c    **** }
1263:src/keys.c    **** 
1264:src/keys.c    **** 
1265:src/keys.c    **** /*
1266:src/keys.c    ****  *  Process a key code after ->
1267:src/keys.c    ****  */
1268:src/keys.c    **** static int process_arrow(const keycode c) {
1269:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1270:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1271:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1272:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1273:src/keys.c    **** 	};
1274:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1275:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1276:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1277:src/keys.c    **** 	};
1278:src/keys.c    **** 	const int shift = reset_shift();
1279:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1280:src/keys.c    **** 
1281:src/keys.c    **** 	State2.arrow = 0;
1282:src/keys.c    **** #ifdef DM42
1283:src/keys.c    **** 	set_last_menu ();
ARM GAS  /tmp/ccczu93l.s 			page 24


1284:src/keys.c    **** 	display_current_menu ();
1285:src/keys.c    **** #endif
1286:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1287:src/keys.c    **** 	
1288:src/keys.c    **** 	if (c >= K10 && c <= K12)
1289:src/keys.c    **** 		return op_map[c - K10][f];
1290:src/keys.c    **** 
1291:src/keys.c    **** 	if (c == K22 || c == K23)
1292:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1293:src/keys.c    **** 
1294:src/keys.c    **** 	return STATE_UNFINISHED;
1295:src/keys.c    **** }
1296:src/keys.c    **** 
1297:src/keys.c    **** 
1298:src/keys.c    **** /* Process a GTO . sequence
1299:src/keys.c    ****  */
1300:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1300 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1301:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1301 2 view .LVU1
1302:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1302 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1300:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1300 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1301:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1301 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1302 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1301:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1301 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1302 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1301:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1301 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1300:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1300 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1303:src/keys.c    **** 
1304:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1304 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1301:src/keys.c    **** 	const int lib = nLIB(state_pc());
ARM GAS  /tmp/ccczu93l.s 			page 25


  60              		.loc 1 1301 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1302:src/keys.c    **** 
  63              		.loc 1 1302 2 is_stmt 1 view .LVU12
  64              		.loc 1 1304 2 view .LVU13
  65              		.loc 1 1304 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1304 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1304 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1305:src/keys.c    **** 		return val;
1306:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1306 2 is_stmt 1 view .LVU17
  77              		.loc 1 1306 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1306 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1306 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1306 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1306 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1307:src/keys.c    **** 		return val;
1308:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1308 2 is_stmt 1 view .LVU23
  91              		.loc 1 1308 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1309:src/keys.c    **** 	return -1;
  94              		.loc 1 1309 2 is_stmt 1 view .LVU25
1306:src/keys.c    **** 		return val;
  95              		.loc 1 1306 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1309 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1310:src/keys.c    **** }
 102              		.loc 1 1310 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1310 1 view .LVU29
 108              		.align	2
ARM GAS  /tmp/ccczu93l.s 			page 26


 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 652:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 652 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 653:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 653 2 view .LVU31
 652:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 652 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 656:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 656 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 654:src/keys.c    **** 
 143              		.loc 1 654 2 is_stmt 1 view .LVU34
 656:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 656 2 view .LVU35
 656:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 656 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 652:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 652 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 656:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 656 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 654:src/keys.c    **** 
 151              		.loc 1 654 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 654:src/keys.c    **** 
 154              		.loc 1 654 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
ARM GAS  /tmp/ccczu93l.s 			page 27


 654:src/keys.c    **** 
 157              		.loc 1 654 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 657:src/keys.c    **** 			pc = 1;
 160              		.loc 1 657 3 is_stmt 1 view .LVU42
 657:src/keys.c    **** 			pc = 1;
 161              		.loc 1 657 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 658:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 658 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 659:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 659 3 is_stmt 1 view .LVU45
 653:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 653 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 659:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 659 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 659:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 659 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 659:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 659 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 659:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 659 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 662:src/keys.c    **** }
 186              		.loc 1 662 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 663:src/keys.c    **** 
 188              		.loc 1 663 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 660:src/keys.c    **** 	}
 192              		.loc 1 660 4 is_stmt 1 view .LVU53
 660:src/keys.c    **** 	}
 193              		.loc 1 660 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 663:src/keys.c    **** 
 195              		.loc 1 663 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
ARM GAS  /tmp/ccczu93l.s 			page 28


 663:src/keys.c    **** 
 199              		.loc 1 663 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1311:src/keys.c    **** 
1312:src/keys.c    **** static int gtodot_fkey(int n) {
1313:src/keys.c    **** 	const int code = 100 + n;
1314:src/keys.c    **** 	unsigned int pc = state_pc();
1315:src/keys.c    **** 
1316:src/keys.c    **** 	if(isXROM(pc))
1317:src/keys.c    **** 		pc = 1;
1318:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1319:src/keys.c    **** 	if (pc > 0)
1320:src/keys.c    **** 		return pc;
1321:src/keys.c    **** 	return state_pc();
1322:src/keys.c    **** }
1323:src/keys.c    **** 
1324:src/keys.c    **** static int process_gtodot(const keycode c) {
1325:src/keys.c    **** 	int pc = -1;
1326:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1327:src/keys.c    **** 
1328:src/keys.c    **** 	if (rawpc <= 9) {
1329:src/keys.c    **** 		// Digit 0 - 9
1330:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1331:src/keys.c    **** 	}
1332:src/keys.c    **** #ifdef DM42
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1334:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1335:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1336:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1337:src/keys.c    **** #endif
1338:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1339:src/keys.c    **** 		// A - D
1340:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1341:src/keys.c    **** 		goto fin;
1342:src/keys.c    **** 	}
1343:src/keys.c    **** 	else if (c == K62) {
1344:src/keys.c    **** 		// .
1345:src/keys.c    **** 		rawpc = ProgSize;
1346:src/keys.c    **** 		goto fin;
1347:src/keys.c    **** 	}
1348:src/keys.c    **** 	else if (c == K20) {
1349:src/keys.c    **** 		// ENTER - short circuit processing
ARM GAS  /tmp/ccczu93l.s 			page 29


1350:src/keys.c    **** 		pc = State2.digval;
1351:src/keys.c    **** 	}
1352:src/keys.c    **** 	else if (c == K24) {
1353:src/keys.c    **** 		// backspace
1354:src/keys.c    **** 		if (State2.numdigit == 0) {
1355:src/keys.c    **** 			goto fin2;
1356:src/keys.c    **** 		} else {
1357:src/keys.c    **** 			State2.numdigit--;
1358:src/keys.c    **** 			State2.digval /= 10;
1359:src/keys.c    **** 		}
1360:src/keys.c    **** 	}
1361:src/keys.c    **** 	else if (c == K_UP) {
1362:src/keys.c    **** 		// up
1363:src/keys.c    **** 		rawpc = state_pc();
1364:src/keys.c    **** 		if (rawpc == 1)
1365:src/keys.c    **** 			rawpc = 0;
1366:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1367:src/keys.c    **** 		update_program_bounds(1);
1368:src/keys.c    **** 		rawpc = ProgBegin;
1369:src/keys.c    **** 		goto fin;
1370:src/keys.c    **** 	}
1371:src/keys.c    **** 	else if (c == K_DOWN) {
1372:src/keys.c    **** 		// down
1373:src/keys.c    **** 		update_program_bounds(1);
1374:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1375:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1376:src/keys.c    **** 			rawpc = 1;
1377:src/keys.c    **** 		goto fin;
1378:src/keys.c    **** 	}
1379:src/keys.c    **** 	if (pc >= 0) {
1380:src/keys.c    **** 		rawpc = find_user_pc(pc);
1381:src/keys.c    **** fin:		set_pc(rawpc);
1382:src/keys.c    **** fin2:		State2.gtodot = 0;
1383:src/keys.c    **** 		State2.digval = 0;
1384:src/keys.c    **** 		State2.numdigit = 0;
1385:src/keys.c    **** 	}
1386:src/keys.c    **** 	return STATE_UNFINISHED;
1387:src/keys.c    **** }
1388:src/keys.c    **** 
1389:src/keys.c    **** 
1390:src/keys.c    **** /* Process a keystroke in alpha mode
1391:src/keys.c    ****  */
1392:src/keys.c    **** static int process_alpha(const keycode c) {
1393:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1394:src/keys.c    ****         int op = STATE_UNFINISHED;
1395:src/keys.c    **** 	const enum shifts shift = reset_shift();
1396:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1397:src/keys.c    **** 	State2.alpha_pos = 0;
1398:src/keys.c    **** 
1399:src/keys.c    **** 	switch (c) {
1400:src/keys.c    **** 	case K10:	// STO
1401:src/keys.c    **** 		if (shift == SHIFT_F) {
1402:src/keys.c    **** 			init_arg(RARG_ASTO);
1403:src/keys.c    **** 			return STATE_UNFINISHED;
1404:src/keys.c    **** 		}
1405:src/keys.c    **** 		break;
1406:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 30


1407:src/keys.c    **** 	case K11:	// RCL - maybe view
1408:src/keys.c    **** 		if (shift == SHIFT_F) {
1409:src/keys.c    **** 			init_arg(RARG_ARCL);
1410:src/keys.c    **** 			return STATE_UNFINISHED;
1411:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1412:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1413:src/keys.c    **** 			return STATE_UNFINISHED;
1414:src/keys.c    **** 		}
1415:src/keys.c    **** 		break;
1416:src/keys.c    **** 
1417:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1418:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1419:src/keys.c    **** 			break;
1420:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1421:src/keys.c    **** 			State2.multi = 1;
1422:src/keys.c    **** 			State2.numdigit = 0;
1423:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1424:src/keys.c    **** 			return STATE_UNFINISHED;
1425:src/keys.c    **** 		}
1426:src/keys.c    **** 		State2.alphas = 0;
1427:src/keys.c    **** 		State2.alphashift = 0;
1428:src/keys.c    **** 		return op;
1429:src/keys.c    **** 
1430:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1431:src/keys.c    **** 		if (shift == SHIFT_N)
1432:src/keys.c    **** 			return STATE_BACKSPACE;
1433:src/keys.c    **** 		if (shift == SHIFT_H)
1434:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1435:src/keys.c    **** 		break;
1436:src/keys.c    **** 
1437:src/keys.c    **** 	case K_UP:
1438:src/keys.c    **** 	  if (shift == SHIFT_N) {
1439:src/keys.c    **** 	    if ( State2.runmode ) {
1440:src/keys.c    **** 	      // Alpha scroll left
1441:src/keys.c    **** #ifdef DM42
1442:src/keys.c    **** 	      /* 
1443:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1444:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1445:src/keys.c    **** 	       */
1446:src/keys.c    **** #ifdef BIGGER_DISPLAY
1447:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1448:src/keys.c    **** 		alpha_pos += 1;
1449:src/keys.c    **** 	      }
1450:src/keys.c    **** #else
1451:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1452:src/keys.c    **** 		alpha_pos += 1;
1453:src/keys.c    **** 	      }
1454:src/keys.c    **** #endif
1455:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1456:src/keys.c    **** #else
1457:src/keys.c    **** 	      int n = alpha_pos + 1;
1458:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1459:src/keys.c    **** #endif
1460:src/keys.c    **** 	      return STATE_UNFINISHED;
1461:src/keys.c    **** 	    }
1462:src/keys.c    **** 	    return STATE_BST;
1463:src/keys.c    **** 	  }
ARM GAS  /tmp/ccczu93l.s 			page 31


1464:src/keys.c    **** 	  break;
1465:src/keys.c    **** 
1466:src/keys.c    **** 	case K_DOWN:
1467:src/keys.c    **** 	  if (shift == SHIFT_N) {
1468:src/keys.c    **** 	    if ( State2.runmode ) {
1469:src/keys.c    **** 	      // Alpha scroll right
1470:src/keys.c    **** 	      if (alpha_pos > 0)
1471:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1472:src/keys.c    **** 	      return STATE_UNFINISHED;
1473:src/keys.c    **** 	    }
1474:src/keys.c    **** 	    return STATE_SST;
1475:src/keys.c    **** 	  }
1476:src/keys.c    **** 	  break;
1477:src/keys.c    **** 
1478:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1479:src/keys.c    **** 		if (shift == SHIFT_F)
1480:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1481:src/keys.c    **** 		else if (shift == SHIFT_H)
1482:src/keys.c    **** 			return OP_NIL | OP_OFF;
1483:src/keys.c    **** 		else if (shift == SHIFT_N)
1484:src/keys.c    **** 			init_state();
1485:src/keys.c    **** 		return STATE_UNFINISHED;
1486:src/keys.c    **** 
1487:src/keys.c    **** 	case K63:
1488:src/keys.c    **** 		if (shift == SHIFT_F)
1489:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1490:src/keys.c    **** 		break;
1491:src/keys.c    **** 
1492:src/keys.c    **** 	default:
1493:src/keys.c    **** 		break;
1494:src/keys.c    **** 	}
1495:src/keys.c    **** 
1496:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1497:src/keys.c    **** 	if (ch == 0)
1498:src/keys.c    **** 		return STATE_UNFINISHED;
1499:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1500:src/keys.c    **** }
1501:src/keys.c    **** 
1502:src/keys.c    **** /*
1503:src/keys.c    ****  *  Code to handle all commands with arguments
1504:src/keys.c    ****  */
1505:src/keys.c    **** static void reset_arg(void) {
1506:src/keys.c    **** 	init_arg((enum rarg) 0);
1507:src/keys.c    **** 	State2.rarg = 0;
1508:src/keys.c    **** }
1509:src/keys.c    **** 
1510:src/keys.c    **** static int arg_eval(unsigned int val) {
1511:src/keys.c    **** 	const unsigned int base = CmdBase;
1512:src/keys.c    **** 	int r = RARG(base, val 
1513:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1514:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1515:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1516:src/keys.c    **** 
1517:src/keys.c    **** 	if (! State2.ind) {
1518:src/keys.c    **** 		/*
1519:src/keys.c    **** 		 *  Central argument checking for some commands
1520:src/keys.c    **** 		 */
ARM GAS  /tmp/ccczu93l.s 			page 32


1521:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1522:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1523:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1524:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1525:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1526:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1527:src/keys.c    **** 			if ( val == 0 )
1528:src/keys.c    **** 				return STATE_UNFINISHED;
1529:src/keys.c    **** 			r = RARG(base, val);
1530:src/keys.c    **** 		}
1531:src/keys.c    **** #else
1532:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1533:src/keys.c    **** 			// Disallow odd complex register > 98
1534:src/keys.c    **** 			return STATE_UNFINISHED;
1535:src/keys.c    **** #endif
1536:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1537:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1538:src/keys.c    **** 			return STATE_UNFINISHED;
1539:src/keys.c    **** 	}
1540:src/keys.c    **** 	// Build op-code
1541:src/keys.c    **** 	reset_arg();
1542:src/keys.c    **** 	return r;
1543:src/keys.c    **** }
1544:src/keys.c    **** 
1545:src/keys.c    **** static int arg_digit(int n) {
1546:src/keys.c    **** 	int lim;
1547:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1548:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1549:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1550:src/keys.c    **** #else
1551:src/keys.c    **** 	const unsigned int base = CmdBase;
1552:src/keys.c    **** #endif
1553:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1554:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1555:src/keys.c    **** 	
1556:src/keys.c    **** 	if (State2.local) {
1557:src/keys.c    **** 		// Handle local registers and flags
1558:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1559:src/keys.c    **** 		if (State2.runmode) {
1560:src/keys.c    **** 			if (LocalRegs == 0)
1561:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1562:src/keys.c    **** 			if (is_reg) {
1563:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1564:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1565:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1566:src/keys.c    **** 			}
1567:src/keys.c    **** 		}
1568:src/keys.c    **** 	}
1569:src/keys.c    **** 	else if (is_reg)						// normal register
1570:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1571:src/keys.c    **** 	else {
1572:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1573:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1574:src/keys.c    **** 			lim = RARG_IND - 1;
1575:src/keys.c    **** 	}
1576:src/keys.c    **** 	if ((int) val > lim)
1577:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccczu93l.s 			page 33


1578:src/keys.c    **** 
1579:src/keys.c    **** 	State2.digval = val;
1580:src/keys.c    **** 	++State2.numdigit;
1581:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1582:src/keys.c    **** 		int result = arg_eval(val);
1583:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1584:src/keys.c    **** 			--State2.numdigit;
1585:src/keys.c    **** 			State2.digval /= 10;
1586:src/keys.c    **** 		}
1587:src/keys.c    **** 		return result;
1588:src/keys.c    **** 	}
1589:src/keys.c    **** 	return STATE_UNFINISHED;
1590:src/keys.c    **** }
1591:src/keys.c    **** 
1592:src/keys.c    **** static int arg_fkey(int n) {
1593:src/keys.c    **** 	const unsigned int b = CmdBase;
1594:src/keys.c    **** 
1595:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1596:src/keys.c    **** 	{
1597:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1598:src/keys.c    **** 			return STATE_UNFINISHED;
1599:src/keys.c    **** 		if (argcmds[b].lim < 100)
1600:src/keys.c    **** 			return STATE_UNFINISHED;
1601:src/keys.c    **** 		return arg_eval(n + 100);
1602:src/keys.c    **** 	}
1603:src/keys.c    **** 	return STATE_UNFINISHED;
1604:src/keys.c    **** }
1605:src/keys.c    **** 
1606:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1607:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1608:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1609:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1610:src/keys.c    **** #else
1611:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1612:src/keys.c    **** #endif
1613:src/keys.c    **** }
1614:src/keys.c    **** 
1615:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1616:src/keys.c    **** 	unsigned int b = CmdBase;
1617:src/keys.c    **** 
1618:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1619:src/keys.c    **** 		CmdBase += n;
1620:src/keys.c    **** 		return 1;
1621:src/keys.c    **** 	}
1622:src/keys.c    **** 	/* And we can turn off the operation too */
1623:src/keys.c    **** 	if (b >= n) {
1624:src/keys.c    **** 		b -= n;
1625:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1626:src/keys.c    **** 			CmdBase = b;
1627:src/keys.c    **** 			return 1;
1628:src/keys.c    **** 		}
1629:src/keys.c    **** 	}
1630:src/keys.c    **** 	return 0;
1631:src/keys.c    **** }
1632:src/keys.c    **** 
1633:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1634:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 34


1635:src/keys.c    **** 	if (State2.numdigit == 0) {
1636:src/keys.c    **** 		// Only valid at beginning of entry
1637:src/keys.c    **** 		if (State2.dot || State2.local) {
1638:src/keys.c    **** 			// '..' or ENTER '.' = X
1639:src/keys.c    **** 			State2.local = 0;
1640:src/keys.c    **** 			return arg_eval(regX_idx);
1641:src/keys.c    **** 		}
1642:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1643:src/keys.c    **** 			// local register or flag select
1644:src/keys.c    **** 			State2.local = 1;
1645:src/keys.c    **** 		}
1646:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1647:src/keys.c    **** 			// Special GTO . sequence
1648:src/keys.c    **** 			if (! State2.ind) {
1649:src/keys.c    **** 				State2.gtodot = 1;
1650:src/keys.c    **** 				reset_arg();
1651:src/keys.c    **** 			}
1652:src/keys.c    **** 		}
1653:src/keys.c    **** 	}
1654:src/keys.c    **** 	return STATE_UNFINISHED;
1655:src/keys.c    **** }
1656:src/keys.c    **** 
1657:src/keys.c    **** static int process_arg_shuffle(int r) {
1658:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1659:src/keys.c    **** 	if (State2.numdigit < 4)
1660:src/keys.c    **** 		return STATE_UNFINISHED;
1661:src/keys.c    **** 	return arg_eval(State2.digval);
1662:src/keys.c    **** }
1663:src/keys.c    **** 
1664:src/keys.c    **** 
1665:src/keys.c    **** static int process_arg(const keycode c) {
1666:src/keys.c    **** 	unsigned int base = CmdBase;
1667:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1668:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1669:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1670:src/keys.c    **** 	const enum shifts shift = reset_shift();
1671:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1672:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1673:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1674:src/keys.c    **** 
1675:src/keys.c    **** 	n &= ~NO_SHORT;
1676:src/keys.c    **** 	if (base >= NUM_RARG) {
1677:src/keys.c    **** 		reset_arg();
1678:src/keys.c    **** 		return STATE_UNFINISHED;
1679:src/keys.c    **** 	}
1680:src/keys.c    **** #ifdef DM42
1681:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1682:src/keys.c    **** 	  switch (n) {
1683:src/keys.c    **** 	  case regX_idx:
1684:src/keys.c    **** 	    return arg_digit(1);
1685:src/keys.c    **** 	  case regY_idx:
1686:src/keys.c    **** 	    return arg_digit(2);
1687:src/keys.c    **** 	  case regZ_idx:
1688:src/keys.c    **** 	    return arg_digit(3);
1689:src/keys.c    **** 	  case regT_idx:
1690:src/keys.c    **** 	    return arg_digit(4);
1691:src/keys.c    **** 	  case 5:
ARM GAS  /tmp/ccczu93l.s 			page 35


1692:src/keys.c    **** 	  case 6:
1693:src/keys.c    **** 	  case 7:
1694:src/keys.c    **** 	  case 8:
1695:src/keys.c    **** 	  case 9:
1696:src/keys.c    **** 	  case 0:
1697:src/keys.c    **** 	    return arg_digit(n);
1698:src/keys.c    **** 	  }
1699:src/keys.c    **** 	}
1700:src/keys.c    **** #else
1701:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1702:src/keys.c    **** 		return arg_digit(n);
1703:src/keys.c    **** #endif	
1704:src/keys.c    **** 	if (shorthand)
1705:src/keys.c    **** 		// row column shorthand addressing
1706:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1707:src/keys.c    **** 
1708:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1709:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1710:src/keys.c    **** 		switch ((int)c) {
1711:src/keys.c    **** 		case K_UP:	// up arrow
1712:src/keys.c    **** 			if (--base < RARG_FIX)
1713:src/keys.c    **** 				base = RARG_SIG0;
1714:src/keys.c    **** 			break;
1715:src/keys.c    **** 
1716:src/keys.c    **** 		case K_DOWN:	// down arrow
1717:src/keys.c    **** 		case K01:	// B
1718:src/keys.c    **** 			if (++base > RARG_SIG0)
1719:src/keys.c    **** 				base = RARG_FIX;
1720:src/keys.c    **** 			break;
1721:src/keys.c    **** 		}
1722:src/keys.c    **** 		CmdBase = base;
1723:src/keys.c    **** 	}
1724:src/keys.c    **** #endif
1725:src/keys.c    **** 	/*
1726:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1727:src/keys.c    **** 	 *  Handle the rest here.
1728:src/keys.c    **** 	 */
1729:src/keys.c    **** 	switch ((int)c) {
1730:src/keys.c    **** 	case K_F:
1731:src/keys.c    **** 		if (label_addressing)
1732:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1733:src/keys.c    **** 		break;
1734:src/keys.c    **** 
1735:src/keys.c    **** 	case K_ARROW:		// arrow
1736:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1737:src/keys.c    **** 			State2.ind = ! State2.ind;
1738:src/keys.c    **** 			if (! stack_reg)
1739:src/keys.c    **** 				State2.dot = 0;
1740:src/keys.c    **** 		}
1741:src/keys.c    **** 		break;
1742:src/keys.c    **** 
1743:src/keys.c    **** 	case K_CMPLX:
1744:src/keys.c    **** 		if (State2.ind || State2.dot)
1745:src/keys.c    **** 			break;
1746:src/keys.c    **** 		if (base == RARG_STO)
1747:src/keys.c    **** 			CmdBase = RARG_STOM;
1748:src/keys.c    **** 		else if (base == RARG_RCL)
ARM GAS  /tmp/ccczu93l.s 			page 36


1749:src/keys.c    **** 			CmdBase = RARG_RCLM;
1750:src/keys.c    **** 		break;
1751:src/keys.c    **** #ifdef DM42
1752:src/keys.c    **** 	case K41:       // T
1753:src/keys.c    **** 	  if (State2.shuffle)
1754:src/keys.c    **** 	    return process_arg_shuffle(3);
1755:src/keys.c    **** 	case K51:       // X
1756:src/keys.c    **** 	  if (State2.shuffle)
1757:src/keys.c    **** 	    return process_arg_shuffle(0);
1758:src/keys.c    **** 	case K52:	// Y
1759:src/keys.c    **** 	  if (State2.shuffle)
1760:src/keys.c    **** 	    return process_arg_shuffle(1);
1761:src/keys.c    **** 	case K53:       // Z
1762:src/keys.c    **** 	  if (State2.shuffle)
1763:src/keys.c    **** 	    return process_arg_shuffle(2);
1764:src/keys.c    **** #else
1765:src/keys.c    **** 	case K63:	// Y
1766:src/keys.c    **** 	  if (State2.shuffle)
1767:src/keys.c    **** 	    return process_arg_shuffle(1);
1768:src/keys.c    **** #endif
1769:src/keys.c    **** 	case K00:	// A
1770:src/keys.c    **** 	case K01:	// B
1771:src/keys.c    **** 	case K02:	// C
1772:src/keys.c    **** 	case K03:	// D
1773:src/keys.c    **** #ifdef DM42
1774:src/keys.c    **** 	case K12:	// I (lastY)
1775:src/keys.c    **** 	case K13:	// J
1776:src/keys.c    **** 	case K14:	// K
1777:src/keys.c    **** 	case K15:	// L (lastX)
1778:src/keys.c    **** #else
1779:src/keys.c    **** 	case K12:	// I (lastY)
1780:src/keys.c    **** 	case K21:	// J
1781:src/keys.c    **** 	case K22:	// K
1782:src/keys.c    **** 	case K23:	// L (lastX)
1783:src/keys.c    **** #endif
1784:src/keys.c    **** 	  if (State2.dot || stack_reg)
1785:src/keys.c    **** 			return arg_eval(n);
1786:src/keys.c    **** 		if ( c <= K03 )
1787:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1788:src/keys.c    **** 		break;
1789:src/keys.c    **** #ifdef DM42
1790:src/keys.c    **** 	case K62:	// '.'
1791:src/keys.c    **** 		return process_arg_dot(base);
1792:src/keys.c    **** 
1793:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1794:src/keys.c    **** 	case K64:		// plus
1795:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1796:src/keys.c    **** 			return arg_eval(n);
1797:src/keys.c    **** 		break;
1798:src/keys.c    **** 	case K54:               // minus
1799:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1800:src/keys.c    **** 			reset_arg();
1801:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1802:src/keys.c    **** 		}
1803:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1804:src/keys.c    **** 		break;
1805:src/keys.c    **** 	case K44:		// multiply
ARM GAS  /tmp/ccczu93l.s 			page 37


1806:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1807:src/keys.c    **** 			return arg_eval(n);
1808:src/keys.c    **** 		break;
1809:src/keys.c    **** 	case K34:
1810:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1811:src/keys.c    **** 		break;
1812:src/keys.c    **** #else
1813:src/keys.c    **** 	case K62:	// X, '.'
1814:src/keys.c    **** 		if (State2.shuffle)
1815:src/keys.c    **** 			return process_arg_shuffle(0);
1816:src/keys.c    **** 		return process_arg_dot(base);
1817:src/keys.c    **** 
1818:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1819:src/keys.c    **** 	case K64:		// Z register
1820:src/keys.c    **** 		if (State2.shuffle)
1821:src/keys.c    **** 			return process_arg_shuffle(2);
1822:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1823:src/keys.c    **** 			return arg_eval(n);
1824:src/keys.c    **** 		break;
1825:src/keys.c    **** 
1826:src/keys.c    **** 	case K54:
1827:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1828:src/keys.c    **** 			reset_arg();
1829:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1830:src/keys.c    **** 		}
1831:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1832:src/keys.c    **** 		break;
1833:src/keys.c    **** 
1834:src/keys.c    **** 	case K44:		// T register
1835:src/keys.c    **** 		if (State2.shuffle)
1836:src/keys.c    **** 			return process_arg_shuffle(3);
1837:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1838:src/keys.c    **** 			return arg_eval(n);
1839:src/keys.c    **** 		break;
1840:src/keys.c    **** 
1841:src/keys.c    **** 	case K34:
1842:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1843:src/keys.c    **** 		break;
1844:src/keys.c    **** #endif
1845:src/keys.c    **** 	case K_UP:
1846:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1847:src/keys.c    **** 		break;
1848:src/keys.c    **** 
1849:src/keys.c    **** 	case K_DOWN:
1850:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1851:src/keys.c    **** 		break;
1852:src/keys.c    **** 
1853:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1854:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1855:src/keys.c    **** 			if (argcmds[base].label) {
1856:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1857:src/keys.c    **** 				State2.multi = 1;
1858:src/keys.c    **** 				State2.alphashift = 0;
1859:src/keys.c    **** 				State2.rarg = 0;
1860:src/keys.c    **** 			} else if (base == RARG_SCI) {
1861:src/keys.c    **** 				reset_arg();
1862:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
ARM GAS  /tmp/ccczu93l.s 			page 38


1863:src/keys.c    **** 			} else if (base == RARG_ENG) {
1864:src/keys.c    **** 				reset_arg();
1865:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1866:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1867:src/keys.c    **** 				State2.dot = 1;
1868:src/keys.c    **** 		} else if (State2.numdigit > 0)
1869:src/keys.c    **** 			return arg_eval(State2.digval);
1870:src/keys.c    **** 		else if (stack_reg)
1871:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1872:src/keys.c    **** 		break;
1873:src/keys.c    **** 
1874:src/keys.c    **** 	case K24:	// <-
1875:src/keys.c    **** 		if (State2.numdigit == 0) {
1876:src/keys.c    **** 			if (State2.dot)
1877:src/keys.c    **** 				State2.dot = 0;
1878:src/keys.c    **** 			else if (State2.local)
1879:src/keys.c    **** 				State2.local = 0;
1880:src/keys.c    **** 			else if (State2.ind)
1881:src/keys.c    **** 				State2.ind = 0;
1882:src/keys.c    **** 			else
1883:src/keys.c    **** 				goto reset;
1884:src/keys.c    **** 		}
1885:src/keys.c    **** 		else {
1886:src/keys.c    **** 			--State2.numdigit;
1887:src/keys.c    **** 			if (State2.shuffle)
1888:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1889:src/keys.c    **** 			else
1890:src/keys.c    **** 				State2.digval /= 10;
1891:src/keys.c    **** 		}
1892:src/keys.c    **** 		break;
1893:src/keys.c    **** 
1894:src/keys.c    **** 	case K60:
1895:src/keys.c    **** 	reset:
1896:src/keys.c    **** 		reset_arg();
1897:src/keys.c    **** 	default:
1898:src/keys.c    **** 		break;
1899:src/keys.c    **** 	}
1900:src/keys.c    **** 	return STATE_UNFINISHED;
1901:src/keys.c    **** }
1902:src/keys.c    **** 
1903:src/keys.c    **** 
1904:src/keys.c    **** /*
1905:src/keys.c    ****  *  Process arguments to the diverse test commands
1906:src/keys.c    ****  */
1907:src/keys.c    **** static int process_test(const keycode c) {
1908:src/keys.c    **** 	int r = State2.test;
1909:src/keys.c    **** 	int cmpx = State2.cmplx;
1910:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1911:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1912:src/keys.c    **** 
1913:src/keys.c    **** 	State2.test = TST_NONE;
1914:src/keys.c    **** 	State2.cmplx = 0;
1915:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1916:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1917:src/keys.c    **** 		// Lettered register
1918:src/keys.c    **** 		if (cmpx && (n & 1)) {
1919:src/keys.c    **** 			if (n == regI_idx)
ARM GAS  /tmp/ccczu93l.s 			page 39


1920:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1921:src/keys.c    **** 			// Disallow odd complex registers > A
1922:src/keys.c    **** 			goto again;
1923:src/keys.c    **** 		}
1924:src/keys.c    **** 		// Return the command with the register completed
1925:src/keys.c    **** 		return RARG(base, n);
1926:src/keys.c    **** 	}
1927:src/keys.c    **** 	else if ( n == 0 ) {
1928:src/keys.c    **** 		// Special 0
1929:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1930:src/keys.c    **** 	}
1931:src/keys.c    **** 	else if ( n == 1 ) {
1932:src/keys.c    **** 		// Special 1
1933:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1934:src/keys.c    **** 	}
1935:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1936:src/keys.c    **** 		// digit 2..9, -> or .
1937:src/keys.c    **** 		init_arg((enum rarg)base);
1938:src/keys.c    **** 		return process_arg(c);
1939:src/keys.c    **** 	}
1940:src/keys.c    **** 
1941:src/keys.c    **** 	switch (c) {
1942:src/keys.c    **** 	case K11:					// tests vs register
1943:src/keys.c    **** 	case K20:
1944:src/keys.c    **** 		init_arg((enum rarg)base);
1945:src/keys.c    **** 		return STATE_UNFINISHED;
1946:src/keys.c    **** 
1947:src/keys.c    **** 	//case K60:
1948:src/keys.c    **** 	case K24:
1949:src/keys.c    **** 		return STATE_UNFINISHED;
1950:src/keys.c    **** 
1951:src/keys.c    **** 	default:
1952:src/keys.c    **** 		break;
1953:src/keys.c    **** 	}
1954:src/keys.c    **** again:
1955:src/keys.c    **** 	State2.test = r;
1956:src/keys.c    **** 	State2.cmplx = cmpx;
1957:src/keys.c    **** 	return STATE_UNFINISHED;
1958:src/keys.c    **** }
1959:src/keys.c    **** 
1960:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1961:src/keys.c    **** /*
1962:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1963:src/keys.c    ****  */
1964:src/keys.c    **** #define USER_CAT_MAX 100
1965:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1966:src/keys.c    **** 
1967:src/keys.c    **** static int build_user_cat(void)
1968:src/keys.c    **** {
1969:src/keys.c    **** 	// find the label 'CAT'
1970:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1971:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1972:src/keys.c    **** 	int len = 0;
1973:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1974:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1975:src/keys.c    **** 		char buf1[16];
1976:src/keys.c    **** 		int i;
ARM GAS  /tmp/ccczu93l.s 			page 40


1977:src/keys.c    **** 		s_opcode op;
1978:src/keys.c    **** 	next:
1979:src/keys.c    **** 		pc = do_inc(pc, 0);
1980:src/keys.c    **** 		op = (s_opcode) getprog(pc);
1981:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
1982:src/keys.c    **** 			break;
1983:src/keys.c    **** 		if (isDBL(op))
1984:src/keys.c    **** 			continue;
1985:src/keys.c    **** 		if (isRARG(op)) {
1986:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
1987:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
1988:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
1989:src/keys.c    **** 				op = op & 0xff00;	// remove argument
1990:src/keys.c    **** 		}
1991:src/keys.c    **** 		catcmd(op, buf1);
1992:src/keys.c    **** 		for (i = 0; i < len; ++i) {
1993:src/keys.c    **** 			// Find a position in the table to insert the new entry
1994:src/keys.c    **** 			char buf2[16];
1995:src/keys.c    **** 			const char *p, *q;
1996:src/keys.c    **** 			int diff = 0;
1997:src/keys.c    **** 			if (op == UserCat[i]) {
1998:src/keys.c    **** 				// duplicate entry - ignore
1999:src/keys.c    **** 				goto next;
2000:src/keys.c    **** 			}
2001:src/keys.c    **** 			p = buf1;
2002:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2003:src/keys.c    **** 				++p;
2004:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2005:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2006:src/keys.c    **** 				++q;
2007:src/keys.c    **** 			diff = 0;
2008:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2009:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2010:src/keys.c    **** 			}
2011:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2012:src/keys.c    **** 				// identical according to sort order, insert after
2013:src/keys.c    **** 				++i;
2014:src/keys.c    **** 				break;
2015:src/keys.c    **** 			}
2016:src/keys.c    **** 			if (diff > 0) {
2017:src/keys.c    **** 				// insert new entry before the one found because this is greater
2018:src/keys.c    **** 				break;
2019:src/keys.c    **** 			}
2020:src/keys.c    **** 		}
2021:src/keys.c    **** 		if (i < len) {
2022:src/keys.c    **** 			// Make room
2023:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2024:src/keys.c    **** 		}
2025:src/keys.c    **** 		UserCat[i] = op;
2026:src/keys.c    **** 		++len;
2027:src/keys.c    **** 	}
2028:src/keys.c    **** 	// return the number of entries
2029:src/keys.c    **** 	return len;
2030:src/keys.c    **** }
2031:src/keys.c    **** #endif
2032:src/keys.c    **** 
2033:src/keys.c    **** /* Return the number of entries in the current catalogue.
ARM GAS  /tmp/ccczu93l.s 			page 41


2034:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2035:src/keys.c    ****  * likely be the most space efficient method.
2036:src/keys.c    ****  */
2037:src/keys.c    **** int current_catalogue_max(void) {
2038:src/keys.c    **** 	// A quick table of catalogue sizes
2039:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2040:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2041:src/keys.c    **** 	{
2042:src/keys.c    **** 		0, // NONE
2043:src/keys.c    **** 		SIZE_catalogue,
2044:src/keys.c    **** 		SIZE_cplx_catalogue,
2045:src/keys.c    **** 		SIZE_stats_catalogue,
2046:src/keys.c    **** 		SIZE_prob_catalogue,
2047:src/keys.c    **** 		SIZE_int_catalogue,
2048:src/keys.c    **** 		SIZE_prog_catalogue,
2049:src/keys.c    **** 		SIZE_program_xfcn,
2050:src/keys.c    **** 		SIZE_test_catalogue,
2051:src/keys.c    **** 		SIZE_mode_catalogue,
2052:src/keys.c    **** 		SIZE_alpha_catalogue,
2053:src/keys.c    **** 		SIZE_alpha_symbols,
2054:src/keys.c    **** 		SIZE_alpha_compares,
2055:src/keys.c    **** 		SIZE_alpha_arrows,
2056:src/keys.c    **** 		SIZE_alpha_letters,
2057:src/keys.c    **** 		SIZE_alpha_subscripts,
2058:src/keys.c    **** 		NUM_CONSTS_CAT,
2059:src/keys.c    **** 		NUM_CONSTS_CAT,
2060:src/keys.c    **** 		SIZE_conv_catalogue,
2061:src/keys.c    **** 		SIZE_sums_catalogue,
2062:src/keys.c    **** 		SIZE_matrix_catalogue,
2063:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2064:src/keys.c    **** 		SIZE_internal_catalogue,
2065:src/keys.c    **** #endif
2066:src/keys.c    **** 	};
2067:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2068:src/keys.c    **** 	const int cat = State2.catalogue;
2069:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2070:src/keys.c    **** #else
2071:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2072:src/keys.c    **** #endif
2073:src/keys.c    **** }
2074:src/keys.c    **** 
2075:src/keys.c    **** 
2076:src/keys.c    **** /* Look up the character position in the given byte array and
2077:src/keys.c    ****  * build the alpha op-code for it.
2078:src/keys.c    ****  */
2079:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2080:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2081:src/keys.c    **** }
2082:src/keys.c    **** 
2083:src/keys.c    **** 
2084:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2085:src/keys.c    ****  */
2086:src/keys.c    **** opcode current_catalogue(int n) {
2087:src/keys.c    **** 	// A quick table of catalogue tables
2088:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2089:src/keys.c    **** 	static const void *catalogues[] =
2090:src/keys.c    **** 	{
ARM GAS  /tmp/ccczu93l.s 			page 42


2091:src/keys.c    **** 		NULL, // NONE
2092:src/keys.c    **** 		catalogue,
2093:src/keys.c    **** 		cplx_catalogue,
2094:src/keys.c    **** 		stats_catalogue,
2095:src/keys.c    **** 		prob_catalogue,
2096:src/keys.c    **** 		int_catalogue,
2097:src/keys.c    **** 		prog_catalogue,
2098:src/keys.c    **** 		program_xfcn,
2099:src/keys.c    **** 		test_catalogue,
2100:src/keys.c    **** 		mode_catalogue,
2101:src/keys.c    **** 		alpha_catalogue,
2102:src/keys.c    **** 		alpha_symbols,
2103:src/keys.c    **** 		alpha_compares,
2104:src/keys.c    **** 		alpha_arrows,
2105:src/keys.c    **** 		alpha_letters,
2106:src/keys.c    **** 		alpha_subscripts,
2107:src/keys.c    **** 		NULL,
2108:src/keys.c    **** 		NULL,
2109:src/keys.c    **** 		NULL, //CONV
2110:src/keys.c    **** 		sums_catalogue,
2111:src/keys.c    **** 		matrix_catalogue,
2112:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2113:src/keys.c    **** 		internal_catalogue,
2114:src/keys.c    **** #endif
2115:src/keys.c    **** 	};
2116:src/keys.c    **** 	const unsigned char *cat;
2117:src/keys.c    **** 	unsigned int c = State2.catalogue;
2118:src/keys.c    **** 	int m, i;
2119:src/keys.c    **** 	unsigned p, q;
2120:src/keys.c    **** 
2121:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2122:src/keys.c    **** 		if (n == OP_ZERO)
2123:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2124:src/keys.c    **** 		return CONST(n);
2125:src/keys.c    **** 	}
2126:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2127:src/keys.c    **** 		if (n == OP_ZERO)
2128:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2129:src/keys.c    **** 		return CONST_CMPLX(n);
2130:src/keys.c    **** 	}
2131:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2132:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2133:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2134:src/keys.c    **** 			// Monadic conversion routine
2135:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2136:src/keys.c    **** 		else
2137:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2138:src/keys.c    **** 	}
2139:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2140:src/keys.c    **** 	if (c == CATALOGUE_USER)
2141:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2142:src/keys.c    **** #endif
2143:src/keys.c    **** 
2144:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2145:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2146:src/keys.c    **** 	else
2147:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
ARM GAS  /tmp/ccczu93l.s 			page 43


2148:src/keys.c    **** 
2149:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2150:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2151:src/keys.c    **** 	}
2152:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2153:src/keys.c    **** 		return OP_NIL | OP_NOP;
2154:src/keys.c    **** 
2155:src/keys.c    **** 	/* Unpack the opcode */
2156:src/keys.c    **** 	cat += n + (n >> 2);
2157:src/keys.c    **** 	p = cat[0];
2158:src/keys.c    **** 	q = cat[1];
2159:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2160:src/keys.c    **** 
2161:src/keys.c    **** 	/* Now figure out which opcode it really is */
2162:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2163:src/keys.c    **** 		if (m < opcode_breaks[i])
2164:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2165:src/keys.c    **** 		m -= opcode_breaks[i];
2166:src/keys.c    **** 	}
2167:src/keys.c    **** 	return RARG_BASEOP(m);
2168:src/keys.c    **** }
2169:src/keys.c    **** 
2170:src/keys.c    **** 
2171:src/keys.c    **** /*
2172:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2173:src/keys.c    ****  *  in multi character commands.
2174:src/keys.c    ****  */
2175:src/keys.c    **** static int forbidden_alpha(int pos) {
2176:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2177:src/keys.c    **** }
2178:src/keys.c    **** 
2179:src/keys.c    **** /*
2180:src/keys.c    ****  *  Catalogue navigation
2181:src/keys.c    ****  */
2182:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2183:src/keys.c    ****    int pos = State.catpos;
2184:src/keys.c    ****    int ch;
2185:src/keys.c    ****    const int ctmax = current_catalogue_max();
2186:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2187:src/keys.c    **** 
2188:src/keys.c    ****    if (shift == SHIFT_N) {
2189:src/keys.c    ****      switch (c) {
2190:src/keys.c    **** #ifdef DM42
2191:src/keys.c    ****      case K05:			// XEQ accepts command
2192:src/keys.c    **** #else	  
2193:src/keys.c    ****      case K30:			// XEQ accepts command
2194:src/keys.c    **** #endif						  
2195:src/keys.c    ****      case K20:			// Enter accepts command
2196:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2197:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2198:src/keys.c    **** 
2199:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2200:src/keys.c    **** 
2201:src/keys.c    **** 	 if (isRARG(op)) {
2202:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2203:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2204:src/keys.c    **** 	     return op;
ARM GAS  /tmp/ccczu93l.s 			page 44


2205:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2206:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2207:src/keys.c    **** 	   else
2208:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2209:src/keys.c    **** 	 }
2210:src/keys.c    **** 	 else {
2211:src/keys.c    **** 	   return check_confirm(op);
2212:src/keys.c    **** 	 }
2213:src/keys.c    ****        } else
2214:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2215:src/keys.c    ****        return STATE_UNFINISHED;
2216:src/keys.c    **** 
2217:src/keys.c    ****      case K24:			// backspace
2218:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2219:src/keys.c    **** 	 if (--CmdLineLength > 0)
2220:src/keys.c    **** 	   goto search;
2221:src/keys.c    **** 	 pos = 0;
2222:src/keys.c    **** 	 goto set_pos;
2223:src/keys.c    ****        } else
2224:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2225:src/keys.c    ****        return STATE_UNFINISHED;
2226:src/keys.c    **** 
2227:src/keys.c    ****      case K60:
2228:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2229:src/keys.c    ****        return STATE_UNFINISHED;
2230:src/keys.c    **** 
2231:src/keys.c    ****      case K_UP:
2232:src/keys.c    ****        CmdLineLength = 0;
2233:src/keys.c    ****        if (pos == 0)
2234:src/keys.c    **** 	 goto set_max;
2235:src/keys.c    ****        else
2236:src/keys.c    **** 	 --pos;
2237:src/keys.c    ****        goto set_pos;
2238:src/keys.c    **** 
2239:src/keys.c    ****      case K_DOWN:
2240:src/keys.c    ****        CmdLineLength = 0;
2241:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2242:src/keys.c    ****        if (pos >= ctmax)
2243:src/keys.c    **** 	 pos = 0;
2244:src/keys.c    ****        goto set_pos;
2245:src/keys.c    **** 
2246:src/keys.c    ****      default:
2247:src/keys.c    ****        break;
2248:src/keys.c    ****      }
2249:src/keys.c    ****    } else if (shift == SHIFT_F) {
2250:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2251:src/keys.c    ****        /*
2252:src/keys.c    **** 	* f 1/x in conversion catalogue
2253:src/keys.c    **** 	*/
2254:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2255:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2256:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2257:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2258:src/keys.c    **** 	*/
2259:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2260:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2261:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
ARM GAS  /tmp/ccczu93l.s 			page 45


2262:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2263:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2264:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2265:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2266:src/keys.c    ****        };
2267:src/keys.c    ****        const opcode op = current_catalogue(pos);
2268:src/keys.c    ****        int i;
2269:src/keys.c    **** 
2270:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2271:src/keys.c    ****        if (isRARG(op))
2272:src/keys.c    **** 	 return op ^ 1;
2273:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2274:src/keys.c    **** 	 if (op == conv_mapping[i])
2275:src/keys.c    **** 	   return conv_mapping[i^1];
2276:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2277:src/keys.c    ****      }
2278:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2279:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2280:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2281:src/keys.c    ****        return STATE_UNFINISHED;
2282:src/keys.c    ****      }
2283:src/keys.c    ****    } else if (shift == SHIFT_G) {
2284:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2285:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2286:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2287:src/keys.c    ****      }
2288:src/keys.c    ****    }
2289:src/keys.c    **** 
2290:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2291:src/keys.c    ****     * jump to the appropriate catalogue entry.
2292:src/keys.c    ****     */
2293:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2294:src/keys.c    ****    reset_shift();
2295:src/keys.c    ****    if (ch == '\0')
2296:src/keys.c    ****      return STATE_UNFINISHED;
2297:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2298:src/keys.c    ****      // No multi character search in alpha catalogues
2299:src/keys.c    ****      CmdLineLength = 0;
2300:src/keys.c    ****    }
2301:src/keys.c    ****    if (CmdLineLength < 10)
2302:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2303:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2304:src/keys.c    **** 
2305:src/keys.c    ****  search:
2306:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2307:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2308:src/keys.c    ****      char buf[16];
2309:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2310:src/keys.c    ****      int i;
2311:src/keys.c    **** 
2312:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2313:src/keys.c    ****        cmd++;
2314:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2315:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2316:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2317:src/keys.c    ****        if (c > cl)
2318:src/keys.c    **** 	 goto set_pos;
ARM GAS  /tmp/ccczu93l.s 			page 46


2319:src/keys.c    ****        else if (c < cl)
2320:src/keys.c    **** 	 break;
2321:src/keys.c    ****      }
2322:src/keys.c    ****      if (Cmdline[i] == '\0')
2323:src/keys.c    ****        goto set_pos;
2324:src/keys.c    ****    }
2325:src/keys.c    ****  set_max:
2326:src/keys.c    ****    pos = ctmax - 1;
2327:src/keys.c    ****  set_pos:
2328:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2329:src/keys.c    ****      --pos;
2330:src/keys.c    ****    State.catpos = pos;
2331:src/keys.c    ****    return STATE_UNFINISHED;
2332:src/keys.c    ****  }
2333:src/keys.c    **** 
2334:src/keys.c    **** #ifndef REALBUILD
2335:src/keys.c    **** int find_pos(const char* text) {
2336:src/keys.c    **** 	int pos;
2337:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2338:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2339:src/keys.c    **** 		char buf[16];
2340:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2341:src/keys.c    **** 		int i;
2342:src/keys.c    **** 
2343:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2344:src/keys.c    **** 			cmd++;
2345:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2346:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2347:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2348:src/keys.c    **** 			if (c > cl)
2349:src/keys.c    **** 				return pos;
2350:src/keys.c    **** 			else if (c < cl)
2351:src/keys.c    **** 				break;
2352:src/keys.c    **** 		}
2353:src/keys.c    **** 		if (text[i] == '\0')
2354:src/keys.c    **** 			return pos;
2355:src/keys.c    **** 	}
2356:src/keys.c    **** 	return pos;
2357:src/keys.c    **** }
2358:src/keys.c    **** 
2359:src/keys.c    **** #endif
2360:src/keys.c    **** 
2361:src/keys.c    **** /* Multi (2) word instruction entry
2362:src/keys.c    ****  */
2363:src/keys.c    **** static void reset_multi(void) {
2364:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2365:src/keys.c    **** 	State2.multi = 0;
2366:src/keys.c    **** 	if (! State2.alphas )
2367:src/keys.c    **** 		State2.alphashift = 0;
2368:src/keys.c    **** }
2369:src/keys.c    **** 
2370:src/keys.c    **** static int process_multi(const keycode c) {
2371:src/keys.c    **** 	enum shifts shift = reset_shift();
2372:src/keys.c    **** 	unsigned int ch = 0;
2373:src/keys.c    **** 	unsigned int opcode;
2374:src/keys.c    **** 
2375:src/keys.c    **** 	if (State2.catalogue) {
ARM GAS  /tmp/ccczu93l.s 			page 47


2376:src/keys.c    **** 		// Alpha catalogue from within multi character command
2377:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2378:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2379:src/keys.c    **** 			return opcode;
2380:src/keys.c    **** 		ch = (unsigned char) opcode;
2381:src/keys.c    **** 		goto add_char;
2382:src/keys.c    **** 	}
2383:src/keys.c    **** 
2384:src/keys.c    **** 	switch (c) {
2385:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2386:src/keys.c    **** 		if (shift != SHIFT_N)
2387:src/keys.c    **** 				break;
2388:src/keys.c    **** 		reset_multi();
2389:src/keys.c    **** 		if (State2.numdigit == 0)
2390:src/keys.c    **** 			return STATE_UNFINISHED;
2391:src/keys.c    **** 		else if (State2.numdigit == 1)
2392:src/keys.c    **** 			State2.digval2 = 0;
2393:src/keys.c    **** 		goto fin;
2394:src/keys.c    **** 
2395:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2396:src/keys.c    **** 		if (shift != SHIFT_H) {
2397:src/keys.c    **** 			if (State2.numdigit == 0)
2398:src/keys.c    **** 				reset_multi();
2399:src/keys.c    **** 			else
2400:src/keys.c    **** 				State2.numdigit--;
2401:src/keys.c    **** 			return STATE_UNFINISHED;
2402:src/keys.c    **** 		}
2403:src/keys.c    **** 		break;
2404:src/keys.c    **** 
2405:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2406:src/keys.c    **** 		if (shift == SHIFT_F)
2407:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2408:src/keys.c    **** 		else
2409:src/keys.c    **** 			reset_multi();
2410:src/keys.c    **** 		return STATE_UNFINISHED;
2411:src/keys.c    **** 
2412:src/keys.c    **** 	default:
2413:src/keys.c    **** 		break;
2414:src/keys.c    **** 		}
2415:src/keys.c    **** 
2416:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2417:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2418:src/keys.c    **** 	if (ch == 0)
2419:src/keys.c    **** 		return STATE_UNFINISHED;
2420:src/keys.c    **** add_char:
2421:src/keys.c    **** 	if (State2.numdigit == 0) {
2422:src/keys.c    **** 		State2.digval = ch;
2423:src/keys.c    **** 		State2.numdigit = 1;
2424:src/keys.c    **** 		return STATE_UNFINISHED;
2425:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2426:src/keys.c    **** 		State2.digval2 = ch;
2427:src/keys.c    **** 		State2.numdigit = 2;
2428:src/keys.c    **** 		return STATE_UNFINISHED;
2429:src/keys.c    **** 	}
2430:src/keys.c    **** 	reset_multi();
2431:src/keys.c    **** 
2432:src/keys.c    **** fin:
ARM GAS  /tmp/ccczu93l.s 			page 48


2433:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2434:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2435:src/keys.c    **** 	return opcode;
2436:src/keys.c    **** }
2437:src/keys.c    **** 
2438:src/keys.c    **** 
2439:src/keys.c    **** /* Handle YES/NO confirmations
2440:src/keys.c    ****  */
2441:src/keys.c    **** static int process_confirm(const keycode c) {
2442:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2443:src/keys.c    **** 	switch (c) {
2444:src/keys.c    **** #ifdef DM42
2445:src/keys.c    **** 	case K52:
2446:src/keys.c    **** #endif
2447:src/keys.c    **** 	case K63:			// Yes
2448:src/keys.c    **** 	  switch (State2.confirm) {
2449:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2450:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2451:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2452:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2453:src/keys.c    **** 	  }
2454:src/keys.c    **** 	case K24:
2455:src/keys.c    **** #ifdef DM42
2456:src/keys.c    **** 	case K22:
2457:src/keys.c    **** #else
2458:src/keys.c    **** 	case K32:
2459:src/keys.c    **** #endif
2460:src/keys.c    **** 	  // No
2461:src/keys.c    **** 	  State2.confirm = 0;
2462:src/keys.c    **** 	  State2.digval = 0;
2463:src/keys.c    **** 	  break;
2464:src/keys.c    **** 	default:			// No state change
2465:src/keys.c    **** 	  break;
2466:src/keys.c    **** 	}
2467:src/keys.c    **** 	return STATE_UNFINISHED;
2468:src/keys.c    **** }
2469:src/keys.c    **** 
2470:src/keys.c    **** 
2471:src/keys.c    **** /*
2472:src/keys.c    ****  *  STATUS
2473:src/keys.c    ****  */
2474:src/keys.c    **** static int process_status(const keycode c) {
2475:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2476:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2477:src/keys.c    **** 
2478:src/keys.c    **** 	if (c == K_UP) {
2479:src/keys.c    **** 		if (--n < -2)
2480:src/keys.c    **** 			n = max;
2481:src/keys.c    **** 	}
2482:src/keys.c    **** 	else if (c == K_DOWN) {
2483:src/keys.c    **** 		if (++n > max)
2484:src/keys.c    **** 			n = -2;
2485:src/keys.c    **** 	}
2486:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2487:src/keys.c    **** 		State2.status = 0;
2488:src/keys.c    **** 		return STATE_UNFINISHED;
2489:src/keys.c    **** 	} 
ARM GAS  /tmp/ccczu93l.s 			page 49


2490:src/keys.c    **** 	else {
2491:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2492:src/keys.c    **** 		if (nn <= 9)
2493:src/keys.c    **** 			n = nn;
2494:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2495:src/keys.c    **** 			n = n == max ? 10 : max;
2496:src/keys.c    **** 		else if (nn != NO_REG)
2497:src/keys.c    **** 			n = 10; 
2498:src/keys.c    **** 	}
2499:src/keys.c    **** 	State2.status = n + 3;
2500:src/keys.c    **** 
2501:src/keys.c    **** 	return STATE_UNFINISHED;
2502:src/keys.c    **** }
2503:src/keys.c    **** 
2504:src/keys.c    **** 
2505:src/keys.c    **** /*
2506:src/keys.c    ****  *  CAT helper
2507:src/keys.c    ****  */
2508:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2508 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2509:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2509 2 view .LVU58
2508:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2508 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2508:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2508 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2509 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2510:src/keys.c    **** 
2511:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2511 2 is_stmt 1 view .LVU62
 234              		.loc 1 2511 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2511 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2511 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2511 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2512:src/keys.c    **** }
 245              		.loc 1 2512 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2511:src/keys.c    **** }
ARM GAS  /tmp/ccczu93l.s 			page 50


 249              		.loc 1 2511 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2512 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2511:src/keys.c    **** }
 256              		.loc 1 2511 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2511:src/keys.c    **** }
 259              		.loc 1 2511 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2512 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2512 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2513:src/keys.c    **** 
2514:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2514 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2514 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2514 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2515:src/keys.c    **** 	do {
 294              		.loc 1 2515 2 is_stmt 1 view .LVU77
2516:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2516 3 view .LVU78
2517:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2517 4 view .LVU79
2514:src/keys.c    **** 	do {
 297              		.loc 1 2514 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2517 7 view .LVU81
ARM GAS  /tmp/ccczu93l.s 			page 51


 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2518:src/keys.c    **** 				pc = do_inc(pc, 0);
2519:src/keys.c    **** 				if (PcWrapped)
2520:src/keys.c    **** 					break;
2521:src/keys.c    **** 			}
2522:src/keys.c    **** 			else
2523:src/keys.c    **** 				inc = 1;
2524:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2524 4 is_stmt 1 view .LVU82
 304              		.loc 1 2524 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2524 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2524 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2524 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2518:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2518 5 is_stmt 1 view .LVU87
2518:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2518 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2519:src/keys.c    **** 					break;
 323              		.loc 1 2519 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2518:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2518 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2519:src/keys.c    **** 					break;
 328              		.loc 1 2519 5 is_stmt 1 view .LVU91
2519:src/keys.c    **** 					break;
 329              		.loc 1 2519 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2525:src/keys.c    **** 				return pc;
2526:src/keys.c    **** 			}
2527:src/keys.c    **** 		}
2528:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2528 3 is_stmt 1 view .LVU93
 333              		.loc 1 2528 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2528 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
ARM GAS  /tmp/ccczu93l.s 			page 52


 340              	.LVL32:
2529:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2529 10 is_stmt 1 view .LVU96
 342              		.loc 1 2529 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2529 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2530:src/keys.c    **** 	return pc;
2531:src/keys.c    **** }
 351              		.loc 1 2531 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2531 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 516:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 516 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 517:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 517 2 view .LVU102
 516:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 516 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 517:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 517 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 517:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 517 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
ARM GAS  /tmp/ccczu93l.s 			page 53


 517:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 517 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 517:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 517 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 519:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 519 3 is_stmt 1 view .LVU108
 519:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 519 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 520:src/keys.c    **** 	}
 398              		.loc 1 520 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 519:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 519 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 520:src/keys.c    **** 	}
 405              		.loc 1 520 3 is_stmt 1 view .LVU112
 406              	.L41:
 522:src/keys.c    **** 
 407              		.loc 1 522 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 524:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 524 2 view .LVU114
 525:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 525 2 view .LVU115
 526:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 526 2 view .LVU116
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 551 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 526:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 526 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 551 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 526:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 526 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 527:src/keys.c    **** 
 423              		.loc 1 527 2 is_stmt 1 view .LVU121
 529:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 529 2 view .LVU122
 550:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 550 3 view .LVU123
 550:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 550 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
ARM GAS  /tmp/ccczu93l.s 			page 54


 428              		.loc 1 551 3 is_stmt 1 view .LVU125
 552:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 552 3 view .LVU126
 557:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 557 2 view .LVU127
 431              	.LBB244:
 432              	.LBI244:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 104 13 view .LVU128
 434              	.LBE244:
 105:src/keys.c    **** }
 435              		.loc 1 105 2 view .LVU129
 436              	.LVL37:
 437              	.LBB261:
 438              	.LBB245:
 439              	.LBI245:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 94 20 view .LVU130
 441              	.LBB246:
  95:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 95 2 view .LVU131
 443              	.LBB247:
 444              	.LBI247:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 86 13 view .LVU132
 446              	.LBB248:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 87 2 view .LVU133
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 87 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  88:src/keys.c    **** }
 451              		.loc 1 88 2 is_stmt 1 view .LVU135
 452              	.LBE248:
 453              	.LBE247:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 96 2 view .LVU136
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 96 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 458              		.loc 1 98 2 is_stmt 1 view .LVU138
 459              	.LVL39:
  98:src/keys.c    **** }
 460              		.loc 1 98 2 is_stmt 0 view .LVU139
 461              	.LBE246:
 462              	.LBE245:
 463              	.LBE261:
 561:src/keys.c    **** 
 464              		.loc 1 561 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 522:src/keys.c    **** 
 468              		.loc 1 522 2 is_stmt 1 view .LVU141
ARM GAS  /tmp/ccczu93l.s 			page 55


 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 524:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 524 2 view .LVU142
 525:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 525 2 view .LVU143
 524:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 524 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 526:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 526 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 524:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 524 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 529:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 529 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 524:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 524 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 526:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 526 2 is_stmt 1 view .LVU149
 526:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 526 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 527:src/keys.c    **** 
 486              		.loc 1 527 2 is_stmt 1 view .LVU151
 527:src/keys.c    **** 
 487              		.loc 1 527 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 529:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 529 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 545:src/keys.c    **** 		break;
 493              		.loc 1 545 3 view .LVU154
 545:src/keys.c    **** 		break;
 494              		.loc 1 545 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 546:src/keys.c    **** 
 497              		.loc 1 546 3 is_stmt 1 view .LVU156
 557:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 557 2 view .LVU157
 499              	.LBB262:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 104 13 view .LVU158
 501              	.LBE262:
 105:src/keys.c    **** }
 502              		.loc 1 105 2 view .LVU159
 503              	.LVL42:
 504              	.LBB263:
 505              	.LBB258:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 94 20 view .LVU160
ARM GAS  /tmp/ccczu93l.s 			page 56


 507              	.LBB255:
  95:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 95 2 view .LVU161
 509              	.LBB252:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 86 13 view .LVU162
 511              	.LBB249:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 87 2 view .LVU163
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 87 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  88:src/keys.c    **** }
 516              		.loc 1 88 2 is_stmt 1 view .LVU165
 517              	.LBE249:
 518              	.LBE252:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 96 2 view .LVU166
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 96 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 523              		.loc 1 98 2 is_stmt 1 view .LVU168
 524              	.LVL44:
  98:src/keys.c    **** }
 525              		.loc 1 98 2 is_stmt 0 view .LVU169
 526              	.LBE255:
 527              	.LBE258:
 528              	.LBE263:
 561:src/keys.c    **** 
 529              		.loc 1 561 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 529:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 529 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 532:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 532 3 is_stmt 1 view .LVU172
 533:src/keys.c    **** 		break;
 536              		.loc 1 533 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 532:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 532 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 533:src/keys.c    **** 		break;
 540              		.loc 1 533 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 532:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 532 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 533:src/keys.c    **** 		break;
 545              		.loc 1 533 3 is_stmt 1 view .LVU177
 533:src/keys.c    **** 		break;
ARM GAS  /tmp/ccczu93l.s 			page 57


 546              		.loc 1 533 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 533:src/keys.c    **** 		break;
 551              		.loc 1 533 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 534:src/keys.c    **** 	
 553              		.loc 1 534 3 is_stmt 1 view .LVU180
 554              	.L45:
 557:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 557 2 view .LVU181
 556              	.LBB264:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 104 13 view .LVU182
 558              	.LBE264:
 105:src/keys.c    **** }
 559              		.loc 1 105 2 view .LVU183
 560              	.LVL46:
 561              	.LBB265:
 562              	.LBB259:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 94 20 view .LVU184
 564              	.LBB256:
  95:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 95 2 view .LVU185
 566              	.LBB253:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 86 13 view .LVU186
 568              	.LBB250:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 87 2 view .LVU187
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 87 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  88:src/keys.c    **** }
 573              		.loc 1 88 2 is_stmt 1 view .LVU189
 574              	.LBE250:
 575              	.LBE253:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 96 2 view .LVU190
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 96 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 580              		.loc 1 98 2 is_stmt 1 view .LVU192
 581              	.LVL48:
  98:src/keys.c    **** }
 582              		.loc 1 98 2 is_stmt 0 view .LVU193
 583              	.LBE256:
 584              	.LBE259:
 585              	.LBE265:
 561:src/keys.c    **** 
 586              		.loc 1 561 1 view .LVU194
ARM GAS  /tmp/ccczu93l.s 			page 58


 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 538:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 538 3 is_stmt 1 view .LVU195
 538:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 538 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 540:src/keys.c    **** 		break;
 592              		.loc 1 540 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 538:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 538 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 539:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 539 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 538:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 538 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 539:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 539 3 is_stmt 1 view .LVU201
 539:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 539 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 540:src/keys.c    **** 		break;
 603              		.loc 1 540 3 is_stmt 1 view .LVU203
 541:src/keys.c    **** 
 604              		.loc 1 541 3 view .LVU204
 557:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 557 2 view .LVU205
 606              	.LBB266:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 104 13 view .LVU206
 608              	.LBE266:
 105:src/keys.c    **** }
 609              		.loc 1 105 2 view .LVU207
 610              	.LVL49:
 611              	.LBB267:
 612              	.LBB260:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 94 20 view .LVU208
 614              	.LBB257:
  95:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 95 2 view .LVU209
 616              	.LBB254:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 86 13 view .LVU210
 618              	.LBB251:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 87 2 view .LVU211
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 87 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  88:src/keys.c    **** }
 623              		.loc 1 88 2 is_stmt 1 view .LVU213
 624              	.LBE251:
ARM GAS  /tmp/ccczu93l.s 			page 59


 625              	.LBE254:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 96 2 view .LVU214
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 96 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 630              		.loc 1 98 2 is_stmt 1 view .LVU216
 631              	.LVL51:
  98:src/keys.c    **** }
 632              		.loc 1 98 2 is_stmt 0 view .LVU217
 633              	.LBE257:
 634              	.LBE260:
 635              	.LBE267:
 561:src/keys.c    **** 
 636              		.loc 1 561 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 550:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 550 3 is_stmt 1 view .LVU219
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 551 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 550:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 550 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 551 3 is_stmt 1 view .LVU222
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 551 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 551 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 552:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 552 3 is_stmt 1 view .LVU225
 652              	.L49:
 552:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 552 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 552:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 552 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 552:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 552 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 554:src/keys.c    **** 		}
 662              		.loc 1 554 4 is_stmt 1 view .LVU229
 554:src/keys.c    **** 		}
 663              		.loc 1 554 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
ARM GAS  /tmp/ccczu93l.s 			page 60


 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 551 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 551 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 551 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 551:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 551 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 552:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 552 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB51:
2532:src/keys.c    **** 
2533:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2533 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2533 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2533 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
ARM GAS  /tmp/ccczu93l.s 			page 61


2534:src/keys.c    **** 	do {
 717              		.loc 1 2534 2 is_stmt 1 view .LVU239
2535:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2535 3 view .LVU240
2536:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2536 4 view .LVU241
 720              		.loc 1 2536 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2537:src/keys.c    **** 			if (PcWrapped)
2538:src/keys.c    **** 				break;
2539:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2539 4 is_stmt 1 view .LVU243
2540:src/keys.c    **** 				return pc;
2541:src/keys.c    **** 			}
2542:src/keys.c    **** 		}
2543:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2543 3 view .LVU244
 727              		.loc 1 2543 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2537:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2537 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2543 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2544:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2544 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2536:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2536 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2537:src/keys.c    **** 				break;
 739              		.loc 1 2537 4 is_stmt 1 view .LVU250
2543:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2543 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2544 3 is_stmt 1 view .LVU252
2537:src/keys.c    **** 				break;
 744              		.loc 1 2537 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2539:src/keys.c    **** 				return pc;
 746              		.loc 1 2539 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2539:src/keys.c    **** 				return pc;
 750              		.loc 1 2539 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2545:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2546:src/keys.c    **** 	return pc;
2547:src/keys.c    **** }
ARM GAS  /tmp/ccczu93l.s 			page 62


 753              		.loc 1 2547 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2544:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2544 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2545:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2545 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2544:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2544 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2545:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2545 10 is_stmt 1 view .LVU260
2545:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2545 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2545:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2545 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2547 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2547 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE51:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB59:
 621:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 621 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB268:
 623:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 623 3 view .LVU266
ARM GAS  /tmp/ccczu93l.s 			page 63


 624:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 624 3 view .LVU267
 623:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 623 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 624:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 624 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 624:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 624 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 632:src/keys.c    **** #endif
 812              		.loc 1 632 7 is_stmt 1 view .LVU271
 632:src/keys.c    **** #endif
 813              		.loc 1 632 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 632:src/keys.c    **** #endif
 815              		.loc 1 632 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 642:src/keys.c    **** 		}
 818              		.loc 1 642 4 is_stmt 1 view .LVU274
 642:src/keys.c    **** 		}
 819              		.loc 1 642 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE268:
 646:src/keys.c    **** 
 825              		.loc 1 646 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB269:
 625:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 625 4 is_stmt 1 view .LVU277
 625:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 625 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 625:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 625 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 625:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 625 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 626:src/keys.c    **** 		}
 839              		.loc 1 626 4 is_stmt 1 view .LVU281
 626:src/keys.c    **** 		}
 840              		.loc 1 626 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 626:src/keys.c    **** 		}
 843              		.loc 1 626 11 view .LVU283
ARM GAS  /tmp/ccczu93l.s 			page 64


 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE269:
 851              		.cfi_endproc
 852              	.LFE59:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB61:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 503 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 506:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 506 2 view .LVU285
 506:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 506 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 511:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 511 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 506:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 506 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 507:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 507 2 is_stmt 1 view .LVU289
 508:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 508 2 view .LVU290
 511:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 511 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 508:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 508 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 511:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 511 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 508:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 508 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
ARM GAS  /tmp/ccczu93l.s 			page 65


 509:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 509 2 is_stmt 1 view .LVU295
 509:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 509 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 510:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 510 2 is_stmt 1 view .LVU297
 511:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 511 2 view .LVU298
 512:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 512 2 view .LVU299
 513:src/keys.c    **** }
 898              		.loc 1 513 2 view .LVU300
 514:src/keys.c    **** 
 899              		.loc 1 514 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE61:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB29:
1505:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1505 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1506:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1506 2 view .LVU303
 923              	.LVL67:
 924              	.LBB270:
 925              	.LBI270:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 503 13 view .LVU304
 927              	.LBB271:
 504:src/keys.c    **** 		return;
 928              		.loc 1 504 2 view .LVU305
 929              	.LBE271:
 930              	.LBE270:
1505:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1505 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB273:
 937              	.LBB272:
 504:src/keys.c    **** 		return;
ARM GAS  /tmp/ccczu93l.s 			page 66


 938              		.loc 1 504 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 504:src/keys.c    **** 		return;
 941              		.loc 1 504 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 504:src/keys.c    **** 		return;
 946              		.loc 1 504 5 view .LVU309
 947              	.LBE272:
 948              	.LBE273:
1507:src/keys.c    **** }
 949              		.loc 1 1507 2 is_stmt 1 view .LVU310
1507:src/keys.c    **** }
 950              		.loc 1 1507 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1508:src/keys.c    **** 
 955              		.loc 1 1508 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE29:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB30:
1510:src/keys.c    **** 	const unsigned int base = CmdBase;
 975              		.loc 1 1510 39 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1511:src/keys.c    **** 	int r = RARG(base, val 
 979              		.loc 1 1511 2 view .LVU314
1511:src/keys.c    **** 	int r = RARG(base, val 
 980              		.loc 1 1511 28 is_stmt 0 view .LVU315
 981 0000 1C4B     		ldr	r3, .L106
1510:src/keys.c    **** 	const unsigned int base = CmdBase;
 982              		.loc 1 1510 39 view .LVU316
 983 0002 70B5     		push	{r4, r5, r6, lr}
 984              		.cfi_def_cfa_offset 16
 985              		.cfi_offset 4, -16
 986              		.cfi_offset 5, -12
 987              		.cfi_offset 6, -8
ARM GAS  /tmp/ccczu93l.s 			page 67


 988              		.cfi_offset 14, -4
1512:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 989              		.loc 1 1512 10 view .LVU317
 990 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 991 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1511:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1511 21 view .LVU318
 993 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 994              	.LVL71:
1512:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 995              		.loc 1 1512 2 is_stmt 1 view .LVU319
1512:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 996              		.loc 1 1512 10 is_stmt 0 view .LVU320
 997 000a EE07     		lsls	r6, r5, #31
1515:src/keys.c    **** 
 998              		.loc 1 1515 30 view .LVU321
 999 000c 1A4E     		ldr	r6, .L106+4
 1000 000e 3668     		ldr	r6, [r6]
1512:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1512 10 view .LVU322
 1002 0010 01F08003 		and	r3, r1, #128
 1003 0014 0344     		add	r3, r3, r0
1515:src/keys.c    **** 
 1004              		.loc 1 1515 30 view .LVU323
 1005 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1512:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1006              		.loc 1 1512 10 view .LVU324
 1007 001a 02F12004 		add	r4, r2, #32
 1008 001e 48BF     		it	mi
 1009 0020 7033     		addmi	r3, r3, #112
 1010 0022 2402     		lsls	r4, r4, #8
 1011 0024 1C43     		orrs	r4, r4, r3
 1012              	.LVL72:
1515:src/keys.c    **** 
 1013              		.loc 1 1515 2 is_stmt 1 view .LVU325
1515:src/keys.c    **** 
 1014              		.loc 1 1515 77 is_stmt 0 view .LVU326
 1015 0026 3307     		lsls	r3, r6, #28
 1016 0028 1DD5     		bpl	.L92
1515:src/keys.c    **** 
 1017              		.loc 1 1515 77 discriminator 2 view .LVU327
 1018 002a 15F0400F 		tst	r5, #64
 1019 002e 0CBF     		ite	eq
 1020 0030 0425     		moveq	r5, #4
 1021 0032 0825     		movne	r5, #8
 1022              	.L87:
 1023              	.LVL73:
1517:src/keys.c    **** 		/*
 1024              		.loc 1 1517 2 is_stmt 1 discriminator 6 view .LVU328
1517:src/keys.c    **** 		/*
 1025              		.loc 1 1517 5 is_stmt 0 discriminator 6 view .LVU329
 1026 0034 0E06     		lsls	r6, r1, #24
 1027 0036 12D4     		bmi	.L88
1532:src/keys.c    **** 			// Disallow odd complex register > 98
 1028              		.loc 1 1532 3 is_stmt 1 view .LVU330
1532:src/keys.c    **** 			// Disallow odd complex register > 98
 1029              		.loc 1 1532 20 is_stmt 0 view .LVU331
ARM GAS  /tmp/ccczu93l.s 			page 68


 1030 0038 104B     		ldr	r3, .L106+8
 1031 003a 03EB0213 		add	r3, r3, r2, lsl #4
 1032 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1532:src/keys.c    **** 			// Disallow odd complex register > 98
 1033              		.loc 1 1532 6 view .LVU332
 1034 0040 D906     		lsls	r1, r3, #27
 1035 0042 09D5     		bpl	.L89
1532:src/keys.c    **** 			// Disallow odd complex register > 98
 1036              		.loc 1 1532 27 discriminator 1 view .LVU333
 1037 0044 6228     		cmp	r0, #98
 1038 0046 07D9     		bls	.L89
1532:src/keys.c    **** 			// Disallow odd complex register > 98
 1039              		.loc 1 1532 52 discriminator 2 view .LVU334
 1040 0048 C307     		lsls	r3, r0, #31
 1041 004a 02D4     		bmi	.L96
1536:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1042              		.loc 1 1536 3 is_stmt 1 view .LVU335
1536:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1043              		.loc 1 1536 28 is_stmt 0 view .LVU336
 1044 004c 223A     		subs	r2, r2, #34
 1045              	.LVL74:
1536:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1046              		.loc 1 1536 6 view .LVU337
 1047 004e 012A     		cmp	r2, #1
 1048 0050 05D8     		bhi	.L88
 1049              	.LVL75:
 1050              	.L96:
1534:src/keys.c    **** #endif
 1051              		.loc 1 1534 11 view .LVU338
 1052 0052 3324     		movs	r4, #51
 1053              	.LVL76:
1543:src/keys.c    **** 
 1054              		.loc 1 1543 1 view .LVU339
 1055 0054 2046     		mov	r0, r4
 1056              	.LVL77:
1543:src/keys.c    **** 
 1057              		.loc 1 1543 1 view .LVU340
 1058 0056 70BD     		pop	{r4, r5, r6, pc}
 1059              	.LVL78:
 1060              	.L89:
1536:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1061              		.loc 1 1536 3 is_stmt 1 view .LVU341
1536:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1062              		.loc 1 1536 28 is_stmt 0 view .LVU342
 1063 0058 223A     		subs	r2, r2, #34
 1064              	.LVL79:
1536:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1065              		.loc 1 1536 6 view .LVU343
 1066 005a 012A     		cmp	r2, #1
 1067 005c 05D9     		bls	.L105
 1068              	.LVL80:
 1069              	.L88:
1541:src/keys.c    **** 	return r;
 1070              		.loc 1 1541 2 is_stmt 1 view .LVU344
 1071 005e FFF7FEFF 		bl	reset_arg
 1072              	.LVL81:
1542:src/keys.c    **** }
ARM GAS  /tmp/ccczu93l.s 			page 69


 1073              		.loc 1 1542 2 view .LVU345
1543:src/keys.c    **** 
 1074              		.loc 1 1543 1 is_stmt 0 view .LVU346
 1075 0062 2046     		mov	r0, r4
 1076 0064 70BD     		pop	{r4, r5, r6, pc}
 1077              	.LVL82:
 1078              	.L92:
1515:src/keys.c    **** 
 1079              		.loc 1 1515 77 view .LVU347
 1080 0066 0425     		movs	r5, #4
 1081 0068 E4E7     		b	.L87
 1082              	.LVL83:
 1083              	.L105:
1536:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1084              		.loc 1 1536 73 discriminator 1 view .LVU348
 1085 006a C5F16405 		rsb	r5, r5, #100
 1086              	.LVL84:
1536:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1087              		.loc 1 1536 52 discriminator 1 view .LVU349
 1088 006e 8542     		cmp	r5, r0
 1089 0070 F5D2     		bcs	.L88
 1090 0072 EEE7     		b	.L96
 1091              	.L107:
 1092              		.align	2
 1093              	.L106:
 1094 0074 00000000 		.word	StateWhileOn
 1095 0078 00000000 		.word	main_ram
 1096 007c 00000000 		.word	argcmds
 1097              		.cfi_endproc
 1098              	.LFE30:
 1100              		.section	.text.process_arg_shuffle,"ax",%progbits
 1101              		.align	1
 1102              		.p2align 2,,3
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu fpv4-sp-d16
 1108              	process_arg_shuffle:
 1109              	.LVL85:
 1110              	.LFB36:
1657:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1111              		.loc 1 1657 39 is_stmt 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
1658:src/keys.c    **** 	if (State2.numdigit < 4)
 1116              		.loc 1 1658 2 view .LVU351
1657:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1117              		.loc 1 1657 39 is_stmt 0 view .LVU352
 1118 0000 10B4     		push	{r4}
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 4, -4
1658:src/keys.c    **** 	if (State2.numdigit < 4)
 1121              		.loc 1 1658 31 view .LVU353
 1122 0002 0A4A     		ldr	r2, .L111
 1123 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 70


1658:src/keys.c    **** 	if (State2.numdigit < 4)
 1124              		.loc 1 1658 16 view .LVU354
 1125 0006 1189     		ldrh	r1, [r2, #8]
1658:src/keys.c    **** 	if (State2.numdigit < 4)
 1126              		.loc 1 1658 43 view .LVU355
 1127 0008 5C00     		lsls	r4, r3, #1
1658:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1658 21 view .LVU356
 1129 000a A040     		lsls	r0, r0, r4
 1130              	.LVL86:
1658:src/keys.c    **** 	if (State2.numdigit < 4)
 1131              		.loc 1 1658 40 view .LVU357
 1132 000c 0133     		adds	r3, r3, #1
 1133 000e DBB2     		uxtb	r3, r3
1658:src/keys.c    **** 	if (State2.numdigit < 4)
 1134              		.loc 1 1658 16 view .LVU358
 1135 0010 0844     		add	r0, r0, r1
 1136 0012 80B2     		uxth	r0, r0
1659:src/keys.c    **** 		return STATE_UNFINISHED;
 1137              		.loc 1 1659 5 view .LVU359
 1138 0014 032B     		cmp	r3, #3
1658:src/keys.c    **** 	if (State2.numdigit < 4)
 1139              		.loc 1 1658 40 view .LVU360
 1140 0016 D372     		strb	r3, [r2, #11]
1658:src/keys.c    **** 	if (State2.numdigit < 4)
 1141              		.loc 1 1658 16 view .LVU361
 1142 0018 1081     		strh	r0, [r2, #8]	@ movhi
1659:src/keys.c    **** 		return STATE_UNFINISHED;
 1143              		.loc 1 1659 2 is_stmt 1 view .LVU362
1659:src/keys.c    **** 		return STATE_UNFINISHED;
 1144              		.loc 1 1659 5 is_stmt 0 view .LVU363
 1145 001a 03D9     		bls	.L109
1661:src/keys.c    **** }
 1146              		.loc 1 1661 2 is_stmt 1 view .LVU364
1662:src/keys.c    **** 
 1147              		.loc 1 1662 1 is_stmt 0 view .LVU365
 1148 001c 5DF8044B 		ldr	r4, [sp], #4
 1149              		.cfi_remember_state
 1150              		.cfi_restore 4
 1151              		.cfi_def_cfa_offset 0
1661:src/keys.c    **** }
 1152              		.loc 1 1661 9 view .LVU366
 1153 0020 FFF7FEBF 		b	arg_eval
 1154              	.LVL87:
 1155              	.L109:
 1156              		.cfi_restore_state
1662:src/keys.c    **** 
 1157              		.loc 1 1662 1 view .LVU367
 1158 0024 3320     		movs	r0, #51
 1159 0026 5DF8044B 		ldr	r4, [sp], #4
 1160              		.cfi_restore 4
 1161              		.cfi_def_cfa_offset 0
 1162 002a 7047     		bx	lr
 1163              	.L112:
 1164              		.align	2
 1165              	.L111:
 1166 002c 00000000 		.word	StateWhileOn
ARM GAS  /tmp/ccczu93l.s 			page 71


 1167              		.cfi_endproc
 1168              	.LFE36:
 1170              		.section	.text.arg_digit,"ax",%progbits
 1171              		.align	1
 1172              		.p2align 2,,3
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	arg_digit:
 1179              	.LVL88:
 1180              	.LFB31:
1545:src/keys.c    **** 	int lim;
 1181              		.loc 1 1545 29 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
1546:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1185              		.loc 1 1546 2 view .LVU369
1551:src/keys.c    **** #endif
 1186              		.loc 1 1551 2 view .LVU370
1545:src/keys.c    **** 	int lim;
 1187              		.loc 1 1545 29 is_stmt 0 view .LVU371
 1188 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1189              		.cfi_def_cfa_offset 24
 1190              		.cfi_offset 3, -24
 1191              		.cfi_offset 4, -20
 1192              		.cfi_offset 5, -16
 1193              		.cfi_offset 6, -12
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
1551:src/keys.c    **** #endif
 1196              		.loc 1 1551 28 view .LVU372
 1197 0002 314C     		ldr	r4, .L138
1554:src/keys.c    **** 	
 1198              		.loc 1 1554 34 view .LVU373
 1199 0004 314A     		ldr	r2, .L138+4
1551:src/keys.c    **** #endif
 1200              		.loc 1 1551 28 view .LVU374
 1201 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1202              	.LVL89:
1553:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1203              		.loc 1 1553 2 is_stmt 1 view .LVU375
1553:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1204              		.loc 1 1553 33 is_stmt 0 view .LVU376
 1205 0008 2389     		ldrh	r3, [r4, #8]
1554:src/keys.c    **** 	
 1206              		.loc 1 1554 34 view .LVU377
 1207 000a 02EB0712 		add	r2, r2, r7, lsl #4
1553:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1208              		.loc 1 1553 41 view .LVU378
 1209 000e 03EB8303 		add	r3, r3, r3, lsl #2
1554:src/keys.c    **** 	
 1210              		.loc 1 1554 34 view .LVU379
 1211 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
1554:src/keys.c    **** 	
 1212              		.loc 1 1554 39 view .LVU380
ARM GAS  /tmp/ccczu93l.s 			page 72


 1213 0014 8E07     		lsls	r6, r1, #30
1553:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1214              		.loc 1 1553 46 view .LVU381
 1215 0016 00EB4305 		add	r5, r0, r3, lsl #1
 1216              	.LVL90:
1554:src/keys.c    **** 	
 1217              		.loc 1 1554 2 is_stmt 1 view .LVU382
1554:src/keys.c    **** 	
 1218              		.loc 1 1554 39 is_stmt 0 view .LVU383
 1219 001a C1F34000 		ubfx	r0, r1, #1, #1
 1220              	.LVL91:
1554:src/keys.c    **** 	
 1221              		.loc 1 1554 39 view .LVU384
 1222 001e 32D5     		bpl	.L114
 1223              	.LVL92:
1556:src/keys.c    **** 		// Handle local registers and flags
 1224              		.loc 1 1556 2 is_stmt 1 view .LVU385
1556:src/keys.c    **** 		// Handle local registers and flags
 1225              		.loc 1 1556 6 is_stmt 0 view .LVU386
 1226 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1556:src/keys.c    **** 		// Handle local registers and flags
 1227              		.loc 1 1556 5 view .LVU387
 1228 0022 D907     		lsls	r1, r3, #31
 1229 0024 28D5     		bpl	.L116
 1230              	.L127:
1554:src/keys.c    **** 	
 1231              		.loc 1 1554 39 view .LVU388
 1232 0026 0120     		movs	r0, #1
 1233              	.LVL93:
 1234              	.L115:
1558:src/keys.c    **** 		if (State2.runmode) {
 1235              		.loc 1 1558 3 is_stmt 1 view .LVU389
1559:src/keys.c    **** 			if (LocalRegs == 0)
 1236              		.loc 1 1559 3 view .LVU390
1559:src/keys.c    **** 			if (LocalRegs == 0)
 1237              		.loc 1 1559 6 is_stmt 0 view .LVU391
 1238 0028 5A06     		lsls	r2, r3, #25
 1239 002a 3BD5     		bpl	.L129
1560:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1240              		.loc 1 1560 4 is_stmt 1 view .LVU392
1560:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1241              		.loc 1 1560 8 is_stmt 0 view .LVU393
 1242 002c 284B     		ldr	r3, .L138+8
 1243 002e 1B68     		ldr	r3, [r3]
1560:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1244              		.loc 1 1560 7 view .LVU394
 1245 0030 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1246 0034 2BB3     		cbz	r3, .L122
1562:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1247              		.loc 1 1562 4 is_stmt 1 view .LVU395
1562:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1248              		.loc 1 1562 7 is_stmt 0 view .LVU396
 1249 0036 A8B3     		cbz	r0, .L129
1563:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1250              		.loc 1 1563 5 is_stmt 1 view .LVU397
1563:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1251              		.loc 1 1563 11 is_stmt 0 view .LVU398
ARM GAS  /tmp/ccczu93l.s 			page 73


 1252 0038 3846     		mov	r0, r7
 1253 003a FFF7FEFF 		bl	local_regs_rarg
 1254              	.LVL94:
1564:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1255              		.loc 1 1564 5 is_stmt 1 view .LVU399
1563:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1256              		.loc 1 1563 9 is_stmt 0 view .LVU400
 1257 003e 0138     		subs	r0, r0, #1
 1258              	.LVL95:
1563:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1259              		.loc 1 1563 9 view .LVU401
 1260 0040 0F28     		cmp	r0, #15
 1261 0042 A8BF     		it	ge
 1262 0044 0F20     		movge	r0, #15
 1263              	.LVL96:
 1264              	.L119:
1576:src/keys.c    **** 		return STATE_UNFINISHED;
 1265              		.loc 1 1576 2 is_stmt 1 view .LVU402
1576:src/keys.c    **** 		return STATE_UNFINISHED;
 1266              		.loc 1 1576 5 is_stmt 0 view .LVU403
 1267 0046 8542     		cmp	r5, r0
 1268 0048 1BDC     		bgt	.L122
 1269              	.L136:
1579:src/keys.c    **** 	++State2.numdigit;
 1270              		.loc 1 1579 2 is_stmt 1 view .LVU404
1580:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1271              		.loc 1 1580 2 is_stmt 0 view .LVU405
 1272 004a E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1579:src/keys.c    **** 	++State2.numdigit;
 1273              		.loc 1 1579 16 view .LVU406
 1274 004c 2581     		strh	r5, [r4, #8]	@ movhi
1580:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1275              		.loc 1 1580 2 is_stmt 1 view .LVU407
 1276 004e 0136     		adds	r6, r6, #1
1581:src/keys.c    **** 		int result = arg_eval(val);
 1277              		.loc 1 1581 16 is_stmt 0 view .LVU408
 1278 0050 05EB8503 		add	r3, r5, r5, lsl #2
1580:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1279              		.loc 1 1580 2 view .LVU409
 1280 0054 F6B2     		uxtb	r6, r6
1581:src/keys.c    **** 		int result = arg_eval(val);
 1281              		.loc 1 1581 5 view .LVU410
 1282 0056 B0EB430F 		cmp	r0, r3, lsl #1
1580:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1580 2 view .LVU411
 1284 005a E672     		strb	r6, [r4, #11]
1581:src/keys.c    **** 		int result = arg_eval(val);
 1285              		.loc 1 1581 2 is_stmt 1 view .LVU412
1581:src/keys.c    **** 		int result = arg_eval(val);
 1286              		.loc 1 1581 5 is_stmt 0 view .LVU413
 1287 005c 04DB     		blt	.L125
1581:src/keys.c    **** 		int result = arg_eval(val);
 1288              		.loc 1 1581 49 discriminator 1 view .LVU414
 1289 005e 3846     		mov	r0, r7
 1290              	.LVL97:
1581:src/keys.c    **** 		int result = arg_eval(val);
 1291              		.loc 1 1581 49 discriminator 1 view .LVU415
ARM GAS  /tmp/ccczu93l.s 			page 74


 1292 0060 FFF7FEFF 		bl	num_arg_digits
 1293              	.LVL98:
1581:src/keys.c    **** 		int result = arg_eval(val);
 1294              		.loc 1 1581 27 discriminator 1 view .LVU416
 1295 0064 8642     		cmp	r6, r0
 1296 0066 0CDB     		blt	.L122
 1297              	.L125:
 1298              	.LBB274:
1582:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1299              		.loc 1 1582 3 is_stmt 1 view .LVU417
1582:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1300              		.loc 1 1582 16 is_stmt 0 view .LVU418
 1301 0068 2846     		mov	r0, r5
 1302 006a FFF7FEFF 		bl	arg_eval
 1303              	.LVL99:
1583:src/keys.c    **** 			--State2.numdigit;
 1304              		.loc 1 1583 3 is_stmt 1 view .LVU419
1583:src/keys.c    **** 			--State2.numdigit;
 1305              		.loc 1 1583 6 is_stmt 0 view .LVU420
 1306 006e 3328     		cmp	r0, #51
 1307 0070 1AD0     		beq	.L134
 1308              	.LBE274:
1590:src/keys.c    **** 
 1309              		.loc 1 1590 1 view .LVU421
 1310 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1311              	.LVL100:
 1312              	.L137:
1556:src/keys.c    **** 		// Handle local registers and flags
 1313              		.loc 1 1556 2 is_stmt 1 view .LVU422
1556:src/keys.c    **** 		// Handle local registers and flags
 1314              		.loc 1 1556 5 is_stmt 0 view .LVU423
 1315 0074 DA07     		lsls	r2, r3, #31
 1316 0076 D6D4     		bmi	.L127
 1317              	.L116:
1570:src/keys.c    **** 	else {
 1318              		.loc 1 1570 3 is_stmt 1 view .LVU424
1570:src/keys.c    **** 	else {
 1319              		.loc 1 1570 65 is_stmt 0 view .LVU425
 1320 0078 5B06     		lsls	r3, r3, #25
 1321 007a 1FD4     		bmi	.L135
 1322 007c 6320     		movs	r0, #99
 1323              	.LVL101:
1576:src/keys.c    **** 		return STATE_UNFINISHED;
 1324              		.loc 1 1576 2 is_stmt 1 view .LVU426
1576:src/keys.c    **** 		return STATE_UNFINISHED;
 1325              		.loc 1 1576 5 is_stmt 0 view .LVU427
 1326 007e 8542     		cmp	r5, r0
 1327 0080 E3DD     		ble	.L136
 1328              	.LVL102:
 1329              	.L122:
1561:src/keys.c    **** 			if (is_reg) {
 1330              		.loc 1 1561 12 view .LVU428
 1331 0082 3320     		movs	r0, #51
1590:src/keys.c    **** 
 1332              		.loc 1 1590 1 view .LVU429
 1333 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1334              	.LVL103:
ARM GAS  /tmp/ccczu93l.s 			page 75


 1335              	.L114:
1554:src/keys.c    **** 	
 1336              		.loc 1 1554 39 discriminator 2 view .LVU430
 1337 0086 94F91530 		ldrsb	r3, [r4, #21]
 1338 008a 002B     		cmp	r3, #0
1556:src/keys.c    **** 		// Handle local registers and flags
 1339              		.loc 1 1556 6 discriminator 2 view .LVU431
 1340 008c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1554:src/keys.c    **** 	
 1341              		.loc 1 1554 39 discriminator 2 view .LVU432
 1342 008e F1DB     		blt	.L137
 1343              	.LVL104:
1556:src/keys.c    **** 		// Handle local registers and flags
 1344              		.loc 1 1556 2 is_stmt 1 view .LVU433
1556:src/keys.c    **** 		// Handle local registers and flags
 1345              		.loc 1 1556 5 is_stmt 0 view .LVU434
 1346 0090 DE07     		lsls	r6, r3, #31
 1347 0092 C9D4     		bmi	.L115
1569:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1348              		.loc 1 1569 7 is_stmt 1 view .LVU435
1572:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1349              		.loc 1 1572 3 view .LVU436
1572:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1350              		.loc 1 1572 7 is_stmt 0 view .LVU437
 1351 0094 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1352              	.LVL105:
1573:src/keys.c    **** 			lim = RARG_IND - 1;
 1353              		.loc 1 1573 3 is_stmt 1 view .LVU438
1573:src/keys.c    **** 			lim = RARG_IND - 1;
 1354              		.loc 1 1573 6 is_stmt 0 view .LVU439
 1355 0096 7F28     		cmp	r0, #127
 1356 0098 D5DD     		ble	.L119
1574:src/keys.c    **** 	}
 1357              		.loc 1 1574 8 discriminator 1 view .LVU440
 1358 009a 11F0010F 		tst	r1, #1
 1359 009e 18BF     		it	ne
 1360 00a0 7F20     		movne	r0, #127
 1361              	.LVL106:
1574:src/keys.c    **** 	}
 1362              		.loc 1 1574 8 discriminator 1 view .LVU441
 1363 00a2 D0E7     		b	.L119
 1364              	.LVL107:
 1365              	.L129:
1558:src/keys.c    **** 		if (State2.runmode) {
 1366              		.loc 1 1558 7 view .LVU442
 1367 00a4 0F20     		movs	r0, #15
 1368 00a6 CEE7     		b	.L119
 1369              	.LVL108:
 1370              	.L134:
 1371              	.LBB275:
1584:src/keys.c    **** 			State2.digval /= 10;
 1372              		.loc 1 1584 4 is_stmt 1 view .LVU443
1585:src/keys.c    **** 		}
 1373              		.loc 1 1585 18 is_stmt 0 view .LVU444
 1374 00a8 2389     		ldrh	r3, [r4, #8]
 1375 00aa 0A49     		ldr	r1, .L138+12
1584:src/keys.c    **** 			State2.digval /= 10;
ARM GAS  /tmp/ccczu93l.s 			page 76


 1376              		.loc 1 1584 4 view .LVU445
 1377 00ac E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
1585:src/keys.c    **** 		}
 1378              		.loc 1 1585 18 view .LVU446
 1379 00ae A1FB0313 		umull	r1, r3, r1, r3
 1380 00b2 DB08     		lsrs	r3, r3, #3
1584:src/keys.c    **** 			State2.digval /= 10;
 1381              		.loc 1 1584 4 view .LVU447
 1382 00b4 013A     		subs	r2, r2, #1
1585:src/keys.c    **** 		}
 1383              		.loc 1 1585 18 view .LVU448
 1384 00b6 2381     		strh	r3, [r4, #8]	@ movhi
1584:src/keys.c    **** 			State2.digval /= 10;
 1385              		.loc 1 1584 4 view .LVU449
 1386 00b8 E272     		strb	r2, [r4, #11]
1585:src/keys.c    **** 		}
 1387              		.loc 1 1585 4 is_stmt 1 view .LVU450
 1388              	.LBE275:
1590:src/keys.c    **** 
 1389              		.loc 1 1590 1 is_stmt 0 view .LVU451
 1390 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1391              	.LVL109:
 1392              	.L135:
1570:src/keys.c    **** 	else {
 1393              		.loc 1 1570 26 discriminator 1 view .LVU452
 1394 00bc 3846     		mov	r0, r7
 1395 00be FFF7FEFF 		bl	global_regs_rarg
 1396              	.LVL110:
1570:src/keys.c    **** 	else {
 1397              		.loc 1 1570 61 discriminator 1 view .LVU453
 1398 00c2 0138     		subs	r0, r0, #1
 1399 00c4 BFE7     		b	.L119
 1400              	.L139:
 1401 00c6 00BF     		.align	2
 1402              	.L138:
 1403 00c8 00000000 		.word	StateWhileOn
 1404 00cc 00000000 		.word	argcmds
 1405 00d0 00000000 		.word	main_ram
 1406 00d4 CDCCCCCC 		.word	-858993459
 1407              		.cfi_endproc
 1408              	.LFE31:
 1410              		.section	.text.intltr,"ax",%progbits
 1411              		.align	1
 1412              		.p2align 2,,3
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1416              		.fpu fpv4-sp-d16
 1418              	intltr:
 1419              	.LVL111:
 1420              	.LFB18:
 668:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1421              		.loc 1 668 26 is_stmt 1 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 669:src/keys.c    **** }
ARM GAS  /tmp/ccczu93l.s 			page 77


 1425              		.loc 1 669 2 view .LVU455
 669:src/keys.c    **** }
 1426              		.loc 1 669 10 is_stmt 0 view .LVU456
 1427 0000 0B4B     		ldr	r3, .L149
 1428 0002 1B68     		ldr	r3, [r3]
 1429 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 669:src/keys.c    **** }
 1430              		.loc 1 669 22 view .LVU457
 1431 0008 13F00103 		ands	r3, r3, #1
 1432 000c 05D0     		beq	.L142
 669:src/keys.c    **** }
 1433              		.loc 1 669 26 discriminator 1 view .LVU458
 1434 000e 094B     		ldr	r3, .L149+4
 1435 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 669:src/keys.c    **** }
 1436              		.loc 1 669 22 discriminator 1 view .LVU459
 1437 0012 5B06     		lsls	r3, r3, #25
 1438 0014 03D4     		bmi	.L148
 669:src/keys.c    **** }
 1439              		.loc 1 669 22 view .LVU460
 1440 0016 0120     		movs	r0, #1
 1441              	.LVL112:
 670:src/keys.c    **** 
 1442              		.loc 1 670 1 view .LVU461
 1443 0018 7047     		bx	lr
 1444              	.LVL113:
 1445              	.L142:
 669:src/keys.c    **** }
 1446              		.loc 1 669 22 view .LVU462
 1447 001a 1846     		mov	r0, r3
 1448              	.LVL114:
 669:src/keys.c    **** }
 1449              		.loc 1 669 22 view .LVU463
 1450 001c 7047     		bx	lr
 1451              	.LVL115:
 1452              	.L148:
 668:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1453              		.loc 1 668 26 view .LVU464
 1454 001e 10B5     		push	{r4, lr}
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 4, -8
 1457              		.cfi_offset 14, -4
 1458 0020 0446     		mov	r4, r0
 1459              	.LVL116:
 1460              	.LBB278:
 1461              	.LBI278:
 668:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1462              		.loc 1 668 12 is_stmt 1 view .LVU465
 1463              	.LBB279:
 669:src/keys.c    **** }
 1464              		.loc 1 669 52 is_stmt 0 view .LVU466
 1465 0022 FFF7FEFF 		bl	int_base
 1466              	.LVL117:
 669:src/keys.c    **** }
 1467              		.loc 1 669 43 view .LVU467
 1468 0026 8442     		cmp	r4, r0
 1469 0028 ACBF     		ite	ge
ARM GAS  /tmp/ccczu93l.s 			page 78


 1470 002a 0020     		movge	r0, #0
 1471 002c 0120     		movlt	r0, #1
 1472              	.LBE279:
 1473              	.LBE278:
 670:src/keys.c    **** 
 1474              		.loc 1 670 1 view .LVU468
 1475 002e 10BD     		pop	{r4, pc}
 1476              	.LVL118:
 1477              	.L150:
 670:src/keys.c    **** 
 1478              		.loc 1 670 1 view .LVU469
 1479              		.align	2
 1480              	.L149:
 1481 0030 00000000 		.word	main_ram
 1482 0034 00000000 		.word	StateWhileOn
 1483              		.cfi_endproc
 1484              	.LFE18:
 1486              		.section	.text.set_window,"ax",%progbits
 1487              		.align	1
 1488              		.p2align 2,,3
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv4-sp-d16
 1494              	set_window:
 1495              	.LVL119:
 1496              	.LFB53:
2548:src/keys.c    **** 
2549:src/keys.c    **** 
2550:src/keys.c    **** /*
2551:src/keys.c    ****  *  CAT command
2552:src/keys.c    ****  */
2553:src/keys.c    **** static int process_labellist(const keycode c) {
2554:src/keys.c    **** 	unsigned int pc = State2.digval;
2555:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2556:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2557:src/keys.c    **** 	const int opcode = getprog(pc);
2558:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2559:src/keys.c    **** 	const int direct = State2.runmode;
2560:src/keys.c    **** 	const enum shifts shift = reset_shift();
2561:src/keys.c    **** 	int op = STATE_UNFINISHED;
2562:src/keys.c    **** 
2563:src/keys.c    **** 	if (n < REGION_XROM) {
2564:src/keys.c    **** 		// Digits take you to that segment
2565:src/keys.c    **** 		pc = addrLIB(1, n);
2566:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2567:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2568:src/keys.c    **** 		State2.digval = pc;
2569:src/keys.c    **** 		return STATE_UNFINISHED;
2570:src/keys.c    **** 	}
2571:src/keys.c    **** 
2572:src/keys.c    **** 	switch (c | (shift << 8)) {
2573:src/keys.c    **** 
2574:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2575:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2576:src/keys.c    **** 		goto next;
2577:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 79


2578:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2579:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2580:src/keys.c    **** 	case K_DOWN:				// Find next label
2581:src/keys.c    **** 	next:
2582:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2583:src/keys.c    **** 		return STATE_UNFINISHED;
2584:src/keys.c    **** 
2585:src/keys.c    **** 	case K_UP:				// Find previous label
2586:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2587:src/keys.c    **** 		return STATE_UNFINISHED;
2588:src/keys.c    **** 
2589:src/keys.c    **** 	case K24:				// <- exits
2590:src/keys.c    **** 		break;
2591:src/keys.c    **** 
2592:src/keys.c    **** 	case K20:				// ENTER^
2593:src/keys.c    **** 	set_pc_and_exit:
2594:src/keys.c    **** 		set_pc(pc);			// forced branch
2595:src/keys.c    **** 		break;
2596:src/keys.c    **** 
2597:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2598:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2599:src/keys.c    **** 		goto set_pc_and_exit;
2600:src/keys.c    **** 
2601:src/keys.c    **** 	case K10:				// STO
2602:src/keys.c    **** 	case K11:				// RCL
2603:src/keys.c    **** 	  //#ifndef DM42	
2604:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2605:src/keys.c    **** 	  //#endif
2606:src/keys.c    **** /* #ifdef DM42 */
2607:src/keys.c    **** /* 	        op = OP_NIL; */
2608:src/keys.c    **** /* #endif	     */
2609:src/keys.c    **** 	  goto set_pc_and_exit;
2610:src/keys.c    **** #ifdef DM42
2611:src/keys.c    **** 	case K05:				// XEQ
2612:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2613:src/keys.c    **** 		goto xeq_or_gto;
2614:src/keys.c    **** 
2615:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2616:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2617:src/keys.c    **** 	xeq_or_gto:
2618:src/keys.c    **** 		if (label)
2619:src/keys.c    **** 			break;
2620:src/keys.c    **** 		return STATE_UNFINISHED;
2621:src/keys.c    **** #else
2622:src/keys.c    **** 	case K30:				// XEQ
2623:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2624:src/keys.c    **** 		goto xeq_or_gto;
2625:src/keys.c    **** 
2626:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2627:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2628:src/keys.c    **** 	xeq_or_gto:
2629:src/keys.c    **** 		if (label)
2630:src/keys.c    **** 			break;
2631:src/keys.c    **** 		return STATE_UNFINISHED;
2632:src/keys.c    **** #endif		
2633:src/keys.c    **** 	case K63:				// R/S
2634:src/keys.c    **** 		if (direct && label) {
ARM GAS  /tmp/ccczu93l.s 			page 80


2635:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2636:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2637:src/keys.c    **** 			break;
2638:src/keys.c    **** 		}
2639:src/keys.c    **** 		return STATE_UNFINISHED;
2640:src/keys.c    **** 
2641:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2642:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2643:src/keys.c    **** 		goto set_pc_and_exit;
2644:src/keys.c    **** 
2645:src/keys.c    **** 	default:
2646:src/keys.c    **** 		return STATE_UNFINISHED;
2647:src/keys.c    **** 	}
2648:src/keys.c    **** 	State2.digval = 0;
2649:src/keys.c    **** 	State2.labellist = 0;
2650:src/keys.c    **** 	return check_confirm(op);
2651:src/keys.c    **** }
2652:src/keys.c    **** 
2653:src/keys.c    **** 
2654:src/keys.c    **** static void set_window(int c) {
 1497              		.loc 1 2654 31 is_stmt 1 view -0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
2655:src/keys.c    **** 
2656:src/keys.c    **** 	if (State2.runmode) {
 1501              		.loc 1 2656 2 view .LVU471
2654:src/keys.c    **** 
 1502              		.loc 1 2654 31 is_stmt 0 view .LVU472
 1503 0000 38B5     		push	{r3, r4, r5, lr}
 1504              		.cfi_def_cfa_offset 16
 1505              		.cfi_offset 3, -16
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 5, -8
 1508              		.cfi_offset 14, -4
 1509              		.loc 1 2656 6 view .LVU473
 1510 0002 224C     		ldr	r4, .L166
 1511 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1512              		.loc 1 2656 5 view .LVU474
 1513 0006 5A06     		lsls	r2, r3, #25
 1514 0008 00D4     		bmi	.L163
 1515              	.LVL120:
 1516              	.L151:
2657:src/keys.c    **** 		process_cmdline_set_lift();
2658:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2659:src/keys.c    **** 		State2.disp_freeze = 0;
2660:src/keys.c    **** 		display();	
2661:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2662:src/keys.c    **** 			if (UState.intm) {
2663:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2664:src/keys.c    **** 					State2.window--;
2665:src/keys.c    **** 				return;
2666:src/keys.c    **** 			}
2667:src/keys.c    **** 			else 
2668:src/keys.c    **** 				State2.window = is_dblmode();
2669:src/keys.c    **** 		}
2670:src/keys.c    **** 		else {
ARM GAS  /tmp/ccczu93l.s 			page 81


2671:src/keys.c    **** 			if (UState.intm) {
2672:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2673:src/keys.c    **** 					State2.window++;
2674:src/keys.c    **** 				return;
2675:src/keys.c    **** 			}
2676:src/keys.c    **** 			else
2677:src/keys.c    **** 				State2.window = 0;
2678:src/keys.c    **** 		}
2679:src/keys.c    **** 		set_smode(SDISP_SHOW);
2680:src/keys.c    **** 	}
2681:src/keys.c    **** }
 1517              		.loc 1 2681 1 view .LVU475
 1518 000a 38BD     		pop	{r3, r4, r5, pc}
 1519              	.LVL121:
 1520              	.L163:
2657:src/keys.c    **** 		process_cmdline_set_lift();
 1521              		.loc 1 2657 3 is_stmt 1 view .LVU476
 1522 000c 0546     		mov	r5, r0
 1523 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1524              	.LVL122:
2659:src/keys.c    **** 		display();	
 1525              		.loc 1 2659 3 view .LVU477
2659:src/keys.c    **** 		display();	
 1526              		.loc 1 2659 22 is_stmt 0 view .LVU478
 1527 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1528 0014 6FF30413 		bfc	r3, #4, #1
 1529 0018 E375     		strb	r3, [r4, #23]
2660:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1530              		.loc 1 2660 3 is_stmt 1 view .LVU479
 1531 001a FFF7FEFF 		bl	display
 1532              	.LVL123:
2661:src/keys.c    **** 			if (UState.intm) {
 1533              		.loc 1 2661 3 view .LVU480
2662:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1534              		.loc 1 2662 8 is_stmt 0 view .LVU481
 1535 001e 1C4B     		ldr	r3, .L166+4
 1536 0020 1B68     		ldr	r3, [r3]
2661:src/keys.c    **** 			if (UState.intm) {
 1537              		.loc 1 2661 6 view .LVU482
 1538 0022 2C2D     		cmp	r5, #44
2662:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1539              		.loc 1 2662 8 view .LVU483
 1540 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2661:src/keys.c    **** 			if (UState.intm) {
 1541              		.loc 1 2661 6 view .LVU484
 1542 0028 18D0     		beq	.L164
2671:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1543              		.loc 1 2671 4 is_stmt 1 view .LVU485
2671:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1544              		.loc 1 2671 7 is_stmt 0 view .LVU486
 1545 002a 13F00103 		ands	r3, r3, #1
 1546 002e 09D1     		bne	.L165
2677:src/keys.c    **** 		}
 1547              		.loc 1 2677 5 is_stmt 1 view .LVU487
2677:src/keys.c    **** 		}
 1548              		.loc 1 2677 19 is_stmt 0 view .LVU488
 1549 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 82


 1550 0032 63F3C502 		bfi	r2, r3, #3, #3
 1551 0036 2275     		strb	r2, [r4, #20]
 1552              	.L157:
2679:src/keys.c    **** 	}
 1553              		.loc 1 2679 3 is_stmt 1 view .LVU489
 1554              	.LVL124:
 1555              	.LBB286:
 1556              	.LBI286:
 648:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1557              		.loc 1 648 13 view .LVU490
 1558              	.LBB287:
 649:src/keys.c    **** }
 1559              		.loc 1 649 2 view .LVU491
 649:src/keys.c    **** }
 1560              		.loc 1 649 15 is_stmt 0 view .LVU492
 1561 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1562 003a 013B     		subs	r3, r3, #1
 1563 003c 18BF     		it	ne
 1564 003e 0123     		movne	r3, #1
 1565 0040 6374     		strb	r3, [r4, #17]
 1566              	.LVL125:
 649:src/keys.c    **** }
 1567              		.loc 1 649 15 view .LVU493
 1568              	.LBE287:
 1569              	.LBE286:
 1570              		.loc 1 2681 1 view .LVU494
 1571 0042 38BD     		pop	{r3, r4, r5, pc}
 1572              	.LVL126:
 1573              	.L165:
2672:src/keys.c    **** 					State2.window++;
 1574              		.loc 1 2672 5 is_stmt 1 view .LVU495
2672:src/keys.c    **** 					State2.window++;
 1575              		.loc 1 2672 22 is_stmt 0 view .LVU496
 1576 0044 134A     		ldr	r2, .L166+8
2672:src/keys.c    **** 					State2.window++;
 1577              		.loc 1 2672 42 view .LVU497
 1578 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2672:src/keys.c    **** 					State2.window++;
 1579              		.loc 1 2672 8 view .LVU498
 1580 0048 1168     		ldr	r1, [r2]
2672:src/keys.c    **** 					State2.window++;
 1581              		.loc 1 2672 42 view .LVU499
 1582 004a C3F3C202 		ubfx	r2, r3, #3, #3
2672:src/keys.c    **** 					State2.window++;
 1583              		.loc 1 2672 8 view .LVU500
 1584 004e 8A42     		cmp	r2, r1
 1585 0050 DBDA     		bge	.L151
2673:src/keys.c    **** 				return;
 1586              		.loc 1 2673 6 is_stmt 1 view .LVU501
2673:src/keys.c    **** 				return;
 1587              		.loc 1 2673 19 is_stmt 0 view .LVU502
 1588 0052 0132     		adds	r2, r2, #1
 1589 0054 62F3C503 		bfi	r3, r2, #3, #3
 1590 0058 2375     		strb	r3, [r4, #20]
 1591              		.loc 1 2681 1 view .LVU503
 1592 005a 38BD     		pop	{r3, r4, r5, pc}
 1593              	.LVL127:
ARM GAS  /tmp/ccczu93l.s 			page 83


 1594              	.L164:
2662:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1595              		.loc 1 2662 4 is_stmt 1 view .LVU504
2662:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1596              		.loc 1 2662 7 is_stmt 0 view .LVU505
 1597 005c DB07     		lsls	r3, r3, #31
 1598 005e 0ED5     		bpl	.L155
 1599              	.LBB288:
 1600              	.LBI288:
2654:src/keys.c    **** 
 1601              		.loc 1 2654 13 is_stmt 1 view .LVU506
 1602              	.LVL128:
 1603              	.LBB289:
2663:src/keys.c    **** 					State2.window--;
 1604              		.loc 1 2663 5 view .LVU507
2663:src/keys.c    **** 					State2.window--;
 1605              		.loc 1 2663 22 is_stmt 0 view .LVU508
 1606 0060 0C4B     		ldr	r3, .L166+8
2663:src/keys.c    **** 					State2.window--;
 1607              		.loc 1 2663 8 view .LVU509
 1608 0062 1B68     		ldr	r3, [r3]
 1609 0064 002B     		cmp	r3, #0
 1610 0066 D0DD     		ble	.L151
2663:src/keys.c    **** 					State2.window--;
 1611              		.loc 1 2663 43 view .LVU510
 1612 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2663:src/keys.c    **** 					State2.window--;
 1613              		.loc 1 2663 26 view .LVU511
 1614 006a 13F0380F 		tst	r3, #56
 1615 006e CCD0     		beq	.L151
2664:src/keys.c    **** 				return;
 1616              		.loc 1 2664 6 is_stmt 1 view .LVU512
2664:src/keys.c    **** 				return;
 1617              		.loc 1 2664 12 is_stmt 0 view .LVU513
 1618 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2664:src/keys.c    **** 				return;
 1619              		.loc 1 2664 19 view .LVU514
 1620 0074 0732     		adds	r2, r2, #7
 1621 0076 62F3C503 		bfi	r3, r2, #3, #3
 1622 007a 2375     		strb	r3, [r4, #20]
 1623              	.LBE289:
 1624              	.LBE288:
 1625              		.loc 1 2681 1 view .LVU515
 1626 007c 38BD     		pop	{r3, r4, r5, pc}
 1627              	.LVL129:
 1628              	.L155:
2668:src/keys.c    **** 		}
 1629              		.loc 1 2668 5 is_stmt 1 view .LVU516
2668:src/keys.c    **** 		}
 1630              		.loc 1 2668 21 is_stmt 0 view .LVU517
 1631 007e FFF7FEFF 		bl	is_dblmode
 1632              	.LVL130:
2668:src/keys.c    **** 		}
 1633              		.loc 1 2668 19 view .LVU518
 1634 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1635 0084 60F3C503 		bfi	r3, r0, #3, #3
 1636 0088 2375     		strb	r3, [r4, #20]
ARM GAS  /tmp/ccczu93l.s 			page 84


 1637 008a D5E7     		b	.L157
 1638              	.L167:
 1639              		.align	2
 1640              	.L166:
 1641 008c 00000000 		.word	StateWhileOn
 1642 0090 00000000 		.word	main_ram
 1643 0094 00000000 		.word	IntMaxWindow
 1644              		.cfi_endproc
 1645              	.LFE53:
 1647              		.section	.text.arg_storcl,"ax",%progbits
 1648              		.align	1
 1649              		.p2align 2,,3
 1650              		.syntax unified
 1651              		.thumb
 1652              		.thumb_func
 1653              		.fpu fpv4-sp-d16
 1655              	arg_storcl:
 1656              	.LVL131:
 1657              	.LFB34:
1615:src/keys.c    **** 	unsigned int b = CmdBase;
 1658              		.loc 1 1615 56 is_stmt 1 view -0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 1662              		@ link register save eliminated.
1616:src/keys.c    **** 
 1663              		.loc 1 1616 2 view .LVU520
1616:src/keys.c    **** 
 1664              		.loc 1 1616 19 is_stmt 0 view .LVU521
 1665 0000 0F4A     		ldr	r2, .L200
 1666 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1667              	.LVL132:
1618:src/keys.c    **** 		CmdBase += n;
 1668              		.loc 1 1618 2 is_stmt 1 view .LVU522
 1669              	.LBB298:
 1670              	.LBI298:
1606:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1671              		.loc 1 1606 12 view .LVU523
 1672              	.LBB299:
1611:src/keys.c    **** #endif
 1673              		.loc 1 1611 2 view .LVU524
1611:src/keys.c    **** #endif
 1674              		.loc 1 1611 41 is_stmt 0 view .LVU525
 1675 0004 032B     		cmp	r3, #3
 1676 0006 14D0     		beq	.L169
1611:src/keys.c    **** #endif
 1677              		.loc 1 1611 24 view .LVU526
 1678 0008 0A2B     		cmp	r3, #10
 1679 000a 12D0     		beq	.L169
 1680              	.LVL133:
 1681              	.LBB300:
 1682              	.LBI300:
1606:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1683              		.loc 1 1606 12 is_stmt 1 view .LVU527
 1684              	.LBB301:
1611:src/keys.c    **** #endif
 1685              		.loc 1 1611 41 is_stmt 0 view .LVU528
ARM GAS  /tmp/ccczu93l.s 			page 85


 1686 000c 19B1     		cbz	r1, .L170
1611:src/keys.c    **** #endif
 1687              		.loc 1 1611 51 view .LVU529
 1688 000e 152B     		cmp	r3, #21
 1689 0010 0FD0     		beq	.L169
1611:src/keys.c    **** #endif
 1690              		.loc 1 1611 70 view .LVU530
 1691 0012 1A2B     		cmp	r3, #26
 1692 0014 0DD0     		beq	.L169
 1693              	.L170:
 1694              	.LVL134:
1611:src/keys.c    **** #endif
 1695              		.loc 1 1611 70 view .LVU531
 1696              	.LBE301:
 1697              	.LBE300:
 1698              	.LBE299:
 1699              	.LBE298:
1623:src/keys.c    **** 		b -= n;
 1700              		.loc 1 1623 2 is_stmt 1 view .LVU532
1623:src/keys.c    **** 		b -= n;
 1701              		.loc 1 1623 5 is_stmt 0 view .LVU533
 1702 0016 8342     		cmp	r3, r0
 1703 0018 09D3     		bcc	.L175
1624:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1704              		.loc 1 1624 3 is_stmt 1 view .LVU534
1624:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1705              		.loc 1 1624 5 is_stmt 0 view .LVU535
 1706 001a 1B1A     		subs	r3, r3, r0
 1707              	.LVL135:
1625:src/keys.c    **** 			CmdBase = b;
 1708              		.loc 1 1625 3 is_stmt 1 view .LVU536
 1709              	.LBB302:
 1710              	.LBI302:
1606:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1711              		.loc 1 1606 12 view .LVU537
 1712              	.LBB303:
1611:src/keys.c    **** #endif
 1713              		.loc 1 1611 2 view .LVU538
1611:src/keys.c    **** #endif
 1714              		.loc 1 1611 41 is_stmt 0 view .LVU539
 1715 001c 032B     		cmp	r3, #3
 1716 001e 0CD0     		beq	.L173
1611:src/keys.c    **** #endif
 1717              		.loc 1 1611 24 view .LVU540
 1718 0020 0A2B     		cmp	r3, #10
 1719 0022 0AD0     		beq	.L173
 1720              	.LVL136:
 1721              	.LBB304:
 1722              	.LBI304:
1606:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1723              		.loc 1 1606 12 is_stmt 1 view .LVU541
 1724              	.LBB305:
1611:src/keys.c    **** #endif
 1725              		.loc 1 1611 41 is_stmt 0 view .LVU542
 1726 0024 19B1     		cbz	r1, .L175
1611:src/keys.c    **** #endif
 1727              		.loc 1 1611 51 view .LVU543
ARM GAS  /tmp/ccczu93l.s 			page 86


 1728 0026 152B     		cmp	r3, #21
 1729 0028 07D0     		beq	.L173
1611:src/keys.c    **** #endif
 1730              		.loc 1 1611 70 view .LVU544
 1731 002a 1A2B     		cmp	r3, #26
 1732 002c 05D0     		beq	.L173
 1733              	.LVL137:
 1734              	.L175:
1611:src/keys.c    **** #endif
 1735              		.loc 1 1611 70 view .LVU545
 1736              	.LBE305:
 1737              	.LBE304:
 1738              	.LBE303:
 1739              	.LBE302:
1630:src/keys.c    **** }
 1740              		.loc 1 1630 9 view .LVU546
 1741 002e 0020     		movs	r0, #0
 1742              	.LVL138:
1631:src/keys.c    **** 
 1743              		.loc 1 1631 1 view .LVU547
 1744 0030 7047     		bx	lr
 1745              	.LVL139:
 1746              	.L169:
1619:src/keys.c    **** 		return 1;
 1747              		.loc 1 1619 3 is_stmt 1 view .LVU548
1619:src/keys.c    **** 		return 1;
 1748              		.loc 1 1619 11 is_stmt 0 view .LVU549
 1749 0032 1844     		add	r0, r0, r3
 1750              	.LVL140:
1619:src/keys.c    **** 		return 1;
 1751              		.loc 1 1619 11 view .LVU550
 1752 0034 D077     		strb	r0, [r2, #31]
1620:src/keys.c    **** 	}
 1753              		.loc 1 1620 3 is_stmt 1 view .LVU551
1620:src/keys.c    **** 	}
 1754              		.loc 1 1620 10 is_stmt 0 view .LVU552
 1755 0036 0120     		movs	r0, #1
 1756 0038 7047     		bx	lr
 1757              	.LVL141:
 1758              	.L173:
1626:src/keys.c    **** 			return 1;
 1759              		.loc 1 1626 4 is_stmt 1 view .LVU553
1626:src/keys.c    **** 			return 1;
 1760              		.loc 1 1626 12 is_stmt 0 view .LVU554
 1761 003a D377     		strb	r3, [r2, #31]
1627:src/keys.c    **** 		}
 1762              		.loc 1 1627 4 is_stmt 1 view .LVU555
1627:src/keys.c    **** 		}
 1763              		.loc 1 1627 11 is_stmt 0 view .LVU556
 1764 003c 0120     		movs	r0, #1
 1765              	.LVL142:
1627:src/keys.c    **** 		}
 1766              		.loc 1 1627 11 view .LVU557
 1767 003e 7047     		bx	lr
 1768              	.L201:
 1769              		.align	2
 1770              	.L200:
ARM GAS  /tmp/ccczu93l.s 			page 87


 1771 0040 00000000 		.word	StateWhileOn
 1772              		.cfi_endproc
 1773              	.LFE34:
 1775              		.section	.text.process_arg,"ax",%progbits
 1776              		.align	1
 1777              		.p2align 2,,3
 1778              		.syntax unified
 1779              		.thumb
 1780              		.thumb_func
 1781              		.fpu fpv4-sp-d16
 1783              	process_arg:
 1784              	.LVL143:
 1785              	.LFB37:
1665:src/keys.c    **** 	unsigned int base = CmdBase;
 1786              		.loc 1 1665 41 is_stmt 1 view -0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 8
 1789              		@ frame_needed = 0, uses_anonymous_args = 0
1666:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1790              		.loc 1 1666 2 view .LVU559
1665:src/keys.c    **** 	unsigned int base = CmdBase;
 1791              		.loc 1 1665 41 is_stmt 0 view .LVU560
 1792 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1793              		.cfi_def_cfa_offset 36
 1794              		.cfi_offset 4, -36
 1795              		.cfi_offset 5, -32
 1796              		.cfi_offset 6, -28
 1797              		.cfi_offset 7, -24
 1798              		.cfi_offset 8, -20
 1799              		.cfi_offset 9, -16
 1800              		.cfi_offset 10, -12
 1801              		.cfi_offset 11, -8
 1802              		.cfi_offset 14, -4
1666:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1803              		.loc 1 1666 22 view .LVU561
 1804 0004 A94D     		ldr	r5, .L317
1668:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1805              		.loc 1 1668 31 view .LVU562
 1806 0006 DFF8B4B2 		ldr	fp, .L317+16
1666:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1807              		.loc 1 1666 22 view .LVU563
 1808 000a EF7F     		ldrb	r7, [r5, #31]	@ zero_extendqisi2
 1809              	.LVL144:
1667:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1810              		.loc 1 1667 2 is_stmt 1 view .LVU564
 1811              	.LBB327:
 1812              	.LBB328:
 1813              	.LBB329:
 1814              	.LBB330:
 133:src/keys.c    **** }
 1815              		.loc 1 133 23 is_stmt 0 view .LVU565
 1816 000c A84B     		ldr	r3, .L317+4
 1817              	.LBE330:
 1818              	.LBE329:
 223:src/keys.c    **** }
 1819              		.loc 1 223 28 view .LVU566
 1820 000e A94A     		ldr	r2, .L317+8
ARM GAS  /tmp/ccczu93l.s 			page 88


 1821              	.LBB333:
 1822              	.LBB331:
 133:src/keys.c    **** }
 1823              		.loc 1 133 23 view .LVU567
 1824 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1825              	.LBE331:
 1826              	.LBE333:
 1827              	.LBE328:
 1828              	.LBE327:
1668:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1829              		.loc 1 1668 31 view .LVU568
 1830 0012 0BEB0711 		add	r1, fp, r7, lsl #4
 1831              	.LBB337:
 1832              	.LBB335:
 223:src/keys.c    **** }
 1833              		.loc 1 223 28 view .LVU569
 1834 0016 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1835              	.LBE335:
 1836              	.LBE337:
1668:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1837              		.loc 1 1668 31 view .LVU570
 1838 001a 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1665:src/keys.c    **** 	unsigned int base = CmdBase;
 1839              		.loc 1 1665 41 view .LVU571
 1840 001c 83B0     		sub	sp, sp, #12
 1841              		.cfi_def_cfa_offset 48
1668:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1842              		.loc 1 1668 40 view .LVU572
 1843 001e 4A07     		lsls	r2, r1, #29
 1844 0020 58BF     		it	pl
 1845 0022 95F91580 		ldrsbpl	r8, [r5, #21]
1668:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1846              		.loc 1 1668 31 view .LVU573
 1847 0026 C1F38003 		ubfx	r3, r1, #2, #1
 1848 002a 0193     		str	r3, [sp, #4]
1669:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1849              		.loc 1 1669 20 view .LVU574
 1850 002c 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 1851 002e 0093     		str	r3, [sp]
1668:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1852              		.loc 1 1668 40 view .LVU575
 1853 0030 54BF     		ite	pl
 1854 0032 4FEAD878 		lsrpl	r8, r8, #31
 1855 0036 4FF00108 		movmi	r8, #1
1665:src/keys.c    **** 	unsigned int base = CmdBase;
 1856              		.loc 1 1665 41 view .LVU576
 1857 003a 0646     		mov	r6, r0
 1858              	.LVL145:
 1859              	.LBB338:
 1860              	.LBI327:
 200:src/keys.c    **** {
 1861              		.loc 1 200 14 is_stmt 1 view .LVU577
 1862              	.LBB336:
 202:src/keys.c    ****     // K00 - K05
 1863              		.loc 1 202 3 view .LVU578
 223:src/keys.c    **** }
 1864              		.loc 1 223 3 view .LVU579
ARM GAS  /tmp/ccczu93l.s 			page 89


 1865              	.LBB334:
 1866              	.LBI329:
 121:src/keys.c    **** {
 1867              		.loc 1 121 12 view .LVU580
 1868              	.LBB332:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1869              		.loc 1 123 2 view .LVU581
 133:src/keys.c    **** }
 1870              		.loc 1 133 2 view .LVU582
 133:src/keys.c    **** }
 1871              		.loc 1 133 2 is_stmt 0 view .LVU583
 1872              	.LBE332:
 1873              	.LBE334:
 223:src/keys.c    **** }
 1874              		.loc 1 223 10 view .LVU584
 1875 003c 4C46     		mov	r4, r9
 1876              	.LVL146:
 223:src/keys.c    **** }
 1877              		.loc 1 223 10 view .LVU585
 1878              	.LBE336:
 1879              	.LBE338:
1668:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1880              		.loc 1 1668 2 is_stmt 1 view .LVU586
1669:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1881              		.loc 1 1669 2 view .LVU587
1670:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1882              		.loc 1 1670 2 view .LVU588
 1883              	.LBB339:
 1884              	.LBI339:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 1885              		.loc 1 104 13 view .LVU589
 1886              	.LBE339:
 105:src/keys.c    **** }
 1887              		.loc 1 105 2 view .LVU590
 1888              	.LBB352:
 1889              	.LBB340:
 1890              	.LBI340:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 1891              		.loc 1 94 20 view .LVU591
 1892              	.LBB341:
  95:src/keys.c    **** 	State2.shifts = shift;
 1893              		.loc 1 95 2 view .LVU592
 1894              	.LBB342:
 1895              	.LBI342:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 1896              		.loc 1 86 13 view .LVU593
 1897              	.LBB343:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1898              		.loc 1 87 2 view .LVU594
 1899              	.LBE343:
 1900              	.LBE342:
 1901              	.LBE341:
 1902              	.LBE340:
 1903              	.LBE352:
1668:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1904              		.loc 1 1668 31 is_stmt 0 view .LVU595
 1905 003e 4FEA071A 		lsl	r10, r7, #4
ARM GAS  /tmp/ccczu93l.s 			page 90


 1906              	.LBB353:
 1907              	.LBB349:
 1908              	.LBB346:
 1909              	.LBB345:
 1910              	.LBB344:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1911              		.loc 1 87 18 view .LVU596
 1912 0042 FFF7FEFF 		bl	shift_down
 1913              	.LVL147:
  88:src/keys.c    **** }
 1914              		.loc 1 88 2 is_stmt 1 view .LVU597
  88:src/keys.c    **** }
 1915              		.loc 1 88 52 is_stmt 0 view .LVU598
 1916 0046 00B9     		cbnz	r0, .L204
 1917 0048 287C     		ldrb	r0, [r5, #16]	@ zero_extendqisi2
 1918              	.LVL148:
 1919              	.L204:
  88:src/keys.c    **** }
 1920              		.loc 1 88 52 view .LVU599
 1921              	.LBE344:
 1922              	.LBE345:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1923              		.loc 1 96 2 is_stmt 1 view .LVU600
 1924              	.LBE346:
 1925              	.LBE349:
 1926              	.LBE353:
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1927              		.loc 1 1671 38 is_stmt 0 view .LVU601
 1928 004a 0BEB0A01 		add	r1, fp, r10
 1929              	.LBB354:
 1930              	.LBB350:
 1931              	.LBB347:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1932              		.loc 1 96 16 view .LVU602
 1933 004e 4FF0000C 		mov	ip, #0
 1934              	.LBE347:
 1935              	.LBE350:
 1936              	.LBE354:
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1937              		.loc 1 1671 38 view .LVU603
 1938 0052 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1939              	.LBB355:
 1940              	.LBB351:
 1941              	.LBB348:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1942              		.loc 1 96 16 view .LVU604
 1943 0054 85F810C0 		strb	ip, [r5, #16]
  98:src/keys.c    **** }
 1944              		.loc 1 98 2 is_stmt 1 view .LVU605
 1945              	.LVL149:
  98:src/keys.c    **** }
 1946              		.loc 1 98 2 is_stmt 0 view .LVU606
 1947              	.LBE348:
 1948              	.LBE351:
 1949              	.LBE355:
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1950              		.loc 1 1671 2 is_stmt 1 view .LVU607
ARM GAS  /tmp/ccczu93l.s 			page 91


1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1951              		.loc 1 1671 61 is_stmt 0 view .LVU608
 1952 0058 8B06     		lsls	r3, r1, #26
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1953              		.loc 1 1671 38 view .LVU609
 1954 005a C1F3401E 		ubfx	lr, r1, #5, #1
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1955              		.loc 1 1671 61 view .LVU610
 1956 005e 46D5     		bpl	.L205
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1957              		.loc 1 1671 61 discriminator 1 view .LVU611
 1958 0060 697D     		ldrb	r1, [r5, #21]	@ zero_extendqisi2
 1959 0062 11F0C00F 		tst	r1, #192
 1960 0066 57D1     		bne	.L206
 1961              	.LVL150:
1672:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1962              		.loc 1 1672 2 is_stmt 1 view .LVU612
1672:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1963              		.loc 1 1672 35 is_stmt 0 view .LVU613
 1964 0068 292E     		cmp	r6, #41
 1965 006a 7DD0     		beq	.L207
1673:src/keys.c    **** 
 1966              		.loc 1 1673 11 view .LVU614
 1967 006c 0128     		cmp	r0, #1
 1968 006e 00F09280 		beq	.L208
1673:src/keys.c    **** 
 1969              		.loc 1 1673 32 discriminator 3 view .LVU615
 1970 0072 B9F1090F 		cmp	r9, #9
 1971 0076 00F28B80 		bhi	.L209
 1972              	.LVL151:
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
 1973              		.loc 1 1675 2 is_stmt 1 view .LVU616
1676:src/keys.c    **** 		reset_arg();
 1974              		.loc 1 1676 2 view .LVU617
1676:src/keys.c    **** 		reset_arg();
 1975              		.loc 1 1676 5 is_stmt 0 view .LVU618
 1976 007a 8C2F     		cmp	r7, #140
 1977 007c 50D8     		bhi	.L266
1681:src/keys.c    **** 	  switch (n) {
 1978              		.loc 1 1681 35 view .LVU619
 1979 007e 6969     		ldr	r1, [r5, #20]
 1980 0080 11F4103F 		tst	r1, #147456
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1981              		.loc 1 1671 61 view .LVU620
 1982 0084 4FF0010C 		mov	ip, #1
1681:src/keys.c    **** 	  switch (n) {
 1983              		.loc 1 1681 35 view .LVU621
 1984 0088 7BD0     		beq	.L270
 1985              	.LVL152:
 1986              	.L217:
1704:src/keys.c    **** 		// row column shorthand addressing
 1987              		.loc 1 1704 2 is_stmt 1 view .LVU622
1729:src/keys.c    **** 	case K_F:
 1988              		.loc 1 1729 2 view .LVU623
 1989 008a 2D2E     		cmp	r6, #45
 1990 008c 4AD8     		bhi	.L304
 1991 008e DFE816F0 		tbh	[pc, r6, lsl #1]
ARM GAS  /tmp/ccczu93l.s 			page 92


 1992              	.L268:
 1993 0092 4D00     		.2byte	(.L232-.L268)/2
 1994 0094 4D00     		.2byte	(.L232-.L268)/2
 1995 0096 4D00     		.2byte	(.L232-.L268)/2
 1996 0098 4D00     		.2byte	(.L232-.L268)/2
 1997 009a 4900     		.2byte	(.L304-.L268)/2
 1998 009c 4900     		.2byte	(.L304-.L268)/2
 1999 009e 4900     		.2byte	(.L304-.L268)/2
 2000 00a0 4900     		.2byte	(.L304-.L268)/2
 2001 00a2 4D00     		.2byte	(.L232-.L268)/2
 2002 00a4 4D00     		.2byte	(.L232-.L268)/2
 2003 00a6 4D00     		.2byte	(.L232-.L268)/2
 2004 00a8 4D00     		.2byte	(.L232-.L268)/2
 2005 00aa D500     		.2byte	(.L255-.L268)/2
 2006 00ac 4900     		.2byte	(.L304-.L268)/2
 2007 00ae 4900     		.2byte	(.L304-.L268)/2
 2008 00b0 4900     		.2byte	(.L304-.L268)/2
 2009 00b2 6801     		.2byte	(.L262-.L268)/2
 2010 00b4 4900     		.2byte	(.L304-.L268)/2
 2011 00b6 DB00     		.2byte	(.L253-.L268)/2
 2012 00b8 4900     		.2byte	(.L304-.L268)/2
 2013 00ba 4900     		.2byte	(.L304-.L268)/2
 2014 00bc 4900     		.2byte	(.L304-.L268)/2
 2015 00be 6201     		.2byte	(.L252-.L268)/2
 2016 00c0 4900     		.2byte	(.L304-.L268)/2
 2017 00c2 5601     		.2byte	(.L254-.L268)/2
 2018 00c4 5C01     		.2byte	(.L231-.L268)/2
 2019 00c6 4900     		.2byte	(.L304-.L268)/2
 2020 00c8 4900     		.2byte	(.L304-.L268)/2
 2021 00ca 9800     		.2byte	(.L249-.L268)/2
 2022 00cc 4900     		.2byte	(.L304-.L268)/2
 2023 00ce 4900     		.2byte	(.L304-.L268)/2
 2024 00d0 4001     		.2byte	(.L233-.L268)/2
 2025 00d2 4A01     		.2byte	(.L234-.L268)/2
 2026 00d4 5001     		.2byte	(.L235-.L268)/2
 2027 00d6 E100     		.2byte	(.L246-.L268)/2
 2028 00d8 4900     		.2byte	(.L304-.L268)/2
 2029 00da 4700     		.2byte	(.L266-.L268)/2
 2030 00dc 4900     		.2byte	(.L304-.L268)/2
 2031 00de ED00     		.2byte	(.L239-.L268)/2
 2032 00e0 4900     		.2byte	(.L304-.L268)/2
 2033 00e2 1701     		.2byte	(.L243-.L268)/2
 2034 00e4 B000     		.2byte	(.L225-.L268)/2
 2035 00e6 4900     		.2byte	(.L304-.L268)/2
 2036 00e8 4900     		.2byte	(.L304-.L268)/2
 2037 00ea 2601     		.2byte	(.L227-.L268)/2
 2038 00ec C600     		.2byte	(.L229-.L268)/2
 2039              	.LVL153:
 2040              		.p2align 1
 2041              	.L205:
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
 2042              		.loc 1 1675 2 view .LVU624
1676:src/keys.c    **** 		reset_arg();
 2043              		.loc 1 1676 5 is_stmt 0 view .LVU625
 2044 00ee 8C2F     		cmp	r7, #140
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
 2045              		.loc 1 1675 4 view .LVU626
ARM GAS  /tmp/ccczu93l.s 			page 93


 2046 00f0 29F08004 		bic	r4, r9, #128
 2047              	.LVL154:
1676:src/keys.c    **** 		reset_arg();
 2048              		.loc 1 1676 2 is_stmt 1 view .LVU627
1676:src/keys.c    **** 		reset_arg();
 2049              		.loc 1 1676 5 is_stmt 0 view .LVU628
 2050 00f4 14D8     		bhi	.L266
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2051              		.loc 1 1671 61 view .LVU629
 2052 00f6 F446     		mov	ip, lr
 2053              	.L214:
1681:src/keys.c    **** 	  switch (n) {
 2054              		.loc 1 1681 35 discriminator 1 view .LVU630
 2055 00f8 6969     		ldr	r1, [r5, #20]
 2056 00fa 11F4103F 		tst	r1, #147456
 2057 00fe C4D1     		bne	.L217
1682:src/keys.c    **** 	  case regX_idx:
 2058              		.loc 1 1682 4 is_stmt 1 view .LVU631
 2059 0100 672C     		cmp	r4, #103
 2060 0102 C2D8     		bhi	.L217
 2061              	.LVL155:
 2062              	.L269:
1682:src/keys.c    **** 	  case regX_idx:
 2063              		.loc 1 1682 4 is_stmt 0 view .LVU632
 2064 0104 632C     		cmp	r4, #99
 2065 0106 3CD9     		bls	.L270
 2066 0108 653C     		subs	r4, r4, #101
 2067 010a 022C     		cmp	r4, #2
 2068 010c 00F2AA81 		bhi	.L220
 2069 0110 DFE804F0 		tbb	[pc, r4]
 2070              	.L222:
 2071 0114 6B       		.byte	(.L224-.L222)/2
 2072 0115 65       		.byte	(.L223-.L222)/2
 2073 0116 6D       		.byte	(.L221-.L222)/2
 2074              	.LVL156:
 2075 0117 00       		.p2align 1
 2076              	.L206:
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
 2077              		.loc 1 1675 2 is_stmt 1 view .LVU633
1676:src/keys.c    **** 		reset_arg();
 2078              		.loc 1 1676 5 is_stmt 0 view .LVU634
 2079 0118 8C2F     		cmp	r7, #140
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
 2080              		.loc 1 1675 4 view .LVU635
 2081 011a 29F08004 		bic	r4, r9, #128
 2082              	.LVL157:
1676:src/keys.c    **** 		reset_arg();
 2083              		.loc 1 1676 2 is_stmt 1 view .LVU636
1676:src/keys.c    **** 		reset_arg();
 2084              		.loc 1 1676 5 is_stmt 0 view .LVU637
 2085 011e EBD9     		bls	.L214
 2086              	.LVL158:
 2087              	.L266:
1896:src/keys.c    **** 	default:
 2088              		.loc 1 1896 3 is_stmt 1 view .LVU638
 2089 0120 FFF7FEFF 		bl	reset_arg
 2090              	.LVL159:
ARM GAS  /tmp/ccczu93l.s 			page 94


 2091              	.L304:
1900:src/keys.c    **** }
 2092              		.loc 1 1900 9 is_stmt 0 view .LVU639
 2093 0124 3320     		movs	r0, #51
 2094              	.L202:
1901:src/keys.c    **** 
 2095              		.loc 1 1901 1 view .LVU640
 2096 0126 03B0     		add	sp, sp, #12
 2097              		.cfi_remember_state
 2098              		.cfi_def_cfa_offset 36
 2099              	.LVL160:
1901:src/keys.c    **** 
 2100              		.loc 1 1901 1 view .LVU641
 2101              		@ sp needed
 2102 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2103              	.LVL161:
 2104              	.L232:
 2105              		.cfi_restore_state
1784:src/keys.c    **** 			return arg_eval(n);
 2106              		.loc 1 1784 4 is_stmt 1 view .LVU642
1784:src/keys.c    **** 			return arg_eval(n);
 2107              		.loc 1 1784 8 is_stmt 0 view .LVU643
 2108 012c 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1784:src/keys.c    **** 			return arg_eval(n);
 2109              		.loc 1 1784 7 view .LVU644
 2110 012e 5F06     		lsls	r7, r3, #25
 2111              	.LVL162:
1784:src/keys.c    **** 			return arg_eval(n);
 2112              		.loc 1 1784 7 view .LVU645
 2113 0130 53D4     		bmi	.L251
1784:src/keys.c    **** 			return arg_eval(n);
 2114              		.loc 1 1784 19 discriminator 1 view .LVU646
 2115 0132 B8F1000F 		cmp	r8, #0
 2116 0136 50D1     		bne	.L251
1786:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2117              		.loc 1 1786 3 is_stmt 1 view .LVU647
1786:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2118              		.loc 1 1786 6 is_stmt 0 view .LVU648
 2119 0138 032E     		cmp	r6, #3
 2120 013a F3D8     		bhi	.L304
1787:src/keys.c    **** 		break;
 2121              		.loc 1 1787 4 is_stmt 1 view .LVU649
 2122              	.LVL163:
 2123              	.LBB356:
 2124              	.LBI356:
1592:src/keys.c    **** 	const unsigned int b = CmdBase;
 2125              		.loc 1 1592 12 view .LVU650
 2126              	.LBB357:
1593:src/keys.c    **** 
 2127              		.loc 1 1593 2 view .LVU651
1593:src/keys.c    **** 
 2128              		.loc 1 1593 21 is_stmt 0 view .LVU652
 2129 013c EA7F     		ldrb	r2, [r5, #31]	@ zero_extendqisi2
 2130              	.LVL164:
1595:src/keys.c    **** 	{
 2131              		.loc 1 1595 2 is_stmt 1 view .LVU653
1595:src/keys.c    **** 	{
ARM GAS  /tmp/ccczu93l.s 			page 95


 2132              		.loc 1 1595 16 is_stmt 0 view .LVU654
 2133 013e 0BEB0210 		add	r0, fp, r2, lsl #4
 2134 0142 1101     		lsls	r1, r2, #4
 2135 0144 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1595:src/keys.c    **** 	{
 2136              		.loc 1 1595 5 view .LVU655
 2137 0146 8006     		lsls	r0, r0, #26
 2138 0148 02D4     		bmi	.L238
1595:src/keys.c    **** 	{
 2139              		.loc 1 1595 40 view .LVU656
 2140 014a 513A     		subs	r2, r2, #81
 2141              	.LVL165:
1595:src/keys.c    **** 	{
 2142              		.loc 1 1595 23 view .LVU657
 2143 014c 0A2A     		cmp	r2, #10
 2144 014e E9D8     		bhi	.L304
 2145              	.LVL166:
 2146              	.L238:
1597:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 1597 3 is_stmt 1 view .LVU658
1597:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 1597 6 is_stmt 0 view .LVU659
 2149 0150 1F06     		lsls	r7, r3, #24
 2150 0152 E7D4     		bmi	.L304
1597:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 1597 18 view .LVU660
 2152 0154 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2153 0156 002B     		cmp	r3, #0
 2154 0158 E4D1     		bne	.L304
1599:src/keys.c    **** 			return STATE_UNFINISHED;
 2155              		.loc 1 1599 3 is_stmt 1 view .LVU661
1599:src/keys.c    **** 			return STATE_UNFINISHED;
 2156              		.loc 1 1599 17 is_stmt 0 view .LVU662
 2157 015a 5944     		add	r1, r1, fp
1599:src/keys.c    **** 			return STATE_UNFINISHED;
 2158              		.loc 1 1599 6 view .LVU663
 2159 015c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2160 015e 632B     		cmp	r3, #99
 2161 0160 E0D9     		bls	.L304
1601:src/keys.c    **** 	}
 2162              		.loc 1 1601 3 is_stmt 1 view .LVU664
1601:src/keys.c    **** 	}
 2163              		.loc 1 1601 10 is_stmt 0 view .LVU665
 2164 0162 06F16400 		add	r0, r6, #100
 2165 0166 27E0     		b	.L306
 2166              	.LVL167:
 2167              	.L207:
1601:src/keys.c    **** 	}
 2168              		.loc 1 1601 10 view .LVU666
 2169              	.LBE357:
 2170              	.LBE356:
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
 2171              		.loc 1 1675 2 is_stmt 1 view .LVU667
1676:src/keys.c    **** 		reset_arg();
 2172              		.loc 1 1676 2 view .LVU668
1676:src/keys.c    **** 		reset_arg();
 2173              		.loc 1 1676 5 is_stmt 0 view .LVU669
ARM GAS  /tmp/ccczu93l.s 			page 96


 2174 0168 8C2F     		cmp	r7, #140
 2175 016a D9D8     		bhi	.L266
1681:src/keys.c    **** 	  switch (n) {
 2176              		.loc 1 1681 35 view .LVU670
 2177 016c 6969     		ldr	r1, [r5, #20]
 2178 016e 11F4103F 		tst	r1, #147456
 2179 0172 41D1     		bne	.L226
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
 2180              		.loc 1 1675 4 view .LVU671
 2181 0174 29F08004 		bic	r4, r9, #128
1682:src/keys.c    **** 	  case regX_idx:
 2182              		.loc 1 1682 4 is_stmt 1 view .LVU672
 2183 0178 672C     		cmp	r4, #103
 2184 017a 3DD8     		bhi	.L226
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2185              		.loc 1 1671 61 is_stmt 0 view .LVU673
 2186 017c 4FF0010C 		mov	ip, #1
 2187 0180 C0E7     		b	.L269
 2188              	.LVL168:
 2189              	.L270:
1682:src/keys.c    **** 	  case regX_idx:
 2190              		.loc 1 1682 4 view .LVU674
 2191 0182 1CB1     		cbz	r4, .L219
 2192 0184 631F     		subs	r3, r4, #5
 2193 0186 042B     		cmp	r3, #4
 2194 0188 3FF67FAF 		bhi	.L217
 2195              	.L219:
1697:src/keys.c    **** 	  }
 2196              		.loc 1 1697 6 is_stmt 1 view .LVU675
1697:src/keys.c    **** 	  }
 2197              		.loc 1 1697 13 is_stmt 0 view .LVU676
 2198 018c 2046     		mov	r0, r4
 2199              	.LVL169:
1697:src/keys.c    **** 	  }
 2200              		.loc 1 1697 13 view .LVU677
 2201 018e 27E0     		b	.L305
 2202              	.LVL170:
 2203              	.L209:
1673:src/keys.c    **** 
 2204              		.loc 1 1673 42 discriminator 4 view .LVU678
 2205 0190 19F0800F 		tst	r9, #128
 2206 0194 3CD1     		bne	.L212
 2207              	.L208:
 2208              	.LVL171:
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
 2209              		.loc 1 1675 2 is_stmt 1 view .LVU679
1676:src/keys.c    **** 		reset_arg();
 2210              		.loc 1 1676 2 view .LVU680
1676:src/keys.c    **** 		reset_arg();
 2211              		.loc 1 1676 5 is_stmt 0 view .LVU681
 2212 0196 8C2F     		cmp	r7, #140
 2213 0198 C2D8     		bhi	.L266
1704:src/keys.c    **** 		// row column shorthand addressing
 2214              		.loc 1 1704 2 is_stmt 1 view .LVU682
1706:src/keys.c    **** 
 2215              		.loc 1 1706 3 view .LVU683
 2216              	.LVL172:
ARM GAS  /tmp/ccczu93l.s 			page 97


 2217              	.LBB358:
 2218              	.LBI358:
 169:src/keys.c    **** {
 2219              		.loc 1 169 5 view .LVU684
 2220              	.LBB359:
 171:src/keys.c    **** }
 2221              		.loc 1 171 2 view .LVU685
 171:src/keys.c    **** }
 2222              		.loc 1 171 18 is_stmt 0 view .LVU686
 2223 019a 474B     		ldr	r3, .L317+12
 2224 019c A3FB0623 		umull	r2, r3, r3, r6
 171:src/keys.c    **** }
 2225              		.loc 1 171 24 view .LVU687
 2226 01a0 03F0FC00 		and	r0, r3, #252
 2227              	.LVL173:
 171:src/keys.c    **** }
 2228              		.loc 1 171 24 view .LVU688
 2229 01a4 00EB9300 		add	r0, r0, r3, lsr #2
 171:src/keys.c    **** }
 2230              		.loc 1 171 18 view .LVU689
 2231 01a8 9B08     		lsrs	r3, r3, #2
 171:src/keys.c    **** }
 2232              		.loc 1 171 24 view .LVU690
 2233 01aa 4000     		lsls	r0, r0, #1
 171:src/keys.c    **** }
 2234              		.loc 1 171 33 view .LVU691
 2235 01ac 03EB4303 		add	r3, r3, r3, lsl #1
 171:src/keys.c    **** }
 2236              		.loc 1 171 12 view .LVU692
 2237 01b0 0B30     		adds	r0, r0, #11
 171:src/keys.c    **** }
 2238              		.loc 1 171 33 view .LVU693
 2239 01b2 A6EB4306 		sub	r6, r6, r3, lsl #1
 2240              	.LBE359:
 2241              	.LBE358:
1706:src/keys.c    **** 
 2242              		.loc 1 1706 10 view .LVU694
 2243 01b6 3044     		add	r0, r0, r6
 2244              	.LVL174:
 2245              	.L306:
1901:src/keys.c    **** 
 2246              		.loc 1 1901 1 view .LVU695
 2247 01b8 03B0     		add	sp, sp, #12
 2248              		.cfi_remember_state
 2249              		.cfi_def_cfa_offset 36
 2250              	.LVL175:
1901:src/keys.c    **** 
 2251              		.loc 1 1901 1 view .LVU696
 2252              		@ sp needed
 2253 01ba BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2254              		.cfi_restore 14
 2255              		.cfi_restore 11
 2256              		.cfi_restore 10
 2257              		.cfi_restore 9
 2258              		.cfi_restore 8
 2259              		.cfi_restore 7
 2260              		.cfi_restore 6
ARM GAS  /tmp/ccczu93l.s 			page 98


 2261              		.cfi_restore 5
 2262              		.cfi_restore 4
 2263              		.cfi_def_cfa_offset 0
 2264              	.LVL176:
1706:src/keys.c    **** 
 2265              		.loc 1 1706 10 view .LVU697
 2266 01be FFF7FEBF 		b	arg_eval
 2267              	.LVL177:
 2268              	.L249:
 2269              		.cfi_restore_state
1806:src/keys.c    **** 			return arg_eval(n);
 2270              		.loc 1 1806 3 is_stmt 1 view .LVU698
1806:src/keys.c    **** 			return arg_eval(n);
 2271              		.loc 1 1806 7 is_stmt 0 view .LVU699
 2272 01c2 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1806:src/keys.c    **** 			return arg_eval(n);
 2273              		.loc 1 1806 6 view .LVU700
 2274 01c4 5806     		lsls	r0, r3, #25
 2275              	.LVL178:
1806:src/keys.c    **** 			return arg_eval(n);
 2276              		.loc 1 1806 6 view .LVU701
 2277 01c6 08D4     		bmi	.L251
1806:src/keys.c    **** 			return arg_eval(n);
 2278              		.loc 1 1806 25 discriminator 1 view .LVU702
 2279 01c8 0121     		movs	r1, #1
 2280 01ca 0320     		movs	r0, #3
 2281 01cc FFF7FEFF 		bl	arg_storcl
 2282              	.LVL179:
1806:src/keys.c    **** 			return arg_eval(n);
 2283              		.loc 1 1806 18 discriminator 1 view .LVU703
 2284 01d0 0028     		cmp	r0, #0
 2285 01d2 A7D1     		bne	.L304
1806:src/keys.c    **** 			return arg_eval(n);
 2286              		.loc 1 1806 63 discriminator 2 view .LVU704
 2287 01d4 B8F1000F 		cmp	r8, #0
 2288 01d8 A4D0     		beq	.L304
 2289              	.LVL180:
 2290              	.L251:
1807:src/keys.c    **** 		break;
 2291              		.loc 1 1807 4 is_stmt 1 view .LVU705
1807:src/keys.c    **** 		break;
 2292              		.loc 1 1807 11 is_stmt 0 view .LVU706
 2293 01da 2046     		mov	r0, r4
 2294 01dc ECE7     		b	.L306
 2295              	.LVL181:
 2296              	.L223:
1688:src/keys.c    **** 	  case regT_idx:
 2297              		.loc 1 1688 6 is_stmt 1 view .LVU707
1688:src/keys.c    **** 	  case regT_idx:
 2298              		.loc 1 1688 13 is_stmt 0 view .LVU708
 2299 01de 0320     		movs	r0, #3
 2300              	.LVL182:
 2301              	.L305:
1901:src/keys.c    **** 
 2302              		.loc 1 1901 1 view .LVU709
 2303 01e0 03B0     		add	sp, sp, #12
 2304              		.cfi_remember_state
ARM GAS  /tmp/ccczu93l.s 			page 99


 2305              		.cfi_def_cfa_offset 36
 2306              	.LVL183:
1901:src/keys.c    **** 
 2307              		.loc 1 1901 1 view .LVU710
 2308              		@ sp needed
 2309 01e2 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2310              		.cfi_restore 14
 2311              		.cfi_restore 11
 2312              		.cfi_restore 10
 2313              		.cfi_restore 9
 2314              		.cfi_restore 8
 2315              		.cfi_restore 7
 2316              		.cfi_restore 6
 2317              		.cfi_restore 5
 2318              		.cfi_restore 4
 2319              		.cfi_def_cfa_offset 0
 2320              	.LVL184:
1686:src/keys.c    **** 	  case regZ_idx:
 2321              		.loc 1 1686 13 view .LVU711
 2322 01e6 FFF7FEBF 		b	arg_digit
 2323              	.LVL185:
 2324              	.L224:
 2325              		.cfi_restore_state
1686:src/keys.c    **** 	  case regZ_idx:
 2326              		.loc 1 1686 6 is_stmt 1 view .LVU712
1686:src/keys.c    **** 	  case regZ_idx:
 2327              		.loc 1 1686 13 is_stmt 0 view .LVU713
 2328 01ea 0220     		movs	r0, #2
 2329              	.LVL186:
1686:src/keys.c    **** 	  case regZ_idx:
 2330              		.loc 1 1686 13 view .LVU714
 2331 01ec F8E7     		b	.L305
 2332              	.LVL187:
 2333              	.L221:
1690:src/keys.c    **** 	  case 5:
 2334              		.loc 1 1690 6 is_stmt 1 view .LVU715
1690:src/keys.c    **** 	  case 5:
 2335              		.loc 1 1690 13 is_stmt 0 view .LVU716
 2336 01ee 0420     		movs	r0, #4
 2337              	.LVL188:
1690:src/keys.c    **** 	  case 5:
 2338              		.loc 1 1690 13 view .LVU717
 2339 01f0 F6E7     		b	.L305
 2340              	.LVL189:
 2341              	.L225:
1731:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2342              		.loc 1 1731 3 is_stmt 1 view .LVU718
1731:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2343              		.loc 1 1731 6 is_stmt 0 view .LVU719
 2344 01f2 BCF1000F 		cmp	ip, #0
 2345 01f6 95D0     		beq	.L304
 2346              	.L226:
1732:src/keys.c    **** 		break;
 2347              		.loc 1 1732 4 is_stmt 1 view .LVU720
 2348              	.LVL190:
 2349              	.LBB360:
 2350              	.LBI360:
ARM GAS  /tmp/ccczu93l.s 			page 100


  94:src/keys.c    **** 	enum shifts r = cur_shift();
 2351              		.loc 1 94 20 view .LVU721
 2352              	.LBB361:
  95:src/keys.c    **** 	State2.shifts = shift;
 2353              		.loc 1 95 2 view .LVU722
 2354              	.LBB362:
 2355              	.LBI362:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2356              		.loc 1 86 13 view .LVU723
 2357              	.LBB363:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2358              		.loc 1 87 2 view .LVU724
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2359              		.loc 1 87 18 is_stmt 0 view .LVU725
 2360 01f8 FFF7FEFF 		bl	shift_down
 2361              	.LVL191:
  88:src/keys.c    **** }
 2362              		.loc 1 88 2 is_stmt 1 view .LVU726
 2363              	.LBE363:
 2364              	.LBE362:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2365              		.loc 1 96 2 view .LVU727
 2366              	.LBE361:
 2367              	.LBE360:
1732:src/keys.c    **** 		break;
 2368              		.loc 1 1732 4 is_stmt 0 view .LVU728
 2369 01fc 009B     		ldr	r3, [sp]
 2370 01fe B3F10109 		subs	r9, r3, #1
 2371 0202 18BF     		it	ne
 2372 0204 4FF00109 		movne	r9, #1
 2373 0208 85F81090 		strb	r9, [r5, #16]
 2374              	.LBB366:
 2375              	.LBB364:
  98:src/keys.c    **** }
 2376              		.loc 1 98 2 is_stmt 1 view .LVU729
 2377              	.LBE364:
 2378              	.LBE366:
1900:src/keys.c    **** }
 2379              		.loc 1 1900 9 is_stmt 0 view .LVU730
 2380 020c 3320     		movs	r0, #51
 2381              	.LBB367:
 2382              	.LBB365:
  98:src/keys.c    **** }
 2383              		.loc 1 98 9 view .LVU731
 2384 020e 8AE7     		b	.L202
 2385              	.LVL192:
 2386              	.L212:
  98:src/keys.c    **** }
 2387              		.loc 1 98 9 view .LVU732
 2388              	.LBE365:
 2389              	.LBE367:
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
 2390              		.loc 1 1675 2 is_stmt 1 view .LVU733
1676:src/keys.c    **** 		reset_arg();
 2391              		.loc 1 1676 5 is_stmt 0 view .LVU734
 2392 0210 8C2F     		cmp	r7, #140
1675:src/keys.c    **** 	if (base >= NUM_RARG) {
ARM GAS  /tmp/ccczu93l.s 			page 101


 2393              		.loc 1 1675 4 view .LVU735
 2394 0212 29F08004 		bic	r4, r9, #128
 2395              	.LVL193:
1676:src/keys.c    **** 		reset_arg();
 2396              		.loc 1 1676 2 is_stmt 1 view .LVU736
1676:src/keys.c    **** 		reset_arg();
 2397              		.loc 1 1676 5 is_stmt 0 view .LVU737
 2398 0216 83D8     		bhi	.L266
1671:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2399              		.loc 1 1671 61 view .LVU738
 2400 0218 4FF0010C 		mov	ip, #1
 2401 021c 6CE7     		b	.L214
 2402              	.LVL194:
 2403              	.L229:
1744:src/keys.c    **** 			break;
 2404              		.loc 1 1744 3 is_stmt 1 view .LVU739
1744:src/keys.c    **** 			break;
 2405              		.loc 1 1744 18 is_stmt 0 view .LVU740
 2406 021e 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1744:src/keys.c    **** 			break;
 2407              		.loc 1 1744 6 view .LVU741
 2408 0220 13F0C00F 		tst	r3, #192
 2409 0224 7FF47EAF 		bne	.L304
1746:src/keys.c    **** 			CmdBase = RARG_STOM;
 2410              		.loc 1 1746 3 is_stmt 1 view .LVU742
1746:src/keys.c    **** 			CmdBase = RARG_STOM;
 2411              		.loc 1 1746 6 is_stmt 0 view .LVU743
 2412 0228 032F     		cmp	r7, #3
 2413 022a 00F0F080 		beq	.L310
1748:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2414              		.loc 1 1748 8 is_stmt 1 view .LVU744
1748:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2415              		.loc 1 1748 11 is_stmt 0 view .LVU745
 2416 022e 0A2F     		cmp	r7, #10
 2417 0230 7FF478AF 		bne	.L304
1749:src/keys.c    **** 		break;
 2418              		.loc 1 1749 4 is_stmt 1 view .LVU746
1749:src/keys.c    **** 		break;
 2419              		.loc 1 1749 12 is_stmt 0 view .LVU747
 2420 0234 7823     		movs	r3, #120
 2421 0236 EB77     		strb	r3, [r5, #31]
1900:src/keys.c    **** }
 2422              		.loc 1 1900 9 view .LVU748
 2423 0238 3320     		movs	r0, #51
 2424              	.LVL195:
1900:src/keys.c    **** }
 2425              		.loc 1 1900 9 view .LVU749
 2426 023a 74E7     		b	.L202
 2427              	.LVL196:
 2428              	.L255:
1854:src/keys.c    **** 			if (argcmds[base].label) {
 2429              		.loc 1 1854 3 is_stmt 1 view .LVU750
1854:src/keys.c    **** 			if (argcmds[base].label) {
 2430              		.loc 1 1854 6 is_stmt 0 view .LVU751
 2431 023c EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2432 023e 002B     		cmp	r3, #0
 2433 0240 00F0A180 		beq	.L311
ARM GAS  /tmp/ccczu93l.s 			page 102


1868:src/keys.c    **** 			return arg_eval(State2.digval);
 2434              		.loc 1 1868 10 is_stmt 1 view .LVU752
1869:src/keys.c    **** 		else if (stack_reg)
 2435              		.loc 1 1869 4 view .LVU753
1869:src/keys.c    **** 		else if (stack_reg)
 2436              		.loc 1 1869 11 is_stmt 0 view .LVU754
 2437 0244 2889     		ldrh	r0, [r5, #8]
 2438              	.LVL197:
1869:src/keys.c    **** 		else if (stack_reg)
 2439              		.loc 1 1869 11 view .LVU755
 2440 0246 B7E7     		b	.L306
 2441              	.LVL198:
 2442              	.L253:
1846:src/keys.c    **** 		break;
 2443              		.loc 1 1846 3 is_stmt 1 view .LVU756
 2444 0248 0021     		movs	r1, #0
 2445 024a 0620     		movs	r0, #6
 2446              	.LVL199:
1846:src/keys.c    **** 		break;
 2447              		.loc 1 1846 3 is_stmt 0 view .LVU757
 2448 024c FFF7FEFF 		bl	arg_storcl
 2449              	.LVL200:
1847:src/keys.c    **** 
 2450              		.loc 1 1847 3 is_stmt 1 view .LVU758
1900:src/keys.c    **** }
 2451              		.loc 1 1900 9 is_stmt 0 view .LVU759
 2452 0250 3320     		movs	r0, #51
1847:src/keys.c    **** 
 2453              		.loc 1 1847 3 view .LVU760
 2454 0252 68E7     		b	.L202
 2455              	.LVL201:
 2456              	.L246:
1799:src/keys.c    **** 			reset_arg();
 2457              		.loc 1 1799 3 is_stmt 1 view .LVU761
1799:src/keys.c    **** 			reset_arg();
 2458              		.loc 1 1799 6 is_stmt 0 view .LVU762
 2459 0254 212F     		cmp	r7, #33
 2460 0256 00F0C780 		beq	.L247
1799:src/keys.c    **** 			reset_arg();
 2461              		.loc 1 1799 25 discriminator 1 view .LVU763
 2462 025a 732F     		cmp	r7, #115
 2463 025c 00F0C480 		beq	.L247
1803:src/keys.c    **** 		break;
 2464              		.loc 1 1803 3 is_stmt 1 view .LVU764
 2465 0260 0121     		movs	r1, #1
 2466 0262 0220     		movs	r0, #2
 2467              	.LVL202:
1803:src/keys.c    **** 		break;
 2468              		.loc 1 1803 3 is_stmt 0 view .LVU765
 2469 0264 FFF7FEFF 		bl	arg_storcl
 2470              	.LVL203:
1804:src/keys.c    **** 	case K44:		// multiply
 2471              		.loc 1 1804 3 is_stmt 1 view .LVU766
1900:src/keys.c    **** }
 2472              		.loc 1 1900 9 is_stmt 0 view .LVU767
 2473 0268 3320     		movs	r0, #51
1804:src/keys.c    **** 	case K44:		// multiply
ARM GAS  /tmp/ccczu93l.s 			page 103


 2474              		.loc 1 1804 3 view .LVU768
 2475 026a 5CE7     		b	.L202
 2476              	.LVL204:
 2477              	.L239:
1791:src/keys.c    **** 
 2478              		.loc 1 1791 3 is_stmt 1 view .LVU769
 2479              	.LBB368:
 2480              	.LBI368:
1633:src/keys.c    **** 
 2481              		.loc 1 1633 12 view .LVU770
 2482              	.LBB369:
1635:src/keys.c    **** 		// Only valid at beginning of entry
 2483              		.loc 1 1635 2 view .LVU771
1635:src/keys.c    **** 		// Only valid at beginning of entry
 2484              		.loc 1 1635 5 is_stmt 0 view .LVU772
 2485 026c EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2486 026e 002B     		cmp	r3, #0
 2487 0270 7FF458AF 		bne	.L304
1637:src/keys.c    **** 			// '..' or ENTER '.' = X
 2488              		.loc 1 1637 3 is_stmt 1 view .LVU773
1637:src/keys.c    **** 			// '..' or ENTER '.' = X
 2489              		.loc 1 1637 6 is_stmt 0 view .LVU774
 2490 0274 11F4A03F 		tst	r1, #81920
 2491 0278 40F0CD80 		bne	.L312
1642:src/keys.c    **** 			// local register or flag select
 2492              		.loc 1 1642 3 is_stmt 1 view .LVU775
1642:src/keys.c    **** 			// local register or flag select
 2493              		.loc 1 1642 20 is_stmt 0 view .LVU776
 2494 027c 0BEB0A02 		add	r2, fp, r10
 2495 0280 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1642:src/keys.c    **** 			// local register or flag select
 2496              		.loc 1 1642 6 view .LVU777
 2497 0282 1E07     		lsls	r6, r3, #28
 2498 0284 00F1B580 		bmi	.L241
1642:src/keys.c    **** 			// local register or flag select
 2499              		.loc 1 1642 27 view .LVU778
 2500 0288 95F91530 		ldrsb	r3, [r5, #21]
 2501 028c 002B     		cmp	r3, #0
 2502 028e C0F2B080 		blt	.L241
1646:src/keys.c    **** 			// Special GTO . sequence
 2503              		.loc 1 1646 8 is_stmt 1 view .LVU779
1646:src/keys.c    **** 			// Special GTO . sequence
 2504              		.loc 1 1646 29 is_stmt 0 view .LVU780
 2505 0292 443F     		subs	r7, r7, #68
 2506              	.LVL205:
1646:src/keys.c    **** 			// Special GTO . sequence
 2507              		.loc 1 1646 11 view .LVU781
 2508 0294 012F     		cmp	r7, #1
 2509 0296 3FF645AF 		bhi	.L304
1648:src/keys.c    **** 				State2.gtodot = 1;
 2510              		.loc 1 1648 4 is_stmt 1 view .LVU782
1649:src/keys.c    **** 				reset_arg();
 2511              		.loc 1 1649 5 view .LVU783
1649:src/keys.c    **** 				reset_arg();
 2512              		.loc 1 1649 19 is_stmt 0 view .LVU784
 2513 029a 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2514 029c 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccczu93l.s 			page 104


 2515 02a0 6B75     		strb	r3, [r5, #21]
1650:src/keys.c    **** 			}
 2516              		.loc 1 1650 5 is_stmt 1 view .LVU785
 2517 02a2 FFF7FEFF 		bl	reset_arg
 2518              	.LVL206:
1654:src/keys.c    **** }
 2519              		.loc 1 1654 9 is_stmt 0 view .LVU786
 2520 02a6 3320     		movs	r0, #51
 2521 02a8 3DE7     		b	.L202
 2522              	.L318:
 2523 02aa 00BF     		.align	2
 2524              	.L317:
 2525 02ac 00000000 		.word	StateWhileOn
 2526 02b0 00000000 		.word	.LANCHOR1
 2527 02b4 00000000 		.word	.LANCHOR0
 2528 02b8 ABAAAAAA 		.word	-1431655765
 2529 02bc 00000000 		.word	argcmds
 2530              	.LVL207:
 2531              	.L243:
1654:src/keys.c    **** }
 2532              		.loc 1 1654 9 view .LVU787
 2533              	.LBE369:
 2534              	.LBE368:
1795:src/keys.c    **** 			return arg_eval(n);
 2535              		.loc 1 1795 3 is_stmt 1 view .LVU788
1795:src/keys.c    **** 			return arg_eval(n);
 2536              		.loc 1 1795 7 is_stmt 0 view .LVU789
 2537 02c0 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1795:src/keys.c    **** 			return arg_eval(n);
 2538              		.loc 1 1795 6 view .LVU790
 2539 02c2 5D06     		lsls	r5, r3, #25
 2540 02c4 89D4     		bmi	.L251
1795:src/keys.c    **** 			return arg_eval(n);
 2541              		.loc 1 1795 25 discriminator 1 view .LVU791
 2542 02c6 0121     		movs	r1, #1
 2543 02c8 0846     		mov	r0, r1
 2544              	.LVL208:
1795:src/keys.c    **** 			return arg_eval(n);
 2545              		.loc 1 1795 25 discriminator 1 view .LVU792
 2546 02ca FFF7FEFF 		bl	arg_storcl
 2547              	.LVL209:
1795:src/keys.c    **** 			return arg_eval(n);
 2548              		.loc 1 1795 18 discriminator 1 view .LVU793
 2549 02ce 0028     		cmp	r0, #0
 2550 02d0 7FF428AF 		bne	.L304
1806:src/keys.c    **** 			return arg_eval(n);
 2551              		.loc 1 1806 63 view .LVU794
 2552 02d4 B8F1000F 		cmp	r8, #0
 2553 02d8 3FF424AF 		beq	.L304
 2554 02dc 7DE7     		b	.L251
 2555              	.LVL210:
 2556              	.L227:
1736:src/keys.c    **** 			State2.ind = ! State2.ind;
 2557              		.loc 1 1736 3 is_stmt 1 view .LVU795
1736:src/keys.c    **** 			State2.ind = ! State2.ind;
 2558              		.loc 1 1736 7 is_stmt 0 view .LVU796
 2559 02de 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 105


1736:src/keys.c    **** 			State2.ind = ! State2.ind;
 2560              		.loc 1 1736 6 view .LVU797
 2561 02e0 5E06     		lsls	r6, r3, #25
 2562 02e2 3FF51FAF 		bmi	.L304
1736:src/keys.c    **** 			State2.ind = ! State2.ind;
 2563              		.loc 1 1736 35 discriminator 1 view .LVU798
 2564 02e6 D344     		add	fp, fp, r10
 2565 02e8 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
1736:src/keys.c    **** 			State2.ind = ! State2.ind;
 2566              		.loc 1 1736 19 discriminator 1 view .LVU799
 2567 02ec D407     		lsls	r4, r2, #31
 2568 02ee 7FF519AF 		bpl	.L304
1737:src/keys.c    **** 			if (! stack_reg)
 2569              		.loc 1 1737 4 is_stmt 1 view .LVU800
1737:src/keys.c    **** 			if (! stack_reg)
 2570              		.loc 1 1737 17 is_stmt 0 view .LVU801
 2571 02f2 DA43     		mvns	r2, r3
 2572 02f4 C2F3C012 		ubfx	r2, r2, #7, #1
1737:src/keys.c    **** 			if (! stack_reg)
 2573              		.loc 1 1737 15 view .LVU802
 2574 02f8 62F3C713 		bfi	r3, r2, #7, #1
 2575 02fc 6B75     		strb	r3, [r5, #21]
1738:src/keys.c    **** 				State2.dot = 0;
 2576              		.loc 1 1738 4 is_stmt 1 view .LVU803
1738:src/keys.c    **** 				State2.dot = 0;
 2577              		.loc 1 1738 7 is_stmt 0 view .LVU804
 2578 02fe B8F1000F 		cmp	r8, #0
 2579 0302 7FF40FAF 		bne	.L304
 2580              	.L264:
1739:src/keys.c    **** 		}
 2581              		.loc 1 1739 5 is_stmt 1 view .LVU805
1739:src/keys.c    **** 		}
 2582              		.loc 1 1739 16 is_stmt 0 view .LVU806
 2583 0306 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2584 0308 6FF38613 		bfc	r3, #6, #1
 2585 030c 6B75     		strb	r3, [r5, #21]
1900:src/keys.c    **** }
 2586              		.loc 1 1900 9 view .LVU807
 2587 030e 3320     		movs	r0, #51
 2588              	.LVL211:
1900:src/keys.c    **** }
 2589              		.loc 1 1900 9 view .LVU808
 2590 0310 09E7     		b	.L202
 2591              	.LVL212:
 2592              	.L233:
1756:src/keys.c    **** 	    return process_arg_shuffle(0);
 2593              		.loc 1 1756 4 is_stmt 1 view .LVU809
1756:src/keys.c    **** 	    return process_arg_shuffle(0);
 2594              		.loc 1 1756 8 is_stmt 0 view .LVU810
 2595 0312 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1756:src/keys.c    **** 	    return process_arg_shuffle(0);
 2596              		.loc 1 1756 7 view .LVU811
 2597 0314 9907     		lsls	r1, r3, #30
 2598 0316 7FF509AF 		bpl	.L232
1757:src/keys.c    **** 	case K52:	// Y
 2599              		.loc 1 1757 6 is_stmt 1 view .LVU812
1757:src/keys.c    **** 	case K52:	// Y
ARM GAS  /tmp/ccczu93l.s 			page 106


 2600              		.loc 1 1757 13 is_stmt 0 view .LVU813
 2601 031a 0020     		movs	r0, #0
 2602              	.LVL213:
 2603              	.L307:
1901:src/keys.c    **** 
 2604              		.loc 1 1901 1 view .LVU814
 2605 031c 03B0     		add	sp, sp, #12
 2606              		.cfi_remember_state
 2607              		.cfi_def_cfa_offset 36
 2608              	.LVL214:
1901:src/keys.c    **** 
 2609              		.loc 1 1901 1 view .LVU815
 2610              		@ sp needed
 2611 031e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2612              		.cfi_restore 14
 2613              		.cfi_restore 11
 2614              		.cfi_restore 10
 2615              		.cfi_restore 9
 2616              		.cfi_restore 8
 2617              		.cfi_restore 7
 2618              		.cfi_restore 6
 2619              		.cfi_restore 5
 2620              		.cfi_restore 4
 2621              		.cfi_def_cfa_offset 0
 2622              	.LVL215:
1763:src/keys.c    **** #else
 2623              		.loc 1 1763 13 view .LVU816
 2624 0322 FFF7FEBF 		b	process_arg_shuffle
 2625              	.LVL216:
 2626              	.L234:
 2627              		.cfi_restore_state
1759:src/keys.c    **** 	    return process_arg_shuffle(1);
 2628              		.loc 1 1759 4 is_stmt 1 view .LVU817
1759:src/keys.c    **** 	    return process_arg_shuffle(1);
 2629              		.loc 1 1759 8 is_stmt 0 view .LVU818
 2630 0326 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1759:src/keys.c    **** 	    return process_arg_shuffle(1);
 2631              		.loc 1 1759 7 view .LVU819
 2632 0328 9A07     		lsls	r2, r3, #30
 2633 032a 7FF5FFAE 		bpl	.L232
1760:src/keys.c    **** 	case K53:       // Z
 2634              		.loc 1 1760 6 is_stmt 1 view .LVU820
1760:src/keys.c    **** 	case K53:       // Z
 2635              		.loc 1 1760 13 is_stmt 0 view .LVU821
 2636 032e 0120     		movs	r0, #1
 2637              	.LVL217:
1760:src/keys.c    **** 	case K53:       // Z
 2638              		.loc 1 1760 13 view .LVU822
 2639 0330 F4E7     		b	.L307
 2640              	.LVL218:
 2641              	.L235:
1762:src/keys.c    **** 	    return process_arg_shuffle(2);
 2642              		.loc 1 1762 4 is_stmt 1 view .LVU823
1762:src/keys.c    **** 	    return process_arg_shuffle(2);
 2643              		.loc 1 1762 8 is_stmt 0 view .LVU824
 2644 0332 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1762:src/keys.c    **** 	    return process_arg_shuffle(2);
ARM GAS  /tmp/ccczu93l.s 			page 107


 2645              		.loc 1 1762 7 view .LVU825
 2646 0334 9B07     		lsls	r3, r3, #30
 2647 0336 7FF5F9AE 		bpl	.L232
1763:src/keys.c    **** #else
 2648              		.loc 1 1763 6 is_stmt 1 view .LVU826
1763:src/keys.c    **** #else
 2649              		.loc 1 1763 13 is_stmt 0 view .LVU827
 2650 033a 0220     		movs	r0, #2
 2651              	.LVL219:
1763:src/keys.c    **** #else
 2652              		.loc 1 1763 13 view .LVU828
 2653 033c EEE7     		b	.L307
 2654              	.LVL220:
 2655              	.L254:
1850:src/keys.c    **** 		break;
 2656              		.loc 1 1850 3 is_stmt 1 view .LVU829
 2657 033e 0021     		movs	r1, #0
 2658 0340 0520     		movs	r0, #5
 2659              	.LVL221:
1850:src/keys.c    **** 		break;
 2660              		.loc 1 1850 3 is_stmt 0 view .LVU830
 2661 0342 FFF7FEFF 		bl	arg_storcl
 2662              	.LVL222:
1851:src/keys.c    **** 
 2663              		.loc 1 1851 3 is_stmt 1 view .LVU831
1900:src/keys.c    **** }
 2664              		.loc 1 1900 9 is_stmt 0 view .LVU832
 2665 0346 3320     		movs	r0, #51
1851:src/keys.c    **** 
 2666              		.loc 1 1851 3 view .LVU833
 2667 0348 EDE6     		b	.L202
 2668              	.LVL223:
 2669              	.L231:
1753:src/keys.c    **** 	    return process_arg_shuffle(3);
 2670              		.loc 1 1753 4 is_stmt 1 view .LVU834
1753:src/keys.c    **** 	    return process_arg_shuffle(3);
 2671              		.loc 1 1753 8 is_stmt 0 view .LVU835
 2672 034a AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1753:src/keys.c    **** 	    return process_arg_shuffle(3);
 2673              		.loc 1 1753 7 view .LVU836
 2674 034c 9807     		lsls	r0, r3, #30
 2675              	.LVL224:
1753:src/keys.c    **** 	    return process_arg_shuffle(3);
 2676              		.loc 1 1753 7 view .LVU837
 2677 034e 7FF5EDAE 		bpl	.L232
1754:src/keys.c    **** 	case K51:       // X
 2678              		.loc 1 1754 6 is_stmt 1 view .LVU838
1754:src/keys.c    **** 	case K51:       // X
 2679              		.loc 1 1754 13 is_stmt 0 view .LVU839
 2680 0352 0320     		movs	r0, #3
 2681 0354 E2E7     		b	.L307
 2682              	.LVL225:
 2683              	.L252:
1810:src/keys.c    **** 		break;
 2684              		.loc 1 1810 3 is_stmt 1 view .LVU840
 2685 0356 0121     		movs	r1, #1
 2686 0358 0420     		movs	r0, #4
ARM GAS  /tmp/ccczu93l.s 			page 108


 2687              	.LVL226:
1810:src/keys.c    **** 		break;
 2688              		.loc 1 1810 3 is_stmt 0 view .LVU841
 2689 035a FFF7FEFF 		bl	arg_storcl
 2690              	.LVL227:
1811:src/keys.c    **** #else
 2691              		.loc 1 1811 3 is_stmt 1 view .LVU842
1900:src/keys.c    **** }
 2692              		.loc 1 1900 9 is_stmt 0 view .LVU843
 2693 035e 3320     		movs	r0, #51
1811:src/keys.c    **** #else
 2694              		.loc 1 1811 3 view .LVU844
 2695 0360 E1E6     		b	.L202
 2696              	.LVL228:
 2697              	.L262:
1875:src/keys.c    **** 			if (State2.dot)
 2698              		.loc 1 1875 3 is_stmt 1 view .LVU845
1875:src/keys.c    **** 			if (State2.dot)
 2699              		.loc 1 1875 13 is_stmt 0 view .LVU846
 2700 0362 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
1875:src/keys.c    **** 			if (State2.dot)
 2701              		.loc 1 1875 6 view .LVU847
 2702 0364 83BB     		cbnz	r3, .L263
1876:src/keys.c    **** 				State2.dot = 0;
 2703              		.loc 1 1876 4 is_stmt 1 view .LVU848
1876:src/keys.c    **** 				State2.dot = 0;
 2704              		.loc 1 1876 8 is_stmt 0 view .LVU849
 2705 0366 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1876:src/keys.c    **** 				State2.dot = 0;
 2706              		.loc 1 1876 7 view .LVU850
 2707 0368 13F04001 		ands	r1, r3, #64
 2708 036c CBD1     		bne	.L264
1878:src/keys.c    **** 				State2.local = 0;
 2709              		.loc 1 1878 9 is_stmt 1 view .LVU851
1878:src/keys.c    **** 				State2.local = 0;
 2710              		.loc 1 1878 13 is_stmt 0 view .LVU852
 2711 036e AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
1878:src/keys.c    **** 				State2.local = 0;
 2712              		.loc 1 1878 12 view .LVU853
 2713 0370 12F00100 		ands	r0, r2, #1
 2714              	.LVL229:
1878:src/keys.c    **** 				State2.local = 0;
 2715              		.loc 1 1878 12 view .LVU854
 2716 0374 55D1     		bne	.L313
1880:src/keys.c    **** 				State2.ind = 0;
 2717              		.loc 1 1880 9 is_stmt 1 view .LVU855
1880:src/keys.c    **** 				State2.ind = 0;
 2718              		.loc 1 1880 12 is_stmt 0 view .LVU856
 2719 0376 1906     		lsls	r1, r3, #24
 2720 0378 7FF5D2AE 		bpl	.L266
1881:src/keys.c    **** 			else
 2721              		.loc 1 1881 5 is_stmt 1 view .LVU857
1881:src/keys.c    **** 			else
 2722              		.loc 1 1881 16 is_stmt 0 view .LVU858
 2723 037c 60F3C713 		bfi	r3, r0, #7, #1
 2724 0380 6B75     		strb	r3, [r5, #21]
1900:src/keys.c    **** }
ARM GAS  /tmp/ccczu93l.s 			page 109


 2725              		.loc 1 1900 9 view .LVU859
 2726 0382 3320     		movs	r0, #51
 2727 0384 CFE6     		b	.L202
 2728              	.LVL230:
 2729              	.L311:
1854:src/keys.c    **** 			if (argcmds[base].label) {
 2730              		.loc 1 1854 43 discriminator 1 view .LVU860
 2731 0386 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2732 0388 13F0C00F 		tst	r3, #192
 2733 038c 0FD1     		bne	.L257
1855:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2734              		.loc 1 1855 4 is_stmt 1 view .LVU861
1855:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2735              		.loc 1 1855 7 is_stmt 0 view .LVU862
 2736 038e BEF1000F 		cmp	lr, #0
 2737 0392 4BD1     		bne	.L314
1860:src/keys.c    **** 				reset_arg();
 2738              		.loc 1 1860 11 is_stmt 1 view .LVU863
1860:src/keys.c    **** 				reset_arg();
 2739              		.loc 1 1860 14 is_stmt 0 view .LVU864
 2740 0394 4E2F     		cmp	r7, #78
 2741 0396 5BD0     		beq	.L315
1863:src/keys.c    **** 				reset_arg();
 2742              		.loc 1 1863 11 is_stmt 1 view .LVU865
1863:src/keys.c    **** 				reset_arg();
 2743              		.loc 1 1863 14 is_stmt 0 view .LVU866
 2744 0398 4F2F     		cmp	r7, #79
 2745 039a 5ED0     		beq	.L316
1866:src/keys.c    **** 				State2.dot = 1;
 2746              		.loc 1 1866 11 is_stmt 1 view .LVU867
1866:src/keys.c    **** 				State2.dot = 1;
 2747              		.loc 1 1866 14 is_stmt 0 view .LVU868
 2748 039c 019A     		ldr	r2, [sp, #4]
 2749 039e 002A     		cmp	r2, #0
 2750 03a0 3FF4C0AE 		beq	.L304
1867:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2751              		.loc 1 1867 5 is_stmt 1 view .LVU869
1867:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2752              		.loc 1 1867 16 is_stmt 0 view .LVU870
 2753 03a4 43F04003 		orr	r3, r3, #64
 2754 03a8 6B75     		strb	r3, [r5, #21]
1900:src/keys.c    **** }
 2755              		.loc 1 1900 9 view .LVU871
 2756 03aa 3320     		movs	r0, #51
 2757              	.LVL231:
1900:src/keys.c    **** }
 2758              		.loc 1 1900 9 view .LVU872
 2759 03ac BBE6     		b	.L202
 2760              	.LVL232:
 2761              	.L257:
1868:src/keys.c    **** 			return arg_eval(State2.digval);
 2762              		.loc 1 1868 10 is_stmt 1 view .LVU873
1870:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2763              		.loc 1 1870 8 view .LVU874
1870:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2764              		.loc 1 1870 11 is_stmt 0 view .LVU875
 2765 03ae B8F1000F 		cmp	r8, #0
ARM GAS  /tmp/ccczu93l.s 			page 110


 2766 03b2 3FF4B7AE 		beq	.L304
1871:src/keys.c    **** 		break;
 2767              		.loc 1 1871 4 is_stmt 1 view .LVU876
1871:src/keys.c    **** 		break;
 2768              		.loc 1 1871 27 is_stmt 0 view .LVU877
 2769 03b6 C3F38012 		ubfx	r2, r3, #6, #1
1871:src/keys.c    **** 		break;
 2770              		.loc 1 1871 19 view .LVU878
 2771 03ba C2F10102 		rsb	r2, r2, #1
1871:src/keys.c    **** 		break;
 2772              		.loc 1 1871 15 view .LVU879
 2773 03be 62F38613 		bfi	r3, r2, #6, #1
 2774 03c2 6B75     		strb	r3, [r5, #21]
1900:src/keys.c    **** }
 2775              		.loc 1 1900 9 view .LVU880
 2776 03c4 3320     		movs	r0, #51
 2777              	.LVL233:
1900:src/keys.c    **** }
 2778              		.loc 1 1900 9 view .LVU881
 2779 03c6 AEE6     		b	.L202
 2780              	.LVL234:
 2781              	.L263:
1886:src/keys.c    **** 			if (State2.shuffle)
 2782              		.loc 1 1886 4 is_stmt 1 view .LVU882
1887:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2783              		.loc 1 1887 8 is_stmt 0 view .LVU883
 2784 03c8 AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
1886:src/keys.c    **** 			if (State2.shuffle)
 2785              		.loc 1 1886 4 view .LVU884
 2786 03ca 013B     		subs	r3, r3, #1
 2787 03cc DBB2     		uxtb	r3, r3
1887:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2788              		.loc 1 1887 7 view .LVU885
 2789 03ce 9207     		lsls	r2, r2, #30
1886:src/keys.c    **** 			if (State2.shuffle)
 2790              		.loc 1 1886 4 view .LVU886
 2791 03d0 EB72     		strb	r3, [r5, #11]
1887:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2792              		.loc 1 1887 4 is_stmt 1 view .LVU887
1887:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2793              		.loc 1 1887 7 is_stmt 0 view .LVU888
 2794 03d2 14D5     		bpl	.L267
1888:src/keys.c    **** 			else
 2795              		.loc 1 1888 5 is_stmt 1 view .LVU889
1888:src/keys.c    **** 			else
 2796              		.loc 1 1888 19 is_stmt 0 view .LVU890
 2797 03d4 2A89     		ldrh	r2, [r5, #8]
1888:src/keys.c    **** 			else
 2798              		.loc 1 1888 46 view .LVU891
 2799 03d6 5B00     		lsls	r3, r3, #1
1888:src/keys.c    **** 			else
 2800              		.loc 1 1888 26 view .LVU892
 2801 03d8 0321     		movs	r1, #3
 2802 03da 01FA03F3 		lsl	r3, r1, r3
1888:src/keys.c    **** 			else
 2803              		.loc 1 1888 19 view .LVU893
 2804 03de 22EA0303 		bic	r3, r2, r3
ARM GAS  /tmp/ccczu93l.s 			page 111


 2805 03e2 2B81     		strh	r3, [r5, #8]	@ movhi
1900:src/keys.c    **** }
 2806              		.loc 1 1900 9 view .LVU894
 2807 03e4 3320     		movs	r0, #51
 2808              	.LVL235:
1900:src/keys.c    **** }
 2809              		.loc 1 1900 9 view .LVU895
 2810 03e6 9EE6     		b	.L202
 2811              	.LVL236:
 2812              	.L247:
1800:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2813              		.loc 1 1800 4 is_stmt 1 view .LVU896
 2814 03e8 FFF7FEFF 		bl	reset_arg
 2815              	.LVL237:
1801:src/keys.c    **** 		}
 2816              		.loc 1 1801 4 view .LVU897
1801:src/keys.c    **** 		}
 2817              		.loc 1 1801 11 is_stmt 0 view .LVU898
 2818 03ec 40F27510 		movw	r0, #373
 2819 03f0 99E6     		b	.L202
 2820              	.LVL238:
 2821              	.L241:
 2822              	.LBB372:
 2823              	.LBB370:
1644:src/keys.c    **** 		}
 2824              		.loc 1 1644 4 is_stmt 1 view .LVU899
1644:src/keys.c    **** 		}
 2825              		.loc 1 1644 17 is_stmt 0 view .LVU900
 2826 03f2 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
 2827 03f4 43F00103 		orr	r3, r3, #1
 2828 03f8 AB75     		strb	r3, [r5, #22]
1654:src/keys.c    **** }
 2829              		.loc 1 1654 9 view .LVU901
 2830 03fa 3320     		movs	r0, #51
 2831              	.LVL239:
1644:src/keys.c    **** 		}
 2832              		.loc 1 1644 17 view .LVU902
 2833 03fc 93E6     		b	.L202
 2834              	.LVL240:
 2835              	.L267:
1644:src/keys.c    **** 		}
 2836              		.loc 1 1644 17 view .LVU903
 2837              	.LBE370:
 2838              	.LBE372:
1890:src/keys.c    **** 		}
 2839              		.loc 1 1890 5 is_stmt 1 view .LVU904
1890:src/keys.c    **** 		}
 2840              		.loc 1 1890 19 is_stmt 0 view .LVU905
 2841 03fe 2B89     		ldrh	r3, [r5, #8]
 2842 0400 194A     		ldr	r2, .L319
 2843 0402 A2FB0323 		umull	r2, r3, r2, r3
 2844 0406 DB08     		lsrs	r3, r3, #3
 2845 0408 2B81     		strh	r3, [r5, #8]	@ movhi
1900:src/keys.c    **** }
 2846              		.loc 1 1900 9 view .LVU906
 2847 040a 3320     		movs	r0, #51
 2848              	.LVL241:
ARM GAS  /tmp/ccczu93l.s 			page 112


1900:src/keys.c    **** }
 2849              		.loc 1 1900 9 view .LVU907
 2850 040c 8BE6     		b	.L202
 2851              	.LVL242:
 2852              	.L310:
1747:src/keys.c    **** 		else if (base == RARG_RCL)
 2853              		.loc 1 1747 4 is_stmt 1 view .LVU908
1747:src/keys.c    **** 		else if (base == RARG_RCL)
 2854              		.loc 1 1747 12 is_stmt 0 view .LVU909
 2855 040e 7723     		movs	r3, #119
 2856 0410 EB77     		strb	r3, [r5, #31]
1900:src/keys.c    **** }
 2857              		.loc 1 1900 9 view .LVU910
 2858 0412 3320     		movs	r0, #51
 2859              	.LVL243:
1900:src/keys.c    **** }
 2860              		.loc 1 1900 9 view .LVU911
 2861 0414 87E6     		b	.L202
 2862              	.LVL244:
 2863              	.L312:
 2864              	.LBB373:
 2865              	.LBB371:
1639:src/keys.c    **** 			return arg_eval(regX_idx);
 2866              		.loc 1 1639 4 is_stmt 1 view .LVU912
1639:src/keys.c    **** 			return arg_eval(regX_idx);
 2867              		.loc 1 1639 17 is_stmt 0 view .LVU913
 2868 0416 AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
 2869 0418 63F30002 		bfi	r2, r3, #0, #1
1640:src/keys.c    **** 		}
 2870              		.loc 1 1640 11 view .LVU914
 2871 041c 6420     		movs	r0, #100
 2872              	.LVL245:
1639:src/keys.c    **** 			return arg_eval(regX_idx);
 2873              		.loc 1 1639 17 view .LVU915
 2874 041e AA75     		strb	r2, [r5, #22]
1640:src/keys.c    **** 		}
 2875              		.loc 1 1640 4 is_stmt 1 view .LVU916
 2876 0420 CAE6     		b	.L306
 2877              	.LVL246:
 2878              	.L313:
1640:src/keys.c    **** 		}
 2879              		.loc 1 1640 4 is_stmt 0 view .LVU917
 2880              	.LBE371:
 2881              	.LBE373:
1879:src/keys.c    **** 			else if (State2.ind)
 2882              		.loc 1 1879 5 is_stmt 1 view .LVU918
1879:src/keys.c    **** 			else if (State2.ind)
 2883              		.loc 1 1879 18 is_stmt 0 view .LVU919
 2884 0422 61F30002 		bfi	r2, r1, #0, #1
 2885 0426 AA75     		strb	r2, [r5, #22]
1900:src/keys.c    **** }
 2886              		.loc 1 1900 9 view .LVU920
 2887 0428 3320     		movs	r0, #51
 2888 042a 7CE6     		b	.L202
 2889              	.LVL247:
 2890              	.L314:
1856:src/keys.c    **** 				State2.multi = 1;
ARM GAS  /tmp/ccczu93l.s 			page 113


 2891              		.loc 1 1856 5 is_stmt 1 view .LVU921
 2892              	.LBB374:
 2893              	.LBI374:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 2894              		.loc 1 503 13 view .LVU922
 2895              	.LBB375:
 504:src/keys.c    **** 		return;
 2896              		.loc 1 504 2 view .LVU923
 504:src/keys.c    **** 		return;
 2897              		.loc 1 504 6 is_stmt 0 view .LVU924
 2898 042c FFF7FEFF 		bl	is_bad_cmdline
 2899              	.LVL248:
 504:src/keys.c    **** 		return;
 2900              		.loc 1 504 5 view .LVU925
 2901 0430 20B9     		cbnz	r0, .L259
 2902              	.LBE375:
 2903              	.LBE374:
1856:src/keys.c    **** 				State2.multi = 1;
 2904              		.loc 1 1856 31 view .LVU926
 2905 0432 A7F14200 		sub	r0, r7, #66
 2906              	.LBB377:
 2907              	.LBB376:
 2908 0436 C0B2     		uxtb	r0, r0
 2909 0438 FFF7FEFF 		bl	init_arg.part.0
 2910              	.LVL249:
 2911              	.L259:
1856:src/keys.c    **** 				State2.multi = 1;
 2912              		.loc 1 1856 31 view .LVU927
 2913              	.LBE376:
 2914              	.LBE377:
1857:src/keys.c    **** 				State2.alphashift = 0;
 2915              		.loc 1 1857 5 is_stmt 1 view .LVU928
1858:src/keys.c    **** 				State2.rarg = 0;
 2916              		.loc 1 1858 5 view .LVU929
1859:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2917              		.loc 1 1859 5 view .LVU930
1857:src/keys.c    **** 				State2.alphashift = 0;
 2918              		.loc 1 1857 18 is_stmt 0 view .LVU931
 2919 043c 6B69     		ldr	r3, [r5, #20]
 2920 043e 23F44013 		bic	r3, r3, #3145728
 2921 0442 23F40063 		bic	r3, r3, #2048
 2922 0446 43F40063 		orr	r3, r3, #2048
 2923 044a 6B61     		str	r3, [r5, #20]
1900:src/keys.c    **** }
 2924              		.loc 1 1900 9 view .LVU932
 2925 044c 3320     		movs	r0, #51
 2926 044e 6AE6     		b	.L202
 2927              	.LVL250:
 2928              	.L315:
1861:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2929              		.loc 1 1861 5 is_stmt 1 view .LVU933
 2930 0450 FFF7FEFF 		bl	reset_arg
 2931              	.LVL251:
1862:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2932              		.loc 1 1862 5 view .LVU934
1862:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2933              		.loc 1 1862 12 is_stmt 0 view .LVU935
ARM GAS  /tmp/ccczu93l.s 			page 114


 2934 0454 40F25510 		movw	r0, #341
 2935 0458 65E6     		b	.L202
 2936              	.LVL252:
 2937              	.L316:
1864:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2938              		.loc 1 1864 5 is_stmt 1 view .LVU936
 2939 045a FFF7FEFF 		bl	reset_arg
 2940              	.LVL253:
1865:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2941              		.loc 1 1865 5 view .LVU937
1865:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2942              		.loc 1 1865 12 is_stmt 0 view .LVU938
 2943 045e 4FF4AB70 		mov	r0, #342
 2944 0462 60E6     		b	.L202
 2945              	.LVL254:
 2946              	.L220:
1684:src/keys.c    **** 	  case regY_idx:
 2947              		.loc 1 1684 6 is_stmt 1 view .LVU939
1684:src/keys.c    **** 	  case regY_idx:
 2948              		.loc 1 1684 13 is_stmt 0 view .LVU940
 2949 0464 0120     		movs	r0, #1
 2950              	.LVL255:
1684:src/keys.c    **** 	  case regY_idx:
 2951              		.loc 1 1684 13 view .LVU941
 2952 0466 BBE6     		b	.L305
 2953              	.L320:
 2954              		.align	2
 2955              	.L319:
 2956 0468 CDCCCCCC 		.word	-858993459
 2957              		.cfi_endproc
 2958              	.LFE37:
 2960              		.section	.text.cur_shift,"ax",%progbits
 2961              		.align	1
 2962              		.p2align 2,,3
 2963              		.global	cur_shift
 2964              		.syntax unified
 2965              		.thumb
 2966              		.thumb_func
 2967              		.fpu fpv4-sp-d16
 2969              	cur_shift:
 2970              	.LFB0:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2971              		.loc 1 86 29 is_stmt 1 view -0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 0
 2974              		@ frame_needed = 0, uses_anonymous_args = 0
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2975              		.loc 1 87 2 view .LVU943
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2976              		.loc 1 86 29 is_stmt 0 view .LVU944
 2977 0000 08B5     		push	{r3, lr}
 2978              		.cfi_def_cfa_offset 8
 2979              		.cfi_offset 3, -8
 2980              		.cfi_offset 14, -4
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2981              		.loc 1 87 18 view .LVU945
 2982 0002 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccczu93l.s 			page 115


 2983              	.LVL256:
  88:src/keys.c    **** }
 2984              		.loc 1 88 2 is_stmt 1 view .LVU946
  88:src/keys.c    **** }
 2985              		.loc 1 88 52 is_stmt 0 view .LVU947
 2986 0006 08B9     		cbnz	r0, .L322
  88:src/keys.c    **** }
 2987              		.loc 1 88 52 discriminator 1 view .LVU948
 2988 0008 014B     		ldr	r3, .L324
 2989 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2990              	.LVL257:
 2991              	.L322:
  89:src/keys.c    **** 
 2992              		.loc 1 89 1 discriminator 4 view .LVU949
 2993 000c 08BD     		pop	{r3, pc}
 2994              	.L325:
 2995 000e 00BF     		.align	2
 2996              	.L324:
 2997 0010 00000000 		.word	StateWhileOn
 2998              		.cfi_endproc
 2999              	.LFE0:
 3001              		.section	.text.reset_shift,"ax",%progbits
 3002              		.align	1
 3003              		.p2align 2,,3
 3004              		.global	reset_shift
 3005              		.syntax unified
 3006              		.thumb
 3007              		.thumb_func
 3008              		.fpu fpv4-sp-d16
 3010              	reset_shift:
 3011              	.LFB2:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3012              		.loc 1 104 31 is_stmt 1 view -0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 0
 3015              		@ frame_needed = 0, uses_anonymous_args = 0
 105:src/keys.c    **** }
 3016              		.loc 1 105 2 view .LVU951
 3017              	.LVL258:
 3018              	.LBB378:
 3019              	.LBI378:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 3020              		.loc 1 94 20 view .LVU952
 3021              	.LBB379:
  95:src/keys.c    **** 	State2.shifts = shift;
 3022              		.loc 1 95 2 view .LVU953
 3023              	.LBB380:
 3024              	.LBI380:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3025              		.loc 1 86 13 view .LVU954
 3026              	.LBB381:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3027              		.loc 1 87 2 view .LVU955
 3028              	.LBE381:
 3029              	.LBE380:
 3030              	.LBE379:
 3031              	.LBE378:
ARM GAS  /tmp/ccczu93l.s 			page 116


 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3032              		.loc 1 104 31 is_stmt 0 view .LVU956
 3033 0000 08B5     		push	{r3, lr}
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 3, -8
 3036              		.cfi_offset 14, -4
 3037              	.LBB385:
 3038              	.LBB384:
 3039              	.LBB383:
 3040              	.LBB382:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3041              		.loc 1 87 18 view .LVU957
 3042 0002 FFF7FEFF 		bl	shift_down
 3043              	.LVL259:
  88:src/keys.c    **** }
 3044              		.loc 1 88 2 is_stmt 1 view .LVU958
  88:src/keys.c    **** }
 3045              		.loc 1 88 52 is_stmt 0 view .LVU959
 3046 0006 034B     		ldr	r3, .L331
 3047 0008 00B9     		cbnz	r0, .L327
 3048 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3049              	.LVL260:
 3050              	.L327:
  88:src/keys.c    **** }
 3051              		.loc 1 88 52 view .LVU960
 3052              	.LBE382:
 3053              	.LBE383:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3054              		.loc 1 96 2 is_stmt 1 view .LVU961
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3055              		.loc 1 96 16 is_stmt 0 view .LVU962
 3056 000c 0022     		movs	r2, #0
 3057 000e 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 3058              		.loc 1 98 2 is_stmt 1 view .LVU963
 3059              	.LVL261:
  98:src/keys.c    **** }
 3060              		.loc 1 98 2 is_stmt 0 view .LVU964
 3061              	.LBE384:
 3062              	.LBE385:
 106:src/keys.c    **** 
 3063              		.loc 1 106 1 view .LVU965
 3064 0010 08BD     		pop	{r3, pc}
 3065              	.L332:
 3066 0012 00BF     		.align	2
 3067              	.L331:
 3068 0014 00000000 		.word	StateWhileOn
 3069              		.cfi_endproc
 3070              	.LFE2:
 3072              		.section	.text.keycode_to_row_column,"ax",%progbits
 3073              		.align	1
 3074              		.p2align 2,,3
 3075              		.global	keycode_to_row_column
 3076              		.syntax unified
 3077              		.thumb
 3078              		.thumb_func
 3079              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccczu93l.s 			page 117


 3081              	keycode_to_row_column:
 3082              	.LVL262:
 3083              	.LFB6:
 170:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3084              		.loc 1 170 1 is_stmt 1 view -0
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 0
 3087              		@ frame_needed = 0, uses_anonymous_args = 0
 3088              		@ link register save eliminated.
 171:src/keys.c    **** }
 3089              		.loc 1 171 2 view .LVU967
 171:src/keys.c    **** }
 3090              		.loc 1 171 18 is_stmt 0 view .LVU968
 3091 0000 074A     		ldr	r2, .L334
 3092 0002 82FB0032 		smull	r3, r2, r2, r0
 3093 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 171:src/keys.c    **** }
 3094              		.loc 1 171 24 view .LVU969
 3095 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3096 000e 5200     		lsls	r2, r2, #1
 171:src/keys.c    **** }
 3097              		.loc 1 171 33 view .LVU970
 3098 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3099 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 171:src/keys.c    **** }
 3100              		.loc 1 171 12 view .LVU971
 3101 0018 02F10B00 		add	r0, r2, #11
 3102              	.LVL263:
 172:src/keys.c    **** 
 3103              		.loc 1 172 1 view .LVU972
 3104 001c 1844     		add	r0, r0, r3
 3105 001e 7047     		bx	lr
 3106              	.L335:
 3107              		.align	2
 3108              	.L334:
 3109 0020 ABAAAA2A 		.word	715827883
 3110              		.cfi_endproc
 3111              	.LFE6:
 3113              		.section	.text.row_column_to_keycode,"ax",%progbits
 3114              		.align	1
 3115              		.p2align 2,,3
 3116              		.global	row_column_to_keycode
 3117              		.syntax unified
 3118              		.thumb
 3119              		.thumb_func
 3120              		.fpu fpv4-sp-d16
 3122              	row_column_to_keycode:
 3123              	.LVL264:
 3124              	.LFB7:
 180:src/keys.c    **** 	int row = c / 10 - 1;
 3125              		.loc 1 180 1 is_stmt 1 view -0
 3126              		.cfi_startproc
 3127              		@ args = 0, pretend = 0, frame = 0
 3128              		@ frame_needed = 0, uses_anonymous_args = 0
 3129              		@ link register save eliminated.
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3130              		.loc 1 181 2 view .LVU974
ARM GAS  /tmp/ccczu93l.s 			page 118


 181:src/keys.c    **** 	int col = c % 10 - 1;
 3131              		.loc 1 181 14 is_stmt 0 view .LVU975
 3132 0000 0E4A     		ldr	r2, .L342
 3133 0002 82FB0032 		smull	r3, r2, r2, r0
 3134 0006 C317     		asrs	r3, r0, #31
 3135 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 182:src/keys.c    **** 
 3136              		.loc 1 182 14 view .LVU976
 3137 000c 03EB8302 		add	r2, r3, r3, lsl #2
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3138              		.loc 1 181 6 view .LVU977
 3139 0010 013B     		subs	r3, r3, #1
 3140              	.LVL265:
 182:src/keys.c    **** 
 3141              		.loc 1 182 2 is_stmt 1 view .LVU978
 182:src/keys.c    **** 
 3142              		.loc 1 182 14 is_stmt 0 view .LVU979
 3143 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3144              	.LVL266:
 184:src/keys.c    **** 		return -1;
 3145              		.loc 1 184 5 view .LVU980
 3146 0016 062B     		cmp	r3, #6
 182:src/keys.c    **** 
 3147              		.loc 1 182 6 view .LVU981
 3148 0018 00F1FF30 		add	r0, r0, #-1
 3149              	.LVL267:
 184:src/keys.c    **** 		return -1;
 3150              		.loc 1 184 2 is_stmt 1 view .LVU982
 184:src/keys.c    **** 		return -1;
 3151              		.loc 1 184 5 is_stmt 0 view .LVU983
 3152 001c 0AD8     		bhi	.L341
 184:src/keys.c    **** 		return -1;
 3153              		.loc 1 184 36 discriminator 1 view .LVU984
 3154 001e 012B     		cmp	r3, #1
 3155 0020 CCBF     		ite	gt
 3156 0022 0422     		movgt	r2, #4
 3157 0024 0522     		movle	r2, #5
 184:src/keys.c    **** 		return -1;
 3158              		.loc 1 184 25 discriminator 1 view .LVU985
 3159 0026 8242     		cmp	r2, r0
 3160 0028 04DB     		blt	.L341
 186:src/keys.c    **** }
 3161              		.loc 1 186 2 is_stmt 1 view .LVU986
 186:src/keys.c    **** }
 3162              		.loc 1 186 13 is_stmt 0 view .LVU987
 3163 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3164              	.LVL268:
 186:src/keys.c    **** }
 3165              		.loc 1 186 17 view .LVU988
 3166 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3167              	.LVL269:
 186:src/keys.c    **** }
 3168              		.loc 1 186 17 view .LVU989
 3169 0032 7047     		bx	lr
 3170              	.LVL270:
 3171              	.L341:
 185:src/keys.c    **** 	return row * 6 + col;
ARM GAS  /tmp/ccczu93l.s 			page 119


 3172              		.loc 1 185 10 view .LVU990
 3173 0034 4FF0FF30 		mov	r0, #-1
 3174              	.LVL271:
 187:src/keys.c    **** 
 3175              		.loc 1 187 1 view .LVU991
 3176 0038 7047     		bx	lr
 3177              	.L343:
 3178 003a 00BF     		.align	2
 3179              	.L342:
 3180 003c 67666666 		.word	1717986919
 3181              		.cfi_endproc
 3182              	.LFE7:
 3184              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3185              		.align	1
 3186              		.p2align 2,,3
 3187              		.global	keycode_to_digit_or_register
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu fpv4-sp-d16
 3193              	keycode_to_digit_or_register:
 3194              	.LVL272:
 3195              	.LFB8:
 201:src/keys.c    ****   static const unsigned char map[] = {
 3196              		.loc 1 201 1 is_stmt 1 view -0
 3197              		.cfi_startproc
 3198              		@ args = 0, pretend = 0, frame = 0
 3199              		@ frame_needed = 0, uses_anonymous_args = 0
 3200              		@ link register save eliminated.
 202:src/keys.c    ****     // K00 - K05
 3201              		.loc 1 202 3 view .LVU993
 223:src/keys.c    **** }
 3202              		.loc 1 223 3 view .LVU994
 3203              	.LBB386:
 3204              	.LBI386:
 121:src/keys.c    **** {
 3205              		.loc 1 121 12 view .LVU995
 3206              	.LBB387:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3207              		.loc 1 123 2 view .LVU996
 133:src/keys.c    **** }
 3208              		.loc 1 133 2 view .LVU997
 133:src/keys.c    **** }
 3209              		.loc 1 133 23 is_stmt 0 view .LVU998
 3210 0000 024B     		ldr	r3, .L345
 3211              	.LBE387:
 3212              	.LBE386:
 223:src/keys.c    **** }
 3213              		.loc 1 223 28 view .LVU999
 3214 0002 034A     		ldr	r2, .L345+4
 3215              	.LBB389:
 3216              	.LBB388:
 133:src/keys.c    **** }
 3217              		.loc 1 133 23 view .LVU1000
 3218 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3219              	.LBE388:
 3220              	.LBE389:
ARM GAS  /tmp/ccczu93l.s 			page 120


 224:src/keys.c    **** #else
 3221              		.loc 1 224 1 view .LVU1001
 3222 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3223              	.LVL273:
 224:src/keys.c    **** #else
 3224              		.loc 1 224 1 view .LVU1002
 3225 0008 7047     		bx	lr
 3226              	.L346:
 3227 000a 00BF     		.align	2
 3228              	.L345:
 3229 000c 00000000 		.word	.LANCHOR1
 3230 0010 00000000 		.word	.LANCHOR0
 3231              		.cfi_endproc
 3232              	.LFE8:
 3234              		.section	.text.init_state,"ax",%progbits
 3235              		.align	1
 3236              		.p2align 2,,3
 3237              		.global	init_state
 3238              		.syntax unified
 3239              		.thumb
 3240              		.thumb_func
 3241              		.fpu fpv4-sp-d16
 3243              	init_state:
 3244              	.LFB13:
 566:src/keys.c    **** #ifndef REALBUILD
 3245              		.loc 1 566 23 is_stmt 1 view -0
 3246              		.cfi_startproc
 3247              		@ args = 0, pretend = 0, frame = 0
 3248              		@ frame_needed = 0, uses_anonymous_args = 0
 568:src/keys.c    **** 	unsigned int b = State2.trace;
 3249              		.loc 1 568 2 view .LVU1004
 566:src/keys.c    **** #ifndef REALBUILD
 3250              		.loc 1 566 23 is_stmt 0 view .LVU1005
 3251 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3252              		.cfi_def_cfa_offset 24
 3253              		.cfi_offset 4, -24
 3254              		.cfi_offset 5, -20
 3255              		.cfi_offset 6, -16
 3256              		.cfi_offset 7, -12
 3257              		.cfi_offset 8, -8
 3258              		.cfi_offset 14, -4
 568:src/keys.c    **** 	unsigned int b = State2.trace;
 3259              		.loc 1 568 25 view .LVU1006
 3260 0004 154C     		ldr	r4, .L349
 576:src/keys.c    **** 	// Removed: will clear any locals on power off
 3261              		.loc 1 576 10 view .LVU1007
 3262 0006 0021     		movs	r1, #0
 580:src/keys.c    **** 	State2.test = TST_NONE;
 3263              		.loc 1 580 2 view .LVU1008
 3264 0008 1422     		movs	r2, #20
 3265 000a 04F10800 		add	r0, r4, #8
 576:src/keys.c    **** 	// Removed: will clear any locals on power off
 3266              		.loc 1 576 10 view .LVU1009
 3267 000e E177     		strb	r1, [r4, #31]
 568:src/keys.c    **** 	unsigned int b = State2.trace;
 3268              		.loc 1 568 25 view .LVU1010
 3269 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 121


 569:src/keys.c    **** #else
 3270              		.loc 1 569 25 view .LVU1011
 3271 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 573:src/keys.c    **** 	int k = LastKey;
 3272              		.loc 1 573 10 view .LVU1012
 3273 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 574:src/keys.c    **** 
 3274              		.loc 1 574 10 view .LVU1013
 3275 0016 94F91380 		ldrsb	r8, [r4, #19]
 580:src/keys.c    **** 	State2.test = TST_NONE;
 3276              		.loc 1 580 2 view .LVU1014
 3277 001a FFF7FEFF 		bl	xset
 3278              	.LVL274:
 582:src/keys.c    **** 	update_program_bounds(1);
 3279              		.loc 1 582 17 view .LVU1015
 3280 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 581:src/keys.c    **** 	State2.runmode = 1;
 3281              		.loc 1 581 14 view .LVU1016
 3282 0020 0722     		movs	r2, #7
 582:src/keys.c    **** 	update_program_bounds(1);
 3283              		.loc 1 582 17 view .LVU1017
 3284 0022 43F04003 		orr	r3, r3, #64
 583:src/keys.c    **** 	set_lift();
 3285              		.loc 1 583 2 view .LVU1018
 3286 0026 0120     		movs	r0, #1
 581:src/keys.c    **** 	State2.runmode = 1;
 3287              		.loc 1 581 14 view .LVU1019
 3288 0028 E273     		strb	r2, [r4, #15]
 582:src/keys.c    **** 	update_program_bounds(1);
 3289              		.loc 1 582 17 view .LVU1020
 3290 002a A375     		strb	r3, [r4, #22]
 583:src/keys.c    **** 	set_lift();
 3291              		.loc 1 583 2 view .LVU1021
 3292 002c FFF7FEFF 		bl	update_program_bounds
 3293              	.LVL275:
 584:src/keys.c    **** 
 3294              		.loc 1 584 2 view .LVU1022
 3295 0030 FFF7FEFF 		bl	set_lift
 3296              	.LVL276:
 591:src/keys.c    **** 	State2.flags = a;
 3297              		.loc 1 591 15 view .LVU1023
 3298 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 592:src/keys.c    **** #else
 3299              		.loc 1 592 15 view .LVU1024
 3300 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 596:src/keys.c    **** }
 3301              		.loc 1 596 15 view .LVU1025
 3302 0038 0949     		ldr	r1, .L349+4
 589:src/keys.c    **** #ifndef REALBUILD
 3303              		.loc 1 589 10 view .LVU1026
 3304 003a 84F81380 		strb	r8, [r4, #19]
 568:src/keys.c    **** 	unsigned int b = State2.trace;
 3305              		.loc 1 568 25 view .LVU1027
 3306 003e 05F00105 		and	r5, r5, #1
 3307              	.LVL277:
 569:src/keys.c    **** #else
 3308              		.loc 1 569 2 is_stmt 1 view .LVU1028
ARM GAS  /tmp/ccczu93l.s 			page 122


 569:src/keys.c    **** #else
 3309              		.loc 1 569 25 is_stmt 0 view .LVU1029
 3310 0042 F609     		lsrs	r6, r6, #7
 3311              	.LVL278:
 573:src/keys.c    **** 	int k = LastKey;
 3312              		.loc 1 573 2 is_stmt 1 view .LVU1030
 573:src/keys.c    **** 	int k = LastKey;
 3313              		.loc 1 573 10 is_stmt 0 view .LVU1031
 3314 0044 FFB2     		uxtb	r7, r7
 3315              	.LVL279:
 574:src/keys.c    **** 
 3316              		.loc 1 574 2 is_stmt 1 view .LVU1032
 576:src/keys.c    **** 	// Removed: will clear any locals on power off
 3317              		.loc 1 576 2 view .LVU1033
 580:src/keys.c    **** 	State2.test = TST_NONE;
 3318              		.loc 1 580 2 view .LVU1034
 581:src/keys.c    **** 	State2.runmode = 1;
 3319              		.loc 1 581 2 view .LVU1035
 582:src/keys.c    **** 	update_program_bounds(1);
 3320              		.loc 1 582 2 view .LVU1036
 583:src/keys.c    **** 	set_lift();
 3321              		.loc 1 583 2 view .LVU1037
 584:src/keys.c    **** 
 3322              		.loc 1 584 2 view .LVU1038
 588:src/keys.c    **** 	LastKey = k;
 3323              		.loc 1 588 2 view .LVU1039
 591:src/keys.c    **** 	State2.flags = a;
 3324              		.loc 1 591 15 is_stmt 0 view .LVU1040
 3325 0046 66F3C712 		bfi	r2, r6, #7, #1
 592:src/keys.c    **** #else
 3326              		.loc 1 592 15 view .LVU1041
 3327 004a 65F30003 		bfi	r3, r5, #0, #1
 596:src/keys.c    **** }
 3328              		.loc 1 596 15 view .LVU1042
 3329 004e 6420     		movs	r0, #100
 591:src/keys.c    **** 	State2.flags = a;
 3330              		.loc 1 591 15 view .LVU1043
 3331 0050 E275     		strb	r2, [r4, #23]
 592:src/keys.c    **** #else
 3332              		.loc 1 592 15 view .LVU1044
 3333 0052 2376     		strb	r3, [r4, #24]
 588:src/keys.c    **** 	LastKey = k;
 3334              		.loc 1 588 10 view .LVU1045
 3335 0054 A774     		strb	r7, [r4, #18]
 589:src/keys.c    **** #ifndef REALBUILD
 3336              		.loc 1 589 2 is_stmt 1 view .LVU1046
 591:src/keys.c    **** 	State2.flags = a;
 3337              		.loc 1 591 2 view .LVU1047
 592:src/keys.c    **** #else
 3338              		.loc 1 592 2 view .LVU1048
 596:src/keys.c    **** }
 3339              		.loc 1 596 2 view .LVU1049
 596:src/keys.c    **** }
 3340              		.loc 1 596 15 is_stmt 0 view .LVU1050
 3341 0056 0860     		str	r0, [r1]
 597:src/keys.c    **** 
 3342              		.loc 1 597 1 view .LVU1051
ARM GAS  /tmp/ccczu93l.s 			page 123


 3343 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3344              	.LVL280:
 3345              	.L350:
 597:src/keys.c    **** 
 3346              		.loc 1 597 1 view .LVU1052
 3347              		.align	2
 3348              	.L349:
 3349 005c 00000000 		.word	StateWhileOn
 3350 0060 00000000 		.word	ShowRegister
 3351              		.cfi_endproc
 3352              	.LFE13:
 3354              		.section	.text.soft_init_state,"ax",%progbits
 3355              		.align	1
 3356              		.p2align 2,,3
 3357              		.global	soft_init_state
 3358              		.syntax unified
 3359              		.thumb
 3360              		.thumb_func
 3361              		.fpu fpv4-sp-d16
 3363              	soft_init_state:
 3364              	.LFB14:
 599:src/keys.c    **** 	int soft;
 3365              		.loc 1 599 28 is_stmt 1 view -0
 3366              		.cfi_startproc
 3367              		@ args = 0, pretend = 0, frame = 0
 3368              		@ frame_needed = 0, uses_anonymous_args = 0
 600:src/keys.c    **** 	unsigned int runmode;
 3369              		.loc 1 600 2 view .LVU1054
 601:src/keys.c    **** 	unsigned int alphas;
 3370              		.loc 1 601 2 view .LVU1055
 602:src/keys.c    **** 
 3371              		.loc 1 602 2 view .LVU1056
 604:src/keys.c    **** 		CmdLineLength = 0;
 3372              		.loc 1 604 2 view .LVU1057
 599:src/keys.c    **** 	int soft;
 3373              		.loc 1 599 28 is_stmt 0 view .LVU1058
 3374 0000 38B5     		push	{r3, r4, r5, lr}
 3375              		.cfi_def_cfa_offset 16
 3376              		.cfi_offset 3, -16
 3377              		.cfi_offset 4, -12
 3378              		.cfi_offset 5, -8
 3379              		.cfi_offset 14, -4
 604:src/keys.c    **** 		CmdLineLength = 0;
 3380              		.loc 1 604 6 view .LVU1059
 3381 0002 114C     		ldr	r4, .L358
 604:src/keys.c    **** 		CmdLineLength = 0;
 3382              		.loc 1 604 5 view .LVU1060
 3383 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3384 0006 D3B9     		cbnz	r3, .L357
 610:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3385              		.loc 1 610 2 is_stmt 1 view .LVU1061
 611:src/keys.c    **** 	runmode = State2.runmode;
 3386              		.loc 1 611 17 is_stmt 0 view .LVU1062
 3387 0008 104A     		ldr	r2, .L358+4
 3388 000a 6369     		ldr	r3, [r4, #20]
 611:src/keys.c    **** 	runmode = State2.runmode;
 3389              		.loc 1 611 60 view .LVU1063
ARM GAS  /tmp/ccczu93l.s 			page 124


 3390 000c 1A42     		tst	r2, r3
 3391 000e 0AD0     		beq	.L354
 3392              	.L355:
 3393              	.LVL281:
 612:src/keys.c    **** 	alphas = State2.alphas;
 3394              		.loc 1 612 2 is_stmt 1 view .LVU1064
 613:src/keys.c    **** 	init_state();
 3395              		.loc 1 613 17 is_stmt 0 view .LVU1065
 3396 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3397              	.LVL282:
 613:src/keys.c    **** 	init_state();
 3398              		.loc 1 613 2 is_stmt 1 view .LVU1066
 614:src/keys.c    **** 	if (soft) {
 3399              		.loc 1 614 2 view .LVU1067
 3400 0012 FFF7FEFF 		bl	init_state
 3401              	.LVL283:
 615:src/keys.c    **** 		State2.runmode = runmode;
 3402              		.loc 1 615 2 view .LVU1068
 616:src/keys.c    **** 		State2.alphas = alphas;
 3403              		.loc 1 616 3 view .LVU1069
 617:src/keys.c    **** 	}
 3404              		.loc 1 617 3 view .LVU1070
 617:src/keys.c    **** 	}
 3405              		.loc 1 617 17 is_stmt 0 view .LVU1071
 3406 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3407 0018 05F04805 		and	r5, r5, #72
 3408 001c 23F04803 		bic	r3, r3, #72
 3409 0020 2B43     		orrs	r3, r3, r5
 3410 0022 A375     		strb	r3, [r4, #22]
 619:src/keys.c    **** 
 3411              		.loc 1 619 1 view .LVU1072
 3412 0024 38BD     		pop	{r3, r4, r5, pc}
 3413              	.LVL284:
 3414              	.L354:
 611:src/keys.c    **** 	runmode = State2.runmode;
 3415              		.loc 1 611 60 discriminator 2 view .LVU1073
 3416 0026 E368     		ldr	r3, [r4, #12]
 3417 0028 23F47F03 		bic	r3, r3, #16711680
 3418 002c 23F47F43 		bic	r3, r3, #65280
 3419 0030 B3F1E06F 		cmp	r3, #117440512
 3420 0034 ECD1     		bne	.L355
 3421              	.LVL285:
 612:src/keys.c    **** 	alphas = State2.alphas;
 3422              		.loc 1 612 2 is_stmt 1 view .LVU1074
 613:src/keys.c    **** 	init_state();
 3423              		.loc 1 613 2 view .LVU1075
 614:src/keys.c    **** 	if (soft) {
 3424              		.loc 1 614 2 view .LVU1076
 619:src/keys.c    **** 
 3425              		.loc 1 619 1 is_stmt 0 view .LVU1077
 3426 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3427              		.cfi_remember_state
 3428              		.cfi_restore 14
 3429              		.cfi_restore 5
 3430              		.cfi_restore 4
 3431              		.cfi_restore 3
 3432              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccczu93l.s 			page 125


 614:src/keys.c    **** 	if (soft) {
 3433              		.loc 1 614 2 view .LVU1078
 3434 003a FFF7FEBF 		b	init_state
 3435              	.LVL286:
 3436              	.L357:
 3437              		.cfi_restore_state
 3438              	.LBB392:
 3439              	.LBI392:
 599:src/keys.c    **** 	int soft;
 3440              		.loc 1 599 6 is_stmt 1 view .LVU1079
 3441              	.LBB393:
 605:src/keys.c    **** 		CmdLineEex = 0;
 3442              		.loc 1 605 3 view .LVU1080
 606:src/keys.c    **** 		CmdLineDot = 0;
 3443              		.loc 1 606 3 view .LVU1081
 607:src/keys.c    **** 		return;
 3444              		.loc 1 607 3 view .LVU1082
 605:src/keys.c    **** 		CmdLineEex = 0;
 3445              		.loc 1 605 17 is_stmt 0 view .LVU1083
 3446 003e 0023     		movs	r3, #0
 3447 0040 A383     		strh	r3, [r4, #28]	@ movhi
 607:src/keys.c    **** 		return;
 3448              		.loc 1 607 14 view .LVU1084
 3449 0042 A377     		strb	r3, [r4, #30]
 608:src/keys.c    **** 	}
 3450              		.loc 1 608 3 is_stmt 1 view .LVU1085
 3451              	.LBE393:
 3452              	.LBE392:
 619:src/keys.c    **** 
 3453              		.loc 1 619 1 is_stmt 0 view .LVU1086
 3454 0044 38BD     		pop	{r3, r4, r5, pc}
 3455              	.L359:
 3456 0046 00BF     		.align	2
 3457              	.L358:
 3458 0048 00000000 		.word	StateWhileOn
 3459 004c 002F2004 		.word	69218048
 3460              		.cfi_endproc
 3461              	.LFE14:
 3463              		.section	.text.current_catalogue_max,"ax",%progbits
 3464              		.align	1
 3465              		.p2align 2,,3
 3466              		.global	current_catalogue_max
 3467              		.syntax unified
 3468              		.thumb
 3469              		.thumb_func
 3470              		.fpu fpv4-sp-d16
 3472              	current_catalogue_max:
 3473              	.LFB39:
2037:src/keys.c    **** 	// A quick table of catalogue sizes
 3474              		.loc 1 2037 33 is_stmt 1 view -0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 0, uses_anonymous_args = 0
 3478              		@ link register save eliminated.
2040:src/keys.c    **** 	{
 3479              		.loc 1 2040 2 view .LVU1088
2071:src/keys.c    **** #endif
ARM GAS  /tmp/ccczu93l.s 			page 126


 3480              		.loc 1 2071 2 view .LVU1089
2071:src/keys.c    **** #endif
 3481              		.loc 1 2071 31 is_stmt 0 view .LVU1090
 3482 0000 024B     		ldr	r3, .L361
2071:src/keys.c    **** #endif
 3483              		.loc 1 2071 24 view .LVU1091
 3484 0002 034A     		ldr	r2, .L361+4
2071:src/keys.c    **** #endif
 3485              		.loc 1 2071 31 view .LVU1092
 3486 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2073:src/keys.c    **** 
 3487              		.loc 1 2073 1 view .LVU1093
 3488 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3489 0008 7047     		bx	lr
 3490              	.L362:
 3491 000a 00BF     		.align	2
 3492              	.L361:
 3493 000c 00000000 		.word	StateWhileOn
 3494 0010 00000000 		.word	.LANCHOR2
 3495              		.cfi_endproc
 3496              	.LFE39:
 3498              		.section	.text.current_catalogue,"ax",%progbits
 3499              		.align	1
 3500              		.p2align 2,,3
 3501              		.global	current_catalogue
 3502              		.syntax unified
 3503              		.thumb
 3504              		.thumb_func
 3505              		.fpu fpv4-sp-d16
 3507              	current_catalogue:
 3508              	.LVL287:
 3509              	.LFB41:
2086:src/keys.c    **** 	// A quick table of catalogue tables
 3510              		.loc 1 2086 33 is_stmt 1 view -0
 3511              		.cfi_startproc
 3512              		@ args = 0, pretend = 0, frame = 0
 3513              		@ frame_needed = 0, uses_anonymous_args = 0
 3514              		@ link register save eliminated.
2089:src/keys.c    **** 	{
 3515              		.loc 1 2089 2 view .LVU1095
2116:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3516              		.loc 1 2116 2 view .LVU1096
2117:src/keys.c    **** 	int m, i;
 3517              		.loc 1 2117 2 view .LVU1097
2117:src/keys.c    **** 	int m, i;
 3518              		.loc 1 2117 25 is_stmt 0 view .LVU1098
 3519 0000 314A     		ldr	r2, .L390
2117:src/keys.c    **** 	int m, i;
 3520              		.loc 1 2117 15 view .LVU1099
 3521 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3522              	.LVL288:
2118:src/keys.c    **** 	unsigned p, q;
 3523              		.loc 1 2118 2 is_stmt 1 view .LVU1100
2119:src/keys.c    **** 
 3524              		.loc 1 2119 2 view .LVU1101
2121:src/keys.c    **** 		if (n == OP_ZERO)
 3525              		.loc 1 2121 2 view .LVU1102
ARM GAS  /tmp/ccczu93l.s 			page 127


2121:src/keys.c    **** 		if (n == OP_ZERO)
 3526              		.loc 1 2121 5 is_stmt 0 view .LVU1103
 3527 0004 102B     		cmp	r3, #16
 3528 0006 39D0     		beq	.L384
2126:src/keys.c    **** 		if (n == OP_ZERO)
 3529              		.loc 1 2126 2 is_stmt 1 view .LVU1104
2126:src/keys.c    **** 		if (n == OP_ZERO)
 3530              		.loc 1 2126 5 is_stmt 0 view .LVU1105
 3531 0008 112B     		cmp	r3, #17
 3532 000a 32D0     		beq	.L385
2131:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3533              		.loc 1 2131 2 is_stmt 1 view .LVU1106
2131:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3534              		.loc 1 2131 5 is_stmt 0 view .LVU1107
 3535 000c 122B     		cmp	r3, #18
 3536 000e 45D0     		beq	.L386
2144:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3537              		.loc 1 2144 2 is_stmt 1 view .LVU1108
2144:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3538              		.loc 1 2144 5 is_stmt 0 view .LVU1109
 3539 0010 0E2B     		cmp	r3, #14
 3540 0012 38D0     		beq	.L387
2147:src/keys.c    **** 
 3541              		.loc 1 2147 3 is_stmt 1 view .LVU1110
2147:src/keys.c    **** 
 3542              		.loc 1 2147 7 is_stmt 0 view .LVU1111
 3543 0014 2D4A     		ldr	r2, .L390+4
2149:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3544              		.loc 1 2149 35 view .LVU1112
 3545 0016 A3F10B01 		sub	r1, r3, #11
2149:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3546              		.loc 1 2149 5 view .LVU1113
 3547 001a 0429     		cmp	r1, #4
2147:src/keys.c    **** 
 3548              		.loc 1 2147 7 view .LVU1114
 3549 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3550              	.LVL289:
2149:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3551              		.loc 1 2149 2 is_stmt 1 view .LVU1115
2149:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3552              		.loc 1 2149 5 is_stmt 0 view .LVU1116
 3553 0020 38D9     		bls	.L370
2152:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3554              		.loc 1 2152 2 is_stmt 1 view .LVU1117
2152:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3555              		.loc 1 2152 5 is_stmt 0 view .LVU1118
 3556 0022 142B     		cmp	r3, #20
 3557 0024 4DD8     		bhi	.L378
2156:src/keys.c    **** 	p = cat[0];
 3558              		.loc 1 2156 2 is_stmt 1 view .LVU1119
2086:src/keys.c    **** 	// A quick table of catalogue tables
 3559              		.loc 1 2086 33 is_stmt 0 view .LVU1120
 3560 0026 10B4     		push	{r4}
 3561              		.cfi_def_cfa_offset 4
 3562              		.cfi_offset 4, -4
2156:src/keys.c    **** 	p = cat[0];
 3563              		.loc 1 2156 11 view .LVU1121
ARM GAS  /tmp/ccczu93l.s 			page 128


 3564 0028 00EBA001 		add	r1, r0, r0, asr #2
2156:src/keys.c    **** 	p = cat[0];
 3565              		.loc 1 2156 6 view .LVU1122
 3566 002c 5318     		adds	r3, r2, r1
 3567              	.LVL290:
2157:src/keys.c    **** 	q = cat[1];
 3568              		.loc 1 2157 2 is_stmt 1 view .LVU1123
2158:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3569              		.loc 1 2158 2 view .LVU1124
2159:src/keys.c    **** 
 3570              		.loc 1 2159 2 view .LVU1125
2159:src/keys.c    **** 
 3571              		.loc 1 2159 35 is_stmt 0 view .LVU1126
 3572 002e 4000     		lsls	r0, r0, #1
 3573              	.LVL291:
2157:src/keys.c    **** 	q = cat[1];
 3574              		.loc 1 2157 4 view .LVU1127
 3575 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3576              	.LVL292:
2158:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3577              		.loc 1 2158 4 view .LVU1128
 3578 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3579              	.LVL293:
2158:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3580              		.loc 1 2158 4 view .LVU1129
 3581 0034 2649     		ldr	r1, .L390+8
 3582              	.LVL294:
2159:src/keys.c    **** 
 3583              		.loc 1 2159 54 view .LVU1130
 3584 0036 C443     		mvns	r4, r0
2159:src/keys.c    **** 
 3585              		.loc 1 2159 35 view .LVU1131
 3586 0038 00F00600 		and	r0, r0, #6
2159:src/keys.c    **** 
 3587              		.loc 1 2159 54 view .LVU1132
 3588 003c 04F00604 		and	r4, r4, #6
2159:src/keys.c    **** 
 3589              		.loc 1 2159 24 view .LVU1133
 3590 0040 0230     		adds	r0, r0, #2
2159:src/keys.c    **** 
 3591              		.loc 1 2159 48 view .LVU1134
 3592 0042 E340     		lsrs	r3, r3, r4
 3593              	.LVL295:
2159:src/keys.c    **** 
 3594              		.loc 1 2159 18 view .LVU1135
 3595 0044 02FA00F0 		lsl	r0, r2, r0
2159:src/keys.c    **** 
 3596              		.loc 1 2159 43 view .LVU1136
 3597 0048 1843     		orrs	r0, r0, r3
2159:src/keys.c    **** 
 3598              		.loc 1 2159 4 view .LVU1137
 3599 004a C0F30903 		ubfx	r3, r0, #0, #10
 3600              	.LVL296:
2162:src/keys.c    **** 		if (m < opcode_breaks[i])
 3601              		.loc 1 2162 2 is_stmt 1 view .LVU1138
2162:src/keys.c    **** 		if (m < opcode_breaks[i])
 3602              		.loc 1 2162 12 view .LVU1139
ARM GAS  /tmp/ccczu93l.s 			page 129


2159:src/keys.c    **** 
 3603              		.loc 1 2159 4 is_stmt 0 view .LVU1140
 3604 004e 3422     		movs	r2, #52
 3605              	.LVL297:
2162:src/keys.c    **** 		if (m < opcode_breaks[i])
 3606              		.loc 1 2162 8 view .LVU1141
 3607 0050 0020     		movs	r0, #0
 3608 0052 01E0     		b	.L374
 3609              	.LVL298:
 3610              	.L389:
2162:src/keys.c    **** 		if (m < opcode_breaks[i])
 3611              		.loc 1 2162 8 view .LVU1142
 3612 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3613              	.LVL299:
 3614              	.L374:
2163:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3615              		.loc 1 2163 3 is_stmt 1 view .LVU1143
2165:src/keys.c    **** 	}
 3616              		.loc 1 2165 3 view .LVU1144
2163:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3617              		.loc 1 2163 6 is_stmt 0 view .LVU1145
 3618 0058 9A42     		cmp	r2, r3
 3619 005a 2FDC     		bgt	.L388
2162:src/keys.c    **** 		if (m < opcode_breaks[i])
 3620              		.loc 1 2162 25 discriminator 2 view .LVU1146
 3621 005c 0130     		adds	r0, r0, #1
 3622              	.LVL300:
2162:src/keys.c    **** 		if (m < opcode_breaks[i])
 3623              		.loc 1 2162 2 discriminator 2 view .LVU1147
 3624 005e 0728     		cmp	r0, #7
2165:src/keys.c    **** 	}
 3625              		.loc 1 2165 5 discriminator 2 view .LVU1148
 3626 0060 A3EB0203 		sub	r3, r3, r2
 3627              	.LVL301:
2162:src/keys.c    **** 		if (m < opcode_breaks[i])
 3628              		.loc 1 2162 24 is_stmt 1 discriminator 2 view .LVU1149
2162:src/keys.c    **** 		if (m < opcode_breaks[i])
 3629              		.loc 1 2162 12 discriminator 2 view .LVU1150
2162:src/keys.c    **** 		if (m < opcode_breaks[i])
 3630              		.loc 1 2162 2 is_stmt 0 discriminator 2 view .LVU1151
 3631 0064 F6D1     		bne	.L389
2167:src/keys.c    **** }
 3632              		.loc 1 2167 2 is_stmt 1 view .LVU1152
2167:src/keys.c    **** }
 3633              		.loc 1 2167 9 is_stmt 0 view .LVU1153
 3634 0066 03F12000 		add	r0, r3, #32
 3635              	.LVL302:
2167:src/keys.c    **** }
 3636              		.loc 1 2167 9 view .LVU1154
 3637 006a 0002     		lsls	r0, r0, #8
 3638              	.L363:
2168:src/keys.c    **** 
 3639              		.loc 1 2168 1 view .LVU1155
 3640 006c 5DF8044B 		ldr	r4, [sp], #4
 3641              		.cfi_restore 4
 3642              		.cfi_def_cfa_offset 0
 3643 0070 7047     		bx	lr
ARM GAS  /tmp/ccczu93l.s 			page 130


 3644              	.LVL303:
 3645              	.L385:
2127:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3646              		.loc 1 2127 3 is_stmt 1 view .LVU1156
2127:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3647              		.loc 1 2127 6 is_stmt 0 view .LVU1157
 3648 0072 4B28     		cmp	r0, #75
 3649 0074 1FD0     		beq	.L376
2129:src/keys.c    **** 	}
 3650              		.loc 1 2129 3 is_stmt 1 view .LVU1158
2129:src/keys.c    **** 	}
 3651              		.loc 1 2129 10 is_stmt 0 view .LVU1159
 3652 0076 40F40450 		orr	r0, r0, #8448
 3653              	.LVL304:
2129:src/keys.c    **** 	}
 3654              		.loc 1 2129 10 view .LVU1160
 3655 007a 7047     		bx	lr
 3656              	.LVL305:
 3657              	.L384:
2122:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3658              		.loc 1 2122 3 is_stmt 1 view .LVU1161
2122:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3659              		.loc 1 2122 6 is_stmt 0 view .LVU1162
 3660 007c 4B28     		cmp	r0, #75
 3661 007e 17D0     		beq	.L375
2124:src/keys.c    **** 	}
 3662              		.loc 1 2124 3 is_stmt 1 view .LVU1163
2124:src/keys.c    **** 	}
 3663              		.loc 1 2124 10 is_stmt 0 view .LVU1164
 3664 0080 40F40050 		orr	r0, r0, #8192
 3665              	.LVL306:
2124:src/keys.c    **** 	}
 3666              		.loc 1 2124 10 view .LVU1165
 3667 0084 7047     		bx	lr
 3668              	.LVL307:
 3669              	.L387:
2144:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3670              		.loc 1 2144 35 discriminator 1 view .LVU1166
 3671 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2145:src/keys.c    **** 	else
 3672              		.loc 1 2145 7 discriminator 1 view .LVU1167
 3673 0088 124B     		ldr	r3, .L390+12
 3674              	.LVL308:
2145:src/keys.c    **** 	else
 3675              		.loc 1 2145 7 discriminator 1 view .LVU1168
 3676 008a 134A     		ldr	r2, .L390+16
 3677              	.LVL309:
2145:src/keys.c    **** 	else
 3678              		.loc 1 2145 7 discriminator 1 view .LVU1169
 3679 008c 11F0100F 		tst	r1, #16
 3680 0090 18BF     		it	ne
 3681 0092 1A46     		movne	r2, r3
 3682              	.L370:
 3683              	.LVL310:
2150:src/keys.c    **** 	}
 3684              		.loc 1 2150 3 is_stmt 1 view .LVU1170
 3685              	.LBB394:
ARM GAS  /tmp/ccczu93l.s 			page 131


 3686              	.LBI394:
2079:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3687              		.loc 1 2079 15 view .LVU1171
 3688              	.LBB395:
2080:src/keys.c    **** }
 3689              		.loc 1 2080 2 view .LVU1172
2080:src/keys.c    **** }
 3690              		.loc 1 2080 9 is_stmt 0 view .LVU1173
 3691 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3692              	.LVL311:
2080:src/keys.c    **** }
 3693              		.loc 1 2080 9 view .LVU1174
 3694 0096 40F48840 		orr	r0, r0, #17408
 3695              	.LVL312:
2080:src/keys.c    **** }
 3696              		.loc 1 2080 9 view .LVU1175
 3697              	.LBE395:
 3698              	.LBE394:
2150:src/keys.c    **** 	}
 3699              		.loc 1 2150 10 view .LVU1176
 3700 009a 7047     		bx	lr
 3701              	.LVL313:
 3702              	.L386:
 3703              	.LBB396:
2132:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3704              		.loc 1 2132 3 is_stmt 1 view .LVU1177
2132:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3705              		.loc 1 2132 33 is_stmt 0 view .LVU1178
 3706 009c 0F4B     		ldr	r3, .L390+20
 3707              	.LVL314:
2132:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3708              		.loc 1 2132 13 view .LVU1179
 3709 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3710              	.LVL315:
2133:src/keys.c    **** 			// Monadic conversion routine
 3711              		.loc 1 2133 3 is_stmt 1 view .LVU1180
2133:src/keys.c    **** 			// Monadic conversion routine
 3712              		.loc 1 2133 6 is_stmt 0 view .LVU1181
 3713 00a0 5728     		cmp	r0, #87
2135:src/keys.c    **** 		else
 3714              		.loc 1 2135 4 is_stmt 1 view .LVU1182
2135:src/keys.c    **** 		else
 3715              		.loc 1 2135 25 is_stmt 0 view .LVU1183
 3716 00a2 C6BF     		itte	gt
 3717 00a4 5838     		subgt	r0, r0, #88
 3718              	.LVL316:
2135:src/keys.c    **** 		else
 3719              		.loc 1 2135 18 view .LVU1184
 3720 00a6 40F40070 		orrgt	r0, r0, #512
2137:src/keys.c    **** 	}
 3721              		.loc 1 2137 4 is_stmt 1 view .LVU1185
2137:src/keys.c    **** 	}
 3722              		.loc 1 2137 11 is_stmt 0 view .LVU1186
 3723 00aa 40F40C40 		orrle	r0, r0, #35840
 3724 00ae 7047     		bx	lr
 3725              	.LVL317:
 3726              	.L375:
ARM GAS  /tmp/ccczu93l.s 			page 132


2137:src/keys.c    **** 	}
 3727              		.loc 1 2137 11 view .LVU1187
 3728              	.LBE396:
2123:src/keys.c    **** 		return CONST(n);
 3729              		.loc 1 2123 11 view .LVU1188
 3730 00b0 4FF42740 		mov	r0, #42752
 3731              	.LVL318:
2123:src/keys.c    **** 		return CONST(n);
 3732              		.loc 1 2123 11 view .LVU1189
 3733 00b4 7047     		bx	lr
 3734              	.LVL319:
 3735              	.L376:
2128:src/keys.c    **** 		return CONST_CMPLX(n);
 3736              		.loc 1 2128 11 view .LVU1190
 3737 00b6 4FF42840 		mov	r0, #43008
 3738              	.LVL320:
2128:src/keys.c    **** 		return CONST_CMPLX(n);
 3739              		.loc 1 2128 11 view .LVU1191
 3740 00ba 7047     		bx	lr
 3741              	.LVL321:
 3742              	.L388:
 3743              		.cfi_def_cfa_offset 4
 3744              		.cfi_offset 4, -4
2164:src/keys.c    **** 		m -= opcode_breaks[i];
 3745              		.loc 1 2164 4 is_stmt 1 view .LVU1192
2164:src/keys.c    **** 		m -= opcode_breaks[i];
 3746              		.loc 1 2164 29 is_stmt 0 view .LVU1193
 3747 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3748              	.LVL322:
2164:src/keys.c    **** 		m -= opcode_breaks[i];
 3749              		.loc 1 2164 29 view .LVU1194
 3750 00c0 D4E7     		b	.L363
 3751              	.LVL323:
 3752              	.L378:
 3753              		.cfi_def_cfa_offset 0
 3754              		.cfi_restore 4
2153:src/keys.c    **** 
 3755              		.loc 1 2153 10 view .LVU1195
 3756 00c2 4FF48070 		mov	r0, #256
 3757              	.LVL324:
2168:src/keys.c    **** 
 3758              		.loc 1 2168 1 view .LVU1196
 3759 00c6 7047     		bx	lr
 3760              	.L391:
 3761              		.align	2
 3762              	.L390:
 3763 00c8 00000000 		.word	StateWhileOn
 3764 00cc 00000000 		.word	.LANCHOR6
 3765 00d0 01000000 		.word	.LANCHOR7+1
 3766 00d4 00000000 		.word	.LANCHOR4
 3767 00d8 00000000 		.word	.LANCHOR3
 3768 00dc 00000000 		.word	.LANCHOR5
 3769              		.cfi_endproc
 3770              	.LFE41:
 3772              		.section	.text.process_catalogue,"ax",%progbits
 3773              		.align	1
 3774              		.p2align 2,,3
ARM GAS  /tmp/ccczu93l.s 			page 133


 3775              		.syntax unified
 3776              		.thumb
 3777              		.thumb_func
 3778              		.fpu fpv4-sp-d16
 3780              	process_catalogue:
 3781              	.LVL325:
 3782              	.LFB43:
2182:src/keys.c    ****    int pos = State.catpos;
 3783              		.loc 1 2182 93 is_stmt 1 view -0
 3784              		.cfi_startproc
 3785              		@ args = 0, pretend = 0, frame = 16
 3786              		@ frame_needed = 0, uses_anonymous_args = 0
2182:src/keys.c    ****    int pos = State.catpos;
 3787              		.loc 1 2182 93 is_stmt 0 view .LVU1198
 3788 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3789              		.cfi_def_cfa_offset 36
 3790              		.cfi_offset 4, -36
 3791              		.cfi_offset 5, -32
 3792              		.cfi_offset 6, -28
 3793              		.cfi_offset 7, -24
 3794              		.cfi_offset 8, -20
 3795              		.cfi_offset 9, -16
 3796              		.cfi_offset 10, -12
 3797              		.cfi_offset 11, -8
 3798              		.cfi_offset 14, -4
2183:src/keys.c    ****    int ch;
 3799              		.loc 1 2183 14 view .LVU1199
 3800 0004 DFF8EC92 		ldr	r9, .L506+24
 3801              	.LBB397:
 3802              	.LBB398:
2071:src/keys.c    **** #endif
 3803              		.loc 1 2071 31 view .LVU1200
 3804 0008 B44F     		ldr	r7, .L506
 3805              	.LBE398:
 3806              	.LBE397:
2183:src/keys.c    ****    int ch;
 3807              		.loc 1 2183 14 view .LVU1201
 3808 000a D9F80040 		ldr	r4, [r9]
 3809              	.LBB403:
 3810              	.LBB399:
2071:src/keys.c    **** #endif
 3811              		.loc 1 2071 31 view .LVU1202
 3812 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 3813              	.LBE399:
 3814              	.LBE403:
2183:src/keys.c    ****    int ch;
 3815              		.loc 1 2183 19 view .LVU1203
 3816 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3817              	.LBB404:
 3818              	.LBB400:
2071:src/keys.c    **** #endif
 3819              		.loc 1 2071 24 view .LVU1204
 3820 0016 B24B     		ldr	r3, .L506+4
 3821              	.LBE400:
 3822              	.LBE404:
2183:src/keys.c    ****    int ch;
 3823              		.loc 1 2183 4 is_stmt 1 view .LVU1205
ARM GAS  /tmp/ccczu93l.s 			page 134


2182:src/keys.c    ****    int pos = State.catpos;
 3824              		.loc 1 2182 93 is_stmt 0 view .LVU1206
 3825 0018 85B0     		sub	sp, sp, #20
 3826              		.cfi_def_cfa_offset 56
 3827              	.LBB405:
 3828              	.LBB401:
2071:src/keys.c    **** #endif
 3829              		.loc 1 2071 24 view .LVU1207
 3830 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3831              	.LBE401:
 3832              	.LBE405:
2182:src/keys.c    ****    int pos = State.catpos;
 3833              		.loc 1 2182 93 view .LVU1208
 3834 001e 1646     		mov	r6, r2
2183:src/keys.c    ****    int ch;
 3835              		.loc 1 2183 8 view .LVU1209
 3836 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3837              	.LVL326:
2184:src/keys.c    ****    const int ctmax = current_catalogue_max();
 3838              		.loc 1 2184 4 is_stmt 1 view .LVU1210
2185:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 3839              		.loc 1 2185 4 view .LVU1211
 3840              	.LBB406:
 3841              	.LBI397:
2037:src/keys.c    **** 	// A quick table of catalogue sizes
 3842              		.loc 1 2037 5 view .LVU1212
 3843              	.LBB402:
2040:src/keys.c    **** 	{
 3844              		.loc 1 2040 2 view .LVU1213
2071:src/keys.c    **** #endif
 3845              		.loc 1 2071 2 view .LVU1214
2071:src/keys.c    **** #endif
 3846              		.loc 1 2071 2 is_stmt 0 view .LVU1215
 3847              	.LBE402:
 3848              	.LBE406:
2186:src/keys.c    **** 
 3849              		.loc 1 2186 4 is_stmt 1 view .LVU1216
2188:src/keys.c    ****      switch (c) {
 3850              		.loc 1 2188 4 view .LVU1217
2188:src/keys.c    ****      switch (c) {
 3851              		.loc 1 2188 7 is_stmt 0 view .LVU1218
 3852 0024 0029     		cmp	r1, #0
 3853 0026 65D0     		beq	.L491
2249:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3854              		.loc 1 2249 11 is_stmt 1 view .LVU1219
2249:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3855              		.loc 1 2249 14 is_stmt 0 view .LVU1220
 3856 0028 0129     		cmp	r1, #1
 3857 002a 00F0ED80 		beq	.L492
2283:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3858              		.loc 1 2283 11 is_stmt 1 view .LVU1221
2283:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3859              		.loc 1 2283 14 is_stmt 0 view .LVU1222
 3860 002e 0229     		cmp	r1, #2
 3861 0030 00F00B81 		beq	.L493
 3862              	.LVL327:
 3863              	.L428:
ARM GAS  /tmp/ccczu93l.s 			page 135


 3864              	.LBB407:
 3865              	.LBB408:
 442:src/keys.c    **** }
 3866              		.loc 1 442 2 is_stmt 1 view .LVU1223
 3867              	.LBB409:
 3868              	.LBI409:
 121:src/keys.c    **** {
 3869              		.loc 1 121 12 view .LVU1224
 3870              	.LBB410:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3871              		.loc 1 123 2 view .LVU1225
 133:src/keys.c    **** }
 3872              		.loc 1 133 2 view .LVU1226
 133:src/keys.c    **** }
 3873              		.loc 1 133 23 is_stmt 0 view .LVU1227
 3874 0034 AB4B     		ldr	r3, .L506+8
 3875              	.LBE410:
 3876              	.LBE409:
 442:src/keys.c    **** }
 3877              		.loc 1 442 49 view .LVU1228
 3878 0036 AC4A     		ldr	r2, .L506+12
 3879              	.LBB412:
 3880              	.LBB411:
 133:src/keys.c    **** }
 3881              		.loc 1 133 23 view .LVU1229
 3882 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3883              	.LBE411:
 3884              	.LBE412:
 442:src/keys.c    **** }
 3885              		.loc 1 442 49 view .LVU1230
 3886 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3887 003e 02EB4303 		add	r3, r2, r3, lsl #1
 3888              	.LBE408:
 3889              	.LBE407:
 3890              	.LBB416:
 3891              	.LBB417:
 3892              	.LBB418:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3893              		.loc 1 96 16 view .LVU1231
 3894 0042 0025     		movs	r5, #0
 3895              	.LVL328:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3896              		.loc 1 96 16 view .LVU1232
 3897              	.LBE418:
 3898              	.LBE417:
 3899              	.LBE416:
2293:src/keys.c    ****    reset_shift();
 3900              		.loc 1 2293 9 view .LVU1233
 3901 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 3902              	.LVL329:
2293:src/keys.c    ****    reset_shift();
 3903              		.loc 1 2293 9 view .LVU1234
 3904 0046 FFF7FEFF 		bl	remap_chars
 3905              	.LVL330:
2293:src/keys.c    ****    reset_shift();
 3906              		.loc 1 2293 9 view .LVU1235
 3907 004a 0446     		mov	r4, r0
ARM GAS  /tmp/ccczu93l.s 			page 136


 3908              	.LVL331:
2294:src/keys.c    ****    if (ch == '\0')
 3909              		.loc 1 2294 4 is_stmt 1 view .LVU1236
 3910              	.LBB423:
 3911              	.LBI416:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3912              		.loc 1 104 13 view .LVU1237
 3913              	.LBE423:
 105:src/keys.c    **** }
 3914              		.loc 1 105 2 view .LVU1238
 3915              	.LBB424:
 3916              	.LBB422:
 3917              	.LBI417:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 3918              		.loc 1 94 20 view .LVU1239
 3919              	.LBB421:
  95:src/keys.c    **** 	State2.shifts = shift;
 3920              		.loc 1 95 2 view .LVU1240
 3921              	.LBB419:
 3922              	.LBI419:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3923              		.loc 1 86 13 view .LVU1241
 3924              	.LBB420:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3925              		.loc 1 87 2 view .LVU1242
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3926              		.loc 1 87 18 is_stmt 0 view .LVU1243
 3927 004c FFF7FEFF 		bl	shift_down
 3928              	.LVL332:
  88:src/keys.c    **** }
 3929              		.loc 1 88 2 is_stmt 1 view .LVU1244
 3930              	.LBE420:
 3931              	.LBE419:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3932              		.loc 1 96 2 view .LVU1245
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3933              		.loc 1 96 16 is_stmt 0 view .LVU1246
 3934 0050 3D74     		strb	r5, [r7, #16]
  98:src/keys.c    **** }
 3935              		.loc 1 98 2 is_stmt 1 view .LVU1247
 3936              	.LVL333:
  98:src/keys.c    **** }
 3937              		.loc 1 98 2 is_stmt 0 view .LVU1248
 3938              	.LBE421:
 3939              	.LBE422:
 3940              	.LBE424:
2295:src/keys.c    ****      return STATE_UNFINISHED;
 3941              		.loc 1 2295 4 is_stmt 1 view .LVU1249
2295:src/keys.c    ****      return STATE_UNFINISHED;
 3942              		.loc 1 2295 7 is_stmt 0 view .LVU1250
 3943 0052 002C     		cmp	r4, #0
 3944 0054 6FD0     		beq	.L490
2297:src/keys.c    ****      // No multi character search in alpha catalogues
 3945              		.loc 1 2297 4 is_stmt 1 view .LVU1251
2297:src/keys.c    ****      // No multi character search in alpha catalogues
 3946              		.loc 1 2297 7 is_stmt 0 view .LVU1252
 3947 0056 AAF10B0A 		sub	r10, r10, #11
ARM GAS  /tmp/ccczu93l.s 			page 137


 3948              	.LVL334:
2297:src/keys.c    ****      // No multi character search in alpha catalogues
 3949              		.loc 1 2297 7 view .LVU1253
 3950 005a BAF1040F 		cmp	r10, #4
 3951 005e 40F2CB80 		bls	.L442
2301:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 3952              		.loc 1 2301 4 is_stmt 1 view .LVU1254
2301:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 3953              		.loc 1 2301 8 is_stmt 0 view .LVU1255
 3954 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2301:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 3955              		.loc 1 2301 7 view .LVU1256
 3956 0064 092D     		cmp	r5, #9
 3957 0066 40F2C780 		bls	.L442
 3958              	.LVL335:
 3959              	.L410:
2306:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 3960              		.loc 1 2306 4 is_stmt 1 view .LVU1257
2306:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 3961              		.loc 1 2306 27 is_stmt 0 view .LVU1258
 3962 006a 7B19     		adds	r3, r7, r5
 3963 006c 0025     		movs	r5, #0
 3964 006e 83F82050 		strb	r5, [r3, #32]
2307:src/keys.c    ****      char buf[16];
 3965              		.loc 1 2307 4 is_stmt 1 view .LVU1259
 3966              	.LVL336:
2307:src/keys.c    ****      char buf[16];
 3967              		.loc 1 2307 18 view .LVU1260
2307:src/keys.c    ****      char buf[16];
 3968              		.loc 1 2307 4 is_stmt 0 view .LVU1261
 3969 0072 B8F1000F 		cmp	r8, #0
 3970 0076 00F0D780 		beq	.L488
 3971              	.LVL337:
 3972              	.L430:
 3973              	.LBB425:
2308:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 3974              		.loc 1 2308 6 is_stmt 1 view .LVU1262
2309:src/keys.c    ****      int i;
 3975              		.loc 1 2309 6 view .LVU1263
2309:src/keys.c    ****      int i;
 3976              		.loc 1 2309 24 is_stmt 0 view .LVU1264
 3977 007a 2846     		mov	r0, r5
 3978 007c FFF7FEFF 		bl	current_catalogue
 3979              	.LVL338:
 3980 0080 6946     		mov	r1, sp
 3981 0082 FFF7FEFF 		bl	catcmd
 3982              	.LVL339:
 3983 0086 0446     		mov	r4, r0
 3984              	.LVL340:
2310:src/keys.c    **** 
 3985              		.loc 1 2310 6 is_stmt 1 view .LVU1265
2312:src/keys.c    ****        cmd++;
 3986              		.loc 1 2312 6 view .LVU1266
2313:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 3987              		.loc 1 2313 8 view .LVU1267
2312:src/keys.c    ****        cmd++;
 3988              		.loc 1 2312 10 is_stmt 0 view .LVU1268
ARM GAS  /tmp/ccczu93l.s 			page 138


 3989 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3990              	.LVL341:
2312:src/keys.c    ****        cmd++;
 3991              		.loc 1 2312 9 view .LVU1269
 3992 008a 1428     		cmp	r0, #20
 3993 008c 04BF     		itt	eq
 3994 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2313:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 3995              		.loc 1 2313 11 view .LVU1270
 3996 0090 0134     		addeq	r4, r4, #1
 3997              	.LVL342:
2314:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 3998              		.loc 1 2314 6 is_stmt 1 view .LVU1271
2314:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 3999              		.loc 1 2314 16 view .LVU1272
2314:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4000              		.loc 1 2314 6 is_stmt 0 view .LVU1273
 4001 0092 0028     		cmp	r0, #0
 4002 0094 00F0BF80 		beq	.L432
 4003 0098 DFF85CB2 		ldr	fp, .L506+28
 4004 009c C4F1010A 		rsb	r10, r4, #1
 4005 00a0 06E0     		b	.L435
 4006              	.LVL343:
 4007              	.L495:
 4008              	.LBB426:
2319:src/keys.c    **** 	 break;
 4009              		.loc 1 2319 16 view .LVU1274
 4010 00a2 C0F2BA80 		blt	.L434
 4011              	.LBE426:
2314:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4012              		.loc 1 2314 19 discriminator 2 view .LVU1275
 4013 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 4014              	.LVL344:
2314:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4015              		.loc 1 2314 6 discriminator 2 view .LVU1276
 4016 00aa 0028     		cmp	r0, #0
 4017 00ac 00F0BF80 		beq	.L494
 4018              	.LVL345:
 4019              	.L435:
 4020              	.LBB427:
2315:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4021              		.loc 1 2315 8 is_stmt 1 view .LVU1277
2315:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4022              		.loc 1 2315 22 is_stmt 0 view .LVU1278
 4023 00b0 FFF7FEFF 		bl	remap_chars
 4024              	.LVL346:
2319:src/keys.c    **** 	 break;
 4025              		.loc 1 2319 13 is_stmt 1 view .LVU1279
 4026              	.LBE427:
2314:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4027              		.loc 1 2314 32 view .LVU1280
 4028              	.LBB428:
2316:src/keys.c    ****        if (c > cl)
 4029              		.loc 1 2316 8 view .LVU1281
2316:src/keys.c    ****        if (c > cl)
 4030              		.loc 1 2316 46 is_stmt 0 view .LVU1282
 4031 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 139


 4032              	.LVL347:
2317:src/keys.c    **** 	 goto set_pos;
 4033              		.loc 1 2317 8 is_stmt 1 view .LVU1283
2317:src/keys.c    **** 	 goto set_pos;
 4034              		.loc 1 2317 11 is_stmt 0 view .LVU1284
 4035 00b8 9842     		cmp	r0, r3
 4036 00ba 0AEB0402 		add	r2, r10, r4
 4037              	.LVL348:
2317:src/keys.c    **** 	 goto set_pos;
 4038              		.loc 1 2317 11 view .LVU1285
 4039              	.LBE428:
2314:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4040              		.loc 1 2314 16 is_stmt 1 view .LVU1286
 4041              	.LBB429:
2317:src/keys.c    **** 	 goto set_pos;
 4042              		.loc 1 2317 11 is_stmt 0 view .LVU1287
 4043 00be F0DD     		ble	.L495
 4044              	.LVL349:
 4045              	.L433:
2317:src/keys.c    **** 	 goto set_pos;
 4046              		.loc 1 2317 11 view .LVU1288
 4047 00c0 D9F80040 		ldr	r4, [r9]
 4048              	.L413:
2317:src/keys.c    **** 	 goto set_pos;
 4049              		.loc 1 2317 11 view .LVU1289
 4050              	.LBE429:
 4051              	.LBE425:
2328:src/keys.c    ****      --pos;
 4052              		.loc 1 2328 10 is_stmt 1 view .LVU1290
 4053 00c4 002E     		cmp	r6, #0
 4054 00c6 00F0B680 		beq	.L417
2328:src/keys.c    ****      --pos;
 4055              		.loc 1 2328 20 is_stmt 0 view .LVU1291
 4056 00ca 4DB1     		cbz	r5, .L411
 4057              	.LVL350:
 4058              	.L489:
2328:src/keys.c    ****      --pos;
 4059              		.loc 1 2328 20 view .LVU1292
 4060 00cc 2846     		mov	r0, r5
 4061 00ce FFF7FEFF 		bl	current_catalogue
 4062              	.LVL351:
2329:src/keys.c    ****    State.catpos = pos;
 4063              		.loc 1 2329 6 is_stmt 1 view .LVU1293
2328:src/keys.c    ****      --pos;
 4064              		.loc 1 2328 10 view .LVU1294
 4065              	.LBB430:
 4066              	.LBI430:
2175:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4067              		.loc 1 2175 12 view .LVU1295
 4068              	.LBB431:
2176:src/keys.c    **** }
 4069              		.loc 1 2176 2 view .LVU1296
2176:src/keys.c    **** }
 4070              		.loc 1 2176 33 is_stmt 0 view .LVU1297
 4071 00d2 00F0F000 		and	r0, r0, #240
 4072              	.LBE431:
 4073              	.LBE430:
ARM GAS  /tmp/ccczu93l.s 			page 140


2328:src/keys.c    ****      --pos;
 4074              		.loc 1 2328 27 view .LVU1298
 4075 00d6 F028     		cmp	r0, #240
 4076 00d8 40F0AD80 		bne	.L417
2328:src/keys.c    ****      --pos;
 4077              		.loc 1 2328 20 view .LVU1299
 4078 00dc 013D     		subs	r5, r5, #1
 4079              	.LVL352:
2328:src/keys.c    ****      --pos;
 4080              		.loc 1 2328 20 view .LVU1300
 4081 00de F5D1     		bne	.L489
 4082              	.LVL353:
 4083              	.L411:
2330:src/keys.c    ****    return STATE_UNFINISHED;
 4084              		.loc 1 2330 4 is_stmt 1 view .LVU1301
2330:src/keys.c    ****    return STATE_UNFINISHED;
 4085              		.loc 1 2330 17 is_stmt 0 view .LVU1302
 4086 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 4087 00e4 65F34B13 		bfi	r3, r5, #5, #7
 4088 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2331:src/keys.c    ****  }
 4089              		.loc 1 2331 4 is_stmt 1 view .LVU1303
2331:src/keys.c    ****  }
 4090              		.loc 1 2331 11 is_stmt 0 view .LVU1304
 4091 00ec 3320     		movs	r0, #51
 4092              	.L502:
2332:src/keys.c    **** 
 4093              		.loc 1 2332 2 view .LVU1305
 4094 00ee 05B0     		add	sp, sp, #20
 4095              		.cfi_remember_state
 4096              		.cfi_def_cfa_offset 36
 4097              		@ sp needed
 4098 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4099              	.LVL354:
 4100              	.L491:
 4101              		.cfi_restore_state
2189:src/keys.c    **** #ifdef DM42
 4102              		.loc 1 2189 6 is_stmt 1 view .LVU1306
 4103 00f4 431F     		subs	r3, r0, #5
 4104 00f6 1F2B     		cmp	r3, #31
 4105 00f8 2FD8     		bhi	.L394
 4106 00fa DFE803F0 		tbb	[pc, r3]
 4107              	.LVL355:
 4108              	.L396:
 4109 00fe 35       		.byte	(.L400-.L396)/2
 4110 00ff 2E       		.byte	(.L394-.L396)/2
 4111 0100 2E       		.byte	(.L394-.L396)/2
 4112 0101 2E       		.byte	(.L394-.L396)/2
 4113 0102 2E       		.byte	(.L394-.L396)/2
 4114 0103 2E       		.byte	(.L394-.L396)/2
 4115 0104 2E       		.byte	(.L394-.L396)/2
 4116 0105 35       		.byte	(.L400-.L396)/2
 4117 0106 2E       		.byte	(.L394-.L396)/2
 4118 0107 2E       		.byte	(.L394-.L396)/2
 4119 0108 2E       		.byte	(.L394-.L396)/2
 4120 0109 20       		.byte	(.L399-.L396)/2
 4121 010a 2E       		.byte	(.L394-.L396)/2
ARM GAS  /tmp/ccczu93l.s 			page 141


 4122 010b 64       		.byte	(.L398-.L396)/2
 4123 010c 2E       		.byte	(.L394-.L396)/2
 4124 010d 2E       		.byte	(.L394-.L396)/2
 4125 010e 2E       		.byte	(.L394-.L396)/2
 4126 010f 2E       		.byte	(.L394-.L396)/2
 4127 0110 2E       		.byte	(.L394-.L396)/2
 4128 0111 6B       		.byte	(.L397-.L396)/2
 4129 0112 2E       		.byte	(.L394-.L396)/2
 4130 0113 2E       		.byte	(.L394-.L396)/2
 4131 0114 2E       		.byte	(.L394-.L396)/2
 4132 0115 2E       		.byte	(.L394-.L396)/2
 4133 0116 2E       		.byte	(.L394-.L396)/2
 4134 0117 2E       		.byte	(.L394-.L396)/2
 4135 0118 2E       		.byte	(.L394-.L396)/2
 4136 0119 2E       		.byte	(.L394-.L396)/2
 4137 011a 2E       		.byte	(.L394-.L396)/2
 4138 011b 2E       		.byte	(.L394-.L396)/2
 4139 011c 2E       		.byte	(.L394-.L396)/2
 4140 011d 27       		.byte	(.L395-.L396)/2
 4141              		.p2align 1
 4142              	.L501:
2278:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4143              		.loc 1 2278 42 is_stmt 0 discriminator 1 view .LVU1307
 4144 011e 734A     		ldr	r2, .L506+16
 4145              	.LVL356:
2278:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4146              		.loc 1 2278 42 discriminator 1 view .LVU1308
 4147 0120 7B69     		ldr	r3, [r7, #20]
2278:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4148              		.loc 1 2278 24 discriminator 1 view .LVU1309
 4149 0122 1A42     		tst	r2, r3
 4150 0124 75D0     		beq	.L425
2280:src/keys.c    ****        return STATE_UNFINISHED;
 4151              		.loc 1 2280 8 is_stmt 1 view .LVU1310
2280:src/keys.c    ****        return STATE_UNFINISHED;
 4152              		.loc 1 2280 38 is_stmt 0 view .LVU1311
 4153 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4154 0128 C3F30012 		ubfx	r2, r3, #4, #1
2280:src/keys.c    ****        return STATE_UNFINISHED;
 4155              		.loc 1 2280 30 view .LVU1312
 4156 012c C2F10102 		rsb	r2, r2, #1
2280:src/keys.c    ****        return STATE_UNFINISHED;
 4157              		.loc 1 2280 26 view .LVU1313
 4158 0130 62F30413 		bfi	r3, r2, #4, #1
 4159 0134 BB75     		strb	r3, [r7, #22]
 4160              	.LVL357:
 4161              	.L490:
2281:src/keys.c    ****      }
 4162              		.loc 1 2281 8 is_stmt 1 view .LVU1314
2281:src/keys.c    ****      }
 4163              		.loc 1 2281 15 is_stmt 0 view .LVU1315
 4164 0136 3320     		movs	r0, #51
 4165              	.L392:
2332:src/keys.c    **** 
 4166              		.loc 1 2332 2 view .LVU1316
 4167 0138 05B0     		add	sp, sp, #20
 4168              		.cfi_remember_state
ARM GAS  /tmp/ccczu93l.s 			page 142


 4169              		.cfi_def_cfa_offset 36
 4170              		@ sp needed
 4171 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4172              	.LVL358:
 4173              	.L399:
 4174              		.cfi_restore_state
2218:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4175              		.loc 1 2218 8 is_stmt 1 view .LVU1317
2218:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4176              		.loc 1 2218 11 is_stmt 0 view .LVU1318
 4177 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 4178 0140 23B1     		cbz	r3, .L395
2218:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4179              		.loc 1 2218 33 discriminator 1 view .LVU1319
 4180 0142 FFF7FEFF 		bl	keyticks
 4181              	.LVL359:
2218:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4182              		.loc 1 2218 30 discriminator 1 view .LVU1320
 4183 0146 1D28     		cmp	r0, #29
 4184 0148 40F39580 		ble	.L496
 4185              	.L395:
2228:src/keys.c    ****        return STATE_UNFINISHED;
 4186              		.loc 1 2228 8 is_stmt 1 view .LVU1321
 4187 014c 0020     		movs	r0, #0
 4188 014e FFF7FEFF 		bl	init_cat
 4189              	.LVL360:
2229:src/keys.c    **** 
 4190              		.loc 1 2229 8 view .LVU1322
2229:src/keys.c    **** 
 4191              		.loc 1 2229 15 is_stmt 0 view .LVU1323
 4192 0152 3320     		movs	r0, #51
2332:src/keys.c    **** 
 4193              		.loc 1 2332 2 view .LVU1324
 4194 0154 05B0     		add	sp, sp, #20
 4195              		.cfi_remember_state
 4196              		.cfi_def_cfa_offset 36
 4197              		@ sp needed
 4198 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4199              	.LVL361:
 4200              	.L394:
 4201              		.cfi_restore_state
 4202              	.LBB432:
 4203              	.LBI407:
 386:src/keys.c    **** {
 4204              		.loc 1 386 12 is_stmt 1 discriminator 4 view .LVU1325
 4205              	.LBB413:
 388:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4206              		.loc 1 388 2 discriminator 4 view .LVU1326
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4207              		.loc 1 436 2 discriminator 4 view .LVU1327
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4208              		.loc 1 436 6 is_stmt 0 discriminator 4 view .LVU1328
 4209 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4210              		.loc 1 436 5 discriminator 4 view .LVU1329
 4211 015c 13F0100F 		tst	r3, #16
 4212 0160 14BF     		ite	ne
ARM GAS  /tmp/ccczu93l.s 			page 143


 4213 0162 0421     		movne	r1, #4
 4214              	.LVL362:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4215              		.loc 1 436 5 discriminator 4 view .LVU1330
 4216 0164 0021     		moveq	r1, #0
 4217 0166 65E7     		b	.L428
 4218              	.LVL363:
 4219              	.L400:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4220              		.loc 1 436 5 discriminator 4 view .LVU1331
 4221              	.LBE413:
 4222              	.LBE432:
2196:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4223              		.loc 1 2196 8 is_stmt 1 view .LVU1332
2196:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4224              		.loc 1 2196 11 is_stmt 0 view .LVU1333
 4225 0168 4545     		cmp	r5, r8
 4226 016a EFDA     		bge	.L395
 4227 016c 2846     		mov	r0, r5
 4228              	.LVL364:
2196:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4229              		.loc 1 2196 24 discriminator 1 view .LVU1334
 4230 016e 002E     		cmp	r6, #0
 4231 0170 00F08D80 		beq	.L497
 4232              	.LVL365:
 4233              	.LBB433:
 4234              	.LBI433:
2175:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4235              		.loc 1 2175 12 is_stmt 1 view .LVU1335
 4236              	.LBB434:
2176:src/keys.c    **** }
 4237              		.loc 1 2176 2 view .LVU1336
2176:src/keys.c    **** }
 4238              		.loc 1 2176 10 is_stmt 0 view .LVU1337
 4239 0174 FFF7FEFF 		bl	current_catalogue
 4240              	.LVL366:
2176:src/keys.c    **** }
 4241              		.loc 1 2176 33 view .LVU1338
 4242 0178 00F0F003 		and	r3, r0, #240
 4243              	.LBE434:
 4244              	.LBE433:
2196:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4245              		.loc 1 2196 27 view .LVU1339
 4246 017c F02B     		cmp	r3, #240
 4247              	.LBB436:
 4248              	.LBB435:
2176:src/keys.c    **** }
 4249              		.loc 1 2176 10 view .LVU1340
 4250 017e 0446     		mov	r4, r0
 4251              	.LBE435:
 4252              	.LBE436:
2196:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4253              		.loc 1 2196 27 view .LVU1341
 4254 0180 E4D0     		beq	.L395
 4255              	.L403:
 4256              	.LBB437:
2197:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 144


 4257              		.loc 1 2197 3 is_stmt 1 view .LVU1342
2199:src/keys.c    **** 
 4258              		.loc 1 2199 3 view .LVU1343
 4259 0182 0020     		movs	r0, #0
 4260 0184 FFF7FEFF 		bl	init_cat
 4261              	.LVL367:
2201:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4262              		.loc 1 2201 3 view .LVU1344
2201:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4263              		.loc 1 2201 6 is_stmt 0 view .LVU1345
 4264 0188 14F47043 		ands	r3, r4, #61440
 4265 018c 00F08C80 		beq	.L404
2201:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4266              		.loc 1 2201 7 discriminator 1 view .LVU1346
 4267 0190 B3F5704F 		cmp	r3, #61440
 4268 0194 00F08880 		beq	.L404
 4269              	.LBB438:
2202:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4270              		.loc 1 2202 5 is_stmt 1 view .LVU1347
2202:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4271              		.loc 1 2202 31 is_stmt 0 view .LVU1348
 4272 0198 C4F30723 		ubfx	r3, r4, #8, #8
 4273 019c A3F12005 		sub	r5, r3, #32
 4274              	.LVL368:
2202:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4275              		.loc 1 2202 31 view .LVU1349
 4276 01a0 EDB2     		uxtb	r5, r5
 4277              	.LVL369:
2203:src/keys.c    **** 	     return op;
 4278              		.loc 1 2203 5 is_stmt 1 view .LVU1350
2203:src/keys.c    **** 	     return op;
 4279              		.loc 1 2203 8 is_stmt 0 view .LVU1351
 4280 01a2 012D     		cmp	r5, #1
 4281 01a4 40F28980 		bls	.L405
2203:src/keys.c    **** 	     return op;
 4282              		.loc 1 2203 56 discriminator 1 view .LVU1352
 4283 01a8 6C2D     		cmp	r5, #108
 4284 01aa 00F08680 		beq	.L405
2203:src/keys.c    **** 	     return op;
 4285              		.loc 1 2203 77 discriminator 2 view .LVU1353
 4286 01ae 242D     		cmp	r5, #36
 4287 01b0 00F08380 		beq	.L405
2205:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4288              		.loc 1 2205 5 is_stmt 1 view .LVU1354
2205:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4289              		.loc 1 2205 30 is_stmt 0 view .LVU1355
 4290 01b4 A5F12D02 		sub	r2, r5, #45
2205:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4291              		.loc 1 2205 8 view .LVU1356
 4292 01b8 062A     		cmp	r2, #6
 4293 01ba 00F29F80 		bhi	.L408
2206:src/keys.c    **** 	   else
 4294              		.loc 1 2206 7 is_stmt 1 view .LVU1357
2206:src/keys.c    **** 	   else
 4295              		.loc 1 2206 28 is_stmt 0 view .LVU1358
 4296 01be 4D3B     		subs	r3, r3, #77
2206:src/keys.c    **** 	   else
ARM GAS  /tmp/ccczu93l.s 			page 145


 4297              		.loc 1 2206 19 view .LVU1359
 4298 01c0 FB73     		strb	r3, [r7, #15]
 4299              	.LBE438:
 4300              	.LBE437:
2215:src/keys.c    **** 
 4301              		.loc 1 2215 15 view .LVU1360
 4302 01c2 3320     		movs	r0, #51
 4303              	.LBB448:
 4304              	.LBB441:
 4305 01c4 B8E7     		b	.L392
 4306              	.LVL370:
 4307              	.L398:
2215:src/keys.c    **** 
 4308              		.loc 1 2215 15 view .LVU1361
 4309              	.LBE441:
 4310              	.LBE448:
2232:src/keys.c    ****        if (pos == 0)
 4311              		.loc 1 2232 8 is_stmt 1 view .LVU1362
2232:src/keys.c    ****        if (pos == 0)
 4312              		.loc 1 2232 22 is_stmt 0 view .LVU1363
 4313 01c6 0023     		movs	r3, #0
 4314 01c8 3B77     		strb	r3, [r7, #28]
2233:src/keys.c    **** 	 goto set_max;
 4315              		.loc 1 2233 8 is_stmt 1 view .LVU1364
2233:src/keys.c    **** 	 goto set_max;
 4316              		.loc 1 2233 11 is_stmt 0 view .LVU1365
 4317 01ca 002D     		cmp	r5, #0
 4318 01cc 5DD1     		bne	.L498
 4319              	.LVL371:
 4320              	.L412:
2326:src/keys.c    ****  set_pos:
 4321              		.loc 1 2326 4 is_stmt 1 view .LVU1366
2326:src/keys.c    ****  set_pos:
 4322              		.loc 1 2326 8 is_stmt 0 view .LVU1367
 4323 01ce 08F1FF35 		add	r5, r8, #-1
 4324              	.LVL372:
2326:src/keys.c    ****  set_pos:
 4325              		.loc 1 2326 8 view .LVU1368
 4326 01d2 77E7     		b	.L413
 4327              	.LVL373:
 4328              	.L397:
2240:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4329              		.loc 1 2240 8 is_stmt 1 view .LVU1369
2240:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4330              		.loc 1 2240 22 is_stmt 0 view .LVU1370
 4331 01d4 0023     		movs	r3, #0
 4332 01d6 3B77     		strb	r3, [r7, #28]
2241:src/keys.c    ****        if (pos >= ctmax)
 4333              		.loc 1 2241 8 is_stmt 1 view .LVU1371
2241:src/keys.c    ****        if (pos >= ctmax)
 4334              		.loc 1 2241 14 is_stmt 0 view .LVU1372
 4335 01d8 06E0     		b	.L416
 4336              	.LVL374:
 4337              	.L499:
2241:src/keys.c    ****        if (pos >= ctmax)
 4338              		.loc 1 2241 29 discriminator 1 view .LVU1373
 4339 01da 66B3     		cbz	r6, .L417
ARM GAS  /tmp/ccczu93l.s 			page 146


 4340              	.LBB449:
 4341              	.LBB450:
2176:src/keys.c    **** }
 4342              		.loc 1 2176 10 view .LVU1374
 4343 01dc FFF7FEFF 		bl	current_catalogue
 4344              	.LVL375:
2176:src/keys.c    **** }
 4345              		.loc 1 2176 33 view .LVU1375
 4346 01e0 00F0F000 		and	r0, r0, #240
 4347              	.LBE450:
 4348              	.LBE449:
2241:src/keys.c    ****        if (pos >= ctmax)
 4349              		.loc 1 2241 41 view .LVU1376
 4350 01e4 F028     		cmp	r0, #240
 4351 01e6 26D1     		bne	.L417
 4352              	.L416:
2241:src/keys.c    ****        if (pos >= ctmax)
 4353              		.loc 1 2241 65 is_stmt 1 discriminator 3 view .LVU1377
2241:src/keys.c    ****        if (pos >= ctmax)
 4354              		.loc 1 2241 14 discriminator 3 view .LVU1378
 4355 01e8 0135     		adds	r5, r5, #1
 4356              	.LVL376:
 4357              	.LBB453:
 4358              	.LBI449:
2175:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4359              		.loc 1 2175 12 discriminator 3 view .LVU1379
 4360              	.LBB451:
2176:src/keys.c    **** }
 4361              		.loc 1 2176 2 discriminator 3 view .LVU1380
 4362              	.LBE451:
 4363              	.LBE453:
2241:src/keys.c    ****        if (pos >= ctmax)
 4364              		.loc 1 2241 14 is_stmt 0 discriminator 3 view .LVU1381
 4365 01ea A845     		cmp	r8, r5
 4366              	.LBB454:
 4367              	.LBB452:
2176:src/keys.c    **** }
 4368              		.loc 1 2176 10 discriminator 3 view .LVU1382
 4369 01ec 2846     		mov	r0, r5
 4370              	.LBE452:
 4371              	.LBE454:
2241:src/keys.c    ****        if (pos >= ctmax)
 4372              		.loc 1 2241 14 discriminator 3 view .LVU1383
 4373 01ee F4DC     		bgt	.L499
 4374              	.LVL377:
2328:src/keys.c    ****      --pos;
 4375              		.loc 1 2328 10 is_stmt 1 view .LVU1384
2243:src/keys.c    ****        goto set_pos;
 4376              		.loc 1 2243 7 is_stmt 0 view .LVU1385
 4377 01f0 3546     		mov	r5, r6
 4378              	.LVL378:
2328:src/keys.c    ****      --pos;
 4379              		.loc 1 2328 10 view .LVU1386
 4380 01f2 06B3     		cbz	r6, .L417
 4381              	.LVL379:
2328:src/keys.c    ****      --pos;
 4382              		.loc 1 2328 10 view .LVU1387
ARM GAS  /tmp/ccczu93l.s 			page 147


 4383 01f4 0025     		movs	r5, #0
 4384              	.LVL380:
2328:src/keys.c    ****      --pos;
 4385              		.loc 1 2328 10 view .LVU1388
 4386 01f6 73E7     		b	.L411
 4387              	.LVL381:
 4388              	.L442:
2301:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4389              		.loc 1 2301 8 view .LVU1389
 4390 01f8 2B46     		mov	r3, r5
2302:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4391              		.loc 1 2302 6 is_stmt 1 view .LVU1390
2302:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4392              		.loc 1 2302 31 is_stmt 0 view .LVU1391
 4393 01fa 3B44     		add	r3, r3, r7
2302:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4394              		.loc 1 2302 27 view .LVU1392
 4395 01fc 0135     		adds	r5, r5, #1
 4396 01fe EDB2     		uxtb	r5, r5
 4397 0200 3D77     		strb	r5, [r7, #28]
2302:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4398              		.loc 1 2302 31 view .LVU1393
 4399 0202 83F82040 		strb	r4, [r3, #32]
 4400 0206 30E7     		b	.L410
 4401              	.LVL382:
 4402              	.L492:
2250:src/keys.c    ****        /*
 4403              		.loc 1 2250 6 is_stmt 1 view .LVU1394
2250:src/keys.c    ****        /*
 4404              		.loc 1 2250 9 is_stmt 0 view .LVU1395
 4405 0208 BAF1120F 		cmp	r10, #18
 4406 020c 21D0     		beq	.L500
 4407              	.L419:
2278:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4408              		.loc 1 2278 11 is_stmt 1 view .LVU1396
2278:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4409              		.loc 1 2278 14 is_stmt 0 view .LVU1397
 4410 020e 2428     		cmp	r0, #36
 4411 0210 85D0     		beq	.L501
 4412              	.LVL383:
 4413              	.L425:
2293:src/keys.c    ****    reset_shift();
 4414              		.loc 1 2293 4 is_stmt 1 view .LVU1398
 4415              	.LBB455:
 386:src/keys.c    **** {
 4416              		.loc 1 386 12 view .LVU1399
 4417              	.LBB414:
 388:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4418              		.loc 1 388 2 view .LVU1400
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4419              		.loc 1 436 2 view .LVU1401
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4420              		.loc 1 436 5 is_stmt 0 view .LVU1402
 4421 0212 0121     		movs	r1, #1
 4422              	.LVL384:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4423              		.loc 1 436 5 view .LVU1403
ARM GAS  /tmp/ccczu93l.s 			page 148


 4424 0214 0EE7     		b	.L428
 4425              	.LVL385:
 4426              	.L432:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4427              		.loc 1 436 5 view .LVU1404
 4428 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 4429              	.LVL386:
 4430              	.L434:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4431              		.loc 1 436 5 view .LVU1405
 4432              	.LBE414:
 4433              	.LBE455:
 4434              	.LBB456:
2322:src/keys.c    ****        goto set_pos;
 4435              		.loc 1 2322 6 is_stmt 1 view .LVU1406
2322:src/keys.c    ****        goto set_pos;
 4436              		.loc 1 2322 9 is_stmt 0 view .LVU1407
 4437 021a 002B     		cmp	r3, #0
 4438 021c 3FF450AF 		beq	.L433
 4439              	.LBE456:
2307:src/keys.c    ****      char buf[16];
 4440              		.loc 1 2307 31 is_stmt 1 view .LVU1408
 4441 0220 0135     		adds	r5, r5, #1
 4442              	.LVL387:
2307:src/keys.c    ****      char buf[16];
 4443              		.loc 1 2307 18 view .LVU1409
2307:src/keys.c    ****      char buf[16];
 4444              		.loc 1 2307 4 is_stmt 0 view .LVU1410
 4445 0222 A845     		cmp	r8, r5
 4446 0224 7FF429AF 		bne	.L430
 4447              	.LVL388:
 4448              	.L488:
2307:src/keys.c    ****      char buf[16];
 4449              		.loc 1 2307 4 view .LVU1411
 4450 0228 D9F80040 		ldr	r4, [r9]
 4451 022c CFE7     		b	.L412
 4452              	.LVL389:
 4453              	.L494:
2307:src/keys.c    ****      char buf[16];
 4454              		.loc 1 2307 4 view .LVU1412
 4455 022e 3A44     		add	r2, r2, r7
 4456              	.LVL390:
2307:src/keys.c    ****      char buf[16];
 4457              		.loc 1 2307 4 view .LVU1413
 4458 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4459              	.LVL391:
2307:src/keys.c    ****      char buf[16];
 4460              		.loc 1 2307 4 view .LVU1414
 4461 0234 F1E7     		b	.L434
 4462              	.LVL392:
 4463              	.L417:
2330:src/keys.c    ****    return STATE_UNFINISHED;
 4464              		.loc 1 2330 17 view .LVU1415
 4465 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 4466 023a 05F07F05 		and	r5, r5, #127
 4467              	.LVL393:
2330:src/keys.c    ****    return STATE_UNFINISHED;
ARM GAS  /tmp/ccczu93l.s 			page 149


 4468              		.loc 1 2330 4 is_stmt 1 view .LVU1416
2330:src/keys.c    ****    return STATE_UNFINISHED;
 4469              		.loc 1 2330 17 is_stmt 0 view .LVU1417
 4470 023e 65F34B13 		bfi	r3, r5, #5, #7
 4471 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2331:src/keys.c    ****  }
 4472              		.loc 1 2331 4 is_stmt 1 view .LVU1418
2331:src/keys.c    ****  }
 4473              		.loc 1 2331 11 is_stmt 0 view .LVU1419
 4474 0246 3320     		movs	r0, #51
 4475 0248 51E7     		b	.L502
 4476              	.LVL394:
 4477              	.L493:
2284:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4478              		.loc 1 2284 6 is_stmt 1 view .LVU1420
2284:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4479              		.loc 1 2284 9 is_stmt 0 view .LVU1421
 4480 024a 1028     		cmp	r0, #16
 4481 024c 23D0     		beq	.L503
 4482              	.L427:
2293:src/keys.c    ****    reset_shift();
 4483              		.loc 1 2293 4 is_stmt 1 view .LVU1422
 4484              	.LVL395:
 4485              	.LBB457:
 386:src/keys.c    **** {
 4486              		.loc 1 386 12 view .LVU1423
 4487              	.LBB415:
 388:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4488              		.loc 1 388 2 view .LVU1424
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4489              		.loc 1 436 2 view .LVU1425
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4490              		.loc 1 436 5 is_stmt 0 view .LVU1426
 4491 024e 0521     		movs	r1, #5
 4492              	.LVL396:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4493              		.loc 1 436 5 view .LVU1427
 4494 0250 F0E6     		b	.L428
 4495              	.LVL397:
 4496              	.L500:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 4497              		.loc 1 436 5 view .LVU1428
 4498              	.LBE415:
 4499              	.LBE457:
2250:src/keys.c    ****        /*
 4500              		.loc 1 2250 32 discriminator 1 view .LVU1429
 4501 0252 0128     		cmp	r0, #1
 4502 0254 DBD1     		bne	.L419
 4503              	.LBB458:
2259:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4504              		.loc 1 2259 8 is_stmt 1 view .LVU1430
2267:src/keys.c    ****        int i;
 4505              		.loc 1 2267 8 view .LVU1431
2267:src/keys.c    ****        int i;
 4506              		.loc 1 2267 26 is_stmt 0 view .LVU1432
 4507 0256 2846     		mov	r0, r5
 4508              	.LVL398:
ARM GAS  /tmp/ccczu93l.s 			page 150


2267:src/keys.c    ****        int i;
 4509              		.loc 1 2267 26 view .LVU1433
 4510 0258 FFF7FEFF 		bl	current_catalogue
 4511              	.LVL399:
2267:src/keys.c    ****        int i;
 4512              		.loc 1 2267 26 view .LVU1434
 4513 025c 0446     		mov	r4, r0
 4514              	.LVL400:
2268:src/keys.c    **** 
 4515              		.loc 1 2268 8 is_stmt 1 view .LVU1435
2270:src/keys.c    ****        if (isRARG(op))
 4516              		.loc 1 2270 8 view .LVU1436
 4517 025e 0020     		movs	r0, #0
 4518              	.LVL401:
2270:src/keys.c    ****        if (isRARG(op))
 4519              		.loc 1 2270 8 is_stmt 0 view .LVU1437
 4520 0260 FFF7FEFF 		bl	init_cat
 4521              	.LVL402:
2271:src/keys.c    **** 	 return op ^ 1;
 4522              		.loc 1 2271 8 is_stmt 1 view .LVU1438
2271:src/keys.c    **** 	 return op ^ 1;
 4523              		.loc 1 2271 11 is_stmt 0 view .LVU1439
 4524 0264 14F47043 		ands	r3, r4, #61440
 4525 0268 29D0     		beq	.L420
2271:src/keys.c    **** 	 return op ^ 1;
 4526              		.loc 1 2271 12 discriminator 1 view .LVU1440
 4527 026a B3F5704F 		cmp	r3, #61440
 4528 026e 26D0     		beq	.L420
2272:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4529              		.loc 1 2272 3 is_stmt 1 view .LVU1441
2272:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4530              		.loc 1 2272 13 is_stmt 0 view .LVU1442
 4531 0270 84F00100 		eor	r0, r4, #1
 4532 0274 60E7     		b	.L392
 4533              	.LVL403:
 4534              	.L496:
2272:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4535              		.loc 1 2272 13 view .LVU1443
 4536              	.LBE458:
2219:src/keys.c    **** 	   goto search;
 4537              		.loc 1 2219 3 is_stmt 1 view .LVU1444
2219:src/keys.c    **** 	   goto search;
 4538              		.loc 1 2219 7 is_stmt 0 view .LVU1445
 4539 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 4540              	.LVL404:
2219:src/keys.c    **** 	   goto search;
 4541              		.loc 1 2219 7 view .LVU1446
 4542 0278 013D     		subs	r5, r5, #1
 4543 027a EDB2     		uxtb	r5, r5
2219:src/keys.c    **** 	   goto search;
 4544              		.loc 1 2219 6 view .LVU1447
 4545 027c 3D77     		strb	r5, [r7, #28]
 4546 027e 002D     		cmp	r5, #0
 4547 0280 7FF4F3AE 		bne	.L410
 4548 0284 D9F80040 		ldr	r4, [r9]
 4549 0288 2AE7     		b	.L411
 4550              	.LVL405:
ARM GAS  /tmp/ccczu93l.s 			page 151


 4551              	.L498:
2236:src/keys.c    ****        goto set_pos;
 4552              		.loc 1 2236 3 is_stmt 1 view .LVU1448
 4553 028a 013D     		subs	r5, r5, #1
 4554              	.LVL406:
2237:src/keys.c    **** 
 4555              		.loc 1 2237 8 view .LVU1449
 4556 028c 1AE7     		b	.L413
 4557              	.LVL407:
 4558              	.L497:
2237:src/keys.c    **** 
 4559              		.loc 1 2237 8 is_stmt 0 view .LVU1450
 4560 028e FFF7FEFF 		bl	current_catalogue
 4561              	.LVL408:
2237:src/keys.c    **** 
 4562              		.loc 1 2237 8 view .LVU1451
 4563 0292 0446     		mov	r4, r0
 4564 0294 75E7     		b	.L403
 4565              	.LVL409:
 4566              	.L503:
2284:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4567              		.loc 1 2284 19 discriminator 1 view .LVU1452
 4568 0296 BAF1130F 		cmp	r10, #19
 4569 029a D8D1     		bne	.L427
2285:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 4570              		.loc 1 2285 8 is_stmt 1 view .LVU1453
 4571 029c 0020     		movs	r0, #0
 4572              	.LVL410:
2285:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 4573              		.loc 1 2285 8 is_stmt 0 view .LVU1454
 4574 029e FFF7FEFF 		bl	init_cat
 4575              	.LVL411:
2286:src/keys.c    ****      }
 4576              		.loc 1 2286 8 is_stmt 1 view .LVU1455
2286:src/keys.c    ****      }
 4577              		.loc 1 2286 15 is_stmt 0 view .LVU1456
 4578 02a2 40F23D10 		movw	r0, #317
 4579 02a6 47E7     		b	.L392
 4580              	.L404:
 4581              	.LBB459:
2211:src/keys.c    **** 	 }
 4582              		.loc 1 2211 5 is_stmt 1 view .LVU1457
 4583              	.LBB442:
 4584              	.LBB443:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 4585              		.loc 1 622 5 is_stmt 0 view .LVU1458
 4586 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 4587 02ac 012B     		cmp	r3, #1
 4588              	.LBE443:
 4589              	.LBE442:
2211:src/keys.c    **** 	 }
 4590              		.loc 1 2211 12 view .LVU1459
 4591 02ae 2046     		mov	r0, r4
 4592              	.LVL412:
 4593              	.LBB445:
 4594              	.LBI442:
 621:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
ARM GAS  /tmp/ccczu93l.s 			page 152


 4595              		.loc 1 621 12 is_stmt 1 view .LVU1460
 4596              	.LBB444:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 4597              		.loc 1 622 2 view .LVU1461
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 4598              		.loc 1 622 5 is_stmt 0 view .LVU1462
 4599 02b0 7FF442AF 		bne	.L392
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 4600              		.loc 1 622 5 view .LVU1463
 4601 02b4 FFF7FEFF 		bl	check_confirm.part.0
 4602              	.LVL413:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 4603              		.loc 1 622 5 view .LVU1464
 4604 02b8 3EE7     		b	.L392
 4605              	.LVL414:
 4606              	.L405:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 4607              		.loc 1 622 5 view .LVU1465
 4608              	.LBE444:
 4609              	.LBE445:
 4610              	.LBB446:
2204:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4611              		.loc 1 2204 7 is_stmt 1 view .LVU1466
2204:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4612              		.loc 1 2204 14 is_stmt 0 view .LVU1467
 4613 02ba 2046     		mov	r0, r4
 4614 02bc 3CE7     		b	.L392
 4615              	.LVL415:
 4616              	.L420:
2204:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4617              		.loc 1 2204 14 view .LVU1468
 4618 02be 0C48     		ldr	r0, .L506+20
 4619              	.LBE446:
 4620              	.LBE459:
2182:src/keys.c    ****    int pos = State.catpos;
 4621              		.loc 1 2182 93 view .LVU1469
 4622 02c0 40F28522 		movw	r2, #645
 4623 02c4 0146     		mov	r1, r0
 4624 02c6 0023     		movs	r3, #0
 4625 02c8 01E0     		b	.L422
 4626              	.LVL416:
 4627              	.L505:
2182:src/keys.c    ****    int pos = State.catpos;
 4628              		.loc 1 2182 93 view .LVU1470
 4629 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 4630              	.LVL417:
 4631              	.L422:
 4632              	.LBB460:
2274:src/keys.c    **** 	   return conv_mapping[i^1];
 4633              		.loc 1 2274 3 is_stmt 1 view .LVU1471
2273:src/keys.c    **** 	 if (op == conv_mapping[i])
 4634              		.loc 1 2273 72 view .LVU1472
2274:src/keys.c    **** 	   return conv_mapping[i^1];
 4635              		.loc 1 2274 6 is_stmt 0 view .LVU1473
 4636 02ce A242     		cmp	r2, r4
 4637 02d0 1ED0     		beq	.L504
2273:src/keys.c    **** 	 if (op == conv_mapping[i])
ARM GAS  /tmp/ccczu93l.s 			page 153


 4638              		.loc 1 2273 72 discriminator 2 view .LVU1474
 4639 02d2 0133     		adds	r3, r3, #1
 4640              	.LVL418:
2273:src/keys.c    **** 	 if (op == conv_mapping[i])
 4641              		.loc 1 2273 20 is_stmt 1 discriminator 2 view .LVU1475
2273:src/keys.c    **** 	 if (op == conv_mapping[i])
 4642              		.loc 1 2273 8 is_stmt 0 discriminator 2 view .LVU1476
 4643 02d4 0C2B     		cmp	r3, #12
 4644 02d6 F8D1     		bne	.L505
 4645 02d8 2DE7     		b	.L490
 4646              	.L507:
 4647 02da 00BF     		.align	2
 4648              	.L506:
 4649 02dc 00000000 		.word	StateWhileOn
 4650 02e0 00000000 		.word	.LANCHOR2
 4651 02e4 00000000 		.word	.LANCHOR1
 4652 02e8 00000000 		.word	.LANCHOR9
 4653 02ec 00080800 		.word	526336
 4654 02f0 00000000 		.word	.LANCHOR8
 4655 02f4 00000000 		.word	main_ram
 4656 02f8 1F000000 		.word	StateWhileOn+31
 4657              	.LVL419:
 4658              	.L408:
2273:src/keys.c    **** 	 if (op == conv_mapping[i])
 4659              		.loc 1 2273 8 discriminator 2 view .LVU1477
 4660              	.LBE460:
 4661              	.LBB461:
 4662              	.LBB447:
2208:src/keys.c    **** 	 }
 4663              		.loc 1 2208 7 is_stmt 1 view .LVU1478
 4664              	.LBB439:
 4665              	.LBI439:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 4666              		.loc 1 503 13 view .LVU1479
 4667              	.LBB440:
 504:src/keys.c    **** 		return;
 4668              		.loc 1 504 2 view .LVU1480
 504:src/keys.c    **** 		return;
 4669              		.loc 1 504 6 is_stmt 0 view .LVU1481
 4670 02fc FFF7FEFF 		bl	is_bad_cmdline
 4671              	.LVL420:
 504:src/keys.c    **** 		return;
 4672              		.loc 1 504 5 view .LVU1482
 4673 0300 0028     		cmp	r0, #0
 4674 0302 7FF418AF 		bne	.L490
 4675 0306 2846     		mov	r0, r5
 4676 0308 FFF7FEFF 		bl	init_arg.part.0
 4677              	.LVL421:
 4678              	.LBE440:
 4679              	.LBE439:
 4680              	.LBE447:
 4681              	.LBE461:
2215:src/keys.c    **** 
 4682              		.loc 1 2215 15 view .LVU1483
 4683 030c 3320     		movs	r0, #51
 4684 030e 13E7     		b	.L392
 4685              	.LVL422:
ARM GAS  /tmp/ccczu93l.s 			page 154


 4686              	.L504:
 4687              	.LBB462:
2275:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4688              		.loc 1 2275 5 is_stmt 1 view .LVU1484
2275:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4689              		.loc 1 2275 26 is_stmt 0 view .LVU1485
 4690 0310 83F00103 		eor	r3, r3, #1
 4691              	.LVL423:
2275:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4692              		.loc 1 2275 24 view .LVU1486
 4693 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4694 0318 0EE7     		b	.L392
 4695              	.LBE462:
 4696              		.cfi_endproc
 4697              	.LFE43:
 4699              		.section	.text.find_pos,"ax",%progbits
 4700              		.align	1
 4701              		.p2align 2,,3
 4702              		.global	find_pos
 4703              		.syntax unified
 4704              		.thumb
 4705              		.thumb_func
 4706              		.fpu fpv4-sp-d16
 4708              	find_pos:
 4709              	.LVL424:
 4710              	.LFB44:
2335:src/keys.c    **** 	int pos;
 4711              		.loc 1 2335 32 is_stmt 1 view -0
 4712              		.cfi_startproc
 4713              		@ args = 0, pretend = 0, frame = 16
 4714              		@ frame_needed = 0, uses_anonymous_args = 0
2336:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4715              		.loc 1 2336 2 view .LVU1488
2337:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4716              		.loc 1 2337 2 view .LVU1489
 4717              	.LBB463:
 4718              	.LBI463:
2037:src/keys.c    **** 	// A quick table of catalogue sizes
 4719              		.loc 1 2037 5 view .LVU1490
 4720              	.LBB464:
2040:src/keys.c    **** 	{
 4721              		.loc 1 2040 2 view .LVU1491
2071:src/keys.c    **** #endif
 4722              		.loc 1 2071 2 view .LVU1492
 4723              	.LBE464:
 4724              	.LBE463:
2335:src/keys.c    **** 	int pos;
 4725              		.loc 1 2335 32 is_stmt 0 view .LVU1493
 4726 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4727              		.cfi_def_cfa_offset 32
 4728              		.cfi_offset 4, -32
 4729              		.cfi_offset 5, -28
 4730              		.cfi_offset 6, -24
 4731              		.cfi_offset 7, -20
 4732              		.cfi_offset 8, -16
 4733              		.cfi_offset 9, -12
 4734              		.cfi_offset 10, -8
ARM GAS  /tmp/ccczu93l.s 			page 155


 4735              		.cfi_offset 14, -4
 4736              	.LBB466:
 4737              	.LBB465:
2071:src/keys.c    **** #endif
 4738              		.loc 1 2071 31 view .LVU1494
 4739 0004 1E4B     		ldr	r3, .L525
2071:src/keys.c    **** #endif
 4740              		.loc 1 2071 24 view .LVU1495
 4741 0006 1F4A     		ldr	r2, .L525+4
2071:src/keys.c    **** #endif
 4742              		.loc 1 2071 31 view .LVU1496
 4743 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2071:src/keys.c    **** #endif
 4744              		.loc 1 2071 24 view .LVU1497
 4745 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4746              	.LVL425:
2071:src/keys.c    **** #endif
 4747              		.loc 1 2071 24 view .LVU1498
 4748              	.LBE465:
 4749              	.LBE466:
2338:src/keys.c    **** 		char buf[16];
 4750              		.loc 1 2338 2 is_stmt 1 view .LVU1499
2338:src/keys.c    **** 		char buf[16];
 4751              		.loc 1 2338 16 view .LVU1500
2335:src/keys.c    **** 	int pos;
 4752              		.loc 1 2335 32 is_stmt 0 view .LVU1501
 4753 000e 84B0     		sub	sp, sp, #16
 4754              		.cfi_def_cfa_offset 48
2338:src/keys.c    **** 		char buf[16];
 4755              		.loc 1 2338 2 view .LVU1502
 4756 0010 BAF1000F 		cmp	r10, #0
 4757 0014 32D0     		beq	.L515
 4758 0016 8146     		mov	r9, r0
2338:src/keys.c    **** 		char buf[16];
 4759              		.loc 1 2338 11 view .LVU1503
 4760 0018 4FF00008 		mov	r8, #0
 4761 001c C0F10107 		rsb	r7, r0, #1
 4762              	.LVL426:
 4763              	.L514:
 4764              	.LBB467:
2339:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4765              		.loc 1 2339 3 is_stmt 1 view .LVU1504
2340:src/keys.c    **** 		int i;
 4766              		.loc 1 2340 3 view .LVU1505
2340:src/keys.c    **** 		int i;
 4767              		.loc 1 2340 21 is_stmt 0 view .LVU1506
 4768 0020 4046     		mov	r0, r8
 4769 0022 FFF7FEFF 		bl	current_catalogue
 4770              	.LVL427:
 4771 0026 6946     		mov	r1, sp
 4772 0028 FFF7FEFF 		bl	catcmd
 4773              	.LVL428:
 4774 002c 0646     		mov	r6, r0
 4775              	.LVL429:
2341:src/keys.c    **** 
 4776              		.loc 1 2341 3 is_stmt 1 view .LVU1507
2343:src/keys.c    **** 			cmd++;
ARM GAS  /tmp/ccczu93l.s 			page 156


 4777              		.loc 1 2343 3 view .LVU1508
2344:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4778              		.loc 1 2344 4 view .LVU1509
2343:src/keys.c    **** 			cmd++;
 4779              		.loc 1 2343 7 is_stmt 0 view .LVU1510
 4780 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4781              	.LVL430:
2343:src/keys.c    **** 			cmd++;
 4782              		.loc 1 2343 6 view .LVU1511
 4783 0030 1428     		cmp	r0, #20
 4784 0032 04BF     		itt	eq
 4785 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2344:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4786              		.loc 1 2344 7 view .LVU1512
 4787 0036 0136     		addeq	r6, r6, #1
 4788              	.LVL431:
2345:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4789              		.loc 1 2345 3 is_stmt 1 view .LVU1513
2345:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4790              		.loc 1 2345 13 view .LVU1514
2345:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4791              		.loc 1 2345 3 is_stmt 0 view .LVU1515
 4792 0038 A8B1     		cbz	r0, .L516
 4793 003a 09F1FF33 		add	r3, r9, #-1
 4794 003e 04E0     		b	.L513
 4795              	.LVL432:
 4796              	.L524:
 4797              	.LBB468:
2350:src/keys.c    **** 				break;
 4798              		.loc 1 2350 12 view .LVU1516
 4799 0040 12DB     		blt	.L511
 4800              	.LBE468:
2345:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4801              		.loc 1 2345 16 discriminator 2 view .LVU1517
 4802 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4803              	.LVL433:
2345:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4804              		.loc 1 2345 16 discriminator 2 view .LVU1518
 4805 0046 3C44     		add	r4, r4, r7
2345:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4806              		.loc 1 2345 3 discriminator 2 view .LVU1519
 4807 0048 B0B1     		cbz	r0, .L523
 4808              	.LVL434:
 4809              	.L513:
 4810              	.LBB469:
2346:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4811              		.loc 1 2346 4 is_stmt 1 view .LVU1520
 4812 004a 5C1C     		adds	r4, r3, #1
2346:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4813              		.loc 1 2346 18 is_stmt 0 view .LVU1521
 4814 004c FFF7FEFF 		bl	remap_chars
 4815              	.LVL435:
 4816 0050 0546     		mov	r5, r0
2347:src/keys.c    **** 			if (c > cl)
 4817              		.loc 1 2347 19 view .LVU1522
 4818 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4819              	.LVL436:
ARM GAS  /tmp/ccczu93l.s 			page 157


2347:src/keys.c    **** 			if (c > cl)
 4820              		.loc 1 2347 4 is_stmt 1 view .LVU1523
2347:src/keys.c    **** 			if (c > cl)
 4821              		.loc 1 2347 19 is_stmt 0 view .LVU1524
 4822 0054 FFF7FEFF 		bl	remap_chars
 4823              	.LVL437:
2350:src/keys.c    **** 				break;
 4824              		.loc 1 2350 9 is_stmt 1 view .LVU1525
 4825              	.LBE469:
2345:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4826              		.loc 1 2345 29 view .LVU1526
2345:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4827              		.loc 1 2345 13 view .LVU1527
 4828              	.LBB470:
2348:src/keys.c    **** 				return pos;
 4829              		.loc 1 2348 4 view .LVU1528
2348:src/keys.c    **** 				return pos;
 4830              		.loc 1 2348 7 is_stmt 0 view .LVU1529
 4831 0058 8542     		cmp	r5, r0
 4832 005a 2346     		mov	r3, r4
 4833 005c F0DD     		ble	.L524
 4834              	.LVL438:
 4835              	.L508:
2348:src/keys.c    **** 				return pos;
 4836              		.loc 1 2348 7 view .LVU1530
 4837              	.LBE470:
 4838              	.LBE467:
2357:src/keys.c    **** 
 4839              		.loc 1 2357 1 view .LVU1531
 4840 005e 4046     		mov	r0, r8
 4841 0060 04B0     		add	sp, sp, #16
 4842              		.cfi_remember_state
 4843              		.cfi_def_cfa_offset 32
 4844              		@ sp needed
 4845 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4846              	.LVL439:
 4847              	.L516:
 4848              		.cfi_restore_state
 4849              	.LBB471:
2345:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4850              		.loc 1 2345 3 view .LVU1532
 4851 0066 4C46     		mov	r4, r9
 4852              	.LVL440:
 4853              	.L511:
2353:src/keys.c    **** 			return pos;
 4854              		.loc 1 2353 3 is_stmt 1 view .LVU1533
2353:src/keys.c    **** 			return pos;
 4855              		.loc 1 2353 6 is_stmt 0 view .LVU1534
 4856 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4857 006a 002B     		cmp	r3, #0
 4858 006c F7D0     		beq	.L508
 4859              	.LBE471:
2338:src/keys.c    **** 		char buf[16];
 4860              		.loc 1 2338 29 is_stmt 1 view .LVU1535
 4861 006e 08F10108 		add	r8, r8, #1
 4862              	.LVL441:
2338:src/keys.c    **** 		char buf[16];
ARM GAS  /tmp/ccczu93l.s 			page 158


 4863              		.loc 1 2338 16 view .LVU1536
2338:src/keys.c    **** 		char buf[16];
 4864              		.loc 1 2338 2 is_stmt 0 view .LVU1537
 4865 0072 D045     		cmp	r8, r10
 4866 0074 D4D1     		bne	.L514
 4867 0076 F2E7     		b	.L508
 4868              	.LVL442:
 4869              	.L523:
2338:src/keys.c    **** 		char buf[16];
 4870              		.loc 1 2338 2 view .LVU1538
 4871 0078 4C44     		add	r4, r4, r9
 4872 007a F5E7     		b	.L511
 4873              	.LVL443:
 4874              	.L515:
2338:src/keys.c    **** 		char buf[16];
 4875              		.loc 1 2338 11 view .LVU1539
 4876 007c D046     		mov	r8, r10
 4877 007e EEE7     		b	.L508
 4878              	.L526:
 4879              		.align	2
 4880              	.L525:
 4881 0080 00000000 		.word	StateWhileOn
 4882 0084 00000000 		.word	.LANCHOR2
 4883              		.cfi_endproc
 4884              	.LFE44:
 4886              		.section	.text.get_alpha_state,"ax",%progbits
 4887              		.align	1
 4888              		.p2align 2,,3
 4889              		.global	get_alpha_state
 4890              		.syntax unified
 4891              		.thumb
 4892              		.thumb_func
 4893              		.fpu fpv4-sp-d16
 4895              	get_alpha_state:
 4896              	.LFB56:
2682:src/keys.c    **** 
2683:src/keys.c    **** 
2684:src/keys.c    **** static int process_registerlist(const keycode c) {
2685:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2686:src/keys.c    **** 	enum shifts shift = reset_shift();
2687:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2688:src/keys.c    **** 	const int g_max = global_regs();
2689:src/keys.c    **** 
2690:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2691:src/keys.c    **** 		if (local_regs())
2692:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2693:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2694:src/keys.c    **** 		goto reset_window;
2695:src/keys.c    **** 	}
2696:src/keys.c    **** 	else if (n <= 9) {
2697:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2698:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2699:src/keys.c    **** 			dv = n;
2700:src/keys.c    **** 		State2.digval = dv;
2701:src/keys.c    **** 		goto reset_window;
2702:src/keys.c    **** 	}
2703:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
ARM GAS  /tmp/ccczu93l.s 			page 159


2704:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2705:src/keys.c    **** 		set_smode(SDISP_SHOW);
2706:src/keys.c    **** 	}
2707:src/keys.c    **** 	else if (n != NO_REG) {
2708:src/keys.c    **** 		State2.digval = n;
2709:src/keys.c    **** 		goto reset_window;
2710:src/keys.c    **** 	}
2711:src/keys.c    **** 
2712:src/keys.c    **** 	switch (c) {
2713:src/keys.c    **** 	case K_DOWN:
2714:src/keys.c    **** 		if (State2.digval > 0) {
2715:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2716:src/keys.c    **** 				State2.digval = global_regs();
2717:src/keys.c    **** 			--State2.digval;
2718:src/keys.c    **** 		}
2719:src/keys.c    **** 		else
2720:src/keys.c    **** 			State2.digval = max - 1;
2721:src/keys.c    **** 		goto reset_window;
2722:src/keys.c    **** 
2723:src/keys.c    **** 	case K_UP:
2724:src/keys.c    **** 		if (State2.digval < max - 1) {
2725:src/keys.c    **** 			State2.digval++;
2726:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2727:src/keys.c    **** 				State2.digval = regX_idx;
2728:src/keys.c    **** 		}
2729:src/keys.c    **** 		else	
2730:src/keys.c    **** 			State2.digval = 0;
2731:src/keys.c    **** 		goto reset_window;
2732:src/keys.c    **** 
2733:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2734:src/keys.c    **** 	case K04:
2735:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2736:src/keys.c    **** 		goto reset_window;
2737:src/keys.c    **** #endif
2738:src/keys.c    **** 
2739:src/keys.c    **** 	case K24:			
2740:src/keys.c    **** 	//case K60:
2741:src/keys.c    **** 		if (State2.disp_temp)
2742:src/keys.c    **** 			return STATE_UNFINISHED;
2743:src/keys.c    **** 		break;		// Exit doing nothing
2744:src/keys.c    **** 
2745:src/keys.c    **** 	case K20:		// ENTER
2746:src/keys.c    **** 		if (shift == SHIFT_F) {
2747:src/keys.c    **** 			State2.disp_as_alpha = 1;
2748:src/keys.c    **** 			goto reset_window;
2749:src/keys.c    **** 		}
2750:src/keys.c    **** 	case K11:		// RCL
2751:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2752:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2753:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2754:src/keys.c    **** #else
2755:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2756:src/keys.c    **** #endif
2757:src/keys.c    **** 			State2.registerlist = 0;
2758:src/keys.c    **** 			State2.digval = 0;
2759:src/keys.c    **** 			State2.digval2 = 0;
2760:src/keys.c    **** 			return n;
ARM GAS  /tmp/ccczu93l.s 			page 160


2761:src/keys.c    **** 		}
2762:src/keys.c    **** 	default:
2763:src/keys.c    **** 		return STATE_UNFINISHED;
2764:src/keys.c    **** 	}
2765:src/keys.c    **** 	State2.registerlist = 0;
2766:src/keys.c    **** 	State2.digval = 0;
2767:src/keys.c    **** 	State2.digval2 = 0;
2768:src/keys.c    **** reset_window:
2769:src/keys.c    **** 	State2.window = 0;
2770:src/keys.c    **** 	return STATE_UNFINISHED;
2771:src/keys.c    **** }
2772:src/keys.c    **** 
2773:src/keys.c    **** 
2774:src/keys.c    **** static int process(const int c) {
2775:src/keys.c    ****   const enum shifts shift = cur_shift();
2776:src/keys.c    ****   enum catalogues cat;
2777:src/keys.c    **** 
2778:src/keys.c    ****   if (Running || Pause) {
2779:src/keys.c    ****     /*
2780:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2781:src/keys.c    ****      */
2782:src/keys.c    ****     if (c == K60 || c == K63) {
2783:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2784:src/keys.c    **** 	set_pc(0);
2785:src/keys.c    ****       Pause = 0;
2786:src/keys.c    ****       xeq_xrom();
2787:src/keys.c    ****       set_running_off();
2788:src/keys.c    ****       DispMsg = "Stopped";
2789:src/keys.c    ****       State2.disp_freeze = 0;
2790:src/keys.c    ****       return STATE_UNFINISHED;
2791:src/keys.c    ****     }
2792:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2793:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2794:src/keys.c    ****       Pause = 0;			// leave PSE statement
2795:src/keys.c    ****       GoFast = 1;
2796:src/keys.c    ****     }
2797:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2798:src/keys.c    ****     return STATE_RUNNING;
2799:src/keys.c    ****   }
2800:src/keys.c    **** 
2801:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2802:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2803:src/keys.c    ****    * if required.
2804:src/keys.c    ****    */
2805:src/keys.c    **** #ifdef DM42
2806:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow)
2807:src/keys.c    **** #else
2808:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
2809:src/keys.c    **** #endif
2810:src/keys.c    ****     {
2811:src/keys.c    ****       soft_init_state();
2812:src/keys.c    ****       return STATE_UNFINISHED;
2813:src/keys.c    ****     }
2814:src/keys.c    **** 
2815:src/keys.c    **** #ifndef CONSOLE
2816:src/keys.c    **** 	if (c == K63 && JustStopped) {
2817:src/keys.c    **** 		// Avoid an accidental restart with R/S
ARM GAS  /tmp/ccczu93l.s 			page 161


2818:src/keys.c    **** 		JustStopped = 0;
2819:src/keys.c    **** 		return STATE_IGNORE;
2820:src/keys.c    **** 	}
2821:src/keys.c    **** #endif
2822:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2823:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2824:src/keys.c    **** 	 */
2825:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2826:src/keys.c    **** 		CmdLineLength = 0;
2827:src/keys.c    **** 	/*
2828:src/keys.c    **** 	 *  Process the various cases
2829:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2830:src/keys.c    **** 	 */
2831:src/keys.c    **** 	if (State2.confirm)
2832:src/keys.c    **** 		return process_confirm((const keycode)c);
2833:src/keys.c    **** 
2834:src/keys.c    **** 	if (State2.rarg)
2835:src/keys.c    **** 		return process_arg((const keycode)c);
2836:src/keys.c    **** 
2837:src/keys.c    **** 	if (State2.gtodot)
2838:src/keys.c    **** 		return process_gtodot((const keycode)c);
2839:src/keys.c    **** 
2840:src/keys.c    **** 	if (State2.hyp)
2841:src/keys.c    **** 		return process_hyp((const keycode)c);
2842:src/keys.c    **** 
2843:src/keys.c    **** 	if (State2.test != TST_NONE)
2844:src/keys.c    **** 		return process_test((const keycode)c);
2845:src/keys.c    **** 
2846:src/keys.c    **** 	if (State2.status)
2847:src/keys.c    **** 		return process_status((const keycode)c);
2848:src/keys.c    **** 
2849:src/keys.c    **** 	/*
2850:src/keys.c    **** 	 *  Process shift keys directly
2851:src/keys.c    **** 	 */
2852:src/keys.c    **** 	if (c == K_F) {
2853:src/keys.c    **** 		toggle_shift(SHIFT_F);
2854:src/keys.c    **** 		return STATE_UNFINISHED;
2855:src/keys.c    **** 	}
2856:src/keys.c    **** 	if (c == K_G) {
2857:src/keys.c    **** 		toggle_shift(SHIFT_G);
2858:src/keys.c    **** 		return STATE_UNFINISHED;
2859:src/keys.c    **** 	}
2860:src/keys.c    **** 	if (c == K_H) {
2861:src/keys.c    **** 		toggle_shift(SHIFT_H);
2862:src/keys.c    **** 		State2.arrow = 0;
2863:src/keys.c    **** 		return STATE_UNFINISHED;
2864:src/keys.c    **** 	}
2865:src/keys.c    **** 	/*
2866:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2867:src/keys.c    **** 	 */
2868:src/keys.c    **** 	// print_debug (2, c);
2869:src/keys.c    **** 	if (State2.arrow)
2870:src/keys.c    **** 		return process_arrow((const keycode)c);
2871:src/keys.c    **** 
2872:src/keys.c    **** 	/*
2873:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2874:src/keys.c    **** 	 * The position of this code decides where catalogue switching
ARM GAS  /tmp/ccczu93l.s 			page 162


2875:src/keys.c    **** 	 * works and were not
2876:src/keys.c    **** 	 */
2877:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2878:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2879:src/keys.c    **** 		if (is_bad_cmdline())
2880:src/keys.c    **** 			return STATE_UNFINISHED;
2881:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2882:src/keys.c    **** 		init_cat( cat );
2883:src/keys.c    **** 		return STATE_UNFINISHED;
2884:src/keys.c    **** 	}
2885:src/keys.c    **** 
2886:src/keys.c    **** 	/*
2887:src/keys.c    **** 	 *  More handlers...
2888:src/keys.c    **** 	 */
2889:src/keys.c    **** 	if (State2.multi)
2890:src/keys.c    **** 		return process_multi((const keycode)c);
2891:src/keys.c    **** 
2892:src/keys.c    **** 	if (State2.labellist)
2893:src/keys.c    **** 		return process_labellist((const keycode)c);
2894:src/keys.c    **** 
2895:src/keys.c    **** 	if (State2.registerlist)
2896:src/keys.c    **** 		return process_registerlist((const keycode)c);
2897:src/keys.c    **** 
2898:src/keys.c    **** 	if (State2.catalogue)
2899:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2900:src/keys.c    **** 
2901:src/keys.c    **** 	if (State2.alphas) {
2902:src/keys.c    **** #ifndef INFRARED
2903:src/keys.c    **** 		return process_alpha((const keycode)c);
2904:src/keys.c    **** #else
2905:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2906:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2907:src/keys.c    **** 			print_tab(0);
2908:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2909:src/keys.c    **** 		}
2910:src/keys.c    **** 		return i;
2911:src/keys.c    **** #endif
2912:src/keys.c    **** 	}
2913:src/keys.c    **** 
2914:src/keys.c    **** 	if (State2.cmplx) {
2915:src/keys.c    **** 		return process_cmplx((const keycode)c);
2916:src/keys.c    **** 	} else {
2917:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2918:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2919:src/keys.c    **** 		if (shift == SHIFT_H)
2920:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2921:src/keys.c    **** 		// print_debug (3, c);
2922:src/keys.c    **** 		return process_normal((const keycode)c);
2923:src/keys.c    **** 	}
2924:src/keys.c    **** }
2925:src/keys.c    **** 
2926:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4897              		.loc 1 2926 40 is_stmt 1 view -0
 4898              		.cfi_startproc
 4899              		@ args = 0, pretend = 0, frame = 0
 4900              		@ frame_needed = 0, uses_anonymous_args = 0
 4901              		@ link register save eliminated.
ARM GAS  /tmp/ccczu93l.s 			page 163


2927:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4902              		.loc 1 2927 4 view .LVU1541
 4903              		.loc 1 2927 53 is_stmt 0 view .LVU1542
 4904 0000 074B     		ldr	r3, .L532
 4905              		.loc 1 2927 44 view .LVU1543
 4906 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4907 0004 1AB9     		cbnz	r2, .L530
2928:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2929:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 4908              		.loc 1 2929 5 discriminator 2 view .LVU1544
 4909 0006 5969     		ldr	r1, [r3, #20]
 4910 0008 064A     		ldr	r2, .L532+4
 4911 000a 0A40     		ands	r2, r2, r1
 4912 000c 0AB1     		cbz	r2, .L531
 4913              	.L530:
 4914 000e 0120     		movs	r0, #1
2930:src/keys.c    ****  }
 4915              		.loc 1 2930 2 view .LVU1545
 4916 0010 7047     		bx	lr
 4917              	.L531:
2929:src/keys.c    ****  }
 4918              		.loc 1 2929 42 discriminator 3 view .LVU1546
 4919 0012 D889     		ldrh	r0, [r3, #14]
 4920 0014 B0F5E060 		subs	r0, r0, #1792
 4921 0018 18BF     		it	ne
 4922 001a 0120     		movne	r0, #1
 4923 001c 7047     		bx	lr
 4924              	.L533:
 4925 001e 00BF     		.align	2
 4926              	.L532:
 4927 0020 00000000 		.word	StateWhileOn
 4928 0024 0709280C 		.word	203950343
 4929              		.cfi_endproc
 4930              	.LFE56:
 4932              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4933              		.align	2
 4934              	.LC0:
 4935 0000 52554E00 		.ascii	"RUN\000"
 4936              		.align	2
 4937              	.LC1:
 4938 0004 4E554C4C 		.ascii	"NULL\000"
 4938      00
 4939 0009 000000   		.align	2
 4940              	.LC2:
 4941 000c 53746F70 		.ascii	"Stopped\000"
 4941      70656400 
 4942              		.section	.text.process_keycode,"ax",%progbits
 4943              		.align	1
 4944              		.p2align 2,,3
 4945              		.global	process_keycode
 4946              		.syntax unified
 4947              		.thumb
 4948              		.thumb_func
 4949              		.fpu fpv4-sp-d16
 4951              	process_keycode:
 4952              	.LVL444:
 4953              	.LFB58:
ARM GAS  /tmp/ccczu93l.s 			page 164


2931:src/keys.c    **** 
2932:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2933:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
2934:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
2935:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
2936:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
2937:src/keys.c    ****        // Was error just wait for confirmation
2938:src/keys.c    ****        wait_for_key_press();
2939:src/keys.c    ****      }
2940:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
2941:src/keys.c    ****      return;
2942:src/keys.c    ****    }
2943:src/keys.c    ****    if (remapped.key_34s == K_OP) {
2944:src/keys.c    ****      nd_opcode = remapped.shift;
2945:src/keys.c    ****      set_shift(SHIFT_N);
2946:src/keys.c    ****    }
2947:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
2948:src/keys.c    ****    process_keycode ( remapped.key_34s );
2949:src/keys.c    ****  }
2950:src/keys.c    ****  
2951:src/keys.c    **** /*
2952:src/keys.c    ****  *  Fed with key codes by the event loop
2953:src/keys.c    ****  */
2954:src/keys.c    **** void process_keycode(int c)
2955:src/keys.c    **** {
 4954              		.loc 1 2955 1 is_stmt 1 view -0
 4955              		.cfi_startproc
 4956              		@ args = 0, pretend = 0, frame = 8
 4957              		@ frame_needed = 0, uses_anonymous_args = 0
2956:src/keys.c    ****   static int was_paused;
 4958              		.loc 1 2956 3 view .LVU1548
2957:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2958:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4959              		.loc 1 2958 3 view .LVU1549
2959:src/keys.c    ****   if (was_paused && Pause == 0)
 4960              		.loc 1 2959 3 view .LVU1550
2955:src/keys.c    ****   static int was_paused;
 4961              		.loc 1 2955 1 is_stmt 0 view .LVU1551
 4962 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4963              		.cfi_def_cfa_offset 36
 4964              		.cfi_offset 4, -36
 4965              		.cfi_offset 5, -32
 4966              		.cfi_offset 6, -28
 4967              		.cfi_offset 7, -24
 4968              		.cfi_offset 8, -20
 4969              		.cfi_offset 9, -16
 4970              		.cfi_offset 10, -12
 4971              		.cfi_offset 11, -8
 4972              		.cfi_offset 14, -4
 4973              		.loc 1 2959 7 view .LVU1552
 4974 0004 944D     		ldr	r5, .L1202
 4975              		.loc 1 2959 27 view .LVU1553
 4976 0006 954F     		ldr	r7, .L1202+4
 4977              		.loc 1 2959 6 view .LVU1554
 4978 0008 2B68     		ldr	r3, [r5]
2955:src/keys.c    ****   static int was_paused;
 4979              		.loc 1 2955 1 view .LVU1555
ARM GAS  /tmp/ccczu93l.s 			page 165


 4980 000a 83B0     		sub	sp, sp, #12
 4981              		.cfi_def_cfa_offset 48
2955:src/keys.c    ****   static int was_paused;
 4982              		.loc 1 2955 1 view .LVU1556
 4983 000c 0446     		mov	r4, r0
 4984              		.loc 1 2959 6 view .LVU1557
 4985 000e 1BB1     		cbz	r3, .L535
 4986              		.loc 1 2959 27 discriminator 1 view .LVU1558
 4987 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4988              		.loc 1 2959 18 discriminator 1 view .LVU1559
 4989 0012 002B     		cmp	r3, #0
 4990 0014 00F00782 		beq	.L1102
 4991              	.LVL445:
 4992              	.L535:
2960:src/keys.c    ****     {
2961:src/keys.c    ****     /*
2962:src/keys.c    ****      *  Continue XROM execution after a pause
2963:src/keys.c    ****      */
2964:src/keys.c    ****       xeq_xrom();
2965:src/keys.c    ****     }
2966:src/keys.c    ****   was_paused = Pause;
 4993              		.loc 1 2966 3 is_stmt 1 view .LVU1560
 4994              		.loc 1 2966 14 is_stmt 0 view .LVU1561
 4995 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4996 001a 2B60     		str	r3, [r5]
2967:src/keys.c    ****   if (c == K_NOP)
 4997              		.loc 1 2967 3 is_stmt 1 view .LVU1562
 4998              		.loc 1 2967 6 is_stmt 0 view .LVU1563
 4999 001c 2E2C     		cmp	r4, #46
 5000 001e 00F0C381 		beq	.L1103
2968:src/keys.c    ****     {
2969:src/keys.c    ****       OpCode = 0;
2970:src/keys.c    ****     }
2971:src/keys.c    ****   else if (c == K_HEARTBEAT)
 5001              		.loc 1 2971 8 is_stmt 1 view .LVU1564
 5002              		.loc 1 2971 11 is_stmt 0 view .LVU1565
 5003 0022 622C     		cmp	r4, #98
 5004 0024 71D0     		beq	.L1104
2972:src/keys.c    ****     {
2973:src/keys.c    ****     /*
2974:src/keys.c    ****      *  Heartbeat processing goes here.
2975:src/keys.c    ****      *  This is totally thread safe!
2976:src/keys.c    ****      */
2977:src/keys.c    ****     if (Keyticks >= 2) {
2978:src/keys.c    ****       /*
2979:src/keys.c    ****        *  Some time has passed after last key press
2980:src/keys.c    ****        */
2981:src/keys.c    ****       if (OpCode != 0) {
2982:src/keys.c    **** 	/*
2983:src/keys.c    **** 	 *  Handle command display and NULL here
2984:src/keys.c    **** 	 */
2985:src/keys.c    **** 	if (OpCodeDisplayPending) {
2986:src/keys.c    **** 	  /*
2987:src/keys.c    **** 	   *  Show command to the user
2988:src/keys.c    **** 	   */
2989:src/keys.c    **** 	  OpCodeDisplayPending = 0;
2990:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
ARM GAS  /tmp/ccczu93l.s 			page 166


2991:src/keys.c    **** 	    DispMsg = "RUN";
2992:src/keys.c    **** 	  }
2993:src/keys.c    **** 	  else {
2994:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
2995:src/keys.c    **** 	    DispMsg = TraceBuffer;
2996:src/keys.c    **** 	  }
2997:src/keys.c    **** 	  display();
2998:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
2999:src/keys.c    **** 	}
3000:src/keys.c    ****     else if (Keyticks > 12) {
3001:src/keys.c    **** 	  /*
3002:src/keys.c    **** 	   *  Key is too long held down
3003:src/keys.c    **** 	   */
3004:src/keys.c    **** 	  OpCode = 0;
3005:src/keys.c    **** 	  message("NULL", CNULL);
3006:src/keys.c    **** 	  // Force display update on key-up
3007:src/keys.c    **** 	  State2.disp_temp = 0;
3008:src/keys.c    **** 	}
3009:src/keys.c    ****       }
3010:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3011:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3012:src/keys.c    **** 	State2.shifts = SHIFT_N;
3013:src/keys.c    ****       }
3014:src/keys.c    ****     }
3015:src/keys.c    **** 
3016:src/keys.c    ****     /*
3017:src/keys.c    ****      *  Serve the watchdog
3018:src/keys.c    ****      */
3019:src/keys.c    ****     watchdog();
3020:src/keys.c    **** 
3021:src/keys.c    **** #ifndef CONSOLE
3022:src/keys.c    ****     /*
3023:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3024:src/keys.c    ****      */
3025:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3026:src/keys.c    ****       JustStopped = 0;
3027:src/keys.c    ****     }
3028:src/keys.c    **** #endif
3029:src/keys.c    **** 
3030:src/keys.c    ****     /*
3031:src/keys.c    ****      *  Do nothing if not running a program
3032:src/keys.c    ****      */
3033:src/keys.c    ****     if (!Running && ! Pause)
3034:src/keys.c    ****       return;
3035:src/keys.c    ****   }
3036:src/keys.c    ****   else {
3037:src/keys.c    ****     /*
3038:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3039:src/keys.c    ****      */
3040:src/keys.c    ****     xeq_init_contexts();
 5005              		.loc 1 3040 5 is_stmt 1 view .LVU1566
3041:src/keys.c    ****     State2.wascomplex = 0;
 5006              		.loc 1 3041 23 is_stmt 0 view .LVU1567
 5007 0026 DFF85082 		ldr	r8, .L1202+32
3040:src/keys.c    ****     State2.wascomplex = 0;
 5008              		.loc 1 3040 5 view .LVU1568
 5009 002a FFF7FEFF 		bl	xeq_init_contexts
ARM GAS  /tmp/ccczu93l.s 			page 167


 5010              	.LVL446:
 5011              		.loc 1 3041 5 is_stmt 1 view .LVU1569
 5012              		.loc 1 3041 23 is_stmt 0 view .LVU1570
 5013 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3042:src/keys.c    **** 
3043:src/keys.c    ****     if (is_dot(RPN)) {
 5014              		.loc 1 3043 9 view .LVU1571
 5015 0032 8D20     		movs	r0, #141
3041:src/keys.c    **** 
 5016              		.loc 1 3041 23 view .LVU1572
 5017 0034 6FF38713 		bfc	r3, #6, #2
 5018 0038 88F81430 		strb	r3, [r8, #20]
 5019              		.loc 1 3043 5 is_stmt 1 view .LVU1573
 5020              		.loc 1 3043 9 is_stmt 0 view .LVU1574
 5021 003c FFF7FEFF 		bl	is_dot
 5022              	.LVL447:
 5023              		.loc 1 3043 8 view .LVU1575
 5024 0040 0028     		cmp	r0, #0
 5025 0042 40F07B82 		bne	.L1105
 5026              	.L553:
3044:src/keys.c    ****       /*
3045:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3046:src/keys.c    ****        */
3047:src/keys.c    ****       clr_dot(RPN);
3048:src/keys.c    ****       finish_RPN(); // RPN
3049:src/keys.c    ****     }
3050:src/keys.c    **** 
3051:src/keys.c    **** #ifndef CONSOLE
3052:src/keys.c    ****     /*
3053:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3054:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3055:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3056:src/keys.c    ****      *  an accidental restart of the program.
3057:src/keys.c    ****      */
3058:src/keys.c    ****     if (c != K63)
 5027              		.loc 1 3058 5 is_stmt 1 view .LVU1576
 5028              		.loc 1 3058 8 is_stmt 0 view .LVU1577
 5029 0046 272C     		cmp	r4, #39
 5030 0048 00F07582 		beq	.L1106
3059:src/keys.c    ****       JustStopped = 0;
 5031              		.loc 1 3059 7 is_stmt 1 view .LVU1578
 5032              		.loc 1 3059 19 is_stmt 0 view .LVU1579
 5033 004c 844B     		ldr	r3, .L1202+8
 5034 004e 0025     		movs	r5, #0
3060:src/keys.c    **** #endif
3061:src/keys.c    ****   }
3062:src/keys.c    **** 
3063:src/keys.c    ****   /*
3064:src/keys.c    ****    *  Handle key release
3065:src/keys.c    ****    */
3066:src/keys.c    ****   if (c == K_RELEASE)
 5035              		.loc 1 3066 6 view .LVU1580
 5036 0050 632C     		cmp	r4, #99
3059:src/keys.c    ****       JustStopped = 0;
 5037              		.loc 1 3059 19 view .LVU1581
 5038 0052 1D60     		str	r5, [r3]
 5039              		.loc 1 3066 3 is_stmt 1 view .LVU1582
ARM GAS  /tmp/ccczu93l.s 			page 168


 5040              		.loc 1 3066 6 is_stmt 0 view .LVU1583
 5041 0054 40F0B781 		bne	.L555
3067:src/keys.c    ****     {
3068:src/keys.c    ****     if (OpCode != 0) {
 5042              		.loc 1 3068 5 is_stmt 1 view .LVU1584
 5043              		.loc 1 3068 16 is_stmt 0 view .LVU1585
 5044 0058 824B     		ldr	r3, .L1202+12
 5045 005a 1C68     		ldr	r4, [r3]
 5046              	.LVL448:
 5047              		.loc 1 3068 8 view .LVU1586
 5048 005c 002C     		cmp	r4, #0
 5049 005e 00F08082 		beq	.L556
3069:src/keys.c    ****       /*
3070:src/keys.c    ****        * Execute the key on release
3071:src/keys.c    ****        */
3072:src/keys.c    ****       GoFast = 1;
 5050              		.loc 1 3072 7 is_stmt 1 view .LVU1587
 5051              		.loc 1 3072 14 is_stmt 0 view .LVU1588
 5052 0062 814A     		ldr	r2, .L1202+16
3073:src/keys.c    ****       c = OpCode;
3074:src/keys.c    ****       OpCode = 0;
 5053              		.loc 1 3074 14 view .LVU1589
 5054 0064 1D60     		str	r5, [r3]
3072:src/keys.c    ****       c = OpCode;
 5055              		.loc 1 3072 14 view .LVU1590
 5056 0066 0120     		movs	r0, #1
3075:src/keys.c    **** 
3076:src/keys.c    ****       if (c == STATE_SST)
 5057              		.loc 1 3076 10 view .LVU1591
 5058 0068 2E2C     		cmp	r4, #46
3073:src/keys.c    ****       OpCode = 0;
 5059              		.loc 1 3073 9 view .LVU1592
 5060 006a A346     		mov	fp, r4
3072:src/keys.c    ****       c = OpCode;
 5061              		.loc 1 3072 14 view .LVU1593
 5062 006c 1060     		str	r0, [r2]
3073:src/keys.c    ****       OpCode = 0;
 5063              		.loc 1 3073 7 is_stmt 1 view .LVU1594
 5064              	.LVL449:
3074:src/keys.c    **** 
 5065              		.loc 1 3074 7 view .LVU1595
 5066              		.loc 1 3076 7 view .LVU1596
 5067              		.loc 1 3076 10 is_stmt 0 view .LVU1597
 5068 006e 00F08C82 		beq	.L1107
3077:src/keys.c    **** 	xeq_sst_bst(1);
3078:src/keys.c    ****       else {
3079:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5069              		.loc 1 3079 2 is_stmt 1 view .LVU1598
 5070              		.loc 1 3079 5 is_stmt 0 view .LVU1599
 5071 0072 B4F5817F 		cmp	r4, #258
 5072 0076 08D0     		beq	.L562
 5073              		.loc 1 3079 29 discriminator 1 view .LVU1600
 5074 0078 40F23F13 		movw	r3, #319
 5075 007c 9C42     		cmp	r4, r3
 5076 007e 04D0     		beq	.L562
 5077              		.loc 1 3079 60 discriminator 2 view .LVU1601
 5078 0080 FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccczu93l.s 			page 169


 5079              	.LVL450:
 5080              		.loc 1 3079 56 discriminator 2 view .LVU1602
 5081 0084 0028     		cmp	r0, #0
 5082 0086 40F09082 		bne	.L1108
 5083              	.L562:
3080:src/keys.c    **** 	  xeq(c);
 5084              		.loc 1 3080 4 is_stmt 1 view .LVU1603
3081:src/keys.c    **** 	  if (Running || Pause)
 5085              		.loc 1 3081 8 is_stmt 0 view .LVU1604
 5086 008a 784E     		ldr	r6, .L1202+20
3080:src/keys.c    **** 	  xeq(c);
 5087              		.loc 1 3080 4 view .LVU1605
 5088 008c 2046     		mov	r0, r4
 5089 008e FFF7FEFF 		bl	xeq
 5090              	.LVL451:
 5091              		.loc 1 3081 4 is_stmt 1 view .LVU1606
 5092              		.loc 1 3081 7 is_stmt 0 view .LVU1607
 5093 0092 3368     		ldr	r3, [r6]
 5094 0094 0BB9     		cbnz	r3, .L560
 5095              		.loc 1 3081 16 discriminator 1 view .LVU1608
 5096 0096 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5097 0098 0BB1     		cbz	r3, .L558
 5098              	.L560:
3082:src/keys.c    **** 	    xeqprog();
 5099              		.loc 1 3082 6 is_stmt 1 view .LVU1609
 5100 009a FFF7FEFF 		bl	xeqprog
 5101              	.LVL452:
 5102              	.L558:
3083:src/keys.c    **** 	}
3084:src/keys.c    ****       }
3085:src/keys.c    ****       dot(RPN, ShowRPN);
 5103              		.loc 1 3085 7 view .LVU1610
 5104 009e 744C     		ldr	r4, .L1202+24
 5105              	.LVL453:
 5106              		.loc 1 3085 7 is_stmt 0 view .LVU1611
 5107 00a0 8D20     		movs	r0, #141
 5108 00a2 2168     		ldr	r1, [r4]
 5109 00a4 FFF7FEFF 		bl	dot
 5110              	.LVL454:
3086:src/keys.c    ****     }
3087:src/keys.c    ****     else {
3088:src/keys.c    ****       // Ignore key-up if no operation was pending
3089:src/keys.c    ****       dot(RPN, ShowRPN);
3090:src/keys.c    **** #ifndef CONSOLE
3091:src/keys.c    ****       if (! State2.disp_temp ) {
3092:src/keys.c    **** 	if (!WasDataEntry) {
3093:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3094:src/keys.c    **** 	  display();
3095:src/keys.c    **** 	}
3096:src/keys.c    **** 	else {
3097:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3098:src/keys.c    **** 	}
3099:src/keys.c    ****       }
3100:src/keys.c    **** #endif
3101:src/keys.c    ****       return;
3102:src/keys.c    ****     }
3103:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 170


3104:src/keys.c    ****     /*
3105:src/keys.c    ****      *  Turn on the RPN symbol if desired
3106:src/keys.c    ****      */
3107:src/keys.c    ****     if (ShowRPN) {
 5111              		.loc 1 3107 5 is_stmt 1 view .LVU1612
 5112              		.loc 1 3107 9 is_stmt 0 view .LVU1613
 5113 00a8 2568     		ldr	r5, [r4]
 5114              		.loc 1 3107 8 view .LVU1614
 5115 00aa 002D     		cmp	r5, #0
 5116 00ac 40F04C82 		bne	.L564
 5117 00b0 3268     		ldr	r2, [r6]
 5118              	.LVL455:
 5119              	.L565:
3108:src/keys.c    ****       finish_RPN(); // RPN
3109:src/keys.c    ****     }
3110:src/keys.c    ****   }
3111:src/keys.c    ****   else {
3112:src/keys.c    ****     /*
3113:src/keys.c    ****      *  Decode the key 
3114:src/keys.c    ****      */
3115:src/keys.c    ****     // print_debug (100, c);
3116:src/keys.c    ****     WasDataEntry = 0;
3117:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3118:src/keys.c    **** #ifdef DM42
3119:src/keys.c    ****     if (c != K_OP) {
3120:src/keys.c    ****       c = process(c);		// returns an op-code or state
3121:src/keys.c    ****     }
3122:src/keys.c    ****     else {
3123:src/keys.c    ****       if (isRARG(nd_opcode)) {
3124:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3125:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3126:src/keys.c    **** 	  c = nd_opcode;
3127:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3128:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3129:src/keys.c    **** 	  c = STATE_UNFINISHED;
3130:src/keys.c    **** 	}
3131:src/keys.c    **** 	else {
3132:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3133:src/keys.c    **** 	  c = STATE_UNFINISHED;
3134:src/keys.c    **** 	}
3135:src/keys.c    ****       }
3136:src/keys.c    ****       else {
3137:src/keys.c    **** 	c = check_confirm(nd_opcode);
3138:src/keys.c    ****       }      
3139:src/keys.c    ****     }
3140:src/keys.c    **** #else
3141:src/keys.c    ****     c = process(c);		// returns an op-code or state
3142:src/keys.c    **** #endif
3143:src/keys.c    ****     switch (c) {
3144:src/keys.c    ****     case STATE_SST:
3145:src/keys.c    ****       OpCode = c;
3146:src/keys.c    ****       OpCodeDisplayPending = 0;
3147:src/keys.c    ****       xeq_sst_bst(0);
3148:src/keys.c    ****       break;
3149:src/keys.c    **** 
3150:src/keys.c    ****     case STATE_BST:
3151:src/keys.c    ****       xeq_sst_bst(-1);
ARM GAS  /tmp/ccczu93l.s 			page 171


3152:src/keys.c    ****       break;
3153:src/keys.c    **** 
3154:src/keys.c    ****     case STATE_BACKSPACE:
3155:src/keys.c    ****       if (! State2.runmode)
3156:src/keys.c    **** 	delprog();
3157:src/keys.c    ****       else if (State2.alphas) {
3158:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3159:src/keys.c    **** 	if (p > Alpha)
3160:src/keys.c    **** 	  *--p = '\0';
3161:src/keys.c    ****       }
3162:src/keys.c    ****       break;
3163:src/keys.c    **** 
3164:src/keys.c    ****     case STATE_RUNNING:
3165:src/keys.c    ****       xeqprog();  // continue execution
3166:src/keys.c    ****       break;
3167:src/keys.c    **** 
3168:src/keys.c    ****     case STATE_WINDOWRIGHT:
3169:src/keys.c    ****     case STATE_WINDOWLEFT:
3170:src/keys.c    ****       if (!is_bad_cmdline())
3171:src/keys.c    **** 	set_window(c);
3172:src/keys.c    ****       break;
3173:src/keys.c    **** 
3174:src/keys.c    ****     case STATE_UNFINISHED:
3175:src/keys.c    ****     case STATE_IGNORE:
3176:src/keys.c    ****       break;
3177:src/keys.c    **** 
3178:src/keys.c    ****     default:
3179:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3180:src/keys.c    **** 	NonProgrammable = 0;
3181:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3182:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3183:src/keys.c    **** 	    // Data entry key
3184:src/keys.c    **** #ifndef CONSOLE
3185:src/keys.c    **** 	    WasDataEntry = 1;
3186:src/keys.c    **** #endif
3187:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3188:src/keys.c    **** 	    xeq(c);
3189:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3190:src/keys.c    **** 	  }
3191:src/keys.c    **** 	}
3192:src/keys.c    **** 	else {
3193:src/keys.c    **** 	  // Save the op-code for execution on key-up
3194:src/keys.c    **** 	  OpCode = c;
3195:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3196:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3197:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3198:src/keys.c    **** 	}
3199:src/keys.c    ****       }
3200:src/keys.c    ****       else {
3201:src/keys.c    **** 	stoprog(c);
3202:src/keys.c    ****       }
3203:src/keys.c    ****     }
3204:src/keys.c    ****   }
3205:src/keys.c    ****   if (! Running && ! Pause
 5120              		.loc 1 3205 3 is_stmt 1 view .LVU1615
 5121              		.loc 1 3205 6 is_stmt 0 view .LVU1616
 5122 00b2 002A     		cmp	r2, #0
ARM GAS  /tmp/ccczu93l.s 			page 172


 5123 00b4 40F07481 		bne	.L1098
 5124              	.LVL456:
 5125              	.L580:
 5126              		.loc 1 3205 20 discriminator 1 view .LVU1617
 5127 00b8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5128              		.loc 1 3205 17 discriminator 1 view .LVU1618
 5129 00ba 002B     		cmp	r3, #0
 5130 00bc 40F07081 		bne	.L1098
3206:src/keys.c    **** #ifndef CONSOLE
3207:src/keys.c    ****       && ! JustStopped
 5131              		.loc 1 3207 10 view .LVU1619
 5132 00c0 674B     		ldr	r3, .L1202+8
3208:src/keys.c    **** #endif
3209:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 5133              		.loc 1 3209 10 view .LVU1620
 5134 00c2 6C4C     		ldr	r4, .L1202+28
 5135 00c4 1B68     		ldr	r3, [r3]
 5136 00c6 2268     		ldr	r2, [r4]
 5137              		.loc 1 3209 7 view .LVU1621
 5138 00c8 1343     		orrs	r3, r3, r2
 5139 00ca 19D1     		bne	.L878
 5140              		.loc 1 3209 26 discriminator 1 view .LVU1622
 5141 00cc BBF1320F 		cmp	fp, #50
 5142 00d0 16D0     		beq	.L878
 5143              	.LBB652:
3210:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5144              		.loc 1 3210 5 is_stmt 1 view .LVU1623
 5145              		.loc 1 3210 15 is_stmt 0 view .LVU1624
 5146 00d2 DFF8C091 		ldr	r9, .L1202+60
 5147 00d6 D9F80060 		ldr	r6, [r9]
 5148              	.LVL457:
3211:src/keys.c    **** 
3212:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 5149              		.loc 1 3212 5 is_stmt 1 view .LVU1625
 5150              		.loc 1 3212 21 is_stmt 0 view .LVU1626
 5151 00da BBF1000F 		cmp	fp, #0
 5152 00de 09D0     		beq	.L880
 5153              		.loc 1 3212 49 discriminator 1 view .LVU1627
 5154 00e0 002D     		cmp	r5, #0
 5155 00e2 40F0DA84 		bne	.L939
 5156              		.loc 1 3212 66 discriminator 3 view .LVU1628
 5157 00e6 644B     		ldr	r3, .L1202+32
 5158 00e8 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 5159              		.loc 1 3212 21 discriminator 3 view .LVU1629
 5160 00ea 9F07     		lsls	r7, r3, #30
 5161 00ec 00F12C85 		bmi	.L940
 5162 00f0 06F0010B 		and	fp, r6, #1
 5163              	.LVL458:
 5164              	.L880:
 5165              		.loc 1 3212 18 discriminator 8 view .LVU1630
 5166 00f4 C9F800B0 		str	fp, [r9]
3213:src/keys.c    ****     display();
 5167              		.loc 1 3213 5 is_stmt 1 discriminator 8 view .LVU1631
 5168 00f8 FFF7FEFF 		bl	display
 5169              	.LVL459:
3214:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5170              		.loc 1 3214 5 discriminator 8 view .LVU1632
ARM GAS  /tmp/ccczu93l.s 			page 173


 5171              		.loc 1 3214 18 is_stmt 0 discriminator 8 view .LVU1633
 5172 00fc C9F80060 		str	r6, [r9]
 5173              	.LVL460:
 5174              	.L878:
 5175              		.loc 1 3214 18 discriminator 8 view .LVU1634
 5176              	.LBE652:
3215:src/keys.c    ****   }
3216:src/keys.c    **** 
3217:src/keys.c    ****  no_display:
3218:src/keys.c    ****   JustDisplayed = 0;
 5177              		.loc 1 3218 3 is_stmt 1 view .LVU1635
 5178              		.loc 1 3218 17 is_stmt 0 view .LVU1636
 5179 0100 0023     		movs	r3, #0
 5180 0102 2360     		str	r3, [r4]
3219:src/keys.c    ****   watchdog();
 5181              		.loc 1 3219 13 is_stmt 1 view .LVU1637
 5182              	.L534:
3220:src/keys.c    **** }
 5183              		.loc 1 3220 1 is_stmt 0 view .LVU1638
 5184 0104 03B0     		add	sp, sp, #12
 5185              		.cfi_remember_state
 5186              		.cfi_def_cfa_offset 36
 5187              		@ sp needed
 5188 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5189              	.LVL461:
 5190              	.L1104:
 5191              		.cfi_restore_state
2977:src/keys.c    ****       /*
 5192              		.loc 1 2977 5 is_stmt 1 view .LVU1639
2977:src/keys.c    ****       /*
 5193              		.loc 1 2977 9 is_stmt 0 view .LVU1640
 5194 010a FFF7FEFF 		bl	keyticks
 5195              	.LVL462:
2977:src/keys.c    ****       /*
 5196              		.loc 1 2977 8 view .LVU1641
 5197 010e 0128     		cmp	r0, #1
 5198 0110 1BDD     		ble	.L540
2981:src/keys.c    **** 	/*
 5199              		.loc 1 2981 7 is_stmt 1 view .LVU1642
2981:src/keys.c    **** 	/*
 5200              		.loc 1 2981 18 is_stmt 0 view .LVU1643
 5201 0112 544D     		ldr	r5, .L1202+12
 5202 0114 2868     		ldr	r0, [r5]
2981:src/keys.c    **** 	/*
 5203              		.loc 1 2981 10 view .LVU1644
 5204 0116 98B1     		cbz	r0, .L542
2985:src/keys.c    **** 	  /*
 5205              		.loc 1 2985 2 is_stmt 1 view .LVU1645
2985:src/keys.c    **** 	  /*
 5206              		.loc 1 2985 6 is_stmt 0 view .LVU1646
 5207 0118 584B     		ldr	r3, .L1202+36
2985:src/keys.c    **** 	  /*
 5208              		.loc 1 2985 5 view .LVU1647
 5209 011a 1E68     		ldr	r6, [r3]
 5210 011c 002E     		cmp	r6, #0
 5211 011e 00F06582 		beq	.L543
2989:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
ARM GAS  /tmp/ccczu93l.s 			page 174


 5212              		.loc 1 2989 4 is_stmt 1 view .LVU1648
2990:src/keys.c    **** 	    DispMsg = "RUN";
 5213              		.loc 1 2990 7 is_stmt 0 view .LVU1649
 5214 0122 40F23B12 		movw	r2, #315
2989:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5215              		.loc 1 2989 25 view .LVU1650
 5216 0126 0025     		movs	r5, #0
2990:src/keys.c    **** 	    DispMsg = "RUN";
 5217              		.loc 1 2990 7 view .LVU1651
 5218 0128 9042     		cmp	r0, r2
2989:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5219              		.loc 1 2989 25 view .LVU1652
 5220 012a 1D60     		str	r5, [r3]
2990:src/keys.c    **** 	    DispMsg = "RUN";
 5221              		.loc 1 2990 4 is_stmt 1 view .LVU1653
2990:src/keys.c    **** 	    DispMsg = "RUN";
 5222              		.loc 1 2990 7 is_stmt 0 view .LVU1654
 5223 012c 40F0B483 		bne	.L544
2991:src/keys.c    **** 	  }
 5224              		.loc 1 2991 6 is_stmt 1 view .LVU1655
2991:src/keys.c    **** 	  }
 5225              		.loc 1 2991 14 is_stmt 0 view .LVU1656
 5226 0130 534B     		ldr	r3, .L1202+40
 5227 0132 544A     		ldr	r2, .L1202+44
 5228 0134 1A60     		str	r2, [r3]
 5229              	.L545:
2997:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5230              		.loc 1 2997 4 is_stmt 1 view .LVU1657
 5231 0136 FFF7FEFF 		bl	display
 5232              	.LVL463:
2998:src/keys.c    **** 	}
 5233              		.loc 1 2998 4 view .LVU1658
2998:src/keys.c    **** 	}
 5234              		.loc 1 2998 12 is_stmt 0 view .LVU1659
 5235 013a 4D4B     		ldr	r3, .L1202+24
 5236 013c 0122     		movs	r2, #1
 5237 013e 1A60     		str	r2, [r3]
 5238              	.L542:
3010:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5239              		.loc 1 3010 7 is_stmt 1 view .LVU1660
3010:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5240              		.loc 1 3010 11 is_stmt 0 view .LVU1661
 5241 0140 FFF7FEFF 		bl	keyticks
 5242              	.LVL464:
3010:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5243              		.loc 1 3010 10 view .LVU1662
 5244 0144 0C28     		cmp	r0, #12
 5245 0146 00F32782 		bgt	.L1109
 5246              	.L540:
3019:src/keys.c    **** 
 5247              		.loc 1 3019 15 is_stmt 1 view .LVU1663
3025:src/keys.c    ****       JustStopped = 0;
 5248              		.loc 1 3025 5 view .LVU1664
3025:src/keys.c    ****       JustStopped = 0;
 5249              		.loc 1 3025 9 is_stmt 0 view .LVU1665
 5250 014a 454D     		ldr	r5, .L1202+8
3025:src/keys.c    ****       JustStopped = 0;
ARM GAS  /tmp/ccczu93l.s 			page 175


 5251              		.loc 1 3025 8 view .LVU1666
 5252 014c 2B68     		ldr	r3, [r5]
 5253 014e 002B     		cmp	r3, #0
 5254 0150 40F09A81 		bne	.L1110
 5255              	.L549:
3033:src/keys.c    ****       return;
 5256              		.loc 1 3033 5 is_stmt 1 view .LVU1667
3033:src/keys.c    ****       return;
 5257              		.loc 1 3033 9 is_stmt 0 view .LVU1668
 5258 0154 454E     		ldr	r6, .L1202+20
 5259 0156 3368     		ldr	r3, [r6]
3033:src/keys.c    ****       return;
 5260              		.loc 1 3033 8 view .LVU1669
 5261 0158 002B     		cmp	r3, #0
 5262 015a 00F08781 		beq	.L1111
 5263              	.L551:
3066:src/keys.c    ****     {
 5264              		.loc 1 3066 3 is_stmt 1 view .LVU1670
3116:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5265              		.loc 1 3116 5 view .LVU1671
3117:src/keys.c    **** #ifdef DM42
 5266              		.loc 1 3117 13 is_stmt 0 view .LVU1672
 5267 015e 444A     		ldr	r2, .L1202+24
3116:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5268              		.loc 1 3116 18 view .LVU1673
 5269 0160 DFF83091 		ldr	r9, .L1202+60
3117:src/keys.c    **** #ifdef DM42
 5270              		.loc 1 3117 15 view .LVU1674
 5271 0164 B3FA83F3 		clz	r3, r3
 5272 0168 5B09     		lsrs	r3, r3, #5
3117:src/keys.c    **** #ifdef DM42
 5273              		.loc 1 3117 13 view .LVU1675
 5274 016a 1360     		str	r3, [r2]
3116:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5275              		.loc 1 3116 18 view .LVU1676
 5276 016c 0023     		movs	r3, #0
 5277 016e C9F80030 		str	r3, [r9]
3117:src/keys.c    **** #ifdef DM42
 5278              		.loc 1 3117 5 is_stmt 1 view .LVU1677
3119:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5279              		.loc 1 3119 5 view .LVU1678
 5280              	.L537:
3120:src/keys.c    ****     }
 5281              		.loc 1 3120 7 view .LVU1679
 5282              	.LVL465:
 5283              	.LBB653:
 5284              	.LBI653:
2774:src/keys.c    ****   const enum shifts shift = cur_shift();
 5285              		.loc 1 2774 12 view .LVU1680
 5286              	.LBB654:
2775:src/keys.c    ****   enum catalogues cat;
 5287              		.loc 1 2775 3 view .LVU1681
 5288              	.LBB655:
 5289              	.LBI655:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 5290              		.loc 1 86 13 view .LVU1682
 5291              	.LBB656:
ARM GAS  /tmp/ccczu93l.s 			page 176


  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5292              		.loc 1 87 2 view .LVU1683
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5293              		.loc 1 87 18 is_stmt 0 view .LVU1684
 5294 0172 FFF7FEFF 		bl	shift_down
 5295              	.LVL466:
  88:src/keys.c    **** }
 5296              		.loc 1 88 2 is_stmt 1 view .LVU1685
  88:src/keys.c    **** }
 5297              		.loc 1 88 52 is_stmt 0 view .LVU1686
 5298 0176 8246     		mov	r10, r0
 5299 0178 10B9     		cbnz	r0, .L569
 5300 017a 3F4B     		ldr	r3, .L1202+32
 5301 017c 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5302              	.L569:
 5303              	.LVL467:
  88:src/keys.c    **** }
 5304              		.loc 1 88 52 view .LVU1687
 5305              	.LBE656:
 5306              	.LBE655:
2776:src/keys.c    **** 
 5307              		.loc 1 2776 3 is_stmt 1 view .LVU1688
2778:src/keys.c    ****     /*
 5308              		.loc 1 2778 3 view .LVU1689
2778:src/keys.c    ****     /*
 5309              		.loc 1 2778 7 is_stmt 0 view .LVU1690
 5310 0180 3568     		ldr	r5, [r6]
2778:src/keys.c    ****     /*
 5311              		.loc 1 2778 6 view .LVU1691
 5312 0182 002D     		cmp	r5, #0
 5313 0184 40F0F380 		bne	.L570
2778:src/keys.c    ****     /*
 5314              		.loc 1 2778 15 view .LVU1692
 5315 0188 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5316 018a 002B     		cmp	r3, #0
 5317 018c 40F0EF80 		bne	.L570
2806:src/keys.c    **** #else
 5318              		.loc 1 2806 3 is_stmt 1 view .LVU1693
2806:src/keys.c    **** #else
 5319              		.loc 1 2806 6 is_stmt 0 view .LVU1694
 5320 0190 242C     		cmp	r4, #36
 5321 0192 00F0F083 		beq	.L1112
2816:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5322              		.loc 1 2816 2 is_stmt 1 view .LVU1695
2816:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5323              		.loc 1 2816 5 is_stmt 0 view .LVU1696
 5324 0196 272C     		cmp	r4, #39
 5325 0198 04D1     		bne	.L579
2816:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5326              		.loc 1 2816 15 view .LVU1697
 5327 019a 314B     		ldr	r3, .L1202+8
 5328 019c 1A68     		ldr	r2, [r3]
 5329 019e 002A     		cmp	r2, #0
 5330 01a0 40F0C084 		bne	.L1113
 5331              	.L579:
 5332 01a4 DFF8D080 		ldr	r8, .L1202+32
 5333 01a8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 177


 5334              	.L577:
2825:src/keys.c    **** 		CmdLineLength = 0;
 5335              		.loc 1 2825 2 is_stmt 1 view .LVU1698
2825:src/keys.c    **** 		CmdLineLength = 0;
 5336              		.loc 1 2825 5 is_stmt 0 view .LVU1699
 5337 01ac 002B     		cmp	r3, #0
 5338 01ae 40F06B83 		bne	.L1114
 5339              	.L582:
2831:src/keys.c    **** 		return process_confirm((const keycode)c);
 5340              		.loc 1 2831 2 is_stmt 1 view .LVU1700
2831:src/keys.c    **** 		return process_confirm((const keycode)c);
 5341              		.loc 1 2831 6 is_stmt 0 view .LVU1701
 5342 01b2 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2831:src/keys.c    **** 		return process_confirm((const keycode)c);
 5343              		.loc 1 2831 5 view .LVU1702
 5344 01b6 5907     		lsls	r1, r3, #29
 5345 01b8 40F09883 		bne	.L1115
2834:src/keys.c    **** 		return process_arg((const keycode)c);
 5346              		.loc 1 2834 2 is_stmt 1 view .LVU1703
2834:src/keys.c    **** 		return process_arg((const keycode)c);
 5347              		.loc 1 2834 6 is_stmt 0 view .LVU1704
 5348 01bc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2834:src/keys.c    **** 		return process_arg((const keycode)c);
 5349              		.loc 1 2834 5 view .LVU1705
 5350 01c0 9A06     		lsls	r2, r3, #26
 5351 01c2 00F1EE83 		bmi	.L1116
2837:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5352              		.loc 1 2837 2 is_stmt 1 view .LVU1706
2837:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5353              		.loc 1 2837 6 is_stmt 0 view .LVU1707
 5354 01c6 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
2837:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5355              		.loc 1 2837 5 view .LVU1708
 5356 01ca 11F0010B 		ands	fp, r1, #1
 5357 01ce 40F02984 		bne	.L1117
2840:src/keys.c    **** 		return process_hyp((const keycode)c);
 5358              		.loc 1 2840 2 is_stmt 1 view .LVU1709
2840:src/keys.c    **** 		return process_hyp((const keycode)c);
 5359              		.loc 1 2840 5 is_stmt 0 view .LVU1710
 5360 01d2 11F02000 		ands	r0, r1, #32
 5361 01d6 40F06384 		bne	.L1118
2843:src/keys.c    **** 		return process_test((const keycode)c);
 5362              		.loc 1 2843 2 is_stmt 1 view .LVU1711
2843:src/keys.c    **** 		return process_test((const keycode)c);
 5363              		.loc 1 2843 12 is_stmt 0 view .LVU1712
 5364 01da 98F80FB0 		ldrb	fp, [r8, #15]	@ zero_extendqisi2
2843:src/keys.c    **** 		return process_test((const keycode)c);
 5365              		.loc 1 2843 5 view .LVU1713
 5366 01de BBF1070F 		cmp	fp, #7
 5367 01e2 40F0EB83 		bne	.L1119
2846:src/keys.c    **** 		return process_status((const keycode)c);
 5368              		.loc 1 2846 2 is_stmt 1 view .LVU1714
2846:src/keys.c    **** 		return process_status((const keycode)c);
 5369              		.loc 1 2846 12 is_stmt 0 view .LVU1715
 5370 01e6 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
2846:src/keys.c    **** 		return process_status((const keycode)c);
 5371              		.loc 1 2846 5 view .LVU1716
ARM GAS  /tmp/ccczu93l.s 			page 178


 5372 01ea 002B     		cmp	r3, #0
 5373 01ec 40F0AF84 		bne	.L1120
2852:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5374              		.loc 1 2852 2 is_stmt 1 view .LVU1717
2852:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5375              		.loc 1 2852 5 is_stmt 0 view .LVU1718
 5376 01f0 292C     		cmp	r4, #41
 5377 01f2 00F06D85 		beq	.L1121
2856:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5378              		.loc 1 2856 2 is_stmt 1 view .LVU1719
2856:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5379              		.loc 1 2856 5 is_stmt 0 view .LVU1720
 5380 01f6 2A2C     		cmp	r4, #42
 5381 01f8 00F08285 		beq	.L1122
2860:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5382              		.loc 1 2860 2 is_stmt 1 view .LVU1721
2860:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5383              		.loc 1 2860 5 is_stmt 0 view .LVU1722
 5384 01fc 2B2C     		cmp	r4, #43
 5385 01fe 00F09B85 		beq	.L1123
2869:src/keys.c    **** 		return process_arrow((const keycode)c);
 5386              		.loc 1 2869 2 is_stmt 1 view .LVU1723
2869:src/keys.c    **** 		return process_arrow((const keycode)c);
 5387              		.loc 1 2869 5 is_stmt 0 view .LVU1724
 5388 0202 4807     		lsls	r0, r1, #29
 5389 0204 00F1CF84 		bmi	.L1124
2877:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5390              		.loc 1 2877 2 is_stmt 1 view .LVU1725
2877:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5391              		.loc 1 2877 8 is_stmt 0 view .LVU1726
 5392 0208 E4B2     		uxtb	r4, r4
 5393              	.LVL468:
 5394              	.LBB657:
 5395              	.LBI657:
 256:src/keys.c    **** {
 5396              		.loc 1 256 24 is_stmt 1 view .LVU1727
 5397              	.LBB658:
 258:src/keys.c    ****   int i, col, max;
 5398              		.loc 1 258 3 view .LVU1728
 259:src/keys.c    ****   const struct _map {
 5399              		.loc 1 259 3 view .LVU1729
 260:src/keys.c    ****     unsigned char key, cat[3];
 5400              		.loc 1 260 3 view .LVU1730
 265:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5401              		.loc 1 265 3 view .LVU1731
 265:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5402              		.loc 1 265 6 is_stmt 0 view .LVU1732
 5403 020a 212C     		cmp	r4, #33
 5404 020c 00F0F784 		beq	.L1125
 268:src/keys.c    ****     /*
 5405              		.loc 1 268 3 is_stmt 1 view .LVU1733
 268:src/keys.c    ****     /*
 5406              		.loc 1 268 23 is_stmt 0 view .LVU1734
 5407 0210 1D4A     		ldr	r2, .L1202+48
 5408 0212 D8F81430 		ldr	r3, [r8, #20]
 268:src/keys.c    ****     /*
 5409              		.loc 1 268 6 view .LVU1735
ARM GAS  /tmp/ccczu93l.s 			page 179


 5410 0216 1A42     		tst	r2, r3
 5411 0218 40F0FB84 		bne	.L663
 5412              	.LBB659:
 272:src/keys.c    **** #ifdef DM42
 5413              		.loc 1 272 5 is_stmt 1 view .LVU1736
 299:src/keys.c    ****       /*
 5414              		.loc 1 299 5 view .LVU1737
 299:src/keys.c    ****       /*
 5415              		.loc 1 299 8 is_stmt 0 view .LVU1738
 5416 021c 242C     		cmp	r4, #36
 5417 021e 03D1     		bne	.L664
 299:src/keys.c    ****       /*
 5418              		.loc 1 299 18 view .LVU1739
 5419 0220 BAF1020F 		cmp	r10, #2
 5420 0224 01F01584 		beq	.L912
 5421              	.L664:
 314:src/keys.c    ****       /*
 5422              		.loc 1 314 5 is_stmt 1 view .LVU1740
 314:src/keys.c    ****       /*
 5423              		.loc 1 314 8 is_stmt 0 view .LVU1741
 5424 0228 BAF1030F 		cmp	r10, #3
 5425 022c 3BD1     		bne	.L671
 5426              	.L894:
 324:src/keys.c    **** #ifndef WINGUI
 5427              		.loc 1 324 5 is_stmt 1 view .LVU1742
 5428              	.LVL469:
 326:src/keys.c    **** #else
 5429              		.loc 1 326 5 view .LVU1743
 326:src/keys.c    **** #else
 5430              		.loc 1 326 23 is_stmt 0 view .LVU1744
 5431 022e 174B     		ldr	r3, .L1202+52
 5432 0230 1B68     		ldr	r3, [r3]
 5433 0232 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 326:src/keys.c    **** #else
 5434              		.loc 1 326 27 view .LVU1745
 5435 0236 DA07     		lsls	r2, r3, #31
 5436 0238 00F13886 		bmi	.L913
 326:src/keys.c    **** #else
 5437              		.loc 1 326 73 view .LVU1746
 5438 023c 11F0020B 		ands	fp, r1, #2
 5439 0240 01F07C81 		beq	.L1126
 324:src/keys.c    **** #ifndef WINGUI
 5440              		.loc 1 324 8 view .LVU1747
 5441 0244 124B     		ldr	r3, .L1202+56
 330:src/keys.c    ****   }
 5442              		.loc 1 330 9 view .LVU1748
 5443 0246 0C22     		movs	r2, #12
 326:src/keys.c    **** #else
 5444              		.loc 1 326 73 view .LVU1749
 5445 0248 4FF0020C 		mov	ip, #2
 5446              	.LVL470:
 5447              	.L666:
 326:src/keys.c    **** #else
 5448              		.loc 1 326 73 view .LVU1750
 5449              	.LBE659:
 372:src/keys.c    ****     if (cp->key == c) {
 5450              		.loc 1 372 3 is_stmt 1 view .LVU1751
ARM GAS  /tmp/ccczu93l.s 			page 180


 372:src/keys.c    ****     if (cp->key == c) {
 5451              		.loc 1 372 15 view .LVU1752
 5452 024c 181F     		subs	r0, r3, #4
 5453 024e 00EB8200 		add	r0, r0, r2, lsl #2
 5454              	.LBB660:
 326:src/keys.c    **** #else
 5455              		.loc 1 326 73 is_stmt 0 view .LVU1753
 5456 0252 0422     		movs	r2, #4
 5457              	.LVL471:
 326:src/keys.c    **** #else
 5458              		.loc 1 326 73 view .LVU1754
 5459 0254 22E0     		b	.L672
 5460              	.L1203:
 5461 0256 00BF     		.align	2
 5462              	.L1202:
 5463 0258 00000000 		.word	.LANCHOR12
 5464 025c 00000000 		.word	Pause
 5465 0260 00000000 		.word	JustStopped
 5466 0264 00000000 		.word	OpCode
 5467 0268 00000000 		.word	GoFast
 5468 026c 00000000 		.word	Running
 5469 0270 00000000 		.word	ShowRPN
 5470 0274 00000000 		.word	JustDisplayed
 5471 0278 00000000 		.word	StateWhileOn
 5472 027c 00000000 		.word	OpCodeDisplayPending
 5473 0280 00000000 		.word	DispMsg
 5474 0284 00000000 		.word	.LC0
 5475 0288 00080800 		.word	526336
 5476 028c 00000000 		.word	main_ram
 5477 0290 00000000 		.word	.LANCHOR11
 5478 0294 00000000 		.word	WasDataEntry
 5479              	.LVL472:
 5480              	.L1128:
 326:src/keys.c    **** #else
 5481              		.loc 1 326 73 view .LVU1755
 5482 0298 13F8042F 		ldrb	r2, [r3, #4]!	@ zero_extendqisi2
 5483              	.LVL473:
 5484              	.L672:
 326:src/keys.c    **** #else
 5485              		.loc 1 326 73 view .LVU1756
 5486              	.LBE660:
 373:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5487              		.loc 1 373 5 is_stmt 1 view .LVU1757
 372:src/keys.c    ****     if (cp->key == c) {
 5488              		.loc 1 372 24 view .LVU1758
 372:src/keys.c    ****     if (cp->key == c) {
 5489              		.loc 1 372 15 view .LVU1759
 373:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5490              		.loc 1 373 8 is_stmt 0 view .LVU1760
 5491 029c 9442     		cmp	r4, r2
 5492 029e 00F0F584 		beq	.L1127
 372:src/keys.c    ****     if (cp->key == c) {
 5493              		.loc 1 372 3 view .LVU1761
 5494 02a2 9842     		cmp	r0, r3
 5495 02a4 F8D1     		bne	.L1128
 5496              	.LVL474:
 5497              	.L671:
ARM GAS  /tmp/ccczu93l.s 			page 181


 378:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5498              		.loc 1 378 3 is_stmt 1 view .LVU1762
 378:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5499              		.loc 1 378 6 is_stmt 0 view .LVU1763
 5500 02a6 0807     		lsls	r0, r1, #28
 5501 02a8 00F17985 		bmi	.L677
 5502              	.LVL475:
 5503              	.L675:
 378:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5504              		.loc 1 378 6 view .LVU1764
 5505              	.LBE658:
 5506              	.LBE657:
2892:src/keys.c    **** 		return process_labellist((const keycode)c);
 5507              		.loc 1 2892 2 is_stmt 1 view .LVU1765
2892:src/keys.c    **** 		return process_labellist((const keycode)c);
 5508              		.loc 1 2892 6 is_stmt 0 view .LVU1766
 5509 02ac 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2892:src/keys.c    **** 		return process_labellist((const keycode)c);
 5510              		.loc 1 2892 5 view .LVU1767
 5511 02b0 5807     		lsls	r0, r3, #29
 5512 02b2 00F10386 		bmi	.L1129
2895:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5513              		.loc 1 2895 2 is_stmt 1 view .LVU1768
2895:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5514              		.loc 1 2895 5 is_stmt 0 view .LVU1769
 5515 02b6 1A07     		lsls	r2, r3, #28
 5516 02b8 00F15387 		bmi	.L1130
2898:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5517              		.loc 1 2898 2 is_stmt 1 view .LVU1770
2898:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5518              		.loc 1 2898 5 is_stmt 0 view .LVU1771
 5519 02bc 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 5520 02c0 002A     		cmp	r2, #0
 5521 02c2 41F00E80 		bne	.L1131
2901:src/keys.c    **** #ifndef INFRARED
 5522              		.loc 1 2901 2 is_stmt 1 view .LVU1772
2901:src/keys.c    **** #ifndef INFRARED
 5523              		.loc 1 2901 6 is_stmt 0 view .LVU1773
 5524 02c6 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2901:src/keys.c    **** #ifndef INFRARED
 5525              		.loc 1 2901 5 view .LVU1774
 5526 02ca 1007     		lsls	r0, r2, #28
 5527 02cc 01F12C80 		bmi	.L1132
2914:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5528              		.loc 1 2914 2 is_stmt 1 view .LVU1775
2914:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5529              		.loc 1 2914 5 is_stmt 0 view .LVU1776
 5530 02d0 11F0020B 		ands	fp, r1, #2
 5531 02d4 41F08580 		bne	.L1133
2917:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5532              		.loc 1 2917 3 is_stmt 1 view .LVU1777
2917:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5533              		.loc 1 2917 24 is_stmt 0 view .LVU1778
 5534 02d8 0AF1FF31 		add	r1, r10, #-1
2917:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5535              		.loc 1 2917 6 view .LVU1779
 5536 02dc C9B2     		uxtb	r1, r1
ARM GAS  /tmp/ccczu93l.s 			page 182


 5537 02de 0129     		cmp	r1, #1
 5538 02e0 41F27E81 		bls	.L1134
2919:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5539              		.loc 1 2919 3 is_stmt 1 view .LVU1780
2919:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5540              		.loc 1 2919 6 is_stmt 0 view .LVU1781
 5541 02e4 BAF1030F 		cmp	r10, #3
 5542 02e8 01F03781 		beq	.L1135
2922:src/keys.c    **** 	}
 5543              		.loc 1 2922 3 is_stmt 1 view .LVU1782
 5544              	.LVL476:
 5545              	.LBB672:
 5546              	.LBI672:
 675:src/keys.c    **** {
 5547              		.loc 1 675 12 view .LVU1783
 5548              	.LBB673:
 677:src/keys.c    **** 		// Row 1
 5549              		.loc 1 677 2 view .LVU1784
 724:src/keys.c    **** 	int op = op_map[lc];
 5550              		.loc 1 724 2 view .LVU1785
 5551              	.LBB674:
 5552              	.LBI674:
 136:src/keys.c    **** {
 5553              		.loc 1 136 12 view .LVU1786
 5554              	.LBB675:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5555              		.loc 1 138 2 view .LVU1787
 148:src/keys.c    **** }
 5556              		.loc 1 148 2 view .LVU1788
 148:src/keys.c    **** }
 5557              		.loc 1 148 2 is_stmt 0 view .LVU1789
 5558              	.LBE675:
 5559              	.LBE674:
 725:src/keys.c    **** 	
 5560              		.loc 1 725 2 is_stmt 1 view .LVU1790
 730:src/keys.c    **** 	  switch (c) {
 5561              		.loc 1 730 6 is_stmt 0 view .LVU1791
 5562 02ec B049     		ldr	r1, .L1204
 5563              	.LBB678:
 5564              	.LBB676:
 148:src/keys.c    **** }
 5565              		.loc 1 148 23 view .LVU1792
 5566 02ee B148     		ldr	r0, .L1204+4
 5567              	.LBE676:
 5568              	.LBE678:
 730:src/keys.c    **** 	  switch (c) {
 5569              		.loc 1 730 6 view .LVU1793
 5570 02f0 0968     		ldr	r1, [r1]
 5571              	.LBB679:
 5572              	.LBB677:
 148:src/keys.c    **** }
 5573              		.loc 1 148 23 view .LVU1794
 5574 02f2 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5575              	.LBE677:
 5576              	.LBE679:
 725:src/keys.c    **** 	
 5577              		.loc 1 725 17 view .LVU1795
ARM GAS  /tmp/ccczu93l.s 			page 183


 5578 02f6 B048     		ldr	r0, .L1204+8
 730:src/keys.c    **** 	  switch (c) {
 5579              		.loc 1 730 6 view .LVU1796
 5580 02f8 91F8E817 		ldrb	r1, [r1, #2024]	@ zero_extendqisi2
 725:src/keys.c    **** 	
 5581              		.loc 1 725 17 view .LVU1797
 5582 02fc 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5583              	.LVL477:
 730:src/keys.c    **** 	  switch (c) {
 5584              		.loc 1 730 5 view .LVU1798
 5585 0300 C807     		lsls	r0, r1, #31
 725:src/keys.c    **** 	
 5586              		.loc 1 725 6 view .LVU1799
 5587 0302 D346     		mov	fp, r10
 5588              	.LVL478:
 729:src/keys.c    **** 	if (UState.intm) {
 5589              		.loc 1 729 2 is_stmt 1 view .LVU1800
 730:src/keys.c    **** 	  switch (c) {
 5590              		.loc 1 730 2 view .LVU1801
 730:src/keys.c    **** 	  switch (c) {
 5591              		.loc 1 730 5 is_stmt 0 view .LVU1802
 5592 0304 00F1BB81 		bmi	.L1136
 761:src/keys.c    **** 	  }
 5593              		.loc 1 761 12 is_stmt 1 view .LVU1803
 766:src/keys.c    **** #ifdef DM42
 5594              		.loc 1 766 2 view .LVU1804
 5595 0308 2D2C     		cmp	r4, #45
 5596 030a 00F29580 		bhi	.L595
 5597 030e DFE814F0 		tbh	[pc, r4, lsl #1]
 5598              	.L900:
 5599 0312 AB0B     		.2byte	(.L847-.L900)/2
 5600 0314 A40B     		.2byte	(.L848-.L900)/2
 5601 0316 9300     		.2byte	(.L595-.L900)/2
 5602 0318 3B02     		.2byte	(.L846-.L900)/2
 5603 031a 9300     		.2byte	(.L595-.L900)/2
 5604 031c 9300     		.2byte	(.L595-.L900)/2
 5605 031e 2C02     		.2byte	(.L841-.L900)/2
 5606 0320 2C02     		.2byte	(.L841-.L900)/2
 5607 0322 9300     		.2byte	(.L595-.L900)/2
 5608 0324 9300     		.2byte	(.L595-.L900)/2
 5609 0326 9300     		.2byte	(.L595-.L900)/2
 5610 0328 9300     		.2byte	(.L595-.L900)/2
 5611 032a 9300     		.2byte	(.L595-.L900)/2
 5612 032c 9300     		.2byte	(.L595-.L900)/2
 5613 032e 9300     		.2byte	(.L595-.L900)/2
 5614 0330 9300     		.2byte	(.L595-.L900)/2
 5615 0332 2102     		.2byte	(.L845-.L900)/2
 5616 0334 9300     		.2byte	(.L595-.L900)/2
 5617 0336 2C02     		.2byte	(.L841-.L900)/2
 5618 0338 9300     		.2byte	(.L595-.L900)/2
 5619 033a 9300     		.2byte	(.L595-.L900)/2
 5620 033c 9300     		.2byte	(.L595-.L900)/2
 5621 033e 9300     		.2byte	(.L595-.L900)/2
 5622 0340 9300     		.2byte	(.L595-.L900)/2
 5623 0342 9300     		.2byte	(.L595-.L900)/2
 5624 0344 9300     		.2byte	(.L595-.L900)/2
 5625 0346 9300     		.2byte	(.L595-.L900)/2
ARM GAS  /tmp/ccczu93l.s 			page 184


 5626 0348 9300     		.2byte	(.L595-.L900)/2
 5627 034a 9300     		.2byte	(.L595-.L900)/2
 5628 034c 9300     		.2byte	(.L595-.L900)/2
 5629 034e 9300     		.2byte	(.L595-.L900)/2
 5630 0350 9300     		.2byte	(.L595-.L900)/2
 5631 0352 9300     		.2byte	(.L595-.L900)/2
 5632 0354 9300     		.2byte	(.L595-.L900)/2
 5633 0356 9300     		.2byte	(.L595-.L900)/2
 5634 0358 9300     		.2byte	(.L595-.L900)/2
 5635 035a 9300     		.2byte	(.L595-.L900)/2
 5636 035c 9300     		.2byte	(.L595-.L900)/2
 5637 035e 9300     		.2byte	(.L595-.L900)/2
 5638 0360 9300     		.2byte	(.L595-.L900)/2
 5639 0362 9300     		.2byte	(.L595-.L900)/2
 5640 0364 9300     		.2byte	(.L595-.L900)/2
 5641 0366 9300     		.2byte	(.L595-.L900)/2
 5642 0368 9300     		.2byte	(.L595-.L900)/2
 5643 036a 4102     		.2byte	(.L844-.L900)/2
 5644 036c FC0D     		.2byte	(.L850-.L900)/2
 5645              	.LVL479:
 5646              		.p2align 1
 5647              	.L570:
 766:src/keys.c    **** #ifdef DM42
 5648              		.loc 1 766 2 is_stmt 0 view .LVU1805
 5649              	.LBE673:
 5650              	.LBE672:
2782:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5651              		.loc 1 2782 5 is_stmt 1 view .LVU1806
2782:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5652              		.loc 1 2782 8 is_stmt 0 view .LVU1807
 5653 036e 242C     		cmp	r4, #36
 5654 0370 00F09180 		beq	.L572
2782:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5655              		.loc 1 2782 18 view .LVU1808
 5656 0374 272C     		cmp	r4, #39
 5657 0376 00F08E80 		beq	.L572
2792:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5658              		.loc 1 2792 5 is_stmt 1 view .LVU1809
2792:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5659              		.loc 1 2792 8 is_stmt 0 view .LVU1810
 5660 037a 622C     		cmp	r4, #98
 5661 037c 07D0     		beq	.L575
2793:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5662              		.loc 1 2793 7 is_stmt 1 view .LVU1811
2793:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5663              		.loc 1 2793 15 is_stmt 0 view .LVU1812
 5664 037e 8F4B     		ldr	r3, .L1204+12
2795:src/keys.c    ****     }
 5665              		.loc 1 2795 14 view .LVU1813
 5666 0380 8F4A     		ldr	r2, .L1204+16
2793:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5667              		.loc 1 2793 17 view .LVU1814
 5668 0382 0134     		adds	r4, r4, #1
 5669              	.LVL480:
2795:src/keys.c    ****     }
 5670              		.loc 1 2795 14 view .LVU1815
 5671 0384 0121     		movs	r1, #1
ARM GAS  /tmp/ccczu93l.s 			page 185


2793:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5672              		.loc 1 2793 15 view .LVU1816
 5673 0386 DC74     		strb	r4, [r3, #19]
2794:src/keys.c    ****       GoFast = 1;
 5674              		.loc 1 2794 7 is_stmt 1 view .LVU1817
2794:src/keys.c    ****       GoFast = 1;
 5675              		.loc 1 2794 13 is_stmt 0 view .LVU1818
 5676 0388 0023     		movs	r3, #0
2795:src/keys.c    ****     }
 5677              		.loc 1 2795 14 view .LVU1819
 5678 038a 1160     		str	r1, [r2]
2794:src/keys.c    ****       GoFast = 1;
 5679              		.loc 1 2794 13 view .LVU1820
 5680 038c 3B70     		strb	r3, [r7]
2795:src/keys.c    ****     }
 5681              		.loc 1 2795 7 is_stmt 1 view .LVU1821
 5682              	.LVL481:
 5683              	.L575:
2795:src/keys.c    ****     }
 5684              		.loc 1 2795 7 is_stmt 0 view .LVU1822
 5685              	.LBE654:
 5686              	.LBE653:
3165:src/keys.c    ****       break;
 5687              		.loc 1 3165 7 is_stmt 1 view .LVU1823
 5688 038e FFF7FEFF 		bl	xeqprog
 5689              	.LVL482:
3166:src/keys.c    **** 
 5690              		.loc 1 3166 7 view .LVU1824
 5691 0392 3268     		ldr	r2, [r6]
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 5692              		.loc 1 2958 7 is_stmt 0 view .LVU1825
 5693 0394 0025     		movs	r5, #0
3166:src/keys.c    **** 
 5694              		.loc 1 3166 7 view .LVU1826
 5695 0396 4FF0310B 		mov	fp, #49
 5696              	.LVL483:
3205:src/keys.c    **** #ifndef CONSOLE
 5697              		.loc 1 3205 3 is_stmt 1 view .LVU1827
3205:src/keys.c    **** #ifndef CONSOLE
 5698              		.loc 1 3205 6 is_stmt 0 view .LVU1828
 5699 039a 002A     		cmp	r2, #0
 5700 039c 3FF48CAE 		beq	.L580
 5701              	.L1098:
3205:src/keys.c    **** #ifndef CONSOLE
 5702              		.loc 1 3205 6 view .LVU1829
 5703 03a0 884C     		ldr	r4, .L1204+20
3218:src/keys.c    ****   watchdog();
 5704              		.loc 1 3218 3 is_stmt 1 view .LVU1830
3218:src/keys.c    ****   watchdog();
 5705              		.loc 1 3218 17 is_stmt 0 view .LVU1831
 5706 03a2 0023     		movs	r3, #0
 5707 03a4 2360     		str	r3, [r4]
3219:src/keys.c    **** }
 5708              		.loc 1 3219 13 is_stmt 1 view .LVU1832
 5709 03a6 ADE6     		b	.L534
 5710              	.LVL484:
 5711              	.L1103:
ARM GAS  /tmp/ccczu93l.s 			page 186


2969:src/keys.c    ****     }
 5712              		.loc 1 2969 7 view .LVU1833
3117:src/keys.c    **** #ifdef DM42
 5713              		.loc 1 3117 15 is_stmt 0 view .LVU1834
 5714 03a8 874E     		ldr	r6, .L1204+24
3117:src/keys.c    **** #ifdef DM42
 5715              		.loc 1 3117 13 view .LVU1835
 5716 03aa 8849     		ldr	r1, .L1204+28
3117:src/keys.c    **** #ifdef DM42
 5717              		.loc 1 3117 15 view .LVU1836
 5718 03ac 3368     		ldr	r3, [r6]
2969:src/keys.c    ****     }
 5719              		.loc 1 2969 14 view .LVU1837
 5720 03ae 884A     		ldr	r2, .L1204+32
3116:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5721              		.loc 1 3116 18 view .LVU1838
 5722 03b0 DFF83492 		ldr	r9, .L1204+56
3117:src/keys.c    **** #ifdef DM42
 5723              		.loc 1 3117 15 view .LVU1839
 5724 03b4 B3FA83F3 		clz	r3, r3
 5725 03b8 5B09     		lsrs	r3, r3, #5
3117:src/keys.c    **** #ifdef DM42
 5726              		.loc 1 3117 13 view .LVU1840
 5727 03ba 0B60     		str	r3, [r1]
2969:src/keys.c    ****     }
 5728              		.loc 1 2969 14 view .LVU1841
 5729 03bc 0023     		movs	r3, #0
 5730 03be 1360     		str	r3, [r2]
3066:src/keys.c    ****     {
 5731              		.loc 1 3066 3 is_stmt 1 view .LVU1842
3116:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5732              		.loc 1 3116 5 view .LVU1843
3116:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5733              		.loc 1 3116 18 is_stmt 0 view .LVU1844
 5734 03c0 C9F80030 		str	r3, [r9]
3117:src/keys.c    **** #ifdef DM42
 5735              		.loc 1 3117 5 is_stmt 1 view .LVU1845
3119:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5736              		.loc 1 3119 5 view .LVU1846
 5737 03c4 D5E6     		b	.L537
 5738              	.L555:
3119:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5739              		.loc 1 3119 5 is_stmt 0 view .LVU1847
 5740 03c6 804E     		ldr	r6, .L1204+24
3117:src/keys.c    **** #ifdef DM42
 5741              		.loc 1 3117 13 view .LVU1848
 5742 03c8 8049     		ldr	r1, .L1204+28
 5743 03ca 3268     		ldr	r2, [r6]
3116:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5744              		.loc 1 3116 5 is_stmt 1 view .LVU1849
3116:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5745              		.loc 1 3116 18 is_stmt 0 view .LVU1850
 5746 03cc DFF81892 		ldr	r9, .L1204+56
3117:src/keys.c    **** #ifdef DM42
 5747              		.loc 1 3117 15 view .LVU1851
 5748 03d0 B2FA82F3 		clz	r3, r2
 5749 03d4 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/ccczu93l.s 			page 187


3119:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5750              		.loc 1 3119 8 view .LVU1852
 5751 03d6 342C     		cmp	r4, #52
3117:src/keys.c    **** #ifdef DM42
 5752              		.loc 1 3117 13 view .LVU1853
 5753 03d8 0B60     		str	r3, [r1]
3116:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5754              		.loc 1 3116 18 view .LVU1854
 5755 03da C9F80050 		str	r5, [r9]
3117:src/keys.c    **** #ifdef DM42
 5756              		.loc 1 3117 5 is_stmt 1 view .LVU1855
3119:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5757              		.loc 1 3119 5 view .LVU1856
3119:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5758              		.loc 1 3119 8 is_stmt 0 view .LVU1857
 5759 03de 7FF4C8AE 		bne	.L537
3123:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5760              		.loc 1 3123 7 is_stmt 1 view .LVU1858
3123:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5761              		.loc 1 3123 11 is_stmt 0 view .LVU1859
 5762 03e2 7C4B     		ldr	r3, .L1204+36
 5763 03e4 1868     		ldr	r0, [r3]
3123:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5764              		.loc 1 3123 10 view .LVU1860
 5765 03e6 10F47043 		ands	r3, r0, #61440
 5766 03ea 1FD0     		beq	.L853
3123:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5767              		.loc 1 3123 11 discriminator 1 view .LVU1861
 5768 03ec B3F5704F 		cmp	r3, #61440
 5769              	.LBB1283:
3124:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5770              		.loc 1 3124 28 discriminator 1 view .LVU1862
 5771 03f0 C0F30723 		ubfx	r3, r0, #8, #8
 5772              	.LBE1283:
3123:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5773              		.loc 1 3123 11 discriminator 1 view .LVU1863
 5774 03f4 00F0AD80 		beq	.L854
 5775              	.LBB1286:
3124:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5776              		.loc 1 3124 2 is_stmt 1 view .LVU1864
3124:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5777              		.loc 1 3124 28 is_stmt 0 view .LVU1865
 5778 03f8 A3F12004 		sub	r4, r3, #32
 5779              	.LVL485:
3124:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5780              		.loc 1 3124 28 view .LVU1866
 5781 03fc E4B2     		uxtb	r4, r4
 5782              	.LVL486:
3125:src/keys.c    **** 	  c = nd_opcode;
 5783              		.loc 1 3125 2 is_stmt 1 view .LVU1867
3125:src/keys.c    **** 	  c = nd_opcode;
 5784              		.loc 1 3125 5 is_stmt 0 view .LVU1868
 5785 03fe 012C     		cmp	r4, #1
 5786 0400 40F28980 		bls	.L855
3125:src/keys.c    **** 	  c = nd_opcode;
 5787              		.loc 1 3125 53 discriminator 1 view .LVU1869
 5788 0404 6C2C     		cmp	r4, #108
ARM GAS  /tmp/ccczu93l.s 			page 188


 5789 0406 00F08680 		beq	.L855
3125:src/keys.c    **** 	  c = nd_opcode;
 5790              		.loc 1 3125 74 discriminator 2 view .LVU1870
 5791 040a 242C     		cmp	r4, #36
 5792 040c 00F08380 		beq	.L855
3127:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5793              		.loc 1 3127 7 is_stmt 1 view .LVU1871
3127:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5794              		.loc 1 3127 32 is_stmt 0 view .LVU1872
 5795 0410 A4F12D01 		sub	r1, r4, #45
3127:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5796              		.loc 1 3127 10 view .LVU1873
 5797 0414 0629     		cmp	r1, #6
 5798 0416 00F23283 		bhi	.L857
3128:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5799              		.loc 1 3128 4 is_stmt 1 view .LVU1874
3128:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5800              		.loc 1 3128 25 is_stmt 0 view .LVU1875
 5801 041a 4D3B     		subs	r3, r3, #77
3128:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5802              		.loc 1 3128 16 view .LVU1876
 5803 041c 88F80F30 		strb	r3, [r8, #15]
3129:src/keys.c    **** 	}
 5804              		.loc 1 3129 4 is_stmt 1 view .LVU1877
 5805              	.LVL487:
3129:src/keys.c    **** 	}
 5806              		.loc 1 3129 4 is_stmt 0 view .LVU1878
 5807              	.LBE1286:
3143:src/keys.c    ****     case STATE_SST:
 5808              		.loc 1 3143 5 is_stmt 1 view .LVU1879
 5809              	.LBB1287:
3129:src/keys.c    **** 	}
 5810              		.loc 1 3129 6 is_stmt 0 view .LVU1880
 5811 0420 4FF0330B 		mov	fp, #51
 5812 0424 45E6     		b	.L565
 5813              	.LVL488:
 5814              	.L1102:
3129:src/keys.c    **** 	}
 5815              		.loc 1 3129 6 view .LVU1881
 5816              	.LBE1287:
2964:src/keys.c    ****     }
 5817              		.loc 1 2964 7 is_stmt 1 view .LVU1882
 5818 0426 FFF7FEFF 		bl	xeq_xrom
 5819              	.LVL489:
2964:src/keys.c    ****     }
 5820              		.loc 1 2964 7 is_stmt 0 view .LVU1883
 5821 042a F5E5     		b	.L535
 5822              	.L853:
3137:src/keys.c    ****       }      
 5823              		.loc 1 3137 2 is_stmt 1 view .LVU1884
 5824              	.LBB1288:
 5825              	.LBB1289:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 5826              		.loc 1 622 5 is_stmt 0 view .LVU1885
 5827 042c C0F30723 		ubfx	r3, r0, #8, #8
 5828 0430 012B     		cmp	r3, #1
 5829              	.LBE1289:
ARM GAS  /tmp/ccczu93l.s 			page 189


 5830              	.LBE1288:
3137:src/keys.c    ****       }      
 5831              		.loc 1 3137 6 view .LVU1886
 5832 0432 8346     		mov	fp, r0
 5833              	.LVL490:
 5834              	.LBB1293:
 5835              	.LBI1288:
 621:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5836              		.loc 1 621 12 is_stmt 1 view .LVU1887
 5837              	.LBB1290:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 5838              		.loc 1 622 2 view .LVU1888
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 5839              		.loc 1 622 5 is_stmt 0 view .LVU1889
 5840 0434 00F09180 		beq	.L895
 5841              	.LVL491:
 5842              	.L595:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 5843              		.loc 1 622 5 view .LVU1890
 5844              	.LBE1290:
 5845              	.LBE1293:
3143:src/keys.c    ****     case STATE_SST:
 5846              		.loc 1 3143 5 is_stmt 1 view .LVU1891
 5847 0438 ABF12B03 		sub	r3, fp, #43
 5848 043c 082B     		cmp	r3, #8
 5849 043e 00F2E580 		bhi	.L859
 5850 0442 01A2     		adr	r2, .L861
 5851 0444 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5852              		.p2align 2
 5853              	.L861:
 5854 0448 77040000 		.word	.L866+1
 5855 044c 77040000 		.word	.L866+1
 5856 0450 0D060000 		.word	.L859+1
 5857 0454 E5040000 		.word	.L775+1
 5858 0458 D3040000 		.word	.L771+1
 5859 045c FD040000 		.word	.L768+1
 5860 0460 8F030000 		.word	.L575+1
 5861 0464 93050000 		.word	.L860+1
 5862 0468 93050000 		.word	.L860+1
 5863              	.LVL492:
 5864              		.p2align 1
 5865              	.L1111:
3033:src/keys.c    ****       return;
 5866              		.loc 1 3033 21 is_stmt 0 discriminator 1 view .LVU1892
 5867 046c 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3033:src/keys.c    ****       return;
 5868              		.loc 1 3033 18 discriminator 1 view .LVU1893
 5869 046e 002A     		cmp	r2, #0
 5870 0470 7FF475AE 		bne	.L551
 5871 0474 46E6     		b	.L534
 5872              	.LVL493:
 5873              	.L866:
3170:src/keys.c    **** 	set_window(c);
 5874              		.loc 1 3170 7 is_stmt 1 view .LVU1894
3170:src/keys.c    **** 	set_window(c);
 5875              		.loc 1 3170 12 is_stmt 0 view .LVU1895
 5876 0476 FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccczu93l.s 			page 190


 5877              	.LVL494:
3170:src/keys.c    **** 	set_window(c);
 5878              		.loc 1 3170 10 view .LVU1896
 5879 047a 0546     		mov	r5, r0
 5880 047c 0028     		cmp	r0, #0
 5881 047e 00F0FE81 		beq	.L870
 5882 0482 3268     		ldr	r2, [r6]
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 5883              		.loc 1 2958 7 view .LVU1897
 5884 0484 0025     		movs	r5, #0
 5885 0486 14E6     		b	.L565
 5886              	.LVL495:
 5887              	.L1110:
3025:src/keys.c    ****       JustStopped = 0;
 5888              		.loc 1 3025 25 discriminator 1 view .LVU1898
 5889 0488 FFF7FEFF 		bl	is_key_pressed
 5890              	.LVL496:
3025:src/keys.c    ****       JustStopped = 0;
 5891              		.loc 1 3025 21 discriminator 1 view .LVU1899
 5892 048c 0028     		cmp	r0, #0
 5893 048e 7FF461AE 		bne	.L549
3026:src/keys.c    ****     }
 5894              		.loc 1 3026 7 is_stmt 1 view .LVU1900
3026:src/keys.c    ****     }
 5895              		.loc 1 3026 19 is_stmt 0 view .LVU1901
 5896 0492 2860     		str	r0, [r5]
 5897 0494 5EE6     		b	.L549
 5898              	.LVL497:
 5899              	.L572:
 5900              	.LBB1294:
 5901              	.LBB1230:
2783:src/keys.c    **** 	set_pc(0);
 5902              		.loc 1 2783 7 is_stmt 1 view .LVU1902
2783:src/keys.c    **** 	set_pc(0);
 5903              		.loc 1 2783 11 is_stmt 0 view .LVU1903
 5904 0496 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
2783:src/keys.c    **** 	set_pc(0);
 5905              		.loc 1 2783 10 view .LVU1904
 5906 0498 4BB1     		cbz	r3, .L574
2783:src/keys.c    **** 	set_pc(0);
 5907              		.loc 1 2783 20 view .LVU1905
 5908 049a 454B     		ldr	r3, .L1204
 5909 049c 1B68     		ldr	r3, [r3]
 5910 049e B3F8E037 		ldrh	r3, [r3, #2016]
2783:src/keys.c    **** 	set_pc(0);
 5911              		.loc 1 2783 17 view .LVU1906
 5912 04a2 9B0B     		lsrs	r3, r3, #14
 5913 04a4 032B     		cmp	r3, #3
 5914 04a6 02D1     		bne	.L574
2784:src/keys.c    ****       Pause = 0;
 5915              		.loc 1 2784 2 is_stmt 1 view .LVU1907
 5916 04a8 0020     		movs	r0, #0
 5917 04aa FFF7FEFF 		bl	set_pc
 5918              	.LVL498:
 5919              	.L574:
2785:src/keys.c    ****       xeq_xrom();
 5920              		.loc 1 2785 7 view .LVU1908
ARM GAS  /tmp/ccczu93l.s 			page 191


2785:src/keys.c    ****       xeq_xrom();
 5921              		.loc 1 2785 13 is_stmt 0 view .LVU1909
 5922 04ae 0025     		movs	r5, #0
 5923 04b0 3D70     		strb	r5, [r7]
2786:src/keys.c    ****       set_running_off();
 5924              		.loc 1 2786 7 is_stmt 1 view .LVU1910
 5925 04b2 FFF7FEFF 		bl	xeq_xrom
 5926              	.LVL499:
2787:src/keys.c    ****       DispMsg = "Stopped";
 5927              		.loc 1 2787 7 view .LVU1911
 5928 04b6 FFF7FEFF 		bl	set_running_off
 5929              	.LVL500:
2788:src/keys.c    ****       State2.disp_freeze = 0;
 5930              		.loc 1 2788 7 view .LVU1912
2789:src/keys.c    ****       return STATE_UNFINISHED;
 5931              		.loc 1 2789 26 is_stmt 0 view .LVU1913
 5932 04ba 404B     		ldr	r3, .L1204+12
2788:src/keys.c    ****       State2.disp_freeze = 0;
 5933              		.loc 1 2788 15 view .LVU1914
 5934 04bc 4648     		ldr	r0, .L1204+40
2789:src/keys.c    ****       return STATE_UNFINISHED;
 5935              		.loc 1 2789 26 view .LVU1915
 5936 04be D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
2788:src/keys.c    ****       State2.disp_freeze = 0;
 5937              		.loc 1 2788 15 view .LVU1916
 5938 04c0 464C     		ldr	r4, .L1204+44
 5939              	.LVL501:
2788:src/keys.c    ****       State2.disp_freeze = 0;
 5940              		.loc 1 2788 15 view .LVU1917
 5941 04c2 3268     		ldr	r2, [r6]
 5942 04c4 0460     		str	r4, [r0]
2789:src/keys.c    ****       return STATE_UNFINISHED;
 5943              		.loc 1 2789 7 is_stmt 1 view .LVU1918
2789:src/keys.c    ****       return STATE_UNFINISHED;
 5944              		.loc 1 2789 26 is_stmt 0 view .LVU1919
 5945 04c6 65F30411 		bfi	r1, r5, #4, #1
 5946 04ca D975     		strb	r1, [r3, #23]
2790:src/keys.c    ****     }
 5947              		.loc 1 2790 7 is_stmt 1 view .LVU1920
2790:src/keys.c    ****     }
 5948              		.loc 1 2790 14 is_stmt 0 view .LVU1921
 5949 04cc 4FF0330B 		mov	fp, #51
 5950 04d0 EFE5     		b	.L565
 5951              	.LVL502:
 5952              	.L771:
2790:src/keys.c    ****     }
 5953              		.loc 1 2790 14 view .LVU1922
 5954              	.LBE1230:
 5955              	.LBE1294:
3151:src/keys.c    ****       break;
 5956              		.loc 1 3151 7 is_stmt 1 view .LVU1923
 5957 04d2 4FF0FF30 		mov	r0, #-1
 5958 04d6 FFF7FEFF 		bl	xeq_sst_bst
 5959              	.LVL503:
3152:src/keys.c    **** 
 5960              		.loc 1 3152 7 view .LVU1924
2958:src/keys.c    ****   if (was_paused && Pause == 0)
ARM GAS  /tmp/ccczu93l.s 			page 192


 5961              		.loc 1 2958 7 is_stmt 0 view .LVU1925
 5962 04da 0025     		movs	r5, #0
 5963 04dc 3268     		ldr	r2, [r6]
3152:src/keys.c    **** 
 5964              		.loc 1 3152 7 view .LVU1926
 5965 04de 4FF02F0B 		mov	fp, #47
 5966 04e2 E6E5     		b	.L565
 5967              	.L775:
3145:src/keys.c    ****       OpCodeDisplayPending = 0;
 5968              		.loc 1 3145 7 is_stmt 1 view .LVU1927
3146:src/keys.c    ****       xeq_sst_bst(0);
 5969              		.loc 1 3146 28 is_stmt 0 view .LVU1928
 5970 04e4 3E4A     		ldr	r2, .L1204+48
3145:src/keys.c    ****       OpCodeDisplayPending = 0;
 5971              		.loc 1 3145 14 view .LVU1929
 5972 04e6 3A49     		ldr	r1, .L1204+32
3146:src/keys.c    ****       xeq_sst_bst(0);
 5973              		.loc 1 3146 28 view .LVU1930
 5974 04e8 0020     		movs	r0, #0
3145:src/keys.c    ****       OpCodeDisplayPending = 0;
 5975              		.loc 1 3145 14 view .LVU1931
 5976 04ea 2E23     		movs	r3, #46
3146:src/keys.c    ****       xeq_sst_bst(0);
 5977              		.loc 1 3146 28 view .LVU1932
 5978 04ec 1060     		str	r0, [r2]
3145:src/keys.c    ****       OpCodeDisplayPending = 0;
 5979              		.loc 1 3145 14 view .LVU1933
 5980 04ee 0B60     		str	r3, [r1]
3146:src/keys.c    ****       xeq_sst_bst(0);
 5981              		.loc 1 3146 7 is_stmt 1 view .LVU1934
3147:src/keys.c    ****       break;
 5982              		.loc 1 3147 7 view .LVU1935
3148:src/keys.c    **** 
 5983              		.loc 1 3148 7 is_stmt 0 view .LVU1936
 5984 04f0 9B46     		mov	fp, r3
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 5985              		.loc 1 2958 7 view .LVU1937
 5986 04f2 0546     		mov	r5, r0
3147:src/keys.c    ****       break;
 5987              		.loc 1 3147 7 view .LVU1938
 5988 04f4 FFF7FEFF 		bl	xeq_sst_bst
 5989              	.LVL504:
3148:src/keys.c    **** 
 5990              		.loc 1 3148 7 is_stmt 1 view .LVU1939
 5991 04f8 3268     		ldr	r2, [r6]
 5992 04fa DAE5     		b	.L565
 5993              	.L768:
3155:src/keys.c    **** 	delprog();
 5994              		.loc 1 3155 7 view .LVU1940
3155:src/keys.c    **** 	delprog();
 5995              		.loc 1 3155 11 is_stmt 0 view .LVU1941
 5996 04fc 98F81650 		ldrb	r5, [r8, #22]	@ zero_extendqisi2
3155:src/keys.c    **** 	delprog();
 5997              		.loc 1 3155 10 view .LVU1942
 5998 0500 6C06     		lsls	r4, r5, #25
 5999 0502 40F12B81 		bpl	.L867
3157:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
ARM GAS  /tmp/ccczu93l.s 			page 193


 6000              		.loc 1 3157 12 is_stmt 1 view .LVU1943
3157:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6001              		.loc 1 3157 15 is_stmt 0 view .LVU1944
 6002 0506 15F00805 		ands	r5, r5, #8
 6003 050a 40F09680 		bne	.L868
 6004 050e 3268     		ldr	r2, [r6]
 6005 0510 4FF0300B 		mov	fp, #48
 6006 0514 CDE5     		b	.L565
 6007              	.LVL505:
 6008              	.L855:
 6009              	.LBB1295:
3126:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6010              		.loc 1 3126 4 is_stmt 1 view .LVU1945
 6011 0516 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3126:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6012              		.loc 1 3126 6 is_stmt 0 view .LVU1946
 6013 051a 8346     		mov	fp, r0
 6014              	.LVL506:
 6015              	.L622:
3126:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6016              		.loc 1 3126 6 view .LVU1947
 6017              	.LBE1295:
3179:src/keys.c    **** 	NonProgrammable = 0;
 6018              		.loc 1 3179 7 is_stmt 1 view .LVU1948
3179:src/keys.c    **** 	NonProgrammable = 0;
 6019              		.loc 1 3179 10 is_stmt 0 view .LVU1949
 6020 051c 5906     		lsls	r1, r3, #25
 6021 051e 00F1CC81 		bmi	.L1137
 6022              	.L888:
3179:src/keys.c    **** 	NonProgrammable = 0;
 6023              		.loc 1 3179 26 view .LVU1950
 6024 0522 304B     		ldr	r3, .L1204+52
 6025 0524 1A68     		ldr	r2, [r3]
 6026 0526 002A     		cmp	r2, #0
 6027 0528 41F0A983 		bne	.L1138
 6028              	.LVL507:
 6029              	.L876:
3201:src/keys.c    ****       }
 6030              		.loc 1 3201 2 is_stmt 1 view .LVU1951
 6031 052c FFF7FEFF 		bl	stoprog
 6032              	.LVL508:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 6033              		.loc 1 2958 7 is_stmt 0 view .LVU1952
 6034 0530 0025     		movs	r5, #0
 6035 0532 3268     		ldr	r2, [r6]
 6036 0534 BDE5     		b	.L565
 6037              	.LVL509:
 6038              	.L1106:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 6039              		.loc 1 2958 7 view .LVU1953
 6040 0536 244E     		ldr	r6, .L1204+24
 6041 0538 3368     		ldr	r3, [r6]
 6042 053a 10E6     		b	.L551
 6043              	.L1105:
3047:src/keys.c    ****       finish_RPN(); // RPN
 6044              		.loc 1 3047 7 is_stmt 1 view .LVU1954
 6045 053c 8D20     		movs	r0, #141
ARM GAS  /tmp/ccczu93l.s 			page 194


 6046 053e FFF7FEFF 		bl	clr_dot
 6047              	.LVL510:
3048:src/keys.c    ****     }
 6048              		.loc 1 3048 7 view .LVU1955
 6049 0542 FFF7FEFF 		bl	finish_RPN
 6050              	.LVL511:
 6051 0546 7EE5     		b	.L553
 6052              	.LVL512:
 6053              	.L564:
3108:src/keys.c    ****     }
 6054              		.loc 1 3108 7 view .LVU1956
 6055 0548 FFF7FEFF 		bl	finish_RPN
 6056              	.LVL513:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 6057              		.loc 1 2958 7 is_stmt 0 view .LVU1957
 6058 054c 0025     		movs	r5, #0
 6059 054e 3268     		ldr	r2, [r6]
 6060 0550 AFE5     		b	.L565
 6061              	.LVL514:
 6062              	.L854:
3137:src/keys.c    ****       }      
 6063              		.loc 1 3137 2 is_stmt 1 view .LVU1958
 6064              	.LBB1296:
 6065              	.LBB1291:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 6066              		.loc 1 622 5 is_stmt 0 view .LVU1959
 6067 0552 012B     		cmp	r3, #1
 6068              	.LBE1291:
 6069              	.LBE1296:
3137:src/keys.c    ****       }      
 6070              		.loc 1 3137 6 view .LVU1960
 6071 0554 8346     		mov	fp, r0
 6072              	.LVL515:
 6073              	.LBB1297:
 621:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6074              		.loc 1 621 12 is_stmt 1 view .LVU1961
 6075              	.LBB1292:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 6076              		.loc 1 622 2 view .LVU1962
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 6077              		.loc 1 622 5 is_stmt 0 view .LVU1963
 6078 0556 40F08280 		bne	.L1139
 6079              	.LVL516:
 6080              	.L895:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 6081              		.loc 1 622 5 view .LVU1964
 6082 055a FFF7FEFF 		bl	check_confirm.part.0
 6083              	.LVL517:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 6084              		.loc 1 622 5 view .LVU1965
 6085 055e 8346     		mov	fp, r0
 6086              	.LVL518:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 6087              		.loc 1 622 5 view .LVU1966
 6088 0560 6AE7     		b	.L595
 6089              	.LVL519:
 6090              	.L556:
ARM GAS  /tmp/ccczu93l.s 			page 195


 622:src/keys.c    **** 		const int nilop = argKIND(op);
 6091              		.loc 1 622 5 view .LVU1967
 6092              	.LBE1292:
 6093              	.LBE1297:
3089:src/keys.c    **** #ifndef CONSOLE
 6094              		.loc 1 3089 7 is_stmt 1 view .LVU1968
 6095 0562 1A4B     		ldr	r3, .L1204+28
 6096 0564 8D20     		movs	r0, #141
 6097 0566 1968     		ldr	r1, [r3]
 6098 0568 FFF7FEFF 		bl	dot
 6099              	.LVL520:
3091:src/keys.c    **** 	if (!WasDataEntry) {
 6100              		.loc 1 3091 7 view .LVU1969
3091:src/keys.c    **** 	if (!WasDataEntry) {
 6101              		.loc 1 3091 11 is_stmt 0 view .LVU1970
 6102 056c 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3091:src/keys.c    **** 	if (!WasDataEntry) {
 6103              		.loc 1 3091 10 view .LVU1971
 6104 0570 9806     		lsls	r0, r3, #26
 6105 0572 3FF5C7AD 		bmi	.L534
3092:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6106              		.loc 1 3092 2 is_stmt 1 view .LVU1972
3092:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6107              		.loc 1 3092 6 is_stmt 0 view .LVU1973
 6108 0576 1C4B     		ldr	r3, .L1204+56
3092:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6109              		.loc 1 3092 5 view .LVU1974
 6110 0578 1B68     		ldr	r3, [r3]
 6111 057a 002B     		cmp	r3, #0
 6112 057c 40F09881 		bne	.L567
3094:src/keys.c    **** 	}
 6113              		.loc 1 3094 4 is_stmt 1 view .LVU1975
 6114              		.loc 1 3220 1 is_stmt 0 view .LVU1976
 6115 0580 03B0     		add	sp, sp, #12
 6116              		.cfi_remember_state
 6117              		.cfi_def_cfa_offset 36
 6118              		@ sp needed
 6119 0582 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6120              		.cfi_restore 14
 6121              		.cfi_restore 11
 6122              		.cfi_restore 10
 6123              		.cfi_restore 9
 6124              		.cfi_restore 8
 6125              		.cfi_restore 7
 6126              		.cfi_restore 6
 6127              		.cfi_restore 5
 6128              		.cfi_restore 4
 6129              		.cfi_def_cfa_offset 0
3094:src/keys.c    **** 	}
 6130              		.loc 1 3094 4 view .LVU1977
 6131 0586 FFF7FEBF 		b	display
 6132              	.LVL521:
 6133              	.L1107:
 6134              		.cfi_restore_state
3077:src/keys.c    ****       else {
 6135              		.loc 1 3077 2 is_stmt 1 view .LVU1978
 6136 058a FFF7FEFF 		bl	xeq_sst_bst
ARM GAS  /tmp/ccczu93l.s 			page 196


 6137              	.LVL522:
 6138 058e 0E4E     		ldr	r6, .L1204+24
 6139 0590 85E5     		b	.L558
 6140              	.LVL523:
 6141              	.L860:
3077:src/keys.c    ****       else {
 6142              		.loc 1 3077 2 is_stmt 0 view .LVU1979
 6143 0592 3268     		ldr	r2, [r6]
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 6144              		.loc 1 2958 7 view .LVU1980
 6145 0594 0025     		movs	r5, #0
 6146 0596 8CE5     		b	.L565
 6147              	.LVL524:
 6148              	.L1109:
3010:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 6149              		.loc 1 3010 28 discriminator 1 view .LVU1981
 6150 0598 FFF7FEFF 		bl	shift_down
 6151              	.LVL525:
3010:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 6152              		.loc 1 3010 25 discriminator 1 view .LVU1982
 6153 059c 0028     		cmp	r0, #0
 6154 059e 3FF4D4AD 		beq	.L540
3012:src/keys.c    ****       }
 6155              		.loc 1 3012 2 is_stmt 1 view .LVU1983
3012:src/keys.c    ****       }
 6156              		.loc 1 3012 16 is_stmt 0 view .LVU1984
 6157 05a2 064B     		ldr	r3, .L1204+12
 6158 05a4 0022     		movs	r2, #0
 6159 05a6 1A74     		strb	r2, [r3, #16]
 6160 05a8 CFE5     		b	.L540
 6161              	.L1108:
3012:src/keys.c    ****       }
 6162              		.loc 1 3012 16 view .LVU1985
 6163 05aa 074E     		ldr	r6, .L1204+24
 6164 05ac 77E5     		b	.L558
 6165              	.L1205:
 6166 05ae 00BF     		.align	2
 6167              	.L1204:
 6168 05b0 00000000 		.word	main_ram
 6169 05b4 00000000 		.word	.LANCHOR18
 6170 05b8 00000000 		.word	.LANCHOR22
 6171 05bc 00000000 		.word	StateWhileOn
 6172 05c0 00000000 		.word	GoFast
 6173 05c4 00000000 		.word	JustDisplayed
 6174 05c8 00000000 		.word	Running
 6175 05cc 00000000 		.word	ShowRPN
 6176 05d0 00000000 		.word	OpCode
 6177 05d4 00000000 		.word	nd_opcode
 6178 05d8 00000000 		.word	DispMsg
 6179 05dc 0C000000 		.word	.LC2
 6180 05e0 00000000 		.word	OpCodeDisplayPending
 6181 05e4 00000000 		.word	NonProgrammable
 6182 05e8 00000000 		.word	WasDataEntry
 6183              	.L543:
3000:src/keys.c    **** 	  /*
 6184              		.loc 1 3000 10 is_stmt 1 view .LVU1986
3000:src/keys.c    **** 	  /*
ARM GAS  /tmp/ccczu93l.s 			page 197


 6185              		.loc 1 3000 14 is_stmt 0 view .LVU1987
 6186 05ec FFF7FEFF 		bl	keyticks
 6187              	.LVL526:
3000:src/keys.c    **** 	  /*
 6188              		.loc 1 3000 13 view .LVU1988
 6189 05f0 0C28     		cmp	r0, #12
 6190 05f2 7FF7A5AD 		ble	.L542
3004:src/keys.c    **** 	  message("NULL", CNULL);
 6191              		.loc 1 3004 4 is_stmt 1 view .LVU1989
3005:src/keys.c    **** 	  // Force display update on key-up
 6192              		.loc 1 3005 4 is_stmt 0 view .LVU1990
 6193 05f6 B448     		ldr	r0, .L1206
3004:src/keys.c    **** 	  message("NULL", CNULL);
 6194              		.loc 1 3004 11 view .LVU1991
 6195 05f8 2E60     		str	r6, [r5]
3005:src/keys.c    **** 	  // Force display update on key-up
 6196              		.loc 1 3005 4 is_stmt 1 view .LVU1992
 6197 05fa 3146     		mov	r1, r6
 6198 05fc FFF7FEFF 		bl	message
 6199              	.LVL527:
3007:src/keys.c    **** 	}
 6200              		.loc 1 3007 4 view .LVU1993
3007:src/keys.c    **** 	}
 6201              		.loc 1 3007 21 is_stmt 0 view .LVU1994
 6202 0600 B24B     		ldr	r3, .L1206+4
 6203 0602 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 6204 0604 66F34512 		bfi	r2, r6, #5, #1
 6205 0608 DA75     		strb	r2, [r3, #23]
 6206 060a 99E5     		b	.L542
 6207              	.LVL528:
 6208              	.L859:
3179:src/keys.c    **** 	NonProgrammable = 0;
 6209              		.loc 1 3179 11 view .LVU1995
 6210 060c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6211 0610 AF4A     		ldr	r2, .L1206+8
3179:src/keys.c    **** 	NonProgrammable = 0;
 6212              		.loc 1 3179 10 view .LVU1996
 6213 0612 5B06     		lsls	r3, r3, #25
 6214 0614 5846     		mov	r0, fp
 6215              	.LVL529:
3179:src/keys.c    **** 	NonProgrammable = 0;
 6216              		.loc 1 3179 7 is_stmt 1 view .LVU1997
3179:src/keys.c    **** 	NonProgrammable = 0;
 6217              		.loc 1 3179 10 is_stmt 0 view .LVU1998
 6218 0616 41F16D82 		bpl	.L1090
 6219              	.L875:
 6220              	.LVL530:
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6221              		.loc 1 3180 2 is_stmt 1 view .LVU1999
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6222              		.loc 1 3180 18 is_stmt 0 view .LVU2000
 6223 061a 0023     		movs	r3, #0
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6224              		.loc 1 3181 5 view .LVU2001
 6225 061c 1428     		cmp	r0, #20
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6226              		.loc 1 3180 18 view .LVU2002
ARM GAS  /tmp/ccczu93l.s 			page 198


 6227 061e 1360     		str	r3, [r2]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6228              		.loc 1 3181 2 is_stmt 1 view .LVU2003
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6229              		.loc 1 3181 5 is_stmt 0 view .LVU2004
 6230 0620 24D8     		bhi	.L872
3182:src/keys.c    **** 	    // Data entry key
 6231              		.loc 1 3182 4 is_stmt 1 view .LVU2005
3182:src/keys.c    **** 	    // Data entry key
 6232              		.loc 1 3182 7 is_stmt 0 view .LVU2006
 6233 0622 BBF1000F 		cmp	fp, #0
 6234 0626 40F0CF80 		bne	.L874
3182:src/keys.c    **** 	    // Data entry key
 6235              		.loc 1 3182 38 discriminator 1 view .LVU2007
 6236 062a FFF7FEFF 		bl	is_bad_cmdline
 6237              	.LVL531:
3182:src/keys.c    **** 	    // Data entry key
 6238              		.loc 1 3182 34 discriminator 1 view .LVU2008
 6239 062e 0028     		cmp	r0, #0
 6240 0630 00F04781 		beq	.L938
 6241 0634 3268     		ldr	r2, [r6]
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 6242              		.loc 1 2958 7 view .LVU2009
 6243 0636 5D46     		mov	r5, fp
 6244 0638 3BE5     		b	.L565
 6245              	.L868:
 6246              	.LBB1298:
3158:src/keys.c    **** 	if (p > Alpha)
 6247              		.loc 1 3158 2 is_stmt 1 view .LVU2010
3158:src/keys.c    **** 	if (p > Alpha)
 6248              		.loc 1 3158 22 is_stmt 0 view .LVU2011
 6249 063a A64C     		ldr	r4, .L1206+12
 6250 063c 2068     		ldr	r0, [r4]
3158:src/keys.c    **** 	if (p > Alpha)
 6251              		.loc 1 3158 12 view .LVU2012
 6252 063e 0021     		movs	r1, #0
 6253 0640 00F5F660 		add	r0, r0, #1968
 6254 0644 FFF7FEFF 		bl	find_char
 6255              	.LVL532:
3159:src/keys.c    **** 	  *--p = '\0';
 6256              		.loc 1 3159 8 view .LVU2013
 6257 0648 2368     		ldr	r3, [r4]
 6258              	.LVL533:
3159:src/keys.c    **** 	  *--p = '\0';
 6259              		.loc 1 3159 2 is_stmt 1 view .LVU2014
3159:src/keys.c    **** 	  *--p = '\0';
 6260              		.loc 1 3159 8 is_stmt 0 view .LVU2015
 6261 064a 03F5F663 		add	r3, r3, #1968
3159:src/keys.c    **** 	  *--p = '\0';
 6262              		.loc 1 3159 5 view .LVU2016
 6263 064e 9842     		cmp	r0, r3
 6264 0650 00F2AC81 		bhi	.L869
 6265 0654 3268     		ldr	r2, [r6]
 6266              	.LBE1298:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 6267              		.loc 1 2958 7 view .LVU2017
 6268 0656 0025     		movs	r5, #0
ARM GAS  /tmp/ccczu93l.s 			page 199


 6269              	.LBB1299:
3159:src/keys.c    **** 	  *--p = '\0';
 6270              		.loc 1 3159 5 view .LVU2018
 6271 0658 4FF0300B 		mov	fp, #48
 6272 065c 29E5     		b	.L565
 6273              	.LVL534:
 6274              	.L1139:
3159:src/keys.c    **** 	  *--p = '\0';
 6275              		.loc 1 3159 5 view .LVU2019
 6276              	.LBE1299:
3179:src/keys.c    **** 	NonProgrammable = 0;
 6277              		.loc 1 3179 7 is_stmt 1 view .LVU2020
3179:src/keys.c    **** 	NonProgrammable = 0;
 6278              		.loc 1 3179 11 is_stmt 0 view .LVU2021
 6279 065e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3179:src/keys.c    **** 	NonProgrammable = 0;
 6280              		.loc 1 3179 10 view .LVU2022
 6281 0662 5A06     		lsls	r2, r3, #25
 6282 0664 7FF55DAF 		bpl	.L888
 6283              	.LVL535:
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6284              		.loc 1 3180 2 is_stmt 1 view .LVU2023
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6285              		.loc 1 3180 18 is_stmt 0 view .LVU2024
 6286 0668 994B     		ldr	r3, .L1206+8
 6287 066a 1D60     		str	r5, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6288              		.loc 1 3181 2 is_stmt 1 view .LVU2025
 6289              	.L872:
3194:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6290              		.loc 1 3194 4 view .LVU2026
3194:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6291              		.loc 1 3194 11 is_stmt 0 view .LVU2027
 6292 066c 9A4A     		ldr	r2, .L1206+16
3195:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6293              		.loc 1 3195 25 view .LVU2028
 6294 066e 9B4B     		ldr	r3, .L1206+20
3194:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6295              		.loc 1 3194 11 view .LVU2029
 6296 0670 1060     		str	r0, [r2]
3195:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6297              		.loc 1 3195 4 is_stmt 1 view .LVU2030
3195:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6298              		.loc 1 3195 25 is_stmt 0 view .LVU2031
 6299 0672 0122     		movs	r2, #1
 6300 0674 9A4C     		ldr	r4, .L1206+24
 6301 0676 1A60     		str	r2, [r3]
3196:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 6302              		.loc 1 3196 4 is_stmt 1 view .LVU2032
 6303 0678 FFF7FEFF 		bl	finish_RPN
 6304              	.LVL536:
3197:src/keys.c    **** 	}
 6305              		.loc 1 3197 4 view .LVU2033
 6306 067c 40E5     		b	.L878
 6307              	.LVL537:
 6308              	.L1136:
 6309              	.LBB1300:
ARM GAS  /tmp/ccczu93l.s 			page 200


 6310              	.LBB1231:
 6311              	.LBB697:
 6312              	.LBB682:
 731:src/keys.c    **** 	  case K00:
 6313              		.loc 1 731 4 view .LVU2034
 6314 067e 122C     		cmp	r4, #18
 6315 0680 0BD8     		bhi	.L831
 6316 0682 DFE804F0 		tbb	[pc, r4]
 6317              	.L833:
 6318 0686 BE       		.byte	(.L836-.L833)/2
 6319 0687 B2       		.byte	(.L835-.L833)/2
 6320 0688 0A       		.byte	(.L831-.L833)/2
 6321 0689 C9       		.byte	(.L834-.L833)/2
 6322 068a 0A       		.byte	(.L831-.L833)/2
 6323 068b 0A       		.byte	(.L831-.L833)/2
 6324 068c 0A       		.byte	(.L831-.L833)/2
 6325 068d 0A       		.byte	(.L831-.L833)/2
 6326 068e 0A       		.byte	(.L831-.L833)/2
 6327 068f 0A       		.byte	(.L831-.L833)/2
 6328 0690 0A       		.byte	(.L831-.L833)/2
 6329 0691 0A       		.byte	(.L831-.L833)/2
 6330 0692 0A       		.byte	(.L831-.L833)/2
 6331 0693 0A       		.byte	(.L831-.L833)/2
 6332 0694 0A       		.byte	(.L831-.L833)/2
 6333 0695 0A       		.byte	(.L831-.L833)/2
 6334 0696 0A       		.byte	(.L831-.L833)/2
 6335 0697 0A       		.byte	(.L831-.L833)/2
 6336 0698 91       		.byte	(.L832-.L833)/2
 6337 0699 00       		.p2align 1
 6338              	.L831:
 761:src/keys.c    **** 	  }
 6339              		.loc 1 761 12 view .LVU2035
 766:src/keys.c    **** #ifdef DM42
 6340              		.loc 1 766 2 view .LVU2036
 6341 069a 033C     		subs	r4, r4, #3
 6342 069c 2A2C     		cmp	r4, #42
 6343 069e 3FF6CBAE 		bhi	.L595
 6344 06a2 01A1     		adr	r1, .L843
 6345 06a4 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 6346              		.p2align 2
 6347              	.L843:
 6348 06a8 89070000 		.word	.L846+1
 6349 06ac 39040000 		.word	.L595+1
 6350 06b0 39040000 		.word	.L595+1
 6351 06b4 6B070000 		.word	.L841+1
 6352 06b8 6B070000 		.word	.L841+1
 6353 06bc 39040000 		.word	.L595+1
 6354 06c0 39040000 		.word	.L595+1
 6355 06c4 39040000 		.word	.L595+1
 6356 06c8 39040000 		.word	.L595+1
 6357 06cc 39040000 		.word	.L595+1
 6358 06d0 39040000 		.word	.L595+1
 6359 06d4 39040000 		.word	.L595+1
 6360 06d8 39040000 		.word	.L595+1
 6361 06dc 55070000 		.word	.L845+1
 6362 06e0 39040000 		.word	.L595+1
 6363 06e4 6B070000 		.word	.L841+1
ARM GAS  /tmp/ccczu93l.s 			page 201


 6364 06e8 39040000 		.word	.L595+1
 6365 06ec 39040000 		.word	.L595+1
 6366 06f0 39040000 		.word	.L595+1
 6367 06f4 39040000 		.word	.L595+1
 6368 06f8 39040000 		.word	.L595+1
 6369 06fc 39040000 		.word	.L595+1
 6370 0700 39040000 		.word	.L595+1
 6371 0704 39040000 		.word	.L595+1
 6372 0708 39040000 		.word	.L595+1
 6373 070c 39040000 		.word	.L595+1
 6374 0710 39040000 		.word	.L595+1
 6375 0714 39040000 		.word	.L595+1
 6376 0718 39040000 		.word	.L595+1
 6377 071c 39040000 		.word	.L595+1
 6378 0720 39040000 		.word	.L595+1
 6379 0724 39040000 		.word	.L595+1
 6380 0728 39040000 		.word	.L595+1
 6381 072c 39040000 		.word	.L595+1
 6382 0730 39040000 		.word	.L595+1
 6383 0734 39040000 		.word	.L595+1
 6384 0738 39040000 		.word	.L595+1
 6385 073c 39040000 		.word	.L595+1
 6386 0740 39040000 		.word	.L595+1
 6387 0744 39040000 		.word	.L595+1
 6388 0748 39040000 		.word	.L595+1
 6389 074c 95070000 		.word	.L844+1
 6390 0750 3B080000 		.word	.L842+1
 6391              		.p2align 1
 6392              	.L845:
 823:src/keys.c    **** 			return STATE_UNFINISHED;
 6393              		.loc 1 823 3 view .LVU2037
 823:src/keys.c    **** 			return STATE_UNFINISHED;
 6394              		.loc 1 823 6 is_stmt 0 view .LVU2038
 6395 0754 9906     		lsls	r1, r3, #26
 6396 0756 70D4     		bmi	.L842
 825:src/keys.c    **** 			return op;
 6397              		.loc 1 825 3 is_stmt 1 view .LVU2039
 825:src/keys.c    **** 			return op;
 6398              		.loc 1 825 6 is_stmt 0 view .LVU2040
 6399 0758 5306     		lsls	r3, r2, #25
 6400 075a 72D4     		bmi	.L851
 6401              	.LVL538:
 6402              	.L867:
 825:src/keys.c    **** 			return op;
 6403              		.loc 1 825 6 view .LVU2041
 6404              	.LBE682:
 6405              	.LBE697:
 6406              	.LBE1231:
 6407              	.LBE1300:
3156:src/keys.c    ****       else if (State2.alphas) {
 6408              		.loc 1 3156 2 is_stmt 1 view .LVU2042
 6409 075c FFF7FEFF 		bl	delprog
 6410              	.LVL539:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 6411              		.loc 1 2958 7 is_stmt 0 view .LVU2043
 6412 0760 0025     		movs	r5, #0
 6413 0762 3268     		ldr	r2, [r6]
ARM GAS  /tmp/ccczu93l.s 			page 202


 6414 0764 4FF0300B 		mov	fp, #48
 6415 0768 A3E4     		b	.L565
 6416              	.LVL540:
 6417              	.L841:
 6418              	.LBB1301:
 6419              	.LBB1232:
 6420              	.LBB698:
 6421              	.LBB683:
 832:src/keys.c    **** 		break;
 6422              		.loc 1 832 3 is_stmt 1 view .LVU2044
 6423              	.LBB680:
 6424              	.LBI680:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 6425              		.loc 1 503 13 view .LVU2045
 6426              	.LBB681:
 504:src/keys.c    **** 		return;
 6427              		.loc 1 504 2 view .LVU2046
 504:src/keys.c    **** 		return;
 6428              		.loc 1 504 6 is_stmt 0 view .LVU2047
 6429 076a FFF7FEFF 		bl	is_bad_cmdline
 6430              	.LVL541:
 504:src/keys.c    **** 		return;
 6431              		.loc 1 504 5 view .LVU2048
 6432 076e 0446     		mov	r4, r0
 6433 0770 0028     		cmp	r0, #0
 6434 0772 41F07C83 		bne	.L1140
 6435 0776 5FFA8AF0 		uxtb	r0, r10
 6436 077a FFF7FEFF 		bl	init_arg.part.0
 6437              	.LVL542:
 6438              	.LBE681:
 6439              	.LBE680:
 6440              	.LBE683:
 6441              	.LBE698:
 6442              	.LBE1232:
 6443              	.LBE1301:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 6444              		.loc 1 2958 7 view .LVU2049
 6445 077e 2546     		mov	r5, r4
 6446 0780 3268     		ldr	r2, [r6]
 6447              	.LBB1302:
 6448              	.LBB1233:
 6449              	.LBB699:
 6450              	.LBB684:
 838:src/keys.c    **** }
 6451              		.loc 1 838 9 view .LVU2050
 6452 0782 4FF0330B 		mov	fp, #51
 6453 0786 94E4     		b	.L565
 6454              	.LVL543:
 6455              	.L846:
 773:src/keys.c    **** #else
 6456              		.loc 1 773 3 is_stmt 1 view .LVU2051
 773:src/keys.c    **** #else
 6457              		.loc 1 773 10 is_stmt 0 view .LVU2052
 6458 0788 5146     		mov	r1, r10
 6459 078a 0220     		movs	r0, #2
 6460 078c FFF7FEFF 		bl	check_f_key
 6461              	.LVL544:
ARM GAS  /tmp/ccczu93l.s 			page 203


 6462 0790 8346     		mov	fp, r0
 6463 0792 51E6     		b	.L595
 6464              	.L844:
 797:src/keys.c    **** 			return STATE_UNFINISHED;
 6465              		.loc 1 797 3 is_stmt 1 view .LVU2053
 797:src/keys.c    **** 			return STATE_UNFINISHED;
 6466              		.loc 1 797 7 is_stmt 0 view .LVU2054
 6467 0794 FFF7FEFF 		bl	is_bad_cmdline
 6468              	.LVL545:
 797:src/keys.c    **** 			return STATE_UNFINISHED;
 6469              		.loc 1 797 6 view .LVU2055
 6470 0798 0446     		mov	r4, r0
 6471 079a 0028     		cmp	r0, #0
 6472 079c 01F06B81 		beq	.L849
 6473 07a0 3268     		ldr	r2, [r6]
 798:src/keys.c    **** 		process_cmdline_set_lift();
 6474              		.loc 1 798 11 view .LVU2056
 6475 07a2 4FF0330B 		mov	fp, #51
 6476 07a6 84E4     		b	.L565
 6477              	.L832:
 757:src/keys.c    **** 	    if (intltr(15)) {
 6478              		.loc 1 757 6 is_stmt 1 view .LVU2057
 6479              	.LVL546:
 758:src/keys.c    **** 	      return op_int;
 6480              		.loc 1 758 6 view .LVU2058
 758:src/keys.c    **** 	      return op_int;
 6481              		.loc 1 758 10 is_stmt 0 view .LVU2059
 6482 07a8 0F20     		movs	r0, #15
 6483 07aa FFF7FEFF 		bl	intltr
 6484              	.LVL547:
 758:src/keys.c    **** 	      return op_int;
 6485              		.loc 1 758 9 view .LVU2060
 6486 07ae 0028     		cmp	r0, #0
 6487 07b0 DBD0     		beq	.L841
 6488              	.LVL548:
 758:src/keys.c    **** 	      return op_int;
 6489              		.loc 1 758 9 view .LVU2061
 6490              	.LBE684:
 6491              	.LBE699:
 6492              	.LBE1233:
 6493              	.LBE1302:
3179:src/keys.c    **** 	NonProgrammable = 0;
 6494              		.loc 1 3179 7 is_stmt 1 view .LVU2062
3179:src/keys.c    **** 	NonProgrammable = 0;
 6495              		.loc 1 3179 11 is_stmt 0 view .LVU2063
 6496 07b2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3179:src/keys.c    **** 	NonProgrammable = 0;
 6497              		.loc 1 3179 10 view .LVU2064
 6498 07b6 5C06     		lsls	r4, r3, #25
 6499 07b8 41F1D581 		bpl	.L934
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6500              		.loc 1 3180 2 is_stmt 1 view .LVU2065
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6501              		.loc 1 3180 18 is_stmt 0 view .LVU2066
 6502 07bc 444B     		ldr	r3, .L1206+8
 6503 07be 0022     		movs	r2, #0
 6504              	.LBB1303:
ARM GAS  /tmp/ccczu93l.s 			page 204


 6505              	.LBB1234:
 6506              	.LBB700:
 6507              	.LBB685:
 759:src/keys.c    **** 	    }
 6508              		.loc 1 759 15 view .LVU2067
 6509 07c0 4FF0140B 		mov	fp, #20
 6510              	.LBE685:
 6511              	.LBE700:
 6512              	.LBE1234:
 6513              	.LBE1303:
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6514              		.loc 1 3180 18 view .LVU2068
 6515 07c4 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6516              		.loc 1 3181 2 is_stmt 1 view .LVU2069
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6517              		.loc 1 3181 32 is_stmt 0 view .LVU2070
 6518 07c6 5846     		mov	r0, fp
 6519              	.LVL549:
 6520              	.L874:
3185:src/keys.c    **** #endif
 6521              		.loc 1 3185 6 is_stmt 1 view .LVU2071
3187:src/keys.c    **** 	    xeq(c);
 6522              		.loc 1 3187 37 is_stmt 0 view .LVU2072
 6523 07c8 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3185:src/keys.c    **** #endif
 6524              		.loc 1 3185 19 view .LVU2073
 6525 07cc 0123     		movs	r3, #1
3187:src/keys.c    **** 	    xeq(c);
 6526              		.loc 1 3187 37 view .LVU2074
 6527 07ce B5FA85F5 		clz	r5, r5
3185:src/keys.c    **** #endif
 6528              		.loc 1 3185 19 view .LVU2075
 6529 07d2 C9F80030 		str	r3, [r9]
3187:src/keys.c    **** 	    xeq(c);
 6530              		.loc 1 3187 6 is_stmt 1 view .LVU2076
3188:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6531              		.loc 1 3188 6 is_stmt 0 view .LVU2077
 6532 07d6 FFF7FEFF 		bl	xeq
 6533              	.LVL550:
3189:src/keys.c    **** 	  }
 6534              		.loc 1 3189 38 view .LVU2078
 6535 07da 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 6536 07de 3268     		ldr	r2, [r6]
3187:src/keys.c    **** 	    xeq(c);
 6537              		.loc 1 3187 37 view .LVU2079
 6538 07e0 6D09     		lsrs	r5, r5, #5
 6539              	.LVL551:
3188:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6540              		.loc 1 3188 6 is_stmt 1 view .LVU2080
3189:src/keys.c    **** 	  }
 6541              		.loc 1 3189 6 view .LVU2081
3189:src/keys.c    **** 	  }
 6542              		.loc 1 3189 20 is_stmt 0 view .LVU2082
 6543 07e2 0028     		cmp	r0, #0
 6544 07e4 08BF     		it	eq
 6545 07e6 0125     		moveq	r5, #1
ARM GAS  /tmp/ccczu93l.s 			page 205


 6546              	.LVL552:
3189:src/keys.c    **** 	  }
 6547              		.loc 1 3189 20 view .LVU2083
 6548 07e8 63E4     		b	.L565
 6549              	.LVL553:
 6550              	.L835:
 6551              	.LBB1304:
 6552              	.LBB1235:
 6553              	.LBB701:
 6554              	.LBB686:
 741:src/keys.c    **** 	    if (intltr(11)) {
 6555              		.loc 1 741 6 is_stmt 1 view .LVU2084
 742:src/keys.c    **** 	      return op;
 6556              		.loc 1 742 6 view .LVU2085
 742:src/keys.c    **** 	      return op;
 6557              		.loc 1 742 10 is_stmt 0 view .LVU2086
 6558 07ea 0B20     		movs	r0, #11
 6559 07ec FFF7FEFF 		bl	intltr
 6560              	.LVL554:
 742:src/keys.c    **** 	      return op;
 6561              		.loc 1 742 9 view .LVU2087
 6562 07f0 0028     		cmp	r0, #0
 6563 07f2 41F03083 		bne	.L838
 746:src/keys.c    **** 	    }
 6564              		.loc 1 746 8 is_stmt 1 view .LVU2088
 746:src/keys.c    **** 	    }
 6565              		.loc 1 746 15 is_stmt 0 view .LVU2089
 6566 07f6 1021     		movs	r1, #16
 6567 07f8 0120     		movs	r0, #1
 6568 07fa FFF7FEFF 		bl	check_f_key
 6569              	.LVL555:
 6570 07fe 8346     		mov	fp, r0
 6571 0800 1AE6     		b	.L595
 6572              	.LVL556:
 6573              	.L836:
 733:src/keys.c    **** 	    if (intltr(10)) {
 6574              		.loc 1 733 6 is_stmt 1 view .LVU2090
 734:src/keys.c    **** 	      return op;
 6575              		.loc 1 734 6 view .LVU2091
 734:src/keys.c    **** 	      return op;
 6576              		.loc 1 734 10 is_stmt 0 view .LVU2092
 6577 0802 0A20     		movs	r0, #10
 6578 0804 FFF7FEFF 		bl	intltr
 6579              	.LVL557:
 734:src/keys.c    **** 	      return op;
 6580              		.loc 1 734 9 view .LVU2093
 6581 0808 0028     		cmp	r0, #0
 6582 080a 41F04981 		bne	.L837
 738:src/keys.c    **** 	    }
 6583              		.loc 1 738 8 is_stmt 1 view .LVU2094
 738:src/keys.c    **** 	    }
 6584              		.loc 1 738 15 is_stmt 0 view .LVU2095
 6585 080e 0F21     		movs	r1, #15
 6586 0810 FFF7FEFF 		bl	check_f_key
 6587              	.LVL558:
 6588 0814 8346     		mov	fp, r0
 6589 0816 0FE6     		b	.L595
ARM GAS  /tmp/ccczu93l.s 			page 206


 6590              	.LVL559:
 6591              	.L834:
 749:src/keys.c    **** 	    if (intltr(12)) {
 6592              		.loc 1 749 6 is_stmt 1 view .LVU2096
 750:src/keys.c    **** 	      return op_int;
 6593              		.loc 1 750 6 view .LVU2097
 750:src/keys.c    **** 	      return op_int;
 6594              		.loc 1 750 10 is_stmt 0 view .LVU2098
 6595 0818 0C20     		movs	r0, #12
 6596 081a FFF7FEFF 		bl	intltr
 6597              	.LVL560:
 750:src/keys.c    **** 	      return op_int;
 6598              		.loc 1 750 9 view .LVU2099
 6599 081e 0028     		cmp	r0, #0
 6600 0820 B2D0     		beq	.L846
 6601              	.LVL561:
 750:src/keys.c    **** 	      return op_int;
 6602              		.loc 1 750 9 view .LVU2100
 6603              	.LBE686:
 6604              	.LBE701:
 6605              	.LBE1235:
 6606              	.LBE1304:
3179:src/keys.c    **** 	NonProgrammable = 0;
 6607              		.loc 1 3179 7 is_stmt 1 view .LVU2101
3179:src/keys.c    **** 	NonProgrammable = 0;
 6608              		.loc 1 3179 11 is_stmt 0 view .LVU2102
 6609 0822 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3179:src/keys.c    **** 	NonProgrammable = 0;
 6610              		.loc 1 3179 10 view .LVU2103
 6611 0826 5D06     		lsls	r5, r3, #25
 6612 0828 41F12983 		bpl	.L933
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6613              		.loc 1 3180 2 is_stmt 1 view .LVU2104
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6614              		.loc 1 3180 18 is_stmt 0 view .LVU2105
 6615 082c 284B     		ldr	r3, .L1206+8
 6616 082e 0022     		movs	r2, #0
 6617              	.LBB1305:
 6618              	.LBB1236:
 6619              	.LBB702:
 6620              	.LBB687:
 751:src/keys.c    **** 	    }
 6621              		.loc 1 751 15 view .LVU2106
 6622 0830 4FF0110B 		mov	fp, #17
 6623              	.LBE687:
 6624              	.LBE702:
 6625              	.LBE1236:
 6626              	.LBE1305:
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6627              		.loc 1 3180 18 view .LVU2107
 6628 0834 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6629              		.loc 1 3181 2 is_stmt 1 view .LVU2108
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6630              		.loc 1 3181 32 is_stmt 0 view .LVU2109
 6631 0836 5846     		mov	r0, fp
 6632 0838 C6E7     		b	.L874
ARM GAS  /tmp/ccczu93l.s 			page 207


 6633              	.LVL562:
 6634              	.L842:
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6635              		.loc 1 3181 32 view .LVU2110
 6636 083a 3268     		ldr	r2, [r6]
 6637              	.LBB1306:
 6638              	.LBB1237:
 6639              	.LBB703:
 6640              	.LBB688:
 838:src/keys.c    **** }
 6641              		.loc 1 838 9 view .LVU2111
 6642 083c 4FF0330B 		mov	fp, #51
 6643 0840 37E4     		b	.L565
 6644              	.L851:
 6645              	.LVL563:
 838:src/keys.c    **** }
 6646              		.loc 1 838 9 view .LVU2112
 6647              	.LBE688:
 6648              	.LBE703:
 6649              	.LBE1237:
 6650              	.LBE1306:
3143:src/keys.c    ****     case STATE_SST:
 6651              		.loc 1 3143 5 is_stmt 1 view .LVU2113
 6652 0842 AAF12B03 		sub	r3, r10, #43
 6653 0846 082B     		cmp	r3, #8
 6654 0848 16D8     		bhi	.L889
 6655 084a 01A2     		adr	r2, .L891
 6656 084c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6657              		.p2align 2
 6658              	.L891:
 6659 0850 77040000 		.word	.L866+1
 6660 0854 77040000 		.word	.L866+1
 6661 0858 79080000 		.word	.L889+1
 6662 085c E5040000 		.word	.L775+1
 6663 0860 D3040000 		.word	.L771+1
 6664 0864 FD040000 		.word	.L768+1
 6665 0868 8F030000 		.word	.L575+1
 6666 086c 75080000 		.word	.L890+1
 6667 0870 75080000 		.word	.L890+1
 6668              		.p2align 1
 6669              	.L890:
 6670 0874 3268     		ldr	r2, [r6]
 6671 0876 1CE4     		b	.L565
 6672              	.L889:
 6673 0878 154A     		ldr	r2, .L1206+8
 6674 087a 5046     		mov	r0, r10
 6675 087c CDE6     		b	.L875
 6676              	.LVL564:
 6677              	.L870:
3171:src/keys.c    ****       break;
 6678              		.loc 1 3171 2 view .LVU2114
 6679 087e 5846     		mov	r0, fp
 6680 0880 FFF7FEFF 		bl	set_window
 6681              	.LVL565:
 6682 0884 3268     		ldr	r2, [r6]
 6683 0886 14E4     		b	.L565
 6684              	.LVL566:
ARM GAS  /tmp/ccczu93l.s 			page 208


 6685              	.L1114:
 6686              	.LBB1307:
 6687              	.LBB1238:
2825:src/keys.c    **** 		CmdLineLength = 0;
 6688              		.loc 1 2825 26 is_stmt 0 view .LVU2115
 6689 0888 FFF7FEFF 		bl	keyticks
 6690              	.LVL567:
2825:src/keys.c    **** 		CmdLineLength = 0;
 6691              		.loc 1 2825 23 view .LVU2116
 6692 088c 1E28     		cmp	r0, #30
2826:src/keys.c    **** 	/*
 6693              		.loc 1 2826 3 is_stmt 1 view .LVU2117
2826:src/keys.c    **** 	/*
 6694              		.loc 1 2826 17 is_stmt 0 view .LVU2118
 6695 088e C4BF     		itt	gt
 6696 0890 0023     		movgt	r3, #0
 6697 0892 88F81C30 		strbgt	r3, [r8, #28]
 6698 0896 8CE4     		b	.L582
 6699              	.LVL568:
 6700              	.L544:
2826:src/keys.c    **** 	/*
 6701              		.loc 1 2826 17 view .LVU2119
 6702              	.LBE1238:
 6703              	.LBE1307:
2994:src/keys.c    **** 	    DispMsg = TraceBuffer;
 6704              		.loc 1 2994 6 is_stmt 1 view .LVU2120
 6705 0898 124E     		ldr	r6, .L1206+28
 6706 089a 3146     		mov	r1, r6
 6707 089c FFF7FEFF 		bl	prt
 6708              	.LVL569:
 6709 08a0 2A46     		mov	r2, r5
 6710 08a2 0146     		mov	r1, r0
 6711 08a4 3046     		mov	r0, r6
 6712 08a6 FFF7FEFF 		bl	scopy_char
 6713              	.LVL570:
2995:src/keys.c    **** 	  }
 6714              		.loc 1 2995 6 view .LVU2121
2995:src/keys.c    **** 	  }
 6715              		.loc 1 2995 14 is_stmt 0 view .LVU2122
 6716 08aa 0F4B     		ldr	r3, .L1206+32
 6717 08ac 1E60     		str	r6, [r3]
 6718 08ae 42E4     		b	.L545
 6719              	.LVL571:
 6720              	.L567:
3097:src/keys.c    **** 	}
 6721              		.loc 1 3097 4 is_stmt 1 view .LVU2123
 6722              		.loc 1 3220 1 is_stmt 0 view .LVU2124
 6723 08b0 03B0     		add	sp, sp, #12
 6724              		.cfi_remember_state
 6725              		.cfi_def_cfa_offset 36
 6726              		@ sp needed
 6727 08b2 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6728              		.cfi_restore 14
 6729              		.cfi_restore 11
 6730              		.cfi_restore 10
 6731              		.cfi_restore 9
 6732              		.cfi_restore 8
ARM GAS  /tmp/ccczu93l.s 			page 209


 6733              		.cfi_restore 7
 6734              		.cfi_restore 6
 6735              		.cfi_restore 5
 6736              		.cfi_restore 4
 6737              		.cfi_def_cfa_offset 0
3097:src/keys.c    **** 	}
 6738              		.loc 1 3097 4 view .LVU2125
 6739 08b6 FFF7FEBF 		b	finish_RPN
 6740              	.LVL572:
 6741              	.L1137:
 6742              		.cfi_restore_state
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6743              		.loc 1 3180 2 is_stmt 1 view .LVU2126
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6744              		.loc 1 3180 18 is_stmt 0 view .LVU2127
 6745 08ba 054B     		ldr	r3, .L1206+8
 6746 08bc 0022     		movs	r2, #0
 6747 08be 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6748              		.loc 1 3181 2 is_stmt 1 view .LVU2128
 6749 08c0 D4E6     		b	.L872
 6750              	.LVL573:
 6751              	.L938:
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6752              		.loc 1 3181 32 is_stmt 0 view .LVU2129
 6753 08c2 5846     		mov	r0, fp
 6754 08c4 80E7     		b	.L874
 6755              	.L1207:
 6756 08c6 00BF     		.align	2
 6757              	.L1206:
 6758 08c8 04000000 		.word	.LC1
 6759 08cc 00000000 		.word	StateWhileOn
 6760 08d0 00000000 		.word	NonProgrammable
 6761 08d4 00000000 		.word	main_ram
 6762 08d8 00000000 		.word	OpCode
 6763 08dc 00000000 		.word	OpCodeDisplayPending
 6764 08e0 00000000 		.word	JustDisplayed
 6765 08e4 00000000 		.word	TraceBuffer
 6766 08e8 00000000 		.word	DispMsg
 6767              	.LVL574:
 6768              	.L1115:
 6769              	.LBB1308:
 6770              	.LBB1239:
2832:src/keys.c    **** 
 6771              		.loc 1 2832 3 is_stmt 1 view .LVU2130
 6772              	.LBB704:
 6773              	.LBI704:
2441:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6774              		.loc 1 2441 12 view .LVU2131
 6775              	.LBB705:
2443:src/keys.c    **** #ifdef DM42
 6776              		.loc 1 2443 2 view .LVU2132
 6777 08ec E4B2     		uxtb	r4, r4
 6778              	.LVL575:
2443:src/keys.c    **** #ifdef DM42
 6779              		.loc 1 2443 2 is_stmt 0 view .LVU2133
 6780 08ee A4F10E03 		sub	r3, r4, #14
ARM GAS  /tmp/ccczu93l.s 			page 210


 6781 08f2 192B     		cmp	r3, #25
 6782 08f4 0ED8     		bhi	.L585
 6783 08f6 DFE803F0 		tbb	[pc, r3]
 6784              	.L587:
 6785 08fa 14       		.byte	(.L588-.L587)/2
 6786 08fb 0D       		.byte	(.L585-.L587)/2
 6787 08fc 14       		.byte	(.L588-.L587)/2
 6788 08fd 0D       		.byte	(.L585-.L587)/2
 6789 08fe 0D       		.byte	(.L585-.L587)/2
 6790 08ff 0D       		.byte	(.L585-.L587)/2
 6791 0900 0D       		.byte	(.L585-.L587)/2
 6792 0901 0D       		.byte	(.L585-.L587)/2
 6793 0902 0D       		.byte	(.L585-.L587)/2
 6794 0903 0D       		.byte	(.L585-.L587)/2
 6795 0904 0D       		.byte	(.L585-.L587)/2
 6796 0905 0D       		.byte	(.L585-.L587)/2
 6797 0906 0D       		.byte	(.L585-.L587)/2
 6798 0907 0D       		.byte	(.L585-.L587)/2
 6799 0908 0D       		.byte	(.L585-.L587)/2
 6800 0909 0D       		.byte	(.L585-.L587)/2
 6801 090a 0D       		.byte	(.L585-.L587)/2
 6802 090b 0D       		.byte	(.L585-.L587)/2
 6803 090c 22       		.byte	(.L586-.L587)/2
 6804 090d 0D       		.byte	(.L585-.L587)/2
 6805 090e 0D       		.byte	(.L585-.L587)/2
 6806 090f 0D       		.byte	(.L585-.L587)/2
 6807 0910 0D       		.byte	(.L585-.L587)/2
 6808 0911 0D       		.byte	(.L585-.L587)/2
 6809 0912 0D       		.byte	(.L585-.L587)/2
 6810 0913 22       		.byte	(.L586-.L587)/2
 6811              		.p2align 1
 6812              	.L585:
 6813 0914 3268     		ldr	r2, [r6]
 6814              	.LBE705:
 6815              	.LBE704:
2832:src/keys.c    **** 
 6816              		.loc 1 2832 10 view .LVU2134
 6817 0916 4FF0330B 		mov	fp, #51
 6818 091a FFF7CABB 		b	.L565
 6819              	.L589:
 6820              	.LBB708:
 6821              	.LBB706:
2452:src/keys.c    **** 	  }
 6822              		.loc 1 2452 26 is_stmt 1 view .LVU2135
 6823 091e FFF7FEFF 		bl	clpall
 6824              	.LVL576:
2452:src/keys.c    **** 	  }
 6825              		.loc 1 2452 36 view .LVU2136
 6826              	.L588:
2461:src/keys.c    **** 	  State2.digval = 0;
 6827              		.loc 1 2461 4 view .LVU2137
2461:src/keys.c    **** 	  State2.digval = 0;
 6828              		.loc 1 2461 19 is_stmt 0 view .LVU2138
 6829 0922 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6830 0926 3268     		ldr	r2, [r6]
 6831 0928 6FF30203 		bfc	r3, #0, #3
2462:src/keys.c    **** 	  break;
ARM GAS  /tmp/ccczu93l.s 			page 211


 6832              		.loc 1 2462 18 view .LVU2139
 6833 092c 0021     		movs	r1, #0
2461:src/keys.c    **** 	  State2.digval = 0;
 6834              		.loc 1 2461 19 view .LVU2140
 6835 092e 88F81430 		strb	r3, [r8, #20]
2462:src/keys.c    **** 	  break;
 6836              		.loc 1 2462 4 is_stmt 1 view .LVU2141
2462:src/keys.c    **** 	  break;
 6837              		.loc 1 2462 18 is_stmt 0 view .LVU2142
 6838 0932 A8F80810 		strh	r1, [r8, #8]	@ movhi
2463:src/keys.c    **** 	default:			// No state change
 6839              		.loc 1 2463 4 is_stmt 1 view .LVU2143
 6840              	.LBE706:
 6841              	.LBE708:
2832:src/keys.c    **** 
 6842              		.loc 1 2832 10 is_stmt 0 view .LVU2144
 6843 0936 4FF0330B 		mov	fp, #51
 6844              	.LBB709:
 6845              	.LBB707:
2463:src/keys.c    **** 	default:			// No state change
 6846              		.loc 1 2463 4 view .LVU2145
 6847 093a FFF7BABB 		b	.L565
 6848              	.L586:
2448:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6849              		.loc 1 2448 4 is_stmt 1 view .LVU2146
2448:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6850              		.loc 1 2448 18 is_stmt 0 view .LVU2147
 6851 093e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6852 0942 03F00703 		and	r3, r3, #7
 6853 0946 013B     		subs	r3, r3, #1
 6854 0948 032B     		cmp	r3, #3
 6855 094a EAD8     		bhi	.L588
 6856 094c 01A2     		adr	r2, .L590
 6857 094e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6858 0952 00BF     		.p2align 2
 6859              	.L590:
 6860 0954 71090000 		.word	.L593+1
 6861 0958 6B090000 		.word	.L592+1
 6862 095c 65090000 		.word	.L591+1
 6863 0960 1F090000 		.word	.L589+1
 6864              		.p2align 1
 6865              	.L591:
2451:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6866              		.loc 1 2451 26 is_stmt 1 view .LVU2148
 6867 0964 FFF7FEFF 		bl	clrprog
 6868              	.LVL577:
2451:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6869              		.loc 1 2451 37 view .LVU2149
2451:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6870              		.loc 1 2451 4 is_stmt 0 view .LVU2150
 6871 0968 DBE7     		b	.L588
 6872              	.L592:
2450:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6873              		.loc 1 2450 25 is_stmt 1 view .LVU2151
 6874 096a FFF7FEFF 		bl	reset
 6875              	.LVL578:
2450:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
ARM GAS  /tmp/ccczu93l.s 			page 212


 6876              		.loc 1 2450 34 view .LVU2152
2450:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6877              		.loc 1 2450 4 is_stmt 0 view .LVU2153
 6878 096e D8E7     		b	.L588
 6879              	.L593:
2449:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6880              		.loc 1 2449 25 is_stmt 1 view .LVU2154
 6881 0970 FFF7FEFF 		bl	clrall
 6882              	.LVL579:
2449:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6883              		.loc 1 2449 35 view .LVU2155
2449:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6884              		.loc 1 2449 4 is_stmt 0 view .LVU2156
 6885 0974 D5E7     		b	.L588
 6886              	.LVL580:
 6887              	.L1112:
2449:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6888              		.loc 1 2449 4 view .LVU2157
 6889              	.LBE707:
 6890              	.LBE709:
2806:src/keys.c    **** #else
 6891              		.loc 1 2806 47 view .LVU2158
 6892 0976 DFF8BC83 		ldr	r8, .L1208+28
2806:src/keys.c    **** #else
 6893              		.loc 1 2806 61 view .LVU2159
 6894 097a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** #else
 6895              		.loc 1 2806 47 view .LVU2160
 6896 097e 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
2806:src/keys.c    **** #else
 6897              		.loc 1 2806 61 view .LVU2161
 6898 0982 02F00402 		and	r2, r2, #4
2806:src/keys.c    **** #else
 6899              		.loc 1 2806 58 view .LVU2162
 6900 0986 1A43     		orrs	r2, r2, r3
 6901 0988 4AEA0202 		orr	r2, r10, r2
 6902 098c 12F0FF0F 		tst	r2, #255
 6903 0990 7FF40CAC 		bne	.L577
2811:src/keys.c    ****       return STATE_UNFINISHED;
 6904              		.loc 1 2811 7 is_stmt 1 view .LVU2163
 6905 0994 FFF7FEFF 		bl	soft_init_state
 6906              	.LVL581:
2812:src/keys.c    ****     }
 6907              		.loc 1 2812 7 view .LVU2164
2812:src/keys.c    ****     }
 6908              		.loc 1 2812 14 is_stmt 0 view .LVU2165
 6909 0998 4FF0330B 		mov	fp, #51
 6910 099c 3268     		ldr	r2, [r6]
 6911 099e FFF788BB 		b	.L565
 6912              	.L1116:
2835:src/keys.c    **** 
 6913              		.loc 1 2835 3 is_stmt 1 view .LVU2166
2835:src/keys.c    **** 
 6914              		.loc 1 2835 10 is_stmt 0 view .LVU2167
 6915 09a2 E0B2     		uxtb	r0, r4
 6916 09a4 FFF7FEFF 		bl	process_arg
 6917              	.LVL582:
ARM GAS  /tmp/ccczu93l.s 			page 213


 6918 09a8 8346     		mov	fp, r0
 6919 09aa 45E5     		b	.L595
 6920              	.LVL583:
 6921              	.L869:
2835:src/keys.c    **** 
 6922              		.loc 1 2835 10 view .LVU2168
 6923              	.LBE1239:
 6924              	.LBE1308:
 6925              	.LBB1309:
3160:src/keys.c    ****       }
 6926              		.loc 1 3160 4 is_stmt 1 view .LVU2169
3160:src/keys.c    ****       }
 6927              		.loc 1 3160 9 is_stmt 0 view .LVU2170
 6928 09ac 0025     		movs	r5, #0
 6929 09ae 00F8015C 		strb	r5, [r0, #-1]
 6930 09b2 3268     		ldr	r2, [r6]
 6931 09b4 4FF0300B 		mov	fp, #48
 6932 09b8 FFF77BBB 		b	.L565
 6933              	.LVL584:
 6934              	.L1119:
3160:src/keys.c    ****       }
 6935              		.loc 1 3160 9 view .LVU2171
 6936              	.LBE1309:
 6937              	.LBB1310:
 6938              	.LBB1240:
2844:src/keys.c    **** 
 6939              		.loc 1 2844 3 is_stmt 1 view .LVU2172
 6940              	.LBB710:
 6941              	.LBI710:
1907:src/keys.c    **** 	int r = State2.test;
 6942              		.loc 1 1907 12 view .LVU2173
 6943              	.LBB711:
1908:src/keys.c    **** 	int cmpx = State2.cmplx;
 6944              		.loc 1 1908 2 view .LVU2174
1909:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6945              		.loc 1 1909 2 view .LVU2175
 6946              	.LBB712:
 6947              	.LBB713:
 6948              	.LBB714:
 6949              	.LBB715:
 133:src/keys.c    **** }
 6950              		.loc 1 133 23 is_stmt 0 view .LVU2176
 6951 09bc D64A     		ldr	r2, .L1208
 6952              	.LBE715:
 6953              	.LBE714:
 223:src/keys.c    **** }
 6954              		.loc 1 223 28 view .LVU2177
 6955 09be DFF85CC3 		ldr	ip, .L1208+4
 6956              	.LBB719:
 6957              	.LBB716:
 133:src/keys.c    **** }
 6958              		.loc 1 133 23 view .LVU2178
 6959 09c2 E4B2     		uxtb	r4, r4
 6960              	.LVL585:
 133:src/keys.c    **** }
 6961              		.loc 1 133 23 view .LVU2179
 6962              	.LBE716:
ARM GAS  /tmp/ccczu93l.s 			page 214


 6963              	.LBE719:
 6964              	.LBE713:
 6965              	.LBE712:
1911:src/keys.c    **** 
 6966              		.loc 1 1911 44 view .LVU2180
 6967 09c4 11F0020F 		tst	r1, #2
 6968              	.LBB724:
 6969              	.LBB722:
 6970              	.LBB720:
 6971              	.LBB717:
 133:src/keys.c    **** }
 6972              		.loc 1 133 23 view .LVU2181
 6973 09c8 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 6974              	.LBE717:
 6975              	.LBE720:
 223:src/keys.c    **** }
 6976              		.loc 1 223 28 view .LVU2182
 6977 09ca 1CF802C0 		ldrb	ip, [ip, r2]	@ zero_extendqisi2
 6978              	.LBE722:
 6979              	.LBE724:
1909:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6980              		.loc 1 1909 19 view .LVU2183
 6981 09ce C1F3400E 		ubfx	lr, r1, #1, #1
 6982              	.LVL586:
1910:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 6983              		.loc 1 1910 2 is_stmt 1 view .LVU2184
 6984              	.LBB725:
 6985              	.LBI712:
 200:src/keys.c    **** {
 6986              		.loc 1 200 14 view .LVU2185
 6987              	.LBB723:
 202:src/keys.c    ****     // K00 - K05
 6988              		.loc 1 202 3 view .LVU2186
 223:src/keys.c    **** }
 6989              		.loc 1 223 3 view .LVU2187
 6990              	.LBB721:
 6991              	.LBI714:
 121:src/keys.c    **** {
 6992              		.loc 1 121 12 view .LVU2188
 6993              	.LBB718:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6994              		.loc 1 123 2 view .LVU2189
 133:src/keys.c    **** }
 6995              		.loc 1 133 2 view .LVU2190
 133:src/keys.c    **** }
 6996              		.loc 1 133 2 is_stmt 0 view .LVU2191
 6997              	.LBE718:
 6998              	.LBE721:
 6999              	.LBE723:
 7000              	.LBE725:
1910:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7001              		.loc 1 1910 15 view .LVU2192
 7002 09d2 2CF08002 		bic	r2, ip, #128
 7003              	.LVL587:
1911:src/keys.c    **** 
 7004              		.loc 1 1911 2 is_stmt 1 view .LVU2193
1911:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 215


 7005              		.loc 1 1911 44 is_stmt 0 view .LVU2194
 7006 09d6 00F0AA80 		beq	.L1141
 7007              	.LVL588:
1913:src/keys.c    **** 	State2.cmplx = 0;
 7008              		.loc 1 1913 2 is_stmt 1 view .LVU2195
1914:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7009              		.loc 1 1914 15 is_stmt 0 view .LVU2196
 7010 09da 60F34101 		bfi	r1, r0, #1, #1
1915:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7011              		.loc 1 1915 5 view .LVU2197
 7012 09de 642A     		cmp	r2, #100
1913:src/keys.c    **** 	State2.cmplx = 0;
 7013              		.loc 1 1913 14 view .LVU2198
 7014 09e0 4FF00700 		mov	r0, #7
1914:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7015              		.loc 1 1914 15 view .LVU2199
 7016 09e4 88F81510 		strb	r1, [r8, #21]
1913:src/keys.c    **** 	State2.cmplx = 0;
 7017              		.loc 1 1913 14 view .LVU2200
 7018 09e8 88F80F00 		strb	r0, [r8, #15]
1914:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7019              		.loc 1 1914 2 is_stmt 1 view .LVU2201
1915:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7020              		.loc 1 1915 2 view .LVU2202
1915:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7021              		.loc 1 1915 5 is_stmt 0 view .LVU2203
 7022 09ec 00F05A84 		beq	.L941
1911:src/keys.c    **** 
 7023              		.loc 1 1911 44 view .LVU2204
 7024 09f0 4FF0340A 		mov	r10, #52
 7025              	.LVL589:
 7026              	.L898:
1916:src/keys.c    **** 		// Lettered register
 7027              		.loc 1 1916 5 view .LVU2205
 7028 09f4 7F2A     		cmp	r2, #127
1911:src/keys.c    **** 
 7029              		.loc 1 1911 60 view .LVU2206
 7030 09f6 DA44     		add	r10, r10, fp
1916:src/keys.c    **** 		// Lettered register
 7031              		.loc 1 1916 2 is_stmt 1 view .LVU2207
1916:src/keys.c    **** 		// Lettered register
 7032              		.loc 1 1916 5 is_stmt 0 view .LVU2208
 7033 09f8 00F01481 		beq	.L627
 7034              	.LVL590:
1916:src/keys.c    **** 		// Lettered register
 7035              		.loc 1 1916 18 view .LVU2209
 7036 09fc 632A     		cmp	r2, #99
 7037 09fe 40F23A81 		bls	.L628
1916:src/keys.c    **** 		// Lettered register
 7038              		.loc 1 1916 37 view .LVU2210
 7039 0a02 6F2A     		cmp	r2, #111
 7040 0a04 00F20E81 		bhi	.L627
1918:src/keys.c    **** 			if (n == regI_idx)
 7041              		.loc 1 1918 3 is_stmt 1 view .LVU2211
1918:src/keys.c    **** 			if (n == regI_idx)
 7042              		.loc 1 1918 6 is_stmt 0 view .LVU2212
 7043 0a08 BEF1000F 		cmp	lr, #0
ARM GAS  /tmp/ccczu93l.s 			page 216


 7044 0a0c 00F02682 		beq	.L629
1918:src/keys.c    **** 			if (n == regI_idx)
 7045              		.loc 1 1918 12 view .LVU2213
 7046 0a10 1CF0010F 		tst	ip, #1
 7047 0a14 00F02282 		beq	.L629
1919:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7048              		.loc 1 1919 4 is_stmt 1 view .LVU2214
1919:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7049              		.loc 1 1919 7 is_stmt 0 view .LVU2215
 7050 0a18 6D2A     		cmp	r2, #109
 7051 0a1a 40F01081 		bne	.L630
1920:src/keys.c    **** 			// Disallow odd complex registers > A
 7052              		.loc 1 1920 5 is_stmt 1 view .LVU2216
1920:src/keys.c    **** 			// Disallow odd complex registers > A
 7053              		.loc 1 1920 30 is_stmt 0 view .LVU2217
 7054 0a1e 0BF1290B 		add	fp, fp, #41
 7055              	.LVL591:
1920:src/keys.c    **** 			// Disallow odd complex registers > A
 7056              		.loc 1 1920 30 view .LVU2218
 7057 0a22 09E5     		b	.L595
 7058              	.LVL592:
 7059              	.L1117:
1920:src/keys.c    **** 			// Disallow odd complex registers > A
 7060              		.loc 1 1920 30 view .LVU2219
 7061              	.LBE711:
 7062              	.LBE710:
2838:src/keys.c    **** 
 7063              		.loc 1 2838 3 is_stmt 1 view .LVU2220
 7064              	.LBB742:
 7065              	.LBI742:
1324:src/keys.c    **** 	int pc = -1;
 7066              		.loc 1 1324 12 view .LVU2221
 7067              	.LBB743:
1325:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7068              		.loc 1 1325 2 view .LVU2222
1326:src/keys.c    **** 
 7069              		.loc 1 1326 2 view .LVU2223
 7070              	.LBB744:
 7071              	.LBI744:
 200:src/keys.c    **** {
 7072              		.loc 1 200 14 view .LVU2224
 7073              	.LBB745:
 202:src/keys.c    ****     // K00 - K05
 7074              		.loc 1 202 3 view .LVU2225
 223:src/keys.c    **** }
 7075              		.loc 1 223 3 view .LVU2226
 7076              	.LBB746:
 7077              	.LBI746:
 121:src/keys.c    **** {
 7078              		.loc 1 121 12 view .LVU2227
 7079              	.LBB747:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7080              		.loc 1 123 2 view .LVU2228
 133:src/keys.c    **** }
 7081              		.loc 1 133 2 view .LVU2229
 133:src/keys.c    **** }
 7082              		.loc 1 133 23 is_stmt 0 view .LVU2230
ARM GAS  /tmp/ccczu93l.s 			page 217


 7083 0a24 BC4B     		ldr	r3, .L1208
 7084              	.LBE747:
 7085              	.LBE746:
 223:src/keys.c    **** }
 7086              		.loc 1 223 28 view .LVU2231
 7087 0a26 BD4A     		ldr	r2, .L1208+4
 7088 0a28 E4B2     		uxtb	r4, r4
 7089              	.LVL593:
 7090              	.LBB749:
 7091              	.LBB748:
 133:src/keys.c    **** }
 7092              		.loc 1 133 23 view .LVU2232
 7093 0a2a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7094              	.LBE748:
 7095              	.LBE749:
 223:src/keys.c    **** }
 7096              		.loc 1 223 28 view .LVU2233
 7097 0a2c D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7098              	.LVL594:
 223:src/keys.c    **** }
 7099              		.loc 1 223 28 view .LVU2234
 7100              	.LBE745:
 7101              	.LBE744:
1328:src/keys.c    **** 		// Digit 0 - 9
 7102              		.loc 1 1328 2 is_stmt 1 view .LVU2235
1328:src/keys.c    **** 		// Digit 0 - 9
 7103              		.loc 1 1328 5 is_stmt 0 view .LVU2236
 7104 0a2e 0928     		cmp	r0, #9
 7105 0a30 40F21881 		bls	.L1142
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7106              		.loc 1 1333 7 is_stmt 1 view .LVU2237
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7107              		.loc 1 1333 18 is_stmt 0 view .LVU2238
 7108 0a34 20F08000 		bic	r0, r0, #128
 7109              	.LVL595:
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7110              		.loc 1 1333 10 view .LVU2239
 7111 0a38 6428     		cmp	r0, #100
 7112 0a3a 00F0A881 		beq	.L1143
1334:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7113              		.loc 1 1334 7 is_stmt 1 view .LVU2240
1334:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7114              		.loc 1 1334 10 is_stmt 0 view .LVU2241
 7115 0a3e 6528     		cmp	r0, #101
 7116 0a40 00F00482 		beq	.L1144
1335:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7117              		.loc 1 1335 7 is_stmt 1 view .LVU2242
1335:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7118              		.loc 1 1335 10 is_stmt 0 view .LVU2243
 7119 0a44 6628     		cmp	r0, #102
 7120 0a46 00F01E82 		beq	.L1145
1336:src/keys.c    **** #endif
 7121              		.loc 1 1336 7 is_stmt 1 view .LVU2244
1336:src/keys.c    **** #endif
 7122              		.loc 1 1336 10 is_stmt 0 view .LVU2245
 7123 0a4a 6728     		cmp	r0, #103
 7124 0a4c 00F01C83 		beq	.L1146
ARM GAS  /tmp/ccczu93l.s 			page 218


1338:src/keys.c    **** 		// A - D
 7125              		.loc 1 1338 7 is_stmt 1 view .LVU2246
1338:src/keys.c    **** 		// A - D
 7126              		.loc 1 1338 10 is_stmt 0 view .LVU2247
 7127 0a50 032C     		cmp	r4, #3
 7128 0a52 40F22B84 		bls	.L1147
1343:src/keys.c    **** 		// .
 7129              		.loc 1 1343 7 is_stmt 1 view .LVU2248
1343:src/keys.c    **** 		// .
 7130              		.loc 1 1343 10 is_stmt 0 view .LVU2249
 7131 0a56 262C     		cmp	r4, #38
 7132 0a58 00F0B884 		beq	.L1148
1348:src/keys.c    **** 		// ENTER - short circuit processing
 7133              		.loc 1 1348 7 is_stmt 1 view .LVU2250
1348:src/keys.c    **** 		// ENTER - short circuit processing
 7134              		.loc 1 1348 10 is_stmt 0 view .LVU2251
 7135 0a5c 0C2C     		cmp	r4, #12
 7136 0a5e 00F07B81 		beq	.L1149
1352:src/keys.c    **** 		// backspace
 7137              		.loc 1 1352 7 is_stmt 1 view .LVU2252
1352:src/keys.c    **** 		// backspace
 7138              		.loc 1 1352 10 is_stmt 0 view .LVU2253
 7139 0a62 102C     		cmp	r4, #16
 7140 0a64 00F04C84 		beq	.L1150
1361:src/keys.c    **** 		// up
 7141              		.loc 1 1361 7 is_stmt 1 view .LVU2254
1361:src/keys.c    **** 		// up
 7142              		.loc 1 1361 10 is_stmt 0 view .LVU2255
 7143 0a68 122C     		cmp	r4, #18
 7144 0a6a 00F02387 		beq	.L1151
1371:src/keys.c    **** 		// down
 7145              		.loc 1 1371 7 is_stmt 1 view .LVU2256
1371:src/keys.c    **** 		// down
 7146              		.loc 1 1371 10 is_stmt 0 view .LVU2257
 7147 0a6e 182C     		cmp	r4, #24
 7148 0a70 00F0DB87 		beq	.L614
 7149 0a74 3268     		ldr	r2, [r6]
 7150              	.LVL596:
1371:src/keys.c    **** 		// down
 7151              		.loc 1 1371 10 view .LVU2258
 7152              	.LBE743:
 7153              	.LBE742:
2838:src/keys.c    **** 
 7154              		.loc 1 2838 10 view .LVU2259
 7155 0a76 4FF0330B 		mov	fp, #51
 7156 0a7a FFF71ABB 		b	.L565
 7157              	.LVL597:
 7158              	.L857:
2838:src/keys.c    **** 
 7159              		.loc 1 2838 10 view .LVU2260
 7160              	.LBE1240:
 7161              	.LBE1310:
 7162              	.LBB1311:
3132:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7163              		.loc 1 3132 4 is_stmt 1 view .LVU2261
 7164              	.LBB1284:
 7165              	.LBI1284:
ARM GAS  /tmp/ccczu93l.s 			page 219


 503:src/keys.c    **** 	if (is_bad_cmdline())
 7166              		.loc 1 503 13 view .LVU2262
 7167              	.LBB1285:
 504:src/keys.c    **** 		return;
 7168              		.loc 1 504 2 view .LVU2263
 504:src/keys.c    **** 		return;
 7169              		.loc 1 504 6 is_stmt 0 view .LVU2264
 7170 0a7e FFF7FEFF 		bl	is_bad_cmdline
 7171              	.LVL598:
 504:src/keys.c    **** 		return;
 7172              		.loc 1 504 5 view .LVU2265
 7173 0a82 0546     		mov	r5, r0
 7174 0a84 0028     		cmp	r0, #0
 7175 0a86 40F0E780 		bne	.L1152
 7176 0a8a 2046     		mov	r0, r4
 7177 0a8c FFF7FEFF 		bl	init_arg.part.0
 7178              	.LVL599:
 7179              	.LBE1285:
 7180              	.LBE1284:
3133:src/keys.c    **** 	}
 7181              		.loc 1 3133 6 view .LVU2266
 7182 0a90 4FF0330B 		mov	fp, #51
 7183 0a94 3268     		ldr	r2, [r6]
 7184 0a96 FFF70CBB 		b	.L565
 7185              	.LVL600:
 7186              	.L939:
3133:src/keys.c    **** 	}
 7187              		.loc 1 3133 6 view .LVU2267
 7188              	.LBE1311:
 7189              	.LBB1312:
 7190 0a9a 9B46     		mov	fp, r3
 7191              	.LVL601:
3133:src/keys.c    **** 	}
 7192              		.loc 1 3133 6 view .LVU2268
 7193 0a9c FFF72ABB 		b	.L880
 7194              	.LVL602:
 7195              	.L1118:
3133:src/keys.c    **** 	}
 7196              		.loc 1 3133 6 view .LVU2269
 7197              	.LBE1312:
 7198              	.LBB1313:
 7199              	.LBB1241:
2841:src/keys.c    **** 
 7200              		.loc 1 2841 3 is_stmt 1 view .LVU2270
 7201              	.LBB764:
 7202              	.LBB765:
1231:src/keys.c    **** 	State2.dot = 0;
 7203              		.loc 1 1231 15 is_stmt 0 view .LVU2271
 7204 0aa0 21F06203 		bic	r3, r1, #98
 7205              	.LBE765:
 7206              	.LBE764:
2841:src/keys.c    **** 
 7207              		.loc 1 2841 10 view .LVU2272
 7208 0aa4 E4B2     		uxtb	r4, r4
 7209              	.LVL603:
 7210              	.LBB778:
 7211              	.LBI764:
ARM GAS  /tmp/ccczu93l.s 			page 220


1221:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 7212              		.loc 1 1221 12 is_stmt 1 view .LVU2273
 7213              	.LBB775:
1222:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 7214              		.loc 1 1222 2 view .LVU2274
1227:src/keys.c    **** 	int f = State2.dot;
 7215              		.loc 1 1227 2 view .LVU2275
1231:src/keys.c    **** 	State2.dot = 0;
 7216              		.loc 1 1231 15 is_stmt 0 view .LVU2276
 7217 0aa6 88F81530 		strb	r3, [r8, #21]
1227:src/keys.c    **** 	int f = State2.dot;
 7218              		.loc 1 1227 20 view .LVU2277
 7219 0aaa C1F3400A 		ubfx	r10, r1, #1, #1
 7220              	.LVL604:
1228:src/keys.c    **** 
 7221              		.loc 1 1228 2 is_stmt 1 view .LVU2278
1228:src/keys.c    **** 
 7222              		.loc 1 1228 16 is_stmt 0 view .LVU2279
 7223 0aae C1F38019 		ubfx	r9, r1, #6, #1
 7224              	.LVL605:
1230:src/keys.c    **** 	State2.cmplx = 0;
 7225              		.loc 1 1230 2 is_stmt 1 view .LVU2280
1231:src/keys.c    **** 	State2.dot = 0;
 7226              		.loc 1 1231 2 view .LVU2281
1232:src/keys.c    **** #ifdef DM42
 7227              		.loc 1 1232 2 view .LVU2282
1234:src/keys.c    **** #endif
 7228              		.loc 1 1234 2 view .LVU2283
 7229              	.LBB766:
 7230              	.LBI766:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7231              		.loc 1 104 13 view .LVU2284
 7232              	.LBE766:
 7233              	.LBE775:
 7234              	.LBE778:
 7235              	.LBE1241:
 7236              	.LBE1313:
 105:src/keys.c    **** }
 7237              		.loc 1 105 2 view .LVU2285
 7238              	.LBB1314:
 7239              	.LBB1242:
 7240              	.LBB779:
 7241              	.LBB776:
 7242              	.LBB773:
 7243              	.LBB767:
 7244              	.LBI767:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7245              		.loc 1 94 20 view .LVU2286
 7246              	.LBB768:
  95:src/keys.c    **** 	State2.shifts = shift;
 7247              		.loc 1 95 2 view .LVU2287
 7248              	.LBB769:
 7249              	.LBI769:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7250              		.loc 1 86 13 view .LVU2288
 7251              	.LBB770:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccczu93l.s 			page 221


 7252              		.loc 1 87 2 view .LVU2289
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7253              		.loc 1 87 18 is_stmt 0 view .LVU2290
 7254 0ab2 FFF7FEFF 		bl	shift_down
 7255              	.LVL606:
  88:src/keys.c    **** }
 7256              		.loc 1 88 2 is_stmt 1 view .LVU2291
 7257              	.LBE770:
 7258              	.LBE769:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7259              		.loc 1 96 2 view .LVU2292
 7260              	.LBE768:
 7261              	.LBE767:
 7262              	.LBE773:
1236:src/keys.c    **** 
 7263              		.loc 1 1236 2 is_stmt 0 view .LVU2293
 7264 0ab6 2A2C     		cmp	r4, #42
 7265              	.LBB774:
 7266              	.LBB772:
 7267              	.LBB771:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7268              		.loc 1 96 16 view .LVU2294
 7269 0ab8 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 7270              		.loc 1 98 2 is_stmt 1 view .LVU2295
 7271              	.LVL607:
  98:src/keys.c    **** }
 7272              		.loc 1 98 2 is_stmt 0 view .LVU2296
 7273              	.LBE771:
 7274              	.LBE772:
 7275              	.LBE774:
1236:src/keys.c    **** 
 7276              		.loc 1 1236 2 is_stmt 1 view .LVU2297
 7277 0abc 19D8     		bhi	.L616
 7278 0abe 282C     		cmp	r4, #40
 7279 0ac0 00F21781 		bhi	.L617
 7280 0ac4 013C     		subs	r4, r4, #1
 7281              	.LVL608:
1236:src/keys.c    **** 
 7282              		.loc 1 1236 2 is_stmt 0 view .LVU2298
 7283 0ac6 E3B2     		uxtb	r3, r4
 7284 0ac8 022B     		cmp	r3, #2
 7285 0aca 00F20D81 		bhi	.L618
1241:src/keys.c    **** 
 7286              		.loc 1 1241 3 is_stmt 1 view .LVU2299
1241:src/keys.c    **** 
 7287              		.loc 1 1241 54 is_stmt 0 view .LVU2300
 7288 0ace 944A     		ldr	r2, .L1208+8
 7289 0ad0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 7290 0ad4 02EB4404 		add	r4, r2, r4, lsl #1
 7291              	.LVL609:
1241:src/keys.c    **** 
 7292              		.loc 1 1241 27 view .LVU2301
 7293 0ad8 BAF1000F 		cmp	r10, #0
1241:src/keys.c    **** 
 7294              		.loc 1 1241 54 view .LVU2302
 7295 0adc 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 222


1241:src/keys.c    **** 
 7296              		.loc 1 1241 27 view .LVU2303
 7297 0ae0 14BF     		ite	ne
 7298 0ae2 4FF4A062 		movne	r2, #1280
 7299 0ae6 4FF40072 		moveq	r2, #512
1241:src/keys.c    **** 
 7300              		.loc 1 1241 37 view .LVU2304
 7301 0aea 4BEA020B 		orr	fp, fp, r2
 7302 0aee 5846     		mov	r0, fp
 7303 0af0 14E5     		b	.L622
 7304              	.LVL610:
 7305              	.L616:
1236:src/keys.c    **** 
 7306              		.loc 1 1236 2 view .LVU2305
 7307 0af2 2D2C     		cmp	r4, #45
 7308 0af4 40F0F880 		bne	.L618
1244:src/keys.c    **** 		goto stay;
 7309              		.loc 1 1244 3 is_stmt 1 view .LVU2306
 7310 0af8 8AF0010A 		eor	r10, r10, #1
 7311              	.LVL611:
1245:src/keys.c    **** 
 7312              		.loc 1 1245 3 view .LVU2307
 7313              	.L623:
1253:src/keys.c    **** 		State2.cmplx = cmplx;
 7314              		.loc 1 1253 3 view .LVU2308
1254:src/keys.c    **** 		State2.dot = f;
 7315              		.loc 1 1254 3 view .LVU2309
1255:src/keys.c    **** 		break;
 7316              		.loc 1 1255 3 view .LVU2310
1254:src/keys.c    **** 		State2.dot = f;
 7317              		.loc 1 1254 16 is_stmt 0 view .LVU2311
 7318 0afc 4FEA4A03 		lsl	r3, r10, #1
 7319 0b00 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 7320 0b04 3268     		ldr	r2, [r6]
 7321 0b06 43F02003 		orr	r3, r3, #32
 7322 0b0a 43EA8913 		orr	r3, r3, r9, lsl #6
 7323 0b0e 03F06203 		and	r3, r3, #98
 7324 0b12 21F06201 		bic	r1, r1, #98
 7325 0b16 0B43     		orrs	r3, r3, r1
 7326 0b18 88F81530 		strb	r3, [r8, #21]
1256:src/keys.c    **** 
 7327              		.loc 1 1256 3 is_stmt 1 view .LVU2312
1261:src/keys.c    **** }
 7328              		.loc 1 1261 9 is_stmt 0 view .LVU2313
 7329 0b1c 4FF0330B 		mov	fp, #51
1256:src/keys.c    **** 
 7330              		.loc 1 1256 3 view .LVU2314
 7331 0b20 FFF7C7BA 		b	.L565
 7332              	.LVL612:
 7333              	.L1113:
1256:src/keys.c    **** 
 7334              		.loc 1 1256 3 view .LVU2315
 7335              	.LBE776:
 7336              	.LBE779:
2818:src/keys.c    **** 		return STATE_IGNORE;
 7337              		.loc 1 2818 3 is_stmt 1 view .LVU2316
2818:src/keys.c    **** 		return STATE_IGNORE;
ARM GAS  /tmp/ccczu93l.s 			page 223


 7338              		.loc 1 2818 15 is_stmt 0 view .LVU2317
 7339 0b24 1D60     		str	r5, [r3]
2819:src/keys.c    **** 	}
 7340              		.loc 1 2819 3 is_stmt 1 view .LVU2318
 7341              	.LVL613:
2819:src/keys.c    **** 	}
 7342              		.loc 1 2819 3 is_stmt 0 view .LVU2319
 7343              	.LBE1242:
 7344              	.LBE1314:
3205:src/keys.c    **** #ifndef CONSOLE
 7345              		.loc 1 3205 3 is_stmt 1 view .LVU2320
 7346              	.LBB1315:
 7347              	.LBB1243:
2819:src/keys.c    **** 	}
 7348              		.loc 1 2819 10 is_stmt 0 view .LVU2321
 7349 0b26 4FF0320B 		mov	fp, #50
 7350 0b2a FFF7C5BA 		b	.L580
 7351              	.LVL614:
 7352              	.L1141:
 7353              	.LBB780:
 7354              	.LBB730:
1913:src/keys.c    **** 	State2.cmplx = 0;
 7355              		.loc 1 1913 2 is_stmt 1 view .LVU2322
1914:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7356              		.loc 1 1914 15 is_stmt 0 view .LVU2323
 7357 0b2e 6EF34101 		bfi	r1, lr, #1, #1
1913:src/keys.c    **** 	State2.cmplx = 0;
 7358              		.loc 1 1913 14 view .LVU2324
 7359 0b32 0720     		movs	r0, #7
1915:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7360              		.loc 1 1915 5 view .LVU2325
 7361 0b34 642A     		cmp	r2, #100
1914:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7362              		.loc 1 1914 15 view .LVU2326
 7363 0b36 88F81510 		strb	r1, [r8, #21]
1913:src/keys.c    **** 	State2.cmplx = 0;
 7364              		.loc 1 1913 14 view .LVU2327
 7365 0b3a 88F80F00 		strb	r0, [r8, #15]
1914:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7366              		.loc 1 1914 2 is_stmt 1 view .LVU2328
1915:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7367              		.loc 1 1915 2 view .LVU2329
1915:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7368              		.loc 1 1915 5 is_stmt 0 view .LVU2330
 7369 0b3e 00F0CC83 		beq	.L942
1911:src/keys.c    **** 
 7370              		.loc 1 1911 44 view .LVU2331
 7371 0b42 4FF02D0A 		mov	r10, #45
 7372              	.LVL615:
1911:src/keys.c    **** 
 7373              		.loc 1 1911 44 view .LVU2332
 7374 0b46 55E7     		b	.L898
 7375              	.LVL616:
 7376              	.L940:
1911:src/keys.c    **** 
 7377              		.loc 1 1911 44 view .LVU2333
 7378              	.LBE730:
ARM GAS  /tmp/ccczu93l.s 			page 224


 7379              	.LBE780:
 7380              	.LBE1243:
 7381              	.LBE1315:
 7382              	.LBB1316:
 7383 0b48 AB46     		mov	fp, r5
 7384              	.LVL617:
1911:src/keys.c    **** 
 7385              		.loc 1 1911 44 view .LVU2334
 7386 0b4a FFF7D3BA 		b	.L880
 7387              	.LVL618:
 7388              	.L1120:
1911:src/keys.c    **** 
 7389              		.loc 1 1911 44 view .LVU2335
 7390              	.LBE1316:
 7391              	.LBB1317:
 7392              	.LBB1244:
2847:src/keys.c    **** 
 7393              		.loc 1 2847 3 is_stmt 1 view .LVU2336
 7394              	.LBB781:
 7395              	.LBB782:
2476:src/keys.c    **** 
 7396              		.loc 1 2476 12 is_stmt 0 view .LVU2337
 7397 0b4e 754A     		ldr	r2, .L1208+12
 7398 0b50 1268     		ldr	r2, [r2]
2476:src/keys.c    **** 
 7399              		.loc 1 2476 31 view .LVU2338
 7400 0b52 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7401              	.LBE782:
 7402              	.LBE781:
2847:src/keys.c    **** 
 7403              		.loc 1 2847 10 view .LVU2339
 7404 0b56 E4B2     		uxtb	r4, r4
 7405              	.LVL619:
 7406              	.LBB801:
 7407              	.LBI781:
2474:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7408              		.loc 1 2474 12 is_stmt 1 view .LVU2340
 7409              	.LBB793:
2475:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7410              		.loc 1 2475 2 view .LVU2341
2476:src/keys.c    **** 
 7411              		.loc 1 2476 2 view .LVU2342
2476:src/keys.c    **** 
 7412              		.loc 1 2476 31 is_stmt 0 view .LVU2343
 7413 0b58 002A     		cmp	r2, #0
 7414 0b5a B4BF     		ite	lt
 7415 0b5c 0B22     		movlt	r2, #11
 7416 0b5e 0A22     		movge	r2, #10
 7417              	.LVL620:
2478:src/keys.c    **** 		if (--n < -2)
 7418              		.loc 1 2478 2 is_stmt 1 view .LVU2344
2478:src/keys.c    **** 		if (--n < -2)
 7419              		.loc 1 2478 5 is_stmt 0 view .LVU2345
 7420 0b60 122C     		cmp	r4, #18
 7421 0b62 00F00F81 		beq	.L1153
2482:src/keys.c    **** 		if (++n > max)
 7422              		.loc 1 2482 7 is_stmt 1 view .LVU2346
ARM GAS  /tmp/ccczu93l.s 			page 225


2482:src/keys.c    **** 		if (++n > max)
 7423              		.loc 1 2482 10 is_stmt 0 view .LVU2347
 7424 0b66 182C     		cmp	r4, #24
 7425 0b68 00F08681 		beq	.L1154
2486:src/keys.c    **** 		State2.status = 0;
 7426              		.loc 1 2486 7 is_stmt 1 view .LVU2348
2486:src/keys.c    **** 		State2.status = 0;
 7427              		.loc 1 2486 10 is_stmt 0 view .LVU2349
 7428 0b6c 102C     		cmp	r4, #16
 7429 0b6e 00F03184 		beq	.L1155
 7430              	.LBB783:
2491:src/keys.c    **** 		if (nn <= 9)
 7431              		.loc 1 2491 3 is_stmt 1 view .LVU2350
 7432              	.LVL621:
 7433              	.LBB784:
 7434              	.LBI784:
 200:src/keys.c    **** {
 7435              		.loc 1 200 14 view .LVU2351
 7436              	.LBB785:
 202:src/keys.c    ****     // K00 - K05
 7437              		.loc 1 202 3 view .LVU2352
 223:src/keys.c    **** }
 7438              		.loc 1 223 3 view .LVU2353
 7439              	.LBB786:
 7440              	.LBI786:
 121:src/keys.c    **** {
 7441              		.loc 1 121 12 view .LVU2354
 7442              	.LBB787:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7443              		.loc 1 123 2 view .LVU2355
 133:src/keys.c    **** }
 7444              		.loc 1 133 2 view .LVU2356
 133:src/keys.c    **** }
 7445              		.loc 1 133 23 is_stmt 0 view .LVU2357
 7446 0b72 6949     		ldr	r1, .L1208
 7447              	.LBE787:
 7448              	.LBE786:
 223:src/keys.c    **** }
 7449              		.loc 1 223 28 view .LVU2358
 7450 0b74 6948     		ldr	r0, .L1208+4
 7451              	.LBB789:
 7452              	.LBB788:
 133:src/keys.c    **** }
 7453              		.loc 1 133 23 view .LVU2359
 7454 0b76 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 7455 0b78 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 7456 0b7a 01F07F01 		and	r1, r1, #127
 7457              	.LVL622:
 133:src/keys.c    **** }
 7458              		.loc 1 133 23 view .LVU2360
 7459              	.LBE788:
 7460              	.LBE789:
 7461              	.LBE785:
 7462              	.LBE784:
2492:src/keys.c    **** 			n = nn;
 7463              		.loc 1 2492 3 is_stmt 1 view .LVU2361
2492:src/keys.c    **** 			n = nn;
ARM GAS  /tmp/ccczu93l.s 			page 226


 7464              		.loc 1 2492 6 is_stmt 0 view .LVU2362
 7465 0b7e 0929     		cmp	r1, #9
 7466 0b80 40F29A81 		bls	.L908
2494:src/keys.c    **** 			n = n == max ? 10 : max;
 7467              		.loc 1 2494 11 view .LVU2363
 7468 0b84 7029     		cmp	r1, #112
 7469              	.LBE783:
2475:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7470              		.loc 1 2475 6 view .LVU2364
 7471 0b86 A3F10303 		sub	r3, r3, #3
 7472              	.LVL623:
 7473              	.LBB790:
2494:src/keys.c    **** 			n = n == max ? 10 : max;
 7474              		.loc 1 2494 8 is_stmt 1 view .LVU2365
2494:src/keys.c    **** 			n = n == max ? 10 : max;
 7475              		.loc 1 2494 11 is_stmt 0 view .LVU2366
 7476 0b8a 00F01A86 		beq	.L1156
2496:src/keys.c    **** 			n = 10; 
 7477              		.loc 1 2496 8 is_stmt 1 view .LVU2367
 7478              	.LBE790:
2475:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7479              		.loc 1 2475 6 is_stmt 0 view .LVU2368
 7480 0b8e 7F29     		cmp	r1, #127
 7481 0b90 0CBF     		ite	eq
 7482 0b92 1A46     		moveq	r2, r3
 7483              	.LVL624:
2475:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7484              		.loc 1 2475 6 view .LVU2369
 7485 0b94 0A22     		movne	r2, #10
 7486              	.LVL625:
 7487              	.L644:
2499:src/keys.c    **** 
 7488              		.loc 1 2499 2 is_stmt 1 view .LVU2370
2499:src/keys.c    **** 
 7489              		.loc 1 2499 20 is_stmt 0 view .LVU2371
 7490 0b96 0332     		adds	r2, r2, #3
 7491              	.LVL626:
2499:src/keys.c    **** 
 7492              		.loc 1 2499 16 view .LVU2372
 7493 0b98 88F80C20 		strb	r2, [r8, #12]
2501:src/keys.c    **** }
 7494              		.loc 1 2501 2 is_stmt 1 view .LVU2373
 7495              	.LBE793:
 7496              	.LBE801:
2847:src/keys.c    **** 
 7497              		.loc 1 2847 10 is_stmt 0 view .LVU2374
 7498 0b9c 4FF0330B 		mov	fp, #51
 7499 0ba0 3268     		ldr	r2, [r6]
 7500              	.LVL627:
 7501              	.LBB802:
 7502              	.LBB794:
2501:src/keys.c    **** }
 7503              		.loc 1 2501 9 view .LVU2375
 7504 0ba2 FFF786BA 		b	.L565
 7505              	.LVL628:
 7506              	.L1124:
2501:src/keys.c    **** }
ARM GAS  /tmp/ccczu93l.s 			page 227


 7507              		.loc 1 2501 9 view .LVU2376
 7508              	.LBE794:
 7509              	.LBE802:
2870:src/keys.c    **** 
 7510              		.loc 1 2870 3 is_stmt 1 view .LVU2377
 7511              	.LBB803:
 7512              	.LBB804:
 7513              	.LBB805:
 7514              	.LBB806:
 7515              	.LBB807:
 7516              	.LBB808:
 7517              	.LBB809:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7518              		.loc 1 87 18 is_stmt 0 view .LVU2378
 7519 0ba6 FFF7FEFF 		bl	shift_down
 7520              	.LVL629:
 7521              	.LBE809:
 7522              	.LBE808:
 7523              	.LBE807:
 7524              	.LBE806:
 7525              	.LBE805:
 7526              	.LBE804:
 7527              	.LBE803:
2870:src/keys.c    **** 
 7528              		.loc 1 2870 10 view .LVU2379
 7529 0baa E4B2     		uxtb	r4, r4
 7530              	.LVL630:
 7531              	.LBB830:
 7532              	.LBI803:
1268:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7533              		.loc 1 1268 12 is_stmt 1 view .LVU2380
 7534              	.LBB826:
1269:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7535              		.loc 1 1269 2 view .LVU2381
1274:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7536              		.loc 1 1274 2 view .LVU2382
1278:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7537              		.loc 1 1278 2 view .LVU2383
 7538              	.LBB818:
 7539              	.LBI805:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7540              		.loc 1 104 13 view .LVU2384
 7541              	.LBE818:
 7542              	.LBE826:
 7543              	.LBE830:
 7544              	.LBE1244:
 7545              	.LBE1317:
 105:src/keys.c    **** }
 7546              		.loc 1 105 2 view .LVU2385
 7547              	.LBB1318:
 7548              	.LBB1245:
 7549              	.LBB831:
 7550              	.LBB827:
 7551              	.LBB819:
 7552              	.LBB815:
 7553              	.LBI806:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/ccczu93l.s 			page 228


 7554              		.loc 1 94 20 view .LVU2386
 7555              	.LBB812:
  95:src/keys.c    **** 	State2.shifts = shift;
 7556              		.loc 1 95 2 view .LVU2387
 7557              	.LBB811:
 7558              	.LBI808:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7559              		.loc 1 86 13 view .LVU2388
 7560              	.LBB810:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7561              		.loc 1 87 2 view .LVU2389
  88:src/keys.c    **** }
 7562              		.loc 1 88 2 view .LVU2390
  88:src/keys.c    **** }
 7563              		.loc 1 88 52 is_stmt 0 view .LVU2391
 7564 0bac 8346     		mov	fp, r0
 7565 0bae 08B9     		cbnz	r0, .L654
 7566 0bb0 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 7567              	.L654:
 7568              	.LVL631:
  88:src/keys.c    **** }
 7569              		.loc 1 88 52 view .LVU2392
 7570              	.LBE810:
 7571              	.LBE811:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7572              		.loc 1 96 2 is_stmt 1 view .LVU2393
 7573              	.LBE812:
 7574              	.LBE815:
 7575              	.LBE819:
1281:src/keys.c    **** #ifdef DM42
 7576              		.loc 1 1281 15 is_stmt 0 view .LVU2394
 7577 0bb4 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7578              	.LBB820:
 7579              	.LBB816:
 7580              	.LBB813:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7581              		.loc 1 96 16 view .LVU2395
 7582 0bb8 0023     		movs	r3, #0
 7583              	.LBE813:
 7584              	.LBE816:
 7585              	.LBE820:
1279:src/keys.c    **** 
 7586              		.loc 1 1279 23 view .LVU2396
 7587 0bba ABF1010A 		sub	r10, fp, #1
 7588              	.LVL632:
1281:src/keys.c    **** #ifdef DM42
 7589              		.loc 1 1281 15 view .LVU2397
 7590 0bbe 63F38202 		bfi	r2, r3, #2, #1
1279:src/keys.c    **** 
 7591              		.loc 1 1279 23 view .LVU2398
 7592 0bc2 BAFA8AFA 		clz	r10, r10
1281:src/keys.c    **** #ifdef DM42
 7593              		.loc 1 1281 15 view .LVU2399
 7594 0bc6 88F81520 		strb	r2, [r8, #21]
 7595              	.LBB821:
 7596              	.LBB817:
 7597              	.LBB814:
ARM GAS  /tmp/ccczu93l.s 			page 229


  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7598              		.loc 1 96 16 view .LVU2400
 7599 0bca 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 7600              		.loc 1 98 2 is_stmt 1 view .LVU2401
 7601              	.LVL633:
  98:src/keys.c    **** }
 7602              		.loc 1 98 2 is_stmt 0 view .LVU2402
 7603              	.LBE814:
 7604              	.LBE817:
 7605              	.LBE821:
1279:src/keys.c    **** 
 7606              		.loc 1 1279 2 is_stmt 1 view .LVU2403
1279:src/keys.c    **** 
 7607              		.loc 1 1279 23 is_stmt 0 view .LVU2404
 7608 0bce 4FEA5A1A 		lsr	r10, r10, #5
 7609              	.LVL634:
1281:src/keys.c    **** #ifdef DM42
 7610              		.loc 1 1281 2 is_stmt 1 view .LVU2405
1283:src/keys.c    **** 	display_current_menu ();
 7611              		.loc 1 1283 2 view .LVU2406
 7612 0bd2 FFF7FEFF 		bl	set_last_menu
 7613              	.LVL635:
1284:src/keys.c    **** #endif
 7614              		.loc 1 1284 2 view .LVU2407
 7615 0bd6 FFF7FEFF 		bl	display_current_menu
 7616              	.LVL636:
1286:src/keys.c    **** 	
 7617              		.loc 1 1286 2 view .LVU2408
1286:src/keys.c    **** 	
 7618              		.loc 1 1286 5 is_stmt 0 view .LVU2409
 7619 0bda BBF1000F 		cmp	fp, #0
 7620 0bde 09D0     		beq	.L657
1288:src/keys.c    **** 		return op_map[c - K10][f];
 7621              		.loc 1 1288 2 is_stmt 1 view .LVU2410
1288:src/keys.c    **** 		return op_map[c - K10][f];
 7622              		.loc 1 1288 15 is_stmt 0 view .LVU2411
 7623 0be0 A31F     		subs	r3, r4, #6
1288:src/keys.c    **** 		return op_map[c - K10][f];
 7624              		.loc 1 1288 5 view .LVU2412
 7625 0be2 DAB2     		uxtb	r2, r3
 7626 0be4 022A     		cmp	r2, #2
 7627 0be6 40F24081 		bls	.L1157
1291:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7628              		.loc 1 1291 2 is_stmt 1 view .LVU2413
1291:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7629              		.loc 1 1291 15 is_stmt 0 view .LVU2414
 7630 0bea 0E3C     		subs	r4, r4, #14
 7631              	.LVL637:
1291:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7632              		.loc 1 1291 5 view .LVU2415
 7633 0bec E3B2     		uxtb	r3, r4
 7634 0bee 012B     		cmp	r3, #1
 7635 0bf0 40F23982 		bls	.L1158
 7636              	.LVL638:
 7637              	.L657:
1291:src/keys.c    **** 		set_smode(disp[c - K22][f]);
ARM GAS  /tmp/ccczu93l.s 			page 230


 7638              		.loc 1 1291 5 view .LVU2416
 7639 0bf4 3268     		ldr	r2, [r6]
1286:src/keys.c    **** 	
 7640              		.loc 1 1286 31 view .LVU2417
 7641 0bf6 4FF0330B 		mov	fp, #51
 7642              	.LVL639:
1286:src/keys.c    **** 	
 7643              		.loc 1 1286 31 view .LVU2418
 7644 0bfa FFF75ABA 		b	.L565
 7645              	.LVL640:
 7646              	.L1125:
1286:src/keys.c    **** 	
 7647              		.loc 1 1286 31 view .LVU2419
 7648              	.LBE827:
 7649              	.LBE831:
 7650              	.LBB832:
 7651              	.LBB666:
 265:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7652              		.loc 1 265 16 view .LVU2420
 7653 0bfe BAF1030F 		cmp	r10, #3
 7654 0c02 00F04881 		beq	.L1159
 268:src/keys.c    ****     /*
 7655              		.loc 1 268 3 is_stmt 1 view .LVU2421
 268:src/keys.c    ****     /*
 7656              		.loc 1 268 23 is_stmt 0 view .LVU2422
 7657 0c06 484A     		ldr	r2, .L1208+16
 7658 0c08 D8F81430 		ldr	r3, [r8, #20]
 268:src/keys.c    ****     /*
 7659              		.loc 1 268 6 view .LVU2423
 7660 0c0c 1A42     		tst	r2, r3
 7661 0c0e 3FF44AAB 		beq	.L671
 7662              	.L663:
 7663              	.LBB661:
 337:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7664              		.loc 1 337 5 is_stmt 1 view .LVU2424
 359:src/keys.c    **** 
 7665              		.loc 1 359 5 view .LVU2425
 364:src/keys.c    ****     col = smap[shift];
 7666              		.loc 1 364 5 view .LVU2426
 7667              	.LVL641:
 365:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7668              		.loc 1 365 5 view .LVU2427
 365:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7669              		.loc 1 365 15 is_stmt 0 view .LVU2428
 7670 0c12 464A     		ldr	r2, .L1208+20
 364:src/keys.c    ****     col = smap[shift];
 7671              		.loc 1 364 8 view .LVU2429
 7672 0c14 464B     		ldr	r3, .L1208+24
 365:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7673              		.loc 1 365 9 view .LVU2430
 7674 0c16 12F80AC0 		ldrb	ip, [r2, r10]	@ zero_extendqisi2
 7675              	.LVL642:
 366:src/keys.c    ****   }
 7676              		.loc 1 366 5 is_stmt 1 view .LVU2431
 366:src/keys.c    ****   }
 7677              		.loc 1 366 9 is_stmt 0 view .LVU2432
 7678 0c1a 0622     		movs	r2, #6
ARM GAS  /tmp/ccczu93l.s 			page 231


 7679 0c1c FFF716BB 		b	.L666
 7680              	.LVL643:
 7681              	.L633:
 366:src/keys.c    ****   }
 7682              		.loc 1 366 9 view .LVU2433
 7683              	.LBE661:
 7684              	.LBE666:
 7685              	.LBE832:
 7686              	.LBB833:
 7687              	.LBB731:
1935:src/keys.c    **** 		// digit 2..9, -> or .
 7688              		.loc 1 1935 7 is_stmt 1 view .LVU2434
1935:src/keys.c    **** 		// digit 2..9, -> or .
 7689              		.loc 1 1935 10 is_stmt 0 view .LVU2435
 7690 0c20 092A     		cmp	r2, #9
 7691 0c22 48D9     		bls	.L635
 7692              	.L627:
1935:src/keys.c    **** 		// digit 2..9, -> or .
 7693              		.loc 1 1935 19 view .LVU2436
 7694 0c24 2C2C     		cmp	r4, #44
 7695 0c26 46D0     		beq	.L635
1935:src/keys.c    **** 		// digit 2..9, -> or .
 7696              		.loc 1 1935 35 view .LVU2437
 7697 0c28 262C     		cmp	r4, #38
 7698 0c2a 44D0     		beq	.L635
1941:src/keys.c    **** 	case K11:					// tests vs register
 7699              		.loc 1 1941 2 is_stmt 1 view .LVU2438
 7700 0c2c 0C2C     		cmp	r4, #12
 7701 0c2e 00F0FA81 		beq	.L638
 7702 0c32 102C     		cmp	r4, #16
 7703 0c34 00F01282 		beq	.L639
 7704 0c38 072C     		cmp	r4, #7
 7705 0c3a 00F0F481 		beq	.L638
 7706              	.L630:
1955:src/keys.c    **** 	State2.cmplx = cmpx;
 7707              		.loc 1 1955 2 view .LVU2439
1956:src/keys.c    **** 	return STATE_UNFINISHED;
 7708              		.loc 1 1956 15 is_stmt 0 view .LVU2440
 7709 0c3e 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 7710 0c42 3268     		ldr	r2, [r6]
1955:src/keys.c    **** 	State2.cmplx = cmpx;
 7711              		.loc 1 1955 14 view .LVU2441
 7712 0c44 88F80FB0 		strb	fp, [r8, #15]
1956:src/keys.c    **** 	return STATE_UNFINISHED;
 7713              		.loc 1 1956 2 is_stmt 1 view .LVU2442
1956:src/keys.c    **** 	return STATE_UNFINISHED;
 7714              		.loc 1 1956 15 is_stmt 0 view .LVU2443
 7715 0c48 6EF34103 		bfi	r3, lr, #1, #1
 7716 0c4c 88F81530 		strb	r3, [r8, #21]
1957:src/keys.c    **** }
 7717              		.loc 1 1957 2 is_stmt 1 view .LVU2444
1957:src/keys.c    **** }
 7718              		.loc 1 1957 9 is_stmt 0 view .LVU2445
 7719 0c50 4FF0330B 		mov	fp, #51
 7720              	.LVL644:
1957:src/keys.c    **** }
 7721              		.loc 1 1957 9 view .LVU2446
ARM GAS  /tmp/ccczu93l.s 			page 232


 7722 0c54 FFF72DBA 		b	.L565
 7723              	.LVL645:
 7724              	.L1152:
1957:src/keys.c    **** }
 7725              		.loc 1 1957 9 view .LVU2447
 7726 0c58 3268     		ldr	r2, [r6]
 7727              	.LBE731:
 7728              	.LBE833:
 7729              	.LBE1245:
 7730              	.LBE1318:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 7731              		.loc 1 2958 7 view .LVU2448
 7732 0c5a 0025     		movs	r5, #0
 7733              	.LBB1319:
3133:src/keys.c    **** 	}
 7734              		.loc 1 3133 6 view .LVU2449
 7735 0c5c 4FF0330B 		mov	fp, #51
 7736 0c60 FFF727BA 		b	.L565
 7737              	.LVL646:
 7738              	.L1142:
3133:src/keys.c    **** 	}
 7739              		.loc 1 3133 6 view .LVU2450
 7740              	.LBE1319:
 7741              	.LBB1320:
 7742              	.LBB1246:
 7743              	.LBB834:
 7744              	.LBB752:
1330:src/keys.c    **** 	}
 7745              		.loc 1 1330 3 is_stmt 1 view .LVU2451
1330:src/keys.c    **** 	}
 7746              		.loc 1 1330 8 is_stmt 0 view .LVU2452
 7747 0c64 FFF7FEFF 		bl	gtodot_digit
 7748              	.LVL647:
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7749              		.loc 1 1379 2 is_stmt 1 view .LVU2453
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7750              		.loc 1 1379 5 is_stmt 0 view .LVU2454
 7751 0c68 0028     		cmp	r0, #0
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7752              		.loc 1 1379 5 view .LVU2455
 7753 0c6a 77DA     		bge	.L598
 7754 0c6c 3268     		ldr	r2, [r6]
 7755              	.LBE752:
 7756              	.LBE834:
2838:src/keys.c    **** 
 7757              		.loc 1 2838 10 view .LVU2456
 7758 0c6e 4FF0330B 		mov	fp, #51
 7759 0c72 FFF71EBA 		b	.L565
 7760              	.LVL648:
 7761              	.L628:
 7762              	.LBB835:
 7763              	.LBB732:
1927:src/keys.c    **** 		// Special 0
 7764              		.loc 1 1927 7 is_stmt 1 view .LVU2457
1927:src/keys.c    **** 		// Special 0
 7765              		.loc 1 1927 10 is_stmt 0 view .LVU2458
 7766 0c76 002A     		cmp	r2, #0
ARM GAS  /tmp/ccczu93l.s 			page 233


 7767 0c78 40F05B87 		bne	.L631
1929:src/keys.c    **** 	}
 7768              		.loc 1 1929 3 is_stmt 1 view .LVU2459
1929:src/keys.c    **** 	}
 7769              		.loc 1 1929 18 is_stmt 0 view .LVU2460
 7770 0c7c BEF1000F 		cmp	lr, #0
 7771 0c80 14BF     		ite	ne
 7772 0c82 2523     		movne	r3, #37
 7773 0c84 1723     		moveq	r3, #23
1929:src/keys.c    **** 	}
 7774              		.loc 1 1929 47 view .LVU2461
 7775 0c86 9B44     		add	fp, fp, r3
 7776              	.LVL649:
1929:src/keys.c    **** 	}
 7777              		.loc 1 1929 47 view .LVU2462
 7778 0c88 FFF7D6BB 		b	.L595
 7779              	.LVL650:
 7780              	.L1127:
1929:src/keys.c    **** 	}
 7781              		.loc 1 1929 47 view .LVU2463
 7782              	.LBE732:
 7783              	.LBE835:
 7784              	.LBB836:
 7785              	.LBB667:
 374:src/keys.c    ****       break;
 7786              		.loc 1 374 7 is_stmt 1 view .LVU2464
 374:src/keys.c    ****       break;
 7787              		.loc 1 374 11 is_stmt 0 view .LVU2465
 7788 0c8c 6344     		add	r3, r3, ip
 7789              	.LVL651:
 374:src/keys.c    ****       break;
 7790              		.loc 1 374 11 view .LVU2466
 7791 0c8e 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7792              	.LVL652:
 375:src/keys.c    ****     }
 7793              		.loc 1 375 7 is_stmt 1 view .LVU2467
 378:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7794              		.loc 1 378 3 view .LVU2468
 378:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7795              		.loc 1 378 6 is_stmt 0 view .LVU2469
 7796 0c92 0B07     		lsls	r3, r1, #28
 7797 0c94 40F1D480 		bpl	.L1160
 378:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7798              		.loc 1 378 20 view .LVU2470
 7799 0c98 ABF10B03 		sub	r3, fp, #11
 7800 0c9c 042B     		cmp	r3, #4
 7801 0c9e 7ED8     		bhi	.L677
 7802              	.LVL653:
 7803              	.L661:
 378:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7804              		.loc 1 378 20 view .LVU2471
 7805              	.LBE667:
 7806              	.LBE836:
2879:src/keys.c    **** 			return STATE_UNFINISHED;
 7807              		.loc 1 2879 3 is_stmt 1 view .LVU2472
2879:src/keys.c    **** 			return STATE_UNFINISHED;
 7808              		.loc 1 2879 7 is_stmt 0 view .LVU2473
ARM GAS  /tmp/ccczu93l.s 			page 234


 7809 0ca0 FFF7FEFF 		bl	is_bad_cmdline
 7810              	.LVL654:
2879:src/keys.c    **** 			return STATE_UNFINISHED;
 7811              		.loc 1 2879 6 view .LVU2474
 7812 0ca4 0446     		mov	r4, r0
 7813 0ca6 0028     		cmp	r0, #0
 7814 0ca8 00F0CD81 		beq	.L676
 7815 0cac 3268     		ldr	r2, [r6]
2880:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
 7816              		.loc 1 2880 11 view .LVU2475
 7817 0cae 4FF0330B 		mov	fp, #51
 7818 0cb2 FFF7FEB9 		b	.L565
 7819              	.LVL655:
 7820              	.L635:
 7821              	.LBB837:
 7822              	.LBB733:
1937:src/keys.c    **** 		return process_arg(c);
 7823              		.loc 1 1937 3 is_stmt 1 view .LVU2476
 7824              	.LBB726:
 7825              	.LBI726:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 7826              		.loc 1 503 13 view .LVU2477
 7827              	.LBB727:
 504:src/keys.c    **** 		return;
 7828              		.loc 1 504 2 view .LVU2478
 504:src/keys.c    **** 		return;
 7829              		.loc 1 504 6 is_stmt 0 view .LVU2479
 7830 0cb6 FFF7FEFF 		bl	is_bad_cmdline
 7831              	.LVL656:
 504:src/keys.c    **** 		return;
 7832              		.loc 1 504 5 view .LVU2480
 7833 0cba 18B9     		cbnz	r0, .L637
 7834 0cbc 5FFA8AF0 		uxtb	r0, r10
 7835 0cc0 FFF7FEFF 		bl	init_arg.part.0
 7836              	.LVL657:
 7837              	.L637:
 504:src/keys.c    **** 		return;
 7838              		.loc 1 504 5 view .LVU2481
 7839              	.LBE727:
 7840              	.LBE726:
1938:src/keys.c    **** 	}
 7841              		.loc 1 1938 3 is_stmt 1 view .LVU2482
1938:src/keys.c    **** 	}
 7842              		.loc 1 1938 10 is_stmt 0 view .LVU2483
 7843 0cc4 2046     		mov	r0, r4
 7844 0cc6 FFF7FEFF 		bl	process_arg
 7845              	.LVL658:
 7846 0cca 8346     		mov	fp, r0
 7847              	.LVL659:
1938:src/keys.c    **** 	}
 7848              		.loc 1 1938 10 view .LVU2484
 7849 0ccc FFF7B4BB 		b	.L595
 7850              	.LVL660:
 7851              	.L1121:
1938:src/keys.c    **** 	}
 7852              		.loc 1 1938 10 view .LVU2485
 7853              	.LBE733:
ARM GAS  /tmp/ccczu93l.s 			page 235


 7854              	.LBE837:
2853:src/keys.c    **** 		return STATE_UNFINISHED;
 7855              		.loc 1 2853 3 is_stmt 1 view .LVU2486
 7856              	.LBB838:
 7857              	.LBI838:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7858              		.loc 1 111 13 view .LVU2487
 7859              	.LBB839:
 112:src/keys.c    **** }
 7860              		.loc 1 112 2 view .LVU2488
 112:src/keys.c    **** }
 7861              		.loc 1 112 16 is_stmt 0 view .LVU2489
 7862 0cd0 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7863 0cd4 3268     		ldr	r2, [r6]
 7864 0cd6 013B     		subs	r3, r3, #1
 7865 0cd8 18BF     		it	ne
 7866 0cda 0123     		movne	r3, #1
 7867 0cdc 88F81030 		strb	r3, [r8, #16]
 7868              	.LVL661:
 112:src/keys.c    **** }
 7869              		.loc 1 112 16 view .LVU2490
 7870              	.LBE839:
 7871              	.LBE838:
2854:src/keys.c    **** 	}
 7872              		.loc 1 2854 3 is_stmt 1 view .LVU2491
2854:src/keys.c    **** 	}
 7873              		.loc 1 2854 10 is_stmt 0 view .LVU2492
 7874 0ce0 4FF0330B 		mov	fp, #51
 7875 0ce4 FFF7E5B9 		b	.L565
 7876              	.LVL662:
 7877              	.L618:
2854:src/keys.c    **** 	}
 7878              		.loc 1 2854 10 view .LVU2493
 7879 0ce8 3268     		ldr	r2, [r6]
 7880              	.LBB840:
 7881              	.LBB777:
1261:src/keys.c    **** }
 7882              		.loc 1 1261 9 view .LVU2494
 7883 0cea 4FF0330B 		mov	fp, #51
 7884 0cee FFF7E0B9 		b	.L565
 7885              	.LVL663:
 7886              	.L617:
1249:src/keys.c    **** 		// fall trough
 7887              		.loc 1 1249 3 is_stmt 1 view .LVU2495
1249:src/keys.c    **** 		// fall trough
 7888              		.loc 1 1249 10 is_stmt 0 view .LVU2496
 7889 0cf2 A4F12909 		sub	r9, r4, #41
 7890              	.LVL664:
1249:src/keys.c    **** 		// fall trough
 7891              		.loc 1 1249 10 view .LVU2497
 7892 0cf6 B9FA89F9 		clz	r9, r9
 7893 0cfa 4FEA5919 		lsr	r9, r9, #5
 7894              	.LVL665:
1249:src/keys.c    **** 		// fall trough
 7895              		.loc 1 1249 10 view .LVU2498
 7896 0cfe FDE6     		b	.L623
 7897              	.LVL666:
ARM GAS  /tmp/ccczu93l.s 			page 236


 7898              	.L1122:
1249:src/keys.c    **** 		// fall trough
 7899              		.loc 1 1249 10 view .LVU2499
 7900              	.LBE777:
 7901              	.LBE840:
2857:src/keys.c    **** 		return STATE_UNFINISHED;
 7902              		.loc 1 2857 3 is_stmt 1 view .LVU2500
 7903              	.LBB841:
 7904              	.LBI841:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7905              		.loc 1 111 13 view .LVU2501
 7906              	.LBB842:
 112:src/keys.c    **** }
 7907              		.loc 1 112 2 view .LVU2502
 112:src/keys.c    **** }
 7908              		.loc 1 112 16 is_stmt 0 view .LVU2503
 7909 0d00 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 7910 0d04 3268     		ldr	r2, [r6]
 7911 0d06 0229     		cmp	r1, #2
 7912 0d08 18BF     		it	ne
 7913 0d0a 0223     		movne	r3, #2
 7914 0d0c 88F81030 		strb	r3, [r8, #16]
 7915              	.LVL667:
 112:src/keys.c    **** }
 7916              		.loc 1 112 16 view .LVU2504
 7917              	.LBE842:
 7918              	.LBE841:
2858:src/keys.c    **** 	}
 7919              		.loc 1 2858 3 is_stmt 1 view .LVU2505
2858:src/keys.c    **** 	}
 7920              		.loc 1 2858 10 is_stmt 0 view .LVU2506
 7921 0d10 4FF0330B 		mov	fp, #51
 7922 0d14 FFF7CDB9 		b	.L565
 7923              	.L1209:
 7924              		.align	2
 7925              	.L1208:
 7926 0d18 00000000 		.word	.LANCHOR1
 7927 0d1c 00000000 		.word	.LANCHOR0
 7928 0d20 00000000 		.word	.LANCHOR13
 7929 0d24 00000000 		.word	main_ram
 7930 0d28 00080800 		.word	526336
 7931 0d2c 00000000 		.word	.LANCHOR16
 7932 0d30 00000000 		.word	.LANCHOR10
 7933 0d34 00000000 		.word	StateWhileOn
 7934              	.L1123:
2861:src/keys.c    **** 		State2.arrow = 0;
 7935              		.loc 1 2861 3 is_stmt 1 view .LVU2507
 7936              	.LVL668:
 7937              	.LBB843:
 7938              	.LBI843:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7939              		.loc 1 111 13 view .LVU2508
 7940              	.LBB844:
 112:src/keys.c    **** }
 7941              		.loc 1 112 2 view .LVU2509
 112:src/keys.c    **** }
 7942              		.loc 1 112 16 is_stmt 0 view .LVU2510
ARM GAS  /tmp/ccczu93l.s 			page 237


 7943 0d38 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 7944              	.LVL669:
 112:src/keys.c    **** }
 7945              		.loc 1 112 16 view .LVU2511
 7946 0d3c 3268     		ldr	r2, [r6]
 7947 0d3e 032C     		cmp	r4, #3
 7948              	.LBE844:
 7949              	.LBE843:
2862:src/keys.c    **** 		return STATE_UNFINISHED;
 7950              		.loc 1 2862 16 view .LVU2512
 7951 0d40 60F38201 		bfi	r1, r0, #2, #1
 7952              	.LBB847:
 7953              	.LBB845:
 112:src/keys.c    **** }
 7954              		.loc 1 112 16 view .LVU2513
 7955 0d44 18BF     		it	ne
 7956 0d46 0323     		movne	r3, #3
 7957              	.LBE845:
 7958              	.LBE847:
2862:src/keys.c    **** 		return STATE_UNFINISHED;
 7959              		.loc 1 2862 16 view .LVU2514
 7960 0d48 88F81510 		strb	r1, [r8, #21]
 7961              	.LBB848:
 7962              	.LBB846:
 112:src/keys.c    **** }
 7963              		.loc 1 112 16 view .LVU2515
 7964 0d4c 88F81030 		strb	r3, [r8, #16]
 7965              	.LVL670:
 112:src/keys.c    **** }
 7966              		.loc 1 112 16 view .LVU2516
 7967              	.LBE846:
 7968              	.LBE848:
2862:src/keys.c    **** 		return STATE_UNFINISHED;
 7969              		.loc 1 2862 3 is_stmt 1 view .LVU2517
2863:src/keys.c    **** 	}
 7970              		.loc 1 2863 3 view .LVU2518
2863:src/keys.c    **** 	}
 7971              		.loc 1 2863 10 is_stmt 0 view .LVU2519
 7972 0d50 4FF0330B 		mov	fp, #51
 7973 0d54 FFF7ADB9 		b	.L565
 7974              	.LVL671:
 7975              	.L1149:
 7976              	.LBB849:
 7977              	.LBB753:
1350:src/keys.c    **** 	}
 7978              		.loc 1 1350 3 is_stmt 1 view .LVU2520
1350:src/keys.c    **** 	}
 7979              		.loc 1 1350 6 is_stmt 0 view .LVU2521
 7980 0d58 B8F80800 		ldrh	r0, [r8, #8]
 7981              	.LVL672:
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7982              		.loc 1 1379 2 is_stmt 1 view .LVU2522
 7983              	.L598:
1380:src/keys.c    **** fin:		set_pc(rawpc);
 7984              		.loc 1 1380 3 view .LVU2523
1380:src/keys.c    **** fin:		set_pc(rawpc);
 7985              		.loc 1 1380 11 is_stmt 0 view .LVU2524
ARM GAS  /tmp/ccczu93l.s 			page 238


 7986 0d5c FFF7FEFF 		bl	find_user_pc
 7987              	.LVL673:
 7988              	.L607:
1381:src/keys.c    **** fin2:		State2.gtodot = 0;
 7989              		.loc 1 1381 7 is_stmt 1 view .LVU2525
 7990 0d60 FFF7FEFF 		bl	set_pc
 7991              	.LVL674:
 7992              	.L611:
1382:src/keys.c    **** 		State2.digval = 0;
 7993              		.loc 1 1382 8 view .LVU2526
1382:src/keys.c    **** 		State2.digval = 0;
 7994              		.loc 1 1382 22 is_stmt 0 view .LVU2527
 7995 0d64 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 7996 0d68 3268     		ldr	r2, [r6]
1383:src/keys.c    **** 		State2.numdigit = 0;
 7997              		.loc 1 1383 17 view .LVU2528
 7998 0d6a 0023     		movs	r3, #0
1382:src/keys.c    **** 		State2.digval = 0;
 7999              		.loc 1 1382 22 view .LVU2529
 8000 0d6c 6FF30001 		bfc	r1, #0, #1
 8001 0d70 88F81510 		strb	r1, [r8, #21]
1383:src/keys.c    **** 		State2.numdigit = 0;
 8002              		.loc 1 1383 3 is_stmt 1 view .LVU2530
1383:src/keys.c    **** 		State2.numdigit = 0;
 8003              		.loc 1 1383 17 is_stmt 0 view .LVU2531
 8004 0d74 A8F80830 		strh	r3, [r8, #8]	@ movhi
1384:src/keys.c    **** 	}
 8005              		.loc 1 1384 3 is_stmt 1 view .LVU2532
1384:src/keys.c    **** 	}
 8006              		.loc 1 1384 19 is_stmt 0 view .LVU2533
 8007 0d78 88F80B30 		strb	r3, [r8, #11]
 8008              	.LBE753:
 8009              	.LBE849:
2838:src/keys.c    **** 
 8010              		.loc 1 2838 10 view .LVU2534
 8011 0d7c 4FF0330B 		mov	fp, #51
 8012 0d80 FFF797B9 		b	.L565
 8013              	.LVL675:
 8014              	.L1153:
 8015              	.LBB850:
 8016              	.LBB795:
2479:src/keys.c    **** 			n = max;
 8017              		.loc 1 2479 3 is_stmt 1 view .LVU2535
2479:src/keys.c    **** 			n = max;
 8018              		.loc 1 2479 6 is_stmt 0 view .LVU2536
 8019 0d84 191F     		subs	r1, r3, #4
 8020              	.LVL676:
2479:src/keys.c    **** 			n = max;
 8021              		.loc 1 2479 6 view .LVU2537
 8022 0d86 012B     		cmp	r3, #1
 8023 0d88 18BF     		it	ne
 8024 0d8a 0A46     		movne	r2, r1
 8025              	.LVL677:
2479:src/keys.c    **** 			n = max;
 8026              		.loc 1 2479 6 view .LVU2538
 8027 0d8c 03E7     		b	.L644
 8028              	.LVL678:
ARM GAS  /tmp/ccczu93l.s 			page 239


 8029              	.L1143:
2479:src/keys.c    **** 			n = max;
 8030              		.loc 1 2479 6 view .LVU2539
 8031              	.LBE795:
 8032              	.LBE850:
 8033              	.LBB851:
 8034              	.LBB754:
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8035              		.loc 1 1333 44 is_stmt 1 view .LVU2540
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8036              		.loc 1 1333 52 is_stmt 0 view .LVU2541
 8037 0d8e 0120     		movs	r0, #1
 8038 0d90 FFF7FEFF 		bl	gtodot_digit
 8039              	.LVL679:
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8040              		.loc 1 1379 2 is_stmt 1 view .LVU2542
 8041              	.LBE754:
 8042              	.LBE851:
2838:src/keys.c    **** 
 8043              		.loc 1 2838 10 is_stmt 0 view .LVU2543
 8044 0d94 4FF0330B 		mov	fp, #51
 8045 0d98 3268     		ldr	r2, [r6]
 8046 0d9a FFF78AB9 		b	.L565
 8047              	.LVL680:
 8048              	.L677:
2890:src/keys.c    **** 
 8049              		.loc 1 2890 3 is_stmt 1 view .LVU2544
 8050              	.LBB852:
 8051              	.LBI852:
2370:src/keys.c    **** 	enum shifts shift = reset_shift();
 8052              		.loc 1 2370 12 view .LVU2545
 8053              	.LBB853:
2371:src/keys.c    **** 	unsigned int ch = 0;
 8054              		.loc 1 2371 2 view .LVU2546
 8055              	.LBB854:
 8056              	.LBI854:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8057              		.loc 1 104 13 view .LVU2547
 8058              	.LBE854:
 8059              	.LBE853:
 8060              	.LBE852:
 8061              	.LBE1246:
 8062              	.LBE1320:
 105:src/keys.c    **** }
 8063              		.loc 1 105 2 view .LVU2548
 8064              	.LBB1321:
 8065              	.LBB1247:
 8066              	.LBB892:
 8067              	.LBB882:
 8068              	.LBB861:
 8069              	.LBB855:
 8070              	.LBI855:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 8071              		.loc 1 94 20 view .LVU2549
 8072              	.LBB856:
  95:src/keys.c    **** 	State2.shifts = shift;
 8073              		.loc 1 95 2 view .LVU2550
ARM GAS  /tmp/ccczu93l.s 			page 240


 8074              	.LBB857:
 8075              	.LBI857:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8076              		.loc 1 86 13 view .LVU2551
 8077              	.LBB858:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8078              		.loc 1 87 2 view .LVU2552
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8079              		.loc 1 87 18 is_stmt 0 view .LVU2553
 8080 0d9e FFF7FEFF 		bl	shift_down
 8081              	.LVL681:
  88:src/keys.c    **** }
 8082              		.loc 1 88 2 is_stmt 1 view .LVU2554
  88:src/keys.c    **** }
 8083              		.loc 1 88 52 is_stmt 0 view .LVU2555
 8084 0da2 0146     		mov	r1, r0
 8085 0da4 08B9     		cbnz	r0, .L674
 8086 0da6 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 8087              	.L674:
 8088              	.LVL682:
  88:src/keys.c    **** }
 8089              		.loc 1 88 52 view .LVU2556
 8090              	.LBE858:
 8091              	.LBE857:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8092              		.loc 1 96 2 is_stmt 1 view .LVU2557
 8093              	.LBE856:
 8094              	.LBE855:
 8095              	.LBE861:
2375:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8096              		.loc 1 2375 5 is_stmt 0 view .LVU2558
 8097 0daa 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 8098              	.LBB862:
 8099              	.LBB860:
 8100              	.LBB859:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8101              		.loc 1 96 16 view .LVU2559
 8102 0dae 0023     		movs	r3, #0
 8103 0db0 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 8104              		.loc 1 98 2 is_stmt 1 view .LVU2560
 8105              	.LVL683:
  98:src/keys.c    **** }
 8106              		.loc 1 98 2 is_stmt 0 view .LVU2561
 8107              	.LBE859:
 8108              	.LBE860:
 8109              	.LBE862:
2372:src/keys.c    **** 	unsigned int opcode;
 8110              		.loc 1 2372 2 is_stmt 1 view .LVU2562
2373:src/keys.c    **** 
 8111              		.loc 1 2373 2 view .LVU2563
2375:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8112              		.loc 1 2375 2 view .LVU2564
2375:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8113              		.loc 1 2375 5 is_stmt 0 view .LVU2565
 8114 0db4 0028     		cmp	r0, #0
 8115 0db6 40F05B83 		bne	.L1161
ARM GAS  /tmp/ccczu93l.s 			page 241


2384:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 8116              		.loc 1 2384 2 is_stmt 1 view .LVU2566
 8117 0dba 102C     		cmp	r4, #16
 8118 0dbc 00F0E484 		beq	.L681
 8119 0dc0 242C     		cmp	r4, #36
 8120 0dc2 00F0BA84 		beq	.L682
 8121 0dc6 0C2C     		cmp	r4, #12
 8122 0dc8 00F00085 		beq	.L1162
 8123              	.L683:
2417:src/keys.c    **** 	if (ch == 0)
 8124              		.loc 1 2417 2 view .LVU2567
 8125              	.LBB863:
 8126              	.LBB864:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 8127              		.loc 1 436 6 is_stmt 0 view .LVU2568
 8128 0dcc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8129              	.LVL684:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 8130              		.loc 1 436 6 view .LVU2569
 8131              	.LBE864:
 8132              	.LBI863:
 386:src/keys.c    **** {
 8133              		.loc 1 386 12 is_stmt 1 view .LVU2570
 8134              	.LBB869:
 388:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 8135              		.loc 1 388 2 view .LVU2571
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 8136              		.loc 1 436 2 view .LVU2572
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 8137              		.loc 1 436 5 is_stmt 0 view .LVU2573
 8138 0dd0 DB06     		lsls	r3, r3, #27
 8139 0dd2 03D5     		bpl	.L687
 437:src/keys.c    **** 			shift = SHIFT_LC_N;
 8140              		.loc 1 437 3 is_stmt 1 view .LVU2574
 437:src/keys.c    **** 			shift = SHIFT_LC_N;
 8141              		.loc 1 437 6 is_stmt 0 view .LVU2575
 8142 0dd4 0029     		cmp	r1, #0
 8143 0dd6 41F03980 		bne	.L1163
 438:src/keys.c    **** 		else if (shift == SHIFT_G)
 8144              		.loc 1 438 10 view .LVU2576
 8145 0dda 0421     		movs	r1, #4
 8146              	.LVL685:
 8147              	.L687:
 442:src/keys.c    **** }
 8148              		.loc 1 442 2 is_stmt 1 view .LVU2577
 8149              	.LBB865:
 8150              	.LBI865:
 121:src/keys.c    **** {
 8151              		.loc 1 121 12 view .LVU2578
 8152              	.LBB866:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8153              		.loc 1 123 2 view .LVU2579
 133:src/keys.c    **** }
 8154              		.loc 1 133 2 view .LVU2580
 133:src/keys.c    **** }
 8155              		.loc 1 133 23 is_stmt 0 view .LVU2581
 8156 0ddc AE4B     		ldr	r3, .L1210
ARM GAS  /tmp/ccczu93l.s 			page 242


 8157              	.LBE866:
 8158              	.LBE865:
 442:src/keys.c    **** }
 8159              		.loc 1 442 49 view .LVU2582
 8160 0dde AF4A     		ldr	r2, .L1210+4
 8161              	.LBB868:
 8162              	.LBB867:
 133:src/keys.c    **** }
 8163              		.loc 1 133 23 view .LVU2583
 8164 0de0 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8165              	.LBE867:
 8166              	.LBE868:
 442:src/keys.c    **** }
 8167              		.loc 1 442 49 view .LVU2584
 8168 0de2 0620     		movs	r0, #6
 8169 0de4 00FB0323 		mla	r3, r0, r3, r2
 8170              	.LBE869:
 8171              	.LBE863:
2417:src/keys.c    **** 	if (ch == 0)
 8172              		.loc 1 2417 5 view .LVU2585
 8173 0de8 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 8174              	.LVL686:
2418:src/keys.c    **** 		return STATE_UNFINISHED;
 8175              		.loc 1 2418 2 is_stmt 1 view .LVU2586
2418:src/keys.c    **** 		return STATE_UNFINISHED;
 8176              		.loc 1 2418 5 is_stmt 0 view .LVU2587
 8177 0dea 0028     		cmp	r0, #0
 8178 0dec 00F03685 		beq	.L1164
 8179              	.L680:
2421:src/keys.c    **** 		State2.digval = ch;
 8180              		.loc 1 2421 2 is_stmt 1 view .LVU2588
2421:src/keys.c    **** 		State2.digval = ch;
 8181              		.loc 1 2421 12 is_stmt 0 view .LVU2589
 8182 0df0 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2421:src/keys.c    **** 		State2.digval = ch;
 8183              		.loc 1 2421 5 view .LVU2590
 8184 0df4 002B     		cmp	r3, #0
 8185 0df6 00F02785 		beq	.L1165
2425:src/keys.c    **** 		State2.digval2 = ch;
 8186              		.loc 1 2425 9 is_stmt 1 view .LVU2591
2425:src/keys.c    **** 		State2.digval2 = ch;
 8187              		.loc 1 2425 12 is_stmt 0 view .LVU2592
 8188 0dfa 012B     		cmp	r3, #1
 8189 0dfc 01F05F80 		beq	.L1166
2430:src/keys.c    **** 
 8190              		.loc 1 2430 2 is_stmt 1 view .LVU2593
 8191              	.LBB871:
 8192              	.LBI871:
2363:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 8193              		.loc 1 2363 13 view .LVU2594
 8194              	.LBB872:
2365:src/keys.c    **** 	if (! State2.alphas )
 8195              		.loc 1 2365 2 view .LVU2595
2365:src/keys.c    **** 	if (! State2.alphas )
 8196              		.loc 1 2365 15 is_stmt 0 view .LVU2596
 8197 0e00 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2366:src/keys.c    **** 		State2.alphashift = 0;
ARM GAS  /tmp/ccczu93l.s 			page 243


 8198              		.loc 1 2366 6 view .LVU2597
 8199 0e04 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2365:src/keys.c    **** 	if (! State2.alphas )
 8200              		.loc 1 2365 15 view .LVU2598
 8201 0e08 6FF3C302 		bfc	r2, #3, #1
 8202 0e0c 88F81520 		strb	r2, [r8, #21]
2366:src/keys.c    **** 		State2.alphashift = 0;
 8203              		.loc 1 2366 2 is_stmt 1 view .LVU2599
2366:src/keys.c    **** 		State2.alphashift = 0;
 8204              		.loc 1 2366 5 is_stmt 0 view .LVU2600
 8205 0e10 13F00802 		ands	r2, r3, #8
2367:src/keys.c    **** }
 8206              		.loc 1 2367 3 is_stmt 1 view .LVU2601
2367:src/keys.c    **** }
 8207              		.loc 1 2367 21 is_stmt 0 view .LVU2602
 8208 0e14 04BF     		itt	eq
 8209 0e16 62F30413 		bfieq	r3, r2, #4, #1
 8210 0e1a 88F81630 		strbeq	r3, [r8, #22]
 8211              	.LVL687:
 8212              	.L686:
2367:src/keys.c    **** }
 8213              		.loc 1 2367 21 view .LVU2603
 8214              	.LBE872:
 8215              	.LBE871:
2433:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8216              		.loc 1 2433 2 is_stmt 1 view .LVU2604
2435:src/keys.c    **** }
 8217              		.loc 1 2435 2 view .LVU2605
2433:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8218              		.loc 1 2433 21 is_stmt 0 view .LVU2606
 8219 0e1e 98F81FB0 		ldrb	fp, [r8, #31]	@ zero_extendqisi2
2434:src/keys.c    **** 	return opcode;
 8220              		.loc 1 2434 17 view .LVU2607
 8221 0e22 B8F80820 		ldrh	r2, [r8, #8]
2434:src/keys.c    **** 	return opcode;
 8222              		.loc 1 2434 34 view .LVU2608
 8223 0e26 98F80A30 		ldrb	r3, [r8, #10]	@ zero_extendqisi2
2433:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8224              		.loc 1 2433 29 view .LVU2609
 8225 0e2a 4FEA0B2B 		lsl	fp, fp, #8
2433:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8226              		.loc 1 2433 18 view .LVU2610
 8227 0e2e 0BF5704B 		add	fp, fp, #61440
2434:src/keys.c    **** 	return opcode;
 8228              		.loc 1 2434 9 view .LVU2611
 8229 0e32 9344     		add	fp, fp, r2
2434:src/keys.c    **** 	return opcode;
 8230              		.loc 1 2434 25 view .LVU2612
 8231 0e34 0BEB034B 		add	fp, fp, r3, lsl #16
2433:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8232              		.loc 1 2433 9 view .LVU2613
 8233 0e38 0BEB006B 		add	fp, fp, r0, lsl #24
2435:src/keys.c    **** }
 8234              		.loc 1 2435 9 view .LVU2614
 8235 0e3c FFF7FCBA 		b	.L595
 8236              	.LVL688:
 8237              	.L1160:
ARM GAS  /tmp/ccczu93l.s 			page 244


2435:src/keys.c    **** }
 8238              		.loc 1 2435 9 view .LVU2615
 8239              	.LBE882:
 8240              	.LBE892:
2878:src/keys.c    **** 		if (is_bad_cmdline())
 8241              		.loc 1 2878 2 is_stmt 1 view .LVU2616
2878:src/keys.c    **** 		if (is_bad_cmdline())
 8242              		.loc 1 2878 5 is_stmt 0 view .LVU2617
 8243 0e40 BBF1000F 		cmp	fp, #0
 8244 0e44 7FF42CAF 		bne	.L661
 8245 0e48 FFF730BA 		b	.L675
 8246              	.LVL689:
 8247              	.L1144:
 8248              	.LBB893:
 8249              	.LBB755:
1334:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8250              		.loc 1 1334 44 is_stmt 1 view .LVU2618
1334:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8251              		.loc 1 1334 52 is_stmt 0 view .LVU2619
 8252 0e4c 0220     		movs	r0, #2
 8253 0e4e FFF7FEFF 		bl	gtodot_digit
 8254              	.LVL690:
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8255              		.loc 1 1379 2 is_stmt 1 view .LVU2620
 8256              	.LBE755:
 8257              	.LBE893:
2838:src/keys.c    **** 
 8258              		.loc 1 2838 10 is_stmt 0 view .LVU2621
 8259 0e52 4FF0330B 		mov	fp, #51
 8260 0e56 3268     		ldr	r2, [r6]
 8261 0e58 FFF72BB9 		b	.L565
 8262              	.LVL691:
 8263              	.L629:
 8264              	.LBB894:
 8265              	.LBB734:
1925:src/keys.c    **** 	}
 8266              		.loc 1 1925 3 is_stmt 1 view .LVU2622
1925:src/keys.c    **** 	}
 8267              		.loc 1 1925 10 is_stmt 0 view .LVU2623
 8268 0e5c 0AF12000 		add	r0, r10, #32
 8269 0e60 42EA0020 		orr	r0, r2, r0, lsl #8
 8270 0e64 8346     		mov	fp, r0
 8271              	.LVL692:
1925:src/keys.c    **** 	}
 8272              		.loc 1 1925 10 view .LVU2624
 8273 0e66 FFF759BB 		b	.L622
 8274              	.LVL693:
 8275              	.L1157:
1925:src/keys.c    **** 	}
 8276              		.loc 1 1925 10 view .LVU2625
 8277              	.LBE734:
 8278              	.LBE894:
 8279              	.LBB895:
 8280              	.LBB828:
1289:src/keys.c    **** 
 8281              		.loc 1 1289 3 is_stmt 1 view .LVU2626
1289:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 245


 8282              		.loc 1 1289 25 is_stmt 0 view .LVU2627
 8283 0e6a 8D4A     		ldr	r2, .L1210+8
 8284 0e6c 0AEB4303 		add	r3, r10, r3, lsl #1
 8285 0e70 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8286              	.LVL694:
1289:src/keys.c    **** 
 8287              		.loc 1 1289 25 view .LVU2628
 8288 0e74 FFF7E0BA 		b	.L595
 8289              	.LVL695:
 8290              	.L1154:
1289:src/keys.c    **** 
 8291              		.loc 1 1289 25 view .LVU2629
 8292              	.LBE828:
 8293              	.LBE895:
 8294              	.LBB896:
 8295              	.LBB796:
2483:src/keys.c    **** 			n = -2;
 8296              		.loc 1 2483 3 is_stmt 1 view .LVU2630
2483:src/keys.c    **** 			n = -2;
 8297              		.loc 1 2483 6 is_stmt 0 view .LVU2631
 8298 0e78 023B     		subs	r3, r3, #2
 8299              	.LVL696:
2484:src/keys.c    **** 	}
 8300              		.loc 1 2484 6 view .LVU2632
 8301 0e7a 9342     		cmp	r3, r2
 8302 0e7c D4BF     		ite	le
 8303 0e7e 1A46     		movle	r2, r3
 8304              	.LVL697:
2484:src/keys.c    **** 	}
 8305              		.loc 1 2484 6 view .LVU2633
 8306 0e80 6FF00102 		mvngt	r2, #1
 8307 0e84 87E6     		b	.L644
 8308              	.LVL698:
 8309              	.L1145:
2484:src/keys.c    **** 	}
 8310              		.loc 1 2484 6 view .LVU2634
 8311              	.LBE796:
 8312              	.LBE896:
 8313              	.LBB897:
 8314              	.LBB756:
1335:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8315              		.loc 1 1335 44 is_stmt 1 view .LVU2635
1335:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8316              		.loc 1 1335 52 is_stmt 0 view .LVU2636
 8317 0e86 0320     		movs	r0, #3
 8318 0e88 FFF7FEFF 		bl	gtodot_digit
 8319              	.LVL699:
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8320              		.loc 1 1379 2 is_stmt 1 view .LVU2637
 8321              	.LBE756:
 8322              	.LBE897:
2838:src/keys.c    **** 
 8323              		.loc 1 2838 10 is_stmt 0 view .LVU2638
 8324 0e8c 4FF0330B 		mov	fp, #51
 8325 0e90 3268     		ldr	r2, [r6]
 8326 0e92 FFF70EB9 		b	.L565
 8327              	.LVL700:
ARM GAS  /tmp/ccczu93l.s 			page 246


 8328              	.L1159:
 8329              	.LBB898:
 8330              	.LBB668:
 265:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 8331              		.loc 1 265 74 view .LVU2639
 8332 0e96 D8F81430 		ldr	r3, [r8, #20]
 8333 0e9a 824A     		ldr	r2, .L1210+12
 8334 0e9c 1342     		tst	r3, r2
 8335 0e9e 3FF4FFAE 		beq	.L661
 268:src/keys.c    ****     /*
 8336              		.loc 1 268 3 is_stmt 1 view .LVU2640
 268:src/keys.c    ****     /*
 8337              		.loc 1 268 23 is_stmt 0 view .LVU2641
 8338 0ea2 814A     		ldr	r2, .L1210+16
 268:src/keys.c    ****     /*
 8339              		.loc 1 268 6 view .LVU2642
 8340 0ea4 1342     		tst	r3, r2
 8341 0ea6 3FF4C2A9 		beq	.L894
 8342 0eaa B2E6     		b	.L663
 8343              	.LVL701:
 8344              	.L913:
 8345              	.LBB662:
 324:src/keys.c    **** #ifndef WINGUI
 8346              		.loc 1 324 8 view .LVU2643
 8347 0eac 7F4B     		ldr	r3, .L1210+20
 330:src/keys.c    ****   }
 8348              		.loc 1 330 9 view .LVU2644
 8349 0eae 0C22     		movs	r2, #12
 326:src/keys.c    **** #else
 8350              		.loc 1 326 27 view .LVU2645
 8351 0eb0 4FF0010C 		mov	ip, #1
 8352 0eb4 FFF7CAB9 		b	.L666
 8353              	.LVL702:
 8354              	.L908:
 326:src/keys.c    **** #else
 8355              		.loc 1 326 27 view .LVU2646
 8356              	.LBE662:
 8357              	.LBE668:
 8358              	.LBE898:
 8359              	.LBB899:
 8360              	.LBB797:
 8361              	.LBB791:
2491:src/keys.c    **** 		if (nn <= 9)
 8362              		.loc 1 2491 7 view .LVU2647
 8363 0eb8 0A46     		mov	r2, r1
 8364              	.LVL703:
2491:src/keys.c    **** 		if (nn <= 9)
 8365              		.loc 1 2491 7 view .LVU2648
 8366 0eba 6CE6     		b	.L644
 8367              	.LVL704:
 8368              	.L1129:
2491:src/keys.c    **** 		if (nn <= 9)
 8369              		.loc 1 2491 7 view .LVU2649
 8370              	.LBE791:
 8371              	.LBE797:
 8372              	.LBE899:
2893:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 247


 8373              		.loc 1 2893 3 is_stmt 1 view .LVU2650
 8374              	.LBB900:
 8375              	.LBI900:
2553:src/keys.c    **** 	unsigned int pc = State2.digval;
 8376              		.loc 1 2553 12 view .LVU2651
 8377              	.LBB901:
2554:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8378              		.loc 1 2554 2 view .LVU2652
2556:src/keys.c    **** 	const int opcode = getprog(pc);
 8379              		.loc 1 2556 27 is_stmt 0 view .LVU2653
 8380 0ebc 262C     		cmp	r4, #38
2554:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8381              		.loc 1 2554 15 view .LVU2654
 8382 0ebe B8F808A0 		ldrh	r10, [r8, #8]
 8383              	.LVL705:
2555:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8384              		.loc 1 2555 2 is_stmt 1 view .LVU2655
2556:src/keys.c    **** 	const int opcode = getprog(pc);
 8385              		.loc 1 2556 27 is_stmt 0 view .LVU2656
 8386 0ec2 00F04783 		beq	.L918
 8387              	.LVL706:
 8388              	.LBB902:
 8389              	.LBI902:
 200:src/keys.c    **** {
 8390              		.loc 1 200 14 is_stmt 1 view .LVU2657
 8391              	.LBB903:
 202:src/keys.c    ****     // K00 - K05
 8392              		.loc 1 202 3 view .LVU2658
 223:src/keys.c    **** }
 8393              		.loc 1 223 3 view .LVU2659
 8394              	.LBB904:
 8395              	.LBI904:
 121:src/keys.c    **** {
 8396              		.loc 1 121 12 view .LVU2660
 8397              	.LBB905:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8398              		.loc 1 123 2 view .LVU2661
 133:src/keys.c    **** }
 8399              		.loc 1 133 2 view .LVU2662
 133:src/keys.c    **** }
 8400              		.loc 1 133 23 is_stmt 0 view .LVU2663
 8401 0ec6 744B     		ldr	r3, .L1210
 8402              	.LBE905:
 8403              	.LBE904:
 223:src/keys.c    **** }
 8404              		.loc 1 223 28 view .LVU2664
 8405 0ec8 794A     		ldr	r2, .L1210+24
 8406              	.LBB907:
 8407              	.LBB906:
 133:src/keys.c    **** }
 8408              		.loc 1 133 23 view .LVU2665
 8409 0eca 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8410              	.LBE906:
 8411              	.LBE907:
 223:src/keys.c    **** }
 8412              		.loc 1 223 10 view .LVU2666
 8413 0ecc 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 248


 8414              	.LBE903:
 8415              	.LBE902:
2556:src/keys.c    **** 	const int opcode = getprog(pc);
 8416              		.loc 1 2556 27 view .LVU2667
 8417 0ed0 2BF0800B 		bic	fp, fp, #128
 8418              	.L695:
 8419              	.LVL707:
2557:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8420              		.loc 1 2557 2 is_stmt 1 view .LVU2668
2557:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8421              		.loc 1 2557 21 is_stmt 0 view .LVU2669
 8422 0ed4 5046     		mov	r0, r10
 8423 0ed6 FFF7FEFF 		bl	getprog
 8424              	.LVL708:
2558:src/keys.c    **** 	const int direct = State2.runmode;
 8425              		.loc 1 2558 2 is_stmt 1 view .LVU2670
2558:src/keys.c    **** 	const int direct = State2.runmode;
 8426              		.loc 1 2558 20 is_stmt 0 view .LVU2671
 8427 0eda 00F47040 		and	r0, r0, #61440
 8428              	.LVL709:
2558:src/keys.c    **** 	const int direct = State2.runmode;
 8429              		.loc 1 2558 63 view .LVU2672
 8430 0ede B0F5704F 		cmp	r0, #61440
 8431 0ee2 00F08885 		beq	.L1167
 8432 0ee6 0022     		movs	r2, #0
 8433              	.L696:
 8434              	.LVL710:
2559:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8435              		.loc 1 2559 2 is_stmt 1 view .LVU2673
2559:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8436              		.loc 1 2559 27 is_stmt 0 view .LVU2674
 8437 0ee8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8438 0eec 0192     		str	r2, [sp, #4]
 8439              	.LVL711:
2559:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8440              		.loc 1 2559 27 view .LVU2675
 8441 0eee C3F38013 		ubfx	r3, r3, #6, #1
 8442 0ef2 0093     		str	r3, [sp]
 8443              	.LVL712:
2560:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8444              		.loc 1 2560 2 is_stmt 1 view .LVU2676
 8445              	.LBB908:
 8446              	.LBI908:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8447              		.loc 1 104 13 view .LVU2677
 8448              	.LBE908:
 8449              	.LBE901:
 8450              	.LBE900:
 8451              	.LBE1247:
 8452              	.LBE1321:
 105:src/keys.c    **** }
 8453              		.loc 1 105 2 view .LVU2678
 8454              	.LBB1322:
 8455              	.LBB1248:
 8456              	.LBB936:
 8457              	.LBB927:
 8458              	.LBB915:
ARM GAS  /tmp/ccczu93l.s 			page 249


 8459              	.LBB909:
 8460              	.LBI909:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 8461              		.loc 1 94 20 view .LVU2679
 8462              	.LBB910:
  95:src/keys.c    **** 	State2.shifts = shift;
 8463              		.loc 1 95 2 view .LVU2680
 8464              	.LBB911:
 8465              	.LBI911:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8466              		.loc 1 86 13 view .LVU2681
 8467              	.LBB912:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8468              		.loc 1 87 2 view .LVU2682
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8469              		.loc 1 87 18 is_stmt 0 view .LVU2683
 8470 0ef4 FFF7FEFF 		bl	shift_down
 8471              	.LVL713:
  88:src/keys.c    **** }
 8472              		.loc 1 88 2 is_stmt 1 view .LVU2684
  88:src/keys.c    **** }
 8473              		.loc 1 88 52 is_stmt 0 view .LVU2685
 8474 0ef8 019A     		ldr	r2, [sp, #4]
 8475 0efa 0346     		mov	r3, r0
 8476 0efc 08B9     		cbnz	r0, .L697
 8477 0efe 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8478              	.L697:
 8479              	.LVL714:
  88:src/keys.c    **** }
 8480              		.loc 1 88 52 view .LVU2686
 8481              	.LBE912:
 8482              	.LBE911:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8483              		.loc 1 96 2 is_stmt 1 view .LVU2687
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8484              		.loc 1 96 16 is_stmt 0 view .LVU2688
 8485 0f02 0021     		movs	r1, #0
 8486              	.LBE910:
 8487              	.LBE909:
 8488              	.LBE915:
2563:src/keys.c    **** 		// Digits take you to that segment
 8489              		.loc 1 2563 5 view .LVU2689
 8490 0f04 BBF1020F 		cmp	fp, #2
 8491              	.LBB916:
 8492              	.LBB914:
 8493              	.LBB913:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8494              		.loc 1 96 16 view .LVU2690
 8495 0f08 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 8496              		.loc 1 98 2 is_stmt 1 view .LVU2691
 8497              	.LVL715:
  98:src/keys.c    **** }
 8498              		.loc 1 98 2 is_stmt 0 view .LVU2692
 8499              	.LBE913:
 8500              	.LBE914:
 8501              	.LBE916:
ARM GAS  /tmp/ccczu93l.s 			page 250


2561:src/keys.c    **** 
 8502              		.loc 1 2561 2 is_stmt 1 view .LVU2693
2563:src/keys.c    **** 		// Digits take you to that segment
 8503              		.loc 1 2563 2 view .LVU2694
2563:src/keys.c    **** 		// Digits take you to that segment
 8504              		.loc 1 2563 5 is_stmt 0 view .LVU2695
 8505 0f0c 40F25C85 		bls	.L1168
2572:src/keys.c    **** 
 8506              		.loc 1 2572 2 is_stmt 1 view .LVU2696
2572:src/keys.c    **** 
 8507              		.loc 1 2572 12 is_stmt 0 view .LVU2697
 8508 0f10 44EA0323 		orr	r3, r4, r3, lsl #8
 8509              	.LVL716:
2572:src/keys.c    **** 
 8510              		.loc 1 2572 2 view .LVU2698
 8511 0f14 272B     		cmp	r3, #39
 8512 0f16 00F3CF80 		bgt	.L700
 8513 0f1a 042B     		cmp	r3, #4
 8514 0f1c 4ADD     		ble	.L702
 8515 0f1e 053B     		subs	r3, r3, #5
 8516 0f20 222B     		cmp	r3, #34
 8517 0f22 47D8     		bhi	.L702
 8518 0f24 DFE803F0 		tbb	[pc, r3]
 8519              	.L709:
 8520 0f28 3D       		.byte	(.L714-.L709)/2
 8521 0f29 4B       		.byte	(.L713-.L709)/2
 8522 0f2a 4B       		.byte	(.L713-.L709)/2
 8523 0f2b 46       		.byte	(.L702-.L709)/2
 8524 0f2c 46       		.byte	(.L702-.L709)/2
 8525 0f2d 46       		.byte	(.L702-.L709)/2
 8526 0f2e 46       		.byte	(.L702-.L709)/2
 8527 0f2f 12       		.byte	(.L921-.L709)/2
 8528 0f30 46       		.byte	(.L702-.L709)/2
 8529 0f31 46       		.byte	(.L702-.L709)/2
 8530 0f32 46       		.byte	(.L702-.L709)/2
 8531 0f33 71       		.byte	(.L712-.L709)/2
 8532 0f34 46       		.byte	(.L702-.L709)/2
 8533 0f35 66       		.byte	(.L711-.L709)/2
 8534 0f36 46       		.byte	(.L702-.L709)/2
 8535 0f37 46       		.byte	(.L702-.L709)/2
 8536 0f38 46       		.byte	(.L702-.L709)/2
 8537 0f39 46       		.byte	(.L702-.L709)/2
 8538 0f3a 46       		.byte	(.L702-.L709)/2
 8539 0f3b 31       		.byte	(.L710-.L709)/2
 8540 0f3c 46       		.byte	(.L702-.L709)/2
 8541 0f3d 46       		.byte	(.L702-.L709)/2
 8542 0f3e 46       		.byte	(.L702-.L709)/2
 8543 0f3f 46       		.byte	(.L702-.L709)/2
 8544 0f40 46       		.byte	(.L702-.L709)/2
 8545 0f41 46       		.byte	(.L702-.L709)/2
 8546 0f42 46       		.byte	(.L702-.L709)/2
 8547 0f43 46       		.byte	(.L702-.L709)/2
 8548 0f44 46       		.byte	(.L702-.L709)/2
 8549 0f45 46       		.byte	(.L702-.L709)/2
 8550 0f46 46       		.byte	(.L702-.L709)/2
 8551 0f47 46       		.byte	(.L702-.L709)/2
 8552 0f48 46       		.byte	(.L702-.L709)/2
ARM GAS  /tmp/ccczu93l.s 			page 251


 8553 0f49 46       		.byte	(.L702-.L709)/2
 8554 0f4a 52       		.byte	(.L708-.L709)/2
 8555 0f4b 00       		.p2align 1
 8556              	.L921:
2561:src/keys.c    **** 
 8557              		.loc 1 2561 6 view .LVU2699
 8558 0f4c 4FF0330B 		mov	fp, #51
 8559              	.LVL717:
 8560              	.L706:
2594:src/keys.c    **** 		break;
 8561              		.loc 1 2594 3 is_stmt 1 view .LVU2700
 8562 0f50 5046     		mov	r0, r10
 8563 0f52 FFF7FEFF 		bl	set_pc
 8564              	.LVL718:
2595:src/keys.c    **** 
 8565              		.loc 1 2595 3 view .LVU2701
 8566              	.L718:
2648:src/keys.c    **** 	State2.labellist = 0;
 8567              		.loc 1 2648 2 view .LVU2702
2649:src/keys.c    **** 	return check_confirm(op);
 8568              		.loc 1 2649 19 is_stmt 0 view .LVU2703
 8569 0f56 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2648:src/keys.c    **** 	State2.labellist = 0;
 8570              		.loc 1 2648 16 view .LVU2704
 8571 0f5a 0022     		movs	r2, #0
 8572              	.LBB917:
 8573              	.LBB918:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8574              		.loc 1 622 5 view .LVU2705
 8575 0f5c CBF30723 		ubfx	r3, fp, #8, #8
 8576              	.LBE918:
 8577              	.LBE917:
2649:src/keys.c    **** 	return check_confirm(op);
 8578              		.loc 1 2649 19 view .LVU2706
 8579 0f60 62F38201 		bfi	r1, r2, #2, #1
 8580              	.LBB923:
 8581              	.LBB919:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8582              		.loc 1 622 5 view .LVU2707
 8583 0f64 012B     		cmp	r3, #1
 8584              	.LBE919:
 8585              	.LBE923:
2649:src/keys.c    **** 	return check_confirm(op);
 8586              		.loc 1 2649 19 view .LVU2708
 8587 0f66 88F81710 		strb	r1, [r8, #23]
2648:src/keys.c    **** 	State2.labellist = 0;
 8588              		.loc 1 2648 16 view .LVU2709
 8589 0f6a A8F80820 		strh	r2, [r8, #8]	@ movhi
2649:src/keys.c    **** 	return check_confirm(op);
 8590              		.loc 1 2649 2 is_stmt 1 view .LVU2710
2650:src/keys.c    **** }
 8591              		.loc 1 2650 2 view .LVU2711
 8592              	.LVL719:
 8593              	.LBB924:
 8594              	.LBI917:
 621:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8595              		.loc 1 621 12 view .LVU2712
ARM GAS  /tmp/ccczu93l.s 			page 252


 8596              	.LBB920:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8597              		.loc 1 622 2 view .LVU2713
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8598              		.loc 1 622 5 is_stmt 0 view .LVU2714
 8599 0f6e 7FF463AA 		bne	.L595
 8600              	.LVL720:
 8601              	.L893:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8602              		.loc 1 622 5 view .LVU2715
 8603              	.LBE920:
 8604              	.LBE924:
 8605              	.LBE927:
 8606              	.LBE936:
 8607              	.LBB937:
 8608              	.LBB938:
 8609              	.LBB939:
 8610              	.LBB940:
 8611 0f72 5846     		mov	r0, fp
 8612 0f74 FFF7FEFF 		bl	check_confirm.part.0
 8613              	.LVL721:
 8614 0f78 8346     		mov	fp, r0
 8615              	.LVL722:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8616              		.loc 1 622 5 view .LVU2716
 8617 0f7a FFF75DBA 		b	.L595
 8618              	.LVL723:
 8619              	.L703:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8620              		.loc 1 622 5 view .LVU2717
 8621              	.LBE940:
 8622              	.LBE939:
 8623              	.LBE938:
 8624              	.LBE937:
 8625              	.LBB975:
 8626              	.LBB928:
2579:src/keys.c    **** 	case K_DOWN:				// Find next label
 8627              		.loc 1 2579 3 is_stmt 1 view .LVU2718
2579:src/keys.c    **** 	case K_DOWN:				// Find next label
 8628              		.loc 1 2579 8 is_stmt 0 view .LVU2719
 8629 0f7e 5046     		mov	r0, r10
 8630 0f80 0122     		movs	r2, #1
 8631 0f82 0021     		movs	r1, #0
 8632 0f84 FFF7FEFF 		bl	advance_to_next_label
 8633              	.LVL724:
 8634 0f88 8246     		mov	r10, r0
 8635              	.LVL725:
 8636              	.L710:
2582:src/keys.c    **** 		return STATE_UNFINISHED;
 8637              		.loc 1 2582 3 is_stmt 1 view .LVU2720
2582:src/keys.c    **** 		return STATE_UNFINISHED;
 8638              		.loc 1 2582 19 is_stmt 0 view .LVU2721
 8639 0f8a 0022     		movs	r2, #0
 8640 0f8c 5046     		mov	r0, r10
 8641 0f8e 0121     		movs	r1, #1
 8642 0f90 FFF7FEFF 		bl	advance_to_next_label
 8643              	.LVL726:
ARM GAS  /tmp/ccczu93l.s 			page 253


2583:src/keys.c    **** 
 8644              		.loc 1 2583 10 view .LVU2722
 8645 0f94 4FF0330B 		mov	fp, #51
 8646              	.LVL727:
2583:src/keys.c    **** 
 8647              		.loc 1 2583 10 view .LVU2723
 8648 0f98 3268     		ldr	r2, [r6]
2582:src/keys.c    **** 		return STATE_UNFINISHED;
 8649              		.loc 1 2582 17 view .LVU2724
 8650 0f9a A8F80800 		strh	r0, [r8, #8]	@ movhi
2583:src/keys.c    **** 
 8651              		.loc 1 2583 3 is_stmt 1 view .LVU2725
2583:src/keys.c    **** 
 8652              		.loc 1 2583 10 is_stmt 0 view .LVU2726
 8653 0f9e FFF788B8 		b	.L565
 8654              	.LVL728:
 8655              	.L714:
2612:src/keys.c    **** 		goto xeq_or_gto;
 8656              		.loc 1 2612 3 is_stmt 1 view .LVU2727
2612:src/keys.c    **** 		goto xeq_or_gto;
 8657              		.loc 1 2612 6 is_stmt 0 view .LVU2728
 8658 0fa2 02F5007B 		add	fp, r2, #512
 8659              	.LVL729:
2613:src/keys.c    **** 
 8660              		.loc 1 2613 3 is_stmt 1 view .LVU2729
 8661              	.L719:
2618:src/keys.c    **** 			break;
 8662              		.loc 1 2618 3 view .LVU2730
2618:src/keys.c    **** 			break;
 8663              		.loc 1 2618 6 is_stmt 0 view .LVU2731
 8664 0fa6 002A     		cmp	r2, #0
 8665 0fa8 D5D1     		bne	.L718
 8666              	.LVL730:
 8667              	.L720:
2618:src/keys.c    **** 			break;
 8668              		.loc 1 2618 6 view .LVU2732
 8669 0faa 3268     		ldr	r2, [r6]
2620:src/keys.c    **** #else
 8670              		.loc 1 2620 10 view .LVU2733
 8671 0fac 4FF0330B 		mov	fp, #51
 8672 0fb0 FFF77FB8 		b	.L565
 8673              	.LVL731:
 8674              	.L702:
2620:src/keys.c    **** #else
 8675              		.loc 1 2620 10 view .LVU2734
 8676 0fb4 3268     		ldr	r2, [r6]
2646:src/keys.c    **** 	}
 8677              		.loc 1 2646 10 view .LVU2735
 8678 0fb6 4FF0330B 		mov	fp, #51
 8679              	.LVL732:
2646:src/keys.c    **** 	}
 8680              		.loc 1 2646 10 view .LVU2736
 8681 0fba FFF77AB8 		b	.L565
 8682              	.LVL733:
 8683              	.L713:
2604:src/keys.c    **** 	  //#endif
 8684              		.loc 1 2604 3 is_stmt 1 view .LVU2737
ARM GAS  /tmp/ccczu93l.s 			page 254


2604:src/keys.c    **** 	  //#endif
 8685              		.loc 1 2604 38 is_stmt 0 view .LVU2738
 8686 0fbe 062C     		cmp	r4, #6
 8687 0fc0 40F2B11B 		movw	fp, #433
 8688              	.LVL734:
2604:src/keys.c    **** 	  //#endif
 8689              		.loc 1 2604 38 view .LVU2739
 8690 0fc4 08BF     		it	eq
 8691 0fc6 4FF4D97B 		moveq	fp, #434
 8692 0fca C1E7     		b	.L706
 8693              	.LVL735:
 8694              	.L708:
2634:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8695              		.loc 1 2634 3 is_stmt 1 view .LVU2740
2634:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8696              		.loc 1 2634 6 is_stmt 0 view .LVU2741
 8697 0fcc 009B     		ldr	r3, [sp]
 8698 0fce 002B     		cmp	r3, #0
 8699 0fd0 EBD0     		beq	.L720
2634:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8700              		.loc 1 2634 14 view .LVU2742
 8701 0fd2 002A     		cmp	r2, #0
 8702 0fd4 E9D0     		beq	.L720
2635:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8703              		.loc 1 2635 4 is_stmt 1 view .LVU2743
 8704 0fd6 5146     		mov	r1, r10
 8705 0fd8 0120     		movs	r0, #1
 8706 0fda FFF7FEFF 		bl	cmdgtocommon
 8707              	.LVL736:
2636:src/keys.c    **** 			break;
 8708              		.loc 1 2636 4 view .LVU2744
2637:src/keys.c    **** 		}
 8709              		.loc 1 2637 4 view .LVU2745
2648:src/keys.c    **** 	State2.labellist = 0;
 8710              		.loc 1 2648 2 view .LVU2746
2649:src/keys.c    **** 	return check_confirm(op);
 8711              		.loc 1 2649 19 is_stmt 0 view .LVU2747
 8712 0fde 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2648:src/keys.c    **** 	State2.labellist = 0;
 8713              		.loc 1 2648 16 view .LVU2748
 8714 0fe2 0023     		movs	r3, #0
2649:src/keys.c    **** 	return check_confirm(op);
 8715              		.loc 1 2649 19 view .LVU2749
 8716 0fe4 63F38202 		bfi	r2, r3, #2, #1
 8717 0fe8 88F81720 		strb	r2, [r8, #23]
2648:src/keys.c    **** 	State2.labellist = 0;
 8718              		.loc 1 2648 16 view .LVU2750
 8719 0fec A8F80830 		strh	r3, [r8, #8]	@ movhi
2649:src/keys.c    **** 	return check_confirm(op);
 8720              		.loc 1 2649 2 is_stmt 1 view .LVU2751
2650:src/keys.c    **** }
 8721              		.loc 1 2650 2 view .LVU2752
 8722              	.LVL737:
 8723              	.LBB925:
 621:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8724              		.loc 1 621 12 view .LVU2753
 8725              	.LBB921:
ARM GAS  /tmp/ccczu93l.s 			page 255


 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8726              		.loc 1 622 2 view .LVU2754
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8727              		.loc 1 622 2 is_stmt 0 view .LVU2755
 8728              	.LBE921:
 8729              	.LBE925:
 8730              	.LBE928:
 8731              	.LBE975:
 8732              	.LBE1248:
 8733              	.LBE1322:
3143:src/keys.c    ****     case STATE_SST:
 8734              		.loc 1 3143 5 is_stmt 1 view .LVU2756
 8735 0ff0 FFF7CDB9 		b	.L575
 8736              	.LVL738:
 8737              	.L711:
 8738              	.LBB1323:
 8739              	.LBB1249:
 8740              	.LBB976:
 8741              	.LBB929:
2586:src/keys.c    **** 		return STATE_UNFINISHED;
 8742              		.loc 1 2586 3 view .LVU2757
2586:src/keys.c    **** 		return STATE_UNFINISHED;
 8743              		.loc 1 2586 19 is_stmt 0 view .LVU2758
 8744 0ff4 5046     		mov	r0, r10
 8745 0ff6 0021     		movs	r1, #0
 8746 0ff8 FFF7FEFF 		bl	advance_to_previous_label
 8747              	.LVL739:
2587:src/keys.c    **** 
 8748              		.loc 1 2587 10 view .LVU2759
 8749 0ffc 4FF0330B 		mov	fp, #51
 8750              	.LVL740:
2587:src/keys.c    **** 
 8751              		.loc 1 2587 10 view .LVU2760
 8752 1000 3268     		ldr	r2, [r6]
2586:src/keys.c    **** 		return STATE_UNFINISHED;
 8753              		.loc 1 2586 17 view .LVU2761
 8754 1002 A8F80800 		strh	r0, [r8, #8]	@ movhi
2587:src/keys.c    **** 
 8755              		.loc 1 2587 3 is_stmt 1 view .LVU2762
2587:src/keys.c    **** 
 8756              		.loc 1 2587 10 is_stmt 0 view .LVU2763
 8757 1006 FFF754B8 		b	.L565
 8758              	.LVL741:
 8759              	.L712:
2648:src/keys.c    **** 	State2.labellist = 0;
 8760              		.loc 1 2648 2 is_stmt 1 view .LVU2764
2649:src/keys.c    **** 	return check_confirm(op);
 8761              		.loc 1 2649 19 is_stmt 0 view .LVU2765
 8762 100a 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 8763 100e 3268     		ldr	r2, [r6]
2648:src/keys.c    **** 	State2.labellist = 0;
 8764              		.loc 1 2648 16 view .LVU2766
 8765 1010 0023     		movs	r3, #0
2649:src/keys.c    **** 	return check_confirm(op);
 8766              		.loc 1 2649 19 view .LVU2767
 8767 1012 63F38201 		bfi	r1, r3, #2, #1
 8768 1016 88F81710 		strb	r1, [r8, #23]
ARM GAS  /tmp/ccczu93l.s 			page 256


2648:src/keys.c    **** 	State2.labellist = 0;
 8769              		.loc 1 2648 16 view .LVU2768
 8770 101a A8F80830 		strh	r3, [r8, #8]	@ movhi
2649:src/keys.c    **** 	return check_confirm(op);
 8771              		.loc 1 2649 2 is_stmt 1 view .LVU2769
2650:src/keys.c    **** }
 8772              		.loc 1 2650 2 view .LVU2770
 8773              	.LVL742:
 8774              	.LBB926:
 621:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8775              		.loc 1 621 12 view .LVU2771
 8776              	.LBB922:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8777              		.loc 1 622 2 view .LVU2772
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 8778              		.loc 1 622 2 is_stmt 0 view .LVU2773
 8779              	.LBE922:
 8780              	.LBE926:
 8781              	.LBE929:
 8782              	.LBE976:
 8783              	.LBE1249:
 8784              	.LBE1323:
3143:src/keys.c    ****     case STATE_SST:
 8785              		.loc 1 3143 5 is_stmt 1 view .LVU2774
 8786              	.LBB1324:
 8787              	.LBB1250:
 8788              	.LBB977:
 8789              	.LBB930:
2561:src/keys.c    **** 
 8790              		.loc 1 2561 6 is_stmt 0 view .LVU2775
 8791 101e 4FF0330B 		mov	fp, #51
 8792              	.LVL743:
2561:src/keys.c    **** 
 8793              		.loc 1 2561 6 view .LVU2776
 8794 1022 FFF746B8 		b	.L565
 8795              	.LVL744:
 8796              	.L638:
2561:src/keys.c    **** 
 8797              		.loc 1 2561 6 view .LVU2777
 8798              	.LBE930:
 8799              	.LBE977:
 8800              	.LBB978:
 8801              	.LBB735:
1944:src/keys.c    **** 		return STATE_UNFINISHED;
 8802              		.loc 1 1944 3 is_stmt 1 view .LVU2778
 8803              	.LBB728:
 8804              	.LBI728:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 8805              		.loc 1 503 13 view .LVU2779
 8806              	.LBB729:
 504:src/keys.c    **** 		return;
 8807              		.loc 1 504 2 view .LVU2780
 504:src/keys.c    **** 		return;
 8808              		.loc 1 504 6 is_stmt 0 view .LVU2781
 8809 1026 FFF7FEFF 		bl	is_bad_cmdline
 8810              	.LVL745:
 504:src/keys.c    **** 		return;
ARM GAS  /tmp/ccczu93l.s 			page 257


 8811              		.loc 1 504 5 view .LVU2782
 8812 102a 0446     		mov	r4, r0
 8813 102c 0028     		cmp	r0, #0
 8814 102e 40F00284 		bne	.L1169
 8815 1032 5FFA8AF0 		uxtb	r0, r10
 8816 1036 FFF7FEFF 		bl	init_arg.part.0
 8817              	.LVL746:
 8818              	.LBE729:
 8819              	.LBE728:
 8820              	.LBE735:
 8821              	.LBE978:
 8822              	.LBE1250:
 8823              	.LBE1324:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 8824              		.loc 1 2958 7 view .LVU2783
 8825 103a 2546     		mov	r5, r4
 8826 103c 3268     		ldr	r2, [r6]
 8827              	.LBB1325:
 8828              	.LBB1251:
 8829              	.LBB979:
 8830              	.LBB736:
1945:src/keys.c    **** 
 8831              		.loc 1 1945 10 view .LVU2784
 8832 103e 4FF0330B 		mov	fp, #51
 8833              	.LVL747:
1945:src/keys.c    **** 
 8834              		.loc 1 1945 10 view .LVU2785
 8835 1042 FFF736B8 		b	.L565
 8836              	.LVL748:
 8837              	.L676:
1945:src/keys.c    **** 
 8838              		.loc 1 1945 10 view .LVU2786
 8839              	.LBE736:
 8840              	.LBE979:
2881:src/keys.c    **** 		init_cat( cat );
 8841              		.loc 1 2881 3 is_stmt 1 view .LVU2787
 8842 1046 FFF7FEFF 		bl	init_cat
 8843              	.LVL749:
2882:src/keys.c    **** 		return STATE_UNFINISHED;
 8844              		.loc 1 2882 3 view .LVU2788
 8845 104a 5846     		mov	r0, fp
 8846 104c FFF7FEFF 		bl	init_cat
 8847              	.LVL750:
2883:src/keys.c    **** 	}
 8848              		.loc 1 2883 3 view .LVU2789
 8849              	.LBE1251:
 8850              	.LBE1325:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 8851              		.loc 1 2958 7 is_stmt 0 view .LVU2790
 8852 1050 2546     		mov	r5, r4
 8853 1052 3268     		ldr	r2, [r6]
 8854              	.LBB1326:
 8855              	.LBB1252:
2883:src/keys.c    **** 	}
 8856              		.loc 1 2883 10 view .LVU2791
 8857 1054 4FF0330B 		mov	fp, #51
 8858 1058 FFF72BB8 		b	.L565
ARM GAS  /tmp/ccczu93l.s 			page 258


 8859              	.LVL751:
 8860              	.L639:
2883:src/keys.c    **** 	}
 8861              		.loc 1 2883 10 view .LVU2792
 8862 105c 3268     		ldr	r2, [r6]
 8863              	.LBB980:
 8864              	.LBB737:
1949:src/keys.c    **** 
 8865              		.loc 1 1949 10 view .LVU2793
 8866 105e 4FF0330B 		mov	fp, #51
 8867              	.LVL752:
1949:src/keys.c    **** 
 8868              		.loc 1 1949 10 view .LVU2794
 8869 1062 FFF726B8 		b	.L565
 8870              	.LVL753:
 8871              	.L1158:
1949:src/keys.c    **** 
 8872              		.loc 1 1949 10 view .LVU2795
 8873              	.LBE737:
 8874              	.LBE980:
 8875              	.LBB981:
 8876              	.LBB829:
1292:src/keys.c    **** 
 8877              		.loc 1 1292 3 is_stmt 1 view .LVU2796
 8878 1066 134B     		ldr	r3, .L1210+28
 8879              	.LBB822:
 8880              	.LBB823:
 649:src/keys.c    **** }
 8881              		.loc 1 649 15 is_stmt 0 view .LVU2797
 8882 1068 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 8883 106c 3268     		ldr	r2, [r6]
 8884              	.LBE823:
 8885              	.LBE822:
1292:src/keys.c    **** 
 8886              		.loc 1 1292 3 view .LVU2798
 8887 106e 03EB4403 		add	r3, r3, r4, lsl #1
1294:src/keys.c    **** }
 8888              		.loc 1 1294 9 view .LVU2799
 8889 1072 4FF0330B 		mov	fp, #51
 8890              	.LVL754:
1292:src/keys.c    **** 
 8891              		.loc 1 1292 3 view .LVU2800
 8892 1076 13F80A30 		ldrb	r3, [r3, r10]	@ zero_extendqisi2
 8893              	.LVL755:
 8894              	.LBB825:
 8895              	.LBI822:
 648:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 8896              		.loc 1 648 13 is_stmt 1 view .LVU2801
 8897              	.LBB824:
 649:src/keys.c    **** }
 8898              		.loc 1 649 2 view .LVU2802
 649:src/keys.c    **** }
 8899              		.loc 1 649 15 is_stmt 0 view .LVU2803
 8900 107a 9942     		cmp	r1, r3
 8901 107c 08BF     		it	eq
 8902 107e 0023     		moveq	r3, #0
 8903              	.LVL756:
ARM GAS  /tmp/ccczu93l.s 			page 259


 649:src/keys.c    **** }
 8904              		.loc 1 649 15 view .LVU2804
 8905 1080 88F81130 		strb	r3, [r8, #17]
 650:src/keys.c    **** 
 8906              		.loc 1 650 1 view .LVU2805
 8907 1084 FFF715B8 		b	.L565
 8908              	.LVL757:
 8909              	.L1146:
 650:src/keys.c    **** 
 8910              		.loc 1 650 1 view .LVU2806
 8911              	.LBE824:
 8912              	.LBE825:
 8913              	.LBE829:
 8914              	.LBE981:
 8915              	.LBB982:
 8916              	.LBB757:
1336:src/keys.c    **** #endif
 8917              		.loc 1 1336 44 is_stmt 1 view .LVU2807
1336:src/keys.c    **** #endif
 8918              		.loc 1 1336 52 is_stmt 0 view .LVU2808
 8919 1088 0420     		movs	r0, #4
 8920 108a FFF7FEFF 		bl	gtodot_digit
 8921              	.LVL758:
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8922              		.loc 1 1379 2 is_stmt 1 view .LVU2809
 8923              	.LBE757:
 8924              	.LBE982:
2838:src/keys.c    **** 
 8925              		.loc 1 2838 10 is_stmt 0 view .LVU2810
 8926 108e 4FF0330B 		mov	fp, #51
 8927 1092 3268     		ldr	r2, [r6]
 8928 1094 FFF70DB8 		b	.L565
 8929              	.L1211:
 8930              		.align	2
 8931              	.L1210:
 8932 1098 00000000 		.word	.LANCHOR1
 8933 109c 00000000 		.word	.LANCHOR9
 8934 10a0 00000000 		.word	.LANCHOR14
 8935 10a4 000A4000 		.word	4196864
 8936 10a8 00080800 		.word	526336
 8937 10ac 00000000 		.word	.LANCHOR11
 8938 10b0 00000000 		.word	.LANCHOR0
 8939 10b4 00000000 		.word	.LANCHOR15
 8940              	.LVL759:
 8941              	.L700:
 8942              	.LBB983:
 8943              	.LBB931:
2572:src/keys.c    **** 
 8944              		.loc 1 2572 2 view .LVU2811
 8945 10b8 B3F58C7F 		cmp	r3, #280
 8946 10bc 43DC     		bgt	.L715
 8947 10be B3F5827F 		cmp	r3, #260
 8948 10c2 7FF777AF 		ble	.L702
 8949 10c6 6FF48271 		mvn	r1, #260
 8950 10ca 0B44     		add	r3, r3, r1
 8951 10cc 132B     		cmp	r3, #19
 8952 10ce 3FF671AF 		bhi	.L702
ARM GAS  /tmp/ccczu93l.s 			page 260


 8953 10d2 01A1     		adr	r1, .L704
 8954 10d4 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8955              		.p2align 2
 8956              	.L704:
 8957 10d8 2F110000 		.word	.L707+1
 8958 10dc B50F0000 		.word	.L702+1
 8959 10e0 B50F0000 		.word	.L702+1
 8960 10e4 B50F0000 		.word	.L702+1
 8961 10e8 B50F0000 		.word	.L702+1
 8962 10ec B50F0000 		.word	.L702+1
 8963 10f0 B50F0000 		.word	.L702+1
 8964 10f4 B50F0000 		.word	.L702+1
 8965 10f8 B50F0000 		.word	.L702+1
 8966 10fc B50F0000 		.word	.L702+1
 8967 1100 B50F0000 		.word	.L702+1
 8968 1104 29110000 		.word	.L920+1
 8969 1108 B50F0000 		.word	.L702+1
 8970 110c 35110000 		.word	.L705+1
 8971 1110 B50F0000 		.word	.L702+1
 8972 1114 B50F0000 		.word	.L702+1
 8973 1118 B50F0000 		.word	.L702+1
 8974 111c B50F0000 		.word	.L702+1
 8975 1120 B50F0000 		.word	.L702+1
 8976 1124 7F0F0000 		.word	.L703+1
 8977              		.p2align 1
 8978              	.L920:
 8979 1128 40F2431B 		movw	fp, #323
 8980              	.LVL760:
2572:src/keys.c    **** 
 8981              		.loc 1 2572 2 view .LVU2812
 8982 112c 10E7     		b	.L706
 8983              	.LVL761:
 8984              	.L707:
2616:src/keys.c    **** 	xeq_or_gto:
 8985              		.loc 1 2616 3 is_stmt 1 view .LVU2813
2616:src/keys.c    **** 	xeq_or_gto:
 8986              		.loc 1 2616 6 is_stmt 0 view .LVU2814
 8987 112e 02F5407B 		add	fp, r2, #768
 8988              	.LVL762:
2616:src/keys.c    **** 	xeq_or_gto:
 8989              		.loc 1 2616 6 view .LVU2815
 8990 1132 38E7     		b	.L719
 8991              	.LVL763:
 8992              	.L705:
2575:src/keys.c    **** 		goto next;
 8993              		.loc 1 2575 3 is_stmt 1 view .LVU2816
2575:src/keys.c    **** 		goto next;
 8994              		.loc 1 2575 8 is_stmt 0 view .LVU2817
 8995 1134 5046     		mov	r0, r10
 8996 1136 0121     		movs	r1, #1
 8997 1138 FFF7FEFF 		bl	advance_to_previous_label
 8998              	.LVL764:
 8999 113c 0121     		movs	r1, #1
 9000 113e FFF7FEFF 		bl	advance_to_previous_label
 9001              	.LVL765:
 9002 1142 8246     		mov	r10, r0
 9003              	.LVL766:
ARM GAS  /tmp/ccczu93l.s 			page 261


2576:src/keys.c    **** 
 9004              		.loc 1 2576 3 is_stmt 1 view .LVU2818
 9005 1144 21E7     		b	.L710
 9006              	.LVL767:
 9007              	.L715:
2572:src/keys.c    **** 
 9008              		.loc 1 2572 2 is_stmt 0 view .LVU2819
 9009 1146 40F22732 		movw	r2, #807
 9010 114a 9342     		cmp	r3, r2
 9011 114c 7FF432AF 		bne	.L702
2642:src/keys.c    **** 		goto set_pc_and_exit;
 9012              		.loc 1 2642 3 is_stmt 1 view .LVU2820
2642:src/keys.c    **** 		goto set_pc_and_exit;
 9013              		.loc 1 2642 18 is_stmt 0 view .LVU2821
 9014 1150 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9015 1154 61F38613 		bfi	r3, r1, #6, #1
 9016 1158 88F81630 		strb	r3, [r8, #22]
2643:src/keys.c    **** 
 9017              		.loc 1 2643 3 is_stmt 1 view .LVU2822
2561:src/keys.c    **** 
 9018              		.loc 1 2561 6 is_stmt 0 view .LVU2823
 9019 115c 4FF0330B 		mov	fp, #51
 9020              	.LVL768:
2643:src/keys.c    **** 
 9021              		.loc 1 2643 3 view .LVU2824
 9022 1160 F6E6     		b	.L706
 9023              	.LVL769:
 9024              	.L1130:
2643:src/keys.c    **** 
 9025              		.loc 1 2643 3 view .LVU2825
 9026              	.LBE931:
 9027              	.LBE983:
2896:src/keys.c    **** 
 9028              		.loc 1 2896 3 is_stmt 1 view .LVU2826
 9029              	.LBB984:
 9030              	.LBI984:
2684:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9031              		.loc 1 2684 12 view .LVU2827
 9032              	.LBB985:
2685:src/keys.c    **** 	enum shifts shift = reset_shift();
 9033              		.loc 1 2685 2 view .LVU2828
 9034              	.LBB986:
 9035              	.LBI986:
 200:src/keys.c    **** {
 9036              		.loc 1 200 14 view .LVU2829
 9037              	.LBB987:
 202:src/keys.c    ****     // K00 - K05
 9038              		.loc 1 202 3 view .LVU2830
 223:src/keys.c    **** }
 9039              		.loc 1 223 3 view .LVU2831
 9040              	.LBB988:
 9041              	.LBI988:
 121:src/keys.c    **** {
 9042              		.loc 1 121 12 view .LVU2832
 9043              	.LBB989:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9044              		.loc 1 123 2 view .LVU2833
ARM GAS  /tmp/ccczu93l.s 			page 262


 133:src/keys.c    **** }
 9045              		.loc 1 133 2 view .LVU2834
 133:src/keys.c    **** }
 9046              		.loc 1 133 23 is_stmt 0 view .LVU2835
 9047 1162 BD4B     		ldr	r3, .L1212
 9048              	.LBE989:
 9049              	.LBE988:
 223:src/keys.c    **** }
 9050              		.loc 1 223 28 view .LVU2836
 9051 1164 BD4A     		ldr	r2, .L1212+4
 9052              	.LBB991:
 9053              	.LBB990:
 133:src/keys.c    **** }
 9054              		.loc 1 133 23 view .LVU2837
 9055 1166 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9056              	.LBE990:
 9057              	.LBE991:
 223:src/keys.c    **** }
 9058              		.loc 1 223 10 view .LVU2838
 9059 1168 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 9060              	.LBE987:
 9061              	.LBE986:
 9062              	.LBB992:
 9063              	.LBB993:
 9064              	.LBB994:
 9065              	.LBB995:
 9066              	.LBB996:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9067              		.loc 1 87 18 view .LVU2839
 9068 116c FFF7FEFF 		bl	shift_down
 9069              	.LVL770:
 9070              	.LBE996:
 9071              	.LBE995:
 9072              	.LBE994:
 9073              	.LBE993:
 9074              	.LBE992:
2685:src/keys.c    **** 	enum shifts shift = reset_shift();
 9075              		.loc 1 2685 15 view .LVU2840
 9076 1170 2BF0800B 		bic	fp, fp, #128
 9077              	.LVL771:
2686:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 9078              		.loc 1 2686 2 is_stmt 1 view .LVU2841
 9079              	.LBB1005:
 9080              	.LBI992:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9081              		.loc 1 104 13 view .LVU2842
 9082              	.LBE1005:
 9083              	.LBE985:
 9084              	.LBE984:
 9085              	.LBE1252:
 9086              	.LBE1326:
 105:src/keys.c    **** }
 9087              		.loc 1 105 2 view .LVU2843
 9088              	.LBB1327:
 9089              	.LBB1253:
 9090              	.LBB1020:
 9091              	.LBB1012:
ARM GAS  /tmp/ccczu93l.s 			page 263


 9092              	.LBB1006:
 9093              	.LBB1002:
 9094              	.LBI993:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9095              		.loc 1 94 20 view .LVU2844
 9096              	.LBB999:
  95:src/keys.c    **** 	State2.shifts = shift;
 9097              		.loc 1 95 2 view .LVU2845
 9098              	.LBB998:
 9099              	.LBI995:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9100              		.loc 1 86 13 view .LVU2846
 9101              	.LBB997:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9102              		.loc 1 87 2 view .LVU2847
  88:src/keys.c    **** }
 9103              		.loc 1 88 2 view .LVU2848
  88:src/keys.c    **** }
 9104              		.loc 1 88 52 is_stmt 0 view .LVU2849
 9105 1174 8146     		mov	r9, r0
 9106 1176 08B9     		cbnz	r0, .L722
 9107 1178 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 9108              	.L722:
 9109              	.LVL772:
  88:src/keys.c    **** }
 9110              		.loc 1 88 52 view .LVU2850
 9111              	.LBE997:
 9112              	.LBE998:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9113              		.loc 1 96 2 is_stmt 1 view .LVU2851
 9114              	.LBE999:
 9115              	.LBE1002:
 9116              	.LBE1006:
2687:src/keys.c    **** 	const int g_max = global_regs();
 9117              		.loc 1 2687 31 is_stmt 0 view .LVU2852
 9118 117c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9119              	.LBB1007:
 9120              	.LBB1003:
 9121              	.LBB1000:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9122              		.loc 1 96 16 view .LVU2853
 9123 1180 0022     		movs	r2, #0
 9124              	.LBE1000:
 9125              	.LBE1003:
 9126              	.LBE1007:
2687:src/keys.c    **** 	const int g_max = global_regs();
 9127              		.loc 1 2687 46 view .LVU2854
 9128 1182 DB07     		lsls	r3, r3, #31
 9129              	.LBB1008:
 9130              	.LBB1004:
 9131              	.LBB1001:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9132              		.loc 1 96 16 view .LVU2855
 9133 1184 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9134              		.loc 1 98 2 is_stmt 1 view .LVU2856
 9135              	.LVL773:
ARM GAS  /tmp/ccczu93l.s 			page 264


  98:src/keys.c    **** }
 9136              		.loc 1 98 2 is_stmt 0 view .LVU2857
 9137              	.LBE1001:
 9138              	.LBE1004:
 9139              	.LBE1008:
2687:src/keys.c    **** 	const int g_max = global_regs();
 9140              		.loc 1 2687 2 is_stmt 1 view .LVU2858
2687:src/keys.c    **** 	const int g_max = global_regs();
 9141              		.loc 1 2687 46 is_stmt 0 view .LVU2859
 9142 1188 00F15A83 		bmi	.L1170
 9143 118c 4FF0700A 		mov	r10, #112
 9144              	.LVL774:
 9145              	.L723:
2688:src/keys.c    **** 
 9146              		.loc 1 2688 2 is_stmt 1 view .LVU2860
2688:src/keys.c    **** 
 9147              		.loc 1 2688 20 is_stmt 0 view .LVU2861
 9148 1190 FFF7FEFF 		bl	global_regs
 9149              	.LVL775:
2690:src/keys.c    **** 		if (local_regs())
 9150              		.loc 1 2690 2 is_stmt 1 view .LVU2862
2690:src/keys.c    **** 		if (local_regs())
 9151              		.loc 1 2690 5 is_stmt 0 view .LVU2863
 9152 1194 BBF1700F 		cmp	fp, #112
 9153 1198 00F09B86 		beq	.L1171
2696:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9154              		.loc 1 2696 7 is_stmt 1 view .LVU2864
2696:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9155              		.loc 1 2696 10 is_stmt 0 view .LVU2865
 9156 119c BBF1090F 		cmp	fp, #9
 9157 11a0 40F26183 		bls	.L1172
2703:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9158              		.loc 1 2703 7 is_stmt 1 view .LVU2866
2703:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9159              		.loc 1 2703 29 is_stmt 0 view .LVU2867
 9160 11a4 09F1FF33 		add	r3, r9, #-1
2703:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9161              		.loc 1 2703 10 view .LVU2868
 9162 11a8 DBB2     		uxtb	r3, r3
 9163 11aa 012B     		cmp	r3, #1
 9164 11ac 40F22D83 		bls	.L1173
 9165              	.L731:
2707:src/keys.c    **** 		State2.digval = n;
 9166              		.loc 1 2707 7 is_stmt 1 view .LVU2869
2707:src/keys.c    **** 		State2.digval = n;
 9167              		.loc 1 2707 10 is_stmt 0 view .LVU2870
 9168 11b0 BBF17F0F 		cmp	fp, #127
 9169 11b4 40F02E84 		bne	.L1174
2712:src/keys.c    **** 	case K_DOWN:
 9170              		.loc 1 2712 2 is_stmt 1 view .LVU2871
 9171 11b8 073C     		subs	r4, r4, #7
 9172 11ba 112C     		cmp	r4, #17
 9173 11bc 21D8     		bhi	.L881
 9174 11be DFE804F0 		tbb	[pc, r4]
 9175              	.L882:
 9176 11c2 09       		.byte	(.L744-.L882)/2
 9177 11c3 20       		.byte	(.L881-.L882)/2
ARM GAS  /tmp/ccczu93l.s 			page 265


 9178 11c4 20       		.byte	(.L881-.L882)/2
 9179 11c5 20       		.byte	(.L881-.L882)/2
 9180 11c6 20       		.byte	(.L881-.L882)/2
 9181 11c7 67       		.byte	(.L743-.L882)/2
 9182 11c8 20       		.byte	(.L881-.L882)/2
 9183 11c9 20       		.byte	(.L881-.L882)/2
 9184 11ca 20       		.byte	(.L881-.L882)/2
 9185 11cb 58       		.byte	(.L741-.L882)/2
 9186 11cc 20       		.byte	(.L881-.L882)/2
 9187 11cd 41       		.byte	(.L737-.L882)/2
 9188 11ce 20       		.byte	(.L881-.L882)/2
 9189 11cf 20       		.byte	(.L881-.L882)/2
 9190 11d0 20       		.byte	(.L881-.L882)/2
 9191 11d1 20       		.byte	(.L881-.L882)/2
 9192 11d2 20       		.byte	(.L881-.L882)/2
 9193 11d3 25       		.byte	(.L734-.L882)/2
 9194              		.p2align 1
 9195              	.L744:
2751:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9196              		.loc 1 2751 3 view .LVU2872
2751:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9197              		.loc 1 2751 6 is_stmt 0 view .LVU2873
 9198 11d4 B9F1000F 		cmp	r9, #0
 9199 11d8 40F01F84 		bne	.L745
2755:src/keys.c    **** #endif
 9200              		.loc 1 2755 4 is_stmt 1 view .LVU2874
2755:src/keys.c    **** #endif
 9201              		.loc 1 2755 8 is_stmt 0 view .LVU2875
 9202 11dc B8F808B0 		ldrh	fp, [r8, #8]
 9203              	.LVL776:
2757:src/keys.c    **** 			State2.digval = 0;
 9204              		.loc 1 2757 4 is_stmt 1 view .LVU2876
2757:src/keys.c    **** 			State2.digval = 0;
 9205              		.loc 1 2757 24 is_stmt 0 view .LVU2877
 9206 11e0 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2759:src/keys.c    **** 			return n;
 9207              		.loc 1 2759 19 view .LVU2878
 9208 11e4 88F80A90 		strb	r9, [r8, #10]
2757:src/keys.c    **** 			State2.digval = 0;
 9209              		.loc 1 2757 24 view .LVU2879
 9210 11e8 69F3C303 		bfi	r3, r9, #3, #1
2760:src/keys.c    **** 		}
 9211              		.loc 1 2760 11 view .LVU2880
 9212 11ec 4BF4285B 		orr	fp, fp, #10752
 9213              	.LVL777:
2757:src/keys.c    **** 			State2.digval = 0;
 9214              		.loc 1 2757 24 view .LVU2881
 9215 11f0 88F81730 		strb	r3, [r8, #23]
2758:src/keys.c    **** 			State2.digval2 = 0;
 9216              		.loc 1 2758 4 is_stmt 1 view .LVU2882
2759:src/keys.c    **** 			return n;
 9217              		.loc 1 2759 4 view .LVU2883
2760:src/keys.c    **** 		}
 9218              		.loc 1 2760 4 view .LVU2884
2758:src/keys.c    **** 			State2.digval2 = 0;
 9219              		.loc 1 2758 18 is_stmt 0 view .LVU2885
 9220 11f4 A8F80890 		strh	r9, [r8, #8]	@ movhi
ARM GAS  /tmp/ccczu93l.s 			page 266


 9221 11f8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9222 11fc 5846     		mov	r0, fp
 9223              	.LVL778:
2760:src/keys.c    **** 		}
 9224              		.loc 1 2760 11 view .LVU2886
 9225 11fe FFF78DB9 		b	.L622
 9226              	.LVL779:
 9227              	.L881:
2760:src/keys.c    **** 		}
 9228              		.loc 1 2760 11 view .LVU2887
 9229 1202 3268     		ldr	r2, [r6]
2763:src/keys.c    **** 	}
 9230              		.loc 1 2763 10 view .LVU2888
 9231 1204 4FF0330B 		mov	fp, #51
 9232              	.LVL780:
2763:src/keys.c    **** 	}
 9233              		.loc 1 2763 10 view .LVU2889
 9234 1208 FEF753BF 		b	.L565
 9235              	.LVL781:
 9236              	.L734:
2714:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9237              		.loc 1 2714 3 is_stmt 1 view .LVU2890
2714:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9238              		.loc 1 2714 13 is_stmt 0 view .LVU2891
 9239 120c B8F80830 		ldrh	r3, [r8, #8]
2714:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9240              		.loc 1 2714 6 view .LVU2892
 9241 1210 002B     		cmp	r3, #0
 9242 1212 00F07584 		beq	.L735
2715:src/keys.c    **** 				State2.digval = global_regs();
 9243              		.loc 1 2715 4 is_stmt 1 view .LVU2893
2715:src/keys.c    **** 				State2.digval = global_regs();
 9244              		.loc 1 2715 8 is_stmt 0 view .LVU2894
 9245 1216 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2715:src/keys.c    **** 				State2.digval = global_regs();
 9246              		.loc 1 2715 7 view .LVU2895
 9247 121a D207     		lsls	r2, r2, #31
 9248 121c 02D4     		bmi	.L736
2715:src/keys.c    **** 				State2.digval = global_regs();
 9249              		.loc 1 2715 23 view .LVU2896
 9250 121e 642B     		cmp	r3, #100
 9251 1220 00F07484 		beq	.L1175
 9252              	.LVL782:
 9253              	.L736:
2717:src/keys.c    **** 		}
 9254              		.loc 1 2717 4 is_stmt 1 view .LVU2897
 9255 1224 B8F80830 		ldrh	r3, [r8, #8]
 9256 1228 013B     		subs	r3, r3, #1
 9257              	.L1095:
2717:src/keys.c    **** 		}
 9258              		.loc 1 2717 4 is_stmt 0 view .LVU2898
 9259 122a A8F80830 		strh	r3, [r8, #8]	@ movhi
 9260              	.LVL783:
 9261              	.L727:
2769:src/keys.c    **** 	return STATE_UNFINISHED;
 9262              		.loc 1 2769 2 is_stmt 1 view .LVU2899
2769:src/keys.c    **** 	return STATE_UNFINISHED;
ARM GAS  /tmp/ccczu93l.s 			page 267


 9263              		.loc 1 2769 16 is_stmt 0 view .LVU2900
 9264 122e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 9265 1232 3268     		ldr	r2, [r6]
 9266 1234 6FF3C503 		bfc	r3, #3, #3
 9267 1238 88F81430 		strb	r3, [r8, #20]
2770:src/keys.c    **** }
 9268              		.loc 1 2770 2 is_stmt 1 view .LVU2901
2770:src/keys.c    **** }
 9269              		.loc 1 2770 9 is_stmt 0 view .LVU2902
 9270 123c 4FF0330B 		mov	fp, #51
 9271              	.LVL784:
2770:src/keys.c    **** }
 9272              		.loc 1 2770 9 view .LVU2903
 9273 1240 FEF737BF 		b	.L565
 9274              	.LVL785:
 9275              	.L737:
2724:src/keys.c    **** 			State2.digval++;
 9276              		.loc 1 2724 3 is_stmt 1 view .LVU2904
2724:src/keys.c    **** 			State2.digval++;
 9277              		.loc 1 2724 13 is_stmt 0 view .LVU2905
 9278 1244 B8F80830 		ldrh	r3, [r8, #8]
2724:src/keys.c    **** 			State2.digval++;
 9279              		.loc 1 2724 27 view .LVU2906
 9280 1248 0AF1FF3A 		add	r10, r10, #-1
 9281              	.LVL786:
2724:src/keys.c    **** 			State2.digval++;
 9282              		.loc 1 2724 6 view .LVU2907
 9283 124c 5345     		cmp	r3, r10
 9284 124e 80F26384 		bge	.L738
2725:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9285              		.loc 1 2725 4 is_stmt 1 view .LVU2908
2726:src/keys.c    **** 				State2.digval = regX_idx;
 9286              		.loc 1 2726 8 is_stmt 0 view .LVU2909
 9287 1252 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2725:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9288              		.loc 1 2725 17 view .LVU2910
 9289 1256 0133     		adds	r3, r3, #1
 9290 1258 9CB2     		uxth	r4, r3
2726:src/keys.c    **** 				State2.digval = regX_idx;
 9291              		.loc 1 2726 7 view .LVU2911
 9292 125a D307     		lsls	r3, r2, #31
2725:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9293              		.loc 1 2725 17 view .LVU2912
 9294 125c A8F80840 		strh	r4, [r8, #8]	@ movhi
2726:src/keys.c    **** 				State2.digval = regX_idx;
 9295              		.loc 1 2726 4 is_stmt 1 view .LVU2913
2726:src/keys.c    **** 				State2.digval = regX_idx;
 9296              		.loc 1 2726 7 is_stmt 0 view .LVU2914
 9297 1260 E5D4     		bmi	.L727
2726:src/keys.c    **** 				State2.digval = regX_idx;
 9298              		.loc 1 2726 43 view .LVU2915
 9299 1262 FFF7FEFF 		bl	global_regs
 9300              	.LVL787:
2726:src/keys.c    **** 				State2.digval = regX_idx;
 9301              		.loc 1 2726 23 view .LVU2916
 9302 1266 8442     		cmp	r4, r0
 9303 1268 E1D1     		bne	.L727
ARM GAS  /tmp/ccczu93l.s 			page 268


2727:src/keys.c    **** 		}
 9304              		.loc 1 2727 5 is_stmt 1 view .LVU2917
2727:src/keys.c    **** 		}
 9305              		.loc 1 2727 19 is_stmt 0 view .LVU2918
 9306 126a 6423     		movs	r3, #100
 9307 126c A8F80830 		strh	r3, [r8, #8]	@ movhi
 9308 1270 DDE7     		b	.L727
 9309              	.LVL788:
 9310              	.L741:
2741:src/keys.c    **** 			return STATE_UNFINISHED;
 9311              		.loc 1 2741 3 is_stmt 1 view .LVU2919
2741:src/keys.c    **** 			return STATE_UNFINISHED;
 9312              		.loc 1 2741 7 is_stmt 0 view .LVU2920
 9313 1272 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2741:src/keys.c    **** 			return STATE_UNFINISHED;
 9314              		.loc 1 2741 6 view .LVU2921
 9315 1276 13F02002 		ands	r2, r3, #32
 9316 127a 40F0CE83 		bne	.L745
2743:src/keys.c    **** 
 9317              		.loc 1 2743 3 is_stmt 1 view .LVU2922
2765:src/keys.c    **** 	State2.digval = 0;
 9318              		.loc 1 2765 2 view .LVU2923
2765:src/keys.c    **** 	State2.digval = 0;
 9319              		.loc 1 2765 22 is_stmt 0 view .LVU2924
 9320 127e 62F3C303 		bfi	r3, r2, #3, #1
 9321 1282 88F81730 		strb	r3, [r8, #23]
2766:src/keys.c    **** 	State2.digval2 = 0;
 9322              		.loc 1 2766 2 is_stmt 1 view .LVU2925
2766:src/keys.c    **** 	State2.digval2 = 0;
 9323              		.loc 1 2766 16 is_stmt 0 view .LVU2926
 9324 1286 A8F80820 		strh	r2, [r8, #8]	@ movhi
2767:src/keys.c    **** reset_window:
 9325              		.loc 1 2767 2 is_stmt 1 view .LVU2927
2767:src/keys.c    **** reset_window:
 9326              		.loc 1 2767 17 is_stmt 0 view .LVU2928
 9327 128a 88F80A20 		strb	r2, [r8, #10]
 9328 128e CEE7     		b	.L727
 9329              	.L743:
2746:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9330              		.loc 1 2746 3 is_stmt 1 view .LVU2929
2746:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9331              		.loc 1 2746 6 is_stmt 0 view .LVU2930
 9332 1290 B9F1010F 		cmp	r9, #1
 9333 1294 9ED1     		bne	.L744
2747:src/keys.c    **** 			goto reset_window;
 9334              		.loc 1 2747 4 is_stmt 1 view .LVU2931
2747:src/keys.c    **** 			goto reset_window;
 9335              		.loc 1 2747 25 is_stmt 0 view .LVU2932
 9336 1296 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9337 129a 43F00403 		orr	r3, r3, #4
 9338 129e 88F81630 		strb	r3, [r8, #22]
2748:src/keys.c    **** 		}
 9339              		.loc 1 2748 4 is_stmt 1 view .LVU2933
 9340 12a2 C4E7     		b	.L727
 9341              	.LVL789:
 9342              	.L941:
2748:src/keys.c    **** 		}
ARM GAS  /tmp/ccczu93l.s 			page 269


 9343              		.loc 1 2748 4 is_stmt 0 view .LVU2934
 9344              	.LBE1012:
 9345              	.LBE1020:
 9346              	.LBB1021:
 9347              	.LBB738:
1933:src/keys.c    **** 	}
 9348              		.loc 1 1933 18 view .LVU2935
 9349 12a4 2723     		movs	r3, #39
1933:src/keys.c    **** 	}
 9350              		.loc 1 1933 47 view .LVU2936
 9351 12a6 9B44     		add	fp, fp, r3
 9352              	.LVL790:
1933:src/keys.c    **** 	}
 9353              		.loc 1 1933 47 view .LVU2937
 9354 12a8 FFF7C6B8 		b	.L595
 9355              	.LVL791:
 9356              	.L1147:
1933:src/keys.c    **** 	}
 9357              		.loc 1 1933 47 view .LVU2938
 9358              	.LBE738:
 9359              	.LBE1021:
 9360              	.LBB1022:
 9361              	.LBB758:
1340:src/keys.c    **** 		goto fin;
 9362              		.loc 1 1340 3 is_stmt 1 view .LVU2939
 9363              	.LBB750:
 9364              	.LBI750:
1312:src/keys.c    **** 	const int code = 100 + n;
 9365              		.loc 1 1312 12 view .LVU2940
 9366              	.LBB751:
1313:src/keys.c    **** 	unsigned int pc = state_pc();
 9367              		.loc 1 1313 2 view .LVU2941
1314:src/keys.c    **** 
 9368              		.loc 1 1314 2 view .LVU2942
1314:src/keys.c    **** 
 9369              		.loc 1 1314 20 is_stmt 0 view .LVU2943
 9370 12ac DFF8B491 		ldr	r9, .L1212+12
 9371 12b0 D9F80030 		ldr	r3, [r9]
 9372              	.LVL792:
1314:src/keys.c    **** 
 9373              		.loc 1 1314 15 view .LVU2944
 9374 12b4 B3F8E007 		ldrh	r0, [r3, #2016]
 9375              	.LVL793:
1316:src/keys.c    **** 		pc = 1;
 9376              		.loc 1 1316 2 is_stmt 1 view .LVU2945
1316:src/keys.c    **** 		pc = 1;
 9377              		.loc 1 1316 5 is_stmt 0 view .LVU2946
 9378 12b8 830B     		lsrs	r3, r0, #14
1317:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9379              		.loc 1 1317 6 view .LVU2947
 9380 12ba 032B     		cmp	r3, #3
 9381              	.LVL794:
1318:src/keys.c    **** 	if (pc > 0)
 9382              		.loc 1 1318 2 is_stmt 1 view .LVU2948
1318:src/keys.c    **** 	if (pc > 0)
 9383              		.loc 1 1318 7 is_stmt 0 view .LVU2949
 9384 12bc 08BF     		it	eq
ARM GAS  /tmp/ccczu93l.s 			page 270


 9385 12be 0120     		moveq	r0, #1
 9386              	.LVL795:
1318:src/keys.c    **** 	if (pc > 0)
 9387              		.loc 1 1318 7 view .LVU2950
 9388 12c0 04F16401 		add	r1, r4, #100
 9389              	.LVL796:
1318:src/keys.c    **** 	if (pc > 0)
 9390              		.loc 1 1318 7 view .LVU2951
 9391 12c4 0322     		movs	r2, #3
 9392              	.LVL797:
1318:src/keys.c    **** 	if (pc > 0)
 9393              		.loc 1 1318 7 view .LVU2952
 9394 12c6 FFF7FEFF 		bl	find_label_from
 9395              	.LVL798:
1319:src/keys.c    **** 		return pc;
 9396              		.loc 1 1319 2 is_stmt 1 view .LVU2953
1319:src/keys.c    **** 		return pc;
 9397              		.loc 1 1319 5 is_stmt 0 view .LVU2954
 9398 12ca 0028     		cmp	r0, #0
 9399 12cc 7FF448AD 		bne	.L607
1321:src/keys.c    **** }
 9400              		.loc 1 1321 2 is_stmt 1 view .LVU2955
1321:src/keys.c    **** }
 9401              		.loc 1 1321 9 is_stmt 0 view .LVU2956
 9402 12d0 D9F80030 		ldr	r3, [r9]
 9403 12d4 B3F8E007 		ldrh	r0, [r3, #2016]
 9404              	.LVL799:
1321:src/keys.c    **** }
 9405              		.loc 1 1321 9 view .LVU2957
 9406              	.LBE751:
 9407              	.LBE750:
1341:src/keys.c    **** 	}
 9408              		.loc 1 1341 3 is_stmt 1 view .LVU2958
 9409 12d8 42E5     		b	.L607
 9410              	.LVL800:
 9411              	.L942:
1341:src/keys.c    **** 	}
 9412              		.loc 1 1341 3 is_stmt 0 view .LVU2959
 9413              	.LBE758:
 9414              	.LBE1022:
 9415              	.LBB1023:
 9416              	.LBB739:
1933:src/keys.c    **** 	}
 9417              		.loc 1 1933 18 view .LVU2960
 9418 12da 1E23     		movs	r3, #30
1933:src/keys.c    **** 	}
 9419              		.loc 1 1933 47 view .LVU2961
 9420 12dc 9B44     		add	fp, fp, r3
 9421              	.LVL801:
1933:src/keys.c    **** 	}
 9422              		.loc 1 1933 47 view .LVU2962
 9423 12de FFF7ABB8 		b	.L595
 9424              	.LVL802:
 9425              	.L1131:
1933:src/keys.c    **** 	}
 9426              		.loc 1 1933 47 view .LVU2963
 9427              	.LBE739:
ARM GAS  /tmp/ccczu93l.s 			page 271


 9428              	.LBE1023:
2899:src/keys.c    **** 
 9429              		.loc 1 2899 3 is_stmt 1 view .LVU2964
 9430              	.LBB1024:
 9431              	.LBI1024:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9432              		.loc 1 104 13 view .LVU2965
 9433              	.LBE1024:
 9434              	.LBE1253:
 9435              	.LBE1327:
 105:src/keys.c    **** }
 9436              		.loc 1 105 2 view .LVU2966
 9437              	.LBB1328:
 9438              	.LBB1254:
 9439              	.LBB1031:
 9440              	.LBB1025:
 9441              	.LBI1025:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9442              		.loc 1 94 20 view .LVU2967
 9443              	.LBB1026:
  95:src/keys.c    **** 	State2.shifts = shift;
 9444              		.loc 1 95 2 view .LVU2968
 9445              	.LBB1027:
 9446              	.LBI1027:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9447              		.loc 1 86 13 view .LVU2969
 9448              	.LBB1028:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9449              		.loc 1 87 2 view .LVU2970
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9450              		.loc 1 87 18 is_stmt 0 view .LVU2971
 9451 12e2 FFF7FEFF 		bl	shift_down
 9452              	.LVL803:
  88:src/keys.c    **** }
 9453              		.loc 1 88 2 is_stmt 1 view .LVU2972
  88:src/keys.c    **** }
 9454              		.loc 1 88 52 is_stmt 0 view .LVU2973
 9455 12e6 0146     		mov	r1, r0
 9456 12e8 08B9     		cbnz	r0, .L747
 9457 12ea 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9458              	.L747:
 9459              	.LVL804:
  88:src/keys.c    **** }
 9460              		.loc 1 88 52 view .LVU2974
 9461              	.LBE1028:
 9462              	.LBE1027:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9463              		.loc 1 96 2 is_stmt 1 view .LVU2975
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9464              		.loc 1 96 16 is_stmt 0 view .LVU2976
 9465 12ee 0022     		movs	r2, #0
 9466              	.LBE1026:
 9467              	.LBE1025:
 9468              	.LBE1031:
2899:src/keys.c    **** 
 9469              		.loc 1 2899 10 view .LVU2977
 9470 12f0 2046     		mov	r0, r4
ARM GAS  /tmp/ccczu93l.s 			page 272


 9471              	.LBB1032:
 9472              	.LBB1030:
 9473              	.LBB1029:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9474              		.loc 1 96 16 view .LVU2978
 9475 12f2 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9476              		.loc 1 98 2 is_stmt 1 view .LVU2979
 9477              	.LVL805:
  98:src/keys.c    **** }
 9478              		.loc 1 98 2 is_stmt 0 view .LVU2980
 9479              	.LBE1029:
 9480              	.LBE1030:
 9481              	.LBE1032:
2899:src/keys.c    **** 
 9482              		.loc 1 2899 10 view .LVU2981
 9483 12f6 FFF7FEFF 		bl	process_catalogue
 9484              	.LVL806:
2899:src/keys.c    **** 
 9485              		.loc 1 2899 10 view .LVU2982
 9486 12fa 8346     		mov	fp, r0
 9487 12fc FFF79CB8 		b	.L595
 9488              	.LVL807:
 9489              	.L1150:
 9490              	.LBB1033:
 9491              	.LBB759:
1354:src/keys.c    **** 			goto fin2;
 9492              		.loc 1 1354 3 is_stmt 1 view .LVU2983
1354:src/keys.c    **** 			goto fin2;
 9493              		.loc 1 1354 13 is_stmt 0 view .LVU2984
 9494 1300 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 9495              	.LVL808:
1354:src/keys.c    **** 			goto fin2;
 9496              		.loc 1 1354 6 view .LVU2985
 9497 1304 002B     		cmp	r3, #0
 9498 1306 3FF42DAD 		beq	.L611
1357:src/keys.c    **** 			State2.digval /= 10;
 9499              		.loc 1 1357 4 is_stmt 1 view .LVU2986
1357:src/keys.c    **** 			State2.digval /= 10;
 9500              		.loc 1 1357 19 is_stmt 0 view .LVU2987
 9501 130a 013B     		subs	r3, r3, #1
 9502 130c 88F80B30 		strb	r3, [r8, #11]
1358:src/keys.c    **** 		}
 9503              		.loc 1 1358 4 is_stmt 1 view .LVU2988
1358:src/keys.c    **** 		}
 9504              		.loc 1 1358 18 is_stmt 0 view .LVU2989
 9505 1310 0A21     		movs	r1, #10
 9506 1312 B8F80830 		ldrh	r3, [r8, #8]
 9507 1316 3268     		ldr	r2, [r6]
 9508              	.LVL809:
1358:src/keys.c    **** 		}
 9509              		.loc 1 1358 18 view .LVU2990
 9510 1318 B3FBF1F3 		udiv	r3, r3, r1
 9511              	.LBE759:
 9512              	.LBE1033:
2838:src/keys.c    **** 
 9513              		.loc 1 2838 10 view .LVU2991
ARM GAS  /tmp/ccczu93l.s 			page 273


 9514 131c 4FF0330B 		mov	fp, #51
 9515              	.LBB1034:
 9516              	.LBB760:
1358:src/keys.c    **** 		}
 9517              		.loc 1 1358 18 view .LVU2992
 9518 1320 A8F80830 		strh	r3, [r8, #8]	@ movhi
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9519              		.loc 1 1379 2 is_stmt 1 view .LVU2993
 9520 1324 FEF7C5BE 		b	.L565
 9521              	.LVL810:
 9522              	.L1132:
1379:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9523              		.loc 1 1379 2 is_stmt 0 view .LVU2994
 9524              	.LBE760:
 9525              	.LBE1034:
2903:src/keys.c    **** #else
 9526              		.loc 1 2903 3 is_stmt 1 view .LVU2995
 9527              	.LBB1035:
 9528              	.LBI1035:
1392:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 9529              		.loc 1 1392 12 view .LVU2996
 9530              	.LBB1036:
1393:src/keys.c    ****         int op = STATE_UNFINISHED;
 9531              		.loc 1 1393 2 view .LVU2997
1393:src/keys.c    ****         int op = STATE_UNFINISHED;
 9532              		.loc 1 1393 33 is_stmt 0 view .LVU2998
 9533 1328 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 9534              	.LBB1037:
 9535              	.LBB1038:
 9536              	.LBB1039:
 9537              	.LBB1040:
 9538              	.LBB1041:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9539              		.loc 1 87 18 view .LVU2999
 9540 132c FFF7FEFF 		bl	shift_down
 9541              	.LVL811:
 9542              	.LBE1041:
 9543              	.LBE1040:
 9544              	.LBE1039:
 9545              	.LBE1038:
 9546              	.LBE1037:
1393:src/keys.c    ****         int op = STATE_UNFINISHED;
 9547              		.loc 1 1393 15 view .LVU3000
 9548 1330 CA46     		mov	r10, r9
 9549              	.LVL812:
1394:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9550              		.loc 1 1394 9 is_stmt 1 view .LVU3001
1395:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9551              		.loc 1 1395 2 view .LVU3002
 9552              	.LBB1050:
 9553              	.LBI1037:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9554              		.loc 1 104 13 view .LVU3003
 9555              	.LBE1050:
 9556              	.LBE1036:
 9557              	.LBE1035:
 9558              	.LBE1254:
ARM GAS  /tmp/ccczu93l.s 			page 274


 9559              	.LBE1328:
 105:src/keys.c    **** }
 9560              		.loc 1 105 2 view .LVU3004
 9561              	.LBB1329:
 9562              	.LBB1255:
 9563              	.LBB1100:
 9564              	.LBB1088:
 9565              	.LBB1051:
 9566              	.LBB1047:
 9567              	.LBI1038:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9568              		.loc 1 94 20 view .LVU3005
 9569              	.LBB1044:
  95:src/keys.c    **** 	State2.shifts = shift;
 9570              		.loc 1 95 2 view .LVU3006
 9571              	.LBB1043:
 9572              	.LBI1040:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9573              		.loc 1 86 13 view .LVU3007
 9574              	.LBB1042:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9575              		.loc 1 87 2 view .LVU3008
  88:src/keys.c    **** }
 9576              		.loc 1 88 2 view .LVU3009
  88:src/keys.c    **** }
 9577              		.loc 1 88 52 is_stmt 0 view .LVU3010
 9578 1332 08B9     		cbnz	r0, .L749
 9579 1334 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 9580              	.LVL813:
 9581              	.L749:
  88:src/keys.c    **** }
 9582              		.loc 1 88 52 view .LVU3011
 9583              	.LBE1042:
 9584              	.LBE1043:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9585              		.loc 1 96 2 is_stmt 1 view .LVU3012
 9586              	.LBE1044:
 9587              	.LBE1047:
 9588              	.LBE1051:
 9589              	.LBB1052:
 9590              	.LBB1053:
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 9591              		.loc 1 436 6 is_stmt 0 view .LVU3013
 9592 1338 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9593              	.LBE1053:
 9594              	.LBE1052:
 9595              	.LBB1069:
 9596              	.LBB1048:
 9597              	.LBB1045:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9598              		.loc 1 96 16 view .LVU3014
 9599 133c 4FF0000C 		mov	ip, #0
 9600              	.LBE1045:
 9601              	.LBE1048:
 9602              	.LBE1069:
 9603              	.LBB1070:
 9604              	.LBB1064:
ARM GAS  /tmp/ccczu93l.s 			page 275


 436:src/keys.c    **** 		if (shift == SHIFT_N)
 9605              		.loc 1 436 5 view .LVU3015
 9606 1340 D906     		lsls	r1, r3, #27
 9607              	.LBE1064:
 9608              	.LBE1070:
 9609              	.LBB1071:
 9610              	.LBB1049:
 9611              	.LBB1046:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9612              		.loc 1 96 16 view .LVU3016
 9613 1342 88F810C0 		strb	ip, [r8, #16]
  98:src/keys.c    **** }
 9614              		.loc 1 98 2 is_stmt 1 view .LVU3017
 9615              	.LVL814:
  98:src/keys.c    **** }
 9616              		.loc 1 98 2 is_stmt 0 view .LVU3018
 9617              	.LBE1046:
 9618              	.LBE1049:
 9619              	.LBE1071:
1396:src/keys.c    **** 	State2.alpha_pos = 0;
 9620              		.loc 1 1396 2 is_stmt 1 view .LVU3019
1396:src/keys.c    **** 	State2.alpha_pos = 0;
 9621              		.loc 1 1396 11 is_stmt 0 view .LVU3020
 9622 1346 0246     		mov	r2, r0
 9623              	.LVL815:
 9624              	.LBB1072:
 9625              	.LBI1052:
 386:src/keys.c    **** {
 9626              		.loc 1 386 12 is_stmt 1 view .LVU3021
 9627              	.LBB1065:
 388:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9628              		.loc 1 388 2 view .LVU3022
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 9629              		.loc 1 436 2 view .LVU3023
 436:src/keys.c    **** 		if (shift == SHIFT_N)
 9630              		.loc 1 436 5 is_stmt 0 view .LVU3024
 9631 1348 40F1A180 		bpl	.L750
 437:src/keys.c    **** 			shift = SHIFT_LC_N;
 9632              		.loc 1 437 3 is_stmt 1 view .LVU3025
 437:src/keys.c    **** 			shift = SHIFT_LC_N;
 9633              		.loc 1 437 6 is_stmt 0 view .LVU3026
 9634 134c 0028     		cmp	r0, #0
 9635 134e 00F09D80 		beq	.L926
 439:src/keys.c    **** 			shift = SHIFT_LC_G;
 9636              		.loc 1 439 8 is_stmt 1 view .LVU3027
 9637              	.LBB1054:
 9638              	.LBB1055:
 133:src/keys.c    **** }
 9639              		.loc 1 133 23 is_stmt 0 view .LVU3028
 9640 1352 4149     		ldr	r1, .L1212
 9641              	.LBE1055:
 9642              	.LBE1054:
 442:src/keys.c    **** }
 9643              		.loc 1 442 49 view .LVU3029
 9644 1354 424A     		ldr	r2, .L1212+8
 9645              	.LBB1060:
 9646              	.LBB1056:
ARM GAS  /tmp/ccczu93l.s 			page 276


 133:src/keys.c    **** }
 9647              		.loc 1 133 23 view .LVU3030
 9648 1356 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9649              	.LBE1056:
 9650              	.LBE1060:
 9651              	.LBE1065:
 9652              	.LBE1072:
1397:src/keys.c    **** 
 9653              		.loc 1 1397 19 view .LVU3031
 9654 1358 88F80DC0 		strb	ip, [r8, #13]
 9655              	.LBB1073:
 9656              	.LBB1066:
 440:src/keys.c    **** 	}
 9657              		.loc 1 440 10 view .LVU3032
 9658 135c 0228     		cmp	r0, #2
 442:src/keys.c    **** }
 9659              		.loc 1 442 49 view .LVU3033
 9660 135e 4FF0060C 		mov	ip, #6
 9661 1362 0CFB0121 		mla	r1, ip, r1, r2
 440:src/keys.c    **** 	}
 9662              		.loc 1 440 10 view .LVU3034
 9663 1366 14BF     		ite	ne
 9664 1368 0246     		movne	r2, r0
 9665 136a 0522     		moveq	r2, #5
 9666              	.LVL816:
 442:src/keys.c    **** }
 9667              		.loc 1 442 2 is_stmt 1 view .LVU3035
 9668              	.LBB1061:
 9669              	.LBI1054:
 121:src/keys.c    **** {
 9670              		.loc 1 121 12 view .LVU3036
 9671              	.LBB1057:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9672              		.loc 1 123 2 view .LVU3037
 133:src/keys.c    **** }
 9673              		.loc 1 133 2 view .LVU3038
 133:src/keys.c    **** }
 9674              		.loc 1 133 2 is_stmt 0 view .LVU3039
 9675 136c 063C     		subs	r4, r4, #6
 9676              	.LBE1057:
 9677              	.LBE1061:
 442:src/keys.c    **** }
 9678              		.loc 1 442 49 view .LVU3040
 9679 136e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9680              	.LVL817:
 442:src/keys.c    **** }
 9681              		.loc 1 442 49 view .LVU3041
 9682              	.LBE1066:
 9683              	.LBE1073:
1397:src/keys.c    **** 
 9684              		.loc 1 1397 2 is_stmt 1 view .LVU3042
1399:src/keys.c    **** 	case K10:	// STO
 9685              		.loc 1 1399 2 view .LVU3043
 9686 1370 212C     		cmp	r4, #33
 9687 1372 23D8     		bhi	.L753
 9688 1374 DFE814F0 		tbh	[pc, r4, lsl #1]
 9689              	.L883:
ARM GAS  /tmp/ccczu93l.s 			page 277


 9690 1378 4804     		.2byte	(.L762-.L883)/2
 9691 137a 2D04     		.2byte	(.L761-.L883)/2
 9692 137c 2200     		.2byte	(.L753-.L883)/2
 9693 137e 2200     		.2byte	(.L753-.L883)/2
 9694 1380 2200     		.2byte	(.L753-.L883)/2
 9695 1382 2200     		.2byte	(.L753-.L883)/2
 9696 1384 0804     		.2byte	(.L760-.L883)/2
 9697 1386 2200     		.2byte	(.L753-.L883)/2
 9698 1388 2200     		.2byte	(.L753-.L883)/2
 9699 138a 2200     		.2byte	(.L753-.L883)/2
 9700 138c EB03     		.2byte	(.L769-.L883)/2
 9701 138e 2200     		.2byte	(.L753-.L883)/2
 9702 1390 E304     		.2byte	(.L758-.L883)/2
 9703 1392 2200     		.2byte	(.L753-.L883)/2
 9704 1394 2200     		.2byte	(.L753-.L883)/2
 9705 1396 2200     		.2byte	(.L753-.L883)/2
 9706 1398 2200     		.2byte	(.L753-.L883)/2
 9707 139a 2200     		.2byte	(.L753-.L883)/2
 9708 139c D504     		.2byte	(.L757-.L883)/2
 9709 139e 2200     		.2byte	(.L753-.L883)/2
 9710 13a0 2200     		.2byte	(.L753-.L883)/2
 9711 13a2 2200     		.2byte	(.L753-.L883)/2
 9712 13a4 2200     		.2byte	(.L753-.L883)/2
 9713 13a6 2200     		.2byte	(.L753-.L883)/2
 9714 13a8 2200     		.2byte	(.L753-.L883)/2
 9715 13aa 2200     		.2byte	(.L753-.L883)/2
 9716 13ac 2200     		.2byte	(.L753-.L883)/2
 9717 13ae 2200     		.2byte	(.L753-.L883)/2
 9718 13b0 2200     		.2byte	(.L753-.L883)/2
 9719 13b2 2200     		.2byte	(.L753-.L883)/2
 9720 13b4 A604     		.2byte	(.L756-.L883)/2
 9721 13b6 2200     		.2byte	(.L753-.L883)/2
 9722 13b8 2200     		.2byte	(.L753-.L883)/2
 9723 13ba 9A04     		.2byte	(.L754-.L883)/2
 9724              		.p2align 1
 9725              	.L753:
1497:src/keys.c    **** 		return STATE_UNFINISHED;
 9726              		.loc 1 1497 2 view .LVU3044
1497:src/keys.c    **** 		return STATE_UNFINISHED;
 9727              		.loc 1 1497 5 is_stmt 0 view .LVU3045
 9728 13bc 0029     		cmp	r1, #0
 9729 13be 00F01483 		beq	.L1176
1499:src/keys.c    **** }
 9730              		.loc 1 1499 2 is_stmt 1 view .LVU3046
1499:src/keys.c    **** }
 9731              		.loc 1 1499 9 is_stmt 0 view .LVU3047
 9732 13c2 41F4884B 		orr	fp, r1, #17408
 9733 13c6 5846     		mov	r0, fp
 9734              	.LVL818:
1499:src/keys.c    **** }
 9735              		.loc 1 1499 9 view .LVU3048
 9736 13c8 FFF7A8B8 		b	.L622
 9737              	.LVL819:
 9738              	.L1148:
1499:src/keys.c    **** }
 9739              		.loc 1 1499 9 view .LVU3049
 9740              	.LBE1088:
ARM GAS  /tmp/ccczu93l.s 			page 278


 9741              	.LBE1100:
 9742              	.LBB1101:
 9743              	.LBB761:
1345:src/keys.c    **** 		goto fin;
 9744              		.loc 1 1345 3 is_stmt 1 view .LVU3050
1345:src/keys.c    **** 		goto fin;
 9745              		.loc 1 1345 11 is_stmt 0 view .LVU3051
 9746 13cc 254B     		ldr	r3, .L1212+12
 9747              	.LVL820:
1345:src/keys.c    **** 		goto fin;
 9748              		.loc 1 1345 11 view .LVU3052
 9749 13ce 1B68     		ldr	r3, [r3]
1345:src/keys.c    **** 		goto fin;
 9750              		.loc 1 1345 9 view .LVU3053
 9751 13d0 5888     		ldrh	r0, [r3, #2]
 9752              	.LVL821:
1346:src/keys.c    **** 	}
 9753              		.loc 1 1346 3 is_stmt 1 view .LVU3054
 9754 13d2 C5E4     		b	.L607
 9755              	.LVL822:
 9756              	.L1155:
1346:src/keys.c    **** 	}
 9757              		.loc 1 1346 3 is_stmt 0 view .LVU3055
 9758              	.LBE761:
 9759              	.LBE1101:
 9760              	.LBB1102:
 9761              	.LBB798:
2487:src/keys.c    **** 		return STATE_UNFINISHED;
 9762              		.loc 1 2487 3 is_stmt 1 view .LVU3056
 9763 13d4 3268     		ldr	r2, [r6]
 9764              	.LVL823:
2487:src/keys.c    **** 		return STATE_UNFINISHED;
 9765              		.loc 1 2487 17 is_stmt 0 view .LVU3057
 9766 13d6 88F80C00 		strb	r0, [r8, #12]
2488:src/keys.c    **** 	} 
 9767              		.loc 1 2488 3 is_stmt 1 view .LVU3058
 9768              	.LBE798:
 9769              	.LBE1102:
2847:src/keys.c    **** 
 9770              		.loc 1 2847 10 is_stmt 0 view .LVU3059
 9771 13da 4FF0330B 		mov	fp, #51
 9772              	.LBB1103:
 9773              	.LBB799:
2488:src/keys.c    **** 	} 
 9774              		.loc 1 2488 10 view .LVU3060
 9775 13de FEF768BE 		b	.L565
 9776              	.LVL824:
 9777              	.L1133:
2488:src/keys.c    **** 	} 
 9778              		.loc 1 2488 10 view .LVU3061
 9779              	.LBE799:
 9780              	.LBE1103:
2915:src/keys.c    **** 	} else {
 9781              		.loc 1 2915 3 is_stmt 1 view .LVU3062
 9782              	.LBB1104:
 9783              	.LBI1104:
1102:src/keys.c    **** #define _RARG   0xFF00
ARM GAS  /tmp/ccczu93l.s 			page 279


 9784              		.loc 1 1102 12 view .LVU3063
 9785              	.LBB1105:
1107:src/keys.c    **** 		// Row 1
 9786              		.loc 1 1107 2 view .LVU3064
1158:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9787              		.loc 1 1158 2 view .LVU3065
 9788              	.LBB1106:
 9789              	.LBI1106:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9790              		.loc 1 104 13 view .LVU3066
 9791              	.LBE1106:
 9792              	.LBE1105:
 9793              	.LBE1104:
 9794              	.LBE1255:
 9795              	.LBE1329:
 105:src/keys.c    **** }
 9796              		.loc 1 105 2 view .LVU3067
 9797              	.LBB1330:
 9798              	.LBB1256:
 9799              	.LBB1136:
 9800              	.LBB1130:
 9801              	.LBB1115:
 9802              	.LBB1107:
 9803              	.LBI1107:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9804              		.loc 1 94 20 view .LVU3068
 9805              	.LBB1108:
  95:src/keys.c    **** 	State2.shifts = shift;
 9806              		.loc 1 95 2 view .LVU3069
 9807              	.LBB1109:
 9808              	.LBI1109:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9809              		.loc 1 86 13 view .LVU3070
 9810              	.LBB1110:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9811              		.loc 1 87 2 view .LVU3071
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9812              		.loc 1 87 18 is_stmt 0 view .LVU3072
 9813 13e2 FFF7FEFF 		bl	shift_down
 9814              	.LVL825:
  88:src/keys.c    **** }
 9815              		.loc 1 88 2 is_stmt 1 view .LVU3073
  88:src/keys.c    **** }
 9816              		.loc 1 88 52 is_stmt 0 view .LVU3074
 9817 13e6 8246     		mov	r10, r0
 9818              	.LVL826:
  88:src/keys.c    **** }
 9819              		.loc 1 88 52 view .LVU3075
 9820 13e8 08B9     		cbnz	r0, .L783
 9821 13ea 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 9822              	.L783:
 9823              	.LVL827:
  88:src/keys.c    **** }
 9824              		.loc 1 88 52 view .LVU3076
 9825              	.LBE1110:
 9826              	.LBE1109:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccczu93l.s 			page 280


 9827              		.loc 1 96 2 is_stmt 1 view .LVU3077
 9828              	.LBE1108:
 9829              	.LBE1107:
 9830              	.LBE1115:
 9831              	.LBB1116:
 9832              	.LBB1117:
 148:src/keys.c    **** }
 9833              		.loc 1 148 23 is_stmt 0 view .LVU3078
 9834 13ee 1E4B     		ldr	r3, .L1212+16
 9835              	.LBE1117:
 9836              	.LBE1116:
1160:src/keys.c    **** 	State2.cmplx = 0;
 9837              		.loc 1 1160 21 view .LVU3079
 9838 13f0 1E48     		ldr	r0, .L1212+20
 9839              	.LBB1120:
 9840              	.LBB1118:
 148:src/keys.c    **** }
 9841              		.loc 1 148 23 view .LVU3080
 9842 13f2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9843              	.LBE1118:
 9844              	.LBE1120:
1161:src/keys.c    **** 
 9845              		.loc 1 1161 15 view .LVU3081
 9846 13f4 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1160:src/keys.c    **** 	State2.cmplx = 0;
 9847              		.loc 1 1160 21 view .LVU3082
 9848 13f8 0AEB8303 		add	r3, r10, r3, lsl #2
 9849              	.LBB1121:
 9850              	.LBB1113:
 9851              	.LBB1111:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9852              		.loc 1 96 16 view .LVU3083
 9853 13fc 0021     		movs	r1, #0
 9854              	.LBE1111:
 9855              	.LBE1113:
 9856              	.LBE1121:
1160:src/keys.c    **** 	State2.cmplx = 0;
 9857              		.loc 1 1160 21 view .LVU3084
 9858 13fe 30F813B0 		ldrh	fp, [r0, r3, lsl #1]
 9859              	.LBB1122:
 9860              	.LBB1114:
 9861              	.LBB1112:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9862              		.loc 1 96 16 view .LVU3085
 9863 1402 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 9864              		.loc 1 98 2 is_stmt 1 view .LVU3086
 9865              	.LVL828:
  98:src/keys.c    **** }
 9866              		.loc 1 98 2 is_stmt 0 view .LVU3087
 9867              	.LBE1112:
 9868              	.LBE1114:
 9869              	.LBE1122:
1159:src/keys.c    **** 	int op = op_map[lc][shift];
 9870              		.loc 1 1159 2 is_stmt 1 view .LVU3088
 9871              	.LBB1123:
 9872              	.LBI1116:
ARM GAS  /tmp/ccczu93l.s 			page 281


 136:src/keys.c    **** {
 9873              		.loc 1 136 12 view .LVU3089
 9874              	.LBB1119:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9875              		.loc 1 138 2 view .LVU3090
 148:src/keys.c    **** }
 9876              		.loc 1 148 2 view .LVU3091
 148:src/keys.c    **** }
 9877              		.loc 1 148 2 is_stmt 0 view .LVU3092
 9878              	.LBE1119:
 9879              	.LBE1123:
1160:src/keys.c    **** 	State2.cmplx = 0;
 9880              		.loc 1 1160 2 is_stmt 1 view .LVU3093
1161:src/keys.c    **** 
 9881              		.loc 1 1161 2 view .LVU3094
1163:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9882              		.loc 1 1163 5 is_stmt 0 view .LVU3095
 9883 1406 0BF47F43 		and	r3, fp, #65280
1161:src/keys.c    **** 
 9884              		.loc 1 1161 15 view .LVU3096
 9885 140a 61F34102 		bfi	r2, r1, #1, #1
1163:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9886              		.loc 1 1163 5 view .LVU3097
 9887 140e B3F57F4F 		cmp	r3, #65280
1161:src/keys.c    **** 
 9888              		.loc 1 1161 15 view .LVU3098
 9889 1412 88F81520 		strb	r2, [r8, #21]
1163:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9890              		.loc 1 1163 2 is_stmt 1 view .LVU3099
1163:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9891              		.loc 1 1163 5 is_stmt 0 view .LVU3100
 9892 1416 00F0D384 		beq	.L1177
1167:src/keys.c    **** 		// HYP
 9893              		.loc 1 1167 2 is_stmt 1 view .LVU3101
1167:src/keys.c    **** 		// HYP
 9894              		.loc 1 1167 5 is_stmt 0 view .LVU3102
 9895 141a 002C     		cmp	r4, #0
 9896 141c 00F0BD84 		beq	.L1178
1176:src/keys.c    **** 		switch (c) {
 9897              		.loc 1 1176 2 is_stmt 1 view .LVU3103
1176:src/keys.c    **** 		switch (c) {
 9898              		.loc 1 1176 5 is_stmt 0 view .LVU3104
 9899 1420 BAF1000F 		cmp	r10, #0
 9900 1424 3FF408A8 		beq	.L595
1177:src/keys.c    **** 		case K_CMPLX:
 9901              		.loc 1 1177 3 is_stmt 1 view .LVU3105
 9902 1428 242C     		cmp	r4, #36
 9903 142a 00F0B284 		beq	.L787
 9904 142e 2D2C     		cmp	r4, #45
 9905 1430 00F0A984 		beq	.L788
 9906 1434 1F2C     		cmp	r4, #31
 9907 1436 7EF4FFAF 		bne	.L595
1183:src/keys.c    **** 				if (is_bad_cmdline())
 9908              		.loc 1 1183 4 view .LVU3106
1183:src/keys.c    **** 				if (is_bad_cmdline())
 9909              		.loc 1 1183 7 is_stmt 0 view .LVU3107
 9910 143a BBF1330F 		cmp	fp, #51
ARM GAS  /tmp/ccczu93l.s 			page 282


 9911 143e 00F03284 		beq	.L1179
1184:src/keys.c    **** 					return STATE_UNFINISHED;
 9912              		.loc 1 1184 5 is_stmt 1 view .LVU3108
1184:src/keys.c    **** 					return STATE_UNFINISHED;
 9913              		.loc 1 1184 9 is_stmt 0 view .LVU3109
 9914 1442 FFF7FEFF 		bl	is_bad_cmdline
 9915              	.LVL829:
1184:src/keys.c    **** 					return STATE_UNFINISHED;
 9916              		.loc 1 1184 8 view .LVU3110
 9917 1446 0446     		mov	r4, r0
 9918 1448 0028     		cmp	r0, #0
 9919 144a 00F01C84 		beq	.L791
 9920 144e 3268     		ldr	r2, [r6]
1185:src/keys.c    **** 				process_cmdline_set_lift();
 9921              		.loc 1 1185 13 view .LVU3111
 9922 1450 4FF0330B 		mov	fp, #51
 9923              	.LVL830:
1185:src/keys.c    **** 				process_cmdline_set_lift();
 9924              		.loc 1 1185 13 view .LVU3112
 9925 1454 FEF72DBE 		b	.L565
 9926              	.L1213:
 9927              		.align	2
 9928              	.L1212:
 9929 1458 00000000 		.word	.LANCHOR1
 9930 145c 00000000 		.word	.LANCHOR0
 9931 1460 00000000 		.word	.LANCHOR9
 9932 1464 00000000 		.word	main_ram
 9933 1468 00000000 		.word	.LANCHOR18
 9934 146c 00000000 		.word	.LANCHOR17
 9935              	.LVL831:
 9936              	.L1161:
1185:src/keys.c    **** 				process_cmdline_set_lift();
 9937              		.loc 1 1185 13 view .LVU3113
 9938              	.LBE1130:
 9939              	.LBE1136:
 9940              	.LBB1137:
 9941              	.LBB883:
2377:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9942              		.loc 1 2377 3 is_stmt 1 view .LVU3114
2377:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9943              		.loc 1 2377 12 is_stmt 0 view .LVU3115
 9944 1470 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 9945 1474 2046     		mov	r0, r4
 9946 1476 941E     		subs	r4, r2, #2
 9947 1478 6242     		rsbs	r2, r4, #0
 9948 147a 6241     		adcs	r2, r2, r4
 9949 147c FFF7FEFF 		bl	process_catalogue
 9950              	.LVL832:
2378:src/keys.c    **** 			return opcode;
 9951              		.loc 1 2378 6 view .LVU3116
 9952 1480 3328     		cmp	r0, #51
2377:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9953              		.loc 1 2377 12 view .LVU3117
 9954 1482 8346     		mov	fp, r0
 9955              	.LVL833:
2378:src/keys.c    **** 			return opcode;
 9956              		.loc 1 2378 3 is_stmt 1 view .LVU3118
ARM GAS  /tmp/ccczu93l.s 			page 283


2378:src/keys.c    **** 			return opcode;
 9957              		.loc 1 2378 6 is_stmt 0 view .LVU3119
 9958 1484 00F0CE82 		beq	.L1180
2380:src/keys.c    **** 		goto add_char;
 9959              		.loc 1 2380 3 is_stmt 1 view .LVU3120
2380:src/keys.c    **** 		goto add_char;
 9960              		.loc 1 2380 6 is_stmt 0 view .LVU3121
 9961 1488 C0B2     		uxtb	r0, r0
 9962              	.LVL834:
2381:src/keys.c    **** 	}
 9963              		.loc 1 2381 3 is_stmt 1 view .LVU3122
 9964 148a B1E4     		b	.L680
 9965              	.LVL835:
 9966              	.L926:
2381:src/keys.c    **** 	}
 9967              		.loc 1 2381 3 is_stmt 0 view .LVU3123
 9968              	.LBE883:
 9969              	.LBE1137:
 9970              	.LBB1138:
 9971              	.LBB1089:
 9972              	.LBB1074:
 9973              	.LBB1067:
 438:src/keys.c    **** 		else if (shift == SHIFT_G)
 9974              		.loc 1 438 10 view .LVU3124
 9975 148c 0422     		movs	r2, #4
 9976              	.L750:
 9977              	.LVL836:
 442:src/keys.c    **** }
 9978              		.loc 1 442 2 is_stmt 1 view .LVU3125
 9979              	.LBB1062:
 121:src/keys.c    **** {
 9980              		.loc 1 121 12 view .LVU3126
 9981              	.LBB1058:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9982              		.loc 1 123 2 view .LVU3127
 133:src/keys.c    **** }
 9983              		.loc 1 133 2 view .LVU3128
 133:src/keys.c    **** }
 9984              		.loc 1 133 23 is_stmt 0 view .LVU3129
 9985 148e B649     		ldr	r1, .L1214
 9986              	.LBE1058:
 9987              	.LBE1062:
 442:src/keys.c    **** }
 9988              		.loc 1 442 49 view .LVU3130
 9989 1490 DFF8ECC2 		ldr	ip, .L1214+24
 9990              	.LBB1063:
 9991              	.LBB1059:
 133:src/keys.c    **** }
 9992              		.loc 1 133 23 view .LVU3131
 9993 1494 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9994              	.LBE1059:
 9995              	.LBE1063:
 442:src/keys.c    **** }
 9996              		.loc 1 442 49 view .LVU3132
 9997 1496 4FF0060E 		mov	lr, #6
 9998 149a 0EFB01C1 		mla	r1, lr, r1, ip
 9999 149e 063C     		subs	r4, r4, #6
ARM GAS  /tmp/ccczu93l.s 			page 284


 10000              	.LBE1067:
 10001              	.LBE1074:
1397:src/keys.c    **** 
 10002              		.loc 1 1397 19 view .LVU3133
 10003 14a0 4FF0000C 		mov	ip, #0
 10004              	.LBB1075:
 10005              	.LBB1068:
 442:src/keys.c    **** }
 10006              		.loc 1 442 49 view .LVU3134
 10007 14a4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10008              	.LVL837:
 442:src/keys.c    **** }
 10009              		.loc 1 442 49 view .LVU3135
 10010              	.LBE1068:
 10011              	.LBE1075:
1397:src/keys.c    **** 
 10012              		.loc 1 1397 2 is_stmt 1 view .LVU3136
1397:src/keys.c    **** 
 10013              		.loc 1 1397 19 is_stmt 0 view .LVU3137
 10014 14a6 88F80DC0 		strb	ip, [r8, #13]
1399:src/keys.c    **** 	case K10:	// STO
 10015              		.loc 1 1399 2 is_stmt 1 view .LVU3138
 10016 14aa 212C     		cmp	r4, #33
 10017 14ac 86D8     		bhi	.L753
 10018 14ae 01A2     		adr	r2, .L755
 10019 14b0 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 10020              		.p2align 2
 10021              	.L755:
 10022 14b4 091C0000 		.word	.L762+1
 10023 14b8 D31B0000 		.word	.L761+1
 10024 14bc BD130000 		.word	.L753+1
 10025 14c0 BD130000 		.word	.L753+1
 10026 14c4 BD130000 		.word	.L753+1
 10027 14c8 BD130000 		.word	.L753+1
 10028 14cc 891B0000 		.word	.L760+1
 10029 14d0 BD130000 		.word	.L753+1
 10030 14d4 BD130000 		.word	.L753+1
 10031 14d8 BD130000 		.word	.L753+1
 10032 14dc 491B0000 		.word	.L759+1
 10033 14e0 BD130000 		.word	.L753+1
 10034 14e4 3F1D0000 		.word	.L758+1
 10035 14e8 BD130000 		.word	.L753+1
 10036 14ec BD130000 		.word	.L753+1
 10037 14f0 BD130000 		.word	.L753+1
 10038 14f4 BD130000 		.word	.L753+1
 10039 14f8 BD130000 		.word	.L753+1
 10040 14fc 231D0000 		.word	.L757+1
 10041 1500 BD130000 		.word	.L753+1
 10042 1504 BD130000 		.word	.L753+1
 10043 1508 BD130000 		.word	.L753+1
 10044 150c BD130000 		.word	.L753+1
 10045 1510 BD130000 		.word	.L753+1
 10046 1514 BD130000 		.word	.L753+1
 10047 1518 BD130000 		.word	.L753+1
 10048 151c BD130000 		.word	.L753+1
 10049 1520 BD130000 		.word	.L753+1
 10050 1524 BD130000 		.word	.L753+1
ARM GAS  /tmp/ccczu93l.s 			page 285


 10051 1528 BD130000 		.word	.L753+1
 10052 152c C51C0000 		.word	.L756+1
 10053 1530 BD130000 		.word	.L753+1
 10054 1534 BD130000 		.word	.L753+1
 10055 1538 AD1C0000 		.word	.L754+1
 10056              	.LVL838:
 10057              		.p2align 1
 10058              	.L1126:
1399:src/keys.c    **** 	case K10:	// STO
 10059              		.loc 1 1399 2 is_stmt 0 view .LVU3139
 10060              	.LBE1089:
 10061              	.LBE1138:
 10062              	.LBB1139:
 10063              	.LBB669:
 10064              	.LBB663:
 326:src/keys.c    **** #else
 10065              		.loc 1 326 45 view .LVU3140
 10066 153c FFF7FEFF 		bl	shift_down
 10067              	.LVL839:
 326:src/keys.c    **** #else
 10068              		.loc 1 326 42 view .LVU3141
 10069 1540 0328     		cmp	r0, #3
 10070 1542 00F05F82 		beq	.L667
 10071 1546 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 324:src/keys.c    **** #ifndef WINGUI
 10072              		.loc 1 324 8 view .LVU3142
 10073 154a 884B     		ldr	r3, .L1214+4
 326:src/keys.c    **** #else
 10074              		.loc 1 326 73 view .LVU3143
 10075 154c DC46     		mov	ip, fp
 330:src/keys.c    ****   }
 10076              		.loc 1 330 9 view .LVU3144
 10077 154e 0C22     		movs	r2, #12
 10078 1550 FEF77CBE 		b	.L666
 10079              	.LVL840:
 10080              	.L918:
 330:src/keys.c    ****   }
 10081              		.loc 1 330 9 view .LVU3145
 10082              	.LBE663:
 10083              	.LBE669:
 10084              	.LBE1139:
 10085              	.LBB1140:
 10086              	.LBB932:
2556:src/keys.c    **** 	const int opcode = getprog(pc);
 10087              		.loc 1 2556 27 view .LVU3146
 10088 1554 4FF0030B 		mov	fp, #3
 10089 1558 BCE4     		b	.L695
 10090              	.LVL841:
 10091              	.L1135:
2556:src/keys.c    **** 	const int opcode = getprog(pc);
 10092              		.loc 1 2556 27 view .LVU3147
 10093              	.LBE932:
 10094              	.LBE1140:
2920:src/keys.c    **** 		// print_debug (3, c);
 10095              		.loc 1 2920 4 is_stmt 1 view .LVU3148
 10096              	.LBB1141:
 10097              	.LBI1141:
ARM GAS  /tmp/ccczu93l.s 			page 286


1003:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 10098              		.loc 1 1003 12 view .LVU3149
 10099              	.LBB1142:
1006:src/keys.c    **** 		// Row 1
 10100              		.loc 1 1006 2 view .LVU3150
1057:src/keys.c    **** 	int op = op_map[lc];
 10101              		.loc 1 1057 2 view .LVU3151
 10102              	.LBB1143:
 10103              	.LBI1143:
 136:src/keys.c    **** {
 10104              		.loc 1 136 12 view .LVU3152
 10105              	.LBB1144:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10106              		.loc 1 138 2 view .LVU3153
 148:src/keys.c    **** }
 10107              		.loc 1 148 2 view .LVU3154
 148:src/keys.c    **** }
 10108              		.loc 1 148 2 is_stmt 0 view .LVU3155
 10109              	.LBE1144:
 10110              	.LBE1143:
1058:src/keys.c    **** 	reset_shift();
 10111              		.loc 1 1058 2 is_stmt 1 view .LVU3156
 10112              	.LBB1147:
 10113              	.LBB1145:
 148:src/keys.c    **** }
 10114              		.loc 1 148 23 is_stmt 0 view .LVU3157
 10115 155a 854A     		ldr	r2, .L1214+8
 10116              	.LBE1145:
 10117              	.LBE1147:
1058:src/keys.c    **** 	reset_shift();
 10118              		.loc 1 1058 17 view .LVU3158
 10119 155c 854B     		ldr	r3, .L1214+12
 10120              	.LBB1148:
 10121              	.LBB1146:
 148:src/keys.c    **** }
 10122              		.loc 1 148 23 view .LVU3159
 10123 155e 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 10124              	.LBE1146:
 10125              	.LBE1148:
1058:src/keys.c    **** 	reset_shift();
 10126              		.loc 1 1058 17 view .LVU3160
 10127 1560 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 10128              	.LVL842:
1059:src/keys.c    **** 
 10129              		.loc 1 1059 2 is_stmt 1 view .LVU3161
 10130              	.LBB1149:
 10131              	.LBI1149:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10132              		.loc 1 104 13 view .LVU3162
 10133              	.LBE1149:
 10134              	.LBE1142:
 10135              	.LBE1141:
 10136              	.LBE1256:
 10137              	.LBE1330:
 105:src/keys.c    **** }
 10138              		.loc 1 105 2 view .LVU3163
 10139              	.LBB1331:
ARM GAS  /tmp/ccczu93l.s 			page 287


 10140              	.LBB1257:
 10141              	.LBB1165:
 10142              	.LBB1160:
 10143              	.LBB1156:
 10144              	.LBB1150:
 10145              	.LBI1150:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10146              		.loc 1 94 20 view .LVU3164
 10147              	.LBB1151:
  95:src/keys.c    **** 	State2.shifts = shift;
 10148              		.loc 1 95 2 view .LVU3165
 10149              	.LBB1152:
 10150              	.LBI1152:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 10151              		.loc 1 86 13 view .LVU3166
 10152              	.LBB1153:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10153              		.loc 1 87 2 view .LVU3167
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10154              		.loc 1 87 18 is_stmt 0 view .LVU3168
 10155 1564 FFF7FEFF 		bl	shift_down
 10156              	.LVL843:
  88:src/keys.c    **** }
 10157              		.loc 1 88 2 is_stmt 1 view .LVU3169
 10158              	.LBE1153:
 10159              	.LBE1152:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10160              		.loc 1 96 2 view .LVU3170
 10161              	.LBE1151:
 10162              	.LBE1150:
 10163              	.LBE1156:
1062:src/keys.c    **** 	case K62:
 10164              		.loc 1 1062 2 is_stmt 0 view .LVU3171
 10165 1568 262C     		cmp	r4, #38
 10166              	.LBB1157:
 10167              	.LBB1155:
 10168              	.LBB1154:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10169              		.loc 1 96 16 view .LVU3172
 10170 156a 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 10171              		.loc 1 98 2 is_stmt 1 view .LVU3173
 10172              	.LVL844:
  98:src/keys.c    **** }
 10173              		.loc 1 98 2 is_stmt 0 view .LVU3174
 10174              	.LBE1154:
 10175              	.LBE1155:
 10176              	.LBE1157:
1062:src/keys.c    **** 	case K62:
 10177              		.loc 1 1062 2 is_stmt 1 view .LVU3175
 10178 156e 00F09281 		beq	.L818
 10179 1572 272C     		cmp	r4, #39
 10180 1574 1FD1     		bne	.L820
1075:src/keys.c    **** 			return STATE_UNFINISHED;
 10181              		.loc 1 1075 3 view .LVU3176
1075:src/keys.c    **** 			return STATE_UNFINISHED;
 10182              		.loc 1 1075 7 is_stmt 0 view .LVU3177
ARM GAS  /tmp/ccczu93l.s 			page 288


 10183 1576 FFF7FEFF 		bl	is_bad_cmdline
 10184              	.LVL845:
1075:src/keys.c    **** 			return STATE_UNFINISHED;
 10185              		.loc 1 1075 6 view .LVU3178
 10186 157a 0028     		cmp	r0, #0
 10187 157c 40F0AA82 		bne	.L1181
1077:src/keys.c    **** 		process_cmdline_set_lift();
 10188              		.loc 1 1077 3 is_stmt 1 view .LVU3179
1077:src/keys.c    **** 		process_cmdline_set_lift();
 10189              		.loc 1 1077 30 is_stmt 0 view .LVU3180
 10190 1580 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10191 1584 C3F38012 		ubfx	r2, r3, #6, #1
1077:src/keys.c    **** 		process_cmdline_set_lift();
 10192              		.loc 1 1077 22 view .LVU3181
 10193 1588 C2F10102 		rsb	r2, r2, #1
1077:src/keys.c    **** 		process_cmdline_set_lift();
 10194              		.loc 1 1077 18 view .LVU3182
 10195 158c 62F38613 		bfi	r3, r2, #6, #1
 10196 1590 88F81630 		strb	r3, [r8, #22]
1078:src/keys.c    **** 		update_program_bounds(1);
 10197              		.loc 1 1078 3 is_stmt 1 view .LVU3183
 10198 1594 FFF7FEFF 		bl	process_cmdline_set_lift
 10199              	.LVL846:
1079:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 10200              		.loc 1 1079 3 view .LVU3184
 10201 1598 0120     		movs	r0, #1
 10202 159a FFF7FEFF 		bl	update_program_bounds
 10203              	.LVL847:
1080:src/keys.c    **** 			set_pc(0);
 10204              		.loc 1 1080 3 view .LVU3185
1080:src/keys.c    **** 			set_pc(0);
 10205              		.loc 1 1080 7 is_stmt 0 view .LVU3186
 10206 159e 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
1080:src/keys.c    **** 			set_pc(0);
 10207              		.loc 1 1080 6 view .LVU3187
 10208 15a2 10F04000 		ands	r0, r0, #64
 10209 15a6 06D1     		bne	.L820
1080:src/keys.c    **** 			set_pc(0);
 10210              		.loc 1 1080 27 view .LVU3188
 10211 15a8 734B     		ldr	r3, .L1214+16
 10212 15aa 1B68     		ldr	r3, [r3]
1080:src/keys.c    **** 			set_pc(0);
 10213              		.loc 1 1080 24 view .LVU3189
 10214 15ac B3F8E027 		ldrh	r2, [r3, #2016]
 10215 15b0 012A     		cmp	r2, #1
 10216 15b2 00F08182 		beq	.L1182
 10217              	.L820:
1088:src/keys.c    **** 		if (op & _RARG) {
 10218              		.loc 1 1088 5 view .LVU3190
 10219 15b6 BAF1330F 		cmp	r10, #51
1058:src/keys.c    **** 	reset_shift();
 10220              		.loc 1 1058 6 view .LVU3191
 10221 15ba D346     		mov	fp, r10
1088:src/keys.c    **** 		if (op & _RARG) {
 10222              		.loc 1 1088 2 is_stmt 1 view .LVU3192
1088:src/keys.c    **** 		if (op & _RARG) {
 10223              		.loc 1 1088 5 is_stmt 0 view .LVU3193
ARM GAS  /tmp/ccczu93l.s 			page 289


 10224 15bc 0AD0     		beq	.L829
 10225              	.LVL848:
1089:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 10226              		.loc 1 1089 3 is_stmt 1 view .LVU3194
1089:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 10227              		.loc 1 1089 6 is_stmt 0 view .LVU3195
 10228 15be 1AF4004F 		tst	r10, #32768
 10229 15c2 00F08E81 		beq	.L1183
1090:src/keys.c    **** 			op = STATE_UNFINISHED;
 10230              		.loc 1 1090 4 is_stmt 1 view .LVU3196
 10231              	.LVL849:
 10232              	.LBB1158:
 10233              	.LBI1158:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 10234              		.loc 1 503 13 view .LVU3197
 10235              	.LBB1159:
 504:src/keys.c    **** 		return;
 10236              		.loc 1 504 2 view .LVU3198
 504:src/keys.c    **** 		return;
 10237              		.loc 1 504 6 is_stmt 0 view .LVU3199
 10238 15c6 FFF7FEFF 		bl	is_bad_cmdline
 10239              	.LVL850:
 504:src/keys.c    **** 		return;
 10240              		.loc 1 504 5 view .LVU3200
 10241 15ca 18B9     		cbnz	r0, .L829
 10242 15cc 5FFA8AF0 		uxtb	r0, r10
 10243 15d0 FFF7FEFF 		bl	init_arg.part.0
 10244              	.LVL851:
 10245              	.L829:
 504:src/keys.c    **** 		return;
 10246              		.loc 1 504 5 view .LVU3201
 10247              	.LBE1159:
 10248              	.LBE1158:
1094:src/keys.c    **** #undef _RARG
 10249              		.loc 1 1094 2 is_stmt 1 view .LVU3202
1070:src/keys.c    **** #endif
 10250              		.loc 1 1070 29 is_stmt 0 view .LVU3203
 10251 15d4 4FF0330B 		mov	fp, #51
 10252              	.LVL852:
 10253              	.L823:
1094:src/keys.c    **** #undef _RARG
 10254              		.loc 1 1094 57 view .LVU3204
 10255 15d8 2BF4804B 		bic	fp, fp, #16384
 10256 15dc FEF72CBF 		b	.L595
 10257              	.LVL853:
 10258              	.L1134:
1094:src/keys.c    **** #undef _RARG
 10259              		.loc 1 1094 57 view .LVU3205
 10260              	.LBE1160:
 10261              	.LBE1165:
2918:src/keys.c    **** 		if (shift == SHIFT_H)
 10262              		.loc 1 2918 4 is_stmt 1 view .LVU3206
 10263              	.LBB1166:
 10264              	.LBI937:
 845:src/keys.c    **** 
 10265              		.loc 1 845 12 view .LVU3207
 10266              	.LBB963:
ARM GAS  /tmp/ccczu93l.s 			page 290


 848:src/keys.c    **** 		// Row 1
 10267              		.loc 1 848 2 view .LVU3208
 899:src/keys.c    **** 		STATE_UNFINISHED,
 10268              		.loc 1 899 2 view .LVU3209
 906:src/keys.c    **** 	int lc = keycode_to_linear(c);
 10269              		.loc 1 906 2 view .LVU3210
 10270              	.LBB942:
 10271              	.LBI942:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10272              		.loc 1 104 13 view .LVU3211
 10273              	.LBE942:
 10274              	.LBE963:
 10275              	.LBE1166:
 10276              	.LBE1257:
 10277              	.LBE1331:
 105:src/keys.c    **** }
 10278              		.loc 1 105 2 view .LVU3212
 10279              	.LBB1332:
 10280              	.LBB1258:
 10281              	.LBB1167:
 10282              	.LBB964:
 10283              	.LBB951:
 10284              	.LBB943:
 10285              	.LBI943:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10286              		.loc 1 94 20 view .LVU3213
 10287              	.LBB944:
  95:src/keys.c    **** 	State2.shifts = shift;
 10288              		.loc 1 95 2 view .LVU3214
 10289              	.LBB945:
 10290              	.LBI945:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 10291              		.loc 1 86 13 view .LVU3215
 10292              	.LBB946:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10293              		.loc 1 87 2 view .LVU3216
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10294              		.loc 1 87 18 is_stmt 0 view .LVU3217
 10295 15e0 FFF7FEFF 		bl	shift_down
 10296              	.LVL854:
  88:src/keys.c    **** }
 10297              		.loc 1 88 2 is_stmt 1 view .LVU3218
  88:src/keys.c    **** }
 10298              		.loc 1 88 52 is_stmt 0 view .LVU3219
 10299 15e4 0346     		mov	r3, r0
 10300 15e6 08B9     		cbnz	r0, .L793
 10301 15e8 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10302              	.L793:
 10303              	.LVL855:
  88:src/keys.c    **** }
 10304              		.loc 1 88 52 view .LVU3220
 10305              	.LBE946:
 10306              	.LBE945:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10307              		.loc 1 96 2 is_stmt 1 view .LVU3221
 10308              	.LBE944:
 10309              	.LBE943:
ARM GAS  /tmp/ccczu93l.s 			page 291


 10310              	.LBE951:
 10311              	.LBB952:
 10312              	.LBB953:
 148:src/keys.c    **** }
 10313              		.loc 1 148 23 is_stmt 0 view .LVU3222
 10314 15ec 604A     		ldr	r2, .L1214+8
 10315              	.LBE953:
 10316              	.LBE952:
 908:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10317              		.loc 1 908 21 view .LVU3223
 10318 15ee DFF894C1 		ldr	ip, .L1214+28
 10319              	.LBB956:
 10320              	.LBB954:
 148:src/keys.c    **** }
 10321              		.loc 1 148 23 view .LVU3224
 10322 15f2 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 10323              	.LBE954:
 10324              	.LBE956:
 908:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10325              		.loc 1 908 21 view .LVU3225
 10326 15f4 4200     		lsls	r2, r0, #1
 10327 15f6 022B     		cmp	r3, #2
 10328 15f8 08BF     		it	eq
 10329 15fa 0132     		addeq	r2, r2, #1
 10330              	.LBB957:
 10331              	.LBB949:
 10332              	.LBB947:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10333              		.loc 1 96 16 view .LVU3226
 10334 15fc 0021     		movs	r1, #0
 10335              	.LBE947:
 10336              	.LBE949:
 10337              	.LBE957:
 908:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10338              		.loc 1 908 21 view .LVU3227
 10339 15fe 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 10340              	.LBB958:
 10341              	.LBB950:
 10342              	.LBB948:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10343              		.loc 1 96 16 view .LVU3228
 10344 1602 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 10345              		.loc 1 98 2 is_stmt 1 view .LVU3229
 10346              	.LVL856:
  98:src/keys.c    **** }
 10347              		.loc 1 98 2 is_stmt 0 view .LVU3230
 10348              	.LBE948:
 10349              	.LBE950:
 10350              	.LBE958:
 907:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10351              		.loc 1 907 2 is_stmt 1 view .LVU3231
 10352              	.LBB959:
 10353              	.LBI952:
 136:src/keys.c    **** {
 10354              		.loc 1 136 12 view .LVU3232
 10355              	.LBB955:
ARM GAS  /tmp/ccczu93l.s 			page 292


 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10356              		.loc 1 138 2 view .LVU3233
 148:src/keys.c    **** }
 10357              		.loc 1 148 2 view .LVU3234
 148:src/keys.c    **** }
 10358              		.loc 1 148 2 is_stmt 0 view .LVU3235
 10359              	.LBE955:
 10360              	.LBE959:
 908:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10361              		.loc 1 908 2 is_stmt 1 view .LVU3236
 909:src/keys.c    **** 	if (no_int)
 10362              		.loc 1 909 2 view .LVU3237
 10363 1606 0BF4704A 		and	r10, fp, #61440
 10364              	.LVL857:
 910:src/keys.c    **** 		op &= ~NO_INT;
 10365              		.loc 1 910 2 view .LVU3238
 910:src/keys.c    **** 		op &= ~NO_INT;
 10366              		.loc 1 910 5 is_stmt 0 view .LVU3239
 10367 160a BAF5704F 		cmp	r10, #61440
 10368 160e 00F08081 		beq	.L1184
 913:src/keys.c    **** 	case K00:
 10369              		.loc 1 913 2 is_stmt 1 view .LVU3240
 10370 1612 282C     		cmp	r4, #40
 10371 1614 22D8     		bhi	.L816
 10372 1616 DFE804F0 		tbb	[pc, r4]
 10373              	.L884:
 10374 161a 4D       		.byte	(.L805-.L884)/2
 10375 161b 89       		.byte	(.L803-.L884)/2
 10376 161c 21       		.byte	(.L816-.L884)/2
 10377 161d 89       		.byte	(.L803-.L884)/2
 10378 161e 21       		.byte	(.L816-.L884)/2
 10379 161f 21       		.byte	(.L816-.L884)/2
 10380 1620 21       		.byte	(.L816-.L884)/2
 10381 1621 21       		.byte	(.L816-.L884)/2
 10382 1622 21       		.byte	(.L816-.L884)/2
 10383 1623 21       		.byte	(.L816-.L884)/2
 10384 1624 21       		.byte	(.L816-.L884)/2
 10385 1625 21       		.byte	(.L816-.L884)/2
 10386 1626 79       		.byte	(.L802-.L884)/2
 10387 1627 21       		.byte	(.L816-.L884)/2
 10388 1628 21       		.byte	(.L816-.L884)/2
 10389 1629 21       		.byte	(.L816-.L884)/2
 10390 162a 21       		.byte	(.L816-.L884)/2
 10391 162b 21       		.byte	(.L816-.L884)/2
 10392 162c 5F       		.byte	(.L801-.L884)/2
 10393 162d 15       		.byte	(.L800-.L884)/2
 10394 162e 21       		.byte	(.L816-.L884)/2
 10395 162f 21       		.byte	(.L816-.L884)/2
 10396 1630 21       		.byte	(.L816-.L884)/2
 10397 1631 21       		.byte	(.L816-.L884)/2
 10398 1632 21       		.byte	(.L816-.L884)/2
 10399 1633 21       		.byte	(.L816-.L884)/2
 10400 1634 21       		.byte	(.L816-.L884)/2
 10401 1635 21       		.byte	(.L816-.L884)/2
 10402 1636 21       		.byte	(.L816-.L884)/2
 10403 1637 21       		.byte	(.L816-.L884)/2
 10404 1638 32       		.byte	(.L799-.L884)/2
ARM GAS  /tmp/ccczu93l.s 			page 293


 10405 1639 27       		.byte	(.L798-.L884)/2
 10406 163a 39       		.byte	(.L796-.L884)/2
 10407 163b 39       		.byte	(.L796-.L884)/2
 10408 163c 21       		.byte	(.L816-.L884)/2
 10409 163d 21       		.byte	(.L816-.L884)/2
 10410 163e 21       		.byte	(.L816-.L884)/2
 10411 163f 21       		.byte	(.L816-.L884)/2
 10412 1640 21       		.byte	(.L816-.L884)/2
 10413 1641 39       		.byte	(.L796-.L884)/2
 10414 1642 39       		.byte	(.L796-.L884)/2
 10415 1643 00       		.p2align 1
 10416              	.L800:
 954:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10417              		.loc 1 954 4 view .LVU3241
 954:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10418              		.loc 1 954 7 is_stmt 0 view .LVU3242
 10419 1644 022B     		cmp	r3, #2
 10420 1646 00F07884 		beq	.L1185
 10421              	.LVL858:
 10422              	.L807:
 993:src/keys.c    **** 		return STATE_UNFINISHED;
 10423              		.loc 1 993 2 is_stmt 1 view .LVU3243
 993:src/keys.c    **** 		return STATE_UNFINISHED;
 10424              		.loc 1 993 5 is_stmt 0 view .LVU3244
 10425 164a BAF5704F 		cmp	r10, #61440
 10426 164e 05D1     		bne	.L816
 10427              	.L795:
 993:src/keys.c    **** 		return STATE_UNFINISHED;
 10428              		.loc 1 993 13 view .LVU3245
 10429 1650 494B     		ldr	r3, .L1214+16
 10430 1652 1B68     		ldr	r3, [r3]
 10431 1654 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10432 1658 D907     		lsls	r1, r3, #31
 10433 165a 26D4     		bmi	.L899
 10434              	.LVL859:
 10435              	.L816:
 996:src/keys.c    **** #undef NO_INT
 10436              		.loc 1 996 2 is_stmt 1 view .LVU3246
 10437              	.LBB960:
 10438              	.LBI939:
 621:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10439              		.loc 1 621 12 view .LVU3247
 10440              	.LBB941:
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 10441              		.loc 1 622 2 view .LVU3248
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 10442              		.loc 1 622 6 is_stmt 0 view .LVU3249
 10443 165c 4FEA2B23 		asr	r3, fp, #8
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 10444              		.loc 1 622 5 view .LVU3250
 10445 1660 012B     		cmp	r3, #1
 10446 1662 7EF4E9AE 		bne	.L595
 622:src/keys.c    **** 		const int nilop = argKIND(op);
 10447              		.loc 1 622 5 view .LVU3251
 10448 1666 84E4     		b	.L893
 10449              	.LVL860:
 10450              	.L798:
ARM GAS  /tmp/ccczu93l.s 			page 294


 622:src/keys.c    **** 		const int nilop = argKIND(op);
 10451              		.loc 1 622 5 view .LVU3252
 10452              	.LBE941:
 10453              	.LBE960:
 965:src/keys.c    **** 			return STATE_UNFINISHED;
 10454              		.loc 1 965 3 is_stmt 1 view .LVU3253
 965:src/keys.c    **** 			return STATE_UNFINISHED;
 10455              		.loc 1 965 7 is_stmt 0 view .LVU3254
 10456 1668 FFF7FEFF 		bl	is_bad_cmdline
 10457              	.LVL861:
 965:src/keys.c    **** 			return STATE_UNFINISHED;
 10458              		.loc 1 965 6 view .LVU3255
 10459 166c 0446     		mov	r4, r0
 10460              	.LVL862:
 965:src/keys.c    **** 			return STATE_UNFINISHED;
 10461              		.loc 1 965 6 view .LVU3256
 10462 166e 0028     		cmp	r0, #0
 10463 1670 00F0D483 		beq	.L812
 10464 1674 3268     		ldr	r2, [r6]
 966:src/keys.c    **** 		process_cmdline_set_lift();
 10465              		.loc 1 966 11 view .LVU3257
 10466 1676 4FF0330B 		mov	fp, #51
 10467              	.LVL863:
 966:src/keys.c    **** 		process_cmdline_set_lift();
 10468              		.loc 1 966 11 view .LVU3258
 10469 167a FEF71ABD 		b	.L565
 10470              	.LVL864:
 10471              	.L799:
 973:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10472              		.loc 1 973 3 is_stmt 1 view .LVU3259
 10473 167e 0093     		str	r3, [sp]
 973:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10474              		.loc 1 973 18 is_stmt 0 view .LVU3260
 10475 1680 FFF7FEFF 		bl	shift_down
 10476              	.LVL865:
 973:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10477              		.loc 1 973 6 view .LVU3261
 10478 1684 009B     		ldr	r3, [sp]
 10479 1686 0028     		cmp	r0, #0
 10480 1688 40F00B84 		bne	.L1186
 10481              	.L796:
 982:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10482              		.loc 1 982 3 is_stmt 1 view .LVU3262
 982:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10483              		.loc 1 982 6 is_stmt 0 view .LVU3263
 10484 168c BBF59C7F 		cmp	fp, #312
 10485 1690 40F0CE83 		bne	.L1187
 993:src/keys.c    **** 		return STATE_UNFINISHED;
 10486              		.loc 1 993 2 is_stmt 1 view .LVU3264
 993:src/keys.c    **** 		return STATE_UNFINISHED;
 10487              		.loc 1 993 5 is_stmt 0 view .LVU3265
 10488 1694 BAF5704F 		cmp	r10, #61440
 10489 1698 7FF46BAC 		bne	.L893
 993:src/keys.c    **** 		return STATE_UNFINISHED;
 10490              		.loc 1 993 13 view .LVU3266
 10491 169c 364B     		ldr	r3, .L1214+16
 10492 169e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccczu93l.s 			page 295


 10493 16a0 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10494 16a4 DB07     		lsls	r3, r3, #31
 10495 16a6 7FF564AC 		bpl	.L893
 10496              	.L899:
 993:src/keys.c    **** 		return STATE_UNFINISHED;
 10497              		.loc 1 993 13 view .LVU3267
 10498 16aa 3268     		ldr	r2, [r6]
 994:src/keys.c    **** 
 10499              		.loc 1 994 10 view .LVU3268
 10500 16ac 4FF0330B 		mov	fp, #51
 10501              	.LVL866:
 994:src/keys.c    **** 
 10502              		.loc 1 994 10 view .LVU3269
 10503 16b0 FEF7FFBC 		b	.L565
 10504              	.LVL867:
 10505              	.L805:
 915:src/keys.c    **** 	    State2.hyp = 1;
 10506              		.loc 1 915 4 is_stmt 1 view .LVU3270
 915:src/keys.c    **** 	    State2.hyp = 1;
 10507              		.loc 1 915 8 is_stmt 0 view .LVU3271
 10508 16b4 304A     		ldr	r2, .L1214+16
 10509 16b6 1268     		ldr	r2, [r2]
 10510 16b8 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 915:src/keys.c    **** 	    State2.hyp = 1;
 10511              		.loc 1 915 7 view .LVU3272
 10512 16bc D407     		lsls	r4, r2, #31
 10513 16be 40F19C83 		bpl	.L1188
 10514              	.L1100:
 934:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10515              		.loc 1 934 20 view .LVU3273
 10516 16c2 012B     		cmp	r3, #1
 10517 16c4 00F09183 		beq	.L1189
 993:src/keys.c    **** 		return STATE_UNFINISHED;
 10518              		.loc 1 993 2 is_stmt 1 view .LVU3274
 993:src/keys.c    **** 		return STATE_UNFINISHED;
 10519              		.loc 1 993 5 is_stmt 0 view .LVU3275
 10520 16c8 BAF5704F 		cmp	r10, #61440
 10521 16cc C6D1     		bne	.L816
 10522 16ce 3268     		ldr	r2, [r6]
 994:src/keys.c    **** 
 10523              		.loc 1 994 10 view .LVU3276
 10524 16d0 4FF0330B 		mov	fp, #51
 10525              	.LVL868:
 994:src/keys.c    **** 
 10526              		.loc 1 994 10 view .LVU3277
 10527 16d4 FEF7EDBC 		b	.L565
 10528              	.LVL869:
 10529              	.L801:
 959:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10530              		.loc 1 959 4 is_stmt 1 view .LVU3278
 959:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10531              		.loc 1 959 7 is_stmt 0 view .LVU3279
 10532 16d8 022B     		cmp	r3, #2
 10533 16da B6D1     		bne	.L807
 959:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10534              		.loc 1 959 27 view .LVU3280
 10535 16dc 264B     		ldr	r3, .L1214+16
ARM GAS  /tmp/ccczu93l.s 			page 296


 10536              	.LVL870:
 959:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10537              		.loc 1 959 27 view .LVU3281
 10538 16de 1B68     		ldr	r3, [r3]
 10539 16e0 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10540 16e4 DB07     		lsls	r3, r3, #31
 10541 16e6 B0D5     		bpl	.L807
 959:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10542              		.loc 1 959 45 view .LVU3282
 10543 16e8 0E20     		movs	r0, #14
 10544              	.LVL871:
 959:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10545              		.loc 1 959 45 view .LVU3283
 10546 16ea FFF7FEFF 		bl	intltr
 10547              	.LVL872:
 959:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10548              		.loc 1 959 42 view .LVU3284
 10549 16ee 0028     		cmp	r0, #0
 10550 16f0 ABD0     		beq	.L807
 10551              	.LVL873:
 959:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10552              		.loc 1 959 42 view .LVU3285
 10553              	.LBE964:
 10554              	.LBE1167:
 10555              	.LBE1258:
 10556              	.LBE1332:
3179:src/keys.c    **** 	NonProgrammable = 0;
 10557              		.loc 1 3179 7 is_stmt 1 view .LVU3286
3179:src/keys.c    **** 	NonProgrammable = 0;
 10558              		.loc 1 3179 11 is_stmt 0 view .LVU3287
 10559 16f2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3179:src/keys.c    **** 	NonProgrammable = 0;
 10560              		.loc 1 3179 10 view .LVU3288
 10561 16f6 5A06     		lsls	r2, r3, #25
 10562 16f8 40F11784 		bpl	.L931
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10563              		.loc 1 3180 2 is_stmt 1 view .LVU3289
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10564              		.loc 1 3180 18 is_stmt 0 view .LVU3290
 10565 16fc 1F4B     		ldr	r3, .L1214+20
 10566 16fe 0022     		movs	r2, #0
 10567              	.LBB1333:
 10568              	.LBB1259:
 10569              	.LBB1168:
 10570              	.LBB965:
 960:src/keys.c    **** 	  }
 10571              		.loc 1 960 13 view .LVU3291
 10572 1700 4FF0130B 		mov	fp, #19
 10573              	.LBE965:
 10574              	.LBE1168:
 10575              	.LBE1259:
 10576              	.LBE1333:
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10577              		.loc 1 3180 18 view .LVU3292
 10578 1704 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10579              		.loc 1 3181 2 is_stmt 1 view .LVU3293
ARM GAS  /tmp/ccczu93l.s 			page 297


3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10580              		.loc 1 3181 32 is_stmt 0 view .LVU3294
 10581 1706 5846     		mov	r0, fp
 10582 1708 FFF75EB8 		b	.L874
 10583              	.LVL874:
 10584              	.L802:
 10585              	.LBB1334:
 10586              	.LBB1260:
 10587              	.LBB1169:
 10588              	.LBB966:
 945:src/keys.c    **** 			if (is_bad_cmdline())
 10589              		.loc 1 945 3 is_stmt 1 view .LVU3295
 945:src/keys.c    **** 			if (is_bad_cmdline())
 10590              		.loc 1 945 6 is_stmt 0 view .LVU3296
 10591 170c 012B     		cmp	r3, #1
 10592 170e 9CD1     		bne	.L807
 946:src/keys.c    **** 				return STATE_UNFINISHED;
 10593              		.loc 1 946 4 is_stmt 1 view .LVU3297
 946:src/keys.c    **** 				return STATE_UNFINISHED;
 10594              		.loc 1 946 8 is_stmt 0 view .LVU3298
 10595 1710 FFF7FEFF 		bl	is_bad_cmdline
 10596              	.LVL875:
 946:src/keys.c    **** 				return STATE_UNFINISHED;
 10597              		.loc 1 946 7 view .LVU3299
 10598 1714 0028     		cmp	r0, #0
 10599 1716 40F00B84 		bne	.L1190
 948:src/keys.c    **** 			State2.alphas = 1;
 10600              		.loc 1 948 4 is_stmt 1 view .LVU3300
 10601 171a FFF7FEFF 		bl	process_cmdline_set_lift
 10602              	.LVL876:
 949:src/keys.c    **** 		}
 10603              		.loc 1 949 4 view .LVU3301
 949:src/keys.c    **** 		}
 10604              		.loc 1 949 18 is_stmt 0 view .LVU3302
 10605 171e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10606 1722 43F00803 		orr	r3, r3, #8
 10607 1726 88F81630 		strb	r3, [r8, #22]
 10608 172a 8EE7     		b	.L807
 10609              	.LVL877:
 10610              	.L803:
 934:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10611              		.loc 1 934 4 is_stmt 1 view .LVU3303
 934:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10612              		.loc 1 934 8 is_stmt 0 view .LVU3304
 10613 172c 124A     		ldr	r2, .L1214+16
 10614 172e 1268     		ldr	r2, [r2]
 10615 1730 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 934:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10616              		.loc 1 934 7 view .LVU3305
 10617 1734 D107     		lsls	r1, r2, #31
 10618 1736 88D5     		bpl	.L807
 10619 1738 C3E7     		b	.L1100
 10620              	.LVL878:
 10621              	.L682:
 934:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10622              		.loc 1 934 7 view .LVU3306
 10623              	.LBE966:
ARM GAS  /tmp/ccczu93l.s 			page 298


 10624              	.LBE1169:
 10625              	.LBB1170:
 10626              	.LBB884:
2406:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10627              		.loc 1 2406 3 is_stmt 1 view .LVU3307
2406:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10628              		.loc 1 2406 6 is_stmt 0 view .LVU3308
 10629 173a 0129     		cmp	r1, #1
 10630 173c 00F09082 		beq	.L1191
2409:src/keys.c    **** 		return STATE_UNFINISHED;
 10631              		.loc 1 2409 4 is_stmt 1 view .LVU3309
 10632              	.LBB873:
 10633              	.LBI873:
2363:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10634              		.loc 1 2363 13 view .LVU3310
 10635              	.LBB874:
2365:src/keys.c    **** 	if (! State2.alphas )
 10636              		.loc 1 2365 2 view .LVU3311
2365:src/keys.c    **** 	if (! State2.alphas )
 10637              		.loc 1 2365 15 is_stmt 0 view .LVU3312
 10638 1740 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2366:src/keys.c    **** 		State2.alphashift = 0;
 10639              		.loc 1 2366 6 view .LVU3313
 10640 1744 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2365:src/keys.c    **** 	if (! State2.alphas )
 10641              		.loc 1 2365 15 view .LVU3314
 10642 1748 60F3C302 		bfi	r2, r0, #3, #1
 10643 174c 88F81520 		strb	r2, [r8, #21]
2366:src/keys.c    **** 		State2.alphashift = 0;
 10644              		.loc 1 2366 2 is_stmt 1 view .LVU3315
2366:src/keys.c    **** 		State2.alphashift = 0;
 10645              		.loc 1 2366 5 is_stmt 0 view .LVU3316
 10646 1750 13F00802 		ands	r2, r3, #8
2367:src/keys.c    **** }
 10647              		.loc 1 2367 3 is_stmt 1 view .LVU3317
2367:src/keys.c    **** }
 10648              		.loc 1 2367 21 is_stmt 0 view .LVU3318
 10649 1754 04BF     		itt	eq
 10650 1756 62F30413 		bfieq	r3, r2, #4, #1
 10651 175a 88F81630 		strbeq	r3, [r8, #22]
 10652 175e 3268     		ldr	r2, [r6]
 10653              	.LBE874:
 10654              	.LBE873:
2410:src/keys.c    **** 
 10655              		.loc 1 2410 10 view .LVU3319
 10656 1760 4FF0330B 		mov	fp, #51
 10657 1764 FEF7A5BC 		b	.L565
 10658              	.L1215:
 10659              		.align	2
 10660              	.L1214:
 10661 1768 00000000 		.word	.LANCHOR1
 10662 176c 00000000 		.word	.LANCHOR11
 10663 1770 00000000 		.word	.LANCHOR18
 10664 1774 00000000 		.word	.LANCHOR21
 10665 1778 00000000 		.word	main_ram
 10666 177c 00000000 		.word	NonProgrammable
 10667 1780 00000000 		.word	.LANCHOR9
ARM GAS  /tmp/ccczu93l.s 			page 299


 10668 1784 00000000 		.word	.LANCHOR19
 10669              	.L681:
2396:src/keys.c    **** 			if (State2.numdigit == 0)
 10670              		.loc 1 2396 3 is_stmt 1 view .LVU3320
2396:src/keys.c    **** 			if (State2.numdigit == 0)
 10671              		.loc 1 2396 6 is_stmt 0 view .LVU3321
 10672 1788 0329     		cmp	r1, #3
 10673 178a 3FF427AB 		beq	.L687
2397:src/keys.c    **** 				reset_multi();
 10674              		.loc 1 2397 4 is_stmt 1 view .LVU3322
2397:src/keys.c    **** 				reset_multi();
 10675              		.loc 1 2397 14 is_stmt 0 view .LVU3323
 10676 178e 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2397:src/keys.c    **** 				reset_multi();
 10677              		.loc 1 2397 7 view .LVU3324
 10678 1792 002A     		cmp	r2, #0
 10679 1794 40F0C581 		bne	.L688
2398:src/keys.c    **** 			else
 10680              		.loc 1 2398 5 is_stmt 1 view .LVU3325
 10681              	.LBB875:
 10682              	.LBI875:
2363:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10683              		.loc 1 2363 13 view .LVU3326
 10684              	.LBB876:
2365:src/keys.c    **** 	if (! State2.alphas )
 10685              		.loc 1 2365 2 view .LVU3327
2366:src/keys.c    **** 		State2.alphashift = 0;
 10686              		.loc 1 2366 6 is_stmt 0 view .LVU3328
 10687 1798 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2365:src/keys.c    **** 	if (! State2.alphas )
 10688              		.loc 1 2365 15 view .LVU3329
 10689 179c 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 10690              	.LVL879:
2365:src/keys.c    **** 	if (! State2.alphas )
 10691              		.loc 1 2365 15 view .LVU3330
 10692 17a0 62F3C301 		bfi	r1, r2, #3, #1
2366:src/keys.c    **** 		State2.alphashift = 0;
 10693              		.loc 1 2366 5 view .LVU3331
 10694 17a4 13F00802 		ands	r2, r3, #8
2367:src/keys.c    **** }
 10695              		.loc 1 2367 21 view .LVU3332
 10696 17a8 08BF     		it	eq
 10697 17aa 62F30413 		bfieq	r3, r2, #4, #1
2365:src/keys.c    **** 	if (! State2.alphas )
 10698              		.loc 1 2365 15 view .LVU3333
 10699 17ae 88F81510 		strb	r1, [r8, #21]
2366:src/keys.c    **** 		State2.alphashift = 0;
 10700              		.loc 1 2366 2 is_stmt 1 view .LVU3334
2367:src/keys.c    **** }
 10701              		.loc 1 2367 3 view .LVU3335
2367:src/keys.c    **** }
 10702              		.loc 1 2367 21 is_stmt 0 view .LVU3336
 10703 17b2 08BF     		it	eq
 10704 17b4 88F81630 		strbeq	r3, [r8, #22]
 10705 17b8 3268     		ldr	r2, [r6]
 10706              	.LBE876:
 10707              	.LBE875:
ARM GAS  /tmp/ccczu93l.s 			page 300


2401:src/keys.c    **** 		}
 10708              		.loc 1 2401 11 view .LVU3337
 10709 17ba 4FF0330B 		mov	fp, #51
 10710 17be FEF778BC 		b	.L565
 10711              	.LVL880:
 10712              	.L1156:
2401:src/keys.c    **** 		}
 10713              		.loc 1 2401 11 view .LVU3338
 10714              	.LBE884:
 10715              	.LBE1170:
 10716              	.LBB1171:
 10717              	.LBB800:
 10718              	.LBB792:
2495:src/keys.c    **** 		else if (nn != NO_REG)
 10719              		.loc 1 2495 4 is_stmt 1 view .LVU3339
2497:src/keys.c    **** 	}
 10720              		.loc 1 2497 6 is_stmt 0 view .LVU3340
 10721 17c2 9342     		cmp	r3, r2
 10722 17c4 08BF     		it	eq
 10723 17c6 0A22     		moveq	r2, #10
 10724              	.LVL881:
2497:src/keys.c    **** 	}
 10725              		.loc 1 2497 6 view .LVU3341
 10726 17c8 FFF7E5B9 		b	.L644
 10727              	.LVL882:
 10728              	.L1162:
2497:src/keys.c    **** 	}
 10729              		.loc 1 2497 6 view .LVU3342
 10730              	.LBE792:
 10731              	.LBE800:
 10732              	.LBE1171:
 10733              	.LBB1172:
 10734              	.LBB885:
2386:src/keys.c    **** 				break;
 10735              		.loc 1 2386 3 is_stmt 1 view .LVU3343
2386:src/keys.c    **** 				break;
 10736              		.loc 1 2386 6 is_stmt 0 view .LVU3344
 10737 17cc 0029     		cmp	r1, #0
 10738 17ce 7FF4FDAA 		bne	.L683
2388:src/keys.c    **** 		if (State2.numdigit == 0)
 10739              		.loc 1 2388 3 is_stmt 1 view .LVU3345
 10740              	.LBB877:
 10741              	.LBI877:
2363:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10742              		.loc 1 2363 13 view .LVU3346
 10743              	.LBB878:
2365:src/keys.c    **** 	if (! State2.alphas )
 10744              		.loc 1 2365 2 view .LVU3347
2365:src/keys.c    **** 	if (! State2.alphas )
 10745              		.loc 1 2365 15 is_stmt 0 view .LVU3348
 10746 17d2 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2366:src/keys.c    **** 		State2.alphashift = 0;
 10747              		.loc 1 2366 6 view .LVU3349
 10748 17d6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2365:src/keys.c    **** 	if (! State2.alphas )
 10749              		.loc 1 2365 15 view .LVU3350
 10750 17da 61F3C302 		bfi	r2, r1, #3, #1
ARM GAS  /tmp/ccczu93l.s 			page 301


 10751 17de 88F81520 		strb	r2, [r8, #21]
2366:src/keys.c    **** 		State2.alphashift = 0;
 10752              		.loc 1 2366 2 is_stmt 1 view .LVU3351
2366:src/keys.c    **** 		State2.alphashift = 0;
 10753              		.loc 1 2366 5 is_stmt 0 view .LVU3352
 10754 17e2 1A07     		lsls	r2, r3, #28
2367:src/keys.c    **** }
 10755              		.loc 1 2367 3 is_stmt 1 view .LVU3353
 10756              	.LBE878:
 10757              	.LBE877:
2389:src/keys.c    **** 			return STATE_UNFINISHED;
 10758              		.loc 1 2389 3 view .LVU3354
 10759              	.LBB880:
 10760              	.LBB879:
2367:src/keys.c    **** }
 10761              		.loc 1 2367 21 is_stmt 0 view .LVU3355
 10762 17e4 5CBF     		itt	pl
 10763 17e6 61F30413 		bfipl	r3, r1, #4, #1
 10764 17ea 88F81630 		strbpl	r3, [r8, #22]
 10765              	.LBE879:
 10766              	.LBE880:
2389:src/keys.c    **** 			return STATE_UNFINISHED;
 10767              		.loc 1 2389 13 view .LVU3356
 10768 17ee 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2389:src/keys.c    **** 			return STATE_UNFINISHED;
 10769              		.loc 1 2389 6 view .LVU3357
 10770 17f2 002B     		cmp	r3, #0
 10771 17f4 00F0F482 		beq	.L1192
2391:src/keys.c    **** 			State2.digval2 = 0;
 10772              		.loc 1 2391 8 is_stmt 1 view .LVU3358
2391:src/keys.c    **** 			State2.digval2 = 0;
 10773              		.loc 1 2391 11 is_stmt 0 view .LVU3359
 10774 17f8 012B     		cmp	r3, #1
2392:src/keys.c    **** 		goto fin;
 10775              		.loc 1 2392 19 view .LVU3360
 10776 17fa 4FF00000 		mov	r0, #0
2391:src/keys.c    **** 			State2.digval2 = 0;
 10777              		.loc 1 2391 11 view .LVU3361
 10778 17fe 7FF40EAB 		bne	.L686
2392:src/keys.c    **** 		goto fin;
 10779              		.loc 1 2392 4 is_stmt 1 view .LVU3362
2392:src/keys.c    **** 		goto fin;
 10780              		.loc 1 2392 19 is_stmt 0 view .LVU3363
 10781 1802 88F80A00 		strb	r0, [r8, #10]
 10782 1806 FFF70ABB 		b	.L686
 10783              	.LVL883:
 10784              	.L1173:
2392:src/keys.c    **** 		goto fin;
 10785              		.loc 1 2392 19 view .LVU3364
 10786              	.LBE885:
 10787              	.LBE1172:
 10788              	.LBB1173:
 10789              	.LBB1013:
2703:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10790              		.loc 1 2703 50 view .LVU3365
 10791 180a 0D2C     		cmp	r4, #13
 10792 180c 7FF4D0AC 		bne	.L731
ARM GAS  /tmp/ccczu93l.s 			page 302


2704:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10793              		.loc 1 2704 3 is_stmt 1 view .LVU3366
 10794 1810 B9F1010F 		cmp	r9, #1
 10795 1814 14BF     		ite	ne
 10796 1816 2C20     		movne	r0, #44
 10797              	.LVL884:
2704:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10798              		.loc 1 2704 3 is_stmt 0 view .LVU3367
 10799 1818 2B20     		moveq	r0, #43
 10800 181a FFF7FEFF 		bl	set_window
 10801              	.LVL885:
2705:src/keys.c    **** 	}
 10802              		.loc 1 2705 3 is_stmt 1 view .LVU3368
 10803              	.LBB1009:
 10804              	.LBI1009:
 648:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10805              		.loc 1 648 13 view .LVU3369
 10806              	.LBB1010:
 649:src/keys.c    **** }
 10807              		.loc 1 649 2 view .LVU3370
 649:src/keys.c    **** }
 10808              		.loc 1 649 15 is_stmt 0 view .LVU3371
 10809 181e 98F81130 		ldrb	r3, [r8, #17]	@ zero_extendqisi2
 10810 1822 3268     		ldr	r2, [r6]
 10811 1824 013B     		subs	r3, r3, #1
 10812 1826 18BF     		it	ne
 10813 1828 0123     		movne	r3, #1
 10814 182a 88F81130 		strb	r3, [r8, #17]
 10815              	.LVL886:
 649:src/keys.c    **** }
 10816              		.loc 1 649 15 view .LVU3372
 10817              	.LBE1010:
 10818              	.LBE1009:
2712:src/keys.c    **** 	case K_DOWN:
 10819              		.loc 1 2712 2 is_stmt 1 view .LVU3373
2712:src/keys.c    **** 	case K_DOWN:
 10820              		.loc 1 2712 2 is_stmt 0 view .LVU3374
 10821              	.LBE1013:
 10822              	.LBE1173:
 10823              	.LBE1260:
 10824              	.LBE1334:
3143:src/keys.c    ****     case STATE_SST:
 10825              		.loc 1 3143 5 is_stmt 1 view .LVU3375
 10826              	.LBB1335:
 10827              	.LBB1261:
 10828              	.LBB1174:
 10829              	.LBB1014:
2763:src/keys.c    **** 	}
 10830              		.loc 1 2763 10 is_stmt 0 view .LVU3376
 10831 182e 4FF0330B 		mov	fp, #51
 10832 1832 FEF73EBC 		b	.L565
 10833              	.LVL887:
 10834              	.L1169:
2763:src/keys.c    **** 	}
 10835              		.loc 1 2763 10 view .LVU3377
 10836 1836 3268     		ldr	r2, [r6]
 10837              	.LBE1014:
ARM GAS  /tmp/ccczu93l.s 			page 303


 10838              	.LBE1174:
 10839              	.LBB1175:
 10840              	.LBB740:
1945:src/keys.c    **** 
 10841              		.loc 1 1945 10 view .LVU3378
 10842 1838 4FF0330B 		mov	fp, #51
 10843              	.LVL888:
1945:src/keys.c    **** 
 10844              		.loc 1 1945 10 view .LVU3379
 10845 183c FEF739BC 		b	.L565
 10846              	.LVL889:
 10847              	.L1170:
1945:src/keys.c    **** 
 10848              		.loc 1 1945 10 view .LVU3380
 10849              	.LBE740:
 10850              	.LBE1175:
 10851              	.LBB1176:
 10852              	.LBB1015:
2687:src/keys.c    **** 	const int g_max = global_regs();
 10853              		.loc 1 2687 33 view .LVU3381
 10854 1840 FFF7FEFF 		bl	local_regs
 10855              	.LVL890:
 10856 1844 8246     		mov	r10, r0
 10857              	.LVL891:
2687:src/keys.c    **** 	const int g_max = global_regs();
 10858              		.loc 1 2687 33 view .LVU3382
 10859 1846 A3E4     		b	.L723
 10860              	.LVL892:
 10861              	.L1165:
2687:src/keys.c    **** 	const int g_max = global_regs();
 10862              		.loc 1 2687 33 view .LVU3383
 10863              	.LBE1015:
 10864              	.LBE1176:
 10865              	.LBB1177:
 10866              	.LBB886:
2422:src/keys.c    **** 		State2.numdigit = 1;
 10867              		.loc 1 2422 3 is_stmt 1 view .LVU3384
2423:src/keys.c    **** 		return STATE_UNFINISHED;
 10868              		.loc 1 2423 19 is_stmt 0 view .LVU3385
 10869 1848 0123     		movs	r3, #1
 10870 184a 3268     		ldr	r2, [r6]
2422:src/keys.c    **** 		State2.numdigit = 1;
 10871              		.loc 1 2422 17 view .LVU3386
 10872 184c A8F80800 		strh	r0, [r8, #8]	@ movhi
2423:src/keys.c    **** 		return STATE_UNFINISHED;
 10873              		.loc 1 2423 3 is_stmt 1 view .LVU3387
2423:src/keys.c    **** 		return STATE_UNFINISHED;
 10874              		.loc 1 2423 19 is_stmt 0 view .LVU3388
 10875 1850 88F80B30 		strb	r3, [r8, #11]
2424:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10876              		.loc 1 2424 3 is_stmt 1 view .LVU3389
2424:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10877              		.loc 1 2424 10 is_stmt 0 view .LVU3390
 10878 1854 4FF0330B 		mov	fp, #51
 10879 1858 FEF72BBC 		b	.L565
 10880              	.L1164:
2424:src/keys.c    **** 	} else if (State2.numdigit == 1) {
ARM GAS  /tmp/ccczu93l.s 			page 304


 10881              		.loc 1 2424 10 view .LVU3391
 10882 185c 3268     		ldr	r2, [r6]
2419:src/keys.c    **** add_char:
 10883              		.loc 1 2419 10 view .LVU3392
 10884 185e 4FF0330B 		mov	fp, #51
 10885 1862 FEF726BC 		b	.L565
 10886              	.LVL893:
 10887              	.L1172:
2419:src/keys.c    **** add_char:
 10888              		.loc 1 2419 10 view .LVU3393
 10889              	.LBE886:
 10890              	.LBE1177:
 10891              	.LBB1178:
 10892              	.LBB1016:
 10893              	.LBB1011:
2697:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10894              		.loc 1 2697 3 is_stmt 1 view .LVU3394
2697:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10895              		.loc 1 2697 19 is_stmt 0 view .LVU3395
 10896 1866 B8F80810 		ldrh	r1, [r8, #8]
2697:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10897              		.loc 1 2697 27 view .LVU3396
 10898 186a 0A23     		movs	r3, #10
2697:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10899              		.loc 1 2697 32 view .LVU3397
 10900 186c 03FB01B2 		mla	r2, r3, r1, fp
2697:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10901              		.loc 1 2697 37 view .LVU3398
 10902 1870 6424     		movs	r4, #100
 10903 1872 B2FBF4F3 		udiv	r3, r2, r4
 10904 1876 04FB1323 		mls	r3, r4, r3, r2
 10905              	.LVL894:
2698:src/keys.c    **** 			dv = n;
 10906              		.loc 1 2698 3 is_stmt 1 view .LVU3399
2698:src/keys.c    **** 			dv = n;
 10907              		.loc 1 2698 6 is_stmt 0 view .LVU3400
 10908 187a 5345     		cmp	r3, r10
 10909 187c 09DA     		bge	.L729
2698:src/keys.c    **** 			dv = n;
 10910              		.loc 1 2698 21 view .LVU3401
 10911 187e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2698:src/keys.c    **** 			dv = n;
 10912              		.loc 1 2698 17 view .LVU3402
 10913 1882 D407     		lsls	r4, r2, #31
 10914 1884 3FF5D1AC 		bmi	.L1095
2698:src/keys.c    **** 			dv = n;
 10915              		.loc 1 2698 36 view .LVU3403
 10916 1888 8842     		cmp	r0, r1
 10917 188a 02DD     		ble	.L729
2698:src/keys.c    **** 			dv = n;
 10918              		.loc 1 2698 63 view .LVU3404
 10919 188c 9842     		cmp	r0, r3
 10920 188e 3FF7CCAC 		bgt	.L1095
 10921              	.L729:
2699:src/keys.c    **** 		State2.digval = dv;
 10922              		.loc 1 2699 4 is_stmt 1 view .LVU3405
2699:src/keys.c    **** 		State2.digval = dv;
ARM GAS  /tmp/ccczu93l.s 			page 305


 10923              		.loc 1 2699 7 is_stmt 0 view .LVU3406
 10924 1892 5B46     		mov	r3, fp
 10925              	.LVL895:
2700:src/keys.c    **** 		goto reset_window;
 10926              		.loc 1 2700 3 is_stmt 1 view .LVU3407
 10927 1894 C9E4     		b	.L1095
 10928              	.LVL896:
 10929              	.L818:
2700:src/keys.c    **** 		goto reset_window;
 10930              		.loc 1 2700 3 is_stmt 0 view .LVU3408
 10931              	.LBE1011:
 10932              	.LBE1016:
 10933              	.LBE1178:
 10934              	.LBB1179:
 10935              	.LBB1161:
1064:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10936              		.loc 1 1064 3 is_stmt 1 view .LVU3409
1064:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10937              		.loc 1 1064 7 is_stmt 0 view .LVU3410
 10938 1896 D84B     		ldr	r3, .L1216
 10939 1898 1B68     		ldr	r3, [r3]
 10940 189a 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1064:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10941              		.loc 1 1064 6 view .LVU3411
 10942 189e D207     		lsls	r2, r2, #31
 10943 18a0 2FD5     		bpl	.L821
1065:src/keys.c    **** 		else
 10944              		.loc 1 1065 4 is_stmt 1 view .LVU3412
1065:src/keys.c    **** 		else
 10945              		.loc 1 1065 57 is_stmt 0 view .LVU3413
 10946 18a2 93F9E737 		ldrsb	r3, [r3, #2023]
 10947 18a6 002B     		cmp	r3, #0
 10948 18a8 40F2531B 		movw	fp, #339
 10949 18ac A8BF     		it	ge
 10950 18ae 4FF4AA7B 		movge	fp, #340
 10951 18b2 91E6     		b	.L823
 10952              	.LVL897:
 10953              	.L1151:
1065:src/keys.c    **** 		else
 10954              		.loc 1 1065 57 view .LVU3414
 10955              	.LBE1161:
 10956              	.LBE1179:
 10957              	.LBB1180:
 10958              	.LBB762:
1363:src/keys.c    **** 		if (rawpc == 1)
 10959              		.loc 1 1363 3 is_stmt 1 view .LVU3415
1363:src/keys.c    **** 		if (rawpc == 1)
 10960              		.loc 1 1363 11 is_stmt 0 view .LVU3416
 10961 18b4 DFF84093 		ldr	r9, .L1216
 10962 18b8 D9F80030 		ldr	r3, [r9]
 10963              	.LVL898:
1363:src/keys.c    **** 		if (rawpc == 1)
 10964              		.loc 1 1363 9 view .LVU3417
 10965 18bc B3F8E007 		ldrh	r0, [r3, #2016]
 10966              	.LVL899:
1364:src/keys.c    **** 			rawpc = 0;
 10967              		.loc 1 1364 3 is_stmt 1 view .LVU3418
ARM GAS  /tmp/ccczu93l.s 			page 306


1365:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10968              		.loc 1 1365 10 is_stmt 0 view .LVU3419
 10969 18c0 0128     		cmp	r0, #1
 10970              	.LVL900:
1366:src/keys.c    **** 		update_program_bounds(1);
 10971              		.loc 1 1366 3 is_stmt 1 view .LVU3420
 10972 18c2 08BF     		it	eq
 10973 18c4 0020     		moveq	r0, #0
 10974              	.LVL901:
1366:src/keys.c    **** 		update_program_bounds(1);
 10975              		.loc 1 1366 3 is_stmt 0 view .LVU3421
 10976 18c6 0021     		movs	r1, #0
 10977 18c8 FFF7FEFF 		bl	do_dec
 10978              	.LVL902:
1366:src/keys.c    **** 		update_program_bounds(1);
 10979              		.loc 1 1366 3 view .LVU3422
 10980 18cc FFF7FEFF 		bl	set_pc
 10981              	.LVL903:
1367:src/keys.c    **** 		rawpc = ProgBegin;
 10982              		.loc 1 1367 3 is_stmt 1 view .LVU3423
 10983 18d0 0120     		movs	r0, #1
 10984 18d2 FFF7FEFF 		bl	update_program_bounds
 10985              	.LVL904:
1368:src/keys.c    **** 		goto fin;
 10986              		.loc 1 1368 3 view .LVU3424
1368:src/keys.c    **** 		goto fin;
 10987              		.loc 1 1368 11 is_stmt 0 view .LVU3425
 10988 18d6 D9F80030 		ldr	r3, [r9]
1368:src/keys.c    **** 		goto fin;
 10989              		.loc 1 1368 9 view .LVU3426
 10990 18da B3F8EC07 		ldrh	r0, [r3, #2028]
 10991              	.LVL905:
1369:src/keys.c    **** 	}
 10992              		.loc 1 1369 3 is_stmt 1 view .LVU3427
 10993 18de FFF73FBA 		b	.L607
 10994              	.LVL906:
 10995              	.L1183:
1369:src/keys.c    **** 	}
 10996              		.loc 1 1369 3 is_stmt 0 view .LVU3428
 10997              	.LBE762:
 10998              	.LBE1180:
 10999              	.LBB1181:
 11000              	.LBB1162:
1094:src/keys.c    **** #undef _RARG
 11001              		.loc 1 1094 2 is_stmt 1 view .LVU3429
1094:src/keys.c    **** #undef _RARG
 11002              		.loc 1 1094 9 is_stmt 0 view .LVU3430
 11003 18e2 C54B     		ldr	r3, .L1216
 11004 18e4 1B68     		ldr	r3, [r3]
 11005 18e6 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1094:src/keys.c    **** #undef _RARG
 11006              		.loc 1 1094 57 view .LVU3431
 11007 18ea DC07     		lsls	r4, r3, #31
 11008 18ec 7FF574AE 		bpl	.L823
 11009              	.LVL907:
1094:src/keys.c    **** #undef _RARG
 11010              		.loc 1 1094 21 view .LVU3432
ARM GAS  /tmp/ccczu93l.s 			page 307


 11011 18f0 1AF4804F 		tst	r10, #16384
 11012 18f4 3FF470AE 		beq	.L823
 11013 18f8 3268     		ldr	r2, [r6]
1094:src/keys.c    **** #undef _RARG
 11014              		.loc 1 1094 57 view .LVU3433
 11015 18fa 4FF0330B 		mov	fp, #51
 11016 18fe FEF7D8BB 		b	.L565
 11017              	.LVL908:
 11018              	.L821:
1070:src/keys.c    **** #endif
 11019              		.loc 1 1070 4 is_stmt 1 view .LVU3434
1070:src/keys.c    **** #endif
 11020              		.loc 1 1070 8 is_stmt 0 view .LVU3435
 11021 1902 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1070:src/keys.c    **** #endif
 11022              		.loc 1 1070 7 view .LVU3436
 11023 1906 9B06     		lsls	r3, r3, #26
 11024 1908 7FF555AE 		bpl	.L820
1070:src/keys.c    **** #endif
 11025              		.loc 1 1070 29 view .LVU3437
 11026 190c 40F24F1B 		movw	fp, #335
 11027 1910 62E6     		b	.L823
 11028              	.LVL909:
 11029              	.L1184:
1070:src/keys.c    **** #endif
 11030              		.loc 1 1070 29 view .LVU3438
 11031              	.LBE1162:
 11032              	.LBE1181:
 11033              	.LBB1182:
 11034              	.LBB967:
 911:src/keys.c    **** 
 11035              		.loc 1 911 3 is_stmt 1 view .LVU3439
 911:src/keys.c    **** 
 11036              		.loc 1 911 6 is_stmt 0 view .LVU3440
 11037 1912 2BF4704B 		bic	fp, fp, #61440
 11038              	.LVL910:
 913:src/keys.c    **** 	case K00:
 11039              		.loc 1 913 2 is_stmt 1 view .LVU3441
 11040 1916 282C     		cmp	r4, #40
 11041 1918 3FF69AAE 		bhi	.L795
 11042 191c 01A2     		adr	r2, .L797
 11043 191e 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 11044 1922 00BF     		.p2align 2
 11045              	.L797:
 11046 1924 B5160000 		.word	.L805+1
 11047 1928 2D170000 		.word	.L803+1
 11048 192c 51160000 		.word	.L795+1
 11049 1930 2D170000 		.word	.L803+1
 11050 1934 51160000 		.word	.L795+1
 11051 1938 51160000 		.word	.L795+1
 11052 193c 51160000 		.word	.L795+1
 11053 1940 51160000 		.word	.L795+1
 11054 1944 51160000 		.word	.L795+1
 11055 1948 51160000 		.word	.L795+1
 11056 194c 51160000 		.word	.L795+1
 11057 1950 51160000 		.word	.L795+1
 11058 1954 0D170000 		.word	.L802+1
ARM GAS  /tmp/ccczu93l.s 			page 308


 11059 1958 51160000 		.word	.L795+1
 11060 195c 51160000 		.word	.L795+1
 11061 1960 51160000 		.word	.L795+1
 11062 1964 51160000 		.word	.L795+1
 11063 1968 51160000 		.word	.L795+1
 11064 196c D9160000 		.word	.L801+1
 11065 1970 45160000 		.word	.L800+1
 11066 1974 51160000 		.word	.L795+1
 11067 1978 51160000 		.word	.L795+1
 11068 197c 51160000 		.word	.L795+1
 11069 1980 51160000 		.word	.L795+1
 11070 1984 51160000 		.word	.L795+1
 11071 1988 51160000 		.word	.L795+1
 11072 198c 51160000 		.word	.L795+1
 11073 1990 51160000 		.word	.L795+1
 11074 1994 51160000 		.word	.L795+1
 11075 1998 51160000 		.word	.L795+1
 11076 199c 7F160000 		.word	.L799+1
 11077 19a0 69160000 		.word	.L798+1
 11078 19a4 8D160000 		.word	.L796+1
 11079 19a8 8D160000 		.word	.L796+1
 11080 19ac 51160000 		.word	.L795+1
 11081 19b0 51160000 		.word	.L795+1
 11082 19b4 51160000 		.word	.L795+1
 11083 19b8 51160000 		.word	.L795+1
 11084 19bc 51160000 		.word	.L795+1
 11085 19c0 8D160000 		.word	.L796+1
 11086 19c4 8D160000 		.word	.L796+1
 11087              	.LVL911:
 11088              		.p2align 1
 11089              	.L1168:
 913:src/keys.c    **** 	case K00:
 11090              		.loc 1 913 2 is_stmt 0 view .LVU3442
 11091              	.LBE967:
 11092              	.LBE1182:
 11093              	.LBB1183:
 11094              	.LBB933:
2565:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11095              		.loc 1 2565 3 is_stmt 1 view .LVU3443
2565:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11096              		.loc 1 2565 8 is_stmt 0 view .LVU3444
 11097 19c8 4FEA8B34 		lsl	r4, fp, #14
2565:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11098              		.loc 1 2565 6 view .LVU3445
 11099 19cc 44F00104 		orr	r4, r4, #1
 11100              	.LVL912:
2566:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11101              		.loc 1 2566 3 is_stmt 1 view .LVU3446
2566:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11102              		.loc 1 2566 9 is_stmt 0 view .LVU3447
 11103 19d0 2046     		mov	r0, r4
 11104 19d2 FFF7FEFF 		bl	is_label_or_end_at
 11105              	.LVL913:
2566:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11106              		.loc 1 2566 6 view .LVU3448
 11107 19d6 0246     		mov	r2, r0
 11108 19d8 0028     		cmp	r0, #0
ARM GAS  /tmp/ccczu93l.s 			page 309


 11109 19da 75D0     		beq	.L1193
 11110              	.L699:
2568:src/keys.c    **** 		return STATE_UNFINISHED;
 11111              		.loc 1 2568 3 is_stmt 1 view .LVU3449
 11112 19dc 3268     		ldr	r2, [r6]
2568:src/keys.c    **** 		return STATE_UNFINISHED;
 11113              		.loc 1 2568 17 is_stmt 0 view .LVU3450
 11114 19de A8F80840 		strh	r4, [r8, #8]	@ movhi
2569:src/keys.c    **** 	}
 11115              		.loc 1 2569 3 is_stmt 1 view .LVU3451
2569:src/keys.c    **** 	}
 11116              		.loc 1 2569 10 is_stmt 0 view .LVU3452
 11117 19e2 4FF0330B 		mov	fp, #51
 11118              	.LVL914:
2569:src/keys.c    **** 	}
 11119              		.loc 1 2569 10 view .LVU3453
 11120 19e6 FEF764BB 		b	.L565
 11121              	.LVL915:
 11122              	.L1176:
2569:src/keys.c    **** 	}
 11123              		.loc 1 2569 10 view .LVU3454
 11124 19ea 3268     		ldr	r2, [r6]
 11125              	.LBE933:
 11126              	.LBE1183:
 11127              	.LBE1261:
 11128              	.LBE1335:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 11129              		.loc 1 2958 7 view .LVU3455
 11130 19ec 0D46     		mov	r5, r1
 11131              	.LBB1336:
 11132              	.LBB1262:
 11133              	.LBB1184:
 11134              	.LBB1090:
1498:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11135              		.loc 1 1498 10 view .LVU3456
 11136 19ee 4FF0330B 		mov	fp, #51
 11137 19f2 FEF75EBB 		b	.L565
 11138              	.LVL916:
 11139              	.L1167:
1498:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11140              		.loc 1 1498 10 view .LVU3457
 11141              	.LBE1090:
 11142              	.LBE1184:
 11143              	.LBB1185:
 11144              	.LBB934:
2558:src/keys.c    **** 	const int direct = State2.runmode;
 11145              		.loc 1 2558 37 view .LVU3458
 11146 19f6 5046     		mov	r0, r10
 11147 19f8 FFF7FEFF 		bl	getprog
 11148              	.LVL917:
2558:src/keys.c    **** 	const int direct = State2.runmode;
 11149              		.loc 1 2558 63 view .LVU3459
 11150 19fc 20F47062 		bic	r2, r0, #3840
 11151 1a00 FFF772BA 		b	.L696
 11152              	.LVL918:
 11153              	.L667:
2558:src/keys.c    **** 	const int direct = State2.runmode;
ARM GAS  /tmp/ccczu93l.s 			page 310


 11154              		.loc 1 2558 63 view .LVU3460
 11155 1a04 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 11156              	.LBE934:
 11157              	.LBE1185:
 11158              	.LBB1186:
 11159              	.LBB670:
 11160              	.LBB664:
 324:src/keys.c    **** #ifndef WINGUI
 11161              		.loc 1 324 8 view .LVU3461
 11162 1a08 7C4B     		ldr	r3, .L1216+4
 330:src/keys.c    ****   }
 11163              		.loc 1 330 9 view .LVU3462
 11164 1a0a 0C22     		movs	r2, #12
 326:src/keys.c    **** #else
 11165              		.loc 1 326 73 view .LVU3463
 11166 1a0c 4FF0020C 		mov	ip, #2
 11167 1a10 FEF71CBC 		b	.L666
 11168              	.LVL919:
 11169              	.L1174:
 326:src/keys.c    **** #else
 11170              		.loc 1 326 73 view .LVU3464
 11171              	.LBE664:
 11172              	.LBE670:
 11173              	.LBE1186:
 11174              	.LBB1187:
 11175              	.LBB1017:
2708:src/keys.c    **** 		goto reset_window;
 11176              		.loc 1 2708 3 is_stmt 1 view .LVU3465
2708:src/keys.c    **** 		goto reset_window;
 11177              		.loc 1 2708 17 is_stmt 0 view .LVU3466
 11178 1a14 A8F808B0 		strh	fp, [r8, #8]	@ movhi
2709:src/keys.c    **** 	}
 11179              		.loc 1 2709 3 is_stmt 1 view .LVU3467
 11180 1a18 09E4     		b	.L727
 11181              	.L745:
 11182 1a1a 3268     		ldr	r2, [r6]
2742:src/keys.c    **** 		break;		// Exit doing nothing
 11183              		.loc 1 2742 11 is_stmt 0 view .LVU3468
 11184 1a1c 4FF0330B 		mov	fp, #51
 11185              	.LVL920:
2742:src/keys.c    **** 		break;		// Exit doing nothing
 11186              		.loc 1 2742 11 view .LVU3469
 11187 1a20 FEF747BB 		b	.L565
 11188              	.LVL921:
 11189              	.L1180:
2742:src/keys.c    **** 		break;		// Exit doing nothing
 11190              		.loc 1 2742 11 view .LVU3470
 11191 1a24 3268     		ldr	r2, [r6]
 11192 1a26 FEF744BB 		b	.L565
 11193              	.LVL922:
 11194              	.L614:
2742:src/keys.c    **** 		break;		// Exit doing nothing
 11195              		.loc 1 2742 11 view .LVU3471
 11196              	.LBE1017:
 11197              	.LBE1187:
 11198              	.LBB1188:
 11199              	.LBB763:
ARM GAS  /tmp/ccczu93l.s 			page 311


1373:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 11200              		.loc 1 1373 3 is_stmt 1 view .LVU3472
1374:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11201              		.loc 1 1374 18 is_stmt 0 view .LVU3473
 11202 1a2a 734C     		ldr	r4, .L1216
1373:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 11203              		.loc 1 1373 3 view .LVU3474
 11204 1a2c 0120     		movs	r0, #1
 11205 1a2e FFF7FEFF 		bl	update_program_bounds
 11206              	.LVL923:
1374:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11207              		.loc 1 1374 3 is_stmt 1 view .LVU3475
1374:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11208              		.loc 1 1374 18 is_stmt 0 view .LVU3476
 11209 1a32 2368     		ldr	r3, [r4]
1374:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11210              		.loc 1 1374 11 view .LVU3477
 11211 1a34 0021     		movs	r1, #0
 11212 1a36 B3F8EE07 		ldrh	r0, [r3, #2030]
 11213 1a3a FFF7FEFF 		bl	do_inc
 11214              	.LVL924:
1375:src/keys.c    **** 			rawpc = 1;
 11215              		.loc 1 1375 3 is_stmt 1 view .LVU3478
1375:src/keys.c    **** 			rawpc = 1;
 11216              		.loc 1 1375 6 is_stmt 0 view .LVU3479
 11217 1a3e 0028     		cmp	r0, #0
 11218 1a40 7FF48EA9 		bne	.L607
1375:src/keys.c    **** 			rawpc = 1;
 11219              		.loc 1 1375 21 view .LVU3480
 11220 1a44 2368     		ldr	r3, [r4]
1375:src/keys.c    **** 			rawpc = 1;
 11221              		.loc 1 1375 18 view .LVU3481
 11222 1a46 5888     		ldrh	r0, [r3, #2]
 11223              	.LVL925:
1375:src/keys.c    **** 			rawpc = 1;
 11224              		.loc 1 1375 18 view .LVU3482
 11225 1a48 0038     		subs	r0, r0, #0
 11226 1a4a 18BF     		it	ne
 11227 1a4c 0120     		movne	r0, #1
 11228 1a4e FFF787B9 		b	.L607
 11229              	.LVL926:
 11230              	.L912:
1375:src/keys.c    **** 			rawpc = 1;
 11231              		.loc 1 1375 18 view .LVU3483
 11232              	.LBE763:
 11233              	.LBE1188:
 11234              	.LBB1189:
 11235              	.LBB671:
 11236              	.LBB665:
 303:src/keys.c    ****     }
 11237              		.loc 1 303 14 view .LVU3484
 11238 1a52 4FF0160B 		mov	fp, #22
 11239 1a56 FFF723B9 		b	.L661
 11240              	.LVL927:
 11241              	.L848:
 303:src/keys.c    ****     }
 11242              		.loc 1 303 14 view .LVU3485
ARM GAS  /tmp/ccczu93l.s 			page 312


 11243              	.LBE665:
 11244              	.LBE671:
 11245              	.LBE1189:
 11246              	.LBB1190:
 11247              	.LBB689:
 771:src/keys.c    **** 	case K03:
 11248              		.loc 1 771 3 is_stmt 1 view .LVU3486
 771:src/keys.c    **** 	case K03:
 11249              		.loc 1 771 10 is_stmt 0 view .LVU3487
 11250 1a5a 5146     		mov	r1, r10
 11251 1a5c 0120     		movs	r0, #1
 11252 1a5e FFF7FEFF 		bl	check_f_key
 11253              	.LVL928:
 11254 1a62 8346     		mov	fp, r0
 11255 1a64 FEF7E8BC 		b	.L595
 11256              	.L847:
 769:src/keys.c    **** 	case K01:
 11257              		.loc 1 769 3 is_stmt 1 view .LVU3488
 769:src/keys.c    **** 	case K01:
 11258              		.loc 1 769 10 is_stmt 0 view .LVU3489
 11259 1a68 5146     		mov	r1, r10
 11260 1a6a 0020     		movs	r0, #0
 11261 1a6c FFF7FEFF 		bl	check_f_key
 11262              	.LVL929:
 11263 1a70 8346     		mov	fp, r0
 11264 1a72 FEF7E1BC 		b	.L595
 11265              	.L849:
 799:src/keys.c    **** 		State2.arrow = 1;
 11266              		.loc 1 799 3 is_stmt 1 view .LVU3490
 11267 1a76 FFF7FEFF 		bl	process_cmdline_set_lift
 11268              	.LVL930:
 800:src/keys.c    **** #ifdef DM42
 11269              		.loc 1 800 3 view .LVU3491
 800:src/keys.c    **** #ifdef DM42
 11270              		.loc 1 800 16 is_stmt 0 view .LVU3492
 11271 1a7a 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 802:src/keys.c    **** 		display_current_menu ();
 11272              		.loc 1 802 3 view .LVU3493
 11273 1a7e 0920     		movs	r0, #9
 800:src/keys.c    **** #ifdef DM42
 11274              		.loc 1 800 16 view .LVU3494
 11275 1a80 43F00403 		orr	r3, r3, #4
 11276 1a84 88F81530 		strb	r3, [r8, #21]
 802:src/keys.c    **** 		display_current_menu ();
 11277              		.loc 1 802 3 is_stmt 1 view .LVU3495
 11278 1a88 FFF7FEFF 		bl	set_menu
 11279              	.LVL931:
 803:src/keys.c    **** 		lcd_refresh ();
 11280              		.loc 1 803 3 view .LVU3496
 11281 1a8c FFF7FEFF 		bl	display_current_menu
 11282              	.LVL932:
 804:src/keys.c    **** #else
 11283              		.loc 1 804 3 view .LVU3497
 11284 1a90 5B4B     		ldr	r3, .L1216+8
 11285 1a92 9847     		blx	r3
 11286              	.LVL933:
 808:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 313


 11287              		.loc 1 808 3 view .LVU3498
 11288              	.LBE689:
 11289              	.LBE1190:
 11290              	.LBE1262:
 11291              	.LBE1336:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 11292              		.loc 1 2958 7 is_stmt 0 view .LVU3499
 11293 1a94 2546     		mov	r5, r4
 11294 1a96 3268     		ldr	r2, [r6]
 11295              	.LBB1337:
 11296              	.LBB1263:
 11297              	.LBB1191:
 11298              	.LBB690:
 838:src/keys.c    **** }
 11299              		.loc 1 838 9 view .LVU3500
 11300 1a98 4FF0330B 		mov	fp, #51
 808:src/keys.c    **** 
 11301              		.loc 1 808 3 view .LVU3501
 11302 1a9c FEF709BB 		b	.L565
 11303              	.LVL934:
 11304              	.L837:
 808:src/keys.c    **** 
 11305              		.loc 1 808 3 view .LVU3502
 11306              	.LBE690:
 11307              	.LBE1191:
 11308              	.LBE1263:
 11309              	.LBE1337:
3179:src/keys.c    **** 	NonProgrammable = 0;
 11310              		.loc 1 3179 7 is_stmt 1 view .LVU3503
3179:src/keys.c    **** 	NonProgrammable = 0;
 11311              		.loc 1 3179 11 is_stmt 0 view .LVU3504
 11312 1aa0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3179:src/keys.c    **** 	NonProgrammable = 0;
 11313              		.loc 1 3179 10 view .LVU3505
 11314 1aa4 5806     		lsls	r0, r3, #25
 11315 1aa6 1AD5     		bpl	.L935
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11316              		.loc 1 3180 2 is_stmt 1 view .LVU3506
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11317              		.loc 1 3180 18 is_stmt 0 view .LVU3507
 11318 1aa8 564B     		ldr	r3, .L1216+12
 11319 1aaa 0022     		movs	r2, #0
 11320              	.LBB1338:
 11321              	.LBB1264:
 11322              	.LBB1192:
 11323              	.LBB691:
 735:src/keys.c    **** 	    }
 11324              		.loc 1 735 15 view .LVU3508
 11325 1aac 4FF00F0B 		mov	fp, #15
 11326              	.LBE691:
 11327              	.LBE1192:
 11328              	.LBE1264:
 11329              	.LBE1338:
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11330              		.loc 1 3180 18 view .LVU3509
 11331 1ab0 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/ccczu93l.s 			page 314


 11332              		.loc 1 3181 2 is_stmt 1 view .LVU3510
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11333              		.loc 1 3181 32 is_stmt 0 view .LVU3511
 11334 1ab2 5846     		mov	r0, fp
 11335 1ab4 FEF788BE 		b	.L874
 11336              	.LVL935:
 11337              	.L1182:
 11338              	.LBB1339:
 11339              	.LBB1265:
 11340              	.LBB1193:
 11341              	.LBB1163:
1080:src/keys.c    **** 			set_pc(0);
 11342              		.loc 1 1080 43 view .LVU3512
 11343 1ab8 B3F8EE37 		ldrh	r3, [r3, #2030]
 11344 1abc 012B     		cmp	r3, #1
 11345 1abe 7FF47AAD 		bne	.L820
1081:src/keys.c    **** 		break;
 11346              		.loc 1 1081 4 is_stmt 1 view .LVU3513
 11347 1ac2 FFF7FEFF 		bl	set_pc
 11348              	.LVL936:
 11349 1ac6 76E5     		b	.L820
 11350              	.LVL937:
 11351              	.L1193:
1081:src/keys.c    **** 		break;
 11352              		.loc 1 1081 4 is_stmt 0 view .LVU3514
 11353              	.LBE1163:
 11354              	.LBE1193:
 11355              	.LBB1194:
 11356              	.LBB935:
2567:src/keys.c    **** 		State2.digval = pc;
 11357              		.loc 1 2567 4 is_stmt 1 view .LVU3515
2567:src/keys.c    **** 		State2.digval = pc;
 11358              		.loc 1 2567 9 is_stmt 0 view .LVU3516
 11359 1ac8 2046     		mov	r0, r4
 11360 1aca 0121     		movs	r1, #1
 11361 1acc FFF7FEFF 		bl	advance_to_next_label
 11362              	.LVL938:
 11363 1ad0 0446     		mov	r4, r0
 11364              	.LVL939:
2567:src/keys.c    **** 		State2.digval = pc;
 11365              		.loc 1 2567 9 view .LVU3517
 11366 1ad2 83E7     		b	.L699
 11367              	.LVL940:
 11368              	.L1181:
2567:src/keys.c    **** 		State2.digval = pc;
 11369              		.loc 1 2567 9 view .LVU3518
 11370 1ad4 3268     		ldr	r2, [r6]
 11371              	.LBE935:
 11372              	.LBE1194:
 11373              	.LBB1195:
 11374              	.LBB1164:
1076:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11375              		.loc 1 1076 11 view .LVU3519
 11376 1ad6 4FF0330B 		mov	fp, #51
 11377 1ada FEF7EABA 		b	.L565
 11378              	.LVL941:
 11379              	.L935:
ARM GAS  /tmp/ccczu93l.s 			page 315


1076:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11380              		.loc 1 1076 11 view .LVU3520
 11381              	.LBE1164:
 11382              	.LBE1195:
 11383              	.LBB1196:
 11384              	.LBB692:
 735:src/keys.c    **** 	    }
 11385              		.loc 1 735 15 view .LVU3521
 11386 1ade 4FF00F0B 		mov	fp, #15
 11387              	.LVL942:
 11388              	.L873:
 735:src/keys.c    **** 	    }
 11389              		.loc 1 735 15 view .LVU3522
 11390              	.LBE692:
 11391              	.LBE1196:
 11392              	.LBE1265:
 11393              	.LBE1339:
3179:src/keys.c    **** 	NonProgrammable = 0;
 11394              		.loc 1 3179 26 view .LVU3523
 11395 1ae2 484B     		ldr	r3, .L1216+12
 11396 1ae4 1A68     		ldr	r2, [r3]
 11397 1ae6 002A     		cmp	r2, #0
 11398 1ae8 40D0     		beq	.L1097
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11399              		.loc 1 3180 2 is_stmt 1 view .LVU3524
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11400              		.loc 1 3180 18 is_stmt 0 view .LVU3525
 11401 1aea 0022     		movs	r2, #0
 11402 1aec 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11403              		.loc 1 3181 2 is_stmt 1 view .LVU3526
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11404              		.loc 1 3181 32 is_stmt 0 view .LVU3527
 11405 1aee 5846     		mov	r0, fp
 11406 1af0 FEF76ABE 		b	.L874
 11407              	.LVL943:
 11408              	.L1090:
3179:src/keys.c    **** 	NonProgrammable = 0;
 11409              		.loc 1 3179 26 discriminator 1 view .LVU3528
 11410 1af4 1368     		ldr	r3, [r2]
 11411 1af6 002B     		cmp	r3, #0
 11412 1af8 7EF48FAD 		bne	.L875
 11413 1afc FEF716BD 		b	.L876
 11414              	.LVL944:
 11415              	.L735:
 11416              	.LBB1340:
 11417              	.LBB1266:
 11418              	.LBB1197:
 11419              	.LBB1018:
2720:src/keys.c    **** 		goto reset_window;
 11420              		.loc 1 2720 4 is_stmt 1 view .LVU3529
2720:src/keys.c    **** 		goto reset_window;
 11421              		.loc 1 2720 24 is_stmt 0 view .LVU3530
 11422 1b00 0AF1FF3A 		add	r10, r10, #-1
 11423              	.LVL945:
2720:src/keys.c    **** 		goto reset_window;
 11424              		.loc 1 2720 18 view .LVU3531
ARM GAS  /tmp/ccczu93l.s 			page 316


 11425 1b04 A8F808A0 		strh	r10, [r8, #8]	@ movhi
 11426 1b08 FFF791BB 		b	.L727
 11427              	.LVL946:
 11428              	.L1175:
2716:src/keys.c    **** 			--State2.digval;
 11429              		.loc 1 2716 5 is_stmt 1 view .LVU3532
2716:src/keys.c    **** 			--State2.digval;
 11430              		.loc 1 2716 21 is_stmt 0 view .LVU3533
 11431 1b0c FFF7FEFF 		bl	global_regs
 11432              	.LVL947:
2716:src/keys.c    **** 			--State2.digval;
 11433              		.loc 1 2716 19 view .LVU3534
 11434 1b10 A8F80800 		strh	r0, [r8, #8]	@ movhi
 11435 1b14 FFF786BB 		b	.L736
 11436              	.LVL948:
 11437              	.L738:
2730:src/keys.c    **** 		goto reset_window;
 11438              		.loc 1 2730 4 is_stmt 1 view .LVU3535
2730:src/keys.c    **** 		goto reset_window;
 11439              		.loc 1 2730 18 is_stmt 0 view .LVU3536
 11440 1b18 0023     		movs	r3, #0
 11441 1b1a A8F80830 		strh	r3, [r8, #8]	@ movhi
 11442 1b1e FFF786BB 		b	.L727
 11443              	.LVL949:
 11444              	.L688:
2730:src/keys.c    **** 		goto reset_window;
 11445              		.loc 1 2730 18 view .LVU3537
 11446              	.LBE1018:
 11447              	.LBE1197:
 11448              	.LBB1198:
 11449              	.LBB887:
2400:src/keys.c    **** 			return STATE_UNFINISHED;
 11450              		.loc 1 2400 5 is_stmt 1 view .LVU3538
2400:src/keys.c    **** 			return STATE_UNFINISHED;
 11451              		.loc 1 2400 20 is_stmt 0 view .LVU3539
 11452 1b22 013A     		subs	r2, r2, #1
 11453 1b24 88F80B20 		strb	r2, [r8, #11]
2401:src/keys.c    **** 		}
 11454              		.loc 1 2401 11 view .LVU3540
 11455 1b28 4FF0330B 		mov	fp, #51
 11456 1b2c 3268     		ldr	r2, [r6]
 11457 1b2e FEF7C0BA 		b	.L565
 11458              	.LVL950:
 11459              	.L631:
2401:src/keys.c    **** 		}
 11460              		.loc 1 2401 11 view .LVU3541
 11461              	.LBE887:
 11462              	.LBE1198:
 11463              	.LBB1199:
 11464              	.LBB741:
1931:src/keys.c    **** 		// Special 1
 11465              		.loc 1 1931 7 is_stmt 1 view .LVU3542
1931:src/keys.c    **** 		// Special 1
 11466              		.loc 1 1931 10 is_stmt 0 view .LVU3543
 11467 1b32 012A     		cmp	r2, #1
 11468 1b34 7FF474A8 		bne	.L633
1933:src/keys.c    **** 	}
ARM GAS  /tmp/ccczu93l.s 			page 317


 11469              		.loc 1 1933 3 is_stmt 1 view .LVU3544
1933:src/keys.c    **** 	}
 11470              		.loc 1 1933 18 is_stmt 0 view .LVU3545
 11471 1b38 BEF1000F 		cmp	lr, #0
 11472 1b3c 14BF     		ite	ne
 11473 1b3e 2723     		movne	r3, #39
 11474 1b40 1E23     		moveq	r3, #30
1933:src/keys.c    **** 	}
 11475              		.loc 1 1933 47 view .LVU3546
 11476 1b42 9B44     		add	fp, fp, r3
 11477              	.LVL951:
1933:src/keys.c    **** 	}
 11478              		.loc 1 1933 47 view .LVU3547
 11479 1b44 FEF778BC 		b	.L595
 11480              	.LVL952:
 11481              	.L759:
1933:src/keys.c    **** 	}
 11482              		.loc 1 1933 47 view .LVU3548
 11483              	.LBE741:
 11484              	.LBE1199:
 11485              	.LBB1200:
 11486              	.LBB1091:
1431:src/keys.c    **** 			return STATE_BACKSPACE;
 11487              		.loc 1 1431 3 is_stmt 1 view .LVU3549
1431:src/keys.c    **** 			return STATE_BACKSPACE;
 11488              		.loc 1 1431 6 is_stmt 0 view .LVU3550
 11489 1b48 0028     		cmp	r0, #0
 11490 1b4a 3EF4D7AC 		beq	.L768
 11491              	.L769:
1433:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11492              		.loc 1 1433 3 is_stmt 1 view .LVU3551
1433:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11493              		.loc 1 1433 6 is_stmt 0 view .LVU3552
 11494 1b4e 0328     		cmp	r0, #3
 11495 1b50 7FF434AC 		bne	.L753
 11496              	.LVL953:
1433:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11497              		.loc 1 1433 6 view .LVU3553
 11498              	.LBE1091:
 11499              	.LBE1200:
 11500              	.LBE1266:
 11501              	.LBE1340:
3179:src/keys.c    **** 	NonProgrammable = 0;
 11502              		.loc 1 3179 7 is_stmt 1 view .LVU3554
3179:src/keys.c    **** 	NonProgrammable = 0;
 11503              		.loc 1 3179 10 is_stmt 0 view .LVU3555
 11504 1b54 5906     		lsls	r1, r3, #25
 11505              	.LVL954:
3179:src/keys.c    **** 	NonProgrammable = 0;
 11506              		.loc 1 3179 10 view .LVU3556
 11507 1b56 0CD5     		bpl	.L936
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11508              		.loc 1 3180 2 is_stmt 1 view .LVU3557
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11509              		.loc 1 3180 18 is_stmt 0 view .LVU3558
 11510 1b58 2A4B     		ldr	r3, .L1216+12
 11511 1b5a 0022     		movs	r2, #0
ARM GAS  /tmp/ccczu93l.s 			page 318


 11512 1b5c 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11513              		.loc 1 3181 2 is_stmt 1 view .LVU3559
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11514              		.loc 1 3181 32 is_stmt 0 view .LVU3560
 11515 1b5e 4FF4BA70 		mov	r0, #372
 11516              	.LVL955:
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11517              		.loc 1 3181 32 view .LVU3561
 11518 1b62 FEF783BD 		b	.L872
 11519              	.LVL956:
 11520              	.L934:
 11521              	.LBB1341:
 11522              	.LBB1267:
 11523              	.LBB1201:
 11524              	.LBB693:
 759:src/keys.c    **** 	    }
 11525              		.loc 1 759 15 view .LVU3562
 11526 1b66 4FF0140B 		mov	fp, #20
 11527 1b6a BAE7     		b	.L873
 11528              	.LVL957:
 11529              	.L1097:
 759:src/keys.c    **** 	    }
 11530              		.loc 1 759 15 view .LVU3563
 11531 1b6c 5846     		mov	r0, fp
 11532 1b6e FEF7DDBC 		b	.L876
 11533              	.LVL958:
 11534              	.L936:
 759:src/keys.c    **** 	    }
 11535              		.loc 1 759 15 view .LVU3564
 11536              	.LBE693:
 11537              	.LBE1201:
 11538              	.LBB1202:
 11539              	.LBB1092:
1434:src/keys.c    **** 		break;
 11540              		.loc 1 1434 11 view .LVU3565
 11541 1b72 4FF4BA7B 		mov	fp, #372
 11542              	.LVL959:
 11543              	.L871:
1434:src/keys.c    **** 		break;
 11544              		.loc 1 1434 11 view .LVU3566
 11545              	.LBE1092:
 11546              	.LBE1202:
 11547              	.LBE1267:
 11548              	.LBE1341:
3179:src/keys.c    **** 	NonProgrammable = 0;
 11549              		.loc 1 3179 26 view .LVU3567
 11550 1b76 234B     		ldr	r3, .L1216+12
 11551 1b78 1A68     		ldr	r2, [r3]
 11552 1b7a 002A     		cmp	r2, #0
 11553 1b7c F6D0     		beq	.L1097
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11554              		.loc 1 3180 2 is_stmt 1 view .LVU3568
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11555              		.loc 1 3180 18 is_stmt 0 view .LVU3569
 11556 1b7e 0022     		movs	r2, #0
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/ccczu93l.s 			page 319


 11557              		.loc 1 3181 32 view .LVU3570
 11558 1b80 5846     		mov	r0, fp
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11559              		.loc 1 3180 18 view .LVU3571
 11560 1b82 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11561              		.loc 1 3181 2 is_stmt 1 view .LVU3572
 11562 1b84 FEF772BD 		b	.L872
 11563              	.LVL960:
 11564              	.L760:
 11565              	.LBB1342:
 11566              	.LBB1268:
 11567              	.LBB1203:
 11568              	.LBB1093:
1418:src/keys.c    **** 			break;
 11569              		.loc 1 1418 3 view .LVU3573
1418:src/keys.c    **** 			break;
 11570              		.loc 1 1418 24 is_stmt 0 view .LVU3574
 11571 1b88 821E     		subs	r2, r0, #2
1418:src/keys.c    **** 			break;
 11572              		.loc 1 1418 6 view .LVU3575
 11573 1b8a D2B2     		uxtb	r2, r2
 11574 1b8c 012A     		cmp	r2, #1
 11575 1b8e 7FF615AC 		bls	.L753
1420:src/keys.c    **** 			State2.multi = 1;
 11576              		.loc 1 1420 3 is_stmt 1 view .LVU3576
1420:src/keys.c    **** 			State2.multi = 1;
 11577              		.loc 1 1420 6 is_stmt 0 view .LVU3577
 11578 1b92 0128     		cmp	r0, #1
 11579 1b94 02D1     		bne	.L767
1420:src/keys.c    **** 			State2.multi = 1;
 11580              		.loc 1 1420 24 view .LVU3578
 11581 1b96 13F04002 		ands	r2, r3, #64
 11582 1b9a 0AD0     		beq	.L1194
 11583              	.L767:
1426:src/keys.c    **** 		State2.alphashift = 0;
 11584              		.loc 1 1426 3 is_stmt 1 view .LVU3579
1427:src/keys.c    **** 		return op;
 11585              		.loc 1 1427 3 view .LVU3580
1426:src/keys.c    **** 		State2.alphashift = 0;
 11586              		.loc 1 1426 17 is_stmt 0 view .LVU3581
 11587 1b9c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11588 1ba0 3268     		ldr	r2, [r6]
 11589 1ba2 23F01803 		bic	r3, r3, #24
 11590 1ba6 88F81630 		strb	r3, [r8, #22]
1428:src/keys.c    **** 
 11591              		.loc 1 1428 3 is_stmt 1 view .LVU3582
1428:src/keys.c    **** 
 11592              		.loc 1 1428 10 is_stmt 0 view .LVU3583
 11593 1baa 4FF0330B 		mov	fp, #51
 11594 1bae FEF780BA 		b	.L565
 11595              	.L1194:
1421:src/keys.c    **** 			State2.numdigit = 0;
 11596              		.loc 1 1421 4 is_stmt 1 view .LVU3584
1421:src/keys.c    **** 			State2.numdigit = 0;
 11597              		.loc 1 1421 17 is_stmt 0 view .LVU3585
 11598 1bb2 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 320


1422:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11599              		.loc 1 1422 20 view .LVU3586
 11600 1bb6 88F80B20 		strb	r2, [r8, #11]
1421:src/keys.c    **** 			State2.numdigit = 0;
 11601              		.loc 1 1421 17 view .LVU3587
 11602 1bba 43F00803 		orr	r3, r3, #8
1423:src/keys.c    **** 			return STATE_UNFINISHED;
 11603              		.loc 1 1423 12 view .LVU3588
 11604 1bbe 0A21     		movs	r1, #10
 11605              	.LVL961:
1423:src/keys.c    **** 			return STATE_UNFINISHED;
 11606              		.loc 1 1423 12 view .LVU3589
 11607 1bc0 3268     		ldr	r2, [r6]
 11608 1bc2 88F81F10 		strb	r1, [r8, #31]
1421:src/keys.c    **** 			State2.numdigit = 0;
 11609              		.loc 1 1421 17 view .LVU3590
 11610 1bc6 88F81530 		strb	r3, [r8, #21]
1422:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11611              		.loc 1 1422 4 is_stmt 1 view .LVU3591
1423:src/keys.c    **** 			return STATE_UNFINISHED;
 11612              		.loc 1 1423 4 view .LVU3592
1424:src/keys.c    **** 		}
 11613              		.loc 1 1424 4 view .LVU3593
1424:src/keys.c    **** 		}
 11614              		.loc 1 1424 11 is_stmt 0 view .LVU3594
 11615 1bca 4FF0330B 		mov	fp, #51
 11616 1bce FEF770BA 		b	.L565
 11617              	.LVL962:
 11618              	.L761:
1408:src/keys.c    **** 			init_arg(RARG_ARCL);
 11619              		.loc 1 1408 3 is_stmt 1 view .LVU3595
1408:src/keys.c    **** 			init_arg(RARG_ARCL);
 11620              		.loc 1 1408 6 is_stmt 0 view .LVU3596
 11621 1bd2 0128     		cmp	r0, #1
 11622 1bd4 2DD0     		beq	.L1195
1411:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11623              		.loc 1 1411 10 is_stmt 1 view .LVU3597
1411:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11624              		.loc 1 1411 13 is_stmt 0 view .LVU3598
 11625 1bd6 0328     		cmp	r0, #3
 11626 1bd8 7FF4F0AB 		bne	.L753
1412:src/keys.c    **** 			return STATE_UNFINISHED;
 11627              		.loc 1 1412 4 is_stmt 1 view .LVU3599
 11628              	.LVL963:
 11629              	.LBB1076:
 11630              	.LBI1076:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 11631              		.loc 1 503 13 view .LVU3600
 11632              	.LBB1077:
 504:src/keys.c    **** 		return;
 11633              		.loc 1 504 2 view .LVU3601
 504:src/keys.c    **** 		return;
 11634              		.loc 1 504 6 is_stmt 0 view .LVU3602
 11635 1bdc FFF7FEFF 		bl	is_bad_cmdline
 11636              	.LVL964:
 504:src/keys.c    **** 		return;
 11637              		.loc 1 504 5 view .LVU3603
ARM GAS  /tmp/ccczu93l.s 			page 321


 11638 1be0 0346     		mov	r3, r0
 11639 1be2 08BB     		cbnz	r0, .L1196
 11640 1be4 7320     		movs	r0, #115
 11641              	.LBE1077:
 11642              	.LBE1076:
 11643              	.LBE1093:
 11644              	.LBE1203:
 11645              	.LBE1268:
 11646              	.LBE1342:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 11647              		.loc 1 2958 7 view .LVU3604
 11648 1be6 1D46     		mov	r5, r3
 11649              	.LBB1343:
 11650              	.LBB1269:
 11651              	.LBB1204:
 11652              	.LBB1094:
1413:src/keys.c    **** 		}
 11653              		.loc 1 1413 11 view .LVU3605
 11654 1be8 4FF0330B 		mov	fp, #51
 11655              	.LBB1079:
 11656              	.LBB1078:
 11657 1bec FFF7FEFF 		bl	init_arg.part.0
 11658              	.LVL965:
 11659 1bf0 3268     		ldr	r2, [r6]
 11660 1bf2 FEF75EBA 		b	.L565
 11661              	.L1217:
 11662 1bf6 00BF     		.align	2
 11663              	.L1216:
 11664 1bf8 00000000 		.word	main_ram
 11665 1bfc 00000000 		.word	.LANCHOR11
 11666 1c00 31020008 		.word	134218289
 11667 1c04 00000000 		.word	NonProgrammable
 11668              	.LVL966:
 11669              	.L762:
1413:src/keys.c    **** 		}
 11670              		.loc 1 1413 11 view .LVU3606
 11671              	.LBE1078:
 11672              	.LBE1079:
1401:src/keys.c    **** 			init_arg(RARG_ASTO);
 11673              		.loc 1 1401 3 is_stmt 1 view .LVU3607
1401:src/keys.c    **** 			init_arg(RARG_ASTO);
 11674              		.loc 1 1401 6 is_stmt 0 view .LVU3608
 11675 1c08 0128     		cmp	r0, #1
 11676 1c0a 7FF4D7AB 		bne	.L753
1402:src/keys.c    **** 			return STATE_UNFINISHED;
 11677              		.loc 1 1402 4 is_stmt 1 view .LVU3609
 11678              	.LVL967:
 11679              	.LBB1080:
 11680              	.LBI1080:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 11681              		.loc 1 503 13 view .LVU3610
 11682              	.LBB1081:
 504:src/keys.c    **** 		return;
 11683              		.loc 1 504 2 view .LVU3611
 504:src/keys.c    **** 		return;
 11684              		.loc 1 504 6 is_stmt 0 view .LVU3612
 11685 1c0e FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccczu93l.s 			page 322


 11686              	.LVL968:
 504:src/keys.c    **** 		return;
 11687              		.loc 1 504 5 view .LVU3613
 11688 1c12 0346     		mov	r3, r0
 11689 1c14 D0B9     		cbnz	r0, .L1197
 11690 1c16 2620     		movs	r0, #38
 11691              	.LBE1081:
 11692              	.LBE1080:
 11693              	.LBE1094:
 11694              	.LBE1204:
 11695              	.LBE1269:
 11696              	.LBE1343:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 11697              		.loc 1 2958 7 view .LVU3614
 11698 1c18 1D46     		mov	r5, r3
 11699              	.LBB1344:
 11700              	.LBB1270:
 11701              	.LBB1205:
 11702              	.LBB1095:
1403:src/keys.c    **** 		}
 11703              		.loc 1 1403 11 view .LVU3615
 11704 1c1a 4FF0330B 		mov	fp, #51
 11705              	.LBB1083:
 11706              	.LBB1082:
 11707 1c1e FFF7FEFF 		bl	init_arg.part.0
 11708              	.LVL969:
 11709 1c22 3268     		ldr	r2, [r6]
 11710 1c24 FEF745BA 		b	.L565
 11711              	.LVL970:
 11712              	.L1196:
1403:src/keys.c    **** 		}
 11713              		.loc 1 1403 11 view .LVU3616
 11714 1c28 3268     		ldr	r2, [r6]
 11715              	.LBE1082:
 11716              	.LBE1083:
1413:src/keys.c    **** 		}
 11717              		.loc 1 1413 11 view .LVU3617
 11718 1c2a 4FF0330B 		mov	fp, #51
 11719 1c2e FEF740BA 		b	.L565
 11720              	.LVL971:
 11721              	.L1195:
1409:src/keys.c    **** 			return STATE_UNFINISHED;
 11722              		.loc 1 1409 4 is_stmt 1 view .LVU3618
 11723              	.LBB1084:
 11724              	.LBI1084:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 11725              		.loc 1 503 13 view .LVU3619
 11726              	.LBB1085:
 504:src/keys.c    **** 		return;
 11727              		.loc 1 504 2 view .LVU3620
 504:src/keys.c    **** 		return;
 11728              		.loc 1 504 6 is_stmt 0 view .LVU3621
 11729 1c32 FFF7FEFF 		bl	is_bad_cmdline
 11730              	.LVL972:
 504:src/keys.c    **** 		return;
 11731              		.loc 1 504 5 view .LVU3622
 11732 1c36 0346     		mov	r3, r0
ARM GAS  /tmp/ccczu93l.s 			page 323


 11733 1c38 68B9     		cbnz	r0, .L1198
 11734 1c3a 2720     		movs	r0, #39
 11735              	.LBE1085:
 11736              	.LBE1084:
 11737              	.LBE1095:
 11738              	.LBE1205:
 11739              	.LBE1270:
 11740              	.LBE1344:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 11741              		.loc 1 2958 7 view .LVU3623
 11742 1c3c 1D46     		mov	r5, r3
 11743              	.LBB1345:
 11744              	.LBB1271:
 11745              	.LBB1206:
 11746              	.LBB1096:
1410:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11747              		.loc 1 1410 11 view .LVU3624
 11748 1c3e 4FF0330B 		mov	fp, #51
 11749              	.LBB1087:
 11750              	.LBB1086:
 11751 1c42 FFF7FEFF 		bl	init_arg.part.0
 11752              	.LVL973:
 11753 1c46 3268     		ldr	r2, [r6]
 11754 1c48 FEF733BA 		b	.L565
 11755              	.LVL974:
 11756              	.L1197:
1410:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11757              		.loc 1 1410 11 view .LVU3625
 11758 1c4c 3268     		ldr	r2, [r6]
 11759              	.LBE1086:
 11760              	.LBE1087:
1403:src/keys.c    **** 		}
 11761              		.loc 1 1403 11 view .LVU3626
 11762 1c4e 4FF0330B 		mov	fp, #51
 11763 1c52 FEF72EBA 		b	.L565
 11764              	.LVL975:
 11765              	.L1198:
1403:src/keys.c    **** 		}
 11766              		.loc 1 1403 11 view .LVU3627
 11767 1c56 3268     		ldr	r2, [r6]
1410:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11768              		.loc 1 1410 11 view .LVU3628
 11769 1c58 4FF0330B 		mov	fp, #51
 11770 1c5c FEF729BA 		b	.L565
 11771              	.LVL976:
 11772              	.L1191:
1410:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11773              		.loc 1 1410 11 view .LVU3629
 11774              	.LBE1096:
 11775              	.LBE1206:
 11776              	.LBB1207:
 11777              	.LBB888:
2407:src/keys.c    **** 		else
 11778              		.loc 1 2407 4 is_stmt 1 view .LVU3630
2407:src/keys.c    **** 		else
 11779              		.loc 1 2407 34 is_stmt 0 view .LVU3631
 11780 1c60 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 324


 11781 1c64 3268     		ldr	r2, [r6]
 11782 1c66 C3F30011 		ubfx	r1, r3, #4, #1
 11783              	.LVL977:
2407:src/keys.c    **** 		else
 11784              		.loc 1 2407 26 view .LVU3632
 11785 1c6a C1F10101 		rsb	r1, r1, #1
2407:src/keys.c    **** 		else
 11786              		.loc 1 2407 22 view .LVU3633
 11787 1c6e 61F30413 		bfi	r3, r1, #4, #1
 11788 1c72 88F81630 		strb	r3, [r8, #22]
2410:src/keys.c    **** 
 11789              		.loc 1 2410 10 view .LVU3634
 11790 1c76 4FF0330B 		mov	fp, #51
 11791 1c7a FEF71ABA 		b	.L565
 11792              	.LVL978:
 11793              	.L1138:
2410:src/keys.c    **** 
 11794              		.loc 1 2410 10 view .LVU3635
 11795              	.LBE888:
 11796              	.LBE1207:
 11797              	.LBE1271:
 11798              	.LBE1345:
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11799              		.loc 1 3180 2 is_stmt 1 view .LVU3636
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11800              		.loc 1 3180 18 is_stmt 0 view .LVU3637
 11801 1c7e 0022     		movs	r2, #0
 11802 1c80 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11803              		.loc 1 3181 2 is_stmt 1 view .LVU3638
 11804 1c82 FEF7F3BC 		b	.L872
 11805              	.LVL979:
 11806              	.L791:
 11807              	.LBB1346:
 11808              	.LBB1272:
 11809              	.LBB1208:
 11810              	.LBB1131:
1186:src/keys.c    **** 				State2.cmplx = 1;
 11811              		.loc 1 1186 5 view .LVU3639
 11812 1c86 FFF7FEFF 		bl	process_cmdline_set_lift
 11813              	.LVL980:
1187:src/keys.c    **** 				State2.test = op;
 11814              		.loc 1 1187 5 view .LVU3640
1187:src/keys.c    **** 				State2.test = op;
 11815              		.loc 1 1187 18 is_stmt 0 view .LVU3641
 11816 1c8a 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 11817 1c8e 3268     		ldr	r2, [r6]
1188:src/keys.c    **** 			}
 11818              		.loc 1 1188 17 view .LVU3642
 11819 1c90 88F80FB0 		strb	fp, [r8, #15]
1187:src/keys.c    **** 				State2.test = op;
 11820              		.loc 1 1187 18 view .LVU3643
 11821 1c94 43F00203 		orr	r3, r3, #2
 11822 1c98 88F81530 		strb	r3, [r8, #21]
1188:src/keys.c    **** 			}
 11823              		.loc 1 1188 5 is_stmt 1 view .LVU3644
 11824              	.LBE1131:
ARM GAS  /tmp/ccczu93l.s 			page 325


 11825              	.LBE1208:
 11826              	.LBE1272:
 11827              	.LBE1346:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 11828              		.loc 1 2958 7 is_stmt 0 view .LVU3645
 11829 1c9c 2546     		mov	r5, r4
 11830              	.LBB1347:
 11831              	.LBB1273:
 11832              	.LBB1209:
 11833              	.LBB1132:
1190:src/keys.c    **** 
 11834              		.loc 1 1190 11 view .LVU3646
 11835 1c9e 4FF0330B 		mov	fp, #51
 11836              	.LVL981:
1190:src/keys.c    **** 
 11837              		.loc 1 1190 11 view .LVU3647
 11838 1ca2 FEF706BA 		b	.L565
 11839              	.LVL982:
 11840              	.L1179:
1190:src/keys.c    **** 
 11841              		.loc 1 1190 11 view .LVU3648
 11842 1ca6 3268     		ldr	r2, [r6]
 11843 1ca8 FEF703BA 		b	.L565
 11844              	.LVL983:
 11845              	.L754:
1190:src/keys.c    **** 
 11846              		.loc 1 1190 11 view .LVU3649
 11847              	.LBE1132:
 11848              	.LBE1209:
 11849              	.LBB1210:
 11850              	.LBB1097:
1488:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11851              		.loc 1 1488 3 is_stmt 1 view .LVU3650
1488:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11852              		.loc 1 1488 6 is_stmt 0 view .LVU3651
 11853 1cac 0128     		cmp	r0, #1
 11854 1cae 7FF485AB 		bne	.L753
 11855              	.LVL984:
1488:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11856              		.loc 1 1488 6 view .LVU3652
 11857              	.LBE1097:
 11858              	.LBE1210:
 11859              	.LBE1273:
 11860              	.LBE1347:
3179:src/keys.c    **** 	NonProgrammable = 0;
 11861              		.loc 1 3179 7 is_stmt 1 view .LVU3653
3179:src/keys.c    **** 	NonProgrammable = 0;
 11862              		.loc 1 3179 10 is_stmt 0 view .LVU3654
 11863 1cb2 5806     		lsls	r0, r3, #25
 11864              	.LVL985:
3179:src/keys.c    **** 	NonProgrammable = 0;
 11865              		.loc 1 3179 10 view .LVU3655
 11866 1cb4 10D5     		bpl	.L929
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11867              		.loc 1 3180 2 is_stmt 1 view .LVU3656
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11868              		.loc 1 3180 18 is_stmt 0 view .LVU3657
ARM GAS  /tmp/ccczu93l.s 			page 326


 11869 1cb6 B14B     		ldr	r3, .L1218
 11870 1cb8 0022     		movs	r2, #0
 11871 1cba 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11872              		.loc 1 3181 2 is_stmt 1 view .LVU3658
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11873              		.loc 1 3181 32 is_stmt 0 view .LVU3659
 11874 1cbc 40F23B10 		movw	r0, #315
 11875 1cc0 FEF7D4BC 		b	.L872
 11876              	.LVL986:
 11877              	.L756:
 11878              	.LBB1348:
 11879              	.LBB1274:
 11880              	.LBB1211:
 11881              	.LBB1098:
1479:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11882              		.loc 1 1479 3 is_stmt 1 view .LVU3660
1479:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11883              		.loc 1 1479 6 is_stmt 0 view .LVU3661
 11884 1cc4 0128     		cmp	r0, #1
 11885 1cc6 1AD0     		beq	.L1199
1481:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11886              		.loc 1 1481 8 is_stmt 1 view .LVU3662
1481:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11887              		.loc 1 1481 11 is_stmt 0 view .LVU3663
 11888 1cc8 0328     		cmp	r0, #3
 11889 1cca 0FD0     		beq	.L778
1483:src/keys.c    **** 			init_state();
 11890              		.loc 1 1483 8 is_stmt 1 view .LVU3664
1483:src/keys.c    **** 			init_state();
 11891              		.loc 1 1483 11 is_stmt 0 view .LVU3665
 11892 1ccc 38B1     		cbz	r0, .L779
 11893 1cce 3268     		ldr	r2, [r6]
1485:src/keys.c    **** 
 11894              		.loc 1 1485 10 view .LVU3666
 11895 1cd0 4FF0330B 		mov	fp, #51
 11896 1cd4 FEF7EDB9 		b	.L565
 11897              	.LVL987:
 11898              	.L929:
1489:src/keys.c    **** 		break;
 11899              		.loc 1 1489 11 view .LVU3667
 11900 1cd8 40F23B1B 		movw	fp, #315
 11901 1cdc 4BE7     		b	.L871
 11902              	.LVL988:
 11903              	.L779:
1484:src/keys.c    **** 		return STATE_UNFINISHED;
 11904              		.loc 1 1484 4 is_stmt 1 view .LVU3668
 11905 1cde FFF7FEFF 		bl	init_state
 11906              	.LVL989:
1485:src/keys.c    **** 
 11907              		.loc 1 1485 10 is_stmt 0 view .LVU3669
 11908 1ce2 4FF0330B 		mov	fp, #51
 11909 1ce6 3268     		ldr	r2, [r6]
 11910 1ce8 FEF7E3B9 		b	.L565
 11911              	.LVL990:
 11912              	.L778:
1485:src/keys.c    **** 
ARM GAS  /tmp/ccczu93l.s 			page 327


 11913              		.loc 1 1485 10 view .LVU3670
 11914              	.LBE1098:
 11915              	.LBE1211:
 11916              	.LBE1274:
 11917              	.LBE1348:
3179:src/keys.c    **** 	NonProgrammable = 0;
 11918              		.loc 1 3179 7 is_stmt 1 view .LVU3671
3179:src/keys.c    **** 	NonProgrammable = 0;
 11919              		.loc 1 3179 10 is_stmt 0 view .LVU3672
 11920 1cec 5A06     		lsls	r2, r3, #25
 11921 1cee 15D5     		bpl	.L937
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11922              		.loc 1 3180 2 is_stmt 1 view .LVU3673
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11923              		.loc 1 3180 18 is_stmt 0 view .LVU3674
 11924 1cf0 A24B     		ldr	r3, .L1218
 11925 1cf2 0022     		movs	r2, #0
 11926 1cf4 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11927              		.loc 1 3181 2 is_stmt 1 view .LVU3675
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11928              		.loc 1 3181 32 is_stmt 0 view .LVU3676
 11929 1cf6 4FF48170 		mov	r0, #258
 11930              	.LVL991:
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11931              		.loc 1 3181 32 view .LVU3677
 11932 1cfa FEF7B7BC 		b	.L872
 11933              	.LVL992:
 11934              	.L1199:
 11935              	.LBB1349:
 11936              	.LBB1275:
 11937              	.LBB1212:
 11938              	.LBB1099:
1480:src/keys.c    **** 		else if (shift == SHIFT_H)
 11939              		.loc 1 1480 4 is_stmt 1 view .LVU3678
1480:src/keys.c    **** 		else if (shift == SHIFT_H)
 11940              		.loc 1 1480 34 is_stmt 0 view .LVU3679
 11941 1cfe 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11942 1d02 3268     		ldr	r2, [r6]
 11943 1d04 C3F30011 		ubfx	r1, r3, #4, #1
 11944              	.LVL993:
1480:src/keys.c    **** 		else if (shift == SHIFT_H)
 11945              		.loc 1 1480 26 view .LVU3680
 11946 1d08 C1F10101 		rsb	r1, r1, #1
1480:src/keys.c    **** 		else if (shift == SHIFT_H)
 11947              		.loc 1 1480 22 view .LVU3681
 11948 1d0c 61F30413 		bfi	r3, r1, #4, #1
 11949 1d10 88F81630 		strb	r3, [r8, #22]
1485:src/keys.c    **** 
 11950              		.loc 1 1485 10 view .LVU3682
 11951 1d14 4FF0330B 		mov	fp, #51
 11952 1d18 FEF7CBB9 		b	.L565
 11953              	.LVL994:
 11954              	.L937:
1482:src/keys.c    **** 		else if (shift == SHIFT_N)
 11955              		.loc 1 1482 11 view .LVU3683
 11956 1d1c 4FF4817B 		mov	fp, #258
ARM GAS  /tmp/ccczu93l.s 			page 328


 11957 1d20 29E7     		b	.L871
 11958              	.LVL995:
 11959              	.L757:
1467:src/keys.c    **** 	    if ( State2.runmode ) {
 11960              		.loc 1 1467 4 is_stmt 1 view .LVU3684
1467:src/keys.c    **** 	    if ( State2.runmode ) {
 11961              		.loc 1 1467 7 is_stmt 0 view .LVU3685
 11962 1d22 0028     		cmp	r0, #0
 11963 1d24 7FF44AAB 		bne	.L753
1468:src/keys.c    **** 	      // Alpha scroll right
 11964              		.loc 1 1468 6 is_stmt 1 view .LVU3686
1468:src/keys.c    **** 	      // Alpha scroll right
 11965              		.loc 1 1468 9 is_stmt 0 view .LVU3687
 11966 1d28 5B06     		lsls	r3, r3, #25
 11967 1d2a 7EF5DBAB 		bpl	.L775
1470:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11968              		.loc 1 1470 8 is_stmt 1 view .LVU3688
1470:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11969              		.loc 1 1470 11 is_stmt 0 view .LVU3689
 11970 1d2e B9F1000F 		cmp	r9, #0
 11971 1d32 16D1     		bne	.L776
 11972 1d34 3268     		ldr	r2, [r6]
1472:src/keys.c    **** 	    }
 11973              		.loc 1 1472 15 view .LVU3690
 11974 1d36 4FF0330B 		mov	fp, #51
 11975 1d3a FEF7BAB9 		b	.L565
 11976              	.L758:
1438:src/keys.c    **** 	    if ( State2.runmode ) {
 11977              		.loc 1 1438 4 is_stmt 1 view .LVU3691
1438:src/keys.c    **** 	    if ( State2.runmode ) {
 11978              		.loc 1 1438 7 is_stmt 0 view .LVU3692
 11979 1d3e 0028     		cmp	r0, #0
 11980 1d40 7FF43CAB 		bne	.L753
1439:src/keys.c    **** 	      // Alpha scroll left
 11981              		.loc 1 1439 6 is_stmt 1 view .LVU3693
1439:src/keys.c    **** 	      // Alpha scroll left
 11982              		.loc 1 1439 9 is_stmt 0 view .LVU3694
 11983 1d44 5A06     		lsls	r2, r3, #25
 11984 1d46 7EF5C4AB 		bpl	.L771
1447:src/keys.c    **** 		alpha_pos += 1;
 11985              		.loc 1 1447 8 is_stmt 1 view .LVU3695
1447:src/keys.c    **** 		alpha_pos += 1;
 11986              		.loc 1 1447 11 is_stmt 0 view .LVU3696
 11987 1d4a B9F1000F 		cmp	r9, #0
 11988 1d4e 11D1     		bne	.L772
 11989              	.LVL996:
 11990              	.L774:
1448:src/keys.c    **** 	      }
 11991              		.loc 1 1448 3 is_stmt 1 view .LVU3697
1448:src/keys.c    **** 	      }
 11992              		.loc 1 1448 13 is_stmt 0 view .LVU3698
 11993 1d50 09F1010A 		add	r10, r9, #1
 11994              	.LVL997:
 11995              	.L773:
1455:src/keys.c    **** #else
 11996              		.loc 1 1455 8 is_stmt 1 view .LVU3699
 11997 1d54 3268     		ldr	r2, [r6]
ARM GAS  /tmp/ccczu93l.s 			page 329


1455:src/keys.c    **** #else
 11998              		.loc 1 1455 25 is_stmt 0 view .LVU3700
 11999 1d56 88F80DA0 		strb	r10, [r8, #13]
1460:src/keys.c    **** 	    }
 12000              		.loc 1 1460 8 is_stmt 1 view .LVU3701
1460:src/keys.c    **** 	    }
 12001              		.loc 1 1460 15 is_stmt 0 view .LVU3702
 12002 1d5a 4FF0330B 		mov	fp, #51
 12003 1d5e FEF7A8B9 		b	.L565
 12004              	.LVL998:
 12005              	.L776:
1471:src/keys.c    **** 	      return STATE_UNFINISHED;
 12006              		.loc 1 1471 3 is_stmt 1 view .LVU3703
1471:src/keys.c    **** 	      return STATE_UNFINISHED;
 12007              		.loc 1 1471 31 is_stmt 0 view .LVU3704
 12008 1d62 09F1FF39 		add	r9, r9, #-1
 12009              	.LVL999:
1471:src/keys.c    **** 	      return STATE_UNFINISHED;
 12010              		.loc 1 1471 31 view .LVU3705
 12011 1d66 3268     		ldr	r2, [r6]
1471:src/keys.c    **** 	      return STATE_UNFINISHED;
 12012              		.loc 1 1471 20 view .LVU3706
 12013 1d68 88F80D90 		strb	r9, [r8, #13]
1472:src/keys.c    **** 	    }
 12014              		.loc 1 1472 15 view .LVU3707
 12015 1d6c 4FF0330B 		mov	fp, #51
 12016 1d70 FEF79FB9 		b	.L565
 12017              	.LVL1000:
 12018              	.L772:
1447:src/keys.c    **** 		alpha_pos += 1;
 12019              		.loc 1 1447 33 view .LVU3708
 12020 1d74 FFF7FEFF 		bl	alen
 12021              	.LVL1001:
1447:src/keys.c    **** 		alpha_pos += 1;
 12022              		.loc 1 1447 41 view .LVU3709
 12023 1d78 09EB4903 		add	r3, r9, r9, lsl #1
1447:src/keys.c    **** 		alpha_pos += 1;
 12024              		.loc 1 1447 39 view .LVU3710
 12025 1d7c A0EB4300 		sub	r0, r0, r3, lsl #1
1447:src/keys.c    **** 		alpha_pos += 1;
 12026              		.loc 1 1447 29 view .LVU3711
 12027 1d80 1328     		cmp	r0, #19
 12028 1d82 E5D8     		bhi	.L774
 12029 1d84 E6E7     		b	.L773
 12030              	.LVL1002:
 12031              	.L788:
1447:src/keys.c    **** 		alpha_pos += 1;
 12032              		.loc 1 1447 29 view .LVU3712
 12033              	.LBE1099:
 12034              	.LBE1212:
 12035              	.LBB1213:
 12036              	.LBB1133:
1179:src/keys.c    **** 			break;
 12037              		.loc 1 1179 4 is_stmt 1 view .LVU3713
 12038              	.LBB1124:
 12039              	.LBI1124:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/ccczu93l.s 			page 330


 12040              		.loc 1 94 20 view .LVU3714
 12041              	.LBB1125:
  95:src/keys.c    **** 	State2.shifts = shift;
 12042              		.loc 1 95 2 view .LVU3715
 12043              	.LBB1126:
 12044              	.LBI1126:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12045              		.loc 1 86 13 view .LVU3716
 12046              	.LBB1127:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12047              		.loc 1 87 2 view .LVU3717
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12048              		.loc 1 87 18 is_stmt 0 view .LVU3718
 12049 1d86 FFF7FEFF 		bl	shift_down
 12050              	.LVL1003:
  88:src/keys.c    **** }
 12051              		.loc 1 88 2 is_stmt 1 view .LVU3719
 12052              	.LBE1127:
 12053              	.LBE1126:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12054              		.loc 1 96 2 view .LVU3720
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12055              		.loc 1 96 16 is_stmt 0 view .LVU3721
 12056 1d8a 88F810A0 		strb	r10, [r8, #16]
  98:src/keys.c    **** }
 12057              		.loc 1 98 2 is_stmt 1 view .LVU3722
  98:src/keys.c    **** }
 12058              		.loc 1 98 9 is_stmt 0 view .LVU3723
 12059 1d8e FEF753BB 		b	.L595
 12060              	.LVL1004:
 12061              	.L787:
  98:src/keys.c    **** }
 12062              		.loc 1 98 9 view .LVU3724
 12063              	.LBE1125:
 12064              	.LBE1124:
1193:src/keys.c    **** 			break;
 12065              		.loc 1 1193 4 is_stmt 1 view .LVU3725
 12066 1d92 FFF7FEFF 		bl	init_state
 12067              	.LVL1005:
1194:src/keys.c    **** 
 12068              		.loc 1 1194 4 view .LVU3726
 12069 1d96 FEF74FBB 		b	.L595
 12070              	.L1178:
1169:src/keys.c    **** 		State2.hyp = 1;
 12071              		.loc 1 1169 3 view .LVU3727
 12072 1d9a FFF7FEFF 		bl	process_cmdline_set_lift
 12073              	.LVL1006:
1170:src/keys.c    **** 		State2.dot = op;
 12074              		.loc 1 1170 3 view .LVU3728
1171:src/keys.c    **** 		State2.cmplx = 1;
 12075              		.loc 1 1171 3 view .LVU3729
1172:src/keys.c    **** 		return STATE_UNFINISHED;
 12076              		.loc 1 1172 3 view .LVU3730
1172:src/keys.c    **** 		return STATE_UNFINISHED;
 12077              		.loc 1 1172 16 is_stmt 0 view .LVU3731
 12078 1d9e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12079 1da2 3268     		ldr	r2, [r6]
ARM GAS  /tmp/ccczu93l.s 			page 331


 12080 1da4 0BF00103 		and	r3, fp, #1
 12081 1da8 9B01     		lsls	r3, r3, #6
 12082 1daa 43F02203 		orr	r3, r3, #34
 12083 1dae 21F06201 		bic	r1, r1, #98
 12084 1db2 0B43     		orrs	r3, r3, r1
 12085 1db4 88F81530 		strb	r3, [r8, #21]
1173:src/keys.c    **** 	}
 12086              		.loc 1 1173 3 is_stmt 1 view .LVU3732
1173:src/keys.c    **** 	}
 12087              		.loc 1 1173 10 is_stmt 0 view .LVU3733
 12088 1db8 4FF0330B 		mov	fp, #51
 12089              	.LVL1007:
1173:src/keys.c    **** 	}
 12090              		.loc 1 1173 10 view .LVU3734
 12091 1dbc FEF779B9 		b	.L565
 12092              	.LVL1008:
 12093              	.L1177:
1164:src/keys.c    **** 		return STATE_UNFINISHED;
 12094              		.loc 1 1164 3 is_stmt 1 view .LVU3735
 12095              	.LBB1128:
 12096              	.LBI1128:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 12097              		.loc 1 503 13 view .LVU3736
 12098              	.LBB1129:
 504:src/keys.c    **** 		return;
 12099              		.loc 1 504 2 view .LVU3737
 504:src/keys.c    **** 		return;
 12100              		.loc 1 504 6 is_stmt 0 view .LVU3738
 12101 1dc0 FFF7FEFF 		bl	is_bad_cmdline
 12102              	.LVL1009:
 504:src/keys.c    **** 		return;
 12103              		.loc 1 504 5 view .LVU3739
 12104 1dc4 0446     		mov	r4, r0
 12105 1dc6 0028     		cmp	r0, #0
 12106 1dc8 40F0AA80 		bne	.L1200
 12107 1dcc 5FFA8BF0 		uxtb	r0, fp
 12108 1dd0 FFF7FEFF 		bl	init_arg.part.0
 12109              	.LVL1010:
 12110              	.LBE1129:
 12111              	.LBE1128:
 12112              	.LBE1133:
 12113              	.LBE1213:
 12114              	.LBE1275:
 12115              	.LBE1349:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 12116              		.loc 1 2958 7 view .LVU3740
 12117 1dd4 2546     		mov	r5, r4
 12118 1dd6 3268     		ldr	r2, [r6]
 12119              	.LBB1350:
 12120              	.LBB1276:
 12121              	.LBB1214:
 12122              	.LBB1134:
1165:src/keys.c    **** 	}
 12123              		.loc 1 1165 10 view .LVU3741
 12124 1dd8 4FF0330B 		mov	fp, #51
 12125              	.LVL1011:
1165:src/keys.c    **** 	}
ARM GAS  /tmp/ccczu93l.s 			page 332


 12126              		.loc 1 1165 10 view .LVU3742
 12127 1ddc FEF769B9 		b	.L565
 12128              	.LVL1012:
 12129              	.L1192:
1165:src/keys.c    **** 	}
 12130              		.loc 1 1165 10 view .LVU3743
 12131 1de0 3268     		ldr	r2, [r6]
 12132              	.LBE1134:
 12133              	.LBE1214:
 12134              	.LBB1215:
 12135              	.LBB889:
2390:src/keys.c    **** 		else if (State2.numdigit == 1)
 12136              		.loc 1 2390 11 view .LVU3744
 12137 1de2 4FF0330B 		mov	fp, #51
 12138 1de6 FEF764B9 		b	.L565
 12139              	.LVL1013:
 12140              	.L1189:
2390:src/keys.c    **** 		else if (State2.numdigit == 1)
 12141              		.loc 1 2390 11 view .LVU3745
 12142              	.LBE889:
 12143              	.LBE1215:
 12144              	.LBB1216:
 12145              	.LBB968:
 935:src/keys.c    **** 		}
 12146              		.loc 1 935 4 is_stmt 1 view .LVU3746
 935:src/keys.c    **** 		}
 12147              		.loc 1 935 34 is_stmt 0 view .LVU3747
 12148 1dea 654B     		ldr	r3, .L1218+4
 12149              	.LVL1014:
 935:src/keys.c    **** 		}
 12150              		.loc 1 935 11 view .LVU3748
 12151 1dec 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 12152 1df0 FFF7FEFF 		bl	check_f_key
 12153              	.LVL1015:
 935:src/keys.c    **** 		}
 12154              		.loc 1 935 11 view .LVU3749
 12155 1df4 8346     		mov	fp, r0
 12156              	.LVL1016:
 935:src/keys.c    **** 		}
 12157              		.loc 1 935 11 view .LVU3750
 12158 1df6 FEF71FBB 		b	.L595
 12159              	.LVL1017:
 12160              	.L1188:
 916:src/keys.c    **** 	    State2.dot = op;
 12161              		.loc 1 916 6 is_stmt 1 view .LVU3751
 917:src/keys.c    **** 	    // State2.cmplx = 0;
 12162              		.loc 1 917 6 view .LVU3752
 916:src/keys.c    **** 	    State2.dot = op;
 12163              		.loc 1 916 17 is_stmt 0 view .LVU3753
 12164 1dfa 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12165 1dfe 3268     		ldr	r2, [r6]
 12166 1e00 0BF00103 		and	r3, fp, #1
 12167              	.LVL1018:
 916:src/keys.c    **** 	    State2.dot = op;
 12168              		.loc 1 916 17 view .LVU3754
 12169 1e04 9B01     		lsls	r3, r3, #6
 12170 1e06 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/ccczu93l.s 			page 333


 12171 1e0a 21F06001 		bic	r1, r1, #96
 12172 1e0e 0B43     		orrs	r3, r3, r1
 12173 1e10 88F81530 		strb	r3, [r8, #21]
 919:src/keys.c    **** 	  }
 12174              		.loc 1 919 6 is_stmt 1 view .LVU3755
 919:src/keys.c    **** 	  }
 12175              		.loc 1 919 13 is_stmt 0 view .LVU3756
 12176 1e14 4FF0330B 		mov	fp, #51
 12177              	.LVL1019:
 919:src/keys.c    **** 	  }
 12178              		.loc 1 919 13 view .LVU3757
 12179 1e18 FEF74BB9 		b	.L565
 12180              	.LVL1020:
 12181              	.L812:
 967:src/keys.c    **** 		State2.test = op;
 12182              		.loc 1 967 3 is_stmt 1 view .LVU3758
 12183 1e1c FFF7FEFF 		bl	process_cmdline_set_lift
 12184              	.LVL1021:
 968:src/keys.c    **** 		return STATE_UNFINISHED;
 12185              		.loc 1 968 3 view .LVU3759
 12186              	.LBE968:
 12187              	.LBE1216:
 12188              	.LBE1276:
 12189              	.LBE1350:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 12190              		.loc 1 2958 7 is_stmt 0 view .LVU3760
 12191 1e20 2546     		mov	r5, r4
 12192              	.LBB1351:
 12193              	.LBB1277:
 12194              	.LBB1217:
 12195              	.LBB969:
 968:src/keys.c    **** 		return STATE_UNFINISHED;
 12196              		.loc 1 968 15 view .LVU3761
 12197 1e22 88F80FB0 		strb	fp, [r8, #15]
 969:src/keys.c    **** 
 12198              		.loc 1 969 3 is_stmt 1 view .LVU3762
 12199 1e26 3268     		ldr	r2, [r6]
 969:src/keys.c    **** 
 12200              		.loc 1 969 10 is_stmt 0 view .LVU3763
 12201 1e28 4FF0330B 		mov	fp, #51
 12202              	.LVL1022:
 969:src/keys.c    **** 
 12203              		.loc 1 969 10 view .LVU3764
 12204 1e2c FEF741B9 		b	.L565
 12205              	.LVL1023:
 12206              	.L1187:
 983:src/keys.c    **** 				init_arg((enum rarg) op);
 12207              		.loc 1 983 4 is_stmt 1 view .LVU3765
 983:src/keys.c    **** 				init_arg((enum rarg) op);
 12208              		.loc 1 983 7 is_stmt 0 view .LVU3766
 12209 1e30 BAF5704F 		cmp	r10, #61440
 12210 1e34 26D1     		bne	.L814
 983:src/keys.c    **** 				init_arg((enum rarg) op);
 12211              		.loc 1 983 18 view .LVU3767
 12212 1e36 534B     		ldr	r3, .L1218+8
 12213 1e38 1B68     		ldr	r3, [r3]
 12214 1e3a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
ARM GAS  /tmp/ccczu93l.s 			page 334


 983:src/keys.c    **** 				init_arg((enum rarg) op);
 12215              		.loc 1 983 8 view .LVU3768
 12216 1e3e D807     		lsls	r0, r3, #31
 12217 1e40 20D5     		bpl	.L814
 12218 1e42 3268     		ldr	r2, [r6]
 986:src/keys.c    **** 		}
 12219              		.loc 1 986 11 view .LVU3769
 12220 1e44 4FF0330B 		mov	fp, #51
 12221              	.LVL1024:
 986:src/keys.c    **** 		}
 12222              		.loc 1 986 11 view .LVU3770
 12223 1e48 FEF733B9 		b	.L565
 12224              	.LVL1025:
 12225              	.L1163:
 986:src/keys.c    **** 		}
 12226              		.loc 1 986 11 view .LVU3771
 12227              	.LBE969:
 12228              	.LBE1217:
 12229              	.LBB1218:
 12230              	.LBB890:
 12231              	.LBB881:
 12232              	.LBB870:
 439:src/keys.c    **** 			shift = SHIFT_LC_G;
 12233              		.loc 1 439 8 is_stmt 1 view .LVU3772
 440:src/keys.c    **** 	}
 12234              		.loc 1 440 10 is_stmt 0 view .LVU3773
 12235 1e4c 0229     		cmp	r1, #2
 12236 1e4e 08BF     		it	eq
 12237 1e50 0521     		moveq	r1, #5
 12238              	.LVL1026:
 440:src/keys.c    **** 	}
 12239              		.loc 1 440 10 view .LVU3774
 12240 1e52 FEF7C3BF 		b	.L687
 12241              	.LVL1027:
 12242              	.L838:
 440:src/keys.c    **** 	}
 12243              		.loc 1 440 10 view .LVU3775
 12244              	.LBE870:
 12245              	.LBE881:
 12246              	.LBE890:
 12247              	.LBE1218:
 12248              	.LBE1277:
 12249              	.LBE1351:
3179:src/keys.c    **** 	NonProgrammable = 0;
 12250              		.loc 1 3179 7 is_stmt 1 view .LVU3776
3179:src/keys.c    **** 	NonProgrammable = 0;
 12251              		.loc 1 3179 11 is_stmt 0 view .LVU3777
 12252 1e56 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3179:src/keys.c    **** 	NonProgrammable = 0;
 12253              		.loc 1 3179 10 view .LVU3778
 12254 1e5a 5B06     		lsls	r3, r3, #25
 12255 1e5c 0CD5     		bpl	.L932
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12256              		.loc 1 3180 2 is_stmt 1 view .LVU3779
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12257              		.loc 1 3180 18 is_stmt 0 view .LVU3780
 12258 1e5e 474B     		ldr	r3, .L1218
ARM GAS  /tmp/ccczu93l.s 			page 335


 12259 1e60 0022     		movs	r2, #0
 12260              	.LBB1352:
 12261              	.LBB1278:
 12262              	.LBB1219:
 12263              	.LBB694:
 743:src/keys.c    **** 	    }
 12264              		.loc 1 743 15 view .LVU3781
 12265 1e62 4FF0100B 		mov	fp, #16
 12266              	.LBE694:
 12267              	.LBE1219:
 12268              	.LBE1278:
 12269              	.LBE1352:
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12270              		.loc 1 3180 18 view .LVU3782
 12271 1e66 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12272              		.loc 1 3181 2 is_stmt 1 view .LVU3783
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12273              		.loc 1 3181 32 is_stmt 0 view .LVU3784
 12274 1e68 5846     		mov	r0, fp
 12275 1e6a FEF7ADBC 		b	.L874
 12276              	.LVL1028:
 12277              	.L1140:
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12278              		.loc 1 3181 32 view .LVU3785
 12279 1e6e 3268     		ldr	r2, [r6]
 12280              	.LBB1353:
 12281              	.LBB1279:
 12282              	.LBB1220:
 12283              	.LBB695:
 838:src/keys.c    **** }
 12284              		.loc 1 838 9 view .LVU3786
 12285 1e70 4FF0330B 		mov	fp, #51
 12286 1e74 FEF71DB9 		b	.L565
 12287              	.LVL1029:
 12288              	.L932:
 743:src/keys.c    **** 	    }
 12289              		.loc 1 743 15 view .LVU3787
 12290 1e78 4FF0100B 		mov	fp, #16
 12291 1e7c 31E6     		b	.L873
 12292              	.LVL1030:
 12293              	.L933:
 751:src/keys.c    **** 	    }
 12294              		.loc 1 751 15 view .LVU3788
 12295 1e7e 4FF0110B 		mov	fp, #17
 12296 1e82 2EE6     		b	.L873
 12297              	.LVL1031:
 12298              	.L814:
 751:src/keys.c    **** 	    }
 12299              		.loc 1 751 15 view .LVU3789
 12300              	.LBE695:
 12301              	.LBE1220:
 12302              	.LBB1221:
 12303              	.LBB970:
 984:src/keys.c    **** 			}
 12304              		.loc 1 984 5 is_stmt 1 view .LVU3790
 12305              	.LBB961:
ARM GAS  /tmp/ccczu93l.s 			page 336


 12306              	.LBI961:
 503:src/keys.c    **** 	if (is_bad_cmdline())
 12307              		.loc 1 503 13 view .LVU3791
 12308              	.LBB962:
 504:src/keys.c    **** 		return;
 12309              		.loc 1 504 2 view .LVU3792
 504:src/keys.c    **** 		return;
 12310              		.loc 1 504 6 is_stmt 0 view .LVU3793
 12311 1e84 FFF7FEFF 		bl	is_bad_cmdline
 12312              	.LVL1032:
 504:src/keys.c    **** 		return;
 12313              		.loc 1 504 5 view .LVU3794
 12314 1e88 0446     		mov	r4, r0
 12315              	.LVL1033:
 504:src/keys.c    **** 		return;
 12316              		.loc 1 504 5 view .LVU3795
 12317 1e8a 0028     		cmp	r0, #0
 12318 1e8c 6ED1     		bne	.L1201
 12319 1e8e 5FFA8BF0 		uxtb	r0, fp
 12320 1e92 FFF7FEFF 		bl	init_arg.part.0
 12321              	.LVL1034:
 12322              	.LBE962:
 12323              	.LBE961:
 12324              	.LBE970:
 12325              	.LBE1221:
 12326              	.LBE1279:
 12327              	.LBE1353:
2958:src/keys.c    ****   if (was_paused && Pause == 0)
 12328              		.loc 1 2958 7 view .LVU3796
 12329 1e96 2546     		mov	r5, r4
 12330 1e98 3268     		ldr	r2, [r6]
 12331              	.LBB1354:
 12332              	.LBB1280:
 12333              	.LBB1222:
 12334              	.LBB971:
 986:src/keys.c    **** 		}
 12335              		.loc 1 986 11 view .LVU3797
 12336 1e9a 4FF0330B 		mov	fp, #51
 12337              	.LVL1035:
 986:src/keys.c    **** 		}
 12338              		.loc 1 986 11 view .LVU3798
 12339 1e9e FEF708B9 		b	.L565
 12340              	.LVL1036:
 12341              	.L1186:
 974:src/keys.c    **** 			return STATE_UNFINISHED;
 12342              		.loc 1 974 4 is_stmt 1 view .LVU3799
 974:src/keys.c    **** 			return STATE_UNFINISHED;
 12343              		.loc 1 974 26 is_stmt 0 view .LVU3800
 12344 1ea2 5C1E     		subs	r4, r3, #1
 12345              	.LVL1037:
 974:src/keys.c    **** 			return STATE_UNFINISHED;
 12346              		.loc 1 974 17 view .LVU3801
 12347 1ea4 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 12348 1ea8 3268     		ldr	r2, [r6]
 974:src/keys.c    **** 			return STATE_UNFINISHED;
 12349              		.loc 1 974 26 view .LVU3802
 12350 1eaa 6342     		rsbs	r3, r4, #0
ARM GAS  /tmp/ccczu93l.s 			page 337


 12351 1eac 6341     		adcs	r3, r3, r4
 974:src/keys.c    **** 			return STATE_UNFINISHED;
 12352              		.loc 1 974 17 view .LVU3803
 12353 1eae 63F3C711 		bfi	r1, r3, #7, #1
 12354 1eb2 88F81710 		strb	r1, [r8, #23]
 975:src/keys.c    **** 		}
 12355              		.loc 1 975 4 is_stmt 1 view .LVU3804
 975:src/keys.c    **** 		}
 12356              		.loc 1 975 11 is_stmt 0 view .LVU3805
 12357 1eb6 4FF0330B 		mov	fp, #51
 12358              	.LVL1038:
 975:src/keys.c    **** 		}
 12359              		.loc 1 975 11 view .LVU3806
 12360 1eba FEF7FAB8 		b	.L565
 12361              	.LVL1039:
 12362              	.L1166:
 975:src/keys.c    **** 		}
 12363              		.loc 1 975 11 view .LVU3807
 12364              	.LBE971:
 12365              	.LBE1222:
 12366              	.LBB1223:
 12367              	.LBB891:
2426:src/keys.c    **** 		State2.numdigit = 2;
 12368              		.loc 1 2426 3 is_stmt 1 view .LVU3808
2427:src/keys.c    **** 		return STATE_UNFINISHED;
 12369              		.loc 1 2427 19 is_stmt 0 view .LVU3809
 12370 1ebe 0223     		movs	r3, #2
 12371 1ec0 3268     		ldr	r2, [r6]
2426:src/keys.c    **** 		State2.numdigit = 2;
 12372              		.loc 1 2426 18 view .LVU3810
 12373 1ec2 88F80A00 		strb	r0, [r8, #10]
2427:src/keys.c    **** 		return STATE_UNFINISHED;
 12374              		.loc 1 2427 3 is_stmt 1 view .LVU3811
2427:src/keys.c    **** 		return STATE_UNFINISHED;
 12375              		.loc 1 2427 19 is_stmt 0 view .LVU3812
 12376 1ec6 88F80B30 		strb	r3, [r8, #11]
2428:src/keys.c    **** 	}
 12377              		.loc 1 2428 3 is_stmt 1 view .LVU3813
2428:src/keys.c    **** 	}
 12378              		.loc 1 2428 10 is_stmt 0 view .LVU3814
 12379 1eca 4FF0330B 		mov	fp, #51
 12380 1ece FEF7F0B8 		b	.L565
 12381              	.LVL1040:
 12382              	.L1171:
2428:src/keys.c    **** 	}
 12383              		.loc 1 2428 10 view .LVU3815
 12384              	.LBE891:
 12385              	.LBE1223:
 12386              	.LBB1224:
 12387              	.LBB1019:
2691:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12388              		.loc 1 2691 3 is_stmt 1 view .LVU3816
2691:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12389              		.loc 1 2691 7 is_stmt 0 view .LVU3817
 12390 1ed2 FFF7FEFF 		bl	local_regs
 12391              	.LVL1041:
2691:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
ARM GAS  /tmp/ccczu93l.s 			page 338


 12392              		.loc 1 2691 6 view .LVU3818
 12393 1ed6 68B1     		cbz	r0, .L725
2692:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12394              		.loc 1 2692 4 is_stmt 1 view .LVU3819
2692:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12395              		.loc 1 2692 19 is_stmt 0 view .LVU3820
 12396 1ed8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2692:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12397              		.loc 1 2692 34 view .LVU3821
 12398 1edc 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2692:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12399              		.loc 1 2692 19 view .LVU3822
 12400 1ee0 03F00101 		and	r1, r3, #1
2692:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12401              		.loc 1 2692 34 view .LVU3823
 12402 1ee4 0A43     		orrs	r2, r1, r2
 12403 1ee6 0CBF     		ite	eq
 12404 1ee8 0122     		moveq	r2, #1
 12405 1eea 0022     		movne	r2, #0
2692:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12406              		.loc 1 2692 17 view .LVU3824
 12407 1eec 62F30003 		bfi	r3, r2, #0, #1
 12408 1ef0 88F81630 		strb	r3, [r8, #22]
 12409              	.L725:
2693:src/keys.c    **** 		goto reset_window;
 12410              		.loc 1 2693 3 is_stmt 1 view .LVU3825
2693:src/keys.c    **** 		goto reset_window;
 12411              		.loc 1 2693 32 is_stmt 0 view .LVU3826
 12412 1ef4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2693:src/keys.c    **** 		goto reset_window;
 12413              		.loc 1 2693 17 view .LVU3827
 12414 1ef8 13F0010F 		tst	r3, #1
 12415 1efc 14BF     		ite	ne
 12416 1efe 0023     		movne	r3, #0
 12417 1f00 6423     		moveq	r3, #100
 12418 1f02 A8F80830 		strh	r3, [r8, #8]	@ movhi
2694:src/keys.c    **** 	}
 12419              		.loc 1 2694 3 is_stmt 1 view .LVU3828
 12420 1f06 FFF792B9 		b	.L727
 12421              	.LVL1042:
 12422              	.L850:
2694:src/keys.c    **** 	}
 12423              		.loc 1 2694 3 is_stmt 0 view .LVU3829
 12424              	.LBE1019:
 12425              	.LBE1224:
 12426              	.LBB1225:
 12427              	.LBB696:
 814:src/keys.c    **** #else
 12428              		.loc 1 814 4 is_stmt 1 view .LVU3830
 814:src/keys.c    **** #else
 12429              		.loc 1 814 17 is_stmt 0 view .LVU3831
 12430 1f0a 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 12431 1f0e 3268     		ldr	r2, [r6]
 12432 1f10 43F00203 		orr	r3, r3, #2
 12433 1f14 88F81530 		strb	r3, [r8, #21]
 820:src/keys.c    **** 
 12434              		.loc 1 820 4 is_stmt 1 view .LVU3832
ARM GAS  /tmp/ccczu93l.s 			page 339


 838:src/keys.c    **** }
 12435              		.loc 1 838 9 is_stmt 0 view .LVU3833
 12436 1f18 4FF0330B 		mov	fp, #51
 820:src/keys.c    **** 
 12437              		.loc 1 820 4 view .LVU3834
 12438 1f1c FEF7C9B8 		b	.L565
 12439              	.LVL1043:
 12440              	.L1200:
 820:src/keys.c    **** 
 12441              		.loc 1 820 4 view .LVU3835
 12442 1f20 3268     		ldr	r2, [r6]
 12443              	.LBE696:
 12444              	.LBE1225:
 12445              	.LBB1226:
 12446              	.LBB1135:
1165:src/keys.c    **** 	}
 12447              		.loc 1 1165 10 view .LVU3836
 12448 1f22 4FF0330B 		mov	fp, #51
 12449              	.LVL1044:
1165:src/keys.c    **** 	}
 12450              		.loc 1 1165 10 view .LVU3837
 12451 1f26 FEF7C4B8 		b	.L565
 12452              	.LVL1045:
 12453              	.L931:
1165:src/keys.c    **** 	}
 12454              		.loc 1 1165 10 view .LVU3838
 12455              	.LBE1135:
 12456              	.LBE1226:
 12457              	.LBB1227:
 12458              	.LBB972:
 960:src/keys.c    **** 	  }
 12459              		.loc 1 960 13 view .LVU3839
 12460 1f2a 4FF0130B 		mov	fp, #19
 12461 1f2e D8E5     		b	.L873
 12462              	.LVL1046:
 12463              	.L1190:
 960:src/keys.c    **** 	  }
 12464              		.loc 1 960 13 view .LVU3840
 12465 1f30 3268     		ldr	r2, [r6]
 947:src/keys.c    **** 			process_cmdline_set_lift();
 12466              		.loc 1 947 12 view .LVU3841
 12467 1f32 4FF0330B 		mov	fp, #51
 12468              	.LVL1047:
 947:src/keys.c    **** 			process_cmdline_set_lift();
 12469              		.loc 1 947 12 view .LVU3842
 12470 1f36 FEF7BCB8 		b	.L565
 12471              	.LVL1048:
 12472              	.L1185:
 954:src/keys.c    **** 	    return OP_SPEC | OP_D;
 12473              		.loc 1 954 27 view .LVU3843
 12474 1f3a 124B     		ldr	r3, .L1218+8
 12475              	.LVL1049:
 954:src/keys.c    **** 	    return OP_SPEC | OP_D;
 12476              		.loc 1 954 27 view .LVU3844
 12477 1f3c 1B68     		ldr	r3, [r3]
 12478 1f3e 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 12479 1f42 DA07     		lsls	r2, r3, #31
ARM GAS  /tmp/ccczu93l.s 			page 340


 12480 1f44 7FF581AB 		bpl	.L807
 954:src/keys.c    **** 	    return OP_SPEC | OP_D;
 12481              		.loc 1 954 45 view .LVU3845
 12482 1f48 0D20     		movs	r0, #13
 12483              	.LVL1050:
 954:src/keys.c    **** 	    return OP_SPEC | OP_D;
 12484              		.loc 1 954 45 view .LVU3846
 12485 1f4a FFF7FEFF 		bl	intltr
 12486              	.LVL1051:
 954:src/keys.c    **** 	    return OP_SPEC | OP_D;
 12487              		.loc 1 954 42 view .LVU3847
 12488 1f4e 0028     		cmp	r0, #0
 12489 1f50 3FF47BAB 		beq	.L807
 12490              	.LVL1052:
 954:src/keys.c    **** 	    return OP_SPEC | OP_D;
 12491              		.loc 1 954 42 view .LVU3848
 12492              	.LBE972:
 12493              	.LBE1227:
 12494              	.LBE1280:
 12495              	.LBE1354:
3179:src/keys.c    **** 	NonProgrammable = 0;
 12496              		.loc 1 3179 7 is_stmt 1 view .LVU3849
3179:src/keys.c    **** 	NonProgrammable = 0;
 12497              		.loc 1 3179 11 is_stmt 0 view .LVU3850
 12498 1f54 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3179:src/keys.c    **** 	NonProgrammable = 0;
 12499              		.loc 1 3179 10 view .LVU3851
 12500 1f58 5906     		lsls	r1, r3, #25
 12501 1f5a 0CD5     		bpl	.L930
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12502              		.loc 1 3180 2 is_stmt 1 view .LVU3852
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12503              		.loc 1 3180 18 is_stmt 0 view .LVU3853
 12504 1f5c 074B     		ldr	r3, .L1218
 12505 1f5e 0022     		movs	r2, #0
 12506              	.LBB1355:
 12507              	.LBB1281:
 12508              	.LBB1228:
 12509              	.LBB973:
 955:src/keys.c    **** 	  }
 12510              		.loc 1 955 13 view .LVU3854
 12511 1f60 4FF0120B 		mov	fp, #18
 12512              	.LBE973:
 12513              	.LBE1228:
 12514              	.LBE1281:
 12515              	.LBE1355:
3180:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12516              		.loc 1 3180 18 view .LVU3855
 12517 1f64 1A60     		str	r2, [r3]
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12518              		.loc 1 3181 2 is_stmt 1 view .LVU3856
3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12519              		.loc 1 3181 32 is_stmt 0 view .LVU3857
 12520 1f66 5846     		mov	r0, fp
 12521 1f68 FEF72EBC 		b	.L874
 12522              	.LVL1053:
 12523              	.L1201:
ARM GAS  /tmp/ccczu93l.s 			page 341


3181:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12524              		.loc 1 3181 32 view .LVU3858
 12525 1f6c 3268     		ldr	r2, [r6]
 12526              	.LBB1356:
 12527              	.LBB1282:
 12528              	.LBB1229:
 12529              	.LBB974:
 986:src/keys.c    **** 		}
 12530              		.loc 1 986 11 view .LVU3859
 12531 1f6e 4FF0330B 		mov	fp, #51
 12532              	.LVL1054:
 986:src/keys.c    **** 		}
 12533              		.loc 1 986 11 view .LVU3860
 12534 1f72 FEF79EB8 		b	.L565
 12535              	.LVL1055:
 12536              	.L930:
 955:src/keys.c    **** 	  }
 12537              		.loc 1 955 13 view .LVU3861
 12538 1f76 4FF0120B 		mov	fp, #18
 12539 1f7a B2E5     		b	.L873
 12540              	.L1219:
 12541              		.align	2
 12542              	.L1218:
 12543 1f7c 00000000 		.word	NonProgrammable
 12544 1f80 00000000 		.word	.LANCHOR20
 12545 1f84 00000000 		.word	main_ram
 12546              	.LBE974:
 12547              	.LBE1229:
 12548              	.LBE1282:
 12549              	.LBE1356:
 12550              		.cfi_endproc
 12551              	.LFE58:
 12553              		.section	.text.process_keycode_with_shift,"ax",%progbits
 12554              		.align	1
 12555              		.p2align 2,,3
 12556              		.global	process_keycode_with_shift
 12557              		.syntax unified
 12558              		.thumb
 12559              		.thumb_func
 12560              		.fpu fpv4-sp-d16
 12562              	process_keycode_with_shift:
 12563              	.LFB57:
2932:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12564              		.loc 1 2932 61 is_stmt 1 view -0
 12565              		.cfi_startproc
 12566              		@ args = 0, pretend = 0, frame = 8
 12567              		@ frame_needed = 0, uses_anonymous_args = 0
 12568 0000 30B5     		push	{r4, r5, lr}
 12569              		.cfi_def_cfa_offset 12
 12570              		.cfi_offset 4, -12
 12571              		.cfi_offset 5, -8
 12572              		.cfi_offset 14, -4
 12573 0002 83B0     		sub	sp, sp, #12
 12574              		.cfi_def_cfa_offset 24
2932:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12575              		.loc 1 2932 61 is_stmt 0 view .LVU3863
 12576 0004 02AB     		add	r3, sp, #8
ARM GAS  /tmp/ccczu93l.s 			page 342


 12577 0006 03E90300 		stmdb	r3, {r0, r1}
 12578 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 12579              	.LVL1056:
2933:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12580              		.loc 1 2933 4 is_stmt 1 view .LVU3864
2933:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12581              		.loc 1 2933 7 is_stmt 0 view .LVU3865
 12582 000e 2E2C     		cmp	r4, #46
 12583 0010 10D0     		beq	.L1220
2934:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12584              		.loc 1 2934 4 is_stmt 1 view .LVU3866
2934:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12585              		.loc 1 2934 7 is_stmt 0 view .LVU3867
 12586 0012 332C     		cmp	r4, #51
 12587 0014 1DD0     		beq	.L1227
2943:src/keys.c    ****      nd_opcode = remapped.shift;
 12588              		.loc 1 2943 7 view .LVU3868
 12589 0016 342C     		cmp	r4, #52
 12590 0018 019D     		ldr	r5, [sp, #4]
2943:src/keys.c    ****      nd_opcode = remapped.shift;
 12591              		.loc 1 2943 4 is_stmt 1 view .LVU3869
2943:src/keys.c    ****      nd_opcode = remapped.shift;
 12592              		.loc 1 2943 7 is_stmt 0 view .LVU3870
 12593 001a 0DD0     		beq	.L1228
2947:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12594              		.loc 1 2947 9 is_stmt 1 view .LVU3871
2947:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12595              		.loc 1 2947 12 is_stmt 0 view .LVU3872
 12596 001c 002D     		cmp	r5, #0
 12597 001e 03DB     		blt	.L1225
2947:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12598              		.loc 1 2947 34 is_stmt 1 discriminator 1 view .LVU3873
 12599              	.LVL1057:
 12600              	.LBB1357:
 12601              	.LBI1357:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12602              		.loc 1 94 20 discriminator 1 view .LVU3874
 12603              	.LBB1358:
  95:src/keys.c    **** 	State2.shifts = shift;
 12604              		.loc 1 95 2 discriminator 1 view .LVU3875
 12605              	.LBB1359:
 12606              	.LBI1359:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12607              		.loc 1 86 13 discriminator 1 view .LVU3876
 12608              	.LBB1360:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12609              		.loc 1 87 2 discriminator 1 view .LVU3877
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12610              		.loc 1 87 18 is_stmt 0 discriminator 1 view .LVU3878
 12611 0020 FFF7FEFF 		bl	shift_down
 12612              	.LVL1058:
  88:src/keys.c    **** }
 12613              		.loc 1 88 2 is_stmt 1 discriminator 1 view .LVU3879
 12614              	.LBE1360:
 12615              	.LBE1359:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12616              		.loc 1 96 2 discriminator 1 view .LVU3880
ARM GAS  /tmp/ccczu93l.s 			page 343


  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12617              		.loc 1 96 16 is_stmt 0 discriminator 1 view .LVU3881
 12618 0024 194B     		ldr	r3, .L1229
 12619              	.LBE1358:
 12620              	.LBE1357:
2947:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12621              		.loc 1 2947 34 discriminator 1 view .LVU3882
 12622 0026 1D74     		strb	r5, [r3, #16]
 12623              	.LBB1362:
 12624              	.LBB1361:
  98:src/keys.c    **** }
 12625              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU3883
 12626              	.LVL1059:
 12627              	.L1225:
  98:src/keys.c    **** }
 12628              		.loc 1 98 2 is_stmt 0 discriminator 1 view .LVU3884
 12629              	.LBE1361:
 12630              	.LBE1362:
2948:src/keys.c    ****  }
 12631              		.loc 1 2948 4 is_stmt 1 view .LVU3885
 12632 0028 2046     		mov	r0, r4
2949:src/keys.c    ****  
 12633              		.loc 1 2949 2 is_stmt 0 view .LVU3886
 12634 002a 03B0     		add	sp, sp, #12
 12635              		.cfi_remember_state
 12636              		.cfi_def_cfa_offset 12
 12637              		@ sp needed
 12638 002c BDE83040 		pop	{r4, r5, lr}
 12639              		.cfi_restore 14
 12640              		.cfi_restore 5
 12641              		.cfi_restore 4
 12642              		.cfi_def_cfa_offset 0
 12643              	.LVL1060:
2948:src/keys.c    ****  }
 12644              		.loc 1 2948 4 view .LVU3887
 12645 0030 FFF7FEBF 		b	process_keycode
 12646              	.LVL1061:
 12647              	.L1220:
 12648              		.cfi_restore_state
2949:src/keys.c    ****  
 12649              		.loc 1 2949 2 view .LVU3888
 12650 0034 03B0     		add	sp, sp, #12
 12651              		.cfi_remember_state
 12652              		.cfi_def_cfa_offset 12
 12653              		@ sp needed
 12654 0036 30BD     		pop	{r4, r5, pc}
 12655              	.LVL1062:
 12656              	.L1228:
 12657              		.cfi_restore_state
2944:src/keys.c    ****      set_shift(SHIFT_N);
 12658              		.loc 1 2944 6 is_stmt 1 view .LVU3889
2944:src/keys.c    ****      set_shift(SHIFT_N);
 12659              		.loc 1 2944 16 is_stmt 0 view .LVU3890
 12660 0038 154B     		ldr	r3, .L1229+4
 12661 003a 1D60     		str	r5, [r3]
2945:src/keys.c    ****    }
 12662              		.loc 1 2945 6 is_stmt 1 view .LVU3891
ARM GAS  /tmp/ccczu93l.s 			page 344


 12663              	.LVL1063:
 12664              	.LBB1363:
 12665              	.LBI1363:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12666              		.loc 1 94 20 view .LVU3892
 12667              	.LBB1364:
  95:src/keys.c    **** 	State2.shifts = shift;
 12668              		.loc 1 95 2 view .LVU3893
 12669              	.LBB1365:
 12670              	.LBI1365:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12671              		.loc 1 86 13 view .LVU3894
 12672              	.LBB1366:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12673              		.loc 1 87 2 view .LVU3895
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12674              		.loc 1 87 18 is_stmt 0 view .LVU3896
 12675 003c FFF7FEFF 		bl	shift_down
 12676              	.LVL1064:
  88:src/keys.c    **** }
 12677              		.loc 1 88 2 is_stmt 1 view .LVU3897
 12678              	.LBE1366:
 12679              	.LBE1365:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12680              		.loc 1 96 2 view .LVU3898
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12681              		.loc 1 96 16 is_stmt 0 view .LVU3899
 12682 0040 124B     		ldr	r3, .L1229
 12683 0042 0022     		movs	r2, #0
 12684              	.LBE1364:
 12685              	.LBE1363:
2948:src/keys.c    ****  }
 12686              		.loc 1 2948 4 view .LVU3900
 12687 0044 2046     		mov	r0, r4
 12688              	.LBB1368:
 12689              	.LBB1367:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12690              		.loc 1 96 16 view .LVU3901
 12691 0046 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 12692              		.loc 1 98 2 is_stmt 1 view .LVU3902
 12693              	.LVL1065:
  98:src/keys.c    **** }
 12694              		.loc 1 98 2 is_stmt 0 view .LVU3903
 12695              	.LBE1367:
 12696              	.LBE1368:
2948:src/keys.c    ****  }
 12697              		.loc 1 2948 4 is_stmt 1 view .LVU3904
2949:src/keys.c    ****  
 12698              		.loc 1 2949 2 is_stmt 0 view .LVU3905
 12699 0048 03B0     		add	sp, sp, #12
 12700              		.cfi_remember_state
 12701              		.cfi_def_cfa_offset 12
 12702              		@ sp needed
 12703 004a BDE83040 		pop	{r4, r5, lr}
 12704              		.cfi_restore 14
 12705              		.cfi_restore 5
ARM GAS  /tmp/ccczu93l.s 			page 345


 12706              		.cfi_restore 4
 12707              		.cfi_def_cfa_offset 0
 12708              	.LVL1066:
2948:src/keys.c    ****  }
 12709              		.loc 1 2948 4 view .LVU3906
 12710 004e FFF7FEBF 		b	process_keycode
 12711              	.LVL1067:
 12712              	.L1227:
 12713              		.cfi_restore_state
2935:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12714              		.loc 1 2935 6 is_stmt 1 view .LVU3907
 12715 0052 104B     		ldr	r3, .L1229+8
 12716 0054 41F23010 		movw	r0, #4400
 12717 0058 9847     		blx	r3
 12718              	.LVL1068:
2935:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12719              		.loc 1 2935 31 view .LVU3908
 12720 005a 0A20     		movs	r0, #10
 12721 005c 0E4B     		ldr	r3, .L1229+12
 12722 005e 9847     		blx	r3
 12723              	.LVL1069:
2935:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12724              		.loc 1 2935 46 view .LVU3909
 12725 0060 0E4B     		ldr	r3, .L1229+16
 12726 0062 9847     		blx	r3
 12727              	.LVL1070:
2936:src/keys.c    ****        // Was error just wait for confirmation
 12728              		.loc 1 2936 6 view .LVU3910
2936:src/keys.c    ****        // Was error just wait for confirmation
 12729              		.loc 1 2936 11 is_stmt 0 view .LVU3911
 12730 0064 0E4B     		ldr	r3, .L1229+20
 12731 0066 0120     		movs	r0, #1
 12732 0068 9847     		blx	r3
 12733              	.LVL1071:
2936:src/keys.c    ****        // Was error just wait for confirmation
 12734              		.loc 1 2936 9 view .LVU3912
 12735 006a 0228     		cmp	r0, #2
 12736 006c 01D1     		bne	.L1223
2938:src/keys.c    ****      }
 12737              		.loc 1 2938 8 is_stmt 1 view .LVU3913
 12738 006e 0D4B     		ldr	r3, .L1229+24
 12739 0070 9847     		blx	r3
 12740              	.LVL1072:
 12741              	.L1223:
2940:src/keys.c    ****      return;
 12742              		.loc 1 2940 6 view .LVU3914
 12743 0072 084B     		ldr	r3, .L1229+8
 12744 0074 42F26020 		movw	r0, #8800
 12745 0078 9847     		blx	r3
 12746              	.LVL1073:
2940:src/keys.c    ****      return;
 12747              		.loc 1 2940 31 view .LVU3915
 12748 007a 074B     		ldr	r3, .L1229+12
 12749 007c 0A20     		movs	r0, #10
 12750 007e 9847     		blx	r3
 12751              	.LVL1074:
2940:src/keys.c    ****      return;
ARM GAS  /tmp/ccczu93l.s 			page 346


 12752              		.loc 1 2940 46 view .LVU3916
 12753 0080 064B     		ldr	r3, .L1229+16
2949:src/keys.c    ****  
 12754              		.loc 1 2949 2 is_stmt 0 view .LVU3917
 12755 0082 03B0     		add	sp, sp, #12
 12756              		.cfi_def_cfa_offset 12
 12757              		@ sp needed
 12758 0084 BDE83040 		pop	{r4, r5, lr}
 12759              		.cfi_restore 14
 12760              		.cfi_restore 5
 12761              		.cfi_restore 4
 12762              		.cfi_def_cfa_offset 0
 12763              	.LVL1075:
2940:src/keys.c    ****      return;
 12764              		.loc 1 2940 46 view .LVU3918
 12765 0088 1847     		bx	r3	@ indirect register sibling call
 12766              	.LVL1076:
 12767              	.L1230:
 12768 008a 00BF     		.align	2
 12769              	.L1229:
 12770 008c 00000000 		.word	StateWhileOn
 12771 0090 00000000 		.word	nd_opcode
 12772 0094 F5020008 		.word	134218485
 12773 0098 05040008 		.word	134218757
 12774 009c F9020008 		.word	134218489
 12775 00a0 79030008 		.word	134218617
 12776 00a4 99030008 		.word	134218649
 12777              		.cfi_endproc
 12778              	.LFE57:
 12780              		.comm	nd_opcode,4,4
 12781              		.comm	NonProgrammable,4,4
 12782              		.comm	GoFast,4,4
 12783              		.comm	OpCodeDisplayPending,4,4
 12784              		.comm	OpCode,4,4
 12785              		.comm	WasDataEntry,4,4
 12786              		.section	.bss.was_paused.9651,"aw",%nobits
 12787              		.align	2
 12788              		.set	.LANCHOR12,. + 0
 12791              	was_paused.9651:
 12792 0000 00000000 		.space	4
 12793              		.section	.rodata.alpha_arrows,"a"
 12794              		.align	2
 12797              	alpha_arrows:
 12798 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 12798      03049F5E 
 12798      7F
 12799              		.section	.rodata.alpha_catalogue,"a"
 12800              		.align	2
 12803              	alpha_catalogue:
 12804 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 12804      9EAE0AA2 
 12804      7EB5AE6B 
 12804      AAEEBC
 12805 000f 284AB0   		.ascii	"(J\260"
 12806              		.section	.rodata.alpha_compares,"a"
 12807              		.align	2
 12810              	alpha_compares:
ARM GAS  /tmp/ccczu93l.s 			page 347


 12811 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 12811      0A3E5B5D 
 12811      7B7D
 12812              		.section	.rodata.alpha_letters,"a"
 12813              		.align	2
 12814              		.set	.LANCHOR3,. + 0
 12817              	alpha_letters:
 12818 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 12818      88C4C5C6 
 12818      C784C8C9 
 12818      CA
 12819 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 12819      CECFD0D1 
 12819      D2D3D415 
 12819      D5
 12820 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 12820      DADBDC01 
 12820      1902DD1A 
 12820      DE
 12821 0027 DF       		.ascii	"\337"
 12822              		.section	.rodata.alpha_letters_lower,"a"
 12823              		.align	2
 12824              		.set	.LANCHOR4,. + 0
 12827              	alpha_letters_lower:
 12828 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 12828      89E4E5E6 
 12828      E785E8E9 
 12828      EA
 12829 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 12829      EEEFF0F1 
 12829      F2F3F416 
 12829      F5
 12830 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 12830      FAFBFC01 
 12830      1902FD1A 
 12830      FE
 12831 0027 FF       		.ascii	"\377"
 12832              		.section	.rodata.alpha_subscripts,"a"
 12833              		.align	2
 12836              	alpha_subscripts:
 12837 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 12837      9A80D798 
 12837      BB1486BC 
 12837      F7
 12838 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 12838      BF818B9C 
 12838      8C999D90 
 12838      9B
 12839              		.section	.rodata.alpha_symbols,"a"
 12840              		.align	2
 12843              	alpha_symbols:
 12844 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 12844      222A405F 
 12844      7E25240C 
 12844      1E1F8EAE 
 12844      926023
 12845              		.section	.rodata.alphamap.9184,"a"
ARM GAS  /tmp/ccczu93l.s 			page 348


 12846              		.align	2
 12847              		.set	.LANCHOR9,. + 0
 12850              	alphamap.9184:
 12851 0000 41004100 		.ascii	"A\000A\000a\240"
 12851      61A0
 12852 0006 42004200 		.ascii	"B\000B\000b\241"
 12852      62A1
 12853 000c 43008200 		.ascii	"C\000\202\000c\242"
 12853      63A2
 12854 0012 44008300 		.ascii	"D\000\203\000d\243"
 12854      64A3
 12855 0018 450D4500 		.ascii	"E\015E\000e\244"
 12855      65A4
 12856 001e 46009400 		.ascii	"F\000\224\000f\264"
 12856      66B4
 12857 0024 47008200 		.ascii	"G\000\202\000g\242"
 12857      67A2
 12858 002a 48005800 		.ascii	"H\000X\000h\265"
 12858      68B5
 12859 0030 49004900 		.ascii	"I\000I\000i\250"
 12859      69A8
 12860 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 12860      6A00
 12861 003c 4B004B00 		.ascii	"K\000K\000k\251"
 12861      6BA9
 12862 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 12862      6CAA
 12863 0048 00004800 		.ascii	"\000\000H\000\000\246"
 12863      00A6
 12864 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 12864      6DAB
 12865 0054 4E084E95 		.ascii	"N\010N\225n\254"
 12865      6EAC
 12866 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 12866      6FB7
 12867 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 12867      0000
 12868 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 12868      0000
 12869 006c 50378F26 		.ascii	"P7\217&p\257"
 12869      70AF
 12870 0072 5138007C 		.ascii	"Q8\000|q\000"
 12870      7100
 12871 0078 5239520B 		.ascii	"R9R\013r\260"
 12871      72B0
 12872 007e 532F915C 		.ascii	"S/\221\\s\261"
 12872      73B1
 12873 0084 00000021 		.ascii	"\000\000\000!\000\000"
 12873      0000
 12874 008a 54345400 		.ascii	"T4T\000t\262"
 12874      74B2
 12875 0090 55350000 		.ascii	"U5\000\000u\000"
 12875      7500
 12876 0096 56360000 		.ascii	"V6\000\000v\000"
 12876      7600
 12877 009c 571C0000 		.ascii	"W\034\000\000w\000"
 12877      7700
ARM GAS  /tmp/ccczu93l.s 			page 349


 12878 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 12878      0000
 12879 00a8 58318D00 		.ascii	"X1\215\000x\255"
 12879      78AD
 12880 00ae 59325900 		.ascii	"Y2Y\000y\263"
 12880      79B3
 12881 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 12881      7AA5
 12882 00ba 2D282900 		.ascii	"-()\000\000\000"
 12882      0000
 12883 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 12883      0000
 12884 00c6 3A308720 		.ascii	":0\207 ;\247"
 12884      3BA7
 12885 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 12885      2EB6
 12886 00d2 3F002100 		.ascii	"?\000!\000?\000"
 12886      3F00
 12887 00d8 202B3D00 		.ascii	" +=\000  "
 12887      2020
 12888 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 12888      0000
 12889              		.section	.rodata.amap.9175,"a"
 12890              		.align	2
 12891              		.set	.LANCHOR10,. + 0
 12894              	amap.9175:
 12895 0000 04       		.byte	4
 12896 0001 000D00   		.ascii	"\000\015\000"
 12897 0004 05       		.byte	5
 12898 0005 000E09   		.ascii	"\000\016\011"
 12899 0008 08       		.byte	8
 12900 0009 00000F   		.ascii	"\000\000\017"
 12901 000c 1F       		.byte	31
 12902 000d 00000C   		.ascii	"\000\000\014"
 12903 0010 21       		.byte	33
 12904 0011 00000A   		.ascii	"\000\000\012"
 12905 0014 26       		.byte	38
 12906 0015 00000B   		.ascii	"\000\000\013"
 12907              		.section	.rodata.catalogue,"a"
 12908              		.align	2
 12911              	catalogue:
 12912 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 12912      C15F57E3 
 12912      D8A23B58 
 12912      16BC7D44 
 12912      71010974 
 12913 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 12913      4F569D21 
 12913      489136D5 
 12913      B6695A66 
 12913      4B0E6F17 
 12914 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 12914      69256099 
 12914      76599460 
 12914      1AC6ECC3 
 12914      6B5B144B 
 12915 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
ARM GAS  /tmp/ccczu93l.s 			page 350


 12915      023ED1A3 
 12915      0B0F28DB 
 12915      2611B30D 
 12915      57
 12916 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 12916      D0942DAE 
 12916      2B1B75FC 
 12916      A027AB82 
 12916      A89F
 12917 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 12917      BAAEEBCA 
 12917      D8A12AD9 
 12917      94919D
 12918 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
 12918      B05F1007 
 12918      15A26FD6 
 12918      D5A9A1
 12919              		.section	.rodata.catalogue_sizes.9449,"a"
 12920              		.align	2
 12921              		.set	.LANCHOR2,. + 0
 12924              	catalogue_sizes.9449:
 12925 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
 12925      363C437E 
 12925      25340E13 
 12925      0A09281A 
 12925      4C4C580E 
 12926              		.section	.rodata.catalogues.9457,"a"
 12927              		.align	2
 12928              		.set	.LANCHOR6,. + 0
 12931              	catalogues.9457:
 12932 0000 00000000 		.word	0
 12933 0004 00000000 		.word	catalogue
 12934 0008 00000000 		.word	cplx_catalogue
 12935 000c 00000000 		.word	stats_catalogue
 12936 0010 00000000 		.word	prob_catalogue
 12937 0014 00000000 		.word	int_catalogue
 12938 0018 00000000 		.word	prog_catalogue
 12939 001c 00000000 		.word	program_xfcn
 12940 0020 00000000 		.word	test_catalogue
 12941 0024 00000000 		.word	mode_catalogue
 12942 0028 00000000 		.word	alpha_catalogue
 12943 002c 00000000 		.word	alpha_symbols
 12944 0030 00000000 		.word	alpha_compares
 12945 0034 00000000 		.word	alpha_arrows
 12946 0038 00000000 		.word	alpha_letters
 12947 003c 00000000 		.word	alpha_subscripts
 12948 0040 00000000 		.word	0
 12949 0044 00000000 		.word	0
 12950 0048 00000000 		.word	0
 12951 004c 00000000 		.word	sums_catalogue
 12952 0050 00000000 		.word	matrix_catalogue
 12953              		.section	.rodata.cmap.9174,"a"
 12954              		.align	2
 12955              		.set	.LANCHOR11,. + 0
 12958              	cmap.9174:
 12959 0000 04       		.byte	4
 12960 0001 120012   		.ascii	"\022\000\022"
ARM GAS  /tmp/ccczu93l.s 			page 351


 12961 0004 05       		.byte	5
 12962 0005 090909   		.ascii	"\011\011\011"
 12963 0008 06       		.byte	6
 12964 0009 151515   		.ascii	"\025\025\025"
 12965 000c 0C       		.byte	12
 12966 000d 100011   		.ascii	"\020\000\021"
 12967 0010 19       		.byte	25
 12968 0011 040004   		.ascii	"\004\000\004"
 12969 0014 1A       		.byte	26
 12970 0015 030003   		.ascii	"\003\000\003"
 12971 0018 1B       		.byte	27
 12972 0019 130013   		.ascii	"\023\000\023"
 12973 001c 1C       		.byte	28
 12974 001d 140014   		.ascii	"\024\000\024"
 12975 0020 1E       		.byte	30
 12976 0021 171717   		.ascii	"\027\027\027"
 12977 0024 1F       		.byte	31
 12978 0025 080808   		.ascii	"\010\010\010"
 12979 0028 20       		.byte	32
 12980 0029 060606   		.ascii	"\006\006\006"
 12981 002c 21       		.byte	33
 12982 002d 010502   		.ascii	"\001\005\002"
 12983              		.section	.rodata.conv_catalogue,"a"
 12984              		.align	2
 12985              		.set	.LANCHOR5,. + 0
 12988              	conv_catalogue:
 12989 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 12989      2B2DDD37 
 12989      27393133 
 12989      111605DC 
 12989      DE19
 12990 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 12990      0D0F8D08 
 12990      8F0A2A2C 
 12990      47434517 
 12990      3F30
 12991 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 12991      02062622 
 12991      20282435 
 12991      2F012310 
 12991      0C0E2112 
 12992 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 12992      1E292E09 
 12992      36383E3A 
 12992      3C4025DF 
 12992      3D8B8E03 
 12993 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 12993      4A484642 
 12993      441F
 12994              		.section	.rodata.conv_mapping.9496,"a"
 12995              		.align	2
 12996              		.set	.LANCHOR8,. + 0
 12999              	conv_mapping.9496:
 13000 0000 8502     		.short	645
 13001 0002 8402     		.short	644
 13002 0004 8602     		.short	646
 13003 0006 8702     		.short	647
ARM GAS  /tmp/ccczu93l.s 			page 352


 13004 0008 8202     		.short	642
 13005 000a 8302     		.short	643
 13006 000c 3202     		.short	562
 13007 000e 3302     		.short	563
 13008 0010 3402     		.short	564
 13009 0012 3502     		.short	565
 13010 0014 3602     		.short	566
 13011 0016 3702     		.short	567
 13012              		.section	.rodata.cplx_catalogue,"a"
 13013              		.align	2
 13016              	cplx_catalogue:
 13017 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 13017      013BCEE1 
 13017      0DDA785F 
 13017      57DA6676 
 13017      66E7E5CF 
 13018 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
 13018      A2EB09B5 
 13018      F87500
 13019              		.section	.rodata.disp.9312,"a"
 13020              		.align	2
 13021              		.set	.LANCHOR15,. + 0
 13024              	disp.9312:
 13025 0000 03       		.byte	3
 13026 0001 02       		.byte	2
 13027 0002 05       		.byte	5
 13028 0003 04       		.byte	4
 13029              		.section	.rodata.int_catalogue,"a"
 13030              		.align	2
 13033              	int_catalogue:
 13034 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 13034      F53D9BE2 
 13034      59BD10AF 
 13034      6434F569 
 13034      D926A094 
 13035 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 13035      965C9946 
 13035      B1716ECC 
 13035      36B495BB 
 13035      6EF3DE
 13036 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 13036      A0FBBC6F 
 13036      2C3D840D 
 13036      4CA42DAE 
 13036      2B1B7AE0 
 13037 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
 13037      E6BAAEEB 
 13037      CAD8AB49 
 13037      100719
 13038 004a C7       		.ascii	"\307"
 13039              		.section	.rodata.linear_key_map.9145,"a"
 13040              		.align	2
 13041              		.set	.LANCHOR1,. + 0
 13044              	linear_key_map.9145:
 13045 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 13045      04050607 
 13045      08090A0B 
ARM GAS  /tmp/ccczu93l.s 			page 353


 13045      0C
 13046 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 13046      00111213 
 13046      14150016 
 13046      17
 13047 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 13047      1B1C1D1E 
 13047      1F002021 
 13047      22232425 
 13047      25252525 
 13048 002e 25       		.ascii	"%"
 13049              		.section	.rodata.linear_key_map.9149,"a"
 13050              		.align	2
 13051              		.set	.LANCHOR18,. + 0
 13054              	linear_key_map.9149:
 13055 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 13055      04050607 
 13055      08222222 
 13055      090A0B
 13056 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 13056      0F101112 
 13056      00131415 
 13056      16
 13057 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 13057      1A1B1C00 
 13057      1D1E1F20 
 13057      21222222 
 13058 002c 040522   		.ascii	"\004\005\""
 13059              		.section	.rodata.map.9161,"a"
 13060              		.align	2
 13061              		.set	.LANCHOR0,. + 0
 13064              	map.9161:
 13065 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 13065      FF7F7F7F 
 13065      6D6E6F6C 
 13065      FFFFFFFF 
 13066 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 13066      097F7FE7 
 13066      05067F7F 
 13066      E4
 13067 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\177"
 13067      00F07F7F 
 13067      7F
 13068              		.section	.rodata.matrix_catalogue,"a"
 13069              		.align	2
 13072              	matrix_catalogue:
 13073 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 13073      D835DC23 
 13073      6D856E58 
 13073      66E1C16E 
 13073      98A631C3 
 13074 0017 1C       		.ascii	"\034"
 13075              		.section	.rodata.mode_catalogue,"a"
 13076              		.align	2
 13079              	mode_catalogue:
 13080 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 13080      8BBEC663 
ARM GAS  /tmp/ccczu93l.s 			page 354


 13080      A8E91F88 
 13080      01FC7CB8 
 13081 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 13081      2449C26C 
 13081      62194932 
 13081      489A1930 
 13081      821083
 13082 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 13082      87320A63 
 13082      10C7324A 
 13082      7314C623 
 13082      8CE0E039 
 13083 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 13083      BB0F33C8 
 13083      99
 13084              		.section	.rodata.op_map.9228,"a"
 13085              		.align	2
 13086              		.set	.LANCHOR22,. + 0
 13089              	op_map.9228:
 13090 0000 1500     		.short	21
 13091 0002 0B02     		.short	523
 13092 0004 0003     		.short	768
 13093 0006 0A02     		.short	522
 13094 0008 1300     		.short	19
 13095 000a 1400     		.short	20
 13096 000c 0300     		.short	3
 13097 000e 0A00     		.short	10
 13098 0010 0701     		.short	263
 13099 0012 0000     		.short	0
 13100 0014 6531     		.short	12645
 13101 0016 0300     		.short	3
 13102 0018 0200     		.short	2
 13103 001a 0100     		.short	1
 13104 001c 4400     		.short	68
 13105 001e 0C00     		.short	12
 13106 0020 0D00     		.short	13
 13107 0022 0E00     		.short	14
 13108 0024 0403     		.short	772
 13109 0026 2F00     		.short	47
 13110 0028 0900     		.short	9
 13111 002a 0A00     		.short	10
 13112 002c 0B00     		.short	11
 13113 002e 0303     		.short	771
 13114 0030 2E00     		.short	46
 13115 0032 0600     		.short	6
 13116 0034 0700     		.short	7
 13117 0036 0800     		.short	8
 13118 0038 0203     		.short	770
 13119 003a 3300     		.short	51
 13120 003c 0500     		.short	5
 13121 003e 0400     		.short	4
 13122 0040 3B01     		.short	315
 13123 0042 0103     		.short	769
 13124 0044 0001     		.short	256
 13125              		.section	.rodata.op_map.9251,"a"
 13126              		.align	2
 13127              		.set	.LANCHOR19,. + 0
ARM GAS  /tmp/ccczu93l.s 			page 355


 13130              	op_map.9251:
 13131 0000 0100     		.short	1
 13132 0002 0000     		.short	0
 13133 0004 20F2     		.short	-3552
 13134 0006 23F2     		.short	-3549
 13135 0008 21F2     		.short	-3551
 13136 000a 24F2     		.short	-3548
 13137 000c 22F2     		.short	-3550
 13138 000e 25F2     		.short	-3547
 13139 0010 47F1     		.short	-3769
 13140 0012 46F1     		.short	-3770
 13141 0014 4E01     		.short	334
 13142 0016 4D01     		.short	333
 13143 0018 5C01     		.short	348
 13144 001a 35F1     		.short	-3787
 13145 001c 5B01     		.short	347
 13146 001e 36F1     		.short	-3786
 13147 0020 3301     		.short	307
 13148 0022 37F1     		.short	-3785
 13149 0024 3300     		.short	51
 13150 0026 0C01     		.short	268
 13151 0028 2B00     		.short	43
 13152 002a 2C00     		.short	44
 13153 002c 028B     		.short	-29950
 13154 002e 088B     		.short	-29944
 13155 0030 0A8B     		.short	-29942
 13156 0032 108B     		.short	-29936
 13157 0034 4301     		.short	323
 13158 0036 3D01     		.short	317
 13159 0038 0902     		.short	521
 13160 003a 0802     		.short	520
 13161 003c 1002     		.short	528
 13162 003e 0D02     		.short	525
 13163 0040 0F02     		.short	527
 13164 0042 0E02     		.short	526
 13165 0044 0003     		.short	768
 13166 0046 0803     		.short	776
 13167 0048 0BF2     		.short	-3573
 13168 004a 1603     		.short	790
 13169 004c 1203     		.short	786
 13170 004e 1303     		.short	787
 13171 0050 3DF2     		.short	-3523
 13172 0052 3EF2     		.short	-3522
 13173 0054 24F1     		.short	-3804
 13174 0056 1EF1     		.short	-3810
 13175 0058 75F2     		.short	-3467
 13176 005a 27F1     		.short	-3801
 13177 005c 0A02     		.short	522
 13178 005e 1602     		.short	534
 13179 0060 5100     		.short	81
 13180 0062 5200     		.short	82
 13181 0064 0000     		.short	0
 13182 0066 0100     		.short	1
 13183 0068 48F0     		.short	-4024
 13184 006a 4BF0     		.short	-4021
 13185 006c 47F0     		.short	-4025
 13186 006e 46F0     		.short	-4026
ARM GAS  /tmp/ccczu93l.s 			page 356


 13187 0070 77F2     		.short	-3465
 13188 0072 78F2     		.short	-3464
 13189 0074 3300     		.short	51
 13190 0076 3300     		.short	51
 13191 0078 0502     		.short	517
 13192 007a 0602     		.short	518
 13193 007c 0402     		.short	516
 13194 007e 0002     		.short	512
 13195 0080 4200     		.short	66
 13196 0082 3801     		.short	312
 13197 0084 3A00     		.short	58
 13198 0086 3B00     		.short	59
 13199 0088 0001     		.short	256
 13200 008a 0001     		.short	256
 13201              		.section	.rodata.op_map.9274,"a"
 13202              		.align	2
 13203              		.set	.LANCHOR21,. + 0
 13206              	op_map.9274:
 13207 0000 4C80     		.short	-32692
 13208 0002 4D80     		.short	-32691
 13209 0004 4E80     		.short	-32690
 13210 0006 4F80     		.short	-32689
 13211 0008 3300     		.short	51
 13212 000a 3300     		.short	51
 13213 000c 3300     		.short	51
 13214 000e 2180     		.short	-32735
 13215 0010 0801     		.short	264
 13216 0012 8780     		.short	-32633
 13217 0014 1180     		.short	-32751
 13218 0016 7C02     		.short	636
 13219 0018 5560     		.short	24661
 13220 001a 3F01     		.short	319
 13221 001c 4580     		.short	-32699
 13222 001e 1C03     		.short	796
 13223 0020 1D03     		.short	797
 13224 0022 1E03     		.short	798
 13225 0024 0603     		.short	774
 13226 0026 2F02     		.short	559
 13227 0028 3300     		.short	51
 13228 002a 3300     		.short	51
 13229 002c 3300     		.short	51
 13230 002e 3300     		.short	51
 13231 0030 3300     		.short	51
 13232 0032 3300     		.short	51
 13233 0034 3300     		.short	51
 13234 0036 3300     		.short	51
 13235 0038 1640     		.short	16406
 13236 003a 0201     		.short	258
 13237 003c 6D80     		.short	-32659
 13238 003e 5001     		.short	336
 13239 0040 3300     		.short	51
 13240 0042 1540     		.short	16405
 13241 0044 0001     		.short	256
 13242              		.section	.rodata.op_map.9284,"a"
 13243              		.align	2
 13244              		.set	.LANCHOR17,. + 0
 13247              	op_map.9284:
ARM GAS  /tmp/ccczu93l.s 			page 357


 13248 0000 0100     		.short	1
 13249 0002 0100     		.short	1
 13250 0004 0000     		.short	0
 13251 0006 0000     		.short	0
 13252 0008 0B05     		.short	1291
 13253 000a 2005     		.short	1312
 13254 000c 2305     		.short	1315
 13255 000e 3300     		.short	51
 13256 0010 0006     		.short	1536
 13257 0012 2105     		.short	1313
 13258 0014 2405     		.short	1316
 13259 0016 3300     		.short	51
 13260 0018 0A05     		.short	1290
 13261 001a 2205     		.short	1314
 13262 001c 2505     		.short	1317
 13263 001e 3300     		.short	51
 13264 0020 3300     		.short	51
 13265 0022 4701     		.short	327
 13266 0024 4601     		.short	326
 13267 0026 3300     		.short	51
 13268 0028 3300     		.short	51
 13269 002a 3300     		.short	51
 13270 002c 3300     		.short	51
 13271 002e 3300     		.short	51
 13272 0030 15FF     		.short	-235
 13273 0032 3300     		.short	51
 13274 0034 3300     		.short	51
 13275 0036 3300     		.short	51
 13276 0038 1AFF     		.short	-230
 13277 003a 3300     		.short	51
 13278 003c 3300     		.short	51
 13279 003e 8CFF     		.short	-116
 13280 0040 0901     		.short	265
 13281 0042 3300     		.short	51
 13282 0044 3300     		.short	51
 13283 0046 0A01     		.short	266
 13284 0048 0B01     		.short	267
 13285 004a 3300     		.short	51
 13286 004c 0D01     		.short	269
 13287 004e 0D01     		.short	269
 13288 0050 663F     		.short	16230
 13289 0052 3300     		.short	51
 13290 0054 3300     		.short	51
 13291 0056 1FFF     		.short	-225
 13292 0058 3805     		.short	1336
 13293 005a 3300     		.short	51
 13294 005c 3300     		.short	51
 13295 005e 3905     		.short	1337
 13296 0060 5521     		.short	8533
 13297 0062 3300     		.short	51
 13298 0064 3300     		.short	51
 13299 0066 5521     		.short	8533
 13300 0068 3300     		.short	51
 13301 006a 3300     		.short	51
 13302 006c 3300     		.short	51
 13303 006e 3300     		.short	51
 13304 0070 3300     		.short	51
ARM GAS  /tmp/ccczu93l.s 			page 358


 13305 0072 0905     		.short	1289
 13306 0074 0805     		.short	1288
 13307 0076 3300     		.short	51
 13308 0078 07A8     		.short	-22521
 13309 007a 1005     		.short	1296
 13310 007c 0D05     		.short	1293
 13311 007e 3300     		.short	51
 13312 0080 08A8     		.short	-22520
 13313 0082 0F05     		.short	1295
 13314 0084 0E05     		.short	1294
 13315 0086 3300     		.short	51
 13316 0088 09A8     		.short	-22519
 13317 008a 0006     		.short	1536
 13318 008c 0806     		.short	1544
 13319 008e 3300     		.short	51
 13320 0090 0406     		.short	1540
 13321 0092 0B05     		.short	1291
 13322 0094 1606     		.short	1558
 13323 0096 3300     		.short	51
 13324 0098 3300     		.short	51
 13325 009a 1206     		.short	1554
 13326 009c 1306     		.short	1555
 13327 009e 2F05     		.short	1327
 13328 00a0 04A8     		.short	-22524
 13329 00a2 3300     		.short	51
 13330 00a4 3300     		.short	51
 13331 00a6 3300     		.short	51
 13332 00a8 05A8     		.short	-22523
 13333 00aa 3300     		.short	51
 13334 00ac 3300     		.short	51
 13335 00ae 3300     		.short	51
 13336 00b0 06A8     		.short	-22522
 13337 00b2 3300     		.short	51
 13338 00b4 3300     		.short	51
 13339 00b6 3300     		.short	51
 13340 00b8 0306     		.short	1539
 13341 00ba 0A05     		.short	1290
 13342 00bc 1605     		.short	1302
 13343 00be 1605     		.short	1302
 13344 00c0 3300     		.short	51
 13345 00c2 3300     		.short	51
 13346 00c4 3300     		.short	51
 13347 00c6 3300     		.short	51
 13348 00c8 01A8     		.short	-22527
 13349 00ca 0000     		.short	0
 13350 00cc 0100     		.short	1
 13351 00ce 3300     		.short	51
 13352 00d0 02A8     		.short	-22526
 13353 00d2 3300     		.short	51
 13354 00d4 3300     		.short	51
 13355 00d6 3300     		.short	51
 13356 00d8 03A8     		.short	-22525
 13357 00da 3300     		.short	51
 13358 00dc 3300     		.short	51
 13359 00de 3300     		.short	51
 13360 00e0 0206     		.short	1538
 13361 00e2 3300     		.short	51
ARM GAS  /tmp/ccczu93l.s 			page 359


 13362 00e4 3300     		.short	51
 13363 00e6 3300     		.short	51
 13364 00e8 3300     		.short	51
 13365 00ea 3300     		.short	51
 13366 00ec 3300     		.short	51
 13367 00ee 0201     		.short	258
 13368 00f0 00A8     		.short	-22528
 13369 00f2 0505     		.short	1285
 13370 00f4 0605     		.short	1286
 13371 00f6 3300     		.short	51
 13372 00f8 B801     		.short	440
 13373 00fa 0405     		.short	1284
 13374 00fc 0005     		.short	1280
 13375 00fe 3300     		.short	51
 13376 0100 3300     		.short	51
 13377 0102 3300     		.short	51
 13378 0104 3300     		.short	51
 13379 0106 3300     		.short	51
 13380 0108 0106     		.short	1537
 13381 010a 3300     		.short	51
 13382 010c 3300     		.short	51
 13383 010e 3300     		.short	51
 13384 0110 0001     		.short	256
 13385 0112 0001     		.short	256
 13386 0114 0001     		.short	256
 13387 0116 0001     		.short	256
 13388              		.section	.rodata.op_map.9296,"a"
 13389              		.align	2
 13390              		.set	.LANCHOR13,. + 0
 13393              	op_map.9296:
 13394 0000 2A27     		.ascii	"*'"
 13395 0002 2B28     		.ascii	"+("
 13396 0004 2C29     		.ascii	",)"
 13397              		.section	.rodata.op_map.9311,"a"
 13398              		.align	2
 13399              		.set	.LANCHOR14,. + 0
 13402              	op_map.9311:
 13403 0000 1A02     		.short	538
 13404 0002 7B02     		.short	635
 13405 0004 1B02     		.short	539
 13406 0006 7A02     		.short	634
 13407 0008 1C02     		.short	540
 13408 000a 3300     		.short	51
 13409              		.section	.rodata.op_map2.9252,"a"
 13410              		.align	2
 13411              		.set	.LANCHOR20,. + 0
 13414              	op_map2.9252:
 13415 0000 3300     		.short	51
 13416 0002 3300     		.short	51
 13417 0004 0003     		.short	768
 13418 0006 0A02     		.short	522
 13419              		.section	.rodata.opcode_breaks,"a"
 13420              		.align	2
 13421              		.set	.LANCHOR7,. + 0
 13424              	opcode_breaks:
 13425 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 13425      0C992F
ARM GAS  /tmp/ccczu93l.s 			page 360


 13426              		.section	.rodata.prob_catalogue,"a"
 13427              		.align	2
 13430              	prob_catalogue:
 13431 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 13431      44561575 
 13431      9D595013 
 13431      F57D414E 
 13431      55D4E93B 
 13432 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 13432      15955355 
 13432      55459956 
 13432      53D4E591 
 13432      50525485 
 13433 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 13433      85474D95 
 13433      C4DD384F 
 13433      53C5793E 
 13433      569304D1 
 13434 0043 B0       		.ascii	"\260"
 13435              		.section	.rodata.prog_catalogue,"a"
 13436              		.align	2
 13439              	prog_catalogue:
 13440 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 13440      791D4781 
 13440      C8742A31 
 13440      9B4042B3 
 13440      2CE1BA92 
 13441 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
 13441      DA332D1B 
 13441      36CFC28E 
 13441      2390E738 
 13441      CE8C
 13442 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 13442      B0D0DC39 
 13442      47039B09 
 13442      ACCDF1D8 
 13442      CD
 13443 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 13443      B22C0E1B 
 13443      18D20DEB 
 13443      2302A4
 13444 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 13444      CBA8AA3C 
 13444      00AE2B6F 
 13444      FC58
 13445              		.section	.rodata.program_xfcn,"a"
 13446              		.align	2
 13449              	program_xfcn:
 13450 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 13450      F33057D5 
 13450      FAF53D8A 
 13450      23B5816B 
 13450      DBE259BD 
 13451 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 13451      425D12E4 
 13451      BD8341AF 
 13451      6434F569 
ARM GAS  /tmp/ccczu93l.s 			page 361


 13451      D21489
 13452 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
 13452      95A664B0 
 13452      E6F1756A 
 13452      0946D105 
 13452      7019A4
 13453 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 13453      A65D965C 
 13453      994601AC 
 13453      5C5BB30D 
 13453      AD
 13454 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 13454      95BB6EF3 
 13454      DEEEBC30 
 13454      5BD301C0 
 13454      8683
 13455 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 13455      2BCB0F28 
 13455      DB2611B3 
 13455      0D573329 
 13455      0841D0
 13456 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 13456      1B75FCA0 
 13456      27AB82A8 
 13456      9FADEB5A 
 13456      E6
 13457 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
 13457      D8A12AD9 
 13457      94919D67 
 13457      99B671
 13458 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 13458      19C5689B 
 13458      F5B56A68 
 13458      5C70
 13459              		.section	.rodata.smap.9176,"a"
 13460              		.align	2
 13461              		.set	.LANCHOR16,. + 0
 13464              	smap.9176:
 13465 0000 00010002 		.ascii	"\000\001\000\002"
 13466              		.section	.rodata.stats_catalogue,"a"
 13467              		.align	2
 13470              	stats_catalogue:
 13471 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 13471      5D17C971 
 13471      58611685 
 13471      95A05417 
 13471      85
 13472 0011 514C575A 		.ascii	"QLWZ\200"
 13472      80
 13473              		.section	.rodata.sums_catalogue,"a"
 13474              		.align	2
 13477              	sums_catalogue:
 13478 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 13478      4A1384C1 
 13478      20451104 
 13478      F11C4911 
 13478      8500
ARM GAS  /tmp/ccczu93l.s 			page 362


 13479              		.section	.rodata.test_catalogue,"a"
 13480              		.align	2
 13483              	test_catalogue:
 13484 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 13484      EB2FCBDB 
 13484      96E9BAEE 
 13484      A2F2E4B9 
 13485 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 13485      2EEFEB4C 
 13485      9D368B82 
 13485      F8BA350B 
 13486 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 13486      2C1354D6 
 13486      AFEC3B08 
 13486      B73C40
 13487              		.text
 13488              	.Letext0:
 13489              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 13490              		.file 3 "dmcp/dmcp.h"
 13491              		.file 4 "src/decNumber/decContext.h"
 13492              		.file 5 "src/decNumber/decNumber.h"
 13493              		.file 6 "src/decNumber/decimal64.h"
 13494              		.file 7 "src/decNumber/decimal128.h"
 13495              		.file 8 "src/xeq.h"
 13496              		.file 9 "src/data.h"
 13497              		.file 10 "src/keys.h"
 13498              		.file 11 "src/display.h"
 13499              		.file 12 "src/consts.h"
 13500              		.file 13 "src/storage.h"
 13501              		.file 14 "src/stats.h"
 13502              		.file 15 "src/catalogues.h"
 13503              		.file 16 "src/lcd.h"
 13504              		.file 17 "src/int.h"
ARM GAS  /tmp/ccczu93l.s 			page 363


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccczu93l.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccczu93l.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccczu93l.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccczu93l.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccczu93l.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccczu93l.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccczu93l.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccczu93l.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccczu93l.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccczu93l.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccczu93l.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccczu93l.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccczu93l.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccczu93l.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccczu93l.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccczu93l.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccczu93l.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccczu93l.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccczu93l.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccczu93l.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccczu93l.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccczu93l.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccczu93l.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccczu93l.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/ccczu93l.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccczu93l.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/ccczu93l.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/ccczu93l.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccczu93l.s:1094   .text.arg_eval:0000000000000074 $d
     /tmp/ccczu93l.s:1101   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccczu93l.s:1108   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccczu93l.s:1166   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccczu93l.s:1171   .text.arg_digit:0000000000000000 $t
     /tmp/ccczu93l.s:1178   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccczu93l.s:1403   .text.arg_digit:00000000000000c8 $d
     /tmp/ccczu93l.s:1411   .text.intltr:0000000000000000 $t
     /tmp/ccczu93l.s:1418   .text.intltr:0000000000000000 intltr
     /tmp/ccczu93l.s:1481   .text.intltr:0000000000000030 $d
     /tmp/ccczu93l.s:1487   .text.set_window:0000000000000000 $t
     /tmp/ccczu93l.s:1494   .text.set_window:0000000000000000 set_window
     /tmp/ccczu93l.s:1641   .text.set_window:000000000000008c $d
     /tmp/ccczu93l.s:1648   .text.arg_storcl:0000000000000000 $t
     /tmp/ccczu93l.s:1655   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccczu93l.s:1771   .text.arg_storcl:0000000000000040 $d
     /tmp/ccczu93l.s:1776   .text.process_arg:0000000000000000 $t
     /tmp/ccczu93l.s:1783   .text.process_arg:0000000000000000 process_arg
     /tmp/ccczu93l.s:1993   .text.process_arg:0000000000000092 $d
     /tmp/ccczu93l.s:2040   .text.process_arg:00000000000000ee $t
     /tmp/ccczu93l.s:2071   .text.process_arg:0000000000000114 $d
     /tmp/ccczu93l.s:2525   .text.process_arg:00000000000002ac $d
     /tmp/ccczu93l.s:2537   .text.process_arg:00000000000002c0 $t
     /tmp/ccczu93l.s:2956   .text.process_arg:0000000000000468 $d
     /tmp/ccczu93l.s:2961   .text.cur_shift:0000000000000000 $t
     /tmp/ccczu93l.s:2969   .text.cur_shift:0000000000000000 cur_shift
ARM GAS  /tmp/ccczu93l.s 			page 364


     /tmp/ccczu93l.s:2997   .text.cur_shift:0000000000000010 $d
     /tmp/ccczu93l.s:3002   .text.reset_shift:0000000000000000 $t
     /tmp/ccczu93l.s:3010   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccczu93l.s:3068   .text.reset_shift:0000000000000014 $d
     /tmp/ccczu93l.s:3073   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccczu93l.s:3081   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccczu93l.s:3109   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccczu93l.s:3114   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccczu93l.s:3122   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccczu93l.s:3180   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccczu93l.s:3185   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccczu93l.s:3193   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccczu93l.s:3229   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccczu93l.s:3235   .text.init_state:0000000000000000 $t
     /tmp/ccczu93l.s:3243   .text.init_state:0000000000000000 init_state
     /tmp/ccczu93l.s:3349   .text.init_state:000000000000005c $d
     /tmp/ccczu93l.s:3355   .text.soft_init_state:0000000000000000 $t
     /tmp/ccczu93l.s:3363   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccczu93l.s:3458   .text.soft_init_state:0000000000000048 $d
     /tmp/ccczu93l.s:3464   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccczu93l.s:3472   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccczu93l.s:3493   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccczu93l.s:3499   .text.current_catalogue:0000000000000000 $t
     /tmp/ccczu93l.s:3507   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccczu93l.s:3763   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccczu93l.s:3773   .text.process_catalogue:0000000000000000 $t
     /tmp/ccczu93l.s:3780   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccczu93l.s:4109   .text.process_catalogue:00000000000000fe $d
     /tmp/ccczu93l.s:4141   .text.process_catalogue:000000000000011e $t
     /tmp/ccczu93l.s:4649   .text.process_catalogue:00000000000002dc $d
     /tmp/ccczu93l.s:4670   .text.process_catalogue:00000000000002fc $t
     /tmp/ccczu93l.s:4700   .text.find_pos:0000000000000000 $t
     /tmp/ccczu93l.s:4708   .text.find_pos:0000000000000000 find_pos
     /tmp/ccczu93l.s:4881   .text.find_pos:0000000000000080 $d
     /tmp/ccczu93l.s:4887   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccczu93l.s:4895   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccczu93l.s:4927   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccczu93l.s:4933   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccczu93l.s:4943   .text.process_keycode:0000000000000000 $t
     /tmp/ccczu93l.s:4951   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccczu93l.s:5463   .text.process_keycode:0000000000000258 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccczu93l.s:5482   .text.process_keycode:0000000000000298 $t
     /tmp/ccczu93l.s:5599   .text.process_keycode:0000000000000312 $d
     /tmp/ccczu93l.s:5646   .text.process_keycode:000000000000036e $t
     /tmp/ccczu93l.s:5854   .text.process_keycode:0000000000000448 $d
     /tmp/ccczu93l.s:5864   .text.process_keycode:000000000000046c $t
     /tmp/ccczu93l.s:6168   .text.process_keycode:00000000000005b0 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccczu93l.s:6186   .text.process_keycode:00000000000005ec $t
     /tmp/ccczu93l.s:6318   .text.process_keycode:0000000000000686 $d
     /tmp/ccczu93l.s:6348   .text.process_keycode:00000000000006a8 $d
     /tmp/ccczu93l.s:6391   .text.process_keycode:0000000000000754 $t
     /tmp/ccczu93l.s:6659   .text.process_keycode:0000000000000850 $d
ARM GAS  /tmp/ccczu93l.s 			page 365


     /tmp/ccczu93l.s:6668   .text.process_keycode:0000000000000874 $t
     /tmp/ccczu93l.s:6758   .text.process_keycode:00000000000008c8 $d
     /tmp/ccczu93l.s:6777   .text.process_keycode:00000000000008ec $t
     /tmp/ccczu93l.s:6785   .text.process_keycode:00000000000008fa $d
     /tmp/ccczu93l.s:6811   .text.process_keycode:0000000000000914 $t
     /tmp/ccczu93l.s:6860   .text.process_keycode:0000000000000954 $d
     /tmp/ccczu93l.s:6864   .text.process_keycode:0000000000000964 $t
     /tmp/ccczu93l.s:7926   .text.process_keycode:0000000000000d18 $d
     /tmp/ccczu93l.s:7943   .text.process_keycode:0000000000000d38 $t
     /tmp/ccczu93l.s:8520   .text.process_keycode:0000000000000f28 $d
     /tmp/ccczu93l.s:8932   .text.process_keycode:0000000000001098 $d
     /tmp/ccczu93l.s:8945   .text.process_keycode:00000000000010b8 $t
     /tmp/ccczu93l.s:8957   .text.process_keycode:00000000000010d8 $d
     /tmp/ccczu93l.s:8977   .text.process_keycode:0000000000001128 $t
     /tmp/ccczu93l.s:9176   .text.process_keycode:00000000000011c2 $d
     /tmp/ccczu93l.s:9194   .text.process_keycode:00000000000011d4 $t
     /tmp/ccczu93l.s:9690   .text.process_keycode:0000000000001378 $d
     /tmp/ccczu93l.s:9724   .text.process_keycode:00000000000013bc $t
     /tmp/ccczu93l.s:9929   .text.process_keycode:0000000000001458 $d
     /tmp/ccczu93l.s:9944   .text.process_keycode:0000000000001470 $t
     /tmp/ccczu93l.s:10022  .text.process_keycode:00000000000014b4 $d
     /tmp/ccczu93l.s:10057  .text.process_keycode:000000000000153c $t
     /tmp/ccczu93l.s:10374  .text.process_keycode:000000000000161a $d
     /tmp/ccczu93l.s:10661  .text.process_keycode:0000000000001768 $d
     /tmp/ccczu93l.s:10672  .text.process_keycode:0000000000001788 $t
     /tmp/ccczu93l.s:11046  .text.process_keycode:0000000000001924 $d
     /tmp/ccczu93l.s:11088  .text.process_keycode:00000000000019c8 $t
     /tmp/ccczu93l.s:11664  .text.process_keycode:0000000000001bf8 $d
     /tmp/ccczu93l.s:11675  .text.process_keycode:0000000000001c08 $t
     /tmp/ccczu93l.s:12543  .text.process_keycode:0000000000001f7c $d
     /tmp/ccczu93l.s:12554  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccczu93l.s:12562  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccczu93l.s:12770  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/ccczu93l.s:12787  .bss.was_paused.9651:0000000000000000 $d
     /tmp/ccczu93l.s:12791  .bss.was_paused.9651:0000000000000000 was_paused.9651
     /tmp/ccczu93l.s:12794  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccczu93l.s:12797  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccczu93l.s:12800  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:12803  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccczu93l.s:12807  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccczu93l.s:12810  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccczu93l.s:12813  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccczu93l.s:12817  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccczu93l.s:12823  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccczu93l.s:12827  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccczu93l.s:12833  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccczu93l.s:12836  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccczu93l.s:12840  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccczu93l.s:12843  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccczu93l.s:12846  .rodata.alphamap.9184:0000000000000000 $d
     /tmp/ccczu93l.s:12850  .rodata.alphamap.9184:0000000000000000 alphamap.9184
     /tmp/ccczu93l.s:12890  .rodata.amap.9175:0000000000000000 $d
     /tmp/ccczu93l.s:12894  .rodata.amap.9175:0000000000000000 amap.9175
     /tmp/ccczu93l.s:12908  .rodata.catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:12911  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccczu93l.s:12920  .rodata.catalogue_sizes.9449:0000000000000000 $d
     /tmp/ccczu93l.s:12924  .rodata.catalogue_sizes.9449:0000000000000000 catalogue_sizes.9449
ARM GAS  /tmp/ccczu93l.s 			page 366


     /tmp/ccczu93l.s:12927  .rodata.catalogues.9457:0000000000000000 $d
     /tmp/ccczu93l.s:12931  .rodata.catalogues.9457:0000000000000000 catalogues.9457
     /tmp/ccczu93l.s:13016  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccczu93l.s:13470  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccczu93l.s:13430  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccczu93l.s:13033  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccczu93l.s:13439  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccczu93l.s:13449  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccczu93l.s:13483  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccczu93l.s:13079  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccczu93l.s:13477  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccczu93l.s:13072  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccczu93l.s:12954  .rodata.cmap.9174:0000000000000000 $d
     /tmp/ccczu93l.s:12958  .rodata.cmap.9174:0000000000000000 cmap.9174
     /tmp/ccczu93l.s:12984  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:12988  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccczu93l.s:12995  .rodata.conv_mapping.9496:0000000000000000 $d
     /tmp/ccczu93l.s:12999  .rodata.conv_mapping.9496:0000000000000000 conv_mapping.9496
     /tmp/ccczu93l.s:13013  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:13020  .rodata.disp.9312:0000000000000000 $d
     /tmp/ccczu93l.s:13024  .rodata.disp.9312:0000000000000000 disp.9312
     /tmp/ccczu93l.s:13030  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:13040  .rodata.linear_key_map.9145:0000000000000000 $d
     /tmp/ccczu93l.s:13044  .rodata.linear_key_map.9145:0000000000000000 linear_key_map.9145
     /tmp/ccczu93l.s:13050  .rodata.linear_key_map.9149:0000000000000000 $d
     /tmp/ccczu93l.s:13054  .rodata.linear_key_map.9149:0000000000000000 linear_key_map.9149
     /tmp/ccczu93l.s:13060  .rodata.map.9161:0000000000000000 $d
     /tmp/ccczu93l.s:13064  .rodata.map.9161:0000000000000000 map.9161
     /tmp/ccczu93l.s:13069  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:13076  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:13085  .rodata.op_map.9228:0000000000000000 $d
     /tmp/ccczu93l.s:13089  .rodata.op_map.9228:0000000000000000 op_map.9228
     /tmp/ccczu93l.s:13126  .rodata.op_map.9251:0000000000000000 $d
     /tmp/ccczu93l.s:13130  .rodata.op_map.9251:0000000000000000 op_map.9251
     /tmp/ccczu93l.s:13202  .rodata.op_map.9274:0000000000000000 $d
     /tmp/ccczu93l.s:13206  .rodata.op_map.9274:0000000000000000 op_map.9274
     /tmp/ccczu93l.s:13243  .rodata.op_map.9284:0000000000000000 $d
     /tmp/ccczu93l.s:13247  .rodata.op_map.9284:0000000000000000 op_map.9284
     /tmp/ccczu93l.s:13389  .rodata.op_map.9296:0000000000000000 $d
     /tmp/ccczu93l.s:13393  .rodata.op_map.9296:0000000000000000 op_map.9296
     /tmp/ccczu93l.s:13398  .rodata.op_map.9311:0000000000000000 $d
     /tmp/ccczu93l.s:13402  .rodata.op_map.9311:0000000000000000 op_map.9311
     /tmp/ccczu93l.s:13410  .rodata.op_map2.9252:0000000000000000 $d
     /tmp/ccczu93l.s:13414  .rodata.op_map2.9252:0000000000000000 op_map2.9252
     /tmp/ccczu93l.s:13420  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccczu93l.s:13424  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccczu93l.s:13427  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:13436  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:13446  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccczu93l.s:13460  .rodata.smap.9176:0000000000000000 $d
     /tmp/ccczu93l.s:13464  .rodata.smap.9176:0000000000000000 smap.9176
     /tmp/ccczu93l.s:13467  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:13474  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:13480  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccczu93l.s:2075   .text.process_arg:0000000000000117 $d
     /tmp/ccczu93l.s:2075   .text.process_arg:0000000000000118 $t
     /tmp/ccczu93l.s:6337   .text.process_keycode:0000000000000699 $d
ARM GAS  /tmp/ccczu93l.s 			page 367


     /tmp/ccczu93l.s:6337   .text.process_keycode:000000000000069a $t
     /tmp/ccczu93l.s:8555   .text.process_keycode:0000000000000f4b $d
     /tmp/ccczu93l.s:8555   .text.process_keycode:0000000000000f4c $t
     /tmp/ccczu93l.s:10415  .text.process_keycode:0000000000001643 $d
     /tmp/ccczu93l.s:10415  .text.process_keycode:0000000000001644 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
local_regs_rarg
num_arg_digits
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
is_key_pressed
set_pc
set_running_off
xeq_sst_bst
stoprog
clr_dot
finish_RPN
message
find_char
delprog
prt
ARM GAS  /tmp/ccczu93l.s 			page 368


scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
display_current_menu
find_user_pc
cmdgtocommon
global_regs
local_regs
set_menu
alen

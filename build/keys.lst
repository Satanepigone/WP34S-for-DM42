ARM GAS  /tmp/cceb4mPP.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/cceb4mPP.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** /*
  82:src/keys.c    ****  *  Return the shift state
  83:src/keys.c    ****  */
  84:src/keys.c    **** enum shifts cur_shift(void) {
  85:src/keys.c    **** 	enum shifts s = shift_down();
  86:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/cceb4mPP.s 			page 3


  87:src/keys.c    **** }
  88:src/keys.c    **** 
  89:src/keys.c    **** /*
  90:src/keys.c    ****  *  Set new shift state, return previous state
  91:src/keys.c    ****  */
  92:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  93:src/keys.c    **** 	enum shifts r = cur_shift();
  94:src/keys.c    **** 	State2.shifts = shift;
  95:src/keys.c    **** 	State2.alpha_pos = 0;
  96:src/keys.c    **** 	return r;
  97:src/keys.c    **** }
  98:src/keys.c    **** 
  99:src/keys.c    **** /*
 100:src/keys.c    ****  *  Clear shift state and return previous state
 101:src/keys.c    ****  */
 102:src/keys.c    **** enum shifts reset_shift(void) {
 103:src/keys.c    **** 	return set_shift(SHIFT_N);
 104:src/keys.c    **** }
 105:src/keys.c    **** 
 106:src/keys.c    **** /*
 107:src/keys.c    ****  *  Toggle shift state
 108:src/keys.c    ****  */
 109:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 110:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 111:src/keys.c    **** }
 112:src/keys.c    **** 
 113:src/keys.c    **** 
 114:src/keys.c    **** /*
 115:src/keys.c    ****  * Mapping from the key code to a linear index
 116:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 117:src/keys.c    ****  */
 118:src/keys.c    **** #ifdef DM42
 119:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 120:src/keys.c    **** {
 121:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 122:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 123:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 124:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 125:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 126:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 127:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 128:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 129:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 130:src/keys.c    **** 	};
 131:src/keys.c    **** 	return linear_key_map[c];
 132:src/keys.c    **** }
 133:src/keys.c    **** 
 134:src/keys.c    **** static int keycode_to_linear(const keycode c)
 135:src/keys.c    **** {
 136:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 137:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 138:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 139:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 140:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 141:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 142:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 143:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
ARM GAS  /tmp/cceb4mPP.s 			page 4


 144:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 145:src/keys.c    **** 	};
 146:src/keys.c    **** 	return linear_key_map[c];
 147:src/keys.c    **** }
 148:src/keys.c    **** #else
 149:src/keys.c    **** static int keycode_to_linear(const keycode c)
 150:src/keys.c    **** {
 151:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 152:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 153:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 154:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 155:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 156:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 157:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 158:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 159:src/keys.c    **** 	};
 160:src/keys.c    **** 	return linear_key_map[c];
 161:src/keys.c    **** }
 162:src/keys.c    **** #endif
 163:src/keys.c    **** /*
 164:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 165:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 166:src/keys.c    ****  */
 167:src/keys.c    **** int keycode_to_row_column(const int c)
 168:src/keys.c    **** {
 169:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 170:src/keys.c    **** }
 171:src/keys.c    **** 
 172:src/keys.c    **** /*
 173:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 174:src/keys.c    ****  * Used in PUTK and KTYPE.
 175:src/keys.c    ****  */
 176:src/keys.c    **** 
 177:src/keys.c    **** int row_column_to_keycode(const int c)
 178:src/keys.c    **** {
 179:src/keys.c    **** 	int row = c / 10 - 1;
 180:src/keys.c    **** 	int col = c % 10 - 1;
 181:src/keys.c    **** 
 182:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 183:src/keys.c    **** 		return -1;
 184:src/keys.c    **** 	return row * 6 + col;
 185:src/keys.c    **** }
 186:src/keys.c    **** 
 187:src/keys.c    **** /*
 188:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 189:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 190:src/keys.c    ****  */
 191:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 192:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 193:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 194:src/keys.c    **** 
 195:src/keys.c    **** #define NO_REG 0x7f
 196:src/keys.c    **** #define NO_SHORT 0x80
 197:src/keys.c    **** #ifdef DM42
 198:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 199:src/keys.c    **** {
 200:src/keys.c    ****   static const unsigned char map[] = {
ARM GAS  /tmp/cceb4mPP.s 			page 5


 201:src/keys.c    ****     // K00 - K05
 202:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 203:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 204:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 205:src/keys.c    ****     // K10 - K15
 206:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 207:src/keys.c    ****     // K20 - K24
 208:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 209:src/keys.c    ****     // K30 - K34
 210:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 211:src/keys.c    ****     // K40 - K44
 212:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 213:src/keys.c    ****     // K50 - K54
 214:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 215:src/keys.c    ****     // K60 - K64
 216:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 217:src/keys.c    ****     // Shifts
 218:src/keys.c    ****     NO_REG
 219:src/keys.c    ****   };
 220:src/keys.c    **** 
 221:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 222:src/keys.c    **** }
 223:src/keys.c    **** #else
 224:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 225:src/keys.c    **** {
 226:src/keys.c    ****   static const unsigned char map[] = {
 227:src/keys.c    **** 		// K00 - K05
 228:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 229:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 230:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 231:src/keys.c    **** 		// K10 - K12
 232:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 233:src/keys.c    **** 		// K20 - K24
 234:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 235:src/keys.c    **** 		// K30 - K34
 236:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 237:src/keys.c    **** 		// K40 - K44
 238:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 239:src/keys.c    **** 		// K50 - K54
 240:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 241:src/keys.c    **** 		// K60 - K63
 242:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 243:src/keys.c    **** 		regY_idx, regZ_idx,
 244:src/keys.c    **** 		// Shifts, etc
 245:src/keys.c    **** 		NO_REG
 246:src/keys.c    **** 	};
 247:src/keys.c    **** 
 248:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 249:src/keys.c    **** }
 250:src/keys.c    **** #endif
 251:src/keys.c    **** /*
 252:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 253:src/keys.c    ****  */
 254:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 255:src/keys.c    **** {
 256:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 257:src/keys.c    ****   int i, col, max;
ARM GAS  /tmp/cceb4mPP.s 			page 6


 258:src/keys.c    ****   const struct _map {
 259:src/keys.c    ****     unsigned char key, cat[3];
 260:src/keys.c    ****   } *cp;
 261:src/keys.c    **** 
 262:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 263:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 264:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 265:src/keys.c    **** 
 266:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 267:src/keys.c    ****     /*
 268:src/keys.c    ****      *  Normal processing - Not alpha mode
 269:src/keys.c    ****      */
 270:src/keys.c    ****     static const struct _map cmap[] = {
 271:src/keys.c    **** #ifdef DM42
 272:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 273:src/keys.c    **** #else
 274:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 275:src/keys.c    **** #endif
 276:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 277:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 278:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 279:src/keys.c    **** #else
 280:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 281:src/keys.c    **** #endif
 282:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 283:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 284:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 285:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 286:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 287:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 288:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 289:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 290:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 291:src/keys.c    **** #else
 292:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 293:src/keys.c    **** #endif
 294:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 295:src/keys.c    ****     };
 296:src/keys.c    **** 
 297:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 298:src/keys.c    ****       /*
 299:src/keys.c    ****        *  SHOW starts register browser
 300:src/keys.c    ****        */
 301:src/keys.c    ****       return CATALOGUE_REGISTERS;
 302:src/keys.c    ****     }
 303:src/keys.c    **** #if 0
 304:src/keys.c    ****     // conflicts with c# 002 and c# 003
 305:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 306:src/keys.c    ****       /*
 307:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 308:src/keys.c    ****        */
 309:src/keys.c    ****       shift = SHIFT_H;
 310:src/keys.c    ****     }
 311:src/keys.c    **** #endif
 312:src/keys.c    ****     if (shift != SHIFT_H) {
 313:src/keys.c    ****       /*
 314:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
ARM GAS  /tmp/cceb4mPP.s 			page 7


 315:src/keys.c    ****        */
 316:src/keys.c    ****       return CATALOGUE_NONE;
 317:src/keys.c    ****     }
 318:src/keys.c    **** 
 319:src/keys.c    ****     /*
 320:src/keys.c    ****      *  Prepare search
 321:src/keys.c    ****      */
 322:src/keys.c    ****     cp = cmap;
 323:src/keys.c    **** #ifndef WINGUI
 324:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 325:src/keys.c    **** #else
 326:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 327:src/keys.c    **** #endif
 328:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 329:src/keys.c    ****   }
 330:src/keys.c    ****   else {
 331:src/keys.c    ****     /*
 332:src/keys.c    ****      *  All the alpha catalogues go here
 333:src/keys.c    ****      */
 334:src/keys.c    **** #ifdef DM42
 335:src/keys.c    ****     static const struct _map amap[] = {
 336:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 337:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 338:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 339:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 340:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 341:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 342:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 343:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** #else
 346:src/keys.c    ****     static const struct _map amap[] = {
 347:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 348:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 349:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 350:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 351:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 352:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 353:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 354:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 355:src/keys.c    ****     };
 356:src/keys.c    **** #endif
 357:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 358:src/keys.c    **** 
 359:src/keys.c    ****     /*
 360:src/keys.c    ****      *  Prepare search
 361:src/keys.c    ****      */
 362:src/keys.c    ****     cp = amap;
 363:src/keys.c    ****     col = smap[shift];
 364:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 365:src/keys.c    ****   }
 366:src/keys.c    **** 
 367:src/keys.c    ****   /*
 368:src/keys.c    ****    *  Search the key in one of the tables
 369:src/keys.c    ****    */
 370:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 371:src/keys.c    ****     if (cp->key == c) {
ARM GAS  /tmp/cceb4mPP.s 			page 8


 372:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 373:src/keys.c    ****       break;
 374:src/keys.c    ****     }
 375:src/keys.c    ****   }
 376:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 377:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 378:src/keys.c    ****     cat = CATALOGUE_NONE;
 379:src/keys.c    ****   }
 380:src/keys.c    ****   return cat;
 381:src/keys.c    **** }
 382:src/keys.c    **** 
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 385:src/keys.c    **** {
 386:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 387:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 388:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 389:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 390:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 391:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 392:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 393:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 394:src/keys.c    **** 
 395:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 396:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 397:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 398:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 399:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 400:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 401:src/keys.c    **** 
 402:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 403:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 404:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 405:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 406:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 407:src/keys.c    **** 
 408:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 409:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 410:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 411:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 412:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 413:src/keys.c    **** 
 414:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 415:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 416:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 417:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 418:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 419:src/keys.c    **** 
 420:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 421:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 422:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 423:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 424:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 425:src/keys.c    **** 
 426:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 427:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 428:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
ARM GAS  /tmp/cceb4mPP.s 			page 9


 429:src/keys.c    **** 		{ '?',  0000, 0041, 0000, 0000, 0000,  },  // K63
 430:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, 0000, 0000,  },  // K64
 431:src/keys.c    **** 
 432:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 433:src/keys.c    **** 	};
 434:src/keys.c    **** 	if (State2.alphashift) {
 435:src/keys.c    **** 		if (shift == SHIFT_N)
 436:src/keys.c    **** 			shift = SHIFT_LC_N;
 437:src/keys.c    **** 		else if (shift == SHIFT_G)
 438:src/keys.c    **** 			shift = SHIFT_LC_G;
 439:src/keys.c    **** 	}
 440:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 441:src/keys.c    **** }
 442:src/keys.c    **** #else
 443:src/keys.c    **** /*
 444:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 445:src/keys.c    ****  * the two lower case planes.
 446:src/keys.c    ****  */
 447:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 448:src/keys.c    **** {
 449:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 450:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 451:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 452:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 453:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 454:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 455:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 456:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 457:src/keys.c    **** 
 458:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 459:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 460:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 461:src/keys.c    **** 
 462:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 463:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 464:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 465:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 466:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 467:src/keys.c    **** 
 468:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 469:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 470:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 471:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 472:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 473:src/keys.c    **** 
 474:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 475:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 476:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 477:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 478:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 479:src/keys.c    **** 
 480:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 481:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 482:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 483:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 484:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 485:src/keys.c    **** 
ARM GAS  /tmp/cceb4mPP.s 			page 10


 486:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 487:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 488:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 489:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 490:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 491:src/keys.c    **** 	};
 492:src/keys.c    **** 	if (State2.alphashift) {
 493:src/keys.c    **** 		if (shift == SHIFT_N)
 494:src/keys.c    **** 			shift = SHIFT_LC_N;
 495:src/keys.c    **** 		else if (shift == SHIFT_G)
 496:src/keys.c    **** 			shift = SHIFT_LC_G;
 497:src/keys.c    **** 	}
 498:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 499:src/keys.c    **** }
 500:src/keys.c    **** #endif
 501:src/keys.c    **** static void init_arg(const enum rarg base) {
 502:src/keys.c    **** 	if (is_bad_cmdline())
 503:src/keys.c    **** 		return;
 504:src/keys.c    **** 	CmdBase = base;
 505:src/keys.c    **** 	State2.ind = 0;
 506:src/keys.c    **** 	State2.digval = 0;
 507:src/keys.c    **** 	State2.numdigit = 0;
 508:src/keys.c    **** 	State2.rarg = 1;
 509:src/keys.c    **** 	State2.dot = 0;
 510:src/keys.c    **** 	State2.local = 0;
 511:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 512:src/keys.c    **** }
 513:src/keys.c    **** 
 514:src/keys.c    **** static void init_cat(enum catalogues cat) {
 515:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 516:src/keys.c    **** 		// Save last catalogue for a later restore
 517:src/keys.c    **** 		State.last_cat = State2.catalogue;
 518:src/keys.c    **** 		CmdLineLength = 0;
 519:src/keys.c    **** 	}
 520:src/keys.c    **** 	process_cmdline();
 521:src/keys.c    **** 
 522:src/keys.c    **** 	State2.labellist = 0;
 523:src/keys.c    **** 	State2.registerlist = 0;
 524:src/keys.c    **** 	State2.status = 0;
 525:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 526:src/keys.c    **** 
 527:src/keys.c    **** 	switch (cat) {
 528:src/keys.c    **** 	case CATALOGUE_LABELS:
 529:src/keys.c    **** 		// Label browser
 530:src/keys.c    **** 		State2.labellist = 1;
 531:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 532:src/keys.c    **** 		break;
 533:src/keys.c    **** 	
 534:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 535:src/keys.c    **** 		// Register browser
 536:src/keys.c    **** 		State2.registerlist = 1;
 537:src/keys.c    **** 		State2.digval = regX_idx;
 538:src/keys.c    **** 		State2.digval2 = 0;
 539:src/keys.c    **** 		break;
 540:src/keys.c    **** 
 541:src/keys.c    **** 	case CATALOGUE_STATUS:
 542:src/keys.c    **** 		// Flag browser
ARM GAS  /tmp/cceb4mPP.s 			page 11


 543:src/keys.c    **** 		State2.status = 1;
 544:src/keys.c    **** 		break;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	default:
 547:src/keys.c    **** 		// Normal catalogue
 548:src/keys.c    **** 		State2.catalogue = cat;
 549:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 550:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 551:src/keys.c    **** 			// Different catalogue, reset position
 552:src/keys.c    **** 			State.catpos = 0;
 553:src/keys.c    **** 		}
 554:src/keys.c    **** 	}
 555:src/keys.c    **** 	reset_shift();
 556:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 557:src/keys.c    **** 	changed_catalog_state();
 558:src/keys.c    **** #endif
 559:src/keys.c    **** }
 560:src/keys.c    **** 
 561:src/keys.c    **** /*
 562:src/keys.c    ****  *  Reset the internal state to a sane default
 563:src/keys.c    ****  */
 564:src/keys.c    **** void init_state(void) {
 565:src/keys.c    **** #ifndef REALBUILD
 566:src/keys.c    **** 	unsigned int a = State2.flags;
 567:src/keys.c    **** 	unsigned int b = State2.trace;
 568:src/keys.c    **** #else
 569:src/keys.c    **** 	FLAG t = TestFlag;
 570:src/keys.c    **** #endif
 571:src/keys.c    **** 	int v = Voltage;
 572:src/keys.c    **** 	int k = LastKey;
 573:src/keys.c    **** 
 574:src/keys.c    **** 	CmdBase = 0;
 575:src/keys.c    **** 	// Removed: will clear any locals on power off
 576:src/keys.c    **** 	// clrretstk(0);
 577:src/keys.c    **** 
 578:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 579:src/keys.c    **** 	State2.test = TST_NONE;
 580:src/keys.c    **** 	State2.runmode = 1;
 581:src/keys.c    **** 	update_program_bounds(1);
 582:src/keys.c    **** 	set_lift();
 583:src/keys.c    **** 
 584:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 585:src/keys.c    **** 	// but must not be cleared.
 586:src/keys.c    **** 	Voltage = v;
 587:src/keys.c    **** 	LastKey = k;
 588:src/keys.c    **** #ifndef REALBUILD
 589:src/keys.c    **** 	State2.trace = b;
 590:src/keys.c    **** 	State2.flags = a;
 591:src/keys.c    **** #else
 592:src/keys.c    **** 	TestFlag = t;
 593:src/keys.c    **** #endif
 594:src/keys.c    **** 	ShowRegister = regX_idx;
 595:src/keys.c    **** }
 596:src/keys.c    **** 
 597:src/keys.c    **** void soft_init_state(void) {
 598:src/keys.c    **** 	int soft;
 599:src/keys.c    **** 	unsigned int runmode;
ARM GAS  /tmp/cceb4mPP.s 			page 12


 600:src/keys.c    **** 	unsigned int alphas;
 601:src/keys.c    **** 
 602:src/keys.c    **** 	if (CmdLineLength) {
 603:src/keys.c    **** 		CmdLineLength = 0;
 604:src/keys.c    **** 		CmdLineEex = 0;
 605:src/keys.c    **** 		CmdLineDot = 0;
 606:src/keys.c    **** 		return;
 607:src/keys.c    **** 	}
 608:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 609:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 610:src/keys.c    **** 	runmode = State2.runmode;
 611:src/keys.c    **** 	alphas = State2.alphas;
 612:src/keys.c    **** 	init_state();
 613:src/keys.c    **** 	if (soft) {
 614:src/keys.c    **** 		State2.runmode = runmode;
 615:src/keys.c    **** 		State2.alphas = alphas;
 616:src/keys.c    **** 	}
 617:src/keys.c    **** }
 618:src/keys.c    **** 
 619:src/keys.c    **** static int check_confirm(int op) {
 620:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 621:src/keys.c    **** 		const int nilop = argKIND(op);
 622:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 623:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 624:src/keys.c    **** 			return STATE_UNFINISHED;
 625:src/keys.c    **** 		}
 626:src/keys.c    **** #ifndef DM42		
 627:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 628:src/keys.c    **** #endif
 629:src/keys.c    **** #ifdef DM42
 630:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 631:src/keys.c    **** #endif
 632:src/keys.c    **** #ifdef INFRARED
 633:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 634:src/keys.c    **** #endif
 635:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 636:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 637:src/keys.c    **** #endif
 638:src/keys.c    **** 		) {
 639:src/keys.c    **** 			// These commands are not programmable
 640:src/keys.c    **** 			NonProgrammable = 1;
 641:src/keys.c    **** 		}
 642:src/keys.c    **** 	}
 643:src/keys.c    **** 	return op;
 644:src/keys.c    **** }
 645:src/keys.c    **** 
 646:src/keys.c    **** static void set_smode(const enum single_disp d) {
 647:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 648:src/keys.c    **** }
 649:src/keys.c    **** 
 650:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 651:src/keys.c    **** 	const int code = 100 + n;
 652:src/keys.c    **** 	unsigned int pc = state_pc();
 653:src/keys.c    **** 
 654:src/keys.c    **** 	if (State2.runmode) {
 655:src/keys.c    **** 		if (isXROM(pc))
 656:src/keys.c    **** 			pc = 1;
ARM GAS  /tmp/cceb4mPP.s 			page 13


 657:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 658:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 659:src/keys.c    **** 	}
 660:src/keys.c    **** 	return dflt;
 661:src/keys.c    **** }
 662:src/keys.c    **** 
 663:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 664:src/keys.c    ****  * as digits.
 665:src/keys.c    ****  */
 666:src/keys.c    **** static int intltr(int d) {
 667:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 668:src/keys.c    **** }
 669:src/keys.c    **** 
 670:src/keys.c    **** /*
 671:src/keys.c    ****  *  Process a key code in the unshifted mode.
 672:src/keys.c    ****  */
 673:src/keys.c    **** static int process_normal(const keycode c)
 674:src/keys.c    **** {
 675:src/keys.c    **** 	static const unsigned short int op_map[] = {
 676:src/keys.c    **** 		// Row 1
 677:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 678:src/keys.c    **** 		OP_MON  | OP_RECIP,
 679:src/keys.c    **** 		OP_DYA  | OP_POW,
 680:src/keys.c    **** 		OP_MON  | OP_SQRT,
 681:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 682:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 683:src/keys.c    **** 		// Row 2
 684:src/keys.c    **** 		RARG_STO,
 685:src/keys.c    **** 		RARG_RCL,
 686:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 687:src/keys.c    **** 		// Row 3
 688:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 689:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 690:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 691:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 692:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 693:src/keys.c    **** 		// Row 4
 694:src/keys.c    **** 		RARG_XEQ,
 695:src/keys.c    **** 		OP_SPEC | OP_7,
 696:src/keys.c    **** 		OP_SPEC | OP_8,
 697:src/keys.c    **** 		OP_SPEC | OP_9,
 698:src/keys.c    **** 		OP_DYA  | OP_DIV,
 699:src/keys.c    **** 		// Row 5
 700:src/keys.c    **** 		STATE_BST,
 701:src/keys.c    **** 		OP_SPEC | OP_4,
 702:src/keys.c    **** 		OP_SPEC | OP_5,
 703:src/keys.c    **** 		OP_SPEC | OP_6,
 704:src/keys.c    **** 		OP_DYA  | OP_MUL,
 705:src/keys.c    **** 		// Row 6
 706:src/keys.c    **** 		STATE_SST,		// SST
 707:src/keys.c    **** 		OP_SPEC | OP_1,
 708:src/keys.c    **** 		OP_SPEC | OP_2,
 709:src/keys.c    **** 		OP_SPEC | OP_3,
 710:src/keys.c    **** 		OP_DYA  | OP_SUB,
 711:src/keys.c    **** 		// Row 7
 712:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 713:src/keys.c    **** 		OP_SPEC | OP_0,
ARM GAS  /tmp/cceb4mPP.s 			page 14


 714:src/keys.c    **** 		OP_SPEC | OP_DOT,
 715:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 716:src/keys.c    **** 		OP_DYA  | OP_ADD,
 717:src/keys.c    **** #ifdef DM42
 718:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 719:src/keys.c    **** #endif
 720:src/keys.c    **** 	};
 721:src/keys.c    **** 
 722:src/keys.c    **** 	int lc = keycode_to_linear(c);
 723:src/keys.c    **** 	int op = op_map[lc];
 724:src/keys.c    **** 	
 725:src/keys.c    **** 	// The switch handles all the special cases
 726:src/keys.c    **** #ifdef DM42
 727:src/keys.c    **** 	int op_int;
 728:src/keys.c    **** 	if (UState.intm) {
 729:src/keys.c    **** 	  switch (c) {
 730:src/keys.c    **** 	  case K00:
 731:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 732:src/keys.c    **** 	    if (intltr(10)) {
 733:src/keys.c    **** 	      return op;
 734:src/keys.c    **** 	    }
 735:src/keys.c    **** 	    else {
 736:src/keys.c    **** 	      return check_f_key(0, op);
 737:src/keys.c    **** 	    }
 738:src/keys.c    **** 	  case K01:
 739:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 740:src/keys.c    **** 	    if (intltr(11)) {
 741:src/keys.c    **** 	      return op;
 742:src/keys.c    **** 	    }
 743:src/keys.c    **** 	    else {
 744:src/keys.c    **** 	      return check_f_key(1, op);
 745:src/keys.c    **** 	    }
 746:src/keys.c    **** 	  case K03:
 747:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 748:src/keys.c    **** 	    if (intltr(12)) {
 749:src/keys.c    **** 	      return op_int;
 750:src/keys.c    **** 	    }
 751:src/keys.c    **** 	    else {
 752:src/keys.c    **** 	      return check_f_key(2, op);
 753:src/keys.c    **** 	    }
 754:src/keys.c    **** 	  case K30:
 755:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 756:src/keys.c    **** 	    if (intltr(15)) {
 757:src/keys.c    **** 	      return op_int;
 758:src/keys.c    **** 	    }
 759:src/keys.c    **** 	  default:;
 760:src/keys.c    **** 	  }
 761:src/keys.c    **** 	}
 762:src/keys.c    **** #endif  
 763:src/keys.c    **** 
 764:src/keys.c    **** 	switch (c) {
 765:src/keys.c    **** #ifdef DM42
 766:src/keys.c    **** 	case K00:
 767:src/keys.c    **** 		return check_f_key(0, op);
 768:src/keys.c    **** 	case K01:
 769:src/keys.c    **** 		return check_f_key(1, op);
 770:src/keys.c    **** 	case K03:
ARM GAS  /tmp/cceb4mPP.s 			page 15


 771:src/keys.c    **** 		return check_f_key(2, op);
 772:src/keys.c    **** #else
 773:src/keys.c    **** 	case K00:
 774:src/keys.c    **** 	case K01:
 775:src/keys.c    **** 		if (UState.intm)
 776:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 777:src/keys.c    **** 	case K02:
 778:src/keys.c    **** 	case K03:
 779:src/keys.c    **** 		if (intltr(lc + 10)) {
 780:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 781:src/keys.c    **** 			return op;
 782:src/keys.c    **** 		}
 783:src/keys.c    **** 		return check_f_key(lc, op);
 784:src/keys.c    **** #endif		
 785:src/keys.c    **** 	case K_ARROW:
 786:src/keys.c    **** #ifndef DM42
 787:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 788:src/keys.c    **** 		if (intltr(14))
 789:src/keys.c    **** 			return op;
 790:src/keys.c    **** #else
 791:src/keys.c    **** 		if (UState.intm)
 792:src/keys.c    **** 			return op;
 793:src/keys.c    **** #endif
 794:src/keys.c    **** #endif		
 795:src/keys.c    **** 		if (is_bad_cmdline())
 796:src/keys.c    **** 			return STATE_UNFINISHED;
 797:src/keys.c    **** 		process_cmdline_set_lift();
 798:src/keys.c    **** 		State2.arrow = 1;
 799:src/keys.c    **** #ifdef DM42
 800:src/keys.c    **** 		set_menu (9);
 801:src/keys.c    **** 		display_current_menu ();
 802:src/keys.c    **** 		lcd_refresh ();
 803:src/keys.c    **** #else
 804:src/keys.c    **** 		set_shift(SHIFT_G);
 805:src/keys.c    **** #endif
 806:src/keys.c    **** 		break;
 807:src/keys.c    **** 
 808:src/keys.c    **** 	case K_CMPLX:
 809:src/keys.c    **** #ifdef DM42
 810:src/keys.c    **** 	  if (UState.intm)
 811:src/keys.c    **** 	    break; // return nothing
 812:src/keys.c    **** 	  State2.cmplx = 1;
 813:src/keys.c    **** #else
 814:src/keys.c    **** 	  if (UState.intm)
 815:src/keys.c    **** 	    return op;
 816:src/keys.c    **** 	  State2.cmplx = 1;
 817:src/keys.c    **** #endif
 818:src/keys.c    **** 	  break;
 819:src/keys.c    **** 
 820:src/keys.c    **** 	case K24:				// <-
 821:src/keys.c    **** 		if (State2.disp_temp)
 822:src/keys.c    **** 			return STATE_UNFINISHED;
 823:src/keys.c    **** 		if (State2.runmode)
 824:src/keys.c    **** 			return op;
 825:src/keys.c    **** 		return STATE_BACKSPACE;
 826:src/keys.c    **** 
 827:src/keys.c    **** 	case K10:				// STO
ARM GAS  /tmp/cceb4mPP.s 			page 16


 828:src/keys.c    **** 	case K11:				// RCL
 829:src/keys.c    **** 	case K30:				// XEQ
 830:src/keys.c    **** 		init_arg((enum rarg)op);
 831:src/keys.c    **** 		break;
 832:src/keys.c    **** 
 833:src/keys.c    **** 	default:
 834:src/keys.c    **** 		return op;			// Keys handled by table
 835:src/keys.c    **** 	}
 836:src/keys.c    **** 	return STATE_UNFINISHED;
 837:src/keys.c    **** }
 838:src/keys.c    **** 
 839:src/keys.c    **** 
 840:src/keys.c    **** /*
 841:src/keys.c    ****  *  Process a key code after f or g shift
 842:src/keys.c    ****  */
 843:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 844:src/keys.c    **** 
 845:src/keys.c    **** #define NO_INT 0xf000
 846:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 847:src/keys.c    **** 		// Row 1
 848:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 849:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 850:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 851:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 852:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 853:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 854:src/keys.c    **** 		// Row 2
 855:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 856:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 857:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 858:src/keys.c    **** 		// Row 3
 859:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 860:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 861:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 862:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 863:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 864:src/keys.c    **** 		// Row 4
 865:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 866:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 867:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 868:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 869:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 870:src/keys.c    **** 		// Row 5
 871:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 872:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 873:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 874:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 875:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 876:src/keys.c    **** 		// Row 6
 877:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 878:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 879:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 880:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 881:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 882:src/keys.c    **** 		// Row 7
 883:src/keys.c    **** #ifdef INFRARED
 884:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
ARM GAS  /tmp/cceb4mPP.s 			page 17


 885:src/keys.c    **** #else
 886:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 887:src/keys.c    **** #endif
 888:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 889:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 890:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 891:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 892:src/keys.c    **** #ifdef DM42
 893:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 894:src/keys.c    **** #endif
 895:src/keys.c    **** 	};
 896:src/keys.c    **** 
 897:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 898:src/keys.c    **** 		STATE_UNFINISHED,
 899:src/keys.c    **** 		STATE_UNFINISHED,
 900:src/keys.c    **** 		OP_DYA  | OP_POW,
 901:src/keys.c    **** 		OP_MON  | OP_SQRT
 902:src/keys.c    **** 	};
 903:src/keys.c    **** 
 904:src/keys.c    **** 	enum shifts shift = reset_shift();
 905:src/keys.c    **** 	int lc = keycode_to_linear(c);
 906:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 907:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 908:src/keys.c    **** 	if (no_int)
 909:src/keys.c    **** 		op &= ~NO_INT;
 910:src/keys.c    **** 
 911:src/keys.c    **** 	switch (c) {
 912:src/keys.c    **** 	case K00:
 913:src/keys.c    **** 	  if (! UState.intm) {
 914:src/keys.c    **** 	    State2.hyp = 1;
 915:src/keys.c    **** 	    State2.dot = op;
 916:src/keys.c    **** 	    // State2.cmplx = 0;
 917:src/keys.c    **** 	    return STATE_UNFINISHED;
 918:src/keys.c    **** 	  }
 919:src/keys.c    **** 	  // fall through
 920:src/keys.c    **** 	case K01:
 921:src/keys.c    **** #ifdef DM42
 922:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 923:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 924:src/keys.c    **** 	  }
 925:src/keys.c    **** 	  break;
 926:src/keys.c    **** #endif
 927:src/keys.c    **** #ifndef DM42
 928:src/keys.c    **** 	case K02:
 929:src/keys.c    **** #endif
 930:src/keys.c    **** 	case K03:
 931:src/keys.c    **** #ifdef DM42
 932:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 933:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 934:src/keys.c    **** 		}
 935:src/keys.c    **** 		break;
 936:src/keys.c    **** #else
 937:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 938:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 939:src/keys.c    **** 		}
 940:src/keys.c    **** 		break;
 941:src/keys.c    **** #endif
ARM GAS  /tmp/cceb4mPP.s 			page 18


 942:src/keys.c    **** 	case K20:				// Alpha
 943:src/keys.c    **** 		if (shift == SHIFT_F) {
 944:src/keys.c    **** 			if (is_bad_cmdline())
 945:src/keys.c    **** 				return STATE_UNFINISHED;
 946:src/keys.c    **** 			process_cmdline_set_lift();
 947:src/keys.c    **** 			State2.alphas = 1;
 948:src/keys.c    **** 		}
 949:src/keys.c    **** 		break;
 950:src/keys.c    **** #ifdef DM42
 951:src/keys.c    **** 	case K31:
 952:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 953:src/keys.c    **** 	    return OP_SPEC | OP_D;
 954:src/keys.c    **** 	  }
 955:src/keys.c    **** 	  break;
 956:src/keys.c    **** 	case K30:
 957:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 958:src/keys.c    **** 	    return OP_SPEC | OP_E;
 959:src/keys.c    **** 	  }
 960:src/keys.c    **** 	  break;
 961:src/keys.c    **** #endif
 962:src/keys.c    **** 	case K51:
 963:src/keys.c    **** 		if (is_bad_cmdline())
 964:src/keys.c    **** 			return STATE_UNFINISHED;
 965:src/keys.c    **** 		process_cmdline_set_lift();
 966:src/keys.c    **** 		State2.test = op;
 967:src/keys.c    **** 		return STATE_UNFINISHED;
 968:src/keys.c    **** 
 969:src/keys.c    **** 	case K50:
 970:src/keys.c    **** #ifndef REALBUILD
 971:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 972:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 973:src/keys.c    **** 			return STATE_UNFINISHED;
 974:src/keys.c    **** 		}
 975:src/keys.c    **** #endif
 976:src/keys.c    **** 	case K52:
 977:src/keys.c    **** 	case K53:
 978:src/keys.c    **** 	case K63:
 979:src/keys.c    **** 	case K64:
 980:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 981:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 982:src/keys.c    **** 				init_arg((enum rarg) op);
 983:src/keys.c    **** 			}
 984:src/keys.c    **** 			return STATE_UNFINISHED;
 985:src/keys.c    **** 		}
 986:src/keys.c    **** 		break;
 987:src/keys.c    **** 
 988:src/keys.c    **** 	default:
 989:src/keys.c    **** 		break;
 990:src/keys.c    **** 	}
 991:src/keys.c    **** 	if (no_int && UState.intm)
 992:src/keys.c    **** 		return STATE_UNFINISHED;
 993:src/keys.c    **** 
 994:src/keys.c    **** 	return check_confirm(op);
 995:src/keys.c    **** #undef NO_INT
 996:src/keys.c    **** }
 997:src/keys.c    **** 
 998:src/keys.c    **** /*
ARM GAS  /tmp/cceb4mPP.s 			page 19


 999:src/keys.c    ****  *  Process a key code after h shift
1000:src/keys.c    ****  */
1001:src/keys.c    **** static int process_h_shifted(const keycode c) {
1002:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1003:src/keys.c    **** #define NO_INT   0x4000
1004:src/keys.c    **** 	static const unsigned short int op_map[] = {
1005:src/keys.c    **** 		// Row 1
1006:src/keys.c    **** 		_RARG   | RARG_STD,
1007:src/keys.c    **** 		_RARG   | RARG_FIX,
1008:src/keys.c    **** 		_RARG   | RARG_SCI,
1009:src/keys.c    **** 		_RARG   | RARG_ENG,
1010:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1011:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1012:src/keys.c    **** 		// Row 2
1013:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1014:src/keys.c    **** 		_RARG   | RARG_VIEW,
1015:src/keys.c    **** 		OP_NIL  | OP_RUP,
1016:src/keys.c    **** 		// Row 3
1017:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1018:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1019:src/keys.c    **** 		OP_MON  | OP_NOT,
1020:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1021:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1022:src/keys.c    **** 		// Row 4
1023:src/keys.c    **** 		_RARG   | RARG_GTO,
1024:src/keys.c    **** 		OP_DYA  | OP_LAND,
1025:src/keys.c    **** 		OP_DYA  | OP_LOR,
1026:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1027:src/keys.c    **** 		OP_DYA  | OP_MOD,
1028:src/keys.c    **** 		// Row 5
1029:src/keys.c    **** 		OP_MON  | OP_FACT,
1030:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1031:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1032:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1033:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1034:src/keys.c    **** 		// Row 6
1035:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1036:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1037:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1038:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1039:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1040:src/keys.c    **** 		// Row 7
1041:src/keys.c    **** 		OP_NIL | OP_OFF,
1042:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1043:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1044:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1045:src/keys.c    **** #else
1046:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1047:src/keys.c    **** #endif
1048:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1049:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1050:src/keys.c    **** #ifdef DM42
1051:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1052:src/keys.c    **** #endif
1053:src/keys.c    **** 	};
1054:src/keys.c    **** 
1055:src/keys.c    **** 	int lc = keycode_to_linear(c);
ARM GAS  /tmp/cceb4mPP.s 			page 20


1056:src/keys.c    **** 	int op = op_map[lc];
1057:src/keys.c    **** 	reset_shift();
1058:src/keys.c    **** 
1059:src/keys.c    **** 	// The switch handles all the special cases
1060:src/keys.c    **** 	switch (c) {
1061:src/keys.c    **** 	case K62:
1062:src/keys.c    **** 		if (UState.intm)
1063:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1064:src/keys.c    **** 		else
1065:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1066:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1067:src/keys.c    **** #else
1068:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1069:src/keys.c    **** #endif
1070:src/keys.c    **** 		break;
1071:src/keys.c    **** 
1072:src/keys.c    **** 	case K63:					// Program<->Run mode
1073:src/keys.c    **** 		if (is_bad_cmdline())
1074:src/keys.c    **** 			return STATE_UNFINISHED;
1075:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1076:src/keys.c    **** 		process_cmdline_set_lift();
1077:src/keys.c    **** 		update_program_bounds(1);
1078:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1079:src/keys.c    **** 			set_pc(0);
1080:src/keys.c    **** 		break;
1081:src/keys.c    **** 
1082:src/keys.c    **** 	default:
1083:src/keys.c    **** 		break;
1084:src/keys.c    **** 	}
1085:src/keys.c    **** 
1086:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1087:src/keys.c    **** 		if (op & _RARG) {
1088:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1089:src/keys.c    **** 			op = STATE_UNFINISHED;
1090:src/keys.c    **** 		}
1091:src/keys.c    **** 	}
1092:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1093:src/keys.c    **** #undef _RARG
1094:src/keys.c    **** #undef NO_INT
1095:src/keys.c    **** }
1096:src/keys.c    **** 
1097:src/keys.c    **** /*
1098:src/keys.c    ****  *  Process a key code after CPX
1099:src/keys.c    ****  */
1100:src/keys.c    **** static int process_cmplx(const keycode c) {
1101:src/keys.c    **** #define _RARG   0xFF00
1102:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1103:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1104:src/keys.c    **** 
1105:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1106:src/keys.c    **** 		// Row 1
1107:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1108:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1109:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1110:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1111:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1112:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
ARM GAS  /tmp/cceb4mPP.s 			page 21


1113:src/keys.c    **** 		// Row 2
1114:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1115:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1116:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1117:src/keys.c    **** 		// Row 3
1118:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1119:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1120:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1121:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1122:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1123:src/keys.c    **** 		// Row 4
1124:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1125:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1126:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1127:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1128:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1129:src/keys.c    **** 		// Row 5
1130:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1131:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1132:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1133:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1135:src/keys.c    **** 		// Row 6
1136:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1138:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1139:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1140:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		// Row 7
1142:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1143:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1144:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1145:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1146:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1147:src/keys.c    **** #else
1148:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** #endif
1150:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1151:src/keys.c    **** #ifdef DM42
1152:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1153:src/keys.c    **** #endif
1154:src/keys.c    **** 	};
1155:src/keys.c    **** 
1156:src/keys.c    **** 	enum shifts shift = reset_shift();
1157:src/keys.c    **** 	int lc = keycode_to_linear(c);
1158:src/keys.c    **** 	int op = op_map[lc][shift];
1159:src/keys.c    **** 	State2.cmplx = 0;
1160:src/keys.c    **** 
1161:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1162:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1163:src/keys.c    **** 		return STATE_UNFINISHED;
1164:src/keys.c    **** 	}
1165:src/keys.c    **** 	if (c == K00) {
1166:src/keys.c    **** 		// HYP
1167:src/keys.c    **** 		process_cmdline_set_lift();
1168:src/keys.c    **** 		State2.hyp = 1;
1169:src/keys.c    **** 		State2.dot = op;
ARM GAS  /tmp/cceb4mPP.s 			page 22


1170:src/keys.c    **** 		State2.cmplx = 1;
1171:src/keys.c    **** 		return STATE_UNFINISHED;
1172:src/keys.c    **** 	}
1173:src/keys.c    **** 
1174:src/keys.c    **** 	if (shift != SHIFT_N) {
1175:src/keys.c    **** 		switch (c) {
1176:src/keys.c    **** 		case K_CMPLX:
1177:src/keys.c    **** 			set_shift(shift);
1178:src/keys.c    **** 			break;
1179:src/keys.c    **** 
1180:src/keys.c    **** 		case K51:
1181:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1182:src/keys.c    **** 				if (is_bad_cmdline())
1183:src/keys.c    **** 					return STATE_UNFINISHED;
1184:src/keys.c    **** 				process_cmdline_set_lift();
1185:src/keys.c    **** 				State2.cmplx = 1;
1186:src/keys.c    **** 				State2.test = op;
1187:src/keys.c    **** 			}
1188:src/keys.c    **** 			return STATE_UNFINISHED;
1189:src/keys.c    **** 
1190:src/keys.c    **** 		case K60:
1191:src/keys.c    **** 			init_state();
1192:src/keys.c    **** 			break;
1193:src/keys.c    **** 
1194:src/keys.c    **** 		default:
1195:src/keys.c    **** 			break;
1196:src/keys.c    **** 		}
1197:src/keys.c    **** 	}
1198:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1199:src/keys.c    **** 	return check_confirm(op);
1200:src/keys.c    **** #else
1201:src/keys.c    **** 	return op;
1202:src/keys.c    **** #endif
1203:src/keys.c    **** 
1204:src/keys.c    **** #undef _RARG
1205:src/keys.c    **** #undef CSWAPXZ
1206:src/keys.c    **** #undef CNUM
1207:src/keys.c    **** }
1208:src/keys.c    **** 
1209:src/keys.c    **** 
1210:src/keys.c    **** 
1211:src/keys.c    **** /*
1212:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1213:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1214:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1215:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1216:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1217:src/keys.c    ****  * the ON key are dealt with by our caller.
1218:src/keys.c    ****  */
1219:src/keys.c    **** static int process_hyp(const keycode c) {
1220:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1221:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1222:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1223:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1224:src/keys.c    **** 	};
1225:src/keys.c    **** 	int cmplx = State2.cmplx;
1226:src/keys.c    **** 	int f = State2.dot;
ARM GAS  /tmp/cceb4mPP.s 			page 23


1227:src/keys.c    **** 
1228:src/keys.c    **** 	State2.hyp = 0;
1229:src/keys.c    **** 	State2.cmplx = 0;
1230:src/keys.c    **** 	State2.dot = 0;
1231:src/keys.c    **** #ifdef DM42
1232:src/keys.c    **** 	reset_shift();
1233:src/keys.c    **** #endif
1234:src/keys.c    **** 	switch ((int)c) {
1235:src/keys.c    **** 
1236:src/keys.c    **** 	case K01:
1237:src/keys.c    **** 	case K02:
1238:src/keys.c    **** 	case K03:
1239:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1240:src/keys.c    **** 
1241:src/keys.c    **** 	case K_CMPLX:
1242:src/keys.c    **** 		cmplx = ! cmplx;
1243:src/keys.c    **** 		goto stay;
1244:src/keys.c    **** 
1245:src/keys.c    **** 	case K_F: 
1246:src/keys.c    **** 	case K_G:
1247:src/keys.c    **** 		f = (c == K_F);
1248:src/keys.c    **** 		// fall trough
1249:src/keys.c    **** 	stay:
1250:src/keys.c    **** 		// process_cmdline_set_lift();
1251:src/keys.c    **** 		State2.hyp = 1;
1252:src/keys.c    **** 		State2.cmplx = cmplx;
1253:src/keys.c    **** 		State2.dot = f;
1254:src/keys.c    **** 		break;
1255:src/keys.c    **** 
1256:src/keys.c    **** 	default:
1257:src/keys.c    **** 		break;
1258:src/keys.c    **** 	}
1259:src/keys.c    **** 	return STATE_UNFINISHED;
1260:src/keys.c    **** }
1261:src/keys.c    **** 
1262:src/keys.c    **** 
1263:src/keys.c    **** /*
1264:src/keys.c    ****  *  Process a key code after ->
1265:src/keys.c    ****  */
1266:src/keys.c    **** static int process_arrow(const keycode c) {
1267:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1268:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1269:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1270:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1271:src/keys.c    **** 	};
1272:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1273:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1274:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1275:src/keys.c    **** 	};
1276:src/keys.c    **** 	const int shift = reset_shift();
1277:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1278:src/keys.c    **** 
1279:src/keys.c    **** 	State2.arrow = 0;
1280:src/keys.c    **** 	set_last_menu ();
1281:src/keys.c    **** 	display_current_menu ();
1282:src/keys.c    **** 
1283:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
ARM GAS  /tmp/cceb4mPP.s 			page 24


1284:src/keys.c    **** 	
1285:src/keys.c    **** 	if (c >= K10 && c <= K12)
1286:src/keys.c    **** 		return op_map[c - K10][f];
1287:src/keys.c    **** 
1288:src/keys.c    **** 	if (c == K22 || c == K23)
1289:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1290:src/keys.c    **** 
1291:src/keys.c    **** 	return STATE_UNFINISHED;
1292:src/keys.c    **** }
1293:src/keys.c    **** 
1294:src/keys.c    **** 
1295:src/keys.c    **** /* Process a GTO . sequence
1296:src/keys.c    ****  */
1297:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1297 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1298 2 view .LVU1
1299:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1299 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1297:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1297 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1298 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1299 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1298 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1299 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1298 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1297:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1297 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1300:src/keys.c    **** 
1301:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1301 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1298:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1298 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
ARM GAS  /tmp/cceb4mPP.s 			page 25


1299:src/keys.c    **** 
  63              		.loc 1 1299 2 is_stmt 1 view .LVU12
  64              		.loc 1 1301 2 view .LVU13
  65              		.loc 1 1301 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1301 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1301 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1302:src/keys.c    **** 		return val;
1303:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1303 2 is_stmt 1 view .LVU17
  77              		.loc 1 1303 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1303 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1303 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1303 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1303 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1304:src/keys.c    **** 		return val;
1305:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1305 2 is_stmt 1 view .LVU23
  91              		.loc 1 1305 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1306:src/keys.c    **** 	return -1;
  94              		.loc 1 1306 2 is_stmt 1 view .LVU25
1303:src/keys.c    **** 		return val;
  95              		.loc 1 1303 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1306 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1307:src/keys.c    **** }
 102              		.loc 1 1307 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1307 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
ARM GAS  /tmp/cceb4mPP.s 			page 26


 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 650:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 650 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 651 2 view .LVU31
 650:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 650 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 654:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 654 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 652:src/keys.c    **** 
 143              		.loc 1 652 2 is_stmt 1 view .LVU34
 654:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 654 2 view .LVU35
 654:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 654 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 650:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 650 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 654:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 654 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 652:src/keys.c    **** 
 151              		.loc 1 652 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 652:src/keys.c    **** 
 154              		.loc 1 652 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 652:src/keys.c    **** 
 157              		.loc 1 652 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
ARM GAS  /tmp/cceb4mPP.s 			page 27


 159              	.LVL10:
 655:src/keys.c    **** 			pc = 1;
 160              		.loc 1 655 3 is_stmt 1 view .LVU42
 655:src/keys.c    **** 			pc = 1;
 161              		.loc 1 655 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 656:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 656 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 657 3 is_stmt 1 view .LVU45
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 651 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 657 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 657 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 657 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 657 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 660:src/keys.c    **** }
 186              		.loc 1 660 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 661:src/keys.c    **** 
 188              		.loc 1 661 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 658:src/keys.c    **** 	}
 192              		.loc 1 658 4 is_stmt 1 view .LVU53
 658:src/keys.c    **** 	}
 193              		.loc 1 658 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 661:src/keys.c    **** 
 195              		.loc 1 661 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 661:src/keys.c    **** 
 199              		.loc 1 661 1 view .LVU56
 200 0036 00BF     		.align	2
ARM GAS  /tmp/cceb4mPP.s 			page 28


 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1308:src/keys.c    **** 
1309:src/keys.c    **** static int gtodot_fkey(int n) {
1310:src/keys.c    **** 	const int code = 100 + n;
1311:src/keys.c    **** 	unsigned int pc = state_pc();
1312:src/keys.c    **** 
1313:src/keys.c    **** 	if(isXROM(pc))
1314:src/keys.c    **** 		pc = 1;
1315:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1316:src/keys.c    **** 	if (pc > 0)
1317:src/keys.c    **** 		return pc;
1318:src/keys.c    **** 	return state_pc();
1319:src/keys.c    **** }
1320:src/keys.c    **** 
1321:src/keys.c    **** static int process_gtodot(const keycode c) {
1322:src/keys.c    **** 	int pc = -1;
1323:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1324:src/keys.c    **** 
1325:src/keys.c    **** 	if (rawpc <= 9) {
1326:src/keys.c    **** 		// Digit 0 - 9
1327:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1328:src/keys.c    **** 	}
1329:src/keys.c    **** #ifdef DM42
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1334:src/keys.c    **** #endif
1335:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1336:src/keys.c    **** 		// A - D
1337:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1338:src/keys.c    **** 		goto fin;
1339:src/keys.c    **** 	}
1340:src/keys.c    **** 	else if (c == K62) {
1341:src/keys.c    **** 		// .
1342:src/keys.c    **** 		rawpc = ProgSize;
1343:src/keys.c    **** 		goto fin;
1344:src/keys.c    **** 	}
1345:src/keys.c    **** 	else if (c == K20) {
1346:src/keys.c    **** 		// ENTER - short circuit processing
1347:src/keys.c    **** 		pc = State2.digval;
1348:src/keys.c    **** 	}
1349:src/keys.c    **** 	else if (c == K24) {
ARM GAS  /tmp/cceb4mPP.s 			page 29


1350:src/keys.c    **** 		// backspace
1351:src/keys.c    **** 		if (State2.numdigit == 0) {
1352:src/keys.c    **** 			goto fin2;
1353:src/keys.c    **** 		} else {
1354:src/keys.c    **** 			State2.numdigit--;
1355:src/keys.c    **** 			State2.digval /= 10;
1356:src/keys.c    **** 		}
1357:src/keys.c    **** 	}
1358:src/keys.c    **** 	else if (c == K_UP) {
1359:src/keys.c    **** 		// up
1360:src/keys.c    **** 		rawpc = state_pc();
1361:src/keys.c    **** 		if (rawpc == 1)
1362:src/keys.c    **** 			rawpc = 0;
1363:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1364:src/keys.c    **** 		update_program_bounds(1);
1365:src/keys.c    **** 		rawpc = ProgBegin;
1366:src/keys.c    **** 		goto fin;
1367:src/keys.c    **** 	}
1368:src/keys.c    **** 	else if (c == K_DOWN) {
1369:src/keys.c    **** 		// down
1370:src/keys.c    **** 		update_program_bounds(1);
1371:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1373:src/keys.c    **** 			rawpc = 1;
1374:src/keys.c    **** 		goto fin;
1375:src/keys.c    **** 	}
1376:src/keys.c    **** 	if (pc >= 0) {
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
1378:src/keys.c    **** fin:		set_pc(rawpc);
1379:src/keys.c    **** fin2:		State2.gtodot = 0;
1380:src/keys.c    **** 		State2.digval = 0;
1381:src/keys.c    **** 		State2.numdigit = 0;
1382:src/keys.c    **** 	}
1383:src/keys.c    **** 	return STATE_UNFINISHED;
1384:src/keys.c    **** }
1385:src/keys.c    **** 
1386:src/keys.c    **** 
1387:src/keys.c    **** /* Process a keystroke in alpha mode
1388:src/keys.c    ****  */
1389:src/keys.c    **** static int process_alpha(const keycode c) {
1390:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
1391:src/keys.c    ****         int op = STATE_UNFINISHED;
1392:src/keys.c    **** 	const enum shifts shift = reset_shift();
1393:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1394:src/keys.c    **** 	State2.alpha_pos = 0;
1395:src/keys.c    **** 
1396:src/keys.c    **** 	switch (c) {
1397:src/keys.c    **** 	case K10:	// STO
1398:src/keys.c    **** 		if (shift == SHIFT_F) {
1399:src/keys.c    **** 			init_arg(RARG_ASTO);
1400:src/keys.c    **** 			return STATE_UNFINISHED;
1401:src/keys.c    **** 		}
1402:src/keys.c    **** 		break;
1403:src/keys.c    **** 
1404:src/keys.c    **** 	case K11:	// RCL - maybe view
1405:src/keys.c    **** 		if (shift == SHIFT_F) {
1406:src/keys.c    **** 			init_arg(RARG_ARCL);
ARM GAS  /tmp/cceb4mPP.s 			page 30


1407:src/keys.c    **** 			return STATE_UNFINISHED;
1408:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1409:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1410:src/keys.c    **** 			return STATE_UNFINISHED;
1411:src/keys.c    **** 		}
1412:src/keys.c    **** 		break;
1413:src/keys.c    **** 
1414:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1415:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1416:src/keys.c    **** 			break;
1417:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1418:src/keys.c    **** 			State2.multi = 1;
1419:src/keys.c    **** 			State2.numdigit = 0;
1420:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1421:src/keys.c    **** 			return STATE_UNFINISHED;
1422:src/keys.c    **** 		}
1423:src/keys.c    **** 		State2.alphas = 0;
1424:src/keys.c    **** 		State2.alphashift = 0;
1425:src/keys.c    **** 		return op;
1426:src/keys.c    **** 
1427:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1428:src/keys.c    **** 		if (shift == SHIFT_N)
1429:src/keys.c    **** 			return STATE_BACKSPACE;
1430:src/keys.c    **** 		if (shift == SHIFT_H)
1431:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1432:src/keys.c    **** 		break;
1433:src/keys.c    **** 
1434:src/keys.c    **** 	case K_UP:
1435:src/keys.c    **** 		if (shift == SHIFT_N) {
1436:src/keys.c    **** 			if ( State2.runmode ) {
1437:src/keys.c    **** 				// Alpha scroll left
1438:src/keys.c    **** 			  //	print_debug(100,alpha_pos);
1439:src/keys.c    **** 				n = alpha_pos + 1;
1440:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1441:src/keys.c    **** 				//	print_debug(101,State2.alpha_pos);
1442:src/keys.c    **** 				return STATE_UNFINISHED;
1443:src/keys.c    **** 			}
1444:src/keys.c    **** 			return STATE_BST;
1445:src/keys.c    **** 		}
1446:src/keys.c    **** 		break;
1447:src/keys.c    **** 
1448:src/keys.c    **** 	case K_DOWN:
1449:src/keys.c    **** 		if (shift == SHIFT_N) {
1450:src/keys.c    **** 			if ( State2.runmode ) {
1451:src/keys.c    **** 				// Alpha scroll right
1452:src/keys.c    **** 				if (alpha_pos > 0)
1453:src/keys.c    **** 					State2.alpha_pos = alpha_pos-1;
1454:src/keys.c    **** 				return STATE_UNFINISHED;
1455:src/keys.c    **** 			}
1456:src/keys.c    **** 			return STATE_SST;
1457:src/keys.c    **** 		}
1458:src/keys.c    **** 		break;
1459:src/keys.c    **** 
1460:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1461:src/keys.c    **** 		if (shift == SHIFT_F)
1462:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1463:src/keys.c    **** 		else if (shift == SHIFT_H)
ARM GAS  /tmp/cceb4mPP.s 			page 31


1464:src/keys.c    **** 			return OP_NIL | OP_OFF;
1465:src/keys.c    **** 		else if (shift == SHIFT_N)
1466:src/keys.c    **** 			init_state();
1467:src/keys.c    **** 		return STATE_UNFINISHED;
1468:src/keys.c    **** 
1469:src/keys.c    **** 	case K63:
1470:src/keys.c    **** 		if (shift == SHIFT_F)
1471:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1472:src/keys.c    **** 		break;
1473:src/keys.c    **** 
1474:src/keys.c    **** 	default:
1475:src/keys.c    **** 		break;
1476:src/keys.c    **** 	}
1477:src/keys.c    **** 
1478:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1479:src/keys.c    **** 	if (ch == 0)
1480:src/keys.c    **** 		return STATE_UNFINISHED;
1481:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1482:src/keys.c    **** }
1483:src/keys.c    **** 
1484:src/keys.c    **** /*
1485:src/keys.c    ****  *  Code to handle all commands with arguments
1486:src/keys.c    ****  */
1487:src/keys.c    **** static void reset_arg(void) {
1488:src/keys.c    **** 	init_arg((enum rarg) 0);
1489:src/keys.c    **** 	State2.rarg = 0;
1490:src/keys.c    **** }
1491:src/keys.c    **** 
1492:src/keys.c    **** static int arg_eval(unsigned int val) {
1493:src/keys.c    **** 	const unsigned int base = CmdBase;
1494:src/keys.c    **** 	int r = RARG(base, val 
1495:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1496:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1497:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1498:src/keys.c    **** 
1499:src/keys.c    **** 	if (! State2.ind) {
1500:src/keys.c    **** 		/*
1501:src/keys.c    **** 		 *  Central argument checking for some commands
1502:src/keys.c    **** 		 */
1503:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1504:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1505:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1506:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1507:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1508:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1509:src/keys.c    **** 			if ( val == 0 )
1510:src/keys.c    **** 				return STATE_UNFINISHED;
1511:src/keys.c    **** 			r = RARG(base, val);
1512:src/keys.c    **** 		}
1513:src/keys.c    **** #else
1514:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1515:src/keys.c    **** 			// Disallow odd complex register > 98
1516:src/keys.c    **** 			return STATE_UNFINISHED;
1517:src/keys.c    **** #endif
1518:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1519:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1520:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cceb4mPP.s 			page 32


1521:src/keys.c    **** 	}
1522:src/keys.c    **** 	// Build op-code
1523:src/keys.c    **** 	reset_arg();
1524:src/keys.c    **** 	return r;
1525:src/keys.c    **** }
1526:src/keys.c    **** 
1527:src/keys.c    **** static int arg_digit(int n) {
1528:src/keys.c    **** 	int lim;
1529:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1530:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1531:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1532:src/keys.c    **** #else
1533:src/keys.c    **** 	const unsigned int base = CmdBase;
1534:src/keys.c    **** #endif
1535:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1536:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1537:src/keys.c    **** 	
1538:src/keys.c    **** 	if (State2.local) {
1539:src/keys.c    **** 		// Handle local registers and flags
1540:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1541:src/keys.c    **** 		if (State2.runmode) {
1542:src/keys.c    **** 			if (LocalRegs == 0)
1543:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1544:src/keys.c    **** 			if (is_reg) {
1545:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1546:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1547:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1548:src/keys.c    **** 			}
1549:src/keys.c    **** 		}
1550:src/keys.c    **** 	}
1551:src/keys.c    **** 	else if (is_reg)						// normal register
1552:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1553:src/keys.c    **** 	else {
1554:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1555:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1556:src/keys.c    **** 			lim = RARG_IND - 1;
1557:src/keys.c    **** 	}
1558:src/keys.c    **** 	if ((int) val > lim)
1559:src/keys.c    **** 		return STATE_UNFINISHED;
1560:src/keys.c    **** 
1561:src/keys.c    **** 	State2.digval = val;
1562:src/keys.c    **** 	++State2.numdigit;
1563:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1564:src/keys.c    **** 		int result = arg_eval(val);
1565:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1566:src/keys.c    **** 			--State2.numdigit;
1567:src/keys.c    **** 			State2.digval /= 10;
1568:src/keys.c    **** 		}
1569:src/keys.c    **** 		return result;
1570:src/keys.c    **** 	}
1571:src/keys.c    **** 	return STATE_UNFINISHED;
1572:src/keys.c    **** }
1573:src/keys.c    **** 
1574:src/keys.c    **** static int arg_fkey(int n) {
1575:src/keys.c    **** 	const unsigned int b = CmdBase;
1576:src/keys.c    **** 
1577:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
ARM GAS  /tmp/cceb4mPP.s 			page 33


1578:src/keys.c    **** 	{
1579:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1580:src/keys.c    **** 			return STATE_UNFINISHED;
1581:src/keys.c    **** 		if (argcmds[b].lim < 100)
1582:src/keys.c    **** 			return STATE_UNFINISHED;
1583:src/keys.c    **** 		return arg_eval(n + 100);
1584:src/keys.c    **** 	}
1585:src/keys.c    **** 	return STATE_UNFINISHED;
1586:src/keys.c    **** }
1587:src/keys.c    **** 
1588:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1589:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1590:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1591:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1592:src/keys.c    **** #else
1593:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1594:src/keys.c    **** #endif
1595:src/keys.c    **** }
1596:src/keys.c    **** 
1597:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1598:src/keys.c    **** 	unsigned int b = CmdBase;
1599:src/keys.c    **** 
1600:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1601:src/keys.c    **** 		CmdBase += n;
1602:src/keys.c    **** 		return 1;
1603:src/keys.c    **** 	}
1604:src/keys.c    **** 	/* And we can turn off the operation too */
1605:src/keys.c    **** 	if (b >= n) {
1606:src/keys.c    **** 		b -= n;
1607:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1608:src/keys.c    **** 			CmdBase = b;
1609:src/keys.c    **** 			return 1;
1610:src/keys.c    **** 		}
1611:src/keys.c    **** 	}
1612:src/keys.c    **** 	return 0;
1613:src/keys.c    **** }
1614:src/keys.c    **** 
1615:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1616:src/keys.c    **** 
1617:src/keys.c    **** 	if (State2.numdigit == 0) {
1618:src/keys.c    **** 		// Only valid at beginning of entry
1619:src/keys.c    **** 		if (State2.dot || State2.local) {
1620:src/keys.c    **** 			// '..' or ENTER '.' = X
1621:src/keys.c    **** 			State2.local = 0;
1622:src/keys.c    **** 			return arg_eval(regX_idx);
1623:src/keys.c    **** 		}
1624:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1625:src/keys.c    **** 			// local register or flag select
1626:src/keys.c    **** 			State2.local = 1;
1627:src/keys.c    **** 		}
1628:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1629:src/keys.c    **** 			// Special GTO . sequence
1630:src/keys.c    **** 			if (! State2.ind) {
1631:src/keys.c    **** 				State2.gtodot = 1;
1632:src/keys.c    **** 				reset_arg();
1633:src/keys.c    **** 			}
1634:src/keys.c    **** 		}
ARM GAS  /tmp/cceb4mPP.s 			page 34


1635:src/keys.c    **** 	}
1636:src/keys.c    **** 	return STATE_UNFINISHED;
1637:src/keys.c    **** }
1638:src/keys.c    **** 
1639:src/keys.c    **** static int process_arg_shuffle(int r) {
1640:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1641:src/keys.c    **** 	if (State2.numdigit < 4)
1642:src/keys.c    **** 		return STATE_UNFINISHED;
1643:src/keys.c    **** 	return arg_eval(State2.digval);
1644:src/keys.c    **** }
1645:src/keys.c    **** 
1646:src/keys.c    **** 
1647:src/keys.c    **** static int process_arg(const keycode c) {
1648:src/keys.c    **** 	unsigned int base = CmdBase;
1649:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1650:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1651:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1652:src/keys.c    **** 	const enum shifts shift = reset_shift();
1653:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1654:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1655:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1656:src/keys.c    **** 
1657:src/keys.c    **** 	n &= ~NO_SHORT;
1658:src/keys.c    **** 	if (base >= NUM_RARG) {
1659:src/keys.c    **** 		reset_arg();
1660:src/keys.c    **** 		return STATE_UNFINISHED;
1661:src/keys.c    **** 	}
1662:src/keys.c    **** #ifdef DM42
1663:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1664:src/keys.c    **** 	  switch (n) {
1665:src/keys.c    **** 	  case regX_idx:
1666:src/keys.c    **** 	    return arg_digit(1);
1667:src/keys.c    **** 	  case regY_idx:
1668:src/keys.c    **** 	    return arg_digit(2);
1669:src/keys.c    **** 	  case regZ_idx:
1670:src/keys.c    **** 	    return arg_digit(3);
1671:src/keys.c    **** 	  case regT_idx:
1672:src/keys.c    **** 	    return arg_digit(4);
1673:src/keys.c    **** 	  case 5:
1674:src/keys.c    **** 	  case 6:
1675:src/keys.c    **** 	  case 7:
1676:src/keys.c    **** 	  case 8:
1677:src/keys.c    **** 	  case 9:
1678:src/keys.c    **** 	  case 0:
1679:src/keys.c    **** 	    return arg_digit(n);
1680:src/keys.c    **** 	  }
1681:src/keys.c    **** 	}
1682:src/keys.c    **** #else
1683:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1684:src/keys.c    **** 		return arg_digit(n);
1685:src/keys.c    **** #endif	
1686:src/keys.c    **** 	if (shorthand)
1687:src/keys.c    **** 		// row column shorthand addressing
1688:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1689:src/keys.c    **** 
1690:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1691:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
ARM GAS  /tmp/cceb4mPP.s 			page 35


1692:src/keys.c    **** 		switch ((int)c) {
1693:src/keys.c    **** 		case K_UP:	// up arrow
1694:src/keys.c    **** 			if (--base < RARG_FIX)
1695:src/keys.c    **** 				base = RARG_SIG0;
1696:src/keys.c    **** 			break;
1697:src/keys.c    **** 
1698:src/keys.c    **** 		case K_DOWN:	// down arrow
1699:src/keys.c    **** 		case K01:	// B
1700:src/keys.c    **** 			if (++base > RARG_SIG0)
1701:src/keys.c    **** 				base = RARG_FIX;
1702:src/keys.c    **** 			break;
1703:src/keys.c    **** 		}
1704:src/keys.c    **** 		CmdBase = base;
1705:src/keys.c    **** 	}
1706:src/keys.c    **** #endif
1707:src/keys.c    **** 	/*
1708:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1709:src/keys.c    **** 	 *  Handle the rest here.
1710:src/keys.c    **** 	 */
1711:src/keys.c    **** 	switch ((int)c) {
1712:src/keys.c    **** 	case K_F:
1713:src/keys.c    **** 		if (label_addressing)
1714:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1715:src/keys.c    **** 		break;
1716:src/keys.c    **** 
1717:src/keys.c    **** 	case K_ARROW:		// arrow
1718:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1719:src/keys.c    **** 			State2.ind = ! State2.ind;
1720:src/keys.c    **** 			if (! stack_reg)
1721:src/keys.c    **** 				State2.dot = 0;
1722:src/keys.c    **** 		}
1723:src/keys.c    **** 		break;
1724:src/keys.c    **** 
1725:src/keys.c    **** 	case K_CMPLX:
1726:src/keys.c    **** 		if (State2.ind || State2.dot)
1727:src/keys.c    **** 			break;
1728:src/keys.c    **** 		if (base == RARG_STO)
1729:src/keys.c    **** 			CmdBase = RARG_STOM;
1730:src/keys.c    **** 		else if (base == RARG_RCL)
1731:src/keys.c    **** 			CmdBase = RARG_RCLM;
1732:src/keys.c    **** 		break;
1733:src/keys.c    **** #ifdef DM42
1734:src/keys.c    **** 	case K41:       // T
1735:src/keys.c    **** 	  if (State2.shuffle)
1736:src/keys.c    **** 	    return process_arg_shuffle(3);
1737:src/keys.c    **** 	case K51:       // X
1738:src/keys.c    **** 	  if (State2.shuffle)
1739:src/keys.c    **** 	    return process_arg_shuffle(0);
1740:src/keys.c    **** 	case K52:	// Y
1741:src/keys.c    **** 	  if (State2.shuffle)
1742:src/keys.c    **** 	    return process_arg_shuffle(1);
1743:src/keys.c    **** 	case K53:       // Z
1744:src/keys.c    **** 	  if (State2.shuffle)
1745:src/keys.c    **** 	    return process_arg_shuffle(2);
1746:src/keys.c    **** #else
1747:src/keys.c    **** 	case K63:	// Y
1748:src/keys.c    **** 	  if (State2.shuffle)
ARM GAS  /tmp/cceb4mPP.s 			page 36


1749:src/keys.c    **** 	    return process_arg_shuffle(1);
1750:src/keys.c    **** #endif
1751:src/keys.c    **** 	case K00:	// A
1752:src/keys.c    **** 	case K01:	// B
1753:src/keys.c    **** 	case K02:	// C
1754:src/keys.c    **** 	case K03:	// D
1755:src/keys.c    **** #ifdef DM42
1756:src/keys.c    **** 	case K12:	// I (lastY)
1757:src/keys.c    **** 	case K13:	// J
1758:src/keys.c    **** 	case K14:	// K
1759:src/keys.c    **** 	case K15:	// L (lastX)
1760:src/keys.c    **** #else
1761:src/keys.c    **** 	case K12:	// I (lastY)
1762:src/keys.c    **** 	case K21:	// J
1763:src/keys.c    **** 	case K22:	// K
1764:src/keys.c    **** 	case K23:	// L (lastX)
1765:src/keys.c    **** #endif
1766:src/keys.c    **** 	  if (State2.dot || stack_reg)
1767:src/keys.c    **** 			return arg_eval(n);
1768:src/keys.c    **** 		if ( c <= K03 )
1769:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1770:src/keys.c    **** 		break;
1771:src/keys.c    **** #ifdef DM42
1772:src/keys.c    **** 	case K62:	// '.'
1773:src/keys.c    **** 		return process_arg_dot(base);
1774:src/keys.c    **** 
1775:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1776:src/keys.c    **** 	case K64:		// plus
1777:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1778:src/keys.c    **** 			return arg_eval(n);
1779:src/keys.c    **** 		break;
1780:src/keys.c    **** 	case K54:               // minus
1781:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1782:src/keys.c    **** 			reset_arg();
1783:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1784:src/keys.c    **** 		}
1785:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1786:src/keys.c    **** 		break;
1787:src/keys.c    **** 	case K44:		// multiply
1788:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1789:src/keys.c    **** 			return arg_eval(n);
1790:src/keys.c    **** 		break;
1791:src/keys.c    **** 	case K34:
1792:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1793:src/keys.c    **** 		break;
1794:src/keys.c    **** #else
1795:src/keys.c    **** 	case K62:	// X, '.'
1796:src/keys.c    **** 		if (State2.shuffle)
1797:src/keys.c    **** 			return process_arg_shuffle(0);
1798:src/keys.c    **** 		return process_arg_dot(base);
1799:src/keys.c    **** 
1800:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1801:src/keys.c    **** 	case K64:		// Z register
1802:src/keys.c    **** 		if (State2.shuffle)
1803:src/keys.c    **** 			return process_arg_shuffle(2);
1804:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1805:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/cceb4mPP.s 			page 37


1806:src/keys.c    **** 		break;
1807:src/keys.c    **** 
1808:src/keys.c    **** 	case K54:
1809:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1810:src/keys.c    **** 			reset_arg();
1811:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1812:src/keys.c    **** 		}
1813:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1814:src/keys.c    **** 		break;
1815:src/keys.c    **** 
1816:src/keys.c    **** 	case K44:		// T register
1817:src/keys.c    **** 		if (State2.shuffle)
1818:src/keys.c    **** 			return process_arg_shuffle(3);
1819:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1820:src/keys.c    **** 			return arg_eval(n);
1821:src/keys.c    **** 		break;
1822:src/keys.c    **** 
1823:src/keys.c    **** 	case K34:
1824:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1825:src/keys.c    **** 		break;
1826:src/keys.c    **** #endif
1827:src/keys.c    **** 	case K_UP:
1828:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1829:src/keys.c    **** 		break;
1830:src/keys.c    **** 
1831:src/keys.c    **** 	case K_DOWN:
1832:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1833:src/keys.c    **** 		break;
1834:src/keys.c    **** 
1835:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1836:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1837:src/keys.c    **** 			if (argcmds[base].label) {
1838:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1839:src/keys.c    **** 				State2.multi = 1;
1840:src/keys.c    **** 				State2.alphashift = 0;
1841:src/keys.c    **** 				State2.rarg = 0;
1842:src/keys.c    **** 			} else if (base == RARG_SCI) {
1843:src/keys.c    **** 				reset_arg();
1844:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1845:src/keys.c    **** 			} else if (base == RARG_ENG) {
1846:src/keys.c    **** 				reset_arg();
1847:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1848:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1849:src/keys.c    **** 				State2.dot = 1;
1850:src/keys.c    **** 		} else if (State2.numdigit > 0)
1851:src/keys.c    **** 			return arg_eval(State2.digval);
1852:src/keys.c    **** 		else if (stack_reg)
1853:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1854:src/keys.c    **** 		break;
1855:src/keys.c    **** 
1856:src/keys.c    **** 	case K24:	// <-
1857:src/keys.c    **** 		if (State2.numdigit == 0) {
1858:src/keys.c    **** 			if (State2.dot)
1859:src/keys.c    **** 				State2.dot = 0;
1860:src/keys.c    **** 			else if (State2.local)
1861:src/keys.c    **** 				State2.local = 0;
1862:src/keys.c    **** 			else if (State2.ind)
ARM GAS  /tmp/cceb4mPP.s 			page 38


1863:src/keys.c    **** 				State2.ind = 0;
1864:src/keys.c    **** 			else
1865:src/keys.c    **** 				goto reset;
1866:src/keys.c    **** 		}
1867:src/keys.c    **** 		else {
1868:src/keys.c    **** 			--State2.numdigit;
1869:src/keys.c    **** 			if (State2.shuffle)
1870:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1871:src/keys.c    **** 			else
1872:src/keys.c    **** 				State2.digval /= 10;
1873:src/keys.c    **** 		}
1874:src/keys.c    **** 		break;
1875:src/keys.c    **** 
1876:src/keys.c    **** 	case K60:
1877:src/keys.c    **** 	reset:
1878:src/keys.c    **** 		reset_arg();
1879:src/keys.c    **** 	default:
1880:src/keys.c    **** 		break;
1881:src/keys.c    **** 	}
1882:src/keys.c    **** 	return STATE_UNFINISHED;
1883:src/keys.c    **** }
1884:src/keys.c    **** 
1885:src/keys.c    **** 
1886:src/keys.c    **** /*
1887:src/keys.c    ****  *  Process arguments to the diverse test commands
1888:src/keys.c    ****  */
1889:src/keys.c    **** static int process_test(const keycode c) {
1890:src/keys.c    **** 	int r = State2.test;
1891:src/keys.c    **** 	int cmpx = State2.cmplx;
1892:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1893:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1894:src/keys.c    **** 
1895:src/keys.c    **** 	State2.test = TST_NONE;
1896:src/keys.c    **** 	State2.cmplx = 0;
1897:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1898:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1899:src/keys.c    **** 		// Lettered register
1900:src/keys.c    **** 		if (cmpx && (n & 1)) {
1901:src/keys.c    **** 			if (n == regI_idx)
1902:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1903:src/keys.c    **** 			// Disallow odd complex registers > A
1904:src/keys.c    **** 			goto again;
1905:src/keys.c    **** 		}
1906:src/keys.c    **** 		// Return the command with the register completed
1907:src/keys.c    **** 		return RARG(base, n);
1908:src/keys.c    **** 	}
1909:src/keys.c    **** 	else if ( n == 0 ) {
1910:src/keys.c    **** 		// Special 0
1911:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1912:src/keys.c    **** 	}
1913:src/keys.c    **** 	else if ( n == 1 ) {
1914:src/keys.c    **** 		// Special 1
1915:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1916:src/keys.c    **** 	}
1917:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1918:src/keys.c    **** 		// digit 2..9, -> or .
1919:src/keys.c    **** 		init_arg((enum rarg)base);
ARM GAS  /tmp/cceb4mPP.s 			page 39


1920:src/keys.c    **** 		return process_arg(c);
1921:src/keys.c    **** 	}
1922:src/keys.c    **** 
1923:src/keys.c    **** 	switch (c) {
1924:src/keys.c    **** 	case K11:					// tests vs register
1925:src/keys.c    **** 	case K20:
1926:src/keys.c    **** 		init_arg((enum rarg)base);
1927:src/keys.c    **** 		return STATE_UNFINISHED;
1928:src/keys.c    **** 
1929:src/keys.c    **** 	//case K60:
1930:src/keys.c    **** 	case K24:
1931:src/keys.c    **** 		return STATE_UNFINISHED;
1932:src/keys.c    **** 
1933:src/keys.c    **** 	default:
1934:src/keys.c    **** 		break;
1935:src/keys.c    **** 	}
1936:src/keys.c    **** again:
1937:src/keys.c    **** 	State2.test = r;
1938:src/keys.c    **** 	State2.cmplx = cmpx;
1939:src/keys.c    **** 	return STATE_UNFINISHED;
1940:src/keys.c    **** }
1941:src/keys.c    **** 
1942:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1943:src/keys.c    **** /*
1944:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1945:src/keys.c    ****  */
1946:src/keys.c    **** #define USER_CAT_MAX 100
1947:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1948:src/keys.c    **** 
1949:src/keys.c    **** static int build_user_cat(void)
1950:src/keys.c    **** {
1951:src/keys.c    **** 	// find the label 'CAT'
1952:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1953:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1954:src/keys.c    **** 	int len = 0;
1955:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1956:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1957:src/keys.c    **** 		char buf1[16];
1958:src/keys.c    **** 		int i;
1959:src/keys.c    **** 		s_opcode op;
1960:src/keys.c    **** 	next:
1961:src/keys.c    **** 		pc = do_inc(pc, 0);
1962:src/keys.c    **** 		op = (s_opcode) getprog(pc);
1963:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
1964:src/keys.c    **** 			break;
1965:src/keys.c    **** 		if (isDBL(op))
1966:src/keys.c    **** 			continue;
1967:src/keys.c    **** 		if (isRARG(op)) {
1968:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
1969:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
1970:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
1971:src/keys.c    **** 				op = op & 0xff00;	// remove argument
1972:src/keys.c    **** 		}
1973:src/keys.c    **** 		catcmd(op, buf1);
1974:src/keys.c    **** 		for (i = 0; i < len; ++i) {
1975:src/keys.c    **** 			// Find a position in the table to insert the new entry
1976:src/keys.c    **** 			char buf2[16];
ARM GAS  /tmp/cceb4mPP.s 			page 40


1977:src/keys.c    **** 			const char *p, *q;
1978:src/keys.c    **** 			int diff = 0;
1979:src/keys.c    **** 			if (op == UserCat[i]) {
1980:src/keys.c    **** 				// duplicate entry - ignore
1981:src/keys.c    **** 				goto next;
1982:src/keys.c    **** 			}
1983:src/keys.c    **** 			p = buf1;
1984:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
1985:src/keys.c    **** 				++p;
1986:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
1987:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
1988:src/keys.c    **** 				++q;
1989:src/keys.c    **** 			diff = 0;
1990:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
1991:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
1992:src/keys.c    **** 			}
1993:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
1994:src/keys.c    **** 				// identical according to sort order, insert after
1995:src/keys.c    **** 				++i;
1996:src/keys.c    **** 				break;
1997:src/keys.c    **** 			}
1998:src/keys.c    **** 			if (diff > 0) {
1999:src/keys.c    **** 				// insert new entry before the one found because this is greater
2000:src/keys.c    **** 				break;
2001:src/keys.c    **** 			}
2002:src/keys.c    **** 		}
2003:src/keys.c    **** 		if (i < len) {
2004:src/keys.c    **** 			// Make room
2005:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2006:src/keys.c    **** 		}
2007:src/keys.c    **** 		UserCat[i] = op;
2008:src/keys.c    **** 		++len;
2009:src/keys.c    **** 	}
2010:src/keys.c    **** 	// return the number of entries
2011:src/keys.c    **** 	return len;
2012:src/keys.c    **** }
2013:src/keys.c    **** #endif
2014:src/keys.c    **** 
2015:src/keys.c    **** /* Return the number of entries in the current catalogue.
2016:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2017:src/keys.c    ****  * likely be the most space efficient method.
2018:src/keys.c    ****  */
2019:src/keys.c    **** int current_catalogue_max(void) {
2020:src/keys.c    **** 	// A quick table of catalogue sizes
2021:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2022:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2023:src/keys.c    **** 	{
2024:src/keys.c    **** 		0, // NONE
2025:src/keys.c    **** 		SIZE_catalogue,
2026:src/keys.c    **** 		SIZE_cplx_catalogue,
2027:src/keys.c    **** 		SIZE_stats_catalogue,
2028:src/keys.c    **** 		SIZE_prob_catalogue,
2029:src/keys.c    **** 		SIZE_int_catalogue,
2030:src/keys.c    **** 		SIZE_prog_catalogue,
2031:src/keys.c    **** 		SIZE_program_xfcn,
2032:src/keys.c    **** 		SIZE_test_catalogue,
2033:src/keys.c    **** 		SIZE_mode_catalogue,
ARM GAS  /tmp/cceb4mPP.s 			page 41


2034:src/keys.c    **** 		SIZE_alpha_catalogue,
2035:src/keys.c    **** 		SIZE_alpha_symbols,
2036:src/keys.c    **** 		SIZE_alpha_compares,
2037:src/keys.c    **** 		SIZE_alpha_arrows,
2038:src/keys.c    **** 		SIZE_alpha_letters,
2039:src/keys.c    **** 		SIZE_alpha_subscripts,
2040:src/keys.c    **** 		NUM_CONSTS_CAT,
2041:src/keys.c    **** 		NUM_CONSTS_CAT,
2042:src/keys.c    **** 		SIZE_conv_catalogue,
2043:src/keys.c    **** 		SIZE_sums_catalogue,
2044:src/keys.c    **** 		SIZE_matrix_catalogue,
2045:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2046:src/keys.c    **** 		SIZE_internal_catalogue,
2047:src/keys.c    **** #endif
2048:src/keys.c    **** 	};
2049:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2050:src/keys.c    **** 	const int cat = State2.catalogue;
2051:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2052:src/keys.c    **** #else
2053:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2054:src/keys.c    **** #endif
2055:src/keys.c    **** }
2056:src/keys.c    **** 
2057:src/keys.c    **** 
2058:src/keys.c    **** /* Look up the character position in the given byte array and
2059:src/keys.c    ****  * build the alpha op-code for it.
2060:src/keys.c    ****  */
2061:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2062:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2063:src/keys.c    **** }
2064:src/keys.c    **** 
2065:src/keys.c    **** 
2066:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2067:src/keys.c    ****  */
2068:src/keys.c    **** opcode current_catalogue(int n) {
2069:src/keys.c    **** 	// A quick table of catalogue tables
2070:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2071:src/keys.c    **** 	static const void *catalogues[] =
2072:src/keys.c    **** 	{
2073:src/keys.c    **** 		NULL, // NONE
2074:src/keys.c    **** 		catalogue,
2075:src/keys.c    **** 		cplx_catalogue,
2076:src/keys.c    **** 		stats_catalogue,
2077:src/keys.c    **** 		prob_catalogue,
2078:src/keys.c    **** 		int_catalogue,
2079:src/keys.c    **** 		prog_catalogue,
2080:src/keys.c    **** 		program_xfcn,
2081:src/keys.c    **** 		test_catalogue,
2082:src/keys.c    **** 		mode_catalogue,
2083:src/keys.c    **** 		alpha_catalogue,
2084:src/keys.c    **** 		alpha_symbols,
2085:src/keys.c    **** 		alpha_compares,
2086:src/keys.c    **** 		alpha_arrows,
2087:src/keys.c    **** 		alpha_letters,
2088:src/keys.c    **** 		alpha_subscripts,
2089:src/keys.c    **** 		NULL,
2090:src/keys.c    **** 		NULL,
ARM GAS  /tmp/cceb4mPP.s 			page 42


2091:src/keys.c    **** 		NULL, //CONV
2092:src/keys.c    **** 		sums_catalogue,
2093:src/keys.c    **** 		matrix_catalogue,
2094:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2095:src/keys.c    **** 		internal_catalogue,
2096:src/keys.c    **** #endif
2097:src/keys.c    **** 	};
2098:src/keys.c    **** 	const unsigned char *cat;
2099:src/keys.c    **** 	unsigned int c = State2.catalogue;
2100:src/keys.c    **** 	int m, i;
2101:src/keys.c    **** 	unsigned p, q;
2102:src/keys.c    **** 
2103:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2104:src/keys.c    **** 		if (n == OP_ZERO)
2105:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2106:src/keys.c    **** 		return CONST(n);
2107:src/keys.c    **** 	}
2108:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2109:src/keys.c    **** 		if (n == OP_ZERO)
2110:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2111:src/keys.c    **** 		return CONST_CMPLX(n);
2112:src/keys.c    **** 	}
2113:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2114:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2115:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2116:src/keys.c    **** 			// Monadic conversion routine
2117:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2118:src/keys.c    **** 		else
2119:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2120:src/keys.c    **** 	}
2121:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2122:src/keys.c    **** 	if (c == CATALOGUE_USER)
2123:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2124:src/keys.c    **** #endif
2125:src/keys.c    **** 
2126:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2127:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2128:src/keys.c    **** 	else
2129:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2130:src/keys.c    **** 
2131:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2132:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2133:src/keys.c    **** 	}
2134:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2135:src/keys.c    **** 		return OP_NIL | OP_NOP;
2136:src/keys.c    **** 
2137:src/keys.c    **** 	/* Unpack the opcode */
2138:src/keys.c    **** 	cat += n + (n >> 2);
2139:src/keys.c    **** 	p = cat[0];
2140:src/keys.c    **** 	q = cat[1];
2141:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2142:src/keys.c    **** 
2143:src/keys.c    **** 	/* Now figure out which opcode it really is */
2144:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2145:src/keys.c    **** 		if (m < opcode_breaks[i])
2146:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2147:src/keys.c    **** 		m -= opcode_breaks[i];
ARM GAS  /tmp/cceb4mPP.s 			page 43


2148:src/keys.c    **** 	}
2149:src/keys.c    **** 	return RARG_BASEOP(m);
2150:src/keys.c    **** }
2151:src/keys.c    **** 
2152:src/keys.c    **** 
2153:src/keys.c    **** /*
2154:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2155:src/keys.c    ****  *  in multi character commands.
2156:src/keys.c    ****  */
2157:src/keys.c    **** static int forbidden_alpha(int pos) {
2158:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2159:src/keys.c    **** }
2160:src/keys.c    **** 
2161:src/keys.c    **** /*
2162:src/keys.c    ****  *  Catalogue navigation
2163:src/keys.c    ****  */
2164:src/keys.c    **** static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2165:src/keys.c    **** 	int pos = State.catpos;
2166:src/keys.c    **** 	int ch;
2167:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2168:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
2169:src/keys.c    **** 
2170:src/keys.c    **** 	if (shift == SHIFT_N) {
2171:src/keys.c    **** 		switch (c) {
2172:src/keys.c    **** #ifdef DM42
2173:src/keys.c    **** 		case K05:			// XEQ accepts command
2174:src/keys.c    **** #else	  
2175:src/keys.c    **** 		case K30:			// XEQ accepts command
2176:src/keys.c    **** #endif						  
2177:src/keys.c    **** 		case K20:			// Enter accepts command
2178:src/keys.c    **** 			if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2179:src/keys.c    **** 				const opcode op = current_catalogue(pos);
2180:src/keys.c    **** 
2181:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2182:src/keys.c    **** 
2183:src/keys.c    **** 				if (isRARG(op)) {
2184:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
2185:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2186:src/keys.c    **** 						return op;
2187:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2188:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2189:src/keys.c    **** 					else
2190:src/keys.c    **** 						init_arg(RARG_CMD(op));
2191:src/keys.c    **** 				}
2192:src/keys.c    **** 				else {
2193:src/keys.c    **** 					return check_confirm(op);
2194:src/keys.c    **** 				}
2195:src/keys.c    **** 			} else
2196:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2197:src/keys.c    **** 			return STATE_UNFINISHED;
2198:src/keys.c    **** 
2199:src/keys.c    **** 		case K24:			// backspace
2200:src/keys.c    **** 		    if (CmdLineLength > 0 && Keyticks < 30) {
2201:src/keys.c    **** 		      if (--CmdLineLength > 0)
2202:src/keys.c    **** 					goto search;
2203:src/keys.c    **** 				pos = 0;
2204:src/keys.c    **** 				goto set_pos;
ARM GAS  /tmp/cceb4mPP.s 			page 44


2205:src/keys.c    **** 			} else
2206:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2207:src/keys.c    **** 			return STATE_UNFINISHED;
2208:src/keys.c    **** 
2209:src/keys.c    **** 		case K60:
2210:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2211:src/keys.c    **** 			return STATE_UNFINISHED;
2212:src/keys.c    **** 
2213:src/keys.c    **** 		case K_UP:
2214:src/keys.c    **** 			CmdLineLength = 0;
2215:src/keys.c    **** 			if (pos == 0)
2216:src/keys.c    **** 				goto set_max;
2217:src/keys.c    **** 			else
2218:src/keys.c    **** 				--pos;
2219:src/keys.c    **** 			goto set_pos;
2220:src/keys.c    **** 
2221:src/keys.c    **** 		case K_DOWN:
2222:src/keys.c    **** 			CmdLineLength = 0;
2223:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2224:src/keys.c    **** 			if (pos >= ctmax)
2225:src/keys.c    **** 				pos = 0;
2226:src/keys.c    **** 			goto set_pos;
2227:src/keys.c    **** 
2228:src/keys.c    **** 		default:
2229:src/keys.c    **** 			break;
2230:src/keys.c    **** 		}
2231:src/keys.c    **** 	} else if (shift == SHIFT_F) {
2232:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
2233:src/keys.c    **** 			/*
2234:src/keys.c    **** 			 * f 1/x in conversion catalogue
2235:src/keys.c    **** 			 */
2236:src/keys.c    **** 			/* A small table of commands in pairs containing inverse commands.
2237:src/keys.c    **** 			 * This table could be unsigned characters only storing the monadic kind.
2238:src/keys.c    **** 			 * this saves twelve bytes in the table at a cost of some bytes in the code below.
2239:src/keys.c    **** 			 * Not worth it since the maximum saving will be less than twelve bytes.
2240:src/keys.c    **** 			 */
2241:src/keys.c    **** 			static const unsigned short int conv_mapping[] = {
2242:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2243:src/keys.c    **** 				OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2244:src/keys.c    **** 				OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2245:src/keys.c    **** 				OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2246:src/keys.c    **** 				OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2247:src/keys.c    **** 				OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2248:src/keys.c    **** 			};
2249:src/keys.c    **** 			const opcode op = current_catalogue(pos);
2250:src/keys.c    **** 			int i;
2251:src/keys.c    **** 
2252:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2253:src/keys.c    **** 			if (isRARG(op))
2254:src/keys.c    **** 				return op ^ 1;
2255:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2256:src/keys.c    **** 				if (op == conv_mapping[i])
2257:src/keys.c    **** 					return conv_mapping[i^1];
2258:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
2259:src/keys.c    **** 		}
2260:src/keys.c    **** 		else if (c == K60 && (State2.alphas || State2.multi)) {
2261:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
ARM GAS  /tmp/cceb4mPP.s 			page 45


2262:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2263:src/keys.c    **** 			return STATE_UNFINISHED;
2264:src/keys.c    **** 		}
2265:src/keys.c    **** 	} else if (shift == SHIFT_G) {
2266:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
2267:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2268:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
2269:src/keys.c    **** 		}
2270:src/keys.c    **** 	}
2271:src/keys.c    **** 
2272:src/keys.c    **** 	/* We've got a key press, map it to a character and try to
2273:src/keys.c    **** 	 * jump to the appropriate catalogue entry.
2274:src/keys.c    **** 	 */
2275:src/keys.c    **** 	ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2276:src/keys.c    **** 	reset_shift();
2277:src/keys.c    **** 	if (ch == '\0')
2278:src/keys.c    **** 		return STATE_UNFINISHED;
2279:src/keys.c    **** 	if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2280:src/keys.c    **** 		// No multi character search in alpha catalogues
2281:src/keys.c    **** 		CmdLineLength = 0;
2282:src/keys.c    **** 	}
2283:src/keys.c    **** 	if (CmdLineLength < 10)
2284:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
2285:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
2286:src/keys.c    **** 
2287:src/keys.c    **** search:
2288:src/keys.c    **** 	Cmdline[CmdLineLength] = '\0';
2289:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2290:src/keys.c    **** 		char buf[16];
2291:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2292:src/keys.c    **** 		int i;
2293:src/keys.c    **** 
2294:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2295:src/keys.c    **** 			cmd++;
2296:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2297:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2298:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
2299:src/keys.c    **** 			if (c > cl)
2300:src/keys.c    **** 				goto set_pos;
2301:src/keys.c    **** 			else if (c < cl)
2302:src/keys.c    **** 				break;
2303:src/keys.c    **** 		}
2304:src/keys.c    **** 		if (Cmdline[i] == '\0')
2305:src/keys.c    **** 			goto set_pos;
2306:src/keys.c    **** 	}
2307:src/keys.c    **** set_max:
2308:src/keys.c    **** 	pos = ctmax - 1;
2309:src/keys.c    **** set_pos:
2310:src/keys.c    **** 	while (is_multi && pos && forbidden_alpha(pos))
2311:src/keys.c    **** 		--pos;
2312:src/keys.c    **** 	State.catpos = pos;
2313:src/keys.c    **** 	return STATE_UNFINISHED;
2314:src/keys.c    **** }
2315:src/keys.c    **** 
2316:src/keys.c    **** #ifndef REALBUILD
2317:src/keys.c    **** int find_pos(const char* text) {
2318:src/keys.c    **** 	int pos;
ARM GAS  /tmp/cceb4mPP.s 			page 46


2319:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2320:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2321:src/keys.c    **** 		char buf[16];
2322:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2323:src/keys.c    **** 		int i;
2324:src/keys.c    **** 
2325:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2326:src/keys.c    **** 			cmd++;
2327:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2329:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2330:src/keys.c    **** 			if (c > cl)
2331:src/keys.c    **** 				return pos;
2332:src/keys.c    **** 			else if (c < cl)
2333:src/keys.c    **** 				break;
2334:src/keys.c    **** 		}
2335:src/keys.c    **** 		if (text[i] == '\0')
2336:src/keys.c    **** 			return pos;
2337:src/keys.c    **** 	}
2338:src/keys.c    **** 	return pos;
2339:src/keys.c    **** }
2340:src/keys.c    **** 
2341:src/keys.c    **** #endif
2342:src/keys.c    **** 
2343:src/keys.c    **** /* Multi (2) word instruction entry
2344:src/keys.c    ****  */
2345:src/keys.c    **** static void reset_multi(void) {
2346:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2347:src/keys.c    **** 	State2.multi = 0;
2348:src/keys.c    **** 	if (! State2.alphas )
2349:src/keys.c    **** 		State2.alphashift = 0;
2350:src/keys.c    **** }
2351:src/keys.c    **** 
2352:src/keys.c    **** static int process_multi(const keycode c) {
2353:src/keys.c    **** 	enum shifts shift = reset_shift();
2354:src/keys.c    **** 	unsigned int ch = 0;
2355:src/keys.c    **** 	unsigned int opcode;
2356:src/keys.c    **** 
2357:src/keys.c    **** 	if (State2.catalogue) {
2358:src/keys.c    **** 		// Alpha catalogue from within multi character command
2359:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2360:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2361:src/keys.c    **** 			return opcode;
2362:src/keys.c    **** 		ch = (unsigned char) opcode;
2363:src/keys.c    **** 		goto add_char;
2364:src/keys.c    **** 	}
2365:src/keys.c    **** 
2366:src/keys.c    **** 	switch (c) {
2367:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2368:src/keys.c    **** 		if (shift != SHIFT_N)
2369:src/keys.c    **** 				break;
2370:src/keys.c    **** 		reset_multi();
2371:src/keys.c    **** 		if (State2.numdigit == 0)
2372:src/keys.c    **** 			return STATE_UNFINISHED;
2373:src/keys.c    **** 		else if (State2.numdigit == 1)
2374:src/keys.c    **** 			State2.digval2 = 0;
2375:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/cceb4mPP.s 			page 47


2376:src/keys.c    **** 
2377:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2378:src/keys.c    **** 		if (shift != SHIFT_H) {
2379:src/keys.c    **** 			if (State2.numdigit == 0)
2380:src/keys.c    **** 				reset_multi();
2381:src/keys.c    **** 			else
2382:src/keys.c    **** 				State2.numdigit--;
2383:src/keys.c    **** 			return STATE_UNFINISHED;
2384:src/keys.c    **** 		}
2385:src/keys.c    **** 		break;
2386:src/keys.c    **** 
2387:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2388:src/keys.c    **** 		if (shift == SHIFT_F)
2389:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2390:src/keys.c    **** 		else
2391:src/keys.c    **** 			reset_multi();
2392:src/keys.c    **** 		return STATE_UNFINISHED;
2393:src/keys.c    **** 
2394:src/keys.c    **** 	default:
2395:src/keys.c    **** 		break;
2396:src/keys.c    **** 		}
2397:src/keys.c    **** 
2398:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2399:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2400:src/keys.c    **** 	if (ch == 0)
2401:src/keys.c    **** 		return STATE_UNFINISHED;
2402:src/keys.c    **** add_char:
2403:src/keys.c    **** 	if (State2.numdigit == 0) {
2404:src/keys.c    **** 		State2.digval = ch;
2405:src/keys.c    **** 		State2.numdigit = 1;
2406:src/keys.c    **** 		return STATE_UNFINISHED;
2407:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2408:src/keys.c    **** 		State2.digval2 = ch;
2409:src/keys.c    **** 		State2.numdigit = 2;
2410:src/keys.c    **** 		return STATE_UNFINISHED;
2411:src/keys.c    **** 	}
2412:src/keys.c    **** 	reset_multi();
2413:src/keys.c    **** 
2414:src/keys.c    **** fin:
2415:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2416:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2417:src/keys.c    **** 	return opcode;
2418:src/keys.c    **** }
2419:src/keys.c    **** 
2420:src/keys.c    **** 
2421:src/keys.c    **** /* Handle YES/NO confirmations
2422:src/keys.c    ****  */
2423:src/keys.c    **** static int process_confirm(const keycode c) {
2424:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2425:src/keys.c    **** 	switch (c) {
2426:src/keys.c    **** #ifdef DM42
2427:src/keys.c    **** 	case K52:
2428:src/keys.c    **** #endif
2429:src/keys.c    **** 	case K63:			// Yes
2430:src/keys.c    **** 	  switch (State2.confirm) {
2431:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2432:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
ARM GAS  /tmp/cceb4mPP.s 			page 48


2433:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2434:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2435:src/keys.c    **** 	  }
2436:src/keys.c    **** 	case K24:
2437:src/keys.c    **** #ifdef DM42
2438:src/keys.c    **** 	case K22:
2439:src/keys.c    **** #else
2440:src/keys.c    **** 	case K32:
2441:src/keys.c    **** #endif
2442:src/keys.c    **** 	  // No
2443:src/keys.c    **** 	  State2.confirm = 0;
2444:src/keys.c    **** 	  State2.digval = 0;
2445:src/keys.c    **** 	  break;
2446:src/keys.c    **** 	default:			// No state change
2447:src/keys.c    **** 	  break;
2448:src/keys.c    **** 	}
2449:src/keys.c    **** 	return STATE_UNFINISHED;
2450:src/keys.c    **** }
2451:src/keys.c    **** 
2452:src/keys.c    **** 
2453:src/keys.c    **** /*
2454:src/keys.c    ****  *  STATUS
2455:src/keys.c    ****  */
2456:src/keys.c    **** static int process_status(const keycode c) {
2457:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2458:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2459:src/keys.c    **** 
2460:src/keys.c    **** 	if (c == K_UP) {
2461:src/keys.c    **** 		if (--n < -2)
2462:src/keys.c    **** 			n = max;
2463:src/keys.c    **** 	}
2464:src/keys.c    **** 	else if (c == K_DOWN) {
2465:src/keys.c    **** 		if (++n > max)
2466:src/keys.c    **** 			n = -2;
2467:src/keys.c    **** 	}
2468:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2469:src/keys.c    **** 		State2.status = 0;
2470:src/keys.c    **** 		return STATE_UNFINISHED;
2471:src/keys.c    **** 	} 
2472:src/keys.c    **** 	else {
2473:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2474:src/keys.c    **** 		if (nn <= 9)
2475:src/keys.c    **** 			n = nn;
2476:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2477:src/keys.c    **** 			n = n == max ? 10 : max;
2478:src/keys.c    **** 		else if (nn != NO_REG)
2479:src/keys.c    **** 			n = 10; 
2480:src/keys.c    **** 	}
2481:src/keys.c    **** 	State2.status = n + 3;
2482:src/keys.c    **** 
2483:src/keys.c    **** 	return STATE_UNFINISHED;
2484:src/keys.c    **** }
2485:src/keys.c    **** 
2486:src/keys.c    **** 
2487:src/keys.c    **** /*
2488:src/keys.c    ****  *  CAT helper
2489:src/keys.c    ****  */
ARM GAS  /tmp/cceb4mPP.s 			page 49


2490:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2490 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2491:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2491 2 view .LVU58
2490:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2490 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2490:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2490 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2491 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2492:src/keys.c    **** 
2493:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2493 2 is_stmt 1 view .LVU62
 234              		.loc 1 2493 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2493 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2493 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2493 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2494:src/keys.c    **** }
 245              		.loc 1 2494 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2493:src/keys.c    **** }
 249              		.loc 1 2493 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2494 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2493:src/keys.c    **** }
 256              		.loc 1 2493 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2493:src/keys.c    **** }
 259              		.loc 1 2493 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2494 1 discriminator 5 view .LVU72
ARM GAS  /tmp/cceb4mPP.s 			page 50


 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2494 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2495:src/keys.c    **** 
2496:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2496 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2496 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2496 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2497:src/keys.c    **** 	do {
 294              		.loc 1 2497 2 is_stmt 1 view .LVU77
2498:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2498 3 view .LVU78
2499:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2499 4 view .LVU79
2496:src/keys.c    **** 	do {
 297              		.loc 1 2496 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2499 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2500:src/keys.c    **** 				pc = do_inc(pc, 0);
2501:src/keys.c    **** 				if (PcWrapped)
2502:src/keys.c    **** 					break;
2503:src/keys.c    **** 			}
2504:src/keys.c    **** 			else
2505:src/keys.c    **** 				inc = 1;
2506:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2506 4 is_stmt 1 view .LVU82
 304              		.loc 1 2506 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2506 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2506 7 view .LVU85
ARM GAS  /tmp/cceb4mPP.s 			page 51


 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2506 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2500:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2500 5 is_stmt 1 view .LVU87
2500:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2500 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2501:src/keys.c    **** 					break;
 323              		.loc 1 2501 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2500:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2500 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2501:src/keys.c    **** 					break;
 328              		.loc 1 2501 5 is_stmt 1 view .LVU91
2501:src/keys.c    **** 					break;
 329              		.loc 1 2501 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2507:src/keys.c    **** 				return pc;
2508:src/keys.c    **** 			}
2509:src/keys.c    **** 		}
2510:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2510 3 is_stmt 1 view .LVU93
 333              		.loc 1 2510 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2510 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2511:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2511 10 is_stmt 1 view .LVU96
 342              		.loc 1 2511 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2511 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2512:src/keys.c    **** 	return pc;
2513:src/keys.c    **** }
 351              		.loc 1 2513 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
ARM GAS  /tmp/cceb4mPP.s 			page 52


 355              	.L38:
 356              		.loc 1 2513 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 514 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 515 2 view .LVU102
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 514 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 515 37 view .LVU104
 387 0002 3A4C     		ldr	r4, .L58
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 515 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D8B9     		cbnz	r0, .L40
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 515 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 515 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 517:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 517 3 is_stmt 1 view .LVU108
 517:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 517 18 is_stmt 0 view .LVU109
 397 000c 384A     		ldr	r2, .L58+4
 518:src/keys.c    **** 	}
 398              		.loc 1 518 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 517:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 517 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
ARM GAS  /tmp/cceb4mPP.s 			page 53


 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 518:src/keys.c    **** 	}
 405              		.loc 1 518 3 is_stmt 1 view .LVU112
 406              	.L41:
 520:src/keys.c    **** 
 407              		.loc 1 520 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 522:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 522 2 view .LVU114
 523:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 523 2 view .LVU115
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 524 2 view .LVU116
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 549 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 524 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 549 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 524 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 423              		.loc 1 525 2 is_stmt 1 view .LVU121
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 527 2 view .LVU122
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 548 3 view .LVU123
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 548 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 549 3 is_stmt 1 view .LVU125
 550:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 550 3 view .LVU126
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 555 2 view .LVU127
 431              	.LBB232:
 432              	.LBI232:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 102 13 view .LVU128
 434              	.LBE232:
 103:src/keys.c    **** }
 435              		.loc 1 103 2 view .LVU129
 436              	.LVL37:
 437              	.LBB249:
 438              	.LBB233:
 439              	.LBI233:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 92 20 view .LVU130
ARM GAS  /tmp/cceb4mPP.s 			page 54


 441              	.LBB234:
  93:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 93 2 view .LVU131
 443              	.LBB235:
 444              	.LBI235:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 84 13 view .LVU132
 446              	.LBB236:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 85 2 view .LVU133
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 85 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  86:src/keys.c    **** }
 451              		.loc 1 86 2 is_stmt 1 view .LVU135
 452              	.LBE236:
 453              	.LBE235:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 454              		.loc 1 94 2 view .LVU136
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 455              		.loc 1 94 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 458              		.loc 1 95 2 is_stmt 1 view .LVU138
  95:src/keys.c    **** 	return r;
 459              		.loc 1 95 19 is_stmt 0 view .LVU139
 460 003c 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 461              		.loc 1 96 2 is_stmt 1 view .LVU140
 462              	.LVL39:
  96:src/keys.c    **** }
 463              		.loc 1 96 2 is_stmt 0 view .LVU141
 464              	.LBE234:
 465              	.LBE233:
 466              	.LBE249:
 559:src/keys.c    **** 
 467              		.loc 1 559 1 view .LVU142
 468 003e 38BD     		pop	{r3, r4, r5, pc}
 469              	.LVL40:
 470              	.L40:
 520:src/keys.c    **** 
 471              		.loc 1 520 2 is_stmt 1 view .LVU143
 472 0040 FFF7FEFF 		bl	process_cmdline
 473              	.LVL41:
 522:src/keys.c    **** 	State2.registerlist = 0;
 474              		.loc 1 522 2 view .LVU144
 523:src/keys.c    **** 	State2.status = 0;
 475              		.loc 1 523 2 view .LVU145
 522:src/keys.c    **** 	State2.registerlist = 0;
 476              		.loc 1 522 19 is_stmt 0 view .LVU146
 477 0044 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 478              		.loc 1 524 16 view .LVU147
 479 0046 0022     		movs	r2, #0
 522:src/keys.c    **** 	State2.registerlist = 0;
ARM GAS  /tmp/cceb4mPP.s 			page 55


 480              		.loc 1 522 19 view .LVU148
 481 0048 23F00C03 		bic	r3, r3, #12
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 482              		.loc 1 527 2 view .LVU149
 483 004c 162D     		cmp	r5, #22
 522:src/keys.c    **** 	State2.registerlist = 0;
 484              		.loc 1 522 19 view .LVU150
 485 004e E375     		strb	r3, [r4, #23]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 486              		.loc 1 524 2 is_stmt 1 view .LVU151
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 487              		.loc 1 524 16 is_stmt 0 view .LVU152
 488 0050 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 489              		.loc 1 525 2 is_stmt 1 view .LVU153
 525:src/keys.c    **** 
 490              		.loc 1 525 19 is_stmt 0 view .LVU154
 491 0052 A273     		strb	r2, [r4, #14]
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 492              		.loc 1 527 2 is_stmt 1 view .LVU155
 493 0054 1DD0     		beq	.L42
 494 0056 172D     		cmp	r5, #23
 495 0058 07D1     		bne	.L56
 543:src/keys.c    **** 		break;
 496              		.loc 1 543 3 view .LVU156
 543:src/keys.c    **** 		break;
 497              		.loc 1 543 17 is_stmt 0 view .LVU157
 498 005a 0123     		movs	r3, #1
 499 005c 2373     		strb	r3, [r4, #12]
 544:src/keys.c    **** 
 500              		.loc 1 544 3 is_stmt 1 view .LVU158
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 501              		.loc 1 555 2 view .LVU159
 502              	.LBB250:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 503              		.loc 1 102 13 view .LVU160
 504              	.LBE250:
 103:src/keys.c    **** }
 505              		.loc 1 103 2 view .LVU161
 506              	.LVL42:
 507              	.LBB251:
 508              	.LBB246:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 509              		.loc 1 92 20 view .LVU162
 510              	.LBB243:
  93:src/keys.c    **** 	State2.shifts = shift;
 511              		.loc 1 93 2 view .LVU163
 512              	.LBB240:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 513              		.loc 1 84 13 view .LVU164
 514              	.LBB237:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 515              		.loc 1 85 2 view .LVU165
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 516              		.loc 1 85 18 is_stmt 0 view .LVU166
 517 005e FFF7FEFF 		bl	shift_down
 518              	.LVL43:
ARM GAS  /tmp/cceb4mPP.s 			page 56


  86:src/keys.c    **** }
 519              		.loc 1 86 2 is_stmt 1 view .LVU167
 520              	.LBE237:
 521              	.LBE240:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 522              		.loc 1 94 2 view .LVU168
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 523              		.loc 1 94 16 is_stmt 0 view .LVU169
 524 0062 0023     		movs	r3, #0
 525 0064 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 526              		.loc 1 95 2 is_stmt 1 view .LVU170
  95:src/keys.c    **** 	return r;
 527              		.loc 1 95 19 is_stmt 0 view .LVU171
 528 0066 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 529              		.loc 1 96 2 is_stmt 1 view .LVU172
 530              	.LVL44:
  96:src/keys.c    **** }
 531              		.loc 1 96 2 is_stmt 0 view .LVU173
 532              	.LBE243:
 533              	.LBE246:
 534              	.LBE251:
 559:src/keys.c    **** 
 535              		.loc 1 559 1 view .LVU174
 536 0068 38BD     		pop	{r3, r4, r5, pc}
 537              	.L56:
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 538              		.loc 1 527 2 view .LVU175
 539 006a 152D     		cmp	r5, #21
 540 006c 1ED1     		bne	.L44
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 541              		.loc 1 530 3 is_stmt 1 view .LVU176
 531:src/keys.c    **** 		break;
 542              		.loc 1 531 41 is_stmt 0 view .LVU177
 543 006e 2049     		ldr	r1, .L58+4
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 544              		.loc 1 530 20 view .LVU178
 545 0070 DBB2     		uxtb	r3, r3
 531:src/keys.c    **** 		break;
 546              		.loc 1 531 41 view .LVU179
 547 0072 0968     		ldr	r1, [r1]
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 548              		.loc 1 530 20 view .LVU180
 549 0074 43F00403 		orr	r3, r3, #4
 550 0078 E375     		strb	r3, [r4, #23]
 531:src/keys.c    **** 		break;
 551              		.loc 1 531 3 is_stmt 1 view .LVU181
 531:src/keys.c    **** 		break;
 552              		.loc 1 531 19 is_stmt 0 view .LVU182
 553 007a B1F8EC07 		ldrh	r0, [r1, #2028]
 554 007e 1146     		mov	r1, r2
 555 0080 FFF7FEFF 		bl	advance_to_next_label
 556              	.LVL45:
 531:src/keys.c    **** 		break;
 557              		.loc 1 531 17 view .LVU183
 558 0084 2081     		strh	r0, [r4, #8]	@ movhi
ARM GAS  /tmp/cceb4mPP.s 			page 57


 532:src/keys.c    **** 	
 559              		.loc 1 532 3 is_stmt 1 view .LVU184
 560              	.L45:
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 561              		.loc 1 555 2 view .LVU185
 562              	.LBB252:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 563              		.loc 1 102 13 view .LVU186
 564              	.LBE252:
 103:src/keys.c    **** }
 565              		.loc 1 103 2 view .LVU187
 566              	.LVL46:
 567              	.LBB253:
 568              	.LBB247:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 569              		.loc 1 92 20 view .LVU188
 570              	.LBB244:
  93:src/keys.c    **** 	State2.shifts = shift;
 571              		.loc 1 93 2 view .LVU189
 572              	.LBB241:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 573              		.loc 1 84 13 view .LVU190
 574              	.LBB238:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 575              		.loc 1 85 2 view .LVU191
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 576              		.loc 1 85 18 is_stmt 0 view .LVU192
 577 0086 FFF7FEFF 		bl	shift_down
 578              	.LVL47:
  86:src/keys.c    **** }
 579              		.loc 1 86 2 is_stmt 1 view .LVU193
 580              	.LBE238:
 581              	.LBE241:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 582              		.loc 1 94 2 view .LVU194
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 583              		.loc 1 94 16 is_stmt 0 view .LVU195
 584 008a 0023     		movs	r3, #0
 585 008c 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 586              		.loc 1 95 2 is_stmt 1 view .LVU196
  95:src/keys.c    **** 	return r;
 587              		.loc 1 95 19 is_stmt 0 view .LVU197
 588 008e 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 589              		.loc 1 96 2 is_stmt 1 view .LVU198
 590              	.LVL48:
  96:src/keys.c    **** }
 591              		.loc 1 96 2 is_stmt 0 view .LVU199
 592              	.LBE244:
 593              	.LBE247:
 594              	.LBE253:
 559:src/keys.c    **** 
 595              		.loc 1 559 1 view .LVU200
 596 0090 38BD     		pop	{r3, r4, r5, pc}
 597              	.L42:
 536:src/keys.c    **** 		State2.digval = regX_idx;
ARM GAS  /tmp/cceb4mPP.s 			page 58


 598              		.loc 1 536 3 is_stmt 1 view .LVU201
 536:src/keys.c    **** 		State2.digval = regX_idx;
 599              		.loc 1 536 23 is_stmt 0 view .LVU202
 600 0092 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 538:src/keys.c    **** 		break;
 601              		.loc 1 538 18 view .LVU203
 602 0094 A272     		strb	r2, [r4, #10]
 536:src/keys.c    **** 		State2.digval = regX_idx;
 603              		.loc 1 536 23 view .LVU204
 604 0096 43F00803 		orr	r3, r3, #8
 537:src/keys.c    **** 		State2.digval2 = 0;
 605              		.loc 1 537 17 view .LVU205
 606 009a 6422     		movs	r2, #100
 536:src/keys.c    **** 		State2.digval = regX_idx;
 607              		.loc 1 536 23 view .LVU206
 608 009c E375     		strb	r3, [r4, #23]
 537:src/keys.c    **** 		State2.digval2 = 0;
 609              		.loc 1 537 3 is_stmt 1 view .LVU207
 537:src/keys.c    **** 		State2.digval2 = 0;
 610              		.loc 1 537 17 is_stmt 0 view .LVU208
 611 009e 2281     		strh	r2, [r4, #8]	@ movhi
 538:src/keys.c    **** 		break;
 612              		.loc 1 538 3 is_stmt 1 view .LVU209
 539:src/keys.c    **** 
 613              		.loc 1 539 3 view .LVU210
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 614              		.loc 1 555 2 view .LVU211
 615              	.LBB254:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 616              		.loc 1 102 13 view .LVU212
 617              	.LBE254:
 103:src/keys.c    **** }
 618              		.loc 1 103 2 view .LVU213
 619              	.LVL49:
 620              	.LBB255:
 621              	.LBB248:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 622              		.loc 1 92 20 view .LVU214
 623              	.LBB245:
  93:src/keys.c    **** 	State2.shifts = shift;
 624              		.loc 1 93 2 view .LVU215
 625              	.LBB242:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 626              		.loc 1 84 13 view .LVU216
 627              	.LBB239:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 628              		.loc 1 85 2 view .LVU217
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 629              		.loc 1 85 18 is_stmt 0 view .LVU218
 630 00a0 FFF7FEFF 		bl	shift_down
 631              	.LVL50:
  86:src/keys.c    **** }
 632              		.loc 1 86 2 is_stmt 1 view .LVU219
 633              	.LBE239:
 634              	.LBE242:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 635              		.loc 1 94 2 view .LVU220
ARM GAS  /tmp/cceb4mPP.s 			page 59


  94:src/keys.c    **** 	State2.alpha_pos = 0;
 636              		.loc 1 94 16 is_stmt 0 view .LVU221
 637 00a4 0023     		movs	r3, #0
 638 00a6 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 639              		.loc 1 95 2 is_stmt 1 view .LVU222
  95:src/keys.c    **** 	return r;
 640              		.loc 1 95 19 is_stmt 0 view .LVU223
 641 00a8 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 642              		.loc 1 96 2 is_stmt 1 view .LVU224
 643              	.LVL51:
  96:src/keys.c    **** }
 644              		.loc 1 96 2 is_stmt 0 view .LVU225
 645              	.LBE245:
 646              	.LBE248:
 647              	.LBE255:
 559:src/keys.c    **** 
 648              		.loc 1 559 1 view .LVU226
 649 00aa 38BD     		pop	{r3, r4, r5, pc}
 650              	.L44:
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 651              		.loc 1 548 3 is_stmt 1 view .LVU227
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 652              		.loc 1 549 44 is_stmt 0 view .LVU228
 653 00ac 022D     		cmp	r5, #2
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 654              		.loc 1 548 20 view .LVU229
 655 00ae A573     		strb	r5, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 656              		.loc 1 549 3 is_stmt 1 view .LVU230
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 657              		.loc 1 549 44 is_stmt 0 view .LVU231
 658 00b0 12D1     		bne	.L57
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 659              		.loc 1 549 16 view .LVU232
 660 00b2 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 661 00b4 43F00203 		orr	r3, r3, #2
 662 00b8 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 663              		.loc 1 550 3 is_stmt 1 view .LVU233
 664              	.L49:
 550:src/keys.c    **** 			// Different catalogue, reset position
 665              		.loc 1 550 32 is_stmt 0 discriminator 1 view .LVU234
 666 00ba 0D4B     		ldr	r3, .L58+4
 667 00bc 1A68     		ldr	r2, [r3]
 550:src/keys.c    **** 			// Different catalogue, reset position
 668              		.loc 1 550 37 discriminator 1 view .LVU235
 669 00be 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 550:src/keys.c    **** 			// Different catalogue, reset position
 670              		.loc 1 550 29 discriminator 1 view .LVU236
 671 00c2 03F01F03 		and	r3, r3, #31
 672 00c6 AB42     		cmp	r3, r5
 673 00c8 DDD0     		beq	.L45
 552:src/keys.c    **** 		}
 674              		.loc 1 552 4 is_stmt 1 view .LVU237
 552:src/keys.c    **** 		}
ARM GAS  /tmp/cceb4mPP.s 			page 60


 675              		.loc 1 552 17 is_stmt 0 view .LVU238
 676 00ca B2F8DC37 		ldrh	r3, [r2, #2012]
 677 00ce 6FF34B13 		bfc	r3, #5, #7
 678 00d2 A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 679 00d6 D6E7     		b	.L45
 680              	.L57:
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 681              		.loc 1 549 44 view .LVU239
 682 00d8 A5F11101 		sub	r1, r5, #17
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 683              		.loc 1 549 16 view .LVU240
 684 00dc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 685              		.loc 1 549 44 view .LVU241
 686 00de 4A42     		rsbs	r2, r1, #0
 687 00e0 4A41     		adcs	r2, r2, r1
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 688              		.loc 1 549 16 view .LVU242
 689 00e2 62F34103 		bfi	r3, r2, #1, #1
 690 00e6 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 691              		.loc 1 550 3 is_stmt 1 view .LVU243
 692 00e8 E7E7     		b	.L49
 693              	.L59:
 694 00ea 00BF     		.align	2
 695              	.L58:
 696 00ec 00000000 		.word	StateWhileOn
 697 00f0 00000000 		.word	main_ram
 698              		.cfi_endproc
 699              	.LFE12:
 701              		.section	.text.advance_to_previous_label,"ax",%progbits
 702              		.align	1
 703              		.p2align 2,,3
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	advance_to_previous_label:
 710              	.LVL52:
 711              	.LFB51:
2514:src/keys.c    **** 
2515:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 712              		.loc 1 2515 80 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		.loc 1 2515 80 is_stmt 0 view .LVU245
 717 0000 70B5     		push	{r4, r5, r6, lr}
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 4, -16
 720              		.cfi_offset 5, -12
 721              		.cfi_offset 6, -8
 722              		.cfi_offset 14, -4
 723 0002 124E     		ldr	r6, .L69
 724              		.loc 1 2515 80 view .LVU246
 725 0004 0446     		mov	r4, r0
 726 0006 0D46     		mov	r5, r1
ARM GAS  /tmp/cceb4mPP.s 			page 61


 727              	.LVL53:
 728              	.L61:
2516:src/keys.c    **** 	do {
 729              		.loc 1 2516 2 is_stmt 1 view .LVU247
2517:src/keys.c    **** 		for (;;) {
 730              		.loc 1 2517 3 view .LVU248
2518:src/keys.c    **** 			pc = do_dec(pc, 0);
 731              		.loc 1 2518 4 view .LVU249
 732              		.loc 1 2518 9 is_stmt 0 view .LVU250
 733 0008 2046     		mov	r0, r4
 734 000a 0021     		movs	r1, #0
 735 000c FFF7FEFF 		bl	do_dec
 736              	.LVL54:
2519:src/keys.c    **** 			if (PcWrapped)
2520:src/keys.c    **** 				break;
2521:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 737              		.loc 1 2521 4 is_stmt 1 view .LVU251
2522:src/keys.c    **** 				return pc;
2523:src/keys.c    **** 			}
2524:src/keys.c    **** 		}
2525:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 738              		.loc 1 2525 3 view .LVU252
 739              		.loc 1 2525 8 is_stmt 0 view .LVU253
 740 0010 20F47F53 		bic	r3, r0, #16320
 741 0014 23F03F03 		bic	r3, r3, #63
2519:src/keys.c    **** 			if (PcWrapped)
 742              		.loc 1 2519 7 view .LVU254
 743 0018 3268     		ldr	r2, [r6]
 744              		.loc 1 2525 8 view .LVU255
 745 001a A3F58043 		sub	r3, r3, #16384
2526:src/keys.c    **** 		pc = do_dec(pc, 0);
 746              		.loc 1 2526 8 view .LVU256
 747 001e 0021     		movs	r1, #0
2518:src/keys.c    **** 			if (PcWrapped)
 748              		.loc 1 2518 9 view .LVU257
 749 0020 0446     		mov	r4, r0
 750              	.LVL55:
2519:src/keys.c    **** 				break;
 751              		.loc 1 2519 4 is_stmt 1 view .LVU258
2525:src/keys.c    **** 		pc = do_dec(pc, 0);
 752              		.loc 1 2525 8 is_stmt 0 view .LVU259
 753 0022 9BB2     		uxth	r3, r3
 754              	.LVL56:
 755              		.loc 1 2526 3 is_stmt 1 view .LVU260
2519:src/keys.c    **** 				break;
 756              		.loc 1 2519 7 is_stmt 0 view .LVU261
 757 0024 32B9     		cbnz	r2, .L62
2521:src/keys.c    **** 				return pc;
 758              		.loc 1 2521 8 view .LVU262
 759 0026 2946     		mov	r1, r5
 760 0028 FFF7FEFF 		bl	is_label_or_end_at
 761              	.LVL57:
2521:src/keys.c    **** 				return pc;
 762              		.loc 1 2521 7 view .LVU263
 763 002c 0028     		cmp	r0, #0
 764 002e EBD0     		beq	.L61
2527:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
ARM GAS  /tmp/cceb4mPP.s 			page 62


2528:src/keys.c    **** 	return pc;
2529:src/keys.c    **** }
 765              		.loc 1 2529 1 view .LVU264
 766 0030 2046     		mov	r0, r4
 767 0032 70BD     		pop	{r4, r5, r6, pc}
 768              	.LVL58:
 769              	.L62:
2526:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 770              		.loc 1 2526 8 view .LVU265
 771 0034 43F00100 		orr	r0, r3, #1
 772 0038 FFF7FEFF 		bl	do_dec
 773              	.LVL59:
2527:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 774              		.loc 1 2527 13 view .LVU266
 775 003c 2946     		mov	r1, r5
2526:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 776              		.loc 1 2526 8 view .LVU267
 777 003e 0446     		mov	r4, r0
 778              	.LVL60:
2527:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 779              		.loc 1 2527 10 is_stmt 1 view .LVU268
2527:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 780              		.loc 1 2527 13 is_stmt 0 view .LVU269
 781 0040 FFF7FEFF 		bl	is_label_or_end_at
 782              	.LVL61:
2527:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 783              		.loc 1 2527 2 view .LVU270
 784 0044 0028     		cmp	r0, #0
 785 0046 DFD0     		beq	.L61
 786              		.loc 1 2529 1 view .LVU271
 787 0048 2046     		mov	r0, r4
 788 004a 70BD     		pop	{r4, r5, r6, pc}
 789              	.LVL62:
 790              	.L70:
 791              		.loc 1 2529 1 view .LVU272
 792              		.align	2
 793              	.L69:
 794 004c 00000000 		.word	PcWrapped
 795              		.cfi_endproc
 796              	.LFE51:
 798              		.section	.text.check_confirm.part.0,"ax",%progbits
 799              		.align	1
 800              		.p2align 2,,3
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	check_confirm.part.0:
 807              	.LVL63:
 808              	.LFB59:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 809              		.loc 1 619 12 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LBB256:
ARM GAS  /tmp/cceb4mPP.s 			page 63


 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 815              		.loc 1 621 3 view .LVU274
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 816              		.loc 1 622 3 view .LVU275
 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 817              		.loc 1 621 13 is_stmt 0 view .LVU276
 818 0000 C3B2     		uxtb	r3, r0
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 819              		.loc 1 622 25 view .LVU277
 820 0002 A3F14102 		sub	r2, r3, #65
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 821              		.loc 1 622 6 view .LVU278
 822 0006 032A     		cmp	r2, #3
 823 0008 06D9     		bls	.L74
 630:src/keys.c    **** #endif
 824              		.loc 1 630 7 is_stmt 1 view .LVU279
 630:src/keys.c    **** #endif
 825              		.loc 1 630 29 is_stmt 0 view .LVU280
 826 000a AD3B     		subs	r3, r3, #173
 630:src/keys.c    **** #endif
 827              		.loc 1 630 10 view .LVU281
 828 000c 052B     		cmp	r3, #5
 829 000e 02D8     		bhi	.L73
 640:src/keys.c    **** 		}
 830              		.loc 1 640 4 is_stmt 1 view .LVU282
 640:src/keys.c    **** 		}
 831              		.loc 1 640 20 is_stmt 0 view .LVU283
 832 0010 054B     		ldr	r3, .L75
 833 0012 0122     		movs	r2, #1
 834 0014 1A60     		str	r2, [r3]
 835              	.L73:
 836              	.LBE256:
 644:src/keys.c    **** 
 837              		.loc 1 644 1 view .LVU284
 838 0016 7047     		bx	lr
 839              	.L74:
 840              	.LBB257:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 841              		.loc 1 623 4 is_stmt 1 view .LVU285
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 842              		.loc 1 623 19 is_stmt 0 view .LVU286
 843 0018 044B     		ldr	r3, .L75+4
 844 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 845              		.loc 1 623 35 view .LVU287
 846 001c 4038     		subs	r0, r0, #64
 847              	.LVL64:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 848              		.loc 1 623 19 view .LVU288
 849 001e 60F30202 		bfi	r2, r0, #0, #3
 850 0022 1A75     		strb	r2, [r3, #20]
 624:src/keys.c    **** 		}
 851              		.loc 1 624 4 is_stmt 1 view .LVU289
 624:src/keys.c    **** 		}
 852              		.loc 1 624 11 is_stmt 0 view .LVU290
 853 0024 3320     		movs	r0, #51
 854              	.LVL65:
ARM GAS  /tmp/cceb4mPP.s 			page 64


 624:src/keys.c    **** 		}
 855              		.loc 1 624 11 view .LVU291
 856 0026 7047     		bx	lr
 857              	.L76:
 858              		.align	2
 859              	.L75:
 860 0028 00000000 		.word	NonProgrammable
 861 002c 00000000 		.word	StateWhileOn
 862              	.LBE257:
 863              		.cfi_endproc
 864              	.LFE59:
 866              		.section	.text.init_arg.part.0,"ax",%progbits
 867              		.align	1
 868              		.p2align 2,,3
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	init_arg.part.0:
 875              	.LVL66:
 876              	.LFB61:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 877              		.loc 1 501 13 is_stmt 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 504:src/keys.c    **** 	State2.ind = 0;
 882              		.loc 1 504 2 view .LVU293
 504:src/keys.c    **** 	State2.ind = 0;
 883              		.loc 1 504 10 is_stmt 0 view .LVU294
 884 0000 084B     		ldr	r3, .L78
 509:src/keys.c    **** 	State2.local = 0;
 885              		.loc 1 509 13 view .LVU295
 886 0002 5969     		ldr	r1, [r3, #20]
 504:src/keys.c    **** 	State2.ind = 0;
 887              		.loc 1 504 10 view .LVU296
 888 0004 D877     		strb	r0, [r3, #31]
 505:src/keys.c    **** 	State2.digval = 0;
 889              		.loc 1 505 2 is_stmt 1 view .LVU297
 506:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 506 2 view .LVU298
 509:src/keys.c    **** 	State2.local = 0;
 891              		.loc 1 509 13 is_stmt 0 view .LVU299
 892 0006 21F40F11 		bic	r1, r1, #2342912
 893 000a 8628     		cmp	r0, #134
 894 000c 0CBF     		ite	eq
 895 000e 4FF40812 		moveq	r2, #2228224
 896 0012 4FF40012 		movne	r2, #2097152
 897 0016 0A43     		orrs	r2, r2, r1
 506:src/keys.c    **** 	State2.numdigit = 0;
 898              		.loc 1 506 16 view .LVU300
 899 0018 0021     		movs	r1, #0
 509:src/keys.c    **** 	State2.local = 0;
 900              		.loc 1 509 13 view .LVU301
 901 001a 5A61     		str	r2, [r3, #20]
 506:src/keys.c    **** 	State2.numdigit = 0;
ARM GAS  /tmp/cceb4mPP.s 			page 65


 902              		.loc 1 506 16 view .LVU302
 903 001c 1981     		strh	r1, [r3, #8]	@ movhi
 507:src/keys.c    **** 	State2.rarg = 1;
 904              		.loc 1 507 2 is_stmt 1 view .LVU303
 507:src/keys.c    **** 	State2.rarg = 1;
 905              		.loc 1 507 18 is_stmt 0 view .LVU304
 906 001e D972     		strb	r1, [r3, #11]
 508:src/keys.c    **** 	State2.dot = 0;
 907              		.loc 1 508 2 is_stmt 1 view .LVU305
 509:src/keys.c    **** 	State2.local = 0;
 908              		.loc 1 509 2 view .LVU306
 510:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 909              		.loc 1 510 2 view .LVU307
 511:src/keys.c    **** }
 910              		.loc 1 511 2 view .LVU308
 512:src/keys.c    **** 
 911              		.loc 1 512 1 is_stmt 0 view .LVU309
 912 0020 7047     		bx	lr
 913              	.L79:
 914 0022 00BF     		.align	2
 915              	.L78:
 916 0024 00000000 		.word	StateWhileOn
 917              		.cfi_endproc
 918              	.LFE61:
 920              		.section	.text.reset_arg,"ax",%progbits
 921              		.align	1
 922              		.p2align 2,,3
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu fpv4-sp-d16
 928              	reset_arg:
 929              	.LFB29:
1487:src/keys.c    **** 	init_arg((enum rarg) 0);
 930              		.loc 1 1487 29 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
1488:src/keys.c    **** 	State2.rarg = 0;
 934              		.loc 1 1488 2 view .LVU311
 935              	.LVL67:
 936              	.LBB258:
 937              	.LBI258:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 938              		.loc 1 501 13 view .LVU312
 939              	.LBB259:
 502:src/keys.c    **** 		return;
 940              		.loc 1 502 2 view .LVU313
 941              	.LBE259:
 942              	.LBE258:
1487:src/keys.c    **** 	init_arg((enum rarg) 0);
 943              		.loc 1 1487 29 is_stmt 0 view .LVU314
 944 0000 08B5     		push	{r3, lr}
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 3, -8
 947              		.cfi_offset 14, -4
 948              	.LBB261:
ARM GAS  /tmp/cceb4mPP.s 			page 66


 949              	.LBB260:
 502:src/keys.c    **** 		return;
 950              		.loc 1 502 6 view .LVU315
 951 0002 FFF7FEFF 		bl	is_bad_cmdline
 952              	.LVL68:
 502:src/keys.c    **** 		return;
 953              		.loc 1 502 5 view .LVU316
 954 0006 08B9     		cbnz	r0, .L81
 955 0008 FFF7FEFF 		bl	init_arg.part.0
 956              	.LVL69:
 957              	.L81:
 502:src/keys.c    **** 		return;
 958              		.loc 1 502 5 view .LVU317
 959              	.LBE260:
 960              	.LBE261:
1489:src/keys.c    **** }
 961              		.loc 1 1489 2 is_stmt 1 view .LVU318
1489:src/keys.c    **** }
 962              		.loc 1 1489 14 is_stmt 0 view .LVU319
 963 000c 024B     		ldr	r3, .L83
 964 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 965 0010 6FF34512 		bfc	r2, #5, #1
 966 0014 9A75     		strb	r2, [r3, #22]
1490:src/keys.c    **** 
 967              		.loc 1 1490 1 view .LVU320
 968 0016 08BD     		pop	{r3, pc}
 969              	.L84:
 970              		.align	2
 971              	.L83:
 972 0018 00000000 		.word	StateWhileOn
 973              		.cfi_endproc
 974              	.LFE29:
 976              		.section	.text.arg_eval,"ax",%progbits
 977              		.align	1
 978              		.p2align 2,,3
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 982              		.fpu fpv4-sp-d16
 984              	arg_eval:
 985              	.LVL70:
 986              	.LFB30:
1492:src/keys.c    **** 	const unsigned int base = CmdBase;
 987              		.loc 1 1492 39 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
1493:src/keys.c    **** 	int r = RARG(base, val 
 991              		.loc 1 1493 2 view .LVU322
1493:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1493 28 is_stmt 0 view .LVU323
 993 0000 1C4B     		ldr	r3, .L106
1492:src/keys.c    **** 	const unsigned int base = CmdBase;
 994              		.loc 1 1492 39 view .LVU324
 995 0002 70B5     		push	{r4, r5, r6, lr}
 996              		.cfi_def_cfa_offset 16
 997              		.cfi_offset 4, -16
ARM GAS  /tmp/cceb4mPP.s 			page 67


 998              		.cfi_offset 5, -12
 999              		.cfi_offset 6, -8
 1000              		.cfi_offset 14, -4
1494:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1494 10 view .LVU325
 1002 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 1003 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1493:src/keys.c    **** 	int r = RARG(base, val 
 1004              		.loc 1 1493 21 view .LVU326
 1005 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 1006              	.LVL71:
1494:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1494 2 is_stmt 1 view .LVU327
1494:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1008              		.loc 1 1494 10 is_stmt 0 view .LVU328
 1009 000a EE07     		lsls	r6, r5, #31
1497:src/keys.c    **** 
 1010              		.loc 1 1497 30 view .LVU329
 1011 000c 1A4E     		ldr	r6, .L106+4
 1012 000e 3668     		ldr	r6, [r6]
1494:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1013              		.loc 1 1494 10 view .LVU330
 1014 0010 01F08003 		and	r3, r1, #128
 1015 0014 0344     		add	r3, r3, r0
1497:src/keys.c    **** 
 1016              		.loc 1 1497 30 view .LVU331
 1017 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1494:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1018              		.loc 1 1494 10 view .LVU332
 1019 001a 02F12004 		add	r4, r2, #32
 1020 001e 48BF     		it	mi
 1021 0020 7033     		addmi	r3, r3, #112
 1022 0022 2402     		lsls	r4, r4, #8
 1023 0024 1C43     		orrs	r4, r4, r3
 1024              	.LVL72:
1497:src/keys.c    **** 
 1025              		.loc 1 1497 2 is_stmt 1 view .LVU333
1497:src/keys.c    **** 
 1026              		.loc 1 1497 77 is_stmt 0 view .LVU334
 1027 0026 3307     		lsls	r3, r6, #28
 1028 0028 1DD5     		bpl	.L92
1497:src/keys.c    **** 
 1029              		.loc 1 1497 77 discriminator 2 view .LVU335
 1030 002a 15F0400F 		tst	r5, #64
 1031 002e 0CBF     		ite	eq
 1032 0030 0425     		moveq	r5, #4
 1033 0032 0825     		movne	r5, #8
 1034              	.L87:
 1035              	.LVL73:
1499:src/keys.c    **** 		/*
 1036              		.loc 1 1499 2 is_stmt 1 discriminator 6 view .LVU336
1499:src/keys.c    **** 		/*
 1037              		.loc 1 1499 5 is_stmt 0 discriminator 6 view .LVU337
 1038 0034 0E06     		lsls	r6, r1, #24
 1039 0036 12D4     		bmi	.L88
1514:src/keys.c    **** 			// Disallow odd complex register > 98
 1040              		.loc 1 1514 3 is_stmt 1 view .LVU338
ARM GAS  /tmp/cceb4mPP.s 			page 68


1514:src/keys.c    **** 			// Disallow odd complex register > 98
 1041              		.loc 1 1514 20 is_stmt 0 view .LVU339
 1042 0038 104B     		ldr	r3, .L106+8
 1043 003a 03EB0213 		add	r3, r3, r2, lsl #4
 1044 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1514:src/keys.c    **** 			// Disallow odd complex register > 98
 1045              		.loc 1 1514 6 view .LVU340
 1046 0040 D906     		lsls	r1, r3, #27
 1047 0042 09D5     		bpl	.L89
1514:src/keys.c    **** 			// Disallow odd complex register > 98
 1048              		.loc 1 1514 27 discriminator 1 view .LVU341
 1049 0044 6228     		cmp	r0, #98
 1050 0046 07D9     		bls	.L89
1514:src/keys.c    **** 			// Disallow odd complex register > 98
 1051              		.loc 1 1514 52 discriminator 2 view .LVU342
 1052 0048 C307     		lsls	r3, r0, #31
 1053 004a 02D4     		bmi	.L96
1518:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1054              		.loc 1 1518 3 is_stmt 1 view .LVU343
1518:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1055              		.loc 1 1518 28 is_stmt 0 view .LVU344
 1056 004c 223A     		subs	r2, r2, #34
 1057              	.LVL74:
1518:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1058              		.loc 1 1518 6 view .LVU345
 1059 004e 012A     		cmp	r2, #1
 1060 0050 05D8     		bhi	.L88
 1061              	.LVL75:
 1062              	.L96:
1516:src/keys.c    **** #endif
 1063              		.loc 1 1516 11 view .LVU346
 1064 0052 3324     		movs	r4, #51
 1065              	.LVL76:
1525:src/keys.c    **** 
 1066              		.loc 1 1525 1 view .LVU347
 1067 0054 2046     		mov	r0, r4
 1068              	.LVL77:
1525:src/keys.c    **** 
 1069              		.loc 1 1525 1 view .LVU348
 1070 0056 70BD     		pop	{r4, r5, r6, pc}
 1071              	.LVL78:
 1072              	.L89:
1518:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1518 3 is_stmt 1 view .LVU349
1518:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1074              		.loc 1 1518 28 is_stmt 0 view .LVU350
 1075 0058 223A     		subs	r2, r2, #34
 1076              	.LVL79:
1518:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1077              		.loc 1 1518 6 view .LVU351
 1078 005a 012A     		cmp	r2, #1
 1079 005c 05D9     		bls	.L105
 1080              	.LVL80:
 1081              	.L88:
1523:src/keys.c    **** 	return r;
 1082              		.loc 1 1523 2 is_stmt 1 view .LVU352
 1083 005e FFF7FEFF 		bl	reset_arg
ARM GAS  /tmp/cceb4mPP.s 			page 69


 1084              	.LVL81:
1524:src/keys.c    **** }
 1085              		.loc 1 1524 2 view .LVU353
1525:src/keys.c    **** 
 1086              		.loc 1 1525 1 is_stmt 0 view .LVU354
 1087 0062 2046     		mov	r0, r4
 1088 0064 70BD     		pop	{r4, r5, r6, pc}
 1089              	.LVL82:
 1090              	.L92:
1497:src/keys.c    **** 
 1091              		.loc 1 1497 77 view .LVU355
 1092 0066 0425     		movs	r5, #4
 1093 0068 E4E7     		b	.L87
 1094              	.LVL83:
 1095              	.L105:
1518:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1518 73 discriminator 1 view .LVU356
 1097 006a C5F16405 		rsb	r5, r5, #100
 1098              	.LVL84:
1518:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1099              		.loc 1 1518 52 discriminator 1 view .LVU357
 1100 006e 8542     		cmp	r5, r0
 1101 0070 F5D2     		bcs	.L88
 1102 0072 EEE7     		b	.L96
 1103              	.L107:
 1104              		.align	2
 1105              	.L106:
 1106 0074 00000000 		.word	StateWhileOn
 1107 0078 00000000 		.word	main_ram
 1108 007c 00000000 		.word	argcmds
 1109              		.cfi_endproc
 1110              	.LFE30:
 1112              		.section	.text.process_arg_shuffle,"ax",%progbits
 1113              		.align	1
 1114              		.p2align 2,,3
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv4-sp-d16
 1120              	process_arg_shuffle:
 1121              	.LVL85:
 1122              	.LFB36:
1639:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1123              		.loc 1 1639 39 is_stmt 1 view -0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
1640:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1640 2 view .LVU359
1639:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1129              		.loc 1 1639 39 is_stmt 0 view .LVU360
 1130 0000 10B4     		push	{r4}
 1131              		.cfi_def_cfa_offset 4
 1132              		.cfi_offset 4, -4
1640:src/keys.c    **** 	if (State2.numdigit < 4)
 1133              		.loc 1 1640 31 view .LVU361
ARM GAS  /tmp/cceb4mPP.s 			page 70


 1134 0002 0A4A     		ldr	r2, .L111
 1135 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1640:src/keys.c    **** 	if (State2.numdigit < 4)
 1136              		.loc 1 1640 16 view .LVU362
 1137 0006 1189     		ldrh	r1, [r2, #8]
1640:src/keys.c    **** 	if (State2.numdigit < 4)
 1138              		.loc 1 1640 43 view .LVU363
 1139 0008 5C00     		lsls	r4, r3, #1
1640:src/keys.c    **** 	if (State2.numdigit < 4)
 1140              		.loc 1 1640 21 view .LVU364
 1141 000a A040     		lsls	r0, r0, r4
 1142              	.LVL86:
1640:src/keys.c    **** 	if (State2.numdigit < 4)
 1143              		.loc 1 1640 40 view .LVU365
 1144 000c 0133     		adds	r3, r3, #1
 1145 000e DBB2     		uxtb	r3, r3
1640:src/keys.c    **** 	if (State2.numdigit < 4)
 1146              		.loc 1 1640 16 view .LVU366
 1147 0010 0844     		add	r0, r0, r1
 1148 0012 80B2     		uxth	r0, r0
1641:src/keys.c    **** 		return STATE_UNFINISHED;
 1149              		.loc 1 1641 5 view .LVU367
 1150 0014 032B     		cmp	r3, #3
1640:src/keys.c    **** 	if (State2.numdigit < 4)
 1151              		.loc 1 1640 40 view .LVU368
 1152 0016 D372     		strb	r3, [r2, #11]
1640:src/keys.c    **** 	if (State2.numdigit < 4)
 1153              		.loc 1 1640 16 view .LVU369
 1154 0018 1081     		strh	r0, [r2, #8]	@ movhi
1641:src/keys.c    **** 		return STATE_UNFINISHED;
 1155              		.loc 1 1641 2 is_stmt 1 view .LVU370
1641:src/keys.c    **** 		return STATE_UNFINISHED;
 1156              		.loc 1 1641 5 is_stmt 0 view .LVU371
 1157 001a 03D9     		bls	.L109
1643:src/keys.c    **** }
 1158              		.loc 1 1643 2 is_stmt 1 view .LVU372
1644:src/keys.c    **** 
 1159              		.loc 1 1644 1 is_stmt 0 view .LVU373
 1160 001c 5DF8044B 		ldr	r4, [sp], #4
 1161              		.cfi_remember_state
 1162              		.cfi_restore 4
 1163              		.cfi_def_cfa_offset 0
1643:src/keys.c    **** }
 1164              		.loc 1 1643 9 view .LVU374
 1165 0020 FFF7FEBF 		b	arg_eval
 1166              	.LVL87:
 1167              	.L109:
 1168              		.cfi_restore_state
1644:src/keys.c    **** 
 1169              		.loc 1 1644 1 view .LVU375
 1170 0024 3320     		movs	r0, #51
 1171 0026 5DF8044B 		ldr	r4, [sp], #4
 1172              		.cfi_restore 4
 1173              		.cfi_def_cfa_offset 0
 1174 002a 7047     		bx	lr
 1175              	.L112:
 1176              		.align	2
ARM GAS  /tmp/cceb4mPP.s 			page 71


 1177              	.L111:
 1178 002c 00000000 		.word	StateWhileOn
 1179              		.cfi_endproc
 1180              	.LFE36:
 1182              		.section	.text.arg_digit,"ax",%progbits
 1183              		.align	1
 1184              		.p2align 2,,3
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1188              		.fpu fpv4-sp-d16
 1190              	arg_digit:
 1191              	.LVL88:
 1192              	.LFB31:
1527:src/keys.c    **** 	int lim;
 1193              		.loc 1 1527 29 is_stmt 1 view -0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
1528:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1197              		.loc 1 1528 2 view .LVU377
1533:src/keys.c    **** #endif
 1198              		.loc 1 1533 2 view .LVU378
1527:src/keys.c    **** 	int lim;
 1199              		.loc 1 1527 29 is_stmt 0 view .LVU379
 1200 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1201              		.cfi_def_cfa_offset 24
 1202              		.cfi_offset 3, -24
 1203              		.cfi_offset 4, -20
 1204              		.cfi_offset 5, -16
 1205              		.cfi_offset 6, -12
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
1533:src/keys.c    **** #endif
 1208              		.loc 1 1533 28 view .LVU380
 1209 0002 314C     		ldr	r4, .L138
1536:src/keys.c    **** 	
 1210              		.loc 1 1536 34 view .LVU381
 1211 0004 314A     		ldr	r2, .L138+4
1533:src/keys.c    **** #endif
 1212              		.loc 1 1533 28 view .LVU382
 1213 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1214              	.LVL89:
1535:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1215              		.loc 1 1535 2 is_stmt 1 view .LVU383
1535:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1216              		.loc 1 1535 33 is_stmt 0 view .LVU384
 1217 0008 2389     		ldrh	r3, [r4, #8]
1536:src/keys.c    **** 	
 1218              		.loc 1 1536 34 view .LVU385
 1219 000a 02EB0712 		add	r2, r2, r7, lsl #4
1535:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1220              		.loc 1 1535 41 view .LVU386
 1221 000e 03EB8303 		add	r3, r3, r3, lsl #2
1536:src/keys.c    **** 	
 1222              		.loc 1 1536 34 view .LVU387
 1223 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
ARM GAS  /tmp/cceb4mPP.s 			page 72


1536:src/keys.c    **** 	
 1224              		.loc 1 1536 39 view .LVU388
 1225 0014 8E07     		lsls	r6, r1, #30
1535:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1226              		.loc 1 1535 46 view .LVU389
 1227 0016 00EB4305 		add	r5, r0, r3, lsl #1
 1228              	.LVL90:
1536:src/keys.c    **** 	
 1229              		.loc 1 1536 2 is_stmt 1 view .LVU390
1536:src/keys.c    **** 	
 1230              		.loc 1 1536 39 is_stmt 0 view .LVU391
 1231 001a C1F34000 		ubfx	r0, r1, #1, #1
 1232              	.LVL91:
1536:src/keys.c    **** 	
 1233              		.loc 1 1536 39 view .LVU392
 1234 001e 32D5     		bpl	.L114
 1235              	.LVL92:
1538:src/keys.c    **** 		// Handle local registers and flags
 1236              		.loc 1 1538 2 is_stmt 1 view .LVU393
1538:src/keys.c    **** 		// Handle local registers and flags
 1237              		.loc 1 1538 6 is_stmt 0 view .LVU394
 1238 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1538:src/keys.c    **** 		// Handle local registers and flags
 1239              		.loc 1 1538 5 view .LVU395
 1240 0022 D907     		lsls	r1, r3, #31
 1241 0024 28D5     		bpl	.L116
 1242              	.L127:
1536:src/keys.c    **** 	
 1243              		.loc 1 1536 39 view .LVU396
 1244 0026 0120     		movs	r0, #1
 1245              	.LVL93:
 1246              	.L115:
1540:src/keys.c    **** 		if (State2.runmode) {
 1247              		.loc 1 1540 3 is_stmt 1 view .LVU397
1541:src/keys.c    **** 			if (LocalRegs == 0)
 1248              		.loc 1 1541 3 view .LVU398
1541:src/keys.c    **** 			if (LocalRegs == 0)
 1249              		.loc 1 1541 6 is_stmt 0 view .LVU399
 1250 0028 5A06     		lsls	r2, r3, #25
 1251 002a 3BD5     		bpl	.L129
1542:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1252              		.loc 1 1542 4 is_stmt 1 view .LVU400
1542:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1253              		.loc 1 1542 8 is_stmt 0 view .LVU401
 1254 002c 284B     		ldr	r3, .L138+8
 1255 002e 1B68     		ldr	r3, [r3]
1542:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1256              		.loc 1 1542 7 view .LVU402
 1257 0030 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1258 0034 2BB3     		cbz	r3, .L122
1544:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1259              		.loc 1 1544 4 is_stmt 1 view .LVU403
1544:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1260              		.loc 1 1544 7 is_stmt 0 view .LVU404
 1261 0036 A8B3     		cbz	r0, .L129
1545:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1262              		.loc 1 1545 5 is_stmt 1 view .LVU405
ARM GAS  /tmp/cceb4mPP.s 			page 73


1545:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1263              		.loc 1 1545 11 is_stmt 0 view .LVU406
 1264 0038 3846     		mov	r0, r7
 1265 003a FFF7FEFF 		bl	local_regs_rarg
 1266              	.LVL94:
1546:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1267              		.loc 1 1546 5 is_stmt 1 view .LVU407
1545:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1268              		.loc 1 1545 9 is_stmt 0 view .LVU408
 1269 003e 0138     		subs	r0, r0, #1
 1270              	.LVL95:
1545:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1271              		.loc 1 1545 9 view .LVU409
 1272 0040 0F28     		cmp	r0, #15
 1273 0042 A8BF     		it	ge
 1274 0044 0F20     		movge	r0, #15
 1275              	.LVL96:
 1276              	.L119:
1558:src/keys.c    **** 		return STATE_UNFINISHED;
 1277              		.loc 1 1558 2 is_stmt 1 view .LVU410
1558:src/keys.c    **** 		return STATE_UNFINISHED;
 1278              		.loc 1 1558 5 is_stmt 0 view .LVU411
 1279 0046 8542     		cmp	r5, r0
 1280 0048 1BDC     		bgt	.L122
 1281              	.L136:
1561:src/keys.c    **** 	++State2.numdigit;
 1282              		.loc 1 1561 2 is_stmt 1 view .LVU412
1562:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1562 2 is_stmt 0 view .LVU413
 1284 004a E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1561:src/keys.c    **** 	++State2.numdigit;
 1285              		.loc 1 1561 16 view .LVU414
 1286 004c 2581     		strh	r5, [r4, #8]	@ movhi
1562:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1287              		.loc 1 1562 2 is_stmt 1 view .LVU415
 1288 004e 0136     		adds	r6, r6, #1
1563:src/keys.c    **** 		int result = arg_eval(val);
 1289              		.loc 1 1563 16 is_stmt 0 view .LVU416
 1290 0050 05EB8503 		add	r3, r5, r5, lsl #2
1562:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1291              		.loc 1 1562 2 view .LVU417
 1292 0054 F6B2     		uxtb	r6, r6
1563:src/keys.c    **** 		int result = arg_eval(val);
 1293              		.loc 1 1563 5 view .LVU418
 1294 0056 B0EB430F 		cmp	r0, r3, lsl #1
1562:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1295              		.loc 1 1562 2 view .LVU419
 1296 005a E672     		strb	r6, [r4, #11]
1563:src/keys.c    **** 		int result = arg_eval(val);
 1297              		.loc 1 1563 2 is_stmt 1 view .LVU420
1563:src/keys.c    **** 		int result = arg_eval(val);
 1298              		.loc 1 1563 5 is_stmt 0 view .LVU421
 1299 005c 04DB     		blt	.L125
1563:src/keys.c    **** 		int result = arg_eval(val);
 1300              		.loc 1 1563 49 discriminator 1 view .LVU422
 1301 005e 3846     		mov	r0, r7
 1302              	.LVL97:
ARM GAS  /tmp/cceb4mPP.s 			page 74


1563:src/keys.c    **** 		int result = arg_eval(val);
 1303              		.loc 1 1563 49 discriminator 1 view .LVU423
 1304 0060 FFF7FEFF 		bl	num_arg_digits
 1305              	.LVL98:
1563:src/keys.c    **** 		int result = arg_eval(val);
 1306              		.loc 1 1563 27 discriminator 1 view .LVU424
 1307 0064 8642     		cmp	r6, r0
 1308 0066 0CDB     		blt	.L122
 1309              	.L125:
 1310              	.LBB262:
1564:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1311              		.loc 1 1564 3 is_stmt 1 view .LVU425
1564:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1312              		.loc 1 1564 16 is_stmt 0 view .LVU426
 1313 0068 2846     		mov	r0, r5
 1314 006a FFF7FEFF 		bl	arg_eval
 1315              	.LVL99:
1565:src/keys.c    **** 			--State2.numdigit;
 1316              		.loc 1 1565 3 is_stmt 1 view .LVU427
1565:src/keys.c    **** 			--State2.numdigit;
 1317              		.loc 1 1565 6 is_stmt 0 view .LVU428
 1318 006e 3328     		cmp	r0, #51
 1319 0070 1AD0     		beq	.L134
 1320              	.LBE262:
1572:src/keys.c    **** 
 1321              		.loc 1 1572 1 view .LVU429
 1322 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1323              	.LVL100:
 1324              	.L137:
1538:src/keys.c    **** 		// Handle local registers and flags
 1325              		.loc 1 1538 2 is_stmt 1 view .LVU430
1538:src/keys.c    **** 		// Handle local registers and flags
 1326              		.loc 1 1538 5 is_stmt 0 view .LVU431
 1327 0074 DA07     		lsls	r2, r3, #31
 1328 0076 D6D4     		bmi	.L127
 1329              	.L116:
1552:src/keys.c    **** 	else {
 1330              		.loc 1 1552 3 is_stmt 1 view .LVU432
1552:src/keys.c    **** 	else {
 1331              		.loc 1 1552 65 is_stmt 0 view .LVU433
 1332 0078 5B06     		lsls	r3, r3, #25
 1333 007a 1FD4     		bmi	.L135
 1334 007c 6320     		movs	r0, #99
 1335              	.LVL101:
1558:src/keys.c    **** 		return STATE_UNFINISHED;
 1336              		.loc 1 1558 2 is_stmt 1 view .LVU434
1558:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1558 5 is_stmt 0 view .LVU435
 1338 007e 8542     		cmp	r5, r0
 1339 0080 E3DD     		ble	.L136
 1340              	.LVL102:
 1341              	.L122:
1543:src/keys.c    **** 			if (is_reg) {
 1342              		.loc 1 1543 12 view .LVU436
 1343 0082 3320     		movs	r0, #51
1572:src/keys.c    **** 
 1344              		.loc 1 1572 1 view .LVU437
ARM GAS  /tmp/cceb4mPP.s 			page 75


 1345 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1346              	.LVL103:
 1347              	.L114:
1536:src/keys.c    **** 	
 1348              		.loc 1 1536 39 discriminator 2 view .LVU438
 1349 0086 94F91530 		ldrsb	r3, [r4, #21]
 1350 008a 002B     		cmp	r3, #0
1538:src/keys.c    **** 		// Handle local registers and flags
 1351              		.loc 1 1538 6 discriminator 2 view .LVU439
 1352 008c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1536:src/keys.c    **** 	
 1353              		.loc 1 1536 39 discriminator 2 view .LVU440
 1354 008e F1DB     		blt	.L137
 1355              	.LVL104:
1538:src/keys.c    **** 		// Handle local registers and flags
 1356              		.loc 1 1538 2 is_stmt 1 view .LVU441
1538:src/keys.c    **** 		// Handle local registers and flags
 1357              		.loc 1 1538 5 is_stmt 0 view .LVU442
 1358 0090 DE07     		lsls	r6, r3, #31
 1359 0092 C9D4     		bmi	.L115
1551:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1360              		.loc 1 1551 7 is_stmt 1 view .LVU443
1554:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1361              		.loc 1 1554 3 view .LVU444
1554:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1362              		.loc 1 1554 7 is_stmt 0 view .LVU445
 1363 0094 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1364              	.LVL105:
1555:src/keys.c    **** 			lim = RARG_IND - 1;
 1365              		.loc 1 1555 3 is_stmt 1 view .LVU446
1555:src/keys.c    **** 			lim = RARG_IND - 1;
 1366              		.loc 1 1555 6 is_stmt 0 view .LVU447
 1367 0096 7F28     		cmp	r0, #127
 1368 0098 D5DD     		ble	.L119
1556:src/keys.c    **** 	}
 1369              		.loc 1 1556 8 discriminator 1 view .LVU448
 1370 009a 11F0010F 		tst	r1, #1
 1371 009e 18BF     		it	ne
 1372 00a0 7F20     		movne	r0, #127
 1373              	.LVL106:
1556:src/keys.c    **** 	}
 1374              		.loc 1 1556 8 discriminator 1 view .LVU449
 1375 00a2 D0E7     		b	.L119
 1376              	.LVL107:
 1377              	.L129:
1540:src/keys.c    **** 		if (State2.runmode) {
 1378              		.loc 1 1540 7 view .LVU450
 1379 00a4 0F20     		movs	r0, #15
 1380 00a6 CEE7     		b	.L119
 1381              	.LVL108:
 1382              	.L134:
 1383              	.LBB263:
1566:src/keys.c    **** 			State2.digval /= 10;
 1384              		.loc 1 1566 4 is_stmt 1 view .LVU451
1567:src/keys.c    **** 		}
 1385              		.loc 1 1567 18 is_stmt 0 view .LVU452
 1386 00a8 2389     		ldrh	r3, [r4, #8]
ARM GAS  /tmp/cceb4mPP.s 			page 76


 1387 00aa 0A49     		ldr	r1, .L138+12
1566:src/keys.c    **** 			State2.digval /= 10;
 1388              		.loc 1 1566 4 view .LVU453
 1389 00ac E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
1567:src/keys.c    **** 		}
 1390              		.loc 1 1567 18 view .LVU454
 1391 00ae A1FB0313 		umull	r1, r3, r1, r3
 1392 00b2 DB08     		lsrs	r3, r3, #3
1566:src/keys.c    **** 			State2.digval /= 10;
 1393              		.loc 1 1566 4 view .LVU455
 1394 00b4 013A     		subs	r2, r2, #1
1567:src/keys.c    **** 		}
 1395              		.loc 1 1567 18 view .LVU456
 1396 00b6 2381     		strh	r3, [r4, #8]	@ movhi
1566:src/keys.c    **** 			State2.digval /= 10;
 1397              		.loc 1 1566 4 view .LVU457
 1398 00b8 E272     		strb	r2, [r4, #11]
1567:src/keys.c    **** 		}
 1399              		.loc 1 1567 4 is_stmt 1 view .LVU458
 1400              	.LBE263:
1572:src/keys.c    **** 
 1401              		.loc 1 1572 1 is_stmt 0 view .LVU459
 1402 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1403              	.LVL109:
 1404              	.L135:
1552:src/keys.c    **** 	else {
 1405              		.loc 1 1552 26 discriminator 1 view .LVU460
 1406 00bc 3846     		mov	r0, r7
 1407 00be FFF7FEFF 		bl	global_regs_rarg
 1408              	.LVL110:
1552:src/keys.c    **** 	else {
 1409              		.loc 1 1552 61 discriminator 1 view .LVU461
 1410 00c2 0138     		subs	r0, r0, #1
 1411 00c4 BFE7     		b	.L119
 1412              	.L139:
 1413 00c6 00BF     		.align	2
 1414              	.L138:
 1415 00c8 00000000 		.word	StateWhileOn
 1416 00cc 00000000 		.word	argcmds
 1417 00d0 00000000 		.word	main_ram
 1418 00d4 CDCCCCCC 		.word	-858993459
 1419              		.cfi_endproc
 1420              	.LFE31:
 1422              		.section	.text.intltr,"ax",%progbits
 1423              		.align	1
 1424              		.p2align 2,,3
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu fpv4-sp-d16
 1430              	intltr:
 1431              	.LVL111:
 1432              	.LFB18:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1433              		.loc 1 666 26 is_stmt 1 view -0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cceb4mPP.s 			page 77


 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 667:src/keys.c    **** }
 1437              		.loc 1 667 2 view .LVU463
 667:src/keys.c    **** }
 1438              		.loc 1 667 10 is_stmt 0 view .LVU464
 1439 0000 0B4B     		ldr	r3, .L149
 1440 0002 1B68     		ldr	r3, [r3]
 1441 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1442              		.loc 1 667 22 view .LVU465
 1443 0008 13F00103 		ands	r3, r3, #1
 1444 000c 05D0     		beq	.L142
 667:src/keys.c    **** }
 1445              		.loc 1 667 26 discriminator 1 view .LVU466
 1446 000e 094B     		ldr	r3, .L149+4
 1447 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1448              		.loc 1 667 22 discriminator 1 view .LVU467
 1449 0012 5B06     		lsls	r3, r3, #25
 1450 0014 03D4     		bmi	.L148
 667:src/keys.c    **** }
 1451              		.loc 1 667 22 view .LVU468
 1452 0016 0120     		movs	r0, #1
 1453              	.LVL112:
 668:src/keys.c    **** 
 1454              		.loc 1 668 1 view .LVU469
 1455 0018 7047     		bx	lr
 1456              	.LVL113:
 1457              	.L142:
 667:src/keys.c    **** }
 1458              		.loc 1 667 22 view .LVU470
 1459 001a 1846     		mov	r0, r3
 1460              	.LVL114:
 667:src/keys.c    **** }
 1461              		.loc 1 667 22 view .LVU471
 1462 001c 7047     		bx	lr
 1463              	.LVL115:
 1464              	.L148:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1465              		.loc 1 666 26 view .LVU472
 1466 001e 10B5     		push	{r4, lr}
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 4, -8
 1469              		.cfi_offset 14, -4
 1470 0020 0446     		mov	r4, r0
 1471              	.LVL116:
 1472              	.LBB266:
 1473              	.LBI266:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1474              		.loc 1 666 12 is_stmt 1 view .LVU473
 1475              	.LBB267:
 667:src/keys.c    **** }
 1476              		.loc 1 667 52 is_stmt 0 view .LVU474
 1477 0022 FFF7FEFF 		bl	int_base
 1478              	.LVL117:
 667:src/keys.c    **** }
 1479              		.loc 1 667 43 view .LVU475
ARM GAS  /tmp/cceb4mPP.s 			page 78


 1480 0026 8442     		cmp	r4, r0
 1481 0028 ACBF     		ite	ge
 1482 002a 0020     		movge	r0, #0
 1483 002c 0120     		movlt	r0, #1
 1484              	.LBE267:
 1485              	.LBE266:
 668:src/keys.c    **** 
 1486              		.loc 1 668 1 view .LVU476
 1487 002e 10BD     		pop	{r4, pc}
 1488              	.LVL118:
 1489              	.L150:
 668:src/keys.c    **** 
 1490              		.loc 1 668 1 view .LVU477
 1491              		.align	2
 1492              	.L149:
 1493 0030 00000000 		.word	main_ram
 1494 0034 00000000 		.word	StateWhileOn
 1495              		.cfi_endproc
 1496              	.LFE18:
 1498              		.section	.text.set_window,"ax",%progbits
 1499              		.align	1
 1500              		.p2align 2,,3
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1504              		.fpu fpv4-sp-d16
 1506              	set_window:
 1507              	.LVL119:
 1508              	.LFB53:
2530:src/keys.c    **** 
2531:src/keys.c    **** 
2532:src/keys.c    **** /*
2533:src/keys.c    ****  *  CAT command
2534:src/keys.c    ****  */
2535:src/keys.c    **** static int process_labellist(const keycode c) {
2536:src/keys.c    **** 	unsigned int pc = State2.digval;
2537:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2538:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2539:src/keys.c    **** 	const int opcode = getprog(pc);
2540:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2541:src/keys.c    **** 	const int direct = State2.runmode;
2542:src/keys.c    **** 	const enum shifts shift = reset_shift();
2543:src/keys.c    **** 	int op = STATE_UNFINISHED;
2544:src/keys.c    **** 
2545:src/keys.c    **** 	if (n < REGION_XROM) {
2546:src/keys.c    **** 		// Digits take you to that segment
2547:src/keys.c    **** 		pc = addrLIB(1, n);
2548:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2549:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2550:src/keys.c    **** 		State2.digval = pc;
2551:src/keys.c    **** 		return STATE_UNFINISHED;
2552:src/keys.c    **** 	}
2553:src/keys.c    **** 
2554:src/keys.c    **** 	switch (c | (shift << 8)) {
2555:src/keys.c    **** 
2556:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2557:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
ARM GAS  /tmp/cceb4mPP.s 			page 79


2558:src/keys.c    **** 		goto next;
2559:src/keys.c    **** 
2560:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2561:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2562:src/keys.c    **** 	case K_DOWN:				// Find next label
2563:src/keys.c    **** 	next:
2564:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2565:src/keys.c    **** 		return STATE_UNFINISHED;
2566:src/keys.c    **** 
2567:src/keys.c    **** 	case K_UP:				// Find previous label
2568:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2569:src/keys.c    **** 		return STATE_UNFINISHED;
2570:src/keys.c    **** 
2571:src/keys.c    **** 	case K24:				// <- exits
2572:src/keys.c    **** 		break;
2573:src/keys.c    **** 
2574:src/keys.c    **** 	case K20:				// ENTER^
2575:src/keys.c    **** 	set_pc_and_exit:
2576:src/keys.c    **** 		set_pc(pc);			// forced branch
2577:src/keys.c    **** 		break;
2578:src/keys.c    **** 
2579:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2580:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2581:src/keys.c    **** 		goto set_pc_and_exit;
2582:src/keys.c    **** 
2583:src/keys.c    **** 	case K10:				// STO
2584:src/keys.c    **** 	case K11:				// RCL
2585:src/keys.c    **** 	  //#ifndef DM42	
2586:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2587:src/keys.c    **** 	  //#endif
2588:src/keys.c    **** /* #ifdef DM42 */
2589:src/keys.c    **** /* 	        op = OP_NIL; */
2590:src/keys.c    **** /* #endif	     */
2591:src/keys.c    **** 	  goto set_pc_and_exit;
2592:src/keys.c    **** #ifdef DM42
2593:src/keys.c    **** 	case K05:				// XEQ
2594:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2595:src/keys.c    **** 		goto xeq_or_gto;
2596:src/keys.c    **** 
2597:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2598:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2599:src/keys.c    **** 	xeq_or_gto:
2600:src/keys.c    **** 		if (label)
2601:src/keys.c    **** 			break;
2602:src/keys.c    **** 		return STATE_UNFINISHED;
2603:src/keys.c    **** #else
2604:src/keys.c    **** 	case K30:				// XEQ
2605:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2606:src/keys.c    **** 		goto xeq_or_gto;
2607:src/keys.c    **** 
2608:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2609:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2610:src/keys.c    **** 	xeq_or_gto:
2611:src/keys.c    **** 		if (label)
2612:src/keys.c    **** 			break;
2613:src/keys.c    **** 		return STATE_UNFINISHED;
2614:src/keys.c    **** #endif		
ARM GAS  /tmp/cceb4mPP.s 			page 80


2615:src/keys.c    **** 	case K63:				// R/S
2616:src/keys.c    **** 		if (direct && label) {
2617:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2618:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2619:src/keys.c    **** 			break;
2620:src/keys.c    **** 		}
2621:src/keys.c    **** 		return STATE_UNFINISHED;
2622:src/keys.c    **** 
2623:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2624:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2625:src/keys.c    **** 		goto set_pc_and_exit;
2626:src/keys.c    **** 
2627:src/keys.c    **** 	default:
2628:src/keys.c    **** 		return STATE_UNFINISHED;
2629:src/keys.c    **** 	}
2630:src/keys.c    **** 	State2.digval = 0;
2631:src/keys.c    **** 	State2.labellist = 0;
2632:src/keys.c    **** 	return check_confirm(op);
2633:src/keys.c    **** }
2634:src/keys.c    **** 
2635:src/keys.c    **** 
2636:src/keys.c    **** static void set_window(int c) {
 1509              		.loc 1 2636 31 is_stmt 1 view -0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 0
 1512              		@ frame_needed = 0, uses_anonymous_args = 0
2637:src/keys.c    **** 
2638:src/keys.c    **** 	if (State2.runmode) {
 1513              		.loc 1 2638 2 view .LVU479
2636:src/keys.c    **** 
 1514              		.loc 1 2636 31 is_stmt 0 view .LVU480
 1515 0000 38B5     		push	{r3, r4, r5, lr}
 1516              		.cfi_def_cfa_offset 16
 1517              		.cfi_offset 3, -16
 1518              		.cfi_offset 4, -12
 1519              		.cfi_offset 5, -8
 1520              		.cfi_offset 14, -4
 1521              		.loc 1 2638 6 view .LVU481
 1522 0002 224C     		ldr	r4, .L166
 1523 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1524              		.loc 1 2638 5 view .LVU482
 1525 0006 5A06     		lsls	r2, r3, #25
 1526 0008 00D4     		bmi	.L163
 1527              	.LVL120:
 1528              	.L151:
2639:src/keys.c    **** 		process_cmdline_set_lift();
2640:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2641:src/keys.c    **** 		State2.disp_freeze = 0;
2642:src/keys.c    **** 		display();	
2643:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2644:src/keys.c    **** 			if (UState.intm) {
2645:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2646:src/keys.c    **** 					State2.window--;
2647:src/keys.c    **** 				return;
2648:src/keys.c    **** 			}
2649:src/keys.c    **** 			else 
2650:src/keys.c    **** 				State2.window = is_dblmode();
ARM GAS  /tmp/cceb4mPP.s 			page 81


2651:src/keys.c    **** 		}
2652:src/keys.c    **** 		else {
2653:src/keys.c    **** 			if (UState.intm) {
2654:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2655:src/keys.c    **** 					State2.window++;
2656:src/keys.c    **** 				return;
2657:src/keys.c    **** 			}
2658:src/keys.c    **** 			else
2659:src/keys.c    **** 				State2.window = 0;
2660:src/keys.c    **** 		}
2661:src/keys.c    **** 		set_smode(SDISP_SHOW);
2662:src/keys.c    **** 	}
2663:src/keys.c    **** }
 1529              		.loc 1 2663 1 view .LVU483
 1530 000a 38BD     		pop	{r3, r4, r5, pc}
 1531              	.LVL121:
 1532              	.L163:
2639:src/keys.c    **** 		process_cmdline_set_lift();
 1533              		.loc 1 2639 3 is_stmt 1 view .LVU484
 1534 000c 0546     		mov	r5, r0
 1535 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1536              	.LVL122:
2641:src/keys.c    **** 		display();	
 1537              		.loc 1 2641 3 view .LVU485
2641:src/keys.c    **** 		display();	
 1538              		.loc 1 2641 22 is_stmt 0 view .LVU486
 1539 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1540 0014 6FF30413 		bfc	r3, #4, #1
 1541 0018 E375     		strb	r3, [r4, #23]
2642:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1542              		.loc 1 2642 3 is_stmt 1 view .LVU487
 1543 001a FFF7FEFF 		bl	display
 1544              	.LVL123:
2643:src/keys.c    **** 			if (UState.intm) {
 1545              		.loc 1 2643 3 view .LVU488
2644:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1546              		.loc 1 2644 8 is_stmt 0 view .LVU489
 1547 001e 1C4B     		ldr	r3, .L166+4
 1548 0020 1B68     		ldr	r3, [r3]
2643:src/keys.c    **** 			if (UState.intm) {
 1549              		.loc 1 2643 6 view .LVU490
 1550 0022 2C2D     		cmp	r5, #44
2644:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1551              		.loc 1 2644 8 view .LVU491
 1552 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2643:src/keys.c    **** 			if (UState.intm) {
 1553              		.loc 1 2643 6 view .LVU492
 1554 0028 18D0     		beq	.L164
2653:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1555              		.loc 1 2653 4 is_stmt 1 view .LVU493
2653:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1556              		.loc 1 2653 7 is_stmt 0 view .LVU494
 1557 002a 13F00103 		ands	r3, r3, #1
 1558 002e 09D1     		bne	.L165
2659:src/keys.c    **** 		}
 1559              		.loc 1 2659 5 is_stmt 1 view .LVU495
2659:src/keys.c    **** 		}
ARM GAS  /tmp/cceb4mPP.s 			page 82


 1560              		.loc 1 2659 19 is_stmt 0 view .LVU496
 1561 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1562 0032 63F3C502 		bfi	r2, r3, #3, #3
 1563 0036 2275     		strb	r2, [r4, #20]
 1564              	.L157:
2661:src/keys.c    **** 	}
 1565              		.loc 1 2661 3 is_stmt 1 view .LVU497
 1566              	.LVL124:
 1567              	.LBB274:
 1568              	.LBI274:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1569              		.loc 1 646 13 view .LVU498
 1570              	.LBB275:
 647:src/keys.c    **** }
 1571              		.loc 1 647 2 view .LVU499
 647:src/keys.c    **** }
 1572              		.loc 1 647 15 is_stmt 0 view .LVU500
 1573 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1574 003a 013B     		subs	r3, r3, #1
 1575 003c 18BF     		it	ne
 1576 003e 0123     		movne	r3, #1
 1577 0040 6374     		strb	r3, [r4, #17]
 1578              	.LVL125:
 647:src/keys.c    **** }
 1579              		.loc 1 647 15 view .LVU501
 1580              	.LBE275:
 1581              	.LBE274:
 1582              		.loc 1 2663 1 view .LVU502
 1583 0042 38BD     		pop	{r3, r4, r5, pc}
 1584              	.LVL126:
 1585              	.L165:
2654:src/keys.c    **** 					State2.window++;
 1586              		.loc 1 2654 5 is_stmt 1 view .LVU503
2654:src/keys.c    **** 					State2.window++;
 1587              		.loc 1 2654 22 is_stmt 0 view .LVU504
 1588 0044 134A     		ldr	r2, .L166+8
2654:src/keys.c    **** 					State2.window++;
 1589              		.loc 1 2654 42 view .LVU505
 1590 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2654:src/keys.c    **** 					State2.window++;
 1591              		.loc 1 2654 8 view .LVU506
 1592 0048 1168     		ldr	r1, [r2]
2654:src/keys.c    **** 					State2.window++;
 1593              		.loc 1 2654 42 view .LVU507
 1594 004a C3F3C202 		ubfx	r2, r3, #3, #3
2654:src/keys.c    **** 					State2.window++;
 1595              		.loc 1 2654 8 view .LVU508
 1596 004e 8A42     		cmp	r2, r1
 1597 0050 DBDA     		bge	.L151
2655:src/keys.c    **** 				return;
 1598              		.loc 1 2655 6 is_stmt 1 view .LVU509
2655:src/keys.c    **** 				return;
 1599              		.loc 1 2655 19 is_stmt 0 view .LVU510
 1600 0052 0132     		adds	r2, r2, #1
 1601 0054 62F3C503 		bfi	r3, r2, #3, #3
 1602 0058 2375     		strb	r3, [r4, #20]
 1603              		.loc 1 2663 1 view .LVU511
ARM GAS  /tmp/cceb4mPP.s 			page 83


 1604 005a 38BD     		pop	{r3, r4, r5, pc}
 1605              	.LVL127:
 1606              	.L164:
2644:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1607              		.loc 1 2644 4 is_stmt 1 view .LVU512
2644:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1608              		.loc 1 2644 7 is_stmt 0 view .LVU513
 1609 005c DB07     		lsls	r3, r3, #31
 1610 005e 0ED5     		bpl	.L155
 1611              	.LBB276:
 1612              	.LBI276:
2636:src/keys.c    **** 
 1613              		.loc 1 2636 13 is_stmt 1 view .LVU514
 1614              	.LVL128:
 1615              	.LBB277:
2645:src/keys.c    **** 					State2.window--;
 1616              		.loc 1 2645 5 view .LVU515
2645:src/keys.c    **** 					State2.window--;
 1617              		.loc 1 2645 22 is_stmt 0 view .LVU516
 1618 0060 0C4B     		ldr	r3, .L166+8
2645:src/keys.c    **** 					State2.window--;
 1619              		.loc 1 2645 8 view .LVU517
 1620 0062 1B68     		ldr	r3, [r3]
 1621 0064 002B     		cmp	r3, #0
 1622 0066 D0DD     		ble	.L151
2645:src/keys.c    **** 					State2.window--;
 1623              		.loc 1 2645 43 view .LVU518
 1624 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2645:src/keys.c    **** 					State2.window--;
 1625              		.loc 1 2645 26 view .LVU519
 1626 006a 13F0380F 		tst	r3, #56
 1627 006e CCD0     		beq	.L151
2646:src/keys.c    **** 				return;
 1628              		.loc 1 2646 6 is_stmt 1 view .LVU520
2646:src/keys.c    **** 				return;
 1629              		.loc 1 2646 12 is_stmt 0 view .LVU521
 1630 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2646:src/keys.c    **** 				return;
 1631              		.loc 1 2646 19 view .LVU522
 1632 0074 0732     		adds	r2, r2, #7
 1633 0076 62F3C503 		bfi	r3, r2, #3, #3
 1634 007a 2375     		strb	r3, [r4, #20]
 1635              	.LBE277:
 1636              	.LBE276:
 1637              		.loc 1 2663 1 view .LVU523
 1638 007c 38BD     		pop	{r3, r4, r5, pc}
 1639              	.LVL129:
 1640              	.L155:
2650:src/keys.c    **** 		}
 1641              		.loc 1 2650 5 is_stmt 1 view .LVU524
2650:src/keys.c    **** 		}
 1642              		.loc 1 2650 21 is_stmt 0 view .LVU525
 1643 007e FFF7FEFF 		bl	is_dblmode
 1644              	.LVL130:
2650:src/keys.c    **** 		}
 1645              		.loc 1 2650 19 view .LVU526
 1646 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
ARM GAS  /tmp/cceb4mPP.s 			page 84


 1647 0084 60F3C503 		bfi	r3, r0, #3, #3
 1648 0088 2375     		strb	r3, [r4, #20]
 1649 008a D5E7     		b	.L157
 1650              	.L167:
 1651              		.align	2
 1652              	.L166:
 1653 008c 00000000 		.word	StateWhileOn
 1654 0090 00000000 		.word	main_ram
 1655 0094 00000000 		.word	IntMaxWindow
 1656              		.cfi_endproc
 1657              	.LFE53:
 1659              		.section	.text.arg_storcl,"ax",%progbits
 1660              		.align	1
 1661              		.p2align 2,,3
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv4-sp-d16
 1667              	arg_storcl:
 1668              	.LVL131:
 1669              	.LFB34:
1597:src/keys.c    **** 	unsigned int b = CmdBase;
 1670              		.loc 1 1597 56 is_stmt 1 view -0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674              		@ link register save eliminated.
1598:src/keys.c    **** 
 1675              		.loc 1 1598 2 view .LVU528
1598:src/keys.c    **** 
 1676              		.loc 1 1598 19 is_stmt 0 view .LVU529
 1677 0000 0F4A     		ldr	r2, .L200
 1678 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1679              	.LVL132:
1600:src/keys.c    **** 		CmdBase += n;
 1680              		.loc 1 1600 2 is_stmt 1 view .LVU530
 1681              	.LBB286:
 1682              	.LBI286:
1588:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1683              		.loc 1 1588 12 view .LVU531
 1684              	.LBB287:
1593:src/keys.c    **** #endif
 1685              		.loc 1 1593 2 view .LVU532
1593:src/keys.c    **** #endif
 1686              		.loc 1 1593 41 is_stmt 0 view .LVU533
 1687 0004 032B     		cmp	r3, #3
 1688 0006 14D0     		beq	.L169
1593:src/keys.c    **** #endif
 1689              		.loc 1 1593 24 view .LVU534
 1690 0008 0A2B     		cmp	r3, #10
 1691 000a 12D0     		beq	.L169
 1692              	.LVL133:
 1693              	.LBB288:
 1694              	.LBI288:
1588:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1695              		.loc 1 1588 12 is_stmt 1 view .LVU535
 1696              	.LBB289:
ARM GAS  /tmp/cceb4mPP.s 			page 85


1593:src/keys.c    **** #endif
 1697              		.loc 1 1593 41 is_stmt 0 view .LVU536
 1698 000c 19B1     		cbz	r1, .L170
1593:src/keys.c    **** #endif
 1699              		.loc 1 1593 51 view .LVU537
 1700 000e 152B     		cmp	r3, #21
 1701 0010 0FD0     		beq	.L169
1593:src/keys.c    **** #endif
 1702              		.loc 1 1593 70 view .LVU538
 1703 0012 1A2B     		cmp	r3, #26
 1704 0014 0DD0     		beq	.L169
 1705              	.L170:
 1706              	.LVL134:
1593:src/keys.c    **** #endif
 1707              		.loc 1 1593 70 view .LVU539
 1708              	.LBE289:
 1709              	.LBE288:
 1710              	.LBE287:
 1711              	.LBE286:
1605:src/keys.c    **** 		b -= n;
 1712              		.loc 1 1605 2 is_stmt 1 view .LVU540
1605:src/keys.c    **** 		b -= n;
 1713              		.loc 1 1605 5 is_stmt 0 view .LVU541
 1714 0016 8342     		cmp	r3, r0
 1715 0018 09D3     		bcc	.L175
1606:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1716              		.loc 1 1606 3 is_stmt 1 view .LVU542
1606:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1717              		.loc 1 1606 5 is_stmt 0 view .LVU543
 1718 001a 1B1A     		subs	r3, r3, r0
 1719              	.LVL135:
1607:src/keys.c    **** 			CmdBase = b;
 1720              		.loc 1 1607 3 is_stmt 1 view .LVU544
 1721              	.LBB290:
 1722              	.LBI290:
1588:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1723              		.loc 1 1588 12 view .LVU545
 1724              	.LBB291:
1593:src/keys.c    **** #endif
 1725              		.loc 1 1593 2 view .LVU546
1593:src/keys.c    **** #endif
 1726              		.loc 1 1593 41 is_stmt 0 view .LVU547
 1727 001c 032B     		cmp	r3, #3
 1728 001e 0CD0     		beq	.L173
1593:src/keys.c    **** #endif
 1729              		.loc 1 1593 24 view .LVU548
 1730 0020 0A2B     		cmp	r3, #10
 1731 0022 0AD0     		beq	.L173
 1732              	.LVL136:
 1733              	.LBB292:
 1734              	.LBI292:
1588:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1735              		.loc 1 1588 12 is_stmt 1 view .LVU549
 1736              	.LBB293:
1593:src/keys.c    **** #endif
 1737              		.loc 1 1593 41 is_stmt 0 view .LVU550
 1738 0024 19B1     		cbz	r1, .L175
ARM GAS  /tmp/cceb4mPP.s 			page 86


1593:src/keys.c    **** #endif
 1739              		.loc 1 1593 51 view .LVU551
 1740 0026 152B     		cmp	r3, #21
 1741 0028 07D0     		beq	.L173
1593:src/keys.c    **** #endif
 1742              		.loc 1 1593 70 view .LVU552
 1743 002a 1A2B     		cmp	r3, #26
 1744 002c 05D0     		beq	.L173
 1745              	.LVL137:
 1746              	.L175:
1593:src/keys.c    **** #endif
 1747              		.loc 1 1593 70 view .LVU553
 1748              	.LBE293:
 1749              	.LBE292:
 1750              	.LBE291:
 1751              	.LBE290:
1612:src/keys.c    **** }
 1752              		.loc 1 1612 9 view .LVU554
 1753 002e 0020     		movs	r0, #0
 1754              	.LVL138:
1613:src/keys.c    **** 
 1755              		.loc 1 1613 1 view .LVU555
 1756 0030 7047     		bx	lr
 1757              	.LVL139:
 1758              	.L169:
1601:src/keys.c    **** 		return 1;
 1759              		.loc 1 1601 3 is_stmt 1 view .LVU556
1601:src/keys.c    **** 		return 1;
 1760              		.loc 1 1601 11 is_stmt 0 view .LVU557
 1761 0032 1844     		add	r0, r0, r3
 1762              	.LVL140:
1601:src/keys.c    **** 		return 1;
 1763              		.loc 1 1601 11 view .LVU558
 1764 0034 D077     		strb	r0, [r2, #31]
1602:src/keys.c    **** 	}
 1765              		.loc 1 1602 3 is_stmt 1 view .LVU559
1602:src/keys.c    **** 	}
 1766              		.loc 1 1602 10 is_stmt 0 view .LVU560
 1767 0036 0120     		movs	r0, #1
 1768 0038 7047     		bx	lr
 1769              	.LVL141:
 1770              	.L173:
1608:src/keys.c    **** 			return 1;
 1771              		.loc 1 1608 4 is_stmt 1 view .LVU561
1608:src/keys.c    **** 			return 1;
 1772              		.loc 1 1608 12 is_stmt 0 view .LVU562
 1773 003a D377     		strb	r3, [r2, #31]
1609:src/keys.c    **** 		}
 1774              		.loc 1 1609 4 is_stmt 1 view .LVU563
1609:src/keys.c    **** 		}
 1775              		.loc 1 1609 11 is_stmt 0 view .LVU564
 1776 003c 0120     		movs	r0, #1
 1777              	.LVL142:
1609:src/keys.c    **** 		}
 1778              		.loc 1 1609 11 view .LVU565
 1779 003e 7047     		bx	lr
 1780              	.L201:
ARM GAS  /tmp/cceb4mPP.s 			page 87


 1781              		.align	2
 1782              	.L200:
 1783 0040 00000000 		.word	StateWhileOn
 1784              		.cfi_endproc
 1785              	.LFE34:
 1787              		.section	.text.process_arg,"ax",%progbits
 1788              		.align	1
 1789              		.p2align 2,,3
 1790              		.syntax unified
 1791              		.thumb
 1792              		.thumb_func
 1793              		.fpu fpv4-sp-d16
 1795              	process_arg:
 1796              	.LVL143:
 1797              	.LFB37:
1647:src/keys.c    **** 	unsigned int base = CmdBase;
 1798              		.loc 1 1647 41 is_stmt 1 view -0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 8
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
1648:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1802              		.loc 1 1648 2 view .LVU567
1647:src/keys.c    **** 	unsigned int base = CmdBase;
 1803              		.loc 1 1647 41 is_stmt 0 view .LVU568
 1804 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1805              		.cfi_def_cfa_offset 36
 1806              		.cfi_offset 4, -36
 1807              		.cfi_offset 5, -32
 1808              		.cfi_offset 6, -28
 1809              		.cfi_offset 7, -24
 1810              		.cfi_offset 8, -20
 1811              		.cfi_offset 9, -16
 1812              		.cfi_offset 10, -12
 1813              		.cfi_offset 11, -8
 1814              		.cfi_offset 14, -4
1648:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1815              		.loc 1 1648 22 view .LVU569
 1816 0004 AC4C     		ldr	r4, .L317
1650:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1817              		.loc 1 1650 31 view .LVU570
 1818 0006 DFF8C0B2 		ldr	fp, .L317+16
1648:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1819              		.loc 1 1648 22 view .LVU571
 1820 000a E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1821              	.LVL144:
1649:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1822              		.loc 1 1649 2 is_stmt 1 view .LVU572
 1823              	.LBB315:
 1824              	.LBB316:
 1825              	.LBB317:
 1826              	.LBB318:
 131:src/keys.c    **** }
 1827              		.loc 1 131 23 is_stmt 0 view .LVU573
 1828 000c AB4B     		ldr	r3, .L317+4
 1829              	.LBE318:
 1830              	.LBE317:
 221:src/keys.c    **** }
ARM GAS  /tmp/cceb4mPP.s 			page 88


 1831              		.loc 1 221 28 view .LVU574
 1832 000e AC4A     		ldr	r2, .L317+8
 1833              	.LBB321:
 1834              	.LBB319:
 131:src/keys.c    **** }
 1835              		.loc 1 131 23 view .LVU575
 1836 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1837              	.LBE319:
 1838              	.LBE321:
 1839              	.LBE316:
 1840              	.LBE315:
1650:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1841              		.loc 1 1650 31 view .LVU576
 1842 0012 0BEB0711 		add	r1, fp, r7, lsl #4
1647:src/keys.c    **** 	unsigned int base = CmdBase;
 1843              		.loc 1 1647 41 view .LVU577
 1844 0016 83B0     		sub	sp, sp, #12
 1845              		.cfi_def_cfa_offset 48
1650:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1846              		.loc 1 1650 31 view .LVU578
 1847 0018 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1848              	.LBB325:
 1849              	.LBB323:
 221:src/keys.c    **** }
 1850              		.loc 1 221 28 view .LVU579
 1851 001a 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1852              	.LBE323:
 1853              	.LBE325:
1650:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1854              		.loc 1 1650 31 view .LVU580
 1855 001e C1F38003 		ubfx	r3, r1, #2, #1
 1856 0022 0193     		str	r3, [sp, #4]
1650:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1857              		.loc 1 1650 40 view .LVU581
 1858 0024 4B07     		lsls	r3, r1, #29
 1859 0026 58BF     		it	pl
 1860 0028 94F91580 		ldrsbpl	r8, [r4, #21]
1651:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1861              		.loc 1 1651 20 view .LVU582
 1862 002c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1863 002e 0093     		str	r3, [sp]
1650:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1864              		.loc 1 1650 40 view .LVU583
 1865 0030 54BF     		ite	pl
 1866 0032 4FEAD878 		lsrpl	r8, r8, #31
 1867 0036 4FF00108 		movmi	r8, #1
1647:src/keys.c    **** 	unsigned int base = CmdBase;
 1868              		.loc 1 1647 41 view .LVU584
 1869 003a 0646     		mov	r6, r0
 1870              	.LVL145:
 1871              	.LBB326:
 1872              	.LBI315:
 198:src/keys.c    **** {
 1873              		.loc 1 198 14 is_stmt 1 view .LVU585
 1874              	.LBB324:
 200:src/keys.c    ****     // K00 - K05
 1875              		.loc 1 200 3 view .LVU586
ARM GAS  /tmp/cceb4mPP.s 			page 89


 221:src/keys.c    **** }
 1876              		.loc 1 221 3 view .LVU587
 1877              	.LBB322:
 1878              	.LBI317:
 119:src/keys.c    **** {
 1879              		.loc 1 119 12 view .LVU588
 1880              	.LBB320:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1881              		.loc 1 121 2 view .LVU589
 131:src/keys.c    **** }
 1882              		.loc 1 131 2 view .LVU590
 131:src/keys.c    **** }
 1883              		.loc 1 131 2 is_stmt 0 view .LVU591
 1884              	.LBE320:
 1885              	.LBE322:
 221:src/keys.c    **** }
 1886              		.loc 1 221 10 view .LVU592
 1887 003c 4D46     		mov	r5, r9
 1888              	.LVL146:
 221:src/keys.c    **** }
 1889              		.loc 1 221 10 view .LVU593
 1890              	.LBE324:
 1891              	.LBE326:
1650:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1892              		.loc 1 1650 2 is_stmt 1 view .LVU594
1651:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1893              		.loc 1 1651 2 view .LVU595
1652:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1894              		.loc 1 1652 2 view .LVU596
 1895              	.LBB327:
 1896              	.LBI327:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 1897              		.loc 1 102 13 view .LVU597
 1898              	.LBE327:
 103:src/keys.c    **** }
 1899              		.loc 1 103 2 view .LVU598
 1900              	.LBB342:
 1901              	.LBB328:
 1902              	.LBI328:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 1903              		.loc 1 92 20 view .LVU599
 1904              	.LBB329:
  93:src/keys.c    **** 	State2.shifts = shift;
 1905              		.loc 1 93 2 view .LVU600
 1906              	.LBB330:
 1907              	.LBI330:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 1908              		.loc 1 84 13 view .LVU601
 1909              	.LBB331:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1910              		.loc 1 85 2 view .LVU602
 1911              	.LBE331:
 1912              	.LBE330:
 1913              	.LBE329:
 1914              	.LBE328:
 1915              	.LBE342:
1650:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
ARM GAS  /tmp/cceb4mPP.s 			page 90


 1916              		.loc 1 1650 31 is_stmt 0 view .LVU603
 1917 003e 4FEA071A 		lsl	r10, r7, #4
 1918              	.LBB343:
 1919              	.LBB338:
 1920              	.LBB334:
 1921              	.LBB333:
 1922              	.LBB332:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1923              		.loc 1 85 18 view .LVU604
 1924 0042 FFF7FEFF 		bl	shift_down
 1925              	.LVL147:
  86:src/keys.c    **** }
 1926              		.loc 1 86 2 is_stmt 1 view .LVU605
  86:src/keys.c    **** }
 1927              		.loc 1 86 52 is_stmt 0 view .LVU606
 1928 0046 00B9     		cbnz	r0, .L204
 1929 0048 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1930              	.LVL148:
 1931              	.L204:
  86:src/keys.c    **** }
 1932              		.loc 1 86 52 view .LVU607
 1933              	.LBE332:
 1934              	.LBE333:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1935              		.loc 1 94 2 is_stmt 1 view .LVU608
 1936              	.LBE334:
 1937              	.LBE338:
 1938              	.LBE343:
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1939              		.loc 1 1653 38 is_stmt 0 view .LVU609
 1940 004a 0BEB0A01 		add	r1, fp, r10
 1941              	.LBB344:
 1942              	.LBB339:
 1943              	.LBB335:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1944              		.loc 1 94 16 view .LVU610
 1945 004e 4FF0000C 		mov	ip, #0
 1946              	.LBE335:
 1947              	.LBE339:
 1948              	.LBE344:
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1949              		.loc 1 1653 38 view .LVU611
 1950 0052 91F805E0 		ldrb	lr, [r1, #5]	@ zero_extendqisi2
 1951              	.LBB345:
 1952              	.LBB340:
 1953              	.LBB336:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1954              		.loc 1 94 16 view .LVU612
 1955 0056 84F810C0 		strb	ip, [r4, #16]
  95:src/keys.c    **** 	return r;
 1956              		.loc 1 95 2 is_stmt 1 view .LVU613
 1957              	.LBE336:
 1958              	.LBE340:
 1959              	.LBE345:
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1960              		.loc 1 1653 61 is_stmt 0 view .LVU614
 1961 005a 1EF0200F 		tst	lr, #32
ARM GAS  /tmp/cceb4mPP.s 			page 91


1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1962              		.loc 1 1653 38 view .LVU615
 1963 005e CEF34011 		ubfx	r1, lr, #5, #1
 1964              	.LBB346:
 1965              	.LBB341:
 1966              	.LBB337:
  95:src/keys.c    **** 	return r;
 1967              		.loc 1 95 19 view .LVU616
 1968 0062 84F80DC0 		strb	ip, [r4, #13]
  96:src/keys.c    **** }
 1969              		.loc 1 96 2 is_stmt 1 view .LVU617
 1970              	.LVL149:
  96:src/keys.c    **** }
 1971              		.loc 1 96 2 is_stmt 0 view .LVU618
 1972              	.LBE337:
 1973              	.LBE341:
 1974              	.LBE346:
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1975              		.loc 1 1653 2 is_stmt 1 view .LVU619
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1976              		.loc 1 1653 61 is_stmt 0 view .LVU620
 1977 0066 47D0     		beq	.L205
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1978              		.loc 1 1653 61 discriminator 1 view .LVU621
 1979 0068 94F815E0 		ldrb	lr, [r4, #21]	@ zero_extendqisi2
 1980 006c 1EF0C00F 		tst	lr, #192
 1981 0070 57D1     		bne	.L206
 1982              	.LVL150:
1654:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1983              		.loc 1 1654 2 is_stmt 1 view .LVU622
1654:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1984              		.loc 1 1654 35 is_stmt 0 view .LVU623
 1985 0072 292E     		cmp	r6, #41
 1986 0074 7DD0     		beq	.L207
1655:src/keys.c    **** 
 1987              		.loc 1 1655 11 view .LVU624
 1988 0076 0128     		cmp	r0, #1
 1989 0078 00F09280 		beq	.L208
1655:src/keys.c    **** 
 1990              		.loc 1 1655 32 discriminator 3 view .LVU625
 1991 007c B9F1090F 		cmp	r9, #9
 1992 0080 00F28B80 		bhi	.L209
 1993              	.LVL151:
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
 1994              		.loc 1 1657 2 is_stmt 1 view .LVU626
1658:src/keys.c    **** 		reset_arg();
 1995              		.loc 1 1658 2 view .LVU627
1658:src/keys.c    **** 		reset_arg();
 1996              		.loc 1 1658 5 is_stmt 0 view .LVU628
 1997 0084 8C2F     		cmp	r7, #140
 1998 0086 50D8     		bhi	.L266
1663:src/keys.c    **** 	  switch (n) {
 1999              		.loc 1 1663 35 view .LVU629
 2000 0088 6069     		ldr	r0, [r4, #20]
 2001              	.LVL152:
1663:src/keys.c    **** 	  switch (n) {
 2002              		.loc 1 1663 35 view .LVU630
ARM GAS  /tmp/cceb4mPP.s 			page 92


 2003 008a 10F4103F 		tst	r0, #147456
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2004              		.loc 1 1653 61 view .LVU631
 2005 008e 4FF0010C 		mov	ip, #1
1663:src/keys.c    **** 	  switch (n) {
 2006              		.loc 1 1663 35 view .LVU632
 2007 0092 7BD0     		beq	.L270
 2008              	.LVL153:
 2009              	.L217:
1686:src/keys.c    **** 		// row column shorthand addressing
 2010              		.loc 1 1686 2 is_stmt 1 view .LVU633
1711:src/keys.c    **** 	case K_F:
 2011              		.loc 1 1711 2 view .LVU634
 2012 0094 2D2E     		cmp	r6, #45
 2013 0096 4AD8     		bhi	.L304
 2014 0098 DFE816F0 		tbh	[pc, r6, lsl #1]
 2015              	.L268:
 2016 009c 4D00     		.2byte	(.L232-.L268)/2
 2017 009e 4D00     		.2byte	(.L232-.L268)/2
 2018 00a0 4D00     		.2byte	(.L232-.L268)/2
 2019 00a2 4D00     		.2byte	(.L232-.L268)/2
 2020 00a4 4900     		.2byte	(.L304-.L268)/2
 2021 00a6 4900     		.2byte	(.L304-.L268)/2
 2022 00a8 4900     		.2byte	(.L304-.L268)/2
 2023 00aa 4900     		.2byte	(.L304-.L268)/2
 2024 00ac 4D00     		.2byte	(.L232-.L268)/2
 2025 00ae 4D00     		.2byte	(.L232-.L268)/2
 2026 00b0 4D00     		.2byte	(.L232-.L268)/2
 2027 00b2 4D00     		.2byte	(.L232-.L268)/2
 2028 00b4 D700     		.2byte	(.L255-.L268)/2
 2029 00b6 4900     		.2byte	(.L304-.L268)/2
 2030 00b8 4900     		.2byte	(.L304-.L268)/2
 2031 00ba 4900     		.2byte	(.L304-.L268)/2
 2032 00bc 6901     		.2byte	(.L262-.L268)/2
 2033 00be 4900     		.2byte	(.L304-.L268)/2
 2034 00c0 DD00     		.2byte	(.L253-.L268)/2
 2035 00c2 4900     		.2byte	(.L304-.L268)/2
 2036 00c4 4900     		.2byte	(.L304-.L268)/2
 2037 00c6 4900     		.2byte	(.L304-.L268)/2
 2038 00c8 6301     		.2byte	(.L252-.L268)/2
 2039 00ca 4900     		.2byte	(.L304-.L268)/2
 2040 00cc 5701     		.2byte	(.L254-.L268)/2
 2041 00ce 5D01     		.2byte	(.L231-.L268)/2
 2042 00d0 4900     		.2byte	(.L304-.L268)/2
 2043 00d2 4900     		.2byte	(.L304-.L268)/2
 2044 00d4 9800     		.2byte	(.L249-.L268)/2
 2045 00d6 4900     		.2byte	(.L304-.L268)/2
 2046 00d8 4900     		.2byte	(.L304-.L268)/2
 2047 00da 4101     		.2byte	(.L233-.L268)/2
 2048 00dc 4B01     		.2byte	(.L234-.L268)/2
 2049 00de 5101     		.2byte	(.L235-.L268)/2
 2050 00e0 E300     		.2byte	(.L246-.L268)/2
 2051 00e2 4900     		.2byte	(.L304-.L268)/2
 2052 00e4 4700     		.2byte	(.L266-.L268)/2
 2053 00e6 4900     		.2byte	(.L304-.L268)/2
 2054 00e8 EF00     		.2byte	(.L239-.L268)/2
 2055 00ea 4900     		.2byte	(.L304-.L268)/2
ARM GAS  /tmp/cceb4mPP.s 			page 93


 2056 00ec 1801     		.2byte	(.L243-.L268)/2
 2057 00ee B000     		.2byte	(.L225-.L268)/2
 2058 00f0 4900     		.2byte	(.L304-.L268)/2
 2059 00f2 4900     		.2byte	(.L304-.L268)/2
 2060 00f4 2701     		.2byte	(.L227-.L268)/2
 2061 00f6 C800     		.2byte	(.L229-.L268)/2
 2062              	.LVL154:
 2063              		.p2align 1
 2064              	.L205:
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
 2065              		.loc 1 1657 2 view .LVU635
1658:src/keys.c    **** 		reset_arg();
 2066              		.loc 1 1658 5 is_stmt 0 view .LVU636
 2067 00f8 8C2F     		cmp	r7, #140
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
 2068              		.loc 1 1657 4 view .LVU637
 2069 00fa 29F08005 		bic	r5, r9, #128
 2070              	.LVL155:
1658:src/keys.c    **** 		reset_arg();
 2071              		.loc 1 1658 2 is_stmt 1 view .LVU638
1658:src/keys.c    **** 		reset_arg();
 2072              		.loc 1 1658 5 is_stmt 0 view .LVU639
 2073 00fe 14D8     		bhi	.L266
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2074              		.loc 1 1653 61 view .LVU640
 2075 0100 8C46     		mov	ip, r1
 2076              	.L214:
1663:src/keys.c    **** 	  switch (n) {
 2077              		.loc 1 1663 35 discriminator 1 view .LVU641
 2078 0102 6069     		ldr	r0, [r4, #20]
 2079              	.LVL156:
1663:src/keys.c    **** 	  switch (n) {
 2080              		.loc 1 1663 35 discriminator 1 view .LVU642
 2081 0104 10F4103F 		tst	r0, #147456
 2082 0108 C4D1     		bne	.L217
1664:src/keys.c    **** 	  case regX_idx:
 2083              		.loc 1 1664 4 is_stmt 1 view .LVU643
 2084 010a 672D     		cmp	r5, #103
 2085 010c C2D8     		bhi	.L217
 2086              	.LVL157:
 2087              	.L269:
1664:src/keys.c    **** 	  case regX_idx:
 2088              		.loc 1 1664 4 is_stmt 0 view .LVU644
 2089 010e 632D     		cmp	r5, #99
 2090 0110 3CD9     		bls	.L270
 2091 0112 653D     		subs	r5, r5, #101
 2092 0114 022D     		cmp	r5, #2
 2093 0116 00F2AA81 		bhi	.L220
 2094 011a DFE805F0 		tbb	[pc, r5]
 2095              	.L222:
 2096 011e 6B       		.byte	(.L224-.L222)/2
 2097 011f 65       		.byte	(.L223-.L222)/2
 2098 0120 6D       		.byte	(.L221-.L222)/2
 2099              	.LVL158:
 2100 0121 00       		.p2align 1
 2101              	.L206:
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
ARM GAS  /tmp/cceb4mPP.s 			page 94


 2102              		.loc 1 1657 2 is_stmt 1 view .LVU645
1658:src/keys.c    **** 		reset_arg();
 2103              		.loc 1 1658 5 is_stmt 0 view .LVU646
 2104 0122 8C2F     		cmp	r7, #140
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
 2105              		.loc 1 1657 4 view .LVU647
 2106 0124 29F08005 		bic	r5, r9, #128
 2107              	.LVL159:
1658:src/keys.c    **** 		reset_arg();
 2108              		.loc 1 1658 2 is_stmt 1 view .LVU648
1658:src/keys.c    **** 		reset_arg();
 2109              		.loc 1 1658 5 is_stmt 0 view .LVU649
 2110 0128 EBD9     		bls	.L214
 2111              	.LVL160:
 2112              	.L266:
1878:src/keys.c    **** 	default:
 2113              		.loc 1 1878 3 is_stmt 1 view .LVU650
 2114 012a FFF7FEFF 		bl	reset_arg
 2115              	.LVL161:
 2116              	.L304:
1882:src/keys.c    **** }
 2117              		.loc 1 1882 9 is_stmt 0 view .LVU651
 2118 012e 3320     		movs	r0, #51
 2119              	.L202:
1883:src/keys.c    **** 
 2120              		.loc 1 1883 1 view .LVU652
 2121 0130 03B0     		add	sp, sp, #12
 2122              		.cfi_remember_state
 2123              		.cfi_def_cfa_offset 36
 2124              	.LVL162:
1883:src/keys.c    **** 
 2125              		.loc 1 1883 1 view .LVU653
 2126              		@ sp needed
 2127 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2128              	.LVL163:
 2129              	.L232:
 2130              		.cfi_restore_state
1766:src/keys.c    **** 			return arg_eval(n);
 2131              		.loc 1 1766 4 is_stmt 1 view .LVU654
1766:src/keys.c    **** 			return arg_eval(n);
 2132              		.loc 1 1766 8 is_stmt 0 view .LVU655
 2133 0136 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1766:src/keys.c    **** 			return arg_eval(n);
 2134              		.loc 1 1766 7 view .LVU656
 2135 0138 5F06     		lsls	r7, r3, #25
 2136              	.LVL164:
1766:src/keys.c    **** 			return arg_eval(n);
 2137              		.loc 1 1766 7 view .LVU657
 2138 013a 53D4     		bmi	.L251
1766:src/keys.c    **** 			return arg_eval(n);
 2139              		.loc 1 1766 19 discriminator 1 view .LVU658
 2140 013c B8F1000F 		cmp	r8, #0
 2141 0140 50D1     		bne	.L251
1768:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2142              		.loc 1 1768 3 is_stmt 1 view .LVU659
1768:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2143              		.loc 1 1768 6 is_stmt 0 view .LVU660
ARM GAS  /tmp/cceb4mPP.s 			page 95


 2144 0142 032E     		cmp	r6, #3
 2145 0144 F3D8     		bhi	.L304
1769:src/keys.c    **** 		break;
 2146              		.loc 1 1769 4 is_stmt 1 view .LVU661
 2147              	.LVL165:
 2148              	.LBB347:
 2149              	.LBI347:
1574:src/keys.c    **** 	const unsigned int b = CmdBase;
 2150              		.loc 1 1574 12 view .LVU662
 2151              	.LBB348:
1575:src/keys.c    **** 
 2152              		.loc 1 1575 2 view .LVU663
1575:src/keys.c    **** 
 2153              		.loc 1 1575 21 is_stmt 0 view .LVU664
 2154 0146 E27F     		ldrb	r2, [r4, #31]	@ zero_extendqisi2
 2155              	.LVL166:
1577:src/keys.c    **** 	{
 2156              		.loc 1 1577 2 is_stmt 1 view .LVU665
1577:src/keys.c    **** 	{
 2157              		.loc 1 1577 16 is_stmt 0 view .LVU666
 2158 0148 0BEB0210 		add	r0, fp, r2, lsl #4
 2159 014c 1101     		lsls	r1, r2, #4
 2160 014e 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1577:src/keys.c    **** 	{
 2161              		.loc 1 1577 5 view .LVU667
 2162 0150 8006     		lsls	r0, r0, #26
 2163 0152 02D4     		bmi	.L238
1577:src/keys.c    **** 	{
 2164              		.loc 1 1577 40 view .LVU668
 2165 0154 513A     		subs	r2, r2, #81
 2166              	.LVL167:
1577:src/keys.c    **** 	{
 2167              		.loc 1 1577 23 view .LVU669
 2168 0156 0A2A     		cmp	r2, #10
 2169 0158 E9D8     		bhi	.L304
 2170              	.LVL168:
 2171              	.L238:
1579:src/keys.c    **** 			return STATE_UNFINISHED;
 2172              		.loc 1 1579 3 is_stmt 1 view .LVU670
1579:src/keys.c    **** 			return STATE_UNFINISHED;
 2173              		.loc 1 1579 6 is_stmt 0 view .LVU671
 2174 015a 1F06     		lsls	r7, r3, #24
 2175 015c E7D4     		bmi	.L304
1579:src/keys.c    **** 			return STATE_UNFINISHED;
 2176              		.loc 1 1579 18 view .LVU672
 2177 015e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2178 0160 002B     		cmp	r3, #0
 2179 0162 E4D1     		bne	.L304
1581:src/keys.c    **** 			return STATE_UNFINISHED;
 2180              		.loc 1 1581 3 is_stmt 1 view .LVU673
1581:src/keys.c    **** 			return STATE_UNFINISHED;
 2181              		.loc 1 1581 17 is_stmt 0 view .LVU674
 2182 0164 5944     		add	r1, r1, fp
1581:src/keys.c    **** 			return STATE_UNFINISHED;
 2183              		.loc 1 1581 6 view .LVU675
 2184 0166 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2185 0168 632B     		cmp	r3, #99
ARM GAS  /tmp/cceb4mPP.s 			page 96


 2186 016a E0D9     		bls	.L304
1583:src/keys.c    **** 	}
 2187              		.loc 1 1583 3 is_stmt 1 view .LVU676
1583:src/keys.c    **** 	}
 2188              		.loc 1 1583 10 is_stmt 0 view .LVU677
 2189 016c 06F16400 		add	r0, r6, #100
 2190 0170 27E0     		b	.L306
 2191              	.LVL169:
 2192              	.L207:
1583:src/keys.c    **** 	}
 2193              		.loc 1 1583 10 view .LVU678
 2194              	.LBE348:
 2195              	.LBE347:
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
 2196              		.loc 1 1657 2 is_stmt 1 view .LVU679
1658:src/keys.c    **** 		reset_arg();
 2197              		.loc 1 1658 2 view .LVU680
1658:src/keys.c    **** 		reset_arg();
 2198              		.loc 1 1658 5 is_stmt 0 view .LVU681
 2199 0172 8C2F     		cmp	r7, #140
 2200 0174 D9D8     		bhi	.L266
1663:src/keys.c    **** 	  switch (n) {
 2201              		.loc 1 1663 35 view .LVU682
 2202 0176 6069     		ldr	r0, [r4, #20]
 2203              	.LVL170:
1663:src/keys.c    **** 	  switch (n) {
 2204              		.loc 1 1663 35 view .LVU683
 2205 0178 10F4103F 		tst	r0, #147456
 2206 017c 41D1     		bne	.L226
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
 2207              		.loc 1 1657 4 view .LVU684
 2208 017e 29F08005 		bic	r5, r9, #128
1664:src/keys.c    **** 	  case regX_idx:
 2209              		.loc 1 1664 4 is_stmt 1 view .LVU685
 2210 0182 672D     		cmp	r5, #103
 2211 0184 3DD8     		bhi	.L226
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2212              		.loc 1 1653 61 is_stmt 0 view .LVU686
 2213 0186 4FF0010C 		mov	ip, #1
 2214 018a C0E7     		b	.L269
 2215              	.LVL171:
 2216              	.L270:
1664:src/keys.c    **** 	  case regX_idx:
 2217              		.loc 1 1664 4 view .LVU687
 2218 018c 1DB1     		cbz	r5, .L219
 2219 018e 6B1F     		subs	r3, r5, #5
 2220 0190 042B     		cmp	r3, #4
 2221 0192 3FF67FAF 		bhi	.L217
 2222              	.L219:
1679:src/keys.c    **** 	  }
 2223              		.loc 1 1679 6 is_stmt 1 view .LVU688
1679:src/keys.c    **** 	  }
 2224              		.loc 1 1679 13 is_stmt 0 view .LVU689
 2225 0196 2846     		mov	r0, r5
 2226 0198 27E0     		b	.L305
 2227              	.LVL172:
 2228              	.L209:
ARM GAS  /tmp/cceb4mPP.s 			page 97


1655:src/keys.c    **** 
 2229              		.loc 1 1655 42 discriminator 4 view .LVU690
 2230 019a 19F0800F 		tst	r9, #128
 2231 019e 3ED1     		bne	.L212
 2232              	.L208:
 2233              	.LVL173:
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
 2234              		.loc 1 1657 2 is_stmt 1 view .LVU691
1658:src/keys.c    **** 		reset_arg();
 2235              		.loc 1 1658 2 view .LVU692
1658:src/keys.c    **** 		reset_arg();
 2236              		.loc 1 1658 5 is_stmt 0 view .LVU693
 2237 01a0 8C2F     		cmp	r7, #140
 2238 01a2 C2D8     		bhi	.L266
1686:src/keys.c    **** 		// row column shorthand addressing
 2239              		.loc 1 1686 2 is_stmt 1 view .LVU694
1688:src/keys.c    **** 
 2240              		.loc 1 1688 3 view .LVU695
 2241              	.LVL174:
 2242              	.LBB349:
 2243              	.LBI349:
 167:src/keys.c    **** {
 2244              		.loc 1 167 5 view .LVU696
 2245              	.LBB350:
 169:src/keys.c    **** }
 2246              		.loc 1 169 2 view .LVU697
 169:src/keys.c    **** }
 2247              		.loc 1 169 18 is_stmt 0 view .LVU698
 2248 01a4 474B     		ldr	r3, .L317+12
 2249 01a6 A3FB0623 		umull	r2, r3, r3, r6
 169:src/keys.c    **** }
 2250              		.loc 1 169 24 view .LVU699
 2251 01aa 03F0FC00 		and	r0, r3, #252
 2252              	.LVL175:
 169:src/keys.c    **** }
 2253              		.loc 1 169 24 view .LVU700
 2254 01ae 00EB9300 		add	r0, r0, r3, lsr #2
 169:src/keys.c    **** }
 2255              		.loc 1 169 18 view .LVU701
 2256 01b2 9B08     		lsrs	r3, r3, #2
 169:src/keys.c    **** }
 2257              		.loc 1 169 24 view .LVU702
 2258 01b4 4000     		lsls	r0, r0, #1
 169:src/keys.c    **** }
 2259              		.loc 1 169 33 view .LVU703
 2260 01b6 03EB4303 		add	r3, r3, r3, lsl #1
 169:src/keys.c    **** }
 2261              		.loc 1 169 12 view .LVU704
 2262 01ba 0B30     		adds	r0, r0, #11
 169:src/keys.c    **** }
 2263              		.loc 1 169 33 view .LVU705
 2264 01bc A6EB4306 		sub	r6, r6, r3, lsl #1
 2265              	.LBE350:
 2266              	.LBE349:
1688:src/keys.c    **** 
 2267              		.loc 1 1688 10 view .LVU706
 2268 01c0 3044     		add	r0, r0, r6
ARM GAS  /tmp/cceb4mPP.s 			page 98


 2269              	.LVL176:
 2270              	.L306:
1883:src/keys.c    **** 
 2271              		.loc 1 1883 1 view .LVU707
 2272 01c2 03B0     		add	sp, sp, #12
 2273              		.cfi_remember_state
 2274              		.cfi_def_cfa_offset 36
 2275              	.LVL177:
1883:src/keys.c    **** 
 2276              		.loc 1 1883 1 view .LVU708
 2277              		@ sp needed
 2278 01c4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2279              		.cfi_restore 14
 2280              		.cfi_restore 11
 2281              		.cfi_restore 10
 2282              		.cfi_restore 9
 2283              		.cfi_restore 8
 2284              		.cfi_restore 7
 2285              		.cfi_restore 6
 2286              		.cfi_restore 5
 2287              		.cfi_restore 4
 2288              		.cfi_def_cfa_offset 0
 2289              	.LVL178:
1688:src/keys.c    **** 
 2290              		.loc 1 1688 10 view .LVU709
 2291 01c8 FFF7FEBF 		b	arg_eval
 2292              	.LVL179:
 2293              	.L249:
 2294              		.cfi_restore_state
1788:src/keys.c    **** 			return arg_eval(n);
 2295              		.loc 1 1788 3 is_stmt 1 view .LVU710
1788:src/keys.c    **** 			return arg_eval(n);
 2296              		.loc 1 1788 7 is_stmt 0 view .LVU711
 2297 01cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1788:src/keys.c    **** 			return arg_eval(n);
 2298              		.loc 1 1788 6 view .LVU712
 2299 01ce 5806     		lsls	r0, r3, #25
 2300 01d0 08D4     		bmi	.L251
1788:src/keys.c    **** 			return arg_eval(n);
 2301              		.loc 1 1788 25 discriminator 1 view .LVU713
 2302 01d2 0121     		movs	r1, #1
 2303 01d4 0320     		movs	r0, #3
 2304 01d6 FFF7FEFF 		bl	arg_storcl
 2305              	.LVL180:
1788:src/keys.c    **** 			return arg_eval(n);
 2306              		.loc 1 1788 18 discriminator 1 view .LVU714
 2307 01da 0028     		cmp	r0, #0
 2308 01dc A7D1     		bne	.L304
1788:src/keys.c    **** 			return arg_eval(n);
 2309              		.loc 1 1788 63 discriminator 2 view .LVU715
 2310 01de B8F1000F 		cmp	r8, #0
 2311 01e2 A4D0     		beq	.L304
 2312              	.LVL181:
 2313              	.L251:
1789:src/keys.c    **** 		break;
 2314              		.loc 1 1789 4 is_stmt 1 view .LVU716
1789:src/keys.c    **** 		break;
ARM GAS  /tmp/cceb4mPP.s 			page 99


 2315              		.loc 1 1789 11 is_stmt 0 view .LVU717
 2316 01e4 2846     		mov	r0, r5
 2317 01e6 ECE7     		b	.L306
 2318              	.LVL182:
 2319              	.L223:
1670:src/keys.c    **** 	  case regT_idx:
 2320              		.loc 1 1670 6 is_stmt 1 view .LVU718
1670:src/keys.c    **** 	  case regT_idx:
 2321              		.loc 1 1670 13 is_stmt 0 view .LVU719
 2322 01e8 0320     		movs	r0, #3
 2323              	.L305:
1883:src/keys.c    **** 
 2324              		.loc 1 1883 1 view .LVU720
 2325 01ea 03B0     		add	sp, sp, #12
 2326              		.cfi_remember_state
 2327              		.cfi_def_cfa_offset 36
 2328              	.LVL183:
1883:src/keys.c    **** 
 2329              		.loc 1 1883 1 view .LVU721
 2330              		@ sp needed
 2331 01ec BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2332              		.cfi_restore 14
 2333              		.cfi_restore 11
 2334              		.cfi_restore 10
 2335              		.cfi_restore 9
 2336              		.cfi_restore 8
 2337              		.cfi_restore 7
 2338              		.cfi_restore 6
 2339              		.cfi_restore 5
 2340              		.cfi_restore 4
 2341              		.cfi_def_cfa_offset 0
 2342              	.LVL184:
1668:src/keys.c    **** 	  case regZ_idx:
 2343              		.loc 1 1668 13 view .LVU722
 2344 01f0 FFF7FEBF 		b	arg_digit
 2345              	.LVL185:
 2346              	.L224:
 2347              		.cfi_restore_state
1668:src/keys.c    **** 	  case regZ_idx:
 2348              		.loc 1 1668 6 is_stmt 1 view .LVU723
1668:src/keys.c    **** 	  case regZ_idx:
 2349              		.loc 1 1668 13 is_stmt 0 view .LVU724
 2350 01f4 0220     		movs	r0, #2
 2351 01f6 F8E7     		b	.L305
 2352              	.L221:
1672:src/keys.c    **** 	  case 5:
 2353              		.loc 1 1672 6 is_stmt 1 view .LVU725
1672:src/keys.c    **** 	  case 5:
 2354              		.loc 1 1672 13 is_stmt 0 view .LVU726
 2355 01f8 0420     		movs	r0, #4
 2356 01fa F6E7     		b	.L305
 2357              	.L225:
1713:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2358              		.loc 1 1713 3 is_stmt 1 view .LVU727
1713:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2359              		.loc 1 1713 6 is_stmt 0 view .LVU728
 2360 01fc BCF1000F 		cmp	ip, #0
ARM GAS  /tmp/cceb4mPP.s 			page 100


 2361 0200 95D0     		beq	.L304
 2362              	.L226:
1714:src/keys.c    **** 		break;
 2363              		.loc 1 1714 4 is_stmt 1 view .LVU729
 2364              	.LVL186:
 2365              	.LBB351:
 2366              	.LBI351:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2367              		.loc 1 92 20 view .LVU730
 2368              	.LBB352:
  93:src/keys.c    **** 	State2.shifts = shift;
 2369              		.loc 1 93 2 view .LVU731
 2370              	.LBB353:
 2371              	.LBI353:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2372              		.loc 1 84 13 view .LVU732
 2373              	.LBB354:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2374              		.loc 1 85 2 view .LVU733
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2375              		.loc 1 85 18 is_stmt 0 view .LVU734
 2376 0202 FFF7FEFF 		bl	shift_down
 2377              	.LVL187:
  86:src/keys.c    **** }
 2378              		.loc 1 86 2 is_stmt 1 view .LVU735
 2379              	.LBE354:
 2380              	.LBE353:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2381              		.loc 1 94 2 view .LVU736
 2382              	.LBE352:
 2383              	.LBE351:
1714:src/keys.c    **** 		break;
 2384              		.loc 1 1714 4 is_stmt 0 view .LVU737
 2385 0206 009B     		ldr	r3, [sp]
 2386 0208 B3F10109 		subs	r9, r3, #1
 2387 020c 18BF     		it	ne
 2388 020e 4FF00109 		movne	r9, #1
 2389              	.LBB358:
 2390              	.LBB355:
  95:src/keys.c    **** 	return r;
 2391              		.loc 1 95 19 view .LVU738
 2392 0212 0023     		movs	r3, #0
 2393              	.LBE355:
 2394              	.LBE358:
1714:src/keys.c    **** 		break;
 2395              		.loc 1 1714 4 view .LVU739
 2396 0214 84F81090 		strb	r9, [r4, #16]
 2397              	.LBB359:
 2398              	.LBB356:
  95:src/keys.c    **** 	return r;
 2399              		.loc 1 95 2 is_stmt 1 view .LVU740
  95:src/keys.c    **** 	return r;
 2400              		.loc 1 95 19 is_stmt 0 view .LVU741
 2401 0218 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 2402              		.loc 1 96 2 is_stmt 1 view .LVU742
 2403              	.LBE356:
ARM GAS  /tmp/cceb4mPP.s 			page 101


 2404              	.LBE359:
1882:src/keys.c    **** }
 2405              		.loc 1 1882 9 is_stmt 0 view .LVU743
 2406 021a 3320     		movs	r0, #51
 2407              	.LBB360:
 2408              	.LBB357:
  96:src/keys.c    **** }
 2409              		.loc 1 96 9 view .LVU744
 2410 021c 88E7     		b	.L202
 2411              	.LVL188:
 2412              	.L212:
  96:src/keys.c    **** }
 2413              		.loc 1 96 9 view .LVU745
 2414              	.LBE357:
 2415              	.LBE360:
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
 2416              		.loc 1 1657 2 is_stmt 1 view .LVU746
1658:src/keys.c    **** 		reset_arg();
 2417              		.loc 1 1658 5 is_stmt 0 view .LVU747
 2418 021e 8C2F     		cmp	r7, #140
1657:src/keys.c    **** 	if (base >= NUM_RARG) {
 2419              		.loc 1 1657 4 view .LVU748
 2420 0220 29F08005 		bic	r5, r9, #128
 2421              	.LVL189:
1658:src/keys.c    **** 		reset_arg();
 2422              		.loc 1 1658 2 is_stmt 1 view .LVU749
1658:src/keys.c    **** 		reset_arg();
 2423              		.loc 1 1658 5 is_stmt 0 view .LVU750
 2424 0224 81D8     		bhi	.L266
1653:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2425              		.loc 1 1653 61 view .LVU751
 2426 0226 4FF0010C 		mov	ip, #1
 2427 022a 6AE7     		b	.L214
 2428              	.LVL190:
 2429              	.L229:
1726:src/keys.c    **** 			break;
 2430              		.loc 1 1726 3 is_stmt 1 view .LVU752
1726:src/keys.c    **** 			break;
 2431              		.loc 1 1726 18 is_stmt 0 view .LVU753
 2432 022c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1726:src/keys.c    **** 			break;
 2433              		.loc 1 1726 6 view .LVU754
 2434 022e 13F0C00F 		tst	r3, #192
 2435 0232 7FF47CAF 		bne	.L304
1728:src/keys.c    **** 			CmdBase = RARG_STOM;
 2436              		.loc 1 1728 3 is_stmt 1 view .LVU755
1728:src/keys.c    **** 			CmdBase = RARG_STOM;
 2437              		.loc 1 1728 6 is_stmt 0 view .LVU756
 2438 0236 032F     		cmp	r7, #3
 2439 0238 00F0EE80 		beq	.L310
1730:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2440              		.loc 1 1730 8 is_stmt 1 view .LVU757
1730:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2441              		.loc 1 1730 11 is_stmt 0 view .LVU758
 2442 023c 0A2F     		cmp	r7, #10
 2443 023e 7FF476AF 		bne	.L304
1731:src/keys.c    **** 		break;
ARM GAS  /tmp/cceb4mPP.s 			page 102


 2444              		.loc 1 1731 4 is_stmt 1 view .LVU759
1731:src/keys.c    **** 		break;
 2445              		.loc 1 1731 12 is_stmt 0 view .LVU760
 2446 0242 7823     		movs	r3, #120
 2447 0244 E377     		strb	r3, [r4, #31]
1882:src/keys.c    **** }
 2448              		.loc 1 1882 9 view .LVU761
 2449 0246 3320     		movs	r0, #51
 2450 0248 72E7     		b	.L202
 2451              	.L255:
1836:src/keys.c    **** 			if (argcmds[base].label) {
 2452              		.loc 1 1836 3 is_stmt 1 view .LVU762
1836:src/keys.c    **** 			if (argcmds[base].label) {
 2453              		.loc 1 1836 6 is_stmt 0 view .LVU763
 2454 024a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2455 024c 002B     		cmp	r3, #0
 2456 024e 00F0A080 		beq	.L311
1850:src/keys.c    **** 			return arg_eval(State2.digval);
 2457              		.loc 1 1850 10 is_stmt 1 view .LVU764
1851:src/keys.c    **** 		else if (stack_reg)
 2458              		.loc 1 1851 4 view .LVU765
1851:src/keys.c    **** 		else if (stack_reg)
 2459              		.loc 1 1851 11 is_stmt 0 view .LVU766
 2460 0252 2089     		ldrh	r0, [r4, #8]
 2461 0254 B5E7     		b	.L306
 2462              	.L253:
1828:src/keys.c    **** 		break;
 2463              		.loc 1 1828 3 is_stmt 1 view .LVU767
 2464 0256 0021     		movs	r1, #0
 2465 0258 0620     		movs	r0, #6
 2466 025a FFF7FEFF 		bl	arg_storcl
 2467              	.LVL191:
1829:src/keys.c    **** 
 2468              		.loc 1 1829 3 view .LVU768
1882:src/keys.c    **** }
 2469              		.loc 1 1882 9 is_stmt 0 view .LVU769
 2470 025e 3320     		movs	r0, #51
1829:src/keys.c    **** 
 2471              		.loc 1 1829 3 view .LVU770
 2472 0260 66E7     		b	.L202
 2473              	.L246:
1781:src/keys.c    **** 			reset_arg();
 2474              		.loc 1 1781 3 is_stmt 1 view .LVU771
1781:src/keys.c    **** 			reset_arg();
 2475              		.loc 1 1781 6 is_stmt 0 view .LVU772
 2476 0262 212F     		cmp	r7, #33
 2477 0264 00F0C580 		beq	.L247
1781:src/keys.c    **** 			reset_arg();
 2478              		.loc 1 1781 25 discriminator 1 view .LVU773
 2479 0268 732F     		cmp	r7, #115
 2480 026a 00F0C280 		beq	.L247
1785:src/keys.c    **** 		break;
 2481              		.loc 1 1785 3 is_stmt 1 view .LVU774
 2482 026e 0121     		movs	r1, #1
 2483 0270 0220     		movs	r0, #2
 2484 0272 FFF7FEFF 		bl	arg_storcl
 2485              	.LVL192:
ARM GAS  /tmp/cceb4mPP.s 			page 103


1786:src/keys.c    **** 	case K44:		// multiply
 2486              		.loc 1 1786 3 view .LVU775
1882:src/keys.c    **** }
 2487              		.loc 1 1882 9 is_stmt 0 view .LVU776
 2488 0276 3320     		movs	r0, #51
1786:src/keys.c    **** 	case K44:		// multiply
 2489              		.loc 1 1786 3 view .LVU777
 2490 0278 5AE7     		b	.L202
 2491              	.L239:
1773:src/keys.c    **** 
 2492              		.loc 1 1773 3 is_stmt 1 view .LVU778
 2493              	.LVL193:
 2494              	.LBB361:
 2495              	.LBI361:
1615:src/keys.c    **** 
 2496              		.loc 1 1615 12 view .LVU779
 2497              	.LBB362:
1617:src/keys.c    **** 		// Only valid at beginning of entry
 2498              		.loc 1 1617 2 view .LVU780
1617:src/keys.c    **** 		// Only valid at beginning of entry
 2499              		.loc 1 1617 5 is_stmt 0 view .LVU781
 2500 027a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2501 027c 002B     		cmp	r3, #0
 2502 027e 7FF456AF 		bne	.L304
1619:src/keys.c    **** 			// '..' or ENTER '.' = X
 2503              		.loc 1 1619 3 is_stmt 1 view .LVU782
1619:src/keys.c    **** 			// '..' or ENTER '.' = X
 2504              		.loc 1 1619 6 is_stmt 0 view .LVU783
 2505 0282 10F4A03F 		tst	r0, #81920
 2506 0286 40F0CB80 		bne	.L312
1624:src/keys.c    **** 			// local register or flag select
 2507              		.loc 1 1624 3 is_stmt 1 view .LVU784
1624:src/keys.c    **** 			// local register or flag select
 2508              		.loc 1 1624 20 is_stmt 0 view .LVU785
 2509 028a 0BEB0A02 		add	r2, fp, r10
 2510 028e 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1624:src/keys.c    **** 			// local register or flag select
 2511              		.loc 1 1624 6 view .LVU786
 2512 0290 1D07     		lsls	r5, r3, #28
 2513 0292 00F1B380 		bmi	.L241
1624:src/keys.c    **** 			// local register or flag select
 2514              		.loc 1 1624 27 view .LVU787
 2515 0296 94F91530 		ldrsb	r3, [r4, #21]
 2516 029a 002B     		cmp	r3, #0
 2517 029c C0F2AE80 		blt	.L241
1628:src/keys.c    **** 			// Special GTO . sequence
 2518              		.loc 1 1628 8 is_stmt 1 view .LVU788
1628:src/keys.c    **** 			// Special GTO . sequence
 2519              		.loc 1 1628 29 is_stmt 0 view .LVU789
 2520 02a0 443F     		subs	r7, r7, #68
 2521              	.LVL194:
1628:src/keys.c    **** 			// Special GTO . sequence
 2522              		.loc 1 1628 11 view .LVU790
 2523 02a2 012F     		cmp	r7, #1
 2524 02a4 3FF643AF 		bhi	.L304
1630:src/keys.c    **** 				State2.gtodot = 1;
 2525              		.loc 1 1630 4 is_stmt 1 view .LVU791
ARM GAS  /tmp/cceb4mPP.s 			page 104


1631:src/keys.c    **** 				reset_arg();
 2526              		.loc 1 1631 5 view .LVU792
1631:src/keys.c    **** 				reset_arg();
 2527              		.loc 1 1631 19 is_stmt 0 view .LVU793
 2528 02a8 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2529 02aa 43F00103 		orr	r3, r3, #1
 2530 02ae 6375     		strb	r3, [r4, #21]
1632:src/keys.c    **** 			}
 2531              		.loc 1 1632 5 is_stmt 1 view .LVU794
 2532 02b0 FFF7FEFF 		bl	reset_arg
 2533              	.LVL195:
1636:src/keys.c    **** }
 2534              		.loc 1 1636 9 is_stmt 0 view .LVU795
 2535 02b4 3320     		movs	r0, #51
 2536 02b6 3BE7     		b	.L202
 2537              	.L318:
 2538              		.align	2
 2539              	.L317:
 2540 02b8 00000000 		.word	StateWhileOn
 2541 02bc 00000000 		.word	.LANCHOR1
 2542 02c0 00000000 		.word	.LANCHOR0
 2543 02c4 ABAAAAAA 		.word	-1431655765
 2544 02c8 00000000 		.word	argcmds
 2545              	.LVL196:
 2546              	.L243:
1636:src/keys.c    **** }
 2547              		.loc 1 1636 9 view .LVU796
 2548              	.LBE362:
 2549              	.LBE361:
1777:src/keys.c    **** 			return arg_eval(n);
 2550              		.loc 1 1777 3 is_stmt 1 view .LVU797
1777:src/keys.c    **** 			return arg_eval(n);
 2551              		.loc 1 1777 7 is_stmt 0 view .LVU798
 2552 02cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1777:src/keys.c    **** 			return arg_eval(n);
 2553              		.loc 1 1777 6 view .LVU799
 2554 02ce 5C06     		lsls	r4, r3, #25
 2555 02d0 88D4     		bmi	.L251
1777:src/keys.c    **** 			return arg_eval(n);
 2556              		.loc 1 1777 25 discriminator 1 view .LVU800
 2557 02d2 0121     		movs	r1, #1
 2558 02d4 0846     		mov	r0, r1
 2559 02d6 FFF7FEFF 		bl	arg_storcl
 2560              	.LVL197:
1777:src/keys.c    **** 			return arg_eval(n);
 2561              		.loc 1 1777 18 discriminator 1 view .LVU801
 2562 02da 0028     		cmp	r0, #0
 2563 02dc 7FF427AF 		bne	.L304
1788:src/keys.c    **** 			return arg_eval(n);
 2564              		.loc 1 1788 63 view .LVU802
 2565 02e0 B8F1000F 		cmp	r8, #0
 2566 02e4 3FF423AF 		beq	.L304
 2567 02e8 7CE7     		b	.L251
 2568              	.L227:
1718:src/keys.c    **** 			State2.ind = ! State2.ind;
 2569              		.loc 1 1718 3 is_stmt 1 view .LVU803
1718:src/keys.c    **** 			State2.ind = ! State2.ind;
ARM GAS  /tmp/cceb4mPP.s 			page 105


 2570              		.loc 1 1718 7 is_stmt 0 view .LVU804
 2571 02ea 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1718:src/keys.c    **** 			State2.ind = ! State2.ind;
 2572              		.loc 1 1718 6 view .LVU805
 2573 02ec 5E06     		lsls	r6, r3, #25
 2574 02ee 3FF51EAF 		bmi	.L304
1718:src/keys.c    **** 			State2.ind = ! State2.ind;
 2575              		.loc 1 1718 35 discriminator 1 view .LVU806
 2576 02f2 D344     		add	fp, fp, r10
 2577 02f4 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
1718:src/keys.c    **** 			State2.ind = ! State2.ind;
 2578              		.loc 1 1718 19 discriminator 1 view .LVU807
 2579 02f8 D507     		lsls	r5, r2, #31
 2580 02fa 7FF518AF 		bpl	.L304
1719:src/keys.c    **** 			if (! stack_reg)
 2581              		.loc 1 1719 4 is_stmt 1 view .LVU808
1719:src/keys.c    **** 			if (! stack_reg)
 2582              		.loc 1 1719 17 is_stmt 0 view .LVU809
 2583 02fe DA43     		mvns	r2, r3
 2584 0300 C2F3C012 		ubfx	r2, r2, #7, #1
1719:src/keys.c    **** 			if (! stack_reg)
 2585              		.loc 1 1719 15 view .LVU810
 2586 0304 62F3C713 		bfi	r3, r2, #7, #1
 2587 0308 6375     		strb	r3, [r4, #21]
1720:src/keys.c    **** 				State2.dot = 0;
 2588              		.loc 1 1720 4 is_stmt 1 view .LVU811
1720:src/keys.c    **** 				State2.dot = 0;
 2589              		.loc 1 1720 7 is_stmt 0 view .LVU812
 2590 030a B8F1000F 		cmp	r8, #0
 2591 030e 7FF40EAF 		bne	.L304
 2592              	.L264:
1721:src/keys.c    **** 		}
 2593              		.loc 1 1721 5 is_stmt 1 view .LVU813
1721:src/keys.c    **** 		}
 2594              		.loc 1 1721 16 is_stmt 0 view .LVU814
 2595 0312 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2596 0314 6FF38613 		bfc	r3, #6, #1
 2597 0318 6375     		strb	r3, [r4, #21]
1882:src/keys.c    **** }
 2598              		.loc 1 1882 9 view .LVU815
 2599 031a 3320     		movs	r0, #51
 2600 031c 08E7     		b	.L202
 2601              	.L233:
1738:src/keys.c    **** 	    return process_arg_shuffle(0);
 2602              		.loc 1 1738 4 is_stmt 1 view .LVU816
1738:src/keys.c    **** 	    return process_arg_shuffle(0);
 2603              		.loc 1 1738 8 is_stmt 0 view .LVU817
 2604 031e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1738:src/keys.c    **** 	    return process_arg_shuffle(0);
 2605              		.loc 1 1738 7 view .LVU818
 2606 0320 9907     		lsls	r1, r3, #30
 2607 0322 7FF508AF 		bpl	.L232
1739:src/keys.c    **** 	case K52:	// Y
 2608              		.loc 1 1739 6 is_stmt 1 view .LVU819
1739:src/keys.c    **** 	case K52:	// Y
 2609              		.loc 1 1739 13 is_stmt 0 view .LVU820
 2610 0326 0020     		movs	r0, #0
ARM GAS  /tmp/cceb4mPP.s 			page 106


 2611              	.L307:
1883:src/keys.c    **** 
 2612              		.loc 1 1883 1 view .LVU821
 2613 0328 03B0     		add	sp, sp, #12
 2614              		.cfi_remember_state
 2615              		.cfi_def_cfa_offset 36
 2616              	.LVL198:
1883:src/keys.c    **** 
 2617              		.loc 1 1883 1 view .LVU822
 2618              		@ sp needed
 2619 032a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2620              		.cfi_restore 14
 2621              		.cfi_restore 11
 2622              		.cfi_restore 10
 2623              		.cfi_restore 9
 2624              		.cfi_restore 8
 2625              		.cfi_restore 7
 2626              		.cfi_restore 6
 2627              		.cfi_restore 5
 2628              		.cfi_restore 4
 2629              		.cfi_def_cfa_offset 0
 2630              	.LVL199:
1745:src/keys.c    **** #else
 2631              		.loc 1 1745 13 view .LVU823
 2632 032e FFF7FEBF 		b	process_arg_shuffle
 2633              	.LVL200:
 2634              	.L234:
 2635              		.cfi_restore_state
1741:src/keys.c    **** 	    return process_arg_shuffle(1);
 2636              		.loc 1 1741 4 is_stmt 1 view .LVU824
1741:src/keys.c    **** 	    return process_arg_shuffle(1);
 2637              		.loc 1 1741 8 is_stmt 0 view .LVU825
 2638 0332 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1741:src/keys.c    **** 	    return process_arg_shuffle(1);
 2639              		.loc 1 1741 7 view .LVU826
 2640 0334 9A07     		lsls	r2, r3, #30
 2641 0336 7FF5FEAE 		bpl	.L232
1742:src/keys.c    **** 	case K53:       // Z
 2642              		.loc 1 1742 6 is_stmt 1 view .LVU827
1742:src/keys.c    **** 	case K53:       // Z
 2643              		.loc 1 1742 13 is_stmt 0 view .LVU828
 2644 033a 0120     		movs	r0, #1
 2645 033c F4E7     		b	.L307
 2646              	.L235:
1744:src/keys.c    **** 	    return process_arg_shuffle(2);
 2647              		.loc 1 1744 4 is_stmt 1 view .LVU829
1744:src/keys.c    **** 	    return process_arg_shuffle(2);
 2648              		.loc 1 1744 8 is_stmt 0 view .LVU830
 2649 033e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1744:src/keys.c    **** 	    return process_arg_shuffle(2);
 2650              		.loc 1 1744 7 view .LVU831
 2651 0340 9B07     		lsls	r3, r3, #30
 2652 0342 7FF5F8AE 		bpl	.L232
1745:src/keys.c    **** #else
 2653              		.loc 1 1745 6 is_stmt 1 view .LVU832
1745:src/keys.c    **** #else
 2654              		.loc 1 1745 13 is_stmt 0 view .LVU833
ARM GAS  /tmp/cceb4mPP.s 			page 107


 2655 0346 0220     		movs	r0, #2
 2656 0348 EEE7     		b	.L307
 2657              	.L254:
1832:src/keys.c    **** 		break;
 2658              		.loc 1 1832 3 is_stmt 1 view .LVU834
 2659 034a 0021     		movs	r1, #0
 2660 034c 0520     		movs	r0, #5
 2661 034e FFF7FEFF 		bl	arg_storcl
 2662              	.LVL201:
1833:src/keys.c    **** 
 2663              		.loc 1 1833 3 view .LVU835
1882:src/keys.c    **** }
 2664              		.loc 1 1882 9 is_stmt 0 view .LVU836
 2665 0352 3320     		movs	r0, #51
1833:src/keys.c    **** 
 2666              		.loc 1 1833 3 view .LVU837
 2667 0354 ECE6     		b	.L202
 2668              	.L231:
1735:src/keys.c    **** 	    return process_arg_shuffle(3);
 2669              		.loc 1 1735 4 is_stmt 1 view .LVU838
1735:src/keys.c    **** 	    return process_arg_shuffle(3);
 2670              		.loc 1 1735 8 is_stmt 0 view .LVU839
 2671 0356 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1735:src/keys.c    **** 	    return process_arg_shuffle(3);
 2672              		.loc 1 1735 7 view .LVU840
 2673 0358 9807     		lsls	r0, r3, #30
 2674 035a 7FF5ECAE 		bpl	.L232
1736:src/keys.c    **** 	case K51:       // X
 2675              		.loc 1 1736 6 is_stmt 1 view .LVU841
1736:src/keys.c    **** 	case K51:       // X
 2676              		.loc 1 1736 13 is_stmt 0 view .LVU842
 2677 035e 0320     		movs	r0, #3
 2678 0360 E2E7     		b	.L307
 2679              	.L252:
1792:src/keys.c    **** 		break;
 2680              		.loc 1 1792 3 is_stmt 1 view .LVU843
 2681 0362 0121     		movs	r1, #1
 2682 0364 0420     		movs	r0, #4
 2683 0366 FFF7FEFF 		bl	arg_storcl
 2684              	.LVL202:
1793:src/keys.c    **** #else
 2685              		.loc 1 1793 3 view .LVU844
1882:src/keys.c    **** }
 2686              		.loc 1 1882 9 is_stmt 0 view .LVU845
 2687 036a 3320     		movs	r0, #51
1793:src/keys.c    **** #else
 2688              		.loc 1 1793 3 view .LVU846
 2689 036c E0E6     		b	.L202
 2690              	.L262:
1857:src/keys.c    **** 			if (State2.dot)
 2691              		.loc 1 1857 3 is_stmt 1 view .LVU847
1857:src/keys.c    **** 			if (State2.dot)
 2692              		.loc 1 1857 13 is_stmt 0 view .LVU848
 2693 036e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
1857:src/keys.c    **** 			if (State2.dot)
 2694              		.loc 1 1857 6 view .LVU849
 2695 0370 7BBB     		cbnz	r3, .L263
ARM GAS  /tmp/cceb4mPP.s 			page 108


1858:src/keys.c    **** 				State2.dot = 0;
 2696              		.loc 1 1858 4 is_stmt 1 view .LVU850
1858:src/keys.c    **** 				State2.dot = 0;
 2697              		.loc 1 1858 8 is_stmt 0 view .LVU851
 2698 0372 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1858:src/keys.c    **** 				State2.dot = 0;
 2699              		.loc 1 1858 7 view .LVU852
 2700 0374 13F04001 		ands	r1, r3, #64
 2701 0378 CBD1     		bne	.L264
1860:src/keys.c    **** 				State2.local = 0;
 2702              		.loc 1 1860 9 is_stmt 1 view .LVU853
1860:src/keys.c    **** 				State2.local = 0;
 2703              		.loc 1 1860 13 is_stmt 0 view .LVU854
 2704 037a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1860:src/keys.c    **** 				State2.local = 0;
 2705              		.loc 1 1860 12 view .LVU855
 2706 037c 12F00100 		ands	r0, r2, #1
 2707 0380 54D1     		bne	.L313
1862:src/keys.c    **** 				State2.ind = 0;
 2708              		.loc 1 1862 9 is_stmt 1 view .LVU856
1862:src/keys.c    **** 				State2.ind = 0;
 2709              		.loc 1 1862 12 is_stmt 0 view .LVU857
 2710 0382 1906     		lsls	r1, r3, #24
 2711 0384 7FF5D1AE 		bpl	.L266
1863:src/keys.c    **** 			else
 2712              		.loc 1 1863 5 is_stmt 1 view .LVU858
1863:src/keys.c    **** 			else
 2713              		.loc 1 1863 16 is_stmt 0 view .LVU859
 2714 0388 60F3C713 		bfi	r3, r0, #7, #1
 2715 038c 6375     		strb	r3, [r4, #21]
1882:src/keys.c    **** }
 2716              		.loc 1 1882 9 view .LVU860
 2717 038e 3320     		movs	r0, #51
 2718 0390 CEE6     		b	.L202
 2719              	.L311:
1836:src/keys.c    **** 			if (argcmds[base].label) {
 2720              		.loc 1 1836 43 discriminator 1 view .LVU861
 2721 0392 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2722 0394 13F0C00F 		tst	r3, #192
 2723 0398 0ED1     		bne	.L257
1837:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2724              		.loc 1 1837 4 is_stmt 1 view .LVU862
1837:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2725              		.loc 1 1837 7 is_stmt 0 view .LVU863
 2726 039a 0029     		cmp	r1, #0
 2727 039c 4BD1     		bne	.L314
1842:src/keys.c    **** 				reset_arg();
 2728              		.loc 1 1842 11 is_stmt 1 view .LVU864
1842:src/keys.c    **** 				reset_arg();
 2729              		.loc 1 1842 14 is_stmt 0 view .LVU865
 2730 039e 4E2F     		cmp	r7, #78
 2731 03a0 5BD0     		beq	.L315
1845:src/keys.c    **** 				reset_arg();
 2732              		.loc 1 1845 11 is_stmt 1 view .LVU866
1845:src/keys.c    **** 				reset_arg();
 2733              		.loc 1 1845 14 is_stmt 0 view .LVU867
 2734 03a2 4F2F     		cmp	r7, #79
ARM GAS  /tmp/cceb4mPP.s 			page 109


 2735 03a4 5ED0     		beq	.L316
1848:src/keys.c    **** 				State2.dot = 1;
 2736              		.loc 1 1848 11 is_stmt 1 view .LVU868
1848:src/keys.c    **** 				State2.dot = 1;
 2737              		.loc 1 1848 14 is_stmt 0 view .LVU869
 2738 03a6 019A     		ldr	r2, [sp, #4]
 2739 03a8 002A     		cmp	r2, #0
 2740 03aa 3FF4C0AE 		beq	.L304
1849:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2741              		.loc 1 1849 5 is_stmt 1 view .LVU870
1849:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2742              		.loc 1 1849 16 is_stmt 0 view .LVU871
 2743 03ae 43F04003 		orr	r3, r3, #64
 2744 03b2 6375     		strb	r3, [r4, #21]
1882:src/keys.c    **** }
 2745              		.loc 1 1882 9 view .LVU872
 2746 03b4 3320     		movs	r0, #51
 2747 03b6 BBE6     		b	.L202
 2748              	.L257:
1850:src/keys.c    **** 			return arg_eval(State2.digval);
 2749              		.loc 1 1850 10 is_stmt 1 view .LVU873
1852:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2750              		.loc 1 1852 8 view .LVU874
1852:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2751              		.loc 1 1852 11 is_stmt 0 view .LVU875
 2752 03b8 B8F1000F 		cmp	r8, #0
 2753 03bc 3FF4B7AE 		beq	.L304
1853:src/keys.c    **** 		break;
 2754              		.loc 1 1853 4 is_stmt 1 view .LVU876
1853:src/keys.c    **** 		break;
 2755              		.loc 1 1853 27 is_stmt 0 view .LVU877
 2756 03c0 C3F38012 		ubfx	r2, r3, #6, #1
1853:src/keys.c    **** 		break;
 2757              		.loc 1 1853 19 view .LVU878
 2758 03c4 C2F10102 		rsb	r2, r2, #1
1853:src/keys.c    **** 		break;
 2759              		.loc 1 1853 15 view .LVU879
 2760 03c8 62F38613 		bfi	r3, r2, #6, #1
 2761 03cc 6375     		strb	r3, [r4, #21]
1882:src/keys.c    **** }
 2762              		.loc 1 1882 9 view .LVU880
 2763 03ce 3320     		movs	r0, #51
 2764 03d0 AEE6     		b	.L202
 2765              	.L263:
1868:src/keys.c    **** 			if (State2.shuffle)
 2766              		.loc 1 1868 4 is_stmt 1 view .LVU881
1869:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2767              		.loc 1 1869 8 is_stmt 0 view .LVU882
 2768 03d2 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1868:src/keys.c    **** 			if (State2.shuffle)
 2769              		.loc 1 1868 4 view .LVU883
 2770 03d4 013B     		subs	r3, r3, #1
 2771 03d6 DBB2     		uxtb	r3, r3
1869:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2772              		.loc 1 1869 7 view .LVU884
 2773 03d8 9207     		lsls	r2, r2, #30
1868:src/keys.c    **** 			if (State2.shuffle)
ARM GAS  /tmp/cceb4mPP.s 			page 110


 2774              		.loc 1 1868 4 view .LVU885
 2775 03da E372     		strb	r3, [r4, #11]
1869:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2776              		.loc 1 1869 4 is_stmt 1 view .LVU886
1869:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2777              		.loc 1 1869 7 is_stmt 0 view .LVU887
 2778 03dc 14D5     		bpl	.L267
1870:src/keys.c    **** 			else
 2779              		.loc 1 1870 5 is_stmt 1 view .LVU888
1870:src/keys.c    **** 			else
 2780              		.loc 1 1870 19 is_stmt 0 view .LVU889
 2781 03de 2289     		ldrh	r2, [r4, #8]
1870:src/keys.c    **** 			else
 2782              		.loc 1 1870 46 view .LVU890
 2783 03e0 5B00     		lsls	r3, r3, #1
1870:src/keys.c    **** 			else
 2784              		.loc 1 1870 26 view .LVU891
 2785 03e2 0321     		movs	r1, #3
 2786 03e4 01FA03F3 		lsl	r3, r1, r3
1870:src/keys.c    **** 			else
 2787              		.loc 1 1870 19 view .LVU892
 2788 03e8 22EA0303 		bic	r3, r2, r3
 2789 03ec 2381     		strh	r3, [r4, #8]	@ movhi
1882:src/keys.c    **** }
 2790              		.loc 1 1882 9 view .LVU893
 2791 03ee 3320     		movs	r0, #51
 2792 03f0 9EE6     		b	.L202
 2793              	.L247:
1782:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2794              		.loc 1 1782 4 is_stmt 1 view .LVU894
 2795 03f2 FFF7FEFF 		bl	reset_arg
 2796              	.LVL203:
1783:src/keys.c    **** 		}
 2797              		.loc 1 1783 4 view .LVU895
1783:src/keys.c    **** 		}
 2798              		.loc 1 1783 11 is_stmt 0 view .LVU896
 2799 03f6 40F27510 		movw	r0, #373
 2800 03fa 99E6     		b	.L202
 2801              	.LVL204:
 2802              	.L241:
 2803              	.LBB365:
 2804              	.LBB363:
1626:src/keys.c    **** 		}
 2805              		.loc 1 1626 4 is_stmt 1 view .LVU897
1626:src/keys.c    **** 		}
 2806              		.loc 1 1626 17 is_stmt 0 view .LVU898
 2807 03fc A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2808 03fe 43F00103 		orr	r3, r3, #1
 2809 0402 A375     		strb	r3, [r4, #22]
1636:src/keys.c    **** }
 2810              		.loc 1 1636 9 view .LVU899
 2811 0404 3320     		movs	r0, #51
1626:src/keys.c    **** 		}
 2812              		.loc 1 1626 17 view .LVU900
 2813 0406 93E6     		b	.L202
 2814              	.LVL205:
 2815              	.L267:
ARM GAS  /tmp/cceb4mPP.s 			page 111


1626:src/keys.c    **** 		}
 2816              		.loc 1 1626 17 view .LVU901
 2817              	.LBE363:
 2818              	.LBE365:
1872:src/keys.c    **** 		}
 2819              		.loc 1 1872 5 is_stmt 1 view .LVU902
1872:src/keys.c    **** 		}
 2820              		.loc 1 1872 19 is_stmt 0 view .LVU903
 2821 0408 2389     		ldrh	r3, [r4, #8]
 2822 040a 1A4A     		ldr	r2, .L319
 2823 040c A2FB0323 		umull	r2, r3, r2, r3
 2824 0410 DB08     		lsrs	r3, r3, #3
 2825 0412 2381     		strh	r3, [r4, #8]	@ movhi
1882:src/keys.c    **** }
 2826              		.loc 1 1882 9 view .LVU904
 2827 0414 3320     		movs	r0, #51
 2828 0416 8BE6     		b	.L202
 2829              	.L310:
1729:src/keys.c    **** 		else if (base == RARG_RCL)
 2830              		.loc 1 1729 4 is_stmt 1 view .LVU905
1729:src/keys.c    **** 		else if (base == RARG_RCL)
 2831              		.loc 1 1729 12 is_stmt 0 view .LVU906
 2832 0418 7723     		movs	r3, #119
 2833 041a E377     		strb	r3, [r4, #31]
1882:src/keys.c    **** }
 2834              		.loc 1 1882 9 view .LVU907
 2835 041c 3320     		movs	r0, #51
 2836 041e 87E6     		b	.L202
 2837              	.LVL206:
 2838              	.L312:
 2839              	.LBB366:
 2840              	.LBB364:
1621:src/keys.c    **** 			return arg_eval(regX_idx);
 2841              		.loc 1 1621 4 is_stmt 1 view .LVU908
1621:src/keys.c    **** 			return arg_eval(regX_idx);
 2842              		.loc 1 1621 17 is_stmt 0 view .LVU909
 2843 0420 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2844 0422 63F30002 		bfi	r2, r3, #0, #1
1622:src/keys.c    **** 		}
 2845              		.loc 1 1622 11 view .LVU910
 2846 0426 6420     		movs	r0, #100
1621:src/keys.c    **** 			return arg_eval(regX_idx);
 2847              		.loc 1 1621 17 view .LVU911
 2848 0428 A275     		strb	r2, [r4, #22]
1622:src/keys.c    **** 		}
 2849              		.loc 1 1622 4 is_stmt 1 view .LVU912
 2850 042a CAE6     		b	.L306
 2851              	.LVL207:
 2852              	.L313:
1622:src/keys.c    **** 		}
 2853              		.loc 1 1622 4 is_stmt 0 view .LVU913
 2854              	.LBE364:
 2855              	.LBE366:
1861:src/keys.c    **** 			else if (State2.ind)
 2856              		.loc 1 1861 5 is_stmt 1 view .LVU914
1861:src/keys.c    **** 			else if (State2.ind)
 2857              		.loc 1 1861 18 is_stmt 0 view .LVU915
ARM GAS  /tmp/cceb4mPP.s 			page 112


 2858 042c 61F30002 		bfi	r2, r1, #0, #1
 2859 0430 A275     		strb	r2, [r4, #22]
1882:src/keys.c    **** }
 2860              		.loc 1 1882 9 view .LVU916
 2861 0432 3320     		movs	r0, #51
 2862 0434 7CE6     		b	.L202
 2863              	.L314:
1838:src/keys.c    **** 				State2.multi = 1;
 2864              		.loc 1 1838 5 is_stmt 1 view .LVU917
 2865              	.LVL208:
 2866              	.LBB367:
 2867              	.LBI367:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 2868              		.loc 1 501 13 view .LVU918
 2869              	.LBB368:
 502:src/keys.c    **** 		return;
 2870              		.loc 1 502 2 view .LVU919
 502:src/keys.c    **** 		return;
 2871              		.loc 1 502 6 is_stmt 0 view .LVU920
 2872 0436 FFF7FEFF 		bl	is_bad_cmdline
 2873              	.LVL209:
 502:src/keys.c    **** 		return;
 2874              		.loc 1 502 5 view .LVU921
 2875 043a 20B9     		cbnz	r0, .L259
 2876              	.LBE368:
 2877              	.LBE367:
1838:src/keys.c    **** 				State2.multi = 1;
 2878              		.loc 1 1838 31 view .LVU922
 2879 043c A7F14200 		sub	r0, r7, #66
 2880              	.LBB370:
 2881              	.LBB369:
 2882 0440 C0B2     		uxtb	r0, r0
 2883 0442 FFF7FEFF 		bl	init_arg.part.0
 2884              	.LVL210:
 2885              	.L259:
1838:src/keys.c    **** 				State2.multi = 1;
 2886              		.loc 1 1838 31 view .LVU923
 2887              	.LBE369:
 2888              	.LBE370:
1839:src/keys.c    **** 				State2.alphashift = 0;
 2889              		.loc 1 1839 5 is_stmt 1 view .LVU924
1840:src/keys.c    **** 				State2.rarg = 0;
 2890              		.loc 1 1840 5 view .LVU925
1841:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2891              		.loc 1 1841 5 view .LVU926
1839:src/keys.c    **** 				State2.alphashift = 0;
 2892              		.loc 1 1839 18 is_stmt 0 view .LVU927
 2893 0446 6369     		ldr	r3, [r4, #20]
 2894 0448 23F44013 		bic	r3, r3, #3145728
 2895 044c 23F40063 		bic	r3, r3, #2048
 2896 0450 43F40063 		orr	r3, r3, #2048
 2897 0454 6361     		str	r3, [r4, #20]
1882:src/keys.c    **** }
 2898              		.loc 1 1882 9 view .LVU928
 2899 0456 3320     		movs	r0, #51
 2900 0458 6AE6     		b	.L202
 2901              	.L315:
ARM GAS  /tmp/cceb4mPP.s 			page 113


1843:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2902              		.loc 1 1843 5 is_stmt 1 view .LVU929
 2903 045a FFF7FEFF 		bl	reset_arg
 2904              	.LVL211:
1844:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2905              		.loc 1 1844 5 view .LVU930
1844:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2906              		.loc 1 1844 12 is_stmt 0 view .LVU931
 2907 045e 40F25510 		movw	r0, #341
 2908 0462 65E6     		b	.L202
 2909              	.L316:
1846:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2910              		.loc 1 1846 5 is_stmt 1 view .LVU932
 2911 0464 FFF7FEFF 		bl	reset_arg
 2912              	.LVL212:
1847:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2913              		.loc 1 1847 5 view .LVU933
1847:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2914              		.loc 1 1847 12 is_stmt 0 view .LVU934
 2915 0468 4FF4AB70 		mov	r0, #342
 2916 046c 60E6     		b	.L202
 2917              	.L220:
1666:src/keys.c    **** 	  case regY_idx:
 2918              		.loc 1 1666 6 is_stmt 1 view .LVU935
1666:src/keys.c    **** 	  case regY_idx:
 2919              		.loc 1 1666 13 is_stmt 0 view .LVU936
 2920 046e 0120     		movs	r0, #1
 2921 0470 BBE6     		b	.L305
 2922              	.L320:
 2923 0472 00BF     		.align	2
 2924              	.L319:
 2925 0474 CDCCCCCC 		.word	-858993459
 2926              		.cfi_endproc
 2927              	.LFE37:
 2929              		.section	.text.cur_shift,"ax",%progbits
 2930              		.align	1
 2931              		.p2align 2,,3
 2932              		.global	cur_shift
 2933              		.syntax unified
 2934              		.thumb
 2935              		.thumb_func
 2936              		.fpu fpv4-sp-d16
 2938              	cur_shift:
 2939              	.LFB0:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2940              		.loc 1 84 29 is_stmt 1 view -0
 2941              		.cfi_startproc
 2942              		@ args = 0, pretend = 0, frame = 0
 2943              		@ frame_needed = 0, uses_anonymous_args = 0
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2944              		.loc 1 85 2 view .LVU938
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2945              		.loc 1 84 29 is_stmt 0 view .LVU939
 2946 0000 08B5     		push	{r3, lr}
 2947              		.cfi_def_cfa_offset 8
 2948              		.cfi_offset 3, -8
 2949              		.cfi_offset 14, -4
ARM GAS  /tmp/cceb4mPP.s 			page 114


  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2950              		.loc 1 85 18 view .LVU940
 2951 0002 FFF7FEFF 		bl	shift_down
 2952              	.LVL213:
  86:src/keys.c    **** }
 2953              		.loc 1 86 2 is_stmt 1 view .LVU941
  86:src/keys.c    **** }
 2954              		.loc 1 86 52 is_stmt 0 view .LVU942
 2955 0006 08B9     		cbnz	r0, .L322
  86:src/keys.c    **** }
 2956              		.loc 1 86 52 discriminator 1 view .LVU943
 2957 0008 014B     		ldr	r3, .L324
 2958 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2959              	.LVL214:
 2960              	.L322:
  87:src/keys.c    **** 
 2961              		.loc 1 87 1 discriminator 4 view .LVU944
 2962 000c 08BD     		pop	{r3, pc}
 2963              	.L325:
 2964 000e 00BF     		.align	2
 2965              	.L324:
 2966 0010 00000000 		.word	StateWhileOn
 2967              		.cfi_endproc
 2968              	.LFE0:
 2970              		.section	.text.reset_shift,"ax",%progbits
 2971              		.align	1
 2972              		.p2align 2,,3
 2973              		.global	reset_shift
 2974              		.syntax unified
 2975              		.thumb
 2976              		.thumb_func
 2977              		.fpu fpv4-sp-d16
 2979              	reset_shift:
 2980              	.LFB2:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 2981              		.loc 1 102 31 is_stmt 1 view -0
 2982              		.cfi_startproc
 2983              		@ args = 0, pretend = 0, frame = 0
 2984              		@ frame_needed = 0, uses_anonymous_args = 0
 103:src/keys.c    **** }
 2985              		.loc 1 103 2 view .LVU946
 2986              	.LVL215:
 2987              	.LBB371:
 2988              	.LBI371:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2989              		.loc 1 92 20 view .LVU947
 2990              	.LBB372:
  93:src/keys.c    **** 	State2.shifts = shift;
 2991              		.loc 1 93 2 view .LVU948
 2992              	.LBB373:
 2993              	.LBI373:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2994              		.loc 1 84 13 view .LVU949
 2995              	.LBB374:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2996              		.loc 1 85 2 view .LVU950
 2997              	.LBE374:
ARM GAS  /tmp/cceb4mPP.s 			page 115


 2998              	.LBE373:
 2999              	.LBE372:
 3000              	.LBE371:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3001              		.loc 1 102 31 is_stmt 0 view .LVU951
 3002 0000 08B5     		push	{r3, lr}
 3003              		.cfi_def_cfa_offset 8
 3004              		.cfi_offset 3, -8
 3005              		.cfi_offset 14, -4
 3006              	.LBB378:
 3007              	.LBB377:
 3008              	.LBB376:
 3009              	.LBB375:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3010              		.loc 1 85 18 view .LVU952
 3011 0002 FFF7FEFF 		bl	shift_down
 3012              	.LVL216:
  86:src/keys.c    **** }
 3013              		.loc 1 86 2 is_stmt 1 view .LVU953
  86:src/keys.c    **** }
 3014              		.loc 1 86 52 is_stmt 0 view .LVU954
 3015 0006 034B     		ldr	r3, .L331
 3016 0008 00B9     		cbnz	r0, .L327
 3017 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3018              	.LVL217:
 3019              	.L327:
  86:src/keys.c    **** }
 3020              		.loc 1 86 52 view .LVU955
 3021              	.LBE375:
 3022              	.LBE376:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3023              		.loc 1 94 2 is_stmt 1 view .LVU956
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3024              		.loc 1 94 16 is_stmt 0 view .LVU957
 3025 000c 0022     		movs	r2, #0
 3026 000e 1A74     		strb	r2, [r3, #16]
  95:src/keys.c    **** 	return r;
 3027              		.loc 1 95 2 is_stmt 1 view .LVU958
  95:src/keys.c    **** 	return r;
 3028              		.loc 1 95 19 is_stmt 0 view .LVU959
 3029 0010 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 3030              		.loc 1 96 2 is_stmt 1 view .LVU960
 3031              	.LVL218:
  96:src/keys.c    **** }
 3032              		.loc 1 96 2 is_stmt 0 view .LVU961
 3033              	.LBE377:
 3034              	.LBE378:
 104:src/keys.c    **** 
 3035              		.loc 1 104 1 view .LVU962
 3036 0012 08BD     		pop	{r3, pc}
 3037              	.L332:
 3038              		.align	2
 3039              	.L331:
 3040 0014 00000000 		.word	StateWhileOn
 3041              		.cfi_endproc
 3042              	.LFE2:
ARM GAS  /tmp/cceb4mPP.s 			page 116


 3044              		.section	.text.keycode_to_row_column,"ax",%progbits
 3045              		.align	1
 3046              		.p2align 2,,3
 3047              		.global	keycode_to_row_column
 3048              		.syntax unified
 3049              		.thumb
 3050              		.thumb_func
 3051              		.fpu fpv4-sp-d16
 3053              	keycode_to_row_column:
 3054              	.LVL219:
 3055              	.LFB6:
 168:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3056              		.loc 1 168 1 is_stmt 1 view -0
 3057              		.cfi_startproc
 3058              		@ args = 0, pretend = 0, frame = 0
 3059              		@ frame_needed = 0, uses_anonymous_args = 0
 3060              		@ link register save eliminated.
 169:src/keys.c    **** }
 3061              		.loc 1 169 2 view .LVU964
 169:src/keys.c    **** }
 3062              		.loc 1 169 18 is_stmt 0 view .LVU965
 3063 0000 074A     		ldr	r2, .L334
 3064 0002 82FB0032 		smull	r3, r2, r2, r0
 3065 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 169:src/keys.c    **** }
 3066              		.loc 1 169 24 view .LVU966
 3067 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3068 000e 5200     		lsls	r2, r2, #1
 169:src/keys.c    **** }
 3069              		.loc 1 169 33 view .LVU967
 3070 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3071 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 169:src/keys.c    **** }
 3072              		.loc 1 169 12 view .LVU968
 3073 0018 02F10B00 		add	r0, r2, #11
 3074              	.LVL220:
 170:src/keys.c    **** 
 3075              		.loc 1 170 1 view .LVU969
 3076 001c 1844     		add	r0, r0, r3
 3077 001e 7047     		bx	lr
 3078              	.L335:
 3079              		.align	2
 3080              	.L334:
 3081 0020 ABAAAA2A 		.word	715827883
 3082              		.cfi_endproc
 3083              	.LFE6:
 3085              		.section	.text.row_column_to_keycode,"ax",%progbits
 3086              		.align	1
 3087              		.p2align 2,,3
 3088              		.global	row_column_to_keycode
 3089              		.syntax unified
 3090              		.thumb
 3091              		.thumb_func
 3092              		.fpu fpv4-sp-d16
 3094              	row_column_to_keycode:
 3095              	.LVL221:
 3096              	.LFB7:
ARM GAS  /tmp/cceb4mPP.s 			page 117


 178:src/keys.c    **** 	int row = c / 10 - 1;
 3097              		.loc 1 178 1 is_stmt 1 view -0
 3098              		.cfi_startproc
 3099              		@ args = 0, pretend = 0, frame = 0
 3100              		@ frame_needed = 0, uses_anonymous_args = 0
 3101              		@ link register save eliminated.
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3102              		.loc 1 179 2 view .LVU971
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3103              		.loc 1 179 14 is_stmt 0 view .LVU972
 3104 0000 0E4A     		ldr	r2, .L342
 3105 0002 82FB0032 		smull	r3, r2, r2, r0
 3106 0006 C317     		asrs	r3, r0, #31
 3107 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 180:src/keys.c    **** 
 3108              		.loc 1 180 14 view .LVU973
 3109 000c 03EB8302 		add	r2, r3, r3, lsl #2
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3110              		.loc 1 179 6 view .LVU974
 3111 0010 013B     		subs	r3, r3, #1
 3112              	.LVL222:
 180:src/keys.c    **** 
 3113              		.loc 1 180 2 is_stmt 1 view .LVU975
 180:src/keys.c    **** 
 3114              		.loc 1 180 14 is_stmt 0 view .LVU976
 3115 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3116              	.LVL223:
 182:src/keys.c    **** 		return -1;
 3117              		.loc 1 182 5 view .LVU977
 3118 0016 062B     		cmp	r3, #6
 180:src/keys.c    **** 
 3119              		.loc 1 180 6 view .LVU978
 3120 0018 00F1FF30 		add	r0, r0, #-1
 3121              	.LVL224:
 182:src/keys.c    **** 		return -1;
 3122              		.loc 1 182 2 is_stmt 1 view .LVU979
 182:src/keys.c    **** 		return -1;
 3123              		.loc 1 182 5 is_stmt 0 view .LVU980
 3124 001c 0AD8     		bhi	.L341
 182:src/keys.c    **** 		return -1;
 3125              		.loc 1 182 36 discriminator 1 view .LVU981
 3126 001e 012B     		cmp	r3, #1
 3127 0020 CCBF     		ite	gt
 3128 0022 0422     		movgt	r2, #4
 3129 0024 0522     		movle	r2, #5
 182:src/keys.c    **** 		return -1;
 3130              		.loc 1 182 25 discriminator 1 view .LVU982
 3131 0026 8242     		cmp	r2, r0
 3132 0028 04DB     		blt	.L341
 184:src/keys.c    **** }
 3133              		.loc 1 184 2 is_stmt 1 view .LVU983
 184:src/keys.c    **** }
 3134              		.loc 1 184 13 is_stmt 0 view .LVU984
 3135 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3136              	.LVL225:
 184:src/keys.c    **** }
 3137              		.loc 1 184 17 view .LVU985
ARM GAS  /tmp/cceb4mPP.s 			page 118


 3138 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3139              	.LVL226:
 184:src/keys.c    **** }
 3140              		.loc 1 184 17 view .LVU986
 3141 0032 7047     		bx	lr
 3142              	.LVL227:
 3143              	.L341:
 183:src/keys.c    **** 	return row * 6 + col;
 3144              		.loc 1 183 10 view .LVU987
 3145 0034 4FF0FF30 		mov	r0, #-1
 3146              	.LVL228:
 185:src/keys.c    **** 
 3147              		.loc 1 185 1 view .LVU988
 3148 0038 7047     		bx	lr
 3149              	.L343:
 3150 003a 00BF     		.align	2
 3151              	.L342:
 3152 003c 67666666 		.word	1717986919
 3153              		.cfi_endproc
 3154              	.LFE7:
 3156              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3157              		.align	1
 3158              		.p2align 2,,3
 3159              		.global	keycode_to_digit_or_register
 3160              		.syntax unified
 3161              		.thumb
 3162              		.thumb_func
 3163              		.fpu fpv4-sp-d16
 3165              	keycode_to_digit_or_register:
 3166              	.LVL229:
 3167              	.LFB8:
 199:src/keys.c    ****   static const unsigned char map[] = {
 3168              		.loc 1 199 1 is_stmt 1 view -0
 3169              		.cfi_startproc
 3170              		@ args = 0, pretend = 0, frame = 0
 3171              		@ frame_needed = 0, uses_anonymous_args = 0
 3172              		@ link register save eliminated.
 200:src/keys.c    ****     // K00 - K05
 3173              		.loc 1 200 3 view .LVU990
 221:src/keys.c    **** }
 3174              		.loc 1 221 3 view .LVU991
 3175              	.LBB379:
 3176              	.LBI379:
 119:src/keys.c    **** {
 3177              		.loc 1 119 12 view .LVU992
 3178              	.LBB380:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3179              		.loc 1 121 2 view .LVU993
 131:src/keys.c    **** }
 3180              		.loc 1 131 2 view .LVU994
 131:src/keys.c    **** }
 3181              		.loc 1 131 23 is_stmt 0 view .LVU995
 3182 0000 024B     		ldr	r3, .L345
 3183              	.LBE380:
 3184              	.LBE379:
 221:src/keys.c    **** }
 3185              		.loc 1 221 28 view .LVU996
ARM GAS  /tmp/cceb4mPP.s 			page 119


 3186 0002 034A     		ldr	r2, .L345+4
 3187              	.LBB382:
 3188              	.LBB381:
 131:src/keys.c    **** }
 3189              		.loc 1 131 23 view .LVU997
 3190 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3191              	.LBE381:
 3192              	.LBE382:
 222:src/keys.c    **** #else
 3193              		.loc 1 222 1 view .LVU998
 3194 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3195              	.LVL230:
 222:src/keys.c    **** #else
 3196              		.loc 1 222 1 view .LVU999
 3197 0008 7047     		bx	lr
 3198              	.L346:
 3199 000a 00BF     		.align	2
 3200              	.L345:
 3201 000c 00000000 		.word	.LANCHOR1
 3202 0010 00000000 		.word	.LANCHOR0
 3203              		.cfi_endproc
 3204              	.LFE8:
 3206              		.section	.text.init_state,"ax",%progbits
 3207              		.align	1
 3208              		.p2align 2,,3
 3209              		.global	init_state
 3210              		.syntax unified
 3211              		.thumb
 3212              		.thumb_func
 3213              		.fpu fpv4-sp-d16
 3215              	init_state:
 3216              	.LFB13:
 564:src/keys.c    **** #ifndef REALBUILD
 3217              		.loc 1 564 23 is_stmt 1 view -0
 3218              		.cfi_startproc
 3219              		@ args = 0, pretend = 0, frame = 0
 3220              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3221              		.loc 1 566 2 view .LVU1001
 564:src/keys.c    **** #ifndef REALBUILD
 3222              		.loc 1 564 23 is_stmt 0 view .LVU1002
 3223 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3224              		.cfi_def_cfa_offset 24
 3225              		.cfi_offset 4, -24
 3226              		.cfi_offset 5, -20
 3227              		.cfi_offset 6, -16
 3228              		.cfi_offset 7, -12
 3229              		.cfi_offset 8, -8
 3230              		.cfi_offset 14, -4
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3231              		.loc 1 566 25 view .LVU1003
 3232 0004 154C     		ldr	r4, .L349
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3233              		.loc 1 574 10 view .LVU1004
 3234 0006 0021     		movs	r1, #0
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3235              		.loc 1 578 2 view .LVU1005
ARM GAS  /tmp/cceb4mPP.s 			page 120


 3236 0008 1422     		movs	r2, #20
 3237 000a 04F10800 		add	r0, r4, #8
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3238              		.loc 1 574 10 view .LVU1006
 3239 000e E177     		strb	r1, [r4, #31]
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3240              		.loc 1 566 25 view .LVU1007
 3241 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 567:src/keys.c    **** #else
 3242              		.loc 1 567 25 view .LVU1008
 3243 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 571:src/keys.c    **** 	int k = LastKey;
 3244              		.loc 1 571 10 view .LVU1009
 3245 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 572:src/keys.c    **** 
 3246              		.loc 1 572 10 view .LVU1010
 3247 0016 94F91380 		ldrsb	r8, [r4, #19]
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3248              		.loc 1 578 2 view .LVU1011
 3249 001a FFF7FEFF 		bl	xset
 3250              	.LVL231:
 580:src/keys.c    **** 	update_program_bounds(1);
 3251              		.loc 1 580 17 view .LVU1012
 3252 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 579:src/keys.c    **** 	State2.runmode = 1;
 3253              		.loc 1 579 14 view .LVU1013
 3254 0020 0722     		movs	r2, #7
 580:src/keys.c    **** 	update_program_bounds(1);
 3255              		.loc 1 580 17 view .LVU1014
 3256 0022 43F04003 		orr	r3, r3, #64
 581:src/keys.c    **** 	set_lift();
 3257              		.loc 1 581 2 view .LVU1015
 3258 0026 0120     		movs	r0, #1
 579:src/keys.c    **** 	State2.runmode = 1;
 3259              		.loc 1 579 14 view .LVU1016
 3260 0028 E273     		strb	r2, [r4, #15]
 580:src/keys.c    **** 	update_program_bounds(1);
 3261              		.loc 1 580 17 view .LVU1017
 3262 002a A375     		strb	r3, [r4, #22]
 581:src/keys.c    **** 	set_lift();
 3263              		.loc 1 581 2 view .LVU1018
 3264 002c FFF7FEFF 		bl	update_program_bounds
 3265              	.LVL232:
 582:src/keys.c    **** 
 3266              		.loc 1 582 2 view .LVU1019
 3267 0030 FFF7FEFF 		bl	set_lift
 3268              	.LVL233:
 589:src/keys.c    **** 	State2.flags = a;
 3269              		.loc 1 589 15 view .LVU1020
 3270 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 590:src/keys.c    **** #else
 3271              		.loc 1 590 15 view .LVU1021
 3272 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 594:src/keys.c    **** }
 3273              		.loc 1 594 15 view .LVU1022
 3274 0038 0949     		ldr	r1, .L349+4
 587:src/keys.c    **** #ifndef REALBUILD
ARM GAS  /tmp/cceb4mPP.s 			page 121


 3275              		.loc 1 587 10 view .LVU1023
 3276 003a 84F81380 		strb	r8, [r4, #19]
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3277              		.loc 1 566 25 view .LVU1024
 3278 003e 05F00105 		and	r5, r5, #1
 3279              	.LVL234:
 567:src/keys.c    **** #else
 3280              		.loc 1 567 2 is_stmt 1 view .LVU1025
 567:src/keys.c    **** #else
 3281              		.loc 1 567 25 is_stmt 0 view .LVU1026
 3282 0042 F609     		lsrs	r6, r6, #7
 3283              	.LVL235:
 571:src/keys.c    **** 	int k = LastKey;
 3284              		.loc 1 571 2 is_stmt 1 view .LVU1027
 571:src/keys.c    **** 	int k = LastKey;
 3285              		.loc 1 571 10 is_stmt 0 view .LVU1028
 3286 0044 FFB2     		uxtb	r7, r7
 3287              	.LVL236:
 572:src/keys.c    **** 
 3288              		.loc 1 572 2 is_stmt 1 view .LVU1029
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3289              		.loc 1 574 2 view .LVU1030
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3290              		.loc 1 578 2 view .LVU1031
 579:src/keys.c    **** 	State2.runmode = 1;
 3291              		.loc 1 579 2 view .LVU1032
 580:src/keys.c    **** 	update_program_bounds(1);
 3292              		.loc 1 580 2 view .LVU1033
 581:src/keys.c    **** 	set_lift();
 3293              		.loc 1 581 2 view .LVU1034
 582:src/keys.c    **** 
 3294              		.loc 1 582 2 view .LVU1035
 586:src/keys.c    **** 	LastKey = k;
 3295              		.loc 1 586 2 view .LVU1036
 589:src/keys.c    **** 	State2.flags = a;
 3296              		.loc 1 589 15 is_stmt 0 view .LVU1037
 3297 0046 66F3C712 		bfi	r2, r6, #7, #1
 590:src/keys.c    **** #else
 3298              		.loc 1 590 15 view .LVU1038
 3299 004a 65F30003 		bfi	r3, r5, #0, #1
 594:src/keys.c    **** }
 3300              		.loc 1 594 15 view .LVU1039
 3301 004e 6420     		movs	r0, #100
 589:src/keys.c    **** 	State2.flags = a;
 3302              		.loc 1 589 15 view .LVU1040
 3303 0050 E275     		strb	r2, [r4, #23]
 590:src/keys.c    **** #else
 3304              		.loc 1 590 15 view .LVU1041
 3305 0052 2376     		strb	r3, [r4, #24]
 586:src/keys.c    **** 	LastKey = k;
 3306              		.loc 1 586 10 view .LVU1042
 3307 0054 A774     		strb	r7, [r4, #18]
 587:src/keys.c    **** #ifndef REALBUILD
 3308              		.loc 1 587 2 is_stmt 1 view .LVU1043
 589:src/keys.c    **** 	State2.flags = a;
 3309              		.loc 1 589 2 view .LVU1044
 590:src/keys.c    **** #else
ARM GAS  /tmp/cceb4mPP.s 			page 122


 3310              		.loc 1 590 2 view .LVU1045
 594:src/keys.c    **** }
 3311              		.loc 1 594 2 view .LVU1046
 594:src/keys.c    **** }
 3312              		.loc 1 594 15 is_stmt 0 view .LVU1047
 3313 0056 0860     		str	r0, [r1]
 595:src/keys.c    **** 
 3314              		.loc 1 595 1 view .LVU1048
 3315 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3316              	.LVL237:
 3317              	.L350:
 595:src/keys.c    **** 
 3318              		.loc 1 595 1 view .LVU1049
 3319              		.align	2
 3320              	.L349:
 3321 005c 00000000 		.word	StateWhileOn
 3322 0060 00000000 		.word	ShowRegister
 3323              		.cfi_endproc
 3324              	.LFE13:
 3326              		.section	.text.soft_init_state,"ax",%progbits
 3327              		.align	1
 3328              		.p2align 2,,3
 3329              		.global	soft_init_state
 3330              		.syntax unified
 3331              		.thumb
 3332              		.thumb_func
 3333              		.fpu fpv4-sp-d16
 3335              	soft_init_state:
 3336              	.LFB14:
 597:src/keys.c    **** 	int soft;
 3337              		.loc 1 597 28 is_stmt 1 view -0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 598:src/keys.c    **** 	unsigned int runmode;
 3341              		.loc 1 598 2 view .LVU1051
 599:src/keys.c    **** 	unsigned int alphas;
 3342              		.loc 1 599 2 view .LVU1052
 600:src/keys.c    **** 
 3343              		.loc 1 600 2 view .LVU1053
 602:src/keys.c    **** 		CmdLineLength = 0;
 3344              		.loc 1 602 2 view .LVU1054
 597:src/keys.c    **** 	int soft;
 3345              		.loc 1 597 28 is_stmt 0 view .LVU1055
 3346 0000 38B5     		push	{r3, r4, r5, lr}
 3347              		.cfi_def_cfa_offset 16
 3348              		.cfi_offset 3, -16
 3349              		.cfi_offset 4, -12
 3350              		.cfi_offset 5, -8
 3351              		.cfi_offset 14, -4
 602:src/keys.c    **** 		CmdLineLength = 0;
 3352              		.loc 1 602 6 view .LVU1056
 3353 0002 114C     		ldr	r4, .L358
 602:src/keys.c    **** 		CmdLineLength = 0;
 3354              		.loc 1 602 5 view .LVU1057
 3355 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3356 0006 D3B9     		cbnz	r3, .L357
ARM GAS  /tmp/cceb4mPP.s 			page 123


 608:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3357              		.loc 1 608 2 is_stmt 1 view .LVU1058
 609:src/keys.c    **** 	runmode = State2.runmode;
 3358              		.loc 1 609 17 is_stmt 0 view .LVU1059
 3359 0008 104A     		ldr	r2, .L358+4
 3360 000a 6369     		ldr	r3, [r4, #20]
 609:src/keys.c    **** 	runmode = State2.runmode;
 3361              		.loc 1 609 60 view .LVU1060
 3362 000c 1A42     		tst	r2, r3
 3363 000e 0AD0     		beq	.L354
 3364              	.L355:
 3365              	.LVL238:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3366              		.loc 1 610 2 is_stmt 1 view .LVU1061
 611:src/keys.c    **** 	init_state();
 3367              		.loc 1 611 17 is_stmt 0 view .LVU1062
 3368 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3369              	.LVL239:
 611:src/keys.c    **** 	init_state();
 3370              		.loc 1 611 2 is_stmt 1 view .LVU1063
 612:src/keys.c    **** 	if (soft) {
 3371              		.loc 1 612 2 view .LVU1064
 3372 0012 FFF7FEFF 		bl	init_state
 3373              	.LVL240:
 613:src/keys.c    **** 		State2.runmode = runmode;
 3374              		.loc 1 613 2 view .LVU1065
 614:src/keys.c    **** 		State2.alphas = alphas;
 3375              		.loc 1 614 3 view .LVU1066
 615:src/keys.c    **** 	}
 3376              		.loc 1 615 3 view .LVU1067
 615:src/keys.c    **** 	}
 3377              		.loc 1 615 17 is_stmt 0 view .LVU1068
 3378 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3379 0018 05F04805 		and	r5, r5, #72
 3380 001c 23F04803 		bic	r3, r3, #72
 3381 0020 2B43     		orrs	r3, r3, r5
 3382 0022 A375     		strb	r3, [r4, #22]
 617:src/keys.c    **** 
 3383              		.loc 1 617 1 view .LVU1069
 3384 0024 38BD     		pop	{r3, r4, r5, pc}
 3385              	.LVL241:
 3386              	.L354:
 609:src/keys.c    **** 	runmode = State2.runmode;
 3387              		.loc 1 609 60 discriminator 2 view .LVU1070
 3388 0026 E368     		ldr	r3, [r4, #12]
 3389 0028 23F47F03 		bic	r3, r3, #16711680
 3390 002c 23F47F43 		bic	r3, r3, #65280
 3391 0030 B3F1E06F 		cmp	r3, #117440512
 3392 0034 ECD1     		bne	.L355
 3393              	.LVL242:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3394              		.loc 1 610 2 is_stmt 1 view .LVU1071
 611:src/keys.c    **** 	init_state();
 3395              		.loc 1 611 2 view .LVU1072
 612:src/keys.c    **** 	if (soft) {
 3396              		.loc 1 612 2 view .LVU1073
 617:src/keys.c    **** 
ARM GAS  /tmp/cceb4mPP.s 			page 124


 3397              		.loc 1 617 1 is_stmt 0 view .LVU1074
 3398 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3399              		.cfi_remember_state
 3400              		.cfi_restore 14
 3401              		.cfi_restore 5
 3402              		.cfi_restore 4
 3403              		.cfi_restore 3
 3404              		.cfi_def_cfa_offset 0
 612:src/keys.c    **** 	if (soft) {
 3405              		.loc 1 612 2 view .LVU1075
 3406 003a FFF7FEBF 		b	init_state
 3407              	.LVL243:
 3408              	.L357:
 3409              		.cfi_restore_state
 3410              	.LBB385:
 3411              	.LBI385:
 597:src/keys.c    **** 	int soft;
 3412              		.loc 1 597 6 is_stmt 1 view .LVU1076
 3413              	.LBB386:
 603:src/keys.c    **** 		CmdLineEex = 0;
 3414              		.loc 1 603 3 view .LVU1077
 604:src/keys.c    **** 		CmdLineDot = 0;
 3415              		.loc 1 604 3 view .LVU1078
 605:src/keys.c    **** 		return;
 3416              		.loc 1 605 3 view .LVU1079
 603:src/keys.c    **** 		CmdLineEex = 0;
 3417              		.loc 1 603 17 is_stmt 0 view .LVU1080
 3418 003e 0023     		movs	r3, #0
 3419 0040 A383     		strh	r3, [r4, #28]	@ movhi
 605:src/keys.c    **** 		return;
 3420              		.loc 1 605 14 view .LVU1081
 3421 0042 A377     		strb	r3, [r4, #30]
 606:src/keys.c    **** 	}
 3422              		.loc 1 606 3 is_stmt 1 view .LVU1082
 3423              	.LBE386:
 3424              	.LBE385:
 617:src/keys.c    **** 
 3425              		.loc 1 617 1 is_stmt 0 view .LVU1083
 3426 0044 38BD     		pop	{r3, r4, r5, pc}
 3427              	.L359:
 3428 0046 00BF     		.align	2
 3429              	.L358:
 3430 0048 00000000 		.word	StateWhileOn
 3431 004c 002F2004 		.word	69218048
 3432              		.cfi_endproc
 3433              	.LFE14:
 3435              		.section	.text.current_catalogue_max,"ax",%progbits
 3436              		.align	1
 3437              		.p2align 2,,3
 3438              		.global	current_catalogue_max
 3439              		.syntax unified
 3440              		.thumb
 3441              		.thumb_func
 3442              		.fpu fpv4-sp-d16
 3444              	current_catalogue_max:
 3445              	.LFB39:
2019:src/keys.c    **** 	// A quick table of catalogue sizes
ARM GAS  /tmp/cceb4mPP.s 			page 125


 3446              		.loc 1 2019 33 is_stmt 1 view -0
 3447              		.cfi_startproc
 3448              		@ args = 0, pretend = 0, frame = 0
 3449              		@ frame_needed = 0, uses_anonymous_args = 0
 3450              		@ link register save eliminated.
2022:src/keys.c    **** 	{
 3451              		.loc 1 2022 2 view .LVU1085
2053:src/keys.c    **** #endif
 3452              		.loc 1 2053 2 view .LVU1086
2053:src/keys.c    **** #endif
 3453              		.loc 1 2053 31 is_stmt 0 view .LVU1087
 3454 0000 024B     		ldr	r3, .L361
2053:src/keys.c    **** #endif
 3455              		.loc 1 2053 24 view .LVU1088
 3456 0002 034A     		ldr	r2, .L361+4
2053:src/keys.c    **** #endif
 3457              		.loc 1 2053 31 view .LVU1089
 3458 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2055:src/keys.c    **** 
 3459              		.loc 1 2055 1 view .LVU1090
 3460 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3461 0008 7047     		bx	lr
 3462              	.L362:
 3463 000a 00BF     		.align	2
 3464              	.L361:
 3465 000c 00000000 		.word	StateWhileOn
 3466 0010 00000000 		.word	.LANCHOR2
 3467              		.cfi_endproc
 3468              	.LFE39:
 3470              		.section	.text.current_catalogue,"ax",%progbits
 3471              		.align	1
 3472              		.p2align 2,,3
 3473              		.global	current_catalogue
 3474              		.syntax unified
 3475              		.thumb
 3476              		.thumb_func
 3477              		.fpu fpv4-sp-d16
 3479              	current_catalogue:
 3480              	.LVL244:
 3481              	.LFB41:
2068:src/keys.c    **** 	// A quick table of catalogue tables
 3482              		.loc 1 2068 33 is_stmt 1 view -0
 3483              		.cfi_startproc
 3484              		@ args = 0, pretend = 0, frame = 0
 3485              		@ frame_needed = 0, uses_anonymous_args = 0
 3486              		@ link register save eliminated.
2071:src/keys.c    **** 	{
 3487              		.loc 1 2071 2 view .LVU1092
2098:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3488              		.loc 1 2098 2 view .LVU1093
2099:src/keys.c    **** 	int m, i;
 3489              		.loc 1 2099 2 view .LVU1094
2099:src/keys.c    **** 	int m, i;
 3490              		.loc 1 2099 25 is_stmt 0 view .LVU1095
 3491 0000 314A     		ldr	r2, .L390
2099:src/keys.c    **** 	int m, i;
 3492              		.loc 1 2099 15 view .LVU1096
ARM GAS  /tmp/cceb4mPP.s 			page 126


 3493 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3494              	.LVL245:
2100:src/keys.c    **** 	unsigned p, q;
 3495              		.loc 1 2100 2 is_stmt 1 view .LVU1097
2101:src/keys.c    **** 
 3496              		.loc 1 2101 2 view .LVU1098
2103:src/keys.c    **** 		if (n == OP_ZERO)
 3497              		.loc 1 2103 2 view .LVU1099
2103:src/keys.c    **** 		if (n == OP_ZERO)
 3498              		.loc 1 2103 5 is_stmt 0 view .LVU1100
 3499 0004 102B     		cmp	r3, #16
 3500 0006 39D0     		beq	.L384
2108:src/keys.c    **** 		if (n == OP_ZERO)
 3501              		.loc 1 2108 2 is_stmt 1 view .LVU1101
2108:src/keys.c    **** 		if (n == OP_ZERO)
 3502              		.loc 1 2108 5 is_stmt 0 view .LVU1102
 3503 0008 112B     		cmp	r3, #17
 3504 000a 32D0     		beq	.L385
2113:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3505              		.loc 1 2113 2 is_stmt 1 view .LVU1103
2113:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3506              		.loc 1 2113 5 is_stmt 0 view .LVU1104
 3507 000c 122B     		cmp	r3, #18
 3508 000e 45D0     		beq	.L386
2126:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3509              		.loc 1 2126 2 is_stmt 1 view .LVU1105
2126:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3510              		.loc 1 2126 5 is_stmt 0 view .LVU1106
 3511 0010 0E2B     		cmp	r3, #14
 3512 0012 38D0     		beq	.L387
2129:src/keys.c    **** 
 3513              		.loc 1 2129 3 is_stmt 1 view .LVU1107
2129:src/keys.c    **** 
 3514              		.loc 1 2129 7 is_stmt 0 view .LVU1108
 3515 0014 2D4A     		ldr	r2, .L390+4
2131:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3516              		.loc 1 2131 35 view .LVU1109
 3517 0016 A3F10B01 		sub	r1, r3, #11
2131:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3518              		.loc 1 2131 5 view .LVU1110
 3519 001a 0429     		cmp	r1, #4
2129:src/keys.c    **** 
 3520              		.loc 1 2129 7 view .LVU1111
 3521 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3522              	.LVL246:
2131:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3523              		.loc 1 2131 2 is_stmt 1 view .LVU1112
2131:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3524              		.loc 1 2131 5 is_stmt 0 view .LVU1113
 3525 0020 38D9     		bls	.L370
2134:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3526              		.loc 1 2134 2 is_stmt 1 view .LVU1114
2134:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3527              		.loc 1 2134 5 is_stmt 0 view .LVU1115
 3528 0022 142B     		cmp	r3, #20
 3529 0024 4DD8     		bhi	.L378
2138:src/keys.c    **** 	p = cat[0];
ARM GAS  /tmp/cceb4mPP.s 			page 127


 3530              		.loc 1 2138 2 is_stmt 1 view .LVU1116
2068:src/keys.c    **** 	// A quick table of catalogue tables
 3531              		.loc 1 2068 33 is_stmt 0 view .LVU1117
 3532 0026 10B4     		push	{r4}
 3533              		.cfi_def_cfa_offset 4
 3534              		.cfi_offset 4, -4
2138:src/keys.c    **** 	p = cat[0];
 3535              		.loc 1 2138 11 view .LVU1118
 3536 0028 00EBA001 		add	r1, r0, r0, asr #2
2138:src/keys.c    **** 	p = cat[0];
 3537              		.loc 1 2138 6 view .LVU1119
 3538 002c 5318     		adds	r3, r2, r1
 3539              	.LVL247:
2139:src/keys.c    **** 	q = cat[1];
 3540              		.loc 1 2139 2 is_stmt 1 view .LVU1120
2140:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3541              		.loc 1 2140 2 view .LVU1121
2141:src/keys.c    **** 
 3542              		.loc 1 2141 2 view .LVU1122
2141:src/keys.c    **** 
 3543              		.loc 1 2141 35 is_stmt 0 view .LVU1123
 3544 002e 4000     		lsls	r0, r0, #1
 3545              	.LVL248:
2139:src/keys.c    **** 	q = cat[1];
 3546              		.loc 1 2139 4 view .LVU1124
 3547 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3548              	.LVL249:
2140:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3549              		.loc 1 2140 4 view .LVU1125
 3550 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3551              	.LVL250:
2140:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3552              		.loc 1 2140 4 view .LVU1126
 3553 0034 2649     		ldr	r1, .L390+8
 3554              	.LVL251:
2141:src/keys.c    **** 
 3555              		.loc 1 2141 54 view .LVU1127
 3556 0036 C443     		mvns	r4, r0
2141:src/keys.c    **** 
 3557              		.loc 1 2141 35 view .LVU1128
 3558 0038 00F00600 		and	r0, r0, #6
2141:src/keys.c    **** 
 3559              		.loc 1 2141 54 view .LVU1129
 3560 003c 04F00604 		and	r4, r4, #6
2141:src/keys.c    **** 
 3561              		.loc 1 2141 24 view .LVU1130
 3562 0040 0230     		adds	r0, r0, #2
2141:src/keys.c    **** 
 3563              		.loc 1 2141 48 view .LVU1131
 3564 0042 E340     		lsrs	r3, r3, r4
 3565              	.LVL252:
2141:src/keys.c    **** 
 3566              		.loc 1 2141 18 view .LVU1132
 3567 0044 02FA00F0 		lsl	r0, r2, r0
2141:src/keys.c    **** 
 3568              		.loc 1 2141 43 view .LVU1133
 3569 0048 1843     		orrs	r0, r0, r3
ARM GAS  /tmp/cceb4mPP.s 			page 128


2141:src/keys.c    **** 
 3570              		.loc 1 2141 4 view .LVU1134
 3571 004a C0F30903 		ubfx	r3, r0, #0, #10
 3572              	.LVL253:
2144:src/keys.c    **** 		if (m < opcode_breaks[i])
 3573              		.loc 1 2144 2 is_stmt 1 view .LVU1135
2144:src/keys.c    **** 		if (m < opcode_breaks[i])
 3574              		.loc 1 2144 12 view .LVU1136
2141:src/keys.c    **** 
 3575              		.loc 1 2141 4 is_stmt 0 view .LVU1137
 3576 004e 3422     		movs	r2, #52
 3577              	.LVL254:
2144:src/keys.c    **** 		if (m < opcode_breaks[i])
 3578              		.loc 1 2144 8 view .LVU1138
 3579 0050 0020     		movs	r0, #0
 3580 0052 01E0     		b	.L374
 3581              	.LVL255:
 3582              	.L389:
2144:src/keys.c    **** 		if (m < opcode_breaks[i])
 3583              		.loc 1 2144 8 view .LVU1139
 3584 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3585              	.LVL256:
 3586              	.L374:
2145:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3587              		.loc 1 2145 3 is_stmt 1 view .LVU1140
2147:src/keys.c    **** 	}
 3588              		.loc 1 2147 3 view .LVU1141
2145:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3589              		.loc 1 2145 6 is_stmt 0 view .LVU1142
 3590 0058 9A42     		cmp	r2, r3
 3591 005a 2FDC     		bgt	.L388
2144:src/keys.c    **** 		if (m < opcode_breaks[i])
 3592              		.loc 1 2144 25 discriminator 2 view .LVU1143
 3593 005c 0130     		adds	r0, r0, #1
 3594              	.LVL257:
2144:src/keys.c    **** 		if (m < opcode_breaks[i])
 3595              		.loc 1 2144 2 discriminator 2 view .LVU1144
 3596 005e 0728     		cmp	r0, #7
2147:src/keys.c    **** 	}
 3597              		.loc 1 2147 5 discriminator 2 view .LVU1145
 3598 0060 A3EB0203 		sub	r3, r3, r2
 3599              	.LVL258:
2144:src/keys.c    **** 		if (m < opcode_breaks[i])
 3600              		.loc 1 2144 24 is_stmt 1 discriminator 2 view .LVU1146
2144:src/keys.c    **** 		if (m < opcode_breaks[i])
 3601              		.loc 1 2144 12 discriminator 2 view .LVU1147
2144:src/keys.c    **** 		if (m < opcode_breaks[i])
 3602              		.loc 1 2144 2 is_stmt 0 discriminator 2 view .LVU1148
 3603 0064 F6D1     		bne	.L389
2149:src/keys.c    **** }
 3604              		.loc 1 2149 2 is_stmt 1 view .LVU1149
2149:src/keys.c    **** }
 3605              		.loc 1 2149 9 is_stmt 0 view .LVU1150
 3606 0066 03F12000 		add	r0, r3, #32
 3607              	.LVL259:
2149:src/keys.c    **** }
 3608              		.loc 1 2149 9 view .LVU1151
ARM GAS  /tmp/cceb4mPP.s 			page 129


 3609 006a 0002     		lsls	r0, r0, #8
 3610              	.L363:
2150:src/keys.c    **** 
 3611              		.loc 1 2150 1 view .LVU1152
 3612 006c 5DF8044B 		ldr	r4, [sp], #4
 3613              		.cfi_restore 4
 3614              		.cfi_def_cfa_offset 0
 3615 0070 7047     		bx	lr
 3616              	.LVL260:
 3617              	.L385:
2109:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3618              		.loc 1 2109 3 is_stmt 1 view .LVU1153
2109:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3619              		.loc 1 2109 6 is_stmt 0 view .LVU1154
 3620 0072 4B28     		cmp	r0, #75
 3621 0074 1FD0     		beq	.L376
2111:src/keys.c    **** 	}
 3622              		.loc 1 2111 3 is_stmt 1 view .LVU1155
2111:src/keys.c    **** 	}
 3623              		.loc 1 2111 10 is_stmt 0 view .LVU1156
 3624 0076 40F40450 		orr	r0, r0, #8448
 3625              	.LVL261:
2111:src/keys.c    **** 	}
 3626              		.loc 1 2111 10 view .LVU1157
 3627 007a 7047     		bx	lr
 3628              	.LVL262:
 3629              	.L384:
2104:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3630              		.loc 1 2104 3 is_stmt 1 view .LVU1158
2104:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3631              		.loc 1 2104 6 is_stmt 0 view .LVU1159
 3632 007c 4B28     		cmp	r0, #75
 3633 007e 17D0     		beq	.L375
2106:src/keys.c    **** 	}
 3634              		.loc 1 2106 3 is_stmt 1 view .LVU1160
2106:src/keys.c    **** 	}
 3635              		.loc 1 2106 10 is_stmt 0 view .LVU1161
 3636 0080 40F40050 		orr	r0, r0, #8192
 3637              	.LVL263:
2106:src/keys.c    **** 	}
 3638              		.loc 1 2106 10 view .LVU1162
 3639 0084 7047     		bx	lr
 3640              	.LVL264:
 3641              	.L387:
2126:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3642              		.loc 1 2126 35 discriminator 1 view .LVU1163
 3643 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2127:src/keys.c    **** 	else
 3644              		.loc 1 2127 7 discriminator 1 view .LVU1164
 3645 0088 124B     		ldr	r3, .L390+12
 3646              	.LVL265:
2127:src/keys.c    **** 	else
 3647              		.loc 1 2127 7 discriminator 1 view .LVU1165
 3648 008a 134A     		ldr	r2, .L390+16
 3649              	.LVL266:
2127:src/keys.c    **** 	else
 3650              		.loc 1 2127 7 discriminator 1 view .LVU1166
ARM GAS  /tmp/cceb4mPP.s 			page 130


 3651 008c 11F0100F 		tst	r1, #16
 3652 0090 18BF     		it	ne
 3653 0092 1A46     		movne	r2, r3
 3654              	.L370:
 3655              	.LVL267:
2132:src/keys.c    **** 	}
 3656              		.loc 1 2132 3 is_stmt 1 view .LVU1167
 3657              	.LBB387:
 3658              	.LBI387:
2061:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3659              		.loc 1 2061 15 view .LVU1168
 3660              	.LBB388:
2062:src/keys.c    **** }
 3661              		.loc 1 2062 2 view .LVU1169
2062:src/keys.c    **** }
 3662              		.loc 1 2062 9 is_stmt 0 view .LVU1170
 3663 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3664              	.LVL268:
2062:src/keys.c    **** }
 3665              		.loc 1 2062 9 view .LVU1171
 3666 0096 40F48840 		orr	r0, r0, #17408
 3667              	.LVL269:
2062:src/keys.c    **** }
 3668              		.loc 1 2062 9 view .LVU1172
 3669              	.LBE388:
 3670              	.LBE387:
2132:src/keys.c    **** 	}
 3671              		.loc 1 2132 10 view .LVU1173
 3672 009a 7047     		bx	lr
 3673              	.LVL270:
 3674              	.L386:
 3675              	.LBB389:
2114:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3676              		.loc 1 2114 3 is_stmt 1 view .LVU1174
2114:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3677              		.loc 1 2114 33 is_stmt 0 view .LVU1175
 3678 009c 0F4B     		ldr	r3, .L390+20
 3679              	.LVL271:
2114:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3680              		.loc 1 2114 13 view .LVU1176
 3681 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3682              	.LVL272:
2115:src/keys.c    **** 			// Monadic conversion routine
 3683              		.loc 1 2115 3 is_stmt 1 view .LVU1177
2115:src/keys.c    **** 			// Monadic conversion routine
 3684              		.loc 1 2115 6 is_stmt 0 view .LVU1178
 3685 00a0 5728     		cmp	r0, #87
2117:src/keys.c    **** 		else
 3686              		.loc 1 2117 4 is_stmt 1 view .LVU1179
2117:src/keys.c    **** 		else
 3687              		.loc 1 2117 25 is_stmt 0 view .LVU1180
 3688 00a2 C6BF     		itte	gt
 3689 00a4 5838     		subgt	r0, r0, #88
 3690              	.LVL273:
2117:src/keys.c    **** 		else
 3691              		.loc 1 2117 18 view .LVU1181
 3692 00a6 40F40070 		orrgt	r0, r0, #512
ARM GAS  /tmp/cceb4mPP.s 			page 131


2119:src/keys.c    **** 	}
 3693              		.loc 1 2119 4 is_stmt 1 view .LVU1182
2119:src/keys.c    **** 	}
 3694              		.loc 1 2119 11 is_stmt 0 view .LVU1183
 3695 00aa 40F40C40 		orrle	r0, r0, #35840
 3696 00ae 7047     		bx	lr
 3697              	.LVL274:
 3698              	.L375:
2119:src/keys.c    **** 	}
 3699              		.loc 1 2119 11 view .LVU1184
 3700              	.LBE389:
2105:src/keys.c    **** 		return CONST(n);
 3701              		.loc 1 2105 11 view .LVU1185
 3702 00b0 4FF42740 		mov	r0, #42752
 3703              	.LVL275:
2105:src/keys.c    **** 		return CONST(n);
 3704              		.loc 1 2105 11 view .LVU1186
 3705 00b4 7047     		bx	lr
 3706              	.LVL276:
 3707              	.L376:
2110:src/keys.c    **** 		return CONST_CMPLX(n);
 3708              		.loc 1 2110 11 view .LVU1187
 3709 00b6 4FF42840 		mov	r0, #43008
 3710              	.LVL277:
2110:src/keys.c    **** 		return CONST_CMPLX(n);
 3711              		.loc 1 2110 11 view .LVU1188
 3712 00ba 7047     		bx	lr
 3713              	.LVL278:
 3714              	.L388:
 3715              		.cfi_def_cfa_offset 4
 3716              		.cfi_offset 4, -4
2146:src/keys.c    **** 		m -= opcode_breaks[i];
 3717              		.loc 1 2146 4 is_stmt 1 view .LVU1189
2146:src/keys.c    **** 		m -= opcode_breaks[i];
 3718              		.loc 1 2146 29 is_stmt 0 view .LVU1190
 3719 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3720              	.LVL279:
2146:src/keys.c    **** 		m -= opcode_breaks[i];
 3721              		.loc 1 2146 29 view .LVU1191
 3722 00c0 D4E7     		b	.L363
 3723              	.LVL280:
 3724              	.L378:
 3725              		.cfi_def_cfa_offset 0
 3726              		.cfi_restore 4
2135:src/keys.c    **** 
 3727              		.loc 1 2135 10 view .LVU1192
 3728 00c2 4FF48070 		mov	r0, #256
 3729              	.LVL281:
2150:src/keys.c    **** 
 3730              		.loc 1 2150 1 view .LVU1193
 3731 00c6 7047     		bx	lr
 3732              	.L391:
 3733              		.align	2
 3734              	.L390:
 3735 00c8 00000000 		.word	StateWhileOn
 3736 00cc 00000000 		.word	.LANCHOR6
 3737 00d0 01000000 		.word	.LANCHOR7+1
ARM GAS  /tmp/cceb4mPP.s 			page 132


 3738 00d4 00000000 		.word	.LANCHOR4
 3739 00d8 00000000 		.word	.LANCHOR3
 3740 00dc 00000000 		.word	.LANCHOR5
 3741              		.cfi_endproc
 3742              	.LFE41:
 3744              		.section	.text.process_catalogue,"ax",%progbits
 3745              		.align	1
 3746              		.p2align 2,,3
 3747              		.syntax unified
 3748              		.thumb
 3749              		.thumb_func
 3750              		.fpu fpv4-sp-d16
 3752              	process_catalogue:
 3753              	.LVL282:
 3754              	.LFB43:
2164:src/keys.c    **** 	int pos = State.catpos;
 3755              		.loc 1 2164 92 is_stmt 1 view -0
 3756              		.cfi_startproc
 3757              		@ args = 0, pretend = 0, frame = 16
 3758              		@ frame_needed = 0, uses_anonymous_args = 0
2164:src/keys.c    **** 	int pos = State.catpos;
 3759              		.loc 1 2164 92 is_stmt 0 view .LVU1195
 3760 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3761              		.cfi_def_cfa_offset 36
 3762              		.cfi_offset 4, -36
 3763              		.cfi_offset 5, -32
 3764              		.cfi_offset 6, -28
 3765              		.cfi_offset 7, -24
 3766              		.cfi_offset 8, -20
 3767              		.cfi_offset 9, -16
 3768              		.cfi_offset 10, -12
 3769              		.cfi_offset 11, -8
 3770              		.cfi_offset 14, -4
2165:src/keys.c    **** 	int ch;
 3771              		.loc 1 2165 12 view .LVU1196
 3772 0004 DFF8EC92 		ldr	r9, .L506+24
 3773              	.LBB390:
 3774              	.LBB391:
2053:src/keys.c    **** #endif
 3775              		.loc 1 2053 31 view .LVU1197
 3776 0008 B44E     		ldr	r6, .L506
 3777              	.LBE391:
 3778              	.LBE390:
2165:src/keys.c    **** 	int ch;
 3779              		.loc 1 2165 12 view .LVU1198
 3780 000a D9F80040 		ldr	r4, [r9]
 3781              	.LBB396:
 3782              	.LBB392:
2053:src/keys.c    **** #endif
 3783              		.loc 1 2053 31 view .LVU1199
 3784 000e 96F80EA0 		ldrb	r10, [r6, #14]	@ zero_extendqisi2
 3785              	.LBE392:
 3786              	.LBE396:
2165:src/keys.c    **** 	int ch;
 3787              		.loc 1 2165 17 view .LVU1200
 3788 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3789              	.LBB397:
ARM GAS  /tmp/cceb4mPP.s 			page 133


 3790              	.LBB393:
2053:src/keys.c    **** #endif
 3791              		.loc 1 2053 24 view .LVU1201
 3792 0016 B24B     		ldr	r3, .L506+4
 3793              	.LBE393:
 3794              	.LBE397:
2165:src/keys.c    **** 	int ch;
 3795              		.loc 1 2165 2 is_stmt 1 view .LVU1202
2164:src/keys.c    **** 	int pos = State.catpos;
 3796              		.loc 1 2164 92 is_stmt 0 view .LVU1203
 3797 0018 85B0     		sub	sp, sp, #20
 3798              		.cfi_def_cfa_offset 56
 3799              	.LBB398:
 3800              	.LBB394:
2053:src/keys.c    **** #endif
 3801              		.loc 1 2053 24 view .LVU1204
 3802 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3803              	.LBE394:
 3804              	.LBE398:
2164:src/keys.c    **** 	int pos = State.catpos;
 3805              		.loc 1 2164 92 view .LVU1205
 3806 001e 1746     		mov	r7, r2
2165:src/keys.c    **** 	int ch;
 3807              		.loc 1 2165 6 view .LVU1206
 3808 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3809              	.LVL283:
2166:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 3810              		.loc 1 2166 2 is_stmt 1 view .LVU1207
2167:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
 3811              		.loc 1 2167 2 view .LVU1208
 3812              	.LBB399:
 3813              	.LBI390:
2019:src/keys.c    **** 	// A quick table of catalogue sizes
 3814              		.loc 1 2019 5 view .LVU1209
 3815              	.LBB395:
2022:src/keys.c    **** 	{
 3816              		.loc 1 2022 2 view .LVU1210
2053:src/keys.c    **** #endif
 3817              		.loc 1 2053 2 view .LVU1211
2053:src/keys.c    **** #endif
 3818              		.loc 1 2053 2 is_stmt 0 view .LVU1212
 3819              	.LBE395:
 3820              	.LBE399:
2168:src/keys.c    **** 
 3821              		.loc 1 2168 2 is_stmt 1 view .LVU1213
2170:src/keys.c    **** 		switch (c) {
 3822              		.loc 1 2170 2 view .LVU1214
2170:src/keys.c    **** 		switch (c) {
 3823              		.loc 1 2170 5 is_stmt 0 view .LVU1215
 3824 0024 0029     		cmp	r1, #0
 3825 0026 66D0     		beq	.L491
2231:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3826              		.loc 1 2231 9 is_stmt 1 view .LVU1216
2231:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3827              		.loc 1 2231 12 is_stmt 0 view .LVU1217
 3828 0028 0129     		cmp	r1, #1
 3829 002a 00F0EE80 		beq	.L492
ARM GAS  /tmp/cceb4mPP.s 			page 134


2265:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3830              		.loc 1 2265 9 is_stmt 1 view .LVU1218
2265:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3831              		.loc 1 2265 12 is_stmt 0 view .LVU1219
 3832 002e 0229     		cmp	r1, #2
 3833 0030 00F00C81 		beq	.L493
 3834              	.LVL284:
 3835              	.L428:
 3836              	.LBB400:
 3837              	.LBB401:
 440:src/keys.c    **** }
 3838              		.loc 1 440 2 is_stmt 1 view .LVU1220
 3839              	.LBB402:
 3840              	.LBI402:
 119:src/keys.c    **** {
 3841              		.loc 1 119 12 view .LVU1221
 3842              	.LBB403:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3843              		.loc 1 121 2 view .LVU1222
 131:src/keys.c    **** }
 3844              		.loc 1 131 2 view .LVU1223
 131:src/keys.c    **** }
 3845              		.loc 1 131 23 is_stmt 0 view .LVU1224
 3846 0034 AB4B     		ldr	r3, .L506+8
 3847              	.LBE403:
 3848              	.LBE402:
 440:src/keys.c    **** }
 3849              		.loc 1 440 49 view .LVU1225
 3850 0036 AC4A     		ldr	r2, .L506+12
 3851              	.LBB405:
 3852              	.LBB404:
 131:src/keys.c    **** }
 3853              		.loc 1 131 23 view .LVU1226
 3854 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3855              	.LBE404:
 3856              	.LBE405:
 440:src/keys.c    **** }
 3857              		.loc 1 440 49 view .LVU1227
 3858 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3859 003e 02EB4303 		add	r3, r2, r3, lsl #1
 3860              	.LBE401:
 3861              	.LBE400:
 3862              	.LBB409:
 3863              	.LBB410:
 3864              	.LBB411:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3865              		.loc 1 94 16 view .LVU1228
 3866 0042 0025     		movs	r5, #0
 3867              	.LVL285:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3868              		.loc 1 94 16 view .LVU1229
 3869              	.LBE411:
 3870              	.LBE410:
 3871              	.LBE409:
2275:src/keys.c    **** 	reset_shift();
 3872              		.loc 1 2275 7 view .LVU1230
 3873 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
ARM GAS  /tmp/cceb4mPP.s 			page 135


 3874              	.LVL286:
2275:src/keys.c    **** 	reset_shift();
 3875              		.loc 1 2275 7 view .LVU1231
 3876 0046 FFF7FEFF 		bl	remap_chars
 3877              	.LVL287:
2275:src/keys.c    **** 	reset_shift();
 3878              		.loc 1 2275 7 view .LVU1232
 3879 004a 0446     		mov	r4, r0
 3880              	.LVL288:
2276:src/keys.c    **** 	if (ch == '\0')
 3881              		.loc 1 2276 2 is_stmt 1 view .LVU1233
 3882              	.LBB416:
 3883              	.LBI409:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3884              		.loc 1 102 13 view .LVU1234
 3885              	.LBE416:
 103:src/keys.c    **** }
 3886              		.loc 1 103 2 view .LVU1235
 3887              	.LBB417:
 3888              	.LBB415:
 3889              	.LBI410:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 3890              		.loc 1 92 20 view .LVU1236
 3891              	.LBB414:
  93:src/keys.c    **** 	State2.shifts = shift;
 3892              		.loc 1 93 2 view .LVU1237
 3893              	.LBB412:
 3894              	.LBI412:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 3895              		.loc 1 84 13 view .LVU1238
 3896              	.LBB413:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3897              		.loc 1 85 2 view .LVU1239
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3898              		.loc 1 85 18 is_stmt 0 view .LVU1240
 3899 004c FFF7FEFF 		bl	shift_down
 3900              	.LVL289:
  86:src/keys.c    **** }
 3901              		.loc 1 86 2 is_stmt 1 view .LVU1241
 3902              	.LBE413:
 3903              	.LBE412:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3904              		.loc 1 94 2 view .LVU1242
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3905              		.loc 1 94 16 is_stmt 0 view .LVU1243
 3906 0050 3574     		strb	r5, [r6, #16]
  95:src/keys.c    **** 	return r;
 3907              		.loc 1 95 2 is_stmt 1 view .LVU1244
  95:src/keys.c    **** 	return r;
 3908              		.loc 1 95 19 is_stmt 0 view .LVU1245
 3909 0052 7573     		strb	r5, [r6, #13]
  96:src/keys.c    **** }
 3910              		.loc 1 96 2 is_stmt 1 view .LVU1246
 3911              	.LVL290:
  96:src/keys.c    **** }
 3912              		.loc 1 96 2 is_stmt 0 view .LVU1247
 3913              	.LBE414:
ARM GAS  /tmp/cceb4mPP.s 			page 136


 3914              	.LBE415:
 3915              	.LBE417:
2277:src/keys.c    **** 		return STATE_UNFINISHED;
 3916              		.loc 1 2277 2 is_stmt 1 view .LVU1248
2277:src/keys.c    **** 		return STATE_UNFINISHED;
 3917              		.loc 1 2277 5 is_stmt 0 view .LVU1249
 3918 0054 002C     		cmp	r4, #0
 3919 0056 6FD0     		beq	.L490
2279:src/keys.c    **** 		// No multi character search in alpha catalogues
 3920              		.loc 1 2279 2 is_stmt 1 view .LVU1250
2279:src/keys.c    **** 		// No multi character search in alpha catalogues
 3921              		.loc 1 2279 5 is_stmt 0 view .LVU1251
 3922 0058 AAF10B0A 		sub	r10, r10, #11
 3923              	.LVL291:
2279:src/keys.c    **** 		// No multi character search in alpha catalogues
 3924              		.loc 1 2279 5 view .LVU1252
 3925 005c BAF1040F 		cmp	r10, #4
 3926 0060 40F2CB80 		bls	.L442
2283:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3927              		.loc 1 2283 2 is_stmt 1 view .LVU1253
2283:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3928              		.loc 1 2283 6 is_stmt 0 view .LVU1254
 3929 0064 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
2283:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3930              		.loc 1 2283 5 view .LVU1255
 3931 0066 092D     		cmp	r5, #9
 3932 0068 40F2C780 		bls	.L442
 3933              	.LVL292:
 3934              	.L410:
2288:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3935              		.loc 1 2288 2 is_stmt 1 view .LVU1256
2288:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3936              		.loc 1 2288 25 is_stmt 0 view .LVU1257
 3937 006c 7319     		adds	r3, r6, r5
 3938 006e 0025     		movs	r5, #0
 3939 0070 83F82050 		strb	r5, [r3, #32]
2289:src/keys.c    **** 		char buf[16];
 3940              		.loc 1 2289 2 is_stmt 1 view .LVU1258
 3941              	.LVL293:
2289:src/keys.c    **** 		char buf[16];
 3942              		.loc 1 2289 16 view .LVU1259
2289:src/keys.c    **** 		char buf[16];
 3943              		.loc 1 2289 2 is_stmt 0 view .LVU1260
 3944 0074 B8F1000F 		cmp	r8, #0
 3945 0078 00F0D780 		beq	.L488
 3946              	.LVL294:
 3947              	.L430:
 3948              	.LBB418:
2290:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 3949              		.loc 1 2290 3 is_stmt 1 view .LVU1261
2291:src/keys.c    **** 		int i;
 3950              		.loc 1 2291 3 view .LVU1262
2291:src/keys.c    **** 		int i;
 3951              		.loc 1 2291 21 is_stmt 0 view .LVU1263
 3952 007c 2846     		mov	r0, r5
 3953 007e FFF7FEFF 		bl	current_catalogue
 3954              	.LVL295:
ARM GAS  /tmp/cceb4mPP.s 			page 137


 3955 0082 6946     		mov	r1, sp
 3956 0084 FFF7FEFF 		bl	catcmd
 3957              	.LVL296:
 3958 0088 0446     		mov	r4, r0
 3959              	.LVL297:
2292:src/keys.c    **** 
 3960              		.loc 1 2292 3 is_stmt 1 view .LVU1264
2294:src/keys.c    **** 			cmd++;
 3961              		.loc 1 2294 3 view .LVU1265
2295:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3962              		.loc 1 2295 4 view .LVU1266
2294:src/keys.c    **** 			cmd++;
 3963              		.loc 1 2294 7 is_stmt 0 view .LVU1267
 3964 008a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3965              	.LVL298:
2294:src/keys.c    **** 			cmd++;
 3966              		.loc 1 2294 6 view .LVU1268
 3967 008c 1428     		cmp	r0, #20
 3968 008e 04BF     		itt	eq
 3969 0090 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2295:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3970              		.loc 1 2295 7 view .LVU1269
 3971 0092 0134     		addeq	r4, r4, #1
 3972              	.LVL299:
2296:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3973              		.loc 1 2296 3 is_stmt 1 view .LVU1270
2296:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3974              		.loc 1 2296 13 view .LVU1271
2296:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3975              		.loc 1 2296 3 is_stmt 0 view .LVU1272
 3976 0094 0028     		cmp	r0, #0
 3977 0096 00F0BF80 		beq	.L432
 3978 009a DFF85CB2 		ldr	fp, .L506+28
 3979 009e C4F1010A 		rsb	r10, r4, #1
 3980 00a2 06E0     		b	.L435
 3981              	.LVL300:
 3982              	.L495:
 3983              	.LBB419:
2301:src/keys.c    **** 				break;
 3984              		.loc 1 2301 12 view .LVU1273
 3985 00a4 C0F2BA80 		blt	.L434
 3986              	.LBE419:
2296:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3987              		.loc 1 2296 16 discriminator 2 view .LVU1274
 3988 00a8 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 3989              	.LVL301:
2296:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3990              		.loc 1 2296 3 discriminator 2 view .LVU1275
 3991 00ac 0028     		cmp	r0, #0
 3992 00ae 00F0BF80 		beq	.L494
 3993              	.LVL302:
 3994              	.L435:
 3995              	.LBB420:
2297:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3996              		.loc 1 2297 4 is_stmt 1 view .LVU1276
2297:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3997              		.loc 1 2297 18 is_stmt 0 view .LVU1277
ARM GAS  /tmp/cceb4mPP.s 			page 138


 3998 00b2 FFF7FEFF 		bl	remap_chars
 3999              	.LVL303:
2301:src/keys.c    **** 				break;
 4000              		.loc 1 2301 9 is_stmt 1 view .LVU1278
 4001              	.LBE420:
2296:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4002              		.loc 1 2296 29 view .LVU1279
 4003              	.LBB421:
2298:src/keys.c    **** 			if (c > cl)
 4004              		.loc 1 2298 4 view .LVU1280
2298:src/keys.c    **** 			if (c > cl)
 4005              		.loc 1 2298 42 is_stmt 0 view .LVU1281
 4006 00b6 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 4007              	.LVL304:
2299:src/keys.c    **** 				goto set_pos;
 4008              		.loc 1 2299 4 is_stmt 1 view .LVU1282
2299:src/keys.c    **** 				goto set_pos;
 4009              		.loc 1 2299 7 is_stmt 0 view .LVU1283
 4010 00ba 9842     		cmp	r0, r3
 4011 00bc 0AEB0402 		add	r2, r10, r4
 4012              	.LVL305:
2299:src/keys.c    **** 				goto set_pos;
 4013              		.loc 1 2299 7 view .LVU1284
 4014              	.LBE421:
2296:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4015              		.loc 1 2296 13 is_stmt 1 view .LVU1285
 4016              	.LBB422:
2299:src/keys.c    **** 				goto set_pos;
 4017              		.loc 1 2299 7 is_stmt 0 view .LVU1286
 4018 00c0 F0DD     		ble	.L495
 4019              	.LVL306:
 4020              	.L433:
2299:src/keys.c    **** 				goto set_pos;
 4021              		.loc 1 2299 7 view .LVU1287
 4022 00c2 D9F80040 		ldr	r4, [r9]
 4023              	.L413:
2299:src/keys.c    **** 				goto set_pos;
 4024              		.loc 1 2299 7 view .LVU1288
 4025              	.LBE422:
 4026              	.LBE418:
2310:src/keys.c    **** 		--pos;
 4027              		.loc 1 2310 8 is_stmt 1 view .LVU1289
 4028 00c6 002F     		cmp	r7, #0
 4029 00c8 00F0B680 		beq	.L417
2310:src/keys.c    **** 		--pos;
 4030              		.loc 1 2310 18 is_stmt 0 view .LVU1290
 4031 00cc 4DB1     		cbz	r5, .L411
 4032              	.LVL307:
 4033              	.L489:
2310:src/keys.c    **** 		--pos;
 4034              		.loc 1 2310 18 view .LVU1291
 4035 00ce 2846     		mov	r0, r5
 4036 00d0 FFF7FEFF 		bl	current_catalogue
 4037              	.LVL308:
2311:src/keys.c    **** 	State.catpos = pos;
 4038              		.loc 1 2311 3 is_stmt 1 view .LVU1292
2310:src/keys.c    **** 		--pos;
ARM GAS  /tmp/cceb4mPP.s 			page 139


 4039              		.loc 1 2310 8 view .LVU1293
 4040              	.LBB423:
 4041              	.LBI423:
2157:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4042              		.loc 1 2157 12 view .LVU1294
 4043              	.LBB424:
2158:src/keys.c    **** }
 4044              		.loc 1 2158 2 view .LVU1295
2158:src/keys.c    **** }
 4045              		.loc 1 2158 33 is_stmt 0 view .LVU1296
 4046 00d4 00F0F000 		and	r0, r0, #240
 4047              	.LBE424:
 4048              	.LBE423:
2310:src/keys.c    **** 		--pos;
 4049              		.loc 1 2310 25 view .LVU1297
 4050 00d8 F028     		cmp	r0, #240
 4051 00da 40F0AD80 		bne	.L417
2310:src/keys.c    **** 		--pos;
 4052              		.loc 1 2310 18 view .LVU1298
 4053 00de 013D     		subs	r5, r5, #1
 4054              	.LVL309:
2310:src/keys.c    **** 		--pos;
 4055              		.loc 1 2310 18 view .LVU1299
 4056 00e0 F5D1     		bne	.L489
 4057              	.LVL310:
 4058              	.L411:
2312:src/keys.c    **** 	return STATE_UNFINISHED;
 4059              		.loc 1 2312 2 is_stmt 1 view .LVU1300
2312:src/keys.c    **** 	return STATE_UNFINISHED;
 4060              		.loc 1 2312 15 is_stmt 0 view .LVU1301
 4061 00e2 B4F8DC37 		ldrh	r3, [r4, #2012]
 4062 00e6 65F34B13 		bfi	r3, r5, #5, #7
 4063 00ea A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2313:src/keys.c    **** }
 4064              		.loc 1 2313 2 is_stmt 1 view .LVU1302
2313:src/keys.c    **** }
 4065              		.loc 1 2313 9 is_stmt 0 view .LVU1303
 4066 00ee 3320     		movs	r0, #51
 4067              	.L502:
2314:src/keys.c    **** 
 4068              		.loc 1 2314 1 view .LVU1304
 4069 00f0 05B0     		add	sp, sp, #20
 4070              		.cfi_remember_state
 4071              		.cfi_def_cfa_offset 36
 4072              		@ sp needed
 4073 00f2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4074              	.LVL311:
 4075              	.L491:
 4076              		.cfi_restore_state
2171:src/keys.c    **** #ifdef DM42
 4077              		.loc 1 2171 3 is_stmt 1 view .LVU1305
 4078 00f6 431F     		subs	r3, r0, #5
 4079 00f8 1F2B     		cmp	r3, #31
 4080 00fa 2FD8     		bhi	.L394
 4081 00fc DFE803F0 		tbb	[pc, r3]
 4082              	.LVL312:
 4083              	.L396:
ARM GAS  /tmp/cceb4mPP.s 			page 140


 4084 0100 35       		.byte	(.L400-.L396)/2
 4085 0101 2E       		.byte	(.L394-.L396)/2
 4086 0102 2E       		.byte	(.L394-.L396)/2
 4087 0103 2E       		.byte	(.L394-.L396)/2
 4088 0104 2E       		.byte	(.L394-.L396)/2
 4089 0105 2E       		.byte	(.L394-.L396)/2
 4090 0106 2E       		.byte	(.L394-.L396)/2
 4091 0107 35       		.byte	(.L400-.L396)/2
 4092 0108 2E       		.byte	(.L394-.L396)/2
 4093 0109 2E       		.byte	(.L394-.L396)/2
 4094 010a 2E       		.byte	(.L394-.L396)/2
 4095 010b 20       		.byte	(.L399-.L396)/2
 4096 010c 2E       		.byte	(.L394-.L396)/2
 4097 010d 64       		.byte	(.L398-.L396)/2
 4098 010e 2E       		.byte	(.L394-.L396)/2
 4099 010f 2E       		.byte	(.L394-.L396)/2
 4100 0110 2E       		.byte	(.L394-.L396)/2
 4101 0111 2E       		.byte	(.L394-.L396)/2
 4102 0112 2E       		.byte	(.L394-.L396)/2
 4103 0113 6B       		.byte	(.L397-.L396)/2
 4104 0114 2E       		.byte	(.L394-.L396)/2
 4105 0115 2E       		.byte	(.L394-.L396)/2
 4106 0116 2E       		.byte	(.L394-.L396)/2
 4107 0117 2E       		.byte	(.L394-.L396)/2
 4108 0118 2E       		.byte	(.L394-.L396)/2
 4109 0119 2E       		.byte	(.L394-.L396)/2
 4110 011a 2E       		.byte	(.L394-.L396)/2
 4111 011b 2E       		.byte	(.L394-.L396)/2
 4112 011c 2E       		.byte	(.L394-.L396)/2
 4113 011d 2E       		.byte	(.L394-.L396)/2
 4114 011e 2E       		.byte	(.L394-.L396)/2
 4115 011f 27       		.byte	(.L395-.L396)/2
 4116              		.p2align 1
 4117              	.L501:
2260:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4118              		.loc 1 2260 39 is_stmt 0 discriminator 1 view .LVU1306
 4119 0120 724A     		ldr	r2, .L506+16
 4120              	.LVL313:
2260:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4121              		.loc 1 2260 39 discriminator 1 view .LVU1307
 4122 0122 7369     		ldr	r3, [r6, #20]
2260:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4123              		.loc 1 2260 21 discriminator 1 view .LVU1308
 4124 0124 1A42     		tst	r2, r3
 4125 0126 75D0     		beq	.L425
2262:src/keys.c    **** 			return STATE_UNFINISHED;
 4126              		.loc 1 2262 4 is_stmt 1 view .LVU1309
2262:src/keys.c    **** 			return STATE_UNFINISHED;
 4127              		.loc 1 2262 34 is_stmt 0 view .LVU1310
 4128 0128 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 4129 012a C3F30012 		ubfx	r2, r3, #4, #1
2262:src/keys.c    **** 			return STATE_UNFINISHED;
 4130              		.loc 1 2262 26 view .LVU1311
 4131 012e C2F10102 		rsb	r2, r2, #1
2262:src/keys.c    **** 			return STATE_UNFINISHED;
 4132              		.loc 1 2262 22 view .LVU1312
 4133 0132 62F30413 		bfi	r3, r2, #4, #1
ARM GAS  /tmp/cceb4mPP.s 			page 141


 4134 0136 B375     		strb	r3, [r6, #22]
 4135              	.LVL314:
 4136              	.L490:
2263:src/keys.c    **** 		}
 4137              		.loc 1 2263 4 is_stmt 1 view .LVU1313
2263:src/keys.c    **** 		}
 4138              		.loc 1 2263 11 is_stmt 0 view .LVU1314
 4139 0138 3320     		movs	r0, #51
 4140              	.L392:
2314:src/keys.c    **** 
 4141              		.loc 1 2314 1 view .LVU1315
 4142 013a 05B0     		add	sp, sp, #20
 4143              		.cfi_remember_state
 4144              		.cfi_def_cfa_offset 36
 4145              		@ sp needed
 4146 013c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4147              	.LVL315:
 4148              	.L399:
 4149              		.cfi_restore_state
2200:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4150              		.loc 1 2200 7 is_stmt 1 view .LVU1316
2200:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4151              		.loc 1 2200 10 is_stmt 0 view .LVU1317
 4152 0140 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 4153 0142 23B1     		cbz	r3, .L395
2200:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4154              		.loc 1 2200 32 discriminator 1 view .LVU1318
 4155 0144 FFF7FEFF 		bl	keyticks
 4156              	.LVL316:
2200:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4157              		.loc 1 2200 29 discriminator 1 view .LVU1319
 4158 0148 1D28     		cmp	r0, #29
 4159 014a 40F39580 		ble	.L496
 4160              	.L395:
2210:src/keys.c    **** 			return STATE_UNFINISHED;
 4161              		.loc 1 2210 4 is_stmt 1 view .LVU1320
 4162 014e 0020     		movs	r0, #0
 4163 0150 FFF7FEFF 		bl	init_cat
 4164              	.LVL317:
2211:src/keys.c    **** 
 4165              		.loc 1 2211 4 view .LVU1321
2211:src/keys.c    **** 
 4166              		.loc 1 2211 11 is_stmt 0 view .LVU1322
 4167 0154 3320     		movs	r0, #51
2314:src/keys.c    **** 
 4168              		.loc 1 2314 1 view .LVU1323
 4169 0156 05B0     		add	sp, sp, #20
 4170              		.cfi_remember_state
 4171              		.cfi_def_cfa_offset 36
 4172              		@ sp needed
 4173 0158 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4174              	.LVL318:
 4175              	.L394:
 4176              		.cfi_restore_state
 4177              	.LBB425:
 4178              	.LBI400:
 384:src/keys.c    **** {
ARM GAS  /tmp/cceb4mPP.s 			page 142


 4179              		.loc 1 384 12 is_stmt 1 discriminator 4 view .LVU1324
 4180              	.LBB406:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4181              		.loc 1 386 2 discriminator 4 view .LVU1325
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4182              		.loc 1 434 2 discriminator 4 view .LVU1326
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4183              		.loc 1 434 6 is_stmt 0 discriminator 4 view .LVU1327
 4184 015c B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4185              		.loc 1 434 5 discriminator 4 view .LVU1328
 4186 015e 13F0100F 		tst	r3, #16
 4187 0162 14BF     		ite	ne
 4188 0164 0421     		movne	r1, #4
 4189              	.LVL319:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4190              		.loc 1 434 5 discriminator 4 view .LVU1329
 4191 0166 0021     		moveq	r1, #0
 4192 0168 64E7     		b	.L428
 4193              	.LVL320:
 4194              	.L400:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4195              		.loc 1 434 5 discriminator 4 view .LVU1330
 4196              	.LBE406:
 4197              	.LBE425:
2178:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4198              		.loc 1 2178 4 is_stmt 1 view .LVU1331
2178:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4199              		.loc 1 2178 7 is_stmt 0 view .LVU1332
 4200 016a 4545     		cmp	r5, r8
 4201 016c EFDA     		bge	.L395
 4202 016e 2846     		mov	r0, r5
 4203              	.LVL321:
2178:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4204              		.loc 1 2178 20 discriminator 1 view .LVU1333
 4205 0170 002F     		cmp	r7, #0
 4206 0172 00F08D80 		beq	.L497
 4207              	.LVL322:
 4208              	.LBB426:
 4209              	.LBI426:
2157:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4210              		.loc 1 2157 12 is_stmt 1 view .LVU1334
 4211              	.LBB427:
2158:src/keys.c    **** }
 4212              		.loc 1 2158 2 view .LVU1335
2158:src/keys.c    **** }
 4213              		.loc 1 2158 10 is_stmt 0 view .LVU1336
 4214 0176 FFF7FEFF 		bl	current_catalogue
 4215              	.LVL323:
2158:src/keys.c    **** }
 4216              		.loc 1 2158 33 view .LVU1337
 4217 017a 00F0F003 		and	r3, r0, #240
 4218              	.LBE427:
 4219              	.LBE426:
2178:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4220              		.loc 1 2178 23 view .LVU1338
 4221 017e F02B     		cmp	r3, #240
ARM GAS  /tmp/cceb4mPP.s 			page 143


 4222              	.LBB429:
 4223              	.LBB428:
2158:src/keys.c    **** }
 4224              		.loc 1 2158 10 view .LVU1339
 4225 0180 0446     		mov	r4, r0
 4226              	.LBE428:
 4227              	.LBE429:
2178:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4228              		.loc 1 2178 23 view .LVU1340
 4229 0182 E4D0     		beq	.L395
 4230              	.L403:
 4231              	.LBB430:
2179:src/keys.c    **** 
 4232              		.loc 1 2179 5 is_stmt 1 view .LVU1341
2181:src/keys.c    **** 
 4233              		.loc 1 2181 5 view .LVU1342
 4234 0184 0020     		movs	r0, #0
 4235 0186 FFF7FEFF 		bl	init_cat
 4236              	.LVL324:
2183:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4237              		.loc 1 2183 5 view .LVU1343
2183:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4238              		.loc 1 2183 8 is_stmt 0 view .LVU1344
 4239 018a 14F47043 		ands	r3, r4, #61440
 4240 018e 00F08C80 		beq	.L404
2183:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4241              		.loc 1 2183 9 discriminator 1 view .LVU1345
 4242 0192 B3F5704F 		cmp	r3, #61440
 4243 0196 00F08880 		beq	.L404
 4244              	.LBB431:
2184:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4245              		.loc 1 2184 6 is_stmt 1 view .LVU1346
2184:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4246              		.loc 1 2184 32 is_stmt 0 view .LVU1347
 4247 019a C4F30723 		ubfx	r3, r4, #8, #8
 4248 019e A3F12005 		sub	r5, r3, #32
 4249              	.LVL325:
2184:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4250              		.loc 1 2184 32 view .LVU1348
 4251 01a2 EDB2     		uxtb	r5, r5
 4252              	.LVL326:
2185:src/keys.c    **** 						return op;
 4253              		.loc 1 2185 6 is_stmt 1 view .LVU1349
2185:src/keys.c    **** 						return op;
 4254              		.loc 1 2185 9 is_stmt 0 view .LVU1350
 4255 01a4 012D     		cmp	r5, #1
 4256 01a6 40F28980 		bls	.L405
2185:src/keys.c    **** 						return op;
 4257              		.loc 1 2185 57 discriminator 1 view .LVU1351
 4258 01aa 6C2D     		cmp	r5, #108
 4259 01ac 00F08680 		beq	.L405
2185:src/keys.c    **** 						return op;
 4260              		.loc 1 2185 78 discriminator 2 view .LVU1352
 4261 01b0 242D     		cmp	r5, #36
 4262 01b2 00F08380 		beq	.L405
2187:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4263              		.loc 1 2187 6 is_stmt 1 view .LVU1353
ARM GAS  /tmp/cceb4mPP.s 			page 144


2187:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4264              		.loc 1 2187 31 is_stmt 0 view .LVU1354
 4265 01b6 A5F12D02 		sub	r2, r5, #45
2187:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4266              		.loc 1 2187 9 view .LVU1355
 4267 01ba 062A     		cmp	r2, #6
 4268 01bc 00F29E80 		bhi	.L408
2188:src/keys.c    **** 					else
 4269              		.loc 1 2188 7 is_stmt 1 view .LVU1356
2188:src/keys.c    **** 					else
 4270              		.loc 1 2188 28 is_stmt 0 view .LVU1357
 4271 01c0 4D3B     		subs	r3, r3, #77
2188:src/keys.c    **** 					else
 4272              		.loc 1 2188 19 view .LVU1358
 4273 01c2 F373     		strb	r3, [r6, #15]
 4274              	.LBE431:
 4275              	.LBE430:
2197:src/keys.c    **** 
 4276              		.loc 1 2197 11 view .LVU1359
 4277 01c4 3320     		movs	r0, #51
 4278              	.LBB441:
 4279              	.LBB434:
 4280 01c6 B8E7     		b	.L392
 4281              	.LVL327:
 4282              	.L398:
2197:src/keys.c    **** 
 4283              		.loc 1 2197 11 view .LVU1360
 4284              	.LBE434:
 4285              	.LBE441:
2214:src/keys.c    **** 			if (pos == 0)
 4286              		.loc 1 2214 4 is_stmt 1 view .LVU1361
2214:src/keys.c    **** 			if (pos == 0)
 4287              		.loc 1 2214 18 is_stmt 0 view .LVU1362
 4288 01c8 0023     		movs	r3, #0
 4289 01ca 3377     		strb	r3, [r6, #28]
2215:src/keys.c    **** 				goto set_max;
 4290              		.loc 1 2215 4 is_stmt 1 view .LVU1363
2215:src/keys.c    **** 				goto set_max;
 4291              		.loc 1 2215 7 is_stmt 0 view .LVU1364
 4292 01cc 002D     		cmp	r5, #0
 4293 01ce 5DD1     		bne	.L498
 4294              	.LVL328:
 4295              	.L412:
2308:src/keys.c    **** set_pos:
 4296              		.loc 1 2308 2 is_stmt 1 view .LVU1365
2308:src/keys.c    **** set_pos:
 4297              		.loc 1 2308 6 is_stmt 0 view .LVU1366
 4298 01d0 08F1FF35 		add	r5, r8, #-1
 4299              	.LVL329:
2308:src/keys.c    **** set_pos:
 4300              		.loc 1 2308 6 view .LVU1367
 4301 01d4 77E7     		b	.L413
 4302              	.LVL330:
 4303              	.L397:
2222:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4304              		.loc 1 2222 4 is_stmt 1 view .LVU1368
2222:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
ARM GAS  /tmp/cceb4mPP.s 			page 145


 4305              		.loc 1 2222 18 is_stmt 0 view .LVU1369
 4306 01d6 0023     		movs	r3, #0
 4307 01d8 3377     		strb	r3, [r6, #28]
2223:src/keys.c    **** 			if (pos >= ctmax)
 4308              		.loc 1 2223 4 is_stmt 1 view .LVU1370
2223:src/keys.c    **** 			if (pos >= ctmax)
 4309              		.loc 1 2223 10 is_stmt 0 view .LVU1371
 4310 01da 06E0     		b	.L416
 4311              	.LVL331:
 4312              	.L499:
2223:src/keys.c    **** 			if (pos >= ctmax)
 4313              		.loc 1 2223 25 discriminator 1 view .LVU1372
 4314 01dc 67B3     		cbz	r7, .L417
 4315              	.LBB442:
 4316              	.LBB443:
2158:src/keys.c    **** }
 4317              		.loc 1 2158 10 view .LVU1373
 4318 01de FFF7FEFF 		bl	current_catalogue
 4319              	.LVL332:
2158:src/keys.c    **** }
 4320              		.loc 1 2158 33 view .LVU1374
 4321 01e2 00F0F000 		and	r0, r0, #240
 4322              	.LBE443:
 4323              	.LBE442:
2223:src/keys.c    **** 			if (pos >= ctmax)
 4324              		.loc 1 2223 37 view .LVU1375
 4325 01e6 F028     		cmp	r0, #240
 4326 01e8 26D1     		bne	.L417
 4327              	.L416:
2223:src/keys.c    **** 			if (pos >= ctmax)
 4328              		.loc 1 2223 61 is_stmt 1 discriminator 3 view .LVU1376
2223:src/keys.c    **** 			if (pos >= ctmax)
 4329              		.loc 1 2223 10 discriminator 3 view .LVU1377
 4330 01ea 0135     		adds	r5, r5, #1
 4331              	.LVL333:
 4332              	.LBB446:
 4333              	.LBI442:
2157:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4334              		.loc 1 2157 12 discriminator 3 view .LVU1378
 4335              	.LBB444:
2158:src/keys.c    **** }
 4336              		.loc 1 2158 2 discriminator 3 view .LVU1379
 4337              	.LBE444:
 4338              	.LBE446:
2223:src/keys.c    **** 			if (pos >= ctmax)
 4339              		.loc 1 2223 10 is_stmt 0 discriminator 3 view .LVU1380
 4340 01ec A845     		cmp	r8, r5
 4341              	.LBB447:
 4342              	.LBB445:
2158:src/keys.c    **** }
 4343              		.loc 1 2158 10 discriminator 3 view .LVU1381
 4344 01ee 2846     		mov	r0, r5
 4345              	.LBE445:
 4346              	.LBE447:
2223:src/keys.c    **** 			if (pos >= ctmax)
 4347              		.loc 1 2223 10 discriminator 3 view .LVU1382
 4348 01f0 F4DC     		bgt	.L499
ARM GAS  /tmp/cceb4mPP.s 			page 146


 4349              	.LVL334:
2310:src/keys.c    **** 		--pos;
 4350              		.loc 1 2310 8 is_stmt 1 view .LVU1383
2225:src/keys.c    **** 			goto set_pos;
 4351              		.loc 1 2225 9 is_stmt 0 view .LVU1384
 4352 01f2 3D46     		mov	r5, r7
 4353              	.LVL335:
2310:src/keys.c    **** 		--pos;
 4354              		.loc 1 2310 8 view .LVU1385
 4355 01f4 07B3     		cbz	r7, .L417
 4356              	.LVL336:
2310:src/keys.c    **** 		--pos;
 4357              		.loc 1 2310 8 view .LVU1386
 4358 01f6 0025     		movs	r5, #0
 4359              	.LVL337:
2310:src/keys.c    **** 		--pos;
 4360              		.loc 1 2310 8 view .LVU1387
 4361 01f8 73E7     		b	.L411
 4362              	.LVL338:
 4363              	.L442:
2283:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 4364              		.loc 1 2283 6 view .LVU1388
 4365 01fa 2B46     		mov	r3, r5
2284:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4366              		.loc 1 2284 3 is_stmt 1 view .LVU1389
2284:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4367              		.loc 1 2284 28 is_stmt 0 view .LVU1390
 4368 01fc 3344     		add	r3, r3, r6
2284:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4369              		.loc 1 2284 24 view .LVU1391
 4370 01fe 0135     		adds	r5, r5, #1
 4371 0200 EDB2     		uxtb	r5, r5
 4372 0202 3577     		strb	r5, [r6, #28]
2284:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4373              		.loc 1 2284 28 view .LVU1392
 4374 0204 83F82040 		strb	r4, [r3, #32]
 4375 0208 30E7     		b	.L410
 4376              	.LVL339:
 4377              	.L492:
2232:src/keys.c    **** 			/*
 4378              		.loc 1 2232 3 is_stmt 1 view .LVU1393
2232:src/keys.c    **** 			/*
 4379              		.loc 1 2232 6 is_stmt 0 view .LVU1394
 4380 020a BAF1120F 		cmp	r10, #18
 4381 020e 21D0     		beq	.L500
 4382              	.L419:
2260:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4383              		.loc 1 2260 8 is_stmt 1 view .LVU1395
2260:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4384              		.loc 1 2260 11 is_stmt 0 view .LVU1396
 4385 0210 2428     		cmp	r0, #36
 4386 0212 85D0     		beq	.L501
 4387              	.LVL340:
 4388              	.L425:
2275:src/keys.c    **** 	reset_shift();
 4389              		.loc 1 2275 2 is_stmt 1 view .LVU1397
 4390              	.LBB448:
ARM GAS  /tmp/cceb4mPP.s 			page 147


 384:src/keys.c    **** {
 4391              		.loc 1 384 12 view .LVU1398
 4392              	.LBB407:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4393              		.loc 1 386 2 view .LVU1399
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4394              		.loc 1 434 2 view .LVU1400
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4395              		.loc 1 434 5 is_stmt 0 view .LVU1401
 4396 0214 0121     		movs	r1, #1
 4397              	.LVL341:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4398              		.loc 1 434 5 view .LVU1402
 4399 0216 0DE7     		b	.L428
 4400              	.LVL342:
 4401              	.L432:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4402              		.loc 1 434 5 view .LVU1403
 4403 0218 96F82030 		ldrb	r3, [r6, #32]	@ zero_extendqisi2
 4404              	.LVL343:
 4405              	.L434:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4406              		.loc 1 434 5 view .LVU1404
 4407              	.LBE407:
 4408              	.LBE448:
 4409              	.LBB449:
2304:src/keys.c    **** 			goto set_pos;
 4410              		.loc 1 2304 3 is_stmt 1 view .LVU1405
2304:src/keys.c    **** 			goto set_pos;
 4411              		.loc 1 2304 6 is_stmt 0 view .LVU1406
 4412 021c 002B     		cmp	r3, #0
 4413 021e 3FF450AF 		beq	.L433
 4414              	.LBE449:
2289:src/keys.c    **** 		char buf[16];
 4415              		.loc 1 2289 29 is_stmt 1 view .LVU1407
 4416 0222 0135     		adds	r5, r5, #1
 4417              	.LVL344:
2289:src/keys.c    **** 		char buf[16];
 4418              		.loc 1 2289 16 view .LVU1408
2289:src/keys.c    **** 		char buf[16];
 4419              		.loc 1 2289 2 is_stmt 0 view .LVU1409
 4420 0224 A845     		cmp	r8, r5
 4421 0226 7FF429AF 		bne	.L430
 4422              	.LVL345:
 4423              	.L488:
2289:src/keys.c    **** 		char buf[16];
 4424              		.loc 1 2289 2 view .LVU1410
 4425 022a D9F80040 		ldr	r4, [r9]
 4426 022e CFE7     		b	.L412
 4427              	.LVL346:
 4428              	.L494:
2289:src/keys.c    **** 		char buf[16];
 4429              		.loc 1 2289 2 view .LVU1411
 4430 0230 3244     		add	r2, r2, r6
 4431              	.LVL347:
2289:src/keys.c    **** 		char buf[16];
 4432              		.loc 1 2289 2 view .LVU1412
ARM GAS  /tmp/cceb4mPP.s 			page 148


 4433 0232 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4434              	.LVL348:
2289:src/keys.c    **** 		char buf[16];
 4435              		.loc 1 2289 2 view .LVU1413
 4436 0236 F1E7     		b	.L434
 4437              	.LVL349:
 4438              	.L417:
2312:src/keys.c    **** 	return STATE_UNFINISHED;
 4439              		.loc 1 2312 15 view .LVU1414
 4440 0238 B4F8DC37 		ldrh	r3, [r4, #2012]
 4441 023c 05F07F05 		and	r5, r5, #127
 4442              	.LVL350:
2312:src/keys.c    **** 	return STATE_UNFINISHED;
 4443              		.loc 1 2312 2 is_stmt 1 view .LVU1415
2312:src/keys.c    **** 	return STATE_UNFINISHED;
 4444              		.loc 1 2312 15 is_stmt 0 view .LVU1416
 4445 0240 65F34B13 		bfi	r3, r5, #5, #7
 4446 0244 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2313:src/keys.c    **** }
 4447              		.loc 1 2313 2 is_stmt 1 view .LVU1417
2313:src/keys.c    **** }
 4448              		.loc 1 2313 9 is_stmt 0 view .LVU1418
 4449 0248 3320     		movs	r0, #51
 4450 024a 51E7     		b	.L502
 4451              	.LVL351:
 4452              	.L493:
2266:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4453              		.loc 1 2266 3 is_stmt 1 view .LVU1419
2266:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4454              		.loc 1 2266 6 is_stmt 0 view .LVU1420
 4455 024c 1028     		cmp	r0, #16
 4456 024e 23D0     		beq	.L503
 4457              	.L427:
2275:src/keys.c    **** 	reset_shift();
 4458              		.loc 1 2275 2 is_stmt 1 view .LVU1421
 4459              	.LVL352:
 4460              	.LBB450:
 384:src/keys.c    **** {
 4461              		.loc 1 384 12 view .LVU1422
 4462              	.LBB408:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4463              		.loc 1 386 2 view .LVU1423
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4464              		.loc 1 434 2 view .LVU1424
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4465              		.loc 1 434 5 is_stmt 0 view .LVU1425
 4466 0250 0521     		movs	r1, #5
 4467              	.LVL353:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4468              		.loc 1 434 5 view .LVU1426
 4469 0252 EFE6     		b	.L428
 4470              	.LVL354:
 4471              	.L500:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4472              		.loc 1 434 5 view .LVU1427
 4473              	.LBE408:
 4474              	.LBE450:
ARM GAS  /tmp/cceb4mPP.s 			page 149


2232:src/keys.c    **** 			/*
 4475              		.loc 1 2232 29 discriminator 1 view .LVU1428
 4476 0254 0128     		cmp	r0, #1
 4477 0256 DBD1     		bne	.L419
 4478              	.LBB451:
2241:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4479              		.loc 1 2241 4 is_stmt 1 view .LVU1429
2249:src/keys.c    **** 			int i;
 4480              		.loc 1 2249 4 view .LVU1430
2249:src/keys.c    **** 			int i;
 4481              		.loc 1 2249 22 is_stmt 0 view .LVU1431
 4482 0258 2846     		mov	r0, r5
 4483              	.LVL355:
2249:src/keys.c    **** 			int i;
 4484              		.loc 1 2249 22 view .LVU1432
 4485 025a FFF7FEFF 		bl	current_catalogue
 4486              	.LVL356:
2249:src/keys.c    **** 			int i;
 4487              		.loc 1 2249 22 view .LVU1433
 4488 025e 0446     		mov	r4, r0
 4489              	.LVL357:
2250:src/keys.c    **** 
 4490              		.loc 1 2250 4 is_stmt 1 view .LVU1434
2252:src/keys.c    **** 			if (isRARG(op))
 4491              		.loc 1 2252 4 view .LVU1435
 4492 0260 0020     		movs	r0, #0
 4493              	.LVL358:
2252:src/keys.c    **** 			if (isRARG(op))
 4494              		.loc 1 2252 4 is_stmt 0 view .LVU1436
 4495 0262 FFF7FEFF 		bl	init_cat
 4496              	.LVL359:
2253:src/keys.c    **** 				return op ^ 1;
 4497              		.loc 1 2253 4 is_stmt 1 view .LVU1437
2253:src/keys.c    **** 				return op ^ 1;
 4498              		.loc 1 2253 7 is_stmt 0 view .LVU1438
 4499 0266 14F47043 		ands	r3, r4, #61440
 4500 026a 29D0     		beq	.L420
2253:src/keys.c    **** 				return op ^ 1;
 4501              		.loc 1 2253 8 discriminator 1 view .LVU1439
 4502 026c B3F5704F 		cmp	r3, #61440
 4503 0270 26D0     		beq	.L420
2254:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4504              		.loc 1 2254 5 is_stmt 1 view .LVU1440
2254:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4505              		.loc 1 2254 15 is_stmt 0 view .LVU1441
 4506 0272 84F00100 		eor	r0, r4, #1
 4507 0276 60E7     		b	.L392
 4508              	.LVL360:
 4509              	.L496:
2254:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4510              		.loc 1 2254 15 view .LVU1442
 4511              	.LBE451:
2201:src/keys.c    **** 					goto search;
 4512              		.loc 1 2201 9 is_stmt 1 view .LVU1443
2201:src/keys.c    **** 					goto search;
 4513              		.loc 1 2201 13 is_stmt 0 view .LVU1444
 4514 0278 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
ARM GAS  /tmp/cceb4mPP.s 			page 150


 4515              	.LVL361:
2201:src/keys.c    **** 					goto search;
 4516              		.loc 1 2201 13 view .LVU1445
 4517 027a 013D     		subs	r5, r5, #1
 4518 027c EDB2     		uxtb	r5, r5
2201:src/keys.c    **** 					goto search;
 4519              		.loc 1 2201 12 view .LVU1446
 4520 027e 3577     		strb	r5, [r6, #28]
 4521 0280 002D     		cmp	r5, #0
 4522 0282 7FF4F3AE 		bne	.L410
 4523 0286 D9F80040 		ldr	r4, [r9]
 4524 028a 2AE7     		b	.L411
 4525              	.LVL362:
 4526              	.L498:
2218:src/keys.c    **** 			goto set_pos;
 4527              		.loc 1 2218 5 is_stmt 1 view .LVU1447
 4528 028c 013D     		subs	r5, r5, #1
 4529              	.LVL363:
2219:src/keys.c    **** 
 4530              		.loc 1 2219 4 view .LVU1448
 4531 028e 1AE7     		b	.L413
 4532              	.LVL364:
 4533              	.L497:
2219:src/keys.c    **** 
 4534              		.loc 1 2219 4 is_stmt 0 view .LVU1449
 4535 0290 FFF7FEFF 		bl	current_catalogue
 4536              	.LVL365:
2219:src/keys.c    **** 
 4537              		.loc 1 2219 4 view .LVU1450
 4538 0294 0446     		mov	r4, r0
 4539 0296 75E7     		b	.L403
 4540              	.LVL366:
 4541              	.L503:
2266:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4542              		.loc 1 2266 16 discriminator 1 view .LVU1451
 4543 0298 BAF1130F 		cmp	r10, #19
 4544 029c D8D1     		bne	.L427
2267:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4545              		.loc 1 2267 4 is_stmt 1 view .LVU1452
 4546 029e 0020     		movs	r0, #0
 4547              	.LVL367:
2267:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4548              		.loc 1 2267 4 is_stmt 0 view .LVU1453
 4549 02a0 FFF7FEFF 		bl	init_cat
 4550              	.LVL368:
2268:src/keys.c    **** 		}
 4551              		.loc 1 2268 4 is_stmt 1 view .LVU1454
2268:src/keys.c    **** 		}
 4552              		.loc 1 2268 11 is_stmt 0 view .LVU1455
 4553 02a4 40F23D10 		movw	r0, #317
 4554 02a8 47E7     		b	.L392
 4555              	.L404:
 4556              	.LBB452:
2193:src/keys.c    **** 				}
 4557              		.loc 1 2193 6 is_stmt 1 view .LVU1456
 4558              	.LBB435:
 4559              	.LBB436:
ARM GAS  /tmp/cceb4mPP.s 			page 151


 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4560              		.loc 1 620 5 is_stmt 0 view .LVU1457
 4561 02aa C4F30723 		ubfx	r3, r4, #8, #8
 4562 02ae 012B     		cmp	r3, #1
 4563              	.LBE436:
 4564              	.LBE435:
2193:src/keys.c    **** 				}
 4565              		.loc 1 2193 13 view .LVU1458
 4566 02b0 2046     		mov	r0, r4
 4567              	.LVL369:
 4568              	.LBB438:
 4569              	.LBI435:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4570              		.loc 1 619 12 is_stmt 1 view .LVU1459
 4571              	.LBB437:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4572              		.loc 1 620 2 view .LVU1460
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4573              		.loc 1 620 5 is_stmt 0 view .LVU1461
 4574 02b2 7FF442AF 		bne	.L392
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4575              		.loc 1 620 5 view .LVU1462
 4576 02b6 FFF7FEFF 		bl	check_confirm.part.0
 4577              	.LVL370:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4578              		.loc 1 620 5 view .LVU1463
 4579 02ba 3EE7     		b	.L392
 4580              	.LVL371:
 4581              	.L405:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4582              		.loc 1 620 5 view .LVU1464
 4583              	.LBE437:
 4584              	.LBE438:
 4585              	.LBB439:
2186:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4586              		.loc 1 2186 7 is_stmt 1 view .LVU1465
2186:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4587              		.loc 1 2186 14 is_stmt 0 view .LVU1466
 4588 02bc 2046     		mov	r0, r4
 4589 02be 3CE7     		b	.L392
 4590              	.LVL372:
 4591              	.L420:
2186:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4592              		.loc 1 2186 14 view .LVU1467
 4593 02c0 0B48     		ldr	r0, .L506+20
 4594              	.LBE439:
 4595              	.LBE452:
2164:src/keys.c    **** 	int pos = State.catpos;
 4596              		.loc 1 2164 92 view .LVU1468
 4597 02c2 40F28522 		movw	r2, #645
 4598 02c6 0146     		mov	r1, r0
 4599 02c8 0023     		movs	r3, #0
 4600 02ca 01E0     		b	.L422
 4601              	.LVL373:
 4602              	.L505:
2164:src/keys.c    **** 	int pos = State.catpos;
 4603              		.loc 1 2164 92 view .LVU1469
ARM GAS  /tmp/cceb4mPP.s 			page 152


 4604 02cc 31F8022F 		ldrh	r2, [r1, #2]!
 4605              	.LVL374:
 4606              	.L422:
 4607              	.LBB453:
2256:src/keys.c    **** 					return conv_mapping[i^1];
 4608              		.loc 1 2256 5 is_stmt 1 view .LVU1470
2255:src/keys.c    **** 				if (op == conv_mapping[i])
 4609              		.loc 1 2255 68 view .LVU1471
2256:src/keys.c    **** 					return conv_mapping[i^1];
 4610              		.loc 1 2256 8 is_stmt 0 view .LVU1472
 4611 02d0 A242     		cmp	r2, r4
 4612 02d2 1DD0     		beq	.L504
2255:src/keys.c    **** 				if (op == conv_mapping[i])
 4613              		.loc 1 2255 68 discriminator 2 view .LVU1473
 4614 02d4 0133     		adds	r3, r3, #1
 4615              	.LVL375:
2255:src/keys.c    **** 				if (op == conv_mapping[i])
 4616              		.loc 1 2255 16 is_stmt 1 discriminator 2 view .LVU1474
2255:src/keys.c    **** 				if (op == conv_mapping[i])
 4617              		.loc 1 2255 4 is_stmt 0 discriminator 2 view .LVU1475
 4618 02d6 0C2B     		cmp	r3, #12
 4619 02d8 F8D1     		bne	.L505
 4620 02da 2DE7     		b	.L490
 4621              	.L507:
 4622              		.align	2
 4623              	.L506:
 4624 02dc 00000000 		.word	StateWhileOn
 4625 02e0 00000000 		.word	.LANCHOR2
 4626 02e4 00000000 		.word	.LANCHOR1
 4627 02e8 00000000 		.word	.LANCHOR9
 4628 02ec 00080800 		.word	526336
 4629 02f0 00000000 		.word	.LANCHOR8
 4630 02f4 00000000 		.word	main_ram
 4631 02f8 1F000000 		.word	StateWhileOn+31
 4632              	.LVL376:
 4633              	.L408:
2255:src/keys.c    **** 				if (op == conv_mapping[i])
 4634              		.loc 1 2255 4 discriminator 2 view .LVU1476
 4635              	.LBE453:
 4636              	.LBB454:
 4637              	.LBB440:
2190:src/keys.c    **** 				}
 4638              		.loc 1 2190 7 is_stmt 1 view .LVU1477
 4639              	.LBB432:
 4640              	.LBI432:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 4641              		.loc 1 501 13 view .LVU1478
 4642              	.LBB433:
 502:src/keys.c    **** 		return;
 4643              		.loc 1 502 2 view .LVU1479
 502:src/keys.c    **** 		return;
 4644              		.loc 1 502 6 is_stmt 0 view .LVU1480
 4645 02fc FFF7FEFF 		bl	is_bad_cmdline
 4646              	.LVL377:
 502:src/keys.c    **** 		return;
 4647              		.loc 1 502 5 view .LVU1481
 4648 0300 0028     		cmp	r0, #0
ARM GAS  /tmp/cceb4mPP.s 			page 153


 4649 0302 7FF419AF 		bne	.L490
 4650 0306 2846     		mov	r0, r5
 4651 0308 FFF7FEFF 		bl	init_arg.part.0
 4652              	.LVL378:
 4653              	.LBE433:
 4654              	.LBE432:
 4655              	.LBE440:
 4656              	.LBE454:
2197:src/keys.c    **** 
 4657              		.loc 1 2197 11 view .LVU1482
 4658 030c 3320     		movs	r0, #51
 4659 030e 14E7     		b	.L392
 4660              	.LVL379:
 4661              	.L504:
 4662              	.LBB455:
2257:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4663              		.loc 1 2257 6 is_stmt 1 view .LVU1483
2257:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4664              		.loc 1 2257 27 is_stmt 0 view .LVU1484
 4665 0310 83F00103 		eor	r3, r3, #1
 4666              	.LVL380:
2257:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4667              		.loc 1 2257 25 view .LVU1485
 4668 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4669 0318 0FE7     		b	.L392
 4670              	.LBE455:
 4671              		.cfi_endproc
 4672              	.LFE43:
 4674 031a 00BF     		.section	.text.find_pos,"ax",%progbits
 4675              		.align	1
 4676              		.p2align 2,,3
 4677              		.global	find_pos
 4678              		.syntax unified
 4679              		.thumb
 4680              		.thumb_func
 4681              		.fpu fpv4-sp-d16
 4683              	find_pos:
 4684              	.LVL381:
 4685              	.LFB44:
2317:src/keys.c    **** 	int pos;
 4686              		.loc 1 2317 32 is_stmt 1 view -0
 4687              		.cfi_startproc
 4688              		@ args = 0, pretend = 0, frame = 16
 4689              		@ frame_needed = 0, uses_anonymous_args = 0
2318:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4690              		.loc 1 2318 2 view .LVU1487
2319:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4691              		.loc 1 2319 2 view .LVU1488
 4692              	.LBB456:
 4693              	.LBI456:
2019:src/keys.c    **** 	// A quick table of catalogue sizes
 4694              		.loc 1 2019 5 view .LVU1489
 4695              	.LBB457:
2022:src/keys.c    **** 	{
 4696              		.loc 1 2022 2 view .LVU1490
2053:src/keys.c    **** #endif
 4697              		.loc 1 2053 2 view .LVU1491
ARM GAS  /tmp/cceb4mPP.s 			page 154


 4698              	.LBE457:
 4699              	.LBE456:
2317:src/keys.c    **** 	int pos;
 4700              		.loc 1 2317 32 is_stmt 0 view .LVU1492
 4701 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4702              		.cfi_def_cfa_offset 32
 4703              		.cfi_offset 4, -32
 4704              		.cfi_offset 5, -28
 4705              		.cfi_offset 6, -24
 4706              		.cfi_offset 7, -20
 4707              		.cfi_offset 8, -16
 4708              		.cfi_offset 9, -12
 4709              		.cfi_offset 10, -8
 4710              		.cfi_offset 14, -4
 4711              	.LBB459:
 4712              	.LBB458:
2053:src/keys.c    **** #endif
 4713              		.loc 1 2053 31 view .LVU1493
 4714 0004 1E4B     		ldr	r3, .L525
2053:src/keys.c    **** #endif
 4715              		.loc 1 2053 24 view .LVU1494
 4716 0006 1F4A     		ldr	r2, .L525+4
2053:src/keys.c    **** #endif
 4717              		.loc 1 2053 31 view .LVU1495
 4718 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2053:src/keys.c    **** #endif
 4719              		.loc 1 2053 24 view .LVU1496
 4720 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4721              	.LVL382:
2053:src/keys.c    **** #endif
 4722              		.loc 1 2053 24 view .LVU1497
 4723              	.LBE458:
 4724              	.LBE459:
2320:src/keys.c    **** 		char buf[16];
 4725              		.loc 1 2320 2 is_stmt 1 view .LVU1498
2320:src/keys.c    **** 		char buf[16];
 4726              		.loc 1 2320 16 view .LVU1499
2317:src/keys.c    **** 	int pos;
 4727              		.loc 1 2317 32 is_stmt 0 view .LVU1500
 4728 000e 84B0     		sub	sp, sp, #16
 4729              		.cfi_def_cfa_offset 48
2320:src/keys.c    **** 		char buf[16];
 4730              		.loc 1 2320 2 view .LVU1501
 4731 0010 BAF1000F 		cmp	r10, #0
 4732 0014 32D0     		beq	.L515
 4733 0016 8146     		mov	r9, r0
2320:src/keys.c    **** 		char buf[16];
 4734              		.loc 1 2320 11 view .LVU1502
 4735 0018 4FF00008 		mov	r8, #0
 4736 001c C0F10107 		rsb	r7, r0, #1
 4737              	.LVL383:
 4738              	.L514:
 4739              	.LBB460:
2321:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4740              		.loc 1 2321 3 is_stmt 1 view .LVU1503
2322:src/keys.c    **** 		int i;
 4741              		.loc 1 2322 3 view .LVU1504
ARM GAS  /tmp/cceb4mPP.s 			page 155


2322:src/keys.c    **** 		int i;
 4742              		.loc 1 2322 21 is_stmt 0 view .LVU1505
 4743 0020 4046     		mov	r0, r8
 4744 0022 FFF7FEFF 		bl	current_catalogue
 4745              	.LVL384:
 4746 0026 6946     		mov	r1, sp
 4747 0028 FFF7FEFF 		bl	catcmd
 4748              	.LVL385:
 4749 002c 0646     		mov	r6, r0
 4750              	.LVL386:
2323:src/keys.c    **** 
 4751              		.loc 1 2323 3 is_stmt 1 view .LVU1506
2325:src/keys.c    **** 			cmd++;
 4752              		.loc 1 2325 3 view .LVU1507
2326:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4753              		.loc 1 2326 4 view .LVU1508
2325:src/keys.c    **** 			cmd++;
 4754              		.loc 1 2325 7 is_stmt 0 view .LVU1509
 4755 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4756              	.LVL387:
2325:src/keys.c    **** 			cmd++;
 4757              		.loc 1 2325 6 view .LVU1510
 4758 0030 1428     		cmp	r0, #20
 4759 0032 04BF     		itt	eq
 4760 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2326:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4761              		.loc 1 2326 7 view .LVU1511
 4762 0036 0136     		addeq	r6, r6, #1
 4763              	.LVL388:
2327:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4764              		.loc 1 2327 3 is_stmt 1 view .LVU1512
2327:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4765              		.loc 1 2327 13 view .LVU1513
2327:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4766              		.loc 1 2327 3 is_stmt 0 view .LVU1514
 4767 0038 A8B1     		cbz	r0, .L516
 4768 003a 09F1FF33 		add	r3, r9, #-1
 4769 003e 04E0     		b	.L513
 4770              	.LVL389:
 4771              	.L524:
 4772              	.LBB461:
2332:src/keys.c    **** 				break;
 4773              		.loc 1 2332 12 view .LVU1515
 4774 0040 12DB     		blt	.L511
 4775              	.LBE461:
2327:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4776              		.loc 1 2327 16 discriminator 2 view .LVU1516
 4777 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4778              	.LVL390:
2327:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4779              		.loc 1 2327 16 discriminator 2 view .LVU1517
 4780 0046 3C44     		add	r4, r4, r7
2327:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4781              		.loc 1 2327 3 discriminator 2 view .LVU1518
 4782 0048 B0B1     		cbz	r0, .L523
 4783              	.LVL391:
 4784              	.L513:
ARM GAS  /tmp/cceb4mPP.s 			page 156


 4785              	.LBB462:
2328:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4786              		.loc 1 2328 4 is_stmt 1 view .LVU1519
 4787 004a 5C1C     		adds	r4, r3, #1
2328:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4788              		.loc 1 2328 18 is_stmt 0 view .LVU1520
 4789 004c FFF7FEFF 		bl	remap_chars
 4790              	.LVL392:
 4791 0050 0546     		mov	r5, r0
2329:src/keys.c    **** 			if (c > cl)
 4792              		.loc 1 2329 19 view .LVU1521
 4793 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4794              	.LVL393:
2329:src/keys.c    **** 			if (c > cl)
 4795              		.loc 1 2329 4 is_stmt 1 view .LVU1522
2329:src/keys.c    **** 			if (c > cl)
 4796              		.loc 1 2329 19 is_stmt 0 view .LVU1523
 4797 0054 FFF7FEFF 		bl	remap_chars
 4798              	.LVL394:
2332:src/keys.c    **** 				break;
 4799              		.loc 1 2332 9 is_stmt 1 view .LVU1524
 4800              	.LBE462:
2327:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4801              		.loc 1 2327 29 view .LVU1525
2327:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4802              		.loc 1 2327 13 view .LVU1526
 4803              	.LBB463:
2330:src/keys.c    **** 				return pos;
 4804              		.loc 1 2330 4 view .LVU1527
2330:src/keys.c    **** 				return pos;
 4805              		.loc 1 2330 7 is_stmt 0 view .LVU1528
 4806 0058 8542     		cmp	r5, r0
 4807 005a 2346     		mov	r3, r4
 4808 005c F0DD     		ble	.L524
 4809              	.LVL395:
 4810              	.L508:
2330:src/keys.c    **** 				return pos;
 4811              		.loc 1 2330 7 view .LVU1529
 4812              	.LBE463:
 4813              	.LBE460:
2339:src/keys.c    **** 
 4814              		.loc 1 2339 1 view .LVU1530
 4815 005e 4046     		mov	r0, r8
 4816 0060 04B0     		add	sp, sp, #16
 4817              		.cfi_remember_state
 4818              		.cfi_def_cfa_offset 32
 4819              		@ sp needed
 4820 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4821              	.LVL396:
 4822              	.L516:
 4823              		.cfi_restore_state
 4824              	.LBB464:
2327:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4825              		.loc 1 2327 3 view .LVU1531
 4826 0066 4C46     		mov	r4, r9
 4827              	.LVL397:
 4828              	.L511:
ARM GAS  /tmp/cceb4mPP.s 			page 157


2335:src/keys.c    **** 			return pos;
 4829              		.loc 1 2335 3 is_stmt 1 view .LVU1532
2335:src/keys.c    **** 			return pos;
 4830              		.loc 1 2335 6 is_stmt 0 view .LVU1533
 4831 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4832 006a 002B     		cmp	r3, #0
 4833 006c F7D0     		beq	.L508
 4834              	.LBE464:
2320:src/keys.c    **** 		char buf[16];
 4835              		.loc 1 2320 29 is_stmt 1 view .LVU1534
 4836 006e 08F10108 		add	r8, r8, #1
 4837              	.LVL398:
2320:src/keys.c    **** 		char buf[16];
 4838              		.loc 1 2320 16 view .LVU1535
2320:src/keys.c    **** 		char buf[16];
 4839              		.loc 1 2320 2 is_stmt 0 view .LVU1536
 4840 0072 D045     		cmp	r8, r10
 4841 0074 D4D1     		bne	.L514
 4842 0076 F2E7     		b	.L508
 4843              	.LVL399:
 4844              	.L523:
2320:src/keys.c    **** 		char buf[16];
 4845              		.loc 1 2320 2 view .LVU1537
 4846 0078 4C44     		add	r4, r4, r9
 4847 007a F5E7     		b	.L511
 4848              	.LVL400:
 4849              	.L515:
2320:src/keys.c    **** 		char buf[16];
 4850              		.loc 1 2320 11 view .LVU1538
 4851 007c D046     		mov	r8, r10
 4852 007e EEE7     		b	.L508
 4853              	.L526:
 4854              		.align	2
 4855              	.L525:
 4856 0080 00000000 		.word	StateWhileOn
 4857 0084 00000000 		.word	.LANCHOR2
 4858              		.cfi_endproc
 4859              	.LFE44:
 4861              		.section	.text.get_alpha_state,"ax",%progbits
 4862              		.align	1
 4863              		.p2align 2,,3
 4864              		.global	get_alpha_state
 4865              		.syntax unified
 4866              		.thumb
 4867              		.thumb_func
 4868              		.fpu fpv4-sp-d16
 4870              	get_alpha_state:
 4871              	.LFB56:
2664:src/keys.c    **** 
2665:src/keys.c    **** 
2666:src/keys.c    **** static int process_registerlist(const keycode c) {
2667:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2668:src/keys.c    **** 	enum shifts shift = reset_shift();
2669:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2670:src/keys.c    **** 	const int g_max = global_regs();
2671:src/keys.c    **** 
2672:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
ARM GAS  /tmp/cceb4mPP.s 			page 158


2673:src/keys.c    **** 		if (local_regs())
2674:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2675:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2676:src/keys.c    **** 		goto reset_window;
2677:src/keys.c    **** 	}
2678:src/keys.c    **** 	else if (n <= 9) {
2679:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2680:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2681:src/keys.c    **** 			dv = n;
2682:src/keys.c    **** 		State2.digval = dv;
2683:src/keys.c    **** 		goto reset_window;
2684:src/keys.c    **** 	}
2685:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2686:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2687:src/keys.c    **** 		set_smode(SDISP_SHOW);
2688:src/keys.c    **** 	}
2689:src/keys.c    **** 	else if (n != NO_REG) {
2690:src/keys.c    **** 		State2.digval = n;
2691:src/keys.c    **** 		goto reset_window;
2692:src/keys.c    **** 	}
2693:src/keys.c    **** 
2694:src/keys.c    **** 	switch (c) {
2695:src/keys.c    **** 	case K_DOWN:
2696:src/keys.c    **** 		if (State2.digval > 0) {
2697:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2698:src/keys.c    **** 				State2.digval = global_regs();
2699:src/keys.c    **** 			--State2.digval;
2700:src/keys.c    **** 		}
2701:src/keys.c    **** 		else
2702:src/keys.c    **** 			State2.digval = max - 1;
2703:src/keys.c    **** 		goto reset_window;
2704:src/keys.c    **** 
2705:src/keys.c    **** 	case K_UP:
2706:src/keys.c    **** 		if (State2.digval < max - 1) {
2707:src/keys.c    **** 			State2.digval++;
2708:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2709:src/keys.c    **** 				State2.digval = regX_idx;
2710:src/keys.c    **** 		}
2711:src/keys.c    **** 		else	
2712:src/keys.c    **** 			State2.digval = 0;
2713:src/keys.c    **** 		goto reset_window;
2714:src/keys.c    **** 
2715:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2716:src/keys.c    **** 	case K04:
2717:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2718:src/keys.c    **** 		goto reset_window;
2719:src/keys.c    **** #endif
2720:src/keys.c    **** 
2721:src/keys.c    **** 	case K24:			
2722:src/keys.c    **** 	//case K60:
2723:src/keys.c    **** 		if (State2.disp_temp)
2724:src/keys.c    **** 			return STATE_UNFINISHED;
2725:src/keys.c    **** 		break;		// Exit doing nothing
2726:src/keys.c    **** 
2727:src/keys.c    **** 	case K20:		// ENTER
2728:src/keys.c    **** 		if (shift == SHIFT_F) {
2729:src/keys.c    **** 			State2.disp_as_alpha = 1;
ARM GAS  /tmp/cceb4mPP.s 			page 159


2730:src/keys.c    **** 			goto reset_window;
2731:src/keys.c    **** 		}
2732:src/keys.c    **** 	case K11:		// RCL
2733:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2734:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2735:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2736:src/keys.c    **** #else
2737:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2738:src/keys.c    **** #endif
2739:src/keys.c    **** 			State2.registerlist = 0;
2740:src/keys.c    **** 			State2.digval = 0;
2741:src/keys.c    **** 			State2.digval2 = 0;
2742:src/keys.c    **** 			return n;
2743:src/keys.c    **** 		}
2744:src/keys.c    **** 	default:
2745:src/keys.c    **** 		return STATE_UNFINISHED;
2746:src/keys.c    **** 	}
2747:src/keys.c    **** 	State2.registerlist = 0;
2748:src/keys.c    **** 	State2.digval = 0;
2749:src/keys.c    **** 	State2.digval2 = 0;
2750:src/keys.c    **** reset_window:
2751:src/keys.c    **** 	State2.window = 0;
2752:src/keys.c    **** 	return STATE_UNFINISHED;
2753:src/keys.c    **** }
2754:src/keys.c    **** 
2755:src/keys.c    **** 
2756:src/keys.c    **** static int process(const int c) {
2757:src/keys.c    ****   const enum shifts shift = cur_shift();
2758:src/keys.c    ****   enum catalogues cat;
2759:src/keys.c    **** 
2760:src/keys.c    ****   if (Running || Pause) {
2761:src/keys.c    ****     /*
2762:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2763:src/keys.c    ****      */
2764:src/keys.c    ****     if (c == K60 || c == K63) {
2765:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2766:src/keys.c    **** 	set_pc(0);
2767:src/keys.c    ****       Pause = 0;
2768:src/keys.c    ****       xeq_xrom();
2769:src/keys.c    ****       set_running_off();
2770:src/keys.c    ****       DispMsg = "Stopped";
2771:src/keys.c    ****       State2.disp_freeze = 0;
2772:src/keys.c    ****       return STATE_UNFINISHED;
2773:src/keys.c    ****     }
2774:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2775:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2776:src/keys.c    ****       Pause = 0;			// leave PSE statement
2777:src/keys.c    ****       GoFast = 1;
2778:src/keys.c    ****     }
2779:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2780:src/keys.c    ****     return STATE_RUNNING;
2781:src/keys.c    ****   }
2782:src/keys.c    **** 
2783:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2784:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2785:src/keys.c    ****    * if required.
2786:src/keys.c    ****    */
ARM GAS  /tmp/cceb4mPP.s 			page 160


2787:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue) {
2788:src/keys.c    ****     soft_init_state();
2789:src/keys.c    ****     return STATE_UNFINISHED;
2790:src/keys.c    ****   }
2791:src/keys.c    **** 
2792:src/keys.c    **** #ifndef CONSOLE
2793:src/keys.c    **** 	if (c == K63 && JustStopped) {
2794:src/keys.c    **** 		// Avoid an accidental restart with R/S
2795:src/keys.c    **** 		JustStopped = 0;
2796:src/keys.c    **** 		return STATE_IGNORE;
2797:src/keys.c    **** 	}
2798:src/keys.c    **** #endif
2799:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2800:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2801:src/keys.c    **** 	 */
2802:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2803:src/keys.c    **** 		CmdLineLength = 0;
2804:src/keys.c    **** 	/*
2805:src/keys.c    **** 	 *  Process the various cases
2806:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2807:src/keys.c    **** 	 */
2808:src/keys.c    **** 	if (State2.confirm)
2809:src/keys.c    **** 		return process_confirm((const keycode)c);
2810:src/keys.c    **** 
2811:src/keys.c    **** 	if (State2.rarg)
2812:src/keys.c    **** 		return process_arg((const keycode)c);
2813:src/keys.c    **** 
2814:src/keys.c    **** 	if (State2.gtodot)
2815:src/keys.c    **** 		return process_gtodot((const keycode)c);
2816:src/keys.c    **** 
2817:src/keys.c    **** 	if (State2.hyp)
2818:src/keys.c    **** 		return process_hyp((const keycode)c);
2819:src/keys.c    **** 
2820:src/keys.c    **** 	if (State2.test != TST_NONE)
2821:src/keys.c    **** 		return process_test((const keycode)c);
2822:src/keys.c    **** 
2823:src/keys.c    **** 	if (State2.status)
2824:src/keys.c    **** 		return process_status((const keycode)c);
2825:src/keys.c    **** 
2826:src/keys.c    **** 	/*
2827:src/keys.c    **** 	 *  Process shift keys directly
2828:src/keys.c    **** 	 */
2829:src/keys.c    **** 	if (c == K_F) {
2830:src/keys.c    **** 		toggle_shift(SHIFT_F);
2831:src/keys.c    **** 		return STATE_UNFINISHED;
2832:src/keys.c    **** 	}
2833:src/keys.c    **** 	if (c == K_G) {
2834:src/keys.c    **** 		toggle_shift(SHIFT_G);
2835:src/keys.c    **** 		return STATE_UNFINISHED;
2836:src/keys.c    **** 	}
2837:src/keys.c    **** 	if (c == K_H) {
2838:src/keys.c    **** 		toggle_shift(SHIFT_H);
2839:src/keys.c    **** 		State2.arrow = 0;
2840:src/keys.c    **** 		return STATE_UNFINISHED;
2841:src/keys.c    **** 	}
2842:src/keys.c    **** 	/*
2843:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
ARM GAS  /tmp/cceb4mPP.s 			page 161


2844:src/keys.c    **** 	 */
2845:src/keys.c    **** 	// print_debug (2, c);
2846:src/keys.c    **** 	if (State2.arrow)
2847:src/keys.c    **** 		return process_arrow((const keycode)c);
2848:src/keys.c    **** 
2849:src/keys.c    **** 	/*
2850:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2851:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2852:src/keys.c    **** 	 * works and were not
2853:src/keys.c    **** 	 */
2854:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2855:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2856:src/keys.c    **** 		if (is_bad_cmdline())
2857:src/keys.c    **** 			return STATE_UNFINISHED;
2858:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2859:src/keys.c    **** 		init_cat( cat );
2860:src/keys.c    **** 		return STATE_UNFINISHED;
2861:src/keys.c    **** 	}
2862:src/keys.c    **** 
2863:src/keys.c    **** 	/*
2864:src/keys.c    **** 	 *  More handlers...
2865:src/keys.c    **** 	 */
2866:src/keys.c    **** 	if (State2.multi)
2867:src/keys.c    **** 		return process_multi((const keycode)c);
2868:src/keys.c    **** 
2869:src/keys.c    **** 	if (State2.labellist)
2870:src/keys.c    **** 		return process_labellist((const keycode)c);
2871:src/keys.c    **** 
2872:src/keys.c    **** 	if (State2.registerlist)
2873:src/keys.c    **** 		return process_registerlist((const keycode)c);
2874:src/keys.c    **** 
2875:src/keys.c    **** 	if (State2.catalogue)
2876:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2877:src/keys.c    **** 
2878:src/keys.c    **** 	if (State2.alphas) {
2879:src/keys.c    **** #ifndef INFRARED
2880:src/keys.c    **** 		return process_alpha((const keycode)c);
2881:src/keys.c    **** #else
2882:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2883:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2884:src/keys.c    **** 			print_tab(0);
2885:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2886:src/keys.c    **** 		}
2887:src/keys.c    **** 		return i;
2888:src/keys.c    **** #endif
2889:src/keys.c    **** 	}
2890:src/keys.c    **** 
2891:src/keys.c    **** 	if (State2.cmplx) {
2892:src/keys.c    **** 		return process_cmplx((const keycode)c);
2893:src/keys.c    **** 	} else {
2894:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2895:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2896:src/keys.c    **** 		if (shift == SHIFT_H)
2897:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2898:src/keys.c    **** 		// print_debug (3, c);
2899:src/keys.c    **** 		return process_normal((const keycode)c);
2900:src/keys.c    **** 	}
ARM GAS  /tmp/cceb4mPP.s 			page 162


2901:src/keys.c    **** }
2902:src/keys.c    **** 
2903:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4872              		.loc 1 2903 40 is_stmt 1 view -0
 4873              		.cfi_startproc
 4874              		@ args = 0, pretend = 0, frame = 0
 4875              		@ frame_needed = 0, uses_anonymous_args = 0
 4876              		@ link register save eliminated.
2904:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4877              		.loc 1 2904 4 view .LVU1540
 4878              		.loc 1 2904 53 is_stmt 0 view .LVU1541
 4879 0000 074B     		ldr	r3, .L532
 4880              		.loc 1 2904 44 view .LVU1542
 4881 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4882 0004 1AB9     		cbnz	r2, .L530
2905:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2906:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE) );
 4883              		.loc 1 2906 5 discriminator 2 view .LVU1543
 4884 0006 5969     		ldr	r1, [r3, #20]
 4885 0008 064A     		ldr	r2, .L532+4
 4886 000a 0A40     		ands	r2, r2, r1
 4887 000c 0AB1     		cbz	r2, .L531
 4888              	.L530:
 4889 000e 0120     		movs	r0, #1
2907:src/keys.c    ****  }
 4890              		.loc 1 2907 2 view .LVU1544
 4891 0010 7047     		bx	lr
 4892              	.L531:
2906:src/keys.c    ****  }
 4893              		.loc 1 2906 42 discriminator 3 view .LVU1545
 4894 0012 D889     		ldrh	r0, [r3, #14]
 4895 0014 B0F5E060 		subs	r0, r0, #1792
 4896 0018 18BF     		it	ne
 4897 001a 0120     		movne	r0, #1
 4898 001c 7047     		bx	lr
 4899              	.L533:
 4900 001e 00BF     		.align	2
 4901              	.L532:
 4902 0020 00000000 		.word	StateWhileOn
 4903 0024 0709280C 		.word	203950343
 4904              		.cfi_endproc
 4905              	.LFE56:
 4907              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4908              		.align	2
 4909              	.LC0:
 4910 0000 52554E00 		.ascii	"RUN\000"
 4911              		.align	2
 4912              	.LC1:
 4913 0004 4E554C4C 		.ascii	"NULL\000"
 4913      00
 4914 0009 000000   		.align	2
 4915              	.LC2:
 4916 000c 53746F70 		.ascii	"Stopped\000"
 4916      70656400 
 4917              		.section	.text.process_keycode,"ax",%progbits
 4918              		.align	1
 4919              		.p2align 2,,3
ARM GAS  /tmp/cceb4mPP.s 			page 163


 4920              		.global	process_keycode
 4921              		.syntax unified
 4922              		.thumb
 4923              		.thumb_func
 4924              		.fpu fpv4-sp-d16
 4926              	process_keycode:
 4927              	.LVL401:
 4928              	.LFB58:
2908:src/keys.c    **** 
2909:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2910:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
2911:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
2912:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
2913:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
2914:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
2915:src/keys.c    ****        // Was error just wait for confirmation
2916:src/keys.c    ****        wait_for_key_press();
2917:src/keys.c    ****      }
2918:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
2919:src/keys.c    ****      return;
2920:src/keys.c    ****    }
2921:src/keys.c    ****    process_keycode ( remapped.key_34s );
2922:src/keys.c    ****  }
2923:src/keys.c    ****  
2924:src/keys.c    **** /*
2925:src/keys.c    ****  *  Fed with key codes by the event loop
2926:src/keys.c    ****  */
2927:src/keys.c    **** void process_keycode(int c)
2928:src/keys.c    **** {
 4929              		.loc 1 2928 1 is_stmt 1 view -0
 4930              		.cfi_startproc
 4931              		@ args = 0, pretend = 0, frame = 8
 4932              		@ frame_needed = 0, uses_anonymous_args = 0
2929:src/keys.c    ****   static int was_paused;
 4933              		.loc 1 2929 3 view .LVU1547
2930:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2931:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4934              		.loc 1 2931 3 view .LVU1548
2932:src/keys.c    ****   if (was_paused && Pause == 0) {
 4935              		.loc 1 2932 3 view .LVU1549
2928:src/keys.c    ****   static int was_paused;
 4936              		.loc 1 2928 1 is_stmt 0 view .LVU1550
 4937 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4938              		.cfi_def_cfa_offset 36
 4939              		.cfi_offset 4, -36
 4940              		.cfi_offset 5, -32
 4941              		.cfi_offset 6, -28
 4942              		.cfi_offset 7, -24
 4943              		.cfi_offset 8, -20
 4944              		.cfi_offset 9, -16
 4945              		.cfi_offset 10, -12
 4946              		.cfi_offset 11, -8
 4947              		.cfi_offset 14, -4
 4948              		.loc 1 2932 7 view .LVU1551
 4949 0004 A84E     		ldr	r6, .L1156
 4950              		.loc 1 2932 27 view .LVU1552
 4951 0006 A94D     		ldr	r5, .L1156+4
ARM GAS  /tmp/cceb4mPP.s 			page 164


 4952              		.loc 1 2932 6 view .LVU1553
 4953 0008 3368     		ldr	r3, [r6]
2928:src/keys.c    ****   static int was_paused;
 4954              		.loc 1 2928 1 view .LVU1554
 4955 000a 83B0     		sub	sp, sp, #12
 4956              		.cfi_def_cfa_offset 48
2928:src/keys.c    ****   static int was_paused;
 4957              		.loc 1 2928 1 view .LVU1555
 4958 000c 0446     		mov	r4, r0
 4959              		.loc 1 2932 6 view .LVU1556
 4960 000e 1BB1     		cbz	r3, .L535
 4961              		.loc 1 2932 27 discriminator 1 view .LVU1557
 4962 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4963              		.loc 1 2932 18 discriminator 1 view .LVU1558
 4964 0012 002B     		cmp	r3, #0
 4965 0014 00F0CE80 		beq	.L1078
 4966              	.LVL402:
 4967              	.L535:
2933:src/keys.c    ****     /*
2934:src/keys.c    ****      *  Continue XROM execution after a pause
2935:src/keys.c    ****      */
2936:src/keys.c    ****     xeq_xrom();
2937:src/keys.c    ****   }
2938:src/keys.c    ****   was_paused = Pause;
 4968              		.loc 1 2938 3 is_stmt 1 view .LVU1559
 4969              		.loc 1 2938 14 is_stmt 0 view .LVU1560
 4970 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4971 001a 3360     		str	r3, [r6]
2939:src/keys.c    ****   if (c == K_NOP) {
 4972              		.loc 1 2939 3 is_stmt 1 view .LVU1561
 4973              		.loc 1 2939 6 is_stmt 0 view .LVU1562
 4974 001c 2E2C     		cmp	r4, #46
 4975 001e 00F0C380 		beq	.L1079
2940:src/keys.c    ****     OpCode = 0;
2941:src/keys.c    ****   }
2942:src/keys.c    ****   else if (c == K_HEARTBEAT) {
 4976              		.loc 1 2942 8 is_stmt 1 view .LVU1563
 4977              		.loc 1 2942 11 is_stmt 0 view .LVU1564
 4978 0022 622C     		cmp	r4, #98
 4979 0024 6DD0     		beq	.L1080
2943:src/keys.c    ****     /*
2944:src/keys.c    ****      *  Heartbeat processing goes here.
2945:src/keys.c    ****      *  This is totally thread safe!
2946:src/keys.c    ****      */
2947:src/keys.c    ****     if (Keyticks >= 2) {
2948:src/keys.c    ****       /*
2949:src/keys.c    ****        *  Some time has passed after last key press
2950:src/keys.c    ****        */
2951:src/keys.c    ****       if (OpCode != 0) {
2952:src/keys.c    **** 	/*
2953:src/keys.c    **** 	 *  Handle command display and NULL here
2954:src/keys.c    **** 	 */
2955:src/keys.c    **** 	if (OpCodeDisplayPending) {
2956:src/keys.c    **** 	  /*
2957:src/keys.c    **** 	   *  Show command to the user
2958:src/keys.c    **** 	   */
2959:src/keys.c    **** 	  OpCodeDisplayPending = 0;
ARM GAS  /tmp/cceb4mPP.s 			page 165


2960:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
2961:src/keys.c    **** 	    DispMsg = "RUN";
2962:src/keys.c    **** 	  }
2963:src/keys.c    **** 	  else {
2964:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
2965:src/keys.c    **** 	    DispMsg = TraceBuffer;
2966:src/keys.c    **** 	  }
2967:src/keys.c    **** 	  display();
2968:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
2969:src/keys.c    **** 	}
2970:src/keys.c    ****     else if (Keyticks > 12) {
2971:src/keys.c    **** 	  /*
2972:src/keys.c    **** 	   *  Key is too long held down
2973:src/keys.c    **** 	   */
2974:src/keys.c    **** 	  OpCode = 0;
2975:src/keys.c    **** 	  message("NULL", CNULL);
2976:src/keys.c    **** 	  // Force display update on key-up
2977:src/keys.c    **** 	  State2.disp_temp = 0;
2978:src/keys.c    **** 	}
2979:src/keys.c    ****       }
2980:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
2981:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
2982:src/keys.c    **** 	State2.shifts = SHIFT_N;
2983:src/keys.c    ****       }
2984:src/keys.c    ****     }
2985:src/keys.c    **** 
2986:src/keys.c    ****     /*
2987:src/keys.c    ****      *  Serve the watchdog
2988:src/keys.c    ****      */
2989:src/keys.c    ****     watchdog();
2990:src/keys.c    **** 
2991:src/keys.c    **** #ifndef CONSOLE
2992:src/keys.c    ****     /*
2993:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
2994:src/keys.c    ****      */
2995:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
2996:src/keys.c    ****       JustStopped = 0;
2997:src/keys.c    ****     }
2998:src/keys.c    **** #endif
2999:src/keys.c    **** 
3000:src/keys.c    ****     /*
3001:src/keys.c    ****      *  Do nothing if not running a program
3002:src/keys.c    ****      */
3003:src/keys.c    ****     if (!Running && ! Pause)
3004:src/keys.c    ****       return;
3005:src/keys.c    ****   }
3006:src/keys.c    ****   else {
3007:src/keys.c    ****     /*
3008:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3009:src/keys.c    ****      */
3010:src/keys.c    ****     xeq_init_contexts();
 4980              		.loc 1 3010 5 is_stmt 1 view .LVU1565
3011:src/keys.c    ****     State2.wascomplex = 0;
 4981              		.loc 1 3011 23 is_stmt 0 view .LVU1566
 4982 0026 DFF8A082 		ldr	r8, .L1156+32
3010:src/keys.c    ****     State2.wascomplex = 0;
 4983              		.loc 1 3010 5 view .LVU1567
ARM GAS  /tmp/cceb4mPP.s 			page 166


 4984 002a FFF7FEFF 		bl	xeq_init_contexts
 4985              	.LVL403:
 4986              		.loc 1 3011 5 is_stmt 1 view .LVU1568
 4987              		.loc 1 3011 23 is_stmt 0 view .LVU1569
 4988 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3012:src/keys.c    **** 
3013:src/keys.c    ****     if (is_dot(RPN)) {
 4989              		.loc 1 3013 9 view .LVU1570
 4990 0032 8D20     		movs	r0, #141
3011:src/keys.c    **** 
 4991              		.loc 1 3011 23 view .LVU1571
 4992 0034 6FF38713 		bfc	r3, #6, #2
 4993 0038 88F81430 		strb	r3, [r8, #20]
 4994              		.loc 1 3013 5 is_stmt 1 view .LVU1572
 4995              		.loc 1 3013 9 is_stmt 0 view .LVU1573
 4996 003c FFF7FEFF 		bl	is_dot
 4997              	.LVL404:
 4998              		.loc 1 3013 8 view .LVU1574
 4999 0040 0028     		cmp	r0, #0
 5000 0042 40F0DE81 		bne	.L1081
 5001              	.L553:
3014:src/keys.c    ****       /*
3015:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3016:src/keys.c    ****        */
3017:src/keys.c    ****       clr_dot(RPN);
3018:src/keys.c    ****       finish_RPN(); // RPN
3019:src/keys.c    ****     }
3020:src/keys.c    **** 
3021:src/keys.c    **** #ifndef CONSOLE
3022:src/keys.c    ****     /*
3023:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3024:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3025:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3026:src/keys.c    ****      *  an accidental restart of the program.
3027:src/keys.c    ****      */
3028:src/keys.c    ****     if (c != K63)
 5002              		.loc 1 3028 5 is_stmt 1 view .LVU1575
 5003              		.loc 1 3028 8 is_stmt 0 view .LVU1576
 5004 0046 272C     		cmp	r4, #39
 5005 0048 00F0D881 		beq	.L555
3029:src/keys.c    ****       JustStopped = 0;
 5006              		.loc 1 3029 7 is_stmt 1 view .LVU1577
 5007              		.loc 1 3029 19 is_stmt 0 view .LVU1578
 5008 004c 984B     		ldr	r3, .L1156+8
 5009 004e 0022     		movs	r2, #0
3030:src/keys.c    **** #endif
3031:src/keys.c    ****   }
3032:src/keys.c    **** 
3033:src/keys.c    ****   /*
3034:src/keys.c    ****    *  Handle key release
3035:src/keys.c    ****    */
3036:src/keys.c    ****   if (c == K_RELEASE) {
 5010              		.loc 1 3036 6 view .LVU1579
 5011 0050 632C     		cmp	r4, #99
3029:src/keys.c    ****       JustStopped = 0;
 5012              		.loc 1 3029 19 view .LVU1580
 5013 0052 1A60     		str	r2, [r3]
ARM GAS  /tmp/cceb4mPP.s 			page 167


 5014              		.loc 1 3036 3 is_stmt 1 view .LVU1581
 5015              		.loc 1 3036 6 is_stmt 0 view .LVU1582
 5016 0054 40F0D281 		bne	.L555
3037:src/keys.c    ****     if (OpCode != 0) {
 5017              		.loc 1 3037 5 is_stmt 1 view .LVU1583
 5018              		.loc 1 3037 16 is_stmt 0 view .LVU1584
 5019 0058 964B     		ldr	r3, .L1156+12
 5020 005a 1C68     		ldr	r4, [r3]
 5021              	.LVL405:
 5022              		.loc 1 3037 8 view .LVU1585
 5023 005c 002C     		cmp	r4, #0
 5024 005e 00F0DA81 		beq	.L556
3038:src/keys.c    ****       /*
3039:src/keys.c    ****        * Execute the key on release
3040:src/keys.c    ****        */
3041:src/keys.c    ****       GoFast = 1;
 5025              		.loc 1 3041 7 is_stmt 1 view .LVU1586
 5026              		.loc 1 3041 14 is_stmt 0 view .LVU1587
 5027 0062 9549     		ldr	r1, .L1156+16
3042:src/keys.c    ****       c = OpCode;
3043:src/keys.c    ****       OpCode = 0;
 5028              		.loc 1 3043 14 view .LVU1588
 5029 0064 1A60     		str	r2, [r3]
3041:src/keys.c    ****       c = OpCode;
 5030              		.loc 1 3041 14 view .LVU1589
 5031 0066 0120     		movs	r0, #1
3044:src/keys.c    **** 
3045:src/keys.c    ****       if (c == STATE_SST)
 5032              		.loc 1 3045 10 view .LVU1590
 5033 0068 2E2C     		cmp	r4, #46
3042:src/keys.c    ****       OpCode = 0;
 5034              		.loc 1 3042 9 view .LVU1591
 5035 006a A346     		mov	fp, r4
3041:src/keys.c    ****       c = OpCode;
 5036              		.loc 1 3041 14 view .LVU1592
 5037 006c 0860     		str	r0, [r1]
3042:src/keys.c    ****       OpCode = 0;
 5038              		.loc 1 3042 7 is_stmt 1 view .LVU1593
 5039              	.LVL406:
3043:src/keys.c    **** 
 5040              		.loc 1 3043 7 view .LVU1594
 5041              		.loc 1 3045 7 view .LVU1595
 5042              		.loc 1 3045 10 is_stmt 0 view .LVU1596
 5043 006e 00F0E681 		beq	.L1082
3046:src/keys.c    **** 	xeq_sst_bst(1);
3047:src/keys.c    ****       else {
3048:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5044              		.loc 1 3048 2 is_stmt 1 view .LVU1597
 5045              		.loc 1 3048 5 is_stmt 0 view .LVU1598
 5046 0072 B4F5817F 		cmp	r4, #258
 5047 0076 04D0     		beq	.L562
 5048              		.loc 1 3048 29 discriminator 1 view .LVU1599
 5049 0078 40F23F13 		movw	r3, #319
 5050 007c 9C42     		cmp	r4, r3
 5051 007e 40F09C80 		bne	.L1083
 5052              	.L562:
3049:src/keys.c    **** 	  xeq(c);
ARM GAS  /tmp/cceb4mPP.s 			page 168


 5053              		.loc 1 3049 4 is_stmt 1 view .LVU1600
3050:src/keys.c    **** 	  if (Running || Pause)
 5054              		.loc 1 3050 8 is_stmt 0 view .LVU1601
 5055 0082 8E4E     		ldr	r6, .L1156+20
3049:src/keys.c    **** 	  xeq(c);
 5056              		.loc 1 3049 4 view .LVU1602
 5057 0084 2046     		mov	r0, r4
 5058 0086 FFF7FEFF 		bl	xeq
 5059              	.LVL407:
 5060              		.loc 1 3050 4 is_stmt 1 view .LVU1603
 5061              		.loc 1 3050 7 is_stmt 0 view .LVU1604
 5062 008a 3368     		ldr	r3, [r6]
 5063 008c 0BB9     		cbnz	r3, .L560
 5064              		.loc 1 3050 16 discriminator 1 view .LVU1605
 5065 008e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5066 0090 0BB1     		cbz	r3, .L558
 5067              	.L560:
3051:src/keys.c    **** 	    xeqprog();
 5068              		.loc 1 3051 6 is_stmt 1 view .LVU1606
 5069 0092 FFF7FEFF 		bl	xeqprog
 5070              	.LVL408:
 5071              	.L558:
3052:src/keys.c    **** 	}
3053:src/keys.c    ****       }
3054:src/keys.c    ****       dot(RPN, ShowRPN);
 5072              		.loc 1 3054 7 view .LVU1607
 5073 0096 8A4C     		ldr	r4, .L1156+24
 5074              	.LVL409:
 5075              		.loc 1 3054 7 is_stmt 0 view .LVU1608
 5076 0098 8D20     		movs	r0, #141
 5077 009a 2168     		ldr	r1, [r4]
 5078 009c FFF7FEFF 		bl	dot
 5079              	.LVL410:
3055:src/keys.c    ****     }
3056:src/keys.c    ****     else {
3057:src/keys.c    ****       // Ignore key-up if no operation was pending
3058:src/keys.c    ****       dot(RPN, ShowRPN);
3059:src/keys.c    **** #ifndef CONSOLE
3060:src/keys.c    ****       if (! State2.disp_temp ) {
3061:src/keys.c    **** 	if (!WasDataEntry) {
3062:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3063:src/keys.c    **** 	  display();
3064:src/keys.c    **** 	}
3065:src/keys.c    **** 	else {
3066:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3067:src/keys.c    **** 	}
3068:src/keys.c    ****       }
3069:src/keys.c    **** #endif
3070:src/keys.c    ****       return;
3071:src/keys.c    ****     }
3072:src/keys.c    **** 
3073:src/keys.c    ****     /*
3074:src/keys.c    ****      *  Turn on the RPN symbol if desired
3075:src/keys.c    ****      */
3076:src/keys.c    ****     if (ShowRPN) {
 5080              		.loc 1 3076 5 is_stmt 1 view .LVU1609
 5081              		.loc 1 3076 9 is_stmt 0 view .LVU1610
ARM GAS  /tmp/cceb4mPP.s 			page 169


 5082 00a0 2768     		ldr	r7, [r4]
 5083              		.loc 1 3076 8 view .LVU1611
 5084 00a2 002F     		cmp	r7, #0
 5085 00a4 40F0B381 		bne	.L1084
 5086              	.LVL411:
 5087              	.L565:
3077:src/keys.c    ****       finish_RPN(); // RPN
3078:src/keys.c    ****     }
3079:src/keys.c    ****   }
3080:src/keys.c    ****   else {
3081:src/keys.c    ****     /*
3082:src/keys.c    ****      *  Decode the key 
3083:src/keys.c    ****      */
3084:src/keys.c    ****     // print_debug (100, c);
3085:src/keys.c    ****     WasDataEntry = 0;
3086:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3087:src/keys.c    ****     c = process(c);		// returns an op-code or state
3088:src/keys.c    ****     switch (c) {
3089:src/keys.c    ****     case STATE_SST:
3090:src/keys.c    ****       OpCode = c;
3091:src/keys.c    ****       OpCodeDisplayPending = 0;
3092:src/keys.c    ****       xeq_sst_bst(0);
3093:src/keys.c    ****       break;
3094:src/keys.c    **** 
3095:src/keys.c    ****     case STATE_BST:
3096:src/keys.c    ****       xeq_sst_bst(-1);
3097:src/keys.c    ****       break;
3098:src/keys.c    **** 
3099:src/keys.c    ****     case STATE_BACKSPACE:
3100:src/keys.c    ****       if (! State2.runmode)
3101:src/keys.c    **** 	delprog();
3102:src/keys.c    ****       else if (State2.alphas) {
3103:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3104:src/keys.c    **** 	if (p > Alpha)
3105:src/keys.c    **** 	  *--p = '\0';
3106:src/keys.c    ****       }
3107:src/keys.c    ****       break;
3108:src/keys.c    **** 
3109:src/keys.c    ****     case STATE_RUNNING:
3110:src/keys.c    ****       xeqprog();  // continue execution
3111:src/keys.c    ****       break;
3112:src/keys.c    **** 
3113:src/keys.c    ****     case STATE_WINDOWRIGHT:
3114:src/keys.c    ****     case STATE_WINDOWLEFT:
3115:src/keys.c    ****       if (!is_bad_cmdline())
3116:src/keys.c    **** 	set_window(c);
3117:src/keys.c    ****       break;
3118:src/keys.c    **** 
3119:src/keys.c    ****     case STATE_UNFINISHED:
3120:src/keys.c    ****     case STATE_IGNORE:
3121:src/keys.c    ****       break;
3122:src/keys.c    **** 
3123:src/keys.c    ****     default:
3124:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3125:src/keys.c    **** 	NonProgrammable = 0;
3126:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3127:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/cceb4mPP.s 			page 170


3128:src/keys.c    **** 	    // Data entry key
3129:src/keys.c    **** #ifndef CONSOLE
3130:src/keys.c    **** 	    WasDataEntry = 1;
3131:src/keys.c    **** #endif
3132:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3133:src/keys.c    **** 	    xeq(c);
3134:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3135:src/keys.c    **** 	  }
3136:src/keys.c    **** 	}
3137:src/keys.c    **** 	else {
3138:src/keys.c    **** 	  // Save the op-code for execution on key-up
3139:src/keys.c    **** 	  OpCode = c;
3140:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3141:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3142:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3143:src/keys.c    **** 	}
3144:src/keys.c    ****       }
3145:src/keys.c    ****       else {
3146:src/keys.c    **** 	stoprog(c);
3147:src/keys.c    ****       }
3148:src/keys.c    ****     }
3149:src/keys.c    ****   }
3150:src/keys.c    ****   if (! Running && ! Pause
 5088              		.loc 1 3150 3 is_stmt 1 view .LVU1612
 5089              		.loc 1 3150 6 is_stmt 0 view .LVU1613
 5090 00a8 3368     		ldr	r3, [r6]
 5091 00aa 002B     		cmp	r3, #0
 5092 00ac 40F08781 		bne	.L1072
 5093              	.LVL412:
 5094              	.L579:
 5095              		.loc 1 3150 20 discriminator 1 view .LVU1614
 5096 00b0 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5097              		.loc 1 3150 17 discriminator 1 view .LVU1615
 5098 00b2 002B     		cmp	r3, #0
 5099 00b4 40F08381 		bne	.L1072
3151:src/keys.c    **** #ifndef CONSOLE
3152:src/keys.c    ****       && ! JustStopped
 5100              		.loc 1 3152 10 view .LVU1616
 5101 00b8 7D4B     		ldr	r3, .L1156+8
3153:src/keys.c    **** #endif
3154:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 5102              		.loc 1 3154 10 view .LVU1617
 5103 00ba 824C     		ldr	r4, .L1156+28
 5104 00bc 1B68     		ldr	r3, [r3]
 5105 00be 2268     		ldr	r2, [r4]
 5106              		.loc 1 3154 7 view .LVU1618
 5107 00c0 1343     		orrs	r3, r3, r2
 5108 00c2 19D1     		bne	.L839
 5109              		.loc 1 3154 26 discriminator 1 view .LVU1619
 5110 00c4 BBF1320F 		cmp	fp, #50
 5111 00c8 16D0     		beq	.L839
 5112              	.LBB639:
3155:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5113              		.loc 1 3155 5 is_stmt 1 view .LVU1620
 5114              		.loc 1 3155 15 is_stmt 0 view .LVU1621
 5115 00ca DFF81892 		ldr	r9, .L1156+60
 5116 00ce D9F80050 		ldr	r5, [r9]
ARM GAS  /tmp/cceb4mPP.s 			page 171


 5117              	.LVL413:
3156:src/keys.c    **** 
3157:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 5118              		.loc 1 3157 5 is_stmt 1 view .LVU1622
 5119              		.loc 1 3157 21 is_stmt 0 view .LVU1623
 5120 00d2 BBF1000F 		cmp	fp, #0
 5121 00d6 09D0     		beq	.L841
 5122              		.loc 1 3157 49 discriminator 1 view .LVU1624
 5123 00d8 002F     		cmp	r7, #0
 5124 00da 40F04B85 		bne	.L893
 5125              		.loc 1 3157 66 discriminator 3 view .LVU1625
 5126 00de 7A4B     		ldr	r3, .L1156+32
 5127 00e0 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 5128              		.loc 1 3157 21 discriminator 3 view .LVU1626
 5129 00e2 9807     		lsls	r0, r3, #30
 5130 00e4 00F1ED85 		bmi	.L894
 5131 00e8 05F0010B 		and	fp, r5, #1
 5132              	.LVL414:
 5133              	.L841:
 5134              		.loc 1 3157 18 discriminator 8 view .LVU1627
 5135 00ec C9F800B0 		str	fp, [r9]
3158:src/keys.c    ****     display();
 5136              		.loc 1 3158 5 is_stmt 1 discriminator 8 view .LVU1628
 5137 00f0 FFF7FEFF 		bl	display
 5138              	.LVL415:
3159:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5139              		.loc 1 3159 5 discriminator 8 view .LVU1629
 5140              		.loc 1 3159 18 is_stmt 0 discriminator 8 view .LVU1630
 5141 00f4 C9F80050 		str	r5, [r9]
 5142              	.LVL416:
 5143              	.L839:
 5144              		.loc 1 3159 18 discriminator 8 view .LVU1631
 5145              	.LBE639:
3160:src/keys.c    ****   }
3161:src/keys.c    **** 
3162:src/keys.c    ****  no_display:
3163:src/keys.c    ****   JustDisplayed = 0;
 5146              		.loc 1 3163 3 is_stmt 1 view .LVU1632
 5147              		.loc 1 3163 17 is_stmt 0 view .LVU1633
 5148 00f8 0023     		movs	r3, #0
 5149 00fa 2360     		str	r3, [r4]
3164:src/keys.c    ****   watchdog();
 5150              		.loc 1 3164 13 is_stmt 1 view .LVU1634
 5151              	.L534:
3165:src/keys.c    **** }
 5152              		.loc 1 3165 1 is_stmt 0 view .LVU1635
 5153 00fc 03B0     		add	sp, sp, #12
 5154              		.cfi_remember_state
 5155              		.cfi_def_cfa_offset 36
 5156              		@ sp needed
 5157 00fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5158              	.LVL417:
 5159              	.L1080:
 5160              		.cfi_restore_state
2947:src/keys.c    ****       /*
 5161              		.loc 1 2947 5 is_stmt 1 view .LVU1636
2947:src/keys.c    ****       /*
ARM GAS  /tmp/cceb4mPP.s 			page 172


 5162              		.loc 1 2947 9 is_stmt 0 view .LVU1637
 5163 0102 FFF7FEFF 		bl	keyticks
 5164              	.LVL418:
2947:src/keys.c    ****       /*
 5165              		.loc 1 2947 8 view .LVU1638
 5166 0106 0128     		cmp	r0, #1
 5167 0108 1BDD     		ble	.L540
2951:src/keys.c    **** 	/*
 5168              		.loc 1 2951 7 is_stmt 1 view .LVU1639
2951:src/keys.c    **** 	/*
 5169              		.loc 1 2951 18 is_stmt 0 view .LVU1640
 5170 010a 6A4E     		ldr	r6, .L1156+12
 5171 010c 3068     		ldr	r0, [r6]
2951:src/keys.c    **** 	/*
 5172              		.loc 1 2951 10 view .LVU1641
 5173 010e 98B1     		cbz	r0, .L542
2955:src/keys.c    **** 	  /*
 5174              		.loc 1 2955 2 is_stmt 1 view .LVU1642
2955:src/keys.c    **** 	  /*
 5175              		.loc 1 2955 6 is_stmt 0 view .LVU1643
 5176 0110 6E4B     		ldr	r3, .L1156+36
2955:src/keys.c    **** 	  /*
 5177              		.loc 1 2955 5 view .LVU1644
 5178 0112 1F68     		ldr	r7, [r3]
 5179 0114 002F     		cmp	r7, #0
 5180 0116 00F09F81 		beq	.L543
2959:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5181              		.loc 1 2959 4 is_stmt 1 view .LVU1645
2960:src/keys.c    **** 	    DispMsg = "RUN";
 5182              		.loc 1 2960 7 is_stmt 0 view .LVU1646
 5183 011a 40F23B12 		movw	r2, #315
2959:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5184              		.loc 1 2959 25 view .LVU1647
 5185 011e 0026     		movs	r6, #0
2960:src/keys.c    **** 	    DispMsg = "RUN";
 5186              		.loc 1 2960 7 view .LVU1648
 5187 0120 9042     		cmp	r0, r2
2959:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5188              		.loc 1 2959 25 view .LVU1649
 5189 0122 1E60     		str	r6, [r3]
2960:src/keys.c    **** 	    DispMsg = "RUN";
 5190              		.loc 1 2960 4 is_stmt 1 view .LVU1650
2960:src/keys.c    **** 	    DispMsg = "RUN";
 5191              		.loc 1 2960 7 is_stmt 0 view .LVU1651
 5192 0124 40F0EA83 		bne	.L544
2961:src/keys.c    **** 	  }
 5193              		.loc 1 2961 6 is_stmt 1 view .LVU1652
2961:src/keys.c    **** 	  }
 5194              		.loc 1 2961 14 is_stmt 0 view .LVU1653
 5195 0128 694B     		ldr	r3, .L1156+40
 5196 012a 6A4A     		ldr	r2, .L1156+44
 5197 012c 1A60     		str	r2, [r3]
 5198              	.L545:
2967:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5199              		.loc 1 2967 4 is_stmt 1 view .LVU1654
 5200 012e FFF7FEFF 		bl	display
 5201              	.LVL419:
ARM GAS  /tmp/cceb4mPP.s 			page 173


2968:src/keys.c    **** 	}
 5202              		.loc 1 2968 4 view .LVU1655
2968:src/keys.c    **** 	}
 5203              		.loc 1 2968 12 is_stmt 0 view .LVU1656
 5204 0132 634B     		ldr	r3, .L1156+24
 5205 0134 0122     		movs	r2, #1
 5206 0136 1A60     		str	r2, [r3]
 5207              	.L542:
2980:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5208              		.loc 1 2980 7 is_stmt 1 view .LVU1657
2980:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5209              		.loc 1 2980 11 is_stmt 0 view .LVU1658
 5210 0138 FFF7FEFF 		bl	keyticks
 5211              	.LVL420:
2980:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5212              		.loc 1 2980 10 view .LVU1659
 5213 013c 0C28     		cmp	r0, #12
 5214 013e 00F38281 		bgt	.L1085
 5215              	.L540:
2989:src/keys.c    **** 
 5216              		.loc 1 2989 15 is_stmt 1 view .LVU1660
2995:src/keys.c    ****       JustStopped = 0;
 5217              		.loc 1 2995 5 view .LVU1661
2995:src/keys.c    ****       JustStopped = 0;
 5218              		.loc 1 2995 9 is_stmt 0 view .LVU1662
 5219 0142 5B4E     		ldr	r6, .L1156+8
2995:src/keys.c    ****       JustStopped = 0;
 5220              		.loc 1 2995 8 view .LVU1663
 5221 0144 3368     		ldr	r3, [r6]
 5222 0146 002B     		cmp	r3, #0
 5223 0148 4ED1     		bne	.L1086
 5224              	.L549:
3003:src/keys.c    ****       return;
 5225              		.loc 1 3003 5 is_stmt 1 view .LVU1664
3003:src/keys.c    ****       return;
 5226              		.loc 1 3003 9 is_stmt 0 view .LVU1665
 5227 014a 5C4E     		ldr	r6, .L1156+20
 5228 014c 3368     		ldr	r3, [r6]
3003:src/keys.c    ****       return;
 5229              		.loc 1 3003 8 view .LVU1666
 5230 014e 002B     		cmp	r3, #0
 5231 0150 46D0     		beq	.L1087
 5232              	.L537:
3085:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5233              		.loc 1 3085 5 is_stmt 1 view .LVU1667
3086:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5234              		.loc 1 3086 13 is_stmt 0 view .LVU1668
 5235 0152 5B49     		ldr	r1, .L1156+24
3085:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5236              		.loc 1 3085 18 view .LVU1669
 5237 0154 DFF88C91 		ldr	r9, .L1156+60
3086:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5238              		.loc 1 3086 15 view .LVU1670
 5239 0158 B3FA83F3 		clz	r3, r3
 5240 015c 5B09     		lsrs	r3, r3, #5
3085:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5241              		.loc 1 3085 18 view .LVU1671
ARM GAS  /tmp/cceb4mPP.s 			page 174


 5242 015e 0022     		movs	r2, #0
3086:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5243              		.loc 1 3086 13 view .LVU1672
 5244 0160 0B60     		str	r3, [r1]
3085:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5245              		.loc 1 3085 18 view .LVU1673
 5246 0162 C9F80020 		str	r2, [r9]
3086:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5247              		.loc 1 3086 5 is_stmt 1 view .LVU1674
3087:src/keys.c    ****     switch (c) {
 5248              		.loc 1 3087 5 view .LVU1675
 5249              	.LVL421:
 5250              	.LBB640:
 5251              	.LBI640:
2756:src/keys.c    ****   const enum shifts shift = cur_shift();
 5252              		.loc 1 2756 12 view .LVU1676
 5253              	.LBB641:
2757:src/keys.c    ****   enum catalogues cat;
 5254              		.loc 1 2757 3 view .LVU1677
 5255              	.LBB642:
 5256              	.LBI642:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5257              		.loc 1 84 13 view .LVU1678
 5258              	.LBB643:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5259              		.loc 1 85 2 view .LVU1679
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5260              		.loc 1 85 18 is_stmt 0 view .LVU1680
 5261 0166 FFF7FEFF 		bl	shift_down
 5262              	.LVL422:
  86:src/keys.c    **** }
 5263              		.loc 1 86 2 is_stmt 1 view .LVU1681
  86:src/keys.c    **** }
 5264              		.loc 1 86 52 is_stmt 0 view .LVU1682
 5265 016a 8246     		mov	r10, r0
 5266 016c 10B9     		cbnz	r0, .L568
 5267 016e 564B     		ldr	r3, .L1156+32
 5268 0170 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5269              	.L568:
 5270              	.LVL423:
  86:src/keys.c    **** }
 5271              		.loc 1 86 52 view .LVU1683
 5272              	.LBE643:
 5273              	.LBE642:
2758:src/keys.c    **** 
 5274              		.loc 1 2758 3 is_stmt 1 view .LVU1684
2760:src/keys.c    ****     /*
 5275              		.loc 1 2760 3 view .LVU1685
2760:src/keys.c    ****     /*
 5276              		.loc 1 2760 7 is_stmt 0 view .LVU1686
 5277 0174 3768     		ldr	r7, [r6]
2760:src/keys.c    ****     /*
 5278              		.loc 1 2760 6 view .LVU1687
 5279 0176 0FB9     		cbnz	r7, .L569
2760:src/keys.c    ****     /*
 5280              		.loc 1 2760 15 view .LVU1688
 5281 0178 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
ARM GAS  /tmp/cceb4mPP.s 			page 175


 5282 017a 2BB3     		cbz	r3, .L570
 5283              	.L569:
2764:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5284              		.loc 1 2764 5 is_stmt 1 view .LVU1689
2764:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5285              		.loc 1 2764 8 is_stmt 0 view .LVU1690
 5286 017c 242C     		cmp	r4, #36
 5287 017e 00F02281 		beq	.L571
2764:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5288              		.loc 1 2764 18 view .LVU1691
 5289 0182 272C     		cmp	r4, #39
 5290 0184 00F01F81 		beq	.L571
2774:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5291              		.loc 1 2774 5 is_stmt 1 view .LVU1692
2774:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5292              		.loc 1 2774 8 is_stmt 0 view .LVU1693
 5293 0188 622C     		cmp	r4, #98
 5294 018a 07D0     		beq	.L574
2775:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5295              		.loc 1 2775 7 is_stmt 1 view .LVU1694
2775:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5296              		.loc 1 2775 15 is_stmt 0 view .LVU1695
 5297 018c 4E4B     		ldr	r3, .L1156+32
2777:src/keys.c    ****     }
 5298              		.loc 1 2777 14 view .LVU1696
 5299 018e 4A4A     		ldr	r2, .L1156+16
2775:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5300              		.loc 1 2775 17 view .LVU1697
 5301 0190 0134     		adds	r4, r4, #1
 5302              	.LVL424:
2777:src/keys.c    ****     }
 5303              		.loc 1 2777 14 view .LVU1698
 5304 0192 0121     		movs	r1, #1
2775:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5305              		.loc 1 2775 15 view .LVU1699
 5306 0194 DC74     		strb	r4, [r3, #19]
2776:src/keys.c    ****       GoFast = 1;
 5307              		.loc 1 2776 7 is_stmt 1 view .LVU1700
2776:src/keys.c    ****       GoFast = 1;
 5308              		.loc 1 2776 13 is_stmt 0 view .LVU1701
 5309 0196 0023     		movs	r3, #0
2777:src/keys.c    ****     }
 5310              		.loc 1 2777 14 view .LVU1702
 5311 0198 1160     		str	r1, [r2]
2776:src/keys.c    ****       GoFast = 1;
 5312              		.loc 1 2776 13 view .LVU1703
 5313 019a 2B70     		strb	r3, [r5]
2777:src/keys.c    ****     }
 5314              		.loc 1 2777 7 is_stmt 1 view .LVU1704
 5315              	.LVL425:
 5316              	.L574:
2777:src/keys.c    ****     }
 5317              		.loc 1 2777 7 is_stmt 0 view .LVU1705
 5318              	.LBE641:
 5319              	.LBE640:
3110:src/keys.c    ****       break;
 5320              		.loc 1 3110 7 is_stmt 1 view .LVU1706
ARM GAS  /tmp/cceb4mPP.s 			page 176


 5321 019c FFF7FEFF 		bl	xeqprog
 5322              	.LVL426:
3111:src/keys.c    **** 
 5323              		.loc 1 3111 7 view .LVU1707
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 5324              		.loc 1 2931 7 is_stmt 0 view .LVU1708
 5325 01a0 0027     		movs	r7, #0
3111:src/keys.c    **** 
 5326              		.loc 1 3111 7 view .LVU1709
 5327 01a2 4FF0310B 		mov	fp, #49
 5328 01a6 7FE7     		b	.L565
 5329              	.LVL427:
 5330              	.L1079:
2940:src/keys.c    ****   }
 5331              		.loc 1 2940 5 is_stmt 1 view .LVU1710
2940:src/keys.c    ****   }
 5332              		.loc 1 2940 12 is_stmt 0 view .LVU1711
 5333 01a8 424B     		ldr	r3, .L1156+12
 5334 01aa 444E     		ldr	r6, .L1156+20
 5335 01ac 0022     		movs	r2, #0
 5336 01ae 1A60     		str	r2, [r3]
3036:src/keys.c    ****     if (OpCode != 0) {
 5337              		.loc 1 3036 3 is_stmt 1 view .LVU1712
 5338 01b0 3368     		ldr	r3, [r6]
 5339 01b2 CEE7     		b	.L537
 5340              	.LVL428:
 5341              	.L1078:
2936:src/keys.c    ****   }
 5342              		.loc 1 2936 5 view .LVU1713
 5343 01b4 FFF7FEFF 		bl	xeq_xrom
 5344              	.LVL429:
2936:src/keys.c    ****   }
 5345              		.loc 1 2936 5 is_stmt 0 view .LVU1714
 5346 01b8 2EE7     		b	.L535
 5347              	.L1083:
3048:src/keys.c    **** 	  xeq(c);
 5348              		.loc 1 3048 60 discriminator 2 view .LVU1715
 5349 01ba FFF7FEFF 		bl	is_bad_cmdline
 5350              	.LVL430:
3048:src/keys.c    **** 	  xeq(c);
 5351              		.loc 1 3048 56 discriminator 2 view .LVU1716
 5352 01be 0028     		cmp	r0, #0
 5353 01c0 3FF45FAF 		beq	.L562
 5354 01c4 3D4E     		ldr	r6, .L1156+20
 5355 01c6 66E7     		b	.L558
 5356              	.LVL431:
 5357              	.L570:
 5358              	.LBB1226:
 5359              	.LBB1174:
2787:src/keys.c    ****     soft_init_state();
 5360              		.loc 1 2787 3 is_stmt 1 view .LVU1717
2787:src/keys.c    ****     soft_init_state();
 5361              		.loc 1 2787 6 is_stmt 0 view .LVU1718
 5362 01c8 242C     		cmp	r4, #36
 5363 01ca 00F01284 		beq	.L1088
2793:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5364              		.loc 1 2793 2 is_stmt 1 view .LVU1719
ARM GAS  /tmp/cceb4mPP.s 			page 177


2793:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5365              		.loc 1 2793 5 is_stmt 0 view .LVU1720
 5366 01ce 272C     		cmp	r4, #39
 5367 01d0 10D1     		bne	.L578
2793:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5368              		.loc 1 2793 15 view .LVU1721
 5369 01d2 374B     		ldr	r3, .L1156+8
 5370 01d4 1A68     		ldr	r2, [r3]
 5371 01d6 6AB1     		cbz	r2, .L578
2795:src/keys.c    **** 		return STATE_IGNORE;
 5372              		.loc 1 2795 3 is_stmt 1 view .LVU1722
2795:src/keys.c    **** 		return STATE_IGNORE;
 5373              		.loc 1 2795 15 is_stmt 0 view .LVU1723
 5374 01d8 1F60     		str	r7, [r3]
2796:src/keys.c    **** 	}
 5375              		.loc 1 2796 3 is_stmt 1 view .LVU1724
 5376              	.LVL432:
2796:src/keys.c    **** 	}
 5377              		.loc 1 2796 3 is_stmt 0 view .LVU1725
 5378              	.LBE1174:
 5379              	.LBE1226:
3150:src/keys.c    **** #ifndef CONSOLE
 5380              		.loc 1 3150 3 is_stmt 1 view .LVU1726
 5381              	.LBB1227:
 5382              	.LBB1175:
2796:src/keys.c    **** 	}
 5383              		.loc 1 2796 10 is_stmt 0 view .LVU1727
 5384 01da 4FF0320B 		mov	fp, #50
 5385 01de 67E7     		b	.L579
 5386              	.LVL433:
 5387              	.L1087:
2796:src/keys.c    **** 	}
 5388              		.loc 1 2796 10 view .LVU1728
 5389              	.LBE1175:
 5390              	.LBE1227:
3003:src/keys.c    ****       return;
 5391              		.loc 1 3003 21 discriminator 1 view .LVU1729
 5392 01e0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
3003:src/keys.c    ****       return;
 5393              		.loc 1 3003 18 discriminator 1 view .LVU1730
 5394 01e2 002A     		cmp	r2, #0
 5395 01e4 B5D1     		bne	.L537
 5396 01e6 89E7     		b	.L534
 5397              	.L1086:
2995:src/keys.c    ****       JustStopped = 0;
 5398              		.loc 1 2995 25 discriminator 1 view .LVU1731
 5399 01e8 FFF7FEFF 		bl	is_key_pressed
 5400              	.LVL434:
2995:src/keys.c    ****       JustStopped = 0;
 5401              		.loc 1 2995 21 discriminator 1 view .LVU1732
 5402 01ec 0028     		cmp	r0, #0
 5403 01ee ACD1     		bne	.L549
2996:src/keys.c    ****     }
 5404              		.loc 1 2996 7 is_stmt 1 view .LVU1733
2996:src/keys.c    ****     }
 5405              		.loc 1 2996 19 is_stmt 0 view .LVU1734
 5406 01f0 3060     		str	r0, [r6]
ARM GAS  /tmp/cceb4mPP.s 			page 178


 5407 01f2 AAE7     		b	.L549
 5408              	.LVL435:
 5409              	.L578:
2996:src/keys.c    ****     }
 5410              		.loc 1 2996 19 view .LVU1735
 5411 01f4 DFF8D080 		ldr	r8, .L1156+32
 5412 01f8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5413              	.L576:
 5414              	.LBB1228:
 5415              	.LBB1176:
2802:src/keys.c    **** 		CmdLineLength = 0;
 5416              		.loc 1 2802 2 is_stmt 1 view .LVU1736
2802:src/keys.c    **** 		CmdLineLength = 0;
 5417              		.loc 1 2802 5 is_stmt 0 view .LVU1737
 5418 01fc 002B     		cmp	r3, #0
 5419 01fe 40F06683 		bne	.L1089
 5420              	.L581:
2808:src/keys.c    **** 		return process_confirm((const keycode)c);
 5421              		.loc 1 2808 2 is_stmt 1 view .LVU1738
2808:src/keys.c    **** 		return process_confirm((const keycode)c);
 5422              		.loc 1 2808 6 is_stmt 0 view .LVU1739
 5423 0202 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2808:src/keys.c    **** 		return process_confirm((const keycode)c);
 5424              		.loc 1 2808 5 view .LVU1740
 5425 0206 5907     		lsls	r1, r3, #29
 5426 0208 40F08483 		bne	.L1090
2811:src/keys.c    **** 		return process_arg((const keycode)c);
 5427              		.loc 1 2811 2 is_stmt 1 view .LVU1741
2811:src/keys.c    **** 		return process_arg((const keycode)c);
 5428              		.loc 1 2811 6 is_stmt 0 view .LVU1742
 5429 020c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2811:src/keys.c    **** 		return process_arg((const keycode)c);
 5430              		.loc 1 2811 5 view .LVU1743
 5431 0210 9A06     		lsls	r2, r3, #26
 5432 0212 00F1FE83 		bmi	.L1091
2814:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5433              		.loc 1 2814 2 is_stmt 1 view .LVU1744
2814:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5434              		.loc 1 2814 6 is_stmt 0 view .LVU1745
 5435 0216 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2814:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5436              		.loc 1 2814 5 view .LVU1746
 5437 021a 12F0010B 		ands	fp, r2, #1
 5438 021e 40F04584 		bne	.L1092
2817:src/keys.c    **** 		return process_hyp((const keycode)c);
 5439              		.loc 1 2817 2 is_stmt 1 view .LVU1747
2817:src/keys.c    **** 		return process_hyp((const keycode)c);
 5440              		.loc 1 2817 5 is_stmt 0 view .LVU1748
 5441 0222 12F02001 		ands	r1, r2, #32
 5442 0226 40F02781 		bne	.L1093
2820:src/keys.c    **** 		return process_test((const keycode)c);
 5443              		.loc 1 2820 2 is_stmt 1 view .LVU1749
2820:src/keys.c    **** 		return process_test((const keycode)c);
 5444              		.loc 1 2820 12 is_stmt 0 view .LVU1750
 5445 022a 98F80FB0 		ldrb	fp, [r8, #15]	@ zero_extendqisi2
2820:src/keys.c    **** 		return process_test((const keycode)c);
 5446              		.loc 1 2820 5 view .LVU1751
ARM GAS  /tmp/cceb4mPP.s 			page 179


 5447 022e BBF1070F 		cmp	fp, #7
 5448 0232 40F00784 		bne	.L1094
2823:src/keys.c    **** 		return process_status((const keycode)c);
 5449              		.loc 1 2823 2 is_stmt 1 view .LVU1752
2823:src/keys.c    **** 		return process_status((const keycode)c);
 5450              		.loc 1 2823 12 is_stmt 0 view .LVU1753
 5451 0236 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
2823:src/keys.c    **** 		return process_status((const keycode)c);
 5452              		.loc 1 2823 5 view .LVU1754
 5453 023a 002B     		cmp	r3, #0
 5454 023c 40F0AA84 		bne	.L1095
2829:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5455              		.loc 1 2829 2 is_stmt 1 view .LVU1755
2829:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5456              		.loc 1 2829 5 is_stmt 0 view .LVU1756
 5457 0240 292C     		cmp	r4, #41
 5458 0242 00F07B85 		beq	.L1096
2833:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5459              		.loc 1 2833 2 is_stmt 1 view .LVU1757
2833:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5460              		.loc 1 2833 5 is_stmt 0 view .LVU1758
 5461 0246 2A2C     		cmp	r4, #42
 5462 0248 00F08A85 		beq	.L1097
2837:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5463              		.loc 1 2837 2 is_stmt 1 view .LVU1759
2837:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5464              		.loc 1 2837 5 is_stmt 0 view .LVU1760
 5465 024c 2B2C     		cmp	r4, #43
 5466 024e 00F0AD85 		beq	.L1098
2846:src/keys.c    **** 		return process_arrow((const keycode)c);
 5467              		.loc 1 2846 2 is_stmt 1 view .LVU1761
2846:src/keys.c    **** 		return process_arrow((const keycode)c);
 5468              		.loc 1 2846 5 is_stmt 0 view .LVU1762
 5469 0252 5007     		lsls	r0, r2, #29
 5470 0254 00F1C884 		bmi	.L1099
2854:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5471              		.loc 1 2854 2 is_stmt 1 view .LVU1763
2854:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5472              		.loc 1 2854 8 is_stmt 0 view .LVU1764
 5473 0258 E4B2     		uxtb	r4, r4
 5474              	.LVL436:
 5475              	.LBB644:
 5476              	.LBI644:
 254:src/keys.c    **** {
 5477              		.loc 1 254 24 is_stmt 1 view .LVU1765
 5478              	.LBB645:
 256:src/keys.c    ****   int i, col, max;
 5479              		.loc 1 256 3 view .LVU1766
 257:src/keys.c    ****   const struct _map {
 5480              		.loc 1 257 3 view .LVU1767
 258:src/keys.c    ****     unsigned char key, cat[3];
 5481              		.loc 1 258 3 view .LVU1768
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5482              		.loc 1 263 3 view .LVU1769
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5483              		.loc 1 263 6 is_stmt 0 view .LVU1770
 5484 025a 212C     		cmp	r4, #33
ARM GAS  /tmp/cceb4mPP.s 			page 180


 5485 025c 00F05885 		beq	.L1100
 266:src/keys.c    ****     /*
 5486              		.loc 1 266 3 is_stmt 1 view .LVU1771
 266:src/keys.c    ****     /*
 5487              		.loc 1 266 23 is_stmt 0 view .LVU1772
 5488 0260 1D49     		ldr	r1, .L1156+48
 5489 0262 D8F81430 		ldr	r3, [r8, #20]
 266:src/keys.c    ****     /*
 5490              		.loc 1 266 6 view .LVU1773
 5491 0266 1942     		tst	r1, r3
 5492 0268 40F00185 		bne	.L658
 5493              	.LBB646:
 270:src/keys.c    **** #ifdef DM42
 5494              		.loc 1 270 5 is_stmt 1 view .LVU1774
 297:src/keys.c    ****       /*
 5495              		.loc 1 297 5 view .LVU1775
 297:src/keys.c    ****       /*
 5496              		.loc 1 297 8 is_stmt 0 view .LVU1776
 5497 026c 242C     		cmp	r4, #36
 5498 026e 03D1     		bne	.L659
 297:src/keys.c    ****       /*
 5499              		.loc 1 297 18 view .LVU1777
 5500 0270 BAF1020F 		cmp	r10, #2
 5501 0274 01F0E282 		beq	.L866
 5502              	.L659:
 312:src/keys.c    ****       /*
 5503              		.loc 1 312 5 is_stmt 1 view .LVU1778
 312:src/keys.c    ****       /*
 5504              		.loc 1 312 8 is_stmt 0 view .LVU1779
 5505 0278 BAF1030F 		cmp	r10, #3
 5506 027c 3BD1     		bne	.L666
 5507              	.L853:
 322:src/keys.c    **** #ifndef WINGUI
 5508              		.loc 1 322 5 is_stmt 1 view .LVU1780
 5509              	.LVL437:
 324:src/keys.c    **** #else
 5510              		.loc 1 324 5 view .LVU1781
 324:src/keys.c    **** #else
 5511              		.loc 1 324 23 is_stmt 0 view .LVU1782
 5512 027e 174B     		ldr	r3, .L1156+52
 5513 0280 1B68     		ldr	r3, [r3]
 5514 0282 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 324:src/keys.c    **** #else
 5515              		.loc 1 324 27 view .LVU1783
 5516 0286 D907     		lsls	r1, r3, #31
 5517 0288 00F1CC85 		bmi	.L867
 324:src/keys.c    **** #else
 5518              		.loc 1 324 73 view .LVU1784
 5519 028c 12F0020B 		ands	fp, r2, #2
 5520 0290 01F02081 		beq	.L1101
 322:src/keys.c    **** #ifndef WINGUI
 5521              		.loc 1 322 8 view .LVU1785
 5522 0294 124B     		ldr	r3, .L1156+56
 328:src/keys.c    ****   }
 5523              		.loc 1 328 9 view .LVU1786
 5524 0296 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
ARM GAS  /tmp/cceb4mPP.s 			page 181


 5525              		.loc 1 324 73 view .LVU1787
 5526 0298 4FF0020C 		mov	ip, #2
 5527              	.LVL438:
 5528              	.L661:
 324:src/keys.c    **** #else
 5529              		.loc 1 324 73 view .LVU1788
 5530              	.LBE646:
 370:src/keys.c    ****     if (cp->key == c) {
 5531              		.loc 1 370 3 is_stmt 1 view .LVU1789
 370:src/keys.c    ****     if (cp->key == c) {
 5532              		.loc 1 370 15 view .LVU1790
 5533 029c 181F     		subs	r0, r3, #4
 5534 029e 00EB8100 		add	r0, r0, r1, lsl #2
 5535              	.LBB647:
 324:src/keys.c    **** #else
 5536              		.loc 1 324 73 is_stmt 0 view .LVU1791
 5537 02a2 0421     		movs	r1, #4
 5538              	.LVL439:
 324:src/keys.c    **** #else
 5539              		.loc 1 324 73 view .LVU1792
 5540 02a4 22E0     		b	.L667
 5541              	.L1157:
 5542 02a6 00BF     		.align	2
 5543              	.L1156:
 5544 02a8 00000000 		.word	.LANCHOR12
 5545 02ac 00000000 		.word	Pause
 5546 02b0 00000000 		.word	JustStopped
 5547 02b4 00000000 		.word	OpCode
 5548 02b8 00000000 		.word	GoFast
 5549 02bc 00000000 		.word	Running
 5550 02c0 00000000 		.word	ShowRPN
 5551 02c4 00000000 		.word	JustDisplayed
 5552 02c8 00000000 		.word	StateWhileOn
 5553 02cc 00000000 		.word	OpCodeDisplayPending
 5554 02d0 00000000 		.word	DispMsg
 5555 02d4 00000000 		.word	.LC0
 5556 02d8 00080800 		.word	526336
 5557 02dc 00000000 		.word	main_ram
 5558 02e0 00000000 		.word	.LANCHOR11
 5559 02e4 00000000 		.word	WasDataEntry
 5560              	.LVL440:
 5561              	.L1103:
 324:src/keys.c    **** #else
 5562              		.loc 1 324 73 view .LVU1793
 5563 02e8 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 5564              	.LVL441:
 5565              	.L667:
 324:src/keys.c    **** #else
 5566              		.loc 1 324 73 view .LVU1794
 5567              	.LBE647:
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5568              		.loc 1 371 5 is_stmt 1 view .LVU1795
 370:src/keys.c    ****     if (cp->key == c) {
 5569              		.loc 1 370 24 view .LVU1796
 370:src/keys.c    ****     if (cp->key == c) {
 5570              		.loc 1 370 15 view .LVU1797
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
ARM GAS  /tmp/cceb4mPP.s 			page 182


 5571              		.loc 1 371 8 is_stmt 0 view .LVU1798
 5572 02ec 8C42     		cmp	r4, r1
 5573 02ee 00F0F584 		beq	.L1102
 370:src/keys.c    ****     if (cp->key == c) {
 5574              		.loc 1 370 3 view .LVU1799
 5575 02f2 8342     		cmp	r3, r0
 5576 02f4 F8D1     		bne	.L1103
 5577              	.LVL442:
 5578              	.L666:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5579              		.loc 1 376 3 is_stmt 1 view .LVU1800
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5580              		.loc 1 376 6 is_stmt 0 view .LVU1801
 5581 02f6 1107     		lsls	r1, r2, #28
 5582 02f8 00F1F980 		bmi	.L671
 5583              	.LVL443:
 5584              	.L670:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5585              		.loc 1 376 6 view .LVU1802
 5586              	.LBE645:
 5587              	.LBE644:
2869:src/keys.c    **** 		return process_labellist((const keycode)c);
 5588              		.loc 1 2869 2 is_stmt 1 view .LVU1803
2869:src/keys.c    **** 		return process_labellist((const keycode)c);
 5589              		.loc 1 2869 6 is_stmt 0 view .LVU1804
 5590 02fc 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2869:src/keys.c    **** 		return process_labellist((const keycode)c);
 5591              		.loc 1 2869 5 view .LVU1805
 5592 0300 4B07     		lsls	r3, r1, #29
 5593 0302 00F1A185 		bmi	.L1104
2872:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5594              		.loc 1 2872 2 is_stmt 1 view .LVU1806
2872:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5595              		.loc 1 2872 5 is_stmt 0 view .LVU1807
 5596 0306 0807     		lsls	r0, r1, #28
 5597 0308 00F1E886 		bmi	.L1105
2875:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5598              		.loc 1 2875 2 is_stmt 1 view .LVU1808
2875:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5599              		.loc 1 2875 5 is_stmt 0 view .LVU1809
 5600 030c 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5601 0310 002B     		cmp	r3, #0
 5602 0312 40F0AB87 		bne	.L1106
2878:src/keys.c    **** #ifndef INFRARED
 5603              		.loc 1 2878 2 is_stmt 1 view .LVU1810
2878:src/keys.c    **** #ifndef INFRARED
 5604              		.loc 1 2878 6 is_stmt 0 view .LVU1811
 5605 0316 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2878:src/keys.c    **** #ifndef INFRARED
 5606              		.loc 1 2878 5 view .LVU1812
 5607 031a 1807     		lsls	r0, r3, #28
 5608 031c 00F1B787 		bmi	.L1107
2891:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5609              		.loc 1 2891 2 is_stmt 1 view .LVU1813
2891:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5610              		.loc 1 2891 5 is_stmt 0 view .LVU1814
 5611 0320 12F0020B 		ands	fp, r2, #2
ARM GAS  /tmp/cceb4mPP.s 			page 183


 5612 0324 41F0E580 		bne	.L1108
2894:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5613              		.loc 1 2894 3 is_stmt 1 view .LVU1815
2894:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5614              		.loc 1 2894 24 is_stmt 0 view .LVU1816
 5615 0328 0AF1FF32 		add	r2, r10, #-1
2894:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5616              		.loc 1 2894 6 view .LVU1817
 5617 032c D2B2     		uxtb	r2, r2
 5618 032e 012A     		cmp	r2, #1
 5619 0330 41F22681 		bls	.L1109
2896:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5620              		.loc 1 2896 3 is_stmt 1 view .LVU1818
2896:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5621              		.loc 1 2896 6 is_stmt 0 view .LVU1819
 5622 0334 BAF1030F 		cmp	r10, #3
 5623 0338 01F01180 		beq	.L1110
2899:src/keys.c    **** 	}
 5624              		.loc 1 2899 3 is_stmt 1 view .LVU1820
 5625              	.LVL444:
 5626              	.LBB660:
 5627              	.LBI660:
 673:src/keys.c    **** {
 5628              		.loc 1 673 12 view .LVU1821
 5629              	.LBB661:
 675:src/keys.c    **** 		// Row 1
 5630              		.loc 1 675 2 view .LVU1822
 722:src/keys.c    **** 	int op = op_map[lc];
 5631              		.loc 1 722 2 view .LVU1823
 5632              	.LBB662:
 5633              	.LBI662:
 134:src/keys.c    **** {
 5634              		.loc 1 134 12 view .LVU1824
 5635              	.LBB663:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5636              		.loc 1 136 2 view .LVU1825
 146:src/keys.c    **** }
 5637              		.loc 1 146 2 view .LVU1826
 146:src/keys.c    **** }
 5638              		.loc 1 146 2 is_stmt 0 view .LVU1827
 5639              	.LBE663:
 5640              	.LBE662:
 723:src/keys.c    **** 	
 5641              		.loc 1 723 2 is_stmt 1 view .LVU1828
 728:src/keys.c    **** 	  switch (c) {
 5642              		.loc 1 728 6 is_stmt 0 view .LVU1829
 5643 033c B54A     		ldr	r2, .L1158
 5644              	.LBB666:
 5645              	.LBB664:
 146:src/keys.c    **** }
 5646              		.loc 1 146 23 view .LVU1830
 5647 033e B648     		ldr	r0, .L1158+4
 5648              	.LBE664:
 5649              	.LBE666:
 728:src/keys.c    **** 	  switch (c) {
 5650              		.loc 1 728 6 view .LVU1831
 5651 0340 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cceb4mPP.s 			page 184


 5652              	.LBB667:
 5653              	.LBB665:
 146:src/keys.c    **** }
 5654              		.loc 1 146 23 view .LVU1832
 5655 0342 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5656              	.LBE665:
 5657              	.LBE667:
 723:src/keys.c    **** 	
 5658              		.loc 1 723 17 view .LVU1833
 5659 0346 B548     		ldr	r0, .L1158+8
 728:src/keys.c    **** 	  switch (c) {
 5660              		.loc 1 728 6 view .LVU1834
 5661 0348 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 723:src/keys.c    **** 	
 5662              		.loc 1 723 17 view .LVU1835
 5663 034c 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5664              	.LVL445:
 728:src/keys.c    **** 	  switch (c) {
 5665              		.loc 1 728 5 view .LVU1836
 5666 0350 D207     		lsls	r2, r2, #31
 723:src/keys.c    **** 	
 5667              		.loc 1 723 6 view .LVU1837
 5668 0352 D346     		mov	fp, r10
 5669              	.LVL446:
 727:src/keys.c    **** 	if (UState.intm) {
 5670              		.loc 1 727 2 is_stmt 1 view .LVU1838
 728:src/keys.c    **** 	  switch (c) {
 5671              		.loc 1 728 2 view .LVU1839
 728:src/keys.c    **** 	  switch (c) {
 5672              		.loc 1 728 5 is_stmt 0 view .LVU1840
 5673 0354 00F1AE81 		bmi	.L1111
 759:src/keys.c    **** 	  }
 5674              		.loc 1 759 12 is_stmt 1 view .LVU1841
 764:src/keys.c    **** #ifdef DM42
 5675              		.loc 1 764 2 view .LVU1842
 5676 0358 2D2C     		cmp	r4, #45
 5677 035a 00F21981 		bhi	.L594
 5678 035e DFE814F0 		tbh	[pc, r4, lsl #1]
 5679              	.L856:
 5680 0362 B90A     		.2byte	(.L818-.L856)/2
 5681 0364 B20A     		.2byte	(.L819-.L856)/2
 5682 0366 1701     		.2byte	(.L594-.L856)/2
 5683 0368 7B02     		.2byte	(.L817-.L856)/2
 5684 036a 1701     		.2byte	(.L594-.L856)/2
 5685 036c 1701     		.2byte	(.L594-.L856)/2
 5686 036e 2F02     		.2byte	(.L813-.L856)/2
 5687 0370 2F02     		.2byte	(.L813-.L856)/2
 5688 0372 1701     		.2byte	(.L594-.L856)/2
 5689 0374 1701     		.2byte	(.L594-.L856)/2
 5690 0376 1701     		.2byte	(.L594-.L856)/2
 5691 0378 1701     		.2byte	(.L594-.L856)/2
 5692 037a 1701     		.2byte	(.L594-.L856)/2
 5693 037c 1701     		.2byte	(.L594-.L856)/2
 5694 037e 1701     		.2byte	(.L594-.L856)/2
 5695 0380 1701     		.2byte	(.L594-.L856)/2
 5696 0382 3A02     		.2byte	(.L816-.L856)/2
 5697 0384 1701     		.2byte	(.L594-.L856)/2
ARM GAS  /tmp/cceb4mPP.s 			page 185


 5698 0386 2F02     		.2byte	(.L813-.L856)/2
 5699 0388 1701     		.2byte	(.L594-.L856)/2
 5700 038a 1701     		.2byte	(.L594-.L856)/2
 5701 038c 1701     		.2byte	(.L594-.L856)/2
 5702 038e 1701     		.2byte	(.L594-.L856)/2
 5703 0390 1701     		.2byte	(.L594-.L856)/2
 5704 0392 1701     		.2byte	(.L594-.L856)/2
 5705 0394 1701     		.2byte	(.L594-.L856)/2
 5706 0396 1701     		.2byte	(.L594-.L856)/2
 5707 0398 1701     		.2byte	(.L594-.L856)/2
 5708 039a 1701     		.2byte	(.L594-.L856)/2
 5709 039c 1701     		.2byte	(.L594-.L856)/2
 5710 039e 1701     		.2byte	(.L594-.L856)/2
 5711 03a0 1701     		.2byte	(.L594-.L856)/2
 5712 03a2 1701     		.2byte	(.L594-.L856)/2
 5713 03a4 1701     		.2byte	(.L594-.L856)/2
 5714 03a6 1701     		.2byte	(.L594-.L856)/2
 5715 03a8 1701     		.2byte	(.L594-.L856)/2
 5716 03aa 1701     		.2byte	(.L594-.L856)/2
 5717 03ac 1701     		.2byte	(.L594-.L856)/2
 5718 03ae 1701     		.2byte	(.L594-.L856)/2
 5719 03b0 1701     		.2byte	(.L594-.L856)/2
 5720 03b2 1701     		.2byte	(.L594-.L856)/2
 5721 03b4 1701     		.2byte	(.L594-.L856)/2
 5722 03b6 1701     		.2byte	(.L594-.L856)/2
 5723 03b8 1701     		.2byte	(.L594-.L856)/2
 5724 03ba 8102     		.2byte	(.L815-.L856)/2
 5725 03bc A001     		.2byte	(.L820-.L856)/2
 5726              	.LVL447:
 5727              		.p2align 1
 5728              	.L1072:
 764:src/keys.c    **** #ifdef DM42
 5729              		.loc 1 764 2 is_stmt 0 view .LVU1843
 5730 03be 984C     		ldr	r4, .L1158+12
 5731              	.LBE661:
 5732              	.LBE660:
 5733              	.LBE1176:
 5734              	.LBE1228:
3163:src/keys.c    ****   watchdog();
 5735              		.loc 1 3163 3 is_stmt 1 view .LVU1844
3163:src/keys.c    ****   watchdog();
 5736              		.loc 1 3163 17 is_stmt 0 view .LVU1845
 5737 03c0 0023     		movs	r3, #0
 5738 03c2 2360     		str	r3, [r4]
3164:src/keys.c    **** }
 5739              		.loc 1 3164 13 is_stmt 1 view .LVU1846
 5740 03c4 9AE6     		b	.L534
 5741              	.LVL448:
 5742              	.L571:
 5743              	.LBB1229:
 5744              	.LBB1177:
2765:src/keys.c    **** 	set_pc(0);
 5745              		.loc 1 2765 7 view .LVU1847
2765:src/keys.c    **** 	set_pc(0);
 5746              		.loc 1 2765 11 is_stmt 0 view .LVU1848
 5747 03c6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
2765:src/keys.c    **** 	set_pc(0);
ARM GAS  /tmp/cceb4mPP.s 			page 186


 5748              		.loc 1 2765 10 view .LVU1849
 5749 03c8 3BB1     		cbz	r3, .L573
2765:src/keys.c    **** 	set_pc(0);
 5750              		.loc 1 2765 20 view .LVU1850
 5751 03ca 924B     		ldr	r3, .L1158
 5752 03cc 1B68     		ldr	r3, [r3]
 5753 03ce B3F8E037 		ldrh	r3, [r3, #2016]
2765:src/keys.c    **** 	set_pc(0);
 5754              		.loc 1 2765 17 view .LVU1851
 5755 03d2 9B0B     		lsrs	r3, r3, #14
 5756 03d4 032B     		cmp	r3, #3
 5757 03d6 00F02183 		beq	.L1112
 5758              	.L573:
2767:src/keys.c    ****       xeq_xrom();
 5759              		.loc 1 2767 7 is_stmt 1 view .LVU1852
2767:src/keys.c    ****       xeq_xrom();
 5760              		.loc 1 2767 13 is_stmt 0 view .LVU1853
 5761 03da 0027     		movs	r7, #0
 5762 03dc 2F70     		strb	r7, [r5]
2768:src/keys.c    ****       set_running_off();
 5763              		.loc 1 2768 7 is_stmt 1 view .LVU1854
 5764 03de FFF7FEFF 		bl	xeq_xrom
 5765              	.LVL449:
2769:src/keys.c    ****       DispMsg = "Stopped";
 5766              		.loc 1 2769 7 view .LVU1855
 5767 03e2 FFF7FEFF 		bl	set_running_off
 5768              	.LVL450:
2770:src/keys.c    ****       State2.disp_freeze = 0;
 5769              		.loc 1 2770 7 view .LVU1856
2771:src/keys.c    ****       return STATE_UNFINISHED;
 5770              		.loc 1 2771 26 is_stmt 0 view .LVU1857
 5771 03e6 8F4B     		ldr	r3, .L1158+16
2770:src/keys.c    ****       State2.disp_freeze = 0;
 5772              		.loc 1 2770 15 view .LVU1858
 5773 03e8 8F49     		ldr	r1, .L1158+20
2771:src/keys.c    ****       return STATE_UNFINISHED;
 5774              		.loc 1 2771 26 view .LVU1859
 5775 03ea DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
2770:src/keys.c    ****       State2.disp_freeze = 0;
 5776              		.loc 1 2770 15 view .LVU1860
 5777 03ec 8F48     		ldr	r0, .L1158+24
 5778 03ee 0860     		str	r0, [r1]
2771:src/keys.c    ****       return STATE_UNFINISHED;
 5779              		.loc 1 2771 7 is_stmt 1 view .LVU1861
2771:src/keys.c    ****       return STATE_UNFINISHED;
 5780              		.loc 1 2771 26 is_stmt 0 view .LVU1862
 5781 03f0 67F30412 		bfi	r2, r7, #4, #1
 5782 03f4 DA75     		strb	r2, [r3, #23]
2772:src/keys.c    ****     }
 5783              		.loc 1 2772 7 is_stmt 1 view .LVU1863
2772:src/keys.c    ****     }
 5784              		.loc 1 2772 14 is_stmt 0 view .LVU1864
 5785 03f6 4FF0330B 		mov	fp, #51
 5786 03fa 55E6     		b	.L565
 5787              	.LVL451:
 5788              	.L555:
2772:src/keys.c    ****     }
ARM GAS  /tmp/cceb4mPP.s 			page 187


 5789              		.loc 1 2772 14 view .LVU1865
 5790 03fc 8C4E     		ldr	r6, .L1158+28
 5791 03fe 3368     		ldr	r3, [r6]
 5792 0400 A7E6     		b	.L537
 5793              	.L1081:
2772:src/keys.c    ****     }
 5794              		.loc 1 2772 14 view .LVU1866
 5795              	.LBE1177:
 5796              	.LBE1229:
3017:src/keys.c    ****       finish_RPN(); // RPN
 5797              		.loc 1 3017 7 is_stmt 1 view .LVU1867
 5798 0402 8D20     		movs	r0, #141
 5799 0404 FFF7FEFF 		bl	clr_dot
 5800              	.LVL452:
3018:src/keys.c    ****     }
 5801              		.loc 1 3018 7 view .LVU1868
 5802 0408 FFF7FEFF 		bl	finish_RPN
 5803              	.LVL453:
 5804 040c 1BE6     		b	.L553
 5805              	.LVL454:
 5806              	.L1084:
3077:src/keys.c    ****     }
 5807              		.loc 1 3077 7 view .LVU1869
 5808 040e FFF7FEFF 		bl	finish_RPN
 5809              	.LVL455:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 5810              		.loc 1 2931 7 is_stmt 0 view .LVU1870
 5811 0412 0027     		movs	r7, #0
 5812 0414 48E6     		b	.L565
 5813              	.LVL456:
 5814              	.L556:
3058:src/keys.c    **** #ifndef CONSOLE
 5815              		.loc 1 3058 7 is_stmt 1 view .LVU1871
 5816 0416 874B     		ldr	r3, .L1158+32
 5817 0418 8D20     		movs	r0, #141
 5818 041a 1968     		ldr	r1, [r3]
 5819 041c FFF7FEFF 		bl	dot
 5820              	.LVL457:
3060:src/keys.c    **** 	if (!WasDataEntry) {
 5821              		.loc 1 3060 7 view .LVU1872
3060:src/keys.c    **** 	if (!WasDataEntry) {
 5822              		.loc 1 3060 11 is_stmt 0 view .LVU1873
 5823 0420 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3060:src/keys.c    **** 	if (!WasDataEntry) {
 5824              		.loc 1 3060 10 view .LVU1874
 5825 0424 9806     		lsls	r0, r3, #26
 5826 0426 3FF569AE 		bmi	.L534
3061:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5827              		.loc 1 3061 2 is_stmt 1 view .LVU1875
3061:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5828              		.loc 1 3061 6 is_stmt 0 view .LVU1876
 5829 042a 834B     		ldr	r3, .L1158+36
3061:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5830              		.loc 1 3061 5 view .LVU1877
 5831 042c 1B68     		ldr	r3, [r3]
 5832 042e 002B     		cmp	r3, #0
 5833 0430 40F05F82 		bne	.L567
ARM GAS  /tmp/cceb4mPP.s 			page 188


3063:src/keys.c    **** 	}
 5834              		.loc 1 3063 4 is_stmt 1 view .LVU1878
 5835              		.loc 1 3165 1 is_stmt 0 view .LVU1879
 5836 0434 03B0     		add	sp, sp, #12
 5837              		.cfi_remember_state
 5838              		.cfi_def_cfa_offset 36
 5839              		@ sp needed
 5840 0436 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5841              		.cfi_restore 14
 5842              		.cfi_restore 11
 5843              		.cfi_restore 10
 5844              		.cfi_restore 9
 5845              		.cfi_restore 8
 5846              		.cfi_restore 7
 5847              		.cfi_restore 6
 5848              		.cfi_restore 5
 5849              		.cfi_restore 4
 5850              		.cfi_def_cfa_offset 0
3063:src/keys.c    **** 	}
 5851              		.loc 1 3063 4 view .LVU1880
 5852 043a FFF7FEBF 		b	display
 5853              	.LVL458:
 5854              	.L1082:
 5855              		.cfi_restore_state
3046:src/keys.c    ****       else {
 5856              		.loc 1 3046 2 is_stmt 1 view .LVU1881
 5857 043e FFF7FEFF 		bl	xeq_sst_bst
 5858              	.LVL459:
 5859 0442 7B4E     		ldr	r6, .L1158+28
 5860 0444 27E6     		b	.L558
 5861              	.L1085:
2980:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5862              		.loc 1 2980 28 is_stmt 0 discriminator 1 view .LVU1882
 5863 0446 FFF7FEFF 		bl	shift_down
 5864              	.LVL460:
2980:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5865              		.loc 1 2980 25 discriminator 1 view .LVU1883
 5866 044a 0028     		cmp	r0, #0
 5867 044c 3FF479AE 		beq	.L540
2982:src/keys.c    ****       }
 5868              		.loc 1 2982 2 is_stmt 1 view .LVU1884
2982:src/keys.c    ****       }
 5869              		.loc 1 2982 16 is_stmt 0 view .LVU1885
 5870 0450 744B     		ldr	r3, .L1158+16
 5871 0452 0022     		movs	r2, #0
 5872 0454 1A74     		strb	r2, [r3, #16]
 5873 0456 74E6     		b	.L540
 5874              	.L543:
2970:src/keys.c    **** 	  /*
 5875              		.loc 1 2970 10 is_stmt 1 view .LVU1886
2970:src/keys.c    **** 	  /*
 5876              		.loc 1 2970 14 is_stmt 0 view .LVU1887
 5877 0458 FFF7FEFF 		bl	keyticks
 5878              	.LVL461:
2970:src/keys.c    **** 	  /*
 5879              		.loc 1 2970 13 view .LVU1888
 5880 045c 0C28     		cmp	r0, #12
ARM GAS  /tmp/cceb4mPP.s 			page 189


 5881 045e 7FF76BAE 		ble	.L542
2974:src/keys.c    **** 	  message("NULL", CNULL);
 5882              		.loc 1 2974 4 is_stmt 1 view .LVU1889
2975:src/keys.c    **** 	  // Force display update on key-up
 5883              		.loc 1 2975 4 is_stmt 0 view .LVU1890
 5884 0462 7648     		ldr	r0, .L1158+40
2974:src/keys.c    **** 	  message("NULL", CNULL);
 5885              		.loc 1 2974 11 view .LVU1891
 5886 0464 3760     		str	r7, [r6]
2975:src/keys.c    **** 	  // Force display update on key-up
 5887              		.loc 1 2975 4 is_stmt 1 view .LVU1892
 5888 0466 3946     		mov	r1, r7
 5889 0468 FFF7FEFF 		bl	message
 5890              	.LVL462:
2977:src/keys.c    **** 	}
 5891              		.loc 1 2977 4 view .LVU1893
2977:src/keys.c    **** 	}
 5892              		.loc 1 2977 21 is_stmt 0 view .LVU1894
 5893 046c 6D4B     		ldr	r3, .L1158+16
 5894 046e DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 5895 0470 67F34512 		bfi	r2, r7, #5, #1
 5896 0474 DA75     		strb	r2, [r3, #23]
 5897 0476 5FE6     		b	.L542
 5898              	.LVL463:
 5899              	.L1093:
 5900              	.LBB1230:
 5901              	.LBB1178:
2818:src/keys.c    **** 
 5902              		.loc 1 2818 3 is_stmt 1 view .LVU1895
 5903              	.LBB685:
 5904              	.LBB686:
1229:src/keys.c    **** 	State2.dot = 0;
 5905              		.loc 1 1229 15 is_stmt 0 view .LVU1896
 5906 0478 22F06203 		bic	r3, r2, #98
 5907              	.LBE686:
 5908              	.LBE685:
2818:src/keys.c    **** 
 5909              		.loc 1 2818 10 view .LVU1897
 5910 047c E4B2     		uxtb	r4, r4
 5911              	.LVL464:
 5912              	.LBB700:
 5913              	.LBI685:
1219:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 5914              		.loc 1 1219 12 is_stmt 1 view .LVU1898
 5915              	.LBB696:
1220:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 5916              		.loc 1 1220 2 view .LVU1899
1225:src/keys.c    **** 	int f = State2.dot;
 5917              		.loc 1 1225 2 view .LVU1900
1229:src/keys.c    **** 	State2.dot = 0;
 5918              		.loc 1 1229 15 is_stmt 0 view .LVU1901
 5919 047e 88F81530 		strb	r3, [r8, #21]
1225:src/keys.c    **** 	int f = State2.dot;
 5920              		.loc 1 1225 20 view .LVU1902
 5921 0482 C2F3400A 		ubfx	r10, r2, #1, #1
 5922              	.LVL465:
1226:src/keys.c    **** 
ARM GAS  /tmp/cceb4mPP.s 			page 190


 5923              		.loc 1 1226 2 is_stmt 1 view .LVU1903
1226:src/keys.c    **** 
 5924              		.loc 1 1226 16 is_stmt 0 view .LVU1904
 5925 0486 C2F38019 		ubfx	r9, r2, #6, #1
 5926              	.LVL466:
1228:src/keys.c    **** 	State2.cmplx = 0;
 5927              		.loc 1 1228 2 is_stmt 1 view .LVU1905
1229:src/keys.c    **** 	State2.dot = 0;
 5928              		.loc 1 1229 2 view .LVU1906
1230:src/keys.c    **** #ifdef DM42
 5929              		.loc 1 1230 2 view .LVU1907
1232:src/keys.c    **** #endif
 5930              		.loc 1 1232 2 view .LVU1908
 5931              	.LBB687:
 5932              	.LBI687:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 5933              		.loc 1 102 13 view .LVU1909
 5934              	.LBE687:
 5935              	.LBE696:
 5936              	.LBE700:
 5937              	.LBE1178:
 5938              	.LBE1230:
 103:src/keys.c    **** }
 5939              		.loc 1 103 2 view .LVU1910
 5940              	.LBB1231:
 5941              	.LBB1179:
 5942              	.LBB701:
 5943              	.LBB697:
 5944              	.LBB694:
 5945              	.LBB688:
 5946              	.LBI688:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 5947              		.loc 1 92 20 view .LVU1911
 5948              	.LBB689:
  93:src/keys.c    **** 	State2.shifts = shift;
 5949              		.loc 1 93 2 view .LVU1912
 5950              	.LBB690:
 5951              	.LBI690:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5952              		.loc 1 84 13 view .LVU1913
 5953              	.LBB691:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5954              		.loc 1 85 2 view .LVU1914
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5955              		.loc 1 85 18 is_stmt 0 view .LVU1915
 5956 048a FFF7FEFF 		bl	shift_down
 5957              	.LVL467:
  86:src/keys.c    **** }
 5958              		.loc 1 86 2 is_stmt 1 view .LVU1916
 5959              	.LBE691:
 5960              	.LBE690:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5961              		.loc 1 94 2 view .LVU1917
 5962              	.LBE689:
 5963              	.LBE688:
 5964              	.LBE694:
1234:src/keys.c    **** 
ARM GAS  /tmp/cceb4mPP.s 			page 191


 5965              		.loc 1 1234 2 is_stmt 0 view .LVU1918
 5966 048e 2A2C     		cmp	r4, #42
 5967              	.LBB695:
 5968              	.LBB693:
 5969              	.LBB692:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5970              		.loc 1 94 16 view .LVU1919
 5971 0490 88F810B0 		strb	fp, [r8, #16]
  95:src/keys.c    **** 	return r;
 5972              		.loc 1 95 2 is_stmt 1 view .LVU1920
  95:src/keys.c    **** 	return r;
 5973              		.loc 1 95 19 is_stmt 0 view .LVU1921
 5974 0494 88F80DB0 		strb	fp, [r8, #13]
  96:src/keys.c    **** }
 5975              		.loc 1 96 2 is_stmt 1 view .LVU1922
 5976              	.LVL468:
  96:src/keys.c    **** }
 5977              		.loc 1 96 2 is_stmt 0 view .LVU1923
 5978              	.LBE692:
 5979              	.LBE693:
 5980              	.LBE695:
1234:src/keys.c    **** 
 5981              		.loc 1 1234 2 is_stmt 1 view .LVU1924
 5982 0498 00F25483 		bhi	.L615
 5983 049c 282C     		cmp	r4, #40
 5984 049e 00F25884 		bhi	.L616
 5985 04a2 013C     		subs	r4, r4, #1
 5986              	.LVL469:
1234:src/keys.c    **** 
 5987              		.loc 1 1234 2 is_stmt 0 view .LVU1925
 5988 04a4 E3B2     		uxtb	r3, r4
 5989 04a6 022B     		cmp	r3, #2
 5990 04a8 00F28781 		bhi	.L1071
1239:src/keys.c    **** 
 5991              		.loc 1 1239 3 is_stmt 1 view .LVU1926
1239:src/keys.c    **** 
 5992              		.loc 1 1239 54 is_stmt 0 view .LVU1927
 5993 04ac 644A     		ldr	r2, .L1158+44
 5994 04ae 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 5995 04b2 02EB4404 		add	r4, r2, r4, lsl #1
 5996              	.LVL470:
1239:src/keys.c    **** 
 5997              		.loc 1 1239 27 view .LVU1928
 5998 04b6 BAF1000F 		cmp	r10, #0
1239:src/keys.c    **** 
 5999              		.loc 1 1239 54 view .LVU1929
 6000 04ba 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1239:src/keys.c    **** 
 6001              		.loc 1 1239 27 view .LVU1930
 6002 04be 14BF     		ite	ne
 6003 04c0 4FF4A062 		movne	r2, #1280
 6004 04c4 4FF40072 		moveq	r2, #512
1239:src/keys.c    **** 
 6005              		.loc 1 1239 37 view .LVU1931
 6006 04c8 4BEA020B 		orr	fp, fp, r2
 6007 04cc 5846     		mov	r0, fp
 6008              	.LVL471:
ARM GAS  /tmp/cceb4mPP.s 			page 192


 6009              	.L620:
1239:src/keys.c    **** 
 6010              		.loc 1 1239 37 view .LVU1932
 6011              	.LBE697:
 6012              	.LBE701:
 6013              	.LBE1179:
 6014              	.LBE1231:
3124:src/keys.c    **** 	NonProgrammable = 0;
 6015              		.loc 1 3124 7 is_stmt 1 view .LVU1933
3124:src/keys.c    **** 	NonProgrammable = 0;
 6016              		.loc 1 3124 10 is_stmt 0 view .LVU1934
 6017 04ce 13F04003 		ands	r3, r3, #64
 6018 04d2 00F06384 		beq	.L1054
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6019              		.loc 1 3125 2 is_stmt 1 view .LVU1935
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6020              		.loc 1 3125 18 is_stmt 0 view .LVU1936
 6021 04d6 5B4B     		ldr	r3, .L1158+48
 6022 04d8 0022     		movs	r2, #0
 6023 04da 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6024              		.loc 1 3126 2 is_stmt 1 view .LVU1937
 6025              	.LVL472:
 6026              	.L833:
3139:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6027              		.loc 1 3139 4 view .LVU1938
3139:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6028              		.loc 1 3139 11 is_stmt 0 view .LVU1939
 6029 04dc 5A4A     		ldr	r2, .L1158+52
3140:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6030              		.loc 1 3140 25 view .LVU1940
 6031 04de 5B4B     		ldr	r3, .L1158+56
3139:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6032              		.loc 1 3139 11 view .LVU1941
 6033 04e0 1060     		str	r0, [r2]
3140:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6034              		.loc 1 3140 4 is_stmt 1 view .LVU1942
3140:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6035              		.loc 1 3140 25 is_stmt 0 view .LVU1943
 6036 04e2 0122     		movs	r2, #1
 6037 04e4 4E4C     		ldr	r4, .L1158+12
 6038 04e6 1A60     		str	r2, [r3]
3141:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 6039              		.loc 1 3141 4 is_stmt 1 view .LVU1944
 6040 04e8 FFF7FEFF 		bl	finish_RPN
 6041              	.LVL473:
3142:src/keys.c    **** 	}
 6042              		.loc 1 3142 4 view .LVU1945
 6043 04ec 04E6     		b	.L839
 6044              	.LVL474:
 6045              	.L671:
 6046              	.LBB1232:
 6047              	.LBB1180:
2867:src/keys.c    **** 
 6048              		.loc 1 2867 3 view .LVU1946
 6049              	.LBB702:
 6050              	.LBI702:
ARM GAS  /tmp/cceb4mPP.s 			page 193


2352:src/keys.c    **** 	enum shifts shift = reset_shift();
 6051              		.loc 1 2352 12 view .LVU1947
 6052              	.LBB703:
2353:src/keys.c    **** 	unsigned int ch = 0;
 6053              		.loc 1 2353 2 view .LVU1948
 6054              	.LBB704:
 6055              	.LBI704:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 6056              		.loc 1 102 13 view .LVU1949
 6057              	.LBE704:
 6058              	.LBE703:
 6059              	.LBE702:
 6060              	.LBE1180:
 6061              	.LBE1232:
 103:src/keys.c    **** }
 6062              		.loc 1 103 2 view .LVU1950
 6063              	.LBB1233:
 6064              	.LBB1181:
 6065              	.LBB736:
 6066              	.LBB730:
 6067              	.LBB711:
 6068              	.LBB705:
 6069              	.LBI705:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 6070              		.loc 1 92 20 view .LVU1951
 6071              	.LBB706:
  93:src/keys.c    **** 	State2.shifts = shift;
 6072              		.loc 1 93 2 view .LVU1952
 6073              	.LBB707:
 6074              	.LBI707:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 6075              		.loc 1 84 13 view .LVU1953
 6076              	.LBB708:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6077              		.loc 1 85 2 view .LVU1954
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6078              		.loc 1 85 18 is_stmt 0 view .LVU1955
 6079 04ee FFF7FEFF 		bl	shift_down
 6080              	.LVL475:
  86:src/keys.c    **** }
 6081              		.loc 1 86 2 is_stmt 1 view .LVU1956
  86:src/keys.c    **** }
 6082              		.loc 1 86 52 is_stmt 0 view .LVU1957
 6083 04f2 0146     		mov	r1, r0
 6084 04f4 08B9     		cbnz	r0, .L669
 6085 04f6 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 6086              	.L669:
 6087              	.LVL476:
  86:src/keys.c    **** }
 6088              		.loc 1 86 52 view .LVU1958
 6089              	.LBE708:
 6090              	.LBE707:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 6091              		.loc 1 94 2 is_stmt 1 view .LVU1959
 6092              	.LBE706:
 6093              	.LBE705:
 6094              	.LBE711:
ARM GAS  /tmp/cceb4mPP.s 			page 194


2357:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6095              		.loc 1 2357 5 is_stmt 0 view .LVU1960
 6096 04fa 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 6097              	.LBB712:
 6098              	.LBB710:
 6099              	.LBB709:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 6100              		.loc 1 94 16 view .LVU1961
 6101 04fe 0023     		movs	r3, #0
 6102 0500 88F81030 		strb	r3, [r8, #16]
  95:src/keys.c    **** 	return r;
 6103              		.loc 1 95 2 is_stmt 1 view .LVU1962
  95:src/keys.c    **** 	return r;
 6104              		.loc 1 95 19 is_stmt 0 view .LVU1963
 6105 0504 88F80D30 		strb	r3, [r8, #13]
  96:src/keys.c    **** }
 6106              		.loc 1 96 2 is_stmt 1 view .LVU1964
 6107              	.LVL477:
  96:src/keys.c    **** }
 6108              		.loc 1 96 2 is_stmt 0 view .LVU1965
 6109              	.LBE709:
 6110              	.LBE710:
 6111              	.LBE712:
2354:src/keys.c    **** 	unsigned int opcode;
 6112              		.loc 1 2354 2 is_stmt 1 view .LVU1966
2355:src/keys.c    **** 
 6113              		.loc 1 2355 2 view .LVU1967
2357:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6114              		.loc 1 2357 2 view .LVU1968
2357:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6115              		.loc 1 2357 5 is_stmt 0 view .LVU1969
 6116 0508 002A     		cmp	r2, #0
 6117 050a 40F07387 		bne	.L1113
2366:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 6118              		.loc 1 2366 2 is_stmt 1 view .LVU1970
 6119 050e 102C     		cmp	r4, #16
 6120 0510 01F07D81 		beq	.L674
 6121 0514 242C     		cmp	r4, #36
 6122 0516 01F06681 		beq	.L675
 6123 051a 0C2C     		cmp	r4, #12
 6124 051c 01F04481 		beq	.L1114
 6125              	.L676:
2399:src/keys.c    **** 	if (ch == 0)
 6126              		.loc 1 2399 2 view .LVU1971
 6127              	.LBB713:
 6128              	.LBB714:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6129              		.loc 1 434 6 is_stmt 0 view .LVU1972
 6130 0520 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6131              	.LVL478:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6132              		.loc 1 434 6 view .LVU1973
 6133              	.LBE714:
 6134              	.LBI713:
 384:src/keys.c    **** {
 6135              		.loc 1 384 12 is_stmt 1 view .LVU1974
 6136              	.LBB719:
ARM GAS  /tmp/cceb4mPP.s 			page 195


 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6137              		.loc 1 386 2 view .LVU1975
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6138              		.loc 1 434 2 view .LVU1976
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6139              		.loc 1 434 5 is_stmt 0 view .LVU1977
 6140 0524 DA06     		lsls	r2, r3, #27
 6141 0526 03D5     		bpl	.L679
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6142              		.loc 1 435 3 is_stmt 1 view .LVU1978
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6143              		.loc 1 435 6 is_stmt 0 view .LVU1979
 6144 0528 0029     		cmp	r1, #0
 6145 052a 41F0A383 		bne	.L1115
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 6146              		.loc 1 436 10 view .LVU1980
 6147 052e 0421     		movs	r1, #4
 6148              	.LVL479:
 6149              	.L679:
 440:src/keys.c    **** }
 6150              		.loc 1 440 2 is_stmt 1 view .LVU1981
 6151              	.LBB715:
 6152              	.LBI715:
 119:src/keys.c    **** {
 6153              		.loc 1 119 12 view .LVU1982
 6154              	.LBB716:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6155              		.loc 1 121 2 view .LVU1983
 131:src/keys.c    **** }
 6156              		.loc 1 131 2 view .LVU1984
 131:src/keys.c    **** }
 6157              		.loc 1 131 23 is_stmt 0 view .LVU1985
 6158 0530 474B     		ldr	r3, .L1158+60
 6159              	.LBE716:
 6160              	.LBE715:
 440:src/keys.c    **** }
 6161              		.loc 1 440 49 view .LVU1986
 6162 0532 484A     		ldr	r2, .L1158+64
 6163              	.LBB718:
 6164              	.LBB717:
 131:src/keys.c    **** }
 6165              		.loc 1 131 23 view .LVU1987
 6166 0534 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 6167              	.LBE717:
 6168              	.LBE718:
 440:src/keys.c    **** }
 6169              		.loc 1 440 49 view .LVU1988
 6170 0536 0620     		movs	r0, #6
 6171 0538 00FB0323 		mla	r3, r0, r3, r2
 6172              	.LBE719:
 6173              	.LBE713:
2399:src/keys.c    **** 	if (ch == 0)
 6174              		.loc 1 2399 5 view .LVU1989
 6175 053c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 6176              	.LVL480:
2400:src/keys.c    **** 		return STATE_UNFINISHED;
 6177              		.loc 1 2400 2 is_stmt 1 view .LVU1990
ARM GAS  /tmp/cceb4mPP.s 			page 196


2400:src/keys.c    **** 		return STATE_UNFINISHED;
 6178              		.loc 1 2400 5 is_stmt 0 view .LVU1991
 6179 053e 002B     		cmp	r3, #0
 6180 0540 00F03B81 		beq	.L1071
 6181              	.L673:
2403:src/keys.c    **** 		State2.digval = ch;
 6182              		.loc 1 2403 2 is_stmt 1 view .LVU1992
2403:src/keys.c    **** 		State2.digval = ch;
 6183              		.loc 1 2403 12 is_stmt 0 view .LVU1993
 6184 0544 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2403:src/keys.c    **** 		State2.digval = ch;
 6185              		.loc 1 2403 5 view .LVU1994
 6186 0548 002A     		cmp	r2, #0
 6187 054a 01F06E81 		beq	.L1116
2407:src/keys.c    **** 		State2.digval2 = ch;
 6188              		.loc 1 2407 9 is_stmt 1 view .LVU1995
2407:src/keys.c    **** 		State2.digval2 = ch;
 6189              		.loc 1 2407 12 is_stmt 0 view .LVU1996
 6190 054e 012A     		cmp	r2, #1
 6191 0550 01F06282 		beq	.L1117
2412:src/keys.c    **** 
 6192              		.loc 1 2412 2 is_stmt 1 view .LVU1997
 6193              	.LBB721:
 6194              	.LBI721:
2345:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 6195              		.loc 1 2345 13 view .LVU1998
 6196              	.LBB722:
2347:src/keys.c    **** 	if (! State2.alphas )
 6197              		.loc 1 2347 2 view .LVU1999
2347:src/keys.c    **** 	if (! State2.alphas )
 6198              		.loc 1 2347 15 is_stmt 0 view .LVU2000
 6199 0554 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
2348:src/keys.c    **** 		State2.alphashift = 0;
 6200              		.loc 1 2348 6 view .LVU2001
 6201 0558 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2347:src/keys.c    **** 	if (! State2.alphas )
 6202              		.loc 1 2347 15 view .LVU2002
 6203 055c 6FF3C301 		bfc	r1, #3, #1
 6204 0560 88F81510 		strb	r1, [r8, #21]
2348:src/keys.c    **** 		State2.alphashift = 0;
 6205              		.loc 1 2348 2 is_stmt 1 view .LVU2003
2348:src/keys.c    **** 		State2.alphashift = 0;
 6206              		.loc 1 2348 5 is_stmt 0 view .LVU2004
 6207 0564 12F00801 		ands	r1, r2, #8
2349:src/keys.c    **** }
 6208              		.loc 1 2349 3 is_stmt 1 view .LVU2005
2349:src/keys.c    **** }
 6209              		.loc 1 2349 21 is_stmt 0 view .LVU2006
 6210 0568 04BF     		itt	eq
 6211 056a 61F30412 		bfieq	r2, r1, #4, #1
 6212 056e 88F81620 		strbeq	r2, [r8, #22]
 6213              	.LVL481:
 6214              	.L678:
2349:src/keys.c    **** }
 6215              		.loc 1 2349 21 view .LVU2007
 6216              	.LBE722:
 6217              	.LBE721:
ARM GAS  /tmp/cceb4mPP.s 			page 197


2415:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6218              		.loc 1 2415 2 is_stmt 1 view .LVU2008
2417:src/keys.c    **** }
 6219              		.loc 1 2417 2 view .LVU2009
2415:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6220              		.loc 1 2415 21 is_stmt 0 view .LVU2010
 6221 0572 98F81FB0 		ldrb	fp, [r8, #31]	@ zero_extendqisi2
2416:src/keys.c    **** 	return opcode;
 6222              		.loc 1 2416 17 view .LVU2011
 6223 0576 B8F80810 		ldrh	r1, [r8, #8]
2416:src/keys.c    **** 	return opcode;
 6224              		.loc 1 2416 34 view .LVU2012
 6225 057a 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2415:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6226              		.loc 1 2415 29 view .LVU2013
 6227 057e 4FEA0B2B 		lsl	fp, fp, #8
2415:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6228              		.loc 1 2415 18 view .LVU2014
 6229 0582 0BF5704B 		add	fp, fp, #61440
2416:src/keys.c    **** 	return opcode;
 6230              		.loc 1 2416 9 view .LVU2015
 6231 0586 8B44     		add	fp, fp, r1
2416:src/keys.c    **** 	return opcode;
 6232              		.loc 1 2416 25 view .LVU2016
 6233 0588 0BEB024B 		add	fp, fp, r2, lsl #16
2415:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6234              		.loc 1 2415 9 view .LVU2017
 6235 058c 0BEB036B 		add	fp, fp, r3, lsl #24
 6236              	.LVL482:
 6237              	.L594:
2415:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6238              		.loc 1 2415 9 view .LVU2018
 6239              	.LBE730:
 6240              	.LBE736:
 6241              	.LBE1181:
 6242              	.LBE1233:
3088:src/keys.c    ****     case STATE_SST:
 6243              		.loc 1 3088 5 is_stmt 1 view .LVU2019
 6244 0590 ABF12B03 		sub	r3, fp, #43
 6245 0594 082B     		cmp	r3, #8
 6246 0596 5FD8     		bhi	.L822
 6247 0598 01A2     		adr	r2, .L823
 6248 059a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6249 059e 00BF     		.p2align 2
 6250              	.L823:
 6251 05a0 C5050000 		.word	.L828+1
 6252 05a4 C5050000 		.word	.L828+1
 6253 05a8 59060000 		.word	.L822+1
 6254 05ac E9050000 		.word	.L757+1
 6255 05b0 DB050000 		.word	.L755+1
 6256 05b4 FD050000 		.word	.L752+1
 6257 05b8 9D010000 		.word	.L574+1
 6258 05bc A9000000 		.word	.L565+1
 6259 05c0 A9000000 		.word	.L565+1
 6260              		.p2align 1
 6261              	.L828:
3115:src/keys.c    **** 	set_window(c);
ARM GAS  /tmp/cceb4mPP.s 			page 198


 6262              		.loc 1 3115 7 view .LVU2020
3115:src/keys.c    **** 	set_window(c);
 6263              		.loc 1 3115 12 is_stmt 0 view .LVU2021
 6264 05c4 FFF7FEFF 		bl	is_bad_cmdline
 6265              	.LVL483:
3115:src/keys.c    **** 	set_window(c);
 6266              		.loc 1 3115 10 view .LVU2022
 6267 05c8 0346     		mov	r3, r0
 6268 05ca 0028     		cmp	r0, #0
 6269 05cc 7FF46CAD 		bne	.L565
3116:src/keys.c    ****       break;
 6270              		.loc 1 3116 2 is_stmt 1 view .LVU2023
 6271 05d0 5846     		mov	r0, fp
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 6272              		.loc 1 2931 7 is_stmt 0 view .LVU2024
 6273 05d2 1F46     		mov	r7, r3
3116:src/keys.c    ****       break;
 6274              		.loc 1 3116 2 view .LVU2025
 6275 05d4 FFF7FEFF 		bl	set_window
 6276              	.LVL484:
 6277 05d8 66E5     		b	.L565
 6278              	.LVL485:
 6279              	.L755:
3096:src/keys.c    ****       break;
 6280              		.loc 1 3096 7 is_stmt 1 view .LVU2026
 6281 05da 4FF0FF30 		mov	r0, #-1
 6282 05de FFF7FEFF 		bl	xeq_sst_bst
 6283              	.LVL486:
3097:src/keys.c    **** 
 6284              		.loc 1 3097 7 view .LVU2027
 6285 05e2 4FF02F0B 		mov	fp, #47
 6286 05e6 5FE5     		b	.L565
 6287              	.L757:
3090:src/keys.c    ****       OpCodeDisplayPending = 0;
 6288              		.loc 1 3090 7 view .LVU2028
3090:src/keys.c    ****       OpCodeDisplayPending = 0;
 6289              		.loc 1 3090 14 is_stmt 0 view .LVU2029
 6290 05e8 1749     		ldr	r1, .L1158+52
3091:src/keys.c    ****       xeq_sst_bst(0);
 6291              		.loc 1 3091 28 view .LVU2030
 6292 05ea 184A     		ldr	r2, .L1158+56
3090:src/keys.c    ****       OpCodeDisplayPending = 0;
 6293              		.loc 1 3090 14 view .LVU2031
 6294 05ec 2E23     		movs	r3, #46
3091:src/keys.c    ****       xeq_sst_bst(0);
 6295              		.loc 1 3091 28 view .LVU2032
 6296 05ee 0020     		movs	r0, #0
3090:src/keys.c    ****       OpCodeDisplayPending = 0;
 6297              		.loc 1 3090 14 view .LVU2033
 6298 05f0 0B60     		str	r3, [r1]
3091:src/keys.c    ****       xeq_sst_bst(0);
 6299              		.loc 1 3091 7 is_stmt 1 view .LVU2034
3093:src/keys.c    **** 
 6300              		.loc 1 3093 7 is_stmt 0 view .LVU2035
 6301 05f2 9B46     		mov	fp, r3
3091:src/keys.c    ****       xeq_sst_bst(0);
 6302              		.loc 1 3091 28 view .LVU2036
ARM GAS  /tmp/cceb4mPP.s 			page 199


 6303 05f4 1060     		str	r0, [r2]
3092:src/keys.c    ****       break;
 6304              		.loc 1 3092 7 is_stmt 1 view .LVU2037
 6305 05f6 FFF7FEFF 		bl	xeq_sst_bst
 6306              	.LVL487:
3093:src/keys.c    **** 
 6307              		.loc 1 3093 7 view .LVU2038
 6308 05fa 55E5     		b	.L565
 6309              	.L752:
3100:src/keys.c    **** 	delprog();
 6310              		.loc 1 3100 7 view .LVU2039
3100:src/keys.c    **** 	delprog();
 6311              		.loc 1 3100 11 is_stmt 0 view .LVU2040
 6312 05fc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3100:src/keys.c    **** 	delprog();
 6313              		.loc 1 3100 10 view .LVU2041
 6314 0600 5A06     		lsls	r2, r3, #25
 6315 0602 40F1EC80 		bpl	.L829
3102:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6316              		.loc 1 3102 12 is_stmt 1 view .LVU2042
3102:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6317              		.loc 1 3102 15 is_stmt 0 view .LVU2043
 6318 0606 1C07     		lsls	r4, r3, #28
 6319 0608 00F10C82 		bmi	.L830
 6320              	.L1062:
 6321              	.LBB1234:
3105:src/keys.c    ****       }
 6322              		.loc 1 3105 9 view .LVU2044
 6323 060c 4FF0300B 		mov	fp, #48
 6324 0610 4AE5     		b	.L565
 6325              	.L1159:
 6326 0612 00BF     		.align	2
 6327              	.L1158:
 6328 0614 00000000 		.word	main_ram
 6329 0618 00000000 		.word	.LANCHOR18
 6330 061c 00000000 		.word	.LANCHOR22
 6331 0620 00000000 		.word	JustDisplayed
 6332 0624 00000000 		.word	StateWhileOn
 6333 0628 00000000 		.word	DispMsg
 6334 062c 0C000000 		.word	.LC2
 6335 0630 00000000 		.word	Running
 6336 0634 00000000 		.word	ShowRPN
 6337 0638 00000000 		.word	WasDataEntry
 6338 063c 04000000 		.word	.LC1
 6339 0640 00000000 		.word	.LANCHOR13
 6340 0644 00000000 		.word	NonProgrammable
 6341 0648 00000000 		.word	OpCode
 6342 064c 00000000 		.word	OpCodeDisplayPending
 6343 0650 00000000 		.word	.LANCHOR1
 6344 0654 00000000 		.word	.LANCHOR9
 6345              	.LVL488:
 6346              	.L822:
3105:src/keys.c    ****       }
 6347              		.loc 1 3105 9 view .LVU2045
 6348              	.LBE1234:
3124:src/keys.c    **** 	NonProgrammable = 0;
 6349              		.loc 1 3124 7 is_stmt 1 view .LVU2046
ARM GAS  /tmp/cceb4mPP.s 			page 200


3124:src/keys.c    **** 	NonProgrammable = 0;
 6350              		.loc 1 3124 11 is_stmt 0 view .LVU2047
 6351 0658 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3124:src/keys.c    **** 	NonProgrammable = 0;
 6352              		.loc 1 3124 10 view .LVU2048
 6353 065c 5C06     		lsls	r4, r3, #25
 6354 065e 40F13E81 		bpl	.L836
 6355 0662 CA4A     		ldr	r2, .L1160
 6356 0664 5846     		mov	r0, fp
 6357              	.LVL489:
 6358              	.L837:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6359              		.loc 1 3125 2 is_stmt 1 view .LVU2049
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6360              		.loc 1 3125 18 is_stmt 0 view .LVU2050
 6361 0666 0023     		movs	r3, #0
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6362              		.loc 1 3126 5 view .LVU2051
 6363 0668 1428     		cmp	r0, #20
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6364              		.loc 1 3125 18 view .LVU2052
 6365 066a 1360     		str	r3, [r2]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6366              		.loc 1 3126 2 is_stmt 1 view .LVU2053
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6367              		.loc 1 3126 5 is_stmt 0 view .LVU2054
 6368 066c 3FF636AF 		bhi	.L833
3127:src/keys.c    **** 	    // Data entry key
 6369              		.loc 1 3127 4 is_stmt 1 view .LVU2055
3127:src/keys.c    **** 	    // Data entry key
 6370              		.loc 1 3127 7 is_stmt 0 view .LVU2056
 6371 0670 BBF1000F 		cmp	fp, #0
 6372 0674 05D1     		bne	.L835
3127:src/keys.c    **** 	    // Data entry key
 6373              		.loc 1 3127 38 discriminator 1 view .LVU2057
 6374 0676 FFF7FEFF 		bl	is_bad_cmdline
 6375              	.LVL490:
3127:src/keys.c    **** 	    // Data entry key
 6376              		.loc 1 3127 34 discriminator 1 view .LVU2058
 6377 067a 0028     		cmp	r0, #0
 6378 067c 40F05F82 		bne	.L892
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6379              		.loc 1 3126 32 view .LVU2059
 6380 0680 5846     		mov	r0, fp
 6381              	.L835:
3130:src/keys.c    **** #endif
 6382              		.loc 1 3130 6 is_stmt 1 view .LVU2060
3132:src/keys.c    **** 	    xeq(c);
 6383              		.loc 1 3132 37 is_stmt 0 view .LVU2061
 6384 0682 98F81C70 		ldrb	r7, [r8, #28]	@ zero_extendqisi2
3130:src/keys.c    **** #endif
 6385              		.loc 1 3130 19 view .LVU2062
 6386 0686 0123     		movs	r3, #1
 6387 0688 C9F80030 		str	r3, [r9]
3132:src/keys.c    **** 	    xeq(c);
 6388              		.loc 1 3132 6 is_stmt 1 view .LVU2063
3132:src/keys.c    **** 	    xeq(c);
ARM GAS  /tmp/cceb4mPP.s 			page 201


 6389              		.loc 1 3132 37 is_stmt 0 view .LVU2064
 6390 068c B7FA87F7 		clz	r7, r7
3133:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6391              		.loc 1 3133 6 view .LVU2065
 6392 0690 FFF7FEFF 		bl	xeq
 6393              	.LVL491:
3134:src/keys.c    **** 	  }
 6394              		.loc 1 3134 38 view .LVU2066
 6395 0694 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
3132:src/keys.c    **** 	    xeq(c);
 6396              		.loc 1 3132 37 view .LVU2067
 6397 0698 7F09     		lsrs	r7, r7, #5
 6398              	.LVL492:
3133:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6399              		.loc 1 3133 6 is_stmt 1 view .LVU2068
3134:src/keys.c    **** 	  }
 6400              		.loc 1 3134 6 view .LVU2069
3134:src/keys.c    **** 	  }
 6401              		.loc 1 3134 20 is_stmt 0 view .LVU2070
 6402 069a 002B     		cmp	r3, #0
 6403 069c 08BF     		it	eq
 6404 069e 0127     		moveq	r7, #1
 6405              	.LVL493:
3134:src/keys.c    **** 	  }
 6406              		.loc 1 3134 20 view .LVU2071
 6407 06a0 02E5     		b	.L565
 6408              	.LVL494:
 6409              	.L820:
 6410              	.LBB1235:
 6411              	.LBB1182:
 6412              	.LBB737:
 6413              	.LBB670:
 812:src/keys.c    **** #else
 6414              		.loc 1 812 4 is_stmt 1 view .LVU2072
 812:src/keys.c    **** #else
 6415              		.loc 1 812 17 is_stmt 0 view .LVU2073
 6416 06a2 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 6417 06a6 43F00203 		orr	r3, r3, #2
 6418 06aa 88F81530 		strb	r3, [r8, #21]
 818:src/keys.c    **** 
 6419              		.loc 1 818 4 is_stmt 1 view .LVU2074
 836:src/keys.c    **** }
 6420              		.loc 1 836 9 is_stmt 0 view .LVU2075
 6421 06ae 4FF0330B 		mov	fp, #51
 818:src/keys.c    **** 
 6422              		.loc 1 818 4 view .LVU2076
 6423 06b2 F9E4     		b	.L565
 6424              	.L1111:
 729:src/keys.c    **** 	  case K00:
 6425              		.loc 1 729 4 is_stmt 1 view .LVU2077
 6426 06b4 122C     		cmp	r4, #18
 6427 06b6 0BD8     		bhi	.L803
 6428 06b8 DFE804F0 		tbb	[pc, r4]
 6429              	.L805:
 6430 06bc C3       		.byte	(.L808-.L805)/2
 6431 06bd B7       		.byte	(.L807-.L805)/2
 6432 06be 0A       		.byte	(.L803-.L805)/2
ARM GAS  /tmp/cceb4mPP.s 			page 202


 6433 06bf A7       		.byte	(.L806-.L805)/2
 6434 06c0 0A       		.byte	(.L803-.L805)/2
 6435 06c1 0A       		.byte	(.L803-.L805)/2
 6436 06c2 0A       		.byte	(.L803-.L805)/2
 6437 06c3 0A       		.byte	(.L803-.L805)/2
 6438 06c4 0A       		.byte	(.L803-.L805)/2
 6439 06c5 0A       		.byte	(.L803-.L805)/2
 6440 06c6 0A       		.byte	(.L803-.L805)/2
 6441 06c7 0A       		.byte	(.L803-.L805)/2
 6442 06c8 0A       		.byte	(.L803-.L805)/2
 6443 06c9 0A       		.byte	(.L803-.L805)/2
 6444 06ca 0A       		.byte	(.L803-.L805)/2
 6445 06cb 0A       		.byte	(.L803-.L805)/2
 6446 06cc 0A       		.byte	(.L803-.L805)/2
 6447 06cd 0A       		.byte	(.L803-.L805)/2
 6448 06ce 96       		.byte	(.L804-.L805)/2
 6449 06cf 00       		.p2align 1
 6450              	.L803:
 759:src/keys.c    **** 	  }
 6451              		.loc 1 759 12 view .LVU2078
 764:src/keys.c    **** #ifdef DM42
 6452              		.loc 1 764 2 view .LVU2079
 6453 06d0 033C     		subs	r4, r4, #3
 6454 06d2 2A2C     		cmp	r4, #42
 6455 06d4 3FF65CAF 		bhi	.L594
 6456 06d8 01A2     		adr	r2, .L814
 6457 06da 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 6458 06de 00BF     		.p2align 2
 6459              	.L814:
 6460 06e0 59080000 		.word	.L817+1
 6461 06e4 91050000 		.word	.L594+1
 6462 06e8 91050000 		.word	.L594+1
 6463 06ec C1070000 		.word	.L813+1
 6464 06f0 C1070000 		.word	.L813+1
 6465 06f4 91050000 		.word	.L594+1
 6466 06f8 91050000 		.word	.L594+1
 6467 06fc 91050000 		.word	.L594+1
 6468 0700 91050000 		.word	.L594+1
 6469 0704 91050000 		.word	.L594+1
 6470 0708 91050000 		.word	.L594+1
 6471 070c 91050000 		.word	.L594+1
 6472 0710 91050000 		.word	.L594+1
 6473 0714 D7070000 		.word	.L816+1
 6474 0718 91050000 		.word	.L594+1
 6475 071c C1070000 		.word	.L813+1
 6476 0720 91050000 		.word	.L594+1
 6477 0724 91050000 		.word	.L594+1
 6478 0728 91050000 		.word	.L594+1
 6479 072c 91050000 		.word	.L594+1
 6480 0730 91050000 		.word	.L594+1
 6481 0734 91050000 		.word	.L594+1
 6482 0738 91050000 		.word	.L594+1
 6483 073c 91050000 		.word	.L594+1
 6484 0740 91050000 		.word	.L594+1
 6485 0744 91050000 		.word	.L594+1
 6486 0748 91050000 		.word	.L594+1
 6487 074c 91050000 		.word	.L594+1
ARM GAS  /tmp/cceb4mPP.s 			page 203


 6488 0750 91050000 		.word	.L594+1
 6489 0754 91050000 		.word	.L594+1
 6490 0758 91050000 		.word	.L594+1
 6491 075c 91050000 		.word	.L594+1
 6492 0760 91050000 		.word	.L594+1
 6493 0764 91050000 		.word	.L594+1
 6494 0768 91050000 		.word	.L594+1
 6495 076c 91050000 		.word	.L594+1
 6496 0770 91050000 		.word	.L594+1
 6497 0774 91050000 		.word	.L594+1
 6498 0778 91050000 		.word	.L594+1
 6499 077c 91050000 		.word	.L594+1
 6500 0780 91050000 		.word	.L594+1
 6501 0784 65080000 		.word	.L815+1
 6502 0788 BB070000 		.word	.L1071+1
 6503              	.LVL495:
 6504              		.p2align 1
 6505              	.L722:
 764:src/keys.c    **** #ifdef DM42
 6506              		.loc 1 764 2 is_stmt 0 view .LVU2080
 6507              	.LBE670:
 6508              	.LBE737:
 6509              	.LBB738:
 6510              	.LBB739:
2696:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6511              		.loc 1 2696 3 is_stmt 1 view .LVU2081
2696:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6512              		.loc 1 2696 13 is_stmt 0 view .LVU2082
 6513 078c B8F80830 		ldrh	r3, [r8, #8]
2696:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6514              		.loc 1 2696 6 view .LVU2083
 6515 0790 002B     		cmp	r3, #0
 6516 0792 01F09782 		beq	.L723
2697:src/keys.c    **** 				State2.digval = global_regs();
 6517              		.loc 1 2697 4 is_stmt 1 view .LVU2084
2697:src/keys.c    **** 				State2.digval = global_regs();
 6518              		.loc 1 2697 8 is_stmt 0 view .LVU2085
 6519 0796 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2697:src/keys.c    **** 				State2.digval = global_regs();
 6520              		.loc 1 2697 7 view .LVU2086
 6521 079a D207     		lsls	r2, r2, #31
 6522 079c 02D4     		bmi	.L724
2697:src/keys.c    **** 				State2.digval = global_regs();
 6523              		.loc 1 2697 23 view .LVU2087
 6524 079e 642B     		cmp	r3, #100
 6525 07a0 01F09682 		beq	.L1118
 6526              	.LVL496:
 6527              	.L724:
2699:src/keys.c    **** 		}
 6528              		.loc 1 2699 4 is_stmt 1 view .LVU2088
 6529 07a4 B8F80830 		ldrh	r3, [r8, #8]
 6530 07a8 013B     		subs	r3, r3, #1
 6531              	.L1059:
2699:src/keys.c    **** 		}
 6532              		.loc 1 2699 4 is_stmt 0 view .LVU2089
 6533 07aa A8F80830 		strh	r3, [r8, #8]	@ movhi
 6534              	.LVL497:
ARM GAS  /tmp/cceb4mPP.s 			page 204


 6535              	.L715:
2751:src/keys.c    **** 	return STATE_UNFINISHED;
 6536              		.loc 1 2751 2 is_stmt 1 view .LVU2090
2751:src/keys.c    **** 	return STATE_UNFINISHED;
 6537              		.loc 1 2751 16 is_stmt 0 view .LVU2091
 6538 07ae 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6539 07b2 6FF3C503 		bfc	r3, #3, #3
 6540 07b6 88F81430 		strb	r3, [r8, #20]
2752:src/keys.c    **** }
 6541              		.loc 1 2752 2 is_stmt 1 view .LVU2092
 6542              	.LVL498:
 6543              	.L1071:
2752:src/keys.c    **** }
 6544              		.loc 1 2752 2 is_stmt 0 view .LVU2093
 6545              	.LBE739:
 6546              	.LBE738:
 6547              	.LBB770:
 6548              	.LBB771:
1454:src/keys.c    **** 			}
 6549              		.loc 1 1454 12 view .LVU2094
 6550 07ba 4FF0330B 		mov	fp, #51
 6551 07be 73E4     		b	.L565
 6552              	.L813:
 6553              	.LBE771:
 6554              	.LBE770:
 6555              	.LBB827:
 6556              	.LBB671:
 830:src/keys.c    **** 		break;
 6557              		.loc 1 830 3 is_stmt 1 view .LVU2095
 6558              	.LVL499:
 6559              	.LBB668:
 6560              	.LBI668:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 6561              		.loc 1 501 13 view .LVU2096
 6562              	.LBB669:
 502:src/keys.c    **** 		return;
 6563              		.loc 1 502 2 view .LVU2097
 502:src/keys.c    **** 		return;
 6564              		.loc 1 502 6 is_stmt 0 view .LVU2098
 6565 07c0 FFF7FEFF 		bl	is_bad_cmdline
 6566              	.LVL500:
 502:src/keys.c    **** 		return;
 6567              		.loc 1 502 5 view .LVU2099
 6568 07c4 0446     		mov	r4, r0
 6569 07c6 0028     		cmp	r0, #0
 6570 07c8 F7D1     		bne	.L1071
 6571 07ca 5FFA8AF0 		uxtb	r0, r10
 6572 07ce FFF7FEFF 		bl	init_arg.part.0
 6573              	.LVL501:
 6574              	.LBE669:
 6575              	.LBE668:
 6576              	.LBE671:
 6577              	.LBE827:
 6578              	.LBE1182:
 6579              	.LBE1235:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 6580              		.loc 1 2931 7 view .LVU2100
ARM GAS  /tmp/cceb4mPP.s 			page 205


 6581 07d2 2746     		mov	r7, r4
 6582 07d4 F1E7     		b	.L1071
 6583              	.LVL502:
 6584              	.L816:
 6585              	.LBB1236:
 6586              	.LBB1183:
 6587              	.LBB828:
 6588              	.LBB672:
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6589              		.loc 1 821 3 is_stmt 1 view .LVU2101
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6590              		.loc 1 821 6 is_stmt 0 view .LVU2102
 6591 07d6 8806     		lsls	r0, r1, #26
 6592 07d8 EFD4     		bmi	.L1071
 823:src/keys.c    **** 			return op;
 6593              		.loc 1 823 3 is_stmt 1 view .LVU2103
 823:src/keys.c    **** 			return op;
 6594              		.loc 1 823 6 is_stmt 0 view .LVU2104
 6595 07da 5906     		lsls	r1, r3, #25
 6596 07dc 5AD4     		bmi	.L821
 6597              	.LVL503:
 6598              	.L829:
 823:src/keys.c    **** 			return op;
 6599              		.loc 1 823 6 view .LVU2105
 6600              	.LBE672:
 6601              	.LBE828:
 6602              	.LBE1183:
 6603              	.LBE1236:
3101:src/keys.c    ****       else if (State2.alphas) {
 6604              		.loc 1 3101 2 is_stmt 1 view .LVU2106
 6605 07de FFF7FEFF 		bl	delprog
 6606              	.LVL504:
 6607 07e2 4FF0300B 		mov	fp, #48
 6608 07e6 5FE4     		b	.L565
 6609              	.LVL505:
 6610              	.L804:
 6611              	.LBB1237:
 6612              	.LBB1184:
 6613              	.LBB829:
 6614              	.LBB673:
 755:src/keys.c    **** 	    if (intltr(15)) {
 6615              		.loc 1 755 6 view .LVU2107
 756:src/keys.c    **** 	      return op_int;
 6616              		.loc 1 756 6 view .LVU2108
 756:src/keys.c    **** 	      return op_int;
 6617              		.loc 1 756 10 is_stmt 0 view .LVU2109
 6618 07e8 0F20     		movs	r0, #15
 6619 07ea FFF7FEFF 		bl	intltr
 6620              	.LVL506:
 756:src/keys.c    **** 	      return op_int;
 6621              		.loc 1 756 9 view .LVU2110
 6622 07ee 0028     		cmp	r0, #0
 6623 07f0 E6D0     		beq	.L813
 6624              	.LVL507:
 756:src/keys.c    **** 	      return op_int;
 6625              		.loc 1 756 9 view .LVU2111
 6626              	.LBE673:
ARM GAS  /tmp/cceb4mPP.s 			page 206


 6627              	.LBE829:
 6628              	.LBE1184:
 6629              	.LBE1237:
3124:src/keys.c    **** 	NonProgrammable = 0;
 6630              		.loc 1 3124 7 is_stmt 1 view .LVU2112
3124:src/keys.c    **** 	NonProgrammable = 0;
 6631              		.loc 1 3124 11 is_stmt 0 view .LVU2113
 6632 07f2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3124:src/keys.c    **** 	NonProgrammable = 0;
 6633              		.loc 1 3124 10 view .LVU2114
 6634 07f6 5806     		lsls	r0, r3, #25
 6635 07f8 41F1E481 		bpl	.L888
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6636              		.loc 1 3125 2 is_stmt 1 view .LVU2115
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6637              		.loc 1 3125 18 is_stmt 0 view .LVU2116
 6638 07fc 634B     		ldr	r3, .L1160
 6639 07fe 0022     		movs	r2, #0
 6640              	.LBB1238:
 6641              	.LBB1185:
 6642              	.LBB830:
 6643              	.LBB674:
 757:src/keys.c    **** 	    }
 6644              		.loc 1 757 15 view .LVU2117
 6645 0800 4FF0140B 		mov	fp, #20
 6646              	.LBE674:
 6647              	.LBE830:
 6648              	.LBE1185:
 6649              	.LBE1238:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6650              		.loc 1 3125 18 view .LVU2118
 6651 0804 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6652              		.loc 1 3126 2 is_stmt 1 view .LVU2119
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6653              		.loc 1 3126 32 is_stmt 0 view .LVU2120
 6654 0806 5846     		mov	r0, fp
 6655 0808 3BE7     		b	.L835
 6656              	.LVL508:
 6657              	.L806:
 6658              	.LBB1239:
 6659              	.LBB1186:
 6660              	.LBB831:
 6661              	.LBB675:
 747:src/keys.c    **** 	    if (intltr(12)) {
 6662              		.loc 1 747 6 is_stmt 1 view .LVU2121
 748:src/keys.c    **** 	      return op_int;
 6663              		.loc 1 748 6 view .LVU2122
 748:src/keys.c    **** 	      return op_int;
 6664              		.loc 1 748 10 is_stmt 0 view .LVU2123
 6665 080a 0C20     		movs	r0, #12
 6666 080c FFF7FEFF 		bl	intltr
 6667              	.LVL509:
 748:src/keys.c    **** 	      return op_int;
 6668              		.loc 1 748 9 view .LVU2124
 6669 0810 10B3     		cbz	r0, .L817
 6670              	.LVL510:
ARM GAS  /tmp/cceb4mPP.s 			page 207


 748:src/keys.c    **** 	      return op_int;
 6671              		.loc 1 748 9 view .LVU2125
 6672              	.LBE675:
 6673              	.LBE831:
 6674              	.LBE1186:
 6675              	.LBE1239:
3124:src/keys.c    **** 	NonProgrammable = 0;
 6676              		.loc 1 3124 7 is_stmt 1 view .LVU2126
3124:src/keys.c    **** 	NonProgrammable = 0;
 6677              		.loc 1 3124 11 is_stmt 0 view .LVU2127
 6678 0812 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3124:src/keys.c    **** 	NonProgrammable = 0;
 6679              		.loc 1 3124 10 view .LVU2128
 6680 0816 5C06     		lsls	r4, r3, #25
 6681 0818 41F13182 		bpl	.L887
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6682              		.loc 1 3125 2 is_stmt 1 view .LVU2129
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6683              		.loc 1 3125 18 is_stmt 0 view .LVU2130
 6684 081c 5B4B     		ldr	r3, .L1160
 6685 081e 0022     		movs	r2, #0
 6686              	.LBB1240:
 6687              	.LBB1187:
 6688              	.LBB832:
 6689              	.LBB676:
 749:src/keys.c    **** 	    }
 6690              		.loc 1 749 15 view .LVU2131
 6691 0820 4FF0110B 		mov	fp, #17
 6692              	.LBE676:
 6693              	.LBE832:
 6694              	.LBE1187:
 6695              	.LBE1240:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6696              		.loc 1 3125 18 view .LVU2132
 6697 0824 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6698              		.loc 1 3126 2 is_stmt 1 view .LVU2133
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6699              		.loc 1 3126 32 is_stmt 0 view .LVU2134
 6700 0826 5846     		mov	r0, fp
 6701 0828 2BE7     		b	.L835
 6702              	.LVL511:
 6703              	.L807:
 6704              	.LBB1241:
 6705              	.LBB1188:
 6706              	.LBB833:
 6707              	.LBB677:
 739:src/keys.c    **** 	    if (intltr(11)) {
 6708              		.loc 1 739 6 is_stmt 1 view .LVU2135
 740:src/keys.c    **** 	      return op;
 6709              		.loc 1 740 6 view .LVU2136
 740:src/keys.c    **** 	      return op;
 6710              		.loc 1 740 10 is_stmt 0 view .LVU2137
 6711 082a 0B20     		movs	r0, #11
 6712 082c FFF7FEFF 		bl	intltr
 6713              	.LVL512:
 740:src/keys.c    **** 	      return op;
ARM GAS  /tmp/cceb4mPP.s 			page 208


 6714              		.loc 1 740 9 view .LVU2138
 6715 0830 0028     		cmp	r0, #0
 6716 0832 41F06380 		bne	.L810
 744:src/keys.c    **** 	    }
 6717              		.loc 1 744 8 is_stmt 1 view .LVU2139
 744:src/keys.c    **** 	    }
 6718              		.loc 1 744 15 is_stmt 0 view .LVU2140
 6719 0836 1021     		movs	r1, #16
 6720 0838 0120     		movs	r0, #1
 6721 083a FFF7FEFF 		bl	check_f_key
 6722              	.LVL513:
 6723 083e 8346     		mov	fp, r0
 6724 0840 A6E6     		b	.L594
 6725              	.LVL514:
 6726              	.L808:
 731:src/keys.c    **** 	    if (intltr(10)) {
 6727              		.loc 1 731 6 is_stmt 1 view .LVU2141
 732:src/keys.c    **** 	      return op;
 6728              		.loc 1 732 6 view .LVU2142
 732:src/keys.c    **** 	      return op;
 6729              		.loc 1 732 10 is_stmt 0 view .LVU2143
 6730 0842 0A20     		movs	r0, #10
 6731 0844 FFF7FEFF 		bl	intltr
 6732              	.LVL515:
 732:src/keys.c    **** 	      return op;
 6733              		.loc 1 732 9 view .LVU2144
 6734 0848 0028     		cmp	r0, #0
 6735 084a 41F04A80 		bne	.L809
 736:src/keys.c    **** 	    }
 6736              		.loc 1 736 8 is_stmt 1 view .LVU2145
 736:src/keys.c    **** 	    }
 6737              		.loc 1 736 15 is_stmt 0 view .LVU2146
 6738 084e 0F21     		movs	r1, #15
 6739 0850 FFF7FEFF 		bl	check_f_key
 6740              	.LVL516:
 6741 0854 8346     		mov	fp, r0
 6742 0856 9BE6     		b	.L594
 6743              	.LVL517:
 6744              	.L817:
 771:src/keys.c    **** #else
 6745              		.loc 1 771 3 is_stmt 1 view .LVU2147
 771:src/keys.c    **** #else
 6746              		.loc 1 771 10 is_stmt 0 view .LVU2148
 6747 0858 5146     		mov	r1, r10
 6748 085a 0220     		movs	r0, #2
 6749 085c FFF7FEFF 		bl	check_f_key
 6750              	.LVL518:
 6751 0860 8346     		mov	fp, r0
 6752 0862 95E6     		b	.L594
 6753              	.L815:
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6754              		.loc 1 795 3 is_stmt 1 view .LVU2149
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6755              		.loc 1 795 7 is_stmt 0 view .LVU2150
 6756 0864 FFF7FEFF 		bl	is_bad_cmdline
 6757              	.LVL519:
 795:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cceb4mPP.s 			page 209


 6758              		.loc 1 795 6 view .LVU2151
 6759 0868 0446     		mov	r4, r0
 6760 086a 0028     		cmp	r0, #0
 6761 086c A5D1     		bne	.L1071
 797:src/keys.c    **** 		State2.arrow = 1;
 6762              		.loc 1 797 3 is_stmt 1 view .LVU2152
 6763 086e FFF7FEFF 		bl	process_cmdline_set_lift
 6764              	.LVL520:
 798:src/keys.c    **** #ifdef DM42
 6765              		.loc 1 798 3 view .LVU2153
 798:src/keys.c    **** #ifdef DM42
 6766              		.loc 1 798 16 is_stmt 0 view .LVU2154
 6767 0872 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 800:src/keys.c    **** 		display_current_menu ();
 6768              		.loc 1 800 3 view .LVU2155
 6769 0876 0920     		movs	r0, #9
 798:src/keys.c    **** #ifdef DM42
 6770              		.loc 1 798 16 view .LVU2156
 6771 0878 43F00403 		orr	r3, r3, #4
 6772 087c 88F81530 		strb	r3, [r8, #21]
 800:src/keys.c    **** 		display_current_menu ();
 6773              		.loc 1 800 3 is_stmt 1 view .LVU2157
 6774 0880 FFF7FEFF 		bl	set_menu
 6775              	.LVL521:
 801:src/keys.c    **** 		lcd_refresh ();
 6776              		.loc 1 801 3 view .LVU2158
 6777 0884 FFF7FEFF 		bl	display_current_menu
 6778              	.LVL522:
 802:src/keys.c    **** #else
 6779              		.loc 1 802 3 view .LVU2159
 6780 0888 414B     		ldr	r3, .L1160+4
 6781 088a 9847     		blx	r3
 6782              	.LVL523:
 806:src/keys.c    **** 
 6783              		.loc 1 806 3 view .LVU2160
 6784              	.LBE677:
 6785              	.LBE833:
 6786              	.LBE1188:
 6787              	.LBE1241:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 6788              		.loc 1 2931 7 is_stmt 0 view .LVU2161
 6789 088c 2746     		mov	r7, r4
 6790              	.LBB1242:
 6791              	.LBB1189:
 6792              	.LBB834:
 6793              	.LBB678:
 836:src/keys.c    **** }
 6794              		.loc 1 836 9 view .LVU2162
 6795 088e 4FF0330B 		mov	fp, #51
 806:src/keys.c    **** 
 6796              		.loc 1 806 3 view .LVU2163
 6797 0892 09E4     		b	.L565
 6798              	.L821:
 6799              	.LVL524:
 806:src/keys.c    **** 
 6800              		.loc 1 806 3 view .LVU2164
 6801              	.LBE678:
ARM GAS  /tmp/cceb4mPP.s 			page 210


 6802              	.LBE834:
 6803              	.LBE1189:
 6804              	.LBE1242:
3088:src/keys.c    ****     case STATE_SST:
 6805              		.loc 1 3088 5 is_stmt 1 view .LVU2165
 6806 0894 AAF12B03 		sub	r3, r10, #43
 6807 0898 082B     		cmp	r3, #8
 6808 089a 15D8     		bhi	.L849
 6809 089c 01A2     		adr	r2, .L850
 6810 089e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6811 08a2 00BF     		.p2align 2
 6812              	.L850:
 6813 08a4 C5050000 		.word	.L828+1
 6814 08a8 C5050000 		.word	.L828+1
 6815 08ac C9080000 		.word	.L849+1
 6816 08b0 E9050000 		.word	.L757+1
 6817 08b4 DB050000 		.word	.L755+1
 6818 08b8 FD050000 		.word	.L752+1
 6819 08bc 9D010000 		.word	.L574+1
 6820 08c0 A9000000 		.word	.L565+1
 6821 08c4 A9000000 		.word	.L565+1
 6822              		.p2align 1
 6823              	.L849:
 6824 08c8 304A     		ldr	r2, .L1160
 6825 08ca 5046     		mov	r0, r10
 6826 08cc CBE6     		b	.L837
 6827              	.LVL525:
 6828              	.L1089:
 6829              	.LBB1243:
 6830              	.LBB1190:
2802:src/keys.c    **** 		CmdLineLength = 0;
 6831              		.loc 1 2802 26 is_stmt 0 view .LVU2166
 6832 08ce FFF7FEFF 		bl	keyticks
 6833              	.LVL526:
2802:src/keys.c    **** 		CmdLineLength = 0;
 6834              		.loc 1 2802 23 view .LVU2167
 6835 08d2 1E28     		cmp	r0, #30
2803:src/keys.c    **** 	/*
 6836              		.loc 1 2803 3 is_stmt 1 view .LVU2168
2803:src/keys.c    **** 	/*
 6837              		.loc 1 2803 17 is_stmt 0 view .LVU2169
 6838 08d4 C4BF     		itt	gt
 6839 08d6 0023     		movgt	r3, #0
 6840 08d8 88F81C30 		strbgt	r3, [r8, #28]
 6841 08dc 91E4     		b	.L581
 6842              	.LVL527:
 6843              	.L836:
2803:src/keys.c    **** 	/*
 6844              		.loc 1 2803 17 view .LVU2170
 6845              	.LBE1190:
 6846              	.LBE1243:
3124:src/keys.c    **** 	NonProgrammable = 0;
 6847              		.loc 1 3124 26 view .LVU2171
 6848 08de 2B4A     		ldr	r2, .L1160
 6849 08e0 1368     		ldr	r3, [r2]
 6850 08e2 5846     		mov	r0, fp
 6851 08e4 002B     		cmp	r3, #0
ARM GAS  /tmp/cceb4mPP.s 			page 211


 6852 08e6 7FF4BEAE 		bne	.L837
 6853              	.LVL528:
 6854              	.L838:
3146:src/keys.c    ****       }
 6855              		.loc 1 3146 2 is_stmt 1 view .LVU2172
 6856 08ea FFF7FEFF 		bl	stoprog
 6857              	.LVL529:
 6858 08ee FFF7DBBB 		b	.L565
 6859              	.LVL530:
 6860              	.L567:
3066:src/keys.c    **** 	}
 6861              		.loc 1 3066 4 view .LVU2173
 6862              		.loc 1 3165 1 is_stmt 0 view .LVU2174
 6863 08f2 03B0     		add	sp, sp, #12
 6864              		.cfi_remember_state
 6865              		.cfi_def_cfa_offset 36
 6866              		@ sp needed
 6867 08f4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6868              		.cfi_restore 14
 6869              		.cfi_restore 11
 6870              		.cfi_restore 10
 6871              		.cfi_restore 9
 6872              		.cfi_restore 8
 6873              		.cfi_restore 7
 6874              		.cfi_restore 6
 6875              		.cfi_restore 5
 6876              		.cfi_restore 4
 6877              		.cfi_def_cfa_offset 0
3066:src/keys.c    **** 	}
 6878              		.loc 1 3066 4 view .LVU2175
 6879 08f8 FFF7FEBF 		b	finish_RPN
 6880              	.LVL531:
 6881              	.L544:
 6882              		.cfi_restore_state
2964:src/keys.c    **** 	    DispMsg = TraceBuffer;
 6883              		.loc 1 2964 6 is_stmt 1 view .LVU2176
 6884 08fc 254F     		ldr	r7, .L1160+8
 6885 08fe 3946     		mov	r1, r7
 6886 0900 FFF7FEFF 		bl	prt
 6887              	.LVL532:
 6888 0904 3246     		mov	r2, r6
 6889 0906 0146     		mov	r1, r0
 6890 0908 3846     		mov	r0, r7
 6891 090a FFF7FEFF 		bl	scopy_char
 6892              	.LVL533:
2965:src/keys.c    **** 	  }
 6893              		.loc 1 2965 6 view .LVU2177
2965:src/keys.c    **** 	  }
 6894              		.loc 1 2965 14 is_stmt 0 view .LVU2178
 6895 090e 224B     		ldr	r3, .L1160+12
 6896 0910 1F60     		str	r7, [r3]
 6897 0912 0CE4     		b	.L545
 6898              	.LVL534:
 6899              	.L1090:
 6900              	.LBB1244:
 6901              	.LBB1191:
2809:src/keys.c    **** 
ARM GAS  /tmp/cceb4mPP.s 			page 212


 6902              		.loc 1 2809 3 is_stmt 1 view .LVU2179
 6903              	.LBB835:
 6904              	.LBI835:
2423:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6905              		.loc 1 2423 12 view .LVU2180
 6906              	.LBB836:
2425:src/keys.c    **** #ifdef DM42
 6907              		.loc 1 2425 2 view .LVU2181
 6908 0914 E4B2     		uxtb	r4, r4
 6909              	.LVL535:
2425:src/keys.c    **** #ifdef DM42
 6910              		.loc 1 2425 2 is_stmt 0 view .LVU2182
 6911 0916 0E3C     		subs	r4, r4, #14
 6912 0918 192C     		cmp	r4, #25
 6913 091a 3FF64EAF 		bhi	.L1071
 6914 091e 01A3     		adr	r3, .L586
 6915 0920 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 6916              		.p2align 2
 6917              	.L586:
 6918 0924 A1090000 		.word	.L587+1
 6919 0928 BB070000 		.word	.L1071+1
 6920 092c A1090000 		.word	.L587+1
 6921 0930 BB070000 		.word	.L1071+1
 6922 0934 BB070000 		.word	.L1071+1
 6923 0938 BB070000 		.word	.L1071+1
 6924 093c BB070000 		.word	.L1071+1
 6925 0940 BB070000 		.word	.L1071+1
 6926 0944 BB070000 		.word	.L1071+1
 6927 0948 BB070000 		.word	.L1071+1
 6928 094c BB070000 		.word	.L1071+1
 6929 0950 BB070000 		.word	.L1071+1
 6930 0954 BB070000 		.word	.L1071+1
 6931 0958 BB070000 		.word	.L1071+1
 6932 095c BB070000 		.word	.L1071+1
 6933 0960 BB070000 		.word	.L1071+1
 6934 0964 BB070000 		.word	.L1071+1
 6935 0968 BB070000 		.word	.L1071+1
 6936 096c BB090000 		.word	.L585+1
 6937 0970 BB070000 		.word	.L1071+1
 6938 0974 BB070000 		.word	.L1071+1
 6939 0978 BB070000 		.word	.L1071+1
 6940 097c BB070000 		.word	.L1071+1
 6941 0980 BB070000 		.word	.L1071+1
 6942 0984 BB070000 		.word	.L1071+1
 6943 0988 BB090000 		.word	.L585+1
 6944              		.p2align 1
 6945              	.L1161:
 6946              		.align	2
 6947              	.L1160:
 6948 098c 00000000 		.word	NonProgrammable
 6949 0990 31020008 		.word	134218289
 6950 0994 00000000 		.word	TraceBuffer
 6951 0998 00000000 		.word	DispMsg
 6952              	.L588:
2434:src/keys.c    **** 	  }
 6953              		.loc 1 2434 26 is_stmt 1 view .LVU2183
 6954 099c FFF7FEFF 		bl	clpall
ARM GAS  /tmp/cceb4mPP.s 			page 213


 6955              	.LVL536:
2434:src/keys.c    **** 	  }
 6956              		.loc 1 2434 36 view .LVU2184
 6957              	.L587:
2443:src/keys.c    **** 	  State2.digval = 0;
 6958              		.loc 1 2443 4 view .LVU2185
2443:src/keys.c    **** 	  State2.digval = 0;
 6959              		.loc 1 2443 19 is_stmt 0 view .LVU2186
 6960 09a0 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2444:src/keys.c    **** 	  break;
 6961              		.loc 1 2444 18 view .LVU2187
 6962 09a4 0022     		movs	r2, #0
2443:src/keys.c    **** 	  State2.digval = 0;
 6963              		.loc 1 2443 19 view .LVU2188
 6964 09a6 6FF30203 		bfc	r3, #0, #3
 6965 09aa 88F81430 		strb	r3, [r8, #20]
2444:src/keys.c    **** 	  break;
 6966              		.loc 1 2444 4 is_stmt 1 view .LVU2189
2444:src/keys.c    **** 	  break;
 6967              		.loc 1 2444 18 is_stmt 0 view .LVU2190
 6968 09ae A8F80820 		strh	r2, [r8, #8]	@ movhi
2445:src/keys.c    **** 	default:			// No state change
 6969              		.loc 1 2445 4 is_stmt 1 view .LVU2191
 6970              	.LBE836:
 6971              	.LBE835:
2809:src/keys.c    **** 
 6972              		.loc 1 2809 10 is_stmt 0 view .LVU2192
 6973 09b2 4FF0330B 		mov	fp, #51
 6974              	.LBB838:
 6975              	.LBB837:
2445:src/keys.c    **** 	default:			// No state change
 6976              		.loc 1 2445 4 view .LVU2193
 6977 09b6 FFF777BB 		b	.L565
 6978              	.L585:
2430:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6979              		.loc 1 2430 4 is_stmt 1 view .LVU2194
2430:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6980              		.loc 1 2430 18 is_stmt 0 view .LVU2195
 6981 09ba 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6982 09be 03F00703 		and	r3, r3, #7
 6983 09c2 013B     		subs	r3, r3, #1
 6984 09c4 032B     		cmp	r3, #3
 6985 09c6 EBD8     		bhi	.L587
 6986 09c8 01A2     		adr	r2, .L589
 6987 09ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6988 09ce 00BF     		.p2align 2
 6989              	.L589:
 6990 09d0 ED090000 		.word	.L592+1
 6991 09d4 E7090000 		.word	.L591+1
 6992 09d8 E1090000 		.word	.L590+1
 6993 09dc 9D090000 		.word	.L588+1
 6994              		.p2align 1
 6995              	.L590:
2433:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6996              		.loc 1 2433 26 is_stmt 1 view .LVU2196
 6997 09e0 FFF7FEFF 		bl	clrprog
 6998              	.LVL537:
ARM GAS  /tmp/cceb4mPP.s 			page 214


2433:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6999              		.loc 1 2433 37 view .LVU2197
2433:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 7000              		.loc 1 2433 4 is_stmt 0 view .LVU2198
 7001 09e4 DCE7     		b	.L587
 7002              	.L591:
2432:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 7003              		.loc 1 2432 25 is_stmt 1 view .LVU2199
 7004 09e6 FFF7FEFF 		bl	reset
 7005              	.LVL538:
2432:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 7006              		.loc 1 2432 34 view .LVU2200
2432:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 7007              		.loc 1 2432 4 is_stmt 0 view .LVU2201
 7008 09ea D9E7     		b	.L587
 7009              	.L592:
2431:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7010              		.loc 1 2431 25 is_stmt 1 view .LVU2202
 7011 09ec FFF7FEFF 		bl	clrall
 7012              	.LVL539:
2431:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7013              		.loc 1 2431 35 view .LVU2203
2431:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7014              		.loc 1 2431 4 is_stmt 0 view .LVU2204
 7015 09f0 D6E7     		b	.L587
 7016              	.LVL540:
 7017              	.L1088:
2431:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7018              		.loc 1 2431 4 view .LVU2205
 7019              	.LBE837:
 7020              	.LBE838:
2787:src/keys.c    ****     soft_init_state();
 7021              		.loc 1 2787 47 view .LVU2206
 7022 09f2 DFF8A483 		ldr	r8, .L1162+32
 7023 09f6 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
2787:src/keys.c    ****     soft_init_state();
 7024              		.loc 1 2787 36 view .LVU2207
 7025 09fa 4AEA0302 		orr	r2, r10, r3
 7026 09fe 12F0FF0F 		tst	r2, #255
 7027 0a02 7FF4FBAB 		bne	.L576
2788:src/keys.c    ****     return STATE_UNFINISHED;
 7028              		.loc 1 2788 5 is_stmt 1 view .LVU2208
 7029 0a06 FFF7FEFF 		bl	soft_init_state
 7030              	.LVL541:
2789:src/keys.c    ****   }
 7031              		.loc 1 2789 5 view .LVU2209
2789:src/keys.c    ****   }
 7032              		.loc 1 2789 12 is_stmt 0 view .LVU2210
 7033 0a0a 4FF0330B 		mov	fp, #51
 7034 0a0e FFF74BBB 		b	.L565
 7035              	.L1091:
2812:src/keys.c    **** 
 7036              		.loc 1 2812 3 is_stmt 1 view .LVU2211
2812:src/keys.c    **** 
 7037              		.loc 1 2812 10 is_stmt 0 view .LVU2212
 7038 0a12 E0B2     		uxtb	r0, r4
 7039 0a14 FFF7FEFF 		bl	process_arg
ARM GAS  /tmp/cceb4mPP.s 			page 215


 7040              	.LVL542:
 7041 0a18 8346     		mov	fp, r0
 7042 0a1a B9E5     		b	.L594
 7043              	.L1112:
2766:src/keys.c    ****       Pause = 0;
 7044              		.loc 1 2766 2 is_stmt 1 view .LVU2213
 7045 0a1c 0020     		movs	r0, #0
 7046 0a1e FFF7FEFF 		bl	set_pc
 7047              	.LVL543:
 7048 0a22 DAE4     		b	.L573
 7049              	.LVL544:
 7050              	.L830:
2766:src/keys.c    ****       Pause = 0;
 7051              		.loc 1 2766 2 is_stmt 0 view .LVU2214
 7052              	.LBE1191:
 7053              	.LBE1244:
 7054              	.LBB1245:
3103:src/keys.c    **** 	if (p > Alpha)
 7055              		.loc 1 3103 2 is_stmt 1 view .LVU2215
3103:src/keys.c    **** 	if (p > Alpha)
 7056              		.loc 1 3103 22 is_stmt 0 view .LVU2216
 7057 0a24 D44C     		ldr	r4, .L1162
 7058 0a26 2068     		ldr	r0, [r4]
3103:src/keys.c    **** 	if (p > Alpha)
 7059              		.loc 1 3103 12 view .LVU2217
 7060 0a28 0021     		movs	r1, #0
 7061 0a2a 00F5F660 		add	r0, r0, #1968
 7062 0a2e FFF7FEFF 		bl	find_char
 7063              	.LVL545:
3104:src/keys.c    **** 	  *--p = '\0';
 7064              		.loc 1 3104 8 view .LVU2218
 7065 0a32 2368     		ldr	r3, [r4]
 7066              	.LVL546:
3104:src/keys.c    **** 	  *--p = '\0';
 7067              		.loc 1 3104 2 is_stmt 1 view .LVU2219
3104:src/keys.c    **** 	  *--p = '\0';
 7068              		.loc 1 3104 8 is_stmt 0 view .LVU2220
 7069 0a34 03F5F663 		add	r3, r3, #1968
3104:src/keys.c    **** 	  *--p = '\0';
 7070              		.loc 1 3104 5 view .LVU2221
 7071 0a38 9842     		cmp	r0, r3
3105:src/keys.c    ****       }
 7072              		.loc 1 3105 4 is_stmt 1 view .LVU2222
 7073              	.LVL547:
3105:src/keys.c    ****       }
 7074              		.loc 1 3105 9 is_stmt 0 view .LVU2223
 7075 0a3a 84BF     		itt	hi
 7076 0a3c 0023     		movhi	r3, #0
 7077 0a3e 00F8013C 		strbhi	r3, [r0, #-1]
 7078 0a42 E3E5     		b	.L1062
 7079              	.LVL548:
 7080              	.L1094:
3105:src/keys.c    ****       }
 7081              		.loc 1 3105 9 view .LVU2224
 7082              	.LBE1245:
 7083              	.LBB1246:
 7084              	.LBB1192:
ARM GAS  /tmp/cceb4mPP.s 			page 216


2821:src/keys.c    **** 
 7085              		.loc 1 2821 3 is_stmt 1 view .LVU2225
 7086              	.LBB839:
 7087              	.LBI839:
1889:src/keys.c    **** 	int r = State2.test;
 7088              		.loc 1 1889 12 view .LVU2226
 7089              	.LBB840:
1890:src/keys.c    **** 	int cmpx = State2.cmplx;
 7090              		.loc 1 1890 2 view .LVU2227
1891:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7091              		.loc 1 1891 2 view .LVU2228
 7092              	.LBB841:
 7093              	.LBB842:
 7094              	.LBB843:
 7095              	.LBB844:
 131:src/keys.c    **** }
 7096              		.loc 1 131 23 is_stmt 0 view .LVU2229
 7097 0a44 CD48     		ldr	r0, .L1162+4
 7098              	.LBE844:
 7099              	.LBE843:
 221:src/keys.c    **** }
 7100              		.loc 1 221 28 view .LVU2230
 7101 0a46 DFF838C3 		ldr	ip, .L1162+8
 7102              	.LBB848:
 7103              	.LBB845:
 131:src/keys.c    **** }
 7104              		.loc 1 131 23 view .LVU2231
 7105 0a4a E4B2     		uxtb	r4, r4
 7106              	.LVL549:
 131:src/keys.c    **** }
 7107              		.loc 1 131 23 view .LVU2232
 7108              	.LBE845:
 7109              	.LBE848:
 7110              	.LBE842:
 7111              	.LBE841:
1893:src/keys.c    **** 
 7112              		.loc 1 1893 44 view .LVU2233
 7113 0a4c 12F0020F 		tst	r2, #2
 7114              	.LBB853:
 7115              	.LBB851:
 7116              	.LBB849:
 7117              	.LBB846:
 131:src/keys.c    **** }
 7118              		.loc 1 131 23 view .LVU2234
 7119 0a50 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 7120              	.LBE846:
 7121              	.LBE849:
 221:src/keys.c    **** }
 7122              		.loc 1 221 28 view .LVU2235
 7123 0a52 1CF800C0 		ldrb	ip, [ip, r0]	@ zero_extendqisi2
 7124              	.LBE851:
 7125              	.LBE853:
1891:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7126              		.loc 1 1891 19 view .LVU2236
 7127 0a56 C2F3400E 		ubfx	lr, r2, #1, #1
 7128              	.LVL550:
1892:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
ARM GAS  /tmp/cceb4mPP.s 			page 217


 7129              		.loc 1 1892 2 is_stmt 1 view .LVU2237
 7130              	.LBB854:
 7131              	.LBI841:
 198:src/keys.c    **** {
 7132              		.loc 1 198 14 view .LVU2238
 7133              	.LBB852:
 200:src/keys.c    ****     // K00 - K05
 7134              		.loc 1 200 3 view .LVU2239
 221:src/keys.c    **** }
 7135              		.loc 1 221 3 view .LVU2240
 7136              	.LBB850:
 7137              	.LBI843:
 119:src/keys.c    **** {
 7138              		.loc 1 119 12 view .LVU2241
 7139              	.LBB847:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7140              		.loc 1 121 2 view .LVU2242
 131:src/keys.c    **** }
 7141              		.loc 1 131 2 view .LVU2243
 131:src/keys.c    **** }
 7142              		.loc 1 131 2 is_stmt 0 view .LVU2244
 7143              	.LBE847:
 7144              	.LBE850:
 7145              	.LBE852:
 7146              	.LBE854:
1892:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7147              		.loc 1 1892 15 view .LVU2245
 7148 0a5a 2CF08000 		bic	r0, ip, #128
 7149              	.LVL551:
1893:src/keys.c    **** 
 7150              		.loc 1 1893 2 is_stmt 1 view .LVU2246
1893:src/keys.c    **** 
 7151              		.loc 1 1893 44 is_stmt 0 view .LVU2247
 7152 0a5e 00F08C80 		beq	.L1119
 7153              	.LVL552:
1895:src/keys.c    **** 	State2.cmplx = 0;
 7154              		.loc 1 1895 2 is_stmt 1 view .LVU2248
1896:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7155              		.loc 1 1896 15 is_stmt 0 view .LVU2249
 7156 0a62 61F34102 		bfi	r2, r1, #1, #1
1897:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7157              		.loc 1 1897 5 view .LVU2250
 7158 0a66 6428     		cmp	r0, #100
1895:src/keys.c    **** 	State2.cmplx = 0;
 7159              		.loc 1 1895 14 view .LVU2251
 7160 0a68 4FF00701 		mov	r1, #7
1896:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7161              		.loc 1 1896 15 view .LVU2252
 7162 0a6c 88F81520 		strb	r2, [r8, #21]
1895:src/keys.c    **** 	State2.cmplx = 0;
 7163              		.loc 1 1895 14 view .LVU2253
 7164 0a70 88F80F10 		strb	r1, [r8, #15]
1896:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7165              		.loc 1 1896 2 is_stmt 1 view .LVU2254
1897:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7166              		.loc 1 1897 2 view .LVU2255
1897:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
ARM GAS  /tmp/cceb4mPP.s 			page 218


 7167              		.loc 1 1897 5 is_stmt 0 view .LVU2256
 7168 0a74 00F0F683 		beq	.L895
1893:src/keys.c    **** 
 7169              		.loc 1 1893 44 view .LVU2257
 7170 0a78 4FF0340A 		mov	r10, #52
 7171              	.LVL553:
 7172              	.L855:
1898:src/keys.c    **** 		// Lettered register
 7173              		.loc 1 1898 5 view .LVU2258
 7174 0a7c 7F28     		cmp	r0, #127
1893:src/keys.c    **** 
 7175              		.loc 1 1893 60 view .LVU2259
 7176 0a7e DA44     		add	r10, r10, fp
1898:src/keys.c    **** 		// Lettered register
 7177              		.loc 1 1898 2 is_stmt 1 view .LVU2260
1898:src/keys.c    **** 		// Lettered register
 7178              		.loc 1 1898 5 is_stmt 0 view .LVU2261
 7179 0a80 00F0FE80 		beq	.L625
 7180              	.LVL554:
1898:src/keys.c    **** 		// Lettered register
 7181              		.loc 1 1898 18 view .LVU2262
 7182 0a84 6328     		cmp	r0, #99
 7183 0a86 40F21F81 		bls	.L626
1898:src/keys.c    **** 		// Lettered register
 7184              		.loc 1 1898 37 view .LVU2263
 7185 0a8a 6F28     		cmp	r0, #111
 7186 0a8c 00F2F880 		bhi	.L625
1900:src/keys.c    **** 			if (n == regI_idx)
 7187              		.loc 1 1900 3 is_stmt 1 view .LVU2264
1900:src/keys.c    **** 			if (n == regI_idx)
 7188              		.loc 1 1900 6 is_stmt 0 view .LVU2265
 7189 0a90 BEF1000F 		cmp	lr, #0
 7190 0a94 00F0AB81 		beq	.L627
1900:src/keys.c    **** 			if (n == regI_idx)
 7191              		.loc 1 1900 12 view .LVU2266
 7192 0a98 1CF0010F 		tst	ip, #1
 7193 0a9c 00F0A781 		beq	.L627
1901:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7194              		.loc 1 1901 4 is_stmt 1 view .LVU2267
1901:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7195              		.loc 1 1901 7 is_stmt 0 view .LVU2268
 7196 0aa0 6D28     		cmp	r0, #109
 7197 0aa2 40F0FA80 		bne	.L628
1902:src/keys.c    **** 			// Disallow odd complex registers > A
 7198              		.loc 1 1902 5 is_stmt 1 view .LVU2269
1902:src/keys.c    **** 			// Disallow odd complex registers > A
 7199              		.loc 1 1902 30 is_stmt 0 view .LVU2270
 7200 0aa6 0BF1290B 		add	fp, fp, #41
 7201              	.LVL555:
1902:src/keys.c    **** 			// Disallow odd complex registers > A
 7202              		.loc 1 1902 30 view .LVU2271
 7203 0aaa 71E5     		b	.L594
 7204              	.LVL556:
 7205              	.L1092:
1902:src/keys.c    **** 			// Disallow odd complex registers > A
 7206              		.loc 1 1902 30 view .LVU2272
 7207              	.LBE840:
ARM GAS  /tmp/cceb4mPP.s 			page 219


 7208              	.LBE839:
2815:src/keys.c    **** 
 7209              		.loc 1 2815 3 is_stmt 1 view .LVU2273
 7210              	.LBB864:
 7211              	.LBI864:
1321:src/keys.c    **** 	int pc = -1;
 7212              		.loc 1 1321 12 view .LVU2274
 7213              	.LBB865:
1322:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7214              		.loc 1 1322 2 view .LVU2275
1323:src/keys.c    **** 
 7215              		.loc 1 1323 2 view .LVU2276
 7216              	.LBB866:
 7217              	.LBI866:
 198:src/keys.c    **** {
 7218              		.loc 1 198 14 view .LVU2277
 7219              	.LBB867:
 200:src/keys.c    ****     // K00 - K05
 7220              		.loc 1 200 3 view .LVU2278
 221:src/keys.c    **** }
 7221              		.loc 1 221 3 view .LVU2279
 7222              	.LBB868:
 7223              	.LBI868:
 119:src/keys.c    **** {
 7224              		.loc 1 119 12 view .LVU2280
 7225              	.LBB869:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7226              		.loc 1 121 2 view .LVU2281
 131:src/keys.c    **** }
 7227              		.loc 1 131 2 view .LVU2282
 131:src/keys.c    **** }
 7228              		.loc 1 131 23 is_stmt 0 view .LVU2283
 7229 0aac B34B     		ldr	r3, .L1162+4
 7230              	.LBE869:
 7231              	.LBE868:
 221:src/keys.c    **** }
 7232              		.loc 1 221 28 view .LVU2284
 7233 0aae B44A     		ldr	r2, .L1162+8
 7234 0ab0 E4B2     		uxtb	r4, r4
 7235              	.LVL557:
 7236              	.LBB871:
 7237              	.LBB870:
 131:src/keys.c    **** }
 7238              		.loc 1 131 23 view .LVU2285
 7239 0ab2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7240              	.LBE870:
 7241              	.LBE871:
 221:src/keys.c    **** }
 7242              		.loc 1 221 28 view .LVU2286
 7243 0ab4 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7244              	.LVL558:
 221:src/keys.c    **** }
 7245              		.loc 1 221 28 view .LVU2287
 7246              	.LBE867:
 7247              	.LBE866:
1325:src/keys.c    **** 		// Digit 0 - 9
 7248              		.loc 1 1325 2 is_stmt 1 view .LVU2288
ARM GAS  /tmp/cceb4mPP.s 			page 220


1325:src/keys.c    **** 		// Digit 0 - 9
 7249              		.loc 1 1325 5 is_stmt 0 view .LVU2289
 7250 0ab6 0928     		cmp	r0, #9
 7251 0ab8 40F2FB80 		bls	.L1120
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7252              		.loc 1 1330 7 is_stmt 1 view .LVU2290
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7253              		.loc 1 1330 18 is_stmt 0 view .LVU2291
 7254 0abc 20F08000 		bic	r0, r0, #128
 7255              	.LVL559:
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7256              		.loc 1 1330 10 view .LVU2292
 7257 0ac0 6428     		cmp	r0, #100
 7258 0ac2 00F08881 		beq	.L1121
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7259              		.loc 1 1331 7 is_stmt 1 view .LVU2293
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7260              		.loc 1 1331 10 is_stmt 0 view .LVU2294
 7261 0ac6 6528     		cmp	r0, #101
 7262 0ac8 00F09881 		beq	.L1122
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7263              		.loc 1 1332 7 is_stmt 1 view .LVU2295
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7264              		.loc 1 1332 10 is_stmt 0 view .LVU2296
 7265 0acc 6628     		cmp	r0, #102
 7266 0ace 00F0B481 		beq	.L1123
1333:src/keys.c    **** #endif
 7267              		.loc 1 1333 7 is_stmt 1 view .LVU2297
1333:src/keys.c    **** #endif
 7268              		.loc 1 1333 10 is_stmt 0 view .LVU2298
 7269 0ad2 6728     		cmp	r0, #103
 7270 0ad4 00F0A183 		beq	.L1124
1335:src/keys.c    **** 		// A - D
 7271              		.loc 1 1335 7 is_stmt 1 view .LVU2299
1335:src/keys.c    **** 		// A - D
 7272              		.loc 1 1335 10 is_stmt 0 view .LVU2300
 7273 0ad8 032C     		cmp	r4, #3
 7274 0ada 40F2A883 		bls	.L1125
1340:src/keys.c    **** 		// .
 7275              		.loc 1 1340 7 is_stmt 1 view .LVU2301
1340:src/keys.c    **** 		// .
 7276              		.loc 1 1340 10 is_stmt 0 view .LVU2302
 7277 0ade 262C     		cmp	r4, #38
 7278 0ae0 00F02584 		beq	.L1126
1345:src/keys.c    **** 		// ENTER - short circuit processing
 7279              		.loc 1 1345 7 is_stmt 1 view .LVU2303
1345:src/keys.c    **** 		// ENTER - short circuit processing
 7280              		.loc 1 1345 10 is_stmt 0 view .LVU2304
 7281 0ae4 0C2C     		cmp	r4, #12
 7282 0ae6 00F09F83 		beq	.L1127
1349:src/keys.c    **** 		// backspace
 7283              		.loc 1 1349 7 is_stmt 1 view .LVU2305
1349:src/keys.c    **** 		// backspace
 7284              		.loc 1 1349 10 is_stmt 0 view .LVU2306
 7285 0aea 102C     		cmp	r4, #16
 7286 0aec 00F02484 		beq	.L1128
1358:src/keys.c    **** 		// up
ARM GAS  /tmp/cceb4mPP.s 			page 221


 7287              		.loc 1 1358 7 is_stmt 1 view .LVU2307
1358:src/keys.c    **** 		// up
 7288              		.loc 1 1358 10 is_stmt 0 view .LVU2308
 7289 0af0 122C     		cmp	r4, #18
 7290 0af2 00F0B686 		beq	.L1129
1368:src/keys.c    **** 		// down
 7291              		.loc 1 1368 7 is_stmt 1 view .LVU2309
1368:src/keys.c    **** 		// down
 7292              		.loc 1 1368 10 is_stmt 0 view .LVU2310
 7293 0af6 182C     		cmp	r4, #24
 7294 0af8 7FF45FAE 		bne	.L1071
1370:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7295              		.loc 1 1370 3 is_stmt 1 view .LVU2311
1371:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7296              		.loc 1 1371 18 is_stmt 0 view .LVU2312
 7297 0afc 9E4C     		ldr	r4, .L1162
1370:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7298              		.loc 1 1370 3 view .LVU2313
 7299 0afe 0120     		movs	r0, #1
 7300 0b00 FFF7FEFF 		bl	update_program_bounds
 7301              	.LVL560:
1371:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7302              		.loc 1 1371 3 is_stmt 1 view .LVU2314
1371:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7303              		.loc 1 1371 18 is_stmt 0 view .LVU2315
 7304 0b04 2368     		ldr	r3, [r4]
1371:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7305              		.loc 1 1371 11 view .LVU2316
 7306 0b06 0021     		movs	r1, #0
 7307 0b08 B3F8EE07 		ldrh	r0, [r3, #2030]
 7308 0b0c FFF7FEFF 		bl	do_inc
 7309              	.LVL561:
1372:src/keys.c    **** 			rawpc = 1;
 7310              		.loc 1 1372 3 is_stmt 1 view .LVU2317
1372:src/keys.c    **** 			rawpc = 1;
 7311              		.loc 1 1372 6 is_stmt 0 view .LVU2318
 7312 0b10 20B9     		cbnz	r0, .L607
1372:src/keys.c    **** 			rawpc = 1;
 7313              		.loc 1 1372 21 view .LVU2319
 7314 0b12 2368     		ldr	r3, [r4]
1372:src/keys.c    **** 			rawpc = 1;
 7315              		.loc 1 1372 18 view .LVU2320
 7316 0b14 5888     		ldrh	r0, [r3, #2]
 7317              	.LVL562:
1372:src/keys.c    **** 			rawpc = 1;
 7318              		.loc 1 1372 18 view .LVU2321
 7319 0b16 0038     		subs	r0, r0, #0
 7320 0b18 18BF     		it	ne
 7321 0b1a 0120     		movne	r0, #1
 7322              	.LVL563:
 7323              	.L607:
1378:src/keys.c    **** fin2:		State2.gtodot = 0;
 7324              		.loc 1 1378 7 is_stmt 1 view .LVU2322
 7325 0b1c FFF7FEFF 		bl	set_pc
 7326              	.LVL564:
 7327              	.L611:
1379:src/keys.c    **** 		State2.digval = 0;
ARM GAS  /tmp/cceb4mPP.s 			page 222


 7328              		.loc 1 1379 8 view .LVU2323
1379:src/keys.c    **** 		State2.digval = 0;
 7329              		.loc 1 1379 22 is_stmt 0 view .LVU2324
 7330 0b20 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1380:src/keys.c    **** 		State2.numdigit = 0;
 7331              		.loc 1 1380 17 view .LVU2325
 7332 0b24 0023     		movs	r3, #0
1379:src/keys.c    **** 		State2.digval = 0;
 7333              		.loc 1 1379 22 view .LVU2326
 7334 0b26 6FF30002 		bfc	r2, #0, #1
 7335 0b2a 88F81520 		strb	r2, [r8, #21]
1380:src/keys.c    **** 		State2.numdigit = 0;
 7336              		.loc 1 1380 3 is_stmt 1 view .LVU2327
1380:src/keys.c    **** 		State2.numdigit = 0;
 7337              		.loc 1 1380 17 is_stmt 0 view .LVU2328
 7338 0b2e A8F80830 		strh	r3, [r8, #8]	@ movhi
1381:src/keys.c    **** 	}
 7339              		.loc 1 1381 3 is_stmt 1 view .LVU2329
1381:src/keys.c    **** 	}
 7340              		.loc 1 1381 19 is_stmt 0 view .LVU2330
 7341 0b32 88F80B30 		strb	r3, [r8, #11]
 7342              	.LBE865:
 7343              	.LBE864:
2815:src/keys.c    **** 
 7344              		.loc 1 2815 10 view .LVU2331
 7345 0b36 4FF0330B 		mov	fp, #51
 7346 0b3a FFF7B5BA 		b	.L565
 7347              	.LVL565:
 7348              	.L892:
2815:src/keys.c    **** 
 7349              		.loc 1 2815 10 view .LVU2332
 7350              	.LBE1192:
 7351              	.LBE1246:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 7352              		.loc 1 2931 7 view .LVU2333
 7353 0b3e 5F46     		mov	r7, fp
 7354 0b40 FFF7B2BA 		b	.L565
 7355              	.LVL566:
 7356              	.L615:
 7357              	.LBB1247:
 7358              	.LBB1193:
 7359              	.LBB883:
 7360              	.LBB698:
1234:src/keys.c    **** 
 7361              		.loc 1 1234 2 view .LVU2334
 7362 0b44 2D2C     		cmp	r4, #45
 7363 0b46 7FF438AE 		bne	.L1071
1242:src/keys.c    **** 		goto stay;
 7364              		.loc 1 1242 3 is_stmt 1 view .LVU2335
 7365 0b4a 8AF0010A 		eor	r10, r10, #1
 7366              	.LVL567:
1243:src/keys.c    **** 
 7367              		.loc 1 1243 3 view .LVU2336
 7368              	.L621:
1251:src/keys.c    **** 		State2.cmplx = cmplx;
 7369              		.loc 1 1251 3 view .LVU2337
1252:src/keys.c    **** 		State2.dot = f;
ARM GAS  /tmp/cceb4mPP.s 			page 223


 7370              		.loc 1 1252 3 view .LVU2338
1253:src/keys.c    **** 		break;
 7371              		.loc 1 1253 3 view .LVU2339
1252:src/keys.c    **** 		State2.dot = f;
 7372              		.loc 1 1252 16 is_stmt 0 view .LVU2340
 7373 0b4e 4FEA4A03 		lsl	r3, r10, #1
 7374 0b52 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7375 0b56 43F02003 		orr	r3, r3, #32
 7376 0b5a 43EA8913 		orr	r3, r3, r9, lsl #6
 7377 0b5e 03F06203 		and	r3, r3, #98
 7378 0b62 22F06202 		bic	r2, r2, #98
 7379 0b66 1343     		orrs	r3, r3, r2
 7380 0b68 88F81530 		strb	r3, [r8, #21]
1254:src/keys.c    **** 
 7381              		.loc 1 1254 3 is_stmt 1 view .LVU2341
1259:src/keys.c    **** }
 7382              		.loc 1 1259 9 is_stmt 0 view .LVU2342
 7383 0b6c 4FF0330B 		mov	fp, #51
1254:src/keys.c    **** 
 7384              		.loc 1 1254 3 view .LVU2343
 7385 0b70 FFF79ABA 		b	.L565
 7386              	.LVL568:
 7387              	.L893:
1254:src/keys.c    **** 
 7388              		.loc 1 1254 3 view .LVU2344
 7389              	.LBE698:
 7390              	.LBE883:
 7391              	.LBE1193:
 7392              	.LBE1247:
 7393              	.LBB1248:
 7394 0b74 9B46     		mov	fp, r3
 7395              	.LVL569:
1254:src/keys.c    **** 
 7396              		.loc 1 1254 3 view .LVU2345
 7397 0b76 FFF7B9BA 		b	.L841
 7398              	.LVL570:
 7399              	.L1119:
1254:src/keys.c    **** 
 7400              		.loc 1 1254 3 view .LVU2346
 7401              	.LBE1248:
 7402              	.LBB1249:
 7403              	.LBB1194:
 7404              	.LBB884:
 7405              	.LBB857:
1895:src/keys.c    **** 	State2.cmplx = 0;
 7406              		.loc 1 1895 2 is_stmt 1 view .LVU2347
1896:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7407              		.loc 1 1896 15 is_stmt 0 view .LVU2348
 7408 0b7a 6EF34102 		bfi	r2, lr, #1, #1
1895:src/keys.c    **** 	State2.cmplx = 0;
 7409              		.loc 1 1895 14 view .LVU2349
 7410 0b7e 0721     		movs	r1, #7
1897:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7411              		.loc 1 1897 5 view .LVU2350
 7412 0b80 6428     		cmp	r0, #100
1896:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7413              		.loc 1 1896 15 view .LVU2351
ARM GAS  /tmp/cceb4mPP.s 			page 224


 7414 0b82 88F81520 		strb	r2, [r8, #21]
1895:src/keys.c    **** 	State2.cmplx = 0;
 7415              		.loc 1 1895 14 view .LVU2352
 7416 0b86 88F80F10 		strb	r1, [r8, #15]
1896:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7417              		.loc 1 1896 2 is_stmt 1 view .LVU2353
1897:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7418              		.loc 1 1897 2 view .LVU2354
1897:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7419              		.loc 1 1897 5 is_stmt 0 view .LVU2355
 7420 0b8a 00F06783 		beq	.L896
1893:src/keys.c    **** 
 7421              		.loc 1 1893 44 view .LVU2356
 7422 0b8e 4FF02D0A 		mov	r10, #45
 7423              	.LVL571:
1893:src/keys.c    **** 
 7424              		.loc 1 1893 44 view .LVU2357
 7425 0b92 73E7     		b	.L855
 7426              	.LVL572:
 7427              	.L1095:
1893:src/keys.c    **** 
 7428              		.loc 1 1893 44 view .LVU2358
 7429              	.LBE857:
 7430              	.LBE884:
2824:src/keys.c    **** 
 7431              		.loc 1 2824 3 is_stmt 1 view .LVU2359
 7432              	.LBB885:
 7433              	.LBB886:
2458:src/keys.c    **** 
 7434              		.loc 1 2458 12 is_stmt 0 view .LVU2360
 7435 0b94 784A     		ldr	r2, .L1162
 7436 0b96 1268     		ldr	r2, [r2]
2458:src/keys.c    **** 
 7437              		.loc 1 2458 31 view .LVU2361
 7438 0b98 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7439              	.LBE886:
 7440              	.LBE885:
2824:src/keys.c    **** 
 7441              		.loc 1 2824 10 view .LVU2362
 7442 0b9c E4B2     		uxtb	r4, r4
 7443              	.LVL573:
 7444              	.LBB903:
 7445              	.LBI885:
2456:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7446              		.loc 1 2456 12 is_stmt 1 view .LVU2363
 7447              	.LBB896:
2457:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7448              		.loc 1 2457 2 view .LVU2364
2458:src/keys.c    **** 
 7449              		.loc 1 2458 2 view .LVU2365
2458:src/keys.c    **** 
 7450              		.loc 1 2458 31 is_stmt 0 view .LVU2366
 7451 0b9e 002A     		cmp	r2, #0
 7452 0ba0 B4BF     		ite	lt
 7453 0ba2 0B20     		movlt	r0, #11
 7454 0ba4 0A20     		movge	r0, #10
 7455              	.LVL574:
ARM GAS  /tmp/cceb4mPP.s 			page 225


2460:src/keys.c    **** 		if (--n < -2)
 7456              		.loc 1 2460 2 is_stmt 1 view .LVU2367
2460:src/keys.c    **** 		if (--n < -2)
 7457              		.loc 1 2460 5 is_stmt 0 view .LVU2368
 7458 0ba6 122C     		cmp	r4, #18
 7459 0ba8 00F00F81 		beq	.L1130
2464:src/keys.c    **** 		if (++n > max)
 7460              		.loc 1 2464 7 is_stmt 1 view .LVU2369
2464:src/keys.c    **** 		if (++n > max)
 7461              		.loc 1 2464 10 is_stmt 0 view .LVU2370
 7462 0bac 182C     		cmp	r4, #24
 7463 0bae 00F03381 		beq	.L1131
2468:src/keys.c    **** 		State2.status = 0;
 7464              		.loc 1 2468 7 is_stmt 1 view .LVU2371
2468:src/keys.c    **** 		State2.status = 0;
 7465              		.loc 1 2468 10 is_stmt 0 view .LVU2372
 7466 0bb2 102C     		cmp	r4, #16
 7467 0bb4 00F01884 		beq	.L1132
 7468              	.LBB887:
2473:src/keys.c    **** 		if (nn <= 9)
 7469              		.loc 1 2473 3 is_stmt 1 view .LVU2373
 7470              	.LVL575:
 7471              	.LBB888:
 7472              	.LBI888:
 198:src/keys.c    **** {
 7473              		.loc 1 198 14 view .LVU2374
 7474              	.LBB889:
 200:src/keys.c    ****     // K00 - K05
 7475              		.loc 1 200 3 view .LVU2375
 221:src/keys.c    **** }
 7476              		.loc 1 221 3 view .LVU2376
 7477              	.LBB890:
 7478              	.LBI890:
 119:src/keys.c    **** {
 7479              		.loc 1 119 12 view .LVU2377
 7480              	.LBB891:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7481              		.loc 1 121 2 view .LVU2378
 131:src/keys.c    **** }
 7482              		.loc 1 131 2 view .LVU2379
 131:src/keys.c    **** }
 7483              		.loc 1 131 23 is_stmt 0 view .LVU2380
 7484 0bb8 704A     		ldr	r2, .L1162+4
 7485              	.LBE891:
 7486              	.LBE890:
 221:src/keys.c    **** }
 7487              		.loc 1 221 28 view .LVU2381
 7488 0bba 7149     		ldr	r1, .L1162+8
 7489              	.LBB893:
 7490              	.LBB892:
 131:src/keys.c    **** }
 7491              		.loc 1 131 23 view .LVU2382
 7492 0bbc 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 7493 0bbe 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7494 0bc0 02F07F02 		and	r2, r2, #127
 7495              	.LVL576:
 131:src/keys.c    **** }
ARM GAS  /tmp/cceb4mPP.s 			page 226


 7496              		.loc 1 131 23 view .LVU2383
 7497              	.LBE892:
 7498              	.LBE893:
 7499              	.LBE889:
 7500              	.LBE888:
2474:src/keys.c    **** 			n = nn;
 7501              		.loc 1 2474 3 is_stmt 1 view .LVU2384
2474:src/keys.c    **** 			n = nn;
 7502              		.loc 1 2474 6 is_stmt 0 view .LVU2385
 7503 0bc4 092A     		cmp	r2, #9
 7504 0bc6 08D9     		bls	.L641
2476:src/keys.c    **** 			n = n == max ? 10 : max;
 7505              		.loc 1 2476 11 view .LVU2386
 7506 0bc8 702A     		cmp	r2, #112
 7507              	.LBE887:
2457:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7508              		.loc 1 2457 6 view .LVU2387
 7509 0bca A3F10303 		sub	r3, r3, #3
 7510              	.LVL577:
 7511              	.LBB894:
2476:src/keys.c    **** 			n = n == max ? 10 : max;
 7512              		.loc 1 2476 8 is_stmt 1 view .LVU2388
2476:src/keys.c    **** 			n = n == max ? 10 : max;
 7513              		.loc 1 2476 11 is_stmt 0 view .LVU2389
 7514 0bce 00F02F81 		beq	.L1133
2478:src/keys.c    **** 			n = 10; 
 7515              		.loc 1 2478 8 is_stmt 1 view .LVU2390
2478:src/keys.c    **** 			n = 10; 
 7516              		.loc 1 2478 11 is_stmt 0 view .LVU2391
 7517 0bd2 7F2A     		cmp	r2, #127
 7518 0bd4 00F01F83 		beq	.L1056
 7519              	.L863:
 7520 0bd8 0A22     		movs	r2, #10
 7521              	.LVL578:
 7522              	.L641:
2478:src/keys.c    **** 			n = 10; 
 7523              		.loc 1 2478 11 view .LVU2392
 7524              	.LBE894:
2481:src/keys.c    **** 
 7525              		.loc 1 2481 2 is_stmt 1 view .LVU2393
2481:src/keys.c    **** 
 7526              		.loc 1 2481 20 is_stmt 0 view .LVU2394
 7527 0bda 0332     		adds	r2, r2, #3
2481:src/keys.c    **** 
 7528              		.loc 1 2481 16 view .LVU2395
 7529 0bdc 88F80C20 		strb	r2, [r8, #12]
2483:src/keys.c    **** }
 7530              		.loc 1 2483 2 is_stmt 1 view .LVU2396
 7531              	.LBE896:
 7532              	.LBE903:
2824:src/keys.c    **** 
 7533              		.loc 1 2824 10 is_stmt 0 view .LVU2397
 7534 0be0 4FF0330B 		mov	fp, #51
 7535              	.LBB904:
 7536              	.LBB897:
2483:src/keys.c    **** }
 7537              		.loc 1 2483 9 view .LVU2398
ARM GAS  /tmp/cceb4mPP.s 			page 227


 7538 0be4 FFF760BA 		b	.L565
 7539              	.LVL579:
 7540              	.L1099:
2483:src/keys.c    **** }
 7541              		.loc 1 2483 9 view .LVU2399
 7542              	.LBE897:
 7543              	.LBE904:
2847:src/keys.c    **** 
 7544              		.loc 1 2847 3 is_stmt 1 view .LVU2400
 7545              	.LBB905:
 7546              	.LBB906:
 7547              	.LBB907:
 7548              	.LBB908:
 7549              	.LBB909:
 7550              	.LBB910:
 7551              	.LBB911:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7552              		.loc 1 85 18 is_stmt 0 view .LVU2401
 7553 0be8 FFF7FEFF 		bl	shift_down
 7554              	.LVL580:
 7555              	.LBE911:
 7556              	.LBE910:
 7557              	.LBE909:
 7558              	.LBE908:
 7559              	.LBE907:
 7560              	.LBE906:
 7561              	.LBE905:
2847:src/keys.c    **** 
 7562              		.loc 1 2847 10 view .LVU2402
 7563 0bec E4B2     		uxtb	r4, r4
 7564              	.LVL581:
 7565              	.LBB931:
 7566              	.LBI905:
1266:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7567              		.loc 1 1266 12 is_stmt 1 view .LVU2403
 7568              	.LBB928:
1267:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7569              		.loc 1 1267 2 view .LVU2404
1272:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7570              		.loc 1 1272 2 view .LVU2405
1276:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7571              		.loc 1 1276 2 view .LVU2406
 7572              	.LBB920:
 7573              	.LBI907:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 7574              		.loc 1 102 13 view .LVU2407
 7575              	.LBE920:
 7576              	.LBE928:
 7577              	.LBE931:
 7578              	.LBE1194:
 7579              	.LBE1249:
 103:src/keys.c    **** }
 7580              		.loc 1 103 2 view .LVU2408
 7581              	.LBB1250:
 7582              	.LBB1195:
 7583              	.LBB932:
 7584              	.LBB929:
ARM GAS  /tmp/cceb4mPP.s 			page 228


 7585              	.LBB921:
 7586              	.LBB917:
 7587              	.LBI908:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 7588              		.loc 1 92 20 view .LVU2409
 7589              	.LBB914:
  93:src/keys.c    **** 	State2.shifts = shift;
 7590              		.loc 1 93 2 view .LVU2410
 7591              	.LBB913:
 7592              	.LBI910:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 7593              		.loc 1 84 13 view .LVU2411
 7594              	.LBB912:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7595              		.loc 1 85 2 view .LVU2412
  86:src/keys.c    **** }
 7596              		.loc 1 86 2 view .LVU2413
  86:src/keys.c    **** }
 7597              		.loc 1 86 52 is_stmt 0 view .LVU2414
 7598 0bee 8346     		mov	fp, r0
 7599 0bf0 08B9     		cbnz	r0, .L651
 7600 0bf2 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 7601              	.L651:
 7602              	.LVL582:
  86:src/keys.c    **** }
 7603              		.loc 1 86 52 view .LVU2415
 7604              	.LBE912:
 7605              	.LBE913:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7606              		.loc 1 94 2 is_stmt 1 view .LVU2416
 7607              	.LBE914:
 7608              	.LBE917:
 7609              	.LBE921:
1279:src/keys.c    **** 	set_last_menu ();
 7610              		.loc 1 1279 15 is_stmt 0 view .LVU2417
 7611 0bf6 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7612              	.LBB922:
 7613              	.LBB918:
 7614              	.LBB915:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7615              		.loc 1 94 16 view .LVU2418
 7616 0bfa 0023     		movs	r3, #0
 7617              	.LBE915:
 7618              	.LBE918:
 7619              	.LBE922:
1277:src/keys.c    **** 
 7620              		.loc 1 1277 23 view .LVU2419
 7621 0bfc ABF1010A 		sub	r10, fp, #1
 7622              	.LVL583:
1279:src/keys.c    **** 	set_last_menu ();
 7623              		.loc 1 1279 15 view .LVU2420
 7624 0c00 63F38202 		bfi	r2, r3, #2, #1
1277:src/keys.c    **** 
 7625              		.loc 1 1277 23 view .LVU2421
 7626 0c04 BAFA8AFA 		clz	r10, r10
1279:src/keys.c    **** 	set_last_menu ();
 7627              		.loc 1 1279 15 view .LVU2422
ARM GAS  /tmp/cceb4mPP.s 			page 229


 7628 0c08 88F81520 		strb	r2, [r8, #21]
 7629              	.LBB923:
 7630              	.LBB919:
 7631              	.LBB916:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7632              		.loc 1 94 16 view .LVU2423
 7633 0c0c 88F81030 		strb	r3, [r8, #16]
  95:src/keys.c    **** 	return r;
 7634              		.loc 1 95 2 is_stmt 1 view .LVU2424
  95:src/keys.c    **** 	return r;
 7635              		.loc 1 95 19 is_stmt 0 view .LVU2425
 7636 0c10 88F80D30 		strb	r3, [r8, #13]
  96:src/keys.c    **** }
 7637              		.loc 1 96 2 is_stmt 1 view .LVU2426
 7638              	.LVL584:
  96:src/keys.c    **** }
 7639              		.loc 1 96 2 is_stmt 0 view .LVU2427
 7640              	.LBE916:
 7641              	.LBE919:
 7642              	.LBE923:
1277:src/keys.c    **** 
 7643              		.loc 1 1277 2 is_stmt 1 view .LVU2428
1277:src/keys.c    **** 
 7644              		.loc 1 1277 23 is_stmt 0 view .LVU2429
 7645 0c14 4FEA5A1A 		lsr	r10, r10, #5
 7646              	.LVL585:
1279:src/keys.c    **** 	set_last_menu ();
 7647              		.loc 1 1279 2 is_stmt 1 view .LVU2430
1280:src/keys.c    **** 	display_current_menu ();
 7648              		.loc 1 1280 2 view .LVU2431
 7649 0c18 FFF7FEFF 		bl	set_last_menu
 7650              	.LVL586:
1281:src/keys.c    **** 
 7651              		.loc 1 1281 2 view .LVU2432
 7652 0c1c FFF7FEFF 		bl	display_current_menu
 7653              	.LVL587:
1283:src/keys.c    **** 	
 7654              		.loc 1 1283 2 view .LVU2433
1283:src/keys.c    **** 	
 7655              		.loc 1 1283 5 is_stmt 0 view .LVU2434
 7656 0c20 BBF1000F 		cmp	fp, #0
 7657 0c24 3FF4C9AD 		beq	.L1071
1285:src/keys.c    **** 		return op_map[c - K10][f];
 7658              		.loc 1 1285 2 is_stmt 1 view .LVU2435
1285:src/keys.c    **** 		return op_map[c - K10][f];
 7659              		.loc 1 1285 15 is_stmt 0 view .LVU2436
 7660 0c28 A31F     		subs	r3, r4, #6
1285:src/keys.c    **** 		return op_map[c - K10][f];
 7661              		.loc 1 1285 5 view .LVU2437
 7662 0c2a DAB2     		uxtb	r2, r3
 7663 0c2c 022A     		cmp	r2, #2
 7664 0c2e 40F2EC80 		bls	.L1134
1288:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7665              		.loc 1 1288 2 is_stmt 1 view .LVU2438
1288:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7666              		.loc 1 1288 15 is_stmt 0 view .LVU2439
 7667 0c32 0E3C     		subs	r4, r4, #14
ARM GAS  /tmp/cceb4mPP.s 			page 230


 7668              	.LVL588:
1288:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7669              		.loc 1 1288 5 view .LVU2440
 7670 0c34 E3B2     		uxtb	r3, r4
 7671 0c36 012B     		cmp	r3, #1
 7672 0c38 3FF6BFAD 		bhi	.L1071
1289:src/keys.c    **** 
 7673              		.loc 1 1289 3 is_stmt 1 view .LVU2441
 7674 0c3c 514B     		ldr	r3, .L1162+12
 7675              	.LBB924:
 7676              	.LBB925:
 647:src/keys.c    **** }
 7677              		.loc 1 647 15 is_stmt 0 view .LVU2442
 7678 0c3e 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 7679              	.LBE925:
 7680              	.LBE924:
1289:src/keys.c    **** 
 7681              		.loc 1 1289 3 view .LVU2443
 7682 0c42 03EB4404 		add	r4, r3, r4, lsl #1
 7683              	.LVL589:
1291:src/keys.c    **** }
 7684              		.loc 1 1291 9 view .LVU2444
 7685 0c46 4FF0330B 		mov	fp, #51
 7686              	.LVL590:
1289:src/keys.c    **** 
 7687              		.loc 1 1289 3 view .LVU2445
 7688 0c4a 14F80A30 		ldrb	r3, [r4, r10]	@ zero_extendqisi2
 7689              	.LVL591:
 7690              	.LBB927:
 7691              	.LBI924:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 7692              		.loc 1 646 13 is_stmt 1 view .LVU2446
 7693              	.LBB926:
 647:src/keys.c    **** }
 7694              		.loc 1 647 2 view .LVU2447
 647:src/keys.c    **** }
 7695              		.loc 1 647 15 is_stmt 0 view .LVU2448
 7696 0c4e 9A42     		cmp	r2, r3
 7697 0c50 08BF     		it	eq
 7698 0c52 0023     		moveq	r3, #0
 7699              	.LVL592:
 647:src/keys.c    **** }
 7700              		.loc 1 647 15 view .LVU2449
 7701 0c54 88F81130 		strb	r3, [r8, #17]
 648:src/keys.c    **** 
 7702              		.loc 1 648 1 view .LVU2450
 7703 0c58 FFF726BA 		b	.L565
 7704              	.LVL593:
 7705              	.L1136:
 648:src/keys.c    **** 
 7706              		.loc 1 648 1 view .LVU2451
 7707              	.LBE926:
 7708              	.LBE927:
 7709              	.LBE929:
 7710              	.LBE932:
 7711              	.LBB933:
 7712              	.LBB653:
ARM GAS  /tmp/cceb4mPP.s 			page 231


 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7713              		.loc 1 263 74 view .LVU2452
 7714 0c5c D8F81430 		ldr	r3, [r8, #20]
 7715 0c60 4949     		ldr	r1, .L1162+16
 7716 0c62 0B42     		tst	r3, r1
 7717 0c64 44D0     		beq	.L656
 266:src/keys.c    ****     /*
 7718              		.loc 1 266 3 is_stmt 1 view .LVU2453
 266:src/keys.c    ****     /*
 7719              		.loc 1 266 23 is_stmt 0 view .LVU2454
 7720 0c66 4949     		ldr	r1, .L1162+20
 266:src/keys.c    ****     /*
 7721              		.loc 1 266 6 view .LVU2455
 7722 0c68 0B42     		tst	r3, r1
 7723 0c6a 3FF408AB 		beq	.L853
 7724              	.L658:
 7725              	.LBB648:
 335:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7726              		.loc 1 335 5 is_stmt 1 view .LVU2456
 357:src/keys.c    **** 
 7727              		.loc 1 357 5 view .LVU2457
 362:src/keys.c    ****     col = smap[shift];
 7728              		.loc 1 362 5 view .LVU2458
 7729              	.LVL594:
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7730              		.loc 1 363 5 view .LVU2459
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7731              		.loc 1 363 15 is_stmt 0 view .LVU2460
 7732 0c6e 4849     		ldr	r1, .L1162+24
 362:src/keys.c    ****     col = smap[shift];
 7733              		.loc 1 362 8 view .LVU2461
 7734 0c70 484B     		ldr	r3, .L1162+28
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7735              		.loc 1 363 9 view .LVU2462
 7736 0c72 11F80AC0 		ldrb	ip, [r1, r10]	@ zero_extendqisi2
 7737              	.LVL595:
 364:src/keys.c    ****   }
 7738              		.loc 1 364 5 is_stmt 1 view .LVU2463
 364:src/keys.c    ****   }
 7739              		.loc 1 364 9 is_stmt 0 view .LVU2464
 7740 0c76 0621     		movs	r1, #6
 7741 0c78 FFF710BB 		b	.L661
 7742              	.LVL596:
 7743              	.L631:
 364:src/keys.c    ****   }
 7744              		.loc 1 364 9 view .LVU2465
 7745              	.LBE648:
 7746              	.LBE653:
 7747              	.LBE933:
 7748              	.LBB934:
 7749              	.LBB858:
1917:src/keys.c    **** 		// digit 2..9, -> or .
 7750              		.loc 1 1917 7 is_stmt 1 view .LVU2466
1917:src/keys.c    **** 		// digit 2..9, -> or .
 7751              		.loc 1 1917 10 is_stmt 0 view .LVU2467
 7752 0c7c 0928     		cmp	r0, #9
 7753 0c7e 51D9     		bls	.L633
ARM GAS  /tmp/cceb4mPP.s 			page 232


 7754              	.L625:
1917:src/keys.c    **** 		// digit 2..9, -> or .
 7755              		.loc 1 1917 19 view .LVU2468
 7756 0c80 2C2C     		cmp	r4, #44
 7757 0c82 4FD0     		beq	.L633
1917:src/keys.c    **** 		// digit 2..9, -> or .
 7758              		.loc 1 1917 35 view .LVU2469
 7759 0c84 262C     		cmp	r4, #38
 7760 0c86 4DD0     		beq	.L633
1923:src/keys.c    **** 	case K11:					// tests vs register
 7761              		.loc 1 1923 2 is_stmt 1 view .LVU2470
 7762 0c88 0C2C     		cmp	r4, #12
 7763 0c8a 3FF499AD 		beq	.L813
 7764 0c8e 102C     		cmp	r4, #16
 7765 0c90 3FF493AD 		beq	.L1071
 7766 0c94 072C     		cmp	r4, #7
 7767 0c96 3FF493AD 		beq	.L813
 7768              	.L628:
1937:src/keys.c    **** 	State2.cmplx = cmpx;
 7769              		.loc 1 1937 2 view .LVU2471
1938:src/keys.c    **** 	return STATE_UNFINISHED;
 7770              		.loc 1 1938 15 is_stmt 0 view .LVU2472
 7771 0c9a 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1937:src/keys.c    **** 	State2.cmplx = cmpx;
 7772              		.loc 1 1937 14 view .LVU2473
 7773 0c9e 88F80FB0 		strb	fp, [r8, #15]
1938:src/keys.c    **** 	return STATE_UNFINISHED;
 7774              		.loc 1 1938 2 is_stmt 1 view .LVU2474
1938:src/keys.c    **** 	return STATE_UNFINISHED;
 7775              		.loc 1 1938 15 is_stmt 0 view .LVU2475
 7776 0ca2 6EF34103 		bfi	r3, lr, #1, #1
 7777 0ca6 88F81530 		strb	r3, [r8, #21]
1939:src/keys.c    **** }
 7778              		.loc 1 1939 2 is_stmt 1 view .LVU2476
1939:src/keys.c    **** }
 7779              		.loc 1 1939 9 is_stmt 0 view .LVU2477
 7780 0caa 4FF0330B 		mov	fp, #51
 7781              	.LVL597:
1939:src/keys.c    **** }
 7782              		.loc 1 1939 9 view .LVU2478
 7783 0cae FFF7FBB9 		b	.L565
 7784              	.LVL598:
 7785              	.L1120:
1939:src/keys.c    **** }
 7786              		.loc 1 1939 9 view .LVU2479
 7787              	.LBE858:
 7788              	.LBE934:
 7789              	.LBB935:
 7790              	.LBB874:
1327:src/keys.c    **** 	}
 7791              		.loc 1 1327 3 is_stmt 1 view .LVU2480
1327:src/keys.c    **** 	}
 7792              		.loc 1 1327 8 is_stmt 0 view .LVU2481
 7793 0cb2 FFF7FEFF 		bl	gtodot_digit
 7794              	.LVL599:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7795              		.loc 1 1376 2 is_stmt 1 view .LVU2482
ARM GAS  /tmp/cceb4mPP.s 			page 233


1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7796              		.loc 1 1376 5 is_stmt 0 view .LVU2483
 7797 0cb6 0028     		cmp	r0, #0
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7798              		.loc 1 1376 5 view .LVU2484
 7799 0cb8 FFF67FAD 		blt	.L1071
 7800              	.L597:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7801              		.loc 1 1377 3 is_stmt 1 view .LVU2485
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7802              		.loc 1 1377 11 is_stmt 0 view .LVU2486
 7803 0cbc FFF7FEFF 		bl	find_user_pc
 7804              	.LVL600:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7805              		.loc 1 1377 11 view .LVU2487
 7806 0cc0 2CE7     		b	.L607
 7807              	.LVL601:
 7808              	.L894:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7809              		.loc 1 1377 11 view .LVU2488
 7810              	.LBE874:
 7811              	.LBE935:
 7812              	.LBE1195:
 7813              	.LBE1250:
 7814              	.LBB1251:
 7815 0cc2 BB46     		mov	fp, r7
 7816              	.LVL602:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7817              		.loc 1 1377 11 view .LVU2489
 7818 0cc4 FFF712BA 		b	.L841
 7819              	.LVL603:
 7820              	.L626:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7821              		.loc 1 1377 11 view .LVU2490
 7822              	.LBE1251:
 7823              	.LBB1252:
 7824              	.LBB1196:
 7825              	.LBB936:
 7826              	.LBB859:
1909:src/keys.c    **** 		// Special 0
 7827              		.loc 1 1909 7 is_stmt 1 view .LVU2491
1909:src/keys.c    **** 		// Special 0
 7828              		.loc 1 1909 10 is_stmt 0 view .LVU2492
 7829 0cc8 0028     		cmp	r0, #0
 7830 0cca 40F09787 		bne	.L629
1911:src/keys.c    **** 	}
 7831              		.loc 1 1911 3 is_stmt 1 view .LVU2493
1911:src/keys.c    **** 	}
 7832              		.loc 1 1911 18 is_stmt 0 view .LVU2494
 7833 0cce BEF1000F 		cmp	lr, #0
 7834 0cd2 14BF     		ite	ne
 7835 0cd4 2523     		movne	r3, #37
 7836 0cd6 1723     		moveq	r3, #23
1911:src/keys.c    **** 	}
 7837              		.loc 1 1911 47 view .LVU2495
 7838 0cd8 9B44     		add	fp, fp, r3
 7839              	.LVL604:
ARM GAS  /tmp/cceb4mPP.s 			page 234


1911:src/keys.c    **** 	}
 7840              		.loc 1 1911 47 view .LVU2496
 7841 0cda 59E4     		b	.L594
 7842              	.LVL605:
 7843              	.L1102:
1911:src/keys.c    **** 	}
 7844              		.loc 1 1911 47 view .LVU2497
 7845              	.LBE859:
 7846              	.LBE936:
 7847              	.LBB937:
 7848              	.LBB654:
 372:src/keys.c    ****       break;
 7849              		.loc 1 372 7 is_stmt 1 view .LVU2498
 372:src/keys.c    ****       break;
 7850              		.loc 1 372 11 is_stmt 0 view .LVU2499
 7851 0cdc 6344     		add	r3, r3, ip
 7852              	.LVL606:
 372:src/keys.c    ****       break;
 7853              		.loc 1 372 11 view .LVU2500
 7854 0cde 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7855              	.LVL607:
 373:src/keys.c    ****     }
 7856              		.loc 1 373 7 is_stmt 1 view .LVU2501
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7857              		.loc 1 376 3 view .LVU2502
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7858              		.loc 1 376 6 is_stmt 0 view .LVU2503
 7859 0ce2 1307     		lsls	r3, r2, #28
 7860 0ce4 7ED5     		bpl	.L1135
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7861              		.loc 1 376 20 view .LVU2504
 7862 0ce6 ABF10B03 		sub	r3, fp, #11
 7863 0cea 042B     		cmp	r3, #4
 7864 0cec 3FF6FFAB 		bhi	.L671
 7865              	.LVL608:
 7866              	.L656:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7867              		.loc 1 376 20 view .LVU2505
 7868              	.LBE654:
 7869              	.LBE937:
2856:src/keys.c    **** 			return STATE_UNFINISHED;
 7870              		.loc 1 2856 3 is_stmt 1 view .LVU2506
2856:src/keys.c    **** 			return STATE_UNFINISHED;
 7871              		.loc 1 2856 7 is_stmt 0 view .LVU2507
 7872 0cf0 FFF7FEFF 		bl	is_bad_cmdline
 7873              	.LVL609:
2856:src/keys.c    **** 			return STATE_UNFINISHED;
 7874              		.loc 1 2856 6 view .LVU2508
 7875 0cf4 0446     		mov	r4, r0
 7876 0cf6 0028     		cmp	r0, #0
 7877 0cf8 7FF45FAD 		bne	.L1071
2858:src/keys.c    **** 		init_cat( cat );
 7878              		.loc 1 2858 3 is_stmt 1 view .LVU2509
 7879 0cfc FFF7FEFF 		bl	init_cat
 7880              	.LVL610:
2859:src/keys.c    **** 		return STATE_UNFINISHED;
 7881              		.loc 1 2859 3 view .LVU2510
ARM GAS  /tmp/cceb4mPP.s 			page 235


 7882 0d00 5846     		mov	r0, fp
 7883 0d02 FFF7FEFF 		bl	init_cat
 7884              	.LVL611:
2860:src/keys.c    **** 	}
 7885              		.loc 1 2860 3 view .LVU2511
 7886              	.LBE1196:
 7887              	.LBE1252:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 7888              		.loc 1 2931 7 is_stmt 0 view .LVU2512
 7889 0d06 2746     		mov	r7, r4
 7890              	.LBB1253:
 7891              	.LBB1197:
2860:src/keys.c    **** 	}
 7892              		.loc 1 2860 10 view .LVU2513
 7893 0d08 4FF0330B 		mov	fp, #51
 7894 0d0c FFF7CCB9 		b	.L565
 7895              	.LVL612:
 7896              	.L1100:
 7897              	.LBB938:
 7898              	.LBB655:
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7899              		.loc 1 263 16 view .LVU2514
 7900 0d10 BAF1030F 		cmp	r10, #3
 7901 0d14 A2D0     		beq	.L1136
 266:src/keys.c    ****     /*
 7902              		.loc 1 266 3 is_stmt 1 view .LVU2515
 266:src/keys.c    ****     /*
 7903              		.loc 1 266 23 is_stmt 0 view .LVU2516
 7904 0d16 1D49     		ldr	r1, .L1162+20
 7905 0d18 D8F81430 		ldr	r3, [r8, #20]
 266:src/keys.c    ****     /*
 7906              		.loc 1 266 6 view .LVU2517
 7907 0d1c 1942     		tst	r1, r3
 7908 0d1e 3FF4EAAA 		beq	.L666
 7909 0d22 A4E7     		b	.L658
 7910              	.LVL613:
 7911              	.L633:
 266:src/keys.c    ****     /*
 7912              		.loc 1 266 6 view .LVU2518
 7913              	.LBE655:
 7914              	.LBE938:
 7915              	.LBB939:
 7916              	.LBB860:
1919:src/keys.c    **** 		return process_arg(c);
 7917              		.loc 1 1919 3 is_stmt 1 view .LVU2519
 7918              	.LBB855:
 7919              	.LBI855:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 7920              		.loc 1 501 13 view .LVU2520
 7921              	.LBB856:
 502:src/keys.c    **** 		return;
 7922              		.loc 1 502 2 view .LVU2521
 502:src/keys.c    **** 		return;
 7923              		.loc 1 502 6 is_stmt 0 view .LVU2522
 7924 0d24 FFF7FEFF 		bl	is_bad_cmdline
 7925              	.LVL614:
 502:src/keys.c    **** 		return;
ARM GAS  /tmp/cceb4mPP.s 			page 236


 7926              		.loc 1 502 5 view .LVU2523
 7927 0d28 18B9     		cbnz	r0, .L635
 7928 0d2a 5FFA8AF0 		uxtb	r0, r10
 7929 0d2e FFF7FEFF 		bl	init_arg.part.0
 7930              	.LVL615:
 7931              	.L635:
 502:src/keys.c    **** 		return;
 7932              		.loc 1 502 5 view .LVU2524
 7933              	.LBE856:
 7934              	.LBE855:
1920:src/keys.c    **** 	}
 7935              		.loc 1 1920 3 is_stmt 1 view .LVU2525
1920:src/keys.c    **** 	}
 7936              		.loc 1 1920 10 is_stmt 0 view .LVU2526
 7937 0d32 2046     		mov	r0, r4
 7938 0d34 FFF7FEFF 		bl	process_arg
 7939              	.LVL616:
 7940 0d38 8346     		mov	fp, r0
 7941              	.LVL617:
1920:src/keys.c    **** 	}
 7942              		.loc 1 1920 10 view .LVU2527
 7943 0d3a 29E4     		b	.L594
 7944              	.LVL618:
 7945              	.L1096:
1920:src/keys.c    **** 	}
 7946              		.loc 1 1920 10 view .LVU2528
 7947              	.LBE860:
 7948              	.LBE939:
2830:src/keys.c    **** 		return STATE_UNFINISHED;
 7949              		.loc 1 2830 3 is_stmt 1 view .LVU2529
 7950              	.LBB940:
 7951              	.LBI940:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7952              		.loc 1 109 13 view .LVU2530
 7953              	.LBB941:
 110:src/keys.c    **** }
 7954              		.loc 1 110 2 view .LVU2531
 110:src/keys.c    **** }
 7955              		.loc 1 110 16 is_stmt 0 view .LVU2532
 7956 0d3c 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7957 0d40 013B     		subs	r3, r3, #1
 7958 0d42 18BF     		it	ne
 7959 0d44 0123     		movne	r3, #1
 7960 0d46 88F81030 		strb	r3, [r8, #16]
 7961              	.LVL619:
 110:src/keys.c    **** }
 7962              		.loc 1 110 16 view .LVU2533
 7963              	.LBE941:
 7964              	.LBE940:
2831:src/keys.c    **** 	}
 7965              		.loc 1 2831 3 is_stmt 1 view .LVU2534
2831:src/keys.c    **** 	}
 7966              		.loc 1 2831 10 is_stmt 0 view .LVU2535
 7967 0d4a 4FF0330B 		mov	fp, #51
 7968 0d4e FFF7ABB9 		b	.L565
 7969              	.LVL620:
 7970              	.L616:
ARM GAS  /tmp/cceb4mPP.s 			page 237


 7971              	.LBB942:
 7972              	.LBB699:
1247:src/keys.c    **** 		// fall trough
 7973              		.loc 1 1247 3 is_stmt 1 view .LVU2536
1247:src/keys.c    **** 		// fall trough
 7974              		.loc 1 1247 10 is_stmt 0 view .LVU2537
 7975 0d52 A4F12909 		sub	r9, r4, #41
 7976              	.LVL621:
1247:src/keys.c    **** 		// fall trough
 7977              		.loc 1 1247 10 view .LVU2538
 7978 0d56 B9FA89F9 		clz	r9, r9
 7979 0d5a 4FEA5919 		lsr	r9, r9, #5
 7980              	.LVL622:
1247:src/keys.c    **** 		// fall trough
 7981              		.loc 1 1247 10 view .LVU2539
 7982 0d5e F6E6     		b	.L621
 7983              	.LVL623:
 7984              	.L1097:
1247:src/keys.c    **** 		// fall trough
 7985              		.loc 1 1247 10 view .LVU2540
 7986              	.LBE699:
 7987              	.LBE942:
2834:src/keys.c    **** 		return STATE_UNFINISHED;
 7988              		.loc 1 2834 3 is_stmt 1 view .LVU2541
 7989              	.LBB943:
 7990              	.LBI943:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7991              		.loc 1 109 13 view .LVU2542
 7992              	.LBB944:
 110:src/keys.c    **** }
 7993              		.loc 1 110 2 view .LVU2543
 110:src/keys.c    **** }
 7994              		.loc 1 110 16 is_stmt 0 view .LVU2544
 7995 0d60 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 7996 0d64 022A     		cmp	r2, #2
 7997 0d66 18BF     		it	ne
 7998 0d68 0223     		movne	r3, #2
 7999 0d6a 88F81030 		strb	r3, [r8, #16]
 8000              	.LVL624:
 110:src/keys.c    **** }
 8001              		.loc 1 110 16 view .LVU2545
 8002              	.LBE944:
 8003              	.LBE943:
2835:src/keys.c    **** 	}
 8004              		.loc 1 2835 3 is_stmt 1 view .LVU2546
2835:src/keys.c    **** 	}
 8005              		.loc 1 2835 10 is_stmt 0 view .LVU2547
 8006 0d6e 4FF0330B 		mov	fp, #51
 8007 0d72 FFF799B9 		b	.L565
 8008              	.L1163:
 8009 0d76 00BF     		.align	2
 8010              	.L1162:
 8011 0d78 00000000 		.word	main_ram
 8012 0d7c 00000000 		.word	.LANCHOR1
 8013 0d80 00000000 		.word	.LANCHOR0
 8014 0d84 00000000 		.word	.LANCHOR15
 8015 0d88 000A4000 		.word	4196864
ARM GAS  /tmp/cceb4mPP.s 			page 238


 8016 0d8c 00080800 		.word	526336
 8017 0d90 00000000 		.word	.LANCHOR16
 8018 0d94 00000000 		.word	.LANCHOR10
 8019 0d98 00000000 		.word	StateWhileOn
 8020              	.LVL625:
 8021              	.L1054:
2835:src/keys.c    **** 	}
 8022              		.loc 1 2835 10 view .LVU2548
 8023              	.LBE1197:
 8024              	.LBE1253:
3124:src/keys.c    **** 	NonProgrammable = 0;
 8025              		.loc 1 3124 26 view .LVU2549
 8026 0d9c CA4A     		ldr	r2, .L1164
 8027 0d9e 1168     		ldr	r1, [r2]
 8028 0da0 0029     		cmp	r1, #0
 8029 0da2 3FF4A2AD 		beq	.L838
 8030              	.LVL626:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8031              		.loc 1 3125 2 is_stmt 1 view .LVU2550
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8032              		.loc 1 3125 18 is_stmt 0 view .LVU2551
 8033 0da6 1360     		str	r3, [r2]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8034              		.loc 1 3126 2 is_stmt 1 view .LVU2552
 8035 0da8 FFF798BB 		b	.L833
 8036              	.LVL627:
 8037              	.L1098:
 8038              	.LBB1254:
 8039              	.LBB1198:
2838:src/keys.c    **** 		State2.arrow = 0;
 8040              		.loc 1 2838 3 view .LVU2553
 8041              	.LBB945:
 8042              	.LBI945:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8043              		.loc 1 109 13 view .LVU2554
 8044              	.LBB946:
 110:src/keys.c    **** }
 8045              		.loc 1 110 2 view .LVU2555
 110:src/keys.c    **** }
 8046              		.loc 1 110 16 is_stmt 0 view .LVU2556
 8047 0dac 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 8048 0db0 0328     		cmp	r0, #3
 8049              	.LBE946:
 8050              	.LBE945:
2839:src/keys.c    **** 		return STATE_UNFINISHED;
 8051              		.loc 1 2839 16 view .LVU2557
 8052 0db2 61F38202 		bfi	r2, r1, #2, #1
 8053              	.LBB949:
 8054              	.LBB947:
 110:src/keys.c    **** }
 8055              		.loc 1 110 16 view .LVU2558
 8056 0db6 18BF     		it	ne
 8057 0db8 0323     		movne	r3, #3
 8058              	.LBE947:
 8059              	.LBE949:
2839:src/keys.c    **** 		return STATE_UNFINISHED;
 8060              		.loc 1 2839 16 view .LVU2559
ARM GAS  /tmp/cceb4mPP.s 			page 239


 8061 0dba 88F81520 		strb	r2, [r8, #21]
 8062              	.LBB950:
 8063              	.LBB948:
 110:src/keys.c    **** }
 8064              		.loc 1 110 16 view .LVU2560
 8065 0dbe 88F81030 		strb	r3, [r8, #16]
 8066              	.LVL628:
 110:src/keys.c    **** }
 8067              		.loc 1 110 16 view .LVU2561
 8068              	.LBE948:
 8069              	.LBE950:
2839:src/keys.c    **** 		return STATE_UNFINISHED;
 8070              		.loc 1 2839 3 is_stmt 1 view .LVU2562
2840:src/keys.c    **** 	}
 8071              		.loc 1 2840 3 view .LVU2563
2840:src/keys.c    **** 	}
 8072              		.loc 1 2840 10 is_stmt 0 view .LVU2564
 8073 0dc2 4FF0330B 		mov	fp, #51
 8074 0dc6 FFF76FB9 		b	.L565
 8075              	.LVL629:
 8076              	.L1130:
 8077              	.LBB951:
 8078              	.LBB898:
2461:src/keys.c    **** 			n = max;
 8079              		.loc 1 2461 3 is_stmt 1 view .LVU2565
2461:src/keys.c    **** 			n = max;
 8080              		.loc 1 2461 6 is_stmt 0 view .LVU2566
 8081 0dca 012B     		cmp	r3, #1
 8082 0dcc A3F10402 		sub	r2, r3, #4
 8083              	.LVL630:
2461:src/keys.c    **** 			n = max;
 8084              		.loc 1 2461 6 view .LVU2567
 8085 0dd0 31D0     		beq	.L1057
 8086 0dd2 D2B2     		uxtb	r2, r2
 8087              	.LVL631:
2461:src/keys.c    **** 			n = max;
 8088              		.loc 1 2461 6 view .LVU2568
 8089 0dd4 01E7     		b	.L641
 8090              	.LVL632:
 8091              	.L1121:
2461:src/keys.c    **** 			n = max;
 8092              		.loc 1 2461 6 view .LVU2569
 8093              	.LBE898:
 8094              	.LBE951:
 8095              	.LBB952:
 8096              	.LBB875:
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8097              		.loc 1 1330 44 is_stmt 1 view .LVU2570
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8098              		.loc 1 1330 52 is_stmt 0 view .LVU2571
 8099 0dd6 0120     		movs	r0, #1
 8100 0dd8 FFF7FEFF 		bl	gtodot_digit
 8101              	.LVL633:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8102              		.loc 1 1376 2 is_stmt 1 view .LVU2572
 8103              	.LBE875:
 8104              	.LBE952:
ARM GAS  /tmp/cceb4mPP.s 			page 240


2815:src/keys.c    **** 
 8105              		.loc 1 2815 10 is_stmt 0 view .LVU2573
 8106 0ddc 4FF0330B 		mov	fp, #51
 8107 0de0 FFF762B9 		b	.L565
 8108              	.LVL634:
 8109              	.L1135:
2855:src/keys.c    **** 		if (is_bad_cmdline())
 8110              		.loc 1 2855 2 is_stmt 1 view .LVU2574
2855:src/keys.c    **** 		if (is_bad_cmdline())
 8111              		.loc 1 2855 5 is_stmt 0 view .LVU2575
 8112 0de4 BBF1000F 		cmp	fp, #0
 8113 0de8 82D1     		bne	.L656
 8114 0dea FFF787BA 		b	.L670
 8115              	.LVL635:
 8116              	.L627:
 8117              	.LBB953:
 8118              	.LBB861:
1907:src/keys.c    **** 	}
 8119              		.loc 1 1907 3 is_stmt 1 view .LVU2576
1907:src/keys.c    **** 	}
 8120              		.loc 1 1907 10 is_stmt 0 view .LVU2577
 8121 0dee 0AF1200A 		add	r10, r10, #32
 8122 0df2 40EA0A20 		orr	r0, r0, r10, lsl #8
 8123 0df6 8346     		mov	fp, r0
 8124              	.LVL636:
1907:src/keys.c    **** 	}
 8125              		.loc 1 1907 10 view .LVU2578
 8126 0df8 FFF769BB 		b	.L620
 8127              	.LVL637:
 8128              	.L1122:
1907:src/keys.c    **** 	}
 8129              		.loc 1 1907 10 view .LVU2579
 8130              	.LBE861:
 8131              	.LBE953:
 8132              	.LBB954:
 8133              	.LBB876:
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8134              		.loc 1 1331 44 is_stmt 1 view .LVU2580
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8135              		.loc 1 1331 52 is_stmt 0 view .LVU2581
 8136 0dfc 0220     		movs	r0, #2
 8137 0dfe FFF7FEFF 		bl	gtodot_digit
 8138              	.LVL638:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8139              		.loc 1 1376 2 is_stmt 1 view .LVU2582
 8140              	.LBE876:
 8141              	.LBE954:
2815:src/keys.c    **** 
 8142              		.loc 1 2815 10 is_stmt 0 view .LVU2583
 8143 0e02 4FF0330B 		mov	fp, #51
 8144 0e06 FFF74FB9 		b	.L565
 8145              	.LVL639:
 8146              	.L1134:
 8147              	.LBB955:
 8148              	.LBB930:
1286:src/keys.c    **** 
 8149              		.loc 1 1286 3 is_stmt 1 view .LVU2584
ARM GAS  /tmp/cceb4mPP.s 			page 241


1286:src/keys.c    **** 
 8150              		.loc 1 1286 25 is_stmt 0 view .LVU2585
 8151 0e0a B04A     		ldr	r2, .L1164+4
 8152 0e0c 0AEB4303 		add	r3, r10, r3, lsl #1
 8153 0e10 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8154              	.LVL640:
1286:src/keys.c    **** 
 8155              		.loc 1 1286 25 view .LVU2586
 8156 0e14 FFF7BCBB 		b	.L594
 8157              	.LVL641:
 8158              	.L1131:
1286:src/keys.c    **** 
 8159              		.loc 1 1286 25 view .LVU2587
 8160              	.LBE930:
 8161              	.LBE955:
 8162              	.LBB956:
 8163              	.LBB899:
2465:src/keys.c    **** 			n = -2;
 8164              		.loc 1 2465 3 is_stmt 1 view .LVU2588
2465:src/keys.c    **** 			n = -2;
 8165              		.loc 1 2465 6 is_stmt 0 view .LVU2589
 8166 0e18 023B     		subs	r3, r3, #2
 8167              	.LVL642:
2465:src/keys.c    **** 			n = -2;
 8168              		.loc 1 2465 6 view .LVU2590
 8169 0e1a 8342     		cmp	r3, r0
 8170 0e1c 40F3FB81 		ble	.L1056
 8171 0e20 FE22     		movs	r2, #254
 8172 0e22 DAE6     		b	.L641
 8173              	.LVL643:
 8174              	.L867:
2465:src/keys.c    **** 			n = -2;
 8175              		.loc 1 2465 6 view .LVU2591
 8176              	.LBE899:
 8177              	.LBE956:
 8178              	.LBB957:
 8179              	.LBB656:
 8180              	.LBB649:
 322:src/keys.c    **** #ifndef WINGUI
 8181              		.loc 1 322 8 view .LVU2592
 8182 0e24 AA4B     		ldr	r3, .L1164+8
 328:src/keys.c    ****   }
 8183              		.loc 1 328 9 view .LVU2593
 8184 0e26 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 8185              		.loc 1 324 27 view .LVU2594
 8186 0e28 4FF0010C 		mov	ip, #1
 8187 0e2c FFF736BA 		b	.L661
 8188              	.LVL644:
 8189              	.L1133:
 324:src/keys.c    **** #else
 8190              		.loc 1 324 27 view .LVU2595
 8191              	.LBE649:
 8192              	.LBE656:
 8193              	.LBE957:
 8194              	.LBB958:
 8195              	.LBB900:
ARM GAS  /tmp/cceb4mPP.s 			page 242


 8196              	.LBB895:
2477:src/keys.c    **** 		else if (nn != NO_REG)
 8197              		.loc 1 2477 4 is_stmt 1 view .LVU2596
2477:src/keys.c    **** 		else if (nn != NO_REG)
 8198              		.loc 1 2477 22 is_stmt 0 view .LVU2597
 8199 0e30 8342     		cmp	r3, r0
 8200 0e32 3FF4D1AE 		beq	.L863
 8201              	.LVL645:
 8202              	.L1057:
2477:src/keys.c    **** 		else if (nn != NO_REG)
 8203              		.loc 1 2477 22 view .LVU2598
 8204 0e36 C2B2     		uxtb	r2, r0
 8205 0e38 CFE6     		b	.L641
 8206              	.LVL646:
 8207              	.L1123:
2477:src/keys.c    **** 		else if (nn != NO_REG)
 8208              		.loc 1 2477 22 view .LVU2599
 8209              	.LBE895:
 8210              	.LBE900:
 8211              	.LBE958:
 8212              	.LBB959:
 8213              	.LBB877:
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8214              		.loc 1 1332 44 is_stmt 1 view .LVU2600
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8215              		.loc 1 1332 52 is_stmt 0 view .LVU2601
 8216 0e3a 0320     		movs	r0, #3
 8217 0e3c FFF7FEFF 		bl	gtodot_digit
 8218              	.LVL647:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8219              		.loc 1 1376 2 is_stmt 1 view .LVU2602
 8220              	.LBE877:
 8221              	.LBE959:
2815:src/keys.c    **** 
 8222              		.loc 1 2815 10 is_stmt 0 view .LVU2603
 8223 0e40 4FF0330B 		mov	fp, #51
 8224 0e44 FFF730B9 		b	.L565
 8225              	.LVL648:
 8226              	.L1104:
2870:src/keys.c    **** 
 8227              		.loc 1 2870 3 is_stmt 1 view .LVU2604
 8228              	.LBB960:
 8229              	.LBI960:
2535:src/keys.c    **** 	unsigned int pc = State2.digval;
 8230              		.loc 1 2535 12 view .LVU2605
 8231              	.LBB961:
2536:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8232              		.loc 1 2536 2 view .LVU2606
2538:src/keys.c    **** 	const int opcode = getprog(pc);
 8233              		.loc 1 2538 27 is_stmt 0 view .LVU2607
 8234 0e48 262C     		cmp	r4, #38
2536:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8235              		.loc 1 2536 15 view .LVU2608
 8236 0e4a B8F808A0 		ldrh	r10, [r8, #8]
 8237              	.LVL649:
2537:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8238              		.loc 1 2537 2 is_stmt 1 view .LVU2609
ARM GAS  /tmp/cceb4mPP.s 			page 243


2538:src/keys.c    **** 	const int opcode = getprog(pc);
 8239              		.loc 1 2538 27 is_stmt 0 view .LVU2610
 8240 0e4e 00F04D83 		beq	.L872
 8241              	.LVL650:
 8242              	.LBB962:
 8243              	.LBI962:
 198:src/keys.c    **** {
 8244              		.loc 1 198 14 is_stmt 1 view .LVU2611
 8245              	.LBB963:
 200:src/keys.c    ****     // K00 - K05
 8246              		.loc 1 200 3 view .LVU2612
 221:src/keys.c    **** }
 8247              		.loc 1 221 3 view .LVU2613
 8248              	.LBB964:
 8249              	.LBI964:
 119:src/keys.c    **** {
 8250              		.loc 1 119 12 view .LVU2614
 8251              	.LBB965:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8252              		.loc 1 121 2 view .LVU2615
 131:src/keys.c    **** }
 8253              		.loc 1 131 2 view .LVU2616
 131:src/keys.c    **** }
 8254              		.loc 1 131 23 is_stmt 0 view .LVU2617
 8255 0e52 A04B     		ldr	r3, .L1164+12
 8256              	.LBE965:
 8257              	.LBE964:
 221:src/keys.c    **** }
 8258              		.loc 1 221 28 view .LVU2618
 8259 0e54 A04A     		ldr	r2, .L1164+16
 8260              	.LBB967:
 8261              	.LBB966:
 131:src/keys.c    **** }
 8262              		.loc 1 131 23 view .LVU2619
 8263 0e56 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8264              	.LBE966:
 8265              	.LBE967:
 221:src/keys.c    **** }
 8266              		.loc 1 221 10 view .LVU2620
 8267 0e58 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8268              	.LBE963:
 8269              	.LBE962:
2538:src/keys.c    **** 	const int opcode = getprog(pc);
 8270              		.loc 1 2538 27 view .LVU2621
 8271 0e5c 2BF0800B 		bic	fp, fp, #128
 8272              	.L685:
 8273              	.LVL651:
2539:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8274              		.loc 1 2539 2 is_stmt 1 view .LVU2622
2539:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8275              		.loc 1 2539 21 is_stmt 0 view .LVU2623
 8276 0e60 5046     		mov	r0, r10
 8277 0e62 FFF7FEFF 		bl	getprog
 8278              	.LVL652:
2540:src/keys.c    **** 	const int direct = State2.runmode;
 8279              		.loc 1 2540 2 is_stmt 1 view .LVU2624
2540:src/keys.c    **** 	const int direct = State2.runmode;
ARM GAS  /tmp/cceb4mPP.s 			page 244


 8280              		.loc 1 2540 20 is_stmt 0 view .LVU2625
 8281 0e66 00F47040 		and	r0, r0, #61440
 8282              	.LVL653:
2540:src/keys.c    **** 	const int direct = State2.runmode;
 8283              		.loc 1 2540 63 view .LVU2626
 8284 0e6a B0F5704F 		cmp	r0, #61440
 8285 0e6e 00F07784 		beq	.L1137
 8286 0e72 0022     		movs	r2, #0
 8287              	.L686:
 8288              	.LVL654:
2541:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8289              		.loc 1 2541 2 is_stmt 1 view .LVU2627
2541:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8290              		.loc 1 2541 27 is_stmt 0 view .LVU2628
 8291 0e74 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8292 0e78 0192     		str	r2, [sp, #4]
 8293              	.LVL655:
2541:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8294              		.loc 1 2541 27 view .LVU2629
 8295 0e7a C3F38013 		ubfx	r3, r3, #6, #1
 8296 0e7e 0093     		str	r3, [sp]
 8297              	.LVL656:
2542:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8298              		.loc 1 2542 2 is_stmt 1 view .LVU2630
 8299              	.LBB968:
 8300              	.LBI968:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8301              		.loc 1 102 13 view .LVU2631
 8302              	.LBE968:
 8303              	.LBE961:
 8304              	.LBE960:
 8305              	.LBE1198:
 8306              	.LBE1254:
 103:src/keys.c    **** }
 8307              		.loc 1 103 2 view .LVU2632
 8308              	.LBB1255:
 8309              	.LBB1199:
 8310              	.LBB995:
 8311              	.LBB987:
 8312              	.LBB975:
 8313              	.LBB969:
 8314              	.LBI969:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8315              		.loc 1 92 20 view .LVU2633
 8316              	.LBB970:
  93:src/keys.c    **** 	State2.shifts = shift;
 8317              		.loc 1 93 2 view .LVU2634
 8318              	.LBB971:
 8319              	.LBI971:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8320              		.loc 1 84 13 view .LVU2635
 8321              	.LBB972:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8322              		.loc 1 85 2 view .LVU2636
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8323              		.loc 1 85 18 is_stmt 0 view .LVU2637
 8324 0e80 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/cceb4mPP.s 			page 245


 8325              	.LVL657:
  86:src/keys.c    **** }
 8326              		.loc 1 86 2 is_stmt 1 view .LVU2638
  86:src/keys.c    **** }
 8327              		.loc 1 86 52 is_stmt 0 view .LVU2639
 8328 0e84 019A     		ldr	r2, [sp, #4]
 8329 0e86 0346     		mov	r3, r0
 8330 0e88 08B9     		cbnz	r0, .L687
 8331 0e8a 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8332              	.L687:
 8333              	.LVL658:
  86:src/keys.c    **** }
 8334              		.loc 1 86 52 view .LVU2640
 8335              	.LBE972:
 8336              	.LBE971:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8337              		.loc 1 94 2 is_stmt 1 view .LVU2641
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8338              		.loc 1 94 16 is_stmt 0 view .LVU2642
 8339 0e8e 0021     		movs	r1, #0
 8340              	.LBE970:
 8341              	.LBE969:
 8342              	.LBE975:
2545:src/keys.c    **** 		// Digits take you to that segment
 8343              		.loc 1 2545 5 view .LVU2643
 8344 0e90 BBF1020F 		cmp	fp, #2
 8345              	.LBB976:
 8346              	.LBB974:
 8347              	.LBB973:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8348              		.loc 1 94 16 view .LVU2644
 8349 0e94 88F81010 		strb	r1, [r8, #16]
  95:src/keys.c    **** 	return r;
 8350              		.loc 1 95 2 is_stmt 1 view .LVU2645
  95:src/keys.c    **** 	return r;
 8351              		.loc 1 95 19 is_stmt 0 view .LVU2646
 8352 0e98 88F80D10 		strb	r1, [r8, #13]
  96:src/keys.c    **** }
 8353              		.loc 1 96 2 is_stmt 1 view .LVU2647
 8354              	.LVL659:
  96:src/keys.c    **** }
 8355              		.loc 1 96 2 is_stmt 0 view .LVU2648
 8356              	.LBE973:
 8357              	.LBE974:
 8358              	.LBE976:
2543:src/keys.c    **** 
 8359              		.loc 1 2543 2 is_stmt 1 view .LVU2649
2545:src/keys.c    **** 		// Digits take you to that segment
 8360              		.loc 1 2545 2 view .LVU2650
2545:src/keys.c    **** 		// Digits take you to that segment
 8361              		.loc 1 2545 5 is_stmt 0 view .LVU2651
 8362 0e9c 40F2C585 		bls	.L1138
2554:src/keys.c    **** 
 8363              		.loc 1 2554 2 is_stmt 1 view .LVU2652
2554:src/keys.c    **** 
 8364              		.loc 1 2554 12 is_stmt 0 view .LVU2653
 8365 0ea0 44EA0323 		orr	r3, r4, r3, lsl #8
ARM GAS  /tmp/cceb4mPP.s 			page 246


 8366              	.LVL660:
2554:src/keys.c    **** 
 8367              		.loc 1 2554 2 view .LVU2654
 8368 0ea4 272B     		cmp	r3, #39
 8369 0ea6 00F3B480 		bgt	.L690
 8370 0eaa 042B     		cmp	r3, #4
 8371 0eac 7FF785AC 		ble	.L1071
 8372 0eb0 053B     		subs	r3, r3, #5
 8373 0eb2 222B     		cmp	r3, #34
 8374 0eb4 3FF681AC 		bhi	.L1071
 8375 0eb8 01A1     		adr	r1, .L698
 8376 0eba 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8377 0ebe 00BF     		.p2align 2
 8378              	.L698:
 8379 0ec0 A10F0000 		.word	.L703+1
 8380 0ec4 AB0F0000 		.word	.L702+1
 8381 0ec8 AB0F0000 		.word	.L702+1
 8382 0ecc BB070000 		.word	.L1071+1
 8383 0ed0 BB070000 		.word	.L1071+1
 8384 0ed4 BB070000 		.word	.L1071+1
 8385 0ed8 BB070000 		.word	.L1071+1
 8386 0edc 4D0F0000 		.word	.L875+1
 8387 0ee0 BB070000 		.word	.L1071+1
 8388 0ee4 BB070000 		.word	.L1071+1
 8389 0ee8 BB070000 		.word	.L1071+1
 8390 0eec CD0F0000 		.word	.L701+1
 8391 0ef0 BB070000 		.word	.L1071+1
 8392 0ef4 B90F0000 		.word	.L700+1
 8393 0ef8 BB070000 		.word	.L1071+1
 8394 0efc BB070000 		.word	.L1071+1
 8395 0f00 BB070000 		.word	.L1071+1
 8396 0f04 BB070000 		.word	.L1071+1
 8397 0f08 BB070000 		.word	.L1071+1
 8398 0f0c 8B0F0000 		.word	.L699+1
 8399 0f10 BB070000 		.word	.L1071+1
 8400 0f14 BB070000 		.word	.L1071+1
 8401 0f18 BB070000 		.word	.L1071+1
 8402 0f1c BB070000 		.word	.L1071+1
 8403 0f20 BB070000 		.word	.L1071+1
 8404 0f24 BB070000 		.word	.L1071+1
 8405 0f28 BB070000 		.word	.L1071+1
 8406 0f2c BB070000 		.word	.L1071+1
 8407 0f30 BB070000 		.word	.L1071+1
 8408 0f34 BB070000 		.word	.L1071+1
 8409 0f38 BB070000 		.word	.L1071+1
 8410 0f3c BB070000 		.word	.L1071+1
 8411 0f40 BB070000 		.word	.L1071+1
 8412 0f44 BB070000 		.word	.L1071+1
 8413 0f48 E70F0000 		.word	.L697+1
 8414              		.p2align 1
 8415              	.L875:
2543:src/keys.c    **** 
 8416              		.loc 1 2543 6 view .LVU2655
 8417 0f4c 4FF0330B 		mov	fp, #51
 8418              	.LVL661:
 8419              	.L695:
2576:src/keys.c    **** 		break;
ARM GAS  /tmp/cceb4mPP.s 			page 247


 8420              		.loc 1 2576 3 is_stmt 1 view .LVU2656
 8421 0f50 5046     		mov	r0, r10
 8422 0f52 FFF7FEFF 		bl	set_pc
 8423              	.LVL662:
2577:src/keys.c    **** 
 8424              		.loc 1 2577 3 view .LVU2657
 8425              	.L707:
2630:src/keys.c    **** 	State2.labellist = 0;
 8426              		.loc 1 2630 2 view .LVU2658
2631:src/keys.c    **** 	return check_confirm(op);
 8427              		.loc 1 2631 19 is_stmt 0 view .LVU2659
 8428 0f56 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2630:src/keys.c    **** 	State2.labellist = 0;
 8429              		.loc 1 2630 16 view .LVU2660
 8430 0f5a 0022     		movs	r2, #0
 8431              	.LBB977:
 8432              	.LBB978:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8433              		.loc 1 620 5 view .LVU2661
 8434 0f5c CBF30723 		ubfx	r3, fp, #8, #8
 8435              	.LBE978:
 8436              	.LBE977:
2631:src/keys.c    **** 	return check_confirm(op);
 8437              		.loc 1 2631 19 view .LVU2662
 8438 0f60 62F38201 		bfi	r1, r2, #2, #1
 8439              	.LBB983:
 8440              	.LBB979:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8441              		.loc 1 620 5 view .LVU2663
 8442 0f64 012B     		cmp	r3, #1
 8443              	.LBE979:
 8444              	.LBE983:
2631:src/keys.c    **** 	return check_confirm(op);
 8445              		.loc 1 2631 19 view .LVU2664
 8446 0f66 88F81710 		strb	r1, [r8, #23]
2630:src/keys.c    **** 	State2.labellist = 0;
 8447              		.loc 1 2630 16 view .LVU2665
 8448 0f6a A8F80820 		strh	r2, [r8, #8]	@ movhi
2631:src/keys.c    **** 	return check_confirm(op);
 8449              		.loc 1 2631 2 is_stmt 1 view .LVU2666
2632:src/keys.c    **** }
 8450              		.loc 1 2632 2 view .LVU2667
 8451              	.LVL663:
 8452              	.LBB984:
 8453              	.LBI977:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8454              		.loc 1 619 12 view .LVU2668
 8455              	.LBB980:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8456              		.loc 1 620 2 view .LVU2669
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8457              		.loc 1 620 5 is_stmt 0 view .LVU2670
 8458 0f6e 7FF40FAB 		bne	.L594
 8459              	.LVL664:
 8460              	.L852:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8461              		.loc 1 620 5 view .LVU2671
ARM GAS  /tmp/cceb4mPP.s 			page 248


 8462              	.LBE980:
 8463              	.LBE984:
 8464              	.LBE987:
 8465              	.LBE995:
 8466              	.LBB996:
 8467              	.LBB997:
 8468              	.LBB998:
 8469              	.LBB999:
 8470 0f72 5846     		mov	r0, fp
 8471 0f74 FFF7FEFF 		bl	check_confirm.part.0
 8472              	.LVL665:
 8473 0f78 8346     		mov	fp, r0
 8474              	.LVL666:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8475              		.loc 1 620 5 view .LVU2672
 8476 0f7a FFF709BB 		b	.L594
 8477              	.LVL667:
 8478              	.L692:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8479              		.loc 1 620 5 view .LVU2673
 8480              	.LBE999:
 8481              	.LBE998:
 8482              	.LBE997:
 8483              	.LBE996:
 8484              	.LBB1039:
 8485              	.LBB988:
2561:src/keys.c    **** 	case K_DOWN:				// Find next label
 8486              		.loc 1 2561 3 is_stmt 1 view .LVU2674
2561:src/keys.c    **** 	case K_DOWN:				// Find next label
 8487              		.loc 1 2561 8 is_stmt 0 view .LVU2675
 8488 0f7e 5046     		mov	r0, r10
 8489 0f80 0122     		movs	r2, #1
 8490 0f82 0021     		movs	r1, #0
 8491 0f84 FFF7FEFF 		bl	advance_to_next_label
 8492              	.LVL668:
 8493 0f88 8246     		mov	r10, r0
 8494              	.LVL669:
 8495              	.L699:
2564:src/keys.c    **** 		return STATE_UNFINISHED;
 8496              		.loc 1 2564 3 is_stmt 1 view .LVU2676
2564:src/keys.c    **** 		return STATE_UNFINISHED;
 8497              		.loc 1 2564 19 is_stmt 0 view .LVU2677
 8498 0f8a 5046     		mov	r0, r10
 8499 0f8c 0022     		movs	r2, #0
 8500 0f8e 0121     		movs	r1, #1
 8501 0f90 FFF7FEFF 		bl	advance_to_next_label
 8502              	.LVL670:
2565:src/keys.c    **** 
 8503              		.loc 1 2565 10 view .LVU2678
 8504 0f94 4FF0330B 		mov	fp, #51
 8505              	.LVL671:
2564:src/keys.c    **** 		return STATE_UNFINISHED;
 8506              		.loc 1 2564 17 view .LVU2679
 8507 0f98 A8F80800 		strh	r0, [r8, #8]	@ movhi
2565:src/keys.c    **** 
 8508              		.loc 1 2565 3 is_stmt 1 view .LVU2680
2565:src/keys.c    **** 
ARM GAS  /tmp/cceb4mPP.s 			page 249


 8509              		.loc 1 2565 10 is_stmt 0 view .LVU2681
 8510 0f9c FFF784B8 		b	.L565
 8511              	.LVL672:
 8512              	.L703:
 8513              	.L708:
2594:src/keys.c    **** 		goto xeq_or_gto;
 8514              		.loc 1 2594 3 is_stmt 1 view .LVU2682
2594:src/keys.c    **** 		goto xeq_or_gto;
 8515              		.loc 1 2594 6 is_stmt 0 view .LVU2683
 8516 0fa0 02F5007B 		add	fp, r2, #512
 8517              	.LVL673:
2595:src/keys.c    **** 
 8518              		.loc 1 2595 3 is_stmt 1 view .LVU2684
2600:src/keys.c    **** 			break;
 8519              		.loc 1 2600 3 view .LVU2685
2600:src/keys.c    **** 			break;
 8520              		.loc 1 2600 6 is_stmt 0 view .LVU2686
 8521 0fa4 002A     		cmp	r2, #0
 8522 0fa6 D6D1     		bne	.L707
 8523 0fa8 07E4     		b	.L1071
 8524              	.LVL674:
 8525              	.L702:
2586:src/keys.c    **** 	  //#endif
 8526              		.loc 1 2586 3 is_stmt 1 view .LVU2687
2586:src/keys.c    **** 	  //#endif
 8527              		.loc 1 2586 38 is_stmt 0 view .LVU2688
 8528 0faa 062C     		cmp	r4, #6
 8529 0fac 40F2B11B 		movw	fp, #433
 8530              	.LVL675:
2586:src/keys.c    **** 	  //#endif
 8531              		.loc 1 2586 38 view .LVU2689
 8532 0fb0 08BF     		it	eq
 8533 0fb2 4FF4D97B 		moveq	fp, #434
 8534 0fb6 CBE7     		b	.L695
 8535              	.LVL676:
 8536              	.L700:
2568:src/keys.c    **** 		return STATE_UNFINISHED;
 8537              		.loc 1 2568 3 is_stmt 1 view .LVU2690
2568:src/keys.c    **** 		return STATE_UNFINISHED;
 8538              		.loc 1 2568 19 is_stmt 0 view .LVU2691
 8539 0fb8 5046     		mov	r0, r10
 8540 0fba 0021     		movs	r1, #0
 8541 0fbc FFF7FEFF 		bl	advance_to_previous_label
 8542              	.LVL677:
2569:src/keys.c    **** 
 8543              		.loc 1 2569 10 view .LVU2692
 8544 0fc0 4FF0330B 		mov	fp, #51
 8545              	.LVL678:
2568:src/keys.c    **** 		return STATE_UNFINISHED;
 8546              		.loc 1 2568 17 view .LVU2693
 8547 0fc4 A8F80800 		strh	r0, [r8, #8]	@ movhi
2569:src/keys.c    **** 
 8548              		.loc 1 2569 3 is_stmt 1 view .LVU2694
2569:src/keys.c    **** 
 8549              		.loc 1 2569 10 is_stmt 0 view .LVU2695
 8550 0fc8 FFF76EB8 		b	.L565
 8551              	.LVL679:
ARM GAS  /tmp/cceb4mPP.s 			page 250


 8552              	.L701:
2630:src/keys.c    **** 	State2.labellist = 0;
 8553              		.loc 1 2630 2 is_stmt 1 view .LVU2696
2631:src/keys.c    **** 	return check_confirm(op);
 8554              		.loc 1 2631 19 is_stmt 0 view .LVU2697
 8555 0fcc 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2630:src/keys.c    **** 	State2.labellist = 0;
 8556              		.loc 1 2630 16 view .LVU2698
 8557 0fd0 0023     		movs	r3, #0
2631:src/keys.c    **** 	return check_confirm(op);
 8558              		.loc 1 2631 19 view .LVU2699
 8559 0fd2 63F38202 		bfi	r2, r3, #2, #1
 8560 0fd6 88F81720 		strb	r2, [r8, #23]
2630:src/keys.c    **** 	State2.labellist = 0;
 8561              		.loc 1 2630 16 view .LVU2700
 8562 0fda A8F80830 		strh	r3, [r8, #8]	@ movhi
2631:src/keys.c    **** 	return check_confirm(op);
 8563              		.loc 1 2631 2 is_stmt 1 view .LVU2701
2632:src/keys.c    **** }
 8564              		.loc 1 2632 2 view .LVU2702
 8565              	.LVL680:
 8566              	.LBB985:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8567              		.loc 1 619 12 view .LVU2703
 8568              	.LBB981:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8569              		.loc 1 620 2 view .LVU2704
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8570              		.loc 1 620 2 is_stmt 0 view .LVU2705
 8571              	.LBE981:
 8572              	.LBE985:
 8573              	.LBE988:
 8574              	.LBE1039:
 8575              	.LBE1199:
 8576              	.LBE1255:
3088:src/keys.c    ****     case STATE_SST:
 8577              		.loc 1 3088 5 is_stmt 1 view .LVU2706
 8578              	.LBB1256:
 8579              	.LBB1200:
 8580              	.LBB1040:
 8581              	.LBB989:
2543:src/keys.c    **** 
 8582              		.loc 1 2543 6 is_stmt 0 view .LVU2707
 8583 0fde 4FF0330B 		mov	fp, #51
 8584              	.LVL681:
2543:src/keys.c    **** 
 8585              		.loc 1 2543 6 view .LVU2708
 8586 0fe2 FFF761B8 		b	.L565
 8587              	.LVL682:
 8588              	.L697:
2616:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8589              		.loc 1 2616 3 is_stmt 1 view .LVU2709
2616:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8590              		.loc 1 2616 6 is_stmt 0 view .LVU2710
 8591 0fe6 009B     		ldr	r3, [sp]
 8592 0fe8 002B     		cmp	r3, #0
 8593 0fea 3FF4E6AB 		beq	.L1071
ARM GAS  /tmp/cceb4mPP.s 			page 251


2616:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8594              		.loc 1 2616 14 view .LVU2711
 8595 0fee 002A     		cmp	r2, #0
 8596 0ff0 3FF4E3AB 		beq	.L1071
2617:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8597              		.loc 1 2617 4 is_stmt 1 view .LVU2712
 8598 0ff4 5146     		mov	r1, r10
 8599 0ff6 0120     		movs	r0, #1
 8600 0ff8 FFF7FEFF 		bl	cmdgtocommon
 8601              	.LVL683:
2618:src/keys.c    **** 			break;
 8602              		.loc 1 2618 4 view .LVU2713
2619:src/keys.c    **** 		}
 8603              		.loc 1 2619 4 view .LVU2714
2630:src/keys.c    **** 	State2.labellist = 0;
 8604              		.loc 1 2630 2 view .LVU2715
2631:src/keys.c    **** 	return check_confirm(op);
 8605              		.loc 1 2631 19 is_stmt 0 view .LVU2716
 8606 0ffc 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2630:src/keys.c    **** 	State2.labellist = 0;
 8607              		.loc 1 2630 16 view .LVU2717
 8608 1000 0023     		movs	r3, #0
2631:src/keys.c    **** 	return check_confirm(op);
 8609              		.loc 1 2631 19 view .LVU2718
 8610 1002 63F38202 		bfi	r2, r3, #2, #1
 8611 1006 88F81720 		strb	r2, [r8, #23]
2630:src/keys.c    **** 	State2.labellist = 0;
 8612              		.loc 1 2630 16 view .LVU2719
 8613 100a A8F80830 		strh	r3, [r8, #8]	@ movhi
2631:src/keys.c    **** 	return check_confirm(op);
 8614              		.loc 1 2631 2 is_stmt 1 view .LVU2720
2632:src/keys.c    **** }
 8615              		.loc 1 2632 2 view .LVU2721
 8616              	.LVL684:
 8617              	.LBB986:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8618              		.loc 1 619 12 view .LVU2722
 8619              	.LBB982:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8620              		.loc 1 620 2 view .LVU2723
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8621              		.loc 1 620 2 is_stmt 0 view .LVU2724
 8622              	.LBE982:
 8623              	.LBE986:
 8624              	.LBE989:
 8625              	.LBE1040:
 8626              	.LBE1200:
 8627              	.LBE1256:
3088:src/keys.c    ****     case STATE_SST:
 8628              		.loc 1 3088 5 is_stmt 1 view .LVU2725
 8629 100e FFF7C5B8 		b	.L574
 8630              	.LVL685:
 8631              	.L690:
 8632              	.LBB1257:
 8633              	.LBB1201:
 8634              	.LBB1041:
 8635              	.LBB990:
ARM GAS  /tmp/cceb4mPP.s 			page 252


2554:src/keys.c    **** 
 8636              		.loc 1 2554 2 is_stmt 0 view .LVU2726
 8637 1012 B3F58C7F 		cmp	r3, #280
 8638 1016 48DC     		bgt	.L704
 8639 1018 B3F5827F 		cmp	r3, #260
 8640 101c 7FF7CDAB 		ble	.L1071
 8641 1020 6FF48274 		mvn	r4, #260
 8642 1024 2344     		add	r3, r3, r4
 8643 1026 132B     		cmp	r3, #19
 8644 1028 3FF6C7AB 		bhi	.L1071
 8645 102c 01A1     		adr	r1, .L693
 8646 102e 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8647 1032 00BF     		.p2align 2
 8648              	.L693:
 8649 1034 8B100000 		.word	.L696+1
 8650 1038 BB070000 		.word	.L1071+1
 8651 103c BB070000 		.word	.L1071+1
 8652 1040 BB070000 		.word	.L1071+1
 8653 1044 BB070000 		.word	.L1071+1
 8654 1048 BB070000 		.word	.L1071+1
 8655 104c BB070000 		.word	.L1071+1
 8656 1050 BB070000 		.word	.L1071+1
 8657 1054 BB070000 		.word	.L1071+1
 8658 1058 BB070000 		.word	.L1071+1
 8659 105c BB070000 		.word	.L1071+1
 8660 1060 85100000 		.word	.L874+1
 8661 1064 BB070000 		.word	.L1071+1
 8662 1068 99100000 		.word	.L694+1
 8663 106c BB070000 		.word	.L1071+1
 8664 1070 BB070000 		.word	.L1071+1
 8665 1074 BB070000 		.word	.L1071+1
 8666 1078 BB070000 		.word	.L1071+1
 8667 107c BB070000 		.word	.L1071+1
 8668 1080 7F0F0000 		.word	.L692+1
 8669              		.p2align 1
 8670              	.L874:
 8671 1084 40F2431B 		movw	fp, #323
 8672              	.LVL686:
2554:src/keys.c    **** 
 8673              		.loc 1 2554 2 view .LVU2727
 8674 1088 62E7     		b	.L695
 8675              	.LVL687:
 8676              	.L696:
2598:src/keys.c    **** 	xeq_or_gto:
 8677              		.loc 1 2598 3 is_stmt 1 view .LVU2728
2598:src/keys.c    **** 	xeq_or_gto:
 8678              		.loc 1 2598 6 is_stmt 0 view .LVU2729
 8679 108a 02F5407B 		add	fp, r2, #768
 8680              	.LVL688:
2600:src/keys.c    **** 			break;
 8681              		.loc 1 2600 3 is_stmt 1 view .LVU2730
2600:src/keys.c    **** 			break;
 8682              		.loc 1 2600 6 is_stmt 0 view .LVU2731
 8683 108e 002A     		cmp	r2, #0
 8684 1090 7FF461AF 		bne	.L707
 8685 1094 FFF791BB 		b	.L1071
 8686              	.LVL689:
ARM GAS  /tmp/cceb4mPP.s 			page 253


 8687              	.L694:
2557:src/keys.c    **** 		goto next;
 8688              		.loc 1 2557 3 is_stmt 1 view .LVU2732
2557:src/keys.c    **** 		goto next;
 8689              		.loc 1 2557 8 is_stmt 0 view .LVU2733
 8690 1098 5046     		mov	r0, r10
 8691 109a 0121     		movs	r1, #1
 8692 109c FFF7FEFF 		bl	advance_to_previous_label
 8693              	.LVL690:
 8694 10a0 0121     		movs	r1, #1
 8695 10a2 FFF7FEFF 		bl	advance_to_previous_label
 8696              	.LVL691:
 8697 10a6 8246     		mov	r10, r0
 8698              	.LVL692:
2558:src/keys.c    **** 
 8699              		.loc 1 2558 3 is_stmt 1 view .LVU2734
 8700 10a8 6FE7     		b	.L699
 8701              	.LVL693:
 8702              	.L704:
2554:src/keys.c    **** 
 8703              		.loc 1 2554 2 is_stmt 0 view .LVU2735
 8704 10aa 40F22732 		movw	r2, #807
 8705 10ae 9342     		cmp	r3, r2
 8706 10b0 7FF483AB 		bne	.L1071
2624:src/keys.c    **** 		goto set_pc_and_exit;
 8707              		.loc 1 2624 3 is_stmt 1 view .LVU2736
2624:src/keys.c    **** 		goto set_pc_and_exit;
 8708              		.loc 1 2624 18 is_stmt 0 view .LVU2737
 8709 10b4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8710 10b8 61F38613 		bfi	r3, r1, #6, #1
 8711 10bc 88F81630 		strb	r3, [r8, #22]
2625:src/keys.c    **** 
 8712              		.loc 1 2625 3 is_stmt 1 view .LVU2738
2543:src/keys.c    **** 
 8713              		.loc 1 2543 6 is_stmt 0 view .LVU2739
 8714 10c0 4FF0330B 		mov	fp, #51
 8715              	.LVL694:
2625:src/keys.c    **** 
 8716              		.loc 1 2625 3 view .LVU2740
 8717 10c4 44E7     		b	.L695
 8718              	.L1165:
 8719 10c6 00BF     		.align	2
 8720              	.L1164:
 8721 10c8 00000000 		.word	NonProgrammable
 8722 10cc 00000000 		.word	.LANCHOR14
 8723 10d0 00000000 		.word	.LANCHOR11
 8724 10d4 00000000 		.word	.LANCHOR1
 8725 10d8 00000000 		.word	.LANCHOR0
 8726              	.LVL695:
 8727              	.L1105:
2625:src/keys.c    **** 
 8728              		.loc 1 2625 3 view .LVU2741
 8729              	.LBE990:
 8730              	.LBE1041:
2873:src/keys.c    **** 
 8731              		.loc 1 2873 3 is_stmt 1 view .LVU2742
 8732              	.LBB1042:
ARM GAS  /tmp/cceb4mPP.s 			page 254


 8733              	.LBI738:
2666:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8734              		.loc 1 2666 12 view .LVU2743
 8735              	.LBB763:
2667:src/keys.c    **** 	enum shifts shift = reset_shift();
 8736              		.loc 1 2667 2 view .LVU2744
 8737              	.LBB740:
 8738              	.LBI740:
 198:src/keys.c    **** {
 8739              		.loc 1 198 14 view .LVU2745
 8740              	.LBB741:
 200:src/keys.c    ****     // K00 - K05
 8741              		.loc 1 200 3 view .LVU2746
 221:src/keys.c    **** }
 8742              		.loc 1 221 3 view .LVU2747
 8743              	.LBB742:
 8744              	.LBI742:
 119:src/keys.c    **** {
 8745              		.loc 1 119 12 view .LVU2748
 8746              	.LBB743:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8747              		.loc 1 121 2 view .LVU2749
 131:src/keys.c    **** }
 8748              		.loc 1 131 2 view .LVU2750
 131:src/keys.c    **** }
 8749              		.loc 1 131 23 is_stmt 0 view .LVU2751
 8750 10dc CC4B     		ldr	r3, .L1166
 8751              	.LBE743:
 8752              	.LBE742:
 221:src/keys.c    **** }
 8753              		.loc 1 221 28 view .LVU2752
 8754 10de CD4A     		ldr	r2, .L1166+4
 8755              	.LBB745:
 8756              	.LBB744:
 131:src/keys.c    **** }
 8757              		.loc 1 131 23 view .LVU2753
 8758 10e0 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8759              	.LBE744:
 8760              	.LBE745:
 221:src/keys.c    **** }
 8761              		.loc 1 221 10 view .LVU2754
 8762 10e2 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 8763              	.LVL696:
 221:src/keys.c    **** }
 8764              		.loc 1 221 10 view .LVU2755
 8765              	.LBE741:
 8766              	.LBE740:
 8767              	.LBB746:
 8768              	.LBB747:
 8769              	.LBB748:
 8770              	.LBB749:
 8771              	.LBB750:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8772              		.loc 1 85 18 view .LVU2756
 8773 10e6 FFF7FEFF 		bl	shift_down
 8774              	.LVL697:
 8775              	.LBE750:
ARM GAS  /tmp/cceb4mPP.s 			page 255


 8776              	.LBE749:
 8777              	.LBE748:
 8778              	.LBE747:
 8779              	.LBE746:
2667:src/keys.c    **** 	enum shifts shift = reset_shift();
 8780              		.loc 1 2667 15 view .LVU2757
 8781 10ea 2AF0800A 		bic	r10, r10, #128
 8782              	.LVL698:
2668:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 8783              		.loc 1 2668 2 is_stmt 1 view .LVU2758
 8784              	.LBB757:
 8785              	.LBI746:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8786              		.loc 1 102 13 view .LVU2759
 8787              	.LBE757:
 8788              	.LBE763:
 8789              	.LBE1042:
 8790              	.LBE1201:
 8791              	.LBE1257:
 103:src/keys.c    **** }
 8792              		.loc 1 103 2 view .LVU2760
 8793              	.LBB1258:
 8794              	.LBB1202:
 8795              	.LBB1043:
 8796              	.LBB764:
 8797              	.LBB758:
 8798              	.LBB755:
 8799              	.LBI747:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8800              		.loc 1 92 20 view .LVU2761
 8801              	.LBB753:
  93:src/keys.c    **** 	State2.shifts = shift;
 8802              		.loc 1 93 2 view .LVU2762
 8803              	.LBB752:
 8804              	.LBI749:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8805              		.loc 1 84 13 view .LVU2763
 8806              	.LBB751:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8807              		.loc 1 85 2 view .LVU2764
  86:src/keys.c    **** }
 8808              		.loc 1 86 2 view .LVU2765
  86:src/keys.c    **** }
 8809              		.loc 1 86 52 is_stmt 0 view .LVU2766
 8810 10ee 0346     		mov	r3, r0
 8811 10f0 08B9     		cbnz	r0, .L710
 8812 10f2 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8813              	.L710:
 8814              	.LVL699:
  86:src/keys.c    **** }
 8815              		.loc 1 86 52 view .LVU2767
 8816              	.LBE751:
 8817              	.LBE752:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8818              		.loc 1 94 2 is_stmt 1 view .LVU2768
 8819              	.LBE753:
 8820              	.LBE755:
ARM GAS  /tmp/cceb4mPP.s 			page 256


 8821              	.LBE758:
2669:src/keys.c    **** 	const int g_max = global_regs();
 8822              		.loc 1 2669 31 is_stmt 0 view .LVU2769
 8823 10f6 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 8824              	.LBB759:
 8825              	.LBB756:
 8826              	.LBB754:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8827              		.loc 1 94 16 view .LVU2770
 8828 10fa 0022     		movs	r2, #0
 8829 10fc 88F81020 		strb	r2, [r8, #16]
  95:src/keys.c    **** 	return r;
 8830              		.loc 1 95 2 is_stmt 1 view .LVU2771
  95:src/keys.c    **** 	return r;
 8831              		.loc 1 95 19 is_stmt 0 view .LVU2772
 8832 1100 88F80D20 		strb	r2, [r8, #13]
  96:src/keys.c    **** }
 8833              		.loc 1 96 2 is_stmt 1 view .LVU2773
 8834              	.LVL700:
  96:src/keys.c    **** }
 8835              		.loc 1 96 2 is_stmt 0 view .LVU2774
 8836              	.LBE754:
 8837              	.LBE756:
 8838              	.LBE759:
2669:src/keys.c    **** 	const int g_max = global_regs();
 8839              		.loc 1 2669 2 is_stmt 1 view .LVU2775
2669:src/keys.c    **** 	const int g_max = global_regs();
 8840              		.loc 1 2669 46 is_stmt 0 view .LVU2776
 8841 1104 CA07     		lsls	r2, r1, #31
 8842 1106 00F12583 		bmi	.L1139
 8843 110a 4FF07009 		mov	r9, #112
 8844              	.LVL701:
 8845              	.L711:
2669:src/keys.c    **** 	const int g_max = global_regs();
 8846              		.loc 1 2669 46 view .LVU2777
 8847 110e 0093     		str	r3, [sp]
 8848              	.LVL702:
2670:src/keys.c    **** 
 8849              		.loc 1 2670 2 is_stmt 1 view .LVU2778
2670:src/keys.c    **** 
 8850              		.loc 1 2670 20 is_stmt 0 view .LVU2779
 8851 1110 FFF7FEFF 		bl	global_regs
 8852              	.LVL703:
2672:src/keys.c    **** 		if (local_regs())
 8853              		.loc 1 2672 2 is_stmt 1 view .LVU2780
2672:src/keys.c    **** 		if (local_regs())
 8854              		.loc 1 2672 5 is_stmt 0 view .LVU2781
 8855 1114 BAF1700F 		cmp	r10, #112
 8856 1118 009B     		ldr	r3, [sp]
 8857 111a 00F09784 		beq	.L1140
2678:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8858              		.loc 1 2678 7 is_stmt 1 view .LVU2782
2678:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8859              		.loc 1 2678 10 is_stmt 0 view .LVU2783
 8860 111e BAF1090F 		cmp	r10, #9
 8861 1122 40F22483 		bls	.L1141
2685:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
ARM GAS  /tmp/cceb4mPP.s 			page 257


 8862              		.loc 1 2685 7 is_stmt 1 view .LVU2784
2685:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8863              		.loc 1 2685 29 is_stmt 0 view .LVU2785
 8864 1126 5A1E     		subs	r2, r3, #1
2685:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8865              		.loc 1 2685 10 view .LVU2786
 8866 1128 D2B2     		uxtb	r2, r2
 8867 112a 012A     		cmp	r2, #1
 8868 112c 40F2FE82 		bls	.L1142
 8869              	.L719:
2689:src/keys.c    **** 		State2.digval = n;
 8870              		.loc 1 2689 7 is_stmt 1 view .LVU2787
2689:src/keys.c    **** 		State2.digval = n;
 8871              		.loc 1 2689 10 is_stmt 0 view .LVU2788
 8872 1130 BAF17F0F 		cmp	r10, #127
 8873 1134 40F03483 		bne	.L1143
2694:src/keys.c    **** 	case K_DOWN:
 8874              		.loc 1 2694 2 is_stmt 1 view .LVU2789
 8875 1138 073C     		subs	r4, r4, #7
 8876 113a 112C     		cmp	r4, #17
 8877 113c 3FF63DAB 		bhi	.L1071
 8878 1140 01A2     		adr	r2, .L842
 8879 1142 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8880 1146 00BF     		.p2align 2
 8881              	.L842:
 8882 1148 EB110000 		.word	.L732+1
 8883 114c BB070000 		.word	.L1071+1
 8884 1150 BB070000 		.word	.L1071+1
 8885 1154 BB070000 		.word	.L1071+1
 8886 1158 BB070000 		.word	.L1071+1
 8887 115c E5110000 		.word	.L731+1
 8888 1160 BB070000 		.word	.L1071+1
 8889 1164 BB070000 		.word	.L1071+1
 8890 1168 BB070000 		.word	.L1071+1
 8891 116c C5110000 		.word	.L729+1
 8892 1170 BB070000 		.word	.L1071+1
 8893 1174 91110000 		.word	.L725+1
 8894 1178 BB070000 		.word	.L1071+1
 8895 117c BB070000 		.word	.L1071+1
 8896 1180 BB070000 		.word	.L1071+1
 8897 1184 BB070000 		.word	.L1071+1
 8898 1188 BB070000 		.word	.L1071+1
 8899 118c 8D070000 		.word	.L722+1
 8900              		.p2align 1
 8901              	.L725:
2706:src/keys.c    **** 			State2.digval++;
 8902              		.loc 1 2706 3 view .LVU2790
2706:src/keys.c    **** 			State2.digval++;
 8903              		.loc 1 2706 13 is_stmt 0 view .LVU2791
 8904 1190 B8F80830 		ldrh	r3, [r8, #8]
2706:src/keys.c    **** 			State2.digval++;
 8905              		.loc 1 2706 27 view .LVU2792
 8906 1194 09F1FF39 		add	r9, r9, #-1
 8907              	.LVL704:
2706:src/keys.c    **** 			State2.digval++;
 8908              		.loc 1 2706 6 view .LVU2793
 8909 1198 4B45     		cmp	r3, r9
ARM GAS  /tmp/cceb4mPP.s 			page 258


 8910 119a 80F29F85 		bge	.L726
2707:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8911              		.loc 1 2707 4 is_stmt 1 view .LVU2794
2708:src/keys.c    **** 				State2.digval = regX_idx;
 8912              		.loc 1 2708 8 is_stmt 0 view .LVU2795
 8913 119e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2707:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8914              		.loc 1 2707 17 view .LVU2796
 8915 11a2 0133     		adds	r3, r3, #1
 8916 11a4 9CB2     		uxth	r4, r3
2708:src/keys.c    **** 				State2.digval = regX_idx;
 8917              		.loc 1 2708 7 view .LVU2797
 8918 11a6 D307     		lsls	r3, r2, #31
2707:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8919              		.loc 1 2707 17 view .LVU2798
 8920 11a8 A8F80840 		strh	r4, [r8, #8]	@ movhi
2708:src/keys.c    **** 				State2.digval = regX_idx;
 8921              		.loc 1 2708 4 is_stmt 1 view .LVU2799
2708:src/keys.c    **** 				State2.digval = regX_idx;
 8922              		.loc 1 2708 7 is_stmt 0 view .LVU2800
 8923 11ac 3FF5FFAA 		bmi	.L715
2708:src/keys.c    **** 				State2.digval = regX_idx;
 8924              		.loc 1 2708 43 view .LVU2801
 8925 11b0 FFF7FEFF 		bl	global_regs
 8926              	.LVL705:
2708:src/keys.c    **** 				State2.digval = regX_idx;
 8927              		.loc 1 2708 23 view .LVU2802
 8928 11b4 8442     		cmp	r4, r0
 8929 11b6 7FF4FAAA 		bne	.L715
2709:src/keys.c    **** 		}
 8930              		.loc 1 2709 5 is_stmt 1 view .LVU2803
2709:src/keys.c    **** 		}
 8931              		.loc 1 2709 19 is_stmt 0 view .LVU2804
 8932 11ba 6423     		movs	r3, #100
 8933 11bc A8F80830 		strh	r3, [r8, #8]	@ movhi
 8934 11c0 FFF7F5BA 		b	.L715
 8935              	.LVL706:
 8936              	.L729:
2723:src/keys.c    **** 			return STATE_UNFINISHED;
 8937              		.loc 1 2723 3 is_stmt 1 view .LVU2805
2723:src/keys.c    **** 			return STATE_UNFINISHED;
 8938              		.loc 1 2723 7 is_stmt 0 view .LVU2806
 8939 11c4 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2723:src/keys.c    **** 			return STATE_UNFINISHED;
 8940              		.loc 1 2723 6 view .LVU2807
 8941 11c8 13F02002 		ands	r2, r3, #32
 8942 11cc 7FF4F5AA 		bne	.L1071
2725:src/keys.c    **** 
 8943              		.loc 1 2725 3 is_stmt 1 view .LVU2808
2747:src/keys.c    **** 	State2.digval = 0;
 8944              		.loc 1 2747 2 view .LVU2809
2747:src/keys.c    **** 	State2.digval = 0;
 8945              		.loc 1 2747 22 is_stmt 0 view .LVU2810
 8946 11d0 62F3C303 		bfi	r3, r2, #3, #1
 8947 11d4 88F81730 		strb	r3, [r8, #23]
2748:src/keys.c    **** 	State2.digval2 = 0;
 8948              		.loc 1 2748 2 is_stmt 1 view .LVU2811
ARM GAS  /tmp/cceb4mPP.s 			page 259


2748:src/keys.c    **** 	State2.digval2 = 0;
 8949              		.loc 1 2748 16 is_stmt 0 view .LVU2812
 8950 11d8 A8F80820 		strh	r2, [r8, #8]	@ movhi
2749:src/keys.c    **** reset_window:
 8951              		.loc 1 2749 2 is_stmt 1 view .LVU2813
2749:src/keys.c    **** reset_window:
 8952              		.loc 1 2749 17 is_stmt 0 view .LVU2814
 8953 11dc 88F80A20 		strb	r2, [r8, #10]
 8954 11e0 FFF7E5BA 		b	.L715
 8955              	.L731:
2728:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8956              		.loc 1 2728 3 is_stmt 1 view .LVU2815
2728:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8957              		.loc 1 2728 6 is_stmt 0 view .LVU2816
 8958 11e4 012B     		cmp	r3, #1
 8959 11e6 00F07E85 		beq	.L1144
 8960              	.L732:
2733:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8961              		.loc 1 2733 3 is_stmt 1 view .LVU2817
2733:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8962              		.loc 1 2733 6 is_stmt 0 view .LVU2818
 8963 11ea 002B     		cmp	r3, #0
 8964 11ec 7FF4E5AA 		bne	.L1071
2737:src/keys.c    **** #endif
 8965              		.loc 1 2737 4 is_stmt 1 view .LVU2819
2737:src/keys.c    **** #endif
 8966              		.loc 1 2737 8 is_stmt 0 view .LVU2820
 8967 11f0 B8F808B0 		ldrh	fp, [r8, #8]
 8968              	.LVL707:
2739:src/keys.c    **** 			State2.digval = 0;
 8969              		.loc 1 2739 4 is_stmt 1 view .LVU2821
2739:src/keys.c    **** 			State2.digval = 0;
 8970              		.loc 1 2739 24 is_stmt 0 view .LVU2822
 8971 11f4 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2741:src/keys.c    **** 			return n;
 8972              		.loc 1 2741 19 view .LVU2823
 8973 11f8 88F80A30 		strb	r3, [r8, #10]
2739:src/keys.c    **** 			State2.digval = 0;
 8974              		.loc 1 2739 24 view .LVU2824
 8975 11fc 63F3C302 		bfi	r2, r3, #3, #1
2742:src/keys.c    **** 		}
 8976              		.loc 1 2742 11 view .LVU2825
 8977 1200 4BF4285B 		orr	fp, fp, #10752
 8978              	.LVL708:
2740:src/keys.c    **** 			State2.digval2 = 0;
 8979              		.loc 1 2740 18 view .LVU2826
 8980 1204 A8F80830 		strh	r3, [r8, #8]	@ movhi
 8981 1208 5846     		mov	r0, fp
 8982              	.LVL709:
2740:src/keys.c    **** 			State2.digval2 = 0;
 8983              		.loc 1 2740 18 view .LVU2827
 8984 120a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2739:src/keys.c    **** 			State2.digval = 0;
 8985              		.loc 1 2739 24 view .LVU2828
 8986 120e 88F81720 		strb	r2, [r8, #23]
2740:src/keys.c    **** 			State2.digval2 = 0;
 8987              		.loc 1 2740 4 is_stmt 1 view .LVU2829
ARM GAS  /tmp/cceb4mPP.s 			page 260


2741:src/keys.c    **** 			return n;
 8988              		.loc 1 2741 4 view .LVU2830
2742:src/keys.c    **** 		}
 8989              		.loc 1 2742 4 view .LVU2831
2742:src/keys.c    **** 		}
 8990              		.loc 1 2742 11 is_stmt 0 view .LVU2832
 8991 1212 FFF75CB9 		b	.L620
 8992              	.LVL710:
 8993              	.L1056:
2742:src/keys.c    **** 		}
 8994              		.loc 1 2742 11 view .LVU2833
 8995 1216 DAB2     		uxtb	r2, r3
 8996 1218 DFE4     		b	.L641
 8997              	.LVL711:
 8998              	.L1124:
2742:src/keys.c    **** 		}
 8999              		.loc 1 2742 11 view .LVU2834
 9000              	.LBE764:
 9001              	.LBE1043:
 9002              	.LBB1044:
 9003              	.LBB878:
1333:src/keys.c    **** #endif
 9004              		.loc 1 1333 44 is_stmt 1 view .LVU2835
1333:src/keys.c    **** #endif
 9005              		.loc 1 1333 52 is_stmt 0 view .LVU2836
 9006 121a 0420     		movs	r0, #4
 9007 121c FFF7FEFF 		bl	gtodot_digit
 9008              	.LVL712:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9009              		.loc 1 1376 2 is_stmt 1 view .LVU2837
 9010              	.LBE878:
 9011              	.LBE1044:
2815:src/keys.c    **** 
 9012              		.loc 1 2815 10 is_stmt 0 view .LVU2838
 9013 1220 4FF0330B 		mov	fp, #51
 9014 1224 FEF740BF 		b	.L565
 9015              	.LVL713:
 9016              	.L1127:
 9017              	.LBB1045:
 9018              	.LBB879:
1347:src/keys.c    **** 	}
 9019              		.loc 1 1347 3 is_stmt 1 view .LVU2839
1347:src/keys.c    **** 	}
 9020              		.loc 1 1347 6 is_stmt 0 view .LVU2840
 9021 1228 B8F80800 		ldrh	r0, [r8, #8]
 9022              	.LVL714:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9023              		.loc 1 1376 2 is_stmt 1 view .LVU2841
 9024 122c 46E5     		b	.L597
 9025              	.LVL715:
 9026              	.L1125:
1337:src/keys.c    **** 		goto fin;
 9027              		.loc 1 1337 3 view .LVU2842
 9028              	.LBB872:
 9029              	.LBI872:
1309:src/keys.c    **** 	const int code = 100 + n;
 9030              		.loc 1 1309 12 view .LVU2843
ARM GAS  /tmp/cceb4mPP.s 			page 261


 9031              	.LBB873:
1310:src/keys.c    **** 	unsigned int pc = state_pc();
 9032              		.loc 1 1310 2 view .LVU2844
1311:src/keys.c    **** 
 9033              		.loc 1 1311 2 view .LVU2845
1311:src/keys.c    **** 
 9034              		.loc 1 1311 20 is_stmt 0 view .LVU2846
 9035 122e DFF8EC91 		ldr	r9, .L1166+12
 9036 1232 D9F80030 		ldr	r3, [r9]
 9037              	.LVL716:
1311:src/keys.c    **** 
 9038              		.loc 1 1311 15 view .LVU2847
 9039 1236 B3F8E007 		ldrh	r0, [r3, #2016]
 9040              	.LVL717:
1313:src/keys.c    **** 		pc = 1;
 9041              		.loc 1 1313 2 is_stmt 1 view .LVU2848
1313:src/keys.c    **** 		pc = 1;
 9042              		.loc 1 1313 5 is_stmt 0 view .LVU2849
 9043 123a 830B     		lsrs	r3, r0, #14
1314:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9044              		.loc 1 1314 6 view .LVU2850
 9045 123c 032B     		cmp	r3, #3
 9046              	.LVL718:
1315:src/keys.c    **** 	if (pc > 0)
 9047              		.loc 1 1315 2 is_stmt 1 view .LVU2851
1315:src/keys.c    **** 	if (pc > 0)
 9048              		.loc 1 1315 7 is_stmt 0 view .LVU2852
 9049 123e 08BF     		it	eq
 9050 1240 0120     		moveq	r0, #1
 9051              	.LVL719:
1315:src/keys.c    **** 	if (pc > 0)
 9052              		.loc 1 1315 7 view .LVU2853
 9053 1242 04F16401 		add	r1, r4, #100
 9054              	.LVL720:
1315:src/keys.c    **** 	if (pc > 0)
 9055              		.loc 1 1315 7 view .LVU2854
 9056 1246 0322     		movs	r2, #3
 9057              	.LVL721:
1315:src/keys.c    **** 	if (pc > 0)
 9058              		.loc 1 1315 7 view .LVU2855
 9059 1248 FFF7FEFF 		bl	find_label_from
 9060              	.LVL722:
1316:src/keys.c    **** 		return pc;
 9061              		.loc 1 1316 2 is_stmt 1 view .LVU2856
1316:src/keys.c    **** 		return pc;
 9062              		.loc 1 1316 5 is_stmt 0 view .LVU2857
 9063 124c 0028     		cmp	r0, #0
 9064 124e 7FF465AC 		bne	.L607
1318:src/keys.c    **** }
 9065              		.loc 1 1318 2 is_stmt 1 view .LVU2858
1318:src/keys.c    **** }
 9066              		.loc 1 1318 9 is_stmt 0 view .LVU2859
 9067 1252 D9F80030 		ldr	r3, [r9]
 9068 1256 B3F8E007 		ldrh	r0, [r3, #2016]
 9069              	.LVL723:
1318:src/keys.c    **** }
 9070              		.loc 1 1318 9 view .LVU2860
ARM GAS  /tmp/cceb4mPP.s 			page 262


 9071              	.LBE873:
 9072              	.LBE872:
1338:src/keys.c    **** 	}
 9073              		.loc 1 1338 3 is_stmt 1 view .LVU2861
 9074 125a 5FE4     		b	.L607
 9075              	.LVL724:
 9076              	.L896:
1338:src/keys.c    **** 	}
 9077              		.loc 1 1338 3 is_stmt 0 view .LVU2862
 9078              	.LBE879:
 9079              	.LBE1045:
 9080              	.LBB1046:
 9081              	.LBB862:
1915:src/keys.c    **** 	}
 9082              		.loc 1 1915 18 view .LVU2863
 9083 125c 1E23     		movs	r3, #30
1915:src/keys.c    **** 	}
 9084              		.loc 1 1915 47 view .LVU2864
 9085 125e 9B44     		add	fp, fp, r3
 9086              	.LVL725:
1915:src/keys.c    **** 	}
 9087              		.loc 1 1915 47 view .LVU2865
 9088 1260 FFF796B9 		b	.L594
 9089              	.LVL726:
 9090              	.L895:
1915:src/keys.c    **** 	}
 9091              		.loc 1 1915 18 view .LVU2866
 9092 1264 2723     		movs	r3, #39
1915:src/keys.c    **** 	}
 9093              		.loc 1 1915 47 view .LVU2867
 9094 1266 9B44     		add	fp, fp, r3
 9095              	.LVL727:
1915:src/keys.c    **** 	}
 9096              		.loc 1 1915 47 view .LVU2868
 9097 1268 FFF792B9 		b	.L594
 9098              	.LVL728:
 9099              	.L1106:
1915:src/keys.c    **** 	}
 9100              		.loc 1 1915 47 view .LVU2869
 9101              	.LBE862:
 9102              	.LBE1046:
2876:src/keys.c    **** 
 9103              		.loc 1 2876 3 is_stmt 1 view .LVU2870
 9104              	.LBB1047:
 9105              	.LBI1047:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9106              		.loc 1 102 13 view .LVU2871
 9107              	.LBE1047:
 9108              	.LBE1202:
 9109              	.LBE1258:
 103:src/keys.c    **** }
 9110              		.loc 1 103 2 view .LVU2872
 9111              	.LBB1259:
 9112              	.LBB1203:
 9113              	.LBB1054:
 9114              	.LBB1048:
 9115              	.LBI1048:
ARM GAS  /tmp/cceb4mPP.s 			page 263


  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9116              		.loc 1 92 20 view .LVU2873
 9117              	.LBB1049:
  93:src/keys.c    **** 	State2.shifts = shift;
 9118              		.loc 1 93 2 view .LVU2874
 9119              	.LBB1050:
 9120              	.LBI1050:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9121              		.loc 1 84 13 view .LVU2875
 9122              	.LBB1051:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9123              		.loc 1 85 2 view .LVU2876
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9124              		.loc 1 85 18 is_stmt 0 view .LVU2877
 9125 126c FFF7FEFF 		bl	shift_down
 9126              	.LVL729:
  86:src/keys.c    **** }
 9127              		.loc 1 86 2 is_stmt 1 view .LVU2878
  86:src/keys.c    **** }
 9128              		.loc 1 86 52 is_stmt 0 view .LVU2879
 9129 1270 0146     		mov	r1, r0
 9130 1272 08B9     		cbnz	r0, .L734
 9131 1274 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9132              	.L734:
 9133              	.LVL730:
  86:src/keys.c    **** }
 9134              		.loc 1 86 52 view .LVU2880
 9135              	.LBE1051:
 9136              	.LBE1050:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9137              		.loc 1 94 2 is_stmt 1 view .LVU2881
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9138              		.loc 1 94 16 is_stmt 0 view .LVU2882
 9139 1278 0022     		movs	r2, #0
 9140              	.LBE1049:
 9141              	.LBE1048:
 9142              	.LBE1054:
2876:src/keys.c    **** 
 9143              		.loc 1 2876 10 view .LVU2883
 9144 127a 2046     		mov	r0, r4
 9145              	.LBB1055:
 9146              	.LBB1053:
 9147              	.LBB1052:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9148              		.loc 1 94 16 view .LVU2884
 9149 127c 88F81020 		strb	r2, [r8, #16]
  95:src/keys.c    **** 	return r;
 9150              		.loc 1 95 2 is_stmt 1 view .LVU2885
  95:src/keys.c    **** 	return r;
 9151              		.loc 1 95 19 is_stmt 0 view .LVU2886
 9152 1280 88F80D20 		strb	r2, [r8, #13]
  96:src/keys.c    **** }
 9153              		.loc 1 96 2 is_stmt 1 view .LVU2887
 9154              	.LVL731:
  96:src/keys.c    **** }
 9155              		.loc 1 96 2 is_stmt 0 view .LVU2888
 9156              	.LBE1052:
ARM GAS  /tmp/cceb4mPP.s 			page 264


 9157              	.LBE1053:
 9158              	.LBE1055:
2876:src/keys.c    **** 
 9159              		.loc 1 2876 10 view .LVU2889
 9160 1284 FFF7FEFF 		bl	process_catalogue
 9161              	.LVL732:
2876:src/keys.c    **** 
 9162              		.loc 1 2876 10 view .LVU2890
 9163 1288 8346     		mov	fp, r0
 9164 128a FFF781B9 		b	.L594
 9165              	.L1107:
2880:src/keys.c    **** #else
 9166              		.loc 1 2880 3 is_stmt 1 view .LVU2891
 9167              	.LVL733:
 9168              	.LBB1056:
 9169              	.LBI770:
1389:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
 9170              		.loc 1 1389 12 view .LVU2892
 9171              	.LBB814:
1390:src/keys.c    ****         int op = STATE_UNFINISHED;
 9172              		.loc 1 1390 2 view .LVU2893
1390:src/keys.c    ****         int op = STATE_UNFINISHED;
 9173              		.loc 1 1390 33 is_stmt 0 view .LVU2894
 9174 128e 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 9175              	.LVL734:
1391:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9176              		.loc 1 1391 9 is_stmt 1 view .LVU2895
1392:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9177              		.loc 1 1392 2 view .LVU2896
 9178              	.LBB772:
 9179              	.LBI772:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9180              		.loc 1 102 13 view .LVU2897
 9181              	.LBE772:
 9182              	.LBE814:
 9183              	.LBE1056:
 9184              	.LBE1203:
 9185              	.LBE1259:
 103:src/keys.c    **** }
 9186              		.loc 1 103 2 view .LVU2898
 9187              	.LBB1260:
 9188              	.LBB1204:
 9189              	.LBB1057:
 9190              	.LBB815:
 9191              	.LBB781:
 9192              	.LBB773:
 9193              	.LBI773:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9194              		.loc 1 92 20 view .LVU2899
 9195              	.LBB774:
  93:src/keys.c    **** 	State2.shifts = shift;
 9196              		.loc 1 93 2 view .LVU2900
 9197              	.LBB775:
 9198              	.LBI775:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9199              		.loc 1 84 13 view .LVU2901
 9200              	.LBB776:
ARM GAS  /tmp/cceb4mPP.s 			page 265


  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9201              		.loc 1 85 2 view .LVU2902
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9202              		.loc 1 85 18 is_stmt 0 view .LVU2903
 9203 1292 FFF7FEFF 		bl	shift_down
 9204              	.LVL735:
  86:src/keys.c    **** }
 9205              		.loc 1 86 2 is_stmt 1 view .LVU2904
  86:src/keys.c    **** }
 9206              		.loc 1 86 52 is_stmt 0 view .LVU2905
 9207 1296 08B9     		cbnz	r0, .L736
 9208 1298 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 9209              	.LVL736:
 9210              	.L736:
  86:src/keys.c    **** }
 9211              		.loc 1 86 52 view .LVU2906
 9212              	.LBE776:
 9213              	.LBE775:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9214              		.loc 1 94 2 is_stmt 1 view .LVU2907
 9215              	.LBE774:
 9216              	.LBE773:
 9217              	.LBE781:
 9218              	.LBB782:
 9219              	.LBB783:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9220              		.loc 1 434 6 is_stmt 0 view .LVU2908
 9221 129c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9222              	.LBE783:
 9223              	.LBE782:
 9224              	.LBB797:
 9225              	.LBB779:
 9226              	.LBB777:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9227              		.loc 1 94 16 view .LVU2909
 9228 12a0 0022     		movs	r2, #0
 9229              	.LBE777:
 9230              	.LBE779:
 9231              	.LBE797:
 9232              	.LBB798:
 9233              	.LBB794:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9234              		.loc 1 434 5 view .LVU2910
 9235 12a2 D906     		lsls	r1, r3, #27
 9236              	.LBE794:
 9237              	.LBE798:
 9238              	.LBB799:
 9239              	.LBB780:
 9240              	.LBB778:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9241              		.loc 1 94 16 view .LVU2911
 9242 12a4 88F81020 		strb	r2, [r8, #16]
  95:src/keys.c    **** 	return r;
 9243              		.loc 1 95 2 is_stmt 1 view .LVU2912
  95:src/keys.c    **** 	return r;
 9244              		.loc 1 95 19 is_stmt 0 view .LVU2913
 9245 12a8 88F80D20 		strb	r2, [r8, #13]
ARM GAS  /tmp/cceb4mPP.s 			page 266


  96:src/keys.c    **** }
 9246              		.loc 1 96 2 is_stmt 1 view .LVU2914
 9247              	.LVL737:
  96:src/keys.c    **** }
 9248              		.loc 1 96 2 is_stmt 0 view .LVU2915
 9249              	.LBE778:
 9250              	.LBE780:
 9251              	.LBE799:
1393:src/keys.c    **** 	State2.alpha_pos = 0;
 9252              		.loc 1 1393 2 is_stmt 1 view .LVU2916
1393:src/keys.c    **** 	State2.alpha_pos = 0;
 9253              		.loc 1 1393 11 is_stmt 0 view .LVU2917
 9254 12ac 0246     		mov	r2, r0
 9255              	.LVL738:
 9256              	.LBB800:
 9257              	.LBI782:
 384:src/keys.c    **** {
 9258              		.loc 1 384 12 is_stmt 1 view .LVU2918
 9259              	.LBB795:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9260              		.loc 1 386 2 view .LVU2919
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9261              		.loc 1 434 2 view .LVU2920
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9262              		.loc 1 434 5 is_stmt 0 view .LVU2921
 9263 12ae 40F1BC80 		bpl	.L737
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9264              		.loc 1 435 3 is_stmt 1 view .LVU2922
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9265              		.loc 1 435 6 is_stmt 0 view .LVU2923
 9266 12b2 0028     		cmp	r0, #0
 9267 12b4 00F0B880 		beq	.L880
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 9268              		.loc 1 437 8 is_stmt 1 view .LVU2924
 9269              	.LBB784:
 9270              	.LBB785:
 131:src/keys.c    **** }
 9271              		.loc 1 131 23 is_stmt 0 view .LVU2925
 9272 12b8 5549     		ldr	r1, .L1166
 9273              	.LBE785:
 9274              	.LBE784:
 440:src/keys.c    **** }
 9275              		.loc 1 440 49 view .LVU2926
 9276 12ba 574A     		ldr	r2, .L1166+8
 9277              	.LBB790:
 9278              	.LBB786:
 131:src/keys.c    **** }
 9279              		.loc 1 131 23 view .LVU2927
 9280 12bc 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9281              	.LBE786:
 9282              	.LBE790:
 438:src/keys.c    **** 	}
 9283              		.loc 1 438 10 view .LVU2928
 9284 12be 0228     		cmp	r0, #2
 440:src/keys.c    **** }
 9285              		.loc 1 440 49 view .LVU2929
 9286 12c0 4FF0060C 		mov	ip, #6
ARM GAS  /tmp/cceb4mPP.s 			page 267


 9287 12c4 0CFB0121 		mla	r1, ip, r1, r2
 438:src/keys.c    **** 	}
 9288              		.loc 1 438 10 view .LVU2930
 9289 12c8 14BF     		ite	ne
 9290 12ca 0246     		movne	r2, r0
 9291 12cc 0522     		moveq	r2, #5
 9292              	.LVL739:
 440:src/keys.c    **** }
 9293              		.loc 1 440 2 is_stmt 1 view .LVU2931
 9294              	.LBB791:
 9295              	.LBI784:
 119:src/keys.c    **** {
 9296              		.loc 1 119 12 view .LVU2932
 9297              	.LBB787:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9298              		.loc 1 121 2 view .LVU2933
 131:src/keys.c    **** }
 9299              		.loc 1 131 2 view .LVU2934
 131:src/keys.c    **** }
 9300              		.loc 1 131 2 is_stmt 0 view .LVU2935
 9301 12ce 063C     		subs	r4, r4, #6
 9302              	.LBE787:
 9303              	.LBE791:
 440:src/keys.c    **** }
 9304              		.loc 1 440 49 view .LVU2936
 9305 12d0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9306              	.LVL740:
 440:src/keys.c    **** }
 9307              		.loc 1 440 49 view .LVU2937
 9308              	.LBE795:
 9309              	.LBE800:
1394:src/keys.c    **** 
 9310              		.loc 1 1394 2 is_stmt 1 view .LVU2938
1396:src/keys.c    **** 	case K10:	// STO
 9311              		.loc 1 1396 2 view .LVU2939
 9312 12d2 212C     		cmp	r4, #33
 9313 12d4 23D8     		bhi	.L740
 9314 12d6 DFE814F0 		tbh	[pc, r4, lsl #1]
 9315              	.L843:
 9316 12da FD03     		.2byte	(.L749-.L843)/2
 9317 12dc EA03     		.2byte	(.L748-.L843)/2
 9318 12de 2200     		.2byte	(.L740-.L843)/2
 9319 12e0 2200     		.2byte	(.L740-.L843)/2
 9320 12e2 2200     		.2byte	(.L740-.L843)/2
 9321 12e4 2200     		.2byte	(.L740-.L843)/2
 9322 12e6 D503     		.2byte	(.L747-.L843)/2
 9323 12e8 2200     		.2byte	(.L740-.L843)/2
 9324 12ea 2200     		.2byte	(.L740-.L843)/2
 9325 12ec 2200     		.2byte	(.L740-.L843)/2
 9326 12ee 9F04     		.2byte	(.L753-.L843)/2
 9327 12f0 2200     		.2byte	(.L740-.L843)/2
 9328 12f2 1E04     		.2byte	(.L745-.L843)/2
 9329 12f4 2200     		.2byte	(.L740-.L843)/2
 9330 12f6 2200     		.2byte	(.L740-.L843)/2
 9331 12f8 2200     		.2byte	(.L740-.L843)/2
 9332 12fa 2200     		.2byte	(.L740-.L843)/2
 9333 12fc 2200     		.2byte	(.L740-.L843)/2
ARM GAS  /tmp/cceb4mPP.s 			page 268


 9334 12fe 0E04     		.2byte	(.L744-.L843)/2
 9335 1300 2200     		.2byte	(.L740-.L843)/2
 9336 1302 2200     		.2byte	(.L740-.L843)/2
 9337 1304 2200     		.2byte	(.L740-.L843)/2
 9338 1306 2200     		.2byte	(.L740-.L843)/2
 9339 1308 2200     		.2byte	(.L740-.L843)/2
 9340 130a 2200     		.2byte	(.L740-.L843)/2
 9341 130c 2200     		.2byte	(.L740-.L843)/2
 9342 130e 2200     		.2byte	(.L740-.L843)/2
 9343 1310 2200     		.2byte	(.L740-.L843)/2
 9344 1312 2200     		.2byte	(.L740-.L843)/2
 9345 1314 2200     		.2byte	(.L740-.L843)/2
 9346 1316 3104     		.2byte	(.L743-.L843)/2
 9347 1318 2200     		.2byte	(.L740-.L843)/2
 9348 131a 2200     		.2byte	(.L740-.L843)/2
 9349 131c 1E03     		.2byte	(.L741-.L843)/2
 9350              		.p2align 1
 9351              	.L740:
1479:src/keys.c    **** 		return STATE_UNFINISHED;
 9352              		.loc 1 1479 2 view .LVU2940
1479:src/keys.c    **** 		return STATE_UNFINISHED;
 9353              		.loc 1 1479 5 is_stmt 0 view .LVU2941
 9354 131e 002A     		cmp	r2, #0
 9355 1320 3FF44BAA 		beq	.L1071
1481:src/keys.c    **** }
 9356              		.loc 1 1481 2 is_stmt 1 view .LVU2942
1481:src/keys.c    **** }
 9357              		.loc 1 1481 9 is_stmt 0 view .LVU2943
 9358 1324 42F4884B 		orr	fp, r2, #17408
 9359 1328 5846     		mov	r0, fp
 9360              	.LVL741:
1481:src/keys.c    **** }
 9361              		.loc 1 1481 9 view .LVU2944
 9362 132a FFF7D0B8 		b	.L620
 9363              	.LVL742:
 9364              	.L1126:
1481:src/keys.c    **** }
 9365              		.loc 1 1481 9 view .LVU2945
 9366              	.LBE815:
 9367              	.LBE1057:
 9368              	.LBB1058:
 9369              	.LBB880:
1342:src/keys.c    **** 		goto fin;
 9370              		.loc 1 1342 3 is_stmt 1 view .LVU2946
1342:src/keys.c    **** 		goto fin;
 9371              		.loc 1 1342 11 is_stmt 0 view .LVU2947
 9372 132e 3B4B     		ldr	r3, .L1166+12
 9373              	.LVL743:
1342:src/keys.c    **** 		goto fin;
 9374              		.loc 1 1342 11 view .LVU2948
 9375 1330 1B68     		ldr	r3, [r3]
1342:src/keys.c    **** 		goto fin;
 9376              		.loc 1 1342 9 view .LVU2949
 9377 1332 5888     		ldrh	r0, [r3, #2]
 9378              	.LVL744:
1343:src/keys.c    **** 	}
 9379              		.loc 1 1343 3 is_stmt 1 view .LVU2950
ARM GAS  /tmp/cceb4mPP.s 			page 269


 9380 1334 FFF7F2BB 		b	.L607
 9381              	.LVL745:
 9382              	.L1128:
1351:src/keys.c    **** 			goto fin2;
 9383              		.loc 1 1351 3 view .LVU2951
1351:src/keys.c    **** 			goto fin2;
 9384              		.loc 1 1351 13 is_stmt 0 view .LVU2952
 9385 1338 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 9386              	.LVL746:
1351:src/keys.c    **** 			goto fin2;
 9387              		.loc 1 1351 6 view .LVU2953
 9388 133c 002B     		cmp	r3, #0
 9389 133e 3FF4EFAB 		beq	.L611
1354:src/keys.c    **** 			State2.digval /= 10;
 9390              		.loc 1 1354 4 is_stmt 1 view .LVU2954
1354:src/keys.c    **** 			State2.digval /= 10;
 9391              		.loc 1 1354 19 is_stmt 0 view .LVU2955
 9392 1342 013B     		subs	r3, r3, #1
 9393 1344 88F80B30 		strb	r3, [r8, #11]
1355:src/keys.c    **** 		}
 9394              		.loc 1 1355 4 is_stmt 1 view .LVU2956
1355:src/keys.c    **** 		}
 9395              		.loc 1 1355 18 is_stmt 0 view .LVU2957
 9396 1348 0A22     		movs	r2, #10
 9397              	.LVL747:
1355:src/keys.c    **** 		}
 9398              		.loc 1 1355 18 view .LVU2958
 9399 134a B8F80830 		ldrh	r3, [r8, #8]
 9400 134e B3FBF2F3 		udiv	r3, r3, r2
 9401              	.LBE880:
 9402              	.LBE1058:
2815:src/keys.c    **** 
 9403              		.loc 1 2815 10 view .LVU2959
 9404 1352 4FF0330B 		mov	fp, #51
 9405              	.LBB1059:
 9406              	.LBB881:
1355:src/keys.c    **** 		}
 9407              		.loc 1 1355 18 view .LVU2960
 9408 1356 A8F80830 		strh	r3, [r8, #8]	@ movhi
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9409              		.loc 1 1376 2 is_stmt 1 view .LVU2961
 9410 135a FEF7A5BE 		b	.L565
 9411              	.LVL748:
 9412              	.L1110:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9413              		.loc 1 1376 2 is_stmt 0 view .LVU2962
 9414              	.LBE881:
 9415              	.LBE1059:
2897:src/keys.c    **** 		// print_debug (3, c);
 9416              		.loc 1 2897 4 is_stmt 1 view .LVU2963
 9417              	.LBB1060:
 9418              	.LBI1060:
1001:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 9419              		.loc 1 1001 12 view .LVU2964
 9420              	.LBB1061:
1004:src/keys.c    **** 		// Row 1
 9421              		.loc 1 1004 2 view .LVU2965
ARM GAS  /tmp/cceb4mPP.s 			page 270


1055:src/keys.c    **** 	int op = op_map[lc];
 9422              		.loc 1 1055 2 view .LVU2966
 9423              	.LBB1062:
 9424              	.LBI1062:
 134:src/keys.c    **** {
 9425              		.loc 1 134 12 view .LVU2967
 9426              	.LBB1063:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9427              		.loc 1 136 2 view .LVU2968
 146:src/keys.c    **** }
 9428              		.loc 1 146 2 view .LVU2969
 146:src/keys.c    **** }
 9429              		.loc 1 146 2 is_stmt 0 view .LVU2970
 9430              	.LBE1063:
 9431              	.LBE1062:
1056:src/keys.c    **** 	reset_shift();
 9432              		.loc 1 1056 2 is_stmt 1 view .LVU2971
 9433              	.LBB1066:
 9434              	.LBB1064:
 146:src/keys.c    **** }
 9435              		.loc 1 146 23 is_stmt 0 view .LVU2972
 9436 135e 304A     		ldr	r2, .L1166+16
 9437              	.LBE1064:
 9438              	.LBE1066:
1056:src/keys.c    **** 	reset_shift();
 9439              		.loc 1 1056 17 view .LVU2973
 9440 1360 304B     		ldr	r3, .L1166+20
 9441              	.LBB1067:
 9442              	.LBB1065:
 146:src/keys.c    **** }
 9443              		.loc 1 146 23 view .LVU2974
 9444 1362 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9445              	.LBE1065:
 9446              	.LBE1067:
1056:src/keys.c    **** 	reset_shift();
 9447              		.loc 1 1056 17 view .LVU2975
 9448 1364 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 9449              	.LVL749:
1057:src/keys.c    **** 
 9450              		.loc 1 1057 2 is_stmt 1 view .LVU2976
 9451              	.LBB1068:
 9452              	.LBI1068:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9453              		.loc 1 102 13 view .LVU2977
 9454              	.LBE1068:
 9455              	.LBE1061:
 9456              	.LBE1060:
 9457              	.LBE1204:
 9458              	.LBE1260:
 103:src/keys.c    **** }
 9459              		.loc 1 103 2 view .LVU2978
 9460              	.LBB1261:
 9461              	.LBB1205:
 9462              	.LBB1083:
 9463              	.LBB1079:
 9464              	.LBB1075:
 9465              	.LBB1069:
ARM GAS  /tmp/cceb4mPP.s 			page 271


 9466              	.LBI1069:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9467              		.loc 1 92 20 view .LVU2979
 9468              	.LBB1070:
  93:src/keys.c    **** 	State2.shifts = shift;
 9469              		.loc 1 93 2 view .LVU2980
 9470              	.LBB1071:
 9471              	.LBI1071:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9472              		.loc 1 84 13 view .LVU2981
 9473              	.LBB1072:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9474              		.loc 1 85 2 view .LVU2982
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9475              		.loc 1 85 18 is_stmt 0 view .LVU2983
 9476 1368 FFF7FEFF 		bl	shift_down
 9477              	.LVL750:
  86:src/keys.c    **** }
 9478              		.loc 1 86 2 is_stmt 1 view .LVU2984
 9479              	.LBE1072:
 9480              	.LBE1071:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9481              		.loc 1 94 2 view .LVU2985
 9482              	.LBE1070:
 9483              	.LBE1069:
 9484              	.LBE1075:
1060:src/keys.c    **** 	case K62:
 9485              		.loc 1 1060 2 is_stmt 0 view .LVU2986
 9486 136c 262C     		cmp	r4, #38
 9487              	.LBB1076:
 9488              	.LBB1074:
 9489              	.LBB1073:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9490              		.loc 1 94 16 view .LVU2987
 9491 136e 88F810B0 		strb	fp, [r8, #16]
  95:src/keys.c    **** 	return r;
 9492              		.loc 1 95 2 is_stmt 1 view .LVU2988
  95:src/keys.c    **** 	return r;
 9493              		.loc 1 95 19 is_stmt 0 view .LVU2989
 9494 1372 88F80DB0 		strb	fp, [r8, #13]
  96:src/keys.c    **** }
 9495              		.loc 1 96 2 is_stmt 1 view .LVU2990
 9496              	.LVL751:
  96:src/keys.c    **** }
 9497              		.loc 1 96 2 is_stmt 0 view .LVU2991
 9498              	.LBE1073:
 9499              	.LBE1074:
 9500              	.LBE1076:
1060:src/keys.c    **** 	case K62:
 9501              		.loc 1 1060 2 is_stmt 1 view .LVU2992
 9502 1376 00F06582 		beq	.L791
 9503 137a 272C     		cmp	r4, #39
 9504 137c 1FD1     		bne	.L793
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9505              		.loc 1 1073 3 view .LVU2993
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9506              		.loc 1 1073 7 is_stmt 0 view .LVU2994
ARM GAS  /tmp/cceb4mPP.s 			page 272


 9507 137e FFF7FEFF 		bl	is_bad_cmdline
 9508              	.LVL752:
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9509              		.loc 1 1073 6 view .LVU2995
 9510 1382 0028     		cmp	r0, #0
 9511 1384 7FF419AA 		bne	.L1071
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9512              		.loc 1 1075 3 is_stmt 1 view .LVU2996
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9513              		.loc 1 1075 30 is_stmt 0 view .LVU2997
 9514 1388 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9515 138c C3F38012 		ubfx	r2, r3, #6, #1
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9516              		.loc 1 1075 22 view .LVU2998
 9517 1390 C2F10102 		rsb	r2, r2, #1
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9518              		.loc 1 1075 18 view .LVU2999
 9519 1394 62F38613 		bfi	r3, r2, #6, #1
 9520 1398 88F81630 		strb	r3, [r8, #22]
1076:src/keys.c    **** 		update_program_bounds(1);
 9521              		.loc 1 1076 3 is_stmt 1 view .LVU3000
 9522 139c FFF7FEFF 		bl	process_cmdline_set_lift
 9523              	.LVL753:
1077:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 9524              		.loc 1 1077 3 view .LVU3001
 9525 13a0 0120     		movs	r0, #1
 9526 13a2 FFF7FEFF 		bl	update_program_bounds
 9527              	.LVL754:
1078:src/keys.c    **** 			set_pc(0);
 9528              		.loc 1 1078 3 view .LVU3002
1078:src/keys.c    **** 			set_pc(0);
 9529              		.loc 1 1078 7 is_stmt 0 view .LVU3003
 9530 13a6 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
1078:src/keys.c    **** 			set_pc(0);
 9531              		.loc 1 1078 6 view .LVU3004
 9532 13aa 10F04000 		ands	r0, r0, #64
 9533 13ae 06D1     		bne	.L793
1078:src/keys.c    **** 			set_pc(0);
 9534              		.loc 1 1078 27 view .LVU3005
 9535 13b0 1A4B     		ldr	r3, .L1166+12
 9536 13b2 1B68     		ldr	r3, [r3]
1078:src/keys.c    **** 			set_pc(0);
 9537              		.loc 1 1078 24 view .LVU3006
 9538 13b4 B3F8E027 		ldrh	r2, [r3, #2016]
 9539 13b8 012A     		cmp	r2, #1
 9540 13ba 00F05284 		beq	.L1145
 9541              	.L793:
1086:src/keys.c    **** 		if (op & _RARG) {
 9542              		.loc 1 1086 5 view .LVU3007
 9543 13be BAF1330F 		cmp	r10, #51
1056:src/keys.c    **** 	reset_shift();
 9544              		.loc 1 1056 6 view .LVU3008
 9545 13c2 D346     		mov	fp, r10
1086:src/keys.c    **** 		if (op & _RARG) {
 9546              		.loc 1 1086 2 is_stmt 1 view .LVU3009
1086:src/keys.c    **** 		if (op & _RARG) {
 9547              		.loc 1 1086 5 is_stmt 0 view .LVU3010
ARM GAS  /tmp/cceb4mPP.s 			page 273


 9548 13c4 0AD0     		beq	.L801
 9549              	.LVL755:
1087:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9550              		.loc 1 1087 3 is_stmt 1 view .LVU3011
1087:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9551              		.loc 1 1087 6 is_stmt 0 view .LVU3012
 9552 13c6 1AF4004F 		tst	r10, #32768
 9553 13ca 00F06182 		beq	.L1146
1088:src/keys.c    **** 			op = STATE_UNFINISHED;
 9554              		.loc 1 1088 4 is_stmt 1 view .LVU3013
 9555              	.LVL756:
 9556              	.LBB1077:
 9557              	.LBI1077:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 9558              		.loc 1 501 13 view .LVU3014
 9559              	.LBB1078:
 502:src/keys.c    **** 		return;
 9560              		.loc 1 502 2 view .LVU3015
 502:src/keys.c    **** 		return;
 9561              		.loc 1 502 6 is_stmt 0 view .LVU3016
 9562 13ce FFF7FEFF 		bl	is_bad_cmdline
 9563              	.LVL757:
 502:src/keys.c    **** 		return;
 9564              		.loc 1 502 5 view .LVU3017
 9565 13d2 18B9     		cbnz	r0, .L801
 9566 13d4 5FFA8AF0 		uxtb	r0, r10
 9567 13d8 FFF7FEFF 		bl	init_arg.part.0
 9568              	.LVL758:
 9569              	.L801:
 502:src/keys.c    **** 		return;
 9570              		.loc 1 502 5 view .LVU3018
 9571              	.LBE1078:
 9572              	.LBE1077:
1092:src/keys.c    **** #undef _RARG
 9573              		.loc 1 1092 2 is_stmt 1 view .LVU3019
1068:src/keys.c    **** #endif
 9574              		.loc 1 1068 29 is_stmt 0 view .LVU3020
 9575 13dc 4FF0330B 		mov	fp, #51
 9576              	.LVL759:
 9577              	.L796:
1092:src/keys.c    **** #undef _RARG
 9578              		.loc 1 1092 57 view .LVU3021
 9579 13e0 2BF4804B 		bic	fp, fp, #16384
 9580 13e4 FFF7D4B8 		b	.L594
 9581              	.LVL760:
 9582              	.L1132:
1092:src/keys.c    **** #undef _RARG
 9583              		.loc 1 1092 57 view .LVU3022
 9584              	.LBE1079:
 9585              	.LBE1083:
 9586              	.LBB1084:
 9587              	.LBB901:
2469:src/keys.c    **** 		return STATE_UNFINISHED;
 9588              		.loc 1 2469 3 is_stmt 1 view .LVU3023
2469:src/keys.c    **** 		return STATE_UNFINISHED;
 9589              		.loc 1 2469 17 is_stmt 0 view .LVU3024
 9590 13e8 88F80C10 		strb	r1, [r8, #12]
ARM GAS  /tmp/cceb4mPP.s 			page 274


2470:src/keys.c    **** 	} 
 9591              		.loc 1 2470 3 is_stmt 1 view .LVU3025
 9592              	.LBE901:
 9593              	.LBE1084:
2824:src/keys.c    **** 
 9594              		.loc 1 2824 10 is_stmt 0 view .LVU3026
 9595 13ec 4FF0330B 		mov	fp, #51
 9596              	.LBB1085:
 9597              	.LBB902:
2470:src/keys.c    **** 	} 
 9598              		.loc 1 2470 10 view .LVU3027
 9599 13f0 FEF75ABE 		b	.L565
 9600              	.LVL761:
 9601              	.L1113:
2470:src/keys.c    **** 	} 
 9602              		.loc 1 2470 10 view .LVU3028
 9603              	.LBE902:
 9604              	.LBE1085:
 9605              	.LBB1086:
 9606              	.LBB731:
2359:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9607              		.loc 1 2359 3 is_stmt 1 view .LVU3029
2359:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9608              		.loc 1 2359 12 is_stmt 0 view .LVU3030
 9609 13f4 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 9610 13f8 2046     		mov	r0, r4
 9611 13fa 941E     		subs	r4, r2, #2
 9612 13fc 6242     		rsbs	r2, r4, #0
 9613 13fe 6241     		adcs	r2, r2, r4
 9614 1400 FFF7FEFF 		bl	process_catalogue
 9615              	.LVL762:
2360:src/keys.c    **** 			return opcode;
 9616              		.loc 1 2360 3 is_stmt 1 view .LVU3031
2360:src/keys.c    **** 			return opcode;
 9617              		.loc 1 2360 6 is_stmt 0 view .LVU3032
 9618 1404 3328     		cmp	r0, #51
 9619 1406 3FF4D8A9 		beq	.L1071
2362:src/keys.c    **** 		goto add_char;
 9620              		.loc 1 2362 3 is_stmt 1 view .LVU3033
2362:src/keys.c    **** 		goto add_char;
 9621              		.loc 1 2362 6 is_stmt 0 view .LVU3034
 9622 140a C3B2     		uxtb	r3, r0
 9623              	.LVL763:
2363:src/keys.c    **** 	}
 9624              		.loc 1 2363 3 is_stmt 1 view .LVU3035
 9625 140c FFF79AB8 		b	.L673
 9626              	.L1167:
 9627              		.align	2
 9628              	.L1166:
 9629 1410 00000000 		.word	.LANCHOR1
 9630 1414 00000000 		.word	.LANCHOR0
 9631 1418 00000000 		.word	.LANCHOR9
 9632 141c 00000000 		.word	main_ram
 9633 1420 00000000 		.word	.LANCHOR18
 9634 1424 00000000 		.word	.LANCHOR21
 9635              	.LVL764:
 9636              	.L880:
ARM GAS  /tmp/cceb4mPP.s 			page 275


2363:src/keys.c    **** 	}
 9637              		.loc 1 2363 3 is_stmt 0 view .LVU3036
 9638              	.LBE731:
 9639              	.LBE1086:
 9640              	.LBB1087:
 9641              	.LBB816:
 9642              	.LBB801:
 9643              	.LBB796:
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 9644              		.loc 1 436 10 view .LVU3037
 9645 1428 0422     		movs	r2, #4
 9646              	.L737:
 9647              	.LVL765:
 440:src/keys.c    **** }
 9648              		.loc 1 440 2 is_stmt 1 view .LVU3038
 9649              	.LBB792:
 119:src/keys.c    **** {
 9650              		.loc 1 119 12 view .LVU3039
 9651              	.LBB788:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9652              		.loc 1 121 2 view .LVU3040
 131:src/keys.c    **** }
 9653              		.loc 1 131 2 view .LVU3041
 131:src/keys.c    **** }
 9654              		.loc 1 131 23 is_stmt 0 view .LVU3042
 9655 142a B849     		ldr	r1, .L1168
 9656              	.LBE788:
 9657              	.LBE792:
 440:src/keys.c    **** }
 9658              		.loc 1 440 49 view .LVU3043
 9659 142c DFF8F4C2 		ldr	ip, .L1168+24
 9660              	.LBB793:
 9661              	.LBB789:
 131:src/keys.c    **** }
 9662              		.loc 1 131 23 view .LVU3044
 9663 1430 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9664              	.LBE789:
 9665              	.LBE793:
 440:src/keys.c    **** }
 9666              		.loc 1 440 49 view .LVU3045
 9667 1432 4FF0060E 		mov	lr, #6
 9668 1436 0EFB01C1 		mla	r1, lr, r1, ip
 9669 143a 063C     		subs	r4, r4, #6
 9670 143c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9671              	.LVL766:
 440:src/keys.c    **** }
 9672              		.loc 1 440 49 view .LVU3046
 9673              	.LBE796:
 9674              	.LBE801:
1394:src/keys.c    **** 
 9675              		.loc 1 1394 2 is_stmt 1 view .LVU3047
1396:src/keys.c    **** 	case K10:	// STO
 9676              		.loc 1 1396 2 view .LVU3048
 9677 143e 212C     		cmp	r4, #33
 9678 1440 3FF66DAF 		bhi	.L740
 9679 1444 01A1     		adr	r1, .L742
 9680 1446 51F824F0 		ldr	pc, [r1, r4, lsl #2]
ARM GAS  /tmp/cceb4mPP.s 			page 276


 9681 144a 00BF     		.p2align 2
 9682              	.L742:
 9683 144c D51A0000 		.word	.L749+1
 9684 1450 AF1A0000 		.word	.L748+1
 9685 1454 1F130000 		.word	.L740+1
 9686 1458 1F130000 		.word	.L740+1
 9687 145c 1F130000 		.word	.L740+1
 9688 1460 1F130000 		.word	.L740+1
 9689 1464 851A0000 		.word	.L747+1
 9690 1468 1F130000 		.word	.L740+1
 9691 146c 1F130000 		.word	.L740+1
 9692 1470 1F130000 		.word	.L740+1
 9693 1474 131C0000 		.word	.L746+1
 9694 1478 1F130000 		.word	.L740+1
 9695 147c 171B0000 		.word	.L745+1
 9696 1480 1F130000 		.word	.L740+1
 9697 1484 1F130000 		.word	.L740+1
 9698 1488 1F130000 		.word	.L740+1
 9699 148c 1F130000 		.word	.L740+1
 9700 1490 1F130000 		.word	.L740+1
 9701 1494 F71A0000 		.word	.L744+1
 9702 1498 1F130000 		.word	.L740+1
 9703 149c 1F130000 		.word	.L740+1
 9704 14a0 1F130000 		.word	.L740+1
 9705 14a4 1F130000 		.word	.L740+1
 9706 14a8 1F130000 		.word	.L740+1
 9707 14ac 1F130000 		.word	.L740+1
 9708 14b0 1F130000 		.word	.L740+1
 9709 14b4 1F130000 		.word	.L740+1
 9710 14b8 1F130000 		.word	.L740+1
 9711 14bc 1F130000 		.word	.L740+1
 9712 14c0 1F130000 		.word	.L740+1
 9713 14c4 3D1B0000 		.word	.L743+1
 9714 14c8 1F130000 		.word	.L740+1
 9715 14cc 1F130000 		.word	.L740+1
 9716 14d0 17190000 		.word	.L741+1
 9717              	.LVL767:
 9718              		.p2align 1
 9719              	.L1101:
1396:src/keys.c    **** 	case K10:	// STO
 9720              		.loc 1 1396 2 is_stmt 0 view .LVU3049
 9721              	.LBE816:
 9722              	.LBE1087:
 9723              	.LBB1088:
 9724              	.LBB657:
 9725              	.LBB650:
 324:src/keys.c    **** #else
 9726              		.loc 1 324 45 view .LVU3050
 9727 14d4 FFF7FEFF 		bl	shift_down
 9728              	.LVL768:
 324:src/keys.c    **** #else
 9729              		.loc 1 324 42 view .LVU3051
 9730 14d8 0328     		cmp	r0, #3
 9731 14da 00F02982 		beq	.L662
 9732 14de 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 322:src/keys.c    **** #ifndef WINGUI
 9733              		.loc 1 322 8 view .LVU3052
ARM GAS  /tmp/cceb4mPP.s 			page 277


 9734 14e2 8B4B     		ldr	r3, .L1168+4
 324:src/keys.c    **** #else
 9735              		.loc 1 324 73 view .LVU3053
 9736 14e4 DC46     		mov	ip, fp
 328:src/keys.c    ****   }
 9737              		.loc 1 328 9 view .LVU3054
 9738 14e6 0C21     		movs	r1, #12
 9739 14e8 FEF7D8BE 		b	.L661
 9740              	.LVL769:
 9741              	.L872:
 328:src/keys.c    ****   }
 9742              		.loc 1 328 9 view .LVU3055
 9743              	.LBE650:
 9744              	.LBE657:
 9745              	.LBE1088:
 9746              	.LBB1089:
 9747              	.LBB991:
2538:src/keys.c    **** 	const int opcode = getprog(pc);
 9748              		.loc 1 2538 27 view .LVU3056
 9749 14ec 4FF0030B 		mov	fp, #3
 9750 14f0 B6E4     		b	.L685
 9751              	.LVL770:
 9752              	.L1108:
2538:src/keys.c    **** 	const int opcode = getprog(pc);
 9753              		.loc 1 2538 27 view .LVU3057
 9754              	.LBE991:
 9755              	.LBE1089:
2892:src/keys.c    **** 	} else {
 9756              		.loc 1 2892 3 is_stmt 1 view .LVU3058
 9757              	.LBB1090:
 9758              	.LBI1090:
1100:src/keys.c    **** #define _RARG   0xFF00
 9759              		.loc 1 1100 12 view .LVU3059
 9760              	.LBB1091:
1105:src/keys.c    **** 		// Row 1
 9761              		.loc 1 1105 2 view .LVU3060
1156:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9762              		.loc 1 1156 2 view .LVU3061
 9763              	.LBB1092:
 9764              	.LBI1092:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9765              		.loc 1 102 13 view .LVU3062
 9766              	.LBE1092:
 9767              	.LBE1091:
 9768              	.LBE1090:
 9769              	.LBE1205:
 9770              	.LBE1261:
 103:src/keys.c    **** }
 9771              		.loc 1 103 2 view .LVU3063
 9772              	.LBB1262:
 9773              	.LBB1206:
 9774              	.LBB1121:
 9775              	.LBB1117:
 9776              	.LBB1103:
 9777              	.LBB1093:
 9778              	.LBI1093:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/cceb4mPP.s 			page 278


 9779              		.loc 1 92 20 view .LVU3064
 9780              	.LBB1094:
  93:src/keys.c    **** 	State2.shifts = shift;
 9781              		.loc 1 93 2 view .LVU3065
 9782              	.LBB1095:
 9783              	.LBI1095:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9784              		.loc 1 84 13 view .LVU3066
 9785              	.LBB1096:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9786              		.loc 1 85 2 view .LVU3067
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9787              		.loc 1 85 18 is_stmt 0 view .LVU3068
 9788 14f2 FFF7FEFF 		bl	shift_down
 9789              	.LVL771:
  86:src/keys.c    **** }
 9790              		.loc 1 86 2 is_stmt 1 view .LVU3069
  86:src/keys.c    **** }
 9791              		.loc 1 86 52 is_stmt 0 view .LVU3070
 9792 14f6 0346     		mov	r3, r0
 9793 14f8 08B9     		cbnz	r0, .L762
 9794 14fa 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 9795              	.L762:
 9796              	.LVL772:
  86:src/keys.c    **** }
 9797              		.loc 1 86 52 view .LVU3071
 9798              	.LBE1096:
 9799              	.LBE1095:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9800              		.loc 1 94 2 is_stmt 1 view .LVU3072
 9801              	.LBE1094:
 9802              	.LBE1093:
 9803              	.LBE1103:
 9804              	.LBB1104:
 9805              	.LBB1105:
 146:src/keys.c    **** }
 9806              		.loc 1 146 23 is_stmt 0 view .LVU3073
 9807 14fe 854A     		ldr	r2, .L1168+8
 9808              	.LBE1105:
 9809              	.LBE1104:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9810              		.loc 1 1158 21 view .LVU3074
 9811 1500 8548     		ldr	r0, .L1168+12
 9812              	.LBB1108:
 9813              	.LBB1106:
 146:src/keys.c    **** }
 9814              		.loc 1 146 23 view .LVU3075
 9815 1502 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9816              	.LBE1106:
 9817              	.LBE1108:
1159:src/keys.c    **** 
 9818              		.loc 1 1159 15 view .LVU3076
 9819 1504 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
1158:src/keys.c    **** 	State2.cmplx = 0;
 9820              		.loc 1 1158 21 view .LVU3077
 9821 1508 03EB8202 		add	r2, r3, r2, lsl #2
 9822              	.LBB1109:
ARM GAS  /tmp/cceb4mPP.s 			page 279


 9823              	.LBB1100:
 9824              	.LBB1097:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9825              		.loc 1 94 16 view .LVU3078
 9826 150c 4FF0000A 		mov	r10, #0
 9827              	.LVL773:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9828              		.loc 1 94 16 view .LVU3079
 9829              	.LBE1097:
 9830              	.LBE1100:
 9831              	.LBE1109:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9832              		.loc 1 1158 21 view .LVU3080
 9833 1510 30F812B0 		ldrh	fp, [r0, r2, lsl #1]
 9834              	.LBB1110:
 9835              	.LBB1101:
 9836              	.LBB1098:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9837              		.loc 1 94 16 view .LVU3081
 9838 1514 88F810A0 		strb	r10, [r8, #16]
  95:src/keys.c    **** 	return r;
 9839              		.loc 1 95 2 is_stmt 1 view .LVU3082
 9840              	.LBE1098:
 9841              	.LBE1101:
 9842              	.LBE1110:
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9843              		.loc 1 1161 5 is_stmt 0 view .LVU3083
 9844 1518 0BF47F42 		and	r2, fp, #65280
1159:src/keys.c    **** 
 9845              		.loc 1 1159 15 view .LVU3084
 9846 151c 6AF34101 		bfi	r1, r10, #1, #1
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9847              		.loc 1 1161 5 view .LVU3085
 9848 1520 B2F57F4F 		cmp	r2, #65280
1159:src/keys.c    **** 
 9849              		.loc 1 1159 15 view .LVU3086
 9850 1524 88F81510 		strb	r1, [r8, #21]
 9851              	.LBB1111:
 9852              	.LBB1102:
 9853              	.LBB1099:
  95:src/keys.c    **** 	return r;
 9854              		.loc 1 95 19 view .LVU3087
 9855 1528 88F80DA0 		strb	r10, [r8, #13]
  96:src/keys.c    **** }
 9856              		.loc 1 96 2 is_stmt 1 view .LVU3088
 9857              	.LVL774:
  96:src/keys.c    **** }
 9858              		.loc 1 96 2 is_stmt 0 view .LVU3089
 9859              	.LBE1099:
 9860              	.LBE1102:
 9861              	.LBE1111:
1157:src/keys.c    **** 	int op = op_map[lc][shift];
 9862              		.loc 1 1157 2 is_stmt 1 view .LVU3090
 9863              	.LBB1112:
 9864              	.LBI1104:
 134:src/keys.c    **** {
 9865              		.loc 1 134 12 view .LVU3091
ARM GAS  /tmp/cceb4mPP.s 			page 280


 9866              	.LBB1107:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9867              		.loc 1 136 2 view .LVU3092
 146:src/keys.c    **** }
 9868              		.loc 1 146 2 view .LVU3093
 146:src/keys.c    **** }
 9869              		.loc 1 146 2 is_stmt 0 view .LVU3094
 9870              	.LBE1107:
 9871              	.LBE1112:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9872              		.loc 1 1158 2 is_stmt 1 view .LVU3095
1159:src/keys.c    **** 
 9873              		.loc 1 1159 2 view .LVU3096
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9874              		.loc 1 1161 2 view .LVU3097
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9875              		.loc 1 1161 5 is_stmt 0 view .LVU3098
 9876 152c 00F05783 		beq	.L788
1165:src/keys.c    **** 		// HYP
 9877              		.loc 1 1165 2 is_stmt 1 view .LVU3099
1165:src/keys.c    **** 		// HYP
 9878              		.loc 1 1165 5 is_stmt 0 view .LVU3100
 9879 1530 002C     		cmp	r4, #0
 9880 1532 00F00582 		beq	.L1147
1174:src/keys.c    **** 		switch (c) {
 9881              		.loc 1 1174 2 is_stmt 1 view .LVU3101
1174:src/keys.c    **** 		switch (c) {
 9882              		.loc 1 1174 5 is_stmt 0 view .LVU3102
 9883 1536 002B     		cmp	r3, #0
 9884 1538 3FF42AA8 		beq	.L594
1175:src/keys.c    **** 		case K_CMPLX:
 9885              		.loc 1 1175 3 is_stmt 1 view .LVU3103
 9886 153c 242C     		cmp	r4, #36
 9887 153e 00F0E483 		beq	.L765
 9888 1542 2D2C     		cmp	r4, #45
 9889 1544 00F0D783 		beq	.L766
 9890 1548 1F2C     		cmp	r4, #31
 9891 154a 7FF421A8 		bne	.L594
1181:src/keys.c    **** 				if (is_bad_cmdline())
 9892              		.loc 1 1181 4 view .LVU3104
1181:src/keys.c    **** 				if (is_bad_cmdline())
 9893              		.loc 1 1181 7 is_stmt 0 view .LVU3105
 9894 154e BBF1330F 		cmp	fp, #51
 9895 1552 3FF432A9 		beq	.L1071
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9896              		.loc 1 1182 5 is_stmt 1 view .LVU3106
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9897              		.loc 1 1182 9 is_stmt 0 view .LVU3107
 9898 1556 FFF7FEFF 		bl	is_bad_cmdline
 9899              	.LVL775:
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9900              		.loc 1 1182 8 view .LVU3108
 9901 155a 0446     		mov	r4, r0
 9902 155c 0028     		cmp	r0, #0
 9903 155e 7FF42CA9 		bne	.L1071
1184:src/keys.c    **** 				State2.cmplx = 1;
 9904              		.loc 1 1184 5 is_stmt 1 view .LVU3109
ARM GAS  /tmp/cceb4mPP.s 			page 281


 9905 1562 FFF7FEFF 		bl	process_cmdline_set_lift
 9906              	.LVL776:
1185:src/keys.c    **** 				State2.test = op;
 9907              		.loc 1 1185 5 view .LVU3110
1185:src/keys.c    **** 				State2.test = op;
 9908              		.loc 1 1185 18 is_stmt 0 view .LVU3111
 9909 1566 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1186:src/keys.c    **** 			}
 9910              		.loc 1 1186 17 view .LVU3112
 9911 156a 88F80FB0 		strb	fp, [r8, #15]
1185:src/keys.c    **** 				State2.test = op;
 9912              		.loc 1 1185 18 view .LVU3113
 9913 156e 43F00203 		orr	r3, r3, #2
 9914              	.LBE1117:
 9915              	.LBE1121:
 9916              	.LBE1206:
 9917              	.LBE1262:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 9918              		.loc 1 2931 7 view .LVU3114
 9919 1572 2746     		mov	r7, r4
 9920              	.LBB1263:
 9921              	.LBB1207:
 9922              	.LBB1122:
 9923              	.LBB1118:
1185:src/keys.c    **** 				State2.test = op;
 9924              		.loc 1 1185 18 view .LVU3115
 9925 1574 88F81530 		strb	r3, [r8, #21]
1186:src/keys.c    **** 			}
 9926              		.loc 1 1186 5 is_stmt 1 view .LVU3116
1188:src/keys.c    **** 
 9927              		.loc 1 1188 11 is_stmt 0 view .LVU3117
 9928 1578 4FF0330B 		mov	fp, #51
 9929              	.LVL777:
1188:src/keys.c    **** 
 9930              		.loc 1 1188 11 view .LVU3118
 9931 157c FEF794BD 		b	.L565
 9932              	.LVL778:
 9933              	.L1109:
1188:src/keys.c    **** 
 9934              		.loc 1 1188 11 view .LVU3119
 9935              	.LBE1118:
 9936              	.LBE1122:
2895:src/keys.c    **** 		if (shift == SHIFT_H)
 9937              		.loc 1 2895 4 is_stmt 1 view .LVU3120
 9938              	.LBB1123:
 9939              	.LBI996:
 843:src/keys.c    **** 
 9940              		.loc 1 843 12 view .LVU3121
 9941              	.LBB1025:
 846:src/keys.c    **** 		// Row 1
 9942              		.loc 1 846 2 view .LVU3122
 897:src/keys.c    **** 		STATE_UNFINISHED,
 9943              		.loc 1 897 2 view .LVU3123
 904:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9944              		.loc 1 904 2 view .LVU3124
 9945              	.LBB1001:
 9946              	.LBI1001:
ARM GAS  /tmp/cceb4mPP.s 			page 282


 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9947              		.loc 1 102 13 view .LVU3125
 9948              	.LBE1001:
 9949              	.LBE1025:
 9950              	.LBE1123:
 9951              	.LBE1207:
 9952              	.LBE1263:
 103:src/keys.c    **** }
 9953              		.loc 1 103 2 view .LVU3126
 9954              	.LBB1264:
 9955              	.LBB1208:
 9956              	.LBB1124:
 9957              	.LBB1026:
 9958              	.LBB1012:
 9959              	.LBB1002:
 9960              	.LBI1002:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9961              		.loc 1 92 20 view .LVU3127
 9962              	.LBB1003:
  93:src/keys.c    **** 	State2.shifts = shift;
 9963              		.loc 1 93 2 view .LVU3128
 9964              	.LBB1004:
 9965              	.LBI1004:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9966              		.loc 1 84 13 view .LVU3129
 9967              	.LBB1005:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9968              		.loc 1 85 2 view .LVU3130
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9969              		.loc 1 85 18 is_stmt 0 view .LVU3131
 9970 1580 FFF7FEFF 		bl	shift_down
 9971              	.LVL779:
  86:src/keys.c    **** }
 9972              		.loc 1 86 2 is_stmt 1 view .LVU3132
  86:src/keys.c    **** }
 9973              		.loc 1 86 52 is_stmt 0 view .LVU3133
 9974 1584 0346     		mov	r3, r0
 9975 1586 08B9     		cbnz	r0, .L769
 9976 1588 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 9977              	.L769:
 9978              	.LVL780:
  86:src/keys.c    **** }
 9979              		.loc 1 86 52 view .LVU3134
 9980              	.LBE1005:
 9981              	.LBE1004:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9982              		.loc 1 94 2 is_stmt 1 view .LVU3135
 9983              	.LBE1003:
 9984              	.LBE1002:
 9985              	.LBE1012:
 9986              	.LBB1013:
 9987              	.LBB1014:
 146:src/keys.c    **** }
 9988              		.loc 1 146 23 is_stmt 0 view .LVU3136
 9989 158c 614A     		ldr	r2, .L1168+8
 9990              	.LBE1014:
 9991              	.LBE1013:
ARM GAS  /tmp/cceb4mPP.s 			page 283


 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9992              		.loc 1 906 21 view .LVU3137
 9993 158e DFF898C1 		ldr	ip, .L1168+28
 9994              	.LBB1017:
 9995              	.LBB1015:
 146:src/keys.c    **** }
 9996              		.loc 1 146 23 view .LVU3138
 9997 1592 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 9998              	.LBE1015:
 9999              	.LBE1017:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10000              		.loc 1 906 21 view .LVU3139
 10001 1594 4200     		lsls	r2, r0, #1
 10002 1596 022B     		cmp	r3, #2
 10003 1598 08BF     		it	eq
 10004 159a 0132     		addeq	r2, r2, #1
 10005              	.LBB1018:
 10006              	.LBB1009:
 10007              	.LBB1006:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 10008              		.loc 1 94 16 view .LVU3140
 10009 159c 0021     		movs	r1, #0
 10010              	.LBE1006:
 10011              	.LBE1009:
 10012              	.LBE1018:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10013              		.loc 1 906 21 view .LVU3141
 10014 159e 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 10015              	.LBB1019:
 10016              	.LBB1010:
 10017              	.LBB1007:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 10018              		.loc 1 94 16 view .LVU3142
 10019 15a2 88F81010 		strb	r1, [r8, #16]
  95:src/keys.c    **** 	return r;
 10020              		.loc 1 95 2 is_stmt 1 view .LVU3143
 10021 15a6 0BF4704A 		and	r10, fp, #61440
 10022              	.LVL781:
  95:src/keys.c    **** 	return r;
 10023              		.loc 1 95 2 is_stmt 0 view .LVU3144
 10024              	.LBE1007:
 10025              	.LBE1010:
 10026              	.LBE1019:
 908:src/keys.c    **** 		op &= ~NO_INT;
 10027              		.loc 1 908 5 view .LVU3145
 10028 15aa BAF5704F 		cmp	r10, #61440
 10029              	.LBB1020:
 10030              	.LBB1011:
 10031              	.LBB1008:
  95:src/keys.c    **** 	return r;
 10032              		.loc 1 95 19 view .LVU3146
 10033 15ae 88F80D10 		strb	r1, [r8, #13]
  96:src/keys.c    **** }
 10034              		.loc 1 96 2 is_stmt 1 view .LVU3147
 10035              	.LVL782:
  96:src/keys.c    **** }
 10036              		.loc 1 96 2 is_stmt 0 view .LVU3148
ARM GAS  /tmp/cceb4mPP.s 			page 284


 10037              	.LBE1008:
 10038              	.LBE1011:
 10039              	.LBE1020:
 905:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10040              		.loc 1 905 2 is_stmt 1 view .LVU3149
 10041              	.LBB1021:
 10042              	.LBI1013:
 134:src/keys.c    **** {
 10043              		.loc 1 134 12 view .LVU3150
 10044              	.LBB1016:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10045              		.loc 1 136 2 view .LVU3151
 146:src/keys.c    **** }
 10046              		.loc 1 146 2 view .LVU3152
 146:src/keys.c    **** }
 10047              		.loc 1 146 2 is_stmt 0 view .LVU3153
 10048              	.LBE1016:
 10049              	.LBE1021:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10050              		.loc 1 906 2 is_stmt 1 view .LVU3154
 907:src/keys.c    **** 	if (no_int)
 10051              		.loc 1 907 2 view .LVU3155
 908:src/keys.c    **** 		op &= ~NO_INT;
 10052              		.loc 1 908 2 view .LVU3156
 908:src/keys.c    **** 		op &= ~NO_INT;
 10053              		.loc 1 908 5 is_stmt 0 view .LVU3157
 10054 15b2 00F0D781 		beq	.L1148
 911:src/keys.c    **** 	case K00:
 10055              		.loc 1 911 2 is_stmt 1 view .LVU3158
 10056 15b6 282C     		cmp	r4, #40
 10057 15b8 27D8     		bhi	.L789
 10058 15ba DFE804F0 		tbb	[pc, r4]
 10059              	.L844:
 10060 15be 97       		.byte	(.L781-.L844)/2
 10061 15bf 15       		.byte	(.L779-.L844)/2
 10062 15c0 26       		.byte	(.L789-.L844)/2
 10063 15c1 15       		.byte	(.L779-.L844)/2
 10064 15c2 26       		.byte	(.L789-.L844)/2
 10065 15c3 26       		.byte	(.L789-.L844)/2
 10066 15c4 26       		.byte	(.L789-.L844)/2
 10067 15c5 26       		.byte	(.L789-.L844)/2
 10068 15c6 26       		.byte	(.L789-.L844)/2
 10069 15c7 26       		.byte	(.L789-.L844)/2
 10070 15c8 26       		.byte	(.L789-.L844)/2
 10071 15c9 26       		.byte	(.L789-.L844)/2
 10072 15ca 2C       		.byte	(.L778-.L844)/2
 10073 15cb 26       		.byte	(.L789-.L844)/2
 10074 15cc 26       		.byte	(.L789-.L844)/2
 10075 15cd 26       		.byte	(.L789-.L844)/2
 10076 15ce 26       		.byte	(.L789-.L844)/2
 10077 15cf 26       		.byte	(.L789-.L844)/2
 10078 15d0 7D       		.byte	(.L777-.L844)/2
 10079 15d1 63       		.byte	(.L776-.L844)/2
 10080 15d2 26       		.byte	(.L789-.L844)/2
 10081 15d3 26       		.byte	(.L789-.L844)/2
 10082 15d4 26       		.byte	(.L789-.L844)/2
 10083 15d5 26       		.byte	(.L789-.L844)/2
ARM GAS  /tmp/cceb4mPP.s 			page 285


 10084 15d6 26       		.byte	(.L789-.L844)/2
 10085 15d7 26       		.byte	(.L789-.L844)/2
 10086 15d8 26       		.byte	(.L789-.L844)/2
 10087 15d9 26       		.byte	(.L789-.L844)/2
 10088 15da 26       		.byte	(.L789-.L844)/2
 10089 15db 26       		.byte	(.L789-.L844)/2
 10090 15dc 4B       		.byte	(.L775-.L844)/2
 10091 15dd 3C       		.byte	(.L774-.L844)/2
 10092 15de 52       		.byte	(.L772-.L844)/2
 10093 15df 52       		.byte	(.L772-.L844)/2
 10094 15e0 26       		.byte	(.L789-.L844)/2
 10095 15e1 26       		.byte	(.L789-.L844)/2
 10096 15e2 26       		.byte	(.L789-.L844)/2
 10097 15e3 26       		.byte	(.L789-.L844)/2
 10098 15e4 26       		.byte	(.L789-.L844)/2
 10099 15e5 52       		.byte	(.L772-.L844)/2
 10100 15e6 52       		.byte	(.L772-.L844)/2
 10101 15e7 00       		.p2align 1
 10102              	.L779:
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10103              		.loc 1 932 4 view .LVU3159
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10104              		.loc 1 932 8 is_stmt 0 view .LVU3160
 10105 15e8 4C4A     		ldr	r2, .L1168+16
 10106 15ea 1268     		ldr	r2, [r2]
 10107 15ec 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10108              		.loc 1 932 7 view .LVU3161
 10109 15f0 D207     		lsls	r2, r2, #31
 10110 15f2 00F18280 		bmi	.L1074
 10111              	.LVL783:
 10112              	.L783:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10113              		.loc 1 991 2 is_stmt 1 view .LVU3162
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10114              		.loc 1 991 5 is_stmt 0 view .LVU3163
 10115 15f6 BAF5704F 		cmp	r10, #61440
 10116 15fa 06D1     		bne	.L789
 10117              	.L771:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10118              		.loc 1 991 13 view .LVU3164
 10119 15fc 474B     		ldr	r3, .L1168+16
 10120 15fe 1B68     		ldr	r3, [r3]
 10121 1600 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10122 1604 DB07     		lsls	r3, r3, #31
 10123 1606 3FF5D8A8 		bmi	.L1071
 10124              	.L789:
 994:src/keys.c    **** #undef NO_INT
 10125              		.loc 1 994 2 is_stmt 1 view .LVU3165
 10126              	.LVL784:
 10127              	.LBB1022:
 10128              	.LBI998:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10129              		.loc 1 619 12 view .LVU3166
 10130              	.LBB1000:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10131              		.loc 1 620 2 view .LVU3167
ARM GAS  /tmp/cceb4mPP.s 			page 286


 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10132              		.loc 1 620 6 is_stmt 0 view .LVU3168
 10133 160a 4FEA2B23 		asr	r3, fp, #8
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10134              		.loc 1 620 5 view .LVU3169
 10135 160e 012B     		cmp	r3, #1
 10136 1610 7EF4BEAF 		bne	.L594
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10137              		.loc 1 620 5 view .LVU3170
 10138 1614 ADE4     		b	.L852
 10139              	.LVL785:
 10140              	.L778:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10141              		.loc 1 620 5 view .LVU3171
 10142              	.LBE1000:
 10143              	.LBE1022:
 943:src/keys.c    **** 			if (is_bad_cmdline())
 10144              		.loc 1 943 3 is_stmt 1 view .LVU3172
 943:src/keys.c    **** 			if (is_bad_cmdline())
 10145              		.loc 1 943 6 is_stmt 0 view .LVU3173
 10146 1616 012B     		cmp	r3, #1
 10147 1618 EDD1     		bne	.L783
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 10148              		.loc 1 944 4 is_stmt 1 view .LVU3174
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 10149              		.loc 1 944 8 is_stmt 0 view .LVU3175
 10150 161a FFF7FEFF 		bl	is_bad_cmdline
 10151              	.LVL786:
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 10152              		.loc 1 944 7 view .LVU3176
 10153 161e 0028     		cmp	r0, #0
 10154 1620 7FF4CBA8 		bne	.L1071
 946:src/keys.c    **** 			State2.alphas = 1;
 10155              		.loc 1 946 4 is_stmt 1 view .LVU3177
 10156 1624 FFF7FEFF 		bl	process_cmdline_set_lift
 10157              	.LVL787:
 947:src/keys.c    **** 		}
 10158              		.loc 1 947 4 view .LVU3178
 947:src/keys.c    **** 		}
 10159              		.loc 1 947 18 is_stmt 0 view .LVU3179
 10160 1628 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10161 162c 43F00803 		orr	r3, r3, #8
 10162 1630 88F81630 		strb	r3, [r8, #22]
 10163 1634 DFE7     		b	.L783
 10164              	.LVL788:
 10165              	.L774:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10166              		.loc 1 963 3 is_stmt 1 view .LVU3180
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10167              		.loc 1 963 7 is_stmt 0 view .LVU3181
 10168 1636 FFF7FEFF 		bl	is_bad_cmdline
 10169              	.LVL789:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10170              		.loc 1 963 6 view .LVU3182
 10171 163a 0446     		mov	r4, r0
 10172              	.LVL790:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cceb4mPP.s 			page 287


 10173              		.loc 1 963 6 view .LVU3183
 10174 163c 0028     		cmp	r0, #0
 10175 163e 7FF4BCA8 		bne	.L1071
 965:src/keys.c    **** 		State2.test = op;
 10176              		.loc 1 965 3 is_stmt 1 view .LVU3184
 10177 1642 FFF7FEFF 		bl	process_cmdline_set_lift
 10178              	.LVL791:
 966:src/keys.c    **** 		return STATE_UNFINISHED;
 10179              		.loc 1 966 3 view .LVU3185
 10180              	.LBE1026:
 10181              	.LBE1124:
 10182              	.LBE1208:
 10183              	.LBE1264:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 10184              		.loc 1 2931 7 is_stmt 0 view .LVU3186
 10185 1646 2746     		mov	r7, r4
 10186              	.LBB1265:
 10187              	.LBB1209:
 10188              	.LBB1125:
 10189              	.LBB1027:
 966:src/keys.c    **** 		return STATE_UNFINISHED;
 10190              		.loc 1 966 15 view .LVU3187
 10191 1648 88F80FB0 		strb	fp, [r8, #15]
 967:src/keys.c    **** 
 10192              		.loc 1 967 3 is_stmt 1 view .LVU3188
 967:src/keys.c    **** 
 10193              		.loc 1 967 10 is_stmt 0 view .LVU3189
 10194 164c 4FF0330B 		mov	fp, #51
 10195              	.LVL792:
 967:src/keys.c    **** 
 10196              		.loc 1 967 10 view .LVU3190
 10197 1650 FEF72ABD 		b	.L565
 10198              	.LVL793:
 10199              	.L775:
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10200              		.loc 1 971 3 is_stmt 1 view .LVU3191
 10201 1654 0093     		str	r3, [sp]
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10202              		.loc 1 971 18 is_stmt 0 view .LVU3192
 10203 1656 FFF7FEFF 		bl	shift_down
 10204              	.LVL794:
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10205              		.loc 1 971 6 view .LVU3193
 10206 165a 009B     		ldr	r3, [sp]
 10207 165c 0028     		cmp	r0, #0
 10208 165e 40F05883 		bne	.L1149
 10209              	.L772:
 980:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10210              		.loc 1 980 3 is_stmt 1 view .LVU3194
 980:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10211              		.loc 1 980 6 is_stmt 0 view .LVU3195
 10212 1662 BBF59C7F 		cmp	fp, #312
 10213 1666 40F0B082 		bne	.L1150
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10214              		.loc 1 991 2 is_stmt 1 view .LVU3196
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10215              		.loc 1 991 5 is_stmt 0 view .LVU3197
ARM GAS  /tmp/cceb4mPP.s 			page 288


 10216 166a BAF5704F 		cmp	r10, #61440
 10217 166e 7FF480AC 		bne	.L852
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10218              		.loc 1 991 13 view .LVU3198
 10219 1672 2A4B     		ldr	r3, .L1168+16
 10220 1674 1B68     		ldr	r3, [r3]
 10221 1676 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10222 167a DB07     		lsls	r3, r3, #31
 10223 167c 7FF579AC 		bpl	.L852
 10224 1680 FFF79BB8 		b	.L1071
 10225              	.LVL795:
 10226              	.L776:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10227              		.loc 1 952 4 is_stmt 1 view .LVU3199
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10228              		.loc 1 952 7 is_stmt 0 view .LVU3200
 10229 1684 022B     		cmp	r3, #2
 10230 1686 B6D1     		bne	.L783
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10231              		.loc 1 952 27 view .LVU3201
 10232 1688 244B     		ldr	r3, .L1168+16
 10233              	.LVL796:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10234              		.loc 1 952 27 view .LVU3202
 10235 168a 1B68     		ldr	r3, [r3]
 10236 168c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10237 1690 DC07     		lsls	r4, r3, #31
 10238 1692 B0D5     		bpl	.L783
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10239              		.loc 1 952 45 view .LVU3203
 10240 1694 0D20     		movs	r0, #13
 10241              	.LVL797:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10242              		.loc 1 952 45 view .LVU3204
 10243 1696 FFF7FEFF 		bl	intltr
 10244              	.LVL798:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10245              		.loc 1 952 42 view .LVU3205
 10246 169a 0028     		cmp	r0, #0
 10247 169c ABD0     		beq	.L783
 10248              	.LVL799:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10249              		.loc 1 952 42 view .LVU3206
 10250              	.LBE1027:
 10251              	.LBE1125:
 10252              	.LBE1209:
 10253              	.LBE1265:
3124:src/keys.c    **** 	NonProgrammable = 0;
 10254              		.loc 1 3124 7 is_stmt 1 view .LVU3207
3124:src/keys.c    **** 	NonProgrammable = 0;
 10255              		.loc 1 3124 11 is_stmt 0 view .LVU3208
 10256 169e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3124:src/keys.c    **** 	NonProgrammable = 0;
 10257              		.loc 1 3124 10 view .LVU3209
 10258 16a2 5906     		lsls	r1, r3, #25
 10259 16a4 40F1D782 		bpl	.L884
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/cceb4mPP.s 			page 289


 10260              		.loc 1 3125 2 is_stmt 1 view .LVU3210
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10261              		.loc 1 3125 18 is_stmt 0 view .LVU3211
 10262 16a8 1D4B     		ldr	r3, .L1168+20
 10263 16aa 0022     		movs	r2, #0
 10264              	.LBB1266:
 10265              	.LBB1210:
 10266              	.LBB1126:
 10267              	.LBB1028:
 953:src/keys.c    **** 	  }
 10268              		.loc 1 953 13 view .LVU3212
 10269 16ac 4FF0120B 		mov	fp, #18
 10270              	.LBE1028:
 10271              	.LBE1126:
 10272              	.LBE1210:
 10273              	.LBE1266:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10274              		.loc 1 3125 18 view .LVU3213
 10275 16b0 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10276              		.loc 1 3126 2 is_stmt 1 view .LVU3214
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10277              		.loc 1 3126 32 is_stmt 0 view .LVU3215
 10278 16b2 5846     		mov	r0, fp
 10279 16b4 FEF7E5BF 		b	.L835
 10280              	.LVL800:
 10281              	.L777:
 10282              	.LBB1267:
 10283              	.LBB1211:
 10284              	.LBB1127:
 10285              	.LBB1029:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10286              		.loc 1 957 4 is_stmt 1 view .LVU3216
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10287              		.loc 1 957 7 is_stmt 0 view .LVU3217
 10288 16b8 022B     		cmp	r3, #2
 10289 16ba 9CD1     		bne	.L783
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10290              		.loc 1 957 27 view .LVU3218
 10291 16bc 174B     		ldr	r3, .L1168+16
 10292              	.LVL801:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10293              		.loc 1 957 27 view .LVU3219
 10294 16be 1B68     		ldr	r3, [r3]
 10295 16c0 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10296 16c4 D807     		lsls	r0, r3, #31
 10297              	.LVL802:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10298              		.loc 1 957 27 view .LVU3220
 10299 16c6 96D5     		bpl	.L783
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10300              		.loc 1 957 45 view .LVU3221
 10301 16c8 0E20     		movs	r0, #14
 10302 16ca FFF7FEFF 		bl	intltr
 10303              	.LVL803:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10304              		.loc 1 957 42 view .LVU3222
ARM GAS  /tmp/cceb4mPP.s 			page 290


 10305 16ce 0028     		cmp	r0, #0
 10306 16d0 91D0     		beq	.L783
 10307              	.LVL804:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10308              		.loc 1 957 42 view .LVU3223
 10309              	.LBE1029:
 10310              	.LBE1127:
 10311              	.LBE1211:
 10312              	.LBE1267:
3124:src/keys.c    **** 	NonProgrammable = 0;
 10313              		.loc 1 3124 7 is_stmt 1 view .LVU3224
3124:src/keys.c    **** 	NonProgrammable = 0;
 10314              		.loc 1 3124 11 is_stmt 0 view .LVU3225
 10315 16d2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3124:src/keys.c    **** 	NonProgrammable = 0;
 10316              		.loc 1 3124 10 view .LVU3226
 10317 16d6 5A06     		lsls	r2, r3, #25
 10318 16d8 40F12883 		bpl	.L885
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10319              		.loc 1 3125 2 is_stmt 1 view .LVU3227
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10320              		.loc 1 3125 18 is_stmt 0 view .LVU3228
 10321 16dc 104B     		ldr	r3, .L1168+20
 10322 16de 0022     		movs	r2, #0
 10323              	.LBB1268:
 10324              	.LBB1212:
 10325              	.LBB1128:
 10326              	.LBB1030:
 958:src/keys.c    **** 	  }
 10327              		.loc 1 958 13 view .LVU3229
 10328 16e0 4FF0130B 		mov	fp, #19
 10329              	.LBE1030:
 10330              	.LBE1128:
 10331              	.LBE1212:
 10332              	.LBE1268:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10333              		.loc 1 3125 18 view .LVU3230
 10334 16e4 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10335              		.loc 1 3126 2 is_stmt 1 view .LVU3231
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10336              		.loc 1 3126 32 is_stmt 0 view .LVU3232
 10337 16e6 5846     		mov	r0, fp
 10338 16e8 FEF7CBBF 		b	.L835
 10339              	.LVL805:
 10340              	.L781:
 10341              	.LBB1269:
 10342              	.LBB1213:
 10343              	.LBB1129:
 10344              	.LBB1031:
 913:src/keys.c    **** 	    State2.hyp = 1;
 10345              		.loc 1 913 4 is_stmt 1 view .LVU3233
 913:src/keys.c    **** 	    State2.hyp = 1;
 10346              		.loc 1 913 8 is_stmt 0 view .LVU3234
 10347 16ec 0B4A     		ldr	r2, .L1168+16
 10348 16ee 1268     		ldr	r2, [r2]
 10349 16f0 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
ARM GAS  /tmp/cceb4mPP.s 			page 291


 913:src/keys.c    **** 	    State2.hyp = 1;
 10350              		.loc 1 913 7 view .LVU3235
 10351 16f4 D107     		lsls	r1, r2, #31
 10352 16f6 40F19B82 		bpl	.L1151
 10353              	.L1074:
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10354              		.loc 1 932 20 view .LVU3236
 10355 16fa 012B     		cmp	r3, #1
 10356 16fc 00F0DA82 		beq	.L1152
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10357              		.loc 1 991 2 is_stmt 1 view .LVU3237
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10358              		.loc 1 991 5 is_stmt 0 view .LVU3238
 10359 1700 BAF5704F 		cmp	r10, #61440
 10360 1704 81D1     		bne	.L789
 10361 1706 FFF758B8 		b	.L1071
 10362              	.L1169:
 10363 170a 00BF     		.align	2
 10364              	.L1168:
 10365 170c 00000000 		.word	.LANCHOR1
 10366 1710 00000000 		.word	.LANCHOR11
 10367 1714 00000000 		.word	.LANCHOR18
 10368 1718 00000000 		.word	.LANCHOR17
 10369 171c 00000000 		.word	main_ram
 10370 1720 00000000 		.word	NonProgrammable
 10371 1724 00000000 		.word	.LANCHOR9
 10372 1728 00000000 		.word	.LANCHOR19
 10373              	.LVL806:
 10374              	.L1142:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10375              		.loc 1 991 5 view .LVU3239
 10376              	.LBE1031:
 10377              	.LBE1129:
 10378              	.LBB1130:
 10379              	.LBB765:
2685:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10380              		.loc 1 2685 50 view .LVU3240
 10381 172c 0D2C     		cmp	r4, #13
 10382 172e 7FF4FFAC 		bne	.L719
2686:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10383              		.loc 1 2686 3 is_stmt 1 view .LVU3241
 10384 1732 012B     		cmp	r3, #1
 10385 1734 14BF     		ite	ne
 10386 1736 2C20     		movne	r0, #44
 10387              	.LVL807:
2686:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10388              		.loc 1 2686 3 is_stmt 0 view .LVU3242
 10389 1738 2B20     		moveq	r0, #43
 10390 173a FFF7FEFF 		bl	set_window
 10391              	.LVL808:
2687:src/keys.c    **** 	}
 10392              		.loc 1 2687 3 is_stmt 1 view .LVU3243
 10393              	.LBB760:
 10394              	.LBI760:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10395              		.loc 1 646 13 view .LVU3244
 10396              	.LBB761:
ARM GAS  /tmp/cceb4mPP.s 			page 292


 647:src/keys.c    **** }
 10397              		.loc 1 647 2 view .LVU3245
 647:src/keys.c    **** }
 10398              		.loc 1 647 15 is_stmt 0 view .LVU3246
 10399 173e 98F81130 		ldrb	r3, [r8, #17]	@ zero_extendqisi2
 10400 1742 013B     		subs	r3, r3, #1
 10401 1744 18BF     		it	ne
 10402 1746 0123     		movne	r3, #1
 10403 1748 88F81130 		strb	r3, [r8, #17]
 10404              	.LVL809:
 647:src/keys.c    **** }
 10405              		.loc 1 647 15 view .LVU3247
 10406              	.LBE761:
 10407              	.LBE760:
2694:src/keys.c    **** 	case K_DOWN:
 10408              		.loc 1 2694 2 is_stmt 1 view .LVU3248
2694:src/keys.c    **** 	case K_DOWN:
 10409              		.loc 1 2694 2 is_stmt 0 view .LVU3249
 10410              	.LBE765:
 10411              	.LBE1130:
 10412              	.LBE1213:
 10413              	.LBE1269:
3088:src/keys.c    ****     case STATE_SST:
 10414              		.loc 1 3088 5 is_stmt 1 view .LVU3250
 10415              	.LBB1270:
 10416              	.LBB1214:
 10417              	.LBB1131:
 10418              	.LBB766:
2745:src/keys.c    **** 	}
 10419              		.loc 1 2745 10 is_stmt 0 view .LVU3251
 10420 174c 4FF0330B 		mov	fp, #51
 10421 1750 FEF7AABC 		b	.L565
 10422              	.LVL810:
 10423              	.L1139:
2745:src/keys.c    **** 	}
 10424              		.loc 1 2745 10 view .LVU3252
 10425 1754 0093     		str	r3, [sp]
2669:src/keys.c    **** 	const int g_max = global_regs();
 10426              		.loc 1 2669 33 view .LVU3253
 10427 1756 FFF7FEFF 		bl	local_regs
 10428              	.LVL811:
2669:src/keys.c    **** 	const int g_max = global_regs();
 10429              		.loc 1 2669 33 view .LVU3254
 10430 175a 009B     		ldr	r3, [sp]
 10431 175c 8146     		mov	r9, r0
 10432 175e D6E4     		b	.L711
 10433              	.LVL812:
 10434              	.L1137:
2669:src/keys.c    **** 	const int g_max = global_regs();
 10435              		.loc 1 2669 33 view .LVU3255
 10436              	.LBE766:
 10437              	.LBE1131:
 10438              	.LBB1132:
 10439              	.LBB992:
2540:src/keys.c    **** 	const int direct = State2.runmode;
 10440              		.loc 1 2540 37 view .LVU3256
 10441 1760 5046     		mov	r0, r10
ARM GAS  /tmp/cceb4mPP.s 			page 293


 10442 1762 FFF7FEFF 		bl	getprog
 10443              	.LVL813:
2540:src/keys.c    **** 	const int direct = State2.runmode;
 10444              		.loc 1 2540 63 view .LVU3257
 10445 1766 20F47062 		bic	r2, r0, #3840
 10446 176a FFF783BB 		b	.L686
 10447              	.LVL814:
 10448              	.L1141:
2540:src/keys.c    **** 	const int direct = State2.runmode;
 10449              		.loc 1 2540 63 view .LVU3258
 10450              	.LBE992:
 10451              	.LBE1132:
 10452              	.LBB1133:
 10453              	.LBB767:
 10454              	.LBB762:
2679:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10455              		.loc 1 2679 3 is_stmt 1 view .LVU3259
2679:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10456              		.loc 1 2679 19 is_stmt 0 view .LVU3260
 10457 176e B8F80810 		ldrh	r1, [r8, #8]
2679:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10458              		.loc 1 2679 27 view .LVU3261
 10459 1772 0A23     		movs	r3, #10
2679:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10460              		.loc 1 2679 32 view .LVU3262
 10461 1774 03FB01A2 		mla	r2, r3, r1, r10
2679:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10462              		.loc 1 2679 37 view .LVU3263
 10463 1778 6424     		movs	r4, #100
 10464 177a B2FBF4F3 		udiv	r3, r2, r4
 10465 177e 04FB1323 		mls	r3, r4, r3, r2
 10466              	.LVL815:
2680:src/keys.c    **** 			dv = n;
 10467              		.loc 1 2680 3 is_stmt 1 view .LVU3264
2680:src/keys.c    **** 			dv = n;
 10468              		.loc 1 2680 6 is_stmt 0 view .LVU3265
 10469 1782 4B45     		cmp	r3, r9
 10470 1784 09DA     		bge	.L717
2680:src/keys.c    **** 			dv = n;
 10471              		.loc 1 2680 21 view .LVU3266
 10472 1786 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2680:src/keys.c    **** 			dv = n;
 10473              		.loc 1 2680 17 view .LVU3267
 10474 178a D407     		lsls	r4, r2, #31
 10475 178c 3FF50DA8 		bmi	.L1059
2680:src/keys.c    **** 			dv = n;
 10476              		.loc 1 2680 36 view .LVU3268
 10477 1790 8842     		cmp	r0, r1
 10478 1792 02DD     		ble	.L717
2680:src/keys.c    **** 			dv = n;
 10479              		.loc 1 2680 63 view .LVU3269
 10480 1794 9842     		cmp	r0, r3
 10481 1796 3FF708A8 		bgt	.L1059
 10482              	.L717:
2681:src/keys.c    **** 		State2.digval = dv;
 10483              		.loc 1 2681 4 is_stmt 1 view .LVU3270
2681:src/keys.c    **** 		State2.digval = dv;
ARM GAS  /tmp/cceb4mPP.s 			page 294


 10484              		.loc 1 2681 7 is_stmt 0 view .LVU3271
 10485 179a 5346     		mov	r3, r10
 10486              	.LVL816:
2682:src/keys.c    **** 		goto reset_window;
 10487              		.loc 1 2682 3 is_stmt 1 view .LVU3272
 10488 179c FFF705B8 		b	.L1059
 10489              	.LVL817:
 10490              	.L1143:
2682:src/keys.c    **** 		goto reset_window;
 10491              		.loc 1 2682 3 is_stmt 0 view .LVU3273
 10492              	.LBE762:
2690:src/keys.c    **** 		goto reset_window;
 10493              		.loc 1 2690 3 is_stmt 1 view .LVU3274
2690:src/keys.c    **** 		goto reset_window;
 10494              		.loc 1 2690 17 is_stmt 0 view .LVU3275
 10495 17a0 A8F808A0 		strh	r10, [r8, #8]	@ movhi
2691:src/keys.c    **** 	}
 10496              		.loc 1 2691 3 is_stmt 1 view .LVU3276
 10497 17a4 FFF703B8 		b	.L715
 10498              	.LVL818:
 10499              	.L1114:
2691:src/keys.c    **** 	}
 10500              		.loc 1 2691 3 is_stmt 0 view .LVU3277
 10501              	.LBE767:
 10502              	.LBE1133:
 10503              	.LBB1134:
 10504              	.LBB732:
2368:src/keys.c    **** 				break;
 10505              		.loc 1 2368 3 is_stmt 1 view .LVU3278
2368:src/keys.c    **** 				break;
 10506              		.loc 1 2368 6 is_stmt 0 view .LVU3279
 10507 17a8 0029     		cmp	r1, #0
 10508 17aa 7EF4B9AE 		bne	.L676
2370:src/keys.c    **** 		if (State2.numdigit == 0)
 10509              		.loc 1 2370 3 is_stmt 1 view .LVU3280
 10510              	.LBB723:
 10511              	.LBI723:
2345:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10512              		.loc 1 2345 13 view .LVU3281
 10513              	.LBB724:
2347:src/keys.c    **** 	if (! State2.alphas )
 10514              		.loc 1 2347 2 view .LVU3282
2348:src/keys.c    **** 		State2.alphashift = 0;
 10515              		.loc 1 2348 6 is_stmt 0 view .LVU3283
 10516 17ae 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2347:src/keys.c    **** 	if (! State2.alphas )
 10517              		.loc 1 2347 15 view .LVU3284
 10518 17b2 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2348:src/keys.c    **** 		State2.alphashift = 0;
 10519              		.loc 1 2348 5 view .LVU3285
 10520 17b6 1807     		lsls	r0, r3, #28
2349:src/keys.c    **** }
 10521              		.loc 1 2349 21 view .LVU3286
 10522 17b8 5CBF     		itt	pl
 10523 17ba 61F30413 		bfipl	r3, r1, #4, #1
 10524 17be 88F81630 		strbpl	r3, [r8, #22]
 10525              	.LBE724:
ARM GAS  /tmp/cceb4mPP.s 			page 295


 10526              	.LBE723:
2371:src/keys.c    **** 			return STATE_UNFINISHED;
 10527              		.loc 1 2371 13 view .LVU3287
 10528 17c2 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 10529              	.LBB726:
 10530              	.LBB725:
2347:src/keys.c    **** 	if (! State2.alphas )
 10531              		.loc 1 2347 15 view .LVU3288
 10532 17c6 61F3C302 		bfi	r2, r1, #3, #1
 10533 17ca 88F81520 		strb	r2, [r8, #21]
2348:src/keys.c    **** 		State2.alphashift = 0;
 10534              		.loc 1 2348 2 is_stmt 1 view .LVU3289
2349:src/keys.c    **** }
 10535              		.loc 1 2349 3 view .LVU3290
 10536              	.LBE725:
 10537              	.LBE726:
2371:src/keys.c    **** 			return STATE_UNFINISHED;
 10538              		.loc 1 2371 3 view .LVU3291
2371:src/keys.c    **** 			return STATE_UNFINISHED;
 10539              		.loc 1 2371 6 is_stmt 0 view .LVU3292
 10540 17ce 002B     		cmp	r3, #0
 10541 17d0 3EF4F3AF 		beq	.L1071
2373:src/keys.c    **** 			State2.digval2 = 0;
 10542              		.loc 1 2373 8 is_stmt 1 view .LVU3293
2373:src/keys.c    **** 			State2.digval2 = 0;
 10543              		.loc 1 2373 11 is_stmt 0 view .LVU3294
 10544 17d4 012B     		cmp	r3, #1
2374:src/keys.c    **** 		goto fin;
 10545              		.loc 1 2374 19 view .LVU3295
 10546 17d6 4FF00003 		mov	r3, #0
2373:src/keys.c    **** 			State2.digval2 = 0;
 10547              		.loc 1 2373 11 view .LVU3296
 10548 17da 7EF4CAAE 		bne	.L678
2374:src/keys.c    **** 		goto fin;
 10549              		.loc 1 2374 4 is_stmt 1 view .LVU3297
2374:src/keys.c    **** 		goto fin;
 10550              		.loc 1 2374 19 is_stmt 0 view .LVU3298
 10551 17de 88F80A30 		strb	r3, [r8, #10]
 10552 17e2 FEF7C6BE 		b	.L678
 10553              	.L675:
2388:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10554              		.loc 1 2388 3 is_stmt 1 view .LVU3299
2388:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10555              		.loc 1 2388 6 is_stmt 0 view .LVU3300
 10556 17e6 0129     		cmp	r1, #1
 10557 17e8 66D0     		beq	.L1069
 10558              	.L681:
2380:src/keys.c    **** 			else
 10559              		.loc 1 2380 5 is_stmt 1 view .LVU3301
 10560              	.LBB727:
 10561              	.LBI727:
2345:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10562              		.loc 1 2345 13 view .LVU3302
 10563              	.LBB728:
2347:src/keys.c    **** 	if (! State2.alphas )
 10564              		.loc 1 2347 2 view .LVU3303
2347:src/keys.c    **** 	if (! State2.alphas )
ARM GAS  /tmp/cceb4mPP.s 			page 296


 10565              		.loc 1 2347 15 is_stmt 0 view .LVU3304
 10566 17ea 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2348:src/keys.c    **** 		State2.alphashift = 0;
 10567              		.loc 1 2348 6 view .LVU3305
 10568 17ee 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2347:src/keys.c    **** 	if (! State2.alphas )
 10569              		.loc 1 2347 15 view .LVU3306
 10570 17f2 6FF3C302 		bfc	r2, #3, #1
 10571 17f6 88F81520 		strb	r2, [r8, #21]
2348:src/keys.c    **** 		State2.alphashift = 0;
 10572              		.loc 1 2348 2 is_stmt 1 view .LVU3307
2348:src/keys.c    **** 		State2.alphashift = 0;
 10573              		.loc 1 2348 5 is_stmt 0 view .LVU3308
 10574 17fa 13F00802 		ands	r2, r3, #8
 10575 17fe 7EF4DCAF 		bne	.L1071
 10576              	.LVL819:
 10577              	.L1065:
2348:src/keys.c    **** 		State2.alphashift = 0;
 10578              		.loc 1 2348 5 view .LVU3309
 10579              	.LBE728:
 10580              	.LBE727:
2389:src/keys.c    **** 		else
 10581              		.loc 1 2389 22 view .LVU3310
 10582 1802 62F30413 		bfi	r3, r2, #4, #1
 10583 1806 88F81630 		strb	r3, [r8, #22]
 10584 180a FEF7D6BF 		b	.L1071
 10585              	.LVL820:
 10586              	.L674:
2378:src/keys.c    **** 			if (State2.numdigit == 0)
 10587              		.loc 1 2378 3 is_stmt 1 view .LVU3311
2378:src/keys.c    **** 			if (State2.numdigit == 0)
 10588              		.loc 1 2378 6 is_stmt 0 view .LVU3312
 10589 180e 0329     		cmp	r1, #3
 10590 1810 3EF48EAE 		beq	.L679
2379:src/keys.c    **** 				reset_multi();
 10591              		.loc 1 2379 4 is_stmt 1 view .LVU3313
2379:src/keys.c    **** 				reset_multi();
 10592              		.loc 1 2379 14 is_stmt 0 view .LVU3314
 10593 1814 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2379:src/keys.c    **** 				reset_multi();
 10594              		.loc 1 2379 7 view .LVU3315
 10595 1818 002B     		cmp	r3, #0
 10596 181a E6D0     		beq	.L681
2382:src/keys.c    **** 			return STATE_UNFINISHED;
 10597              		.loc 1 2382 5 is_stmt 1 view .LVU3316
2382:src/keys.c    **** 			return STATE_UNFINISHED;
 10598              		.loc 1 2382 20 is_stmt 0 view .LVU3317
 10599 181c 013B     		subs	r3, r3, #1
 10600 181e 88F80B30 		strb	r3, [r8, #11]
2383:src/keys.c    **** 		}
 10601              		.loc 1 2383 11 view .LVU3318
 10602 1822 4FF0330B 		mov	fp, #51
 10603 1826 FEF73FBC 		b	.L565
 10604              	.LVL821:
 10605              	.L1116:
2404:src/keys.c    **** 		State2.numdigit = 1;
 10606              		.loc 1 2404 3 is_stmt 1 view .LVU3319
ARM GAS  /tmp/cceb4mPP.s 			page 297


2405:src/keys.c    **** 		return STATE_UNFINISHED;
 10607              		.loc 1 2405 19 is_stmt 0 view .LVU3320
 10608 182a 0122     		movs	r2, #1
2404:src/keys.c    **** 		State2.numdigit = 1;
 10609              		.loc 1 2404 17 view .LVU3321
 10610 182c A8F80830 		strh	r3, [r8, #8]	@ movhi
2405:src/keys.c    **** 		return STATE_UNFINISHED;
 10611              		.loc 1 2405 3 is_stmt 1 view .LVU3322
2405:src/keys.c    **** 		return STATE_UNFINISHED;
 10612              		.loc 1 2405 19 is_stmt 0 view .LVU3323
 10613 1830 88F80B20 		strb	r2, [r8, #11]
2406:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10614              		.loc 1 2406 3 is_stmt 1 view .LVU3324
2406:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10615              		.loc 1 2406 10 is_stmt 0 view .LVU3325
 10616 1834 4FF0330B 		mov	fp, #51
 10617 1838 FEF736BC 		b	.L565
 10618              	.LVL822:
 10619              	.L866:
2406:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10620              		.loc 1 2406 10 view .LVU3326
 10621              	.LBE732:
 10622              	.LBE1134:
 10623              	.LBB1135:
 10624              	.LBB658:
 10625              	.LBB651:
 301:src/keys.c    ****     }
 10626              		.loc 1 301 14 view .LVU3327
 10627 183c 4FF0160B 		mov	fp, #22
 10628 1840 FFF756BA 		b	.L656
 10629              	.LVL823:
 10630              	.L791:
 301:src/keys.c    ****     }
 10631              		.loc 1 301 14 view .LVU3328
 10632              	.LBE651:
 10633              	.LBE658:
 10634              	.LBE1135:
 10635              	.LBB1136:
 10636              	.LBB1080:
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10637              		.loc 1 1062 3 is_stmt 1 view .LVU3329
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10638              		.loc 1 1062 7 is_stmt 0 view .LVU3330
 10639 1844 DC4B     		ldr	r3, .L1170
 10640 1846 1B68     		ldr	r3, [r3]
 10641 1848 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10642              		.loc 1 1062 6 view .LVU3331
 10643 184c D407     		lsls	r4, r2, #31
 10644 184e 2BD5     		bpl	.L794
1063:src/keys.c    **** 		else
 10645              		.loc 1 1063 4 is_stmt 1 view .LVU3332
1063:src/keys.c    **** 		else
 10646              		.loc 1 1063 57 is_stmt 0 view .LVU3333
 10647 1850 93F9E737 		ldrsb	r3, [r3, #2023]
 10648 1854 002B     		cmp	r3, #0
 10649 1856 40F2531B 		movw	fp, #339
ARM GAS  /tmp/cceb4mPP.s 			page 298


 10650 185a A8BF     		it	ge
 10651 185c 4FF4AA7B 		movge	fp, #340
 10652 1860 BEE5     		b	.L796
 10653              	.LVL824:
 10654              	.L1129:
1063:src/keys.c    **** 		else
 10655              		.loc 1 1063 57 view .LVU3334
 10656              	.LBE1080:
 10657              	.LBE1136:
 10658              	.LBB1137:
 10659              	.LBB882:
1360:src/keys.c    **** 		if (rawpc == 1)
 10660              		.loc 1 1360 3 is_stmt 1 view .LVU3335
1360:src/keys.c    **** 		if (rawpc == 1)
 10661              		.loc 1 1360 11 is_stmt 0 view .LVU3336
 10662 1862 DFF85493 		ldr	r9, .L1170
 10663 1866 D9F80030 		ldr	r3, [r9]
 10664              	.LVL825:
1360:src/keys.c    **** 		if (rawpc == 1)
 10665              		.loc 1 1360 9 view .LVU3337
 10666 186a B3F8E007 		ldrh	r0, [r3, #2016]
 10667              	.LVL826:
1361:src/keys.c    **** 			rawpc = 0;
 10668              		.loc 1 1361 3 is_stmt 1 view .LVU3338
1362:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10669              		.loc 1 1362 10 is_stmt 0 view .LVU3339
 10670 186e 0128     		cmp	r0, #1
 10671              	.LVL827:
1363:src/keys.c    **** 		update_program_bounds(1);
 10672              		.loc 1 1363 3 is_stmt 1 view .LVU3340
 10673 1870 08BF     		it	eq
 10674 1872 0020     		moveq	r0, #0
 10675              	.LVL828:
1363:src/keys.c    **** 		update_program_bounds(1);
 10676              		.loc 1 1363 3 is_stmt 0 view .LVU3341
 10677 1874 0021     		movs	r1, #0
 10678 1876 FFF7FEFF 		bl	do_dec
 10679              	.LVL829:
1363:src/keys.c    **** 		update_program_bounds(1);
 10680              		.loc 1 1363 3 view .LVU3342
 10681 187a FFF7FEFF 		bl	set_pc
 10682              	.LVL830:
1364:src/keys.c    **** 		rawpc = ProgBegin;
 10683              		.loc 1 1364 3 is_stmt 1 view .LVU3343
 10684 187e 0120     		movs	r0, #1
 10685 1880 FFF7FEFF 		bl	update_program_bounds
 10686              	.LVL831:
1365:src/keys.c    **** 		goto fin;
 10687              		.loc 1 1365 3 view .LVU3344
1365:src/keys.c    **** 		goto fin;
 10688              		.loc 1 1365 11 is_stmt 0 view .LVU3345
 10689 1884 D9F80030 		ldr	r3, [r9]
1365:src/keys.c    **** 		goto fin;
 10690              		.loc 1 1365 9 view .LVU3346
 10691 1888 B3F8EC07 		ldrh	r0, [r3, #2028]
 10692              	.LVL832:
1366:src/keys.c    **** 	}
ARM GAS  /tmp/cceb4mPP.s 			page 299


 10693              		.loc 1 1366 3 is_stmt 1 view .LVU3347
 10694 188c FFF746B9 		b	.L607
 10695              	.LVL833:
 10696              	.L1146:
1366:src/keys.c    **** 	}
 10697              		.loc 1 1366 3 is_stmt 0 view .LVU3348
 10698              	.LBE882:
 10699              	.LBE1137:
 10700              	.LBB1138:
 10701              	.LBB1081:
1092:src/keys.c    **** #undef _RARG
 10702              		.loc 1 1092 2 is_stmt 1 view .LVU3349
1092:src/keys.c    **** #undef _RARG
 10703              		.loc 1 1092 9 is_stmt 0 view .LVU3350
 10704 1890 C94B     		ldr	r3, .L1170
 10705 1892 1B68     		ldr	r3, [r3]
 10706 1894 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1092:src/keys.c    **** #undef _RARG
 10707              		.loc 1 1092 57 view .LVU3351
 10708 1898 D907     		lsls	r1, r3, #31
 10709 189a 7FF5A1AD 		bpl	.L796
 10710              	.LVL834:
1092:src/keys.c    **** #undef _RARG
 10711              		.loc 1 1092 21 view .LVU3352
 10712 189e 1AF4804F 		tst	r10, #16384
 10713 18a2 7EF48AAF 		bne	.L1071
 10714 18a6 9BE5     		b	.L796
 10715              	.LVL835:
 10716              	.L794:
1068:src/keys.c    **** #endif
 10717              		.loc 1 1068 4 is_stmt 1 view .LVU3353
1068:src/keys.c    **** #endif
 10718              		.loc 1 1068 8 is_stmt 0 view .LVU3354
 10719 18a8 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1068:src/keys.c    **** #endif
 10720              		.loc 1 1068 7 view .LVU3355
 10721 18ac 9806     		lsls	r0, r3, #26
 10722 18ae 7FF586AD 		bpl	.L793
1068:src/keys.c    **** #endif
 10723              		.loc 1 1068 29 view .LVU3356
 10724 18b2 40F24F1B 		movw	fp, #335
 10725 18b6 93E5     		b	.L796
 10726              	.LVL836:
 10727              	.L1069:
1068:src/keys.c    **** #endif
 10728              		.loc 1 1068 29 view .LVU3357
 10729              	.LBE1081:
 10730              	.LBE1138:
 10731              	.LBB1139:
 10732              	.LBB733:
2389:src/keys.c    **** 		else
 10733              		.loc 1 2389 4 is_stmt 1 view .LVU3358
2389:src/keys.c    **** 		else
 10734              		.loc 1 2389 34 is_stmt 0 view .LVU3359
 10735 18b8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10736 18bc C3F30012 		ubfx	r2, r3, #4, #1
2389:src/keys.c    **** 		else
ARM GAS  /tmp/cceb4mPP.s 			page 300


 10737              		.loc 1 2389 26 view .LVU3360
 10738 18c0 C2F10102 		rsb	r2, r2, #1
 10739 18c4 9DE7     		b	.L1065
 10740              	.LVL837:
 10741              	.L819:
2389:src/keys.c    **** 		else
 10742              		.loc 1 2389 26 view .LVU3361
 10743              	.LBE733:
 10744              	.LBE1139:
 10745              	.LBB1140:
 10746              	.LBB679:
 769:src/keys.c    **** 	case K03:
 10747              		.loc 1 769 3 is_stmt 1 view .LVU3362
 769:src/keys.c    **** 	case K03:
 10748              		.loc 1 769 10 is_stmt 0 view .LVU3363
 10749 18c6 5146     		mov	r1, r10
 10750 18c8 0120     		movs	r0, #1
 10751 18ca FFF7FEFF 		bl	check_f_key
 10752              	.LVL838:
 10753 18ce 8346     		mov	fp, r0
 10754 18d0 FEF75EBE 		b	.L594
 10755              	.L818:
 767:src/keys.c    **** 	case K01:
 10756              		.loc 1 767 3 is_stmt 1 view .LVU3364
 767:src/keys.c    **** 	case K01:
 10757              		.loc 1 767 10 is_stmt 0 view .LVU3365
 10758 18d4 5146     		mov	r1, r10
 10759 18d6 0020     		movs	r0, #0
 10760 18d8 FFF7FEFF 		bl	check_f_key
 10761              	.LVL839:
 10762 18dc 8346     		mov	fp, r0
 10763 18de FEF757BE 		b	.L594
 10764              	.LVL840:
 10765              	.L809:
 767:src/keys.c    **** 	case K01:
 10766              		.loc 1 767 10 view .LVU3366
 10767              	.LBE679:
 10768              	.LBE1140:
 10769              	.LBE1214:
 10770              	.LBE1270:
3124:src/keys.c    **** 	NonProgrammable = 0;
 10771              		.loc 1 3124 7 is_stmt 1 view .LVU3367
3124:src/keys.c    **** 	NonProgrammable = 0;
 10772              		.loc 1 3124 11 is_stmt 0 view .LVU3368
 10773 18e2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3124:src/keys.c    **** 	NonProgrammable = 0;
 10774              		.loc 1 3124 10 view .LVU3369
 10775 18e6 5906     		lsls	r1, r3, #25
 10776 18e8 40F1CC81 		bpl	.L889
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10777              		.loc 1 3125 2 is_stmt 1 view .LVU3370
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10778              		.loc 1 3125 18 is_stmt 0 view .LVU3371
 10779 18ec B34B     		ldr	r3, .L1170+4
 10780 18ee 0022     		movs	r2, #0
 10781              	.LBB1271:
 10782              	.LBB1215:
ARM GAS  /tmp/cceb4mPP.s 			page 301


 10783              	.LBB1141:
 10784              	.LBB680:
 733:src/keys.c    **** 	    }
 10785              		.loc 1 733 15 view .LVU3372
 10786 18f0 4FF00F0B 		mov	fp, #15
 10787              	.LBE680:
 10788              	.LBE1141:
 10789              	.LBE1215:
 10790              	.LBE1271:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10791              		.loc 1 3125 18 view .LVU3373
 10792 18f4 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10793              		.loc 1 3126 2 is_stmt 1 view .LVU3374
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10794              		.loc 1 3126 32 is_stmt 0 view .LVU3375
 10795 18f6 5846     		mov	r0, fp
 10796 18f8 FEF7C3BE 		b	.L835
 10797              	.LVL841:
 10798              	.L810:
3124:src/keys.c    **** 	NonProgrammable = 0;
 10799              		.loc 1 3124 7 is_stmt 1 view .LVU3376
3124:src/keys.c    **** 	NonProgrammable = 0;
 10800              		.loc 1 3124 11 is_stmt 0 view .LVU3377
 10801 18fc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3124:src/keys.c    **** 	NonProgrammable = 0;
 10802              		.loc 1 3124 10 view .LVU3378
 10803 1900 5B06     		lsls	r3, r3, #25
 10804 1902 40F13781 		bpl	.L886
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10805              		.loc 1 3125 2 is_stmt 1 view .LVU3379
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10806              		.loc 1 3125 18 is_stmt 0 view .LVU3380
 10807 1906 AD4B     		ldr	r3, .L1170+4
 10808 1908 0022     		movs	r2, #0
 10809              	.LBB1272:
 10810              	.LBB1216:
 10811              	.LBB1142:
 10812              	.LBB681:
 741:src/keys.c    **** 	    }
 10813              		.loc 1 741 15 view .LVU3381
 10814 190a 4FF0100B 		mov	fp, #16
 10815              	.LBE681:
 10816              	.LBE1142:
 10817              	.LBE1216:
 10818              	.LBE1272:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10819              		.loc 1 3125 18 view .LVU3382
 10820 190e 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10821              		.loc 1 3126 2 is_stmt 1 view .LVU3383
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10822              		.loc 1 3126 32 is_stmt 0 view .LVU3384
 10823 1910 5846     		mov	r0, fp
 10824 1912 FEF7B6BE 		b	.L835
 10825              	.LVL842:
 10826              	.L741:
ARM GAS  /tmp/cceb4mPP.s 			page 302


 10827              	.LBB1273:
 10828              	.LBB1217:
 10829              	.LBB1143:
 10830              	.LBB817:
1470:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10831              		.loc 1 1470 3 is_stmt 1 view .LVU3385
1470:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10832              		.loc 1 1470 6 is_stmt 0 view .LVU3386
 10833 1916 0128     		cmp	r0, #1
 10834 1918 7FF401AD 		bne	.L740
 10835              	.LVL843:
1470:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10836              		.loc 1 1470 6 view .LVU3387
 10837              	.LBE817:
 10838              	.LBE1143:
 10839              	.LBE1217:
 10840              	.LBE1273:
3124:src/keys.c    **** 	NonProgrammable = 0;
 10841              		.loc 1 3124 7 is_stmt 1 view .LVU3388
3124:src/keys.c    **** 	NonProgrammable = 0;
 10842              		.loc 1 3124 10 is_stmt 0 view .LVU3389
 10843 191c 5806     		lsls	r0, r3, #25
 10844              	.LVL844:
3124:src/keys.c    **** 	NonProgrammable = 0;
 10845              		.loc 1 3124 10 view .LVU3390
 10846 191e 40F19781 		bpl	.L883
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10847              		.loc 1 3125 2 is_stmt 1 view .LVU3391
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10848              		.loc 1 3125 18 is_stmt 0 view .LVU3392
 10849 1922 A64B     		ldr	r3, .L1170+4
 10850 1924 0022     		movs	r2, #0
 10851              	.LVL845:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10852              		.loc 1 3125 18 view .LVU3393
 10853 1926 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10854              		.loc 1 3126 2 is_stmt 1 view .LVU3394
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10855              		.loc 1 3126 32 is_stmt 0 view .LVU3395
 10856 1928 40F23B10 		movw	r0, #315
 10857 192c FEF7D6BD 		b	.L833
 10858              	.LVL846:
 10859              	.L662:
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10860              		.loc 1 3126 32 view .LVU3396
 10861 1930 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10862              	.LBB1274:
 10863              	.LBB1218:
 10864              	.LBB1144:
 10865              	.LBB659:
 10866              	.LBB652:
 322:src/keys.c    **** #ifndef WINGUI
 10867              		.loc 1 322 8 view .LVU3397
 10868 1934 A24B     		ldr	r3, .L1170+8
 328:src/keys.c    ****   }
 10869              		.loc 1 328 9 view .LVU3398
ARM GAS  /tmp/cceb4mPP.s 			page 303


 10870 1936 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 10871              		.loc 1 324 73 view .LVU3399
 10872 1938 4FF0020C 		mov	ip, #2
 10873 193c FEF7AEBC 		b	.L661
 10874              	.LVL847:
 10875              	.L1147:
 324:src/keys.c    **** #else
 10876              		.loc 1 324 73 view .LVU3400
 10877              	.LBE652:
 10878              	.LBE659:
 10879              	.LBE1144:
 10880              	.LBB1145:
 10881              	.LBB1119:
1167:src/keys.c    **** 		State2.hyp = 1;
 10882              		.loc 1 1167 3 is_stmt 1 view .LVU3401
 10883 1940 FFF7FEFF 		bl	process_cmdline_set_lift
 10884              	.LVL848:
1168:src/keys.c    **** 		State2.dot = op;
 10885              		.loc 1 1168 3 view .LVU3402
1169:src/keys.c    **** 		State2.cmplx = 1;
 10886              		.loc 1 1169 3 view .LVU3403
1170:src/keys.c    **** 		return STATE_UNFINISHED;
 10887              		.loc 1 1170 3 view .LVU3404
1170:src/keys.c    **** 		return STATE_UNFINISHED;
 10888              		.loc 1 1170 16 is_stmt 0 view .LVU3405
 10889 1944 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10890 1948 0BF00103 		and	r3, fp, #1
 10891 194c 9B01     		lsls	r3, r3, #6
 10892 194e 43F02203 		orr	r3, r3, #34
 10893 1952 22F06202 		bic	r2, r2, #98
 10894 1956 1343     		orrs	r3, r3, r2
 10895 1958 88F81530 		strb	r3, [r8, #21]
1171:src/keys.c    **** 	}
 10896              		.loc 1 1171 3 is_stmt 1 view .LVU3406
1171:src/keys.c    **** 	}
 10897              		.loc 1 1171 10 is_stmt 0 view .LVU3407
 10898 195c 4FF0330B 		mov	fp, #51
 10899              	.LVL849:
1171:src/keys.c    **** 	}
 10900              		.loc 1 1171 10 view .LVU3408
 10901 1960 FEF7A2BB 		b	.L565
 10902              	.LVL850:
 10903              	.L1148:
1171:src/keys.c    **** 	}
 10904              		.loc 1 1171 10 view .LVU3409
 10905              	.LBE1119:
 10906              	.LBE1145:
 10907              	.LBB1146:
 10908              	.LBB1032:
 909:src/keys.c    **** 
 10909              		.loc 1 909 3 is_stmt 1 view .LVU3410
 909:src/keys.c    **** 
 10910              		.loc 1 909 6 is_stmt 0 view .LVU3411
 10911 1964 2BF4704B 		bic	fp, fp, #61440
 10912              	.LVL851:
 911:src/keys.c    **** 	case K00:
ARM GAS  /tmp/cceb4mPP.s 			page 304


 10913              		.loc 1 911 2 is_stmt 1 view .LVU3412
 10914 1968 282C     		cmp	r4, #40
 10915 196a 3FF647AE 		bhi	.L771
 10916 196e 01A2     		adr	r2, .L773
 10917 1970 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 10918              		.p2align 2
 10919              	.L773:
 10920 1974 ED160000 		.word	.L781+1
 10921 1978 E9150000 		.word	.L779+1
 10922 197c FD150000 		.word	.L771+1
 10923 1980 E9150000 		.word	.L779+1
 10924 1984 FD150000 		.word	.L771+1
 10925 1988 FD150000 		.word	.L771+1
 10926 198c FD150000 		.word	.L771+1
 10927 1990 FD150000 		.word	.L771+1
 10928 1994 FD150000 		.word	.L771+1
 10929 1998 FD150000 		.word	.L771+1
 10930 199c FD150000 		.word	.L771+1
 10931 19a0 FD150000 		.word	.L771+1
 10932 19a4 17160000 		.word	.L778+1
 10933 19a8 FD150000 		.word	.L771+1
 10934 19ac FD150000 		.word	.L771+1
 10935 19b0 FD150000 		.word	.L771+1
 10936 19b4 FD150000 		.word	.L771+1
 10937 19b8 FD150000 		.word	.L771+1
 10938 19bc B9160000 		.word	.L777+1
 10939 19c0 85160000 		.word	.L776+1
 10940 19c4 FD150000 		.word	.L771+1
 10941 19c8 FD150000 		.word	.L771+1
 10942 19cc FD150000 		.word	.L771+1
 10943 19d0 FD150000 		.word	.L771+1
 10944 19d4 FD150000 		.word	.L771+1
 10945 19d8 FD150000 		.word	.L771+1
 10946 19dc FD150000 		.word	.L771+1
 10947 19e0 FD150000 		.word	.L771+1
 10948 19e4 FD150000 		.word	.L771+1
 10949 19e8 FD150000 		.word	.L771+1
 10950 19ec 55160000 		.word	.L775+1
 10951 19f0 37160000 		.word	.L774+1
 10952 19f4 63160000 		.word	.L772+1
 10953 19f8 63160000 		.word	.L772+1
 10954 19fc FD150000 		.word	.L771+1
 10955 1a00 FD150000 		.word	.L771+1
 10956 1a04 FD150000 		.word	.L771+1
 10957 1a08 FD150000 		.word	.L771+1
 10958 1a0c FD150000 		.word	.L771+1
 10959 1a10 63160000 		.word	.L772+1
 10960 1a14 63160000 		.word	.L772+1
 10961              	.LVL852:
 10962              		.p2align 1
 10963              	.L1117:
 911:src/keys.c    **** 	case K00:
 10964              		.loc 1 911 2 is_stmt 0 view .LVU3413
 10965              	.LBE1032:
 10966              	.LBE1146:
 10967              	.LBB1147:
 10968              	.LBB734:
ARM GAS  /tmp/cceb4mPP.s 			page 305


2408:src/keys.c    **** 		State2.numdigit = 2;
 10969              		.loc 1 2408 3 is_stmt 1 view .LVU3414
2409:src/keys.c    **** 		return STATE_UNFINISHED;
 10970              		.loc 1 2409 19 is_stmt 0 view .LVU3415
 10971 1a18 0222     		movs	r2, #2
2408:src/keys.c    **** 		State2.numdigit = 2;
 10972              		.loc 1 2408 18 view .LVU3416
 10973 1a1a 88F80A30 		strb	r3, [r8, #10]
2409:src/keys.c    **** 		return STATE_UNFINISHED;
 10974              		.loc 1 2409 3 is_stmt 1 view .LVU3417
2409:src/keys.c    **** 		return STATE_UNFINISHED;
 10975              		.loc 1 2409 19 is_stmt 0 view .LVU3418
 10976 1a1e 88F80B20 		strb	r2, [r8, #11]
2410:src/keys.c    **** 	}
 10977              		.loc 1 2410 3 is_stmt 1 view .LVU3419
2410:src/keys.c    **** 	}
 10978              		.loc 1 2410 10 is_stmt 0 view .LVU3420
 10979 1a22 4FF0330B 		mov	fp, #51
 10980 1a26 FEF73FBB 		b	.L565
 10981              	.LVL853:
 10982              	.L1138:
2410:src/keys.c    **** 	}
 10983              		.loc 1 2410 10 view .LVU3421
 10984              	.LBE734:
 10985              	.LBE1147:
 10986              	.LBB1148:
 10987              	.LBB993:
2547:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10988              		.loc 1 2547 3 is_stmt 1 view .LVU3422
2547:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10989              		.loc 1 2547 8 is_stmt 0 view .LVU3423
 10990 1a2a 4FEA8B34 		lsl	r4, fp, #14
2547:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10991              		.loc 1 2547 6 view .LVU3424
 10992 1a2e 44F00104 		orr	r4, r4, #1
 10993              	.LVL854:
2548:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10994              		.loc 1 2548 3 is_stmt 1 view .LVU3425
2548:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10995              		.loc 1 2548 9 is_stmt 0 view .LVU3426
 10996 1a32 2046     		mov	r0, r4
 10997 1a34 FFF7FEFF 		bl	is_label_or_end_at
 10998              	.LVL855:
2548:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10999              		.loc 1 2548 6 view .LVU3427
 11000 1a38 0246     		mov	r2, r0
 11001 1a3a 0028     		cmp	r0, #0
 11002 1a3c 00F03481 		beq	.L1153
 11003              	.L689:
2550:src/keys.c    **** 		return STATE_UNFINISHED;
 11004              		.loc 1 2550 3 is_stmt 1 view .LVU3428
2550:src/keys.c    **** 		return STATE_UNFINISHED;
 11005              		.loc 1 2550 17 is_stmt 0 view .LVU3429
 11006 1a40 A8F80840 		strh	r4, [r8, #8]	@ movhi
2551:src/keys.c    **** 	}
 11007              		.loc 1 2551 3 is_stmt 1 view .LVU3430
2551:src/keys.c    **** 	}
ARM GAS  /tmp/cceb4mPP.s 			page 306


 11008              		.loc 1 2551 10 is_stmt 0 view .LVU3431
 11009 1a44 4FF0330B 		mov	fp, #51
 11010              	.LVL856:
2551:src/keys.c    **** 	}
 11011              		.loc 1 2551 10 view .LVU3432
 11012 1a48 FEF72EBB 		b	.L565
 11013              	.LVL857:
 11014              	.L1140:
2551:src/keys.c    **** 	}
 11015              		.loc 1 2551 10 view .LVU3433
 11016              	.LBE993:
 11017              	.LBE1148:
 11018              	.LBB1149:
 11019              	.LBB768:
2673:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11020              		.loc 1 2673 3 is_stmt 1 view .LVU3434
2673:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11021              		.loc 1 2673 7 is_stmt 0 view .LVU3435
 11022 1a4c FFF7FEFF 		bl	local_regs
 11023              	.LVL858:
2673:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11024              		.loc 1 2673 6 view .LVU3436
 11025 1a50 68B1     		cbz	r0, .L713
2674:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11026              		.loc 1 2674 4 is_stmt 1 view .LVU3437
2674:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11027              		.loc 1 2674 19 is_stmt 0 view .LVU3438
 11028 1a52 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2674:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11029              		.loc 1 2674 34 view .LVU3439
 11030 1a56 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2674:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11031              		.loc 1 2674 19 view .LVU3440
 11032 1a5a 03F00101 		and	r1, r3, #1
2674:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11033              		.loc 1 2674 34 view .LVU3441
 11034 1a5e 0A43     		orrs	r2, r1, r2
 11035 1a60 0CBF     		ite	eq
 11036 1a62 0122     		moveq	r2, #1
 11037 1a64 0022     		movne	r2, #0
2674:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11038              		.loc 1 2674 17 view .LVU3442
 11039 1a66 62F30003 		bfi	r3, r2, #0, #1
 11040 1a6a 88F81630 		strb	r3, [r8, #22]
 11041              	.L713:
2675:src/keys.c    **** 		goto reset_window;
 11042              		.loc 1 2675 3 is_stmt 1 view .LVU3443
2675:src/keys.c    **** 		goto reset_window;
 11043              		.loc 1 2675 32 is_stmt 0 view .LVU3444
 11044 1a6e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2675:src/keys.c    **** 		goto reset_window;
 11045              		.loc 1 2675 17 view .LVU3445
 11046 1a72 13F0010F 		tst	r3, #1
 11047 1a76 14BF     		ite	ne
 11048 1a78 0023     		movne	r3, #0
 11049 1a7a 6423     		moveq	r3, #100
 11050 1a7c A8F80830 		strh	r3, [r8, #8]	@ movhi
ARM GAS  /tmp/cceb4mPP.s 			page 307


2676:src/keys.c    **** 	}
 11051              		.loc 1 2676 3 is_stmt 1 view .LVU3446
 11052 1a80 FEF795BE 		b	.L715
 11053              	.LVL859:
 11054              	.L747:
2676:src/keys.c    **** 	}
 11055              		.loc 1 2676 3 is_stmt 0 view .LVU3447
 11056              	.LBE768:
 11057              	.LBE1149:
 11058              	.LBB1150:
 11059              	.LBB818:
1415:src/keys.c    **** 			break;
 11060              		.loc 1 1415 3 is_stmt 1 view .LVU3448
1415:src/keys.c    **** 			break;
 11061              		.loc 1 1415 24 is_stmt 0 view .LVU3449
 11062 1a84 811E     		subs	r1, r0, #2
1415:src/keys.c    **** 			break;
 11063              		.loc 1 1415 6 view .LVU3450
 11064 1a86 C9B2     		uxtb	r1, r1
 11065 1a88 0129     		cmp	r1, #1
 11066 1a8a 7FF648AC 		bls	.L740
1417:src/keys.c    **** 			State2.multi = 1;
 11067              		.loc 1 1417 3 is_stmt 1 view .LVU3451
1417:src/keys.c    **** 			State2.multi = 1;
 11068              		.loc 1 1417 6 is_stmt 0 view .LVU3452
 11069 1a8e 0128     		cmp	r0, #1
 11070 1a90 03D1     		bne	.L751
1417:src/keys.c    **** 			State2.multi = 1;
 11071              		.loc 1 1417 24 view .LVU3453
 11072 1a92 13F04002 		ands	r2, r3, #64
 11073              	.LVL860:
1417:src/keys.c    **** 			State2.multi = 1;
 11074              		.loc 1 1417 24 view .LVU3454
 11075 1a96 00F0F880 		beq	.L1154
 11076              	.L751:
1423:src/keys.c    **** 		State2.alphashift = 0;
 11077              		.loc 1 1423 3 is_stmt 1 view .LVU3455
1424:src/keys.c    **** 		return op;
 11078              		.loc 1 1424 3 view .LVU3456
1423:src/keys.c    **** 		State2.alphashift = 0;
 11079              		.loc 1 1423 17 is_stmt 0 view .LVU3457
 11080 1a9a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11081 1a9e 23F01803 		bic	r3, r3, #24
 11082 1aa2 88F81630 		strb	r3, [r8, #22]
1425:src/keys.c    **** 
 11083              		.loc 1 1425 3 is_stmt 1 view .LVU3458
1425:src/keys.c    **** 
 11084              		.loc 1 1425 10 is_stmt 0 view .LVU3459
 11085 1aa6 4FF0330B 		mov	fp, #51
 11086 1aaa FEF7FDBA 		b	.L565
 11087              	.LVL861:
 11088              	.L748:
1405:src/keys.c    **** 			init_arg(RARG_ARCL);
 11089              		.loc 1 1405 3 is_stmt 1 view .LVU3460
1405:src/keys.c    **** 			init_arg(RARG_ARCL);
 11090              		.loc 1 1405 6 is_stmt 0 view .LVU3461
 11091 1aae 0128     		cmp	r0, #1
ARM GAS  /tmp/cceb4mPP.s 			page 308


 11092 1ab0 52D0     		beq	.L1155
1408:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11093              		.loc 1 1408 10 is_stmt 1 view .LVU3462
1408:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11094              		.loc 1 1408 13 is_stmt 0 view .LVU3463
 11095 1ab2 0328     		cmp	r0, #3
 11096 1ab4 7FF433AC 		bne	.L740
1409:src/keys.c    **** 			return STATE_UNFINISHED;
 11097              		.loc 1 1409 4 is_stmt 1 view .LVU3464
 11098              	.LVL862:
 11099              	.LBB802:
 11100              	.LBI802:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11101              		.loc 1 501 13 view .LVU3465
 11102              	.LBB803:
 502:src/keys.c    **** 		return;
 11103              		.loc 1 502 2 view .LVU3466
 502:src/keys.c    **** 		return;
 11104              		.loc 1 502 6 is_stmt 0 view .LVU3467
 11105 1ab8 FFF7FEFF 		bl	is_bad_cmdline
 11106              	.LVL863:
 502:src/keys.c    **** 		return;
 11107              		.loc 1 502 5 view .LVU3468
 11108 1abc 0346     		mov	r3, r0
 11109 1abe 0028     		cmp	r0, #0
 11110 1ac0 7EF47BAE 		bne	.L1071
 11111 1ac4 7320     		movs	r0, #115
 11112              	.LBE803:
 11113              	.LBE802:
 11114              	.LBE818:
 11115              	.LBE1150:
 11116              	.LBE1218:
 11117              	.LBE1274:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 11118              		.loc 1 2931 7 view .LVU3469
 11119 1ac6 1F46     		mov	r7, r3
 11120              	.LBB1275:
 11121              	.LBB1219:
 11122              	.LBB1151:
 11123              	.LBB819:
1410:src/keys.c    **** 		}
 11124              		.loc 1 1410 11 view .LVU3470
 11125 1ac8 4FF0330B 		mov	fp, #51
 11126              	.LBB805:
 11127              	.LBB804:
 11128 1acc FFF7FEFF 		bl	init_arg.part.0
 11129              	.LVL864:
 11130 1ad0 FEF7EABA 		b	.L565
 11131              	.LVL865:
 11132              	.L749:
1410:src/keys.c    **** 		}
 11133              		.loc 1 1410 11 view .LVU3471
 11134              	.LBE804:
 11135              	.LBE805:
1398:src/keys.c    **** 			init_arg(RARG_ASTO);
 11136              		.loc 1 1398 3 is_stmt 1 view .LVU3472
1398:src/keys.c    **** 			init_arg(RARG_ASTO);
ARM GAS  /tmp/cceb4mPP.s 			page 309


 11137              		.loc 1 1398 6 is_stmt 0 view .LVU3473
 11138 1ad4 0128     		cmp	r0, #1
 11139 1ad6 7FF422AC 		bne	.L740
1399:src/keys.c    **** 			return STATE_UNFINISHED;
 11140              		.loc 1 1399 4 is_stmt 1 view .LVU3474
 11141              	.LVL866:
 11142              	.LBB806:
 11143              	.LBI806:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11144              		.loc 1 501 13 view .LVU3475
 11145              	.LBB807:
 502:src/keys.c    **** 		return;
 11146              		.loc 1 502 2 view .LVU3476
 502:src/keys.c    **** 		return;
 11147              		.loc 1 502 6 is_stmt 0 view .LVU3477
 11148 1ada FFF7FEFF 		bl	is_bad_cmdline
 11149              	.LVL867:
 502:src/keys.c    **** 		return;
 11150              		.loc 1 502 5 view .LVU3478
 11151 1ade 0346     		mov	r3, r0
 11152 1ae0 0028     		cmp	r0, #0
 11153 1ae2 7EF46AAE 		bne	.L1071
 11154 1ae6 2620     		movs	r0, #38
 11155              	.LBE807:
 11156              	.LBE806:
 11157              	.LBE819:
 11158              	.LBE1151:
 11159              	.LBE1219:
 11160              	.LBE1275:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 11161              		.loc 1 2931 7 view .LVU3479
 11162 1ae8 1F46     		mov	r7, r3
 11163              	.LBB1276:
 11164              	.LBB1220:
 11165              	.LBB1152:
 11166              	.LBB820:
1400:src/keys.c    **** 		}
 11167              		.loc 1 1400 11 view .LVU3480
 11168 1aea 4FF0330B 		mov	fp, #51
 11169              	.LBB809:
 11170              	.LBB808:
 11171 1aee FFF7FEFF 		bl	init_arg.part.0
 11172              	.LVL868:
 11173 1af2 FEF7D9BA 		b	.L565
 11174              	.LVL869:
 11175              	.L744:
1400:src/keys.c    **** 		}
 11176              		.loc 1 1400 11 view .LVU3481
 11177              	.LBE808:
 11178              	.LBE809:
1449:src/keys.c    **** 			if ( State2.runmode ) {
 11179              		.loc 1 1449 3 is_stmt 1 view .LVU3482
1449:src/keys.c    **** 			if ( State2.runmode ) {
 11180              		.loc 1 1449 6 is_stmt 0 view .LVU3483
 11181 1af6 0028     		cmp	r0, #0
 11182 1af8 7FF411AC 		bne	.L740
1450:src/keys.c    **** 				// Alpha scroll right
ARM GAS  /tmp/cceb4mPP.s 			page 310


 11183              		.loc 1 1450 4 is_stmt 1 view .LVU3484
1450:src/keys.c    **** 				// Alpha scroll right
 11184              		.loc 1 1450 7 is_stmt 0 view .LVU3485
 11185 1afc 5806     		lsls	r0, r3, #25
 11186              	.LVL870:
1450:src/keys.c    **** 				// Alpha scroll right
 11187              		.loc 1 1450 7 view .LVU3486
 11188 1afe 7EF573AD 		bpl	.L757
1452:src/keys.c    **** 					State2.alpha_pos = alpha_pos-1;
 11189              		.loc 1 1452 5 is_stmt 1 view .LVU3487
1452:src/keys.c    **** 					State2.alpha_pos = alpha_pos-1;
 11190              		.loc 1 1452 8 is_stmt 0 view .LVU3488
 11191 1b02 B9F1000F 		cmp	r9, #0
 11192 1b06 3EF458AE 		beq	.L1071
1453:src/keys.c    **** 				return STATE_UNFINISHED;
 11193              		.loc 1 1453 6 is_stmt 1 view .LVU3489
1453:src/keys.c    **** 				return STATE_UNFINISHED;
 11194              		.loc 1 1453 34 is_stmt 0 view .LVU3490
 11195 1b0a 09F1FF39 		add	r9, r9, #-1
 11196              	.LVL871:
 11197              	.L1070:
1453:src/keys.c    **** 				return STATE_UNFINISHED;
 11198              		.loc 1 1453 23 view .LVU3491
 11199 1b0e 88F80D90 		strb	r9, [r8, #13]
 11200 1b12 FEF752BE 		b	.L1071
 11201              	.LVL872:
 11202              	.L745:
1435:src/keys.c    **** 			if ( State2.runmode ) {
 11203              		.loc 1 1435 3 is_stmt 1 view .LVU3492
1435:src/keys.c    **** 			if ( State2.runmode ) {
 11204              		.loc 1 1435 6 is_stmt 0 view .LVU3493
 11205 1b16 0028     		cmp	r0, #0
 11206 1b18 7FF401AC 		bne	.L740
1436:src/keys.c    **** 				// Alpha scroll left
 11207              		.loc 1 1436 4 is_stmt 1 view .LVU3494
1436:src/keys.c    **** 				// Alpha scroll left
 11208              		.loc 1 1436 7 is_stmt 0 view .LVU3495
 11209 1b1c 5C06     		lsls	r4, r3, #25
 11210 1b1e 7EF55CAD 		bpl	.L755
1439:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
 11211              		.loc 1 1439 5 is_stmt 1 view .LVU3496
 11212              	.LVL873:
1440:src/keys.c    **** 				//	print_debug(101,State2.alpha_pos);
 11213              		.loc 1 1440 5 view .LVU3497
1440:src/keys.c    **** 				//	print_debug(101,State2.alpha_pos);
 11214              		.loc 1 1440 32 is_stmt 0 view .LVU3498
 11215 1b22 FFF7FEFF 		bl	alen
 11216              	.LVL874:
1439:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
 11217              		.loc 1 1439 7 view .LVU3499
 11218 1b26 09F10102 		add	r2, r9, #1
 11219              	.LVL875:
1440:src/keys.c    **** 				//	print_debug(101,State2.alpha_pos);
 11220              		.loc 1 1440 39 view .LVU3500
 11221 1b2a 0530     		adds	r0, r0, #5
1440:src/keys.c    **** 				//	print_debug(101,State2.alpha_pos);
 11222              		.loc 1 1440 45 view .LVU3501
ARM GAS  /tmp/cceb4mPP.s 			page 311


 11223 1b2c 0623     		movs	r3, #6
 11224 1b2e B0FBF3F3 		udiv	r3, r0, r3
1440:src/keys.c    **** 				//	print_debug(101,State2.alpha_pos);
 11225              		.loc 1 1440 22 view .LVU3502
 11226 1b32 9A42     		cmp	r2, r3
 11227 1b34 EBD2     		bcs	.L1070
 11228 1b36 5FFA82F9 		uxtb	r9, r2
 11229              	.LVL876:
1440:src/keys.c    **** 				//	print_debug(101,State2.alpha_pos);
 11230              		.loc 1 1440 22 view .LVU3503
 11231 1b3a E8E7     		b	.L1070
 11232              	.LVL877:
 11233              	.L743:
1461:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11234              		.loc 1 1461 3 is_stmt 1 view .LVU3504
1461:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11235              		.loc 1 1461 6 is_stmt 0 view .LVU3505
 11236 1b3c 0128     		cmp	r0, #1
 11237 1b3e 3FF4BBAE 		beq	.L1069
1463:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11238              		.loc 1 1463 8 is_stmt 1 view .LVU3506
1463:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11239              		.loc 1 1463 11 is_stmt 0 view .LVU3507
 11240 1b42 0328     		cmp	r0, #3
 11241 1b44 20D0     		beq	.L759
1465:src/keys.c    **** 			init_state();
 11242              		.loc 1 1465 8 is_stmt 1 view .LVU3508
1465:src/keys.c    **** 			init_state();
 11243              		.loc 1 1465 11 is_stmt 0 view .LVU3509
 11244 1b46 0028     		cmp	r0, #0
 11245 1b48 7EF437AE 		bne	.L1071
1466:src/keys.c    **** 		return STATE_UNFINISHED;
 11246              		.loc 1 1466 4 is_stmt 1 view .LVU3510
 11247 1b4c FFF7FEFF 		bl	init_state
 11248              	.LVL878:
1467:src/keys.c    **** 
 11249              		.loc 1 1467 10 is_stmt 0 view .LVU3511
 11250 1b50 4FF0330B 		mov	fp, #51
 11251 1b54 FEF7A8BA 		b	.L565
 11252              	.LVL879:
 11253              	.L1155:
1406:src/keys.c    **** 			return STATE_UNFINISHED;
 11254              		.loc 1 1406 4 is_stmt 1 view .LVU3512
 11255              	.LBB810:
 11256              	.LBI810:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11257              		.loc 1 501 13 view .LVU3513
 11258              	.LBB811:
 502:src/keys.c    **** 		return;
 11259              		.loc 1 502 2 view .LVU3514
 502:src/keys.c    **** 		return;
 11260              		.loc 1 502 6 is_stmt 0 view .LVU3515
 11261 1b58 FFF7FEFF 		bl	is_bad_cmdline
 11262              	.LVL880:
 502:src/keys.c    **** 		return;
 11263              		.loc 1 502 5 view .LVU3516
 11264 1b5c 0346     		mov	r3, r0
ARM GAS  /tmp/cceb4mPP.s 			page 312


 11265 1b5e 0028     		cmp	r0, #0
 11266 1b60 7EF42BAE 		bne	.L1071
 11267 1b64 2720     		movs	r0, #39
 11268              	.LBE811:
 11269              	.LBE810:
 11270              	.LBE820:
 11271              	.LBE1152:
 11272              	.LBE1220:
 11273              	.LBE1276:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 11274              		.loc 1 2931 7 view .LVU3517
 11275 1b66 1F46     		mov	r7, r3
 11276              	.LBB1277:
 11277              	.LBB1221:
 11278              	.LBB1153:
 11279              	.LBB821:
1407:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11280              		.loc 1 1407 11 view .LVU3518
 11281 1b68 4FF0330B 		mov	fp, #51
 11282              	.LBB813:
 11283              	.LBB812:
 11284 1b6c FFF7FEFF 		bl	init_arg.part.0
 11285              	.LVL881:
 11286 1b70 FEF79ABA 		b	.L565
 11287              	.LVL882:
 11288              	.L886:
1407:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11289              		.loc 1 1407 11 view .LVU3519
 11290              	.LBE812:
 11291              	.LBE813:
 11292              	.LBE821:
 11293              	.LBE1153:
 11294              	.LBB1154:
 11295              	.LBB682:
 741:src/keys.c    **** 	    }
 11296              		.loc 1 741 15 view .LVU3520
 11297 1b74 4FF0100B 		mov	fp, #16
 11298              	.LVL883:
 11299              	.L834:
 741:src/keys.c    **** 	    }
 11300              		.loc 1 741 15 view .LVU3521
 11301              	.LBE682:
 11302              	.LBE1154:
 11303              	.LBE1221:
 11304              	.LBE1277:
3124:src/keys.c    **** 	NonProgrammable = 0;
 11305              		.loc 1 3124 26 view .LVU3522
 11306 1b78 104B     		ldr	r3, .L1170+4
 11307 1b7a 1A68     		ldr	r2, [r3]
 11308 1b7c 6AB1     		cbz	r2, .L1061
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11309              		.loc 1 3125 2 is_stmt 1 view .LVU3523
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11310              		.loc 1 3125 18 is_stmt 0 view .LVU3524
 11311 1b7e 0022     		movs	r2, #0
 11312 1b80 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/cceb4mPP.s 			page 313


 11313              		.loc 1 3126 2 is_stmt 1 view .LVU3525
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11314              		.loc 1 3126 32 is_stmt 0 view .LVU3526
 11315 1b82 5846     		mov	r0, fp
 11316 1b84 FEF77DBD 		b	.L835
 11317              	.LVL884:
 11318              	.L759:
3124:src/keys.c    **** 	NonProgrammable = 0;
 11319              		.loc 1 3124 7 is_stmt 1 view .LVU3527
3124:src/keys.c    **** 	NonProgrammable = 0;
 11320              		.loc 1 3124 10 is_stmt 0 view .LVU3528
 11321 1b88 5B06     		lsls	r3, r3, #25
 11322 1b8a 09D5     		bpl	.L891
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11323              		.loc 1 3125 2 is_stmt 1 view .LVU3529
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11324              		.loc 1 3125 18 is_stmt 0 view .LVU3530
 11325 1b8c 0B4B     		ldr	r3, .L1170+4
 11326 1b8e 0022     		movs	r2, #0
 11327              	.LVL885:
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11328              		.loc 1 3125 18 view .LVU3531
 11329 1b90 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11330              		.loc 1 3126 2 is_stmt 1 view .LVU3532
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11331              		.loc 1 3126 32 is_stmt 0 view .LVU3533
 11332 1b92 4FF48170 		mov	r0, #258
 11333              	.LVL886:
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11334              		.loc 1 3126 32 view .LVU3534
 11335 1b96 FEF7A1BC 		b	.L833
 11336              	.LVL887:
 11337              	.L1061:
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11338              		.loc 1 3126 32 view .LVU3535
 11339 1b9a 5846     		mov	r0, fp
 11340 1b9c FEF7A5BE 		b	.L838
 11341              	.LVL888:
 11342              	.L891:
 11343              	.LBB1278:
 11344              	.LBB1222:
 11345              	.LBB1155:
 11346              	.LBB822:
1464:src/keys.c    **** 		else if (shift == SHIFT_N)
 11347              		.loc 1 1464 11 view .LVU3536
 11348 1ba0 4FF4817B 		mov	fp, #258
 11349              	.LVL889:
 11350              	.L832:
1464:src/keys.c    **** 		else if (shift == SHIFT_N)
 11351              		.loc 1 1464 11 view .LVU3537
 11352              	.LBE822:
 11353              	.LBE1155:
 11354              	.LBE1222:
 11355              	.LBE1278:
3124:src/keys.c    **** 	NonProgrammable = 0;
 11356              		.loc 1 3124 26 view .LVU3538
ARM GAS  /tmp/cceb4mPP.s 			page 314


 11357 1ba4 054B     		ldr	r3, .L1170+4
 11358 1ba6 1A68     		ldr	r2, [r3]
 11359 1ba8 002A     		cmp	r2, #0
 11360 1baa F6D0     		beq	.L1061
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11361              		.loc 1 3125 2 is_stmt 1 view .LVU3539
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11362              		.loc 1 3125 18 is_stmt 0 view .LVU3540
 11363 1bac 0022     		movs	r2, #0
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11364              		.loc 1 3126 32 view .LVU3541
 11365 1bae 5846     		mov	r0, fp
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11366              		.loc 1 3125 18 view .LVU3542
 11367 1bb0 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11368              		.loc 1 3126 2 is_stmt 1 view .LVU3543
 11369 1bb2 FEF793BC 		b	.L833
 11370              	.L1171:
 11371 1bb6 00BF     		.align	2
 11372              	.L1170:
 11373 1bb8 00000000 		.word	main_ram
 11374 1bbc 00000000 		.word	NonProgrammable
 11375 1bc0 00000000 		.word	.LANCHOR11
 11376              	.LVL890:
 11377              	.L888:
 11378              	.LBB1279:
 11379              	.LBB1223:
 11380              	.LBB1156:
 11381              	.LBB683:
 757:src/keys.c    **** 	    }
 11382              		.loc 1 757 15 is_stmt 0 view .LVU3544
 11383 1bc4 4FF0140B 		mov	fp, #20
 11384 1bc8 D6E7     		b	.L834
 11385              	.LVL891:
 11386              	.L1150:
 757:src/keys.c    **** 	    }
 11387              		.loc 1 757 15 view .LVU3545
 11388              	.LBE683:
 11389              	.LBE1156:
 11390              	.LBB1157:
 11391              	.LBB1033:
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11392              		.loc 1 981 4 is_stmt 1 view .LVU3546
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11393              		.loc 1 981 7 is_stmt 0 view .LVU3547
 11394 1bca BAF5704F 		cmp	r10, #61440
 11395 1bce 06D1     		bne	.L788
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11396              		.loc 1 981 18 view .LVU3548
 11397 1bd0 584B     		ldr	r3, .L1172
 11398 1bd2 1B68     		ldr	r3, [r3]
 11399 1bd4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11400              		.loc 1 981 8 view .LVU3549
 11401 1bd8 DA07     		lsls	r2, r3, #31
 11402 1bda 3EF5EEAD 		bmi	.L1071
ARM GAS  /tmp/cceb4mPP.s 			page 315


 11403              	.LVL892:
 11404              	.L788:
 982:src/keys.c    **** 			}
 11405              		.loc 1 982 5 is_stmt 1 view .LVU3550
 11406              	.LBB1023:
 11407              	.LBI1023:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11408              		.loc 1 501 13 view .LVU3551
 11409              	.LBB1024:
 502:src/keys.c    **** 		return;
 11410              		.loc 1 502 2 view .LVU3552
 502:src/keys.c    **** 		return;
 11411              		.loc 1 502 6 is_stmt 0 view .LVU3553
 11412 1bde FFF7FEFF 		bl	is_bad_cmdline
 11413              	.LVL893:
 502:src/keys.c    **** 		return;
 11414              		.loc 1 502 5 view .LVU3554
 11415 1be2 0446     		mov	r4, r0
 11416 1be4 0028     		cmp	r0, #0
 11417 1be6 7EF4E8AD 		bne	.L1071
 11418 1bea 5FFA8BF0 		uxtb	r0, fp
 11419 1bee FFF7FEFF 		bl	init_arg.part.0
 11420              	.LVL894:
 11421              	.LBE1024:
 11422              	.LBE1023:
 11423              	.LBE1033:
 11424              	.LBE1157:
 11425              	.LBE1223:
 11426              	.LBE1279:
2931:src/keys.c    ****   if (was_paused && Pause == 0) {
 11427              		.loc 1 2931 7 view .LVU3555
 11428 1bf2 2746     		mov	r7, r4
 11429              	.LBB1280:
 11430              	.LBB1224:
 11431              	.LBB1158:
 11432              	.LBB1034:
 984:src/keys.c    **** 		}
 11433              		.loc 1 984 11 view .LVU3556
 11434 1bf4 4FF0330B 		mov	fp, #51
 11435              	.LVL895:
 984:src/keys.c    **** 		}
 11436              		.loc 1 984 11 view .LVU3557
 11437 1bf8 FEF756BA 		b	.L565
 11438              	.LVL896:
 11439              	.L629:
 984:src/keys.c    **** 		}
 11440              		.loc 1 984 11 view .LVU3558
 11441              	.LBE1034:
 11442              	.LBE1158:
 11443              	.LBB1159:
 11444              	.LBB863:
1913:src/keys.c    **** 		// Special 1
 11445              		.loc 1 1913 7 is_stmt 1 view .LVU3559
1913:src/keys.c    **** 		// Special 1
 11446              		.loc 1 1913 10 is_stmt 0 view .LVU3560
 11447 1bfc 0128     		cmp	r0, #1
 11448 1bfe 7FF43DA8 		bne	.L631
ARM GAS  /tmp/cceb4mPP.s 			page 316


1915:src/keys.c    **** 	}
 11449              		.loc 1 1915 3 is_stmt 1 view .LVU3561
1915:src/keys.c    **** 	}
 11450              		.loc 1 1915 18 is_stmt 0 view .LVU3562
 11451 1c02 BEF1000F 		cmp	lr, #0
 11452 1c06 14BF     		ite	ne
 11453 1c08 2723     		movne	r3, #39
 11454 1c0a 1E23     		moveq	r3, #30
1915:src/keys.c    **** 	}
 11455              		.loc 1 1915 47 view .LVU3563
 11456 1c0c 9B44     		add	fp, fp, r3
 11457              	.LVL897:
1915:src/keys.c    **** 	}
 11458              		.loc 1 1915 47 view .LVU3564
 11459 1c0e FEF7BFBC 		b	.L594
 11460              	.LVL898:
 11461              	.L746:
1915:src/keys.c    **** 	}
 11462              		.loc 1 1915 47 view .LVU3565
 11463              	.LBE863:
 11464              	.LBE1159:
 11465              	.LBB1160:
 11466              	.LBB823:
1428:src/keys.c    **** 			return STATE_BACKSPACE;
 11467              		.loc 1 1428 3 is_stmt 1 view .LVU3566
1428:src/keys.c    **** 			return STATE_BACKSPACE;
 11468              		.loc 1 1428 6 is_stmt 0 view .LVU3567
 11469 1c12 0028     		cmp	r0, #0
 11470 1c14 3EF4F2AC 		beq	.L752
 11471              	.L753:
1430:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11472              		.loc 1 1430 3 is_stmt 1 view .LVU3568
1430:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11473              		.loc 1 1430 6 is_stmt 0 view .LVU3569
 11474 1c18 0328     		cmp	r0, #3
 11475 1c1a 7FF480AB 		bne	.L740
 11476              	.LVL899:
1430:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11477              		.loc 1 1430 6 view .LVU3570
 11478              	.LBE823:
 11479              	.LBE1160:
 11480              	.LBE1224:
 11481              	.LBE1280:
3124:src/keys.c    **** 	NonProgrammable = 0;
 11482              		.loc 1 3124 7 is_stmt 1 view .LVU3571
3124:src/keys.c    **** 	NonProgrammable = 0;
 11483              		.loc 1 3124 10 is_stmt 0 view .LVU3572
 11484 1c1e 5A06     		lsls	r2, r3, #25
 11485              	.LVL900:
3124:src/keys.c    **** 	NonProgrammable = 0;
 11486              		.loc 1 3124 10 view .LVU3573
 11487 1c20 1CD5     		bpl	.L890
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11488              		.loc 1 3125 2 is_stmt 1 view .LVU3574
3125:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11489              		.loc 1 3125 18 is_stmt 0 view .LVU3575
 11490 1c22 454B     		ldr	r3, .L1172+4
ARM GAS  /tmp/cceb4mPP.s 			page 317


 11491 1c24 0022     		movs	r2, #0
 11492 1c26 1A60     		str	r2, [r3]
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11493              		.loc 1 3126 2 is_stmt 1 view .LVU3576
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11494              		.loc 1 3126 32 is_stmt 0 view .LVU3577
 11495 1c28 4FF4BA70 		mov	r0, #372
 11496              	.LVL901:
3126:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11497              		.loc 1 3126 32 view .LVU3578
 11498 1c2c FEF756BC 		b	.L833
 11499              	.LVL902:
 11500              	.L1151:
 11501              	.LBB1281:
 11502              	.LBB1225:
 11503              	.LBB1161:
 11504              	.LBB1035:
 914:src/keys.c    **** 	    State2.dot = op;
 11505              		.loc 1 914 6 is_stmt 1 view .LVU3579
 915:src/keys.c    **** 	    // State2.cmplx = 0;
 11506              		.loc 1 915 6 view .LVU3580
 914:src/keys.c    **** 	    State2.dot = op;
 11507              		.loc 1 914 17 is_stmt 0 view .LVU3581
 11508 1c30 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 11509 1c34 0BF00103 		and	r3, fp, #1
 11510              	.LVL903:
 914:src/keys.c    **** 	    State2.dot = op;
 11511              		.loc 1 914 17 view .LVU3582
 11512 1c38 9B01     		lsls	r3, r3, #6
 11513 1c3a 43F02003 		orr	r3, r3, #32
 11514 1c3e 22F06002 		bic	r2, r2, #96
 11515 1c42 1343     		orrs	r3, r3, r2
 11516 1c44 88F81530 		strb	r3, [r8, #21]
 917:src/keys.c    **** 	  }
 11517              		.loc 1 917 6 is_stmt 1 view .LVU3583
 917:src/keys.c    **** 	  }
 11518              		.loc 1 917 13 is_stmt 0 view .LVU3584
 11519 1c48 4FF0330B 		mov	fp, #51
 11520              	.LVL904:
 917:src/keys.c    **** 	  }
 11521              		.loc 1 917 13 view .LVU3585
 11522 1c4c FEF72CBA 		b	.L565
 11523              	.LVL905:
 11524              	.L883:
 917:src/keys.c    **** 	  }
 11525              		.loc 1 917 13 view .LVU3586
 11526              	.LBE1035:
 11527              	.LBE1161:
 11528              	.LBB1162:
 11529              	.LBB824:
1471:src/keys.c    **** 		break;
 11530              		.loc 1 1471 11 view .LVU3587
 11531 1c50 40F23B1B 		movw	fp, #315
 11532 1c54 A6E7     		b	.L832
 11533              	.LVL906:
 11534              	.L884:
1471:src/keys.c    **** 		break;
ARM GAS  /tmp/cceb4mPP.s 			page 318


 11535              		.loc 1 1471 11 view .LVU3588
 11536              	.LBE824:
 11537              	.LBE1162:
 11538              	.LBB1163:
 11539              	.LBB1036:
 953:src/keys.c    **** 	  }
 11540              		.loc 1 953 13 view .LVU3589
 11541 1c56 4FF0120B 		mov	fp, #18
 11542 1c5a 8DE7     		b	.L834
 11543              	.LVL907:
 11544              	.L890:
 953:src/keys.c    **** 	  }
 11545              		.loc 1 953 13 view .LVU3590
 11546              	.LBE1036:
 11547              	.LBE1163:
 11548              	.LBB1164:
 11549              	.LBB825:
1431:src/keys.c    **** 		break;
 11550              		.loc 1 1431 11 view .LVU3591
 11551 1c5c 4FF4BA7B 		mov	fp, #372
 11552 1c60 A0E7     		b	.L832
 11553              	.LVL908:
 11554              	.L1145:
1431:src/keys.c    **** 		break;
 11555              		.loc 1 1431 11 view .LVU3592
 11556              	.LBE825:
 11557              	.LBE1164:
 11558              	.LBB1165:
 11559              	.LBB1082:
1078:src/keys.c    **** 			set_pc(0);
 11560              		.loc 1 1078 43 view .LVU3593
 11561 1c62 B3F8EE37 		ldrh	r3, [r3, #2030]
 11562 1c66 012B     		cmp	r3, #1
 11563 1c68 7FF4A9AB 		bne	.L793
1079:src/keys.c    **** 		break;
 11564              		.loc 1 1079 4 is_stmt 1 view .LVU3594
 11565 1c6c FFF7FEFF 		bl	set_pc
 11566              	.LVL909:
 11567 1c70 FFF7A5BB 		b	.L793
 11568              	.LVL910:
 11569              	.L1115:
1079:src/keys.c    **** 		break;
 11570              		.loc 1 1079 4 is_stmt 0 view .LVU3595
 11571              	.LBE1082:
 11572              	.LBE1165:
 11573              	.LBB1166:
 11574              	.LBB735:
 11575              	.LBB729:
 11576              	.LBB720:
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 11577              		.loc 1 437 8 is_stmt 1 view .LVU3596
 438:src/keys.c    **** 	}
 11578              		.loc 1 438 10 is_stmt 0 view .LVU3597
 11579 1c74 0229     		cmp	r1, #2
 11580 1c76 08BF     		it	eq
 11581 1c78 0521     		moveq	r1, #5
 11582              	.LVL911:
ARM GAS  /tmp/cceb4mPP.s 			page 319


 438:src/keys.c    **** 	}
 11583              		.loc 1 438 10 view .LVU3598
 11584 1c7a FEF759BC 		b	.L679
 11585              	.LVL912:
 11586              	.L887:
 438:src/keys.c    **** 	}
 11587              		.loc 1 438 10 view .LVU3599
 11588              	.LBE720:
 11589              	.LBE729:
 11590              	.LBE735:
 11591              	.LBE1166:
 11592              	.LBB1167:
 11593              	.LBB684:
 749:src/keys.c    **** 	    }
 11594              		.loc 1 749 15 view .LVU3600
 11595 1c7e 4FF0110B 		mov	fp, #17
 11596 1c82 79E7     		b	.L834
 11597              	.LVL913:
 11598              	.L889:
 733:src/keys.c    **** 	    }
 11599              		.loc 1 733 15 view .LVU3601
 11600 1c84 4FF00F0B 		mov	fp, #15
 11601 1c88 76E7     		b	.L834
 11602              	.LVL914:
 11603              	.L1154:
 733:src/keys.c    **** 	    }
 11604              		.loc 1 733 15 view .LVU3602
 11605              	.LBE684:
 11606              	.LBE1167:
 11607              	.LBB1168:
 11608              	.LBB826:
1418:src/keys.c    **** 			State2.numdigit = 0;
 11609              		.loc 1 1418 4 is_stmt 1 view .LVU3603
1418:src/keys.c    **** 			State2.numdigit = 0;
 11610              		.loc 1 1418 17 is_stmt 0 view .LVU3604
 11611 1c8a 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1419:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11612              		.loc 1 1419 20 view .LVU3605
 11613 1c8e 88F80B20 		strb	r2, [r8, #11]
1418:src/keys.c    **** 			State2.numdigit = 0;
 11614              		.loc 1 1418 17 view .LVU3606
 11615 1c92 43F00803 		orr	r3, r3, #8
1420:src/keys.c    **** 			return STATE_UNFINISHED;
 11616              		.loc 1 1420 12 view .LVU3607
 11617 1c96 0A22     		movs	r2, #10
1418:src/keys.c    **** 			State2.numdigit = 0;
 11618              		.loc 1 1418 17 view .LVU3608
 11619 1c98 88F81530 		strb	r3, [r8, #21]
1419:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11620              		.loc 1 1419 4 is_stmt 1 view .LVU3609
1420:src/keys.c    **** 			return STATE_UNFINISHED;
 11621              		.loc 1 1420 4 view .LVU3610
1420:src/keys.c    **** 			return STATE_UNFINISHED;
 11622              		.loc 1 1420 12 is_stmt 0 view .LVU3611
 11623 1c9c 88F81F20 		strb	r2, [r8, #31]
1421:src/keys.c    **** 		}
 11624              		.loc 1 1421 4 is_stmt 1 view .LVU3612
ARM GAS  /tmp/cceb4mPP.s 			page 320


1421:src/keys.c    **** 		}
 11625              		.loc 1 1421 11 is_stmt 0 view .LVU3613
 11626 1ca0 4FF0330B 		mov	fp, #51
 11627 1ca4 FEF700BA 		b	.L565
 11628              	.LVL915:
 11629              	.L1153:
1421:src/keys.c    **** 		}
 11630              		.loc 1 1421 11 view .LVU3614
 11631              	.LBE826:
 11632              	.LBE1168:
 11633              	.LBB1169:
 11634              	.LBB994:
2549:src/keys.c    **** 		State2.digval = pc;
 11635              		.loc 1 2549 4 is_stmt 1 view .LVU3615
2549:src/keys.c    **** 		State2.digval = pc;
 11636              		.loc 1 2549 9 is_stmt 0 view .LVU3616
 11637 1ca8 2046     		mov	r0, r4
 11638 1caa 0121     		movs	r1, #1
 11639 1cac FFF7FEFF 		bl	advance_to_next_label
 11640              	.LVL916:
 11641 1cb0 0446     		mov	r4, r0
 11642              	.LVL917:
2549:src/keys.c    **** 		State2.digval = pc;
 11643              		.loc 1 2549 9 view .LVU3617
 11644 1cb2 C5E6     		b	.L689
 11645              	.LVL918:
 11646              	.L1152:
2549:src/keys.c    **** 		State2.digval = pc;
 11647              		.loc 1 2549 9 view .LVU3618
 11648              	.LBE994:
 11649              	.LBE1169:
 11650              	.LBB1170:
 11651              	.LBB1037:
 933:src/keys.c    **** 		}
 11652              		.loc 1 933 4 is_stmt 1 view .LVU3619
 933:src/keys.c    **** 		}
 11653              		.loc 1 933 34 is_stmt 0 view .LVU3620
 11654 1cb4 214B     		ldr	r3, .L1172+8
 11655              	.LVL919:
 933:src/keys.c    **** 		}
 11656              		.loc 1 933 11 view .LVU3621
 11657 1cb6 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11658 1cba FFF7FEFF 		bl	check_f_key
 11659              	.LVL920:
 933:src/keys.c    **** 		}
 11660              		.loc 1 933 11 view .LVU3622
 11661 1cbe 8346     		mov	fp, r0
 11662              	.LVL921:
 933:src/keys.c    **** 		}
 11663              		.loc 1 933 11 view .LVU3623
 11664 1cc0 FEF766BC 		b	.L594
 11665              	.LVL922:
 11666              	.L723:
 933:src/keys.c    **** 		}
 11667              		.loc 1 933 11 view .LVU3624
 11668              	.LBE1037:
 11669              	.LBE1170:
ARM GAS  /tmp/cceb4mPP.s 			page 321


 11670              	.LBB1171:
 11671              	.LBB769:
2702:src/keys.c    **** 		goto reset_window;
 11672              		.loc 1 2702 4 is_stmt 1 view .LVU3625
2702:src/keys.c    **** 		goto reset_window;
 11673              		.loc 1 2702 24 is_stmt 0 view .LVU3626
 11674 1cc4 09F1FF39 		add	r9, r9, #-1
 11675              	.LVL923:
2702:src/keys.c    **** 		goto reset_window;
 11676              		.loc 1 2702 18 view .LVU3627
 11677 1cc8 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11678 1ccc FEF76FBD 		b	.L715
 11679              	.LVL924:
 11680              	.L1118:
2698:src/keys.c    **** 			--State2.digval;
 11681              		.loc 1 2698 5 is_stmt 1 view .LVU3628
2698:src/keys.c    **** 			--State2.digval;
 11682              		.loc 1 2698 21 is_stmt 0 view .LVU3629
 11683 1cd0 FFF7FEFF 		bl	global_regs
 11684              	.LVL925:
2698:src/keys.c    **** 			--State2.digval;
 11685              		.loc 1 2698 19 view .LVU3630
 11686 1cd4 A8F80800 		strh	r0, [r8, #8]	@ movhi
 11687 1cd8 FEF764BD 		b	.L724
 11688              	.LVL926:
 11689              	.L726:
2712:src/keys.c    **** 		goto reset_window;
 11690              		.loc 1 2712 4 is_stmt 1 view .LVU3631
2712:src/keys.c    **** 		goto reset_window;
 11691              		.loc 1 2712 18 is_stmt 0 view .LVU3632
 11692 1cdc 0023     		movs	r3, #0
 11693 1cde A8F80830 		strh	r3, [r8, #8]	@ movhi
 11694 1ce2 FEF764BD 		b	.L715
 11695              	.LVL927:
 11696              	.L1144:
2729:src/keys.c    **** 			goto reset_window;
 11697              		.loc 1 2729 4 is_stmt 1 view .LVU3633
2729:src/keys.c    **** 			goto reset_window;
 11698              		.loc 1 2729 25 is_stmt 0 view .LVU3634
 11699 1ce6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11700 1cea 43F00403 		orr	r3, r3, #4
 11701 1cee 88F81630 		strb	r3, [r8, #22]
2730:src/keys.c    **** 		}
 11702              		.loc 1 2730 4 is_stmt 1 view .LVU3635
 11703 1cf2 FEF75CBD 		b	.L715
 11704              	.LVL928:
 11705              	.L766:
2730:src/keys.c    **** 		}
 11706              		.loc 1 2730 4 is_stmt 0 view .LVU3636
 11707 1cf6 0093     		str	r3, [sp]
 11708              	.LBE769:
 11709              	.LBE1171:
 11710              	.LBB1172:
 11711              	.LBB1120:
1177:src/keys.c    **** 			break;
 11712              		.loc 1 1177 4 is_stmt 1 view .LVU3637
 11713              	.LVL929:
ARM GAS  /tmp/cceb4mPP.s 			page 322


 11714              	.LBB1113:
 11715              	.LBI1113:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11716              		.loc 1 92 20 view .LVU3638
 11717              	.LBB1114:
  93:src/keys.c    **** 	State2.shifts = shift;
 11718              		.loc 1 93 2 view .LVU3639
 11719              	.LBB1115:
 11720              	.LBI1115:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11721              		.loc 1 84 13 view .LVU3640
 11722              	.LBB1116:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11723              		.loc 1 85 2 view .LVU3641
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11724              		.loc 1 85 18 is_stmt 0 view .LVU3642
 11725 1cf8 FFF7FEFF 		bl	shift_down
 11726              	.LVL930:
  86:src/keys.c    **** }
 11727              		.loc 1 86 2 is_stmt 1 view .LVU3643
 11728              	.LBE1116:
 11729              	.LBE1115:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11730              		.loc 1 94 2 view .LVU3644
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11731              		.loc 1 94 16 is_stmt 0 view .LVU3645
 11732 1cfc 009B     		ldr	r3, [sp]
 11733 1cfe 88F81030 		strb	r3, [r8, #16]
  95:src/keys.c    **** 	return r;
 11734              		.loc 1 95 2 is_stmt 1 view .LVU3646
  95:src/keys.c    **** 	return r;
 11735              		.loc 1 95 19 is_stmt 0 view .LVU3647
 11736 1d02 88F80DA0 		strb	r10, [r8, #13]
  96:src/keys.c    **** }
 11737              		.loc 1 96 2 is_stmt 1 view .LVU3648
  96:src/keys.c    **** }
 11738              		.loc 1 96 9 is_stmt 0 view .LVU3649
 11739 1d06 FEF743BC 		b	.L594
 11740              	.LVL931:
 11741              	.L765:
  96:src/keys.c    **** }
 11742              		.loc 1 96 9 view .LVU3650
 11743              	.LBE1114:
 11744              	.LBE1113:
1191:src/keys.c    **** 			break;
 11745              		.loc 1 1191 4 is_stmt 1 view .LVU3651
 11746 1d0a FFF7FEFF 		bl	init_state
 11747              	.LVL932:
1192:src/keys.c    **** 
 11748              		.loc 1 1192 4 view .LVU3652
 11749 1d0e FEF73FBC 		b	.L594
 11750              	.LVL933:
 11751              	.L1149:
1192:src/keys.c    **** 
 11752              		.loc 1 1192 4 is_stmt 0 view .LVU3653
 11753              	.LBE1120:
 11754              	.LBE1172:
ARM GAS  /tmp/cceb4mPP.s 			page 323


 11755              	.LBB1173:
 11756              	.LBB1038:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11757              		.loc 1 972 4 is_stmt 1 view .LVU3654
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11758              		.loc 1 972 26 is_stmt 0 view .LVU3655
 11759 1d12 591E     		subs	r1, r3, #1
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11760              		.loc 1 972 17 view .LVU3656
 11761 1d14 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11762              		.loc 1 972 26 view .LVU3657
 11763 1d18 4B42     		rsbs	r3, r1, #0
 11764 1d1a 4B41     		adcs	r3, r3, r1
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11765              		.loc 1 972 17 view .LVU3658
 11766 1d1c 63F3C712 		bfi	r2, r3, #7, #1
 11767 1d20 88F81720 		strb	r2, [r8, #23]
 973:src/keys.c    **** 		}
 11768              		.loc 1 973 4 is_stmt 1 view .LVU3659
 973:src/keys.c    **** 		}
 11769              		.loc 1 973 11 is_stmt 0 view .LVU3660
 11770 1d24 4FF0330B 		mov	fp, #51
 11771              	.LVL934:
 973:src/keys.c    **** 		}
 11772              		.loc 1 973 11 view .LVU3661
 11773 1d28 FEF7BEB9 		b	.L565
 11774              	.LVL935:
 11775              	.L885:
 958:src/keys.c    **** 	  }
 11776              		.loc 1 958 13 view .LVU3662
 11777 1d2c 4FF0130B 		mov	fp, #19
 11778 1d30 22E7     		b	.L834
 11779              	.L1173:
 11780 1d32 00BF     		.align	2
 11781              	.L1172:
 11782 1d34 00000000 		.word	main_ram
 11783 1d38 00000000 		.word	NonProgrammable
 11784 1d3c 00000000 		.word	.LANCHOR20
 11785              	.LBE1038:
 11786              	.LBE1173:
 11787              	.LBE1225:
 11788              	.LBE1281:
 11789              		.cfi_endproc
 11790              	.LFE58:
 11792              		.section	.text.process_keycode_with_shift,"ax",%progbits
 11793              		.align	1
 11794              		.p2align 2,,3
 11795              		.global	process_keycode_with_shift
 11796              		.syntax unified
 11797              		.thumb
 11798              		.thumb_func
 11799              		.fpu fpv4-sp-d16
 11801              	process_keycode_with_shift:
 11802              	.LFB57:
2909:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11803              		.loc 1 2909 61 is_stmt 1 view -0
ARM GAS  /tmp/cceb4mPP.s 			page 324


 11804              		.cfi_startproc
 11805              		@ args = 0, pretend = 0, frame = 8
 11806              		@ frame_needed = 0, uses_anonymous_args = 0
 11807 0000 30B5     		push	{r4, r5, lr}
 11808              		.cfi_def_cfa_offset 12
 11809              		.cfi_offset 4, -12
 11810              		.cfi_offset 5, -8
 11811              		.cfi_offset 14, -4
 11812 0002 83B0     		sub	sp, sp, #12
 11813              		.cfi_def_cfa_offset 24
2909:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11814              		.loc 1 2909 61 is_stmt 0 view .LVU3664
 11815 0004 02AB     		add	r3, sp, #8
 11816 0006 03E90300 		stmdb	r3, {r0, r1}
 11817 000a 019D     		ldr	r5, [sp, #4]
 11818 000c 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 11819              	.LVL936:
2910:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11820              		.loc 1 2910 4 is_stmt 1 view .LVU3665
2910:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11821              		.loc 1 2910 7 is_stmt 0 view .LVU3666
 11822 0010 002D     		cmp	r5, #0
 11823 0012 05DB     		blt	.L1175
2910:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11824              		.loc 1 2910 29 is_stmt 1 discriminator 1 view .LVU3667
 11825              	.LVL937:
 11826              	.LBB1282:
 11827              	.LBI1282:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11828              		.loc 1 92 20 discriminator 1 view .LVU3668
 11829              	.LBB1283:
  93:src/keys.c    **** 	State2.shifts = shift;
 11830              		.loc 1 93 2 discriminator 1 view .LVU3669
 11831              	.LBB1284:
 11832              	.LBI1284:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11833              		.loc 1 84 13 discriminator 1 view .LVU3670
 11834              	.LBB1285:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11835              		.loc 1 85 2 discriminator 1 view .LVU3671
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11836              		.loc 1 85 18 is_stmt 0 discriminator 1 view .LVU3672
 11837 0014 FFF7FEFF 		bl	shift_down
 11838              	.LVL938:
  86:src/keys.c    **** }
 11839              		.loc 1 86 2 is_stmt 1 discriminator 1 view .LVU3673
 11840              	.LBE1285:
 11841              	.LBE1284:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11842              		.loc 1 94 2 discriminator 1 view .LVU3674
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11843              		.loc 1 94 16 is_stmt 0 discriminator 1 view .LVU3675
 11844 0018 164B     		ldr	r3, .L1182
  95:src/keys.c    **** 	return r;
 11845              		.loc 1 95 19 discriminator 1 view .LVU3676
 11846 001a 0022     		movs	r2, #0
 11847              	.LBE1283:
ARM GAS  /tmp/cceb4mPP.s 			page 325


 11848              	.LBE1282:
2910:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11849              		.loc 1 2910 29 discriminator 1 view .LVU3677
 11850 001c 1D74     		strb	r5, [r3, #16]
 11851              	.LBB1287:
 11852              	.LBB1286:
  95:src/keys.c    **** 	return r;
 11853              		.loc 1 95 2 is_stmt 1 discriminator 1 view .LVU3678
  95:src/keys.c    **** 	return r;
 11854              		.loc 1 95 19 is_stmt 0 discriminator 1 view .LVU3679
 11855 001e 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 11856              		.loc 1 96 2 is_stmt 1 discriminator 1 view .LVU3680
 11857              	.LVL939:
 11858              	.L1175:
  96:src/keys.c    **** }
 11859              		.loc 1 96 2 is_stmt 0 discriminator 1 view .LVU3681
 11860              	.LBE1286:
 11861              	.LBE1287:
2911:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 11862              		.loc 1 2911 4 is_stmt 1 view .LVU3682
2911:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 11863              		.loc 1 2911 7 is_stmt 0 view .LVU3683
 11864 0020 2E2C     		cmp	r4, #46
 11865 0022 21D0     		beq	.L1174
2912:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 11866              		.loc 1 2912 4 is_stmt 1 view .LVU3684
2912:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 11867              		.loc 1 2912 7 is_stmt 0 view .LVU3685
 11868 0024 332C     		cmp	r4, #51
 11869 0026 05D0     		beq	.L1180
2921:src/keys.c    ****  }
 11870              		.loc 1 2921 4 is_stmt 1 view .LVU3686
 11871 0028 2046     		mov	r0, r4
2922:src/keys.c    ****  
 11872              		.loc 1 2922 2 is_stmt 0 view .LVU3687
 11873 002a 03B0     		add	sp, sp, #12
 11874              		.cfi_remember_state
 11875              		.cfi_def_cfa_offset 12
 11876              		@ sp needed
 11877 002c BDE83040 		pop	{r4, r5, lr}
 11878              		.cfi_restore 14
 11879              		.cfi_restore 5
 11880              		.cfi_restore 4
 11881              		.cfi_def_cfa_offset 0
 11882              	.LVL940:
2921:src/keys.c    ****  }
 11883              		.loc 1 2921 4 view .LVU3688
 11884 0030 FFF7FEBF 		b	process_keycode
 11885              	.LVL941:
 11886              	.L1180:
 11887              		.cfi_restore_state
2913:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11888              		.loc 1 2913 6 is_stmt 1 view .LVU3689
 11889 0034 104B     		ldr	r3, .L1182+4
 11890 0036 41F23010 		movw	r0, #4400
 11891 003a 9847     		blx	r3
ARM GAS  /tmp/cceb4mPP.s 			page 326


 11892              	.LVL942:
2913:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11893              		.loc 1 2913 31 view .LVU3690
 11894 003c 0A20     		movs	r0, #10
 11895 003e 0F4B     		ldr	r3, .L1182+8
 11896 0040 9847     		blx	r3
 11897              	.LVL943:
2913:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11898              		.loc 1 2913 46 view .LVU3691
 11899 0042 0F4B     		ldr	r3, .L1182+12
 11900 0044 9847     		blx	r3
 11901              	.LVL944:
2914:src/keys.c    ****        // Was error just wait for confirmation
 11902              		.loc 1 2914 6 view .LVU3692
2914:src/keys.c    ****        // Was error just wait for confirmation
 11903              		.loc 1 2914 11 is_stmt 0 view .LVU3693
 11904 0046 0F4B     		ldr	r3, .L1182+16
 11905 0048 0120     		movs	r0, #1
 11906 004a 9847     		blx	r3
 11907              	.LVL945:
2914:src/keys.c    ****        // Was error just wait for confirmation
 11908              		.loc 1 2914 9 view .LVU3694
 11909 004c 0228     		cmp	r0, #2
 11910 004e 0DD0     		beq	.L1181
 11911              	.L1178:
2918:src/keys.c    ****      return;
 11912              		.loc 1 2918 6 is_stmt 1 view .LVU3695
 11913 0050 094B     		ldr	r3, .L1182+4
 11914 0052 42F26020 		movw	r0, #8800
 11915 0056 9847     		blx	r3
 11916              	.LVL946:
2918:src/keys.c    ****      return;
 11917              		.loc 1 2918 31 view .LVU3696
 11918 0058 084B     		ldr	r3, .L1182+8
 11919 005a 0A20     		movs	r0, #10
 11920 005c 9847     		blx	r3
 11921              	.LVL947:
2918:src/keys.c    ****      return;
 11922              		.loc 1 2918 46 view .LVU3697
 11923 005e 084B     		ldr	r3, .L1182+12
2922:src/keys.c    ****  
 11924              		.loc 1 2922 2 is_stmt 0 view .LVU3698
 11925 0060 03B0     		add	sp, sp, #12
 11926              		.cfi_remember_state
 11927              		.cfi_def_cfa_offset 12
 11928              		@ sp needed
 11929 0062 BDE83040 		pop	{r4, r5, lr}
 11930              		.cfi_restore 14
 11931              		.cfi_restore 5
 11932              		.cfi_restore 4
 11933              		.cfi_def_cfa_offset 0
 11934              	.LVL948:
2918:src/keys.c    ****      return;
 11935              		.loc 1 2918 46 view .LVU3699
 11936 0066 1847     		bx	r3	@ indirect register sibling call
 11937              	.LVL949:
 11938              	.L1174:
ARM GAS  /tmp/cceb4mPP.s 			page 327


 11939              		.cfi_restore_state
2922:src/keys.c    ****  
 11940              		.loc 1 2922 2 view .LVU3700
 11941 0068 03B0     		add	sp, sp, #12
 11942              		.cfi_remember_state
 11943              		.cfi_def_cfa_offset 12
 11944              		@ sp needed
 11945 006a 30BD     		pop	{r4, r5, pc}
 11946              	.LVL950:
 11947              	.L1181:
 11948              		.cfi_restore_state
2916:src/keys.c    ****      }
 11949              		.loc 1 2916 8 is_stmt 1 view .LVU3701
 11950 006c 064B     		ldr	r3, .L1182+20
 11951 006e 9847     		blx	r3
 11952              	.LVL951:
 11953 0070 EEE7     		b	.L1178
 11954              	.L1183:
 11955 0072 00BF     		.align	2
 11956              	.L1182:
 11957 0074 00000000 		.word	StateWhileOn
 11958 0078 F5020008 		.word	134218485
 11959 007c 05040008 		.word	134218757
 11960 0080 F9020008 		.word	134218489
 11961 0084 79030008 		.word	134218617
 11962 0088 99030008 		.word	134218649
 11963              		.cfi_endproc
 11964              	.LFE57:
 11966              		.comm	NonProgrammable,4,4
 11967              		.comm	GoFast,4,4
 11968              		.comm	OpCodeDisplayPending,4,4
 11969              		.comm	OpCode,4,4
 11970              		.comm	WasDataEntry,4,4
 11971              		.section	.bss.was_paused.9650,"aw",%nobits
 11972              		.align	2
 11973              		.set	.LANCHOR12,. + 0
 11976              	was_paused.9650:
 11977 0000 00000000 		.space	4
 11978              		.section	.rodata.alpha_arrows,"a"
 11979              		.align	2
 11982              	alpha_arrows:
 11983 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 11983      03049F5E 
 11983      7F
 11984              		.section	.rodata.alpha_catalogue,"a"
 11985              		.align	2
 11988              	alpha_catalogue:
 11989 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 11989      9EAE0AA2 
 11989      7EB5AE6B 
 11989      AAEEBC
 11990 000f 284AB0   		.ascii	"(J\260"
 11991              		.section	.rodata.alpha_compares,"a"
 11992              		.align	2
 11995              	alpha_compares:
 11996 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 11996      0A3E5B5D 
ARM GAS  /tmp/cceb4mPP.s 			page 328


 11996      7B7D
 11997              		.section	.rodata.alpha_letters,"a"
 11998              		.align	2
 11999              		.set	.LANCHOR3,. + 0
 12002              	alpha_letters:
 12003 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 12003      88C4C5C6 
 12003      C784C8C9 
 12003      CA
 12004 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 12004      CECFD0D1 
 12004      D2D3D415 
 12004      D5
 12005 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 12005      DADBDC01 
 12005      1902DD1A 
 12005      DE
 12006 0027 DF       		.ascii	"\337"
 12007              		.section	.rodata.alpha_letters_lower,"a"
 12008              		.align	2
 12009              		.set	.LANCHOR4,. + 0
 12012              	alpha_letters_lower:
 12013 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 12013      89E4E5E6 
 12013      E785E8E9 
 12013      EA
 12014 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 12014      EEEFF0F1 
 12014      F2F3F416 
 12014      F5
 12015 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 12015      FAFBFC01 
 12015      1902FD1A 
 12015      FE
 12016 0027 FF       		.ascii	"\377"
 12017              		.section	.rodata.alpha_subscripts,"a"
 12018              		.align	2
 12021              	alpha_subscripts:
 12022 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 12022      9A80D798 
 12022      BB1486BC 
 12022      F7
 12023 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 12023      BF818B9C 
 12023      8C999D90 
 12023      9B
 12024              		.section	.rodata.alpha_symbols,"a"
 12025              		.align	2
 12028              	alpha_symbols:
 12029 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 12029      222A405F 
 12029      7E25240C 
 12029      1E1F8EAE 
 12029      926023
 12030              		.section	.rodata.alphamap.9182,"a"
 12031              		.align	2
 12032              		.set	.LANCHOR9,. + 0
ARM GAS  /tmp/cceb4mPP.s 			page 329


 12035              	alphamap.9182:
 12036 0000 41004100 		.ascii	"A\000A\000a\240"
 12036      61A0
 12037 0006 42004200 		.ascii	"B\000B\000b\241"
 12037      62A1
 12038 000c 43008200 		.ascii	"C\000\202\000c\242"
 12038      63A2
 12039 0012 44008300 		.ascii	"D\000\203\000d\243"
 12039      64A3
 12040 0018 450D4500 		.ascii	"E\015E\000e\244"
 12040      65A4
 12041 001e 46009400 		.ascii	"F\000\224\000f\264"
 12041      66B4
 12042 0024 47008200 		.ascii	"G\000\202\000g\242"
 12042      67A2
 12043 002a 48005800 		.ascii	"H\000X\000h\265"
 12043      68B5
 12044 0030 49004900 		.ascii	"I\000I\000i\250"
 12044      69A8
 12045 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 12045      6A00
 12046 003c 4B004B00 		.ascii	"K\000K\000k\251"
 12046      6BA9
 12047 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 12047      6CAA
 12048 0048 00004800 		.ascii	"\000\000H\000\000\246"
 12048      00A6
 12049 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 12049      6DAB
 12050 0054 4E084E95 		.ascii	"N\010N\225n\254"
 12050      6EAC
 12051 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 12051      6FB7
 12052 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 12052      0000
 12053 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 12053      0000
 12054 006c 50378F26 		.ascii	"P7\217&p\257"
 12054      70AF
 12055 0072 5138007C 		.ascii	"Q8\000|q\000"
 12055      7100
 12056 0078 5239520B 		.ascii	"R9R\013r\260"
 12056      72B0
 12057 007e 532F915C 		.ascii	"S/\221\\s\261"
 12057      73B1
 12058 0084 00000021 		.ascii	"\000\000\000!\000\000"
 12058      0000
 12059 008a 54345400 		.ascii	"T4T\000t\262"
 12059      74B2
 12060 0090 55350000 		.ascii	"U5\000\000u\000"
 12060      7500
 12061 0096 56360000 		.ascii	"V6\000\000v\000"
 12061      7600
 12062 009c 571C0000 		.ascii	"W\034\000\000w\000"
 12062      7700
 12063 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 12063      0000
ARM GAS  /tmp/cceb4mPP.s 			page 330


 12064 00a8 58318D00 		.ascii	"X1\215\000x\255"
 12064      78AD
 12065 00ae 59325900 		.ascii	"Y2Y\000y\263"
 12065      79B3
 12066 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 12066      7AA5
 12067 00ba 2D282900 		.ascii	"-()\000\000\000"
 12067      0000
 12068 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 12068      0000
 12069 00c6 3A308720 		.ascii	":0\207 ;\247"
 12069      3BA7
 12070 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 12070      2EB6
 12071 00d2 3F002100 		.ascii	"?\000!\000\000\000"
 12071      0000
 12072 00d8 202B3D00 		.ascii	" +=\000\000\000"
 12072      0000
 12073 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 12073      0000
 12074              		.section	.rodata.amap.9173,"a"
 12075              		.align	2
 12076              		.set	.LANCHOR10,. + 0
 12079              	amap.9173:
 12080 0000 04       		.byte	4
 12081 0001 000D00   		.ascii	"\000\015\000"
 12082 0004 05       		.byte	5
 12083 0005 000E09   		.ascii	"\000\016\011"
 12084 0008 08       		.byte	8
 12085 0009 00000F   		.ascii	"\000\000\017"
 12086 000c 1F       		.byte	31
 12087 000d 00000C   		.ascii	"\000\000\014"
 12088 0010 21       		.byte	33
 12089 0011 00000A   		.ascii	"\000\000\012"
 12090 0014 26       		.byte	38
 12091 0015 00000B   		.ascii	"\000\000\013"
 12092              		.section	.rodata.catalogue,"a"
 12093              		.align	2
 12096              	catalogue:
 12097 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 12097      C15F57E3 
 12097      D8A23B58 
 12097      16BC7D44 
 12097      71010974 
 12098 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 12098      4F569D21 
 12098      489136D5 
 12098      B6695A66 
 12098      4B0E6F17 
 12099 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 12099      69256099 
 12099      76599460 
 12099      1AC6ECC3 
 12099      6B5B144B 
 12100 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
 12100      023ED1A3 
 12100      0B0F28DB 
ARM GAS  /tmp/cceb4mPP.s 			page 331


 12100      2611B30D 
 12100      57
 12101 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 12101      D0942DAE 
 12101      2B1B75FC 
 12101      A027AB82 
 12101      A89F
 12102 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 12102      BAAEEBCA 
 12102      D8A12AD9 
 12102      94919D
 12103 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
 12103      B05F1007 
 12103      15A26FD6 
 12103      D5A9A1
 12104              		.section	.rodata.catalogue_sizes.9448,"a"
 12105              		.align	2
 12106              		.set	.LANCHOR2,. + 0
 12109              	catalogue_sizes.9448:
 12110 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
 12110      363C437E 
 12110      25340E13 
 12110      0A09281A 
 12110      4C4C580E 
 12111              		.section	.rodata.catalogues.9456,"a"
 12112              		.align	2
 12113              		.set	.LANCHOR6,. + 0
 12116              	catalogues.9456:
 12117 0000 00000000 		.word	0
 12118 0004 00000000 		.word	catalogue
 12119 0008 00000000 		.word	cplx_catalogue
 12120 000c 00000000 		.word	stats_catalogue
 12121 0010 00000000 		.word	prob_catalogue
 12122 0014 00000000 		.word	int_catalogue
 12123 0018 00000000 		.word	prog_catalogue
 12124 001c 00000000 		.word	program_xfcn
 12125 0020 00000000 		.word	test_catalogue
 12126 0024 00000000 		.word	mode_catalogue
 12127 0028 00000000 		.word	alpha_catalogue
 12128 002c 00000000 		.word	alpha_symbols
 12129 0030 00000000 		.word	alpha_compares
 12130 0034 00000000 		.word	alpha_arrows
 12131 0038 00000000 		.word	alpha_letters
 12132 003c 00000000 		.word	alpha_subscripts
 12133 0040 00000000 		.word	0
 12134 0044 00000000 		.word	0
 12135 0048 00000000 		.word	0
 12136 004c 00000000 		.word	sums_catalogue
 12137 0050 00000000 		.word	matrix_catalogue
 12138              		.section	.rodata.cmap.9172,"a"
 12139              		.align	2
 12140              		.set	.LANCHOR11,. + 0
 12143              	cmap.9172:
 12144 0000 04       		.byte	4
 12145 0001 120012   		.ascii	"\022\000\022"
 12146 0004 05       		.byte	5
 12147 0005 090909   		.ascii	"\011\011\011"
ARM GAS  /tmp/cceb4mPP.s 			page 332


 12148 0008 06       		.byte	6
 12149 0009 151515   		.ascii	"\025\025\025"
 12150 000c 0C       		.byte	12
 12151 000d 100011   		.ascii	"\020\000\021"
 12152 0010 19       		.byte	25
 12153 0011 040004   		.ascii	"\004\000\004"
 12154 0014 1A       		.byte	26
 12155 0015 030003   		.ascii	"\003\000\003"
 12156 0018 1B       		.byte	27
 12157 0019 130013   		.ascii	"\023\000\023"
 12158 001c 1C       		.byte	28
 12159 001d 140014   		.ascii	"\024\000\024"
 12160 0020 1E       		.byte	30
 12161 0021 171717   		.ascii	"\027\027\027"
 12162 0024 1F       		.byte	31
 12163 0025 080808   		.ascii	"\010\010\010"
 12164 0028 20       		.byte	32
 12165 0029 060606   		.ascii	"\006\006\006"
 12166 002c 21       		.byte	33
 12167 002d 010502   		.ascii	"\001\005\002"
 12168              		.section	.rodata.conv_catalogue,"a"
 12169              		.align	2
 12170              		.set	.LANCHOR5,. + 0
 12173              	conv_catalogue:
 12174 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 12174      2B2DDD37 
 12174      27393133 
 12174      111605DC 
 12174      DE19
 12175 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 12175      0D0F8D08 
 12175      8F0A2A2C 
 12175      47434517 
 12175      3F30
 12176 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 12176      02062622 
 12176      20282435 
 12176      2F012310 
 12176      0C0E2112 
 12177 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 12177      1E292E09 
 12177      36383E3A 
 12177      3C4025DF 
 12177      3D8B8E03 
 12178 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 12178      4A484642 
 12178      441F
 12179              		.section	.rodata.conv_mapping.9495,"a"
 12180              		.align	2
 12181              		.set	.LANCHOR8,. + 0
 12184              	conv_mapping.9495:
 12185 0000 8502     		.short	645
 12186 0002 8402     		.short	644
 12187 0004 8602     		.short	646
 12188 0006 8702     		.short	647
 12189 0008 8202     		.short	642
 12190 000a 8302     		.short	643
ARM GAS  /tmp/cceb4mPP.s 			page 333


 12191 000c 3202     		.short	562
 12192 000e 3302     		.short	563
 12193 0010 3402     		.short	564
 12194 0012 3502     		.short	565
 12195 0014 3602     		.short	566
 12196 0016 3702     		.short	567
 12197              		.section	.rodata.cplx_catalogue,"a"
 12198              		.align	2
 12201              	cplx_catalogue:
 12202 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 12202      013BCEE1 
 12202      0DDA785F 
 12202      57DA6676 
 12202      66E7E5CF 
 12203 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
 12203      A2EB09B5 
 12203      F87500
 12204              		.section	.rodata.disp.9310,"a"
 12205              		.align	2
 12206              		.set	.LANCHOR15,. + 0
 12209              	disp.9310:
 12210 0000 03       		.byte	3
 12211 0001 02       		.byte	2
 12212 0002 05       		.byte	5
 12213 0003 04       		.byte	4
 12214              		.section	.rodata.int_catalogue,"a"
 12215              		.align	2
 12218              	int_catalogue:
 12219 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 12219      F53D9BE2 
 12219      59BD10AF 
 12219      6434F569 
 12219      D926A094 
 12220 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 12220      965C9946 
 12220      B1716ECC 
 12220      36B495BB 
 12220      6EF3DE
 12221 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 12221      A0FBBC6F 
 12221      2C3D840D 
 12221      4CA42DAE 
 12221      2B1B7AE0 
 12222 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
 12222      E6BAAEEB 
 12222      CAD8AB49 
 12222      100719
 12223 004a C7       		.ascii	"\307"
 12224              		.section	.rodata.linear_key_map.9143,"a"
 12225              		.align	2
 12226              		.set	.LANCHOR1,. + 0
 12229              	linear_key_map.9143:
 12230 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 12230      04050607 
 12230      08090A0B 
 12230      0C
 12231 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
ARM GAS  /tmp/cceb4mPP.s 			page 334


 12231      00111213 
 12231      14150016 
 12231      17
 12232 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 12232      1B1C1D1E 
 12232      1F002021 
 12232      22232425 
 12232      25252525 
 12233 002e 25       		.ascii	"%"
 12234              		.section	.rodata.linear_key_map.9147,"a"
 12235              		.align	2
 12236              		.set	.LANCHOR18,. + 0
 12239              	linear_key_map.9147:
 12240 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 12240      04050607 
 12240      08222222 
 12240      090A0B
 12241 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 12241      0F101112 
 12241      00131415 
 12241      16
 12242 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 12242      1A1B1C00 
 12242      1D1E1F20 
 12242      21222222 
 12243 002c 040522   		.ascii	"\004\005\""
 12244              		.section	.rodata.map.9159,"a"
 12245              		.align	2
 12246              		.set	.LANCHOR0,. + 0
 12249              	map.9159:
 12250 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 12250      FF7F7F7F 
 12250      6D6E6F6C 
 12250      FFFFFFFF 
 12251 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 12251      097F7FE7 
 12251      05067F7F 
 12251      E4
 12252 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\177"
 12252      00F07F7F 
 12252      7F
 12253              		.section	.rodata.matrix_catalogue,"a"
 12254              		.align	2
 12257              	matrix_catalogue:
 12258 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 12258      D835DC23 
 12258      6D856E58 
 12258      66E1C16E 
 12258      98A631C3 
 12259 0017 1C       		.ascii	"\034"
 12260              		.section	.rodata.mode_catalogue,"a"
 12261              		.align	2
 12264              	mode_catalogue:
 12265 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 12265      8BBEC663 
 12265      A8E91F88 
 12265      01FC7CB8 
ARM GAS  /tmp/cceb4mPP.s 			page 335


 12266 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 12266      2449C26C 
 12266      62194932 
 12266      489A1930 
 12266      821083
 12267 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 12267      87320A63 
 12267      10C7324A 
 12267      7314C623 
 12267      8CE0E039 
 12268 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 12268      BB0F33C8 
 12268      99
 12269              		.section	.rodata.op_map.9226,"a"
 12270              		.align	2
 12271              		.set	.LANCHOR22,. + 0
 12274              	op_map.9226:
 12275 0000 1500     		.short	21
 12276 0002 0B02     		.short	523
 12277 0004 0003     		.short	768
 12278 0006 0A02     		.short	522
 12279 0008 1300     		.short	19
 12280 000a 1400     		.short	20
 12281 000c 0300     		.short	3
 12282 000e 0A00     		.short	10
 12283 0010 0701     		.short	263
 12284 0012 0000     		.short	0
 12285 0014 6531     		.short	12645
 12286 0016 0300     		.short	3
 12287 0018 0200     		.short	2
 12288 001a 0100     		.short	1
 12289 001c 4400     		.short	68
 12290 001e 0C00     		.short	12
 12291 0020 0D00     		.short	13
 12292 0022 0E00     		.short	14
 12293 0024 0403     		.short	772
 12294 0026 2F00     		.short	47
 12295 0028 0900     		.short	9
 12296 002a 0A00     		.short	10
 12297 002c 0B00     		.short	11
 12298 002e 0303     		.short	771
 12299 0030 2E00     		.short	46
 12300 0032 0600     		.short	6
 12301 0034 0700     		.short	7
 12302 0036 0800     		.short	8
 12303 0038 0203     		.short	770
 12304 003a 3300     		.short	51
 12305 003c 0500     		.short	5
 12306 003e 0400     		.short	4
 12307 0040 3B01     		.short	315
 12308 0042 0103     		.short	769
 12309 0044 0001     		.short	256
 12310              		.section	.rodata.op_map.9249,"a"
 12311              		.align	2
 12312              		.set	.LANCHOR19,. + 0
 12315              	op_map.9249:
 12316 0000 0100     		.short	1
ARM GAS  /tmp/cceb4mPP.s 			page 336


 12317 0002 0000     		.short	0
 12318 0004 20F2     		.short	-3552
 12319 0006 23F2     		.short	-3549
 12320 0008 21F2     		.short	-3551
 12321 000a 24F2     		.short	-3548
 12322 000c 22F2     		.short	-3550
 12323 000e 25F2     		.short	-3547
 12324 0010 47F1     		.short	-3769
 12325 0012 46F1     		.short	-3770
 12326 0014 4E01     		.short	334
 12327 0016 4D01     		.short	333
 12328 0018 5C01     		.short	348
 12329 001a 35F1     		.short	-3787
 12330 001c 5B01     		.short	347
 12331 001e 36F1     		.short	-3786
 12332 0020 3301     		.short	307
 12333 0022 37F1     		.short	-3785
 12334 0024 3300     		.short	51
 12335 0026 0C01     		.short	268
 12336 0028 2B00     		.short	43
 12337 002a 2C00     		.short	44
 12338 002c 028B     		.short	-29950
 12339 002e 088B     		.short	-29944
 12340 0030 0A8B     		.short	-29942
 12341 0032 108B     		.short	-29936
 12342 0034 4301     		.short	323
 12343 0036 3D01     		.short	317
 12344 0038 0902     		.short	521
 12345 003a 0802     		.short	520
 12346 003c 1002     		.short	528
 12347 003e 0D02     		.short	525
 12348 0040 0F02     		.short	527
 12349 0042 0E02     		.short	526
 12350 0044 0003     		.short	768
 12351 0046 0803     		.short	776
 12352 0048 0BF2     		.short	-3573
 12353 004a 1603     		.short	790
 12354 004c 1203     		.short	786
 12355 004e 1303     		.short	787
 12356 0050 3DF2     		.short	-3523
 12357 0052 3EF2     		.short	-3522
 12358 0054 24F1     		.short	-3804
 12359 0056 1EF1     		.short	-3810
 12360 0058 75F2     		.short	-3467
 12361 005a 27F1     		.short	-3801
 12362 005c 0A02     		.short	522
 12363 005e 1602     		.short	534
 12364 0060 5100     		.short	81
 12365 0062 5200     		.short	82
 12366 0064 0000     		.short	0
 12367 0066 0100     		.short	1
 12368 0068 48F0     		.short	-4024
 12369 006a 4BF0     		.short	-4021
 12370 006c 47F0     		.short	-4025
 12371 006e 46F0     		.short	-4026
 12372 0070 77F2     		.short	-3465
 12373 0072 78F2     		.short	-3464
ARM GAS  /tmp/cceb4mPP.s 			page 337


 12374 0074 3300     		.short	51
 12375 0076 3300     		.short	51
 12376 0078 0502     		.short	517
 12377 007a 0602     		.short	518
 12378 007c 0402     		.short	516
 12379 007e 0002     		.short	512
 12380 0080 4200     		.short	66
 12381 0082 3801     		.short	312
 12382 0084 3A00     		.short	58
 12383 0086 3B00     		.short	59
 12384 0088 0001     		.short	256
 12385 008a 0001     		.short	256
 12386              		.section	.rodata.op_map.9272,"a"
 12387              		.align	2
 12388              		.set	.LANCHOR21,. + 0
 12391              	op_map.9272:
 12392 0000 4C80     		.short	-32692
 12393 0002 4D80     		.short	-32691
 12394 0004 4E80     		.short	-32690
 12395 0006 4F80     		.short	-32689
 12396 0008 3300     		.short	51
 12397 000a 3300     		.short	51
 12398 000c 3300     		.short	51
 12399 000e 2180     		.short	-32735
 12400 0010 0801     		.short	264
 12401 0012 8780     		.short	-32633
 12402 0014 1180     		.short	-32751
 12403 0016 7C02     		.short	636
 12404 0018 5560     		.short	24661
 12405 001a 3F01     		.short	319
 12406 001c 4580     		.short	-32699
 12407 001e 1C03     		.short	796
 12408 0020 1D03     		.short	797
 12409 0022 1E03     		.short	798
 12410 0024 0603     		.short	774
 12411 0026 2F02     		.short	559
 12412 0028 3300     		.short	51
 12413 002a 3300     		.short	51
 12414 002c 3300     		.short	51
 12415 002e 3300     		.short	51
 12416 0030 3300     		.short	51
 12417 0032 3300     		.short	51
 12418 0034 3300     		.short	51
 12419 0036 3300     		.short	51
 12420 0038 1640     		.short	16406
 12421 003a 0201     		.short	258
 12422 003c 6D80     		.short	-32659
 12423 003e 5001     		.short	336
 12424 0040 3300     		.short	51
 12425 0042 1540     		.short	16405
 12426 0044 0001     		.short	256
 12427              		.section	.rodata.op_map.9282,"a"
 12428              		.align	2
 12429              		.set	.LANCHOR17,. + 0
 12432              	op_map.9282:
 12433 0000 0100     		.short	1
 12434 0002 0100     		.short	1
ARM GAS  /tmp/cceb4mPP.s 			page 338


 12435 0004 0000     		.short	0
 12436 0006 0000     		.short	0
 12437 0008 0B05     		.short	1291
 12438 000a 2005     		.short	1312
 12439 000c 2305     		.short	1315
 12440 000e 3300     		.short	51
 12441 0010 0006     		.short	1536
 12442 0012 2105     		.short	1313
 12443 0014 2405     		.short	1316
 12444 0016 3300     		.short	51
 12445 0018 0A05     		.short	1290
 12446 001a 2205     		.short	1314
 12447 001c 2505     		.short	1317
 12448 001e 3300     		.short	51
 12449 0020 3300     		.short	51
 12450 0022 4701     		.short	327
 12451 0024 4601     		.short	326
 12452 0026 3300     		.short	51
 12453 0028 3300     		.short	51
 12454 002a 3300     		.short	51
 12455 002c 3300     		.short	51
 12456 002e 3300     		.short	51
 12457 0030 15FF     		.short	-235
 12458 0032 3300     		.short	51
 12459 0034 3300     		.short	51
 12460 0036 3300     		.short	51
 12461 0038 1AFF     		.short	-230
 12462 003a 3300     		.short	51
 12463 003c 3300     		.short	51
 12464 003e 8CFF     		.short	-116
 12465 0040 0901     		.short	265
 12466 0042 3300     		.short	51
 12467 0044 3300     		.short	51
 12468 0046 0A01     		.short	266
 12469 0048 0B01     		.short	267
 12470 004a 3300     		.short	51
 12471 004c 0D01     		.short	269
 12472 004e 0D01     		.short	269
 12473 0050 663F     		.short	16230
 12474 0052 3300     		.short	51
 12475 0054 3300     		.short	51
 12476 0056 1FFF     		.short	-225
 12477 0058 3805     		.short	1336
 12478 005a 3300     		.short	51
 12479 005c 3300     		.short	51
 12480 005e 3905     		.short	1337
 12481 0060 5521     		.short	8533
 12482 0062 3300     		.short	51
 12483 0064 3300     		.short	51
 12484 0066 5521     		.short	8533
 12485 0068 3300     		.short	51
 12486 006a 3300     		.short	51
 12487 006c 3300     		.short	51
 12488 006e 3300     		.short	51
 12489 0070 3300     		.short	51
 12490 0072 0905     		.short	1289
 12491 0074 0805     		.short	1288
ARM GAS  /tmp/cceb4mPP.s 			page 339


 12492 0076 3300     		.short	51
 12493 0078 07A8     		.short	-22521
 12494 007a 1005     		.short	1296
 12495 007c 0D05     		.short	1293
 12496 007e 3300     		.short	51
 12497 0080 08A8     		.short	-22520
 12498 0082 0F05     		.short	1295
 12499 0084 0E05     		.short	1294
 12500 0086 3300     		.short	51
 12501 0088 09A8     		.short	-22519
 12502 008a 0006     		.short	1536
 12503 008c 0806     		.short	1544
 12504 008e 3300     		.short	51
 12505 0090 0406     		.short	1540
 12506 0092 0B05     		.short	1291
 12507 0094 1606     		.short	1558
 12508 0096 3300     		.short	51
 12509 0098 3300     		.short	51
 12510 009a 1206     		.short	1554
 12511 009c 1306     		.short	1555
 12512 009e 2F05     		.short	1327
 12513 00a0 04A8     		.short	-22524
 12514 00a2 3300     		.short	51
 12515 00a4 3300     		.short	51
 12516 00a6 3300     		.short	51
 12517 00a8 05A8     		.short	-22523
 12518 00aa 3300     		.short	51
 12519 00ac 3300     		.short	51
 12520 00ae 3300     		.short	51
 12521 00b0 06A8     		.short	-22522
 12522 00b2 3300     		.short	51
 12523 00b4 3300     		.short	51
 12524 00b6 3300     		.short	51
 12525 00b8 0306     		.short	1539
 12526 00ba 0A05     		.short	1290
 12527 00bc 1605     		.short	1302
 12528 00be 1605     		.short	1302
 12529 00c0 3300     		.short	51
 12530 00c2 3300     		.short	51
 12531 00c4 3300     		.short	51
 12532 00c6 3300     		.short	51
 12533 00c8 01A8     		.short	-22527
 12534 00ca 0000     		.short	0
 12535 00cc 0100     		.short	1
 12536 00ce 3300     		.short	51
 12537 00d0 02A8     		.short	-22526
 12538 00d2 3300     		.short	51
 12539 00d4 3300     		.short	51
 12540 00d6 3300     		.short	51
 12541 00d8 03A8     		.short	-22525
 12542 00da 3300     		.short	51
 12543 00dc 3300     		.short	51
 12544 00de 3300     		.short	51
 12545 00e0 0206     		.short	1538
 12546 00e2 3300     		.short	51
 12547 00e4 3300     		.short	51
 12548 00e6 3300     		.short	51
ARM GAS  /tmp/cceb4mPP.s 			page 340


 12549 00e8 3300     		.short	51
 12550 00ea 3300     		.short	51
 12551 00ec 3300     		.short	51
 12552 00ee 0201     		.short	258
 12553 00f0 00A8     		.short	-22528
 12554 00f2 0505     		.short	1285
 12555 00f4 0605     		.short	1286
 12556 00f6 3300     		.short	51
 12557 00f8 B801     		.short	440
 12558 00fa 0405     		.short	1284
 12559 00fc 0005     		.short	1280
 12560 00fe 3300     		.short	51
 12561 0100 3300     		.short	51
 12562 0102 3300     		.short	51
 12563 0104 3300     		.short	51
 12564 0106 3300     		.short	51
 12565 0108 0106     		.short	1537
 12566 010a 3300     		.short	51
 12567 010c 3300     		.short	51
 12568 010e 3300     		.short	51
 12569 0110 0001     		.short	256
 12570 0112 0001     		.short	256
 12571 0114 0001     		.short	256
 12572 0116 0001     		.short	256
 12573              		.section	.rodata.op_map.9294,"a"
 12574              		.align	2
 12575              		.set	.LANCHOR13,. + 0
 12578              	op_map.9294:
 12579 0000 2A27     		.ascii	"*'"
 12580 0002 2B28     		.ascii	"+("
 12581 0004 2C29     		.ascii	",)"
 12582              		.section	.rodata.op_map.9309,"a"
 12583              		.align	2
 12584              		.set	.LANCHOR14,. + 0
 12587              	op_map.9309:
 12588 0000 1A02     		.short	538
 12589 0002 7B02     		.short	635
 12590 0004 1B02     		.short	539
 12591 0006 7A02     		.short	634
 12592 0008 1C02     		.short	540
 12593 000a 3300     		.short	51
 12594              		.section	.rodata.op_map2.9250,"a"
 12595              		.align	2
 12596              		.set	.LANCHOR20,. + 0
 12599              	op_map2.9250:
 12600 0000 3300     		.short	51
 12601 0002 3300     		.short	51
 12602 0004 0003     		.short	768
 12603 0006 0A02     		.short	522
 12604              		.section	.rodata.opcode_breaks,"a"
 12605              		.align	2
 12606              		.set	.LANCHOR7,. + 0
 12609              	opcode_breaks:
 12610 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 12610      0C992F
 12611              		.section	.rodata.prob_catalogue,"a"
 12612              		.align	2
ARM GAS  /tmp/cceb4mPP.s 			page 341


 12615              	prob_catalogue:
 12616 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 12616      44561575 
 12616      9D595013 
 12616      F57D414E 
 12616      55D4E93B 
 12617 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 12617      15955355 
 12617      55459956 
 12617      53D4E591 
 12617      50525485 
 12618 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 12618      85474D95 
 12618      C4DD384F 
 12618      53C5793E 
 12618      569304D1 
 12619 0043 B0       		.ascii	"\260"
 12620              		.section	.rodata.prog_catalogue,"a"
 12621              		.align	2
 12624              	prog_catalogue:
 12625 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 12625      791D4781 
 12625      C8742A31 
 12625      9B4042B3 
 12625      2CE1BA92 
 12626 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
 12626      DA332D1B 
 12626      36CFC28E 
 12626      2390E738 
 12626      CE8C
 12627 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 12627      B0D0DC39 
 12627      47039B09 
 12627      ACCDF1D8 
 12627      CD
 12628 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 12628      B22C0E1B 
 12628      18D20DEB 
 12628      2302A4
 12629 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 12629      CBA8AA3C 
 12629      00AE2B6F 
 12629      FC58
 12630              		.section	.rodata.program_xfcn,"a"
 12631              		.align	2
 12634              	program_xfcn:
 12635 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 12635      F33057D5 
 12635      FAF53D8A 
 12635      23B5816B 
 12635      DBE259BD 
 12636 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 12636      425D12E4 
 12636      BD8341AF 
 12636      6434F569 
 12636      D21489
 12637 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
ARM GAS  /tmp/cceb4mPP.s 			page 342


 12637      95A664B0 
 12637      E6F1756A 
 12637      0946D105 
 12637      7019A4
 12638 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 12638      A65D965C 
 12638      994601AC 
 12638      5C5BB30D 
 12638      AD
 12639 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 12639      95BB6EF3 
 12639      DEEEBC30 
 12639      5BD301C0 
 12639      8683
 12640 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 12640      2BCB0F28 
 12640      DB2611B3 
 12640      0D573329 
 12640      0841D0
 12641 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 12641      1B75FCA0 
 12641      27AB82A8 
 12641      9FADEB5A 
 12641      E6
 12642 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
 12642      D8A12AD9 
 12642      94919D67 
 12642      99B671
 12643 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 12643      19C5689B 
 12643      F5B56A68 
 12643      5C70
 12644              		.section	.rodata.smap.9174,"a"
 12645              		.align	2
 12646              		.set	.LANCHOR16,. + 0
 12649              	smap.9174:
 12650 0000 00010002 		.ascii	"\000\001\000\002"
 12651              		.section	.rodata.stats_catalogue,"a"
 12652              		.align	2
 12655              	stats_catalogue:
 12656 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 12656      5D17C971 
 12656      58611685 
 12656      95A05417 
 12656      85
 12657 0011 514C575A 		.ascii	"QLWZ\200"
 12657      80
 12658              		.section	.rodata.sums_catalogue,"a"
 12659              		.align	2
 12662              	sums_catalogue:
 12663 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 12663      4A1384C1 
 12663      20451104 
 12663      F11C4911 
 12663      8500
 12664              		.section	.rodata.test_catalogue,"a"
 12665              		.align	2
ARM GAS  /tmp/cceb4mPP.s 			page 343


 12668              	test_catalogue:
 12669 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 12669      EB2FCBDB 
 12669      96E9BAEE 
 12669      A2F2E4B9 
 12670 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 12670      2EEFEB4C 
 12670      9D368B82 
 12670      F8BA350B 
 12671 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 12671      2C1354D6 
 12671      AFEC3B08 
 12671      B73C40
 12672              		.text
 12673              	.Letext0:
 12674              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 12675              		.file 3 "dmcp/dmcp.h"
 12676              		.file 4 "src/decNumber/decContext.h"
 12677              		.file 5 "src/decNumber/decNumber.h"
 12678              		.file 6 "src/decNumber/decimal64.h"
 12679              		.file 7 "src/decNumber/decimal128.h"
 12680              		.file 8 "src/xeq.h"
 12681              		.file 9 "src/data.h"
 12682              		.file 10 "src/keys.h"
 12683              		.file 11 "src/display.h"
 12684              		.file 12 "src/consts.h"
 12685              		.file 13 "src/storage.h"
 12686              		.file 14 "src/stats.h"
 12687              		.file 15 "src/catalogues.h"
 12688              		.file 16 "src/lcd.h"
 12689              		.file 17 "src/int.h"
ARM GAS  /tmp/cceb4mPP.s 			page 344


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/cceb4mPP.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/cceb4mPP.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/cceb4mPP.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/cceb4mPP.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/cceb4mPP.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/cceb4mPP.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/cceb4mPP.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/cceb4mPP.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/cceb4mPP.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/cceb4mPP.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/cceb4mPP.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/cceb4mPP.s:364    .text.init_cat:0000000000000000 $t
     /tmp/cceb4mPP.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/cceb4mPP.s:696    .text.init_cat:00000000000000ec $d
     /tmp/cceb4mPP.s:702    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/cceb4mPP.s:709    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/cceb4mPP.s:794    .text.advance_to_previous_label:000000000000004c $d
     /tmp/cceb4mPP.s:799    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/cceb4mPP.s:806    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/cceb4mPP.s:860    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/cceb4mPP.s:867    .text.init_arg.part.0:0000000000000000 $t
     /tmp/cceb4mPP.s:874    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/cceb4mPP.s:916    .text.init_arg.part.0:0000000000000024 $d
     /tmp/cceb4mPP.s:921    .text.reset_arg:0000000000000000 $t
     /tmp/cceb4mPP.s:928    .text.reset_arg:0000000000000000 reset_arg
     /tmp/cceb4mPP.s:972    .text.reset_arg:0000000000000018 $d
     /tmp/cceb4mPP.s:977    .text.arg_eval:0000000000000000 $t
     /tmp/cceb4mPP.s:984    .text.arg_eval:0000000000000000 arg_eval
     /tmp/cceb4mPP.s:1106   .text.arg_eval:0000000000000074 $d
     /tmp/cceb4mPP.s:1113   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/cceb4mPP.s:1120   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/cceb4mPP.s:1178   .text.process_arg_shuffle:000000000000002c $d
     /tmp/cceb4mPP.s:1183   .text.arg_digit:0000000000000000 $t
     /tmp/cceb4mPP.s:1190   .text.arg_digit:0000000000000000 arg_digit
     /tmp/cceb4mPP.s:1415   .text.arg_digit:00000000000000c8 $d
     /tmp/cceb4mPP.s:1423   .text.intltr:0000000000000000 $t
     /tmp/cceb4mPP.s:1430   .text.intltr:0000000000000000 intltr
     /tmp/cceb4mPP.s:1493   .text.intltr:0000000000000030 $d
     /tmp/cceb4mPP.s:1499   .text.set_window:0000000000000000 $t
     /tmp/cceb4mPP.s:1506   .text.set_window:0000000000000000 set_window
     /tmp/cceb4mPP.s:1653   .text.set_window:000000000000008c $d
     /tmp/cceb4mPP.s:1660   .text.arg_storcl:0000000000000000 $t
     /tmp/cceb4mPP.s:1667   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/cceb4mPP.s:1783   .text.arg_storcl:0000000000000040 $d
     /tmp/cceb4mPP.s:1788   .text.process_arg:0000000000000000 $t
     /tmp/cceb4mPP.s:1795   .text.process_arg:0000000000000000 process_arg
     /tmp/cceb4mPP.s:2016   .text.process_arg:000000000000009c $d
     /tmp/cceb4mPP.s:2063   .text.process_arg:00000000000000f8 $t
     /tmp/cceb4mPP.s:2096   .text.process_arg:000000000000011e $d
     /tmp/cceb4mPP.s:2540   .text.process_arg:00000000000002b8 $d
     /tmp/cceb4mPP.s:2552   .text.process_arg:00000000000002cc $t
     /tmp/cceb4mPP.s:2925   .text.process_arg:0000000000000474 $d
     /tmp/cceb4mPP.s:2930   .text.cur_shift:0000000000000000 $t
     /tmp/cceb4mPP.s:2938   .text.cur_shift:0000000000000000 cur_shift
ARM GAS  /tmp/cceb4mPP.s 			page 345


     /tmp/cceb4mPP.s:2966   .text.cur_shift:0000000000000010 $d
     /tmp/cceb4mPP.s:2971   .text.reset_shift:0000000000000000 $t
     /tmp/cceb4mPP.s:2979   .text.reset_shift:0000000000000000 reset_shift
     /tmp/cceb4mPP.s:3040   .text.reset_shift:0000000000000014 $d
     /tmp/cceb4mPP.s:3045   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/cceb4mPP.s:3053   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/cceb4mPP.s:3081   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/cceb4mPP.s:3086   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/cceb4mPP.s:3094   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/cceb4mPP.s:3152   .text.row_column_to_keycode:000000000000003c $d
     /tmp/cceb4mPP.s:3157   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/cceb4mPP.s:3165   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/cceb4mPP.s:3201   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/cceb4mPP.s:3207   .text.init_state:0000000000000000 $t
     /tmp/cceb4mPP.s:3215   .text.init_state:0000000000000000 init_state
     /tmp/cceb4mPP.s:3321   .text.init_state:000000000000005c $d
     /tmp/cceb4mPP.s:3327   .text.soft_init_state:0000000000000000 $t
     /tmp/cceb4mPP.s:3335   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/cceb4mPP.s:3430   .text.soft_init_state:0000000000000048 $d
     /tmp/cceb4mPP.s:3436   .text.current_catalogue_max:0000000000000000 $t
     /tmp/cceb4mPP.s:3444   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/cceb4mPP.s:3465   .text.current_catalogue_max:000000000000000c $d
     /tmp/cceb4mPP.s:3471   .text.current_catalogue:0000000000000000 $t
     /tmp/cceb4mPP.s:3479   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/cceb4mPP.s:3735   .text.current_catalogue:00000000000000c8 $d
     /tmp/cceb4mPP.s:3745   .text.process_catalogue:0000000000000000 $t
     /tmp/cceb4mPP.s:3752   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/cceb4mPP.s:4084   .text.process_catalogue:0000000000000100 $d
     /tmp/cceb4mPP.s:4116   .text.process_catalogue:0000000000000120 $t
     /tmp/cceb4mPP.s:4624   .text.process_catalogue:00000000000002dc $d
     /tmp/cceb4mPP.s:4645   .text.process_catalogue:00000000000002fc $t
     /tmp/cceb4mPP.s:4675   .text.find_pos:0000000000000000 $t
     /tmp/cceb4mPP.s:4683   .text.find_pos:0000000000000000 find_pos
     /tmp/cceb4mPP.s:4856   .text.find_pos:0000000000000080 $d
     /tmp/cceb4mPP.s:4862   .text.get_alpha_state:0000000000000000 $t
     /tmp/cceb4mPP.s:4870   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/cceb4mPP.s:4902   .text.get_alpha_state:0000000000000020 $d
     /tmp/cceb4mPP.s:4908   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/cceb4mPP.s:4918   .text.process_keycode:0000000000000000 $t
     /tmp/cceb4mPP.s:4926   .text.process_keycode:0000000000000000 process_keycode
     /tmp/cceb4mPP.s:5544   .text.process_keycode:00000000000002a8 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/cceb4mPP.s:5563   .text.process_keycode:00000000000002e8 $t
     /tmp/cceb4mPP.s:5680   .text.process_keycode:0000000000000362 $d
     /tmp/cceb4mPP.s:5727   .text.process_keycode:00000000000003be $t
     /tmp/cceb4mPP.s:6251   .text.process_keycode:00000000000005a0 $d
     /tmp/cceb4mPP.s:6260   .text.process_keycode:00000000000005c4 $t
     /tmp/cceb4mPP.s:6328   .text.process_keycode:0000000000000614 $d
     /tmp/cceb4mPP.s:6351   .text.process_keycode:0000000000000658 $t
     /tmp/cceb4mPP.s:6430   .text.process_keycode:00000000000006bc $d
     /tmp/cceb4mPP.s:6460   .text.process_keycode:00000000000006e0 $d
     /tmp/cceb4mPP.s:6504   .text.process_keycode:000000000000078c $t
     /tmp/cceb4mPP.s:6813   .text.process_keycode:00000000000008a4 $d
     /tmp/cceb4mPP.s:6822   .text.process_keycode:00000000000008c8 $t
ARM GAS  /tmp/cceb4mPP.s 			page 346


     /tmp/cceb4mPP.s:6918   .text.process_keycode:0000000000000924 $d
     /tmp/cceb4mPP.s:6948   .text.process_keycode:000000000000098c $d
     /tmp/cceb4mPP.s:6954   .text.process_keycode:000000000000099c $t
     /tmp/cceb4mPP.s:6990   .text.process_keycode:00000000000009d0 $d
     /tmp/cceb4mPP.s:6994   .text.process_keycode:00000000000009e0 $t
     /tmp/cceb4mPP.s:8011   .text.process_keycode:0000000000000d78 $d
     /tmp/cceb4mPP.s:8026   .text.process_keycode:0000000000000d9c $t
     /tmp/cceb4mPP.s:8379   .text.process_keycode:0000000000000ec0 $d
     /tmp/cceb4mPP.s:8414   .text.process_keycode:0000000000000f4c $t
     /tmp/cceb4mPP.s:8649   .text.process_keycode:0000000000001034 $d
     /tmp/cceb4mPP.s:8669   .text.process_keycode:0000000000001084 $t
     /tmp/cceb4mPP.s:8721   .text.process_keycode:00000000000010c8 $d
     /tmp/cceb4mPP.s:8750   .text.process_keycode:00000000000010dc $t
     /tmp/cceb4mPP.s:8882   .text.process_keycode:0000000000001148 $d
     /tmp/cceb4mPP.s:8900   .text.process_keycode:0000000000001190 $t
     /tmp/cceb4mPP.s:9316   .text.process_keycode:00000000000012da $d
     /tmp/cceb4mPP.s:9350   .text.process_keycode:000000000000131e $t
     /tmp/cceb4mPP.s:9629   .text.process_keycode:0000000000001410 $d
     /tmp/cceb4mPP.s:9645   .text.process_keycode:0000000000001428 $t
     /tmp/cceb4mPP.s:9683   .text.process_keycode:000000000000144c $d
     /tmp/cceb4mPP.s:9718   .text.process_keycode:00000000000014d4 $t
     /tmp/cceb4mPP.s:10060  .text.process_keycode:00000000000015be $d
     /tmp/cceb4mPP.s:10365  .text.process_keycode:000000000000170c $d
     /tmp/cceb4mPP.s:10381  .text.process_keycode:000000000000172c $t
     /tmp/cceb4mPP.s:10920  .text.process_keycode:0000000000001974 $d
     /tmp/cceb4mPP.s:10962  .text.process_keycode:0000000000001a18 $t
     /tmp/cceb4mPP.s:11373  .text.process_keycode:0000000000001bb8 $d
     /tmp/cceb4mPP.s:11383  .text.process_keycode:0000000000001bc4 $t
     /tmp/cceb4mPP.s:11782  .text.process_keycode:0000000000001d34 $d
     /tmp/cceb4mPP.s:11793  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/cceb4mPP.s:11801  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/cceb4mPP.s:11957  .text.process_keycode_with_shift:0000000000000074 $d
     /tmp/cceb4mPP.s:11972  .bss.was_paused.9650:0000000000000000 $d
     /tmp/cceb4mPP.s:11976  .bss.was_paused.9650:0000000000000000 was_paused.9650
     /tmp/cceb4mPP.s:11979  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/cceb4mPP.s:11982  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/cceb4mPP.s:11985  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:11988  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/cceb4mPP.s:11992  .rodata.alpha_compares:0000000000000000 $d
     /tmp/cceb4mPP.s:11995  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/cceb4mPP.s:11998  .rodata.alpha_letters:0000000000000000 $d
     /tmp/cceb4mPP.s:12002  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/cceb4mPP.s:12008  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/cceb4mPP.s:12012  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/cceb4mPP.s:12018  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/cceb4mPP.s:12021  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/cceb4mPP.s:12025  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/cceb4mPP.s:12028  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/cceb4mPP.s:12031  .rodata.alphamap.9182:0000000000000000 $d
     /tmp/cceb4mPP.s:12035  .rodata.alphamap.9182:0000000000000000 alphamap.9182
     /tmp/cceb4mPP.s:12075  .rodata.amap.9173:0000000000000000 $d
     /tmp/cceb4mPP.s:12079  .rodata.amap.9173:0000000000000000 amap.9173
     /tmp/cceb4mPP.s:12093  .rodata.catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12096  .rodata.catalogue:0000000000000000 catalogue
     /tmp/cceb4mPP.s:12105  .rodata.catalogue_sizes.9448:0000000000000000 $d
     /tmp/cceb4mPP.s:12109  .rodata.catalogue_sizes.9448:0000000000000000 catalogue_sizes.9448
     /tmp/cceb4mPP.s:12112  .rodata.catalogues.9456:0000000000000000 $d
ARM GAS  /tmp/cceb4mPP.s 			page 347


     /tmp/cceb4mPP.s:12116  .rodata.catalogues.9456:0000000000000000 catalogues.9456
     /tmp/cceb4mPP.s:12201  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/cceb4mPP.s:12655  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/cceb4mPP.s:12615  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/cceb4mPP.s:12218  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/cceb4mPP.s:12624  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/cceb4mPP.s:12634  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/cceb4mPP.s:12668  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/cceb4mPP.s:12264  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/cceb4mPP.s:12662  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/cceb4mPP.s:12257  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/cceb4mPP.s:12139  .rodata.cmap.9172:0000000000000000 $d
     /tmp/cceb4mPP.s:12143  .rodata.cmap.9172:0000000000000000 cmap.9172
     /tmp/cceb4mPP.s:12169  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12173  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/cceb4mPP.s:12180  .rodata.conv_mapping.9495:0000000000000000 $d
     /tmp/cceb4mPP.s:12184  .rodata.conv_mapping.9495:0000000000000000 conv_mapping.9495
     /tmp/cceb4mPP.s:12198  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12205  .rodata.disp.9310:0000000000000000 $d
     /tmp/cceb4mPP.s:12209  .rodata.disp.9310:0000000000000000 disp.9310
     /tmp/cceb4mPP.s:12215  .rodata.int_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12225  .rodata.linear_key_map.9143:0000000000000000 $d
     /tmp/cceb4mPP.s:12229  .rodata.linear_key_map.9143:0000000000000000 linear_key_map.9143
     /tmp/cceb4mPP.s:12235  .rodata.linear_key_map.9147:0000000000000000 $d
     /tmp/cceb4mPP.s:12239  .rodata.linear_key_map.9147:0000000000000000 linear_key_map.9147
     /tmp/cceb4mPP.s:12245  .rodata.map.9159:0000000000000000 $d
     /tmp/cceb4mPP.s:12249  .rodata.map.9159:0000000000000000 map.9159
     /tmp/cceb4mPP.s:12254  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12261  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12270  .rodata.op_map.9226:0000000000000000 $d
     /tmp/cceb4mPP.s:12274  .rodata.op_map.9226:0000000000000000 op_map.9226
     /tmp/cceb4mPP.s:12311  .rodata.op_map.9249:0000000000000000 $d
     /tmp/cceb4mPP.s:12315  .rodata.op_map.9249:0000000000000000 op_map.9249
     /tmp/cceb4mPP.s:12387  .rodata.op_map.9272:0000000000000000 $d
     /tmp/cceb4mPP.s:12391  .rodata.op_map.9272:0000000000000000 op_map.9272
     /tmp/cceb4mPP.s:12428  .rodata.op_map.9282:0000000000000000 $d
     /tmp/cceb4mPP.s:12432  .rodata.op_map.9282:0000000000000000 op_map.9282
     /tmp/cceb4mPP.s:12574  .rodata.op_map.9294:0000000000000000 $d
     /tmp/cceb4mPP.s:12578  .rodata.op_map.9294:0000000000000000 op_map.9294
     /tmp/cceb4mPP.s:12583  .rodata.op_map.9309:0000000000000000 $d
     /tmp/cceb4mPP.s:12587  .rodata.op_map.9309:0000000000000000 op_map.9309
     /tmp/cceb4mPP.s:12595  .rodata.op_map2.9250:0000000000000000 $d
     /tmp/cceb4mPP.s:12599  .rodata.op_map2.9250:0000000000000000 op_map2.9250
     /tmp/cceb4mPP.s:12605  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/cceb4mPP.s:12609  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/cceb4mPP.s:12612  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12621  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12631  .rodata.program_xfcn:0000000000000000 $d
     /tmp/cceb4mPP.s:12645  .rodata.smap.9174:0000000000000000 $d
     /tmp/cceb4mPP.s:12649  .rodata.smap.9174:0000000000000000 smap.9174
     /tmp/cceb4mPP.s:12652  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12659  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:12665  .rodata.test_catalogue:0000000000000000 $d
     /tmp/cceb4mPP.s:2100   .text.process_arg:0000000000000121 $d
     /tmp/cceb4mPP.s:2100   .text.process_arg:0000000000000122 $t
     /tmp/cceb4mPP.s:6449   .text.process_keycode:00000000000006cf $d
     /tmp/cceb4mPP.s:6449   .text.process_keycode:00000000000006d0 $t
ARM GAS  /tmp/cceb4mPP.s 			page 348


     /tmp/cceb4mPP.s:10101  .text.process_keycode:00000000000015e7 $d
     /tmp/cceb4mPP.s:10101  .text.process_keycode:00000000000015e8 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
local_regs_rarg
num_arg_digits
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
xeq_xrom
is_key_pressed
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
set_running_off
clr_dot
finish_RPN
xeq_sst_bst
message
delprog
set_menu
display_current_menu
stoprog
prt
scopy_char
TraceBuffer
clpall
ARM GAS  /tmp/cceb4mPP.s 			page 349


clrprog
reset
clrall
set_pc
find_char
set_last_menu
find_user_pc
cmdgtocommon
global_regs
local_regs
alen

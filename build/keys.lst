ARM GAS  /tmp/ccvq0xdJ.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccvq0xdJ.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifdef INFRARED
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/ccvq0xdJ.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/ccvq0xdJ.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/ccvq0xdJ.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/ccvq0xdJ.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/ccvq0xdJ.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccvq0xdJ.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  '!',  0041, 0000, '?',  '!',  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0006, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/ccvq0xdJ.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/ccvq0xdJ.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 638:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 639:src/keys.c    **** #endif							//JM5
 640:src/keys.c    **** 
 641:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 642:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 643:src/keys.c    **** #endif							//JM5
 644:src/keys.c    **** 
 645:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 646:src/keys.c    **** 	UState.show_y = 1;
 647:src/keys.c    **** #endif
 648:src/keys.c    **** 
 649:src/keys.c    **** #ifdef DEFAULT_TO_J
 650:src/keys.c    **** 	SET_CPX_J;
 651:src/keys.c    **** #endif
 652:src/keys.c    **** 
 653:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 654:src/keys.c    **** 	cpx_nop(OP_CYES);
 655:src/keys.c    **** #endif
 656:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 13


 657:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 658:src/keys.c    **** 	cpx_nop(OP_CYES);
 659:src/keys.c    **** 	cpx_nop(OP_C_ON);
 660:src/keys.c    **** #endif
 661:src/keys.c    **** 
 662:src/keys.c    **** #ifdef ENTRY_RPN
 663:src/keys.c    **** 
 664:src/keys.c    **** #ifdef DEFAULT_TO_ENTRY_RPN
 665:src/keys.c    **** 	ENTRY_RPN_ON;
 666:src/keys.c    **** #else
 667:src/keys.c    **** 	ENTRY_RPN_OFF;
 668:src/keys.c    **** #endif
 669:src/keys.c    **** 
 670:src/keys.c    **** #endif
 671:src/keys.c    **** 	
 672:src/keys.c    **** #endif
 673:src/keys.c    **** 
 674:src/keys.c    **** 	State2.test = TST_NONE;
 675:src/keys.c    **** 	State2.runmode = 1;
 676:src/keys.c    **** 	update_program_bounds(1);
 677:src/keys.c    **** 	set_lift();
 678:src/keys.c    **** 
 679:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 680:src/keys.c    **** 	// but must not be cleared.
 681:src/keys.c    **** 	Voltage = v;
 682:src/keys.c    **** 	LastKey = k;
 683:src/keys.c    **** #ifndef REALBUILD
 684:src/keys.c    **** 	State2.trace = b;
 685:src/keys.c    **** 	State2.flags = a;
 686:src/keys.c    **** #else
 687:src/keys.c    **** 	TestFlag = t;
 688:src/keys.c    **** #endif
 689:src/keys.c    **** 	ShowRegister = regX_idx;
 690:src/keys.c    **** }
 691:src/keys.c    **** 
 692:src/keys.c    **** void soft_init_state(void) {
 693:src/keys.c    **** 	int soft;
 694:src/keys.c    **** 	unsigned int runmode;
 695:src/keys.c    **** 	unsigned int alphas;
 696:src/keys.c    **** 
 697:src/keys.c    **** 	if (CmdLineLength) {
 698:src/keys.c    **** 		CmdLineLength = 0;
 699:src/keys.c    **** 		CmdLineEex = 0;
 700:src/keys.c    **** 		CmdLineDot = 0;
 701:src/keys.c    **** 		return;
 702:src/keys.c    **** 	}
 703:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 704:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 705:src/keys.c    **** 	runmode = State2.runmode;
 706:src/keys.c    **** 	alphas = State2.alphas;
 707:src/keys.c    **** 	init_state();
 708:src/keys.c    **** 	if (soft) {
 709:src/keys.c    **** 		State2.runmode = runmode;
 710:src/keys.c    **** 		State2.alphas = alphas;
 711:src/keys.c    **** 	}
 712:src/keys.c    **** }
 713:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 14


 714:src/keys.c    **** static int check_confirm(int op) {
 715:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 716:src/keys.c    **** 		const int nilop = argKIND(op);
 717:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 718:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 719:src/keys.c    **** 			return STATE_UNFINISHED;
 720:src/keys.c    **** 		}
 721:src/keys.c    **** #ifndef DM42		
 722:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 723:src/keys.c    **** #endif
 724:src/keys.c    **** #ifdef DM42
 725:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 726:src/keys.c    **** #endif
 727:src/keys.c    **** #ifdef INFRARED
 728:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 729:src/keys.c    **** #endif
 730:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 731:src/keys.c    **** //			|| nilop == OP_STOPWATCH // so it can go in a user menu
 732:src/keys.c    **** #endif
 733:src/keys.c    **** 		) {
 734:src/keys.c    **** 			// These commands are not programmable
 735:src/keys.c    **** 			NonProgrammable = 1;
 736:src/keys.c    **** 		}
 737:src/keys.c    **** 	}
 738:src/keys.c    **** 	return op;
 739:src/keys.c    **** }
 740:src/keys.c    **** 
 741:src/keys.c    **** static void set_smode(const enum single_disp d) {
 742:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 743:src/keys.c    **** }
 744:src/keys.c    **** 
 745:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 746:src/keys.c    **** 	const int code = 100 + n;
 747:src/keys.c    **** 	unsigned int pc = state_pc();
 748:src/keys.c    **** 
 749:src/keys.c    **** 	if (State2.runmode) {
 750:src/keys.c    **** 		if (isXROM(pc))
 751:src/keys.c    **** 			pc = 1;
 752:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 753:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 754:src/keys.c    **** 	}
 755:src/keys.c    **** 	return dflt;
 756:src/keys.c    **** }
 757:src/keys.c    **** 
 758:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 759:src/keys.c    ****  * as digits.
 760:src/keys.c    ****  */
 761:src/keys.c    **** static int intltr(int d) {
 762:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 763:src/keys.c    **** }
 764:src/keys.c    **** 
 765:src/keys.c    **** /*
 766:src/keys.c    ****  *  Process a key code in the unshifted mode.
 767:src/keys.c    ****  */
 768:src/keys.c    **** static int process_normal(const keycode c)
 769:src/keys.c    **** {
 770:src/keys.c    **** 	static const unsigned short int op_map[] = {
ARM GAS  /tmp/ccvq0xdJ.s 			page 15


 771:src/keys.c    **** 		// Row 1
 772:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 773:src/keys.c    **** 		OP_MON  | OP_RECIP,
 774:src/keys.c    **** 		OP_DYA  | OP_POW,
 775:src/keys.c    **** 		OP_MON  | OP_SQRT,
 776:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 777:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 778:src/keys.c    **** 		// Row 2
 779:src/keys.c    **** 		RARG_STO,
 780:src/keys.c    **** 		RARG_RCL,
 781:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 782:src/keys.c    **** 		// Row 3
 783:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 784:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 785:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 786:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 787:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 788:src/keys.c    **** 		// Row 4
 789:src/keys.c    **** 		RARG_XEQ,
 790:src/keys.c    **** 		OP_SPEC | OP_7,
 791:src/keys.c    **** 		OP_SPEC | OP_8,
 792:src/keys.c    **** 		OP_SPEC | OP_9,
 793:src/keys.c    **** 		OP_DYA  | OP_DIV,
 794:src/keys.c    **** 		// Row 5
 795:src/keys.c    **** 		STATE_BST,
 796:src/keys.c    **** 		OP_SPEC | OP_4,
 797:src/keys.c    **** 		OP_SPEC | OP_5,
 798:src/keys.c    **** 		OP_SPEC | OP_6,
 799:src/keys.c    **** 		OP_DYA  | OP_MUL,
 800:src/keys.c    **** 		// Row 6
 801:src/keys.c    **** 		STATE_SST,		// SST
 802:src/keys.c    **** 		OP_SPEC | OP_1,
 803:src/keys.c    **** 		OP_SPEC | OP_2,
 804:src/keys.c    **** 		OP_SPEC | OP_3,
 805:src/keys.c    **** 		OP_DYA  | OP_SUB,
 806:src/keys.c    **** 		// Row 7
 807:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 808:src/keys.c    **** 		OP_SPEC | OP_0,
 809:src/keys.c    **** 		OP_SPEC | OP_DOT,
 810:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 811:src/keys.c    **** 		OP_DYA  | OP_ADD,
 812:src/keys.c    **** #ifdef DM42
 813:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 814:src/keys.c    **** #endif
 815:src/keys.c    **** 	};
 816:src/keys.c    **** 
 817:src/keys.c    **** 	int lc = keycode_to_linear(c);
 818:src/keys.c    **** 	int op = op_map[lc];
 819:src/keys.c    **** 	
 820:src/keys.c    **** 	// The switch handles all the special cases
 821:src/keys.c    **** #ifdef DM42
 822:src/keys.c    **** 	int op_int;
 823:src/keys.c    **** 	if (UState.intm) {
 824:src/keys.c    **** 	  switch (c) {
 825:src/keys.c    **** 	  case K00:
 826:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 827:src/keys.c    **** 	    if (intltr(10)) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 16


 828:src/keys.c    **** 	      return op;
 829:src/keys.c    **** 	    }
 830:src/keys.c    **** 	    else {
 831:src/keys.c    **** 	      return check_f_key(0, op);
 832:src/keys.c    **** 	    }
 833:src/keys.c    **** 	  case K01:
 834:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 835:src/keys.c    **** 	    if (intltr(11)) {
 836:src/keys.c    **** 	      return op;
 837:src/keys.c    **** 	    }
 838:src/keys.c    **** 	    else {
 839:src/keys.c    **** 	      return check_f_key(1, op);
 840:src/keys.c    **** 	    }
 841:src/keys.c    **** 	  case K03:
 842:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 843:src/keys.c    **** 	    if (intltr(12)) {
 844:src/keys.c    **** 	      return op_int;
 845:src/keys.c    **** 	    }
 846:src/keys.c    **** 	    else {
 847:src/keys.c    **** 	      return check_f_key(2, op);
 848:src/keys.c    **** 	    }
 849:src/keys.c    **** 	  case K30:
 850:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 851:src/keys.c    **** 	    if (intltr(15)) {
 852:src/keys.c    **** 	      return op_int;
 853:src/keys.c    **** 	    }
 854:src/keys.c    **** 	  default:;
 855:src/keys.c    **** 	  }
 856:src/keys.c    **** 	}
 857:src/keys.c    **** #endif  
 858:src/keys.c    **** 
 859:src/keys.c    **** 	switch (c) {
 860:src/keys.c    **** #ifdef DM42
 861:src/keys.c    **** 	case K00:
 862:src/keys.c    **** 		return check_f_key(0, op);
 863:src/keys.c    **** 	case K01:
 864:src/keys.c    **** 		return check_f_key(1, op);
 865:src/keys.c    **** 	case K03:
 866:src/keys.c    **** 		return check_f_key(2, op);
 867:src/keys.c    **** #else
 868:src/keys.c    **** 	case K00:
 869:src/keys.c    **** 	case K01:
 870:src/keys.c    **** 		if (UState.intm)
 871:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 872:src/keys.c    **** 	case K02:
 873:src/keys.c    **** 	case K03:
 874:src/keys.c    **** 		if (intltr(lc + 10)) {
 875:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 876:src/keys.c    **** 			return op;
 877:src/keys.c    **** 		}
 878:src/keys.c    **** 		return check_f_key(lc, op);
 879:src/keys.c    **** #endif		
 880:src/keys.c    **** 	case K_ARROW:
 881:src/keys.c    **** #ifndef DM42
 882:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 883:src/keys.c    **** 		if (intltr(14))
 884:src/keys.c    **** 			return op;
ARM GAS  /tmp/ccvq0xdJ.s 			page 17


 885:src/keys.c    **** #else
 886:src/keys.c    **** 		if (UState.intm)
 887:src/keys.c    **** 			return op;
 888:src/keys.c    **** #endif
 889:src/keys.c    **** #endif		
 890:src/keys.c    **** 		if (is_bad_cmdline())
 891:src/keys.c    **** 			return STATE_UNFINISHED;
 892:src/keys.c    **** 		process_cmdline_set_lift();
 893:src/keys.c    **** 		State2.arrow = 1;
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 		set_menu (M_Arrow); // arrow menu
 896:src/keys.c    **** 		display_current_menu ();
 897:src/keys.c    **** 		lcd_refresh ();
 898:src/keys.c    **** #else
 899:src/keys.c    **** 		set_shift(SHIFT_G);
 900:src/keys.c    **** #endif
 901:src/keys.c    **** 		break;
 902:src/keys.c    **** 
 903:src/keys.c    **** 	case K_CMPLX:
 904:src/keys.c    **** #ifdef DM42
 905:src/keys.c    **** 	  if (UState.intm)
 906:src/keys.c    **** 	    break; // return nothing
 907:src/keys.c    **** 	  State2.cmplx = 1;
 908:src/keys.c    **** #else
 909:src/keys.c    **** 	  if (UState.intm)
 910:src/keys.c    **** 	    return op;
 911:src/keys.c    **** 	  State2.cmplx = 1;
 912:src/keys.c    **** #endif
 913:src/keys.c    **** 	  break;
 914:src/keys.c    **** 
 915:src/keys.c    **** 	case K24:				// <-
 916:src/keys.c    **** 		if (State2.disp_temp)
 917:src/keys.c    **** 			return STATE_UNFINISHED;
 918:src/keys.c    **** 		if (State2.runmode)
 919:src/keys.c    **** 			return op;
 920:src/keys.c    **** 		return STATE_BACKSPACE;
 921:src/keys.c    **** 
 922:src/keys.c    **** 	case K10:				// STO
 923:src/keys.c    **** 	case K11:				// RCL
 924:src/keys.c    **** 	case K30:				// XEQ
 925:src/keys.c    **** 		init_arg((enum rarg)op);
 926:src/keys.c    **** 		break;
 927:src/keys.c    **** 
 928:src/keys.c    **** 	default:
 929:src/keys.c    **** 		return op;			// Keys handled by table
 930:src/keys.c    **** 	}
 931:src/keys.c    **** 	return STATE_UNFINISHED;
 932:src/keys.c    **** }
 933:src/keys.c    **** 
 934:src/keys.c    **** 
 935:src/keys.c    **** /*
 936:src/keys.c    ****  *  Process a key code after f or g shift
 937:src/keys.c    ****  */
 938:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 939:src/keys.c    **** 
 940:src/keys.c    **** #define NO_INT 0xf000
 941:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
ARM GAS  /tmp/ccvq0xdJ.s 			page 18


 942:src/keys.c    **** 		// Row 1
 943:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 944:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 945:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 946:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 947:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 948:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 949:src/keys.c    **** 		// Row 2
 950:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 951:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 952:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 953:src/keys.c    **** 		// Row 3
 954:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 955:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 956:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 957:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 958:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 959:src/keys.c    **** 		// Row 4
 960:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 961:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 962:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 963:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 964:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 965:src/keys.c    **** 		// Row 5
 966:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 967:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 968:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 969:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 970:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 971:src/keys.c    **** 		// Row 6
 972:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 973:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 974:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 975:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 976:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 977:src/keys.c    **** 		// Row 7
 978:src/keys.c    **** #ifdef INFRARED
 979:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 980:src/keys.c    **** #else
 981:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 982:src/keys.c    **** #endif
 983:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 984:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 985:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 986:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 987:src/keys.c    **** #ifdef DM42
 988:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 989:src/keys.c    **** #endif
 990:src/keys.c    **** 	};
 991:src/keys.c    **** 
 992:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 993:src/keys.c    **** 		STATE_UNFINISHED,
 994:src/keys.c    **** 		STATE_UNFINISHED,
 995:src/keys.c    **** 		OP_DYA  | OP_POW,
 996:src/keys.c    **** 		OP_MON  | OP_SQRT
 997:src/keys.c    **** 	};
 998:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 19


 999:src/keys.c    **** 	enum shifts shift = reset_shift();
1000:src/keys.c    **** 	int lc = keycode_to_linear(c);
1001:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
1002:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
1003:src/keys.c    **** 	if (no_int)
1004:src/keys.c    **** 		op &= ~NO_INT;
1005:src/keys.c    **** 
1006:src/keys.c    **** 	switch (c) {
1007:src/keys.c    **** 	case K00:
1008:src/keys.c    **** 	  if (! UState.intm) {
1009:src/keys.c    **** 	    //	    print_debug(100,0);
1010:src/keys.c    **** 	    State2.hyp = 1;
1011:src/keys.c    **** 	    State2.dot = op;
1012:src/keys.c    **** 	    // State2.cmplx = 0;
1013:src/keys.c    **** 	    return STATE_UNFINISHED;
1014:src/keys.c    **** 	  }
1015:src/keys.c    **** 	  // fall through
1016:src/keys.c    **** 	case K01:
1017:src/keys.c    **** #ifdef DM42
1018:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1019:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1020:src/keys.c    **** 	  }
1021:src/keys.c    **** 	  break;
1022:src/keys.c    **** #endif
1023:src/keys.c    **** #ifndef DM42
1024:src/keys.c    **** 	case K02:
1025:src/keys.c    **** #endif
1026:src/keys.c    **** 	case K03:
1027:src/keys.c    **** #ifdef DM42
1028:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1029:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1030:src/keys.c    **** 		}
1031:src/keys.c    **** 		break;
1032:src/keys.c    **** #else
1033:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1034:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1035:src/keys.c    **** 		}
1036:src/keys.c    **** 		break;
1037:src/keys.c    **** #endif
1038:src/keys.c    **** 	case K20:				// Alpha
1039:src/keys.c    **** 		if (shift == SHIFT_F) {
1040:src/keys.c    **** 			if (is_bad_cmdline())
1041:src/keys.c    **** 				return STATE_UNFINISHED;
1042:src/keys.c    **** 			process_cmdline_set_lift();
1043:src/keys.c    **** 			State2.alphas = 1;
1044:src/keys.c    **** #ifdef DM42
1045:src/keys.c    **** 			set_menu(M_Alpha);
1046:src/keys.c    **** 			display_current_menu();
1047:src/keys.c    **** #endif
1048:src/keys.c    **** 		}
1049:src/keys.c    **** 		break;
1050:src/keys.c    **** #ifdef DM42
1051:src/keys.c    **** 	case K31:
1052:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
1054:src/keys.c    **** 	  }
1055:src/keys.c    **** 	  break;
ARM GAS  /tmp/ccvq0xdJ.s 			page 20


1056:src/keys.c    **** 	case K30:
1057:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
1059:src/keys.c    **** 	  }
1060:src/keys.c    **** 	  break;
1061:src/keys.c    **** #endif
1062:src/keys.c    **** 	case K51:
1063:src/keys.c    **** 		if (is_bad_cmdline())
1064:src/keys.c    **** 			return STATE_UNFINISHED;
1065:src/keys.c    **** 		process_cmdline_set_lift();
1066:src/keys.c    **** 		State2.test = op;
1067:src/keys.c    **** 		return STATE_UNFINISHED;
1068:src/keys.c    **** 
1069:src/keys.c    **** 	case K50:
1070:src/keys.c    **** #ifndef REALBUILD
1071:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1072:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1073:src/keys.c    **** 			return STATE_UNFINISHED;
1074:src/keys.c    **** 		}
1075:src/keys.c    **** #endif
1076:src/keys.c    **** 	case K52:
1077:src/keys.c    **** 	case K53:
1078:src/keys.c    **** 	case K63:
1079:src/keys.c    **** 	case K64:
1080:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1081:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1082:src/keys.c    **** 				init_arg((enum rarg) op);
1083:src/keys.c    **** 			}
1084:src/keys.c    **** 			return STATE_UNFINISHED;
1085:src/keys.c    **** 		}
1086:src/keys.c    **** 		break;
1087:src/keys.c    **** 
1088:src/keys.c    **** 	default:
1089:src/keys.c    **** 		break;
1090:src/keys.c    **** 	}
1091:src/keys.c    **** 	if (no_int && UState.intm)
1092:src/keys.c    **** 		return STATE_UNFINISHED;
1093:src/keys.c    **** 
1094:src/keys.c    **** 	return check_confirm(op);
1095:src/keys.c    **** #undef NO_INT
1096:src/keys.c    **** }
1097:src/keys.c    **** 
1098:src/keys.c    **** /*
1099:src/keys.c    ****  *  Process a key code after h shift
1100:src/keys.c    ****  */
1101:src/keys.c    **** static int process_h_shifted(const keycode c) {
1102:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1103:src/keys.c    **** #define NO_INT   0x4000
1104:src/keys.c    **** 	static const unsigned short int op_map[] = {
1105:src/keys.c    **** 		// Row 1
1106:src/keys.c    **** 		_RARG   | RARG_STD,
1107:src/keys.c    **** 		_RARG   | RARG_FIX,
1108:src/keys.c    **** 		_RARG   | RARG_SCI,
1109:src/keys.c    **** 		_RARG   | RARG_ENG,
1110:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1111:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1112:src/keys.c    **** 		// Row 2
ARM GAS  /tmp/ccvq0xdJ.s 			page 21


1113:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1114:src/keys.c    **** 		_RARG   | RARG_VIEW,
1115:src/keys.c    **** 		OP_NIL  | OP_RUP,
1116:src/keys.c    **** 		// Row 3
1117:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1118:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1119:src/keys.c    **** 		OP_MON  | OP_NOT,
1120:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1121:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1122:src/keys.c    **** 		// Row 4
1123:src/keys.c    **** 		_RARG   | RARG_GTO,
1124:src/keys.c    **** 		OP_DYA  | OP_LAND,
1125:src/keys.c    **** 		OP_DYA  | OP_LOR,
1126:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1127:src/keys.c    **** 		OP_DYA  | OP_MOD,
1128:src/keys.c    **** 		// Row 5
1129:src/keys.c    **** 		OP_MON  | OP_FACT,
1130:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1131:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1132:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1133:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1134:src/keys.c    **** 		// Row 6
1135:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1136:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1137:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1138:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1139:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1140:src/keys.c    **** 		// Row 7
1141:src/keys.c    **** 		OP_NIL | OP_OFF,
1142:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1143:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1144:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1145:src/keys.c    **** #else
1146:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1147:src/keys.c    **** #endif
1148:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1149:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1150:src/keys.c    **** #ifdef DM42
1151:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1152:src/keys.c    **** #endif
1153:src/keys.c    **** 	};
1154:src/keys.c    **** 
1155:src/keys.c    **** 	int lc = keycode_to_linear(c);
1156:src/keys.c    **** 	int op = op_map[lc];
1157:src/keys.c    **** 	reset_shift();
1158:src/keys.c    **** 
1159:src/keys.c    **** 	// The switch handles all the special cases
1160:src/keys.c    **** 	switch (c) {
1161:src/keys.c    **** 	case K62:
1162:src/keys.c    **** 		if (UState.intm)
1163:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1164:src/keys.c    **** 		else
1165:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1166:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1167:src/keys.c    **** #else
1168:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1169:src/keys.c    **** #endif
ARM GAS  /tmp/ccvq0xdJ.s 			page 22


1170:src/keys.c    **** 		break;
1171:src/keys.c    **** 
1172:src/keys.c    **** 	case K63:					// Program<->Run mode
1173:src/keys.c    **** 		if (is_bad_cmdline())
1174:src/keys.c    **** 			return STATE_UNFINISHED;
1175:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1176:src/keys.c    **** 		process_cmdline_set_lift();
1177:src/keys.c    **** 		update_program_bounds(1);
1178:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1179:src/keys.c    **** 			set_pc(0);
1180:src/keys.c    **** 		break;
1181:src/keys.c    **** 
1182:src/keys.c    **** 	default:
1183:src/keys.c    **** 		break;
1184:src/keys.c    **** 	}
1185:src/keys.c    **** 
1186:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1187:src/keys.c    **** 		if (op & _RARG) {
1188:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1189:src/keys.c    **** 			op = STATE_UNFINISHED;
1190:src/keys.c    **** 		}
1191:src/keys.c    **** 	}
1192:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1193:src/keys.c    **** #undef _RARG
1194:src/keys.c    **** #undef NO_INT
1195:src/keys.c    **** }
1196:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1197:src/keys.c    **** 
1198:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1199:src/keys.c    **** 
1200:src/keys.c    **** static void do_command_line ( void ) {
1201:src/keys.c    **** 	if (CmdLineLength) {
1202:src/keys.c    **** 		State2.state_lift = 0;
1203:src/keys.c    **** 		process_cmdline();
1204:src/keys.c    **** 	}
1205:src/keys.c    **** }
1206:src/keys.c    **** 
1207:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1208:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1209:src/keys.c    **** // The argument sets the lift state after entry is finished.
1210:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1211:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1212:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1213:src/keys.c    **** 
1214:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1215:src/keys.c    **** 		CLEAR_REAL;
1216:src/keys.c    **** 		do_command_line();
1217:src/keys.c    **** 	}
1218:src/keys.c    **** 	else if (IMAG_FLAG) {
1219:src/keys.c    **** 		CLEAR_IMAG;
1220:src/keys.c    **** 		do_command_line();
1221:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1222:src/keys.c    **** 	}
1223:src/keys.c    **** */
1224:src/keys.c    **** 	do_command_line();
1225:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1226:src/keys.c    **** 	CLEAR_REAL;
ARM GAS  /tmp/ccvq0xdJ.s 			page 23


1227:src/keys.c    **** 	CLEAR_IMAG;
1228:src/keys.c    **** 
1229:src/keys.c    **** 	State2.state_lift = lift;
1230:src/keys.c    **** 
1231:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1232:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1233:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1234:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1235:src/keys.c    **** 		//call p2r
1236:src/keys.c    **** 		update_speed(0);
1237:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1238:src/keys.c    **** #ifdef RP_PREFIX
1239:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1240:src/keys.c    **** #endif
1241:src/keys.c    **** 		SET_POLAR_READY;
1242:src/keys.c    **** 	}
1243:src/keys.c    **** }
1244:src/keys.c    **** 
1245:src/keys.c    **** static void stack_restore ( void ) { 
1246:src/keys.c    **** 	// called if number entry terminated by EXIT key
1247:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1248:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1249:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1250:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1251:src/keys.c    **** 		drop ( OP_DROPXY );
1252:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1253:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1254:src/keys.c    **** 	}
1255:src/keys.c    **** 	else { // X, Y have been overwritten
1256:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1257:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1258:src/keys.c    **** 	}
1259:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
1261:src/keys.c    **** 	CLEAR_POLAR_READY;
1262:src/keys.c    **** }
1263:src/keys.c    **** 
1264:src/keys.c    **** void stack_begin ( int zero_y ) { 
1265:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1266:src/keys.c    **** 	// zeros y if requested. 
1267:src/keys.c    **** 	CLEAR_POLAR_READY;
1268:src/keys.c    **** 	if ( State2.state_lift ){
1269:src/keys.c    **** 		SET_INIT_LIFT;
1270:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1271:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1272:src/keys.c    **** 		lift();
1273:src/keys.c    **** 		zero_X();
1274:src/keys.c    **** 		lift();
1275:src/keys.c    **** 		State2.state_lift = 0;
1276:src/keys.c    **** 	}
1277:src/keys.c    **** 	else {
1278:src/keys.c    **** 		CLEAR_INIT_LIFT;
1279:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1280:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1281:src/keys.c    **** 		zero_X();
1282:src/keys.c    **** 		if ( zero_y ) zero_Y();
1283:src/keys.c    **** 	}
ARM GAS  /tmp/ccvq0xdJ.s 			page 24


1284:src/keys.c    **** }
1285:src/keys.c    **** 
1286:src/keys.c    ****  static int process_c_lock ( const keycode c ) { // main function - called from process (c) functio
1287:src/keys.c    **** 
1288:src/keys.c    ****    enum shifts shift = cur_shift();
1289:src/keys.c    **** 
1290:src/keys.c    ****    // Individual keys needing special treatment
1291:src/keys.c    **** 
1292:src/keys.c    ****    if ( (c < K05) && shift == SHIFT_H ){ // display modes
1293:src/keys.c    ****      return process_h_shifted (c);
1294:src/keys.c    ****    }
1295:src/keys.c    **** 
1296:src/keys.c    **** 
1297:src/keys.c    ****    if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because oth
1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
1299:src/keys.c    ****    }
1300:src/keys.c    ****    if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, H
1301:src/keys.c    ****      return process_fg_shifted (c);
1302:src/keys.c    ****    }
1303:src/keys.c    **** 
1304:src/keys.c    ****    if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry comple
1305:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
1306:src/keys.c    ****        reset_shift();
1307:src/keys.c    ****        if ( CmdLineLength ) {
1308:src/keys.c    **** 	 State2.state_lift = 0;
1309:src/keys.c    **** 	 return OP_NIL | OP_PIB;
1310:src/keys.c    ****        }
1311:src/keys.c    ****        else {
1312:src/keys.c    **** 	 return OP_NIL | OP_PIA;
1313:src/keys.c    ****        }
1314:src/keys.c    ****      }
1315:src/keys.c    ****      else {
1316:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1317:src/keys.c    ****        const int eex_pi = 1;
1318:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1319:src/keys.c    ****        const int eex_pi = get_user_flag(regL_idx);
1320:src/keys.c    **** #else
1321:src/keys.c    ****        const int eex_pi = 0;
1322:src/keys.c    **** #endif
1323:src/keys.c    ****        if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // norma
1324:src/keys.c    **** 	 finish_cpx_entry(1);
1325:src/keys.c    **** 	 return process_cmplx(c);
1326:src/keys.c    ****        }
1327:src/keys.c    ****      }
1328:src/keys.c    ****    }
1329:src/keys.c    **** 
1330:src/keys.c    ****    if (shift != SHIFT_N) { // other shifted keys - special cases first.
1331:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
1332:src/keys.c    ****      switch (c) {
1333:src/keys.c    ****      case (K60):
1334:src/keys.c    ****        reset_shift();
1335:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1336:src/keys.c    ****      case (K21): // x<->y key
1337:src/keys.c    ****        if (shift == SHIFT_F) { // changed this for DM42
1338:src/keys.c    **** 	 return process_fg_shifted(c); // SHOW
1339:src/keys.c    ****        }
1340:src/keys.c    ****        if (shift == SHIFT_G) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 25


1341:src/keys.c    **** 	 reset_shift();
1342:src/keys.c    **** 	 return process_normal(K21); // x<>y
1343:src/keys.c    ****        }
1344:src/keys.c    ****        break;
1345:src/keys.c    ****      case (K40): // up-arrow key
1346:src/keys.c    ****        if (shift == SHIFT_F) {
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
1348:src/keys.c    ****        }
1349:src/keys.c    ****        else if (shift == SHIFT_G) {
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
1352:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
1353:src/keys.c    ****        }
1354:src/keys.c    ****        else if (shift == SHIFT_H) { // ND addition on DM42 - should work on ordinary calculator too
1355:src/keys.c    **** 	 return process_cmplx (c);
1356:src/keys.c    ****        }
1357:src/keys.c    ****        break;
1358:src/keys.c    ****      case (K22): // +/- key
1359:src/keys.c    ****        reset_shift();
1360:src/keys.c    ****        if (shift == SHIFT_F ) {
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
1362:src/keys.c    ****        }
1363:src/keys.c    ****        else if (shift == SHIFT_H) {
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
1365:src/keys.c    ****        }
1366:src/keys.c    ****        break;
1367:src/keys.c    ****      case (K62): // IP/FP key
1368:src/keys.c    ****        reset_shift();
1369:src/keys.c    ****        if (shift == SHIFT_F) {
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
1371:src/keys.c    ****        }
1372:src/keys.c    ****        else if (shift == SHIFT_G) {
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
1374:src/keys.c    ****        }
1375:src/keys.c    ****        break;
1376:src/keys.c    ****      case (K44): // x (times) key
1377:src/keys.c    ****        if (shift == SHIFT_H) { // real*real + i imag*imag
1378:src/keys.c    **** 	 reset_shift();
1379:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
1380:src/keys.c    ****        }
1381:src/keys.c    ****        else {
1382:src/keys.c    **** 	 return process_cmplx(c);
1383:src/keys.c    ****        }
1384:src/keys.c    ****        break;
1385:src/keys.c    ****      case (K34): // divide key
1386:src/keys.c    ****        if (shift == SHIFT_H) { // real/real + i imag/imag
1387:src/keys.c    **** 	 reset_shift();
1388:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
1389:src/keys.c    ****        }
1390:src/keys.c    ****        else {
1391:src/keys.c    **** 	 return process_cmplx(c);
1392:src/keys.c    ****        }
1393:src/keys.c    ****        break;
1394:src/keys.c    ****      case (K24): // <- key
1395:src/keys.c    ****        if (POLAR_DISPLAY) break;
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
1397:src/keys.c    **** 	 zero_X ();
ARM GAS  /tmp/ccvq0xdJ.s 			page 26


1398:src/keys.c    **** 	 State2.state_lift = 0;
1399:src/keys.c    **** 	 SET_REAL;
1400:src/keys.c    **** 	 stack_begin (0);
1401:src/keys.c    ****        }
1402:src/keys.c    ****        break;
1403:src/keys.c    ****      default:
1404:src/keys.c    ****        return process_cmplx(c); // for shifted keys not listed above
1405:src/keys.c    ****      }
1406:src/keys.c    ****      reset_shift(); // for the keys listed above; functions complete
1407:src/keys.c    ****      return STATE_UNFINISHED;
1408:src/keys.c    ****    }
1409:src/keys.c    **** 
1410:src/keys.c    ****    switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally n
1411:src/keys.c    ****    case (K61):
1412:src/keys.c    ****    case (K62):
1413:src/keys.c    ****    case (K51):
1414:src/keys.c    ****    case (K52):
1415:src/keys.c    ****    case (K53):
1416:src/keys.c    ****    case (K41):
1417:src/keys.c    ****    case (K42):
1418:src/keys.c    ****    case (K43):
1419:src/keys.c    ****    case (K31):
1420:src/keys.c    ****    case (K32):
1421:src/keys.c    ****    case (K33):
1422:src/keys.c    ****    case (K23): // 0.123456789EEX
1423:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
1425:src/keys.c    ****        stack_begin (1);
1426:src/keys.c    ****      }
1427:src/keys.c    ****      return process_normal(c);
1428:src/keys.c    ****    case (K22): // CHS
1429:src/keys.c    ****      //	case (K23): // EEX
1430:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1431:src/keys.c    ****        return process_cmplx(c);
1432:src/keys.c    ****      }
1433:src/keys.c    ****      else {
1434:src/keys.c    ****        return process_normal(c);
1435:src/keys.c    ****      }
1436:src/keys.c    ****    case (K24): // backspace
1437:src/keys.c    ****    case (K04): // arrow
1438:src/keys.c    ****    case (K_ARROW):
1439:src/keys.c    ****      return process_normal(c);
1440:src/keys.c    ****    case (K_CMPLX):
1441:src/keys.c    ****      if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1442:src/keys.c    ****        CLEAR_REAL;
1443:src/keys.c    ****        SET_IMAG;
1444:src/keys.c    ****        do_command_line();
1445:src/keys.c    ****        State2.state_lift = 0;
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1447:src/keys.c    ****      }
1448:src/keys.c    ****      else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1449:src/keys.c    ****        finish_cpx_entry (1);
1450:src/keys.c    ****      }
1451:src/keys.c    ****      else { // down here we need a part that deals with CPX being pressed without a real part being
1452:src/keys.c    ****        SET_IMAG;
1453:src/keys.c    ****        stack_begin (1);
1454:src/keys.c    ****      }
ARM GAS  /tmp/ccvq0xdJ.s 			page 27


1455:src/keys.c    ****      return STATE_UNFINISHED;
1456:src/keys.c    ****    default:;
1457:src/keys.c    ****    }
1458:src/keys.c    ****    finish_cpx_entry(0);
1459:src/keys.c    ****    return process_cmplx(c);
1460:src/keys.c    **** 
1461:src/keys.c    ****  }
1462:src/keys.c    **** 
1463:src/keys.c    **** #endif
1464:src/keys.c    **** 
1465:src/keys.c    **** /*
1466:src/keys.c    ****  *  Process a key code after CPX
1467:src/keys.c    ****  */
1468:src/keys.c    **** static int process_cmplx(const keycode c) {
1469:src/keys.c    **** #define _RARG   0xFF00
1470:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1471:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1472:src/keys.c    **** 
1473:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1474:src/keys.c    **** 		// Row 1
1475:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1476:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1477:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1478:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1479:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1480:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1481:src/keys.c    **** 		// Row 2
1482:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1483:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1484:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1485:src/keys.c    **** 		// Row 3
1486:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1487:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1488:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1489:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1490:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1491:src/keys.c    **** 		// Row 4
1492:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1493:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1494:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1495:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1496:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1497:src/keys.c    **** 		// Row 5
1498:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1499:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1500:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1501:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1502:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1503:src/keys.c    **** 		// Row 6
1504:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1505:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1506:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1507:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1508:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1509:src/keys.c    **** 		// Row 7
1510:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1511:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
ARM GAS  /tmp/ccvq0xdJ.s 			page 28


1512:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1513:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1514:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1515:src/keys.c    **** #else
1516:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1517:src/keys.c    **** #endif
1518:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1519:src/keys.c    **** #ifdef DM42
1520:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1521:src/keys.c    **** #endif
1522:src/keys.c    **** 	};
1523:src/keys.c    **** 
1524:src/keys.c    **** 	enum shifts shift = reset_shift();
1525:src/keys.c    **** 	int lc = keycode_to_linear(c);
1526:src/keys.c    **** 	int op = op_map[lc][shift];
1527:src/keys.c    **** 	State2.cmplx = 0;
1528:src/keys.c    **** 
1529:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1531:src/keys.c    **** 		return STATE_UNFINISHED;
1532:src/keys.c    **** 	}
1533:src/keys.c    **** 	if (c == K00) {
1534:src/keys.c    **** 		// HYP
1535:src/keys.c    **** 		process_cmdline_set_lift();
1536:src/keys.c    **** 		//		print_debug(100,1);
1537:src/keys.c    **** 		State2.hyp = 1;
1538:src/keys.c    **** 		State2.dot = op;
1539:src/keys.c    **** 		State2.cmplx = 1;
1540:src/keys.c    **** 		return STATE_UNFINISHED;
1541:src/keys.c    **** 	}
1542:src/keys.c    **** 
1543:src/keys.c    **** 	if (shift != SHIFT_N) {
1544:src/keys.c    **** 		switch (c) {
1545:src/keys.c    **** 		case K_CMPLX:
1546:src/keys.c    **** 			set_shift(shift);
1547:src/keys.c    **** 			break;
1548:src/keys.c    **** 
1549:src/keys.c    **** 		case K51:
1550:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1551:src/keys.c    **** 				if (is_bad_cmdline())
1552:src/keys.c    **** 					return STATE_UNFINISHED;
1553:src/keys.c    **** 				process_cmdline_set_lift();
1554:src/keys.c    **** 				State2.cmplx = 1;
1555:src/keys.c    **** 				State2.test = op;
1556:src/keys.c    **** 			}
1557:src/keys.c    **** 			return STATE_UNFINISHED;
1558:src/keys.c    **** 
1559:src/keys.c    **** 		case K60:
1560:src/keys.c    **** 			init_state();
1561:src/keys.c    **** 			break;
1562:src/keys.c    **** 
1563:src/keys.c    **** 		default:
1564:src/keys.c    **** 			break;
1565:src/keys.c    **** 		}
1566:src/keys.c    **** 	}
1567:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1568:src/keys.c    **** 	return check_confirm(op);
ARM GAS  /tmp/ccvq0xdJ.s 			page 29


1569:src/keys.c    **** #else
1570:src/keys.c    **** 	return op;
1571:src/keys.c    **** #endif
1572:src/keys.c    **** 
1573:src/keys.c    **** #undef _RARG
1574:src/keys.c    **** #undef CSWAPXZ
1575:src/keys.c    **** #undef CNUM
1576:src/keys.c    **** }
1577:src/keys.c    **** 
1578:src/keys.c    **** 
1579:src/keys.c    **** 
1580:src/keys.c    **** /*
1581:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1582:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1583:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1584:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1585:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1586:src/keys.c    ****  * the ON key are dealt with by our caller.
1587:src/keys.c    ****  */
1588:src/keys.c    **** static int process_hyp(const keycode c) {
1589:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1590:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1591:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1592:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1593:src/keys.c    **** 	};
1594:src/keys.c    **** 	int cmplx = State2.cmplx;
1595:src/keys.c    **** 	int f = State2.dot;
1596:src/keys.c    **** 
1597:src/keys.c    **** 	State2.hyp = 0;
1598:src/keys.c    **** 	State2.cmplx = 0;
1599:src/keys.c    **** 	State2.dot = 0;
1600:src/keys.c    **** #ifdef DM42
1601:src/keys.c    **** 	reset_shift();
1602:src/keys.c    **** #endif
1603:src/keys.c    **** 	switch ((int)c) {
1604:src/keys.c    **** 
1605:src/keys.c    **** 	case K01:
1606:src/keys.c    **** 	case K02:
1607:src/keys.c    **** 	case K03:
1608:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1609:src/keys.c    **** 
1610:src/keys.c    **** 	case K_CMPLX:
1611:src/keys.c    **** 		cmplx = ! cmplx;
1612:src/keys.c    **** 		goto stay;
1613:src/keys.c    **** 
1614:src/keys.c    **** #ifndef DM42
1615:src/keys.c    **** 	case K_F: 
1616:src/keys.c    **** 	case K_G:
1617:src/keys.c    **** 		f = (c == K_F);
1618:src/keys.c    **** 		// fall through
1619:src/keys.c    **** #else
1620:src/keys.c    **** 	case K_F:
1621:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1622:src/keys.c    **** #endif
1623:src/keys.c    **** 	stay:
1624:src/keys.c    **** 		// process_cmdline_set_lift();
1625:src/keys.c    **** 	  //	  print_debug(100,2);
ARM GAS  /tmp/ccvq0xdJ.s 			page 30


1626:src/keys.c    **** 	  
1627:src/keys.c    **** 	  State2.hyp = 1;
1628:src/keys.c    **** 		State2.cmplx = cmplx;
1629:src/keys.c    **** 		State2.dot = f;
1630:src/keys.c    **** 		break;
1631:src/keys.c    **** 
1632:src/keys.c    **** 	default:
1633:src/keys.c    **** 		break;
1634:src/keys.c    **** 	}
1635:src/keys.c    **** 	return STATE_UNFINISHED;
1636:src/keys.c    **** }
1637:src/keys.c    **** 
1638:src/keys.c    **** 
1639:src/keys.c    **** /*
1640:src/keys.c    ****  *  Process a key code after ->
1641:src/keys.c    ****  */
1642:src/keys.c    **** static int process_arrow(const keycode c) {
1643:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1644:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1645:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1646:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1647:src/keys.c    **** 	};
1648:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1649:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1650:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1651:src/keys.c    **** 	};
1652:src/keys.c    **** 	const int shift = reset_shift();
1653:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1654:src/keys.c    **** 
1655:src/keys.c    **** 	State2.arrow = 0;
1656:src/keys.c    **** #ifdef DM42
1657:src/keys.c    **** 	set_last_menu ();
1658:src/keys.c    **** 	display_current_menu ();
1659:src/keys.c    **** #endif
1660:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1661:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1664:src/keys.c    **** 	  }
1665:src/keys.c    **** 	  else {
1666:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1667:src/keys.c    **** 	  }
1668:src/keys.c    **** 	}
1669:src/keys.c    **** #endif
1670:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1671:src/keys.c    **** 	
1672:src/keys.c    **** 	if (c >= K10 && c <= K12)
1673:src/keys.c    **** 		return op_map[c - K10][f];
1674:src/keys.c    **** 
1675:src/keys.c    **** 	if (c == K22 || c == K23)
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1677:src/keys.c    **** 
1678:src/keys.c    **** 	return STATE_UNFINISHED;
1679:src/keys.c    **** }
1680:src/keys.c    **** 
1681:src/keys.c    **** 
1682:src/keys.c    **** /* Process a GTO . sequence
ARM GAS  /tmp/ccvq0xdJ.s 			page 31


1683:src/keys.c    ****  */
1684:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1684 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1685 2 view .LVU1
1686:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1686 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1684:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1684 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1685 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1686 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1685 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1686 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1685 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1684:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1684 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1687:src/keys.c    **** 
1688:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1688 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1685:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1685 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1686:src/keys.c    **** 
  63              		.loc 1 1686 2 is_stmt 1 view .LVU12
  64              		.loc 1 1688 2 view .LVU13
  65              		.loc 1 1688 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1688 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1688 5 view .LVU16
ARM GAS  /tmp/ccvq0xdJ.s 			page 32


  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1689:src/keys.c    **** 		return val;
1690:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1690 2 is_stmt 1 view .LVU17
  77              		.loc 1 1690 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1690 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1690 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1690 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1690 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1691:src/keys.c    **** 		return val;
1692:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1692 2 is_stmt 1 view .LVU23
  91              		.loc 1 1692 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1693:src/keys.c    **** 	return -1;
  94              		.loc 1 1693 2 is_stmt 1 view .LVU25
1690:src/keys.c    **** 		return val;
  95              		.loc 1 1690 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1693 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1694:src/keys.c    **** }
 102              		.loc 1 1694 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1694 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
ARM GAS  /tmp/ccvq0xdJ.s 			page 33


 126              	.LFB17:
 745:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 745 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 746:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 746 2 view .LVU31
 745:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 745 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 749:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 749 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 747:src/keys.c    **** 
 143              		.loc 1 747 2 is_stmt 1 view .LVU34
 749:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 749 2 view .LVU35
 749:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 749 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 745:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 745 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 749:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 749 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 747:src/keys.c    **** 
 151              		.loc 1 747 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 747:src/keys.c    **** 
 154              		.loc 1 747 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 747:src/keys.c    **** 
 157              		.loc 1 747 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 750:src/keys.c    **** 			pc = 1;
 160              		.loc 1 750 3 is_stmt 1 view .LVU42
 750:src/keys.c    **** 			pc = 1;
 161              		.loc 1 750 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 751:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 751 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 752 3 is_stmt 1 view .LVU45
ARM GAS  /tmp/ccvq0xdJ.s 			page 34


 746:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 746 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 752 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 752 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 752 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 752 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 755:src/keys.c    **** }
 186              		.loc 1 755 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 756:src/keys.c    **** 
 188              		.loc 1 756 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 753:src/keys.c    **** 	}
 192              		.loc 1 753 4 is_stmt 1 view .LVU53
 753:src/keys.c    **** 	}
 193              		.loc 1 753 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 756:src/keys.c    **** 
 195              		.loc 1 756 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 756:src/keys.c    **** 
 199              		.loc 1 756 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccvq0xdJ.s 			page 35


 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
1695:src/keys.c    **** 
1696:src/keys.c    **** static int gtodot_fkey(int n) {
1697:src/keys.c    **** 	const int code = 100 + n;
1698:src/keys.c    **** 	unsigned int pc = state_pc();
1699:src/keys.c    **** 
1700:src/keys.c    **** 	if(isXROM(pc))
1701:src/keys.c    **** 		pc = 1;
1702:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1703:src/keys.c    **** 	if (pc > 0)
1704:src/keys.c    **** 		return pc;
1705:src/keys.c    **** 	return state_pc();
1706:src/keys.c    **** }
1707:src/keys.c    **** 
1708:src/keys.c    **** static int process_gtodot(const keycode c) {
1709:src/keys.c    **** 	int pc = -1;
1710:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1711:src/keys.c    **** 
1712:src/keys.c    **** 	if (rawpc <= 9) {
1713:src/keys.c    **** 		// Digit 0 - 9
1714:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1715:src/keys.c    **** 	}
1716:src/keys.c    **** #ifdef DM42
1717:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1721:src/keys.c    **** #endif
1722:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1723:src/keys.c    **** 		// A - D
1724:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1725:src/keys.c    **** 		goto fin;
1726:src/keys.c    **** 	}
1727:src/keys.c    **** 	else if (c == K62) {
1728:src/keys.c    **** 		// .
1729:src/keys.c    **** 		rawpc = ProgSize;
1730:src/keys.c    **** 		goto fin;
1731:src/keys.c    **** 	}
1732:src/keys.c    **** 	else if (c == K20) {
1733:src/keys.c    **** 		// ENTER - short circuit processing
1734:src/keys.c    **** 		pc = State2.digval;
1735:src/keys.c    **** 	}
1736:src/keys.c    **** 	else if (c == K24) {
1737:src/keys.c    **** 		// backspace
1738:src/keys.c    **** 		if (State2.numdigit == 0) {
1739:src/keys.c    **** 			goto fin2;
1740:src/keys.c    **** 		} else {
1741:src/keys.c    **** 			State2.numdigit--;
1742:src/keys.c    **** 			State2.digval /= 10;
1743:src/keys.c    **** 		}
1744:src/keys.c    **** 	}
1745:src/keys.c    **** 	else if (c == K_UP) {
1746:src/keys.c    **** 		// up
1747:src/keys.c    **** 		rawpc = state_pc();
1748:src/keys.c    **** 		if (rawpc == 1)
ARM GAS  /tmp/ccvq0xdJ.s 			page 36


1749:src/keys.c    **** 			rawpc = 0;
1750:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1751:src/keys.c    **** 		update_program_bounds(1);
1752:src/keys.c    **** 		rawpc = ProgBegin;
1753:src/keys.c    **** 		goto fin;
1754:src/keys.c    **** 	}
1755:src/keys.c    **** 	else if (c == K_DOWN) {
1756:src/keys.c    **** 		// down
1757:src/keys.c    **** 		update_program_bounds(1);
1758:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1760:src/keys.c    **** 			rawpc = 1;
1761:src/keys.c    **** 		goto fin;
1762:src/keys.c    **** 	}
1763:src/keys.c    **** 	if (pc >= 0) {
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
1765:src/keys.c    **** fin:		set_pc(rawpc);
1766:src/keys.c    **** fin2:		State2.gtodot = 0;
1767:src/keys.c    **** 		State2.digval = 0;
1768:src/keys.c    **** 		State2.numdigit = 0;
1769:src/keys.c    **** 	}
1770:src/keys.c    **** 	return STATE_UNFINISHED;
1771:src/keys.c    **** }
1772:src/keys.c    **** 
1773:src/keys.c    **** 
1774:src/keys.c    **** /* Process a keystroke in alpha mode
1775:src/keys.c    ****  */
1776:src/keys.c    **** static int process_alpha(const keycode c) {
1777:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
1779:src/keys.c    **** 	const enum shifts shift = reset_shift();
1780:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1781:src/keys.c    **** 	State2.alpha_pos = 0;
1782:src/keys.c    **** 
1783:src/keys.c    **** 	switch (c) {
1784:src/keys.c    **** 	case K10:	// STO
1785:src/keys.c    **** 		if (shift == SHIFT_F) {
1786:src/keys.c    **** 			init_arg(RARG_ASTO);
1787:src/keys.c    **** 			return STATE_UNFINISHED;
1788:src/keys.c    **** 		}
1789:src/keys.c    **** 		break;
1790:src/keys.c    **** 
1791:src/keys.c    **** 	case K11:	// RCL - maybe view
1792:src/keys.c    **** 		if (shift == SHIFT_F) {
1793:src/keys.c    **** 			init_arg(RARG_ARCL);
1794:src/keys.c    **** 			return STATE_UNFINISHED;
1795:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1796:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1797:src/keys.c    **** 			return STATE_UNFINISHED;
1798:src/keys.c    **** 		}
1799:src/keys.c    **** 		break;
1800:src/keys.c    **** 
1801:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1802:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1803:src/keys.c    **** 			break;
1804:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1805:src/keys.c    **** 			State2.multi = 1;
ARM GAS  /tmp/ccvq0xdJ.s 			page 37


1806:src/keys.c    **** 			State2.numdigit = 0;
1807:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1808:src/keys.c    **** 			return STATE_UNFINISHED;
1809:src/keys.c    **** 		}
1810:src/keys.c    **** 		State2.alphas = 0;
1811:src/keys.c    **** 		State2.alphashift = 0;
1812:src/keys.c    **** #ifdef DM42
1813:src/keys.c    **** 		set_menu(M_Last);
1814:src/keys.c    **** 		display_current_menu();
1815:src/keys.c    **** #endif
1816:src/keys.c    **** 		return op;
1817:src/keys.c    **** 
1818:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1819:src/keys.c    **** 		if (shift == SHIFT_N)
1820:src/keys.c    **** 			return STATE_BACKSPACE;
1821:src/keys.c    **** 		if (shift == SHIFT_H)
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1823:src/keys.c    **** 		break;
1824:src/keys.c    **** 
1825:src/keys.c    **** 	case K_UP:
1826:src/keys.c    **** 	  if (shift == SHIFT_N) {
1827:src/keys.c    **** 	    if ( State2.runmode ) {
1828:src/keys.c    **** 	      // Alpha scroll left
1829:src/keys.c    **** #ifdef DM42
1830:src/keys.c    **** 	      /* 
1831:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1832:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1833:src/keys.c    **** 	       */
1834:src/keys.c    **** #ifdef BIGGER_DISPLAY
1835:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1836:src/keys.c    **** 		alpha_pos += 1;
1837:src/keys.c    **** 	      }
1838:src/keys.c    **** #else
1839:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1840:src/keys.c    **** 		alpha_pos += 1;
1841:src/keys.c    **** 	      }
1842:src/keys.c    **** #endif
1843:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1844:src/keys.c    **** #else
1845:src/keys.c    **** 	      int n = alpha_pos + 1;
1846:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1847:src/keys.c    **** #endif
1848:src/keys.c    **** 	      return STATE_UNFINISHED;
1849:src/keys.c    **** 	    }
1850:src/keys.c    **** 	    return STATE_BST;
1851:src/keys.c    **** 	  }
1852:src/keys.c    **** 	  break;
1853:src/keys.c    **** 
1854:src/keys.c    **** 	case K_DOWN:
1855:src/keys.c    **** 	  if (shift == SHIFT_N) {
1856:src/keys.c    **** 	    if ( State2.runmode ) {
1857:src/keys.c    **** 	      // Alpha scroll right
1858:src/keys.c    **** 	      if (alpha_pos > 0)
1859:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
1861:src/keys.c    **** 	    }
1862:src/keys.c    **** 	    return STATE_SST;
ARM GAS  /tmp/ccvq0xdJ.s 			page 38


1863:src/keys.c    **** 	  }
1864:src/keys.c    **** 	  break;
1865:src/keys.c    **** 
1866:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1867:src/keys.c    **** 		if (shift == SHIFT_F)
1868:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
1870:src/keys.c    **** 			return OP_NIL | OP_OFF;
1871:src/keys.c    **** 		else if (shift == SHIFT_N) {
1872:src/keys.c    **** #ifdef DM42
1873:src/keys.c    **** 		  set_menu(M_Last);
1874:src/keys.c    **** 		  display_current_menu();
1875:src/keys.c    **** #endif
1876:src/keys.c    **** 		  init_state();
1877:src/keys.c    **** 		}
1878:src/keys.c    **** 		return STATE_UNFINISHED;
1879:src/keys.c    **** 
1880:src/keys.c    **** 	case K63:
1881:src/keys.c    **** 		if (shift == SHIFT_F)
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1883:src/keys.c    **** 		break;
1884:src/keys.c    **** 
1885:src/keys.c    **** 	default:
1886:src/keys.c    **** 		break;
1887:src/keys.c    **** 	}
1888:src/keys.c    **** 
1889:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1890:src/keys.c    **** 	if (ch == 0)
1891:src/keys.c    **** 		return STATE_UNFINISHED;
1892:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1893:src/keys.c    **** }
1894:src/keys.c    **** 
1895:src/keys.c    **** /*
1896:src/keys.c    ****  *  Code to handle all commands with arguments
1897:src/keys.c    ****  */
1898:src/keys.c    **** static void reset_arg(void) {
1899:src/keys.c    **** 	init_arg((enum rarg) 0);
1900:src/keys.c    **** 	State2.rarg = 0;
1901:src/keys.c    **** }
1902:src/keys.c    **** 
1903:src/keys.c    ****  static int arg_eval(unsigned int val) {
1904:src/keys.c    ****    const unsigned int base = CmdBase;
1905:src/keys.c    ****    int r = RARG(base, val 
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1907:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1908:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1909:src/keys.c    **** 
1910:src/keys.c    ****    if (! State2.ind) {
1911:src/keys.c    ****      /*
1912:src/keys.c    ****       *  Central argument checking for some commands
1913:src/keys.c    ****       */
1914:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1915:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1916:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1917:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1918:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1919:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
ARM GAS  /tmp/ccvq0xdJ.s 			page 39


1920:src/keys.c    ****        if ( val == 0 )
1921:src/keys.c    **** 	 return STATE_UNFINISHED;
1922:src/keys.c    ****        r = RARG(base, val);
1923:src/keys.c    ****      }
1924:src/keys.c    **** #endif
1925:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1926:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1927:src/keys.c    ****        if (C_LOCKED) {
1928:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1929:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1930:src/keys.c    ****        }
1931:src/keys.c    ****        else {
1932:src/keys.c    **** 	 return STATE_UNFINISHED;
1933:src/keys.c    ****        }
1934:src/keys.c    ****      }
1935:src/keys.c    **** #else
1936:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1937:src/keys.c    ****        // Disallow odd complex register > 98
1938:src/keys.c    ****        return STATE_UNFINISHED;
1939:src/keys.c    **** #endif
1940:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1942:src/keys.c    ****        return STATE_UNFINISHED;
1943:src/keys.c    ****    }
1944:src/keys.c    ****    // Build op-code
1945:src/keys.c    ****    reset_arg();
1946:src/keys.c    ****    return r;
1947:src/keys.c    ****  }
1948:src/keys.c    **** 
1949:src/keys.c    **** static int arg_digit(int n) {
1950:src/keys.c    **** 	int lim;
1951:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1952:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1954:src/keys.c    **** #else
1955:src/keys.c    **** 	const unsigned int base = CmdBase;
1956:src/keys.c    **** #endif
1957:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1959:src/keys.c    **** 	
1960:src/keys.c    **** 	if (State2.local) {
1961:src/keys.c    **** 		// Handle local registers and flags
1962:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1963:src/keys.c    **** 		if (State2.runmode) {
1964:src/keys.c    **** 			if (LocalRegs == 0)
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1966:src/keys.c    **** 			if (is_reg) {
1967:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1969:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1970:src/keys.c    **** 			}
1971:src/keys.c    **** 		}
1972:src/keys.c    **** 	}
1973:src/keys.c    **** 	else if (is_reg)						// normal register
1974:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1975:src/keys.c    **** 	else {
1976:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
ARM GAS  /tmp/ccvq0xdJ.s 			page 40


1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1978:src/keys.c    **** 			lim = RARG_IND - 1;
1979:src/keys.c    **** 	}
1980:src/keys.c    **** 	if ((int) val > lim)
1981:src/keys.c    **** 		return STATE_UNFINISHED;
1982:src/keys.c    **** 
1983:src/keys.c    **** 	State2.digval = val;
1984:src/keys.c    **** 	++State2.numdigit;
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1986:src/keys.c    **** 		int result = arg_eval(val);
1987:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1988:src/keys.c    **** 			--State2.numdigit;
1989:src/keys.c    **** 			State2.digval /= 10;
1990:src/keys.c    **** 		}
1991:src/keys.c    **** 		return result;
1992:src/keys.c    **** 	}
1993:src/keys.c    **** 	return STATE_UNFINISHED;
1994:src/keys.c    **** }
1995:src/keys.c    **** 
1996:src/keys.c    **** static int arg_fkey(int n) {
1997:src/keys.c    **** 	const unsigned int b = CmdBase;
1998:src/keys.c    **** 
1999:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
2000:src/keys.c    **** 	{
2001:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
2002:src/keys.c    **** 			return STATE_UNFINISHED;
2003:src/keys.c    **** 		if (argcmds[b].lim < 100)
2004:src/keys.c    **** 			return STATE_UNFINISHED;
2005:src/keys.c    **** 		return arg_eval(n + 100);
2006:src/keys.c    **** 	}
2007:src/keys.c    **** 	return STATE_UNFINISHED;
2008:src/keys.c    **** }
2009:src/keys.c    **** 
2010:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2012:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2013:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2014:src/keys.c    **** #else
2015:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2016:src/keys.c    **** #endif
2017:src/keys.c    **** }
2018:src/keys.c    **** 
2019:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2020:src/keys.c    **** 	unsigned int b = CmdBase;
2021:src/keys.c    **** 
2022:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2023:src/keys.c    **** 		CmdBase += n;
2024:src/keys.c    **** 		return 1;
2025:src/keys.c    **** 	}
2026:src/keys.c    **** 	/* And we can turn off the operation too */
2027:src/keys.c    **** 	if (b >= n) {
2028:src/keys.c    **** 		b -= n;
2029:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2030:src/keys.c    **** 			CmdBase = b;
2031:src/keys.c    **** 			return 1;
2032:src/keys.c    **** 		}
2033:src/keys.c    **** 	}
ARM GAS  /tmp/ccvq0xdJ.s 			page 41


2034:src/keys.c    **** 	return 0;
2035:src/keys.c    **** }
2036:src/keys.c    **** 
2037:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2038:src/keys.c    **** 
2039:src/keys.c    **** 	if (State2.numdigit == 0) {
2040:src/keys.c    **** 		// Only valid at beginning of entry
2041:src/keys.c    **** 		if (State2.dot || State2.local) {
2042:src/keys.c    **** 			// '..' or ENTER '.' = X
2043:src/keys.c    **** 			State2.local = 0;
2044:src/keys.c    **** 			return arg_eval(regX_idx);
2045:src/keys.c    **** 		}
2046:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2047:src/keys.c    **** 			// local register or flag select
2048:src/keys.c    **** 			State2.local = 1;
2049:src/keys.c    **** 		}
2050:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2051:src/keys.c    **** 			// Special GTO . sequence
2052:src/keys.c    **** 			if (! State2.ind) {
2053:src/keys.c    **** 				State2.gtodot = 1;
2054:src/keys.c    **** 				reset_arg();
2055:src/keys.c    **** 			}
2056:src/keys.c    **** 		}
2057:src/keys.c    **** 	}
2058:src/keys.c    **** 	return STATE_UNFINISHED;
2059:src/keys.c    **** }
2060:src/keys.c    **** 
2061:src/keys.c    **** static int process_arg_shuffle(int r) {
2062:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2063:src/keys.c    **** 	if (State2.numdigit < 4)
2064:src/keys.c    **** 		return STATE_UNFINISHED;
2065:src/keys.c    **** 	return arg_eval(State2.digval);
2066:src/keys.c    **** }
2067:src/keys.c    **** 
2068:src/keys.c    **** 
2069:src/keys.c    **** static int process_arg(const keycode c) {
2070:src/keys.c    **** 	unsigned int base = CmdBase;
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2072:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
2075:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2077:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2078:src/keys.c    **** 
2079:src/keys.c    **** 	n &= ~NO_SHORT;
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
2081:src/keys.c    **** 		reset_arg();
2082:src/keys.c    **** 		return STATE_UNFINISHED;
2083:src/keys.c    **** 	}
2084:src/keys.c    **** #ifdef DM42
2085:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2086:src/keys.c    **** 	  switch (n) {
2087:src/keys.c    **** 	  case regX_idx:
2088:src/keys.c    **** 	    return arg_digit(1);
2089:src/keys.c    **** 	  case regY_idx:
2090:src/keys.c    **** 	    return arg_digit(2);
ARM GAS  /tmp/ccvq0xdJ.s 			page 42


2091:src/keys.c    **** 	  case regZ_idx:
2092:src/keys.c    **** 	    return arg_digit(3);
2093:src/keys.c    **** 	  case regT_idx:
2094:src/keys.c    **** 	    return arg_digit(4);
2095:src/keys.c    **** 	  case 5:
2096:src/keys.c    **** 	  case 6:
2097:src/keys.c    **** 	  case 7:
2098:src/keys.c    **** 	  case 8:
2099:src/keys.c    **** 	  case 9:
2100:src/keys.c    **** 	  case 0:
2101:src/keys.c    **** 	    return arg_digit(n);
2102:src/keys.c    **** 	  }
2103:src/keys.c    **** 	}
2104:src/keys.c    **** #else
2105:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2106:src/keys.c    **** 		return arg_digit(n);
2107:src/keys.c    **** #endif	
2108:src/keys.c    **** 	if (shorthand)
2109:src/keys.c    **** 		// row column shorthand addressing
2110:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2111:src/keys.c    **** 
2112:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2113:src/keys.c    **** #ifdef DM42
2114:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2115:src/keys.c    **** 		switch ((int)c) {
2116:src/keys.c    **** 		case K_UP:	// up arrow
2117:src/keys.c    **** 		  if (base == RARG_FIX) {
2118:src/keys.c    **** 		    base = RARG_SIG;
2119:src/keys.c    **** 		    break;
2120:src/keys.c    **** 		  }
2121:src/keys.c    **** 		  if (base == RARG_SIG) {
2122:src/keys.c    **** 		    base = RARG_SIG0;
2123:src/keys.c    **** 		    break;
2124:src/keys.c    **** 		  }
2125:src/keys.c    **** 		  if (base == RARG_SIG0) {
2126:src/keys.c    **** 		    base = RARG_FIX;
2127:src/keys.c    **** 		    break;
2128:src/keys.c    **** 		  }
2129:src/keys.c    **** 		case K_DOWN:	// down arrow
2130:src/keys.c    **** 		case K01:	// B
2131:src/keys.c    **** 		  if (base == RARG_FIX) {
2132:src/keys.c    **** 		    base = RARG_SIG0;
2133:src/keys.c    **** 		    break;
2134:src/keys.c    **** 		  }
2135:src/keys.c    **** 		  if (base == RARG_SIG) {
2136:src/keys.c    **** 		    base = RARG_FIX;
2137:src/keys.c    **** 		    break;
2138:src/keys.c    **** 		  }
2139:src/keys.c    **** 		  if (base == RARG_SIG0) {
2140:src/keys.c    **** 		    base = RARG_SIG;
2141:src/keys.c    **** 		    break;
2142:src/keys.c    **** 		  }
2143:src/keys.c    **** 		}
2144:src/keys.c    **** 	}
2145:src/keys.c    **** 		CmdBase = base;
2146:src/keys.c    **** #else
2147:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 43


2148:src/keys.c    **** 		switch ((int)c) {
2149:src/keys.c    **** 		case K_UP:	// up arrow
2150:src/keys.c    **** 			if (--base < RARG_FIX)
2151:src/keys.c    **** 				base = RARG_SIG0;
2152:src/keys.c    **** 			break;
2153:src/keys.c    **** 
2154:src/keys.c    **** 		case K_DOWN:	// down arrow
2155:src/keys.c    **** 		case K01:	// B
2156:src/keys.c    **** 			if (++base > RARG_SIG0)
2157:src/keys.c    **** 				base = RARG_FIX;
2158:src/keys.c    **** 			break;
2159:src/keys.c    **** 		}
2160:src/keys.c    **** 		CmdBase = base;
2161:src/keys.c    **** 	}
2162:src/keys.c    **** #endif
2163:src/keys.c    **** #endif
2164:src/keys.c    **** 	/*
2165:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2166:src/keys.c    **** 	 *  Handle the rest here.
2167:src/keys.c    **** 	 */
2168:src/keys.c    **** 	switch ((int)c) {
2169:src/keys.c    **** 	case K_F:
2170:src/keys.c    **** 		if (label_addressing)
2171:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2172:src/keys.c    **** 		break;
2173:src/keys.c    **** 
2174:src/keys.c    **** 	case K_ARROW:		// arrow
2175:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
2177:src/keys.c    **** 			if (! stack_reg)
2178:src/keys.c    **** 				State2.dot = 0;
2179:src/keys.c    **** 		}
2180:src/keys.c    **** 		break;
2181:src/keys.c    **** 
2182:src/keys.c    **** 	case K_CMPLX:
2183:src/keys.c    **** 		if (State2.ind || State2.dot)
2184:src/keys.c    **** 			break;
2185:src/keys.c    **** 		if (base == RARG_STO)
2186:src/keys.c    **** 			CmdBase = RARG_STOM;
2187:src/keys.c    **** 		else if (base == RARG_RCL)
2188:src/keys.c    **** 			CmdBase = RARG_RCLM;
2189:src/keys.c    **** 		break;
2190:src/keys.c    **** #ifdef DM42
2191:src/keys.c    **** 	case K41:       // T
2192:src/keys.c    **** 	  if (State2.shuffle)
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
2194:src/keys.c    **** 	case K51:       // X
2195:src/keys.c    **** 	  if (State2.shuffle)
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
2197:src/keys.c    **** 	case K52:	// Y
2198:src/keys.c    **** 	  if (State2.shuffle)
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
2200:src/keys.c    **** 	case K53:       // Z
2201:src/keys.c    **** 	  if (State2.shuffle)
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
2203:src/keys.c    **** #else
2204:src/keys.c    **** 	case K63:	// Y
ARM GAS  /tmp/ccvq0xdJ.s 			page 44


2205:src/keys.c    **** 	  if (State2.shuffle)
2206:src/keys.c    **** 	    return process_arg_shuffle(1);
2207:src/keys.c    **** #endif
2208:src/keys.c    **** 	case K00:	// A
2209:src/keys.c    **** 	case K01:	// B
2210:src/keys.c    **** 	case K02:	// C
2211:src/keys.c    **** 	case K03:	// D
2212:src/keys.c    **** #ifdef DM42
2213:src/keys.c    **** 	case K12:	// I (lastY)
2214:src/keys.c    **** 	case K13:	// J
2215:src/keys.c    **** 	case K14:	// K
2216:src/keys.c    **** 	case K15:	// L (lastX)
2217:src/keys.c    **** #else
2218:src/keys.c    **** 	case K12:	// I (lastY)
2219:src/keys.c    **** 	case K21:	// J
2220:src/keys.c    **** 	case K22:	// K
2221:src/keys.c    **** 	case K23:	// L (lastX)
2222:src/keys.c    **** #endif
2223:src/keys.c    **** 	  if (State2.dot || stack_reg)
2224:src/keys.c    **** 			return arg_eval(n);
2225:src/keys.c    **** 		if ( c <= K03 )
2226:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2227:src/keys.c    **** 		break;
2228:src/keys.c    **** #ifdef DM42
2229:src/keys.c    **** 	case K62:	// '.'
2230:src/keys.c    **** 		return process_arg_dot(base);
2231:src/keys.c    **** 
2232:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2233:src/keys.c    **** 	case K64:		// plus
2234:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2235:src/keys.c    **** 			return arg_eval(n);
2236:src/keys.c    **** 		break;
2237:src/keys.c    **** 	case K54:               // minus
2238:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2239:src/keys.c    **** 			reset_arg();
2240:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2241:src/keys.c    **** 		}
2242:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2243:src/keys.c    **** 		break;
2244:src/keys.c    **** 	case K44:		// multiply
2245:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2246:src/keys.c    **** 			return arg_eval(n);
2247:src/keys.c    **** 		break;
2248:src/keys.c    **** 	case K34:
2249:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2250:src/keys.c    **** 		break;
2251:src/keys.c    **** #else
2252:src/keys.c    **** 	case K62:	// X, '.'
2253:src/keys.c    **** 		if (State2.shuffle)
2254:src/keys.c    **** 			return process_arg_shuffle(0);
2255:src/keys.c    **** 		return process_arg_dot(base);
2256:src/keys.c    **** 
2257:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2258:src/keys.c    **** 	case K64:		// Z register
2259:src/keys.c    **** 		if (State2.shuffle)
2260:src/keys.c    **** 			return process_arg_shuffle(2);
2261:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
ARM GAS  /tmp/ccvq0xdJ.s 			page 45


2262:src/keys.c    **** 			return arg_eval(n);
2263:src/keys.c    **** 		break;
2264:src/keys.c    **** 
2265:src/keys.c    **** 	case K54:
2266:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2267:src/keys.c    **** 			reset_arg();
2268:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2269:src/keys.c    **** 		}
2270:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2271:src/keys.c    **** 		break;
2272:src/keys.c    **** 
2273:src/keys.c    **** 	case K44:		// T register
2274:src/keys.c    **** 		if (State2.shuffle)
2275:src/keys.c    **** 			return process_arg_shuffle(3);
2276:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2277:src/keys.c    **** 			return arg_eval(n);
2278:src/keys.c    **** 		break;
2279:src/keys.c    **** 
2280:src/keys.c    **** 	case K34:
2281:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2282:src/keys.c    **** 		break;
2283:src/keys.c    **** #endif
2284:src/keys.c    **** 	case K_UP:
2285:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2286:src/keys.c    **** 		break;
2287:src/keys.c    **** 
2288:src/keys.c    **** 	case K_DOWN:
2289:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2290:src/keys.c    **** 		break;
2291:src/keys.c    **** 
2292:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2293:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2294:src/keys.c    **** 			if (argcmds[base].label) {
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2296:src/keys.c    **** 				State2.multi = 1;
2297:src/keys.c    **** 				State2.alphashift = 0;
2298:src/keys.c    **** 				State2.rarg = 0;
2299:src/keys.c    **** 			} else if (base == RARG_SCI) {
2300:src/keys.c    **** 				reset_arg();
2301:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2302:src/keys.c    **** 			} else if (base == RARG_ENG) {
2303:src/keys.c    **** 				reset_arg();
2304:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2305:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2306:src/keys.c    **** 				State2.dot = 1;
2307:src/keys.c    **** 		} else if (State2.numdigit > 0)
2308:src/keys.c    **** 			return arg_eval(State2.digval);
2309:src/keys.c    **** 		else if (stack_reg)
2310:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2311:src/keys.c    **** 		break;
2312:src/keys.c    **** 
2313:src/keys.c    **** 	case K24:	// <-
2314:src/keys.c    **** 		if (State2.numdigit == 0) {
2315:src/keys.c    **** 			if (State2.dot)
2316:src/keys.c    **** 				State2.dot = 0;
2317:src/keys.c    **** 			else if (State2.local)
2318:src/keys.c    **** 				State2.local = 0;
ARM GAS  /tmp/ccvq0xdJ.s 			page 46


2319:src/keys.c    **** 			else if (State2.ind)
2320:src/keys.c    **** 				State2.ind = 0;
2321:src/keys.c    **** 			else
2322:src/keys.c    **** 				goto reset;
2323:src/keys.c    **** 		}
2324:src/keys.c    **** 		else {
2325:src/keys.c    **** 			--State2.numdigit;
2326:src/keys.c    **** 			if (State2.shuffle)
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2328:src/keys.c    **** 			else
2329:src/keys.c    **** 				State2.digval /= 10;
2330:src/keys.c    **** 		}
2331:src/keys.c    **** 		break;
2332:src/keys.c    **** 
2333:src/keys.c    **** 	case K60:
2334:src/keys.c    **** 	reset:
2335:src/keys.c    **** 		reset_arg();
2336:src/keys.c    **** 	default:
2337:src/keys.c    **** 		break;
2338:src/keys.c    **** 	}
2339:src/keys.c    **** 	return STATE_UNFINISHED;
2340:src/keys.c    **** }
2341:src/keys.c    **** 
2342:src/keys.c    **** 
2343:src/keys.c    **** /*
2344:src/keys.c    ****  *  Process arguments to the diverse test commands
2345:src/keys.c    ****  */
2346:src/keys.c    **** static int process_test(const keycode c) {
2347:src/keys.c    **** 	int r = State2.test;
2348:src/keys.c    **** 	int cmpx = State2.cmplx;
2349:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2350:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2351:src/keys.c    **** 
2352:src/keys.c    **** 	State2.test = TST_NONE;
2353:src/keys.c    **** 	State2.cmplx = 0;
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2356:src/keys.c    **** 		// Lettered register
2357:src/keys.c    **** 		if (cmpx && (n & 1)) {
2358:src/keys.c    **** 			if (n == regI_idx)
2359:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2360:src/keys.c    **** 			// Disallow odd complex registers > A
2361:src/keys.c    **** 			goto again;
2362:src/keys.c    **** 		}
2363:src/keys.c    **** 		// Return the command with the register completed
2364:src/keys.c    **** 		return RARG(base, n);
2365:src/keys.c    **** 	}
2366:src/keys.c    **** 	else if ( n == 0 ) {
2367:src/keys.c    **** 		// Special 0
2368:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2369:src/keys.c    **** 	}
2370:src/keys.c    **** 	else if ( n == 1 ) {
2371:src/keys.c    **** 		// Special 1
2372:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2373:src/keys.c    **** 	}
2374:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
2375:src/keys.c    **** 		// digit 2..9, -> or .
ARM GAS  /tmp/ccvq0xdJ.s 			page 47


2376:src/keys.c    **** 		init_arg((enum rarg)base);
2377:src/keys.c    **** 		return process_arg(c);
2378:src/keys.c    **** 	}
2379:src/keys.c    **** 
2380:src/keys.c    **** 	switch (c) {
2381:src/keys.c    **** 	case K11:					// tests vs register
2382:src/keys.c    **** 	case K20:
2383:src/keys.c    **** 		init_arg((enum rarg)base);
2384:src/keys.c    **** 		return STATE_UNFINISHED;
2385:src/keys.c    **** 
2386:src/keys.c    **** 	//case K60:
2387:src/keys.c    **** 	case K24:
2388:src/keys.c    **** 		return STATE_UNFINISHED;
2389:src/keys.c    **** 
2390:src/keys.c    **** 	default:
2391:src/keys.c    **** 		break;
2392:src/keys.c    **** 	}
2393:src/keys.c    **** again:
2394:src/keys.c    **** 	State2.test = r;
2395:src/keys.c    **** 	State2.cmplx = cmpx;
2396:src/keys.c    **** 	return STATE_UNFINISHED;
2397:src/keys.c    **** }
2398:src/keys.c    **** 
2399:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2400:src/keys.c    **** /*
2401:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2402:src/keys.c    ****  */
2403:src/keys.c    **** #define USER_CAT_MAX 100
2404:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2405:src/keys.c    **** 
2406:src/keys.c    **** static int build_user_cat(void)
2407:src/keys.c    **** {
2408:src/keys.c    **** 	// find the label 'CAT'
2409:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2410:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2411:src/keys.c    **** 	int len = 0;
2412:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2413:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2414:src/keys.c    **** 		char buf1[16];
2415:src/keys.c    **** 		int i;
2416:src/keys.c    **** 		s_opcode op;
2417:src/keys.c    **** 	next:
2418:src/keys.c    **** 		pc = do_inc(pc, 0);
2419:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2420:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2421:src/keys.c    **** 			break;
2422:src/keys.c    **** 		if (isDBL(op))
2423:src/keys.c    **** 			continue;
2424:src/keys.c    **** 		if (isRARG(op)) {
2425:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2426:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2427:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2428:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2429:src/keys.c    **** 		}
2430:src/keys.c    **** 		catcmd(op, buf1);
2431:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2432:src/keys.c    **** 			// Find a position in the table to insert the new entry
ARM GAS  /tmp/ccvq0xdJ.s 			page 48


2433:src/keys.c    **** 			char buf2[16];
2434:src/keys.c    **** 			const char *p, *q;
2435:src/keys.c    **** 			int diff = 0;
2436:src/keys.c    **** 			if (op == UserCat[i]) {
2437:src/keys.c    **** 				// duplicate entry - ignore
2438:src/keys.c    **** 				goto next;
2439:src/keys.c    **** 			}
2440:src/keys.c    **** 			p = buf1;
2441:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2442:src/keys.c    **** 				++p;
2443:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2444:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2445:src/keys.c    **** 				++q;
2446:src/keys.c    **** 			diff = 0;
2447:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2448:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2449:src/keys.c    **** 			}
2450:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2451:src/keys.c    **** 				// identical according to sort order, insert after
2452:src/keys.c    **** 				++i;
2453:src/keys.c    **** 				break;
2454:src/keys.c    **** 			}
2455:src/keys.c    **** 			if (diff > 0) {
2456:src/keys.c    **** 				// insert new entry before the one found because this is greater
2457:src/keys.c    **** 				break;
2458:src/keys.c    **** 			}
2459:src/keys.c    **** 		}
2460:src/keys.c    **** 		if (i < len) {
2461:src/keys.c    **** 			// Make room
2462:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2463:src/keys.c    **** 		}
2464:src/keys.c    **** 		UserCat[i] = op;
2465:src/keys.c    **** 		++len;
2466:src/keys.c    **** 	}
2467:src/keys.c    **** 	// return the number of entries
2468:src/keys.c    **** 	return len;
2469:src/keys.c    **** }
2470:src/keys.c    **** #endif
2471:src/keys.c    **** 
2472:src/keys.c    **** /* Return the number of entries in the current catalogue.
2473:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2474:src/keys.c    ****  * likely be the most space efficient method.
2475:src/keys.c    ****  */
2476:src/keys.c    **** int current_catalogue_max(void) {
2477:src/keys.c    **** 	// A quick table of catalogue sizes
2478:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2479:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2480:src/keys.c    **** 	{
2481:src/keys.c    **** 		0, // NONE
2482:src/keys.c    **** 		SIZE_catalogue,
2483:src/keys.c    **** 		SIZE_cplx_catalogue,
2484:src/keys.c    **** 		SIZE_stats_catalogue,
2485:src/keys.c    **** 		SIZE_prob_catalogue,
2486:src/keys.c    **** 		SIZE_int_catalogue,
2487:src/keys.c    **** 		SIZE_prog_catalogue,
2488:src/keys.c    **** 		SIZE_program_xfcn,
2489:src/keys.c    **** 		SIZE_test_catalogue,
ARM GAS  /tmp/ccvq0xdJ.s 			page 49


2490:src/keys.c    **** 		SIZE_mode_catalogue,
2491:src/keys.c    **** 		SIZE_alpha_catalogue,
2492:src/keys.c    **** 		SIZE_alpha_symbols,
2493:src/keys.c    **** 		SIZE_alpha_compares,
2494:src/keys.c    **** 		SIZE_alpha_arrows,
2495:src/keys.c    **** 		SIZE_alpha_letters,
2496:src/keys.c    **** 		SIZE_alpha_subscripts,
2497:src/keys.c    **** 		NUM_CONSTS_CAT,
2498:src/keys.c    **** 		NUM_CONSTS_CAT,
2499:src/keys.c    **** 		SIZE_conv_catalogue,
2500:src/keys.c    **** 		SIZE_sums_catalogue,
2501:src/keys.c    **** 		SIZE_matrix_catalogue,
2502:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2503:src/keys.c    **** 		SIZE_internal_catalogue,
2504:src/keys.c    **** #endif
2505:src/keys.c    **** 	};
2506:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2507:src/keys.c    **** 	const int cat = State2.catalogue;
2508:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2509:src/keys.c    **** #else
2510:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2511:src/keys.c    **** #endif
2512:src/keys.c    **** }
2513:src/keys.c    **** 
2514:src/keys.c    **** 
2515:src/keys.c    **** /* Look up the character position in the given byte array and
2516:src/keys.c    ****  * build the alpha op-code for it.
2517:src/keys.c    ****  */
2518:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2519:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2520:src/keys.c    **** }
2521:src/keys.c    **** 
2522:src/keys.c    **** 
2523:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2524:src/keys.c    ****  */
2525:src/keys.c    **** opcode current_catalogue(int n) {
2526:src/keys.c    **** 	// A quick table of catalogue tables
2527:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2528:src/keys.c    **** 	static const void *catalogues[] =
2529:src/keys.c    **** 	{
2530:src/keys.c    **** 		NULL, // NONE
2531:src/keys.c    **** 		catalogue,
2532:src/keys.c    **** 		cplx_catalogue,
2533:src/keys.c    **** 		stats_catalogue,
2534:src/keys.c    **** 		prob_catalogue,
2535:src/keys.c    **** 		int_catalogue,
2536:src/keys.c    **** 		prog_catalogue,
2537:src/keys.c    **** 		program_xfcn,
2538:src/keys.c    **** 		test_catalogue,
2539:src/keys.c    **** 		mode_catalogue,
2540:src/keys.c    **** 		alpha_catalogue,
2541:src/keys.c    **** 		alpha_symbols,
2542:src/keys.c    **** 		alpha_compares,
2543:src/keys.c    **** 		alpha_arrows,
2544:src/keys.c    **** 		alpha_letters,
2545:src/keys.c    **** 		alpha_subscripts,
2546:src/keys.c    **** 		NULL,
ARM GAS  /tmp/ccvq0xdJ.s 			page 50


2547:src/keys.c    **** 		NULL,
2548:src/keys.c    **** 		NULL, //CONV
2549:src/keys.c    **** 		sums_catalogue,
2550:src/keys.c    **** 		matrix_catalogue,
2551:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2552:src/keys.c    **** 		internal_catalogue,
2553:src/keys.c    **** #endif
2554:src/keys.c    **** 	};
2555:src/keys.c    **** 	const unsigned char *cat;
2556:src/keys.c    **** 	unsigned int c = State2.catalogue;
2557:src/keys.c    **** 	int m, i;
2558:src/keys.c    **** 	unsigned p, q;
2559:src/keys.c    **** 
2560:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2561:src/keys.c    **** 		if (n == OP_ZERO)
2562:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2563:src/keys.c    **** 		return CONST(n);
2564:src/keys.c    **** 	}
2565:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2566:src/keys.c    **** 		if (n == OP_ZERO)
2567:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2568:src/keys.c    **** 		return CONST_CMPLX(n);
2569:src/keys.c    **** 	}
2570:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2571:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2573:src/keys.c    **** 			// Monadic conversion routine
2574:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2575:src/keys.c    **** 		else
2576:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2577:src/keys.c    **** 	}
2578:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2579:src/keys.c    **** 	if (c == CATALOGUE_USER)
2580:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2581:src/keys.c    **** #endif
2582:src/keys.c    **** 
2583:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2585:src/keys.c    **** 	else
2586:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2587:src/keys.c    **** 
2588:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2590:src/keys.c    **** 	}
2591:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2592:src/keys.c    **** 		return OP_NIL | OP_NOP;
2593:src/keys.c    **** 
2594:src/keys.c    **** 	/* Unpack the opcode */
2595:src/keys.c    **** 	cat += n + (n >> 2);
2596:src/keys.c    **** 	p = cat[0];
2597:src/keys.c    **** 	q = cat[1];
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2599:src/keys.c    **** 
2600:src/keys.c    **** 	/* Now figure out which opcode it really is */
2601:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
2603:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
ARM GAS  /tmp/ccvq0xdJ.s 			page 51


2604:src/keys.c    **** 		m -= opcode_breaks[i];
2605:src/keys.c    **** 	}
2606:src/keys.c    **** 	return RARG_BASEOP(m);
2607:src/keys.c    **** }
2608:src/keys.c    **** 
2609:src/keys.c    **** 
2610:src/keys.c    **** /*
2611:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2612:src/keys.c    ****  *  in multi character commands.
2613:src/keys.c    ****  */
2614:src/keys.c    **** static int forbidden_alpha(int pos) {
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2616:src/keys.c    **** }
2617:src/keys.c    **** 
2618:src/keys.c    **** /*
2619:src/keys.c    ****  *  Catalogue navigation
2620:src/keys.c    ****  */
2621:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2622:src/keys.c    ****    int pos = State.catpos;
2623:src/keys.c    ****    int ch;
2624:src/keys.c    ****    const int ctmax = current_catalogue_max();
2625:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2626:src/keys.c    **** 
2627:src/keys.c    ****    if (shift == SHIFT_N) {
2628:src/keys.c    ****      switch (c) {
2629:src/keys.c    **** #ifdef DM42
2630:src/keys.c    ****      case K05:			// XEQ accepts command
2631:src/keys.c    **** #else	  
2632:src/keys.c    ****      case K30:			// XEQ accepts command
2633:src/keys.c    **** #endif						  
2634:src/keys.c    ****      case K20:			// Enter accepts command
2635:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2637:src/keys.c    **** 
2638:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2639:src/keys.c    **** 
2640:src/keys.c    **** 	 if (isRARG(op)) {
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2643:src/keys.c    **** 	     return op;
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2646:src/keys.c    **** 	   else
2647:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2648:src/keys.c    **** 	 }
2649:src/keys.c    **** 	 else {
2650:src/keys.c    **** 	   return check_confirm(op);
2651:src/keys.c    **** 	 }
2652:src/keys.c    ****        } else
2653:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2654:src/keys.c    ****        return STATE_UNFINISHED;
2655:src/keys.c    **** 
2656:src/keys.c    ****      case K24:			// backspace
2657:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
2659:src/keys.c    **** 	   goto search;
2660:src/keys.c    **** 	 pos = 0;
ARM GAS  /tmp/ccvq0xdJ.s 			page 52


2661:src/keys.c    **** 	 goto set_pos;
2662:src/keys.c    ****        } else
2663:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2664:src/keys.c    ****        return STATE_UNFINISHED;
2665:src/keys.c    **** 
2666:src/keys.c    ****      case K60:
2667:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2668:src/keys.c    ****        return STATE_UNFINISHED;
2669:src/keys.c    **** 
2670:src/keys.c    ****      case K_UP:
2671:src/keys.c    ****        CmdLineLength = 0;
2672:src/keys.c    ****        if (pos == 0)
2673:src/keys.c    **** 	 goto set_max;
2674:src/keys.c    ****        else
2675:src/keys.c    **** 	 --pos;
2676:src/keys.c    ****        goto set_pos;
2677:src/keys.c    **** 
2678:src/keys.c    ****      case K_DOWN:
2679:src/keys.c    ****        CmdLineLength = 0;
2680:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2681:src/keys.c    ****        if (pos >= ctmax)
2682:src/keys.c    **** 	 pos = 0;
2683:src/keys.c    ****        goto set_pos;
2684:src/keys.c    **** 
2685:src/keys.c    ****      default:
2686:src/keys.c    ****        break;
2687:src/keys.c    ****      }
2688:src/keys.c    ****    } else if (shift == SHIFT_F) {
2689:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2690:src/keys.c    ****        /*
2691:src/keys.c    **** 	* f 1/x in conversion catalogue
2692:src/keys.c    **** 	*/
2693:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2694:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2695:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2696:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2697:src/keys.c    **** 	*/
2698:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2699:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2700:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2701:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2702:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2703:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2704:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2705:src/keys.c    ****        };
2706:src/keys.c    ****        const opcode op = current_catalogue(pos);
2707:src/keys.c    ****        int i;
2708:src/keys.c    **** 
2709:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2710:src/keys.c    ****        if (isRARG(op))
2711:src/keys.c    **** 	 return op ^ 1;
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
2714:src/keys.c    **** 	   return conv_mapping[i^1];
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2716:src/keys.c    ****      }
2717:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 53


2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2719:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2720:src/keys.c    ****        return STATE_UNFINISHED;
2721:src/keys.c    ****      }
2722:src/keys.c    ****    } else if (shift == SHIFT_G) {
2723:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2725:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2726:src/keys.c    ****      }
2727:src/keys.c    ****    }
2728:src/keys.c    **** 
2729:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2730:src/keys.c    ****     * jump to the appropriate catalogue entry.
2731:src/keys.c    ****     */
2732:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2733:src/keys.c    ****    reset_shift();
2734:src/keys.c    ****    if (ch == '\0')
2735:src/keys.c    ****      return STATE_UNFINISHED;
2736:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2737:src/keys.c    ****      // No multi character search in alpha catalogues
2738:src/keys.c    ****      CmdLineLength = 0;
2739:src/keys.c    ****    }
2740:src/keys.c    ****    if (CmdLineLength < 10)
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2743:src/keys.c    **** 
2744:src/keys.c    ****  search:
2745:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2746:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2747:src/keys.c    ****      char buf[16];
2748:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2749:src/keys.c    ****      int i;
2750:src/keys.c    **** 
2751:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2752:src/keys.c    ****        cmd++;
2753:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2755:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2756:src/keys.c    ****        if (c > cl)
2757:src/keys.c    **** 	 goto set_pos;
2758:src/keys.c    ****        else if (c < cl)
2759:src/keys.c    **** 	 break;
2760:src/keys.c    ****      }
2761:src/keys.c    ****      if (Cmdline[i] == '\0')
2762:src/keys.c    ****        goto set_pos;
2763:src/keys.c    ****    }
2764:src/keys.c    ****  set_max:
2765:src/keys.c    ****    pos = ctmax - 1;
2766:src/keys.c    ****  set_pos:
2767:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2768:src/keys.c    ****      --pos;
2769:src/keys.c    ****    State.catpos = pos;
2770:src/keys.c    ****    return STATE_UNFINISHED;
2771:src/keys.c    ****  }
2772:src/keys.c    **** 
2773:src/keys.c    **** #ifndef REALBUILD
2774:src/keys.c    **** int find_pos(const char* text) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 54


2775:src/keys.c    **** 	int pos;
2776:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2777:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2778:src/keys.c    **** 		char buf[16];
2779:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2780:src/keys.c    **** 		int i;
2781:src/keys.c    **** 
2782:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2783:src/keys.c    **** 			cmd++;
2784:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2786:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2787:src/keys.c    **** 			if (c > cl)
2788:src/keys.c    **** 				return pos;
2789:src/keys.c    **** 			else if (c < cl)
2790:src/keys.c    **** 				break;
2791:src/keys.c    **** 		}
2792:src/keys.c    **** 		if (text[i] == '\0')
2793:src/keys.c    **** 			return pos;
2794:src/keys.c    **** 	}
2795:src/keys.c    **** 	return pos;
2796:src/keys.c    **** }
2797:src/keys.c    **** 
2798:src/keys.c    **** #endif
2799:src/keys.c    **** 
2800:src/keys.c    **** /* Multi (2) word instruction entry
2801:src/keys.c    ****  */
2802:src/keys.c    **** static void reset_multi(void) {
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2804:src/keys.c    **** 	State2.multi = 0;
2805:src/keys.c    **** 	if (! State2.alphas )
2806:src/keys.c    **** 		State2.alphashift = 0;
2807:src/keys.c    **** }
2808:src/keys.c    **** 
2809:src/keys.c    **** static int process_multi(const keycode c) {
2810:src/keys.c    **** 	enum shifts shift = reset_shift();
2811:src/keys.c    **** 	unsigned int ch = 0;
2812:src/keys.c    **** 	unsigned int opcode;
2813:src/keys.c    **** 
2814:src/keys.c    **** 	if (State2.catalogue) {
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
2816:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2818:src/keys.c    **** 			return opcode;
2819:src/keys.c    **** 		ch = (unsigned char) opcode;
2820:src/keys.c    **** 		goto add_char;
2821:src/keys.c    **** 	}
2822:src/keys.c    **** 
2823:src/keys.c    **** 	switch (c) {
2824:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2825:src/keys.c    **** 		if (shift != SHIFT_N)
2826:src/keys.c    **** 				break;
2827:src/keys.c    **** 		reset_multi();
2828:src/keys.c    **** 		if (State2.numdigit == 0)
2829:src/keys.c    **** 			return STATE_UNFINISHED;
2830:src/keys.c    **** 		else if (State2.numdigit == 1)
2831:src/keys.c    **** 			State2.digval2 = 0;
ARM GAS  /tmp/ccvq0xdJ.s 			page 55


2832:src/keys.c    **** 		goto fin;
2833:src/keys.c    **** 
2834:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2835:src/keys.c    **** 		if (shift != SHIFT_H) {
2836:src/keys.c    **** 			if (State2.numdigit == 0)
2837:src/keys.c    **** 				reset_multi();
2838:src/keys.c    **** 			else
2839:src/keys.c    **** 				State2.numdigit--;
2840:src/keys.c    **** 			return STATE_UNFINISHED;
2841:src/keys.c    **** 		}
2842:src/keys.c    **** 		break;
2843:src/keys.c    **** 
2844:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2845:src/keys.c    **** 		if (shift == SHIFT_F)
2846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2847:src/keys.c    **** 		else
2848:src/keys.c    **** 			reset_multi();
2849:src/keys.c    **** 		return STATE_UNFINISHED;
2850:src/keys.c    **** 
2851:src/keys.c    **** 	default:
2852:src/keys.c    **** 		break;
2853:src/keys.c    **** 		}
2854:src/keys.c    **** 
2855:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2856:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2857:src/keys.c    **** 	if (ch == 0)
2858:src/keys.c    **** 		return STATE_UNFINISHED;
2859:src/keys.c    **** add_char:
2860:src/keys.c    **** 	if (State2.numdigit == 0) {
2861:src/keys.c    **** 		State2.digval = ch;
2862:src/keys.c    **** 		State2.numdigit = 1;
2863:src/keys.c    **** 		return STATE_UNFINISHED;
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2865:src/keys.c    **** 		State2.digval2 = ch;
2866:src/keys.c    **** 		State2.numdigit = 2;
2867:src/keys.c    **** 		return STATE_UNFINISHED;
2868:src/keys.c    **** 	}
2869:src/keys.c    **** 	reset_multi();
2870:src/keys.c    **** 
2871:src/keys.c    **** fin:
2872:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2874:src/keys.c    **** 	return opcode;
2875:src/keys.c    **** }
2876:src/keys.c    **** 
2877:src/keys.c    **** 
2878:src/keys.c    **** /* Handle YES/NO confirmations
2879:src/keys.c    ****  */
2880:src/keys.c    **** static int process_confirm(const keycode c) {
2881:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2882:src/keys.c    **** 	switch (c) {
2883:src/keys.c    **** #ifdef DM42
2884:src/keys.c    **** 	case K52:
2885:src/keys.c    **** #endif
2886:src/keys.c    **** 	case K63:			// Yes
2887:src/keys.c    **** 	  switch (State2.confirm) {
2888:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
ARM GAS  /tmp/ccvq0xdJ.s 			page 56


2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2892:src/keys.c    **** 	  }
2893:src/keys.c    **** 	case K24:
2894:src/keys.c    **** #ifdef DM42
2895:src/keys.c    **** 	case K22:
2896:src/keys.c    **** #else
2897:src/keys.c    **** 	case K32:
2898:src/keys.c    **** #endif
2899:src/keys.c    **** 	  // No
2900:src/keys.c    **** 	  State2.confirm = 0;
2901:src/keys.c    **** 	  State2.digval = 0;
2902:src/keys.c    **** 	  break;
2903:src/keys.c    **** 	default:			// No state change
2904:src/keys.c    **** 	  break;
2905:src/keys.c    **** 	}
2906:src/keys.c    **** 	return STATE_UNFINISHED;
2907:src/keys.c    **** }
2908:src/keys.c    **** 
2909:src/keys.c    **** 
2910:src/keys.c    **** /*
2911:src/keys.c    ****  *  STATUS
2912:src/keys.c    ****  */
2913:src/keys.c    **** static int process_status(const keycode c) {
2914:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2916:src/keys.c    **** 
2917:src/keys.c    **** 	if (c == K_UP) {
2918:src/keys.c    **** 		if (--n < -2)
2919:src/keys.c    **** 			n = max;
2920:src/keys.c    **** 	}
2921:src/keys.c    **** 	else if (c == K_DOWN) {
2922:src/keys.c    **** 		if (++n > max)
2923:src/keys.c    **** 			n = -2;
2924:src/keys.c    **** 	}
2925:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2926:src/keys.c    **** 		State2.status = 0;
2927:src/keys.c    **** 		return STATE_UNFINISHED;
2928:src/keys.c    **** 	} 
2929:src/keys.c    **** 	else {
2930:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2931:src/keys.c    **** 		if (nn <= 9)
2932:src/keys.c    **** 			n = nn;
2933:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2934:src/keys.c    **** 			n = n == max ? 10 : max;
2935:src/keys.c    **** 		else if (nn != NO_REG)
2936:src/keys.c    **** 			n = 10; 
2937:src/keys.c    **** 	}
2938:src/keys.c    **** 	State2.status = n + 3;
2939:src/keys.c    **** 
2940:src/keys.c    **** 	return STATE_UNFINISHED;
2941:src/keys.c    **** }
2942:src/keys.c    **** 
2943:src/keys.c    **** 
2944:src/keys.c    **** /*
2945:src/keys.c    ****  *  CAT helper
ARM GAS  /tmp/ccvq0xdJ.s 			page 57


2946:src/keys.c    ****  */
2947:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2947 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2948:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2948 2 view .LVU58
2947:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2947 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2947:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2947 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2948 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2949:src/keys.c    **** 
2950:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2950 2 is_stmt 1 view .LVU62
 234              		.loc 1 2950 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2950 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2950 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2950 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2951:src/keys.c    **** }
 245              		.loc 1 2951 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2950:src/keys.c    **** }
 249              		.loc 1 2950 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2951 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2950:src/keys.c    **** }
 256              		.loc 1 2950 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2950:src/keys.c    **** }
 259              		.loc 1 2950 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
ARM GAS  /tmp/ccvq0xdJ.s 			page 58


 264              		.loc 1 2951 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2951 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2952:src/keys.c    **** 
2953:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2953 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2953 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2953 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2954:src/keys.c    **** 	do {
 294              		.loc 1 2954 2 is_stmt 1 view .LVU77
2955:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2955 3 view .LVU78
2956:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2956 4 view .LVU79
2953:src/keys.c    **** 	do {
 297              		.loc 1 2953 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2956 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2957:src/keys.c    **** 				pc = do_inc(pc, 0);
2958:src/keys.c    **** 				if (PcWrapped)
2959:src/keys.c    **** 					break;
2960:src/keys.c    **** 			}
2961:src/keys.c    **** 			else
2962:src/keys.c    **** 				inc = 1;
2963:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2963 4 is_stmt 1 view .LVU82
 304              		.loc 1 2963 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2963 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
ARM GAS  /tmp/ccvq0xdJ.s 			page 59


 310              		.loc 1 2963 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2963 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2957:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2957 5 is_stmt 1 view .LVU87
2957:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2957 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2958:src/keys.c    **** 					break;
 323              		.loc 1 2958 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2957:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2957 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2958:src/keys.c    **** 					break;
 328              		.loc 1 2958 5 is_stmt 1 view .LVU91
2958:src/keys.c    **** 					break;
 329              		.loc 1 2958 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2964:src/keys.c    **** 				return pc;
2965:src/keys.c    **** 			}
2966:src/keys.c    **** 		}
2967:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2967 3 is_stmt 1 view .LVU93
 333              		.loc 1 2967 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2967 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2968:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2968 10 is_stmt 1 view .LVU96
 342              		.loc 1 2968 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2968 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2969:src/keys.c    **** 	return pc;
2970:src/keys.c    **** }
 351              		.loc 1 2970 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccvq0xdJ.s 			page 60


 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2970 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccvq0xdJ.s 			page 61


 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB307:
 432              	.LBI307:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE307:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB324:
 438              	.LBB308:
 439              	.LBI308:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/ccvq0xdJ.s 			page 62


 440              		.loc 1 104 20 view .LVU130
 441              	.LBB309:
 105:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 105 2 view .LVU131
 443              	.LBB310:
 444              	.LBI310:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB311:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE311:
 453              	.LBE310:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE309:
 462              	.LBE308:
 463              	.LBE324:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 578 2 view .LVU147
ARM GAS  /tmp/ccvq0xdJ.s 			page 63


 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB325:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE325:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB326:
 505              	.LBB321:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB318:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB315:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB312:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE312:
 518              	.LBE315:
ARM GAS  /tmp/ccvq0xdJ.s 			page 64


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE318:
 527              	.LBE321:
 528              	.LBE326:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB327:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
 558              	.LBE327:
ARM GAS  /tmp/ccvq0xdJ.s 			page 65


 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
 561              	.LBB328:
 562              	.LBB322:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB319:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB316:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB313:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE313:
 575              	.LBE316:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE319:
 584              	.LBE322:
 585              	.LBE328:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 587:src/keys.c    **** 		State2.digval = regX_idx;
ARM GAS  /tmp/ccvq0xdJ.s 			page 66


 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB329:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE329:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB330:
 612              	.LBB323:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB320:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB317:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB314:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE314:
 625              	.LBE317:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE320:
 634              	.LBE323:
 635              	.LBE330:
 610:src/keys.c    **** 
 636              		.loc 1 610 1 view .LVU218
ARM GAS  /tmp/ccvq0xdJ.s 			page 67


 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
ARM GAS  /tmp/ccvq0xdJ.s 			page 68


 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2971:src/keys.c    **** 
2972:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2972 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2972 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2972 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2973:src/keys.c    **** 	do {
 717              		.loc 1 2973 2 is_stmt 1 view .LVU239
2974:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2974 3 view .LVU240
2975:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2975 4 view .LVU241
 720              		.loc 1 2975 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2976:src/keys.c    **** 			if (PcWrapped)
2977:src/keys.c    **** 				break;
2978:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2978 4 is_stmt 1 view .LVU243
2979:src/keys.c    **** 				return pc;
2980:src/keys.c    **** 			}
ARM GAS  /tmp/ccvq0xdJ.s 			page 69


2981:src/keys.c    **** 		}
2982:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2982 3 view .LVU244
 727              		.loc 1 2982 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2976:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2976 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2982 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2983:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2983 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2975:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2975 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2976:src/keys.c    **** 				break;
 739              		.loc 1 2976 4 is_stmt 1 view .LVU250
2982:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2982 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2983 3 is_stmt 1 view .LVU252
2976:src/keys.c    **** 				break;
 744              		.loc 1 2976 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2978:src/keys.c    **** 				return pc;
 746              		.loc 1 2978 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2978:src/keys.c    **** 				return pc;
 750              		.loc 1 2978 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2985:src/keys.c    **** 	return pc;
2986:src/keys.c    **** }
 753              		.loc 1 2986 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2983:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2983 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2984 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2983:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2983 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
ARM GAS  /tmp/ccvq0xdJ.s 			page 70


2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2984 10 is_stmt 1 view .LVU260
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2984 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2984 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2986 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2986 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 714 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB331:
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 716 3 view .LVU266
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 804              		.loc 1 716 13 is_stmt 0 view .LVU267
 805 0000 C3B2     		uxtb	r3, r0
 806              	.LVL64:
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 717 3 is_stmt 1 view .LVU268
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 808              		.loc 1 717 25 is_stmt 0 view .LVU269
 809 0002 A3F14102 		sub	r2, r3, #65
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 810              		.loc 1 717 6 view .LVU270
 811 0006 032A     		cmp	r2, #3
 812 0008 0AD9     		bls	.L76
 725:src/keys.c    **** #endif
 813              		.loc 1 725 7 is_stmt 1 view .LVU271
 725:src/keys.c    **** #endif
 814              		.loc 1 725 29 is_stmt 0 view .LVU272
ARM GAS  /tmp/ccvq0xdJ.s 			page 71


 815 000a A3F1AD02 		sub	r2, r3, #173
 725:src/keys.c    **** #endif
 816              		.loc 1 725 10 view .LVU273
 817 000e 052A     		cmp	r2, #5
 818 0010 03D8     		bhi	.L77
 819              	.L74:
 735:src/keys.c    **** 		}
 820              		.loc 1 735 4 is_stmt 1 view .LVU274
 735:src/keys.c    **** 		}
 821              		.loc 1 735 20 is_stmt 0 view .LVU275
 822 0012 074B     		ldr	r3, .L78
 823              	.LVL65:
 735:src/keys.c    **** 		}
 824              		.loc 1 735 20 view .LVU276
 825 0014 0122     		movs	r2, #1
 826              	.LVL66:
 735:src/keys.c    **** 		}
 827              		.loc 1 735 20 view .LVU277
 828 0016 1A60     		str	r2, [r3]
 829              	.LBE331:
 739:src/keys.c    **** 
 830              		.loc 1 739 1 view .LVU278
 831 0018 7047     		bx	lr
 832              	.LVL67:
 833              	.L77:
 834              	.LBB332:
 728:src/keys.c    **** #endif
 835              		.loc 1 728 4 view .LVU279
 836 001a BC2B     		cmp	r3, #188
 837 001c F9D0     		beq	.L74
 838              	.LBE332:
 739:src/keys.c    **** 
 839              		.loc 1 739 1 view .LVU280
 840 001e 7047     		bx	lr
 841              	.L76:
 842              	.LBB333:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 843              		.loc 1 718 4 is_stmt 1 view .LVU281
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 844              		.loc 1 718 19 is_stmt 0 view .LVU282
 845 0020 044B     		ldr	r3, .L78+4
 846              	.LVL68:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 847              		.loc 1 718 19 view .LVU283
 848 0022 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 849              	.LVL69:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 850              		.loc 1 718 35 view .LVU284
 851 0024 4038     		subs	r0, r0, #64
 852              	.LVL70:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 853              		.loc 1 718 19 view .LVU285
 854 0026 60F30202 		bfi	r2, r0, #0, #3
 855 002a 1A75     		strb	r2, [r3, #20]
 719:src/keys.c    **** 		}
 856              		.loc 1 719 4 is_stmt 1 view .LVU286
 719:src/keys.c    **** 		}
ARM GAS  /tmp/ccvq0xdJ.s 			page 72


 857              		.loc 1 719 11 is_stmt 0 view .LVU287
 858 002c 3320     		movs	r0, #51
 859              	.LVL71:
 719:src/keys.c    **** 		}
 860              		.loc 1 719 11 view .LVU288
 861 002e 7047     		bx	lr
 862              	.L79:
 863              		.align	2
 864              	.L78:
 865 0030 00000000 		.word	NonProgrammable
 866 0034 00000000 		.word	StateWhileOn
 867              	.LBE333:
 868              		.cfi_endproc
 869              	.LFE64:
 871              		.section	.text.init_arg.part.0,"ax",%progbits
 872              		.align	1
 873              		.p2align 2,,3
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	init_arg.part.0:
 880              	.LVL72:
 881              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 882              		.loc 1 552 13 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 887              		.loc 1 555 2 view .LVU290
 555:src/keys.c    **** 	State2.ind = 0;
 888              		.loc 1 555 10 is_stmt 0 view .LVU291
 889 0000 084B     		ldr	r3, .L81
 560:src/keys.c    **** 	State2.local = 0;
 890              		.loc 1 560 13 view .LVU292
 891 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 892              		.loc 1 555 10 view .LVU293
 893 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 894              		.loc 1 556 2 is_stmt 1 view .LVU294
 557:src/keys.c    **** 	State2.numdigit = 0;
 895              		.loc 1 557 2 view .LVU295
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 13 is_stmt 0 view .LVU296
 897 0006 21F40F11 		bic	r1, r1, #2342912
 898 000a 8628     		cmp	r0, #134
 899 000c 0CBF     		ite	eq
 900 000e 4FF40812 		moveq	r2, #2228224
 901 0012 4FF40012 		movne	r2, #2097152
 902 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 903              		.loc 1 557 16 view .LVU297
 904 0018 0021     		movs	r1, #0
 560:src/keys.c    **** 	State2.local = 0;
ARM GAS  /tmp/ccvq0xdJ.s 			page 73


 905              		.loc 1 560 13 view .LVU298
 906 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 907              		.loc 1 557 16 view .LVU299
 908 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 909              		.loc 1 558 2 is_stmt 1 view .LVU300
 558:src/keys.c    **** 	State2.rarg = 1;
 910              		.loc 1 558 18 is_stmt 0 view .LVU301
 911 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 912              		.loc 1 559 2 is_stmt 1 view .LVU302
 560:src/keys.c    **** 	State2.local = 0;
 913              		.loc 1 560 2 view .LVU303
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 914              		.loc 1 561 2 view .LVU304
 562:src/keys.c    **** }
 915              		.loc 1 562 2 view .LVU305
 563:src/keys.c    **** 
 916              		.loc 1 563 1 is_stmt 0 view .LVU306
 917 0020 7047     		bx	lr
 918              	.L82:
 919 0022 00BF     		.align	2
 920              	.L81:
 921 0024 00000000 		.word	StateWhileOn
 922              		.cfi_endproc
 923              	.LFE66:
 925              		.section	.text.reset_arg,"ax",%progbits
 926              		.align	1
 927              		.p2align 2,,3
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 931              		.fpu fpv4-sp-d16
 933              	reset_arg:
 934              	.LFB34:
1898:src/keys.c    **** 	init_arg((enum rarg) 0);
 935              		.loc 1 1898 29 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
1899:src/keys.c    **** 	State2.rarg = 0;
 939              		.loc 1 1899 2 view .LVU308
 940              	.LVL73:
 941              	.LBB334:
 942              	.LBI334:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 943              		.loc 1 552 13 view .LVU309
 944              	.LBB335:
 553:src/keys.c    **** 		return;
 945              		.loc 1 553 2 view .LVU310
 946              	.LBE335:
 947              	.LBE334:
1898:src/keys.c    **** 	init_arg((enum rarg) 0);
 948              		.loc 1 1898 29 is_stmt 0 view .LVU311
 949 0000 08B5     		push	{r3, lr}
 950              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccvq0xdJ.s 			page 74


 951              		.cfi_offset 3, -8
 952              		.cfi_offset 14, -4
 953              	.LBB337:
 954              	.LBB336:
 553:src/keys.c    **** 		return;
 955              		.loc 1 553 6 view .LVU312
 956 0002 FFF7FEFF 		bl	is_bad_cmdline
 957              	.LVL74:
 553:src/keys.c    **** 		return;
 958              		.loc 1 553 5 view .LVU313
 959 0006 08B9     		cbnz	r0, .L84
 960 0008 FFF7FEFF 		bl	init_arg.part.0
 961              	.LVL75:
 962              	.L84:
 553:src/keys.c    **** 		return;
 963              		.loc 1 553 5 view .LVU314
 964              	.LBE336:
 965              	.LBE337:
1900:src/keys.c    **** }
 966              		.loc 1 1900 2 is_stmt 1 view .LVU315
1900:src/keys.c    **** }
 967              		.loc 1 1900 14 is_stmt 0 view .LVU316
 968 000c 024B     		ldr	r3, .L86
 969 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 970 0010 6FF34512 		bfc	r2, #5, #1
 971 0014 9A75     		strb	r2, [r3, #22]
1901:src/keys.c    **** 
 972              		.loc 1 1901 1 view .LVU317
 973 0016 08BD     		pop	{r3, pc}
 974              	.L87:
 975              		.align	2
 976              	.L86:
 977 0018 00000000 		.word	StateWhileOn
 978              		.cfi_endproc
 979              	.LFE34:
 981              		.section	.text.arg_eval,"ax",%progbits
 982              		.align	1
 983              		.p2align 2,,3
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
 989              	arg_eval:
 990              	.LVL76:
 991              	.LFB35:
1903:src/keys.c    ****    const unsigned int base = CmdBase;
 992              		.loc 1 1903 40 is_stmt 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
1904:src/keys.c    ****    int r = RARG(base, val 
 996              		.loc 1 1904 4 view .LVU319
1903:src/keys.c    ****    const unsigned int base = CmdBase;
 997              		.loc 1 1903 40 is_stmt 0 view .LVU320
 998 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 999              		.cfi_def_cfa_offset 24
 1000              		.cfi_offset 3, -24
ARM GAS  /tmp/ccvq0xdJ.s 			page 75


 1001              		.cfi_offset 4, -20
 1002              		.cfi_offset 5, -16
 1003              		.cfi_offset 6, -12
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
1904:src/keys.c    ****    int r = RARG(base, val 
 1006              		.loc 1 1904 30 view .LVU321
 1007 0002 284B     		ldr	r3, .L115
1905:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1008              		.loc 1 1905 12 view .LVU322
 1009 0004 9E7D     		ldrb	r6, [r3, #22]	@ zero_extendqisi2
 1010 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1904:src/keys.c    ****    int r = RARG(base, val 
 1011              		.loc 1 1904 23 view .LVU323
 1012 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 1013              	.LVL77:
1905:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1014              		.loc 1 1905 4 is_stmt 1 view .LVU324
1905:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1905 12 is_stmt 0 view .LVU325
 1016 000a F507     		lsls	r5, r6, #31
1908:src/keys.c    **** 
 1017              		.loc 1 1908 34 view .LVU326
 1018 000c 264D     		ldr	r5, .L115+4
 1019 000e 2D68     		ldr	r5, [r5]
1905:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1020              		.loc 1 1905 12 view .LVU327
 1021 0010 01F08003 		and	r3, r1, #128
1908:src/keys.c    **** 
 1022              		.loc 1 1908 32 view .LVU328
 1023 0014 95F8EA77 		ldrb	r7, [r5, #2026]	@ zero_extendqisi2
1905:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1024              		.loc 1 1905 12 view .LVU329
 1025 0018 0344     		add	r3, r3, r0
 1026 001a 02F12004 		add	r4, r2, #32
 1027 001e 48BF     		it	mi
 1028 0020 7033     		addmi	r3, r3, #112
 1029 0022 2402     		lsls	r4, r4, #8
1908:src/keys.c    **** 
 1030              		.loc 1 1908 79 view .LVU330
 1031 0024 3F07     		lsls	r7, r7, #28
1905:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1032              		.loc 1 1905 12 view .LVU331
 1033 0026 44EA0304 		orr	r4, r4, r3
 1034              	.LVL78:
1908:src/keys.c    **** 
 1035              		.loc 1 1908 4 is_stmt 1 view .LVU332
1908:src/keys.c    **** 
 1036              		.loc 1 1908 79 is_stmt 0 view .LVU333
 1037 002a 26D5     		bpl	.L95
1908:src/keys.c    **** 
 1038              		.loc 1 1908 79 discriminator 2 view .LVU334
 1039 002c 16F0400F 		tst	r6, #64
 1040 0030 0CBF     		ite	eq
 1041 0032 0426     		moveq	r6, #4
 1042 0034 0826     		movne	r6, #8
 1043              	.L90:
ARM GAS  /tmp/ccvq0xdJ.s 			page 76


 1044              	.LVL79:
1910:src/keys.c    ****      /*
 1045              		.loc 1 1910 4 is_stmt 1 discriminator 6 view .LVU335
1910:src/keys.c    ****      /*
 1046              		.loc 1 1910 7 is_stmt 0 discriminator 6 view .LVU336
 1047 0036 0B06     		lsls	r3, r1, #24
 1048 0038 1BD4     		bmi	.L91
1926:src/keys.c    ****        if (C_LOCKED) {
 1049              		.loc 1 1926 6 is_stmt 1 view .LVU337
1926:src/keys.c    ****        if (C_LOCKED) {
 1050              		.loc 1 1926 23 is_stmt 0 view .LVU338
 1051 003a 1C4B     		ldr	r3, .L115+8
 1052 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1053 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1926:src/keys.c    ****        if (C_LOCKED) {
 1054              		.loc 1 1926 9 view .LVU339
 1055 0042 DF06     		lsls	r7, r3, #27
 1056 0044 11D5     		bpl	.L92
1926:src/keys.c    ****        if (C_LOCKED) {
 1057              		.loc 1 1926 55 discriminator 1 view .LVU340
 1058 0046 95F8E437 		ldrb	r3, [r5, #2020]	@ zero_extendqisi2
1926:src/keys.c    ****        if (C_LOCKED) {
 1059              		.loc 1 1926 40 discriminator 1 view .LVU341
 1060 004a 13F00403 		ands	r3, r3, #4
 1061 004e 1BD1     		bne	.L112
1926:src/keys.c    ****        if (C_LOCKED) {
 1062              		.loc 1 1926 40 view .LVU342
 1063 0050 6221     		movs	r1, #98
 1064              	.L93:
1926:src/keys.c    ****        if (C_LOCKED) {
 1065              		.loc 1 1926 30 discriminator 7 view .LVU343
 1066 0052 8142     		cmp	r1, r0
 1067 0054 09D2     		bcs	.L92
1926:src/keys.c    ****        if (C_LOCKED) {
 1068              		.loc 1 1926 86 discriminator 8 view .LVU344
 1069 0056 C107     		lsls	r1, r0, #31
 1070 0058 07D5     		bpl	.L92
1927:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1071              		.loc 1 1927 8 is_stmt 1 view .LVU345
1927:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1072              		.loc 1 1927 11 is_stmt 0 view .LVU346
 1073 005a 1BB1     		cbz	r3, .L101
1927:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1074              		.loc 1 1927 12 discriminator 1 view .LVU347
 1075 005c 95F8DE37 		ldrb	r3, [r5, #2014]	@ zero_extendqisi2
 1076 0060 5B07     		lsls	r3, r3, #29
 1077 0062 19D4     		bmi	.L113
 1078              	.LVL80:
 1079              	.L101:
1932:src/keys.c    ****        }
 1080              		.loc 1 1932 10 view .LVU348
 1081 0064 3324     		movs	r4, #51
 1082              	.LVL81:
1947:src/keys.c    **** 
 1083              		.loc 1 1947 2 view .LVU349
 1084 0066 2046     		mov	r0, r4
 1085              	.LVL82:
ARM GAS  /tmp/ccvq0xdJ.s 			page 77


1947:src/keys.c    **** 
 1086              		.loc 1 1947 2 view .LVU350
 1087 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1088              	.LVL83:
 1089              	.L92:
1940:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1090              		.loc 1 1940 6 is_stmt 1 view .LVU351
1940:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1091              		.loc 1 1940 31 is_stmt 0 view .LVU352
 1092 006a A2F12203 		sub	r3, r2, #34
1940:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1093              		.loc 1 1940 9 view .LVU353
 1094 006e 012B     		cmp	r3, #1
 1095 0070 05D9     		bls	.L114
 1096              	.LVL84:
 1097              	.L91:
1945:src/keys.c    ****    return r;
 1098              		.loc 1 1945 4 is_stmt 1 view .LVU354
 1099 0072 FFF7FEFF 		bl	reset_arg
 1100              	.LVL85:
1946:src/keys.c    ****  }
 1101              		.loc 1 1946 4 view .LVU355
 1102              	.L88:
1947:src/keys.c    **** 
 1103              		.loc 1 1947 2 is_stmt 0 view .LVU356
 1104 0076 2046     		mov	r0, r4
 1105 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1106              	.LVL86:
 1107              	.L95:
1908:src/keys.c    **** 
 1108              		.loc 1 1908 79 view .LVU357
 1109 007a 0426     		movs	r6, #4
 1110 007c DBE7     		b	.L90
 1111              	.LVL87:
 1112              	.L114:
1940:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1113              		.loc 1 1940 76 discriminator 1 view .LVU358
 1114 007e C6F16406 		rsb	r6, r6, #100
 1115              	.LVL88:
1940:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1116              		.loc 1 1940 55 discriminator 1 view .LVU359
 1117 0082 8642     		cmp	r6, r0
 1118 0084 F5D2     		bcs	.L91
 1119 0086 EDE7     		b	.L101
 1120              	.LVL89:
 1121              	.L112:
1926:src/keys.c    ****        if (C_LOCKED) {
 1122              		.loc 1 1926 55 discriminator 2 view .LVU360
 1123 0088 95F8DE17 		ldrb	r1, [r5, #2014]	@ zero_extendqisi2
1926:src/keys.c    ****        if (C_LOCKED) {
 1124              		.loc 1 1926 40 discriminator 2 view .LVU361
 1125 008c 11F0040F 		tst	r1, #4
 1126 0090 0CBF     		ite	eq
 1127 0092 6221     		moveq	r1, #98
 1128 0094 0021     		movne	r1, #0
 1129 0096 DCE7     		b	.L93
 1130              	.L113:
ARM GAS  /tmp/ccvq0xdJ.s 			page 78


1928:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1131              		.loc 1 1928 3 is_stmt 1 view .LVU362
 1132 0098 1920     		movs	r0, #25
 1133              	.LVL90:
1928:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1134              		.loc 1 1928 3 is_stmt 0 view .LVU363
 1135 009a FFF7FEFF 		bl	error_message
 1136              	.LVL91:
1929:src/keys.c    ****        }
 1137              		.loc 1 1929 3 is_stmt 1 view .LVU364
1929:src/keys.c    ****        }
 1138              		.loc 1 1929 10 is_stmt 0 view .LVU365
 1139 009e 3324     		movs	r4, #51
 1140              	.LVL92:
1929:src/keys.c    ****        }
 1141              		.loc 1 1929 10 view .LVU366
 1142 00a0 E9E7     		b	.L88
 1143              	.L116:
 1144 00a2 00BF     		.align	2
 1145              	.L115:
 1146 00a4 00000000 		.word	StateWhileOn
 1147 00a8 00000000 		.word	main_ram
 1148 00ac 00000000 		.word	argcmds
 1149              		.cfi_endproc
 1150              	.LFE35:
 1152              		.section	.text.arg_digit,"ax",%progbits
 1153              		.align	1
 1154              		.p2align 2,,3
 1155              		.syntax unified
 1156              		.thumb
 1157              		.thumb_func
 1158              		.fpu fpv4-sp-d16
 1160              	arg_digit:
 1161              	.LVL93:
 1162              	.LFB36:
1949:src/keys.c    **** 	int lim;
 1163              		.loc 1 1949 29 is_stmt 1 view -0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 8
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
1950:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1167              		.loc 1 1950 2 view .LVU368
1952:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1168              		.loc 1 1952 2 view .LVU369
1949:src/keys.c    **** 	int lim;
 1169              		.loc 1 1949 29 is_stmt 0 view .LVU370
 1170 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1171              		.cfi_def_cfa_offset 20
 1172              		.cfi_offset 4, -20
 1173              		.cfi_offset 5, -16
 1174              		.cfi_offset 6, -12
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
1953:src/keys.c    **** #else
 1177              		.loc 1 1953 29 view .LVU371
 1178 0002 3C4D     		ldr	r5, .L152
1949:src/keys.c    **** 	int lim;
ARM GAS  /tmp/ccvq0xdJ.s 			page 79


 1179              		.loc 1 1949 29 view .LVU372
 1180 0004 83B0     		sub	sp, sp, #12
 1181              		.cfi_def_cfa_offset 32
1949:src/keys.c    **** 	int lim;
 1182              		.loc 1 1949 29 view .LVU373
 1183 0006 0446     		mov	r4, r0
1952:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1184              		.loc 1 1952 17 view .LVU374
 1185 0008 01A8     		add	r0, sp, #4
 1186              	.LVL94:
1952:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1187              		.loc 1 1952 17 view .LVU375
 1188 000a FFF7FEFF 		bl	get_dispmode_digs
 1189              	.LVL95:
1953:src/keys.c    **** #else
 1190              		.loc 1 1953 29 view .LVU376
 1191 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1192              	.LVL96:
1953:src/keys.c    **** #else
 1193              		.loc 1 1953 2 is_stmt 1 view .LVU377
 1194 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1953:src/keys.c    **** #else
 1195              		.loc 1 1953 130 is_stmt 0 view .LVU378
 1196 0012 11F0400C 		ands	ip, r1, #64
 1197 0016 01D0     		beq	.L120
1953:src/keys.c    **** #else
 1198              		.loc 1 1953 44 discriminator 2 view .LVU379
 1199 0018 502E     		cmp	r6, #80
 1200 001a 5DD0     		beq	.L147
 1201              	.LVL97:
 1202              	.L120:
1957:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1203              		.loc 1 1957 2 is_stmt 1 discriminator 8 view .LVU380
1958:src/keys.c    **** 	
 1204              		.loc 1 1958 34 is_stmt 0 discriminator 8 view .LVU381
 1205 001c 364A     		ldr	r2, .L152+4
1957:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1206              		.loc 1 1957 33 discriminator 8 view .LVU382
 1207 001e 2B89     		ldrh	r3, [r5, #8]
1958:src/keys.c    **** 	
 1208              		.loc 1 1958 34 discriminator 8 view .LVU383
 1209 0020 02EB0612 		add	r2, r2, r6, lsl #4
1957:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1210              		.loc 1 1957 41 discriminator 8 view .LVU384
 1211 0024 03EB8303 		add	r3, r3, r3, lsl #2
1958:src/keys.c    **** 	
 1212              		.loc 1 1958 34 discriminator 8 view .LVU385
 1213 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1958:src/keys.c    **** 	
 1214              		.loc 1 1958 39 discriminator 8 view .LVU386
 1215 002a B807     		lsls	r0, r7, #30
1957:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1216              		.loc 1 1957 46 discriminator 8 view .LVU387
 1217 002c 04EB4304 		add	r4, r4, r3, lsl #1
 1218              	.LVL98:
1958:src/keys.c    **** 	
 1219              		.loc 1 1958 2 is_stmt 1 discriminator 8 view .LVU388
ARM GAS  /tmp/ccvq0xdJ.s 			page 80


1958:src/keys.c    **** 	
 1220              		.loc 1 1958 39 is_stmt 0 discriminator 8 view .LVU389
 1221 0030 C7F34003 		ubfx	r3, r7, #1, #1
 1222 0034 2AD4     		bmi	.L146
1958:src/keys.c    **** 	
 1223              		.loc 1 1958 39 discriminator 2 view .LVU390
 1224 0036 95F91500 		ldrsb	r0, [r5, #21]
 1225 003a 0028     		cmp	r0, #0
 1226 003c 26DB     		blt	.L146
 1227              	.LVL99:
1960:src/keys.c    **** 		// Handle local registers and flags
 1228              		.loc 1 1960 2 is_stmt 1 view .LVU391
1960:src/keys.c    **** 		// Handle local registers and flags
 1229              		.loc 1 1960 5 is_stmt 0 view .LVU392
 1230 003e C907     		lsls	r1, r1, #31
 1231 0040 27D4     		bmi	.L122
1973:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1232              		.loc 1 1973 7 is_stmt 1 view .LVU393
1976:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1233              		.loc 1 1976 3 view .LVU394
1976:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1234              		.loc 1 1976 9 is_stmt 0 view .LVU395
 1235 0042 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1976:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1236              		.loc 1 1976 7 view .LVU396
 1237 0044 0190     		str	r0, [sp, #4]
1977:src/keys.c    **** 			lim = RARG_IND - 1;
 1238              		.loc 1 1977 3 is_stmt 1 view .LVU397
1977:src/keys.c    **** 			lim = RARG_IND - 1;
 1239              		.loc 1 1977 6 is_stmt 0 view .LVU398
 1240 0046 7F28     		cmp	r0, #127
 1241 0048 4BDC     		bgt	.L148
 1242              	.LVL100:
 1243              	.L126:
1980:src/keys.c    **** 		return STATE_UNFINISHED;
 1244              		.loc 1 1980 2 is_stmt 1 view .LVU399
1980:src/keys.c    **** 		return STATE_UNFINISHED;
 1245              		.loc 1 1980 5 is_stmt 0 view .LVU400
 1246 004a 8442     		cmp	r4, r0
 1247 004c 3FDC     		bgt	.L131
 1248              	.L151:
1983:src/keys.c    **** 	++State2.numdigit;
 1249              		.loc 1 1983 2 is_stmt 1 view .LVU401
1984:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1250              		.loc 1 1984 2 is_stmt 0 view .LVU402
 1251 004e EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1983:src/keys.c    **** 	++State2.numdigit;
 1252              		.loc 1 1983 16 view .LVU403
 1253 0050 2C81     		strh	r4, [r5, #8]	@ movhi
1984:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1254              		.loc 1 1984 2 is_stmt 1 view .LVU404
 1255 0052 0137     		adds	r7, r7, #1
1985:src/keys.c    **** 		int result = arg_eval(val);
 1256              		.loc 1 1985 16 is_stmt 0 view .LVU405
 1257 0054 04EB8403 		add	r3, r4, r4, lsl #2
1984:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1258              		.loc 1 1984 2 view .LVU406
ARM GAS  /tmp/ccvq0xdJ.s 			page 81


 1259 0058 FFB2     		uxtb	r7, r7
1985:src/keys.c    **** 		int result = arg_eval(val);
 1260              		.loc 1 1985 5 view .LVU407
 1261 005a B0EB430F 		cmp	r0, r3, lsl #1
1984:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1262              		.loc 1 1984 2 view .LVU408
 1263 005e EF72     		strb	r7, [r5, #11]
1985:src/keys.c    **** 		int result = arg_eval(val);
 1264              		.loc 1 1985 2 is_stmt 1 view .LVU409
1985:src/keys.c    **** 		int result = arg_eval(val);
 1265              		.loc 1 1985 5 is_stmt 0 view .LVU410
 1266 0060 04DB     		blt	.L134
1985:src/keys.c    **** 		int result = arg_eval(val);
 1267              		.loc 1 1985 49 discriminator 1 view .LVU411
 1268 0062 3046     		mov	r0, r6
 1269 0064 FFF7FEFF 		bl	num_arg_digits
 1270              	.LVL101:
1985:src/keys.c    **** 		int result = arg_eval(val);
 1271              		.loc 1 1985 27 discriminator 1 view .LVU412
 1272 0068 8742     		cmp	r7, r0
 1273 006a 30DB     		blt	.L131
 1274              	.L134:
 1275              	.LBB338:
1986:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1276              		.loc 1 1986 3 is_stmt 1 view .LVU413
1986:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1277              		.loc 1 1986 16 is_stmt 0 view .LVU414
 1278 006c 2046     		mov	r0, r4
 1279 006e FFF7FEFF 		bl	arg_eval
 1280              	.LVL102:
1987:src/keys.c    **** 			--State2.numdigit;
 1281              		.loc 1 1987 3 is_stmt 1 view .LVU415
1987:src/keys.c    **** 			--State2.numdigit;
 1282              		.loc 1 1987 6 is_stmt 0 view .LVU416
 1283 0072 3328     		cmp	r0, #51
 1284 0074 08D1     		bne	.L117
1988:src/keys.c    **** 			State2.digval /= 10;
 1285              		.loc 1 1988 4 is_stmt 1 view .LVU417
1989:src/keys.c    **** 		}
 1286              		.loc 1 1989 18 is_stmt 0 view .LVU418
 1287 0076 2B89     		ldrh	r3, [r5, #8]
 1288 0078 2049     		ldr	r1, .L152+8
1988:src/keys.c    **** 			State2.digval /= 10;
 1289              		.loc 1 1988 4 view .LVU419
 1290 007a EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1989:src/keys.c    **** 		}
 1291              		.loc 1 1989 18 view .LVU420
 1292 007c A1FB0313 		umull	r1, r3, r1, r3
 1293 0080 DB08     		lsrs	r3, r3, #3
1988:src/keys.c    **** 			State2.digval /= 10;
 1294              		.loc 1 1988 4 view .LVU421
 1295 0082 013A     		subs	r2, r2, #1
1989:src/keys.c    **** 		}
 1296              		.loc 1 1989 18 view .LVU422
 1297 0084 2B81     		strh	r3, [r5, #8]	@ movhi
1988:src/keys.c    **** 			State2.digval /= 10;
 1298              		.loc 1 1988 4 view .LVU423
ARM GAS  /tmp/ccvq0xdJ.s 			page 82


 1299 0086 EA72     		strb	r2, [r5, #11]
1989:src/keys.c    **** 		}
 1300              		.loc 1 1989 4 is_stmt 1 view .LVU424
 1301              	.L117:
 1302              	.LBE338:
1994:src/keys.c    **** 
 1303              		.loc 1 1994 1 is_stmt 0 view .LVU425
 1304 0088 03B0     		add	sp, sp, #12
 1305              		.cfi_remember_state
 1306              		.cfi_def_cfa_offset 20
 1307              		@ sp needed
 1308 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 1309              	.LVL103:
 1310              	.L146:
 1311              		.cfi_restore_state
1960:src/keys.c    **** 		// Handle local registers and flags
 1312              		.loc 1 1960 2 is_stmt 1 view .LVU426
1960:src/keys.c    **** 		// Handle local registers and flags
 1313              		.loc 1 1960 5 is_stmt 0 view .LVU427
 1314 008c C807     		lsls	r0, r1, #31
 1315 008e 17D5     		bpl	.L149
1958:src/keys.c    **** 	
 1316              		.loc 1 1958 39 view .LVU428
 1317 0090 0123     		movs	r3, #1
 1318              	.LVL104:
 1319              	.L122:
1962:src/keys.c    **** 		if (State2.runmode) {
 1320              		.loc 1 1962 3 is_stmt 1 view .LVU429
1962:src/keys.c    **** 		if (State2.runmode) {
 1321              		.loc 1 1962 7 is_stmt 0 view .LVU430
 1322 0092 0F27     		movs	r7, #15
 1323 0094 0197     		str	r7, [sp, #4]
1963:src/keys.c    **** 			if (LocalRegs == 0)
 1324              		.loc 1 1963 3 is_stmt 1 view .LVU431
1963:src/keys.c    **** 			if (LocalRegs == 0)
 1325              		.loc 1 1963 6 is_stmt 0 view .LVU432
 1326 0096 BCF1000F 		cmp	ip, #0
 1327 009a 1BD0     		beq	.L139
1964:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1328              		.loc 1 1964 4 is_stmt 1 view .LVU433
1964:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1329              		.loc 1 1964 18 is_stmt 0 view .LVU434
 1330 009c 184A     		ldr	r2, .L152+12
 1331 009e 1268     		ldr	r2, [r2]
 1332 00a0 B2F8DE27 		ldrh	r2, [r2, #2014]
 1333 00a4 22F01F02 		bic	r2, r2, #31
1964:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1334              		.loc 1 1964 7 view .LVU435
 1335 00a8 92B2     		uxth	r2, r2
 1336 00aa 82B1     		cbz	r2, .L131
1966:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1337              		.loc 1 1966 4 is_stmt 1 view .LVU436
1966:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1338              		.loc 1 1966 7 is_stmt 0 view .LVU437
 1339 00ac 93B1     		cbz	r3, .L139
1967:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1340              		.loc 1 1967 5 is_stmt 1 view .LVU438
ARM GAS  /tmp/ccvq0xdJ.s 			page 83


1967:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1341              		.loc 1 1967 11 is_stmt 0 view .LVU439
 1342 00ae F0B2     		uxtb	r0, r6
 1343 00b0 FFF7FEFF 		bl	local_regs_rarg
 1344              	.LVL105:
1967:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1345              		.loc 1 1967 45 view .LVU440
 1346 00b4 0138     		subs	r0, r0, #1
1968:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1347              		.loc 1 1968 5 is_stmt 1 view .LVU441
1968:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1348              		.loc 1 1968 8 is_stmt 0 view .LVU442
 1349 00b6 0F28     		cmp	r0, #15
 1350 00b8 06DD     		ble	.L145
1969:src/keys.c    **** 			}
 1351              		.loc 1 1969 6 is_stmt 1 view .LVU443
1969:src/keys.c    **** 			}
 1352              		.loc 1 1969 10 is_stmt 0 view .LVU444
 1353 00ba 0197     		str	r7, [sp, #4]
 1354 00bc 3846     		mov	r0, r7
 1355 00be C4E7     		b	.L126
 1356              	.LVL106:
 1357              	.L149:
1974:src/keys.c    **** 	else {
 1358              		.loc 1 1974 3 is_stmt 1 view .LVU445
1974:src/keys.c    **** 	else {
 1359              		.loc 1 1974 65 is_stmt 0 view .LVU446
 1360 00c0 BCF1000F 		cmp	ip, #0
 1361 00c4 11D1     		bne	.L150
 1362 00c6 6320     		movs	r0, #99
 1363              	.LVL107:
 1364              	.L145:
1980:src/keys.c    **** 		return STATE_UNFINISHED;
 1365              		.loc 1 1980 5 view .LVU447
 1366 00c8 8442     		cmp	r4, r0
1978:src/keys.c    **** 	}
 1367              		.loc 1 1978 8 view .LVU448
 1368 00ca 0190     		str	r0, [sp, #4]
1980:src/keys.c    **** 		return STATE_UNFINISHED;
 1369              		.loc 1 1980 2 is_stmt 1 view .LVU449
1980:src/keys.c    **** 		return STATE_UNFINISHED;
 1370              		.loc 1 1980 5 is_stmt 0 view .LVU450
 1371 00cc BFDD     		ble	.L151
 1372              	.L131:
1965:src/keys.c    **** 			if (is_reg) {
 1373              		.loc 1 1965 12 view .LVU451
 1374 00ce 3320     		movs	r0, #51
1994:src/keys.c    **** 
 1375              		.loc 1 1994 1 view .LVU452
 1376 00d0 03B0     		add	sp, sp, #12
 1377              		.cfi_remember_state
 1378              		.cfi_def_cfa_offset 20
 1379              		@ sp needed
 1380 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1381              	.LVL108:
 1382              	.L139:
 1383              		.cfi_restore_state
ARM GAS  /tmp/ccvq0xdJ.s 			page 84


1994:src/keys.c    **** 
 1384              		.loc 1 1994 1 view .LVU453
 1385 00d4 3846     		mov	r0, r7
 1386 00d6 B8E7     		b	.L126
 1387              	.LVL109:
 1388              	.L147:
1953:src/keys.c    **** #else
 1389              		.loc 1 1953 93 discriminator 4 view .LVU454
 1390 00d8 0438     		subs	r0, r0, #4
 1391              	.LVL110:
1953:src/keys.c    **** #else
 1392              		.loc 1 1953 68 discriminator 4 view .LVU455
 1393 00da 0128     		cmp	r0, #1
1953:src/keys.c    **** #else
 1394              		.loc 1 1953 130 discriminator 4 view .LVU456
 1395 00dc 98BF     		it	ls
 1396 00de 9426     		movls	r6, #148
 1397 00e0 9CE7     		b	.L120
 1398              	.LVL111:
 1399              	.L148:
1977:src/keys.c    **** 			lim = RARG_IND - 1;
 1400              		.loc 1 1977 23 discriminator 1 view .LVU457
 1401 00e2 FB07     		lsls	r3, r7, #31
 1402 00e4 B1D5     		bpl	.L126
1978:src/keys.c    **** 	}
 1403              		.loc 1 1978 4 is_stmt 1 view .LVU458
1978:src/keys.c    **** 	}
 1404              		.loc 1 1978 8 is_stmt 0 view .LVU459
 1405 00e6 7F20     		movs	r0, #127
 1406 00e8 EEE7     		b	.L145
 1407              	.LVL112:
 1408              	.L150:
1974:src/keys.c    **** 	else {
 1409              		.loc 1 1974 26 discriminator 1 view .LVU460
 1410 00ea F0B2     		uxtb	r0, r6
 1411 00ec FFF7FEFF 		bl	global_regs_rarg
 1412              	.LVL113:
1974:src/keys.c    **** 	else {
 1413              		.loc 1 1974 61 discriminator 1 view .LVU461
 1414 00f0 0138     		subs	r0, r0, #1
 1415 00f2 E9E7     		b	.L145
 1416              	.L153:
 1417              		.align	2
 1418              	.L152:
 1419 00f4 00000000 		.word	StateWhileOn
 1420 00f8 00000000 		.word	argcmds
 1421 00fc CDCCCCCC 		.word	-858993459
 1422 0100 00000000 		.word	main_ram
 1423              		.cfi_endproc
 1424              	.LFE36:
 1426              		.section	.text.process_arg_shuffle,"ax",%progbits
 1427              		.align	1
 1428              		.p2align 2,,3
 1429              		.syntax unified
 1430              		.thumb
 1431              		.thumb_func
 1432              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccvq0xdJ.s 			page 85


 1434              	process_arg_shuffle:
 1435              	.LVL114:
 1436              	.LFB41:
2061:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1437              		.loc 1 2061 39 is_stmt 1 view -0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441              		@ link register save eliminated.
2062:src/keys.c    **** 	if (State2.numdigit < 4)
 1442              		.loc 1 2062 2 view .LVU463
2061:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1443              		.loc 1 2061 39 is_stmt 0 view .LVU464
 1444 0000 10B4     		push	{r4}
 1445              		.cfi_def_cfa_offset 4
 1446              		.cfi_offset 4, -4
2062:src/keys.c    **** 	if (State2.numdigit < 4)
 1447              		.loc 1 2062 31 view .LVU465
 1448 0002 0A4A     		ldr	r2, .L157
 1449 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2062:src/keys.c    **** 	if (State2.numdigit < 4)
 1450              		.loc 1 2062 16 view .LVU466
 1451 0006 1189     		ldrh	r1, [r2, #8]
2062:src/keys.c    **** 	if (State2.numdigit < 4)
 1452              		.loc 1 2062 43 view .LVU467
 1453 0008 5C00     		lsls	r4, r3, #1
2062:src/keys.c    **** 	if (State2.numdigit < 4)
 1454              		.loc 1 2062 21 view .LVU468
 1455 000a A040     		lsls	r0, r0, r4
 1456              	.LVL115:
2062:src/keys.c    **** 	if (State2.numdigit < 4)
 1457              		.loc 1 2062 40 view .LVU469
 1458 000c 0133     		adds	r3, r3, #1
 1459 000e DBB2     		uxtb	r3, r3
2062:src/keys.c    **** 	if (State2.numdigit < 4)
 1460              		.loc 1 2062 16 view .LVU470
 1461 0010 0844     		add	r0, r0, r1
 1462 0012 80B2     		uxth	r0, r0
2063:src/keys.c    **** 		return STATE_UNFINISHED;
 1463              		.loc 1 2063 5 view .LVU471
 1464 0014 032B     		cmp	r3, #3
2062:src/keys.c    **** 	if (State2.numdigit < 4)
 1465              		.loc 1 2062 40 view .LVU472
 1466 0016 D372     		strb	r3, [r2, #11]
2062:src/keys.c    **** 	if (State2.numdigit < 4)
 1467              		.loc 1 2062 16 view .LVU473
 1468 0018 1081     		strh	r0, [r2, #8]	@ movhi
2063:src/keys.c    **** 		return STATE_UNFINISHED;
 1469              		.loc 1 2063 2 is_stmt 1 view .LVU474
2063:src/keys.c    **** 		return STATE_UNFINISHED;
 1470              		.loc 1 2063 5 is_stmt 0 view .LVU475
 1471 001a 03D9     		bls	.L155
2065:src/keys.c    **** }
 1472              		.loc 1 2065 2 is_stmt 1 view .LVU476
2066:src/keys.c    **** 
 1473              		.loc 1 2066 1 is_stmt 0 view .LVU477
 1474 001c 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /tmp/ccvq0xdJ.s 			page 86


 1475              		.cfi_remember_state
 1476              		.cfi_restore 4
 1477              		.cfi_def_cfa_offset 0
2065:src/keys.c    **** }
 1478              		.loc 1 2065 9 view .LVU478
 1479 0020 FFF7FEBF 		b	arg_eval
 1480              	.LVL116:
 1481              	.L155:
 1482              		.cfi_restore_state
2066:src/keys.c    **** 
 1483              		.loc 1 2066 1 view .LVU479
 1484 0024 3320     		movs	r0, #51
 1485 0026 5DF8044B 		ldr	r4, [sp], #4
 1486              		.cfi_restore 4
 1487              		.cfi_def_cfa_offset 0
 1488 002a 7047     		bx	lr
 1489              	.L158:
 1490              		.align	2
 1491              	.L157:
 1492 002c 00000000 		.word	StateWhileOn
 1493              		.cfi_endproc
 1494              	.LFE41:
 1496              		.section	.text.process_h_shifted,"ax",%progbits
 1497              		.align	1
 1498              		.p2align 2,,3
 1499              		.syntax unified
 1500              		.thumb
 1501              		.thumb_func
 1502              		.fpu fpv4-sp-d16
 1504              	process_h_shifted:
 1505              	.LVL117:
 1506              	.LFB21:
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1507              		.loc 1 1101 47 is_stmt 1 view -0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
1104:src/keys.c    **** 		// Row 1
 1511              		.loc 1 1104 2 view .LVU481
1155:src/keys.c    **** 	int op = op_map[lc];
 1512              		.loc 1 1155 2 view .LVU482
 1513              	.LBB339:
 1514              	.LBB340:
 158:src/keys.c    **** }
 1515              		.loc 1 158 23 is_stmt 0 view .LVU483
 1516 0000 314A     		ldr	r2, .L190
 1517              	.LBE340:
 1518              	.LBE339:
1156:src/keys.c    **** 	reset_shift();
 1519              		.loc 1 1156 17 view .LVU484
 1520 0002 324B     		ldr	r3, .L190+4
 1521              	.LBB343:
 1522              	.LBB341:
 158:src/keys.c    **** }
 1523              		.loc 1 158 23 view .LVU485
 1524 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1525              	.LBE341:
ARM GAS  /tmp/ccvq0xdJ.s 			page 87


 1526              	.LBE343:
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1527              		.loc 1 1101 47 view .LVU486
 1528 0006 70B5     		push	{r4, r5, r6, lr}
 1529              		.cfi_def_cfa_offset 16
 1530              		.cfi_offset 4, -16
 1531              		.cfi_offset 5, -12
 1532              		.cfi_offset 6, -8
 1533              		.cfi_offset 14, -4
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1534              		.loc 1 1101 47 view .LVU487
 1535 0008 0446     		mov	r4, r0
 1536              	.LVL118:
 1537              	.LBB344:
 1538              	.LBI339:
 146:src/keys.c    **** {
 1539              		.loc 1 146 12 is_stmt 1 view .LVU488
 1540              	.LBB342:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1541              		.loc 1 148 2 view .LVU489
 158:src/keys.c    **** }
 1542              		.loc 1 158 2 view .LVU490
 158:src/keys.c    **** }
 1543              		.loc 1 158 2 is_stmt 0 view .LVU491
 1544              	.LBE342:
 1545              	.LBE344:
1156:src/keys.c    **** 	reset_shift();
 1546              		.loc 1 1156 2 is_stmt 1 view .LVU492
 1547              	.LBB345:
 1548              	.LBB346:
 1549              	.LBB347:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1550              		.loc 1 106 16 is_stmt 0 view .LVU493
 1551 000a 314E     		ldr	r6, .L190+8
 1552              	.LBE347:
 1553              	.LBE346:
 1554              	.LBE345:
1156:src/keys.c    **** 	reset_shift();
 1555              		.loc 1 1156 17 view .LVU494
 1556 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1557              	.LVL119:
1157:src/keys.c    **** 
 1558              		.loc 1 1157 2 is_stmt 1 view .LVU495
 1559              	.LBB354:
 1560              	.LBI345:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1561              		.loc 1 114 13 view .LVU496
 1562              	.LBE354:
 115:src/keys.c    **** }
 1563              		.loc 1 115 2 view .LVU497
 1564              	.LBB355:
 1565              	.LBB352:
 1566              	.LBI346:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1567              		.loc 1 104 20 view .LVU498
 1568              	.LBB350:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccvq0xdJ.s 			page 88


 1569              		.loc 1 105 2 view .LVU499
 1570              	.LBB348:
 1571              	.LBI348:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1572              		.loc 1 96 13 view .LVU500
 1573              	.LBB349:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1574              		.loc 1 97 2 view .LVU501
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1575              		.loc 1 97 18 is_stmt 0 view .LVU502
 1576 0010 FFF7FEFF 		bl	shift_down
 1577              	.LVL120:
  98:src/keys.c    **** }
 1578              		.loc 1 98 2 is_stmt 1 view .LVU503
 1579              	.LBE349:
 1580              	.LBE348:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1581              		.loc 1 106 2 view .LVU504
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1582              		.loc 1 106 16 is_stmt 0 view .LVU505
 1583 0014 0023     		movs	r3, #0
 1584              	.LBE350:
 1585              	.LBE352:
 1586              	.LBE355:
1160:src/keys.c    **** 	case K62:
 1587              		.loc 1 1160 2 view .LVU506
 1588 0016 262C     		cmp	r4, #38
 1589              	.LBB356:
 1590              	.LBB353:
 1591              	.LBB351:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1592              		.loc 1 106 16 view .LVU507
 1593 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1594              		.loc 1 108 2 is_stmt 1 view .LVU508
 1595              	.LVL121:
 108:src/keys.c    **** }
 1596              		.loc 1 108 2 is_stmt 0 view .LVU509
 1597              	.LBE351:
 1598              	.LBE353:
 1599              	.LBE356:
1160:src/keys.c    **** 	case K62:
 1600              		.loc 1 1160 2 is_stmt 1 view .LVU510
 1601 001a 27D0     		beq	.L160
 1602 001c 272C     		cmp	r4, #39
 1603 001e 19D1     		bne	.L162
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1604              		.loc 1 1173 3 view .LVU511
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1605              		.loc 1 1173 7 is_stmt 0 view .LVU512
 1606 0020 FFF7FEFF 		bl	is_bad_cmdline
 1607              	.LVL122:
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1608              		.loc 1 1173 6 view .LVU513
 1609 0024 00BB     		cbnz	r0, .L172
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1610              		.loc 1 1175 3 is_stmt 1 view .LVU514
ARM GAS  /tmp/ccvq0xdJ.s 			page 89


1175:src/keys.c    **** 		process_cmdline_set_lift();
 1611              		.loc 1 1175 30 is_stmt 0 view .LVU515
 1612 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1613 0028 C3F38012 		ubfx	r2, r3, #6, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1614              		.loc 1 1175 22 view .LVU516
 1615 002c C2F10102 		rsb	r2, r2, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1616              		.loc 1 1175 18 view .LVU517
 1617 0030 62F38613 		bfi	r3, r2, #6, #1
 1618 0034 B375     		strb	r3, [r6, #22]
1176:src/keys.c    **** 		update_program_bounds(1);
 1619              		.loc 1 1176 3 is_stmt 1 view .LVU518
 1620 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1621              	.LVL123:
1177:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1622              		.loc 1 1177 3 view .LVU519
 1623 003a 0120     		movs	r0, #1
 1624 003c FFF7FEFF 		bl	update_program_bounds
 1625              	.LVL124:
1178:src/keys.c    **** 			set_pc(0);
 1626              		.loc 1 1178 3 view .LVU520
1178:src/keys.c    **** 			set_pc(0);
 1627              		.loc 1 1178 7 is_stmt 0 view .LVU521
 1628 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1178:src/keys.c    **** 			set_pc(0);
 1629              		.loc 1 1178 6 view .LVU522
 1630 0042 10F04000 		ands	r0, r0, #64
 1631 0046 05D1     		bne	.L162
1178:src/keys.c    **** 			set_pc(0);
 1632              		.loc 1 1178 27 discriminator 1 view .LVU523
 1633 0048 224B     		ldr	r3, .L190+12
 1634 004a 1B68     		ldr	r3, [r3]
1178:src/keys.c    **** 			set_pc(0);
 1635              		.loc 1 1178 24 discriminator 1 view .LVU524
 1636 004c B3F8E027 		ldrh	r2, [r3, #2016]
 1637 0050 012A     		cmp	r2, #1
 1638 0052 32D0     		beq	.L186
 1639              	.L162:
1186:src/keys.c    **** 		if (op & _RARG) {
 1640              		.loc 1 1186 2 is_stmt 1 view .LVU525
1186:src/keys.c    **** 		if (op & _RARG) {
 1641              		.loc 1 1186 5 is_stmt 0 view .LVU526
 1642 0054 332D     		cmp	r5, #51
 1643 0056 07D0     		beq	.L172
 1644              	.LVL125:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1645              		.loc 1 1187 3 is_stmt 1 view .LVU527
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1646              		.loc 1 1187 6 is_stmt 0 view .LVU528
 1647 0058 2804     		lsls	r0, r5, #16
 1648 005a 14D5     		bpl	.L187
 1649              	.L170:
1188:src/keys.c    **** 			op = STATE_UNFINISHED;
 1650              		.loc 1 1188 4 is_stmt 1 view .LVU529
 1651              	.LVL126:
 1652              	.LBB357:
ARM GAS  /tmp/ccvq0xdJ.s 			page 90


 1653              	.LBI357:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1654              		.loc 1 552 13 view .LVU530
 1655              	.LBB358:
 553:src/keys.c    **** 		return;
 1656              		.loc 1 553 2 view .LVU531
 553:src/keys.c    **** 		return;
 1657              		.loc 1 553 6 is_stmt 0 view .LVU532
 1658 005c FFF7FEFF 		bl	is_bad_cmdline
 1659              	.LVL127:
 553:src/keys.c    **** 		return;
 1660              		.loc 1 553 5 view .LVU533
 1661 0060 10B9     		cbnz	r0, .L172
 1662 0062 E8B2     		uxtb	r0, r5
 1663 0064 FFF7FEFF 		bl	init_arg.part.0
 1664              	.LVL128:
 1665              	.L172:
 553:src/keys.c    **** 		return;
 1666              		.loc 1 553 5 view .LVU534
 1667              	.LBE358:
 1668              	.LBE357:
1192:src/keys.c    **** #undef _RARG
 1669              		.loc 1 1192 2 is_stmt 1 view .LVU535
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1670              		.loc 1 1101 47 is_stmt 0 view .LVU536
 1671 0068 3320     		movs	r0, #51
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1672              		.loc 1 1195 1 view .LVU537
 1673 006a 70BD     		pop	{r4, r5, r6, pc}
 1674              	.LVL129:
 1675              	.L160:
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1676              		.loc 1 1162 3 is_stmt 1 view .LVU538
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1677              		.loc 1 1162 7 is_stmt 0 view .LVU539
 1678 006c 194B     		ldr	r3, .L190+12
 1679 006e 1B68     		ldr	r3, [r3]
 1680 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1681              		.loc 1 1162 6 view .LVU540
 1682 0074 D607     		lsls	r6, r2, #31
 1683 0076 0FD4     		bmi	.L188
1168:src/keys.c    **** #endif
 1684              		.loc 1 1168 4 is_stmt 1 view .LVU541
1168:src/keys.c    **** #endif
 1685              		.loc 1 1168 8 is_stmt 0 view .LVU542
 1686 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1168:src/keys.c    **** #endif
 1687              		.loc 1 1168 7 view .LVU543
 1688 007c 9C06     		lsls	r4, r3, #26
 1689 007e 14D5     		bpl	.L189
 1690 0080 40F24F10 		movw	r0, #335
 1691              	.LVL130:
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1692              		.loc 1 1195 1 view .LVU544
 1693 0084 70BD     		pop	{r4, r5, r6, pc}
 1694              	.L187:
ARM GAS  /tmp/ccvq0xdJ.s 			page 91


 1695              	.LVL131:
1192:src/keys.c    **** #undef _RARG
 1696              		.loc 1 1192 2 is_stmt 1 view .LVU545
1192:src/keys.c    **** #undef _RARG
 1697              		.loc 1 1192 9 is_stmt 0 view .LVU546
 1698 0086 134B     		ldr	r3, .L190+12
 1699 0088 1B68     		ldr	r3, [r3]
 1700 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1192:src/keys.c    **** #undef _RARG
 1701              		.loc 1 1192 57 view .LVU547
 1702 008e D907     		lsls	r1, r3, #31
 1703 0090 10D4     		bmi	.L171
 1704              	.LVL132:
 1705              	.L174:
1192:src/keys.c    **** #undef _RARG
 1706              		.loc 1 1192 57 view .LVU548
 1707 0092 25F48040 		bic	r0, r5, #16384
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1708              		.loc 1 1195 1 view .LVU549
 1709 0096 70BD     		pop	{r4, r5, r6, pc}
 1710              	.LVL133:
 1711              	.L188:
1163:src/keys.c    **** 		else
 1712              		.loc 1 1163 4 is_stmt 1 view .LVU550
1163:src/keys.c    **** 		else
 1713              		.loc 1 1163 57 is_stmt 0 view .LVU551
 1714 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1715 009c 002B     		cmp	r3, #0
 1716 009e 40F25315 		movw	r5, #339
 1717              	.LVL134:
1163:src/keys.c    **** 		else
 1718              		.loc 1 1163 57 view .LVU552
 1719 00a2 A8BF     		it	ge
 1720 00a4 4FF4AA75 		movge	r5, #340
 1721 00a8 F3E7     		b	.L174
 1722              	.LVL135:
 1723              	.L189:
1186:src/keys.c    **** 		if (op & _RARG) {
 1724              		.loc 1 1186 2 is_stmt 1 view .LVU553
1186:src/keys.c    **** 		if (op & _RARG) {
 1725              		.loc 1 1186 5 is_stmt 0 view .LVU554
 1726 00aa 332D     		cmp	r5, #51
 1727 00ac DCD0     		beq	.L172
 1728              	.LVL136:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1729              		.loc 1 1187 3 is_stmt 1 view .LVU555
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1730              		.loc 1 1187 6 is_stmt 0 view .LVU556
 1731 00ae 2B04     		lsls	r3, r5, #16
 1732 00b0 D4D4     		bmi	.L170
 1733 00b2 EEE7     		b	.L174
 1734              	.LVL137:
 1735              	.L171:
1192:src/keys.c    **** #undef _RARG
 1736              		.loc 1 1192 21 view .LVU557
 1737 00b4 6A04     		lsls	r2, r5, #17
 1738 00b6 D7D4     		bmi	.L172
ARM GAS  /tmp/ccvq0xdJ.s 			page 92


 1739 00b8 EBE7     		b	.L174
 1740              	.L186:
1178:src/keys.c    **** 			set_pc(0);
 1741              		.loc 1 1178 43 discriminator 2 view .LVU558
 1742 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1743 00be 012B     		cmp	r3, #1
 1744 00c0 C8D1     		bne	.L162
1179:src/keys.c    **** 		break;
 1745              		.loc 1 1179 4 is_stmt 1 view .LVU559
 1746 00c2 FFF7FEFF 		bl	set_pc
 1747              	.LVL138:
 1748 00c6 C5E7     		b	.L162
 1749              	.L191:
 1750              		.align	2
 1751              	.L190:
 1752 00c8 00000000 		.word	.LANCHOR1
 1753 00cc 00000000 		.word	.LANCHOR0
 1754 00d0 00000000 		.word	StateWhileOn
 1755 00d4 00000000 		.word	main_ram
 1756              		.cfi_endproc
 1757              	.LFE21:
 1759              		.section	.text.intltr,"ax",%progbits
 1760              		.align	1
 1761              		.p2align 2,,3
 1762              		.syntax unified
 1763              		.thumb
 1764              		.thumb_func
 1765              		.fpu fpv4-sp-d16
 1767              	intltr:
 1768              	.LVL139:
 1769              	.LFB18:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1770              		.loc 1 761 26 view -0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 762:src/keys.c    **** }
 1774              		.loc 1 762 2 view .LVU561
 762:src/keys.c    **** }
 1775              		.loc 1 762 10 is_stmt 0 view .LVU562
 1776 0000 0B4B     		ldr	r3, .L201
 1777 0002 1B68     		ldr	r3, [r3]
 1778 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1779              		.loc 1 762 22 view .LVU563
 1780 0008 13F00103 		ands	r3, r3, #1
 1781 000c 05D0     		beq	.L194
 762:src/keys.c    **** }
 1782              		.loc 1 762 26 discriminator 1 view .LVU564
 1783 000e 094B     		ldr	r3, .L201+4
 1784 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1785              		.loc 1 762 22 discriminator 1 view .LVU565
 1786 0012 5B06     		lsls	r3, r3, #25
 1787 0014 03D4     		bmi	.L200
 762:src/keys.c    **** }
 1788              		.loc 1 762 22 view .LVU566
ARM GAS  /tmp/ccvq0xdJ.s 			page 93


 1789 0016 0120     		movs	r0, #1
 1790              	.LVL140:
 763:src/keys.c    **** 
 1791              		.loc 1 763 1 view .LVU567
 1792 0018 7047     		bx	lr
 1793              	.LVL141:
 1794              	.L194:
 762:src/keys.c    **** }
 1795              		.loc 1 762 22 view .LVU568
 1796 001a 1846     		mov	r0, r3
 1797              	.LVL142:
 762:src/keys.c    **** }
 1798              		.loc 1 762 22 view .LVU569
 1799 001c 7047     		bx	lr
 1800              	.LVL143:
 1801              	.L200:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1802              		.loc 1 761 26 view .LVU570
 1803 001e 10B5     		push	{r4, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 4, -8
 1806              		.cfi_offset 14, -4
 1807 0020 0446     		mov	r4, r0
 1808              	.LVL144:
 1809              	.LBB361:
 1810              	.LBI361:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1811              		.loc 1 761 12 is_stmt 1 view .LVU571
 1812              	.LBB362:
 762:src/keys.c    **** }
 1813              		.loc 1 762 52 is_stmt 0 view .LVU572
 1814 0022 FFF7FEFF 		bl	int_base
 1815              	.LVL145:
 762:src/keys.c    **** }
 1816              		.loc 1 762 43 view .LVU573
 1817 0026 8442     		cmp	r4, r0
 1818 0028 ACBF     		ite	ge
 1819 002a 0020     		movge	r0, #0
 1820 002c 0120     		movlt	r0, #1
 1821              	.LBE362:
 1822              	.LBE361:
 763:src/keys.c    **** 
 1823              		.loc 1 763 1 view .LVU574
 1824 002e 10BD     		pop	{r4, pc}
 1825              	.LVL146:
 1826              	.L202:
 763:src/keys.c    **** 
 1827              		.loc 1 763 1 view .LVU575
 1828              		.align	2
 1829              	.L201:
 1830 0030 00000000 		.word	main_ram
 1831 0034 00000000 		.word	StateWhileOn
 1832              		.cfi_endproc
 1833              	.LFE18:
 1835              		.section	.text.process_normal,"ax",%progbits
 1836              		.align	1
 1837              		.p2align 2,,3
ARM GAS  /tmp/ccvq0xdJ.s 			page 94


 1838              		.syntax unified
 1839              		.thumb
 1840              		.thumb_func
 1841              		.fpu fpv4-sp-d16
 1843              	process_normal:
 1844              	.LVL147:
 1845              	.LFB19:
 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1846              		.loc 1 769 1 is_stmt 1 view -0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 770:src/keys.c    **** 		// Row 1
 1850              		.loc 1 770 2 view .LVU577
 817:src/keys.c    **** 	int op = op_map[lc];
 1851              		.loc 1 817 2 view .LVU578
 1852              	.LBB363:
 1853              	.LBI363:
 146:src/keys.c    **** {
 1854              		.loc 1 146 12 view .LVU579
 1855              	.LBB364:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1856              		.loc 1 148 2 view .LVU580
 158:src/keys.c    **** }
 1857              		.loc 1 158 2 view .LVU581
 158:src/keys.c    **** }
 1858              		.loc 1 158 2 is_stmt 0 view .LVU582
 1859              	.LBE364:
 1860              	.LBE363:
 818:src/keys.c    **** 	
 1861              		.loc 1 818 2 is_stmt 1 view .LVU583
 823:src/keys.c    **** 	  switch (c) {
 1862              		.loc 1 823 6 is_stmt 0 view .LVU584
 1863 0000 984B     		ldr	r3, .L234
 1864              	.LBB367:
 1865              	.LBB365:
 158:src/keys.c    **** }
 1866              		.loc 1 158 23 view .LVU585
 1867 0002 994A     		ldr	r2, .L234+4
 1868              	.LBE365:
 1869              	.LBE367:
 823:src/keys.c    **** 	  switch (c) {
 1870              		.loc 1 823 6 view .LVU586
 1871 0004 1B68     		ldr	r3, [r3]
 1872              	.LBB368:
 1873              	.LBB366:
 158:src/keys.c    **** }
 1874              		.loc 1 158 23 view .LVU587
 1875 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1876              	.LBE366:
 1877              	.LBE368:
 818:src/keys.c    **** 	
 1878              		.loc 1 818 17 view .LVU588
 1879 0008 984A     		ldr	r2, .L234+8
 823:src/keys.c    **** 	  switch (c) {
 1880              		.loc 1 823 6 view .LVU589
 1881 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
ARM GAS  /tmp/ccvq0xdJ.s 			page 95


 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1882              		.loc 1 769 1 view .LVU590
 1883 000e 10B5     		push	{r4, lr}
 1884              		.cfi_def_cfa_offset 8
 1885              		.cfi_offset 4, -8
 1886              		.cfi_offset 14, -4
 818:src/keys.c    **** 	
 1887              		.loc 1 818 17 view .LVU591
 1888 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 823:src/keys.c    **** 	  switch (c) {
 1889              		.loc 1 823 5 view .LVU592
 1890 0014 DB07     		lsls	r3, r3, #31
 818:src/keys.c    **** 	
 1891              		.loc 1 818 6 view .LVU593
 1892 0016 2246     		mov	r2, r4
 1893              	.LVL148:
 822:src/keys.c    **** 	if (UState.intm) {
 1894              		.loc 1 822 2 is_stmt 1 view .LVU594
 823:src/keys.c    **** 	  switch (c) {
 1895              		.loc 1 823 2 view .LVU595
 823:src/keys.c    **** 	  switch (c) {
 1896              		.loc 1 823 5 is_stmt 0 view .LVU596
 1897 0018 42D4     		bmi	.L230
 854:src/keys.c    **** 	  }
 1898              		.loc 1 854 12 is_stmt 1 view .LVU597
 859:src/keys.c    **** #ifdef DM42
 1899              		.loc 1 859 2 view .LVU598
 1900 001a 2D28     		cmp	r0, #45
 1901 001c 3ED8     		bhi	.L203
 1902 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1903              	.L222:
 1904 0022 0801     		.2byte	(.L218-.L222)/2
 1905 0024 0E01     		.2byte	(.L219-.L222)/2
 1906 0026 3D00     		.2byte	(.L203-.L222)/2
 1907 0028 CF00     		.2byte	(.L217-.L222)/2
 1908 002a 3D00     		.2byte	(.L203-.L222)/2
 1909 002c 3D00     		.2byte	(.L203-.L222)/2
 1910 002e 3400     		.2byte	(.L212-.L222)/2
 1911 0030 3400     		.2byte	(.L212-.L222)/2
 1912 0032 3D00     		.2byte	(.L203-.L222)/2
 1913 0034 3D00     		.2byte	(.L203-.L222)/2
 1914 0036 3D00     		.2byte	(.L203-.L222)/2
 1915 0038 3D00     		.2byte	(.L203-.L222)/2
 1916 003a 3D00     		.2byte	(.L203-.L222)/2
 1917 003c 3D00     		.2byte	(.L203-.L222)/2
 1918 003e 3D00     		.2byte	(.L203-.L222)/2
 1919 0040 3D00     		.2byte	(.L203-.L222)/2
 1920 0042 E900     		.2byte	(.L216-.L222)/2
 1921 0044 3D00     		.2byte	(.L203-.L222)/2
 1922 0046 3400     		.2byte	(.L212-.L222)/2
 1923 0048 3D00     		.2byte	(.L203-.L222)/2
 1924 004a 3D00     		.2byte	(.L203-.L222)/2
 1925 004c 3D00     		.2byte	(.L203-.L222)/2
 1926 004e 3D00     		.2byte	(.L203-.L222)/2
 1927 0050 3D00     		.2byte	(.L203-.L222)/2
 1928 0052 3D00     		.2byte	(.L203-.L222)/2
 1929 0054 3D00     		.2byte	(.L203-.L222)/2
ARM GAS  /tmp/ccvq0xdJ.s 			page 96


 1930 0056 3D00     		.2byte	(.L203-.L222)/2
 1931 0058 3D00     		.2byte	(.L203-.L222)/2
 1932 005a 3D00     		.2byte	(.L203-.L222)/2
 1933 005c 3D00     		.2byte	(.L203-.L222)/2
 1934 005e 3D00     		.2byte	(.L203-.L222)/2
 1935 0060 3D00     		.2byte	(.L203-.L222)/2
 1936 0062 3D00     		.2byte	(.L203-.L222)/2
 1937 0064 3D00     		.2byte	(.L203-.L222)/2
 1938 0066 3D00     		.2byte	(.L203-.L222)/2
 1939 0068 3D00     		.2byte	(.L203-.L222)/2
 1940 006a 3D00     		.2byte	(.L203-.L222)/2
 1941 006c 3D00     		.2byte	(.L203-.L222)/2
 1942 006e 3D00     		.2byte	(.L203-.L222)/2
 1943 0070 3D00     		.2byte	(.L203-.L222)/2
 1944 0072 3D00     		.2byte	(.L203-.L222)/2
 1945 0074 3D00     		.2byte	(.L203-.L222)/2
 1946 0076 3D00     		.2byte	(.L203-.L222)/2
 1947 0078 3D00     		.2byte	(.L203-.L222)/2
 1948 007a F400     		.2byte	(.L215-.L222)/2
 1949 007c C700     		.2byte	(.L221-.L222)/2
 1950              		.p2align 1
 1951              	.L206:
 850:src/keys.c    **** 	    if (intltr(15)) {
 1952              		.loc 1 850 6 view .LVU599
 1953              	.LVL149:
 851:src/keys.c    **** 	      return op_int;
 1954              		.loc 1 851 6 view .LVU600
 851:src/keys.c    **** 	      return op_int;
 1955              		.loc 1 851 10 is_stmt 0 view .LVU601
 1956 007e 0F20     		movs	r0, #15
 1957              	.LVL150:
 851:src/keys.c    **** 	      return op_int;
 1958              		.loc 1 851 10 view .LVU602
 1959 0080 FFF7FEFF 		bl	intltr
 1960              	.LVL151:
 851:src/keys.c    **** 	      return op_int;
 1961              		.loc 1 851 9 view .LVU603
 1962 0084 0028     		cmp	r0, #0
 1963 0086 40F0EB80 		bne	.L231
 1964              	.LVL152:
 1965              	.L212:
 925:src/keys.c    **** 		break;
 1966              		.loc 1 925 3 is_stmt 1 view .LVU604
 1967              	.LBB369:
 1968              	.LBI369:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1969              		.loc 1 552 13 view .LVU605
 1970              	.LBB370:
 553:src/keys.c    **** 		return;
 1971              		.loc 1 553 2 view .LVU606
 553:src/keys.c    **** 		return;
 1972              		.loc 1 553 6 is_stmt 0 view .LVU607
 1973 008a FFF7FEFF 		bl	is_bad_cmdline
 1974              	.LVL153:
 553:src/keys.c    **** 		return;
 1975              		.loc 1 553 5 view .LVU608
 1976 008e 0028     		cmp	r0, #0
ARM GAS  /tmp/ccvq0xdJ.s 			page 97


 1977 0090 40F09380 		bne	.L229
 1978 0094 E0B2     		uxtb	r0, r4
 1979 0096 FFF7FEFF 		bl	init_arg.part.0
 1980              	.LVL154:
 1981              	.LBE370:
 1982              	.LBE369:
 931:src/keys.c    **** }
 1983              		.loc 1 931 9 view .LVU609
 1984 009a 3322     		movs	r2, #51
 1985              	.LVL155:
 1986              	.L203:
 932:src/keys.c    **** 
 1987              		.loc 1 932 1 view .LVU610
 1988 009c 1046     		mov	r0, r2
 1989 009e 10BD     		pop	{r4, pc}
 1990              	.LVL156:
 1991              	.L230:
 824:src/keys.c    **** 	  case K00:
 1992              		.loc 1 824 4 is_stmt 1 view .LVU611
 1993 00a0 1228     		cmp	r0, #18
 1994 00a2 29D8     		bhi	.L205
 1995 00a4 01A3     		adr	r3, .L207
 1996 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1997 00aa 00BF     		.p2align 2
 1998              	.L207:
 1999 00ac E9010000 		.word	.L210+1
 2000 00b0 DB010000 		.word	.L209+1
 2001 00b4 F9000000 		.word	.L205+1
 2002 00b8 CD010000 		.word	.L208+1
 2003 00bc F9000000 		.word	.L205+1
 2004 00c0 F9000000 		.word	.L205+1
 2005 00c4 F9000000 		.word	.L205+1
 2006 00c8 F9000000 		.word	.L205+1
 2007 00cc F9000000 		.word	.L205+1
 2008 00d0 F9000000 		.word	.L205+1
 2009 00d4 F9000000 		.word	.L205+1
 2010 00d8 F9000000 		.word	.L205+1
 2011 00dc F9000000 		.word	.L205+1
 2012 00e0 F9000000 		.word	.L205+1
 2013 00e4 F9000000 		.word	.L205+1
 2014 00e8 F9000000 		.word	.L205+1
 2015 00ec F9000000 		.word	.L205+1
 2016 00f0 F9000000 		.word	.L205+1
 2017 00f4 7F000000 		.word	.L206+1
 2018              		.p2align 1
 2019              	.L205:
 854:src/keys.c    **** 	  }
 2020              		.loc 1 854 12 view .LVU612
 859:src/keys.c    **** #ifdef DM42
 2021              		.loc 1 859 2 view .LVU613
 2022 00f8 C31E     		subs	r3, r0, #3
 2023 00fa 2A2B     		cmp	r3, #42
 2024 00fc CED8     		bhi	.L203
 2025 00fe 01A1     		adr	r1, .L214
 2026 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2027              		.p2align 2
 2028              	.L214:
ARM GAS  /tmp/ccvq0xdJ.s 			page 98


 2029 0104 C1010000 		.word	.L217+1
 2030 0108 9D000000 		.word	.L203+1
 2031 010c 9D000000 		.word	.L203+1
 2032 0110 8B000000 		.word	.L212+1
 2033 0114 8B000000 		.word	.L212+1
 2034 0118 9D000000 		.word	.L203+1
 2035 011c 9D000000 		.word	.L203+1
 2036 0120 9D000000 		.word	.L203+1
 2037 0124 9D000000 		.word	.L203+1
 2038 0128 9D000000 		.word	.L203+1
 2039 012c 9D000000 		.word	.L203+1
 2040 0130 9D000000 		.word	.L203+1
 2041 0134 9D000000 		.word	.L203+1
 2042 0138 F5010000 		.word	.L216+1
 2043 013c 9D000000 		.word	.L203+1
 2044 0140 8B000000 		.word	.L212+1
 2045 0144 9D000000 		.word	.L203+1
 2046 0148 9D000000 		.word	.L203+1
 2047 014c 9D000000 		.word	.L203+1
 2048 0150 9D000000 		.word	.L203+1
 2049 0154 9D000000 		.word	.L203+1
 2050 0158 9D000000 		.word	.L203+1
 2051 015c 9D000000 		.word	.L203+1
 2052 0160 9D000000 		.word	.L203+1
 2053 0164 9D000000 		.word	.L203+1
 2054 0168 9D000000 		.word	.L203+1
 2055 016c 9D000000 		.word	.L203+1
 2056 0170 9D000000 		.word	.L203+1
 2057 0174 9D000000 		.word	.L203+1
 2058 0178 9D000000 		.word	.L203+1
 2059 017c 9D000000 		.word	.L203+1
 2060 0180 9D000000 		.word	.L203+1
 2061 0184 9D000000 		.word	.L203+1
 2062 0188 9D000000 		.word	.L203+1
 2063 018c 9D000000 		.word	.L203+1
 2064 0190 9D000000 		.word	.L203+1
 2065 0194 9D000000 		.word	.L203+1
 2066 0198 9D000000 		.word	.L203+1
 2067 019c 9D000000 		.word	.L203+1
 2068 01a0 9D000000 		.word	.L203+1
 2069 01a4 9D000000 		.word	.L203+1
 2070 01a8 0B020000 		.word	.L215+1
 2071 01ac BB010000 		.word	.L229+1
 2072              		.p2align 1
 2073              	.L221:
 907:src/keys.c    **** #else
 2074              		.loc 1 907 4 view .LVU614
 907:src/keys.c    **** #else
 2075              		.loc 1 907 17 is_stmt 0 view .LVU615
 2076 01b0 2F4A     		ldr	r2, .L234+12
 2077              	.LVL157:
 907:src/keys.c    **** #else
 2078              		.loc 1 907 17 view .LVU616
 2079 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2080 01b4 43F00203 		orr	r3, r3, #2
 2081 01b8 5375     		strb	r3, [r2, #21]
 2082              	.LVL158:
ARM GAS  /tmp/ccvq0xdJ.s 			page 99


 2083              	.L229:
 913:src/keys.c    **** 
 2084              		.loc 1 913 4 is_stmt 1 view .LVU617
 931:src/keys.c    **** }
 2085              		.loc 1 931 9 is_stmt 0 view .LVU618
 2086 01ba 3322     		movs	r2, #51
 932:src/keys.c    **** 
 2087              		.loc 1 932 1 view .LVU619
 2088 01bc 1046     		mov	r0, r2
 2089 01be 10BD     		pop	{r4, pc}
 2090              	.LVL159:
 2091              	.L217:
 866:src/keys.c    **** #else
 2092              		.loc 1 866 3 is_stmt 1 view .LVU620
 866:src/keys.c    **** #else
 2093              		.loc 1 866 10 is_stmt 0 view .LVU621
 2094 01c0 2146     		mov	r1, r4
 2095 01c2 0220     		movs	r0, #2
 932:src/keys.c    **** 
 2096              		.loc 1 932 1 view .LVU622
 2097 01c4 BDE81040 		pop	{r4, lr}
 2098              		.cfi_remember_state
 2099              		.cfi_restore 14
 2100              		.cfi_restore 4
 2101              		.cfi_def_cfa_offset 0
 2102              	.LVL160:
 866:src/keys.c    **** #else
 2103              		.loc 1 866 10 view .LVU623
 2104 01c8 FFF7FEBF 		b	check_f_key
 2105              	.LVL161:
 2106              	.L208:
 2107              		.cfi_restore_state
 842:src/keys.c    **** 	    if (intltr(12)) {
 2108              		.loc 1 842 6 is_stmt 1 view .LVU624
 843:src/keys.c    **** 	      return op_int;
 2109              		.loc 1 843 6 view .LVU625
 843:src/keys.c    **** 	      return op_int;
 2110              		.loc 1 843 10 is_stmt 0 view .LVU626
 2111 01cc 0C20     		movs	r0, #12
 2112              	.LVL162:
 843:src/keys.c    **** 	      return op_int;
 2113              		.loc 1 843 10 view .LVU627
 2114 01ce FFF7FEFF 		bl	intltr
 2115              	.LVL163:
 843:src/keys.c    **** 	      return op_int;
 2116              		.loc 1 843 9 view .LVU628
 2117 01d2 0028     		cmp	r0, #0
 2118 01d4 F4D0     		beq	.L217
 844:src/keys.c    **** 	    }
 2119              		.loc 1 844 15 view .LVU629
 2120 01d6 1122     		movs	r2, #17
 2121 01d8 60E7     		b	.L203
 2122              	.LVL164:
 2123              	.L209:
 834:src/keys.c    **** 	    if (intltr(11)) {
 2124              		.loc 1 834 6 is_stmt 1 view .LVU630
 835:src/keys.c    **** 	      return op;
ARM GAS  /tmp/ccvq0xdJ.s 			page 100


 2125              		.loc 1 835 6 view .LVU631
 835:src/keys.c    **** 	      return op;
 2126              		.loc 1 835 10 is_stmt 0 view .LVU632
 2127 01da 0B20     		movs	r0, #11
 2128              	.LVL165:
 835:src/keys.c    **** 	      return op;
 2129              		.loc 1 835 10 view .LVU633
 2130 01dc FFF7FEFF 		bl	intltr
 2131              	.LVL166:
 835:src/keys.c    **** 	      return op;
 2132              		.loc 1 835 9 view .LVU634
 2133 01e0 0028     		cmp	r0, #0
 2134 01e2 37D0     		beq	.L232
 836:src/keys.c    **** 	    }
 2135              		.loc 1 836 15 view .LVU635
 2136 01e4 1022     		movs	r2, #16
 2137 01e6 59E7     		b	.L203
 2138              	.LVL167:
 2139              	.L210:
 826:src/keys.c    **** 	    if (intltr(10)) {
 2140              		.loc 1 826 6 is_stmt 1 view .LVU636
 827:src/keys.c    **** 	      return op;
 2141              		.loc 1 827 6 view .LVU637
 827:src/keys.c    **** 	      return op;
 2142              		.loc 1 827 10 is_stmt 0 view .LVU638
 2143 01e8 0A20     		movs	r0, #10
 2144              	.LVL168:
 827:src/keys.c    **** 	      return op;
 2145              		.loc 1 827 10 view .LVU639
 2146 01ea FFF7FEFF 		bl	intltr
 2147              	.LVL169:
 827:src/keys.c    **** 	      return op;
 2148              		.loc 1 827 9 view .LVU640
 2149 01ee 60B3     		cbz	r0, .L233
 828:src/keys.c    **** 	    }
 2150              		.loc 1 828 15 view .LVU641
 2151 01f0 0F22     		movs	r2, #15
 2152 01f2 53E7     		b	.L203
 2153              	.LVL170:
 2154              	.L216:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2155              		.loc 1 916 3 is_stmt 1 view .LVU642
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2156              		.loc 1 916 7 is_stmt 0 view .LVU643
 2157 01f4 1E4B     		ldr	r3, .L234+12
 2158 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2159              	.LVL171:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2160              		.loc 1 916 6 view .LVU644
 2161 01f8 9106     		lsls	r1, r2, #26
 2162 01fa DED4     		bmi	.L229
 918:src/keys.c    **** 			return op;
 2163              		.loc 1 918 3 is_stmt 1 view .LVU645
 918:src/keys.c    **** 			return op;
 2164              		.loc 1 918 7 is_stmt 0 view .LVU646
 2165 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 920:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 101


 2166              		.loc 1 920 10 view .LVU647
 2167 01fe 13F0400F 		tst	r3, #64
 2168 0202 14BF     		ite	ne
 2169 0204 2246     		movne	r2, r4
 2170 0206 3022     		moveq	r2, #48
 2171 0208 48E7     		b	.L203
 2172              	.LVL172:
 2173              	.L215:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2174              		.loc 1 890 3 is_stmt 1 view .LVU648
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2175              		.loc 1 890 7 is_stmt 0 view .LVU649
 2176 020a FFF7FEFF 		bl	is_bad_cmdline
 2177              	.LVL173:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2178              		.loc 1 890 6 view .LVU650
 2179 020e 0028     		cmp	r0, #0
 2180 0210 D3D1     		bne	.L229
 892:src/keys.c    **** 		State2.arrow = 1;
 2181              		.loc 1 892 3 is_stmt 1 view .LVU651
 2182 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2183              	.LVL174:
 893:src/keys.c    **** #ifdef DM42
 2184              		.loc 1 893 3 view .LVU652
 893:src/keys.c    **** #ifdef DM42
 2185              		.loc 1 893 16 is_stmt 0 view .LVU653
 2186 0216 164A     		ldr	r2, .L234+12
 2187 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2188 021a 43F00403 		orr	r3, r3, #4
 2189 021e 5375     		strb	r3, [r2, #21]
 895:src/keys.c    **** 		display_current_menu ();
 2190              		.loc 1 895 3 is_stmt 1 view .LVU654
 2191 0220 0920     		movs	r0, #9
 2192 0222 FFF7FEFF 		bl	set_menu
 2193              	.LVL175:
 896:src/keys.c    **** 		lcd_refresh ();
 2194              		.loc 1 896 3 view .LVU655
 2195 0226 FFF7FEFF 		bl	display_current_menu
 2196              	.LVL176:
 897:src/keys.c    **** #else
 2197              		.loc 1 897 3 view .LVU656
 2198 022a 124B     		ldr	r3, .L234+16
 2199 022c 9847     		blx	r3
 2200              	.LVL177:
 901:src/keys.c    **** 
 2201              		.loc 1 901 3 view .LVU657
 931:src/keys.c    **** }
 2202              		.loc 1 931 9 is_stmt 0 view .LVU658
 2203 022e 3322     		movs	r2, #51
 901:src/keys.c    **** 
 2204              		.loc 1 901 3 view .LVU659
 2205 0230 34E7     		b	.L203
 2206              	.LVL178:
 2207              	.L218:
 862:src/keys.c    **** 	case K01:
 2208              		.loc 1 862 3 is_stmt 1 view .LVU660
 862:src/keys.c    **** 	case K01:
ARM GAS  /tmp/ccvq0xdJ.s 			page 102


 2209              		.loc 1 862 10 is_stmt 0 view .LVU661
 2210 0232 2146     		mov	r1, r4
 2211 0234 0020     		movs	r0, #0
 2212              	.LVL179:
 932:src/keys.c    **** 
 2213              		.loc 1 932 1 view .LVU662
 2214 0236 BDE81040 		pop	{r4, lr}
 2215              		.cfi_remember_state
 2216              		.cfi_restore 14
 2217              		.cfi_restore 4
 2218              		.cfi_def_cfa_offset 0
 862:src/keys.c    **** 	case K01:
 2219              		.loc 1 862 10 view .LVU663
 2220 023a FFF7FEBF 		b	check_f_key
 2221              	.LVL180:
 2222              	.L219:
 2223              		.cfi_restore_state
 864:src/keys.c    **** 	case K03:
 2224              		.loc 1 864 3 is_stmt 1 view .LVU664
 864:src/keys.c    **** 	case K03:
 2225              		.loc 1 864 10 is_stmt 0 view .LVU665
 2226 023e 2146     		mov	r1, r4
 2227 0240 0120     		movs	r0, #1
 2228              	.LVL181:
 932:src/keys.c    **** 
 2229              		.loc 1 932 1 view .LVU666
 2230 0242 BDE81040 		pop	{r4, lr}
 2231              		.cfi_remember_state
 2232              		.cfi_restore 14
 2233              		.cfi_restore 4
 2234              		.cfi_def_cfa_offset 0
 864:src/keys.c    **** 	case K03:
 2235              		.loc 1 864 10 view .LVU667
 2236 0246 FFF7FEBF 		b	check_f_key
 2237              	.LVL182:
 2238              	.L233:
 2239              		.cfi_restore_state
 831:src/keys.c    **** 	    }
 2240              		.loc 1 831 8 is_stmt 1 view .LVU668
 932:src/keys.c    **** 
 2241              		.loc 1 932 1 is_stmt 0 view .LVU669
 2242 024a BDE81040 		pop	{r4, lr}
 2243              		.cfi_remember_state
 2244              		.cfi_restore 14
 2245              		.cfi_restore 4
 2246              		.cfi_def_cfa_offset 0
 831:src/keys.c    **** 	    }
 2247              		.loc 1 831 15 view .LVU670
 2248 024e 0F21     		movs	r1, #15
 2249 0250 FFF7FEBF 		b	check_f_key
 2250              	.LVL183:
 2251              	.L232:
 2252              		.cfi_restore_state
 839:src/keys.c    **** 	    }
 2253              		.loc 1 839 8 is_stmt 1 view .LVU671
 932:src/keys.c    **** 
 2254              		.loc 1 932 1 is_stmt 0 view .LVU672
ARM GAS  /tmp/ccvq0xdJ.s 			page 103


 2255 0254 BDE81040 		pop	{r4, lr}
 2256              		.cfi_remember_state
 2257              		.cfi_restore 14
 2258              		.cfi_restore 4
 2259              		.cfi_def_cfa_offset 0
 839:src/keys.c    **** 	    }
 2260              		.loc 1 839 15 view .LVU673
 2261 0258 1021     		movs	r1, #16
 2262 025a 0120     		movs	r0, #1
 2263 025c FFF7FEBF 		b	check_f_key
 2264              	.LVL184:
 2265              	.L231:
 2266              		.cfi_restore_state
 852:src/keys.c    **** 	    }
 2267              		.loc 1 852 15 view .LVU674
 2268 0260 1422     		movs	r2, #20
 2269 0262 1BE7     		b	.L203
 2270              	.L235:
 2271              		.align	2
 2272              	.L234:
 2273 0264 00000000 		.word	main_ram
 2274 0268 00000000 		.word	.LANCHOR1
 2275 026c 00000000 		.word	.LANCHOR2
 2276 0270 00000000 		.word	StateWhileOn
 2277 0274 31020008 		.word	134218289
 2278              		.cfi_endproc
 2279              	.LFE19:
 2281              		.section	.text.process_fg_shifted,"ax",%progbits
 2282              		.align	1
 2283              		.p2align 2,,3
 2284              		.syntax unified
 2285              		.thumb
 2286              		.thumb_func
 2287              		.fpu fpv4-sp-d16
 2289              	process_fg_shifted:
 2290              	.LVL185:
 2291              	.LFB20:
 938:src/keys.c    **** 
 2292              		.loc 1 938 48 is_stmt 1 view -0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 0
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 941:src/keys.c    **** 		// Row 1
 2296              		.loc 1 941 2 view .LVU676
 992:src/keys.c    **** 		STATE_UNFINISHED,
 2297              		.loc 1 992 2 view .LVU677
 999:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2298              		.loc 1 999 2 view .LVU678
 2299              	.LBB371:
 2300              	.LBI371:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2301              		.loc 1 114 13 view .LVU679
 2302              	.LBE371:
 115:src/keys.c    **** }
 2303              		.loc 1 115 2 view .LVU680
 2304              	.LBB388:
 2305              	.LBB372:
ARM GAS  /tmp/ccvq0xdJ.s 			page 104


 2306              	.LBI372:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2307              		.loc 1 104 20 view .LVU681
 2308              	.LBB373:
 105:src/keys.c    **** 	State2.shifts = shift;
 2309              		.loc 1 105 2 view .LVU682
 2310              	.LBB374:
 2311              	.LBI374:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2312              		.loc 1 96 13 view .LVU683
 2313              	.LBB375:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2314              		.loc 1 97 2 view .LVU684
 2315              	.LBE375:
 2316              	.LBE374:
 2317              	.LBE373:
 2318              	.LBE372:
 2319              	.LBE388:
 938:src/keys.c    **** 
 2320              		.loc 1 938 48 is_stmt 0 view .LVU685
 2321 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2322              		.cfi_def_cfa_offset 24
 2323              		.cfi_offset 4, -24
 2324              		.cfi_offset 5, -20
 2325              		.cfi_offset 6, -16
 2326              		.cfi_offset 7, -12
 2327              		.cfi_offset 8, -8
 2328              		.cfi_offset 14, -4
 938:src/keys.c    **** 
 2329              		.loc 1 938 48 view .LVU686
 2330 0004 0446     		mov	r4, r0
 2331              	.LBB389:
 2332              	.LBB384:
 2333              	.LBB380:
 2334              	.LBB378:
 2335              	.LBB376:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2336              		.loc 1 97 18 view .LVU687
 2337 0006 FFF7FEFF 		bl	shift_down
 2338              	.LVL186:
  98:src/keys.c    **** }
 2339              		.loc 1 98 2 is_stmt 1 view .LVU688
  98:src/keys.c    **** }
 2340              		.loc 1 98 52 is_stmt 0 view .LVU689
 2341 000a 0028     		cmp	r0, #0
 2342 000c 72D0     		beq	.L283
 2343 000e DFF89482 		ldr	r8, .L297+16
 2344 0012 0546     		mov	r5, r0
 2345              	.L237:
 2346              	.LVL187:
  98:src/keys.c    **** }
 2347              		.loc 1 98 52 view .LVU690
 2348              	.LBE376:
 2349              	.LBE378:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2350              		.loc 1 106 2 is_stmt 1 view .LVU691
 2351              	.LBE380:
ARM GAS  /tmp/ccvq0xdJ.s 			page 105


 2352              	.LBE384:
 2353              	.LBE389:
 2354              	.LBB390:
 2355              	.LBB391:
 158:src/keys.c    **** }
 2356              		.loc 1 158 23 is_stmt 0 view .LVU692
 2357 0014 9F4B     		ldr	r3, .L297
 2358              	.LBE391:
 2359              	.LBE390:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2360              		.loc 1 1001 21 view .LVU693
 2361 0016 A049     		ldr	r1, .L297+4
 2362              	.LBB394:
 2363              	.LBB392:
 158:src/keys.c    **** }
 2364              		.loc 1 158 23 view .LVU694
 2365 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2366              	.LBE392:
 2367              	.LBE394:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2368              		.loc 1 1001 21 view .LVU695
 2369 001a 4300     		lsls	r3, r0, #1
 2370 001c 022D     		cmp	r5, #2
 2371 001e 08BF     		it	eq
 2372 0020 0133     		addeq	r3, r3, #1
 2373              	.LBB395:
 2374              	.LBB385:
 2375              	.LBB381:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2376              		.loc 1 106 16 view .LVU696
 2377 0022 0022     		movs	r2, #0
 2378              	.LBE381:
 2379              	.LBE385:
 2380              	.LBE395:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2381              		.loc 1 1001 21 view .LVU697
 2382 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2383              	.LBB396:
 2384              	.LBB386:
 2385              	.LBB382:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2386              		.loc 1 106 16 view .LVU698
 2387 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2388              		.loc 1 108 2 is_stmt 1 view .LVU699
 2389              	.LVL188:
 108:src/keys.c    **** }
 2390              		.loc 1 108 2 is_stmt 0 view .LVU700
 2391              	.LBE382:
 2392              	.LBE386:
 2393              	.LBE396:
1000:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2394              		.loc 1 1000 2 is_stmt 1 view .LVU701
 2395              	.LBB397:
 2396              	.LBI390:
 146:src/keys.c    **** {
 2397              		.loc 1 146 12 view .LVU702
ARM GAS  /tmp/ccvq0xdJ.s 			page 106


 2398              	.LBB393:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2399              		.loc 1 148 2 view .LVU703
 158:src/keys.c    **** }
 2400              		.loc 1 158 2 view .LVU704
 158:src/keys.c    **** }
 2401              		.loc 1 158 2 is_stmt 0 view .LVU705
 2402              	.LBE393:
 2403              	.LBE397:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2404              		.loc 1 1001 2 is_stmt 1 view .LVU706
1002:src/keys.c    **** 	if (no_int)
 2405              		.loc 1 1002 2 view .LVU707
 2406 002c 06F47047 		and	r7, r6, #61440
 2407              	.LVL189:
1003:src/keys.c    **** 		op &= ~NO_INT;
 2408              		.loc 1 1003 2 view .LVU708
1003:src/keys.c    **** 		op &= ~NO_INT;
 2409              		.loc 1 1003 5 is_stmt 0 view .LVU709
 2410 0030 B7F5704F 		cmp	r7, #61440
 2411 0034 63D0     		beq	.L291
1006:src/keys.c    **** 	case K00:
 2412              		.loc 1 1006 2 is_stmt 1 view .LVU710
 2413 0036 282C     		cmp	r4, #40
 2414 0038 34D8     		bhi	.L258
 2415 003a DFE804F0 		tbb	[pc, r4]
 2416              	.L259:
 2417 003e D3       		.byte	(.L249-.L259)/2
 2418 003f 39       		.byte	(.L247-.L259)/2
 2419 0040 33       		.byte	(.L258-.L259)/2
 2420 0041 39       		.byte	(.L247-.L259)/2
 2421 0042 33       		.byte	(.L258-.L259)/2
 2422 0043 33       		.byte	(.L258-.L259)/2
 2423 0044 33       		.byte	(.L258-.L259)/2
 2424 0045 33       		.byte	(.L258-.L259)/2
 2425 0046 33       		.byte	(.L258-.L259)/2
 2426 0047 33       		.byte	(.L258-.L259)/2
 2427 0048 33       		.byte	(.L258-.L259)/2
 2428 0049 33       		.byte	(.L258-.L259)/2
 2429 004a 15       		.byte	(.L246-.L259)/2
 2430 004b 33       		.byte	(.L258-.L259)/2
 2431 004c 33       		.byte	(.L258-.L259)/2
 2432 004d 33       		.byte	(.L258-.L259)/2
 2433 004e 33       		.byte	(.L258-.L259)/2
 2434 004f 33       		.byte	(.L258-.L259)/2
 2435 0050 E0       		.byte	(.L245-.L259)/2
 2436 0051 B9       		.byte	(.L244-.L259)/2
 2437 0052 33       		.byte	(.L258-.L259)/2
 2438 0053 33       		.byte	(.L258-.L259)/2
 2439 0054 33       		.byte	(.L258-.L259)/2
 2440 0055 33       		.byte	(.L258-.L259)/2
 2441 0056 33       		.byte	(.L258-.L259)/2
 2442 0057 33       		.byte	(.L258-.L259)/2
 2443 0058 33       		.byte	(.L258-.L259)/2
 2444 0059 33       		.byte	(.L258-.L259)/2
 2445 005a 33       		.byte	(.L258-.L259)/2
 2446 005b 33       		.byte	(.L258-.L259)/2
ARM GAS  /tmp/ccvq0xdJ.s 			page 107


 2447 005c 44       		.byte	(.L243-.L259)/2
 2448 005d CB       		.byte	(.L242-.L259)/2
 2449 005e 49       		.byte	(.L240-.L259)/2
 2450 005f 49       		.byte	(.L240-.L259)/2
 2451 0060 33       		.byte	(.L258-.L259)/2
 2452 0061 33       		.byte	(.L258-.L259)/2
 2453 0062 33       		.byte	(.L258-.L259)/2
 2454 0063 33       		.byte	(.L258-.L259)/2
 2455 0064 33       		.byte	(.L258-.L259)/2
 2456 0065 49       		.byte	(.L240-.L259)/2
 2457 0066 49       		.byte	(.L240-.L259)/2
 2458 0067 00       		.p2align 1
 2459              	.L246:
1039:src/keys.c    **** 			if (is_bad_cmdline())
 2460              		.loc 1 1039 3 view .LVU711
1039:src/keys.c    **** 			if (is_bad_cmdline())
 2461              		.loc 1 1039 6 is_stmt 0 view .LVU712
 2462 0068 012D     		cmp	r5, #1
 2463 006a 11D1     		bne	.L252
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2464              		.loc 1 1040 4 is_stmt 1 view .LVU713
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2465              		.loc 1 1040 8 is_stmt 0 view .LVU714
 2466 006c FFF7FEFF 		bl	is_bad_cmdline
 2467              	.LVL190:
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2468              		.loc 1 1040 7 view .LVU715
 2469 0070 0028     		cmp	r0, #0
 2470 0072 40F0B380 		bne	.L285
1042:src/keys.c    **** 			State2.alphas = 1;
 2471              		.loc 1 1042 4 is_stmt 1 view .LVU716
 2472 0076 FFF7FEFF 		bl	process_cmdline_set_lift
 2473              	.LVL191:
1043:src/keys.c    **** #ifdef DM42
 2474              		.loc 1 1043 4 view .LVU717
1043:src/keys.c    **** #ifdef DM42
 2475              		.loc 1 1043 18 is_stmt 0 view .LVU718
 2476 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1045:src/keys.c    **** 			display_current_menu();
 2477              		.loc 1 1045 4 view .LVU719
 2478 007e 1020     		movs	r0, #16
1043:src/keys.c    **** #ifdef DM42
 2479              		.loc 1 1043 18 view .LVU720
 2480 0080 43F00803 		orr	r3, r3, #8
 2481 0084 88F81630 		strb	r3, [r8, #22]
1045:src/keys.c    **** 			display_current_menu();
 2482              		.loc 1 1045 4 is_stmt 1 view .LVU721
 2483 0088 FFF7FEFF 		bl	set_menu
 2484              	.LVL192:
1046:src/keys.c    **** #endif
 2485              		.loc 1 1046 4 view .LVU722
 2486 008c FFF7FEFF 		bl	display_current_menu
 2487              	.LVL193:
 2488              	.L252:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2489              		.loc 1 1091 2 view .LVU723
1091:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccvq0xdJ.s 			page 108


 2490              		.loc 1 1091 5 is_stmt 0 view .LVU724
 2491 0090 B7F5704F 		cmp	r7, #61440
 2492 0094 06D1     		bne	.L258
 2493              	.L239:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2494              		.loc 1 1091 13 discriminator 1 view .LVU725
 2495 0096 814B     		ldr	r3, .L297+8
 2496 0098 1B68     		ldr	r3, [r3]
 2497 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2498 009e DA07     		lsls	r2, r3, #31
 2499 00a0 00F19C80 		bmi	.L285
 2500              	.L258:
1094:src/keys.c    **** #undef NO_INT
 2501              		.loc 1 1094 2 is_stmt 1 view .LVU726
 2502              	.LVL194:
 2503              	.LBB398:
 2504              	.LBI398:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2505              		.loc 1 714 12 view .LVU727
 2506              	.LBB399:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2507              		.loc 1 715 2 view .LVU728
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2508              		.loc 1 715 6 is_stmt 0 view .LVU729
 2509 00a4 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2510              		.loc 1 715 5 view .LVU730
 2511 00a6 012B     		cmp	r3, #1
 2512 00a8 1FD0     		beq	.L261
 2513              	.LVL195:
 2514              	.L236:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2515              		.loc 1 715 5 view .LVU731
 2516              	.LBE399:
 2517              	.LBE398:
1096:src/keys.c    **** 
 2518              		.loc 1 1096 1 view .LVU732
 2519 00aa 3046     		mov	r0, r6
 2520 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2521              	.LVL196:
 2522              	.L247:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2523              		.loc 1 1028 4 is_stmt 1 view .LVU733
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2524              		.loc 1 1028 8 is_stmt 0 view .LVU734
 2525 00b0 7A4B     		ldr	r3, .L297+8
 2526 00b2 1B68     		ldr	r3, [r3]
 2527 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2528              		.loc 1 1028 7 view .LVU735
 2529 00b8 DB07     		lsls	r3, r3, #31
 2530 00ba 00F19980 		bmi	.L288
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2531              		.loc 1 1091 2 is_stmt 1 view .LVU736
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2532              		.loc 1 1091 5 is_stmt 0 view .LVU737
 2533 00be B7F5704F 		cmp	r7, #61440
ARM GAS  /tmp/ccvq0xdJ.s 			page 109


 2534 00c2 EFD1     		bne	.L258
 2535 00c4 E7E7     		b	.L239
 2536              	.L243:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2537              		.loc 1 1071 3 is_stmt 1 view .LVU738
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2538              		.loc 1 1071 18 is_stmt 0 view .LVU739
 2539 00c6 FFF7FEFF 		bl	shift_down
 2540              	.LVL197:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2541              		.loc 1 1071 6 view .LVU740
 2542 00ca 0028     		cmp	r0, #0
 2543 00cc 40F0BA80 		bne	.L292
 2544              	.L240:
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2545              		.loc 1 1080 3 is_stmt 1 view .LVU741
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2546              		.loc 1 1080 6 is_stmt 0 view .LVU742
 2547 00d0 B6F59C7F 		cmp	r6, #312
 2548 00d4 40F0A580 		bne	.L293
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2549              		.loc 1 1091 2 is_stmt 1 view .LVU743
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2550              		.loc 1 1091 5 is_stmt 0 view .LVU744
 2551 00d8 B7F5704F 		cmp	r7, #61440
 2552 00dc 05D1     		bne	.L261
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2553              		.loc 1 1091 13 view .LVU745
 2554 00de 6F4B     		ldr	r3, .L297+8
 2555 00e0 1B68     		ldr	r3, [r3]
 2556 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2557 00e6 DB07     		lsls	r3, r3, #31
 2558 00e8 78D4     		bmi	.L285
 2559              	.LVL198:
 2560              	.L261:
 2561              	.LBB402:
 2562              	.LBB400:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2563              		.loc 1 1091 13 view .LVU746
 2564 00ea 3046     		mov	r0, r6
 2565              	.LBE400:
 2566              	.LBE402:
1096:src/keys.c    **** 
 2567              		.loc 1 1096 1 view .LVU747
 2568 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2569              		.cfi_remember_state
 2570              		.cfi_restore 14
 2571              		.cfi_restore 8
 2572              		.cfi_restore 7
 2573              		.cfi_restore 6
 2574              		.cfi_restore 5
 2575              		.cfi_restore 4
 2576              		.cfi_def_cfa_offset 0
 2577              	.LVL199:
 2578              	.LBB403:
 2579              	.LBB401:
1096:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 110


 2580              		.loc 1 1096 1 view .LVU748
 2581 00f0 FFF7FEBF 		b	check_confirm.part.0
 2582              	.LVL200:
 2583              	.L283:
 2584              		.cfi_restore_state
1096:src/keys.c    **** 
 2585              		.loc 1 1096 1 view .LVU749
 2586              	.LBE401:
 2587              	.LBE403:
 2588              	.LBB404:
 2589              	.LBB387:
 2590              	.LBB383:
 2591              	.LBB379:
 2592              	.LBB377:
  98:src/keys.c    **** }
 2593              		.loc 1 98 52 view .LVU750
 2594 00f4 DFF8AC81 		ldr	r8, .L297+16
 2595 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2596 00fc 8AE7     		b	.L237
 2597              	.LVL201:
 2598              	.L291:
  98:src/keys.c    **** }
 2599              		.loc 1 98 52 view .LVU751
 2600              	.LBE377:
 2601              	.LBE379:
 2602              	.LBE383:
 2603              	.LBE387:
 2604              	.LBE404:
1004:src/keys.c    **** 
 2605              		.loc 1 1004 3 is_stmt 1 view .LVU752
1004:src/keys.c    **** 
 2606              		.loc 1 1004 6 is_stmt 0 view .LVU753
 2607 00fe 26F47046 		bic	r6, r6, #61440
 2608              	.LVL202:
1006:src/keys.c    **** 	case K00:
 2609              		.loc 1 1006 2 is_stmt 1 view .LVU754
 2610 0102 282C     		cmp	r4, #40
 2611 0104 C7D8     		bhi	.L239
 2612 0106 01A3     		adr	r3, .L241
 2613 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2614              		.p2align 2
 2615              	.L241:
 2616 010c E5010000 		.word	.L249+1
 2617 0110 B1000000 		.word	.L247+1
 2618 0114 97000000 		.word	.L239+1
 2619 0118 B1000000 		.word	.L247+1
 2620 011c 97000000 		.word	.L239+1
 2621 0120 97000000 		.word	.L239+1
 2622 0124 97000000 		.word	.L239+1
 2623 0128 97000000 		.word	.L239+1
 2624 012c 97000000 		.word	.L239+1
 2625 0130 97000000 		.word	.L239+1
 2626 0134 97000000 		.word	.L239+1
 2627 0138 97000000 		.word	.L239+1
 2628 013c 69000000 		.word	.L246+1
 2629 0140 97000000 		.word	.L239+1
 2630 0144 97000000 		.word	.L239+1
ARM GAS  /tmp/ccvq0xdJ.s 			page 111


 2631 0148 97000000 		.word	.L239+1
 2632 014c 97000000 		.word	.L239+1
 2633 0150 97000000 		.word	.L239+1
 2634 0154 FF010000 		.word	.L245+1
 2635 0158 B1010000 		.word	.L244+1
 2636 015c 97000000 		.word	.L239+1
 2637 0160 97000000 		.word	.L239+1
 2638 0164 97000000 		.word	.L239+1
 2639 0168 97000000 		.word	.L239+1
 2640 016c 97000000 		.word	.L239+1
 2641 0170 97000000 		.word	.L239+1
 2642 0174 97000000 		.word	.L239+1
 2643 0178 97000000 		.word	.L239+1
 2644 017c 97000000 		.word	.L239+1
 2645 0180 97000000 		.word	.L239+1
 2646 0184 C7000000 		.word	.L243+1
 2647 0188 D5010000 		.word	.L242+1
 2648 018c D1000000 		.word	.L240+1
 2649 0190 D1000000 		.word	.L240+1
 2650 0194 97000000 		.word	.L239+1
 2651 0198 97000000 		.word	.L239+1
 2652 019c 97000000 		.word	.L239+1
 2653 01a0 97000000 		.word	.L239+1
 2654 01a4 97000000 		.word	.L239+1
 2655 01a8 D1000000 		.word	.L240+1
 2656 01ac D1000000 		.word	.L240+1
 2657              		.p2align 1
 2658              	.L244:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2659              		.loc 1 1052 4 view .LVU755
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2660              		.loc 1 1052 7 is_stmt 0 view .LVU756
 2661 01b0 022D     		cmp	r5, #2
 2662 01b2 7FF46DAF 		bne	.L252
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2663              		.loc 1 1052 27 discriminator 1 view .LVU757
 2664 01b6 394B     		ldr	r3, .L297+8
 2665 01b8 1B68     		ldr	r3, [r3]
 2666 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2667 01be DC07     		lsls	r4, r3, #31
 2668 01c0 7FF566AF 		bpl	.L252
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2669              		.loc 1 1052 45 discriminator 2 view .LVU758
 2670 01c4 0D20     		movs	r0, #13
 2671              	.LVL203:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2672              		.loc 1 1052 45 discriminator 2 view .LVU759
 2673 01c6 FFF7FEFF 		bl	intltr
 2674              	.LVL204:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2675              		.loc 1 1052 42 discriminator 2 view .LVU760
 2676 01ca 0028     		cmp	r0, #0
 2677 01cc 3FF460AF 		beq	.L252
1053:src/keys.c    **** 	  }
 2678              		.loc 1 1053 13 view .LVU761
 2679 01d0 1226     		movs	r6, #18
 2680              	.LVL205:
ARM GAS  /tmp/ccvq0xdJ.s 			page 112


1053:src/keys.c    **** 	  }
 2681              		.loc 1 1053 13 view .LVU762
 2682 01d2 6AE7     		b	.L236
 2683              	.LVL206:
 2684              	.L242:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2685              		.loc 1 1063 3 is_stmt 1 view .LVU763
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2686              		.loc 1 1063 7 is_stmt 0 view .LVU764
 2687 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2688              	.LVL207:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2689              		.loc 1 1063 6 view .LVU765
 2690 01d8 0028     		cmp	r0, #0
 2691 01da 40D0     		beq	.L294
 2692              	.LVL208:
 2693              	.L285:
1084:src/keys.c    **** 		}
 2694              		.loc 1 1084 11 view .LVU766
 2695 01dc 3326     		movs	r6, #51
 2696              	.LVL209:
1096:src/keys.c    **** 
 2697              		.loc 1 1096 1 view .LVU767
 2698 01de 3046     		mov	r0, r6
 2699 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2700              	.LVL210:
 2701              	.L249:
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2702              		.loc 1 1008 4 is_stmt 1 view .LVU768
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2703              		.loc 1 1008 8 is_stmt 0 view .LVU769
 2704 01e4 2D4B     		ldr	r3, .L297+8
 2705 01e6 1B68     		ldr	r3, [r3]
 2706 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2707              		.loc 1 1008 7 view .LVU770
 2708 01ec DA07     		lsls	r2, r3, #31
 2709 01ee 3CD5     		bpl	.L295
 2710              	.L288:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2711              		.loc 1 1028 20 discriminator 1 view .LVU771
 2712 01f0 012D     		cmp	r5, #1
 2713 01f2 48D0     		beq	.L296
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2714              		.loc 1 1091 2 is_stmt 1 view .LVU772
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2715              		.loc 1 1091 5 is_stmt 0 view .LVU773
 2716 01f4 B7F5704F 		cmp	r7, #61440
 2717 01f8 7FF454AF 		bne	.L258
 2718 01fc EEE7     		b	.L285
 2719              	.L245:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2720              		.loc 1 1057 4 is_stmt 1 view .LVU774
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2721              		.loc 1 1057 7 is_stmt 0 view .LVU775
 2722 01fe 022D     		cmp	r5, #2
 2723 0200 7FF446AF 		bne	.L252
ARM GAS  /tmp/ccvq0xdJ.s 			page 113


1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2724              		.loc 1 1057 27 discriminator 1 view .LVU776
 2725 0204 254B     		ldr	r3, .L297+8
 2726 0206 1B68     		ldr	r3, [r3]
 2727 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2728 020c D807     		lsls	r0, r3, #31
 2729              	.LVL211:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2730              		.loc 1 1057 27 discriminator 1 view .LVU777
 2731 020e 7FF53FAF 		bpl	.L252
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2732              		.loc 1 1057 45 discriminator 2 view .LVU778
 2733 0212 0E20     		movs	r0, #14
 2734 0214 FFF7FEFF 		bl	intltr
 2735              	.LVL212:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2736              		.loc 1 1057 42 discriminator 2 view .LVU779
 2737 0218 0028     		cmp	r0, #0
 2738 021a 3FF439AF 		beq	.L252
1058:src/keys.c    **** 	  }
 2739              		.loc 1 1058 13 view .LVU780
 2740 021e 1326     		movs	r6, #19
 2741              	.LVL213:
1058:src/keys.c    **** 	  }
 2742              		.loc 1 1058 13 view .LVU781
 2743 0220 43E7     		b	.L236
 2744              	.LVL214:
 2745              	.L293:
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2746              		.loc 1 1081 4 is_stmt 1 view .LVU782
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2747              		.loc 1 1081 7 is_stmt 0 view .LVU783
 2748 0222 B7F5704F 		cmp	r7, #61440
 2749 0226 05D1     		bne	.L257
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2750              		.loc 1 1081 18 discriminator 1 view .LVU784
 2751 0228 1C4B     		ldr	r3, .L297+8
 2752 022a 1B68     		ldr	r3, [r3]
 2753 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2754              		.loc 1 1081 8 discriminator 1 view .LVU785
 2755 0230 D907     		lsls	r1, r3, #31
 2756 0232 D3D4     		bmi	.L285
 2757              	.L257:
1082:src/keys.c    **** 			}
 2758              		.loc 1 1082 5 is_stmt 1 view .LVU786
 2759              	.LVL215:
 2760              	.LBB405:
 2761              	.LBI405:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2762              		.loc 1 552 13 view .LVU787
 2763              	.LBB406:
 553:src/keys.c    **** 		return;
 2764              		.loc 1 553 2 view .LVU788
 553:src/keys.c    **** 		return;
 2765              		.loc 1 553 6 is_stmt 0 view .LVU789
 2766 0234 FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccvq0xdJ.s 			page 114


 2767              	.LVL216:
 553:src/keys.c    **** 		return;
 2768              		.loc 1 553 5 view .LVU790
 2769 0238 0028     		cmp	r0, #0
 2770 023a CFD1     		bne	.L285
 2771 023c F0B2     		uxtb	r0, r6
 2772 023e FFF7FEFF 		bl	init_arg.part.0
 2773              	.LVL217:
 2774 0242 CBE7     		b	.L285
 2775              	.LVL218:
 2776              	.L292:
 553:src/keys.c    **** 		return;
 2777              		.loc 1 553 5 view .LVU791
 2778              	.LBE406:
 2779              	.LBE405:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2780              		.loc 1 1072 4 is_stmt 1 view .LVU792
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2781              		.loc 1 1072 26 is_stmt 0 view .LVU793
 2782 0244 A5F10105 		sub	r5, #1
 2783              	.LVL219:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2784              		.loc 1 1072 17 view .LVU794
 2785 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2786              		.loc 1 1072 26 view .LVU795
 2787 024c B5FA85F5 		clz	r5, r5
 2788 0250 6D09     		lsrs	r5, r5, #5
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2789              		.loc 1 1072 17 view .LVU796
 2790 0252 65F3C713 		bfi	r3, r5, #7, #1
 2791 0256 88F81730 		strb	r3, [r8, #23]
1073:src/keys.c    **** 		}
 2792              		.loc 1 1073 4 is_stmt 1 view .LVU797
1073:src/keys.c    **** 		}
 2793              		.loc 1 1073 11 is_stmt 0 view .LVU798
 2794 025a 3326     		movs	r6, #51
 2795              	.LVL220:
1073:src/keys.c    **** 		}
 2796              		.loc 1 1073 11 view .LVU799
 2797 025c 25E7     		b	.L236
 2798              	.LVL221:
 2799              	.L294:
1065:src/keys.c    **** 		State2.test = op;
 2800              		.loc 1 1065 3 is_stmt 1 view .LVU800
 2801 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2802              	.LVL222:
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2803              		.loc 1 1066 3 view .LVU801
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2804              		.loc 1 1066 15 is_stmt 0 view .LVU802
 2805 0262 88F80F60 		strb	r6, [r8, #15]
1067:src/keys.c    **** 
 2806              		.loc 1 1067 3 is_stmt 1 view .LVU803
1067:src/keys.c    **** 
 2807              		.loc 1 1067 10 is_stmt 0 view .LVU804
 2808 0266 3326     		movs	r6, #51
ARM GAS  /tmp/ccvq0xdJ.s 			page 115


 2809              	.LVL223:
1067:src/keys.c    **** 
 2810              		.loc 1 1067 10 view .LVU805
 2811 0268 1FE7     		b	.L236
 2812              	.LVL224:
 2813              	.L295:
1010:src/keys.c    **** 	    State2.dot = op;
 2814              		.loc 1 1010 6 is_stmt 1 view .LVU806
1011:src/keys.c    **** 	    // State2.cmplx = 0;
 2815              		.loc 1 1011 6 view .LVU807
1010:src/keys.c    **** 	    State2.dot = op;
 2816              		.loc 1 1010 17 is_stmt 0 view .LVU808
 2817 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2818 026e 06F00103 		and	r3, r6, #1
 2819 0272 9B01     		lsls	r3, r3, #6
 2820 0274 43F02003 		orr	r3, r3, #32
 2821 0278 22F06002 		bic	r2, r2, #96
 2822 027c 1343     		orrs	r3, r3, r2
 2823 027e 88F81530 		strb	r3, [r8, #21]
1013:src/keys.c    **** 	  }
 2824              		.loc 1 1013 6 is_stmt 1 view .LVU809
1013:src/keys.c    **** 	  }
 2825              		.loc 1 1013 13 is_stmt 0 view .LVU810
 2826 0282 3326     		movs	r6, #51
 2827              	.LVL225:
1013:src/keys.c    **** 	  }
 2828              		.loc 1 1013 13 view .LVU811
 2829 0284 11E7     		b	.L236
 2830              	.LVL226:
 2831              	.L296:
1029:src/keys.c    **** 		}
 2832              		.loc 1 1029 4 is_stmt 1 view .LVU812
1029:src/keys.c    **** 		}
 2833              		.loc 1 1029 34 is_stmt 0 view .LVU813
 2834 0286 064B     		ldr	r3, .L297+12
1096:src/keys.c    **** 
 2835              		.loc 1 1096 1 view .LVU814
 2836 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2837              		.cfi_restore 14
 2838              		.cfi_restore 8
 2839              		.cfi_restore 7
 2840              		.cfi_restore 6
 2841              		.cfi_restore 5
 2842              		.cfi_restore 4
 2843              		.cfi_def_cfa_offset 0
 2844              	.LVL227:
1029:src/keys.c    **** 		}
 2845              		.loc 1 1029 11 view .LVU815
 2846 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2847 0290 FFF7FEBF 		b	check_f_key
 2848              	.LVL228:
 2849              	.L298:
1029:src/keys.c    **** 		}
 2850              		.loc 1 1029 11 view .LVU816
 2851              		.align	2
 2852              	.L297:
 2853 0294 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccvq0xdJ.s 			page 116


 2854 0298 00000000 		.word	.LANCHOR3
 2855 029c 00000000 		.word	main_ram
 2856 02a0 00000000 		.word	.LANCHOR4
 2857 02a4 00000000 		.word	StateWhileOn
 2858              		.cfi_endproc
 2859              	.LFE20:
 2861              		.section	.text.set_window,"ax",%progbits
 2862              		.align	1
 2863              		.p2align 2,,3
 2864              		.syntax unified
 2865              		.thumb
 2866              		.thumb_func
 2867              		.fpu fpv4-sp-d16
 2869              	set_window:
 2870              	.LVL229:
 2871              	.LFB58:
2987:src/keys.c    **** 
2988:src/keys.c    **** 
2989:src/keys.c    **** /*
2990:src/keys.c    ****  *  CAT command
2991:src/keys.c    ****  */
2992:src/keys.c    **** static int process_labellist(const keycode c) {
2993:src/keys.c    **** 	unsigned int pc = State2.digval;
2994:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2995:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2996:src/keys.c    **** 	const int opcode = getprog(pc);
2997:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2998:src/keys.c    **** 	const int direct = State2.runmode;
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
3000:src/keys.c    **** 	int op = STATE_UNFINISHED;
3001:src/keys.c    **** 
3002:src/keys.c    **** 	if (n < REGION_XROM) {
3003:src/keys.c    **** 		// Digits take you to that segment
3004:src/keys.c    **** 		pc = addrLIB(1, n);
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
3007:src/keys.c    **** 		State2.digval = pc;
3008:src/keys.c    **** 		return STATE_UNFINISHED;
3009:src/keys.c    **** 	}
3010:src/keys.c    **** 
3011:src/keys.c    **** 	switch (c | (shift << 8)) {
3012:src/keys.c    **** 
3013:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3014:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3015:src/keys.c    **** 		goto next;
3016:src/keys.c    **** 
3017:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3018:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3019:src/keys.c    **** 	case K_DOWN:				// Find next label
3020:src/keys.c    **** 	next:
3021:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3022:src/keys.c    **** 		return STATE_UNFINISHED;
3023:src/keys.c    **** 
3024:src/keys.c    **** 	case K_UP:				// Find previous label
3025:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3026:src/keys.c    **** 		return STATE_UNFINISHED;
3027:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 117


3028:src/keys.c    **** 	case K24:				// <- exits
3029:src/keys.c    **** 		break;
3030:src/keys.c    **** 
3031:src/keys.c    **** 	case K20:				// ENTER^
3032:src/keys.c    **** 	set_pc_and_exit:
3033:src/keys.c    **** 		set_pc(pc);			// forced branch
3034:src/keys.c    **** 		break;
3035:src/keys.c    **** 
3036:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3037:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3038:src/keys.c    **** 		goto set_pc_and_exit;
3039:src/keys.c    **** 
3040:src/keys.c    **** 	case K10:				// STO
3041:src/keys.c    **** 	case K11:				// RCL
3042:src/keys.c    **** 	  //#ifndef DM42	
3043:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3044:src/keys.c    **** 	  //#endif
3045:src/keys.c    **** /* #ifdef DM42 */
3046:src/keys.c    **** /* 	        op = OP_NIL; */
3047:src/keys.c    **** /* #endif	     */
3048:src/keys.c    **** 	  goto set_pc_and_exit;
3049:src/keys.c    **** #ifdef DM42
3050:src/keys.c    **** 	case K05:				// XEQ
3051:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3052:src/keys.c    **** 		goto xeq_or_gto;
3053:src/keys.c    **** 
3054:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3055:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3056:src/keys.c    **** 	xeq_or_gto:
3057:src/keys.c    **** 		if (label)
3058:src/keys.c    **** 			break;
3059:src/keys.c    **** 		return STATE_UNFINISHED;
3060:src/keys.c    **** #else
3061:src/keys.c    **** 	case K30:				// XEQ
3062:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3063:src/keys.c    **** 		goto xeq_or_gto;
3064:src/keys.c    **** 
3065:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3066:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3067:src/keys.c    **** 	xeq_or_gto:
3068:src/keys.c    **** 		if (label)
3069:src/keys.c    **** 			break;
3070:src/keys.c    **** 		return STATE_UNFINISHED;
3071:src/keys.c    **** #endif		
3072:src/keys.c    **** 	case K63:				// R/S
3073:src/keys.c    **** 		if (direct && label) {
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3075:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3076:src/keys.c    **** 			break;
3077:src/keys.c    **** 		}
3078:src/keys.c    **** 		return STATE_UNFINISHED;
3079:src/keys.c    **** 
3080:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3081:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3082:src/keys.c    **** 		goto set_pc_and_exit;
3083:src/keys.c    **** 
3084:src/keys.c    **** 	default:
ARM GAS  /tmp/ccvq0xdJ.s 			page 118


3085:src/keys.c    **** 		return STATE_UNFINISHED;
3086:src/keys.c    **** 	}
3087:src/keys.c    **** 	State2.digval = 0;
3088:src/keys.c    **** 	State2.labellist = 0;
3089:src/keys.c    **** 	return check_confirm(op);
3090:src/keys.c    **** }
3091:src/keys.c    **** 
3092:src/keys.c    **** 
3093:src/keys.c    **** static void set_window(int c) {
 2872              		.loc 1 3093 31 is_stmt 1 view -0
 2873              		.cfi_startproc
 2874              		@ args = 0, pretend = 0, frame = 0
 2875              		@ frame_needed = 0, uses_anonymous_args = 0
3094:src/keys.c    **** 
3095:src/keys.c    **** 	if (State2.runmode) {
 2876              		.loc 1 3095 2 view .LVU818
3093:src/keys.c    **** 
 2877              		.loc 1 3093 31 is_stmt 0 view .LVU819
 2878 0000 38B5     		push	{r3, r4, r5, lr}
 2879              		.cfi_def_cfa_offset 16
 2880              		.cfi_offset 3, -16
 2881              		.cfi_offset 4, -12
 2882              		.cfi_offset 5, -8
 2883              		.cfi_offset 14, -4
 2884              		.loc 1 3095 6 view .LVU820
 2885 0002 224C     		ldr	r4, .L314
 2886 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2887              		.loc 1 3095 5 view .LVU821
 2888 0006 5A06     		lsls	r2, r3, #25
 2889 0008 00D4     		bmi	.L311
 2890              	.LVL230:
 2891              	.L299:
3096:src/keys.c    **** 		process_cmdline_set_lift();
3097:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3098:src/keys.c    **** 		State2.disp_freeze = 0;
3099:src/keys.c    **** 		display();	
3100:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3101:src/keys.c    **** 			if (UState.intm) {
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3103:src/keys.c    **** 					State2.window--;
3104:src/keys.c    **** 				return;
3105:src/keys.c    **** 			}
3106:src/keys.c    **** 			else 
3107:src/keys.c    **** 				State2.window = is_dblmode();
3108:src/keys.c    **** 		}
3109:src/keys.c    **** 		else {
3110:src/keys.c    **** 			if (UState.intm) {
3111:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3112:src/keys.c    **** 					State2.window++;
3113:src/keys.c    **** 				return;
3114:src/keys.c    **** 			}
3115:src/keys.c    **** 			else
3116:src/keys.c    **** 				State2.window = 0;
3117:src/keys.c    **** 		}
3118:src/keys.c    **** 		set_smode(SDISP_SHOW);
3119:src/keys.c    **** 	}
3120:src/keys.c    **** }
ARM GAS  /tmp/ccvq0xdJ.s 			page 119


 2892              		.loc 1 3120 1 view .LVU822
 2893 000a 38BD     		pop	{r3, r4, r5, pc}
 2894              	.LVL231:
 2895              	.L311:
3096:src/keys.c    **** 		process_cmdline_set_lift();
 2896              		.loc 1 3096 3 is_stmt 1 view .LVU823
 2897 000c 0546     		mov	r5, r0
 2898 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2899              	.LVL232:
3098:src/keys.c    **** 		display();	
 2900              		.loc 1 3098 3 view .LVU824
3098:src/keys.c    **** 		display();	
 2901              		.loc 1 3098 22 is_stmt 0 view .LVU825
 2902 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2903 0014 6FF30413 		bfc	r3, #4, #1
 2904 0018 E375     		strb	r3, [r4, #23]
3099:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2905              		.loc 1 3099 3 is_stmt 1 view .LVU826
 2906 001a FFF7FEFF 		bl	display
 2907              	.LVL233:
3100:src/keys.c    **** 			if (UState.intm) {
 2908              		.loc 1 3100 3 view .LVU827
3101:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2909              		.loc 1 3101 8 is_stmt 0 view .LVU828
 2910 001e 1C4B     		ldr	r3, .L314+4
 2911 0020 1B68     		ldr	r3, [r3]
3100:src/keys.c    **** 			if (UState.intm) {
 2912              		.loc 1 3100 6 view .LVU829
 2913 0022 2C2D     		cmp	r5, #44
3101:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2914              		.loc 1 3101 8 view .LVU830
 2915 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
3100:src/keys.c    **** 			if (UState.intm) {
 2916              		.loc 1 3100 6 view .LVU831
 2917 0028 18D0     		beq	.L312
3110:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2918              		.loc 1 3110 4 is_stmt 1 view .LVU832
3110:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2919              		.loc 1 3110 7 is_stmt 0 view .LVU833
 2920 002a 13F00103 		ands	r3, r3, #1
 2921 002e 09D1     		bne	.L313
3116:src/keys.c    **** 		}
 2922              		.loc 1 3116 5 is_stmt 1 view .LVU834
3116:src/keys.c    **** 		}
 2923              		.loc 1 3116 19 is_stmt 0 view .LVU835
 2924 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2925 0032 63F3C502 		bfi	r2, r3, #3, #3
 2926 0036 2275     		strb	r2, [r4, #20]
 2927              	.L305:
3118:src/keys.c    **** 	}
 2928              		.loc 1 3118 3 is_stmt 1 view .LVU836
 2929              	.LVL234:
 2930              	.LBB413:
 2931              	.LBI413:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2932              		.loc 1 741 13 view .LVU837
 2933              	.LBB414:
ARM GAS  /tmp/ccvq0xdJ.s 			page 120


 742:src/keys.c    **** }
 2934              		.loc 1 742 2 view .LVU838
 742:src/keys.c    **** }
 2935              		.loc 1 742 15 is_stmt 0 view .LVU839
 2936 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2937 003a 013B     		subs	r3, r3, #1
 2938 003c 18BF     		it	ne
 2939 003e 0123     		movne	r3, #1
 2940 0040 6374     		strb	r3, [r4, #17]
 2941              	.LVL235:
 742:src/keys.c    **** }
 2942              		.loc 1 742 15 view .LVU840
 2943              	.LBE414:
 2944              	.LBE413:
 2945              		.loc 1 3120 1 view .LVU841
 2946 0042 38BD     		pop	{r3, r4, r5, pc}
 2947              	.LVL236:
 2948              	.L313:
3111:src/keys.c    **** 					State2.window++;
 2949              		.loc 1 3111 5 is_stmt 1 view .LVU842
3111:src/keys.c    **** 					State2.window++;
 2950              		.loc 1 3111 22 is_stmt 0 view .LVU843
 2951 0044 134A     		ldr	r2, .L314+8
3111:src/keys.c    **** 					State2.window++;
 2952              		.loc 1 3111 42 view .LVU844
 2953 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3111:src/keys.c    **** 					State2.window++;
 2954              		.loc 1 3111 8 view .LVU845
 2955 0048 1168     		ldr	r1, [r2]
3111:src/keys.c    **** 					State2.window++;
 2956              		.loc 1 3111 42 view .LVU846
 2957 004a C3F3C202 		ubfx	r2, r3, #3, #3
3111:src/keys.c    **** 					State2.window++;
 2958              		.loc 1 3111 8 view .LVU847
 2959 004e 8A42     		cmp	r2, r1
 2960 0050 DBDA     		bge	.L299
3112:src/keys.c    **** 				return;
 2961              		.loc 1 3112 6 is_stmt 1 view .LVU848
3112:src/keys.c    **** 				return;
 2962              		.loc 1 3112 19 is_stmt 0 view .LVU849
 2963 0052 0132     		adds	r2, r2, #1
 2964 0054 62F3C503 		bfi	r3, r2, #3, #3
 2965 0058 2375     		strb	r3, [r4, #20]
 2966              		.loc 1 3120 1 view .LVU850
 2967 005a 38BD     		pop	{r3, r4, r5, pc}
 2968              	.LVL237:
 2969              	.L312:
3101:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2970              		.loc 1 3101 4 is_stmt 1 view .LVU851
3101:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2971              		.loc 1 3101 7 is_stmt 0 view .LVU852
 2972 005c DB07     		lsls	r3, r3, #31
 2973 005e 0ED5     		bpl	.L303
 2974              	.LBB415:
 2975              	.LBI415:
3093:src/keys.c    **** 
 2976              		.loc 1 3093 13 is_stmt 1 view .LVU853
ARM GAS  /tmp/ccvq0xdJ.s 			page 121


 2977              	.LVL238:
 2978              	.LBB416:
3102:src/keys.c    **** 					State2.window--;
 2979              		.loc 1 3102 5 view .LVU854
3102:src/keys.c    **** 					State2.window--;
 2980              		.loc 1 3102 22 is_stmt 0 view .LVU855
 2981 0060 0C4B     		ldr	r3, .L314+8
3102:src/keys.c    **** 					State2.window--;
 2982              		.loc 1 3102 8 view .LVU856
 2983 0062 1B68     		ldr	r3, [r3]
 2984 0064 002B     		cmp	r3, #0
 2985 0066 D0DD     		ble	.L299
3102:src/keys.c    **** 					State2.window--;
 2986              		.loc 1 3102 43 view .LVU857
 2987 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3102:src/keys.c    **** 					State2.window--;
 2988              		.loc 1 3102 26 view .LVU858
 2989 006a 13F0380F 		tst	r3, #56
 2990 006e CCD0     		beq	.L299
3103:src/keys.c    **** 				return;
 2991              		.loc 1 3103 6 is_stmt 1 view .LVU859
3103:src/keys.c    **** 				return;
 2992              		.loc 1 3103 12 is_stmt 0 view .LVU860
 2993 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3103:src/keys.c    **** 				return;
 2994              		.loc 1 3103 19 view .LVU861
 2995 0074 0732     		adds	r2, r2, #7
 2996 0076 62F3C503 		bfi	r3, r2, #3, #3
 2997 007a 2375     		strb	r3, [r4, #20]
 2998              	.LBE416:
 2999              	.LBE415:
 3000              		.loc 1 3120 1 view .LVU862
 3001 007c 38BD     		pop	{r3, r4, r5, pc}
 3002              	.LVL239:
 3003              	.L303:
3107:src/keys.c    **** 		}
 3004              		.loc 1 3107 5 is_stmt 1 view .LVU863
3107:src/keys.c    **** 		}
 3005              		.loc 1 3107 21 is_stmt 0 view .LVU864
 3006 007e FFF7FEFF 		bl	is_dblmode
 3007              	.LVL240:
3107:src/keys.c    **** 		}
 3008              		.loc 1 3107 19 view .LVU865
 3009 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 3010 0084 60F3C503 		bfi	r3, r0, #3, #3
 3011 0088 2375     		strb	r3, [r4, #20]
 3012 008a D5E7     		b	.L305
 3013              	.L315:
 3014              		.align	2
 3015              	.L314:
 3016 008c 00000000 		.word	StateWhileOn
 3017 0090 00000000 		.word	main_ram
 3018 0094 00000000 		.word	IntMaxWindow
 3019              		.cfi_endproc
 3020              	.LFE58:
 3022              		.section	.text.arg_storcl,"ax",%progbits
 3023              		.align	1
ARM GAS  /tmp/ccvq0xdJ.s 			page 122


 3024              		.p2align 2,,3
 3025              		.syntax unified
 3026              		.thumb
 3027              		.thumb_func
 3028              		.fpu fpv4-sp-d16
 3030              	arg_storcl:
 3031              	.LVL241:
 3032              	.LFB39:
2019:src/keys.c    **** 	unsigned int b = CmdBase;
 3033              		.loc 1 2019 56 is_stmt 1 view -0
 3034              		.cfi_startproc
 3035              		@ args = 0, pretend = 0, frame = 0
 3036              		@ frame_needed = 0, uses_anonymous_args = 0
 3037              		@ link register save eliminated.
2020:src/keys.c    **** 
 3038              		.loc 1 2020 2 view .LVU867
2020:src/keys.c    **** 
 3039              		.loc 1 2020 19 is_stmt 0 view .LVU868
 3040 0000 0F4A     		ldr	r2, .L348
 3041 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3042              	.LVL242:
2022:src/keys.c    **** 		CmdBase += n;
 3043              		.loc 1 2022 2 is_stmt 1 view .LVU869
 3044              	.LBB425:
 3045              	.LBI425:
2010:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3046              		.loc 1 2010 12 view .LVU870
 3047              	.LBB426:
2015:src/keys.c    **** #endif
 3048              		.loc 1 2015 2 view .LVU871
2015:src/keys.c    **** #endif
 3049              		.loc 1 2015 41 is_stmt 0 view .LVU872
 3050 0004 032B     		cmp	r3, #3
 3051 0006 14D0     		beq	.L317
2015:src/keys.c    **** #endif
 3052              		.loc 1 2015 24 view .LVU873
 3053 0008 0A2B     		cmp	r3, #10
 3054 000a 12D0     		beq	.L317
 3055              	.LVL243:
 3056              	.LBB427:
 3057              	.LBI427:
2010:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3058              		.loc 1 2010 12 is_stmt 1 view .LVU874
 3059              	.LBB428:
2015:src/keys.c    **** #endif
 3060              		.loc 1 2015 41 is_stmt 0 view .LVU875
 3061 000c 19B1     		cbz	r1, .L318
2015:src/keys.c    **** #endif
 3062              		.loc 1 2015 51 view .LVU876
 3063 000e 152B     		cmp	r3, #21
 3064 0010 0FD0     		beq	.L317
2015:src/keys.c    **** #endif
 3065              		.loc 1 2015 70 view .LVU877
 3066 0012 1A2B     		cmp	r3, #26
 3067 0014 0DD0     		beq	.L317
 3068              	.L318:
 3069              	.LVL244:
ARM GAS  /tmp/ccvq0xdJ.s 			page 123


2015:src/keys.c    **** #endif
 3070              		.loc 1 2015 70 view .LVU878
 3071              	.LBE428:
 3072              	.LBE427:
 3073              	.LBE426:
 3074              	.LBE425:
2027:src/keys.c    **** 		b -= n;
 3075              		.loc 1 2027 2 is_stmt 1 view .LVU879
2027:src/keys.c    **** 		b -= n;
 3076              		.loc 1 2027 5 is_stmt 0 view .LVU880
 3077 0016 8342     		cmp	r3, r0
 3078 0018 09D3     		bcc	.L323
2028:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3079              		.loc 1 2028 3 is_stmt 1 view .LVU881
2028:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3080              		.loc 1 2028 5 is_stmt 0 view .LVU882
 3081 001a 1B1A     		subs	r3, r3, r0
 3082              	.LVL245:
2029:src/keys.c    **** 			CmdBase = b;
 3083              		.loc 1 2029 3 is_stmt 1 view .LVU883
 3084              	.LBB429:
 3085              	.LBI429:
2010:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3086              		.loc 1 2010 12 view .LVU884
 3087              	.LBB430:
2015:src/keys.c    **** #endif
 3088              		.loc 1 2015 2 view .LVU885
2015:src/keys.c    **** #endif
 3089              		.loc 1 2015 41 is_stmt 0 view .LVU886
 3090 001c 032B     		cmp	r3, #3
 3091 001e 0CD0     		beq	.L321
2015:src/keys.c    **** #endif
 3092              		.loc 1 2015 24 view .LVU887
 3093 0020 0A2B     		cmp	r3, #10
 3094 0022 0AD0     		beq	.L321
 3095              	.LVL246:
 3096              	.LBB431:
 3097              	.LBI431:
2010:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3098              		.loc 1 2010 12 is_stmt 1 view .LVU888
 3099              	.LBB432:
2015:src/keys.c    **** #endif
 3100              		.loc 1 2015 41 is_stmt 0 view .LVU889
 3101 0024 19B1     		cbz	r1, .L323
2015:src/keys.c    **** #endif
 3102              		.loc 1 2015 51 view .LVU890
 3103 0026 152B     		cmp	r3, #21
 3104 0028 07D0     		beq	.L321
2015:src/keys.c    **** #endif
 3105              		.loc 1 2015 70 view .LVU891
 3106 002a 1A2B     		cmp	r3, #26
 3107 002c 05D0     		beq	.L321
 3108              	.LVL247:
 3109              	.L323:
2015:src/keys.c    **** #endif
 3110              		.loc 1 2015 70 view .LVU892
 3111              	.LBE432:
ARM GAS  /tmp/ccvq0xdJ.s 			page 124


 3112              	.LBE431:
 3113              	.LBE430:
 3114              	.LBE429:
2034:src/keys.c    **** }
 3115              		.loc 1 2034 9 view .LVU893
 3116 002e 0020     		movs	r0, #0
 3117              	.LVL248:
2035:src/keys.c    **** 
 3118              		.loc 1 2035 1 view .LVU894
 3119 0030 7047     		bx	lr
 3120              	.LVL249:
 3121              	.L317:
2023:src/keys.c    **** 		return 1;
 3122              		.loc 1 2023 3 is_stmt 1 view .LVU895
2023:src/keys.c    **** 		return 1;
 3123              		.loc 1 2023 11 is_stmt 0 view .LVU896
 3124 0032 1844     		add	r0, r0, r3
 3125              	.LVL250:
2023:src/keys.c    **** 		return 1;
 3126              		.loc 1 2023 11 view .LVU897
 3127 0034 D077     		strb	r0, [r2, #31]
2024:src/keys.c    **** 	}
 3128              		.loc 1 2024 3 is_stmt 1 view .LVU898
2024:src/keys.c    **** 	}
 3129              		.loc 1 2024 10 is_stmt 0 view .LVU899
 3130 0036 0120     		movs	r0, #1
 3131 0038 7047     		bx	lr
 3132              	.LVL251:
 3133              	.L321:
2030:src/keys.c    **** 			return 1;
 3134              		.loc 1 2030 4 is_stmt 1 view .LVU900
2030:src/keys.c    **** 			return 1;
 3135              		.loc 1 2030 12 is_stmt 0 view .LVU901
 3136 003a D377     		strb	r3, [r2, #31]
2031:src/keys.c    **** 		}
 3137              		.loc 1 2031 4 is_stmt 1 view .LVU902
2031:src/keys.c    **** 		}
 3138              		.loc 1 2031 11 is_stmt 0 view .LVU903
 3139 003c 0120     		movs	r0, #1
 3140              	.LVL252:
2031:src/keys.c    **** 		}
 3141              		.loc 1 2031 11 view .LVU904
 3142 003e 7047     		bx	lr
 3143              	.L349:
 3144              		.align	2
 3145              	.L348:
 3146 0040 00000000 		.word	StateWhileOn
 3147              		.cfi_endproc
 3148              	.LFE39:
 3150              		.section	.text.process_arg,"ax",%progbits
 3151              		.align	1
 3152              		.p2align 2,,3
 3153              		.syntax unified
 3154              		.thumb
 3155              		.thumb_func
 3156              		.fpu fpv4-sp-d16
 3158              	process_arg:
ARM GAS  /tmp/ccvq0xdJ.s 			page 125


 3159              	.LVL253:
 3160              	.LFB42:
2069:src/keys.c    **** 	unsigned int base = CmdBase;
 3161              		.loc 1 2069 41 is_stmt 1 view -0
 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 8
 3164              		@ frame_needed = 0, uses_anonymous_args = 0
2070:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3165              		.loc 1 2070 2 view .LVU906
2069:src/keys.c    **** 	unsigned int base = CmdBase;
 3166              		.loc 1 2069 41 is_stmt 0 view .LVU907
 3167 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3168              		.cfi_def_cfa_offset 36
 3169              		.cfi_offset 4, -36
 3170              		.cfi_offset 5, -32
 3171              		.cfi_offset 6, -28
 3172              		.cfi_offset 7, -24
 3173              		.cfi_offset 8, -20
 3174              		.cfi_offset 9, -16
 3175              		.cfi_offset 10, -12
 3176              		.cfi_offset 11, -8
 3177              		.cfi_offset 14, -4
2070:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3178              		.loc 1 2070 22 view .LVU908
 3179 0004 C94C     		ldr	r4, .L494
2072:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3180              		.loc 1 2072 31 view .LVU909
 3181 0006 DFF834A3 		ldr	r10, .L494+16
2070:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3182              		.loc 1 2070 22 view .LVU910
 3183 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3184              	.LBB454:
 3185              	.LBB455:
 3186              	.LBB456:
 3187              	.LBB457:
 143:src/keys.c    **** }
 3188              		.loc 1 143 23 view .LVU911
 3189 000c C84A     		ldr	r2, .L494+4
 3190              	.LBE457:
 3191              	.LBE456:
 234:src/keys.c    **** }
 3192              		.loc 1 234 28 view .LVU912
 3193 000e C94E     		ldr	r6, .L494+8
 3194              	.LBB460:
 3195              	.LBB458:
 143:src/keys.c    **** }
 3196              		.loc 1 143 23 view .LVU913
 3197 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3198              	.LBE458:
 3199              	.LBE460:
 3200              	.LBE455:
 3201              	.LBE454:
2073:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3202              		.loc 1 2073 20 view .LVU914
 3203 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3204              	.LBB464:
 3205              	.LBB462:
ARM GAS  /tmp/ccvq0xdJ.s 			page 126


 234:src/keys.c    **** }
 3206              		.loc 1 234 28 view .LVU915
 3207 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3208              	.LBE462:
 3209              	.LBE464:
2072:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3210              		.loc 1 2072 31 view .LVU916
 3211 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2069:src/keys.c    **** 	unsigned int base = CmdBase;
 3212              		.loc 1 2069 41 view .LVU917
 3213 001c 83B0     		sub	sp, sp, #12
 3214              		.cfi_def_cfa_offset 48
2072:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3215              		.loc 1 2072 31 view .LVU918
 3216 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2070:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3217              		.loc 1 2070 15 view .LVU919
 3218 0020 0095     		str	r5, [sp]
 3219              	.LVL254:
2071:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3220              		.loc 1 2071 2 is_stmt 1 view .LVU920
2072:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3221              		.loc 1 2072 40 is_stmt 0 view .LVU921
 3222 0022 4A07     		lsls	r2, r1, #29
 3223 0024 58BF     		it	pl
 3224 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2073:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3225              		.loc 1 2073 20 view .LVU922
 3226 002a 0193     		str	r3, [sp, #4]
2072:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3227              		.loc 1 2072 40 view .LVU923
 3228 002c 54BF     		ite	pl
 3229 002e 4FEAD878 		lsrpl	r8, r8, #31
 3230 0032 4FF00108 		movmi	r8, #1
2069:src/keys.c    **** 	unsigned int base = CmdBase;
 3231              		.loc 1 2069 41 view .LVU924
 3232 0036 0746     		mov	r7, r0
 3233              	.LVL255:
 3234              	.LBB465:
 3235              	.LBI454:
 210:src/keys.c    **** {
 3236              		.loc 1 210 14 is_stmt 1 view .LVU925
 3237              	.LBB463:
 212:src/keys.c    ****     // K00 - K05
 3238              		.loc 1 212 3 view .LVU926
 234:src/keys.c    **** }
 3239              		.loc 1 234 3 view .LVU927
 3240              	.LBB461:
 3241              	.LBI456:
 131:src/keys.c    **** {
 3242              		.loc 1 131 12 view .LVU928
 3243              	.LBB459:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3244              		.loc 1 133 2 view .LVU929
 143:src/keys.c    **** }
 3245              		.loc 1 143 2 view .LVU930
 143:src/keys.c    **** }
ARM GAS  /tmp/ccvq0xdJ.s 			page 127


 3246              		.loc 1 143 2 is_stmt 0 view .LVU931
 3247              	.LBE459:
 3248              	.LBE461:
 234:src/keys.c    **** }
 3249              		.loc 1 234 10 view .LVU932
 3250 0038 4E46     		mov	r6, r9
 3251              	.LVL256:
 234:src/keys.c    **** }
 3252              		.loc 1 234 10 view .LVU933
 3253              	.LBE463:
 3254              	.LBE465:
2072:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3255              		.loc 1 2072 2 is_stmt 1 view .LVU934
2073:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3256              		.loc 1 2073 2 view .LVU935
2074:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3257              		.loc 1 2074 2 view .LVU936
 3258              	.LBB466:
 3259              	.LBI466:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3260              		.loc 1 114 13 view .LVU937
 3261              	.LBE466:
 115:src/keys.c    **** }
 3262              		.loc 1 115 2 view .LVU938
 3263              	.LBB479:
 3264              	.LBB467:
 3265              	.LBI467:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3266              		.loc 1 104 20 view .LVU939
 3267              	.LBB468:
 105:src/keys.c    **** 	State2.shifts = shift;
 3268              		.loc 1 105 2 view .LVU940
 3269              	.LBB469:
 3270              	.LBI469:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3271              		.loc 1 96 13 view .LVU941
 3272              	.LBB470:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3273              		.loc 1 97 2 view .LVU942
 3274              	.LBE470:
 3275              	.LBE469:
 3276              	.LBE468:
 3277              	.LBE467:
 3278              	.LBE479:
2072:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3279              		.loc 1 2072 31 is_stmt 0 view .LVU943
 3280 003a 4FEA051B 		lsl	fp, r5, #4
 3281              	.LBB480:
 3282              	.LBB476:
 3283              	.LBB473:
 3284              	.LBB472:
 3285              	.LBB471:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3286              		.loc 1 97 18 view .LVU944
 3287 003e FFF7FEFF 		bl	shift_down
 3288              	.LVL257:
  98:src/keys.c    **** }
ARM GAS  /tmp/ccvq0xdJ.s 			page 128


 3289              		.loc 1 98 2 is_stmt 1 view .LVU945
  98:src/keys.c    **** }
 3290              		.loc 1 98 52 is_stmt 0 view .LVU946
 3291 0042 00B9     		cbnz	r0, .L352
 3292 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3293              	.LVL258:
 3294              	.L352:
  98:src/keys.c    **** }
 3295              		.loc 1 98 52 view .LVU947
 3296              	.LBE471:
 3297              	.LBE472:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3298              		.loc 1 106 2 is_stmt 1 view .LVU948
 3299              	.LBE473:
 3300              	.LBE476:
 3301              	.LBE480:
2075:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3302              		.loc 1 2075 38 is_stmt 0 view .LVU949
 3303 0046 D344     		add	fp, fp, r10
 3304              	.LBB481:
 3305              	.LBB477:
 3306              	.LBB474:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3307              		.loc 1 106 16 view .LVU950
 3308 0048 4FF0000E 		mov	lr, #0
 3309              	.LBE474:
 3310              	.LBE477:
 3311              	.LBE481:
2075:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3312              		.loc 1 2075 38 view .LVU951
 3313 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3314              	.LBB482:
 3315              	.LBB478:
 3316              	.LBB475:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3317              		.loc 1 106 16 view .LVU952
 3318 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3319              		.loc 1 108 2 is_stmt 1 view .LVU953
 3320              	.LVL259:
 108:src/keys.c    **** }
 3321              		.loc 1 108 2 is_stmt 0 view .LVU954
 3322              	.LBE475:
 3323              	.LBE478:
 3324              	.LBE482:
2075:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3325              		.loc 1 2075 2 is_stmt 1 view .LVU955
2075:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3326              		.loc 1 2075 61 is_stmt 0 view .LVU956
 3327 0054 8B06     		lsls	r3, r1, #26
 3328 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3329 005a 19D5     		bpl	.L353
2075:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3330              		.loc 1 2075 61 discriminator 1 view .LVU957
 3331 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3332 005e 11F0C00F 		tst	r1, #192
 3333 0062 1FD0     		beq	.L482
ARM GAS  /tmp/ccvq0xdJ.s 			page 129


 3334              	.LVL260:
2079:src/keys.c    **** 	if (base >= NUM_RARG) {
 3335              		.loc 1 2079 2 is_stmt 1 view .LVU958
2080:src/keys.c    **** 		reset_arg();
 3336              		.loc 1 2080 5 is_stmt 0 view .LVU959
 3337 0064 962D     		cmp	r5, #150
2079:src/keys.c    **** 	if (base >= NUM_RARG) {
 3338              		.loc 1 2079 4 view .LVU960
 3339 0066 29F08006 		bic	r6, r9, #128
 3340              	.LVL261:
2080:src/keys.c    **** 		reset_arg();
 3341              		.loc 1 2080 2 is_stmt 1 view .LVU961
2080:src/keys.c    **** 		reset_arg();
 3342              		.loc 1 2080 5 is_stmt 0 view .LVU962
 3343 006a 15D8     		bhi	.L382
2075:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3344              		.loc 1 2075 61 view .LVU963
 3345 006c F446     		mov	ip, lr
 3346              	.L362:
2085:src/keys.c    **** 	  switch (n) {
 3347              		.loc 1 2085 35 discriminator 1 view .LVU964
 3348 006e 6169     		ldr	r1, [r4, #20]
 3349 0070 11F4103F 		tst	r1, #147456
 3350 0074 2ED1     		bne	.L364
2086:src/keys.c    **** 	  case regX_idx:
 3351              		.loc 1 2086 4 is_stmt 1 view .LVU965
 3352 0076 672E     		cmp	r6, #103
 3353 0078 2CD8     		bhi	.L364
2086:src/keys.c    **** 	  case regX_idx:
 3354              		.loc 1 2086 4 is_stmt 0 view .LVU966
 3355 007a 632E     		cmp	r6, #99
 3356 007c 24D9     		bls	.L424
 3357 007e 653E     		subs	r6, r6, #101
 3358              	.LVL262:
2086:src/keys.c    **** 	  case regX_idx:
 3359              		.loc 1 2086 4 view .LVU967
 3360 0080 022E     		cmp	r6, #2
 3361 0082 00F26082 		bhi	.L367
 3362 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3363              	.L369:
 3364 008a 1101     		.2byte	(.L371-.L369)/2
 3365 008c 0B01     		.2byte	(.L370-.L369)/2
 3366 008e 1301     		.2byte	(.L368-.L369)/2
 3367              	.LVL263:
 3368              		.p2align 1
 3369              	.L353:
2079:src/keys.c    **** 	if (base >= NUM_RARG) {
 3370              		.loc 1 2079 2 is_stmt 1 view .LVU968
2080:src/keys.c    **** 		reset_arg();
 3371              		.loc 1 2080 5 is_stmt 0 view .LVU969
 3372 0090 962D     		cmp	r5, #150
2079:src/keys.c    **** 	if (base >= NUM_RARG) {
 3373              		.loc 1 2079 4 view .LVU970
 3374 0092 29F08006 		bic	r6, r9, #128
 3375              	.LVL264:
2080:src/keys.c    **** 		reset_arg();
 3376              		.loc 1 2080 2 is_stmt 1 view .LVU971
ARM GAS  /tmp/ccvq0xdJ.s 			page 130


2080:src/keys.c    **** 		reset_arg();
 3377              		.loc 1 2080 5 is_stmt 0 view .LVU972
 3378 0096 EAD9     		bls	.L362
 3379              	.LVL265:
 3380              	.L382:
2335:src/keys.c    **** 	default:
 3381              		.loc 1 2335 3 is_stmt 1 view .LVU973
 3382 0098 FFF7FEFF 		bl	reset_arg
 3383              	.LVL266:
 3384              	.L475:
2339:src/keys.c    **** }
 3385              		.loc 1 2339 9 is_stmt 0 view .LVU974
 3386 009c 3320     		movs	r0, #51
 3387              	.L350:
2340:src/keys.c    **** 
 3388              		.loc 1 2340 1 view .LVU975
 3389 009e 03B0     		add	sp, sp, #12
 3390              		.cfi_remember_state
 3391              		.cfi_def_cfa_offset 36
 3392              		@ sp needed
 3393 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3394              	.LVL267:
 3395              	.L482:
 3396              		.cfi_restore_state
2076:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3397              		.loc 1 2076 2 is_stmt 1 view .LVU976
2076:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3398              		.loc 1 2076 35 is_stmt 0 view .LVU977
 3399 00a4 292F     		cmp	r7, #41
 3400 00a6 00F0C080 		beq	.L355
2077:src/keys.c    **** 
 3401              		.loc 1 2077 11 view .LVU978
 3402 00aa 0128     		cmp	r0, #1
 3403 00ac 00F0D180 		beq	.L356
2077:src/keys.c    **** 
 3404              		.loc 1 2077 32 discriminator 3 view .LVU979
 3405 00b0 B9F1090F 		cmp	r9, #9
 3406 00b4 00F2B680 		bhi	.L357
 3407              	.LVL268:
2079:src/keys.c    **** 	if (base >= NUM_RARG) {
 3408              		.loc 1 2079 2 is_stmt 1 view .LVU980
2080:src/keys.c    **** 		reset_arg();
 3409              		.loc 1 2080 2 view .LVU981
2080:src/keys.c    **** 		reset_arg();
 3410              		.loc 1 2080 5 is_stmt 0 view .LVU982
 3411 00b8 962D     		cmp	r5, #150
 3412 00ba EDD8     		bhi	.L382
2085:src/keys.c    **** 	  switch (n) {
 3413              		.loc 1 2085 35 view .LVU983
 3414 00bc 6169     		ldr	r1, [r4, #20]
 3415 00be 11F4103F 		tst	r1, #147456
2075:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3416              		.loc 1 2075 61 view .LVU984
 3417 00c2 4FF0010C 		mov	ip, #1
2085:src/keys.c    **** 	  switch (n) {
 3418              		.loc 1 2085 35 view .LVU985
 3419 00c6 05D1     		bne	.L364
ARM GAS  /tmp/ccvq0xdJ.s 			page 131


 3420              	.L424:
2086:src/keys.c    **** 	  case regX_idx:
 3421              		.loc 1 2086 4 view .LVU986
 3422 00c8 16B1     		cbz	r6, .L366
 3423 00ca 721F     		subs	r2, r6, #5
 3424 00cc 042A     		cmp	r2, #4
 3425 00ce 01D8     		bhi	.L364
 3426              	.L366:
2101:src/keys.c    **** 	  }
 3427              		.loc 1 2101 6 is_stmt 1 view .LVU987
2101:src/keys.c    **** 	  }
 3428              		.loc 1 2101 13 is_stmt 0 view .LVU988
 3429 00d0 3046     		mov	r0, r6
 3430              	.LVL269:
2101:src/keys.c    **** 	  }
 3431              		.loc 1 2101 13 view .LVU989
 3432 00d2 E6E0     		b	.L476
 3433              	.LVL270:
 3434              	.L364:
2108:src/keys.c    **** 		// row column shorthand addressing
 3435              		.loc 1 2108 2 is_stmt 1 view .LVU990
2114:src/keys.c    **** 		switch ((int)c) {
 3436              		.loc 1 2114 2 view .LVU991
2114:src/keys.c    **** 		switch ((int)c) {
 3437              		.loc 1 2114 5 is_stmt 0 view .LVU992
 3438 00d4 4D2D     		cmp	r5, #77
 3439 00d6 00F0B180 		beq	.L483
2114:src/keys.c    **** 		switch ((int)c) {
 3440              		.loc 1 2114 23 discriminator 1 view .LVU993
 3441 00da 05F16C02 		add	r2, r5, #108
 3442 00de D2B2     		uxtb	r2, r2
 3443 00e0 012A     		cmp	r2, #1
 3444 00e2 61D9     		bls	.L484
 3445              	.LVL271:
 3446              	.L373:
2145:src/keys.c    **** #else
 3447              		.loc 1 2145 3 is_stmt 1 view .LVU994
2145:src/keys.c    **** #else
 3448              		.loc 1 2145 11 is_stmt 0 view .LVU995
 3449 00e4 E577     		strb	r5, [r4, #31]
2168:src/keys.c    **** 	case K_F:
 3450              		.loc 1 2168 2 is_stmt 1 view .LVU996
 3451 00e6 2D2F     		cmp	r7, #45
 3452 00e8 D8D8     		bhi	.L475
 3453 00ea 01A3     		adr	r3, .L377
 3454 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3455              		.p2align 2
 3456              	.L377:
 3457 00f0 C1010000 		.word	.L394+1
 3458 00f4 C1010000 		.word	.L394+1
 3459 00f8 C1010000 		.word	.L394+1
 3460 00fc C1010000 		.word	.L394+1
 3461 0100 9D000000 		.word	.L475+1
 3462 0104 9D000000 		.word	.L475+1
 3463 0108 9D000000 		.word	.L475+1
 3464 010c 9D000000 		.word	.L475+1
 3465 0110 C1010000 		.word	.L394+1
ARM GAS  /tmp/ccvq0xdJ.s 			page 132


 3466 0114 C1010000 		.word	.L394+1
 3467 0118 C1010000 		.word	.L394+1
 3468 011c C1010000 		.word	.L394+1
 3469 0120 45040000 		.word	.L393+1
 3470 0124 9D000000 		.word	.L475+1
 3471 0128 9D000000 		.word	.L475+1
 3472 012c 9D000000 		.word	.L475+1
 3473 0130 C7020000 		.word	.L392+1
 3474 0134 9D000000 		.word	.L475+1
 3475 0138 19020000 		.word	.L391+1
 3476 013c 9D000000 		.word	.L475+1
 3477 0140 9D000000 		.word	.L475+1
 3478 0144 9D000000 		.word	.L475+1
 3479 0148 F3020000 		.word	.L390+1
 3480 014c 9D000000 		.word	.L475+1
 3481 0150 FF020000 		.word	.L389+1
 3482 0154 0B030000 		.word	.L388+1
 3483 0158 9D000000 		.word	.L475+1
 3484 015c 9D000000 		.word	.L475+1
 3485 0160 81020000 		.word	.L387+1
 3486 0164 9D000000 		.word	.L475+1
 3487 0168 9D000000 		.word	.L475+1
 3488 016c 1F030000 		.word	.L386+1
 3489 0170 4D040000 		.word	.L385+1
 3490 0174 41030000 		.word	.L384+1
 3491 0178 4D030000 		.word	.L383+1
 3492 017c 9D000000 		.word	.L475+1
 3493 0180 99000000 		.word	.L382+1
 3494 0184 9D000000 		.word	.L475+1
 3495 0188 67030000 		.word	.L381+1
 3496 018c 9D000000 		.word	.L475+1
 3497 0190 AD030000 		.word	.L380+1
 3498 0194 CD030000 		.word	.L379+1
 3499 0198 9D000000 		.word	.L475+1
 3500 019c 9D000000 		.word	.L475+1
 3501 01a0 ED030000 		.word	.L378+1
 3502 01a4 25040000 		.word	.L376+1
 3503              	.LVL272:
 3504              		.p2align 1
 3505              	.L484:
2115:src/keys.c    **** 		case K_UP:	// up arrow
 3506              		.loc 1 2115 3 view .LVU997
 3507 01a8 122F     		cmp	r7, #18
 3508 01aa 2FD0     		beq	.L420
 3509 01ac 182F     		cmp	r7, #24
 3510 01ae 01D0     		beq	.L421
 3511 01b0 012F     		cmp	r7, #1
 3512 01b2 97D1     		bne	.L373
 3513              	.L421:
2131:src/keys.c    **** 		    base = RARG_SIG0;
 3514              		.loc 1 2131 5 view .LVU998
2135:src/keys.c    **** 		    base = RARG_FIX;
 3515              		.loc 1 2135 5 view .LVU999
2135:src/keys.c    **** 		    base = RARG_FIX;
 3516              		.loc 1 2135 8 is_stmt 0 view .LVU1000
 3517 01b4 942D     		cmp	r5, #148
 3518 01b6 7DD1     		bne	.L485
ARM GAS  /tmp/ccvq0xdJ.s 			page 133


 3519 01b8 4D23     		movs	r3, #77
 3520 01ba 0093     		str	r3, [sp]
 3521              	.LVL273:
2136:src/keys.c    **** 		    break;
 3522              		.loc 1 2136 12 view .LVU1001
 3523 01bc 1D46     		mov	r5, r3
 3524 01be 91E7     		b	.L373
 3525              	.LVL274:
 3526              	.L394:
2223:src/keys.c    **** 			return arg_eval(n);
 3527              		.loc 1 2223 4 is_stmt 1 view .LVU1002
2223:src/keys.c    **** 			return arg_eval(n);
 3528              		.loc 1 2223 8 is_stmt 0 view .LVU1003
 3529 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2223:src/keys.c    **** 			return arg_eval(n);
 3530              		.loc 1 2223 7 view .LVU1004
 3531 01c2 5306     		lsls	r3, r2, #25
 3532 01c4 6AD4     		bmi	.L409
2223:src/keys.c    **** 			return arg_eval(n);
 3533              		.loc 1 2223 19 discriminator 1 view .LVU1005
 3534 01c6 B8F1000F 		cmp	r8, #0
 3535 01ca 67D1     		bne	.L409
2225:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3536              		.loc 1 2225 3 is_stmt 1 view .LVU1006
2225:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3537              		.loc 1 2225 6 is_stmt 0 view .LVU1007
 3538 01cc 032F     		cmp	r7, #3
 3539 01ce 3FF665AF 		bhi	.L475
2226:src/keys.c    **** 		break;
 3540              		.loc 1 2226 4 is_stmt 1 view .LVU1008
 3541              	.LVL275:
 3542              	.LBB483:
 3543              	.LBI483:
1996:src/keys.c    **** 	const unsigned int b = CmdBase;
 3544              		.loc 1 1996 12 view .LVU1009
 3545              	.LBB484:
1997:src/keys.c    **** 
 3546              		.loc 1 1997 2 view .LVU1010
1999:src/keys.c    **** 	{
 3547              		.loc 1 1999 2 view .LVU1011
1999:src/keys.c    **** 	{
 3548              		.loc 1 1999 16 is_stmt 0 view .LVU1012
 3549 01d2 009B     		ldr	r3, [sp]
 3550 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3551 01d8 1801     		lsls	r0, r3, #4
 3552 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1999:src/keys.c    **** 	{
 3553              		.loc 1 1999 5 view .LVU1013
 3554 01dc 8D06     		lsls	r5, r1, #26
 3555 01de 05D4     		bmi	.L400
1999:src/keys.c    **** 	{
 3556              		.loc 1 1999 40 view .LVU1014
 3557 01e0 A3F15109 		sub	r9, r3, #81
1999:src/keys.c    **** 	{
 3558              		.loc 1 1999 23 view .LVU1015
 3559 01e4 B9F10A0F 		cmp	r9, #10
 3560 01e8 3FF658AF 		bhi	.L475
ARM GAS  /tmp/ccvq0xdJ.s 			page 134


 3561              	.L400:
2001:src/keys.c    **** 			return STATE_UNFINISHED;
 3562              		.loc 1 2001 3 is_stmt 1 view .LVU1016
2001:src/keys.c    **** 			return STATE_UNFINISHED;
 3563              		.loc 1 2001 6 is_stmt 0 view .LVU1017
 3564 01ec 1106     		lsls	r1, r2, #24
 3565 01ee 3FF555AF 		bmi	.L475
2001:src/keys.c    **** 			return STATE_UNFINISHED;
 3566              		.loc 1 2001 18 view .LVU1018
 3567 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3568 01f4 002A     		cmp	r2, #0
 3569 01f6 7FF451AF 		bne	.L475
2003:src/keys.c    **** 			return STATE_UNFINISHED;
 3570              		.loc 1 2003 3 is_stmt 1 view .LVU1019
2003:src/keys.c    **** 			return STATE_UNFINISHED;
 3571              		.loc 1 2003 17 is_stmt 0 view .LVU1020
 3572 01fa 0AEB0003 		add	r3, r10, r0
2003:src/keys.c    **** 			return STATE_UNFINISHED;
 3573              		.loc 1 2003 6 view .LVU1021
 3574 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3575 0200 632B     		cmp	r3, #99
 3576 0202 7FF64BAF 		bls	.L475
2005:src/keys.c    **** 	}
 3577              		.loc 1 2005 3 is_stmt 1 view .LVU1022
2005:src/keys.c    **** 	}
 3578              		.loc 1 2005 10 is_stmt 0 view .LVU1023
 3579 0206 07F16400 		add	r0, r7, #100
 3580 020a 34E0     		b	.L477
 3581              	.LVL276:
 3582              	.L420:
2005:src/keys.c    **** 	}
 3583              		.loc 1 2005 10 view .LVU1024
 3584              	.LBE484:
 3585              	.LBE483:
2117:src/keys.c    **** 		    base = RARG_SIG;
 3586              		.loc 1 2117 5 is_stmt 1 view .LVU1025
2121:src/keys.c    **** 		    base = RARG_SIG0;
 3587              		.loc 1 2121 5 view .LVU1026
2121:src/keys.c    **** 		    base = RARG_SIG0;
 3588              		.loc 1 2121 8 is_stmt 0 view .LVU1027
 3589 020c 942D     		cmp	r5, #148
 3590 020e 01D0     		beq	.L470
2125:src/keys.c    **** 		    base = RARG_FIX;
 3591              		.loc 1 2125 5 is_stmt 1 view .LVU1028
2125:src/keys.c    **** 		    base = RARG_FIX;
 3592              		.loc 1 2125 8 is_stmt 0 view .LVU1029
 3593 0210 952D     		cmp	r5, #149
 3594 0212 56D0     		beq	.L486
 3595              	.L470:
2145:src/keys.c    **** #else
 3596              		.loc 1 2145 3 is_stmt 1 view .LVU1030
2145:src/keys.c    **** #else
 3597              		.loc 1 2145 11 is_stmt 0 view .LVU1031
 3598 0214 9523     		movs	r3, #149
 3599              	.LVL277:
 3600              	.L474:
2145:src/keys.c    **** #else
ARM GAS  /tmp/ccvq0xdJ.s 			page 135


 3601              		.loc 1 2145 11 view .LVU1032
 3602 0216 E377     		strb	r3, [r4, #31]
2168:src/keys.c    **** 	case K_F:
 3603              		.loc 1 2168 2 is_stmt 1 view .LVU1033
 3604              	.L391:
2285:src/keys.c    **** 		break;
 3605              		.loc 1 2285 3 view .LVU1034
 3606 0218 0021     		movs	r1, #0
 3607 021a 0620     		movs	r0, #6
 3608              	.LVL278:
2285:src/keys.c    **** 		break;
 3609              		.loc 1 2285 3 is_stmt 0 view .LVU1035
 3610 021c FFF7FEFF 		bl	arg_storcl
 3611              	.LVL279:
2286:src/keys.c    **** 
 3612              		.loc 1 2286 3 is_stmt 1 view .LVU1036
2339:src/keys.c    **** }
 3613              		.loc 1 2339 9 is_stmt 0 view .LVU1037
 3614 0220 3320     		movs	r0, #51
2286:src/keys.c    **** 
 3615              		.loc 1 2286 3 view .LVU1038
 3616 0222 3CE7     		b	.L350
 3617              	.LVL280:
 3618              	.L357:
2077:src/keys.c    **** 
 3619              		.loc 1 2077 42 discriminator 4 view .LVU1039
 3620 0224 19F0800F 		tst	r9, #128
 3621 0228 13D0     		beq	.L356
 3622              	.L355:
 3623              	.LVL281:
2079:src/keys.c    **** 	if (base >= NUM_RARG) {
 3624              		.loc 1 2079 2 is_stmt 1 view .LVU1040
2080:src/keys.c    **** 		reset_arg();
 3625              		.loc 1 2080 5 is_stmt 0 view .LVU1041
 3626 022a 962D     		cmp	r5, #150
2079:src/keys.c    **** 	if (base >= NUM_RARG) {
 3627              		.loc 1 2079 4 view .LVU1042
 3628 022c 29F08006 		bic	r6, r9, #128
 3629              	.LVL282:
2080:src/keys.c    **** 		reset_arg();
 3630              		.loc 1 2080 2 is_stmt 1 view .LVU1043
2075:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3631              		.loc 1 2075 61 is_stmt 0 view .LVU1044
 3632 0230 98BF     		it	ls
 3633 0232 4FF0010C 		movls	ip, #1
2080:src/keys.c    **** 		reset_arg();
 3634              		.loc 1 2080 5 view .LVU1045
 3635 0236 7FF61AAF 		bls	.L362
 3636 023a 2DE7     		b	.L382
 3637              	.L483:
2115:src/keys.c    **** 		case K_UP:	// up arrow
 3638              		.loc 1 2115 3 is_stmt 1 view .LVU1046
 3639 023c 122F     		cmp	r7, #18
 3640 023e 00F00B81 		beq	.L432
 3641 0242 182F     		cmp	r7, #24
 3642 0244 02D0     		beq	.L434
 3643 0246 012F     		cmp	r7, #1
ARM GAS  /tmp/ccvq0xdJ.s 			page 136


 3644 0248 7FF44CAF 		bne	.L373
 3645              	.L434:
 3646 024c 9525     		movs	r5, #149
 3647              	.LVL283:
2132:src/keys.c    **** 		    break;
 3648              		.loc 1 2132 12 is_stmt 0 view .LVU1047
 3649 024e 0095     		str	r5, [sp]
 3650 0250 48E7     		b	.L373
 3651              	.LVL284:
 3652              	.L356:
2079:src/keys.c    **** 	if (base >= NUM_RARG) {
 3653              		.loc 1 2079 2 is_stmt 1 view .LVU1048
2080:src/keys.c    **** 		reset_arg();
 3654              		.loc 1 2080 2 view .LVU1049
2080:src/keys.c    **** 		reset_arg();
 3655              		.loc 1 2080 5 is_stmt 0 view .LVU1050
 3656 0252 962D     		cmp	r5, #150
 3657 0254 3FF620AF 		bhi	.L382
2108:src/keys.c    **** 		// row column shorthand addressing
 3658              		.loc 1 2108 2 is_stmt 1 view .LVU1051
2110:src/keys.c    **** 
 3659              		.loc 1 2110 3 view .LVU1052
 3660              	.LVL285:
 3661              	.LBB485:
 3662              	.LBI485:
 179:src/keys.c    **** {
 3663              		.loc 1 179 5 view .LVU1053
 3664              	.LBB486:
 181:src/keys.c    **** }
 3665              		.loc 1 181 2 view .LVU1054
 181:src/keys.c    **** }
 3666              		.loc 1 181 18 is_stmt 0 view .LVU1055
 3667 0258 374B     		ldr	r3, .L494+12
 3668 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3669              		.loc 1 181 24 view .LVU1056
 3670 025e 03F0FC00 		and	r0, r3, #252
 3671              	.LVL286:
 181:src/keys.c    **** }
 3672              		.loc 1 181 24 view .LVU1057
 3673 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3674              		.loc 1 181 18 view .LVU1058
 3675 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3676              		.loc 1 181 24 view .LVU1059
 3677 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3678              		.loc 1 181 33 view .LVU1060
 3679 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3680              		.loc 1 181 12 view .LVU1061
 3681 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3682              		.loc 1 181 33 view .LVU1062
 3683 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3684              	.LBE486:
ARM GAS  /tmp/ccvq0xdJ.s 			page 137


 3685              	.LBE485:
2110:src/keys.c    **** 
 3686              		.loc 1 2110 10 view .LVU1063
 3687 0274 3844     		add	r0, r0, r7
 3688              	.LVL287:
 3689              	.L477:
2340:src/keys.c    **** 
 3690              		.loc 1 2340 1 view .LVU1064
 3691 0276 03B0     		add	sp, sp, #12
 3692              		.cfi_remember_state
 3693              		.cfi_def_cfa_offset 36
 3694              		@ sp needed
 3695 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3696              		.cfi_restore 14
 3697              		.cfi_restore 11
 3698              		.cfi_restore 10
 3699              		.cfi_restore 9
 3700              		.cfi_restore 8
 3701              		.cfi_restore 7
 3702              		.cfi_restore 6
 3703              		.cfi_restore 5
 3704              		.cfi_restore 4
 3705              		.cfi_def_cfa_offset 0
 3706              	.LVL288:
2110:src/keys.c    **** 
 3707              		.loc 1 2110 10 view .LVU1065
 3708 027c FFF7FEBF 		b	arg_eval
 3709              	.LVL289:
 3710              	.L387:
 3711              		.cfi_restore_state
2245:src/keys.c    **** 			return arg_eval(n);
 3712              		.loc 1 2245 3 is_stmt 1 view .LVU1066
2245:src/keys.c    **** 			return arg_eval(n);
 3713              		.loc 1 2245 7 is_stmt 0 view .LVU1067
 3714 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2245:src/keys.c    **** 			return arg_eval(n);
 3715              		.loc 1 2245 6 view .LVU1068
 3716 0282 5F06     		lsls	r7, r3, #25
 3717 0284 0AD4     		bmi	.L409
2245:src/keys.c    **** 			return arg_eval(n);
 3718              		.loc 1 2245 25 discriminator 1 view .LVU1069
 3719 0286 0121     		movs	r1, #1
 3720 0288 0320     		movs	r0, #3
 3721              	.LVL290:
2245:src/keys.c    **** 			return arg_eval(n);
 3722              		.loc 1 2245 25 discriminator 1 view .LVU1070
 3723 028a FFF7FEFF 		bl	arg_storcl
 3724              	.LVL291:
2245:src/keys.c    **** 			return arg_eval(n);
 3725              		.loc 1 2245 18 discriminator 1 view .LVU1071
 3726 028e 0028     		cmp	r0, #0
 3727 0290 7FF404AF 		bne	.L475
2245:src/keys.c    **** 			return arg_eval(n);
 3728              		.loc 1 2245 63 discriminator 2 view .LVU1072
 3729 0294 B8F1000F 		cmp	r8, #0
 3730 0298 3FF400AF 		beq	.L475
 3731              	.L409:
ARM GAS  /tmp/ccvq0xdJ.s 			page 138


2246:src/keys.c    **** 		break;
 3732              		.loc 1 2246 4 is_stmt 1 view .LVU1073
2246:src/keys.c    **** 		break;
 3733              		.loc 1 2246 11 is_stmt 0 view .LVU1074
 3734 029c 3046     		mov	r0, r6
 3735 029e EAE7     		b	.L477
 3736              	.LVL292:
 3737              	.L370:
2092:src/keys.c    **** 	  case regT_idx:
 3738              		.loc 1 2092 6 is_stmt 1 view .LVU1075
2092:src/keys.c    **** 	  case regT_idx:
 3739              		.loc 1 2092 13 is_stmt 0 view .LVU1076
 3740 02a0 0320     		movs	r0, #3
 3741              	.LVL293:
 3742              	.L476:
2340:src/keys.c    **** 
 3743              		.loc 1 2340 1 view .LVU1077
 3744 02a2 03B0     		add	sp, sp, #12
 3745              		.cfi_remember_state
 3746              		.cfi_def_cfa_offset 36
 3747              		@ sp needed
 3748 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3749              		.cfi_restore 14
 3750              		.cfi_restore 11
 3751              		.cfi_restore 10
 3752              		.cfi_restore 9
 3753              		.cfi_restore 8
 3754              		.cfi_restore 7
 3755              		.cfi_restore 6
 3756              		.cfi_restore 5
 3757              		.cfi_restore 4
 3758              		.cfi_def_cfa_offset 0
 3759              	.LVL294:
2090:src/keys.c    **** 	  case regZ_idx:
 3760              		.loc 1 2090 13 view .LVU1078
 3761 02a8 FFF7FEBF 		b	arg_digit
 3762              	.LVL295:
 3763              	.L371:
 3764              		.cfi_restore_state
2090:src/keys.c    **** 	  case regZ_idx:
 3765              		.loc 1 2090 6 is_stmt 1 view .LVU1079
2090:src/keys.c    **** 	  case regZ_idx:
 3766              		.loc 1 2090 13 is_stmt 0 view .LVU1080
 3767 02ac 0220     		movs	r0, #2
 3768              	.LVL296:
2090:src/keys.c    **** 	  case regZ_idx:
 3769              		.loc 1 2090 13 view .LVU1081
 3770 02ae F8E7     		b	.L476
 3771              	.LVL297:
 3772              	.L368:
2094:src/keys.c    **** 	  case 5:
 3773              		.loc 1 2094 6 is_stmt 1 view .LVU1082
2094:src/keys.c    **** 	  case 5:
 3774              		.loc 1 2094 13 is_stmt 0 view .LVU1083
 3775 02b0 0420     		movs	r0, #4
 3776              	.LVL298:
2094:src/keys.c    **** 	  case 5:
ARM GAS  /tmp/ccvq0xdJ.s 			page 139


 3777              		.loc 1 2094 13 view .LVU1084
 3778 02b2 F6E7     		b	.L476
 3779              	.LVL299:
 3780              	.L485:
2139:src/keys.c    **** 		    base = RARG_SIG;
 3781              		.loc 1 2139 5 is_stmt 1 view .LVU1085
2139:src/keys.c    **** 		    base = RARG_SIG;
 3782              		.loc 1 2139 8 is_stmt 0 view .LVU1086
 3783 02b4 952D     		cmp	r5, #149
 3784 02b6 40F00B81 		bne	.L430
 3785 02ba 9423     		movs	r3, #148
 3786 02bc 0093     		str	r3, [sp]
 3787              	.LVL300:
2140:src/keys.c    **** 		    break;
 3788              		.loc 1 2140 12 view .LVU1087
 3789 02be 1D46     		mov	r5, r3
 3790 02c0 10E7     		b	.L373
 3791              	.LVL301:
 3792              	.L486:
2140:src/keys.c    **** 		    break;
 3793              		.loc 1 2140 12 view .LVU1088
 3794 02c2 4D23     		movs	r3, #77
 3795 02c4 A7E7     		b	.L474
 3796              	.LVL302:
 3797              	.L392:
2314:src/keys.c    **** 			if (State2.dot)
 3798              		.loc 1 2314 3 is_stmt 1 view .LVU1089
2314:src/keys.c    **** 			if (State2.dot)
 3799              		.loc 1 2314 13 is_stmt 0 view .LVU1090
 3800 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2314:src/keys.c    **** 			if (State2.dot)
 3801              		.loc 1 2314 6 view .LVU1091
 3802 02c8 002B     		cmp	r3, #0
 3803 02ca 40F0EC80 		bne	.L416
2315:src/keys.c    **** 				State2.dot = 0;
 3804              		.loc 1 2315 4 is_stmt 1 view .LVU1092
2315:src/keys.c    **** 				State2.dot = 0;
 3805              		.loc 1 2315 8 is_stmt 0 view .LVU1093
 3806 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2315:src/keys.c    **** 				State2.dot = 0;
 3807              		.loc 1 2315 7 view .LVU1094
 3808 02d0 13F04001 		ands	r1, r3, #64
 3809 02d4 40F0A080 		bne	.L417
2317:src/keys.c    **** 				State2.local = 0;
 3810              		.loc 1 2317 9 is_stmt 1 view .LVU1095
2317:src/keys.c    **** 				State2.local = 0;
 3811              		.loc 1 2317 13 is_stmt 0 view .LVU1096
 3812 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2317:src/keys.c    **** 				State2.local = 0;
 3813              		.loc 1 2317 12 view .LVU1097
 3814 02da 12F00100 		ands	r0, r2, #1
 3815              	.LVL303:
2317:src/keys.c    **** 				State2.local = 0;
 3816              		.loc 1 2317 12 view .LVU1098
 3817 02de 40F01181 		bne	.L487
2319:src/keys.c    **** 				State2.ind = 0;
 3818              		.loc 1 2319 9 is_stmt 1 view .LVU1099
ARM GAS  /tmp/ccvq0xdJ.s 			page 140


2319:src/keys.c    **** 				State2.ind = 0;
 3819              		.loc 1 2319 12 is_stmt 0 view .LVU1100
 3820 02e2 1906     		lsls	r1, r3, #24
 3821 02e4 7FF5D8AE 		bpl	.L382
2320:src/keys.c    **** 			else
 3822              		.loc 1 2320 5 is_stmt 1 view .LVU1101
2320:src/keys.c    **** 			else
 3823              		.loc 1 2320 16 is_stmt 0 view .LVU1102
 3824 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3825 02ec 6375     		strb	r3, [r4, #21]
2339:src/keys.c    **** }
 3826              		.loc 1 2339 9 view .LVU1103
 3827 02ee 3320     		movs	r0, #51
 3828 02f0 D5E6     		b	.L350
 3829              	.LVL304:
 3830              	.L390:
2249:src/keys.c    **** 		break;
 3831              		.loc 1 2249 3 is_stmt 1 view .LVU1104
 3832 02f2 0121     		movs	r1, #1
 3833 02f4 0420     		movs	r0, #4
 3834              	.LVL305:
2249:src/keys.c    **** 		break;
 3835              		.loc 1 2249 3 is_stmt 0 view .LVU1105
 3836 02f6 FFF7FEFF 		bl	arg_storcl
 3837              	.LVL306:
2250:src/keys.c    **** #else
 3838              		.loc 1 2250 3 is_stmt 1 view .LVU1106
2339:src/keys.c    **** }
 3839              		.loc 1 2339 9 is_stmt 0 view .LVU1107
 3840 02fa 3320     		movs	r0, #51
2250:src/keys.c    **** #else
 3841              		.loc 1 2250 3 view .LVU1108
 3842 02fc CFE6     		b	.L350
 3843              	.LVL307:
 3844              	.L389:
2289:src/keys.c    **** 		break;
 3845              		.loc 1 2289 3 is_stmt 1 view .LVU1109
 3846 02fe 0021     		movs	r1, #0
 3847 0300 0520     		movs	r0, #5
 3848              	.LVL308:
2289:src/keys.c    **** 		break;
 3849              		.loc 1 2289 3 is_stmt 0 view .LVU1110
 3850 0302 FFF7FEFF 		bl	arg_storcl
 3851              	.LVL309:
2290:src/keys.c    **** 
 3852              		.loc 1 2290 3 is_stmt 1 view .LVU1111
2339:src/keys.c    **** }
 3853              		.loc 1 2339 9 is_stmt 0 view .LVU1112
 3854 0306 3320     		movs	r0, #51
2290:src/keys.c    **** 
 3855              		.loc 1 2290 3 view .LVU1113
 3856 0308 C9E6     		b	.L350
 3857              	.LVL310:
 3858              	.L388:
2192:src/keys.c    **** 	    return process_arg_shuffle(3);
 3859              		.loc 1 2192 4 is_stmt 1 view .LVU1114
2192:src/keys.c    **** 	    return process_arg_shuffle(3);
ARM GAS  /tmp/ccvq0xdJ.s 			page 141


 3860              		.loc 1 2192 8 is_stmt 0 view .LVU1115
 3861 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2192:src/keys.c    **** 	    return process_arg_shuffle(3);
 3862              		.loc 1 2192 7 view .LVU1116
 3863 030c 9507     		lsls	r5, r2, #30
 3864 030e 7FF557AF 		bpl	.L394
2193:src/keys.c    **** 	case K51:       // X
 3865              		.loc 1 2193 6 is_stmt 1 view .LVU1117
2193:src/keys.c    **** 	case K51:       // X
 3866              		.loc 1 2193 13 is_stmt 0 view .LVU1118
 3867 0312 0320     		movs	r0, #3
 3868              	.LVL311:
 3869              	.L478:
2340:src/keys.c    **** 
 3870              		.loc 1 2340 1 view .LVU1119
 3871 0314 03B0     		add	sp, sp, #12
 3872              		.cfi_remember_state
 3873              		.cfi_def_cfa_offset 36
 3874              		@ sp needed
 3875 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3876              		.cfi_restore 14
 3877              		.cfi_restore 11
 3878              		.cfi_restore 10
 3879              		.cfi_restore 9
 3880              		.cfi_restore 8
 3881              		.cfi_restore 7
 3882              		.cfi_restore 6
 3883              		.cfi_restore 5
 3884              		.cfi_restore 4
 3885              		.cfi_def_cfa_offset 0
 3886              	.LVL312:
2202:src/keys.c    **** #else
 3887              		.loc 1 2202 13 view .LVU1120
 3888 031a FFF7FEBF 		b	process_arg_shuffle
 3889              	.LVL313:
 3890              	.L386:
 3891              		.cfi_restore_state
2195:src/keys.c    **** 	    return process_arg_shuffle(0);
 3892              		.loc 1 2195 4 is_stmt 1 view .LVU1121
2195:src/keys.c    **** 	    return process_arg_shuffle(0);
 3893              		.loc 1 2195 8 is_stmt 0 view .LVU1122
 3894 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2195:src/keys.c    **** 	    return process_arg_shuffle(0);
 3895              		.loc 1 2195 7 view .LVU1123
 3896 0320 9007     		lsls	r0, r2, #30
 3897              	.LVL314:
2195:src/keys.c    **** 	    return process_arg_shuffle(0);
 3898              		.loc 1 2195 7 view .LVU1124
 3899 0322 7FF54DAF 		bpl	.L394
2196:src/keys.c    **** 	case K52:	// Y
 3900              		.loc 1 2196 6 is_stmt 1 view .LVU1125
2196:src/keys.c    **** 	case K52:	// Y
 3901              		.loc 1 2196 13 is_stmt 0 view .LVU1126
 3902 0326 0020     		movs	r0, #0
 3903 0328 F4E7     		b	.L478
 3904              	.L495:
 3905 032a 00BF     		.align	2
ARM GAS  /tmp/ccvq0xdJ.s 			page 142


 3906              	.L494:
 3907 032c 00000000 		.word	StateWhileOn
 3908 0330 00000000 		.word	.LANCHOR6
 3909 0334 00000000 		.word	.LANCHOR5
 3910 0338 ABAAAAAA 		.word	-1431655765
 3911 033c 00000000 		.word	argcmds
 3912              	.LVL315:
 3913              	.L384:
2201:src/keys.c    **** 	    return process_arg_shuffle(2);
 3914              		.loc 1 2201 4 is_stmt 1 view .LVU1127
2201:src/keys.c    **** 	    return process_arg_shuffle(2);
 3915              		.loc 1 2201 8 is_stmt 0 view .LVU1128
 3916 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2201:src/keys.c    **** 	    return process_arg_shuffle(2);
 3917              		.loc 1 2201 7 view .LVU1129
 3918 0342 9207     		lsls	r2, r2, #30
 3919 0344 7FF53CAF 		bpl	.L394
2202:src/keys.c    **** #else
 3920              		.loc 1 2202 6 is_stmt 1 view .LVU1130
2202:src/keys.c    **** #else
 3921              		.loc 1 2202 13 is_stmt 0 view .LVU1131
 3922 0348 0220     		movs	r0, #2
 3923              	.LVL316:
2202:src/keys.c    **** #else
 3924              		.loc 1 2202 13 view .LVU1132
 3925 034a E3E7     		b	.L478
 3926              	.LVL317:
 3927              	.L383:
2238:src/keys.c    **** 			reset_arg();
 3928              		.loc 1 2238 3 is_stmt 1 view .LVU1133
2238:src/keys.c    **** 			reset_arg();
 3929              		.loc 1 2238 6 is_stmt 0 view .LVU1134
 3930 034c 009B     		ldr	r3, [sp]
 3931 034e 212B     		cmp	r3, #33
 3932 0350 00F0B980 		beq	.L406
2238:src/keys.c    **** 			reset_arg();
 3933              		.loc 1 2238 25 discriminator 1 view .LVU1135
 3934 0354 732B     		cmp	r3, #115
 3935 0356 00F0B680 		beq	.L406
2242:src/keys.c    **** 		break;
 3936              		.loc 1 2242 3 is_stmt 1 view .LVU1136
 3937 035a 0121     		movs	r1, #1
 3938 035c 0220     		movs	r0, #2
 3939              	.LVL318:
2242:src/keys.c    **** 		break;
 3940              		.loc 1 2242 3 is_stmt 0 view .LVU1137
 3941 035e FFF7FEFF 		bl	arg_storcl
 3942              	.LVL319:
2243:src/keys.c    **** 	case K44:		// multiply
 3943              		.loc 1 2243 3 is_stmt 1 view .LVU1138
2339:src/keys.c    **** }
 3944              		.loc 1 2339 9 is_stmt 0 view .LVU1139
 3945 0362 3320     		movs	r0, #51
2243:src/keys.c    **** 	case K44:		// multiply
 3946              		.loc 1 2243 3 view .LVU1140
 3947 0364 9BE6     		b	.L350
 3948              	.LVL320:
ARM GAS  /tmp/ccvq0xdJ.s 			page 143


 3949              	.L381:
2230:src/keys.c    **** 
 3950              		.loc 1 2230 3 is_stmt 1 view .LVU1141
 3951              	.LBB487:
 3952              	.LBI487:
2037:src/keys.c    **** 
 3953              		.loc 1 2037 12 view .LVU1142
 3954              	.LBB488:
2039:src/keys.c    **** 		// Only valid at beginning of entry
 3955              		.loc 1 2039 2 view .LVU1143
2039:src/keys.c    **** 		// Only valid at beginning of entry
 3956              		.loc 1 2039 5 is_stmt 0 view .LVU1144
 3957 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3958 0368 002A     		cmp	r2, #0
 3959 036a 7FF497AE 		bne	.L475
2041:src/keys.c    **** 			// '..' or ENTER '.' = X
 3960              		.loc 1 2041 3 is_stmt 1 view .LVU1145
2041:src/keys.c    **** 			// '..' or ENTER '.' = X
 3961              		.loc 1 2041 6 is_stmt 0 view .LVU1146
 3962 036e 11F4A03F 		tst	r1, #81920
 3963 0372 40F0C180 		bne	.L488
2046:src/keys.c    **** 			// local register or flag select
 3964              		.loc 1 2046 3 is_stmt 1 view .LVU1147
2046:src/keys.c    **** 			// local register or flag select
 3965              		.loc 1 2046 20 is_stmt 0 view .LVU1148
 3966 0376 009B     		ldr	r3, [sp]
 3967 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3968 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2046:src/keys.c    **** 			// local register or flag select
 3969              		.loc 1 2046 6 view .LVU1149
 3970 037e 1A07     		lsls	r2, r3, #28
 3971 0380 00F1A880 		bmi	.L402
2046:src/keys.c    **** 			// local register or flag select
 3972              		.loc 1 2046 27 view .LVU1150
 3973 0384 94F91530 		ldrsb	r3, [r4, #21]
 3974 0388 002B     		cmp	r3, #0
 3975 038a C0F2A380 		blt	.L402
2050:src/keys.c    **** 			// Special GTO . sequence
 3976              		.loc 1 2050 8 is_stmt 1 view .LVU1151
2050:src/keys.c    **** 			// Special GTO . sequence
 3977              		.loc 1 2050 29 is_stmt 0 view .LVU1152
 3978 038e 009B     		ldr	r3, [sp]
 3979 0390 A3F14409 		sub	r9, r3, #68
2050:src/keys.c    **** 			// Special GTO . sequence
 3980              		.loc 1 2050 11 view .LVU1153
 3981 0394 B9F1010F 		cmp	r9, #1
 3982 0398 3FF680AE 		bhi	.L475
2052:src/keys.c    **** 				State2.gtodot = 1;
 3983              		.loc 1 2052 4 is_stmt 1 view .LVU1154
2053:src/keys.c    **** 				reset_arg();
 3984              		.loc 1 2053 5 view .LVU1155
2053:src/keys.c    **** 				reset_arg();
 3985              		.loc 1 2053 19 is_stmt 0 view .LVU1156
 3986 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3987 039e 43F00103 		orr	r3, r3, #1
 3988 03a2 6375     		strb	r3, [r4, #21]
2054:src/keys.c    **** 			}
ARM GAS  /tmp/ccvq0xdJ.s 			page 144


 3989              		.loc 1 2054 5 is_stmt 1 view .LVU1157
 3990 03a4 FFF7FEFF 		bl	reset_arg
 3991              	.LVL321:
2058:src/keys.c    **** }
 3992              		.loc 1 2058 9 is_stmt 0 view .LVU1158
 3993 03a8 3320     		movs	r0, #51
 3994 03aa 78E6     		b	.L350
 3995              	.LVL322:
 3996              	.L380:
2058:src/keys.c    **** }
 3997              		.loc 1 2058 9 view .LVU1159
 3998              	.LBE488:
 3999              	.LBE487:
2234:src/keys.c    **** 			return arg_eval(n);
 4000              		.loc 1 2234 3 is_stmt 1 view .LVU1160
2234:src/keys.c    **** 			return arg_eval(n);
 4001              		.loc 1 2234 7 is_stmt 0 view .LVU1161
 4002 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2234:src/keys.c    **** 			return arg_eval(n);
 4003              		.loc 1 2234 6 view .LVU1162
 4004 03ae 5B06     		lsls	r3, r3, #25
 4005 03b0 3FF574AF 		bmi	.L409
2234:src/keys.c    **** 			return arg_eval(n);
 4006              		.loc 1 2234 25 discriminator 1 view .LVU1163
 4007 03b4 0121     		movs	r1, #1
 4008 03b6 0846     		mov	r0, r1
 4009              	.LVL323:
2234:src/keys.c    **** 			return arg_eval(n);
 4010              		.loc 1 2234 25 discriminator 1 view .LVU1164
 4011 03b8 FFF7FEFF 		bl	arg_storcl
 4012              	.LVL324:
2234:src/keys.c    **** 			return arg_eval(n);
 4013              		.loc 1 2234 18 discriminator 1 view .LVU1165
 4014 03bc 0028     		cmp	r0, #0
 4015 03be 7FF46DAE 		bne	.L475
2245:src/keys.c    **** 			return arg_eval(n);
 4016              		.loc 1 2245 63 view .LVU1166
 4017 03c2 B8F1000F 		cmp	r8, #0
 4018 03c6 3FF469AE 		beq	.L475
 4019 03ca 67E7     		b	.L409
 4020              	.LVL325:
 4021              	.L379:
2170:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4022              		.loc 1 2170 3 is_stmt 1 view .LVU1167
2170:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4023              		.loc 1 2170 6 is_stmt 0 view .LVU1168
 4024 03cc BCF1000F 		cmp	ip, #0
 4025 03d0 3FF464AE 		beq	.L475
2171:src/keys.c    **** 		break;
 4026              		.loc 1 2171 4 is_stmt 1 view .LVU1169
 4027              	.LVL326:
 4028              	.LBB491:
 4029              	.LBI491:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4030              		.loc 1 104 20 view .LVU1170
 4031              	.LBB492:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccvq0xdJ.s 			page 145


 4032              		.loc 1 105 2 view .LVU1171
 4033              	.LBB493:
 4034              	.LBI493:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4035              		.loc 1 96 13 view .LVU1172
 4036              	.LBB494:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4037              		.loc 1 97 2 view .LVU1173
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4038              		.loc 1 97 18 is_stmt 0 view .LVU1174
 4039 03d4 FFF7FEFF 		bl	shift_down
 4040              	.LVL327:
  98:src/keys.c    **** }
 4041              		.loc 1 98 2 is_stmt 1 view .LVU1175
 4042              	.LBE494:
 4043              	.LBE493:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4044              		.loc 1 106 2 view .LVU1176
 4045              	.LBE492:
 4046              	.LBE491:
2171:src/keys.c    **** 		break;
 4047              		.loc 1 2171 4 is_stmt 0 view .LVU1177
 4048 03d8 019B     		ldr	r3, [sp, #4]
 4049 03da B3F1010A 		subs	r10, r3, #1
 4050 03de 18BF     		it	ne
 4051 03e0 4FF0010A 		movne	r10, #1
 4052 03e4 84F810A0 		strb	r10, [r4, #16]
 4053              	.LBB497:
 4054              	.LBB495:
 108:src/keys.c    **** }
 4055              		.loc 1 108 2 is_stmt 1 view .LVU1178
 4056              	.LBE495:
 4057              	.LBE497:
2339:src/keys.c    **** }
 4058              		.loc 1 2339 9 is_stmt 0 view .LVU1179
 4059 03e8 3320     		movs	r0, #51
 4060              	.LBB498:
 4061              	.LBB496:
 108:src/keys.c    **** }
 4062              		.loc 1 108 9 view .LVU1180
 4063 03ea 58E6     		b	.L350
 4064              	.LVL328:
 4065              	.L378:
 108:src/keys.c    **** }
 4066              		.loc 1 108 9 view .LVU1181
 4067              	.LBE496:
 4068              	.LBE498:
2175:src/keys.c    **** 			State2.ind = ! State2.ind;
 4069              		.loc 1 2175 3 is_stmt 1 view .LVU1182
2175:src/keys.c    **** 			State2.ind = ! State2.ind;
 4070              		.loc 1 2175 7 is_stmt 0 view .LVU1183
 4071 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2175:src/keys.c    **** 			State2.ind = ! State2.ind;
 4072              		.loc 1 2175 6 view .LVU1184
 4073 03ee 5706     		lsls	r7, r2, #25
 4074 03f0 3FF554AE 		bmi	.L475
2175:src/keys.c    **** 			State2.ind = ! State2.ind;
ARM GAS  /tmp/ccvq0xdJ.s 			page 146


 4075              		.loc 1 2175 35 discriminator 1 view .LVU1185
 4076 03f4 009B     		ldr	r3, [sp]
 4077 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4078 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2175:src/keys.c    **** 			State2.ind = ! State2.ind;
 4079              		.loc 1 2175 19 discriminator 1 view .LVU1186
 4080 03fe DE07     		lsls	r6, r3, #31
 4081              	.LVL329:
2175:src/keys.c    **** 			State2.ind = ! State2.ind;
 4082              		.loc 1 2175 19 discriminator 1 view .LVU1187
 4083 0400 7FF54CAE 		bpl	.L475
2176:src/keys.c    **** 			if (! stack_reg)
 4084              		.loc 1 2176 4 is_stmt 1 view .LVU1188
2176:src/keys.c    **** 			if (! stack_reg)
 4085              		.loc 1 2176 17 is_stmt 0 view .LVU1189
 4086 0404 D343     		mvns	r3, r2
 4087 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2176:src/keys.c    **** 			if (! stack_reg)
 4088              		.loc 1 2176 15 view .LVU1190
 4089 040a 63F3C712 		bfi	r2, r3, #7, #1
 4090 040e 6275     		strb	r2, [r4, #21]
2177:src/keys.c    **** 				State2.dot = 0;
 4091              		.loc 1 2177 4 is_stmt 1 view .LVU1191
2177:src/keys.c    **** 				State2.dot = 0;
 4092              		.loc 1 2177 7 is_stmt 0 view .LVU1192
 4093 0410 B8F1000F 		cmp	r8, #0
 4094 0414 7FF442AE 		bne	.L475
 4095              	.L417:
2178:src/keys.c    **** 		}
 4096              		.loc 1 2178 5 is_stmt 1 view .LVU1193
2178:src/keys.c    **** 		}
 4097              		.loc 1 2178 16 is_stmt 0 view .LVU1194
 4098 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4099 041a 6FF38613 		bfc	r3, #6, #1
 4100 041e 6375     		strb	r3, [r4, #21]
2339:src/keys.c    **** }
 4101              		.loc 1 2339 9 view .LVU1195
 4102 0420 3320     		movs	r0, #51
 4103              	.LVL330:
2339:src/keys.c    **** }
 4104              		.loc 1 2339 9 view .LVU1196
 4105 0422 3CE6     		b	.L350
 4106              	.LVL331:
 4107              	.L376:
2183:src/keys.c    **** 			break;
 4108              		.loc 1 2183 3 is_stmt 1 view .LVU1197
2183:src/keys.c    **** 			break;
 4109              		.loc 1 2183 18 is_stmt 0 view .LVU1198
 4110 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2183:src/keys.c    **** 			break;
 4111              		.loc 1 2183 6 view .LVU1199
 4112 0426 13F0C00F 		tst	r3, #192
 4113 042a 7FF437AE 		bne	.L475
2185:src/keys.c    **** 			CmdBase = RARG_STOM;
 4114              		.loc 1 2185 3 is_stmt 1 view .LVU1200
2185:src/keys.c    **** 			CmdBase = RARG_STOM;
 4115              		.loc 1 2185 6 is_stmt 0 view .LVU1201
ARM GAS  /tmp/ccvq0xdJ.s 			page 147


 4116 042e 009B     		ldr	r3, [sp]
 4117 0430 032B     		cmp	r3, #3
 4118 0432 5DD0     		beq	.L489
2187:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4119              		.loc 1 2187 8 is_stmt 1 view .LVU1202
2187:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4120              		.loc 1 2187 11 is_stmt 0 view .LVU1203
 4121 0434 009B     		ldr	r3, [sp]
 4122 0436 0A2B     		cmp	r3, #10
 4123 0438 7FF430AE 		bne	.L475
2188:src/keys.c    **** 		break;
 4124              		.loc 1 2188 4 is_stmt 1 view .LVU1204
2188:src/keys.c    **** 		break;
 4125              		.loc 1 2188 12 is_stmt 0 view .LVU1205
 4126 043c 7823     		movs	r3, #120
 4127 043e E377     		strb	r3, [r4, #31]
2339:src/keys.c    **** }
 4128              		.loc 1 2339 9 view .LVU1206
 4129 0440 3320     		movs	r0, #51
 4130              	.LVL332:
2339:src/keys.c    **** }
 4131              		.loc 1 2339 9 view .LVU1207
 4132 0442 2CE6     		b	.L350
 4133              	.LVL333:
 4134              	.L393:
2293:src/keys.c    **** 			if (argcmds[base].label) {
 4135              		.loc 1 2293 3 is_stmt 1 view .LVU1208
2293:src/keys.c    **** 			if (argcmds[base].label) {
 4136              		.loc 1 2293 6 is_stmt 0 view .LVU1209
 4137 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4138 0446 4AB1     		cbz	r2, .L490
2307:src/keys.c    **** 			return arg_eval(State2.digval);
 4139              		.loc 1 2307 10 is_stmt 1 view .LVU1210
2308:src/keys.c    **** 		else if (stack_reg)
 4140              		.loc 1 2308 4 view .LVU1211
2308:src/keys.c    **** 		else if (stack_reg)
 4141              		.loc 1 2308 11 is_stmt 0 view .LVU1212
 4142 0448 2089     		ldrh	r0, [r4, #8]
 4143              	.LVL334:
2308:src/keys.c    **** 		else if (stack_reg)
 4144              		.loc 1 2308 11 view .LVU1213
 4145 044a 14E7     		b	.L477
 4146              	.LVL335:
 4147              	.L385:
2198:src/keys.c    **** 	    return process_arg_shuffle(1);
 4148              		.loc 1 2198 4 is_stmt 1 view .LVU1214
2198:src/keys.c    **** 	    return process_arg_shuffle(1);
 4149              		.loc 1 2198 8 is_stmt 0 view .LVU1215
 4150 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2198:src/keys.c    **** 	    return process_arg_shuffle(1);
 4151              		.loc 1 2198 7 view .LVU1216
 4152 044e 9107     		lsls	r1, r2, #30
 4153 0450 7FF5B6AE 		bpl	.L394
2199:src/keys.c    **** 	case K53:       // Z
 4154              		.loc 1 2199 6 is_stmt 1 view .LVU1217
2199:src/keys.c    **** 	case K53:       // Z
 4155              		.loc 1 2199 13 is_stmt 0 view .LVU1218
ARM GAS  /tmp/ccvq0xdJ.s 			page 148


 4156 0454 0120     		movs	r0, #1
 4157              	.LVL336:
2199:src/keys.c    **** 	case K53:       // Z
 4158              		.loc 1 2199 13 view .LVU1219
 4159 0456 5DE7     		b	.L478
 4160              	.LVL337:
 4161              	.L432:
2115:src/keys.c    **** 		case K_UP:	// up arrow
 4162              		.loc 1 2115 3 view .LVU1220
 4163 0458 9423     		movs	r3, #148
 4164              	.LVL338:
2145:src/keys.c    **** #else
 4165              		.loc 1 2145 3 is_stmt 1 view .LVU1221
 4166 045a DCE6     		b	.L474
 4167              	.L490:
2293:src/keys.c    **** 			if (argcmds[base].label) {
 4168              		.loc 1 2293 43 is_stmt 0 discriminator 1 view .LVU1222
 4169 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4170 045e 12F0C00F 		tst	r2, #192
 4171 0462 13D1     		bne	.L411
2294:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4172              		.loc 1 2294 4 is_stmt 1 view .LVU1223
2294:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4173              		.loc 1 2294 21 is_stmt 0 view .LVU1224
 4174 0464 009B     		ldr	r3, [sp]
 4175 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4176 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2294:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4177              		.loc 1 2294 7 view .LVU1225
 4178 046c 9E06     		lsls	r6, r3, #26
 4179              	.LVL339:
2294:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4180              		.loc 1 2294 7 view .LVU1226
 4181 046e 4ED4     		bmi	.L491
2299:src/keys.c    **** 				reset_arg();
 4182              		.loc 1 2299 11 is_stmt 1 view .LVU1227
2299:src/keys.c    **** 				reset_arg();
 4183              		.loc 1 2299 14 is_stmt 0 view .LVU1228
 4184 0470 0099     		ldr	r1, [sp]
 4185 0472 4E29     		cmp	r1, #78
 4186 0474 5DD0     		beq	.L492
2302:src/keys.c    **** 				reset_arg();
 4187              		.loc 1 2302 11 is_stmt 1 view .LVU1229
2302:src/keys.c    **** 				reset_arg();
 4188              		.loc 1 2302 14 is_stmt 0 view .LVU1230
 4189 0476 0099     		ldr	r1, [sp]
 4190 0478 4F29     		cmp	r1, #79
 4191 047a 5FD0     		beq	.L493
2305:src/keys.c    **** 				State2.dot = 1;
 4192              		.loc 1 2305 11 is_stmt 1 view .LVU1231
2305:src/keys.c    **** 				State2.dot = 1;
 4193              		.loc 1 2305 14 is_stmt 0 view .LVU1232
 4194 047c 5807     		lsls	r0, r3, #29
 4195              	.LVL340:
2305:src/keys.c    **** 				State2.dot = 1;
 4196              		.loc 1 2305 14 view .LVU1233
 4197 047e 7FF50DAE 		bpl	.L475
ARM GAS  /tmp/ccvq0xdJ.s 			page 149


2306:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4198              		.loc 1 2306 5 is_stmt 1 view .LVU1234
2306:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4199              		.loc 1 2306 16 is_stmt 0 view .LVU1235
 4200 0482 42F04002 		orr	r2, r2, #64
 4201 0486 6275     		strb	r2, [r4, #21]
2339:src/keys.c    **** }
 4202              		.loc 1 2339 9 view .LVU1236
 4203 0488 3320     		movs	r0, #51
 4204 048a 08E6     		b	.L350
 4205              	.LVL341:
 4206              	.L411:
2307:src/keys.c    **** 			return arg_eval(State2.digval);
 4207              		.loc 1 2307 10 is_stmt 1 view .LVU1237
2309:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4208              		.loc 1 2309 8 view .LVU1238
2309:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4209              		.loc 1 2309 11 is_stmt 0 view .LVU1239
 4210 048c B8F1000F 		cmp	r8, #0
 4211 0490 3FF404AE 		beq	.L475
2310:src/keys.c    **** 		break;
 4212              		.loc 1 2310 4 is_stmt 1 view .LVU1240
2310:src/keys.c    **** 		break;
 4213              		.loc 1 2310 27 is_stmt 0 view .LVU1241
 4214 0494 C2F38013 		ubfx	r3, r2, #6, #1
2310:src/keys.c    **** 		break;
 4215              		.loc 1 2310 19 view .LVU1242
 4216 0498 C3F10103 		rsb	r3, r3, #1
2310:src/keys.c    **** 		break;
 4217              		.loc 1 2310 15 view .LVU1243
 4218 049c 63F38612 		bfi	r2, r3, #6, #1
 4219 04a0 6275     		strb	r2, [r4, #21]
2339:src/keys.c    **** }
 4220              		.loc 1 2339 9 view .LVU1244
 4221 04a2 3320     		movs	r0, #51
 4222              	.LVL342:
2339:src/keys.c    **** }
 4223              		.loc 1 2339 9 view .LVU1245
 4224 04a4 FBE5     		b	.L350
 4225              	.LVL343:
 4226              	.L416:
2325:src/keys.c    **** 			if (State2.shuffle)
 4227              		.loc 1 2325 4 is_stmt 1 view .LVU1246
2326:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4228              		.loc 1 2326 8 is_stmt 0 view .LVU1247
 4229 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2325:src/keys.c    **** 			if (State2.shuffle)
 4230              		.loc 1 2325 4 view .LVU1248
 4231 04a8 013B     		subs	r3, r3, #1
 4232 04aa DBB2     		uxtb	r3, r3
2326:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4233              		.loc 1 2326 7 view .LVU1249
 4234 04ac 9207     		lsls	r2, r2, #30
2325:src/keys.c    **** 			if (State2.shuffle)
 4235              		.loc 1 2325 4 view .LVU1250
 4236 04ae E372     		strb	r3, [r4, #11]
2326:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
ARM GAS  /tmp/ccvq0xdJ.s 			page 150


 4237              		.loc 1 2326 4 is_stmt 1 view .LVU1251
2326:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4238              		.loc 1 2326 7 is_stmt 0 view .LVU1252
 4239 04b0 16D5     		bpl	.L419
2327:src/keys.c    **** 			else
 4240              		.loc 1 2327 5 is_stmt 1 view .LVU1253
2327:src/keys.c    **** 			else
 4241              		.loc 1 2327 19 is_stmt 0 view .LVU1254
 4242 04b2 2289     		ldrh	r2, [r4, #8]
2327:src/keys.c    **** 			else
 4243              		.loc 1 2327 46 view .LVU1255
 4244 04b4 5B00     		lsls	r3, r3, #1
2327:src/keys.c    **** 			else
 4245              		.loc 1 2327 26 view .LVU1256
 4246 04b6 0321     		movs	r1, #3
 4247 04b8 01FA03F3 		lsl	r3, r1, r3
2327:src/keys.c    **** 			else
 4248              		.loc 1 2327 19 view .LVU1257
 4249 04bc 22EA0303 		bic	r3, r2, r3
 4250 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2339:src/keys.c    **** }
 4251              		.loc 1 2339 9 view .LVU1258
 4252 04c2 3320     		movs	r0, #51
 4253              	.LVL344:
2339:src/keys.c    **** }
 4254              		.loc 1 2339 9 view .LVU1259
 4255 04c4 EBE5     		b	.L350
 4256              	.LVL345:
 4257              	.L406:
2239:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4258              		.loc 1 2239 4 is_stmt 1 view .LVU1260
 4259 04c6 FFF7FEFF 		bl	reset_arg
 4260              	.LVL346:
2240:src/keys.c    **** 		}
 4261              		.loc 1 2240 4 view .LVU1261
2240:src/keys.c    **** 		}
 4262              		.loc 1 2240 11 is_stmt 0 view .LVU1262
 4263 04ca 40F27510 		movw	r0, #373
 4264 04ce E6E5     		b	.L350
 4265              	.LVL347:
 4266              	.L430:
2240:src/keys.c    **** 		}
 4267              		.loc 1 2240 11 view .LVU1263
 4268 04d0 9525     		movs	r5, #149
 4269              	.LVL348:
2240:src/keys.c    **** 		}
 4270              		.loc 1 2240 11 view .LVU1264
 4271 04d2 07E6     		b	.L373
 4272              	.LVL349:
 4273              	.L402:
 4274              	.LBB499:
 4275              	.LBB489:
2048:src/keys.c    **** 		}
 4276              		.loc 1 2048 4 is_stmt 1 view .LVU1265
2048:src/keys.c    **** 		}
 4277              		.loc 1 2048 17 is_stmt 0 view .LVU1266
 4278 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccvq0xdJ.s 			page 151


 4279 04d6 43F00103 		orr	r3, r3, #1
 4280 04da A375     		strb	r3, [r4, #22]
2058:src/keys.c    **** }
 4281              		.loc 1 2058 9 view .LVU1267
 4282 04dc 3320     		movs	r0, #51
 4283              	.LVL350:
2048:src/keys.c    **** 		}
 4284              		.loc 1 2048 17 view .LVU1268
 4285 04de DEE5     		b	.L350
 4286              	.LVL351:
 4287              	.L419:
2048:src/keys.c    **** 		}
 4288              		.loc 1 2048 17 view .LVU1269
 4289              	.LBE489:
 4290              	.LBE499:
2329:src/keys.c    **** 		}
 4291              		.loc 1 2329 5 is_stmt 1 view .LVU1270
2329:src/keys.c    **** 		}
 4292              		.loc 1 2329 19 is_stmt 0 view .LVU1271
 4293 04e0 2389     		ldrh	r3, [r4, #8]
 4294 04e2 1A4A     		ldr	r2, .L496
 4295 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4296 04e8 DB08     		lsrs	r3, r3, #3
 4297 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2339:src/keys.c    **** }
 4298              		.loc 1 2339 9 view .LVU1272
 4299 04ec 3320     		movs	r0, #51
 4300              	.LVL352:
2339:src/keys.c    **** }
 4301              		.loc 1 2339 9 view .LVU1273
 4302 04ee D6E5     		b	.L350
 4303              	.LVL353:
 4304              	.L489:
2186:src/keys.c    **** 		else if (base == RARG_RCL)
 4305              		.loc 1 2186 4 is_stmt 1 view .LVU1274
2186:src/keys.c    **** 		else if (base == RARG_RCL)
 4306              		.loc 1 2186 12 is_stmt 0 view .LVU1275
 4307 04f0 7723     		movs	r3, #119
 4308 04f2 E377     		strb	r3, [r4, #31]
2339:src/keys.c    **** }
 4309              		.loc 1 2339 9 view .LVU1276
 4310 04f4 3320     		movs	r0, #51
 4311              	.LVL354:
2339:src/keys.c    **** }
 4312              		.loc 1 2339 9 view .LVU1277
 4313 04f6 D2E5     		b	.L350
 4314              	.LVL355:
 4315              	.L488:
 4316              	.LBB500:
 4317              	.LBB490:
2043:src/keys.c    **** 			return arg_eval(regX_idx);
 4318              		.loc 1 2043 4 is_stmt 1 view .LVU1278
2043:src/keys.c    **** 			return arg_eval(regX_idx);
 4319              		.loc 1 2043 17 is_stmt 0 view .LVU1279
 4320 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4321 04fa 62F30003 		bfi	r3, r2, #0, #1
2044:src/keys.c    **** 		}
ARM GAS  /tmp/ccvq0xdJ.s 			page 152


 4322              		.loc 1 2044 11 view .LVU1280
 4323 04fe 6420     		movs	r0, #100
 4324              	.LVL356:
2043:src/keys.c    **** 			return arg_eval(regX_idx);
 4325              		.loc 1 2043 17 view .LVU1281
 4326 0500 A375     		strb	r3, [r4, #22]
2044:src/keys.c    **** 		}
 4327              		.loc 1 2044 4 is_stmt 1 view .LVU1282
 4328 0502 B8E6     		b	.L477
 4329              	.L487:
2044:src/keys.c    **** 		}
 4330              		.loc 1 2044 4 is_stmt 0 view .LVU1283
 4331              	.LBE490:
 4332              	.LBE500:
2318:src/keys.c    **** 			else if (State2.ind)
 4333              		.loc 1 2318 5 is_stmt 1 view .LVU1284
2318:src/keys.c    **** 			else if (State2.ind)
 4334              		.loc 1 2318 18 is_stmt 0 view .LVU1285
 4335 0504 61F30002 		bfi	r2, r1, #0, #1
 4336 0508 A275     		strb	r2, [r4, #22]
2339:src/keys.c    **** }
 4337              		.loc 1 2339 9 view .LVU1286
 4338 050a 3320     		movs	r0, #51
 4339 050c C7E5     		b	.L350
 4340              	.LVL357:
 4341              	.L491:
2295:src/keys.c    **** 				State2.multi = 1;
 4342              		.loc 1 2295 5 is_stmt 1 view .LVU1287
 4343              	.LBB501:
 4344              	.LBI501:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4345              		.loc 1 552 13 view .LVU1288
 4346              	.LBB502:
 553:src/keys.c    **** 		return;
 4347              		.loc 1 553 2 view .LVU1289
 553:src/keys.c    **** 		return;
 4348              		.loc 1 553 6 is_stmt 0 view .LVU1290
 4349 050e FFF7FEFF 		bl	is_bad_cmdline
 4350              	.LVL358:
 553:src/keys.c    **** 		return;
 4351              		.loc 1 553 5 view .LVU1291
 4352 0512 20B9     		cbnz	r0, .L413
 4353              	.LBE502:
 4354              	.LBE501:
2295:src/keys.c    **** 				State2.multi = 1;
 4355              		.loc 1 2295 31 view .LVU1292
 4356 0514 A5F14200 		sub	r0, r5, #66
 4357              	.LBB504:
 4358              	.LBB503:
 4359 0518 C0B2     		uxtb	r0, r0
 4360 051a FFF7FEFF 		bl	init_arg.part.0
 4361              	.LVL359:
 4362              	.L413:
2295:src/keys.c    **** 				State2.multi = 1;
 4363              		.loc 1 2295 31 view .LVU1293
 4364              	.LBE503:
 4365              	.LBE504:
ARM GAS  /tmp/ccvq0xdJ.s 			page 153


2296:src/keys.c    **** 				State2.alphashift = 0;
 4366              		.loc 1 2296 5 is_stmt 1 view .LVU1294
2297:src/keys.c    **** 				State2.rarg = 0;
 4367              		.loc 1 2297 5 view .LVU1295
2298:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4368              		.loc 1 2298 5 view .LVU1296
2296:src/keys.c    **** 				State2.alphashift = 0;
 4369              		.loc 1 2296 18 is_stmt 0 view .LVU1297
 4370 051e 6369     		ldr	r3, [r4, #20]
 4371 0520 23F44013 		bic	r3, r3, #3145728
 4372 0524 23F40063 		bic	r3, r3, #2048
 4373 0528 43F40063 		orr	r3, r3, #2048
 4374 052c 6361     		str	r3, [r4, #20]
2339:src/keys.c    **** }
 4375              		.loc 1 2339 9 view .LVU1298
 4376 052e 3320     		movs	r0, #51
 4377 0530 B5E5     		b	.L350
 4378              	.LVL360:
 4379              	.L492:
2300:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4380              		.loc 1 2300 5 is_stmt 1 view .LVU1299
 4381 0532 FFF7FEFF 		bl	reset_arg
 4382              	.LVL361:
2301:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4383              		.loc 1 2301 5 view .LVU1300
2301:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4384              		.loc 1 2301 12 is_stmt 0 view .LVU1301
 4385 0536 40F25510 		movw	r0, #341
 4386 053a B0E5     		b	.L350
 4387              	.LVL362:
 4388              	.L493:
2303:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 4389              		.loc 1 2303 5 is_stmt 1 view .LVU1302
 4390 053c FFF7FEFF 		bl	reset_arg
 4391              	.LVL363:
2304:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4392              		.loc 1 2304 5 view .LVU1303
2304:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4393              		.loc 1 2304 12 is_stmt 0 view .LVU1304
 4394 0540 4FF4AB70 		mov	r0, #342
 4395 0544 ABE5     		b	.L350
 4396              	.LVL364:
 4397              	.L367:
2088:src/keys.c    **** 	  case regY_idx:
 4398              		.loc 1 2088 6 is_stmt 1 view .LVU1305
2088:src/keys.c    **** 	  case regY_idx:
 4399              		.loc 1 2088 13 is_stmt 0 view .LVU1306
 4400 0546 0120     		movs	r0, #1
 4401              	.LVL365:
2088:src/keys.c    **** 	  case regY_idx:
 4402              		.loc 1 2088 13 view .LVU1307
 4403 0548 ABE6     		b	.L476
 4404              	.L497:
 4405 054a 00BF     		.align	2
 4406              	.L496:
 4407 054c CDCCCCCC 		.word	-858993459
 4408              		.cfi_endproc
ARM GAS  /tmp/ccvq0xdJ.s 			page 154


 4409              	.LFE42:
 4411              		.section	.text.cur_shift,"ax",%progbits
 4412              		.align	1
 4413              		.p2align 2,,3
 4414              		.global	cur_shift
 4415              		.syntax unified
 4416              		.thumb
 4417              		.thumb_func
 4418              		.fpu fpv4-sp-d16
 4420              	cur_shift:
 4421              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4422              		.loc 1 96 29 is_stmt 1 view -0
 4423              		.cfi_startproc
 4424              		@ args = 0, pretend = 0, frame = 0
 4425              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4426              		.loc 1 97 2 view .LVU1309
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4427              		.loc 1 96 29 is_stmt 0 view .LVU1310
 4428 0000 08B5     		push	{r3, lr}
 4429              		.cfi_def_cfa_offset 8
 4430              		.cfi_offset 3, -8
 4431              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4432              		.loc 1 97 18 view .LVU1311
 4433 0002 FFF7FEFF 		bl	shift_down
 4434              	.LVL366:
  98:src/keys.c    **** }
 4435              		.loc 1 98 2 is_stmt 1 view .LVU1312
  98:src/keys.c    **** }
 4436              		.loc 1 98 52 is_stmt 0 view .LVU1313
 4437 0006 08B9     		cbnz	r0, .L499
  98:src/keys.c    **** }
 4438              		.loc 1 98 52 discriminator 1 view .LVU1314
 4439 0008 014B     		ldr	r3, .L501
 4440 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4441              	.LVL367:
 4442              	.L499:
  99:src/keys.c    **** 
 4443              		.loc 1 99 1 discriminator 4 view .LVU1315
 4444 000c 08BD     		pop	{r3, pc}
 4445              	.L502:
 4446 000e 00BF     		.align	2
 4447              	.L501:
 4448 0010 00000000 		.word	StateWhileOn
 4449              		.cfi_endproc
 4450              	.LFE0:
 4452              		.section	.text.reset_shift,"ax",%progbits
 4453              		.align	1
 4454              		.p2align 2,,3
 4455              		.global	reset_shift
 4456              		.syntax unified
 4457              		.thumb
 4458              		.thumb_func
 4459              		.fpu fpv4-sp-d16
 4461              	reset_shift:
ARM GAS  /tmp/ccvq0xdJ.s 			page 155


 4462              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4463              		.loc 1 114 31 is_stmt 1 view -0
 4464              		.cfi_startproc
 4465              		@ args = 0, pretend = 0, frame = 0
 4466              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4467              		.loc 1 115 2 view .LVU1317
 4468              	.LVL368:
 4469              	.LBB505:
 4470              	.LBI505:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4471              		.loc 1 104 20 view .LVU1318
 4472              	.LBB506:
 105:src/keys.c    **** 	State2.shifts = shift;
 4473              		.loc 1 105 2 view .LVU1319
 4474              	.LBB507:
 4475              	.LBI507:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4476              		.loc 1 96 13 view .LVU1320
 4477              	.LBB508:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4478              		.loc 1 97 2 view .LVU1321
 4479              	.LBE508:
 4480              	.LBE507:
 4481              	.LBE506:
 4482              	.LBE505:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4483              		.loc 1 114 31 is_stmt 0 view .LVU1322
 4484 0000 08B5     		push	{r3, lr}
 4485              		.cfi_def_cfa_offset 8
 4486              		.cfi_offset 3, -8
 4487              		.cfi_offset 14, -4
 4488              	.LBB512:
 4489              	.LBB511:
 4490              	.LBB510:
 4491              	.LBB509:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4492              		.loc 1 97 18 view .LVU1323
 4493 0002 FFF7FEFF 		bl	shift_down
 4494              	.LVL369:
  98:src/keys.c    **** }
 4495              		.loc 1 98 2 is_stmt 1 view .LVU1324
  98:src/keys.c    **** }
 4496              		.loc 1 98 52 is_stmt 0 view .LVU1325
 4497 0006 034B     		ldr	r3, .L508
 4498 0008 00B9     		cbnz	r0, .L504
 4499 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4500              	.LVL370:
 4501              	.L504:
  98:src/keys.c    **** }
 4502              		.loc 1 98 52 view .LVU1326
 4503              	.LBE509:
 4504              	.LBE510:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4505              		.loc 1 106 2 is_stmt 1 view .LVU1327
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccvq0xdJ.s 			page 156


 4506              		.loc 1 106 16 is_stmt 0 view .LVU1328
 4507 000c 0022     		movs	r2, #0
 4508 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4509              		.loc 1 108 2 is_stmt 1 view .LVU1329
 4510              	.LVL371:
 108:src/keys.c    **** }
 4511              		.loc 1 108 2 is_stmt 0 view .LVU1330
 4512              	.LBE511:
 4513              	.LBE512:
 116:src/keys.c    **** 
 4514              		.loc 1 116 1 view .LVU1331
 4515 0010 08BD     		pop	{r3, pc}
 4516              	.L509:
 4517 0012 00BF     		.align	2
 4518              	.L508:
 4519 0014 00000000 		.word	StateWhileOn
 4520              		.cfi_endproc
 4521              	.LFE2:
 4523              		.section	.text.keycode_to_row_column,"ax",%progbits
 4524              		.align	1
 4525              		.p2align 2,,3
 4526              		.global	keycode_to_row_column
 4527              		.syntax unified
 4528              		.thumb
 4529              		.thumb_func
 4530              		.fpu fpv4-sp-d16
 4532              	keycode_to_row_column:
 4533              	.LVL372:
 4534              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4535              		.loc 1 180 1 is_stmt 1 view -0
 4536              		.cfi_startproc
 4537              		@ args = 0, pretend = 0, frame = 0
 4538              		@ frame_needed = 0, uses_anonymous_args = 0
 4539              		@ link register save eliminated.
 181:src/keys.c    **** }
 4540              		.loc 1 181 2 view .LVU1333
 181:src/keys.c    **** }
 4541              		.loc 1 181 18 is_stmt 0 view .LVU1334
 4542 0000 074A     		ldr	r2, .L511
 4543 0002 82FB0032 		smull	r3, r2, r2, r0
 4544 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4545              		.loc 1 181 24 view .LVU1335
 4546 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4547 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4548              		.loc 1 181 33 view .LVU1336
 4549 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4550 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4551              		.loc 1 181 12 view .LVU1337
 4552 0018 02F10B00 		add	r0, r2, #11
 4553              	.LVL373:
 182:src/keys.c    **** 
 4554              		.loc 1 182 1 view .LVU1338
ARM GAS  /tmp/ccvq0xdJ.s 			page 157


 4555 001c 1844     		add	r0, r0, r3
 4556 001e 7047     		bx	lr
 4557              	.L512:
 4558              		.align	2
 4559              	.L511:
 4560 0020 ABAAAA2A 		.word	715827883
 4561              		.cfi_endproc
 4562              	.LFE6:
 4564              		.section	.text.row_column_to_keycode,"ax",%progbits
 4565              		.align	1
 4566              		.p2align 2,,3
 4567              		.global	row_column_to_keycode
 4568              		.syntax unified
 4569              		.thumb
 4570              		.thumb_func
 4571              		.fpu fpv4-sp-d16
 4573              	row_column_to_keycode:
 4574              	.LVL374:
 4575              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4576              		.loc 1 190 1 is_stmt 1 view -0
 4577              		.cfi_startproc
 4578              		@ args = 0, pretend = 0, frame = 0
 4579              		@ frame_needed = 0, uses_anonymous_args = 0
 4580              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4581              		.loc 1 191 2 view .LVU1340
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4582              		.loc 1 191 14 is_stmt 0 view .LVU1341
 4583 0000 0E4A     		ldr	r2, .L519
 4584 0002 82FB0032 		smull	r3, r2, r2, r0
 4585 0006 C317     		asrs	r3, r0, #31
 4586 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4587              		.loc 1 192 14 view .LVU1342
 4588 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4589              		.loc 1 191 6 view .LVU1343
 4590 0010 013B     		subs	r3, r3, #1
 4591              	.LVL375:
 192:src/keys.c    **** 
 4592              		.loc 1 192 2 is_stmt 1 view .LVU1344
 192:src/keys.c    **** 
 4593              		.loc 1 192 14 is_stmt 0 view .LVU1345
 4594 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4595              	.LVL376:
 194:src/keys.c    **** 		return -1;
 4596              		.loc 1 194 5 view .LVU1346
 4597 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4598              		.loc 1 192 6 view .LVU1347
 4599 0018 00F1FF30 		add	r0, r0, #-1
 4600              	.LVL377:
 194:src/keys.c    **** 		return -1;
 4601              		.loc 1 194 2 is_stmt 1 view .LVU1348
 194:src/keys.c    **** 		return -1;
 4602              		.loc 1 194 5 is_stmt 0 view .LVU1349
ARM GAS  /tmp/ccvq0xdJ.s 			page 158


 4603 001c 0AD8     		bhi	.L518
 194:src/keys.c    **** 		return -1;
 4604              		.loc 1 194 36 discriminator 1 view .LVU1350
 4605 001e 012B     		cmp	r3, #1
 4606 0020 CCBF     		ite	gt
 4607 0022 0422     		movgt	r2, #4
 4608 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4609              		.loc 1 194 25 discriminator 1 view .LVU1351
 4610 0026 8242     		cmp	r2, r0
 4611 0028 04DB     		blt	.L518
 196:src/keys.c    **** }
 4612              		.loc 1 196 2 is_stmt 1 view .LVU1352
 196:src/keys.c    **** }
 4613              		.loc 1 196 13 is_stmt 0 view .LVU1353
 4614 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4615              	.LVL378:
 196:src/keys.c    **** }
 4616              		.loc 1 196 17 view .LVU1354
 4617 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4618              	.LVL379:
 196:src/keys.c    **** }
 4619              		.loc 1 196 17 view .LVU1355
 4620 0032 7047     		bx	lr
 4621              	.LVL380:
 4622              	.L518:
 195:src/keys.c    **** 	return row * 6 + col;
 4623              		.loc 1 195 10 view .LVU1356
 4624 0034 4FF0FF30 		mov	r0, #-1
 4625              	.LVL381:
 197:src/keys.c    **** 
 4626              		.loc 1 197 1 view .LVU1357
 4627 0038 7047     		bx	lr
 4628              	.L520:
 4629 003a 00BF     		.align	2
 4630              	.L519:
 4631 003c 67666666 		.word	1717986919
 4632              		.cfi_endproc
 4633              	.LFE7:
 4635              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4636              		.align	1
 4637              		.p2align 2,,3
 4638              		.global	keycode_to_digit_or_register
 4639              		.syntax unified
 4640              		.thumb
 4641              		.thumb_func
 4642              		.fpu fpv4-sp-d16
 4644              	keycode_to_digit_or_register:
 4645              	.LVL382:
 4646              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4647              		.loc 1 211 1 is_stmt 1 view -0
 4648              		.cfi_startproc
 4649              		@ args = 0, pretend = 0, frame = 0
 4650              		@ frame_needed = 0, uses_anonymous_args = 0
 4651              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
ARM GAS  /tmp/ccvq0xdJ.s 			page 159


 4652              		.loc 1 212 3 view .LVU1359
 234:src/keys.c    **** }
 4653              		.loc 1 234 3 view .LVU1360
 4654              	.LBB513:
 4655              	.LBI513:
 131:src/keys.c    **** {
 4656              		.loc 1 131 12 view .LVU1361
 4657              	.LBB514:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4658              		.loc 1 133 2 view .LVU1362
 143:src/keys.c    **** }
 4659              		.loc 1 143 2 view .LVU1363
 143:src/keys.c    **** }
 4660              		.loc 1 143 23 is_stmt 0 view .LVU1364
 4661 0000 024B     		ldr	r3, .L522
 4662              	.LBE514:
 4663              	.LBE513:
 234:src/keys.c    **** }
 4664              		.loc 1 234 28 view .LVU1365
 4665 0002 034A     		ldr	r2, .L522+4
 4666              	.LBB516:
 4667              	.LBB515:
 143:src/keys.c    **** }
 4668              		.loc 1 143 23 view .LVU1366
 4669 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4670              	.LBE515:
 4671              	.LBE516:
 235:src/keys.c    **** #else
 4672              		.loc 1 235 1 view .LVU1367
 4673 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4674              	.LVL383:
 235:src/keys.c    **** #else
 4675              		.loc 1 235 1 view .LVU1368
 4676 0008 7047     		bx	lr
 4677              	.L523:
 4678 000a 00BF     		.align	2
 4679              	.L522:
 4680 000c 00000000 		.word	.LANCHOR6
 4681 0010 00000000 		.word	.LANCHOR5
 4682              		.cfi_endproc
 4683              	.LFE8:
 4685              		.section	.text.init_state,"ax",%progbits
 4686              		.align	1
 4687              		.p2align 2,,3
 4688              		.global	init_state
 4689              		.syntax unified
 4690              		.thumb
 4691              		.thumb_func
 4692              		.fpu fpv4-sp-d16
 4694              	init_state:
 4695              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4696              		.loc 1 615 23 is_stmt 1 view -0
 4697              		.cfi_startproc
 4698              		@ args = 0, pretend = 0, frame = 0
 4699              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
ARM GAS  /tmp/ccvq0xdJ.s 			page 160


 4700              		.loc 1 617 2 view .LVU1370
 615:src/keys.c    **** #ifndef REALBUILD
 4701              		.loc 1 615 23 is_stmt 0 view .LVU1371
 4702 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4703              		.cfi_def_cfa_offset 32
 4704              		.cfi_offset 3, -32
 4705              		.cfi_offset 4, -28
 4706              		.cfi_offset 5, -24
 4707              		.cfi_offset 6, -20
 4708              		.cfi_offset 7, -16
 4709              		.cfi_offset 8, -12
 4710              		.cfi_offset 9, -8
 4711              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4712              		.loc 1 617 25 view .LVU1372
 4713 0004 1B4C     		ldr	r4, .L526
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4714              		.loc 1 625 10 view .LVU1373
 4715 0006 4FF00008 		mov	r8, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4716              		.loc 1 629 2 view .LVU1374
 4717 000a 4146     		mov	r1, r8
 4718 000c 1422     		movs	r2, #20
 4719 000e 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4720              		.loc 1 617 25 view .LVU1375
 4721 0012 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4722              		.loc 1 618 25 view .LVU1376
 4723 0014 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4724              		.loc 1 622 10 view .LVU1377
 4725 0016 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4726              		.loc 1 623 10 view .LVU1378
 4727 0018 94F91390 		ldrsb	r9, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4728              		.loc 1 625 10 view .LVU1379
 4729 001c 84F81F80 		strb	r8, [r4, #31]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4730              		.loc 1 629 2 view .LVU1380
 4731 0020 FFF7FEFF 		bl	xset
 4732              	.LVL384:
 667:src/keys.c    **** #endif
 4733              		.loc 1 667 2 view .LVU1381
 4734 0024 144B     		ldr	r3, .L526+4
 4735 0026 1B68     		ldr	r3, [r3]
 4736 0028 93F8DD27 		ldrb	r2, [r3, #2013]	@ zero_extendqisi2
 4737 002c 68F3C712 		bfi	r2, r8, #7, #1
 4738 0030 83F8DD27 		strb	r2, [r3, #2013]
 675:src/keys.c    **** 	update_program_bounds(1);
 4739              		.loc 1 675 17 view .LVU1382
 4740 0034 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 674:src/keys.c    **** 	State2.runmode = 1;
 4741              		.loc 1 674 14 view .LVU1383
 4742 0036 0722     		movs	r2, #7
 675:src/keys.c    **** 	update_program_bounds(1);
ARM GAS  /tmp/ccvq0xdJ.s 			page 161


 4743              		.loc 1 675 17 view .LVU1384
 4744 0038 43F04003 		orr	r3, r3, #64
 676:src/keys.c    **** 	set_lift();
 4745              		.loc 1 676 2 view .LVU1385
 4746 003c 0120     		movs	r0, #1
 674:src/keys.c    **** 	State2.runmode = 1;
 4747              		.loc 1 674 14 view .LVU1386
 4748 003e E273     		strb	r2, [r4, #15]
 675:src/keys.c    **** 	update_program_bounds(1);
 4749              		.loc 1 675 17 view .LVU1387
 4750 0040 A375     		strb	r3, [r4, #22]
 676:src/keys.c    **** 	set_lift();
 4751              		.loc 1 676 2 view .LVU1388
 4752 0042 FFF7FEFF 		bl	update_program_bounds
 4753              	.LVL385:
 677:src/keys.c    **** 
 4754              		.loc 1 677 2 view .LVU1389
 4755 0046 FFF7FEFF 		bl	set_lift
 4756              	.LVL386:
 684:src/keys.c    **** 	State2.flags = a;
 4757              		.loc 1 684 15 view .LVU1390
 4758 004a E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 685:src/keys.c    **** #else
 4759              		.loc 1 685 15 view .LVU1391
 4760 004c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 689:src/keys.c    **** }
 4761              		.loc 1 689 15 view .LVU1392
 4762 004e 0B49     		ldr	r1, .L526+8
 682:src/keys.c    **** #ifndef REALBUILD
 4763              		.loc 1 682 10 view .LVU1393
 4764 0050 84F81390 		strb	r9, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4765              		.loc 1 617 25 view .LVU1394
 4766 0054 05F00105 		and	r5, r5, #1
 4767              	.LVL387:
 618:src/keys.c    **** #else
 4768              		.loc 1 618 2 is_stmt 1 view .LVU1395
 618:src/keys.c    **** #else
 4769              		.loc 1 618 25 is_stmt 0 view .LVU1396
 4770 0058 F609     		lsrs	r6, r6, #7
 4771              	.LVL388:
 622:src/keys.c    **** 	int k = LastKey;
 4772              		.loc 1 622 2 is_stmt 1 view .LVU1397
 622:src/keys.c    **** 	int k = LastKey;
 4773              		.loc 1 622 10 is_stmt 0 view .LVU1398
 4774 005a FFB2     		uxtb	r7, r7
 4775              	.LVL389:
 623:src/keys.c    **** 
 4776              		.loc 1 623 2 is_stmt 1 view .LVU1399
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4777              		.loc 1 625 2 view .LVU1400
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4778              		.loc 1 629 2 view .LVU1401
 667:src/keys.c    **** #endif
 4779              		.loc 1 667 2 view .LVU1402
 674:src/keys.c    **** 	State2.runmode = 1;
 4780              		.loc 1 674 2 view .LVU1403
ARM GAS  /tmp/ccvq0xdJ.s 			page 162


 675:src/keys.c    **** 	update_program_bounds(1);
 4781              		.loc 1 675 2 view .LVU1404
 676:src/keys.c    **** 	set_lift();
 4782              		.loc 1 676 2 view .LVU1405
 677:src/keys.c    **** 
 4783              		.loc 1 677 2 view .LVU1406
 681:src/keys.c    **** 	LastKey = k;
 4784              		.loc 1 681 2 view .LVU1407
 684:src/keys.c    **** 	State2.flags = a;
 4785              		.loc 1 684 15 is_stmt 0 view .LVU1408
 4786 005c 66F3C712 		bfi	r2, r6, #7, #1
 685:src/keys.c    **** #else
 4787              		.loc 1 685 15 view .LVU1409
 4788 0060 65F30003 		bfi	r3, r5, #0, #1
 689:src/keys.c    **** }
 4789              		.loc 1 689 15 view .LVU1410
 4790 0064 6420     		movs	r0, #100
 684:src/keys.c    **** 	State2.flags = a;
 4791              		.loc 1 684 15 view .LVU1411
 4792 0066 E275     		strb	r2, [r4, #23]
 685:src/keys.c    **** #else
 4793              		.loc 1 685 15 view .LVU1412
 4794 0068 2376     		strb	r3, [r4, #24]
 681:src/keys.c    **** 	LastKey = k;
 4795              		.loc 1 681 10 view .LVU1413
 4796 006a A774     		strb	r7, [r4, #18]
 682:src/keys.c    **** #ifndef REALBUILD
 4797              		.loc 1 682 2 is_stmt 1 view .LVU1414
 684:src/keys.c    **** 	State2.flags = a;
 4798              		.loc 1 684 2 view .LVU1415
 685:src/keys.c    **** #else
 4799              		.loc 1 685 2 view .LVU1416
 689:src/keys.c    **** }
 4800              		.loc 1 689 2 view .LVU1417
 689:src/keys.c    **** }
 4801              		.loc 1 689 15 is_stmt 0 view .LVU1418
 4802 006c 0860     		str	r0, [r1]
 690:src/keys.c    **** 
 4803              		.loc 1 690 1 view .LVU1419
 4804 006e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4805              	.LVL390:
 4806              	.L527:
 690:src/keys.c    **** 
 4807              		.loc 1 690 1 view .LVU1420
 4808 0072 00BF     		.align	2
 4809              	.L526:
 4810 0074 00000000 		.word	StateWhileOn
 4811 0078 00000000 		.word	main_ram
 4812 007c 00000000 		.word	ShowRegister
 4813              		.cfi_endproc
 4814              	.LFE13:
 4816              		.section	.text.process_cmplx,"ax",%progbits
 4817              		.align	1
 4818              		.p2align 2,,3
 4819              		.syntax unified
 4820              		.thumb
 4821              		.thumb_func
ARM GAS  /tmp/ccvq0xdJ.s 			page 163


 4822              		.fpu fpv4-sp-d16
 4824              	process_cmplx:
 4825              	.LVL391:
 4826              	.LFB27:
1468:src/keys.c    **** #define _RARG   0xFF00
 4827              		.loc 1 1468 43 is_stmt 1 view -0
 4828              		.cfi_startproc
 4829              		@ args = 0, pretend = 0, frame = 0
 4830              		@ frame_needed = 0, uses_anonymous_args = 0
1473:src/keys.c    **** 		// Row 1
 4831              		.loc 1 1473 2 view .LVU1422
1524:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4832              		.loc 1 1524 2 view .LVU1423
 4833              	.LBB517:
 4834              	.LBI517:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4835              		.loc 1 114 13 view .LVU1424
 4836              	.LBE517:
 115:src/keys.c    **** }
 4837              		.loc 1 115 2 view .LVU1425
 4838              	.LBB534:
 4839              	.LBB518:
 4840              	.LBI518:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4841              		.loc 1 104 20 view .LVU1426
 4842              	.LBB519:
 105:src/keys.c    **** 	State2.shifts = shift;
 4843              		.loc 1 105 2 view .LVU1427
 4844              	.LBB520:
 4845              	.LBI520:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4846              		.loc 1 96 13 view .LVU1428
 4847              	.LBB521:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4848              		.loc 1 97 2 view .LVU1429
 4849              	.LBE521:
 4850              	.LBE520:
 4851              	.LBE519:
 4852              	.LBE518:
 4853              	.LBE534:
1468:src/keys.c    **** #define _RARG   0xFF00
 4854              		.loc 1 1468 43 is_stmt 0 view .LVU1430
 4855 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4856              		.cfi_def_cfa_offset 24
 4857              		.cfi_offset 3, -24
 4858              		.cfi_offset 4, -20
 4859              		.cfi_offset 5, -16
 4860              		.cfi_offset 6, -12
 4861              		.cfi_offset 7, -8
 4862              		.cfi_offset 14, -4
1468:src/keys.c    **** #define _RARG   0xFF00
 4863              		.loc 1 1468 43 view .LVU1431
 4864 0002 0546     		mov	r5, r0
 4865              	.LBB535:
 4866              	.LBB530:
 4867              	.LBB526:
 4868              	.LBB524:
ARM GAS  /tmp/ccvq0xdJ.s 			page 164


 4869              	.LBB522:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4870              		.loc 1 97 18 view .LVU1432
 4871 0004 FFF7FEFF 		bl	shift_down
 4872              	.LVL392:
  98:src/keys.c    **** }
 4873              		.loc 1 98 2 is_stmt 1 view .LVU1433
  98:src/keys.c    **** }
 4874              		.loc 1 98 52 is_stmt 0 view .LVU1434
 4875 0008 00B3     		cbz	r0, .L546
 4876 000a 2E4F     		ldr	r7, .L554
 4877 000c 0446     		mov	r4, r0
 4878              	.L529:
 4879              	.LVL393:
  98:src/keys.c    **** }
 4880              		.loc 1 98 52 view .LVU1435
 4881              	.LBE522:
 4882              	.LBE524:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4883              		.loc 1 106 2 is_stmt 1 view .LVU1436
 4884              	.LBE526:
 4885              	.LBE530:
 4886              	.LBE535:
 4887              	.LBB536:
 4888              	.LBB537:
 158:src/keys.c    **** }
 4889              		.loc 1 158 23 is_stmt 0 view .LVU1437
 4890 000e 2E4B     		ldr	r3, .L554+4
 4891              	.LBE537:
 4892              	.LBE536:
1526:src/keys.c    **** 	State2.cmplx = 0;
 4893              		.loc 1 1526 21 view .LVU1438
 4894 0010 2E48     		ldr	r0, .L554+8
 4895              	.LBB540:
 4896              	.LBB538:
 158:src/keys.c    **** }
 4897              		.loc 1 158 23 view .LVU1439
 4898 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4899              	.LBE538:
 4900              	.LBE540:
1527:src/keys.c    **** 
 4901              		.loc 1 1527 15 view .LVU1440
 4902 0014 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
1526:src/keys.c    **** 	State2.cmplx = 0;
 4903              		.loc 1 1526 21 view .LVU1441
 4904 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4905              	.LBB541:
 4906              	.LBB531:
 4907              	.LBB527:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4908              		.loc 1 106 16 view .LVU1442
 4909 001a 0021     		movs	r1, #0
 4910              	.LBE527:
 4911              	.LBE531:
 4912              	.LBE541:
1526:src/keys.c    **** 	State2.cmplx = 0;
 4913              		.loc 1 1526 21 view .LVU1443
ARM GAS  /tmp/ccvq0xdJ.s 			page 165


 4914 001c 30F81360 		ldrh	r6, [r0, r3, lsl #1]
 4915              	.LBB542:
 4916              	.LBB532:
 4917              	.LBB528:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4918              		.loc 1 106 16 view .LVU1444
 4919 0020 3974     		strb	r1, [r7, #16]
 108:src/keys.c    **** }
 4920              		.loc 1 108 2 is_stmt 1 view .LVU1445
 4921              	.LVL394:
 108:src/keys.c    **** }
 4922              		.loc 1 108 2 is_stmt 0 view .LVU1446
 4923              	.LBE528:
 4924              	.LBE532:
 4925              	.LBE542:
1525:src/keys.c    **** 	int op = op_map[lc][shift];
 4926              		.loc 1 1525 2 is_stmt 1 view .LVU1447
 4927              	.LBB543:
 4928              	.LBI536:
 146:src/keys.c    **** {
 4929              		.loc 1 146 12 view .LVU1448
 4930              	.LBB539:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4931              		.loc 1 148 2 view .LVU1449
 158:src/keys.c    **** }
 4932              		.loc 1 158 2 view .LVU1450
 158:src/keys.c    **** }
 4933              		.loc 1 158 2 is_stmt 0 view .LVU1451
 4934              	.LBE539:
 4935              	.LBE543:
1526:src/keys.c    **** 	State2.cmplx = 0;
 4936              		.loc 1 1526 2 is_stmt 1 view .LVU1452
1527:src/keys.c    **** 
 4937              		.loc 1 1527 2 view .LVU1453
1529:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4938              		.loc 1 1529 5 is_stmt 0 view .LVU1454
 4939 0022 06F47F43 		and	r3, r6, #65280
1527:src/keys.c    **** 
 4940              		.loc 1 1527 15 view .LVU1455
 4941 0026 61F34102 		bfi	r2, r1, #1, #1
1529:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4942              		.loc 1 1529 5 view .LVU1456
 4943 002a B3F57F4F 		cmp	r3, #65280
1527:src/keys.c    **** 
 4944              		.loc 1 1527 15 view .LVU1457
 4945 002e 7A75     		strb	r2, [r7, #21]
1529:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4946              		.loc 1 1529 2 is_stmt 1 view .LVU1458
1529:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4947              		.loc 1 1529 5 is_stmt 0 view .LVU1459
 4948 0030 36D0     		beq	.L549
1533:src/keys.c    **** 		// HYP
 4949              		.loc 1 1533 2 is_stmt 1 view .LVU1460
1533:src/keys.c    **** 		// HYP
 4950              		.loc 1 1533 5 is_stmt 0 view .LVU1461
 4951 0032 DDB1     		cbz	r5, .L550
1543:src/keys.c    **** 		switch (c) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 166


 4952              		.loc 1 1543 2 is_stmt 1 view .LVU1462
1543:src/keys.c    **** 		switch (c) {
 4953              		.loc 1 1543 5 is_stmt 0 view .LVU1463
 4954 0034 2CB1     		cbz	r4, .L534
1544:src/keys.c    **** 		case K_CMPLX:
 4955              		.loc 1 1544 3 is_stmt 1 view .LVU1464
 4956 0036 242D     		cmp	r5, #36
 4957 0038 2CD0     		beq	.L535
 4958 003a 2D2D     		cmp	r5, #45
 4959 003c 23D0     		beq	.L536
 4960 003e 1F2D     		cmp	r5, #31
 4961 0040 0CD0     		beq	.L551
 4962              	.L534:
1568:src/keys.c    **** #else
 4963              		.loc 1 1568 2 view .LVU1465
 4964              	.LVL395:
 4965              	.LBB544:
 4966              	.LBI544:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4967              		.loc 1 714 12 view .LVU1466
 4968              	.LBB545:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4969              		.loc 1 715 2 view .LVU1467
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4970              		.loc 1 715 6 is_stmt 0 view .LVU1468
 4971 0042 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4972              		.loc 1 715 5 view .LVU1469
 4973 0044 012B     		cmp	r3, #1
 4974 0046 04D0     		beq	.L552
 4975              	.LVL396:
 4976              	.L528:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4977              		.loc 1 715 5 view .LVU1470
 4978              	.LBE545:
 4979              	.LBE544:
1576:src/keys.c    **** 
 4980              		.loc 1 1576 1 view .LVU1471
 4981 0048 3046     		mov	r0, r6
 4982 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4983              	.LVL397:
 4984              	.L546:
 4985              	.LBB551:
 4986              	.LBB533:
 4987              	.LBB529:
 4988              	.LBB525:
 4989              	.LBB523:
  98:src/keys.c    **** }
 4990              		.loc 1 98 52 view .LVU1472
 4991 004c 1D4F     		ldr	r7, .L554
 4992 004e 3C7C     		ldrb	r4, [r7, #16]	@ zero_extendqisi2
 4993 0050 DDE7     		b	.L529
 4994              	.LVL398:
 4995              	.L552:
  98:src/keys.c    **** }
 4996              		.loc 1 98 52 view .LVU1473
 4997              	.LBE523:
ARM GAS  /tmp/ccvq0xdJ.s 			page 167


 4998              	.LBE525:
 4999              	.LBE529:
 5000              	.LBE533:
 5001              	.LBE551:
 5002              	.LBB552:
 5003              	.LBB546:
 5004 0052 3046     		mov	r0, r6
 5005              	.LBE546:
 5006              	.LBE552:
1576:src/keys.c    **** 
 5007              		.loc 1 1576 1 view .LVU1474
 5008 0054 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 5009              		.cfi_remember_state
 5010              		.cfi_restore 14
 5011              		.cfi_restore 7
 5012              		.cfi_restore 6
 5013              		.cfi_restore 5
 5014              		.cfi_restore 4
 5015              		.cfi_restore 3
 5016              		.cfi_def_cfa_offset 0
 5017              	.LVL399:
 5018              	.LBB553:
 5019              	.LBB547:
1576:src/keys.c    **** 
 5020              		.loc 1 1576 1 view .LVU1475
 5021 0058 FFF7FEBF 		b	check_confirm.part.0
 5022              	.LVL400:
 5023              	.L551:
 5024              		.cfi_restore_state
1576:src/keys.c    **** 
 5025              		.loc 1 1576 1 view .LVU1476
 5026              	.LBE547:
 5027              	.LBE553:
1550:src/keys.c    **** 				if (is_bad_cmdline())
 5028              		.loc 1 1550 4 is_stmt 1 view .LVU1477
1550:src/keys.c    **** 				if (is_bad_cmdline())
 5029              		.loc 1 1550 7 is_stmt 0 view .LVU1478
 5030 005c 332E     		cmp	r6, #51
 5031 005e 02D0     		beq	.L548
1551:src/keys.c    **** 					return STATE_UNFINISHED;
 5032              		.loc 1 1551 5 is_stmt 1 view .LVU1479
1551:src/keys.c    **** 					return STATE_UNFINISHED;
 5033              		.loc 1 1551 9 is_stmt 0 view .LVU1480
 5034 0060 FFF7FEFF 		bl	is_bad_cmdline
 5035              	.LVL401:
1551:src/keys.c    **** 					return STATE_UNFINISHED;
 5036              		.loc 1 1551 8 view .LVU1481
 5037 0064 28B3     		cbz	r0, .L553
 5038              	.L548:
1540:src/keys.c    **** 	}
 5039              		.loc 1 1540 3 is_stmt 1 view .LVU1482
1540:src/keys.c    **** 	}
 5040              		.loc 1 1540 10 is_stmt 0 view .LVU1483
 5041 0066 3326     		movs	r6, #51
 5042              	.LVL402:
1576:src/keys.c    **** 
 5043              		.loc 1 1576 1 view .LVU1484
ARM GAS  /tmp/ccvq0xdJ.s 			page 168


 5044 0068 3046     		mov	r0, r6
 5045 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5046              	.LVL403:
 5047              	.L550:
1535:src/keys.c    **** 		//		print_debug(100,1);
 5048              		.loc 1 1535 3 is_stmt 1 view .LVU1485
 5049 006c FFF7FEFF 		bl	process_cmdline_set_lift
 5050              	.LVL404:
1537:src/keys.c    **** 		State2.dot = op;
 5051              		.loc 1 1537 3 view .LVU1486
1538:src/keys.c    **** 		State2.cmplx = 1;
 5052              		.loc 1 1538 3 view .LVU1487
1539:src/keys.c    **** 		return STATE_UNFINISHED;
 5053              		.loc 1 1539 3 view .LVU1488
1539:src/keys.c    **** 		return STATE_UNFINISHED;
 5054              		.loc 1 1539 16 is_stmt 0 view .LVU1489
 5055 0070 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 5056 0072 06F00103 		and	r3, r6, #1
 5057 0076 9B01     		lsls	r3, r3, #6
 5058 0078 43F02203 		orr	r3, r3, #34
 5059 007c 22F06202 		bic	r2, r2, #98
 5060 0080 1343     		orrs	r3, r3, r2
 5061 0082 7B75     		strb	r3, [r7, #21]
 5062 0084 EFE7     		b	.L548
 5063              	.L536:
1546:src/keys.c    **** 			break;
 5064              		.loc 1 1546 4 is_stmt 1 view .LVU1490
 5065              	.LVL405:
 5066              	.LBB554:
 5067              	.LBI554:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5068              		.loc 1 104 20 view .LVU1491
 5069              	.LBB555:
 105:src/keys.c    **** 	State2.shifts = shift;
 5070              		.loc 1 105 2 view .LVU1492
 5071              	.LBB556:
 5072              	.LBI556:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5073              		.loc 1 96 13 view .LVU1493
 5074              	.LBB557:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5075              		.loc 1 97 2 view .LVU1494
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5076              		.loc 1 97 18 is_stmt 0 view .LVU1495
 5077 0086 FFF7FEFF 		bl	shift_down
 5078              	.LVL406:
  98:src/keys.c    **** }
 5079              		.loc 1 98 2 is_stmt 1 view .LVU1496
 5080              	.LBE557:
 5081              	.LBE556:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5082              		.loc 1 106 2 view .LVU1497
 5083              	.LBE555:
 5084              	.LBE554:
 5085              	.LBB559:
 5086              	.LBB548:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/ccvq0xdJ.s 			page 169


 5087              		.loc 1 715 6 is_stmt 0 view .LVU1498
 5088 008a 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5089              		.loc 1 715 5 view .LVU1499
 5090 008c 012B     		cmp	r3, #1
 5091              	.LBE548:
 5092              	.LBE559:
 5093              	.LBB560:
 5094              	.LBB558:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5095              		.loc 1 106 16 view .LVU1500
 5096 008e 3C74     		strb	r4, [r7, #16]
 108:src/keys.c    **** }
 5097              		.loc 1 108 2 is_stmt 1 view .LVU1501
 5098              	.LVL407:
 108:src/keys.c    **** }
 5099              		.loc 1 108 2 is_stmt 0 view .LVU1502
 5100              	.LBE558:
 5101              	.LBE560:
1568:src/keys.c    **** #else
 5102              		.loc 1 1568 2 is_stmt 1 view .LVU1503
 5103              	.LBB561:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5104              		.loc 1 714 12 view .LVU1504
 5105              	.LBB549:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5106              		.loc 1 715 2 view .LVU1505
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5107              		.loc 1 715 5 is_stmt 0 view .LVU1506
 5108 0090 DAD1     		bne	.L528
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5109              		.loc 1 715 5 view .LVU1507
 5110 0092 DEE7     		b	.L552
 5111              	.LVL408:
 5112              	.L535:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5113              		.loc 1 715 5 view .LVU1508
 5114              	.LBE549:
 5115              	.LBE561:
1560:src/keys.c    **** 			break;
 5116              		.loc 1 1560 4 is_stmt 1 view .LVU1509
 5117 0094 FFF7FEFF 		bl	init_state
 5118              	.LVL409:
1561:src/keys.c    **** 
 5119              		.loc 1 1561 4 view .LVU1510
1568:src/keys.c    **** #else
 5120              		.loc 1 1568 2 view .LVU1511
 5121              	.LBB562:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5122              		.loc 1 714 12 view .LVU1512
 5123              	.LBB550:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5124              		.loc 1 715 2 view .LVU1513
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5125              		.loc 1 715 6 is_stmt 0 view .LVU1514
 5126 0098 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/ccvq0xdJ.s 			page 170


 5127              		.loc 1 715 5 view .LVU1515
 5128 009a 012B     		cmp	r3, #1
 5129 009c D4D1     		bne	.L528
 5130 009e D8E7     		b	.L552
 5131              	.LVL410:
 5132              	.L549:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5133              		.loc 1 715 5 view .LVU1516
 5134              	.LBE550:
 5135              	.LBE562:
1530:src/keys.c    **** 		return STATE_UNFINISHED;
 5136              		.loc 1 1530 3 is_stmt 1 view .LVU1517
 5137              	.LBB563:
 5138              	.LBI563:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 5139              		.loc 1 552 13 view .LVU1518
 5140              	.LBB564:
 553:src/keys.c    **** 		return;
 5141              		.loc 1 553 2 view .LVU1519
 553:src/keys.c    **** 		return;
 5142              		.loc 1 553 6 is_stmt 0 view .LVU1520
 5143 00a0 FFF7FEFF 		bl	is_bad_cmdline
 5144              	.LVL411:
 553:src/keys.c    **** 		return;
 5145              		.loc 1 553 5 view .LVU1521
 5146 00a4 0028     		cmp	r0, #0
 5147 00a6 DED1     		bne	.L548
 5148 00a8 F0B2     		uxtb	r0, r6
 5149 00aa FFF7FEFF 		bl	init_arg.part.0
 5150              	.LVL412:
 5151              	.LBE564:
 5152              	.LBE563:
1531:src/keys.c    **** 	}
 5153              		.loc 1 1531 10 view .LVU1522
 5154 00ae 3326     		movs	r6, #51
 5155              	.LVL413:
1531:src/keys.c    **** 	}
 5156              		.loc 1 1531 10 view .LVU1523
 5157 00b0 CAE7     		b	.L528
 5158              	.LVL414:
 5159              	.L553:
1553:src/keys.c    **** 				State2.cmplx = 1;
 5160              		.loc 1 1553 5 is_stmt 1 view .LVU1524
 5161 00b2 FFF7FEFF 		bl	process_cmdline_set_lift
 5162              	.LVL415:
1554:src/keys.c    **** 				State2.test = op;
 5163              		.loc 1 1554 5 view .LVU1525
1554:src/keys.c    **** 				State2.test = op;
 5164              		.loc 1 1554 18 is_stmt 0 view .LVU1526
 5165 00b6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
1555:src/keys.c    **** 			}
 5166              		.loc 1 1555 17 view .LVU1527
 5167 00b8 FE73     		strb	r6, [r7, #15]
1554:src/keys.c    **** 				State2.test = op;
 5168              		.loc 1 1554 18 view .LVU1528
 5169 00ba 43F00203 		orr	r3, r3, #2
 5170 00be 7B75     		strb	r3, [r7, #21]
ARM GAS  /tmp/ccvq0xdJ.s 			page 171


1555:src/keys.c    **** 			}
 5171              		.loc 1 1555 5 is_stmt 1 view .LVU1529
1557:src/keys.c    **** 
 5172              		.loc 1 1557 11 is_stmt 0 view .LVU1530
 5173 00c0 3326     		movs	r6, #51
 5174              	.LVL416:
1557:src/keys.c    **** 
 5175              		.loc 1 1557 11 view .LVU1531
 5176 00c2 C1E7     		b	.L528
 5177              	.L555:
 5178              		.align	2
 5179              	.L554:
 5180 00c4 00000000 		.word	StateWhileOn
 5181 00c8 00000000 		.word	.LANCHOR1
 5182 00cc 00000000 		.word	.LANCHOR7
 5183              		.cfi_endproc
 5184              	.LFE27:
 5186              		.section	.text.soft_init_state,"ax",%progbits
 5187              		.align	1
 5188              		.p2align 2,,3
 5189              		.global	soft_init_state
 5190              		.syntax unified
 5191              		.thumb
 5192              		.thumb_func
 5193              		.fpu fpv4-sp-d16
 5195              	soft_init_state:
 5196              	.LFB14:
 692:src/keys.c    **** 	int soft;
 5197              		.loc 1 692 28 is_stmt 1 view -0
 5198              		.cfi_startproc
 5199              		@ args = 0, pretend = 0, frame = 0
 5200              		@ frame_needed = 0, uses_anonymous_args = 0
 693:src/keys.c    **** 	unsigned int runmode;
 5201              		.loc 1 693 2 view .LVU1533
 694:src/keys.c    **** 	unsigned int alphas;
 5202              		.loc 1 694 2 view .LVU1534
 695:src/keys.c    **** 
 5203              		.loc 1 695 2 view .LVU1535
 697:src/keys.c    **** 		CmdLineLength = 0;
 5204              		.loc 1 697 2 view .LVU1536
 692:src/keys.c    **** 	int soft;
 5205              		.loc 1 692 28 is_stmt 0 view .LVU1537
 5206 0000 38B5     		push	{r3, r4, r5, lr}
 5207              		.cfi_def_cfa_offset 16
 5208              		.cfi_offset 3, -16
 5209              		.cfi_offset 4, -12
 5210              		.cfi_offset 5, -8
 5211              		.cfi_offset 14, -4
 697:src/keys.c    **** 		CmdLineLength = 0;
 5212              		.loc 1 697 6 view .LVU1538
 5213 0002 114C     		ldr	r4, .L563
 697:src/keys.c    **** 		CmdLineLength = 0;
 5214              		.loc 1 697 5 view .LVU1539
 5215 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5216 0006 D3B9     		cbnz	r3, .L562
 703:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5217              		.loc 1 703 2 is_stmt 1 view .LVU1540
ARM GAS  /tmp/ccvq0xdJ.s 			page 172


 704:src/keys.c    **** 	runmode = State2.runmode;
 5218              		.loc 1 704 17 is_stmt 0 view .LVU1541
 5219 0008 104A     		ldr	r2, .L563+4
 5220 000a 6369     		ldr	r3, [r4, #20]
 704:src/keys.c    **** 	runmode = State2.runmode;
 5221              		.loc 1 704 60 view .LVU1542
 5222 000c 1A42     		tst	r2, r3
 5223 000e 0AD0     		beq	.L559
 5224              	.L560:
 5225              	.LVL417:
 705:src/keys.c    **** 	alphas = State2.alphas;
 5226              		.loc 1 705 2 is_stmt 1 view .LVU1543
 706:src/keys.c    **** 	init_state();
 5227              		.loc 1 706 17 is_stmt 0 view .LVU1544
 5228 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5229              	.LVL418:
 706:src/keys.c    **** 	init_state();
 5230              		.loc 1 706 2 is_stmt 1 view .LVU1545
 707:src/keys.c    **** 	if (soft) {
 5231              		.loc 1 707 2 view .LVU1546
 5232 0012 FFF7FEFF 		bl	init_state
 5233              	.LVL419:
 708:src/keys.c    **** 		State2.runmode = runmode;
 5234              		.loc 1 708 2 view .LVU1547
 709:src/keys.c    **** 		State2.alphas = alphas;
 5235              		.loc 1 709 3 view .LVU1548
 710:src/keys.c    **** 	}
 5236              		.loc 1 710 3 view .LVU1549
 710:src/keys.c    **** 	}
 5237              		.loc 1 710 17 is_stmt 0 view .LVU1550
 5238 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5239 0018 05F04805 		and	r5, r5, #72
 5240 001c 23F04803 		bic	r3, r3, #72
 5241 0020 2B43     		orrs	r3, r3, r5
 5242 0022 A375     		strb	r3, [r4, #22]
 712:src/keys.c    **** 
 5243              		.loc 1 712 1 view .LVU1551
 5244 0024 38BD     		pop	{r3, r4, r5, pc}
 5245              	.LVL420:
 5246              	.L559:
 704:src/keys.c    **** 	runmode = State2.runmode;
 5247              		.loc 1 704 60 discriminator 2 view .LVU1552
 5248 0026 E368     		ldr	r3, [r4, #12]
 5249 0028 23F47F03 		bic	r3, r3, #16711680
 5250 002c 23F47F43 		bic	r3, r3, #65280
 5251 0030 B3F1E06F 		cmp	r3, #117440512
 5252 0034 ECD1     		bne	.L560
 5253              	.LVL421:
 705:src/keys.c    **** 	alphas = State2.alphas;
 5254              		.loc 1 705 2 is_stmt 1 view .LVU1553
 706:src/keys.c    **** 	init_state();
 5255              		.loc 1 706 2 view .LVU1554
 707:src/keys.c    **** 	if (soft) {
 5256              		.loc 1 707 2 view .LVU1555
 712:src/keys.c    **** 
 5257              		.loc 1 712 1 is_stmt 0 view .LVU1556
 5258 0036 BDE83840 		pop	{r3, r4, r5, lr}
ARM GAS  /tmp/ccvq0xdJ.s 			page 173


 5259              		.cfi_remember_state
 5260              		.cfi_restore 14
 5261              		.cfi_restore 5
 5262              		.cfi_restore 4
 5263              		.cfi_restore 3
 5264              		.cfi_def_cfa_offset 0
 707:src/keys.c    **** 	if (soft) {
 5265              		.loc 1 707 2 view .LVU1557
 5266 003a FFF7FEBF 		b	init_state
 5267              	.LVL422:
 5268              	.L562:
 5269              		.cfi_restore_state
 5270              	.LBB567:
 5271              	.LBI567:
 692:src/keys.c    **** 	int soft;
 5272              		.loc 1 692 6 is_stmt 1 view .LVU1558
 5273              	.LBB568:
 698:src/keys.c    **** 		CmdLineEex = 0;
 5274              		.loc 1 698 3 view .LVU1559
 699:src/keys.c    **** 		CmdLineDot = 0;
 5275              		.loc 1 699 3 view .LVU1560
 700:src/keys.c    **** 		return;
 5276              		.loc 1 700 3 view .LVU1561
 698:src/keys.c    **** 		CmdLineEex = 0;
 5277              		.loc 1 698 17 is_stmt 0 view .LVU1562
 5278 003e 0023     		movs	r3, #0
 5279 0040 A383     		strh	r3, [r4, #28]	@ movhi
 700:src/keys.c    **** 		return;
 5280              		.loc 1 700 14 view .LVU1563
 5281 0042 A377     		strb	r3, [r4, #30]
 701:src/keys.c    **** 	}
 5282              		.loc 1 701 3 is_stmt 1 view .LVU1564
 5283              	.LBE568:
 5284              	.LBE567:
 712:src/keys.c    **** 
 5285              		.loc 1 712 1 is_stmt 0 view .LVU1565
 5286 0044 38BD     		pop	{r3, r4, r5, pc}
 5287              	.L564:
 5288 0046 00BF     		.align	2
 5289              	.L563:
 5290 0048 00000000 		.word	StateWhileOn
 5291 004c 002F2004 		.word	69218048
 5292              		.cfi_endproc
 5293              	.LFE14:
 5295              		.section	.text.finish_cpx_entry,"ax",%progbits
 5296              		.align	1
 5297              		.p2align 2,,3
 5298              		.global	finish_cpx_entry
 5299              		.syntax unified
 5300              		.thumb
 5301              		.thumb_func
 5302              		.fpu fpv4-sp-d16
 5304              	finish_cpx_entry:
 5305              	.LVL423:
 5306              	.LFB23:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5307              		.loc 1 1207 36 is_stmt 1 view -0
ARM GAS  /tmp/ccvq0xdJ.s 			page 174


 5308              		.cfi_startproc
 5309              		@ args = 0, pretend = 0, frame = 0
 5310              		@ frame_needed = 0, uses_anonymous_args = 0
1212:src/keys.c    **** 
 5311              		.loc 1 1212 2 view .LVU1567
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5312              		.loc 1 1207 36 is_stmt 0 view .LVU1568
 5313 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5314              		.cfi_def_cfa_offset 24
 5315              		.cfi_offset 3, -24
 5316              		.cfi_offset 4, -20
 5317              		.cfi_offset 5, -16
 5318              		.cfi_offset 6, -12
 5319              		.cfi_offset 7, -8
 5320              		.cfi_offset 14, -4
1212:src/keys.c    **** 
 5321              		.loc 1 1212 10 view .LVU1569
 5322 0002 314D     		ldr	r5, .L581
 5323 0004 2B68     		ldr	r3, [r5]
 5324 0006 93F8E427 		ldrb	r2, [r3, #2020]	@ zero_extendqisi2
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5325              		.loc 1 1207 36 view .LVU1570
 5326 000a 0646     		mov	r6, r0
1212:src/keys.c    **** 
 5327              		.loc 1 1212 5 view .LVU1571
 5328 000c 1007     		lsls	r0, r2, #28
 5329              	.LVL424:
1212:src/keys.c    **** 
 5330              		.loc 1 1212 5 view .LVU1572
 5331 000e 13D4     		bmi	.L566
1212:src/keys.c    **** 
 5332              		.loc 1 1212 20 discriminator 1 view .LVU1573
 5333 0010 93F8EB37 		ldrb	r3, [r3, #2027]	@ zero_extendqisi2
1212:src/keys.c    **** 
 5334              		.loc 1 1212 7 discriminator 1 view .LVU1574
 5335 0014 1907     		lsls	r1, r3, #28
 5336 0016 56D5     		bpl	.L565
1224:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5337              		.loc 1 1224 2 is_stmt 1 view .LVU1575
 5338              	.LBB575:
 5339              	.LBI575:
1200:src/keys.c    **** 	if (CmdLineLength) {
 5340              		.loc 1 1200 13 view .LVU1576
 5341              	.LBB576:
1201:src/keys.c    **** 		State2.state_lift = 0;
 5342              		.loc 1 1201 2 view .LVU1577
1201:src/keys.c    **** 		State2.state_lift = 0;
 5343              		.loc 1 1201 6 is_stmt 0 view .LVU1578
 5344 0018 2C4C     		ldr	r4, .L581+4
1201:src/keys.c    **** 		State2.state_lift = 0;
 5345              		.loc 1 1201 5 view .LVU1579
 5346 001a 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5347 001c 7BB9     		cbnz	r3, .L572
 5348              	.L573:
 5349              	.LBE576:
 5350              	.LBE575:
1225:src/keys.c    **** 	CLEAR_REAL;
ARM GAS  /tmp/ccvq0xdJ.s 			page 175


 5351              		.loc 1 1225 17 is_stmt 1 view .LVU1580
 5352 001e 6420     		movs	r0, #100
 5353 0020 FFF7FEFF 		bl	get_reg_n
 5354              	.LVL425:
 5355 0024 0746     		mov	r7, r0
 5356 0026 6520     		movs	r0, #101
 5357 0028 FFF7FEFF 		bl	get_reg_n
 5358              	.LVL426:
 5359 002c 0146     		mov	r1, r0
 5360 002e 3846     		mov	r0, r7
 5361 0030 FFF7FEFF 		bl	swap_reg
 5362              	.LVL427:
 5363 0034 2B68     		ldr	r3, [r5]
 5364 0036 0DE0     		b	.L570
 5365              	.L566:
1224:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5366              		.loc 1 1224 2 view .LVU1581
 5367              	.LBB578:
1200:src/keys.c    **** 	if (CmdLineLength) {
 5368              		.loc 1 1200 13 view .LVU1582
 5369              	.LBB577:
1201:src/keys.c    **** 		State2.state_lift = 0;
 5370              		.loc 1 1201 2 view .LVU1583
1201:src/keys.c    **** 		State2.state_lift = 0;
 5371              		.loc 1 1201 6 is_stmt 0 view .LVU1584
 5372 0038 244C     		ldr	r4, .L581+4
1201:src/keys.c    **** 		State2.state_lift = 0;
 5373              		.loc 1 1201 5 view .LVU1585
 5374 003a 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 5375 003c 32B1     		cbz	r2, .L569
 5376              	.L572:
1202:src/keys.c    **** 		process_cmdline();
 5377              		.loc 1 1202 3 is_stmt 1 view .LVU1586
1202:src/keys.c    **** 		process_cmdline();
 5378              		.loc 1 1202 21 is_stmt 0 view .LVU1587
 5379 003e E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5380 0040 6FF38613 		bfc	r3, #6, #1
 5381 0044 E375     		strb	r3, [r4, #23]
1203:src/keys.c    **** 	}
 5382              		.loc 1 1203 3 is_stmt 1 view .LVU1588
 5383 0046 FFF7FEFF 		bl	process_cmdline
 5384              	.LVL428:
 5385 004a 2B68     		ldr	r3, [r5]
 5386              	.L569:
 5387              	.LBE577:
 5388              	.LBE578:
1225:src/keys.c    **** 	CLEAR_REAL;
 5389              		.loc 1 1225 2 view .LVU1589
1225:src/keys.c    **** 	CLEAR_REAL;
 5390              		.loc 1 1225 6 is_stmt 0 view .LVU1590
 5391 004c 93F8EB27 		ldrb	r2, [r3, #2027]	@ zero_extendqisi2
1225:src/keys.c    **** 	CLEAR_REAL;
 5392              		.loc 1 1225 5 view .LVU1591
 5393 0050 1207     		lsls	r2, r2, #28
 5394 0052 E4D4     		bmi	.L573
 5395              	.L570:
1226:src/keys.c    **** 	CLEAR_IMAG;
ARM GAS  /tmp/ccvq0xdJ.s 			page 176


 5396              		.loc 1 1226 2 is_stmt 1 view .LVU1592
 5397 0054 93F8E417 		ldrb	r1, [r3, #2020]	@ zero_extendqisi2
1227:src/keys.c    **** 
 5398              		.loc 1 1227 2 is_stmt 0 view .LVU1593
 5399 0058 93F8EB27 		ldrb	r2, [r3, #2027]	@ zero_extendqisi2
1226:src/keys.c    **** 	CLEAR_IMAG;
 5400              		.loc 1 1226 2 view .LVU1594
 5401 005c 6FF3C301 		bfc	r1, #3, #1
1227:src/keys.c    **** 
 5402              		.loc 1 1227 2 view .LVU1595
 5403 0060 6FF3C302 		bfc	r2, #3, #1
1226:src/keys.c    **** 	CLEAR_IMAG;
 5404              		.loc 1 1226 2 view .LVU1596
 5405 0064 83F8E417 		strb	r1, [r3, #2020]
1227:src/keys.c    **** 
 5406              		.loc 1 1227 2 is_stmt 1 view .LVU1597
 5407 0068 83F8EB27 		strb	r2, [r3, #2027]
1229:src/keys.c    **** 
 5408              		.loc 1 1229 2 view .LVU1598
1229:src/keys.c    **** 
 5409              		.loc 1 1229 20 is_stmt 0 view .LVU1599
 5410 006c E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5411 006e 66F38612 		bfi	r2, r6, #6, #1
 5412              	.LVL429:
1229:src/keys.c    **** 
 5413              		.loc 1 1229 20 view .LVU1600
 5414 0072 E275     		strb	r2, [r4, #23]
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5415              		.loc 1 1231 2 is_stmt 1 view .LVU1601
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5416              		.loc 1 1231 21 is_stmt 0 view .LVU1602
 5417 0074 93F8DE37 		ldrb	r3, [r3, #2014]	@ zero_extendqisi2
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5418              		.loc 1 1231 5 view .LVU1603
 5419 0078 03F01803 		and	r3, r3, #24
 5420 007c 182B     		cmp	r3, #24
 5421 007e 22D1     		bne	.L565
 5422              	.LBB579:
 5423              	.LBI579:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5424              		.loc 1 1207 6 is_stmt 1 view .LVU1604
 5425              	.LVL430:
 5426              	.LBB580:
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5427              		.loc 1 1233 3 view .LVU1605
 5428 0080 6E20     		movs	r0, #110
 5429 0082 FFF7FEFF 		bl	get_reg_n
 5430              	.LVL431:
 5431 0086 0446     		mov	r4, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5432              		.loc 1 1233 33 is_stmt 0 view .LVU1606
 5433 0088 6420     		movs	r0, #100
 5434 008a FFF7FEFF 		bl	get_reg_n
 5435              	.LVL432:
 5436 008e 0146     		mov	r1, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5437              		.loc 1 1233 3 view .LVU1607
ARM GAS  /tmp/ccvq0xdJ.s 			page 177


 5438 0090 2046     		mov	r0, r4
 5439 0092 FFF7FEFF 		bl	copyreg
 5440              	.LVL433:
1234:src/keys.c    **** 		//call p2r
 5441              		.loc 1 1234 3 is_stmt 1 view .LVU1608
 5442 0096 6F20     		movs	r0, #111
 5443 0098 FFF7FEFF 		bl	get_reg_n
 5444              	.LVL434:
 5445 009c 0446     		mov	r4, r0
1234:src/keys.c    **** 		//call p2r
 5446              		.loc 1 1234 33 is_stmt 0 view .LVU1609
 5447 009e 6520     		movs	r0, #101
 5448 00a0 FFF7FEFF 		bl	get_reg_n
 5449              	.LVL435:
 5450 00a4 0146     		mov	r1, r0
1234:src/keys.c    **** 		//call p2r
 5451              		.loc 1 1234 3 view .LVU1610
 5452 00a6 2046     		mov	r0, r4
 5453 00a8 FFF7FEFF 		bl	copyreg
 5454              	.LVL436:
1236:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5455              		.loc 1 1236 18 is_stmt 1 view .LVU1611
1237:src/keys.c    **** #ifdef RP_PREFIX
 5456              		.loc 1 1237 3 view .LVU1612
 5457 00ac 0020     		movs	r0, #0
 5458 00ae FFF7FEFF 		bl	op_p2r
 5459              	.LVL437:
1239:src/keys.c    **** #endif
 5460              		.loc 1 1239 3 view .LVU1613
1239:src/keys.c    **** #endif
 5461              		.loc 1 1239 15 is_stmt 0 view .LVU1614
 5462 00b2 074A     		ldr	r2, .L581+8
1241:src/keys.c    **** 	}
 5463              		.loc 1 1241 3 view .LVU1615
 5464 00b4 2B68     		ldr	r3, [r5]
1239:src/keys.c    **** #endif
 5465              		.loc 1 1239 15 view .LVU1616
 5466 00b6 0121     		movs	r1, #1
 5467 00b8 1160     		str	r1, [r2]
1241:src/keys.c    **** 	}
 5468              		.loc 1 1241 3 is_stmt 1 view .LVU1617
 5469 00ba 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 5470 00be 6FF30412 		bfc	r2, #4, #1
 5471 00c2 83F8DE27 		strb	r2, [r3, #2014]
 5472              	.LVL438:
 5473              	.L565:
1241:src/keys.c    **** 	}
 5474              		.loc 1 1241 3 is_stmt 0 view .LVU1618
 5475              	.LBE580:
 5476              	.LBE579:
1243:src/keys.c    **** 
 5477              		.loc 1 1243 1 view .LVU1619
 5478 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5479              	.L582:
 5480              		.align	2
 5481              	.L581:
 5482 00c8 00000000 		.word	main_ram
ARM GAS  /tmp/ccvq0xdJ.s 			page 178


 5483 00cc 00000000 		.word	StateWhileOn
 5484 00d0 00000000 		.word	RectPolConv
 5485              		.cfi_endproc
 5486              	.LFE23:
 5488              		.section	.text.stack_begin,"ax",%progbits
 5489              		.align	1
 5490              		.p2align 2,,3
 5491              		.global	stack_begin
 5492              		.syntax unified
 5493              		.thumb
 5494              		.thumb_func
 5495              		.fpu fpv4-sp-d16
 5497              	stack_begin:
 5498              	.LVL439:
 5499              	.LFB25:
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5500              		.loc 1 1264 33 is_stmt 1 view -0
 5501              		.cfi_startproc
 5502              		@ args = 0, pretend = 0, frame = 0
 5503              		@ frame_needed = 0, uses_anonymous_args = 0
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5504              		.loc 1 1267 2 view .LVU1621
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5505              		.loc 1 1264 33 is_stmt 0 view .LVU1622
 5506 0000 38B5     		push	{r3, r4, r5, lr}
 5507              		.cfi_def_cfa_offset 16
 5508              		.cfi_offset 3, -16
 5509              		.cfi_offset 4, -12
 5510              		.cfi_offset 5, -8
 5511              		.cfi_offset 14, -4
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5512              		.loc 1 1267 2 view .LVU1623
 5513 0002 2C4B     		ldr	r3, .L590
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5514              		.loc 1 1268 7 view .LVU1624
 5515 0004 2C4C     		ldr	r4, .L590+4
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5516              		.loc 1 1267 2 view .LVU1625
 5517 0006 1B68     		ldr	r3, [r3]
 5518 0008 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 5519 000c 42F01002 		orr	r2, r2, #16
 5520 0010 83F8DE27 		strb	r2, [r3, #2014]
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5521              		.loc 1 1268 2 is_stmt 1 view .LVU1626
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5522              		.loc 1 1268 7 is_stmt 0 view .LVU1627
 5523 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5524              		.loc 1 1268 5 view .LVU1628
 5525 0016 12F04002 		ands	r2, r2, #64
 5526 001a 26D0     		beq	.L584
1269:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5527              		.loc 1 1269 3 is_stmt 1 view .LVU1629
 5528 001c 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 5529 0020 42F00102 		orr	r2, r2, #1
 5530 0024 83F8DE27 		strb	r2, [r3, #2014]
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
ARM GAS  /tmp/ccvq0xdJ.s 			page 179


 5531              		.loc 1 1270 3 view .LVU1630
 5532 0028 6E20     		movs	r0, #110
 5533              	.LVL440:
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5534              		.loc 1 1270 3 is_stmt 0 view .LVU1631
 5535 002a FFF7FEFF 		bl	get_reg_n
 5536              	.LVL441:
 5537 002e 0546     		mov	r5, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5538              		.loc 1 1270 33 view .LVU1632
 5539 0030 6A20     		movs	r0, #106
 5540 0032 FFF7FEFF 		bl	get_reg_n
 5541              	.LVL442:
 5542 0036 0146     		mov	r1, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5543              		.loc 1 1270 3 view .LVU1633
 5544 0038 2846     		mov	r0, r5
 5545 003a FFF7FEFF 		bl	copyreg
 5546              	.LVL443:
1271:src/keys.c    **** 		lift();
 5547              		.loc 1 1271 3 is_stmt 1 view .LVU1634
 5548 003e 6F20     		movs	r0, #111
 5549 0040 FFF7FEFF 		bl	get_reg_n
 5550              	.LVL444:
 5551 0044 0546     		mov	r5, r0
1271:src/keys.c    **** 		lift();
 5552              		.loc 1 1271 33 is_stmt 0 view .LVU1635
 5553 0046 6B20     		movs	r0, #107
 5554 0048 FFF7FEFF 		bl	get_reg_n
 5555              	.LVL445:
 5556 004c 0146     		mov	r1, r0
1271:src/keys.c    **** 		lift();
 5557              		.loc 1 1271 3 view .LVU1636
 5558 004e 2846     		mov	r0, r5
 5559 0050 FFF7FEFF 		bl	copyreg
 5560              	.LVL446:
1272:src/keys.c    **** 		zero_X();
 5561              		.loc 1 1272 3 is_stmt 1 view .LVU1637
 5562 0054 FFF7FEFF 		bl	lift
 5563              	.LVL447:
1273:src/keys.c    **** 		lift();
 5564              		.loc 1 1273 3 view .LVU1638
 5565 0058 FFF7FEFF 		bl	zero_X
 5566              	.LVL448:
1274:src/keys.c    **** 		State2.state_lift = 0;
 5567              		.loc 1 1274 3 view .LVU1639
 5568 005c FFF7FEFF 		bl	lift
 5569              	.LVL449:
1275:src/keys.c    **** 	}
 5570              		.loc 1 1275 3 view .LVU1640
1275:src/keys.c    **** 	}
 5571              		.loc 1 1275 21 is_stmt 0 view .LVU1641
 5572 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5573 0062 6FF38613 		bfc	r3, #6, #1
 5574 0066 E375     		strb	r3, [r4, #23]
 5575              	.L583:
1284:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 180


 5576              		.loc 1 1284 1 view .LVU1642
 5577 0068 38BD     		pop	{r3, r4, r5, pc}
 5578              	.LVL450:
 5579              	.L584:
1278:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5580              		.loc 1 1278 3 is_stmt 1 view .LVU1643
 5581 006a 93F8DE17 		ldrb	r1, [r3, #2014]	@ zero_extendqisi2
 5582 006e 62F30001 		bfi	r1, r2, #0, #1
 5583 0072 83F8DE17 		strb	r1, [r3, #2014]
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5584              		.loc 1 1279 3 view .LVU1644
 5585 0076 0546     		mov	r5, r0
 5586 0078 6E20     		movs	r0, #110
 5587              	.LVL451:
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5588              		.loc 1 1279 3 is_stmt 0 view .LVU1645
 5589 007a FFF7FEFF 		bl	get_reg_n
 5590              	.LVL452:
 5591 007e 0446     		mov	r4, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5592              		.loc 1 1279 33 view .LVU1646
 5593 0080 6420     		movs	r0, #100
 5594 0082 FFF7FEFF 		bl	get_reg_n
 5595              	.LVL453:
 5596 0086 0146     		mov	r1, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5597              		.loc 1 1279 3 view .LVU1647
 5598 0088 2046     		mov	r0, r4
 5599 008a FFF7FEFF 		bl	copyreg
 5600              	.LVL454:
1280:src/keys.c    **** 		zero_X();
 5601              		.loc 1 1280 3 is_stmt 1 view .LVU1648
 5602 008e 6F20     		movs	r0, #111
 5603 0090 FFF7FEFF 		bl	get_reg_n
 5604              	.LVL455:
 5605 0094 0446     		mov	r4, r0
1280:src/keys.c    **** 		zero_X();
 5606              		.loc 1 1280 33 is_stmt 0 view .LVU1649
 5607 0096 6520     		movs	r0, #101
 5608 0098 FFF7FEFF 		bl	get_reg_n
 5609              	.LVL456:
 5610 009c 0146     		mov	r1, r0
1280:src/keys.c    **** 		zero_X();
 5611              		.loc 1 1280 3 view .LVU1650
 5612 009e 2046     		mov	r0, r4
 5613 00a0 FFF7FEFF 		bl	copyreg
 5614              	.LVL457:
1281:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5615              		.loc 1 1281 3 is_stmt 1 view .LVU1651
 5616 00a4 FFF7FEFF 		bl	zero_X
 5617              	.LVL458:
1282:src/keys.c    **** 	}
 5618              		.loc 1 1282 3 view .LVU1652
1282:src/keys.c    **** 	}
 5619              		.loc 1 1282 6 is_stmt 0 view .LVU1653
 5620 00a8 002D     		cmp	r5, #0
 5621 00aa DDD0     		beq	.L583
ARM GAS  /tmp/ccvq0xdJ.s 			page 181


1282:src/keys.c    **** 	}
 5622              		.loc 1 1282 17 is_stmt 1 discriminator 1 view .LVU1654
1284:src/keys.c    **** 
 5623              		.loc 1 1284 1 is_stmt 0 discriminator 1 view .LVU1655
 5624 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5625              		.cfi_restore 14
 5626              		.cfi_restore 5
 5627              		.cfi_restore 4
 5628              		.cfi_restore 3
 5629              		.cfi_def_cfa_offset 0
 5630              	.LVL459:
1282:src/keys.c    **** 	}
 5631              		.loc 1 1282 17 discriminator 1 view .LVU1656
 5632 00b0 FFF7FEBF 		b	zero_Y
 5633              	.LVL460:
 5634              	.L591:
 5635              		.align	2
 5636              	.L590:
 5637 00b4 00000000 		.word	main_ram
 5638 00b8 00000000 		.word	StateWhileOn
 5639              		.cfi_endproc
 5640              	.LFE25:
 5642              		.section	.text.current_catalogue_max,"ax",%progbits
 5643              		.align	1
 5644              		.p2align 2,,3
 5645              		.global	current_catalogue_max
 5646              		.syntax unified
 5647              		.thumb
 5648              		.thumb_func
 5649              		.fpu fpv4-sp-d16
 5651              	current_catalogue_max:
 5652              	.LFB44:
2476:src/keys.c    **** 	// A quick table of catalogue sizes
 5653              		.loc 1 2476 33 is_stmt 1 view -0
 5654              		.cfi_startproc
 5655              		@ args = 0, pretend = 0, frame = 0
 5656              		@ frame_needed = 0, uses_anonymous_args = 0
 5657              		@ link register save eliminated.
2479:src/keys.c    **** 	{
 5658              		.loc 1 2479 2 view .LVU1658
2510:src/keys.c    **** #endif
 5659              		.loc 1 2510 2 view .LVU1659
2510:src/keys.c    **** #endif
 5660              		.loc 1 2510 31 is_stmt 0 view .LVU1660
 5661 0000 024B     		ldr	r3, .L593
2510:src/keys.c    **** #endif
 5662              		.loc 1 2510 24 view .LVU1661
 5663 0002 034A     		ldr	r2, .L593+4
2510:src/keys.c    **** #endif
 5664              		.loc 1 2510 31 view .LVU1662
 5665 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2512:src/keys.c    **** 
 5666              		.loc 1 2512 1 view .LVU1663
 5667 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5668 0008 7047     		bx	lr
 5669              	.L594:
 5670 000a 00BF     		.align	2
ARM GAS  /tmp/ccvq0xdJ.s 			page 182


 5671              	.L593:
 5672 000c 00000000 		.word	StateWhileOn
 5673 0010 00000000 		.word	.LANCHOR8
 5674              		.cfi_endproc
 5675              	.LFE44:
 5677              		.section	.text.current_catalogue,"ax",%progbits
 5678              		.align	1
 5679              		.p2align 2,,3
 5680              		.global	current_catalogue
 5681              		.syntax unified
 5682              		.thumb
 5683              		.thumb_func
 5684              		.fpu fpv4-sp-d16
 5686              	current_catalogue:
 5687              	.LVL461:
 5688              	.LFB46:
2525:src/keys.c    **** 	// A quick table of catalogue tables
 5689              		.loc 1 2525 33 is_stmt 1 view -0
 5690              		.cfi_startproc
 5691              		@ args = 0, pretend = 0, frame = 0
 5692              		@ frame_needed = 0, uses_anonymous_args = 0
 5693              		@ link register save eliminated.
2528:src/keys.c    **** 	{
 5694              		.loc 1 2528 2 view .LVU1665
2555:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5695              		.loc 1 2555 2 view .LVU1666
2556:src/keys.c    **** 	int m, i;
 5696              		.loc 1 2556 2 view .LVU1667
2556:src/keys.c    **** 	int m, i;
 5697              		.loc 1 2556 25 is_stmt 0 view .LVU1668
 5698 0000 314A     		ldr	r2, .L622
2556:src/keys.c    **** 	int m, i;
 5699              		.loc 1 2556 15 view .LVU1669
 5700 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 5701              	.LVL462:
2557:src/keys.c    **** 	unsigned p, q;
 5702              		.loc 1 2557 2 is_stmt 1 view .LVU1670
2558:src/keys.c    **** 
 5703              		.loc 1 2558 2 view .LVU1671
2560:src/keys.c    **** 		if (n == OP_ZERO)
 5704              		.loc 1 2560 2 view .LVU1672
2560:src/keys.c    **** 		if (n == OP_ZERO)
 5705              		.loc 1 2560 5 is_stmt 0 view .LVU1673
 5706 0004 102B     		cmp	r3, #16
 5707 0006 39D0     		beq	.L616
2565:src/keys.c    **** 		if (n == OP_ZERO)
 5708              		.loc 1 2565 2 is_stmt 1 view .LVU1674
2565:src/keys.c    **** 		if (n == OP_ZERO)
 5709              		.loc 1 2565 5 is_stmt 0 view .LVU1675
 5710 0008 112B     		cmp	r3, #17
 5711 000a 32D0     		beq	.L617
2570:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5712              		.loc 1 2570 2 is_stmt 1 view .LVU1676
2570:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5713              		.loc 1 2570 5 is_stmt 0 view .LVU1677
 5714 000c 122B     		cmp	r3, #18
 5715 000e 45D0     		beq	.L618
ARM GAS  /tmp/ccvq0xdJ.s 			page 183


2583:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5716              		.loc 1 2583 2 is_stmt 1 view .LVU1678
2583:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5717              		.loc 1 2583 5 is_stmt 0 view .LVU1679
 5718 0010 0E2B     		cmp	r3, #14
 5719 0012 38D0     		beq	.L619
2586:src/keys.c    **** 
 5720              		.loc 1 2586 3 is_stmt 1 view .LVU1680
2586:src/keys.c    **** 
 5721              		.loc 1 2586 7 is_stmt 0 view .LVU1681
 5722 0014 2D4A     		ldr	r2, .L622+4
2588:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5723              		.loc 1 2588 35 view .LVU1682
 5724 0016 A3F10B01 		sub	r1, r3, #11
2588:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5725              		.loc 1 2588 5 view .LVU1683
 5726 001a 0429     		cmp	r1, #4
2586:src/keys.c    **** 
 5727              		.loc 1 2586 7 view .LVU1684
 5728 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5729              	.LVL463:
2588:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5730              		.loc 1 2588 2 is_stmt 1 view .LVU1685
2588:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5731              		.loc 1 2588 5 is_stmt 0 view .LVU1686
 5732 0020 38D9     		bls	.L602
2591:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5733              		.loc 1 2591 2 is_stmt 1 view .LVU1687
2591:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5734              		.loc 1 2591 5 is_stmt 0 view .LVU1688
 5735 0022 142B     		cmp	r3, #20
 5736 0024 4DD8     		bhi	.L610
2595:src/keys.c    **** 	p = cat[0];
 5737              		.loc 1 2595 2 is_stmt 1 view .LVU1689
2525:src/keys.c    **** 	// A quick table of catalogue tables
 5738              		.loc 1 2525 33 is_stmt 0 view .LVU1690
 5739 0026 10B4     		push	{r4}
 5740              		.cfi_def_cfa_offset 4
 5741              		.cfi_offset 4, -4
2595:src/keys.c    **** 	p = cat[0];
 5742              		.loc 1 2595 11 view .LVU1691
 5743 0028 00EBA001 		add	r1, r0, r0, asr #2
2595:src/keys.c    **** 	p = cat[0];
 5744              		.loc 1 2595 6 view .LVU1692
 5745 002c 5318     		adds	r3, r2, r1
 5746              	.LVL464:
2596:src/keys.c    **** 	q = cat[1];
 5747              		.loc 1 2596 2 is_stmt 1 view .LVU1693
2597:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5748              		.loc 1 2597 2 view .LVU1694
2598:src/keys.c    **** 
 5749              		.loc 1 2598 2 view .LVU1695
2598:src/keys.c    **** 
 5750              		.loc 1 2598 35 is_stmt 0 view .LVU1696
 5751 002e 4000     		lsls	r0, r0, #1
 5752              	.LVL465:
2596:src/keys.c    **** 	q = cat[1];
ARM GAS  /tmp/ccvq0xdJ.s 			page 184


 5753              		.loc 1 2596 4 view .LVU1697
 5754 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5755              	.LVL466:
2597:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5756              		.loc 1 2597 4 view .LVU1698
 5757 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5758              	.LVL467:
2597:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5759              		.loc 1 2597 4 view .LVU1699
 5760 0034 2649     		ldr	r1, .L622+8
 5761              	.LVL468:
2598:src/keys.c    **** 
 5762              		.loc 1 2598 54 view .LVU1700
 5763 0036 C443     		mvns	r4, r0
2598:src/keys.c    **** 
 5764              		.loc 1 2598 35 view .LVU1701
 5765 0038 00F00600 		and	r0, r0, #6
2598:src/keys.c    **** 
 5766              		.loc 1 2598 54 view .LVU1702
 5767 003c 04F00604 		and	r4, r4, #6
2598:src/keys.c    **** 
 5768              		.loc 1 2598 24 view .LVU1703
 5769 0040 0230     		adds	r0, r0, #2
2598:src/keys.c    **** 
 5770              		.loc 1 2598 48 view .LVU1704
 5771 0042 E340     		lsrs	r3, r3, r4
 5772              	.LVL469:
2598:src/keys.c    **** 
 5773              		.loc 1 2598 18 view .LVU1705
 5774 0044 02FA00F0 		lsl	r0, r2, r0
2598:src/keys.c    **** 
 5775              		.loc 1 2598 43 view .LVU1706
 5776 0048 1843     		orrs	r0, r0, r3
2598:src/keys.c    **** 
 5777              		.loc 1 2598 4 view .LVU1707
 5778 004a C0F30903 		ubfx	r3, r0, #0, #10
 5779              	.LVL470:
2601:src/keys.c    **** 		if (m < opcode_breaks[i])
 5780              		.loc 1 2601 2 is_stmt 1 view .LVU1708
2601:src/keys.c    **** 		if (m < opcode_breaks[i])
 5781              		.loc 1 2601 12 view .LVU1709
2598:src/keys.c    **** 
 5782              		.loc 1 2598 4 is_stmt 0 view .LVU1710
 5783 004e 3422     		movs	r2, #52
 5784              	.LVL471:
2601:src/keys.c    **** 		if (m < opcode_breaks[i])
 5785              		.loc 1 2601 8 view .LVU1711
 5786 0050 0020     		movs	r0, #0
 5787 0052 01E0     		b	.L606
 5788              	.LVL472:
 5789              	.L621:
2601:src/keys.c    **** 		if (m < opcode_breaks[i])
 5790              		.loc 1 2601 8 view .LVU1712
 5791 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5792              	.LVL473:
 5793              	.L606:
2602:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
ARM GAS  /tmp/ccvq0xdJ.s 			page 185


 5794              		.loc 1 2602 3 is_stmt 1 view .LVU1713
2604:src/keys.c    **** 	}
 5795              		.loc 1 2604 3 view .LVU1714
2602:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5796              		.loc 1 2602 6 is_stmt 0 view .LVU1715
 5797 0058 9A42     		cmp	r2, r3
 5798 005a 2FDC     		bgt	.L620
2601:src/keys.c    **** 		if (m < opcode_breaks[i])
 5799              		.loc 1 2601 25 discriminator 2 view .LVU1716
 5800 005c 0130     		adds	r0, r0, #1
 5801              	.LVL474:
2601:src/keys.c    **** 		if (m < opcode_breaks[i])
 5802              		.loc 1 2601 2 discriminator 2 view .LVU1717
 5803 005e 0728     		cmp	r0, #7
2604:src/keys.c    **** 	}
 5804              		.loc 1 2604 5 discriminator 2 view .LVU1718
 5805 0060 A3EB0203 		sub	r3, r3, r2
 5806              	.LVL475:
2601:src/keys.c    **** 		if (m < opcode_breaks[i])
 5807              		.loc 1 2601 24 is_stmt 1 discriminator 2 view .LVU1719
2601:src/keys.c    **** 		if (m < opcode_breaks[i])
 5808              		.loc 1 2601 12 discriminator 2 view .LVU1720
2601:src/keys.c    **** 		if (m < opcode_breaks[i])
 5809              		.loc 1 2601 2 is_stmt 0 discriminator 2 view .LVU1721
 5810 0064 F6D1     		bne	.L621
2606:src/keys.c    **** }
 5811              		.loc 1 2606 2 is_stmt 1 view .LVU1722
2606:src/keys.c    **** }
 5812              		.loc 1 2606 9 is_stmt 0 view .LVU1723
 5813 0066 03F12000 		add	r0, r3, #32
 5814              	.LVL476:
2606:src/keys.c    **** }
 5815              		.loc 1 2606 9 view .LVU1724
 5816 006a 0002     		lsls	r0, r0, #8
 5817              	.L595:
2607:src/keys.c    **** 
 5818              		.loc 1 2607 1 view .LVU1725
 5819 006c 5DF8044B 		ldr	r4, [sp], #4
 5820              		.cfi_restore 4
 5821              		.cfi_def_cfa_offset 0
 5822 0070 7047     		bx	lr
 5823              	.LVL477:
 5824              	.L617:
2566:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5825              		.loc 1 2566 3 is_stmt 1 view .LVU1726
2566:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5826              		.loc 1 2566 6 is_stmt 0 view .LVU1727
 5827 0072 4B28     		cmp	r0, #75
 5828 0074 1FD0     		beq	.L608
2568:src/keys.c    **** 	}
 5829              		.loc 1 2568 3 is_stmt 1 view .LVU1728
2568:src/keys.c    **** 	}
 5830              		.loc 1 2568 10 is_stmt 0 view .LVU1729
 5831 0076 40F40450 		orr	r0, r0, #8448
 5832              	.LVL478:
2568:src/keys.c    **** 	}
 5833              		.loc 1 2568 10 view .LVU1730
ARM GAS  /tmp/ccvq0xdJ.s 			page 186


 5834 007a 7047     		bx	lr
 5835              	.LVL479:
 5836              	.L616:
2561:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5837              		.loc 1 2561 3 is_stmt 1 view .LVU1731
2561:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5838              		.loc 1 2561 6 is_stmt 0 view .LVU1732
 5839 007c 4B28     		cmp	r0, #75
 5840 007e 17D0     		beq	.L607
2563:src/keys.c    **** 	}
 5841              		.loc 1 2563 3 is_stmt 1 view .LVU1733
2563:src/keys.c    **** 	}
 5842              		.loc 1 2563 10 is_stmt 0 view .LVU1734
 5843 0080 40F40050 		orr	r0, r0, #8192
 5844              	.LVL480:
2563:src/keys.c    **** 	}
 5845              		.loc 1 2563 10 view .LVU1735
 5846 0084 7047     		bx	lr
 5847              	.LVL481:
 5848              	.L619:
2583:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5849              		.loc 1 2583 35 discriminator 1 view .LVU1736
 5850 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2584:src/keys.c    **** 	else
 5851              		.loc 1 2584 7 discriminator 1 view .LVU1737
 5852 0088 124B     		ldr	r3, .L622+12
 5853              	.LVL482:
2584:src/keys.c    **** 	else
 5854              		.loc 1 2584 7 discriminator 1 view .LVU1738
 5855 008a 134A     		ldr	r2, .L622+16
 5856              	.LVL483:
2584:src/keys.c    **** 	else
 5857              		.loc 1 2584 7 discriminator 1 view .LVU1739
 5858 008c 11F0100F 		tst	r1, #16
 5859 0090 18BF     		it	ne
 5860 0092 1A46     		movne	r2, r3
 5861              	.L602:
 5862              	.LVL484:
2589:src/keys.c    **** 	}
 5863              		.loc 1 2589 3 is_stmt 1 view .LVU1740
 5864              	.LBB581:
 5865              	.LBI581:
2518:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5866              		.loc 1 2518 15 view .LVU1741
 5867              	.LBB582:
2519:src/keys.c    **** }
 5868              		.loc 1 2519 2 view .LVU1742
2519:src/keys.c    **** }
 5869              		.loc 1 2519 9 is_stmt 0 view .LVU1743
 5870 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5871              	.LVL485:
2519:src/keys.c    **** }
 5872              		.loc 1 2519 9 view .LVU1744
 5873 0096 40F48840 		orr	r0, r0, #17408
 5874              	.LVL486:
2519:src/keys.c    **** }
 5875              		.loc 1 2519 9 view .LVU1745
ARM GAS  /tmp/ccvq0xdJ.s 			page 187


 5876              	.LBE582:
 5877              	.LBE581:
2589:src/keys.c    **** 	}
 5878              		.loc 1 2589 10 view .LVU1746
 5879 009a 7047     		bx	lr
 5880              	.LVL487:
 5881              	.L618:
 5882              	.LBB583:
2571:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5883              		.loc 1 2571 3 is_stmt 1 view .LVU1747
2571:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5884              		.loc 1 2571 33 is_stmt 0 view .LVU1748
 5885 009c 0F4B     		ldr	r3, .L622+20
 5886              	.LVL488:
2571:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5887              		.loc 1 2571 13 view .LVU1749
 5888 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5889              	.LVL489:
2572:src/keys.c    **** 			// Monadic conversion routine
 5890              		.loc 1 2572 3 is_stmt 1 view .LVU1750
2572:src/keys.c    **** 			// Monadic conversion routine
 5891              		.loc 1 2572 6 is_stmt 0 view .LVU1751
 5892 00a0 5728     		cmp	r0, #87
2574:src/keys.c    **** 		else
 5893              		.loc 1 2574 4 is_stmt 1 view .LVU1752
2574:src/keys.c    **** 		else
 5894              		.loc 1 2574 25 is_stmt 0 view .LVU1753
 5895 00a2 C6BF     		itte	gt
 5896 00a4 5838     		subgt	r0, r0, #88
 5897              	.LVL490:
2574:src/keys.c    **** 		else
 5898              		.loc 1 2574 18 view .LVU1754
 5899 00a6 40F40070 		orrgt	r0, r0, #512
2576:src/keys.c    **** 	}
 5900              		.loc 1 2576 4 is_stmt 1 view .LVU1755
2576:src/keys.c    **** 	}
 5901              		.loc 1 2576 11 is_stmt 0 view .LVU1756
 5902 00aa 40F40C40 		orrle	r0, r0, #35840
 5903 00ae 7047     		bx	lr
 5904              	.LVL491:
 5905              	.L607:
2576:src/keys.c    **** 	}
 5906              		.loc 1 2576 11 view .LVU1757
 5907              	.LBE583:
2562:src/keys.c    **** 		return CONST(n);
 5908              		.loc 1 2562 11 view .LVU1758
 5909 00b0 4FF42740 		mov	r0, #42752
 5910              	.LVL492:
2562:src/keys.c    **** 		return CONST(n);
 5911              		.loc 1 2562 11 view .LVU1759
 5912 00b4 7047     		bx	lr
 5913              	.LVL493:
 5914              	.L608:
2567:src/keys.c    **** 		return CONST_CMPLX(n);
 5915              		.loc 1 2567 11 view .LVU1760
 5916 00b6 4FF42840 		mov	r0, #43008
 5917              	.LVL494:
ARM GAS  /tmp/ccvq0xdJ.s 			page 188


2567:src/keys.c    **** 		return CONST_CMPLX(n);
 5918              		.loc 1 2567 11 view .LVU1761
 5919 00ba 7047     		bx	lr
 5920              	.LVL495:
 5921              	.L620:
 5922              		.cfi_def_cfa_offset 4
 5923              		.cfi_offset 4, -4
2603:src/keys.c    **** 		m -= opcode_breaks[i];
 5924              		.loc 1 2603 4 is_stmt 1 view .LVU1762
2603:src/keys.c    **** 		m -= opcode_breaks[i];
 5925              		.loc 1 2603 29 is_stmt 0 view .LVU1763
 5926 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5927              	.LVL496:
2603:src/keys.c    **** 		m -= opcode_breaks[i];
 5928              		.loc 1 2603 29 view .LVU1764
 5929 00c0 D4E7     		b	.L595
 5930              	.LVL497:
 5931              	.L610:
 5932              		.cfi_def_cfa_offset 0
 5933              		.cfi_restore 4
2592:src/keys.c    **** 
 5934              		.loc 1 2592 10 view .LVU1765
 5935 00c2 4FF48070 		mov	r0, #256
 5936              	.LVL498:
2607:src/keys.c    **** 
 5937              		.loc 1 2607 1 view .LVU1766
 5938 00c6 7047     		bx	lr
 5939              	.L623:
 5940              		.align	2
 5941              	.L622:
 5942 00c8 00000000 		.word	StateWhileOn
 5943 00cc 00000000 		.word	.LANCHOR12
 5944 00d0 01000000 		.word	.LANCHOR13+1
 5945 00d4 00000000 		.word	.LANCHOR10
 5946 00d8 00000000 		.word	.LANCHOR9
 5947 00dc 00000000 		.word	.LANCHOR11
 5948              		.cfi_endproc
 5949              	.LFE46:
 5951              		.section	.text.process_catalogue,"ax",%progbits
 5952              		.align	1
 5953              		.p2align 2,,3
 5954              		.syntax unified
 5955              		.thumb
 5956              		.thumb_func
 5957              		.fpu fpv4-sp-d16
 5959              	process_catalogue:
 5960              	.LVL499:
 5961              	.LFB48:
2621:src/keys.c    ****    int pos = State.catpos;
 5962              		.loc 1 2621 93 is_stmt 1 view -0
 5963              		.cfi_startproc
 5964              		@ args = 0, pretend = 0, frame = 16
 5965              		@ frame_needed = 0, uses_anonymous_args = 0
2621:src/keys.c    ****    int pos = State.catpos;
 5966              		.loc 1 2621 93 is_stmt 0 view .LVU1768
 5967 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5968              		.cfi_def_cfa_offset 36
ARM GAS  /tmp/ccvq0xdJ.s 			page 189


 5969              		.cfi_offset 4, -36
 5970              		.cfi_offset 5, -32
 5971              		.cfi_offset 6, -28
 5972              		.cfi_offset 7, -24
 5973              		.cfi_offset 8, -20
 5974              		.cfi_offset 9, -16
 5975              		.cfi_offset 10, -12
 5976              		.cfi_offset 11, -8
 5977              		.cfi_offset 14, -4
2622:src/keys.c    ****    int ch;
 5978              		.loc 1 2622 14 view .LVU1769
 5979 0004 DFF8EC92 		ldr	r9, .L738+24
 5980              	.LBB584:
 5981              	.LBB585:
2510:src/keys.c    **** #endif
 5982              		.loc 1 2510 31 view .LVU1770
 5983 0008 B44F     		ldr	r7, .L738
 5984              	.LBE585:
 5985              	.LBE584:
2622:src/keys.c    ****    int ch;
 5986              		.loc 1 2622 14 view .LVU1771
 5987 000a D9F80040 		ldr	r4, [r9]
 5988              	.LBB590:
 5989              	.LBB586:
2510:src/keys.c    **** #endif
 5990              		.loc 1 2510 31 view .LVU1772
 5991 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5992              	.LBE586:
 5993              	.LBE590:
2622:src/keys.c    ****    int ch;
 5994              		.loc 1 2622 19 view .LVU1773
 5995 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 5996              	.LBB591:
 5997              	.LBB587:
2510:src/keys.c    **** #endif
 5998              		.loc 1 2510 24 view .LVU1774
 5999 0016 B24B     		ldr	r3, .L738+4
 6000              	.LBE587:
 6001              	.LBE591:
2622:src/keys.c    ****    int ch;
 6002              		.loc 1 2622 4 is_stmt 1 view .LVU1775
2621:src/keys.c    ****    int pos = State.catpos;
 6003              		.loc 1 2621 93 is_stmt 0 view .LVU1776
 6004 0018 85B0     		sub	sp, sp, #20
 6005              		.cfi_def_cfa_offset 56
 6006              	.LBB592:
 6007              	.LBB588:
2510:src/keys.c    **** #endif
 6008              		.loc 1 2510 24 view .LVU1777
 6009 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 6010              	.LBE588:
 6011              	.LBE592:
2621:src/keys.c    ****    int pos = State.catpos;
 6012              		.loc 1 2621 93 view .LVU1778
 6013 001e 1646     		mov	r6, r2
2622:src/keys.c    ****    int ch;
 6014              		.loc 1 2622 8 view .LVU1779
ARM GAS  /tmp/ccvq0xdJ.s 			page 190


 6015 0020 C5F34615 		ubfx	r5, r5, #5, #7
 6016              	.LVL500:
2623:src/keys.c    ****    const int ctmax = current_catalogue_max();
 6017              		.loc 1 2623 4 is_stmt 1 view .LVU1780
2624:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 6018              		.loc 1 2624 4 view .LVU1781
 6019              	.LBB593:
 6020              	.LBI584:
2476:src/keys.c    **** 	// A quick table of catalogue sizes
 6021              		.loc 1 2476 5 view .LVU1782
 6022              	.LBB589:
2479:src/keys.c    **** 	{
 6023              		.loc 1 2479 2 view .LVU1783
2510:src/keys.c    **** #endif
 6024              		.loc 1 2510 2 view .LVU1784
2510:src/keys.c    **** #endif
 6025              		.loc 1 2510 2 is_stmt 0 view .LVU1785
 6026              	.LBE589:
 6027              	.LBE593:
2625:src/keys.c    **** 
 6028              		.loc 1 2625 4 is_stmt 1 view .LVU1786
2627:src/keys.c    ****      switch (c) {
 6029              		.loc 1 2627 4 view .LVU1787
2627:src/keys.c    ****      switch (c) {
 6030              		.loc 1 2627 7 is_stmt 0 view .LVU1788
 6031 0024 0029     		cmp	r1, #0
 6032 0026 65D0     		beq	.L723
2688:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 6033              		.loc 1 2688 11 is_stmt 1 view .LVU1789
2688:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 6034              		.loc 1 2688 14 is_stmt 0 view .LVU1790
 6035 0028 0129     		cmp	r1, #1
 6036 002a 00F0ED80 		beq	.L724
2722:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 6037              		.loc 1 2722 11 is_stmt 1 view .LVU1791
2722:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 6038              		.loc 1 2722 14 is_stmt 0 view .LVU1792
 6039 002e 0229     		cmp	r1, #2
 6040 0030 00F00B81 		beq	.L725
 6041              	.LVL501:
 6042              	.L660:
 6043              	.LBB594:
 6044              	.LBB595:
 491:src/keys.c    **** }
 6045              		.loc 1 491 2 is_stmt 1 view .LVU1793
 6046              	.LBB596:
 6047              	.LBI596:
 131:src/keys.c    **** {
 6048              		.loc 1 131 12 view .LVU1794
 6049              	.LBB597:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6050              		.loc 1 133 2 view .LVU1795
 143:src/keys.c    **** }
 6051              		.loc 1 143 2 view .LVU1796
 143:src/keys.c    **** }
 6052              		.loc 1 143 23 is_stmt 0 view .LVU1797
 6053 0034 AB4B     		ldr	r3, .L738+8
ARM GAS  /tmp/ccvq0xdJ.s 			page 191


 6054              	.LBE597:
 6055              	.LBE596:
 491:src/keys.c    **** }
 6056              		.loc 1 491 49 view .LVU1798
 6057 0036 AC4A     		ldr	r2, .L738+12
 6058              	.LBB599:
 6059              	.LBB598:
 143:src/keys.c    **** }
 6060              		.loc 1 143 23 view .LVU1799
 6061 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 6062              	.LBE598:
 6063              	.LBE599:
 491:src/keys.c    **** }
 6064              		.loc 1 491 49 view .LVU1800
 6065 003a 03EB4303 		add	r3, r3, r3, lsl #1
 6066 003e 02EB4303 		add	r3, r2, r3, lsl #1
 6067              	.LBE595:
 6068              	.LBE594:
 6069              	.LBB603:
 6070              	.LBB604:
 6071              	.LBB605:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6072              		.loc 1 106 16 view .LVU1801
 6073 0042 0025     		movs	r5, #0
 6074              	.LVL502:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6075              		.loc 1 106 16 view .LVU1802
 6076              	.LBE605:
 6077              	.LBE604:
 6078              	.LBE603:
2732:src/keys.c    ****    reset_shift();
 6079              		.loc 1 2732 9 view .LVU1803
 6080 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 6081              	.LVL503:
2732:src/keys.c    ****    reset_shift();
 6082              		.loc 1 2732 9 view .LVU1804
 6083 0046 FFF7FEFF 		bl	remap_chars
 6084              	.LVL504:
2732:src/keys.c    ****    reset_shift();
 6085              		.loc 1 2732 9 view .LVU1805
 6086 004a 0446     		mov	r4, r0
 6087              	.LVL505:
2733:src/keys.c    ****    if (ch == '\0')
 6088              		.loc 1 2733 4 is_stmt 1 view .LVU1806
 6089              	.LBB610:
 6090              	.LBI603:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 6091              		.loc 1 114 13 view .LVU1807
 6092              	.LBE610:
 115:src/keys.c    **** }
 6093              		.loc 1 115 2 view .LVU1808
 6094              	.LBB611:
 6095              	.LBB609:
 6096              	.LBI604:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 6097              		.loc 1 104 20 view .LVU1809
 6098              	.LBB608:
ARM GAS  /tmp/ccvq0xdJ.s 			page 192


 105:src/keys.c    **** 	State2.shifts = shift;
 6099              		.loc 1 105 2 view .LVU1810
 6100              	.LBB606:
 6101              	.LBI606:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 6102              		.loc 1 96 13 view .LVU1811
 6103              	.LBB607:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6104              		.loc 1 97 2 view .LVU1812
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6105              		.loc 1 97 18 is_stmt 0 view .LVU1813
 6106 004c FFF7FEFF 		bl	shift_down
 6107              	.LVL506:
  98:src/keys.c    **** }
 6108              		.loc 1 98 2 is_stmt 1 view .LVU1814
 6109              	.LBE607:
 6110              	.LBE606:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6111              		.loc 1 106 2 view .LVU1815
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6112              		.loc 1 106 16 is_stmt 0 view .LVU1816
 6113 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6114              		.loc 1 108 2 is_stmt 1 view .LVU1817
 6115              	.LVL507:
 108:src/keys.c    **** }
 6116              		.loc 1 108 2 is_stmt 0 view .LVU1818
 6117              	.LBE608:
 6118              	.LBE609:
 6119              	.LBE611:
2734:src/keys.c    ****      return STATE_UNFINISHED;
 6120              		.loc 1 2734 4 is_stmt 1 view .LVU1819
2734:src/keys.c    ****      return STATE_UNFINISHED;
 6121              		.loc 1 2734 7 is_stmt 0 view .LVU1820
 6122 0052 002C     		cmp	r4, #0
 6123 0054 6FD0     		beq	.L722
2736:src/keys.c    ****      // No multi character search in alpha catalogues
 6124              		.loc 1 2736 4 is_stmt 1 view .LVU1821
2736:src/keys.c    ****      // No multi character search in alpha catalogues
 6125              		.loc 1 2736 7 is_stmt 0 view .LVU1822
 6126 0056 AAF10B0A 		sub	r10, r10, #11
 6127              	.LVL508:
2736:src/keys.c    ****      // No multi character search in alpha catalogues
 6128              		.loc 1 2736 7 view .LVU1823
 6129 005a BAF1040F 		cmp	r10, #4
 6130 005e 40F2CB80 		bls	.L674
2740:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6131              		.loc 1 2740 4 is_stmt 1 view .LVU1824
2740:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6132              		.loc 1 2740 8 is_stmt 0 view .LVU1825
 6133 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2740:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6134              		.loc 1 2740 7 view .LVU1826
 6135 0064 092D     		cmp	r5, #9
 6136 0066 40F2C780 		bls	.L674
 6137              	.LVL509:
 6138              	.L642:
ARM GAS  /tmp/ccvq0xdJ.s 			page 193


2745:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6139              		.loc 1 2745 4 is_stmt 1 view .LVU1827
2745:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6140              		.loc 1 2745 27 is_stmt 0 view .LVU1828
 6141 006a 7B19     		adds	r3, r7, r5
 6142 006c 0025     		movs	r5, #0
 6143 006e 83F82050 		strb	r5, [r3, #32]
2746:src/keys.c    ****      char buf[16];
 6144              		.loc 1 2746 4 is_stmt 1 view .LVU1829
 6145              	.LVL510:
2746:src/keys.c    ****      char buf[16];
 6146              		.loc 1 2746 18 view .LVU1830
2746:src/keys.c    ****      char buf[16];
 6147              		.loc 1 2746 4 is_stmt 0 view .LVU1831
 6148 0072 B8F1000F 		cmp	r8, #0
 6149 0076 00F0D780 		beq	.L720
 6150              	.LVL511:
 6151              	.L662:
 6152              	.LBB612:
2747:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6153              		.loc 1 2747 6 is_stmt 1 view .LVU1832
2748:src/keys.c    ****      int i;
 6154              		.loc 1 2748 6 view .LVU1833
2748:src/keys.c    ****      int i;
 6155              		.loc 1 2748 24 is_stmt 0 view .LVU1834
 6156 007a 2846     		mov	r0, r5
 6157 007c FFF7FEFF 		bl	current_catalogue
 6158              	.LVL512:
 6159 0080 6946     		mov	r1, sp
 6160 0082 FFF7FEFF 		bl	catcmd
 6161              	.LVL513:
 6162 0086 0446     		mov	r4, r0
 6163              	.LVL514:
2749:src/keys.c    **** 
 6164              		.loc 1 2749 6 is_stmt 1 view .LVU1835
2751:src/keys.c    ****        cmd++;
 6165              		.loc 1 2751 6 view .LVU1836
2752:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6166              		.loc 1 2752 8 view .LVU1837
2751:src/keys.c    ****        cmd++;
 6167              		.loc 1 2751 10 is_stmt 0 view .LVU1838
 6168 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6169              	.LVL515:
2751:src/keys.c    ****        cmd++;
 6170              		.loc 1 2751 9 view .LVU1839
 6171 008a 1428     		cmp	r0, #20
 6172 008c 04BF     		itt	eq
 6173 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2752:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6174              		.loc 1 2752 11 view .LVU1840
 6175 0090 0134     		addeq	r4, r4, #1
 6176              	.LVL516:
2753:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6177              		.loc 1 2753 6 is_stmt 1 view .LVU1841
2753:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6178              		.loc 1 2753 16 view .LVU1842
2753:src/keys.c    ****        const int c = remap_chars(cmd[i]);
ARM GAS  /tmp/ccvq0xdJ.s 			page 194


 6179              		.loc 1 2753 6 is_stmt 0 view .LVU1843
 6180 0092 0028     		cmp	r0, #0
 6181 0094 00F0BF80 		beq	.L664
 6182 0098 DFF85CB2 		ldr	fp, .L738+28
 6183 009c C4F1010A 		rsb	r10, r4, #1
 6184 00a0 06E0     		b	.L667
 6185              	.LVL517:
 6186              	.L727:
 6187              	.LBB613:
2758:src/keys.c    **** 	 break;
 6188              		.loc 1 2758 16 view .LVU1844
 6189 00a2 C0F2BA80 		blt	.L666
 6190              	.LBE613:
2753:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6191              		.loc 1 2753 19 discriminator 2 view .LVU1845
 6192 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6193              	.LVL518:
2753:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6194              		.loc 1 2753 6 discriminator 2 view .LVU1846
 6195 00aa 0028     		cmp	r0, #0
 6196 00ac 00F0BF80 		beq	.L726
 6197              	.LVL519:
 6198              	.L667:
 6199              	.LBB614:
2754:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6200              		.loc 1 2754 8 is_stmt 1 view .LVU1847
2754:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6201              		.loc 1 2754 22 is_stmt 0 view .LVU1848
 6202 00b0 FFF7FEFF 		bl	remap_chars
 6203              	.LVL520:
2758:src/keys.c    **** 	 break;
 6204              		.loc 1 2758 13 is_stmt 1 view .LVU1849
 6205              	.LBE614:
2753:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6206              		.loc 1 2753 32 view .LVU1850
 6207              	.LBB615:
2755:src/keys.c    ****        if (c > cl)
 6208              		.loc 1 2755 8 view .LVU1851
2755:src/keys.c    ****        if (c > cl)
 6209              		.loc 1 2755 46 is_stmt 0 view .LVU1852
 6210 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6211              	.LVL521:
2756:src/keys.c    **** 	 goto set_pos;
 6212              		.loc 1 2756 8 is_stmt 1 view .LVU1853
2756:src/keys.c    **** 	 goto set_pos;
 6213              		.loc 1 2756 11 is_stmt 0 view .LVU1854
 6214 00b8 9842     		cmp	r0, r3
 6215 00ba 0AEB0402 		add	r2, r10, r4
 6216              	.LVL522:
2756:src/keys.c    **** 	 goto set_pos;
 6217              		.loc 1 2756 11 view .LVU1855
 6218              	.LBE615:
2753:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6219              		.loc 1 2753 16 is_stmt 1 view .LVU1856
 6220              	.LBB616:
2756:src/keys.c    **** 	 goto set_pos;
 6221              		.loc 1 2756 11 is_stmt 0 view .LVU1857
ARM GAS  /tmp/ccvq0xdJ.s 			page 195


 6222 00be F0DD     		ble	.L727
 6223              	.LVL523:
 6224              	.L665:
2756:src/keys.c    **** 	 goto set_pos;
 6225              		.loc 1 2756 11 view .LVU1858
 6226 00c0 D9F80040 		ldr	r4, [r9]
 6227              	.L645:
2756:src/keys.c    **** 	 goto set_pos;
 6228              		.loc 1 2756 11 view .LVU1859
 6229              	.LBE616:
 6230              	.LBE612:
2767:src/keys.c    ****      --pos;
 6231              		.loc 1 2767 10 is_stmt 1 view .LVU1860
 6232 00c4 002E     		cmp	r6, #0
 6233 00c6 00F0B680 		beq	.L649
2767:src/keys.c    ****      --pos;
 6234              		.loc 1 2767 20 is_stmt 0 view .LVU1861
 6235 00ca 4DB1     		cbz	r5, .L643
 6236              	.LVL524:
 6237              	.L721:
2767:src/keys.c    ****      --pos;
 6238              		.loc 1 2767 20 view .LVU1862
 6239 00cc 2846     		mov	r0, r5
 6240 00ce FFF7FEFF 		bl	current_catalogue
 6241              	.LVL525:
2768:src/keys.c    ****    State.catpos = pos;
 6242              		.loc 1 2768 6 is_stmt 1 view .LVU1863
2767:src/keys.c    ****      --pos;
 6243              		.loc 1 2767 10 view .LVU1864
 6244              	.LBB617:
 6245              	.LBI617:
2614:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6246              		.loc 1 2614 12 view .LVU1865
 6247              	.LBB618:
2615:src/keys.c    **** }
 6248              		.loc 1 2615 2 view .LVU1866
2615:src/keys.c    **** }
 6249              		.loc 1 2615 33 is_stmt 0 view .LVU1867
 6250 00d2 00F0F000 		and	r0, r0, #240
 6251              	.LBE618:
 6252              	.LBE617:
2767:src/keys.c    ****      --pos;
 6253              		.loc 1 2767 27 view .LVU1868
 6254 00d6 F028     		cmp	r0, #240
 6255 00d8 40F0AD80 		bne	.L649
2767:src/keys.c    ****      --pos;
 6256              		.loc 1 2767 20 view .LVU1869
 6257 00dc 013D     		subs	r5, r5, #1
 6258              	.LVL526:
2767:src/keys.c    ****      --pos;
 6259              		.loc 1 2767 20 view .LVU1870
 6260 00de F5D1     		bne	.L721
 6261              	.LVL527:
 6262              	.L643:
2769:src/keys.c    ****    return STATE_UNFINISHED;
 6263              		.loc 1 2769 4 is_stmt 1 view .LVU1871
2769:src/keys.c    ****    return STATE_UNFINISHED;
ARM GAS  /tmp/ccvq0xdJ.s 			page 196


 6264              		.loc 1 2769 17 is_stmt 0 view .LVU1872
 6265 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6266 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6267 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2770:src/keys.c    ****  }
 6268              		.loc 1 2770 4 is_stmt 1 view .LVU1873
2770:src/keys.c    ****  }
 6269              		.loc 1 2770 11 is_stmt 0 view .LVU1874
 6270 00ec 3320     		movs	r0, #51
 6271              	.L734:
2771:src/keys.c    **** 
 6272              		.loc 1 2771 2 view .LVU1875
 6273 00ee 05B0     		add	sp, sp, #20
 6274              		.cfi_remember_state
 6275              		.cfi_def_cfa_offset 36
 6276              		@ sp needed
 6277 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6278              	.LVL528:
 6279              	.L723:
 6280              		.cfi_restore_state
2628:src/keys.c    **** #ifdef DM42
 6281              		.loc 1 2628 6 is_stmt 1 view .LVU1876
 6282 00f4 431F     		subs	r3, r0, #5
 6283 00f6 1F2B     		cmp	r3, #31
 6284 00f8 2FD8     		bhi	.L626
 6285 00fa DFE803F0 		tbb	[pc, r3]
 6286              	.LVL529:
 6287              	.L628:
 6288 00fe 35       		.byte	(.L632-.L628)/2
 6289 00ff 2E       		.byte	(.L626-.L628)/2
 6290 0100 2E       		.byte	(.L626-.L628)/2
 6291 0101 2E       		.byte	(.L626-.L628)/2
 6292 0102 2E       		.byte	(.L626-.L628)/2
 6293 0103 2E       		.byte	(.L626-.L628)/2
 6294 0104 2E       		.byte	(.L626-.L628)/2
 6295 0105 35       		.byte	(.L632-.L628)/2
 6296 0106 2E       		.byte	(.L626-.L628)/2
 6297 0107 2E       		.byte	(.L626-.L628)/2
 6298 0108 2E       		.byte	(.L626-.L628)/2
 6299 0109 20       		.byte	(.L631-.L628)/2
 6300 010a 2E       		.byte	(.L626-.L628)/2
 6301 010b 64       		.byte	(.L630-.L628)/2
 6302 010c 2E       		.byte	(.L626-.L628)/2
 6303 010d 2E       		.byte	(.L626-.L628)/2
 6304 010e 2E       		.byte	(.L626-.L628)/2
 6305 010f 2E       		.byte	(.L626-.L628)/2
 6306 0110 2E       		.byte	(.L626-.L628)/2
 6307 0111 6B       		.byte	(.L629-.L628)/2
 6308 0112 2E       		.byte	(.L626-.L628)/2
 6309 0113 2E       		.byte	(.L626-.L628)/2
 6310 0114 2E       		.byte	(.L626-.L628)/2
 6311 0115 2E       		.byte	(.L626-.L628)/2
 6312 0116 2E       		.byte	(.L626-.L628)/2
 6313 0117 2E       		.byte	(.L626-.L628)/2
 6314 0118 2E       		.byte	(.L626-.L628)/2
 6315 0119 2E       		.byte	(.L626-.L628)/2
 6316 011a 2E       		.byte	(.L626-.L628)/2
ARM GAS  /tmp/ccvq0xdJ.s 			page 197


 6317 011b 2E       		.byte	(.L626-.L628)/2
 6318 011c 2E       		.byte	(.L626-.L628)/2
 6319 011d 27       		.byte	(.L627-.L628)/2
 6320              		.p2align 1
 6321              	.L733:
2717:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6322              		.loc 1 2717 42 is_stmt 0 discriminator 1 view .LVU1877
 6323 011e 734A     		ldr	r2, .L738+16
 6324              	.LVL530:
2717:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6325              		.loc 1 2717 42 discriminator 1 view .LVU1878
 6326 0120 7B69     		ldr	r3, [r7, #20]
2717:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6327              		.loc 1 2717 24 discriminator 1 view .LVU1879
 6328 0122 1A42     		tst	r2, r3
 6329 0124 75D0     		beq	.L657
2719:src/keys.c    ****        return STATE_UNFINISHED;
 6330              		.loc 1 2719 8 is_stmt 1 view .LVU1880
2719:src/keys.c    ****        return STATE_UNFINISHED;
 6331              		.loc 1 2719 38 is_stmt 0 view .LVU1881
 6332 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6333 0128 C3F30012 		ubfx	r2, r3, #4, #1
2719:src/keys.c    ****        return STATE_UNFINISHED;
 6334              		.loc 1 2719 30 view .LVU1882
 6335 012c C2F10102 		rsb	r2, r2, #1
2719:src/keys.c    ****        return STATE_UNFINISHED;
 6336              		.loc 1 2719 26 view .LVU1883
 6337 0130 62F30413 		bfi	r3, r2, #4, #1
 6338 0134 BB75     		strb	r3, [r7, #22]
 6339              	.LVL531:
 6340              	.L722:
2720:src/keys.c    ****      }
 6341              		.loc 1 2720 8 is_stmt 1 view .LVU1884
2720:src/keys.c    ****      }
 6342              		.loc 1 2720 15 is_stmt 0 view .LVU1885
 6343 0136 3320     		movs	r0, #51
 6344              	.L624:
2771:src/keys.c    **** 
 6345              		.loc 1 2771 2 view .LVU1886
 6346 0138 05B0     		add	sp, sp, #20
 6347              		.cfi_remember_state
 6348              		.cfi_def_cfa_offset 36
 6349              		@ sp needed
 6350 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6351              	.LVL532:
 6352              	.L631:
 6353              		.cfi_restore_state
2657:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6354              		.loc 1 2657 8 is_stmt 1 view .LVU1887
2657:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6355              		.loc 1 2657 11 is_stmt 0 view .LVU1888
 6356 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6357 0140 23B1     		cbz	r3, .L627
2657:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6358              		.loc 1 2657 33 discriminator 1 view .LVU1889
 6359 0142 FFF7FEFF 		bl	keyticks
 6360              	.LVL533:
ARM GAS  /tmp/ccvq0xdJ.s 			page 198


2657:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6361              		.loc 1 2657 30 discriminator 1 view .LVU1890
 6362 0146 1D28     		cmp	r0, #29
 6363 0148 40F39580 		ble	.L728
 6364              	.L627:
2667:src/keys.c    ****        return STATE_UNFINISHED;
 6365              		.loc 1 2667 8 is_stmt 1 view .LVU1891
 6366 014c 0020     		movs	r0, #0
 6367 014e FFF7FEFF 		bl	init_cat
 6368              	.LVL534:
2668:src/keys.c    **** 
 6369              		.loc 1 2668 8 view .LVU1892
2668:src/keys.c    **** 
 6370              		.loc 1 2668 15 is_stmt 0 view .LVU1893
 6371 0152 3320     		movs	r0, #51
2771:src/keys.c    **** 
 6372              		.loc 1 2771 2 view .LVU1894
 6373 0154 05B0     		add	sp, sp, #20
 6374              		.cfi_remember_state
 6375              		.cfi_def_cfa_offset 36
 6376              		@ sp needed
 6377 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6378              	.LVL535:
 6379              	.L626:
 6380              		.cfi_restore_state
 6381              	.LBB619:
 6382              	.LBI594:
 435:src/keys.c    **** {
 6383              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1895
 6384              	.LBB600:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6385              		.loc 1 437 2 discriminator 4 view .LVU1896
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6386              		.loc 1 485 2 discriminator 4 view .LVU1897
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6387              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1898
 6388 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6389              		.loc 1 485 5 discriminator 4 view .LVU1899
 6390 015c 13F0100F 		tst	r3, #16
 6391 0160 14BF     		ite	ne
 6392 0162 0421     		movne	r1, #4
 6393              	.LVL536:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6394              		.loc 1 485 5 discriminator 4 view .LVU1900
 6395 0164 0021     		moveq	r1, #0
 6396 0166 65E7     		b	.L660
 6397              	.LVL537:
 6398              	.L632:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6399              		.loc 1 485 5 discriminator 4 view .LVU1901
 6400              	.LBE600:
 6401              	.LBE619:
2635:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6402              		.loc 1 2635 8 is_stmt 1 view .LVU1902
2635:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6403              		.loc 1 2635 11 is_stmt 0 view .LVU1903
ARM GAS  /tmp/ccvq0xdJ.s 			page 199


 6404 0168 4545     		cmp	r5, r8
 6405 016a EFDA     		bge	.L627
 6406 016c 2846     		mov	r0, r5
 6407              	.LVL538:
2635:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6408              		.loc 1 2635 24 discriminator 1 view .LVU1904
 6409 016e 002E     		cmp	r6, #0
 6410 0170 00F08D80 		beq	.L729
 6411              	.LVL539:
 6412              	.LBB620:
 6413              	.LBI620:
2614:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6414              		.loc 1 2614 12 is_stmt 1 view .LVU1905
 6415              	.LBB621:
2615:src/keys.c    **** }
 6416              		.loc 1 2615 2 view .LVU1906
2615:src/keys.c    **** }
 6417              		.loc 1 2615 10 is_stmt 0 view .LVU1907
 6418 0174 FFF7FEFF 		bl	current_catalogue
 6419              	.LVL540:
2615:src/keys.c    **** }
 6420              		.loc 1 2615 33 view .LVU1908
 6421 0178 00F0F003 		and	r3, r0, #240
 6422              	.LBE621:
 6423              	.LBE620:
2635:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6424              		.loc 1 2635 27 view .LVU1909
 6425 017c F02B     		cmp	r3, #240
 6426              	.LBB623:
 6427              	.LBB622:
2615:src/keys.c    **** }
 6428              		.loc 1 2615 10 view .LVU1910
 6429 017e 0446     		mov	r4, r0
 6430              	.LBE622:
 6431              	.LBE623:
2635:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6432              		.loc 1 2635 27 view .LVU1911
 6433 0180 E4D0     		beq	.L627
 6434              	.L635:
 6435              	.LBB624:
2636:src/keys.c    **** 
 6436              		.loc 1 2636 3 is_stmt 1 view .LVU1912
2638:src/keys.c    **** 
 6437              		.loc 1 2638 3 view .LVU1913
 6438 0182 0020     		movs	r0, #0
 6439 0184 FFF7FEFF 		bl	init_cat
 6440              	.LVL541:
2640:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6441              		.loc 1 2640 3 view .LVU1914
2640:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6442              		.loc 1 2640 6 is_stmt 0 view .LVU1915
 6443 0188 14F47043 		ands	r3, r4, #61440
 6444 018c 00F08C80 		beq	.L636
2640:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6445              		.loc 1 2640 7 discriminator 1 view .LVU1916
 6446 0190 B3F5704F 		cmp	r3, #61440
 6447 0194 00F08880 		beq	.L636
ARM GAS  /tmp/ccvq0xdJ.s 			page 200


 6448              	.LBB625:
2641:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6449              		.loc 1 2641 5 is_stmt 1 view .LVU1917
2641:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6450              		.loc 1 2641 31 is_stmt 0 view .LVU1918
 6451 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6452 019c A3F12005 		sub	r5, r3, #32
 6453              	.LVL542:
2641:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6454              		.loc 1 2641 31 view .LVU1919
 6455 01a0 EDB2     		uxtb	r5, r5
 6456              	.LVL543:
2642:src/keys.c    **** 	     return op;
 6457              		.loc 1 2642 5 is_stmt 1 view .LVU1920
2642:src/keys.c    **** 	     return op;
 6458              		.loc 1 2642 8 is_stmt 0 view .LVU1921
 6459 01a2 012D     		cmp	r5, #1
 6460 01a4 40F28980 		bls	.L637
2642:src/keys.c    **** 	     return op;
 6461              		.loc 1 2642 56 discriminator 1 view .LVU1922
 6462 01a8 6C2D     		cmp	r5, #108
 6463 01aa 00F08680 		beq	.L637
2642:src/keys.c    **** 	     return op;
 6464              		.loc 1 2642 77 discriminator 2 view .LVU1923
 6465 01ae 242D     		cmp	r5, #36
 6466 01b0 00F08380 		beq	.L637
2644:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6467              		.loc 1 2644 5 is_stmt 1 view .LVU1924
2644:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6468              		.loc 1 2644 30 is_stmt 0 view .LVU1925
 6469 01b4 A5F12D02 		sub	r2, r5, #45
2644:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6470              		.loc 1 2644 8 view .LVU1926
 6471 01b8 062A     		cmp	r2, #6
 6472 01ba 00F29F80 		bhi	.L640
2645:src/keys.c    **** 	   else
 6473              		.loc 1 2645 7 is_stmt 1 view .LVU1927
2645:src/keys.c    **** 	   else
 6474              		.loc 1 2645 28 is_stmt 0 view .LVU1928
 6475 01be 4D3B     		subs	r3, r3, #77
2645:src/keys.c    **** 	   else
 6476              		.loc 1 2645 19 view .LVU1929
 6477 01c0 FB73     		strb	r3, [r7, #15]
 6478              	.LBE625:
 6479              	.LBE624:
2654:src/keys.c    **** 
 6480              		.loc 1 2654 15 view .LVU1930
 6481 01c2 3320     		movs	r0, #51
 6482              	.LBB635:
 6483              	.LBB628:
 6484 01c4 B8E7     		b	.L624
 6485              	.LVL544:
 6486              	.L630:
2654:src/keys.c    **** 
 6487              		.loc 1 2654 15 view .LVU1931
 6488              	.LBE628:
 6489              	.LBE635:
ARM GAS  /tmp/ccvq0xdJ.s 			page 201


2671:src/keys.c    ****        if (pos == 0)
 6490              		.loc 1 2671 8 is_stmt 1 view .LVU1932
2671:src/keys.c    ****        if (pos == 0)
 6491              		.loc 1 2671 22 is_stmt 0 view .LVU1933
 6492 01c6 0023     		movs	r3, #0
 6493 01c8 3B77     		strb	r3, [r7, #28]
2672:src/keys.c    **** 	 goto set_max;
 6494              		.loc 1 2672 8 is_stmt 1 view .LVU1934
2672:src/keys.c    **** 	 goto set_max;
 6495              		.loc 1 2672 11 is_stmt 0 view .LVU1935
 6496 01ca 002D     		cmp	r5, #0
 6497 01cc 5DD1     		bne	.L730
 6498              	.LVL545:
 6499              	.L644:
2765:src/keys.c    ****  set_pos:
 6500              		.loc 1 2765 4 is_stmt 1 view .LVU1936
2765:src/keys.c    ****  set_pos:
 6501              		.loc 1 2765 8 is_stmt 0 view .LVU1937
 6502 01ce 08F1FF35 		add	r5, r8, #-1
 6503              	.LVL546:
2765:src/keys.c    ****  set_pos:
 6504              		.loc 1 2765 8 view .LVU1938
 6505 01d2 77E7     		b	.L645
 6506              	.LVL547:
 6507              	.L629:
2679:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6508              		.loc 1 2679 8 is_stmt 1 view .LVU1939
2679:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6509              		.loc 1 2679 22 is_stmt 0 view .LVU1940
 6510 01d4 0023     		movs	r3, #0
 6511 01d6 3B77     		strb	r3, [r7, #28]
2680:src/keys.c    ****        if (pos >= ctmax)
 6512              		.loc 1 2680 8 is_stmt 1 view .LVU1941
2680:src/keys.c    ****        if (pos >= ctmax)
 6513              		.loc 1 2680 14 is_stmt 0 view .LVU1942
 6514 01d8 06E0     		b	.L648
 6515              	.LVL548:
 6516              	.L731:
2680:src/keys.c    ****        if (pos >= ctmax)
 6517              		.loc 1 2680 29 discriminator 1 view .LVU1943
 6518 01da 66B3     		cbz	r6, .L649
 6519              	.LBB636:
 6520              	.LBB637:
2615:src/keys.c    **** }
 6521              		.loc 1 2615 10 view .LVU1944
 6522 01dc FFF7FEFF 		bl	current_catalogue
 6523              	.LVL549:
2615:src/keys.c    **** }
 6524              		.loc 1 2615 33 view .LVU1945
 6525 01e0 00F0F000 		and	r0, r0, #240
 6526              	.LBE637:
 6527              	.LBE636:
2680:src/keys.c    ****        if (pos >= ctmax)
 6528              		.loc 1 2680 41 view .LVU1946
 6529 01e4 F028     		cmp	r0, #240
 6530 01e6 26D1     		bne	.L649
 6531              	.L648:
ARM GAS  /tmp/ccvq0xdJ.s 			page 202


2680:src/keys.c    ****        if (pos >= ctmax)
 6532              		.loc 1 2680 65 is_stmt 1 discriminator 3 view .LVU1947
2680:src/keys.c    ****        if (pos >= ctmax)
 6533              		.loc 1 2680 14 discriminator 3 view .LVU1948
 6534 01e8 0135     		adds	r5, r5, #1
 6535              	.LVL550:
 6536              	.LBB640:
 6537              	.LBI636:
2614:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6538              		.loc 1 2614 12 discriminator 3 view .LVU1949
 6539              	.LBB638:
2615:src/keys.c    **** }
 6540              		.loc 1 2615 2 discriminator 3 view .LVU1950
 6541              	.LBE638:
 6542              	.LBE640:
2680:src/keys.c    ****        if (pos >= ctmax)
 6543              		.loc 1 2680 14 is_stmt 0 discriminator 3 view .LVU1951
 6544 01ea A845     		cmp	r8, r5
 6545              	.LBB641:
 6546              	.LBB639:
2615:src/keys.c    **** }
 6547              		.loc 1 2615 10 discriminator 3 view .LVU1952
 6548 01ec 2846     		mov	r0, r5
 6549              	.LBE639:
 6550              	.LBE641:
2680:src/keys.c    ****        if (pos >= ctmax)
 6551              		.loc 1 2680 14 discriminator 3 view .LVU1953
 6552 01ee F4DC     		bgt	.L731
 6553              	.LVL551:
2767:src/keys.c    ****      --pos;
 6554              		.loc 1 2767 10 is_stmt 1 view .LVU1954
2682:src/keys.c    ****        goto set_pos;
 6555              		.loc 1 2682 7 is_stmt 0 view .LVU1955
 6556 01f0 3546     		mov	r5, r6
 6557              	.LVL552:
2767:src/keys.c    ****      --pos;
 6558              		.loc 1 2767 10 view .LVU1956
 6559 01f2 06B3     		cbz	r6, .L649
 6560              	.LVL553:
2767:src/keys.c    ****      --pos;
 6561              		.loc 1 2767 10 view .LVU1957
 6562 01f4 0025     		movs	r5, #0
 6563              	.LVL554:
2767:src/keys.c    ****      --pos;
 6564              		.loc 1 2767 10 view .LVU1958
 6565 01f6 73E7     		b	.L643
 6566              	.LVL555:
 6567              	.L674:
2740:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6568              		.loc 1 2740 8 view .LVU1959
 6569 01f8 2B46     		mov	r3, r5
2741:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6570              		.loc 1 2741 6 is_stmt 1 view .LVU1960
2741:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6571              		.loc 1 2741 31 is_stmt 0 view .LVU1961
 6572 01fa 3B44     		add	r3, r3, r7
2741:src/keys.c    ****    /* Search for the current buffer in the catalogue */
ARM GAS  /tmp/ccvq0xdJ.s 			page 203


 6573              		.loc 1 2741 27 view .LVU1962
 6574 01fc 0135     		adds	r5, r5, #1
 6575 01fe EDB2     		uxtb	r5, r5
 6576 0200 3D77     		strb	r5, [r7, #28]
2741:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6577              		.loc 1 2741 31 view .LVU1963
 6578 0202 83F82040 		strb	r4, [r3, #32]
 6579 0206 30E7     		b	.L642
 6580              	.LVL556:
 6581              	.L724:
2689:src/keys.c    ****        /*
 6582              		.loc 1 2689 6 is_stmt 1 view .LVU1964
2689:src/keys.c    ****        /*
 6583              		.loc 1 2689 9 is_stmt 0 view .LVU1965
 6584 0208 BAF1120F 		cmp	r10, #18
 6585 020c 21D0     		beq	.L732
 6586              	.L651:
2717:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6587              		.loc 1 2717 11 is_stmt 1 view .LVU1966
2717:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6588              		.loc 1 2717 14 is_stmt 0 view .LVU1967
 6589 020e 2428     		cmp	r0, #36
 6590 0210 85D0     		beq	.L733
 6591              	.LVL557:
 6592              	.L657:
2732:src/keys.c    ****    reset_shift();
 6593              		.loc 1 2732 4 is_stmt 1 view .LVU1968
 6594              	.LBB642:
 435:src/keys.c    **** {
 6595              		.loc 1 435 12 view .LVU1969
 6596              	.LBB601:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6597              		.loc 1 437 2 view .LVU1970
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6598              		.loc 1 485 2 view .LVU1971
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6599              		.loc 1 485 5 is_stmt 0 view .LVU1972
 6600 0212 0121     		movs	r1, #1
 6601              	.LVL558:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6602              		.loc 1 485 5 view .LVU1973
 6603 0214 0EE7     		b	.L660
 6604              	.LVL559:
 6605              	.L664:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6606              		.loc 1 485 5 view .LVU1974
 6607 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6608              	.LVL560:
 6609              	.L666:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6610              		.loc 1 485 5 view .LVU1975
 6611              	.LBE601:
 6612              	.LBE642:
 6613              	.LBB643:
2761:src/keys.c    ****        goto set_pos;
 6614              		.loc 1 2761 6 is_stmt 1 view .LVU1976
2761:src/keys.c    ****        goto set_pos;
ARM GAS  /tmp/ccvq0xdJ.s 			page 204


 6615              		.loc 1 2761 9 is_stmt 0 view .LVU1977
 6616 021a 002B     		cmp	r3, #0
 6617 021c 3FF450AF 		beq	.L665
 6618              	.LBE643:
2746:src/keys.c    ****      char buf[16];
 6619              		.loc 1 2746 31 is_stmt 1 view .LVU1978
 6620 0220 0135     		adds	r5, r5, #1
 6621              	.LVL561:
2746:src/keys.c    ****      char buf[16];
 6622              		.loc 1 2746 18 view .LVU1979
2746:src/keys.c    ****      char buf[16];
 6623              		.loc 1 2746 4 is_stmt 0 view .LVU1980
 6624 0222 A845     		cmp	r8, r5
 6625 0224 7FF429AF 		bne	.L662
 6626              	.LVL562:
 6627              	.L720:
2746:src/keys.c    ****      char buf[16];
 6628              		.loc 1 2746 4 view .LVU1981
 6629 0228 D9F80040 		ldr	r4, [r9]
 6630 022c CFE7     		b	.L644
 6631              	.LVL563:
 6632              	.L726:
2746:src/keys.c    ****      char buf[16];
 6633              		.loc 1 2746 4 view .LVU1982
 6634 022e 3A44     		add	r2, r2, r7
 6635              	.LVL564:
2746:src/keys.c    ****      char buf[16];
 6636              		.loc 1 2746 4 view .LVU1983
 6637 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6638              	.LVL565:
2746:src/keys.c    ****      char buf[16];
 6639              		.loc 1 2746 4 view .LVU1984
 6640 0234 F1E7     		b	.L666
 6641              	.LVL566:
 6642              	.L649:
2769:src/keys.c    ****    return STATE_UNFINISHED;
 6643              		.loc 1 2769 17 view .LVU1985
 6644 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6645 023a 05F07F05 		and	r5, r5, #127
 6646              	.LVL567:
2769:src/keys.c    ****    return STATE_UNFINISHED;
 6647              		.loc 1 2769 4 is_stmt 1 view .LVU1986
2769:src/keys.c    ****    return STATE_UNFINISHED;
 6648              		.loc 1 2769 17 is_stmt 0 view .LVU1987
 6649 023e 65F34B13 		bfi	r3, r5, #5, #7
 6650 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2770:src/keys.c    ****  }
 6651              		.loc 1 2770 4 is_stmt 1 view .LVU1988
2770:src/keys.c    ****  }
 6652              		.loc 1 2770 11 is_stmt 0 view .LVU1989
 6653 0246 3320     		movs	r0, #51
 6654 0248 51E7     		b	.L734
 6655              	.LVL568:
 6656              	.L725:
2723:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6657              		.loc 1 2723 6 is_stmt 1 view .LVU1990
2723:src/keys.c    ****        init_cat(CATALOGUE_NONE);
ARM GAS  /tmp/ccvq0xdJ.s 			page 205


 6658              		.loc 1 2723 9 is_stmt 0 view .LVU1991
 6659 024a 1028     		cmp	r0, #16
 6660 024c 23D0     		beq	.L735
 6661              	.L659:
2732:src/keys.c    ****    reset_shift();
 6662              		.loc 1 2732 4 is_stmt 1 view .LVU1992
 6663              	.LVL569:
 6664              	.LBB644:
 435:src/keys.c    **** {
 6665              		.loc 1 435 12 view .LVU1993
 6666              	.LBB602:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6667              		.loc 1 437 2 view .LVU1994
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6668              		.loc 1 485 2 view .LVU1995
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6669              		.loc 1 485 5 is_stmt 0 view .LVU1996
 6670 024e 0521     		movs	r1, #5
 6671              	.LVL570:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6672              		.loc 1 485 5 view .LVU1997
 6673 0250 F0E6     		b	.L660
 6674              	.LVL571:
 6675              	.L732:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6676              		.loc 1 485 5 view .LVU1998
 6677              	.LBE602:
 6678              	.LBE644:
2689:src/keys.c    ****        /*
 6679              		.loc 1 2689 32 discriminator 1 view .LVU1999
 6680 0252 0128     		cmp	r0, #1
 6681 0254 DBD1     		bne	.L651
 6682              	.LBB645:
2698:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 6683              		.loc 1 2698 8 is_stmt 1 view .LVU2000
2706:src/keys.c    ****        int i;
 6684              		.loc 1 2706 8 view .LVU2001
2706:src/keys.c    ****        int i;
 6685              		.loc 1 2706 26 is_stmt 0 view .LVU2002
 6686 0256 2846     		mov	r0, r5
 6687              	.LVL572:
2706:src/keys.c    ****        int i;
 6688              		.loc 1 2706 26 view .LVU2003
 6689 0258 FFF7FEFF 		bl	current_catalogue
 6690              	.LVL573:
2706:src/keys.c    ****        int i;
 6691              		.loc 1 2706 26 view .LVU2004
 6692 025c 0446     		mov	r4, r0
 6693              	.LVL574:
2707:src/keys.c    **** 
 6694              		.loc 1 2707 8 is_stmt 1 view .LVU2005
2709:src/keys.c    ****        if (isRARG(op))
 6695              		.loc 1 2709 8 view .LVU2006
 6696 025e 0020     		movs	r0, #0
 6697              	.LVL575:
2709:src/keys.c    ****        if (isRARG(op))
 6698              		.loc 1 2709 8 is_stmt 0 view .LVU2007
ARM GAS  /tmp/ccvq0xdJ.s 			page 206


 6699 0260 FFF7FEFF 		bl	init_cat
 6700              	.LVL576:
2710:src/keys.c    **** 	 return op ^ 1;
 6701              		.loc 1 2710 8 is_stmt 1 view .LVU2008
2710:src/keys.c    **** 	 return op ^ 1;
 6702              		.loc 1 2710 11 is_stmt 0 view .LVU2009
 6703 0264 14F47043 		ands	r3, r4, #61440
 6704 0268 29D0     		beq	.L652
2710:src/keys.c    **** 	 return op ^ 1;
 6705              		.loc 1 2710 12 discriminator 1 view .LVU2010
 6706 026a B3F5704F 		cmp	r3, #61440
 6707 026e 26D0     		beq	.L652
2711:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6708              		.loc 1 2711 3 is_stmt 1 view .LVU2011
2711:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6709              		.loc 1 2711 13 is_stmt 0 view .LVU2012
 6710 0270 84F00100 		eor	r0, r4, #1
 6711 0274 60E7     		b	.L624
 6712              	.LVL577:
 6713              	.L728:
2711:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6714              		.loc 1 2711 13 view .LVU2013
 6715              	.LBE645:
2658:src/keys.c    **** 	   goto search;
 6716              		.loc 1 2658 3 is_stmt 1 view .LVU2014
2658:src/keys.c    **** 	   goto search;
 6717              		.loc 1 2658 7 is_stmt 0 view .LVU2015
 6718 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6719              	.LVL578:
2658:src/keys.c    **** 	   goto search;
 6720              		.loc 1 2658 7 view .LVU2016
 6721 0278 013D     		subs	r5, r5, #1
 6722 027a EDB2     		uxtb	r5, r5
2658:src/keys.c    **** 	   goto search;
 6723              		.loc 1 2658 6 view .LVU2017
 6724 027c 3D77     		strb	r5, [r7, #28]
 6725 027e 002D     		cmp	r5, #0
 6726 0280 7FF4F3AE 		bne	.L642
 6727 0284 D9F80040 		ldr	r4, [r9]
 6728 0288 2AE7     		b	.L643
 6729              	.LVL579:
 6730              	.L730:
2675:src/keys.c    ****        goto set_pos;
 6731              		.loc 1 2675 3 is_stmt 1 view .LVU2018
 6732 028a 013D     		subs	r5, r5, #1
 6733              	.LVL580:
2676:src/keys.c    **** 
 6734              		.loc 1 2676 8 view .LVU2019
 6735 028c 1AE7     		b	.L645
 6736              	.LVL581:
 6737              	.L729:
2676:src/keys.c    **** 
 6738              		.loc 1 2676 8 is_stmt 0 view .LVU2020
 6739 028e FFF7FEFF 		bl	current_catalogue
 6740              	.LVL582:
2676:src/keys.c    **** 
 6741              		.loc 1 2676 8 view .LVU2021
ARM GAS  /tmp/ccvq0xdJ.s 			page 207


 6742 0292 0446     		mov	r4, r0
 6743 0294 75E7     		b	.L635
 6744              	.LVL583:
 6745              	.L735:
2723:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6746              		.loc 1 2723 19 discriminator 1 view .LVU2022
 6747 0296 BAF1130F 		cmp	r10, #19
 6748 029a D8D1     		bne	.L659
2724:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6749              		.loc 1 2724 8 is_stmt 1 view .LVU2023
 6750 029c 0020     		movs	r0, #0
 6751              	.LVL584:
2724:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6752              		.loc 1 2724 8 is_stmt 0 view .LVU2024
 6753 029e FFF7FEFF 		bl	init_cat
 6754              	.LVL585:
2725:src/keys.c    ****      }
 6755              		.loc 1 2725 8 is_stmt 1 view .LVU2025
2725:src/keys.c    ****      }
 6756              		.loc 1 2725 15 is_stmt 0 view .LVU2026
 6757 02a2 40F23D10 		movw	r0, #317
 6758 02a6 47E7     		b	.L624
 6759              	.L636:
 6760              	.LBB646:
2650:src/keys.c    **** 	 }
 6761              		.loc 1 2650 5 is_stmt 1 view .LVU2027
 6762              	.LBB629:
 6763              	.LBB630:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6764              		.loc 1 715 5 is_stmt 0 view .LVU2028
 6765 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6766 02ac 012B     		cmp	r3, #1
 6767              	.LBE630:
 6768              	.LBE629:
2650:src/keys.c    **** 	 }
 6769              		.loc 1 2650 12 view .LVU2029
 6770 02ae 2046     		mov	r0, r4
 6771              	.LVL586:
 6772              	.LBB632:
 6773              	.LBI629:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6774              		.loc 1 714 12 is_stmt 1 view .LVU2030
 6775              	.LBB631:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6776              		.loc 1 715 2 view .LVU2031
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6777              		.loc 1 715 5 is_stmt 0 view .LVU2032
 6778 02b0 7FF442AF 		bne	.L624
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6779              		.loc 1 715 5 view .LVU2033
 6780 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6781              	.LVL587:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6782              		.loc 1 715 5 view .LVU2034
 6783 02b8 3EE7     		b	.L624
 6784              	.LVL588:
 6785              	.L637:
ARM GAS  /tmp/ccvq0xdJ.s 			page 208


 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6786              		.loc 1 715 5 view .LVU2035
 6787              	.LBE631:
 6788              	.LBE632:
 6789              	.LBB633:
2643:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6790              		.loc 1 2643 7 is_stmt 1 view .LVU2036
2643:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6791              		.loc 1 2643 14 is_stmt 0 view .LVU2037
 6792 02ba 2046     		mov	r0, r4
 6793 02bc 3CE7     		b	.L624
 6794              	.LVL589:
 6795              	.L652:
2643:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6796              		.loc 1 2643 14 view .LVU2038
 6797 02be 0C48     		ldr	r0, .L738+20
 6798              	.LBE633:
 6799              	.LBE646:
2621:src/keys.c    ****    int pos = State.catpos;
 6800              		.loc 1 2621 93 view .LVU2039
 6801 02c0 40F28522 		movw	r2, #645
 6802 02c4 0146     		mov	r1, r0
 6803 02c6 0023     		movs	r3, #0
 6804 02c8 01E0     		b	.L654
 6805              	.LVL590:
 6806              	.L737:
2621:src/keys.c    ****    int pos = State.catpos;
 6807              		.loc 1 2621 93 view .LVU2040
 6808 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6809              	.LVL591:
 6810              	.L654:
 6811              	.LBB647:
2713:src/keys.c    **** 	   return conv_mapping[i^1];
 6812              		.loc 1 2713 3 is_stmt 1 view .LVU2041
2712:src/keys.c    **** 	 if (op == conv_mapping[i])
 6813              		.loc 1 2712 72 view .LVU2042
2713:src/keys.c    **** 	   return conv_mapping[i^1];
 6814              		.loc 1 2713 6 is_stmt 0 view .LVU2043
 6815 02ce A242     		cmp	r2, r4
 6816 02d0 1ED0     		beq	.L736
2712:src/keys.c    **** 	 if (op == conv_mapping[i])
 6817              		.loc 1 2712 72 discriminator 2 view .LVU2044
 6818 02d2 0133     		adds	r3, r3, #1
 6819              	.LVL592:
2712:src/keys.c    **** 	 if (op == conv_mapping[i])
 6820              		.loc 1 2712 20 is_stmt 1 discriminator 2 view .LVU2045
2712:src/keys.c    **** 	 if (op == conv_mapping[i])
 6821              		.loc 1 2712 8 is_stmt 0 discriminator 2 view .LVU2046
 6822 02d4 0C2B     		cmp	r3, #12
 6823 02d6 F8D1     		bne	.L737
 6824 02d8 2DE7     		b	.L722
 6825              	.L739:
 6826 02da 00BF     		.align	2
 6827              	.L738:
 6828 02dc 00000000 		.word	StateWhileOn
 6829 02e0 00000000 		.word	.LANCHOR8
 6830 02e4 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/ccvq0xdJ.s 			page 209


 6831 02e8 00000000 		.word	.LANCHOR15
 6832 02ec 00080800 		.word	526336
 6833 02f0 00000000 		.word	.LANCHOR14
 6834 02f4 00000000 		.word	main_ram
 6835 02f8 1F000000 		.word	StateWhileOn+31
 6836              	.LVL593:
 6837              	.L640:
2712:src/keys.c    **** 	 if (op == conv_mapping[i])
 6838              		.loc 1 2712 8 discriminator 2 view .LVU2047
 6839              	.LBE647:
 6840              	.LBB648:
 6841              	.LBB634:
2647:src/keys.c    **** 	 }
 6842              		.loc 1 2647 7 is_stmt 1 view .LVU2048
 6843              	.LBB626:
 6844              	.LBI626:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6845              		.loc 1 552 13 view .LVU2049
 6846              	.LBB627:
 553:src/keys.c    **** 		return;
 6847              		.loc 1 553 2 view .LVU2050
 553:src/keys.c    **** 		return;
 6848              		.loc 1 553 6 is_stmt 0 view .LVU2051
 6849 02fc FFF7FEFF 		bl	is_bad_cmdline
 6850              	.LVL594:
 553:src/keys.c    **** 		return;
 6851              		.loc 1 553 5 view .LVU2052
 6852 0300 0028     		cmp	r0, #0
 6853 0302 7FF418AF 		bne	.L722
 6854 0306 2846     		mov	r0, r5
 6855 0308 FFF7FEFF 		bl	init_arg.part.0
 6856              	.LVL595:
 6857              	.LBE627:
 6858              	.LBE626:
 6859              	.LBE634:
 6860              	.LBE648:
2654:src/keys.c    **** 
 6861              		.loc 1 2654 15 view .LVU2053
 6862 030c 3320     		movs	r0, #51
 6863 030e 13E7     		b	.L624
 6864              	.LVL596:
 6865              	.L736:
 6866              	.LBB649:
2714:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6867              		.loc 1 2714 5 is_stmt 1 view .LVU2054
2714:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6868              		.loc 1 2714 26 is_stmt 0 view .LVU2055
 6869 0310 83F00103 		eor	r3, r3, #1
 6870              	.LVL597:
2714:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6871              		.loc 1 2714 24 view .LVU2056
 6872 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6873 0318 0EE7     		b	.L624
 6874              	.LBE649:
 6875              		.cfi_endproc
 6876              	.LFE48:
 6878              		.section	.text.find_pos,"ax",%progbits
ARM GAS  /tmp/ccvq0xdJ.s 			page 210


 6879              		.align	1
 6880              		.p2align 2,,3
 6881              		.global	find_pos
 6882              		.syntax unified
 6883              		.thumb
 6884              		.thumb_func
 6885              		.fpu fpv4-sp-d16
 6887              	find_pos:
 6888              	.LVL598:
 6889              	.LFB49:
2774:src/keys.c    **** 	int pos;
 6890              		.loc 1 2774 32 is_stmt 1 view -0
 6891              		.cfi_startproc
 6892              		@ args = 0, pretend = 0, frame = 16
 6893              		@ frame_needed = 0, uses_anonymous_args = 0
2775:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6894              		.loc 1 2775 2 view .LVU2058
2776:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6895              		.loc 1 2776 2 view .LVU2059
 6896              	.LBB650:
 6897              	.LBI650:
2476:src/keys.c    **** 	// A quick table of catalogue sizes
 6898              		.loc 1 2476 5 view .LVU2060
 6899              	.LBB651:
2479:src/keys.c    **** 	{
 6900              		.loc 1 2479 2 view .LVU2061
2510:src/keys.c    **** #endif
 6901              		.loc 1 2510 2 view .LVU2062
 6902              	.LBE651:
 6903              	.LBE650:
2774:src/keys.c    **** 	int pos;
 6904              		.loc 1 2774 32 is_stmt 0 view .LVU2063
 6905 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6906              		.cfi_def_cfa_offset 32
 6907              		.cfi_offset 4, -32
 6908              		.cfi_offset 5, -28
 6909              		.cfi_offset 6, -24
 6910              		.cfi_offset 7, -20
 6911              		.cfi_offset 8, -16
 6912              		.cfi_offset 9, -12
 6913              		.cfi_offset 10, -8
 6914              		.cfi_offset 14, -4
 6915              	.LBB653:
 6916              	.LBB652:
2510:src/keys.c    **** #endif
 6917              		.loc 1 2510 31 view .LVU2064
 6918 0004 1E4B     		ldr	r3, .L757
2510:src/keys.c    **** #endif
 6919              		.loc 1 2510 24 view .LVU2065
 6920 0006 1F4A     		ldr	r2, .L757+4
2510:src/keys.c    **** #endif
 6921              		.loc 1 2510 31 view .LVU2066
 6922 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2510:src/keys.c    **** #endif
 6923              		.loc 1 2510 24 view .LVU2067
 6924 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6925              	.LVL599:
ARM GAS  /tmp/ccvq0xdJ.s 			page 211


2510:src/keys.c    **** #endif
 6926              		.loc 1 2510 24 view .LVU2068
 6927              	.LBE652:
 6928              	.LBE653:
2777:src/keys.c    **** 		char buf[16];
 6929              		.loc 1 2777 2 is_stmt 1 view .LVU2069
2777:src/keys.c    **** 		char buf[16];
 6930              		.loc 1 2777 16 view .LVU2070
2774:src/keys.c    **** 	int pos;
 6931              		.loc 1 2774 32 is_stmt 0 view .LVU2071
 6932 000e 84B0     		sub	sp, sp, #16
 6933              		.cfi_def_cfa_offset 48
2777:src/keys.c    **** 		char buf[16];
 6934              		.loc 1 2777 2 view .LVU2072
 6935 0010 BAF1000F 		cmp	r10, #0
 6936 0014 32D0     		beq	.L747
 6937 0016 8146     		mov	r9, r0
2777:src/keys.c    **** 		char buf[16];
 6938              		.loc 1 2777 11 view .LVU2073
 6939 0018 4FF00008 		mov	r8, #0
 6940 001c C0F10107 		rsb	r7, r0, #1
 6941              	.LVL600:
 6942              	.L746:
 6943              	.LBB654:
2778:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6944              		.loc 1 2778 3 is_stmt 1 view .LVU2074
2779:src/keys.c    **** 		int i;
 6945              		.loc 1 2779 3 view .LVU2075
2779:src/keys.c    **** 		int i;
 6946              		.loc 1 2779 21 is_stmt 0 view .LVU2076
 6947 0020 4046     		mov	r0, r8
 6948 0022 FFF7FEFF 		bl	current_catalogue
 6949              	.LVL601:
 6950 0026 6946     		mov	r1, sp
 6951 0028 FFF7FEFF 		bl	catcmd
 6952              	.LVL602:
 6953 002c 0646     		mov	r6, r0
 6954              	.LVL603:
2780:src/keys.c    **** 
 6955              		.loc 1 2780 3 is_stmt 1 view .LVU2077
2782:src/keys.c    **** 			cmd++;
 6956              		.loc 1 2782 3 view .LVU2078
2783:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6957              		.loc 1 2783 4 view .LVU2079
2782:src/keys.c    **** 			cmd++;
 6958              		.loc 1 2782 7 is_stmt 0 view .LVU2080
 6959 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6960              	.LVL604:
2782:src/keys.c    **** 			cmd++;
 6961              		.loc 1 2782 6 view .LVU2081
 6962 0030 1428     		cmp	r0, #20
 6963 0032 04BF     		itt	eq
 6964 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2783:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6965              		.loc 1 2783 7 view .LVU2082
 6966 0036 0136     		addeq	r6, r6, #1
 6967              	.LVL605:
ARM GAS  /tmp/ccvq0xdJ.s 			page 212


2784:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6968              		.loc 1 2784 3 is_stmt 1 view .LVU2083
2784:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6969              		.loc 1 2784 13 view .LVU2084
2784:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6970              		.loc 1 2784 3 is_stmt 0 view .LVU2085
 6971 0038 A8B1     		cbz	r0, .L748
 6972 003a 09F1FF33 		add	r3, r9, #-1
 6973 003e 04E0     		b	.L745
 6974              	.LVL606:
 6975              	.L756:
 6976              	.LBB655:
2789:src/keys.c    **** 				break;
 6977              		.loc 1 2789 12 view .LVU2086
 6978 0040 12DB     		blt	.L743
 6979              	.LBE655:
2784:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6980              		.loc 1 2784 16 discriminator 2 view .LVU2087
 6981 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6982              	.LVL607:
2784:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6983              		.loc 1 2784 16 discriminator 2 view .LVU2088
 6984 0046 3C44     		add	r4, r4, r7
2784:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6985              		.loc 1 2784 3 discriminator 2 view .LVU2089
 6986 0048 B0B1     		cbz	r0, .L755
 6987              	.LVL608:
 6988              	.L745:
 6989              	.LBB656:
2785:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6990              		.loc 1 2785 4 is_stmt 1 view .LVU2090
 6991 004a 5C1C     		adds	r4, r3, #1
2785:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6992              		.loc 1 2785 18 is_stmt 0 view .LVU2091
 6993 004c FFF7FEFF 		bl	remap_chars
 6994              	.LVL609:
 6995 0050 0546     		mov	r5, r0
2786:src/keys.c    **** 			if (c > cl)
 6996              		.loc 1 2786 19 view .LVU2092
 6997 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6998              	.LVL610:
2786:src/keys.c    **** 			if (c > cl)
 6999              		.loc 1 2786 4 is_stmt 1 view .LVU2093
2786:src/keys.c    **** 			if (c > cl)
 7000              		.loc 1 2786 19 is_stmt 0 view .LVU2094
 7001 0054 FFF7FEFF 		bl	remap_chars
 7002              	.LVL611:
2789:src/keys.c    **** 				break;
 7003              		.loc 1 2789 9 is_stmt 1 view .LVU2095
 7004              	.LBE656:
2784:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7005              		.loc 1 2784 29 view .LVU2096
2784:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7006              		.loc 1 2784 13 view .LVU2097
 7007              	.LBB657:
2787:src/keys.c    **** 				return pos;
 7008              		.loc 1 2787 4 view .LVU2098
ARM GAS  /tmp/ccvq0xdJ.s 			page 213


2787:src/keys.c    **** 				return pos;
 7009              		.loc 1 2787 7 is_stmt 0 view .LVU2099
 7010 0058 8542     		cmp	r5, r0
 7011 005a 2346     		mov	r3, r4
 7012 005c F0DD     		ble	.L756
 7013              	.LVL612:
 7014              	.L740:
2787:src/keys.c    **** 				return pos;
 7015              		.loc 1 2787 7 view .LVU2100
 7016              	.LBE657:
 7017              	.LBE654:
2796:src/keys.c    **** 
 7018              		.loc 1 2796 1 view .LVU2101
 7019 005e 4046     		mov	r0, r8
 7020 0060 04B0     		add	sp, sp, #16
 7021              		.cfi_remember_state
 7022              		.cfi_def_cfa_offset 32
 7023              		@ sp needed
 7024 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7025              	.LVL613:
 7026              	.L748:
 7027              		.cfi_restore_state
 7028              	.LBB658:
2784:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7029              		.loc 1 2784 3 view .LVU2102
 7030 0066 4C46     		mov	r4, r9
 7031              	.LVL614:
 7032              	.L743:
2792:src/keys.c    **** 			return pos;
 7033              		.loc 1 2792 3 is_stmt 1 view .LVU2103
2792:src/keys.c    **** 			return pos;
 7034              		.loc 1 2792 6 is_stmt 0 view .LVU2104
 7035 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7036 006a 002B     		cmp	r3, #0
 7037 006c F7D0     		beq	.L740
 7038              	.LBE658:
2777:src/keys.c    **** 		char buf[16];
 7039              		.loc 1 2777 29 is_stmt 1 view .LVU2105
 7040 006e 08F10108 		add	r8, r8, #1
 7041              	.LVL615:
2777:src/keys.c    **** 		char buf[16];
 7042              		.loc 1 2777 16 view .LVU2106
2777:src/keys.c    **** 		char buf[16];
 7043              		.loc 1 2777 2 is_stmt 0 view .LVU2107
 7044 0072 D045     		cmp	r8, r10
 7045 0074 D4D1     		bne	.L746
 7046 0076 F2E7     		b	.L740
 7047              	.LVL616:
 7048              	.L755:
2777:src/keys.c    **** 		char buf[16];
 7049              		.loc 1 2777 2 view .LVU2108
 7050 0078 4C44     		add	r4, r4, r9
 7051 007a F5E7     		b	.L743
 7052              	.LVL617:
 7053              	.L747:
2777:src/keys.c    **** 		char buf[16];
 7054              		.loc 1 2777 11 view .LVU2109
ARM GAS  /tmp/ccvq0xdJ.s 			page 214


 7055 007c D046     		mov	r8, r10
 7056 007e EEE7     		b	.L740
 7057              	.L758:
 7058              		.align	2
 7059              	.L757:
 7060 0080 00000000 		.word	StateWhileOn
 7061 0084 00000000 		.word	.LANCHOR8
 7062              		.cfi_endproc
 7063              	.LFE49:
 7065              		.section	.text.get_alpha_state,"ax",%progbits
 7066              		.align	1
 7067              		.p2align 2,,3
 7068              		.global	get_alpha_state
 7069              		.syntax unified
 7070              		.thumb
 7071              		.thumb_func
 7072              		.fpu fpv4-sp-d16
 7074              	get_alpha_state:
 7075              	.LFB61:
3121:src/keys.c    **** 
3122:src/keys.c    **** 
3123:src/keys.c    **** static int process_registerlist(const keycode c) {
3124:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3125:src/keys.c    **** 	enum shifts shift = reset_shift();
3126:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3127:src/keys.c    **** 	const int g_max = global_regs();
3128:src/keys.c    **** 
3129:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3130:src/keys.c    **** 		if (local_regs())
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3133:src/keys.c    **** 		goto reset_window;
3134:src/keys.c    **** 	}
3135:src/keys.c    **** 	else if (n <= 9) {
3136:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3138:src/keys.c    **** 			dv = n;
3139:src/keys.c    **** 		State2.digval = dv;
3140:src/keys.c    **** 		goto reset_window;
3141:src/keys.c    **** 	}
3142:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3144:src/keys.c    **** 		set_smode(SDISP_SHOW);
3145:src/keys.c    **** 	}
3146:src/keys.c    **** 	else if (n != NO_REG) {
3147:src/keys.c    **** 		State2.digval = n;
3148:src/keys.c    **** 		goto reset_window;
3149:src/keys.c    **** 	}
3150:src/keys.c    **** 
3151:src/keys.c    **** 	switch (c) {
3152:src/keys.c    **** 	case K_DOWN:
3153:src/keys.c    **** 		if (State2.digval > 0) {
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3155:src/keys.c    **** 				State2.digval = global_regs();
3156:src/keys.c    **** 			--State2.digval;
3157:src/keys.c    **** 		}
3158:src/keys.c    **** 		else
ARM GAS  /tmp/ccvq0xdJ.s 			page 215


3159:src/keys.c    **** 			State2.digval = max - 1;
3160:src/keys.c    **** 		goto reset_window;
3161:src/keys.c    **** 
3162:src/keys.c    **** 	case K_UP:
3163:src/keys.c    **** 		if (State2.digval < max - 1) {
3164:src/keys.c    **** 			State2.digval++;
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3166:src/keys.c    **** 				State2.digval = regX_idx;
3167:src/keys.c    **** 		}
3168:src/keys.c    **** 		else	
3169:src/keys.c    **** 			State2.digval = 0;
3170:src/keys.c    **** 		goto reset_window;
3171:src/keys.c    **** 
3172:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3173:src/keys.c    **** 	case K04:
3174:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3175:src/keys.c    **** 		goto reset_window;
3176:src/keys.c    **** #endif
3177:src/keys.c    **** 
3178:src/keys.c    **** 	case K24:			
3179:src/keys.c    **** 	//case K60:
3180:src/keys.c    **** 		if (State2.disp_temp)
3181:src/keys.c    **** 			return STATE_UNFINISHED;
3182:src/keys.c    **** 		break;		// Exit doing nothing
3183:src/keys.c    **** 
3184:src/keys.c    **** 	case K20:		// ENTER
3185:src/keys.c    **** 		if (shift == SHIFT_F) {
3186:src/keys.c    **** 			State2.disp_as_alpha = 1;
3187:src/keys.c    **** 			goto reset_window;
3188:src/keys.c    **** 		}
3189:src/keys.c    **** 	case K11:		// RCL
3190:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3191:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3192:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
3193:src/keys.c    **** #else
3194:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3195:src/keys.c    **** #endif
3196:src/keys.c    **** 			State2.registerlist = 0;
3197:src/keys.c    **** 			State2.digval = 0;
3198:src/keys.c    **** 			State2.digval2 = 0;
3199:src/keys.c    **** 			return n;
3200:src/keys.c    **** 		}
3201:src/keys.c    **** 	default:
3202:src/keys.c    **** 		return STATE_UNFINISHED;
3203:src/keys.c    **** 	}
3204:src/keys.c    **** 	State2.registerlist = 0;
3205:src/keys.c    **** 	State2.digval = 0;
3206:src/keys.c    **** 	State2.digval2 = 0;
3207:src/keys.c    **** reset_window:
3208:src/keys.c    **** 	State2.window = 0;
3209:src/keys.c    **** 	return STATE_UNFINISHED;
3210:src/keys.c    **** }
3211:src/keys.c    **** 
3212:src/keys.c    **** 
3213:src/keys.c    **** static int process(const int c) {
3214:src/keys.c    ****   const enum shifts shift = cur_shift();
3215:src/keys.c    ****   enum catalogues cat;
ARM GAS  /tmp/ccvq0xdJ.s 			page 216


3216:src/keys.c    **** 
3217:src/keys.c    ****   if (Running || Pause) {
3218:src/keys.c    ****     /*
3219:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3220:src/keys.c    ****      */
3221:src/keys.c    ****     if (c == K60 || c == K63) {
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3223:src/keys.c    **** 	set_pc(0);
3224:src/keys.c    ****       Pause = 0;
3225:src/keys.c    ****       xeq_xrom();
3226:src/keys.c    ****       set_running_off();
3227:src/keys.c    ****       DispMsg = "Stopped";
3228:src/keys.c    ****       State2.disp_freeze = 0;
3229:src/keys.c    ****       return STATE_UNFINISHED;
3230:src/keys.c    ****     }
3231:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3232:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
3234:src/keys.c    ****       GoFast = 1;
3235:src/keys.c    ****     }
3236:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3237:src/keys.c    ****     return STATE_RUNNING;
3238:src/keys.c    ****   }
3239:src/keys.c    **** 
3240:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3241:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3242:src/keys.c    ****    * if required.
3243:src/keys.c    ****    */
3244:src/keys.c    **** #ifdef DM42
3245:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3246:src/keys.c    **** #else
3247:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3248:src/keys.c    **** #endif
3249:src/keys.c    ****     {
3250:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3251:src/keys.c    ****       if (C_LOCKED) {
3252:src/keys.c    **** 	stack_restore();
3253:src/keys.c    **** 	CLEAR_REAL;
3254:src/keys.c    **** 	CLEAR_IMAG;
3255:src/keys.c    ****       }
3256:src/keys.c    **** #endif
3257:src/keys.c    ****       soft_init_state();
3258:src/keys.c    ****       return STATE_UNFINISHED;
3259:src/keys.c    ****     }
3260:src/keys.c    **** 
3261:src/keys.c    **** #ifndef CONSOLE
3262:src/keys.c    **** 	if (c == K63 && JustStopped) {
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
3264:src/keys.c    **** 		JustStopped = 0;
3265:src/keys.c    **** 		return STATE_IGNORE;
3266:src/keys.c    **** 	}
3267:src/keys.c    **** #endif
3268:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3269:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3270:src/keys.c    **** 	 */
3271:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3272:src/keys.c    **** 		CmdLineLength = 0;
ARM GAS  /tmp/ccvq0xdJ.s 			page 217


3273:src/keys.c    **** 	/*
3274:src/keys.c    **** 	 *  Process the various cases
3275:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3276:src/keys.c    **** 	 */
3277:src/keys.c    **** 	if (State2.confirm)
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
3279:src/keys.c    **** 
3280:src/keys.c    **** 	if (State2.rarg)
3281:src/keys.c    **** 		return process_arg((const keycode)c);
3282:src/keys.c    **** 
3283:src/keys.c    **** 	if (State2.gtodot)
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
3285:src/keys.c    **** 
3286:src/keys.c    **** 	if (State2.hyp)
3287:src/keys.c    **** 		return process_hyp((const keycode)c);
3288:src/keys.c    **** 
3289:src/keys.c    **** 	if (State2.test != TST_NONE)
3290:src/keys.c    **** 		return process_test((const keycode)c);
3291:src/keys.c    **** 
3292:src/keys.c    **** 	if (State2.status)
3293:src/keys.c    **** 		return process_status((const keycode)c);
3294:src/keys.c    **** 
3295:src/keys.c    **** 	/*
3296:src/keys.c    **** 	 *  Process shift keys directly
3297:src/keys.c    **** 	 */
3298:src/keys.c    **** 	if (c == K_F) {
3299:src/keys.c    **** 		toggle_shift(SHIFT_F);
3300:src/keys.c    **** 		return STATE_UNFINISHED;
3301:src/keys.c    **** 	}
3302:src/keys.c    **** 	if (c == K_G) {
3303:src/keys.c    **** 		toggle_shift(SHIFT_G);
3304:src/keys.c    **** 		return STATE_UNFINISHED;
3305:src/keys.c    **** 	}
3306:src/keys.c    **** 	if (c == K_H) {
3307:src/keys.c    **** 		toggle_shift(SHIFT_H);
3308:src/keys.c    **** 		State2.arrow = 0;
3309:src/keys.c    **** 		return STATE_UNFINISHED;
3310:src/keys.c    **** 	}
3311:src/keys.c    **** 	/*
3312:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3313:src/keys.c    **** 	 */
3314:src/keys.c    **** 	// print_debug (2, c);
3315:src/keys.c    **** 	if (State2.arrow)
3316:src/keys.c    **** 		return process_arrow((const keycode)c);
3317:src/keys.c    **** 
3318:src/keys.c    **** 	/*
3319:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3320:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3321:src/keys.c    **** 	 * works and were not
3322:src/keys.c    **** 	 */
3323:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3324:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3325:src/keys.c    **** 		if (is_bad_cmdline())
3326:src/keys.c    **** 			return STATE_UNFINISHED;
3327:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3328:src/keys.c    **** 		init_cat( cat );
3329:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccvq0xdJ.s 			page 218


3330:src/keys.c    **** 	}
3331:src/keys.c    **** 
3332:src/keys.c    **** 	/*
3333:src/keys.c    **** 	 *  More handlers...
3334:src/keys.c    **** 	 */
3335:src/keys.c    **** 	if (State2.multi)
3336:src/keys.c    **** 		return process_multi((const keycode)c);
3337:src/keys.c    **** 
3338:src/keys.c    **** 	if (State2.labellist)
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
3340:src/keys.c    **** 
3341:src/keys.c    **** 	if (State2.registerlist)
3342:src/keys.c    **** 		return process_registerlist((const keycode)c);
3343:src/keys.c    **** 
3344:src/keys.c    **** 	if (State2.catalogue)
3345:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3346:src/keys.c    **** 
3347:src/keys.c    **** 	if (State2.alphas) {
3348:src/keys.c    **** #ifndef INFRARED
3349:src/keys.c    **** 		return process_alpha((const keycode)c);
3350:src/keys.c    **** #else
3351:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3352:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3353:src/keys.c    **** 			print_tab(0);
3354:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3355:src/keys.c    **** 		}
3356:src/keys.c    **** 		return i;
3357:src/keys.c    **** #endif
3358:src/keys.c    **** 	}
3359:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3360:src/keys.c    **** 	if (C_LOCKED) {
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3362:src/keys.c    **** 	}
3363:src/keys.c    **** #endif
3364:src/keys.c    **** 	if (State2.cmplx) {
3365:src/keys.c    **** 		return process_cmplx((const keycode)c);
3366:src/keys.c    **** 	} else {
3367:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3369:src/keys.c    **** 		if (shift == SHIFT_H)
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3371:src/keys.c    **** 		// print_debug (3, c);
3372:src/keys.c    **** 		return process_normal((const keycode)c);
3373:src/keys.c    **** 	}
3374:src/keys.c    **** }
3375:src/keys.c    **** 
3376:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 7076              		.loc 1 3376 40 is_stmt 1 view -0
 7077              		.cfi_startproc
 7078              		@ args = 0, pretend = 0, frame = 0
 7079              		@ frame_needed = 0, uses_anonymous_args = 0
 7080              		@ link register save eliminated.
3377:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 7081              		.loc 1 3377 4 view .LVU2111
 7082              		.loc 1 3377 53 is_stmt 0 view .LVU2112
 7083 0000 074B     		ldr	r3, .L764
 7084              		.loc 1 3377 44 view .LVU2113
ARM GAS  /tmp/ccvq0xdJ.s 			page 219


 7085 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 7086 0004 1AB9     		cbnz	r2, .L762
3378:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3379:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 7087              		.loc 1 3379 5 discriminator 2 view .LVU2114
 7088 0006 5969     		ldr	r1, [r3, #20]
 7089 0008 064A     		ldr	r2, .L764+4
 7090 000a 0A40     		ands	r2, r2, r1
 7091 000c 0AB1     		cbz	r2, .L763
 7092              	.L762:
 7093 000e 0120     		movs	r0, #1
3380:src/keys.c    ****  }
 7094              		.loc 1 3380 2 view .LVU2115
 7095 0010 7047     		bx	lr
 7096              	.L763:
3379:src/keys.c    ****  }
 7097              		.loc 1 3379 42 discriminator 3 view .LVU2116
 7098 0012 D889     		ldrh	r0, [r3, #14]
 7099 0014 B0F5E060 		subs	r0, r0, #1792
 7100 0018 18BF     		it	ne
 7101 001a 0120     		movne	r0, #1
 7102 001c 7047     		bx	lr
 7103              	.L765:
 7104 001e 00BF     		.align	2
 7105              	.L764:
 7106 0020 00000000 		.word	StateWhileOn
 7107 0024 0709280C 		.word	203950343
 7108              		.cfi_endproc
 7109              	.LFE61:
 7111              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 7112              		.align	2
 7113              	.LC0:
 7114 0000 52554E00 		.ascii	"RUN\000"
 7115              		.align	2
 7116              	.LC1:
 7117 0004 4E554C4C 		.ascii	"NULL\000"
 7117      00
 7118 0009 000000   		.align	2
 7119              	.LC2:
 7120 000c 53746F70 		.ascii	"Stopped\000"
 7120      70656400 
 7121              		.section	.text.process_keycode,"ax",%progbits
 7122              		.align	1
 7123              		.p2align 2,,3
 7124              		.global	process_keycode
 7125              		.syntax unified
 7126              		.thumb
 7127              		.thumb_func
 7128              		.fpu fpv4-sp-d16
 7130              	process_keycode:
 7131              	.LVL618:
 7132              	.LFB63:
3381:src/keys.c    **** 
3382:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3383:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3384:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3385:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
ARM GAS  /tmp/ccvq0xdJ.s 			page 220


3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3387:src/keys.c    ****        // Was error just wait for confirmation
3388:src/keys.c    ****        wait_for_key_press();
3389:src/keys.c    ****      }
3390:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3391:src/keys.c    ****      return;
3392:src/keys.c    ****    }
3393:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3394:src/keys.c    ****      nd_opcode = remapped.shift;
3395:src/keys.c    ****      set_shift(SHIFT_N);
3396:src/keys.c    ****    }
3397:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
3399:src/keys.c    ****  }
3400:src/keys.c    ****  
3401:src/keys.c    **** /*
3402:src/keys.c    ****  *  Fed with key codes by the event loop
3403:src/keys.c    ****  */
3404:src/keys.c    **** void process_keycode(int c)
3405:src/keys.c    **** {
 7133              		.loc 1 3405 1 is_stmt 1 view -0
 7134              		.cfi_startproc
 7135              		@ args = 0, pretend = 0, frame = 8
 7136              		@ frame_needed = 0, uses_anonymous_args = 0
3406:src/keys.c    ****   static int was_paused;
 7137              		.loc 1 3406 3 view .LVU2118
3407:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3408:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7138              		.loc 1 3408 3 view .LVU2119
3409:src/keys.c    ****   //print_debug(60,c);
3410:src/keys.c    ****   if (was_paused && Pause == 0)
 7139              		.loc 1 3410 3 view .LVU2120
3405:src/keys.c    ****   static int was_paused;
 7140              		.loc 1 3405 1 is_stmt 0 view .LVU2121
 7141 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7142              		.cfi_def_cfa_offset 36
 7143              		.cfi_offset 4, -36
 7144              		.cfi_offset 5, -32
 7145              		.cfi_offset 6, -28
 7146              		.cfi_offset 7, -24
 7147              		.cfi_offset 8, -20
 7148              		.cfi_offset 9, -16
 7149              		.cfi_offset 10, -12
 7150              		.cfi_offset 11, -8
 7151              		.cfi_offset 14, -4
 7152              		.loc 1 3410 7 view .LVU2122
 7153 0004 B64D     		ldr	r5, .L1441
 7154              		.loc 1 3410 27 view .LVU2123
 7155 0006 B74F     		ldr	r7, .L1441+4
 7156              		.loc 1 3410 6 view .LVU2124
 7157 0008 2B68     		ldr	r3, [r5]
3405:src/keys.c    ****   static int was_paused;
 7158              		.loc 1 3405 1 view .LVU2125
 7159 000a 83B0     		sub	sp, sp, #12
 7160              		.cfi_def_cfa_offset 48
3405:src/keys.c    ****   static int was_paused;
 7161              		.loc 1 3405 1 view .LVU2126
ARM GAS  /tmp/ccvq0xdJ.s 			page 221


 7162 000c 0446     		mov	r4, r0
 7163              		.loc 1 3410 6 view .LVU2127
 7164 000e 1BB1     		cbz	r3, .L767
 7165              		.loc 1 3410 27 discriminator 1 view .LVU2128
 7166 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7167              		.loc 1 3410 18 discriminator 1 view .LVU2129
 7168 0012 002B     		cmp	r3, #0
 7169 0014 00F0BF81 		beq	.L1349
 7170              	.LVL619:
 7171              	.L767:
3411:src/keys.c    ****     {
3412:src/keys.c    ****     /*
3413:src/keys.c    ****      *  Continue XROM execution after a pause
3414:src/keys.c    ****      */
3415:src/keys.c    ****       xeq_xrom();
3416:src/keys.c    ****     }
3417:src/keys.c    ****   was_paused = Pause;
 7172              		.loc 1 3417 3 is_stmt 1 view .LVU2130
 7173              		.loc 1 3417 14 is_stmt 0 view .LVU2131
 7174 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7175 001a 2B60     		str	r3, [r5]
3418:src/keys.c    ****   if (c == K_NOP)
 7176              		.loc 1 3418 3 is_stmt 1 view .LVU2132
 7177              		.loc 1 3418 6 is_stmt 0 view .LVU2133
 7178 001c 2E2C     		cmp	r4, #46
 7179 001e 00F07B81 		beq	.L1350
3419:src/keys.c    ****     {
3420:src/keys.c    ****       OpCode = 0;
3421:src/keys.c    ****     }
3422:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7180              		.loc 1 3422 8 is_stmt 1 view .LVU2134
 7181              		.loc 1 3422 11 is_stmt 0 view .LVU2135
 7182 0022 622C     		cmp	r4, #98
 7183 0024 6FD0     		beq	.L1351
3423:src/keys.c    ****     {
3424:src/keys.c    ****       /*
3425:src/keys.c    ****        *  Heartbeat processing goes here.
3426:src/keys.c    ****        *  This is totally thread safe!
3427:src/keys.c    ****        */
3428:src/keys.c    ****       if (Keyticks >= 2) {
3429:src/keys.c    **** 	/*
3430:src/keys.c    **** 	 *  Some time has passed after last key press
3431:src/keys.c    **** 	 */
3432:src/keys.c    **** 	if (OpCode != 0) {
3433:src/keys.c    **** 	  /*
3434:src/keys.c    **** 	   *  Handle command display and NULL here
3435:src/keys.c    **** 	   */
3436:src/keys.c    **** 	  if (OpCodeDisplayPending) {
3437:src/keys.c    **** 	    /*
3438:src/keys.c    **** 	     *  Show command to the user
3439:src/keys.c    **** 	     */
3440:src/keys.c    **** 	    OpCodeDisplayPending = 0;
3441:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
3442:src/keys.c    **** 	      DispMsg = "RUN";
3443:src/keys.c    **** 	    }
3444:src/keys.c    **** 	    else {
3445:src/keys.c    **** 	      scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
ARM GAS  /tmp/ccvq0xdJ.s 			page 222


3446:src/keys.c    **** 	      DispMsg = TraceBuffer;
3447:src/keys.c    **** 	    }
3448:src/keys.c    **** 	    display();
3449:src/keys.c    **** 	    ShowRPN = 1;	// Off because of DispMsg setting
3450:src/keys.c    **** 	  }
3451:src/keys.c    **** 	  else if (Keyticks > 12) {
3452:src/keys.c    **** 	    /*
3453:src/keys.c    **** 	     *  Key is too long held down
3454:src/keys.c    **** 	     */
3455:src/keys.c    **** 	    OpCode = 0;
3456:src/keys.c    **** 	    message("NULL", CNULL);
3457:src/keys.c    **** 	    // Force display update on key-up
3458:src/keys.c    **** 	    State2.disp_temp = 0;
3459:src/keys.c    **** 	  }
3460:src/keys.c    **** 	}
3461:src/keys.c    **** 	if (Keyticks > 12 && shift_down() != SHIFT_N) {
3462:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
3463:src/keys.c    **** 	  State2.shifts = SHIFT_N;
3464:src/keys.c    **** 	}
3465:src/keys.c    ****       }
3466:src/keys.c    **** 
3467:src/keys.c    ****       /*
3468:src/keys.c    ****        *  Serve the watchdog
3469:src/keys.c    ****        */
3470:src/keys.c    ****       watchdog();
3471:src/keys.c    **** 
3472:src/keys.c    **** #ifndef CONSOLE
3473:src/keys.c    ****       /*
3474:src/keys.c    ****        *  If buffer is empty re-allow R/S to start a program
3475:src/keys.c    ****        */
3476:src/keys.c    ****       if (JustStopped && !is_key_pressed()) {
3477:src/keys.c    **** 	JustStopped = 0;
3478:src/keys.c    ****       }
3479:src/keys.c    **** #endif
3480:src/keys.c    **** 
3481:src/keys.c    ****       /*
3482:src/keys.c    ****        *  Do nothing if not running a program
3483:src/keys.c    ****        */
3484:src/keys.c    ****       if (!Running && ! Pause)
3485:src/keys.c    **** 	return;
3486:src/keys.c    ****     }
3487:src/keys.c    ****   else {
3488:src/keys.c    ****     /*
3489:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3490:src/keys.c    ****      */
3491:src/keys.c    ****     xeq_init_contexts();
 7184              		.loc 1 3491 5 is_stmt 1 view .LVU2136
3492:src/keys.c    ****     State2.wascomplex = 0;
 7185              		.loc 1 3492 23 is_stmt 0 view .LVU2137
 7186 0026 DFF8D882 		ldr	r8, .L1441+32
3491:src/keys.c    ****     State2.wascomplex = 0;
 7187              		.loc 1 3491 5 view .LVU2138
 7188 002a FFF7FEFF 		bl	xeq_init_contexts
 7189              	.LVL620:
 7190              		.loc 1 3492 5 is_stmt 1 view .LVU2139
 7191              		.loc 1 3492 23 is_stmt 0 view .LVU2140
 7192 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
ARM GAS  /tmp/ccvq0xdJ.s 			page 223


3493:src/keys.c    **** 
3494:src/keys.c    ****     if (is_dot(RPN)) {
 7193              		.loc 1 3494 9 view .LVU2141
 7194 0032 8D20     		movs	r0, #141
3492:src/keys.c    **** 
 7195              		.loc 1 3492 23 view .LVU2142
 7196 0034 6FF38713 		bfc	r3, #6, #2
 7197 0038 88F81430 		strb	r3, [r8, #20]
 7198              		.loc 1 3494 5 is_stmt 1 view .LVU2143
 7199              		.loc 1 3494 9 is_stmt 0 view .LVU2144
 7200 003c FFF7FEFF 		bl	is_dot
 7201              	.LVL621:
 7202              		.loc 1 3494 8 view .LVU2145
 7203 0040 0028     		cmp	r0, #0
 7204 0042 40F07982 		bne	.L1352
 7205              	.L785:
3495:src/keys.c    ****       /*
3496:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3497:src/keys.c    ****        */
3498:src/keys.c    ****       clr_dot(RPN);
3499:src/keys.c    ****       finish_RPN(); // RPN
3500:src/keys.c    ****     }
3501:src/keys.c    **** 
3502:src/keys.c    **** #ifndef CONSOLE
3503:src/keys.c    ****     /*
3504:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3505:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3506:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3507:src/keys.c    ****      *  an accidental restart of the program.
3508:src/keys.c    ****      */
3509:src/keys.c    ****     if (c != K63)
 7206              		.loc 1 3509 5 is_stmt 1 view .LVU2146
 7207              		.loc 1 3509 8 is_stmt 0 view .LVU2147
 7208 0046 272C     		cmp	r4, #39
 7209 0048 00F07382 		beq	.L1353
3510:src/keys.c    ****       JustStopped = 0;
 7210              		.loc 1 3510 7 is_stmt 1 view .LVU2148
 7211              		.loc 1 3510 19 is_stmt 0 view .LVU2149
 7212 004c A64B     		ldr	r3, .L1441+8
 7213 004e 0020     		movs	r0, #0
3511:src/keys.c    **** #endif
3512:src/keys.c    ****   }
3513:src/keys.c    **** 
3514:src/keys.c    ****   /*
3515:src/keys.c    ****    *  Handle key release
3516:src/keys.c    ****    */
3517:src/keys.c    ****   if (c == K_RELEASE)
 7214              		.loc 1 3517 6 view .LVU2150
 7215 0050 632C     		cmp	r4, #99
3510:src/keys.c    ****       JustStopped = 0;
 7216              		.loc 1 3510 19 view .LVU2151
 7217 0052 1860     		str	r0, [r3]
 7218              		.loc 1 3517 3 is_stmt 1 view .LVU2152
 7219              		.loc 1 3517 6 is_stmt 0 view .LVU2153
 7220 0054 40F06F81 		bne	.L787
3518:src/keys.c    ****     {
3519:src/keys.c    ****       //      print_debug (80,c);
ARM GAS  /tmp/ccvq0xdJ.s 			page 224


3520:src/keys.c    ****     if (OpCode != 0) {
 7221              		.loc 1 3520 5 is_stmt 1 view .LVU2154
 7222              		.loc 1 3520 16 is_stmt 0 view .LVU2155
 7223 0058 A44B     		ldr	r3, .L1441+12
 7224 005a 1D68     		ldr	r5, [r3]
 7225              		.loc 1 3520 8 view .LVU2156
 7226 005c 002D     		cmp	r5, #0
 7227 005e 00F07682 		beq	.L788
3521:src/keys.c    ****       /*
3522:src/keys.c    ****        * Execute the key on release
3523:src/keys.c    ****        */
3524:src/keys.c    ****       GoFast = 1;
 7228              		.loc 1 3524 7 is_stmt 1 view .LVU2157
 7229              		.loc 1 3524 14 is_stmt 0 view .LVU2158
 7230 0062 A34A     		ldr	r2, .L1441+16
3525:src/keys.c    ****       c = OpCode;
3526:src/keys.c    ****       //      print_debug(81,c);
3527:src/keys.c    ****       OpCode = 0;
 7231              		.loc 1 3527 14 view .LVU2159
 7232 0064 1860     		str	r0, [r3]
3528:src/keys.c    **** 
3529:src/keys.c    ****       if (c == STATE_SST)
 7233              		.loc 1 3529 10 view .LVU2160
 7234 0066 2E2D     		cmp	r5, #46
3524:src/keys.c    ****       c = OpCode;
 7235              		.loc 1 3524 14 view .LVU2161
 7236 0068 4FF00100 		mov	r0, #1
3525:src/keys.c    ****       c = OpCode;
 7237              		.loc 1 3525 9 view .LVU2162
 7238 006c 2C46     		mov	r4, r5
 7239              	.LVL622:
3524:src/keys.c    ****       c = OpCode;
 7240              		.loc 1 3524 14 view .LVU2163
 7241 006e 1060     		str	r0, [r2]
3525:src/keys.c    ****       c = OpCode;
 7242              		.loc 1 3525 7 is_stmt 1 view .LVU2164
 7243              	.LVL623:
3527:src/keys.c    **** 
 7244              		.loc 1 3527 7 view .LVU2165
 7245              		.loc 1 3529 7 view .LVU2166
 7246              		.loc 1 3529 10 is_stmt 0 view .LVU2167
 7247 0070 00F08182 		beq	.L1354
3530:src/keys.c    **** 	xeq_sst_bst(1);
3531:src/keys.c    ****       else {
3532:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7248              		.loc 1 3532 2 is_stmt 1 view .LVU2168
 7249              		.loc 1 3532 5 is_stmt 0 view .LVU2169
 7250 0074 B5F5817F 		cmp	r5, #258
 7251 0078 08D0     		beq	.L794
 7252              		.loc 1 3532 29 discriminator 1 view .LVU2170
 7253 007a 40F23F13 		movw	r3, #319
 7254 007e 9D42     		cmp	r5, r3
 7255 0080 04D0     		beq	.L794
 7256              		.loc 1 3532 60 discriminator 2 view .LVU2171
 7257 0082 FFF7FEFF 		bl	is_bad_cmdline
 7258              	.LVL624:
 7259              		.loc 1 3532 56 discriminator 2 view .LVU2172
ARM GAS  /tmp/ccvq0xdJ.s 			page 225


 7260 0086 0028     		cmp	r0, #0
 7261 0088 40F08282 		bne	.L1355
 7262              	.L794:
3533:src/keys.c    **** 	  xeq(c);
 7263              		.loc 1 3533 4 is_stmt 1 view .LVU2173
3534:src/keys.c    **** 	  if (Running || Pause)
 7264              		.loc 1 3534 8 is_stmt 0 view .LVU2174
 7265 008c 994E     		ldr	r6, .L1441+20
3533:src/keys.c    **** 	  xeq(c);
 7266              		.loc 1 3533 4 view .LVU2175
 7267 008e 2846     		mov	r0, r5
 7268 0090 FFF7FEFF 		bl	xeq
 7269              	.LVL625:
 7270              		.loc 1 3534 4 is_stmt 1 view .LVU2176
 7271              		.loc 1 3534 7 is_stmt 0 view .LVU2177
 7272 0094 3368     		ldr	r3, [r6]
 7273 0096 0BB9     		cbnz	r3, .L792
 7274              		.loc 1 3534 16 discriminator 1 view .LVU2178
 7275 0098 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7276 009a 0BB1     		cbz	r3, .L790
 7277              	.L792:
3535:src/keys.c    **** 	    xeqprog();
 7278              		.loc 1 3535 6 is_stmt 1 view .LVU2179
 7279 009c FFF7FEFF 		bl	xeqprog
 7280              	.LVL626:
 7281              	.L790:
3536:src/keys.c    **** 	}
3537:src/keys.c    ****       }
3538:src/keys.c    ****       dot(RPN, ShowRPN);
 7282              		.loc 1 3538 7 view .LVU2180
 7283 00a0 954D     		ldr	r5, .L1441+24
 7284 00a2 8D20     		movs	r0, #141
 7285 00a4 2968     		ldr	r1, [r5]
 7286 00a6 FFF7FEFF 		bl	dot
 7287              	.LVL627:
3539:src/keys.c    ****     }
3540:src/keys.c    ****     else {
3541:src/keys.c    ****       // Ignore key-up if no operation was pending
3542:src/keys.c    ****       dot(RPN, ShowRPN);
3543:src/keys.c    **** #ifndef CONSOLE
3544:src/keys.c    ****       if (! State2.disp_temp ) {
3545:src/keys.c    **** 	if (!WasDataEntry) {
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3547:src/keys.c    **** 	  display();
3548:src/keys.c    **** 	}
3549:src/keys.c    **** 	else {
3550:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3551:src/keys.c    **** 	}
3552:src/keys.c    ****       }
3553:src/keys.c    **** #endif
3554:src/keys.c    ****       return;
3555:src/keys.c    ****     }
3556:src/keys.c    **** 
3557:src/keys.c    ****     /*
3558:src/keys.c    ****      *  Turn on the RPN symbol if desired
3559:src/keys.c    ****      */
3560:src/keys.c    ****     if (ShowRPN) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 226


 7288              		.loc 1 3560 5 view .LVU2181
 7289              		.loc 1 3560 9 is_stmt 0 view .LVU2182
 7290 00aa 2D68     		ldr	r5, [r5]
 7291              		.loc 1 3560 8 view .LVU2183
 7292 00ac 002D     		cmp	r5, #0
 7293 00ae 40F04982 		bne	.L796
 7294              	.LVL628:
 7295              	.L1343:
3561:src/keys.c    ****       finish_RPN(); // RPN
3562:src/keys.c    ****     }
3563:src/keys.c    ****   }
3564:src/keys.c    ****   else {
3565:src/keys.c    ****     /*
3566:src/keys.c    ****      *  Decode the key 
3567:src/keys.c    ****      */
3568:src/keys.c    ****     //    print_debug (90, cur_shift());
3569:src/keys.c    ****     WasDataEntry = 0;
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3571:src/keys.c    **** #ifdef DM42
3572:src/keys.c    ****     if (c != K_OP) {
3573:src/keys.c    ****       c = process(c);
3574:src/keys.c    ****       //print_debug (91,cur_shift());
3575:src/keys.c    ****       // returns an op-code or state
3576:src/keys.c    ****     }
3577:src/keys.c    ****     else {
3578:src/keys.c    ****       if (isRARG(nd_opcode)) {
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3581:src/keys.c    **** 	  c = nd_opcode;
3582:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
3585:src/keys.c    **** 	}
3586:src/keys.c    **** 	else if ( (nd_opcode & 0x00ff) != 0 ) { // has argument
3587:src/keys.c    **** 	  c = nd_opcode;
3588:src/keys.c    **** 	}
3589:src/keys.c    **** 	else {
3590:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3591:src/keys.c    **** 	  c = STATE_UNFINISHED;
3592:src/keys.c    **** 	}
3593:src/keys.c    ****       }
3594:src/keys.c    ****       else if (isDBL(nd_opcode)) {
3595:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
3596:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
3597:src/keys.c    **** 	  State2.multi = 1;
3598:src/keys.c    **** 	  State2.alphashift = 0;
3599:src/keys.c    **** 	  State2.rarg = 0;
3600:src/keys.c    **** 	  c = STATE_UNFINISHED;
3601:src/keys.c    **** 	}
3602:src/keys.c    **** 	else { // let argument through
3603:src/keys.c    **** 	  c = nd_opcode;
3604:src/keys.c    **** 	}
3605:src/keys.c    ****       }
3606:src/keys.c    ****       else {
3607:src/keys.c    **** 	c = check_confirm(nd_opcode);
3608:src/keys.c    ****       }      
3609:src/keys.c    ****     }
ARM GAS  /tmp/ccvq0xdJ.s 			page 227


3610:src/keys.c    **** #else
3611:src/keys.c    ****     c = process(c);		// returns an op-code or state
3612:src/keys.c    **** #endif
3613:src/keys.c    ****     switch (c) {
3614:src/keys.c    ****     case STATE_SST:
3615:src/keys.c    ****       OpCode = c;
3616:src/keys.c    ****       OpCodeDisplayPending = 0;
3617:src/keys.c    ****       xeq_sst_bst(0);
3618:src/keys.c    ****       break;
 7296              		.loc 1 3618 7 is_stmt 1 view .LVU2184
 7297 00b2 3368     		ldr	r3, [r6]
 7298              	.LVL629:
 7299              	.L797:
3619:src/keys.c    **** 
3620:src/keys.c    ****     case STATE_BST:
3621:src/keys.c    ****       xeq_sst_bst(-1);
3622:src/keys.c    ****       break;
3623:src/keys.c    **** 
3624:src/keys.c    ****     case STATE_BACKSPACE:
3625:src/keys.c    ****       if (! State2.runmode)
3626:src/keys.c    **** 	delprog();
3627:src/keys.c    ****       else if (State2.alphas) {
3628:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3629:src/keys.c    **** 	if (p > Alpha)
3630:src/keys.c    **** 	  *--p = '\0';
3631:src/keys.c    ****       }
3632:src/keys.c    ****       break;
3633:src/keys.c    **** 
3634:src/keys.c    ****     case STATE_RUNNING:
3635:src/keys.c    ****       xeqprog();  // continue execution
3636:src/keys.c    ****       break;
3637:src/keys.c    **** 
3638:src/keys.c    ****     case STATE_WINDOWRIGHT:
3639:src/keys.c    ****     case STATE_WINDOWLEFT:
3640:src/keys.c    ****       if (!is_bad_cmdline())
3641:src/keys.c    **** 	set_window(c);
3642:src/keys.c    ****       break;
3643:src/keys.c    **** 
3644:src/keys.c    ****     case STATE_UNFINISHED:
3645:src/keys.c    ****     case STATE_IGNORE:
3646:src/keys.c    ****       break;
3647:src/keys.c    **** 
3648:src/keys.c    ****     default:
3649:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3650:src/keys.c    **** 	NonProgrammable = 0;
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3653:src/keys.c    **** 	    // Data entry key
3654:src/keys.c    **** #ifndef CONSOLE
3655:src/keys.c    **** 	    WasDataEntry = 1;
3656:src/keys.c    **** #endif
3657:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3658:src/keys.c    **** 	    xeq(c);
3659:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3660:src/keys.c    **** 	  }
3661:src/keys.c    **** 	}
3662:src/keys.c    **** 	else {
ARM GAS  /tmp/ccvq0xdJ.s 			page 228


3663:src/keys.c    **** 	  // Save the op-code for execution on key-up
3664:src/keys.c    **** 	  //print_debug(70,c);
3665:src/keys.c    **** 	  OpCode = c;
3666:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3667:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3668:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3669:src/keys.c    **** 	}
3670:src/keys.c    ****       }
3671:src/keys.c    ****       else {
3672:src/keys.c    **** 	stoprog(c);
3673:src/keys.c    ****       }
3674:src/keys.c    ****     }
3675:src/keys.c    ****   }
3676:src/keys.c    ****   if (! Running && ! Pause
 7300              		.loc 1 3676 3 view .LVU2185
 7301              		.loc 1 3676 6 is_stmt 0 view .LVU2186
 7302 00b4 002B     		cmp	r3, #0
 7303 00b6 40F00F81 		bne	.L1348
 7304              	.LVL630:
 7305              	.L818:
 7306              		.loc 1 3676 20 discriminator 1 view .LVU2187
 7307 00ba 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7308              		.loc 1 3676 17 discriminator 1 view .LVU2188
 7309 00bc 002B     		cmp	r3, #0
 7310 00be 40F00B81 		bne	.L1348
3677:src/keys.c    **** #ifndef CONSOLE
3678:src/keys.c    ****       && ! JustStopped
 7311              		.loc 1 3678 10 view .LVU2189
 7312 00c2 894B     		ldr	r3, .L1441+8
3679:src/keys.c    **** #endif
3680:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7313              		.loc 1 3680 10 view .LVU2190
 7314 00c4 8D4E     		ldr	r6, .L1441+28
 7315 00c6 1B68     		ldr	r3, [r3]
 7316 00c8 3268     		ldr	r2, [r6]
 7317              		.loc 1 3680 7 view .LVU2191
 7318 00ca 1343     		orrs	r3, r3, r2
 7319 00cc 16D1     		bne	.L1109
 7320              		.loc 1 3680 26 discriminator 1 view .LVU2192
 7321 00ce 322C     		cmp	r4, #50
 7322 00d0 14D0     		beq	.L1109
 7323              	.LBB845:
3681:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7324              		.loc 1 3681 5 is_stmt 1 view .LVU2193
 7325              		.loc 1 3681 15 is_stmt 0 view .LVU2194
 7326 00d2 DFF83C92 		ldr	r9, .L1441+48
 7327 00d6 D9F80070 		ldr	r7, [r9]
 7328              	.LVL631:
3682:src/keys.c    **** 
3683:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7329              		.loc 1 3683 5 is_stmt 1 view .LVU2195
 7330              		.loc 1 3683 21 is_stmt 0 view .LVU2196
 7331 00da 4CB1     		cbz	r4, .L1111
 7332              		.loc 1 3683 49 discriminator 1 view .LVU2197
 7333 00dc 002D     		cmp	r5, #0
 7334 00de 40F08384 		bne	.L1172
 7335              		.loc 1 3683 66 discriminator 3 view .LVU2198
ARM GAS  /tmp/ccvq0xdJ.s 			page 229


 7336 00e2 874B     		ldr	r3, .L1441+32
 7337 00e4 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7338              		.loc 1 3683 21 discriminator 3 view .LVU2199
 7339 00e6 9B07     		lsls	r3, r3, #30
 7340 00e8 00F1A285 		bmi	.L1173
 7341 00ec 07F00104 		and	r4, r7, #1
 7342              	.LVL632:
 7343              	.L1111:
 7344              		.loc 1 3683 18 discriminator 8 view .LVU2200
 7345 00f0 C9F80040 		str	r4, [r9]
3684:src/keys.c    ****     display();
 7346              		.loc 1 3684 5 is_stmt 1 discriminator 8 view .LVU2201
 7347 00f4 FFF7FEFF 		bl	display
 7348              	.LVL633:
3685:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7349              		.loc 1 3685 5 discriminator 8 view .LVU2202
 7350              		.loc 1 3685 18 is_stmt 0 discriminator 8 view .LVU2203
 7351 00f8 C9F80070 		str	r7, [r9]
 7352              	.LVL634:
 7353              	.L1109:
 7354              		.loc 1 3685 18 discriminator 8 view .LVU2204
 7355              	.LBE845:
3686:src/keys.c    ****   }
3687:src/keys.c    **** 
3688:src/keys.c    ****  no_display:
3689:src/keys.c    ****   JustDisplayed = 0;
 7356              		.loc 1 3689 3 is_stmt 1 view .LVU2205
 7357              		.loc 1 3689 17 is_stmt 0 view .LVU2206
 7358 00fc 0023     		movs	r3, #0
 7359 00fe 3360     		str	r3, [r6]
3690:src/keys.c    ****   watchdog();
 7360              		.loc 1 3690 13 is_stmt 1 view .LVU2207
 7361              	.L766:
3691:src/keys.c    **** }
 7362              		.loc 1 3691 1 is_stmt 0 view .LVU2208
 7363 0100 03B0     		add	sp, sp, #12
 7364              		.cfi_remember_state
 7365              		.cfi_def_cfa_offset 36
 7366              		@ sp needed
 7367 0102 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7368              	.LVL635:
 7369              	.L1351:
 7370              		.cfi_restore_state
3428:src/keys.c    **** 	/*
 7371              		.loc 1 3428 7 is_stmt 1 view .LVU2209
3428:src/keys.c    **** 	/*
 7372              		.loc 1 3428 11 is_stmt 0 view .LVU2210
 7373 0106 FFF7FEFF 		bl	keyticks
 7374              	.LVL636:
3428:src/keys.c    **** 	/*
 7375              		.loc 1 3428 10 view .LVU2211
 7376 010a 0128     		cmp	r0, #1
 7377 010c 1BDD     		ble	.L772
3432:src/keys.c    **** 	  /*
 7378              		.loc 1 3432 2 is_stmt 1 view .LVU2212
3432:src/keys.c    **** 	  /*
 7379              		.loc 1 3432 13 is_stmt 0 view .LVU2213
ARM GAS  /tmp/ccvq0xdJ.s 			page 230


 7380 010e 774D     		ldr	r5, .L1441+12
 7381 0110 2868     		ldr	r0, [r5]
3432:src/keys.c    **** 	  /*
 7382              		.loc 1 3432 5 view .LVU2214
 7383 0112 98B1     		cbz	r0, .L774
3436:src/keys.c    **** 	    /*
 7384              		.loc 1 3436 4 is_stmt 1 view .LVU2215
3436:src/keys.c    **** 	    /*
 7385              		.loc 1 3436 8 is_stmt 0 view .LVU2216
 7386 0114 7B4B     		ldr	r3, .L1441+36
3436:src/keys.c    **** 	    /*
 7387              		.loc 1 3436 7 view .LVU2217
 7388 0116 1E68     		ldr	r6, [r3]
 7389 0118 002E     		cmp	r6, #0
 7390 011a 00F05082 		beq	.L775
3440:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
 7391              		.loc 1 3440 6 is_stmt 1 view .LVU2218
3441:src/keys.c    **** 	      DispMsg = "RUN";
 7392              		.loc 1 3441 9 is_stmt 0 view .LVU2219
 7393 011e 40F23B12 		movw	r2, #315
3440:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
 7394              		.loc 1 3440 27 view .LVU2220
 7395 0122 0025     		movs	r5, #0
3441:src/keys.c    **** 	      DispMsg = "RUN";
 7396              		.loc 1 3441 9 view .LVU2221
 7397 0124 9042     		cmp	r0, r2
3440:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
 7398              		.loc 1 3440 27 view .LVU2222
 7399 0126 1D60     		str	r5, [r3]
3441:src/keys.c    **** 	      DispMsg = "RUN";
 7400              		.loc 1 3441 6 is_stmt 1 view .LVU2223
3441:src/keys.c    **** 	      DispMsg = "RUN";
 7401              		.loc 1 3441 9 is_stmt 0 view .LVU2224
 7402 0128 40F04283 		bne	.L776
3442:src/keys.c    **** 	    }
 7403              		.loc 1 3442 8 is_stmt 1 view .LVU2225
3442:src/keys.c    **** 	    }
 7404              		.loc 1 3442 16 is_stmt 0 view .LVU2226
 7405 012c 764B     		ldr	r3, .L1441+40
 7406 012e 774A     		ldr	r2, .L1441+44
 7407 0130 1A60     		str	r2, [r3]
 7408              	.L777:
3448:src/keys.c    **** 	    ShowRPN = 1;	// Off because of DispMsg setting
 7409              		.loc 1 3448 6 is_stmt 1 view .LVU2227
 7410 0132 FFF7FEFF 		bl	display
 7411              	.LVL637:
3449:src/keys.c    **** 	  }
 7412              		.loc 1 3449 6 view .LVU2228
3449:src/keys.c    **** 	  }
 7413              		.loc 1 3449 14 is_stmt 0 view .LVU2229
 7414 0136 704B     		ldr	r3, .L1441+24
 7415 0138 0122     		movs	r2, #1
 7416 013a 1A60     		str	r2, [r3]
 7417              	.L774:
3461:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 7418              		.loc 1 3461 2 is_stmt 1 view .LVU2230
3461:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
ARM GAS  /tmp/ccvq0xdJ.s 			page 231


 7419              		.loc 1 3461 6 is_stmt 0 view .LVU2231
 7420 013c FFF7FEFF 		bl	keyticks
 7421              	.LVL638:
3461:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 7422              		.loc 1 3461 5 view .LVU2232
 7423 0140 0C28     		cmp	r0, #12
 7424 0142 00F31C82 		bgt	.L1356
 7425              	.L772:
3470:src/keys.c    **** 
 7426              		.loc 1 3470 17 is_stmt 1 view .LVU2233
3476:src/keys.c    **** 	JustStopped = 0;
 7427              		.loc 1 3476 7 view .LVU2234
3476:src/keys.c    **** 	JustStopped = 0;
 7428              		.loc 1 3476 11 is_stmt 0 view .LVU2235
 7429 0146 684D     		ldr	r5, .L1441+8
3476:src/keys.c    **** 	JustStopped = 0;
 7430              		.loc 1 3476 10 view .LVU2236
 7431 0148 2B68     		ldr	r3, [r5]
 7432 014a 002B     		cmp	r3, #0
 7433 014c 40F07A81 		bne	.L1357
 7434              	.L781:
3484:src/keys.c    **** 	return;
 7435              		.loc 1 3484 7 is_stmt 1 view .LVU2237
3484:src/keys.c    **** 	return;
 7436              		.loc 1 3484 11 is_stmt 0 view .LVU2238
 7437 0150 684E     		ldr	r6, .L1441+20
 7438 0152 3368     		ldr	r3, [r6]
3484:src/keys.c    **** 	return;
 7439              		.loc 1 3484 10 view .LVU2239
 7440 0154 002B     		cmp	r3, #0
 7441 0156 00F04181 		beq	.L1358
 7442              	.L783:
3517:src/keys.c    ****     {
 7443              		.loc 1 3517 3 is_stmt 1 view .LVU2240
3569:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7444              		.loc 1 3569 5 view .LVU2241
3570:src/keys.c    **** #ifdef DM42
 7445              		.loc 1 3570 13 is_stmt 0 view .LVU2242
 7446 015a 674A     		ldr	r2, .L1441+24
3569:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7447              		.loc 1 3569 18 view .LVU2243
 7448 015c DFF8B091 		ldr	r9, .L1441+48
3570:src/keys.c    **** #ifdef DM42
 7449              		.loc 1 3570 15 view .LVU2244
 7450 0160 B3FA83F3 		clz	r3, r3
 7451 0164 5B09     		lsrs	r3, r3, #5
3570:src/keys.c    **** #ifdef DM42
 7452              		.loc 1 3570 13 view .LVU2245
 7453 0166 1360     		str	r3, [r2]
3569:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7454              		.loc 1 3569 18 view .LVU2246
 7455 0168 0023     		movs	r3, #0
 7456 016a C9F80030 		str	r3, [r9]
3570:src/keys.c    **** #ifdef DM42
 7457              		.loc 1 3570 5 is_stmt 1 view .LVU2247
3572:src/keys.c    ****       c = process(c);
 7458              		.loc 1 3572 5 view .LVU2248
ARM GAS  /tmp/ccvq0xdJ.s 			page 232


 7459              	.L769:
3573:src/keys.c    ****       //print_debug (91,cur_shift());
 7460              		.loc 1 3573 7 view .LVU2249
 7461              	.LVL639:
 7462              	.LBB846:
 7463              	.LBI846:
3213:src/keys.c    ****   const enum shifts shift = cur_shift();
 7464              		.loc 1 3213 12 view .LVU2250
 7465              	.LBB847:
3214:src/keys.c    ****   enum catalogues cat;
 7466              		.loc 1 3214 3 view .LVU2251
 7467              	.LBB848:
 7468              	.LBI848:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7469              		.loc 1 96 13 view .LVU2252
 7470              	.LBB849:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7471              		.loc 1 97 2 view .LVU2253
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7472              		.loc 1 97 18 is_stmt 0 view .LVU2254
 7473 016e FFF7FEFF 		bl	shift_down
 7474              	.LVL640:
  98:src/keys.c    **** }
 7475              		.loc 1 98 2 is_stmt 1 view .LVU2255
  98:src/keys.c    **** }
 7476              		.loc 1 98 52 is_stmt 0 view .LVU2256
 7477 0172 0346     		mov	r3, r0
 7478 0174 08B9     		cbnz	r0, .L801
 7479 0176 624B     		ldr	r3, .L1441+32
 7480 0178 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 7481              	.L801:
 7482              	.LVL641:
  98:src/keys.c    **** }
 7483              		.loc 1 98 52 view .LVU2257
 7484              	.LBE849:
 7485              	.LBE848:
3215:src/keys.c    **** 
 7486              		.loc 1 3215 3 is_stmt 1 view .LVU2258
3217:src/keys.c    ****     /*
 7487              		.loc 1 3217 3 view .LVU2259
3217:src/keys.c    ****     /*
 7488              		.loc 1 3217 7 is_stmt 0 view .LVU2260
 7489 017a 3568     		ldr	r5, [r6]
3217:src/keys.c    ****     /*
 7490              		.loc 1 3217 6 view .LVU2261
 7491 017c 002D     		cmp	r5, #0
 7492 017e 40F09380 		bne	.L802
3217:src/keys.c    ****     /*
 7493              		.loc 1 3217 15 view .LVU2262
 7494 0182 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 7495 0184 002A     		cmp	r2, #0
 7496 0186 40F08F80 		bne	.L802
3245:src/keys.c    **** #else
 7497              		.loc 1 3245 3 is_stmt 1 view .LVU2263
3245:src/keys.c    **** #else
 7498              		.loc 1 3245 6 is_stmt 0 view .LVU2264
 7499 018a 242C     		cmp	r4, #36
ARM GAS  /tmp/ccvq0xdJ.s 			page 233


 7500 018c 00F0BA83 		beq	.L1359
3262:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7501              		.loc 1 3262 2 is_stmt 1 view .LVU2265
3262:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7502              		.loc 1 3262 5 is_stmt 0 view .LVU2266
 7503 0190 272C     		cmp	r4, #39
 7504 0192 04D1     		bne	.L817
3262:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7505              		.loc 1 3262 15 view .LVU2267
 7506 0194 544A     		ldr	r2, .L1441+8
 7507 0196 1168     		ldr	r1, [r2]
 7508 0198 0029     		cmp	r1, #0
 7509 019a 40F0B084 		bne	.L1360
 7510              	.L817:
 7511 019e DFF86081 		ldr	r8, .L1441+32
 7512 01a2 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 7513              	.L809:
3271:src/keys.c    **** 		CmdLineLength = 0;
 7514              		.loc 1 3271 2 is_stmt 1 view .LVU2268
3271:src/keys.c    **** 		CmdLineLength = 0;
 7515              		.loc 1 3271 5 is_stmt 0 view .LVU2269
 7516 01a6 4AB1     		cbz	r2, .L820
 7517 01a8 0093     		str	r3, [sp]
3271:src/keys.c    **** 		CmdLineLength = 0;
 7518              		.loc 1 3271 26 view .LVU2270
 7519 01aa FFF7FEFF 		bl	keyticks
 7520              	.LVL642:
3271:src/keys.c    **** 		CmdLineLength = 0;
 7521              		.loc 1 3271 23 view .LVU2271
 7522 01ae 1E28     		cmp	r0, #30
3272:src/keys.c    **** 	/*
 7523              		.loc 1 3272 17 view .LVU2272
 7524 01b0 C8BF     		it	gt
 7525 01b2 0022     		movgt	r2, #0
3271:src/keys.c    **** 		CmdLineLength = 0;
 7526              		.loc 1 3271 23 view .LVU2273
 7527 01b4 009B     		ldr	r3, [sp]
3272:src/keys.c    **** 	/*
 7528              		.loc 1 3272 3 is_stmt 1 view .LVU2274
3272:src/keys.c    **** 	/*
 7529              		.loc 1 3272 17 is_stmt 0 view .LVU2275
 7530 01b6 C8BF     		it	gt
 7531 01b8 88F81C20 		strbgt	r2, [r8, #28]
 7532              	.L820:
3277:src/keys.c    **** 		return process_confirm((const keycode)c);
 7533              		.loc 1 3277 2 is_stmt 1 view .LVU2276
3277:src/keys.c    **** 		return process_confirm((const keycode)c);
 7534              		.loc 1 3277 6 is_stmt 0 view .LVU2277
 7535 01bc 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
3277:src/keys.c    **** 		return process_confirm((const keycode)c);
 7536              		.loc 1 3277 5 view .LVU2278
 7537 01c0 5007     		lsls	r0, r2, #29
 7538 01c2 40F02583 		bne	.L1361
3280:src/keys.c    **** 		return process_arg((const keycode)c);
 7539              		.loc 1 3280 2 is_stmt 1 view .LVU2279
3280:src/keys.c    **** 		return process_arg((const keycode)c);
 7540              		.loc 1 3280 6 is_stmt 0 view .LVU2280
ARM GAS  /tmp/ccvq0xdJ.s 			page 234


 7541 01c6 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3280:src/keys.c    **** 		return process_arg((const keycode)c);
 7542              		.loc 1 3280 5 view .LVU2281
 7543 01ca 9106     		lsls	r1, r2, #26
 7544 01cc 00F1BD83 		bmi	.L1362
3283:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7545              		.loc 1 3283 2 is_stmt 1 view .LVU2282
3283:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7546              		.loc 1 3283 6 is_stmt 0 view .LVU2283
 7547 01d0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
3283:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7548              		.loc 1 3283 5 view .LVU2284
 7549 01d4 11F0010A 		ands	r10, r1, #1
 7550 01d8 40F00984 		bne	.L1363
3286:src/keys.c    **** 		return process_hyp((const keycode)c);
 7551              		.loc 1 3286 2 is_stmt 1 view .LVU2285
3286:src/keys.c    **** 		return process_hyp((const keycode)c);
 7552              		.loc 1 3286 5 is_stmt 0 view .LVU2286
 7553 01dc 11F02000 		ands	r0, r1, #32
 7554 01e0 40F04E84 		bne	.L1364
3289:src/keys.c    **** 		return process_test((const keycode)c);
 7555              		.loc 1 3289 2 is_stmt 1 view .LVU2287
3289:src/keys.c    **** 		return process_test((const keycode)c);
 7556              		.loc 1 3289 12 is_stmt 0 view .LVU2288
 7557 01e4 98F80FA0 		ldrb	r10, [r8, #15]	@ zero_extendqisi2
3289:src/keys.c    **** 		return process_test((const keycode)c);
 7558              		.loc 1 3289 5 view .LVU2289
 7559 01e8 BAF1070F 		cmp	r10, #7
 7560 01ec 40F0C483 		bne	.L1365
3292:src/keys.c    **** 		return process_status((const keycode)c);
 7561              		.loc 1 3292 2 is_stmt 1 view .LVU2290
3292:src/keys.c    **** 		return process_status((const keycode)c);
 7562              		.loc 1 3292 12 is_stmt 0 view .LVU2291
 7563 01f0 98F80C20 		ldrb	r2, [r8, #12]	@ zero_extendqisi2
3292:src/keys.c    **** 		return process_status((const keycode)c);
 7564              		.loc 1 3292 5 view .LVU2292
 7565 01f4 002A     		cmp	r2, #0
 7566 01f6 40F01E85 		bne	.L1366
3298:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7567              		.loc 1 3298 2 is_stmt 1 view .LVU2293
3298:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7568              		.loc 1 3298 5 is_stmt 0 view .LVU2294
 7569 01fa 292C     		cmp	r4, #41
 7570 01fc 00F0DC85 		beq	.L1367
3302:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7571              		.loc 1 3302 2 is_stmt 1 view .LVU2295
3302:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7572              		.loc 1 3302 5 is_stmt 0 view .LVU2296
 7573 0200 2A2C     		cmp	r4, #42
 7574 0202 00F0E485 		beq	.L1368
3306:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7575              		.loc 1 3306 2 is_stmt 1 view .LVU2297
3306:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7576              		.loc 1 3306 5 is_stmt 0 view .LVU2298
 7577 0206 2B2C     		cmp	r4, #43
 7578 0208 00F0F185 		beq	.L1369
3315:src/keys.c    **** 		return process_arrow((const keycode)c);
ARM GAS  /tmp/ccvq0xdJ.s 			page 235


 7579              		.loc 1 3315 2 is_stmt 1 view .LVU2299
3315:src/keys.c    **** 		return process_arrow((const keycode)c);
 7580              		.loc 1 3315 5 is_stmt 0 view .LVU2300
 7581 020c 4807     		lsls	r0, r1, #29
 7582 020e 00F14D85 		bmi	.L1370
3323:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7583              		.loc 1 3323 2 is_stmt 1 view .LVU2301
 7584              	.LBB850:
 7585              	.LBB851:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7586              		.loc 1 276 6 is_stmt 0 view .LVU2302
 7587 0212 DFF800B1 		ldr	fp, .L1441+52
 7588 0216 DBF80000 		ldr	r0, [fp]
 7589 021a 90F8E4C7 		ldrb	ip, [r0, #2020]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7590              		.loc 1 276 5 view .LVU2303
 7591 021e 1CF0040F 		tst	ip, #4
 7592              	.LBE851:
 7593              	.LBE850:
3323:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7594              		.loc 1 3323 8 view .LVU2304
 7595 0222 E4B2     		uxtb	r4, r4
 7596              	.LVL643:
 7597              	.LBB875:
 7598              	.LBI850:
 267:src/keys.c    **** {
 7599              		.loc 1 267 24 is_stmt 1 view .LVU2305
 7600              	.LBB858:
 269:src/keys.c    ****   int i, col, max;
 7601              		.loc 1 269 3 view .LVU2306
 270:src/keys.c    ****   const struct _map {
 7602              		.loc 1 270 3 view .LVU2307
 271:src/keys.c    ****     unsigned char key, cat[3];
 7603              		.loc 1 271 3 view .LVU2308
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7604              		.loc 1 276 2 view .LVU2309
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7605              		.loc 1 276 5 is_stmt 0 view .LVU2310
 7606 0224 00F06F84 		beq	.L900
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7607              		.loc 1 276 6 view .LVU2311
 7608 0228 90F8DE27 		ldrb	r2, [r0, #2014]	@ zero_extendqisi2
 7609 022c 5207     		lsls	r2, r2, #29
 7610 022e 40F16A84 		bpl	.L900
 277:src/keys.c    **** 			switch (c) {
 7611              		.loc 1 277 3 is_stmt 1 view .LVU2312
 277:src/keys.c    **** 			switch (c) {
 7612              		.loc 1 277 6 is_stmt 0 view .LVU2313
 7613 0232 032B     		cmp	r3, #3
 7614 0234 00F03782 		beq	.L1371
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 7615              		.loc 1 294 3 is_stmt 1 view .LVU2314
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 7616              		.loc 1 294 6 is_stmt 0 view .LVU2315
 7617 0238 022B     		cmp	r3, #2
 7618 023a 01F09780 		beq	.L1372
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 236


 7619              		.loc 1 296 3 is_stmt 1 view .LVU2316
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 7620              		.loc 1 296 6 is_stmt 0 view .LVU2317
 7621 023e 012B     		cmp	r3, #1
 7622 0240 02D1     		bne	.L921
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 7623              		.loc 1 296 27 view .LVU2318
 7624 0242 0C2C     		cmp	r4, #12
 7625 0244 01F0ED82 		beq	.L1373
 7626              	.LVL644:
 7627              	.L921:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7628              		.loc 1 427 3 is_stmt 1 view .LVU2319
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7629              		.loc 1 427 6 is_stmt 0 view .LVU2320
 7630 0248 0A07     		lsls	r2, r1, #28
 7631 024a 00F19484 		bmi	.L927
 7632              	.LVL645:
 7633              	.L925:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7634              		.loc 1 427 6 view .LVU2321
 7635              	.LBE858:
 7636              	.LBE875:
3338:src/keys.c    **** 		return process_labellist((const keycode)c);
 7637              		.loc 1 3338 2 is_stmt 1 view .LVU2322
3338:src/keys.c    **** 		return process_labellist((const keycode)c);
 7638              		.loc 1 3338 6 is_stmt 0 view .LVU2323
 7639 024e 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3338:src/keys.c    **** 		return process_labellist((const keycode)c);
 7640              		.loc 1 3338 5 view .LVU2324
 7641 0252 5007     		lsls	r0, r2, #29
 7642 0254 00F13886 		bmi	.L1374
3341:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7643              		.loc 1 3341 2 is_stmt 1 view .LVU2325
3341:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7644              		.loc 1 3341 5 is_stmt 0 view .LVU2326
 7645 0258 1207     		lsls	r2, r2, #28
 7646 025a 00F17787 		bmi	.L1375
3344:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7647              		.loc 1 3344 2 is_stmt 1 view .LVU2327
3344:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7648              		.loc 1 3344 5 is_stmt 0 view .LVU2328
 7649 025e 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 7650 0262 002A     		cmp	r2, #0
 7651 0264 41F07380 		bne	.L1376
3347:src/keys.c    **** #ifndef INFRARED
 7652              		.loc 1 3347 2 is_stmt 1 view .LVU2329
3347:src/keys.c    **** #ifndef INFRARED
 7653              		.loc 1 3347 6 is_stmt 0 view .LVU2330
 7654 0268 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3347:src/keys.c    **** #ifndef INFRARED
 7655              		.loc 1 3347 5 view .LVU2331
 7656 026c 1007     		lsls	r0, r2, #28
 7657 026e 01F18480 		bmi	.L1377
3360:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7658              		.loc 1 3360 2 is_stmt 1 view .LVU2332
3360:src/keys.c    **** 		return process_c_lock ((const keycode)c);
ARM GAS  /tmp/ccvq0xdJ.s 			page 237


 7659              		.loc 1 3360 6 is_stmt 0 view .LVU2333
 7660 0272 DBF80020 		ldr	r2, [fp]
 7661 0276 92F8E407 		ldrb	r0, [r2, #2020]	@ zero_extendqisi2
3360:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7662              		.loc 1 3360 5 view .LVU2334
 7663 027a 4007     		lsls	r0, r0, #29
 7664 027c 04D5     		bpl	.L1034
3360:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7665              		.loc 1 3360 6 view .LVU2335
 7666 027e 92F8DE27 		ldrb	r2, [r2, #2014]	@ zero_extendqisi2
 7667 0282 5007     		lsls	r0, r2, #29
 7668 0284 01F17082 		bmi	.L1378
 7669              	.L1034:
3364:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7670              		.loc 1 3364 2 is_stmt 1 view .LVU2336
3364:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7671              		.loc 1 3364 5 is_stmt 0 view .LVU2337
 7672 0288 8A07     		lsls	r2, r1, #30
 7673 028a 01F17B81 		bmi	.L1340
3367:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7674              		.loc 1 3367 3 is_stmt 1 view .LVU2338
3367:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7675              		.loc 1 3367 24 is_stmt 0 view .LVU2339
 7676 028e 5A1E     		subs	r2, r3, #1
3367:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7677              		.loc 1 3367 6 view .LVU2340
 7678 0290 D2B2     		uxtb	r2, r2
 7679 0292 012A     		cmp	r2, #1
 7680 0294 41F21F82 		bls	.L1338
3369:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7681              		.loc 1 3369 3 is_stmt 1 view .LVU2341
3369:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7682              		.loc 1 3369 6 is_stmt 0 view .LVU2342
 7683 0298 032B     		cmp	r3, #3
3370:src/keys.c    **** 		// print_debug (3, c);
 7684              		.loc 1 3370 11 view .LVU2343
 7685 029a 2046     		mov	r0, r4
3369:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7686              		.loc 1 3369 6 view .LVU2344
 7687 029c 01F06A81 		beq	.L1379
 7688              	.L1341:
 7689              	.LBB876:
 7690              	.LBB877:
1439:src/keys.c    ****    case (K_CMPLX):
 7691              		.loc 1 1439 13 view .LVU2345
 7692 02a0 FFF7FEFF 		bl	process_normal
 7693              	.LVL646:
 7694 02a4 0446     		mov	r4, r0
 7695 02a6 7FE0     		b	.L832
 7696              	.LVL647:
 7697              	.L802:
1439:src/keys.c    ****    case (K_CMPLX):
 7698              		.loc 1 1439 13 view .LVU2346
 7699              	.LBE877:
 7700              	.LBE876:
3221:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7701              		.loc 1 3221 5 is_stmt 1 view .LVU2347
ARM GAS  /tmp/ccvq0xdJ.s 			page 238


3221:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7702              		.loc 1 3221 8 is_stmt 0 view .LVU2348
 7703 02a8 242C     		cmp	r4, #36
 7704 02aa 00F0D280 		beq	.L804
3221:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7705              		.loc 1 3221 18 view .LVU2349
 7706 02ae 272C     		cmp	r4, #39
 7707 02b0 00F0CF80 		beq	.L804
3231:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7708              		.loc 1 3231 5 is_stmt 1 view .LVU2350
3231:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7709              		.loc 1 3231 8 is_stmt 0 view .LVU2351
 7710 02b4 622C     		cmp	r4, #98
 7711 02b6 07D0     		beq	.L807
3232:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7712              		.loc 1 3232 7 is_stmt 1 view .LVU2352
3232:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7713              		.loc 1 3232 15 is_stmt 0 view .LVU2353
 7714 02b8 114B     		ldr	r3, .L1441+32
 7715              	.LVL648:
3234:src/keys.c    ****     }
 7716              		.loc 1 3234 14 view .LVU2354
 7717 02ba 0D4A     		ldr	r2, .L1441+16
3232:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7718              		.loc 1 3232 17 view .LVU2355
 7719 02bc 0134     		adds	r4, r4, #1
 7720              	.LVL649:
3234:src/keys.c    ****     }
 7721              		.loc 1 3234 14 view .LVU2356
 7722 02be 0121     		movs	r1, #1
3232:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7723              		.loc 1 3232 15 view .LVU2357
 7724 02c0 DC74     		strb	r4, [r3, #19]
3233:src/keys.c    ****       GoFast = 1;
 7725              		.loc 1 3233 7 is_stmt 1 view .LVU2358
3233:src/keys.c    ****       GoFast = 1;
 7726              		.loc 1 3233 13 is_stmt 0 view .LVU2359
 7727 02c2 0023     		movs	r3, #0
3234:src/keys.c    ****     }
 7728              		.loc 1 3234 14 view .LVU2360
 7729 02c4 1160     		str	r1, [r2]
3233:src/keys.c    ****       GoFast = 1;
 7730              		.loc 1 3233 13 view .LVU2361
 7731 02c6 3B70     		strb	r3, [r7]
3234:src/keys.c    ****     }
 7732              		.loc 1 3234 7 is_stmt 1 view .LVU2362
 7733              	.LVL650:
 7734              	.L807:
3234:src/keys.c    ****     }
 7735              		.loc 1 3234 7 is_stmt 0 view .LVU2363
 7736              	.LBE847:
 7737              	.LBE846:
3635:src/keys.c    ****       break;
 7738              		.loc 1 3635 7 is_stmt 1 view .LVU2364
 7739 02c8 FFF7FEFF 		bl	xeqprog
 7740              	.LVL651:
3636:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 239


 7741              		.loc 1 3636 7 view .LVU2365
 7742 02cc 3368     		ldr	r3, [r6]
3408:src/keys.c    ****   //print_debug(60,c);
 7743              		.loc 1 3408 7 is_stmt 0 view .LVU2366
 7744 02ce 0025     		movs	r5, #0
3636:src/keys.c    **** 
 7745              		.loc 1 3636 7 view .LVU2367
 7746 02d0 3124     		movs	r4, #49
 7747              	.LVL652:
3676:src/keys.c    **** #ifndef CONSOLE
 7748              		.loc 1 3676 3 is_stmt 1 view .LVU2368
3676:src/keys.c    **** #ifndef CONSOLE
 7749              		.loc 1 3676 6 is_stmt 0 view .LVU2369
 7750 02d2 002B     		cmp	r3, #0
 7751 02d4 3FF4F1AE 		beq	.L818
 7752              	.L1348:
3676:src/keys.c    **** #ifndef CONSOLE
 7753              		.loc 1 3676 6 view .LVU2370
 7754 02d8 084E     		ldr	r6, .L1441+28
3689:src/keys.c    ****   watchdog();
 7755              		.loc 1 3689 3 is_stmt 1 view .LVU2371
3689:src/keys.c    ****   watchdog();
 7756              		.loc 1 3689 17 is_stmt 0 view .LVU2372
 7757 02da 0023     		movs	r3, #0
 7758 02dc 3360     		str	r3, [r6]
3690:src/keys.c    **** }
 7759              		.loc 1 3690 13 is_stmt 1 view .LVU2373
 7760 02de 0FE7     		b	.L766
 7761              	.L1442:
 7762              		.align	2
 7763              	.L1441:
 7764 02e0 00000000 		.word	.LANCHOR18
 7765 02e4 00000000 		.word	Pause
 7766 02e8 00000000 		.word	JustStopped
 7767 02ec 00000000 		.word	OpCode
 7768 02f0 00000000 		.word	GoFast
 7769 02f4 00000000 		.word	Running
 7770 02f8 00000000 		.word	ShowRPN
 7771 02fc 00000000 		.word	JustDisplayed
 7772 0300 00000000 		.word	StateWhileOn
 7773 0304 00000000 		.word	OpCodeDisplayPending
 7774 0308 00000000 		.word	DispMsg
 7775 030c 00000000 		.word	.LC0
 7776 0310 00000000 		.word	WasDataEntry
 7777 0314 00000000 		.word	main_ram
 7778              	.LVL653:
 7779              	.L1350:
3420:src/keys.c    ****     }
 7780              		.loc 1 3420 7 view .LVU2374
3570:src/keys.c    **** #ifdef DM42
 7781              		.loc 1 3570 15 is_stmt 0 view .LVU2375
 7782 0318 B14E     		ldr	r6, .L1443
3570:src/keys.c    **** #ifdef DM42
 7783              		.loc 1 3570 13 view .LVU2376
 7784 031a B249     		ldr	r1, .L1443+4
3570:src/keys.c    **** #ifdef DM42
 7785              		.loc 1 3570 15 view .LVU2377
ARM GAS  /tmp/ccvq0xdJ.s 			page 240


 7786 031c 3368     		ldr	r3, [r6]
3420:src/keys.c    ****     }
 7787              		.loc 1 3420 14 view .LVU2378
 7788 031e B24A     		ldr	r2, .L1443+8
3569:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7789              		.loc 1 3569 18 view .LVU2379
 7790 0320 DFF8E492 		ldr	r9, .L1443+40
3570:src/keys.c    **** #ifdef DM42
 7791              		.loc 1 3570 15 view .LVU2380
 7792 0324 B3FA83F3 		clz	r3, r3
 7793 0328 5B09     		lsrs	r3, r3, #5
3570:src/keys.c    **** #ifdef DM42
 7794              		.loc 1 3570 13 view .LVU2381
 7795 032a 0B60     		str	r3, [r1]
3420:src/keys.c    ****     }
 7796              		.loc 1 3420 14 view .LVU2382
 7797 032c 0023     		movs	r3, #0
 7798 032e 1360     		str	r3, [r2]
3517:src/keys.c    ****     {
 7799              		.loc 1 3517 3 is_stmt 1 view .LVU2383
3569:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7800              		.loc 1 3569 5 view .LVU2384
3569:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7801              		.loc 1 3569 18 is_stmt 0 view .LVU2385
 7802 0330 C9F80030 		str	r3, [r9]
3570:src/keys.c    **** #ifdef DM42
 7803              		.loc 1 3570 5 is_stmt 1 view .LVU2386
3572:src/keys.c    ****       c = process(c);
 7804              		.loc 1 3572 5 view .LVU2387
 7805 0334 1BE7     		b	.L769
 7806              	.L787:
3572:src/keys.c    ****       c = process(c);
 7807              		.loc 1 3572 5 is_stmt 0 view .LVU2388
 7808 0336 AA4E     		ldr	r6, .L1443
3570:src/keys.c    **** #ifdef DM42
 7809              		.loc 1 3570 13 view .LVU2389
 7810 0338 AA49     		ldr	r1, .L1443+4
 7811 033a 3368     		ldr	r3, [r6]
3569:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7812              		.loc 1 3569 5 is_stmt 1 view .LVU2390
3569:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7813              		.loc 1 3569 18 is_stmt 0 view .LVU2391
 7814 033c DFF8C892 		ldr	r9, .L1443+40
3570:src/keys.c    **** #ifdef DM42
 7815              		.loc 1 3570 15 view .LVU2392
 7816 0340 B3FA83F2 		clz	r2, r3
 7817 0344 5209     		lsrs	r2, r2, #5
3572:src/keys.c    ****       c = process(c);
 7818              		.loc 1 3572 8 view .LVU2393
 7819 0346 342C     		cmp	r4, #52
3570:src/keys.c    **** #ifdef DM42
 7820              		.loc 1 3570 13 view .LVU2394
 7821 0348 0A60     		str	r2, [r1]
3569:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7822              		.loc 1 3569 18 view .LVU2395
 7823 034a C9F80000 		str	r0, [r9]
3570:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccvq0xdJ.s 			page 241


 7824              		.loc 1 3570 5 is_stmt 1 view .LVU2396
3572:src/keys.c    ****       c = process(c);
 7825              		.loc 1 3572 5 view .LVU2397
3572:src/keys.c    ****       c = process(c);
 7826              		.loc 1 3572 8 is_stmt 0 view .LVU2398
 7827 034e 7FF40EAF 		bne	.L769
3578:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7828              		.loc 1 3578 7 is_stmt 1 view .LVU2399
3578:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7829              		.loc 1 3578 11 is_stmt 0 view .LVU2400
 7830 0352 A64A     		ldr	r2, .L1443+12
 7831 0354 1568     		ldr	r5, [r2]
3578:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7832              		.loc 1 3578 10 view .LVU2401
 7833 0356 15F47042 		ands	r2, r5, #61440
 7834 035a 1FD0     		beq	.L1087
3578:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7835              		.loc 1 3578 11 discriminator 1 view .LVU2402
 7836 035c B2F5704F 		cmp	r2, #61440
 7837 0360 00F0D480 		beq	.L1088
 7838              	.LBB1475:
3579:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7839              		.loc 1 3579 2 is_stmt 1 view .LVU2403
3579:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7840              		.loc 1 3579 28 is_stmt 0 view .LVU2404
 7841 0364 C5F30722 		ubfx	r2, r5, #8, #8
 7842 0368 A2F12004 		sub	r4, r2, #32
 7843              	.LVL654:
3579:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7844              		.loc 1 3579 28 view .LVU2405
 7845 036c E4B2     		uxtb	r4, r4
 7846              	.LVL655:
3580:src/keys.c    **** 	  c = nd_opcode;
 7847              		.loc 1 3580 2 is_stmt 1 view .LVU2406
3580:src/keys.c    **** 	  c = nd_opcode;
 7848              		.loc 1 3580 5 is_stmt 0 view .LVU2407
 7849 036e 012C     		cmp	r4, #1
 7850 0370 40F2CF80 		bls	.L1094
3580:src/keys.c    **** 	  c = nd_opcode;
 7851              		.loc 1 3580 53 discriminator 1 view .LVU2408
 7852 0374 6C2C     		cmp	r4, #108
 7853 0376 00F0CC80 		beq	.L1094
3580:src/keys.c    **** 	  c = nd_opcode;
 7854              		.loc 1 3580 74 discriminator 2 view .LVU2409
 7855 037a 242C     		cmp	r4, #36
 7856 037c 00F0C980 		beq	.L1094
3582:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7857              		.loc 1 3582 7 is_stmt 1 view .LVU2410
3582:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7858              		.loc 1 3582 32 is_stmt 0 view .LVU2411
 7859 0380 A4F12D01 		sub	r1, r4, #45
3582:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7860              		.loc 1 3582 10 view .LVU2412
 7861 0384 0629     		cmp	r1, #6
 7862 0386 00F2AC82 		bhi	.L1091
3583:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7863              		.loc 1 3583 4 is_stmt 1 view .LVU2413
ARM GAS  /tmp/ccvq0xdJ.s 			page 242


3583:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7864              		.loc 1 3583 25 is_stmt 0 view .LVU2414
 7865 038a 4D3A     		subs	r2, r2, #77
3583:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7866              		.loc 1 3583 16 view .LVU2415
 7867 038c 88F80F20 		strb	r2, [r8, #15]
3584:src/keys.c    **** 	}
 7868              		.loc 1 3584 4 is_stmt 1 view .LVU2416
 7869              	.LVL656:
3584:src/keys.c    **** 	}
 7870              		.loc 1 3584 4 is_stmt 0 view .LVU2417
 7871              	.LBE1475:
3613:src/keys.c    ****     case STATE_SST:
 7872              		.loc 1 3613 5 is_stmt 1 view .LVU2418
3408:src/keys.c    ****   //print_debug(60,c);
 7873              		.loc 1 3408 7 is_stmt 0 view .LVU2419
 7874 0390 0546     		mov	r5, r0
 7875              	.LBB1478:
3584:src/keys.c    **** 	}
 7876              		.loc 1 3584 6 view .LVU2420
 7877 0392 3324     		movs	r4, #51
 7878              	.LVL657:
3584:src/keys.c    **** 	}
 7879              		.loc 1 3584 6 view .LVU2421
 7880 0394 8EE6     		b	.L797
 7881              	.LVL658:
 7882              	.L1349:
3584:src/keys.c    **** 	}
 7883              		.loc 1 3584 6 view .LVU2422
 7884              	.LBE1478:
3415:src/keys.c    ****     }
 7885              		.loc 1 3415 7 is_stmt 1 view .LVU2423
 7886 0396 FFF7FEFF 		bl	xeq_xrom
 7887              	.LVL659:
3415:src/keys.c    ****     }
 7888              		.loc 1 3415 7 is_stmt 0 view .LVU2424
 7889 039a 3DE6     		b	.L767
 7890              	.L1087:
3607:src/keys.c    ****       }      
 7891              		.loc 1 3607 2 is_stmt 1 view .LVU2425
 7892              	.LBB1479:
 7893              	.LBB1480:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7894              		.loc 1 715 5 is_stmt 0 view .LVU2426
 7895 039c C5F30723 		ubfx	r3, r5, #8, #8
 7896 03a0 012B     		cmp	r3, #1
 7897              	.LBE1480:
 7898              	.LBE1479:
3607:src/keys.c    ****       }      
 7899              		.loc 1 3607 6 view .LVU2427
 7900 03a2 2C46     		mov	r4, r5
 7901              	.LVL660:
 7902              	.LBB1483:
 7903              	.LBI1479:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7904              		.loc 1 714 12 is_stmt 1 view .LVU2428
 7905              	.LBB1481:
ARM GAS  /tmp/ccvq0xdJ.s 			page 243


 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7906              		.loc 1 715 2 view .LVU2429
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7907              		.loc 1 715 5 is_stmt 0 view .LVU2430
 7908 03a4 00F0F381 		beq	.L1339
 7909              	.LVL661:
 7910              	.L832:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7911              		.loc 1 715 5 view .LVU2431
 7912              	.LBE1481:
 7913              	.LBE1483:
3613:src/keys.c    ****     case STATE_SST:
 7914              		.loc 1 3613 5 is_stmt 1 view .LVU2432
 7915 03a8 A4F12B03 		sub	r3, r4, #43
 7916 03ac 082B     		cmp	r3, #8
 7917 03ae 00F24281 		bhi	.L1096
 7918 03b2 01A2     		adr	r2, .L1097
 7919 03b4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7920              		.p2align 2
 7921              	.L1097:
 7922 03b8 31040000 		.word	.L1098+1
 7923 03bc 31040000 		.word	.L1098+1
 7924 03c0 37060000 		.word	.L1096+1
 7925 03c4 A5040000 		.word	.L1029+1
 7926 03c8 FD040000 		.word	.L1031+1
 7927 03cc CD040000 		.word	.L1032+1
 7928 03d0 C9020000 		.word	.L807+1
 7929 03d4 2B040000 		.word	.L1344+1
 7930 03d8 2B040000 		.word	.L1344+1
 7931              		.p2align 1
 7932              	.L1358:
3484:src/keys.c    **** 	return;
 7933              		.loc 1 3484 23 is_stmt 0 discriminator 1 view .LVU2433
 7934 03dc 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3484:src/keys.c    **** 	return;
 7935              		.loc 1 3484 20 discriminator 1 view .LVU2434
 7936 03de 002A     		cmp	r2, #0
 7937 03e0 7FF4BBAE 		bne	.L783
 7938 03e4 8CE6     		b	.L766
 7939              	.LVL662:
 7940              	.L1008:
 7941              	.LBB1484:
 7942              	.LBB1421:
 7943              	.LBB989:
 7944              	.LBB990:
 7945              	.LBB991:
1826:src/keys.c    **** 	    if ( State2.runmode ) {
 7946              		.loc 1 1826 4 is_stmt 1 view .LVU2435
1826:src/keys.c    **** 	    if ( State2.runmode ) {
 7947              		.loc 1 1826 7 is_stmt 0 view .LVU2436
 7948 03e6 BAF1000F 		cmp	r10, #0
 7949 03ea 40F01181 		bne	.L1003
1827:src/keys.c    **** 	      // Alpha scroll left
 7950              		.loc 1 1827 6 is_stmt 1 view .LVU2437
1827:src/keys.c    **** 	      // Alpha scroll left
 7951              		.loc 1 1827 9 is_stmt 0 view .LVU2438
 7952 03ee 5106     		lsls	r1, r2, #25
ARM GAS  /tmp/ccvq0xdJ.s 			page 244


 7953 03f0 78D5     		bpl	.L1020
1835:src/keys.c    **** 		alpha_pos += 1;
 7954              		.loc 1 1835 8 is_stmt 1 view .LVU2439
1835:src/keys.c    **** 		alpha_pos += 1;
 7955              		.loc 1 1835 11 is_stmt 0 view .LVU2440
 7956 03f2 002B     		cmp	r3, #0
 7957 03f4 41F03085 		bne	.L1021
 7958              	.LVL663:
 7959              	.L1023:
1836:src/keys.c    **** 	      }
 7960              		.loc 1 1836 3 is_stmt 1 view .LVU2441
1836:src/keys.c    **** 	      }
 7961              		.loc 1 1836 13 is_stmt 0 view .LVU2442
 7962 03f8 0133     		adds	r3, r3, #1
 7963 03fa 0093     		str	r3, [sp]
 7964              	.LVL664:
 7965              	.L1022:
1843:src/keys.c    **** #else
 7966              		.loc 1 1843 8 is_stmt 1 view .LVU2443
1843:src/keys.c    **** #else
 7967              		.loc 1 1843 25 is_stmt 0 view .LVU2444
 7968 03fc 009B     		ldr	r3, [sp]
 7969 03fe 88F80D30 		strb	r3, [r8, #13]
1848:src/keys.c    **** 	    }
 7970              		.loc 1 1848 8 is_stmt 1 view .LVU2445
 7971              	.L1014:
 7972              	.LVL665:
1848:src/keys.c    **** 	    }
 7973              		.loc 1 1848 8 is_stmt 0 view .LVU2446
 7974              	.LBE991:
 7975              	.LBE990:
3352:src/keys.c    **** 			print_tab(0);
 7976              		.loc 1 3352 3 is_stmt 1 view .LVU2447
3352:src/keys.c    **** 			print_tab(0);
 7977              		.loc 1 3352 7 is_stmt 0 view .LVU2448
 7978 0402 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
3352:src/keys.c    **** 			print_tab(0);
 7979              		.loc 1 3352 6 view .LVU2449
 7980 0406 10F00804 		ands	r4, r0, #8
 7981 040a 40F09981 		bne	.L1347
3352:src/keys.c    **** 			print_tab(0);
 7982              		.loc 1 3352 26 view .LVU2450
 7983 040e 6720     		movs	r0, #103
 7984 0410 FFF7FEFF 		bl	get_user_flag
 7985              	.LVL666:
3352:src/keys.c    **** 			print_tab(0);
 7986              		.loc 1 3352 23 view .LVU2451
 7987 0414 0546     		mov	r5, r0
 7988 0416 0028     		cmp	r0, #0
 7989 0418 00F09281 		beq	.L1347
3353:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 7990              		.loc 1 3353 4 is_stmt 1 view .LVU2452
 7991 041c 2046     		mov	r0, r4
 7992 041e FFF7FEFF 		bl	print_tab
 7993              	.LVL667:
3354:src/keys.c    **** 		}
 7994              		.loc 1 3354 4 view .LVU2453
ARM GAS  /tmp/ccvq0xdJ.s 			page 245


 7995 0422 C020     		movs	r0, #192
 7996 0424 FFF7FEFF 		bl	print_alpha
 7997              	.LVL668:
3354:src/keys.c    **** 		}
 7998              		.loc 1 3354 4 is_stmt 0 view .LVU2454
 7999              	.LBE989:
 8000              	.LBE1421:
 8001              	.LBE1484:
3613:src/keys.c    ****     case STATE_SST:
 8002              		.loc 1 3613 5 is_stmt 1 view .LVU2455
 8003              	.LBB1485:
 8004              	.LBB1422:
 8005              	.LBB1051:
3354:src/keys.c    **** 		}
 8006              		.loc 1 3354 4 is_stmt 0 view .LVU2456
 8007 0428 3324     		movs	r4, #51
 8008              	.LVL669:
 8009              	.L1344:
3354:src/keys.c    **** 		}
 8010              		.loc 1 3354 4 view .LVU2457
 8011 042a 3368     		ldr	r3, [r6]
 8012              	.LBE1051:
 8013              	.LBE1422:
 8014              	.LBE1485:
3408:src/keys.c    ****   //print_debug(60,c);
 8015              		.loc 1 3408 7 view .LVU2458
 8016 042c 0025     		movs	r5, #0
 8017 042e 41E6     		b	.L797
 8018              	.LVL670:
 8019              	.L1098:
3640:src/keys.c    **** 	set_window(c);
 8020              		.loc 1 3640 7 is_stmt 1 view .LVU2459
3640:src/keys.c    **** 	set_window(c);
 8021              		.loc 1 3640 12 is_stmt 0 view .LVU2460
 8022 0430 FFF7FEFF 		bl	is_bad_cmdline
 8023              	.LVL671:
3640:src/keys.c    **** 	set_window(c);
 8024              		.loc 1 3640 10 view .LVU2461
 8025 0434 0546     		mov	r5, r0
 8026 0436 0028     		cmp	r0, #0
 8027 0438 F7D1     		bne	.L1344
3641:src/keys.c    ****       break;
 8028              		.loc 1 3641 2 is_stmt 1 view .LVU2462
 8029 043a 2046     		mov	r0, r4
 8030 043c FFF7FEFF 		bl	set_window
 8031              	.LVL672:
 8032 0440 3368     		ldr	r3, [r6]
 8033 0442 37E6     		b	.L797
 8034              	.L1357:
3476:src/keys.c    **** 	JustStopped = 0;
 8035              		.loc 1 3476 27 is_stmt 0 discriminator 1 view .LVU2463
 8036 0444 FFF7FEFF 		bl	is_key_pressed
 8037              	.LVL673:
3476:src/keys.c    **** 	JustStopped = 0;
 8038              		.loc 1 3476 23 discriminator 1 view .LVU2464
 8039 0448 0028     		cmp	r0, #0
 8040 044a 7FF481AE 		bne	.L781
ARM GAS  /tmp/ccvq0xdJ.s 			page 246


3477:src/keys.c    ****       }
 8041              		.loc 1 3477 2 is_stmt 1 view .LVU2465
3477:src/keys.c    ****       }
 8042              		.loc 1 3477 14 is_stmt 0 view .LVU2466
 8043 044e 2860     		str	r0, [r5]
 8044 0450 7EE6     		b	.L781
 8045              	.LVL674:
 8046              	.L804:
 8047              	.LBB1486:
 8048              	.LBB1423:
3222:src/keys.c    **** 	set_pc(0);
 8049              		.loc 1 3222 7 is_stmt 1 view .LVU2467
3222:src/keys.c    **** 	set_pc(0);
 8050              		.loc 1 3222 11 is_stmt 0 view .LVU2468
 8051 0452 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 8052              	.LVL675:
3222:src/keys.c    **** 	set_pc(0);
 8053              		.loc 1 3222 10 view .LVU2469
 8054 0454 4BB1     		cbz	r3, .L806
3222:src/keys.c    **** 	set_pc(0);
 8055              		.loc 1 3222 20 view .LVU2470
 8056 0456 664B     		ldr	r3, .L1443+16
 8057 0458 1B68     		ldr	r3, [r3]
 8058 045a B3F8E037 		ldrh	r3, [r3, #2016]
3222:src/keys.c    **** 	set_pc(0);
 8059              		.loc 1 3222 17 view .LVU2471
 8060 045e 9B0B     		lsrs	r3, r3, #14
 8061 0460 032B     		cmp	r3, #3
 8062 0462 02D1     		bne	.L806
3223:src/keys.c    ****       Pause = 0;
 8063              		.loc 1 3223 2 is_stmt 1 view .LVU2472
 8064 0464 0020     		movs	r0, #0
 8065 0466 FFF7FEFF 		bl	set_pc
 8066              	.LVL676:
 8067              	.L806:
3224:src/keys.c    ****       xeq_xrom();
 8068              		.loc 1 3224 7 view .LVU2473
3224:src/keys.c    ****       xeq_xrom();
 8069              		.loc 1 3224 13 is_stmt 0 view .LVU2474
 8070 046a 0025     		movs	r5, #0
 8071 046c 3D70     		strb	r5, [r7]
3225:src/keys.c    ****       set_running_off();
 8072              		.loc 1 3225 7 is_stmt 1 view .LVU2475
 8073 046e FFF7FEFF 		bl	xeq_xrom
 8074              	.LVL677:
3226:src/keys.c    ****       DispMsg = "Stopped";
 8075              		.loc 1 3226 7 view .LVU2476
 8076 0472 FFF7FEFF 		bl	set_running_off
 8077              	.LVL678:
3227:src/keys.c    ****       State2.disp_freeze = 0;
 8078              		.loc 1 3227 7 view .LVU2477
3228:src/keys.c    ****       return STATE_UNFINISHED;
 8079              		.loc 1 3228 26 is_stmt 0 view .LVU2478
 8080 0476 5F4A     		ldr	r2, .L1443+20
3227:src/keys.c    ****       State2.disp_freeze = 0;
 8081              		.loc 1 3227 15 view .LVU2479
 8082 0478 5F48     		ldr	r0, .L1443+24
ARM GAS  /tmp/ccvq0xdJ.s 			page 247


3228:src/keys.c    ****       return STATE_UNFINISHED;
 8083              		.loc 1 3228 26 view .LVU2480
 8084 047a D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3227:src/keys.c    ****       State2.disp_freeze = 0;
 8085              		.loc 1 3227 15 view .LVU2481
 8086 047c 5F4C     		ldr	r4, .L1443+28
 8087              	.LVL679:
3227:src/keys.c    ****       State2.disp_freeze = 0;
 8088              		.loc 1 3227 15 view .LVU2482
 8089 047e 0460     		str	r4, [r0]
3228:src/keys.c    ****       return STATE_UNFINISHED;
 8090              		.loc 1 3228 7 is_stmt 1 view .LVU2483
3228:src/keys.c    ****       return STATE_UNFINISHED;
 8091              		.loc 1 3228 26 is_stmt 0 view .LVU2484
 8092 0480 65F30411 		bfi	r1, r5, #4, #1
 8093 0484 3368     		ldr	r3, [r6]
 8094 0486 D175     		strb	r1, [r2, #23]
3229:src/keys.c    ****     }
 8095              		.loc 1 3229 7 is_stmt 1 view .LVU2485
3229:src/keys.c    ****     }
 8096              		.loc 1 3229 14 is_stmt 0 view .LVU2486
 8097 0488 3324     		movs	r4, #51
 8098 048a 13E6     		b	.L797
 8099              	.LVL680:
 8100              	.L1024:
 8101              	.LBB1052:
3352:src/keys.c    **** 			print_tab(0);
 8102              		.loc 1 3352 3 is_stmt 1 view .LVU2487
3352:src/keys.c    **** 			print_tab(0);
 8103              		.loc 1 3352 6 is_stmt 0 view .LVU2488
 8104 048c 1007     		lsls	r0, r2, #28
 8105              	.LVL681:
3352:src/keys.c    **** 			print_tab(0);
 8106              		.loc 1 3352 6 view .LVU2489
 8107 048e 09D4     		bmi	.L1029
3352:src/keys.c    **** 			print_tab(0);
 8108              		.loc 1 3352 26 view .LVU2490
 8109 0490 6720     		movs	r0, #103
 8110 0492 FFF7FEFF 		bl	get_user_flag
 8111              	.LVL682:
3352:src/keys.c    **** 			print_tab(0);
 8112              		.loc 1 3352 23 view .LVU2491
 8113 0496 28B1     		cbz	r0, .L1029
3353:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8114              		.loc 1 3353 4 is_stmt 1 view .LVU2492
 8115 0498 5046     		mov	r0, r10
 8116 049a FFF7FEFF 		bl	print_tab
 8117              	.LVL683:
3354:src/keys.c    **** 		}
 8118              		.loc 1 3354 4 view .LVU2493
 8119 049e C020     		movs	r0, #192
 8120 04a0 FFF7FEFF 		bl	print_alpha
 8121              	.LVL684:
3354:src/keys.c    **** 		}
 8122              		.loc 1 3354 4 is_stmt 0 view .LVU2494
 8123              	.LBE1052:
 8124              	.LBE1423:
ARM GAS  /tmp/ccvq0xdJ.s 			page 248


 8125              	.LBE1486:
3613:src/keys.c    ****     case STATE_SST:
 8126              		.loc 1 3613 5 is_stmt 1 view .LVU2495
 8127              	.L1029:
3615:src/keys.c    ****       OpCodeDisplayPending = 0;
 8128              		.loc 1 3615 7 view .LVU2496
3615:src/keys.c    ****       OpCodeDisplayPending = 0;
 8129              		.loc 1 3615 14 is_stmt 0 view .LVU2497
 8130 04a4 504A     		ldr	r2, .L1443+8
3616:src/keys.c    ****       xeq_sst_bst(0);
 8131              		.loc 1 3616 28 view .LVU2498
 8132 04a6 564B     		ldr	r3, .L1443+32
 8133 04a8 0020     		movs	r0, #0
3615:src/keys.c    ****       OpCodeDisplayPending = 0;
 8134              		.loc 1 3615 14 view .LVU2499
 8135 04aa 2E24     		movs	r4, #46
 8136 04ac 1460     		str	r4, [r2]
3616:src/keys.c    ****       xeq_sst_bst(0);
 8137              		.loc 1 3616 7 is_stmt 1 view .LVU2500
3616:src/keys.c    ****       xeq_sst_bst(0);
 8138              		.loc 1 3616 28 is_stmt 0 view .LVU2501
 8139 04ae 1860     		str	r0, [r3]
3617:src/keys.c    ****       break;
 8140              		.loc 1 3617 7 is_stmt 1 view .LVU2502
3408:src/keys.c    ****   //print_debug(60,c);
 8141              		.loc 1 3408 7 is_stmt 0 view .LVU2503
 8142 04b0 0546     		mov	r5, r0
3617:src/keys.c    ****       break;
 8143              		.loc 1 3617 7 view .LVU2504
 8144 04b2 FFF7FEFF 		bl	xeq_sst_bst
 8145              	.LVL685:
 8146 04b6 FCE5     		b	.L1343
 8147              	.LVL686:
 8148              	.L1385:
 8149              	.LBB1487:
 8150              	.LBB1424:
 8151              	.LBB1053:
3352:src/keys.c    **** 			print_tab(0);
 8152              		.loc 1 3352 26 view .LVU2505
 8153 04b8 6720     		movs	r0, #103
 8154              	.LVL687:
3352:src/keys.c    **** 			print_tab(0);
 8155              		.loc 1 3352 26 view .LVU2506
 8156 04ba FFF7FEFF 		bl	get_user_flag
 8157              	.LVL688:
3352:src/keys.c    **** 			print_tab(0);
 8158              		.loc 1 3352 23 view .LVU2507
 8159 04be 28B1     		cbz	r0, .L1032
3353:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8160              		.loc 1 3353 4 is_stmt 1 view .LVU2508
 8161 04c0 5046     		mov	r0, r10
 8162 04c2 FFF7FEFF 		bl	print_tab
 8163              	.LVL689:
3354:src/keys.c    **** 		}
 8164              		.loc 1 3354 4 view .LVU2509
 8165 04c6 C020     		movs	r0, #192
 8166 04c8 FFF7FEFF 		bl	print_alpha
ARM GAS  /tmp/ccvq0xdJ.s 			page 249


 8167              	.LVL690:
3354:src/keys.c    **** 		}
 8168              		.loc 1 3354 4 is_stmt 0 view .LVU2510
 8169              	.LBE1053:
 8170              	.LBE1424:
 8171              	.LBE1487:
3613:src/keys.c    ****     case STATE_SST:
 8172              		.loc 1 3613 5 is_stmt 1 view .LVU2511
 8173              	.L1032:
3625:src/keys.c    **** 	delprog();
 8174              		.loc 1 3625 7 view .LVU2512
3625:src/keys.c    **** 	delprog();
 8175              		.loc 1 3625 11 is_stmt 0 view .LVU2513
 8176 04cc 98F81650 		ldrb	r5, [r8, #22]	@ zero_extendqisi2
3625:src/keys.c    **** 	delprog();
 8177              		.loc 1 3625 10 view .LVU2514
 8178 04d0 6B06     		lsls	r3, r5, #25
 8179 04d2 40F16781 		bpl	.L1125
3627:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8180              		.loc 1 3627 12 is_stmt 1 view .LVU2515
3627:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8181              		.loc 1 3627 15 is_stmt 0 view .LVU2516
 8182 04d6 15F00805 		ands	r5, r5, #8
 8183 04da 40F0D080 		bne	.L1380
 8184              	.L1346:
 8185 04de 3368     		ldr	r3, [r6]
 8186              	.LBB1488:
3630:src/keys.c    ****       }
 8187              		.loc 1 3630 9 view .LVU2517
 8188 04e0 3024     		movs	r4, #48
 8189 04e2 E7E5     		b	.L797
 8190              	.LVL691:
 8191              	.L1020:
3630:src/keys.c    ****       }
 8192              		.loc 1 3630 9 view .LVU2518
 8193              	.LBE1488:
 8194              	.LBB1489:
 8195              	.LBB1425:
 8196              	.LBB1054:
3352:src/keys.c    **** 			print_tab(0);
 8197              		.loc 1 3352 3 is_stmt 1 view .LVU2519
3352:src/keys.c    **** 			print_tab(0);
 8198              		.loc 1 3352 6 is_stmt 0 view .LVU2520
 8199 04e4 1407     		lsls	r4, r2, #28
 8200 04e6 09D4     		bmi	.L1031
3352:src/keys.c    **** 			print_tab(0);
 8201              		.loc 1 3352 26 view .LVU2521
 8202 04e8 6720     		movs	r0, #103
 8203              	.LVL692:
3352:src/keys.c    **** 			print_tab(0);
 8204              		.loc 1 3352 26 view .LVU2522
 8205 04ea FFF7FEFF 		bl	get_user_flag
 8206              	.LVL693:
3352:src/keys.c    **** 			print_tab(0);
 8207              		.loc 1 3352 23 view .LVU2523
 8208 04ee 28B1     		cbz	r0, .L1031
3353:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
ARM GAS  /tmp/ccvq0xdJ.s 			page 250


 8209              		.loc 1 3353 4 is_stmt 1 view .LVU2524
 8210 04f0 5046     		mov	r0, r10
 8211 04f2 FFF7FEFF 		bl	print_tab
 8212              	.LVL694:
3354:src/keys.c    **** 		}
 8213              		.loc 1 3354 4 view .LVU2525
 8214 04f6 C020     		movs	r0, #192
 8215 04f8 FFF7FEFF 		bl	print_alpha
 8216              	.LVL695:
3354:src/keys.c    **** 		}
 8217              		.loc 1 3354 4 is_stmt 0 view .LVU2526
 8218              	.LBE1054:
 8219              	.LBE1425:
 8220              	.LBE1489:
3613:src/keys.c    ****     case STATE_SST:
 8221              		.loc 1 3613 5 is_stmt 1 view .LVU2527
 8222              	.L1031:
3621:src/keys.c    ****       break;
 8223              		.loc 1 3621 7 view .LVU2528
 8224 04fc 4FF0FF30 		mov	r0, #-1
 8225 0500 FFF7FEFF 		bl	xeq_sst_bst
 8226              	.LVL696:
3622:src/keys.c    **** 
 8227              		.loc 1 3622 7 view .LVU2529
3408:src/keys.c    ****   //print_debug(60,c);
 8228              		.loc 1 3408 7 is_stmt 0 view .LVU2530
 8229 0504 0025     		movs	r5, #0
 8230 0506 3368     		ldr	r3, [r6]
3622:src/keys.c    **** 
 8231              		.loc 1 3622 7 view .LVU2531
 8232 0508 2F24     		movs	r4, #47
 8233 050a D3E5     		b	.L797
 8234              	.LVL697:
 8235              	.L1088:
3594:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
 8236              		.loc 1 3594 12 is_stmt 1 view .LVU2532
3595:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 8237              		.loc 1 3595 2 view .LVU2533
3595:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 8238              		.loc 1 3595 5 is_stmt 0 view .LVU2534
 8239 050c 35F47F43 		bics	r3, r5, #65280
 8240 0510 40D0     		beq	.L1381
 8241              	.LVL698:
 8242              	.L1094:
3603:src/keys.c    **** 	}
 8243              		.loc 1 3603 4 is_stmt 1 view .LVU2535
 8244 0512 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3603:src/keys.c    **** 	}
 8245              		.loc 1 3603 6 is_stmt 0 view .LVU2536
 8246 0516 2C46     		mov	r4, r5
 8247              	.LVL699:
 8248              	.L859:
3649:src/keys.c    **** 	NonProgrammable = 0;
 8249              		.loc 1 3649 7 is_stmt 1 view .LVU2537
3649:src/keys.c    **** 	NonProgrammable = 0;
 8250              		.loc 1 3649 10 is_stmt 0 view .LVU2538
 8251 0518 12F04002 		ands	r2, r2, #64
ARM GAS  /tmp/ccvq0xdJ.s 			page 251


 8252 051c 40F0DD81 		bne	.L1382
3649:src/keys.c    **** 	NonProgrammable = 0;
 8253              		.loc 1 3649 26 view .LVU2539
 8254 0520 384B     		ldr	r3, .L1443+36
 8255 0522 1968     		ldr	r1, [r3]
 8256 0524 0029     		cmp	r1, #0
 8257 0526 41F01382 		bne	.L1383
 8258              	.LVL700:
 8259              	.L1106:
3672:src/keys.c    ****       }
 8260              		.loc 1 3672 2 is_stmt 1 view .LVU2540
 8261 052a 2846     		mov	r0, r5
 8262 052c FFF7FEFF 		bl	stoprog
 8263              	.LVL701:
 8264 0530 7BE7     		b	.L1344
 8265              	.LVL702:
 8266              	.L1353:
3672:src/keys.c    ****       }
 8267              		.loc 1 3672 2 is_stmt 0 view .LVU2541
 8268 0532 2B4E     		ldr	r6, .L1443
 8269 0534 3368     		ldr	r3, [r6]
 8270 0536 10E6     		b	.L783
 8271              	.L1352:
3498:src/keys.c    ****       finish_RPN(); // RPN
 8272              		.loc 1 3498 7 is_stmt 1 view .LVU2542
 8273 0538 8D20     		movs	r0, #141
 8274 053a FFF7FEFF 		bl	clr_dot
 8275              	.LVL703:
3499:src/keys.c    ****     }
 8276              		.loc 1 3499 7 view .LVU2543
 8277 053e FFF7FEFF 		bl	finish_RPN
 8278              	.LVL704:
 8279 0542 80E5     		b	.L785
 8280              	.L796:
3561:src/keys.c    ****     }
 8281              		.loc 1 3561 7 view .LVU2544
 8282 0544 FFF7FEFF 		bl	finish_RPN
 8283              	.LVL705:
3408:src/keys.c    ****   //print_debug(60,c);
 8284              		.loc 1 3408 7 is_stmt 0 view .LVU2545
 8285 0548 0025     		movs	r5, #0
 8286 054a 3368     		ldr	r3, [r6]
 8287 054c B2E5     		b	.L797
 8288              	.L788:
3542:src/keys.c    **** #ifndef CONSOLE
 8289              		.loc 1 3542 7 is_stmt 1 view .LVU2546
 8290 054e 254B     		ldr	r3, .L1443+4
 8291 0550 8D20     		movs	r0, #141
 8292 0552 1968     		ldr	r1, [r3]
 8293 0554 FFF7FEFF 		bl	dot
 8294              	.LVL706:
3544:src/keys.c    **** 	if (!WasDataEntry) {
 8295              		.loc 1 3544 7 view .LVU2547
3544:src/keys.c    **** 	if (!WasDataEntry) {
 8296              		.loc 1 3544 11 is_stmt 0 view .LVU2548
 8297 0558 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3544:src/keys.c    **** 	if (!WasDataEntry) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 252


 8298              		.loc 1 3544 10 view .LVU2549
 8299 055c 9D06     		lsls	r5, r3, #26
 8300 055e 3FF5CFAD 		bmi	.L766
3545:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8301              		.loc 1 3545 2 is_stmt 1 view .LVU2550
3545:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8302              		.loc 1 3545 6 is_stmt 0 view .LVU2551
 8303 0562 294B     		ldr	r3, .L1443+40
3545:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8304              		.loc 1 3545 5 view .LVU2552
 8305 0564 1B68     		ldr	r3, [r3]
 8306 0566 002B     		cmp	r3, #0
 8307 0568 40F02E81 		bne	.L799
3547:src/keys.c    **** 	}
 8308              		.loc 1 3547 4 is_stmt 1 view .LVU2553
 8309              		.loc 1 3691 1 is_stmt 0 view .LVU2554
 8310 056c 03B0     		add	sp, sp, #12
 8311              		.cfi_remember_state
 8312              		.cfi_def_cfa_offset 36
 8313              		@ sp needed
 8314 056e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8315              		.cfi_restore 14
 8316              		.cfi_restore 11
 8317              		.cfi_restore 10
 8318              		.cfi_restore 9
 8319              		.cfi_restore 8
 8320              		.cfi_restore 7
 8321              		.cfi_restore 6
 8322              		.cfi_restore 5
 8323              		.cfi_restore 4
 8324              		.cfi_def_cfa_offset 0
 8325              	.LVL707:
3547:src/keys.c    **** 	}
 8326              		.loc 1 3547 4 view .LVU2555
 8327 0572 FFF7FEBF 		b	display
 8328              	.LVL708:
 8329              	.L1354:
 8330              		.cfi_restore_state
3530:src/keys.c    ****       else {
 8331              		.loc 1 3530 2 is_stmt 1 view .LVU2556
 8332 0576 FFF7FEFF 		bl	xeq_sst_bst
 8333              	.LVL709:
 8334 057a 194E     		ldr	r6, .L1443
 8335 057c 90E5     		b	.L790
 8336              	.L1356:
3461:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 8337              		.loc 1 3461 23 is_stmt 0 discriminator 1 view .LVU2557
 8338 057e FFF7FEFF 		bl	shift_down
 8339              	.LVL710:
3461:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 8340              		.loc 1 3461 20 discriminator 1 view .LVU2558
 8341 0582 0028     		cmp	r0, #0
 8342 0584 3FF4DFAD 		beq	.L772
3463:src/keys.c    **** 	}
 8343              		.loc 1 3463 4 is_stmt 1 view .LVU2559
3463:src/keys.c    **** 	}
 8344              		.loc 1 3463 18 is_stmt 0 view .LVU2560
ARM GAS  /tmp/ccvq0xdJ.s 			page 253


 8345 0588 1A4B     		ldr	r3, .L1443+20
 8346 058a 0022     		movs	r2, #0
 8347 058c 1A74     		strb	r2, [r3, #16]
 8348 058e DAE5     		b	.L772
 8349              	.L1355:
3463:src/keys.c    **** 	}
 8350              		.loc 1 3463 18 view .LVU2561
 8351 0590 134E     		ldr	r6, .L1443
 8352 0592 85E5     		b	.L790
 8353              	.L1381:
3596:src/keys.c    **** 	  State2.multi = 1;
 8354              		.loc 1 3596 4 is_stmt 1 view .LVU2562
 8355              	.LVL711:
 8356              	.LBB1490:
 8357              	.LBI1490:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8358              		.loc 1 552 13 view .LVU2563
 8359              	.LBB1491:
 553:src/keys.c    **** 		return;
 8360              		.loc 1 553 2 view .LVU2564
 553:src/keys.c    **** 		return;
 8361              		.loc 1 553 6 is_stmt 0 view .LVU2565
 8362 0594 FFF7FEFF 		bl	is_bad_cmdline
 8363              	.LVL712:
 553:src/keys.c    **** 		return;
 8364              		.loc 1 553 5 view .LVU2566
 8365 0598 18B9     		cbnz	r0, .L1095
 8366 059a C5F30320 		ubfx	r0, r5, #8, #4
 8367 059e FFF7FEFF 		bl	init_arg.part.0
 8368              	.LVL713:
 8369              	.L1095:
 553:src/keys.c    **** 		return;
 8370              		.loc 1 553 5 view .LVU2567
 8371              	.LBE1491:
 8372              	.LBE1490:
3597:src/keys.c    **** 	  State2.alphashift = 0;
 8373              		.loc 1 3597 4 is_stmt 1 view .LVU2568
3598:src/keys.c    **** 	  State2.rarg = 0;
 8374              		.loc 1 3598 4 view .LVU2569
3599:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8375              		.loc 1 3599 4 view .LVU2570
3597:src/keys.c    **** 	  State2.alphashift = 0;
 8376              		.loc 1 3597 17 is_stmt 0 view .LVU2571
 8377 05a2 D8F81420 		ldr	r2, [r8, #20]
 8378 05a6 3368     		ldr	r3, [r6]
 8379 05a8 22F44012 		bic	r2, r2, #3145728
 8380 05ac 22F40062 		bic	r2, r2, #2048
 8381 05b0 42F40062 		orr	r2, r2, #2048
 8382 05b4 C8F81420 		str	r2, [r8, #20]
3600:src/keys.c    **** 	}
 8383              		.loc 1 3600 4 is_stmt 1 view .LVU2572
 8384              	.LVL714:
3613:src/keys.c    ****     case STATE_SST:
 8385              		.loc 1 3613 5 view .LVU2573
3408:src/keys.c    ****   //print_debug(60,c);
 8386              		.loc 1 3408 7 is_stmt 0 view .LVU2574
 8387 05b8 0025     		movs	r5, #0
ARM GAS  /tmp/ccvq0xdJ.s 			page 254


3600:src/keys.c    **** 	}
 8388              		.loc 1 3600 6 view .LVU2575
 8389 05ba 3324     		movs	r4, #51
 8390 05bc 7AE5     		b	.L797
 8391              	.LVL715:
 8392              	.L775:
3451:src/keys.c    **** 	    /*
 8393              		.loc 1 3451 9 is_stmt 1 view .LVU2576
3451:src/keys.c    **** 	    /*
 8394              		.loc 1 3451 13 is_stmt 0 view .LVU2577
 8395 05be FFF7FEFF 		bl	keyticks
 8396              	.LVL716:
3451:src/keys.c    **** 	    /*
 8397              		.loc 1 3451 12 view .LVU2578
 8398 05c2 0C28     		cmp	r0, #12
 8399 05c4 7FF7BAAD 		ble	.L774
3455:src/keys.c    **** 	    message("NULL", CNULL);
 8400              		.loc 1 3455 6 is_stmt 1 view .LVU2579
3456:src/keys.c    **** 	    // Force display update on key-up
 8401              		.loc 1 3456 6 is_stmt 0 view .LVU2580
 8402 05c8 1048     		ldr	r0, .L1443+44
3455:src/keys.c    **** 	    message("NULL", CNULL);
 8403              		.loc 1 3455 13 view .LVU2581
 8404 05ca 2E60     		str	r6, [r5]
3456:src/keys.c    **** 	    // Force display update on key-up
 8405              		.loc 1 3456 6 is_stmt 1 view .LVU2582
 8406 05cc 3146     		mov	r1, r6
 8407 05ce FFF7FEFF 		bl	message
 8408              	.LVL717:
3458:src/keys.c    **** 	  }
 8409              		.loc 1 3458 6 view .LVU2583
3458:src/keys.c    **** 	  }
 8410              		.loc 1 3458 23 is_stmt 0 view .LVU2584
 8411 05d2 084B     		ldr	r3, .L1443+20
 8412 05d4 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8413 05d6 66F34512 		bfi	r2, r6, #5, #1
 8414 05da DA75     		strb	r2, [r3, #23]
 8415 05dc AEE5     		b	.L774
 8416              	.L1444:
 8417 05de 00BF     		.align	2
 8418              	.L1443:
 8419 05e0 00000000 		.word	Running
 8420 05e4 00000000 		.word	ShowRPN
 8421 05e8 00000000 		.word	OpCode
 8422 05ec 00000000 		.word	nd_opcode
 8423 05f0 00000000 		.word	main_ram
 8424 05f4 00000000 		.word	StateWhileOn
 8425 05f8 00000000 		.word	DispMsg
 8426 05fc 0C000000 		.word	.LC2
 8427 0600 00000000 		.word	OpCodeDisplayPending
 8428 0604 00000000 		.word	NonProgrammable
 8429 0608 00000000 		.word	WasDataEntry
 8430 060c 04000000 		.word	.LC1
 8431              	.LVL718:
 8432              	.L1003:
 8433              	.LBB1492:
 8434              	.LBB1426:
ARM GAS  /tmp/ccvq0xdJ.s 			page 255


 8435              	.LBB1055:
 8436              	.LBB1044:
 8437              	.LBB1037:
1890:src/keys.c    **** 		return STATE_UNFINISHED;
 8438              		.loc 1 1890 2 is_stmt 1 view .LVU2585
1890:src/keys.c    **** 		return STATE_UNFINISHED;
 8439              		.loc 1 1890 5 is_stmt 0 view .LVU2586
 8440 0610 0028     		cmp	r0, #0
 8441 0612 3FF4F6AE 		beq	.L1014
1892:src/keys.c    **** }
 8442              		.loc 1 1892 2 is_stmt 1 view .LVU2587
1892:src/keys.c    **** }
 8443              		.loc 1 1892 9 is_stmt 0 view .LVU2588
 8444 0616 40F48844 		orr	r4, r0, #17408
 8445              	.L1019:
 8446              	.LVL719:
1892:src/keys.c    **** }
 8447              		.loc 1 1892 9 view .LVU2589
 8448              	.LBE1037:
 8449              	.LBE1044:
3352:src/keys.c    **** 			print_tab(0);
 8450              		.loc 1 3352 3 is_stmt 1 view .LVU2590
3352:src/keys.c    **** 			print_tab(0);
 8451              		.loc 1 3352 6 is_stmt 0 view .LVU2591
 8452 061a 12F00805 		ands	r5, r2, #8
 8453 061e 41F08D81 		bne	.L1384
3352:src/keys.c    **** 			print_tab(0);
 8454              		.loc 1 3352 26 view .LVU2592
 8455 0622 6720     		movs	r0, #103
 8456              	.LVL720:
3352:src/keys.c    **** 			print_tab(0);
 8457              		.loc 1 3352 26 view .LVU2593
 8458 0624 FFF7FEFF 		bl	get_user_flag
 8459              	.LVL721:
3352:src/keys.c    **** 			print_tab(0);
 8460              		.loc 1 3352 23 view .LVU2594
 8461 0628 28B1     		cbz	r0, .L1096
3353:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8462              		.loc 1 3353 4 is_stmt 1 view .LVU2595
 8463 062a 2846     		mov	r0, r5
 8464 062c FFF7FEFF 		bl	print_tab
 8465              	.LVL722:
3354:src/keys.c    **** 		}
 8466              		.loc 1 3354 4 view .LVU2596
 8467 0630 C020     		movs	r0, #192
 8468 0632 FFF7FEFF 		bl	print_alpha
 8469              	.LVL723:
 8470              	.L1096:
3354:src/keys.c    **** 		}
 8471              		.loc 1 3354 4 is_stmt 0 view .LVU2597
 8472              	.LBE1055:
 8473              	.LBE1426:
 8474              	.LBE1492:
3649:src/keys.c    **** 	NonProgrammable = 0;
 8475              		.loc 1 3649 7 is_stmt 1 view .LVU2598
3649:src/keys.c    **** 	NonProgrammable = 0;
 8476              		.loc 1 3649 11 is_stmt 0 view .LVU2599
ARM GAS  /tmp/ccvq0xdJ.s 			page 256


 8477 0636 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3649:src/keys.c    **** 	NonProgrammable = 0;
 8478              		.loc 1 3649 10 view .LVU2600
 8479 063a 5A06     		lsls	r2, r3, #25
 8480 063c 41F1D983 		bpl	.L1104
 8481 0640 C44A     		ldr	r2, .L1445
 8482 0642 2546     		mov	r5, r4
 8483              	.L1105:
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8484              		.loc 1 3650 2 is_stmt 1 view .LVU2601
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8485              		.loc 1 3650 18 is_stmt 0 view .LVU2602
 8486 0644 0023     		movs	r3, #0
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8487              		.loc 1 3651 5 view .LVU2603
 8488 0646 142C     		cmp	r4, #20
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8489              		.loc 1 3650 18 view .LVU2604
 8490 0648 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8491              		.loc 1 3651 2 is_stmt 1 view .LVU2605
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8492              		.loc 1 3651 5 is_stmt 0 view .LVU2606
 8493 064a 00F2D880 		bhi	.L1103
3652:src/keys.c    **** 	    // Data entry key
 8494              		.loc 1 3652 4 is_stmt 1 view .LVU2607
3652:src/keys.c    **** 	    // Data entry key
 8495              		.loc 1 3652 7 is_stmt 0 view .LVU2608
 8496 064e 24B9     		cbnz	r4, .L1108
3652:src/keys.c    **** 	    // Data entry key
 8497              		.loc 1 3652 38 discriminator 1 view .LVU2609
 8498 0650 FFF7FEFF 		bl	is_bad_cmdline
 8499              	.LVL724:
3652:src/keys.c    **** 	    // Data entry key
 8500              		.loc 1 3652 34 discriminator 1 view .LVU2610
 8501 0654 0028     		cmp	r0, #0
 8502 0656 7FF4E8AE 		bne	.L1344
 8503              	.L1108:
3655:src/keys.c    **** #endif
 8504              		.loc 1 3655 6 is_stmt 1 view .LVU2611
3657:src/keys.c    **** 	    xeq(c);
 8505              		.loc 1 3657 37 is_stmt 0 view .LVU2612
 8506 065a 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3655:src/keys.c    **** #endif
 8507              		.loc 1 3655 19 view .LVU2613
 8508 065e 0123     		movs	r3, #1
3658:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8509              		.loc 1 3658 6 view .LVU2614
 8510 0660 2046     		mov	r0, r4
3655:src/keys.c    **** #endif
 8511              		.loc 1 3655 19 view .LVU2615
 8512 0662 C9F80030 		str	r3, [r9]
3657:src/keys.c    **** 	    xeq(c);
 8513              		.loc 1 3657 6 is_stmt 1 view .LVU2616
3657:src/keys.c    **** 	    xeq(c);
 8514              		.loc 1 3657 37 is_stmt 0 view .LVU2617
 8515 0666 B5FA85F5 		clz	r5, r5
ARM GAS  /tmp/ccvq0xdJ.s 			page 257


3658:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8516              		.loc 1 3658 6 view .LVU2618
 8517 066a FFF7FEFF 		bl	xeq
 8518              	.LVL725:
3659:src/keys.c    **** 	  }
 8519              		.loc 1 3659 38 view .LVU2619
 8520 066e 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8521 0672 3368     		ldr	r3, [r6]
3657:src/keys.c    **** 	    xeq(c);
 8522              		.loc 1 3657 37 view .LVU2620
 8523 0674 6D09     		lsrs	r5, r5, #5
 8524              	.LVL726:
3658:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8525              		.loc 1 3658 6 is_stmt 1 view .LVU2621
3659:src/keys.c    **** 	  }
 8526              		.loc 1 3659 6 view .LVU2622
3659:src/keys.c    **** 	  }
 8527              		.loc 1 3659 20 is_stmt 0 view .LVU2623
 8528 0676 0028     		cmp	r0, #0
 8529 0678 08BF     		it	eq
 8530 067a 0125     		moveq	r5, #1
 8531              	.LVL727:
3659:src/keys.c    **** 	  }
 8532              		.loc 1 3659 20 view .LVU2624
 8533 067c 1AE5     		b	.L797
 8534              	.LVL728:
 8535              	.L1380:
3659:src/keys.c    **** 	  }
 8536              		.loc 1 3659 20 view .LVU2625
 8537 067e DFF8F0B2 		ldr	fp, .L1445+28
 8538              	.L1100:
 8539              	.LBB1493:
3628:src/keys.c    **** 	if (p > Alpha)
 8540              		.loc 1 3628 2 is_stmt 1 view .LVU2626
3628:src/keys.c    **** 	if (p > Alpha)
 8541              		.loc 1 3628 22 is_stmt 0 view .LVU2627
 8542 0682 DBF80000 		ldr	r0, [fp]
3628:src/keys.c    **** 	if (p > Alpha)
 8543              		.loc 1 3628 12 view .LVU2628
 8544 0686 0021     		movs	r1, #0
 8545 0688 00F5F660 		add	r0, r0, #1968
 8546 068c FFF7FEFF 		bl	find_char
 8547              	.LVL729:
3629:src/keys.c    **** 	  *--p = '\0';
 8548              		.loc 1 3629 8 view .LVU2629
 8549 0690 DBF80030 		ldr	r3, [fp]
 8550              	.LVL730:
3629:src/keys.c    **** 	  *--p = '\0';
 8551              		.loc 1 3629 2 is_stmt 1 view .LVU2630
3629:src/keys.c    **** 	  *--p = '\0';
 8552              		.loc 1 3629 8 is_stmt 0 view .LVU2631
 8553 0694 03F5F663 		add	r3, r3, #1968
3629:src/keys.c    **** 	  *--p = '\0';
 8554              		.loc 1 3629 5 view .LVU2632
 8555 0698 9842     		cmp	r0, r3
 8556 069a 00F2A181 		bhi	.L1101
 8557 069e 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccvq0xdJ.s 			page 258


 8558              	.LBE1493:
3408:src/keys.c    ****   //print_debug(60,c);
 8559              		.loc 1 3408 7 view .LVU2633
 8560 06a0 0025     		movs	r5, #0
 8561              	.LBB1494:
3629:src/keys.c    **** 	  *--p = '\0';
 8562              		.loc 1 3629 5 view .LVU2634
 8563 06a2 3024     		movs	r4, #48
 8564 06a4 06E5     		b	.L797
 8565              	.LVL731:
 8566              	.L1371:
3629:src/keys.c    **** 	  *--p = '\0';
 8567              		.loc 1 3629 5 view .LVU2635
 8568              	.LBE1494:
 8569              	.LBB1495:
 8570              	.LBB1427:
 8571              	.LBB1056:
 8572              	.LBB859:
 278:src/keys.c    **** 				case K53:
 8573              		.loc 1 278 4 is_stmt 1 view .LVU2636
 8574 06a6 221F     		subs	r2, r4, #4
 8575 06a8 1D2A     		cmp	r2, #29
 8576 06aa 3FF6CDAD 		bhi	.L921
 8577 06ae 0FF2080E 		adr	lr, .L904
 8578 06b2 5EF822F0 		ldr	pc, [lr, r2, lsl #2]
 8579 06b6 00BF     		.p2align 2
 8580              	.L904:
 8581 06b8 47070000 		.word	.L907+1
 8582 06bc 65070000 		.word	.L906+1
 8583 06c0 49020000 		.word	.L921+1
 8584 06c4 49020000 		.word	.L921+1
 8585 06c8 49020000 		.word	.L921+1
 8586 06cc 49020000 		.word	.L921+1
 8587 06d0 49020000 		.word	.L921+1
 8588 06d4 49020000 		.word	.L921+1
 8589 06d8 4D070000 		.word	.L905+1
 8590 06dc 49020000 		.word	.L921+1
 8591 06e0 49020000 		.word	.L921+1
 8592 06e4 49020000 		.word	.L921+1
 8593 06e8 49020000 		.word	.L921+1
 8594 06ec 49020000 		.word	.L921+1
 8595 06f0 49020000 		.word	.L921+1
 8596 06f4 49020000 		.word	.L921+1
 8597 06f8 49020000 		.word	.L921+1
 8598 06fc 49020000 		.word	.L921+1
 8599 0700 49020000 		.word	.L921+1
 8600 0704 49020000 		.word	.L921+1
 8601 0708 49020000 		.word	.L921+1
 8602 070c 49020000 		.word	.L921+1
 8603 0710 49020000 		.word	.L921+1
 8604 0714 49020000 		.word	.L921+1
 8605 0718 49020000 		.word	.L921+1
 8606 071c 49020000 		.word	.L921+1
 8607 0720 49020000 		.word	.L921+1
 8608 0724 49020000 		.word	.L921+1
 8609 0728 49020000 		.word	.L921+1
 8610 072c 31070000 		.word	.L1141+1
ARM GAS  /tmp/ccvq0xdJ.s 			page 259


 8611              		.p2align 1
 8612              	.L1141:
 280:src/keys.c    **** 				case K04:
 8613              		.loc 1 280 13 is_stmt 0 view .LVU2637
 8614 0730 4FF0020A 		mov	r10, #2
 8615              	.LVL732:
 8616              	.L903:
 280:src/keys.c    **** 				case K04:
 8617              		.loc 1 280 13 view .LVU2638
 8618              	.LBE859:
 8619              	.LBE1056:
3325:src/keys.c    **** 			return STATE_UNFINISHED;
 8620              		.loc 1 3325 3 is_stmt 1 view .LVU2639
3325:src/keys.c    **** 			return STATE_UNFINISHED;
 8621              		.loc 1 3325 7 is_stmt 0 view .LVU2640
 8622 0734 FFF7FEFF 		bl	is_bad_cmdline
 8623              	.LVL733:
3325:src/keys.c    **** 			return STATE_UNFINISHED;
 8624              		.loc 1 3325 6 view .LVU2641
 8625 0738 0446     		mov	r4, r0
 8626 073a 0028     		cmp	r0, #0
 8627 073c 00F0A484 		beq	.L926
 8628              	.L1347:
3325:src/keys.c    **** 			return STATE_UNFINISHED;
 8629              		.loc 1 3325 6 view .LVU2642
 8630 0740 3368     		ldr	r3, [r6]
3329:src/keys.c    **** 	}
 8631              		.loc 1 3329 10 view .LVU2643
 8632 0742 3324     		movs	r4, #51
 8633 0744 B6E4     		b	.L797
 8634              	.LVL734:
 8635              	.L907:
 8636              	.LBB1057:
 8637              	.LBB860:
 277:src/keys.c    **** 			switch (c) {
 8638              		.loc 1 277 6 view .LVU2644
 8639 0746 4FF0120A 		mov	r10, #18
 8640 074a F3E7     		b	.L903
 8641              	.L905:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 8642              		.loc 1 286 6 is_stmt 1 view .LVU2645
 286:src/keys.c    **** 						finish_cpx_entry(1);
 8643              		.loc 1 286 9 is_stmt 0 view .LVU2646
 8644 074c 1CF0080F 		tst	ip, #8
 8645 0750 41F06080 		bne	.L908
 286:src/keys.c    **** 						finish_cpx_entry(1);
 8646              		.loc 1 286 22 view .LVU2647
 8647 0754 90F8EB37 		ldrb	r3, [r0, #2027]	@ zero_extendqisi2
 8648              	.LVL735:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 8649              		.loc 1 286 22 view .LVU2648
 8650 0758 1B07     		lsls	r3, r3, #28
 8651 075a 01F15B80 		bmi	.L908
 289:src/keys.c    **** 				default:
 8652              		.loc 1 289 13 view .LVU2649
 8653 075e 4FF0110A 		mov	r10, #17
 8654 0762 E7E7     		b	.L903
ARM GAS  /tmp/ccvq0xdJ.s 			page 260


 8655              	.LVL736:
 8656              	.L906:
 284:src/keys.c    **** 				case K20:
 8657              		.loc 1 284 6 is_stmt 1 view .LVU2650
 284:src/keys.c    **** 				case K20:
 8658              		.loc 1 284 6 is_stmt 0 view .LVU2651
 8659              	.LBE860:
 8660              	.LBE1057:
3324:src/keys.c    **** 		if (is_bad_cmdline())
 8661              		.loc 1 3324 2 is_stmt 1 view .LVU2652
 8662              	.LBB1058:
 8663              	.LBB861:
 284:src/keys.c    **** 				case K20:
 8664              		.loc 1 284 13 is_stmt 0 view .LVU2653
 8665 0764 4FF0090A 		mov	r10, #9
 8666 0768 E4E7     		b	.L903
 8667              	.LVL737:
 8668              	.L1154:
 284:src/keys.c    **** 				case K20:
 8669              		.loc 1 284 13 view .LVU2654
 8670              	.LBE861:
 8671              	.LBE1058:
 8672              	.LBB1059:
 8673              	.LBB1060:
3000:src/keys.c    **** 
 8674              		.loc 1 3000 6 view .LVU2655
 8675 076a 3324     		movs	r4, #51
 8676              	.LVL738:
 8677              	.L956:
3033:src/keys.c    **** 		break;
 8678              		.loc 1 3033 3 is_stmt 1 view .LVU2656
 8679 076c 5846     		mov	r0, fp
 8680 076e FFF7FEFF 		bl	set_pc
 8681              	.LVL739:
3034:src/keys.c    **** 
 8682              		.loc 1 3034 3 view .LVU2657
 8683              	.L968:
3087:src/keys.c    **** 	State2.labellist = 0;
 8684              		.loc 1 3087 2 view .LVU2658
3088:src/keys.c    **** 	return check_confirm(op);
 8685              		.loc 1 3088 19 is_stmt 0 view .LVU2659
 8686 0772 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3087:src/keys.c    **** 	State2.labellist = 0;
 8687              		.loc 1 3087 16 view .LVU2660
 8688 0776 0022     		movs	r2, #0
 8689              	.LBB1061:
 8690              	.LBB1062:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8691              		.loc 1 715 5 view .LVU2661
 8692 0778 C4F30723 		ubfx	r3, r4, #8, #8
 8693              	.LBE1062:
 8694              	.LBE1061:
3088:src/keys.c    **** 	return check_confirm(op);
 8695              		.loc 1 3088 19 view .LVU2662
 8696 077c 62F38201 		bfi	r1, r2, #2, #1
 8697              	.LBB1067:
 8698              	.LBB1063:
ARM GAS  /tmp/ccvq0xdJ.s 			page 261


 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8699              		.loc 1 715 5 view .LVU2663
 8700 0780 012B     		cmp	r3, #1
 8701              	.LBE1063:
 8702              	.LBE1067:
3088:src/keys.c    **** 	return check_confirm(op);
 8703              		.loc 1 3088 19 view .LVU2664
 8704 0782 88F81710 		strb	r1, [r8, #23]
3087:src/keys.c    **** 	State2.labellist = 0;
 8705              		.loc 1 3087 16 view .LVU2665
 8706 0786 A8F80820 		strh	r2, [r8, #8]	@ movhi
3088:src/keys.c    **** 	return check_confirm(op);
 8707              		.loc 1 3088 2 is_stmt 1 view .LVU2666
3089:src/keys.c    **** }
 8708              		.loc 1 3089 2 view .LVU2667
 8709              	.LVL740:
 8710              	.LBB1068:
 8711              	.LBI1061:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8712              		.loc 1 714 12 view .LVU2668
 8713              	.LBB1064:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8714              		.loc 1 715 2 view .LVU2669
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8715              		.loc 1 715 5 is_stmt 0 view .LVU2670
 8716 078a 7FF40DAE 		bne	.L832
 8717              	.LVL741:
 8718              	.L1339:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8719              		.loc 1 715 5 view .LVU2671
 8720              	.LBE1064:
 8721              	.LBE1068:
 8722              	.LBE1060:
 8723              	.LBE1059:
 8724              	.LBE1427:
 8725              	.LBE1495:
 8726              	.LBB1496:
 8727              	.LBB1482:
 8728 078e 2046     		mov	r0, r4
 8729 0790 FFF7FEFF 		bl	check_confirm.part.0
 8730              	.LVL742:
 8731 0794 0446     		mov	r4, r0
 8732 0796 07E6     		b	.L832
 8733              	.LVL743:
 8734              	.L1017:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8735              		.loc 1 715 5 view .LVU2672
 8736              	.LBE1482:
 8737              	.LBE1496:
 8738              	.LBB1497:
 8739              	.LBB1428:
 8740              	.LBB1095:
3352:src/keys.c    **** 			print_tab(0);
 8741              		.loc 1 3352 3 is_stmt 1 view .LVU2673
3352:src/keys.c    **** 			print_tab(0);
 8742              		.loc 1 3352 6 is_stmt 0 view .LVU2674
 8743 0798 1107     		lsls	r1, r2, #28
ARM GAS  /tmp/ccvq0xdJ.s 			page 262


 8744 079a 7FF58DAE 		bpl	.L1385
 8745              	.LVL744:
3352:src/keys.c    **** 			print_tab(0);
 8746              		.loc 1 3352 6 view .LVU2675
 8747              	.LBE1095:
 8748              	.LBE1428:
 8749              	.LBE1497:
3625:src/keys.c    **** 	delprog();
 8750              		.loc 1 3625 7 is_stmt 1 view .LVU2676
3625:src/keys.c    **** 	delprog();
 8751              		.loc 1 3625 10 is_stmt 0 view .LVU2677
 8752 079e 5306     		lsls	r3, r2, #25
 8753 07a0 3FF56FAF 		bmi	.L1100
 8754              	.LVL745:
 8755              	.L1125:
3626:src/keys.c    ****       else if (State2.alphas) {
 8756              		.loc 1 3626 2 is_stmt 1 view .LVU2678
 8757 07a4 FFF7FEFF 		bl	delprog
 8758              	.LVL746:
3408:src/keys.c    ****   //print_debug(60,c);
 8759              		.loc 1 3408 7 is_stmt 0 view .LVU2679
 8760 07a8 0025     		movs	r5, #0
 8761 07aa 3368     		ldr	r3, [r6]
 8762 07ac 3024     		movs	r4, #48
 8763 07ae 81E4     		b	.L797
 8764              	.LVL747:
 8765              	.L776:
3445:src/keys.c    **** 	      DispMsg = TraceBuffer;
 8766              		.loc 1 3445 8 is_stmt 1 view .LVU2680
 8767 07b0 694E     		ldr	r6, .L1445+4
 8768 07b2 3146     		mov	r1, r6
 8769 07b4 FFF7FEFF 		bl	prt
 8770              	.LVL748:
 8771 07b8 2A46     		mov	r2, r5
 8772 07ba 0146     		mov	r1, r0
 8773 07bc 3046     		mov	r0, r6
 8774 07be FFF7FEFF 		bl	scopy_char
 8775              	.LVL749:
3446:src/keys.c    **** 	    }
 8776              		.loc 1 3446 8 view .LVU2681
3446:src/keys.c    **** 	    }
 8777              		.loc 1 3446 16 is_stmt 0 view .LVU2682
 8778 07c2 664B     		ldr	r3, .L1445+8
 8779 07c4 1E60     		str	r6, [r3]
 8780 07c6 B4E4     		b	.L777
 8781              	.L799:
3550:src/keys.c    **** 	}
 8782              		.loc 1 3550 4 is_stmt 1 view .LVU2683
 8783              		.loc 1 3691 1 is_stmt 0 view .LVU2684
 8784 07c8 03B0     		add	sp, sp, #12
 8785              		.cfi_remember_state
 8786              		.cfi_def_cfa_offset 36
 8787              		@ sp needed
 8788 07ca BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8789              		.cfi_restore 14
 8790              		.cfi_restore 11
 8791              		.cfi_restore 10
ARM GAS  /tmp/ccvq0xdJ.s 			page 263


 8792              		.cfi_restore 9
 8793              		.cfi_restore 8
 8794              		.cfi_restore 7
 8795              		.cfi_restore 6
 8796              		.cfi_restore 5
 8797              		.cfi_restore 4
 8798              		.cfi_def_cfa_offset 0
 8799              	.LVL750:
3550:src/keys.c    **** 	}
 8800              		.loc 1 3550 4 view .LVU2685
 8801 07ce FFF7FEBF 		b	finish_RPN
 8802              	.LVL751:
 8803              	.L1057:
 8804              		.cfi_restore_state
 8805              	.LBB1498:
 8806              	.LBB1429:
 8807              	.LBB1096:
 8808              	.LBB963:
1359:src/keys.c    ****        if (shift == SHIFT_F ) {
 8809              		.loc 1 1359 8 is_stmt 1 view .LVU2686
 8810              	.LBB878:
 8811              	.LBI878:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 8812              		.loc 1 114 13 view .LVU2687
 8813              	.LBE878:
 8814              	.LBE963:
 8815              	.LBE1096:
 8816              	.LBE1429:
 8817              	.LBE1498:
 115:src/keys.c    **** }
 8818              		.loc 1 115 2 view .LVU2688
 8819              	.LBB1499:
 8820              	.LBB1430:
 8821              	.LBB1097:
 8822              	.LBB964:
 8823              	.LBB885:
 8824              	.LBB879:
 8825              	.LBI879:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 8826              		.loc 1 104 20 view .LVU2689
 8827              	.LBB880:
 105:src/keys.c    **** 	State2.shifts = shift;
 8828              		.loc 1 105 2 view .LVU2690
 8829              	.LBB881:
 8830              	.LBI881:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 8831              		.loc 1 96 13 view .LVU2691
 8832              	.LBB882:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8833              		.loc 1 97 2 view .LVU2692
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8834              		.loc 1 97 18 is_stmt 0 view .LVU2693
 8835 07d2 FFF7FEFF 		bl	shift_down
 8836              	.LVL752:
  98:src/keys.c    **** }
 8837              		.loc 1 98 2 is_stmt 1 view .LVU2694
 8838              	.LBE882:
ARM GAS  /tmp/ccvq0xdJ.s 			page 264


 8839              	.LBE881:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8840              		.loc 1 106 2 view .LVU2695
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8841              		.loc 1 106 16 is_stmt 0 view .LVU2696
 8842 07d6 0023     		movs	r3, #0
 8843              	.LBE880:
 8844              	.LBE879:
 8845              	.LBE885:
1360:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 8846              		.loc 1 1360 11 view .LVU2697
 8847 07d8 BAF1010F 		cmp	r10, #1
 8848              	.LBB886:
 8849              	.LBB884:
 8850              	.LBB883:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8851              		.loc 1 106 16 view .LVU2698
 8852 07dc 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 8853              		.loc 1 108 2 is_stmt 1 view .LVU2699
 8854              	.LVL753:
 108:src/keys.c    **** }
 8855              		.loc 1 108 2 is_stmt 0 view .LVU2700
 8856              	.LBE883:
 8857              	.LBE884:
 8858              	.LBE886:
1360:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 8859              		.loc 1 1360 8 is_stmt 1 view .LVU2701
1360:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 8860              		.loc 1 1360 11 is_stmt 0 view .LVU2702
 8861 07e0 01F0A682 		beq	.L1065
1363:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 8862              		.loc 1 1363 13 is_stmt 1 view .LVU2703
1363:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 8863              		.loc 1 1363 16 is_stmt 0 view .LVU2704
 8864 07e4 BAF1030F 		cmp	r10, #3
 8865 07e8 41F00082 		bne	.L1063
 8866              	.LVL754:
1363:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 8867              		.loc 1 1363 16 view .LVU2705
 8868              	.LBE964:
 8869              	.LBE1097:
 8870              	.LBE1430:
 8871              	.LBE1499:
3649:src/keys.c    **** 	NonProgrammable = 0;
 8872              		.loc 1 3649 7 is_stmt 1 view .LVU2706
3649:src/keys.c    **** 	NonProgrammable = 0;
 8873              		.loc 1 3649 11 is_stmt 0 view .LVU2707
 8874 07ec 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3649:src/keys.c    **** 	NonProgrammable = 0;
 8875              		.loc 1 3649 10 view .LVU2708
 8876 07f0 5106     		lsls	r1, r2, #25
 8877 07f2 41F14882 		bpl	.L1165
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8878              		.loc 1 3650 2 is_stmt 1 view .LVU2709
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8879              		.loc 1 3650 18 is_stmt 0 view .LVU2710
ARM GAS  /tmp/ccvq0xdJ.s 			page 265


 8880 07f6 574A     		ldr	r2, .L1445
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8881              		.loc 1 3651 32 view .LVU2711
 8882 07f8 40F2CD15 		movw	r5, #461
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8883              		.loc 1 3650 18 view .LVU2712
 8884 07fc 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8885              		.loc 1 3651 2 is_stmt 1 view .LVU2713
 8886              	.LVL755:
 8887              	.L1103:
3665:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8888              		.loc 1 3665 4 view .LVU2714
3665:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8889              		.loc 1 3665 11 is_stmt 0 view .LVU2715
 8890 07fe 584A     		ldr	r2, .L1445+12
3666:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8891              		.loc 1 3666 25 view .LVU2716
 8892 0800 584B     		ldr	r3, .L1445+16
3665:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8893              		.loc 1 3665 11 view .LVU2717
 8894 0802 1560     		str	r5, [r2]
3666:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8895              		.loc 1 3666 4 is_stmt 1 view .LVU2718
3666:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8896              		.loc 1 3666 25 is_stmt 0 view .LVU2719
 8897 0804 0122     		movs	r2, #1
 8898 0806 584E     		ldr	r6, .L1445+20
 8899 0808 1A60     		str	r2, [r3]
3667:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8900              		.loc 1 3667 4 is_stmt 1 view .LVU2720
 8901 080a FFF7FEFF 		bl	finish_RPN
 8902              	.LVL756:
3668:src/keys.c    **** 	}
 8903              		.loc 1 3668 4 view .LVU2721
 8904 080e 75E4     		b	.L1109
 8905              	.LVL757:
 8906              	.L1361:
 8907              	.LBB1500:
 8908              	.LBB1431:
3278:src/keys.c    **** 
 8909              		.loc 1 3278 3 view .LVU2722
 8910              	.LBB1098:
 8911              	.LBI1098:
2880:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8912              		.loc 1 2880 12 view .LVU2723
 8913              	.LBB1099:
2882:src/keys.c    **** #ifdef DM42
 8914              		.loc 1 2882 2 view .LVU2724
 8915 0810 E3B2     		uxtb	r3, r4
 8916 0812 0E3B     		subs	r3, r3, #14
 8917 0814 192B     		cmp	r3, #25
 8918 0816 93D8     		bhi	.L1347
 8919 0818 01A2     		adr	r2, .L824
 8920 081a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8921 081e 00BF     		.p2align 2
 8922              	.L824:
ARM GAS  /tmp/ccvq0xdJ.s 			page 266


 8923 0820 8D080000 		.word	.L825+1
 8924 0824 41070000 		.word	.L1347+1
 8925 0828 8D080000 		.word	.L825+1
 8926 082c 41070000 		.word	.L1347+1
 8927 0830 41070000 		.word	.L1347+1
 8928 0834 41070000 		.word	.L1347+1
 8929 0838 41070000 		.word	.L1347+1
 8930 083c 41070000 		.word	.L1347+1
 8931 0840 41070000 		.word	.L1347+1
 8932 0844 41070000 		.word	.L1347+1
 8933 0848 41070000 		.word	.L1347+1
 8934 084c 41070000 		.word	.L1347+1
 8935 0850 41070000 		.word	.L1347+1
 8936 0854 41070000 		.word	.L1347+1
 8937 0858 41070000 		.word	.L1347+1
 8938 085c 41070000 		.word	.L1347+1
 8939 0860 41070000 		.word	.L1347+1
 8940 0864 41070000 		.word	.L1347+1
 8941 0868 A5080000 		.word	.L823+1
 8942 086c 41070000 		.word	.L1347+1
 8943 0870 41070000 		.word	.L1347+1
 8944 0874 41070000 		.word	.L1347+1
 8945 0878 41070000 		.word	.L1347+1
 8946 087c 41070000 		.word	.L1347+1
 8947 0880 41070000 		.word	.L1347+1
 8948 0884 A5080000 		.word	.L823+1
 8949              		.p2align 1
 8950              	.L826:
2891:src/keys.c    **** 	  }
 8951              		.loc 1 2891 26 view .LVU2725
 8952 0888 FFF7FEFF 		bl	clpall
 8953              	.LVL758:
2891:src/keys.c    **** 	  }
 8954              		.loc 1 2891 36 view .LVU2726
 8955              	.L825:
2900:src/keys.c    **** 	  State2.digval = 0;
 8956              		.loc 1 2900 4 view .LVU2727
2900:src/keys.c    **** 	  State2.digval = 0;
 8957              		.loc 1 2900 19 is_stmt 0 view .LVU2728
 8958 088c 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8959 0890 3368     		ldr	r3, [r6]
 8960 0892 6FF30202 		bfc	r2, #0, #3
2901:src/keys.c    **** 	  break;
 8961              		.loc 1 2901 18 view .LVU2729
 8962 0896 0021     		movs	r1, #0
2900:src/keys.c    **** 	  State2.digval = 0;
 8963              		.loc 1 2900 19 view .LVU2730
 8964 0898 88F81420 		strb	r2, [r8, #20]
2901:src/keys.c    **** 	  break;
 8965              		.loc 1 2901 4 is_stmt 1 view .LVU2731
2901:src/keys.c    **** 	  break;
 8966              		.loc 1 2901 18 is_stmt 0 view .LVU2732
 8967 089c A8F80810 		strh	r1, [r8, #8]	@ movhi
2902:src/keys.c    **** 	default:			// No state change
 8968              		.loc 1 2902 4 is_stmt 1 view .LVU2733
 8969              	.LBE1099:
 8970              	.LBE1098:
ARM GAS  /tmp/ccvq0xdJ.s 			page 267


3278:src/keys.c    **** 
 8971              		.loc 1 3278 10 is_stmt 0 view .LVU2734
 8972 08a0 3324     		movs	r4, #51
 8973              	.LVL759:
 8974              	.LBB1101:
 8975              	.LBB1100:
2902:src/keys.c    **** 	default:			// No state change
 8976              		.loc 1 2902 4 view .LVU2735
 8977 08a2 07E4     		b	.L797
 8978              	.LVL760:
 8979              	.L823:
2887:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8980              		.loc 1 2887 4 is_stmt 1 view .LVU2736
2887:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8981              		.loc 1 2887 18 is_stmt 0 view .LVU2737
 8982 08a4 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8983 08a8 03F00703 		and	r3, r3, #7
 8984 08ac 013B     		subs	r3, r3, #1
 8985 08ae 032B     		cmp	r3, #3
 8986 08b0 ECD8     		bhi	.L825
 8987 08b2 01A2     		adr	r2, .L827
 8988 08b4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8989              		.p2align 2
 8990              	.L827:
 8991 08b8 D5080000 		.word	.L830+1
 8992 08bc CF080000 		.word	.L829+1
 8993 08c0 C9080000 		.word	.L828+1
 8994 08c4 89080000 		.word	.L826+1
 8995              		.p2align 1
 8996              	.L828:
2890:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8997              		.loc 1 2890 26 is_stmt 1 view .LVU2738
 8998 08c8 FFF7FEFF 		bl	clrprog
 8999              	.LVL761:
2890:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 9000              		.loc 1 2890 37 view .LVU2739
2890:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 9001              		.loc 1 2890 4 is_stmt 0 view .LVU2740
 9002 08cc DEE7     		b	.L825
 9003              	.L829:
2889:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 9004              		.loc 1 2889 25 is_stmt 1 view .LVU2741
 9005 08ce FFF7FEFF 		bl	reset
 9006              	.LVL762:
2889:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 9007              		.loc 1 2889 34 view .LVU2742
2889:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 9008              		.loc 1 2889 4 is_stmt 0 view .LVU2743
 9009 08d2 DBE7     		b	.L825
 9010              	.L830:
2888:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 9011              		.loc 1 2888 25 is_stmt 1 view .LVU2744
 9012 08d4 FFF7FEFF 		bl	clrall
 9013              	.LVL763:
2888:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 9014              		.loc 1 2888 35 view .LVU2745
2888:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
ARM GAS  /tmp/ccvq0xdJ.s 			page 268


 9015              		.loc 1 2888 4 is_stmt 0 view .LVU2746
 9016 08d8 D8E7     		b	.L825
 9017              	.LVL764:
 9018              	.L1382:
2888:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 9019              		.loc 1 2888 4 view .LVU2747
 9020              	.LBE1100:
 9021              	.LBE1101:
 9022              	.LBE1431:
 9023              	.LBE1500:
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 9024              		.loc 1 3650 2 is_stmt 1 view .LVU2748
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 9025              		.loc 1 3650 18 is_stmt 0 view .LVU2749
 9026 08da 1E4B     		ldr	r3, .L1445
 9027 08dc 0022     		movs	r2, #0
 9028 08de 1A60     		str	r2, [r3]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 9029              		.loc 1 3651 2 is_stmt 1 view .LVU2750
 9030 08e0 8DE7     		b	.L1103
 9031              	.LVL765:
 9032              	.L1091:
 9033              	.LBB1501:
3586:src/keys.c    **** 	  c = nd_opcode;
 9034              		.loc 1 3586 7 view .LVU2751
3586:src/keys.c    **** 	  c = nd_opcode;
 9035              		.loc 1 3586 10 is_stmt 0 view .LVU2752
 9036 08e2 15F0FF0F 		tst	r5, #255
 9037 08e6 7FF414AE 		bne	.L1094
3590:src/keys.c    **** 	  c = STATE_UNFINISHED;
 9038              		.loc 1 3590 4 is_stmt 1 view .LVU2753
 9039              	.LVL766:
 9040              	.LBB1476:
 9041              	.LBI1476:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 9042              		.loc 1 552 13 view .LVU2754
 9043              	.LBB1477:
 553:src/keys.c    **** 		return;
 9044              		.loc 1 553 2 view .LVU2755
 553:src/keys.c    **** 		return;
 9045              		.loc 1 553 6 is_stmt 0 view .LVU2756
 9046 08ea FFF7FEFF 		bl	is_bad_cmdline
 9047              	.LVL767:
 553:src/keys.c    **** 		return;
 9048              		.loc 1 553 5 view .LVU2757
 9049 08ee 0546     		mov	r5, r0
 9050 08f0 0028     		cmp	r0, #0
 9051 08f2 40F07782 		bne	.L1386
 9052 08f6 2046     		mov	r0, r4
 9053 08f8 FFF7FEFF 		bl	init_arg.part.0
 9054              	.LVL768:
 9055              	.LBE1477:
 9056              	.LBE1476:
3591:src/keys.c    **** 	}
 9057              		.loc 1 3591 6 view .LVU2758
 9058 08fc 3324     		movs	r4, #51
 9059              	.LVL769:
ARM GAS  /tmp/ccvq0xdJ.s 			page 269


3591:src/keys.c    **** 	}
 9060              		.loc 1 3591 6 view .LVU2759
 9061 08fe 3368     		ldr	r3, [r6]
 9062 0900 FFF7D8BB 		b	.L797
 9063              	.LVL770:
 9064              	.L1359:
3591:src/keys.c    **** 	}
 9065              		.loc 1 3591 6 view .LVU2760
 9066              	.LBE1501:
 9067              	.LBB1502:
 9068              	.LBB1432:
3245:src/keys.c    **** #else
 9069              		.loc 1 3245 47 view .LVU2761
 9070 0904 DFF86C80 		ldr	r8, .L1445+32
 9071 0908 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
3245:src/keys.c    **** #else
 9072              		.loc 1 3245 36 view .LVU2762
 9073 090c 43EA0201 		orr	r1, r3, r2
 9074 0910 11F0FF0F 		tst	r1, #255
 9075 0914 7FF447AC 		bne	.L809
3245:src/keys.c    **** #else
 9076              		.loc 1 3245 76 view .LVU2763
 9077 0918 1449     		ldr	r1, .L1445+24
 9078 091a D8F81420 		ldr	r2, [r8, #20]
 9079 091e 1142     		tst	r1, r2
 9080 0920 7FF44CAC 		bne	.L820
3251:src/keys.c    **** 	stack_restore();
 9081              		.loc 1 3251 7 is_stmt 1 view .LVU2764
3251:src/keys.c    **** 	stack_restore();
 9082              		.loc 1 3251 11 is_stmt 0 view .LVU2765
 9083 0924 DFF848B0 		ldr	fp, .L1445+28
 9084 0928 DBF80030 		ldr	r3, [fp]
 9085              	.LVL771:
3251:src/keys.c    **** 	stack_restore();
 9086              		.loc 1 3251 11 view .LVU2766
 9087 092c 93F8E417 		ldrb	r1, [r3, #2020]	@ zero_extendqisi2
3251:src/keys.c    **** 	stack_restore();
 9088              		.loc 1 3251 10 view .LVU2767
 9089 0930 4C07     		lsls	r4, r1, #29
 9090              	.LVL772:
3251:src/keys.c    **** 	stack_restore();
 9091              		.loc 1 3251 10 view .LVU2768
 9092 0932 04D5     		bpl	.L811
3251:src/keys.c    **** 	stack_restore();
 9093              		.loc 1 3251 11 view .LVU2769
 9094 0934 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 9095 0938 5007     		lsls	r0, r2, #29
 9096 093a 00F17C86 		bmi	.L1387
 9097              	.L811:
3257:src/keys.c    ****       return STATE_UNFINISHED;
 9098              		.loc 1 3257 7 is_stmt 1 view .LVU2770
 9099 093e FFF7FEFF 		bl	soft_init_state
 9100              	.LVL773:
3258:src/keys.c    ****     }
 9101              		.loc 1 3258 7 view .LVU2771
3258:src/keys.c    ****     }
 9102              		.loc 1 3258 14 is_stmt 0 view .LVU2772
ARM GAS  /tmp/ccvq0xdJ.s 			page 270


 9103 0942 3324     		movs	r4, #51
 9104 0944 3368     		ldr	r3, [r6]
 9105 0946 FFF7B5BB 		b	.L797
 9106              	.LVL774:
 9107              	.L1362:
3281:src/keys.c    **** 
 9108              		.loc 1 3281 3 is_stmt 1 view .LVU2773
3281:src/keys.c    **** 
 9109              		.loc 1 3281 10 is_stmt 0 view .LVU2774
 9110 094a E0B2     		uxtb	r0, r4
 9111 094c FFF7FEFF 		bl	process_arg
 9112              	.LVL775:
 9113 0950 0446     		mov	r4, r0
 9114              	.LVL776:
3281:src/keys.c    **** 
 9115              		.loc 1 3281 10 view .LVU2775
 9116 0952 29E5     		b	.L832
 9117              	.L1446:
 9118              		.align	2
 9119              	.L1445:
 9120 0954 00000000 		.word	NonProgrammable
 9121 0958 00000000 		.word	TraceBuffer
 9122 095c 00000000 		.word	DispMsg
 9123 0960 00000000 		.word	OpCode
 9124 0964 00000000 		.word	OpCodeDisplayPending
 9125 0968 00000000 		.word	JustDisplayed
 9126 096c 00040800 		.word	525312
 9127 0970 00000000 		.word	main_ram
 9128 0974 00000000 		.word	StateWhileOn
 9129              	.LVL777:
 9130              	.L1365:
3290:src/keys.c    **** 
 9131              		.loc 1 3290 3 is_stmt 1 view .LVU2776
 9132              	.LBB1102:
 9133              	.LBI1102:
2346:src/keys.c    **** 	int r = State2.test;
 9134              		.loc 1 2346 12 view .LVU2777
 9135              	.LBB1103:
2347:src/keys.c    **** 	int cmpx = State2.cmplx;
 9136              		.loc 1 2347 2 view .LVU2778
2348:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9137              		.loc 1 2348 2 view .LVU2779
 9138              	.LBB1104:
 9139              	.LBB1105:
 9140              	.LBB1106:
 9141              	.LBB1107:
 143:src/keys.c    **** }
 9142              		.loc 1 143 23 is_stmt 0 view .LVU2780
 9143 0978 C54B     		ldr	r3, .L1447
 9144              	.LBE1107:
 9145              	.LBE1106:
 234:src/keys.c    **** }
 9146              		.loc 1 234 28 view .LVU2781
 9147 097a DFF818C3 		ldr	ip, .L1447+4
 9148              	.LBB1111:
 9149              	.LBB1108:
 143:src/keys.c    **** }
ARM GAS  /tmp/ccvq0xdJ.s 			page 271


 9150              		.loc 1 143 23 view .LVU2782
 9151 097e E4B2     		uxtb	r4, r4
 9152              	.LVL778:
 143:src/keys.c    **** }
 9153              		.loc 1 143 23 view .LVU2783
 9154              	.LBE1108:
 9155              	.LBE1111:
 9156              	.LBE1105:
 9157              	.LBE1104:
2350:src/keys.c    **** 
 9158              		.loc 1 2350 44 view .LVU2784
 9159 0980 11F0020F 		tst	r1, #2
 9160              	.LBB1116:
 9161              	.LBB1114:
 9162              	.LBB1112:
 9163              	.LBB1109:
 143:src/keys.c    **** }
 9164              		.loc 1 143 23 view .LVU2785
 9165 0984 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9166              	.LBE1109:
 9167              	.LBE1112:
 234:src/keys.c    **** }
 9168              		.loc 1 234 28 view .LVU2786
 9169 0986 1CF803C0 		ldrb	ip, [ip, r3]	@ zero_extendqisi2
 9170              	.LBE1114:
 9171              	.LBE1116:
2348:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9172              		.loc 1 2348 19 view .LVU2787
 9173 098a C1F3400E 		ubfx	lr, r1, #1, #1
 9174              	.LVL779:
2349:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 9175              		.loc 1 2349 2 is_stmt 1 view .LVU2788
 9176              	.LBB1117:
 9177              	.LBI1104:
 210:src/keys.c    **** {
 9178              		.loc 1 210 14 view .LVU2789
 9179              	.LBB1115:
 212:src/keys.c    ****     // K00 - K05
 9180              		.loc 1 212 3 view .LVU2790
 234:src/keys.c    **** }
 9181              		.loc 1 234 3 view .LVU2791
 9182              	.LBB1113:
 9183              	.LBI1106:
 131:src/keys.c    **** {
 9184              		.loc 1 131 12 view .LVU2792
 9185              	.LBB1110:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9186              		.loc 1 133 2 view .LVU2793
 143:src/keys.c    **** }
 9187              		.loc 1 143 2 view .LVU2794
 143:src/keys.c    **** }
 9188              		.loc 1 143 2 is_stmt 0 view .LVU2795
 9189              	.LBE1110:
 9190              	.LBE1113:
 9191              	.LBE1115:
 9192              	.LBE1117:
2349:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
ARM GAS  /tmp/ccvq0xdJ.s 			page 272


 9193              		.loc 1 2349 15 view .LVU2796
 9194 098e 2CF08003 		bic	r3, ip, #128
 9195              	.LVL780:
2350:src/keys.c    **** 
 9196              		.loc 1 2350 2 is_stmt 1 view .LVU2797
2350:src/keys.c    **** 
 9197              		.loc 1 2350 44 is_stmt 0 view .LVU2798
 9198 0992 00F04081 		beq	.L1388
 9199              	.LVL781:
2352:src/keys.c    **** 	State2.cmplx = 0;
 9200              		.loc 1 2352 2 is_stmt 1 view .LVU2799
2353:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9201              		.loc 1 2353 15 is_stmt 0 view .LVU2800
 9202 0996 60F34101 		bfi	r1, r0, #1, #1
2354:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9203              		.loc 1 2354 5 view .LVU2801
 9204 099a 642B     		cmp	r3, #100
2352:src/keys.c    **** 	State2.cmplx = 0;
 9205              		.loc 1 2352 14 view .LVU2802
 9206 099c 4FF00700 		mov	r0, #7
2353:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9207              		.loc 1 2353 15 view .LVU2803
 9208 09a0 88F81510 		strb	r1, [r8, #21]
2352:src/keys.c    **** 	State2.cmplx = 0;
 9209              		.loc 1 2352 14 view .LVU2804
 9210 09a4 88F80F00 		strb	r0, [r8, #15]
2353:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9211              		.loc 1 2353 2 is_stmt 1 view .LVU2805
2354:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9212              		.loc 1 2354 2 view .LVU2806
2354:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9213              		.loc 1 2354 5 is_stmt 0 view .LVU2807
 9214 09a8 00F0CD84 		beq	.L1174
2350:src/keys.c    **** 
 9215              		.loc 1 2350 44 view .LVU2808
 9216 09ac 4FF0340B 		mov	fp, #52
 9217              	.LVL782:
 9218              	.L1129:
2355:src/keys.c    **** 		// Lettered register
 9219              		.loc 1 2355 5 view .LVU2809
 9220 09b0 7F2B     		cmp	r3, #127
2350:src/keys.c    **** 
 9221              		.loc 1 2350 60 view .LVU2810
 9222 09b2 D344     		add	fp, fp, r10
2355:src/keys.c    **** 		// Lettered register
 9223              		.loc 1 2355 2 is_stmt 1 view .LVU2811
2355:src/keys.c    **** 		// Lettered register
 9224              		.loc 1 2355 5 is_stmt 0 view .LVU2812
 9225 09b4 00F0B881 		beq	.L864
 9226              	.LVL783:
2355:src/keys.c    **** 		// Lettered register
 9227              		.loc 1 2355 18 view .LVU2813
 9228 09b8 632B     		cmp	r3, #99
 9229 09ba 40F2D681 		bls	.L865
2355:src/keys.c    **** 		// Lettered register
 9230              		.loc 1 2355 37 view .LVU2814
 9231 09be 6F2B     		cmp	r3, #111
ARM GAS  /tmp/ccvq0xdJ.s 			page 273


 9232 09c0 00F2B281 		bhi	.L864
2357:src/keys.c    **** 			if (n == regI_idx)
 9233              		.loc 1 2357 3 is_stmt 1 view .LVU2815
2357:src/keys.c    **** 			if (n == regI_idx)
 9234              		.loc 1 2357 6 is_stmt 0 view .LVU2816
 9235 09c4 BEF1000F 		cmp	lr, #0
 9236 09c8 00F04382 		beq	.L866
2357:src/keys.c    **** 			if (n == regI_idx)
 9237              		.loc 1 2357 12 view .LVU2817
 9238 09cc 1CF0010F 		tst	ip, #1
 9239 09d0 00F03F82 		beq	.L866
2358:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9240              		.loc 1 2358 4 is_stmt 1 view .LVU2818
2358:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9241              		.loc 1 2358 7 is_stmt 0 view .LVU2819
 9242 09d4 6D2B     		cmp	r3, #109
 9243 09d6 40F0B481 		bne	.L867
2359:src/keys.c    **** 			// Disallow odd complex registers > A
 9244              		.loc 1 2359 5 is_stmt 1 view .LVU2820
2359:src/keys.c    **** 			// Disallow odd complex registers > A
 9245              		.loc 1 2359 30 is_stmt 0 view .LVU2821
 9246 09da 0AF12904 		add	r4, r10, #41
 9247              	.LVL784:
2359:src/keys.c    **** 			// Disallow odd complex registers > A
 9248              		.loc 1 2359 30 view .LVU2822
 9249 09de E3E4     		b	.L832
 9250              	.LVL785:
 9251              	.L1101:
2359:src/keys.c    **** 			// Disallow odd complex registers > A
 9252              		.loc 1 2359 30 view .LVU2823
 9253              	.LBE1103:
 9254              	.LBE1102:
 9255              	.LBE1432:
 9256              	.LBE1502:
 9257              	.LBB1503:
3630:src/keys.c    ****       }
 9258              		.loc 1 3630 4 is_stmt 1 view .LVU2824
3630:src/keys.c    ****       }
 9259              		.loc 1 3630 9 is_stmt 0 view .LVU2825
 9260 09e0 0025     		movs	r5, #0
 9261 09e2 00F8015C 		strb	r5, [r0, #-1]
 9262 09e6 7AE5     		b	.L1346
 9263              	.LVL786:
 9264              	.L1172:
3630:src/keys.c    ****       }
 9265              		.loc 1 3630 9 view .LVU2826
 9266              	.LBE1503:
 9267              	.LBB1504:
 9268 09e8 1C46     		mov	r4, r3
 9269              	.LVL787:
3630:src/keys.c    ****       }
 9270              		.loc 1 3630 9 view .LVU2827
 9271 09ea FFF781BB 		b	.L1111
 9272              	.LVL788:
 9273              	.L1363:
3630:src/keys.c    ****       }
 9274              		.loc 1 3630 9 view .LVU2828
ARM GAS  /tmp/ccvq0xdJ.s 			page 274


 9275              	.LBE1504:
 9276              	.LBB1505:
 9277              	.LBB1433:
3284:src/keys.c    **** 
 9278              		.loc 1 3284 3 is_stmt 1 view .LVU2829
 9279              	.LBB1131:
 9280              	.LBI1131:
1708:src/keys.c    **** 	int pc = -1;
 9281              		.loc 1 1708 12 view .LVU2830
 9282              	.LBB1132:
1709:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 9283              		.loc 1 1709 2 view .LVU2831
1710:src/keys.c    **** 
 9284              		.loc 1 1710 2 view .LVU2832
 9285              	.LBB1133:
 9286              	.LBI1133:
 210:src/keys.c    **** {
 9287              		.loc 1 210 14 view .LVU2833
 9288              	.LBB1134:
 212:src/keys.c    ****     // K00 - K05
 9289              		.loc 1 212 3 view .LVU2834
 234:src/keys.c    **** }
 9290              		.loc 1 234 3 view .LVU2835
 9291              	.LBB1135:
 9292              	.LBI1135:
 131:src/keys.c    **** {
 9293              		.loc 1 131 12 view .LVU2836
 9294              	.LBB1136:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9295              		.loc 1 133 2 view .LVU2837
 143:src/keys.c    **** }
 9296              		.loc 1 143 2 view .LVU2838
 143:src/keys.c    **** }
 9297              		.loc 1 143 23 is_stmt 0 view .LVU2839
 9298 09ee A84B     		ldr	r3, .L1447
 9299              	.LBE1136:
 9300              	.LBE1135:
 234:src/keys.c    **** }
 9301              		.loc 1 234 28 view .LVU2840
 9302 09f0 A84A     		ldr	r2, .L1447+4
 9303 09f2 E1B2     		uxtb	r1, r4
 9304              	.LVL789:
 9305              	.LBB1138:
 9306              	.LBB1137:
 143:src/keys.c    **** }
 9307              		.loc 1 143 23 view .LVU2841
 9308 09f4 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 9309              	.LBE1137:
 9310              	.LBE1138:
 234:src/keys.c    **** }
 9311              		.loc 1 234 28 view .LVU2842
 9312 09f6 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 9313              	.LVL790:
 234:src/keys.c    **** }
 9314              		.loc 1 234 28 view .LVU2843
 9315              	.LBE1134:
 9316              	.LBE1133:
ARM GAS  /tmp/ccvq0xdJ.s 			page 275


1712:src/keys.c    **** 		// Digit 0 - 9
 9317              		.loc 1 1712 2 is_stmt 1 view .LVU2844
1712:src/keys.c    **** 		// Digit 0 - 9
 9318              		.loc 1 1712 5 is_stmt 0 view .LVU2845
 9319 09f8 0928     		cmp	r0, #9
 9320 09fa 40F2AE81 		bls	.L1389
1717:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9321              		.loc 1 1717 7 is_stmt 1 view .LVU2846
1717:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9322              		.loc 1 1717 18 is_stmt 0 view .LVU2847
 9323 09fe 20F08000 		bic	r0, r0, #128
 9324              	.LVL791:
1717:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9325              		.loc 1 1717 10 view .LVU2848
 9326 0a02 6428     		cmp	r0, #100
 9327 0a04 00F00782 		beq	.L1390
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 9328              		.loc 1 1718 7 is_stmt 1 view .LVU2849
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 9329              		.loc 1 1718 10 is_stmt 0 view .LVU2850
 9330 0a08 6528     		cmp	r0, #101
 9331 0a0a 00F02982 		beq	.L1391
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 9332              		.loc 1 1719 7 is_stmt 1 view .LVU2851
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 9333              		.loc 1 1719 10 is_stmt 0 view .LVU2852
 9334 0a0e 6628     		cmp	r0, #102
 9335 0a10 00F03A82 		beq	.L1392
1720:src/keys.c    **** #endif
 9336              		.loc 1 1720 7 is_stmt 1 view .LVU2853
1720:src/keys.c    **** #endif
 9337              		.loc 1 1720 10 is_stmt 0 view .LVU2854
 9338 0a14 6728     		cmp	r0, #103
 9339 0a16 00F07184 		beq	.L1393
1722:src/keys.c    **** 		// A - D
 9340              		.loc 1 1722 7 is_stmt 1 view .LVU2855
1722:src/keys.c    **** 		// A - D
 9341              		.loc 1 1722 10 is_stmt 0 view .LVU2856
 9342 0a1a 0329     		cmp	r1, #3
 9343 0a1c 40F27584 		bls	.L1394
1727:src/keys.c    **** 		// .
 9344              		.loc 1 1727 7 is_stmt 1 view .LVU2857
1727:src/keys.c    **** 		// .
 9345              		.loc 1 1727 10 is_stmt 0 view .LVU2858
 9346 0a20 2629     		cmp	r1, #38
 9347 0a22 00F01F85 		beq	.L1395
1732:src/keys.c    **** 		// ENTER - short circuit processing
 9348              		.loc 1 1732 7 is_stmt 1 view .LVU2859
1732:src/keys.c    **** 		// ENTER - short circuit processing
 9349              		.loc 1 1732 10 is_stmt 0 view .LVU2860
 9350 0a26 0C29     		cmp	r1, #12
 9351 0a28 00F08684 		beq	.L1396
1736:src/keys.c    **** 		// backspace
 9352              		.loc 1 1736 7 is_stmt 1 view .LVU2861
1736:src/keys.c    **** 		// backspace
 9353              		.loc 1 1736 10 is_stmt 0 view .LVU2862
 9354 0a2c 1029     		cmp	r1, #16
ARM GAS  /tmp/ccvq0xdJ.s 			page 276


 9355 0a2e 00F02485 		beq	.L1397
1745:src/keys.c    **** 		// up
 9356              		.loc 1 1745 7 is_stmt 1 view .LVU2863
1745:src/keys.c    **** 		// up
 9357              		.loc 1 1745 10 is_stmt 0 view .LVU2864
 9358 0a32 1229     		cmp	r1, #18
 9359 0a34 00F05E87 		beq	.L1398
1755:src/keys.c    **** 		// down
 9360              		.loc 1 1755 7 is_stmt 1 view .LVU2865
1755:src/keys.c    **** 		// down
 9361              		.loc 1 1755 10 is_stmt 0 view .LVU2866
 9362 0a38 1829     		cmp	r1, #24
 9363 0a3a 7FF481AE 		bne	.L1347
1757:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 9364              		.loc 1 1757 3 is_stmt 1 view .LVU2867
1758:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9365              		.loc 1 1758 18 is_stmt 0 view .LVU2868
 9366 0a3e 964C     		ldr	r4, .L1447+8
 9367              	.LVL792:
1757:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 9368              		.loc 1 1757 3 view .LVU2869
 9369 0a40 0120     		movs	r0, #1
 9370 0a42 FFF7FEFF 		bl	update_program_bounds
 9371              	.LVL793:
1758:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9372              		.loc 1 1758 3 is_stmt 1 view .LVU2870
1758:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9373              		.loc 1 1758 18 is_stmt 0 view .LVU2871
 9374 0a46 2368     		ldr	r3, [r4]
1758:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9375              		.loc 1 1758 11 view .LVU2872
 9376 0a48 0021     		movs	r1, #0
 9377 0a4a B3F8EE07 		ldrh	r0, [r3, #2030]
 9378 0a4e FFF7FEFF 		bl	do_inc
 9379              	.LVL794:
1759:src/keys.c    **** 			rawpc = 1;
 9380              		.loc 1 1759 3 is_stmt 1 view .LVU2873
1759:src/keys.c    **** 			rawpc = 1;
 9381              		.loc 1 1759 6 is_stmt 0 view .LVU2874
 9382 0a52 20B9     		cbnz	r0, .L844
1759:src/keys.c    **** 			rawpc = 1;
 9383              		.loc 1 1759 21 view .LVU2875
 9384 0a54 2368     		ldr	r3, [r4]
1759:src/keys.c    **** 			rawpc = 1;
 9385              		.loc 1 1759 18 view .LVU2876
 9386 0a56 5888     		ldrh	r0, [r3, #2]
 9387              	.LVL795:
1759:src/keys.c    **** 			rawpc = 1;
 9388              		.loc 1 1759 18 view .LVU2877
 9389 0a58 0038     		subs	r0, r0, #0
 9390 0a5a 18BF     		it	ne
 9391 0a5c 0120     		movne	r0, #1
 9392              	.LVL796:
 9393              	.L844:
1765:src/keys.c    **** fin2:		State2.gtodot = 0;
 9394              		.loc 1 1765 7 is_stmt 1 view .LVU2878
 9395 0a5e FFF7FEFF 		bl	set_pc
ARM GAS  /tmp/ccvq0xdJ.s 			page 277


 9396              	.LVL797:
 9397              	.L848:
1766:src/keys.c    **** 		State2.digval = 0;
 9398              		.loc 1 1766 8 view .LVU2879
1766:src/keys.c    **** 		State2.digval = 0;
 9399              		.loc 1 1766 22 is_stmt 0 view .LVU2880
 9400 0a62 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9401 0a66 3368     		ldr	r3, [r6]
1767:src/keys.c    **** 		State2.numdigit = 0;
 9402              		.loc 1 1767 17 view .LVU2881
 9403 0a68 0022     		movs	r2, #0
1766:src/keys.c    **** 		State2.digval = 0;
 9404              		.loc 1 1766 22 view .LVU2882
 9405 0a6a 6FF30001 		bfc	r1, #0, #1
 9406 0a6e 88F81510 		strb	r1, [r8, #21]
1767:src/keys.c    **** 		State2.numdigit = 0;
 9407              		.loc 1 1767 3 is_stmt 1 view .LVU2883
1767:src/keys.c    **** 		State2.numdigit = 0;
 9408              		.loc 1 1767 17 is_stmt 0 view .LVU2884
 9409 0a72 A8F80820 		strh	r2, [r8, #8]	@ movhi
1768:src/keys.c    **** 	}
 9410              		.loc 1 1768 3 is_stmt 1 view .LVU2885
1768:src/keys.c    **** 	}
 9411              		.loc 1 1768 19 is_stmt 0 view .LVU2886
 9412 0a76 88F80B20 		strb	r2, [r8, #11]
 9413              	.LBE1132:
 9414              	.LBE1131:
3284:src/keys.c    **** 
 9415              		.loc 1 3284 10 view .LVU2887
 9416 0a7a 3324     		movs	r4, #51
 9417 0a7c FFF71ABB 		b	.L797
 9418              	.LVL798:
 9419              	.L1364:
3287:src/keys.c    **** 
 9420              		.loc 1 3287 3 is_stmt 1 view .LVU2888
 9421              	.LBB1151:
 9422              	.LBB1152:
1598:src/keys.c    **** 	State2.dot = 0;
 9423              		.loc 1 1598 15 is_stmt 0 view .LVU2889
 9424 0a80 21F06203 		bic	r3, r1, #98
 9425              	.LBE1152:
 9426              	.LBE1151:
3287:src/keys.c    **** 
 9427              		.loc 1 3287 10 view .LVU2890
 9428 0a84 E4B2     		uxtb	r4, r4
 9429              	.LVL799:
 9430              	.LBB1165:
 9431              	.LBI1151:
1588:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 9432              		.loc 1 1588 12 is_stmt 1 view .LVU2891
 9433              	.LBB1162:
1589:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 9434              		.loc 1 1589 2 view .LVU2892
1594:src/keys.c    **** 	int f = State2.dot;
 9435              		.loc 1 1594 2 view .LVU2893
1598:src/keys.c    **** 	State2.dot = 0;
 9436              		.loc 1 1598 15 is_stmt 0 view .LVU2894
ARM GAS  /tmp/ccvq0xdJ.s 			page 278


 9437 0a86 88F81530 		strb	r3, [r8, #21]
1594:src/keys.c    **** 	int f = State2.dot;
 9438              		.loc 1 1594 20 view .LVU2895
 9439 0a8a C1F34009 		ubfx	r9, r1, #1, #1
 9440              	.LVL800:
1595:src/keys.c    **** 
 9441              		.loc 1 1595 2 is_stmt 1 view .LVU2896
1595:src/keys.c    **** 
 9442              		.loc 1 1595 16 is_stmt 0 view .LVU2897
 9443 0a8e C1F3801B 		ubfx	fp, r1, #6, #1
 9444              	.LVL801:
1597:src/keys.c    **** 	State2.cmplx = 0;
 9445              		.loc 1 1597 2 is_stmt 1 view .LVU2898
1598:src/keys.c    **** 	State2.dot = 0;
 9446              		.loc 1 1598 2 view .LVU2899
1599:src/keys.c    **** #ifdef DM42
 9447              		.loc 1 1599 2 view .LVU2900
1601:src/keys.c    **** #endif
 9448              		.loc 1 1601 2 view .LVU2901
 9449              	.LBB1153:
 9450              	.LBI1153:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9451              		.loc 1 114 13 view .LVU2902
 9452              	.LBE1153:
 9453              	.LBE1162:
 9454              	.LBE1165:
 9455              	.LBE1433:
 9456              	.LBE1505:
 115:src/keys.c    **** }
 9457              		.loc 1 115 2 view .LVU2903
 9458              	.LBB1506:
 9459              	.LBB1434:
 9460              	.LBB1166:
 9461              	.LBB1163:
 9462              	.LBB1160:
 9463              	.LBB1154:
 9464              	.LBI1154:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9465              		.loc 1 104 20 view .LVU2904
 9466              	.LBB1155:
 105:src/keys.c    **** 	State2.shifts = shift;
 9467              		.loc 1 105 2 view .LVU2905
 9468              	.LBB1156:
 9469              	.LBI1156:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9470              		.loc 1 96 13 view .LVU2906
 9471              	.LBB1157:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9472              		.loc 1 97 2 view .LVU2907
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9473              		.loc 1 97 18 is_stmt 0 view .LVU2908
 9474 0a92 FFF7FEFF 		bl	shift_down
 9475              	.LVL802:
  98:src/keys.c    **** }
 9476              		.loc 1 98 2 is_stmt 1 view .LVU2909
 9477              	.LBE1157:
 9478              	.LBE1156:
ARM GAS  /tmp/ccvq0xdJ.s 			page 279


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9479              		.loc 1 106 2 view .LVU2910
 9480              	.LBE1155:
 9481              	.LBE1154:
 9482              	.LBE1160:
1603:src/keys.c    **** 
 9483              		.loc 1 1603 2 is_stmt 0 view .LVU2911
 9484 0a96 292C     		cmp	r4, #41
 9485              	.LBB1161:
 9486              	.LBB1159:
 9487              	.LBB1158:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9488              		.loc 1 106 16 view .LVU2912
 9489 0a98 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 9490              		.loc 1 108 2 is_stmt 1 view .LVU2913
 9491              	.LVL803:
 108:src/keys.c    **** }
 9492              		.loc 1 108 2 is_stmt 0 view .LVU2914
 9493              	.LBE1158:
 9494              	.LBE1159:
 9495              	.LBE1161:
1603:src/keys.c    **** 
 9496              		.loc 1 1603 2 is_stmt 1 view .LVU2915
 9497 0a9c 00F00E84 		beq	.L853
 9498 0aa0 15D8     		bhi	.L854
 9499 0aa2 013C     		subs	r4, r4, #1
 9500              	.LVL804:
1603:src/keys.c    **** 
 9501              		.loc 1 1603 2 is_stmt 0 view .LVU2916
 9502 0aa4 E3B2     		uxtb	r3, r4
 9503 0aa6 022B     		cmp	r3, #2
 9504 0aa8 3FF64AAE 		bhi	.L1347
1608:src/keys.c    **** 
 9505              		.loc 1 1608 3 is_stmt 1 view .LVU2917
1608:src/keys.c    **** 
 9506              		.loc 1 1608 54 is_stmt 0 view .LVU2918
 9507 0aac 7B4B     		ldr	r3, .L1447+12
 9508 0aae 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 9509 0ab2 03EB4404 		add	r4, r3, r4, lsl #1
 9510              	.LVL805:
1608:src/keys.c    **** 
 9511              		.loc 1 1608 27 view .LVU2919
 9512 0ab6 B9F1000F 		cmp	r9, #0
1608:src/keys.c    **** 
 9513              		.loc 1 1608 54 view .LVU2920
 9514 0aba 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1608:src/keys.c    **** 
 9515              		.loc 1 1608 27 view .LVU2921
 9516 0abe 14BF     		ite	ne
 9517 0ac0 4FF4A063 		movne	r3, #1280
 9518 0ac4 4FF40073 		moveq	r3, #512
1608:src/keys.c    **** 
 9519              		.loc 1 1608 37 view .LVU2922
 9520 0ac8 1C43     		orrs	r4, r4, r3
 9521 0aca 2546     		mov	r5, r4
 9522 0acc 24E5     		b	.L859
ARM GAS  /tmp/ccvq0xdJ.s 			page 280


 9523              	.LVL806:
 9524              	.L854:
1603:src/keys.c    **** 
 9525              		.loc 1 1603 2 view .LVU2923
 9526 0ace 2D2C     		cmp	r4, #45
 9527 0ad0 7FF436AE 		bne	.L1347
1611:src/keys.c    **** 		goto stay;
 9528              		.loc 1 1611 3 is_stmt 1 view .LVU2924
 9529 0ad4 89F00109 		eor	r9, r9, #1
 9530              	.LVL807:
1612:src/keys.c    **** 
 9531              		.loc 1 1612 3 view .LVU2925
 9532              	.L860:
1627:src/keys.c    **** 		State2.cmplx = cmplx;
 9533              		.loc 1 1627 4 view .LVU2926
1628:src/keys.c    **** 		State2.dot = f;
 9534              		.loc 1 1628 3 view .LVU2927
1629:src/keys.c    **** 		break;
 9535              		.loc 1 1629 3 view .LVU2928
1628:src/keys.c    **** 		State2.dot = f;
 9536              		.loc 1 1628 16 is_stmt 0 view .LVU2929
 9537 0ad8 4FEA4902 		lsl	r2, r9, #1
 9538 0adc 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9539 0ae0 3368     		ldr	r3, [r6]
 9540 0ae2 42F02002 		orr	r2, r2, #32
 9541 0ae6 42EA8B12 		orr	r2, r2, fp, lsl #6
 9542 0aea 02F06202 		and	r2, r2, #98
 9543 0aee 21F06201 		bic	r1, r1, #98
 9544 0af2 0A43     		orrs	r2, r2, r1
 9545 0af4 88F81520 		strb	r2, [r8, #21]
1630:src/keys.c    **** 
 9546              		.loc 1 1630 3 is_stmt 1 view .LVU2930
1635:src/keys.c    **** }
 9547              		.loc 1 1635 9 is_stmt 0 view .LVU2931
 9548 0af8 3324     		movs	r4, #51
 9549              	.LVL808:
1630:src/keys.c    **** 
 9550              		.loc 1 1630 3 view .LVU2932
 9551 0afa FFF7DBBA 		b	.L797
 9552              	.LVL809:
 9553              	.L1360:
1630:src/keys.c    **** 
 9554              		.loc 1 1630 3 view .LVU2933
 9555              	.LBE1163:
 9556              	.LBE1166:
3264:src/keys.c    **** 		return STATE_IGNORE;
 9557              		.loc 1 3264 3 is_stmt 1 view .LVU2934
3264:src/keys.c    **** 		return STATE_IGNORE;
 9558              		.loc 1 3264 15 is_stmt 0 view .LVU2935
 9559 0afe 1560     		str	r5, [r2]
3265:src/keys.c    **** 	}
 9560              		.loc 1 3265 3 is_stmt 1 view .LVU2936
 9561              	.LVL810:
3265:src/keys.c    **** 	}
 9562              		.loc 1 3265 3 is_stmt 0 view .LVU2937
 9563              	.LBE1434:
 9564              	.LBE1506:
ARM GAS  /tmp/ccvq0xdJ.s 			page 281


3676:src/keys.c    **** #ifndef CONSOLE
 9565              		.loc 1 3676 3 is_stmt 1 view .LVU2938
 9566              	.LBB1507:
 9567              	.LBB1435:
3265:src/keys.c    **** 	}
 9568              		.loc 1 3265 10 is_stmt 0 view .LVU2939
 9569 0b00 3224     		movs	r4, #50
 9570 0b02 FFF7DABA 		b	.L818
 9571              	.LVL811:
 9572              	.L900:
 9573              	.LBB1167:
 9574              	.LBB862:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 9575              		.loc 1 312 3 is_stmt 1 view .LVU2940
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 9576              		.loc 1 312 6 is_stmt 0 view .LVU2941
 9577 0b06 212C     		cmp	r4, #33
 9578 0b08 00F03A81 		beq	.L1399
 315:src/keys.c    ****     /*
 9579              		.loc 1 315 3 is_stmt 1 view .LVU2942
 315:src/keys.c    ****     /*
 9580              		.loc 1 315 23 is_stmt 0 view .LVU2943
 9581 0b0c DFF898C1 		ldr	ip, .L1447+24
 315:src/keys.c    ****     /*
 9582              		.loc 1 315 6 view .LVU2944
 9583 0b10 D8F81420 		ldr	r2, [r8, #20]
 9584 0b14 1CEA020F 		tst	ip, r2
 9585 0b18 40F03B81 		bne	.L914
 9586              	.LBB852:
 319:src/keys.c    **** #ifdef DM42
 9587              		.loc 1 319 5 is_stmt 1 view .LVU2945
 346:src/keys.c    ****       /*
 9588              		.loc 1 346 5 view .LVU2946
 346:src/keys.c    ****       /*
 9589              		.loc 1 346 8 is_stmt 0 view .LVU2947
 9590 0b1c 242C     		cmp	r4, #36
 9591 0b1e 02D1     		bne	.L915
 346:src/keys.c    ****       /*
 9592              		.loc 1 346 18 view .LVU2948
 9593 0b20 022B     		cmp	r3, #2
 9594 0b22 00F02684 		beq	.L1145
 9595              	.L915:
 361:src/keys.c    ****       /*
 9596              		.loc 1 361 5 is_stmt 1 view .LVU2949
 361:src/keys.c    ****       /*
 9597              		.loc 1 361 8 is_stmt 0 view .LVU2950
 9598 0b26 032B     		cmp	r3, #3
 9599 0b28 7FF48EAB 		bne	.L921
 9600              	.L1128:
 371:src/keys.c    **** #ifndef WINGUI
 9601              		.loc 1 371 5 is_stmt 1 view .LVU2951
 9602              	.LVL812:
 373:src/keys.c    **** #else
 9603              		.loc 1 373 5 view .LVU2952
 373:src/keys.c    **** #else
 9604              		.loc 1 373 23 is_stmt 0 view .LVU2953
 9605 0b2c 90F8E827 		ldrb	r2, [r0, #2024]	@ zero_extendqisi2
ARM GAS  /tmp/ccvq0xdJ.s 			page 282


 373:src/keys.c    **** #else
 9606              		.loc 1 373 27 view .LVU2954
 9607 0b30 D007     		lsls	r0, r2, #31
 9608 0b32 00F1DE83 		bmi	.L1146
 373:src/keys.c    **** #else
 9609              		.loc 1 373 73 view .LVU2955
 9610 0b36 11F0020A 		ands	r10, r1, #2
 9611 0b3a 00F0D285 		beq	.L1400
 371:src/keys.c    **** #ifndef WINGUI
 9612              		.loc 1 371 8 view .LVU2956
 9613 0b3e 584A     		ldr	r2, .L1447+16
 377:src/keys.c    ****   }
 9614              		.loc 1 377 9 view .LVU2957
 9615 0b40 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 9616              		.loc 1 373 73 view .LVU2958
 9617 0b42 4FF0020E 		mov	lr, #2
 9618              	.LVL813:
 9619              	.L916:
 373:src/keys.c    **** #else
 9620              		.loc 1 373 73 view .LVU2959
 9621              	.LBE852:
 421:src/keys.c    ****     if (cp->key == c) {
 9622              		.loc 1 421 3 is_stmt 1 view .LVU2960
 421:src/keys.c    ****     if (cp->key == c) {
 9623              		.loc 1 421 15 view .LVU2961
 9624 0b46 A2F1040C 		sub	ip, r2, #4
 9625 0b4a 0CEB800C 		add	ip, ip, r0, lsl #2
 9626              	.LBB853:
 373:src/keys.c    **** #else
 9627              		.loc 1 373 73 is_stmt 0 view .LVU2962
 9628 0b4e 0420     		movs	r0, #4
 9629              	.LVL814:
 373:src/keys.c    **** #else
 9630              		.loc 1 373 73 view .LVU2963
 9631 0b50 04E0     		b	.L922
 9632              	.LVL815:
 9633              	.L918:
 373:src/keys.c    **** #else
 9634              		.loc 1 373 73 view .LVU2964
 9635              	.LBE853:
 421:src/keys.c    ****     if (cp->key == c) {
 9636              		.loc 1 421 3 view .LVU2965
 9637 0b52 6245     		cmp	r2, ip
 9638 0b54 3FF478AB 		beq	.L921
 421:src/keys.c    ****     if (cp->key == c) {
 9639              		.loc 1 421 3 view .LVU2966
 9640 0b58 12F8040F 		ldrb	r0, [r2, #4]!	@ zero_extendqisi2
 9641              	.LVL816:
 9642              	.L922:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 9643              		.loc 1 422 5 is_stmt 1 view .LVU2967
 421:src/keys.c    ****     if (cp->key == c) {
 9644              		.loc 1 421 24 view .LVU2968
 421:src/keys.c    ****     if (cp->key == c) {
 9645              		.loc 1 421 15 view .LVU2969
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
ARM GAS  /tmp/ccvq0xdJ.s 			page 283


 9646              		.loc 1 422 8 is_stmt 0 view .LVU2970
 9647 0b5c 8442     		cmp	r4, r0
 9648 0b5e F8D1     		bne	.L918
 423:src/keys.c    ****       break;
 9649              		.loc 1 423 7 is_stmt 1 view .LVU2971
 423:src/keys.c    ****       break;
 9650              		.loc 1 423 11 is_stmt 0 view .LVU2972
 9651 0b60 7244     		add	r2, r2, lr
 9652              	.LVL817:
 423:src/keys.c    ****       break;
 9653              		.loc 1 423 11 view .LVU2973
 9654 0b62 92F801A0 		ldrb	r10, [r2, #1]	@ zero_extendqisi2
 9655              	.LVL818:
 424:src/keys.c    ****     }
 9656              		.loc 1 424 7 is_stmt 1 view .LVU2974
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9657              		.loc 1 427 3 view .LVU2975
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9658              		.loc 1 427 6 is_stmt 0 view .LVU2976
 9659 0b66 0A07     		lsls	r2, r1, #28
 9660 0b68 40F18881 		bpl	.L1401
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9661              		.loc 1 427 20 view .LVU2977
 9662 0b6c AAF10B03 		sub	r3, r10, #11
 9663 0b70 042B     		cmp	r3, #4
 9664 0b72 7FF6DFAD 		bls	.L903
 9665              	.LVL819:
 9666              	.L927:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9667              		.loc 1 427 20 view .LVU2978
 9668              	.LBE862:
 9669              	.LBE1167:
3336:src/keys.c    **** 
 9670              		.loc 1 3336 3 is_stmt 1 view .LVU2979
 9671              	.LBB1168:
 9672              	.LBI1168:
2809:src/keys.c    **** 	enum shifts shift = reset_shift();
 9673              		.loc 1 2809 12 view .LVU2980
 9674              	.LBB1169:
2810:src/keys.c    **** 	unsigned int ch = 0;
 9675              		.loc 1 2810 2 view .LVU2981
 9676              	.LBB1170:
 9677              	.LBI1170:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9678              		.loc 1 114 13 view .LVU2982
 9679              	.LBE1170:
 9680              	.LBE1169:
 9681              	.LBE1168:
 9682              	.LBE1435:
 9683              	.LBE1507:
 115:src/keys.c    **** }
 9684              		.loc 1 115 2 view .LVU2983
 9685              	.LBB1508:
 9686              	.LBB1436:
 9687              	.LBB1207:
 9688              	.LBB1200:
 9689              	.LBB1177:
ARM GAS  /tmp/ccvq0xdJ.s 			page 284


 9690              	.LBB1171:
 9691              	.LBI1171:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9692              		.loc 1 104 20 view .LVU2984
 9693              	.LBB1172:
 105:src/keys.c    **** 	State2.shifts = shift;
 9694              		.loc 1 105 2 view .LVU2985
 9695              	.LBB1173:
 9696              	.LBI1173:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9697              		.loc 1 96 13 view .LVU2986
 9698              	.LBB1174:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9699              		.loc 1 97 2 view .LVU2987
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9700              		.loc 1 97 18 is_stmt 0 view .LVU2988
 9701 0b76 FFF7FEFF 		bl	shift_down
 9702              	.LVL820:
  98:src/keys.c    **** }
 9703              		.loc 1 98 2 is_stmt 1 view .LVU2989
  98:src/keys.c    **** }
 9704              		.loc 1 98 52 is_stmt 0 view .LVU2990
 9705 0b7a 0146     		mov	r1, r0
 9706 0b7c 08B9     		cbnz	r0, .L924
 9707 0b7e 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9708              	.L924:
 9709              	.LVL821:
  98:src/keys.c    **** }
 9710              		.loc 1 98 52 view .LVU2991
 9711              	.LBE1174:
 9712              	.LBE1173:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9713              		.loc 1 106 2 is_stmt 1 view .LVU2992
 9714              	.LBE1172:
 9715              	.LBE1171:
 9716              	.LBE1177:
2814:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9717              		.loc 1 2814 5 is_stmt 0 view .LVU2993
 9718 0b82 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 9719              	.LBB1178:
 9720              	.LBB1176:
 9721              	.LBB1175:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9722              		.loc 1 106 16 view .LVU2994
 9723 0b86 0023     		movs	r3, #0
 9724 0b88 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9725              		.loc 1 108 2 is_stmt 1 view .LVU2995
 9726              	.LVL822:
 108:src/keys.c    **** }
 9727              		.loc 1 108 2 is_stmt 0 view .LVU2996
 9728              	.LBE1175:
 9729              	.LBE1176:
 9730              	.LBE1178:
2811:src/keys.c    **** 	unsigned int opcode;
 9731              		.loc 1 2811 2 is_stmt 1 view .LVU2997
2812:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 285


 9732              		.loc 1 2812 2 view .LVU2998
2814:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9733              		.loc 1 2814 2 view .LVU2999
2814:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9734              		.loc 1 2814 5 is_stmt 0 view .LVU3000
 9735 0b8c 0028     		cmp	r0, #0
 9736 0b8e 40F00B85 		bne	.L1402
2823:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 9737              		.loc 1 2823 2 is_stmt 1 view .LVU3001
 9738 0b92 102C     		cmp	r4, #16
 9739 0b94 00F01785 		beq	.L931
 9740 0b98 242C     		cmp	r4, #36
 9741 0b9a 00F0D485 		beq	.L932
 9742 0b9e 0C2C     		cmp	r4, #12
 9743 0ba0 00F0B285 		beq	.L1403
 9744              	.L933:
2856:src/keys.c    **** 	if (ch == 0)
 9745              		.loc 1 2856 2 view .LVU3002
 9746              	.LBB1179:
 9747              	.LBB1180:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9748              		.loc 1 485 6 is_stmt 0 view .LVU3003
 9749 0ba4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9750              	.LVL823:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9751              		.loc 1 485 6 view .LVU3004
 9752              	.LBE1180:
 9753              	.LBI1179:
 435:src/keys.c    **** {
 9754              		.loc 1 435 12 is_stmt 1 view .LVU3005
 9755              	.LBB1185:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9756              		.loc 1 437 2 view .LVU3006
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9757              		.loc 1 485 2 view .LVU3007
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9758              		.loc 1 485 5 is_stmt 0 view .LVU3008
 9759 0ba8 DB06     		lsls	r3, r3, #27
 9760 0baa 03D5     		bpl	.L937
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9761              		.loc 1 486 3 is_stmt 1 view .LVU3009
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9762              		.loc 1 486 6 is_stmt 0 view .LVU3010
 9763 0bac 0029     		cmp	r1, #0
 9764 0bae 41F0F180 		bne	.L1404
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 9765              		.loc 1 487 10 view .LVU3011
 9766 0bb2 0421     		movs	r1, #4
 9767              	.LVL824:
 9768              	.L937:
 491:src/keys.c    **** }
 9769              		.loc 1 491 2 is_stmt 1 view .LVU3012
 9770              	.LBB1181:
 9771              	.LBI1181:
 131:src/keys.c    **** {
 9772              		.loc 1 131 12 view .LVU3013
 9773              	.LBB1182:
ARM GAS  /tmp/ccvq0xdJ.s 			page 286


 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9774              		.loc 1 133 2 view .LVU3014
 143:src/keys.c    **** }
 9775              		.loc 1 143 2 view .LVU3015
 143:src/keys.c    **** }
 9776              		.loc 1 143 23 is_stmt 0 view .LVU3016
 9777 0bb4 364B     		ldr	r3, .L1447
 9778              	.LBE1182:
 9779              	.LBE1181:
 491:src/keys.c    **** }
 9780              		.loc 1 491 49 view .LVU3017
 9781 0bb6 3B4A     		ldr	r2, .L1447+20
 9782              	.LBB1184:
 9783              	.LBB1183:
 143:src/keys.c    **** }
 9784              		.loc 1 143 23 view .LVU3018
 9785 0bb8 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9786              	.LBE1183:
 9787              	.LBE1184:
 491:src/keys.c    **** }
 9788              		.loc 1 491 49 view .LVU3019
 9789 0bba 0620     		movs	r0, #6
 9790 0bbc 00FB0323 		mla	r3, r0, r3, r2
 9791              	.LBE1185:
 9792              	.LBE1179:
2856:src/keys.c    **** 	if (ch == 0)
 9793              		.loc 1 2856 5 view .LVU3020
 9794 0bc0 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 9795              	.LVL825:
2857:src/keys.c    **** 		return STATE_UNFINISHED;
 9796              		.loc 1 2857 2 is_stmt 1 view .LVU3021
2857:src/keys.c    **** 		return STATE_UNFINISHED;
 9797              		.loc 1 2857 5 is_stmt 0 view .LVU3022
 9798 0bc2 002C     		cmp	r4, #0
 9799 0bc4 3FF4BCAD 		beq	.L1347
 9800              	.L930:
2860:src/keys.c    **** 		State2.digval = ch;
 9801              		.loc 1 2860 2 is_stmt 1 view .LVU3023
2860:src/keys.c    **** 		State2.digval = ch;
 9802              		.loc 1 2860 12 is_stmt 0 view .LVU3024
 9803 0bc8 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2860:src/keys.c    **** 		State2.digval = ch;
 9804              		.loc 1 2860 5 view .LVU3025
 9805 0bcc 002B     		cmp	r3, #0
 9806 0bce 00F05986 		beq	.L1405
2864:src/keys.c    **** 		State2.digval2 = ch;
 9807              		.loc 1 2864 9 is_stmt 1 view .LVU3026
2864:src/keys.c    **** 		State2.digval2 = ch;
 9808              		.loc 1 2864 12 is_stmt 0 view .LVU3027
 9809 0bd2 012B     		cmp	r3, #1
 9810 0bd4 01F0E380 		beq	.L1406
2869:src/keys.c    **** 
 9811              		.loc 1 2869 2 is_stmt 1 view .LVU3028
 9812              	.LBB1187:
 9813              	.LBI1187:
2802:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 9814              		.loc 1 2802 13 view .LVU3029
ARM GAS  /tmp/ccvq0xdJ.s 			page 287


 9815              	.LBB1188:
2804:src/keys.c    **** 	if (! State2.alphas )
 9816              		.loc 1 2804 2 view .LVU3030
2804:src/keys.c    **** 	if (! State2.alphas )
 9817              		.loc 1 2804 15 is_stmt 0 view .LVU3031
 9818 0bd8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2805:src/keys.c    **** 		State2.alphashift = 0;
 9819              		.loc 1 2805 6 view .LVU3032
 9820 0bdc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2804:src/keys.c    **** 	if (! State2.alphas )
 9821              		.loc 1 2804 15 view .LVU3033
 9822 0be0 6FF3C302 		bfc	r2, #3, #1
 9823 0be4 88F81520 		strb	r2, [r8, #21]
2805:src/keys.c    **** 		State2.alphashift = 0;
 9824              		.loc 1 2805 2 is_stmt 1 view .LVU3034
2805:src/keys.c    **** 		State2.alphashift = 0;
 9825              		.loc 1 2805 5 is_stmt 0 view .LVU3035
 9826 0be8 13F00802 		ands	r2, r3, #8
2806:src/keys.c    **** }
 9827              		.loc 1 2806 3 is_stmt 1 view .LVU3036
2806:src/keys.c    **** }
 9828              		.loc 1 2806 21 is_stmt 0 view .LVU3037
 9829 0bec 04BF     		itt	eq
 9830 0bee 62F30413 		bfieq	r3, r2, #4, #1
 9831 0bf2 88F81630 		strbeq	r3, [r8, #22]
 9832              	.LVL826:
 9833              	.L936:
2806:src/keys.c    **** }
 9834              		.loc 1 2806 21 view .LVU3038
 9835              	.LBE1188:
 9836              	.LBE1187:
2872:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9837              		.loc 1 2872 2 is_stmt 1 view .LVU3039
2874:src/keys.c    **** }
 9838              		.loc 1 2874 2 view .LVU3040
2872:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9839              		.loc 1 2872 21 is_stmt 0 view .LVU3041
 9840 0bf6 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2873:src/keys.c    **** 	return opcode;
 9841              		.loc 1 2873 17 view .LVU3042
 9842 0bfa B8F80810 		ldrh	r1, [r8, #8]
2873:src/keys.c    **** 	return opcode;
 9843              		.loc 1 2873 34 view .LVU3043
 9844 0bfe 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2872:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9845              		.loc 1 2872 29 view .LVU3044
 9846 0c02 1B02     		lsls	r3, r3, #8
2872:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9847              		.loc 1 2872 18 view .LVU3045
 9848 0c04 03F57043 		add	r3, r3, #61440
2873:src/keys.c    **** 	return opcode;
 9849              		.loc 1 2873 9 view .LVU3046
 9850 0c08 0B44     		add	r3, r3, r1
2873:src/keys.c    **** 	return opcode;
 9851              		.loc 1 2873 25 view .LVU3047
 9852 0c0a 03EB0243 		add	r3, r3, r2, lsl #16
2872:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
ARM GAS  /tmp/ccvq0xdJ.s 			page 288


 9853              		.loc 1 2872 9 view .LVU3048
 9854 0c0e 03EB0464 		add	r4, r3, r4, lsl #24
 9855              	.LVL827:
2874:src/keys.c    **** }
 9856              		.loc 1 2874 9 view .LVU3049
 9857 0c12 FFF7C9BB 		b	.L832
 9858              	.LVL828:
 9859              	.L1388:
2874:src/keys.c    **** }
 9860              		.loc 1 2874 9 view .LVU3050
 9861              	.LBE1200:
 9862              	.LBE1207:
 9863              	.LBB1208:
 9864              	.LBB1122:
2352:src/keys.c    **** 	State2.cmplx = 0;
 9865              		.loc 1 2352 2 is_stmt 1 view .LVU3051
2353:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9866              		.loc 1 2353 15 is_stmt 0 view .LVU3052
 9867 0c16 6EF34101 		bfi	r1, lr, #1, #1
2352:src/keys.c    **** 	State2.cmplx = 0;
 9868              		.loc 1 2352 14 view .LVU3053
 9869 0c1a 0720     		movs	r0, #7
2354:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9870              		.loc 1 2354 5 view .LVU3054
 9871 0c1c 642B     		cmp	r3, #100
2353:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9872              		.loc 1 2353 15 view .LVU3055
 9873 0c1e 88F81510 		strb	r1, [r8, #21]
2352:src/keys.c    **** 	State2.cmplx = 0;
 9874              		.loc 1 2352 14 view .LVU3056
 9875 0c22 88F80F00 		strb	r0, [r8, #15]
2353:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9876              		.loc 1 2353 2 is_stmt 1 view .LVU3057
2354:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9877              		.loc 1 2354 2 view .LVU3058
2354:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9878              		.loc 1 2354 5 is_stmt 0 view .LVU3059
 9879 0c26 00F08A83 		beq	.L1175
2350:src/keys.c    **** 
 9880              		.loc 1 2350 44 view .LVU3060
 9881 0c2a 4FF02D0B 		mov	fp, #45
 9882 0c2e BFE6     		b	.L1129
 9883              	.LVL829:
 9884              	.L1173:
2350:src/keys.c    **** 
 9885              		.loc 1 2350 44 view .LVU3061
 9886              	.LBE1122:
 9887              	.LBE1208:
 9888              	.LBE1436:
 9889              	.LBE1508:
 9890              	.LBB1509:
 9891 0c30 2C46     		mov	r4, r5
 9892              	.LVL830:
2350:src/keys.c    **** 
 9893              		.loc 1 2350 44 view .LVU3062
 9894 0c32 FFF75DBA 		b	.L1111
 9895              	.LVL831:
ARM GAS  /tmp/ccvq0xdJ.s 			page 289


 9896              	.L1366:
2350:src/keys.c    **** 
 9897              		.loc 1 2350 44 view .LVU3063
 9898              	.LBE1509:
 9899              	.LBB1510:
 9900              	.LBB1437:
3293:src/keys.c    **** 
 9901              		.loc 1 3293 3 is_stmt 1 view .LVU3064
 9902              	.LBB1209:
 9903              	.LBB1210:
2915:src/keys.c    **** 
 9904              		.loc 1 2915 12 is_stmt 0 view .LVU3065
 9905 0c36 184B     		ldr	r3, .L1447+8
 9906 0c38 1B68     		ldr	r3, [r3]
 9907 0c3a B3F8DE37 		ldrh	r3, [r3, #2014]
 9908              	.LBE1210:
 9909              	.LBE1209:
3293:src/keys.c    **** 
 9910              		.loc 1 3293 10 view .LVU3066
 9911 0c3e E4B2     		uxtb	r4, r4
 9912              	.LVL832:
 9913              	.LBB1229:
 9914              	.LBI1209:
2913:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9915              		.loc 1 2913 12 is_stmt 1 view .LVU3067
 9916              	.LBB1221:
2914:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9917              		.loc 1 2914 2 view .LVU3068
2915:src/keys.c    **** 
 9918              		.loc 1 2915 2 view .LVU3069
2915:src/keys.c    **** 
 9919              		.loc 1 2915 31 is_stmt 0 view .LVU3070
 9920 0c40 13F4004F 		tst	r3, #32768
 9921 0c44 14BF     		ite	ne
 9922 0c46 0B23     		movne	r3, #11
 9923 0c48 0A23     		moveq	r3, #10
 9924              	.LVL833:
2917:src/keys.c    **** 		if (--n < -2)
 9925              		.loc 1 2917 2 is_stmt 1 view .LVU3071
2917:src/keys.c    **** 		if (--n < -2)
 9926              		.loc 1 2917 5 is_stmt 0 view .LVU3072
 9927 0c4a 122C     		cmp	r4, #18
 9928 0c4c 00F0DE80 		beq	.L1407
2921:src/keys.c    **** 		if (++n > max)
 9929              		.loc 1 2921 7 is_stmt 1 view .LVU3073
2921:src/keys.c    **** 		if (++n > max)
 9930              		.loc 1 2921 10 is_stmt 0 view .LVU3074
 9931 0c50 182C     		cmp	r4, #24
 9932 0c52 00F00C81 		beq	.L1408
2925:src/keys.c    **** 		State2.status = 0;
 9933              		.loc 1 2925 7 is_stmt 1 view .LVU3075
2925:src/keys.c    **** 		State2.status = 0;
 9934              		.loc 1 2925 10 is_stmt 0 view .LVU3076
 9935 0c56 102C     		cmp	r4, #16
 9936 0c58 00F00984 		beq	.L1409
 9937              	.LBB1211:
2930:src/keys.c    **** 		if (nn <= 9)
ARM GAS  /tmp/ccvq0xdJ.s 			page 290


 9938              		.loc 1 2930 3 is_stmt 1 view .LVU3077
 9939              	.LVL834:
 9940              	.LBB1212:
 9941              	.LBI1212:
 210:src/keys.c    **** {
 9942              		.loc 1 210 14 view .LVU3078
 9943              	.LBB1213:
 212:src/keys.c    ****     // K00 - K05
 9944              		.loc 1 212 3 view .LVU3079
 234:src/keys.c    **** }
 9945              		.loc 1 234 3 view .LVU3080
 9946              	.LBB1214:
 9947              	.LBI1214:
 131:src/keys.c    **** {
 9948              		.loc 1 131 12 view .LVU3081
 9949              	.LBB1215:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9950              		.loc 1 133 2 view .LVU3082
 143:src/keys.c    **** }
 9951              		.loc 1 143 2 view .LVU3083
 143:src/keys.c    **** }
 9952              		.loc 1 143 23 is_stmt 0 view .LVU3084
 9953 0c5c 0C49     		ldr	r1, .L1447
 9954              	.LBE1215:
 9955              	.LBE1214:
 234:src/keys.c    **** }
 9956              		.loc 1 234 28 view .LVU3085
 9957 0c5e 0D48     		ldr	r0, .L1447+4
 9958              	.LBB1217:
 9959              	.LBB1216:
 143:src/keys.c    **** }
 9960              		.loc 1 143 23 view .LVU3086
 9961 0c60 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9962 0c62 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 9963 0c64 01F07F01 		and	r1, r1, #127
 9964              	.LVL835:
 143:src/keys.c    **** }
 9965              		.loc 1 143 23 view .LVU3087
 9966              	.LBE1216:
 9967              	.LBE1217:
 9968              	.LBE1213:
 9969              	.LBE1212:
2931:src/keys.c    **** 			n = nn;
 9970              		.loc 1 2931 3 is_stmt 1 view .LVU3088
2931:src/keys.c    **** 			n = nn;
 9971              		.loc 1 2931 6 is_stmt 0 view .LVU3089
 9972 0c68 0929     		cmp	r1, #9
 9973 0c6a 40F21C81 		bls	.L1137
2933:src/keys.c    **** 			n = n == max ? 10 : max;
 9974              		.loc 1 2933 11 view .LVU3090
 9975 0c6e 7029     		cmp	r1, #112
 9976              	.LBE1211:
2914:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9977              		.loc 1 2914 6 view .LVU3091
 9978 0c70 A2F10302 		sub	r2, r2, #3
 9979              	.LVL836:
 9980              	.LBB1218:
ARM GAS  /tmp/ccvq0xdJ.s 			page 291


2933:src/keys.c    **** 			n = n == max ? 10 : max;
 9981              		.loc 1 2933 8 is_stmt 1 view .LVU3092
2933:src/keys.c    **** 			n = n == max ? 10 : max;
 9982              		.loc 1 2933 11 is_stmt 0 view .LVU3093
 9983 0c74 00F04385 		beq	.L1410
2935:src/keys.c    **** 			n = 10; 
 9984              		.loc 1 2935 8 is_stmt 1 view .LVU3094
 9985              	.LBE1218:
2914:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9986              		.loc 1 2914 6 is_stmt 0 view .LVU3095
 9987 0c78 7F29     		cmp	r1, #127
 9988 0c7a 0CBF     		ite	eq
 9989 0c7c 1346     		moveq	r3, r2
 9990              	.LVL837:
2914:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9991              		.loc 1 2914 6 view .LVU3096
 9992 0c7e 0A23     		movne	r3, #10
 9993              	.LVL838:
 9994              	.L881:
2938:src/keys.c    **** 
 9995              		.loc 1 2938 2 is_stmt 1 view .LVU3097
2938:src/keys.c    **** 
 9996              		.loc 1 2938 20 is_stmt 0 view .LVU3098
 9997 0c80 0333     		adds	r3, r3, #3
 9998              	.LVL839:
2938:src/keys.c    **** 
 9999              		.loc 1 2938 16 view .LVU3099
 10000 0c82 88F80C30 		strb	r3, [r8, #12]
2940:src/keys.c    **** }
 10001              		.loc 1 2940 2 is_stmt 1 view .LVU3100
 10002              	.LBE1221:
 10003              	.LBE1229:
3293:src/keys.c    **** 
 10004              		.loc 1 3293 10 is_stmt 0 view .LVU3101
 10005 0c86 3324     		movs	r4, #51
 10006              	.LVL840:
3293:src/keys.c    **** 
 10007              		.loc 1 3293 10 view .LVU3102
 10008 0c88 3368     		ldr	r3, [r6]
 10009              	.LVL841:
 10010              	.LBB1230:
 10011              	.LBB1222:
2940:src/keys.c    **** }
 10012              		.loc 1 2940 9 view .LVU3103
 10013 0c8a FFF713BA 		b	.L797
 10014              	.L1448:
 10015 0c8e 00BF     		.align	2
 10016              	.L1447:
 10017 0c90 00000000 		.word	.LANCHOR6
 10018 0c94 00000000 		.word	.LANCHOR5
 10019 0c98 00000000 		.word	main_ram
 10020 0c9c 00000000 		.word	.LANCHOR19
 10021 0ca0 00000000 		.word	.LANCHOR17
 10022 0ca4 00000000 		.word	.LANCHOR15
 10023 0ca8 00080800 		.word	526336
 10024              	.LVL842:
 10025              	.L1370:
ARM GAS  /tmp/ccvq0xdJ.s 			page 292


2940:src/keys.c    **** }
 10026              		.loc 1 2940 9 view .LVU3104
 10027              	.LBE1222:
 10028              	.LBE1230:
3316:src/keys.c    **** 
 10029              		.loc 1 3316 3 is_stmt 1 view .LVU3105
 10030              	.LBB1231:
 10031              	.LBB1232:
 10032              	.LBB1233:
 10033              	.LBB1234:
 10034              	.LBB1235:
 10035              	.LBB1236:
 10036              	.LBB1237:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10037              		.loc 1 97 18 is_stmt 0 view .LVU3106
 10038 0cac FFF7FEFF 		bl	shift_down
 10039              	.LVL843:
 10040              	.LBE1237:
 10041              	.LBE1236:
 10042              	.LBE1235:
 10043              	.LBE1234:
 10044              	.LBE1233:
 10045              	.LBE1232:
 10046              	.LBE1231:
3316:src/keys.c    **** 
 10047              		.loc 1 3316 10 view .LVU3107
 10048 0cb0 E4B2     		uxtb	r4, r4
 10049              	.LVL844:
 10050              	.LBB1263:
 10051              	.LBI1231:
1642:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 10052              		.loc 1 1642 12 is_stmt 1 view .LVU3108
 10053              	.LBB1254:
1643:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 10054              		.loc 1 1643 2 view .LVU3109
1648:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 10055              		.loc 1 1648 2 view .LVU3110
1652:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 10056              		.loc 1 1652 2 view .LVU3111
 10057              	.LBB1246:
 10058              	.LBI1233:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10059              		.loc 1 114 13 view .LVU3112
 10060              	.LBE1246:
 10061              	.LBE1254:
 10062              	.LBE1263:
 10063              	.LBE1437:
 10064              	.LBE1510:
 115:src/keys.c    **** }
 10065              		.loc 1 115 2 view .LVU3113
 10066              	.LBB1511:
 10067              	.LBB1438:
 10068              	.LBB1264:
 10069              	.LBB1255:
 10070              	.LBB1247:
 10071              	.LBB1243:
 10072              	.LBI1234:
ARM GAS  /tmp/ccvq0xdJ.s 			page 293


 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10073              		.loc 1 104 20 view .LVU3114
 10074              	.LBB1240:
 105:src/keys.c    **** 	State2.shifts = shift;
 10075              		.loc 1 105 2 view .LVU3115
 10076              	.LBB1239:
 10077              	.LBI1236:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10078              		.loc 1 96 13 view .LVU3116
 10079              	.LBB1238:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10080              		.loc 1 97 2 view .LVU3117
  98:src/keys.c    **** }
 10081              		.loc 1 98 2 view .LVU3118
  98:src/keys.c    **** }
 10082              		.loc 1 98 52 is_stmt 0 view .LVU3119
 10083 0cb2 8346     		mov	fp, r0
 10084 0cb4 08B9     		cbnz	r0, .L891
 10085 0cb6 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 10086              	.L891:
 10087              	.LVL845:
  98:src/keys.c    **** }
 10088              		.loc 1 98 52 view .LVU3120
 10089              	.LBE1238:
 10090              	.LBE1239:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10091              		.loc 1 106 2 is_stmt 1 view .LVU3121
 10092              	.LBE1240:
 10093              	.LBE1243:
 10094              	.LBE1247:
1655:src/keys.c    **** #ifdef DM42
 10095              		.loc 1 1655 15 is_stmt 0 view .LVU3122
 10096 0cba 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 10097              	.LBB1248:
 10098              	.LBB1244:
 10099              	.LBB1241:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10100              		.loc 1 106 16 view .LVU3123
 10101 0cbe 4FF0000A 		mov	r10, #0
 10102              	.LBE1241:
 10103              	.LBE1244:
 10104              	.LBE1248:
1655:src/keys.c    **** #ifdef DM42
 10105              		.loc 1 1655 15 view .LVU3124
 10106 0cc2 6AF38203 		bfi	r3, r10, #2, #1
 10107 0cc6 88F81530 		strb	r3, [r8, #21]
1653:src/keys.c    **** 
 10108              		.loc 1 1653 23 view .LVU3125
 10109 0cca ABF10103 		sub	r3, fp, #1
 10110 0cce B3FA83F3 		clz	r3, r3
 10111 0cd2 5B09     		lsrs	r3, r3, #5
 10112 0cd4 0093     		str	r3, [sp]
 10113              	.LBB1249:
 10114              	.LBB1245:
 10115              	.LBB1242:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10116              		.loc 1 106 16 view .LVU3126
ARM GAS  /tmp/ccvq0xdJ.s 			page 294


 10117 0cd6 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 10118              		.loc 1 108 2 is_stmt 1 view .LVU3127
 10119              	.LVL846:
 108:src/keys.c    **** }
 10120              		.loc 1 108 2 is_stmt 0 view .LVU3128
 10121              	.LBE1242:
 10122              	.LBE1245:
 10123              	.LBE1249:
1653:src/keys.c    **** 
 10124              		.loc 1 1653 2 is_stmt 1 view .LVU3129
1655:src/keys.c    **** #ifdef DM42
 10125              		.loc 1 1655 2 view .LVU3130
1657:src/keys.c    **** 	display_current_menu ();
 10126              		.loc 1 1657 2 view .LVU3131
 10127 0cda FFF7FEFF 		bl	set_last_menu
 10128              	.LVL847:
1658:src/keys.c    **** #endif
 10129              		.loc 1 1658 2 view .LVU3132
 10130 0cde FFF7FEFF 		bl	display_current_menu
 10131              	.LVL848:
1661:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10132              		.loc 1 1661 2 view .LVU3133
1661:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10133              		.loc 1 1661 5 is_stmt 0 view .LVU3134
 10134 0ce2 2D2C     		cmp	r4, #45
 10135 0ce4 00F09E80 		beq	.L1411
1670:src/keys.c    **** 	
 10136              		.loc 1 1670 2 is_stmt 1 view .LVU3135
1670:src/keys.c    **** 	
 10137              		.loc 1 1670 5 is_stmt 0 view .LVU3136
 10138 0ce8 BBF1000F 		cmp	fp, #0
 10139 0cec 3FF428AD 		beq	.L1347
1672:src/keys.c    **** 		return op_map[c - K10][f];
 10140              		.loc 1 1672 2 is_stmt 1 view .LVU3137
1672:src/keys.c    **** 		return op_map[c - K10][f];
 10141              		.loc 1 1672 15 is_stmt 0 view .LVU3138
 10142 0cf0 A31F     		subs	r3, r4, #6
1672:src/keys.c    **** 		return op_map[c - K10][f];
 10143              		.loc 1 1672 5 view .LVU3139
 10144 0cf2 DAB2     		uxtb	r2, r3
 10145 0cf4 022A     		cmp	r2, #2
 10146 0cf6 40F2CE80 		bls	.L1412
1675:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 10147              		.loc 1 1675 2 is_stmt 1 view .LVU3140
1675:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 10148              		.loc 1 1675 15 is_stmt 0 view .LVU3141
 10149 0cfa 0E3C     		subs	r4, r4, #14
 10150              	.LVL849:
1675:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 10151              		.loc 1 1675 5 view .LVU3142
 10152 0cfc E3B2     		uxtb	r3, r4
 10153 0cfe 012B     		cmp	r3, #1
 10154 0d00 3FF61EAD 		bhi	.L1347
1676:src/keys.c    **** 
 10155              		.loc 1 1676 3 is_stmt 1 view .LVU3143
 10156 0d04 D74A     		ldr	r2, .L1449
ARM GAS  /tmp/ccvq0xdJ.s 			page 295


 10157 0d06 0098     		ldr	r0, [sp]
 10158              	.LBB1250:
 10159              	.LBB1251:
 742:src/keys.c    **** }
 10160              		.loc 1 742 15 is_stmt 0 view .LVU3144
 10161 0d08 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 10162 0d0c 3368     		ldr	r3, [r6]
 10163              	.LBE1251:
 10164              	.LBE1250:
1676:src/keys.c    **** 
 10165              		.loc 1 1676 3 view .LVU3145
 10166 0d0e 02EB4402 		add	r2, r2, r4, lsl #1
1678:src/keys.c    **** }
 10167              		.loc 1 1678 9 view .LVU3146
 10168 0d12 3324     		movs	r4, #51
 10169              	.LVL850:
1676:src/keys.c    **** 
 10170              		.loc 1 1676 3 view .LVU3147
 10171 0d14 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 10172              	.LVL851:
 10173              	.LBB1253:
 10174              	.LBI1250:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10175              		.loc 1 741 13 is_stmt 1 view .LVU3148
 10176              	.LBB1252:
 742:src/keys.c    **** }
 10177              		.loc 1 742 2 view .LVU3149
 742:src/keys.c    **** }
 10178              		.loc 1 742 15 is_stmt 0 view .LVU3150
 10179 0d16 9142     		cmp	r1, r2
 10180 0d18 08BF     		it	eq
 10181 0d1a 0022     		moveq	r2, #0
 10182              	.LVL852:
 742:src/keys.c    **** }
 10183              		.loc 1 742 15 view .LVU3151
 10184 0d1c 88F81120 		strb	r2, [r8, #17]
 743:src/keys.c    **** 
 10185              		.loc 1 743 1 view .LVU3152
 10186 0d20 FFF7C8B9 		b	.L797
 10187              	.LVL853:
 10188              	.L870:
 743:src/keys.c    **** 
 10189              		.loc 1 743 1 view .LVU3153
 10190              	.LBE1252:
 10191              	.LBE1253:
 10192              	.LBE1255:
 10193              	.LBE1264:
 10194              	.LBB1265:
 10195              	.LBB1123:
2374:src/keys.c    **** 		// digit 2..9, -> or .
 10196              		.loc 1 2374 7 is_stmt 1 view .LVU3154
2374:src/keys.c    **** 		// digit 2..9, -> or .
 10197              		.loc 1 2374 10 is_stmt 0 view .LVU3155
 10198 0d24 092B     		cmp	r3, #9
 10199 0d26 3AD9     		bls	.L872
 10200              	.L864:
2374:src/keys.c    **** 		// digit 2..9, -> or .
ARM GAS  /tmp/ccvq0xdJ.s 			page 296


 10201              		.loc 1 2374 19 view .LVU3156
 10202 0d28 2C2C     		cmp	r4, #44
 10203 0d2a 38D0     		beq	.L872
2374:src/keys.c    **** 		// digit 2..9, -> or .
 10204              		.loc 1 2374 35 view .LVU3157
 10205 0d2c 262C     		cmp	r4, #38
 10206 0d2e 36D0     		beq	.L872
2380:src/keys.c    **** 	case K11:					// tests vs register
 10207              		.loc 1 2380 2 is_stmt 1 view .LVU3158
 10208 0d30 0C2C     		cmp	r4, #12
 10209 0d32 00F0BA80 		beq	.L875
 10210 0d36 102C     		cmp	r4, #16
 10211 0d38 3FF402AD 		beq	.L1347
 10212 0d3c 072C     		cmp	r4, #7
 10213 0d3e 00F0B480 		beq	.L875
 10214              	.L867:
2394:src/keys.c    **** 	State2.cmplx = cmpx;
 10215              		.loc 1 2394 2 view .LVU3159
2395:src/keys.c    **** 	return STATE_UNFINISHED;
 10216              		.loc 1 2395 15 is_stmt 0 view .LVU3160
 10217 0d42 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10218 0d46 3368     		ldr	r3, [r6]
2394:src/keys.c    **** 	State2.cmplx = cmpx;
 10219              		.loc 1 2394 14 view .LVU3161
 10220 0d48 88F80FA0 		strb	r10, [r8, #15]
2395:src/keys.c    **** 	return STATE_UNFINISHED;
 10221              		.loc 1 2395 2 is_stmt 1 view .LVU3162
2395:src/keys.c    **** 	return STATE_UNFINISHED;
 10222              		.loc 1 2395 15 is_stmt 0 view .LVU3163
 10223 0d4c 6EF34102 		bfi	r2, lr, #1, #1
 10224 0d50 88F81520 		strb	r2, [r8, #21]
2396:src/keys.c    **** }
 10225              		.loc 1 2396 2 is_stmt 1 view .LVU3164
2396:src/keys.c    **** }
 10226              		.loc 1 2396 9 is_stmt 0 view .LVU3165
 10227 0d54 3324     		movs	r4, #51
 10228              	.LVL854:
2396:src/keys.c    **** }
 10229              		.loc 1 2396 9 view .LVU3166
 10230 0d56 FFF7ADB9 		b	.L797
 10231              	.LVL855:
 10232              	.L1389:
2396:src/keys.c    **** }
 10233              		.loc 1 2396 9 view .LVU3167
 10234              	.LBE1123:
 10235              	.LBE1265:
 10236              	.LBB1266:
 10237              	.LBB1141:
1714:src/keys.c    **** 	}
 10238              		.loc 1 1714 3 is_stmt 1 view .LVU3168
1714:src/keys.c    **** 	}
 10239              		.loc 1 1714 8 is_stmt 0 view .LVU3169
 10240 0d5a FFF7FEFF 		bl	gtodot_digit
 10241              	.LVL856:
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10242              		.loc 1 1763 2 is_stmt 1 view .LVU3170
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
ARM GAS  /tmp/ccvq0xdJ.s 			page 297


 10243              		.loc 1 1763 5 is_stmt 0 view .LVU3171
 10244 0d5e 0028     		cmp	r0, #0
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10245              		.loc 1 1763 5 view .LVU3172
 10246 0d60 FFF6EEAC 		blt	.L1347
 10247              	.L835:
1764:src/keys.c    **** fin:		set_pc(rawpc);
 10248              		.loc 1 1764 3 is_stmt 1 view .LVU3173
1764:src/keys.c    **** fin:		set_pc(rawpc);
 10249              		.loc 1 1764 11 is_stmt 0 view .LVU3174
 10250 0d64 FFF7FEFF 		bl	find_user_pc
 10251              	.LVL857:
1764:src/keys.c    **** fin:		set_pc(rawpc);
 10252              		.loc 1 1764 11 view .LVU3175
 10253 0d68 79E6     		b	.L844
 10254              	.LVL858:
 10255              	.L865:
1764:src/keys.c    **** fin:		set_pc(rawpc);
 10256              		.loc 1 1764 11 view .LVU3176
 10257              	.LBE1141:
 10258              	.LBE1266:
 10259              	.LBB1267:
 10260              	.LBB1124:
2366:src/keys.c    **** 		// Special 0
 10261              		.loc 1 2366 7 is_stmt 1 view .LVU3177
2366:src/keys.c    **** 		// Special 0
 10262              		.loc 1 2366 10 is_stmt 0 view .LVU3178
 10263 0d6a 002B     		cmp	r3, #0
 10264 0d6c 40F01886 		bne	.L868
2368:src/keys.c    **** 	}
 10265              		.loc 1 2368 3 is_stmt 1 view .LVU3179
2368:src/keys.c    **** 	}
 10266              		.loc 1 2368 18 is_stmt 0 view .LVU3180
 10267 0d70 BEF1000F 		cmp	lr, #0
 10268 0d74 14BF     		ite	ne
 10269 0d76 2524     		movne	r4, #37
 10270              	.LVL859:
2368:src/keys.c    **** 	}
 10271              		.loc 1 2368 18 view .LVU3181
 10272 0d78 1724     		moveq	r4, #23
2368:src/keys.c    **** 	}
 10273              		.loc 1 2368 47 view .LVU3182
 10274 0d7a 5444     		add	r4, r4, r10
 10275 0d7c FFF714BB 		b	.L832
 10276              	.LVL860:
 10277              	.L1399:
2368:src/keys.c    **** 	}
 10278              		.loc 1 2368 47 view .LVU3183
 10279              	.LBE1124:
 10280              	.LBE1267:
 10281              	.LBB1268:
 10282              	.LBB863:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10283              		.loc 1 312 16 view .LVU3184
 10284 0d80 032B     		cmp	r3, #3
 10285 0d82 00F09E82 		beq	.L1413
 315:src/keys.c    ****     /*
ARM GAS  /tmp/ccvq0xdJ.s 			page 298


 10286              		.loc 1 315 3 is_stmt 1 view .LVU3185
 315:src/keys.c    ****     /*
 10287              		.loc 1 315 23 is_stmt 0 view .LVU3186
 10288 0d86 B848     		ldr	r0, .L1449+4
 10289 0d88 D8F81420 		ldr	r2, [r8, #20]
 315:src/keys.c    ****     /*
 10290              		.loc 1 315 6 view .LVU3187
 10291 0d8c 1042     		tst	r0, r2
 10292 0d8e 3FF45BAA 		beq	.L921
 10293              	.L914:
 10294              	.LBB854:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 10295              		.loc 1 384 5 is_stmt 1 view .LVU3188
 408:src/keys.c    **** 
 10296              		.loc 1 408 5 view .LVU3189
 413:src/keys.c    ****     col = smap[shift];
 10297              		.loc 1 413 5 view .LVU3190
 10298              	.LVL861:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10299              		.loc 1 414 5 view .LVU3191
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10300              		.loc 1 414 15 is_stmt 0 view .LVU3192
 10301 0d92 B648     		ldr	r0, .L1449+8
 413:src/keys.c    ****     col = smap[shift];
 10302              		.loc 1 413 8 view .LVU3193
 10303 0d94 B64A     		ldr	r2, .L1449+12
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10304              		.loc 1 414 9 view .LVU3194
 10305 0d96 10F803E0 		ldrb	lr, [r0, r3]	@ zero_extendqisi2
 10306              	.LVL862:
 415:src/keys.c    ****   }
 10307              		.loc 1 415 5 is_stmt 1 view .LVU3195
 415:src/keys.c    ****   }
 10308              		.loc 1 415 9 is_stmt 0 view .LVU3196
 10309 0d9a 0820     		movs	r0, #8
 10310 0d9c D3E6     		b	.L916
 10311              	.LVL863:
 10312              	.L872:
 415:src/keys.c    ****   }
 10313              		.loc 1 415 9 view .LVU3197
 10314              	.LBE854:
 10315              	.LBE863:
 10316              	.LBE1268:
 10317              	.LBB1269:
 10318              	.LBB1125:
2376:src/keys.c    **** 		return process_arg(c);
 10319              		.loc 1 2376 3 is_stmt 1 view .LVU3198
 10320              	.LBB1118:
 10321              	.LBI1118:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10322              		.loc 1 552 13 view .LVU3199
 10323              	.LBB1119:
 553:src/keys.c    **** 		return;
 10324              		.loc 1 553 2 view .LVU3200
 553:src/keys.c    **** 		return;
 10325              		.loc 1 553 6 is_stmt 0 view .LVU3201
 10326 0d9e FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccvq0xdJ.s 			page 299


 10327              	.LVL864:
 553:src/keys.c    **** 		return;
 10328              		.loc 1 553 5 view .LVU3202
 10329 0da2 18B9     		cbnz	r0, .L874
 10330 0da4 5FFA8BF0 		uxtb	r0, fp
 10331 0da8 FFF7FEFF 		bl	init_arg.part.0
 10332              	.LVL865:
 10333              	.L874:
 553:src/keys.c    **** 		return;
 10334              		.loc 1 553 5 view .LVU3203
 10335              	.LBE1119:
 10336              	.LBE1118:
2377:src/keys.c    **** 	}
 10337              		.loc 1 2377 3 is_stmt 1 view .LVU3204
2377:src/keys.c    **** 	}
 10338              		.loc 1 2377 10 is_stmt 0 view .LVU3205
 10339 0dac 2046     		mov	r0, r4
 10340 0dae FFF7FEFF 		bl	process_arg
 10341              	.LVL866:
 10342 0db2 0446     		mov	r4, r0
 10343              	.LVL867:
2377:src/keys.c    **** 	}
 10344              		.loc 1 2377 10 view .LVU3206
 10345 0db4 FFF7F8BA 		b	.L832
 10346              	.LVL868:
 10347              	.L1367:
2377:src/keys.c    **** 	}
 10348              		.loc 1 2377 10 view .LVU3207
 10349              	.LBE1125:
 10350              	.LBE1269:
3299:src/keys.c    **** 		return STATE_UNFINISHED;
 10351              		.loc 1 3299 3 is_stmt 1 view .LVU3208
 10352              	.LBB1270:
 10353              	.LBI1270:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10354              		.loc 1 121 13 view .LVU3209
 10355              	.LBB1271:
 122:src/keys.c    **** }
 10356              		.loc 1 122 2 view .LVU3210
 122:src/keys.c    **** }
 10357              		.loc 1 122 16 is_stmt 0 view .LVU3211
 10358 0db8 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 10359 0dbc 3368     		ldr	r3, [r6]
 10360 0dbe 013A     		subs	r2, r2, #1
 10361 0dc0 18BF     		it	ne
 10362 0dc2 0122     		movne	r2, #1
 10363 0dc4 88F81020 		strb	r2, [r8, #16]
 10364              	.LVL869:
 122:src/keys.c    **** }
 10365              		.loc 1 122 16 view .LVU3212
 10366              	.LBE1271:
 10367              	.LBE1270:
3300:src/keys.c    **** 	}
 10368              		.loc 1 3300 3 is_stmt 1 view .LVU3213
3300:src/keys.c    **** 	}
 10369              		.loc 1 3300 10 is_stmt 0 view .LVU3214
 10370 0dc8 3324     		movs	r4, #51
ARM GAS  /tmp/ccvq0xdJ.s 			page 300


 10371              	.LVL870:
3300:src/keys.c    **** 	}
 10372              		.loc 1 3300 10 view .LVU3215
 10373 0dca FFF773B9 		b	.L797
 10374              	.LVL871:
 10375              	.L1368:
3303:src/keys.c    **** 		return STATE_UNFINISHED;
 10376              		.loc 1 3303 3 is_stmt 1 view .LVU3216
 10377              	.LBB1272:
 10378              	.LBI1272:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10379              		.loc 1 121 13 view .LVU3217
 10380              	.LBB1273:
 122:src/keys.c    **** }
 10381              		.loc 1 122 2 view .LVU3218
 122:src/keys.c    **** }
 10382              		.loc 1 122 16 is_stmt 0 view .LVU3219
 10383 0dce 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 10384 0dd2 3368     		ldr	r3, [r6]
 10385 0dd4 0229     		cmp	r1, #2
 10386 0dd6 18BF     		it	ne
 10387 0dd8 0222     		movne	r2, #2
 10388 0dda 88F81020 		strb	r2, [r8, #16]
 10389              	.LVL872:
 122:src/keys.c    **** }
 10390              		.loc 1 122 16 view .LVU3220
 10391              	.LBE1273:
 10392              	.LBE1272:
3304:src/keys.c    **** 	}
 10393              		.loc 1 3304 3 is_stmt 1 view .LVU3221
3304:src/keys.c    **** 	}
 10394              		.loc 1 3304 10 is_stmt 0 view .LVU3222
 10395 0dde 3324     		movs	r4, #51
 10396              	.LVL873:
3304:src/keys.c    **** 	}
 10397              		.loc 1 3304 10 view .LVU3223
 10398 0de0 FFF768B9 		b	.L797
 10399              	.LVL874:
 10400              	.L1386:
3304:src/keys.c    **** 	}
 10401              		.loc 1 3304 10 view .LVU3224
 10402 0de4 3368     		ldr	r3, [r6]
 10403              	.LBE1438:
 10404              	.LBE1511:
3408:src/keys.c    ****   //print_debug(60,c);
 10405              		.loc 1 3408 7 view .LVU3225
 10406 0de6 0025     		movs	r5, #0
 10407              	.LBB1512:
3591:src/keys.c    **** 	}
 10408              		.loc 1 3591 6 view .LVU3226
 10409 0de8 3324     		movs	r4, #51
 10410              	.LVL875:
3591:src/keys.c    **** 	}
 10411              		.loc 1 3591 6 view .LVU3227
 10412 0dea FFF763B9 		b	.L797
 10413              	.LVL876:
 10414              	.L1369:
ARM GAS  /tmp/ccvq0xdJ.s 			page 301


3591:src/keys.c    **** 	}
 10415              		.loc 1 3591 6 view .LVU3228
 10416              	.LBE1512:
 10417              	.LBB1513:
 10418              	.LBB1439:
3307:src/keys.c    **** 		State2.arrow = 0;
 10419              		.loc 1 3307 3 is_stmt 1 view .LVU3229
 10420              	.LBB1274:
 10421              	.LBI1274:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10422              		.loc 1 121 13 view .LVU3230
 10423              	.LBB1275:
 122:src/keys.c    **** }
 10424              		.loc 1 122 2 view .LVU3231
 122:src/keys.c    **** }
 10425              		.loc 1 122 16 is_stmt 0 view .LVU3232
 10426 0dee 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 10427              	.LVL877:
 122:src/keys.c    **** }
 10428              		.loc 1 122 16 view .LVU3233
 10429 0df2 3368     		ldr	r3, [r6]
 10430 0df4 032C     		cmp	r4, #3
 10431              	.LBE1275:
 10432              	.LBE1274:
3308:src/keys.c    **** 		return STATE_UNFINISHED;
 10433              		.loc 1 3308 16 view .LVU3234
 10434 0df6 60F38201 		bfi	r1, r0, #2, #1
 10435              	.LBB1278:
 10436              	.LBB1276:
 122:src/keys.c    **** }
 10437              		.loc 1 122 16 view .LVU3235
 10438 0dfa 18BF     		it	ne
 10439 0dfc 0322     		movne	r2, #3
 10440              	.LBE1276:
 10441              	.LBE1278:
3308:src/keys.c    **** 		return STATE_UNFINISHED;
 10442              		.loc 1 3308 16 view .LVU3236
 10443 0dfe 88F81510 		strb	r1, [r8, #21]
 10444              	.LBB1279:
 10445              	.LBB1277:
 122:src/keys.c    **** }
 10446              		.loc 1 122 16 view .LVU3237
 10447 0e02 88F81020 		strb	r2, [r8, #16]
 10448              	.LVL878:
 122:src/keys.c    **** }
 10449              		.loc 1 122 16 view .LVU3238
 10450              	.LBE1277:
 10451              	.LBE1279:
3308:src/keys.c    **** 		return STATE_UNFINISHED;
 10452              		.loc 1 3308 3 is_stmt 1 view .LVU3239
3309:src/keys.c    **** 	}
 10453              		.loc 1 3309 3 view .LVU3240
3309:src/keys.c    **** 	}
 10454              		.loc 1 3309 10 is_stmt 0 view .LVU3241
 10455 0e06 3324     		movs	r4, #51
 10456 0e08 FFF754B9 		b	.L797
 10457              	.LVL879:
ARM GAS  /tmp/ccvq0xdJ.s 			page 302


 10458              	.L1407:
 10459              	.LBB1280:
 10460              	.LBB1223:
2918:src/keys.c    **** 			n = max;
 10461              		.loc 1 2918 3 is_stmt 1 view .LVU3242
2918:src/keys.c    **** 			n = max;
 10462              		.loc 1 2918 6 is_stmt 0 view .LVU3243
 10463 0e0c 111F     		subs	r1, r2, #4
 10464              	.LVL880:
2918:src/keys.c    **** 			n = max;
 10465              		.loc 1 2918 6 view .LVU3244
 10466 0e0e 012A     		cmp	r2, #1
 10467 0e10 18BF     		it	ne
 10468 0e12 0B46     		movne	r3, r1
 10469              	.LVL881:
2918:src/keys.c    **** 			n = max;
 10470              		.loc 1 2918 6 view .LVU3245
 10471 0e14 34E7     		b	.L881
 10472              	.LVL882:
 10473              	.L1390:
2918:src/keys.c    **** 			n = max;
 10474              		.loc 1 2918 6 view .LVU3246
 10475              	.LBE1223:
 10476              	.LBE1280:
 10477              	.LBB1281:
 10478              	.LBB1142:
1717:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10479              		.loc 1 1717 44 is_stmt 1 view .LVU3247
1717:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10480              		.loc 1 1717 52 is_stmt 0 view .LVU3248
 10481 0e16 0120     		movs	r0, #1
 10482 0e18 FFF7FEFF 		bl	gtodot_digit
 10483              	.LVL883:
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10484              		.loc 1 1763 2 is_stmt 1 view .LVU3249
 10485              	.LBE1142:
 10486              	.LBE1281:
3284:src/keys.c    **** 
 10487              		.loc 1 3284 10 is_stmt 0 view .LVU3250
 10488 0e1c 3324     		movs	r4, #51
 10489              	.LVL884:
3284:src/keys.c    **** 
 10490              		.loc 1 3284 10 view .LVU3251
 10491 0e1e 3368     		ldr	r3, [r6]
 10492 0e20 FFF748B9 		b	.L797
 10493              	.LVL885:
 10494              	.L1411:
 10495              	.LBB1282:
 10496              	.LBB1256:
1661:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10497              		.loc 1 1661 22 view .LVU3252
 10498 0e24 934B     		ldr	r3, .L1449+16
 10499 0e26 1B68     		ldr	r3, [r3]
1661:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10500              		.loc 1 1661 19 view .LVU3253
 10501 0e28 93F8DE17 		ldrb	r1, [r3, #2014]	@ zero_extendqisi2
 10502 0e2c 4907     		lsls	r1, r1, #29
ARM GAS  /tmp/ccvq0xdJ.s 			page 303


 10503 0e2e 40F15782 		bpl	.L893
1662:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10504              		.loc 1 1662 4 is_stmt 1 view .LVU3254
1662:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10505              		.loc 1 1662 8 is_stmt 0 view .LVU3255
 10506 0e32 93F8E437 		ldrb	r3, [r3, #2020]	@ zero_extendqisi2
1662:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10507              		.loc 1 1662 7 view .LVU3256
 10508 0e36 13F00403 		ands	r3, r3, #4
 10509 0e3a 40F0A983 		bne	.L1414
 10510              	.LVL886:
1662:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10511              		.loc 1 1662 7 view .LVU3257
 10512              	.LBE1256:
 10513              	.LBE1282:
 10514              	.LBE1439:
 10515              	.LBE1513:
3649:src/keys.c    **** 	NonProgrammable = 0;
 10516              		.loc 1 3649 7 is_stmt 1 view .LVU3258
3649:src/keys.c    **** 	NonProgrammable = 0;
 10517              		.loc 1 3649 11 is_stmt 0 view .LVU3259
 10518 0e3e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3649:src/keys.c    **** 	NonProgrammable = 0;
 10519              		.loc 1 3649 10 view .LVU3260
 10520 0e42 5006     		lsls	r0, r2, #25
 10521 0e44 40F15385 		bpl	.L1169
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10522              		.loc 1 3650 2 is_stmt 1 view .LVU3261
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10523              		.loc 1 3650 18 is_stmt 0 view .LVU3262
 10524 0e48 8B4A     		ldr	r2, .L1449+20
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10525              		.loc 1 3651 32 view .LVU3263
 10526 0e4a 4FF4E575 		mov	r5, #458
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10527              		.loc 1 3650 18 view .LVU3264
 10528 0e4e 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10529              		.loc 1 3651 2 is_stmt 1 view .LVU3265
 10530 0e50 D5E4     		b	.L1103
 10531              	.LVL887:
 10532              	.L866:
 10533              	.LBB1514:
 10534              	.LBB1440:
 10535              	.LBB1283:
 10536              	.LBB1126:
2364:src/keys.c    **** 	}
 10537              		.loc 1 2364 3 view .LVU3266
2364:src/keys.c    **** 	}
 10538              		.loc 1 2364 10 is_stmt 0 view .LVU3267
 10539 0e52 0BF12005 		add	r5, fp, #32
 10540 0e56 43EA0525 		orr	r5, r3, r5, lsl #8
 10541 0e5a 2C46     		mov	r4, r5
 10542              	.LVL888:
2364:src/keys.c    **** 	}
 10543              		.loc 1 2364 10 view .LVU3268
 10544 0e5c FFF75CBB 		b	.L859
ARM GAS  /tmp/ccvq0xdJ.s 			page 304


 10545              	.LVL889:
 10546              	.L1391:
2364:src/keys.c    **** 	}
 10547              		.loc 1 2364 10 view .LVU3269
 10548              	.LBE1126:
 10549              	.LBE1283:
 10550              	.LBB1284:
 10551              	.LBB1143:
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10552              		.loc 1 1718 44 is_stmt 1 view .LVU3270
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10553              		.loc 1 1718 52 is_stmt 0 view .LVU3271
 10554 0e60 0220     		movs	r0, #2
 10555 0e62 FFF7FEFF 		bl	gtodot_digit
 10556              	.LVL890:
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10557              		.loc 1 1763 2 is_stmt 1 view .LVU3272
 10558              	.LBE1143:
 10559              	.LBE1284:
3284:src/keys.c    **** 
 10560              		.loc 1 3284 10 is_stmt 0 view .LVU3273
 10561 0e66 3324     		movs	r4, #51
 10562              	.LVL891:
3284:src/keys.c    **** 
 10563              		.loc 1 3284 10 view .LVU3274
 10564 0e68 3368     		ldr	r3, [r6]
 10565 0e6a FFF723B9 		b	.L797
 10566              	.LVL892:
 10567              	.L1408:
 10568              	.LBB1285:
 10569              	.LBB1224:
2922:src/keys.c    **** 			n = -2;
 10570              		.loc 1 2922 3 is_stmt 1 view .LVU3275
2922:src/keys.c    **** 			n = -2;
 10571              		.loc 1 2922 6 is_stmt 0 view .LVU3276
 10572 0e6e 023A     		subs	r2, r2, #2
 10573              	.LVL893:
2923:src/keys.c    **** 	}
 10574              		.loc 1 2923 6 view .LVU3277
 10575 0e70 9A42     		cmp	r2, r3
 10576 0e72 D4BF     		ite	le
 10577 0e74 1346     		movle	r3, r2
 10578              	.LVL894:
2923:src/keys.c    **** 	}
 10579              		.loc 1 2923 6 view .LVU3278
 10580 0e76 6FF00103 		mvngt	r3, #1
 10581 0e7a 01E7     		b	.L881
 10582              	.LVL895:
 10583              	.L1401:
2923:src/keys.c    **** 	}
 10584              		.loc 1 2923 6 view .LVU3279
 10585              	.LBE1224:
 10586              	.LBE1285:
3324:src/keys.c    **** 		if (is_bad_cmdline())
 10587              		.loc 1 3324 2 is_stmt 1 view .LVU3280
3324:src/keys.c    **** 		if (is_bad_cmdline())
 10588              		.loc 1 3324 5 is_stmt 0 view .LVU3281
ARM GAS  /tmp/ccvq0xdJ.s 			page 305


 10589 0e7c BAF1000F 		cmp	r10, #0
 10590 0e80 7FF458AC 		bne	.L903
 10591 0e84 FFF7E3B9 		b	.L925
 10592              	.LVL896:
 10593              	.L1392:
 10594              	.LBB1286:
 10595              	.LBB1144:
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10596              		.loc 1 1719 44 is_stmt 1 view .LVU3282
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10597              		.loc 1 1719 52 is_stmt 0 view .LVU3283
 10598 0e88 0320     		movs	r0, #3
 10599 0e8a FFF7FEFF 		bl	gtodot_digit
 10600              	.LVL897:
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10601              		.loc 1 1763 2 is_stmt 1 view .LVU3284
 10602              	.LBE1144:
 10603              	.LBE1286:
3284:src/keys.c    **** 
 10604              		.loc 1 3284 10 is_stmt 0 view .LVU3285
 10605 0e8e 3324     		movs	r4, #51
 10606              	.LVL898:
3284:src/keys.c    **** 
 10607              		.loc 1 3284 10 view .LVU3286
 10608 0e90 3368     		ldr	r3, [r6]
 10609 0e92 FFF70FB9 		b	.L797
 10610              	.LVL899:
 10611              	.L1412:
 10612              	.LBB1287:
 10613              	.LBB1257:
1673:src/keys.c    **** 
 10614              		.loc 1 1673 3 is_stmt 1 view .LVU3287
1673:src/keys.c    **** 
 10615              		.loc 1 1673 25 is_stmt 0 view .LVU3288
 10616 0e96 009A     		ldr	r2, [sp]
 10617 0e98 02EB4303 		add	r3, r2, r3, lsl #1
 10618 0e9c 774A     		ldr	r2, .L1449+24
 10619 0e9e 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10620              	.LVL900:
1673:src/keys.c    **** 
 10621              		.loc 1 1673 25 view .LVU3289
 10622 0ea2 FFF781BA 		b	.L832
 10623              	.LVL901:
 10624              	.L1137:
1673:src/keys.c    **** 
 10625              		.loc 1 1673 25 view .LVU3290
 10626              	.LBE1257:
 10627              	.LBE1287:
 10628              	.LBB1288:
 10629              	.LBB1225:
 10630              	.LBB1219:
2930:src/keys.c    **** 		if (nn <= 9)
 10631              		.loc 1 2930 7 view .LVU3291
 10632 0ea6 0B46     		mov	r3, r1
 10633              	.LVL902:
2930:src/keys.c    **** 		if (nn <= 9)
 10634              		.loc 1 2930 7 view .LVU3292
ARM GAS  /tmp/ccvq0xdJ.s 			page 306


 10635 0ea8 EAE6     		b	.L881
 10636              	.LVL903:
 10637              	.L875:
2930:src/keys.c    **** 		if (nn <= 9)
 10638              		.loc 1 2930 7 view .LVU3293
 10639              	.LBE1219:
 10640              	.LBE1225:
 10641              	.LBE1288:
 10642              	.LBB1289:
 10643              	.LBB1127:
2383:src/keys.c    **** 		return STATE_UNFINISHED;
 10644              		.loc 1 2383 3 is_stmt 1 view .LVU3294
 10645              	.LBB1120:
 10646              	.LBI1120:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10647              		.loc 1 552 13 view .LVU3295
 10648              	.LBB1121:
 553:src/keys.c    **** 		return;
 10649              		.loc 1 553 2 view .LVU3296
 553:src/keys.c    **** 		return;
 10650              		.loc 1 553 6 is_stmt 0 view .LVU3297
 10651 0eaa FFF7FEFF 		bl	is_bad_cmdline
 10652              	.LVL904:
 553:src/keys.c    **** 		return;
 10653              		.loc 1 553 5 view .LVU3298
 10654 0eae 0446     		mov	r4, r0
 10655              	.LVL905:
 553:src/keys.c    **** 		return;
 10656              		.loc 1 553 5 view .LVU3299
 10657 0eb0 0028     		cmp	r0, #0
 10658 0eb2 7FF445AC 		bne	.L1347
 10659 0eb6 5FFA8BF0 		uxtb	r0, fp
 10660 0eba FFF7FEFF 		bl	init_arg.part.0
 10661              	.LVL906:
 10662              	.LBE1121:
 10663              	.LBE1120:
 10664              	.LBE1127:
 10665              	.LBE1289:
 10666              	.LBE1440:
 10667              	.LBE1514:
3408:src/keys.c    ****   //print_debug(60,c);
 10668              		.loc 1 3408 7 view .LVU3300
 10669 0ebe 2546     		mov	r5, r4
 10670 0ec0 3368     		ldr	r3, [r6]
 10671              	.LBB1515:
 10672              	.LBB1441:
 10673              	.LBB1290:
 10674              	.LBB1128:
2384:src/keys.c    **** 
 10675              		.loc 1 2384 10 view .LVU3301
 10676 0ec2 3324     		movs	r4, #51
 10677 0ec4 FFF7F6B8 		b	.L797
 10678              	.LVL907:
 10679              	.L1374:
2384:src/keys.c    **** 
 10680              		.loc 1 2384 10 view .LVU3302
 10681              	.LBE1128:
ARM GAS  /tmp/ccvq0xdJ.s 			page 307


 10682              	.LBE1290:
3339:src/keys.c    **** 
 10683              		.loc 1 3339 3 is_stmt 1 view .LVU3303
 10684              	.LBB1291:
 10685              	.LBI1059:
2992:src/keys.c    **** 	unsigned int pc = State2.digval;
 10686              		.loc 1 2992 12 view .LVU3304
 10687              	.LBB1086:
2993:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10688              		.loc 1 2993 2 view .LVU3305
2995:src/keys.c    **** 	const int opcode = getprog(pc);
 10689              		.loc 1 2995 27 is_stmt 0 view .LVU3306
 10690 0ec8 262C     		cmp	r4, #38
2993:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10691              		.loc 1 2993 15 view .LVU3307
 10692 0eca B8F808B0 		ldrh	fp, [r8, #8]
 10693              	.LVL908:
2994:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10694              		.loc 1 2994 2 is_stmt 1 view .LVU3308
2995:src/keys.c    **** 	const int opcode = getprog(pc);
 10695              		.loc 1 2995 27 is_stmt 0 view .LVU3309
 10696 0ece 00F0AF83 		beq	.L1151
 10697              	.LVL909:
 10698              	.LBB1069:
 10699              	.LBI1069:
 210:src/keys.c    **** {
 10700              		.loc 1 210 14 is_stmt 1 view .LVU3310
 10701              	.LBB1070:
 212:src/keys.c    ****     // K00 - K05
 10702              		.loc 1 212 3 view .LVU3311
 234:src/keys.c    **** }
 10703              		.loc 1 234 3 view .LVU3312
 10704              	.LBB1071:
 10705              	.LBI1071:
 131:src/keys.c    **** {
 10706              		.loc 1 131 12 view .LVU3313
 10707              	.LBB1072:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10708              		.loc 1 133 2 view .LVU3314
 143:src/keys.c    **** }
 10709              		.loc 1 143 2 view .LVU3315
 143:src/keys.c    **** }
 10710              		.loc 1 143 23 is_stmt 0 view .LVU3316
 10711 0ed2 6B4B     		ldr	r3, .L1449+28
 10712              	.LBE1072:
 10713              	.LBE1071:
 234:src/keys.c    **** }
 10714              		.loc 1 234 28 view .LVU3317
 10715 0ed4 6B4A     		ldr	r2, .L1449+32
 10716              	.LBB1074:
 10717              	.LBB1073:
 143:src/keys.c    **** }
 10718              		.loc 1 143 23 view .LVU3318
 10719 0ed6 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10720              	.LBE1073:
 10721              	.LBE1074:
 234:src/keys.c    **** }
ARM GAS  /tmp/ccvq0xdJ.s 			page 308


 10722              		.loc 1 234 10 view .LVU3319
 10723 0ed8 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 10724              	.LBE1070:
 10725              	.LBE1069:
2995:src/keys.c    **** 	const int opcode = getprog(pc);
 10726              		.loc 1 2995 27 view .LVU3320
 10727 0edc 2AF0800A 		bic	r10, r10, #128
 10728              	.L945:
 10729              	.LVL910:
2996:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10730              		.loc 1 2996 2 is_stmt 1 view .LVU3321
2996:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10731              		.loc 1 2996 21 is_stmt 0 view .LVU3322
 10732 0ee0 5846     		mov	r0, fp
 10733 0ee2 FFF7FEFF 		bl	getprog
 10734              	.LVL911:
2997:src/keys.c    **** 	const int direct = State2.runmode;
 10735              		.loc 1 2997 2 is_stmt 1 view .LVU3323
2997:src/keys.c    **** 	const int direct = State2.runmode;
 10736              		.loc 1 2997 20 is_stmt 0 view .LVU3324
 10737 0ee6 00F47040 		and	r0, r0, #61440
 10738              	.LVL912:
2997:src/keys.c    **** 	const int direct = State2.runmode;
 10739              		.loc 1 2997 63 view .LVU3325
 10740 0eea B0F5704F 		cmp	r0, #61440
 10741 0eee 00F0D284 		beq	.L1415
 10742 0ef2 0022     		movs	r2, #0
 10743              	.L946:
 10744              	.LVL913:
2998:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10745              		.loc 1 2998 2 is_stmt 1 view .LVU3326
2998:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10746              		.loc 1 2998 27 is_stmt 0 view .LVU3327
 10747 0ef4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10748 0ef8 0192     		str	r2, [sp, #4]
 10749              	.LVL914:
2998:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10750              		.loc 1 2998 27 view .LVU3328
 10751 0efa C3F38013 		ubfx	r3, r3, #6, #1
 10752 0efe 0093     		str	r3, [sp]
 10753              	.LVL915:
2999:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10754              		.loc 1 2999 2 is_stmt 1 view .LVU3329
 10755              	.LBB1075:
 10756              	.LBI1075:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10757              		.loc 1 114 13 view .LVU3330
 10758              	.LBE1075:
 10759              	.LBE1086:
 10760              	.LBE1291:
 10761              	.LBE1441:
 10762              	.LBE1515:
 115:src/keys.c    **** }
 10763              		.loc 1 115 2 view .LVU3331
 10764              	.LBB1516:
 10765              	.LBB1442:
 10766              	.LBB1292:
ARM GAS  /tmp/ccvq0xdJ.s 			page 309


 10767              	.LBB1087:
 10768              	.LBB1082:
 10769              	.LBB1076:
 10770              	.LBI1076:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10771              		.loc 1 104 20 view .LVU3332
 10772              	.LBB1077:
 105:src/keys.c    **** 	State2.shifts = shift;
 10773              		.loc 1 105 2 view .LVU3333
 10774              	.LBB1078:
 10775              	.LBI1078:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10776              		.loc 1 96 13 view .LVU3334
 10777              	.LBB1079:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10778              		.loc 1 97 2 view .LVU3335
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10779              		.loc 1 97 18 is_stmt 0 view .LVU3336
 10780 0f00 FFF7FEFF 		bl	shift_down
 10781              	.LVL916:
  98:src/keys.c    **** }
 10782              		.loc 1 98 2 is_stmt 1 view .LVU3337
  98:src/keys.c    **** }
 10783              		.loc 1 98 52 is_stmt 0 view .LVU3338
 10784 0f04 019A     		ldr	r2, [sp, #4]
 10785 0f06 0346     		mov	r3, r0
 10786 0f08 08B9     		cbnz	r0, .L947
 10787 0f0a 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10788              	.L947:
 10789              	.LVL917:
  98:src/keys.c    **** }
 10790              		.loc 1 98 52 view .LVU3339
 10791              	.LBE1079:
 10792              	.LBE1078:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10793              		.loc 1 106 2 is_stmt 1 view .LVU3340
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10794              		.loc 1 106 16 is_stmt 0 view .LVU3341
 10795 0f0e 0021     		movs	r1, #0
 10796              	.LBE1077:
 10797              	.LBE1076:
 10798              	.LBE1082:
3002:src/keys.c    **** 		// Digits take you to that segment
 10799              		.loc 1 3002 5 view .LVU3342
 10800 0f10 BAF1020F 		cmp	r10, #2
 10801              	.LBB1083:
 10802              	.LBB1081:
 10803              	.LBB1080:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10804              		.loc 1 106 16 view .LVU3343
 10805 0f14 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10806              		.loc 1 108 2 is_stmt 1 view .LVU3344
 10807              	.LVL918:
 108:src/keys.c    **** }
 10808              		.loc 1 108 2 is_stmt 0 view .LVU3345
 10809              	.LBE1080:
ARM GAS  /tmp/ccvq0xdJ.s 			page 310


 10810              	.LBE1081:
 10811              	.LBE1083:
3000:src/keys.c    **** 
 10812              		.loc 1 3000 2 is_stmt 1 view .LVU3346
3002:src/keys.c    **** 		// Digits take you to that segment
 10813              		.loc 1 3002 2 view .LVU3347
3002:src/keys.c    **** 		// Digits take you to that segment
 10814              		.loc 1 3002 5 is_stmt 0 view .LVU3348
 10815 0f18 40F29984 		bls	.L1416
3011:src/keys.c    **** 
 10816              		.loc 1 3011 2 is_stmt 1 view .LVU3349
3011:src/keys.c    **** 
 10817              		.loc 1 3011 12 is_stmt 0 view .LVU3350
 10818 0f1c 44EA0323 		orr	r3, r4, r3, lsl #8
 10819              	.LVL919:
3011:src/keys.c    **** 
 10820              		.loc 1 3011 2 view .LVU3351
 10821 0f20 272B     		cmp	r3, #39
 10822 0f22 00F3B980 		bgt	.L950
 10823 0f26 042B     		cmp	r3, #4
 10824 0f28 7FF70AAC 		ble	.L1347
 10825 0f2c 053B     		subs	r3, r3, #5
 10826 0f2e 222B     		cmp	r3, #34
 10827 0f30 3FF606AC 		bhi	.L1347
 10828 0f34 01A1     		adr	r1, .L959
 10829 0f36 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10830 0f3a 00BF     		.p2align 2
 10831              	.L959:
 10832 0f3c 27100000 		.word	.L964+1
 10833 0f40 17100000 		.word	.L963+1
 10834 0f44 17100000 		.word	.L963+1
 10835 0f48 41070000 		.word	.L1347+1
 10836 0f4c 41070000 		.word	.L1347+1
 10837 0f50 41070000 		.word	.L1347+1
 10838 0f54 41070000 		.word	.L1347+1
 10839 0f58 6B070000 		.word	.L1154+1
 10840 0f5c 41070000 		.word	.L1347+1
 10841 0f60 41070000 		.word	.L1347+1
 10842 0f64 41070000 		.word	.L1347+1
 10843 0f68 49100000 		.word	.L962+1
 10844 0f6c 41070000 		.word	.L1347+1
 10845 0f70 35100000 		.word	.L961+1
 10846 0f74 41070000 		.word	.L1347+1
 10847 0f78 41070000 		.word	.L1347+1
 10848 0f7c 41070000 		.word	.L1347+1
 10849 0f80 41070000 		.word	.L1347+1
 10850 0f84 41070000 		.word	.L1347+1
 10851 0f88 D50F0000 		.word	.L960+1
 10852 0f8c 41070000 		.word	.L1347+1
 10853 0f90 41070000 		.word	.L1347+1
 10854 0f94 41070000 		.word	.L1347+1
 10855 0f98 41070000 		.word	.L1347+1
 10856 0f9c 41070000 		.word	.L1347+1
 10857 0fa0 41070000 		.word	.L1347+1
 10858 0fa4 41070000 		.word	.L1347+1
 10859 0fa8 41070000 		.word	.L1347+1
 10860 0fac 41070000 		.word	.L1347+1
ARM GAS  /tmp/ccvq0xdJ.s 			page 311


 10861 0fb0 41070000 		.word	.L1347+1
 10862 0fb4 41070000 		.word	.L1347+1
 10863 0fb8 41070000 		.word	.L1347+1
 10864 0fbc 41070000 		.word	.L1347+1
 10865 0fc0 41070000 		.word	.L1347+1
 10866 0fc4 EB0F0000 		.word	.L958+1
 10867              		.p2align 1
 10868              	.L953:
3018:src/keys.c    **** 	case K_DOWN:				// Find next label
 10869              		.loc 1 3018 3 is_stmt 1 view .LVU3352
3018:src/keys.c    **** 	case K_DOWN:				// Find next label
 10870              		.loc 1 3018 8 is_stmt 0 view .LVU3353
 10871 0fc8 5846     		mov	r0, fp
 10872 0fca 0122     		movs	r2, #1
 10873 0fcc 0021     		movs	r1, #0
 10874 0fce FFF7FEFF 		bl	advance_to_next_label
 10875              	.LVL920:
 10876 0fd2 8346     		mov	fp, r0
 10877              	.LVL921:
 10878              	.L960:
3021:src/keys.c    **** 		return STATE_UNFINISHED;
 10879              		.loc 1 3021 3 is_stmt 1 view .LVU3354
3021:src/keys.c    **** 		return STATE_UNFINISHED;
 10880              		.loc 1 3021 19 is_stmt 0 view .LVU3355
 10881 0fd4 5846     		mov	r0, fp
 10882 0fd6 0022     		movs	r2, #0
 10883 0fd8 0121     		movs	r1, #1
 10884 0fda FFF7FEFF 		bl	advance_to_next_label
 10885              	.LVL922:
3022:src/keys.c    **** 
 10886              		.loc 1 3022 10 view .LVU3356
 10887 0fde 3324     		movs	r4, #51
 10888              	.LVL923:
3022:src/keys.c    **** 
 10889              		.loc 1 3022 10 view .LVU3357
 10890 0fe0 3368     		ldr	r3, [r6]
3021:src/keys.c    **** 		return STATE_UNFINISHED;
 10891              		.loc 1 3021 17 view .LVU3358
 10892 0fe2 A8F80800 		strh	r0, [r8, #8]	@ movhi
3022:src/keys.c    **** 
 10893              		.loc 1 3022 3 is_stmt 1 view .LVU3359
3022:src/keys.c    **** 
 10894              		.loc 1 3022 10 is_stmt 0 view .LVU3360
 10895 0fe6 FFF765B8 		b	.L797
 10896              	.LVL924:
 10897              	.L958:
3073:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10898              		.loc 1 3073 3 is_stmt 1 view .LVU3361
3073:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10899              		.loc 1 3073 6 is_stmt 0 view .LVU3362
 10900 0fea 009B     		ldr	r3, [sp]
 10901 0fec 002B     		cmp	r3, #0
 10902 0fee 3FF4A7AB 		beq	.L1347
3073:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10903              		.loc 1 3073 14 view .LVU3363
 10904 0ff2 002A     		cmp	r2, #0
 10905 0ff4 3FF4A4AB 		beq	.L1347
ARM GAS  /tmp/ccvq0xdJ.s 			page 312


3074:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10906              		.loc 1 3074 4 is_stmt 1 view .LVU3364
 10907 0ff8 5946     		mov	r1, fp
 10908 0ffa 0120     		movs	r0, #1
 10909 0ffc FFF7FEFF 		bl	cmdgtocommon
 10910              	.LVL925:
3075:src/keys.c    **** 			break;
 10911              		.loc 1 3075 4 view .LVU3365
3076:src/keys.c    **** 		}
 10912              		.loc 1 3076 4 view .LVU3366
3087:src/keys.c    **** 	State2.labellist = 0;
 10913              		.loc 1 3087 2 view .LVU3367
3088:src/keys.c    **** 	return check_confirm(op);
 10914              		.loc 1 3088 19 is_stmt 0 view .LVU3368
 10915 1000 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3087:src/keys.c    **** 	State2.labellist = 0;
 10916              		.loc 1 3087 16 view .LVU3369
 10917 1004 0023     		movs	r3, #0
3088:src/keys.c    **** 	return check_confirm(op);
 10918              		.loc 1 3088 19 view .LVU3370
 10919 1006 63F38202 		bfi	r2, r3, #2, #1
 10920 100a 88F81720 		strb	r2, [r8, #23]
3087:src/keys.c    **** 	State2.labellist = 0;
 10921              		.loc 1 3087 16 view .LVU3371
 10922 100e A8F80830 		strh	r3, [r8, #8]	@ movhi
3088:src/keys.c    **** 	return check_confirm(op);
 10923              		.loc 1 3088 2 is_stmt 1 view .LVU3372
3089:src/keys.c    **** }
 10924              		.loc 1 3089 2 view .LVU3373
 10925              	.LVL926:
 10926              	.LBB1084:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10927              		.loc 1 714 12 view .LVU3374
 10928              	.LBB1065:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10929              		.loc 1 715 2 view .LVU3375
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10930              		.loc 1 715 2 is_stmt 0 view .LVU3376
 10931              	.LBE1065:
 10932              	.LBE1084:
 10933              	.LBE1087:
 10934              	.LBE1292:
 10935              	.LBE1442:
 10936              	.LBE1516:
3613:src/keys.c    ****     case STATE_SST:
 10937              		.loc 1 3613 5 is_stmt 1 view .LVU3377
 10938 1012 FFF759B9 		b	.L807
 10939              	.LVL927:
 10940              	.L963:
 10941              	.LBB1517:
 10942              	.LBB1443:
 10943              	.LBB1293:
 10944              	.LBB1088:
3043:src/keys.c    **** 	  //#endif
 10945              		.loc 1 3043 3 view .LVU3378
3043:src/keys.c    **** 	  //#endif
 10946              		.loc 1 3043 38 is_stmt 0 view .LVU3379
ARM GAS  /tmp/ccvq0xdJ.s 			page 313


 10947 1016 062C     		cmp	r4, #6
 10948 1018 40F2B114 		movw	r4, #433
 10949              	.LVL928:
3043:src/keys.c    **** 	  //#endif
 10950              		.loc 1 3043 38 view .LVU3380
 10951 101c 08BF     		it	eq
 10952 101e 4FF4D974 		moveq	r4, #434
 10953 1022 FFF7A3BB 		b	.L956
 10954              	.LVL929:
 10955              	.L964:
 10956              	.L969:
3051:src/keys.c    **** 		goto xeq_or_gto;
 10957              		.loc 1 3051 3 is_stmt 1 view .LVU3381
3051:src/keys.c    **** 		goto xeq_or_gto;
 10958              		.loc 1 3051 6 is_stmt 0 view .LVU3382
 10959 1026 02F50074 		add	r4, r2, #512
 10960              	.LVL930:
3052:src/keys.c    **** 
 10961              		.loc 1 3052 3 is_stmt 1 view .LVU3383
3057:src/keys.c    **** 			break;
 10962              		.loc 1 3057 3 view .LVU3384
3057:src/keys.c    **** 			break;
 10963              		.loc 1 3057 6 is_stmt 0 view .LVU3385
 10964 102a 002A     		cmp	r2, #0
 10965 102c 7FF4A1AB 		bne	.L968
 10966 1030 FFF786BB 		b	.L1347
 10967              	.LVL931:
 10968              	.L961:
3025:src/keys.c    **** 		return STATE_UNFINISHED;
 10969              		.loc 1 3025 3 is_stmt 1 view .LVU3386
3025:src/keys.c    **** 		return STATE_UNFINISHED;
 10970              		.loc 1 3025 19 is_stmt 0 view .LVU3387
 10971 1034 5846     		mov	r0, fp
 10972 1036 0021     		movs	r1, #0
 10973 1038 FFF7FEFF 		bl	advance_to_previous_label
 10974              	.LVL932:
3026:src/keys.c    **** 
 10975              		.loc 1 3026 10 view .LVU3388
 10976 103c 3324     		movs	r4, #51
 10977              	.LVL933:
3026:src/keys.c    **** 
 10978              		.loc 1 3026 10 view .LVU3389
 10979 103e 3368     		ldr	r3, [r6]
3025:src/keys.c    **** 		return STATE_UNFINISHED;
 10980              		.loc 1 3025 17 view .LVU3390
 10981 1040 A8F80800 		strh	r0, [r8, #8]	@ movhi
3026:src/keys.c    **** 
 10982              		.loc 1 3026 3 is_stmt 1 view .LVU3391
3026:src/keys.c    **** 
 10983              		.loc 1 3026 10 is_stmt 0 view .LVU3392
 10984 1044 FFF736B8 		b	.L797
 10985              	.LVL934:
 10986              	.L962:
3087:src/keys.c    **** 	State2.labellist = 0;
 10987              		.loc 1 3087 2 is_stmt 1 view .LVU3393
3088:src/keys.c    **** 	return check_confirm(op);
 10988              		.loc 1 3088 19 is_stmt 0 view .LVU3394
ARM GAS  /tmp/ccvq0xdJ.s 			page 314


 10989 1048 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10990 104c 3368     		ldr	r3, [r6]
3087:src/keys.c    **** 	State2.labellist = 0;
 10991              		.loc 1 3087 16 view .LVU3395
 10992 104e 0022     		movs	r2, #0
3088:src/keys.c    **** 	return check_confirm(op);
 10993              		.loc 1 3088 19 view .LVU3396
 10994 1050 62F38201 		bfi	r1, r2, #2, #1
 10995 1054 88F81710 		strb	r1, [r8, #23]
3087:src/keys.c    **** 	State2.labellist = 0;
 10996              		.loc 1 3087 16 view .LVU3397
 10997 1058 A8F80820 		strh	r2, [r8, #8]	@ movhi
3088:src/keys.c    **** 	return check_confirm(op);
 10998              		.loc 1 3088 2 is_stmt 1 view .LVU3398
3089:src/keys.c    **** }
 10999              		.loc 1 3089 2 view .LVU3399
 11000              	.LVL935:
 11001              	.LBB1085:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 11002              		.loc 1 714 12 view .LVU3400
 11003              	.LBB1066:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 11004              		.loc 1 715 2 view .LVU3401
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 11005              		.loc 1 715 2 is_stmt 0 view .LVU3402
 11006              	.LBE1066:
 11007              	.LBE1085:
 11008              	.LBE1088:
 11009              	.LBE1293:
 11010              	.LBE1443:
 11011              	.LBE1517:
3613:src/keys.c    ****     case STATE_SST:
 11012              		.loc 1 3613 5 is_stmt 1 view .LVU3403
 11013              	.LBB1518:
 11014              	.LBB1444:
 11015              	.LBB1294:
 11016              	.LBB1089:
3000:src/keys.c    **** 
 11017              		.loc 1 3000 6 is_stmt 0 view .LVU3404
 11018 105c 3324     		movs	r4, #51
 11019 105e FFF729B8 		b	.L797
 11020              	.L1450:
 11021 1062 00BF     		.align	2
 11022              	.L1449:
 11023 1064 00000000 		.word	.LANCHOR21
 11024 1068 00080800 		.word	526336
 11025 106c 00000000 		.word	.LANCHOR22
 11026 1070 00000000 		.word	.LANCHOR16
 11027 1074 00000000 		.word	main_ram
 11028 1078 00000000 		.word	NonProgrammable
 11029 107c 00000000 		.word	.LANCHOR20
 11030 1080 00000000 		.word	.LANCHOR6
 11031 1084 00000000 		.word	.LANCHOR5
 11032              	.LVL936:
 11033              	.L926:
3000:src/keys.c    **** 
 11034              		.loc 1 3000 6 view .LVU3405
ARM GAS  /tmp/ccvq0xdJ.s 			page 315


 11035              	.LBE1089:
 11036              	.LBE1294:
3327:src/keys.c    **** 		init_cat( cat );
 11037              		.loc 1 3327 3 is_stmt 1 view .LVU3406
 11038 1088 FFF7FEFF 		bl	init_cat
 11039              	.LVL937:
3328:src/keys.c    **** 		return STATE_UNFINISHED;
 11040              		.loc 1 3328 3 view .LVU3407
 11041 108c 5046     		mov	r0, r10
 11042 108e FFF7FEFF 		bl	init_cat
 11043              	.LVL938:
3329:src/keys.c    **** 	}
 11044              		.loc 1 3329 3 view .LVU3408
 11045              	.LBE1444:
 11046              	.LBE1518:
3408:src/keys.c    ****   //print_debug(60,c);
 11047              		.loc 1 3408 7 is_stmt 0 view .LVU3409
 11048 1092 2546     		mov	r5, r4
 11049 1094 FFF754BB 		b	.L1347
 11050              	.LVL939:
 11051              	.L950:
 11052              	.LBB1519:
 11053              	.LBB1445:
 11054              	.LBB1295:
 11055              	.LBB1090:
3011:src/keys.c    **** 
 11056              		.loc 1 3011 2 view .LVU3410
 11057 1098 B3F58C7F 		cmp	r3, #280
 11058 109c 48DC     		bgt	.L965
 11059 109e B3F5827F 		cmp	r3, #260
 11060 10a2 7FF74DAB 		ble	.L1347
 11061 10a6 6FF48271 		mvn	r1, #260
 11062 10aa 0B44     		add	r3, r3, r1
 11063 10ac 132B     		cmp	r3, #19
 11064 10ae 3FF647AB 		bhi	.L1347
 11065 10b2 01A1     		adr	r1, .L954
 11066 10b4 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 11067              		.p2align 2
 11068              	.L954:
 11069 10b8 11110000 		.word	.L957+1
 11070 10bc 41070000 		.word	.L1347+1
 11071 10c0 41070000 		.word	.L1347+1
 11072 10c4 41070000 		.word	.L1347+1
 11073 10c8 41070000 		.word	.L1347+1
 11074 10cc 41070000 		.word	.L1347+1
 11075 10d0 41070000 		.word	.L1347+1
 11076 10d4 41070000 		.word	.L1347+1
 11077 10d8 41070000 		.word	.L1347+1
 11078 10dc 41070000 		.word	.L1347+1
 11079 10e0 41070000 		.word	.L1347+1
 11080 10e4 09110000 		.word	.L1153+1
 11081 10e8 41070000 		.word	.L1347+1
 11082 10ec 1F110000 		.word	.L955+1
 11083 10f0 41070000 		.word	.L1347+1
 11084 10f4 41070000 		.word	.L1347+1
 11085 10f8 41070000 		.word	.L1347+1
 11086 10fc 41070000 		.word	.L1347+1
ARM GAS  /tmp/ccvq0xdJ.s 			page 316


 11087 1100 41070000 		.word	.L1347+1
 11088 1104 C90F0000 		.word	.L953+1
 11089              		.p2align 1
 11090              	.L1153:
 11091 1108 40F24314 		movw	r4, #323
 11092              	.LVL940:
3011:src/keys.c    **** 
 11093              		.loc 1 3011 2 view .LVU3411
 11094 110c FFF72EBB 		b	.L956
 11095              	.LVL941:
 11096              	.L957:
3055:src/keys.c    **** 	xeq_or_gto:
 11097              		.loc 1 3055 3 is_stmt 1 view .LVU3412
3055:src/keys.c    **** 	xeq_or_gto:
 11098              		.loc 1 3055 6 is_stmt 0 view .LVU3413
 11099 1110 02F54074 		add	r4, r2, #768
 11100              	.LVL942:
3057:src/keys.c    **** 			break;
 11101              		.loc 1 3057 3 is_stmt 1 view .LVU3414
3057:src/keys.c    **** 			break;
 11102              		.loc 1 3057 6 is_stmt 0 view .LVU3415
 11103 1114 002A     		cmp	r2, #0
 11104 1116 7FF42CAB 		bne	.L968
 11105 111a FFF711BB 		b	.L1347
 11106              	.LVL943:
 11107              	.L955:
3014:src/keys.c    **** 		goto next;
 11108              		.loc 1 3014 3 is_stmt 1 view .LVU3416
3014:src/keys.c    **** 		goto next;
 11109              		.loc 1 3014 8 is_stmt 0 view .LVU3417
 11110 111e 5846     		mov	r0, fp
 11111 1120 0121     		movs	r1, #1
 11112 1122 FFF7FEFF 		bl	advance_to_previous_label
 11113              	.LVL944:
 11114 1126 0121     		movs	r1, #1
 11115 1128 FFF7FEFF 		bl	advance_to_previous_label
 11116              	.LVL945:
 11117 112c 8346     		mov	fp, r0
 11118              	.LVL946:
3015:src/keys.c    **** 
 11119              		.loc 1 3015 3 is_stmt 1 view .LVU3418
 11120 112e 51E7     		b	.L960
 11121              	.LVL947:
 11122              	.L965:
3011:src/keys.c    **** 
 11123              		.loc 1 3011 2 is_stmt 0 view .LVU3419
 11124 1130 40F22732 		movw	r2, #807
 11125 1134 9342     		cmp	r3, r2
 11126 1136 7FF403AB 		bne	.L1347
3081:src/keys.c    **** 		goto set_pc_and_exit;
 11127              		.loc 1 3081 3 is_stmt 1 view .LVU3420
3081:src/keys.c    **** 		goto set_pc_and_exit;
 11128              		.loc 1 3081 18 is_stmt 0 view .LVU3421
 11129 113a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11130 113e 61F38613 		bfi	r3, r1, #6, #1
 11131 1142 88F81630 		strb	r3, [r8, #22]
3082:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 317


 11132              		.loc 1 3082 3 is_stmt 1 view .LVU3422
3000:src/keys.c    **** 
 11133              		.loc 1 3000 6 is_stmt 0 view .LVU3423
 11134 1146 3324     		movs	r4, #51
 11135              	.LVL948:
3082:src/keys.c    **** 
 11136              		.loc 1 3082 3 view .LVU3424
 11137 1148 FFF710BB 		b	.L956
 11138              	.LVL949:
 11139              	.L1375:
3082:src/keys.c    **** 
 11140              		.loc 1 3082 3 view .LVU3425
 11141              	.LBE1090:
 11142              	.LBE1295:
3342:src/keys.c    **** 
 11143              		.loc 1 3342 3 is_stmt 1 view .LVU3426
 11144              	.LBB1296:
 11145              	.LBI1296:
3123:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 11146              		.loc 1 3123 12 view .LVU3427
 11147              	.LBB1297:
3124:src/keys.c    **** 	enum shifts shift = reset_shift();
 11148              		.loc 1 3124 2 view .LVU3428
 11149              	.LBB1298:
 11150              	.LBI1298:
 210:src/keys.c    **** {
 11151              		.loc 1 210 14 view .LVU3429
 11152              	.LBB1299:
 212:src/keys.c    ****     // K00 - K05
 11153              		.loc 1 212 3 view .LVU3430
 234:src/keys.c    **** }
 11154              		.loc 1 234 3 view .LVU3431
 11155              	.LBB1300:
 11156              	.LBI1300:
 131:src/keys.c    **** {
 11157              		.loc 1 131 12 view .LVU3432
 11158              	.LBB1301:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11159              		.loc 1 133 2 view .LVU3433
 143:src/keys.c    **** }
 11160              		.loc 1 143 2 view .LVU3434
 143:src/keys.c    **** }
 11161              		.loc 1 143 23 is_stmt 0 view .LVU3435
 11162 114c D44B     		ldr	r3, .L1451
 11163              	.LBE1301:
 11164              	.LBE1300:
 234:src/keys.c    **** }
 11165              		.loc 1 234 28 view .LVU3436
 11166 114e D54A     		ldr	r2, .L1451+4
 11167              	.LBB1303:
 11168              	.LBB1302:
 143:src/keys.c    **** }
 11169              		.loc 1 143 23 view .LVU3437
 11170 1150 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 11171              	.LBE1302:
 11172              	.LBE1303:
 234:src/keys.c    **** }
ARM GAS  /tmp/ccvq0xdJ.s 			page 318


 11173              		.loc 1 234 10 view .LVU3438
 11174 1152 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 11175              	.LBE1299:
 11176              	.LBE1298:
 11177              	.LBB1304:
 11178              	.LBB1305:
 11179              	.LBB1306:
 11180              	.LBB1307:
 11181              	.LBB1308:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11182              		.loc 1 97 18 view .LVU3439
 11183 1156 FFF7FEFF 		bl	shift_down
 11184              	.LVL950:
 11185              	.LBE1308:
 11186              	.LBE1307:
 11187              	.LBE1306:
 11188              	.LBE1305:
 11189              	.LBE1304:
3124:src/keys.c    **** 	enum shifts shift = reset_shift();
 11190              		.loc 1 3124 15 view .LVU3440
 11191 115a 2BF0800B 		bic	fp, fp, #128
 11192              	.LVL951:
3125:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 11193              		.loc 1 3125 2 is_stmt 1 view .LVU3441
 11194              	.LBB1317:
 11195              	.LBI1304:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11196              		.loc 1 114 13 view .LVU3442
 11197              	.LBE1317:
 11198              	.LBE1297:
 11199              	.LBE1296:
 11200              	.LBE1445:
 11201              	.LBE1519:
 115:src/keys.c    **** }
 11202              		.loc 1 115 2 view .LVU3443
 11203              	.LBB1520:
 11204              	.LBB1446:
 11205              	.LBB1332:
 11206              	.LBB1324:
 11207              	.LBB1318:
 11208              	.LBB1314:
 11209              	.LBI1305:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11210              		.loc 1 104 20 view .LVU3444
 11211              	.LBB1311:
 105:src/keys.c    **** 	State2.shifts = shift;
 11212              		.loc 1 105 2 view .LVU3445
 11213              	.LBB1310:
 11214              	.LBI1307:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11215              		.loc 1 96 13 view .LVU3446
 11216              	.LBB1309:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11217              		.loc 1 97 2 view .LVU3447
  98:src/keys.c    **** }
 11218              		.loc 1 98 2 view .LVU3448
  98:src/keys.c    **** }
ARM GAS  /tmp/ccvq0xdJ.s 			page 319


 11219              		.loc 1 98 52 is_stmt 0 view .LVU3449
 11220 115e 8146     		mov	r9, r0
 11221 1160 08B9     		cbnz	r0, .L972
 11222 1162 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 11223              	.L972:
 11224              	.LVL952:
  98:src/keys.c    **** }
 11225              		.loc 1 98 52 view .LVU3450
 11226              	.LBE1309:
 11227              	.LBE1310:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11228              		.loc 1 106 2 is_stmt 1 view .LVU3451
 11229              	.LBE1311:
 11230              	.LBE1314:
 11231              	.LBE1318:
3126:src/keys.c    **** 	const int g_max = global_regs();
 11232              		.loc 1 3126 31 is_stmt 0 view .LVU3452
 11233 1166 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11234              	.LBB1319:
 11235              	.LBB1315:
 11236              	.LBB1312:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11237              		.loc 1 106 16 view .LVU3453
 11238 116a 0022     		movs	r2, #0
 11239              	.LBE1312:
 11240              	.LBE1315:
 11241              	.LBE1319:
3126:src/keys.c    **** 	const int g_max = global_regs();
 11242              		.loc 1 3126 46 view .LVU3454
 11243 116c DB07     		lsls	r3, r3, #31
 11244              	.LBB1320:
 11245              	.LBB1316:
 11246              	.LBB1313:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11247              		.loc 1 106 16 view .LVU3455
 11248 116e 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11249              		.loc 1 108 2 is_stmt 1 view .LVU3456
 11250              	.LVL953:
 108:src/keys.c    **** }
 11251              		.loc 1 108 2 is_stmt 0 view .LVU3457
 11252              	.LBE1313:
 11253              	.LBE1316:
 11254              	.LBE1320:
3126:src/keys.c    **** 	const int g_max = global_regs();
 11255              		.loc 1 3126 2 is_stmt 1 view .LVU3458
3126:src/keys.c    **** 	const int g_max = global_regs();
 11256              		.loc 1 3126 46 is_stmt 0 view .LVU3459
 11257 1172 00F15982 		bmi	.L1417
 11258 1176 4FF0700A 		mov	r10, #112
 11259              	.L973:
 11260              	.LVL954:
3127:src/keys.c    **** 
 11261              		.loc 1 3127 2 is_stmt 1 view .LVU3460
3127:src/keys.c    **** 
 11262              		.loc 1 3127 20 is_stmt 0 view .LVU3461
 11263 117a FFF7FEFF 		bl	global_regs
ARM GAS  /tmp/ccvq0xdJ.s 			page 320


 11264              	.LVL955:
3129:src/keys.c    **** 		if (local_regs())
 11265              		.loc 1 3129 2 is_stmt 1 view .LVU3462
3129:src/keys.c    **** 		if (local_regs())
 11266              		.loc 1 3129 5 is_stmt 0 view .LVU3463
 11267 117e BBF1700F 		cmp	fp, #112
 11268 1182 00F0F283 		beq	.L1418
3135:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11269              		.loc 1 3135 7 is_stmt 1 view .LVU3464
3135:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11270              		.loc 1 3135 10 is_stmt 0 view .LVU3465
 11271 1186 BBF1090F 		cmp	fp, #9
 11272 118a 40F29583 		bls	.L1419
3142:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11273              		.loc 1 3142 7 is_stmt 1 view .LVU3466
3142:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11274              		.loc 1 3142 29 is_stmt 0 view .LVU3467
 11275 118e 09F1FF33 		add	r3, r9, #-1
3142:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11276              		.loc 1 3142 10 view .LVU3468
 11277 1192 DBB2     		uxtb	r3, r3
 11278 1194 012B     		cmp	r3, #1
 11279 1196 40F23282 		bls	.L1420
 11280              	.L981:
3146:src/keys.c    **** 		State2.digval = n;
 11281              		.loc 1 3146 7 is_stmt 1 view .LVU3469
3146:src/keys.c    **** 		State2.digval = n;
 11282              		.loc 1 3146 10 is_stmt 0 view .LVU3470
 11283 119a BBF17F0F 		cmp	fp, #127
 11284 119e 40F06683 		bne	.L1421
3151:src/keys.c    **** 	case K_DOWN:
 11285              		.loc 1 3151 2 is_stmt 1 view .LVU3471
 11286 11a2 073C     		subs	r4, r4, #7
 11287              	.LVL956:
3151:src/keys.c    **** 	case K_DOWN:
 11288              		.loc 1 3151 2 is_stmt 0 view .LVU3472
 11289 11a4 112C     		cmp	r4, #17
 11290 11a6 3FF6CBAA 		bhi	.L1347
 11291 11aa 01A3     		adr	r3, .L1113
 11292 11ac 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11293              		.p2align 2
 11294              	.L1113:
 11295 11b0 F9110000 		.word	.L994+1
 11296 11b4 41070000 		.word	.L1347+1
 11297 11b8 41070000 		.word	.L1347+1
 11298 11bc 41070000 		.word	.L1347+1
 11299 11c0 41070000 		.word	.L1347+1
 11300 11c4 A9120000 		.word	.L993+1
 11301 11c8 41070000 		.word	.L1347+1
 11302 11cc 41070000 		.word	.L1347+1
 11303 11d0 41070000 		.word	.L1347+1
 11304 11d4 8B120000 		.word	.L991+1
 11305 11d8 41070000 		.word	.L1347+1
 11306 11dc 5D120000 		.word	.L987+1
 11307 11e0 41070000 		.word	.L1347+1
 11308 11e4 41070000 		.word	.L1347+1
 11309 11e8 41070000 		.word	.L1347+1
ARM GAS  /tmp/ccvq0xdJ.s 			page 321


 11310 11ec 41070000 		.word	.L1347+1
 11311 11f0 41070000 		.word	.L1347+1
 11312 11f4 27120000 		.word	.L984+1
 11313              		.p2align 1
 11314              	.L994:
3190:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11315              		.loc 1 3190 3 is_stmt 1 view .LVU3473
3190:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11316              		.loc 1 3190 6 is_stmt 0 view .LVU3474
 11317 11f8 B9F1000F 		cmp	r9, #0
 11318 11fc 7FF4A0AA 		bne	.L1347
3194:src/keys.c    **** #endif
 11319              		.loc 1 3194 4 is_stmt 1 view .LVU3475
3194:src/keys.c    **** #endif
 11320              		.loc 1 3194 8 is_stmt 0 view .LVU3476
 11321 1200 B8F80840 		ldrh	r4, [r8, #8]
 11322              	.LVL957:
3196:src/keys.c    **** 			State2.digval = 0;
 11323              		.loc 1 3196 4 is_stmt 1 view .LVU3477
3196:src/keys.c    **** 			State2.digval = 0;
 11324              		.loc 1 3196 24 is_stmt 0 view .LVU3478
 11325 1204 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 11326 1208 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 			return n;
 11327              		.loc 1 3198 19 view .LVU3479
 11328 120c 88F80A90 		strb	r9, [r8, #10]
3199:src/keys.c    **** 		}
 11329              		.loc 1 3199 11 view .LVU3480
 11330 1210 44F42854 		orr	r4, r4, #10752
 11331              	.LVL958:
3196:src/keys.c    **** 			State2.digval = 0;
 11332              		.loc 1 3196 24 view .LVU3481
 11333 1214 69F3C303 		bfi	r3, r9, #3, #1
3197:src/keys.c    **** 			State2.digval2 = 0;
 11334              		.loc 1 3197 18 view .LVU3482
 11335 1218 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11336 121c 2546     		mov	r5, r4
3196:src/keys.c    **** 			State2.digval = 0;
 11337              		.loc 1 3196 24 view .LVU3483
 11338 121e 88F81730 		strb	r3, [r8, #23]
3197:src/keys.c    **** 			State2.digval2 = 0;
 11339              		.loc 1 3197 4 is_stmt 1 view .LVU3484
3198:src/keys.c    **** 			return n;
 11340              		.loc 1 3198 4 view .LVU3485
3199:src/keys.c    **** 		}
 11341              		.loc 1 3199 4 view .LVU3486
3199:src/keys.c    **** 		}
 11342              		.loc 1 3199 11 is_stmt 0 view .LVU3487
 11343 1222 FFF779B9 		b	.L859
 11344              	.LVL959:
 11345              	.L984:
3153:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11346              		.loc 1 3153 3 is_stmt 1 view .LVU3488
3153:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11347              		.loc 1 3153 13 is_stmt 0 view .LVU3489
 11348 1226 B8F80830 		ldrh	r3, [r8, #8]
3153:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
ARM GAS  /tmp/ccvq0xdJ.s 			page 322


 11349              		.loc 1 3153 6 view .LVU3490
 11350 122a 002B     		cmp	r3, #0
 11351 122c 00F0C383 		beq	.L985
3154:src/keys.c    **** 				State2.digval = global_regs();
 11352              		.loc 1 3154 4 is_stmt 1 view .LVU3491
3154:src/keys.c    **** 				State2.digval = global_regs();
 11353              		.loc 1 3154 8 is_stmt 0 view .LVU3492
 11354 1230 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3154:src/keys.c    **** 				State2.digval = global_regs();
 11355              		.loc 1 3154 7 view .LVU3493
 11356 1234 D207     		lsls	r2, r2, #31
 11357 1236 02D4     		bmi	.L986
3154:src/keys.c    **** 				State2.digval = global_regs();
 11358              		.loc 1 3154 23 view .LVU3494
 11359 1238 642B     		cmp	r3, #100
 11360 123a 00F0C183 		beq	.L1422
 11361              	.LVL960:
 11362              	.L986:
3156:src/keys.c    **** 		}
 11363              		.loc 1 3156 4 is_stmt 1 view .LVU3495
 11364 123e B8F80830 		ldrh	r3, [r8, #8]
 11365 1242 013B     		subs	r3, r3, #1
 11366              	.LVL961:
 11367              	.L1337:
3156:src/keys.c    **** 		}
 11368              		.loc 1 3156 4 is_stmt 0 view .LVU3496
 11369 1244 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11370              	.LVL962:
 11371              	.L977:
3208:src/keys.c    **** 	return STATE_UNFINISHED;
 11372              		.loc 1 3208 2 is_stmt 1 view .LVU3497
3208:src/keys.c    **** 	return STATE_UNFINISHED;
 11373              		.loc 1 3208 16 is_stmt 0 view .LVU3498
 11374 1248 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 11375 124c 3368     		ldr	r3, [r6]
 11376 124e 6FF3C502 		bfc	r2, #3, #3
 11377 1252 88F81420 		strb	r2, [r8, #20]
3209:src/keys.c    **** }
 11378              		.loc 1 3209 2 is_stmt 1 view .LVU3499
3209:src/keys.c    **** }
 11379              		.loc 1 3209 9 is_stmt 0 view .LVU3500
 11380 1256 3324     		movs	r4, #51
 11381 1258 FEF72CBF 		b	.L797
 11382              	.LVL963:
 11383              	.L987:
3163:src/keys.c    **** 			State2.digval++;
 11384              		.loc 1 3163 3 is_stmt 1 view .LVU3501
3163:src/keys.c    **** 			State2.digval++;
 11385              		.loc 1 3163 13 is_stmt 0 view .LVU3502
 11386 125c B8F80830 		ldrh	r3, [r8, #8]
3163:src/keys.c    **** 			State2.digval++;
 11387              		.loc 1 3163 27 view .LVU3503
 11388 1260 0AF1FF3A 		add	r10, r10, #-1
 11389              	.LVL964:
3163:src/keys.c    **** 			State2.digval++;
 11390              		.loc 1 3163 6 view .LVU3504
 11391 1264 5345     		cmp	r3, r10
ARM GAS  /tmp/ccvq0xdJ.s 			page 323


 11392 1266 80F27683 		bge	.L988
3164:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11393              		.loc 1 3164 4 is_stmt 1 view .LVU3505
3165:src/keys.c    **** 				State2.digval = regX_idx;
 11394              		.loc 1 3165 8 is_stmt 0 view .LVU3506
 11395 126a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3164:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11396              		.loc 1 3164 17 view .LVU3507
 11397 126e 0133     		adds	r3, r3, #1
 11398 1270 9CB2     		uxth	r4, r3
 11399              	.LVL965:
3165:src/keys.c    **** 				State2.digval = regX_idx;
 11400              		.loc 1 3165 7 view .LVU3508
 11401 1272 D307     		lsls	r3, r2, #31
3164:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11402              		.loc 1 3164 17 view .LVU3509
 11403 1274 A8F80840 		strh	r4, [r8, #8]	@ movhi
3165:src/keys.c    **** 				State2.digval = regX_idx;
 11404              		.loc 1 3165 4 is_stmt 1 view .LVU3510
3165:src/keys.c    **** 				State2.digval = regX_idx;
 11405              		.loc 1 3165 7 is_stmt 0 view .LVU3511
 11406 1278 E6D4     		bmi	.L977
3165:src/keys.c    **** 				State2.digval = regX_idx;
 11407              		.loc 1 3165 43 view .LVU3512
 11408 127a FFF7FEFF 		bl	global_regs
 11409              	.LVL966:
3165:src/keys.c    **** 				State2.digval = regX_idx;
 11410              		.loc 1 3165 23 view .LVU3513
 11411 127e 8442     		cmp	r4, r0
 11412 1280 E2D1     		bne	.L977
3166:src/keys.c    **** 		}
 11413              		.loc 1 3166 5 is_stmt 1 view .LVU3514
3166:src/keys.c    **** 		}
 11414              		.loc 1 3166 19 is_stmt 0 view .LVU3515
 11415 1282 6423     		movs	r3, #100
 11416 1284 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11417 1288 DEE7     		b	.L977
 11418              	.LVL967:
 11419              	.L991:
3180:src/keys.c    **** 			return STATE_UNFINISHED;
 11420              		.loc 1 3180 3 is_stmt 1 view .LVU3516
3180:src/keys.c    **** 			return STATE_UNFINISHED;
 11421              		.loc 1 3180 7 is_stmt 0 view .LVU3517
 11422 128a 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3180:src/keys.c    **** 			return STATE_UNFINISHED;
 11423              		.loc 1 3180 6 view .LVU3518
 11424 128e 13F02002 		ands	r2, r3, #32
 11425 1292 7FF455AA 		bne	.L1347
3182:src/keys.c    **** 
 11426              		.loc 1 3182 3 is_stmt 1 view .LVU3519
3204:src/keys.c    **** 	State2.digval = 0;
 11427              		.loc 1 3204 2 view .LVU3520
3204:src/keys.c    **** 	State2.digval = 0;
 11428              		.loc 1 3204 22 is_stmt 0 view .LVU3521
 11429 1296 62F3C303 		bfi	r3, r2, #3, #1
 11430 129a 88F81730 		strb	r3, [r8, #23]
3205:src/keys.c    **** 	State2.digval2 = 0;
ARM GAS  /tmp/ccvq0xdJ.s 			page 324


 11431              		.loc 1 3205 2 is_stmt 1 view .LVU3522
3205:src/keys.c    **** 	State2.digval2 = 0;
 11432              		.loc 1 3205 16 is_stmt 0 view .LVU3523
 11433 129e A8F80820 		strh	r2, [r8, #8]	@ movhi
3206:src/keys.c    **** reset_window:
 11434              		.loc 1 3206 2 is_stmt 1 view .LVU3524
3206:src/keys.c    **** reset_window:
 11435              		.loc 1 3206 17 is_stmt 0 view .LVU3525
 11436 12a2 88F80A20 		strb	r2, [r8, #10]
 11437 12a6 CFE7     		b	.L977
 11438              	.L993:
3185:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11439              		.loc 1 3185 3 is_stmt 1 view .LVU3526
3185:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11440              		.loc 1 3185 6 is_stmt 0 view .LVU3527
 11441 12a8 B9F1010F 		cmp	r9, #1
 11442 12ac A4D1     		bne	.L994
3186:src/keys.c    **** 			goto reset_window;
 11443              		.loc 1 3186 4 is_stmt 1 view .LVU3528
3186:src/keys.c    **** 			goto reset_window;
 11444              		.loc 1 3186 25 is_stmt 0 view .LVU3529
 11445 12ae 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11446 12b2 43F00403 		orr	r3, r3, #4
 11447 12b6 88F81630 		strb	r3, [r8, #22]
3187:src/keys.c    **** 		}
 11448              		.loc 1 3187 4 is_stmt 1 view .LVU3530
 11449 12ba C5E7     		b	.L977
 11450              	.LVL968:
 11451              	.L853:
3187:src/keys.c    **** 		}
 11452              		.loc 1 3187 4 is_stmt 0 view .LVU3531
 11453              	.LBE1324:
 11454              	.LBE1332:
 11455              	.LBB1333:
 11456              	.LBB1164:
1621:src/keys.c    **** #endif
 11457              		.loc 1 1621 4 is_stmt 1 view .LVU3532
1621:src/keys.c    **** #endif
 11458              		.loc 1 1621 18 view .LVU3533
1621:src/keys.c    **** #endif
 11459              		.loc 1 1621 18 is_stmt 0 view .LVU3534
 11460 12bc 8BF0010B 		eor	fp, fp, #1
 11461              	.LVL969:
1621:src/keys.c    **** #endif
 11462              		.loc 1 1621 18 view .LVU3535
 11463 12c0 0AE4     		b	.L860
 11464              	.LVL970:
 11465              	.L1413:
1621:src/keys.c    **** #endif
 11466              		.loc 1 1621 18 view .LVU3536
 11467              	.LBE1164:
 11468              	.LBE1333:
 11469              	.LBB1334:
 11470              	.LBB864:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 11471              		.loc 1 312 74 view .LVU3537
 11472 12c2 D8F81420 		ldr	r2, [r8, #20]
ARM GAS  /tmp/ccvq0xdJ.s 			page 325


 11473 12c6 DFF8ECC1 		ldr	ip, .L1451+20
 11474 12ca 12EA0C0F 		tst	r2, ip
 11475 12ce 3FF431AA 		beq	.L903
 315:src/keys.c    ****     /*
 11476              		.loc 1 315 3 is_stmt 1 view .LVU3538
 315:src/keys.c    ****     /*
 11477              		.loc 1 315 23 is_stmt 0 view .LVU3539
 11478 12d2 DFF8E4C1 		ldr	ip, .L1451+24
 315:src/keys.c    ****     /*
 11479              		.loc 1 315 6 view .LVU3540
 11480 12d6 12EA0C0F 		tst	r2, ip
 11481 12da 3FF427AC 		beq	.L1128
 11482 12de 58E5     		b	.L914
 11483              	.LVL971:
 11484              	.L893:
 315:src/keys.c    ****     /*
 11485              		.loc 1 315 6 view .LVU3541
 11486              	.LBE864:
 11487              	.LBE1334:
 11488              	.LBB1335:
 11489              	.LBB1258:
1670:src/keys.c    **** 	
 11490              		.loc 1 1670 2 is_stmt 1 view .LVU3542
1670:src/keys.c    **** 	
 11491              		.loc 1 1670 5 is_stmt 0 view .LVU3543
 11492 12e0 BBF1000F 		cmp	fp, #0
 11493 12e4 7FF42CAA 		bne	.L1347
 11494 12e8 3368     		ldr	r3, [r6]
 11495              	.LBE1258:
 11496              	.LBE1335:
 11497              	.LBE1446:
 11498              	.LBE1520:
3408:src/keys.c    ****   //print_debug(60,c);
 11499              		.loc 1 3408 7 view .LVU3544
 11500 12ea 5D46     		mov	r5, fp
 11501              	.LBB1521:
 11502              	.LBB1447:
 11503              	.LBB1336:
 11504              	.LBB1259:
1670:src/keys.c    **** 	
 11505              		.loc 1 1670 31 view .LVU3545
 11506 12ec 3324     		movs	r4, #51
 11507              	.LVL972:
1670:src/keys.c    **** 	
 11508              		.loc 1 1670 31 view .LVU3546
 11509 12ee FEF7E1BE 		b	.L797
 11510              	.LVL973:
 11511              	.L1146:
1670:src/keys.c    **** 	
 11512              		.loc 1 1670 31 view .LVU3547
 11513              	.LBE1259:
 11514              	.LBE1336:
 11515              	.LBB1337:
 11516              	.LBB865:
 11517              	.LBB855:
 371:src/keys.c    **** #ifndef WINGUI
 11518              		.loc 1 371 8 view .LVU3548
ARM GAS  /tmp/ccvq0xdJ.s 			page 326


 11519 12f2 6D4A     		ldr	r2, .L1451+8
 377:src/keys.c    ****   }
 11520              		.loc 1 377 9 view .LVU3549
 11521 12f4 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 11522              		.loc 1 373 27 view .LVU3550
 11523 12f6 4FF0010E 		mov	lr, #1
 11524 12fa 24E4     		b	.L916
 11525              	.LVL974:
 11526              	.L1393:
 373:src/keys.c    **** #else
 11527              		.loc 1 373 27 view .LVU3551
 11528              	.LBE855:
 11529              	.LBE865:
 11530              	.LBE1337:
 11531              	.LBB1338:
 11532              	.LBB1145:
1720:src/keys.c    **** #endif
 11533              		.loc 1 1720 44 is_stmt 1 view .LVU3552
1720:src/keys.c    **** #endif
 11534              		.loc 1 1720 52 is_stmt 0 view .LVU3553
 11535 12fc 0420     		movs	r0, #4
 11536 12fe FFF7FEFF 		bl	gtodot_digit
 11537              	.LVL975:
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11538              		.loc 1 1763 2 is_stmt 1 view .LVU3554
 11539              	.LBE1145:
 11540              	.LBE1338:
3284:src/keys.c    **** 
 11541              		.loc 1 3284 10 is_stmt 0 view .LVU3555
 11542 1302 3324     		movs	r4, #51
 11543              	.LVL976:
3284:src/keys.c    **** 
 11544              		.loc 1 3284 10 view .LVU3556
 11545 1304 3368     		ldr	r3, [r6]
 11546 1306 FEF7D5BE 		b	.L797
 11547              	.LVL977:
 11548              	.L1394:
 11549              	.LBB1339:
 11550              	.LBB1146:
1724:src/keys.c    **** 		goto fin;
 11551              		.loc 1 1724 3 is_stmt 1 view .LVU3557
 11552              	.LBB1139:
 11553              	.LBI1139:
1696:src/keys.c    **** 	const int code = 100 + n;
 11554              		.loc 1 1696 12 view .LVU3558
 11555              	.LBB1140:
1697:src/keys.c    **** 	unsigned int pc = state_pc();
 11556              		.loc 1 1697 2 view .LVU3559
1698:src/keys.c    **** 
 11557              		.loc 1 1698 2 view .LVU3560
1698:src/keys.c    **** 
 11558              		.loc 1 1698 20 is_stmt 0 view .LVU3561
 11559 130a DFF8A4B1 		ldr	fp, .L1451+16
 11560 130e DBF80030 		ldr	r3, [fp]
 11561              	.LVL978:
1698:src/keys.c    **** 
ARM GAS  /tmp/ccvq0xdJ.s 			page 327


 11562              		.loc 1 1698 15 view .LVU3562
 11563 1312 B3F8E007 		ldrh	r0, [r3, #2016]
 11564              	.LVL979:
1700:src/keys.c    **** 		pc = 1;
 11565              		.loc 1 1700 2 is_stmt 1 view .LVU3563
1700:src/keys.c    **** 		pc = 1;
 11566              		.loc 1 1700 5 is_stmt 0 view .LVU3564
 11567 1316 830B     		lsrs	r3, r0, #14
1701:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11568              		.loc 1 1701 6 view .LVU3565
 11569 1318 032B     		cmp	r3, #3
 11570              	.LVL980:
1702:src/keys.c    **** 	if (pc > 0)
 11571              		.loc 1 1702 2 is_stmt 1 view .LVU3566
1702:src/keys.c    **** 	if (pc > 0)
 11572              		.loc 1 1702 7 is_stmt 0 view .LVU3567
 11573 131a 08BF     		it	eq
 11574 131c 0120     		moveq	r0, #1
 11575              	.LVL981:
1702:src/keys.c    **** 	if (pc > 0)
 11576              		.loc 1 1702 7 view .LVU3568
 11577 131e 6431     		adds	r1, r1, #100
 11578              	.LVL982:
1702:src/keys.c    **** 	if (pc > 0)
 11579              		.loc 1 1702 7 view .LVU3569
 11580 1320 0322     		movs	r2, #3
 11581              	.LVL983:
1702:src/keys.c    **** 	if (pc > 0)
 11582              		.loc 1 1702 7 view .LVU3570
 11583 1322 FFF7FEFF 		bl	find_label_from
 11584              	.LVL984:
1703:src/keys.c    **** 		return pc;
 11585              		.loc 1 1703 2 is_stmt 1 view .LVU3571
1703:src/keys.c    **** 		return pc;
 11586              		.loc 1 1703 5 is_stmt 0 view .LVU3572
 11587 1326 0028     		cmp	r0, #0
 11588 1328 7FF499AB 		bne	.L844
1705:src/keys.c    **** }
 11589              		.loc 1 1705 2 is_stmt 1 view .LVU3573
1705:src/keys.c    **** }
 11590              		.loc 1 1705 9 is_stmt 0 view .LVU3574
 11591 132c DBF80030 		ldr	r3, [fp]
 11592 1330 B3F8E007 		ldrh	r0, [r3, #2016]
 11593              	.LVL985:
1705:src/keys.c    **** }
 11594              		.loc 1 1705 9 view .LVU3575
 11595              	.LBE1140:
 11596              	.LBE1139:
1725:src/keys.c    **** 	}
 11597              		.loc 1 1725 3 is_stmt 1 view .LVU3576
 11598 1334 FFF793BB 		b	.L844
 11599              	.LVL986:
 11600              	.L1396:
1734:src/keys.c    **** 	}
 11601              		.loc 1 1734 3 view .LVU3577
1734:src/keys.c    **** 	}
 11602              		.loc 1 1734 6 is_stmt 0 view .LVU3578
ARM GAS  /tmp/ccvq0xdJ.s 			page 328


 11603 1338 B8F80800 		ldrh	r0, [r8, #8]
 11604              	.LVL987:
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11605              		.loc 1 1763 2 is_stmt 1 view .LVU3579
 11606 133c 12E5     		b	.L835
 11607              	.LVL988:
 11608              	.L1175:
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11609              		.loc 1 1763 2 is_stmt 0 view .LVU3580
 11610              	.LBE1146:
 11611              	.LBE1339:
 11612              	.LBB1340:
 11613              	.LBB1129:
2372:src/keys.c    **** 	}
 11614              		.loc 1 2372 18 view .LVU3581
 11615 133e 1E24     		movs	r4, #30
 11616              	.LVL989:
2372:src/keys.c    **** 	}
 11617              		.loc 1 2372 47 view .LVU3582
 11618 1340 5444     		add	r4, r4, r10
 11619 1342 FFF731B8 		b	.L832
 11620              	.LVL990:
 11621              	.L1174:
2372:src/keys.c    **** 	}
 11622              		.loc 1 2372 18 view .LVU3583
 11623 1346 2724     		movs	r4, #39
 11624              	.LVL991:
2372:src/keys.c    **** 	}
 11625              		.loc 1 2372 47 view .LVU3584
 11626 1348 5444     		add	r4, r4, r10
 11627 134a FFF72DB8 		b	.L832
 11628              	.LVL992:
 11629              	.L1376:
2372:src/keys.c    **** 	}
 11630              		.loc 1 2372 47 view .LVU3585
 11631              	.LBE1129:
 11632              	.LBE1340:
3345:src/keys.c    **** 
 11633              		.loc 1 3345 3 is_stmt 1 view .LVU3586
 11634              	.LBB1341:
 11635              	.LBI1341:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11636              		.loc 1 114 13 view .LVU3587
 11637              	.LBE1341:
 11638              	.LBE1447:
 11639              	.LBE1521:
 115:src/keys.c    **** }
 11640              		.loc 1 115 2 view .LVU3588
 11641              	.LBB1522:
 11642              	.LBB1448:
 11643              	.LBB1348:
 11644              	.LBB1342:
 11645              	.LBI1342:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11646              		.loc 1 104 20 view .LVU3589
 11647              	.LBB1343:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccvq0xdJ.s 			page 329


 11648              		.loc 1 105 2 view .LVU3590
 11649              	.LBB1344:
 11650              	.LBI1344:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11651              		.loc 1 96 13 view .LVU3591
 11652              	.LBB1345:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11653              		.loc 1 97 2 view .LVU3592
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11654              		.loc 1 97 18 is_stmt 0 view .LVU3593
 11655 134e FFF7FEFF 		bl	shift_down
 11656              	.LVL993:
  98:src/keys.c    **** }
 11657              		.loc 1 98 2 is_stmt 1 view .LVU3594
  98:src/keys.c    **** }
 11658              		.loc 1 98 52 is_stmt 0 view .LVU3595
 11659 1352 0146     		mov	r1, r0
 11660 1354 08B9     		cbnz	r0, .L997
 11661 1356 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11662              	.L997:
 11663              	.LVL994:
  98:src/keys.c    **** }
 11664              		.loc 1 98 52 view .LVU3596
 11665              	.LBE1345:
 11666              	.LBE1344:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11667              		.loc 1 106 2 is_stmt 1 view .LVU3597
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11668              		.loc 1 106 16 is_stmt 0 view .LVU3598
 11669 135a 0022     		movs	r2, #0
 11670              	.LBE1343:
 11671              	.LBE1342:
 11672              	.LBE1348:
3345:src/keys.c    **** 
 11673              		.loc 1 3345 10 view .LVU3599
 11674 135c 2046     		mov	r0, r4
 11675              	.LBB1349:
 11676              	.LBB1347:
 11677              	.LBB1346:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11678              		.loc 1 106 16 view .LVU3600
 11679 135e 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11680              		.loc 1 108 2 is_stmt 1 view .LVU3601
 11681              	.LVL995:
 108:src/keys.c    **** }
 11682              		.loc 1 108 2 is_stmt 0 view .LVU3602
 11683              	.LBE1346:
 11684              	.LBE1347:
 11685              	.LBE1349:
3345:src/keys.c    **** 
 11686              		.loc 1 3345 10 view .LVU3603
 11687 1362 FFF7FEFF 		bl	process_catalogue
 11688              	.LVL996:
3345:src/keys.c    **** 
 11689              		.loc 1 3345 10 view .LVU3604
 11690 1366 0446     		mov	r4, r0
ARM GAS  /tmp/ccvq0xdJ.s 			page 330


 11691 1368 FFF71EB8 		b	.L832
 11692              	.LVL997:
 11693              	.L1372:
 11694              	.LBB1350:
 11695              	.LBB866:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11696              		.loc 1 294 27 view .LVU3605
 11697 136c 242C     		cmp	r4, #36
 11698 136e 7EF46BAF 		bne	.L921
 11699              	.L1145:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11700              		.loc 1 295 11 view .LVU3606
 11701 1372 4FF0160A 		mov	r10, #22
 11702 1376 FFF7DDB9 		b	.L903
 11703              	.LVL998:
 11704              	.L1377:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11705              		.loc 1 295 11 view .LVU3607
 11706              	.LBE866:
 11707              	.LBE1350:
 11708              	.LBB1351:
3351:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
 11709              		.loc 1 3351 3 is_stmt 1 view .LVU3608
 11710              	.LBB1045:
 11711              	.LBI990:
1776:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11712              		.loc 1 1776 12 view .LVU3609
 11713              	.LBB1038:
1777:src/keys.c    ****         int op = STATE_UNFINISHED;
 11714              		.loc 1 1777 2 view .LVU3610
1777:src/keys.c    ****         int op = STATE_UNFINISHED;
 11715              		.loc 1 1777 33 is_stmt 0 view .LVU3611
 11716 137a 98F80D30 		ldrb	r3, [r8, #13]	@ zero_extendqisi2
 11717 137e 0093     		str	r3, [sp]
 11718              	.LBB992:
 11719              	.LBB993:
 11720              	.LBB994:
 11721              	.LBB995:
 11722              	.LBB996:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11723              		.loc 1 97 18 view .LVU3612
 11724 1380 FFF7FEFF 		bl	shift_down
 11725              	.LVL999:
 11726              	.LBE996:
 11727              	.LBE995:
 11728              	.LBE994:
 11729              	.LBE993:
 11730              	.LBE992:
1777:src/keys.c    ****         int op = STATE_UNFINISHED;
 11731              		.loc 1 1777 15 view .LVU3613
 11732 1384 009B     		ldr	r3, [sp]
 11733              	.LVL1000:
1778:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11734              		.loc 1 1778 9 is_stmt 1 view .LVU3614
1779:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11735              		.loc 1 1779 2 view .LVU3615
 11736              	.LBB1005:
ARM GAS  /tmp/ccvq0xdJ.s 			page 331


 11737              	.LBI992:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11738              		.loc 1 114 13 view .LVU3616
 11739              	.LBE1005:
 11740              	.LBE1038:
 11741              	.LBE1045:
 11742              	.LBE1351:
 11743              	.LBE1448:
 11744              	.LBE1522:
 115:src/keys.c    **** }
 11745              		.loc 1 115 2 view .LVU3617
 11746              	.LBB1523:
 11747              	.LBB1449:
 11748              	.LBB1352:
 11749              	.LBB1046:
 11750              	.LBB1039:
 11751              	.LBB1006:
 11752              	.LBB1002:
 11753              	.LBI993:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11754              		.loc 1 104 20 view .LVU3618
 11755              	.LBB999:
 105:src/keys.c    **** 	State2.shifts = shift;
 11756              		.loc 1 105 2 view .LVU3619
 11757              	.LBB998:
 11758              	.LBI995:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11759              		.loc 1 96 13 view .LVU3620
 11760              	.LBB997:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11761              		.loc 1 97 2 view .LVU3621
  98:src/keys.c    **** }
 11762              		.loc 1 98 2 view .LVU3622
  98:src/keys.c    **** }
 11763              		.loc 1 98 52 is_stmt 0 view .LVU3623
 11764 1386 8246     		mov	r10, r0
 11765 1388 08B9     		cbnz	r0, .L999
 11766 138a 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 11767              	.L999:
 11768              	.LVL1001:
  98:src/keys.c    **** }
 11769              		.loc 1 98 52 view .LVU3624
 11770              	.LBE997:
 11771              	.LBE998:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11772              		.loc 1 106 2 is_stmt 1 view .LVU3625
 11773              	.LBE999:
 11774              	.LBE1002:
 11775              	.LBE1006:
 11776              	.LBB1007:
 11777              	.LBB1008:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11778              		.loc 1 485 6 is_stmt 0 view .LVU3626
 11779 138e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 11780              	.LBE1008:
 11781              	.LBE1007:
 11782              	.LBB1024:
ARM GAS  /tmp/ccvq0xdJ.s 			page 332


 11783              	.LBB1003:
 11784              	.LBB1000:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11785              		.loc 1 106 16 view .LVU3627
 11786 1392 4FF0000E 		mov	lr, #0
 11787              	.LBE1000:
 11788              	.LBE1003:
 11789              	.LBE1024:
 11790              	.LBB1025:
 11791              	.LBB1019:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11792              		.loc 1 485 5 view .LVU3628
 11793 1396 D106     		lsls	r1, r2, #27
 11794              	.LBE1019:
 11795              	.LBE1025:
 11796              	.LBB1026:
 11797              	.LBB1004:
 11798              	.LBB1001:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11799              		.loc 1 106 16 view .LVU3629
 11800 1398 88F810E0 		strb	lr, [r8, #16]
 108:src/keys.c    **** }
 11801              		.loc 1 108 2 is_stmt 1 view .LVU3630
 11802              	.LVL1002:
 108:src/keys.c    **** }
 11803              		.loc 1 108 2 is_stmt 0 view .LVU3631
 11804              	.LBE1001:
 11805              	.LBE1004:
 11806              	.LBE1026:
1780:src/keys.c    **** 	State2.alpha_pos = 0;
 11807              		.loc 1 1780 2 is_stmt 1 view .LVU3632
1780:src/keys.c    **** 	State2.alpha_pos = 0;
 11808              		.loc 1 1780 11 is_stmt 0 view .LVU3633
 11809 139c 5046     		mov	r0, r10
 11810              	.LVL1003:
 11811              	.LBB1027:
 11812              	.LBI1007:
 435:src/keys.c    **** {
 11813              		.loc 1 435 12 is_stmt 1 view .LVU3634
 11814              	.LBB1020:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11815              		.loc 1 437 2 view .LVU3635
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11816              		.loc 1 485 2 view .LVU3636
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11817              		.loc 1 485 5 is_stmt 0 view .LVU3637
 11818 139e 40F18E80 		bpl	.L1000
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11819              		.loc 1 486 3 is_stmt 1 view .LVU3638
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11820              		.loc 1 486 6 is_stmt 0 view .LVU3639
 11821 13a2 BAF1000F 		cmp	r10, #0
 11822 13a6 00F08980 		beq	.L1159
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11823              		.loc 1 488 8 is_stmt 1 view .LVU3640
 11824              	.LBB1009:
 11825              	.LBB1010:
ARM GAS  /tmp/ccvq0xdJ.s 			page 333


 143:src/keys.c    **** }
 11826              		.loc 1 143 23 is_stmt 0 view .LVU3641
 11827 13aa 3D49     		ldr	r1, .L1451
 11828              	.LBE1010:
 11829              	.LBE1009:
 491:src/keys.c    **** }
 11830              		.loc 1 491 49 view .LVU3642
 11831 13ac 3F48     		ldr	r0, .L1451+12
 11832              	.LVL1004:
 11833              	.LBB1015:
 11834              	.LBB1011:
 143:src/keys.c    **** }
 11835              		.loc 1 143 23 view .LVU3643
 11836 13ae 11F804C0 		ldrb	ip, [r1, r4]	@ zero_extendqisi2
 11837              	.LBE1011:
 11838              	.LBE1015:
 11839              	.LBE1020:
 11840              	.LBE1027:
1781:src/keys.c    **** 
 11841              		.loc 1 1781 19 view .LVU3644
 11842 13b2 88F80DE0 		strb	lr, [r8, #13]
 11843              	.LBB1028:
 11844              	.LBB1021:
 489:src/keys.c    **** 	}
 11845              		.loc 1 489 10 view .LVU3645
 11846 13b6 BAF1020F 		cmp	r10, #2
 491:src/keys.c    **** }
 11847              		.loc 1 491 49 view .LVU3646
 11848 13ba 4FF0060E 		mov	lr, #6
 11849 13be 0EFB0C0C 		mla	ip, lr, ip, r0
 489:src/keys.c    **** 	}
 11850              		.loc 1 489 10 view .LVU3647
 11851 13c2 14BF     		ite	ne
 11852 13c4 5046     		movne	r0, r10
 11853 13c6 0520     		moveq	r0, #5
 11854              	.LVL1005:
 491:src/keys.c    **** }
 11855              		.loc 1 491 2 is_stmt 1 view .LVU3648
 11856              	.LBB1016:
 11857              	.LBI1009:
 131:src/keys.c    **** {
 11858              		.loc 1 131 12 view .LVU3649
 11859              	.LBB1012:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11860              		.loc 1 133 2 view .LVU3650
 143:src/keys.c    **** }
 11861              		.loc 1 143 2 view .LVU3651
 143:src/keys.c    **** }
 11862              		.loc 1 143 2 is_stmt 0 view .LVU3652
 11863 13c8 063C     		subs	r4, r4, #6
 11864              	.LVL1006:
 143:src/keys.c    **** }
 11865              		.loc 1 143 2 view .LVU3653
 11866              	.LBE1012:
 11867              	.LBE1016:
 491:src/keys.c    **** }
 11868              		.loc 1 491 49 view .LVU3654
ARM GAS  /tmp/ccvq0xdJ.s 			page 334


 11869 13ca 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 11870              	.LVL1007:
 491:src/keys.c    **** }
 11871              		.loc 1 491 49 view .LVU3655
 11872              	.LBE1021:
 11873              	.LBE1028:
1781:src/keys.c    **** 
 11874              		.loc 1 1781 2 is_stmt 1 view .LVU3656
1783:src/keys.c    **** 	case K10:	// STO
 11875              		.loc 1 1783 2 view .LVU3657
 11876 13ce 212C     		cmp	r4, #33
 11877 13d0 3FF61EA9 		bhi	.L1003
 11878 13d4 01A1     		adr	r1, .L1121
 11879 13d6 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 11880 13da 00BF     		.p2align 2
 11881              	.L1121:
 11882 13dc 1F1F0000 		.word	.L1012+1
 11883 13e0 FD1E0000 		.word	.L1011+1
 11884 13e4 11060000 		.word	.L1003+1
 11885 13e8 11060000 		.word	.L1003+1
 11886 13ec 11060000 		.word	.L1003+1
 11887 13f0 11060000 		.word	.L1003+1
 11888 13f4 AF1E0000 		.word	.L1010+1
 11889 13f8 11060000 		.word	.L1003+1
 11890 13fc 11060000 		.word	.L1003+1
 11891 1400 11060000 		.word	.L1003+1
 11892 1404 CD1D0000 		.word	.L1018+1
 11893 1408 11060000 		.word	.L1003+1
 11894 140c E7030000 		.word	.L1008+1
 11895 1410 11060000 		.word	.L1003+1
 11896 1414 11060000 		.word	.L1003+1
 11897 1418 11060000 		.word	.L1003+1
 11898 141c 11060000 		.word	.L1003+1
 11899 1420 11060000 		.word	.L1003+1
 11900 1424 3B1E0000 		.word	.L1007+1
 11901 1428 11060000 		.word	.L1003+1
 11902 142c 11060000 		.word	.L1003+1
 11903 1430 11060000 		.word	.L1003+1
 11904 1434 11060000 		.word	.L1003+1
 11905 1438 11060000 		.word	.L1003+1
 11906 143c 11060000 		.word	.L1003+1
 11907 1440 11060000 		.word	.L1003+1
 11908 1444 11060000 		.word	.L1003+1
 11909 1448 11060000 		.word	.L1003+1
 11910 144c 11060000 		.word	.L1003+1
 11911 1450 11060000 		.word	.L1003+1
 11912 1454 131E0000 		.word	.L1006+1
 11913 1458 11060000 		.word	.L1003+1
 11914 145c 11060000 		.word	.L1003+1
 11915 1460 031E0000 		.word	.L1004+1
 11916              	.LVL1008:
 11917              		.p2align 1
 11918              	.L1395:
1783:src/keys.c    **** 	case K10:	// STO
 11919              		.loc 1 1783 2 is_stmt 0 view .LVU3658
 11920              	.LBE1039:
 11921              	.LBE1046:
ARM GAS  /tmp/ccvq0xdJ.s 			page 335


 11922              	.LBE1352:
 11923              	.LBB1353:
 11924              	.LBB1147:
1729:src/keys.c    **** 		goto fin;
 11925              		.loc 1 1729 3 is_stmt 1 view .LVU3659
1729:src/keys.c    **** 		goto fin;
 11926              		.loc 1 1729 11 is_stmt 0 view .LVU3660
 11927 1464 124B     		ldr	r3, .L1451+16
 11928              	.LVL1009:
1729:src/keys.c    **** 		goto fin;
 11929              		.loc 1 1729 11 view .LVU3661
 11930 1466 1B68     		ldr	r3, [r3]
1729:src/keys.c    **** 		goto fin;
 11931              		.loc 1 1729 9 view .LVU3662
 11932 1468 5888     		ldrh	r0, [r3, #2]
 11933              	.LVL1010:
1730:src/keys.c    **** 	}
 11934              		.loc 1 1730 3 is_stmt 1 view .LVU3663
 11935 146a FFF7F8BA 		b	.L844
 11936              	.LVL1011:
 11937              	.L1409:
1730:src/keys.c    **** 	}
 11938              		.loc 1 1730 3 is_stmt 0 view .LVU3664
 11939              	.LBE1147:
 11940              	.LBE1353:
 11941              	.LBB1354:
 11942              	.LBB1226:
2926:src/keys.c    **** 		return STATE_UNFINISHED;
 11943              		.loc 1 2926 3 is_stmt 1 view .LVU3665
 11944 146e 3368     		ldr	r3, [r6]
 11945              	.LVL1012:
2926:src/keys.c    **** 		return STATE_UNFINISHED;
 11946              		.loc 1 2926 17 is_stmt 0 view .LVU3666
 11947 1470 88F80C00 		strb	r0, [r8, #12]
2927:src/keys.c    **** 	} 
 11948              		.loc 1 2927 3 is_stmt 1 view .LVU3667
 11949              	.LBE1226:
 11950              	.LBE1354:
3293:src/keys.c    **** 
 11951              		.loc 1 3293 10 is_stmt 0 view .LVU3668
 11952 1474 3324     		movs	r4, #51
 11953              	.LVL1013:
 11954              	.LBB1355:
 11955              	.LBB1227:
2927:src/keys.c    **** 	} 
 11956              		.loc 1 2927 10 view .LVU3669
 11957 1476 FEF71DBE 		b	.L797
 11958              	.LVL1014:
 11959              	.L1397:
2927:src/keys.c    **** 	} 
 11960              		.loc 1 2927 10 view .LVU3670
 11961              	.LBE1227:
 11962              	.LBE1355:
 11963              	.LBB1356:
 11964              	.LBB1148:
1738:src/keys.c    **** 			goto fin2;
 11965              		.loc 1 1738 3 is_stmt 1 view .LVU3671
ARM GAS  /tmp/ccvq0xdJ.s 			page 336


1738:src/keys.c    **** 			goto fin2;
 11966              		.loc 1 1738 13 is_stmt 0 view .LVU3672
 11967 147a 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11968              	.LVL1015:
1738:src/keys.c    **** 			goto fin2;
 11969              		.loc 1 1738 6 view .LVU3673
 11970 147e 002B     		cmp	r3, #0
 11971 1480 3FF4EFAA 		beq	.L848
1741:src/keys.c    **** 			State2.digval /= 10;
 11972              		.loc 1 1741 4 is_stmt 1 view .LVU3674
1741:src/keys.c    **** 			State2.digval /= 10;
 11973              		.loc 1 1741 19 is_stmt 0 view .LVU3675
 11974 1484 013B     		subs	r3, r3, #1
1742:src/keys.c    **** 		}
 11975              		.loc 1 1742 18 view .LVU3676
 11976 1486 B8F80820 		ldrh	r2, [r8, #8]
 11977              	.LVL1016:
1741:src/keys.c    **** 			State2.digval /= 10;
 11978              		.loc 1 1741 19 view .LVU3677
 11979 148a 88F80B30 		strb	r3, [r8, #11]
1742:src/keys.c    **** 		}
 11980              		.loc 1 1742 4 is_stmt 1 view .LVU3678
1742:src/keys.c    **** 		}
 11981              		.loc 1 1742 18 is_stmt 0 view .LVU3679
 11982 148e 0A21     		movs	r1, #10
 11983              	.LVL1017:
1742:src/keys.c    **** 		}
 11984              		.loc 1 1742 18 view .LVU3680
 11985 1490 3368     		ldr	r3, [r6]
 11986 1492 B2FBF1F2 		udiv	r2, r2, r1
 11987              	.LBE1148:
 11988              	.LBE1356:
3284:src/keys.c    **** 
 11989              		.loc 1 3284 10 view .LVU3681
 11990 1496 3324     		movs	r4, #51
 11991              	.LVL1018:
 11992              	.LBB1357:
 11993              	.LBB1149:
1742:src/keys.c    **** 		}
 11994              		.loc 1 1742 18 view .LVU3682
 11995 1498 A8F80820 		strh	r2, [r8, #8]	@ movhi
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11996              		.loc 1 1763 2 is_stmt 1 view .LVU3683
 11997 149c FEF70ABE 		b	.L797
 11998              	.L1452:
 11999              		.align	2
 12000              	.L1451:
 12001 14a0 00000000 		.word	.LANCHOR6
 12002 14a4 00000000 		.word	.LANCHOR5
 12003 14a8 00000000 		.word	.LANCHOR17
 12004 14ac 00000000 		.word	.LANCHOR15
 12005 14b0 00000000 		.word	main_ram
 12006 14b4 000A4000 		.word	4196864
 12007 14b8 00080800 		.word	526336
 12008              	.LVL1019:
 12009              	.L1159:
1763:src/keys.c    **** 		rawpc = find_user_pc(pc);
ARM GAS  /tmp/ccvq0xdJ.s 			page 337


 12010              		.loc 1 1763 2 is_stmt 0 view .LVU3684
 12011              	.LBE1149:
 12012              	.LBE1357:
 12013              	.LBB1358:
 12014              	.LBB1047:
 12015              	.LBB1040:
 12016              	.LBB1029:
 12017              	.LBB1022:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 12018              		.loc 1 487 10 view .LVU3685
 12019 14bc 0420     		movs	r0, #4
 12020              	.LVL1020:
 12021              	.L1000:
 491:src/keys.c    **** }
 12022              		.loc 1 491 2 is_stmt 1 view .LVU3686
 12023              	.LBB1017:
 131:src/keys.c    **** {
 12024              		.loc 1 131 12 view .LVU3687
 12025              	.LBB1013:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 12026              		.loc 1 133 2 view .LVU3688
 143:src/keys.c    **** }
 12027              		.loc 1 143 2 view .LVU3689
 143:src/keys.c    **** }
 12028              		.loc 1 143 23 is_stmt 0 view .LVU3690
 12029 14be DFF850C3 		ldr	ip, .L1453+12
 12030              	.LBE1013:
 12031              	.LBE1017:
 491:src/keys.c    **** }
 12032              		.loc 1 491 49 view .LVU3691
 12033 14c2 D049     		ldr	r1, .L1453
 12034              	.LBB1018:
 12035              	.LBB1014:
 143:src/keys.c    **** }
 12036              		.loc 1 143 23 view .LVU3692
 12037 14c4 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 12038              	.LBE1014:
 12039              	.LBE1018:
 491:src/keys.c    **** }
 12040              		.loc 1 491 49 view .LVU3693
 12041 14c8 4FF0060E 		mov	lr, #6
 12042 14cc 0EFB0C1C 		mla	ip, lr, ip, r1
 12043 14d0 063C     		subs	r4, r4, #6
 12044              	.LVL1021:
 491:src/keys.c    **** }
 12045              		.loc 1 491 49 view .LVU3694
 12046              	.LBE1022:
 12047              	.LBE1029:
1781:src/keys.c    **** 
 12048              		.loc 1 1781 19 view .LVU3695
 12049 14d2 4FF0000E 		mov	lr, #0
 12050              	.LBB1030:
 12051              	.LBB1023:
 491:src/keys.c    **** }
 12052              		.loc 1 491 49 view .LVU3696
 12053 14d6 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 12054              	.LVL1022:
ARM GAS  /tmp/ccvq0xdJ.s 			page 338


 491:src/keys.c    **** }
 12055              		.loc 1 491 49 view .LVU3697
 12056              	.LBE1023:
 12057              	.LBE1030:
1781:src/keys.c    **** 
 12058              		.loc 1 1781 2 is_stmt 1 view .LVU3698
1781:src/keys.c    **** 
 12059              		.loc 1 1781 19 is_stmt 0 view .LVU3699
 12060 14da 88F80DE0 		strb	lr, [r8, #13]
1783:src/keys.c    **** 	case K10:	// STO
 12061              		.loc 1 1783 2 is_stmt 1 view .LVU3700
 12062 14de 212C     		cmp	r4, #33
 12063 14e0 3FF696A8 		bhi	.L1003
 12064 14e4 01A1     		adr	r1, .L1005
 12065 14e6 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 12066 14ea 00BF     		.p2align 2
 12067              	.L1005:
 12068 14ec 1F1F0000 		.word	.L1012+1
 12069 14f0 FD1E0000 		.word	.L1011+1
 12070 14f4 11060000 		.word	.L1003+1
 12071 14f8 11060000 		.word	.L1003+1
 12072 14fc 11060000 		.word	.L1003+1
 12073 1500 11060000 		.word	.L1003+1
 12074 1504 AF1E0000 		.word	.L1010+1
 12075 1508 11060000 		.word	.L1003+1
 12076 150c 11060000 		.word	.L1003+1
 12077 1510 11060000 		.word	.L1003+1
 12078 1514 C51D0000 		.word	.L1009+1
 12079 1518 11060000 		.word	.L1003+1
 12080 151c E7030000 		.word	.L1008+1
 12081 1520 11060000 		.word	.L1003+1
 12082 1524 11060000 		.word	.L1003+1
 12083 1528 11060000 		.word	.L1003+1
 12084 152c 11060000 		.word	.L1003+1
 12085 1530 11060000 		.word	.L1003+1
 12086 1534 3B1E0000 		.word	.L1007+1
 12087 1538 11060000 		.word	.L1003+1
 12088 153c 11060000 		.word	.L1003+1
 12089 1540 11060000 		.word	.L1003+1
 12090 1544 11060000 		.word	.L1003+1
 12091 1548 11060000 		.word	.L1003+1
 12092 154c 11060000 		.word	.L1003+1
 12093 1550 11060000 		.word	.L1003+1
 12094 1554 11060000 		.word	.L1003+1
 12095 1558 11060000 		.word	.L1003+1
 12096 155c 11060000 		.word	.L1003+1
 12097 1560 11060000 		.word	.L1003+1
 12098 1564 131E0000 		.word	.L1006+1
 12099 1568 11060000 		.word	.L1003+1
 12100 156c 11060000 		.word	.L1003+1
 12101 1570 031E0000 		.word	.L1004+1
 12102              	.LVL1023:
 12103              		.p2align 1
 12104              	.L1379:
1783:src/keys.c    **** 	case K10:	// STO
 12105              		.loc 1 1783 2 is_stmt 0 view .LVU3701
 12106              	.LBE1040:
ARM GAS  /tmp/ccvq0xdJ.s 			page 339


 12107              	.LBE1047:
 12108              	.LBE1358:
3370:src/keys.c    **** 		// print_debug (3, c);
 12109              		.loc 1 3370 4 is_stmt 1 view .LVU3702
3370:src/keys.c    **** 		// print_debug (3, c);
 12110              		.loc 1 3370 11 is_stmt 0 view .LVU3703
 12111 1574 FFF7FEFF 		bl	process_h_shifted
 12112              	.LVL1024:
 12113 1578 0446     		mov	r4, r0
 12114 157a FEF715BF 		b	.L832
 12115              	.LVL1025:
 12116              	.L1126:
 12117              	.LBB1359:
 12118              	.LBB965:
1331:src/keys.c    ****      switch (c) {
 12119              		.loc 1 1331 6 is_stmt 1 view .LVU3704
 12120 157e 0020     		movs	r0, #0
 12121 1580 FFF7FEFF 		bl	finish_cpx_entry
 12122              	.LVL1026:
1332:src/keys.c    ****      case (K60):
 12123              		.loc 1 1332 6 view .LVU3705
 12124              	.L1340:
1332:src/keys.c    ****      case (K60):
 12125              		.loc 1 1332 6 is_stmt 0 view .LVU3706
 12126              	.LBE965:
 12127              	.LBE1359:
3365:src/keys.c    **** 	} else {
 12128              		.loc 1 3365 3 is_stmt 1 view .LVU3707
3365:src/keys.c    **** 	} else {
 12129              		.loc 1 3365 10 is_stmt 0 view .LVU3708
 12130 1584 2046     		mov	r0, r4
 12131              	.L1342:
 12132 1586 FFF7FEFF 		bl	process_cmplx
 12133              	.LVL1027:
 12134 158a 0446     		mov	r4, r0
 12135 158c FEF70CBF 		b	.L832
 12136              	.LVL1028:
 12137              	.L1414:
 12138              	.LBB1360:
 12139              	.LBB1260:
1666:src/keys.c    **** 	  }
 12140              		.loc 1 1666 6 is_stmt 1 view .LVU3709
1666:src/keys.c    **** 	  }
 12141              		.loc 1 1666 6 is_stmt 0 view .LVU3710
 12142              	.LBE1260:
 12143              	.LBE1360:
 12144              	.LBE1449:
 12145              	.LBE1523:
3649:src/keys.c    **** 	NonProgrammable = 0;
 12146              		.loc 1 3649 7 is_stmt 1 view .LVU3711
3649:src/keys.c    **** 	NonProgrammable = 0;
 12147              		.loc 1 3649 11 is_stmt 0 view .LVU3712
 12148 1590 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3649:src/keys.c    **** 	NonProgrammable = 0;
 12149              		.loc 1 3649 10 view .LVU3713
 12150 1594 5C06     		lsls	r4, r3, #25
 12151 1596 40F18581 		bpl	.L1168
ARM GAS  /tmp/ccvq0xdJ.s 			page 340


3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12152              		.loc 1 3650 2 is_stmt 1 view .LVU3714
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12153              		.loc 1 3650 18 is_stmt 0 view .LVU3715
 12154 159a 9B4B     		ldr	r3, .L1453+4
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12155              		.loc 1 3651 32 view .LVU3716
 12156 159c 40F2CB15 		movw	r5, #459
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12157              		.loc 1 3650 18 view .LVU3717
 12158 15a0 C3F800A0 		str	r10, [r3]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12159              		.loc 1 3651 2 is_stmt 1 view .LVU3718
 12160 15a4 FFF72BB9 		b	.L1103
 12161              	.LVL1029:
 12162              	.L1402:
 12163              	.LBB1524:
 12164              	.LBB1450:
 12165              	.LBB1361:
 12166              	.LBB1201:
2816:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12167              		.loc 1 2816 3 view .LVU3719
2816:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12168              		.loc 1 2816 12 is_stmt 0 view .LVU3720
 12169 15a8 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 12170 15ac 2046     		mov	r0, r4
 12171 15ae 941E     		subs	r4, r2, #2
 12172              	.LVL1030:
2816:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12173              		.loc 1 2816 12 view .LVU3721
 12174 15b0 6242     		rsbs	r2, r4, #0
 12175 15b2 6241     		adcs	r2, r2, r4
 12176 15b4 FFF7FEFF 		bl	process_catalogue
 12177              	.LVL1031:
2817:src/keys.c    **** 			return opcode;
 12178              		.loc 1 2817 6 view .LVU3722
 12179 15b8 3328     		cmp	r0, #51
2816:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12180              		.loc 1 2816 12 view .LVU3723
 12181 15ba 0446     		mov	r4, r0
 12182              	.LVL1032:
2817:src/keys.c    **** 			return opcode;
 12183              		.loc 1 2817 3 is_stmt 1 view .LVU3724
2817:src/keys.c    **** 			return opcode;
 12184              		.loc 1 2817 6 is_stmt 0 view .LVU3725
 12185 15bc 3EF479AD 		beq	.L1343
2819:src/keys.c    **** 		goto add_char;
 12186              		.loc 1 2819 3 is_stmt 1 view .LVU3726
2819:src/keys.c    **** 		goto add_char;
 12187              		.loc 1 2819 6 is_stmt 0 view .LVU3727
 12188 15c0 C4B2     		uxtb	r4, r0
 12189              	.LVL1033:
2820:src/keys.c    **** 	}
 12190              		.loc 1 2820 3 is_stmt 1 view .LVU3728
 12191 15c2 FFF701BB 		b	.L930
 12192              	.LVL1034:
 12193              	.L931:
ARM GAS  /tmp/ccvq0xdJ.s 			page 341


2835:src/keys.c    **** 			if (State2.numdigit == 0)
 12194              		.loc 1 2835 3 view .LVU3729
2835:src/keys.c    **** 			if (State2.numdigit == 0)
 12195              		.loc 1 2835 6 is_stmt 0 view .LVU3730
 12196 15c6 0329     		cmp	r1, #3
 12197 15c8 3FF4F4AA 		beq	.L937
2836:src/keys.c    **** 				reset_multi();
 12198              		.loc 1 2836 4 is_stmt 1 view .LVU3731
2836:src/keys.c    **** 				reset_multi();
 12199              		.loc 1 2836 14 is_stmt 0 view .LVU3732
 12200 15cc 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2836:src/keys.c    **** 				reset_multi();
 12201              		.loc 1 2836 7 view .LVU3733
 12202 15d0 002A     		cmp	r2, #0
 12203 15d2 40F0B681 		bne	.L938
2837:src/keys.c    **** 			else
 12204              		.loc 1 2837 5 is_stmt 1 view .LVU3734
 12205              	.LBB1189:
 12206              	.LBI1189:
2802:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12207              		.loc 1 2802 13 view .LVU3735
 12208              	.LBB1190:
2804:src/keys.c    **** 	if (! State2.alphas )
 12209              		.loc 1 2804 2 view .LVU3736
2804:src/keys.c    **** 	if (! State2.alphas )
 12210              		.loc 1 2804 15 is_stmt 0 view .LVU3737
 12211 15d6 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12212              	.LVL1035:
2805:src/keys.c    **** 		State2.alphashift = 0;
 12213              		.loc 1 2805 6 view .LVU3738
 12214 15da 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2804:src/keys.c    **** 	if (! State2.alphas )
 12215              		.loc 1 2804 15 view .LVU3739
 12216 15de 62F3C301 		bfi	r1, r2, #3, #1
2805:src/keys.c    **** 		State2.alphashift = 0;
 12217              		.loc 1 2805 5 view .LVU3740
 12218 15e2 13F00802 		ands	r2, r3, #8
2804:src/keys.c    **** 	if (! State2.alphas )
 12219              		.loc 1 2804 15 view .LVU3741
 12220 15e6 88F81510 		strb	r1, [r8, #21]
2805:src/keys.c    **** 		State2.alphashift = 0;
 12221              		.loc 1 2805 2 is_stmt 1 view .LVU3742
2805:src/keys.c    **** 		State2.alphashift = 0;
 12222              		.loc 1 2805 5 is_stmt 0 view .LVU3743
 12223 15ea 7FF4A9A8 		bne	.L1347
 12224              	.L941:
 12225              	.LBE1190:
 12226              	.LBE1189:
 12227              	.LBB1191:
 12228              	.LBB1192:
2806:src/keys.c    **** }
 12229              		.loc 1 2806 3 is_stmt 1 view .LVU3744
2806:src/keys.c    **** }
 12230              		.loc 1 2806 21 is_stmt 0 view .LVU3745
 12231 15ee 62F30413 		bfi	r3, r2, #4, #1
 12232 15f2 88F81630 		strb	r3, [r8, #22]
 12233 15f6 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccvq0xdJ.s 			page 342


 12234              	.LBE1192:
 12235              	.LBE1191:
2849:src/keys.c    **** 
 12236              		.loc 1 2849 10 view .LVU3746
 12237 15f8 3324     		movs	r4, #51
 12238              	.LVL1036:
2849:src/keys.c    **** 
 12239              		.loc 1 2849 10 view .LVU3747
 12240 15fa FEF75BBD 		b	.L797
 12241              	.LVL1037:
 12242              	.L1420:
2849:src/keys.c    **** 
 12243              		.loc 1 2849 10 view .LVU3748
 12244              	.LBE1201:
 12245              	.LBE1361:
 12246              	.LBB1362:
 12247              	.LBB1325:
3142:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 12248              		.loc 1 3142 50 view .LVU3749
 12249 15fe 0D2C     		cmp	r4, #13
 12250 1600 7FF4CBAD 		bne	.L981
3143:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12251              		.loc 1 3143 3 is_stmt 1 view .LVU3750
 12252 1604 B9F1010F 		cmp	r9, #1
 12253 1608 14BF     		ite	ne
 12254 160a 2C20     		movne	r0, #44
 12255              	.LVL1038:
3143:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12256              		.loc 1 3143 3 is_stmt 0 view .LVU3751
 12257 160c 2B20     		moveq	r0, #43
 12258 160e FFF7FEFF 		bl	set_window
 12259              	.LVL1039:
3144:src/keys.c    **** 	}
 12260              		.loc 1 3144 3 is_stmt 1 view .LVU3752
 12261              	.LBB1321:
 12262              	.LBI1321:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 12263              		.loc 1 741 13 view .LVU3753
 12264              	.LBB1322:
 742:src/keys.c    **** }
 12265              		.loc 1 742 2 view .LVU3754
 742:src/keys.c    **** }
 12266              		.loc 1 742 15 is_stmt 0 view .LVU3755
 12267 1612 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 12268 1616 3368     		ldr	r3, [r6]
 12269 1618 013A     		subs	r2, r2, #1
 12270 161a 18BF     		it	ne
 12271 161c 0122     		movne	r2, #1
 12272 161e 88F81120 		strb	r2, [r8, #17]
 12273              	.LVL1040:
 742:src/keys.c    **** }
 12274              		.loc 1 742 15 view .LVU3756
 12275              	.LBE1322:
 12276              	.LBE1321:
3151:src/keys.c    **** 	case K_DOWN:
 12277              		.loc 1 3151 2 is_stmt 1 view .LVU3757
3151:src/keys.c    **** 	case K_DOWN:
ARM GAS  /tmp/ccvq0xdJ.s 			page 343


 12278              		.loc 1 3151 2 is_stmt 0 view .LVU3758
 12279              	.LBE1325:
 12280              	.LBE1362:
 12281              	.LBE1450:
 12282              	.LBE1524:
3613:src/keys.c    ****     case STATE_SST:
 12283              		.loc 1 3613 5 is_stmt 1 view .LVU3759
 12284              	.LBB1525:
 12285              	.LBB1451:
 12286              	.LBB1363:
 12287              	.LBB1326:
3202:src/keys.c    **** 	}
 12288              		.loc 1 3202 10 is_stmt 0 view .LVU3760
 12289 1622 3324     		movs	r4, #51
 12290 1624 FEF746BD 		b	.L797
 12291              	.LVL1041:
 12292              	.L1417:
3126:src/keys.c    **** 	const int g_max = global_regs();
 12293              		.loc 1 3126 33 view .LVU3761
 12294 1628 FFF7FEFF 		bl	local_regs
 12295              	.LVL1042:
 12296 162c 8246     		mov	r10, r0
 12297 162e A4E5     		b	.L973
 12298              	.LVL1043:
 12299              	.L1151:
3126:src/keys.c    **** 	const int g_max = global_regs();
 12300              		.loc 1 3126 33 view .LVU3762
 12301              	.LBE1326:
 12302              	.LBE1363:
 12303              	.LBB1364:
 12304              	.LBB1091:
2995:src/keys.c    **** 	const int opcode = getprog(pc);
 12305              		.loc 1 2995 27 view .LVU3763
 12306 1630 4FF0030A 		mov	r10, #3
 12307 1634 54E4     		b	.L945
 12308              	.LVL1044:
 12309              	.L1387:
2995:src/keys.c    **** 	const int opcode = getprog(pc);
 12310              		.loc 1 2995 27 view .LVU3764
 12311              	.LBE1091:
 12312              	.LBE1364:
3252:src/keys.c    **** 	CLEAR_REAL;
 12313              		.loc 1 3252 2 is_stmt 1 view .LVU3765
 12314              	.LBB1365:
 12315              	.LBI1365:
1245:src/keys.c    **** 	// called if number entry terminated by EXIT key
 12316              		.loc 1 1245 13 view .LVU3766
 12317              	.LBB1366:
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12318              		.loc 1 1249 2 view .LVU3767
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12319              		.loc 1 1249 5 is_stmt 0 view .LVU3768
 12320 1636 0907     		lsls	r1, r1, #28
 12321 1638 03D4     		bmi	.L812
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12322              		.loc 1 1249 21 view .LVU3769
 12323 163a 93F8EB37 		ldrb	r3, [r3, #2027]	@ zero_extendqisi2
ARM GAS  /tmp/ccvq0xdJ.s 			page 344


1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12324              		.loc 1 1249 18 view .LVU3770
 12325 163e 1B07     		lsls	r3, r3, #28
 12326 1640 2FD5     		bpl	.L813
 12327              	.L812:
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 12328              		.loc 1 1250 2 is_stmt 1 view .LVU3771
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 12329              		.loc 1 1250 5 is_stmt 0 view .LVU3772
 12330 1642 D407     		lsls	r4, r2, #31
 12331 1644 40F16D81 		bpl	.L814
1251:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 12332              		.loc 1 1251 3 is_stmt 1 view .LVU3773
 12333 1648 0F20     		movs	r0, #15
 12334 164a FFF7FEFF 		bl	drop
 12335              	.LVL1045:
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12336              		.loc 1 1252 3 view .LVU3774
 12337 164e 6A20     		movs	r0, #106
 12338 1650 FFF7FEFF 		bl	get_reg_n
 12339              	.LVL1046:
 12340 1654 0446     		mov	r4, r0
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12341              		.loc 1 1252 33 is_stmt 0 view .LVU3775
 12342 1656 6E20     		movs	r0, #110
 12343 1658 FFF7FEFF 		bl	get_reg_n
 12344              	.LVL1047:
 12345 165c 0146     		mov	r1, r0
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12346              		.loc 1 1252 3 view .LVU3776
 12347 165e 2046     		mov	r0, r4
 12348 1660 FFF7FEFF 		bl	copyreg
 12349              	.LVL1048:
1253:src/keys.c    **** 	}
 12350              		.loc 1 1253 3 is_stmt 1 view .LVU3777
 12351 1664 6B20     		movs	r0, #107
 12352              	.L1335:
1257:src/keys.c    **** 	}
 12353              		.loc 1 1257 3 is_stmt 0 view .LVU3778
 12354 1666 FFF7FEFF 		bl	get_reg_n
 12355              	.LVL1049:
 12356 166a 0446     		mov	r4, r0
1257:src/keys.c    **** 	}
 12357              		.loc 1 1257 33 view .LVU3779
 12358 166c 6F20     		movs	r0, #111
 12359 166e FFF7FEFF 		bl	get_reg_n
 12360              	.LVL1050:
 12361 1672 0146     		mov	r1, r0
1257:src/keys.c    **** 	}
 12362              		.loc 1 1257 3 view .LVU3780
 12363 1674 2046     		mov	r0, r4
 12364 1676 FFF7FEFF 		bl	copyreg
 12365              	.LVL1051:
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12366              		.loc 1 1259 2 is_stmt 1 view .LVU3781
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12367              		.loc 1 1259 22 is_stmt 0 view .LVU3782
ARM GAS  /tmp/ccvq0xdJ.s 			page 345


 12368 167a DBF80020 		ldr	r2, [fp]
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12369              		.loc 1 1259 20 view .LVU3783
 12370 167e 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12371              		.loc 1 1259 22 view .LVU3784
 12372 1682 92F8DE37 		ldrb	r3, [r2, #2014]	@ zero_extendqisi2
 12373 1686 C3F30003 		ubfx	r3, r3, #0, #1
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12374              		.loc 1 1259 20 view .LVU3785
 12375 168a 63F38611 		bfi	r1, r3, #6, #1
 12376 168e 88F81710 		strb	r1, [r8, #23]
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 12377              		.loc 1 1260 2 is_stmt 1 view .LVU3786
1261:src/keys.c    **** }
 12378              		.loc 1 1261 2 view .LVU3787
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 12379              		.loc 1 1260 2 is_stmt 0 view .LVU3788
 12380 1692 92F8DE37 		ldrb	r3, [r2, #2014]	@ zero_extendqisi2
 12381 1696 23F01103 		bic	r3, r3, #17
 12382 169a 43F01003 		orr	r3, r3, #16
 12383 169e 82F8DE37 		strb	r3, [r2, #2014]
 12384              	.L813:
 12385              	.LBE1366:
 12386              	.LBE1365:
3253:src/keys.c    **** 	CLEAR_IMAG;
 12387              		.loc 1 3253 2 is_stmt 1 view .LVU3789
 12388 16a2 DBF80030 		ldr	r3, [fp]
 12389 16a6 93F8E417 		ldrb	r1, [r3, #2020]	@ zero_extendqisi2
3254:src/keys.c    ****       }
 12390              		.loc 1 3254 2 is_stmt 0 view .LVU3790
 12391 16aa 93F8EB27 		ldrb	r2, [r3, #2027]	@ zero_extendqisi2
3253:src/keys.c    **** 	CLEAR_IMAG;
 12392              		.loc 1 3253 2 view .LVU3791
 12393 16ae 6FF3C301 		bfc	r1, #3, #1
3254:src/keys.c    ****       }
 12394              		.loc 1 3254 2 view .LVU3792
 12395 16b2 6FF3C302 		bfc	r2, #3, #1
3253:src/keys.c    **** 	CLEAR_IMAG;
 12396              		.loc 1 3253 2 view .LVU3793
 12397 16b6 83F8E417 		strb	r1, [r3, #2020]
3254:src/keys.c    ****       }
 12398              		.loc 1 3254 2 is_stmt 1 view .LVU3794
 12399 16ba 83F8EB27 		strb	r2, [r3, #2027]
 12400 16be FFF73EB9 		b	.L811
 12401              	.LVL1052:
 12402              	.L1036:
 12403              	.LBB1368:
 12404              	.LBB966:
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12405              		.loc 1 1297 4 view .LVU3795
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12406              		.loc 1 1297 7 is_stmt 0 view .LVU3796
 12407 16c2 BAF1020F 		cmp	r10, #2
 12408 16c6 5FD1     		bne	.L1038
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12409              		.loc 1 1297 28 view .LVU3797
ARM GAS  /tmp/ccvq0xdJ.s 			page 346


 12410 16c8 A01F     		subs	r0, r4, #6
 12411 16ca C0B2     		uxtb	r0, r0
 12412 16cc 0228     		cmp	r0, #2
 12413 16ce 00F2D281 		bhi	.L1039
1298:src/keys.c    ****    }
 12414              		.loc 1 1298 6 is_stmt 1 view .LVU3798
 12415 16d2 FFF7FEFF 		bl	convert_regK
 12416              	.LVL1053:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12417              		.loc 1 1300 4 view .LVU3799
 12418              	.L1338:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12419              		.loc 1 1300 4 is_stmt 0 view .LVU3800
 12420              	.LBE966:
 12421              	.LBE1368:
3368:src/keys.c    **** 		if (shift == SHIFT_H)
 12422              		.loc 1 3368 4 is_stmt 1 view .LVU3801
3368:src/keys.c    **** 		if (shift == SHIFT_H)
 12423              		.loc 1 3368 11 is_stmt 0 view .LVU3802
 12424 16d6 2046     		mov	r0, r4
 12425 16d8 FFF7FEFF 		bl	process_fg_shifted
 12426              	.LVL1054:
 12427 16dc 0446     		mov	r4, r0
 12428 16de FEF763BE 		b	.L832
 12429              	.LVL1055:
 12430              	.L1400:
3368:src/keys.c    **** 		if (shift == SHIFT_H)
 12431              		.loc 1 3368 11 view .LVU3803
 12432 16e2 0093     		str	r3, [sp]
 12433              	.LBB1369:
 12434              	.LBB867:
 12435              	.LBB856:
 373:src/keys.c    **** #else
 12436              		.loc 1 373 45 view .LVU3804
 12437 16e4 FFF7FEFF 		bl	shift_down
 12438              	.LVL1056:
 373:src/keys.c    **** #else
 12439              		.loc 1 373 42 view .LVU3805
 12440 16e8 0328     		cmp	r0, #3
 12441 16ea 009B     		ldr	r3, [sp]
 12442 16ec 00F0C280 		beq	.L917
 12443 16f0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 371:src/keys.c    **** #ifndef WINGUI
 12444              		.loc 1 371 8 view .LVU3806
 12445 16f4 454A     		ldr	r2, .L1453+8
 373:src/keys.c    **** #else
 12446              		.loc 1 373 73 view .LVU3807
 12447 16f6 D646     		mov	lr, r10
 377:src/keys.c    ****   }
 12448              		.loc 1 377 9 view .LVU3808
 12449 16f8 0C20     		movs	r0, #12
 12450 16fa FFF724BA 		b	.L916
 12451              	.LVL1057:
 12452              	.L1410:
 377:src/keys.c    ****   }
 12453              		.loc 1 377 9 view .LVU3809
 12454              	.LBE856:
ARM GAS  /tmp/ccvq0xdJ.s 			page 347


 12455              	.LBE867:
 12456              	.LBE1369:
 12457              	.LBB1370:
 12458              	.LBB1228:
 12459              	.LBB1220:
2934:src/keys.c    **** 		else if (nn != NO_REG)
 12460              		.loc 1 2934 4 is_stmt 1 view .LVU3810
2936:src/keys.c    **** 	}
 12461              		.loc 1 2936 6 is_stmt 0 view .LVU3811
 12462 16fe 9A42     		cmp	r2, r3
 12463 1700 08BF     		it	eq
 12464 1702 0A23     		moveq	r3, #10
 12465              	.LVL1058:
2936:src/keys.c    **** 	}
 12466              		.loc 1 2936 6 view .LVU3812
 12467 1704 FFF7BCBA 		b	.L881
 12468              	.LVL1059:
 12469              	.L1403:
2936:src/keys.c    **** 	}
 12470              		.loc 1 2936 6 view .LVU3813
 12471              	.LBE1220:
 12472              	.LBE1228:
 12473              	.LBE1370:
 12474              	.LBB1371:
 12475              	.LBB1202:
2825:src/keys.c    **** 				break;
 12476              		.loc 1 2825 3 is_stmt 1 view .LVU3814
2825:src/keys.c    **** 				break;
 12477              		.loc 1 2825 6 is_stmt 0 view .LVU3815
 12478 1708 0029     		cmp	r1, #0
 12479 170a 7FF44BAA 		bne	.L933
2827:src/keys.c    **** 		if (State2.numdigit == 0)
 12480              		.loc 1 2827 3 is_stmt 1 view .LVU3816
 12481              	.LBB1194:
 12482              	.LBI1194:
2802:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12483              		.loc 1 2802 13 view .LVU3817
 12484              	.LBB1195:
2804:src/keys.c    **** 	if (! State2.alphas )
 12485              		.loc 1 2804 2 view .LVU3818
2804:src/keys.c    **** 	if (! State2.alphas )
 12486              		.loc 1 2804 15 is_stmt 0 view .LVU3819
 12487 170e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2805:src/keys.c    **** 		State2.alphashift = 0;
 12488              		.loc 1 2805 6 view .LVU3820
 12489 1712 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2804:src/keys.c    **** 	if (! State2.alphas )
 12490              		.loc 1 2804 15 view .LVU3821
 12491 1716 61F3C302 		bfi	r2, r1, #3, #1
 12492 171a 88F81520 		strb	r2, [r8, #21]
2805:src/keys.c    **** 		State2.alphashift = 0;
 12493              		.loc 1 2805 2 is_stmt 1 view .LVU3822
2805:src/keys.c    **** 		State2.alphashift = 0;
 12494              		.loc 1 2805 5 is_stmt 0 view .LVU3823
 12495 171e 1A07     		lsls	r2, r3, #28
2806:src/keys.c    **** }
 12496              		.loc 1 2806 3 is_stmt 1 view .LVU3824
ARM GAS  /tmp/ccvq0xdJ.s 			page 348


 12497              	.LBE1195:
 12498              	.LBE1194:
2828:src/keys.c    **** 			return STATE_UNFINISHED;
 12499              		.loc 1 2828 3 view .LVU3825
 12500              	.LBB1197:
 12501              	.LBB1196:
2806:src/keys.c    **** }
 12502              		.loc 1 2806 21 is_stmt 0 view .LVU3826
 12503 1720 5CBF     		itt	pl
 12504 1722 61F30413 		bfipl	r3, r1, #4, #1
 12505 1726 88F81630 		strbpl	r3, [r8, #22]
 12506              	.LBE1196:
 12507              	.LBE1197:
2828:src/keys.c    **** 			return STATE_UNFINISHED;
 12508              		.loc 1 2828 13 view .LVU3827
 12509 172a 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2828:src/keys.c    **** 			return STATE_UNFINISHED;
 12510              		.loc 1 2828 6 view .LVU3828
 12511 172e 002B     		cmp	r3, #0
 12512 1730 3FF406A8 		beq	.L1347
2830:src/keys.c    **** 			State2.digval2 = 0;
 12513              		.loc 1 2830 8 is_stmt 1 view .LVU3829
2830:src/keys.c    **** 			State2.digval2 = 0;
 12514              		.loc 1 2830 11 is_stmt 0 view .LVU3830
 12515 1734 012B     		cmp	r3, #1
2831:src/keys.c    **** 		goto fin;
 12516              		.loc 1 2831 19 view .LVU3831
 12517 1736 4FF00004 		mov	r4, #0
 12518              	.LVL1060:
2830:src/keys.c    **** 			State2.digval2 = 0;
 12519              		.loc 1 2830 11 view .LVU3832
 12520 173a 7FF45CAA 		bne	.L936
2831:src/keys.c    **** 		goto fin;
 12521              		.loc 1 2831 4 is_stmt 1 view .LVU3833
2831:src/keys.c    **** 		goto fin;
 12522              		.loc 1 2831 19 is_stmt 0 view .LVU3834
 12523 173e 88F80A40 		strb	r4, [r8, #10]
 12524 1742 FFF758BA 		b	.L936
 12525              	.LVL1061:
 12526              	.L932:
2845:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12527              		.loc 1 2845 3 is_stmt 1 view .LVU3835
2845:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12528              		.loc 1 2845 6 is_stmt 0 view .LVU3836
 12529 1746 0129     		cmp	r1, #1
 12530 1748 00F0A383 		beq	.L1423
2848:src/keys.c    **** 		return STATE_UNFINISHED;
 12531              		.loc 1 2848 4 is_stmt 1 view .LVU3837
 12532              	.LBB1198:
 12533              	.LBI1191:
2802:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12534              		.loc 1 2802 13 view .LVU3838
 12535              	.LBB1193:
2804:src/keys.c    **** 	if (! State2.alphas )
 12536              		.loc 1 2804 2 view .LVU3839
2804:src/keys.c    **** 	if (! State2.alphas )
 12537              		.loc 1 2804 15 is_stmt 0 view .LVU3840
ARM GAS  /tmp/ccvq0xdJ.s 			page 349


 12538 174c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2805:src/keys.c    **** 		State2.alphashift = 0;
 12539              		.loc 1 2805 6 view .LVU3841
 12540 1750 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2804:src/keys.c    **** 	if (! State2.alphas )
 12541              		.loc 1 2804 15 view .LVU3842
 12542 1754 60F3C302 		bfi	r2, r0, #3, #1
 12543 1758 88F81520 		strb	r2, [r8, #21]
2805:src/keys.c    **** 		State2.alphashift = 0;
 12544              		.loc 1 2805 2 is_stmt 1 view .LVU3843
2805:src/keys.c    **** 		State2.alphashift = 0;
 12545              		.loc 1 2805 5 is_stmt 0 view .LVU3844
 12546 175c 13F00802 		ands	r2, r3, #8
 12547 1760 3FF445AF 		beq	.L941
 12548 1764 FEF7ECBF 		b	.L1347
 12549              	.LVL1062:
 12550              	.L1378:
2805:src/keys.c    **** 		State2.alphashift = 0;
 12551              		.loc 1 2805 5 view .LVU3845
 12552              	.LBE1193:
 12553              	.LBE1198:
 12554              	.LBE1202:
 12555              	.LBE1371:
3361:src/keys.c    **** 	}
 12556              		.loc 1 3361 3 is_stmt 1 view .LVU3846
 12557              	.LBB1372:
 12558              	.LBI876:
1286:src/keys.c    **** 
 12559              		.loc 1 1286 13 view .LVU3847
 12560              	.LBB967:
1288:src/keys.c    **** 
 12561              		.loc 1 1288 4 view .LVU3848
 12562              	.LBB887:
 12563              	.LBI887:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12564              		.loc 1 96 13 view .LVU3849
 12565              	.LBB888:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12566              		.loc 1 97 2 view .LVU3850
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12567              		.loc 1 97 18 is_stmt 0 view .LVU3851
 12568 1768 FFF7FEFF 		bl	shift_down
 12569              	.LVL1063:
  98:src/keys.c    **** }
 12570              		.loc 1 98 2 is_stmt 1 view .LVU3852
  98:src/keys.c    **** }
 12571              		.loc 1 98 52 is_stmt 0 view .LVU3853
 12572 176c 8246     		mov	r10, r0
 12573 176e 08B9     		cbnz	r0, .L1035
 12574 1770 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 12575              	.L1035:
 12576              	.LVL1064:
  98:src/keys.c    **** }
 12577              		.loc 1 98 52 view .LVU3854
 12578              	.LBE888:
 12579              	.LBE887:
1292:src/keys.c    ****      return process_h_shifted (c);
ARM GAS  /tmp/ccvq0xdJ.s 			page 350


 12580              		.loc 1 1292 4 is_stmt 1 view .LVU3855
1292:src/keys.c    ****      return process_h_shifted (c);
 12581              		.loc 1 1292 7 is_stmt 0 view .LVU3856
 12582 1774 042C     		cmp	r4, #4
 12583 1776 A4D8     		bhi	.L1036
1292:src/keys.c    ****      return process_h_shifted (c);
 12584              		.loc 1 1292 19 view .LVU3857
 12585 1778 BAF1030F 		cmp	r10, #3
 12586 177c 00F01883 		beq	.L1424
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12587              		.loc 1 1297 4 is_stmt 1 view .LVU3858
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12588              		.loc 1 1297 7 is_stmt 0 view .LVU3859
 12589 1780 BAF1020F 		cmp	r10, #2
 12590 1784 00F07781 		beq	.L1039
 12591              	.L1038:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12592              		.loc 1 1300 4 is_stmt 1 view .LVU3860
1300:src/keys.c    ****      return process_fg_shifted (c);
 12593              		.loc 1 1300 7 is_stmt 0 view .LVU3861
 12594 1788 631F     		subs	r3, r4, #5
 12595 178a 032B     		cmp	r3, #3
 12596 178c 00F21D81 		bhi	.L1041
1300:src/keys.c    ****      return process_fg_shifted (c);
 12597              		.loc 1 1300 55 view .LVU3862
 12598 1790 0AF1FF33 		add	r3, r10, #-1
1300:src/keys.c    ****      return process_fg_shifted (c);
 12599              		.loc 1 1300 34 view .LVU3863
 12600 1794 DBB2     		uxtb	r3, r3
 12601 1796 012B     		cmp	r3, #1
 12602 1798 9DD9     		bls	.L1338
 12603              	.L1042:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12604              		.loc 1 1330 4 is_stmt 1 view .LVU3864
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12605              		.loc 1 1330 7 is_stmt 0 view .LVU3865
 12606 179a BAF1000F 		cmp	r10, #0
 12607 179e 40F07181 		bne	.L1333
1410:src/keys.c    ****    case (K61):
 12608              		.loc 1 1410 4 is_stmt 1 view .LVU3866
 12609 17a2 231F     		subs	r3, r4, #4
 12610 17a4 292B     		cmp	r3, #41
 12611 17a6 00F20582 		bhi	.L1073
 12612 17aa DFE813F0 		tbh	[pc, r3, lsl #1]
 12613              	.L1075:
 12614 17ae 2501     		.2byte	(.L1076-.L1075)/2
 12615 17b0 0302     		.2byte	(.L1073-.L1075)/2
 12616 17b2 0302     		.2byte	(.L1073-.L1075)/2
 12617 17b4 0302     		.2byte	(.L1073-.L1075)/2
 12618 17b6 0302     		.2byte	(.L1073-.L1075)/2
 12619 17b8 0302     		.2byte	(.L1073-.L1075)/2
 12620 17ba 0302     		.2byte	(.L1073-.L1075)/2
 12621 17bc 0302     		.2byte	(.L1073-.L1075)/2
 12622 17be 0302     		.2byte	(.L1073-.L1075)/2
 12623 17c0 0302     		.2byte	(.L1073-.L1075)/2
 12624 17c2 F401     		.2byte	(.L1078-.L1075)/2
 12625 17c4 1B01     		.2byte	(.L1077-.L1075)/2
ARM GAS  /tmp/ccvq0xdJ.s 			page 351


 12626 17c6 2501     		.2byte	(.L1076-.L1075)/2
 12627 17c8 0302     		.2byte	(.L1073-.L1075)/2
 12628 17ca 0302     		.2byte	(.L1073-.L1075)/2
 12629 17cc 1B01     		.2byte	(.L1077-.L1075)/2
 12630 17ce 1B01     		.2byte	(.L1077-.L1075)/2
 12631 17d0 1B01     		.2byte	(.L1077-.L1075)/2
 12632 17d2 0302     		.2byte	(.L1073-.L1075)/2
 12633 17d4 0302     		.2byte	(.L1073-.L1075)/2
 12634 17d6 0302     		.2byte	(.L1073-.L1075)/2
 12635 17d8 1B01     		.2byte	(.L1077-.L1075)/2
 12636 17da 1B01     		.2byte	(.L1077-.L1075)/2
 12637 17dc 1B01     		.2byte	(.L1077-.L1075)/2
 12638 17de 0302     		.2byte	(.L1073-.L1075)/2
 12639 17e0 0302     		.2byte	(.L1073-.L1075)/2
 12640 17e2 0302     		.2byte	(.L1073-.L1075)/2
 12641 17e4 1B01     		.2byte	(.L1077-.L1075)/2
 12642 17e6 1B01     		.2byte	(.L1077-.L1075)/2
 12643 17e8 1B01     		.2byte	(.L1077-.L1075)/2
 12644 17ea 0302     		.2byte	(.L1073-.L1075)/2
 12645 17ec 0302     		.2byte	(.L1073-.L1075)/2
 12646 17ee 0302     		.2byte	(.L1073-.L1075)/2
 12647 17f0 1B01     		.2byte	(.L1077-.L1075)/2
 12648 17f2 1B01     		.2byte	(.L1077-.L1075)/2
 12649 17f4 0302     		.2byte	(.L1073-.L1075)/2
 12650 17f6 0302     		.2byte	(.L1073-.L1075)/2
 12651 17f8 0302     		.2byte	(.L1073-.L1075)/2
 12652 17fa 0302     		.2byte	(.L1073-.L1075)/2
 12653 17fc 0302     		.2byte	(.L1073-.L1075)/2
 12654 17fe 2501     		.2byte	(.L1076-.L1075)/2
 12655 1800 5301     		.2byte	(.L1074-.L1075)/2
 12656              		.p2align 1
 12657              	.L1454:
 12658 1802 00BF     		.align	2
 12659              	.L1453:
 12660 1804 00000000 		.word	.LANCHOR15
 12661 1808 00000000 		.word	NonProgrammable
 12662 180c 00000000 		.word	.LANCHOR17
 12663 1810 00000000 		.word	.LANCHOR6
 12664              	.LVL1065:
 12665              	.L908:
1410:src/keys.c    ****    case (K61):
 12666              		.loc 1 1410 4 is_stmt 0 view .LVU3867
 12667              	.LBE967:
 12668              	.LBE1372:
 12669              	.LBB1373:
 12670              	.LBB868:
 287:src/keys.c    **** 					}
 12671              		.loc 1 287 7 is_stmt 1 view .LVU3868
 12672 1814 0120     		movs	r0, #1
 12673 1816 FFF7FEFF 		bl	finish_cpx_entry
 12674              	.LVL1066:
 287:src/keys.c    **** 					}
 12675              		.loc 1 287 7 is_stmt 0 view .LVU3869
 12676              	.LBE868:
 12677              	.LBE1373:
3324:src/keys.c    **** 		if (is_bad_cmdline())
 12678              		.loc 1 3324 2 is_stmt 1 view .LVU3870
ARM GAS  /tmp/ccvq0xdJ.s 			page 352


 12679              	.LBB1374:
 12680              	.LBB869:
 289:src/keys.c    **** 				default:
 12681              		.loc 1 289 13 is_stmt 0 view .LVU3871
 12682 181a 4FF0110A 		mov	r10, #17
 12683 181e FEF789BF 		b	.L903
 12684              	.LVL1067:
 12685              	.L1373:
 297:src/keys.c    **** 				SET_REAL;
 12686              		.loc 1 297 4 is_stmt 1 view .LVU3872
 297:src/keys.c    **** 				SET_REAL;
 12687              		.loc 1 297 7 is_stmt 0 view .LVU3873
 12688 1822 1CF0080F 		tst	ip, #8
 12689 1826 04D1     		bne	.L910
 297:src/keys.c    **** 				SET_REAL;
 12690              		.loc 1 297 21 view .LVU3874
 12691 1828 90F8EB27 		ldrb	r2, [r0, #2027]	@ zero_extendqisi2
 297:src/keys.c    **** 				SET_REAL;
 12692              		.loc 1 297 9 view .LVU3875
 12693 182c 1407     		lsls	r4, r2, #28
 12694              	.LVL1068:
 297:src/keys.c    **** 				SET_REAL;
 12695              		.loc 1 297 9 view .LVU3876
 12696 182e 40F1D582 		bpl	.L1425
 12697              	.L910:
 301:src/keys.c    **** 				CmdLineLength = 0;
 12698              		.loc 1 301 9 is_stmt 1 view .LVU3877
 301:src/keys.c    **** 				CmdLineLength = 0;
 12699              		.loc 1 301 12 is_stmt 0 view .LVU3878
 12700 1832 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 12701              	.LVL1069:
 301:src/keys.c    **** 				CmdLineLength = 0;
 12702              		.loc 1 301 12 view .LVU3879
 12703 1836 002B     		cmp	r3, #0
 12704 1838 00F0C082 		beq	.L1144
 302:src/keys.c    **** 				CmdLineEex = 0;
 12705              		.loc 1 302 5 is_stmt 1 view .LVU3880
 303:src/keys.c    **** 				CmdLineDot = 0;
 12706              		.loc 1 303 5 view .LVU3881
 304:src/keys.c    **** 			}
 12707              		.loc 1 304 5 view .LVU3882
 302:src/keys.c    **** 				CmdLineEex = 0;
 12708              		.loc 1 302 19 is_stmt 0 view .LVU3883
 12709 183c 0023     		movs	r3, #0
 12710 183e A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 12711              		.loc 1 304 16 view .LVU3884
 12712 1842 88F81E30 		strb	r3, [r8, #30]
 12713              	.LVL1070:
 304:src/keys.c    **** 			}
 12714              		.loc 1 304 16 view .LVU3885
 12715              	.LBE869:
 12716              	.LBE1374:
3324:src/keys.c    **** 		if (is_bad_cmdline())
 12717              		.loc 1 3324 2 is_stmt 1 view .LVU3886
 12718              	.LBB1375:
 12719              	.LBB870:
ARM GAS  /tmp/ccvq0xdJ.s 			page 353


 306:src/keys.c    **** 		}
 12720              		.loc 1 306 11 is_stmt 0 view .LVU3887
 12721 1846 4FF0100A 		mov	r10, #16
 12722 184a FEF773BF 		b	.L903
 12723              	.LVL1071:
 12724              	.L1416:
 306:src/keys.c    **** 		}
 12725              		.loc 1 306 11 view .LVU3888
 12726              	.LBE870:
 12727              	.LBE1375:
 12728              	.LBB1376:
 12729              	.LBB1092:
3004:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12730              		.loc 1 3004 3 is_stmt 1 view .LVU3889
3004:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12731              		.loc 1 3004 8 is_stmt 0 view .LVU3890
 12732 184e 4FEA8A34 		lsl	r4, r10, #14
 12733              	.LVL1072:
3004:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12734              		.loc 1 3004 6 view .LVU3891
 12735 1852 44F00104 		orr	r4, r4, #1
 12736              	.LVL1073:
3005:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12737              		.loc 1 3005 3 is_stmt 1 view .LVU3892
3005:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12738              		.loc 1 3005 9 is_stmt 0 view .LVU3893
 12739 1856 2046     		mov	r0, r4
 12740 1858 FFF7FEFF 		bl	is_label_or_end_at
 12741              	.LVL1074:
3005:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12742              		.loc 1 3005 6 view .LVU3894
 12743 185c 0246     		mov	r2, r0
 12744 185e 0028     		cmp	r0, #0
 12745 1860 7DD0     		beq	.L1426
 12746              	.L949:
3007:src/keys.c    **** 		return STATE_UNFINISHED;
 12747              		.loc 1 3007 3 is_stmt 1 view .LVU3895
3007:src/keys.c    **** 		return STATE_UNFINISHED;
 12748              		.loc 1 3007 17 is_stmt 0 view .LVU3896
 12749 1862 A8F80840 		strh	r4, [r8, #8]	@ movhi
3008:src/keys.c    **** 	}
 12750              		.loc 1 3008 3 is_stmt 1 view .LVU3897
 12751 1866 3368     		ldr	r3, [r6]
3008:src/keys.c    **** 	}
 12752              		.loc 1 3008 10 is_stmt 0 view .LVU3898
 12753 1868 3324     		movs	r4, #51
 12754              	.LVL1075:
3008:src/keys.c    **** 	}
 12755              		.loc 1 3008 10 view .LVU3899
 12756 186a FEF723BC 		b	.L797
 12757              	.LVL1076:
 12758              	.L1421:
3008:src/keys.c    **** 	}
 12759              		.loc 1 3008 10 view .LVU3900
 12760              	.LBE1092:
 12761              	.LBE1376:
 12762              	.LBB1377:
ARM GAS  /tmp/ccvq0xdJ.s 			page 354


 12763              	.LBB1327:
3147:src/keys.c    **** 		goto reset_window;
 12764              		.loc 1 3147 3 is_stmt 1 view .LVU3901
3147:src/keys.c    **** 		goto reset_window;
 12765              		.loc 1 3147 17 is_stmt 0 view .LVU3902
 12766 186e A8F808B0 		strh	fp, [r8, #8]	@ movhi
3148:src/keys.c    **** 	}
 12767              		.loc 1 3148 3 is_stmt 1 view .LVU3903
 12768 1872 E9E4     		b	.L977
 12769              	.LVL1077:
 12770              	.L917:
3148:src/keys.c    **** 	}
 12771              		.loc 1 3148 3 is_stmt 0 view .LVU3904
 12772 1874 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12773              	.LBE1327:
 12774              	.LBE1377:
 12775              	.LBB1378:
 12776              	.LBB871:
 12777              	.LBB857:
 371:src/keys.c    **** #ifndef WINGUI
 12778              		.loc 1 371 8 view .LVU3905
 12779 1878 D34A     		ldr	r2, .L1455
 377:src/keys.c    ****   }
 12780              		.loc 1 377 9 view .LVU3906
 12781 187a 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 12782              		.loc 1 373 73 view .LVU3907
 12783 187c 4FF0020E 		mov	lr, #2
 12784 1880 FFF761B9 		b	.L916
 12785              	.LVL1078:
 12786              	.L1405:
 373:src/keys.c    **** #else
 12787              		.loc 1 373 73 view .LVU3908
 12788              	.LBE857:
 12789              	.LBE871:
 12790              	.LBE1378:
 12791              	.LBB1379:
 12792              	.LBB1203:
2861:src/keys.c    **** 		State2.numdigit = 1;
 12793              		.loc 1 2861 3 is_stmt 1 view .LVU3909
2862:src/keys.c    **** 		return STATE_UNFINISHED;
 12794              		.loc 1 2862 19 is_stmt 0 view .LVU3910
 12795 1884 0122     		movs	r2, #1
2861:src/keys.c    **** 		State2.numdigit = 1;
 12796              		.loc 1 2861 17 view .LVU3911
 12797 1886 A8F80840 		strh	r4, [r8, #8]	@ movhi
2862:src/keys.c    **** 		return STATE_UNFINISHED;
 12798              		.loc 1 2862 3 is_stmt 1 view .LVU3912
 12799 188a 3368     		ldr	r3, [r6]
2862:src/keys.c    **** 		return STATE_UNFINISHED;
 12800              		.loc 1 2862 19 is_stmt 0 view .LVU3913
 12801 188c 88F80B20 		strb	r2, [r8, #11]
2863:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12802              		.loc 1 2863 3 is_stmt 1 view .LVU3914
2863:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12803              		.loc 1 2863 10 is_stmt 0 view .LVU3915
 12804 1890 3324     		movs	r4, #51
ARM GAS  /tmp/ccvq0xdJ.s 			page 355


 12805              	.LVL1079:
2863:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12806              		.loc 1 2863 10 view .LVU3916
 12807 1892 FEF70FBC 		b	.L797
 12808              	.LVL1080:
 12809              	.L1415:
2863:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12810              		.loc 1 2863 10 view .LVU3917
 12811              	.LBE1203:
 12812              	.LBE1379:
 12813              	.LBB1380:
 12814              	.LBB1093:
2997:src/keys.c    **** 	const int direct = State2.runmode;
 12815              		.loc 1 2997 37 view .LVU3918
 12816 1896 5846     		mov	r0, fp
 12817 1898 FFF7FEFF 		bl	getprog
 12818              	.LVL1081:
2997:src/keys.c    **** 	const int direct = State2.runmode;
 12819              		.loc 1 2997 63 view .LVU3919
 12820 189c 20F47062 		bic	r2, r0, #3840
 12821 18a0 FFF728BB 		b	.L946
 12822              	.LVL1082:
 12823              	.L1168:
2997:src/keys.c    **** 	const int direct = State2.runmode;
 12824              		.loc 1 2997 63 view .LVU3920
 12825              	.LBE1093:
 12826              	.LBE1380:
 12827              	.LBB1381:
 12828              	.LBB1261:
1666:src/keys.c    **** 	  }
 12829              		.loc 1 1666 13 view .LVU3921
 12830 18a4 40F2CB14 		movw	r4, #459
 12831              	.LVL1083:
 12832              	.L1046:
1666:src/keys.c    **** 	  }
 12833              		.loc 1 1666 13 view .LVU3922
 12834              	.LBE1261:
 12835              	.LBE1381:
 12836              	.LBE1451:
 12837              	.LBE1525:
3649:src/keys.c    **** 	NonProgrammable = 0;
 12838              		.loc 1 3649 26 view .LVU3923
 12839 18a8 C84B     		ldr	r3, .L1455+4
 12840 18aa 1A68     		ldr	r2, [r3]
 12841 18ac E2B1     		cbz	r2, .L1427
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12842              		.loc 1 3650 2 is_stmt 1 view .LVU3924
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12843              		.loc 1 3650 18 is_stmt 0 view .LVU3925
 12844 18ae 0022     		movs	r2, #0
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12845              		.loc 1 3651 32 view .LVU3926
 12846 18b0 2546     		mov	r5, r4
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12847              		.loc 1 3650 18 view .LVU3927
 12848 18b2 1A60     		str	r2, [r3]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 356


 12849              		.loc 1 3651 2 is_stmt 1 view .LVU3928
 12850 18b4 FEF7A3BF 		b	.L1103
 12851              	.LVL1084:
 12852              	.L1419:
 12853              	.LBB1526:
 12854              	.LBB1452:
 12855              	.LBB1382:
 12856              	.LBB1328:
 12857              	.LBB1323:
3136:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12858              		.loc 1 3136 3 view .LVU3929
3136:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12859              		.loc 1 3136 19 is_stmt 0 view .LVU3930
 12860 18b8 B8F80810 		ldrh	r1, [r8, #8]
3136:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12861              		.loc 1 3136 27 view .LVU3931
 12862 18bc 0A23     		movs	r3, #10
3136:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12863              		.loc 1 3136 32 view .LVU3932
 12864 18be 03FB01B2 		mla	r2, r3, r1, fp
3136:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12865              		.loc 1 3136 37 view .LVU3933
 12866 18c2 6424     		movs	r4, #100
 12867              	.LVL1085:
3136:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12868              		.loc 1 3136 37 view .LVU3934
 12869 18c4 B2FBF4F3 		udiv	r3, r2, r4
 12870 18c8 04FB1323 		mls	r3, r4, r3, r2
 12871              	.LVL1086:
3137:src/keys.c    **** 			dv = n;
 12872              		.loc 1 3137 3 is_stmt 1 view .LVU3935
3137:src/keys.c    **** 			dv = n;
 12873              		.loc 1 3137 6 is_stmt 0 view .LVU3936
 12874 18cc 5345     		cmp	r3, r10
 12875 18ce 09DA     		bge	.L979
3137:src/keys.c    **** 			dv = n;
 12876              		.loc 1 3137 21 view .LVU3937
 12877 18d0 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3137:src/keys.c    **** 			dv = n;
 12878              		.loc 1 3137 17 view .LVU3938
 12879 18d4 D407     		lsls	r4, r2, #31
 12880 18d6 3FF5B5AC 		bmi	.L1337
3137:src/keys.c    **** 			dv = n;
 12881              		.loc 1 3137 36 view .LVU3939
 12882 18da 8842     		cmp	r0, r1
 12883 18dc 02DD     		ble	.L979
3137:src/keys.c    **** 			dv = n;
 12884              		.loc 1 3137 63 view .LVU3940
 12885 18de 9842     		cmp	r0, r3
 12886 18e0 3FF7B0AC 		bgt	.L1337
 12887              	.L979:
3138:src/keys.c    **** 		State2.digval = dv;
 12888              		.loc 1 3138 4 is_stmt 1 view .LVU3941
3138:src/keys.c    **** 		State2.digval = dv;
 12889              		.loc 1 3138 7 is_stmt 0 view .LVU3942
 12890 18e4 5B46     		mov	r3, fp
 12891              	.LVL1087:
ARM GAS  /tmp/ccvq0xdJ.s 			page 357


3139:src/keys.c    **** 		goto reset_window;
 12892              		.loc 1 3139 3 is_stmt 1 view .LVU3943
 12893 18e6 ADE4     		b	.L1337
 12894              	.LVL1088:
 12895              	.L1427:
3139:src/keys.c    **** 		goto reset_window;
 12896              		.loc 1 3139 3 is_stmt 0 view .LVU3944
 12897 18e8 2546     		mov	r5, r4
 12898 18ea FEF71EBE 		b	.L1106
 12899              	.LVL1089:
 12900              	.L1169:
3139:src/keys.c    **** 		goto reset_window;
 12901              		.loc 1 3139 3 view .LVU3945
 12902              	.LBE1323:
 12903              	.LBE1328:
 12904              	.LBE1382:
 12905              	.LBB1383:
 12906              	.LBB1262:
1663:src/keys.c    **** 	  }
 12907              		.loc 1 1663 13 view .LVU3946
 12908 18ee 4FF4E574 		mov	r4, #458
 12909 18f2 D9E7     		b	.L1046
 12910              	.LVL1090:
 12911              	.L1398:
1663:src/keys.c    **** 	  }
 12912              		.loc 1 1663 13 view .LVU3947
 12913              	.LBE1262:
 12914              	.LBE1383:
 12915              	.LBB1384:
 12916              	.LBB1150:
1747:src/keys.c    **** 		if (rawpc == 1)
 12917              		.loc 1 1747 3 is_stmt 1 view .LVU3948
1747:src/keys.c    **** 		if (rawpc == 1)
 12918              		.loc 1 1747 11 is_stmt 0 view .LVU3949
 12919 18f4 DFF8D8B2 		ldr	fp, .L1455+8
 12920 18f8 DBF80030 		ldr	r3, [fp]
 12921              	.LVL1091:
1747:src/keys.c    **** 		if (rawpc == 1)
 12922              		.loc 1 1747 9 view .LVU3950
 12923 18fc B3F8E007 		ldrh	r0, [r3, #2016]
 12924              	.LVL1092:
1748:src/keys.c    **** 			rawpc = 0;
 12925              		.loc 1 1748 3 is_stmt 1 view .LVU3951
1749:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12926              		.loc 1 1749 10 is_stmt 0 view .LVU3952
 12927 1900 0128     		cmp	r0, #1
 12928              	.LVL1093:
1750:src/keys.c    **** 		update_program_bounds(1);
 12929              		.loc 1 1750 3 is_stmt 1 view .LVU3953
 12930 1902 08BF     		it	eq
 12931 1904 0020     		moveq	r0, #0
 12932              	.LVL1094:
1750:src/keys.c    **** 		update_program_bounds(1);
 12933              		.loc 1 1750 3 is_stmt 0 view .LVU3954
 12934 1906 0021     		movs	r1, #0
 12935 1908 FFF7FEFF 		bl	do_dec
 12936              	.LVL1095:
ARM GAS  /tmp/ccvq0xdJ.s 			page 358


1750:src/keys.c    **** 		update_program_bounds(1);
 12937              		.loc 1 1750 3 view .LVU3955
 12938 190c FFF7FEFF 		bl	set_pc
 12939              	.LVL1096:
1751:src/keys.c    **** 		rawpc = ProgBegin;
 12940              		.loc 1 1751 3 is_stmt 1 view .LVU3956
 12941 1910 0120     		movs	r0, #1
 12942 1912 FFF7FEFF 		bl	update_program_bounds
 12943              	.LVL1097:
1752:src/keys.c    **** 		goto fin;
 12944              		.loc 1 1752 3 view .LVU3957
1752:src/keys.c    **** 		goto fin;
 12945              		.loc 1 1752 11 is_stmt 0 view .LVU3958
 12946 1916 DBF80030 		ldr	r3, [fp]
1752:src/keys.c    **** 		goto fin;
 12947              		.loc 1 1752 9 view .LVU3959
 12948 191a B3F8EC07 		ldrh	r0, [r3, #2028]
 12949              	.LVL1098:
1753:src/keys.c    **** 	}
 12950              		.loc 1 1753 3 is_stmt 1 view .LVU3960
 12951 191e FFF79EB8 		b	.L844
 12952              	.LVL1099:
 12953              	.L814:
1753:src/keys.c    **** 	}
 12954              		.loc 1 1753 3 is_stmt 0 view .LVU3961
 12955              	.LBE1150:
 12956              	.LBE1384:
 12957              	.LBB1385:
 12958              	.LBB1367:
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12959              		.loc 1 1256 3 is_stmt 1 view .LVU3962
 12960 1922 6420     		movs	r0, #100
 12961 1924 FFF7FEFF 		bl	get_reg_n
 12962              	.LVL1100:
 12963 1928 0446     		mov	r4, r0
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12964              		.loc 1 1256 33 is_stmt 0 view .LVU3963
 12965 192a 6E20     		movs	r0, #110
 12966 192c FFF7FEFF 		bl	get_reg_n
 12967              	.LVL1101:
 12968 1930 0146     		mov	r1, r0
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12969              		.loc 1 1256 3 view .LVU3964
 12970 1932 2046     		mov	r0, r4
 12971 1934 FFF7FEFF 		bl	copyreg
 12972              	.LVL1102:
1257:src/keys.c    **** 	}
 12973              		.loc 1 1257 3 is_stmt 1 view .LVU3965
 12974 1938 6520     		movs	r0, #101
 12975 193a 94E6     		b	.L1335
 12976              	.LVL1103:
 12977              	.L1384:
1257:src/keys.c    **** 	}
 12978              		.loc 1 1257 3 is_stmt 0 view .LVU3966
 12979 193c 2546     		mov	r5, r4
 12980 193e FEF7EBBD 		b	.L859
 12981              	.LVL1104:
ARM GAS  /tmp/ccvq0xdJ.s 			page 359


 12982              	.L938:
1257:src/keys.c    **** 	}
 12983              		.loc 1 1257 3 view .LVU3967
 12984              	.LBE1367:
 12985              	.LBE1385:
 12986              	.LBB1386:
 12987              	.LBB1204:
2839:src/keys.c    **** 			return STATE_UNFINISHED;
 12988              		.loc 1 2839 5 is_stmt 1 view .LVU3968
2839:src/keys.c    **** 			return STATE_UNFINISHED;
 12989              		.loc 1 2839 20 is_stmt 0 view .LVU3969
 12990 1942 013A     		subs	r2, r2, #1
 12991 1944 3368     		ldr	r3, [r6]
 12992 1946 88F80B20 		strb	r2, [r8, #11]
2840:src/keys.c    **** 		}
 12993              		.loc 1 2840 11 view .LVU3970
 12994 194a 3324     		movs	r4, #51
 12995              	.LVL1105:
2840:src/keys.c    **** 		}
 12996              		.loc 1 2840 11 view .LVU3971
 12997 194c FEF7B2BB 		b	.L797
 12998              	.LVL1106:
 12999              	.L1383:
2840:src/keys.c    **** 		}
 13000              		.loc 1 2840 11 view .LVU3972
 13001              	.LBE1204:
 13002              	.LBE1386:
 13003              	.LBE1452:
 13004              	.LBE1526:
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13005              		.loc 1 3650 2 is_stmt 1 view .LVU3973
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13006              		.loc 1 3650 18 is_stmt 0 view .LVU3974
 13007 1950 1A60     		str	r2, [r3]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13008              		.loc 1 3651 2 is_stmt 1 view .LVU3975
 13009 1952 FEF754BF 		b	.L1103
 13010              	.LVL1107:
 13011              	.L988:
 13012              	.LBB1527:
 13013              	.LBB1453:
 13014              	.LBB1387:
 13015              	.LBB1329:
3169:src/keys.c    **** 		goto reset_window;
 13016              		.loc 1 3169 4 view .LVU3976
3169:src/keys.c    **** 		goto reset_window;
 13017              		.loc 1 3169 18 is_stmt 0 view .LVU3977
 13018 1956 0023     		movs	r3, #0
 13019 1958 A8F80830 		strh	r3, [r8, #8]	@ movhi
 13020 195c 74E4     		b	.L977
 13021              	.LVL1108:
 13022              	.L1426:
3169:src/keys.c    **** 		goto reset_window;
 13023              		.loc 1 3169 18 view .LVU3978
 13024              	.LBE1329:
 13025              	.LBE1387:
 13026              	.LBB1388:
ARM GAS  /tmp/ccvq0xdJ.s 			page 360


 13027              	.LBB1094:
3006:src/keys.c    **** 		State2.digval = pc;
 13028              		.loc 1 3006 4 is_stmt 1 view .LVU3979
3006:src/keys.c    **** 		State2.digval = pc;
 13029              		.loc 1 3006 9 is_stmt 0 view .LVU3980
 13030 195e 2046     		mov	r0, r4
 13031 1960 0121     		movs	r1, #1
 13032 1962 FFF7FEFF 		bl	advance_to_next_label
 13033              	.LVL1109:
 13034 1966 0446     		mov	r4, r0
 13035              	.LVL1110:
3006:src/keys.c    **** 		State2.digval = pc;
 13036              		.loc 1 3006 9 view .LVU3981
 13037 1968 7BE7     		b	.L949
 13038              	.LVL1111:
 13039              	.L1418:
3006:src/keys.c    **** 		State2.digval = pc;
 13040              		.loc 1 3006 9 view .LVU3982
 13041              	.LBE1094:
 13042              	.LBE1388:
 13043              	.LBB1389:
 13044              	.LBB1330:
3130:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 13045              		.loc 1 3130 3 is_stmt 1 view .LVU3983
3130:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 13046              		.loc 1 3130 7 is_stmt 0 view .LVU3984
 13047 196a FFF7FEFF 		bl	local_regs
 13048              	.LVL1112:
3130:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 13049              		.loc 1 3130 6 view .LVU3985
 13050 196e 68B1     		cbz	r0, .L975
3131:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13051              		.loc 1 3131 4 is_stmt 1 view .LVU3986
3131:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13052              		.loc 1 3131 19 is_stmt 0 view .LVU3987
 13053 1970 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3131:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13054              		.loc 1 3131 34 view .LVU3988
 13055 1974 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3131:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13056              		.loc 1 3131 19 view .LVU3989
 13057 1978 03F00101 		and	r1, r3, #1
3131:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13058              		.loc 1 3131 34 view .LVU3990
 13059 197c 0A43     		orrs	r2, r1, r2
 13060 197e 0CBF     		ite	eq
 13061 1980 0122     		moveq	r2, #1
 13062 1982 0022     		movne	r2, #0
3131:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13063              		.loc 1 3131 17 view .LVU3991
 13064 1984 62F30003 		bfi	r3, r2, #0, #1
 13065 1988 88F81630 		strb	r3, [r8, #22]
 13066              	.L975:
3132:src/keys.c    **** 		goto reset_window;
 13067              		.loc 1 3132 3 is_stmt 1 view .LVU3992
3132:src/keys.c    **** 		goto reset_window;
 13068              		.loc 1 3132 32 is_stmt 0 view .LVU3993
ARM GAS  /tmp/ccvq0xdJ.s 			page 361


 13069 198c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3132:src/keys.c    **** 		goto reset_window;
 13070              		.loc 1 3132 17 view .LVU3994
 13071 1990 13F0010F 		tst	r3, #1
 13072 1994 14BF     		ite	ne
 13073 1996 0023     		movne	r3, #0
 13074 1998 6423     		moveq	r3, #100
 13075 199a A8F80830 		strh	r3, [r8, #8]	@ movhi
3133:src/keys.c    **** 	}
 13076              		.loc 1 3133 3 is_stmt 1 view .LVU3995
 13077 199e 53E4     		b	.L977
 13078              	.LVL1113:
 13079              	.L868:
3133:src/keys.c    **** 	}
 13080              		.loc 1 3133 3 is_stmt 0 view .LVU3996
 13081              	.LBE1330:
 13082              	.LBE1389:
 13083              	.LBB1390:
 13084              	.LBB1130:
2370:src/keys.c    **** 		// Special 1
 13085              		.loc 1 2370 7 is_stmt 1 view .LVU3997
2370:src/keys.c    **** 		// Special 1
 13086              		.loc 1 2370 10 is_stmt 0 view .LVU3998
 13087 19a0 012B     		cmp	r3, #1
 13088 19a2 7FF4BFA9 		bne	.L870
2372:src/keys.c    **** 	}
 13089              		.loc 1 2372 3 is_stmt 1 view .LVU3999
2372:src/keys.c    **** 	}
 13090              		.loc 1 2372 18 is_stmt 0 view .LVU4000
 13091 19a6 BEF1000F 		cmp	lr, #0
 13092 19aa 14BF     		ite	ne
 13093 19ac 2724     		movne	r4, #39
 13094              	.LVL1114:
2372:src/keys.c    **** 	}
 13095              		.loc 1 2372 18 view .LVU4001
 13096 19ae 1E24     		moveq	r4, #30
2372:src/keys.c    **** 	}
 13097              		.loc 1 2372 47 view .LVU4002
 13098 19b0 5444     		add	r4, r4, r10
 13099 19b2 FEF7F9BC 		b	.L832
 13100              	.LVL1115:
 13101              	.L985:
2372:src/keys.c    **** 	}
 13102              		.loc 1 2372 47 view .LVU4003
 13103              	.LBE1130:
 13104              	.LBE1390:
 13105              	.LBB1391:
 13106              	.LBB1331:
3159:src/keys.c    **** 		goto reset_window;
 13107              		.loc 1 3159 4 is_stmt 1 view .LVU4004
3159:src/keys.c    **** 		goto reset_window;
 13108              		.loc 1 3159 24 is_stmt 0 view .LVU4005
 13109 19b6 0AF1FF3A 		add	r10, r10, #-1
 13110              	.LVL1116:
3159:src/keys.c    **** 		goto reset_window;
 13111              		.loc 1 3159 18 view .LVU4006
 13112 19ba A8F808A0 		strh	r10, [r8, #8]	@ movhi
ARM GAS  /tmp/ccvq0xdJ.s 			page 362


 13113 19be 43E4     		b	.L977
 13114              	.LVL1117:
 13115              	.L1422:
3155:src/keys.c    **** 			--State2.digval;
 13116              		.loc 1 3155 5 is_stmt 1 view .LVU4007
3155:src/keys.c    **** 			--State2.digval;
 13117              		.loc 1 3155 21 is_stmt 0 view .LVU4008
 13118 19c0 FFF7FEFF 		bl	global_regs
 13119              	.LVL1118:
3155:src/keys.c    **** 			--State2.digval;
 13120              		.loc 1 3155 19 view .LVU4009
 13121 19c4 A8F80800 		strh	r0, [r8, #8]	@ movhi
 13122 19c8 39E4     		b	.L986
 13123              	.LVL1119:
 13124              	.L1041:
3155:src/keys.c    **** 			--State2.digval;
 13125              		.loc 1 3155 19 view .LVU4010
 13126              	.LBE1331:
 13127              	.LBE1391:
 13128              	.LBB1392:
 13129              	.LBB968:
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13130              		.loc 1 1304 4 is_stmt 1 view .LVU4011
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13131              		.loc 1 1304 7 is_stmt 0 view .LVU4012
 13132 19ca 0F2C     		cmp	r4, #15
 13133 19cc 7FF4E5AE 		bne	.L1042
1305:src/keys.c    ****        reset_shift();
 13134              		.loc 1 1305 6 is_stmt 1 view .LVU4013
1305:src/keys.c    ****        reset_shift();
 13135              		.loc 1 1305 9 is_stmt 0 view .LVU4014
 13136 19d0 BAF1010F 		cmp	r10, #1
 13137 19d4 26D0     		beq	.L1428
 13138              	.LBB889:
1321:src/keys.c    **** #endif
 13139              		.loc 1 1321 8 is_stmt 1 view .LVU4015
 13140              	.LVL1120:
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 13141              		.loc 1 1323 8 view .LVU4016
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 13142              		.loc 1 1323 11 is_stmt 0 view .LVU4017
 13143 19d6 BAF1030F 		cmp	r10, #3
 13144 19da 1AD0     		beq	.L1429
 13145              	.LBE889:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 13146              		.loc 1 1330 4 is_stmt 1 view .LVU4018
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 13147              		.loc 1 1330 7 is_stmt 0 view .LVU4019
 13148 19dc BAF1000F 		cmp	r10, #0
 13149 19e0 7FF4CDAD 		bne	.L1126
 13150              	.LVL1121:
 13151              	.L1077:
1423:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13152              		.loc 1 1423 6 is_stmt 1 view .LVU4020
1423:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13153              		.loc 1 1423 11 is_stmt 0 view .LVU4021
 13154 19e4 DBF80020 		ldr	r2, [fp]
ARM GAS  /tmp/ccvq0xdJ.s 			page 363


1423:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13155              		.loc 1 1423 10 view .LVU4022
 13156 19e8 92F8E437 		ldrb	r3, [r2, #2020]	@ zero_extendqisi2
1423:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13157              		.loc 1 1423 9 view .LVU4023
 13158 19ec 1807     		lsls	r0, r3, #28
 13159 19ee 03D4     		bmi	.L1076
1423:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13160              		.loc 1 1423 24 view .LVU4024
 13161 19f0 92F8EB17 		ldrb	r1, [r2, #2027]	@ zero_extendqisi2
1423:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13162              		.loc 1 1423 21 view .LVU4025
 13163 19f4 0907     		lsls	r1, r1, #28
 13164 19f6 02D5     		bpl	.L1430
 13165              	.L1076:
1439:src/keys.c    ****    case (K_CMPLX):
 13166              		.loc 1 1439 6 is_stmt 1 view .LVU4026
1439:src/keys.c    ****    case (K_CMPLX):
 13167              		.loc 1 1439 13 is_stmt 0 view .LVU4027
 13168 19f8 2046     		mov	r0, r4
 13169 19fa FEF751BC 		b	.L1341
 13170              	.L1430:
1424:src/keys.c    ****        stack_begin (1);
 13171              		.loc 1 1424 8 is_stmt 1 view .LVU4028
 13172 19fe 43F00803 		orr	r3, r3, #8
1425:src/keys.c    ****      }
 13173              		.loc 1 1425 8 is_stmt 0 view .LVU4029
 13174 1a02 0120     		movs	r0, #1
1424:src/keys.c    ****        stack_begin (1);
 13175              		.loc 1 1424 8 view .LVU4030
 13176 1a04 82F8E437 		strb	r3, [r2, #2020]
1425:src/keys.c    ****      }
 13177              		.loc 1 1425 8 is_stmt 1 view .LVU4031
 13178 1a08 FFF7FEFF 		bl	stack_begin
 13179              	.LVL1122:
1427:src/keys.c    ****    case (K22): // CHS
 13180              		.loc 1 1427 6 view .LVU4032
1439:src/keys.c    ****    case (K_CMPLX):
 13181              		.loc 1 1439 6 view .LVU4033
1439:src/keys.c    ****    case (K_CMPLX):
 13182              		.loc 1 1439 13 is_stmt 0 view .LVU4034
 13183 1a0c 2046     		mov	r0, r4
 13184 1a0e FEF747BC 		b	.L1341
 13185              	.LVL1123:
 13186              	.L1429:
 13187              	.LBB890:
1324:src/keys.c    **** 	 return process_cmplx(c);
 13188              		.loc 1 1324 3 is_stmt 1 view .LVU4035
 13189 1a12 0120     		movs	r0, #1
 13190 1a14 FFF7FEFF 		bl	finish_cpx_entry
 13191              	.LVL1124:
1325:src/keys.c    ****        }
 13192              		.loc 1 1325 3 view .LVU4036
1325:src/keys.c    ****        }
 13193              		.loc 1 1325 10 is_stmt 0 view .LVU4037
 13194 1a18 2046     		mov	r0, r4
 13195 1a1a FFF7FEFF 		bl	process_cmplx
ARM GAS  /tmp/ccvq0xdJ.s 			page 364


 13196              	.LVL1125:
 13197 1a1e 0446     		mov	r4, r0
 13198              	.LVL1126:
1325:src/keys.c    ****        }
 13199              		.loc 1 1325 10 view .LVU4038
 13200 1a20 FEF7C2BC 		b	.L832
 13201              	.LVL1127:
 13202              	.L1428:
1325:src/keys.c    ****        }
 13203              		.loc 1 1325 10 view .LVU4039
 13204              	.LBE890:
1306:src/keys.c    ****        if ( CmdLineLength ) {
 13205              		.loc 1 1306 8 is_stmt 1 view .LVU4040
 13206              	.LBB891:
 13207              	.LBI891:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13208              		.loc 1 114 13 view .LVU4041
 13209              	.LBE891:
 13210              	.LBE968:
 13211              	.LBE1392:
 13212              	.LBE1453:
 13213              	.LBE1527:
 115:src/keys.c    **** }
 13214              		.loc 1 115 2 view .LVU4042
 13215              	.LBB1528:
 13216              	.LBB1454:
 13217              	.LBB1393:
 13218              	.LBB969:
 13219              	.LBB898:
 13220              	.LBB892:
 13221              	.LBI892:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13222              		.loc 1 104 20 view .LVU4043
 13223              	.LBB893:
 105:src/keys.c    **** 	State2.shifts = shift;
 13224              		.loc 1 105 2 view .LVU4044
 13225              	.LBB894:
 13226              	.LBI894:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13227              		.loc 1 96 13 view .LVU4045
 13228              	.LBB895:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13229              		.loc 1 97 2 view .LVU4046
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13230              		.loc 1 97 18 is_stmt 0 view .LVU4047
 13231 1a24 FFF7FEFF 		bl	shift_down
 13232              	.LVL1128:
  98:src/keys.c    **** }
 13233              		.loc 1 98 2 is_stmt 1 view .LVU4048
 13234              	.LBE895:
 13235              	.LBE894:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13236              		.loc 1 106 2 view .LVU4049
 13237              	.LBE893:
 13238              	.LBE892:
 13239              	.LBE898:
1307:src/keys.c    **** 	 State2.state_lift = 0;
ARM GAS  /tmp/ccvq0xdJ.s 			page 365


 13240              		.loc 1 1307 11 is_stmt 0 view .LVU4050
 13241 1a28 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 13242              	.LBB899:
 13243              	.LBB897:
 13244              	.LBB896:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13245              		.loc 1 106 16 view .LVU4051
 13246 1a2c 0023     		movs	r3, #0
 13247 1a2e 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13248              		.loc 1 108 2 is_stmt 1 view .LVU4052
 13249              	.LVL1129:
 108:src/keys.c    **** }
 13250              		.loc 1 108 2 is_stmt 0 view .LVU4053
 13251              	.LBE896:
 13252              	.LBE897:
 13253              	.LBE899:
1307:src/keys.c    **** 	 State2.state_lift = 0;
 13254              		.loc 1 1307 8 is_stmt 1 view .LVU4054
1307:src/keys.c    **** 	 State2.state_lift = 0;
 13255              		.loc 1 1307 11 is_stmt 0 view .LVU4055
 13256 1a32 002A     		cmp	r2, #0
 13257 1a34 00F09980 		beq	.L1044
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13258              		.loc 1 1308 3 is_stmt 1 view .LVU4056
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13259              		.loc 1 1308 21 is_stmt 0 view .LVU4057
 13260 1a38 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 13261              	.LBE969:
 13262              	.LBE1393:
 13263              	.LBE1454:
 13264              	.LBE1528:
3649:src/keys.c    **** 	NonProgrammable = 0;
 13265              		.loc 1 3649 11 view .LVU4058
 13266 1a3c 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 13267              	.LBB1529:
 13268              	.LBB1455:
 13269              	.LBB1394:
 13270              	.LBB970:
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13271              		.loc 1 1308 21 view .LVU4059
 13272 1a40 63F38612 		bfi	r2, r3, #6, #1
 13273 1a44 88F81720 		strb	r2, [r8, #23]
1309:src/keys.c    ****        }
 13274              		.loc 1 1309 3 is_stmt 1 view .LVU4060
 13275              	.LVL1130:
1309:src/keys.c    ****        }
 13276              		.loc 1 1309 3 is_stmt 0 view .LVU4061
 13277              	.LBE970:
 13278              	.LBE1394:
 13279              	.LBE1455:
 13280              	.LBE1529:
3649:src/keys.c    **** 	NonProgrammable = 0;
 13281              		.loc 1 3649 7 is_stmt 1 view .LVU4062
3649:src/keys.c    **** 	NonProgrammable = 0;
 13282              		.loc 1 3649 10 is_stmt 0 view .LVU4063
 13283 1a48 4A06     		lsls	r2, r1, #25
ARM GAS  /tmp/ccvq0xdJ.s 			page 366


 13284 1a4a 00F18880 		bmi	.L1045
 13285              	.LBB1530:
 13286              	.LBB1456:
 13287              	.LBB1395:
 13288              	.LBB971:
1309:src/keys.c    ****        }
 13289              		.loc 1 1309 10 view .LVU4064
 13290 1a4e 40F2D114 		movw	r4, #465
 13291 1a52 29E7     		b	.L1046
 13292              	.LVL1131:
 13293              	.L1074:
1441:src/keys.c    ****        CLEAR_REAL;
 13294              		.loc 1 1441 6 is_stmt 1 view .LVU4065
1441:src/keys.c    ****        CLEAR_REAL;
 13295              		.loc 1 1441 10 is_stmt 0 view .LVU4066
 13296 1a54 DBF80030 		ldr	r3, [fp]
 13297 1a58 93F8E427 		ldrb	r2, [r3, #2020]	@ zero_extendqisi2
1441:src/keys.c    ****        CLEAR_REAL;
 13298              		.loc 1 1441 9 view .LVU4067
 13299 1a5c 1007     		lsls	r0, r2, #28
 13300 1a5e 5CD4     		bmi	.L1431
1448:src/keys.c    ****        finish_cpx_entry (1);
 13301              		.loc 1 1448 11 is_stmt 1 view .LVU4068
1448:src/keys.c    ****        finish_cpx_entry (1);
 13302              		.loc 1 1448 15 is_stmt 0 view .LVU4069
 13303 1a60 93F8EB27 		ldrb	r2, [r3, #2027]	@ zero_extendqisi2
1448:src/keys.c    ****        finish_cpx_entry (1);
 13304              		.loc 1 1448 14 view .LVU4070
 13305 1a64 1107     		lsls	r1, r2, #28
 13306 1a66 4DD5     		bpl	.L1083
1449:src/keys.c    ****      }
 13307              		.loc 1 1449 8 is_stmt 1 view .LVU4071
 13308 1a68 0120     		movs	r0, #1
 13309 1a6a FFF7FEFF 		bl	finish_cpx_entry
 13310              	.LVL1132:
1455:src/keys.c    ****    default:;
 13311              		.loc 1 1455 13 is_stmt 0 view .LVU4072
 13312 1a6e 3324     		movs	r4, #51
 13313              	.LVL1133:
1455:src/keys.c    ****    default:;
 13314              		.loc 1 1455 13 view .LVU4073
 13315 1a70 3368     		ldr	r3, [r6]
 13316 1a72 FEF71FBB 		b	.L797
 13317              	.LVL1134:
 13318              	.L1039:
1300:src/keys.c    ****      return process_fg_shifted (c);
 13319              		.loc 1 1300 4 is_stmt 1 view .LVU4074
1300:src/keys.c    ****      return process_fg_shifted (c);
 13320              		.loc 1 1300 7 is_stmt 0 view .LVU4075
 13321 1a76 631F     		subs	r3, r4, #5
 13322 1a78 032B     		cmp	r3, #3
 13323 1a7a 7FF62CAE 		bls	.L1338
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13324              		.loc 1 1304 4 is_stmt 1 view .LVU4076
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13325              		.loc 1 1304 7 is_stmt 0 view .LVU4077
 13326 1a7e 0F2C     		cmp	r4, #15
ARM GAS  /tmp/ccvq0xdJ.s 			page 367


 13327 1a80 3FF47DAD 		beq	.L1126
 13328              	.L1333:
1331:src/keys.c    ****      switch (c) {
 13329              		.loc 1 1331 6 is_stmt 1 view .LVU4078
 13330 1a84 0020     		movs	r0, #0
 13331 1a86 FFF7FEFF 		bl	finish_cpx_entry
 13332              	.LVL1135:
1332:src/keys.c    ****      case (K60):
 13333              		.loc 1 1332 6 view .LVU4079
 13334 1a8a A4F10D03 		sub	r3, r4, #13
 13335 1a8e 192B     		cmp	r3, #25
 13336 1a90 3FF678AD 		bhi	.L1340
 13337 1a94 01A2     		adr	r2, .L1051
 13338 1a96 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13339 1a9a 00BF     		.p2align 2
 13340              	.L1051:
 13341 1a9c 0F1C0000 		.word	.L1058+1
 13342 1aa0 D3070000 		.word	.L1057+1
 13343 1aa4 85150000 		.word	.L1340+1
 13344 1aa8 EB1C0000 		.word	.L1056+1
 13345 1aac 85150000 		.word	.L1340+1
 13346 1ab0 85150000 		.word	.L1340+1
 13347 1ab4 85150000 		.word	.L1340+1
 13348 1ab8 85150000 		.word	.L1340+1
 13349 1abc 85150000 		.word	.L1340+1
 13350 1ac0 5D1C0000 		.word	.L1055+1
 13351 1ac4 85150000 		.word	.L1340+1
 13352 1ac8 9F1C0000 		.word	.L1054+1
 13353 1acc 85150000 		.word	.L1340+1
 13354 1ad0 85150000 		.word	.L1340+1
 13355 1ad4 85150000 		.word	.L1340+1
 13356 1ad8 8D1C0000 		.word	.L1053+1
 13357 1adc 85150000 		.word	.L1340+1
 13358 1ae0 85150000 		.word	.L1340+1
 13359 1ae4 85150000 		.word	.L1340+1
 13360 1ae8 85150000 		.word	.L1340+1
 13361 1aec 85150000 		.word	.L1340+1
 13362 1af0 85150000 		.word	.L1340+1
 13363 1af4 85150000 		.word	.L1340+1
 13364 1af8 FF1B0000 		.word	.L1052+1
 13365 1afc 85150000 		.word	.L1340+1
 13366 1b00 D51B0000 		.word	.L1050+1
 13367              		.p2align 1
 13368              	.L1083:
1452:src/keys.c    ****        stack_begin (1);
 13369              		.loc 1 1452 8 view .LVU4080
 13370 1b04 42F00802 		orr	r2, r2, #8
 13371 1b08 83F8EB27 		strb	r2, [r3, #2027]
1453:src/keys.c    ****      }
 13372              		.loc 1 1453 8 view .LVU4081
 13373 1b0c 0120     		movs	r0, #1
 13374 1b0e FFF7FEFF 		bl	stack_begin
 13375              	.LVL1136:
1455:src/keys.c    ****    default:;
 13376              		.loc 1 1455 13 is_stmt 0 view .LVU4082
 13377 1b12 3324     		movs	r4, #51
 13378              	.LVL1137:
ARM GAS  /tmp/ccvq0xdJ.s 			page 368


1455:src/keys.c    ****    default:;
 13379              		.loc 1 1455 13 view .LVU4083
 13380 1b14 3368     		ldr	r3, [r6]
 13381 1b16 FEF7CDBA 		b	.L797
 13382              	.LVL1138:
 13383              	.L1431:
1442:src/keys.c    ****        SET_IMAG;
 13384              		.loc 1 1442 8 is_stmt 1 view .LVU4084
1443:src/keys.c    ****        do_command_line();
 13385              		.loc 1 1443 8 is_stmt 0 view .LVU4085
 13386 1b1a 93F8EB17 		ldrb	r1, [r3, #2027]	@ zero_extendqisi2
 13387 1b1e 41F00801 		orr	r1, r1, #8
 13388 1b22 83F8EB17 		strb	r1, [r3, #2027]
 13389              	.LBB900:
 13390              	.LBB901:
1201:src/keys.c    **** 		State2.state_lift = 0;
 13391              		.loc 1 1201 5 view .LVU4086
 13392 1b26 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 13393              	.LBE901:
 13394              	.LBE900:
1442:src/keys.c    ****        SET_IMAG;
 13395              		.loc 1 1442 8 view .LVU4087
 13396 1b2a 6FF3C302 		bfc	r2, #3, #1
 13397 1b2e 83F8E427 		strb	r2, [r3, #2020]
1443:src/keys.c    ****        do_command_line();
 13398              		.loc 1 1443 8 is_stmt 1 view .LVU4088
1444:src/keys.c    ****        State2.state_lift = 0;
 13399              		.loc 1 1444 8 view .LVU4089
 13400              	.LBB904:
 13401              	.LBI900:
1200:src/keys.c    **** 	if (CmdLineLength) {
 13402              		.loc 1 1200 13 view .LVU4090
 13403              	.LBB902:
1201:src/keys.c    **** 		State2.state_lift = 0;
 13404              		.loc 1 1201 2 view .LVU4091
1201:src/keys.c    **** 		State2.state_lift = 0;
 13405              		.loc 1 1201 5 is_stmt 0 view .LVU4092
 13406 1b32 21BB     		cbnz	r1, .L1432
 13407              	.L1082:
 13408              	.LBE902:
 13409              	.LBE904:
1445:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13410              		.loc 1 1445 8 is_stmt 1 view .LVU4093
1445:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13411              		.loc 1 1445 26 is_stmt 0 view .LVU4094
 13412 1b34 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1446:src/keys.c    ****      }
 13413              		.loc 1 1446 8 view .LVU4095
 13414 1b38 6420     		movs	r0, #100
1445:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13415              		.loc 1 1445 26 view .LVU4096
 13416 1b3a 6FF38613 		bfc	r3, #6, #1
 13417 1b3e 88F81730 		strb	r3, [r8, #23]
1446:src/keys.c    ****      }
 13418              		.loc 1 1446 8 is_stmt 1 view .LVU4097
 13419 1b42 FFF7FEFF 		bl	get_reg_n
 13420              	.LVL1139:
ARM GAS  /tmp/ccvq0xdJ.s 			page 369


 13421 1b46 0446     		mov	r4, r0
 13422              	.LVL1140:
1446:src/keys.c    ****      }
 13423              		.loc 1 1446 8 is_stmt 0 view .LVU4098
 13424 1b48 6520     		movs	r0, #101
 13425 1b4a FFF7FEFF 		bl	get_reg_n
 13426              	.LVL1141:
 13427 1b4e 0146     		mov	r1, r0
 13428 1b50 2046     		mov	r0, r4
 13429 1b52 FFF7FEFF 		bl	swap_reg
 13430              	.LVL1142:
1455:src/keys.c    ****    default:;
 13431              		.loc 1 1455 13 view .LVU4099
 13432 1b56 3324     		movs	r4, #51
 13433 1b58 3368     		ldr	r3, [r6]
 13434 1b5a FEF7ABBA 		b	.L797
 13435              	.LVL1143:
 13436              	.L1045:
1455:src/keys.c    ****    default:;
 13437              		.loc 1 1455 13 view .LVU4100
 13438              	.LBE971:
 13439              	.LBE1395:
 13440              	.LBE1456:
 13441              	.LBE1530:
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13442              		.loc 1 3650 2 is_stmt 1 view .LVU4101
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13443              		.loc 1 3650 18 is_stmt 0 view .LVU4102
 13444 1b5e 1B4A     		ldr	r2, .L1455+4
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13445              		.loc 1 3651 32 view .LVU4103
 13446 1b60 40F2D115 		movw	r5, #465
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13447              		.loc 1 3650 18 view .LVU4104
 13448 1b64 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13449              		.loc 1 3651 2 is_stmt 1 view .LVU4105
 13450 1b66 FEF74ABE 		b	.L1103
 13451              	.LVL1144:
 13452              	.L1044:
3649:src/keys.c    **** 	NonProgrammable = 0;
 13453              		.loc 1 3649 7 view .LVU4106
3649:src/keys.c    **** 	NonProgrammable = 0;
 13454              		.loc 1 3649 11 is_stmt 0 view .LVU4107
 13455 1b6a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3649:src/keys.c    **** 	NonProgrammable = 0;
 13456              		.loc 1 3649 10 view .LVU4108
 13457 1b6e 5906     		lsls	r1, r3, #25
 13458 1b70 0ED5     		bpl	.L1170
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13459              		.loc 1 3650 2 is_stmt 1 view .LVU4109
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13460              		.loc 1 3650 18 is_stmt 0 view .LVU4110
 13461 1b72 164B     		ldr	r3, .L1455+4
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13462              		.loc 1 3651 32 view .LVU4111
 13463 1b74 4FF4E875 		mov	r5, #464
ARM GAS  /tmp/ccvq0xdJ.s 			page 370


3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13464              		.loc 1 3650 18 view .LVU4112
 13465 1b78 1A60     		str	r2, [r3]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13466              		.loc 1 3651 2 is_stmt 1 view .LVU4113
 13467 1b7a FEF740BE 		b	.L1103
 13468              	.LVL1145:
 13469              	.L1432:
 13470              	.LBB1531:
 13471              	.LBB1457:
 13472              	.LBB1396:
 13473              	.LBB972:
 13474              	.LBB905:
 13475              	.LBB903:
1202:src/keys.c    **** 		process_cmdline();
 13476              		.loc 1 1202 3 view .LVU4114
1202:src/keys.c    **** 		process_cmdline();
 13477              		.loc 1 1202 21 is_stmt 0 view .LVU4115
 13478 1b7e 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 13479 1b82 6FF38613 		bfc	r3, #6, #1
 13480 1b86 88F81730 		strb	r3, [r8, #23]
1203:src/keys.c    **** 	}
 13481              		.loc 1 1203 3 is_stmt 1 view .LVU4116
 13482 1b8a FFF7FEFF 		bl	process_cmdline
 13483              	.LVL1146:
 13484 1b8e D1E7     		b	.L1082
 13485              	.LVL1147:
 13486              	.L1170:
1203:src/keys.c    **** 	}
 13487              		.loc 1 1203 3 is_stmt 0 view .LVU4117
 13488              	.LBE903:
 13489              	.LBE905:
1312:src/keys.c    ****        }
 13490              		.loc 1 1312 10 view .LVU4118
 13491 1b90 4FF4E874 		mov	r4, #464
 13492 1b94 88E6     		b	.L1046
 13493              	.LVL1148:
 13494              	.L1078:
1430:src/keys.c    ****        return process_cmplx(c);
 13495              		.loc 1 1430 6 is_stmt 1 view .LVU4119
1430:src/keys.c    ****        return process_cmplx(c);
 13496              		.loc 1 1430 11 is_stmt 0 view .LVU4120
 13497 1b96 DBF80030 		ldr	r3, [fp]
1430:src/keys.c    ****        return process_cmplx(c);
 13498              		.loc 1 1430 10 view .LVU4121
 13499 1b9a 93F8E427 		ldrb	r2, [r3, #2020]	@ zero_extendqisi2
1430:src/keys.c    ****        return process_cmplx(c);
 13500              		.loc 1 1430 9 view .LVU4122
 13501 1b9e 1507     		lsls	r5, r2, #28
1431:src/keys.c    ****      }
 13502              		.loc 1 1431 15 view .LVU4123
 13503 1ba0 4FF00E00 		mov	r0, #14
1430:src/keys.c    ****        return process_cmplx(c);
 13504              		.loc 1 1430 9 view .LVU4124
 13505 1ba4 3EF57CAB 		bmi	.L1341
1430:src/keys.c    ****        return process_cmplx(c);
 13506              		.loc 1 1430 24 view .LVU4125
ARM GAS  /tmp/ccvq0xdJ.s 			page 371


 13507 1ba8 93F8EB37 		ldrb	r3, [r3, #2027]	@ zero_extendqisi2
1430:src/keys.c    ****        return process_cmplx(c);
 13508              		.loc 1 1430 21 view .LVU4126
 13509 1bac 1C07     		lsls	r4, r3, #28
 13510              	.LVL1149:
1430:src/keys.c    ****        return process_cmplx(c);
 13511              		.loc 1 1430 21 view .LVU4127
 13512 1bae 3EF577AB 		bmi	.L1341
 13513 1bb2 E8E4     		b	.L1342
 13514              	.LVL1150:
 13515              	.L1073:
1456:src/keys.c    ****    }
 13516              		.loc 1 1456 12 is_stmt 1 view .LVU4128
1458:src/keys.c    ****    return process_cmplx(c);
 13517              		.loc 1 1458 4 view .LVU4129
 13518 1bb4 0020     		movs	r0, #0
 13519 1bb6 FFF7FEFF 		bl	finish_cpx_entry
 13520              	.LVL1151:
1459:src/keys.c    **** 
 13521              		.loc 1 1459 4 view .LVU4130
1459:src/keys.c    **** 
 13522              		.loc 1 1459 11 is_stmt 0 view .LVU4131
 13523 1bba 2046     		mov	r0, r4
 13524 1bbc FFF7FEFF 		bl	process_cmplx
 13525              	.LVL1152:
 13526 1bc0 0446     		mov	r4, r0
 13527              	.LVL1153:
1459:src/keys.c    **** 
 13528              		.loc 1 1459 11 view .LVU4132
 13529 1bc2 FEF7F1BB 		b	.L832
 13530              	.L1456:
 13531 1bc6 00BF     		.align	2
 13532              	.L1455:
 13533 1bc8 00000000 		.word	.LANCHOR17
 13534 1bcc 00000000 		.word	NonProgrammable
 13535 1bd0 00000000 		.word	main_ram
 13536              	.LVL1154:
 13537              	.L1050:
1368:src/keys.c    ****        if (shift == SHIFT_F) {
 13538              		.loc 1 1368 8 is_stmt 1 view .LVU4133
 13539              	.LBB906:
 13540              	.LBI906:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13541              		.loc 1 114 13 view .LVU4134
 13542              	.LBE906:
 13543              	.LBE972:
 13544              	.LBE1396:
 13545              	.LBE1457:
 13546              	.LBE1531:
 115:src/keys.c    **** }
 13547              		.loc 1 115 2 view .LVU4135
 13548              	.LBB1532:
 13549              	.LBB1458:
 13550              	.LBB1397:
 13551              	.LBB973:
 13552              	.LBB913:
 13553              	.LBB907:
ARM GAS  /tmp/ccvq0xdJ.s 			page 372


 13554              	.LBI907:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13555              		.loc 1 104 20 view .LVU4136
 13556              	.LBB908:
 105:src/keys.c    **** 	State2.shifts = shift;
 13557              		.loc 1 105 2 view .LVU4137
 13558              	.LBB909:
 13559              	.LBI909:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13560              		.loc 1 96 13 view .LVU4138
 13561              	.LBB910:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13562              		.loc 1 97 2 view .LVU4139
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13563              		.loc 1 97 18 is_stmt 0 view .LVU4140
 13564 1bd4 FFF7FEFF 		bl	shift_down
 13565              	.LVL1155:
  98:src/keys.c    **** }
 13566              		.loc 1 98 2 is_stmt 1 view .LVU4141
 13567              	.LBE910:
 13568              	.LBE909:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13569              		.loc 1 106 2 view .LVU4142
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13570              		.loc 1 106 16 is_stmt 0 view .LVU4143
 13571 1bd8 0023     		movs	r3, #0
 13572              	.LBE908:
 13573              	.LBE907:
 13574              	.LBE913:
1369:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13575              		.loc 1 1369 11 view .LVU4144
 13576 1bda BAF1010F 		cmp	r10, #1
 13577              	.LBB914:
 13578              	.LBB912:
 13579              	.LBB911:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13580              		.loc 1 106 16 view .LVU4145
 13581 1bde 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13582              		.loc 1 108 2 is_stmt 1 view .LVU4146
 13583              	.LVL1156:
 108:src/keys.c    **** }
 13584              		.loc 1 108 2 is_stmt 0 view .LVU4147
 13585              	.LBE911:
 13586              	.LBE912:
 13587              	.LBE914:
1369:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13588              		.loc 1 1369 8 is_stmt 1 view .LVU4148
1369:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13589              		.loc 1 1369 11 is_stmt 0 view .LVU4149
 13590 1be2 00F0B880 		beq	.L1067
1372:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13591              		.loc 1 1372 13 is_stmt 1 view .LVU4150
1372:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13592              		.loc 1 1372 16 is_stmt 0 view .LVU4151
 13593 1be6 BAF1020F 		cmp	r10, #2
 13594 1bea 2DD0     		beq	.L1433
ARM GAS  /tmp/ccvq0xdJ.s 			page 373


 13595              	.LVL1157:
 13596              	.L1063:
1406:src/keys.c    ****      return STATE_UNFINISHED;
 13597              		.loc 1 1406 6 is_stmt 1 view .LVU4152
 13598              	.LBB915:
 13599              	.LBI915:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13600              		.loc 1 114 13 view .LVU4153
 13601              	.LBE915:
 13602              	.LBE973:
 13603              	.LBE1397:
 13604              	.LBE1458:
 13605              	.LBE1532:
 115:src/keys.c    **** }
 13606              		.loc 1 115 2 view .LVU4154
 13607              	.LBB1533:
 13608              	.LBB1459:
 13609              	.LBB1398:
 13610              	.LBB974:
 13611              	.LBB920:
 13612              	.LBB916:
 13613              	.LBI916:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13614              		.loc 1 104 20 view .LVU4155
 13615              	.LBB917:
 105:src/keys.c    **** 	State2.shifts = shift;
 13616              		.loc 1 105 2 view .LVU4156
 13617              	.LBB918:
 13618              	.LBI918:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13619              		.loc 1 96 13 view .LVU4157
 13620              	.LBB919:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13621              		.loc 1 97 2 view .LVU4158
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13622              		.loc 1 97 18 is_stmt 0 view .LVU4159
 13623 1bec FFF7FEFF 		bl	shift_down
 13624              	.LVL1158:
  98:src/keys.c    **** }
 13625              		.loc 1 98 2 is_stmt 1 view .LVU4160
 13626              	.LBE919:
 13627              	.LBE918:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13628              		.loc 1 106 2 view .LVU4161
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13629              		.loc 1 106 16 is_stmt 0 view .LVU4162
 13630 1bf0 0022     		movs	r2, #0
 13631 1bf2 3368     		ldr	r3, [r6]
 13632 1bf4 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13633              		.loc 1 108 2 is_stmt 1 view .LVU4163
 13634              	.LVL1159:
 108:src/keys.c    **** }
 13635              		.loc 1 108 2 is_stmt 0 view .LVU4164
 13636              	.LBE917:
 13637              	.LBE916:
 13638              	.LBE920:
ARM GAS  /tmp/ccvq0xdJ.s 			page 374


1407:src/keys.c    ****    }
 13639              		.loc 1 1407 6 is_stmt 1 view .LVU4165
1407:src/keys.c    ****    }
 13640              		.loc 1 1407 13 is_stmt 0 view .LVU4166
 13641 1bf8 3324     		movs	r4, #51
 13642 1bfa FEF75BBA 		b	.L797
 13643              	.LVL1160:
 13644              	.L1052:
1334:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
 13645              		.loc 1 1334 8 is_stmt 1 view .LVU4167
 13646              	.LBB921:
 13647              	.LBI921:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13648              		.loc 1 114 13 view .LVU4168
 13649              	.LBE921:
 13650              	.LBE974:
 13651              	.LBE1398:
 13652              	.LBE1459:
 13653              	.LBE1533:
 115:src/keys.c    **** }
 13654              		.loc 1 115 2 view .LVU4169
 13655              	.LBB1534:
 13656              	.LBB1460:
 13657              	.LBB1399:
 13658              	.LBB975:
 13659              	.LBB928:
 13660              	.LBB922:
 13661              	.LBI922:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13662              		.loc 1 104 20 view .LVU4170
 13663              	.LBB923:
 105:src/keys.c    **** 	State2.shifts = shift;
 13664              		.loc 1 105 2 view .LVU4171
 13665              	.LBB924:
 13666              	.LBI924:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13667              		.loc 1 96 13 view .LVU4172
 13668              	.LBB925:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13669              		.loc 1 97 2 view .LVU4173
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13670              		.loc 1 97 18 is_stmt 0 view .LVU4174
 13671 1bfe FFF7FEFF 		bl	shift_down
 13672              	.LVL1161:
  98:src/keys.c    **** }
 13673              		.loc 1 98 2 is_stmt 1 view .LVU4175
 13674              	.LBE925:
 13675              	.LBE924:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13676              		.loc 1 106 2 view .LVU4176
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13677              		.loc 1 106 16 is_stmt 0 view .LVU4177
 13678 1c02 0023     		movs	r3, #0
 13679              	.LBE923:
 13680              	.LBE922:
 13681              	.LBE928:
1335:src/keys.c    ****      case (K21): // x<->y key
ARM GAS  /tmp/ccvq0xdJ.s 			page 375


 13682              		.loc 1 1335 11 view .LVU4178
 13683 1c04 BAF1030F 		cmp	r10, #3
 13684              	.LBB929:
 13685              	.LBB927:
 13686              	.LBB926:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13687              		.loc 1 106 16 view .LVU4179
 13688 1c08 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13689              		.loc 1 108 2 is_stmt 1 view .LVU4180
 13690              	.LVL1162:
 108:src/keys.c    **** }
 13691              		.loc 1 108 2 is_stmt 0 view .LVU4181
 13692              	.LBE926:
 13693              	.LBE927:
 13694              	.LBE929:
1335:src/keys.c    ****      case (K21): // x<->y key
 13695              		.loc 1 1335 8 is_stmt 1 view .LVU4182
1335:src/keys.c    ****      case (K21): // x<->y key
 13696              		.loc 1 1335 11 is_stmt 0 view .LVU4183
 13697 1c0c 11D0     		beq	.L1059
 13698              	.L1058:
1337:src/keys.c    **** 	 return process_fg_shifted(c); // SHOW
 13699              		.loc 1 1337 8 is_stmt 1 view .LVU4184
1337:src/keys.c    **** 	 return process_fg_shifted(c); // SHOW
 13700              		.loc 1 1337 11 is_stmt 0 view .LVU4185
 13701 1c0e BAF1010F 		cmp	r10, #1
 13702 1c12 3FF460AD 		beq	.L1338
1340:src/keys.c    **** 	 reset_shift();
 13703              		.loc 1 1340 8 is_stmt 1 view .LVU4186
1340:src/keys.c    **** 	 reset_shift();
 13704              		.loc 1 1340 11 is_stmt 0 view .LVU4187
 13705 1c16 BAF1020F 		cmp	r10, #2
 13706 1c1a E7D1     		bne	.L1063
1341:src/keys.c    **** 	 return process_normal(K21); // x<>y
 13707              		.loc 1 1341 3 is_stmt 1 view .LVU4188
 13708              	.LBB930:
 13709              	.LBI930:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13710              		.loc 1 114 13 view .LVU4189
 13711              	.LBE930:
 13712              	.LBE975:
 13713              	.LBE1399:
 13714              	.LBE1460:
 13715              	.LBE1534:
 115:src/keys.c    **** }
 13716              		.loc 1 115 2 view .LVU4190
 13717              	.LVL1163:
 13718              	.LBB1535:
 13719              	.LBB1461:
 13720              	.LBB1400:
 13721              	.LBB976:
 13722              	.LBB937:
 13723              	.LBB931:
 13724              	.LBI931:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13725              		.loc 1 104 20 view .LVU4191
ARM GAS  /tmp/ccvq0xdJ.s 			page 376


 13726              	.LBB932:
 105:src/keys.c    **** 	State2.shifts = shift;
 13727              		.loc 1 105 2 view .LVU4192
 13728              	.LBB933:
 13729              	.LBI933:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13730              		.loc 1 96 13 view .LVU4193
 13731              	.LBB934:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13732              		.loc 1 97 2 view .LVU4194
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13733              		.loc 1 97 18 is_stmt 0 view .LVU4195
 13734 1c1c FFF7FEFF 		bl	shift_down
 13735              	.LVL1164:
  98:src/keys.c    **** }
 13736              		.loc 1 98 2 is_stmt 1 view .LVU4196
 13737              	.LBE934:
 13738              	.LBE933:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13739              		.loc 1 106 2 view .LVU4197
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13740              		.loc 1 106 16 is_stmt 0 view .LVU4198
 13741 1c20 0023     		movs	r3, #0
 13742              	.LBE932:
 13743              	.LBE931:
 13744              	.LBE937:
1342:src/keys.c    ****        }
 13745              		.loc 1 1342 10 view .LVU4199
 13746 1c22 0D20     		movs	r0, #13
 13747              	.LBB938:
 13748              	.LBB936:
 13749              	.LBB935:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13750              		.loc 1 106 16 view .LVU4200
 13751 1c24 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13752              		.loc 1 108 2 is_stmt 1 view .LVU4201
 13753              	.LVL1165:
 108:src/keys.c    **** }
 13754              		.loc 1 108 2 is_stmt 0 view .LVU4202
 13755              	.LBE935:
 13756              	.LBE936:
 13757              	.LBE938:
1342:src/keys.c    ****        }
 13758              		.loc 1 1342 3 is_stmt 1 view .LVU4203
1342:src/keys.c    ****        }
 13759              		.loc 1 1342 10 is_stmt 0 view .LVU4204
 13760 1c28 FFF7FEFF 		bl	process_normal
 13761              	.LVL1166:
 13762 1c2c 0446     		mov	r4, r0
 13763              	.LVL1167:
1342:src/keys.c    ****        }
 13764              		.loc 1 1342 10 view .LVU4205
 13765 1c2e FEF7BBBB 		b	.L832
 13766              	.LVL1168:
 13767              	.L1059:
1342:src/keys.c    ****        }
ARM GAS  /tmp/ccvq0xdJ.s 			page 377


 13768              		.loc 1 1342 10 view .LVU4206
 13769              	.LBE976:
 13770              	.LBE1400:
 13771              	.LBE1461:
 13772              	.LBE1535:
3649:src/keys.c    **** 	NonProgrammable = 0;
 13773              		.loc 1 3649 7 is_stmt 1 view .LVU4207
3649:src/keys.c    **** 	NonProgrammable = 0;
 13774              		.loc 1 3649 11 is_stmt 0 view .LVU4208
 13775 1c32 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3649:src/keys.c    **** 	NonProgrammable = 0;
 13776              		.loc 1 3649 10 view .LVU4209
 13777 1c36 5406     		lsls	r4, r2, #25
 13778 1c38 40F19780 		bpl	.L1163
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13779              		.loc 1 3650 2 is_stmt 1 view .LVU4210
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13780              		.loc 1 3650 18 is_stmt 0 view .LVU4211
 13781 1c3c C44A     		ldr	r2, .L1457
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13782              		.loc 1 3651 32 view .LVU4212
 13783 1c3e 4FF48175 		mov	r5, #258
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13784              		.loc 1 3650 18 view .LVU4213
 13785 1c42 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13786              		.loc 1 3651 2 is_stmt 1 view .LVU4214
 13787 1c44 FEF7DBBD 		b	.L1103
 13788              	.LVL1169:
 13789              	.L1433:
3649:src/keys.c    **** 	NonProgrammable = 0;
 13790              		.loc 1 3649 7 view .LVU4215
3649:src/keys.c    **** 	NonProgrammable = 0;
 13791              		.loc 1 3649 11 is_stmt 0 view .LVU4216
 13792 1c48 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3649:src/keys.c    **** 	NonProgrammable = 0;
 13793              		.loc 1 3649 10 view .LVU4217
 13794 1c4c 5506     		lsls	r5, r2, #25
 13795 1c4e 6CD5     		bpl	.L1167
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13796              		.loc 1 3650 2 is_stmt 1 view .LVU4218
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13797              		.loc 1 3650 18 is_stmt 0 view .LVU4219
 13798 1c50 BF4A     		ldr	r2, .L1457
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13799              		.loc 1 3651 32 view .LVU4220
 13800 1c52 4FF4E775 		mov	r5, #462
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13801              		.loc 1 3650 18 view .LVU4221
 13802 1c56 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13803              		.loc 1 3651 2 is_stmt 1 view .LVU4222
 13804 1c58 FEF7D1BD 		b	.L1103
 13805              	.LVL1170:
 13806              	.L1055:
 13807              	.LBB1536:
 13808              	.LBB1462:
ARM GAS  /tmp/ccvq0xdJ.s 			page 378


 13809              	.LBB1401:
 13810              	.LBB977:
1384:src/keys.c    ****      case (K34): // divide key
 13811              		.loc 1 1384 8 view .LVU4223
1386:src/keys.c    **** 	 reset_shift();
 13812              		.loc 1 1386 8 view .LVU4224
1386:src/keys.c    **** 	 reset_shift();
 13813              		.loc 1 1386 11 is_stmt 0 view .LVU4225
 13814 1c5c BAF1030F 		cmp	r10, #3
 13815 1c60 05D0     		beq	.L1434
1391:src/keys.c    ****        }
 13816              		.loc 1 1391 3 is_stmt 1 view .LVU4226
1391:src/keys.c    ****        }
 13817              		.loc 1 1391 10 is_stmt 0 view .LVU4227
 13818 1c62 1620     		movs	r0, #22
 13819 1c64 FFF7FEFF 		bl	process_cmplx
 13820              	.LVL1171:
 13821 1c68 0446     		mov	r4, r0
 13822              	.LVL1172:
1391:src/keys.c    ****        }
 13823              		.loc 1 1391 10 view .LVU4228
 13824 1c6a FEF79DBB 		b	.L832
 13825              	.LVL1173:
 13826              	.L1434:
1387:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
 13827              		.loc 1 1387 3 is_stmt 1 view .LVU4229
 13828              	.LBB939:
 13829              	.LBI939:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13830              		.loc 1 114 13 view .LVU4230
 13831              	.LBE939:
 13832              	.LBE977:
 13833              	.LBE1401:
 13834              	.LBE1462:
 13835              	.LBE1536:
 115:src/keys.c    **** }
 13836              		.loc 1 115 2 view .LVU4231
 13837              	.LBB1537:
 13838              	.LBB1463:
 13839              	.LBB1402:
 13840              	.LBB978:
 13841              	.LBB948:
 13842              	.LBB940:
 13843              	.LBI940:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13844              		.loc 1 104 20 view .LVU4232
 13845              	.LBB941:
 105:src/keys.c    **** 	State2.shifts = shift;
 13846              		.loc 1 105 2 view .LVU4233
 13847              	.LBB942:
 13848              	.LBI942:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13849              		.loc 1 96 13 view .LVU4234
 13850              	.LBB943:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13851              		.loc 1 97 2 view .LVU4235
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccvq0xdJ.s 			page 379


 13852              		.loc 1 97 18 is_stmt 0 view .LVU4236
 13853 1c6e FFF7FEFF 		bl	shift_down
 13854              	.LVL1174:
  98:src/keys.c    **** }
 13855              		.loc 1 98 2 is_stmt 1 view .LVU4237
 13856              	.LBE943:
 13857              	.LBE942:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13858              		.loc 1 106 2 view .LVU4238
 13859              	.LBE941:
 13860              	.LBE940:
 13861              	.LBE948:
 13862              	.LBE978:
 13863              	.LBE1402:
 13864              	.LBE1463:
 13865              	.LBE1537:
3649:src/keys.c    **** 	NonProgrammable = 0;
 13866              		.loc 1 3649 11 is_stmt 0 view .LVU4239
 13867 1c72 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13868              	.LBB1538:
 13869              	.LBB1464:
 13870              	.LBB1403:
 13871              	.LBB979:
 13872              	.LBB949:
 13873              	.LBB946:
 13874              	.LBB944:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13875              		.loc 1 106 16 view .LVU4240
 13876 1c76 0023     		movs	r3, #0
 13877              	.LBE944:
 13878              	.LBE946:
 13879              	.LBE949:
 13880              	.LBE979:
 13881              	.LBE1403:
 13882              	.LBE1464:
 13883              	.LBE1538:
3649:src/keys.c    **** 	NonProgrammable = 0;
 13884              		.loc 1 3649 10 view .LVU4241
 13885 1c78 5406     		lsls	r4, r2, #25
 13886              	.LVL1175:
 13887              	.LBB1539:
 13888              	.LBB1465:
 13889              	.LBB1404:
 13890              	.LBB980:
 13891              	.LBB950:
 13892              	.LBB947:
 13893              	.LBB945:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13894              		.loc 1 106 16 view .LVU4242
 13895 1c7a 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13896              		.loc 1 108 2 is_stmt 1 view .LVU4243
 13897              	.LVL1176:
 108:src/keys.c    **** }
 13898              		.loc 1 108 2 is_stmt 0 view .LVU4244
 13899              	.LBE945:
 13900              	.LBE947:
ARM GAS  /tmp/ccvq0xdJ.s 			page 380


 13901              	.LBE950:
1388:src/keys.c    ****        }
 13902              		.loc 1 1388 3 is_stmt 1 view .LVU4245
1388:src/keys.c    ****        }
 13903              		.loc 1 1388 3 is_stmt 0 view .LVU4246
 13904              	.LBE980:
 13905              	.LBE1404:
 13906              	.LBE1465:
 13907              	.LBE1539:
3649:src/keys.c    **** 	NonProgrammable = 0;
 13908              		.loc 1 3649 7 is_stmt 1 view .LVU4247
3649:src/keys.c    **** 	NonProgrammable = 0;
 13909              		.loc 1 3649 10 is_stmt 0 view .LVU4248
 13910 1c7e 61D4     		bmi	.L1072
 13911              	.LBB1540:
 13912              	.LBB1466:
 13913              	.LBB1405:
 13914              	.LBB981:
1388:src/keys.c    ****        }
 13915              		.loc 1 1388 10 view .LVU4249
 13916 1c80 4FF4C664 		mov	r4, #1584
 13917 1c84 10E6     		b	.L1046
 13918              	.LVL1177:
 13919              	.L1165:
1364:src/keys.c    ****        }
 13920              		.loc 1 1364 10 view .LVU4250
 13921 1c86 40F2CD14 		movw	r4, #461
 13922 1c8a 0DE6     		b	.L1046
 13923              	.LVL1178:
 13924              	.L1053:
1377:src/keys.c    **** 	 reset_shift();
 13925              		.loc 1 1377 8 is_stmt 1 view .LVU4251
1377:src/keys.c    **** 	 reset_shift();
 13926              		.loc 1 1377 11 is_stmt 0 view .LVU4252
 13927 1c8c BAF1030F 		cmp	r10, #3
 13928 1c90 14D0     		beq	.L1435
1382:src/keys.c    ****        }
 13929              		.loc 1 1382 3 is_stmt 1 view .LVU4253
1382:src/keys.c    ****        }
 13930              		.loc 1 1382 10 is_stmt 0 view .LVU4254
 13931 1c92 1C20     		movs	r0, #28
 13932 1c94 FFF7FEFF 		bl	process_cmplx
 13933              	.LVL1179:
 13934 1c98 0446     		mov	r4, r0
 13935              	.LVL1180:
1382:src/keys.c    ****        }
 13936              		.loc 1 1382 10 view .LVU4255
 13937 1c9a FEF785BB 		b	.L832
 13938              	.LVL1181:
 13939              	.L1054:
1346:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13940              		.loc 1 1346 8 is_stmt 1 view .LVU4256
1346:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13941              		.loc 1 1346 11 is_stmt 0 view .LVU4257
 13942 1c9e BAF1010F 		cmp	r10, #1
 13943 1ca2 68D0     		beq	.L1436
1349:src/keys.c    **** 	 SET_POLAR_DISPLAY;
ARM GAS  /tmp/ccvq0xdJ.s 			page 381


 13944              		.loc 1 1349 13 is_stmt 1 view .LVU4258
1349:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13945              		.loc 1 1349 16 is_stmt 0 view .LVU4259
 13946 1ca4 BAF1020F 		cmp	r10, #2
 13947 1ca8 14D0     		beq	.L1437
1354:src/keys.c    **** 	 return process_cmplx (c);
 13948              		.loc 1 1354 13 is_stmt 1 view .LVU4260
1354:src/keys.c    **** 	 return process_cmplx (c);
 13949              		.loc 1 1354 16 is_stmt 0 view .LVU4261
 13950 1caa BAF1030F 		cmp	r10, #3
 13951 1cae 9DD1     		bne	.L1063
1355:src/keys.c    ****        }
 13952              		.loc 1 1355 3 is_stmt 1 view .LVU4262
1355:src/keys.c    ****        }
 13953              		.loc 1 1355 10 is_stmt 0 view .LVU4263
 13954 1cb0 1820     		movs	r0, #24
 13955 1cb2 FFF7FEFF 		bl	process_cmplx
 13956              	.LVL1182:
 13957 1cb6 0446     		mov	r4, r0
 13958              	.LVL1183:
1355:src/keys.c    ****        }
 13959              		.loc 1 1355 10 view .LVU4264
 13960 1cb8 FEF776BB 		b	.L832
 13961              	.LVL1184:
 13962              	.L1435:
1378:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
 13963              		.loc 1 1378 3 is_stmt 1 view .LVU4265
 13964              	.LBB951:
 13965              	.LBI951:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13966              		.loc 1 114 13 view .LVU4266
 13967              	.LBE951:
 13968              	.LBE981:
 13969              	.LBE1405:
 13970              	.LBE1466:
 13971              	.LBE1540:
 115:src/keys.c    **** }
 13972              		.loc 1 115 2 view .LVU4267
 13973              	.LBB1541:
 13974              	.LBB1467:
 13975              	.LBB1406:
 13976              	.LBB982:
 13977              	.LBB960:
 13978              	.LBB952:
 13979              	.LBI952:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13980              		.loc 1 104 20 view .LVU4268
 13981              	.LBB953:
 105:src/keys.c    **** 	State2.shifts = shift;
 13982              		.loc 1 105 2 view .LVU4269
 13983              	.LBB954:
 13984              	.LBI954:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13985              		.loc 1 96 13 view .LVU4270
 13986              	.LBB955:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13987              		.loc 1 97 2 view .LVU4271
ARM GAS  /tmp/ccvq0xdJ.s 			page 382


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13988              		.loc 1 97 18 is_stmt 0 view .LVU4272
 13989 1cbc FFF7FEFF 		bl	shift_down
 13990              	.LVL1185:
  98:src/keys.c    **** }
 13991              		.loc 1 98 2 is_stmt 1 view .LVU4273
 13992              	.LBE955:
 13993              	.LBE954:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13994              		.loc 1 106 2 view .LVU4274
 13995              	.LBE953:
 13996              	.LBE952:
 13997              	.LBE960:
 13998              	.LBE982:
 13999              	.LBE1406:
 14000              	.LBE1467:
 14001              	.LBE1541:
3649:src/keys.c    **** 	NonProgrammable = 0;
 14002              		.loc 1 3649 11 is_stmt 0 view .LVU4275
 14003 1cc0 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 14004              	.LBB1542:
 14005              	.LBB1468:
 14006              	.LBB1407:
 14007              	.LBB983:
 14008              	.LBB961:
 14009              	.LBB958:
 14010              	.LBB956:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14011              		.loc 1 106 16 view .LVU4276
 14012 1cc4 0023     		movs	r3, #0
 14013              	.LBE956:
 14014              	.LBE958:
 14015              	.LBE961:
 14016              	.LBE983:
 14017              	.LBE1407:
 14018              	.LBE1468:
 14019              	.LBE1542:
3649:src/keys.c    **** 	NonProgrammable = 0;
 14020              		.loc 1 3649 10 view .LVU4277
 14021 1cc6 5506     		lsls	r5, r2, #25
 14022              	.LBB1543:
 14023              	.LBB1469:
 14024              	.LBB1408:
 14025              	.LBB984:
 14026              	.LBB962:
 14027              	.LBB959:
 14028              	.LBB957:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14029              		.loc 1 106 16 view .LVU4278
 14030 1cc8 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14031              		.loc 1 108 2 is_stmt 1 view .LVU4279
 14032              	.LVL1186:
 108:src/keys.c    **** }
 14033              		.loc 1 108 2 is_stmt 0 view .LVU4280
 14034              	.LBE957:
 14035              	.LBE959:
ARM GAS  /tmp/ccvq0xdJ.s 			page 383


 14036              	.LBE962:
1379:src/keys.c    ****        }
 14037              		.loc 1 1379 3 is_stmt 1 view .LVU4281
1379:src/keys.c    ****        }
 14038              		.loc 1 1379 3 is_stmt 0 view .LVU4282
 14039              	.LBE984:
 14040              	.LBE1408:
 14041              	.LBE1469:
 14042              	.LBE1543:
3649:src/keys.c    **** 	NonProgrammable = 0;
 14043              		.loc 1 3649 7 is_stmt 1 view .LVU4283
3649:src/keys.c    **** 	NonProgrammable = 0;
 14044              		.loc 1 3649 10 is_stmt 0 view .LVU4284
 14045 1ccc 5CD4     		bmi	.L1070
 14046              	.LBB1544:
 14047              	.LBB1470:
 14048              	.LBB1409:
 14049              	.LBB985:
1379:src/keys.c    ****        }
 14050              		.loc 1 1379 10 view .LVU4285
 14051 1cce 40F22F64 		movw	r4, #1583
 14052 1cd2 E9E5     		b	.L1046
 14053              	.LVL1187:
 14054              	.L1437:
1350:src/keys.c    **** 	 CLEAR_POLAR_READY;
 14055              		.loc 1 1350 3 is_stmt 1 view .LVU4286
 14056 1cd4 DBF80020 		ldr	r2, [fp]
1351:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
 14057              		.loc 1 1351 3 view .LVU4287
1350:src/keys.c    **** 	 CLEAR_POLAR_READY;
 14058              		.loc 1 1350 3 is_stmt 0 view .LVU4288
 14059 1cd8 92F8DE37 		ldrb	r3, [r2, #2014]	@ zero_extendqisi2
 14060 1cdc 23F01803 		bic	r3, r3, #24
 14061 1ce0 43F01803 		orr	r3, r3, #24
 14062 1ce4 82F8DE37 		strb	r3, [r2, #2014]
1352:src/keys.c    ****        }
 14063              		.loc 1 1352 18 is_stmt 1 view .LVU4289
 14064 1ce8 80E7     		b	.L1063
 14065              	.L1056:
1393:src/keys.c    ****      case (K24): // <- key
 14066              		.loc 1 1393 8 view .LVU4290
1395:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 14067              		.loc 1 1395 8 view .LVU4291
1395:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 14068              		.loc 1 1395 12 is_stmt 0 view .LVU4292
 14069 1cea DBF80030 		ldr	r3, [fp]
 14070 1cee 93F8DE47 		ldrb	r4, [r3, #2014]	@ zero_extendqisi2
 14071              	.LVL1188:
1395:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 14072              		.loc 1 1395 11 view .LVU4293
 14073 1cf2 14F00804 		ands	r4, r4, #8
 14074 1cf6 7FF479AF 		bne	.L1063
1396:src/keys.c    **** 	 zero_X ();
 14075              		.loc 1 1396 8 is_stmt 1 view .LVU4294
1396:src/keys.c    **** 	 zero_X ();
 14076              		.loc 1 1396 11 is_stmt 0 view .LVU4295
 14077 1cfa BAF1030F 		cmp	r10, #3
ARM GAS  /tmp/ccvq0xdJ.s 			page 384


 14078 1cfe 7FF475AF 		bne	.L1063
1397:src/keys.c    **** 	 State2.state_lift = 0;
 14079              		.loc 1 1397 3 is_stmt 1 view .LVU4296
 14080 1d02 FFF7FEFF 		bl	zero_X
 14081              	.LVL1189:
1398:src/keys.c    **** 	 SET_REAL;
 14082              		.loc 1 1398 3 view .LVU4297
1398:src/keys.c    **** 	 SET_REAL;
 14083              		.loc 1 1398 21 is_stmt 0 view .LVU4298
 14084 1d06 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1399:src/keys.c    **** 	 stack_begin (0);
 14085              		.loc 1 1399 3 view .LVU4299
 14086 1d0a DBF80020 		ldr	r2, [fp]
1398:src/keys.c    **** 	 SET_REAL;
 14087              		.loc 1 1398 21 view .LVU4300
 14088 1d0e 64F38613 		bfi	r3, r4, #6, #1
 14089 1d12 88F81730 		strb	r3, [r8, #23]
1399:src/keys.c    **** 	 stack_begin (0);
 14090              		.loc 1 1399 3 is_stmt 1 view .LVU4301
 14091 1d16 92F8E437 		ldrb	r3, [r2, #2020]	@ zero_extendqisi2
 14092 1d1a 43F00803 		orr	r3, r3, #8
1400:src/keys.c    ****        }
 14093              		.loc 1 1400 3 is_stmt 0 view .LVU4302
 14094 1d1e 2046     		mov	r0, r4
1399:src/keys.c    **** 	 stack_begin (0);
 14095              		.loc 1 1399 3 view .LVU4303
 14096 1d20 82F8E437 		strb	r3, [r2, #2020]
1400:src/keys.c    ****        }
 14097              		.loc 1 1400 3 is_stmt 1 view .LVU4304
 14098 1d24 FFF7FEFF 		bl	stack_begin
 14099              	.LVL1190:
 14100 1d28 60E7     		b	.L1063
 14101              	.LVL1191:
 14102              	.L1167:
1373:src/keys.c    ****        }
 14103              		.loc 1 1373 10 is_stmt 0 view .LVU4305
 14104 1d2a 4FF4E774 		mov	r4, #462
 14105 1d2e BBE5     		b	.L1046
 14106              	.LVL1192:
 14107              	.L1065:
1373:src/keys.c    ****        }
 14108              		.loc 1 1373 10 view .LVU4306
 14109              	.LBE985:
 14110              	.LBE1409:
 14111              	.LBE1470:
 14112              	.LBE1544:
3649:src/keys.c    **** 	NonProgrammable = 0;
 14113              		.loc 1 3649 7 is_stmt 1 view .LVU4307
3649:src/keys.c    **** 	NonProgrammable = 0;
 14114              		.loc 1 3649 11 is_stmt 0 view .LVU4308
 14115 1d30 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3649:src/keys.c    **** 	NonProgrammable = 0;
 14116              		.loc 1 3649 10 view .LVU4309
 14117 1d34 5006     		lsls	r0, r2, #25
 14118 1d36 0BD5     		bpl	.L1164
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14119              		.loc 1 3650 2 is_stmt 1 view .LVU4310
ARM GAS  /tmp/ccvq0xdJ.s 			page 385


3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14120              		.loc 1 3650 18 is_stmt 0 view .LVU4311
 14121 1d38 854A     		ldr	r2, .L1457
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14122              		.loc 1 3651 32 view .LVU4312
 14123 1d3a 4FF4E675 		mov	r5, #460
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14124              		.loc 1 3650 18 view .LVU4313
 14125 1d3e 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14126              		.loc 1 3651 2 is_stmt 1 view .LVU4314
 14127 1d40 FEF75DBD 		b	.L1103
 14128              	.LVL1193:
 14129              	.L1072:
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14130              		.loc 1 3650 2 view .LVU4315
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14131              		.loc 1 3650 18 is_stmt 0 view .LVU4316
 14132 1d44 824A     		ldr	r2, .L1457
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14133              		.loc 1 3651 32 view .LVU4317
 14134 1d46 4FF4C665 		mov	r5, #1584
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14135              		.loc 1 3650 18 view .LVU4318
 14136 1d4a 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14137              		.loc 1 3651 2 is_stmt 1 view .LVU4319
 14138 1d4c FEF757BD 		b	.L1103
 14139              	.LVL1194:
 14140              	.L1164:
 14141              	.LBB1545:
 14142              	.LBB1471:
 14143              	.LBB1410:
 14144              	.LBB986:
1361:src/keys.c    ****        }
 14145              		.loc 1 1361 10 is_stmt 0 view .LVU4320
 14146 1d50 4FF4E674 		mov	r4, #460
 14147 1d54 A8E5     		b	.L1046
 14148              	.LVL1195:
 14149              	.L1067:
1361:src/keys.c    ****        }
 14150              		.loc 1 1361 10 view .LVU4321
 14151              	.LBE986:
 14152              	.LBE1410:
 14153              	.LBE1471:
 14154              	.LBE1545:
3649:src/keys.c    **** 	NonProgrammable = 0;
 14155              		.loc 1 3649 7 is_stmt 1 view .LVU4322
3649:src/keys.c    **** 	NonProgrammable = 0;
 14156              		.loc 1 3649 11 is_stmt 0 view .LVU4323
 14157 1d56 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3649:src/keys.c    **** 	NonProgrammable = 0;
 14158              		.loc 1 3649 10 view .LVU4324
 14159 1d5a 5206     		lsls	r2, r2, #25
 14160 1d5c 08D5     		bpl	.L1166
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14161              		.loc 1 3650 2 is_stmt 1 view .LVU4325
ARM GAS  /tmp/ccvq0xdJ.s 			page 386


3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14162              		.loc 1 3650 18 is_stmt 0 view .LVU4326
 14163 1d5e 7C4A     		ldr	r2, .L1457
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14164              		.loc 1 3651 32 view .LVU4327
 14165 1d60 40F2CF15 		movw	r5, #463
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14166              		.loc 1 3650 18 view .LVU4328
 14167 1d64 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14168              		.loc 1 3651 2 is_stmt 1 view .LVU4329
 14169 1d66 FEF74ABD 		b	.L1103
 14170              	.LVL1196:
 14171              	.L1163:
 14172              	.LBB1546:
 14173              	.LBB1472:
 14174              	.LBB1411:
 14175              	.LBB987:
1335:src/keys.c    ****      case (K21): // x<->y key
 14176              		.loc 1 1335 37 is_stmt 0 view .LVU4330
 14177 1d6a 4FF48174 		mov	r4, #258
 14178 1d6e 9BE5     		b	.L1046
 14179              	.LVL1197:
 14180              	.L1166:
1370:src/keys.c    ****        }
 14181              		.loc 1 1370 10 view .LVU4331
 14182 1d70 40F2CF14 		movw	r4, #463
 14183 1d74 98E5     		b	.L1046
 14184              	.LVL1198:
 14185              	.L1436:
1347:src/keys.c    ****        }
 14186              		.loc 1 1347 3 is_stmt 1 view .LVU4332
 14187 1d76 DBF80030 		ldr	r3, [fp]
 14188 1d7a 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 14189 1d7e 6FF3C302 		bfc	r2, #3, #1
 14190 1d82 83F8DE27 		strb	r2, [r3, #2014]
 14191 1d86 31E7     		b	.L1063
 14192              	.LVL1199:
 14193              	.L1070:
1347:src/keys.c    ****        }
 14194              		.loc 1 1347 3 is_stmt 0 view .LVU4333
 14195              	.LBE987:
 14196              	.LBE1411:
 14197              	.LBE1472:
 14198              	.LBE1546:
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14199              		.loc 1 3650 2 is_stmt 1 view .LVU4334
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14200              		.loc 1 3650 18 is_stmt 0 view .LVU4335
 14201 1d88 714A     		ldr	r2, .L1457
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14202              		.loc 1 3651 32 view .LVU4336
 14203 1d8a 40F22F65 		movw	r5, #1583
3650:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14204              		.loc 1 3650 18 view .LVU4337
 14205 1d8e 1360     		str	r3, [r2]
3651:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/ccvq0xdJ.s 			page 387


 14206              		.loc 1 3651 2 is_stmt 1 view .LVU4338
 14207 1d90 FEF735BD 		b	.L1103
 14208              	.LVL1200:
 14209              	.L1404:
 14210              	.LBB1547:
 14211              	.LBB1473:
 14212              	.LBB1412:
 14213              	.LBB1205:
 14214              	.LBB1199:
 14215              	.LBB1186:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 14216              		.loc 1 488 8 view .LVU4339
 489:src/keys.c    **** 	}
 14217              		.loc 1 489 10 is_stmt 0 view .LVU4340
 14218 1d94 0229     		cmp	r1, #2
 14219 1d96 08BF     		it	eq
 14220 1d98 0521     		moveq	r1, #5
 14221              	.LVL1201:
 489:src/keys.c    **** 	}
 14222              		.loc 1 489 10 view .LVU4341
 14223 1d9a FEF70BBF 		b	.L937
 14224              	.LVL1202:
 14225              	.L1406:
 489:src/keys.c    **** 	}
 14226              		.loc 1 489 10 view .LVU4342
 14227              	.LBE1186:
 14228              	.LBE1199:
2865:src/keys.c    **** 		State2.numdigit = 2;
 14229              		.loc 1 2865 3 is_stmt 1 view .LVU4343
2866:src/keys.c    **** 		return STATE_UNFINISHED;
 14230              		.loc 1 2866 19 is_stmt 0 view .LVU4344
 14231 1d9e 0222     		movs	r2, #2
2865:src/keys.c    **** 		State2.numdigit = 2;
 14232              		.loc 1 2865 18 view .LVU4345
 14233 1da0 88F80A40 		strb	r4, [r8, #10]
2866:src/keys.c    **** 		return STATE_UNFINISHED;
 14234              		.loc 1 2866 3 is_stmt 1 view .LVU4346
 14235 1da4 3368     		ldr	r3, [r6]
2866:src/keys.c    **** 		return STATE_UNFINISHED;
 14236              		.loc 1 2866 19 is_stmt 0 view .LVU4347
 14237 1da6 88F80B20 		strb	r2, [r8, #11]
2867:src/keys.c    **** 	}
 14238              		.loc 1 2867 3 is_stmt 1 view .LVU4348
2867:src/keys.c    **** 	}
 14239              		.loc 1 2867 10 is_stmt 0 view .LVU4349
 14240 1daa 3324     		movs	r4, #51
 14241              	.LVL1203:
2867:src/keys.c    **** 	}
 14242              		.loc 1 2867 10 view .LVU4350
 14243 1dac FEF782B9 		b	.L797
 14244              	.LVL1204:
 14245              	.L1424:
2867:src/keys.c    **** 	}
 14246              		.loc 1 2867 10 view .LVU4351
 14247              	.LBE1205:
 14248              	.LBE1412:
 14249              	.LBB1413:
ARM GAS  /tmp/ccvq0xdJ.s 			page 388


 14250              	.LBB988:
1293:src/keys.c    ****    }
 14251              		.loc 1 1293 6 is_stmt 1 view .LVU4352
1293:src/keys.c    ****    }
 14252              		.loc 1 1293 13 is_stmt 0 view .LVU4353
 14253 1db0 2046     		mov	r0, r4
 14254 1db2 FFF7FEFF 		bl	process_h_shifted
 14255              	.LVL1205:
 14256 1db6 0446     		mov	r4, r0
 14257              	.LVL1206:
1293:src/keys.c    ****    }
 14258              		.loc 1 1293 13 view .LVU4354
 14259 1db8 FEF7F6BA 		b	.L832
 14260              	.LVL1207:
 14261              	.L1144:
1293:src/keys.c    ****    }
 14262              		.loc 1 1293 13 view .LVU4355
 14263              	.LBE988:
 14264              	.LBE1413:
 14265              	.LBB1414:
 14266              	.LBB872:
 306:src/keys.c    **** 		}
 14267              		.loc 1 306 11 view .LVU4356
 14268 1dbc 4FF0100A 		mov	r10, #16
 14269 1dc0 FEF7B8BC 		b	.L903
 14270              	.LVL1208:
 14271              	.L1009:
 306:src/keys.c    **** 		}
 14272              		.loc 1 306 11 view .LVU4357
 14273              	.LBE872:
 14274              	.LBE1414:
 14275              	.LBB1415:
 14276              	.LBB1048:
 14277              	.LBB1041:
1819:src/keys.c    **** 			return STATE_BACKSPACE;
 14278              		.loc 1 1819 3 is_stmt 1 view .LVU4358
1819:src/keys.c    **** 			return STATE_BACKSPACE;
 14279              		.loc 1 1819 6 is_stmt 0 view .LVU4359
 14280 1dc4 BAF1000F 		cmp	r10, #0
 14281 1dc8 3EF4E6AC 		beq	.L1017
 14282              	.LVL1209:
 14283              	.L1018:
1821:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 14284              		.loc 1 1821 3 is_stmt 1 view .LVU4360
1821:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 14285              		.loc 1 1821 6 is_stmt 0 view .LVU4361
 14286 1dcc BAF1030F 		cmp	r10, #3
 14287 1dd0 7EF41EAC 		bne	.L1003
1822:src/keys.c    **** 		break;
 14288              		.loc 1 1822 11 view .LVU4362
 14289 1dd4 4FF4BA74 		mov	r4, #372
 14290 1dd8 FEF71FBC 		b	.L1019
 14291              	.LVL1210:
 14292              	.L1425:
1822:src/keys.c    **** 		break;
 14293              		.loc 1 1822 11 view .LVU4363
 14294              	.LBE1041:
ARM GAS  /tmp/ccvq0xdJ.s 			page 389


 14295              	.LBE1048:
 14296              	.LBE1415:
 14297              	.LBB1416:
 14298              	.LBB873:
 298:src/keys.c    **** 				stack_begin (1);
 14299              		.loc 1 298 5 is_stmt 1 view .LVU4364
 14300 1ddc 4CF0080C 		orr	ip, ip, #8
 14301 1de0 80F8E4C7 		strb	ip, [r0, #2020]
 299:src/keys.c    **** 			}
 14302              		.loc 1 299 5 view .LVU4365
 14303 1de4 1846     		mov	r0, r3
 14304 1de6 FFF7FEFF 		bl	stack_begin
 14305              	.LVL1211:
 299:src/keys.c    **** 			}
 14306              		.loc 1 299 5 is_stmt 0 view .LVU4366
 14307              	.LBE873:
 14308              	.LBE1416:
3324:src/keys.c    **** 		if (is_bad_cmdline())
 14309              		.loc 1 3324 2 is_stmt 1 view .LVU4367
 14310              	.LBB1417:
 14311              	.LBB874:
 306:src/keys.c    **** 		}
 14312              		.loc 1 306 11 is_stmt 0 view .LVU4368
 14313 1dea 4FF0100A 		mov	r10, #16
 14314 1dee FEF7A1BC 		b	.L903
 14315              	.LVL1212:
 14316              	.L1104:
 306:src/keys.c    **** 		}
 14317              		.loc 1 306 11 view .LVU4369
 14318              	.LBE874:
 14319              	.LBE1417:
 14320              	.LBE1473:
 14321              	.LBE1547:
3649:src/keys.c    **** 	NonProgrammable = 0;
 14322              		.loc 1 3649 26 view .LVU4370
 14323 1df2 574A     		ldr	r2, .L1457
 14324 1df4 1368     		ldr	r3, [r2]
 14325 1df6 2546     		mov	r5, r4
 14326 1df8 002B     		cmp	r3, #0
 14327 1dfa 7EF423AC 		bne	.L1105
3649:src/keys.c    **** 	NonProgrammable = 0;
 14328              		.loc 1 3649 26 view .LVU4371
 14329 1dfe FEF794BB 		b	.L1106
 14330              	.LVL1213:
 14331              	.L1004:
 14332              	.LBB1548:
 14333              	.LBB1474:
 14334              	.LBB1418:
 14335              	.LBB1049:
 14336              	.LBB1042:
1881:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 14337              		.loc 1 1881 3 is_stmt 1 view .LVU4372
1881:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 14338              		.loc 1 1881 6 is_stmt 0 view .LVU4373
 14339 1e02 BAF1010F 		cmp	r10, #1
 14340 1e06 7EF403AC 		bne	.L1003
1882:src/keys.c    **** 		break;
ARM GAS  /tmp/ccvq0xdJ.s 			page 390


 14341              		.loc 1 1882 11 view .LVU4374
 14342 1e0a 40F23B14 		movw	r4, #315
 14343 1e0e FEF704BC 		b	.L1019
 14344              	.L1006:
1867:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 14345              		.loc 1 1867 3 is_stmt 1 view .LVU4375
1867:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 14346              		.loc 1 1867 6 is_stmt 0 view .LVU4376
 14347 1e12 BAF1010F 		cmp	r10, #1
 14348 1e16 30D0     		beq	.L1438
1869:src/keys.c    **** 			return OP_NIL | OP_OFF;
 14349              		.loc 1 1869 8 is_stmt 1 view .LVU4377
1869:src/keys.c    **** 			return OP_NIL | OP_OFF;
 14350              		.loc 1 1869 11 is_stmt 0 view .LVU4378
 14351 1e18 BAF1030F 		cmp	r10, #3
 14352 1e1c 29D0     		beq	.L1161
1871:src/keys.c    **** #ifdef DM42
 14353              		.loc 1 1871 8 is_stmt 1 view .LVU4379
1871:src/keys.c    **** #ifdef DM42
 14354              		.loc 1 1871 11 is_stmt 0 view .LVU4380
 14355 1e1e BAF1000F 		cmp	r10, #0
 14356 1e22 7EF4EEAA 		bne	.L1014
1873:src/keys.c    **** 		  display_current_menu();
 14357              		.loc 1 1873 5 is_stmt 1 view .LVU4381
 14358 1e26 4FF0FF30 		mov	r0, #-1
 14359              	.LVL1214:
1873:src/keys.c    **** 		  display_current_menu();
 14360              		.loc 1 1873 5 is_stmt 0 view .LVU4382
 14361 1e2a FFF7FEFF 		bl	set_menu
 14362              	.LVL1215:
1874:src/keys.c    **** #endif
 14363              		.loc 1 1874 5 is_stmt 1 view .LVU4383
 14364 1e2e FFF7FEFF 		bl	display_current_menu
 14365              	.LVL1216:
1876:src/keys.c    **** 		}
 14366              		.loc 1 1876 5 view .LVU4384
 14367 1e32 FFF7FEFF 		bl	init_state
 14368              	.LVL1217:
 14369 1e36 FEF7E4BA 		b	.L1014
 14370              	.LVL1218:
 14371              	.L1007:
1855:src/keys.c    **** 	    if ( State2.runmode ) {
 14372              		.loc 1 1855 4 view .LVU4385
1855:src/keys.c    **** 	    if ( State2.runmode ) {
 14373              		.loc 1 1855 7 is_stmt 0 view .LVU4386
 14374 1e3a BAF1000F 		cmp	r10, #0
 14375 1e3e 7EF4E7AB 		bne	.L1003
1856:src/keys.c    **** 	      // Alpha scroll right
 14376              		.loc 1 1856 6 is_stmt 1 view .LVU4387
1856:src/keys.c    **** 	      // Alpha scroll right
 14377              		.loc 1 1856 9 is_stmt 0 view .LVU4388
 14378 1e42 5406     		lsls	r4, r2, #25
 14379 1e44 7EF522AB 		bpl	.L1024
1858:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14380              		.loc 1 1858 8 is_stmt 1 view .LVU4389
1858:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14381              		.loc 1 1858 11 is_stmt 0 view .LVU4390
ARM GAS  /tmp/ccvq0xdJ.s 			page 391


 14382 1e48 002B     		cmp	r3, #0
 14383 1e4a 3EF4DAAA 		beq	.L1014
1859:src/keys.c    **** 	      return STATE_UNFINISHED;
 14384              		.loc 1 1859 3 is_stmt 1 view .LVU4391
1859:src/keys.c    **** 	      return STATE_UNFINISHED;
 14385              		.loc 1 1859 31 is_stmt 0 view .LVU4392
 14386 1e4e 013B     		subs	r3, r3, #1
 14387              	.LVL1219:
1859:src/keys.c    **** 	      return STATE_UNFINISHED;
 14388              		.loc 1 1859 20 view .LVU4393
 14389 1e50 88F80D30 		strb	r3, [r8, #13]
 14390 1e54 FEF7D5BA 		b	.L1014
 14391              	.LVL1220:
 14392              	.L1021:
1859:src/keys.c    **** 	      return STATE_UNFINISHED;
 14393              		.loc 1 1859 20 view .LVU4394
 14394 1e58 0193     		str	r3, [sp, #4]
1835:src/keys.c    **** 		alpha_pos += 1;
 14395              		.loc 1 1835 33 view .LVU4395
 14396 1e5a FFF7FEFF 		bl	alen
 14397              	.LVL1221:
1835:src/keys.c    **** 		alpha_pos += 1;
 14398              		.loc 1 1835 41 view .LVU4396
 14399 1e5e 019B     		ldr	r3, [sp, #4]
 14400 1e60 03EB4302 		add	r2, r3, r3, lsl #1
1835:src/keys.c    **** 		alpha_pos += 1;
 14401              		.loc 1 1835 39 view .LVU4397
 14402 1e64 A0EB4200 		sub	r0, r0, r2, lsl #1
1835:src/keys.c    **** 		alpha_pos += 1;
 14403              		.loc 1 1835 29 view .LVU4398
 14404 1e68 1328     		cmp	r0, #19
 14405 1e6a 3EF6C5AA 		bhi	.L1023
1835:src/keys.c    **** 		alpha_pos += 1;
 14406              		.loc 1 1835 29 view .LVU4399
 14407 1e6e FEF7C5BA 		b	.L1022
 14408              	.LVL1222:
 14409              	.L1161:
1870:src/keys.c    **** 		else if (shift == SHIFT_N) {
 14410              		.loc 1 1870 11 view .LVU4400
 14411 1e72 4FF48174 		mov	r4, #258
 14412 1e76 FEF7D0BB 		b	.L1019
 14413              	.L1438:
1868:src/keys.c    **** 		else if (shift == SHIFT_H)
 14414              		.loc 1 1868 4 is_stmt 1 view .LVU4401
1868:src/keys.c    **** 		else if (shift == SHIFT_H)
 14415              		.loc 1 1868 34 is_stmt 0 view .LVU4402
 14416 1e7a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 14417              	.LVL1223:
1868:src/keys.c    **** 		else if (shift == SHIFT_H)
 14418              		.loc 1 1868 34 view .LVU4403
 14419 1e7e C3F30012 		ubfx	r2, r3, #4, #1
1868:src/keys.c    **** 		else if (shift == SHIFT_H)
 14420              		.loc 1 1868 26 view .LVU4404
 14421 1e82 C2F10102 		rsb	r2, r2, #1
1868:src/keys.c    **** 		else if (shift == SHIFT_H)
 14422              		.loc 1 1868 22 view .LVU4405
 14423 1e86 62F30413 		bfi	r3, r2, #4, #1
ARM GAS  /tmp/ccvq0xdJ.s 			page 392


 14424 1e8a 88F81630 		strb	r3, [r8, #22]
 14425 1e8e FEF7B8BA 		b	.L1014
 14426              	.LVL1224:
 14427              	.L1423:
1868:src/keys.c    **** 		else if (shift == SHIFT_H)
 14428              		.loc 1 1868 22 view .LVU4406
 14429              	.LBE1042:
 14430              	.LBE1049:
 14431              	.LBE1418:
 14432              	.LBB1419:
 14433              	.LBB1206:
2846:src/keys.c    **** 		else
 14434              		.loc 1 2846 4 is_stmt 1 view .LVU4407
2846:src/keys.c    **** 		else
 14435              		.loc 1 2846 34 is_stmt 0 view .LVU4408
 14436 1e92 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 14437 1e96 3368     		ldr	r3, [r6]
 14438 1e98 C2F30011 		ubfx	r1, r2, #4, #1
 14439              	.LVL1225:
2846:src/keys.c    **** 		else
 14440              		.loc 1 2846 26 view .LVU4409
 14441 1e9c C1F10101 		rsb	r1, r1, #1
2846:src/keys.c    **** 		else
 14442              		.loc 1 2846 22 view .LVU4410
 14443 1ea0 61F30412 		bfi	r2, r1, #4, #1
 14444 1ea4 88F81620 		strb	r2, [r8, #22]
2849:src/keys.c    **** 
 14445              		.loc 1 2849 10 view .LVU4411
 14446 1ea8 3324     		movs	r4, #51
 14447              	.LVL1226:
2849:src/keys.c    **** 
 14448              		.loc 1 2849 10 view .LVU4412
 14449 1eaa FEF703B9 		b	.L797
 14450              	.LVL1227:
 14451              	.L1010:
2849:src/keys.c    **** 
 14452              		.loc 1 2849 10 view .LVU4413
 14453              	.LBE1206:
 14454              	.LBE1419:
 14455              	.LBB1420:
 14456              	.LBB1050:
 14457              	.LBB1043:
1802:src/keys.c    **** 			break;
 14458              		.loc 1 1802 3 is_stmt 1 view .LVU4414
1802:src/keys.c    **** 			break;
 14459              		.loc 1 1802 24 is_stmt 0 view .LVU4415
 14460 1eae AAF10203 		sub	r3, r10, #2
 14461              	.LVL1228:
1802:src/keys.c    **** 			break;
 14462              		.loc 1 1802 6 view .LVU4416
 14463 1eb2 DBB2     		uxtb	r3, r3
 14464 1eb4 012B     		cmp	r3, #1
 14465 1eb6 7EF6ABAB 		bls	.L1003
1804:src/keys.c    **** 			State2.multi = 1;
 14466              		.loc 1 1804 3 is_stmt 1 view .LVU4417
1804:src/keys.c    **** 			State2.multi = 1;
 14467              		.loc 1 1804 6 is_stmt 0 view .LVU4418
ARM GAS  /tmp/ccvq0xdJ.s 			page 393


 14468 1eba BAF1010F 		cmp	r10, #1
 14469 1ebe 02D1     		bne	.L1016
1804:src/keys.c    **** 			State2.multi = 1;
 14470              		.loc 1 1804 24 view .LVU4419
 14471 1ec0 12F04002 		ands	r2, r2, #64
 14472 1ec4 0DD0     		beq	.L1439
 14473              	.L1016:
1810:src/keys.c    **** 		State2.alphashift = 0;
 14474              		.loc 1 1810 3 is_stmt 1 view .LVU4420
1811:src/keys.c    **** #ifdef DM42
 14475              		.loc 1 1811 3 view .LVU4421
1810:src/keys.c    **** 		State2.alphashift = 0;
 14476              		.loc 1 1810 17 is_stmt 0 view .LVU4422
 14477 1ec6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1813:src/keys.c    **** 		display_current_menu();
 14478              		.loc 1 1813 3 view .LVU4423
 14479 1eca 4FF0FF30 		mov	r0, #-1
 14480              	.LVL1229:
1810:src/keys.c    **** 		State2.alphashift = 0;
 14481              		.loc 1 1810 17 view .LVU4424
 14482 1ece 23F01803 		bic	r3, r3, #24
 14483 1ed2 88F81630 		strb	r3, [r8, #22]
1813:src/keys.c    **** 		display_current_menu();
 14484              		.loc 1 1813 3 is_stmt 1 view .LVU4425
 14485 1ed6 FFF7FEFF 		bl	set_menu
 14486              	.LVL1230:
1814:src/keys.c    **** #endif
 14487              		.loc 1 1814 3 view .LVU4426
 14488 1eda FFF7FEFF 		bl	display_current_menu
 14489              	.LVL1231:
1816:src/keys.c    **** 
 14490              		.loc 1 1816 3 view .LVU4427
1816:src/keys.c    **** 
 14491              		.loc 1 1816 10 is_stmt 0 view .LVU4428
 14492 1ede FEF790BA 		b	.L1014
 14493              	.LVL1232:
 14494              	.L1439:
1805:src/keys.c    **** 			State2.numdigit = 0;
 14495              		.loc 1 1805 4 is_stmt 1 view .LVU4429
1805:src/keys.c    **** 			State2.numdigit = 0;
 14496              		.loc 1 1805 17 is_stmt 0 view .LVU4430
 14497 1ee2 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1806:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 14498              		.loc 1 1806 20 view .LVU4431
 14499 1ee6 88F80B20 		strb	r2, [r8, #11]
1805:src/keys.c    **** 			State2.numdigit = 0;
 14500              		.loc 1 1805 17 view .LVU4432
 14501 1eea 43F00803 		orr	r3, r3, #8
1807:src/keys.c    **** 			return STATE_UNFINISHED;
 14502              		.loc 1 1807 12 view .LVU4433
 14503 1eee 0A22     		movs	r2, #10
1805:src/keys.c    **** 			State2.numdigit = 0;
 14504              		.loc 1 1805 17 view .LVU4434
 14505 1ef0 88F81530 		strb	r3, [r8, #21]
1806:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 14506              		.loc 1 1806 4 is_stmt 1 view .LVU4435
1807:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccvq0xdJ.s 			page 394


 14507              		.loc 1 1807 4 view .LVU4436
1807:src/keys.c    **** 			return STATE_UNFINISHED;
 14508              		.loc 1 1807 12 is_stmt 0 view .LVU4437
 14509 1ef4 88F81F20 		strb	r2, [r8, #31]
1808:src/keys.c    **** 		}
 14510              		.loc 1 1808 4 is_stmt 1 view .LVU4438
1808:src/keys.c    **** 		}
 14511              		.loc 1 1808 11 is_stmt 0 view .LVU4439
 14512 1ef8 FEF783BA 		b	.L1014
 14513              	.LVL1233:
 14514              	.L1011:
1792:src/keys.c    **** 			init_arg(RARG_ARCL);
 14515              		.loc 1 1792 3 is_stmt 1 view .LVU4440
1792:src/keys.c    **** 			init_arg(RARG_ARCL);
 14516              		.loc 1 1792 6 is_stmt 0 view .LVU4441
 14517 1efc BAF1010F 		cmp	r10, #1
 14518 1f00 1BD0     		beq	.L1440
1795:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 14519              		.loc 1 1795 10 is_stmt 1 view .LVU4442
1795:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 14520              		.loc 1 1795 13 is_stmt 0 view .LVU4443
 14521 1f02 BAF1030F 		cmp	r10, #3
 14522 1f06 7EF483AB 		bne	.L1003
1796:src/keys.c    **** 			return STATE_UNFINISHED;
 14523              		.loc 1 1796 4 is_stmt 1 view .LVU4444
 14524              	.LVL1234:
 14525              	.LBB1031:
 14526              	.LBI1031:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 14527              		.loc 1 552 13 view .LVU4445
 14528              	.LBB1032:
 553:src/keys.c    **** 		return;
 14529              		.loc 1 553 2 view .LVU4446
 553:src/keys.c    **** 		return;
 14530              		.loc 1 553 6 is_stmt 0 view .LVU4447
 14531 1f0a FFF7FEFF 		bl	is_bad_cmdline
 14532              	.LVL1235:
 553:src/keys.c    **** 		return;
 14533              		.loc 1 553 5 view .LVU4448
 14534 1f0e 0028     		cmp	r0, #0
 14535 1f10 7EF477AA 		bne	.L1014
 14536 1f14 7320     		movs	r0, #115
 14537 1f16 FFF7FEFF 		bl	init_arg.part.0
 14538              	.LVL1236:
 14539 1f1a FEF772BA 		b	.L1014
 14540              	.LVL1237:
 14541              	.L1012:
 553:src/keys.c    **** 		return;
 14542              		.loc 1 553 5 view .LVU4449
 14543              	.LBE1032:
 14544              	.LBE1031:
1785:src/keys.c    **** 			init_arg(RARG_ASTO);
 14545              		.loc 1 1785 3 is_stmt 1 view .LVU4450
1785:src/keys.c    **** 			init_arg(RARG_ASTO);
 14546              		.loc 1 1785 6 is_stmt 0 view .LVU4451
 14547 1f1e BAF1010F 		cmp	r10, #1
 14548 1f22 7EF475AB 		bne	.L1003
ARM GAS  /tmp/ccvq0xdJ.s 			page 395


1786:src/keys.c    **** 			return STATE_UNFINISHED;
 14549              		.loc 1 1786 4 is_stmt 1 view .LVU4452
 14550              	.LVL1238:
 14551              	.LBB1033:
 14552              	.LBI1033:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 14553              		.loc 1 552 13 view .LVU4453
 14554              	.LBB1034:
 553:src/keys.c    **** 		return;
 14555              		.loc 1 553 2 view .LVU4454
 553:src/keys.c    **** 		return;
 14556              		.loc 1 553 6 is_stmt 0 view .LVU4455
 14557 1f26 FFF7FEFF 		bl	is_bad_cmdline
 14558              	.LVL1239:
 553:src/keys.c    **** 		return;
 14559              		.loc 1 553 5 view .LVU4456
 14560 1f2a 0028     		cmp	r0, #0
 14561 1f2c 7EF469AA 		bne	.L1014
 14562 1f30 2620     		movs	r0, #38
 14563 1f32 FFF7FEFF 		bl	init_arg.part.0
 14564              	.LVL1240:
 14565 1f36 FEF764BA 		b	.L1014
 14566              	.LVL1241:
 14567              	.L1440:
 553:src/keys.c    **** 		return;
 14568              		.loc 1 553 5 view .LVU4457
 14569              	.LBE1034:
 14570              	.LBE1033:
1793:src/keys.c    **** 			return STATE_UNFINISHED;
 14571              		.loc 1 1793 4 is_stmt 1 view .LVU4458
 14572              	.LBB1035:
 14573              	.LBI1035:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 14574              		.loc 1 552 13 view .LVU4459
 14575              	.LBB1036:
 553:src/keys.c    **** 		return;
 14576              		.loc 1 553 2 view .LVU4460
 553:src/keys.c    **** 		return;
 14577              		.loc 1 553 6 is_stmt 0 view .LVU4461
 14578 1f3a FFF7FEFF 		bl	is_bad_cmdline
 14579              	.LVL1242:
 553:src/keys.c    **** 		return;
 14580              		.loc 1 553 5 view .LVU4462
 14581 1f3e 0028     		cmp	r0, #0
 14582 1f40 7EF45FAA 		bne	.L1014
 14583 1f44 2720     		movs	r0, #39
 14584 1f46 FFF7FEFF 		bl	init_arg.part.0
 14585              	.LVL1243:
 14586 1f4a FEF75ABA 		b	.L1014
 14587              	.L1458:
 14588 1f4e 00BF     		.align	2
 14589              	.L1457:
 14590 1f50 00000000 		.word	NonProgrammable
 14591              	.LBE1036:
 14592              	.LBE1035:
 14593              	.LBE1043:
 14594              	.LBE1050:
ARM GAS  /tmp/ccvq0xdJ.s 			page 396


 14595              	.LBE1420:
 14596              	.LBE1474:
 14597              	.LBE1548:
 14598              		.cfi_endproc
 14599              	.LFE63:
 14601              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14602              		.align	1
 14603              		.p2align 2,,3
 14604              		.global	process_keycode_with_shift
 14605              		.syntax unified
 14606              		.thumb
 14607              		.thumb_func
 14608              		.fpu fpv4-sp-d16
 14610              	process_keycode_with_shift:
 14611              	.LFB62:
3382:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14612              		.loc 1 3382 61 is_stmt 1 view -0
 14613              		.cfi_startproc
 14614              		@ args = 0, pretend = 0, frame = 8
 14615              		@ frame_needed = 0, uses_anonymous_args = 0
 14616 0000 30B5     		push	{r4, r5, lr}
 14617              		.cfi_def_cfa_offset 12
 14618              		.cfi_offset 4, -12
 14619              		.cfi_offset 5, -8
 14620              		.cfi_offset 14, -4
 14621 0002 83B0     		sub	sp, sp, #12
 14622              		.cfi_def_cfa_offset 24
3382:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14623              		.loc 1 3382 61 is_stmt 0 view .LVU4464
 14624 0004 02AB     		add	r3, sp, #8
 14625 0006 03E90300 		stmdb	r3, {r0, r1}
 14626 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14627              	.LVL1244:
3383:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14628              		.loc 1 3383 4 is_stmt 1 view .LVU4465
3383:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14629              		.loc 1 3383 7 is_stmt 0 view .LVU4466
 14630 000e 2E2C     		cmp	r4, #46
 14631 0010 10D0     		beq	.L1459
3384:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14632              		.loc 1 3384 4 is_stmt 1 view .LVU4467
3384:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14633              		.loc 1 3384 7 is_stmt 0 view .LVU4468
 14634 0012 332C     		cmp	r4, #51
 14635 0014 1DD0     		beq	.L1466
3393:src/keys.c    ****      nd_opcode = remapped.shift;
 14636              		.loc 1 3393 7 view .LVU4469
 14637 0016 342C     		cmp	r4, #52
 14638 0018 019D     		ldr	r5, [sp, #4]
3393:src/keys.c    ****      nd_opcode = remapped.shift;
 14639              		.loc 1 3393 4 is_stmt 1 view .LVU4470
3393:src/keys.c    ****      nd_opcode = remapped.shift;
 14640              		.loc 1 3393 7 is_stmt 0 view .LVU4471
 14641 001a 0DD0     		beq	.L1467
3397:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14642              		.loc 1 3397 9 is_stmt 1 view .LVU4472
3397:src/keys.c    ****    process_keycode ( remapped.key_34s );
ARM GAS  /tmp/ccvq0xdJ.s 			page 397


 14643              		.loc 1 3397 12 is_stmt 0 view .LVU4473
 14644 001c 002D     		cmp	r5, #0
 14645 001e 03DB     		blt	.L1464
3397:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14646              		.loc 1 3397 34 is_stmt 1 discriminator 1 view .LVU4474
 14647              	.LVL1245:
 14648              	.LBB1549:
 14649              	.LBI1549:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14650              		.loc 1 104 20 discriminator 1 view .LVU4475
 14651              	.LBB1550:
 105:src/keys.c    **** 	State2.shifts = shift;
 14652              		.loc 1 105 2 discriminator 1 view .LVU4476
 14653              	.LBB1551:
 14654              	.LBI1551:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14655              		.loc 1 96 13 discriminator 1 view .LVU4477
 14656              	.LBB1552:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14657              		.loc 1 97 2 discriminator 1 view .LVU4478
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14658              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4479
 14659 0020 FFF7FEFF 		bl	shift_down
 14660              	.LVL1246:
  98:src/keys.c    **** }
 14661              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4480
 14662              	.LBE1552:
 14663              	.LBE1551:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14664              		.loc 1 106 2 discriminator 1 view .LVU4481
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14665              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4482
 14666 0024 194B     		ldr	r3, .L1468
 14667              	.LBE1550:
 14668              	.LBE1549:
3397:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14669              		.loc 1 3397 34 discriminator 1 view .LVU4483
 14670 0026 1D74     		strb	r5, [r3, #16]
 14671              	.LBB1554:
 14672              	.LBB1553:
 108:src/keys.c    **** }
 14673              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4484
 14674              	.LVL1247:
 14675              	.L1464:
 108:src/keys.c    **** }
 14676              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4485
 14677              	.LBE1553:
 14678              	.LBE1554:
3398:src/keys.c    ****  }
 14679              		.loc 1 3398 4 is_stmt 1 view .LVU4486
 14680 0028 2046     		mov	r0, r4
3399:src/keys.c    ****  
 14681              		.loc 1 3399 2 is_stmt 0 view .LVU4487
 14682 002a 03B0     		add	sp, sp, #12
 14683              		.cfi_remember_state
 14684              		.cfi_def_cfa_offset 12
 14685              		@ sp needed
ARM GAS  /tmp/ccvq0xdJ.s 			page 398


 14686 002c BDE83040 		pop	{r4, r5, lr}
 14687              		.cfi_restore 14
 14688              		.cfi_restore 5
 14689              		.cfi_restore 4
 14690              		.cfi_def_cfa_offset 0
 14691              	.LVL1248:
3398:src/keys.c    ****  }
 14692              		.loc 1 3398 4 view .LVU4488
 14693 0030 FFF7FEBF 		b	process_keycode
 14694              	.LVL1249:
 14695              	.L1459:
 14696              		.cfi_restore_state
3399:src/keys.c    ****  
 14697              		.loc 1 3399 2 view .LVU4489
 14698 0034 03B0     		add	sp, sp, #12
 14699              		.cfi_remember_state
 14700              		.cfi_def_cfa_offset 12
 14701              		@ sp needed
 14702 0036 30BD     		pop	{r4, r5, pc}
 14703              	.LVL1250:
 14704              	.L1467:
 14705              		.cfi_restore_state
3394:src/keys.c    ****      set_shift(SHIFT_N);
 14706              		.loc 1 3394 6 is_stmt 1 view .LVU4490
3394:src/keys.c    ****      set_shift(SHIFT_N);
 14707              		.loc 1 3394 16 is_stmt 0 view .LVU4491
 14708 0038 154B     		ldr	r3, .L1468+4
 14709 003a 1D60     		str	r5, [r3]
3395:src/keys.c    ****    }
 14710              		.loc 1 3395 6 is_stmt 1 view .LVU4492
 14711              	.LVL1251:
 14712              	.LBB1555:
 14713              	.LBI1555:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14714              		.loc 1 104 20 view .LVU4493
 14715              	.LBB1556:
 105:src/keys.c    **** 	State2.shifts = shift;
 14716              		.loc 1 105 2 view .LVU4494
 14717              	.LBB1557:
 14718              	.LBI1557:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14719              		.loc 1 96 13 view .LVU4495
 14720              	.LBB1558:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14721              		.loc 1 97 2 view .LVU4496
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14722              		.loc 1 97 18 is_stmt 0 view .LVU4497
 14723 003c FFF7FEFF 		bl	shift_down
 14724              	.LVL1252:
  98:src/keys.c    **** }
 14725              		.loc 1 98 2 is_stmt 1 view .LVU4498
 14726              	.LBE1558:
 14727              	.LBE1557:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14728              		.loc 1 106 2 view .LVU4499
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14729              		.loc 1 106 16 is_stmt 0 view .LVU4500
ARM GAS  /tmp/ccvq0xdJ.s 			page 399


 14730 0040 124B     		ldr	r3, .L1468
 14731 0042 0022     		movs	r2, #0
 14732              	.LBE1556:
 14733              	.LBE1555:
3398:src/keys.c    ****  }
 14734              		.loc 1 3398 4 view .LVU4501
 14735 0044 2046     		mov	r0, r4
 14736              	.LBB1560:
 14737              	.LBB1559:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14738              		.loc 1 106 16 view .LVU4502
 14739 0046 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14740              		.loc 1 108 2 is_stmt 1 view .LVU4503
 14741              	.LVL1253:
 108:src/keys.c    **** }
 14742              		.loc 1 108 2 is_stmt 0 view .LVU4504
 14743              	.LBE1559:
 14744              	.LBE1560:
3398:src/keys.c    ****  }
 14745              		.loc 1 3398 4 is_stmt 1 view .LVU4505
3399:src/keys.c    ****  
 14746              		.loc 1 3399 2 is_stmt 0 view .LVU4506
 14747 0048 03B0     		add	sp, sp, #12
 14748              		.cfi_remember_state
 14749              		.cfi_def_cfa_offset 12
 14750              		@ sp needed
 14751 004a BDE83040 		pop	{r4, r5, lr}
 14752              		.cfi_restore 14
 14753              		.cfi_restore 5
 14754              		.cfi_restore 4
 14755              		.cfi_def_cfa_offset 0
 14756              	.LVL1254:
3398:src/keys.c    ****  }
 14757              		.loc 1 3398 4 view .LVU4507
 14758 004e FFF7FEBF 		b	process_keycode
 14759              	.LVL1255:
 14760              	.L1466:
 14761              		.cfi_restore_state
3385:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14762              		.loc 1 3385 6 is_stmt 1 view .LVU4508
 14763 0052 104B     		ldr	r3, .L1468+8
 14764 0054 41F23010 		movw	r0, #4400
 14765 0058 9847     		blx	r3
 14766              	.LVL1256:
3385:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14767              		.loc 1 3385 31 view .LVU4509
 14768 005a 0A20     		movs	r0, #10
 14769 005c 0E4B     		ldr	r3, .L1468+12
 14770 005e 9847     		blx	r3
 14771              	.LVL1257:
3385:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14772              		.loc 1 3385 46 view .LVU4510
 14773 0060 0E4B     		ldr	r3, .L1468+16
 14774 0062 9847     		blx	r3
 14775              	.LVL1258:
3386:src/keys.c    ****        // Was error just wait for confirmation
ARM GAS  /tmp/ccvq0xdJ.s 			page 400


 14776              		.loc 1 3386 6 view .LVU4511
3386:src/keys.c    ****        // Was error just wait for confirmation
 14777              		.loc 1 3386 11 is_stmt 0 view .LVU4512
 14778 0064 0E4B     		ldr	r3, .L1468+20
 14779 0066 0120     		movs	r0, #1
 14780 0068 9847     		blx	r3
 14781              	.LVL1259:
3386:src/keys.c    ****        // Was error just wait for confirmation
 14782              		.loc 1 3386 9 view .LVU4513
 14783 006a 0228     		cmp	r0, #2
 14784 006c 01D1     		bne	.L1462
3388:src/keys.c    ****      }
 14785              		.loc 1 3388 8 is_stmt 1 view .LVU4514
 14786 006e 0D4B     		ldr	r3, .L1468+24
 14787 0070 9847     		blx	r3
 14788              	.LVL1260:
 14789              	.L1462:
3390:src/keys.c    ****      return;
 14790              		.loc 1 3390 6 view .LVU4515
 14791 0072 084B     		ldr	r3, .L1468+8
 14792 0074 42F26020 		movw	r0, #8800
 14793 0078 9847     		blx	r3
 14794              	.LVL1261:
3390:src/keys.c    ****      return;
 14795              		.loc 1 3390 31 view .LVU4516
 14796 007a 074B     		ldr	r3, .L1468+12
 14797 007c 0A20     		movs	r0, #10
 14798 007e 9847     		blx	r3
 14799              	.LVL1262:
3390:src/keys.c    ****      return;
 14800              		.loc 1 3390 46 view .LVU4517
 14801 0080 064B     		ldr	r3, .L1468+16
3399:src/keys.c    ****  
 14802              		.loc 1 3399 2 is_stmt 0 view .LVU4518
 14803 0082 03B0     		add	sp, sp, #12
 14804              		.cfi_def_cfa_offset 12
 14805              		@ sp needed
 14806 0084 BDE83040 		pop	{r4, r5, lr}
 14807              		.cfi_restore 14
 14808              		.cfi_restore 5
 14809              		.cfi_restore 4
 14810              		.cfi_def_cfa_offset 0
 14811              	.LVL1263:
3390:src/keys.c    ****      return;
 14812              		.loc 1 3390 46 view .LVU4519
 14813 0088 1847     		bx	r3	@ indirect register sibling call
 14814              	.LVL1264:
 14815              	.L1469:
 14816 008a 00BF     		.align	2
 14817              	.L1468:
 14818 008c 00000000 		.word	StateWhileOn
 14819 0090 00000000 		.word	nd_opcode
 14820 0094 F5020008 		.word	134218485
 14821 0098 05040008 		.word	134218757
 14822 009c F9020008 		.word	134218489
 14823 00a0 79030008 		.word	134218617
 14824 00a4 99030008 		.word	134218649
ARM GAS  /tmp/ccvq0xdJ.s 			page 401


 14825              		.cfi_endproc
 14826              	.LFE62:
 14828              		.comm	nd_opcode,4,4
 14829              		.comm	NonProgrammable,4,4
 14830              		.comm	GoFast,4,4
 14831              		.comm	OpCodeDisplayPending,4,4
 14832              		.comm	OpCode,4,4
 14833              		.comm	WasDataEntry,4,4
 14834              		.section	.bss.was_paused.9953,"aw",%nobits
 14835              		.align	2
 14836              		.set	.LANCHOR18,. + 0
 14839              	was_paused.9953:
 14840 0000 00000000 		.space	4
 14841              		.section	.rodata.alpha_arrows,"a"
 14842              		.align	2
 14845              	alpha_arrows:
 14846 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14846      03049F5E 
 14846      7F
 14847              		.section	.rodata.alpha_catalogue,"a"
 14848              		.align	2
 14851              	alpha_catalogue:
 14852 0000 0D4AC280 		.ascii	"\015J\302\200\236\267J\242~\332\267\255\373\202\341"
 14852      9EB74AA2 
 14852      7EDAB7AD 
 14852      FB82E1
 14853 000f 284AB0   		.ascii	"(J\260"
 14854              		.section	.rodata.alpha_compares,"a"
 14855              		.align	2
 14858              	alpha_compares:
 14859 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14859      0A3E5B5D 
 14859      7B7D
 14860              		.section	.rodata.alpha_letters,"a"
 14861              		.align	2
 14862              		.set	.LANCHOR9,. + 0
 14865              	alpha_letters:
 14866 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14866      88C4C5C6 
 14866      C784C8C9 
 14866      CA
 14867 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14867      CECFD0D1 
 14867      D2D3D415 
 14867      D5
 14868 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14868      DADBDC01 
 14868      1902DD1A 
 14868      DE
 14869 0027 DF       		.ascii	"\337"
 14870              		.section	.rodata.alpha_letters_lower,"a"
 14871              		.align	2
 14872              		.set	.LANCHOR10,. + 0
 14875              	alpha_letters_lower:
 14876 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14876      89E4E5E6 
 14876      E785E8E9 
ARM GAS  /tmp/ccvq0xdJ.s 			page 402


 14876      EA
 14877 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14877      EEEFF0F1 
 14877      F2F3F416 
 14877      F5
 14878 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14878      FAFBFC01 
 14878      1902FD1A 
 14878      FE
 14879 0027 FF       		.ascii	"\377"
 14880              		.section	.rodata.alpha_subscripts,"a"
 14881              		.align	2
 14884              	alpha_subscripts:
 14885 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14885      9A80D798 
 14885      BB1486BC 
 14885      F7
 14886 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14886      BF818B9C 
 14886      8C999D90 
 14886      9B
 14887              		.section	.rodata.alpha_symbols,"a"
 14888              		.align	2
 14891              	alpha_symbols:
 14892 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14892      222A405F 
 14892      7E25240C 
 14892      1E1F8EAE 
 14892      926023
 14893              		.section	.rodata.alphamap.9436,"a"
 14894              		.align	2
 14895              		.set	.LANCHOR15,. + 0
 14898              	alphamap.9436:
 14899 0000 41004100 		.ascii	"A\000A\000a\240"
 14899      61A0
 14900 0006 42004200 		.ascii	"B\000B\000b\241"
 14900      62A1
 14901 000c 43008200 		.ascii	"C\000\202\000c\242"
 14901      63A2
 14902 0012 44008300 		.ascii	"D\000\203\000d\243"
 14902      64A3
 14903 0018 450D4500 		.ascii	"E\015E\000e\244"
 14903      65A4
 14904 001e 46009400 		.ascii	"F\000\224\000f\264"
 14904      66B4
 14905 0024 47008200 		.ascii	"G\000\202\000g\242"
 14905      67A2
 14906 002a 48005800 		.ascii	"H\000X\000h\265"
 14906      68B5
 14907 0030 49004900 		.ascii	"I\000I\000i\250"
 14907      69A8
 14908 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14908      6A00
 14909 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14909      6BA9
 14910 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14910      6CAA
ARM GAS  /tmp/ccvq0xdJ.s 			page 403


 14911 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14911      00A6
 14912 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14912      6DAB
 14913 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14913      6EAC
 14914 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14914      6FB7
 14915 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14915      0000
 14916 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14916      0000
 14917 006c 50378F26 		.ascii	"P7\217&p\257"
 14917      70AF
 14918 0072 5138007C 		.ascii	"Q8\000|q\000"
 14918      7100
 14919 0078 5239520B 		.ascii	"R9R\013r\260"
 14919      72B0
 14920 007e 532F915C 		.ascii	"S/\221\\s\261"
 14920      73B1
 14921 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14921      0000
 14922 008a 54345400 		.ascii	"T4T\000t\262"
 14922      74B2
 14923 0090 55350000 		.ascii	"U5\000\000u\000"
 14923      7500
 14924 0096 56360000 		.ascii	"V6\000\000v\000"
 14924      7600
 14925 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14925      7700
 14926 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14926      0000
 14927 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14927      78AD
 14928 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14928      79B3
 14929 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14929      7AA5
 14930 00ba 2D282900 		.ascii	"-()\000\000\000"
 14930      0000
 14931 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14931      0000
 14932 00c6 3A308720 		.ascii	":0\207 ;\247"
 14932      3BA7
 14933 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14933      2EB6
 14934 00d2 3F212100 		.ascii	"?!!\000?!"
 14934      3F21
 14935 00d8 202B3D06 		.ascii	" +=\006  "
 14935      2020
 14936 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14936      0000
 14937              		.section	.rodata.amap.9427,"a"
 14938              		.align	2
 14939              		.set	.LANCHOR16,. + 0
 14942              	amap.9427:
 14943 0000 04       		.byte	4
ARM GAS  /tmp/ccvq0xdJ.s 			page 404


 14944 0001 000D00   		.ascii	"\000\015\000"
 14945 0004 05       		.byte	5
 14946 0005 000E09   		.ascii	"\000\016\011"
 14947 0008 2C       		.byte	44
 14948 0009 000D00   		.ascii	"\000\015\000"
 14949 000c 2D       		.byte	45
 14950 000d 000E09   		.ascii	"\000\016\011"
 14951 0010 08       		.byte	8
 14952 0011 00000F   		.ascii	"\000\000\017"
 14953 0014 1F       		.byte	31
 14954 0015 00000C   		.ascii	"\000\000\014"
 14955 0018 21       		.byte	33
 14956 0019 00000A   		.ascii	"\000\000\012"
 14957 001c 26       		.byte	38
 14958 001d 00000B   		.ascii	"\000\000\013"
 14959              		.section	.rodata.catalogue,"a"
 14960              		.align	2
 14963              	catalogue:
 14964 0000 49DC26D8 		.ascii	"I\334&\330\301f\031\224D\242;Y\3074}K3Q\011\217jT\225"
 14964      C1661994 
 14964      44A23B59 
 14964      C7347D4B 
 14964      3351098F 
 14965 0017 299E485A 		.ascii	")\236HZ\244\241\020qS\304\365.t\335G\015\304l37q\220"
 14965      A4A11071 
 14965      53C4F52E 
 14965      74DD470D 
 14965      C46C3337 
 14966 002d 719D2481 		.ascii	"q\235$\201\340n\024\006u\265m\033&m\312vL7-\317Kr\264"
 14966      E06E1406 
 14966      75B56D1B 
 14966      266DCA76 
 14966      4C372DCF 
 14967 0044 4B2AC9B2 		.ascii	"K*\311\262tY50\263D0\243t\031\367D5c\214\244\215\"I"
 14967      74593530 
 14967      B34430A3 
 14967      7419F744 
 14967      35638CA4 
 14968 005b 126730AC 		.ascii	"\022g0\254uY\242\200\236\267J\242~\334\266\255\353~"
 14968      7559A280 
 14968      9EB74AA2 
 14968      7EDCB6AD 
 14968      EB7E
 14969 006d E0B86DB2 		.ascii	"\340\270m\262\204\253m\323\366\355\274n[\2479\227j\021"
 14969      84AB6DD3 
 14969      F6EDBC6E 
 14969      5BA73997 
 14969      6A11
 14970 007f B795C077 		.ascii	"\267\225\300w\330\206\025\277"
 14970      D88615BF 
 14971              		.section	.rodata.catalogue_sizes.9750,"a"
 14972              		.align	2
 14973              		.set	.LANCHOR8,. + 0
 14976              	catalogue_sizes.9750:
 14977 0000 006C1A11 		.ascii	"\000l\032\0216=Q\202%?\016\023\012\011(\032LLX\016\023"
 14977      363D5182 
 14977      253F0E13 
ARM GAS  /tmp/ccvq0xdJ.s 			page 405


 14977      0A09281A 
 14977      4C4C580E 
 14978              		.section	.rodata.catalogues.9758,"a"
 14979              		.align	2
 14980              		.set	.LANCHOR12,. + 0
 14983              	catalogues.9758:
 14984 0000 00000000 		.word	0
 14985 0004 00000000 		.word	catalogue
 14986 0008 00000000 		.word	cplx_catalogue
 14987 000c 00000000 		.word	stats_catalogue
 14988 0010 00000000 		.word	prob_catalogue
 14989 0014 00000000 		.word	int_catalogue
 14990 0018 00000000 		.word	prog_catalogue
 14991 001c 00000000 		.word	program_xfcn
 14992 0020 00000000 		.word	test_catalogue
 14993 0024 00000000 		.word	mode_catalogue
 14994 0028 00000000 		.word	alpha_catalogue
 14995 002c 00000000 		.word	alpha_symbols
 14996 0030 00000000 		.word	alpha_compares
 14997 0034 00000000 		.word	alpha_arrows
 14998 0038 00000000 		.word	alpha_letters
 14999 003c 00000000 		.word	alpha_subscripts
 15000 0040 00000000 		.word	0
 15001 0044 00000000 		.word	0
 15002 0048 00000000 		.word	0
 15003 004c 00000000 		.word	sums_catalogue
 15004 0050 00000000 		.word	matrix_catalogue
 15005              		.section	.rodata.cmap.9426,"a"
 15006              		.align	2
 15007              		.set	.LANCHOR17,. + 0
 15010              	cmap.9426:
 15011 0000 04       		.byte	4
 15012 0001 120012   		.ascii	"\022\000\022"
 15013 0004 05       		.byte	5
 15014 0005 090909   		.ascii	"\011\011\011"
 15015 0008 06       		.byte	6
 15016 0009 151515   		.ascii	"\025\025\025"
 15017 000c 0C       		.byte	12
 15018 000d 100011   		.ascii	"\020\000\021"
 15019 0010 19       		.byte	25
 15020 0011 040004   		.ascii	"\004\000\004"
 15021 0014 1A       		.byte	26
 15022 0015 030003   		.ascii	"\003\000\003"
 15023 0018 1B       		.byte	27
 15024 0019 130013   		.ascii	"\023\000\023"
 15025 001c 1C       		.byte	28
 15026 001d 140014   		.ascii	"\024\000\024"
 15027 0020 1E       		.byte	30
 15028 0021 171717   		.ascii	"\027\027\027"
 15029 0024 1F       		.byte	31
 15030 0025 080808   		.ascii	"\010\010\010"
 15031 0028 20       		.byte	32
 15032 0029 060606   		.ascii	"\006\006\006"
 15033 002c 21       		.byte	33
 15034 002d 010502   		.ascii	"\001\005\002"
 15035              		.section	.rodata.conv_catalogue,"a"
 15036              		.align	2
ARM GAS  /tmp/ccvq0xdJ.s 			page 406


 15037              		.set	.LANCHOR11,. + 0
 15040              	conv_catalogue:
 15041 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 15041      2B2DDD37 
 15041      27393133 
 15041      111605DC 
 15041      DE19
 15042 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 15042      0D0F8D08 
 15042      8F0A2A2C 
 15042      47434517 
 15042      3F30
 15043 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 15043      02062622 
 15043      20282435 
 15043      2F012310 
 15043      0C0E2112 
 15044 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 15044      1E292E09 
 15044      36383E3A 
 15044      3C4025DF 
 15044      3D8B8E03 
 15045 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 15045      4A484642 
 15045      441F
 15046              		.section	.rodata.conv_mapping.9797,"a"
 15047              		.align	2
 15048              		.set	.LANCHOR14,. + 0
 15051              	conv_mapping.9797:
 15052 0000 8502     		.short	645
 15053 0002 8402     		.short	644
 15054 0004 8602     		.short	646
 15055 0006 8702     		.short	647
 15056 0008 8202     		.short	642
 15057 000a 8302     		.short	643
 15058 000c 3202     		.short	562
 15059 000e 3302     		.short	563
 15060 0010 3402     		.short	564
 15061 0012 3502     		.short	565
 15062 0014 3602     		.short	566
 15063 0016 3702     		.short	567
 15064              		.section	.rodata.cplx_catalogue,"a"
 15065              		.align	2
 15068              	cplx_catalogue:
 15069 0000 8029BCFE 		.ascii	"\200)\274\376!;\316\341\015\372\200aXZ\211~i\030e\357"
 15069      213BCEE1 
 15069      0DFA8061 
 15069      585A897E 
 15069      691865EF 
 15070 0014 839FB7F5 		.ascii	"\203\237\267\365\377\253\255ZB\030\240_@"
 15070      FFABAD5A 
 15070      4218A05F 
 15070      40
 15071              		.section	.rodata.disp.9608,"a"
 15072              		.align	2
 15073              		.set	.LANCHOR21,. + 0
 15076              	disp.9608:
ARM GAS  /tmp/ccvq0xdJ.s 			page 407


 15077 0000 03       		.byte	3
 15078 0001 02       		.byte	2
 15079 0002 05       		.byte	5
 15080 0003 04       		.byte	4
 15081              		.section	.rodata.int_catalogue,"a"
 15082              		.align	2
 15085              	int_catalogue:
 15086 0000 49F18307 		.ascii	"I\361\203\007\032D]\342Y\335\020\232\254m(D\034V\301"
 15086      1A445DE2 
 15086      59DD109A 
 15086      AC6D2844 
 15086      1C56C1
 15087 0013 C62531EC 		.ascii	"\306%1\354}\265m\030\326\311\312c\035\223\015\313%q"
 15087      7DB56D18 
 15087      D6C9CA63 
 15087      1D930DCB 
 15087      2571
 15088 0025 2C5112C4 		.ascii	",Q\022\304\361\\dhE\261l_4g\303S)&s\012\307V\335*\255"
 15088      F15C6468 
 15088      45B16C5F 
 15088      3467C353 
 15088      2926730A 
 15089 003e CB6ADEB7 		.ascii	"\313j\336\267\356\013\206\333*\323\364m\346y\300"
 15089      EE0B86DB 
 15089      2AD3F46D 
 15089      E679C0
 15090              		.section	.rodata.linear_key_map.9392,"a"
 15091              		.align	2
 15092              		.set	.LANCHOR6,. + 0
 15095              	linear_key_map.9392:
 15096 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 15096      04050607 
 15096      08090A0B 
 15096      0C
 15097 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 15097      00111213 
 15097      14150016 
 15097      17
 15098 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 15098      1B1C1D1E 
 15098      1F002021 
 15098      22232425 
 15098      25252525 
 15099 002e 25       		.ascii	"%"
 15100              		.section	.rodata.linear_key_map.9396,"a"
 15101              		.align	2
 15102              		.set	.LANCHOR1,. + 0
 15105              	linear_key_map.9396:
 15106 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 15106      04050607 
 15106      08222222 
 15106      090A0B
 15107 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 15107      0F101112 
 15107      00131415 
 15107      16
 15108 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
ARM GAS  /tmp/ccvq0xdJ.s 			page 408


 15108      1A1B1C00 
 15108      1D1E1F20 
 15108      21222222 
 15109 002c 040522   		.ascii	"\004\005\""
 15110              		.section	.rodata.map.9408,"a"
 15111              		.align	2
 15112              		.set	.LANCHOR5,. + 0
 15115              	map.9408:
 15116 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 15116      FF7F7F7F 
 15116      6D6E6F6C 
 15116      FFFFFFFF 
 15117 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 15117      097F7FE7 
 15117      05067F7F 
 15117      E4
 15118 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 15118      00F07F7F 
 15118      FFFFFFFF 
 15118      FF
 15119 002a FF       		.ascii	"\377"
 15120              		.section	.rodata.matrix_catalogue,"a"
 15121              		.align	2
 15124              	matrix_catalogue:
 15125 0000 699E4364 		.ascii	"i\236Cd\3305\336#m\240u\332\027Y\341v\032V\235\343i"
 15125      D835DE23 
 15125      6DA075DA 
 15125      1759E176 
 15125      1A569DE3 
 15126 0015 1A3688   		.ascii	"\0326\210"
 15127              		.section	.rodata.mode_catalogue,"a"
 15128              		.align	2
 15131              	mode_catalogue:
 15132 0000 2948C290 		.ascii	")H\302\220\213\310\006d\031\007BP\203\250\351\037\210"
 15132      8BC80664 
 15132      19074250 
 15132      83A8E91F 
 15132      88
 15133 0011 01FC7CC1 		.ascii	"\001\374|\301I\204-\012\030\314\362D\234&\306!\224\223"
 15133      49842D0A 
 15133      18CCF244 
 15133      9C26C621 
 15133      9493
 15134 0023 2489A193 		.ascii	"$\211\241\223-!\010<\313)\"\010s \2461\014s$\2471Lb"
 15134      2D21083C 
 15134      CB292208 
 15134      7320A631 
 15134      0C7324A7 
 15135 003a 38CE0E03 		.ascii	"8\316\016\003\234\260\206!H\334D\374>\311\235/E\321"
 15135      9CB08621 
 15135      48DC44FC 
 15135      3EC99D2F 
 15135      45D1
 15136 004c 10E434   		.ascii	"\020\3444"
 15137              		.section	.rodata.op_map.9480,"a"
 15138              		.align	2
 15139              		.set	.LANCHOR2,. + 0
ARM GAS  /tmp/ccvq0xdJ.s 			page 409


 15142              	op_map.9480:
 15143 0000 1500     		.short	21
 15144 0002 0B02     		.short	523
 15145 0004 0003     		.short	768
 15146 0006 0A02     		.short	522
 15147 0008 1300     		.short	19
 15148 000a 1400     		.short	20
 15149 000c 0300     		.short	3
 15150 000e 0A00     		.short	10
 15151 0010 0701     		.short	263
 15152 0012 0000     		.short	0
 15153 0014 6531     		.short	12645
 15154 0016 0300     		.short	3
 15155 0018 0200     		.short	2
 15156 001a 0100     		.short	1
 15157 001c 4400     		.short	68
 15158 001e 0C00     		.short	12
 15159 0020 0D00     		.short	13
 15160 0022 0E00     		.short	14
 15161 0024 0403     		.short	772
 15162 0026 2F00     		.short	47
 15163 0028 0900     		.short	9
 15164 002a 0A00     		.short	10
 15165 002c 0B00     		.short	11
 15166 002e 0303     		.short	771
 15167 0030 2E00     		.short	46
 15168 0032 0600     		.short	6
 15169 0034 0700     		.short	7
 15170 0036 0800     		.short	8
 15171 0038 0203     		.short	770
 15172 003a 3300     		.short	51
 15173 003c 0500     		.short	5
 15174 003e 0400     		.short	4
 15175 0040 3B01     		.short	315
 15176 0042 0103     		.short	769
 15177 0044 0001     		.short	256
 15178              		.section	.rodata.op_map.9503,"a"
 15179              		.align	2
 15180              		.set	.LANCHOR3,. + 0
 15183              	op_map.9503:
 15184 0000 0100     		.short	1
 15185 0002 0000     		.short	0
 15186 0004 20F2     		.short	-3552
 15187 0006 23F2     		.short	-3549
 15188 0008 21F2     		.short	-3551
 15189 000a 24F2     		.short	-3548
 15190 000c 22F2     		.short	-3550
 15191 000e 25F2     		.short	-3547
 15192 0010 47F1     		.short	-3769
 15193 0012 46F1     		.short	-3770
 15194 0014 4E01     		.short	334
 15195 0016 4D01     		.short	333
 15196 0018 5C01     		.short	348
 15197 001a 35F1     		.short	-3787
 15198 001c 5B01     		.short	347
 15199 001e 36F1     		.short	-3786
 15200 0020 3301     		.short	307
ARM GAS  /tmp/ccvq0xdJ.s 			page 410


 15201 0022 37F1     		.short	-3785
 15202 0024 3300     		.short	51
 15203 0026 0C01     		.short	268
 15204 0028 2B00     		.short	43
 15205 002a 2C00     		.short	44
 15206 002c 028B     		.short	-29950
 15207 002e 088B     		.short	-29944
 15208 0030 0A8B     		.short	-29942
 15209 0032 108B     		.short	-29936
 15210 0034 4301     		.short	323
 15211 0036 3D01     		.short	317
 15212 0038 0902     		.short	521
 15213 003a 0802     		.short	520
 15214 003c 1002     		.short	528
 15215 003e 0D02     		.short	525
 15216 0040 0F02     		.short	527
 15217 0042 0E02     		.short	526
 15218 0044 0003     		.short	768
 15219 0046 0803     		.short	776
 15220 0048 0BF2     		.short	-3573
 15221 004a 1603     		.short	790
 15222 004c 1203     		.short	786
 15223 004e 1303     		.short	787
 15224 0050 3DF2     		.short	-3523
 15225 0052 3EF2     		.short	-3522
 15226 0054 24F1     		.short	-3804
 15227 0056 1EF1     		.short	-3810
 15228 0058 75F2     		.short	-3467
 15229 005a 27F1     		.short	-3801
 15230 005c 0A02     		.short	522
 15231 005e 1602     		.short	534
 15232 0060 5100     		.short	81
 15233 0062 5200     		.short	82
 15234 0064 0000     		.short	0
 15235 0066 0100     		.short	1
 15236 0068 48F0     		.short	-4024
 15237 006a 4BF0     		.short	-4021
 15238 006c 47F0     		.short	-4025
 15239 006e 46F0     		.short	-4026
 15240 0070 77F2     		.short	-3465
 15241 0072 78F2     		.short	-3464
 15242 0074 64AB     		.short	-21660
 15243 0076 3300     		.short	51
 15244 0078 0502     		.short	517
 15245 007a 0602     		.short	518
 15246 007c 0402     		.short	516
 15247 007e 0002     		.short	512
 15248 0080 4200     		.short	66
 15249 0082 3801     		.short	312
 15250 0084 3A00     		.short	58
 15251 0086 3B00     		.short	59
 15252 0088 0001     		.short	256
 15253 008a 0001     		.short	256
 15254              		.section	.rodata.op_map.9526,"a"
 15255              		.align	2
 15256              		.set	.LANCHOR0,. + 0
 15259              	op_map.9526:
ARM GAS  /tmp/ccvq0xdJ.s 			page 411


 15260 0000 4C80     		.short	-32692
 15261 0002 4D80     		.short	-32691
 15262 0004 4E80     		.short	-32690
 15263 0006 4F80     		.short	-32689
 15264 0008 3300     		.short	51
 15265 000a 3300     		.short	51
 15266 000c 3300     		.short	51
 15267 000e 2180     		.short	-32735
 15268 0010 0801     		.short	264
 15269 0012 8780     		.short	-32633
 15270 0014 1180     		.short	-32751
 15271 0016 7C02     		.short	636
 15272 0018 6660     		.short	24678
 15273 001a 3F01     		.short	319
 15274 001c 4580     		.short	-32699
 15275 001e 1C03     		.short	796
 15276 0020 1D03     		.short	797
 15277 0022 1E03     		.short	798
 15278 0024 0603     		.short	774
 15279 0026 2F02     		.short	559
 15280 0028 3300     		.short	51
 15281 002a 3300     		.short	51
 15282 002c 3300     		.short	51
 15283 002e 3300     		.short	51
 15284 0030 3300     		.short	51
 15285 0032 3300     		.short	51
 15286 0034 3300     		.short	51
 15287 0036 3300     		.short	51
 15288 0038 1640     		.short	16406
 15289 003a 0201     		.short	258
 15290 003c 6D80     		.short	-32659
 15291 003e 5001     		.short	336
 15292 0040 3300     		.short	51
 15293 0042 1540     		.short	16405
 15294 0044 0001     		.short	256
 15295              		.section	.rodata.op_map.9581,"a"
 15296              		.align	2
 15297              		.set	.LANCHOR7,. + 0
 15300              	op_map.9581:
 15301 0000 0100     		.short	1
 15302 0002 0100     		.short	1
 15303 0004 0000     		.short	0
 15304 0006 0000     		.short	0
 15305 0008 0B05     		.short	1291
 15306 000a 2005     		.short	1312
 15307 000c 2305     		.short	1315
 15308 000e 3300     		.short	51
 15309 0010 0006     		.short	1536
 15310 0012 2105     		.short	1313
 15311 0014 2405     		.short	1316
 15312 0016 3300     		.short	51
 15313 0018 0A05     		.short	1290
 15314 001a 2205     		.short	1314
 15315 001c 2505     		.short	1317
 15316 001e 3300     		.short	51
 15317 0020 3300     		.short	51
 15318 0022 4701     		.short	327
ARM GAS  /tmp/ccvq0xdJ.s 			page 412


 15319 0024 4601     		.short	326
 15320 0026 3300     		.short	51
 15321 0028 3300     		.short	51
 15322 002a 3300     		.short	51
 15323 002c 3300     		.short	51
 15324 002e 3300     		.short	51
 15325 0030 15FF     		.short	-235
 15326 0032 3300     		.short	51
 15327 0034 3300     		.short	51
 15328 0036 3300     		.short	51
 15329 0038 1AFF     		.short	-230
 15330 003a 3300     		.short	51
 15331 003c 3300     		.short	51
 15332 003e 93FF     		.short	-109
 15333 0040 0901     		.short	265
 15334 0042 3300     		.short	51
 15335 0044 3300     		.short	51
 15336 0046 0A01     		.short	266
 15337 0048 0B01     		.short	267
 15338 004a 3300     		.short	51
 15339 004c 0D01     		.short	269
 15340 004e 0D01     		.short	269
 15341 0050 663F     		.short	16230
 15342 0052 3300     		.short	51
 15343 0054 3300     		.short	51
 15344 0056 1FFF     		.short	-225
 15345 0058 3805     		.short	1336
 15346 005a 3300     		.short	51
 15347 005c 3300     		.short	51
 15348 005e 3905     		.short	1337
 15349 0060 6621     		.short	8550
 15350 0062 3300     		.short	51
 15351 0064 3300     		.short	51
 15352 0066 6621     		.short	8550
 15353 0068 3300     		.short	51
 15354 006a 3300     		.short	51
 15355 006c 3300     		.short	51
 15356 006e 3300     		.short	51
 15357 0070 3300     		.short	51
 15358 0072 0905     		.short	1289
 15359 0074 0805     		.short	1288
 15360 0076 3300     		.short	51
 15361 0078 07A8     		.short	-22521
 15362 007a 1005     		.short	1296
 15363 007c 0D05     		.short	1293
 15364 007e 3300     		.short	51
 15365 0080 08A8     		.short	-22520
 15366 0082 0F05     		.short	1295
 15367 0084 0E05     		.short	1294
 15368 0086 3300     		.short	51
 15369 0088 09A8     		.short	-22519
 15370 008a 0006     		.short	1536
 15371 008c 0806     		.short	1544
 15372 008e 3300     		.short	51
 15373 0090 0406     		.short	1540
 15374 0092 0B05     		.short	1291
 15375 0094 1606     		.short	1558
ARM GAS  /tmp/ccvq0xdJ.s 			page 413


 15376 0096 3300     		.short	51
 15377 0098 3300     		.short	51
 15378 009a 1206     		.short	1554
 15379 009c 1306     		.short	1555
 15380 009e 2F05     		.short	1327
 15381 00a0 04A8     		.short	-22524
 15382 00a2 3300     		.short	51
 15383 00a4 3300     		.short	51
 15384 00a6 3300     		.short	51
 15385 00a8 05A8     		.short	-22523
 15386 00aa 3300     		.short	51
 15387 00ac 3300     		.short	51
 15388 00ae 3300     		.short	51
 15389 00b0 06A8     		.short	-22522
 15390 00b2 3300     		.short	51
 15391 00b4 3300     		.short	51
 15392 00b6 3300     		.short	51
 15393 00b8 0306     		.short	1539
 15394 00ba 0A05     		.short	1290
 15395 00bc 1605     		.short	1302
 15396 00be 1605     		.short	1302
 15397 00c0 3300     		.short	51
 15398 00c2 3300     		.short	51
 15399 00c4 3300     		.short	51
 15400 00c6 3300     		.short	51
 15401 00c8 01A8     		.short	-22527
 15402 00ca 0000     		.short	0
 15403 00cc 0100     		.short	1
 15404 00ce 3300     		.short	51
 15405 00d0 02A8     		.short	-22526
 15406 00d2 3300     		.short	51
 15407 00d4 3300     		.short	51
 15408 00d6 3300     		.short	51
 15409 00d8 03A8     		.short	-22525
 15410 00da 3300     		.short	51
 15411 00dc 3300     		.short	51
 15412 00de 3300     		.short	51
 15413 00e0 0206     		.short	1538
 15414 00e2 3300     		.short	51
 15415 00e4 3300     		.short	51
 15416 00e6 3300     		.short	51
 15417 00e8 3300     		.short	51
 15418 00ea 3300     		.short	51
 15419 00ec 3300     		.short	51
 15420 00ee 0201     		.short	258
 15421 00f0 00A8     		.short	-22528
 15422 00f2 0505     		.short	1285
 15423 00f4 0605     		.short	1286
 15424 00f6 3300     		.short	51
 15425 00f8 B801     		.short	440
 15426 00fa 0405     		.short	1284
 15427 00fc 0005     		.short	1280
 15428 00fe 3300     		.short	51
 15429 0100 D801     		.short	472
 15430 0102 3300     		.short	51
 15431 0104 3300     		.short	51
 15432 0106 3300     		.short	51
ARM GAS  /tmp/ccvq0xdJ.s 			page 414


 15433 0108 0106     		.short	1537
 15434 010a 3300     		.short	51
 15435 010c 3300     		.short	51
 15436 010e 3300     		.short	51
 15437 0110 0001     		.short	256
 15438 0112 0001     		.short	256
 15439 0114 0001     		.short	256
 15440 0116 0001     		.short	256
 15441              		.section	.rodata.op_map.9593,"a"
 15442              		.align	2
 15443              		.set	.LANCHOR19,. + 0
 15446              	op_map.9593:
 15447 0000 2A27     		.ascii	"*'"
 15448 0002 2B28     		.ascii	"+("
 15449 0004 2C29     		.ascii	",)"
 15450              		.section	.rodata.op_map.9607,"a"
 15451              		.align	2
 15452              		.set	.LANCHOR20,. + 0
 15455              	op_map.9607:
 15456 0000 1A02     		.short	538
 15457 0002 7B02     		.short	635
 15458 0004 1B02     		.short	539
 15459 0006 7A02     		.short	634
 15460 0008 1C02     		.short	540
 15461 000a 3300     		.short	51
 15462              		.section	.rodata.op_map2.9504,"a"
 15463              		.align	2
 15464              		.set	.LANCHOR4,. + 0
 15467              	op_map2.9504:
 15468 0000 3300     		.short	51
 15469 0002 3300     		.short	51
 15470 0004 0003     		.short	768
 15471 0006 0A02     		.short	522
 15472              		.section	.rodata.opcode_breaks,"a"
 15473              		.align	2
 15474              		.set	.LANCHOR13,. + 0
 15477              	opcode_breaks:
 15478 0000 34DB9C31 		.ascii	"4\333\2341\014\2341"
 15478      0C9C31
 15479              		.section	.rodata.prob_catalogue,"a"
 15480              		.align	2
 15483              	prob_catalogue:
 15484 0000 5795D5ED 		.ascii	"W\225\325\355_\\\327&\011tV\325\245\351\\U\027\205U"
 15484      5F5CD726 
 15484      097456D5 
 15484      A5E95C55 
 15484      178555
 15485 0013 5659D665 		.ascii	"VY\326e\371h[V\306\001n\\\026\366\005qZ\226\225\375"
 15485      F9685B56 
 15485      C6016E5C 
 15485      16F60571 
 15485      5A9695FD 
 15486 0027 6B591635 		.ascii	"kY\0265\365eXV\005\361bTWuISV\025u\345Y]T\265=PS\227"
 15486      F5655856 
 15486      05F16254 
 15486      57754953 
 15486      561575E5 
ARM GAS  /tmp/ccvq0xdJ.s 			page 415


 15487 0043 60       		.ascii	"`"
 15488              		.section	.rodata.prog_catalogue,"a"
 15489              		.align	2
 15492              	prog_catalogue:
 15493 0000 BB0D1D1C 		.ascii	"\273\015\035\034y\035G\201\310t*3\353\324B\274o1\272"
 15493      791D4781 
 15493      C8742A33 
 15493      EBD442BC 
 15493      6F31BA
 15494 0013 B7C20E0B 		.ascii	"\267\302\016\013\372\3773/k\312\364\313\316#\220\347"
 15494      FAFF332F 
 15494      6BCAF4CB 
 15494      CE2390E7 
 15495 0023 38CE8CC4 		.ascii	"8\316\214\304\3367s\000\320\3349G\003\233.\266\015\361"
 15495      DE377300 
 15495      D0DC3947 
 15495      039B2EB6 
 15495      0DF1
 15496 0035 D8CD1B4B 		.ascii	"\330\315\033K\022\274\262,\016\033\254\322\015\355s"
 15496      12BCB22C 
 15496      0E1BACD2 
 15496      0DED73
 15497 0044 02C92A72 		.ascii	"\002\311*r\200\350\313\261\354\214\224\256+rL\354\367"
 15497      80E8CBB1 
 15497      EC8C94AE 
 15497      2B724CEC 
 15497      F7
 15498 0055 D0B463C3 		.ascii	"\320\264c\303@<O-\014\370=\017S\314\366\320@"
 15498      403C4F2D 
 15498      0CF83D0F 
 15498      53CCF6D0 
 15498      40
 15499              		.section	.rodata.program_xfcn,"a"
 15500              		.align	2
 15503              	program_xfcn:
 15504 0000 49DC26DB 		.ascii	"I\334&\333\0300Y\206g\032DJ#\265\234s]\342Y\335\037"
 15504      18305986 
 15504      671A444A 
 15504      23B59C73 
 15504      5DE259DD 
 15505 0015 52CCD442 		.ascii	"R\314\324Bc\332\225%Jg\222\026\253\033J\021\007\025"
 15505      63DA9525 
 15505      4A679216 
 15505      AB1B4A11 
 15505      0715
 15506 0027 3C4F52E7 		.ascii	"<OR\347M\324p\334F\3033w\031\007\030\224t\222\007\201"
 15506      4DD470DC 
 15506      46C33377 
 15506      19071894 
 15506      74920781 
 15507 003b B85019DC 		.ascii	"\270P\031\334{\037m[F5\262f\334\2461\3310\334\267=-"
 15507      7B1F6D5B 
 15507      4635B266 
 15507      DCA631D9 
 15507      30DCB73D 
 15508 0050 CAC95C4B 		.ascii	"\312\311\\K\024D\261<W*\306rl\234hE\223\\X\302\305\363"
 15508      1444B13C 
ARM GAS  /tmp/ccvq0xdJ.s 			page 416


 15508      572AC672 
 15508      6C9C6845 
 15508      935C58C2 
 15509 0066 4430A374 		.ascii	"D0\243t\031\367D5c\214\244\215\"I\022g0\254uY\242\200"
 15509      19F74435 
 15509      638CA48D 
 15509      22491267 
 15509      30AC7559 
 15510 007c 9EB74AA2 		.ascii	"\236\267J\242~\334\266\255\353~\340\270m\262\204\253"
 15510      7EDCB6AD 
 15510      EB7EE0B8 
 15510      6DB284AB 
 15511 008c 6DD3F6ED 		.ascii	"m\323\366\355\274n[\2479\227j\021\267\231\345p\035\366"
 15511      BC6E5BA7 
 15511      39976A11 
 15511      B799E570 
 15511      1DF6
 15512 009e 21856FDE 		.ascii	"!\205o\336p"
 15512      70
 15513              		.section	.rodata.smap.9428,"a"
 15514              		.align	2
 15515              		.set	.LANCHOR22,. + 0
 15518              	smap.9428:
 15519 0000 00010002 		.ascii	"\000\001\000\002"
 15520              		.section	.rodata.stats_catalogue,"a"
 15521              		.align	2
 15524              	stats_catalogue:
 15525 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\226\014T\027\205"
 15525      5D17C971 
 15525      58611685 
 15525      960C5417 
 15525      85
 15526 0011 514C5761 		.ascii	"QLWa@"
 15526      40
 15527              		.section	.rodata.sums_catalogue,"a"
 15528              		.align	2
 15531              	sums_catalogue:
 15532 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15532      4A1384C1 
 15532      20451104 
 15532      F11C4911 
 15532      8500
 15533              		.section	.rodata.test_catalogue,"a"
 15534              		.align	2
 15537              	test_catalogue:
 15538 0000 C771CCE8 		.ascii	"\307q\314\350\353/\313\334+\016\3040\362\363\011\302"
 15538      EB2FCBDC 
 15538      2B0EC430 
 15538      F2F309C2 
 15539 0010 F0DC30D3 		.ascii	"\360\3340\323.\362;\340\2356\213\202\370\2725\013\223"
 15539      2EF23BE0 
 15539      9D368B82 
 15539      F8BA350B 
 15539      93
 15540 0021 40F9B96E 		.ascii	"@\371\271ncT\326\271.\213\234\267>\200"
 15540      6354D6B9 
 15540      2E8B9CB7 
ARM GAS  /tmp/ccvq0xdJ.s 			page 417


 15540      3E80
 15541              		.text
 15542              	.Letext0:
 15543              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15544              		.file 3 "dmcp/dmcp.h"
 15545              		.file 4 "src/decNumber/decContext.h"
 15546              		.file 5 "src/decNumber/decNumber.h"
 15547              		.file 6 "src/decNumber/decimal64.h"
 15548              		.file 7 "src/decNumber/decimal128.h"
 15549              		.file 8 "src/xeq.h"
 15550              		.file 9 "src/data.h"
 15551              		.file 10 "src/keys.h"
 15552              		.file 11 "src/menu.h"
 15553              		.file 12 "src/display.h"
 15554              		.file 13 "src/consts.h"
 15555              		.file 14 "src/storage.h"
 15556              		.file 15 "src/stats.h"
 15557              		.file 16 "src/catalogues.h"
 15558              		.file 17 "src/printer.h"
 15559              		.file 18 "src/lcd.h"
 15560              		.file 19 "src/int.h"
 15561              		.file 20 "src/decn.h"
ARM GAS  /tmp/ccvq0xdJ.s 			page 418


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccvq0xdJ.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccvq0xdJ.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccvq0xdJ.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccvq0xdJ.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccvq0xdJ.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccvq0xdJ.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccvq0xdJ.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccvq0xdJ.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccvq0xdJ.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccvq0xdJ.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccvq0xdJ.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccvq0xdJ.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccvq0xdJ.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccvq0xdJ.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccvq0xdJ.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccvq0xdJ.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccvq0xdJ.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccvq0xdJ.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccvq0xdJ.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccvq0xdJ.s:865    .text.check_confirm.part.0:0000000000000030 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccvq0xdJ.s:872    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccvq0xdJ.s:879    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccvq0xdJ.s:921    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccvq0xdJ.s:926    .text.reset_arg:0000000000000000 $t
     /tmp/ccvq0xdJ.s:933    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccvq0xdJ.s:977    .text.reset_arg:0000000000000018 $d
     /tmp/ccvq0xdJ.s:982    .text.arg_eval:0000000000000000 $t
     /tmp/ccvq0xdJ.s:989    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccvq0xdJ.s:1146   .text.arg_eval:00000000000000a4 $d
     /tmp/ccvq0xdJ.s:1153   .text.arg_digit:0000000000000000 $t
     /tmp/ccvq0xdJ.s:1160   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccvq0xdJ.s:1419   .text.arg_digit:00000000000000f4 $d
     /tmp/ccvq0xdJ.s:1427   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccvq0xdJ.s:1434   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccvq0xdJ.s:1492   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccvq0xdJ.s:1497   .text.process_h_shifted:0000000000000000 $t
     /tmp/ccvq0xdJ.s:1504   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/ccvq0xdJ.s:1752   .text.process_h_shifted:00000000000000c8 $d
     /tmp/ccvq0xdJ.s:1760   .text.intltr:0000000000000000 $t
     /tmp/ccvq0xdJ.s:1767   .text.intltr:0000000000000000 intltr
     /tmp/ccvq0xdJ.s:1830   .text.intltr:0000000000000030 $d
     /tmp/ccvq0xdJ.s:1836   .text.process_normal:0000000000000000 $t
     /tmp/ccvq0xdJ.s:1843   .text.process_normal:0000000000000000 process_normal
     /tmp/ccvq0xdJ.s:1904   .text.process_normal:0000000000000022 $d
     /tmp/ccvq0xdJ.s:1950   .text.process_normal:000000000000007e $t
     /tmp/ccvq0xdJ.s:1999   .text.process_normal:00000000000000ac $d
     /tmp/ccvq0xdJ.s:2018   .text.process_normal:00000000000000f8 $t
     /tmp/ccvq0xdJ.s:2029   .text.process_normal:0000000000000104 $d
     /tmp/ccvq0xdJ.s:2072   .text.process_normal:00000000000001b0 $t
     /tmp/ccvq0xdJ.s:2273   .text.process_normal:0000000000000264 $d
     /tmp/ccvq0xdJ.s:2282   .text.process_fg_shifted:0000000000000000 $t
     /tmp/ccvq0xdJ.s:2289   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/ccvq0xdJ.s:2417   .text.process_fg_shifted:000000000000003e $d
     /tmp/ccvq0xdJ.s:2616   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/ccvq0xdJ.s 			page 419


     /tmp/ccvq0xdJ.s:2657   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/ccvq0xdJ.s:2853   .text.process_fg_shifted:0000000000000294 $d
     /tmp/ccvq0xdJ.s:2862   .text.set_window:0000000000000000 $t
     /tmp/ccvq0xdJ.s:2869   .text.set_window:0000000000000000 set_window
     /tmp/ccvq0xdJ.s:3016   .text.set_window:000000000000008c $d
     /tmp/ccvq0xdJ.s:3023   .text.arg_storcl:0000000000000000 $t
     /tmp/ccvq0xdJ.s:3030   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccvq0xdJ.s:3146   .text.arg_storcl:0000000000000040 $d
     /tmp/ccvq0xdJ.s:3151   .text.process_arg:0000000000000000 $t
     /tmp/ccvq0xdJ.s:3158   .text.process_arg:0000000000000000 process_arg
     /tmp/ccvq0xdJ.s:3364   .text.process_arg:000000000000008a $d
     /tmp/ccvq0xdJ.s:3368   .text.process_arg:0000000000000090 $t
     /tmp/ccvq0xdJ.s:3457   .text.process_arg:00000000000000f0 $d
     /tmp/ccvq0xdJ.s:3504   .text.process_arg:00000000000001a8 $t
     /tmp/ccvq0xdJ.s:3907   .text.process_arg:000000000000032c $d
     /tmp/ccvq0xdJ.s:3916   .text.process_arg:0000000000000340 $t
     /tmp/ccvq0xdJ.s:4407   .text.process_arg:000000000000054c $d
     /tmp/ccvq0xdJ.s:4412   .text.cur_shift:0000000000000000 $t
     /tmp/ccvq0xdJ.s:4420   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccvq0xdJ.s:4448   .text.cur_shift:0000000000000010 $d
     /tmp/ccvq0xdJ.s:4453   .text.reset_shift:0000000000000000 $t
     /tmp/ccvq0xdJ.s:4461   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccvq0xdJ.s:4519   .text.reset_shift:0000000000000014 $d
     /tmp/ccvq0xdJ.s:4524   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccvq0xdJ.s:4532   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccvq0xdJ.s:4560   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccvq0xdJ.s:4565   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccvq0xdJ.s:4573   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccvq0xdJ.s:4631   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccvq0xdJ.s:4636   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccvq0xdJ.s:4644   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccvq0xdJ.s:4680   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccvq0xdJ.s:4686   .text.init_state:0000000000000000 $t
     /tmp/ccvq0xdJ.s:4694   .text.init_state:0000000000000000 init_state
     /tmp/ccvq0xdJ.s:4810   .text.init_state:0000000000000074 $d
     /tmp/ccvq0xdJ.s:4817   .text.process_cmplx:0000000000000000 $t
     /tmp/ccvq0xdJ.s:4824   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/ccvq0xdJ.s:5180   .text.process_cmplx:00000000000000c4 $d
     /tmp/ccvq0xdJ.s:5187   .text.soft_init_state:0000000000000000 $t
     /tmp/ccvq0xdJ.s:5195   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccvq0xdJ.s:5290   .text.soft_init_state:0000000000000048 $d
     /tmp/ccvq0xdJ.s:5296   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/ccvq0xdJ.s:5304   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/ccvq0xdJ.s:5482   .text.finish_cpx_entry:00000000000000c8 $d
     /tmp/ccvq0xdJ.s:5489   .text.stack_begin:0000000000000000 $t
     /tmp/ccvq0xdJ.s:5497   .text.stack_begin:0000000000000000 stack_begin
     /tmp/ccvq0xdJ.s:5637   .text.stack_begin:00000000000000b4 $d
     /tmp/ccvq0xdJ.s:5643   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccvq0xdJ.s:5651   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccvq0xdJ.s:5672   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccvq0xdJ.s:5678   .text.current_catalogue:0000000000000000 $t
     /tmp/ccvq0xdJ.s:5686   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccvq0xdJ.s:5942   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccvq0xdJ.s:5952   .text.process_catalogue:0000000000000000 $t
     /tmp/ccvq0xdJ.s:5959   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccvq0xdJ.s:6288   .text.process_catalogue:00000000000000fe $d
     /tmp/ccvq0xdJ.s:6320   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/ccvq0xdJ.s 			page 420


     /tmp/ccvq0xdJ.s:6828   .text.process_catalogue:00000000000002dc $d
     /tmp/ccvq0xdJ.s:6849   .text.process_catalogue:00000000000002fc $t
     /tmp/ccvq0xdJ.s:6879   .text.find_pos:0000000000000000 $t
     /tmp/ccvq0xdJ.s:6887   .text.find_pos:0000000000000000 find_pos
     /tmp/ccvq0xdJ.s:7060   .text.find_pos:0000000000000080 $d
     /tmp/ccvq0xdJ.s:7066   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccvq0xdJ.s:7074   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccvq0xdJ.s:7106   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccvq0xdJ.s:7112   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccvq0xdJ.s:7122   .text.process_keycode:0000000000000000 $t
     /tmp/ccvq0xdJ.s:7130   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccvq0xdJ.s:7764   .text.process_keycode:00000000000002e0 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccvq0xdJ.s:7782   .text.process_keycode:0000000000000318 $t
     /tmp/ccvq0xdJ.s:7922   .text.process_keycode:00000000000003b8 $d
     /tmp/ccvq0xdJ.s:7931   .text.process_keycode:00000000000003dc $t
     /tmp/ccvq0xdJ.s:8419   .text.process_keycode:00000000000005e0 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccvq0xdJ.s:8440   .text.process_keycode:0000000000000610 $t
     /tmp/ccvq0xdJ.s:8581   .text.process_keycode:00000000000006b8 $d
     /tmp/ccvq0xdJ.s:8611   .text.process_keycode:0000000000000730 $t
     /tmp/ccvq0xdJ.s:8923   .text.process_keycode:0000000000000820 $d
     /tmp/ccvq0xdJ.s:8949   .text.process_keycode:0000000000000888 $t
     /tmp/ccvq0xdJ.s:8991   .text.process_keycode:00000000000008b8 $d
     /tmp/ccvq0xdJ.s:8995   .text.process_keycode:00000000000008c8 $t
     /tmp/ccvq0xdJ.s:9120   .text.process_keycode:0000000000000954 $d
     /tmp/ccvq0xdJ.s:9143   .text.process_keycode:0000000000000978 $t
     /tmp/ccvq0xdJ.s:10017  .text.process_keycode:0000000000000c90 $d
     /tmp/ccvq0xdJ.s:10038  .text.process_keycode:0000000000000cac $t
     /tmp/ccvq0xdJ.s:10832  .text.process_keycode:0000000000000f3c $d
     /tmp/ccvq0xdJ.s:10867  .text.process_keycode:0000000000000fc8 $t
     /tmp/ccvq0xdJ.s:11023  .text.process_keycode:0000000000001064 $d
     /tmp/ccvq0xdJ.s:11038  .text.process_keycode:0000000000001088 $t
     /tmp/ccvq0xdJ.s:11069  .text.process_keycode:00000000000010b8 $d
     /tmp/ccvq0xdJ.s:11089  .text.process_keycode:0000000000001108 $t
     /tmp/ccvq0xdJ.s:11295  .text.process_keycode:00000000000011b0 $d
     /tmp/ccvq0xdJ.s:11313  .text.process_keycode:00000000000011f8 $t
     /tmp/ccvq0xdJ.s:11882  .text.process_keycode:00000000000013dc $d
     /tmp/ccvq0xdJ.s:11917  .text.process_keycode:0000000000001464 $t
     /tmp/ccvq0xdJ.s:12001  .text.process_keycode:00000000000014a0 $d
     /tmp/ccvq0xdJ.s:12019  .text.process_keycode:00000000000014bc $t
     /tmp/ccvq0xdJ.s:12068  .text.process_keycode:00000000000014ec $d
     /tmp/ccvq0xdJ.s:12103  .text.process_keycode:0000000000001574 $t
     /tmp/ccvq0xdJ.s:12614  .text.process_keycode:00000000000017ae $d
     /tmp/ccvq0xdJ.s:12656  .text.process_keycode:0000000000001802 $t
     /tmp/ccvq0xdJ.s:12660  .text.process_keycode:0000000000001804 $d
     /tmp/ccvq0xdJ.s:12672  .text.process_keycode:0000000000001814 $t
     /tmp/ccvq0xdJ.s:13341  .text.process_keycode:0000000000001a9c $d
     /tmp/ccvq0xdJ.s:13367  .text.process_keycode:0000000000001b04 $t
     /tmp/ccvq0xdJ.s:13533  .text.process_keycode:0000000000001bc8 $d
     /tmp/ccvq0xdJ.s:13564  .text.process_keycode:0000000000001bd4 $t
     /tmp/ccvq0xdJ.s:14590  .text.process_keycode:0000000000001f50 $d
     /tmp/ccvq0xdJ.s:14602  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccvq0xdJ.s:14610  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
ARM GAS  /tmp/ccvq0xdJ.s 			page 421


     /tmp/ccvq0xdJ.s:14818  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/ccvq0xdJ.s:14835  .bss.was_paused.9953:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14839  .bss.was_paused.9953:0000000000000000 was_paused.9953
     /tmp/ccvq0xdJ.s:14842  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14845  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccvq0xdJ.s:14848  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14851  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccvq0xdJ.s:14855  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14858  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccvq0xdJ.s:14861  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14865  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccvq0xdJ.s:14871  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14875  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccvq0xdJ.s:14881  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14884  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccvq0xdJ.s:14888  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14891  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccvq0xdJ.s:14894  .rodata.alphamap.9436:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14898  .rodata.alphamap.9436:0000000000000000 alphamap.9436
     /tmp/ccvq0xdJ.s:14938  .rodata.amap.9427:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14942  .rodata.amap.9427:0000000000000000 amap.9427
     /tmp/ccvq0xdJ.s:14960  .rodata.catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14963  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccvq0xdJ.s:14972  .rodata.catalogue_sizes.9750:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14976  .rodata.catalogue_sizes.9750:0000000000000000 catalogue_sizes.9750
     /tmp/ccvq0xdJ.s:14979  .rodata.catalogues.9758:0000000000000000 $d
     /tmp/ccvq0xdJ.s:14983  .rodata.catalogues.9758:0000000000000000 catalogues.9758
     /tmp/ccvq0xdJ.s:15068  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccvq0xdJ.s:15524  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccvq0xdJ.s:15483  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccvq0xdJ.s:15085  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccvq0xdJ.s:15492  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccvq0xdJ.s:15503  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccvq0xdJ.s:15537  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccvq0xdJ.s:15131  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccvq0xdJ.s:15531  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccvq0xdJ.s:15124  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccvq0xdJ.s:15006  .rodata.cmap.9426:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15010  .rodata.cmap.9426:0000000000000000 cmap.9426
     /tmp/ccvq0xdJ.s:15036  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15040  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccvq0xdJ.s:15047  .rodata.conv_mapping.9797:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15051  .rodata.conv_mapping.9797:0000000000000000 conv_mapping.9797
     /tmp/ccvq0xdJ.s:15065  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15072  .rodata.disp.9608:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15076  .rodata.disp.9608:0000000000000000 disp.9608
     /tmp/ccvq0xdJ.s:15082  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15091  .rodata.linear_key_map.9392:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15095  .rodata.linear_key_map.9392:0000000000000000 linear_key_map.9392
     /tmp/ccvq0xdJ.s:15101  .rodata.linear_key_map.9396:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15105  .rodata.linear_key_map.9396:0000000000000000 linear_key_map.9396
     /tmp/ccvq0xdJ.s:15111  .rodata.map.9408:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15115  .rodata.map.9408:0000000000000000 map.9408
     /tmp/ccvq0xdJ.s:15121  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15128  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15138  .rodata.op_map.9480:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15142  .rodata.op_map.9480:0000000000000000 op_map.9480
ARM GAS  /tmp/ccvq0xdJ.s 			page 422


     /tmp/ccvq0xdJ.s:15179  .rodata.op_map.9503:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15183  .rodata.op_map.9503:0000000000000000 op_map.9503
     /tmp/ccvq0xdJ.s:15255  .rodata.op_map.9526:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15259  .rodata.op_map.9526:0000000000000000 op_map.9526
     /tmp/ccvq0xdJ.s:15296  .rodata.op_map.9581:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15300  .rodata.op_map.9581:0000000000000000 op_map.9581
     /tmp/ccvq0xdJ.s:15442  .rodata.op_map.9593:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15446  .rodata.op_map.9593:0000000000000000 op_map.9593
     /tmp/ccvq0xdJ.s:15451  .rodata.op_map.9607:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15455  .rodata.op_map.9607:0000000000000000 op_map.9607
     /tmp/ccvq0xdJ.s:15463  .rodata.op_map2.9504:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15467  .rodata.op_map2.9504:0000000000000000 op_map2.9504
     /tmp/ccvq0xdJ.s:15473  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15477  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccvq0xdJ.s:15480  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15489  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15500  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15514  .rodata.smap.9428:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15518  .rodata.smap.9428:0000000000000000 smap.9428
     /tmp/ccvq0xdJ.s:15521  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15528  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:15534  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccvq0xdJ.s:2458   .text.process_fg_shifted:0000000000000067 $d
     /tmp/ccvq0xdJ.s:2458   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
get_reg_n
swap_reg
ARM GAS  /tmp/ccvq0xdJ.s 			page 423


copyreg
op_p2r
RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
get_user_flag
print_tab
print_alpha
is_key_pressed
set_running_off
xeq_sst_bst
stoprog
clr_dot
finish_RPN
message
find_char
delprog
prt
scopy_char
clpall
clrprog
reset
clrall
TraceBuffer
set_last_menu
find_user_pc
cmdgtocommon
global_regs
local_regs
drop
convert_regK
alen

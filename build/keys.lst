ARM GAS  /tmp/ccQmaUTi.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccQmaUTi.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** /*
  82:src/keys.c    ****  *  Return the shift state
  83:src/keys.c    ****  */
  84:src/keys.c    **** enum shifts cur_shift(void) {
  85:src/keys.c    **** 	enum shifts s = shift_down();
  86:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccQmaUTi.s 			page 3


  87:src/keys.c    **** }
  88:src/keys.c    **** 
  89:src/keys.c    **** /*
  90:src/keys.c    ****  *  Set new shift state, return previous state
  91:src/keys.c    ****  */
  92:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  93:src/keys.c    **** 	enum shifts r = cur_shift();
  94:src/keys.c    **** 	State2.shifts = shift;
  95:src/keys.c    **** 	State2.alpha_pos = 0;
  96:src/keys.c    **** 	return r;
  97:src/keys.c    **** }
  98:src/keys.c    **** 
  99:src/keys.c    **** /*
 100:src/keys.c    ****  *  Clear shift state and return previous state
 101:src/keys.c    ****  */
 102:src/keys.c    **** enum shifts reset_shift(void) {
 103:src/keys.c    **** 	return set_shift(SHIFT_N);
 104:src/keys.c    **** }
 105:src/keys.c    **** 
 106:src/keys.c    **** /*
 107:src/keys.c    ****  *  Toggle shift state
 108:src/keys.c    ****  */
 109:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 110:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 111:src/keys.c    **** }
 112:src/keys.c    **** 
 113:src/keys.c    **** 
 114:src/keys.c    **** /*
 115:src/keys.c    ****  * Mapping from the key code to a linear index
 116:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 117:src/keys.c    ****  */
 118:src/keys.c    **** #ifdef DM42
 119:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 120:src/keys.c    **** {
 121:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 122:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 123:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 124:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 125:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 126:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 127:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 128:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 129:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 130:src/keys.c    **** 	};
 131:src/keys.c    **** 	return linear_key_map[c];
 132:src/keys.c    **** }
 133:src/keys.c    **** 
 134:src/keys.c    **** static int keycode_to_linear(const keycode c)
 135:src/keys.c    **** {
 136:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 137:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 138:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 139:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 140:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 141:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 142:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 143:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
ARM GAS  /tmp/ccQmaUTi.s 			page 4


 144:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 145:src/keys.c    **** 	};
 146:src/keys.c    **** 	return linear_key_map[c];
 147:src/keys.c    **** }
 148:src/keys.c    **** #else
 149:src/keys.c    **** static int keycode_to_linear(const keycode c)
 150:src/keys.c    **** {
 151:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 152:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 153:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 154:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 155:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 156:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 157:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 158:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 159:src/keys.c    **** 	};
 160:src/keys.c    **** 	return linear_key_map[c];
 161:src/keys.c    **** }
 162:src/keys.c    **** #endif
 163:src/keys.c    **** /*
 164:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 165:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 166:src/keys.c    ****  */
 167:src/keys.c    **** int keycode_to_row_column(const int c)
 168:src/keys.c    **** {
 169:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 170:src/keys.c    **** }
 171:src/keys.c    **** 
 172:src/keys.c    **** /*
 173:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 174:src/keys.c    ****  * Used in PUTK and KTYPE.
 175:src/keys.c    ****  */
 176:src/keys.c    **** 
 177:src/keys.c    **** int row_column_to_keycode(const int c)
 178:src/keys.c    **** {
 179:src/keys.c    **** 	int row = c / 10 - 1;
 180:src/keys.c    **** 	int col = c % 10 - 1;
 181:src/keys.c    **** 
 182:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 183:src/keys.c    **** 		return -1;
 184:src/keys.c    **** 	return row * 6 + col;
 185:src/keys.c    **** }
 186:src/keys.c    **** 
 187:src/keys.c    **** /*
 188:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 189:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 190:src/keys.c    ****  */
 191:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 192:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 193:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 194:src/keys.c    **** 
 195:src/keys.c    **** #define NO_REG 0x7f
 196:src/keys.c    **** #define NO_SHORT 0x80
 197:src/keys.c    **** #ifdef DM42
 198:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 199:src/keys.c    **** {
 200:src/keys.c    ****   static const unsigned char map[] = {
ARM GAS  /tmp/ccQmaUTi.s 			page 5


 201:src/keys.c    ****     // K00 - K05
 202:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 203:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 204:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 205:src/keys.c    ****     // K10 - K15
 206:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 207:src/keys.c    ****     // K20 - K24
 208:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 209:src/keys.c    ****     // K30 - K34
 210:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 211:src/keys.c    ****     // K40 - K44
 212:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 213:src/keys.c    ****     // K50 - K54
 214:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 215:src/keys.c    ****     // K60 - K64
 216:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 217:src/keys.c    ****     // Shifts
 218:src/keys.c    ****     NO_REG
 219:src/keys.c    ****   };
 220:src/keys.c    **** 
 221:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 222:src/keys.c    **** }
 223:src/keys.c    **** #else
 224:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 225:src/keys.c    **** {
 226:src/keys.c    ****   static const unsigned char map[] = {
 227:src/keys.c    **** 		// K00 - K05
 228:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 229:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 230:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 231:src/keys.c    **** 		// K10 - K12
 232:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 233:src/keys.c    **** 		// K20 - K24
 234:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 235:src/keys.c    **** 		// K30 - K34
 236:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 237:src/keys.c    **** 		// K40 - K44
 238:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 239:src/keys.c    **** 		// K50 - K54
 240:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 241:src/keys.c    **** 		// K60 - K63
 242:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 243:src/keys.c    **** 		regY_idx, regZ_idx,
 244:src/keys.c    **** 		// Shifts, etc
 245:src/keys.c    **** 		NO_REG
 246:src/keys.c    **** 	};
 247:src/keys.c    **** 
 248:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 249:src/keys.c    **** }
 250:src/keys.c    **** #endif
 251:src/keys.c    **** /*
 252:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 253:src/keys.c    ****  */
 254:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 255:src/keys.c    **** {
 256:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 257:src/keys.c    ****   int i, col, max;
ARM GAS  /tmp/ccQmaUTi.s 			page 6


 258:src/keys.c    ****   const struct _map {
 259:src/keys.c    ****     unsigned char key, cat[3];
 260:src/keys.c    ****   } *cp;
 261:src/keys.c    **** 
 262:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 263:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 264:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 265:src/keys.c    **** 
 266:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 267:src/keys.c    ****     /*
 268:src/keys.c    ****      *  Normal processing - Not alpha mode
 269:src/keys.c    ****      */
 270:src/keys.c    ****     static const struct _map cmap[] = {
 271:src/keys.c    **** #ifdef DM42
 272:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 273:src/keys.c    **** #else
 274:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 275:src/keys.c    **** #endif
 276:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 277:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 278:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 279:src/keys.c    **** #else
 280:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 281:src/keys.c    **** #endif
 282:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 283:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 284:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 285:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 286:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 287:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 288:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 289:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 290:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 291:src/keys.c    **** #else
 292:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 293:src/keys.c    **** #endif
 294:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 295:src/keys.c    ****     };
 296:src/keys.c    **** 
 297:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 298:src/keys.c    ****       /*
 299:src/keys.c    ****        *  SHOW starts register browser
 300:src/keys.c    ****        */
 301:src/keys.c    ****       return CATALOGUE_REGISTERS;
 302:src/keys.c    ****     }
 303:src/keys.c    **** #if 0
 304:src/keys.c    ****     // conflicts with c# 002 and c# 003
 305:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 306:src/keys.c    ****       /*
 307:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 308:src/keys.c    ****        */
 309:src/keys.c    ****       shift = SHIFT_H;
 310:src/keys.c    ****     }
 311:src/keys.c    **** #endif
 312:src/keys.c    ****     if (shift != SHIFT_H) {
 313:src/keys.c    ****       /*
 314:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
ARM GAS  /tmp/ccQmaUTi.s 			page 7


 315:src/keys.c    ****        */
 316:src/keys.c    ****       return CATALOGUE_NONE;
 317:src/keys.c    ****     }
 318:src/keys.c    **** 
 319:src/keys.c    ****     /*
 320:src/keys.c    ****      *  Prepare search
 321:src/keys.c    ****      */
 322:src/keys.c    ****     cp = cmap;
 323:src/keys.c    **** #ifndef WINGUI
 324:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 325:src/keys.c    **** #else
 326:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 327:src/keys.c    **** #endif
 328:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 329:src/keys.c    ****   }
 330:src/keys.c    ****   else {
 331:src/keys.c    ****     /*
 332:src/keys.c    ****      *  All the alpha catalogues go here
 333:src/keys.c    ****      */
 334:src/keys.c    **** #ifdef DM42
 335:src/keys.c    ****     static const struct _map amap[] = {
 336:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 337:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 338:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 339:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 340:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 341:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 342:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 343:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** #else
 346:src/keys.c    ****     static const struct _map amap[] = {
 347:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 348:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 349:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 350:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 351:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 352:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 353:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 354:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 355:src/keys.c    ****     };
 356:src/keys.c    **** #endif
 357:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 358:src/keys.c    **** 
 359:src/keys.c    ****     /*
 360:src/keys.c    ****      *  Prepare search
 361:src/keys.c    ****      */
 362:src/keys.c    ****     cp = amap;
 363:src/keys.c    ****     col = smap[shift];
 364:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 365:src/keys.c    ****   }
 366:src/keys.c    **** 
 367:src/keys.c    ****   /*
 368:src/keys.c    ****    *  Search the key in one of the tables
 369:src/keys.c    ****    */
 370:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 371:src/keys.c    ****     if (cp->key == c) {
ARM GAS  /tmp/ccQmaUTi.s 			page 8


 372:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 373:src/keys.c    ****       break;
 374:src/keys.c    ****     }
 375:src/keys.c    ****   }
 376:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 377:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 378:src/keys.c    ****     cat = CATALOGUE_NONE;
 379:src/keys.c    ****   }
 380:src/keys.c    ****   return cat;
 381:src/keys.c    **** }
 382:src/keys.c    **** 
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 385:src/keys.c    **** {
 386:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 387:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 388:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 389:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 390:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 391:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 392:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 393:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 394:src/keys.c    **** 
 395:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 396:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 397:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 398:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 399:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 400:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 401:src/keys.c    **** 
 402:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 403:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 404:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 405:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 406:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 407:src/keys.c    **** 
 408:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 409:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 410:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 411:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 412:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 413:src/keys.c    **** 
 414:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 415:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 416:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 417:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 418:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 419:src/keys.c    **** 
 420:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 421:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 422:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 423:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 424:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 425:src/keys.c    **** 
 426:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 427:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 428:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
ARM GAS  /tmp/ccQmaUTi.s 			page 9


 429:src/keys.c    **** 		{ '?',  0000, 0041, 0000, 0000, 0000,  },  // K63
 430:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, 0000, 0000,  },  // K64
 431:src/keys.c    **** 
 432:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 433:src/keys.c    **** 	};
 434:src/keys.c    **** 	if (State2.alphashift) {
 435:src/keys.c    **** 		if (shift == SHIFT_N)
 436:src/keys.c    **** 			shift = SHIFT_LC_N;
 437:src/keys.c    **** 		else if (shift == SHIFT_G)
 438:src/keys.c    **** 			shift = SHIFT_LC_G;
 439:src/keys.c    **** 	}
 440:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 441:src/keys.c    **** }
 442:src/keys.c    **** #else
 443:src/keys.c    **** /*
 444:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 445:src/keys.c    ****  * the two lower case planes.
 446:src/keys.c    ****  */
 447:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 448:src/keys.c    **** {
 449:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 450:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 451:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 452:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 453:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 454:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 455:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 456:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 457:src/keys.c    **** 
 458:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 459:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 460:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 461:src/keys.c    **** 
 462:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 463:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 464:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 465:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 466:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 467:src/keys.c    **** 
 468:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 469:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 470:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 471:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 472:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 473:src/keys.c    **** 
 474:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 475:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 476:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 477:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 478:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 479:src/keys.c    **** 
 480:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 481:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 482:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 483:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 484:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 485:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 10


 486:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 487:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 488:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 489:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 490:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 491:src/keys.c    **** 	};
 492:src/keys.c    **** 	if (State2.alphashift) {
 493:src/keys.c    **** 		if (shift == SHIFT_N)
 494:src/keys.c    **** 			shift = SHIFT_LC_N;
 495:src/keys.c    **** 		else if (shift == SHIFT_G)
 496:src/keys.c    **** 			shift = SHIFT_LC_G;
 497:src/keys.c    **** 	}
 498:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 499:src/keys.c    **** }
 500:src/keys.c    **** #endif
 501:src/keys.c    **** static void init_arg(const enum rarg base) {
 502:src/keys.c    **** 	if (is_bad_cmdline())
 503:src/keys.c    **** 		return;
 504:src/keys.c    **** 	CmdBase = base;
 505:src/keys.c    **** 	State2.ind = 0;
 506:src/keys.c    **** 	State2.digval = 0;
 507:src/keys.c    **** 	State2.numdigit = 0;
 508:src/keys.c    **** 	State2.rarg = 1;
 509:src/keys.c    **** 	State2.dot = 0;
 510:src/keys.c    **** 	State2.local = 0;
 511:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 512:src/keys.c    **** }
 513:src/keys.c    **** 
 514:src/keys.c    **** static void init_cat(enum catalogues cat) {
 515:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 516:src/keys.c    **** 		// Save last catalogue for a later restore
 517:src/keys.c    **** 		State.last_cat = State2.catalogue;
 518:src/keys.c    **** 		CmdLineLength = 0;
 519:src/keys.c    **** 	}
 520:src/keys.c    **** 	process_cmdline();
 521:src/keys.c    **** 
 522:src/keys.c    **** 	State2.labellist = 0;
 523:src/keys.c    **** 	State2.registerlist = 0;
 524:src/keys.c    **** 	State2.status = 0;
 525:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 526:src/keys.c    **** 
 527:src/keys.c    **** 	switch (cat) {
 528:src/keys.c    **** 	case CATALOGUE_LABELS:
 529:src/keys.c    **** 		// Label browser
 530:src/keys.c    **** 		State2.labellist = 1;
 531:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 532:src/keys.c    **** 		break;
 533:src/keys.c    **** 	
 534:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 535:src/keys.c    **** 		// Register browser
 536:src/keys.c    **** 		State2.registerlist = 1;
 537:src/keys.c    **** 		State2.digval = regX_idx;
 538:src/keys.c    **** 		State2.digval2 = 0;
 539:src/keys.c    **** 		break;
 540:src/keys.c    **** 
 541:src/keys.c    **** 	case CATALOGUE_STATUS:
 542:src/keys.c    **** 		// Flag browser
ARM GAS  /tmp/ccQmaUTi.s 			page 11


 543:src/keys.c    **** 		State2.status = 1;
 544:src/keys.c    **** 		break;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	default:
 547:src/keys.c    **** 		// Normal catalogue
 548:src/keys.c    **** 		State2.catalogue = cat;
 549:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 550:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 551:src/keys.c    **** 			// Different catalogue, reset position
 552:src/keys.c    **** 			State.catpos = 0;
 553:src/keys.c    **** 		}
 554:src/keys.c    **** 	}
 555:src/keys.c    **** 	reset_shift();
 556:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 557:src/keys.c    **** 	changed_catalog_state();
 558:src/keys.c    **** #endif
 559:src/keys.c    **** }
 560:src/keys.c    **** 
 561:src/keys.c    **** /*
 562:src/keys.c    ****  *  Reset the internal state to a sane default
 563:src/keys.c    ****  */
 564:src/keys.c    **** void init_state(void) {
 565:src/keys.c    **** #ifndef REALBUILD
 566:src/keys.c    **** 	unsigned int a = State2.flags;
 567:src/keys.c    **** 	unsigned int b = State2.trace;
 568:src/keys.c    **** #else
 569:src/keys.c    **** 	FLAG t = TestFlag;
 570:src/keys.c    **** #endif
 571:src/keys.c    **** 	int v = Voltage;
 572:src/keys.c    **** 	int k = LastKey;
 573:src/keys.c    **** 
 574:src/keys.c    **** 	CmdBase = 0;
 575:src/keys.c    **** 	// Removed: will clear any locals on power off
 576:src/keys.c    **** 	// clrretstk(0);
 577:src/keys.c    **** 
 578:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 579:src/keys.c    **** 	State2.test = TST_NONE;
 580:src/keys.c    **** 	State2.runmode = 1;
 581:src/keys.c    **** 	update_program_bounds(1);
 582:src/keys.c    **** 	set_lift();
 583:src/keys.c    **** 
 584:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 585:src/keys.c    **** 	// but must not be cleared.
 586:src/keys.c    **** 	Voltage = v;
 587:src/keys.c    **** 	LastKey = k;
 588:src/keys.c    **** #ifndef REALBUILD
 589:src/keys.c    **** 	State2.trace = b;
 590:src/keys.c    **** 	State2.flags = a;
 591:src/keys.c    **** #else
 592:src/keys.c    **** 	TestFlag = t;
 593:src/keys.c    **** #endif
 594:src/keys.c    **** 	ShowRegister = regX_idx;
 595:src/keys.c    **** }
 596:src/keys.c    **** 
 597:src/keys.c    **** void soft_init_state(void) {
 598:src/keys.c    **** 	int soft;
 599:src/keys.c    **** 	unsigned int runmode;
ARM GAS  /tmp/ccQmaUTi.s 			page 12


 600:src/keys.c    **** 	unsigned int alphas;
 601:src/keys.c    **** 
 602:src/keys.c    **** 	if (CmdLineLength) {
 603:src/keys.c    **** 		CmdLineLength = 0;
 604:src/keys.c    **** 		CmdLineEex = 0;
 605:src/keys.c    **** 		CmdLineDot = 0;
 606:src/keys.c    **** 		return;
 607:src/keys.c    **** 	}
 608:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 609:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 610:src/keys.c    **** 	runmode = State2.runmode;
 611:src/keys.c    **** 	alphas = State2.alphas;
 612:src/keys.c    **** 	init_state();
 613:src/keys.c    **** 	if (soft) {
 614:src/keys.c    **** 		State2.runmode = runmode;
 615:src/keys.c    **** 		State2.alphas = alphas;
 616:src/keys.c    **** 	}
 617:src/keys.c    **** }
 618:src/keys.c    **** 
 619:src/keys.c    **** static int check_confirm(int op) {
 620:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 621:src/keys.c    **** 		const int nilop = argKIND(op);
 622:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 623:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 624:src/keys.c    **** 			return STATE_UNFINISHED;
 625:src/keys.c    **** 		}
 626:src/keys.c    **** #ifndef DM42		
 627:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 628:src/keys.c    **** #endif
 629:src/keys.c    **** #ifdef DM42
 630:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 631:src/keys.c    **** #endif
 632:src/keys.c    **** #ifdef INFRARED
 633:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 634:src/keys.c    **** #endif
 635:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 636:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 637:src/keys.c    **** #endif
 638:src/keys.c    **** 		) {
 639:src/keys.c    **** 			// These commands are not programmable
 640:src/keys.c    **** 			NonProgrammable = 1;
 641:src/keys.c    **** 		}
 642:src/keys.c    **** 	}
 643:src/keys.c    **** 	return op;
 644:src/keys.c    **** }
 645:src/keys.c    **** 
 646:src/keys.c    **** static void set_smode(const enum single_disp d) {
 647:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 648:src/keys.c    **** }
 649:src/keys.c    **** 
 650:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 651:src/keys.c    **** 	const int code = 100 + n;
 652:src/keys.c    **** 	unsigned int pc = state_pc();
 653:src/keys.c    **** 
 654:src/keys.c    **** 	if (State2.runmode) {
 655:src/keys.c    **** 		if (isXROM(pc))
 656:src/keys.c    **** 			pc = 1;
ARM GAS  /tmp/ccQmaUTi.s 			page 13


 657:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 658:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 659:src/keys.c    **** 	}
 660:src/keys.c    **** 	return dflt;
 661:src/keys.c    **** }
 662:src/keys.c    **** 
 663:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 664:src/keys.c    ****  * as digits.
 665:src/keys.c    ****  */
 666:src/keys.c    **** static int intltr(int d) {
 667:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 668:src/keys.c    **** }
 669:src/keys.c    **** 
 670:src/keys.c    **** /*
 671:src/keys.c    ****  *  Process a key code in the unshifted mode.
 672:src/keys.c    ****  */
 673:src/keys.c    **** static int process_normal(const keycode c)
 674:src/keys.c    **** {
 675:src/keys.c    **** 	static const unsigned short int op_map[] = {
 676:src/keys.c    **** 		// Row 1
 677:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 678:src/keys.c    **** 		OP_MON  | OP_RECIP,
 679:src/keys.c    **** 		OP_DYA  | OP_POW,
 680:src/keys.c    **** 		OP_MON  | OP_SQRT,
 681:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 682:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 683:src/keys.c    **** 		// Row 2
 684:src/keys.c    **** 		RARG_STO,
 685:src/keys.c    **** 		RARG_RCL,
 686:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 687:src/keys.c    **** 		// Row 3
 688:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 689:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 690:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 691:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 692:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 693:src/keys.c    **** 		// Row 4
 694:src/keys.c    **** 		RARG_XEQ,
 695:src/keys.c    **** 		OP_SPEC | OP_7,
 696:src/keys.c    **** 		OP_SPEC | OP_8,
 697:src/keys.c    **** 		OP_SPEC | OP_9,
 698:src/keys.c    **** 		OP_DYA  | OP_DIV,
 699:src/keys.c    **** 		// Row 5
 700:src/keys.c    **** 		STATE_BST,
 701:src/keys.c    **** 		OP_SPEC | OP_4,
 702:src/keys.c    **** 		OP_SPEC | OP_5,
 703:src/keys.c    **** 		OP_SPEC | OP_6,
 704:src/keys.c    **** 		OP_DYA  | OP_MUL,
 705:src/keys.c    **** 		// Row 6
 706:src/keys.c    **** 		STATE_SST,		// SST
 707:src/keys.c    **** 		OP_SPEC | OP_1,
 708:src/keys.c    **** 		OP_SPEC | OP_2,
 709:src/keys.c    **** 		OP_SPEC | OP_3,
 710:src/keys.c    **** 		OP_DYA  | OP_SUB,
 711:src/keys.c    **** 		// Row 7
 712:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 713:src/keys.c    **** 		OP_SPEC | OP_0,
ARM GAS  /tmp/ccQmaUTi.s 			page 14


 714:src/keys.c    **** 		OP_SPEC | OP_DOT,
 715:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 716:src/keys.c    **** 		OP_DYA  | OP_ADD,
 717:src/keys.c    **** #ifdef DM42
 718:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 719:src/keys.c    **** #endif
 720:src/keys.c    **** 	};
 721:src/keys.c    **** 
 722:src/keys.c    **** 	int lc = keycode_to_linear(c);
 723:src/keys.c    **** 	int op = op_map[lc];
 724:src/keys.c    **** 	
 725:src/keys.c    **** 	// The switch handles all the special cases
 726:src/keys.c    **** #ifdef DM42
 727:src/keys.c    **** 	int op_int;
 728:src/keys.c    **** 	if (UState.intm) {
 729:src/keys.c    **** 	  switch (c) {
 730:src/keys.c    **** 	  case K00:
 731:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 732:src/keys.c    **** 	    if (intltr(10)) {
 733:src/keys.c    **** 	      return op;
 734:src/keys.c    **** 	    }
 735:src/keys.c    **** 	    else {
 736:src/keys.c    **** 	      return check_f_key(0, op);
 737:src/keys.c    **** 	    }
 738:src/keys.c    **** 	  case K01:
 739:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 740:src/keys.c    **** 	    if (intltr(11)) {
 741:src/keys.c    **** 	      return op;
 742:src/keys.c    **** 	    }
 743:src/keys.c    **** 	    else {
 744:src/keys.c    **** 	      return check_f_key(1, op);
 745:src/keys.c    **** 	    }
 746:src/keys.c    **** 	  case K03:
 747:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 748:src/keys.c    **** 	    if (intltr(12)) {
 749:src/keys.c    **** 	      return op_int;
 750:src/keys.c    **** 	    }
 751:src/keys.c    **** 	    else {
 752:src/keys.c    **** 	      return check_f_key(2, op);
 753:src/keys.c    **** 	    }
 754:src/keys.c    **** 	  case K30:
 755:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 756:src/keys.c    **** 	    if (intltr(15)) {
 757:src/keys.c    **** 	      return op_int;
 758:src/keys.c    **** 	    }
 759:src/keys.c    **** 	  default:;
 760:src/keys.c    **** 	  }
 761:src/keys.c    **** 	}
 762:src/keys.c    **** #endif  
 763:src/keys.c    **** 
 764:src/keys.c    **** 	switch (c) {
 765:src/keys.c    **** #ifdef DM42
 766:src/keys.c    **** 	case K00:
 767:src/keys.c    **** 		return check_f_key(0, op);
 768:src/keys.c    **** 	case K01:
 769:src/keys.c    **** 		return check_f_key(1, op);
 770:src/keys.c    **** 	case K03:
ARM GAS  /tmp/ccQmaUTi.s 			page 15


 771:src/keys.c    **** 		return check_f_key(2, op);
 772:src/keys.c    **** #else
 773:src/keys.c    **** 	case K00:
 774:src/keys.c    **** 	case K01:
 775:src/keys.c    **** 		if (UState.intm)
 776:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 777:src/keys.c    **** 	case K02:
 778:src/keys.c    **** 	case K03:
 779:src/keys.c    **** 		if (intltr(lc + 10)) {
 780:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 781:src/keys.c    **** 			return op;
 782:src/keys.c    **** 		}
 783:src/keys.c    **** 		return check_f_key(lc, op);
 784:src/keys.c    **** #endif		
 785:src/keys.c    **** 	case K_ARROW:
 786:src/keys.c    **** #ifndef DM42
 787:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 788:src/keys.c    **** 		if (intltr(14))
 789:src/keys.c    **** 			return op;
 790:src/keys.c    **** #else
 791:src/keys.c    **** 		if (UState.intm)
 792:src/keys.c    **** 			return op;
 793:src/keys.c    **** #endif
 794:src/keys.c    **** #endif		
 795:src/keys.c    **** 		if (is_bad_cmdline())
 796:src/keys.c    **** 			return STATE_UNFINISHED;
 797:src/keys.c    **** 		process_cmdline_set_lift();
 798:src/keys.c    **** 		State2.arrow = 1;
 799:src/keys.c    **** #ifdef DM42
 800:src/keys.c    **** 		set_menu (9);
 801:src/keys.c    **** 		display_current_menu ();
 802:src/keys.c    **** 		lcd_refresh ();
 803:src/keys.c    **** #else
 804:src/keys.c    **** 		set_shift(SHIFT_G);
 805:src/keys.c    **** #endif
 806:src/keys.c    **** 		break;
 807:src/keys.c    **** 
 808:src/keys.c    **** 	case K_CMPLX:
 809:src/keys.c    **** #ifdef DM42
 810:src/keys.c    **** 	  if (UState.intm)
 811:src/keys.c    **** 	    break; // return nothing
 812:src/keys.c    **** 	  State2.cmplx = 1;
 813:src/keys.c    **** #else
 814:src/keys.c    **** 	  if (UState.intm)
 815:src/keys.c    **** 	    return op;
 816:src/keys.c    **** 	  State2.cmplx = 1;
 817:src/keys.c    **** #endif
 818:src/keys.c    **** 	  break;
 819:src/keys.c    **** 
 820:src/keys.c    **** 	case K24:				// <-
 821:src/keys.c    **** 		if (State2.disp_temp)
 822:src/keys.c    **** 			return STATE_UNFINISHED;
 823:src/keys.c    **** 		if (State2.runmode)
 824:src/keys.c    **** 			return op;
 825:src/keys.c    **** 		return STATE_BACKSPACE;
 826:src/keys.c    **** 
 827:src/keys.c    **** 	case K10:				// STO
ARM GAS  /tmp/ccQmaUTi.s 			page 16


 828:src/keys.c    **** 	case K11:				// RCL
 829:src/keys.c    **** 	case K30:				// XEQ
 830:src/keys.c    **** 		init_arg((enum rarg)op);
 831:src/keys.c    **** 		break;
 832:src/keys.c    **** 
 833:src/keys.c    **** 	default:
 834:src/keys.c    **** 		return op;			// Keys handled by table
 835:src/keys.c    **** 	}
 836:src/keys.c    **** 	return STATE_UNFINISHED;
 837:src/keys.c    **** }
 838:src/keys.c    **** 
 839:src/keys.c    **** 
 840:src/keys.c    **** /*
 841:src/keys.c    ****  *  Process a key code after f or g shift
 842:src/keys.c    ****  */
 843:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 844:src/keys.c    **** 
 845:src/keys.c    **** #define NO_INT 0xf000
 846:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 847:src/keys.c    **** 		// Row 1
 848:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 849:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 850:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 851:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 852:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 853:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 854:src/keys.c    **** 		// Row 2
 855:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 856:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 857:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 858:src/keys.c    **** 		// Row 3
 859:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 860:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 861:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 862:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 863:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 864:src/keys.c    **** 		// Row 4
 865:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 866:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 867:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 868:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 869:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 870:src/keys.c    **** 		// Row 5
 871:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 872:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 873:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 874:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 875:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 876:src/keys.c    **** 		// Row 6
 877:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 878:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 879:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 880:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 881:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 882:src/keys.c    **** 		// Row 7
 883:src/keys.c    **** #ifdef INFRARED
 884:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
ARM GAS  /tmp/ccQmaUTi.s 			page 17


 885:src/keys.c    **** #else
 886:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 887:src/keys.c    **** #endif
 888:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 889:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 890:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 891:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 892:src/keys.c    **** #ifdef DM42
 893:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 894:src/keys.c    **** #endif
 895:src/keys.c    **** 	};
 896:src/keys.c    **** 
 897:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 898:src/keys.c    **** 		STATE_UNFINISHED,
 899:src/keys.c    **** 		STATE_UNFINISHED,
 900:src/keys.c    **** 		OP_DYA  | OP_POW,
 901:src/keys.c    **** 		OP_MON  | OP_SQRT
 902:src/keys.c    **** 	};
 903:src/keys.c    **** 
 904:src/keys.c    **** 	enum shifts shift = reset_shift();
 905:src/keys.c    **** 	int lc = keycode_to_linear(c);
 906:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 907:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 908:src/keys.c    **** 	if (no_int)
 909:src/keys.c    **** 		op &= ~NO_INT;
 910:src/keys.c    **** 
 911:src/keys.c    **** 	switch (c) {
 912:src/keys.c    **** 	case K00:
 913:src/keys.c    **** 	  if (! UState.intm) {
 914:src/keys.c    **** 	    State2.hyp = 1;
 915:src/keys.c    **** 	    State2.dot = op;
 916:src/keys.c    **** 	    // State2.cmplx = 0;
 917:src/keys.c    **** 	    return STATE_UNFINISHED;
 918:src/keys.c    **** 	  }
 919:src/keys.c    **** 	  // fall through
 920:src/keys.c    **** 	case K01:
 921:src/keys.c    **** #ifdef DM42
 922:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 923:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 924:src/keys.c    **** 	  }
 925:src/keys.c    **** 	  break;
 926:src/keys.c    **** #endif
 927:src/keys.c    **** #ifndef DM42
 928:src/keys.c    **** 	case K02:
 929:src/keys.c    **** #endif
 930:src/keys.c    **** 	case K03:
 931:src/keys.c    **** #ifdef DM42
 932:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 933:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 934:src/keys.c    **** 		}
 935:src/keys.c    **** 		break;
 936:src/keys.c    **** #else
 937:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 938:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 939:src/keys.c    **** 		}
 940:src/keys.c    **** 		break;
 941:src/keys.c    **** #endif
ARM GAS  /tmp/ccQmaUTi.s 			page 18


 942:src/keys.c    **** 	case K20:				// Alpha
 943:src/keys.c    **** 		if (shift == SHIFT_F) {
 944:src/keys.c    **** 			if (is_bad_cmdline())
 945:src/keys.c    **** 				return STATE_UNFINISHED;
 946:src/keys.c    **** 			process_cmdline_set_lift();
 947:src/keys.c    **** 			State2.alphas = 1;
 948:src/keys.c    **** 		}
 949:src/keys.c    **** 		break;
 950:src/keys.c    **** #ifdef DM42
 951:src/keys.c    **** 	case K31:
 952:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 953:src/keys.c    **** 	    return OP_SPEC | OP_D;
 954:src/keys.c    **** 	  }
 955:src/keys.c    **** 	  break;
 956:src/keys.c    **** 	case K30:
 957:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 958:src/keys.c    **** 	    return OP_SPEC | OP_E;
 959:src/keys.c    **** 	  }
 960:src/keys.c    **** 	  break;
 961:src/keys.c    **** #endif
 962:src/keys.c    **** 	case K51:
 963:src/keys.c    **** 		if (is_bad_cmdline())
 964:src/keys.c    **** 			return STATE_UNFINISHED;
 965:src/keys.c    **** 		process_cmdline_set_lift();
 966:src/keys.c    **** 		State2.test = op;
 967:src/keys.c    **** 		return STATE_UNFINISHED;
 968:src/keys.c    **** 
 969:src/keys.c    **** 	case K50:
 970:src/keys.c    **** #ifndef REALBUILD
 971:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 972:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 973:src/keys.c    **** 			return STATE_UNFINISHED;
 974:src/keys.c    **** 		}
 975:src/keys.c    **** #endif
 976:src/keys.c    **** 	case K52:
 977:src/keys.c    **** 	case K53:
 978:src/keys.c    **** 	case K63:
 979:src/keys.c    **** 	case K64:
 980:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 981:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 982:src/keys.c    **** 				init_arg((enum rarg) op);
 983:src/keys.c    **** 			}
 984:src/keys.c    **** 			return STATE_UNFINISHED;
 985:src/keys.c    **** 		}
 986:src/keys.c    **** 		break;
 987:src/keys.c    **** 
 988:src/keys.c    **** 	default:
 989:src/keys.c    **** 		break;
 990:src/keys.c    **** 	}
 991:src/keys.c    **** 	if (no_int && UState.intm)
 992:src/keys.c    **** 		return STATE_UNFINISHED;
 993:src/keys.c    **** 
 994:src/keys.c    **** 	return check_confirm(op);
 995:src/keys.c    **** #undef NO_INT
 996:src/keys.c    **** }
 997:src/keys.c    **** 
 998:src/keys.c    **** /*
ARM GAS  /tmp/ccQmaUTi.s 			page 19


 999:src/keys.c    ****  *  Process a key code after h shift
1000:src/keys.c    ****  */
1001:src/keys.c    **** static int process_h_shifted(const keycode c) {
1002:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1003:src/keys.c    **** #define NO_INT   0x4000
1004:src/keys.c    **** 	static const unsigned short int op_map[] = {
1005:src/keys.c    **** 		// Row 1
1006:src/keys.c    **** 		_RARG   | RARG_STD,
1007:src/keys.c    **** 		_RARG   | RARG_FIX,
1008:src/keys.c    **** 		_RARG   | RARG_SCI,
1009:src/keys.c    **** 		_RARG   | RARG_ENG,
1010:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1011:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1012:src/keys.c    **** 		// Row 2
1013:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1014:src/keys.c    **** 		_RARG   | RARG_VIEW,
1015:src/keys.c    **** 		OP_NIL  | OP_RUP,
1016:src/keys.c    **** 		// Row 3
1017:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1018:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1019:src/keys.c    **** 		OP_MON  | OP_NOT,
1020:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1021:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1022:src/keys.c    **** 		// Row 4
1023:src/keys.c    **** 		_RARG   | RARG_GTO,
1024:src/keys.c    **** 		OP_DYA  | OP_LAND,
1025:src/keys.c    **** 		OP_DYA  | OP_LOR,
1026:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1027:src/keys.c    **** 		OP_DYA  | OP_MOD,
1028:src/keys.c    **** 		// Row 5
1029:src/keys.c    **** 		OP_MON  | OP_FACT,
1030:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1031:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1032:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1033:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1034:src/keys.c    **** 		// Row 6
1035:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1036:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1037:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1038:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1039:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1040:src/keys.c    **** 		// Row 7
1041:src/keys.c    **** 		OP_NIL | OP_OFF,
1042:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1043:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1044:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1045:src/keys.c    **** #else
1046:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1047:src/keys.c    **** #endif
1048:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1049:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1050:src/keys.c    **** #ifdef DM42
1051:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1052:src/keys.c    **** #endif
1053:src/keys.c    **** 	};
1054:src/keys.c    **** 
1055:src/keys.c    **** 	int lc = keycode_to_linear(c);
ARM GAS  /tmp/ccQmaUTi.s 			page 20


1056:src/keys.c    **** 	int op = op_map[lc];
1057:src/keys.c    **** 	reset_shift();
1058:src/keys.c    **** 
1059:src/keys.c    **** 	// The switch handles all the special cases
1060:src/keys.c    **** 	switch (c) {
1061:src/keys.c    **** 	case K62:
1062:src/keys.c    **** 		if (UState.intm)
1063:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1064:src/keys.c    **** 		else
1065:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1066:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1067:src/keys.c    **** #else
1068:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1069:src/keys.c    **** #endif
1070:src/keys.c    **** 		break;
1071:src/keys.c    **** 
1072:src/keys.c    **** 	case K63:					// Program<->Run mode
1073:src/keys.c    **** 		if (is_bad_cmdline())
1074:src/keys.c    **** 			return STATE_UNFINISHED;
1075:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1076:src/keys.c    **** 		process_cmdline_set_lift();
1077:src/keys.c    **** 		update_program_bounds(1);
1078:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1079:src/keys.c    **** 			set_pc(0);
1080:src/keys.c    **** 		break;
1081:src/keys.c    **** 
1082:src/keys.c    **** 	default:
1083:src/keys.c    **** 		break;
1084:src/keys.c    **** 	}
1085:src/keys.c    **** 
1086:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1087:src/keys.c    **** 		if (op & _RARG) {
1088:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1089:src/keys.c    **** 			op = STATE_UNFINISHED;
1090:src/keys.c    **** 		}
1091:src/keys.c    **** 	}
1092:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1093:src/keys.c    **** #undef _RARG
1094:src/keys.c    **** #undef NO_INT
1095:src/keys.c    **** }
1096:src/keys.c    **** 
1097:src/keys.c    **** /*
1098:src/keys.c    ****  *  Process a key code after CPX
1099:src/keys.c    ****  */
1100:src/keys.c    **** static int process_cmplx(const keycode c) {
1101:src/keys.c    **** #define _RARG   0xFF00
1102:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1103:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1104:src/keys.c    **** 
1105:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1106:src/keys.c    **** 		// Row 1
1107:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1108:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1109:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1110:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1111:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1112:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
ARM GAS  /tmp/ccQmaUTi.s 			page 21


1113:src/keys.c    **** 		// Row 2
1114:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1115:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1116:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1117:src/keys.c    **** 		// Row 3
1118:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1119:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1120:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1121:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1122:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1123:src/keys.c    **** 		// Row 4
1124:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1125:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1126:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1127:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1128:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1129:src/keys.c    **** 		// Row 5
1130:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1131:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1132:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1133:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1135:src/keys.c    **** 		// Row 6
1136:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1138:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1139:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1140:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		// Row 7
1142:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1143:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1144:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1145:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1146:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1147:src/keys.c    **** #else
1148:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** #endif
1150:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1151:src/keys.c    **** #ifdef DM42
1152:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1153:src/keys.c    **** #endif
1154:src/keys.c    **** 	};
1155:src/keys.c    **** 
1156:src/keys.c    **** 	enum shifts shift = reset_shift();
1157:src/keys.c    **** 	int lc = keycode_to_linear(c);
1158:src/keys.c    **** 	int op = op_map[lc][shift];
1159:src/keys.c    **** 	State2.cmplx = 0;
1160:src/keys.c    **** 
1161:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1162:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1163:src/keys.c    **** 		return STATE_UNFINISHED;
1164:src/keys.c    **** 	}
1165:src/keys.c    **** 	if (c == K00) {
1166:src/keys.c    **** 		// HYP
1167:src/keys.c    **** 		process_cmdline_set_lift();
1168:src/keys.c    **** 		State2.hyp = 1;
1169:src/keys.c    **** 		State2.dot = op;
ARM GAS  /tmp/ccQmaUTi.s 			page 22


1170:src/keys.c    **** 		State2.cmplx = 1;
1171:src/keys.c    **** 		return STATE_UNFINISHED;
1172:src/keys.c    **** 	}
1173:src/keys.c    **** 
1174:src/keys.c    **** 	if (shift != SHIFT_N) {
1175:src/keys.c    **** 		switch (c) {
1176:src/keys.c    **** 		case K_CMPLX:
1177:src/keys.c    **** 			set_shift(shift);
1178:src/keys.c    **** 			break;
1179:src/keys.c    **** 
1180:src/keys.c    **** 		case K51:
1181:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1182:src/keys.c    **** 				if (is_bad_cmdline())
1183:src/keys.c    **** 					return STATE_UNFINISHED;
1184:src/keys.c    **** 				process_cmdline_set_lift();
1185:src/keys.c    **** 				State2.cmplx = 1;
1186:src/keys.c    **** 				State2.test = op;
1187:src/keys.c    **** 			}
1188:src/keys.c    **** 			return STATE_UNFINISHED;
1189:src/keys.c    **** 
1190:src/keys.c    **** 		case K60:
1191:src/keys.c    **** 			init_state();
1192:src/keys.c    **** 			break;
1193:src/keys.c    **** 
1194:src/keys.c    **** 		default:
1195:src/keys.c    **** 			break;
1196:src/keys.c    **** 		}
1197:src/keys.c    **** 	}
1198:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1199:src/keys.c    **** 	return check_confirm(op);
1200:src/keys.c    **** #else
1201:src/keys.c    **** 	return op;
1202:src/keys.c    **** #endif
1203:src/keys.c    **** 
1204:src/keys.c    **** #undef _RARG
1205:src/keys.c    **** #undef CSWAPXZ
1206:src/keys.c    **** #undef CNUM
1207:src/keys.c    **** }
1208:src/keys.c    **** 
1209:src/keys.c    **** 
1210:src/keys.c    **** 
1211:src/keys.c    **** /*
1212:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1213:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1214:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1215:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1216:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1217:src/keys.c    ****  * the ON key are dealt with by our caller.
1218:src/keys.c    ****  */
1219:src/keys.c    **** static int process_hyp(const keycode c) {
1220:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1221:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1222:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1223:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1224:src/keys.c    **** 	};
1225:src/keys.c    **** 	int cmplx = State2.cmplx;
1226:src/keys.c    **** 	int f = State2.dot;
ARM GAS  /tmp/ccQmaUTi.s 			page 23


1227:src/keys.c    **** 
1228:src/keys.c    **** 	State2.hyp = 0;
1229:src/keys.c    **** 	State2.cmplx = 0;
1230:src/keys.c    **** 	State2.dot = 0;
1231:src/keys.c    **** #ifdef DM42
1232:src/keys.c    **** 	reset_shift();
1233:src/keys.c    **** #endif
1234:src/keys.c    **** 	switch ((int)c) {
1235:src/keys.c    **** 
1236:src/keys.c    **** 	case K01:
1237:src/keys.c    **** 	case K02:
1238:src/keys.c    **** 	case K03:
1239:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1240:src/keys.c    **** 
1241:src/keys.c    **** 	case K_CMPLX:
1242:src/keys.c    **** 		cmplx = ! cmplx;
1243:src/keys.c    **** 		goto stay;
1244:src/keys.c    **** 
1245:src/keys.c    **** 	case K_F: 
1246:src/keys.c    **** 	case K_G:
1247:src/keys.c    **** 		f = (c == K_F);
1248:src/keys.c    **** 		// fall trough
1249:src/keys.c    **** 	stay:
1250:src/keys.c    **** 		// process_cmdline_set_lift();
1251:src/keys.c    **** 		State2.hyp = 1;
1252:src/keys.c    **** 		State2.cmplx = cmplx;
1253:src/keys.c    **** 		State2.dot = f;
1254:src/keys.c    **** 		break;
1255:src/keys.c    **** 
1256:src/keys.c    **** 	default:
1257:src/keys.c    **** 		break;
1258:src/keys.c    **** 	}
1259:src/keys.c    **** 	return STATE_UNFINISHED;
1260:src/keys.c    **** }
1261:src/keys.c    **** 
1262:src/keys.c    **** 
1263:src/keys.c    **** /*
1264:src/keys.c    ****  *  Process a key code after ->
1265:src/keys.c    ****  */
1266:src/keys.c    **** static int process_arrow(const keycode c) {
1267:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1268:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1269:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1270:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1271:src/keys.c    **** 	};
1272:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1273:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1274:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1275:src/keys.c    **** 	};
1276:src/keys.c    **** 	const int shift = reset_shift();
1277:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1278:src/keys.c    **** 
1279:src/keys.c    **** 	State2.arrow = 0;
1280:src/keys.c    **** 	set_last_menu ();
1281:src/keys.c    **** 	display_current_menu ();
1282:src/keys.c    **** 
1283:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
ARM GAS  /tmp/ccQmaUTi.s 			page 24


1284:src/keys.c    **** 	
1285:src/keys.c    **** 	if (c >= K10 && c <= K12)
1286:src/keys.c    **** 		return op_map[c - K10][f];
1287:src/keys.c    **** 
1288:src/keys.c    **** 	if (c == K22 || c == K23)
1289:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1290:src/keys.c    **** 
1291:src/keys.c    **** 	return STATE_UNFINISHED;
1292:src/keys.c    **** }
1293:src/keys.c    **** 
1294:src/keys.c    **** 
1295:src/keys.c    **** /* Process a GTO . sequence
1296:src/keys.c    ****  */
1297:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1297 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1298 2 view .LVU1
1299:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1299 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1297:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1297 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1298 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1299 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1298 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1299 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1298 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1297:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1297 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1300:src/keys.c    **** 
1301:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1301 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1298:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1298 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
ARM GAS  /tmp/ccQmaUTi.s 			page 25


1299:src/keys.c    **** 
  63              		.loc 1 1299 2 is_stmt 1 view .LVU12
  64              		.loc 1 1301 2 view .LVU13
  65              		.loc 1 1301 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1301 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1301 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1302:src/keys.c    **** 		return val;
1303:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1303 2 is_stmt 1 view .LVU17
  77              		.loc 1 1303 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1303 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1303 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1303 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1303 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1304:src/keys.c    **** 		return val;
1305:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1305 2 is_stmt 1 view .LVU23
  91              		.loc 1 1305 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1306:src/keys.c    **** 	return -1;
  94              		.loc 1 1306 2 is_stmt 1 view .LVU25
1303:src/keys.c    **** 		return val;
  95              		.loc 1 1303 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1306 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1307:src/keys.c    **** }
 102              		.loc 1 1307 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1307 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
ARM GAS  /tmp/ccQmaUTi.s 			page 26


 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 650:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 650 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 651 2 view .LVU31
 650:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 650 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 654:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 654 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 652:src/keys.c    **** 
 143              		.loc 1 652 2 is_stmt 1 view .LVU34
 654:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 654 2 view .LVU35
 654:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 654 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 650:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 650 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 654:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 654 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 652:src/keys.c    **** 
 151              		.loc 1 652 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 652:src/keys.c    **** 
 154              		.loc 1 652 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 652:src/keys.c    **** 
 157              		.loc 1 652 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
ARM GAS  /tmp/ccQmaUTi.s 			page 27


 159              	.LVL10:
 655:src/keys.c    **** 			pc = 1;
 160              		.loc 1 655 3 is_stmt 1 view .LVU42
 655:src/keys.c    **** 			pc = 1;
 161              		.loc 1 655 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 656:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 656 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 657 3 is_stmt 1 view .LVU45
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 651 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 657 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 657 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 657 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 657 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 660:src/keys.c    **** }
 186              		.loc 1 660 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 661:src/keys.c    **** 
 188              		.loc 1 661 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 658:src/keys.c    **** 	}
 192              		.loc 1 658 4 is_stmt 1 view .LVU53
 658:src/keys.c    **** 	}
 193              		.loc 1 658 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 661:src/keys.c    **** 
 195              		.loc 1 661 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 661:src/keys.c    **** 
 199              		.loc 1 661 1 view .LVU56
 200 0036 00BF     		.align	2
ARM GAS  /tmp/ccQmaUTi.s 			page 28


 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1308:src/keys.c    **** 
1309:src/keys.c    **** static int gtodot_fkey(int n) {
1310:src/keys.c    **** 	const int code = 100 + n;
1311:src/keys.c    **** 	unsigned int pc = state_pc();
1312:src/keys.c    **** 
1313:src/keys.c    **** 	if(isXROM(pc))
1314:src/keys.c    **** 		pc = 1;
1315:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1316:src/keys.c    **** 	if (pc > 0)
1317:src/keys.c    **** 		return pc;
1318:src/keys.c    **** 	return state_pc();
1319:src/keys.c    **** }
1320:src/keys.c    **** 
1321:src/keys.c    **** static int process_gtodot(const keycode c) {
1322:src/keys.c    **** 	int pc = -1;
1323:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1324:src/keys.c    **** 
1325:src/keys.c    **** 	if (rawpc <= 9) {
1326:src/keys.c    **** 		// Digit 0 - 9
1327:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1328:src/keys.c    **** 	}
1329:src/keys.c    **** #ifdef DM42
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1334:src/keys.c    **** #endif
1335:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1336:src/keys.c    **** 		// A - D
1337:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1338:src/keys.c    **** 		goto fin;
1339:src/keys.c    **** 	}
1340:src/keys.c    **** 	else if (c == K62) {
1341:src/keys.c    **** 		// .
1342:src/keys.c    **** 		rawpc = ProgSize;
1343:src/keys.c    **** 		goto fin;
1344:src/keys.c    **** 	}
1345:src/keys.c    **** 	else if (c == K20) {
1346:src/keys.c    **** 		// ENTER - short circuit processing
1347:src/keys.c    **** 		pc = State2.digval;
1348:src/keys.c    **** 	}
1349:src/keys.c    **** 	else if (c == K24) {
ARM GAS  /tmp/ccQmaUTi.s 			page 29


1350:src/keys.c    **** 		// backspace
1351:src/keys.c    **** 		if (State2.numdigit == 0) {
1352:src/keys.c    **** 			goto fin2;
1353:src/keys.c    **** 		} else {
1354:src/keys.c    **** 			State2.numdigit--;
1355:src/keys.c    **** 			State2.digval /= 10;
1356:src/keys.c    **** 		}
1357:src/keys.c    **** 	}
1358:src/keys.c    **** 	else if (c == K_UP) {
1359:src/keys.c    **** 		// up
1360:src/keys.c    **** 		rawpc = state_pc();
1361:src/keys.c    **** 		if (rawpc == 1)
1362:src/keys.c    **** 			rawpc = 0;
1363:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1364:src/keys.c    **** 		update_program_bounds(1);
1365:src/keys.c    **** 		rawpc = ProgBegin;
1366:src/keys.c    **** 		goto fin;
1367:src/keys.c    **** 	}
1368:src/keys.c    **** 	else if (c == K_DOWN) {
1369:src/keys.c    **** 		// down
1370:src/keys.c    **** 		update_program_bounds(1);
1371:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1373:src/keys.c    **** 			rawpc = 1;
1374:src/keys.c    **** 		goto fin;
1375:src/keys.c    **** 	}
1376:src/keys.c    **** 	if (pc >= 0) {
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
1378:src/keys.c    **** fin:		set_pc(rawpc);
1379:src/keys.c    **** fin2:		State2.gtodot = 0;
1380:src/keys.c    **** 		State2.digval = 0;
1381:src/keys.c    **** 		State2.numdigit = 0;
1382:src/keys.c    **** 	}
1383:src/keys.c    **** 	return STATE_UNFINISHED;
1384:src/keys.c    **** }
1385:src/keys.c    **** 
1386:src/keys.c    **** 
1387:src/keys.c    **** /* Process a keystroke in alpha mode
1388:src/keys.c    ****  */
1389:src/keys.c    **** static int process_alpha(const keycode c) {
1390:src/keys.c    **** 	const enum shifts shift = reset_shift();
1391:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1392:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
1393:src/keys.c    ****         int op = STATE_UNFINISHED;
1394:src/keys.c    **** 	State2.alpha_pos = 0;
1395:src/keys.c    **** 
1396:src/keys.c    **** 	switch (c) {
1397:src/keys.c    **** 	case K10:	// STO
1398:src/keys.c    **** 		if (shift == SHIFT_F) {
1399:src/keys.c    **** 			init_arg(RARG_ASTO);
1400:src/keys.c    **** 			return STATE_UNFINISHED;
1401:src/keys.c    **** 		}
1402:src/keys.c    **** 		break;
1403:src/keys.c    **** 
1404:src/keys.c    **** 	case K11:	// RCL - maybe view
1405:src/keys.c    **** 		if (shift == SHIFT_F) {
1406:src/keys.c    **** 			init_arg(RARG_ARCL);
ARM GAS  /tmp/ccQmaUTi.s 			page 30


1407:src/keys.c    **** 			return STATE_UNFINISHED;
1408:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1409:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1410:src/keys.c    **** 			return STATE_UNFINISHED;
1411:src/keys.c    **** 		}
1412:src/keys.c    **** 		break;
1413:src/keys.c    **** 
1414:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1415:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1416:src/keys.c    **** 			break;
1417:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1418:src/keys.c    **** 			State2.multi = 1;
1419:src/keys.c    **** 			State2.numdigit = 0;
1420:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1421:src/keys.c    **** 			return STATE_UNFINISHED;
1422:src/keys.c    **** 		}
1423:src/keys.c    **** 		State2.alphas = 0;
1424:src/keys.c    **** 		State2.alphashift = 0;
1425:src/keys.c    **** 		return op;
1426:src/keys.c    **** 
1427:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1428:src/keys.c    **** 		if (shift == SHIFT_N)
1429:src/keys.c    **** 			return STATE_BACKSPACE;
1430:src/keys.c    **** 		if (shift == SHIFT_H)
1431:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1432:src/keys.c    **** 		break;
1433:src/keys.c    **** 
1434:src/keys.c    **** 	case K_UP:
1435:src/keys.c    **** 		if (shift == SHIFT_N) {
1436:src/keys.c    **** 			if ( State2.runmode ) {
1437:src/keys.c    **** 				// Alpha scroll left
1438:src/keys.c    **** 				n = alpha_pos + 1;
1439:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1440:src/keys.c    **** 				return STATE_UNFINISHED;
1441:src/keys.c    **** 			}
1442:src/keys.c    **** 			return STATE_BST;
1443:src/keys.c    **** 		}
1444:src/keys.c    **** 		break;
1445:src/keys.c    **** 
1446:src/keys.c    **** 	case K_DOWN:
1447:src/keys.c    **** 		if (shift == SHIFT_N) {
1448:src/keys.c    **** 			if ( State2.runmode ) {
1449:src/keys.c    **** 				// Alpha scroll right
1450:src/keys.c    **** 				if (alpha_pos > 0)
1451:src/keys.c    **** 					State2.alpha_pos = alpha_pos-1;
1452:src/keys.c    **** 				return STATE_UNFINISHED;
1453:src/keys.c    **** 			}
1454:src/keys.c    **** 			return STATE_SST;
1455:src/keys.c    **** 		}
1456:src/keys.c    **** 		break;
1457:src/keys.c    **** 
1458:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1459:src/keys.c    **** 		if (shift == SHIFT_F)
1460:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1461:src/keys.c    **** 		else if (shift == SHIFT_H)
1462:src/keys.c    **** 			return OP_NIL | OP_OFF;
1463:src/keys.c    **** 		else if (shift == SHIFT_N)
ARM GAS  /tmp/ccQmaUTi.s 			page 31


1464:src/keys.c    **** 			init_state();
1465:src/keys.c    **** 		return STATE_UNFINISHED;
1466:src/keys.c    **** 
1467:src/keys.c    **** 	case K63:
1468:src/keys.c    **** 		if (shift == SHIFT_F)
1469:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1470:src/keys.c    **** 		break;
1471:src/keys.c    **** 
1472:src/keys.c    **** 	default:
1473:src/keys.c    **** 		break;
1474:src/keys.c    **** 	}
1475:src/keys.c    **** 
1476:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1477:src/keys.c    **** 	if (ch == 0)
1478:src/keys.c    **** 		return STATE_UNFINISHED;
1479:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1480:src/keys.c    **** }
1481:src/keys.c    **** 
1482:src/keys.c    **** /*
1483:src/keys.c    ****  *  Code to handle all commands with arguments
1484:src/keys.c    ****  */
1485:src/keys.c    **** static void reset_arg(void) {
1486:src/keys.c    **** 	init_arg((enum rarg) 0);
1487:src/keys.c    **** 	State2.rarg = 0;
1488:src/keys.c    **** }
1489:src/keys.c    **** 
1490:src/keys.c    **** static int arg_eval(unsigned int val) {
1491:src/keys.c    **** 	const unsigned int base = CmdBase;
1492:src/keys.c    **** 	int r = RARG(base, val 
1493:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1494:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1495:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1496:src/keys.c    **** 
1497:src/keys.c    **** 	if (! State2.ind) {
1498:src/keys.c    **** 		/*
1499:src/keys.c    **** 		 *  Central argument checking for some commands
1500:src/keys.c    **** 		 */
1501:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1502:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1503:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1504:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1505:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1506:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1507:src/keys.c    **** 			if ( val == 0 )
1508:src/keys.c    **** 				return STATE_UNFINISHED;
1509:src/keys.c    **** 			r = RARG(base, val);
1510:src/keys.c    **** 		}
1511:src/keys.c    **** #else
1512:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1513:src/keys.c    **** 			// Disallow odd complex register > 98
1514:src/keys.c    **** 			return STATE_UNFINISHED;
1515:src/keys.c    **** #endif
1516:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1517:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1518:src/keys.c    **** 			return STATE_UNFINISHED;
1519:src/keys.c    **** 	}
1520:src/keys.c    **** 	// Build op-code
ARM GAS  /tmp/ccQmaUTi.s 			page 32


1521:src/keys.c    **** 	reset_arg();
1522:src/keys.c    **** 	return r;
1523:src/keys.c    **** }
1524:src/keys.c    **** 
1525:src/keys.c    **** static int arg_digit(int n) {
1526:src/keys.c    **** 	int lim;
1527:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1528:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1529:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1530:src/keys.c    **** #else
1531:src/keys.c    **** 	const unsigned int base = CmdBase;
1532:src/keys.c    **** #endif
1533:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1534:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1535:src/keys.c    **** 	
1536:src/keys.c    **** 	if (State2.local) {
1537:src/keys.c    **** 		// Handle local registers and flags
1538:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1539:src/keys.c    **** 		if (State2.runmode) {
1540:src/keys.c    **** 			if (LocalRegs == 0)
1541:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1542:src/keys.c    **** 			if (is_reg) {
1543:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1544:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1545:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1546:src/keys.c    **** 			}
1547:src/keys.c    **** 		}
1548:src/keys.c    **** 	}
1549:src/keys.c    **** 	else if (is_reg)						// normal register
1550:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1551:src/keys.c    **** 	else {
1552:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1553:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1554:src/keys.c    **** 			lim = RARG_IND - 1;
1555:src/keys.c    **** 	}
1556:src/keys.c    **** 	if ((int) val > lim)
1557:src/keys.c    **** 		return STATE_UNFINISHED;
1558:src/keys.c    **** 
1559:src/keys.c    **** 	State2.digval = val;
1560:src/keys.c    **** 	++State2.numdigit;
1561:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1562:src/keys.c    **** 		int result = arg_eval(val);
1563:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1564:src/keys.c    **** 			--State2.numdigit;
1565:src/keys.c    **** 			State2.digval /= 10;
1566:src/keys.c    **** 		}
1567:src/keys.c    **** 		return result;
1568:src/keys.c    **** 	}
1569:src/keys.c    **** 	return STATE_UNFINISHED;
1570:src/keys.c    **** }
1571:src/keys.c    **** 
1572:src/keys.c    **** static int arg_fkey(int n) {
1573:src/keys.c    **** 	const unsigned int b = CmdBase;
1574:src/keys.c    **** 
1575:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1576:src/keys.c    **** 	{
1577:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
ARM GAS  /tmp/ccQmaUTi.s 			page 33


1578:src/keys.c    **** 			return STATE_UNFINISHED;
1579:src/keys.c    **** 		if (argcmds[b].lim < 100)
1580:src/keys.c    **** 			return STATE_UNFINISHED;
1581:src/keys.c    **** 		return arg_eval(n + 100);
1582:src/keys.c    **** 	}
1583:src/keys.c    **** 	return STATE_UNFINISHED;
1584:src/keys.c    **** }
1585:src/keys.c    **** 
1586:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1587:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1588:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1589:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1590:src/keys.c    **** #else
1591:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1592:src/keys.c    **** #endif
1593:src/keys.c    **** }
1594:src/keys.c    **** 
1595:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1596:src/keys.c    **** 	unsigned int b = CmdBase;
1597:src/keys.c    **** 
1598:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1599:src/keys.c    **** 		CmdBase += n;
1600:src/keys.c    **** 		return 1;
1601:src/keys.c    **** 	}
1602:src/keys.c    **** 	/* And we can turn off the operation too */
1603:src/keys.c    **** 	if (b >= n) {
1604:src/keys.c    **** 		b -= n;
1605:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1606:src/keys.c    **** 			CmdBase = b;
1607:src/keys.c    **** 			return 1;
1608:src/keys.c    **** 		}
1609:src/keys.c    **** 	}
1610:src/keys.c    **** 	return 0;
1611:src/keys.c    **** }
1612:src/keys.c    **** 
1613:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1614:src/keys.c    **** 
1615:src/keys.c    **** 	if (State2.numdigit == 0) {
1616:src/keys.c    **** 		// Only valid at beginning of entry
1617:src/keys.c    **** 		if (State2.dot || State2.local) {
1618:src/keys.c    **** 			// '..' or ENTER '.' = X
1619:src/keys.c    **** 			State2.local = 0;
1620:src/keys.c    **** 			return arg_eval(regX_idx);
1621:src/keys.c    **** 		}
1622:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1623:src/keys.c    **** 			// local register or flag select
1624:src/keys.c    **** 			State2.local = 1;
1625:src/keys.c    **** 		}
1626:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1627:src/keys.c    **** 			// Special GTO . sequence
1628:src/keys.c    **** 			if (! State2.ind) {
1629:src/keys.c    **** 				State2.gtodot = 1;
1630:src/keys.c    **** 				reset_arg();
1631:src/keys.c    **** 			}
1632:src/keys.c    **** 		}
1633:src/keys.c    **** 	}
1634:src/keys.c    **** 	return STATE_UNFINISHED;
ARM GAS  /tmp/ccQmaUTi.s 			page 34


1635:src/keys.c    **** }
1636:src/keys.c    **** 
1637:src/keys.c    **** static int process_arg_shuffle(int r) {
1638:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1639:src/keys.c    **** 	if (State2.numdigit < 4)
1640:src/keys.c    **** 		return STATE_UNFINISHED;
1641:src/keys.c    **** 	return arg_eval(State2.digval);
1642:src/keys.c    **** }
1643:src/keys.c    **** 
1644:src/keys.c    **** 
1645:src/keys.c    **** static int process_arg(const keycode c) {
1646:src/keys.c    **** 	unsigned int base = CmdBase;
1647:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1648:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1649:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1650:src/keys.c    **** 	const enum shifts shift = reset_shift();
1651:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1652:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1653:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1654:src/keys.c    **** 
1655:src/keys.c    **** 	n &= ~NO_SHORT;
1656:src/keys.c    **** 	if (base >= NUM_RARG) {
1657:src/keys.c    **** 		reset_arg();
1658:src/keys.c    **** 		return STATE_UNFINISHED;
1659:src/keys.c    **** 	}
1660:src/keys.c    **** #ifdef DM42
1661:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1662:src/keys.c    **** 	  switch (n) {
1663:src/keys.c    **** 	  case regX_idx:
1664:src/keys.c    **** 	    return arg_digit(1);
1665:src/keys.c    **** 	  case regY_idx:
1666:src/keys.c    **** 	    return arg_digit(2);
1667:src/keys.c    **** 	  case regZ_idx:
1668:src/keys.c    **** 	    return arg_digit(3);
1669:src/keys.c    **** 	  case regT_idx:
1670:src/keys.c    **** 	    return arg_digit(4);
1671:src/keys.c    **** 	  case 5:
1672:src/keys.c    **** 	  case 6:
1673:src/keys.c    **** 	  case 7:
1674:src/keys.c    **** 	  case 8:
1675:src/keys.c    **** 	  case 9:
1676:src/keys.c    **** 	  case 0:
1677:src/keys.c    **** 	    return arg_digit(n);
1678:src/keys.c    **** 	  }
1679:src/keys.c    **** 	}
1680:src/keys.c    **** #else
1681:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1682:src/keys.c    **** 		return arg_digit(n);
1683:src/keys.c    **** #endif	
1684:src/keys.c    **** 	if (shorthand)
1685:src/keys.c    **** 		// row column shorthand addressing
1686:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1687:src/keys.c    **** 
1688:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1689:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1690:src/keys.c    **** 		switch ((int)c) {
1691:src/keys.c    **** 		case K_UP:	// up arrow
ARM GAS  /tmp/ccQmaUTi.s 			page 35


1692:src/keys.c    **** 			if (--base < RARG_FIX)
1693:src/keys.c    **** 				base = RARG_SIG0;
1694:src/keys.c    **** 			break;
1695:src/keys.c    **** 
1696:src/keys.c    **** 		case K_DOWN:	// down arrow
1697:src/keys.c    **** 		case K01:	// B
1698:src/keys.c    **** 			if (++base > RARG_SIG0)
1699:src/keys.c    **** 				base = RARG_FIX;
1700:src/keys.c    **** 			break;
1701:src/keys.c    **** 		}
1702:src/keys.c    **** 		CmdBase = base;
1703:src/keys.c    **** 	}
1704:src/keys.c    **** #endif
1705:src/keys.c    **** 	/*
1706:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1707:src/keys.c    **** 	 *  Handle the rest here.
1708:src/keys.c    **** 	 */
1709:src/keys.c    **** 	switch ((int)c) {
1710:src/keys.c    **** 	case K_F:
1711:src/keys.c    **** 		if (label_addressing)
1712:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1713:src/keys.c    **** 		break;
1714:src/keys.c    **** 
1715:src/keys.c    **** 	case K_ARROW:		// arrow
1716:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1717:src/keys.c    **** 			State2.ind = ! State2.ind;
1718:src/keys.c    **** 			if (! stack_reg)
1719:src/keys.c    **** 				State2.dot = 0;
1720:src/keys.c    **** 		}
1721:src/keys.c    **** 		break;
1722:src/keys.c    **** 
1723:src/keys.c    **** 	case K_CMPLX:
1724:src/keys.c    **** 		if (State2.ind || State2.dot)
1725:src/keys.c    **** 			break;
1726:src/keys.c    **** 		if (base == RARG_STO)
1727:src/keys.c    **** 			CmdBase = RARG_STOM;
1728:src/keys.c    **** 		else if (base == RARG_RCL)
1729:src/keys.c    **** 			CmdBase = RARG_RCLM;
1730:src/keys.c    **** 		break;
1731:src/keys.c    **** #ifdef DM42
1732:src/keys.c    **** 	case K41:       // T
1733:src/keys.c    **** 	  if (State2.shuffle)
1734:src/keys.c    **** 	    return process_arg_shuffle(3);
1735:src/keys.c    **** 	case K51:       // X
1736:src/keys.c    **** 	  if (State2.shuffle)
1737:src/keys.c    **** 	    return process_arg_shuffle(0);
1738:src/keys.c    **** 	case K52:	// Y
1739:src/keys.c    **** 	  if (State2.shuffle)
1740:src/keys.c    **** 	    return process_arg_shuffle(1);
1741:src/keys.c    **** 	case K53:       // Z
1742:src/keys.c    **** 	  if (State2.shuffle)
1743:src/keys.c    **** 	    return process_arg_shuffle(2);
1744:src/keys.c    **** #else
1745:src/keys.c    **** 	case K63:	// Y
1746:src/keys.c    **** 	  if (State2.shuffle)
1747:src/keys.c    **** 	    return process_arg_shuffle(1);
1748:src/keys.c    **** #endif
ARM GAS  /tmp/ccQmaUTi.s 			page 36


1749:src/keys.c    **** 	case K00:	// A
1750:src/keys.c    **** 	case K01:	// B
1751:src/keys.c    **** 	case K02:	// C
1752:src/keys.c    **** 	case K03:	// D
1753:src/keys.c    **** #ifdef DM42
1754:src/keys.c    **** 	case K12:	// I (lastY)
1755:src/keys.c    **** 	case K13:	// J
1756:src/keys.c    **** 	case K14:	// K
1757:src/keys.c    **** 	case K15:	// L (lastX)
1758:src/keys.c    **** #else
1759:src/keys.c    **** 	case K12:	// I (lastY)
1760:src/keys.c    **** 	case K21:	// J
1761:src/keys.c    **** 	case K22:	// K
1762:src/keys.c    **** 	case K23:	// L (lastX)
1763:src/keys.c    **** #endif
1764:src/keys.c    **** 	  if (State2.dot || stack_reg)
1765:src/keys.c    **** 			return arg_eval(n);
1766:src/keys.c    **** 		if ( c <= K03 )
1767:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1768:src/keys.c    **** 		break;
1769:src/keys.c    **** #ifdef DM42
1770:src/keys.c    **** 	case K62:	// '.'
1771:src/keys.c    **** 		return process_arg_dot(base);
1772:src/keys.c    **** 
1773:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1774:src/keys.c    **** 	case K64:		// plus
1775:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1776:src/keys.c    **** 			return arg_eval(n);
1777:src/keys.c    **** 		break;
1778:src/keys.c    **** 	case K54:               // minus
1779:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1780:src/keys.c    **** 			reset_arg();
1781:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1782:src/keys.c    **** 		}
1783:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1784:src/keys.c    **** 		break;
1785:src/keys.c    **** 	case K44:		// multiply
1786:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1787:src/keys.c    **** 			return arg_eval(n);
1788:src/keys.c    **** 		break;
1789:src/keys.c    **** 	case K34:
1790:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1791:src/keys.c    **** 		break;
1792:src/keys.c    **** #else
1793:src/keys.c    **** 	case K62:	// X, '.'
1794:src/keys.c    **** 		if (State2.shuffle)
1795:src/keys.c    **** 			return process_arg_shuffle(0);
1796:src/keys.c    **** 		return process_arg_dot(base);
1797:src/keys.c    **** 
1798:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1799:src/keys.c    **** 	case K64:		// Z register
1800:src/keys.c    **** 		if (State2.shuffle)
1801:src/keys.c    **** 			return process_arg_shuffle(2);
1802:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1803:src/keys.c    **** 			return arg_eval(n);
1804:src/keys.c    **** 		break;
1805:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 37


1806:src/keys.c    **** 	case K54:
1807:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1808:src/keys.c    **** 			reset_arg();
1809:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1810:src/keys.c    **** 		}
1811:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1812:src/keys.c    **** 		break;
1813:src/keys.c    **** 
1814:src/keys.c    **** 	case K44:		// T register
1815:src/keys.c    **** 		if (State2.shuffle)
1816:src/keys.c    **** 			return process_arg_shuffle(3);
1817:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1818:src/keys.c    **** 			return arg_eval(n);
1819:src/keys.c    **** 		break;
1820:src/keys.c    **** 
1821:src/keys.c    **** 	case K34:
1822:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1823:src/keys.c    **** 		break;
1824:src/keys.c    **** #endif
1825:src/keys.c    **** 	case K_UP:
1826:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1827:src/keys.c    **** 		break;
1828:src/keys.c    **** 
1829:src/keys.c    **** 	case K_DOWN:
1830:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1831:src/keys.c    **** 		break;
1832:src/keys.c    **** 
1833:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1834:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1835:src/keys.c    **** 			if (argcmds[base].label) {
1836:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1837:src/keys.c    **** 				State2.multi = 1;
1838:src/keys.c    **** 				State2.alphashift = 0;
1839:src/keys.c    **** 				State2.rarg = 0;
1840:src/keys.c    **** 			} else if (base == RARG_SCI) {
1841:src/keys.c    **** 				reset_arg();
1842:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1843:src/keys.c    **** 			} else if (base == RARG_ENG) {
1844:src/keys.c    **** 				reset_arg();
1845:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1846:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1847:src/keys.c    **** 				State2.dot = 1;
1848:src/keys.c    **** 		} else if (State2.numdigit > 0)
1849:src/keys.c    **** 			return arg_eval(State2.digval);
1850:src/keys.c    **** 		else if (stack_reg)
1851:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1852:src/keys.c    **** 		break;
1853:src/keys.c    **** 
1854:src/keys.c    **** 	case K24:	// <-
1855:src/keys.c    **** 		if (State2.numdigit == 0) {
1856:src/keys.c    **** 			if (State2.dot)
1857:src/keys.c    **** 				State2.dot = 0;
1858:src/keys.c    **** 			else if (State2.local)
1859:src/keys.c    **** 				State2.local = 0;
1860:src/keys.c    **** 			else if (State2.ind)
1861:src/keys.c    **** 				State2.ind = 0;
1862:src/keys.c    **** 			else
ARM GAS  /tmp/ccQmaUTi.s 			page 38


1863:src/keys.c    **** 				goto reset;
1864:src/keys.c    **** 		}
1865:src/keys.c    **** 		else {
1866:src/keys.c    **** 			--State2.numdigit;
1867:src/keys.c    **** 			if (State2.shuffle)
1868:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1869:src/keys.c    **** 			else
1870:src/keys.c    **** 				State2.digval /= 10;
1871:src/keys.c    **** 		}
1872:src/keys.c    **** 		break;
1873:src/keys.c    **** 
1874:src/keys.c    **** 	case K60:
1875:src/keys.c    **** 	reset:
1876:src/keys.c    **** 		reset_arg();
1877:src/keys.c    **** 	default:
1878:src/keys.c    **** 		break;
1879:src/keys.c    **** 	}
1880:src/keys.c    **** 	return STATE_UNFINISHED;
1881:src/keys.c    **** }
1882:src/keys.c    **** 
1883:src/keys.c    **** 
1884:src/keys.c    **** /*
1885:src/keys.c    ****  *  Process arguments to the diverse test commands
1886:src/keys.c    ****  */
1887:src/keys.c    **** static int process_test(const keycode c) {
1888:src/keys.c    **** 	int r = State2.test;
1889:src/keys.c    **** 	int cmpx = State2.cmplx;
1890:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1891:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1892:src/keys.c    **** 
1893:src/keys.c    **** 	State2.test = TST_NONE;
1894:src/keys.c    **** 	State2.cmplx = 0;
1895:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1896:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1897:src/keys.c    **** 		// Lettered register
1898:src/keys.c    **** 		if (cmpx && (n & 1)) {
1899:src/keys.c    **** 			if (n == regI_idx)
1900:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1901:src/keys.c    **** 			// Disallow odd complex registers > A
1902:src/keys.c    **** 			goto again;
1903:src/keys.c    **** 		}
1904:src/keys.c    **** 		// Return the command with the register completed
1905:src/keys.c    **** 		return RARG(base, n);
1906:src/keys.c    **** 	}
1907:src/keys.c    **** 	else if ( n == 0 ) {
1908:src/keys.c    **** 		// Special 0
1909:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1910:src/keys.c    **** 	}
1911:src/keys.c    **** 	else if ( n == 1 ) {
1912:src/keys.c    **** 		// Special 1
1913:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1914:src/keys.c    **** 	}
1915:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1916:src/keys.c    **** 		// digit 2..9, -> or .
1917:src/keys.c    **** 		init_arg((enum rarg)base);
1918:src/keys.c    **** 		return process_arg(c);
1919:src/keys.c    **** 	}
ARM GAS  /tmp/ccQmaUTi.s 			page 39


1920:src/keys.c    **** 
1921:src/keys.c    **** 	switch (c) {
1922:src/keys.c    **** 	case K11:					// tests vs register
1923:src/keys.c    **** 	case K20:
1924:src/keys.c    **** 		init_arg((enum rarg)base);
1925:src/keys.c    **** 		return STATE_UNFINISHED;
1926:src/keys.c    **** 
1927:src/keys.c    **** 	//case K60:
1928:src/keys.c    **** 	case K24:
1929:src/keys.c    **** 		return STATE_UNFINISHED;
1930:src/keys.c    **** 
1931:src/keys.c    **** 	default:
1932:src/keys.c    **** 		break;
1933:src/keys.c    **** 	}
1934:src/keys.c    **** again:
1935:src/keys.c    **** 	State2.test = r;
1936:src/keys.c    **** 	State2.cmplx = cmpx;
1937:src/keys.c    **** 	return STATE_UNFINISHED;
1938:src/keys.c    **** }
1939:src/keys.c    **** 
1940:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1941:src/keys.c    **** /*
1942:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1943:src/keys.c    ****  */
1944:src/keys.c    **** #define USER_CAT_MAX 100
1945:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1946:src/keys.c    **** 
1947:src/keys.c    **** static int build_user_cat(void)
1948:src/keys.c    **** {
1949:src/keys.c    **** 	// find the label 'CAT'
1950:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1951:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1952:src/keys.c    **** 	int len = 0;
1953:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1954:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1955:src/keys.c    **** 		char buf1[16];
1956:src/keys.c    **** 		int i;
1957:src/keys.c    **** 		s_opcode op;
1958:src/keys.c    **** 	next:
1959:src/keys.c    **** 		pc = do_inc(pc, 0);
1960:src/keys.c    **** 		op = (s_opcode) getprog(pc);
1961:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
1962:src/keys.c    **** 			break;
1963:src/keys.c    **** 		if (isDBL(op))
1964:src/keys.c    **** 			continue;
1965:src/keys.c    **** 		if (isRARG(op)) {
1966:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
1967:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
1968:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
1969:src/keys.c    **** 				op = op & 0xff00;	// remove argument
1970:src/keys.c    **** 		}
1971:src/keys.c    **** 		catcmd(op, buf1);
1972:src/keys.c    **** 		for (i = 0; i < len; ++i) {
1973:src/keys.c    **** 			// Find a position in the table to insert the new entry
1974:src/keys.c    **** 			char buf2[16];
1975:src/keys.c    **** 			const char *p, *q;
1976:src/keys.c    **** 			int diff = 0;
ARM GAS  /tmp/ccQmaUTi.s 			page 40


1977:src/keys.c    **** 			if (op == UserCat[i]) {
1978:src/keys.c    **** 				// duplicate entry - ignore
1979:src/keys.c    **** 				goto next;
1980:src/keys.c    **** 			}
1981:src/keys.c    **** 			p = buf1;
1982:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
1983:src/keys.c    **** 				++p;
1984:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
1985:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
1986:src/keys.c    **** 				++q;
1987:src/keys.c    **** 			diff = 0;
1988:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
1989:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
1990:src/keys.c    **** 			}
1991:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
1992:src/keys.c    **** 				// identical according to sort order, insert after
1993:src/keys.c    **** 				++i;
1994:src/keys.c    **** 				break;
1995:src/keys.c    **** 			}
1996:src/keys.c    **** 			if (diff > 0) {
1997:src/keys.c    **** 				// insert new entry before the one found because this is greater
1998:src/keys.c    **** 				break;
1999:src/keys.c    **** 			}
2000:src/keys.c    **** 		}
2001:src/keys.c    **** 		if (i < len) {
2002:src/keys.c    **** 			// Make room
2003:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2004:src/keys.c    **** 		}
2005:src/keys.c    **** 		UserCat[i] = op;
2006:src/keys.c    **** 		++len;
2007:src/keys.c    **** 	}
2008:src/keys.c    **** 	// return the number of entries
2009:src/keys.c    **** 	return len;
2010:src/keys.c    **** }
2011:src/keys.c    **** #endif
2012:src/keys.c    **** 
2013:src/keys.c    **** /* Return the number of entries in the current catalogue.
2014:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2015:src/keys.c    ****  * likely be the most space efficient method.
2016:src/keys.c    ****  */
2017:src/keys.c    **** int current_catalogue_max(void) {
2018:src/keys.c    **** 	// A quick table of catalogue sizes
2019:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2020:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2021:src/keys.c    **** 	{
2022:src/keys.c    **** 		0, // NONE
2023:src/keys.c    **** 		SIZE_catalogue,
2024:src/keys.c    **** 		SIZE_cplx_catalogue,
2025:src/keys.c    **** 		SIZE_stats_catalogue,
2026:src/keys.c    **** 		SIZE_prob_catalogue,
2027:src/keys.c    **** 		SIZE_int_catalogue,
2028:src/keys.c    **** 		SIZE_prog_catalogue,
2029:src/keys.c    **** 		SIZE_program_xfcn,
2030:src/keys.c    **** 		SIZE_test_catalogue,
2031:src/keys.c    **** 		SIZE_mode_catalogue,
2032:src/keys.c    **** 		SIZE_alpha_catalogue,
2033:src/keys.c    **** 		SIZE_alpha_symbols,
ARM GAS  /tmp/ccQmaUTi.s 			page 41


2034:src/keys.c    **** 		SIZE_alpha_compares,
2035:src/keys.c    **** 		SIZE_alpha_arrows,
2036:src/keys.c    **** 		SIZE_alpha_letters,
2037:src/keys.c    **** 		SIZE_alpha_subscripts,
2038:src/keys.c    **** 		NUM_CONSTS_CAT,
2039:src/keys.c    **** 		NUM_CONSTS_CAT,
2040:src/keys.c    **** 		SIZE_conv_catalogue,
2041:src/keys.c    **** 		SIZE_sums_catalogue,
2042:src/keys.c    **** 		SIZE_matrix_catalogue,
2043:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2044:src/keys.c    **** 		SIZE_internal_catalogue,
2045:src/keys.c    **** #endif
2046:src/keys.c    **** 	};
2047:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2048:src/keys.c    **** 	const int cat = State2.catalogue;
2049:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2050:src/keys.c    **** #else
2051:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2052:src/keys.c    **** #endif
2053:src/keys.c    **** }
2054:src/keys.c    **** 
2055:src/keys.c    **** 
2056:src/keys.c    **** /* Look up the character position in the given byte array and
2057:src/keys.c    ****  * build the alpha op-code for it.
2058:src/keys.c    ****  */
2059:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2060:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2061:src/keys.c    **** }
2062:src/keys.c    **** 
2063:src/keys.c    **** 
2064:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2065:src/keys.c    ****  */
2066:src/keys.c    **** opcode current_catalogue(int n) {
2067:src/keys.c    **** 	// A quick table of catalogue tables
2068:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2069:src/keys.c    **** 	static const void *catalogues[] =
2070:src/keys.c    **** 	{
2071:src/keys.c    **** 		NULL, // NONE
2072:src/keys.c    **** 		catalogue,
2073:src/keys.c    **** 		cplx_catalogue,
2074:src/keys.c    **** 		stats_catalogue,
2075:src/keys.c    **** 		prob_catalogue,
2076:src/keys.c    **** 		int_catalogue,
2077:src/keys.c    **** 		prog_catalogue,
2078:src/keys.c    **** 		program_xfcn,
2079:src/keys.c    **** 		test_catalogue,
2080:src/keys.c    **** 		mode_catalogue,
2081:src/keys.c    **** 		alpha_catalogue,
2082:src/keys.c    **** 		alpha_symbols,
2083:src/keys.c    **** 		alpha_compares,
2084:src/keys.c    **** 		alpha_arrows,
2085:src/keys.c    **** 		alpha_letters,
2086:src/keys.c    **** 		alpha_subscripts,
2087:src/keys.c    **** 		NULL,
2088:src/keys.c    **** 		NULL,
2089:src/keys.c    **** 		NULL, //CONV
2090:src/keys.c    **** 		sums_catalogue,
ARM GAS  /tmp/ccQmaUTi.s 			page 42


2091:src/keys.c    **** 		matrix_catalogue,
2092:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2093:src/keys.c    **** 		internal_catalogue,
2094:src/keys.c    **** #endif
2095:src/keys.c    **** 	};
2096:src/keys.c    **** 	const unsigned char *cat;
2097:src/keys.c    **** 	unsigned int c = State2.catalogue;
2098:src/keys.c    **** 	int m, i;
2099:src/keys.c    **** 	unsigned p, q;
2100:src/keys.c    **** 
2101:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2102:src/keys.c    **** 		if (n == OP_ZERO)
2103:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2104:src/keys.c    **** 		return CONST(n);
2105:src/keys.c    **** 	}
2106:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2107:src/keys.c    **** 		if (n == OP_ZERO)
2108:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2109:src/keys.c    **** 		return CONST_CMPLX(n);
2110:src/keys.c    **** 	}
2111:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2112:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2113:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2114:src/keys.c    **** 			// Monadic conversion routine
2115:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2116:src/keys.c    **** 		else
2117:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2118:src/keys.c    **** 	}
2119:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2120:src/keys.c    **** 	if (c == CATALOGUE_USER)
2121:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2122:src/keys.c    **** #endif
2123:src/keys.c    **** 
2124:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2125:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2126:src/keys.c    **** 	else
2127:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2128:src/keys.c    **** 
2129:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2130:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2131:src/keys.c    **** 	}
2132:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2133:src/keys.c    **** 		return OP_NIL | OP_NOP;
2134:src/keys.c    **** 
2135:src/keys.c    **** 	/* Unpack the opcode */
2136:src/keys.c    **** 	cat += n + (n >> 2);
2137:src/keys.c    **** 	p = cat[0];
2138:src/keys.c    **** 	q = cat[1];
2139:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2140:src/keys.c    **** 
2141:src/keys.c    **** 	/* Now figure out which opcode it really is */
2142:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2143:src/keys.c    **** 		if (m < opcode_breaks[i])
2144:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2145:src/keys.c    **** 		m -= opcode_breaks[i];
2146:src/keys.c    **** 	}
2147:src/keys.c    **** 	return RARG_BASEOP(m);
ARM GAS  /tmp/ccQmaUTi.s 			page 43


2148:src/keys.c    **** }
2149:src/keys.c    **** 
2150:src/keys.c    **** 
2151:src/keys.c    **** /*
2152:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2153:src/keys.c    ****  *  in multi character commands.
2154:src/keys.c    ****  */
2155:src/keys.c    **** static int forbidden_alpha(int pos) {
2156:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2157:src/keys.c    **** }
2158:src/keys.c    **** 
2159:src/keys.c    **** /*
2160:src/keys.c    ****  *  Catalogue navigation
2161:src/keys.c    ****  */
2162:src/keys.c    **** static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2163:src/keys.c    **** 	int pos = State.catpos;
2164:src/keys.c    **** 	int ch;
2165:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2166:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
2167:src/keys.c    **** 
2168:src/keys.c    **** 	if (shift == SHIFT_N) {
2169:src/keys.c    **** 		switch (c) {
2170:src/keys.c    **** #ifdef DM42
2171:src/keys.c    **** 		case K05:			// XEQ accepts command
2172:src/keys.c    **** #else	  
2173:src/keys.c    **** 		case K30:			// XEQ accepts command
2174:src/keys.c    **** #endif						  
2175:src/keys.c    **** 		case K20:			// Enter accepts command
2176:src/keys.c    **** 			if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2177:src/keys.c    **** 				const opcode op = current_catalogue(pos);
2178:src/keys.c    **** 
2179:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2180:src/keys.c    **** 
2181:src/keys.c    **** 				if (isRARG(op)) {
2182:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
2183:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2184:src/keys.c    **** 						return op;
2185:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2186:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2187:src/keys.c    **** 					else
2188:src/keys.c    **** 						init_arg(RARG_CMD(op));
2189:src/keys.c    **** 				}
2190:src/keys.c    **** 				else {
2191:src/keys.c    **** 					return check_confirm(op);
2192:src/keys.c    **** 				}
2193:src/keys.c    **** 			} else
2194:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2195:src/keys.c    **** 			return STATE_UNFINISHED;
2196:src/keys.c    **** 
2197:src/keys.c    **** 		case K24:			// backspace
2198:src/keys.c    **** 		    if (CmdLineLength > 0 && Keyticks < 30) {
2199:src/keys.c    **** 		      if (--CmdLineLength > 0)
2200:src/keys.c    **** 					goto search;
2201:src/keys.c    **** 				pos = 0;
2202:src/keys.c    **** 				goto set_pos;
2203:src/keys.c    **** 			} else
2204:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
ARM GAS  /tmp/ccQmaUTi.s 			page 44


2205:src/keys.c    **** 			return STATE_UNFINISHED;
2206:src/keys.c    **** 
2207:src/keys.c    **** 		case K60:
2208:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2209:src/keys.c    **** 			return STATE_UNFINISHED;
2210:src/keys.c    **** 
2211:src/keys.c    **** 		case K_UP:
2212:src/keys.c    **** 			CmdLineLength = 0;
2213:src/keys.c    **** 			if (pos == 0)
2214:src/keys.c    **** 				goto set_max;
2215:src/keys.c    **** 			else
2216:src/keys.c    **** 				--pos;
2217:src/keys.c    **** 			goto set_pos;
2218:src/keys.c    **** 
2219:src/keys.c    **** 		case K_DOWN:
2220:src/keys.c    **** 			CmdLineLength = 0;
2221:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2222:src/keys.c    **** 			if (pos >= ctmax)
2223:src/keys.c    **** 				pos = 0;
2224:src/keys.c    **** 			goto set_pos;
2225:src/keys.c    **** 
2226:src/keys.c    **** 		default:
2227:src/keys.c    **** 			break;
2228:src/keys.c    **** 		}
2229:src/keys.c    **** 	} else if (shift == SHIFT_F) {
2230:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
2231:src/keys.c    **** 			/*
2232:src/keys.c    **** 			 * f 1/x in conversion catalogue
2233:src/keys.c    **** 			 */
2234:src/keys.c    **** 			/* A small table of commands in pairs containing inverse commands.
2235:src/keys.c    **** 			 * This table could be unsigned characters only storing the monadic kind.
2236:src/keys.c    **** 			 * this saves twelve bytes in the table at a cost of some bytes in the code below.
2237:src/keys.c    **** 			 * Not worth it since the maximum saving will be less than twelve bytes.
2238:src/keys.c    **** 			 */
2239:src/keys.c    **** 			static const unsigned short int conv_mapping[] = {
2240:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2241:src/keys.c    **** 				OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2242:src/keys.c    **** 				OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2243:src/keys.c    **** 				OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2244:src/keys.c    **** 				OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2245:src/keys.c    **** 				OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2246:src/keys.c    **** 			};
2247:src/keys.c    **** 			const opcode op = current_catalogue(pos);
2248:src/keys.c    **** 			int i;
2249:src/keys.c    **** 
2250:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2251:src/keys.c    **** 			if (isRARG(op))
2252:src/keys.c    **** 				return op ^ 1;
2253:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2254:src/keys.c    **** 				if (op == conv_mapping[i])
2255:src/keys.c    **** 					return conv_mapping[i^1];
2256:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
2257:src/keys.c    **** 		}
2258:src/keys.c    **** 		else if (c == K60 && (State2.alphas || State2.multi)) {
2259:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
2260:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2261:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccQmaUTi.s 			page 45


2262:src/keys.c    **** 		}
2263:src/keys.c    **** 	} else if (shift == SHIFT_G) {
2264:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
2265:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2266:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
2267:src/keys.c    **** 		}
2268:src/keys.c    **** 	}
2269:src/keys.c    **** 
2270:src/keys.c    **** 	/* We've got a key press, map it to a character and try to
2271:src/keys.c    **** 	 * jump to the appropriate catalogue entry.
2272:src/keys.c    **** 	 */
2273:src/keys.c    **** 	ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2274:src/keys.c    **** 	reset_shift();
2275:src/keys.c    **** 	if (ch == '\0')
2276:src/keys.c    **** 		return STATE_UNFINISHED;
2277:src/keys.c    **** 	if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2278:src/keys.c    **** 		// No multi character search in alpha catalogues
2279:src/keys.c    **** 		CmdLineLength = 0;
2280:src/keys.c    **** 	}
2281:src/keys.c    **** 	if (CmdLineLength < 10)
2282:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
2283:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
2284:src/keys.c    **** 
2285:src/keys.c    **** search:
2286:src/keys.c    **** 	Cmdline[CmdLineLength] = '\0';
2287:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2288:src/keys.c    **** 		char buf[16];
2289:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2290:src/keys.c    **** 		int i;
2291:src/keys.c    **** 
2292:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2293:src/keys.c    **** 			cmd++;
2294:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2295:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2296:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
2297:src/keys.c    **** 			if (c > cl)
2298:src/keys.c    **** 				goto set_pos;
2299:src/keys.c    **** 			else if (c < cl)
2300:src/keys.c    **** 				break;
2301:src/keys.c    **** 		}
2302:src/keys.c    **** 		if (Cmdline[i] == '\0')
2303:src/keys.c    **** 			goto set_pos;
2304:src/keys.c    **** 	}
2305:src/keys.c    **** set_max:
2306:src/keys.c    **** 	pos = ctmax - 1;
2307:src/keys.c    **** set_pos:
2308:src/keys.c    **** 	while (is_multi && pos && forbidden_alpha(pos))
2309:src/keys.c    **** 		--pos;
2310:src/keys.c    **** 	State.catpos = pos;
2311:src/keys.c    **** 	return STATE_UNFINISHED;
2312:src/keys.c    **** }
2313:src/keys.c    **** 
2314:src/keys.c    **** #ifndef REALBUILD
2315:src/keys.c    **** int find_pos(const char* text) {
2316:src/keys.c    **** 	int pos;
2317:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2318:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
ARM GAS  /tmp/ccQmaUTi.s 			page 46


2319:src/keys.c    **** 		char buf[16];
2320:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2321:src/keys.c    **** 		int i;
2322:src/keys.c    **** 
2323:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2324:src/keys.c    **** 			cmd++;
2325:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2326:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2327:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2328:src/keys.c    **** 			if (c > cl)
2329:src/keys.c    **** 				return pos;
2330:src/keys.c    **** 			else if (c < cl)
2331:src/keys.c    **** 				break;
2332:src/keys.c    **** 		}
2333:src/keys.c    **** 		if (text[i] == '\0')
2334:src/keys.c    **** 			return pos;
2335:src/keys.c    **** 	}
2336:src/keys.c    **** 	return pos;
2337:src/keys.c    **** }
2338:src/keys.c    **** 
2339:src/keys.c    **** #endif
2340:src/keys.c    **** 
2341:src/keys.c    **** /* Multi (2) word instruction entry
2342:src/keys.c    ****  */
2343:src/keys.c    **** static void reset_multi(void) {
2344:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2345:src/keys.c    **** 	State2.multi = 0;
2346:src/keys.c    **** 	if (! State2.alphas )
2347:src/keys.c    **** 		State2.alphashift = 0;
2348:src/keys.c    **** }
2349:src/keys.c    **** 
2350:src/keys.c    **** static int process_multi(const keycode c) {
2351:src/keys.c    **** 	enum shifts shift = reset_shift();
2352:src/keys.c    **** 	unsigned int ch = 0;
2353:src/keys.c    **** 	unsigned int opcode;
2354:src/keys.c    **** 
2355:src/keys.c    **** 	if (State2.catalogue) {
2356:src/keys.c    **** 		// Alpha catalogue from within multi character command
2357:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2358:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2359:src/keys.c    **** 			return opcode;
2360:src/keys.c    **** 		ch = (unsigned char) opcode;
2361:src/keys.c    **** 		goto add_char;
2362:src/keys.c    **** 	}
2363:src/keys.c    **** 
2364:src/keys.c    **** 	switch (c) {
2365:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2366:src/keys.c    **** 		if (shift != SHIFT_N)
2367:src/keys.c    **** 				break;
2368:src/keys.c    **** 		reset_multi();
2369:src/keys.c    **** 		if (State2.numdigit == 0)
2370:src/keys.c    **** 			return STATE_UNFINISHED;
2371:src/keys.c    **** 		else if (State2.numdigit == 1)
2372:src/keys.c    **** 			State2.digval2 = 0;
2373:src/keys.c    **** 		goto fin;
2374:src/keys.c    **** 
2375:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
ARM GAS  /tmp/ccQmaUTi.s 			page 47


2376:src/keys.c    **** 		if (shift != SHIFT_H) {
2377:src/keys.c    **** 			if (State2.numdigit == 0)
2378:src/keys.c    **** 				reset_multi();
2379:src/keys.c    **** 			else
2380:src/keys.c    **** 				State2.numdigit--;
2381:src/keys.c    **** 			return STATE_UNFINISHED;
2382:src/keys.c    **** 		}
2383:src/keys.c    **** 		break;
2384:src/keys.c    **** 
2385:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2386:src/keys.c    **** 		if (shift == SHIFT_F)
2387:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2388:src/keys.c    **** 		else
2389:src/keys.c    **** 			reset_multi();
2390:src/keys.c    **** 		return STATE_UNFINISHED;
2391:src/keys.c    **** 
2392:src/keys.c    **** 	default:
2393:src/keys.c    **** 		break;
2394:src/keys.c    **** 		}
2395:src/keys.c    **** 
2396:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2397:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2398:src/keys.c    **** 	if (ch == 0)
2399:src/keys.c    **** 		return STATE_UNFINISHED;
2400:src/keys.c    **** add_char:
2401:src/keys.c    **** 	if (State2.numdigit == 0) {
2402:src/keys.c    **** 		State2.digval = ch;
2403:src/keys.c    **** 		State2.numdigit = 1;
2404:src/keys.c    **** 		return STATE_UNFINISHED;
2405:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2406:src/keys.c    **** 		State2.digval2 = ch;
2407:src/keys.c    **** 		State2.numdigit = 2;
2408:src/keys.c    **** 		return STATE_UNFINISHED;
2409:src/keys.c    **** 	}
2410:src/keys.c    **** 	reset_multi();
2411:src/keys.c    **** 
2412:src/keys.c    **** fin:
2413:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2414:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2415:src/keys.c    **** 	return opcode;
2416:src/keys.c    **** }
2417:src/keys.c    **** 
2418:src/keys.c    **** 
2419:src/keys.c    **** /* Handle YES/NO confirmations
2420:src/keys.c    ****  */
2421:src/keys.c    **** static int process_confirm(const keycode c) {
2422:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2423:src/keys.c    **** 	switch (c) {
2424:src/keys.c    **** #ifdef DM42
2425:src/keys.c    **** 	case K52:
2426:src/keys.c    **** #endif
2427:src/keys.c    **** 	case K63:			// Yes
2428:src/keys.c    **** 	  switch (State2.confirm) {
2429:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2430:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2431:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2432:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
ARM GAS  /tmp/ccQmaUTi.s 			page 48


2433:src/keys.c    **** 	  }
2434:src/keys.c    **** 	case K24:
2435:src/keys.c    **** #ifdef DM42
2436:src/keys.c    **** 	case K22:
2437:src/keys.c    **** #else
2438:src/keys.c    **** 	case K32:
2439:src/keys.c    **** #endif
2440:src/keys.c    **** 	  // No
2441:src/keys.c    **** 	  State2.confirm = 0;
2442:src/keys.c    **** 	  State2.digval = 0;
2443:src/keys.c    **** 	  break;
2444:src/keys.c    **** 	default:			// No state change
2445:src/keys.c    **** 	  break;
2446:src/keys.c    **** 	}
2447:src/keys.c    **** 	return STATE_UNFINISHED;
2448:src/keys.c    **** }
2449:src/keys.c    **** 
2450:src/keys.c    **** 
2451:src/keys.c    **** /*
2452:src/keys.c    ****  *  STATUS
2453:src/keys.c    ****  */
2454:src/keys.c    **** static int process_status(const keycode c) {
2455:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2456:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2457:src/keys.c    **** 
2458:src/keys.c    **** 	if (c == K_UP) {
2459:src/keys.c    **** 		if (--n < -2)
2460:src/keys.c    **** 			n = max;
2461:src/keys.c    **** 	}
2462:src/keys.c    **** 	else if (c == K_DOWN) {
2463:src/keys.c    **** 		if (++n > max)
2464:src/keys.c    **** 			n = -2;
2465:src/keys.c    **** 	}
2466:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2467:src/keys.c    **** 		State2.status = 0;
2468:src/keys.c    **** 		return STATE_UNFINISHED;
2469:src/keys.c    **** 	} 
2470:src/keys.c    **** 	else {
2471:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2472:src/keys.c    **** 		if (nn <= 9)
2473:src/keys.c    **** 			n = nn;
2474:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2475:src/keys.c    **** 			n = n == max ? 10 : max;
2476:src/keys.c    **** 		else if (nn != NO_REG)
2477:src/keys.c    **** 			n = 10; 
2478:src/keys.c    **** 	}
2479:src/keys.c    **** 	State2.status = n + 3;
2480:src/keys.c    **** 
2481:src/keys.c    **** 	return STATE_UNFINISHED;
2482:src/keys.c    **** }
2483:src/keys.c    **** 
2484:src/keys.c    **** 
2485:src/keys.c    **** /*
2486:src/keys.c    ****  *  CAT helper
2487:src/keys.c    ****  */
2488:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2488 64 is_stmt 1 view -0
ARM GAS  /tmp/ccQmaUTi.s 			page 49


 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2489:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2489 2 view .LVU58
2488:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2488 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2488:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2488 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2489 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2490:src/keys.c    **** 
2491:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2491 2 is_stmt 1 view .LVU62
 234              		.loc 1 2491 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2491 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2491 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2491 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2492:src/keys.c    **** }
 245              		.loc 1 2492 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2491:src/keys.c    **** }
 249              		.loc 1 2491 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2492 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2491:src/keys.c    **** }
 256              		.loc 1 2491 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2491:src/keys.c    **** }
 259              		.loc 1 2491 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2492 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2492 1 discriminator 5 view .LVU73
ARM GAS  /tmp/ccQmaUTi.s 			page 50


 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2493:src/keys.c    **** 
2494:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2494 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2494 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2494 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2495:src/keys.c    **** 	do {
 294              		.loc 1 2495 2 is_stmt 1 view .LVU77
2496:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2496 3 view .LVU78
2497:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2497 4 view .LVU79
2494:src/keys.c    **** 	do {
 297              		.loc 1 2494 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2497 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2498:src/keys.c    **** 				pc = do_inc(pc, 0);
2499:src/keys.c    **** 				if (PcWrapped)
2500:src/keys.c    **** 					break;
2501:src/keys.c    **** 			}
2502:src/keys.c    **** 			else
2503:src/keys.c    **** 				inc = 1;
2504:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2504 4 is_stmt 1 view .LVU82
 304              		.loc 1 2504 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2504 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2504 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
ARM GAS  /tmp/ccQmaUTi.s 			page 51


 313              	.L29:
 314              		.loc 1 2504 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2498:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2498 5 is_stmt 1 view .LVU87
2498:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2498 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2499:src/keys.c    **** 					break;
 323              		.loc 1 2499 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2498:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2498 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2499:src/keys.c    **** 					break;
 328              		.loc 1 2499 5 is_stmt 1 view .LVU91
2499:src/keys.c    **** 					break;
 329              		.loc 1 2499 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2505:src/keys.c    **** 				return pc;
2506:src/keys.c    **** 			}
2507:src/keys.c    **** 		}
2508:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2508 3 is_stmt 1 view .LVU93
 333              		.loc 1 2508 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2508 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2509:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2509 10 is_stmt 1 view .LVU96
 342              		.loc 1 2509 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2509 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2510:src/keys.c    **** 	return pc;
2511:src/keys.c    **** }
 351              		.loc 1 2511 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2511 1 view .LVU100
ARM GAS  /tmp/ccQmaUTi.s 			page 52


 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 514 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 515 2 view .LVU102
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 514 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 515 37 view .LVU104
 387 0002 3A4C     		ldr	r4, .L58
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 515 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D8B9     		cbnz	r0, .L40
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 515 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 515 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 517:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 517 3 is_stmt 1 view .LVU108
 517:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 517 18 is_stmt 0 view .LVU109
 397 000c 384A     		ldr	r2, .L58+4
 518:src/keys.c    **** 	}
 398              		.loc 1 518 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 517:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 517 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
ARM GAS  /tmp/ccQmaUTi.s 			page 53


 518:src/keys.c    **** 	}
 405              		.loc 1 518 3 is_stmt 1 view .LVU112
 406              	.L41:
 520:src/keys.c    **** 
 407              		.loc 1 520 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 522:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 522 2 view .LVU114
 523:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 523 2 view .LVU115
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 524 2 view .LVU116
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 549 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 524 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 549 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 524 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 423              		.loc 1 525 2 is_stmt 1 view .LVU121
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 527 2 view .LVU122
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 548 3 view .LVU123
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 548 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 549 3 is_stmt 1 view .LVU125
 550:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 550 3 view .LVU126
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 555 2 view .LVU127
 431              	.LBB232:
 432              	.LBI232:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 102 13 view .LVU128
 434              	.LBE232:
 103:src/keys.c    **** }
 435              		.loc 1 103 2 view .LVU129
 436              	.LVL37:
 437              	.LBB249:
 438              	.LBB233:
 439              	.LBI233:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 92 20 view .LVU130
 441              	.LBB234:
  93:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccQmaUTi.s 			page 54


 442              		.loc 1 93 2 view .LVU131
 443              	.LBB235:
 444              	.LBI235:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 84 13 view .LVU132
 446              	.LBB236:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 85 2 view .LVU133
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 85 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  86:src/keys.c    **** }
 451              		.loc 1 86 2 is_stmt 1 view .LVU135
 452              	.LBE236:
 453              	.LBE235:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 454              		.loc 1 94 2 view .LVU136
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 455              		.loc 1 94 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 458              		.loc 1 95 2 is_stmt 1 view .LVU138
  95:src/keys.c    **** 	return r;
 459              		.loc 1 95 19 is_stmt 0 view .LVU139
 460 003c 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 461              		.loc 1 96 2 is_stmt 1 view .LVU140
 462              	.LVL39:
  96:src/keys.c    **** }
 463              		.loc 1 96 2 is_stmt 0 view .LVU141
 464              	.LBE234:
 465              	.LBE233:
 466              	.LBE249:
 559:src/keys.c    **** 
 467              		.loc 1 559 1 view .LVU142
 468 003e 38BD     		pop	{r3, r4, r5, pc}
 469              	.LVL40:
 470              	.L40:
 520:src/keys.c    **** 
 471              		.loc 1 520 2 is_stmt 1 view .LVU143
 472 0040 FFF7FEFF 		bl	process_cmdline
 473              	.LVL41:
 522:src/keys.c    **** 	State2.registerlist = 0;
 474              		.loc 1 522 2 view .LVU144
 523:src/keys.c    **** 	State2.status = 0;
 475              		.loc 1 523 2 view .LVU145
 522:src/keys.c    **** 	State2.registerlist = 0;
 476              		.loc 1 522 19 is_stmt 0 view .LVU146
 477 0044 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 478              		.loc 1 524 16 view .LVU147
 479 0046 0022     		movs	r2, #0
 522:src/keys.c    **** 	State2.registerlist = 0;
 480              		.loc 1 522 19 view .LVU148
 481 0048 23F00C03 		bic	r3, r3, #12
ARM GAS  /tmp/ccQmaUTi.s 			page 55


 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 482              		.loc 1 527 2 view .LVU149
 483 004c 162D     		cmp	r5, #22
 522:src/keys.c    **** 	State2.registerlist = 0;
 484              		.loc 1 522 19 view .LVU150
 485 004e E375     		strb	r3, [r4, #23]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 486              		.loc 1 524 2 is_stmt 1 view .LVU151
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 487              		.loc 1 524 16 is_stmt 0 view .LVU152
 488 0050 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 489              		.loc 1 525 2 is_stmt 1 view .LVU153
 525:src/keys.c    **** 
 490              		.loc 1 525 19 is_stmt 0 view .LVU154
 491 0052 A273     		strb	r2, [r4, #14]
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 492              		.loc 1 527 2 is_stmt 1 view .LVU155
 493 0054 1DD0     		beq	.L42
 494 0056 172D     		cmp	r5, #23
 495 0058 07D1     		bne	.L56
 543:src/keys.c    **** 		break;
 496              		.loc 1 543 3 view .LVU156
 543:src/keys.c    **** 		break;
 497              		.loc 1 543 17 is_stmt 0 view .LVU157
 498 005a 0123     		movs	r3, #1
 499 005c 2373     		strb	r3, [r4, #12]
 544:src/keys.c    **** 
 500              		.loc 1 544 3 is_stmt 1 view .LVU158
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 501              		.loc 1 555 2 view .LVU159
 502              	.LBB250:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 503              		.loc 1 102 13 view .LVU160
 504              	.LBE250:
 103:src/keys.c    **** }
 505              		.loc 1 103 2 view .LVU161
 506              	.LVL42:
 507              	.LBB251:
 508              	.LBB246:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 509              		.loc 1 92 20 view .LVU162
 510              	.LBB243:
  93:src/keys.c    **** 	State2.shifts = shift;
 511              		.loc 1 93 2 view .LVU163
 512              	.LBB240:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 513              		.loc 1 84 13 view .LVU164
 514              	.LBB237:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 515              		.loc 1 85 2 view .LVU165
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 516              		.loc 1 85 18 is_stmt 0 view .LVU166
 517 005e FFF7FEFF 		bl	shift_down
 518              	.LVL43:
  86:src/keys.c    **** }
 519              		.loc 1 86 2 is_stmt 1 view .LVU167
ARM GAS  /tmp/ccQmaUTi.s 			page 56


 520              	.LBE237:
 521              	.LBE240:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 522              		.loc 1 94 2 view .LVU168
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 523              		.loc 1 94 16 is_stmt 0 view .LVU169
 524 0062 0023     		movs	r3, #0
 525 0064 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 526              		.loc 1 95 2 is_stmt 1 view .LVU170
  95:src/keys.c    **** 	return r;
 527              		.loc 1 95 19 is_stmt 0 view .LVU171
 528 0066 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 529              		.loc 1 96 2 is_stmt 1 view .LVU172
 530              	.LVL44:
  96:src/keys.c    **** }
 531              		.loc 1 96 2 is_stmt 0 view .LVU173
 532              	.LBE243:
 533              	.LBE246:
 534              	.LBE251:
 559:src/keys.c    **** 
 535              		.loc 1 559 1 view .LVU174
 536 0068 38BD     		pop	{r3, r4, r5, pc}
 537              	.L56:
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 538              		.loc 1 527 2 view .LVU175
 539 006a 152D     		cmp	r5, #21
 540 006c 1ED1     		bne	.L44
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 541              		.loc 1 530 3 is_stmt 1 view .LVU176
 531:src/keys.c    **** 		break;
 542              		.loc 1 531 41 is_stmt 0 view .LVU177
 543 006e 2049     		ldr	r1, .L58+4
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 544              		.loc 1 530 20 view .LVU178
 545 0070 DBB2     		uxtb	r3, r3
 531:src/keys.c    **** 		break;
 546              		.loc 1 531 41 view .LVU179
 547 0072 0968     		ldr	r1, [r1]
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 548              		.loc 1 530 20 view .LVU180
 549 0074 43F00403 		orr	r3, r3, #4
 550 0078 E375     		strb	r3, [r4, #23]
 531:src/keys.c    **** 		break;
 551              		.loc 1 531 3 is_stmt 1 view .LVU181
 531:src/keys.c    **** 		break;
 552              		.loc 1 531 19 is_stmt 0 view .LVU182
 553 007a B1F8EC07 		ldrh	r0, [r1, #2028]
 554 007e 1146     		mov	r1, r2
 555 0080 FFF7FEFF 		bl	advance_to_next_label
 556              	.LVL45:
 531:src/keys.c    **** 		break;
 557              		.loc 1 531 17 view .LVU183
 558 0084 2081     		strh	r0, [r4, #8]	@ movhi
 532:src/keys.c    **** 	
 559              		.loc 1 532 3 is_stmt 1 view .LVU184
ARM GAS  /tmp/ccQmaUTi.s 			page 57


 560              	.L45:
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 561              		.loc 1 555 2 view .LVU185
 562              	.LBB252:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 563              		.loc 1 102 13 view .LVU186
 564              	.LBE252:
 103:src/keys.c    **** }
 565              		.loc 1 103 2 view .LVU187
 566              	.LVL46:
 567              	.LBB253:
 568              	.LBB247:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 569              		.loc 1 92 20 view .LVU188
 570              	.LBB244:
  93:src/keys.c    **** 	State2.shifts = shift;
 571              		.loc 1 93 2 view .LVU189
 572              	.LBB241:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 573              		.loc 1 84 13 view .LVU190
 574              	.LBB238:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 575              		.loc 1 85 2 view .LVU191
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 576              		.loc 1 85 18 is_stmt 0 view .LVU192
 577 0086 FFF7FEFF 		bl	shift_down
 578              	.LVL47:
  86:src/keys.c    **** }
 579              		.loc 1 86 2 is_stmt 1 view .LVU193
 580              	.LBE238:
 581              	.LBE241:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 582              		.loc 1 94 2 view .LVU194
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 583              		.loc 1 94 16 is_stmt 0 view .LVU195
 584 008a 0023     		movs	r3, #0
 585 008c 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 586              		.loc 1 95 2 is_stmt 1 view .LVU196
  95:src/keys.c    **** 	return r;
 587              		.loc 1 95 19 is_stmt 0 view .LVU197
 588 008e 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 589              		.loc 1 96 2 is_stmt 1 view .LVU198
 590              	.LVL48:
  96:src/keys.c    **** }
 591              		.loc 1 96 2 is_stmt 0 view .LVU199
 592              	.LBE244:
 593              	.LBE247:
 594              	.LBE253:
 559:src/keys.c    **** 
 595              		.loc 1 559 1 view .LVU200
 596 0090 38BD     		pop	{r3, r4, r5, pc}
 597              	.L42:
 536:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 536 3 is_stmt 1 view .LVU201
 536:src/keys.c    **** 		State2.digval = regX_idx;
ARM GAS  /tmp/ccQmaUTi.s 			page 58


 599              		.loc 1 536 23 is_stmt 0 view .LVU202
 600 0092 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 538:src/keys.c    **** 		break;
 601              		.loc 1 538 18 view .LVU203
 602 0094 A272     		strb	r2, [r4, #10]
 536:src/keys.c    **** 		State2.digval = regX_idx;
 603              		.loc 1 536 23 view .LVU204
 604 0096 43F00803 		orr	r3, r3, #8
 537:src/keys.c    **** 		State2.digval2 = 0;
 605              		.loc 1 537 17 view .LVU205
 606 009a 6422     		movs	r2, #100
 536:src/keys.c    **** 		State2.digval = regX_idx;
 607              		.loc 1 536 23 view .LVU206
 608 009c E375     		strb	r3, [r4, #23]
 537:src/keys.c    **** 		State2.digval2 = 0;
 609              		.loc 1 537 3 is_stmt 1 view .LVU207
 537:src/keys.c    **** 		State2.digval2 = 0;
 610              		.loc 1 537 17 is_stmt 0 view .LVU208
 611 009e 2281     		strh	r2, [r4, #8]	@ movhi
 538:src/keys.c    **** 		break;
 612              		.loc 1 538 3 is_stmt 1 view .LVU209
 539:src/keys.c    **** 
 613              		.loc 1 539 3 view .LVU210
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 614              		.loc 1 555 2 view .LVU211
 615              	.LBB254:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 616              		.loc 1 102 13 view .LVU212
 617              	.LBE254:
 103:src/keys.c    **** }
 618              		.loc 1 103 2 view .LVU213
 619              	.LVL49:
 620              	.LBB255:
 621              	.LBB248:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 622              		.loc 1 92 20 view .LVU214
 623              	.LBB245:
  93:src/keys.c    **** 	State2.shifts = shift;
 624              		.loc 1 93 2 view .LVU215
 625              	.LBB242:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 626              		.loc 1 84 13 view .LVU216
 627              	.LBB239:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 628              		.loc 1 85 2 view .LVU217
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 629              		.loc 1 85 18 is_stmt 0 view .LVU218
 630 00a0 FFF7FEFF 		bl	shift_down
 631              	.LVL50:
  86:src/keys.c    **** }
 632              		.loc 1 86 2 is_stmt 1 view .LVU219
 633              	.LBE239:
 634              	.LBE242:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 635              		.loc 1 94 2 view .LVU220
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 636              		.loc 1 94 16 is_stmt 0 view .LVU221
ARM GAS  /tmp/ccQmaUTi.s 			page 59


 637 00a4 0023     		movs	r3, #0
 638 00a6 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 639              		.loc 1 95 2 is_stmt 1 view .LVU222
  95:src/keys.c    **** 	return r;
 640              		.loc 1 95 19 is_stmt 0 view .LVU223
 641 00a8 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 642              		.loc 1 96 2 is_stmt 1 view .LVU224
 643              	.LVL51:
  96:src/keys.c    **** }
 644              		.loc 1 96 2 is_stmt 0 view .LVU225
 645              	.LBE245:
 646              	.LBE248:
 647              	.LBE255:
 559:src/keys.c    **** 
 648              		.loc 1 559 1 view .LVU226
 649 00aa 38BD     		pop	{r3, r4, r5, pc}
 650              	.L44:
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 651              		.loc 1 548 3 is_stmt 1 view .LVU227
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 652              		.loc 1 549 44 is_stmt 0 view .LVU228
 653 00ac 022D     		cmp	r5, #2
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 654              		.loc 1 548 20 view .LVU229
 655 00ae A573     		strb	r5, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 656              		.loc 1 549 3 is_stmt 1 view .LVU230
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 657              		.loc 1 549 44 is_stmt 0 view .LVU231
 658 00b0 12D1     		bne	.L57
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 659              		.loc 1 549 16 view .LVU232
 660 00b2 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 661 00b4 43F00203 		orr	r3, r3, #2
 662 00b8 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 663              		.loc 1 550 3 is_stmt 1 view .LVU233
 664              	.L49:
 550:src/keys.c    **** 			// Different catalogue, reset position
 665              		.loc 1 550 32 is_stmt 0 discriminator 1 view .LVU234
 666 00ba 0D4B     		ldr	r3, .L58+4
 667 00bc 1A68     		ldr	r2, [r3]
 550:src/keys.c    **** 			// Different catalogue, reset position
 668              		.loc 1 550 37 discriminator 1 view .LVU235
 669 00be 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 550:src/keys.c    **** 			// Different catalogue, reset position
 670              		.loc 1 550 29 discriminator 1 view .LVU236
 671 00c2 03F01F03 		and	r3, r3, #31
 672 00c6 AB42     		cmp	r3, r5
 673 00c8 DDD0     		beq	.L45
 552:src/keys.c    **** 		}
 674              		.loc 1 552 4 is_stmt 1 view .LVU237
 552:src/keys.c    **** 		}
 675              		.loc 1 552 17 is_stmt 0 view .LVU238
 676 00ca B2F8DC37 		ldrh	r3, [r2, #2012]
ARM GAS  /tmp/ccQmaUTi.s 			page 60


 677 00ce 6FF34B13 		bfc	r3, #5, #7
 678 00d2 A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 679 00d6 D6E7     		b	.L45
 680              	.L57:
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 681              		.loc 1 549 44 view .LVU239
 682 00d8 A5F11101 		sub	r1, r5, #17
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 683              		.loc 1 549 16 view .LVU240
 684 00dc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 685              		.loc 1 549 44 view .LVU241
 686 00de 4A42     		rsbs	r2, r1, #0
 687 00e0 4A41     		adcs	r2, r2, r1
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 688              		.loc 1 549 16 view .LVU242
 689 00e2 62F34103 		bfi	r3, r2, #1, #1
 690 00e6 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 691              		.loc 1 550 3 is_stmt 1 view .LVU243
 692 00e8 E7E7     		b	.L49
 693              	.L59:
 694 00ea 00BF     		.align	2
 695              	.L58:
 696 00ec 00000000 		.word	StateWhileOn
 697 00f0 00000000 		.word	main_ram
 698              		.cfi_endproc
 699              	.LFE12:
 701              		.section	.text.advance_to_previous_label,"ax",%progbits
 702              		.align	1
 703              		.p2align 2,,3
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	advance_to_previous_label:
 710              	.LVL52:
 711              	.LFB51:
2512:src/keys.c    **** 
2513:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 712              		.loc 1 2513 80 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		.loc 1 2513 80 is_stmt 0 view .LVU245
 717 0000 70B5     		push	{r4, r5, r6, lr}
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 4, -16
 720              		.cfi_offset 5, -12
 721              		.cfi_offset 6, -8
 722              		.cfi_offset 14, -4
 723 0002 124E     		ldr	r6, .L69
 724              		.loc 1 2513 80 view .LVU246
 725 0004 0446     		mov	r4, r0
 726 0006 0D46     		mov	r5, r1
 727              	.LVL53:
 728              	.L61:
ARM GAS  /tmp/ccQmaUTi.s 			page 61


2514:src/keys.c    **** 	do {
 729              		.loc 1 2514 2 is_stmt 1 view .LVU247
2515:src/keys.c    **** 		for (;;) {
 730              		.loc 1 2515 3 view .LVU248
2516:src/keys.c    **** 			pc = do_dec(pc, 0);
 731              		.loc 1 2516 4 view .LVU249
 732              		.loc 1 2516 9 is_stmt 0 view .LVU250
 733 0008 2046     		mov	r0, r4
 734 000a 0021     		movs	r1, #0
 735 000c FFF7FEFF 		bl	do_dec
 736              	.LVL54:
2517:src/keys.c    **** 			if (PcWrapped)
2518:src/keys.c    **** 				break;
2519:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 737              		.loc 1 2519 4 is_stmt 1 view .LVU251
2520:src/keys.c    **** 				return pc;
2521:src/keys.c    **** 			}
2522:src/keys.c    **** 		}
2523:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 738              		.loc 1 2523 3 view .LVU252
 739              		.loc 1 2523 8 is_stmt 0 view .LVU253
 740 0010 20F47F53 		bic	r3, r0, #16320
 741 0014 23F03F03 		bic	r3, r3, #63
2517:src/keys.c    **** 			if (PcWrapped)
 742              		.loc 1 2517 7 view .LVU254
 743 0018 3268     		ldr	r2, [r6]
 744              		.loc 1 2523 8 view .LVU255
 745 001a A3F58043 		sub	r3, r3, #16384
2524:src/keys.c    **** 		pc = do_dec(pc, 0);
 746              		.loc 1 2524 8 view .LVU256
 747 001e 0021     		movs	r1, #0
2516:src/keys.c    **** 			if (PcWrapped)
 748              		.loc 1 2516 9 view .LVU257
 749 0020 0446     		mov	r4, r0
 750              	.LVL55:
2517:src/keys.c    **** 				break;
 751              		.loc 1 2517 4 is_stmt 1 view .LVU258
2523:src/keys.c    **** 		pc = do_dec(pc, 0);
 752              		.loc 1 2523 8 is_stmt 0 view .LVU259
 753 0022 9BB2     		uxth	r3, r3
 754              	.LVL56:
 755              		.loc 1 2524 3 is_stmt 1 view .LVU260
2517:src/keys.c    **** 				break;
 756              		.loc 1 2517 7 is_stmt 0 view .LVU261
 757 0024 32B9     		cbnz	r2, .L62
2519:src/keys.c    **** 				return pc;
 758              		.loc 1 2519 8 view .LVU262
 759 0026 2946     		mov	r1, r5
 760 0028 FFF7FEFF 		bl	is_label_or_end_at
 761              	.LVL57:
2519:src/keys.c    **** 				return pc;
 762              		.loc 1 2519 7 view .LVU263
 763 002c 0028     		cmp	r0, #0
 764 002e EBD0     		beq	.L61
2525:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2526:src/keys.c    **** 	return pc;
2527:src/keys.c    **** }
ARM GAS  /tmp/ccQmaUTi.s 			page 62


 765              		.loc 1 2527 1 view .LVU264
 766 0030 2046     		mov	r0, r4
 767 0032 70BD     		pop	{r4, r5, r6, pc}
 768              	.LVL58:
 769              	.L62:
2524:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 770              		.loc 1 2524 8 view .LVU265
 771 0034 43F00100 		orr	r0, r3, #1
 772 0038 FFF7FEFF 		bl	do_dec
 773              	.LVL59:
2525:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 774              		.loc 1 2525 13 view .LVU266
 775 003c 2946     		mov	r1, r5
2524:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 776              		.loc 1 2524 8 view .LVU267
 777 003e 0446     		mov	r4, r0
 778              	.LVL60:
2525:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 779              		.loc 1 2525 10 is_stmt 1 view .LVU268
2525:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 780              		.loc 1 2525 13 is_stmt 0 view .LVU269
 781 0040 FFF7FEFF 		bl	is_label_or_end_at
 782              	.LVL61:
2525:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 783              		.loc 1 2525 2 view .LVU270
 784 0044 0028     		cmp	r0, #0
 785 0046 DFD0     		beq	.L61
 786              		.loc 1 2527 1 view .LVU271
 787 0048 2046     		mov	r0, r4
 788 004a 70BD     		pop	{r4, r5, r6, pc}
 789              	.LVL62:
 790              	.L70:
 791              		.loc 1 2527 1 view .LVU272
 792              		.align	2
 793              	.L69:
 794 004c 00000000 		.word	PcWrapped
 795              		.cfi_endproc
 796              	.LFE51:
 798              		.section	.text.check_confirm.part.0,"ax",%progbits
 799              		.align	1
 800              		.p2align 2,,3
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	check_confirm.part.0:
 807              	.LVL63:
 808              	.LFB59:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 809              		.loc 1 619 12 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LBB256:
 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 815              		.loc 1 621 3 view .LVU274
ARM GAS  /tmp/ccQmaUTi.s 			page 63


 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 816              		.loc 1 622 3 view .LVU275
 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 817              		.loc 1 621 13 is_stmt 0 view .LVU276
 818 0000 C3B2     		uxtb	r3, r0
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 819              		.loc 1 622 25 view .LVU277
 820 0002 A3F14102 		sub	r2, r3, #65
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 821              		.loc 1 622 6 view .LVU278
 822 0006 032A     		cmp	r2, #3
 823 0008 06D9     		bls	.L74
 630:src/keys.c    **** #endif
 824              		.loc 1 630 7 is_stmt 1 view .LVU279
 630:src/keys.c    **** #endif
 825              		.loc 1 630 29 is_stmt 0 view .LVU280
 826 000a AD3B     		subs	r3, r3, #173
 630:src/keys.c    **** #endif
 827              		.loc 1 630 10 view .LVU281
 828 000c 052B     		cmp	r3, #5
 829 000e 02D8     		bhi	.L73
 640:src/keys.c    **** 		}
 830              		.loc 1 640 4 is_stmt 1 view .LVU282
 640:src/keys.c    **** 		}
 831              		.loc 1 640 20 is_stmt 0 view .LVU283
 832 0010 054B     		ldr	r3, .L75
 833 0012 0122     		movs	r2, #1
 834 0014 1A60     		str	r2, [r3]
 835              	.L73:
 836              	.LBE256:
 644:src/keys.c    **** 
 837              		.loc 1 644 1 view .LVU284
 838 0016 7047     		bx	lr
 839              	.L74:
 840              	.LBB257:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 841              		.loc 1 623 4 is_stmt 1 view .LVU285
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 842              		.loc 1 623 19 is_stmt 0 view .LVU286
 843 0018 044B     		ldr	r3, .L75+4
 844 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 845              		.loc 1 623 35 view .LVU287
 846 001c 4038     		subs	r0, r0, #64
 847              	.LVL64:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 848              		.loc 1 623 19 view .LVU288
 849 001e 60F30202 		bfi	r2, r0, #0, #3
 850 0022 1A75     		strb	r2, [r3, #20]
 624:src/keys.c    **** 		}
 851              		.loc 1 624 4 is_stmt 1 view .LVU289
 624:src/keys.c    **** 		}
 852              		.loc 1 624 11 is_stmt 0 view .LVU290
 853 0024 3320     		movs	r0, #51
 854              	.LVL65:
 624:src/keys.c    **** 		}
 855              		.loc 1 624 11 view .LVU291
ARM GAS  /tmp/ccQmaUTi.s 			page 64


 856 0026 7047     		bx	lr
 857              	.L76:
 858              		.align	2
 859              	.L75:
 860 0028 00000000 		.word	NonProgrammable
 861 002c 00000000 		.word	StateWhileOn
 862              	.LBE257:
 863              		.cfi_endproc
 864              	.LFE59:
 866              		.section	.text.init_arg.part.0,"ax",%progbits
 867              		.align	1
 868              		.p2align 2,,3
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	init_arg.part.0:
 875              	.LVL66:
 876              	.LFB61:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 877              		.loc 1 501 13 is_stmt 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 504:src/keys.c    **** 	State2.ind = 0;
 882              		.loc 1 504 2 view .LVU293
 504:src/keys.c    **** 	State2.ind = 0;
 883              		.loc 1 504 10 is_stmt 0 view .LVU294
 884 0000 084B     		ldr	r3, .L78
 509:src/keys.c    **** 	State2.local = 0;
 885              		.loc 1 509 13 view .LVU295
 886 0002 5969     		ldr	r1, [r3, #20]
 504:src/keys.c    **** 	State2.ind = 0;
 887              		.loc 1 504 10 view .LVU296
 888 0004 D877     		strb	r0, [r3, #31]
 505:src/keys.c    **** 	State2.digval = 0;
 889              		.loc 1 505 2 is_stmt 1 view .LVU297
 506:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 506 2 view .LVU298
 509:src/keys.c    **** 	State2.local = 0;
 891              		.loc 1 509 13 is_stmt 0 view .LVU299
 892 0006 21F40F11 		bic	r1, r1, #2342912
 893 000a 8628     		cmp	r0, #134
 894 000c 0CBF     		ite	eq
 895 000e 4FF40812 		moveq	r2, #2228224
 896 0012 4FF40012 		movne	r2, #2097152
 897 0016 0A43     		orrs	r2, r2, r1
 506:src/keys.c    **** 	State2.numdigit = 0;
 898              		.loc 1 506 16 view .LVU300
 899 0018 0021     		movs	r1, #0
 509:src/keys.c    **** 	State2.local = 0;
 900              		.loc 1 509 13 view .LVU301
 901 001a 5A61     		str	r2, [r3, #20]
 506:src/keys.c    **** 	State2.numdigit = 0;
 902              		.loc 1 506 16 view .LVU302
 903 001c 1981     		strh	r1, [r3, #8]	@ movhi
ARM GAS  /tmp/ccQmaUTi.s 			page 65


 507:src/keys.c    **** 	State2.rarg = 1;
 904              		.loc 1 507 2 is_stmt 1 view .LVU303
 507:src/keys.c    **** 	State2.rarg = 1;
 905              		.loc 1 507 18 is_stmt 0 view .LVU304
 906 001e D972     		strb	r1, [r3, #11]
 508:src/keys.c    **** 	State2.dot = 0;
 907              		.loc 1 508 2 is_stmt 1 view .LVU305
 509:src/keys.c    **** 	State2.local = 0;
 908              		.loc 1 509 2 view .LVU306
 510:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 909              		.loc 1 510 2 view .LVU307
 511:src/keys.c    **** }
 910              		.loc 1 511 2 view .LVU308
 512:src/keys.c    **** 
 911              		.loc 1 512 1 is_stmt 0 view .LVU309
 912 0020 7047     		bx	lr
 913              	.L79:
 914 0022 00BF     		.align	2
 915              	.L78:
 916 0024 00000000 		.word	StateWhileOn
 917              		.cfi_endproc
 918              	.LFE61:
 920              		.section	.text.reset_arg,"ax",%progbits
 921              		.align	1
 922              		.p2align 2,,3
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu fpv4-sp-d16
 928              	reset_arg:
 929              	.LFB29:
1485:src/keys.c    **** 	init_arg((enum rarg) 0);
 930              		.loc 1 1485 29 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
1486:src/keys.c    **** 	State2.rarg = 0;
 934              		.loc 1 1486 2 view .LVU311
 935              	.LVL67:
 936              	.LBB258:
 937              	.LBI258:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 938              		.loc 1 501 13 view .LVU312
 939              	.LBB259:
 502:src/keys.c    **** 		return;
 940              		.loc 1 502 2 view .LVU313
 941              	.LBE259:
 942              	.LBE258:
1485:src/keys.c    **** 	init_arg((enum rarg) 0);
 943              		.loc 1 1485 29 is_stmt 0 view .LVU314
 944 0000 08B5     		push	{r3, lr}
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 3, -8
 947              		.cfi_offset 14, -4
 948              	.LBB261:
 949              	.LBB260:
 502:src/keys.c    **** 		return;
ARM GAS  /tmp/ccQmaUTi.s 			page 66


 950              		.loc 1 502 6 view .LVU315
 951 0002 FFF7FEFF 		bl	is_bad_cmdline
 952              	.LVL68:
 502:src/keys.c    **** 		return;
 953              		.loc 1 502 5 view .LVU316
 954 0006 08B9     		cbnz	r0, .L81
 955 0008 FFF7FEFF 		bl	init_arg.part.0
 956              	.LVL69:
 957              	.L81:
 502:src/keys.c    **** 		return;
 958              		.loc 1 502 5 view .LVU317
 959              	.LBE260:
 960              	.LBE261:
1487:src/keys.c    **** }
 961              		.loc 1 1487 2 is_stmt 1 view .LVU318
1487:src/keys.c    **** }
 962              		.loc 1 1487 14 is_stmt 0 view .LVU319
 963 000c 024B     		ldr	r3, .L83
 964 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 965 0010 6FF34512 		bfc	r2, #5, #1
 966 0014 9A75     		strb	r2, [r3, #22]
1488:src/keys.c    **** 
 967              		.loc 1 1488 1 view .LVU320
 968 0016 08BD     		pop	{r3, pc}
 969              	.L84:
 970              		.align	2
 971              	.L83:
 972 0018 00000000 		.word	StateWhileOn
 973              		.cfi_endproc
 974              	.LFE29:
 976              		.section	.text.arg_eval,"ax",%progbits
 977              		.align	1
 978              		.p2align 2,,3
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 982              		.fpu fpv4-sp-d16
 984              	arg_eval:
 985              	.LVL70:
 986              	.LFB30:
1490:src/keys.c    **** 	const unsigned int base = CmdBase;
 987              		.loc 1 1490 39 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
1491:src/keys.c    **** 	int r = RARG(base, val 
 991              		.loc 1 1491 2 view .LVU322
1491:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1491 28 is_stmt 0 view .LVU323
 993 0000 1C4B     		ldr	r3, .L106
1490:src/keys.c    **** 	const unsigned int base = CmdBase;
 994              		.loc 1 1490 39 view .LVU324
 995 0002 70B5     		push	{r4, r5, r6, lr}
 996              		.cfi_def_cfa_offset 16
 997              		.cfi_offset 4, -16
 998              		.cfi_offset 5, -12
 999              		.cfi_offset 6, -8
ARM GAS  /tmp/ccQmaUTi.s 			page 67


 1000              		.cfi_offset 14, -4
1492:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1492 10 view .LVU325
 1002 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 1003 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1491:src/keys.c    **** 	int r = RARG(base, val 
 1004              		.loc 1 1491 21 view .LVU326
 1005 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 1006              	.LVL71:
1492:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1492 2 is_stmt 1 view .LVU327
1492:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1008              		.loc 1 1492 10 is_stmt 0 view .LVU328
 1009 000a EE07     		lsls	r6, r5, #31
1495:src/keys.c    **** 
 1010              		.loc 1 1495 30 view .LVU329
 1011 000c 1A4E     		ldr	r6, .L106+4
 1012 000e 3668     		ldr	r6, [r6]
1492:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1013              		.loc 1 1492 10 view .LVU330
 1014 0010 01F08003 		and	r3, r1, #128
 1015 0014 0344     		add	r3, r3, r0
1495:src/keys.c    **** 
 1016              		.loc 1 1495 30 view .LVU331
 1017 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1492:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1018              		.loc 1 1492 10 view .LVU332
 1019 001a 02F12004 		add	r4, r2, #32
 1020 001e 48BF     		it	mi
 1021 0020 7033     		addmi	r3, r3, #112
 1022 0022 2402     		lsls	r4, r4, #8
 1023 0024 1C43     		orrs	r4, r4, r3
 1024              	.LVL72:
1495:src/keys.c    **** 
 1025              		.loc 1 1495 2 is_stmt 1 view .LVU333
1495:src/keys.c    **** 
 1026              		.loc 1 1495 77 is_stmt 0 view .LVU334
 1027 0026 3307     		lsls	r3, r6, #28
 1028 0028 1DD5     		bpl	.L92
1495:src/keys.c    **** 
 1029              		.loc 1 1495 77 discriminator 2 view .LVU335
 1030 002a 15F0400F 		tst	r5, #64
 1031 002e 0CBF     		ite	eq
 1032 0030 0425     		moveq	r5, #4
 1033 0032 0825     		movne	r5, #8
 1034              	.L87:
 1035              	.LVL73:
1497:src/keys.c    **** 		/*
 1036              		.loc 1 1497 2 is_stmt 1 discriminator 6 view .LVU336
1497:src/keys.c    **** 		/*
 1037              		.loc 1 1497 5 is_stmt 0 discriminator 6 view .LVU337
 1038 0034 0E06     		lsls	r6, r1, #24
 1039 0036 12D4     		bmi	.L88
1512:src/keys.c    **** 			// Disallow odd complex register > 98
 1040              		.loc 1 1512 3 is_stmt 1 view .LVU338
1512:src/keys.c    **** 			// Disallow odd complex register > 98
 1041              		.loc 1 1512 20 is_stmt 0 view .LVU339
ARM GAS  /tmp/ccQmaUTi.s 			page 68


 1042 0038 104B     		ldr	r3, .L106+8
 1043 003a 03EB0213 		add	r3, r3, r2, lsl #4
 1044 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1512:src/keys.c    **** 			// Disallow odd complex register > 98
 1045              		.loc 1 1512 6 view .LVU340
 1046 0040 D906     		lsls	r1, r3, #27
 1047 0042 09D5     		bpl	.L89
1512:src/keys.c    **** 			// Disallow odd complex register > 98
 1048              		.loc 1 1512 27 discriminator 1 view .LVU341
 1049 0044 6228     		cmp	r0, #98
 1050 0046 07D9     		bls	.L89
1512:src/keys.c    **** 			// Disallow odd complex register > 98
 1051              		.loc 1 1512 52 discriminator 2 view .LVU342
 1052 0048 C307     		lsls	r3, r0, #31
 1053 004a 02D4     		bmi	.L96
1516:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1054              		.loc 1 1516 3 is_stmt 1 view .LVU343
1516:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1055              		.loc 1 1516 28 is_stmt 0 view .LVU344
 1056 004c 223A     		subs	r2, r2, #34
 1057              	.LVL74:
1516:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1058              		.loc 1 1516 6 view .LVU345
 1059 004e 012A     		cmp	r2, #1
 1060 0050 05D8     		bhi	.L88
 1061              	.LVL75:
 1062              	.L96:
1514:src/keys.c    **** #endif
 1063              		.loc 1 1514 11 view .LVU346
 1064 0052 3324     		movs	r4, #51
 1065              	.LVL76:
1523:src/keys.c    **** 
 1066              		.loc 1 1523 1 view .LVU347
 1067 0054 2046     		mov	r0, r4
 1068              	.LVL77:
1523:src/keys.c    **** 
 1069              		.loc 1 1523 1 view .LVU348
 1070 0056 70BD     		pop	{r4, r5, r6, pc}
 1071              	.LVL78:
 1072              	.L89:
1516:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1516 3 is_stmt 1 view .LVU349
1516:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1074              		.loc 1 1516 28 is_stmt 0 view .LVU350
 1075 0058 223A     		subs	r2, r2, #34
 1076              	.LVL79:
1516:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1077              		.loc 1 1516 6 view .LVU351
 1078 005a 012A     		cmp	r2, #1
 1079 005c 05D9     		bls	.L105
 1080              	.LVL80:
 1081              	.L88:
1521:src/keys.c    **** 	return r;
 1082              		.loc 1 1521 2 is_stmt 1 view .LVU352
 1083 005e FFF7FEFF 		bl	reset_arg
 1084              	.LVL81:
1522:src/keys.c    **** }
ARM GAS  /tmp/ccQmaUTi.s 			page 69


 1085              		.loc 1 1522 2 view .LVU353
1523:src/keys.c    **** 
 1086              		.loc 1 1523 1 is_stmt 0 view .LVU354
 1087 0062 2046     		mov	r0, r4
 1088 0064 70BD     		pop	{r4, r5, r6, pc}
 1089              	.LVL82:
 1090              	.L92:
1495:src/keys.c    **** 
 1091              		.loc 1 1495 77 view .LVU355
 1092 0066 0425     		movs	r5, #4
 1093 0068 E4E7     		b	.L87
 1094              	.LVL83:
 1095              	.L105:
1516:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1516 73 discriminator 1 view .LVU356
 1097 006a C5F16405 		rsb	r5, r5, #100
 1098              	.LVL84:
1516:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1099              		.loc 1 1516 52 discriminator 1 view .LVU357
 1100 006e 8542     		cmp	r5, r0
 1101 0070 F5D2     		bcs	.L88
 1102 0072 EEE7     		b	.L96
 1103              	.L107:
 1104              		.align	2
 1105              	.L106:
 1106 0074 00000000 		.word	StateWhileOn
 1107 0078 00000000 		.word	main_ram
 1108 007c 00000000 		.word	argcmds
 1109              		.cfi_endproc
 1110              	.LFE30:
 1112              		.section	.text.process_arg_shuffle,"ax",%progbits
 1113              		.align	1
 1114              		.p2align 2,,3
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv4-sp-d16
 1120              	process_arg_shuffle:
 1121              	.LVL85:
 1122              	.LFB36:
1637:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1123              		.loc 1 1637 39 is_stmt 1 view -0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
1638:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1638 2 view .LVU359
1637:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1129              		.loc 1 1637 39 is_stmt 0 view .LVU360
 1130 0000 10B4     		push	{r4}
 1131              		.cfi_def_cfa_offset 4
 1132              		.cfi_offset 4, -4
1638:src/keys.c    **** 	if (State2.numdigit < 4)
 1133              		.loc 1 1638 31 view .LVU361
 1134 0002 0A4A     		ldr	r2, .L111
 1135 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
ARM GAS  /tmp/ccQmaUTi.s 			page 70


1638:src/keys.c    **** 	if (State2.numdigit < 4)
 1136              		.loc 1 1638 16 view .LVU362
 1137 0006 1189     		ldrh	r1, [r2, #8]
1638:src/keys.c    **** 	if (State2.numdigit < 4)
 1138              		.loc 1 1638 43 view .LVU363
 1139 0008 5C00     		lsls	r4, r3, #1
1638:src/keys.c    **** 	if (State2.numdigit < 4)
 1140              		.loc 1 1638 21 view .LVU364
 1141 000a A040     		lsls	r0, r0, r4
 1142              	.LVL86:
1638:src/keys.c    **** 	if (State2.numdigit < 4)
 1143              		.loc 1 1638 40 view .LVU365
 1144 000c 0133     		adds	r3, r3, #1
 1145 000e DBB2     		uxtb	r3, r3
1638:src/keys.c    **** 	if (State2.numdigit < 4)
 1146              		.loc 1 1638 16 view .LVU366
 1147 0010 0844     		add	r0, r0, r1
 1148 0012 80B2     		uxth	r0, r0
1639:src/keys.c    **** 		return STATE_UNFINISHED;
 1149              		.loc 1 1639 5 view .LVU367
 1150 0014 032B     		cmp	r3, #3
1638:src/keys.c    **** 	if (State2.numdigit < 4)
 1151              		.loc 1 1638 40 view .LVU368
 1152 0016 D372     		strb	r3, [r2, #11]
1638:src/keys.c    **** 	if (State2.numdigit < 4)
 1153              		.loc 1 1638 16 view .LVU369
 1154 0018 1081     		strh	r0, [r2, #8]	@ movhi
1639:src/keys.c    **** 		return STATE_UNFINISHED;
 1155              		.loc 1 1639 2 is_stmt 1 view .LVU370
1639:src/keys.c    **** 		return STATE_UNFINISHED;
 1156              		.loc 1 1639 5 is_stmt 0 view .LVU371
 1157 001a 03D9     		bls	.L109
1641:src/keys.c    **** }
 1158              		.loc 1 1641 2 is_stmt 1 view .LVU372
1642:src/keys.c    **** 
 1159              		.loc 1 1642 1 is_stmt 0 view .LVU373
 1160 001c 5DF8044B 		ldr	r4, [sp], #4
 1161              		.cfi_remember_state
 1162              		.cfi_restore 4
 1163              		.cfi_def_cfa_offset 0
1641:src/keys.c    **** }
 1164              		.loc 1 1641 9 view .LVU374
 1165 0020 FFF7FEBF 		b	arg_eval
 1166              	.LVL87:
 1167              	.L109:
 1168              		.cfi_restore_state
1642:src/keys.c    **** 
 1169              		.loc 1 1642 1 view .LVU375
 1170 0024 3320     		movs	r0, #51
 1171 0026 5DF8044B 		ldr	r4, [sp], #4
 1172              		.cfi_restore 4
 1173              		.cfi_def_cfa_offset 0
 1174 002a 7047     		bx	lr
 1175              	.L112:
 1176              		.align	2
 1177              	.L111:
 1178 002c 00000000 		.word	StateWhileOn
ARM GAS  /tmp/ccQmaUTi.s 			page 71


 1179              		.cfi_endproc
 1180              	.LFE36:
 1182              		.section	.text.arg_digit,"ax",%progbits
 1183              		.align	1
 1184              		.p2align 2,,3
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1188              		.fpu fpv4-sp-d16
 1190              	arg_digit:
 1191              	.LVL88:
 1192              	.LFB31:
1525:src/keys.c    **** 	int lim;
 1193              		.loc 1 1525 29 is_stmt 1 view -0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
1526:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1197              		.loc 1 1526 2 view .LVU377
1531:src/keys.c    **** #endif
 1198              		.loc 1 1531 2 view .LVU378
1525:src/keys.c    **** 	int lim;
 1199              		.loc 1 1525 29 is_stmt 0 view .LVU379
 1200 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1201              		.cfi_def_cfa_offset 24
 1202              		.cfi_offset 3, -24
 1203              		.cfi_offset 4, -20
 1204              		.cfi_offset 5, -16
 1205              		.cfi_offset 6, -12
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
1531:src/keys.c    **** #endif
 1208              		.loc 1 1531 28 view .LVU380
 1209 0002 314C     		ldr	r4, .L138
1534:src/keys.c    **** 	
 1210              		.loc 1 1534 34 view .LVU381
 1211 0004 314A     		ldr	r2, .L138+4
1531:src/keys.c    **** #endif
 1212              		.loc 1 1531 28 view .LVU382
 1213 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1214              	.LVL89:
1533:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1215              		.loc 1 1533 2 is_stmt 1 view .LVU383
1533:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1216              		.loc 1 1533 33 is_stmt 0 view .LVU384
 1217 0008 2389     		ldrh	r3, [r4, #8]
1534:src/keys.c    **** 	
 1218              		.loc 1 1534 34 view .LVU385
 1219 000a 02EB0712 		add	r2, r2, r7, lsl #4
1533:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1220              		.loc 1 1533 41 view .LVU386
 1221 000e 03EB8303 		add	r3, r3, r3, lsl #2
1534:src/keys.c    **** 	
 1222              		.loc 1 1534 34 view .LVU387
 1223 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
1534:src/keys.c    **** 	
 1224              		.loc 1 1534 39 view .LVU388
ARM GAS  /tmp/ccQmaUTi.s 			page 72


 1225 0014 8E07     		lsls	r6, r1, #30
1533:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1226              		.loc 1 1533 46 view .LVU389
 1227 0016 00EB4305 		add	r5, r0, r3, lsl #1
 1228              	.LVL90:
1534:src/keys.c    **** 	
 1229              		.loc 1 1534 2 is_stmt 1 view .LVU390
1534:src/keys.c    **** 	
 1230              		.loc 1 1534 39 is_stmt 0 view .LVU391
 1231 001a C1F34000 		ubfx	r0, r1, #1, #1
 1232              	.LVL91:
1534:src/keys.c    **** 	
 1233              		.loc 1 1534 39 view .LVU392
 1234 001e 32D5     		bpl	.L114
 1235              	.LVL92:
1536:src/keys.c    **** 		// Handle local registers and flags
 1236              		.loc 1 1536 2 is_stmt 1 view .LVU393
1536:src/keys.c    **** 		// Handle local registers and flags
 1237              		.loc 1 1536 6 is_stmt 0 view .LVU394
 1238 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1536:src/keys.c    **** 		// Handle local registers and flags
 1239              		.loc 1 1536 5 view .LVU395
 1240 0022 D907     		lsls	r1, r3, #31
 1241 0024 28D5     		bpl	.L116
 1242              	.L127:
1534:src/keys.c    **** 	
 1243              		.loc 1 1534 39 view .LVU396
 1244 0026 0120     		movs	r0, #1
 1245              	.LVL93:
 1246              	.L115:
1538:src/keys.c    **** 		if (State2.runmode) {
 1247              		.loc 1 1538 3 is_stmt 1 view .LVU397
1539:src/keys.c    **** 			if (LocalRegs == 0)
 1248              		.loc 1 1539 3 view .LVU398
1539:src/keys.c    **** 			if (LocalRegs == 0)
 1249              		.loc 1 1539 6 is_stmt 0 view .LVU399
 1250 0028 5A06     		lsls	r2, r3, #25
 1251 002a 3BD5     		bpl	.L129
1540:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1252              		.loc 1 1540 4 is_stmt 1 view .LVU400
1540:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1253              		.loc 1 1540 8 is_stmt 0 view .LVU401
 1254 002c 284B     		ldr	r3, .L138+8
 1255 002e 1B68     		ldr	r3, [r3]
1540:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1256              		.loc 1 1540 7 view .LVU402
 1257 0030 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1258 0034 2BB3     		cbz	r3, .L122
1542:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1259              		.loc 1 1542 4 is_stmt 1 view .LVU403
1542:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1260              		.loc 1 1542 7 is_stmt 0 view .LVU404
 1261 0036 A8B3     		cbz	r0, .L129
1543:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1262              		.loc 1 1543 5 is_stmt 1 view .LVU405
1543:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1263              		.loc 1 1543 11 is_stmt 0 view .LVU406
ARM GAS  /tmp/ccQmaUTi.s 			page 73


 1264 0038 3846     		mov	r0, r7
 1265 003a FFF7FEFF 		bl	local_regs_rarg
 1266              	.LVL94:
1544:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1267              		.loc 1 1544 5 is_stmt 1 view .LVU407
1543:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1268              		.loc 1 1543 9 is_stmt 0 view .LVU408
 1269 003e 0138     		subs	r0, r0, #1
 1270              	.LVL95:
1543:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1271              		.loc 1 1543 9 view .LVU409
 1272 0040 0F28     		cmp	r0, #15
 1273 0042 A8BF     		it	ge
 1274 0044 0F20     		movge	r0, #15
 1275              	.LVL96:
 1276              	.L119:
1556:src/keys.c    **** 		return STATE_UNFINISHED;
 1277              		.loc 1 1556 2 is_stmt 1 view .LVU410
1556:src/keys.c    **** 		return STATE_UNFINISHED;
 1278              		.loc 1 1556 5 is_stmt 0 view .LVU411
 1279 0046 8542     		cmp	r5, r0
 1280 0048 1BDC     		bgt	.L122
 1281              	.L136:
1559:src/keys.c    **** 	++State2.numdigit;
 1282              		.loc 1 1559 2 is_stmt 1 view .LVU412
1560:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1560 2 is_stmt 0 view .LVU413
 1284 004a E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1559:src/keys.c    **** 	++State2.numdigit;
 1285              		.loc 1 1559 16 view .LVU414
 1286 004c 2581     		strh	r5, [r4, #8]	@ movhi
1560:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1287              		.loc 1 1560 2 is_stmt 1 view .LVU415
 1288 004e 0136     		adds	r6, r6, #1
1561:src/keys.c    **** 		int result = arg_eval(val);
 1289              		.loc 1 1561 16 is_stmt 0 view .LVU416
 1290 0050 05EB8503 		add	r3, r5, r5, lsl #2
1560:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1291              		.loc 1 1560 2 view .LVU417
 1292 0054 F6B2     		uxtb	r6, r6
1561:src/keys.c    **** 		int result = arg_eval(val);
 1293              		.loc 1 1561 5 view .LVU418
 1294 0056 B0EB430F 		cmp	r0, r3, lsl #1
1560:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1295              		.loc 1 1560 2 view .LVU419
 1296 005a E672     		strb	r6, [r4, #11]
1561:src/keys.c    **** 		int result = arg_eval(val);
 1297              		.loc 1 1561 2 is_stmt 1 view .LVU420
1561:src/keys.c    **** 		int result = arg_eval(val);
 1298              		.loc 1 1561 5 is_stmt 0 view .LVU421
 1299 005c 04DB     		blt	.L125
1561:src/keys.c    **** 		int result = arg_eval(val);
 1300              		.loc 1 1561 49 discriminator 1 view .LVU422
 1301 005e 3846     		mov	r0, r7
 1302              	.LVL97:
1561:src/keys.c    **** 		int result = arg_eval(val);
 1303              		.loc 1 1561 49 discriminator 1 view .LVU423
ARM GAS  /tmp/ccQmaUTi.s 			page 74


 1304 0060 FFF7FEFF 		bl	num_arg_digits
 1305              	.LVL98:
1561:src/keys.c    **** 		int result = arg_eval(val);
 1306              		.loc 1 1561 27 discriminator 1 view .LVU424
 1307 0064 8642     		cmp	r6, r0
 1308 0066 0CDB     		blt	.L122
 1309              	.L125:
 1310              	.LBB262:
1562:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1311              		.loc 1 1562 3 is_stmt 1 view .LVU425
1562:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1312              		.loc 1 1562 16 is_stmt 0 view .LVU426
 1313 0068 2846     		mov	r0, r5
 1314 006a FFF7FEFF 		bl	arg_eval
 1315              	.LVL99:
1563:src/keys.c    **** 			--State2.numdigit;
 1316              		.loc 1 1563 3 is_stmt 1 view .LVU427
1563:src/keys.c    **** 			--State2.numdigit;
 1317              		.loc 1 1563 6 is_stmt 0 view .LVU428
 1318 006e 3328     		cmp	r0, #51
 1319 0070 1AD0     		beq	.L134
 1320              	.LBE262:
1570:src/keys.c    **** 
 1321              		.loc 1 1570 1 view .LVU429
 1322 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1323              	.LVL100:
 1324              	.L137:
1536:src/keys.c    **** 		// Handle local registers and flags
 1325              		.loc 1 1536 2 is_stmt 1 view .LVU430
1536:src/keys.c    **** 		// Handle local registers and flags
 1326              		.loc 1 1536 5 is_stmt 0 view .LVU431
 1327 0074 DA07     		lsls	r2, r3, #31
 1328 0076 D6D4     		bmi	.L127
 1329              	.L116:
1550:src/keys.c    **** 	else {
 1330              		.loc 1 1550 3 is_stmt 1 view .LVU432
1550:src/keys.c    **** 	else {
 1331              		.loc 1 1550 65 is_stmt 0 view .LVU433
 1332 0078 5B06     		lsls	r3, r3, #25
 1333 007a 1FD4     		bmi	.L135
 1334 007c 6320     		movs	r0, #99
 1335              	.LVL101:
1556:src/keys.c    **** 		return STATE_UNFINISHED;
 1336              		.loc 1 1556 2 is_stmt 1 view .LVU434
1556:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1556 5 is_stmt 0 view .LVU435
 1338 007e 8542     		cmp	r5, r0
 1339 0080 E3DD     		ble	.L136
 1340              	.LVL102:
 1341              	.L122:
1541:src/keys.c    **** 			if (is_reg) {
 1342              		.loc 1 1541 12 view .LVU436
 1343 0082 3320     		movs	r0, #51
1570:src/keys.c    **** 
 1344              		.loc 1 1570 1 view .LVU437
 1345 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1346              	.LVL103:
ARM GAS  /tmp/ccQmaUTi.s 			page 75


 1347              	.L114:
1534:src/keys.c    **** 	
 1348              		.loc 1 1534 39 discriminator 2 view .LVU438
 1349 0086 94F91530 		ldrsb	r3, [r4, #21]
 1350 008a 002B     		cmp	r3, #0
1536:src/keys.c    **** 		// Handle local registers and flags
 1351              		.loc 1 1536 6 discriminator 2 view .LVU439
 1352 008c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1534:src/keys.c    **** 	
 1353              		.loc 1 1534 39 discriminator 2 view .LVU440
 1354 008e F1DB     		blt	.L137
 1355              	.LVL104:
1536:src/keys.c    **** 		// Handle local registers and flags
 1356              		.loc 1 1536 2 is_stmt 1 view .LVU441
1536:src/keys.c    **** 		// Handle local registers and flags
 1357              		.loc 1 1536 5 is_stmt 0 view .LVU442
 1358 0090 DE07     		lsls	r6, r3, #31
 1359 0092 C9D4     		bmi	.L115
1549:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1360              		.loc 1 1549 7 is_stmt 1 view .LVU443
1552:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1361              		.loc 1 1552 3 view .LVU444
1552:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1362              		.loc 1 1552 7 is_stmt 0 view .LVU445
 1363 0094 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1364              	.LVL105:
1553:src/keys.c    **** 			lim = RARG_IND - 1;
 1365              		.loc 1 1553 3 is_stmt 1 view .LVU446
1553:src/keys.c    **** 			lim = RARG_IND - 1;
 1366              		.loc 1 1553 6 is_stmt 0 view .LVU447
 1367 0096 7F28     		cmp	r0, #127
 1368 0098 D5DD     		ble	.L119
1554:src/keys.c    **** 	}
 1369              		.loc 1 1554 8 discriminator 1 view .LVU448
 1370 009a 11F0010F 		tst	r1, #1
 1371 009e 18BF     		it	ne
 1372 00a0 7F20     		movne	r0, #127
 1373              	.LVL106:
1554:src/keys.c    **** 	}
 1374              		.loc 1 1554 8 discriminator 1 view .LVU449
 1375 00a2 D0E7     		b	.L119
 1376              	.LVL107:
 1377              	.L129:
1538:src/keys.c    **** 		if (State2.runmode) {
 1378              		.loc 1 1538 7 view .LVU450
 1379 00a4 0F20     		movs	r0, #15
 1380 00a6 CEE7     		b	.L119
 1381              	.LVL108:
 1382              	.L134:
 1383              	.LBB263:
1564:src/keys.c    **** 			State2.digval /= 10;
 1384              		.loc 1 1564 4 is_stmt 1 view .LVU451
1565:src/keys.c    **** 		}
 1385              		.loc 1 1565 18 is_stmt 0 view .LVU452
 1386 00a8 2389     		ldrh	r3, [r4, #8]
 1387 00aa 0A49     		ldr	r1, .L138+12
1564:src/keys.c    **** 			State2.digval /= 10;
ARM GAS  /tmp/ccQmaUTi.s 			page 76


 1388              		.loc 1 1564 4 view .LVU453
 1389 00ac E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
1565:src/keys.c    **** 		}
 1390              		.loc 1 1565 18 view .LVU454
 1391 00ae A1FB0313 		umull	r1, r3, r1, r3
 1392 00b2 DB08     		lsrs	r3, r3, #3
1564:src/keys.c    **** 			State2.digval /= 10;
 1393              		.loc 1 1564 4 view .LVU455
 1394 00b4 013A     		subs	r2, r2, #1
1565:src/keys.c    **** 		}
 1395              		.loc 1 1565 18 view .LVU456
 1396 00b6 2381     		strh	r3, [r4, #8]	@ movhi
1564:src/keys.c    **** 			State2.digval /= 10;
 1397              		.loc 1 1564 4 view .LVU457
 1398 00b8 E272     		strb	r2, [r4, #11]
1565:src/keys.c    **** 		}
 1399              		.loc 1 1565 4 is_stmt 1 view .LVU458
 1400              	.LBE263:
1570:src/keys.c    **** 
 1401              		.loc 1 1570 1 is_stmt 0 view .LVU459
 1402 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1403              	.LVL109:
 1404              	.L135:
1550:src/keys.c    **** 	else {
 1405              		.loc 1 1550 26 discriminator 1 view .LVU460
 1406 00bc 3846     		mov	r0, r7
 1407 00be FFF7FEFF 		bl	global_regs_rarg
 1408              	.LVL110:
1550:src/keys.c    **** 	else {
 1409              		.loc 1 1550 61 discriminator 1 view .LVU461
 1410 00c2 0138     		subs	r0, r0, #1
 1411 00c4 BFE7     		b	.L119
 1412              	.L139:
 1413 00c6 00BF     		.align	2
 1414              	.L138:
 1415 00c8 00000000 		.word	StateWhileOn
 1416 00cc 00000000 		.word	argcmds
 1417 00d0 00000000 		.word	main_ram
 1418 00d4 CDCCCCCC 		.word	-858993459
 1419              		.cfi_endproc
 1420              	.LFE31:
 1422              		.section	.text.intltr,"ax",%progbits
 1423              		.align	1
 1424              		.p2align 2,,3
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu fpv4-sp-d16
 1430              	intltr:
 1431              	.LVL111:
 1432              	.LFB18:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1433              		.loc 1 666 26 is_stmt 1 view -0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 667:src/keys.c    **** }
ARM GAS  /tmp/ccQmaUTi.s 			page 77


 1437              		.loc 1 667 2 view .LVU463
 667:src/keys.c    **** }
 1438              		.loc 1 667 10 is_stmt 0 view .LVU464
 1439 0000 0B4B     		ldr	r3, .L149
 1440 0002 1B68     		ldr	r3, [r3]
 1441 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1442              		.loc 1 667 22 view .LVU465
 1443 0008 13F00103 		ands	r3, r3, #1
 1444 000c 05D0     		beq	.L142
 667:src/keys.c    **** }
 1445              		.loc 1 667 26 discriminator 1 view .LVU466
 1446 000e 094B     		ldr	r3, .L149+4
 1447 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1448              		.loc 1 667 22 discriminator 1 view .LVU467
 1449 0012 5B06     		lsls	r3, r3, #25
 1450 0014 03D4     		bmi	.L148
 667:src/keys.c    **** }
 1451              		.loc 1 667 22 view .LVU468
 1452 0016 0120     		movs	r0, #1
 1453              	.LVL112:
 668:src/keys.c    **** 
 1454              		.loc 1 668 1 view .LVU469
 1455 0018 7047     		bx	lr
 1456              	.LVL113:
 1457              	.L142:
 667:src/keys.c    **** }
 1458              		.loc 1 667 22 view .LVU470
 1459 001a 1846     		mov	r0, r3
 1460              	.LVL114:
 667:src/keys.c    **** }
 1461              		.loc 1 667 22 view .LVU471
 1462 001c 7047     		bx	lr
 1463              	.LVL115:
 1464              	.L148:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1465              		.loc 1 666 26 view .LVU472
 1466 001e 10B5     		push	{r4, lr}
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 4, -8
 1469              		.cfi_offset 14, -4
 1470 0020 0446     		mov	r4, r0
 1471              	.LVL116:
 1472              	.LBB266:
 1473              	.LBI266:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1474              		.loc 1 666 12 is_stmt 1 view .LVU473
 1475              	.LBB267:
 667:src/keys.c    **** }
 1476              		.loc 1 667 52 is_stmt 0 view .LVU474
 1477 0022 FFF7FEFF 		bl	int_base
 1478              	.LVL117:
 667:src/keys.c    **** }
 1479              		.loc 1 667 43 view .LVU475
 1480 0026 8442     		cmp	r4, r0
 1481 0028 ACBF     		ite	ge
ARM GAS  /tmp/ccQmaUTi.s 			page 78


 1482 002a 0020     		movge	r0, #0
 1483 002c 0120     		movlt	r0, #1
 1484              	.LBE267:
 1485              	.LBE266:
 668:src/keys.c    **** 
 1486              		.loc 1 668 1 view .LVU476
 1487 002e 10BD     		pop	{r4, pc}
 1488              	.LVL118:
 1489              	.L150:
 668:src/keys.c    **** 
 1490              		.loc 1 668 1 view .LVU477
 1491              		.align	2
 1492              	.L149:
 1493 0030 00000000 		.word	main_ram
 1494 0034 00000000 		.word	StateWhileOn
 1495              		.cfi_endproc
 1496              	.LFE18:
 1498              		.section	.text.set_window,"ax",%progbits
 1499              		.align	1
 1500              		.p2align 2,,3
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1504              		.fpu fpv4-sp-d16
 1506              	set_window:
 1507              	.LVL119:
 1508              	.LFB53:
2528:src/keys.c    **** 
2529:src/keys.c    **** 
2530:src/keys.c    **** /*
2531:src/keys.c    ****  *  CAT command
2532:src/keys.c    ****  */
2533:src/keys.c    **** static int process_labellist(const keycode c) {
2534:src/keys.c    **** 	unsigned int pc = State2.digval;
2535:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2536:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2537:src/keys.c    **** 	const int opcode = getprog(pc);
2538:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2539:src/keys.c    **** 	const int direct = State2.runmode;
2540:src/keys.c    **** 	const enum shifts shift = reset_shift();
2541:src/keys.c    **** 	int op = STATE_UNFINISHED;
2542:src/keys.c    **** 
2543:src/keys.c    **** 	if (n < REGION_XROM) {
2544:src/keys.c    **** 		// Digits take you to that segment
2545:src/keys.c    **** 		pc = addrLIB(1, n);
2546:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2547:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2548:src/keys.c    **** 		State2.digval = pc;
2549:src/keys.c    **** 		return STATE_UNFINISHED;
2550:src/keys.c    **** 	}
2551:src/keys.c    **** 
2552:src/keys.c    **** 	switch (c | (shift << 8)) {
2553:src/keys.c    **** 
2554:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2555:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2556:src/keys.c    **** 		goto next;
2557:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 79


2558:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2559:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2560:src/keys.c    **** 	case K_DOWN:				// Find next label
2561:src/keys.c    **** 	next:
2562:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2563:src/keys.c    **** 		return STATE_UNFINISHED;
2564:src/keys.c    **** 
2565:src/keys.c    **** 	case K_UP:				// Find previous label
2566:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2567:src/keys.c    **** 		return STATE_UNFINISHED;
2568:src/keys.c    **** 
2569:src/keys.c    **** 	case K24:				// <- exits
2570:src/keys.c    **** 		break;
2571:src/keys.c    **** 
2572:src/keys.c    **** 	case K20:				// ENTER^
2573:src/keys.c    **** 	set_pc_and_exit:
2574:src/keys.c    **** 		set_pc(pc);			// forced branch
2575:src/keys.c    **** 		break;
2576:src/keys.c    **** 
2577:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2578:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2579:src/keys.c    **** 		goto set_pc_and_exit;
2580:src/keys.c    **** 
2581:src/keys.c    **** 	case K10:				// STO
2582:src/keys.c    **** 	case K11:				// RCL
2583:src/keys.c    **** 	  //#ifndef DM42	
2584:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2585:src/keys.c    **** 	  //#endif
2586:src/keys.c    **** /* #ifdef DM42 */
2587:src/keys.c    **** /* 	        op = OP_NIL; */
2588:src/keys.c    **** /* #endif	     */
2589:src/keys.c    **** 	  goto set_pc_and_exit;
2590:src/keys.c    **** #ifdef DM42
2591:src/keys.c    **** 	case K05:				// XEQ
2592:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2593:src/keys.c    **** 		goto xeq_or_gto;
2594:src/keys.c    **** 
2595:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2596:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2597:src/keys.c    **** 	xeq_or_gto:
2598:src/keys.c    **** 		if (label)
2599:src/keys.c    **** 			break;
2600:src/keys.c    **** 		return STATE_UNFINISHED;
2601:src/keys.c    **** #else
2602:src/keys.c    **** 	case K30:				// XEQ
2603:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2604:src/keys.c    **** 		goto xeq_or_gto;
2605:src/keys.c    **** 
2606:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2607:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2608:src/keys.c    **** 	xeq_or_gto:
2609:src/keys.c    **** 		if (label)
2610:src/keys.c    **** 			break;
2611:src/keys.c    **** 		return STATE_UNFINISHED;
2612:src/keys.c    **** #endif		
2613:src/keys.c    **** 	case K63:				// R/S
2614:src/keys.c    **** 		if (direct && label) {
ARM GAS  /tmp/ccQmaUTi.s 			page 80


2615:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2616:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2617:src/keys.c    **** 			break;
2618:src/keys.c    **** 		}
2619:src/keys.c    **** 		return STATE_UNFINISHED;
2620:src/keys.c    **** 
2621:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2622:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2623:src/keys.c    **** 		goto set_pc_and_exit;
2624:src/keys.c    **** 
2625:src/keys.c    **** 	default:
2626:src/keys.c    **** 		return STATE_UNFINISHED;
2627:src/keys.c    **** 	}
2628:src/keys.c    **** 	State2.digval = 0;
2629:src/keys.c    **** 	State2.labellist = 0;
2630:src/keys.c    **** 	return check_confirm(op);
2631:src/keys.c    **** }
2632:src/keys.c    **** 
2633:src/keys.c    **** 
2634:src/keys.c    **** static void set_window(int c) {
 1509              		.loc 1 2634 31 is_stmt 1 view -0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 0
 1512              		@ frame_needed = 0, uses_anonymous_args = 0
2635:src/keys.c    **** 
2636:src/keys.c    **** 	if (State2.runmode) {
 1513              		.loc 1 2636 2 view .LVU479
2634:src/keys.c    **** 
 1514              		.loc 1 2634 31 is_stmt 0 view .LVU480
 1515 0000 38B5     		push	{r3, r4, r5, lr}
 1516              		.cfi_def_cfa_offset 16
 1517              		.cfi_offset 3, -16
 1518              		.cfi_offset 4, -12
 1519              		.cfi_offset 5, -8
 1520              		.cfi_offset 14, -4
 1521              		.loc 1 2636 6 view .LVU481
 1522 0002 224C     		ldr	r4, .L166
 1523 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1524              		.loc 1 2636 5 view .LVU482
 1525 0006 5A06     		lsls	r2, r3, #25
 1526 0008 00D4     		bmi	.L163
 1527              	.LVL120:
 1528              	.L151:
2637:src/keys.c    **** 		process_cmdline_set_lift();
2638:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2639:src/keys.c    **** 		State2.disp_freeze = 0;
2640:src/keys.c    **** 		display();	
2641:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2642:src/keys.c    **** 			if (UState.intm) {
2643:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2644:src/keys.c    **** 					State2.window--;
2645:src/keys.c    **** 				return;
2646:src/keys.c    **** 			}
2647:src/keys.c    **** 			else 
2648:src/keys.c    **** 				State2.window = is_dblmode();
2649:src/keys.c    **** 		}
2650:src/keys.c    **** 		else {
ARM GAS  /tmp/ccQmaUTi.s 			page 81


2651:src/keys.c    **** 			if (UState.intm) {
2652:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2653:src/keys.c    **** 					State2.window++;
2654:src/keys.c    **** 				return;
2655:src/keys.c    **** 			}
2656:src/keys.c    **** 			else
2657:src/keys.c    **** 				State2.window = 0;
2658:src/keys.c    **** 		}
2659:src/keys.c    **** 		set_smode(SDISP_SHOW);
2660:src/keys.c    **** 	}
2661:src/keys.c    **** }
 1529              		.loc 1 2661 1 view .LVU483
 1530 000a 38BD     		pop	{r3, r4, r5, pc}
 1531              	.LVL121:
 1532              	.L163:
2637:src/keys.c    **** 		process_cmdline_set_lift();
 1533              		.loc 1 2637 3 is_stmt 1 view .LVU484
 1534 000c 0546     		mov	r5, r0
 1535 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1536              	.LVL122:
2639:src/keys.c    **** 		display();	
 1537              		.loc 1 2639 3 view .LVU485
2639:src/keys.c    **** 		display();	
 1538              		.loc 1 2639 22 is_stmt 0 view .LVU486
 1539 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1540 0014 6FF30413 		bfc	r3, #4, #1
 1541 0018 E375     		strb	r3, [r4, #23]
2640:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1542              		.loc 1 2640 3 is_stmt 1 view .LVU487
 1543 001a FFF7FEFF 		bl	display
 1544              	.LVL123:
2641:src/keys.c    **** 			if (UState.intm) {
 1545              		.loc 1 2641 3 view .LVU488
2642:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1546              		.loc 1 2642 8 is_stmt 0 view .LVU489
 1547 001e 1C4B     		ldr	r3, .L166+4
 1548 0020 1B68     		ldr	r3, [r3]
2641:src/keys.c    **** 			if (UState.intm) {
 1549              		.loc 1 2641 6 view .LVU490
 1550 0022 2C2D     		cmp	r5, #44
2642:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1551              		.loc 1 2642 8 view .LVU491
 1552 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2641:src/keys.c    **** 			if (UState.intm) {
 1553              		.loc 1 2641 6 view .LVU492
 1554 0028 18D0     		beq	.L164
2651:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1555              		.loc 1 2651 4 is_stmt 1 view .LVU493
2651:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1556              		.loc 1 2651 7 is_stmt 0 view .LVU494
 1557 002a 13F00103 		ands	r3, r3, #1
 1558 002e 09D1     		bne	.L165
2657:src/keys.c    **** 		}
 1559              		.loc 1 2657 5 is_stmt 1 view .LVU495
2657:src/keys.c    **** 		}
 1560              		.loc 1 2657 19 is_stmt 0 view .LVU496
 1561 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
ARM GAS  /tmp/ccQmaUTi.s 			page 82


 1562 0032 63F3C502 		bfi	r2, r3, #3, #3
 1563 0036 2275     		strb	r2, [r4, #20]
 1564              	.L157:
2659:src/keys.c    **** 	}
 1565              		.loc 1 2659 3 is_stmt 1 view .LVU497
 1566              	.LVL124:
 1567              	.LBB274:
 1568              	.LBI274:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1569              		.loc 1 646 13 view .LVU498
 1570              	.LBB275:
 647:src/keys.c    **** }
 1571              		.loc 1 647 2 view .LVU499
 647:src/keys.c    **** }
 1572              		.loc 1 647 15 is_stmt 0 view .LVU500
 1573 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1574 003a 013B     		subs	r3, r3, #1
 1575 003c 18BF     		it	ne
 1576 003e 0123     		movne	r3, #1
 1577 0040 6374     		strb	r3, [r4, #17]
 1578              	.LVL125:
 647:src/keys.c    **** }
 1579              		.loc 1 647 15 view .LVU501
 1580              	.LBE275:
 1581              	.LBE274:
 1582              		.loc 1 2661 1 view .LVU502
 1583 0042 38BD     		pop	{r3, r4, r5, pc}
 1584              	.LVL126:
 1585              	.L165:
2652:src/keys.c    **** 					State2.window++;
 1586              		.loc 1 2652 5 is_stmt 1 view .LVU503
2652:src/keys.c    **** 					State2.window++;
 1587              		.loc 1 2652 22 is_stmt 0 view .LVU504
 1588 0044 134A     		ldr	r2, .L166+8
2652:src/keys.c    **** 					State2.window++;
 1589              		.loc 1 2652 42 view .LVU505
 1590 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2652:src/keys.c    **** 					State2.window++;
 1591              		.loc 1 2652 8 view .LVU506
 1592 0048 1168     		ldr	r1, [r2]
2652:src/keys.c    **** 					State2.window++;
 1593              		.loc 1 2652 42 view .LVU507
 1594 004a C3F3C202 		ubfx	r2, r3, #3, #3
2652:src/keys.c    **** 					State2.window++;
 1595              		.loc 1 2652 8 view .LVU508
 1596 004e 8A42     		cmp	r2, r1
 1597 0050 DBDA     		bge	.L151
2653:src/keys.c    **** 				return;
 1598              		.loc 1 2653 6 is_stmt 1 view .LVU509
2653:src/keys.c    **** 				return;
 1599              		.loc 1 2653 19 is_stmt 0 view .LVU510
 1600 0052 0132     		adds	r2, r2, #1
 1601 0054 62F3C503 		bfi	r3, r2, #3, #3
 1602 0058 2375     		strb	r3, [r4, #20]
 1603              		.loc 1 2661 1 view .LVU511
 1604 005a 38BD     		pop	{r3, r4, r5, pc}
 1605              	.LVL127:
ARM GAS  /tmp/ccQmaUTi.s 			page 83


 1606              	.L164:
2642:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1607              		.loc 1 2642 4 is_stmt 1 view .LVU512
2642:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1608              		.loc 1 2642 7 is_stmt 0 view .LVU513
 1609 005c DB07     		lsls	r3, r3, #31
 1610 005e 0ED5     		bpl	.L155
 1611              	.LBB276:
 1612              	.LBI276:
2634:src/keys.c    **** 
 1613              		.loc 1 2634 13 is_stmt 1 view .LVU514
 1614              	.LVL128:
 1615              	.LBB277:
2643:src/keys.c    **** 					State2.window--;
 1616              		.loc 1 2643 5 view .LVU515
2643:src/keys.c    **** 					State2.window--;
 1617              		.loc 1 2643 22 is_stmt 0 view .LVU516
 1618 0060 0C4B     		ldr	r3, .L166+8
2643:src/keys.c    **** 					State2.window--;
 1619              		.loc 1 2643 8 view .LVU517
 1620 0062 1B68     		ldr	r3, [r3]
 1621 0064 002B     		cmp	r3, #0
 1622 0066 D0DD     		ble	.L151
2643:src/keys.c    **** 					State2.window--;
 1623              		.loc 1 2643 43 view .LVU518
 1624 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2643:src/keys.c    **** 					State2.window--;
 1625              		.loc 1 2643 26 view .LVU519
 1626 006a 13F0380F 		tst	r3, #56
 1627 006e CCD0     		beq	.L151
2644:src/keys.c    **** 				return;
 1628              		.loc 1 2644 6 is_stmt 1 view .LVU520
2644:src/keys.c    **** 				return;
 1629              		.loc 1 2644 12 is_stmt 0 view .LVU521
 1630 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2644:src/keys.c    **** 				return;
 1631              		.loc 1 2644 19 view .LVU522
 1632 0074 0732     		adds	r2, r2, #7
 1633 0076 62F3C503 		bfi	r3, r2, #3, #3
 1634 007a 2375     		strb	r3, [r4, #20]
 1635              	.LBE277:
 1636              	.LBE276:
 1637              		.loc 1 2661 1 view .LVU523
 1638 007c 38BD     		pop	{r3, r4, r5, pc}
 1639              	.LVL129:
 1640              	.L155:
2648:src/keys.c    **** 		}
 1641              		.loc 1 2648 5 is_stmt 1 view .LVU524
2648:src/keys.c    **** 		}
 1642              		.loc 1 2648 21 is_stmt 0 view .LVU525
 1643 007e FFF7FEFF 		bl	is_dblmode
 1644              	.LVL130:
2648:src/keys.c    **** 		}
 1645              		.loc 1 2648 19 view .LVU526
 1646 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1647 0084 60F3C503 		bfi	r3, r0, #3, #3
 1648 0088 2375     		strb	r3, [r4, #20]
ARM GAS  /tmp/ccQmaUTi.s 			page 84


 1649 008a D5E7     		b	.L157
 1650              	.L167:
 1651              		.align	2
 1652              	.L166:
 1653 008c 00000000 		.word	StateWhileOn
 1654 0090 00000000 		.word	main_ram
 1655 0094 00000000 		.word	IntMaxWindow
 1656              		.cfi_endproc
 1657              	.LFE53:
 1659              		.section	.text.arg_storcl,"ax",%progbits
 1660              		.align	1
 1661              		.p2align 2,,3
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv4-sp-d16
 1667              	arg_storcl:
 1668              	.LVL131:
 1669              	.LFB34:
1595:src/keys.c    **** 	unsigned int b = CmdBase;
 1670              		.loc 1 1595 56 is_stmt 1 view -0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674              		@ link register save eliminated.
1596:src/keys.c    **** 
 1675              		.loc 1 1596 2 view .LVU528
1596:src/keys.c    **** 
 1676              		.loc 1 1596 19 is_stmt 0 view .LVU529
 1677 0000 0F4A     		ldr	r2, .L200
 1678 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1679              	.LVL132:
1598:src/keys.c    **** 		CmdBase += n;
 1680              		.loc 1 1598 2 is_stmt 1 view .LVU530
 1681              	.LBB286:
 1682              	.LBI286:
1586:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1683              		.loc 1 1586 12 view .LVU531
 1684              	.LBB287:
1591:src/keys.c    **** #endif
 1685              		.loc 1 1591 2 view .LVU532
1591:src/keys.c    **** #endif
 1686              		.loc 1 1591 41 is_stmt 0 view .LVU533
 1687 0004 032B     		cmp	r3, #3
 1688 0006 14D0     		beq	.L169
1591:src/keys.c    **** #endif
 1689              		.loc 1 1591 24 view .LVU534
 1690 0008 0A2B     		cmp	r3, #10
 1691 000a 12D0     		beq	.L169
 1692              	.LVL133:
 1693              	.LBB288:
 1694              	.LBI288:
1586:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1695              		.loc 1 1586 12 is_stmt 1 view .LVU535
 1696              	.LBB289:
1591:src/keys.c    **** #endif
 1697              		.loc 1 1591 41 is_stmt 0 view .LVU536
ARM GAS  /tmp/ccQmaUTi.s 			page 85


 1698 000c 19B1     		cbz	r1, .L170
1591:src/keys.c    **** #endif
 1699              		.loc 1 1591 51 view .LVU537
 1700 000e 152B     		cmp	r3, #21
 1701 0010 0FD0     		beq	.L169
1591:src/keys.c    **** #endif
 1702              		.loc 1 1591 70 view .LVU538
 1703 0012 1A2B     		cmp	r3, #26
 1704 0014 0DD0     		beq	.L169
 1705              	.L170:
 1706              	.LVL134:
1591:src/keys.c    **** #endif
 1707              		.loc 1 1591 70 view .LVU539
 1708              	.LBE289:
 1709              	.LBE288:
 1710              	.LBE287:
 1711              	.LBE286:
1603:src/keys.c    **** 		b -= n;
 1712              		.loc 1 1603 2 is_stmt 1 view .LVU540
1603:src/keys.c    **** 		b -= n;
 1713              		.loc 1 1603 5 is_stmt 0 view .LVU541
 1714 0016 8342     		cmp	r3, r0
 1715 0018 09D3     		bcc	.L175
1604:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1716              		.loc 1 1604 3 is_stmt 1 view .LVU542
1604:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1717              		.loc 1 1604 5 is_stmt 0 view .LVU543
 1718 001a 1B1A     		subs	r3, r3, r0
 1719              	.LVL135:
1605:src/keys.c    **** 			CmdBase = b;
 1720              		.loc 1 1605 3 is_stmt 1 view .LVU544
 1721              	.LBB290:
 1722              	.LBI290:
1586:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1723              		.loc 1 1586 12 view .LVU545
 1724              	.LBB291:
1591:src/keys.c    **** #endif
 1725              		.loc 1 1591 2 view .LVU546
1591:src/keys.c    **** #endif
 1726              		.loc 1 1591 41 is_stmt 0 view .LVU547
 1727 001c 032B     		cmp	r3, #3
 1728 001e 0CD0     		beq	.L173
1591:src/keys.c    **** #endif
 1729              		.loc 1 1591 24 view .LVU548
 1730 0020 0A2B     		cmp	r3, #10
 1731 0022 0AD0     		beq	.L173
 1732              	.LVL136:
 1733              	.LBB292:
 1734              	.LBI292:
1586:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1735              		.loc 1 1586 12 is_stmt 1 view .LVU549
 1736              	.LBB293:
1591:src/keys.c    **** #endif
 1737              		.loc 1 1591 41 is_stmt 0 view .LVU550
 1738 0024 19B1     		cbz	r1, .L175
1591:src/keys.c    **** #endif
 1739              		.loc 1 1591 51 view .LVU551
ARM GAS  /tmp/ccQmaUTi.s 			page 86


 1740 0026 152B     		cmp	r3, #21
 1741 0028 07D0     		beq	.L173
1591:src/keys.c    **** #endif
 1742              		.loc 1 1591 70 view .LVU552
 1743 002a 1A2B     		cmp	r3, #26
 1744 002c 05D0     		beq	.L173
 1745              	.LVL137:
 1746              	.L175:
1591:src/keys.c    **** #endif
 1747              		.loc 1 1591 70 view .LVU553
 1748              	.LBE293:
 1749              	.LBE292:
 1750              	.LBE291:
 1751              	.LBE290:
1610:src/keys.c    **** }
 1752              		.loc 1 1610 9 view .LVU554
 1753 002e 0020     		movs	r0, #0
 1754              	.LVL138:
1611:src/keys.c    **** 
 1755              		.loc 1 1611 1 view .LVU555
 1756 0030 7047     		bx	lr
 1757              	.LVL139:
 1758              	.L169:
1599:src/keys.c    **** 		return 1;
 1759              		.loc 1 1599 3 is_stmt 1 view .LVU556
1599:src/keys.c    **** 		return 1;
 1760              		.loc 1 1599 11 is_stmt 0 view .LVU557
 1761 0032 1844     		add	r0, r0, r3
 1762              	.LVL140:
1599:src/keys.c    **** 		return 1;
 1763              		.loc 1 1599 11 view .LVU558
 1764 0034 D077     		strb	r0, [r2, #31]
1600:src/keys.c    **** 	}
 1765              		.loc 1 1600 3 is_stmt 1 view .LVU559
1600:src/keys.c    **** 	}
 1766              		.loc 1 1600 10 is_stmt 0 view .LVU560
 1767 0036 0120     		movs	r0, #1
 1768 0038 7047     		bx	lr
 1769              	.LVL141:
 1770              	.L173:
1606:src/keys.c    **** 			return 1;
 1771              		.loc 1 1606 4 is_stmt 1 view .LVU561
1606:src/keys.c    **** 			return 1;
 1772              		.loc 1 1606 12 is_stmt 0 view .LVU562
 1773 003a D377     		strb	r3, [r2, #31]
1607:src/keys.c    **** 		}
 1774              		.loc 1 1607 4 is_stmt 1 view .LVU563
1607:src/keys.c    **** 		}
 1775              		.loc 1 1607 11 is_stmt 0 view .LVU564
 1776 003c 0120     		movs	r0, #1
 1777              	.LVL142:
1607:src/keys.c    **** 		}
 1778              		.loc 1 1607 11 view .LVU565
 1779 003e 7047     		bx	lr
 1780              	.L201:
 1781              		.align	2
 1782              	.L200:
ARM GAS  /tmp/ccQmaUTi.s 			page 87


 1783 0040 00000000 		.word	StateWhileOn
 1784              		.cfi_endproc
 1785              	.LFE34:
 1787              		.section	.text.process_arg,"ax",%progbits
 1788              		.align	1
 1789              		.p2align 2,,3
 1790              		.syntax unified
 1791              		.thumb
 1792              		.thumb_func
 1793              		.fpu fpv4-sp-d16
 1795              	process_arg:
 1796              	.LVL143:
 1797              	.LFB37:
1645:src/keys.c    **** 	unsigned int base = CmdBase;
 1798              		.loc 1 1645 41 is_stmt 1 view -0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 8
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
1646:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1802              		.loc 1 1646 2 view .LVU567
1645:src/keys.c    **** 	unsigned int base = CmdBase;
 1803              		.loc 1 1645 41 is_stmt 0 view .LVU568
 1804 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1805              		.cfi_def_cfa_offset 36
 1806              		.cfi_offset 4, -36
 1807              		.cfi_offset 5, -32
 1808              		.cfi_offset 6, -28
 1809              		.cfi_offset 7, -24
 1810              		.cfi_offset 8, -20
 1811              		.cfi_offset 9, -16
 1812              		.cfi_offset 10, -12
 1813              		.cfi_offset 11, -8
 1814              		.cfi_offset 14, -4
1646:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1815              		.loc 1 1646 22 view .LVU569
 1816 0004 AC4C     		ldr	r4, .L317
1648:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1817              		.loc 1 1648 31 view .LVU570
 1818 0006 DFF8C0B2 		ldr	fp, .L317+16
1646:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1819              		.loc 1 1646 22 view .LVU571
 1820 000a E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1821              	.LVL144:
1647:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1822              		.loc 1 1647 2 is_stmt 1 view .LVU572
 1823              	.LBB315:
 1824              	.LBB316:
 1825              	.LBB317:
 1826              	.LBB318:
 131:src/keys.c    **** }
 1827              		.loc 1 131 23 is_stmt 0 view .LVU573
 1828 000c AB4B     		ldr	r3, .L317+4
 1829              	.LBE318:
 1830              	.LBE317:
 221:src/keys.c    **** }
 1831              		.loc 1 221 28 view .LVU574
 1832 000e AC4A     		ldr	r2, .L317+8
ARM GAS  /tmp/ccQmaUTi.s 			page 88


 1833              	.LBB321:
 1834              	.LBB319:
 131:src/keys.c    **** }
 1835              		.loc 1 131 23 view .LVU575
 1836 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1837              	.LBE319:
 1838              	.LBE321:
 1839              	.LBE316:
 1840              	.LBE315:
1648:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1841              		.loc 1 1648 31 view .LVU576
 1842 0012 0BEB0711 		add	r1, fp, r7, lsl #4
1645:src/keys.c    **** 	unsigned int base = CmdBase;
 1843              		.loc 1 1645 41 view .LVU577
 1844 0016 83B0     		sub	sp, sp, #12
 1845              		.cfi_def_cfa_offset 48
1648:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1846              		.loc 1 1648 31 view .LVU578
 1847 0018 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1848              	.LBB325:
 1849              	.LBB323:
 221:src/keys.c    **** }
 1850              		.loc 1 221 28 view .LVU579
 1851 001a 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1852              	.LBE323:
 1853              	.LBE325:
1648:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1854              		.loc 1 1648 31 view .LVU580
 1855 001e C1F38003 		ubfx	r3, r1, #2, #1
 1856 0022 0193     		str	r3, [sp, #4]
1648:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1857              		.loc 1 1648 40 view .LVU581
 1858 0024 4B07     		lsls	r3, r1, #29
 1859 0026 58BF     		it	pl
 1860 0028 94F91580 		ldrsbpl	r8, [r4, #21]
1649:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1861              		.loc 1 1649 20 view .LVU582
 1862 002c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1863 002e 0093     		str	r3, [sp]
1648:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1864              		.loc 1 1648 40 view .LVU583
 1865 0030 54BF     		ite	pl
 1866 0032 4FEAD878 		lsrpl	r8, r8, #31
 1867 0036 4FF00108 		movmi	r8, #1
1645:src/keys.c    **** 	unsigned int base = CmdBase;
 1868              		.loc 1 1645 41 view .LVU584
 1869 003a 0646     		mov	r6, r0
 1870              	.LVL145:
 1871              	.LBB326:
 1872              	.LBI315:
 198:src/keys.c    **** {
 1873              		.loc 1 198 14 is_stmt 1 view .LVU585
 1874              	.LBB324:
 200:src/keys.c    ****     // K00 - K05
 1875              		.loc 1 200 3 view .LVU586
 221:src/keys.c    **** }
 1876              		.loc 1 221 3 view .LVU587
ARM GAS  /tmp/ccQmaUTi.s 			page 89


 1877              	.LBB322:
 1878              	.LBI317:
 119:src/keys.c    **** {
 1879              		.loc 1 119 12 view .LVU588
 1880              	.LBB320:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1881              		.loc 1 121 2 view .LVU589
 131:src/keys.c    **** }
 1882              		.loc 1 131 2 view .LVU590
 131:src/keys.c    **** }
 1883              		.loc 1 131 2 is_stmt 0 view .LVU591
 1884              	.LBE320:
 1885              	.LBE322:
 221:src/keys.c    **** }
 1886              		.loc 1 221 10 view .LVU592
 1887 003c 4D46     		mov	r5, r9
 1888              	.LVL146:
 221:src/keys.c    **** }
 1889              		.loc 1 221 10 view .LVU593
 1890              	.LBE324:
 1891              	.LBE326:
1648:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1892              		.loc 1 1648 2 is_stmt 1 view .LVU594
1649:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1893              		.loc 1 1649 2 view .LVU595
1650:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1894              		.loc 1 1650 2 view .LVU596
 1895              	.LBB327:
 1896              	.LBI327:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 1897              		.loc 1 102 13 view .LVU597
 1898              	.LBE327:
 103:src/keys.c    **** }
 1899              		.loc 1 103 2 view .LVU598
 1900              	.LBB342:
 1901              	.LBB328:
 1902              	.LBI328:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 1903              		.loc 1 92 20 view .LVU599
 1904              	.LBB329:
  93:src/keys.c    **** 	State2.shifts = shift;
 1905              		.loc 1 93 2 view .LVU600
 1906              	.LBB330:
 1907              	.LBI330:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 1908              		.loc 1 84 13 view .LVU601
 1909              	.LBB331:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1910              		.loc 1 85 2 view .LVU602
 1911              	.LBE331:
 1912              	.LBE330:
 1913              	.LBE329:
 1914              	.LBE328:
 1915              	.LBE342:
1648:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1916              		.loc 1 1648 31 is_stmt 0 view .LVU603
 1917 003e 4FEA071A 		lsl	r10, r7, #4
ARM GAS  /tmp/ccQmaUTi.s 			page 90


 1918              	.LBB343:
 1919              	.LBB338:
 1920              	.LBB334:
 1921              	.LBB333:
 1922              	.LBB332:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1923              		.loc 1 85 18 view .LVU604
 1924 0042 FFF7FEFF 		bl	shift_down
 1925              	.LVL147:
  86:src/keys.c    **** }
 1926              		.loc 1 86 2 is_stmt 1 view .LVU605
  86:src/keys.c    **** }
 1927              		.loc 1 86 52 is_stmt 0 view .LVU606
 1928 0046 00B9     		cbnz	r0, .L204
 1929 0048 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1930              	.LVL148:
 1931              	.L204:
  86:src/keys.c    **** }
 1932              		.loc 1 86 52 view .LVU607
 1933              	.LBE332:
 1934              	.LBE333:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1935              		.loc 1 94 2 is_stmt 1 view .LVU608
 1936              	.LBE334:
 1937              	.LBE338:
 1938              	.LBE343:
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1939              		.loc 1 1651 38 is_stmt 0 view .LVU609
 1940 004a 0BEB0A01 		add	r1, fp, r10
 1941              	.LBB344:
 1942              	.LBB339:
 1943              	.LBB335:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1944              		.loc 1 94 16 view .LVU610
 1945 004e 4FF0000C 		mov	ip, #0
 1946              	.LBE335:
 1947              	.LBE339:
 1948              	.LBE344:
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1949              		.loc 1 1651 38 view .LVU611
 1950 0052 91F805E0 		ldrb	lr, [r1, #5]	@ zero_extendqisi2
 1951              	.LBB345:
 1952              	.LBB340:
 1953              	.LBB336:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1954              		.loc 1 94 16 view .LVU612
 1955 0056 84F810C0 		strb	ip, [r4, #16]
  95:src/keys.c    **** 	return r;
 1956              		.loc 1 95 2 is_stmt 1 view .LVU613
 1957              	.LBE336:
 1958              	.LBE340:
 1959              	.LBE345:
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1960              		.loc 1 1651 61 is_stmt 0 view .LVU614
 1961 005a 1EF0200F 		tst	lr, #32
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1962              		.loc 1 1651 38 view .LVU615
ARM GAS  /tmp/ccQmaUTi.s 			page 91


 1963 005e CEF34011 		ubfx	r1, lr, #5, #1
 1964              	.LBB346:
 1965              	.LBB341:
 1966              	.LBB337:
  95:src/keys.c    **** 	return r;
 1967              		.loc 1 95 19 view .LVU616
 1968 0062 84F80DC0 		strb	ip, [r4, #13]
  96:src/keys.c    **** }
 1969              		.loc 1 96 2 is_stmt 1 view .LVU617
 1970              	.LVL149:
  96:src/keys.c    **** }
 1971              		.loc 1 96 2 is_stmt 0 view .LVU618
 1972              	.LBE337:
 1973              	.LBE341:
 1974              	.LBE346:
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1975              		.loc 1 1651 2 is_stmt 1 view .LVU619
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1976              		.loc 1 1651 61 is_stmt 0 view .LVU620
 1977 0066 47D0     		beq	.L205
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1978              		.loc 1 1651 61 discriminator 1 view .LVU621
 1979 0068 94F815E0 		ldrb	lr, [r4, #21]	@ zero_extendqisi2
 1980 006c 1EF0C00F 		tst	lr, #192
 1981 0070 57D1     		bne	.L206
 1982              	.LVL150:
1652:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1983              		.loc 1 1652 2 is_stmt 1 view .LVU622
1652:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1984              		.loc 1 1652 35 is_stmt 0 view .LVU623
 1985 0072 292E     		cmp	r6, #41
 1986 0074 7DD0     		beq	.L207
1653:src/keys.c    **** 
 1987              		.loc 1 1653 11 view .LVU624
 1988 0076 0128     		cmp	r0, #1
 1989 0078 00F09280 		beq	.L208
1653:src/keys.c    **** 
 1990              		.loc 1 1653 32 discriminator 3 view .LVU625
 1991 007c B9F1090F 		cmp	r9, #9
 1992 0080 00F28B80 		bhi	.L209
 1993              	.LVL151:
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 1994              		.loc 1 1655 2 is_stmt 1 view .LVU626
1656:src/keys.c    **** 		reset_arg();
 1995              		.loc 1 1656 2 view .LVU627
1656:src/keys.c    **** 		reset_arg();
 1996              		.loc 1 1656 5 is_stmt 0 view .LVU628
 1997 0084 8C2F     		cmp	r7, #140
 1998 0086 50D8     		bhi	.L266
1661:src/keys.c    **** 	  switch (n) {
 1999              		.loc 1 1661 35 view .LVU629
 2000 0088 6069     		ldr	r0, [r4, #20]
 2001              	.LVL152:
1661:src/keys.c    **** 	  switch (n) {
 2002              		.loc 1 1661 35 view .LVU630
 2003 008a 10F4103F 		tst	r0, #147456
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
ARM GAS  /tmp/ccQmaUTi.s 			page 92


 2004              		.loc 1 1651 61 view .LVU631
 2005 008e 4FF0010C 		mov	ip, #1
1661:src/keys.c    **** 	  switch (n) {
 2006              		.loc 1 1661 35 view .LVU632
 2007 0092 7BD0     		beq	.L270
 2008              	.LVL153:
 2009              	.L217:
1684:src/keys.c    **** 		// row column shorthand addressing
 2010              		.loc 1 1684 2 is_stmt 1 view .LVU633
1709:src/keys.c    **** 	case K_F:
 2011              		.loc 1 1709 2 view .LVU634
 2012 0094 2D2E     		cmp	r6, #45
 2013 0096 4AD8     		bhi	.L304
 2014 0098 DFE816F0 		tbh	[pc, r6, lsl #1]
 2015              	.L268:
 2016 009c 4D00     		.2byte	(.L232-.L268)/2
 2017 009e 4D00     		.2byte	(.L232-.L268)/2
 2018 00a0 4D00     		.2byte	(.L232-.L268)/2
 2019 00a2 4D00     		.2byte	(.L232-.L268)/2
 2020 00a4 4900     		.2byte	(.L304-.L268)/2
 2021 00a6 4900     		.2byte	(.L304-.L268)/2
 2022 00a8 4900     		.2byte	(.L304-.L268)/2
 2023 00aa 4900     		.2byte	(.L304-.L268)/2
 2024 00ac 4D00     		.2byte	(.L232-.L268)/2
 2025 00ae 4D00     		.2byte	(.L232-.L268)/2
 2026 00b0 4D00     		.2byte	(.L232-.L268)/2
 2027 00b2 4D00     		.2byte	(.L232-.L268)/2
 2028 00b4 D700     		.2byte	(.L255-.L268)/2
 2029 00b6 4900     		.2byte	(.L304-.L268)/2
 2030 00b8 4900     		.2byte	(.L304-.L268)/2
 2031 00ba 4900     		.2byte	(.L304-.L268)/2
 2032 00bc 6901     		.2byte	(.L262-.L268)/2
 2033 00be 4900     		.2byte	(.L304-.L268)/2
 2034 00c0 DD00     		.2byte	(.L253-.L268)/2
 2035 00c2 4900     		.2byte	(.L304-.L268)/2
 2036 00c4 4900     		.2byte	(.L304-.L268)/2
 2037 00c6 4900     		.2byte	(.L304-.L268)/2
 2038 00c8 6301     		.2byte	(.L252-.L268)/2
 2039 00ca 4900     		.2byte	(.L304-.L268)/2
 2040 00cc 5701     		.2byte	(.L254-.L268)/2
 2041 00ce 5D01     		.2byte	(.L231-.L268)/2
 2042 00d0 4900     		.2byte	(.L304-.L268)/2
 2043 00d2 4900     		.2byte	(.L304-.L268)/2
 2044 00d4 9800     		.2byte	(.L249-.L268)/2
 2045 00d6 4900     		.2byte	(.L304-.L268)/2
 2046 00d8 4900     		.2byte	(.L304-.L268)/2
 2047 00da 4101     		.2byte	(.L233-.L268)/2
 2048 00dc 4B01     		.2byte	(.L234-.L268)/2
 2049 00de 5101     		.2byte	(.L235-.L268)/2
 2050 00e0 E300     		.2byte	(.L246-.L268)/2
 2051 00e2 4900     		.2byte	(.L304-.L268)/2
 2052 00e4 4700     		.2byte	(.L266-.L268)/2
 2053 00e6 4900     		.2byte	(.L304-.L268)/2
 2054 00e8 EF00     		.2byte	(.L239-.L268)/2
 2055 00ea 4900     		.2byte	(.L304-.L268)/2
 2056 00ec 1801     		.2byte	(.L243-.L268)/2
 2057 00ee B000     		.2byte	(.L225-.L268)/2
ARM GAS  /tmp/ccQmaUTi.s 			page 93


 2058 00f0 4900     		.2byte	(.L304-.L268)/2
 2059 00f2 4900     		.2byte	(.L304-.L268)/2
 2060 00f4 2701     		.2byte	(.L227-.L268)/2
 2061 00f6 C800     		.2byte	(.L229-.L268)/2
 2062              	.LVL154:
 2063              		.p2align 1
 2064              	.L205:
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 2065              		.loc 1 1655 2 view .LVU635
1656:src/keys.c    **** 		reset_arg();
 2066              		.loc 1 1656 5 is_stmt 0 view .LVU636
 2067 00f8 8C2F     		cmp	r7, #140
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 2068              		.loc 1 1655 4 view .LVU637
 2069 00fa 29F08005 		bic	r5, r9, #128
 2070              	.LVL155:
1656:src/keys.c    **** 		reset_arg();
 2071              		.loc 1 1656 2 is_stmt 1 view .LVU638
1656:src/keys.c    **** 		reset_arg();
 2072              		.loc 1 1656 5 is_stmt 0 view .LVU639
 2073 00fe 14D8     		bhi	.L266
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2074              		.loc 1 1651 61 view .LVU640
 2075 0100 8C46     		mov	ip, r1
 2076              	.L214:
1661:src/keys.c    **** 	  switch (n) {
 2077              		.loc 1 1661 35 discriminator 1 view .LVU641
 2078 0102 6069     		ldr	r0, [r4, #20]
 2079              	.LVL156:
1661:src/keys.c    **** 	  switch (n) {
 2080              		.loc 1 1661 35 discriminator 1 view .LVU642
 2081 0104 10F4103F 		tst	r0, #147456
 2082 0108 C4D1     		bne	.L217
1662:src/keys.c    **** 	  case regX_idx:
 2083              		.loc 1 1662 4 is_stmt 1 view .LVU643
 2084 010a 672D     		cmp	r5, #103
 2085 010c C2D8     		bhi	.L217
 2086              	.LVL157:
 2087              	.L269:
1662:src/keys.c    **** 	  case regX_idx:
 2088              		.loc 1 1662 4 is_stmt 0 view .LVU644
 2089 010e 632D     		cmp	r5, #99
 2090 0110 3CD9     		bls	.L270
 2091 0112 653D     		subs	r5, r5, #101
 2092 0114 022D     		cmp	r5, #2
 2093 0116 00F2AA81 		bhi	.L220
 2094 011a DFE805F0 		tbb	[pc, r5]
 2095              	.L222:
 2096 011e 6B       		.byte	(.L224-.L222)/2
 2097 011f 65       		.byte	(.L223-.L222)/2
 2098 0120 6D       		.byte	(.L221-.L222)/2
 2099              	.LVL158:
 2100 0121 00       		.p2align 1
 2101              	.L206:
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 2102              		.loc 1 1655 2 is_stmt 1 view .LVU645
1656:src/keys.c    **** 		reset_arg();
ARM GAS  /tmp/ccQmaUTi.s 			page 94


 2103              		.loc 1 1656 5 is_stmt 0 view .LVU646
 2104 0122 8C2F     		cmp	r7, #140
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 2105              		.loc 1 1655 4 view .LVU647
 2106 0124 29F08005 		bic	r5, r9, #128
 2107              	.LVL159:
1656:src/keys.c    **** 		reset_arg();
 2108              		.loc 1 1656 2 is_stmt 1 view .LVU648
1656:src/keys.c    **** 		reset_arg();
 2109              		.loc 1 1656 5 is_stmt 0 view .LVU649
 2110 0128 EBD9     		bls	.L214
 2111              	.LVL160:
 2112              	.L266:
1876:src/keys.c    **** 	default:
 2113              		.loc 1 1876 3 is_stmt 1 view .LVU650
 2114 012a FFF7FEFF 		bl	reset_arg
 2115              	.LVL161:
 2116              	.L304:
1880:src/keys.c    **** }
 2117              		.loc 1 1880 9 is_stmt 0 view .LVU651
 2118 012e 3320     		movs	r0, #51
 2119              	.L202:
1881:src/keys.c    **** 
 2120              		.loc 1 1881 1 view .LVU652
 2121 0130 03B0     		add	sp, sp, #12
 2122              		.cfi_remember_state
 2123              		.cfi_def_cfa_offset 36
 2124              	.LVL162:
1881:src/keys.c    **** 
 2125              		.loc 1 1881 1 view .LVU653
 2126              		@ sp needed
 2127 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2128              	.LVL163:
 2129              	.L232:
 2130              		.cfi_restore_state
1764:src/keys.c    **** 			return arg_eval(n);
 2131              		.loc 1 1764 4 is_stmt 1 view .LVU654
1764:src/keys.c    **** 			return arg_eval(n);
 2132              		.loc 1 1764 8 is_stmt 0 view .LVU655
 2133 0136 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1764:src/keys.c    **** 			return arg_eval(n);
 2134              		.loc 1 1764 7 view .LVU656
 2135 0138 5F06     		lsls	r7, r3, #25
 2136              	.LVL164:
1764:src/keys.c    **** 			return arg_eval(n);
 2137              		.loc 1 1764 7 view .LVU657
 2138 013a 53D4     		bmi	.L251
1764:src/keys.c    **** 			return arg_eval(n);
 2139              		.loc 1 1764 19 discriminator 1 view .LVU658
 2140 013c B8F1000F 		cmp	r8, #0
 2141 0140 50D1     		bne	.L251
1766:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2142              		.loc 1 1766 3 is_stmt 1 view .LVU659
1766:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2143              		.loc 1 1766 6 is_stmt 0 view .LVU660
 2144 0142 032E     		cmp	r6, #3
 2145 0144 F3D8     		bhi	.L304
ARM GAS  /tmp/ccQmaUTi.s 			page 95


1767:src/keys.c    **** 		break;
 2146              		.loc 1 1767 4 is_stmt 1 view .LVU661
 2147              	.LVL165:
 2148              	.LBB347:
 2149              	.LBI347:
1572:src/keys.c    **** 	const unsigned int b = CmdBase;
 2150              		.loc 1 1572 12 view .LVU662
 2151              	.LBB348:
1573:src/keys.c    **** 
 2152              		.loc 1 1573 2 view .LVU663
1573:src/keys.c    **** 
 2153              		.loc 1 1573 21 is_stmt 0 view .LVU664
 2154 0146 E27F     		ldrb	r2, [r4, #31]	@ zero_extendqisi2
 2155              	.LVL166:
1575:src/keys.c    **** 	{
 2156              		.loc 1 1575 2 is_stmt 1 view .LVU665
1575:src/keys.c    **** 	{
 2157              		.loc 1 1575 16 is_stmt 0 view .LVU666
 2158 0148 0BEB0210 		add	r0, fp, r2, lsl #4
 2159 014c 1101     		lsls	r1, r2, #4
 2160 014e 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1575:src/keys.c    **** 	{
 2161              		.loc 1 1575 5 view .LVU667
 2162 0150 8006     		lsls	r0, r0, #26
 2163 0152 02D4     		bmi	.L238
1575:src/keys.c    **** 	{
 2164              		.loc 1 1575 40 view .LVU668
 2165 0154 513A     		subs	r2, r2, #81
 2166              	.LVL167:
1575:src/keys.c    **** 	{
 2167              		.loc 1 1575 23 view .LVU669
 2168 0156 0A2A     		cmp	r2, #10
 2169 0158 E9D8     		bhi	.L304
 2170              	.LVL168:
 2171              	.L238:
1577:src/keys.c    **** 			return STATE_UNFINISHED;
 2172              		.loc 1 1577 3 is_stmt 1 view .LVU670
1577:src/keys.c    **** 			return STATE_UNFINISHED;
 2173              		.loc 1 1577 6 is_stmt 0 view .LVU671
 2174 015a 1F06     		lsls	r7, r3, #24
 2175 015c E7D4     		bmi	.L304
1577:src/keys.c    **** 			return STATE_UNFINISHED;
 2176              		.loc 1 1577 18 view .LVU672
 2177 015e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2178 0160 002B     		cmp	r3, #0
 2179 0162 E4D1     		bne	.L304
1579:src/keys.c    **** 			return STATE_UNFINISHED;
 2180              		.loc 1 1579 3 is_stmt 1 view .LVU673
1579:src/keys.c    **** 			return STATE_UNFINISHED;
 2181              		.loc 1 1579 17 is_stmt 0 view .LVU674
 2182 0164 5944     		add	r1, r1, fp
1579:src/keys.c    **** 			return STATE_UNFINISHED;
 2183              		.loc 1 1579 6 view .LVU675
 2184 0166 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2185 0168 632B     		cmp	r3, #99
 2186 016a E0D9     		bls	.L304
1581:src/keys.c    **** 	}
ARM GAS  /tmp/ccQmaUTi.s 			page 96


 2187              		.loc 1 1581 3 is_stmt 1 view .LVU676
1581:src/keys.c    **** 	}
 2188              		.loc 1 1581 10 is_stmt 0 view .LVU677
 2189 016c 06F16400 		add	r0, r6, #100
 2190 0170 27E0     		b	.L306
 2191              	.LVL169:
 2192              	.L207:
1581:src/keys.c    **** 	}
 2193              		.loc 1 1581 10 view .LVU678
 2194              	.LBE348:
 2195              	.LBE347:
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 2196              		.loc 1 1655 2 is_stmt 1 view .LVU679
1656:src/keys.c    **** 		reset_arg();
 2197              		.loc 1 1656 2 view .LVU680
1656:src/keys.c    **** 		reset_arg();
 2198              		.loc 1 1656 5 is_stmt 0 view .LVU681
 2199 0172 8C2F     		cmp	r7, #140
 2200 0174 D9D8     		bhi	.L266
1661:src/keys.c    **** 	  switch (n) {
 2201              		.loc 1 1661 35 view .LVU682
 2202 0176 6069     		ldr	r0, [r4, #20]
 2203              	.LVL170:
1661:src/keys.c    **** 	  switch (n) {
 2204              		.loc 1 1661 35 view .LVU683
 2205 0178 10F4103F 		tst	r0, #147456
 2206 017c 41D1     		bne	.L226
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 2207              		.loc 1 1655 4 view .LVU684
 2208 017e 29F08005 		bic	r5, r9, #128
1662:src/keys.c    **** 	  case regX_idx:
 2209              		.loc 1 1662 4 is_stmt 1 view .LVU685
 2210 0182 672D     		cmp	r5, #103
 2211 0184 3DD8     		bhi	.L226
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2212              		.loc 1 1651 61 is_stmt 0 view .LVU686
 2213 0186 4FF0010C 		mov	ip, #1
 2214 018a C0E7     		b	.L269
 2215              	.LVL171:
 2216              	.L270:
1662:src/keys.c    **** 	  case regX_idx:
 2217              		.loc 1 1662 4 view .LVU687
 2218 018c 1DB1     		cbz	r5, .L219
 2219 018e 6B1F     		subs	r3, r5, #5
 2220 0190 042B     		cmp	r3, #4
 2221 0192 3FF67FAF 		bhi	.L217
 2222              	.L219:
1677:src/keys.c    **** 	  }
 2223              		.loc 1 1677 6 is_stmt 1 view .LVU688
1677:src/keys.c    **** 	  }
 2224              		.loc 1 1677 13 is_stmt 0 view .LVU689
 2225 0196 2846     		mov	r0, r5
 2226 0198 27E0     		b	.L305
 2227              	.LVL172:
 2228              	.L209:
1653:src/keys.c    **** 
 2229              		.loc 1 1653 42 discriminator 4 view .LVU690
ARM GAS  /tmp/ccQmaUTi.s 			page 97


 2230 019a 19F0800F 		tst	r9, #128
 2231 019e 3ED1     		bne	.L212
 2232              	.L208:
 2233              	.LVL173:
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 2234              		.loc 1 1655 2 is_stmt 1 view .LVU691
1656:src/keys.c    **** 		reset_arg();
 2235              		.loc 1 1656 2 view .LVU692
1656:src/keys.c    **** 		reset_arg();
 2236              		.loc 1 1656 5 is_stmt 0 view .LVU693
 2237 01a0 8C2F     		cmp	r7, #140
 2238 01a2 C2D8     		bhi	.L266
1684:src/keys.c    **** 		// row column shorthand addressing
 2239              		.loc 1 1684 2 is_stmt 1 view .LVU694
1686:src/keys.c    **** 
 2240              		.loc 1 1686 3 view .LVU695
 2241              	.LVL174:
 2242              	.LBB349:
 2243              	.LBI349:
 167:src/keys.c    **** {
 2244              		.loc 1 167 5 view .LVU696
 2245              	.LBB350:
 169:src/keys.c    **** }
 2246              		.loc 1 169 2 view .LVU697
 169:src/keys.c    **** }
 2247              		.loc 1 169 18 is_stmt 0 view .LVU698
 2248 01a4 474B     		ldr	r3, .L317+12
 2249 01a6 A3FB0623 		umull	r2, r3, r3, r6
 169:src/keys.c    **** }
 2250              		.loc 1 169 24 view .LVU699
 2251 01aa 03F0FC00 		and	r0, r3, #252
 2252              	.LVL175:
 169:src/keys.c    **** }
 2253              		.loc 1 169 24 view .LVU700
 2254 01ae 00EB9300 		add	r0, r0, r3, lsr #2
 169:src/keys.c    **** }
 2255              		.loc 1 169 18 view .LVU701
 2256 01b2 9B08     		lsrs	r3, r3, #2
 169:src/keys.c    **** }
 2257              		.loc 1 169 24 view .LVU702
 2258 01b4 4000     		lsls	r0, r0, #1
 169:src/keys.c    **** }
 2259              		.loc 1 169 33 view .LVU703
 2260 01b6 03EB4303 		add	r3, r3, r3, lsl #1
 169:src/keys.c    **** }
 2261              		.loc 1 169 12 view .LVU704
 2262 01ba 0B30     		adds	r0, r0, #11
 169:src/keys.c    **** }
 2263              		.loc 1 169 33 view .LVU705
 2264 01bc A6EB4306 		sub	r6, r6, r3, lsl #1
 2265              	.LBE350:
 2266              	.LBE349:
1686:src/keys.c    **** 
 2267              		.loc 1 1686 10 view .LVU706
 2268 01c0 3044     		add	r0, r0, r6
 2269              	.LVL176:
 2270              	.L306:
ARM GAS  /tmp/ccQmaUTi.s 			page 98


1881:src/keys.c    **** 
 2271              		.loc 1 1881 1 view .LVU707
 2272 01c2 03B0     		add	sp, sp, #12
 2273              		.cfi_remember_state
 2274              		.cfi_def_cfa_offset 36
 2275              	.LVL177:
1881:src/keys.c    **** 
 2276              		.loc 1 1881 1 view .LVU708
 2277              		@ sp needed
 2278 01c4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2279              		.cfi_restore 14
 2280              		.cfi_restore 11
 2281              		.cfi_restore 10
 2282              		.cfi_restore 9
 2283              		.cfi_restore 8
 2284              		.cfi_restore 7
 2285              		.cfi_restore 6
 2286              		.cfi_restore 5
 2287              		.cfi_restore 4
 2288              		.cfi_def_cfa_offset 0
 2289              	.LVL178:
1686:src/keys.c    **** 
 2290              		.loc 1 1686 10 view .LVU709
 2291 01c8 FFF7FEBF 		b	arg_eval
 2292              	.LVL179:
 2293              	.L249:
 2294              		.cfi_restore_state
1786:src/keys.c    **** 			return arg_eval(n);
 2295              		.loc 1 1786 3 is_stmt 1 view .LVU710
1786:src/keys.c    **** 			return arg_eval(n);
 2296              		.loc 1 1786 7 is_stmt 0 view .LVU711
 2297 01cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1786:src/keys.c    **** 			return arg_eval(n);
 2298              		.loc 1 1786 6 view .LVU712
 2299 01ce 5806     		lsls	r0, r3, #25
 2300 01d0 08D4     		bmi	.L251
1786:src/keys.c    **** 			return arg_eval(n);
 2301              		.loc 1 1786 25 discriminator 1 view .LVU713
 2302 01d2 0121     		movs	r1, #1
 2303 01d4 0320     		movs	r0, #3
 2304 01d6 FFF7FEFF 		bl	arg_storcl
 2305              	.LVL180:
1786:src/keys.c    **** 			return arg_eval(n);
 2306              		.loc 1 1786 18 discriminator 1 view .LVU714
 2307 01da 0028     		cmp	r0, #0
 2308 01dc A7D1     		bne	.L304
1786:src/keys.c    **** 			return arg_eval(n);
 2309              		.loc 1 1786 63 discriminator 2 view .LVU715
 2310 01de B8F1000F 		cmp	r8, #0
 2311 01e2 A4D0     		beq	.L304
 2312              	.LVL181:
 2313              	.L251:
1787:src/keys.c    **** 		break;
 2314              		.loc 1 1787 4 is_stmt 1 view .LVU716
1787:src/keys.c    **** 		break;
 2315              		.loc 1 1787 11 is_stmt 0 view .LVU717
 2316 01e4 2846     		mov	r0, r5
ARM GAS  /tmp/ccQmaUTi.s 			page 99


 2317 01e6 ECE7     		b	.L306
 2318              	.LVL182:
 2319              	.L223:
1668:src/keys.c    **** 	  case regT_idx:
 2320              		.loc 1 1668 6 is_stmt 1 view .LVU718
1668:src/keys.c    **** 	  case regT_idx:
 2321              		.loc 1 1668 13 is_stmt 0 view .LVU719
 2322 01e8 0320     		movs	r0, #3
 2323              	.L305:
1881:src/keys.c    **** 
 2324              		.loc 1 1881 1 view .LVU720
 2325 01ea 03B0     		add	sp, sp, #12
 2326              		.cfi_remember_state
 2327              		.cfi_def_cfa_offset 36
 2328              	.LVL183:
1881:src/keys.c    **** 
 2329              		.loc 1 1881 1 view .LVU721
 2330              		@ sp needed
 2331 01ec BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2332              		.cfi_restore 14
 2333              		.cfi_restore 11
 2334              		.cfi_restore 10
 2335              		.cfi_restore 9
 2336              		.cfi_restore 8
 2337              		.cfi_restore 7
 2338              		.cfi_restore 6
 2339              		.cfi_restore 5
 2340              		.cfi_restore 4
 2341              		.cfi_def_cfa_offset 0
 2342              	.LVL184:
1666:src/keys.c    **** 	  case regZ_idx:
 2343              		.loc 1 1666 13 view .LVU722
 2344 01f0 FFF7FEBF 		b	arg_digit
 2345              	.LVL185:
 2346              	.L224:
 2347              		.cfi_restore_state
1666:src/keys.c    **** 	  case regZ_idx:
 2348              		.loc 1 1666 6 is_stmt 1 view .LVU723
1666:src/keys.c    **** 	  case regZ_idx:
 2349              		.loc 1 1666 13 is_stmt 0 view .LVU724
 2350 01f4 0220     		movs	r0, #2
 2351 01f6 F8E7     		b	.L305
 2352              	.L221:
1670:src/keys.c    **** 	  case 5:
 2353              		.loc 1 1670 6 is_stmt 1 view .LVU725
1670:src/keys.c    **** 	  case 5:
 2354              		.loc 1 1670 13 is_stmt 0 view .LVU726
 2355 01f8 0420     		movs	r0, #4
 2356 01fa F6E7     		b	.L305
 2357              	.L225:
1711:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2358              		.loc 1 1711 3 is_stmt 1 view .LVU727
1711:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2359              		.loc 1 1711 6 is_stmt 0 view .LVU728
 2360 01fc BCF1000F 		cmp	ip, #0
 2361 0200 95D0     		beq	.L304
 2362              	.L226:
ARM GAS  /tmp/ccQmaUTi.s 			page 100


1712:src/keys.c    **** 		break;
 2363              		.loc 1 1712 4 is_stmt 1 view .LVU729
 2364              	.LVL186:
 2365              	.LBB351:
 2366              	.LBI351:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2367              		.loc 1 92 20 view .LVU730
 2368              	.LBB352:
  93:src/keys.c    **** 	State2.shifts = shift;
 2369              		.loc 1 93 2 view .LVU731
 2370              	.LBB353:
 2371              	.LBI353:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2372              		.loc 1 84 13 view .LVU732
 2373              	.LBB354:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2374              		.loc 1 85 2 view .LVU733
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2375              		.loc 1 85 18 is_stmt 0 view .LVU734
 2376 0202 FFF7FEFF 		bl	shift_down
 2377              	.LVL187:
  86:src/keys.c    **** }
 2378              		.loc 1 86 2 is_stmt 1 view .LVU735
 2379              	.LBE354:
 2380              	.LBE353:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2381              		.loc 1 94 2 view .LVU736
 2382              	.LBE352:
 2383              	.LBE351:
1712:src/keys.c    **** 		break;
 2384              		.loc 1 1712 4 is_stmt 0 view .LVU737
 2385 0206 009B     		ldr	r3, [sp]
 2386 0208 B3F10109 		subs	r9, r3, #1
 2387 020c 18BF     		it	ne
 2388 020e 4FF00109 		movne	r9, #1
 2389              	.LBB358:
 2390              	.LBB355:
  95:src/keys.c    **** 	return r;
 2391              		.loc 1 95 19 view .LVU738
 2392 0212 0023     		movs	r3, #0
 2393              	.LBE355:
 2394              	.LBE358:
1712:src/keys.c    **** 		break;
 2395              		.loc 1 1712 4 view .LVU739
 2396 0214 84F81090 		strb	r9, [r4, #16]
 2397              	.LBB359:
 2398              	.LBB356:
  95:src/keys.c    **** 	return r;
 2399              		.loc 1 95 2 is_stmt 1 view .LVU740
  95:src/keys.c    **** 	return r;
 2400              		.loc 1 95 19 is_stmt 0 view .LVU741
 2401 0218 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 2402              		.loc 1 96 2 is_stmt 1 view .LVU742
 2403              	.LBE356:
 2404              	.LBE359:
1880:src/keys.c    **** }
ARM GAS  /tmp/ccQmaUTi.s 			page 101


 2405              		.loc 1 1880 9 is_stmt 0 view .LVU743
 2406 021a 3320     		movs	r0, #51
 2407              	.LBB360:
 2408              	.LBB357:
  96:src/keys.c    **** }
 2409              		.loc 1 96 9 view .LVU744
 2410 021c 88E7     		b	.L202
 2411              	.LVL188:
 2412              	.L212:
  96:src/keys.c    **** }
 2413              		.loc 1 96 9 view .LVU745
 2414              	.LBE357:
 2415              	.LBE360:
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 2416              		.loc 1 1655 2 is_stmt 1 view .LVU746
1656:src/keys.c    **** 		reset_arg();
 2417              		.loc 1 1656 5 is_stmt 0 view .LVU747
 2418 021e 8C2F     		cmp	r7, #140
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
 2419              		.loc 1 1655 4 view .LVU748
 2420 0220 29F08005 		bic	r5, r9, #128
 2421              	.LVL189:
1656:src/keys.c    **** 		reset_arg();
 2422              		.loc 1 1656 2 is_stmt 1 view .LVU749
1656:src/keys.c    **** 		reset_arg();
 2423              		.loc 1 1656 5 is_stmt 0 view .LVU750
 2424 0224 81D8     		bhi	.L266
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2425              		.loc 1 1651 61 view .LVU751
 2426 0226 4FF0010C 		mov	ip, #1
 2427 022a 6AE7     		b	.L214
 2428              	.LVL190:
 2429              	.L229:
1724:src/keys.c    **** 			break;
 2430              		.loc 1 1724 3 is_stmt 1 view .LVU752
1724:src/keys.c    **** 			break;
 2431              		.loc 1 1724 18 is_stmt 0 view .LVU753
 2432 022c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1724:src/keys.c    **** 			break;
 2433              		.loc 1 1724 6 view .LVU754
 2434 022e 13F0C00F 		tst	r3, #192
 2435 0232 7FF47CAF 		bne	.L304
1726:src/keys.c    **** 			CmdBase = RARG_STOM;
 2436              		.loc 1 1726 3 is_stmt 1 view .LVU755
1726:src/keys.c    **** 			CmdBase = RARG_STOM;
 2437              		.loc 1 1726 6 is_stmt 0 view .LVU756
 2438 0236 032F     		cmp	r7, #3
 2439 0238 00F0EE80 		beq	.L310
1728:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2440              		.loc 1 1728 8 is_stmt 1 view .LVU757
1728:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2441              		.loc 1 1728 11 is_stmt 0 view .LVU758
 2442 023c 0A2F     		cmp	r7, #10
 2443 023e 7FF476AF 		bne	.L304
1729:src/keys.c    **** 		break;
 2444              		.loc 1 1729 4 is_stmt 1 view .LVU759
1729:src/keys.c    **** 		break;
ARM GAS  /tmp/ccQmaUTi.s 			page 102


 2445              		.loc 1 1729 12 is_stmt 0 view .LVU760
 2446 0242 7823     		movs	r3, #120
 2447 0244 E377     		strb	r3, [r4, #31]
1880:src/keys.c    **** }
 2448              		.loc 1 1880 9 view .LVU761
 2449 0246 3320     		movs	r0, #51
 2450 0248 72E7     		b	.L202
 2451              	.L255:
1834:src/keys.c    **** 			if (argcmds[base].label) {
 2452              		.loc 1 1834 3 is_stmt 1 view .LVU762
1834:src/keys.c    **** 			if (argcmds[base].label) {
 2453              		.loc 1 1834 6 is_stmt 0 view .LVU763
 2454 024a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2455 024c 002B     		cmp	r3, #0
 2456 024e 00F0A080 		beq	.L311
1848:src/keys.c    **** 			return arg_eval(State2.digval);
 2457              		.loc 1 1848 10 is_stmt 1 view .LVU764
1849:src/keys.c    **** 		else if (stack_reg)
 2458              		.loc 1 1849 4 view .LVU765
1849:src/keys.c    **** 		else if (stack_reg)
 2459              		.loc 1 1849 11 is_stmt 0 view .LVU766
 2460 0252 2089     		ldrh	r0, [r4, #8]
 2461 0254 B5E7     		b	.L306
 2462              	.L253:
1826:src/keys.c    **** 		break;
 2463              		.loc 1 1826 3 is_stmt 1 view .LVU767
 2464 0256 0021     		movs	r1, #0
 2465 0258 0620     		movs	r0, #6
 2466 025a FFF7FEFF 		bl	arg_storcl
 2467              	.LVL191:
1827:src/keys.c    **** 
 2468              		.loc 1 1827 3 view .LVU768
1880:src/keys.c    **** }
 2469              		.loc 1 1880 9 is_stmt 0 view .LVU769
 2470 025e 3320     		movs	r0, #51
1827:src/keys.c    **** 
 2471              		.loc 1 1827 3 view .LVU770
 2472 0260 66E7     		b	.L202
 2473              	.L246:
1779:src/keys.c    **** 			reset_arg();
 2474              		.loc 1 1779 3 is_stmt 1 view .LVU771
1779:src/keys.c    **** 			reset_arg();
 2475              		.loc 1 1779 6 is_stmt 0 view .LVU772
 2476 0262 212F     		cmp	r7, #33
 2477 0264 00F0C580 		beq	.L247
1779:src/keys.c    **** 			reset_arg();
 2478              		.loc 1 1779 25 discriminator 1 view .LVU773
 2479 0268 732F     		cmp	r7, #115
 2480 026a 00F0C280 		beq	.L247
1783:src/keys.c    **** 		break;
 2481              		.loc 1 1783 3 is_stmt 1 view .LVU774
 2482 026e 0121     		movs	r1, #1
 2483 0270 0220     		movs	r0, #2
 2484 0272 FFF7FEFF 		bl	arg_storcl
 2485              	.LVL192:
1784:src/keys.c    **** 	case K44:		// multiply
 2486              		.loc 1 1784 3 view .LVU775
ARM GAS  /tmp/ccQmaUTi.s 			page 103


1880:src/keys.c    **** }
 2487              		.loc 1 1880 9 is_stmt 0 view .LVU776
 2488 0276 3320     		movs	r0, #51
1784:src/keys.c    **** 	case K44:		// multiply
 2489              		.loc 1 1784 3 view .LVU777
 2490 0278 5AE7     		b	.L202
 2491              	.L239:
1771:src/keys.c    **** 
 2492              		.loc 1 1771 3 is_stmt 1 view .LVU778
 2493              	.LVL193:
 2494              	.LBB361:
 2495              	.LBI361:
1613:src/keys.c    **** 
 2496              		.loc 1 1613 12 view .LVU779
 2497              	.LBB362:
1615:src/keys.c    **** 		// Only valid at beginning of entry
 2498              		.loc 1 1615 2 view .LVU780
1615:src/keys.c    **** 		// Only valid at beginning of entry
 2499              		.loc 1 1615 5 is_stmt 0 view .LVU781
 2500 027a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2501 027c 002B     		cmp	r3, #0
 2502 027e 7FF456AF 		bne	.L304
1617:src/keys.c    **** 			// '..' or ENTER '.' = X
 2503              		.loc 1 1617 3 is_stmt 1 view .LVU782
1617:src/keys.c    **** 			// '..' or ENTER '.' = X
 2504              		.loc 1 1617 6 is_stmt 0 view .LVU783
 2505 0282 10F4A03F 		tst	r0, #81920
 2506 0286 40F0CB80 		bne	.L312
1622:src/keys.c    **** 			// local register or flag select
 2507              		.loc 1 1622 3 is_stmt 1 view .LVU784
1622:src/keys.c    **** 			// local register or flag select
 2508              		.loc 1 1622 20 is_stmt 0 view .LVU785
 2509 028a 0BEB0A02 		add	r2, fp, r10
 2510 028e 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1622:src/keys.c    **** 			// local register or flag select
 2511              		.loc 1 1622 6 view .LVU786
 2512 0290 1D07     		lsls	r5, r3, #28
 2513 0292 00F1B380 		bmi	.L241
1622:src/keys.c    **** 			// local register or flag select
 2514              		.loc 1 1622 27 view .LVU787
 2515 0296 94F91530 		ldrsb	r3, [r4, #21]
 2516 029a 002B     		cmp	r3, #0
 2517 029c C0F2AE80 		blt	.L241
1626:src/keys.c    **** 			// Special GTO . sequence
 2518              		.loc 1 1626 8 is_stmt 1 view .LVU788
1626:src/keys.c    **** 			// Special GTO . sequence
 2519              		.loc 1 1626 29 is_stmt 0 view .LVU789
 2520 02a0 443F     		subs	r7, r7, #68
 2521              	.LVL194:
1626:src/keys.c    **** 			// Special GTO . sequence
 2522              		.loc 1 1626 11 view .LVU790
 2523 02a2 012F     		cmp	r7, #1
 2524 02a4 3FF643AF 		bhi	.L304
1628:src/keys.c    **** 				State2.gtodot = 1;
 2525              		.loc 1 1628 4 is_stmt 1 view .LVU791
1629:src/keys.c    **** 				reset_arg();
 2526              		.loc 1 1629 5 view .LVU792
ARM GAS  /tmp/ccQmaUTi.s 			page 104


1629:src/keys.c    **** 				reset_arg();
 2527              		.loc 1 1629 19 is_stmt 0 view .LVU793
 2528 02a8 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2529 02aa 43F00103 		orr	r3, r3, #1
 2530 02ae 6375     		strb	r3, [r4, #21]
1630:src/keys.c    **** 			}
 2531              		.loc 1 1630 5 is_stmt 1 view .LVU794
 2532 02b0 FFF7FEFF 		bl	reset_arg
 2533              	.LVL195:
1634:src/keys.c    **** }
 2534              		.loc 1 1634 9 is_stmt 0 view .LVU795
 2535 02b4 3320     		movs	r0, #51
 2536 02b6 3BE7     		b	.L202
 2537              	.L318:
 2538              		.align	2
 2539              	.L317:
 2540 02b8 00000000 		.word	StateWhileOn
 2541 02bc 00000000 		.word	.LANCHOR1
 2542 02c0 00000000 		.word	.LANCHOR0
 2543 02c4 ABAAAAAA 		.word	-1431655765
 2544 02c8 00000000 		.word	argcmds
 2545              	.LVL196:
 2546              	.L243:
1634:src/keys.c    **** }
 2547              		.loc 1 1634 9 view .LVU796
 2548              	.LBE362:
 2549              	.LBE361:
1775:src/keys.c    **** 			return arg_eval(n);
 2550              		.loc 1 1775 3 is_stmt 1 view .LVU797
1775:src/keys.c    **** 			return arg_eval(n);
 2551              		.loc 1 1775 7 is_stmt 0 view .LVU798
 2552 02cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1775:src/keys.c    **** 			return arg_eval(n);
 2553              		.loc 1 1775 6 view .LVU799
 2554 02ce 5C06     		lsls	r4, r3, #25
 2555 02d0 88D4     		bmi	.L251
1775:src/keys.c    **** 			return arg_eval(n);
 2556              		.loc 1 1775 25 discriminator 1 view .LVU800
 2557 02d2 0121     		movs	r1, #1
 2558 02d4 0846     		mov	r0, r1
 2559 02d6 FFF7FEFF 		bl	arg_storcl
 2560              	.LVL197:
1775:src/keys.c    **** 			return arg_eval(n);
 2561              		.loc 1 1775 18 discriminator 1 view .LVU801
 2562 02da 0028     		cmp	r0, #0
 2563 02dc 7FF427AF 		bne	.L304
1786:src/keys.c    **** 			return arg_eval(n);
 2564              		.loc 1 1786 63 view .LVU802
 2565 02e0 B8F1000F 		cmp	r8, #0
 2566 02e4 3FF423AF 		beq	.L304
 2567 02e8 7CE7     		b	.L251
 2568              	.L227:
1716:src/keys.c    **** 			State2.ind = ! State2.ind;
 2569              		.loc 1 1716 3 is_stmt 1 view .LVU803
1716:src/keys.c    **** 			State2.ind = ! State2.ind;
 2570              		.loc 1 1716 7 is_stmt 0 view .LVU804
 2571 02ea 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccQmaUTi.s 			page 105


1716:src/keys.c    **** 			State2.ind = ! State2.ind;
 2572              		.loc 1 1716 6 view .LVU805
 2573 02ec 5E06     		lsls	r6, r3, #25
 2574 02ee 3FF51EAF 		bmi	.L304
1716:src/keys.c    **** 			State2.ind = ! State2.ind;
 2575              		.loc 1 1716 35 discriminator 1 view .LVU806
 2576 02f2 D344     		add	fp, fp, r10
 2577 02f4 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
1716:src/keys.c    **** 			State2.ind = ! State2.ind;
 2578              		.loc 1 1716 19 discriminator 1 view .LVU807
 2579 02f8 D507     		lsls	r5, r2, #31
 2580 02fa 7FF518AF 		bpl	.L304
1717:src/keys.c    **** 			if (! stack_reg)
 2581              		.loc 1 1717 4 is_stmt 1 view .LVU808
1717:src/keys.c    **** 			if (! stack_reg)
 2582              		.loc 1 1717 17 is_stmt 0 view .LVU809
 2583 02fe DA43     		mvns	r2, r3
 2584 0300 C2F3C012 		ubfx	r2, r2, #7, #1
1717:src/keys.c    **** 			if (! stack_reg)
 2585              		.loc 1 1717 15 view .LVU810
 2586 0304 62F3C713 		bfi	r3, r2, #7, #1
 2587 0308 6375     		strb	r3, [r4, #21]
1718:src/keys.c    **** 				State2.dot = 0;
 2588              		.loc 1 1718 4 is_stmt 1 view .LVU811
1718:src/keys.c    **** 				State2.dot = 0;
 2589              		.loc 1 1718 7 is_stmt 0 view .LVU812
 2590 030a B8F1000F 		cmp	r8, #0
 2591 030e 7FF40EAF 		bne	.L304
 2592              	.L264:
1719:src/keys.c    **** 		}
 2593              		.loc 1 1719 5 is_stmt 1 view .LVU813
1719:src/keys.c    **** 		}
 2594              		.loc 1 1719 16 is_stmt 0 view .LVU814
 2595 0312 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2596 0314 6FF38613 		bfc	r3, #6, #1
 2597 0318 6375     		strb	r3, [r4, #21]
1880:src/keys.c    **** }
 2598              		.loc 1 1880 9 view .LVU815
 2599 031a 3320     		movs	r0, #51
 2600 031c 08E7     		b	.L202
 2601              	.L233:
1736:src/keys.c    **** 	    return process_arg_shuffle(0);
 2602              		.loc 1 1736 4 is_stmt 1 view .LVU816
1736:src/keys.c    **** 	    return process_arg_shuffle(0);
 2603              		.loc 1 1736 8 is_stmt 0 view .LVU817
 2604 031e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1736:src/keys.c    **** 	    return process_arg_shuffle(0);
 2605              		.loc 1 1736 7 view .LVU818
 2606 0320 9907     		lsls	r1, r3, #30
 2607 0322 7FF508AF 		bpl	.L232
1737:src/keys.c    **** 	case K52:	// Y
 2608              		.loc 1 1737 6 is_stmt 1 view .LVU819
1737:src/keys.c    **** 	case K52:	// Y
 2609              		.loc 1 1737 13 is_stmt 0 view .LVU820
 2610 0326 0020     		movs	r0, #0
 2611              	.L307:
1881:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 106


 2612              		.loc 1 1881 1 view .LVU821
 2613 0328 03B0     		add	sp, sp, #12
 2614              		.cfi_remember_state
 2615              		.cfi_def_cfa_offset 36
 2616              	.LVL198:
1881:src/keys.c    **** 
 2617              		.loc 1 1881 1 view .LVU822
 2618              		@ sp needed
 2619 032a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2620              		.cfi_restore 14
 2621              		.cfi_restore 11
 2622              		.cfi_restore 10
 2623              		.cfi_restore 9
 2624              		.cfi_restore 8
 2625              		.cfi_restore 7
 2626              		.cfi_restore 6
 2627              		.cfi_restore 5
 2628              		.cfi_restore 4
 2629              		.cfi_def_cfa_offset 0
 2630              	.LVL199:
1743:src/keys.c    **** #else
 2631              		.loc 1 1743 13 view .LVU823
 2632 032e FFF7FEBF 		b	process_arg_shuffle
 2633              	.LVL200:
 2634              	.L234:
 2635              		.cfi_restore_state
1739:src/keys.c    **** 	    return process_arg_shuffle(1);
 2636              		.loc 1 1739 4 is_stmt 1 view .LVU824
1739:src/keys.c    **** 	    return process_arg_shuffle(1);
 2637              		.loc 1 1739 8 is_stmt 0 view .LVU825
 2638 0332 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1739:src/keys.c    **** 	    return process_arg_shuffle(1);
 2639              		.loc 1 1739 7 view .LVU826
 2640 0334 9A07     		lsls	r2, r3, #30
 2641 0336 7FF5FEAE 		bpl	.L232
1740:src/keys.c    **** 	case K53:       // Z
 2642              		.loc 1 1740 6 is_stmt 1 view .LVU827
1740:src/keys.c    **** 	case K53:       // Z
 2643              		.loc 1 1740 13 is_stmt 0 view .LVU828
 2644 033a 0120     		movs	r0, #1
 2645 033c F4E7     		b	.L307
 2646              	.L235:
1742:src/keys.c    **** 	    return process_arg_shuffle(2);
 2647              		.loc 1 1742 4 is_stmt 1 view .LVU829
1742:src/keys.c    **** 	    return process_arg_shuffle(2);
 2648              		.loc 1 1742 8 is_stmt 0 view .LVU830
 2649 033e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1742:src/keys.c    **** 	    return process_arg_shuffle(2);
 2650              		.loc 1 1742 7 view .LVU831
 2651 0340 9B07     		lsls	r3, r3, #30
 2652 0342 7FF5F8AE 		bpl	.L232
1743:src/keys.c    **** #else
 2653              		.loc 1 1743 6 is_stmt 1 view .LVU832
1743:src/keys.c    **** #else
 2654              		.loc 1 1743 13 is_stmt 0 view .LVU833
 2655 0346 0220     		movs	r0, #2
 2656 0348 EEE7     		b	.L307
ARM GAS  /tmp/ccQmaUTi.s 			page 107


 2657              	.L254:
1830:src/keys.c    **** 		break;
 2658              		.loc 1 1830 3 is_stmt 1 view .LVU834
 2659 034a 0021     		movs	r1, #0
 2660 034c 0520     		movs	r0, #5
 2661 034e FFF7FEFF 		bl	arg_storcl
 2662              	.LVL201:
1831:src/keys.c    **** 
 2663              		.loc 1 1831 3 view .LVU835
1880:src/keys.c    **** }
 2664              		.loc 1 1880 9 is_stmt 0 view .LVU836
 2665 0352 3320     		movs	r0, #51
1831:src/keys.c    **** 
 2666              		.loc 1 1831 3 view .LVU837
 2667 0354 ECE6     		b	.L202
 2668              	.L231:
1733:src/keys.c    **** 	    return process_arg_shuffle(3);
 2669              		.loc 1 1733 4 is_stmt 1 view .LVU838
1733:src/keys.c    **** 	    return process_arg_shuffle(3);
 2670              		.loc 1 1733 8 is_stmt 0 view .LVU839
 2671 0356 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1733:src/keys.c    **** 	    return process_arg_shuffle(3);
 2672              		.loc 1 1733 7 view .LVU840
 2673 0358 9807     		lsls	r0, r3, #30
 2674 035a 7FF5ECAE 		bpl	.L232
1734:src/keys.c    **** 	case K51:       // X
 2675              		.loc 1 1734 6 is_stmt 1 view .LVU841
1734:src/keys.c    **** 	case K51:       // X
 2676              		.loc 1 1734 13 is_stmt 0 view .LVU842
 2677 035e 0320     		movs	r0, #3
 2678 0360 E2E7     		b	.L307
 2679              	.L252:
1790:src/keys.c    **** 		break;
 2680              		.loc 1 1790 3 is_stmt 1 view .LVU843
 2681 0362 0121     		movs	r1, #1
 2682 0364 0420     		movs	r0, #4
 2683 0366 FFF7FEFF 		bl	arg_storcl
 2684              	.LVL202:
1791:src/keys.c    **** #else
 2685              		.loc 1 1791 3 view .LVU844
1880:src/keys.c    **** }
 2686              		.loc 1 1880 9 is_stmt 0 view .LVU845
 2687 036a 3320     		movs	r0, #51
1791:src/keys.c    **** #else
 2688              		.loc 1 1791 3 view .LVU846
 2689 036c E0E6     		b	.L202
 2690              	.L262:
1855:src/keys.c    **** 			if (State2.dot)
 2691              		.loc 1 1855 3 is_stmt 1 view .LVU847
1855:src/keys.c    **** 			if (State2.dot)
 2692              		.loc 1 1855 13 is_stmt 0 view .LVU848
 2693 036e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
1855:src/keys.c    **** 			if (State2.dot)
 2694              		.loc 1 1855 6 view .LVU849
 2695 0370 7BBB     		cbnz	r3, .L263
1856:src/keys.c    **** 				State2.dot = 0;
 2696              		.loc 1 1856 4 is_stmt 1 view .LVU850
ARM GAS  /tmp/ccQmaUTi.s 			page 108


1856:src/keys.c    **** 				State2.dot = 0;
 2697              		.loc 1 1856 8 is_stmt 0 view .LVU851
 2698 0372 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1856:src/keys.c    **** 				State2.dot = 0;
 2699              		.loc 1 1856 7 view .LVU852
 2700 0374 13F04001 		ands	r1, r3, #64
 2701 0378 CBD1     		bne	.L264
1858:src/keys.c    **** 				State2.local = 0;
 2702              		.loc 1 1858 9 is_stmt 1 view .LVU853
1858:src/keys.c    **** 				State2.local = 0;
 2703              		.loc 1 1858 13 is_stmt 0 view .LVU854
 2704 037a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1858:src/keys.c    **** 				State2.local = 0;
 2705              		.loc 1 1858 12 view .LVU855
 2706 037c 12F00100 		ands	r0, r2, #1
 2707 0380 54D1     		bne	.L313
1860:src/keys.c    **** 				State2.ind = 0;
 2708              		.loc 1 1860 9 is_stmt 1 view .LVU856
1860:src/keys.c    **** 				State2.ind = 0;
 2709              		.loc 1 1860 12 is_stmt 0 view .LVU857
 2710 0382 1906     		lsls	r1, r3, #24
 2711 0384 7FF5D1AE 		bpl	.L266
1861:src/keys.c    **** 			else
 2712              		.loc 1 1861 5 is_stmt 1 view .LVU858
1861:src/keys.c    **** 			else
 2713              		.loc 1 1861 16 is_stmt 0 view .LVU859
 2714 0388 60F3C713 		bfi	r3, r0, #7, #1
 2715 038c 6375     		strb	r3, [r4, #21]
1880:src/keys.c    **** }
 2716              		.loc 1 1880 9 view .LVU860
 2717 038e 3320     		movs	r0, #51
 2718 0390 CEE6     		b	.L202
 2719              	.L311:
1834:src/keys.c    **** 			if (argcmds[base].label) {
 2720              		.loc 1 1834 43 discriminator 1 view .LVU861
 2721 0392 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2722 0394 13F0C00F 		tst	r3, #192
 2723 0398 0ED1     		bne	.L257
1835:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2724              		.loc 1 1835 4 is_stmt 1 view .LVU862
1835:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2725              		.loc 1 1835 7 is_stmt 0 view .LVU863
 2726 039a 0029     		cmp	r1, #0
 2727 039c 4BD1     		bne	.L314
1840:src/keys.c    **** 				reset_arg();
 2728              		.loc 1 1840 11 is_stmt 1 view .LVU864
1840:src/keys.c    **** 				reset_arg();
 2729              		.loc 1 1840 14 is_stmt 0 view .LVU865
 2730 039e 4E2F     		cmp	r7, #78
 2731 03a0 5BD0     		beq	.L315
1843:src/keys.c    **** 				reset_arg();
 2732              		.loc 1 1843 11 is_stmt 1 view .LVU866
1843:src/keys.c    **** 				reset_arg();
 2733              		.loc 1 1843 14 is_stmt 0 view .LVU867
 2734 03a2 4F2F     		cmp	r7, #79
 2735 03a4 5ED0     		beq	.L316
1846:src/keys.c    **** 				State2.dot = 1;
ARM GAS  /tmp/ccQmaUTi.s 			page 109


 2736              		.loc 1 1846 11 is_stmt 1 view .LVU868
1846:src/keys.c    **** 				State2.dot = 1;
 2737              		.loc 1 1846 14 is_stmt 0 view .LVU869
 2738 03a6 019A     		ldr	r2, [sp, #4]
 2739 03a8 002A     		cmp	r2, #0
 2740 03aa 3FF4C0AE 		beq	.L304
1847:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2741              		.loc 1 1847 5 is_stmt 1 view .LVU870
1847:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2742              		.loc 1 1847 16 is_stmt 0 view .LVU871
 2743 03ae 43F04003 		orr	r3, r3, #64
 2744 03b2 6375     		strb	r3, [r4, #21]
1880:src/keys.c    **** }
 2745              		.loc 1 1880 9 view .LVU872
 2746 03b4 3320     		movs	r0, #51
 2747 03b6 BBE6     		b	.L202
 2748              	.L257:
1848:src/keys.c    **** 			return arg_eval(State2.digval);
 2749              		.loc 1 1848 10 is_stmt 1 view .LVU873
1850:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2750              		.loc 1 1850 8 view .LVU874
1850:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2751              		.loc 1 1850 11 is_stmt 0 view .LVU875
 2752 03b8 B8F1000F 		cmp	r8, #0
 2753 03bc 3FF4B7AE 		beq	.L304
1851:src/keys.c    **** 		break;
 2754              		.loc 1 1851 4 is_stmt 1 view .LVU876
1851:src/keys.c    **** 		break;
 2755              		.loc 1 1851 27 is_stmt 0 view .LVU877
 2756 03c0 C3F38012 		ubfx	r2, r3, #6, #1
1851:src/keys.c    **** 		break;
 2757              		.loc 1 1851 19 view .LVU878
 2758 03c4 C2F10102 		rsb	r2, r2, #1
1851:src/keys.c    **** 		break;
 2759              		.loc 1 1851 15 view .LVU879
 2760 03c8 62F38613 		bfi	r3, r2, #6, #1
 2761 03cc 6375     		strb	r3, [r4, #21]
1880:src/keys.c    **** }
 2762              		.loc 1 1880 9 view .LVU880
 2763 03ce 3320     		movs	r0, #51
 2764 03d0 AEE6     		b	.L202
 2765              	.L263:
1866:src/keys.c    **** 			if (State2.shuffle)
 2766              		.loc 1 1866 4 is_stmt 1 view .LVU881
1867:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2767              		.loc 1 1867 8 is_stmt 0 view .LVU882
 2768 03d2 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1866:src/keys.c    **** 			if (State2.shuffle)
 2769              		.loc 1 1866 4 view .LVU883
 2770 03d4 013B     		subs	r3, r3, #1
 2771 03d6 DBB2     		uxtb	r3, r3
1867:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2772              		.loc 1 1867 7 view .LVU884
 2773 03d8 9207     		lsls	r2, r2, #30
1866:src/keys.c    **** 			if (State2.shuffle)
 2774              		.loc 1 1866 4 view .LVU885
 2775 03da E372     		strb	r3, [r4, #11]
ARM GAS  /tmp/ccQmaUTi.s 			page 110


1867:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2776              		.loc 1 1867 4 is_stmt 1 view .LVU886
1867:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2777              		.loc 1 1867 7 is_stmt 0 view .LVU887
 2778 03dc 14D5     		bpl	.L267
1868:src/keys.c    **** 			else
 2779              		.loc 1 1868 5 is_stmt 1 view .LVU888
1868:src/keys.c    **** 			else
 2780              		.loc 1 1868 19 is_stmt 0 view .LVU889
 2781 03de 2289     		ldrh	r2, [r4, #8]
1868:src/keys.c    **** 			else
 2782              		.loc 1 1868 46 view .LVU890
 2783 03e0 5B00     		lsls	r3, r3, #1
1868:src/keys.c    **** 			else
 2784              		.loc 1 1868 26 view .LVU891
 2785 03e2 0321     		movs	r1, #3
 2786 03e4 01FA03F3 		lsl	r3, r1, r3
1868:src/keys.c    **** 			else
 2787              		.loc 1 1868 19 view .LVU892
 2788 03e8 22EA0303 		bic	r3, r2, r3
 2789 03ec 2381     		strh	r3, [r4, #8]	@ movhi
1880:src/keys.c    **** }
 2790              		.loc 1 1880 9 view .LVU893
 2791 03ee 3320     		movs	r0, #51
 2792 03f0 9EE6     		b	.L202
 2793              	.L247:
1780:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2794              		.loc 1 1780 4 is_stmt 1 view .LVU894
 2795 03f2 FFF7FEFF 		bl	reset_arg
 2796              	.LVL203:
1781:src/keys.c    **** 		}
 2797              		.loc 1 1781 4 view .LVU895
1781:src/keys.c    **** 		}
 2798              		.loc 1 1781 11 is_stmt 0 view .LVU896
 2799 03f6 40F27510 		movw	r0, #373
 2800 03fa 99E6     		b	.L202
 2801              	.LVL204:
 2802              	.L241:
 2803              	.LBB365:
 2804              	.LBB363:
1624:src/keys.c    **** 		}
 2805              		.loc 1 1624 4 is_stmt 1 view .LVU897
1624:src/keys.c    **** 		}
 2806              		.loc 1 1624 17 is_stmt 0 view .LVU898
 2807 03fc A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2808 03fe 43F00103 		orr	r3, r3, #1
 2809 0402 A375     		strb	r3, [r4, #22]
1634:src/keys.c    **** }
 2810              		.loc 1 1634 9 view .LVU899
 2811 0404 3320     		movs	r0, #51
1624:src/keys.c    **** 		}
 2812              		.loc 1 1624 17 view .LVU900
 2813 0406 93E6     		b	.L202
 2814              	.LVL205:
 2815              	.L267:
1624:src/keys.c    **** 		}
 2816              		.loc 1 1624 17 view .LVU901
ARM GAS  /tmp/ccQmaUTi.s 			page 111


 2817              	.LBE363:
 2818              	.LBE365:
1870:src/keys.c    **** 		}
 2819              		.loc 1 1870 5 is_stmt 1 view .LVU902
1870:src/keys.c    **** 		}
 2820              		.loc 1 1870 19 is_stmt 0 view .LVU903
 2821 0408 2389     		ldrh	r3, [r4, #8]
 2822 040a 1A4A     		ldr	r2, .L319
 2823 040c A2FB0323 		umull	r2, r3, r2, r3
 2824 0410 DB08     		lsrs	r3, r3, #3
 2825 0412 2381     		strh	r3, [r4, #8]	@ movhi
1880:src/keys.c    **** }
 2826              		.loc 1 1880 9 view .LVU904
 2827 0414 3320     		movs	r0, #51
 2828 0416 8BE6     		b	.L202
 2829              	.L310:
1727:src/keys.c    **** 		else if (base == RARG_RCL)
 2830              		.loc 1 1727 4 is_stmt 1 view .LVU905
1727:src/keys.c    **** 		else if (base == RARG_RCL)
 2831              		.loc 1 1727 12 is_stmt 0 view .LVU906
 2832 0418 7723     		movs	r3, #119
 2833 041a E377     		strb	r3, [r4, #31]
1880:src/keys.c    **** }
 2834              		.loc 1 1880 9 view .LVU907
 2835 041c 3320     		movs	r0, #51
 2836 041e 87E6     		b	.L202
 2837              	.LVL206:
 2838              	.L312:
 2839              	.LBB366:
 2840              	.LBB364:
1619:src/keys.c    **** 			return arg_eval(regX_idx);
 2841              		.loc 1 1619 4 is_stmt 1 view .LVU908
1619:src/keys.c    **** 			return arg_eval(regX_idx);
 2842              		.loc 1 1619 17 is_stmt 0 view .LVU909
 2843 0420 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2844 0422 63F30002 		bfi	r2, r3, #0, #1
1620:src/keys.c    **** 		}
 2845              		.loc 1 1620 11 view .LVU910
 2846 0426 6420     		movs	r0, #100
1619:src/keys.c    **** 			return arg_eval(regX_idx);
 2847              		.loc 1 1619 17 view .LVU911
 2848 0428 A275     		strb	r2, [r4, #22]
1620:src/keys.c    **** 		}
 2849              		.loc 1 1620 4 is_stmt 1 view .LVU912
 2850 042a CAE6     		b	.L306
 2851              	.LVL207:
 2852              	.L313:
1620:src/keys.c    **** 		}
 2853              		.loc 1 1620 4 is_stmt 0 view .LVU913
 2854              	.LBE364:
 2855              	.LBE366:
1859:src/keys.c    **** 			else if (State2.ind)
 2856              		.loc 1 1859 5 is_stmt 1 view .LVU914
1859:src/keys.c    **** 			else if (State2.ind)
 2857              		.loc 1 1859 18 is_stmt 0 view .LVU915
 2858 042c 61F30002 		bfi	r2, r1, #0, #1
 2859 0430 A275     		strb	r2, [r4, #22]
ARM GAS  /tmp/ccQmaUTi.s 			page 112


1880:src/keys.c    **** }
 2860              		.loc 1 1880 9 view .LVU916
 2861 0432 3320     		movs	r0, #51
 2862 0434 7CE6     		b	.L202
 2863              	.L314:
1836:src/keys.c    **** 				State2.multi = 1;
 2864              		.loc 1 1836 5 is_stmt 1 view .LVU917
 2865              	.LVL208:
 2866              	.LBB367:
 2867              	.LBI367:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 2868              		.loc 1 501 13 view .LVU918
 2869              	.LBB368:
 502:src/keys.c    **** 		return;
 2870              		.loc 1 502 2 view .LVU919
 502:src/keys.c    **** 		return;
 2871              		.loc 1 502 6 is_stmt 0 view .LVU920
 2872 0436 FFF7FEFF 		bl	is_bad_cmdline
 2873              	.LVL209:
 502:src/keys.c    **** 		return;
 2874              		.loc 1 502 5 view .LVU921
 2875 043a 20B9     		cbnz	r0, .L259
 2876              	.LBE368:
 2877              	.LBE367:
1836:src/keys.c    **** 				State2.multi = 1;
 2878              		.loc 1 1836 31 view .LVU922
 2879 043c A7F14200 		sub	r0, r7, #66
 2880              	.LBB370:
 2881              	.LBB369:
 2882 0440 C0B2     		uxtb	r0, r0
 2883 0442 FFF7FEFF 		bl	init_arg.part.0
 2884              	.LVL210:
 2885              	.L259:
1836:src/keys.c    **** 				State2.multi = 1;
 2886              		.loc 1 1836 31 view .LVU923
 2887              	.LBE369:
 2888              	.LBE370:
1837:src/keys.c    **** 				State2.alphashift = 0;
 2889              		.loc 1 1837 5 is_stmt 1 view .LVU924
1838:src/keys.c    **** 				State2.rarg = 0;
 2890              		.loc 1 1838 5 view .LVU925
1839:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2891              		.loc 1 1839 5 view .LVU926
1837:src/keys.c    **** 				State2.alphashift = 0;
 2892              		.loc 1 1837 18 is_stmt 0 view .LVU927
 2893 0446 6369     		ldr	r3, [r4, #20]
 2894 0448 23F44013 		bic	r3, r3, #3145728
 2895 044c 23F40063 		bic	r3, r3, #2048
 2896 0450 43F40063 		orr	r3, r3, #2048
 2897 0454 6361     		str	r3, [r4, #20]
1880:src/keys.c    **** }
 2898              		.loc 1 1880 9 view .LVU928
 2899 0456 3320     		movs	r0, #51
 2900 0458 6AE6     		b	.L202
 2901              	.L315:
1841:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2902              		.loc 1 1841 5 is_stmt 1 view .LVU929
ARM GAS  /tmp/ccQmaUTi.s 			page 113


 2903 045a FFF7FEFF 		bl	reset_arg
 2904              	.LVL211:
1842:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2905              		.loc 1 1842 5 view .LVU930
1842:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2906              		.loc 1 1842 12 is_stmt 0 view .LVU931
 2907 045e 40F25510 		movw	r0, #341
 2908 0462 65E6     		b	.L202
 2909              	.L316:
1844:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2910              		.loc 1 1844 5 is_stmt 1 view .LVU932
 2911 0464 FFF7FEFF 		bl	reset_arg
 2912              	.LVL212:
1845:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2913              		.loc 1 1845 5 view .LVU933
1845:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2914              		.loc 1 1845 12 is_stmt 0 view .LVU934
 2915 0468 4FF4AB70 		mov	r0, #342
 2916 046c 60E6     		b	.L202
 2917              	.L220:
1664:src/keys.c    **** 	  case regY_idx:
 2918              		.loc 1 1664 6 is_stmt 1 view .LVU935
1664:src/keys.c    **** 	  case regY_idx:
 2919              		.loc 1 1664 13 is_stmt 0 view .LVU936
 2920 046e 0120     		movs	r0, #1
 2921 0470 BBE6     		b	.L305
 2922              	.L320:
 2923 0472 00BF     		.align	2
 2924              	.L319:
 2925 0474 CDCCCCCC 		.word	-858993459
 2926              		.cfi_endproc
 2927              	.LFE37:
 2929              		.section	.text.cur_shift,"ax",%progbits
 2930              		.align	1
 2931              		.p2align 2,,3
 2932              		.global	cur_shift
 2933              		.syntax unified
 2934              		.thumb
 2935              		.thumb_func
 2936              		.fpu fpv4-sp-d16
 2938              	cur_shift:
 2939              	.LFB0:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2940              		.loc 1 84 29 is_stmt 1 view -0
 2941              		.cfi_startproc
 2942              		@ args = 0, pretend = 0, frame = 0
 2943              		@ frame_needed = 0, uses_anonymous_args = 0
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2944              		.loc 1 85 2 view .LVU938
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2945              		.loc 1 84 29 is_stmt 0 view .LVU939
 2946 0000 08B5     		push	{r3, lr}
 2947              		.cfi_def_cfa_offset 8
 2948              		.cfi_offset 3, -8
 2949              		.cfi_offset 14, -4
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2950              		.loc 1 85 18 view .LVU940
ARM GAS  /tmp/ccQmaUTi.s 			page 114


 2951 0002 FFF7FEFF 		bl	shift_down
 2952              	.LVL213:
  86:src/keys.c    **** }
 2953              		.loc 1 86 2 is_stmt 1 view .LVU941
  86:src/keys.c    **** }
 2954              		.loc 1 86 52 is_stmt 0 view .LVU942
 2955 0006 08B9     		cbnz	r0, .L322
  86:src/keys.c    **** }
 2956              		.loc 1 86 52 discriminator 1 view .LVU943
 2957 0008 014B     		ldr	r3, .L324
 2958 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2959              	.LVL214:
 2960              	.L322:
  87:src/keys.c    **** 
 2961              		.loc 1 87 1 discriminator 4 view .LVU944
 2962 000c 08BD     		pop	{r3, pc}
 2963              	.L325:
 2964 000e 00BF     		.align	2
 2965              	.L324:
 2966 0010 00000000 		.word	StateWhileOn
 2967              		.cfi_endproc
 2968              	.LFE0:
 2970              		.section	.text.reset_shift,"ax",%progbits
 2971              		.align	1
 2972              		.p2align 2,,3
 2973              		.global	reset_shift
 2974              		.syntax unified
 2975              		.thumb
 2976              		.thumb_func
 2977              		.fpu fpv4-sp-d16
 2979              	reset_shift:
 2980              	.LFB2:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 2981              		.loc 1 102 31 is_stmt 1 view -0
 2982              		.cfi_startproc
 2983              		@ args = 0, pretend = 0, frame = 0
 2984              		@ frame_needed = 0, uses_anonymous_args = 0
 103:src/keys.c    **** }
 2985              		.loc 1 103 2 view .LVU946
 2986              	.LVL215:
 2987              	.LBB371:
 2988              	.LBI371:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2989              		.loc 1 92 20 view .LVU947
 2990              	.LBB372:
  93:src/keys.c    **** 	State2.shifts = shift;
 2991              		.loc 1 93 2 view .LVU948
 2992              	.LBB373:
 2993              	.LBI373:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2994              		.loc 1 84 13 view .LVU949
 2995              	.LBB374:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2996              		.loc 1 85 2 view .LVU950
 2997              	.LBE374:
 2998              	.LBE373:
 2999              	.LBE372:
ARM GAS  /tmp/ccQmaUTi.s 			page 115


 3000              	.LBE371:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3001              		.loc 1 102 31 is_stmt 0 view .LVU951
 3002 0000 08B5     		push	{r3, lr}
 3003              		.cfi_def_cfa_offset 8
 3004              		.cfi_offset 3, -8
 3005              		.cfi_offset 14, -4
 3006              	.LBB378:
 3007              	.LBB377:
 3008              	.LBB376:
 3009              	.LBB375:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3010              		.loc 1 85 18 view .LVU952
 3011 0002 FFF7FEFF 		bl	shift_down
 3012              	.LVL216:
  86:src/keys.c    **** }
 3013              		.loc 1 86 2 is_stmt 1 view .LVU953
  86:src/keys.c    **** }
 3014              		.loc 1 86 52 is_stmt 0 view .LVU954
 3015 0006 034B     		ldr	r3, .L331
 3016 0008 00B9     		cbnz	r0, .L327
 3017 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3018              	.LVL217:
 3019              	.L327:
  86:src/keys.c    **** }
 3020              		.loc 1 86 52 view .LVU955
 3021              	.LBE375:
 3022              	.LBE376:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3023              		.loc 1 94 2 is_stmt 1 view .LVU956
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3024              		.loc 1 94 16 is_stmt 0 view .LVU957
 3025 000c 0022     		movs	r2, #0
 3026 000e 1A74     		strb	r2, [r3, #16]
  95:src/keys.c    **** 	return r;
 3027              		.loc 1 95 2 is_stmt 1 view .LVU958
  95:src/keys.c    **** 	return r;
 3028              		.loc 1 95 19 is_stmt 0 view .LVU959
 3029 0010 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 3030              		.loc 1 96 2 is_stmt 1 view .LVU960
 3031              	.LVL218:
  96:src/keys.c    **** }
 3032              		.loc 1 96 2 is_stmt 0 view .LVU961
 3033              	.LBE377:
 3034              	.LBE378:
 104:src/keys.c    **** 
 3035              		.loc 1 104 1 view .LVU962
 3036 0012 08BD     		pop	{r3, pc}
 3037              	.L332:
 3038              		.align	2
 3039              	.L331:
 3040 0014 00000000 		.word	StateWhileOn
 3041              		.cfi_endproc
 3042              	.LFE2:
 3044              		.section	.text.keycode_to_row_column,"ax",%progbits
 3045              		.align	1
ARM GAS  /tmp/ccQmaUTi.s 			page 116


 3046              		.p2align 2,,3
 3047              		.global	keycode_to_row_column
 3048              		.syntax unified
 3049              		.thumb
 3050              		.thumb_func
 3051              		.fpu fpv4-sp-d16
 3053              	keycode_to_row_column:
 3054              	.LVL219:
 3055              	.LFB6:
 168:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3056              		.loc 1 168 1 is_stmt 1 view -0
 3057              		.cfi_startproc
 3058              		@ args = 0, pretend = 0, frame = 0
 3059              		@ frame_needed = 0, uses_anonymous_args = 0
 3060              		@ link register save eliminated.
 169:src/keys.c    **** }
 3061              		.loc 1 169 2 view .LVU964
 169:src/keys.c    **** }
 3062              		.loc 1 169 18 is_stmt 0 view .LVU965
 3063 0000 074A     		ldr	r2, .L334
 3064 0002 82FB0032 		smull	r3, r2, r2, r0
 3065 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 169:src/keys.c    **** }
 3066              		.loc 1 169 24 view .LVU966
 3067 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3068 000e 5200     		lsls	r2, r2, #1
 169:src/keys.c    **** }
 3069              		.loc 1 169 33 view .LVU967
 3070 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3071 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 169:src/keys.c    **** }
 3072              		.loc 1 169 12 view .LVU968
 3073 0018 02F10B00 		add	r0, r2, #11
 3074              	.LVL220:
 170:src/keys.c    **** 
 3075              		.loc 1 170 1 view .LVU969
 3076 001c 1844     		add	r0, r0, r3
 3077 001e 7047     		bx	lr
 3078              	.L335:
 3079              		.align	2
 3080              	.L334:
 3081 0020 ABAAAA2A 		.word	715827883
 3082              		.cfi_endproc
 3083              	.LFE6:
 3085              		.section	.text.row_column_to_keycode,"ax",%progbits
 3086              		.align	1
 3087              		.p2align 2,,3
 3088              		.global	row_column_to_keycode
 3089              		.syntax unified
 3090              		.thumb
 3091              		.thumb_func
 3092              		.fpu fpv4-sp-d16
 3094              	row_column_to_keycode:
 3095              	.LVL221:
 3096              	.LFB7:
 178:src/keys.c    **** 	int row = c / 10 - 1;
 3097              		.loc 1 178 1 is_stmt 1 view -0
ARM GAS  /tmp/ccQmaUTi.s 			page 117


 3098              		.cfi_startproc
 3099              		@ args = 0, pretend = 0, frame = 0
 3100              		@ frame_needed = 0, uses_anonymous_args = 0
 3101              		@ link register save eliminated.
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3102              		.loc 1 179 2 view .LVU971
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3103              		.loc 1 179 14 is_stmt 0 view .LVU972
 3104 0000 0E4A     		ldr	r2, .L342
 3105 0002 82FB0032 		smull	r3, r2, r2, r0
 3106 0006 C317     		asrs	r3, r0, #31
 3107 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 180:src/keys.c    **** 
 3108              		.loc 1 180 14 view .LVU973
 3109 000c 03EB8302 		add	r2, r3, r3, lsl #2
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3110              		.loc 1 179 6 view .LVU974
 3111 0010 013B     		subs	r3, r3, #1
 3112              	.LVL222:
 180:src/keys.c    **** 
 3113              		.loc 1 180 2 is_stmt 1 view .LVU975
 180:src/keys.c    **** 
 3114              		.loc 1 180 14 is_stmt 0 view .LVU976
 3115 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3116              	.LVL223:
 182:src/keys.c    **** 		return -1;
 3117              		.loc 1 182 5 view .LVU977
 3118 0016 062B     		cmp	r3, #6
 180:src/keys.c    **** 
 3119              		.loc 1 180 6 view .LVU978
 3120 0018 00F1FF30 		add	r0, r0, #-1
 3121              	.LVL224:
 182:src/keys.c    **** 		return -1;
 3122              		.loc 1 182 2 is_stmt 1 view .LVU979
 182:src/keys.c    **** 		return -1;
 3123              		.loc 1 182 5 is_stmt 0 view .LVU980
 3124 001c 0AD8     		bhi	.L341
 182:src/keys.c    **** 		return -1;
 3125              		.loc 1 182 36 discriminator 1 view .LVU981
 3126 001e 012B     		cmp	r3, #1
 3127 0020 CCBF     		ite	gt
 3128 0022 0422     		movgt	r2, #4
 3129 0024 0522     		movle	r2, #5
 182:src/keys.c    **** 		return -1;
 3130              		.loc 1 182 25 discriminator 1 view .LVU982
 3131 0026 8242     		cmp	r2, r0
 3132 0028 04DB     		blt	.L341
 184:src/keys.c    **** }
 3133              		.loc 1 184 2 is_stmt 1 view .LVU983
 184:src/keys.c    **** }
 3134              		.loc 1 184 13 is_stmt 0 view .LVU984
 3135 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3136              	.LVL225:
 184:src/keys.c    **** }
 3137              		.loc 1 184 17 view .LVU985
 3138 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3139              	.LVL226:
ARM GAS  /tmp/ccQmaUTi.s 			page 118


 184:src/keys.c    **** }
 3140              		.loc 1 184 17 view .LVU986
 3141 0032 7047     		bx	lr
 3142              	.LVL227:
 3143              	.L341:
 183:src/keys.c    **** 	return row * 6 + col;
 3144              		.loc 1 183 10 view .LVU987
 3145 0034 4FF0FF30 		mov	r0, #-1
 3146              	.LVL228:
 185:src/keys.c    **** 
 3147              		.loc 1 185 1 view .LVU988
 3148 0038 7047     		bx	lr
 3149              	.L343:
 3150 003a 00BF     		.align	2
 3151              	.L342:
 3152 003c 67666666 		.word	1717986919
 3153              		.cfi_endproc
 3154              	.LFE7:
 3156              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3157              		.align	1
 3158              		.p2align 2,,3
 3159              		.global	keycode_to_digit_or_register
 3160              		.syntax unified
 3161              		.thumb
 3162              		.thumb_func
 3163              		.fpu fpv4-sp-d16
 3165              	keycode_to_digit_or_register:
 3166              	.LVL229:
 3167              	.LFB8:
 199:src/keys.c    ****   static const unsigned char map[] = {
 3168              		.loc 1 199 1 is_stmt 1 view -0
 3169              		.cfi_startproc
 3170              		@ args = 0, pretend = 0, frame = 0
 3171              		@ frame_needed = 0, uses_anonymous_args = 0
 3172              		@ link register save eliminated.
 200:src/keys.c    ****     // K00 - K05
 3173              		.loc 1 200 3 view .LVU990
 221:src/keys.c    **** }
 3174              		.loc 1 221 3 view .LVU991
 3175              	.LBB379:
 3176              	.LBI379:
 119:src/keys.c    **** {
 3177              		.loc 1 119 12 view .LVU992
 3178              	.LBB380:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3179              		.loc 1 121 2 view .LVU993
 131:src/keys.c    **** }
 3180              		.loc 1 131 2 view .LVU994
 131:src/keys.c    **** }
 3181              		.loc 1 131 23 is_stmt 0 view .LVU995
 3182 0000 024B     		ldr	r3, .L345
 3183              	.LBE380:
 3184              	.LBE379:
 221:src/keys.c    **** }
 3185              		.loc 1 221 28 view .LVU996
 3186 0002 034A     		ldr	r2, .L345+4
 3187              	.LBB382:
ARM GAS  /tmp/ccQmaUTi.s 			page 119


 3188              	.LBB381:
 131:src/keys.c    **** }
 3189              		.loc 1 131 23 view .LVU997
 3190 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3191              	.LBE381:
 3192              	.LBE382:
 222:src/keys.c    **** #else
 3193              		.loc 1 222 1 view .LVU998
 3194 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3195              	.LVL230:
 222:src/keys.c    **** #else
 3196              		.loc 1 222 1 view .LVU999
 3197 0008 7047     		bx	lr
 3198              	.L346:
 3199 000a 00BF     		.align	2
 3200              	.L345:
 3201 000c 00000000 		.word	.LANCHOR1
 3202 0010 00000000 		.word	.LANCHOR0
 3203              		.cfi_endproc
 3204              	.LFE8:
 3206              		.section	.text.init_state,"ax",%progbits
 3207              		.align	1
 3208              		.p2align 2,,3
 3209              		.global	init_state
 3210              		.syntax unified
 3211              		.thumb
 3212              		.thumb_func
 3213              		.fpu fpv4-sp-d16
 3215              	init_state:
 3216              	.LFB13:
 564:src/keys.c    **** #ifndef REALBUILD
 3217              		.loc 1 564 23 is_stmt 1 view -0
 3218              		.cfi_startproc
 3219              		@ args = 0, pretend = 0, frame = 0
 3220              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3221              		.loc 1 566 2 view .LVU1001
 564:src/keys.c    **** #ifndef REALBUILD
 3222              		.loc 1 564 23 is_stmt 0 view .LVU1002
 3223 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3224              		.cfi_def_cfa_offset 24
 3225              		.cfi_offset 4, -24
 3226              		.cfi_offset 5, -20
 3227              		.cfi_offset 6, -16
 3228              		.cfi_offset 7, -12
 3229              		.cfi_offset 8, -8
 3230              		.cfi_offset 14, -4
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3231              		.loc 1 566 25 view .LVU1003
 3232 0004 154C     		ldr	r4, .L349
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3233              		.loc 1 574 10 view .LVU1004
 3234 0006 0021     		movs	r1, #0
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3235              		.loc 1 578 2 view .LVU1005
 3236 0008 1422     		movs	r2, #20
 3237 000a 04F10800 		add	r0, r4, #8
ARM GAS  /tmp/ccQmaUTi.s 			page 120


 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3238              		.loc 1 574 10 view .LVU1006
 3239 000e E177     		strb	r1, [r4, #31]
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3240              		.loc 1 566 25 view .LVU1007
 3241 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 567:src/keys.c    **** #else
 3242              		.loc 1 567 25 view .LVU1008
 3243 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 571:src/keys.c    **** 	int k = LastKey;
 3244              		.loc 1 571 10 view .LVU1009
 3245 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 572:src/keys.c    **** 
 3246              		.loc 1 572 10 view .LVU1010
 3247 0016 94F91380 		ldrsb	r8, [r4, #19]
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3248              		.loc 1 578 2 view .LVU1011
 3249 001a FFF7FEFF 		bl	xset
 3250              	.LVL231:
 580:src/keys.c    **** 	update_program_bounds(1);
 3251              		.loc 1 580 17 view .LVU1012
 3252 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 579:src/keys.c    **** 	State2.runmode = 1;
 3253              		.loc 1 579 14 view .LVU1013
 3254 0020 0722     		movs	r2, #7
 580:src/keys.c    **** 	update_program_bounds(1);
 3255              		.loc 1 580 17 view .LVU1014
 3256 0022 43F04003 		orr	r3, r3, #64
 581:src/keys.c    **** 	set_lift();
 3257              		.loc 1 581 2 view .LVU1015
 3258 0026 0120     		movs	r0, #1
 579:src/keys.c    **** 	State2.runmode = 1;
 3259              		.loc 1 579 14 view .LVU1016
 3260 0028 E273     		strb	r2, [r4, #15]
 580:src/keys.c    **** 	update_program_bounds(1);
 3261              		.loc 1 580 17 view .LVU1017
 3262 002a A375     		strb	r3, [r4, #22]
 581:src/keys.c    **** 	set_lift();
 3263              		.loc 1 581 2 view .LVU1018
 3264 002c FFF7FEFF 		bl	update_program_bounds
 3265              	.LVL232:
 582:src/keys.c    **** 
 3266              		.loc 1 582 2 view .LVU1019
 3267 0030 FFF7FEFF 		bl	set_lift
 3268              	.LVL233:
 589:src/keys.c    **** 	State2.flags = a;
 3269              		.loc 1 589 15 view .LVU1020
 3270 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 590:src/keys.c    **** #else
 3271              		.loc 1 590 15 view .LVU1021
 3272 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 594:src/keys.c    **** }
 3273              		.loc 1 594 15 view .LVU1022
 3274 0038 0949     		ldr	r1, .L349+4
 587:src/keys.c    **** #ifndef REALBUILD
 3275              		.loc 1 587 10 view .LVU1023
 3276 003a 84F81380 		strb	r8, [r4, #19]
ARM GAS  /tmp/ccQmaUTi.s 			page 121


 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3277              		.loc 1 566 25 view .LVU1024
 3278 003e 05F00105 		and	r5, r5, #1
 3279              	.LVL234:
 567:src/keys.c    **** #else
 3280              		.loc 1 567 2 is_stmt 1 view .LVU1025
 567:src/keys.c    **** #else
 3281              		.loc 1 567 25 is_stmt 0 view .LVU1026
 3282 0042 F609     		lsrs	r6, r6, #7
 3283              	.LVL235:
 571:src/keys.c    **** 	int k = LastKey;
 3284              		.loc 1 571 2 is_stmt 1 view .LVU1027
 571:src/keys.c    **** 	int k = LastKey;
 3285              		.loc 1 571 10 is_stmt 0 view .LVU1028
 3286 0044 FFB2     		uxtb	r7, r7
 3287              	.LVL236:
 572:src/keys.c    **** 
 3288              		.loc 1 572 2 is_stmt 1 view .LVU1029
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3289              		.loc 1 574 2 view .LVU1030
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3290              		.loc 1 578 2 view .LVU1031
 579:src/keys.c    **** 	State2.runmode = 1;
 3291              		.loc 1 579 2 view .LVU1032
 580:src/keys.c    **** 	update_program_bounds(1);
 3292              		.loc 1 580 2 view .LVU1033
 581:src/keys.c    **** 	set_lift();
 3293              		.loc 1 581 2 view .LVU1034
 582:src/keys.c    **** 
 3294              		.loc 1 582 2 view .LVU1035
 586:src/keys.c    **** 	LastKey = k;
 3295              		.loc 1 586 2 view .LVU1036
 589:src/keys.c    **** 	State2.flags = a;
 3296              		.loc 1 589 15 is_stmt 0 view .LVU1037
 3297 0046 66F3C712 		bfi	r2, r6, #7, #1
 590:src/keys.c    **** #else
 3298              		.loc 1 590 15 view .LVU1038
 3299 004a 65F30003 		bfi	r3, r5, #0, #1
 594:src/keys.c    **** }
 3300              		.loc 1 594 15 view .LVU1039
 3301 004e 6420     		movs	r0, #100
 589:src/keys.c    **** 	State2.flags = a;
 3302              		.loc 1 589 15 view .LVU1040
 3303 0050 E275     		strb	r2, [r4, #23]
 590:src/keys.c    **** #else
 3304              		.loc 1 590 15 view .LVU1041
 3305 0052 2376     		strb	r3, [r4, #24]
 586:src/keys.c    **** 	LastKey = k;
 3306              		.loc 1 586 10 view .LVU1042
 3307 0054 A774     		strb	r7, [r4, #18]
 587:src/keys.c    **** #ifndef REALBUILD
 3308              		.loc 1 587 2 is_stmt 1 view .LVU1043
 589:src/keys.c    **** 	State2.flags = a;
 3309              		.loc 1 589 2 view .LVU1044
 590:src/keys.c    **** #else
 3310              		.loc 1 590 2 view .LVU1045
 594:src/keys.c    **** }
ARM GAS  /tmp/ccQmaUTi.s 			page 122


 3311              		.loc 1 594 2 view .LVU1046
 594:src/keys.c    **** }
 3312              		.loc 1 594 15 is_stmt 0 view .LVU1047
 3313 0056 0860     		str	r0, [r1]
 595:src/keys.c    **** 
 3314              		.loc 1 595 1 view .LVU1048
 3315 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3316              	.LVL237:
 3317              	.L350:
 595:src/keys.c    **** 
 3318              		.loc 1 595 1 view .LVU1049
 3319              		.align	2
 3320              	.L349:
 3321 005c 00000000 		.word	StateWhileOn
 3322 0060 00000000 		.word	ShowRegister
 3323              		.cfi_endproc
 3324              	.LFE13:
 3326              		.section	.text.soft_init_state,"ax",%progbits
 3327              		.align	1
 3328              		.p2align 2,,3
 3329              		.global	soft_init_state
 3330              		.syntax unified
 3331              		.thumb
 3332              		.thumb_func
 3333              		.fpu fpv4-sp-d16
 3335              	soft_init_state:
 3336              	.LFB14:
 597:src/keys.c    **** 	int soft;
 3337              		.loc 1 597 28 is_stmt 1 view -0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 598:src/keys.c    **** 	unsigned int runmode;
 3341              		.loc 1 598 2 view .LVU1051
 599:src/keys.c    **** 	unsigned int alphas;
 3342              		.loc 1 599 2 view .LVU1052
 600:src/keys.c    **** 
 3343              		.loc 1 600 2 view .LVU1053
 602:src/keys.c    **** 		CmdLineLength = 0;
 3344              		.loc 1 602 2 view .LVU1054
 597:src/keys.c    **** 	int soft;
 3345              		.loc 1 597 28 is_stmt 0 view .LVU1055
 3346 0000 38B5     		push	{r3, r4, r5, lr}
 3347              		.cfi_def_cfa_offset 16
 3348              		.cfi_offset 3, -16
 3349              		.cfi_offset 4, -12
 3350              		.cfi_offset 5, -8
 3351              		.cfi_offset 14, -4
 602:src/keys.c    **** 		CmdLineLength = 0;
 3352              		.loc 1 602 6 view .LVU1056
 3353 0002 114C     		ldr	r4, .L358
 602:src/keys.c    **** 		CmdLineLength = 0;
 3354              		.loc 1 602 5 view .LVU1057
 3355 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3356 0006 D3B9     		cbnz	r3, .L357
 608:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3357              		.loc 1 608 2 is_stmt 1 view .LVU1058
ARM GAS  /tmp/ccQmaUTi.s 			page 123


 609:src/keys.c    **** 	runmode = State2.runmode;
 3358              		.loc 1 609 17 is_stmt 0 view .LVU1059
 3359 0008 104A     		ldr	r2, .L358+4
 3360 000a 6369     		ldr	r3, [r4, #20]
 609:src/keys.c    **** 	runmode = State2.runmode;
 3361              		.loc 1 609 60 view .LVU1060
 3362 000c 1A42     		tst	r2, r3
 3363 000e 0AD0     		beq	.L354
 3364              	.L355:
 3365              	.LVL238:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3366              		.loc 1 610 2 is_stmt 1 view .LVU1061
 611:src/keys.c    **** 	init_state();
 3367              		.loc 1 611 17 is_stmt 0 view .LVU1062
 3368 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3369              	.LVL239:
 611:src/keys.c    **** 	init_state();
 3370              		.loc 1 611 2 is_stmt 1 view .LVU1063
 612:src/keys.c    **** 	if (soft) {
 3371              		.loc 1 612 2 view .LVU1064
 3372 0012 FFF7FEFF 		bl	init_state
 3373              	.LVL240:
 613:src/keys.c    **** 		State2.runmode = runmode;
 3374              		.loc 1 613 2 view .LVU1065
 614:src/keys.c    **** 		State2.alphas = alphas;
 3375              		.loc 1 614 3 view .LVU1066
 615:src/keys.c    **** 	}
 3376              		.loc 1 615 3 view .LVU1067
 615:src/keys.c    **** 	}
 3377              		.loc 1 615 17 is_stmt 0 view .LVU1068
 3378 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3379 0018 05F04805 		and	r5, r5, #72
 3380 001c 23F04803 		bic	r3, r3, #72
 3381 0020 2B43     		orrs	r3, r3, r5
 3382 0022 A375     		strb	r3, [r4, #22]
 617:src/keys.c    **** 
 3383              		.loc 1 617 1 view .LVU1069
 3384 0024 38BD     		pop	{r3, r4, r5, pc}
 3385              	.LVL241:
 3386              	.L354:
 609:src/keys.c    **** 	runmode = State2.runmode;
 3387              		.loc 1 609 60 discriminator 2 view .LVU1070
 3388 0026 E368     		ldr	r3, [r4, #12]
 3389 0028 23F47F03 		bic	r3, r3, #16711680
 3390 002c 23F47F43 		bic	r3, r3, #65280
 3391 0030 B3F1E06F 		cmp	r3, #117440512
 3392 0034 ECD1     		bne	.L355
 3393              	.LVL242:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3394              		.loc 1 610 2 is_stmt 1 view .LVU1071
 611:src/keys.c    **** 	init_state();
 3395              		.loc 1 611 2 view .LVU1072
 612:src/keys.c    **** 	if (soft) {
 3396              		.loc 1 612 2 view .LVU1073
 617:src/keys.c    **** 
 3397              		.loc 1 617 1 is_stmt 0 view .LVU1074
 3398 0036 BDE83840 		pop	{r3, r4, r5, lr}
ARM GAS  /tmp/ccQmaUTi.s 			page 124


 3399              		.cfi_remember_state
 3400              		.cfi_restore 14
 3401              		.cfi_restore 5
 3402              		.cfi_restore 4
 3403              		.cfi_restore 3
 3404              		.cfi_def_cfa_offset 0
 612:src/keys.c    **** 	if (soft) {
 3405              		.loc 1 612 2 view .LVU1075
 3406 003a FFF7FEBF 		b	init_state
 3407              	.LVL243:
 3408              	.L357:
 3409              		.cfi_restore_state
 3410              	.LBB385:
 3411              	.LBI385:
 597:src/keys.c    **** 	int soft;
 3412              		.loc 1 597 6 is_stmt 1 view .LVU1076
 3413              	.LBB386:
 603:src/keys.c    **** 		CmdLineEex = 0;
 3414              		.loc 1 603 3 view .LVU1077
 604:src/keys.c    **** 		CmdLineDot = 0;
 3415              		.loc 1 604 3 view .LVU1078
 605:src/keys.c    **** 		return;
 3416              		.loc 1 605 3 view .LVU1079
 603:src/keys.c    **** 		CmdLineEex = 0;
 3417              		.loc 1 603 17 is_stmt 0 view .LVU1080
 3418 003e 0023     		movs	r3, #0
 3419 0040 A383     		strh	r3, [r4, #28]	@ movhi
 605:src/keys.c    **** 		return;
 3420              		.loc 1 605 14 view .LVU1081
 3421 0042 A377     		strb	r3, [r4, #30]
 606:src/keys.c    **** 	}
 3422              		.loc 1 606 3 is_stmt 1 view .LVU1082
 3423              	.LBE386:
 3424              	.LBE385:
 617:src/keys.c    **** 
 3425              		.loc 1 617 1 is_stmt 0 view .LVU1083
 3426 0044 38BD     		pop	{r3, r4, r5, pc}
 3427              	.L359:
 3428 0046 00BF     		.align	2
 3429              	.L358:
 3430 0048 00000000 		.word	StateWhileOn
 3431 004c 002F2004 		.word	69218048
 3432              		.cfi_endproc
 3433              	.LFE14:
 3435              		.section	.text.current_catalogue_max,"ax",%progbits
 3436              		.align	1
 3437              		.p2align 2,,3
 3438              		.global	current_catalogue_max
 3439              		.syntax unified
 3440              		.thumb
 3441              		.thumb_func
 3442              		.fpu fpv4-sp-d16
 3444              	current_catalogue_max:
 3445              	.LFB39:
2017:src/keys.c    **** 	// A quick table of catalogue sizes
 3446              		.loc 1 2017 33 is_stmt 1 view -0
 3447              		.cfi_startproc
ARM GAS  /tmp/ccQmaUTi.s 			page 125


 3448              		@ args = 0, pretend = 0, frame = 0
 3449              		@ frame_needed = 0, uses_anonymous_args = 0
 3450              		@ link register save eliminated.
2020:src/keys.c    **** 	{
 3451              		.loc 1 2020 2 view .LVU1085
2051:src/keys.c    **** #endif
 3452              		.loc 1 2051 2 view .LVU1086
2051:src/keys.c    **** #endif
 3453              		.loc 1 2051 31 is_stmt 0 view .LVU1087
 3454 0000 024B     		ldr	r3, .L361
2051:src/keys.c    **** #endif
 3455              		.loc 1 2051 24 view .LVU1088
 3456 0002 034A     		ldr	r2, .L361+4
2051:src/keys.c    **** #endif
 3457              		.loc 1 2051 31 view .LVU1089
 3458 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2053:src/keys.c    **** 
 3459              		.loc 1 2053 1 view .LVU1090
 3460 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3461 0008 7047     		bx	lr
 3462              	.L362:
 3463 000a 00BF     		.align	2
 3464              	.L361:
 3465 000c 00000000 		.word	StateWhileOn
 3466 0010 00000000 		.word	.LANCHOR2
 3467              		.cfi_endproc
 3468              	.LFE39:
 3470              		.section	.text.current_catalogue,"ax",%progbits
 3471              		.align	1
 3472              		.p2align 2,,3
 3473              		.global	current_catalogue
 3474              		.syntax unified
 3475              		.thumb
 3476              		.thumb_func
 3477              		.fpu fpv4-sp-d16
 3479              	current_catalogue:
 3480              	.LVL244:
 3481              	.LFB41:
2066:src/keys.c    **** 	// A quick table of catalogue tables
 3482              		.loc 1 2066 33 is_stmt 1 view -0
 3483              		.cfi_startproc
 3484              		@ args = 0, pretend = 0, frame = 0
 3485              		@ frame_needed = 0, uses_anonymous_args = 0
 3486              		@ link register save eliminated.
2069:src/keys.c    **** 	{
 3487              		.loc 1 2069 2 view .LVU1092
2096:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3488              		.loc 1 2096 2 view .LVU1093
2097:src/keys.c    **** 	int m, i;
 3489              		.loc 1 2097 2 view .LVU1094
2097:src/keys.c    **** 	int m, i;
 3490              		.loc 1 2097 25 is_stmt 0 view .LVU1095
 3491 0000 314A     		ldr	r2, .L390
2097:src/keys.c    **** 	int m, i;
 3492              		.loc 1 2097 15 view .LVU1096
 3493 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3494              	.LVL245:
ARM GAS  /tmp/ccQmaUTi.s 			page 126


2098:src/keys.c    **** 	unsigned p, q;
 3495              		.loc 1 2098 2 is_stmt 1 view .LVU1097
2099:src/keys.c    **** 
 3496              		.loc 1 2099 2 view .LVU1098
2101:src/keys.c    **** 		if (n == OP_ZERO)
 3497              		.loc 1 2101 2 view .LVU1099
2101:src/keys.c    **** 		if (n == OP_ZERO)
 3498              		.loc 1 2101 5 is_stmt 0 view .LVU1100
 3499 0004 102B     		cmp	r3, #16
 3500 0006 39D0     		beq	.L384
2106:src/keys.c    **** 		if (n == OP_ZERO)
 3501              		.loc 1 2106 2 is_stmt 1 view .LVU1101
2106:src/keys.c    **** 		if (n == OP_ZERO)
 3502              		.loc 1 2106 5 is_stmt 0 view .LVU1102
 3503 0008 112B     		cmp	r3, #17
 3504 000a 32D0     		beq	.L385
2111:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3505              		.loc 1 2111 2 is_stmt 1 view .LVU1103
2111:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3506              		.loc 1 2111 5 is_stmt 0 view .LVU1104
 3507 000c 122B     		cmp	r3, #18
 3508 000e 45D0     		beq	.L386
2124:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3509              		.loc 1 2124 2 is_stmt 1 view .LVU1105
2124:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3510              		.loc 1 2124 5 is_stmt 0 view .LVU1106
 3511 0010 0E2B     		cmp	r3, #14
 3512 0012 38D0     		beq	.L387
2127:src/keys.c    **** 
 3513              		.loc 1 2127 3 is_stmt 1 view .LVU1107
2127:src/keys.c    **** 
 3514              		.loc 1 2127 7 is_stmt 0 view .LVU1108
 3515 0014 2D4A     		ldr	r2, .L390+4
2129:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3516              		.loc 1 2129 35 view .LVU1109
 3517 0016 A3F10B01 		sub	r1, r3, #11
2129:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3518              		.loc 1 2129 5 view .LVU1110
 3519 001a 0429     		cmp	r1, #4
2127:src/keys.c    **** 
 3520              		.loc 1 2127 7 view .LVU1111
 3521 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3522              	.LVL246:
2129:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3523              		.loc 1 2129 2 is_stmt 1 view .LVU1112
2129:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3524              		.loc 1 2129 5 is_stmt 0 view .LVU1113
 3525 0020 38D9     		bls	.L370
2132:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3526              		.loc 1 2132 2 is_stmt 1 view .LVU1114
2132:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3527              		.loc 1 2132 5 is_stmt 0 view .LVU1115
 3528 0022 142B     		cmp	r3, #20
 3529 0024 4DD8     		bhi	.L378
2136:src/keys.c    **** 	p = cat[0];
 3530              		.loc 1 2136 2 is_stmt 1 view .LVU1116
2066:src/keys.c    **** 	// A quick table of catalogue tables
ARM GAS  /tmp/ccQmaUTi.s 			page 127


 3531              		.loc 1 2066 33 is_stmt 0 view .LVU1117
 3532 0026 10B4     		push	{r4}
 3533              		.cfi_def_cfa_offset 4
 3534              		.cfi_offset 4, -4
2136:src/keys.c    **** 	p = cat[0];
 3535              		.loc 1 2136 11 view .LVU1118
 3536 0028 00EBA001 		add	r1, r0, r0, asr #2
2136:src/keys.c    **** 	p = cat[0];
 3537              		.loc 1 2136 6 view .LVU1119
 3538 002c 5318     		adds	r3, r2, r1
 3539              	.LVL247:
2137:src/keys.c    **** 	q = cat[1];
 3540              		.loc 1 2137 2 is_stmt 1 view .LVU1120
2138:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3541              		.loc 1 2138 2 view .LVU1121
2139:src/keys.c    **** 
 3542              		.loc 1 2139 2 view .LVU1122
2139:src/keys.c    **** 
 3543              		.loc 1 2139 35 is_stmt 0 view .LVU1123
 3544 002e 4000     		lsls	r0, r0, #1
 3545              	.LVL248:
2137:src/keys.c    **** 	q = cat[1];
 3546              		.loc 1 2137 4 view .LVU1124
 3547 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3548              	.LVL249:
2138:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3549              		.loc 1 2138 4 view .LVU1125
 3550 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3551              	.LVL250:
2138:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3552              		.loc 1 2138 4 view .LVU1126
 3553 0034 2649     		ldr	r1, .L390+8
 3554              	.LVL251:
2139:src/keys.c    **** 
 3555              		.loc 1 2139 54 view .LVU1127
 3556 0036 C443     		mvns	r4, r0
2139:src/keys.c    **** 
 3557              		.loc 1 2139 35 view .LVU1128
 3558 0038 00F00600 		and	r0, r0, #6
2139:src/keys.c    **** 
 3559              		.loc 1 2139 54 view .LVU1129
 3560 003c 04F00604 		and	r4, r4, #6
2139:src/keys.c    **** 
 3561              		.loc 1 2139 24 view .LVU1130
 3562 0040 0230     		adds	r0, r0, #2
2139:src/keys.c    **** 
 3563              		.loc 1 2139 48 view .LVU1131
 3564 0042 E340     		lsrs	r3, r3, r4
 3565              	.LVL252:
2139:src/keys.c    **** 
 3566              		.loc 1 2139 18 view .LVU1132
 3567 0044 02FA00F0 		lsl	r0, r2, r0
2139:src/keys.c    **** 
 3568              		.loc 1 2139 43 view .LVU1133
 3569 0048 1843     		orrs	r0, r0, r3
2139:src/keys.c    **** 
 3570              		.loc 1 2139 4 view .LVU1134
ARM GAS  /tmp/ccQmaUTi.s 			page 128


 3571 004a C0F30903 		ubfx	r3, r0, #0, #10
 3572              	.LVL253:
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
 3573              		.loc 1 2142 2 is_stmt 1 view .LVU1135
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
 3574              		.loc 1 2142 12 view .LVU1136
2139:src/keys.c    **** 
 3575              		.loc 1 2139 4 is_stmt 0 view .LVU1137
 3576 004e 3422     		movs	r2, #52
 3577              	.LVL254:
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
 3578              		.loc 1 2142 8 view .LVU1138
 3579 0050 0020     		movs	r0, #0
 3580 0052 01E0     		b	.L374
 3581              	.LVL255:
 3582              	.L389:
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
 3583              		.loc 1 2142 8 view .LVU1139
 3584 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3585              	.LVL256:
 3586              	.L374:
2143:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3587              		.loc 1 2143 3 is_stmt 1 view .LVU1140
2145:src/keys.c    **** 	}
 3588              		.loc 1 2145 3 view .LVU1141
2143:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3589              		.loc 1 2143 6 is_stmt 0 view .LVU1142
 3590 0058 9A42     		cmp	r2, r3
 3591 005a 2FDC     		bgt	.L388
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
 3592              		.loc 1 2142 25 discriminator 2 view .LVU1143
 3593 005c 0130     		adds	r0, r0, #1
 3594              	.LVL257:
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
 3595              		.loc 1 2142 2 discriminator 2 view .LVU1144
 3596 005e 0728     		cmp	r0, #7
2145:src/keys.c    **** 	}
 3597              		.loc 1 2145 5 discriminator 2 view .LVU1145
 3598 0060 A3EB0203 		sub	r3, r3, r2
 3599              	.LVL258:
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
 3600              		.loc 1 2142 24 is_stmt 1 discriminator 2 view .LVU1146
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
 3601              		.loc 1 2142 12 discriminator 2 view .LVU1147
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
 3602              		.loc 1 2142 2 is_stmt 0 discriminator 2 view .LVU1148
 3603 0064 F6D1     		bne	.L389
2147:src/keys.c    **** }
 3604              		.loc 1 2147 2 is_stmt 1 view .LVU1149
2147:src/keys.c    **** }
 3605              		.loc 1 2147 9 is_stmt 0 view .LVU1150
 3606 0066 03F12000 		add	r0, r3, #32
 3607              	.LVL259:
2147:src/keys.c    **** }
 3608              		.loc 1 2147 9 view .LVU1151
 3609 006a 0002     		lsls	r0, r0, #8
 3610              	.L363:
ARM GAS  /tmp/ccQmaUTi.s 			page 129


2148:src/keys.c    **** 
 3611              		.loc 1 2148 1 view .LVU1152
 3612 006c 5DF8044B 		ldr	r4, [sp], #4
 3613              		.cfi_restore 4
 3614              		.cfi_def_cfa_offset 0
 3615 0070 7047     		bx	lr
 3616              	.LVL260:
 3617              	.L385:
2107:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3618              		.loc 1 2107 3 is_stmt 1 view .LVU1153
2107:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3619              		.loc 1 2107 6 is_stmt 0 view .LVU1154
 3620 0072 4B28     		cmp	r0, #75
 3621 0074 1FD0     		beq	.L376
2109:src/keys.c    **** 	}
 3622              		.loc 1 2109 3 is_stmt 1 view .LVU1155
2109:src/keys.c    **** 	}
 3623              		.loc 1 2109 10 is_stmt 0 view .LVU1156
 3624 0076 40F40450 		orr	r0, r0, #8448
 3625              	.LVL261:
2109:src/keys.c    **** 	}
 3626              		.loc 1 2109 10 view .LVU1157
 3627 007a 7047     		bx	lr
 3628              	.LVL262:
 3629              	.L384:
2102:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3630              		.loc 1 2102 3 is_stmt 1 view .LVU1158
2102:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3631              		.loc 1 2102 6 is_stmt 0 view .LVU1159
 3632 007c 4B28     		cmp	r0, #75
 3633 007e 17D0     		beq	.L375
2104:src/keys.c    **** 	}
 3634              		.loc 1 2104 3 is_stmt 1 view .LVU1160
2104:src/keys.c    **** 	}
 3635              		.loc 1 2104 10 is_stmt 0 view .LVU1161
 3636 0080 40F40050 		orr	r0, r0, #8192
 3637              	.LVL263:
2104:src/keys.c    **** 	}
 3638              		.loc 1 2104 10 view .LVU1162
 3639 0084 7047     		bx	lr
 3640              	.LVL264:
 3641              	.L387:
2124:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3642              		.loc 1 2124 35 discriminator 1 view .LVU1163
 3643 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2125:src/keys.c    **** 	else
 3644              		.loc 1 2125 7 discriminator 1 view .LVU1164
 3645 0088 124B     		ldr	r3, .L390+12
 3646              	.LVL265:
2125:src/keys.c    **** 	else
 3647              		.loc 1 2125 7 discriminator 1 view .LVU1165
 3648 008a 134A     		ldr	r2, .L390+16
 3649              	.LVL266:
2125:src/keys.c    **** 	else
 3650              		.loc 1 2125 7 discriminator 1 view .LVU1166
 3651 008c 11F0100F 		tst	r1, #16
 3652 0090 18BF     		it	ne
ARM GAS  /tmp/ccQmaUTi.s 			page 130


 3653 0092 1A46     		movne	r2, r3
 3654              	.L370:
 3655              	.LVL267:
2130:src/keys.c    **** 	}
 3656              		.loc 1 2130 3 is_stmt 1 view .LVU1167
 3657              	.LBB387:
 3658              	.LBI387:
2059:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3659              		.loc 1 2059 15 view .LVU1168
 3660              	.LBB388:
2060:src/keys.c    **** }
 3661              		.loc 1 2060 2 view .LVU1169
2060:src/keys.c    **** }
 3662              		.loc 1 2060 9 is_stmt 0 view .LVU1170
 3663 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3664              	.LVL268:
2060:src/keys.c    **** }
 3665              		.loc 1 2060 9 view .LVU1171
 3666 0096 40F48840 		orr	r0, r0, #17408
 3667              	.LVL269:
2060:src/keys.c    **** }
 3668              		.loc 1 2060 9 view .LVU1172
 3669              	.LBE388:
 3670              	.LBE387:
2130:src/keys.c    **** 	}
 3671              		.loc 1 2130 10 view .LVU1173
 3672 009a 7047     		bx	lr
 3673              	.LVL270:
 3674              	.L386:
 3675              	.LBB389:
2112:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3676              		.loc 1 2112 3 is_stmt 1 view .LVU1174
2112:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3677              		.loc 1 2112 33 is_stmt 0 view .LVU1175
 3678 009c 0F4B     		ldr	r3, .L390+20
 3679              	.LVL271:
2112:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3680              		.loc 1 2112 13 view .LVU1176
 3681 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3682              	.LVL272:
2113:src/keys.c    **** 			// Monadic conversion routine
 3683              		.loc 1 2113 3 is_stmt 1 view .LVU1177
2113:src/keys.c    **** 			// Monadic conversion routine
 3684              		.loc 1 2113 6 is_stmt 0 view .LVU1178
 3685 00a0 5728     		cmp	r0, #87
2115:src/keys.c    **** 		else
 3686              		.loc 1 2115 4 is_stmt 1 view .LVU1179
2115:src/keys.c    **** 		else
 3687              		.loc 1 2115 25 is_stmt 0 view .LVU1180
 3688 00a2 C6BF     		itte	gt
 3689 00a4 5838     		subgt	r0, r0, #88
 3690              	.LVL273:
2115:src/keys.c    **** 		else
 3691              		.loc 1 2115 18 view .LVU1181
 3692 00a6 40F40070 		orrgt	r0, r0, #512
2117:src/keys.c    **** 	}
 3693              		.loc 1 2117 4 is_stmt 1 view .LVU1182
ARM GAS  /tmp/ccQmaUTi.s 			page 131


2117:src/keys.c    **** 	}
 3694              		.loc 1 2117 11 is_stmt 0 view .LVU1183
 3695 00aa 40F40C40 		orrle	r0, r0, #35840
 3696 00ae 7047     		bx	lr
 3697              	.LVL274:
 3698              	.L375:
2117:src/keys.c    **** 	}
 3699              		.loc 1 2117 11 view .LVU1184
 3700              	.LBE389:
2103:src/keys.c    **** 		return CONST(n);
 3701              		.loc 1 2103 11 view .LVU1185
 3702 00b0 4FF42740 		mov	r0, #42752
 3703              	.LVL275:
2103:src/keys.c    **** 		return CONST(n);
 3704              		.loc 1 2103 11 view .LVU1186
 3705 00b4 7047     		bx	lr
 3706              	.LVL276:
 3707              	.L376:
2108:src/keys.c    **** 		return CONST_CMPLX(n);
 3708              		.loc 1 2108 11 view .LVU1187
 3709 00b6 4FF42840 		mov	r0, #43008
 3710              	.LVL277:
2108:src/keys.c    **** 		return CONST_CMPLX(n);
 3711              		.loc 1 2108 11 view .LVU1188
 3712 00ba 7047     		bx	lr
 3713              	.LVL278:
 3714              	.L388:
 3715              		.cfi_def_cfa_offset 4
 3716              		.cfi_offset 4, -4
2144:src/keys.c    **** 		m -= opcode_breaks[i];
 3717              		.loc 1 2144 4 is_stmt 1 view .LVU1189
2144:src/keys.c    **** 		m -= opcode_breaks[i];
 3718              		.loc 1 2144 29 is_stmt 0 view .LVU1190
 3719 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3720              	.LVL279:
2144:src/keys.c    **** 		m -= opcode_breaks[i];
 3721              		.loc 1 2144 29 view .LVU1191
 3722 00c0 D4E7     		b	.L363
 3723              	.LVL280:
 3724              	.L378:
 3725              		.cfi_def_cfa_offset 0
 3726              		.cfi_restore 4
2133:src/keys.c    **** 
 3727              		.loc 1 2133 10 view .LVU1192
 3728 00c2 4FF48070 		mov	r0, #256
 3729              	.LVL281:
2148:src/keys.c    **** 
 3730              		.loc 1 2148 1 view .LVU1193
 3731 00c6 7047     		bx	lr
 3732              	.L391:
 3733              		.align	2
 3734              	.L390:
 3735 00c8 00000000 		.word	StateWhileOn
 3736 00cc 00000000 		.word	.LANCHOR6
 3737 00d0 01000000 		.word	.LANCHOR7+1
 3738 00d4 00000000 		.word	.LANCHOR4
 3739 00d8 00000000 		.word	.LANCHOR3
ARM GAS  /tmp/ccQmaUTi.s 			page 132


 3740 00dc 00000000 		.word	.LANCHOR5
 3741              		.cfi_endproc
 3742              	.LFE41:
 3744              		.section	.text.process_catalogue,"ax",%progbits
 3745              		.align	1
 3746              		.p2align 2,,3
 3747              		.syntax unified
 3748              		.thumb
 3749              		.thumb_func
 3750              		.fpu fpv4-sp-d16
 3752              	process_catalogue:
 3753              	.LVL282:
 3754              	.LFB43:
2162:src/keys.c    **** 	int pos = State.catpos;
 3755              		.loc 1 2162 92 is_stmt 1 view -0
 3756              		.cfi_startproc
 3757              		@ args = 0, pretend = 0, frame = 16
 3758              		@ frame_needed = 0, uses_anonymous_args = 0
2162:src/keys.c    **** 	int pos = State.catpos;
 3759              		.loc 1 2162 92 is_stmt 0 view .LVU1195
 3760 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3761              		.cfi_def_cfa_offset 36
 3762              		.cfi_offset 4, -36
 3763              		.cfi_offset 5, -32
 3764              		.cfi_offset 6, -28
 3765              		.cfi_offset 7, -24
 3766              		.cfi_offset 8, -20
 3767              		.cfi_offset 9, -16
 3768              		.cfi_offset 10, -12
 3769              		.cfi_offset 11, -8
 3770              		.cfi_offset 14, -4
2163:src/keys.c    **** 	int ch;
 3771              		.loc 1 2163 12 view .LVU1196
 3772 0004 DFF8EC92 		ldr	r9, .L506+24
 3773              	.LBB390:
 3774              	.LBB391:
2051:src/keys.c    **** #endif
 3775              		.loc 1 2051 31 view .LVU1197
 3776 0008 B44E     		ldr	r6, .L506
 3777              	.LBE391:
 3778              	.LBE390:
2163:src/keys.c    **** 	int ch;
 3779              		.loc 1 2163 12 view .LVU1198
 3780 000a D9F80040 		ldr	r4, [r9]
 3781              	.LBB396:
 3782              	.LBB392:
2051:src/keys.c    **** #endif
 3783              		.loc 1 2051 31 view .LVU1199
 3784 000e 96F80EA0 		ldrb	r10, [r6, #14]	@ zero_extendqisi2
 3785              	.LBE392:
 3786              	.LBE396:
2163:src/keys.c    **** 	int ch;
 3787              		.loc 1 2163 17 view .LVU1200
 3788 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3789              	.LBB397:
 3790              	.LBB393:
2051:src/keys.c    **** #endif
ARM GAS  /tmp/ccQmaUTi.s 			page 133


 3791              		.loc 1 2051 24 view .LVU1201
 3792 0016 B24B     		ldr	r3, .L506+4
 3793              	.LBE393:
 3794              	.LBE397:
2163:src/keys.c    **** 	int ch;
 3795              		.loc 1 2163 2 is_stmt 1 view .LVU1202
2162:src/keys.c    **** 	int pos = State.catpos;
 3796              		.loc 1 2162 92 is_stmt 0 view .LVU1203
 3797 0018 85B0     		sub	sp, sp, #20
 3798              		.cfi_def_cfa_offset 56
 3799              	.LBB398:
 3800              	.LBB394:
2051:src/keys.c    **** #endif
 3801              		.loc 1 2051 24 view .LVU1204
 3802 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3803              	.LBE394:
 3804              	.LBE398:
2162:src/keys.c    **** 	int pos = State.catpos;
 3805              		.loc 1 2162 92 view .LVU1205
 3806 001e 1746     		mov	r7, r2
2163:src/keys.c    **** 	int ch;
 3807              		.loc 1 2163 6 view .LVU1206
 3808 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3809              	.LVL283:
2164:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 3810              		.loc 1 2164 2 is_stmt 1 view .LVU1207
2165:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
 3811              		.loc 1 2165 2 view .LVU1208
 3812              	.LBB399:
 3813              	.LBI390:
2017:src/keys.c    **** 	// A quick table of catalogue sizes
 3814              		.loc 1 2017 5 view .LVU1209
 3815              	.LBB395:
2020:src/keys.c    **** 	{
 3816              		.loc 1 2020 2 view .LVU1210
2051:src/keys.c    **** #endif
 3817              		.loc 1 2051 2 view .LVU1211
2051:src/keys.c    **** #endif
 3818              		.loc 1 2051 2 is_stmt 0 view .LVU1212
 3819              	.LBE395:
 3820              	.LBE399:
2166:src/keys.c    **** 
 3821              		.loc 1 2166 2 is_stmt 1 view .LVU1213
2168:src/keys.c    **** 		switch (c) {
 3822              		.loc 1 2168 2 view .LVU1214
2168:src/keys.c    **** 		switch (c) {
 3823              		.loc 1 2168 5 is_stmt 0 view .LVU1215
 3824 0024 0029     		cmp	r1, #0
 3825 0026 66D0     		beq	.L491
2229:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3826              		.loc 1 2229 9 is_stmt 1 view .LVU1216
2229:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3827              		.loc 1 2229 12 is_stmt 0 view .LVU1217
 3828 0028 0129     		cmp	r1, #1
 3829 002a 00F0EE80 		beq	.L492
2263:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3830              		.loc 1 2263 9 is_stmt 1 view .LVU1218
ARM GAS  /tmp/ccQmaUTi.s 			page 134


2263:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3831              		.loc 1 2263 12 is_stmt 0 view .LVU1219
 3832 002e 0229     		cmp	r1, #2
 3833 0030 00F00C81 		beq	.L493
 3834              	.LVL284:
 3835              	.L428:
 3836              	.LBB400:
 3837              	.LBB401:
 440:src/keys.c    **** }
 3838              		.loc 1 440 2 is_stmt 1 view .LVU1220
 3839              	.LBB402:
 3840              	.LBI402:
 119:src/keys.c    **** {
 3841              		.loc 1 119 12 view .LVU1221
 3842              	.LBB403:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3843              		.loc 1 121 2 view .LVU1222
 131:src/keys.c    **** }
 3844              		.loc 1 131 2 view .LVU1223
 131:src/keys.c    **** }
 3845              		.loc 1 131 23 is_stmt 0 view .LVU1224
 3846 0034 AB4B     		ldr	r3, .L506+8
 3847              	.LBE403:
 3848              	.LBE402:
 440:src/keys.c    **** }
 3849              		.loc 1 440 49 view .LVU1225
 3850 0036 AC4A     		ldr	r2, .L506+12
 3851              	.LBB405:
 3852              	.LBB404:
 131:src/keys.c    **** }
 3853              		.loc 1 131 23 view .LVU1226
 3854 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3855              	.LBE404:
 3856              	.LBE405:
 440:src/keys.c    **** }
 3857              		.loc 1 440 49 view .LVU1227
 3858 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3859 003e 02EB4303 		add	r3, r2, r3, lsl #1
 3860              	.LBE401:
 3861              	.LBE400:
 3862              	.LBB409:
 3863              	.LBB410:
 3864              	.LBB411:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3865              		.loc 1 94 16 view .LVU1228
 3866 0042 0025     		movs	r5, #0
 3867              	.LVL285:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3868              		.loc 1 94 16 view .LVU1229
 3869              	.LBE411:
 3870              	.LBE410:
 3871              	.LBE409:
2273:src/keys.c    **** 	reset_shift();
 3872              		.loc 1 2273 7 view .LVU1230
 3873 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 3874              	.LVL286:
2273:src/keys.c    **** 	reset_shift();
ARM GAS  /tmp/ccQmaUTi.s 			page 135


 3875              		.loc 1 2273 7 view .LVU1231
 3876 0046 FFF7FEFF 		bl	remap_chars
 3877              	.LVL287:
2273:src/keys.c    **** 	reset_shift();
 3878              		.loc 1 2273 7 view .LVU1232
 3879 004a 0446     		mov	r4, r0
 3880              	.LVL288:
2274:src/keys.c    **** 	if (ch == '\0')
 3881              		.loc 1 2274 2 is_stmt 1 view .LVU1233
 3882              	.LBB416:
 3883              	.LBI409:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3884              		.loc 1 102 13 view .LVU1234
 3885              	.LBE416:
 103:src/keys.c    **** }
 3886              		.loc 1 103 2 view .LVU1235
 3887              	.LBB417:
 3888              	.LBB415:
 3889              	.LBI410:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 3890              		.loc 1 92 20 view .LVU1236
 3891              	.LBB414:
  93:src/keys.c    **** 	State2.shifts = shift;
 3892              		.loc 1 93 2 view .LVU1237
 3893              	.LBB412:
 3894              	.LBI412:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 3895              		.loc 1 84 13 view .LVU1238
 3896              	.LBB413:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3897              		.loc 1 85 2 view .LVU1239
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3898              		.loc 1 85 18 is_stmt 0 view .LVU1240
 3899 004c FFF7FEFF 		bl	shift_down
 3900              	.LVL289:
  86:src/keys.c    **** }
 3901              		.loc 1 86 2 is_stmt 1 view .LVU1241
 3902              	.LBE413:
 3903              	.LBE412:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3904              		.loc 1 94 2 view .LVU1242
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3905              		.loc 1 94 16 is_stmt 0 view .LVU1243
 3906 0050 3574     		strb	r5, [r6, #16]
  95:src/keys.c    **** 	return r;
 3907              		.loc 1 95 2 is_stmt 1 view .LVU1244
  95:src/keys.c    **** 	return r;
 3908              		.loc 1 95 19 is_stmt 0 view .LVU1245
 3909 0052 7573     		strb	r5, [r6, #13]
  96:src/keys.c    **** }
 3910              		.loc 1 96 2 is_stmt 1 view .LVU1246
 3911              	.LVL290:
  96:src/keys.c    **** }
 3912              		.loc 1 96 2 is_stmt 0 view .LVU1247
 3913              	.LBE414:
 3914              	.LBE415:
 3915              	.LBE417:
ARM GAS  /tmp/ccQmaUTi.s 			page 136


2275:src/keys.c    **** 		return STATE_UNFINISHED;
 3916              		.loc 1 2275 2 is_stmt 1 view .LVU1248
2275:src/keys.c    **** 		return STATE_UNFINISHED;
 3917              		.loc 1 2275 5 is_stmt 0 view .LVU1249
 3918 0054 002C     		cmp	r4, #0
 3919 0056 6FD0     		beq	.L490
2277:src/keys.c    **** 		// No multi character search in alpha catalogues
 3920              		.loc 1 2277 2 is_stmt 1 view .LVU1250
2277:src/keys.c    **** 		// No multi character search in alpha catalogues
 3921              		.loc 1 2277 5 is_stmt 0 view .LVU1251
 3922 0058 AAF10B0A 		sub	r10, r10, #11
 3923              	.LVL291:
2277:src/keys.c    **** 		// No multi character search in alpha catalogues
 3924              		.loc 1 2277 5 view .LVU1252
 3925 005c BAF1040F 		cmp	r10, #4
 3926 0060 40F2CB80 		bls	.L442
2281:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3927              		.loc 1 2281 2 is_stmt 1 view .LVU1253
2281:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3928              		.loc 1 2281 6 is_stmt 0 view .LVU1254
 3929 0064 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
2281:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3930              		.loc 1 2281 5 view .LVU1255
 3931 0066 092D     		cmp	r5, #9
 3932 0068 40F2C780 		bls	.L442
 3933              	.LVL292:
 3934              	.L410:
2286:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3935              		.loc 1 2286 2 is_stmt 1 view .LVU1256
2286:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3936              		.loc 1 2286 25 is_stmt 0 view .LVU1257
 3937 006c 7319     		adds	r3, r6, r5
 3938 006e 0025     		movs	r5, #0
 3939 0070 83F82050 		strb	r5, [r3, #32]
2287:src/keys.c    **** 		char buf[16];
 3940              		.loc 1 2287 2 is_stmt 1 view .LVU1258
 3941              	.LVL293:
2287:src/keys.c    **** 		char buf[16];
 3942              		.loc 1 2287 16 view .LVU1259
2287:src/keys.c    **** 		char buf[16];
 3943              		.loc 1 2287 2 is_stmt 0 view .LVU1260
 3944 0074 B8F1000F 		cmp	r8, #0
 3945 0078 00F0D780 		beq	.L488
 3946              	.LVL294:
 3947              	.L430:
 3948              	.LBB418:
2288:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 3949              		.loc 1 2288 3 is_stmt 1 view .LVU1261
2289:src/keys.c    **** 		int i;
 3950              		.loc 1 2289 3 view .LVU1262
2289:src/keys.c    **** 		int i;
 3951              		.loc 1 2289 21 is_stmt 0 view .LVU1263
 3952 007c 2846     		mov	r0, r5
 3953 007e FFF7FEFF 		bl	current_catalogue
 3954              	.LVL295:
 3955 0082 6946     		mov	r1, sp
 3956 0084 FFF7FEFF 		bl	catcmd
ARM GAS  /tmp/ccQmaUTi.s 			page 137


 3957              	.LVL296:
 3958 0088 0446     		mov	r4, r0
 3959              	.LVL297:
2290:src/keys.c    **** 
 3960              		.loc 1 2290 3 is_stmt 1 view .LVU1264
2292:src/keys.c    **** 			cmd++;
 3961              		.loc 1 2292 3 view .LVU1265
2293:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3962              		.loc 1 2293 4 view .LVU1266
2292:src/keys.c    **** 			cmd++;
 3963              		.loc 1 2292 7 is_stmt 0 view .LVU1267
 3964 008a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3965              	.LVL298:
2292:src/keys.c    **** 			cmd++;
 3966              		.loc 1 2292 6 view .LVU1268
 3967 008c 1428     		cmp	r0, #20
 3968 008e 04BF     		itt	eq
 3969 0090 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2293:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3970              		.loc 1 2293 7 view .LVU1269
 3971 0092 0134     		addeq	r4, r4, #1
 3972              	.LVL299:
2294:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3973              		.loc 1 2294 3 is_stmt 1 view .LVU1270
2294:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3974              		.loc 1 2294 13 view .LVU1271
2294:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3975              		.loc 1 2294 3 is_stmt 0 view .LVU1272
 3976 0094 0028     		cmp	r0, #0
 3977 0096 00F0BF80 		beq	.L432
 3978 009a DFF85CB2 		ldr	fp, .L506+28
 3979 009e C4F1010A 		rsb	r10, r4, #1
 3980 00a2 06E0     		b	.L435
 3981              	.LVL300:
 3982              	.L495:
 3983              	.LBB419:
2299:src/keys.c    **** 				break;
 3984              		.loc 1 2299 12 view .LVU1273
 3985 00a4 C0F2BA80 		blt	.L434
 3986              	.LBE419:
2294:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3987              		.loc 1 2294 16 discriminator 2 view .LVU1274
 3988 00a8 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 3989              	.LVL301:
2294:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3990              		.loc 1 2294 3 discriminator 2 view .LVU1275
 3991 00ac 0028     		cmp	r0, #0
 3992 00ae 00F0BF80 		beq	.L494
 3993              	.LVL302:
 3994              	.L435:
 3995              	.LBB420:
2295:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3996              		.loc 1 2295 4 is_stmt 1 view .LVU1276
2295:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3997              		.loc 1 2295 18 is_stmt 0 view .LVU1277
 3998 00b2 FFF7FEFF 		bl	remap_chars
 3999              	.LVL303:
ARM GAS  /tmp/ccQmaUTi.s 			page 138


2299:src/keys.c    **** 				break;
 4000              		.loc 1 2299 9 is_stmt 1 view .LVU1278
 4001              	.LBE420:
2294:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4002              		.loc 1 2294 29 view .LVU1279
 4003              	.LBB421:
2296:src/keys.c    **** 			if (c > cl)
 4004              		.loc 1 2296 4 view .LVU1280
2296:src/keys.c    **** 			if (c > cl)
 4005              		.loc 1 2296 42 is_stmt 0 view .LVU1281
 4006 00b6 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 4007              	.LVL304:
2297:src/keys.c    **** 				goto set_pos;
 4008              		.loc 1 2297 4 is_stmt 1 view .LVU1282
2297:src/keys.c    **** 				goto set_pos;
 4009              		.loc 1 2297 7 is_stmt 0 view .LVU1283
 4010 00ba 9842     		cmp	r0, r3
 4011 00bc 0AEB0402 		add	r2, r10, r4
 4012              	.LVL305:
2297:src/keys.c    **** 				goto set_pos;
 4013              		.loc 1 2297 7 view .LVU1284
 4014              	.LBE421:
2294:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4015              		.loc 1 2294 13 is_stmt 1 view .LVU1285
 4016              	.LBB422:
2297:src/keys.c    **** 				goto set_pos;
 4017              		.loc 1 2297 7 is_stmt 0 view .LVU1286
 4018 00c0 F0DD     		ble	.L495
 4019              	.LVL306:
 4020              	.L433:
2297:src/keys.c    **** 				goto set_pos;
 4021              		.loc 1 2297 7 view .LVU1287
 4022 00c2 D9F80040 		ldr	r4, [r9]
 4023              	.L413:
2297:src/keys.c    **** 				goto set_pos;
 4024              		.loc 1 2297 7 view .LVU1288
 4025              	.LBE422:
 4026              	.LBE418:
2308:src/keys.c    **** 		--pos;
 4027              		.loc 1 2308 8 is_stmt 1 view .LVU1289
 4028 00c6 002F     		cmp	r7, #0
 4029 00c8 00F0B680 		beq	.L417
2308:src/keys.c    **** 		--pos;
 4030              		.loc 1 2308 18 is_stmt 0 view .LVU1290
 4031 00cc 4DB1     		cbz	r5, .L411
 4032              	.LVL307:
 4033              	.L489:
2308:src/keys.c    **** 		--pos;
 4034              		.loc 1 2308 18 view .LVU1291
 4035 00ce 2846     		mov	r0, r5
 4036 00d0 FFF7FEFF 		bl	current_catalogue
 4037              	.LVL308:
2309:src/keys.c    **** 	State.catpos = pos;
 4038              		.loc 1 2309 3 is_stmt 1 view .LVU1292
2308:src/keys.c    **** 		--pos;
 4039              		.loc 1 2308 8 view .LVU1293
 4040              	.LBB423:
ARM GAS  /tmp/ccQmaUTi.s 			page 139


 4041              	.LBI423:
2155:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4042              		.loc 1 2155 12 view .LVU1294
 4043              	.LBB424:
2156:src/keys.c    **** }
 4044              		.loc 1 2156 2 view .LVU1295
2156:src/keys.c    **** }
 4045              		.loc 1 2156 33 is_stmt 0 view .LVU1296
 4046 00d4 00F0F000 		and	r0, r0, #240
 4047              	.LBE424:
 4048              	.LBE423:
2308:src/keys.c    **** 		--pos;
 4049              		.loc 1 2308 25 view .LVU1297
 4050 00d8 F028     		cmp	r0, #240
 4051 00da 40F0AD80 		bne	.L417
2308:src/keys.c    **** 		--pos;
 4052              		.loc 1 2308 18 view .LVU1298
 4053 00de 013D     		subs	r5, r5, #1
 4054              	.LVL309:
2308:src/keys.c    **** 		--pos;
 4055              		.loc 1 2308 18 view .LVU1299
 4056 00e0 F5D1     		bne	.L489
 4057              	.LVL310:
 4058              	.L411:
2310:src/keys.c    **** 	return STATE_UNFINISHED;
 4059              		.loc 1 2310 2 is_stmt 1 view .LVU1300
2310:src/keys.c    **** 	return STATE_UNFINISHED;
 4060              		.loc 1 2310 15 is_stmt 0 view .LVU1301
 4061 00e2 B4F8DC37 		ldrh	r3, [r4, #2012]
 4062 00e6 65F34B13 		bfi	r3, r5, #5, #7
 4063 00ea A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2311:src/keys.c    **** }
 4064              		.loc 1 2311 2 is_stmt 1 view .LVU1302
2311:src/keys.c    **** }
 4065              		.loc 1 2311 9 is_stmt 0 view .LVU1303
 4066 00ee 3320     		movs	r0, #51
 4067              	.L502:
2312:src/keys.c    **** 
 4068              		.loc 1 2312 1 view .LVU1304
 4069 00f0 05B0     		add	sp, sp, #20
 4070              		.cfi_remember_state
 4071              		.cfi_def_cfa_offset 36
 4072              		@ sp needed
 4073 00f2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4074              	.LVL311:
 4075              	.L491:
 4076              		.cfi_restore_state
2169:src/keys.c    **** #ifdef DM42
 4077              		.loc 1 2169 3 is_stmt 1 view .LVU1305
 4078 00f6 431F     		subs	r3, r0, #5
 4079 00f8 1F2B     		cmp	r3, #31
 4080 00fa 2FD8     		bhi	.L394
 4081 00fc DFE803F0 		tbb	[pc, r3]
 4082              	.LVL312:
 4083              	.L396:
 4084 0100 35       		.byte	(.L400-.L396)/2
 4085 0101 2E       		.byte	(.L394-.L396)/2
ARM GAS  /tmp/ccQmaUTi.s 			page 140


 4086 0102 2E       		.byte	(.L394-.L396)/2
 4087 0103 2E       		.byte	(.L394-.L396)/2
 4088 0104 2E       		.byte	(.L394-.L396)/2
 4089 0105 2E       		.byte	(.L394-.L396)/2
 4090 0106 2E       		.byte	(.L394-.L396)/2
 4091 0107 35       		.byte	(.L400-.L396)/2
 4092 0108 2E       		.byte	(.L394-.L396)/2
 4093 0109 2E       		.byte	(.L394-.L396)/2
 4094 010a 2E       		.byte	(.L394-.L396)/2
 4095 010b 20       		.byte	(.L399-.L396)/2
 4096 010c 2E       		.byte	(.L394-.L396)/2
 4097 010d 64       		.byte	(.L398-.L396)/2
 4098 010e 2E       		.byte	(.L394-.L396)/2
 4099 010f 2E       		.byte	(.L394-.L396)/2
 4100 0110 2E       		.byte	(.L394-.L396)/2
 4101 0111 2E       		.byte	(.L394-.L396)/2
 4102 0112 2E       		.byte	(.L394-.L396)/2
 4103 0113 6B       		.byte	(.L397-.L396)/2
 4104 0114 2E       		.byte	(.L394-.L396)/2
 4105 0115 2E       		.byte	(.L394-.L396)/2
 4106 0116 2E       		.byte	(.L394-.L396)/2
 4107 0117 2E       		.byte	(.L394-.L396)/2
 4108 0118 2E       		.byte	(.L394-.L396)/2
 4109 0119 2E       		.byte	(.L394-.L396)/2
 4110 011a 2E       		.byte	(.L394-.L396)/2
 4111 011b 2E       		.byte	(.L394-.L396)/2
 4112 011c 2E       		.byte	(.L394-.L396)/2
 4113 011d 2E       		.byte	(.L394-.L396)/2
 4114 011e 2E       		.byte	(.L394-.L396)/2
 4115 011f 27       		.byte	(.L395-.L396)/2
 4116              		.p2align 1
 4117              	.L501:
2258:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4118              		.loc 1 2258 39 is_stmt 0 discriminator 1 view .LVU1306
 4119 0120 724A     		ldr	r2, .L506+16
 4120              	.LVL313:
2258:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4121              		.loc 1 2258 39 discriminator 1 view .LVU1307
 4122 0122 7369     		ldr	r3, [r6, #20]
2258:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4123              		.loc 1 2258 21 discriminator 1 view .LVU1308
 4124 0124 1A42     		tst	r2, r3
 4125 0126 75D0     		beq	.L425
2260:src/keys.c    **** 			return STATE_UNFINISHED;
 4126              		.loc 1 2260 4 is_stmt 1 view .LVU1309
2260:src/keys.c    **** 			return STATE_UNFINISHED;
 4127              		.loc 1 2260 34 is_stmt 0 view .LVU1310
 4128 0128 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 4129 012a C3F30012 		ubfx	r2, r3, #4, #1
2260:src/keys.c    **** 			return STATE_UNFINISHED;
 4130              		.loc 1 2260 26 view .LVU1311
 4131 012e C2F10102 		rsb	r2, r2, #1
2260:src/keys.c    **** 			return STATE_UNFINISHED;
 4132              		.loc 1 2260 22 view .LVU1312
 4133 0132 62F30413 		bfi	r3, r2, #4, #1
 4134 0136 B375     		strb	r3, [r6, #22]
 4135              	.LVL314:
ARM GAS  /tmp/ccQmaUTi.s 			page 141


 4136              	.L490:
2261:src/keys.c    **** 		}
 4137              		.loc 1 2261 4 is_stmt 1 view .LVU1313
2261:src/keys.c    **** 		}
 4138              		.loc 1 2261 11 is_stmt 0 view .LVU1314
 4139 0138 3320     		movs	r0, #51
 4140              	.L392:
2312:src/keys.c    **** 
 4141              		.loc 1 2312 1 view .LVU1315
 4142 013a 05B0     		add	sp, sp, #20
 4143              		.cfi_remember_state
 4144              		.cfi_def_cfa_offset 36
 4145              		@ sp needed
 4146 013c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4147              	.LVL315:
 4148              	.L399:
 4149              		.cfi_restore_state
2198:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4150              		.loc 1 2198 7 is_stmt 1 view .LVU1316
2198:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4151              		.loc 1 2198 10 is_stmt 0 view .LVU1317
 4152 0140 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 4153 0142 23B1     		cbz	r3, .L395
2198:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4154              		.loc 1 2198 32 discriminator 1 view .LVU1318
 4155 0144 FFF7FEFF 		bl	keyticks
 4156              	.LVL316:
2198:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4157              		.loc 1 2198 29 discriminator 1 view .LVU1319
 4158 0148 1D28     		cmp	r0, #29
 4159 014a 40F39580 		ble	.L496
 4160              	.L395:
2208:src/keys.c    **** 			return STATE_UNFINISHED;
 4161              		.loc 1 2208 4 is_stmt 1 view .LVU1320
 4162 014e 0020     		movs	r0, #0
 4163 0150 FFF7FEFF 		bl	init_cat
 4164              	.LVL317:
2209:src/keys.c    **** 
 4165              		.loc 1 2209 4 view .LVU1321
2209:src/keys.c    **** 
 4166              		.loc 1 2209 11 is_stmt 0 view .LVU1322
 4167 0154 3320     		movs	r0, #51
2312:src/keys.c    **** 
 4168              		.loc 1 2312 1 view .LVU1323
 4169 0156 05B0     		add	sp, sp, #20
 4170              		.cfi_remember_state
 4171              		.cfi_def_cfa_offset 36
 4172              		@ sp needed
 4173 0158 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4174              	.LVL318:
 4175              	.L394:
 4176              		.cfi_restore_state
 4177              	.LBB425:
 4178              	.LBI400:
 384:src/keys.c    **** {
 4179              		.loc 1 384 12 is_stmt 1 discriminator 4 view .LVU1324
 4180              	.LBB406:
ARM GAS  /tmp/ccQmaUTi.s 			page 142


 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4181              		.loc 1 386 2 discriminator 4 view .LVU1325
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4182              		.loc 1 434 2 discriminator 4 view .LVU1326
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4183              		.loc 1 434 6 is_stmt 0 discriminator 4 view .LVU1327
 4184 015c B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4185              		.loc 1 434 5 discriminator 4 view .LVU1328
 4186 015e 13F0100F 		tst	r3, #16
 4187 0162 14BF     		ite	ne
 4188 0164 0421     		movne	r1, #4
 4189              	.LVL319:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4190              		.loc 1 434 5 discriminator 4 view .LVU1329
 4191 0166 0021     		moveq	r1, #0
 4192 0168 64E7     		b	.L428
 4193              	.LVL320:
 4194              	.L400:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4195              		.loc 1 434 5 discriminator 4 view .LVU1330
 4196              	.LBE406:
 4197              	.LBE425:
2176:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4198              		.loc 1 2176 4 is_stmt 1 view .LVU1331
2176:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4199              		.loc 1 2176 7 is_stmt 0 view .LVU1332
 4200 016a 4545     		cmp	r5, r8
 4201 016c EFDA     		bge	.L395
 4202 016e 2846     		mov	r0, r5
 4203              	.LVL321:
2176:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4204              		.loc 1 2176 20 discriminator 1 view .LVU1333
 4205 0170 002F     		cmp	r7, #0
 4206 0172 00F08D80 		beq	.L497
 4207              	.LVL322:
 4208              	.LBB426:
 4209              	.LBI426:
2155:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4210              		.loc 1 2155 12 is_stmt 1 view .LVU1334
 4211              	.LBB427:
2156:src/keys.c    **** }
 4212              		.loc 1 2156 2 view .LVU1335
2156:src/keys.c    **** }
 4213              		.loc 1 2156 10 is_stmt 0 view .LVU1336
 4214 0176 FFF7FEFF 		bl	current_catalogue
 4215              	.LVL323:
2156:src/keys.c    **** }
 4216              		.loc 1 2156 33 view .LVU1337
 4217 017a 00F0F003 		and	r3, r0, #240
 4218              	.LBE427:
 4219              	.LBE426:
2176:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4220              		.loc 1 2176 23 view .LVU1338
 4221 017e F02B     		cmp	r3, #240
 4222              	.LBB429:
 4223              	.LBB428:
ARM GAS  /tmp/ccQmaUTi.s 			page 143


2156:src/keys.c    **** }
 4224              		.loc 1 2156 10 view .LVU1339
 4225 0180 0446     		mov	r4, r0
 4226              	.LBE428:
 4227              	.LBE429:
2176:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4228              		.loc 1 2176 23 view .LVU1340
 4229 0182 E4D0     		beq	.L395
 4230              	.L403:
 4231              	.LBB430:
2177:src/keys.c    **** 
 4232              		.loc 1 2177 5 is_stmt 1 view .LVU1341
2179:src/keys.c    **** 
 4233              		.loc 1 2179 5 view .LVU1342
 4234 0184 0020     		movs	r0, #0
 4235 0186 FFF7FEFF 		bl	init_cat
 4236              	.LVL324:
2181:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4237              		.loc 1 2181 5 view .LVU1343
2181:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4238              		.loc 1 2181 8 is_stmt 0 view .LVU1344
 4239 018a 14F47043 		ands	r3, r4, #61440
 4240 018e 00F08C80 		beq	.L404
2181:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4241              		.loc 1 2181 9 discriminator 1 view .LVU1345
 4242 0192 B3F5704F 		cmp	r3, #61440
 4243 0196 00F08880 		beq	.L404
 4244              	.LBB431:
2182:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4245              		.loc 1 2182 6 is_stmt 1 view .LVU1346
2182:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4246              		.loc 1 2182 32 is_stmt 0 view .LVU1347
 4247 019a C4F30723 		ubfx	r3, r4, #8, #8
 4248 019e A3F12005 		sub	r5, r3, #32
 4249              	.LVL325:
2182:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4250              		.loc 1 2182 32 view .LVU1348
 4251 01a2 EDB2     		uxtb	r5, r5
 4252              	.LVL326:
2183:src/keys.c    **** 						return op;
 4253              		.loc 1 2183 6 is_stmt 1 view .LVU1349
2183:src/keys.c    **** 						return op;
 4254              		.loc 1 2183 9 is_stmt 0 view .LVU1350
 4255 01a4 012D     		cmp	r5, #1
 4256 01a6 40F28980 		bls	.L405
2183:src/keys.c    **** 						return op;
 4257              		.loc 1 2183 57 discriminator 1 view .LVU1351
 4258 01aa 6C2D     		cmp	r5, #108
 4259 01ac 00F08680 		beq	.L405
2183:src/keys.c    **** 						return op;
 4260              		.loc 1 2183 78 discriminator 2 view .LVU1352
 4261 01b0 242D     		cmp	r5, #36
 4262 01b2 00F08380 		beq	.L405
2185:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4263              		.loc 1 2185 6 is_stmt 1 view .LVU1353
2185:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4264              		.loc 1 2185 31 is_stmt 0 view .LVU1354
ARM GAS  /tmp/ccQmaUTi.s 			page 144


 4265 01b6 A5F12D02 		sub	r2, r5, #45
2185:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4266              		.loc 1 2185 9 view .LVU1355
 4267 01ba 062A     		cmp	r2, #6
 4268 01bc 00F29E80 		bhi	.L408
2186:src/keys.c    **** 					else
 4269              		.loc 1 2186 7 is_stmt 1 view .LVU1356
2186:src/keys.c    **** 					else
 4270              		.loc 1 2186 28 is_stmt 0 view .LVU1357
 4271 01c0 4D3B     		subs	r3, r3, #77
2186:src/keys.c    **** 					else
 4272              		.loc 1 2186 19 view .LVU1358
 4273 01c2 F373     		strb	r3, [r6, #15]
 4274              	.LBE431:
 4275              	.LBE430:
2195:src/keys.c    **** 
 4276              		.loc 1 2195 11 view .LVU1359
 4277 01c4 3320     		movs	r0, #51
 4278              	.LBB441:
 4279              	.LBB434:
 4280 01c6 B8E7     		b	.L392
 4281              	.LVL327:
 4282              	.L398:
2195:src/keys.c    **** 
 4283              		.loc 1 2195 11 view .LVU1360
 4284              	.LBE434:
 4285              	.LBE441:
2212:src/keys.c    **** 			if (pos == 0)
 4286              		.loc 1 2212 4 is_stmt 1 view .LVU1361
2212:src/keys.c    **** 			if (pos == 0)
 4287              		.loc 1 2212 18 is_stmt 0 view .LVU1362
 4288 01c8 0023     		movs	r3, #0
 4289 01ca 3377     		strb	r3, [r6, #28]
2213:src/keys.c    **** 				goto set_max;
 4290              		.loc 1 2213 4 is_stmt 1 view .LVU1363
2213:src/keys.c    **** 				goto set_max;
 4291              		.loc 1 2213 7 is_stmt 0 view .LVU1364
 4292 01cc 002D     		cmp	r5, #0
 4293 01ce 5DD1     		bne	.L498
 4294              	.LVL328:
 4295              	.L412:
2306:src/keys.c    **** set_pos:
 4296              		.loc 1 2306 2 is_stmt 1 view .LVU1365
2306:src/keys.c    **** set_pos:
 4297              		.loc 1 2306 6 is_stmt 0 view .LVU1366
 4298 01d0 08F1FF35 		add	r5, r8, #-1
 4299              	.LVL329:
2306:src/keys.c    **** set_pos:
 4300              		.loc 1 2306 6 view .LVU1367
 4301 01d4 77E7     		b	.L413
 4302              	.LVL330:
 4303              	.L397:
2220:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4304              		.loc 1 2220 4 is_stmt 1 view .LVU1368
2220:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4305              		.loc 1 2220 18 is_stmt 0 view .LVU1369
 4306 01d6 0023     		movs	r3, #0
ARM GAS  /tmp/ccQmaUTi.s 			page 145


 4307 01d8 3377     		strb	r3, [r6, #28]
2221:src/keys.c    **** 			if (pos >= ctmax)
 4308              		.loc 1 2221 4 is_stmt 1 view .LVU1370
2221:src/keys.c    **** 			if (pos >= ctmax)
 4309              		.loc 1 2221 10 is_stmt 0 view .LVU1371
 4310 01da 06E0     		b	.L416
 4311              	.LVL331:
 4312              	.L499:
2221:src/keys.c    **** 			if (pos >= ctmax)
 4313              		.loc 1 2221 25 discriminator 1 view .LVU1372
 4314 01dc 67B3     		cbz	r7, .L417
 4315              	.LBB442:
 4316              	.LBB443:
2156:src/keys.c    **** }
 4317              		.loc 1 2156 10 view .LVU1373
 4318 01de FFF7FEFF 		bl	current_catalogue
 4319              	.LVL332:
2156:src/keys.c    **** }
 4320              		.loc 1 2156 33 view .LVU1374
 4321 01e2 00F0F000 		and	r0, r0, #240
 4322              	.LBE443:
 4323              	.LBE442:
2221:src/keys.c    **** 			if (pos >= ctmax)
 4324              		.loc 1 2221 37 view .LVU1375
 4325 01e6 F028     		cmp	r0, #240
 4326 01e8 26D1     		bne	.L417
 4327              	.L416:
2221:src/keys.c    **** 			if (pos >= ctmax)
 4328              		.loc 1 2221 61 is_stmt 1 discriminator 3 view .LVU1376
2221:src/keys.c    **** 			if (pos >= ctmax)
 4329              		.loc 1 2221 10 discriminator 3 view .LVU1377
 4330 01ea 0135     		adds	r5, r5, #1
 4331              	.LVL333:
 4332              	.LBB446:
 4333              	.LBI442:
2155:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4334              		.loc 1 2155 12 discriminator 3 view .LVU1378
 4335              	.LBB444:
2156:src/keys.c    **** }
 4336              		.loc 1 2156 2 discriminator 3 view .LVU1379
 4337              	.LBE444:
 4338              	.LBE446:
2221:src/keys.c    **** 			if (pos >= ctmax)
 4339              		.loc 1 2221 10 is_stmt 0 discriminator 3 view .LVU1380
 4340 01ec A845     		cmp	r8, r5
 4341              	.LBB447:
 4342              	.LBB445:
2156:src/keys.c    **** }
 4343              		.loc 1 2156 10 discriminator 3 view .LVU1381
 4344 01ee 2846     		mov	r0, r5
 4345              	.LBE445:
 4346              	.LBE447:
2221:src/keys.c    **** 			if (pos >= ctmax)
 4347              		.loc 1 2221 10 discriminator 3 view .LVU1382
 4348 01f0 F4DC     		bgt	.L499
 4349              	.LVL334:
2308:src/keys.c    **** 		--pos;
ARM GAS  /tmp/ccQmaUTi.s 			page 146


 4350              		.loc 1 2308 8 is_stmt 1 view .LVU1383
2223:src/keys.c    **** 			goto set_pos;
 4351              		.loc 1 2223 9 is_stmt 0 view .LVU1384
 4352 01f2 3D46     		mov	r5, r7
 4353              	.LVL335:
2308:src/keys.c    **** 		--pos;
 4354              		.loc 1 2308 8 view .LVU1385
 4355 01f4 07B3     		cbz	r7, .L417
 4356              	.LVL336:
2308:src/keys.c    **** 		--pos;
 4357              		.loc 1 2308 8 view .LVU1386
 4358 01f6 0025     		movs	r5, #0
 4359              	.LVL337:
2308:src/keys.c    **** 		--pos;
 4360              		.loc 1 2308 8 view .LVU1387
 4361 01f8 73E7     		b	.L411
 4362              	.LVL338:
 4363              	.L442:
2281:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 4364              		.loc 1 2281 6 view .LVU1388
 4365 01fa 2B46     		mov	r3, r5
2282:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4366              		.loc 1 2282 3 is_stmt 1 view .LVU1389
2282:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4367              		.loc 1 2282 28 is_stmt 0 view .LVU1390
 4368 01fc 3344     		add	r3, r3, r6
2282:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4369              		.loc 1 2282 24 view .LVU1391
 4370 01fe 0135     		adds	r5, r5, #1
 4371 0200 EDB2     		uxtb	r5, r5
 4372 0202 3577     		strb	r5, [r6, #28]
2282:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4373              		.loc 1 2282 28 view .LVU1392
 4374 0204 83F82040 		strb	r4, [r3, #32]
 4375 0208 30E7     		b	.L410
 4376              	.LVL339:
 4377              	.L492:
2230:src/keys.c    **** 			/*
 4378              		.loc 1 2230 3 is_stmt 1 view .LVU1393
2230:src/keys.c    **** 			/*
 4379              		.loc 1 2230 6 is_stmt 0 view .LVU1394
 4380 020a BAF1120F 		cmp	r10, #18
 4381 020e 21D0     		beq	.L500
 4382              	.L419:
2258:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4383              		.loc 1 2258 8 is_stmt 1 view .LVU1395
2258:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4384              		.loc 1 2258 11 is_stmt 0 view .LVU1396
 4385 0210 2428     		cmp	r0, #36
 4386 0212 85D0     		beq	.L501
 4387              	.LVL340:
 4388              	.L425:
2273:src/keys.c    **** 	reset_shift();
 4389              		.loc 1 2273 2 is_stmt 1 view .LVU1397
 4390              	.LBB448:
 384:src/keys.c    **** {
 4391              		.loc 1 384 12 view .LVU1398
ARM GAS  /tmp/ccQmaUTi.s 			page 147


 4392              	.LBB407:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4393              		.loc 1 386 2 view .LVU1399
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4394              		.loc 1 434 2 view .LVU1400
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4395              		.loc 1 434 5 is_stmt 0 view .LVU1401
 4396 0214 0121     		movs	r1, #1
 4397              	.LVL341:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4398              		.loc 1 434 5 view .LVU1402
 4399 0216 0DE7     		b	.L428
 4400              	.LVL342:
 4401              	.L432:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4402              		.loc 1 434 5 view .LVU1403
 4403 0218 96F82030 		ldrb	r3, [r6, #32]	@ zero_extendqisi2
 4404              	.LVL343:
 4405              	.L434:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4406              		.loc 1 434 5 view .LVU1404
 4407              	.LBE407:
 4408              	.LBE448:
 4409              	.LBB449:
2302:src/keys.c    **** 			goto set_pos;
 4410              		.loc 1 2302 3 is_stmt 1 view .LVU1405
2302:src/keys.c    **** 			goto set_pos;
 4411              		.loc 1 2302 6 is_stmt 0 view .LVU1406
 4412 021c 002B     		cmp	r3, #0
 4413 021e 3FF450AF 		beq	.L433
 4414              	.LBE449:
2287:src/keys.c    **** 		char buf[16];
 4415              		.loc 1 2287 29 is_stmt 1 view .LVU1407
 4416 0222 0135     		adds	r5, r5, #1
 4417              	.LVL344:
2287:src/keys.c    **** 		char buf[16];
 4418              		.loc 1 2287 16 view .LVU1408
2287:src/keys.c    **** 		char buf[16];
 4419              		.loc 1 2287 2 is_stmt 0 view .LVU1409
 4420 0224 A845     		cmp	r8, r5
 4421 0226 7FF429AF 		bne	.L430
 4422              	.LVL345:
 4423              	.L488:
2287:src/keys.c    **** 		char buf[16];
 4424              		.loc 1 2287 2 view .LVU1410
 4425 022a D9F80040 		ldr	r4, [r9]
 4426 022e CFE7     		b	.L412
 4427              	.LVL346:
 4428              	.L494:
2287:src/keys.c    **** 		char buf[16];
 4429              		.loc 1 2287 2 view .LVU1411
 4430 0230 3244     		add	r2, r2, r6
 4431              	.LVL347:
2287:src/keys.c    **** 		char buf[16];
 4432              		.loc 1 2287 2 view .LVU1412
 4433 0232 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4434              	.LVL348:
ARM GAS  /tmp/ccQmaUTi.s 			page 148


2287:src/keys.c    **** 		char buf[16];
 4435              		.loc 1 2287 2 view .LVU1413
 4436 0236 F1E7     		b	.L434
 4437              	.LVL349:
 4438              	.L417:
2310:src/keys.c    **** 	return STATE_UNFINISHED;
 4439              		.loc 1 2310 15 view .LVU1414
 4440 0238 B4F8DC37 		ldrh	r3, [r4, #2012]
 4441 023c 05F07F05 		and	r5, r5, #127
 4442              	.LVL350:
2310:src/keys.c    **** 	return STATE_UNFINISHED;
 4443              		.loc 1 2310 2 is_stmt 1 view .LVU1415
2310:src/keys.c    **** 	return STATE_UNFINISHED;
 4444              		.loc 1 2310 15 is_stmt 0 view .LVU1416
 4445 0240 65F34B13 		bfi	r3, r5, #5, #7
 4446 0244 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2311:src/keys.c    **** }
 4447              		.loc 1 2311 2 is_stmt 1 view .LVU1417
2311:src/keys.c    **** }
 4448              		.loc 1 2311 9 is_stmt 0 view .LVU1418
 4449 0248 3320     		movs	r0, #51
 4450 024a 51E7     		b	.L502
 4451              	.LVL351:
 4452              	.L493:
2264:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4453              		.loc 1 2264 3 is_stmt 1 view .LVU1419
2264:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4454              		.loc 1 2264 6 is_stmt 0 view .LVU1420
 4455 024c 1028     		cmp	r0, #16
 4456 024e 23D0     		beq	.L503
 4457              	.L427:
2273:src/keys.c    **** 	reset_shift();
 4458              		.loc 1 2273 2 is_stmt 1 view .LVU1421
 4459              	.LVL352:
 4460              	.LBB450:
 384:src/keys.c    **** {
 4461              		.loc 1 384 12 view .LVU1422
 4462              	.LBB408:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4463              		.loc 1 386 2 view .LVU1423
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4464              		.loc 1 434 2 view .LVU1424
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4465              		.loc 1 434 5 is_stmt 0 view .LVU1425
 4466 0250 0521     		movs	r1, #5
 4467              	.LVL353:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4468              		.loc 1 434 5 view .LVU1426
 4469 0252 EFE6     		b	.L428
 4470              	.LVL354:
 4471              	.L500:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4472              		.loc 1 434 5 view .LVU1427
 4473              	.LBE408:
 4474              	.LBE450:
2230:src/keys.c    **** 			/*
 4475              		.loc 1 2230 29 discriminator 1 view .LVU1428
ARM GAS  /tmp/ccQmaUTi.s 			page 149


 4476 0254 0128     		cmp	r0, #1
 4477 0256 DBD1     		bne	.L419
 4478              	.LBB451:
2239:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4479              		.loc 1 2239 4 is_stmt 1 view .LVU1429
2247:src/keys.c    **** 			int i;
 4480              		.loc 1 2247 4 view .LVU1430
2247:src/keys.c    **** 			int i;
 4481              		.loc 1 2247 22 is_stmt 0 view .LVU1431
 4482 0258 2846     		mov	r0, r5
 4483              	.LVL355:
2247:src/keys.c    **** 			int i;
 4484              		.loc 1 2247 22 view .LVU1432
 4485 025a FFF7FEFF 		bl	current_catalogue
 4486              	.LVL356:
2247:src/keys.c    **** 			int i;
 4487              		.loc 1 2247 22 view .LVU1433
 4488 025e 0446     		mov	r4, r0
 4489              	.LVL357:
2248:src/keys.c    **** 
 4490              		.loc 1 2248 4 is_stmt 1 view .LVU1434
2250:src/keys.c    **** 			if (isRARG(op))
 4491              		.loc 1 2250 4 view .LVU1435
 4492 0260 0020     		movs	r0, #0
 4493              	.LVL358:
2250:src/keys.c    **** 			if (isRARG(op))
 4494              		.loc 1 2250 4 is_stmt 0 view .LVU1436
 4495 0262 FFF7FEFF 		bl	init_cat
 4496              	.LVL359:
2251:src/keys.c    **** 				return op ^ 1;
 4497              		.loc 1 2251 4 is_stmt 1 view .LVU1437
2251:src/keys.c    **** 				return op ^ 1;
 4498              		.loc 1 2251 7 is_stmt 0 view .LVU1438
 4499 0266 14F47043 		ands	r3, r4, #61440
 4500 026a 29D0     		beq	.L420
2251:src/keys.c    **** 				return op ^ 1;
 4501              		.loc 1 2251 8 discriminator 1 view .LVU1439
 4502 026c B3F5704F 		cmp	r3, #61440
 4503 0270 26D0     		beq	.L420
2252:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4504              		.loc 1 2252 5 is_stmt 1 view .LVU1440
2252:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4505              		.loc 1 2252 15 is_stmt 0 view .LVU1441
 4506 0272 84F00100 		eor	r0, r4, #1
 4507 0276 60E7     		b	.L392
 4508              	.LVL360:
 4509              	.L496:
2252:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4510              		.loc 1 2252 15 view .LVU1442
 4511              	.LBE451:
2199:src/keys.c    **** 					goto search;
 4512              		.loc 1 2199 9 is_stmt 1 view .LVU1443
2199:src/keys.c    **** 					goto search;
 4513              		.loc 1 2199 13 is_stmt 0 view .LVU1444
 4514 0278 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
 4515              	.LVL361:
2199:src/keys.c    **** 					goto search;
ARM GAS  /tmp/ccQmaUTi.s 			page 150


 4516              		.loc 1 2199 13 view .LVU1445
 4517 027a 013D     		subs	r5, r5, #1
 4518 027c EDB2     		uxtb	r5, r5
2199:src/keys.c    **** 					goto search;
 4519              		.loc 1 2199 12 view .LVU1446
 4520 027e 3577     		strb	r5, [r6, #28]
 4521 0280 002D     		cmp	r5, #0
 4522 0282 7FF4F3AE 		bne	.L410
 4523 0286 D9F80040 		ldr	r4, [r9]
 4524 028a 2AE7     		b	.L411
 4525              	.LVL362:
 4526              	.L498:
2216:src/keys.c    **** 			goto set_pos;
 4527              		.loc 1 2216 5 is_stmt 1 view .LVU1447
 4528 028c 013D     		subs	r5, r5, #1
 4529              	.LVL363:
2217:src/keys.c    **** 
 4530              		.loc 1 2217 4 view .LVU1448
 4531 028e 1AE7     		b	.L413
 4532              	.LVL364:
 4533              	.L497:
2217:src/keys.c    **** 
 4534              		.loc 1 2217 4 is_stmt 0 view .LVU1449
 4535 0290 FFF7FEFF 		bl	current_catalogue
 4536              	.LVL365:
2217:src/keys.c    **** 
 4537              		.loc 1 2217 4 view .LVU1450
 4538 0294 0446     		mov	r4, r0
 4539 0296 75E7     		b	.L403
 4540              	.LVL366:
 4541              	.L503:
2264:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4542              		.loc 1 2264 16 discriminator 1 view .LVU1451
 4543 0298 BAF1130F 		cmp	r10, #19
 4544 029c D8D1     		bne	.L427
2265:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4545              		.loc 1 2265 4 is_stmt 1 view .LVU1452
 4546 029e 0020     		movs	r0, #0
 4547              	.LVL367:
2265:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4548              		.loc 1 2265 4 is_stmt 0 view .LVU1453
 4549 02a0 FFF7FEFF 		bl	init_cat
 4550              	.LVL368:
2266:src/keys.c    **** 		}
 4551              		.loc 1 2266 4 is_stmt 1 view .LVU1454
2266:src/keys.c    **** 		}
 4552              		.loc 1 2266 11 is_stmt 0 view .LVU1455
 4553 02a4 40F23D10 		movw	r0, #317
 4554 02a8 47E7     		b	.L392
 4555              	.L404:
 4556              	.LBB452:
2191:src/keys.c    **** 				}
 4557              		.loc 1 2191 6 is_stmt 1 view .LVU1456
 4558              	.LBB435:
 4559              	.LBB436:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4560              		.loc 1 620 5 is_stmt 0 view .LVU1457
ARM GAS  /tmp/ccQmaUTi.s 			page 151


 4561 02aa C4F30723 		ubfx	r3, r4, #8, #8
 4562 02ae 012B     		cmp	r3, #1
 4563              	.LBE436:
 4564              	.LBE435:
2191:src/keys.c    **** 				}
 4565              		.loc 1 2191 13 view .LVU1458
 4566 02b0 2046     		mov	r0, r4
 4567              	.LVL369:
 4568              	.LBB438:
 4569              	.LBI435:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4570              		.loc 1 619 12 is_stmt 1 view .LVU1459
 4571              	.LBB437:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4572              		.loc 1 620 2 view .LVU1460
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4573              		.loc 1 620 5 is_stmt 0 view .LVU1461
 4574 02b2 7FF442AF 		bne	.L392
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4575              		.loc 1 620 5 view .LVU1462
 4576 02b6 FFF7FEFF 		bl	check_confirm.part.0
 4577              	.LVL370:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4578              		.loc 1 620 5 view .LVU1463
 4579 02ba 3EE7     		b	.L392
 4580              	.LVL371:
 4581              	.L405:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4582              		.loc 1 620 5 view .LVU1464
 4583              	.LBE437:
 4584              	.LBE438:
 4585              	.LBB439:
2184:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4586              		.loc 1 2184 7 is_stmt 1 view .LVU1465
2184:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4587              		.loc 1 2184 14 is_stmt 0 view .LVU1466
 4588 02bc 2046     		mov	r0, r4
 4589 02be 3CE7     		b	.L392
 4590              	.LVL372:
 4591              	.L420:
2184:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4592              		.loc 1 2184 14 view .LVU1467
 4593 02c0 0B48     		ldr	r0, .L506+20
 4594              	.LBE439:
 4595              	.LBE452:
2162:src/keys.c    **** 	int pos = State.catpos;
 4596              		.loc 1 2162 92 view .LVU1468
 4597 02c2 40F28522 		movw	r2, #645
 4598 02c6 0146     		mov	r1, r0
 4599 02c8 0023     		movs	r3, #0
 4600 02ca 01E0     		b	.L422
 4601              	.LVL373:
 4602              	.L505:
2162:src/keys.c    **** 	int pos = State.catpos;
 4603              		.loc 1 2162 92 view .LVU1469
 4604 02cc 31F8022F 		ldrh	r2, [r1, #2]!
 4605              	.LVL374:
ARM GAS  /tmp/ccQmaUTi.s 			page 152


 4606              	.L422:
 4607              	.LBB453:
2254:src/keys.c    **** 					return conv_mapping[i^1];
 4608              		.loc 1 2254 5 is_stmt 1 view .LVU1470
2253:src/keys.c    **** 				if (op == conv_mapping[i])
 4609              		.loc 1 2253 68 view .LVU1471
2254:src/keys.c    **** 					return conv_mapping[i^1];
 4610              		.loc 1 2254 8 is_stmt 0 view .LVU1472
 4611 02d0 A242     		cmp	r2, r4
 4612 02d2 1DD0     		beq	.L504
2253:src/keys.c    **** 				if (op == conv_mapping[i])
 4613              		.loc 1 2253 68 discriminator 2 view .LVU1473
 4614 02d4 0133     		adds	r3, r3, #1
 4615              	.LVL375:
2253:src/keys.c    **** 				if (op == conv_mapping[i])
 4616              		.loc 1 2253 16 is_stmt 1 discriminator 2 view .LVU1474
2253:src/keys.c    **** 				if (op == conv_mapping[i])
 4617              		.loc 1 2253 4 is_stmt 0 discriminator 2 view .LVU1475
 4618 02d6 0C2B     		cmp	r3, #12
 4619 02d8 F8D1     		bne	.L505
 4620 02da 2DE7     		b	.L490
 4621              	.L507:
 4622              		.align	2
 4623              	.L506:
 4624 02dc 00000000 		.word	StateWhileOn
 4625 02e0 00000000 		.word	.LANCHOR2
 4626 02e4 00000000 		.word	.LANCHOR1
 4627 02e8 00000000 		.word	.LANCHOR9
 4628 02ec 00080800 		.word	526336
 4629 02f0 00000000 		.word	.LANCHOR8
 4630 02f4 00000000 		.word	main_ram
 4631 02f8 1F000000 		.word	StateWhileOn+31
 4632              	.LVL376:
 4633              	.L408:
2253:src/keys.c    **** 				if (op == conv_mapping[i])
 4634              		.loc 1 2253 4 discriminator 2 view .LVU1476
 4635              	.LBE453:
 4636              	.LBB454:
 4637              	.LBB440:
2188:src/keys.c    **** 				}
 4638              		.loc 1 2188 7 is_stmt 1 view .LVU1477
 4639              	.LBB432:
 4640              	.LBI432:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 4641              		.loc 1 501 13 view .LVU1478
 4642              	.LBB433:
 502:src/keys.c    **** 		return;
 4643              		.loc 1 502 2 view .LVU1479
 502:src/keys.c    **** 		return;
 4644              		.loc 1 502 6 is_stmt 0 view .LVU1480
 4645 02fc FFF7FEFF 		bl	is_bad_cmdline
 4646              	.LVL377:
 502:src/keys.c    **** 		return;
 4647              		.loc 1 502 5 view .LVU1481
 4648 0300 0028     		cmp	r0, #0
 4649 0302 7FF419AF 		bne	.L490
 4650 0306 2846     		mov	r0, r5
ARM GAS  /tmp/ccQmaUTi.s 			page 153


 4651 0308 FFF7FEFF 		bl	init_arg.part.0
 4652              	.LVL378:
 4653              	.LBE433:
 4654              	.LBE432:
 4655              	.LBE440:
 4656              	.LBE454:
2195:src/keys.c    **** 
 4657              		.loc 1 2195 11 view .LVU1482
 4658 030c 3320     		movs	r0, #51
 4659 030e 14E7     		b	.L392
 4660              	.LVL379:
 4661              	.L504:
 4662              	.LBB455:
2255:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4663              		.loc 1 2255 6 is_stmt 1 view .LVU1483
2255:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4664              		.loc 1 2255 27 is_stmt 0 view .LVU1484
 4665 0310 83F00103 		eor	r3, r3, #1
 4666              	.LVL380:
2255:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4667              		.loc 1 2255 25 view .LVU1485
 4668 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4669 0318 0FE7     		b	.L392
 4670              	.LBE455:
 4671              		.cfi_endproc
 4672              	.LFE43:
 4674 031a 00BF     		.section	.text.find_pos,"ax",%progbits
 4675              		.align	1
 4676              		.p2align 2,,3
 4677              		.global	find_pos
 4678              		.syntax unified
 4679              		.thumb
 4680              		.thumb_func
 4681              		.fpu fpv4-sp-d16
 4683              	find_pos:
 4684              	.LVL381:
 4685              	.LFB44:
2315:src/keys.c    **** 	int pos;
 4686              		.loc 1 2315 32 is_stmt 1 view -0
 4687              		.cfi_startproc
 4688              		@ args = 0, pretend = 0, frame = 16
 4689              		@ frame_needed = 0, uses_anonymous_args = 0
2316:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4690              		.loc 1 2316 2 view .LVU1487
2317:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4691              		.loc 1 2317 2 view .LVU1488
 4692              	.LBB456:
 4693              	.LBI456:
2017:src/keys.c    **** 	// A quick table of catalogue sizes
 4694              		.loc 1 2017 5 view .LVU1489
 4695              	.LBB457:
2020:src/keys.c    **** 	{
 4696              		.loc 1 2020 2 view .LVU1490
2051:src/keys.c    **** #endif
 4697              		.loc 1 2051 2 view .LVU1491
 4698              	.LBE457:
 4699              	.LBE456:
ARM GAS  /tmp/ccQmaUTi.s 			page 154


2315:src/keys.c    **** 	int pos;
 4700              		.loc 1 2315 32 is_stmt 0 view .LVU1492
 4701 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4702              		.cfi_def_cfa_offset 32
 4703              		.cfi_offset 4, -32
 4704              		.cfi_offset 5, -28
 4705              		.cfi_offset 6, -24
 4706              		.cfi_offset 7, -20
 4707              		.cfi_offset 8, -16
 4708              		.cfi_offset 9, -12
 4709              		.cfi_offset 10, -8
 4710              		.cfi_offset 14, -4
 4711              	.LBB459:
 4712              	.LBB458:
2051:src/keys.c    **** #endif
 4713              		.loc 1 2051 31 view .LVU1493
 4714 0004 1E4B     		ldr	r3, .L525
2051:src/keys.c    **** #endif
 4715              		.loc 1 2051 24 view .LVU1494
 4716 0006 1F4A     		ldr	r2, .L525+4
2051:src/keys.c    **** #endif
 4717              		.loc 1 2051 31 view .LVU1495
 4718 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2051:src/keys.c    **** #endif
 4719              		.loc 1 2051 24 view .LVU1496
 4720 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4721              	.LVL382:
2051:src/keys.c    **** #endif
 4722              		.loc 1 2051 24 view .LVU1497
 4723              	.LBE458:
 4724              	.LBE459:
2318:src/keys.c    **** 		char buf[16];
 4725              		.loc 1 2318 2 is_stmt 1 view .LVU1498
2318:src/keys.c    **** 		char buf[16];
 4726              		.loc 1 2318 16 view .LVU1499
2315:src/keys.c    **** 	int pos;
 4727              		.loc 1 2315 32 is_stmt 0 view .LVU1500
 4728 000e 84B0     		sub	sp, sp, #16
 4729              		.cfi_def_cfa_offset 48
2318:src/keys.c    **** 		char buf[16];
 4730              		.loc 1 2318 2 view .LVU1501
 4731 0010 BAF1000F 		cmp	r10, #0
 4732 0014 32D0     		beq	.L515
 4733 0016 8146     		mov	r9, r0
2318:src/keys.c    **** 		char buf[16];
 4734              		.loc 1 2318 11 view .LVU1502
 4735 0018 4FF00008 		mov	r8, #0
 4736 001c C0F10107 		rsb	r7, r0, #1
 4737              	.LVL383:
 4738              	.L514:
 4739              	.LBB460:
2319:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4740              		.loc 1 2319 3 is_stmt 1 view .LVU1503
2320:src/keys.c    **** 		int i;
 4741              		.loc 1 2320 3 view .LVU1504
2320:src/keys.c    **** 		int i;
 4742              		.loc 1 2320 21 is_stmt 0 view .LVU1505
ARM GAS  /tmp/ccQmaUTi.s 			page 155


 4743 0020 4046     		mov	r0, r8
 4744 0022 FFF7FEFF 		bl	current_catalogue
 4745              	.LVL384:
 4746 0026 6946     		mov	r1, sp
 4747 0028 FFF7FEFF 		bl	catcmd
 4748              	.LVL385:
 4749 002c 0646     		mov	r6, r0
 4750              	.LVL386:
2321:src/keys.c    **** 
 4751              		.loc 1 2321 3 is_stmt 1 view .LVU1506
2323:src/keys.c    **** 			cmd++;
 4752              		.loc 1 2323 3 view .LVU1507
2324:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4753              		.loc 1 2324 4 view .LVU1508
2323:src/keys.c    **** 			cmd++;
 4754              		.loc 1 2323 7 is_stmt 0 view .LVU1509
 4755 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4756              	.LVL387:
2323:src/keys.c    **** 			cmd++;
 4757              		.loc 1 2323 6 view .LVU1510
 4758 0030 1428     		cmp	r0, #20
 4759 0032 04BF     		itt	eq
 4760 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2324:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4761              		.loc 1 2324 7 view .LVU1511
 4762 0036 0136     		addeq	r6, r6, #1
 4763              	.LVL388:
2325:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4764              		.loc 1 2325 3 is_stmt 1 view .LVU1512
2325:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4765              		.loc 1 2325 13 view .LVU1513
2325:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4766              		.loc 1 2325 3 is_stmt 0 view .LVU1514
 4767 0038 A8B1     		cbz	r0, .L516
 4768 003a 09F1FF33 		add	r3, r9, #-1
 4769 003e 04E0     		b	.L513
 4770              	.LVL389:
 4771              	.L524:
 4772              	.LBB461:
2330:src/keys.c    **** 				break;
 4773              		.loc 1 2330 12 view .LVU1515
 4774 0040 12DB     		blt	.L511
 4775              	.LBE461:
2325:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4776              		.loc 1 2325 16 discriminator 2 view .LVU1516
 4777 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4778              	.LVL390:
2325:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4779              		.loc 1 2325 16 discriminator 2 view .LVU1517
 4780 0046 3C44     		add	r4, r4, r7
2325:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4781              		.loc 1 2325 3 discriminator 2 view .LVU1518
 4782 0048 B0B1     		cbz	r0, .L523
 4783              	.LVL391:
 4784              	.L513:
 4785              	.LBB462:
2326:src/keys.c    **** 			const int cl = remap_chars(text[i]);
ARM GAS  /tmp/ccQmaUTi.s 			page 156


 4786              		.loc 1 2326 4 is_stmt 1 view .LVU1519
 4787 004a 5C1C     		adds	r4, r3, #1
2326:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4788              		.loc 1 2326 18 is_stmt 0 view .LVU1520
 4789 004c FFF7FEFF 		bl	remap_chars
 4790              	.LVL392:
 4791 0050 0546     		mov	r5, r0
2327:src/keys.c    **** 			if (c > cl)
 4792              		.loc 1 2327 19 view .LVU1521
 4793 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4794              	.LVL393:
2327:src/keys.c    **** 			if (c > cl)
 4795              		.loc 1 2327 4 is_stmt 1 view .LVU1522
2327:src/keys.c    **** 			if (c > cl)
 4796              		.loc 1 2327 19 is_stmt 0 view .LVU1523
 4797 0054 FFF7FEFF 		bl	remap_chars
 4798              	.LVL394:
2330:src/keys.c    **** 				break;
 4799              		.loc 1 2330 9 is_stmt 1 view .LVU1524
 4800              	.LBE462:
2325:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4801              		.loc 1 2325 29 view .LVU1525
2325:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4802              		.loc 1 2325 13 view .LVU1526
 4803              	.LBB463:
2328:src/keys.c    **** 				return pos;
 4804              		.loc 1 2328 4 view .LVU1527
2328:src/keys.c    **** 				return pos;
 4805              		.loc 1 2328 7 is_stmt 0 view .LVU1528
 4806 0058 8542     		cmp	r5, r0
 4807 005a 2346     		mov	r3, r4
 4808 005c F0DD     		ble	.L524
 4809              	.LVL395:
 4810              	.L508:
2328:src/keys.c    **** 				return pos;
 4811              		.loc 1 2328 7 view .LVU1529
 4812              	.LBE463:
 4813              	.LBE460:
2337:src/keys.c    **** 
 4814              		.loc 1 2337 1 view .LVU1530
 4815 005e 4046     		mov	r0, r8
 4816 0060 04B0     		add	sp, sp, #16
 4817              		.cfi_remember_state
 4818              		.cfi_def_cfa_offset 32
 4819              		@ sp needed
 4820 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4821              	.LVL396:
 4822              	.L516:
 4823              		.cfi_restore_state
 4824              	.LBB464:
2325:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4825              		.loc 1 2325 3 view .LVU1531
 4826 0066 4C46     		mov	r4, r9
 4827              	.LVL397:
 4828              	.L511:
2333:src/keys.c    **** 			return pos;
 4829              		.loc 1 2333 3 is_stmt 1 view .LVU1532
ARM GAS  /tmp/ccQmaUTi.s 			page 157


2333:src/keys.c    **** 			return pos;
 4830              		.loc 1 2333 6 is_stmt 0 view .LVU1533
 4831 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4832 006a 002B     		cmp	r3, #0
 4833 006c F7D0     		beq	.L508
 4834              	.LBE464:
2318:src/keys.c    **** 		char buf[16];
 4835              		.loc 1 2318 29 is_stmt 1 view .LVU1534
 4836 006e 08F10108 		add	r8, r8, #1
 4837              	.LVL398:
2318:src/keys.c    **** 		char buf[16];
 4838              		.loc 1 2318 16 view .LVU1535
2318:src/keys.c    **** 		char buf[16];
 4839              		.loc 1 2318 2 is_stmt 0 view .LVU1536
 4840 0072 D045     		cmp	r8, r10
 4841 0074 D4D1     		bne	.L514
 4842 0076 F2E7     		b	.L508
 4843              	.LVL399:
 4844              	.L523:
2318:src/keys.c    **** 		char buf[16];
 4845              		.loc 1 2318 2 view .LVU1537
 4846 0078 4C44     		add	r4, r4, r9
 4847 007a F5E7     		b	.L511
 4848              	.LVL400:
 4849              	.L515:
2318:src/keys.c    **** 		char buf[16];
 4850              		.loc 1 2318 11 view .LVU1538
 4851 007c D046     		mov	r8, r10
 4852 007e EEE7     		b	.L508
 4853              	.L526:
 4854              		.align	2
 4855              	.L525:
 4856 0080 00000000 		.word	StateWhileOn
 4857 0084 00000000 		.word	.LANCHOR2
 4858              		.cfi_endproc
 4859              	.LFE44:
 4861              		.section	.text.get_alpha_state,"ax",%progbits
 4862              		.align	1
 4863              		.p2align 2,,3
 4864              		.global	get_alpha_state
 4865              		.syntax unified
 4866              		.thumb
 4867              		.thumb_func
 4868              		.fpu fpv4-sp-d16
 4870              	get_alpha_state:
 4871              	.LFB56:
2662:src/keys.c    **** 
2663:src/keys.c    **** 
2664:src/keys.c    **** static int process_registerlist(const keycode c) {
2665:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2666:src/keys.c    **** 	enum shifts shift = reset_shift();
2667:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2668:src/keys.c    **** 	const int g_max = global_regs();
2669:src/keys.c    **** 
2670:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2671:src/keys.c    **** 		if (local_regs())
2672:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
ARM GAS  /tmp/ccQmaUTi.s 			page 158


2673:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2674:src/keys.c    **** 		goto reset_window;
2675:src/keys.c    **** 	}
2676:src/keys.c    **** 	else if (n <= 9) {
2677:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2678:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2679:src/keys.c    **** 			dv = n;
2680:src/keys.c    **** 		State2.digval = dv;
2681:src/keys.c    **** 		goto reset_window;
2682:src/keys.c    **** 	}
2683:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2684:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2685:src/keys.c    **** 		set_smode(SDISP_SHOW);
2686:src/keys.c    **** 	}
2687:src/keys.c    **** 	else if (n != NO_REG) {
2688:src/keys.c    **** 		State2.digval = n;
2689:src/keys.c    **** 		goto reset_window;
2690:src/keys.c    **** 	}
2691:src/keys.c    **** 
2692:src/keys.c    **** 	switch (c) {
2693:src/keys.c    **** 	case K_DOWN:
2694:src/keys.c    **** 		if (State2.digval > 0) {
2695:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2696:src/keys.c    **** 				State2.digval = global_regs();
2697:src/keys.c    **** 			--State2.digval;
2698:src/keys.c    **** 		}
2699:src/keys.c    **** 		else
2700:src/keys.c    **** 			State2.digval = max - 1;
2701:src/keys.c    **** 		goto reset_window;
2702:src/keys.c    **** 
2703:src/keys.c    **** 	case K_UP:
2704:src/keys.c    **** 		if (State2.digval < max - 1) {
2705:src/keys.c    **** 			State2.digval++;
2706:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2707:src/keys.c    **** 				State2.digval = regX_idx;
2708:src/keys.c    **** 		}
2709:src/keys.c    **** 		else	
2710:src/keys.c    **** 			State2.digval = 0;
2711:src/keys.c    **** 		goto reset_window;
2712:src/keys.c    **** 
2713:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2714:src/keys.c    **** 	case K04:
2715:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2716:src/keys.c    **** 		goto reset_window;
2717:src/keys.c    **** #endif
2718:src/keys.c    **** 
2719:src/keys.c    **** 	case K24:			
2720:src/keys.c    **** 	//case K60:
2721:src/keys.c    **** 		if (State2.disp_temp)
2722:src/keys.c    **** 			return STATE_UNFINISHED;
2723:src/keys.c    **** 		break;		// Exit doing nothing
2724:src/keys.c    **** 
2725:src/keys.c    **** 	case K20:		// ENTER
2726:src/keys.c    **** 		if (shift == SHIFT_F) {
2727:src/keys.c    **** 			State2.disp_as_alpha = 1;
2728:src/keys.c    **** 			goto reset_window;
2729:src/keys.c    **** 		}
ARM GAS  /tmp/ccQmaUTi.s 			page 159


2730:src/keys.c    **** 	case K11:		// RCL
2731:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2732:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2733:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2734:src/keys.c    **** #else
2735:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2736:src/keys.c    **** #endif
2737:src/keys.c    **** 			State2.registerlist = 0;
2738:src/keys.c    **** 			State2.digval = 0;
2739:src/keys.c    **** 			State2.digval2 = 0;
2740:src/keys.c    **** 			return n;
2741:src/keys.c    **** 		}
2742:src/keys.c    **** 	default:
2743:src/keys.c    **** 		return STATE_UNFINISHED;
2744:src/keys.c    **** 	}
2745:src/keys.c    **** 	State2.registerlist = 0;
2746:src/keys.c    **** 	State2.digval = 0;
2747:src/keys.c    **** 	State2.digval2 = 0;
2748:src/keys.c    **** reset_window:
2749:src/keys.c    **** 	State2.window = 0;
2750:src/keys.c    **** 	return STATE_UNFINISHED;
2751:src/keys.c    **** }
2752:src/keys.c    **** 
2753:src/keys.c    **** 
2754:src/keys.c    **** static int process(const int c) {
2755:src/keys.c    ****   const enum shifts shift = cur_shift();
2756:src/keys.c    ****   enum catalogues cat;
2757:src/keys.c    **** 
2758:src/keys.c    ****   if (Running || Pause) {
2759:src/keys.c    ****     /*
2760:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2761:src/keys.c    ****      */
2762:src/keys.c    ****     if (c == K60 || c == K63) {
2763:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2764:src/keys.c    **** 	set_pc(0);
2765:src/keys.c    ****       Pause = 0;
2766:src/keys.c    ****       xeq_xrom();
2767:src/keys.c    ****       set_running_off();
2768:src/keys.c    ****       DispMsg = "Stopped";
2769:src/keys.c    ****       State2.disp_freeze = 0;
2770:src/keys.c    ****       return STATE_UNFINISHED;
2771:src/keys.c    ****     }
2772:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2773:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2774:src/keys.c    ****       Pause = 0;			// leave PSE statement
2775:src/keys.c    ****       GoFast = 1;
2776:src/keys.c    ****     }
2777:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2778:src/keys.c    ****     return STATE_RUNNING;
2779:src/keys.c    ****   }
2780:src/keys.c    **** 
2781:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2782:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2783:src/keys.c    ****    * if required.
2784:src/keys.c    ****    */
2785:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue) {
2786:src/keys.c    ****     soft_init_state();
ARM GAS  /tmp/ccQmaUTi.s 			page 160


2787:src/keys.c    ****     return STATE_UNFINISHED;
2788:src/keys.c    ****   }
2789:src/keys.c    **** 
2790:src/keys.c    **** #ifndef CONSOLE
2791:src/keys.c    **** 	if (c == K63 && JustStopped) {
2792:src/keys.c    **** 		// Avoid an accidental restart with R/S
2793:src/keys.c    **** 		JustStopped = 0;
2794:src/keys.c    **** 		return STATE_IGNORE;
2795:src/keys.c    **** 	}
2796:src/keys.c    **** #endif
2797:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2798:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2799:src/keys.c    **** 	 */
2800:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2801:src/keys.c    **** 		CmdLineLength = 0;
2802:src/keys.c    **** 	/*
2803:src/keys.c    **** 	 *  Process the various cases
2804:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2805:src/keys.c    **** 	 */
2806:src/keys.c    **** 	if (State2.confirm)
2807:src/keys.c    **** 		return process_confirm((const keycode)c);
2808:src/keys.c    **** 
2809:src/keys.c    **** 	if (State2.rarg)
2810:src/keys.c    **** 		return process_arg((const keycode)c);
2811:src/keys.c    **** 
2812:src/keys.c    **** 	if (State2.gtodot)
2813:src/keys.c    **** 		return process_gtodot((const keycode)c);
2814:src/keys.c    **** 
2815:src/keys.c    **** 	if (State2.hyp)
2816:src/keys.c    **** 		return process_hyp((const keycode)c);
2817:src/keys.c    **** 
2818:src/keys.c    **** 	if (State2.test != TST_NONE)
2819:src/keys.c    **** 		return process_test((const keycode)c);
2820:src/keys.c    **** 
2821:src/keys.c    **** 	if (State2.status)
2822:src/keys.c    **** 		return process_status((const keycode)c);
2823:src/keys.c    **** 
2824:src/keys.c    **** 	/*
2825:src/keys.c    **** 	 *  Process shift keys directly
2826:src/keys.c    **** 	 */
2827:src/keys.c    **** 	if (c == K_F) {
2828:src/keys.c    **** 		toggle_shift(SHIFT_F);
2829:src/keys.c    **** 		return STATE_UNFINISHED;
2830:src/keys.c    **** 	}
2831:src/keys.c    **** 	if (c == K_G) {
2832:src/keys.c    **** 		toggle_shift(SHIFT_G);
2833:src/keys.c    **** 		return STATE_UNFINISHED;
2834:src/keys.c    **** 	}
2835:src/keys.c    **** 	if (c == K_H) {
2836:src/keys.c    **** 		toggle_shift(SHIFT_H);
2837:src/keys.c    **** 		State2.arrow = 0;
2838:src/keys.c    **** 		return STATE_UNFINISHED;
2839:src/keys.c    **** 	}
2840:src/keys.c    **** 	/*
2841:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2842:src/keys.c    **** 	 */
2843:src/keys.c    **** 	// print_debug (2, c);
ARM GAS  /tmp/ccQmaUTi.s 			page 161


2844:src/keys.c    **** 	if (State2.arrow)
2845:src/keys.c    **** 		return process_arrow((const keycode)c);
2846:src/keys.c    **** 
2847:src/keys.c    **** 	/*
2848:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2849:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2850:src/keys.c    **** 	 * works and were not
2851:src/keys.c    **** 	 */
2852:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2853:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2854:src/keys.c    **** 		if (is_bad_cmdline())
2855:src/keys.c    **** 			return STATE_UNFINISHED;
2856:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2857:src/keys.c    **** 		init_cat( cat );
2858:src/keys.c    **** 		return STATE_UNFINISHED;
2859:src/keys.c    **** 	}
2860:src/keys.c    **** 
2861:src/keys.c    **** 	/*
2862:src/keys.c    **** 	 *  More handlers...
2863:src/keys.c    **** 	 */
2864:src/keys.c    **** 	if (State2.multi)
2865:src/keys.c    **** 		return process_multi((const keycode)c);
2866:src/keys.c    **** 
2867:src/keys.c    **** 	if (State2.labellist)
2868:src/keys.c    **** 		return process_labellist((const keycode)c);
2869:src/keys.c    **** 
2870:src/keys.c    **** 	if (State2.registerlist)
2871:src/keys.c    **** 		return process_registerlist((const keycode)c);
2872:src/keys.c    **** 
2873:src/keys.c    **** 	if (State2.catalogue)
2874:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2875:src/keys.c    **** 
2876:src/keys.c    **** 	if (State2.alphas) {
2877:src/keys.c    **** #ifndef INFRARED
2878:src/keys.c    **** 		return process_alpha((const keycode)c);
2879:src/keys.c    **** #else
2880:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2881:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2882:src/keys.c    **** 			print_tab(0);
2883:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2884:src/keys.c    **** 		}
2885:src/keys.c    **** 		return i;
2886:src/keys.c    **** #endif
2887:src/keys.c    **** 	}
2888:src/keys.c    **** 
2889:src/keys.c    **** 	if (State2.cmplx) {
2890:src/keys.c    **** 		return process_cmplx((const keycode)c);
2891:src/keys.c    **** 	} else {
2892:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2893:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2894:src/keys.c    **** 		if (shift == SHIFT_H)
2895:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2896:src/keys.c    **** 		// print_debug (3, c);
2897:src/keys.c    **** 		return process_normal((const keycode)c);
2898:src/keys.c    **** 	}
2899:src/keys.c    **** }
2900:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 162


2901:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4872              		.loc 1 2901 40 is_stmt 1 view -0
 4873              		.cfi_startproc
 4874              		@ args = 0, pretend = 0, frame = 0
 4875              		@ frame_needed = 0, uses_anonymous_args = 0
 4876              		@ link register save eliminated.
2902:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4877              		.loc 1 2902 4 view .LVU1540
 4878              		.loc 1 2902 53 is_stmt 0 view .LVU1541
 4879 0000 074B     		ldr	r3, .L532
 4880              		.loc 1 2902 44 view .LVU1542
 4881 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4882 0004 1AB9     		cbnz	r2, .L530
2903:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2904:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE) );
 4883              		.loc 1 2904 5 discriminator 2 view .LVU1543
 4884 0006 5969     		ldr	r1, [r3, #20]
 4885 0008 064A     		ldr	r2, .L532+4
 4886 000a 0A40     		ands	r2, r2, r1
 4887 000c 0AB1     		cbz	r2, .L531
 4888              	.L530:
 4889 000e 0120     		movs	r0, #1
2905:src/keys.c    ****  }
 4890              		.loc 1 2905 2 view .LVU1544
 4891 0010 7047     		bx	lr
 4892              	.L531:
2904:src/keys.c    ****  }
 4893              		.loc 1 2904 42 discriminator 3 view .LVU1545
 4894 0012 D889     		ldrh	r0, [r3, #14]
 4895 0014 B0F5E060 		subs	r0, r0, #1792
 4896 0018 18BF     		it	ne
 4897 001a 0120     		movne	r0, #1
 4898 001c 7047     		bx	lr
 4899              	.L533:
 4900 001e 00BF     		.align	2
 4901              	.L532:
 4902 0020 00000000 		.word	StateWhileOn
 4903 0024 0709280C 		.word	203950343
 4904              		.cfi_endproc
 4905              	.LFE56:
 4907              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4908              		.align	2
 4909              	.LC0:
 4910 0000 52554E00 		.ascii	"RUN\000"
 4911              		.align	2
 4912              	.LC1:
 4913 0004 4E554C4C 		.ascii	"NULL\000"
 4913      00
 4914 0009 000000   		.align	2
 4915              	.LC2:
 4916 000c 53746F70 		.ascii	"Stopped\000"
 4916      70656400 
 4917              		.section	.text.process_keycode,"ax",%progbits
 4918              		.align	1
 4919              		.p2align 2,,3
 4920              		.global	process_keycode
 4921              		.syntax unified
ARM GAS  /tmp/ccQmaUTi.s 			page 163


 4922              		.thumb
 4923              		.thumb_func
 4924              		.fpu fpv4-sp-d16
 4926              	process_keycode:
 4927              	.LVL401:
 4928              	.LFB58:
2906:src/keys.c    **** 
2907:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2908:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
2909:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
2910:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
2911:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
2912:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
2913:src/keys.c    ****        // Was error just wait for confirmation
2914:src/keys.c    ****        wait_for_key_press();
2915:src/keys.c    ****      }
2916:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
2917:src/keys.c    ****      return;
2918:src/keys.c    ****    }
2919:src/keys.c    ****    process_keycode ( remapped.key_34s );
2920:src/keys.c    ****  }
2921:src/keys.c    ****  
2922:src/keys.c    **** /*
2923:src/keys.c    ****  *  Fed with key codes by the event loop
2924:src/keys.c    ****  */
2925:src/keys.c    **** void process_keycode(int c)
2926:src/keys.c    **** {
 4929              		.loc 1 2926 1 is_stmt 1 view -0
 4930              		.cfi_startproc
 4931              		@ args = 0, pretend = 0, frame = 8
 4932              		@ frame_needed = 0, uses_anonymous_args = 0
2927:src/keys.c    ****   static int was_paused;
 4933              		.loc 1 2927 3 view .LVU1547
2928:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2929:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4934              		.loc 1 2929 3 view .LVU1548
2930:src/keys.c    ****   if (was_paused && Pause == 0) {
 4935              		.loc 1 2930 3 view .LVU1549
2926:src/keys.c    ****   static int was_paused;
 4936              		.loc 1 2926 1 is_stmt 0 view .LVU1550
 4937 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4938              		.cfi_def_cfa_offset 36
 4939              		.cfi_offset 4, -36
 4940              		.cfi_offset 5, -32
 4941              		.cfi_offset 6, -28
 4942              		.cfi_offset 7, -24
 4943              		.cfi_offset 8, -20
 4944              		.cfi_offset 9, -16
 4945              		.cfi_offset 10, -12
 4946              		.cfi_offset 11, -8
 4947              		.cfi_offset 14, -4
 4948              		.loc 1 2930 7 view .LVU1551
 4949 0004 A84E     		ldr	r6, .L1147
 4950              		.loc 1 2930 27 view .LVU1552
 4951 0006 A94D     		ldr	r5, .L1147+4
 4952              		.loc 1 2930 6 view .LVU1553
 4953 0008 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccQmaUTi.s 			page 164


2926:src/keys.c    ****   static int was_paused;
 4954              		.loc 1 2926 1 view .LVU1554
 4955 000a 83B0     		sub	sp, sp, #12
 4956              		.cfi_def_cfa_offset 48
2926:src/keys.c    ****   static int was_paused;
 4957              		.loc 1 2926 1 view .LVU1555
 4958 000c 0446     		mov	r4, r0
 4959              		.loc 1 2930 6 view .LVU1556
 4960 000e 1BB1     		cbz	r3, .L535
 4961              		.loc 1 2930 27 discriminator 1 view .LVU1557
 4962 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4963              		.loc 1 2930 18 discriminator 1 view .LVU1558
 4964 0012 002B     		cmp	r3, #0
 4965 0014 00F0CE80 		beq	.L1069
 4966              	.LVL402:
 4967              	.L535:
2931:src/keys.c    ****     /*
2932:src/keys.c    ****      *  Continue XROM execution after a pause
2933:src/keys.c    ****      */
2934:src/keys.c    ****     xeq_xrom();
2935:src/keys.c    ****   }
2936:src/keys.c    ****   was_paused = Pause;
 4968              		.loc 1 2936 3 is_stmt 1 view .LVU1559
 4969              		.loc 1 2936 14 is_stmt 0 view .LVU1560
 4970 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4971 001a 3360     		str	r3, [r6]
2937:src/keys.c    ****   if (c == K_NOP) {
 4972              		.loc 1 2937 3 is_stmt 1 view .LVU1561
 4973              		.loc 1 2937 6 is_stmt 0 view .LVU1562
 4974 001c 2E2C     		cmp	r4, #46
 4975 001e 00F0C380 		beq	.L1070
2938:src/keys.c    ****     OpCode = 0;
2939:src/keys.c    ****   }
2940:src/keys.c    ****   else if (c == K_HEARTBEAT) {
 4976              		.loc 1 2940 8 is_stmt 1 view .LVU1563
 4977              		.loc 1 2940 11 is_stmt 0 view .LVU1564
 4978 0022 622C     		cmp	r4, #98
 4979 0024 6DD0     		beq	.L1071
2941:src/keys.c    ****     /*
2942:src/keys.c    ****      *  Heartbeat processing goes here.
2943:src/keys.c    ****      *  This is totally thread safe!
2944:src/keys.c    ****      */
2945:src/keys.c    ****     if (Keyticks >= 2) {
2946:src/keys.c    ****       /*
2947:src/keys.c    ****        *  Some time has passed after last key press
2948:src/keys.c    ****        */
2949:src/keys.c    ****       if (OpCode != 0) {
2950:src/keys.c    **** 	/*
2951:src/keys.c    **** 	 *  Handle command display and NULL here
2952:src/keys.c    **** 	 */
2953:src/keys.c    **** 	if (OpCodeDisplayPending) {
2954:src/keys.c    **** 	  /*
2955:src/keys.c    **** 	   *  Show command to the user
2956:src/keys.c    **** 	   */
2957:src/keys.c    **** 	  OpCodeDisplayPending = 0;
2958:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
2959:src/keys.c    **** 	    DispMsg = "RUN";
ARM GAS  /tmp/ccQmaUTi.s 			page 165


2960:src/keys.c    **** 	  }
2961:src/keys.c    **** 	  else {
2962:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
2963:src/keys.c    **** 	    DispMsg = TraceBuffer;
2964:src/keys.c    **** 	  }
2965:src/keys.c    **** 	  display();
2966:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
2967:src/keys.c    **** 	}
2968:src/keys.c    ****     else if (Keyticks > 12) {
2969:src/keys.c    **** 	  /*
2970:src/keys.c    **** 	   *  Key is too long held down
2971:src/keys.c    **** 	   */
2972:src/keys.c    **** 	  OpCode = 0;
2973:src/keys.c    **** 	  message("NULL", CNULL);
2974:src/keys.c    **** 	  // Force display update on key-up
2975:src/keys.c    **** 	  State2.disp_temp = 0;
2976:src/keys.c    **** 	}
2977:src/keys.c    ****       }
2978:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
2979:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
2980:src/keys.c    **** 	State2.shifts = SHIFT_N;
2981:src/keys.c    ****       }
2982:src/keys.c    ****     }
2983:src/keys.c    **** 
2984:src/keys.c    ****     /*
2985:src/keys.c    ****      *  Serve the watchdog
2986:src/keys.c    ****      */
2987:src/keys.c    ****     watchdog();
2988:src/keys.c    **** 
2989:src/keys.c    **** #ifndef CONSOLE
2990:src/keys.c    ****     /*
2991:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
2992:src/keys.c    ****      */
2993:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
2994:src/keys.c    ****       JustStopped = 0;
2995:src/keys.c    ****     }
2996:src/keys.c    **** #endif
2997:src/keys.c    **** 
2998:src/keys.c    ****     /*
2999:src/keys.c    ****      *  Do nothing if not running a program
3000:src/keys.c    ****      */
3001:src/keys.c    ****     if (!Running && ! Pause)
3002:src/keys.c    ****       return;
3003:src/keys.c    ****   }
3004:src/keys.c    ****   else {
3005:src/keys.c    ****     /*
3006:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3007:src/keys.c    ****      */
3008:src/keys.c    ****     xeq_init_contexts();
 4980              		.loc 1 3008 5 is_stmt 1 view .LVU1565
3009:src/keys.c    ****     State2.wascomplex = 0;
 4981              		.loc 1 3009 23 is_stmt 0 view .LVU1566
 4982 0026 DFF8A082 		ldr	r8, .L1147+32
3008:src/keys.c    ****     State2.wascomplex = 0;
 4983              		.loc 1 3008 5 view .LVU1567
 4984 002a FFF7FEFF 		bl	xeq_init_contexts
 4985              	.LVL403:
ARM GAS  /tmp/ccQmaUTi.s 			page 166


 4986              		.loc 1 3009 5 is_stmt 1 view .LVU1568
 4987              		.loc 1 3009 23 is_stmt 0 view .LVU1569
 4988 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3010:src/keys.c    **** 
3011:src/keys.c    ****     if (is_dot(RPN)) {
 4989              		.loc 1 3011 9 view .LVU1570
 4990 0032 8D20     		movs	r0, #141
3009:src/keys.c    **** 
 4991              		.loc 1 3009 23 view .LVU1571
 4992 0034 6FF38713 		bfc	r3, #6, #2
 4993 0038 88F81430 		strb	r3, [r8, #20]
 4994              		.loc 1 3011 5 is_stmt 1 view .LVU1572
 4995              		.loc 1 3011 9 is_stmt 0 view .LVU1573
 4996 003c FFF7FEFF 		bl	is_dot
 4997              	.LVL404:
 4998              		.loc 1 3011 8 view .LVU1574
 4999 0040 0028     		cmp	r0, #0
 5000 0042 40F0DE81 		bne	.L1072
 5001              	.L553:
3012:src/keys.c    ****       /*
3013:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3014:src/keys.c    ****        */
3015:src/keys.c    ****       clr_dot(RPN);
3016:src/keys.c    ****       finish_RPN(); // RPN
3017:src/keys.c    ****     }
3018:src/keys.c    **** 
3019:src/keys.c    **** #ifndef CONSOLE
3020:src/keys.c    ****     /*
3021:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3022:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3023:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3024:src/keys.c    ****      *  an accidental restart of the program.
3025:src/keys.c    ****      */
3026:src/keys.c    ****     if (c != K63)
 5002              		.loc 1 3026 5 is_stmt 1 view .LVU1575
 5003              		.loc 1 3026 8 is_stmt 0 view .LVU1576
 5004 0046 272C     		cmp	r4, #39
 5005 0048 00F0D881 		beq	.L555
3027:src/keys.c    ****       JustStopped = 0;
 5006              		.loc 1 3027 7 is_stmt 1 view .LVU1577
 5007              		.loc 1 3027 19 is_stmt 0 view .LVU1578
 5008 004c 984B     		ldr	r3, .L1147+8
 5009 004e 0022     		movs	r2, #0
3028:src/keys.c    **** #endif
3029:src/keys.c    ****   }
3030:src/keys.c    **** 
3031:src/keys.c    ****   /*
3032:src/keys.c    ****    *  Handle key release
3033:src/keys.c    ****    */
3034:src/keys.c    ****   if (c == K_RELEASE) {
 5010              		.loc 1 3034 6 view .LVU1579
 5011 0050 632C     		cmp	r4, #99
3027:src/keys.c    ****       JustStopped = 0;
 5012              		.loc 1 3027 19 view .LVU1580
 5013 0052 1A60     		str	r2, [r3]
 5014              		.loc 1 3034 3 is_stmt 1 view .LVU1581
 5015              		.loc 1 3034 6 is_stmt 0 view .LVU1582
ARM GAS  /tmp/ccQmaUTi.s 			page 167


 5016 0054 40F0D281 		bne	.L555
3035:src/keys.c    ****     if (OpCode != 0) {
 5017              		.loc 1 3035 5 is_stmt 1 view .LVU1583
 5018              		.loc 1 3035 16 is_stmt 0 view .LVU1584
 5019 0058 964B     		ldr	r3, .L1147+12
 5020 005a 1C68     		ldr	r4, [r3]
 5021              	.LVL405:
 5022              		.loc 1 3035 8 view .LVU1585
 5023 005c 002C     		cmp	r4, #0
 5024 005e 00F0DA81 		beq	.L556
3036:src/keys.c    ****       /*
3037:src/keys.c    ****        * Execute the key on release
3038:src/keys.c    ****        */
3039:src/keys.c    ****       GoFast = 1;
 5025              		.loc 1 3039 7 is_stmt 1 view .LVU1586
 5026              		.loc 1 3039 14 is_stmt 0 view .LVU1587
 5027 0062 9549     		ldr	r1, .L1147+16
3040:src/keys.c    ****       c = OpCode;
3041:src/keys.c    ****       OpCode = 0;
 5028              		.loc 1 3041 14 view .LVU1588
 5029 0064 1A60     		str	r2, [r3]
3039:src/keys.c    ****       c = OpCode;
 5030              		.loc 1 3039 14 view .LVU1589
 5031 0066 0120     		movs	r0, #1
3042:src/keys.c    **** 
3043:src/keys.c    ****       if (c == STATE_SST)
 5032              		.loc 1 3043 10 view .LVU1590
 5033 0068 2E2C     		cmp	r4, #46
3040:src/keys.c    ****       OpCode = 0;
 5034              		.loc 1 3040 9 view .LVU1591
 5035 006a A346     		mov	fp, r4
3039:src/keys.c    ****       c = OpCode;
 5036              		.loc 1 3039 14 view .LVU1592
 5037 006c 0860     		str	r0, [r1]
3040:src/keys.c    ****       OpCode = 0;
 5038              		.loc 1 3040 7 is_stmt 1 view .LVU1593
 5039              	.LVL406:
3041:src/keys.c    **** 
 5040              		.loc 1 3041 7 view .LVU1594
 5041              		.loc 1 3043 7 view .LVU1595
 5042              		.loc 1 3043 10 is_stmt 0 view .LVU1596
 5043 006e 00F0E681 		beq	.L1073
3044:src/keys.c    **** 	xeq_sst_bst(1);
3045:src/keys.c    ****       else {
3046:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5044              		.loc 1 3046 2 is_stmt 1 view .LVU1597
 5045              		.loc 1 3046 5 is_stmt 0 view .LVU1598
 5046 0072 B4F5817F 		cmp	r4, #258
 5047 0076 04D0     		beq	.L562
 5048              		.loc 1 3046 29 discriminator 1 view .LVU1599
 5049 0078 40F23F13 		movw	r3, #319
 5050 007c 9C42     		cmp	r4, r3
 5051 007e 40F09C80 		bne	.L1074
 5052              	.L562:
3047:src/keys.c    **** 	  xeq(c);
 5053              		.loc 1 3047 4 is_stmt 1 view .LVU1600
3048:src/keys.c    **** 	  if (Running || Pause)
ARM GAS  /tmp/ccQmaUTi.s 			page 168


 5054              		.loc 1 3048 8 is_stmt 0 view .LVU1601
 5055 0082 8E4E     		ldr	r6, .L1147+20
3047:src/keys.c    **** 	  xeq(c);
 5056              		.loc 1 3047 4 view .LVU1602
 5057 0084 2046     		mov	r0, r4
 5058 0086 FFF7FEFF 		bl	xeq
 5059              	.LVL407:
 5060              		.loc 1 3048 4 is_stmt 1 view .LVU1603
 5061              		.loc 1 3048 7 is_stmt 0 view .LVU1604
 5062 008a 3368     		ldr	r3, [r6]
 5063 008c 0BB9     		cbnz	r3, .L560
 5064              		.loc 1 3048 16 discriminator 1 view .LVU1605
 5065 008e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5066 0090 0BB1     		cbz	r3, .L558
 5067              	.L560:
3049:src/keys.c    **** 	    xeqprog();
 5068              		.loc 1 3049 6 is_stmt 1 view .LVU1606
 5069 0092 FFF7FEFF 		bl	xeqprog
 5070              	.LVL408:
 5071              	.L558:
3050:src/keys.c    **** 	}
3051:src/keys.c    ****       }
3052:src/keys.c    ****       dot(RPN, ShowRPN);
 5072              		.loc 1 3052 7 view .LVU1607
 5073 0096 8A4C     		ldr	r4, .L1147+24
 5074              	.LVL409:
 5075              		.loc 1 3052 7 is_stmt 0 view .LVU1608
 5076 0098 8D20     		movs	r0, #141
 5077 009a 2168     		ldr	r1, [r4]
 5078 009c FFF7FEFF 		bl	dot
 5079              	.LVL410:
3053:src/keys.c    ****     }
3054:src/keys.c    ****     else {
3055:src/keys.c    ****       // Ignore key-up if no operation was pending
3056:src/keys.c    ****       dot(RPN, ShowRPN);
3057:src/keys.c    **** #ifndef CONSOLE
3058:src/keys.c    ****       if (! State2.disp_temp ) {
3059:src/keys.c    **** 	if (!WasDataEntry) {
3060:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3061:src/keys.c    **** 	  display();
3062:src/keys.c    **** 	}
3063:src/keys.c    **** 	else {
3064:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3065:src/keys.c    **** 	}
3066:src/keys.c    ****       }
3067:src/keys.c    **** #endif
3068:src/keys.c    ****       return;
3069:src/keys.c    ****     }
3070:src/keys.c    **** 
3071:src/keys.c    ****     /*
3072:src/keys.c    ****      *  Turn on the RPN symbol if desired
3073:src/keys.c    ****      */
3074:src/keys.c    ****     if (ShowRPN) {
 5080              		.loc 1 3074 5 is_stmt 1 view .LVU1609
 5081              		.loc 1 3074 9 is_stmt 0 view .LVU1610
 5082 00a0 2768     		ldr	r7, [r4]
 5083              		.loc 1 3074 8 view .LVU1611
ARM GAS  /tmp/ccQmaUTi.s 			page 169


 5084 00a2 002F     		cmp	r7, #0
 5085 00a4 40F0B381 		bne	.L1075
 5086              	.LVL411:
 5087              	.L565:
3075:src/keys.c    ****       finish_RPN(); // RPN
3076:src/keys.c    ****     }
3077:src/keys.c    ****   }
3078:src/keys.c    ****   else {
3079:src/keys.c    ****     /*
3080:src/keys.c    ****      *  Decode the key 
3081:src/keys.c    ****      */
3082:src/keys.c    ****     // print_debug (100, c);
3083:src/keys.c    ****     WasDataEntry = 0;
3084:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3085:src/keys.c    ****     c = process(c);		// returns an op-code or state
3086:src/keys.c    ****     switch (c) {
3087:src/keys.c    ****     case STATE_SST:
3088:src/keys.c    ****       OpCode = c;
3089:src/keys.c    ****       OpCodeDisplayPending = 0;
3090:src/keys.c    ****       xeq_sst_bst(0);
3091:src/keys.c    ****       break;
3092:src/keys.c    **** 
3093:src/keys.c    ****     case STATE_BST:
3094:src/keys.c    ****       xeq_sst_bst(-1);
3095:src/keys.c    ****       break;
3096:src/keys.c    **** 
3097:src/keys.c    ****     case STATE_BACKSPACE:
3098:src/keys.c    ****       if (! State2.runmode)
3099:src/keys.c    **** 	delprog();
3100:src/keys.c    ****       else if (State2.alphas) {
3101:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3102:src/keys.c    **** 	if (p > Alpha)
3103:src/keys.c    **** 	  *--p = '\0';
3104:src/keys.c    ****       }
3105:src/keys.c    ****       break;
3106:src/keys.c    **** 
3107:src/keys.c    ****     case STATE_RUNNING:
3108:src/keys.c    ****       xeqprog();  // continue execution
3109:src/keys.c    ****       break;
3110:src/keys.c    **** 
3111:src/keys.c    ****     case STATE_WINDOWRIGHT:
3112:src/keys.c    ****     case STATE_WINDOWLEFT:
3113:src/keys.c    ****       if (!is_bad_cmdline())
3114:src/keys.c    **** 	set_window(c);
3115:src/keys.c    ****       break;
3116:src/keys.c    **** 
3117:src/keys.c    ****     case STATE_UNFINISHED:
3118:src/keys.c    ****     case STATE_IGNORE:
3119:src/keys.c    ****       break;
3120:src/keys.c    **** 
3121:src/keys.c    ****     default:
3122:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3123:src/keys.c    **** 	NonProgrammable = 0;
3124:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3125:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3126:src/keys.c    **** 	    // Data entry key
3127:src/keys.c    **** #ifndef CONSOLE
ARM GAS  /tmp/ccQmaUTi.s 			page 170


3128:src/keys.c    **** 	    WasDataEntry = 1;
3129:src/keys.c    **** #endif
3130:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3131:src/keys.c    **** 	    xeq(c);
3132:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3133:src/keys.c    **** 	  }
3134:src/keys.c    **** 	}
3135:src/keys.c    **** 	else {
3136:src/keys.c    **** 	  // Save the op-code for execution on key-up
3137:src/keys.c    **** 	  OpCode = c;
3138:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3139:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3140:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3141:src/keys.c    **** 	}
3142:src/keys.c    ****       }
3143:src/keys.c    ****       else {
3144:src/keys.c    **** 	stoprog(c);
3145:src/keys.c    ****       }
3146:src/keys.c    ****     }
3147:src/keys.c    ****   }
3148:src/keys.c    ****   if (! Running && ! Pause
 5088              		.loc 1 3148 3 is_stmt 1 view .LVU1612
 5089              		.loc 1 3148 6 is_stmt 0 view .LVU1613
 5090 00a8 3368     		ldr	r3, [r6]
 5091 00aa 002B     		cmp	r3, #0
 5092 00ac 40F08781 		bne	.L1063
 5093              	.LVL412:
 5094              	.L579:
 5095              		.loc 1 3148 20 discriminator 1 view .LVU1614
 5096 00b0 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5097              		.loc 1 3148 17 discriminator 1 view .LVU1615
 5098 00b2 002B     		cmp	r3, #0
 5099 00b4 40F08381 		bne	.L1063
3149:src/keys.c    **** #ifndef CONSOLE
3150:src/keys.c    ****       && ! JustStopped
 5100              		.loc 1 3150 10 view .LVU1616
 5101 00b8 7D4B     		ldr	r3, .L1147+8
3151:src/keys.c    **** #endif
3152:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 5102              		.loc 1 3152 10 view .LVU1617
 5103 00ba 824C     		ldr	r4, .L1147+28
 5104 00bc 1B68     		ldr	r3, [r3]
 5105 00be 2268     		ldr	r2, [r4]
 5106              		.loc 1 3152 7 view .LVU1618
 5107 00c0 1343     		orrs	r3, r3, r2
 5108 00c2 19D1     		bne	.L838
 5109              		.loc 1 3152 26 discriminator 1 view .LVU1619
 5110 00c4 BBF1320F 		cmp	fp, #50
 5111 00c8 16D0     		beq	.L838
 5112              	.LBB639:
3153:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5113              		.loc 1 3153 5 is_stmt 1 view .LVU1620
 5114              		.loc 1 3153 15 is_stmt 0 view .LVU1621
 5115 00ca DFF81892 		ldr	r9, .L1147+60
 5116 00ce D9F80050 		ldr	r5, [r9]
 5117              	.LVL413:
3154:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 171


3155:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 5118              		.loc 1 3155 5 is_stmt 1 view .LVU1622
 5119              		.loc 1 3155 21 is_stmt 0 view .LVU1623
 5120 00d2 BBF1000F 		cmp	fp, #0
 5121 00d6 09D0     		beq	.L840
 5122              		.loc 1 3155 49 discriminator 1 view .LVU1624
 5123 00d8 002F     		cmp	r7, #0
 5124 00da 40F05185 		bne	.L892
 5125              		.loc 1 3155 66 discriminator 3 view .LVU1625
 5126 00de 7A4B     		ldr	r3, .L1147+32
 5127 00e0 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 5128              		.loc 1 3155 21 discriminator 3 view .LVU1626
 5129 00e2 9807     		lsls	r0, r3, #30
 5130 00e4 00F1F385 		bmi	.L893
 5131 00e8 05F0010B 		and	fp, r5, #1
 5132              	.LVL414:
 5133              	.L840:
 5134              		.loc 1 3155 18 discriminator 8 view .LVU1627
 5135 00ec C9F800B0 		str	fp, [r9]
3156:src/keys.c    ****     display();
 5136              		.loc 1 3156 5 is_stmt 1 discriminator 8 view .LVU1628
 5137 00f0 FFF7FEFF 		bl	display
 5138              	.LVL415:
3157:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5139              		.loc 1 3157 5 discriminator 8 view .LVU1629
 5140              		.loc 1 3157 18 is_stmt 0 discriminator 8 view .LVU1630
 5141 00f4 C9F80050 		str	r5, [r9]
 5142              	.LVL416:
 5143              	.L838:
 5144              		.loc 1 3157 18 discriminator 8 view .LVU1631
 5145              	.LBE639:
3158:src/keys.c    ****   }
3159:src/keys.c    **** 
3160:src/keys.c    ****  no_display:
3161:src/keys.c    ****   JustDisplayed = 0;
 5146              		.loc 1 3161 3 is_stmt 1 view .LVU1632
 5147              		.loc 1 3161 17 is_stmt 0 view .LVU1633
 5148 00f8 0023     		movs	r3, #0
 5149 00fa 2360     		str	r3, [r4]
3162:src/keys.c    ****   watchdog();
 5150              		.loc 1 3162 13 is_stmt 1 view .LVU1634
 5151              	.L534:
3163:src/keys.c    **** }
 5152              		.loc 1 3163 1 is_stmt 0 view .LVU1635
 5153 00fc 03B0     		add	sp, sp, #12
 5154              		.cfi_remember_state
 5155              		.cfi_def_cfa_offset 36
 5156              		@ sp needed
 5157 00fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5158              	.LVL417:
 5159              	.L1071:
 5160              		.cfi_restore_state
2945:src/keys.c    ****       /*
 5161              		.loc 1 2945 5 is_stmt 1 view .LVU1636
2945:src/keys.c    ****       /*
 5162              		.loc 1 2945 9 is_stmt 0 view .LVU1637
 5163 0102 FFF7FEFF 		bl	keyticks
ARM GAS  /tmp/ccQmaUTi.s 			page 172


 5164              	.LVL418:
2945:src/keys.c    ****       /*
 5165              		.loc 1 2945 8 view .LVU1638
 5166 0106 0128     		cmp	r0, #1
 5167 0108 1BDD     		ble	.L540
2949:src/keys.c    **** 	/*
 5168              		.loc 1 2949 7 is_stmt 1 view .LVU1639
2949:src/keys.c    **** 	/*
 5169              		.loc 1 2949 18 is_stmt 0 view .LVU1640
 5170 010a 6A4E     		ldr	r6, .L1147+12
 5171 010c 3068     		ldr	r0, [r6]
2949:src/keys.c    **** 	/*
 5172              		.loc 1 2949 10 view .LVU1641
 5173 010e 98B1     		cbz	r0, .L542
2953:src/keys.c    **** 	  /*
 5174              		.loc 1 2953 2 is_stmt 1 view .LVU1642
2953:src/keys.c    **** 	  /*
 5175              		.loc 1 2953 6 is_stmt 0 view .LVU1643
 5176 0110 6E4B     		ldr	r3, .L1147+36
2953:src/keys.c    **** 	  /*
 5177              		.loc 1 2953 5 view .LVU1644
 5178 0112 1F68     		ldr	r7, [r3]
 5179 0114 002F     		cmp	r7, #0
 5180 0116 00F09F81 		beq	.L543
2957:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5181              		.loc 1 2957 4 is_stmt 1 view .LVU1645
2958:src/keys.c    **** 	    DispMsg = "RUN";
 5182              		.loc 1 2958 7 is_stmt 0 view .LVU1646
 5183 011a 40F23B12 		movw	r2, #315
2957:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5184              		.loc 1 2957 25 view .LVU1647
 5185 011e 0026     		movs	r6, #0
2958:src/keys.c    **** 	    DispMsg = "RUN";
 5186              		.loc 1 2958 7 view .LVU1648
 5187 0120 9042     		cmp	r0, r2
2957:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5188              		.loc 1 2957 25 view .LVU1649
 5189 0122 1E60     		str	r6, [r3]
2958:src/keys.c    **** 	    DispMsg = "RUN";
 5190              		.loc 1 2958 4 is_stmt 1 view .LVU1650
2958:src/keys.c    **** 	    DispMsg = "RUN";
 5191              		.loc 1 2958 7 is_stmt 0 view .LVU1651
 5192 0124 40F0F083 		bne	.L544
2959:src/keys.c    **** 	  }
 5193              		.loc 1 2959 6 is_stmt 1 view .LVU1652
2959:src/keys.c    **** 	  }
 5194              		.loc 1 2959 14 is_stmt 0 view .LVU1653
 5195 0128 694B     		ldr	r3, .L1147+40
 5196 012a 6A4A     		ldr	r2, .L1147+44
 5197 012c 1A60     		str	r2, [r3]
 5198              	.L545:
2965:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5199              		.loc 1 2965 4 is_stmt 1 view .LVU1654
 5200 012e FFF7FEFF 		bl	display
 5201              	.LVL419:
2966:src/keys.c    **** 	}
 5202              		.loc 1 2966 4 view .LVU1655
ARM GAS  /tmp/ccQmaUTi.s 			page 173


2966:src/keys.c    **** 	}
 5203              		.loc 1 2966 12 is_stmt 0 view .LVU1656
 5204 0132 634B     		ldr	r3, .L1147+24
 5205 0134 0122     		movs	r2, #1
 5206 0136 1A60     		str	r2, [r3]
 5207              	.L542:
2978:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5208              		.loc 1 2978 7 is_stmt 1 view .LVU1657
2978:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5209              		.loc 1 2978 11 is_stmt 0 view .LVU1658
 5210 0138 FFF7FEFF 		bl	keyticks
 5211              	.LVL420:
2978:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5212              		.loc 1 2978 10 view .LVU1659
 5213 013c 0C28     		cmp	r0, #12
 5214 013e 00F38281 		bgt	.L1076
 5215              	.L540:
2987:src/keys.c    **** 
 5216              		.loc 1 2987 15 is_stmt 1 view .LVU1660
2993:src/keys.c    ****       JustStopped = 0;
 5217              		.loc 1 2993 5 view .LVU1661
2993:src/keys.c    ****       JustStopped = 0;
 5218              		.loc 1 2993 9 is_stmt 0 view .LVU1662
 5219 0142 5B4E     		ldr	r6, .L1147+8
2993:src/keys.c    ****       JustStopped = 0;
 5220              		.loc 1 2993 8 view .LVU1663
 5221 0144 3368     		ldr	r3, [r6]
 5222 0146 002B     		cmp	r3, #0
 5223 0148 4ED1     		bne	.L1077
 5224              	.L549:
3001:src/keys.c    ****       return;
 5225              		.loc 1 3001 5 is_stmt 1 view .LVU1664
3001:src/keys.c    ****       return;
 5226              		.loc 1 3001 9 is_stmt 0 view .LVU1665
 5227 014a 5C4E     		ldr	r6, .L1147+20
 5228 014c 3368     		ldr	r3, [r6]
3001:src/keys.c    ****       return;
 5229              		.loc 1 3001 8 view .LVU1666
 5230 014e 002B     		cmp	r3, #0
 5231 0150 46D0     		beq	.L1078
 5232              	.L537:
3083:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5233              		.loc 1 3083 5 is_stmt 1 view .LVU1667
3084:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5234              		.loc 1 3084 13 is_stmt 0 view .LVU1668
 5235 0152 5B49     		ldr	r1, .L1147+24
3083:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5236              		.loc 1 3083 18 view .LVU1669
 5237 0154 DFF88C91 		ldr	r9, .L1147+60
3084:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5238              		.loc 1 3084 15 view .LVU1670
 5239 0158 B3FA83F3 		clz	r3, r3
 5240 015c 5B09     		lsrs	r3, r3, #5
3083:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5241              		.loc 1 3083 18 view .LVU1671
 5242 015e 0022     		movs	r2, #0
3084:src/keys.c    ****     c = process(c);		// returns an op-code or state
ARM GAS  /tmp/ccQmaUTi.s 			page 174


 5243              		.loc 1 3084 13 view .LVU1672
 5244 0160 0B60     		str	r3, [r1]
3083:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5245              		.loc 1 3083 18 view .LVU1673
 5246 0162 C9F80020 		str	r2, [r9]
3084:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5247              		.loc 1 3084 5 is_stmt 1 view .LVU1674
3085:src/keys.c    ****     switch (c) {
 5248              		.loc 1 3085 5 view .LVU1675
 5249              	.LVL421:
 5250              	.LBB640:
 5251              	.LBI640:
2754:src/keys.c    ****   const enum shifts shift = cur_shift();
 5252              		.loc 1 2754 12 view .LVU1676
 5253              	.LBB641:
2755:src/keys.c    ****   enum catalogues cat;
 5254              		.loc 1 2755 3 view .LVU1677
 5255              	.LBB642:
 5256              	.LBI642:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5257              		.loc 1 84 13 view .LVU1678
 5258              	.LBB643:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5259              		.loc 1 85 2 view .LVU1679
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5260              		.loc 1 85 18 is_stmt 0 view .LVU1680
 5261 0166 FFF7FEFF 		bl	shift_down
 5262              	.LVL422:
  86:src/keys.c    **** }
 5263              		.loc 1 86 2 is_stmt 1 view .LVU1681
  86:src/keys.c    **** }
 5264              		.loc 1 86 52 is_stmt 0 view .LVU1682
 5265 016a 8246     		mov	r10, r0
 5266 016c 10B9     		cbnz	r0, .L568
 5267 016e 564B     		ldr	r3, .L1147+32
 5268 0170 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5269              	.L568:
 5270              	.LVL423:
  86:src/keys.c    **** }
 5271              		.loc 1 86 52 view .LVU1683
 5272              	.LBE643:
 5273              	.LBE642:
2756:src/keys.c    **** 
 5274              		.loc 1 2756 3 is_stmt 1 view .LVU1684
2758:src/keys.c    ****     /*
 5275              		.loc 1 2758 3 view .LVU1685
2758:src/keys.c    ****     /*
 5276              		.loc 1 2758 7 is_stmt 0 view .LVU1686
 5277 0174 3768     		ldr	r7, [r6]
2758:src/keys.c    ****     /*
 5278              		.loc 1 2758 6 view .LVU1687
 5279 0176 0FB9     		cbnz	r7, .L569
2758:src/keys.c    ****     /*
 5280              		.loc 1 2758 15 view .LVU1688
 5281 0178 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5282 017a 2BB3     		cbz	r3, .L570
 5283              	.L569:
ARM GAS  /tmp/ccQmaUTi.s 			page 175


2762:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5284              		.loc 1 2762 5 is_stmt 1 view .LVU1689
2762:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5285              		.loc 1 2762 8 is_stmt 0 view .LVU1690
 5286 017c 242C     		cmp	r4, #36
 5287 017e 00F02281 		beq	.L571
2762:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5288              		.loc 1 2762 18 view .LVU1691
 5289 0182 272C     		cmp	r4, #39
 5290 0184 00F01F81 		beq	.L571
2772:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5291              		.loc 1 2772 5 is_stmt 1 view .LVU1692
2772:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5292              		.loc 1 2772 8 is_stmt 0 view .LVU1693
 5293 0188 622C     		cmp	r4, #98
 5294 018a 07D0     		beq	.L574
2773:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5295              		.loc 1 2773 7 is_stmt 1 view .LVU1694
2773:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5296              		.loc 1 2773 15 is_stmt 0 view .LVU1695
 5297 018c 4E4B     		ldr	r3, .L1147+32
2775:src/keys.c    ****     }
 5298              		.loc 1 2775 14 view .LVU1696
 5299 018e 4A4A     		ldr	r2, .L1147+16
2773:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5300              		.loc 1 2773 17 view .LVU1697
 5301 0190 0134     		adds	r4, r4, #1
 5302              	.LVL424:
2775:src/keys.c    ****     }
 5303              		.loc 1 2775 14 view .LVU1698
 5304 0192 0121     		movs	r1, #1
2773:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5305              		.loc 1 2773 15 view .LVU1699
 5306 0194 DC74     		strb	r4, [r3, #19]
2774:src/keys.c    ****       GoFast = 1;
 5307              		.loc 1 2774 7 is_stmt 1 view .LVU1700
2774:src/keys.c    ****       GoFast = 1;
 5308              		.loc 1 2774 13 is_stmt 0 view .LVU1701
 5309 0196 0023     		movs	r3, #0
2775:src/keys.c    ****     }
 5310              		.loc 1 2775 14 view .LVU1702
 5311 0198 1160     		str	r1, [r2]
2774:src/keys.c    ****       GoFast = 1;
 5312              		.loc 1 2774 13 view .LVU1703
 5313 019a 2B70     		strb	r3, [r5]
2775:src/keys.c    ****     }
 5314              		.loc 1 2775 7 is_stmt 1 view .LVU1704
 5315              	.LVL425:
 5316              	.L574:
2775:src/keys.c    ****     }
 5317              		.loc 1 2775 7 is_stmt 0 view .LVU1705
 5318              	.LBE641:
 5319              	.LBE640:
3108:src/keys.c    ****       break;
 5320              		.loc 1 3108 7 is_stmt 1 view .LVU1706
 5321 019c FFF7FEFF 		bl	xeqprog
 5322              	.LVL426:
ARM GAS  /tmp/ccQmaUTi.s 			page 176


3109:src/keys.c    **** 
 5323              		.loc 1 3109 7 view .LVU1707
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 5324              		.loc 1 2929 7 is_stmt 0 view .LVU1708
 5325 01a0 0027     		movs	r7, #0
3109:src/keys.c    **** 
 5326              		.loc 1 3109 7 view .LVU1709
 5327 01a2 4FF0310B 		mov	fp, #49
 5328 01a6 7FE7     		b	.L565
 5329              	.LVL427:
 5330              	.L1070:
2938:src/keys.c    ****   }
 5331              		.loc 1 2938 5 is_stmt 1 view .LVU1710
2938:src/keys.c    ****   }
 5332              		.loc 1 2938 12 is_stmt 0 view .LVU1711
 5333 01a8 424B     		ldr	r3, .L1147+12
 5334 01aa 444E     		ldr	r6, .L1147+20
 5335 01ac 0022     		movs	r2, #0
 5336 01ae 1A60     		str	r2, [r3]
3034:src/keys.c    ****     if (OpCode != 0) {
 5337              		.loc 1 3034 3 is_stmt 1 view .LVU1712
 5338 01b0 3368     		ldr	r3, [r6]
 5339 01b2 CEE7     		b	.L537
 5340              	.LVL428:
 5341              	.L1069:
2934:src/keys.c    ****   }
 5342              		.loc 1 2934 5 view .LVU1713
 5343 01b4 FFF7FEFF 		bl	xeq_xrom
 5344              	.LVL429:
2934:src/keys.c    ****   }
 5345              		.loc 1 2934 5 is_stmt 0 view .LVU1714
 5346 01b8 2EE7     		b	.L535
 5347              	.L1074:
3046:src/keys.c    **** 	  xeq(c);
 5348              		.loc 1 3046 60 discriminator 2 view .LVU1715
 5349 01ba FFF7FEFF 		bl	is_bad_cmdline
 5350              	.LVL430:
3046:src/keys.c    **** 	  xeq(c);
 5351              		.loc 1 3046 56 discriminator 2 view .LVU1716
 5352 01be 0028     		cmp	r0, #0
 5353 01c0 3FF45FAF 		beq	.L562
 5354 01c4 3D4E     		ldr	r6, .L1147+20
 5355 01c6 66E7     		b	.L558
 5356              	.LVL431:
 5357              	.L570:
 5358              	.LBB1227:
 5359              	.LBB1174:
2785:src/keys.c    ****     soft_init_state();
 5360              		.loc 1 2785 3 is_stmt 1 view .LVU1717
2785:src/keys.c    ****     soft_init_state();
 5361              		.loc 1 2785 6 is_stmt 0 view .LVU1718
 5362 01c8 242C     		cmp	r4, #36
 5363 01ca 00F01884 		beq	.L1079
2791:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5364              		.loc 1 2791 2 is_stmt 1 view .LVU1719
2791:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5365              		.loc 1 2791 5 is_stmt 0 view .LVU1720
ARM GAS  /tmp/ccQmaUTi.s 			page 177


 5366 01ce 272C     		cmp	r4, #39
 5367 01d0 10D1     		bne	.L578
2791:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5368              		.loc 1 2791 15 view .LVU1721
 5369 01d2 374B     		ldr	r3, .L1147+8
 5370 01d4 1A68     		ldr	r2, [r3]
 5371 01d6 6AB1     		cbz	r2, .L578
2793:src/keys.c    **** 		return STATE_IGNORE;
 5372              		.loc 1 2793 3 is_stmt 1 view .LVU1722
2793:src/keys.c    **** 		return STATE_IGNORE;
 5373              		.loc 1 2793 15 is_stmt 0 view .LVU1723
 5374 01d8 1F60     		str	r7, [r3]
2794:src/keys.c    **** 	}
 5375              		.loc 1 2794 3 is_stmt 1 view .LVU1724
 5376              	.LVL432:
2794:src/keys.c    **** 	}
 5377              		.loc 1 2794 3 is_stmt 0 view .LVU1725
 5378              	.LBE1174:
 5379              	.LBE1227:
3148:src/keys.c    **** #ifndef CONSOLE
 5380              		.loc 1 3148 3 is_stmt 1 view .LVU1726
 5381              	.LBB1228:
 5382              	.LBB1175:
2794:src/keys.c    **** 	}
 5383              		.loc 1 2794 10 is_stmt 0 view .LVU1727
 5384 01da 4FF0320B 		mov	fp, #50
 5385 01de 67E7     		b	.L579
 5386              	.LVL433:
 5387              	.L1078:
2794:src/keys.c    **** 	}
 5388              		.loc 1 2794 10 view .LVU1728
 5389              	.LBE1175:
 5390              	.LBE1228:
3001:src/keys.c    ****       return;
 5391              		.loc 1 3001 21 discriminator 1 view .LVU1729
 5392 01e0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
3001:src/keys.c    ****       return;
 5393              		.loc 1 3001 18 discriminator 1 view .LVU1730
 5394 01e2 002A     		cmp	r2, #0
 5395 01e4 B5D1     		bne	.L537
 5396 01e6 89E7     		b	.L534
 5397              	.L1077:
2993:src/keys.c    ****       JustStopped = 0;
 5398              		.loc 1 2993 25 discriminator 1 view .LVU1731
 5399 01e8 FFF7FEFF 		bl	is_key_pressed
 5400              	.LVL434:
2993:src/keys.c    ****       JustStopped = 0;
 5401              		.loc 1 2993 21 discriminator 1 view .LVU1732
 5402 01ec 0028     		cmp	r0, #0
 5403 01ee ACD1     		bne	.L549
2994:src/keys.c    ****     }
 5404              		.loc 1 2994 7 is_stmt 1 view .LVU1733
2994:src/keys.c    ****     }
 5405              		.loc 1 2994 19 is_stmt 0 view .LVU1734
 5406 01f0 3060     		str	r0, [r6]
 5407 01f2 AAE7     		b	.L549
 5408              	.LVL435:
ARM GAS  /tmp/ccQmaUTi.s 			page 178


 5409              	.L578:
2994:src/keys.c    ****     }
 5410              		.loc 1 2994 19 view .LVU1735
 5411 01f4 DFF8D080 		ldr	r8, .L1147+32
 5412 01f8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5413              	.L576:
 5414              	.LBB1229:
 5415              	.LBB1176:
2800:src/keys.c    **** 		CmdLineLength = 0;
 5416              		.loc 1 2800 2 is_stmt 1 view .LVU1736
2800:src/keys.c    **** 		CmdLineLength = 0;
 5417              		.loc 1 2800 5 is_stmt 0 view .LVU1737
 5418 01fc 002B     		cmp	r3, #0
 5419 01fe 40F06C83 		bne	.L1080
 5420              	.L581:
2806:src/keys.c    **** 		return process_confirm((const keycode)c);
 5421              		.loc 1 2806 2 is_stmt 1 view .LVU1738
2806:src/keys.c    **** 		return process_confirm((const keycode)c);
 5422              		.loc 1 2806 6 is_stmt 0 view .LVU1739
 5423 0202 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2806:src/keys.c    **** 		return process_confirm((const keycode)c);
 5424              		.loc 1 2806 5 view .LVU1740
 5425 0206 5907     		lsls	r1, r3, #29
 5426 0208 40F08A83 		bne	.L1081
2809:src/keys.c    **** 		return process_arg((const keycode)c);
 5427              		.loc 1 2809 2 is_stmt 1 view .LVU1741
2809:src/keys.c    **** 		return process_arg((const keycode)c);
 5428              		.loc 1 2809 6 is_stmt 0 view .LVU1742
 5429 020c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2809:src/keys.c    **** 		return process_arg((const keycode)c);
 5430              		.loc 1 2809 5 view .LVU1743
 5431 0210 9A06     		lsls	r2, r3, #26
 5432 0212 00F10484 		bmi	.L1082
2812:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5433              		.loc 1 2812 2 is_stmt 1 view .LVU1744
2812:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5434              		.loc 1 2812 6 is_stmt 0 view .LVU1745
 5435 0216 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2812:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5436              		.loc 1 2812 5 view .LVU1746
 5437 021a 12F0010B 		ands	fp, r2, #1
 5438 021e 40F04B84 		bne	.L1083
2815:src/keys.c    **** 		return process_hyp((const keycode)c);
 5439              		.loc 1 2815 2 is_stmt 1 view .LVU1747
2815:src/keys.c    **** 		return process_hyp((const keycode)c);
 5440              		.loc 1 2815 5 is_stmt 0 view .LVU1748
 5441 0222 12F02001 		ands	r1, r2, #32
 5442 0226 40F02781 		bne	.L1084
2818:src/keys.c    **** 		return process_test((const keycode)c);
 5443              		.loc 1 2818 2 is_stmt 1 view .LVU1749
2818:src/keys.c    **** 		return process_test((const keycode)c);
 5444              		.loc 1 2818 12 is_stmt 0 view .LVU1750
 5445 022a 98F80FB0 		ldrb	fp, [r8, #15]	@ zero_extendqisi2
2818:src/keys.c    **** 		return process_test((const keycode)c);
 5446              		.loc 1 2818 5 view .LVU1751
 5447 022e BBF1070F 		cmp	fp, #7
 5448 0232 40F00D84 		bne	.L1085
ARM GAS  /tmp/ccQmaUTi.s 			page 179


2821:src/keys.c    **** 		return process_status((const keycode)c);
 5449              		.loc 1 2821 2 is_stmt 1 view .LVU1752
2821:src/keys.c    **** 		return process_status((const keycode)c);
 5450              		.loc 1 2821 12 is_stmt 0 view .LVU1753
 5451 0236 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
2821:src/keys.c    **** 		return process_status((const keycode)c);
 5452              		.loc 1 2821 5 view .LVU1754
 5453 023a 002B     		cmp	r3, #0
 5454 023c 40F0B084 		bne	.L1086
2827:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5455              		.loc 1 2827 2 is_stmt 1 view .LVU1755
2827:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5456              		.loc 1 2827 5 is_stmt 0 view .LVU1756
 5457 0240 292C     		cmp	r4, #41
 5458 0242 00F08185 		beq	.L1087
2831:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5459              		.loc 1 2831 2 is_stmt 1 view .LVU1757
2831:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5460              		.loc 1 2831 5 is_stmt 0 view .LVU1758
 5461 0246 2A2C     		cmp	r4, #42
 5462 0248 00F09085 		beq	.L1088
2835:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5463              		.loc 1 2835 2 is_stmt 1 view .LVU1759
2835:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5464              		.loc 1 2835 5 is_stmt 0 view .LVU1760
 5465 024c 2B2C     		cmp	r4, #43
 5466 024e 00F0B385 		beq	.L1089
2844:src/keys.c    **** 		return process_arrow((const keycode)c);
 5467              		.loc 1 2844 2 is_stmt 1 view .LVU1761
2844:src/keys.c    **** 		return process_arrow((const keycode)c);
 5468              		.loc 1 2844 5 is_stmt 0 view .LVU1762
 5469 0252 5007     		lsls	r0, r2, #29
 5470 0254 00F1CE84 		bmi	.L1090
2852:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5471              		.loc 1 2852 2 is_stmt 1 view .LVU1763
2852:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5472              		.loc 1 2852 8 is_stmt 0 view .LVU1764
 5473 0258 E4B2     		uxtb	r4, r4
 5474              	.LVL436:
 5475              	.LBB644:
 5476              	.LBI644:
 254:src/keys.c    **** {
 5477              		.loc 1 254 24 is_stmt 1 view .LVU1765
 5478              	.LBB645:
 256:src/keys.c    ****   int i, col, max;
 5479              		.loc 1 256 3 view .LVU1766
 257:src/keys.c    ****   const struct _map {
 5480              		.loc 1 257 3 view .LVU1767
 258:src/keys.c    ****     unsigned char key, cat[3];
 5481              		.loc 1 258 3 view .LVU1768
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5482              		.loc 1 263 3 view .LVU1769
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5483              		.loc 1 263 6 is_stmt 0 view .LVU1770
 5484 025a 212C     		cmp	r4, #33
 5485 025c 00F05E85 		beq	.L1091
 266:src/keys.c    ****     /*
ARM GAS  /tmp/ccQmaUTi.s 			page 180


 5486              		.loc 1 266 3 is_stmt 1 view .LVU1771
 266:src/keys.c    ****     /*
 5487              		.loc 1 266 23 is_stmt 0 view .LVU1772
 5488 0260 1D49     		ldr	r1, .L1147+48
 5489 0262 D8F81430 		ldr	r3, [r8, #20]
 266:src/keys.c    ****     /*
 5490              		.loc 1 266 6 view .LVU1773
 5491 0266 1942     		tst	r1, r3
 5492 0268 40F00785 		bne	.L658
 5493              	.LBB646:
 270:src/keys.c    **** #ifdef DM42
 5494              		.loc 1 270 5 is_stmt 1 view .LVU1774
 297:src/keys.c    ****       /*
 5495              		.loc 1 297 5 view .LVU1775
 297:src/keys.c    ****       /*
 5496              		.loc 1 297 8 is_stmt 0 view .LVU1776
 5497 026c 242C     		cmp	r4, #36
 5498 026e 03D1     		bne	.L659
 297:src/keys.c    ****       /*
 5499              		.loc 1 297 18 view .LVU1777
 5500 0270 BAF1020F 		cmp	r10, #2
 5501 0274 01F00A83 		beq	.L865
 5502              	.L659:
 312:src/keys.c    ****       /*
 5503              		.loc 1 312 5 is_stmt 1 view .LVU1778
 312:src/keys.c    ****       /*
 5504              		.loc 1 312 8 is_stmt 0 view .LVU1779
 5505 0278 BAF1030F 		cmp	r10, #3
 5506 027c 3BD1     		bne	.L666
 5507              	.L852:
 322:src/keys.c    **** #ifndef WINGUI
 5508              		.loc 1 322 5 is_stmt 1 view .LVU1780
 5509              	.LVL437:
 324:src/keys.c    **** #else
 5510              		.loc 1 324 5 view .LVU1781
 324:src/keys.c    **** #else
 5511              		.loc 1 324 23 is_stmt 0 view .LVU1782
 5512 027e 174B     		ldr	r3, .L1147+52
 5513 0280 1B68     		ldr	r3, [r3]
 5514 0282 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 324:src/keys.c    **** #else
 5515              		.loc 1 324 27 view .LVU1783
 5516 0286 D907     		lsls	r1, r3, #31
 5517 0288 00F1D285 		bmi	.L866
 324:src/keys.c    **** #else
 5518              		.loc 1 324 73 view .LVU1784
 5519 028c 12F0020B 		ands	fp, r2, #2
 5520 0290 01F04881 		beq	.L1092
 322:src/keys.c    **** #ifndef WINGUI
 5521              		.loc 1 322 8 view .LVU1785
 5522 0294 124B     		ldr	r3, .L1147+56
 328:src/keys.c    ****   }
 5523              		.loc 1 328 9 view .LVU1786
 5524 0296 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 5525              		.loc 1 324 73 view .LVU1787
 5526 0298 4FF0020C 		mov	ip, #2
ARM GAS  /tmp/ccQmaUTi.s 			page 181


 5527              	.LVL438:
 5528              	.L661:
 324:src/keys.c    **** #else
 5529              		.loc 1 324 73 view .LVU1788
 5530              	.LBE646:
 370:src/keys.c    ****     if (cp->key == c) {
 5531              		.loc 1 370 3 is_stmt 1 view .LVU1789
 370:src/keys.c    ****     if (cp->key == c) {
 5532              		.loc 1 370 15 view .LVU1790
 5533 029c 181F     		subs	r0, r3, #4
 5534 029e 00EB8100 		add	r0, r0, r1, lsl #2
 5535              	.LBB647:
 324:src/keys.c    **** #else
 5536              		.loc 1 324 73 is_stmt 0 view .LVU1791
 5537 02a2 0421     		movs	r1, #4
 5538              	.LVL439:
 324:src/keys.c    **** #else
 5539              		.loc 1 324 73 view .LVU1792
 5540 02a4 22E0     		b	.L667
 5541              	.L1148:
 5542 02a6 00BF     		.align	2
 5543              	.L1147:
 5544 02a8 00000000 		.word	.LANCHOR12
 5545 02ac 00000000 		.word	Pause
 5546 02b0 00000000 		.word	JustStopped
 5547 02b4 00000000 		.word	OpCode
 5548 02b8 00000000 		.word	GoFast
 5549 02bc 00000000 		.word	Running
 5550 02c0 00000000 		.word	ShowRPN
 5551 02c4 00000000 		.word	JustDisplayed
 5552 02c8 00000000 		.word	StateWhileOn
 5553 02cc 00000000 		.word	OpCodeDisplayPending
 5554 02d0 00000000 		.word	DispMsg
 5555 02d4 00000000 		.word	.LC0
 5556 02d8 00080800 		.word	526336
 5557 02dc 00000000 		.word	main_ram
 5558 02e0 00000000 		.word	.LANCHOR11
 5559 02e4 00000000 		.word	WasDataEntry
 5560              	.LVL440:
 5561              	.L1094:
 324:src/keys.c    **** #else
 5562              		.loc 1 324 73 view .LVU1793
 5563 02e8 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 5564              	.LVL441:
 5565              	.L667:
 324:src/keys.c    **** #else
 5566              		.loc 1 324 73 view .LVU1794
 5567              	.LBE647:
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5568              		.loc 1 371 5 is_stmt 1 view .LVU1795
 370:src/keys.c    ****     if (cp->key == c) {
 5569              		.loc 1 370 24 view .LVU1796
 370:src/keys.c    ****     if (cp->key == c) {
 5570              		.loc 1 370 15 view .LVU1797
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5571              		.loc 1 371 8 is_stmt 0 view .LVU1798
 5572 02ec 8C42     		cmp	r4, r1
ARM GAS  /tmp/ccQmaUTi.s 			page 182


 5573 02ee 00F0FB84 		beq	.L1093
 370:src/keys.c    ****     if (cp->key == c) {
 5574              		.loc 1 370 3 view .LVU1799
 5575 02f2 8342     		cmp	r3, r0
 5576 02f4 F8D1     		bne	.L1094
 5577              	.LVL442:
 5578              	.L666:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5579              		.loc 1 376 3 is_stmt 1 view .LVU1800
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5580              		.loc 1 376 6 is_stmt 0 view .LVU1801
 5581 02f6 1107     		lsls	r1, r2, #28
 5582 02f8 00F1F980 		bmi	.L671
 5583              	.LVL443:
 5584              	.L670:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5585              		.loc 1 376 6 view .LVU1802
 5586              	.LBE645:
 5587              	.LBE644:
2867:src/keys.c    **** 		return process_labellist((const keycode)c);
 5588              		.loc 1 2867 2 is_stmt 1 view .LVU1803
2867:src/keys.c    **** 		return process_labellist((const keycode)c);
 5589              		.loc 1 2867 6 is_stmt 0 view .LVU1804
 5590 02fc 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2867:src/keys.c    **** 		return process_labellist((const keycode)c);
 5591              		.loc 1 2867 5 view .LVU1805
 5592 0300 4B07     		lsls	r3, r1, #29
 5593 0302 00F1A785 		bmi	.L1095
2870:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5594              		.loc 1 2870 2 is_stmt 1 view .LVU1806
2870:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5595              		.loc 1 2870 5 is_stmt 0 view .LVU1807
 5596 0306 0807     		lsls	r0, r1, #28
 5597 0308 00F1EE86 		bmi	.L1096
2873:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5598              		.loc 1 2873 2 is_stmt 1 view .LVU1808
2873:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5599              		.loc 1 2873 5 is_stmt 0 view .LVU1809
 5600 030c 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5601 0310 002B     		cmp	r3, #0
 5602 0312 40F0B187 		bne	.L1097
2876:src/keys.c    **** #ifndef INFRARED
 5603              		.loc 1 2876 2 is_stmt 1 view .LVU1810
2876:src/keys.c    **** #ifndef INFRARED
 5604              		.loc 1 2876 6 is_stmt 0 view .LVU1811
 5605 0316 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2876:src/keys.c    **** #ifndef INFRARED
 5606              		.loc 1 2876 5 view .LVU1812
 5607 031a 1807     		lsls	r0, r3, #28
 5608 031c 00F1BD87 		bmi	.L1098
2889:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5609              		.loc 1 2889 2 is_stmt 1 view .LVU1813
2889:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5610              		.loc 1 2889 5 is_stmt 0 view .LVU1814
 5611 0320 12F0020B 		ands	fp, r2, #2
 5612 0324 41F00D81 		bne	.L1099
2892:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
ARM GAS  /tmp/ccQmaUTi.s 			page 183


 5613              		.loc 1 2892 3 is_stmt 1 view .LVU1815
2892:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5614              		.loc 1 2892 24 is_stmt 0 view .LVU1816
 5615 0328 0AF1FF32 		add	r2, r10, #-1
2892:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5616              		.loc 1 2892 6 view .LVU1817
 5617 032c D2B2     		uxtb	r2, r2
 5618 032e 012A     		cmp	r2, #1
 5619 0330 41F24E81 		bls	.L1100
2894:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5620              		.loc 1 2894 3 is_stmt 1 view .LVU1818
2894:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5621              		.loc 1 2894 6 is_stmt 0 view .LVU1819
 5622 0334 BAF1030F 		cmp	r10, #3
 5623 0338 01F03880 		beq	.L1101
2897:src/keys.c    **** 	}
 5624              		.loc 1 2897 3 is_stmt 1 view .LVU1820
 5625              	.LVL444:
 5626              	.LBB660:
 5627              	.LBI660:
 673:src/keys.c    **** {
 5628              		.loc 1 673 12 view .LVU1821
 5629              	.LBB661:
 675:src/keys.c    **** 		// Row 1
 5630              		.loc 1 675 2 view .LVU1822
 722:src/keys.c    **** 	int op = op_map[lc];
 5631              		.loc 1 722 2 view .LVU1823
 5632              	.LBB662:
 5633              	.LBI662:
 134:src/keys.c    **** {
 5634              		.loc 1 134 12 view .LVU1824
 5635              	.LBB663:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5636              		.loc 1 136 2 view .LVU1825
 146:src/keys.c    **** }
 5637              		.loc 1 146 2 view .LVU1826
 146:src/keys.c    **** }
 5638              		.loc 1 146 2 is_stmt 0 view .LVU1827
 5639              	.LBE663:
 5640              	.LBE662:
 723:src/keys.c    **** 	
 5641              		.loc 1 723 2 is_stmt 1 view .LVU1828
 728:src/keys.c    **** 	  switch (c) {
 5642              		.loc 1 728 6 is_stmt 0 view .LVU1829
 5643 033c B84A     		ldr	r2, .L1149
 5644              	.LBB666:
 5645              	.LBB664:
 146:src/keys.c    **** }
 5646              		.loc 1 146 23 view .LVU1830
 5647 033e B948     		ldr	r0, .L1149+4
 5648              	.LBE664:
 5649              	.LBE666:
 728:src/keys.c    **** 	  switch (c) {
 5650              		.loc 1 728 6 view .LVU1831
 5651 0340 1268     		ldr	r2, [r2]
 5652              	.LBB667:
 5653              	.LBB665:
ARM GAS  /tmp/ccQmaUTi.s 			page 184


 146:src/keys.c    **** }
 5654              		.loc 1 146 23 view .LVU1832
 5655 0342 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5656              	.LBE665:
 5657              	.LBE667:
 723:src/keys.c    **** 	
 5658              		.loc 1 723 17 view .LVU1833
 5659 0346 B848     		ldr	r0, .L1149+8
 728:src/keys.c    **** 	  switch (c) {
 5660              		.loc 1 728 6 view .LVU1834
 5661 0348 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 723:src/keys.c    **** 	
 5662              		.loc 1 723 17 view .LVU1835
 5663 034c 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5664              	.LVL445:
 728:src/keys.c    **** 	  switch (c) {
 5665              		.loc 1 728 5 view .LVU1836
 5666 0350 D207     		lsls	r2, r2, #31
 723:src/keys.c    **** 	
 5667              		.loc 1 723 6 view .LVU1837
 5668 0352 D346     		mov	fp, r10
 5669              	.LVL446:
 727:src/keys.c    **** 	if (UState.intm) {
 5670              		.loc 1 727 2 is_stmt 1 view .LVU1838
 728:src/keys.c    **** 	  switch (c) {
 5671              		.loc 1 728 2 view .LVU1839
 728:src/keys.c    **** 	  switch (c) {
 5672              		.loc 1 728 5 is_stmt 0 view .LVU1840
 5673 0354 00F1B481 		bmi	.L1102
 759:src/keys.c    **** 	  }
 5674              		.loc 1 759 12 is_stmt 1 view .LVU1841
 764:src/keys.c    **** #ifdef DM42
 5675              		.loc 1 764 2 view .LVU1842
 5676 0358 2D2C     		cmp	r4, #45
 5677 035a 00F21981 		bhi	.L594
 5678 035e DFE814F0 		tbh	[pc, r4, lsl #1]
 5679              	.L855:
 5680 0362 E10A     		.2byte	(.L817-.L855)/2
 5681 0364 DA0A     		.2byte	(.L818-.L855)/2
 5682 0366 1701     		.2byte	(.L594-.L855)/2
 5683 0368 8102     		.2byte	(.L816-.L855)/2
 5684 036a 1701     		.2byte	(.L594-.L855)/2
 5685 036c 1701     		.2byte	(.L594-.L855)/2
 5686 036e 3502     		.2byte	(.L812-.L855)/2
 5687 0370 3502     		.2byte	(.L812-.L855)/2
 5688 0372 1701     		.2byte	(.L594-.L855)/2
 5689 0374 1701     		.2byte	(.L594-.L855)/2
 5690 0376 1701     		.2byte	(.L594-.L855)/2
 5691 0378 1701     		.2byte	(.L594-.L855)/2
 5692 037a 1701     		.2byte	(.L594-.L855)/2
 5693 037c 1701     		.2byte	(.L594-.L855)/2
 5694 037e 1701     		.2byte	(.L594-.L855)/2
 5695 0380 1701     		.2byte	(.L594-.L855)/2
 5696 0382 4002     		.2byte	(.L815-.L855)/2
 5697 0384 1701     		.2byte	(.L594-.L855)/2
 5698 0386 3502     		.2byte	(.L812-.L855)/2
 5699 0388 1701     		.2byte	(.L594-.L855)/2
ARM GAS  /tmp/ccQmaUTi.s 			page 185


 5700 038a 1701     		.2byte	(.L594-.L855)/2
 5701 038c 1701     		.2byte	(.L594-.L855)/2
 5702 038e 1701     		.2byte	(.L594-.L855)/2
 5703 0390 1701     		.2byte	(.L594-.L855)/2
 5704 0392 1701     		.2byte	(.L594-.L855)/2
 5705 0394 1701     		.2byte	(.L594-.L855)/2
 5706 0396 1701     		.2byte	(.L594-.L855)/2
 5707 0398 1701     		.2byte	(.L594-.L855)/2
 5708 039a 1701     		.2byte	(.L594-.L855)/2
 5709 039c 1701     		.2byte	(.L594-.L855)/2
 5710 039e 1701     		.2byte	(.L594-.L855)/2
 5711 03a0 1701     		.2byte	(.L594-.L855)/2
 5712 03a2 1701     		.2byte	(.L594-.L855)/2
 5713 03a4 1701     		.2byte	(.L594-.L855)/2
 5714 03a6 1701     		.2byte	(.L594-.L855)/2
 5715 03a8 1701     		.2byte	(.L594-.L855)/2
 5716 03aa 1701     		.2byte	(.L594-.L855)/2
 5717 03ac 1701     		.2byte	(.L594-.L855)/2
 5718 03ae 1701     		.2byte	(.L594-.L855)/2
 5719 03b0 1701     		.2byte	(.L594-.L855)/2
 5720 03b2 1701     		.2byte	(.L594-.L855)/2
 5721 03b4 1701     		.2byte	(.L594-.L855)/2
 5722 03b6 1701     		.2byte	(.L594-.L855)/2
 5723 03b8 1701     		.2byte	(.L594-.L855)/2
 5724 03ba 8702     		.2byte	(.L814-.L855)/2
 5725 03bc A601     		.2byte	(.L819-.L855)/2
 5726              	.LVL447:
 5727              		.p2align 1
 5728              	.L1063:
 764:src/keys.c    **** #ifdef DM42
 5729              		.loc 1 764 2 is_stmt 0 view .LVU1843
 5730 03be 9B4C     		ldr	r4, .L1149+12
 5731              	.LBE661:
 5732              	.LBE660:
 5733              	.LBE1176:
 5734              	.LBE1229:
3161:src/keys.c    ****   watchdog();
 5735              		.loc 1 3161 3 is_stmt 1 view .LVU1844
3161:src/keys.c    ****   watchdog();
 5736              		.loc 1 3161 17 is_stmt 0 view .LVU1845
 5737 03c0 0023     		movs	r3, #0
 5738 03c2 2360     		str	r3, [r4]
3162:src/keys.c    **** }
 5739              		.loc 1 3162 13 is_stmt 1 view .LVU1846
 5740 03c4 9AE6     		b	.L534
 5741              	.LVL448:
 5742              	.L571:
 5743              	.LBB1230:
 5744              	.LBB1177:
2763:src/keys.c    **** 	set_pc(0);
 5745              		.loc 1 2763 7 view .LVU1847
2763:src/keys.c    **** 	set_pc(0);
 5746              		.loc 1 2763 11 is_stmt 0 view .LVU1848
 5747 03c6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
2763:src/keys.c    **** 	set_pc(0);
 5748              		.loc 1 2763 10 view .LVU1849
 5749 03c8 3BB1     		cbz	r3, .L573
ARM GAS  /tmp/ccQmaUTi.s 			page 186


2763:src/keys.c    **** 	set_pc(0);
 5750              		.loc 1 2763 20 view .LVU1850
 5751 03ca 954B     		ldr	r3, .L1149
 5752 03cc 1B68     		ldr	r3, [r3]
 5753 03ce B3F8E037 		ldrh	r3, [r3, #2016]
2763:src/keys.c    **** 	set_pc(0);
 5754              		.loc 1 2763 17 view .LVU1851
 5755 03d2 9B0B     		lsrs	r3, r3, #14
 5756 03d4 032B     		cmp	r3, #3
 5757 03d6 00F02783 		beq	.L1103
 5758              	.L573:
2765:src/keys.c    ****       xeq_xrom();
 5759              		.loc 1 2765 7 is_stmt 1 view .LVU1852
2765:src/keys.c    ****       xeq_xrom();
 5760              		.loc 1 2765 13 is_stmt 0 view .LVU1853
 5761 03da 0027     		movs	r7, #0
 5762 03dc 2F70     		strb	r7, [r5]
2766:src/keys.c    ****       set_running_off();
 5763              		.loc 1 2766 7 is_stmt 1 view .LVU1854
 5764 03de FFF7FEFF 		bl	xeq_xrom
 5765              	.LVL449:
2767:src/keys.c    ****       DispMsg = "Stopped";
 5766              		.loc 1 2767 7 view .LVU1855
 5767 03e2 FFF7FEFF 		bl	set_running_off
 5768              	.LVL450:
2768:src/keys.c    ****       State2.disp_freeze = 0;
 5769              		.loc 1 2768 7 view .LVU1856
2769:src/keys.c    ****       return STATE_UNFINISHED;
 5770              		.loc 1 2769 26 is_stmt 0 view .LVU1857
 5771 03e6 924B     		ldr	r3, .L1149+16
2768:src/keys.c    ****       State2.disp_freeze = 0;
 5772              		.loc 1 2768 15 view .LVU1858
 5773 03e8 9249     		ldr	r1, .L1149+20
2769:src/keys.c    ****       return STATE_UNFINISHED;
 5774              		.loc 1 2769 26 view .LVU1859
 5775 03ea DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
2768:src/keys.c    ****       State2.disp_freeze = 0;
 5776              		.loc 1 2768 15 view .LVU1860
 5777 03ec 9248     		ldr	r0, .L1149+24
 5778 03ee 0860     		str	r0, [r1]
2769:src/keys.c    ****       return STATE_UNFINISHED;
 5779              		.loc 1 2769 7 is_stmt 1 view .LVU1861
2769:src/keys.c    ****       return STATE_UNFINISHED;
 5780              		.loc 1 2769 26 is_stmt 0 view .LVU1862
 5781 03f0 67F30412 		bfi	r2, r7, #4, #1
 5782 03f4 DA75     		strb	r2, [r3, #23]
2770:src/keys.c    ****     }
 5783              		.loc 1 2770 7 is_stmt 1 view .LVU1863
2770:src/keys.c    ****     }
 5784              		.loc 1 2770 14 is_stmt 0 view .LVU1864
 5785 03f6 4FF0330B 		mov	fp, #51
 5786 03fa 55E6     		b	.L565
 5787              	.LVL451:
 5788              	.L555:
2770:src/keys.c    ****     }
 5789              		.loc 1 2770 14 view .LVU1865
 5790 03fc 8F4E     		ldr	r6, .L1149+28
ARM GAS  /tmp/ccQmaUTi.s 			page 187


 5791 03fe 3368     		ldr	r3, [r6]
 5792 0400 A7E6     		b	.L537
 5793              	.L1072:
2770:src/keys.c    ****     }
 5794              		.loc 1 2770 14 view .LVU1866
 5795              	.LBE1177:
 5796              	.LBE1230:
3015:src/keys.c    ****       finish_RPN(); // RPN
 5797              		.loc 1 3015 7 is_stmt 1 view .LVU1867
 5798 0402 8D20     		movs	r0, #141
 5799 0404 FFF7FEFF 		bl	clr_dot
 5800              	.LVL452:
3016:src/keys.c    ****     }
 5801              		.loc 1 3016 7 view .LVU1868
 5802 0408 FFF7FEFF 		bl	finish_RPN
 5803              	.LVL453:
 5804 040c 1BE6     		b	.L553
 5805              	.LVL454:
 5806              	.L1075:
3075:src/keys.c    ****     }
 5807              		.loc 1 3075 7 view .LVU1869
 5808 040e FFF7FEFF 		bl	finish_RPN
 5809              	.LVL455:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 5810              		.loc 1 2929 7 is_stmt 0 view .LVU1870
 5811 0412 0027     		movs	r7, #0
 5812 0414 48E6     		b	.L565
 5813              	.LVL456:
 5814              	.L556:
3056:src/keys.c    **** #ifndef CONSOLE
 5815              		.loc 1 3056 7 is_stmt 1 view .LVU1871
 5816 0416 8A4B     		ldr	r3, .L1149+32
 5817 0418 8D20     		movs	r0, #141
 5818 041a 1968     		ldr	r1, [r3]
 5819 041c FFF7FEFF 		bl	dot
 5820              	.LVL457:
3058:src/keys.c    **** 	if (!WasDataEntry) {
 5821              		.loc 1 3058 7 view .LVU1872
3058:src/keys.c    **** 	if (!WasDataEntry) {
 5822              		.loc 1 3058 11 is_stmt 0 view .LVU1873
 5823 0420 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3058:src/keys.c    **** 	if (!WasDataEntry) {
 5824              		.loc 1 3058 10 view .LVU1874
 5825 0424 9806     		lsls	r0, r3, #26
 5826 0426 3FF569AE 		bmi	.L534
3059:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5827              		.loc 1 3059 2 is_stmt 1 view .LVU1875
3059:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5828              		.loc 1 3059 6 is_stmt 0 view .LVU1876
 5829 042a 864B     		ldr	r3, .L1149+36
3059:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5830              		.loc 1 3059 5 view .LVU1877
 5831 042c 1B68     		ldr	r3, [r3]
 5832 042e 002B     		cmp	r3, #0
 5833 0430 40F06582 		bne	.L567
3061:src/keys.c    **** 	}
 5834              		.loc 1 3061 4 is_stmt 1 view .LVU1878
ARM GAS  /tmp/ccQmaUTi.s 			page 188


 5835              		.loc 1 3163 1 is_stmt 0 view .LVU1879
 5836 0434 03B0     		add	sp, sp, #12
 5837              		.cfi_remember_state
 5838              		.cfi_def_cfa_offset 36
 5839              		@ sp needed
 5840 0436 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5841              		.cfi_restore 14
 5842              		.cfi_restore 11
 5843              		.cfi_restore 10
 5844              		.cfi_restore 9
 5845              		.cfi_restore 8
 5846              		.cfi_restore 7
 5847              		.cfi_restore 6
 5848              		.cfi_restore 5
 5849              		.cfi_restore 4
 5850              		.cfi_def_cfa_offset 0
3061:src/keys.c    **** 	}
 5851              		.loc 1 3061 4 view .LVU1880
 5852 043a FFF7FEBF 		b	display
 5853              	.LVL458:
 5854              	.L1073:
 5855              		.cfi_restore_state
3044:src/keys.c    ****       else {
 5856              		.loc 1 3044 2 is_stmt 1 view .LVU1881
 5857 043e FFF7FEFF 		bl	xeq_sst_bst
 5858              	.LVL459:
 5859 0442 7E4E     		ldr	r6, .L1149+28
 5860 0444 27E6     		b	.L558
 5861              	.L1076:
2978:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5862              		.loc 1 2978 28 is_stmt 0 discriminator 1 view .LVU1882
 5863 0446 FFF7FEFF 		bl	shift_down
 5864              	.LVL460:
2978:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5865              		.loc 1 2978 25 discriminator 1 view .LVU1883
 5866 044a 0028     		cmp	r0, #0
 5867 044c 3FF479AE 		beq	.L540
2980:src/keys.c    ****       }
 5868              		.loc 1 2980 2 is_stmt 1 view .LVU1884
2980:src/keys.c    ****       }
 5869              		.loc 1 2980 16 is_stmt 0 view .LVU1885
 5870 0450 774B     		ldr	r3, .L1149+16
 5871 0452 0022     		movs	r2, #0
 5872 0454 1A74     		strb	r2, [r3, #16]
 5873 0456 74E6     		b	.L540
 5874              	.L543:
2968:src/keys.c    **** 	  /*
 5875              		.loc 1 2968 10 is_stmt 1 view .LVU1886
2968:src/keys.c    **** 	  /*
 5876              		.loc 1 2968 14 is_stmt 0 view .LVU1887
 5877 0458 FFF7FEFF 		bl	keyticks
 5878              	.LVL461:
2968:src/keys.c    **** 	  /*
 5879              		.loc 1 2968 13 view .LVU1888
 5880 045c 0C28     		cmp	r0, #12
 5881 045e 7FF76BAE 		ble	.L542
2972:src/keys.c    **** 	  message("NULL", CNULL);
ARM GAS  /tmp/ccQmaUTi.s 			page 189


 5882              		.loc 1 2972 4 is_stmt 1 view .LVU1889
2973:src/keys.c    **** 	  // Force display update on key-up
 5883              		.loc 1 2973 4 is_stmt 0 view .LVU1890
 5884 0462 7948     		ldr	r0, .L1149+40
2972:src/keys.c    **** 	  message("NULL", CNULL);
 5885              		.loc 1 2972 11 view .LVU1891
 5886 0464 3760     		str	r7, [r6]
2973:src/keys.c    **** 	  // Force display update on key-up
 5887              		.loc 1 2973 4 is_stmt 1 view .LVU1892
 5888 0466 3946     		mov	r1, r7
 5889 0468 FFF7FEFF 		bl	message
 5890              	.LVL462:
2975:src/keys.c    **** 	}
 5891              		.loc 1 2975 4 view .LVU1893
2975:src/keys.c    **** 	}
 5892              		.loc 1 2975 21 is_stmt 0 view .LVU1894
 5893 046c 704B     		ldr	r3, .L1149+16
 5894 046e DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 5895 0470 67F34512 		bfi	r2, r7, #5, #1
 5896 0474 DA75     		strb	r2, [r3, #23]
 5897 0476 5FE6     		b	.L542
 5898              	.LVL463:
 5899              	.L1084:
 5900              	.LBB1231:
 5901              	.LBB1178:
2816:src/keys.c    **** 
 5902              		.loc 1 2816 3 is_stmt 1 view .LVU1895
 5903              	.LBB685:
 5904              	.LBB686:
1229:src/keys.c    **** 	State2.dot = 0;
 5905              		.loc 1 1229 15 is_stmt 0 view .LVU1896
 5906 0478 22F06203 		bic	r3, r2, #98
 5907              	.LBE686:
 5908              	.LBE685:
2816:src/keys.c    **** 
 5909              		.loc 1 2816 10 view .LVU1897
 5910 047c E4B2     		uxtb	r4, r4
 5911              	.LVL464:
 5912              	.LBB700:
 5913              	.LBI685:
1219:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 5914              		.loc 1 1219 12 is_stmt 1 view .LVU1898
 5915              	.LBB696:
1220:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 5916              		.loc 1 1220 2 view .LVU1899
1225:src/keys.c    **** 	int f = State2.dot;
 5917              		.loc 1 1225 2 view .LVU1900
1229:src/keys.c    **** 	State2.dot = 0;
 5918              		.loc 1 1229 15 is_stmt 0 view .LVU1901
 5919 047e 88F81530 		strb	r3, [r8, #21]
1225:src/keys.c    **** 	int f = State2.dot;
 5920              		.loc 1 1225 20 view .LVU1902
 5921 0482 C2F3400A 		ubfx	r10, r2, #1, #1
 5922              	.LVL465:
1226:src/keys.c    **** 
 5923              		.loc 1 1226 2 is_stmt 1 view .LVU1903
1226:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 190


 5924              		.loc 1 1226 16 is_stmt 0 view .LVU1904
 5925 0486 C2F38019 		ubfx	r9, r2, #6, #1
 5926              	.LVL466:
1228:src/keys.c    **** 	State2.cmplx = 0;
 5927              		.loc 1 1228 2 is_stmt 1 view .LVU1905
1229:src/keys.c    **** 	State2.dot = 0;
 5928              		.loc 1 1229 2 view .LVU1906
1230:src/keys.c    **** #ifdef DM42
 5929              		.loc 1 1230 2 view .LVU1907
1232:src/keys.c    **** #endif
 5930              		.loc 1 1232 2 view .LVU1908
 5931              	.LBB687:
 5932              	.LBI687:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 5933              		.loc 1 102 13 view .LVU1909
 5934              	.LBE687:
 5935              	.LBE696:
 5936              	.LBE700:
 5937              	.LBE1178:
 5938              	.LBE1231:
 103:src/keys.c    **** }
 5939              		.loc 1 103 2 view .LVU1910
 5940              	.LBB1232:
 5941              	.LBB1179:
 5942              	.LBB701:
 5943              	.LBB697:
 5944              	.LBB694:
 5945              	.LBB688:
 5946              	.LBI688:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 5947              		.loc 1 92 20 view .LVU1911
 5948              	.LBB689:
  93:src/keys.c    **** 	State2.shifts = shift;
 5949              		.loc 1 93 2 view .LVU1912
 5950              	.LBB690:
 5951              	.LBI690:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5952              		.loc 1 84 13 view .LVU1913
 5953              	.LBB691:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5954              		.loc 1 85 2 view .LVU1914
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5955              		.loc 1 85 18 is_stmt 0 view .LVU1915
 5956 048a FFF7FEFF 		bl	shift_down
 5957              	.LVL467:
  86:src/keys.c    **** }
 5958              		.loc 1 86 2 is_stmt 1 view .LVU1916
 5959              	.LBE691:
 5960              	.LBE690:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5961              		.loc 1 94 2 view .LVU1917
 5962              	.LBE689:
 5963              	.LBE688:
 5964              	.LBE694:
1234:src/keys.c    **** 
 5965              		.loc 1 1234 2 is_stmt 0 view .LVU1918
 5966 048e 2A2C     		cmp	r4, #42
ARM GAS  /tmp/ccQmaUTi.s 			page 191


 5967              	.LBB695:
 5968              	.LBB693:
 5969              	.LBB692:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5970              		.loc 1 94 16 view .LVU1919
 5971 0490 88F810B0 		strb	fp, [r8, #16]
  95:src/keys.c    **** 	return r;
 5972              		.loc 1 95 2 is_stmt 1 view .LVU1920
  95:src/keys.c    **** 	return r;
 5973              		.loc 1 95 19 is_stmt 0 view .LVU1921
 5974 0494 88F80DB0 		strb	fp, [r8, #13]
  96:src/keys.c    **** }
 5975              		.loc 1 96 2 is_stmt 1 view .LVU1922
 5976              	.LVL468:
  96:src/keys.c    **** }
 5977              		.loc 1 96 2 is_stmt 0 view .LVU1923
 5978              	.LBE692:
 5979              	.LBE693:
 5980              	.LBE695:
1234:src/keys.c    **** 
 5981              		.loc 1 1234 2 is_stmt 1 view .LVU1924
 5982 0498 00F25A83 		bhi	.L615
 5983 049c 282C     		cmp	r4, #40
 5984 049e 00F25E84 		bhi	.L616
 5985 04a2 013C     		subs	r4, r4, #1
 5986              	.LVL469:
1234:src/keys.c    **** 
 5987              		.loc 1 1234 2 is_stmt 0 view .LVU1925
 5988 04a4 E3B2     		uxtb	r3, r4
 5989 04a6 022B     		cmp	r3, #2
 5990 04a8 00F28D81 		bhi	.L1060
1239:src/keys.c    **** 
 5991              		.loc 1 1239 3 is_stmt 1 view .LVU1926
1239:src/keys.c    **** 
 5992              		.loc 1 1239 54 is_stmt 0 view .LVU1927
 5993 04ac 674A     		ldr	r2, .L1149+44
 5994 04ae 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 5995 04b2 02EB4404 		add	r4, r2, r4, lsl #1
 5996              	.LVL470:
1239:src/keys.c    **** 
 5997              		.loc 1 1239 27 view .LVU1928
 5998 04b6 BAF1000F 		cmp	r10, #0
1239:src/keys.c    **** 
 5999              		.loc 1 1239 54 view .LVU1929
 6000 04ba 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1239:src/keys.c    **** 
 6001              		.loc 1 1239 27 view .LVU1930
 6002 04be 14BF     		ite	ne
 6003 04c0 4FF4A062 		movne	r2, #1280
 6004 04c4 4FF40072 		moveq	r2, #512
1239:src/keys.c    **** 
 6005              		.loc 1 1239 37 view .LVU1931
 6006 04c8 4BEA020B 		orr	fp, fp, r2
 6007 04cc 5846     		mov	r0, fp
 6008              	.LVL471:
 6009              	.L620:
1239:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 192


 6010              		.loc 1 1239 37 view .LVU1932
 6011              	.LBE697:
 6012              	.LBE701:
 6013              	.LBE1179:
 6014              	.LBE1232:
3122:src/keys.c    **** 	NonProgrammable = 0;
 6015              		.loc 1 3122 7 is_stmt 1 view .LVU1933
3122:src/keys.c    **** 	NonProgrammable = 0;
 6016              		.loc 1 3122 10 is_stmt 0 view .LVU1934
 6017 04ce 13F04003 		ands	r3, r3, #64
 6018 04d2 00F06984 		beq	.L1047
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6019              		.loc 1 3123 2 is_stmt 1 view .LVU1935
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6020              		.loc 1 3123 18 is_stmt 0 view .LVU1936
 6021 04d6 5E4B     		ldr	r3, .L1149+48
 6022 04d8 0022     		movs	r2, #0
 6023 04da 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6024              		.loc 1 3124 2 is_stmt 1 view .LVU1937
 6025              	.LVL472:
 6026              	.L832:
3137:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6027              		.loc 1 3137 4 view .LVU1938
3137:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6028              		.loc 1 3137 11 is_stmt 0 view .LVU1939
 6029 04dc 5D4A     		ldr	r2, .L1149+52
3138:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6030              		.loc 1 3138 25 view .LVU1940
 6031 04de 5E4B     		ldr	r3, .L1149+56
3137:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6032              		.loc 1 3137 11 view .LVU1941
 6033 04e0 1060     		str	r0, [r2]
3138:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6034              		.loc 1 3138 4 is_stmt 1 view .LVU1942
3138:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6035              		.loc 1 3138 25 is_stmt 0 view .LVU1943
 6036 04e2 0122     		movs	r2, #1
 6037 04e4 514C     		ldr	r4, .L1149+12
 6038 04e6 1A60     		str	r2, [r3]
3139:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 6039              		.loc 1 3139 4 is_stmt 1 view .LVU1944
 6040 04e8 FFF7FEFF 		bl	finish_RPN
 6041              	.LVL473:
3140:src/keys.c    **** 	}
 6042              		.loc 1 3140 4 view .LVU1945
 6043 04ec 04E6     		b	.L838
 6044              	.LVL474:
 6045              	.L671:
 6046              	.LBB1233:
 6047              	.LBB1180:
2865:src/keys.c    **** 
 6048              		.loc 1 2865 3 view .LVU1946
 6049              	.LBB702:
 6050              	.LBI702:
2350:src/keys.c    **** 	enum shifts shift = reset_shift();
 6051              		.loc 1 2350 12 view .LVU1947
ARM GAS  /tmp/ccQmaUTi.s 			page 193


 6052              	.LBB703:
2351:src/keys.c    **** 	unsigned int ch = 0;
 6053              		.loc 1 2351 2 view .LVU1948
 6054              	.LBB704:
 6055              	.LBI704:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 6056              		.loc 1 102 13 view .LVU1949
 6057              	.LBE704:
 6058              	.LBE703:
 6059              	.LBE702:
 6060              	.LBE1180:
 6061              	.LBE1233:
 103:src/keys.c    **** }
 6062              		.loc 1 103 2 view .LVU1950
 6063              	.LBB1234:
 6064              	.LBB1181:
 6065              	.LBB736:
 6066              	.LBB730:
 6067              	.LBB711:
 6068              	.LBB705:
 6069              	.LBI705:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 6070              		.loc 1 92 20 view .LVU1951
 6071              	.LBB706:
  93:src/keys.c    **** 	State2.shifts = shift;
 6072              		.loc 1 93 2 view .LVU1952
 6073              	.LBB707:
 6074              	.LBI707:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 6075              		.loc 1 84 13 view .LVU1953
 6076              	.LBB708:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6077              		.loc 1 85 2 view .LVU1954
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6078              		.loc 1 85 18 is_stmt 0 view .LVU1955
 6079 04ee FFF7FEFF 		bl	shift_down
 6080              	.LVL475:
  86:src/keys.c    **** }
 6081              		.loc 1 86 2 is_stmt 1 view .LVU1956
  86:src/keys.c    **** }
 6082              		.loc 1 86 52 is_stmt 0 view .LVU1957
 6083 04f2 0146     		mov	r1, r0
 6084 04f4 08B9     		cbnz	r0, .L669
 6085 04f6 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 6086              	.L669:
 6087              	.LVL476:
  86:src/keys.c    **** }
 6088              		.loc 1 86 52 view .LVU1958
 6089              	.LBE708:
 6090              	.LBE707:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 6091              		.loc 1 94 2 is_stmt 1 view .LVU1959
 6092              	.LBE706:
 6093              	.LBE705:
 6094              	.LBE711:
2355:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6095              		.loc 1 2355 5 is_stmt 0 view .LVU1960
ARM GAS  /tmp/ccQmaUTi.s 			page 194


 6096 04fa 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 6097              	.LBB712:
 6098              	.LBB710:
 6099              	.LBB709:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 6100              		.loc 1 94 16 view .LVU1961
 6101 04fe 0023     		movs	r3, #0
 6102 0500 88F81030 		strb	r3, [r8, #16]
  95:src/keys.c    **** 	return r;
 6103              		.loc 1 95 2 is_stmt 1 view .LVU1962
  95:src/keys.c    **** 	return r;
 6104              		.loc 1 95 19 is_stmt 0 view .LVU1963
 6105 0504 88F80D30 		strb	r3, [r8, #13]
  96:src/keys.c    **** }
 6106              		.loc 1 96 2 is_stmt 1 view .LVU1964
 6107              	.LVL477:
  96:src/keys.c    **** }
 6108              		.loc 1 96 2 is_stmt 0 view .LVU1965
 6109              	.LBE709:
 6110              	.LBE710:
 6111              	.LBE712:
2352:src/keys.c    **** 	unsigned int opcode;
 6112              		.loc 1 2352 2 is_stmt 1 view .LVU1966
2353:src/keys.c    **** 
 6113              		.loc 1 2353 2 view .LVU1967
2355:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6114              		.loc 1 2355 2 view .LVU1968
2355:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6115              		.loc 1 2355 5 is_stmt 0 view .LVU1969
 6116 0508 002A     		cmp	r2, #0
 6117 050a 40F09A87 		bne	.L1104
2364:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 6118              		.loc 1 2364 2 is_stmt 1 view .LVU1970
 6119 050e 102C     		cmp	r4, #16
 6120 0510 01F0A581 		beq	.L674
 6121 0514 242C     		cmp	r4, #36
 6122 0516 01F08E81 		beq	.L675
 6123 051a 0C2C     		cmp	r4, #12
 6124 051c 01F06C81 		beq	.L1105
 6125              	.L676:
2397:src/keys.c    **** 	if (ch == 0)
 6126              		.loc 1 2397 2 view .LVU1971
 6127              	.LBB713:
 6128              	.LBB714:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6129              		.loc 1 434 6 is_stmt 0 view .LVU1972
 6130 0520 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6131              	.LVL478:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6132              		.loc 1 434 6 view .LVU1973
 6133              	.LBE714:
 6134              	.LBI713:
 384:src/keys.c    **** {
 6135              		.loc 1 384 12 is_stmt 1 view .LVU1974
 6136              	.LBB719:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6137              		.loc 1 386 2 view .LVU1975
ARM GAS  /tmp/ccQmaUTi.s 			page 195


 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6138              		.loc 1 434 2 view .LVU1976
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6139              		.loc 1 434 5 is_stmt 0 view .LVU1977
 6140 0524 DA06     		lsls	r2, r3, #27
 6141 0526 03D5     		bpl	.L679
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6142              		.loc 1 435 3 is_stmt 1 view .LVU1978
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6143              		.loc 1 435 6 is_stmt 0 view .LVU1979
 6144 0528 0029     		cmp	r1, #0
 6145 052a 41F0BA83 		bne	.L1106
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 6146              		.loc 1 436 10 view .LVU1980
 6147 052e 0421     		movs	r1, #4
 6148              	.LVL479:
 6149              	.L679:
 440:src/keys.c    **** }
 6150              		.loc 1 440 2 is_stmt 1 view .LVU1981
 6151              	.LBB715:
 6152              	.LBI715:
 119:src/keys.c    **** {
 6153              		.loc 1 119 12 view .LVU1982
 6154              	.LBB716:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6155              		.loc 1 121 2 view .LVU1983
 131:src/keys.c    **** }
 6156              		.loc 1 131 2 view .LVU1984
 131:src/keys.c    **** }
 6157              		.loc 1 131 23 is_stmt 0 view .LVU1985
 6158 0530 4A4B     		ldr	r3, .L1149+60
 6159              	.LBE716:
 6160              	.LBE715:
 440:src/keys.c    **** }
 6161              		.loc 1 440 49 view .LVU1986
 6162 0532 4B4A     		ldr	r2, .L1149+64
 6163              	.LBB718:
 6164              	.LBB717:
 131:src/keys.c    **** }
 6165              		.loc 1 131 23 view .LVU1987
 6166 0534 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 6167              	.LBE717:
 6168              	.LBE718:
 440:src/keys.c    **** }
 6169              		.loc 1 440 49 view .LVU1988
 6170 0536 0620     		movs	r0, #6
 6171 0538 00FB0323 		mla	r3, r0, r3, r2
 6172              	.LBE719:
 6173              	.LBE713:
2397:src/keys.c    **** 	if (ch == 0)
 6174              		.loc 1 2397 5 view .LVU1989
 6175 053c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 6176              	.LVL480:
2398:src/keys.c    **** 		return STATE_UNFINISHED;
 6177              		.loc 1 2398 2 is_stmt 1 view .LVU1990
2398:src/keys.c    **** 		return STATE_UNFINISHED;
 6178              		.loc 1 2398 5 is_stmt 0 view .LVU1991
ARM GAS  /tmp/ccQmaUTi.s 			page 196


 6179 053e 002B     		cmp	r3, #0
 6180 0540 00F04181 		beq	.L1060
 6181              	.L673:
2401:src/keys.c    **** 		State2.digval = ch;
 6182              		.loc 1 2401 2 is_stmt 1 view .LVU1992
2401:src/keys.c    **** 		State2.digval = ch;
 6183              		.loc 1 2401 12 is_stmt 0 view .LVU1993
 6184 0544 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2401:src/keys.c    **** 		State2.digval = ch;
 6185              		.loc 1 2401 5 view .LVU1994
 6186 0548 002A     		cmp	r2, #0
 6187 054a 01F09681 		beq	.L1107
2405:src/keys.c    **** 		State2.digval2 = ch;
 6188              		.loc 1 2405 9 is_stmt 1 view .LVU1995
2405:src/keys.c    **** 		State2.digval2 = ch;
 6189              		.loc 1 2405 12 is_stmt 0 view .LVU1996
 6190 054e 012A     		cmp	r2, #1
 6191 0550 01F08A82 		beq	.L1108
2410:src/keys.c    **** 
 6192              		.loc 1 2410 2 is_stmt 1 view .LVU1997
 6193              	.LBB721:
 6194              	.LBI721:
2343:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 6195              		.loc 1 2343 13 view .LVU1998
 6196              	.LBB722:
2345:src/keys.c    **** 	if (! State2.alphas )
 6197              		.loc 1 2345 2 view .LVU1999
2345:src/keys.c    **** 	if (! State2.alphas )
 6198              		.loc 1 2345 15 is_stmt 0 view .LVU2000
 6199 0554 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
2346:src/keys.c    **** 		State2.alphashift = 0;
 6200              		.loc 1 2346 6 view .LVU2001
 6201 0558 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2345:src/keys.c    **** 	if (! State2.alphas )
 6202              		.loc 1 2345 15 view .LVU2002
 6203 055c 6FF3C301 		bfc	r1, #3, #1
 6204 0560 88F81510 		strb	r1, [r8, #21]
2346:src/keys.c    **** 		State2.alphashift = 0;
 6205              		.loc 1 2346 2 is_stmt 1 view .LVU2003
2346:src/keys.c    **** 		State2.alphashift = 0;
 6206              		.loc 1 2346 5 is_stmt 0 view .LVU2004
 6207 0564 12F00801 		ands	r1, r2, #8
2347:src/keys.c    **** }
 6208              		.loc 1 2347 3 is_stmt 1 view .LVU2005
2347:src/keys.c    **** }
 6209              		.loc 1 2347 21 is_stmt 0 view .LVU2006
 6210 0568 04BF     		itt	eq
 6211 056a 61F30412 		bfieq	r2, r1, #4, #1
 6212 056e 88F81620 		strbeq	r2, [r8, #22]
 6213              	.LVL481:
 6214              	.L678:
2347:src/keys.c    **** }
 6215              		.loc 1 2347 21 view .LVU2007
 6216              	.LBE722:
 6217              	.LBE721:
2413:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6218              		.loc 1 2413 2 is_stmt 1 view .LVU2008
ARM GAS  /tmp/ccQmaUTi.s 			page 197


2415:src/keys.c    **** }
 6219              		.loc 1 2415 2 view .LVU2009
2413:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6220              		.loc 1 2413 21 is_stmt 0 view .LVU2010
 6221 0572 98F81FB0 		ldrb	fp, [r8, #31]	@ zero_extendqisi2
2414:src/keys.c    **** 	return opcode;
 6222              		.loc 1 2414 17 view .LVU2011
 6223 0576 B8F80810 		ldrh	r1, [r8, #8]
2414:src/keys.c    **** 	return opcode;
 6224              		.loc 1 2414 34 view .LVU2012
 6225 057a 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2413:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6226              		.loc 1 2413 29 view .LVU2013
 6227 057e 4FEA0B2B 		lsl	fp, fp, #8
2413:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6228              		.loc 1 2413 18 view .LVU2014
 6229 0582 0BF5704B 		add	fp, fp, #61440
2414:src/keys.c    **** 	return opcode;
 6230              		.loc 1 2414 9 view .LVU2015
 6231 0586 8B44     		add	fp, fp, r1
2414:src/keys.c    **** 	return opcode;
 6232              		.loc 1 2414 25 view .LVU2016
 6233 0588 0BEB024B 		add	fp, fp, r2, lsl #16
2413:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6234              		.loc 1 2413 9 view .LVU2017
 6235 058c 0BEB036B 		add	fp, fp, r3, lsl #24
 6236              	.LVL482:
 6237              	.L594:
2413:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6238              		.loc 1 2413 9 view .LVU2018
 6239              	.LBE730:
 6240              	.LBE736:
 6241              	.LBE1181:
 6242              	.LBE1234:
3086:src/keys.c    ****     case STATE_SST:
 6243              		.loc 1 3086 5 is_stmt 1 view .LVU2019
 6244 0590 ABF12B03 		sub	r3, fp, #43
 6245 0594 082B     		cmp	r3, #8
 6246 0596 65D8     		bhi	.L821
 6247 0598 01A2     		adr	r2, .L822
 6248 059a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6249 059e 00BF     		.p2align 2
 6250              	.L822:
 6251 05a0 C5050000 		.word	.L827+1
 6252 05a4 C5050000 		.word	.L827+1
 6253 05a8 65060000 		.word	.L821+1
 6254 05ac F5050000 		.word	.L756+1
 6255 05b0 DB050000 		.word	.L755+1
 6256 05b4 09060000 		.word	.L752+1
 6257 05b8 9D010000 		.word	.L574+1
 6258 05bc A9000000 		.word	.L565+1
 6259 05c0 A9000000 		.word	.L565+1
 6260              		.p2align 1
 6261              	.L827:
3113:src/keys.c    **** 	set_window(c);
 6262              		.loc 1 3113 7 view .LVU2020
3113:src/keys.c    **** 	set_window(c);
ARM GAS  /tmp/ccQmaUTi.s 			page 198


 6263              		.loc 1 3113 12 is_stmt 0 view .LVU2021
 6264 05c4 FFF7FEFF 		bl	is_bad_cmdline
 6265              	.LVL483:
3113:src/keys.c    **** 	set_window(c);
 6266              		.loc 1 3113 10 view .LVU2022
 6267 05c8 0346     		mov	r3, r0
 6268 05ca 0028     		cmp	r0, #0
 6269 05cc 7FF46CAD 		bne	.L565
3114:src/keys.c    ****       break;
 6270              		.loc 1 3114 2 is_stmt 1 view .LVU2023
 6271 05d0 5846     		mov	r0, fp
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 6272              		.loc 1 2929 7 is_stmt 0 view .LVU2024
 6273 05d2 1F46     		mov	r7, r3
3114:src/keys.c    ****       break;
 6274              		.loc 1 3114 2 view .LVU2025
 6275 05d4 FFF7FEFF 		bl	set_window
 6276              	.LVL484:
 6277 05d8 66E5     		b	.L565
 6278              	.LVL485:
 6279              	.L755:
3094:src/keys.c    ****       break;
 6280              		.loc 1 3094 7 is_stmt 1 view .LVU2026
 6281 05da 4FF0FF30 		mov	r0, #-1
 6282 05de FFF7FEFF 		bl	xeq_sst_bst
 6283              	.LVL486:
3095:src/keys.c    **** 
 6284              		.loc 1 3095 7 view .LVU2027
 6285 05e2 4FF02F0B 		mov	fp, #47
 6286 05e6 5FE5     		b	.L565
 6287              	.LVL487:
 6288              	.L744:
 6289              	.LBB1235:
 6290              	.LBB1182:
 6291              	.LBB737:
 6292              	.LBB738:
1447:src/keys.c    **** 			if ( State2.runmode ) {
 6293              		.loc 1 1447 3 view .LVU2028
1447:src/keys.c    **** 			if ( State2.runmode ) {
 6294              		.loc 1 1447 6 is_stmt 0 view .LVU2029
 6295 05e8 0028     		cmp	r0, #0
 6296 05ea 40F0BF86 		bne	.L740
1448:src/keys.c    **** 				// Alpha scroll right
 6297              		.loc 1 1448 4 is_stmt 1 view .LVU2030
1448:src/keys.c    **** 				// Alpha scroll right
 6298              		.loc 1 1448 7 is_stmt 0 view .LVU2031
 6299 05ee 5806     		lsls	r0, r3, #25
 6300              	.LVL488:
1448:src/keys.c    **** 				// Alpha scroll right
 6301              		.loc 1 1448 7 view .LVU2032
 6302 05f0 00F1E980 		bmi	.L1060
 6303              	.LVL489:
 6304              	.L756:
1448:src/keys.c    **** 				// Alpha scroll right
 6305              		.loc 1 1448 7 view .LVU2033
 6306              	.LBE738:
 6307              	.LBE737:
ARM GAS  /tmp/ccQmaUTi.s 			page 199


 6308              	.LBE1182:
 6309              	.LBE1235:
3088:src/keys.c    ****       OpCodeDisplayPending = 0;
 6310              		.loc 1 3088 7 is_stmt 1 view .LVU2034
3088:src/keys.c    ****       OpCodeDisplayPending = 0;
 6311              		.loc 1 3088 14 is_stmt 0 view .LVU2035
 6312 05f4 1749     		ldr	r1, .L1149+52
3089:src/keys.c    ****       xeq_sst_bst(0);
 6313              		.loc 1 3089 28 view .LVU2036
 6314 05f6 184A     		ldr	r2, .L1149+56
3088:src/keys.c    ****       OpCodeDisplayPending = 0;
 6315              		.loc 1 3088 14 view .LVU2037
 6316 05f8 2E23     		movs	r3, #46
3089:src/keys.c    ****       xeq_sst_bst(0);
 6317              		.loc 1 3089 28 view .LVU2038
 6318 05fa 0020     		movs	r0, #0
3088:src/keys.c    ****       OpCodeDisplayPending = 0;
 6319              		.loc 1 3088 14 view .LVU2039
 6320 05fc 0B60     		str	r3, [r1]
3089:src/keys.c    ****       xeq_sst_bst(0);
 6321              		.loc 1 3089 7 is_stmt 1 view .LVU2040
3091:src/keys.c    **** 
 6322              		.loc 1 3091 7 is_stmt 0 view .LVU2041
 6323 05fe 9B46     		mov	fp, r3
3089:src/keys.c    ****       xeq_sst_bst(0);
 6324              		.loc 1 3089 28 view .LVU2042
 6325 0600 1060     		str	r0, [r2]
3090:src/keys.c    ****       break;
 6326              		.loc 1 3090 7 is_stmt 1 view .LVU2043
 6327 0602 FFF7FEFF 		bl	xeq_sst_bst
 6328              	.LVL490:
3091:src/keys.c    **** 
 6329              		.loc 1 3091 7 view .LVU2044
 6330 0606 4FE5     		b	.L565
 6331              	.L752:
3098:src/keys.c    **** 	delprog();
 6332              		.loc 1 3098 7 view .LVU2045
3098:src/keys.c    **** 	delprog();
 6333              		.loc 1 3098 11 is_stmt 0 view .LVU2046
 6334 0608 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3098:src/keys.c    **** 	delprog();
 6335              		.loc 1 3098 10 view .LVU2047
 6336 060c 5A06     		lsls	r2, r3, #25
 6337 060e 40F1EC80 		bpl	.L828
3100:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6338              		.loc 1 3100 12 is_stmt 1 view .LVU2048
3100:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6339              		.loc 1 3100 15 is_stmt 0 view .LVU2049
 6340 0612 1C07     		lsls	r4, r3, #28
 6341 0614 00F10C82 		bmi	.L829
 6342              	.L1055:
 6343              	.LBB1236:
3103:src/keys.c    ****       }
 6344              		.loc 1 3103 9 view .LVU2050
 6345 0618 4FF0300B 		mov	fp, #48
 6346 061c 44E5     		b	.L565
 6347              	.L1150:
ARM GAS  /tmp/ccQmaUTi.s 			page 200


 6348 061e 00BF     		.align	2
 6349              	.L1149:
 6350 0620 00000000 		.word	main_ram
 6351 0624 00000000 		.word	.LANCHOR18
 6352 0628 00000000 		.word	.LANCHOR22
 6353 062c 00000000 		.word	JustDisplayed
 6354 0630 00000000 		.word	StateWhileOn
 6355 0634 00000000 		.word	DispMsg
 6356 0638 0C000000 		.word	.LC2
 6357 063c 00000000 		.word	Running
 6358 0640 00000000 		.word	ShowRPN
 6359 0644 00000000 		.word	WasDataEntry
 6360 0648 04000000 		.word	.LC1
 6361 064c 00000000 		.word	.LANCHOR13
 6362 0650 00000000 		.word	NonProgrammable
 6363 0654 00000000 		.word	OpCode
 6364 0658 00000000 		.word	OpCodeDisplayPending
 6365 065c 00000000 		.word	.LANCHOR1
 6366 0660 00000000 		.word	.LANCHOR9
 6367              	.LVL491:
 6368              	.L821:
3103:src/keys.c    ****       }
 6369              		.loc 1 3103 9 view .LVU2051
 6370              	.LBE1236:
3122:src/keys.c    **** 	NonProgrammable = 0;
 6371              		.loc 1 3122 7 is_stmt 1 view .LVU2052
3122:src/keys.c    **** 	NonProgrammable = 0;
 6372              		.loc 1 3122 11 is_stmt 0 view .LVU2053
 6373 0664 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3122:src/keys.c    **** 	NonProgrammable = 0;
 6374              		.loc 1 3122 10 view .LVU2054
 6375 0668 5C06     		lsls	r4, r3, #25
 6376 066a 40F13E81 		bpl	.L835
 6377 066e CA4A     		ldr	r2, .L1151
 6378 0670 5846     		mov	r0, fp
 6379              	.LVL492:
 6380              	.L836:
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6381              		.loc 1 3123 2 is_stmt 1 view .LVU2055
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6382              		.loc 1 3123 18 is_stmt 0 view .LVU2056
 6383 0672 0023     		movs	r3, #0
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6384              		.loc 1 3124 5 view .LVU2057
 6385 0674 1428     		cmp	r0, #20
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6386              		.loc 1 3123 18 view .LVU2058
 6387 0676 1360     		str	r3, [r2]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6388              		.loc 1 3124 2 is_stmt 1 view .LVU2059
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6389              		.loc 1 3124 5 is_stmt 0 view .LVU2060
 6390 0678 3FF630AF 		bhi	.L832
3125:src/keys.c    **** 	    // Data entry key
 6391              		.loc 1 3125 4 is_stmt 1 view .LVU2061
3125:src/keys.c    **** 	    // Data entry key
 6392              		.loc 1 3125 7 is_stmt 0 view .LVU2062
ARM GAS  /tmp/ccQmaUTi.s 			page 201


 6393 067c BBF1000F 		cmp	fp, #0
 6394 0680 05D1     		bne	.L834
3125:src/keys.c    **** 	    // Data entry key
 6395              		.loc 1 3125 38 discriminator 1 view .LVU2063
 6396 0682 FFF7FEFF 		bl	is_bad_cmdline
 6397              	.LVL493:
3125:src/keys.c    **** 	    // Data entry key
 6398              		.loc 1 3125 34 discriminator 1 view .LVU2064
 6399 0686 0028     		cmp	r0, #0
 6400 0688 40F05F82 		bne	.L891
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6401              		.loc 1 3124 32 view .LVU2065
 6402 068c 5846     		mov	r0, fp
 6403              	.L834:
3128:src/keys.c    **** #endif
 6404              		.loc 1 3128 6 is_stmt 1 view .LVU2066
3130:src/keys.c    **** 	    xeq(c);
 6405              		.loc 1 3130 37 is_stmt 0 view .LVU2067
 6406 068e 98F81C70 		ldrb	r7, [r8, #28]	@ zero_extendqisi2
3128:src/keys.c    **** #endif
 6407              		.loc 1 3128 19 view .LVU2068
 6408 0692 0123     		movs	r3, #1
 6409 0694 C9F80030 		str	r3, [r9]
3130:src/keys.c    **** 	    xeq(c);
 6410              		.loc 1 3130 6 is_stmt 1 view .LVU2069
3130:src/keys.c    **** 	    xeq(c);
 6411              		.loc 1 3130 37 is_stmt 0 view .LVU2070
 6412 0698 B7FA87F7 		clz	r7, r7
3131:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6413              		.loc 1 3131 6 view .LVU2071
 6414 069c FFF7FEFF 		bl	xeq
 6415              	.LVL494:
3132:src/keys.c    **** 	  }
 6416              		.loc 1 3132 38 view .LVU2072
 6417 06a0 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
3130:src/keys.c    **** 	    xeq(c);
 6418              		.loc 1 3130 37 view .LVU2073
 6419 06a4 7F09     		lsrs	r7, r7, #5
 6420              	.LVL495:
3131:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6421              		.loc 1 3131 6 is_stmt 1 view .LVU2074
3132:src/keys.c    **** 	  }
 6422              		.loc 1 3132 6 view .LVU2075
3132:src/keys.c    **** 	  }
 6423              		.loc 1 3132 20 is_stmt 0 view .LVU2076
 6424 06a6 002B     		cmp	r3, #0
 6425 06a8 08BF     		it	eq
 6426 06aa 0127     		moveq	r7, #1
 6427              	.LVL496:
3132:src/keys.c    **** 	  }
 6428              		.loc 1 3132 20 view .LVU2077
 6429 06ac FCE4     		b	.L565
 6430              	.LVL497:
 6431              	.L819:
 6432              	.LBB1237:
 6433              	.LBB1183:
 6434              	.LBB794:
ARM GAS  /tmp/ccQmaUTi.s 			page 202


 6435              	.LBB670:
 812:src/keys.c    **** #else
 6436              		.loc 1 812 4 is_stmt 1 view .LVU2078
 812:src/keys.c    **** #else
 6437              		.loc 1 812 17 is_stmt 0 view .LVU2079
 6438 06ae 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 6439 06b2 43F00203 		orr	r3, r3, #2
 6440 06b6 88F81530 		strb	r3, [r8, #21]
 818:src/keys.c    **** 
 6441              		.loc 1 818 4 is_stmt 1 view .LVU2080
 836:src/keys.c    **** }
 6442              		.loc 1 836 9 is_stmt 0 view .LVU2081
 6443 06ba 4FF0330B 		mov	fp, #51
 818:src/keys.c    **** 
 6444              		.loc 1 818 4 view .LVU2082
 6445 06be F3E4     		b	.L565
 6446              	.L1102:
 729:src/keys.c    **** 	  case K00:
 6447              		.loc 1 729 4 is_stmt 1 view .LVU2083
 6448 06c0 122C     		cmp	r4, #18
 6449 06c2 0BD8     		bhi	.L802
 6450 06c4 DFE804F0 		tbb	[pc, r4]
 6451              	.L804:
 6452 06c8 C3       		.byte	(.L807-.L804)/2
 6453 06c9 B7       		.byte	(.L806-.L804)/2
 6454 06ca 0A       		.byte	(.L802-.L804)/2
 6455 06cb A7       		.byte	(.L805-.L804)/2
 6456 06cc 0A       		.byte	(.L802-.L804)/2
 6457 06cd 0A       		.byte	(.L802-.L804)/2
 6458 06ce 0A       		.byte	(.L802-.L804)/2
 6459 06cf 0A       		.byte	(.L802-.L804)/2
 6460 06d0 0A       		.byte	(.L802-.L804)/2
 6461 06d1 0A       		.byte	(.L802-.L804)/2
 6462 06d2 0A       		.byte	(.L802-.L804)/2
 6463 06d3 0A       		.byte	(.L802-.L804)/2
 6464 06d4 0A       		.byte	(.L802-.L804)/2
 6465 06d5 0A       		.byte	(.L802-.L804)/2
 6466 06d6 0A       		.byte	(.L802-.L804)/2
 6467 06d7 0A       		.byte	(.L802-.L804)/2
 6468 06d8 0A       		.byte	(.L802-.L804)/2
 6469 06d9 0A       		.byte	(.L802-.L804)/2
 6470 06da 96       		.byte	(.L803-.L804)/2
 6471 06db 00       		.p2align 1
 6472              	.L802:
 759:src/keys.c    **** 	  }
 6473              		.loc 1 759 12 view .LVU2084
 764:src/keys.c    **** #ifdef DM42
 6474              		.loc 1 764 2 view .LVU2085
 6475 06dc 033C     		subs	r4, r4, #3
 6476 06de 2A2C     		cmp	r4, #42
 6477 06e0 3FF656AF 		bhi	.L594
 6478 06e4 01A2     		adr	r2, .L813
 6479 06e6 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 6480 06ea 00BF     		.p2align 2
 6481              	.L813:
 6482 06ec 65080000 		.word	.L816+1
 6483 06f0 91050000 		.word	.L594+1
ARM GAS  /tmp/ccQmaUTi.s 			page 203


 6484 06f4 91050000 		.word	.L594+1
 6485 06f8 CD070000 		.word	.L812+1
 6486 06fc CD070000 		.word	.L812+1
 6487 0700 91050000 		.word	.L594+1
 6488 0704 91050000 		.word	.L594+1
 6489 0708 91050000 		.word	.L594+1
 6490 070c 91050000 		.word	.L594+1
 6491 0710 91050000 		.word	.L594+1
 6492 0714 91050000 		.word	.L594+1
 6493 0718 91050000 		.word	.L594+1
 6494 071c 91050000 		.word	.L594+1
 6495 0720 E3070000 		.word	.L815+1
 6496 0724 91050000 		.word	.L594+1
 6497 0728 CD070000 		.word	.L812+1
 6498 072c 91050000 		.word	.L594+1
 6499 0730 91050000 		.word	.L594+1
 6500 0734 91050000 		.word	.L594+1
 6501 0738 91050000 		.word	.L594+1
 6502 073c 91050000 		.word	.L594+1
 6503 0740 91050000 		.word	.L594+1
 6504 0744 91050000 		.word	.L594+1
 6505 0748 91050000 		.word	.L594+1
 6506 074c 91050000 		.word	.L594+1
 6507 0750 91050000 		.word	.L594+1
 6508 0754 91050000 		.word	.L594+1
 6509 0758 91050000 		.word	.L594+1
 6510 075c 91050000 		.word	.L594+1
 6511 0760 91050000 		.word	.L594+1
 6512 0764 91050000 		.word	.L594+1
 6513 0768 91050000 		.word	.L594+1
 6514 076c 91050000 		.word	.L594+1
 6515 0770 91050000 		.word	.L594+1
 6516 0774 91050000 		.word	.L594+1
 6517 0778 91050000 		.word	.L594+1
 6518 077c 91050000 		.word	.L594+1
 6519 0780 91050000 		.word	.L594+1
 6520 0784 91050000 		.word	.L594+1
 6521 0788 91050000 		.word	.L594+1
 6522 078c 91050000 		.word	.L594+1
 6523 0790 71080000 		.word	.L814+1
 6524 0794 C7070000 		.word	.L1060+1
 6525              	.LVL498:
 6526              		.p2align 1
 6527              	.L722:
 764:src/keys.c    **** #ifdef DM42
 6528              		.loc 1 764 2 is_stmt 0 view .LVU2086
 6529              	.LBE670:
 6530              	.LBE794:
 6531              	.LBB795:
 6532              	.LBB796:
2694:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6533              		.loc 1 2694 3 is_stmt 1 view .LVU2087
2694:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6534              		.loc 1 2694 13 is_stmt 0 view .LVU2088
 6535 0798 B8F80830 		ldrh	r3, [r8, #8]
2694:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6536              		.loc 1 2694 6 view .LVU2089
ARM GAS  /tmp/ccQmaUTi.s 			page 204


 6537 079c 002B     		cmp	r3, #0
 6538 079e 01F0A882 		beq	.L723
2695:src/keys.c    **** 				State2.digval = global_regs();
 6539              		.loc 1 2695 4 is_stmt 1 view .LVU2090
2695:src/keys.c    **** 				State2.digval = global_regs();
 6540              		.loc 1 2695 8 is_stmt 0 view .LVU2091
 6541 07a2 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2695:src/keys.c    **** 				State2.digval = global_regs();
 6542              		.loc 1 2695 7 view .LVU2092
 6543 07a6 D207     		lsls	r2, r2, #31
 6544 07a8 02D4     		bmi	.L724
2695:src/keys.c    **** 				State2.digval = global_regs();
 6545              		.loc 1 2695 23 view .LVU2093
 6546 07aa 642B     		cmp	r3, #100
 6547 07ac 01F0A782 		beq	.L1109
 6548              	.LVL499:
 6549              	.L724:
2697:src/keys.c    **** 		}
 6550              		.loc 1 2697 4 is_stmt 1 view .LVU2094
 6551 07b0 B8F80830 		ldrh	r3, [r8, #8]
 6552 07b4 013B     		subs	r3, r3, #1
 6553              	.L1052:
2697:src/keys.c    **** 		}
 6554              		.loc 1 2697 4 is_stmt 0 view .LVU2095
 6555 07b6 A8F80830 		strh	r3, [r8, #8]	@ movhi
 6556              	.LVL500:
 6557              	.L715:
2749:src/keys.c    **** 	return STATE_UNFINISHED;
 6558              		.loc 1 2749 2 is_stmt 1 view .LVU2096
2749:src/keys.c    **** 	return STATE_UNFINISHED;
 6559              		.loc 1 2749 16 is_stmt 0 view .LVU2097
 6560 07ba 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6561 07be 6FF3C503 		bfc	r3, #3, #3
 6562 07c2 88F81430 		strb	r3, [r8, #20]
 6563              	.LVL501:
 6564              	.L1060:
2750:src/keys.c    **** }
 6565              		.loc 1 2750 2 is_stmt 1 view .LVU2098
2750:src/keys.c    **** }
 6566              		.loc 1 2750 9 is_stmt 0 view .LVU2099
 6567 07c6 4FF0330B 		mov	fp, #51
 6568 07ca 6DE4     		b	.L565
 6569              	.L812:
 6570              	.LBE796:
 6571              	.LBE795:
 6572              	.LBB827:
 6573              	.LBB671:
 830:src/keys.c    **** 		break;
 6574              		.loc 1 830 3 is_stmt 1 view .LVU2100
 6575              	.LVL502:
 6576              	.LBB668:
 6577              	.LBI668:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 6578              		.loc 1 501 13 view .LVU2101
 6579              	.LBB669:
 502:src/keys.c    **** 		return;
 6580              		.loc 1 502 2 view .LVU2102
ARM GAS  /tmp/ccQmaUTi.s 			page 205


 502:src/keys.c    **** 		return;
 6581              		.loc 1 502 6 is_stmt 0 view .LVU2103
 6582 07cc FFF7FEFF 		bl	is_bad_cmdline
 6583              	.LVL503:
 502:src/keys.c    **** 		return;
 6584              		.loc 1 502 5 view .LVU2104
 6585 07d0 0446     		mov	r4, r0
 6586 07d2 0028     		cmp	r0, #0
 6587 07d4 F7D1     		bne	.L1060
 6588 07d6 5FFA8AF0 		uxtb	r0, r10
 6589 07da FFF7FEFF 		bl	init_arg.part.0
 6590              	.LVL504:
 6591              	.LBE669:
 6592              	.LBE668:
 6593              	.LBE671:
 6594              	.LBE827:
 6595              	.LBE1183:
 6596              	.LBE1237:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 6597              		.loc 1 2929 7 view .LVU2105
 6598 07de 2746     		mov	r7, r4
 6599 07e0 F1E7     		b	.L1060
 6600              	.LVL505:
 6601              	.L815:
 6602              	.LBB1238:
 6603              	.LBB1184:
 6604              	.LBB828:
 6605              	.LBB672:
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6606              		.loc 1 821 3 is_stmt 1 view .LVU2106
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6607              		.loc 1 821 6 is_stmt 0 view .LVU2107
 6608 07e2 8806     		lsls	r0, r1, #26
 6609 07e4 EFD4     		bmi	.L1060
 823:src/keys.c    **** 			return op;
 6610              		.loc 1 823 3 is_stmt 1 view .LVU2108
 823:src/keys.c    **** 			return op;
 6611              		.loc 1 823 6 is_stmt 0 view .LVU2109
 6612 07e6 5906     		lsls	r1, r3, #25
 6613 07e8 5AD4     		bmi	.L820
 6614              	.LVL506:
 6615              	.L828:
 823:src/keys.c    **** 			return op;
 6616              		.loc 1 823 6 view .LVU2110
 6617              	.LBE672:
 6618              	.LBE828:
 6619              	.LBE1184:
 6620              	.LBE1238:
3099:src/keys.c    ****       else if (State2.alphas) {
 6621              		.loc 1 3099 2 is_stmt 1 view .LVU2111
 6622 07ea FFF7FEFF 		bl	delprog
 6623              	.LVL507:
 6624 07ee 4FF0300B 		mov	fp, #48
 6625 07f2 59E4     		b	.L565
 6626              	.LVL508:
 6627              	.L803:
 6628              	.LBB1239:
ARM GAS  /tmp/ccQmaUTi.s 			page 206


 6629              	.LBB1185:
 6630              	.LBB829:
 6631              	.LBB673:
 755:src/keys.c    **** 	    if (intltr(15)) {
 6632              		.loc 1 755 6 view .LVU2112
 756:src/keys.c    **** 	      return op_int;
 6633              		.loc 1 756 6 view .LVU2113
 756:src/keys.c    **** 	      return op_int;
 6634              		.loc 1 756 10 is_stmt 0 view .LVU2114
 6635 07f4 0F20     		movs	r0, #15
 6636 07f6 FFF7FEFF 		bl	intltr
 6637              	.LVL509:
 756:src/keys.c    **** 	      return op_int;
 6638              		.loc 1 756 9 view .LVU2115
 6639 07fa 0028     		cmp	r0, #0
 6640 07fc E6D0     		beq	.L812
 6641              	.LVL510:
 756:src/keys.c    **** 	      return op_int;
 6642              		.loc 1 756 9 view .LVU2116
 6643              	.LBE673:
 6644              	.LBE829:
 6645              	.LBE1185:
 6646              	.LBE1239:
3122:src/keys.c    **** 	NonProgrammable = 0;
 6647              		.loc 1 3122 7 is_stmt 1 view .LVU2117
3122:src/keys.c    **** 	NonProgrammable = 0;
 6648              		.loc 1 3122 11 is_stmt 0 view .LVU2118
 6649 07fe 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3122:src/keys.c    **** 	NonProgrammable = 0;
 6650              		.loc 1 3122 10 view .LVU2119
 6651 0802 5806     		lsls	r0, r3, #25
 6652 0804 41F1EF81 		bpl	.L887
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6653              		.loc 1 3123 2 is_stmt 1 view .LVU2120
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6654              		.loc 1 3123 18 is_stmt 0 view .LVU2121
 6655 0808 634B     		ldr	r3, .L1151
 6656 080a 0022     		movs	r2, #0
 6657              	.LBB1240:
 6658              	.LBB1186:
 6659              	.LBB830:
 6660              	.LBB674:
 757:src/keys.c    **** 	    }
 6661              		.loc 1 757 15 view .LVU2122
 6662 080c 4FF0140B 		mov	fp, #20
 6663              	.LBE674:
 6664              	.LBE830:
 6665              	.LBE1186:
 6666              	.LBE1240:
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6667              		.loc 1 3123 18 view .LVU2123
 6668 0810 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6669              		.loc 1 3124 2 is_stmt 1 view .LVU2124
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6670              		.loc 1 3124 32 is_stmt 0 view .LVU2125
 6671 0812 5846     		mov	r0, fp
ARM GAS  /tmp/ccQmaUTi.s 			page 207


 6672 0814 3BE7     		b	.L834
 6673              	.LVL511:
 6674              	.L805:
 6675              	.LBB1241:
 6676              	.LBB1187:
 6677              	.LBB831:
 6678              	.LBB675:
 747:src/keys.c    **** 	    if (intltr(12)) {
 6679              		.loc 1 747 6 is_stmt 1 view .LVU2126
 748:src/keys.c    **** 	      return op_int;
 6680              		.loc 1 748 6 view .LVU2127
 748:src/keys.c    **** 	      return op_int;
 6681              		.loc 1 748 10 is_stmt 0 view .LVU2128
 6682 0816 0C20     		movs	r0, #12
 6683 0818 FFF7FEFF 		bl	intltr
 6684              	.LVL512:
 748:src/keys.c    **** 	      return op_int;
 6685              		.loc 1 748 9 view .LVU2129
 6686 081c 10B3     		cbz	r0, .L816
 6687              	.LVL513:
 748:src/keys.c    **** 	      return op_int;
 6688              		.loc 1 748 9 view .LVU2130
 6689              	.LBE675:
 6690              	.LBE831:
 6691              	.LBE1187:
 6692              	.LBE1241:
3122:src/keys.c    **** 	NonProgrammable = 0;
 6693              		.loc 1 3122 7 is_stmt 1 view .LVU2131
3122:src/keys.c    **** 	NonProgrammable = 0;
 6694              		.loc 1 3122 11 is_stmt 0 view .LVU2132
 6695 081e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3122:src/keys.c    **** 	NonProgrammable = 0;
 6696              		.loc 1 3122 10 view .LVU2133
 6697 0822 5C06     		lsls	r4, r3, #25
 6698 0824 41F14282 		bpl	.L886
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6699              		.loc 1 3123 2 is_stmt 1 view .LVU2134
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6700              		.loc 1 3123 18 is_stmt 0 view .LVU2135
 6701 0828 5B4B     		ldr	r3, .L1151
 6702 082a 0022     		movs	r2, #0
 6703              	.LBB1242:
 6704              	.LBB1188:
 6705              	.LBB832:
 6706              	.LBB676:
 749:src/keys.c    **** 	    }
 6707              		.loc 1 749 15 view .LVU2136
 6708 082c 4FF0110B 		mov	fp, #17
 6709              	.LBE676:
 6710              	.LBE832:
 6711              	.LBE1188:
 6712              	.LBE1242:
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6713              		.loc 1 3123 18 view .LVU2137
 6714 0830 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6715              		.loc 1 3124 2 is_stmt 1 view .LVU2138
ARM GAS  /tmp/ccQmaUTi.s 			page 208


3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6716              		.loc 1 3124 32 is_stmt 0 view .LVU2139
 6717 0832 5846     		mov	r0, fp
 6718 0834 2BE7     		b	.L834
 6719              	.LVL514:
 6720              	.L806:
 6721              	.LBB1243:
 6722              	.LBB1189:
 6723              	.LBB833:
 6724              	.LBB677:
 739:src/keys.c    **** 	    if (intltr(11)) {
 6725              		.loc 1 739 6 is_stmt 1 view .LVU2140
 740:src/keys.c    **** 	      return op;
 6726              		.loc 1 740 6 view .LVU2141
 740:src/keys.c    **** 	      return op;
 6727              		.loc 1 740 10 is_stmt 0 view .LVU2142
 6728 0836 0B20     		movs	r0, #11
 6729 0838 FFF7FEFF 		bl	intltr
 6730              	.LVL515:
 740:src/keys.c    **** 	      return op;
 6731              		.loc 1 740 9 view .LVU2143
 6732 083c 0028     		cmp	r0, #0
 6733 083e 41F08580 		bne	.L809
 744:src/keys.c    **** 	    }
 6734              		.loc 1 744 8 is_stmt 1 view .LVU2144
 744:src/keys.c    **** 	    }
 6735              		.loc 1 744 15 is_stmt 0 view .LVU2145
 6736 0842 1021     		movs	r1, #16
 6737 0844 0120     		movs	r0, #1
 6738 0846 FFF7FEFF 		bl	check_f_key
 6739              	.LVL516:
 6740 084a 8346     		mov	fp, r0
 6741 084c A0E6     		b	.L594
 6742              	.LVL517:
 6743              	.L807:
 731:src/keys.c    **** 	    if (intltr(10)) {
 6744              		.loc 1 731 6 is_stmt 1 view .LVU2146
 732:src/keys.c    **** 	      return op;
 6745              		.loc 1 732 6 view .LVU2147
 732:src/keys.c    **** 	      return op;
 6746              		.loc 1 732 10 is_stmt 0 view .LVU2148
 6747 084e 0A20     		movs	r0, #10
 6748 0850 FFF7FEFF 		bl	intltr
 6749              	.LVL518:
 732:src/keys.c    **** 	      return op;
 6750              		.loc 1 732 9 view .LVU2149
 6751 0854 0028     		cmp	r0, #0
 6752 0856 41F06C80 		bne	.L808
 736:src/keys.c    **** 	    }
 6753              		.loc 1 736 8 is_stmt 1 view .LVU2150
 736:src/keys.c    **** 	    }
 6754              		.loc 1 736 15 is_stmt 0 view .LVU2151
 6755 085a 0F21     		movs	r1, #15
 6756 085c FFF7FEFF 		bl	check_f_key
 6757              	.LVL519:
 6758 0860 8346     		mov	fp, r0
 6759 0862 95E6     		b	.L594
ARM GAS  /tmp/ccQmaUTi.s 			page 209


 6760              	.LVL520:
 6761              	.L816:
 771:src/keys.c    **** #else
 6762              		.loc 1 771 3 is_stmt 1 view .LVU2152
 771:src/keys.c    **** #else
 6763              		.loc 1 771 10 is_stmt 0 view .LVU2153
 6764 0864 5146     		mov	r1, r10
 6765 0866 0220     		movs	r0, #2
 6766 0868 FFF7FEFF 		bl	check_f_key
 6767              	.LVL521:
 6768 086c 8346     		mov	fp, r0
 6769 086e 8FE6     		b	.L594
 6770              	.L814:
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6771              		.loc 1 795 3 is_stmt 1 view .LVU2154
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6772              		.loc 1 795 7 is_stmt 0 view .LVU2155
 6773 0870 FFF7FEFF 		bl	is_bad_cmdline
 6774              	.LVL522:
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6775              		.loc 1 795 6 view .LVU2156
 6776 0874 0446     		mov	r4, r0
 6777 0876 0028     		cmp	r0, #0
 6778 0878 A5D1     		bne	.L1060
 797:src/keys.c    **** 		State2.arrow = 1;
 6779              		.loc 1 797 3 is_stmt 1 view .LVU2157
 6780 087a FFF7FEFF 		bl	process_cmdline_set_lift
 6781              	.LVL523:
 798:src/keys.c    **** #ifdef DM42
 6782              		.loc 1 798 3 view .LVU2158
 798:src/keys.c    **** #ifdef DM42
 6783              		.loc 1 798 16 is_stmt 0 view .LVU2159
 6784 087e 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 800:src/keys.c    **** 		display_current_menu ();
 6785              		.loc 1 800 3 view .LVU2160
 6786 0882 0920     		movs	r0, #9
 798:src/keys.c    **** #ifdef DM42
 6787              		.loc 1 798 16 view .LVU2161
 6788 0884 43F00403 		orr	r3, r3, #4
 6789 0888 88F81530 		strb	r3, [r8, #21]
 800:src/keys.c    **** 		display_current_menu ();
 6790              		.loc 1 800 3 is_stmt 1 view .LVU2162
 6791 088c FFF7FEFF 		bl	set_menu
 6792              	.LVL524:
 801:src/keys.c    **** 		lcd_refresh ();
 6793              		.loc 1 801 3 view .LVU2163
 6794 0890 FFF7FEFF 		bl	display_current_menu
 6795              	.LVL525:
 802:src/keys.c    **** #else
 6796              		.loc 1 802 3 view .LVU2164
 6797 0894 414B     		ldr	r3, .L1151+4
 6798 0896 9847     		blx	r3
 6799              	.LVL526:
 806:src/keys.c    **** 
 6800              		.loc 1 806 3 view .LVU2165
 6801              	.LBE677:
 6802              	.LBE833:
ARM GAS  /tmp/ccQmaUTi.s 			page 210


 6803              	.LBE1189:
 6804              	.LBE1243:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 6805              		.loc 1 2929 7 is_stmt 0 view .LVU2166
 6806 0898 2746     		mov	r7, r4
 6807              	.LBB1244:
 6808              	.LBB1190:
 6809              	.LBB834:
 6810              	.LBB678:
 836:src/keys.c    **** }
 6811              		.loc 1 836 9 view .LVU2167
 6812 089a 4FF0330B 		mov	fp, #51
 806:src/keys.c    **** 
 6813              		.loc 1 806 3 view .LVU2168
 6814 089e 03E4     		b	.L565
 6815              	.L820:
 6816              	.LVL527:
 806:src/keys.c    **** 
 6817              		.loc 1 806 3 view .LVU2169
 6818              	.LBE678:
 6819              	.LBE834:
 6820              	.LBE1190:
 6821              	.LBE1244:
3086:src/keys.c    ****     case STATE_SST:
 6822              		.loc 1 3086 5 is_stmt 1 view .LVU2170
 6823 08a0 AAF12B03 		sub	r3, r10, #43
 6824 08a4 082B     		cmp	r3, #8
 6825 08a6 15D8     		bhi	.L848
 6826 08a8 01A2     		adr	r2, .L849
 6827 08aa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6828 08ae 00BF     		.p2align 2
 6829              	.L849:
 6830 08b0 C5050000 		.word	.L827+1
 6831 08b4 C5050000 		.word	.L827+1
 6832 08b8 D5080000 		.word	.L848+1
 6833 08bc F5050000 		.word	.L756+1
 6834 08c0 DB050000 		.word	.L755+1
 6835 08c4 09060000 		.word	.L752+1
 6836 08c8 9D010000 		.word	.L574+1
 6837 08cc A9000000 		.word	.L565+1
 6838 08d0 A9000000 		.word	.L565+1
 6839              		.p2align 1
 6840              	.L848:
 6841 08d4 304A     		ldr	r2, .L1151
 6842 08d6 5046     		mov	r0, r10
 6843 08d8 CBE6     		b	.L836
 6844              	.LVL528:
 6845              	.L1080:
 6846              	.LBB1245:
 6847              	.LBB1191:
2800:src/keys.c    **** 		CmdLineLength = 0;
 6848              		.loc 1 2800 26 is_stmt 0 view .LVU2171
 6849 08da FFF7FEFF 		bl	keyticks
 6850              	.LVL529:
2800:src/keys.c    **** 		CmdLineLength = 0;
 6851              		.loc 1 2800 23 view .LVU2172
 6852 08de 1E28     		cmp	r0, #30
ARM GAS  /tmp/ccQmaUTi.s 			page 211


2801:src/keys.c    **** 	/*
 6853              		.loc 1 2801 3 is_stmt 1 view .LVU2173
2801:src/keys.c    **** 	/*
 6854              		.loc 1 2801 17 is_stmt 0 view .LVU2174
 6855 08e0 C4BF     		itt	gt
 6856 08e2 0023     		movgt	r3, #0
 6857 08e4 88F81C30 		strbgt	r3, [r8, #28]
 6858 08e8 8BE4     		b	.L581
 6859              	.LVL530:
 6860              	.L835:
2801:src/keys.c    **** 	/*
 6861              		.loc 1 2801 17 view .LVU2175
 6862              	.LBE1191:
 6863              	.LBE1245:
3122:src/keys.c    **** 	NonProgrammable = 0;
 6864              		.loc 1 3122 26 view .LVU2176
 6865 08ea 2B4A     		ldr	r2, .L1151
 6866 08ec 1368     		ldr	r3, [r2]
 6867 08ee 5846     		mov	r0, fp
 6868 08f0 002B     		cmp	r3, #0
 6869 08f2 7FF4BEAE 		bne	.L836
 6870              	.LVL531:
 6871              	.L837:
3144:src/keys.c    ****       }
 6872              		.loc 1 3144 2 is_stmt 1 view .LVU2177
 6873 08f6 FFF7FEFF 		bl	stoprog
 6874              	.LVL532:
 6875 08fa FFF7D5BB 		b	.L565
 6876              	.LVL533:
 6877              	.L567:
3064:src/keys.c    **** 	}
 6878              		.loc 1 3064 4 view .LVU2178
 6879              		.loc 1 3163 1 is_stmt 0 view .LVU2179
 6880 08fe 03B0     		add	sp, sp, #12
 6881              		.cfi_remember_state
 6882              		.cfi_def_cfa_offset 36
 6883              		@ sp needed
 6884 0900 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6885              		.cfi_restore 14
 6886              		.cfi_restore 11
 6887              		.cfi_restore 10
 6888              		.cfi_restore 9
 6889              		.cfi_restore 8
 6890              		.cfi_restore 7
 6891              		.cfi_restore 6
 6892              		.cfi_restore 5
 6893              		.cfi_restore 4
 6894              		.cfi_def_cfa_offset 0
3064:src/keys.c    **** 	}
 6895              		.loc 1 3064 4 view .LVU2180
 6896 0904 FFF7FEBF 		b	finish_RPN
 6897              	.LVL534:
 6898              	.L544:
 6899              		.cfi_restore_state
2962:src/keys.c    **** 	    DispMsg = TraceBuffer;
 6900              		.loc 1 2962 6 is_stmt 1 view .LVU2181
 6901 0908 254F     		ldr	r7, .L1151+8
ARM GAS  /tmp/ccQmaUTi.s 			page 212


 6902 090a 3946     		mov	r1, r7
 6903 090c FFF7FEFF 		bl	prt
 6904              	.LVL535:
 6905 0910 3246     		mov	r2, r6
 6906 0912 0146     		mov	r1, r0
 6907 0914 3846     		mov	r0, r7
 6908 0916 FFF7FEFF 		bl	scopy_char
 6909              	.LVL536:
2963:src/keys.c    **** 	  }
 6910              		.loc 1 2963 6 view .LVU2182
2963:src/keys.c    **** 	  }
 6911              		.loc 1 2963 14 is_stmt 0 view .LVU2183
 6912 091a 224B     		ldr	r3, .L1151+12
 6913 091c 1F60     		str	r7, [r3]
 6914 091e 06E4     		b	.L545
 6915              	.LVL537:
 6916              	.L1081:
 6917              	.LBB1246:
 6918              	.LBB1192:
2807:src/keys.c    **** 
 6919              		.loc 1 2807 3 is_stmt 1 view .LVU2184
 6920              	.LBB835:
 6921              	.LBI835:
2421:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6922              		.loc 1 2421 12 view .LVU2185
 6923              	.LBB836:
2423:src/keys.c    **** #ifdef DM42
 6924              		.loc 1 2423 2 view .LVU2186
 6925 0920 E4B2     		uxtb	r4, r4
 6926              	.LVL538:
2423:src/keys.c    **** #ifdef DM42
 6927              		.loc 1 2423 2 is_stmt 0 view .LVU2187
 6928 0922 0E3C     		subs	r4, r4, #14
 6929 0924 192C     		cmp	r4, #25
 6930 0926 3FF64EAF 		bhi	.L1060
 6931 092a 01A3     		adr	r3, .L586
 6932 092c 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 6933              		.p2align 2
 6934              	.L586:
 6935 0930 AD090000 		.word	.L587+1
 6936 0934 C7070000 		.word	.L1060+1
 6937 0938 AD090000 		.word	.L587+1
 6938 093c C7070000 		.word	.L1060+1
 6939 0940 C7070000 		.word	.L1060+1
 6940 0944 C7070000 		.word	.L1060+1
 6941 0948 C7070000 		.word	.L1060+1
 6942 094c C7070000 		.word	.L1060+1
 6943 0950 C7070000 		.word	.L1060+1
 6944 0954 C7070000 		.word	.L1060+1
 6945 0958 C7070000 		.word	.L1060+1
 6946 095c C7070000 		.word	.L1060+1
 6947 0960 C7070000 		.word	.L1060+1
 6948 0964 C7070000 		.word	.L1060+1
 6949 0968 C7070000 		.word	.L1060+1
 6950 096c C7070000 		.word	.L1060+1
 6951 0970 C7070000 		.word	.L1060+1
 6952 0974 C7070000 		.word	.L1060+1
ARM GAS  /tmp/ccQmaUTi.s 			page 213


 6953 0978 C7090000 		.word	.L585+1
 6954 097c C7070000 		.word	.L1060+1
 6955 0980 C7070000 		.word	.L1060+1
 6956 0984 C7070000 		.word	.L1060+1
 6957 0988 C7070000 		.word	.L1060+1
 6958 098c C7070000 		.word	.L1060+1
 6959 0990 C7070000 		.word	.L1060+1
 6960 0994 C7090000 		.word	.L585+1
 6961              		.p2align 1
 6962              	.L1152:
 6963              		.align	2
 6964              	.L1151:
 6965 0998 00000000 		.word	NonProgrammable
 6966 099c 31020008 		.word	134218289
 6967 09a0 00000000 		.word	TraceBuffer
 6968 09a4 00000000 		.word	DispMsg
 6969              	.L588:
2432:src/keys.c    **** 	  }
 6970              		.loc 1 2432 26 is_stmt 1 view .LVU2188
 6971 09a8 FFF7FEFF 		bl	clpall
 6972              	.LVL539:
2432:src/keys.c    **** 	  }
 6973              		.loc 1 2432 36 view .LVU2189
 6974              	.L587:
2441:src/keys.c    **** 	  State2.digval = 0;
 6975              		.loc 1 2441 4 view .LVU2190
2441:src/keys.c    **** 	  State2.digval = 0;
 6976              		.loc 1 2441 19 is_stmt 0 view .LVU2191
 6977 09ac 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2442:src/keys.c    **** 	  break;
 6978              		.loc 1 2442 18 view .LVU2192
 6979 09b0 0022     		movs	r2, #0
2441:src/keys.c    **** 	  State2.digval = 0;
 6980              		.loc 1 2441 19 view .LVU2193
 6981 09b2 6FF30203 		bfc	r3, #0, #3
 6982 09b6 88F81430 		strb	r3, [r8, #20]
2442:src/keys.c    **** 	  break;
 6983              		.loc 1 2442 4 is_stmt 1 view .LVU2194
2442:src/keys.c    **** 	  break;
 6984              		.loc 1 2442 18 is_stmt 0 view .LVU2195
 6985 09ba A8F80820 		strh	r2, [r8, #8]	@ movhi
2443:src/keys.c    **** 	default:			// No state change
 6986              		.loc 1 2443 4 is_stmt 1 view .LVU2196
 6987              	.LBE836:
 6988              	.LBE835:
2807:src/keys.c    **** 
 6989              		.loc 1 2807 10 is_stmt 0 view .LVU2197
 6990 09be 4FF0330B 		mov	fp, #51
 6991              	.LBB838:
 6992              	.LBB837:
2443:src/keys.c    **** 	default:			// No state change
 6993              		.loc 1 2443 4 view .LVU2198
 6994 09c2 FFF771BB 		b	.L565
 6995              	.L585:
2428:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6996              		.loc 1 2428 4 is_stmt 1 view .LVU2199
2428:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
ARM GAS  /tmp/ccQmaUTi.s 			page 214


 6997              		.loc 1 2428 18 is_stmt 0 view .LVU2200
 6998 09c6 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6999 09ca 03F00703 		and	r3, r3, #7
 7000 09ce 013B     		subs	r3, r3, #1
 7001 09d0 032B     		cmp	r3, #3
 7002 09d2 EBD8     		bhi	.L587
 7003 09d4 01A2     		adr	r2, .L589
 7004 09d6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7005 09da 00BF     		.p2align 2
 7006              	.L589:
 7007 09dc F9090000 		.word	.L592+1
 7008 09e0 F3090000 		.word	.L591+1
 7009 09e4 ED090000 		.word	.L590+1
 7010 09e8 A9090000 		.word	.L588+1
 7011              		.p2align 1
 7012              	.L590:
2431:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 7013              		.loc 1 2431 26 is_stmt 1 view .LVU2201
 7014 09ec FFF7FEFF 		bl	clrprog
 7015              	.LVL540:
2431:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 7016              		.loc 1 2431 37 view .LVU2202
2431:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 7017              		.loc 1 2431 4 is_stmt 0 view .LVU2203
 7018 09f0 DCE7     		b	.L587
 7019              	.L591:
2430:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 7020              		.loc 1 2430 25 is_stmt 1 view .LVU2204
 7021 09f2 FFF7FEFF 		bl	reset
 7022              	.LVL541:
2430:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 7023              		.loc 1 2430 34 view .LVU2205
2430:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 7024              		.loc 1 2430 4 is_stmt 0 view .LVU2206
 7025 09f6 D9E7     		b	.L587
 7026              	.L592:
2429:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7027              		.loc 1 2429 25 is_stmt 1 view .LVU2207
 7028 09f8 FFF7FEFF 		bl	clrall
 7029              	.LVL542:
2429:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7030              		.loc 1 2429 35 view .LVU2208
2429:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7031              		.loc 1 2429 4 is_stmt 0 view .LVU2209
 7032 09fc D6E7     		b	.L587
 7033              	.LVL543:
 7034              	.L1079:
2429:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7035              		.loc 1 2429 4 view .LVU2210
 7036              	.LBE837:
 7037              	.LBE838:
2785:src/keys.c    ****     soft_init_state();
 7038              		.loc 1 2785 47 view .LVU2211
 7039 09fe DFF8A483 		ldr	r8, .L1153+32
 7040 0a02 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
2785:src/keys.c    ****     soft_init_state();
 7041              		.loc 1 2785 36 view .LVU2212
ARM GAS  /tmp/ccQmaUTi.s 			page 215


 7042 0a06 4AEA0302 		orr	r2, r10, r3
 7043 0a0a 12F0FF0F 		tst	r2, #255
 7044 0a0e 7FF4F5AB 		bne	.L576
2786:src/keys.c    ****     return STATE_UNFINISHED;
 7045              		.loc 1 2786 5 is_stmt 1 view .LVU2213
 7046 0a12 FFF7FEFF 		bl	soft_init_state
 7047              	.LVL544:
2787:src/keys.c    ****   }
 7048              		.loc 1 2787 5 view .LVU2214
2787:src/keys.c    ****   }
 7049              		.loc 1 2787 12 is_stmt 0 view .LVU2215
 7050 0a16 4FF0330B 		mov	fp, #51
 7051 0a1a FFF745BB 		b	.L565
 7052              	.L1082:
2810:src/keys.c    **** 
 7053              		.loc 1 2810 3 is_stmt 1 view .LVU2216
2810:src/keys.c    **** 
 7054              		.loc 1 2810 10 is_stmt 0 view .LVU2217
 7055 0a1e E0B2     		uxtb	r0, r4
 7056 0a20 FFF7FEFF 		bl	process_arg
 7057              	.LVL545:
 7058 0a24 8346     		mov	fp, r0
 7059 0a26 B3E5     		b	.L594
 7060              	.L1103:
2764:src/keys.c    ****       Pause = 0;
 7061              		.loc 1 2764 2 is_stmt 1 view .LVU2218
 7062 0a28 0020     		movs	r0, #0
 7063 0a2a FFF7FEFF 		bl	set_pc
 7064              	.LVL546:
 7065 0a2e D4E4     		b	.L573
 7066              	.LVL547:
 7067              	.L829:
2764:src/keys.c    ****       Pause = 0;
 7068              		.loc 1 2764 2 is_stmt 0 view .LVU2219
 7069              	.LBE1192:
 7070              	.LBE1246:
 7071              	.LBB1247:
3101:src/keys.c    **** 	if (p > Alpha)
 7072              		.loc 1 3101 2 is_stmt 1 view .LVU2220
3101:src/keys.c    **** 	if (p > Alpha)
 7073              		.loc 1 3101 22 is_stmt 0 view .LVU2221
 7074 0a30 D44C     		ldr	r4, .L1153
 7075 0a32 2068     		ldr	r0, [r4]
3101:src/keys.c    **** 	if (p > Alpha)
 7076              		.loc 1 3101 12 view .LVU2222
 7077 0a34 0021     		movs	r1, #0
 7078 0a36 00F5F660 		add	r0, r0, #1968
 7079 0a3a FFF7FEFF 		bl	find_char
 7080              	.LVL548:
3102:src/keys.c    **** 	  *--p = '\0';
 7081              		.loc 1 3102 8 view .LVU2223
 7082 0a3e 2368     		ldr	r3, [r4]
 7083              	.LVL549:
3102:src/keys.c    **** 	  *--p = '\0';
 7084              		.loc 1 3102 2 is_stmt 1 view .LVU2224
3102:src/keys.c    **** 	  *--p = '\0';
 7085              		.loc 1 3102 8 is_stmt 0 view .LVU2225
ARM GAS  /tmp/ccQmaUTi.s 			page 216


 7086 0a40 03F5F663 		add	r3, r3, #1968
3102:src/keys.c    **** 	  *--p = '\0';
 7087              		.loc 1 3102 5 view .LVU2226
 7088 0a44 9842     		cmp	r0, r3
3103:src/keys.c    ****       }
 7089              		.loc 1 3103 4 is_stmt 1 view .LVU2227
 7090              	.LVL550:
3103:src/keys.c    ****       }
 7091              		.loc 1 3103 9 is_stmt 0 view .LVU2228
 7092 0a46 84BF     		itt	hi
 7093 0a48 0023     		movhi	r3, #0
 7094 0a4a 00F8013C 		strbhi	r3, [r0, #-1]
 7095 0a4e E3E5     		b	.L1055
 7096              	.LVL551:
 7097              	.L1085:
3103:src/keys.c    ****       }
 7098              		.loc 1 3103 9 view .LVU2229
 7099              	.LBE1247:
 7100              	.LBB1248:
 7101              	.LBB1193:
2819:src/keys.c    **** 
 7102              		.loc 1 2819 3 is_stmt 1 view .LVU2230
 7103              	.LBB839:
 7104              	.LBI839:
1887:src/keys.c    **** 	int r = State2.test;
 7105              		.loc 1 1887 12 view .LVU2231
 7106              	.LBB840:
1888:src/keys.c    **** 	int cmpx = State2.cmplx;
 7107              		.loc 1 1888 2 view .LVU2232
1889:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7108              		.loc 1 1889 2 view .LVU2233
 7109              	.LBB841:
 7110              	.LBB842:
 7111              	.LBB843:
 7112              	.LBB844:
 131:src/keys.c    **** }
 7113              		.loc 1 131 23 is_stmt 0 view .LVU2234
 7114 0a50 CD48     		ldr	r0, .L1153+4
 7115              	.LBE844:
 7116              	.LBE843:
 221:src/keys.c    **** }
 7117              		.loc 1 221 28 view .LVU2235
 7118 0a52 DFF838C3 		ldr	ip, .L1153+8
 7119              	.LBB848:
 7120              	.LBB845:
 131:src/keys.c    **** }
 7121              		.loc 1 131 23 view .LVU2236
 7122 0a56 E4B2     		uxtb	r4, r4
 7123              	.LVL552:
 131:src/keys.c    **** }
 7124              		.loc 1 131 23 view .LVU2237
 7125              	.LBE845:
 7126              	.LBE848:
 7127              	.LBE842:
 7128              	.LBE841:
1891:src/keys.c    **** 
 7129              		.loc 1 1891 44 view .LVU2238
ARM GAS  /tmp/ccQmaUTi.s 			page 217


 7130 0a58 12F0020F 		tst	r2, #2
 7131              	.LBB853:
 7132              	.LBB851:
 7133              	.LBB849:
 7134              	.LBB846:
 131:src/keys.c    **** }
 7135              		.loc 1 131 23 view .LVU2239
 7136 0a5c 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 7137              	.LBE846:
 7138              	.LBE849:
 221:src/keys.c    **** }
 7139              		.loc 1 221 28 view .LVU2240
 7140 0a5e 1CF800C0 		ldrb	ip, [ip, r0]	@ zero_extendqisi2
 7141              	.LBE851:
 7142              	.LBE853:
1889:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7143              		.loc 1 1889 19 view .LVU2241
 7144 0a62 C2F3400E 		ubfx	lr, r2, #1, #1
 7145              	.LVL553:
1890:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7146              		.loc 1 1890 2 is_stmt 1 view .LVU2242
 7147              	.LBB854:
 7148              	.LBI841:
 198:src/keys.c    **** {
 7149              		.loc 1 198 14 view .LVU2243
 7150              	.LBB852:
 200:src/keys.c    ****     // K00 - K05
 7151              		.loc 1 200 3 view .LVU2244
 221:src/keys.c    **** }
 7152              		.loc 1 221 3 view .LVU2245
 7153              	.LBB850:
 7154              	.LBI843:
 119:src/keys.c    **** {
 7155              		.loc 1 119 12 view .LVU2246
 7156              	.LBB847:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7157              		.loc 1 121 2 view .LVU2247
 131:src/keys.c    **** }
 7158              		.loc 1 131 2 view .LVU2248
 131:src/keys.c    **** }
 7159              		.loc 1 131 2 is_stmt 0 view .LVU2249
 7160              	.LBE847:
 7161              	.LBE850:
 7162              	.LBE852:
 7163              	.LBE854:
1890:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7164              		.loc 1 1890 15 view .LVU2250
 7165 0a66 2CF08000 		bic	r0, ip, #128
 7166              	.LVL554:
1891:src/keys.c    **** 
 7167              		.loc 1 1891 2 is_stmt 1 view .LVU2251
1891:src/keys.c    **** 
 7168              		.loc 1 1891 44 is_stmt 0 view .LVU2252
 7169 0a6a 00F08C80 		beq	.L1110
 7170              	.LVL555:
1893:src/keys.c    **** 	State2.cmplx = 0;
 7171              		.loc 1 1893 2 is_stmt 1 view .LVU2253
ARM GAS  /tmp/ccQmaUTi.s 			page 218


1894:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7172              		.loc 1 1894 15 is_stmt 0 view .LVU2254
 7173 0a6e 61F34102 		bfi	r2, r1, #1, #1
1895:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7174              		.loc 1 1895 5 view .LVU2255
 7175 0a72 6428     		cmp	r0, #100
1893:src/keys.c    **** 	State2.cmplx = 0;
 7176              		.loc 1 1893 14 view .LVU2256
 7177 0a74 4FF00701 		mov	r1, #7
1894:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7178              		.loc 1 1894 15 view .LVU2257
 7179 0a78 88F81520 		strb	r2, [r8, #21]
1893:src/keys.c    **** 	State2.cmplx = 0;
 7180              		.loc 1 1893 14 view .LVU2258
 7181 0a7c 88F80F10 		strb	r1, [r8, #15]
1894:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7182              		.loc 1 1894 2 is_stmt 1 view .LVU2259
1895:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7183              		.loc 1 1895 2 view .LVU2260
1895:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7184              		.loc 1 1895 5 is_stmt 0 view .LVU2261
 7185 0a80 00F0F683 		beq	.L894
1891:src/keys.c    **** 
 7186              		.loc 1 1891 44 view .LVU2262
 7187 0a84 4FF0340A 		mov	r10, #52
 7188              	.LVL556:
 7189              	.L854:
1896:src/keys.c    **** 		// Lettered register
 7190              		.loc 1 1896 5 view .LVU2263
 7191 0a88 7F28     		cmp	r0, #127
1891:src/keys.c    **** 
 7192              		.loc 1 1891 60 view .LVU2264
 7193 0a8a DA44     		add	r10, r10, fp
1896:src/keys.c    **** 		// Lettered register
 7194              		.loc 1 1896 2 is_stmt 1 view .LVU2265
1896:src/keys.c    **** 		// Lettered register
 7195              		.loc 1 1896 5 is_stmt 0 view .LVU2266
 7196 0a8c 00F0FE80 		beq	.L625
 7197              	.LVL557:
1896:src/keys.c    **** 		// Lettered register
 7198              		.loc 1 1896 18 view .LVU2267
 7199 0a90 6328     		cmp	r0, #99
 7200 0a92 40F21F81 		bls	.L626
1896:src/keys.c    **** 		// Lettered register
 7201              		.loc 1 1896 37 view .LVU2268
 7202 0a96 6F28     		cmp	r0, #111
 7203 0a98 00F2F880 		bhi	.L625
1898:src/keys.c    **** 			if (n == regI_idx)
 7204              		.loc 1 1898 3 is_stmt 1 view .LVU2269
1898:src/keys.c    **** 			if (n == regI_idx)
 7205              		.loc 1 1898 6 is_stmt 0 view .LVU2270
 7206 0a9c BEF1000F 		cmp	lr, #0
 7207 0aa0 00F0AB81 		beq	.L627
1898:src/keys.c    **** 			if (n == regI_idx)
 7208              		.loc 1 1898 12 view .LVU2271
 7209 0aa4 1CF0010F 		tst	ip, #1
 7210 0aa8 00F0A781 		beq	.L627
ARM GAS  /tmp/ccQmaUTi.s 			page 219


1899:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7211              		.loc 1 1899 4 is_stmt 1 view .LVU2272
1899:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7212              		.loc 1 1899 7 is_stmt 0 view .LVU2273
 7213 0aac 6D28     		cmp	r0, #109
 7214 0aae 40F0FA80 		bne	.L628
1900:src/keys.c    **** 			// Disallow odd complex registers > A
 7215              		.loc 1 1900 5 is_stmt 1 view .LVU2274
1900:src/keys.c    **** 			// Disallow odd complex registers > A
 7216              		.loc 1 1900 30 is_stmt 0 view .LVU2275
 7217 0ab2 0BF1290B 		add	fp, fp, #41
 7218              	.LVL558:
1900:src/keys.c    **** 			// Disallow odd complex registers > A
 7219              		.loc 1 1900 30 view .LVU2276
 7220 0ab6 6BE5     		b	.L594
 7221              	.LVL559:
 7222              	.L1083:
1900:src/keys.c    **** 			// Disallow odd complex registers > A
 7223              		.loc 1 1900 30 view .LVU2277
 7224              	.LBE840:
 7225              	.LBE839:
2813:src/keys.c    **** 
 7226              		.loc 1 2813 3 is_stmt 1 view .LVU2278
 7227              	.LBB864:
 7228              	.LBI864:
1321:src/keys.c    **** 	int pc = -1;
 7229              		.loc 1 1321 12 view .LVU2279
 7230              	.LBB865:
1322:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7231              		.loc 1 1322 2 view .LVU2280
1323:src/keys.c    **** 
 7232              		.loc 1 1323 2 view .LVU2281
 7233              	.LBB866:
 7234              	.LBI866:
 198:src/keys.c    **** {
 7235              		.loc 1 198 14 view .LVU2282
 7236              	.LBB867:
 200:src/keys.c    ****     // K00 - K05
 7237              		.loc 1 200 3 view .LVU2283
 221:src/keys.c    **** }
 7238              		.loc 1 221 3 view .LVU2284
 7239              	.LBB868:
 7240              	.LBI868:
 119:src/keys.c    **** {
 7241              		.loc 1 119 12 view .LVU2285
 7242              	.LBB869:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7243              		.loc 1 121 2 view .LVU2286
 131:src/keys.c    **** }
 7244              		.loc 1 131 2 view .LVU2287
 131:src/keys.c    **** }
 7245              		.loc 1 131 23 is_stmt 0 view .LVU2288
 7246 0ab8 B34B     		ldr	r3, .L1153+4
 7247              	.LBE869:
 7248              	.LBE868:
 221:src/keys.c    **** }
 7249              		.loc 1 221 28 view .LVU2289
ARM GAS  /tmp/ccQmaUTi.s 			page 220


 7250 0aba B44A     		ldr	r2, .L1153+8
 7251 0abc E4B2     		uxtb	r4, r4
 7252              	.LVL560:
 7253              	.LBB871:
 7254              	.LBB870:
 131:src/keys.c    **** }
 7255              		.loc 1 131 23 view .LVU2290
 7256 0abe 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7257              	.LBE870:
 7258              	.LBE871:
 221:src/keys.c    **** }
 7259              		.loc 1 221 28 view .LVU2291
 7260 0ac0 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7261              	.LVL561:
 221:src/keys.c    **** }
 7262              		.loc 1 221 28 view .LVU2292
 7263              	.LBE867:
 7264              	.LBE866:
1325:src/keys.c    **** 		// Digit 0 - 9
 7265              		.loc 1 1325 2 is_stmt 1 view .LVU2293
1325:src/keys.c    **** 		// Digit 0 - 9
 7266              		.loc 1 1325 5 is_stmt 0 view .LVU2294
 7267 0ac2 0928     		cmp	r0, #9
 7268 0ac4 40F2FB80 		bls	.L1111
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7269              		.loc 1 1330 7 is_stmt 1 view .LVU2295
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7270              		.loc 1 1330 18 is_stmt 0 view .LVU2296
 7271 0ac8 20F08000 		bic	r0, r0, #128
 7272              	.LVL562:
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7273              		.loc 1 1330 10 view .LVU2297
 7274 0acc 6428     		cmp	r0, #100
 7275 0ace 00F08881 		beq	.L1112
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7276              		.loc 1 1331 7 is_stmt 1 view .LVU2298
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7277              		.loc 1 1331 10 is_stmt 0 view .LVU2299
 7278 0ad2 6528     		cmp	r0, #101
 7279 0ad4 00F09881 		beq	.L1113
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7280              		.loc 1 1332 7 is_stmt 1 view .LVU2300
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7281              		.loc 1 1332 10 is_stmt 0 view .LVU2301
 7282 0ad8 6628     		cmp	r0, #102
 7283 0ada 00F0B481 		beq	.L1114
1333:src/keys.c    **** #endif
 7284              		.loc 1 1333 7 is_stmt 1 view .LVU2302
1333:src/keys.c    **** #endif
 7285              		.loc 1 1333 10 is_stmt 0 view .LVU2303
 7286 0ade 6728     		cmp	r0, #103
 7287 0ae0 00F0A183 		beq	.L1115
1335:src/keys.c    **** 		// A - D
 7288              		.loc 1 1335 7 is_stmt 1 view .LVU2304
1335:src/keys.c    **** 		// A - D
 7289              		.loc 1 1335 10 is_stmt 0 view .LVU2305
 7290 0ae4 032C     		cmp	r4, #3
ARM GAS  /tmp/ccQmaUTi.s 			page 221


 7291 0ae6 40F2A883 		bls	.L1116
1340:src/keys.c    **** 		// .
 7292              		.loc 1 1340 7 is_stmt 1 view .LVU2306
1340:src/keys.c    **** 		// .
 7293              		.loc 1 1340 10 is_stmt 0 view .LVU2307
 7294 0aea 262C     		cmp	r4, #38
 7295 0aec 00F04684 		beq	.L1117
1345:src/keys.c    **** 		// ENTER - short circuit processing
 7296              		.loc 1 1345 7 is_stmt 1 view .LVU2308
1345:src/keys.c    **** 		// ENTER - short circuit processing
 7297              		.loc 1 1345 10 is_stmt 0 view .LVU2309
 7298 0af0 0C2C     		cmp	r4, #12
 7299 0af2 00F09F83 		beq	.L1118
1349:src/keys.c    **** 		// backspace
 7300              		.loc 1 1349 7 is_stmt 1 view .LVU2310
1349:src/keys.c    **** 		// backspace
 7301              		.loc 1 1349 10 is_stmt 0 view .LVU2311
 7302 0af6 102C     		cmp	r4, #16
 7303 0af8 00F04584 		beq	.L1119
1358:src/keys.c    **** 		// up
 7304              		.loc 1 1358 7 is_stmt 1 view .LVU2312
1358:src/keys.c    **** 		// up
 7305              		.loc 1 1358 10 is_stmt 0 view .LVU2313
 7306 0afc 122C     		cmp	r4, #18
 7307 0afe 00F0D886 		beq	.L1120
1368:src/keys.c    **** 		// down
 7308              		.loc 1 1368 7 is_stmt 1 view .LVU2314
1368:src/keys.c    **** 		// down
 7309              		.loc 1 1368 10 is_stmt 0 view .LVU2315
 7310 0b02 182C     		cmp	r4, #24
 7311 0b04 7FF45FAE 		bne	.L1060
1370:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7312              		.loc 1 1370 3 is_stmt 1 view .LVU2316
1371:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7313              		.loc 1 1371 18 is_stmt 0 view .LVU2317
 7314 0b08 9E4C     		ldr	r4, .L1153
1370:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7315              		.loc 1 1370 3 view .LVU2318
 7316 0b0a 0120     		movs	r0, #1
 7317 0b0c FFF7FEFF 		bl	update_program_bounds
 7318              	.LVL563:
1371:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7319              		.loc 1 1371 3 is_stmt 1 view .LVU2319
1371:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7320              		.loc 1 1371 18 is_stmt 0 view .LVU2320
 7321 0b10 2368     		ldr	r3, [r4]
1371:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7322              		.loc 1 1371 11 view .LVU2321
 7323 0b12 0021     		movs	r1, #0
 7324 0b14 B3F8EE07 		ldrh	r0, [r3, #2030]
 7325 0b18 FFF7FEFF 		bl	do_inc
 7326              	.LVL564:
1372:src/keys.c    **** 			rawpc = 1;
 7327              		.loc 1 1372 3 is_stmt 1 view .LVU2322
1372:src/keys.c    **** 			rawpc = 1;
 7328              		.loc 1 1372 6 is_stmt 0 view .LVU2323
 7329 0b1c 20B9     		cbnz	r0, .L607
ARM GAS  /tmp/ccQmaUTi.s 			page 222


1372:src/keys.c    **** 			rawpc = 1;
 7330              		.loc 1 1372 21 view .LVU2324
 7331 0b1e 2368     		ldr	r3, [r4]
1372:src/keys.c    **** 			rawpc = 1;
 7332              		.loc 1 1372 18 view .LVU2325
 7333 0b20 5888     		ldrh	r0, [r3, #2]
 7334              	.LVL565:
1372:src/keys.c    **** 			rawpc = 1;
 7335              		.loc 1 1372 18 view .LVU2326
 7336 0b22 0038     		subs	r0, r0, #0
 7337 0b24 18BF     		it	ne
 7338 0b26 0120     		movne	r0, #1
 7339              	.LVL566:
 7340              	.L607:
1378:src/keys.c    **** fin2:		State2.gtodot = 0;
 7341              		.loc 1 1378 7 is_stmt 1 view .LVU2327
 7342 0b28 FFF7FEFF 		bl	set_pc
 7343              	.LVL567:
 7344              	.L611:
1379:src/keys.c    **** 		State2.digval = 0;
 7345              		.loc 1 1379 8 view .LVU2328
1379:src/keys.c    **** 		State2.digval = 0;
 7346              		.loc 1 1379 22 is_stmt 0 view .LVU2329
 7347 0b2c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1380:src/keys.c    **** 		State2.numdigit = 0;
 7348              		.loc 1 1380 17 view .LVU2330
 7349 0b30 0023     		movs	r3, #0
1379:src/keys.c    **** 		State2.digval = 0;
 7350              		.loc 1 1379 22 view .LVU2331
 7351 0b32 6FF30002 		bfc	r2, #0, #1
 7352 0b36 88F81520 		strb	r2, [r8, #21]
1380:src/keys.c    **** 		State2.numdigit = 0;
 7353              		.loc 1 1380 3 is_stmt 1 view .LVU2332
1380:src/keys.c    **** 		State2.numdigit = 0;
 7354              		.loc 1 1380 17 is_stmt 0 view .LVU2333
 7355 0b3a A8F80830 		strh	r3, [r8, #8]	@ movhi
1381:src/keys.c    **** 	}
 7356              		.loc 1 1381 3 is_stmt 1 view .LVU2334
1381:src/keys.c    **** 	}
 7357              		.loc 1 1381 19 is_stmt 0 view .LVU2335
 7358 0b3e 88F80B30 		strb	r3, [r8, #11]
 7359              	.LBE865:
 7360              	.LBE864:
2813:src/keys.c    **** 
 7361              		.loc 1 2813 10 view .LVU2336
 7362 0b42 4FF0330B 		mov	fp, #51
 7363 0b46 FFF7AFBA 		b	.L565
 7364              	.LVL568:
 7365              	.L891:
2813:src/keys.c    **** 
 7366              		.loc 1 2813 10 view .LVU2337
 7367              	.LBE1193:
 7368              	.LBE1248:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 7369              		.loc 1 2929 7 view .LVU2338
 7370 0b4a 5F46     		mov	r7, fp
 7371 0b4c FFF7ACBA 		b	.L565
ARM GAS  /tmp/ccQmaUTi.s 			page 223


 7372              	.LVL569:
 7373              	.L615:
 7374              	.LBB1249:
 7375              	.LBB1194:
 7376              	.LBB883:
 7377              	.LBB698:
1234:src/keys.c    **** 
 7378              		.loc 1 1234 2 view .LVU2339
 7379 0b50 2D2C     		cmp	r4, #45
 7380 0b52 7FF438AE 		bne	.L1060
1242:src/keys.c    **** 		goto stay;
 7381              		.loc 1 1242 3 is_stmt 1 view .LVU2340
 7382 0b56 8AF0010A 		eor	r10, r10, #1
 7383              	.LVL570:
1243:src/keys.c    **** 
 7384              		.loc 1 1243 3 view .LVU2341
 7385              	.L621:
1251:src/keys.c    **** 		State2.cmplx = cmplx;
 7386              		.loc 1 1251 3 view .LVU2342
1252:src/keys.c    **** 		State2.dot = f;
 7387              		.loc 1 1252 3 view .LVU2343
1253:src/keys.c    **** 		break;
 7388              		.loc 1 1253 3 view .LVU2344
1252:src/keys.c    **** 		State2.dot = f;
 7389              		.loc 1 1252 16 is_stmt 0 view .LVU2345
 7390 0b5a 4FEA4A03 		lsl	r3, r10, #1
 7391 0b5e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7392 0b62 43F02003 		orr	r3, r3, #32
 7393 0b66 43EA8913 		orr	r3, r3, r9, lsl #6
 7394 0b6a 03F06203 		and	r3, r3, #98
 7395 0b6e 22F06202 		bic	r2, r2, #98
 7396 0b72 1343     		orrs	r3, r3, r2
 7397 0b74 88F81530 		strb	r3, [r8, #21]
1254:src/keys.c    **** 
 7398              		.loc 1 1254 3 is_stmt 1 view .LVU2346
1259:src/keys.c    **** }
 7399              		.loc 1 1259 9 is_stmt 0 view .LVU2347
 7400 0b78 4FF0330B 		mov	fp, #51
1254:src/keys.c    **** 
 7401              		.loc 1 1254 3 view .LVU2348
 7402 0b7c FFF794BA 		b	.L565
 7403              	.LVL571:
 7404              	.L892:
1254:src/keys.c    **** 
 7405              		.loc 1 1254 3 view .LVU2349
 7406              	.LBE698:
 7407              	.LBE883:
 7408              	.LBE1194:
 7409              	.LBE1249:
 7410              	.LBB1250:
 7411 0b80 9B46     		mov	fp, r3
 7412              	.LVL572:
1254:src/keys.c    **** 
 7413              		.loc 1 1254 3 view .LVU2350
 7414 0b82 FFF7B3BA 		b	.L840
 7415              	.LVL573:
 7416              	.L1110:
ARM GAS  /tmp/ccQmaUTi.s 			page 224


1254:src/keys.c    **** 
 7417              		.loc 1 1254 3 view .LVU2351
 7418              	.LBE1250:
 7419              	.LBB1251:
 7420              	.LBB1195:
 7421              	.LBB884:
 7422              	.LBB857:
1893:src/keys.c    **** 	State2.cmplx = 0;
 7423              		.loc 1 1893 2 is_stmt 1 view .LVU2352
1894:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7424              		.loc 1 1894 15 is_stmt 0 view .LVU2353
 7425 0b86 6EF34102 		bfi	r2, lr, #1, #1
1893:src/keys.c    **** 	State2.cmplx = 0;
 7426              		.loc 1 1893 14 view .LVU2354
 7427 0b8a 0721     		movs	r1, #7
1895:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7428              		.loc 1 1895 5 view .LVU2355
 7429 0b8c 6428     		cmp	r0, #100
1894:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7430              		.loc 1 1894 15 view .LVU2356
 7431 0b8e 88F81520 		strb	r2, [r8, #21]
1893:src/keys.c    **** 	State2.cmplx = 0;
 7432              		.loc 1 1893 14 view .LVU2357
 7433 0b92 88F80F10 		strb	r1, [r8, #15]
1894:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7434              		.loc 1 1894 2 is_stmt 1 view .LVU2358
1895:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7435              		.loc 1 1895 2 view .LVU2359
1895:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7436              		.loc 1 1895 5 is_stmt 0 view .LVU2360
 7437 0b96 00F06783 		beq	.L895
1891:src/keys.c    **** 
 7438              		.loc 1 1891 44 view .LVU2361
 7439 0b9a 4FF02D0A 		mov	r10, #45
 7440              	.LVL574:
1891:src/keys.c    **** 
 7441              		.loc 1 1891 44 view .LVU2362
 7442 0b9e 73E7     		b	.L854
 7443              	.LVL575:
 7444              	.L1086:
1891:src/keys.c    **** 
 7445              		.loc 1 1891 44 view .LVU2363
 7446              	.LBE857:
 7447              	.LBE884:
2822:src/keys.c    **** 
 7448              		.loc 1 2822 3 is_stmt 1 view .LVU2364
 7449              	.LBB885:
 7450              	.LBB886:
2456:src/keys.c    **** 
 7451              		.loc 1 2456 12 is_stmt 0 view .LVU2365
 7452 0ba0 784A     		ldr	r2, .L1153
 7453 0ba2 1268     		ldr	r2, [r2]
2456:src/keys.c    **** 
 7454              		.loc 1 2456 31 view .LVU2366
 7455 0ba4 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7456              	.LBE886:
 7457              	.LBE885:
ARM GAS  /tmp/ccQmaUTi.s 			page 225


2822:src/keys.c    **** 
 7458              		.loc 1 2822 10 view .LVU2367
 7459 0ba8 E4B2     		uxtb	r4, r4
 7460              	.LVL576:
 7461              	.LBB903:
 7462              	.LBI885:
2454:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7463              		.loc 1 2454 12 is_stmt 1 view .LVU2368
 7464              	.LBB896:
2455:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7465              		.loc 1 2455 2 view .LVU2369
2456:src/keys.c    **** 
 7466              		.loc 1 2456 2 view .LVU2370
2456:src/keys.c    **** 
 7467              		.loc 1 2456 31 is_stmt 0 view .LVU2371
 7468 0baa 002A     		cmp	r2, #0
 7469 0bac B4BF     		ite	lt
 7470 0bae 0B20     		movlt	r0, #11
 7471 0bb0 0A20     		movge	r0, #10
 7472              	.LVL577:
2458:src/keys.c    **** 		if (--n < -2)
 7473              		.loc 1 2458 2 is_stmt 1 view .LVU2372
2458:src/keys.c    **** 		if (--n < -2)
 7474              		.loc 1 2458 5 is_stmt 0 view .LVU2373
 7475 0bb2 122C     		cmp	r4, #18
 7476 0bb4 00F00F81 		beq	.L1121
2462:src/keys.c    **** 		if (++n > max)
 7477              		.loc 1 2462 7 is_stmt 1 view .LVU2374
2462:src/keys.c    **** 		if (++n > max)
 7478              		.loc 1 2462 10 is_stmt 0 view .LVU2375
 7479 0bb8 182C     		cmp	r4, #24
 7480 0bba 00F03381 		beq	.L1122
2466:src/keys.c    **** 		State2.status = 0;
 7481              		.loc 1 2466 7 is_stmt 1 view .LVU2376
2466:src/keys.c    **** 		State2.status = 0;
 7482              		.loc 1 2466 10 is_stmt 0 view .LVU2377
 7483 0bbe 102C     		cmp	r4, #16
 7484 0bc0 00F03984 		beq	.L1123
 7485              	.LBB887:
2471:src/keys.c    **** 		if (nn <= 9)
 7486              		.loc 1 2471 3 is_stmt 1 view .LVU2378
 7487              	.LVL578:
 7488              	.LBB888:
 7489              	.LBI888:
 198:src/keys.c    **** {
 7490              		.loc 1 198 14 view .LVU2379
 7491              	.LBB889:
 200:src/keys.c    ****     // K00 - K05
 7492              		.loc 1 200 3 view .LVU2380
 221:src/keys.c    **** }
 7493              		.loc 1 221 3 view .LVU2381
 7494              	.LBB890:
 7495              	.LBI890:
 119:src/keys.c    **** {
 7496              		.loc 1 119 12 view .LVU2382
 7497              	.LBB891:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
ARM GAS  /tmp/ccQmaUTi.s 			page 226


 7498              		.loc 1 121 2 view .LVU2383
 131:src/keys.c    **** }
 7499              		.loc 1 131 2 view .LVU2384
 131:src/keys.c    **** }
 7500              		.loc 1 131 23 is_stmt 0 view .LVU2385
 7501 0bc4 704A     		ldr	r2, .L1153+4
 7502              	.LBE891:
 7503              	.LBE890:
 221:src/keys.c    **** }
 7504              		.loc 1 221 28 view .LVU2386
 7505 0bc6 7149     		ldr	r1, .L1153+8
 7506              	.LBB893:
 7507              	.LBB892:
 131:src/keys.c    **** }
 7508              		.loc 1 131 23 view .LVU2387
 7509 0bc8 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 7510 0bca 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7511 0bcc 02F07F02 		and	r2, r2, #127
 7512              	.LVL579:
 131:src/keys.c    **** }
 7513              		.loc 1 131 23 view .LVU2388
 7514              	.LBE892:
 7515              	.LBE893:
 7516              	.LBE889:
 7517              	.LBE888:
2472:src/keys.c    **** 			n = nn;
 7518              		.loc 1 2472 3 is_stmt 1 view .LVU2389
2472:src/keys.c    **** 			n = nn;
 7519              		.loc 1 2472 6 is_stmt 0 view .LVU2390
 7520 0bd0 092A     		cmp	r2, #9
 7521 0bd2 08D9     		bls	.L641
2474:src/keys.c    **** 			n = n == max ? 10 : max;
 7522              		.loc 1 2474 11 view .LVU2391
 7523 0bd4 702A     		cmp	r2, #112
 7524              	.LBE887:
2455:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7525              		.loc 1 2455 6 view .LVU2392
 7526 0bd6 A3F10303 		sub	r3, r3, #3
 7527              	.LVL580:
 7528              	.LBB894:
2474:src/keys.c    **** 			n = n == max ? 10 : max;
 7529              		.loc 1 2474 8 is_stmt 1 view .LVU2393
2474:src/keys.c    **** 			n = n == max ? 10 : max;
 7530              		.loc 1 2474 11 is_stmt 0 view .LVU2394
 7531 0bda 00F02F81 		beq	.L1124
2476:src/keys.c    **** 			n = 10; 
 7532              		.loc 1 2476 8 is_stmt 1 view .LVU2395
2476:src/keys.c    **** 			n = 10; 
 7533              		.loc 1 2476 11 is_stmt 0 view .LVU2396
 7534 0bde 7F2A     		cmp	r2, #127
 7535 0be0 00F01F83 		beq	.L1049
 7536              	.L862:
 7537 0be4 0A22     		movs	r2, #10
 7538              	.LVL581:
 7539              	.L641:
2476:src/keys.c    **** 			n = 10; 
 7540              		.loc 1 2476 11 view .LVU2397
ARM GAS  /tmp/ccQmaUTi.s 			page 227


 7541              	.LBE894:
2479:src/keys.c    **** 
 7542              		.loc 1 2479 2 is_stmt 1 view .LVU2398
2479:src/keys.c    **** 
 7543              		.loc 1 2479 20 is_stmt 0 view .LVU2399
 7544 0be6 0332     		adds	r2, r2, #3
2479:src/keys.c    **** 
 7545              		.loc 1 2479 16 view .LVU2400
 7546 0be8 88F80C20 		strb	r2, [r8, #12]
2481:src/keys.c    **** }
 7547              		.loc 1 2481 2 is_stmt 1 view .LVU2401
 7548              	.LBE896:
 7549              	.LBE903:
2822:src/keys.c    **** 
 7550              		.loc 1 2822 10 is_stmt 0 view .LVU2402
 7551 0bec 4FF0330B 		mov	fp, #51
 7552              	.LBB904:
 7553              	.LBB897:
2481:src/keys.c    **** }
 7554              		.loc 1 2481 9 view .LVU2403
 7555 0bf0 FFF75ABA 		b	.L565
 7556              	.LVL582:
 7557              	.L1090:
2481:src/keys.c    **** }
 7558              		.loc 1 2481 9 view .LVU2404
 7559              	.LBE897:
 7560              	.LBE904:
2845:src/keys.c    **** 
 7561              		.loc 1 2845 3 is_stmt 1 view .LVU2405
 7562              	.LBB905:
 7563              	.LBB906:
 7564              	.LBB907:
 7565              	.LBB908:
 7566              	.LBB909:
 7567              	.LBB910:
 7568              	.LBB911:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7569              		.loc 1 85 18 is_stmt 0 view .LVU2406
 7570 0bf4 FFF7FEFF 		bl	shift_down
 7571              	.LVL583:
 7572              	.LBE911:
 7573              	.LBE910:
 7574              	.LBE909:
 7575              	.LBE908:
 7576              	.LBE907:
 7577              	.LBE906:
 7578              	.LBE905:
2845:src/keys.c    **** 
 7579              		.loc 1 2845 10 view .LVU2407
 7580 0bf8 E4B2     		uxtb	r4, r4
 7581              	.LVL584:
 7582              	.LBB931:
 7583              	.LBI905:
1266:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7584              		.loc 1 1266 12 is_stmt 1 view .LVU2408
 7585              	.LBB928:
1267:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
ARM GAS  /tmp/ccQmaUTi.s 			page 228


 7586              		.loc 1 1267 2 view .LVU2409
1272:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7587              		.loc 1 1272 2 view .LVU2410
1276:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7588              		.loc 1 1276 2 view .LVU2411
 7589              	.LBB920:
 7590              	.LBI907:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 7591              		.loc 1 102 13 view .LVU2412
 7592              	.LBE920:
 7593              	.LBE928:
 7594              	.LBE931:
 7595              	.LBE1195:
 7596              	.LBE1251:
 103:src/keys.c    **** }
 7597              		.loc 1 103 2 view .LVU2413
 7598              	.LBB1252:
 7599              	.LBB1196:
 7600              	.LBB932:
 7601              	.LBB929:
 7602              	.LBB921:
 7603              	.LBB917:
 7604              	.LBI908:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 7605              		.loc 1 92 20 view .LVU2414
 7606              	.LBB914:
  93:src/keys.c    **** 	State2.shifts = shift;
 7607              		.loc 1 93 2 view .LVU2415
 7608              	.LBB913:
 7609              	.LBI910:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 7610              		.loc 1 84 13 view .LVU2416
 7611              	.LBB912:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7612              		.loc 1 85 2 view .LVU2417
  86:src/keys.c    **** }
 7613              		.loc 1 86 2 view .LVU2418
  86:src/keys.c    **** }
 7614              		.loc 1 86 52 is_stmt 0 view .LVU2419
 7615 0bfa 8346     		mov	fp, r0
 7616 0bfc 08B9     		cbnz	r0, .L651
 7617 0bfe 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 7618              	.L651:
 7619              	.LVL585:
  86:src/keys.c    **** }
 7620              		.loc 1 86 52 view .LVU2420
 7621              	.LBE912:
 7622              	.LBE913:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7623              		.loc 1 94 2 is_stmt 1 view .LVU2421
 7624              	.LBE914:
 7625              	.LBE917:
 7626              	.LBE921:
1279:src/keys.c    **** 	set_last_menu ();
 7627              		.loc 1 1279 15 is_stmt 0 view .LVU2422
 7628 0c02 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7629              	.LBB922:
ARM GAS  /tmp/ccQmaUTi.s 			page 229


 7630              	.LBB918:
 7631              	.LBB915:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7632              		.loc 1 94 16 view .LVU2423
 7633 0c06 0023     		movs	r3, #0
 7634              	.LBE915:
 7635              	.LBE918:
 7636              	.LBE922:
1277:src/keys.c    **** 
 7637              		.loc 1 1277 23 view .LVU2424
 7638 0c08 ABF1010A 		sub	r10, fp, #1
 7639              	.LVL586:
1279:src/keys.c    **** 	set_last_menu ();
 7640              		.loc 1 1279 15 view .LVU2425
 7641 0c0c 63F38202 		bfi	r2, r3, #2, #1
1277:src/keys.c    **** 
 7642              		.loc 1 1277 23 view .LVU2426
 7643 0c10 BAFA8AFA 		clz	r10, r10
1279:src/keys.c    **** 	set_last_menu ();
 7644              		.loc 1 1279 15 view .LVU2427
 7645 0c14 88F81520 		strb	r2, [r8, #21]
 7646              	.LBB923:
 7647              	.LBB919:
 7648              	.LBB916:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7649              		.loc 1 94 16 view .LVU2428
 7650 0c18 88F81030 		strb	r3, [r8, #16]
  95:src/keys.c    **** 	return r;
 7651              		.loc 1 95 2 is_stmt 1 view .LVU2429
  95:src/keys.c    **** 	return r;
 7652              		.loc 1 95 19 is_stmt 0 view .LVU2430
 7653 0c1c 88F80D30 		strb	r3, [r8, #13]
  96:src/keys.c    **** }
 7654              		.loc 1 96 2 is_stmt 1 view .LVU2431
 7655              	.LVL587:
  96:src/keys.c    **** }
 7656              		.loc 1 96 2 is_stmt 0 view .LVU2432
 7657              	.LBE916:
 7658              	.LBE919:
 7659              	.LBE923:
1277:src/keys.c    **** 
 7660              		.loc 1 1277 2 is_stmt 1 view .LVU2433
1277:src/keys.c    **** 
 7661              		.loc 1 1277 23 is_stmt 0 view .LVU2434
 7662 0c20 4FEA5A1A 		lsr	r10, r10, #5
 7663              	.LVL588:
1279:src/keys.c    **** 	set_last_menu ();
 7664              		.loc 1 1279 2 is_stmt 1 view .LVU2435
1280:src/keys.c    **** 	display_current_menu ();
 7665              		.loc 1 1280 2 view .LVU2436
 7666 0c24 FFF7FEFF 		bl	set_last_menu
 7667              	.LVL589:
1281:src/keys.c    **** 
 7668              		.loc 1 1281 2 view .LVU2437
 7669 0c28 FFF7FEFF 		bl	display_current_menu
 7670              	.LVL590:
1283:src/keys.c    **** 	
ARM GAS  /tmp/ccQmaUTi.s 			page 230


 7671              		.loc 1 1283 2 view .LVU2438
1283:src/keys.c    **** 	
 7672              		.loc 1 1283 5 is_stmt 0 view .LVU2439
 7673 0c2c BBF1000F 		cmp	fp, #0
 7674 0c30 3FF4C9AD 		beq	.L1060
1285:src/keys.c    **** 		return op_map[c - K10][f];
 7675              		.loc 1 1285 2 is_stmt 1 view .LVU2440
1285:src/keys.c    **** 		return op_map[c - K10][f];
 7676              		.loc 1 1285 15 is_stmt 0 view .LVU2441
 7677 0c34 A31F     		subs	r3, r4, #6
1285:src/keys.c    **** 		return op_map[c - K10][f];
 7678              		.loc 1 1285 5 view .LVU2442
 7679 0c36 DAB2     		uxtb	r2, r3
 7680 0c38 022A     		cmp	r2, #2
 7681 0c3a 40F2EC80 		bls	.L1125
1288:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7682              		.loc 1 1288 2 is_stmt 1 view .LVU2443
1288:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7683              		.loc 1 1288 15 is_stmt 0 view .LVU2444
 7684 0c3e 0E3C     		subs	r4, r4, #14
 7685              	.LVL591:
1288:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7686              		.loc 1 1288 5 view .LVU2445
 7687 0c40 E3B2     		uxtb	r3, r4
 7688 0c42 012B     		cmp	r3, #1
 7689 0c44 3FF6BFAD 		bhi	.L1060
1289:src/keys.c    **** 
 7690              		.loc 1 1289 3 is_stmt 1 view .LVU2446
 7691 0c48 514B     		ldr	r3, .L1153+12
 7692              	.LBB924:
 7693              	.LBB925:
 647:src/keys.c    **** }
 7694              		.loc 1 647 15 is_stmt 0 view .LVU2447
 7695 0c4a 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 7696              	.LBE925:
 7697              	.LBE924:
1289:src/keys.c    **** 
 7698              		.loc 1 1289 3 view .LVU2448
 7699 0c4e 03EB4404 		add	r4, r3, r4, lsl #1
 7700              	.LVL592:
1291:src/keys.c    **** }
 7701              		.loc 1 1291 9 view .LVU2449
 7702 0c52 4FF0330B 		mov	fp, #51
 7703              	.LVL593:
1289:src/keys.c    **** 
 7704              		.loc 1 1289 3 view .LVU2450
 7705 0c56 14F80A30 		ldrb	r3, [r4, r10]	@ zero_extendqisi2
 7706              	.LVL594:
 7707              	.LBB927:
 7708              	.LBI924:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 7709              		.loc 1 646 13 is_stmt 1 view .LVU2451
 7710              	.LBB926:
 647:src/keys.c    **** }
 7711              		.loc 1 647 2 view .LVU2452
 647:src/keys.c    **** }
 7712              		.loc 1 647 15 is_stmt 0 view .LVU2453
ARM GAS  /tmp/ccQmaUTi.s 			page 231


 7713 0c5a 9A42     		cmp	r2, r3
 7714 0c5c 08BF     		it	eq
 7715 0c5e 0023     		moveq	r3, #0
 7716              	.LVL595:
 647:src/keys.c    **** }
 7717              		.loc 1 647 15 view .LVU2454
 7718 0c60 88F81130 		strb	r3, [r8, #17]
 648:src/keys.c    **** 
 7719              		.loc 1 648 1 view .LVU2455
 7720 0c64 FFF720BA 		b	.L565
 7721              	.LVL596:
 7722              	.L1127:
 648:src/keys.c    **** 
 7723              		.loc 1 648 1 view .LVU2456
 7724              	.LBE926:
 7725              	.LBE927:
 7726              	.LBE929:
 7727              	.LBE932:
 7728              	.LBB933:
 7729              	.LBB653:
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7730              		.loc 1 263 74 view .LVU2457
 7731 0c68 D8F81430 		ldr	r3, [r8, #20]
 7732 0c6c 4949     		ldr	r1, .L1153+16
 7733 0c6e 0B42     		tst	r3, r1
 7734 0c70 44D0     		beq	.L656
 266:src/keys.c    ****     /*
 7735              		.loc 1 266 3 is_stmt 1 view .LVU2458
 266:src/keys.c    ****     /*
 7736              		.loc 1 266 23 is_stmt 0 view .LVU2459
 7737 0c72 4949     		ldr	r1, .L1153+20
 266:src/keys.c    ****     /*
 7738              		.loc 1 266 6 view .LVU2460
 7739 0c74 0B42     		tst	r3, r1
 7740 0c76 3FF402AB 		beq	.L852
 7741              	.L658:
 7742              	.LBB648:
 335:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7743              		.loc 1 335 5 is_stmt 1 view .LVU2461
 357:src/keys.c    **** 
 7744              		.loc 1 357 5 view .LVU2462
 362:src/keys.c    ****     col = smap[shift];
 7745              		.loc 1 362 5 view .LVU2463
 7746              	.LVL597:
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7747              		.loc 1 363 5 view .LVU2464
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7748              		.loc 1 363 15 is_stmt 0 view .LVU2465
 7749 0c7a 4849     		ldr	r1, .L1153+24
 362:src/keys.c    ****     col = smap[shift];
 7750              		.loc 1 362 8 view .LVU2466
 7751 0c7c 484B     		ldr	r3, .L1153+28
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7752              		.loc 1 363 9 view .LVU2467
 7753 0c7e 11F80AC0 		ldrb	ip, [r1, r10]	@ zero_extendqisi2
 7754              	.LVL598:
 364:src/keys.c    ****   }
ARM GAS  /tmp/ccQmaUTi.s 			page 232


 7755              		.loc 1 364 5 is_stmt 1 view .LVU2468
 364:src/keys.c    ****   }
 7756              		.loc 1 364 9 is_stmt 0 view .LVU2469
 7757 0c82 0621     		movs	r1, #6
 7758 0c84 FFF70ABB 		b	.L661
 7759              	.LVL599:
 7760              	.L631:
 364:src/keys.c    ****   }
 7761              		.loc 1 364 9 view .LVU2470
 7762              	.LBE648:
 7763              	.LBE653:
 7764              	.LBE933:
 7765              	.LBB934:
 7766              	.LBB858:
1915:src/keys.c    **** 		// digit 2..9, -> or .
 7767              		.loc 1 1915 7 is_stmt 1 view .LVU2471
1915:src/keys.c    **** 		// digit 2..9, -> or .
 7768              		.loc 1 1915 10 is_stmt 0 view .LVU2472
 7769 0c88 0928     		cmp	r0, #9
 7770 0c8a 51D9     		bls	.L633
 7771              	.L625:
1915:src/keys.c    **** 		// digit 2..9, -> or .
 7772              		.loc 1 1915 19 view .LVU2473
 7773 0c8c 2C2C     		cmp	r4, #44
 7774 0c8e 4FD0     		beq	.L633
1915:src/keys.c    **** 		// digit 2..9, -> or .
 7775              		.loc 1 1915 35 view .LVU2474
 7776 0c90 262C     		cmp	r4, #38
 7777 0c92 4DD0     		beq	.L633
1921:src/keys.c    **** 	case K11:					// tests vs register
 7778              		.loc 1 1921 2 is_stmt 1 view .LVU2475
 7779 0c94 0C2C     		cmp	r4, #12
 7780 0c96 3FF499AD 		beq	.L812
 7781 0c9a 102C     		cmp	r4, #16
 7782 0c9c 3FF493AD 		beq	.L1060
 7783 0ca0 072C     		cmp	r4, #7
 7784 0ca2 3FF493AD 		beq	.L812
 7785              	.L628:
1935:src/keys.c    **** 	State2.cmplx = cmpx;
 7786              		.loc 1 1935 2 view .LVU2476
1936:src/keys.c    **** 	return STATE_UNFINISHED;
 7787              		.loc 1 1936 15 is_stmt 0 view .LVU2477
 7788 0ca6 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1935:src/keys.c    **** 	State2.cmplx = cmpx;
 7789              		.loc 1 1935 14 view .LVU2478
 7790 0caa 88F80FB0 		strb	fp, [r8, #15]
1936:src/keys.c    **** 	return STATE_UNFINISHED;
 7791              		.loc 1 1936 2 is_stmt 1 view .LVU2479
1936:src/keys.c    **** 	return STATE_UNFINISHED;
 7792              		.loc 1 1936 15 is_stmt 0 view .LVU2480
 7793 0cae 6EF34103 		bfi	r3, lr, #1, #1
 7794 0cb2 88F81530 		strb	r3, [r8, #21]
1937:src/keys.c    **** }
 7795              		.loc 1 1937 2 is_stmt 1 view .LVU2481
1937:src/keys.c    **** }
 7796              		.loc 1 1937 9 is_stmt 0 view .LVU2482
 7797 0cb6 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccQmaUTi.s 			page 233


 7798              	.LVL600:
1937:src/keys.c    **** }
 7799              		.loc 1 1937 9 view .LVU2483
 7800 0cba FFF7F5B9 		b	.L565
 7801              	.LVL601:
 7802              	.L1111:
1937:src/keys.c    **** }
 7803              		.loc 1 1937 9 view .LVU2484
 7804              	.LBE858:
 7805              	.LBE934:
 7806              	.LBB935:
 7807              	.LBB874:
1327:src/keys.c    **** 	}
 7808              		.loc 1 1327 3 is_stmt 1 view .LVU2485
1327:src/keys.c    **** 	}
 7809              		.loc 1 1327 8 is_stmt 0 view .LVU2486
 7810 0cbe FFF7FEFF 		bl	gtodot_digit
 7811              	.LVL602:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7812              		.loc 1 1376 2 is_stmt 1 view .LVU2487
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7813              		.loc 1 1376 5 is_stmt 0 view .LVU2488
 7814 0cc2 0028     		cmp	r0, #0
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7815              		.loc 1 1376 5 view .LVU2489
 7816 0cc4 FFF67FAD 		blt	.L1060
 7817              	.L597:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7818              		.loc 1 1377 3 is_stmt 1 view .LVU2490
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7819              		.loc 1 1377 11 is_stmt 0 view .LVU2491
 7820 0cc8 FFF7FEFF 		bl	find_user_pc
 7821              	.LVL603:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7822              		.loc 1 1377 11 view .LVU2492
 7823 0ccc 2CE7     		b	.L607
 7824              	.LVL604:
 7825              	.L893:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7826              		.loc 1 1377 11 view .LVU2493
 7827              	.LBE874:
 7828              	.LBE935:
 7829              	.LBE1196:
 7830              	.LBE1252:
 7831              	.LBB1253:
 7832 0cce BB46     		mov	fp, r7
 7833              	.LVL605:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7834              		.loc 1 1377 11 view .LVU2494
 7835 0cd0 FFF70CBA 		b	.L840
 7836              	.LVL606:
 7837              	.L626:
1377:src/keys.c    **** fin:		set_pc(rawpc);
 7838              		.loc 1 1377 11 view .LVU2495
 7839              	.LBE1253:
 7840              	.LBB1254:
 7841              	.LBB1197:
ARM GAS  /tmp/ccQmaUTi.s 			page 234


 7842              	.LBB936:
 7843              	.LBB859:
1907:src/keys.c    **** 		// Special 0
 7844              		.loc 1 1907 7 is_stmt 1 view .LVU2496
1907:src/keys.c    **** 		// Special 0
 7845              		.loc 1 1907 10 is_stmt 0 view .LVU2497
 7846 0cd4 0028     		cmp	r0, #0
 7847 0cd6 40F0A887 		bne	.L629
1909:src/keys.c    **** 	}
 7848              		.loc 1 1909 3 is_stmt 1 view .LVU2498
1909:src/keys.c    **** 	}
 7849              		.loc 1 1909 18 is_stmt 0 view .LVU2499
 7850 0cda BEF1000F 		cmp	lr, #0
 7851 0cde 14BF     		ite	ne
 7852 0ce0 2523     		movne	r3, #37
 7853 0ce2 1723     		moveq	r3, #23
1909:src/keys.c    **** 	}
 7854              		.loc 1 1909 47 view .LVU2500
 7855 0ce4 9B44     		add	fp, fp, r3
 7856              	.LVL607:
1909:src/keys.c    **** 	}
 7857              		.loc 1 1909 47 view .LVU2501
 7858 0ce6 53E4     		b	.L594
 7859              	.LVL608:
 7860              	.L1093:
1909:src/keys.c    **** 	}
 7861              		.loc 1 1909 47 view .LVU2502
 7862              	.LBE859:
 7863              	.LBE936:
 7864              	.LBB937:
 7865              	.LBB654:
 372:src/keys.c    ****       break;
 7866              		.loc 1 372 7 is_stmt 1 view .LVU2503
 372:src/keys.c    ****       break;
 7867              		.loc 1 372 11 is_stmt 0 view .LVU2504
 7868 0ce8 6344     		add	r3, r3, ip
 7869              	.LVL609:
 372:src/keys.c    ****       break;
 7870              		.loc 1 372 11 view .LVU2505
 7871 0cea 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7872              	.LVL610:
 373:src/keys.c    ****     }
 7873              		.loc 1 373 7 is_stmt 1 view .LVU2506
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7874              		.loc 1 376 3 view .LVU2507
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7875              		.loc 1 376 6 is_stmt 0 view .LVU2508
 7876 0cee 1307     		lsls	r3, r2, #28
 7877 0cf0 7ED5     		bpl	.L1126
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7878              		.loc 1 376 20 view .LVU2509
 7879 0cf2 ABF10B03 		sub	r3, fp, #11
 7880 0cf6 042B     		cmp	r3, #4
 7881 0cf8 3FF6F9AB 		bhi	.L671
 7882              	.LVL611:
 7883              	.L656:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccQmaUTi.s 			page 235


 7884              		.loc 1 376 20 view .LVU2510
 7885              	.LBE654:
 7886              	.LBE937:
2854:src/keys.c    **** 			return STATE_UNFINISHED;
 7887              		.loc 1 2854 3 is_stmt 1 view .LVU2511
2854:src/keys.c    **** 			return STATE_UNFINISHED;
 7888              		.loc 1 2854 7 is_stmt 0 view .LVU2512
 7889 0cfc FFF7FEFF 		bl	is_bad_cmdline
 7890              	.LVL612:
2854:src/keys.c    **** 			return STATE_UNFINISHED;
 7891              		.loc 1 2854 6 view .LVU2513
 7892 0d00 0446     		mov	r4, r0
 7893 0d02 0028     		cmp	r0, #0
 7894 0d04 7FF45FAD 		bne	.L1060
2856:src/keys.c    **** 		init_cat( cat );
 7895              		.loc 1 2856 3 is_stmt 1 view .LVU2514
 7896 0d08 FFF7FEFF 		bl	init_cat
 7897              	.LVL613:
2857:src/keys.c    **** 		return STATE_UNFINISHED;
 7898              		.loc 1 2857 3 view .LVU2515
 7899 0d0c 5846     		mov	r0, fp
 7900 0d0e FFF7FEFF 		bl	init_cat
 7901              	.LVL614:
2858:src/keys.c    **** 	}
 7902              		.loc 1 2858 3 view .LVU2516
 7903              	.LBE1197:
 7904              	.LBE1254:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 7905              		.loc 1 2929 7 is_stmt 0 view .LVU2517
 7906 0d12 2746     		mov	r7, r4
 7907              	.LBB1255:
 7908              	.LBB1198:
2858:src/keys.c    **** 	}
 7909              		.loc 1 2858 10 view .LVU2518
 7910 0d14 4FF0330B 		mov	fp, #51
 7911 0d18 FFF7C6B9 		b	.L565
 7912              	.LVL615:
 7913              	.L1091:
 7914              	.LBB938:
 7915              	.LBB655:
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7916              		.loc 1 263 16 view .LVU2519
 7917 0d1c BAF1030F 		cmp	r10, #3
 7918 0d20 A2D0     		beq	.L1127
 266:src/keys.c    ****     /*
 7919              		.loc 1 266 3 is_stmt 1 view .LVU2520
 266:src/keys.c    ****     /*
 7920              		.loc 1 266 23 is_stmt 0 view .LVU2521
 7921 0d22 1D49     		ldr	r1, .L1153+20
 7922 0d24 D8F81430 		ldr	r3, [r8, #20]
 266:src/keys.c    ****     /*
 7923              		.loc 1 266 6 view .LVU2522
 7924 0d28 1942     		tst	r1, r3
 7925 0d2a 3FF4E4AA 		beq	.L666
 7926 0d2e A4E7     		b	.L658
 7927              	.LVL616:
 7928              	.L633:
ARM GAS  /tmp/ccQmaUTi.s 			page 236


 266:src/keys.c    ****     /*
 7929              		.loc 1 266 6 view .LVU2523
 7930              	.LBE655:
 7931              	.LBE938:
 7932              	.LBB939:
 7933              	.LBB860:
1917:src/keys.c    **** 		return process_arg(c);
 7934              		.loc 1 1917 3 is_stmt 1 view .LVU2524
 7935              	.LBB855:
 7936              	.LBI855:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 7937              		.loc 1 501 13 view .LVU2525
 7938              	.LBB856:
 502:src/keys.c    **** 		return;
 7939              		.loc 1 502 2 view .LVU2526
 502:src/keys.c    **** 		return;
 7940              		.loc 1 502 6 is_stmt 0 view .LVU2527
 7941 0d30 FFF7FEFF 		bl	is_bad_cmdline
 7942              	.LVL617:
 502:src/keys.c    **** 		return;
 7943              		.loc 1 502 5 view .LVU2528
 7944 0d34 18B9     		cbnz	r0, .L635
 7945 0d36 5FFA8AF0 		uxtb	r0, r10
 7946 0d3a FFF7FEFF 		bl	init_arg.part.0
 7947              	.LVL618:
 7948              	.L635:
 502:src/keys.c    **** 		return;
 7949              		.loc 1 502 5 view .LVU2529
 7950              	.LBE856:
 7951              	.LBE855:
1918:src/keys.c    **** 	}
 7952              		.loc 1 1918 3 is_stmt 1 view .LVU2530
1918:src/keys.c    **** 	}
 7953              		.loc 1 1918 10 is_stmt 0 view .LVU2531
 7954 0d3e 2046     		mov	r0, r4
 7955 0d40 FFF7FEFF 		bl	process_arg
 7956              	.LVL619:
 7957 0d44 8346     		mov	fp, r0
 7958              	.LVL620:
1918:src/keys.c    **** 	}
 7959              		.loc 1 1918 10 view .LVU2532
 7960 0d46 23E4     		b	.L594
 7961              	.LVL621:
 7962              	.L1087:
1918:src/keys.c    **** 	}
 7963              		.loc 1 1918 10 view .LVU2533
 7964              	.LBE860:
 7965              	.LBE939:
2828:src/keys.c    **** 		return STATE_UNFINISHED;
 7966              		.loc 1 2828 3 is_stmt 1 view .LVU2534
 7967              	.LBB940:
 7968              	.LBI940:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7969              		.loc 1 109 13 view .LVU2535
 7970              	.LBB941:
 110:src/keys.c    **** }
 7971              		.loc 1 110 2 view .LVU2536
ARM GAS  /tmp/ccQmaUTi.s 			page 237


 110:src/keys.c    **** }
 7972              		.loc 1 110 16 is_stmt 0 view .LVU2537
 7973 0d48 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7974 0d4c 013B     		subs	r3, r3, #1
 7975 0d4e 18BF     		it	ne
 7976 0d50 0123     		movne	r3, #1
 7977 0d52 88F81030 		strb	r3, [r8, #16]
 7978              	.LVL622:
 110:src/keys.c    **** }
 7979              		.loc 1 110 16 view .LVU2538
 7980              	.LBE941:
 7981              	.LBE940:
2829:src/keys.c    **** 	}
 7982              		.loc 1 2829 3 is_stmt 1 view .LVU2539
2829:src/keys.c    **** 	}
 7983              		.loc 1 2829 10 is_stmt 0 view .LVU2540
 7984 0d56 4FF0330B 		mov	fp, #51
 7985 0d5a FFF7A5B9 		b	.L565
 7986              	.LVL623:
 7987              	.L616:
 7988              	.LBB942:
 7989              	.LBB699:
1247:src/keys.c    **** 		// fall trough
 7990              		.loc 1 1247 3 is_stmt 1 view .LVU2541
1247:src/keys.c    **** 		// fall trough
 7991              		.loc 1 1247 10 is_stmt 0 view .LVU2542
 7992 0d5e A4F12909 		sub	r9, r4, #41
 7993              	.LVL624:
1247:src/keys.c    **** 		// fall trough
 7994              		.loc 1 1247 10 view .LVU2543
 7995 0d62 B9FA89F9 		clz	r9, r9
 7996 0d66 4FEA5919 		lsr	r9, r9, #5
 7997              	.LVL625:
1247:src/keys.c    **** 		// fall trough
 7998              		.loc 1 1247 10 view .LVU2544
 7999 0d6a F6E6     		b	.L621
 8000              	.LVL626:
 8001              	.L1088:
1247:src/keys.c    **** 		// fall trough
 8002              		.loc 1 1247 10 view .LVU2545
 8003              	.LBE699:
 8004              	.LBE942:
2832:src/keys.c    **** 		return STATE_UNFINISHED;
 8005              		.loc 1 2832 3 is_stmt 1 view .LVU2546
 8006              	.LBB943:
 8007              	.LBI943:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8008              		.loc 1 109 13 view .LVU2547
 8009              	.LBB944:
 110:src/keys.c    **** }
 8010              		.loc 1 110 2 view .LVU2548
 110:src/keys.c    **** }
 8011              		.loc 1 110 16 is_stmt 0 view .LVU2549
 8012 0d6c 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 8013 0d70 022A     		cmp	r2, #2
 8014 0d72 18BF     		it	ne
 8015 0d74 0223     		movne	r3, #2
ARM GAS  /tmp/ccQmaUTi.s 			page 238


 8016 0d76 88F81030 		strb	r3, [r8, #16]
 8017              	.LVL627:
 110:src/keys.c    **** }
 8018              		.loc 1 110 16 view .LVU2550
 8019              	.LBE944:
 8020              	.LBE943:
2833:src/keys.c    **** 	}
 8021              		.loc 1 2833 3 is_stmt 1 view .LVU2551
2833:src/keys.c    **** 	}
 8022              		.loc 1 2833 10 is_stmt 0 view .LVU2552
 8023 0d7a 4FF0330B 		mov	fp, #51
 8024 0d7e FFF793B9 		b	.L565
 8025              	.L1154:
 8026 0d82 00BF     		.align	2
 8027              	.L1153:
 8028 0d84 00000000 		.word	main_ram
 8029 0d88 00000000 		.word	.LANCHOR1
 8030 0d8c 00000000 		.word	.LANCHOR0
 8031 0d90 00000000 		.word	.LANCHOR15
 8032 0d94 000A4000 		.word	4196864
 8033 0d98 00080800 		.word	526336
 8034 0d9c 00000000 		.word	.LANCHOR16
 8035 0da0 00000000 		.word	.LANCHOR10
 8036 0da4 00000000 		.word	StateWhileOn
 8037              	.LVL628:
 8038              	.L1047:
2833:src/keys.c    **** 	}
 8039              		.loc 1 2833 10 view .LVU2553
 8040              	.LBE1198:
 8041              	.LBE1255:
3122:src/keys.c    **** 	NonProgrammable = 0;
 8042              		.loc 1 3122 26 view .LVU2554
 8043 0da8 CA4A     		ldr	r2, .L1155
 8044 0daa 1168     		ldr	r1, [r2]
 8045 0dac 0029     		cmp	r1, #0
 8046 0dae 3FF4A2AD 		beq	.L837
 8047              	.LVL629:
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8048              		.loc 1 3123 2 is_stmt 1 view .LVU2555
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8049              		.loc 1 3123 18 is_stmt 0 view .LVU2556
 8050 0db2 1360     		str	r3, [r2]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8051              		.loc 1 3124 2 is_stmt 1 view .LVU2557
 8052 0db4 FFF792BB 		b	.L832
 8053              	.LVL630:
 8054              	.L1089:
 8055              	.LBB1256:
 8056              	.LBB1199:
2836:src/keys.c    **** 		State2.arrow = 0;
 8057              		.loc 1 2836 3 view .LVU2558
 8058              	.LBB945:
 8059              	.LBI945:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8060              		.loc 1 109 13 view .LVU2559
 8061              	.LBB946:
 110:src/keys.c    **** }
ARM GAS  /tmp/ccQmaUTi.s 			page 239


 8062              		.loc 1 110 2 view .LVU2560
 110:src/keys.c    **** }
 8063              		.loc 1 110 16 is_stmt 0 view .LVU2561
 8064 0db8 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 8065 0dbc 0328     		cmp	r0, #3
 8066              	.LBE946:
 8067              	.LBE945:
2837:src/keys.c    **** 		return STATE_UNFINISHED;
 8068              		.loc 1 2837 16 view .LVU2562
 8069 0dbe 61F38202 		bfi	r2, r1, #2, #1
 8070              	.LBB949:
 8071              	.LBB947:
 110:src/keys.c    **** }
 8072              		.loc 1 110 16 view .LVU2563
 8073 0dc2 18BF     		it	ne
 8074 0dc4 0323     		movne	r3, #3
 8075              	.LBE947:
 8076              	.LBE949:
2837:src/keys.c    **** 		return STATE_UNFINISHED;
 8077              		.loc 1 2837 16 view .LVU2564
 8078 0dc6 88F81520 		strb	r2, [r8, #21]
 8079              	.LBB950:
 8080              	.LBB948:
 110:src/keys.c    **** }
 8081              		.loc 1 110 16 view .LVU2565
 8082 0dca 88F81030 		strb	r3, [r8, #16]
 8083              	.LVL631:
 110:src/keys.c    **** }
 8084              		.loc 1 110 16 view .LVU2566
 8085              	.LBE948:
 8086              	.LBE950:
2837:src/keys.c    **** 		return STATE_UNFINISHED;
 8087              		.loc 1 2837 3 is_stmt 1 view .LVU2567
2838:src/keys.c    **** 	}
 8088              		.loc 1 2838 3 view .LVU2568
2838:src/keys.c    **** 	}
 8089              		.loc 1 2838 10 is_stmt 0 view .LVU2569
 8090 0dce 4FF0330B 		mov	fp, #51
 8091 0dd2 FFF769B9 		b	.L565
 8092              	.LVL632:
 8093              	.L1121:
 8094              	.LBB951:
 8095              	.LBB898:
2459:src/keys.c    **** 			n = max;
 8096              		.loc 1 2459 3 is_stmt 1 view .LVU2570
2459:src/keys.c    **** 			n = max;
 8097              		.loc 1 2459 6 is_stmt 0 view .LVU2571
 8098 0dd6 012B     		cmp	r3, #1
 8099 0dd8 A3F10402 		sub	r2, r3, #4
 8100              	.LVL633:
2459:src/keys.c    **** 			n = max;
 8101              		.loc 1 2459 6 view .LVU2572
 8102 0ddc 31D0     		beq	.L1050
 8103 0dde D2B2     		uxtb	r2, r2
 8104              	.LVL634:
2459:src/keys.c    **** 			n = max;
 8105              		.loc 1 2459 6 view .LVU2573
ARM GAS  /tmp/ccQmaUTi.s 			page 240


 8106 0de0 01E7     		b	.L641
 8107              	.LVL635:
 8108              	.L1112:
2459:src/keys.c    **** 			n = max;
 8109              		.loc 1 2459 6 view .LVU2574
 8110              	.LBE898:
 8111              	.LBE951:
 8112              	.LBB952:
 8113              	.LBB875:
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8114              		.loc 1 1330 44 is_stmt 1 view .LVU2575
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8115              		.loc 1 1330 52 is_stmt 0 view .LVU2576
 8116 0de2 0120     		movs	r0, #1
 8117 0de4 FFF7FEFF 		bl	gtodot_digit
 8118              	.LVL636:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8119              		.loc 1 1376 2 is_stmt 1 view .LVU2577
 8120              	.LBE875:
 8121              	.LBE952:
2813:src/keys.c    **** 
 8122              		.loc 1 2813 10 is_stmt 0 view .LVU2578
 8123 0de8 4FF0330B 		mov	fp, #51
 8124 0dec FFF75CB9 		b	.L565
 8125              	.LVL637:
 8126              	.L1126:
2853:src/keys.c    **** 		if (is_bad_cmdline())
 8127              		.loc 1 2853 2 is_stmt 1 view .LVU2579
2853:src/keys.c    **** 		if (is_bad_cmdline())
 8128              		.loc 1 2853 5 is_stmt 0 view .LVU2580
 8129 0df0 BBF1000F 		cmp	fp, #0
 8130 0df4 82D1     		bne	.L656
 8131 0df6 FFF781BA 		b	.L670
 8132              	.LVL638:
 8133              	.L627:
 8134              	.LBB953:
 8135              	.LBB861:
1905:src/keys.c    **** 	}
 8136              		.loc 1 1905 3 is_stmt 1 view .LVU2581
1905:src/keys.c    **** 	}
 8137              		.loc 1 1905 10 is_stmt 0 view .LVU2582
 8138 0dfa 0AF1200A 		add	r10, r10, #32
 8139 0dfe 40EA0A20 		orr	r0, r0, r10, lsl #8
 8140 0e02 8346     		mov	fp, r0
 8141              	.LVL639:
1905:src/keys.c    **** 	}
 8142              		.loc 1 1905 10 view .LVU2583
 8143 0e04 FFF763BB 		b	.L620
 8144              	.LVL640:
 8145              	.L1113:
1905:src/keys.c    **** 	}
 8146              		.loc 1 1905 10 view .LVU2584
 8147              	.LBE861:
 8148              	.LBE953:
 8149              	.LBB954:
 8150              	.LBB876:
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
ARM GAS  /tmp/ccQmaUTi.s 			page 241


 8151              		.loc 1 1331 44 is_stmt 1 view .LVU2585
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8152              		.loc 1 1331 52 is_stmt 0 view .LVU2586
 8153 0e08 0220     		movs	r0, #2
 8154 0e0a FFF7FEFF 		bl	gtodot_digit
 8155              	.LVL641:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8156              		.loc 1 1376 2 is_stmt 1 view .LVU2587
 8157              	.LBE876:
 8158              	.LBE954:
2813:src/keys.c    **** 
 8159              		.loc 1 2813 10 is_stmt 0 view .LVU2588
 8160 0e0e 4FF0330B 		mov	fp, #51
 8161 0e12 FFF749B9 		b	.L565
 8162              	.LVL642:
 8163              	.L1125:
 8164              	.LBB955:
 8165              	.LBB930:
1286:src/keys.c    **** 
 8166              		.loc 1 1286 3 is_stmt 1 view .LVU2589
1286:src/keys.c    **** 
 8167              		.loc 1 1286 25 is_stmt 0 view .LVU2590
 8168 0e16 B04A     		ldr	r2, .L1155+4
 8169 0e18 0AEB4303 		add	r3, r10, r3, lsl #1
 8170 0e1c 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8171              	.LVL643:
1286:src/keys.c    **** 
 8172              		.loc 1 1286 25 view .LVU2591
 8173 0e20 FFF7B6BB 		b	.L594
 8174              	.LVL644:
 8175              	.L1122:
1286:src/keys.c    **** 
 8176              		.loc 1 1286 25 view .LVU2592
 8177              	.LBE930:
 8178              	.LBE955:
 8179              	.LBB956:
 8180              	.LBB899:
2463:src/keys.c    **** 			n = -2;
 8181              		.loc 1 2463 3 is_stmt 1 view .LVU2593
2463:src/keys.c    **** 			n = -2;
 8182              		.loc 1 2463 6 is_stmt 0 view .LVU2594
 8183 0e24 023B     		subs	r3, r3, #2
 8184              	.LVL645:
2463:src/keys.c    **** 			n = -2;
 8185              		.loc 1 2463 6 view .LVU2595
 8186 0e26 8342     		cmp	r3, r0
 8187 0e28 40F3FB81 		ble	.L1049
 8188 0e2c FE22     		movs	r2, #254
 8189 0e2e DAE6     		b	.L641
 8190              	.LVL646:
 8191              	.L866:
2463:src/keys.c    **** 			n = -2;
 8192              		.loc 1 2463 6 view .LVU2596
 8193              	.LBE899:
 8194              	.LBE956:
 8195              	.LBB957:
 8196              	.LBB656:
ARM GAS  /tmp/ccQmaUTi.s 			page 242


 8197              	.LBB649:
 322:src/keys.c    **** #ifndef WINGUI
 8198              		.loc 1 322 8 view .LVU2597
 8199 0e30 AA4B     		ldr	r3, .L1155+8
 328:src/keys.c    ****   }
 8200              		.loc 1 328 9 view .LVU2598
 8201 0e32 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 8202              		.loc 1 324 27 view .LVU2599
 8203 0e34 4FF0010C 		mov	ip, #1
 8204 0e38 FFF730BA 		b	.L661
 8205              	.LVL647:
 8206              	.L1124:
 324:src/keys.c    **** #else
 8207              		.loc 1 324 27 view .LVU2600
 8208              	.LBE649:
 8209              	.LBE656:
 8210              	.LBE957:
 8211              	.LBB958:
 8212              	.LBB900:
 8213              	.LBB895:
2475:src/keys.c    **** 		else if (nn != NO_REG)
 8214              		.loc 1 2475 4 is_stmt 1 view .LVU2601
2475:src/keys.c    **** 		else if (nn != NO_REG)
 8215              		.loc 1 2475 22 is_stmt 0 view .LVU2602
 8216 0e3c 8342     		cmp	r3, r0
 8217 0e3e 3FF4D1AE 		beq	.L862
 8218              	.LVL648:
 8219              	.L1050:
2475:src/keys.c    **** 		else if (nn != NO_REG)
 8220              		.loc 1 2475 22 view .LVU2603
 8221 0e42 C2B2     		uxtb	r2, r0
 8222 0e44 CFE6     		b	.L641
 8223              	.LVL649:
 8224              	.L1114:
2475:src/keys.c    **** 		else if (nn != NO_REG)
 8225              		.loc 1 2475 22 view .LVU2604
 8226              	.LBE895:
 8227              	.LBE900:
 8228              	.LBE958:
 8229              	.LBB959:
 8230              	.LBB877:
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8231              		.loc 1 1332 44 is_stmt 1 view .LVU2605
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8232              		.loc 1 1332 52 is_stmt 0 view .LVU2606
 8233 0e46 0320     		movs	r0, #3
 8234 0e48 FFF7FEFF 		bl	gtodot_digit
 8235              	.LVL650:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8236              		.loc 1 1376 2 is_stmt 1 view .LVU2607
 8237              	.LBE877:
 8238              	.LBE959:
2813:src/keys.c    **** 
 8239              		.loc 1 2813 10 is_stmt 0 view .LVU2608
 8240 0e4c 4FF0330B 		mov	fp, #51
 8241 0e50 FFF72AB9 		b	.L565
ARM GAS  /tmp/ccQmaUTi.s 			page 243


 8242              	.LVL651:
 8243              	.L1095:
2868:src/keys.c    **** 
 8244              		.loc 1 2868 3 is_stmt 1 view .LVU2609
 8245              	.LBB960:
 8246              	.LBI960:
2533:src/keys.c    **** 	unsigned int pc = State2.digval;
 8247              		.loc 1 2533 12 view .LVU2610
 8248              	.LBB961:
2534:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8249              		.loc 1 2534 2 view .LVU2611
2536:src/keys.c    **** 	const int opcode = getprog(pc);
 8250              		.loc 1 2536 27 is_stmt 0 view .LVU2612
 8251 0e54 262C     		cmp	r4, #38
2534:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8252              		.loc 1 2534 15 view .LVU2613
 8253 0e56 B8F808A0 		ldrh	r10, [r8, #8]
 8254              	.LVL652:
2535:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8255              		.loc 1 2535 2 is_stmt 1 view .LVU2614
2536:src/keys.c    **** 	const int opcode = getprog(pc);
 8256              		.loc 1 2536 27 is_stmt 0 view .LVU2615
 8257 0e5a 00F06F83 		beq	.L871
 8258              	.LVL653:
 8259              	.LBB962:
 8260              	.LBI962:
 198:src/keys.c    **** {
 8261              		.loc 1 198 14 is_stmt 1 view .LVU2616
 8262              	.LBB963:
 200:src/keys.c    ****     // K00 - K05
 8263              		.loc 1 200 3 view .LVU2617
 221:src/keys.c    **** }
 8264              		.loc 1 221 3 view .LVU2618
 8265              	.LBB964:
 8266              	.LBI964:
 119:src/keys.c    **** {
 8267              		.loc 1 119 12 view .LVU2619
 8268              	.LBB965:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8269              		.loc 1 121 2 view .LVU2620
 131:src/keys.c    **** }
 8270              		.loc 1 131 2 view .LVU2621
 131:src/keys.c    **** }
 8271              		.loc 1 131 23 is_stmt 0 view .LVU2622
 8272 0e5e A04B     		ldr	r3, .L1155+12
 8273              	.LBE965:
 8274              	.LBE964:
 221:src/keys.c    **** }
 8275              		.loc 1 221 28 view .LVU2623
 8276 0e60 A04A     		ldr	r2, .L1155+16
 8277              	.LBB967:
 8278              	.LBB966:
 131:src/keys.c    **** }
 8279              		.loc 1 131 23 view .LVU2624
 8280 0e62 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8281              	.LBE966:
 8282              	.LBE967:
ARM GAS  /tmp/ccQmaUTi.s 			page 244


 221:src/keys.c    **** }
 8283              		.loc 1 221 10 view .LVU2625
 8284 0e64 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8285              	.LBE963:
 8286              	.LBE962:
2536:src/keys.c    **** 	const int opcode = getprog(pc);
 8287              		.loc 1 2536 27 view .LVU2626
 8288 0e68 2BF0800B 		bic	fp, fp, #128
 8289              	.L685:
 8290              	.LVL654:
2537:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8291              		.loc 1 2537 2 is_stmt 1 view .LVU2627
2537:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8292              		.loc 1 2537 21 is_stmt 0 view .LVU2628
 8293 0e6c 5046     		mov	r0, r10
 8294 0e6e FFF7FEFF 		bl	getprog
 8295              	.LVL655:
2538:src/keys.c    **** 	const int direct = State2.runmode;
 8296              		.loc 1 2538 2 is_stmt 1 view .LVU2629
2538:src/keys.c    **** 	const int direct = State2.runmode;
 8297              		.loc 1 2538 20 is_stmt 0 view .LVU2630
 8298 0e72 00F47040 		and	r0, r0, #61440
 8299              	.LVL656:
2538:src/keys.c    **** 	const int direct = State2.runmode;
 8300              		.loc 1 2538 63 view .LVU2631
 8301 0e76 B0F5704F 		cmp	r0, #61440
 8302 0e7a 00F09984 		beq	.L1128
 8303 0e7e 0022     		movs	r2, #0
 8304              	.L686:
 8305              	.LVL657:
2539:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8306              		.loc 1 2539 2 is_stmt 1 view .LVU2632
2539:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8307              		.loc 1 2539 27 is_stmt 0 view .LVU2633
 8308 0e80 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8309 0e84 0192     		str	r2, [sp, #4]
 8310              	.LVL658:
2539:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8311              		.loc 1 2539 27 view .LVU2634
 8312 0e86 C3F38013 		ubfx	r3, r3, #6, #1
 8313 0e8a 0093     		str	r3, [sp]
 8314              	.LVL659:
2540:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8315              		.loc 1 2540 2 is_stmt 1 view .LVU2635
 8316              	.LBB968:
 8317              	.LBI968:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8318              		.loc 1 102 13 view .LVU2636
 8319              	.LBE968:
 8320              	.LBE961:
 8321              	.LBE960:
 8322              	.LBE1199:
 8323              	.LBE1256:
 103:src/keys.c    **** }
 8324              		.loc 1 103 2 view .LVU2637
 8325              	.LBB1257:
 8326              	.LBB1200:
ARM GAS  /tmp/ccQmaUTi.s 			page 245


 8327              	.LBB995:
 8328              	.LBB987:
 8329              	.LBB975:
 8330              	.LBB969:
 8331              	.LBI969:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8332              		.loc 1 92 20 view .LVU2638
 8333              	.LBB970:
  93:src/keys.c    **** 	State2.shifts = shift;
 8334              		.loc 1 93 2 view .LVU2639
 8335              	.LBB971:
 8336              	.LBI971:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8337              		.loc 1 84 13 view .LVU2640
 8338              	.LBB972:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8339              		.loc 1 85 2 view .LVU2641
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8340              		.loc 1 85 18 is_stmt 0 view .LVU2642
 8341 0e8c FFF7FEFF 		bl	shift_down
 8342              	.LVL660:
  86:src/keys.c    **** }
 8343              		.loc 1 86 2 is_stmt 1 view .LVU2643
  86:src/keys.c    **** }
 8344              		.loc 1 86 52 is_stmt 0 view .LVU2644
 8345 0e90 019A     		ldr	r2, [sp, #4]
 8346 0e92 0346     		mov	r3, r0
 8347 0e94 08B9     		cbnz	r0, .L687
 8348 0e96 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8349              	.L687:
 8350              	.LVL661:
  86:src/keys.c    **** }
 8351              		.loc 1 86 52 view .LVU2645
 8352              	.LBE972:
 8353              	.LBE971:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8354              		.loc 1 94 2 is_stmt 1 view .LVU2646
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8355              		.loc 1 94 16 is_stmt 0 view .LVU2647
 8356 0e9a 0021     		movs	r1, #0
 8357              	.LBE970:
 8358              	.LBE969:
 8359              	.LBE975:
2543:src/keys.c    **** 		// Digits take you to that segment
 8360              		.loc 1 2543 5 view .LVU2648
 8361 0e9c BBF1020F 		cmp	fp, #2
 8362              	.LBB976:
 8363              	.LBB974:
 8364              	.LBB973:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8365              		.loc 1 94 16 view .LVU2649
 8366 0ea0 88F81010 		strb	r1, [r8, #16]
  95:src/keys.c    **** 	return r;
 8367              		.loc 1 95 2 is_stmt 1 view .LVU2650
  95:src/keys.c    **** 	return r;
 8368              		.loc 1 95 19 is_stmt 0 view .LVU2651
 8369 0ea4 88F80D10 		strb	r1, [r8, #13]
ARM GAS  /tmp/ccQmaUTi.s 			page 246


  96:src/keys.c    **** }
 8370              		.loc 1 96 2 is_stmt 1 view .LVU2652
 8371              	.LVL662:
  96:src/keys.c    **** }
 8372              		.loc 1 96 2 is_stmt 0 view .LVU2653
 8373              	.LBE973:
 8374              	.LBE974:
 8375              	.LBE976:
2541:src/keys.c    **** 
 8376              		.loc 1 2541 2 is_stmt 1 view .LVU2654
2543:src/keys.c    **** 		// Digits take you to that segment
 8377              		.loc 1 2543 2 view .LVU2655
2543:src/keys.c    **** 		// Digits take you to that segment
 8378              		.loc 1 2543 5 is_stmt 0 view .LVU2656
 8379 0ea8 40F2E785 		bls	.L1129
2552:src/keys.c    **** 
 8380              		.loc 1 2552 2 is_stmt 1 view .LVU2657
2552:src/keys.c    **** 
 8381              		.loc 1 2552 12 is_stmt 0 view .LVU2658
 8382 0eac 44EA0323 		orr	r3, r4, r3, lsl #8
 8383              	.LVL663:
2552:src/keys.c    **** 
 8384              		.loc 1 2552 2 view .LVU2659
 8385 0eb0 272B     		cmp	r3, #39
 8386 0eb2 00F3B480 		bgt	.L690
 8387 0eb6 042B     		cmp	r3, #4
 8388 0eb8 7FF785AC 		ble	.L1060
 8389 0ebc 053B     		subs	r3, r3, #5
 8390 0ebe 222B     		cmp	r3, #34
 8391 0ec0 3FF681AC 		bhi	.L1060
 8392 0ec4 01A1     		adr	r1, .L698
 8393 0ec6 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8394 0eca 00BF     		.p2align 2
 8395              	.L698:
 8396 0ecc AD0F0000 		.word	.L703+1
 8397 0ed0 B70F0000 		.word	.L702+1
 8398 0ed4 B70F0000 		.word	.L702+1
 8399 0ed8 C7070000 		.word	.L1060+1
 8400 0edc C7070000 		.word	.L1060+1
 8401 0ee0 C7070000 		.word	.L1060+1
 8402 0ee4 C7070000 		.word	.L1060+1
 8403 0ee8 590F0000 		.word	.L874+1
 8404 0eec C7070000 		.word	.L1060+1
 8405 0ef0 C7070000 		.word	.L1060+1
 8406 0ef4 C7070000 		.word	.L1060+1
 8407 0ef8 D90F0000 		.word	.L701+1
 8408 0efc C7070000 		.word	.L1060+1
 8409 0f00 C50F0000 		.word	.L700+1
 8410 0f04 C7070000 		.word	.L1060+1
 8411 0f08 C7070000 		.word	.L1060+1
 8412 0f0c C7070000 		.word	.L1060+1
 8413 0f10 C7070000 		.word	.L1060+1
 8414 0f14 C7070000 		.word	.L1060+1
 8415 0f18 970F0000 		.word	.L699+1
 8416 0f1c C7070000 		.word	.L1060+1
 8417 0f20 C7070000 		.word	.L1060+1
 8418 0f24 C7070000 		.word	.L1060+1
ARM GAS  /tmp/ccQmaUTi.s 			page 247


 8419 0f28 C7070000 		.word	.L1060+1
 8420 0f2c C7070000 		.word	.L1060+1
 8421 0f30 C7070000 		.word	.L1060+1
 8422 0f34 C7070000 		.word	.L1060+1
 8423 0f38 C7070000 		.word	.L1060+1
 8424 0f3c C7070000 		.word	.L1060+1
 8425 0f40 C7070000 		.word	.L1060+1
 8426 0f44 C7070000 		.word	.L1060+1
 8427 0f48 C7070000 		.word	.L1060+1
 8428 0f4c C7070000 		.word	.L1060+1
 8429 0f50 C7070000 		.word	.L1060+1
 8430 0f54 F30F0000 		.word	.L697+1
 8431              		.p2align 1
 8432              	.L874:
2541:src/keys.c    **** 
 8433              		.loc 1 2541 6 view .LVU2660
 8434 0f58 4FF0330B 		mov	fp, #51
 8435              	.LVL664:
 8436              	.L695:
2574:src/keys.c    **** 		break;
 8437              		.loc 1 2574 3 is_stmt 1 view .LVU2661
 8438 0f5c 5046     		mov	r0, r10
 8439 0f5e FFF7FEFF 		bl	set_pc
 8440              	.LVL665:
2575:src/keys.c    **** 
 8441              		.loc 1 2575 3 view .LVU2662
 8442              	.L707:
2628:src/keys.c    **** 	State2.labellist = 0;
 8443              		.loc 1 2628 2 view .LVU2663
2629:src/keys.c    **** 	return check_confirm(op);
 8444              		.loc 1 2629 19 is_stmt 0 view .LVU2664
 8445 0f62 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2628:src/keys.c    **** 	State2.labellist = 0;
 8446              		.loc 1 2628 16 view .LVU2665
 8447 0f66 0022     		movs	r2, #0
 8448              	.LBB977:
 8449              	.LBB978:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8450              		.loc 1 620 5 view .LVU2666
 8451 0f68 CBF30723 		ubfx	r3, fp, #8, #8
 8452              	.LBE978:
 8453              	.LBE977:
2629:src/keys.c    **** 	return check_confirm(op);
 8454              		.loc 1 2629 19 view .LVU2667
 8455 0f6c 62F38201 		bfi	r1, r2, #2, #1
 8456              	.LBB983:
 8457              	.LBB979:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8458              		.loc 1 620 5 view .LVU2668
 8459 0f70 012B     		cmp	r3, #1
 8460              	.LBE979:
 8461              	.LBE983:
2629:src/keys.c    **** 	return check_confirm(op);
 8462              		.loc 1 2629 19 view .LVU2669
 8463 0f72 88F81710 		strb	r1, [r8, #23]
2628:src/keys.c    **** 	State2.labellist = 0;
 8464              		.loc 1 2628 16 view .LVU2670
ARM GAS  /tmp/ccQmaUTi.s 			page 248


 8465 0f76 A8F80820 		strh	r2, [r8, #8]	@ movhi
2629:src/keys.c    **** 	return check_confirm(op);
 8466              		.loc 1 2629 2 is_stmt 1 view .LVU2671
2630:src/keys.c    **** }
 8467              		.loc 1 2630 2 view .LVU2672
 8468              	.LVL666:
 8469              	.LBB984:
 8470              	.LBI977:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8471              		.loc 1 619 12 view .LVU2673
 8472              	.LBB980:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8473              		.loc 1 620 2 view .LVU2674
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8474              		.loc 1 620 5 is_stmt 0 view .LVU2675
 8475 0f7a 7FF409AB 		bne	.L594
 8476              	.LVL667:
 8477              	.L851:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8478              		.loc 1 620 5 view .LVU2676
 8479              	.LBE980:
 8480              	.LBE984:
 8481              	.LBE987:
 8482              	.LBE995:
 8483              	.LBB996:
 8484              	.LBB997:
 8485              	.LBB998:
 8486              	.LBB999:
 8487 0f7e 5846     		mov	r0, fp
 8488 0f80 FFF7FEFF 		bl	check_confirm.part.0
 8489              	.LVL668:
 8490 0f84 8346     		mov	fp, r0
 8491              	.LVL669:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8492              		.loc 1 620 5 view .LVU2677
 8493 0f86 FFF703BB 		b	.L594
 8494              	.LVL670:
 8495              	.L692:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8496              		.loc 1 620 5 view .LVU2678
 8497              	.LBE999:
 8498              	.LBE998:
 8499              	.LBE997:
 8500              	.LBE996:
 8501              	.LBB1039:
 8502              	.LBB988:
2559:src/keys.c    **** 	case K_DOWN:				// Find next label
 8503              		.loc 1 2559 3 is_stmt 1 view .LVU2679
2559:src/keys.c    **** 	case K_DOWN:				// Find next label
 8504              		.loc 1 2559 8 is_stmt 0 view .LVU2680
 8505 0f8a 5046     		mov	r0, r10
 8506 0f8c 0122     		movs	r2, #1
 8507 0f8e 0021     		movs	r1, #0
 8508 0f90 FFF7FEFF 		bl	advance_to_next_label
 8509              	.LVL671:
 8510 0f94 8246     		mov	r10, r0
 8511              	.LVL672:
ARM GAS  /tmp/ccQmaUTi.s 			page 249


 8512              	.L699:
2562:src/keys.c    **** 		return STATE_UNFINISHED;
 8513              		.loc 1 2562 3 is_stmt 1 view .LVU2681
2562:src/keys.c    **** 		return STATE_UNFINISHED;
 8514              		.loc 1 2562 19 is_stmt 0 view .LVU2682
 8515 0f96 5046     		mov	r0, r10
 8516 0f98 0022     		movs	r2, #0
 8517 0f9a 0121     		movs	r1, #1
 8518 0f9c FFF7FEFF 		bl	advance_to_next_label
 8519              	.LVL673:
2563:src/keys.c    **** 
 8520              		.loc 1 2563 10 view .LVU2683
 8521 0fa0 4FF0330B 		mov	fp, #51
 8522              	.LVL674:
2562:src/keys.c    **** 		return STATE_UNFINISHED;
 8523              		.loc 1 2562 17 view .LVU2684
 8524 0fa4 A8F80800 		strh	r0, [r8, #8]	@ movhi
2563:src/keys.c    **** 
 8525              		.loc 1 2563 3 is_stmt 1 view .LVU2685
2563:src/keys.c    **** 
 8526              		.loc 1 2563 10 is_stmt 0 view .LVU2686
 8527 0fa8 FFF77EB8 		b	.L565
 8528              	.LVL675:
 8529              	.L703:
 8530              	.L708:
2592:src/keys.c    **** 		goto xeq_or_gto;
 8531              		.loc 1 2592 3 is_stmt 1 view .LVU2687
2592:src/keys.c    **** 		goto xeq_or_gto;
 8532              		.loc 1 2592 6 is_stmt 0 view .LVU2688
 8533 0fac 02F5007B 		add	fp, r2, #512
 8534              	.LVL676:
2593:src/keys.c    **** 
 8535              		.loc 1 2593 3 is_stmt 1 view .LVU2689
2598:src/keys.c    **** 			break;
 8536              		.loc 1 2598 3 view .LVU2690
2598:src/keys.c    **** 			break;
 8537              		.loc 1 2598 6 is_stmt 0 view .LVU2691
 8538 0fb0 002A     		cmp	r2, #0
 8539 0fb2 D6D1     		bne	.L707
 8540 0fb4 07E4     		b	.L1060
 8541              	.LVL677:
 8542              	.L702:
2584:src/keys.c    **** 	  //#endif
 8543              		.loc 1 2584 3 is_stmt 1 view .LVU2692
2584:src/keys.c    **** 	  //#endif
 8544              		.loc 1 2584 38 is_stmt 0 view .LVU2693
 8545 0fb6 062C     		cmp	r4, #6
 8546 0fb8 40F2B11B 		movw	fp, #433
 8547              	.LVL678:
2584:src/keys.c    **** 	  //#endif
 8548              		.loc 1 2584 38 view .LVU2694
 8549 0fbc 08BF     		it	eq
 8550 0fbe 4FF4D97B 		moveq	fp, #434
 8551 0fc2 CBE7     		b	.L695
 8552              	.LVL679:
 8553              	.L700:
2566:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccQmaUTi.s 			page 250


 8554              		.loc 1 2566 3 is_stmt 1 view .LVU2695
2566:src/keys.c    **** 		return STATE_UNFINISHED;
 8555              		.loc 1 2566 19 is_stmt 0 view .LVU2696
 8556 0fc4 5046     		mov	r0, r10
 8557 0fc6 0021     		movs	r1, #0
 8558 0fc8 FFF7FEFF 		bl	advance_to_previous_label
 8559              	.LVL680:
2567:src/keys.c    **** 
 8560              		.loc 1 2567 10 view .LVU2697
 8561 0fcc 4FF0330B 		mov	fp, #51
 8562              	.LVL681:
2566:src/keys.c    **** 		return STATE_UNFINISHED;
 8563              		.loc 1 2566 17 view .LVU2698
 8564 0fd0 A8F80800 		strh	r0, [r8, #8]	@ movhi
2567:src/keys.c    **** 
 8565              		.loc 1 2567 3 is_stmt 1 view .LVU2699
2567:src/keys.c    **** 
 8566              		.loc 1 2567 10 is_stmt 0 view .LVU2700
 8567 0fd4 FFF768B8 		b	.L565
 8568              	.LVL682:
 8569              	.L701:
2628:src/keys.c    **** 	State2.labellist = 0;
 8570              		.loc 1 2628 2 is_stmt 1 view .LVU2701
2629:src/keys.c    **** 	return check_confirm(op);
 8571              		.loc 1 2629 19 is_stmt 0 view .LVU2702
 8572 0fd8 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2628:src/keys.c    **** 	State2.labellist = 0;
 8573              		.loc 1 2628 16 view .LVU2703
 8574 0fdc 0023     		movs	r3, #0
2629:src/keys.c    **** 	return check_confirm(op);
 8575              		.loc 1 2629 19 view .LVU2704
 8576 0fde 63F38202 		bfi	r2, r3, #2, #1
 8577 0fe2 88F81720 		strb	r2, [r8, #23]
2628:src/keys.c    **** 	State2.labellist = 0;
 8578              		.loc 1 2628 16 view .LVU2705
 8579 0fe6 A8F80830 		strh	r3, [r8, #8]	@ movhi
2629:src/keys.c    **** 	return check_confirm(op);
 8580              		.loc 1 2629 2 is_stmt 1 view .LVU2706
2630:src/keys.c    **** }
 8581              		.loc 1 2630 2 view .LVU2707
 8582              	.LVL683:
 8583              	.LBB985:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8584              		.loc 1 619 12 view .LVU2708
 8585              	.LBB981:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8586              		.loc 1 620 2 view .LVU2709
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8587              		.loc 1 620 2 is_stmt 0 view .LVU2710
 8588              	.LBE981:
 8589              	.LBE985:
 8590              	.LBE988:
 8591              	.LBE1039:
 8592              	.LBE1200:
 8593              	.LBE1257:
3086:src/keys.c    ****     case STATE_SST:
 8594              		.loc 1 3086 5 is_stmt 1 view .LVU2711
ARM GAS  /tmp/ccQmaUTi.s 			page 251


 8595              	.LBB1258:
 8596              	.LBB1201:
 8597              	.LBB1040:
 8598              	.LBB989:
2541:src/keys.c    **** 
 8599              		.loc 1 2541 6 is_stmt 0 view .LVU2712
 8600 0fea 4FF0330B 		mov	fp, #51
 8601              	.LVL684:
2541:src/keys.c    **** 
 8602              		.loc 1 2541 6 view .LVU2713
 8603 0fee FFF75BB8 		b	.L565
 8604              	.LVL685:
 8605              	.L697:
2614:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8606              		.loc 1 2614 3 is_stmt 1 view .LVU2714
2614:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8607              		.loc 1 2614 6 is_stmt 0 view .LVU2715
 8608 0ff2 009B     		ldr	r3, [sp]
 8609 0ff4 002B     		cmp	r3, #0
 8610 0ff6 3FF4E6AB 		beq	.L1060
2614:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8611              		.loc 1 2614 14 view .LVU2716
 8612 0ffa 002A     		cmp	r2, #0
 8613 0ffc 3FF4E3AB 		beq	.L1060
2615:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8614              		.loc 1 2615 4 is_stmt 1 view .LVU2717
 8615 1000 5146     		mov	r1, r10
 8616 1002 0120     		movs	r0, #1
 8617 1004 FFF7FEFF 		bl	cmdgtocommon
 8618              	.LVL686:
2616:src/keys.c    **** 			break;
 8619              		.loc 1 2616 4 view .LVU2718
2617:src/keys.c    **** 		}
 8620              		.loc 1 2617 4 view .LVU2719
2628:src/keys.c    **** 	State2.labellist = 0;
 8621              		.loc 1 2628 2 view .LVU2720
2629:src/keys.c    **** 	return check_confirm(op);
 8622              		.loc 1 2629 19 is_stmt 0 view .LVU2721
 8623 1008 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2628:src/keys.c    **** 	State2.labellist = 0;
 8624              		.loc 1 2628 16 view .LVU2722
 8625 100c 0023     		movs	r3, #0
2629:src/keys.c    **** 	return check_confirm(op);
 8626              		.loc 1 2629 19 view .LVU2723
 8627 100e 63F38202 		bfi	r2, r3, #2, #1
 8628 1012 88F81720 		strb	r2, [r8, #23]
2628:src/keys.c    **** 	State2.labellist = 0;
 8629              		.loc 1 2628 16 view .LVU2724
 8630 1016 A8F80830 		strh	r3, [r8, #8]	@ movhi
2629:src/keys.c    **** 	return check_confirm(op);
 8631              		.loc 1 2629 2 is_stmt 1 view .LVU2725
2630:src/keys.c    **** }
 8632              		.loc 1 2630 2 view .LVU2726
 8633              	.LVL687:
 8634              	.LBB986:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8635              		.loc 1 619 12 view .LVU2727
ARM GAS  /tmp/ccQmaUTi.s 			page 252


 8636              	.LBB982:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8637              		.loc 1 620 2 view .LVU2728
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8638              		.loc 1 620 2 is_stmt 0 view .LVU2729
 8639              	.LBE982:
 8640              	.LBE986:
 8641              	.LBE989:
 8642              	.LBE1040:
 8643              	.LBE1201:
 8644              	.LBE1258:
3086:src/keys.c    ****     case STATE_SST:
 8645              		.loc 1 3086 5 is_stmt 1 view .LVU2730
 8646 101a FFF7BFB8 		b	.L574
 8647              	.LVL688:
 8648              	.L690:
 8649              	.LBB1259:
 8650              	.LBB1202:
 8651              	.LBB1041:
 8652              	.LBB990:
2552:src/keys.c    **** 
 8653              		.loc 1 2552 2 is_stmt 0 view .LVU2731
 8654 101e B3F58C7F 		cmp	r3, #280
 8655 1022 48DC     		bgt	.L704
 8656 1024 B3F5827F 		cmp	r3, #260
 8657 1028 7FF7CDAB 		ble	.L1060
 8658 102c 6FF48274 		mvn	r4, #260
 8659 1030 2344     		add	r3, r3, r4
 8660 1032 132B     		cmp	r3, #19
 8661 1034 3FF6C7AB 		bhi	.L1060
 8662 1038 01A1     		adr	r1, .L693
 8663 103a 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8664 103e 00BF     		.p2align 2
 8665              	.L693:
 8666 1040 97100000 		.word	.L696+1
 8667 1044 C7070000 		.word	.L1060+1
 8668 1048 C7070000 		.word	.L1060+1
 8669 104c C7070000 		.word	.L1060+1
 8670 1050 C7070000 		.word	.L1060+1
 8671 1054 C7070000 		.word	.L1060+1
 8672 1058 C7070000 		.word	.L1060+1
 8673 105c C7070000 		.word	.L1060+1
 8674 1060 C7070000 		.word	.L1060+1
 8675 1064 C7070000 		.word	.L1060+1
 8676 1068 C7070000 		.word	.L1060+1
 8677 106c 91100000 		.word	.L873+1
 8678 1070 C7070000 		.word	.L1060+1
 8679 1074 A5100000 		.word	.L694+1
 8680 1078 C7070000 		.word	.L1060+1
 8681 107c C7070000 		.word	.L1060+1
 8682 1080 C7070000 		.word	.L1060+1
 8683 1084 C7070000 		.word	.L1060+1
 8684 1088 C7070000 		.word	.L1060+1
 8685 108c 8B0F0000 		.word	.L692+1
 8686              		.p2align 1
 8687              	.L873:
 8688 1090 40F2431B 		movw	fp, #323
ARM GAS  /tmp/ccQmaUTi.s 			page 253


 8689              	.LVL689:
2552:src/keys.c    **** 
 8690              		.loc 1 2552 2 view .LVU2732
 8691 1094 62E7     		b	.L695
 8692              	.LVL690:
 8693              	.L696:
2596:src/keys.c    **** 	xeq_or_gto:
 8694              		.loc 1 2596 3 is_stmt 1 view .LVU2733
2596:src/keys.c    **** 	xeq_or_gto:
 8695              		.loc 1 2596 6 is_stmt 0 view .LVU2734
 8696 1096 02F5407B 		add	fp, r2, #768
 8697              	.LVL691:
2598:src/keys.c    **** 			break;
 8698              		.loc 1 2598 3 is_stmt 1 view .LVU2735
2598:src/keys.c    **** 			break;
 8699              		.loc 1 2598 6 is_stmt 0 view .LVU2736
 8700 109a 002A     		cmp	r2, #0
 8701 109c 7FF461AF 		bne	.L707
 8702 10a0 FFF791BB 		b	.L1060
 8703              	.LVL692:
 8704              	.L694:
2555:src/keys.c    **** 		goto next;
 8705              		.loc 1 2555 3 is_stmt 1 view .LVU2737
2555:src/keys.c    **** 		goto next;
 8706              		.loc 1 2555 8 is_stmt 0 view .LVU2738
 8707 10a4 5046     		mov	r0, r10
 8708 10a6 0121     		movs	r1, #1
 8709 10a8 FFF7FEFF 		bl	advance_to_previous_label
 8710              	.LVL693:
 8711 10ac 0121     		movs	r1, #1
 8712 10ae FFF7FEFF 		bl	advance_to_previous_label
 8713              	.LVL694:
 8714 10b2 8246     		mov	r10, r0
 8715              	.LVL695:
2556:src/keys.c    **** 
 8716              		.loc 1 2556 3 is_stmt 1 view .LVU2739
 8717 10b4 6FE7     		b	.L699
 8718              	.LVL696:
 8719              	.L704:
2552:src/keys.c    **** 
 8720              		.loc 1 2552 2 is_stmt 0 view .LVU2740
 8721 10b6 40F22732 		movw	r2, #807
 8722 10ba 9342     		cmp	r3, r2
 8723 10bc 7FF483AB 		bne	.L1060
2622:src/keys.c    **** 		goto set_pc_and_exit;
 8724              		.loc 1 2622 3 is_stmt 1 view .LVU2741
2622:src/keys.c    **** 		goto set_pc_and_exit;
 8725              		.loc 1 2622 18 is_stmt 0 view .LVU2742
 8726 10c0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8727 10c4 61F38613 		bfi	r3, r1, #6, #1
 8728 10c8 88F81630 		strb	r3, [r8, #22]
2623:src/keys.c    **** 
 8729              		.loc 1 2623 3 is_stmt 1 view .LVU2743
2541:src/keys.c    **** 
 8730              		.loc 1 2541 6 is_stmt 0 view .LVU2744
 8731 10cc 4FF0330B 		mov	fp, #51
 8732              	.LVL697:
ARM GAS  /tmp/ccQmaUTi.s 			page 254


2623:src/keys.c    **** 
 8733              		.loc 1 2623 3 view .LVU2745
 8734 10d0 44E7     		b	.L695
 8735              	.L1156:
 8736 10d2 00BF     		.align	2
 8737              	.L1155:
 8738 10d4 00000000 		.word	NonProgrammable
 8739 10d8 00000000 		.word	.LANCHOR14
 8740 10dc 00000000 		.word	.LANCHOR11
 8741 10e0 00000000 		.word	.LANCHOR1
 8742 10e4 00000000 		.word	.LANCHOR0
 8743              	.LVL698:
 8744              	.L1096:
2623:src/keys.c    **** 
 8745              		.loc 1 2623 3 view .LVU2746
 8746              	.LBE990:
 8747              	.LBE1041:
2871:src/keys.c    **** 
 8748              		.loc 1 2871 3 is_stmt 1 view .LVU2747
 8749              	.LBB1042:
 8750              	.LBI795:
2664:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8751              		.loc 1 2664 12 view .LVU2748
 8752              	.LBB820:
2665:src/keys.c    **** 	enum shifts shift = reset_shift();
 8753              		.loc 1 2665 2 view .LVU2749
 8754              	.LBB797:
 8755              	.LBI797:
 198:src/keys.c    **** {
 8756              		.loc 1 198 14 view .LVU2750
 8757              	.LBB798:
 200:src/keys.c    ****     // K00 - K05
 8758              		.loc 1 200 3 view .LVU2751
 221:src/keys.c    **** }
 8759              		.loc 1 221 3 view .LVU2752
 8760              	.LBB799:
 8761              	.LBI799:
 119:src/keys.c    **** {
 8762              		.loc 1 119 12 view .LVU2753
 8763              	.LBB800:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8764              		.loc 1 121 2 view .LVU2754
 131:src/keys.c    **** }
 8765              		.loc 1 131 2 view .LVU2755
 131:src/keys.c    **** }
 8766              		.loc 1 131 23 is_stmt 0 view .LVU2756
 8767 10e8 DD4B     		ldr	r3, .L1157
 8768              	.LBE800:
 8769              	.LBE799:
 221:src/keys.c    **** }
 8770              		.loc 1 221 28 view .LVU2757
 8771 10ea DE4A     		ldr	r2, .L1157+4
 8772              	.LBB802:
 8773              	.LBB801:
 131:src/keys.c    **** }
 8774              		.loc 1 131 23 view .LVU2758
 8775 10ec 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccQmaUTi.s 			page 255


 8776              	.LBE801:
 8777              	.LBE802:
 221:src/keys.c    **** }
 8778              		.loc 1 221 10 view .LVU2759
 8779 10ee 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 8780              	.LVL699:
 221:src/keys.c    **** }
 8781              		.loc 1 221 10 view .LVU2760
 8782              	.LBE798:
 8783              	.LBE797:
 8784              	.LBB803:
 8785              	.LBB804:
 8786              	.LBB805:
 8787              	.LBB806:
 8788              	.LBB807:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8789              		.loc 1 85 18 view .LVU2761
 8790 10f2 FFF7FEFF 		bl	shift_down
 8791              	.LVL700:
 8792              	.LBE807:
 8793              	.LBE806:
 8794              	.LBE805:
 8795              	.LBE804:
 8796              	.LBE803:
2665:src/keys.c    **** 	enum shifts shift = reset_shift();
 8797              		.loc 1 2665 15 view .LVU2762
 8798 10f6 2AF0800A 		bic	r10, r10, #128
 8799              	.LVL701:
2666:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 8800              		.loc 1 2666 2 is_stmt 1 view .LVU2763
 8801              	.LBB814:
 8802              	.LBI803:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8803              		.loc 1 102 13 view .LVU2764
 8804              	.LBE814:
 8805              	.LBE820:
 8806              	.LBE1042:
 8807              	.LBE1202:
 8808              	.LBE1259:
 103:src/keys.c    **** }
 8809              		.loc 1 103 2 view .LVU2765
 8810              	.LBB1260:
 8811              	.LBB1203:
 8812              	.LBB1043:
 8813              	.LBB821:
 8814              	.LBB815:
 8815              	.LBB812:
 8816              	.LBI804:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8817              		.loc 1 92 20 view .LVU2766
 8818              	.LBB810:
  93:src/keys.c    **** 	State2.shifts = shift;
 8819              		.loc 1 93 2 view .LVU2767
 8820              	.LBB809:
 8821              	.LBI806:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8822              		.loc 1 84 13 view .LVU2768
ARM GAS  /tmp/ccQmaUTi.s 			page 256


 8823              	.LBB808:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8824              		.loc 1 85 2 view .LVU2769
  86:src/keys.c    **** }
 8825              		.loc 1 86 2 view .LVU2770
  86:src/keys.c    **** }
 8826              		.loc 1 86 52 is_stmt 0 view .LVU2771
 8827 10fa 0346     		mov	r3, r0
 8828 10fc 08B9     		cbnz	r0, .L710
 8829 10fe 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8830              	.L710:
 8831              	.LVL702:
  86:src/keys.c    **** }
 8832              		.loc 1 86 52 view .LVU2772
 8833              	.LBE808:
 8834              	.LBE809:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8835              		.loc 1 94 2 is_stmt 1 view .LVU2773
 8836              	.LBE810:
 8837              	.LBE812:
 8838              	.LBE815:
2667:src/keys.c    **** 	const int g_max = global_regs();
 8839              		.loc 1 2667 31 is_stmt 0 view .LVU2774
 8840 1102 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 8841              	.LBB816:
 8842              	.LBB813:
 8843              	.LBB811:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8844              		.loc 1 94 16 view .LVU2775
 8845 1106 0022     		movs	r2, #0
 8846 1108 88F81020 		strb	r2, [r8, #16]
  95:src/keys.c    **** 	return r;
 8847              		.loc 1 95 2 is_stmt 1 view .LVU2776
  95:src/keys.c    **** 	return r;
 8848              		.loc 1 95 19 is_stmt 0 view .LVU2777
 8849 110c 88F80D20 		strb	r2, [r8, #13]
  96:src/keys.c    **** }
 8850              		.loc 1 96 2 is_stmt 1 view .LVU2778
 8851              	.LVL703:
  96:src/keys.c    **** }
 8852              		.loc 1 96 2 is_stmt 0 view .LVU2779
 8853              	.LBE811:
 8854              	.LBE813:
 8855              	.LBE816:
2667:src/keys.c    **** 	const int g_max = global_regs();
 8856              		.loc 1 2667 2 is_stmt 1 view .LVU2780
2667:src/keys.c    **** 	const int g_max = global_regs();
 8857              		.loc 1 2667 46 is_stmt 0 view .LVU2781
 8858 1110 CA07     		lsls	r2, r1, #31
 8859 1112 00F14783 		bmi	.L1130
 8860 1116 4FF07009 		mov	r9, #112
 8861              	.LVL704:
 8862              	.L711:
2667:src/keys.c    **** 	const int g_max = global_regs();
 8863              		.loc 1 2667 46 view .LVU2782
 8864 111a 0093     		str	r3, [sp]
 8865              	.LVL705:
ARM GAS  /tmp/ccQmaUTi.s 			page 257


2668:src/keys.c    **** 
 8866              		.loc 1 2668 2 is_stmt 1 view .LVU2783
2668:src/keys.c    **** 
 8867              		.loc 1 2668 20 is_stmt 0 view .LVU2784
 8868 111c FFF7FEFF 		bl	global_regs
 8869              	.LVL706:
2670:src/keys.c    **** 		if (local_regs())
 8870              		.loc 1 2670 2 is_stmt 1 view .LVU2785
2670:src/keys.c    **** 		if (local_regs())
 8871              		.loc 1 2670 5 is_stmt 0 view .LVU2786
 8872 1120 BAF1700F 		cmp	r10, #112
 8873 1124 009B     		ldr	r3, [sp]
 8874 1126 00F0B984 		beq	.L1131
2676:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8875              		.loc 1 2676 7 is_stmt 1 view .LVU2787
2676:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8876              		.loc 1 2676 10 is_stmt 0 view .LVU2788
 8877 112a BAF1090F 		cmp	r10, #9
 8878 112e 40F24683 		bls	.L1132
2683:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8879              		.loc 1 2683 7 is_stmt 1 view .LVU2789
2683:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8880              		.loc 1 2683 29 is_stmt 0 view .LVU2790
 8881 1132 5A1E     		subs	r2, r3, #1
2683:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8882              		.loc 1 2683 10 view .LVU2791
 8883 1134 D2B2     		uxtb	r2, r2
 8884 1136 012A     		cmp	r2, #1
 8885 1138 40F22083 		bls	.L1133
 8886              	.L719:
2687:src/keys.c    **** 		State2.digval = n;
 8887              		.loc 1 2687 7 is_stmt 1 view .LVU2792
2687:src/keys.c    **** 		State2.digval = n;
 8888              		.loc 1 2687 10 is_stmt 0 view .LVU2793
 8889 113c BAF17F0F 		cmp	r10, #127
 8890 1140 40F05683 		bne	.L1134
2692:src/keys.c    **** 	case K_DOWN:
 8891              		.loc 1 2692 2 is_stmt 1 view .LVU2794
 8892 1144 073C     		subs	r4, r4, #7
 8893 1146 112C     		cmp	r4, #17
 8894 1148 3FF63DAB 		bhi	.L1060
 8895 114c 01A2     		adr	r2, .L841
 8896 114e 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8897 1152 00BF     		.p2align 2
 8898              	.L841:
 8899 1154 F7110000 		.word	.L732+1
 8900 1158 C7070000 		.word	.L1060+1
 8901 115c C7070000 		.word	.L1060+1
 8902 1160 C7070000 		.word	.L1060+1
 8903 1164 C7070000 		.word	.L1060+1
 8904 1168 F1110000 		.word	.L731+1
 8905 116c C7070000 		.word	.L1060+1
 8906 1170 C7070000 		.word	.L1060+1
 8907 1174 C7070000 		.word	.L1060+1
 8908 1178 D1110000 		.word	.L729+1
 8909 117c C7070000 		.word	.L1060+1
 8910 1180 9D110000 		.word	.L725+1
ARM GAS  /tmp/ccQmaUTi.s 			page 258


 8911 1184 C7070000 		.word	.L1060+1
 8912 1188 C7070000 		.word	.L1060+1
 8913 118c C7070000 		.word	.L1060+1
 8914 1190 C7070000 		.word	.L1060+1
 8915 1194 C7070000 		.word	.L1060+1
 8916 1198 99070000 		.word	.L722+1
 8917              		.p2align 1
 8918              	.L725:
2704:src/keys.c    **** 			State2.digval++;
 8919              		.loc 1 2704 3 view .LVU2795
2704:src/keys.c    **** 			State2.digval++;
 8920              		.loc 1 2704 13 is_stmt 0 view .LVU2796
 8921 119c B8F80830 		ldrh	r3, [r8, #8]
2704:src/keys.c    **** 			State2.digval++;
 8922              		.loc 1 2704 27 view .LVU2797
 8923 11a0 09F1FF39 		add	r9, r9, #-1
 8924              	.LVL707:
2704:src/keys.c    **** 			State2.digval++;
 8925              		.loc 1 2704 6 view .LVU2798
 8926 11a4 4B45     		cmp	r3, r9
 8927 11a6 80F2B085 		bge	.L726
2705:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8928              		.loc 1 2705 4 is_stmt 1 view .LVU2799
2706:src/keys.c    **** 				State2.digval = regX_idx;
 8929              		.loc 1 2706 8 is_stmt 0 view .LVU2800
 8930 11aa 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2705:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8931              		.loc 1 2705 17 view .LVU2801
 8932 11ae 0133     		adds	r3, r3, #1
 8933 11b0 9CB2     		uxth	r4, r3
2706:src/keys.c    **** 				State2.digval = regX_idx;
 8934              		.loc 1 2706 7 view .LVU2802
 8935 11b2 D307     		lsls	r3, r2, #31
2705:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8936              		.loc 1 2705 17 view .LVU2803
 8937 11b4 A8F80840 		strh	r4, [r8, #8]	@ movhi
2706:src/keys.c    **** 				State2.digval = regX_idx;
 8938              		.loc 1 2706 4 is_stmt 1 view .LVU2804
2706:src/keys.c    **** 				State2.digval = regX_idx;
 8939              		.loc 1 2706 7 is_stmt 0 view .LVU2805
 8940 11b8 3FF5FFAA 		bmi	.L715
2706:src/keys.c    **** 				State2.digval = regX_idx;
 8941              		.loc 1 2706 43 view .LVU2806
 8942 11bc FFF7FEFF 		bl	global_regs
 8943              	.LVL708:
2706:src/keys.c    **** 				State2.digval = regX_idx;
 8944              		.loc 1 2706 23 view .LVU2807
 8945 11c0 8442     		cmp	r4, r0
 8946 11c2 7FF4FAAA 		bne	.L715
2707:src/keys.c    **** 		}
 8947              		.loc 1 2707 5 is_stmt 1 view .LVU2808
2707:src/keys.c    **** 		}
 8948              		.loc 1 2707 19 is_stmt 0 view .LVU2809
 8949 11c6 6423     		movs	r3, #100
 8950 11c8 A8F80830 		strh	r3, [r8, #8]	@ movhi
 8951 11cc FFF7F5BA 		b	.L715
 8952              	.LVL709:
ARM GAS  /tmp/ccQmaUTi.s 			page 259


 8953              	.L729:
2721:src/keys.c    **** 			return STATE_UNFINISHED;
 8954              		.loc 1 2721 3 is_stmt 1 view .LVU2810
2721:src/keys.c    **** 			return STATE_UNFINISHED;
 8955              		.loc 1 2721 7 is_stmt 0 view .LVU2811
 8956 11d0 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2721:src/keys.c    **** 			return STATE_UNFINISHED;
 8957              		.loc 1 2721 6 view .LVU2812
 8958 11d4 13F02002 		ands	r2, r3, #32
 8959 11d8 7FF4F5AA 		bne	.L1060
2723:src/keys.c    **** 
 8960              		.loc 1 2723 3 is_stmt 1 view .LVU2813
2745:src/keys.c    **** 	State2.digval = 0;
 8961              		.loc 1 2745 2 view .LVU2814
2745:src/keys.c    **** 	State2.digval = 0;
 8962              		.loc 1 2745 22 is_stmt 0 view .LVU2815
 8963 11dc 62F3C303 		bfi	r3, r2, #3, #1
 8964 11e0 88F81730 		strb	r3, [r8, #23]
2746:src/keys.c    **** 	State2.digval2 = 0;
 8965              		.loc 1 2746 2 is_stmt 1 view .LVU2816
2746:src/keys.c    **** 	State2.digval2 = 0;
 8966              		.loc 1 2746 16 is_stmt 0 view .LVU2817
 8967 11e4 A8F80820 		strh	r2, [r8, #8]	@ movhi
2747:src/keys.c    **** reset_window:
 8968              		.loc 1 2747 2 is_stmt 1 view .LVU2818
2747:src/keys.c    **** reset_window:
 8969              		.loc 1 2747 17 is_stmt 0 view .LVU2819
 8970 11e8 88F80A20 		strb	r2, [r8, #10]
 8971 11ec FFF7E5BA 		b	.L715
 8972              	.L731:
2726:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8973              		.loc 1 2726 3 is_stmt 1 view .LVU2820
2726:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8974              		.loc 1 2726 6 is_stmt 0 view .LVU2821
 8975 11f0 012B     		cmp	r3, #1
 8976 11f2 00F08F85 		beq	.L1135
 8977              	.L732:
2731:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8978              		.loc 1 2731 3 is_stmt 1 view .LVU2822
2731:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8979              		.loc 1 2731 6 is_stmt 0 view .LVU2823
 8980 11f6 002B     		cmp	r3, #0
 8981 11f8 7FF4E5AA 		bne	.L1060
2735:src/keys.c    **** #endif
 8982              		.loc 1 2735 4 is_stmt 1 view .LVU2824
2735:src/keys.c    **** #endif
 8983              		.loc 1 2735 8 is_stmt 0 view .LVU2825
 8984 11fc B8F808B0 		ldrh	fp, [r8, #8]
 8985              	.LVL710:
2737:src/keys.c    **** 			State2.digval = 0;
 8986              		.loc 1 2737 4 is_stmt 1 view .LVU2826
2737:src/keys.c    **** 			State2.digval = 0;
 8987              		.loc 1 2737 24 is_stmt 0 view .LVU2827
 8988 1200 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2739:src/keys.c    **** 			return n;
 8989              		.loc 1 2739 19 view .LVU2828
 8990 1204 88F80A30 		strb	r3, [r8, #10]
ARM GAS  /tmp/ccQmaUTi.s 			page 260


2737:src/keys.c    **** 			State2.digval = 0;
 8991              		.loc 1 2737 24 view .LVU2829
 8992 1208 63F3C302 		bfi	r2, r3, #3, #1
2740:src/keys.c    **** 		}
 8993              		.loc 1 2740 11 view .LVU2830
 8994 120c 4BF4285B 		orr	fp, fp, #10752
 8995              	.LVL711:
2738:src/keys.c    **** 			State2.digval2 = 0;
 8996              		.loc 1 2738 18 view .LVU2831
 8997 1210 A8F80830 		strh	r3, [r8, #8]	@ movhi
 8998 1214 5846     		mov	r0, fp
 8999              	.LVL712:
2738:src/keys.c    **** 			State2.digval2 = 0;
 9000              		.loc 1 2738 18 view .LVU2832
 9001 1216 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2737:src/keys.c    **** 			State2.digval = 0;
 9002              		.loc 1 2737 24 view .LVU2833
 9003 121a 88F81720 		strb	r2, [r8, #23]
2738:src/keys.c    **** 			State2.digval2 = 0;
 9004              		.loc 1 2738 4 is_stmt 1 view .LVU2834
2739:src/keys.c    **** 			return n;
 9005              		.loc 1 2739 4 view .LVU2835
2740:src/keys.c    **** 		}
 9006              		.loc 1 2740 4 view .LVU2836
2740:src/keys.c    **** 		}
 9007              		.loc 1 2740 11 is_stmt 0 view .LVU2837
 9008 121e FFF756B9 		b	.L620
 9009              	.LVL713:
 9010              	.L1049:
2740:src/keys.c    **** 		}
 9011              		.loc 1 2740 11 view .LVU2838
 9012 1222 DAB2     		uxtb	r2, r3
 9013 1224 DFE4     		b	.L641
 9014              	.LVL714:
 9015              	.L1115:
2740:src/keys.c    **** 		}
 9016              		.loc 1 2740 11 view .LVU2839
 9017              	.LBE821:
 9018              	.LBE1043:
 9019              	.LBB1044:
 9020              	.LBB878:
1333:src/keys.c    **** #endif
 9021              		.loc 1 1333 44 is_stmt 1 view .LVU2840
1333:src/keys.c    **** #endif
 9022              		.loc 1 1333 52 is_stmt 0 view .LVU2841
 9023 1226 0420     		movs	r0, #4
 9024 1228 FFF7FEFF 		bl	gtodot_digit
 9025              	.LVL715:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9026              		.loc 1 1376 2 is_stmt 1 view .LVU2842
 9027              	.LBE878:
 9028              	.LBE1044:
2813:src/keys.c    **** 
 9029              		.loc 1 2813 10 is_stmt 0 view .LVU2843
 9030 122c 4FF0330B 		mov	fp, #51
 9031 1230 FEF73ABF 		b	.L565
 9032              	.LVL716:
ARM GAS  /tmp/ccQmaUTi.s 			page 261


 9033              	.L1118:
 9034              	.LBB1045:
 9035              	.LBB879:
1347:src/keys.c    **** 	}
 9036              		.loc 1 1347 3 is_stmt 1 view .LVU2844
1347:src/keys.c    **** 	}
 9037              		.loc 1 1347 6 is_stmt 0 view .LVU2845
 9038 1234 B8F80800 		ldrh	r0, [r8, #8]
 9039              	.LVL717:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9040              		.loc 1 1376 2 is_stmt 1 view .LVU2846
 9041 1238 46E5     		b	.L597
 9042              	.LVL718:
 9043              	.L1116:
1337:src/keys.c    **** 		goto fin;
 9044              		.loc 1 1337 3 view .LVU2847
 9045              	.LBB872:
 9046              	.LBI872:
1309:src/keys.c    **** 	const int code = 100 + n;
 9047              		.loc 1 1309 12 view .LVU2848
 9048              	.LBB873:
1310:src/keys.c    **** 	unsigned int pc = state_pc();
 9049              		.loc 1 1310 2 view .LVU2849
1311:src/keys.c    **** 
 9050              		.loc 1 1311 2 view .LVU2850
1311:src/keys.c    **** 
 9051              		.loc 1 1311 20 is_stmt 0 view .LVU2851
 9052 123a DFF83092 		ldr	r9, .L1157+12
 9053 123e D9F80030 		ldr	r3, [r9]
 9054              	.LVL719:
1311:src/keys.c    **** 
 9055              		.loc 1 1311 15 view .LVU2852
 9056 1242 B3F8E007 		ldrh	r0, [r3, #2016]
 9057              	.LVL720:
1313:src/keys.c    **** 		pc = 1;
 9058              		.loc 1 1313 2 is_stmt 1 view .LVU2853
1313:src/keys.c    **** 		pc = 1;
 9059              		.loc 1 1313 5 is_stmt 0 view .LVU2854
 9060 1246 830B     		lsrs	r3, r0, #14
1314:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9061              		.loc 1 1314 6 view .LVU2855
 9062 1248 032B     		cmp	r3, #3
 9063              	.LVL721:
1315:src/keys.c    **** 	if (pc > 0)
 9064              		.loc 1 1315 2 is_stmt 1 view .LVU2856
1315:src/keys.c    **** 	if (pc > 0)
 9065              		.loc 1 1315 7 is_stmt 0 view .LVU2857
 9066 124a 08BF     		it	eq
 9067 124c 0120     		moveq	r0, #1
 9068              	.LVL722:
1315:src/keys.c    **** 	if (pc > 0)
 9069              		.loc 1 1315 7 view .LVU2858
 9070 124e 04F16401 		add	r1, r4, #100
 9071              	.LVL723:
1315:src/keys.c    **** 	if (pc > 0)
 9072              		.loc 1 1315 7 view .LVU2859
 9073 1252 0322     		movs	r2, #3
ARM GAS  /tmp/ccQmaUTi.s 			page 262


 9074              	.LVL724:
1315:src/keys.c    **** 	if (pc > 0)
 9075              		.loc 1 1315 7 view .LVU2860
 9076 1254 FFF7FEFF 		bl	find_label_from
 9077              	.LVL725:
1316:src/keys.c    **** 		return pc;
 9078              		.loc 1 1316 2 is_stmt 1 view .LVU2861
1316:src/keys.c    **** 		return pc;
 9079              		.loc 1 1316 5 is_stmt 0 view .LVU2862
 9080 1258 0028     		cmp	r0, #0
 9081 125a 7FF465AC 		bne	.L607
1318:src/keys.c    **** }
 9082              		.loc 1 1318 2 is_stmt 1 view .LVU2863
1318:src/keys.c    **** }
 9083              		.loc 1 1318 9 is_stmt 0 view .LVU2864
 9084 125e D9F80030 		ldr	r3, [r9]
 9085 1262 B3F8E007 		ldrh	r0, [r3, #2016]
 9086              	.LVL726:
1318:src/keys.c    **** }
 9087              		.loc 1 1318 9 view .LVU2865
 9088              	.LBE873:
 9089              	.LBE872:
1338:src/keys.c    **** 	}
 9090              		.loc 1 1338 3 is_stmt 1 view .LVU2866
 9091 1266 5FE4     		b	.L607
 9092              	.LVL727:
 9093              	.L895:
1338:src/keys.c    **** 	}
 9094              		.loc 1 1338 3 is_stmt 0 view .LVU2867
 9095              	.LBE879:
 9096              	.LBE1045:
 9097              	.LBB1046:
 9098              	.LBB862:
1913:src/keys.c    **** 	}
 9099              		.loc 1 1913 18 view .LVU2868
 9100 1268 1E23     		movs	r3, #30
1913:src/keys.c    **** 	}
 9101              		.loc 1 1913 47 view .LVU2869
 9102 126a 9B44     		add	fp, fp, r3
 9103              	.LVL728:
1913:src/keys.c    **** 	}
 9104              		.loc 1 1913 47 view .LVU2870
 9105 126c FFF790B9 		b	.L594
 9106              	.LVL729:
 9107              	.L894:
1913:src/keys.c    **** 	}
 9108              		.loc 1 1913 18 view .LVU2871
 9109 1270 2723     		movs	r3, #39
1913:src/keys.c    **** 	}
 9110              		.loc 1 1913 47 view .LVU2872
 9111 1272 9B44     		add	fp, fp, r3
 9112              	.LVL730:
1913:src/keys.c    **** 	}
 9113              		.loc 1 1913 47 view .LVU2873
 9114 1274 FFF78CB9 		b	.L594
 9115              	.LVL731:
 9116              	.L1097:
ARM GAS  /tmp/ccQmaUTi.s 			page 263


1913:src/keys.c    **** 	}
 9117              		.loc 1 1913 47 view .LVU2874
 9118              	.LBE862:
 9119              	.LBE1046:
2874:src/keys.c    **** 
 9120              		.loc 1 2874 3 is_stmt 1 view .LVU2875
 9121              	.LBB1047:
 9122              	.LBI1047:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9123              		.loc 1 102 13 view .LVU2876
 9124              	.LBE1047:
 9125              	.LBE1203:
 9126              	.LBE1260:
 103:src/keys.c    **** }
 9127              		.loc 1 103 2 view .LVU2877
 9128              	.LBB1261:
 9129              	.LBB1204:
 9130              	.LBB1054:
 9131              	.LBB1048:
 9132              	.LBI1048:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9133              		.loc 1 92 20 view .LVU2878
 9134              	.LBB1049:
  93:src/keys.c    **** 	State2.shifts = shift;
 9135              		.loc 1 93 2 view .LVU2879
 9136              	.LBB1050:
 9137              	.LBI1050:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9138              		.loc 1 84 13 view .LVU2880
 9139              	.LBB1051:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9140              		.loc 1 85 2 view .LVU2881
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9141              		.loc 1 85 18 is_stmt 0 view .LVU2882
 9142 1278 FFF7FEFF 		bl	shift_down
 9143              	.LVL732:
  86:src/keys.c    **** }
 9144              		.loc 1 86 2 is_stmt 1 view .LVU2883
  86:src/keys.c    **** }
 9145              		.loc 1 86 52 is_stmt 0 view .LVU2884
 9146 127c 0146     		mov	r1, r0
 9147 127e 08B9     		cbnz	r0, .L734
 9148 1280 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9149              	.L734:
 9150              	.LVL733:
  86:src/keys.c    **** }
 9151              		.loc 1 86 52 view .LVU2885
 9152              	.LBE1051:
 9153              	.LBE1050:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9154              		.loc 1 94 2 is_stmt 1 view .LVU2886
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9155              		.loc 1 94 16 is_stmt 0 view .LVU2887
 9156 1284 0022     		movs	r2, #0
 9157              	.LBE1049:
 9158              	.LBE1048:
 9159              	.LBE1054:
ARM GAS  /tmp/ccQmaUTi.s 			page 264


2874:src/keys.c    **** 
 9160              		.loc 1 2874 10 view .LVU2888
 9161 1286 2046     		mov	r0, r4
 9162              	.LBB1055:
 9163              	.LBB1053:
 9164              	.LBB1052:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9165              		.loc 1 94 16 view .LVU2889
 9166 1288 88F81020 		strb	r2, [r8, #16]
  95:src/keys.c    **** 	return r;
 9167              		.loc 1 95 2 is_stmt 1 view .LVU2890
  95:src/keys.c    **** 	return r;
 9168              		.loc 1 95 19 is_stmt 0 view .LVU2891
 9169 128c 88F80D20 		strb	r2, [r8, #13]
  96:src/keys.c    **** }
 9170              		.loc 1 96 2 is_stmt 1 view .LVU2892
 9171              	.LVL734:
  96:src/keys.c    **** }
 9172              		.loc 1 96 2 is_stmt 0 view .LVU2893
 9173              	.LBE1052:
 9174              	.LBE1053:
 9175              	.LBE1055:
2874:src/keys.c    **** 
 9176              		.loc 1 2874 10 view .LVU2894
 9177 1290 FFF7FEFF 		bl	process_catalogue
 9178              	.LVL735:
2874:src/keys.c    **** 
 9179              		.loc 1 2874 10 view .LVU2895
 9180 1294 8346     		mov	fp, r0
 9181 1296 FFF77BB9 		b	.L594
 9182              	.L1098:
2878:src/keys.c    **** #else
 9183              		.loc 1 2878 3 is_stmt 1 view .LVU2896
 9184              	.LVL736:
 9185              	.LBB1056:
 9186              	.LBI737:
1389:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9187              		.loc 1 1389 12 view .LVU2897
 9188              	.LBB781:
1390:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9189              		.loc 1 1390 2 view .LVU2898
 9190              	.LBB739:
 9191              	.LBI739:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9192              		.loc 1 102 13 view .LVU2899
 9193              	.LBE739:
 9194              	.LBE781:
 9195              	.LBE1056:
 9196              	.LBE1204:
 9197              	.LBE1261:
 103:src/keys.c    **** }
 9198              		.loc 1 103 2 view .LVU2900
 9199              	.LBB1262:
 9200              	.LBB1205:
 9201              	.LBB1057:
 9202              	.LBB782:
 9203              	.LBB748:
ARM GAS  /tmp/ccQmaUTi.s 			page 265


 9204              	.LBB740:
 9205              	.LBI740:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9206              		.loc 1 92 20 view .LVU2901
 9207              	.LBB741:
  93:src/keys.c    **** 	State2.shifts = shift;
 9208              		.loc 1 93 2 view .LVU2902
 9209              	.LBB742:
 9210              	.LBI742:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9211              		.loc 1 84 13 view .LVU2903
 9212              	.LBB743:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9213              		.loc 1 85 2 view .LVU2904
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9214              		.loc 1 85 18 is_stmt 0 view .LVU2905
 9215 129a FFF7FEFF 		bl	shift_down
 9216              	.LVL737:
  86:src/keys.c    **** }
 9217              		.loc 1 86 2 is_stmt 1 view .LVU2906
  86:src/keys.c    **** }
 9218              		.loc 1 86 52 is_stmt 0 view .LVU2907
 9219 129e 08B9     		cbnz	r0, .L736
 9220 12a0 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 9221              	.LVL738:
 9222              	.L736:
  86:src/keys.c    **** }
 9223              		.loc 1 86 52 view .LVU2908
 9224              	.LBE743:
 9225              	.LBE742:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9226              		.loc 1 94 2 is_stmt 1 view .LVU2909
 9227              	.LBE741:
 9228              	.LBE740:
 9229              	.LBE748:
 9230              	.LBB749:
 9231              	.LBB750:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9232              		.loc 1 434 6 is_stmt 0 view .LVU2910
 9233 12a4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9234              	.LBE750:
 9235              	.LBE749:
 9236              	.LBB764:
 9237              	.LBB746:
 9238              	.LBB744:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9239              		.loc 1 94 16 view .LVU2911
 9240 12a8 0022     		movs	r2, #0
 9241              	.LBE744:
 9242              	.LBE746:
 9243              	.LBE764:
 9244              	.LBB765:
 9245              	.LBB761:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9246              		.loc 1 434 5 view .LVU2912
 9247 12aa D906     		lsls	r1, r3, #27
 9248              	.LBE761:
ARM GAS  /tmp/ccQmaUTi.s 			page 266


 9249              	.LBE765:
 9250              	.LBB766:
 9251              	.LBB747:
 9252              	.LBB745:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9253              		.loc 1 94 16 view .LVU2913
 9254 12ac 88F81020 		strb	r2, [r8, #16]
  95:src/keys.c    **** 	return r;
 9255              		.loc 1 95 2 is_stmt 1 view .LVU2914
  95:src/keys.c    **** 	return r;
 9256              		.loc 1 95 19 is_stmt 0 view .LVU2915
 9257 12b0 88F80D20 		strb	r2, [r8, #13]
  96:src/keys.c    **** }
 9258              		.loc 1 96 2 is_stmt 1 view .LVU2916
 9259              	.LVL739:
  96:src/keys.c    **** }
 9260              		.loc 1 96 2 is_stmt 0 view .LVU2917
 9261              	.LBE745:
 9262              	.LBE747:
 9263              	.LBE766:
1391:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
 9264              		.loc 1 1391 2 is_stmt 1 view .LVU2918
1391:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
 9265              		.loc 1 1391 11 is_stmt 0 view .LVU2919
 9266 12b4 0246     		mov	r2, r0
 9267              	.LVL740:
 9268              	.LBB767:
 9269              	.LBI749:
 384:src/keys.c    **** {
 9270              		.loc 1 384 12 is_stmt 1 view .LVU2920
 9271              	.LBB762:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9272              		.loc 1 386 2 view .LVU2921
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9273              		.loc 1 434 2 view .LVU2922
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9274              		.loc 1 434 5 is_stmt 0 view .LVU2923
 9275 12b6 40F1E080 		bpl	.L737
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9276              		.loc 1 435 3 is_stmt 1 view .LVU2924
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9277              		.loc 1 435 6 is_stmt 0 view .LVU2925
 9278 12ba 0028     		cmp	r0, #0
 9279 12bc 00F0DC80 		beq	.L879
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 9280              		.loc 1 437 8 is_stmt 1 view .LVU2926
 9281              	.LBB751:
 9282              	.LBB752:
 131:src/keys.c    **** }
 9283              		.loc 1 131 23 is_stmt 0 view .LVU2927
 9284 12c0 6749     		ldr	r1, .L1157
 9285              	.LBE752:
 9286              	.LBE751:
 440:src/keys.c    **** }
 9287              		.loc 1 440 49 view .LVU2928
 9288 12c2 694A     		ldr	r2, .L1157+8
 9289              	.LBB757:
ARM GAS  /tmp/ccQmaUTi.s 			page 267


 9290              	.LBB753:
 131:src/keys.c    **** }
 9291              		.loc 1 131 23 view .LVU2929
 9292 12c4 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9293              	.LBE753:
 9294              	.LBE757:
 438:src/keys.c    **** 	}
 9295              		.loc 1 438 10 view .LVU2930
 9296 12c6 0228     		cmp	r0, #2
 440:src/keys.c    **** }
 9297              		.loc 1 440 49 view .LVU2931
 9298 12c8 4FF0060C 		mov	ip, #6
 9299 12cc 0CFB0121 		mla	r1, ip, r1, r2
 438:src/keys.c    **** 	}
 9300              		.loc 1 438 10 view .LVU2932
 9301 12d0 14BF     		ite	ne
 9302 12d2 0246     		movne	r2, r0
 9303 12d4 0522     		moveq	r2, #5
 9304              	.LVL741:
 440:src/keys.c    **** }
 9305              		.loc 1 440 2 is_stmt 1 view .LVU2933
 9306              	.LBB758:
 9307              	.LBI751:
 119:src/keys.c    **** {
 9308              		.loc 1 119 12 view .LVU2934
 9309              	.LBB754:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9310              		.loc 1 121 2 view .LVU2935
 131:src/keys.c    **** }
 9311              		.loc 1 131 2 view .LVU2936
 131:src/keys.c    **** }
 9312              		.loc 1 131 2 is_stmt 0 view .LVU2937
 9313 12d6 063C     		subs	r4, r4, #6
 9314              	.LBE754:
 9315              	.LBE758:
 440:src/keys.c    **** }
 9316              		.loc 1 440 49 view .LVU2938
 9317 12d8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9318              	.LVL742:
 440:src/keys.c    **** }
 9319              		.loc 1 440 49 view .LVU2939
 9320              	.LBE762:
 9321              	.LBE767:
1392:src/keys.c    ****         int op = STATE_UNFINISHED;
 9322              		.loc 1 1392 2 is_stmt 1 view .LVU2940
1393:src/keys.c    **** 	State2.alpha_pos = 0;
 9323              		.loc 1 1393 9 view .LVU2941
1394:src/keys.c    **** 
 9324              		.loc 1 1394 2 view .LVU2942
1396:src/keys.c    **** 	case K10:	// STO
 9325              		.loc 1 1396 2 view .LVU2943
 9326 12da 212C     		cmp	r4, #33
 9327 12dc 46D8     		bhi	.L740
 9328 12de 01A1     		adr	r1, .L842
 9329 12e0 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9330              		.p2align 2
 9331              	.L842:
ARM GAS  /tmp/ccQmaUTi.s 			page 268


 9332 12e4 251B0000 		.word	.L749+1
 9333 12e8 FF1A0000 		.word	.L748+1
 9334 12ec 6D130000 		.word	.L740+1
 9335 12f0 6D130000 		.word	.L740+1
 9336 12f4 6D130000 		.word	.L740+1
 9337 12f8 6D130000 		.word	.L740+1
 9338 12fc D51A0000 		.word	.L747+1
 9339 1300 6D130000 		.word	.L740+1
 9340 1304 6D130000 		.word	.L740+1
 9341 1308 6D130000 		.word	.L740+1
 9342 130c 471C0000 		.word	.L753+1
 9343 1310 6D130000 		.word	.L740+1
 9344 1314 471B0000 		.word	.L745+1
 9345 1318 6D130000 		.word	.L740+1
 9346 131c 6D130000 		.word	.L740+1
 9347 1320 6D130000 		.word	.L740+1
 9348 1324 6D130000 		.word	.L740+1
 9349 1328 6D130000 		.word	.L740+1
 9350 132c E9050000 		.word	.L744+1
 9351 1330 6D130000 		.word	.L740+1
 9352 1334 6D130000 		.word	.L740+1
 9353 1338 6D130000 		.word	.L740+1
 9354 133c 6D130000 		.word	.L740+1
 9355 1340 6D130000 		.word	.L740+1
 9356 1344 6D130000 		.word	.L740+1
 9357 1348 6D130000 		.word	.L740+1
 9358 134c 6D130000 		.word	.L740+1
 9359 1350 6D130000 		.word	.L740+1
 9360 1354 6D130000 		.word	.L740+1
 9361 1358 6D130000 		.word	.L740+1
 9362 135c 6D1B0000 		.word	.L743+1
 9363 1360 6D130000 		.word	.L740+1
 9364 1364 6D130000 		.word	.L740+1
 9365 1368 67190000 		.word	.L741+1
 9366              		.p2align 1
 9367              	.L740:
1477:src/keys.c    **** 		return STATE_UNFINISHED;
 9368              		.loc 1 1477 2 view .LVU2944
1477:src/keys.c    **** 		return STATE_UNFINISHED;
 9369              		.loc 1 1477 5 is_stmt 0 view .LVU2945
 9370 136c 002A     		cmp	r2, #0
 9371 136e 3FF42AAA 		beq	.L1060
1479:src/keys.c    **** }
 9372              		.loc 1 1479 2 is_stmt 1 view .LVU2946
1479:src/keys.c    **** }
 9373              		.loc 1 1479 9 is_stmt 0 view .LVU2947
 9374 1372 42F4884B 		orr	fp, r2, #17408
 9375 1376 5846     		mov	r0, fp
 9376              	.LVL743:
1479:src/keys.c    **** }
 9377              		.loc 1 1479 9 view .LVU2948
 9378 1378 FFF7A9B8 		b	.L620
 9379              	.LVL744:
 9380              	.L1117:
1479:src/keys.c    **** }
 9381              		.loc 1 1479 9 view .LVU2949
 9382              	.LBE782:
ARM GAS  /tmp/ccQmaUTi.s 			page 269


 9383              	.LBE1057:
 9384              	.LBB1058:
 9385              	.LBB880:
1342:src/keys.c    **** 		goto fin;
 9386              		.loc 1 1342 3 is_stmt 1 view .LVU2950
1342:src/keys.c    **** 		goto fin;
 9387              		.loc 1 1342 11 is_stmt 0 view .LVU2951
 9388 137c 3B4B     		ldr	r3, .L1157+12
 9389              	.LVL745:
1342:src/keys.c    **** 		goto fin;
 9390              		.loc 1 1342 11 view .LVU2952
 9391 137e 1B68     		ldr	r3, [r3]
1342:src/keys.c    **** 		goto fin;
 9392              		.loc 1 1342 9 view .LVU2953
 9393 1380 5888     		ldrh	r0, [r3, #2]
 9394              	.LVL746:
1343:src/keys.c    **** 	}
 9395              		.loc 1 1343 3 is_stmt 1 view .LVU2954
 9396 1382 FFF7D1BB 		b	.L607
 9397              	.LVL747:
 9398              	.L1119:
1351:src/keys.c    **** 			goto fin2;
 9399              		.loc 1 1351 3 view .LVU2955
1351:src/keys.c    **** 			goto fin2;
 9400              		.loc 1 1351 13 is_stmt 0 view .LVU2956
 9401 1386 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 9402              	.LVL748:
1351:src/keys.c    **** 			goto fin2;
 9403              		.loc 1 1351 6 view .LVU2957
 9404 138a 002B     		cmp	r3, #0
 9405 138c 3FF4CEAB 		beq	.L611
1354:src/keys.c    **** 			State2.digval /= 10;
 9406              		.loc 1 1354 4 is_stmt 1 view .LVU2958
1354:src/keys.c    **** 			State2.digval /= 10;
 9407              		.loc 1 1354 19 is_stmt 0 view .LVU2959
 9408 1390 013B     		subs	r3, r3, #1
 9409 1392 88F80B30 		strb	r3, [r8, #11]
1355:src/keys.c    **** 		}
 9410              		.loc 1 1355 4 is_stmt 1 view .LVU2960
1355:src/keys.c    **** 		}
 9411              		.loc 1 1355 18 is_stmt 0 view .LVU2961
 9412 1396 0A22     		movs	r2, #10
 9413              	.LVL749:
1355:src/keys.c    **** 		}
 9414              		.loc 1 1355 18 view .LVU2962
 9415 1398 B8F80830 		ldrh	r3, [r8, #8]
 9416 139c B3FBF2F3 		udiv	r3, r3, r2
 9417              	.LBE880:
 9418              	.LBE1058:
2813:src/keys.c    **** 
 9419              		.loc 1 2813 10 view .LVU2963
 9420 13a0 4FF0330B 		mov	fp, #51
 9421              	.LBB1059:
 9422              	.LBB881:
1355:src/keys.c    **** 		}
 9423              		.loc 1 1355 18 view .LVU2964
 9424 13a4 A8F80830 		strh	r3, [r8, #8]	@ movhi
ARM GAS  /tmp/ccQmaUTi.s 			page 270


1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9425              		.loc 1 1376 2 is_stmt 1 view .LVU2965
 9426 13a8 FEF77EBE 		b	.L565
 9427              	.LVL750:
 9428              	.L1101:
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9429              		.loc 1 1376 2 is_stmt 0 view .LVU2966
 9430              	.LBE881:
 9431              	.LBE1059:
2895:src/keys.c    **** 		// print_debug (3, c);
 9432              		.loc 1 2895 4 is_stmt 1 view .LVU2967
 9433              	.LBB1060:
 9434              	.LBI1060:
1001:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 9435              		.loc 1 1001 12 view .LVU2968
 9436              	.LBB1061:
1004:src/keys.c    **** 		// Row 1
 9437              		.loc 1 1004 2 view .LVU2969
1055:src/keys.c    **** 	int op = op_map[lc];
 9438              		.loc 1 1055 2 view .LVU2970
 9439              	.LBB1062:
 9440              	.LBI1062:
 134:src/keys.c    **** {
 9441              		.loc 1 134 12 view .LVU2971
 9442              	.LBB1063:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9443              		.loc 1 136 2 view .LVU2972
 146:src/keys.c    **** }
 9444              		.loc 1 146 2 view .LVU2973
 146:src/keys.c    **** }
 9445              		.loc 1 146 2 is_stmt 0 view .LVU2974
 9446              	.LBE1063:
 9447              	.LBE1062:
1056:src/keys.c    **** 	reset_shift();
 9448              		.loc 1 1056 2 is_stmt 1 view .LVU2975
 9449              	.LBB1066:
 9450              	.LBB1064:
 146:src/keys.c    **** }
 9451              		.loc 1 146 23 is_stmt 0 view .LVU2976
 9452 13ac 304A     		ldr	r2, .L1157+16
 9453              	.LBE1064:
 9454              	.LBE1066:
1056:src/keys.c    **** 	reset_shift();
 9455              		.loc 1 1056 17 view .LVU2977
 9456 13ae 314B     		ldr	r3, .L1157+20
 9457              	.LBB1067:
 9458              	.LBB1065:
 146:src/keys.c    **** }
 9459              		.loc 1 146 23 view .LVU2978
 9460 13b0 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9461              	.LBE1065:
 9462              	.LBE1067:
1056:src/keys.c    **** 	reset_shift();
 9463              		.loc 1 1056 17 view .LVU2979
 9464 13b2 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 9465              	.LVL751:
1057:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 271


 9466              		.loc 1 1057 2 is_stmt 1 view .LVU2980
 9467              	.LBB1068:
 9468              	.LBI1068:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9469              		.loc 1 102 13 view .LVU2981
 9470              	.LBE1068:
 9471              	.LBE1061:
 9472              	.LBE1060:
 9473              	.LBE1205:
 9474              	.LBE1262:
 103:src/keys.c    **** }
 9475              		.loc 1 103 2 view .LVU2982
 9476              	.LBB1263:
 9477              	.LBB1206:
 9478              	.LBB1083:
 9479              	.LBB1079:
 9480              	.LBB1075:
 9481              	.LBB1069:
 9482              	.LBI1069:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9483              		.loc 1 92 20 view .LVU2983
 9484              	.LBB1070:
  93:src/keys.c    **** 	State2.shifts = shift;
 9485              		.loc 1 93 2 view .LVU2984
 9486              	.LBB1071:
 9487              	.LBI1071:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9488              		.loc 1 84 13 view .LVU2985
 9489              	.LBB1072:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9490              		.loc 1 85 2 view .LVU2986
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9491              		.loc 1 85 18 is_stmt 0 view .LVU2987
 9492 13b6 FFF7FEFF 		bl	shift_down
 9493              	.LVL752:
  86:src/keys.c    **** }
 9494              		.loc 1 86 2 is_stmt 1 view .LVU2988
 9495              	.LBE1072:
 9496              	.LBE1071:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9497              		.loc 1 94 2 view .LVU2989
 9498              	.LBE1070:
 9499              	.LBE1069:
 9500              	.LBE1075:
1060:src/keys.c    **** 	case K62:
 9501              		.loc 1 1060 2 is_stmt 0 view .LVU2990
 9502 13ba 262C     		cmp	r4, #38
 9503              	.LBB1076:
 9504              	.LBB1074:
 9505              	.LBB1073:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9506              		.loc 1 94 16 view .LVU2991
 9507 13bc 88F810B0 		strb	fp, [r8, #16]
  95:src/keys.c    **** 	return r;
 9508              		.loc 1 95 2 is_stmt 1 view .LVU2992
  95:src/keys.c    **** 	return r;
 9509              		.loc 1 95 19 is_stmt 0 view .LVU2993
ARM GAS  /tmp/ccQmaUTi.s 			page 272


 9510 13c0 88F80DB0 		strb	fp, [r8, #13]
  96:src/keys.c    **** }
 9511              		.loc 1 96 2 is_stmt 1 view .LVU2994
 9512              	.LVL753:
  96:src/keys.c    **** }
 9513              		.loc 1 96 2 is_stmt 0 view .LVU2995
 9514              	.LBE1073:
 9515              	.LBE1074:
 9516              	.LBE1076:
1060:src/keys.c    **** 	case K62:
 9517              		.loc 1 1060 2 is_stmt 1 view .LVU2996
 9518 13c4 00F06682 		beq	.L790
 9519 13c8 272C     		cmp	r4, #39
 9520 13ca 1FD1     		bne	.L792
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9521              		.loc 1 1073 3 view .LVU2997
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9522              		.loc 1 1073 7 is_stmt 0 view .LVU2998
 9523 13cc FFF7FEFF 		bl	is_bad_cmdline
 9524              	.LVL754:
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9525              		.loc 1 1073 6 view .LVU2999
 9526 13d0 0028     		cmp	r0, #0
 9527 13d2 7FF4F8A9 		bne	.L1060
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9528              		.loc 1 1075 3 is_stmt 1 view .LVU3000
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9529              		.loc 1 1075 30 is_stmt 0 view .LVU3001
 9530 13d6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9531 13da C3F38012 		ubfx	r2, r3, #6, #1
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9532              		.loc 1 1075 22 view .LVU3002
 9533 13de C2F10102 		rsb	r2, r2, #1
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9534              		.loc 1 1075 18 view .LVU3003
 9535 13e2 62F38613 		bfi	r3, r2, #6, #1
 9536 13e6 88F81630 		strb	r3, [r8, #22]
1076:src/keys.c    **** 		update_program_bounds(1);
 9537              		.loc 1 1076 3 is_stmt 1 view .LVU3004
 9538 13ea FFF7FEFF 		bl	process_cmdline_set_lift
 9539              	.LVL755:
1077:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 9540              		.loc 1 1077 3 view .LVU3005
 9541 13ee 0120     		movs	r0, #1
 9542 13f0 FFF7FEFF 		bl	update_program_bounds
 9543              	.LVL756:
1078:src/keys.c    **** 			set_pc(0);
 9544              		.loc 1 1078 3 view .LVU3006
1078:src/keys.c    **** 			set_pc(0);
 9545              		.loc 1 1078 7 is_stmt 0 view .LVU3007
 9546 13f4 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
1078:src/keys.c    **** 			set_pc(0);
 9547              		.loc 1 1078 6 view .LVU3008
 9548 13f8 10F04000 		ands	r0, r0, #64
 9549 13fc 06D1     		bne	.L792
1078:src/keys.c    **** 			set_pc(0);
 9550              		.loc 1 1078 27 view .LVU3009
ARM GAS  /tmp/ccQmaUTi.s 			page 273


 9551 13fe 1B4B     		ldr	r3, .L1157+12
 9552 1400 1B68     		ldr	r3, [r3]
1078:src/keys.c    **** 			set_pc(0);
 9553              		.loc 1 1078 24 view .LVU3010
 9554 1402 B3F8E027 		ldrh	r2, [r3, #2016]
 9555 1406 012A     		cmp	r2, #1
 9556 1408 00F04284 		beq	.L1136
 9557              	.L792:
1086:src/keys.c    **** 		if (op & _RARG) {
 9558              		.loc 1 1086 5 view .LVU3011
 9559 140c BAF1330F 		cmp	r10, #51
1056:src/keys.c    **** 	reset_shift();
 9560              		.loc 1 1056 6 view .LVU3012
 9561 1410 D346     		mov	fp, r10
1086:src/keys.c    **** 		if (op & _RARG) {
 9562              		.loc 1 1086 2 is_stmt 1 view .LVU3013
1086:src/keys.c    **** 		if (op & _RARG) {
 9563              		.loc 1 1086 5 is_stmt 0 view .LVU3014
 9564 1412 0AD0     		beq	.L800
 9565              	.LVL757:
1087:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9566              		.loc 1 1087 3 is_stmt 1 view .LVU3015
1087:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9567              		.loc 1 1087 6 is_stmt 0 view .LVU3016
 9568 1414 1AF4004F 		tst	r10, #32768
 9569 1418 00F06282 		beq	.L1137
1088:src/keys.c    **** 			op = STATE_UNFINISHED;
 9570              		.loc 1 1088 4 is_stmt 1 view .LVU3017
 9571              	.LVL758:
 9572              	.LBB1077:
 9573              	.LBI1077:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 9574              		.loc 1 501 13 view .LVU3018
 9575              	.LBB1078:
 502:src/keys.c    **** 		return;
 9576              		.loc 1 502 2 view .LVU3019
 502:src/keys.c    **** 		return;
 9577              		.loc 1 502 6 is_stmt 0 view .LVU3020
 9578 141c FFF7FEFF 		bl	is_bad_cmdline
 9579              	.LVL759:
 502:src/keys.c    **** 		return;
 9580              		.loc 1 502 5 view .LVU3021
 9581 1420 18B9     		cbnz	r0, .L800
 9582 1422 5FFA8AF0 		uxtb	r0, r10
 9583 1426 FFF7FEFF 		bl	init_arg.part.0
 9584              	.LVL760:
 9585              	.L800:
 502:src/keys.c    **** 		return;
 9586              		.loc 1 502 5 view .LVU3022
 9587              	.LBE1078:
 9588              	.LBE1077:
1092:src/keys.c    **** #undef _RARG
 9589              		.loc 1 1092 2 is_stmt 1 view .LVU3023
1068:src/keys.c    **** #endif
 9590              		.loc 1 1068 29 is_stmt 0 view .LVU3024
 9591 142a 4FF0330B 		mov	fp, #51
 9592              	.LVL761:
ARM GAS  /tmp/ccQmaUTi.s 			page 274


 9593              	.L795:
1092:src/keys.c    **** #undef _RARG
 9594              		.loc 1 1092 57 view .LVU3025
 9595 142e 2BF4804B 		bic	fp, fp, #16384
 9596 1432 FFF7ADB8 		b	.L594
 9597              	.LVL762:
 9598              	.L1123:
1092:src/keys.c    **** #undef _RARG
 9599              		.loc 1 1092 57 view .LVU3026
 9600              	.LBE1079:
 9601              	.LBE1083:
 9602              	.LBB1084:
 9603              	.LBB901:
2467:src/keys.c    **** 		return STATE_UNFINISHED;
 9604              		.loc 1 2467 3 is_stmt 1 view .LVU3027
2467:src/keys.c    **** 		return STATE_UNFINISHED;
 9605              		.loc 1 2467 17 is_stmt 0 view .LVU3028
 9606 1436 88F80C10 		strb	r1, [r8, #12]
2468:src/keys.c    **** 	} 
 9607              		.loc 1 2468 3 is_stmt 1 view .LVU3029
 9608              	.LBE901:
 9609              	.LBE1084:
2822:src/keys.c    **** 
 9610              		.loc 1 2822 10 is_stmt 0 view .LVU3030
 9611 143a 4FF0330B 		mov	fp, #51
 9612              	.LBB1085:
 9613              	.LBB902:
2468:src/keys.c    **** 	} 
 9614              		.loc 1 2468 10 view .LVU3031
 9615 143e FEF733BE 		b	.L565
 9616              	.LVL763:
 9617              	.L1104:
2468:src/keys.c    **** 	} 
 9618              		.loc 1 2468 10 view .LVU3032
 9619              	.LBE902:
 9620              	.LBE1085:
 9621              	.LBB1086:
 9622              	.LBB731:
2357:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9623              		.loc 1 2357 3 is_stmt 1 view .LVU3033
2357:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9624              		.loc 1 2357 12 is_stmt 0 view .LVU3034
 9625 1442 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 9626 1446 2046     		mov	r0, r4
 9627 1448 941E     		subs	r4, r2, #2
 9628 144a 6242     		rsbs	r2, r4, #0
 9629 144c 6241     		adcs	r2, r2, r4
 9630 144e FFF7FEFF 		bl	process_catalogue
 9631              	.LVL764:
2358:src/keys.c    **** 			return opcode;
 9632              		.loc 1 2358 3 is_stmt 1 view .LVU3035
2358:src/keys.c    **** 			return opcode;
 9633              		.loc 1 2358 6 is_stmt 0 view .LVU3036
 9634 1452 3328     		cmp	r0, #51
 9635 1454 3FF4B7A9 		beq	.L1060
2360:src/keys.c    **** 		goto add_char;
 9636              		.loc 1 2360 3 is_stmt 1 view .LVU3037
ARM GAS  /tmp/ccQmaUTi.s 			page 275


2360:src/keys.c    **** 		goto add_char;
 9637              		.loc 1 2360 6 is_stmt 0 view .LVU3038
 9638 1458 C3B2     		uxtb	r3, r0
 9639              	.LVL765:
2361:src/keys.c    **** 	}
 9640              		.loc 1 2361 3 is_stmt 1 view .LVU3039
 9641 145a FFF773B8 		b	.L673
 9642              	.L1158:
 9643 145e 00BF     		.align	2
 9644              	.L1157:
 9645 1460 00000000 		.word	.LANCHOR1
 9646 1464 00000000 		.word	.LANCHOR0
 9647 1468 00000000 		.word	.LANCHOR9
 9648 146c 00000000 		.word	main_ram
 9649 1470 00000000 		.word	.LANCHOR18
 9650 1474 00000000 		.word	.LANCHOR21
 9651              	.LVL766:
 9652              	.L879:
2361:src/keys.c    **** 	}
 9653              		.loc 1 2361 3 is_stmt 0 view .LVU3040
 9654              	.LBE731:
 9655              	.LBE1086:
 9656              	.LBB1087:
 9657              	.LBB783:
 9658              	.LBB768:
 9659              	.LBB763:
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 9660              		.loc 1 436 10 view .LVU3041
 9661 1478 0422     		movs	r2, #4
 9662              	.L737:
 9663              	.LVL767:
 440:src/keys.c    **** }
 9664              		.loc 1 440 2 is_stmt 1 view .LVU3042
 9665              	.LBB759:
 119:src/keys.c    **** {
 9666              		.loc 1 119 12 view .LVU3043
 9667              	.LBB755:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9668              		.loc 1 121 2 view .LVU3044
 131:src/keys.c    **** }
 9669              		.loc 1 131 2 view .LVU3045
 131:src/keys.c    **** }
 9670              		.loc 1 131 23 is_stmt 0 view .LVU3046
 9671 147a B849     		ldr	r1, .L1159
 9672              	.LBE755:
 9673              	.LBE759:
 440:src/keys.c    **** }
 9674              		.loc 1 440 49 view .LVU3047
 9675 147c DFF8F4C2 		ldr	ip, .L1159+24
 9676              	.LBB760:
 9677              	.LBB756:
 131:src/keys.c    **** }
 9678              		.loc 1 131 23 view .LVU3048
 9679 1480 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9680              	.LBE756:
 9681              	.LBE760:
 440:src/keys.c    **** }
ARM GAS  /tmp/ccQmaUTi.s 			page 276


 9682              		.loc 1 440 49 view .LVU3049
 9683 1482 4FF0060E 		mov	lr, #6
 9684 1486 0EFB01C1 		mla	r1, lr, r1, ip
 9685 148a 063C     		subs	r4, r4, #6
 9686 148c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9687              	.LVL768:
 440:src/keys.c    **** }
 9688              		.loc 1 440 49 view .LVU3050
 9689              	.LBE763:
 9690              	.LBE768:
1392:src/keys.c    ****         int op = STATE_UNFINISHED;
 9691              		.loc 1 1392 2 is_stmt 1 view .LVU3051
1393:src/keys.c    **** 	State2.alpha_pos = 0;
 9692              		.loc 1 1393 9 view .LVU3052
1394:src/keys.c    **** 
 9693              		.loc 1 1394 2 view .LVU3053
1396:src/keys.c    **** 	case K10:	// STO
 9694              		.loc 1 1396 2 view .LVU3054
 9695 148e 212C     		cmp	r4, #33
 9696 1490 3FF66CAF 		bhi	.L740
 9697 1494 01A1     		adr	r1, .L742
 9698 1496 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9699 149a 00BF     		.p2align 2
 9700              	.L742:
 9701 149c 251B0000 		.word	.L749+1
 9702 14a0 FF1A0000 		.word	.L748+1
 9703 14a4 6D130000 		.word	.L740+1
 9704 14a8 6D130000 		.word	.L740+1
 9705 14ac 6D130000 		.word	.L740+1
 9706 14b0 6D130000 		.word	.L740+1
 9707 14b4 D51A0000 		.word	.L747+1
 9708 14b8 6D130000 		.word	.L740+1
 9709 14bc 6D130000 		.word	.L740+1
 9710 14c0 6D130000 		.word	.L740+1
 9711 14c4 411C0000 		.word	.L746+1
 9712 14c8 6D130000 		.word	.L740+1
 9713 14cc 471B0000 		.word	.L745+1
 9714 14d0 6D130000 		.word	.L740+1
 9715 14d4 6D130000 		.word	.L740+1
 9716 14d8 6D130000 		.word	.L740+1
 9717 14dc 6D130000 		.word	.L740+1
 9718 14e0 6D130000 		.word	.L740+1
 9719 14e4 E9050000 		.word	.L744+1
 9720 14e8 6D130000 		.word	.L740+1
 9721 14ec 6D130000 		.word	.L740+1
 9722 14f0 6D130000 		.word	.L740+1
 9723 14f4 6D130000 		.word	.L740+1
 9724 14f8 6D130000 		.word	.L740+1
 9725 14fc 6D130000 		.word	.L740+1
 9726 1500 6D130000 		.word	.L740+1
 9727 1504 6D130000 		.word	.L740+1
 9728 1508 6D130000 		.word	.L740+1
 9729 150c 6D130000 		.word	.L740+1
 9730 1510 6D130000 		.word	.L740+1
 9731 1514 6D1B0000 		.word	.L743+1
 9732 1518 6D130000 		.word	.L740+1
 9733 151c 6D130000 		.word	.L740+1
ARM GAS  /tmp/ccQmaUTi.s 			page 277


 9734 1520 67190000 		.word	.L741+1
 9735              	.LVL769:
 9736              		.p2align 1
 9737              	.L1092:
1396:src/keys.c    **** 	case K10:	// STO
 9738              		.loc 1 1396 2 is_stmt 0 view .LVU3055
 9739              	.LBE783:
 9740              	.LBE1087:
 9741              	.LBB1088:
 9742              	.LBB657:
 9743              	.LBB650:
 324:src/keys.c    **** #else
 9744              		.loc 1 324 45 view .LVU3056
 9745 1524 FFF7FEFF 		bl	shift_down
 9746              	.LVL770:
 324:src/keys.c    **** #else
 9747              		.loc 1 324 42 view .LVU3057
 9748 1528 0328     		cmp	r0, #3
 9749 152a 00F02982 		beq	.L662
 9750 152e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 322:src/keys.c    **** #ifndef WINGUI
 9751              		.loc 1 322 8 view .LVU3058
 9752 1532 8B4B     		ldr	r3, .L1159+4
 324:src/keys.c    **** #else
 9753              		.loc 1 324 73 view .LVU3059
 9754 1534 DC46     		mov	ip, fp
 328:src/keys.c    ****   }
 9755              		.loc 1 328 9 view .LVU3060
 9756 1536 0C21     		movs	r1, #12
 9757 1538 FEF7B0BE 		b	.L661
 9758              	.LVL771:
 9759              	.L871:
 328:src/keys.c    ****   }
 9760              		.loc 1 328 9 view .LVU3061
 9761              	.LBE650:
 9762              	.LBE657:
 9763              	.LBE1088:
 9764              	.LBB1089:
 9765              	.LBB991:
2536:src/keys.c    **** 	const int opcode = getprog(pc);
 9766              		.loc 1 2536 27 view .LVU3062
 9767 153c 4FF0030B 		mov	fp, #3
 9768 1540 94E4     		b	.L685
 9769              	.LVL772:
 9770              	.L1099:
2536:src/keys.c    **** 	const int opcode = getprog(pc);
 9771              		.loc 1 2536 27 view .LVU3063
 9772              	.LBE991:
 9773              	.LBE1089:
2890:src/keys.c    **** 	} else {
 9774              		.loc 1 2890 3 is_stmt 1 view .LVU3064
 9775              	.LBB1090:
 9776              	.LBI1090:
1100:src/keys.c    **** #define _RARG   0xFF00
 9777              		.loc 1 1100 12 view .LVU3065
 9778              	.LBB1091:
1105:src/keys.c    **** 		// Row 1
ARM GAS  /tmp/ccQmaUTi.s 			page 278


 9779              		.loc 1 1105 2 view .LVU3066
1156:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9780              		.loc 1 1156 2 view .LVU3067
 9781              	.LBB1092:
 9782              	.LBI1092:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9783              		.loc 1 102 13 view .LVU3068
 9784              	.LBE1092:
 9785              	.LBE1091:
 9786              	.LBE1090:
 9787              	.LBE1206:
 9788              	.LBE1263:
 103:src/keys.c    **** }
 9789              		.loc 1 103 2 view .LVU3069
 9790              	.LBB1264:
 9791              	.LBB1207:
 9792              	.LBB1121:
 9793              	.LBB1117:
 9794              	.LBB1103:
 9795              	.LBB1093:
 9796              	.LBI1093:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9797              		.loc 1 92 20 view .LVU3070
 9798              	.LBB1094:
  93:src/keys.c    **** 	State2.shifts = shift;
 9799              		.loc 1 93 2 view .LVU3071
 9800              	.LBB1095:
 9801              	.LBI1095:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9802              		.loc 1 84 13 view .LVU3072
 9803              	.LBB1096:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9804              		.loc 1 85 2 view .LVU3073
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9805              		.loc 1 85 18 is_stmt 0 view .LVU3074
 9806 1542 FFF7FEFF 		bl	shift_down
 9807              	.LVL773:
  86:src/keys.c    **** }
 9808              		.loc 1 86 2 is_stmt 1 view .LVU3075
  86:src/keys.c    **** }
 9809              		.loc 1 86 52 is_stmt 0 view .LVU3076
 9810 1546 0346     		mov	r3, r0
 9811 1548 08B9     		cbnz	r0, .L761
 9812 154a 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 9813              	.L761:
 9814              	.LVL774:
  86:src/keys.c    **** }
 9815              		.loc 1 86 52 view .LVU3077
 9816              	.LBE1096:
 9817              	.LBE1095:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9818              		.loc 1 94 2 is_stmt 1 view .LVU3078
 9819              	.LBE1094:
 9820              	.LBE1093:
 9821              	.LBE1103:
 9822              	.LBB1104:
 9823              	.LBB1105:
ARM GAS  /tmp/ccQmaUTi.s 			page 279


 146:src/keys.c    **** }
 9824              		.loc 1 146 23 is_stmt 0 view .LVU3079
 9825 154e 854A     		ldr	r2, .L1159+8
 9826              	.LBE1105:
 9827              	.LBE1104:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9828              		.loc 1 1158 21 view .LVU3080
 9829 1550 8548     		ldr	r0, .L1159+12
 9830              	.LBB1108:
 9831              	.LBB1106:
 146:src/keys.c    **** }
 9832              		.loc 1 146 23 view .LVU3081
 9833 1552 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9834              	.LBE1106:
 9835              	.LBE1108:
1159:src/keys.c    **** 
 9836              		.loc 1 1159 15 view .LVU3082
 9837 1554 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
1158:src/keys.c    **** 	State2.cmplx = 0;
 9838              		.loc 1 1158 21 view .LVU3083
 9839 1558 03EB8202 		add	r2, r3, r2, lsl #2
 9840              	.LBB1109:
 9841              	.LBB1100:
 9842              	.LBB1097:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9843              		.loc 1 94 16 view .LVU3084
 9844 155c 4FF0000A 		mov	r10, #0
 9845              	.LVL775:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9846              		.loc 1 94 16 view .LVU3085
 9847              	.LBE1097:
 9848              	.LBE1100:
 9849              	.LBE1109:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9850              		.loc 1 1158 21 view .LVU3086
 9851 1560 30F812B0 		ldrh	fp, [r0, r2, lsl #1]
 9852              	.LBB1110:
 9853              	.LBB1101:
 9854              	.LBB1098:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9855              		.loc 1 94 16 view .LVU3087
 9856 1564 88F810A0 		strb	r10, [r8, #16]
  95:src/keys.c    **** 	return r;
 9857              		.loc 1 95 2 is_stmt 1 view .LVU3088
 9858              	.LBE1098:
 9859              	.LBE1101:
 9860              	.LBE1110:
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9861              		.loc 1 1161 5 is_stmt 0 view .LVU3089
 9862 1568 0BF47F42 		and	r2, fp, #65280
1159:src/keys.c    **** 
 9863              		.loc 1 1159 15 view .LVU3090
 9864 156c 6AF34101 		bfi	r1, r10, #1, #1
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9865              		.loc 1 1161 5 view .LVU3091
 9866 1570 B2F57F4F 		cmp	r2, #65280
1159:src/keys.c    **** 
ARM GAS  /tmp/ccQmaUTi.s 			page 280


 9867              		.loc 1 1159 15 view .LVU3092
 9868 1574 88F81510 		strb	r1, [r8, #21]
 9869              	.LBB1111:
 9870              	.LBB1102:
 9871              	.LBB1099:
  95:src/keys.c    **** 	return r;
 9872              		.loc 1 95 19 view .LVU3093
 9873 1578 88F80DA0 		strb	r10, [r8, #13]
  96:src/keys.c    **** }
 9874              		.loc 1 96 2 is_stmt 1 view .LVU3094
 9875              	.LVL776:
  96:src/keys.c    **** }
 9876              		.loc 1 96 2 is_stmt 0 view .LVU3095
 9877              	.LBE1099:
 9878              	.LBE1102:
 9879              	.LBE1111:
1157:src/keys.c    **** 	int op = op_map[lc][shift];
 9880              		.loc 1 1157 2 is_stmt 1 view .LVU3096
 9881              	.LBB1112:
 9882              	.LBI1104:
 134:src/keys.c    **** {
 9883              		.loc 1 134 12 view .LVU3097
 9884              	.LBB1107:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9885              		.loc 1 136 2 view .LVU3098
 146:src/keys.c    **** }
 9886              		.loc 1 146 2 view .LVU3099
 146:src/keys.c    **** }
 9887              		.loc 1 146 2 is_stmt 0 view .LVU3100
 9888              	.LBE1107:
 9889              	.LBE1112:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9890              		.loc 1 1158 2 is_stmt 1 view .LVU3101
1159:src/keys.c    **** 
 9891              		.loc 1 1159 2 view .LVU3102
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9892              		.loc 1 1161 2 view .LVU3103
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9893              		.loc 1 1161 5 is_stmt 0 view .LVU3104
 9894 157c 00F04683 		beq	.L787
1165:src/keys.c    **** 		// HYP
 9895              		.loc 1 1165 2 is_stmt 1 view .LVU3105
1165:src/keys.c    **** 		// HYP
 9896              		.loc 1 1165 5 is_stmt 0 view .LVU3106
 9897 1580 002C     		cmp	r4, #0
 9898 1582 00F00582 		beq	.L1138
1174:src/keys.c    **** 		switch (c) {
 9899              		.loc 1 1174 2 is_stmt 1 view .LVU3107
1174:src/keys.c    **** 		switch (c) {
 9900              		.loc 1 1174 5 is_stmt 0 view .LVU3108
 9901 1586 002B     		cmp	r3, #0
 9902 1588 3FF402A8 		beq	.L594
1175:src/keys.c    **** 		case K_CMPLX:
 9903              		.loc 1 1175 3 is_stmt 1 view .LVU3109
 9904 158c 242C     		cmp	r4, #36
 9905 158e 00F0D383 		beq	.L764
 9906 1592 2D2C     		cmp	r4, #45
ARM GAS  /tmp/ccQmaUTi.s 			page 281


 9907 1594 00F0C683 		beq	.L765
 9908 1598 1F2C     		cmp	r4, #31
 9909 159a 7EF4F9AF 		bne	.L594
1181:src/keys.c    **** 				if (is_bad_cmdline())
 9910              		.loc 1 1181 4 view .LVU3110
1181:src/keys.c    **** 				if (is_bad_cmdline())
 9911              		.loc 1 1181 7 is_stmt 0 view .LVU3111
 9912 159e BBF1330F 		cmp	fp, #51
 9913 15a2 3FF410A9 		beq	.L1060
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9914              		.loc 1 1182 5 is_stmt 1 view .LVU3112
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9915              		.loc 1 1182 9 is_stmt 0 view .LVU3113
 9916 15a6 FFF7FEFF 		bl	is_bad_cmdline
 9917              	.LVL777:
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9918              		.loc 1 1182 8 view .LVU3114
 9919 15aa 0446     		mov	r4, r0
 9920 15ac 0028     		cmp	r0, #0
 9921 15ae 7FF40AA9 		bne	.L1060
1184:src/keys.c    **** 				State2.cmplx = 1;
 9922              		.loc 1 1184 5 is_stmt 1 view .LVU3115
 9923 15b2 FFF7FEFF 		bl	process_cmdline_set_lift
 9924              	.LVL778:
1185:src/keys.c    **** 				State2.test = op;
 9925              		.loc 1 1185 5 view .LVU3116
1185:src/keys.c    **** 				State2.test = op;
 9926              		.loc 1 1185 18 is_stmt 0 view .LVU3117
 9927 15b6 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1186:src/keys.c    **** 			}
 9928              		.loc 1 1186 17 view .LVU3118
 9929 15ba 88F80FB0 		strb	fp, [r8, #15]
1185:src/keys.c    **** 				State2.test = op;
 9930              		.loc 1 1185 18 view .LVU3119
 9931 15be 43F00203 		orr	r3, r3, #2
 9932              	.LBE1117:
 9933              	.LBE1121:
 9934              	.LBE1207:
 9935              	.LBE1264:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 9936              		.loc 1 2929 7 view .LVU3120
 9937 15c2 2746     		mov	r7, r4
 9938              	.LBB1265:
 9939              	.LBB1208:
 9940              	.LBB1122:
 9941              	.LBB1118:
1185:src/keys.c    **** 				State2.test = op;
 9942              		.loc 1 1185 18 view .LVU3121
 9943 15c4 88F81530 		strb	r3, [r8, #21]
1186:src/keys.c    **** 			}
 9944              		.loc 1 1186 5 is_stmt 1 view .LVU3122
1188:src/keys.c    **** 
 9945              		.loc 1 1188 11 is_stmt 0 view .LVU3123
 9946 15c8 4FF0330B 		mov	fp, #51
 9947              	.LVL779:
1188:src/keys.c    **** 
 9948              		.loc 1 1188 11 view .LVU3124
ARM GAS  /tmp/ccQmaUTi.s 			page 282


 9949 15cc FEF76CBD 		b	.L565
 9950              	.LVL780:
 9951              	.L1100:
1188:src/keys.c    **** 
 9952              		.loc 1 1188 11 view .LVU3125
 9953              	.LBE1118:
 9954              	.LBE1122:
2893:src/keys.c    **** 		if (shift == SHIFT_H)
 9955              		.loc 1 2893 4 is_stmt 1 view .LVU3126
 9956              	.LBB1123:
 9957              	.LBI996:
 843:src/keys.c    **** 
 9958              		.loc 1 843 12 view .LVU3127
 9959              	.LBB1025:
 846:src/keys.c    **** 		// Row 1
 9960              		.loc 1 846 2 view .LVU3128
 897:src/keys.c    **** 		STATE_UNFINISHED,
 9961              		.loc 1 897 2 view .LVU3129
 904:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9962              		.loc 1 904 2 view .LVU3130
 9963              	.LBB1001:
 9964              	.LBI1001:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9965              		.loc 1 102 13 view .LVU3131
 9966              	.LBE1001:
 9967              	.LBE1025:
 9968              	.LBE1123:
 9969              	.LBE1208:
 9970              	.LBE1265:
 103:src/keys.c    **** }
 9971              		.loc 1 103 2 view .LVU3132
 9972              	.LBB1266:
 9973              	.LBB1209:
 9974              	.LBB1124:
 9975              	.LBB1026:
 9976              	.LBB1012:
 9977              	.LBB1002:
 9978              	.LBI1002:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9979              		.loc 1 92 20 view .LVU3133
 9980              	.LBB1003:
  93:src/keys.c    **** 	State2.shifts = shift;
 9981              		.loc 1 93 2 view .LVU3134
 9982              	.LBB1004:
 9983              	.LBI1004:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9984              		.loc 1 84 13 view .LVU3135
 9985              	.LBB1005:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9986              		.loc 1 85 2 view .LVU3136
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9987              		.loc 1 85 18 is_stmt 0 view .LVU3137
 9988 15d0 FFF7FEFF 		bl	shift_down
 9989              	.LVL781:
  86:src/keys.c    **** }
 9990              		.loc 1 86 2 is_stmt 1 view .LVU3138
  86:src/keys.c    **** }
ARM GAS  /tmp/ccQmaUTi.s 			page 283


 9991              		.loc 1 86 52 is_stmt 0 view .LVU3139
 9992 15d4 0346     		mov	r3, r0
 9993 15d6 08B9     		cbnz	r0, .L768
 9994 15d8 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 9995              	.L768:
 9996              	.LVL782:
  86:src/keys.c    **** }
 9997              		.loc 1 86 52 view .LVU3140
 9998              	.LBE1005:
 9999              	.LBE1004:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 10000              		.loc 1 94 2 is_stmt 1 view .LVU3141
 10001              	.LBE1003:
 10002              	.LBE1002:
 10003              	.LBE1012:
 10004              	.LBB1013:
 10005              	.LBB1014:
 146:src/keys.c    **** }
 10006              		.loc 1 146 23 is_stmt 0 view .LVU3142
 10007 15dc 614A     		ldr	r2, .L1159+8
 10008              	.LBE1014:
 10009              	.LBE1013:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10010              		.loc 1 906 21 view .LVU3143
 10011 15de DFF898C1 		ldr	ip, .L1159+28
 10012              	.LBB1017:
 10013              	.LBB1015:
 146:src/keys.c    **** }
 10014              		.loc 1 146 23 view .LVU3144
 10015 15e2 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 10016              	.LBE1015:
 10017              	.LBE1017:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10018              		.loc 1 906 21 view .LVU3145
 10019 15e4 4200     		lsls	r2, r0, #1
 10020 15e6 022B     		cmp	r3, #2
 10021 15e8 08BF     		it	eq
 10022 15ea 0132     		addeq	r2, r2, #1
 10023              	.LBB1018:
 10024              	.LBB1009:
 10025              	.LBB1006:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 10026              		.loc 1 94 16 view .LVU3146
 10027 15ec 0021     		movs	r1, #0
 10028              	.LBE1006:
 10029              	.LBE1009:
 10030              	.LBE1018:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10031              		.loc 1 906 21 view .LVU3147
 10032 15ee 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 10033              	.LBB1019:
 10034              	.LBB1010:
 10035              	.LBB1007:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 10036              		.loc 1 94 16 view .LVU3148
 10037 15f2 88F81010 		strb	r1, [r8, #16]
  95:src/keys.c    **** 	return r;
ARM GAS  /tmp/ccQmaUTi.s 			page 284


 10038              		.loc 1 95 2 is_stmt 1 view .LVU3149
 10039 15f6 0BF4704A 		and	r10, fp, #61440
 10040              	.LVL783:
  95:src/keys.c    **** 	return r;
 10041              		.loc 1 95 2 is_stmt 0 view .LVU3150
 10042              	.LBE1007:
 10043              	.LBE1010:
 10044              	.LBE1019:
 908:src/keys.c    **** 		op &= ~NO_INT;
 10045              		.loc 1 908 5 view .LVU3151
 10046 15fa BAF5704F 		cmp	r10, #61440
 10047              	.LBB1020:
 10048              	.LBB1011:
 10049              	.LBB1008:
  95:src/keys.c    **** 	return r;
 10050              		.loc 1 95 19 view .LVU3152
 10051 15fe 88F80D10 		strb	r1, [r8, #13]
  96:src/keys.c    **** }
 10052              		.loc 1 96 2 is_stmt 1 view .LVU3153
 10053              	.LVL784:
  96:src/keys.c    **** }
 10054              		.loc 1 96 2 is_stmt 0 view .LVU3154
 10055              	.LBE1008:
 10056              	.LBE1011:
 10057              	.LBE1020:
 905:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10058              		.loc 1 905 2 is_stmt 1 view .LVU3155
 10059              	.LBB1021:
 10060              	.LBI1013:
 134:src/keys.c    **** {
 10061              		.loc 1 134 12 view .LVU3156
 10062              	.LBB1016:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10063              		.loc 1 136 2 view .LVU3157
 146:src/keys.c    **** }
 10064              		.loc 1 146 2 view .LVU3158
 146:src/keys.c    **** }
 10065              		.loc 1 146 2 is_stmt 0 view .LVU3159
 10066              	.LBE1016:
 10067              	.LBE1021:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10068              		.loc 1 906 2 is_stmt 1 view .LVU3160
 907:src/keys.c    **** 	if (no_int)
 10069              		.loc 1 907 2 view .LVU3161
 908:src/keys.c    **** 		op &= ~NO_INT;
 10070              		.loc 1 908 2 view .LVU3162
 908:src/keys.c    **** 		op &= ~NO_INT;
 10071              		.loc 1 908 5 is_stmt 0 view .LVU3163
 10072 1602 00F0D781 		beq	.L1139
 911:src/keys.c    **** 	case K00:
 10073              		.loc 1 911 2 is_stmt 1 view .LVU3164
 10074 1606 282C     		cmp	r4, #40
 10075 1608 27D8     		bhi	.L788
 10076 160a DFE804F0 		tbb	[pc, r4]
 10077              	.L843:
 10078 160e 97       		.byte	(.L780-.L843)/2
 10079 160f 15       		.byte	(.L778-.L843)/2
ARM GAS  /tmp/ccQmaUTi.s 			page 285


 10080 1610 26       		.byte	(.L788-.L843)/2
 10081 1611 15       		.byte	(.L778-.L843)/2
 10082 1612 26       		.byte	(.L788-.L843)/2
 10083 1613 26       		.byte	(.L788-.L843)/2
 10084 1614 26       		.byte	(.L788-.L843)/2
 10085 1615 26       		.byte	(.L788-.L843)/2
 10086 1616 26       		.byte	(.L788-.L843)/2
 10087 1617 26       		.byte	(.L788-.L843)/2
 10088 1618 26       		.byte	(.L788-.L843)/2
 10089 1619 26       		.byte	(.L788-.L843)/2
 10090 161a 2C       		.byte	(.L777-.L843)/2
 10091 161b 26       		.byte	(.L788-.L843)/2
 10092 161c 26       		.byte	(.L788-.L843)/2
 10093 161d 26       		.byte	(.L788-.L843)/2
 10094 161e 26       		.byte	(.L788-.L843)/2
 10095 161f 26       		.byte	(.L788-.L843)/2
 10096 1620 7D       		.byte	(.L776-.L843)/2
 10097 1621 63       		.byte	(.L775-.L843)/2
 10098 1622 26       		.byte	(.L788-.L843)/2
 10099 1623 26       		.byte	(.L788-.L843)/2
 10100 1624 26       		.byte	(.L788-.L843)/2
 10101 1625 26       		.byte	(.L788-.L843)/2
 10102 1626 26       		.byte	(.L788-.L843)/2
 10103 1627 26       		.byte	(.L788-.L843)/2
 10104 1628 26       		.byte	(.L788-.L843)/2
 10105 1629 26       		.byte	(.L788-.L843)/2
 10106 162a 26       		.byte	(.L788-.L843)/2
 10107 162b 26       		.byte	(.L788-.L843)/2
 10108 162c 4B       		.byte	(.L774-.L843)/2
 10109 162d 3C       		.byte	(.L773-.L843)/2
 10110 162e 52       		.byte	(.L771-.L843)/2
 10111 162f 52       		.byte	(.L771-.L843)/2
 10112 1630 26       		.byte	(.L788-.L843)/2
 10113 1631 26       		.byte	(.L788-.L843)/2
 10114 1632 26       		.byte	(.L788-.L843)/2
 10115 1633 26       		.byte	(.L788-.L843)/2
 10116 1634 26       		.byte	(.L788-.L843)/2
 10117 1635 52       		.byte	(.L771-.L843)/2
 10118 1636 52       		.byte	(.L771-.L843)/2
 10119 1637 00       		.p2align 1
 10120              	.L778:
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10121              		.loc 1 932 4 view .LVU3165
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10122              		.loc 1 932 8 is_stmt 0 view .LVU3166
 10123 1638 4C4A     		ldr	r2, .L1159+16
 10124 163a 1268     		ldr	r2, [r2]
 10125 163c 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10126              		.loc 1 932 7 view .LVU3167
 10127 1640 D207     		lsls	r2, r2, #31
 10128 1642 00F18280 		bmi	.L1065
 10129              	.LVL785:
 10130              	.L782:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10131              		.loc 1 991 2 is_stmt 1 view .LVU3168
 991:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccQmaUTi.s 			page 286


 10132              		.loc 1 991 5 is_stmt 0 view .LVU3169
 10133 1646 BAF5704F 		cmp	r10, #61440
 10134 164a 06D1     		bne	.L788
 10135              	.L770:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10136              		.loc 1 991 13 view .LVU3170
 10137 164c 474B     		ldr	r3, .L1159+16
 10138 164e 1B68     		ldr	r3, [r3]
 10139 1650 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10140 1654 DB07     		lsls	r3, r3, #31
 10141 1656 3FF5B6A8 		bmi	.L1060
 10142              	.L788:
 994:src/keys.c    **** #undef NO_INT
 10143              		.loc 1 994 2 is_stmt 1 view .LVU3171
 10144              	.LVL786:
 10145              	.LBB1022:
 10146              	.LBI998:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10147              		.loc 1 619 12 view .LVU3172
 10148              	.LBB1000:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10149              		.loc 1 620 2 view .LVU3173
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10150              		.loc 1 620 6 is_stmt 0 view .LVU3174
 10151 165a 4FEA2B23 		asr	r3, fp, #8
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10152              		.loc 1 620 5 view .LVU3175
 10153 165e 012B     		cmp	r3, #1
 10154 1660 7EF496AF 		bne	.L594
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10155              		.loc 1 620 5 view .LVU3176
 10156 1664 8BE4     		b	.L851
 10157              	.LVL787:
 10158              	.L777:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10159              		.loc 1 620 5 view .LVU3177
 10160              	.LBE1000:
 10161              	.LBE1022:
 943:src/keys.c    **** 			if (is_bad_cmdline())
 10162              		.loc 1 943 3 is_stmt 1 view .LVU3178
 943:src/keys.c    **** 			if (is_bad_cmdline())
 10163              		.loc 1 943 6 is_stmt 0 view .LVU3179
 10164 1666 012B     		cmp	r3, #1
 10165 1668 EDD1     		bne	.L782
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 10166              		.loc 1 944 4 is_stmt 1 view .LVU3180
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 10167              		.loc 1 944 8 is_stmt 0 view .LVU3181
 10168 166a FFF7FEFF 		bl	is_bad_cmdline
 10169              	.LVL788:
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 10170              		.loc 1 944 7 view .LVU3182
 10171 166e 0028     		cmp	r0, #0
 10172 1670 7FF4A9A8 		bne	.L1060
 946:src/keys.c    **** 			State2.alphas = 1;
 10173              		.loc 1 946 4 is_stmt 1 view .LVU3183
 10174 1674 FFF7FEFF 		bl	process_cmdline_set_lift
ARM GAS  /tmp/ccQmaUTi.s 			page 287


 10175              	.LVL789:
 947:src/keys.c    **** 		}
 10176              		.loc 1 947 4 view .LVU3184
 947:src/keys.c    **** 		}
 10177              		.loc 1 947 18 is_stmt 0 view .LVU3185
 10178 1678 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10179 167c 43F00803 		orr	r3, r3, #8
 10180 1680 88F81630 		strb	r3, [r8, #22]
 10181 1684 DFE7     		b	.L782
 10182              	.LVL790:
 10183              	.L773:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10184              		.loc 1 963 3 is_stmt 1 view .LVU3186
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10185              		.loc 1 963 7 is_stmt 0 view .LVU3187
 10186 1686 FFF7FEFF 		bl	is_bad_cmdline
 10187              	.LVL791:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10188              		.loc 1 963 6 view .LVU3188
 10189 168a 0446     		mov	r4, r0
 10190              	.LVL792:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10191              		.loc 1 963 6 view .LVU3189
 10192 168c 0028     		cmp	r0, #0
 10193 168e 7FF49AA8 		bne	.L1060
 965:src/keys.c    **** 		State2.test = op;
 10194              		.loc 1 965 3 is_stmt 1 view .LVU3190
 10195 1692 FFF7FEFF 		bl	process_cmdline_set_lift
 10196              	.LVL793:
 966:src/keys.c    **** 		return STATE_UNFINISHED;
 10197              		.loc 1 966 3 view .LVU3191
 10198              	.LBE1026:
 10199              	.LBE1124:
 10200              	.LBE1209:
 10201              	.LBE1266:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 10202              		.loc 1 2929 7 is_stmt 0 view .LVU3192
 10203 1696 2746     		mov	r7, r4
 10204              	.LBB1267:
 10205              	.LBB1210:
 10206              	.LBB1125:
 10207              	.LBB1027:
 966:src/keys.c    **** 		return STATE_UNFINISHED;
 10208              		.loc 1 966 15 view .LVU3193
 10209 1698 88F80FB0 		strb	fp, [r8, #15]
 967:src/keys.c    **** 
 10210              		.loc 1 967 3 is_stmt 1 view .LVU3194
 967:src/keys.c    **** 
 10211              		.loc 1 967 10 is_stmt 0 view .LVU3195
 10212 169c 4FF0330B 		mov	fp, #51
 10213              	.LVL794:
 967:src/keys.c    **** 
 10214              		.loc 1 967 10 view .LVU3196
 10215 16a0 FEF702BD 		b	.L565
 10216              	.LVL795:
 10217              	.L774:
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
ARM GAS  /tmp/ccQmaUTi.s 			page 288


 10218              		.loc 1 971 3 is_stmt 1 view .LVU3197
 10219 16a4 0093     		str	r3, [sp]
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10220              		.loc 1 971 18 is_stmt 0 view .LVU3198
 10221 16a6 FFF7FEFF 		bl	shift_down
 10222              	.LVL796:
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10223              		.loc 1 971 6 view .LVU3199
 10224 16aa 009B     		ldr	r3, [sp]
 10225 16ac 0028     		cmp	r0, #0
 10226 16ae 40F04783 		bne	.L1140
 10227              	.L771:
 980:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10228              		.loc 1 980 3 is_stmt 1 view .LVU3200
 980:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10229              		.loc 1 980 6 is_stmt 0 view .LVU3201
 10230 16b2 BBF59C7F 		cmp	fp, #312
 10231 16b6 40F09F82 		bne	.L1141
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10232              		.loc 1 991 2 is_stmt 1 view .LVU3202
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10233              		.loc 1 991 5 is_stmt 0 view .LVU3203
 10234 16ba BAF5704F 		cmp	r10, #61440
 10235 16be 7FF45EAC 		bne	.L851
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10236              		.loc 1 991 13 view .LVU3204
 10237 16c2 2A4B     		ldr	r3, .L1159+16
 10238 16c4 1B68     		ldr	r3, [r3]
 10239 16c6 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10240 16ca DB07     		lsls	r3, r3, #31
 10241 16cc 7FF557AC 		bpl	.L851
 10242 16d0 FFF779B8 		b	.L1060
 10243              	.LVL797:
 10244              	.L775:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10245              		.loc 1 952 4 is_stmt 1 view .LVU3205
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10246              		.loc 1 952 7 is_stmt 0 view .LVU3206
 10247 16d4 022B     		cmp	r3, #2
 10248 16d6 B6D1     		bne	.L782
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10249              		.loc 1 952 27 view .LVU3207
 10250 16d8 244B     		ldr	r3, .L1159+16
 10251              	.LVL798:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10252              		.loc 1 952 27 view .LVU3208
 10253 16da 1B68     		ldr	r3, [r3]
 10254 16dc 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10255 16e0 DC07     		lsls	r4, r3, #31
 10256 16e2 B0D5     		bpl	.L782
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10257              		.loc 1 952 45 view .LVU3209
 10258 16e4 0D20     		movs	r0, #13
 10259              	.LVL799:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10260              		.loc 1 952 45 view .LVU3210
 10261 16e6 FFF7FEFF 		bl	intltr
ARM GAS  /tmp/ccQmaUTi.s 			page 289


 10262              	.LVL800:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10263              		.loc 1 952 42 view .LVU3211
 10264 16ea 0028     		cmp	r0, #0
 10265 16ec ABD0     		beq	.L782
 10266              	.LVL801:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10267              		.loc 1 952 42 view .LVU3212
 10268              	.LBE1027:
 10269              	.LBE1125:
 10270              	.LBE1210:
 10271              	.LBE1267:
3122:src/keys.c    **** 	NonProgrammable = 0;
 10272              		.loc 1 3122 7 is_stmt 1 view .LVU3213
3122:src/keys.c    **** 	NonProgrammable = 0;
 10273              		.loc 1 3122 11 is_stmt 0 view .LVU3214
 10274 16ee 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3122:src/keys.c    **** 	NonProgrammable = 0;
 10275              		.loc 1 3122 10 view .LVU3215
 10276 16f2 5906     		lsls	r1, r3, #25
 10277 16f4 40F1C682 		bpl	.L883
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10278              		.loc 1 3123 2 is_stmt 1 view .LVU3216
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10279              		.loc 1 3123 18 is_stmt 0 view .LVU3217
 10280 16f8 1D4B     		ldr	r3, .L1159+20
 10281 16fa 0022     		movs	r2, #0
 10282              	.LBB1268:
 10283              	.LBB1211:
 10284              	.LBB1126:
 10285              	.LBB1028:
 953:src/keys.c    **** 	  }
 10286              		.loc 1 953 13 view .LVU3218
 10287 16fc 4FF0120B 		mov	fp, #18
 10288              	.LBE1028:
 10289              	.LBE1126:
 10290              	.LBE1211:
 10291              	.LBE1268:
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10292              		.loc 1 3123 18 view .LVU3219
 10293 1700 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10294              		.loc 1 3124 2 is_stmt 1 view .LVU3220
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10295              		.loc 1 3124 32 is_stmt 0 view .LVU3221
 10296 1702 5846     		mov	r0, fp
 10297 1704 FEF7C3BF 		b	.L834
 10298              	.LVL802:
 10299              	.L776:
 10300              	.LBB1269:
 10301              	.LBB1212:
 10302              	.LBB1127:
 10303              	.LBB1029:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10304              		.loc 1 957 4 is_stmt 1 view .LVU3222
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10305              		.loc 1 957 7 is_stmt 0 view .LVU3223
ARM GAS  /tmp/ccQmaUTi.s 			page 290


 10306 1708 022B     		cmp	r3, #2
 10307 170a 9CD1     		bne	.L782
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10308              		.loc 1 957 27 view .LVU3224
 10309 170c 174B     		ldr	r3, .L1159+16
 10310              	.LVL803:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10311              		.loc 1 957 27 view .LVU3225
 10312 170e 1B68     		ldr	r3, [r3]
 10313 1710 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10314 1714 D807     		lsls	r0, r3, #31
 10315              	.LVL804:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10316              		.loc 1 957 27 view .LVU3226
 10317 1716 96D5     		bpl	.L782
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10318              		.loc 1 957 45 view .LVU3227
 10319 1718 0E20     		movs	r0, #14
 10320 171a FFF7FEFF 		bl	intltr
 10321              	.LVL805:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10322              		.loc 1 957 42 view .LVU3228
 10323 171e 0028     		cmp	r0, #0
 10324 1720 91D0     		beq	.L782
 10325              	.LVL806:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10326              		.loc 1 957 42 view .LVU3229
 10327              	.LBE1029:
 10328              	.LBE1127:
 10329              	.LBE1212:
 10330              	.LBE1269:
3122:src/keys.c    **** 	NonProgrammable = 0;
 10331              		.loc 1 3122 7 is_stmt 1 view .LVU3230
3122:src/keys.c    **** 	NonProgrammable = 0;
 10332              		.loc 1 3122 11 is_stmt 0 view .LVU3231
 10333 1722 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3122:src/keys.c    **** 	NonProgrammable = 0;
 10334              		.loc 1 3122 10 view .LVU3232
 10335 1726 5A06     		lsls	r2, r3, #25
 10336 1728 40F11783 		bpl	.L884
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10337              		.loc 1 3123 2 is_stmt 1 view .LVU3233
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10338              		.loc 1 3123 18 is_stmt 0 view .LVU3234
 10339 172c 104B     		ldr	r3, .L1159+20
 10340 172e 0022     		movs	r2, #0
 10341              	.LBB1270:
 10342              	.LBB1213:
 10343              	.LBB1128:
 10344              	.LBB1030:
 958:src/keys.c    **** 	  }
 10345              		.loc 1 958 13 view .LVU3235
 10346 1730 4FF0130B 		mov	fp, #19
 10347              	.LBE1030:
 10348              	.LBE1128:
 10349              	.LBE1213:
 10350              	.LBE1270:
ARM GAS  /tmp/ccQmaUTi.s 			page 291


3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10351              		.loc 1 3123 18 view .LVU3236
 10352 1734 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10353              		.loc 1 3124 2 is_stmt 1 view .LVU3237
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10354              		.loc 1 3124 32 is_stmt 0 view .LVU3238
 10355 1736 5846     		mov	r0, fp
 10356 1738 FEF7A9BF 		b	.L834
 10357              	.LVL807:
 10358              	.L780:
 10359              	.LBB1271:
 10360              	.LBB1214:
 10361              	.LBB1129:
 10362              	.LBB1031:
 913:src/keys.c    **** 	    State2.hyp = 1;
 10363              		.loc 1 913 4 is_stmt 1 view .LVU3239
 913:src/keys.c    **** 	    State2.hyp = 1;
 10364              		.loc 1 913 8 is_stmt 0 view .LVU3240
 10365 173c 0B4A     		ldr	r2, .L1159+16
 10366 173e 1268     		ldr	r2, [r2]
 10367 1740 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 913:src/keys.c    **** 	    State2.hyp = 1;
 10368              		.loc 1 913 7 view .LVU3241
 10369 1744 D107     		lsls	r1, r2, #31
 10370 1746 40F18A82 		bpl	.L1142
 10371              	.L1065:
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10372              		.loc 1 932 20 view .LVU3242
 10373 174a 012B     		cmp	r3, #1
 10374 174c 00F0C982 		beq	.L1143
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10375              		.loc 1 991 2 is_stmt 1 view .LVU3243
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10376              		.loc 1 991 5 is_stmt 0 view .LVU3244
 10377 1750 BAF5704F 		cmp	r10, #61440
 10378 1754 81D1     		bne	.L788
 10379 1756 FFF736B8 		b	.L1060
 10380              	.L1160:
 10381 175a 00BF     		.align	2
 10382              	.L1159:
 10383 175c 00000000 		.word	.LANCHOR1
 10384 1760 00000000 		.word	.LANCHOR11
 10385 1764 00000000 		.word	.LANCHOR18
 10386 1768 00000000 		.word	.LANCHOR17
 10387 176c 00000000 		.word	main_ram
 10388 1770 00000000 		.word	NonProgrammable
 10389 1774 00000000 		.word	.LANCHOR9
 10390 1778 00000000 		.word	.LANCHOR19
 10391              	.LVL808:
 10392              	.L1133:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10393              		.loc 1 991 5 view .LVU3245
 10394              	.LBE1031:
 10395              	.LBE1129:
 10396              	.LBB1130:
 10397              	.LBB822:
ARM GAS  /tmp/ccQmaUTi.s 			page 292


2683:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10398              		.loc 1 2683 50 view .LVU3246
 10399 177c 0D2C     		cmp	r4, #13
 10400 177e 7FF4DDAC 		bne	.L719
2684:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10401              		.loc 1 2684 3 is_stmt 1 view .LVU3247
 10402 1782 012B     		cmp	r3, #1
 10403 1784 14BF     		ite	ne
 10404 1786 2C20     		movne	r0, #44
 10405              	.LVL809:
2684:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10406              		.loc 1 2684 3 is_stmt 0 view .LVU3248
 10407 1788 2B20     		moveq	r0, #43
 10408 178a FFF7FEFF 		bl	set_window
 10409              	.LVL810:
2685:src/keys.c    **** 	}
 10410              		.loc 1 2685 3 is_stmt 1 view .LVU3249
 10411              	.LBB817:
 10412              	.LBI817:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10413              		.loc 1 646 13 view .LVU3250
 10414              	.LBB818:
 647:src/keys.c    **** }
 10415              		.loc 1 647 2 view .LVU3251
 647:src/keys.c    **** }
 10416              		.loc 1 647 15 is_stmt 0 view .LVU3252
 10417 178e 98F81130 		ldrb	r3, [r8, #17]	@ zero_extendqisi2
 10418 1792 013B     		subs	r3, r3, #1
 10419 1794 18BF     		it	ne
 10420 1796 0123     		movne	r3, #1
 10421 1798 88F81130 		strb	r3, [r8, #17]
 10422              	.LVL811:
 647:src/keys.c    **** }
 10423              		.loc 1 647 15 view .LVU3253
 10424              	.LBE818:
 10425              	.LBE817:
2692:src/keys.c    **** 	case K_DOWN:
 10426              		.loc 1 2692 2 is_stmt 1 view .LVU3254
2692:src/keys.c    **** 	case K_DOWN:
 10427              		.loc 1 2692 2 is_stmt 0 view .LVU3255
 10428              	.LBE822:
 10429              	.LBE1130:
 10430              	.LBE1214:
 10431              	.LBE1271:
3086:src/keys.c    ****     case STATE_SST:
 10432              		.loc 1 3086 5 is_stmt 1 view .LVU3256
 10433              	.LBB1272:
 10434              	.LBB1215:
 10435              	.LBB1131:
 10436              	.LBB823:
2743:src/keys.c    **** 	}
 10437              		.loc 1 2743 10 is_stmt 0 view .LVU3257
 10438 179c 4FF0330B 		mov	fp, #51
 10439 17a0 FEF782BC 		b	.L565
 10440              	.LVL812:
 10441              	.L1130:
2743:src/keys.c    **** 	}
ARM GAS  /tmp/ccQmaUTi.s 			page 293


 10442              		.loc 1 2743 10 view .LVU3258
 10443 17a4 0093     		str	r3, [sp]
2667:src/keys.c    **** 	const int g_max = global_regs();
 10444              		.loc 1 2667 33 view .LVU3259
 10445 17a6 FFF7FEFF 		bl	local_regs
 10446              	.LVL813:
2667:src/keys.c    **** 	const int g_max = global_regs();
 10447              		.loc 1 2667 33 view .LVU3260
 10448 17aa 009B     		ldr	r3, [sp]
 10449 17ac 8146     		mov	r9, r0
 10450 17ae B4E4     		b	.L711
 10451              	.LVL814:
 10452              	.L1128:
2667:src/keys.c    **** 	const int g_max = global_regs();
 10453              		.loc 1 2667 33 view .LVU3261
 10454              	.LBE823:
 10455              	.LBE1131:
 10456              	.LBB1132:
 10457              	.LBB992:
2538:src/keys.c    **** 	const int direct = State2.runmode;
 10458              		.loc 1 2538 37 view .LVU3262
 10459 17b0 5046     		mov	r0, r10
 10460 17b2 FFF7FEFF 		bl	getprog
 10461              	.LVL815:
2538:src/keys.c    **** 	const int direct = State2.runmode;
 10462              		.loc 1 2538 63 view .LVU3263
 10463 17b6 20F47062 		bic	r2, r0, #3840
 10464 17ba FFF761BB 		b	.L686
 10465              	.LVL816:
 10466              	.L1132:
2538:src/keys.c    **** 	const int direct = State2.runmode;
 10467              		.loc 1 2538 63 view .LVU3264
 10468              	.LBE992:
 10469              	.LBE1132:
 10470              	.LBB1133:
 10471              	.LBB824:
 10472              	.LBB819:
2677:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10473              		.loc 1 2677 3 is_stmt 1 view .LVU3265
2677:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10474              		.loc 1 2677 19 is_stmt 0 view .LVU3266
 10475 17be B8F80810 		ldrh	r1, [r8, #8]
2677:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10476              		.loc 1 2677 27 view .LVU3267
 10477 17c2 0A23     		movs	r3, #10
2677:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10478              		.loc 1 2677 32 view .LVU3268
 10479 17c4 03FB01A2 		mla	r2, r3, r1, r10
2677:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10480              		.loc 1 2677 37 view .LVU3269
 10481 17c8 6424     		movs	r4, #100
 10482 17ca B2FBF4F3 		udiv	r3, r2, r4
 10483 17ce 04FB1323 		mls	r3, r4, r3, r2
 10484              	.LVL817:
2678:src/keys.c    **** 			dv = n;
 10485              		.loc 1 2678 3 is_stmt 1 view .LVU3270
2678:src/keys.c    **** 			dv = n;
ARM GAS  /tmp/ccQmaUTi.s 			page 294


 10486              		.loc 1 2678 6 is_stmt 0 view .LVU3271
 10487 17d2 4B45     		cmp	r3, r9
 10488 17d4 09DA     		bge	.L717
2678:src/keys.c    **** 			dv = n;
 10489              		.loc 1 2678 21 view .LVU3272
 10490 17d6 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2678:src/keys.c    **** 			dv = n;
 10491              		.loc 1 2678 17 view .LVU3273
 10492 17da D407     		lsls	r4, r2, #31
 10493 17dc 3EF5EBAF 		bmi	.L1052
2678:src/keys.c    **** 			dv = n;
 10494              		.loc 1 2678 36 view .LVU3274
 10495 17e0 8842     		cmp	r0, r1
 10496 17e2 02DD     		ble	.L717
2678:src/keys.c    **** 			dv = n;
 10497              		.loc 1 2678 63 view .LVU3275
 10498 17e4 9842     		cmp	r0, r3
 10499 17e6 3EF7E6AF 		bgt	.L1052
 10500              	.L717:
2679:src/keys.c    **** 		State2.digval = dv;
 10501              		.loc 1 2679 4 is_stmt 1 view .LVU3276
2679:src/keys.c    **** 		State2.digval = dv;
 10502              		.loc 1 2679 7 is_stmt 0 view .LVU3277
 10503 17ea 5346     		mov	r3, r10
 10504              	.LVL818:
2680:src/keys.c    **** 		goto reset_window;
 10505              		.loc 1 2680 3 is_stmt 1 view .LVU3278
 10506 17ec FEF7E3BF 		b	.L1052
 10507              	.LVL819:
 10508              	.L1134:
2680:src/keys.c    **** 		goto reset_window;
 10509              		.loc 1 2680 3 is_stmt 0 view .LVU3279
 10510              	.LBE819:
2688:src/keys.c    **** 		goto reset_window;
 10511              		.loc 1 2688 3 is_stmt 1 view .LVU3280
2688:src/keys.c    **** 		goto reset_window;
 10512              		.loc 1 2688 17 is_stmt 0 view .LVU3281
 10513 17f0 A8F808A0 		strh	r10, [r8, #8]	@ movhi
2689:src/keys.c    **** 	}
 10514              		.loc 1 2689 3 is_stmt 1 view .LVU3282
 10515 17f4 FEF7E1BF 		b	.L715
 10516              	.LVL820:
 10517              	.L1105:
2689:src/keys.c    **** 	}
 10518              		.loc 1 2689 3 is_stmt 0 view .LVU3283
 10519              	.LBE824:
 10520              	.LBE1133:
 10521              	.LBB1134:
 10522              	.LBB732:
2366:src/keys.c    **** 				break;
 10523              		.loc 1 2366 3 is_stmt 1 view .LVU3284
2366:src/keys.c    **** 				break;
 10524              		.loc 1 2366 6 is_stmt 0 view .LVU3285
 10525 17f8 0029     		cmp	r1, #0
 10526 17fa 7EF491AE 		bne	.L676
2368:src/keys.c    **** 		if (State2.numdigit == 0)
 10527              		.loc 1 2368 3 is_stmt 1 view .LVU3286
ARM GAS  /tmp/ccQmaUTi.s 			page 295


 10528              	.LBB723:
 10529              	.LBI723:
2343:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10530              		.loc 1 2343 13 view .LVU3287
 10531              	.LBB724:
2345:src/keys.c    **** 	if (! State2.alphas )
 10532              		.loc 1 2345 2 view .LVU3288
2346:src/keys.c    **** 		State2.alphashift = 0;
 10533              		.loc 1 2346 6 is_stmt 0 view .LVU3289
 10534 17fe 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2345:src/keys.c    **** 	if (! State2.alphas )
 10535              		.loc 1 2345 15 view .LVU3290
 10536 1802 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2346:src/keys.c    **** 		State2.alphashift = 0;
 10537              		.loc 1 2346 5 view .LVU3291
 10538 1806 1807     		lsls	r0, r3, #28
2347:src/keys.c    **** }
 10539              		.loc 1 2347 21 view .LVU3292
 10540 1808 5CBF     		itt	pl
 10541 180a 61F30413 		bfipl	r3, r1, #4, #1
 10542 180e 88F81630 		strbpl	r3, [r8, #22]
 10543              	.LBE724:
 10544              	.LBE723:
2369:src/keys.c    **** 			return STATE_UNFINISHED;
 10545              		.loc 1 2369 13 view .LVU3293
 10546 1812 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 10547              	.LBB726:
 10548              	.LBB725:
2345:src/keys.c    **** 	if (! State2.alphas )
 10549              		.loc 1 2345 15 view .LVU3294
 10550 1816 61F3C302 		bfi	r2, r1, #3, #1
 10551 181a 88F81520 		strb	r2, [r8, #21]
2346:src/keys.c    **** 		State2.alphashift = 0;
 10552              		.loc 1 2346 2 is_stmt 1 view .LVU3295
2347:src/keys.c    **** }
 10553              		.loc 1 2347 3 view .LVU3296
 10554              	.LBE725:
 10555              	.LBE726:
2369:src/keys.c    **** 			return STATE_UNFINISHED;
 10556              		.loc 1 2369 3 view .LVU3297
2369:src/keys.c    **** 			return STATE_UNFINISHED;
 10557              		.loc 1 2369 6 is_stmt 0 view .LVU3298
 10558 181e 002B     		cmp	r3, #0
 10559 1820 3EF4D1AF 		beq	.L1060
2371:src/keys.c    **** 			State2.digval2 = 0;
 10560              		.loc 1 2371 8 is_stmt 1 view .LVU3299
2371:src/keys.c    **** 			State2.digval2 = 0;
 10561              		.loc 1 2371 11 is_stmt 0 view .LVU3300
 10562 1824 012B     		cmp	r3, #1
2372:src/keys.c    **** 		goto fin;
 10563              		.loc 1 2372 19 view .LVU3301
 10564 1826 4FF00003 		mov	r3, #0
2371:src/keys.c    **** 			State2.digval2 = 0;
 10565              		.loc 1 2371 11 view .LVU3302
 10566 182a 7EF4A2AE 		bne	.L678
2372:src/keys.c    **** 		goto fin;
 10567              		.loc 1 2372 4 is_stmt 1 view .LVU3303
ARM GAS  /tmp/ccQmaUTi.s 			page 296


2372:src/keys.c    **** 		goto fin;
 10568              		.loc 1 2372 19 is_stmt 0 view .LVU3304
 10569 182e 88F80A30 		strb	r3, [r8, #10]
 10570 1832 FEF79EBE 		b	.L678
 10571              	.L675:
2386:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10572              		.loc 1 2386 3 is_stmt 1 view .LVU3305
2386:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10573              		.loc 1 2386 6 is_stmt 0 view .LVU3306
 10574 1836 0129     		cmp	r1, #1
 10575 1838 66D0     		beq	.L1062
 10576              	.L681:
2378:src/keys.c    **** 			else
 10577              		.loc 1 2378 5 is_stmt 1 view .LVU3307
 10578              	.LBB727:
 10579              	.LBI727:
2343:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10580              		.loc 1 2343 13 view .LVU3308
 10581              	.LBB728:
2345:src/keys.c    **** 	if (! State2.alphas )
 10582              		.loc 1 2345 2 view .LVU3309
2345:src/keys.c    **** 	if (! State2.alphas )
 10583              		.loc 1 2345 15 is_stmt 0 view .LVU3310
 10584 183a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2346:src/keys.c    **** 		State2.alphashift = 0;
 10585              		.loc 1 2346 6 view .LVU3311
 10586 183e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2345:src/keys.c    **** 	if (! State2.alphas )
 10587              		.loc 1 2345 15 view .LVU3312
 10588 1842 6FF3C302 		bfc	r2, #3, #1
 10589 1846 88F81520 		strb	r2, [r8, #21]
2346:src/keys.c    **** 		State2.alphashift = 0;
 10590              		.loc 1 2346 2 is_stmt 1 view .LVU3313
2346:src/keys.c    **** 		State2.alphashift = 0;
 10591              		.loc 1 2346 5 is_stmt 0 view .LVU3314
 10592 184a 13F00802 		ands	r2, r3, #8
 10593 184e 7EF4BAAF 		bne	.L1060
 10594              	.LVL821:
 10595              	.L1058:
2346:src/keys.c    **** 		State2.alphashift = 0;
 10596              		.loc 1 2346 5 view .LVU3315
 10597              	.LBE728:
 10598              	.LBE727:
2387:src/keys.c    **** 		else
 10599              		.loc 1 2387 22 view .LVU3316
 10600 1852 62F30413 		bfi	r3, r2, #4, #1
 10601 1856 88F81630 		strb	r3, [r8, #22]
 10602 185a FEF7B4BF 		b	.L1060
 10603              	.LVL822:
 10604              	.L674:
2376:src/keys.c    **** 			if (State2.numdigit == 0)
 10605              		.loc 1 2376 3 is_stmt 1 view .LVU3317
2376:src/keys.c    **** 			if (State2.numdigit == 0)
 10606              		.loc 1 2376 6 is_stmt 0 view .LVU3318
 10607 185e 0329     		cmp	r1, #3
 10608 1860 3EF466AE 		beq	.L679
2377:src/keys.c    **** 				reset_multi();
ARM GAS  /tmp/ccQmaUTi.s 			page 297


 10609              		.loc 1 2377 4 is_stmt 1 view .LVU3319
2377:src/keys.c    **** 				reset_multi();
 10610              		.loc 1 2377 14 is_stmt 0 view .LVU3320
 10611 1864 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2377:src/keys.c    **** 				reset_multi();
 10612              		.loc 1 2377 7 view .LVU3321
 10613 1868 002B     		cmp	r3, #0
 10614 186a E6D0     		beq	.L681
2380:src/keys.c    **** 			return STATE_UNFINISHED;
 10615              		.loc 1 2380 5 is_stmt 1 view .LVU3322
2380:src/keys.c    **** 			return STATE_UNFINISHED;
 10616              		.loc 1 2380 20 is_stmt 0 view .LVU3323
 10617 186c 013B     		subs	r3, r3, #1
 10618 186e 88F80B30 		strb	r3, [r8, #11]
2381:src/keys.c    **** 		}
 10619              		.loc 1 2381 11 view .LVU3324
 10620 1872 4FF0330B 		mov	fp, #51
 10621 1876 FEF717BC 		b	.L565
 10622              	.LVL823:
 10623              	.L1107:
2402:src/keys.c    **** 		State2.numdigit = 1;
 10624              		.loc 1 2402 3 is_stmt 1 view .LVU3325
2403:src/keys.c    **** 		return STATE_UNFINISHED;
 10625              		.loc 1 2403 19 is_stmt 0 view .LVU3326
 10626 187a 0122     		movs	r2, #1
2402:src/keys.c    **** 		State2.numdigit = 1;
 10627              		.loc 1 2402 17 view .LVU3327
 10628 187c A8F80830 		strh	r3, [r8, #8]	@ movhi
2403:src/keys.c    **** 		return STATE_UNFINISHED;
 10629              		.loc 1 2403 3 is_stmt 1 view .LVU3328
2403:src/keys.c    **** 		return STATE_UNFINISHED;
 10630              		.loc 1 2403 19 is_stmt 0 view .LVU3329
 10631 1880 88F80B20 		strb	r2, [r8, #11]
2404:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10632              		.loc 1 2404 3 is_stmt 1 view .LVU3330
2404:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10633              		.loc 1 2404 10 is_stmt 0 view .LVU3331
 10634 1884 4FF0330B 		mov	fp, #51
 10635 1888 FEF70EBC 		b	.L565
 10636              	.LVL824:
 10637              	.L865:
2404:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10638              		.loc 1 2404 10 view .LVU3332
 10639              	.LBE732:
 10640              	.LBE1134:
 10641              	.LBB1135:
 10642              	.LBB658:
 10643              	.LBB651:
 301:src/keys.c    ****     }
 10644              		.loc 1 301 14 view .LVU3333
 10645 188c 4FF0160B 		mov	fp, #22
 10646 1890 FFF734BA 		b	.L656
 10647              	.LVL825:
 10648              	.L790:
 301:src/keys.c    ****     }
 10649              		.loc 1 301 14 view .LVU3334
 10650              	.LBE651:
ARM GAS  /tmp/ccQmaUTi.s 			page 298


 10651              	.LBE658:
 10652              	.LBE1135:
 10653              	.LBB1136:
 10654              	.LBB1080:
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10655              		.loc 1 1062 3 is_stmt 1 view .LVU3335
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10656              		.loc 1 1062 7 is_stmt 0 view .LVU3336
 10657 1894 D54B     		ldr	r3, .L1161
 10658 1896 1B68     		ldr	r3, [r3]
 10659 1898 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10660              		.loc 1 1062 6 view .LVU3337
 10661 189c D407     		lsls	r4, r2, #31
 10662 189e 2BD5     		bpl	.L793
1063:src/keys.c    **** 		else
 10663              		.loc 1 1063 4 is_stmt 1 view .LVU3338
1063:src/keys.c    **** 		else
 10664              		.loc 1 1063 57 is_stmt 0 view .LVU3339
 10665 18a0 93F9E737 		ldrsb	r3, [r3, #2023]
 10666 18a4 002B     		cmp	r3, #0
 10667 18a6 40F2531B 		movw	fp, #339
 10668 18aa A8BF     		it	ge
 10669 18ac 4FF4AA7B 		movge	fp, #340
 10670 18b0 BDE5     		b	.L795
 10671              	.LVL826:
 10672              	.L1120:
1063:src/keys.c    **** 		else
 10673              		.loc 1 1063 57 view .LVU3340
 10674              	.LBE1080:
 10675              	.LBE1136:
 10676              	.LBB1137:
 10677              	.LBB882:
1360:src/keys.c    **** 		if (rawpc == 1)
 10678              		.loc 1 1360 3 is_stmt 1 view .LVU3341
1360:src/keys.c    **** 		if (rawpc == 1)
 10679              		.loc 1 1360 11 is_stmt 0 view .LVU3342
 10680 18b2 DFF83893 		ldr	r9, .L1161
 10681 18b6 D9F80030 		ldr	r3, [r9]
 10682              	.LVL827:
1360:src/keys.c    **** 		if (rawpc == 1)
 10683              		.loc 1 1360 9 view .LVU3343
 10684 18ba B3F8E007 		ldrh	r0, [r3, #2016]
 10685              	.LVL828:
1361:src/keys.c    **** 			rawpc = 0;
 10686              		.loc 1 1361 3 is_stmt 1 view .LVU3344
1362:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10687              		.loc 1 1362 10 is_stmt 0 view .LVU3345
 10688 18be 0128     		cmp	r0, #1
 10689              	.LVL829:
1363:src/keys.c    **** 		update_program_bounds(1);
 10690              		.loc 1 1363 3 is_stmt 1 view .LVU3346
 10691 18c0 08BF     		it	eq
 10692 18c2 0020     		moveq	r0, #0
 10693              	.LVL830:
1363:src/keys.c    **** 		update_program_bounds(1);
 10694              		.loc 1 1363 3 is_stmt 0 view .LVU3347
ARM GAS  /tmp/ccQmaUTi.s 			page 299


 10695 18c4 0021     		movs	r1, #0
 10696 18c6 FFF7FEFF 		bl	do_dec
 10697              	.LVL831:
1363:src/keys.c    **** 		update_program_bounds(1);
 10698              		.loc 1 1363 3 view .LVU3348
 10699 18ca FFF7FEFF 		bl	set_pc
 10700              	.LVL832:
1364:src/keys.c    **** 		rawpc = ProgBegin;
 10701              		.loc 1 1364 3 is_stmt 1 view .LVU3349
 10702 18ce 0120     		movs	r0, #1
 10703 18d0 FFF7FEFF 		bl	update_program_bounds
 10704              	.LVL833:
1365:src/keys.c    **** 		goto fin;
 10705              		.loc 1 1365 3 view .LVU3350
1365:src/keys.c    **** 		goto fin;
 10706              		.loc 1 1365 11 is_stmt 0 view .LVU3351
 10707 18d4 D9F80030 		ldr	r3, [r9]
1365:src/keys.c    **** 		goto fin;
 10708              		.loc 1 1365 9 view .LVU3352
 10709 18d8 B3F8EC07 		ldrh	r0, [r3, #2028]
 10710              	.LVL834:
1366:src/keys.c    **** 	}
 10711              		.loc 1 1366 3 is_stmt 1 view .LVU3353
 10712 18dc FFF724B9 		b	.L607
 10713              	.LVL835:
 10714              	.L1137:
1366:src/keys.c    **** 	}
 10715              		.loc 1 1366 3 is_stmt 0 view .LVU3354
 10716              	.LBE882:
 10717              	.LBE1137:
 10718              	.LBB1138:
 10719              	.LBB1081:
1092:src/keys.c    **** #undef _RARG
 10720              		.loc 1 1092 2 is_stmt 1 view .LVU3355
1092:src/keys.c    **** #undef _RARG
 10721              		.loc 1 1092 9 is_stmt 0 view .LVU3356
 10722 18e0 C24B     		ldr	r3, .L1161
 10723 18e2 1B68     		ldr	r3, [r3]
 10724 18e4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1092:src/keys.c    **** #undef _RARG
 10725              		.loc 1 1092 57 view .LVU3357
 10726 18e8 D907     		lsls	r1, r3, #31
 10727 18ea 7FF5A0AD 		bpl	.L795
 10728              	.LVL836:
1092:src/keys.c    **** #undef _RARG
 10729              		.loc 1 1092 21 view .LVU3358
 10730 18ee 1AF4804F 		tst	r10, #16384
 10731 18f2 7EF468AF 		bne	.L1060
 10732 18f6 9AE5     		b	.L795
 10733              	.LVL837:
 10734              	.L793:
1068:src/keys.c    **** #endif
 10735              		.loc 1 1068 4 is_stmt 1 view .LVU3359
1068:src/keys.c    **** #endif
 10736              		.loc 1 1068 8 is_stmt 0 view .LVU3360
 10737 18f8 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1068:src/keys.c    **** #endif
ARM GAS  /tmp/ccQmaUTi.s 			page 300


 10738              		.loc 1 1068 7 view .LVU3361
 10739 18fc 9806     		lsls	r0, r3, #26
 10740 18fe 7FF585AD 		bpl	.L792
1068:src/keys.c    **** #endif
 10741              		.loc 1 1068 29 view .LVU3362
 10742 1902 40F24F1B 		movw	fp, #335
 10743 1906 92E5     		b	.L795
 10744              	.LVL838:
 10745              	.L1062:
1068:src/keys.c    **** #endif
 10746              		.loc 1 1068 29 view .LVU3363
 10747              	.LBE1081:
 10748              	.LBE1138:
 10749              	.LBB1139:
 10750              	.LBB733:
2387:src/keys.c    **** 		else
 10751              		.loc 1 2387 4 is_stmt 1 view .LVU3364
2387:src/keys.c    **** 		else
 10752              		.loc 1 2387 34 is_stmt 0 view .LVU3365
 10753 1908 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10754 190c C3F30012 		ubfx	r2, r3, #4, #1
2387:src/keys.c    **** 		else
 10755              		.loc 1 2387 26 view .LVU3366
 10756 1910 C2F10102 		rsb	r2, r2, #1
 10757 1914 9DE7     		b	.L1058
 10758              	.LVL839:
 10759              	.L818:
2387:src/keys.c    **** 		else
 10760              		.loc 1 2387 26 view .LVU3367
 10761              	.LBE733:
 10762              	.LBE1139:
 10763              	.LBB1140:
 10764              	.LBB679:
 769:src/keys.c    **** 	case K03:
 10765              		.loc 1 769 3 is_stmt 1 view .LVU3368
 769:src/keys.c    **** 	case K03:
 10766              		.loc 1 769 10 is_stmt 0 view .LVU3369
 10767 1916 5146     		mov	r1, r10
 10768 1918 0120     		movs	r0, #1
 10769 191a FFF7FEFF 		bl	check_f_key
 10770              	.LVL840:
 10771 191e 8346     		mov	fp, r0
 10772 1920 FEF736BE 		b	.L594
 10773              	.L817:
 767:src/keys.c    **** 	case K01:
 10774              		.loc 1 767 3 is_stmt 1 view .LVU3370
 767:src/keys.c    **** 	case K01:
 10775              		.loc 1 767 10 is_stmt 0 view .LVU3371
 10776 1924 5146     		mov	r1, r10
 10777 1926 0020     		movs	r0, #0
 10778 1928 FFF7FEFF 		bl	check_f_key
 10779              	.LVL841:
 10780 192c 8346     		mov	fp, r0
 10781 192e FEF72FBE 		b	.L594
 10782              	.LVL842:
 10783              	.L808:
 767:src/keys.c    **** 	case K01:
ARM GAS  /tmp/ccQmaUTi.s 			page 301


 10784              		.loc 1 767 10 view .LVU3372
 10785              	.LBE679:
 10786              	.LBE1140:
 10787              	.LBE1215:
 10788              	.LBE1272:
3122:src/keys.c    **** 	NonProgrammable = 0;
 10789              		.loc 1 3122 7 is_stmt 1 view .LVU3373
3122:src/keys.c    **** 	NonProgrammable = 0;
 10790              		.loc 1 3122 11 is_stmt 0 view .LVU3374
 10791 1932 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3122:src/keys.c    **** 	NonProgrammable = 0;
 10792              		.loc 1 3122 10 view .LVU3375
 10793 1936 5906     		lsls	r1, r3, #25
 10794 1938 40F1BB81 		bpl	.L888
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10795              		.loc 1 3123 2 is_stmt 1 view .LVU3376
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10796              		.loc 1 3123 18 is_stmt 0 view .LVU3377
 10797 193c AC4B     		ldr	r3, .L1161+4
 10798 193e 0022     		movs	r2, #0
 10799              	.LBB1273:
 10800              	.LBB1216:
 10801              	.LBB1141:
 10802              	.LBB680:
 733:src/keys.c    **** 	    }
 10803              		.loc 1 733 15 view .LVU3378
 10804 1940 4FF00F0B 		mov	fp, #15
 10805              	.LBE680:
 10806              	.LBE1141:
 10807              	.LBE1216:
 10808              	.LBE1273:
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10809              		.loc 1 3123 18 view .LVU3379
 10810 1944 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10811              		.loc 1 3124 2 is_stmt 1 view .LVU3380
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10812              		.loc 1 3124 32 is_stmt 0 view .LVU3381
 10813 1946 5846     		mov	r0, fp
 10814 1948 FEF7A1BE 		b	.L834
 10815              	.LVL843:
 10816              	.L809:
3122:src/keys.c    **** 	NonProgrammable = 0;
 10817              		.loc 1 3122 7 is_stmt 1 view .LVU3382
3122:src/keys.c    **** 	NonProgrammable = 0;
 10818              		.loc 1 3122 11 is_stmt 0 view .LVU3383
 10819 194c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3122:src/keys.c    **** 	NonProgrammable = 0;
 10820              		.loc 1 3122 10 view .LVU3384
 10821 1950 5B06     		lsls	r3, r3, #25
 10822 1952 40F12781 		bpl	.L885
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10823              		.loc 1 3123 2 is_stmt 1 view .LVU3385
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10824              		.loc 1 3123 18 is_stmt 0 view .LVU3386
 10825 1956 A64B     		ldr	r3, .L1161+4
 10826 1958 0022     		movs	r2, #0
ARM GAS  /tmp/ccQmaUTi.s 			page 302


 10827              	.LBB1274:
 10828              	.LBB1217:
 10829              	.LBB1142:
 10830              	.LBB681:
 741:src/keys.c    **** 	    }
 10831              		.loc 1 741 15 view .LVU3387
 10832 195a 4FF0100B 		mov	fp, #16
 10833              	.LBE681:
 10834              	.LBE1142:
 10835              	.LBE1217:
 10836              	.LBE1274:
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10837              		.loc 1 3123 18 view .LVU3388
 10838 195e 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10839              		.loc 1 3124 2 is_stmt 1 view .LVU3389
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10840              		.loc 1 3124 32 is_stmt 0 view .LVU3390
 10841 1960 5846     		mov	r0, fp
 10842 1962 FEF794BE 		b	.L834
 10843              	.LVL844:
 10844              	.L741:
 10845              	.LBB1275:
 10846              	.LBB1218:
 10847              	.LBB1143:
 10848              	.LBB784:
1468:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10849              		.loc 1 1468 3 is_stmt 1 view .LVU3391
1468:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10850              		.loc 1 1468 6 is_stmt 0 view .LVU3392
 10851 1966 0128     		cmp	r0, #1
 10852 1968 7FF400AD 		bne	.L740
 10853              	.LVL845:
1468:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10854              		.loc 1 1468 6 view .LVU3393
 10855              	.LBE784:
 10856              	.LBE1143:
 10857              	.LBE1218:
 10858              	.LBE1275:
3122:src/keys.c    **** 	NonProgrammable = 0;
 10859              		.loc 1 3122 7 is_stmt 1 view .LVU3394
3122:src/keys.c    **** 	NonProgrammable = 0;
 10860              		.loc 1 3122 10 is_stmt 0 view .LVU3395
 10861 196c 5806     		lsls	r0, r3, #25
 10862              	.LVL846:
3122:src/keys.c    **** 	NonProgrammable = 0;
 10863              		.loc 1 3122 10 view .LVU3396
 10864 196e 40F18681 		bpl	.L882
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10865              		.loc 1 3123 2 is_stmt 1 view .LVU3397
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10866              		.loc 1 3123 18 is_stmt 0 view .LVU3398
 10867 1972 9F4B     		ldr	r3, .L1161+4
 10868 1974 0022     		movs	r2, #0
 10869              	.LVL847:
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10870              		.loc 1 3123 18 view .LVU3399
ARM GAS  /tmp/ccQmaUTi.s 			page 303


 10871 1976 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10872              		.loc 1 3124 2 is_stmt 1 view .LVU3400
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10873              		.loc 1 3124 32 is_stmt 0 view .LVU3401
 10874 1978 40F23B10 		movw	r0, #315
 10875 197c FEF7AEBD 		b	.L832
 10876              	.LVL848:
 10877              	.L662:
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10878              		.loc 1 3124 32 view .LVU3402
 10879 1980 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10880              	.LBB1276:
 10881              	.LBB1219:
 10882              	.LBB1144:
 10883              	.LBB659:
 10884              	.LBB652:
 322:src/keys.c    **** #ifndef WINGUI
 10885              		.loc 1 322 8 view .LVU3403
 10886 1984 9B4B     		ldr	r3, .L1161+8
 328:src/keys.c    ****   }
 10887              		.loc 1 328 9 view .LVU3404
 10888 1986 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 10889              		.loc 1 324 73 view .LVU3405
 10890 1988 4FF0020C 		mov	ip, #2
 10891 198c FEF786BC 		b	.L661
 10892              	.LVL849:
 10893              	.L1138:
 324:src/keys.c    **** #else
 10894              		.loc 1 324 73 view .LVU3406
 10895              	.LBE652:
 10896              	.LBE659:
 10897              	.LBE1144:
 10898              	.LBB1145:
 10899              	.LBB1119:
1167:src/keys.c    **** 		State2.hyp = 1;
 10900              		.loc 1 1167 3 is_stmt 1 view .LVU3407
 10901 1990 FFF7FEFF 		bl	process_cmdline_set_lift
 10902              	.LVL850:
1168:src/keys.c    **** 		State2.dot = op;
 10903              		.loc 1 1168 3 view .LVU3408
1169:src/keys.c    **** 		State2.cmplx = 1;
 10904              		.loc 1 1169 3 view .LVU3409
1170:src/keys.c    **** 		return STATE_UNFINISHED;
 10905              		.loc 1 1170 3 view .LVU3410
1170:src/keys.c    **** 		return STATE_UNFINISHED;
 10906              		.loc 1 1170 16 is_stmt 0 view .LVU3411
 10907 1994 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10908 1998 0BF00103 		and	r3, fp, #1
 10909 199c 9B01     		lsls	r3, r3, #6
 10910 199e 43F02203 		orr	r3, r3, #34
 10911 19a2 22F06202 		bic	r2, r2, #98
 10912 19a6 1343     		orrs	r3, r3, r2
 10913 19a8 88F81530 		strb	r3, [r8, #21]
1171:src/keys.c    **** 	}
 10914              		.loc 1 1171 3 is_stmt 1 view .LVU3412
ARM GAS  /tmp/ccQmaUTi.s 			page 304


1171:src/keys.c    **** 	}
 10915              		.loc 1 1171 10 is_stmt 0 view .LVU3413
 10916 19ac 4FF0330B 		mov	fp, #51
 10917              	.LVL851:
1171:src/keys.c    **** 	}
 10918              		.loc 1 1171 10 view .LVU3414
 10919 19b0 FEF77ABB 		b	.L565
 10920              	.LVL852:
 10921              	.L1139:
1171:src/keys.c    **** 	}
 10922              		.loc 1 1171 10 view .LVU3415
 10923              	.LBE1119:
 10924              	.LBE1145:
 10925              	.LBB1146:
 10926              	.LBB1032:
 909:src/keys.c    **** 
 10927              		.loc 1 909 3 is_stmt 1 view .LVU3416
 909:src/keys.c    **** 
 10928              		.loc 1 909 6 is_stmt 0 view .LVU3417
 10929 19b4 2BF4704B 		bic	fp, fp, #61440
 10930              	.LVL853:
 911:src/keys.c    **** 	case K00:
 10931              		.loc 1 911 2 is_stmt 1 view .LVU3418
 10932 19b8 282C     		cmp	r4, #40
 10933 19ba 3FF647AE 		bhi	.L770
 10934 19be 01A2     		adr	r2, .L772
 10935 19c0 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 10936              		.p2align 2
 10937              	.L772:
 10938 19c4 3D170000 		.word	.L780+1
 10939 19c8 39160000 		.word	.L778+1
 10940 19cc 4D160000 		.word	.L770+1
 10941 19d0 39160000 		.word	.L778+1
 10942 19d4 4D160000 		.word	.L770+1
 10943 19d8 4D160000 		.word	.L770+1
 10944 19dc 4D160000 		.word	.L770+1
 10945 19e0 4D160000 		.word	.L770+1
 10946 19e4 4D160000 		.word	.L770+1
 10947 19e8 4D160000 		.word	.L770+1
 10948 19ec 4D160000 		.word	.L770+1
 10949 19f0 4D160000 		.word	.L770+1
 10950 19f4 67160000 		.word	.L777+1
 10951 19f8 4D160000 		.word	.L770+1
 10952 19fc 4D160000 		.word	.L770+1
 10953 1a00 4D160000 		.word	.L770+1
 10954 1a04 4D160000 		.word	.L770+1
 10955 1a08 4D160000 		.word	.L770+1
 10956 1a0c 09170000 		.word	.L776+1
 10957 1a10 D5160000 		.word	.L775+1
 10958 1a14 4D160000 		.word	.L770+1
 10959 1a18 4D160000 		.word	.L770+1
 10960 1a1c 4D160000 		.word	.L770+1
 10961 1a20 4D160000 		.word	.L770+1
 10962 1a24 4D160000 		.word	.L770+1
 10963 1a28 4D160000 		.word	.L770+1
 10964 1a2c 4D160000 		.word	.L770+1
 10965 1a30 4D160000 		.word	.L770+1
ARM GAS  /tmp/ccQmaUTi.s 			page 305


 10966 1a34 4D160000 		.word	.L770+1
 10967 1a38 4D160000 		.word	.L770+1
 10968 1a3c A5160000 		.word	.L774+1
 10969 1a40 87160000 		.word	.L773+1
 10970 1a44 B3160000 		.word	.L771+1
 10971 1a48 B3160000 		.word	.L771+1
 10972 1a4c 4D160000 		.word	.L770+1
 10973 1a50 4D160000 		.word	.L770+1
 10974 1a54 4D160000 		.word	.L770+1
 10975 1a58 4D160000 		.word	.L770+1
 10976 1a5c 4D160000 		.word	.L770+1
 10977 1a60 B3160000 		.word	.L771+1
 10978 1a64 B3160000 		.word	.L771+1
 10979              	.LVL854:
 10980              		.p2align 1
 10981              	.L1108:
 911:src/keys.c    **** 	case K00:
 10982              		.loc 1 911 2 is_stmt 0 view .LVU3419
 10983              	.LBE1032:
 10984              	.LBE1146:
 10985              	.LBB1147:
 10986              	.LBB734:
2406:src/keys.c    **** 		State2.numdigit = 2;
 10987              		.loc 1 2406 3 is_stmt 1 view .LVU3420
2407:src/keys.c    **** 		return STATE_UNFINISHED;
 10988              		.loc 1 2407 19 is_stmt 0 view .LVU3421
 10989 1a68 0222     		movs	r2, #2
2406:src/keys.c    **** 		State2.numdigit = 2;
 10990              		.loc 1 2406 18 view .LVU3422
 10991 1a6a 88F80A30 		strb	r3, [r8, #10]
2407:src/keys.c    **** 		return STATE_UNFINISHED;
 10992              		.loc 1 2407 3 is_stmt 1 view .LVU3423
2407:src/keys.c    **** 		return STATE_UNFINISHED;
 10993              		.loc 1 2407 19 is_stmt 0 view .LVU3424
 10994 1a6e 88F80B20 		strb	r2, [r8, #11]
2408:src/keys.c    **** 	}
 10995              		.loc 1 2408 3 is_stmt 1 view .LVU3425
2408:src/keys.c    **** 	}
 10996              		.loc 1 2408 10 is_stmt 0 view .LVU3426
 10997 1a72 4FF0330B 		mov	fp, #51
 10998 1a76 FEF717BB 		b	.L565
 10999              	.LVL855:
 11000              	.L1129:
2408:src/keys.c    **** 	}
 11001              		.loc 1 2408 10 view .LVU3427
 11002              	.LBE734:
 11003              	.LBE1147:
 11004              	.LBB1148:
 11005              	.LBB993:
2545:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11006              		.loc 1 2545 3 is_stmt 1 view .LVU3428
2545:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11007              		.loc 1 2545 8 is_stmt 0 view .LVU3429
 11008 1a7a 4FEA8B34 		lsl	r4, fp, #14
2545:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11009              		.loc 1 2545 6 view .LVU3430
 11010 1a7e 44F00104 		orr	r4, r4, #1
ARM GAS  /tmp/ccQmaUTi.s 			page 306


 11011              	.LVL856:
2546:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11012              		.loc 1 2546 3 is_stmt 1 view .LVU3431
2546:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11013              		.loc 1 2546 9 is_stmt 0 view .LVU3432
 11014 1a82 2046     		mov	r0, r4
 11015 1a84 FFF7FEFF 		bl	is_label_or_end_at
 11016              	.LVL857:
2546:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11017              		.loc 1 2546 6 view .LVU3433
 11018 1a88 0246     		mov	r2, r0
 11019 1a8a 0028     		cmp	r0, #0
 11020 1a8c 00F02381 		beq	.L1144
 11021              	.L689:
2548:src/keys.c    **** 		return STATE_UNFINISHED;
 11022              		.loc 1 2548 3 is_stmt 1 view .LVU3434
2548:src/keys.c    **** 		return STATE_UNFINISHED;
 11023              		.loc 1 2548 17 is_stmt 0 view .LVU3435
 11024 1a90 A8F80840 		strh	r4, [r8, #8]	@ movhi
2549:src/keys.c    **** 	}
 11025              		.loc 1 2549 3 is_stmt 1 view .LVU3436
2549:src/keys.c    **** 	}
 11026              		.loc 1 2549 10 is_stmt 0 view .LVU3437
 11027 1a94 4FF0330B 		mov	fp, #51
 11028              	.LVL858:
2549:src/keys.c    **** 	}
 11029              		.loc 1 2549 10 view .LVU3438
 11030 1a98 FEF706BB 		b	.L565
 11031              	.LVL859:
 11032              	.L1131:
2549:src/keys.c    **** 	}
 11033              		.loc 1 2549 10 view .LVU3439
 11034              	.LBE993:
 11035              	.LBE1148:
 11036              	.LBB1149:
 11037              	.LBB825:
2671:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11038              		.loc 1 2671 3 is_stmt 1 view .LVU3440
2671:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11039              		.loc 1 2671 7 is_stmt 0 view .LVU3441
 11040 1a9c FFF7FEFF 		bl	local_regs
 11041              	.LVL860:
2671:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11042              		.loc 1 2671 6 view .LVU3442
 11043 1aa0 68B1     		cbz	r0, .L713
2672:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11044              		.loc 1 2672 4 is_stmt 1 view .LVU3443
2672:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11045              		.loc 1 2672 19 is_stmt 0 view .LVU3444
 11046 1aa2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2672:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11047              		.loc 1 2672 34 view .LVU3445
 11048 1aa6 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2672:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11049              		.loc 1 2672 19 view .LVU3446
 11050 1aaa 03F00101 		and	r1, r3, #1
2672:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
ARM GAS  /tmp/ccQmaUTi.s 			page 307


 11051              		.loc 1 2672 34 view .LVU3447
 11052 1aae 0A43     		orrs	r2, r1, r2
 11053 1ab0 0CBF     		ite	eq
 11054 1ab2 0122     		moveq	r2, #1
 11055 1ab4 0022     		movne	r2, #0
2672:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11056              		.loc 1 2672 17 view .LVU3448
 11057 1ab6 62F30003 		bfi	r3, r2, #0, #1
 11058 1aba 88F81630 		strb	r3, [r8, #22]
 11059              	.L713:
2673:src/keys.c    **** 		goto reset_window;
 11060              		.loc 1 2673 3 is_stmt 1 view .LVU3449
2673:src/keys.c    **** 		goto reset_window;
 11061              		.loc 1 2673 32 is_stmt 0 view .LVU3450
 11062 1abe 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2673:src/keys.c    **** 		goto reset_window;
 11063              		.loc 1 2673 17 view .LVU3451
 11064 1ac2 13F0010F 		tst	r3, #1
 11065 1ac6 14BF     		ite	ne
 11066 1ac8 0023     		movne	r3, #0
 11067 1aca 6423     		moveq	r3, #100
 11068 1acc A8F80830 		strh	r3, [r8, #8]	@ movhi
2674:src/keys.c    **** 	}
 11069              		.loc 1 2674 3 is_stmt 1 view .LVU3452
 11070 1ad0 FEF773BE 		b	.L715
 11071              	.LVL861:
 11072              	.L747:
2674:src/keys.c    **** 	}
 11073              		.loc 1 2674 3 is_stmt 0 view .LVU3453
 11074              	.LBE825:
 11075              	.LBE1149:
 11076              	.LBB1150:
 11077              	.LBB785:
1415:src/keys.c    **** 			break;
 11078              		.loc 1 1415 3 is_stmt 1 view .LVU3454
1415:src/keys.c    **** 			break;
 11079              		.loc 1 1415 24 is_stmt 0 view .LVU3455
 11080 1ad4 811E     		subs	r1, r0, #2
1415:src/keys.c    **** 			break;
 11081              		.loc 1 1415 6 view .LVU3456
 11082 1ad6 C9B2     		uxtb	r1, r1
 11083 1ad8 0129     		cmp	r1, #1
 11084 1ada 7FF647AC 		bls	.L740
1417:src/keys.c    **** 			State2.multi = 1;
 11085              		.loc 1 1417 3 is_stmt 1 view .LVU3457
1417:src/keys.c    **** 			State2.multi = 1;
 11086              		.loc 1 1417 6 is_stmt 0 view .LVU3458
 11087 1ade 0128     		cmp	r0, #1
 11088 1ae0 03D1     		bne	.L751
1417:src/keys.c    **** 			State2.multi = 1;
 11089              		.loc 1 1417 24 view .LVU3459
 11090 1ae2 13F04002 		ands	r2, r3, #64
 11091              	.LVL862:
1417:src/keys.c    **** 			State2.multi = 1;
 11092              		.loc 1 1417 24 view .LVU3460
 11093 1ae6 00F0E780 		beq	.L1145
 11094              	.L751:
ARM GAS  /tmp/ccQmaUTi.s 			page 308


1423:src/keys.c    **** 		State2.alphashift = 0;
 11095              		.loc 1 1423 3 is_stmt 1 view .LVU3461
1424:src/keys.c    **** 		return op;
 11096              		.loc 1 1424 3 view .LVU3462
1423:src/keys.c    **** 		State2.alphashift = 0;
 11097              		.loc 1 1423 17 is_stmt 0 view .LVU3463
 11098 1aea 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11099 1aee 23F01803 		bic	r3, r3, #24
 11100 1af2 88F81630 		strb	r3, [r8, #22]
1425:src/keys.c    **** 
 11101              		.loc 1 1425 3 is_stmt 1 view .LVU3464
1425:src/keys.c    **** 
 11102              		.loc 1 1425 10 is_stmt 0 view .LVU3465
 11103 1af6 4FF0330B 		mov	fp, #51
 11104 1afa FEF7D5BA 		b	.L565
 11105              	.LVL863:
 11106              	.L748:
1405:src/keys.c    **** 			init_arg(RARG_ARCL);
 11107              		.loc 1 1405 3 is_stmt 1 view .LVU3466
1405:src/keys.c    **** 			init_arg(RARG_ARCL);
 11108              		.loc 1 1405 6 is_stmt 0 view .LVU3467
 11109 1afe 0128     		cmp	r0, #1
 11110 1b00 42D0     		beq	.L1146
1408:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11111              		.loc 1 1408 10 is_stmt 1 view .LVU3468
1408:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11112              		.loc 1 1408 13 is_stmt 0 view .LVU3469
 11113 1b02 0328     		cmp	r0, #3
 11114 1b04 7FF432AC 		bne	.L740
1409:src/keys.c    **** 			return STATE_UNFINISHED;
 11115              		.loc 1 1409 4 is_stmt 1 view .LVU3470
 11116              	.LVL864:
 11117              	.LBB769:
 11118              	.LBI769:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11119              		.loc 1 501 13 view .LVU3471
 11120              	.LBB770:
 502:src/keys.c    **** 		return;
 11121              		.loc 1 502 2 view .LVU3472
 502:src/keys.c    **** 		return;
 11122              		.loc 1 502 6 is_stmt 0 view .LVU3473
 11123 1b08 FFF7FEFF 		bl	is_bad_cmdline
 11124              	.LVL865:
 502:src/keys.c    **** 		return;
 11125              		.loc 1 502 5 view .LVU3474
 11126 1b0c 0346     		mov	r3, r0
 11127 1b0e 0028     		cmp	r0, #0
 11128 1b10 7EF459AE 		bne	.L1060
 11129 1b14 7320     		movs	r0, #115
 11130              	.LBE770:
 11131              	.LBE769:
 11132              	.LBE785:
 11133              	.LBE1150:
 11134              	.LBE1219:
 11135              	.LBE1276:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 11136              		.loc 1 2929 7 view .LVU3475
ARM GAS  /tmp/ccQmaUTi.s 			page 309


 11137 1b16 1F46     		mov	r7, r3
 11138              	.LBB1277:
 11139              	.LBB1220:
 11140              	.LBB1151:
 11141              	.LBB786:
1410:src/keys.c    **** 		}
 11142              		.loc 1 1410 11 view .LVU3476
 11143 1b18 4FF0330B 		mov	fp, #51
 11144              	.LBB772:
 11145              	.LBB771:
 11146 1b1c FFF7FEFF 		bl	init_arg.part.0
 11147              	.LVL866:
 11148 1b20 FEF7C2BA 		b	.L565
 11149              	.LVL867:
 11150              	.L749:
1410:src/keys.c    **** 		}
 11151              		.loc 1 1410 11 view .LVU3477
 11152              	.LBE771:
 11153              	.LBE772:
1398:src/keys.c    **** 			init_arg(RARG_ASTO);
 11154              		.loc 1 1398 3 is_stmt 1 view .LVU3478
1398:src/keys.c    **** 			init_arg(RARG_ASTO);
 11155              		.loc 1 1398 6 is_stmt 0 view .LVU3479
 11156 1b24 0128     		cmp	r0, #1
 11157 1b26 7FF421AC 		bne	.L740
1399:src/keys.c    **** 			return STATE_UNFINISHED;
 11158              		.loc 1 1399 4 is_stmt 1 view .LVU3480
 11159              	.LVL868:
 11160              	.LBB773:
 11161              	.LBI773:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11162              		.loc 1 501 13 view .LVU3481
 11163              	.LBB774:
 502:src/keys.c    **** 		return;
 11164              		.loc 1 502 2 view .LVU3482
 502:src/keys.c    **** 		return;
 11165              		.loc 1 502 6 is_stmt 0 view .LVU3483
 11166 1b2a FFF7FEFF 		bl	is_bad_cmdline
 11167              	.LVL869:
 502:src/keys.c    **** 		return;
 11168              		.loc 1 502 5 view .LVU3484
 11169 1b2e 0346     		mov	r3, r0
 11170 1b30 0028     		cmp	r0, #0
 11171 1b32 7EF448AE 		bne	.L1060
 11172 1b36 2620     		movs	r0, #38
 11173              	.LBE774:
 11174              	.LBE773:
 11175              	.LBE786:
 11176              	.LBE1151:
 11177              	.LBE1220:
 11178              	.LBE1277:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 11179              		.loc 1 2929 7 view .LVU3485
 11180 1b38 1F46     		mov	r7, r3
 11181              	.LBB1278:
 11182              	.LBB1221:
 11183              	.LBB1152:
ARM GAS  /tmp/ccQmaUTi.s 			page 310


 11184              	.LBB787:
1400:src/keys.c    **** 		}
 11185              		.loc 1 1400 11 view .LVU3486
 11186 1b3a 4FF0330B 		mov	fp, #51
 11187              	.LBB776:
 11188              	.LBB775:
 11189 1b3e FFF7FEFF 		bl	init_arg.part.0
 11190              	.LVL870:
 11191 1b42 FEF7B1BA 		b	.L565
 11192              	.LVL871:
 11193              	.L745:
1400:src/keys.c    **** 		}
 11194              		.loc 1 1400 11 view .LVU3487
 11195              	.LBE775:
 11196              	.LBE776:
1435:src/keys.c    **** 			if ( State2.runmode ) {
 11197              		.loc 1 1435 3 is_stmt 1 view .LVU3488
1435:src/keys.c    **** 			if ( State2.runmode ) {
 11198              		.loc 1 1435 6 is_stmt 0 view .LVU3489
 11199 1b46 0028     		cmp	r0, #0
 11200 1b48 7FF410AC 		bne	.L740
1436:src/keys.c    **** 				// Alpha scroll left
 11201              		.loc 1 1436 4 is_stmt 1 view .LVU3490
1436:src/keys.c    **** 				// Alpha scroll left
 11202              		.loc 1 1436 7 is_stmt 0 view .LVU3491
 11203 1b4c 5C06     		lsls	r4, r3, #25
 11204 1b4e 7EF544AD 		bpl	.L755
1438:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
 11205              		.loc 1 1438 5 is_stmt 1 view .LVU3492
 11206              	.LVL872:
1439:src/keys.c    **** 				return STATE_UNFINISHED;
 11207              		.loc 1 1439 5 view .LVU3493
1439:src/keys.c    **** 				return STATE_UNFINISHED;
 11208              		.loc 1 1439 32 is_stmt 0 view .LVU3494
 11209 1b52 FFF7FEFF 		bl	alen
 11210              	.LVL873:
1439:src/keys.c    **** 				return STATE_UNFINISHED;
 11211              		.loc 1 1439 39 view .LVU3495
 11212 1b56 0530     		adds	r0, r0, #5
1439:src/keys.c    **** 				return STATE_UNFINISHED;
 11213              		.loc 1 1439 22 view .LVU3496
 11214 1b58 0B28     		cmp	r0, #11
 11215 1b5a 94BF     		ite	ls
 11216 1b5c 0023     		movls	r3, #0
 11217 1b5e 0123     		movhi	r3, #1
 11218 1b60 88F80D30 		strb	r3, [r8, #13]
1440:src/keys.c    **** 			}
 11219              		.loc 1 1440 5 is_stmt 1 view .LVU3497
1440:src/keys.c    **** 			}
 11220              		.loc 1 1440 12 is_stmt 0 view .LVU3498
 11221 1b64 4FF0330B 		mov	fp, #51
 11222 1b68 FEF79EBA 		b	.L565
 11223              	.LVL874:
 11224              	.L743:
1459:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11225              		.loc 1 1459 3 is_stmt 1 view .LVU3499
1459:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
ARM GAS  /tmp/ccQmaUTi.s 			page 311


 11226              		.loc 1 1459 6 is_stmt 0 view .LVU3500
 11227 1b6c 0128     		cmp	r0, #1
 11228 1b6e 3FF4CBAE 		beq	.L1062
1461:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11229              		.loc 1 1461 8 is_stmt 1 view .LVU3501
1461:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11230              		.loc 1 1461 11 is_stmt 0 view .LVU3502
 11231 1b72 0328     		cmp	r0, #3
 11232 1b74 20D0     		beq	.L758
1463:src/keys.c    **** 			init_state();
 11233              		.loc 1 1463 8 is_stmt 1 view .LVU3503
1463:src/keys.c    **** 			init_state();
 11234              		.loc 1 1463 11 is_stmt 0 view .LVU3504
 11235 1b76 0028     		cmp	r0, #0
 11236 1b78 7EF425AE 		bne	.L1060
1464:src/keys.c    **** 		return STATE_UNFINISHED;
 11237              		.loc 1 1464 4 is_stmt 1 view .LVU3505
 11238 1b7c FFF7FEFF 		bl	init_state
 11239              	.LVL875:
1465:src/keys.c    **** 
 11240              		.loc 1 1465 10 is_stmt 0 view .LVU3506
 11241 1b80 4FF0330B 		mov	fp, #51
 11242 1b84 FEF790BA 		b	.L565
 11243              	.LVL876:
 11244              	.L1146:
1406:src/keys.c    **** 			return STATE_UNFINISHED;
 11245              		.loc 1 1406 4 is_stmt 1 view .LVU3507
 11246              	.LBB777:
 11247              	.LBI777:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11248              		.loc 1 501 13 view .LVU3508
 11249              	.LBB778:
 502:src/keys.c    **** 		return;
 11250              		.loc 1 502 2 view .LVU3509
 502:src/keys.c    **** 		return;
 11251              		.loc 1 502 6 is_stmt 0 view .LVU3510
 11252 1b88 FFF7FEFF 		bl	is_bad_cmdline
 11253              	.LVL877:
 502:src/keys.c    **** 		return;
 11254              		.loc 1 502 5 view .LVU3511
 11255 1b8c 0346     		mov	r3, r0
 11256 1b8e 0028     		cmp	r0, #0
 11257 1b90 7EF419AE 		bne	.L1060
 11258 1b94 2720     		movs	r0, #39
 11259              	.LBE778:
 11260              	.LBE777:
 11261              	.LBE787:
 11262              	.LBE1152:
 11263              	.LBE1221:
 11264              	.LBE1278:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 11265              		.loc 1 2929 7 view .LVU3512
 11266 1b96 1F46     		mov	r7, r3
 11267              	.LBB1279:
 11268              	.LBB1222:
 11269              	.LBB1153:
 11270              	.LBB788:
ARM GAS  /tmp/ccQmaUTi.s 			page 312


1407:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11271              		.loc 1 1407 11 view .LVU3513
 11272 1b98 4FF0330B 		mov	fp, #51
 11273              	.LBB780:
 11274              	.LBB779:
 11275 1b9c FFF7FEFF 		bl	init_arg.part.0
 11276              	.LVL878:
 11277 1ba0 FEF782BA 		b	.L565
 11278              	.LVL879:
 11279              	.L885:
1407:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11280              		.loc 1 1407 11 view .LVU3514
 11281              	.LBE779:
 11282              	.LBE780:
 11283              	.LBE788:
 11284              	.LBE1153:
 11285              	.LBB1154:
 11286              	.LBB682:
 741:src/keys.c    **** 	    }
 11287              		.loc 1 741 15 view .LVU3515
 11288 1ba4 4FF0100B 		mov	fp, #16
 11289              	.LVL880:
 11290              	.L833:
 741:src/keys.c    **** 	    }
 11291              		.loc 1 741 15 view .LVU3516
 11292              	.LBE682:
 11293              	.LBE1154:
 11294              	.LBE1222:
 11295              	.LBE1279:
3122:src/keys.c    **** 	NonProgrammable = 0;
 11296              		.loc 1 3122 26 view .LVU3517
 11297 1ba8 114B     		ldr	r3, .L1161+4
 11298 1baa 1A68     		ldr	r2, [r3]
 11299 1bac 6AB1     		cbz	r2, .L1054
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11300              		.loc 1 3123 2 is_stmt 1 view .LVU3518
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11301              		.loc 1 3123 18 is_stmt 0 view .LVU3519
 11302 1bae 0022     		movs	r2, #0
 11303 1bb0 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11304              		.loc 1 3124 2 is_stmt 1 view .LVU3520
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11305              		.loc 1 3124 32 is_stmt 0 view .LVU3521
 11306 1bb2 5846     		mov	r0, fp
 11307 1bb4 FEF76BBD 		b	.L834
 11308              	.LVL881:
 11309              	.L758:
3122:src/keys.c    **** 	NonProgrammable = 0;
 11310              		.loc 1 3122 7 is_stmt 1 view .LVU3522
3122:src/keys.c    **** 	NonProgrammable = 0;
 11311              		.loc 1 3122 10 is_stmt 0 view .LVU3523
 11312 1bb8 5B06     		lsls	r3, r3, #25
 11313 1bba 09D5     		bpl	.L890
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11314              		.loc 1 3123 2 is_stmt 1 view .LVU3524
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccQmaUTi.s 			page 313


 11315              		.loc 1 3123 18 is_stmt 0 view .LVU3525
 11316 1bbc 0C4B     		ldr	r3, .L1161+4
 11317 1bbe 0022     		movs	r2, #0
 11318              	.LVL882:
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11319              		.loc 1 3123 18 view .LVU3526
 11320 1bc0 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11321              		.loc 1 3124 2 is_stmt 1 view .LVU3527
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11322              		.loc 1 3124 32 is_stmt 0 view .LVU3528
 11323 1bc2 4FF48170 		mov	r0, #258
 11324              	.LVL883:
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11325              		.loc 1 3124 32 view .LVU3529
 11326 1bc6 FEF789BC 		b	.L832
 11327              	.LVL884:
 11328              	.L1054:
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11329              		.loc 1 3124 32 view .LVU3530
 11330 1bca 5846     		mov	r0, fp
 11331 1bcc FEF793BE 		b	.L837
 11332              	.LVL885:
 11333              	.L890:
 11334              	.LBB1280:
 11335              	.LBB1223:
 11336              	.LBB1155:
 11337              	.LBB789:
1462:src/keys.c    **** 		else if (shift == SHIFT_N)
 11338              		.loc 1 1462 11 view .LVU3531
 11339 1bd0 4FF4817B 		mov	fp, #258
 11340              	.LVL886:
 11341              	.L831:
1462:src/keys.c    **** 		else if (shift == SHIFT_N)
 11342              		.loc 1 1462 11 view .LVU3532
 11343              	.LBE789:
 11344              	.LBE1155:
 11345              	.LBE1223:
 11346              	.LBE1280:
3122:src/keys.c    **** 	NonProgrammable = 0;
 11347              		.loc 1 3122 26 view .LVU3533
 11348 1bd4 064B     		ldr	r3, .L1161+4
 11349 1bd6 1A68     		ldr	r2, [r3]
 11350 1bd8 002A     		cmp	r2, #0
 11351 1bda F6D0     		beq	.L1054
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11352              		.loc 1 3123 2 is_stmt 1 view .LVU3534
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11353              		.loc 1 3123 18 is_stmt 0 view .LVU3535
 11354 1bdc 0022     		movs	r2, #0
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11355              		.loc 1 3124 32 view .LVU3536
 11356 1bde 5846     		mov	r0, fp
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11357              		.loc 1 3123 18 view .LVU3537
 11358 1be0 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/ccQmaUTi.s 			page 314


 11359              		.loc 1 3124 2 is_stmt 1 view .LVU3538
 11360 1be2 FEF77BBC 		b	.L832
 11361              	.LVL887:
 11362              	.L887:
 11363              	.LBB1281:
 11364              	.LBB1224:
 11365              	.LBB1156:
 11366              	.LBB683:
 757:src/keys.c    **** 	    }
 11367              		.loc 1 757 15 is_stmt 0 view .LVU3539
 11368 1be6 4FF0140B 		mov	fp, #20
 11369 1bea DDE7     		b	.L833
 11370              	.L1162:
 11371              		.align	2
 11372              	.L1161:
 11373 1bec 00000000 		.word	main_ram
 11374 1bf0 00000000 		.word	NonProgrammable
 11375 1bf4 00000000 		.word	.LANCHOR11
 11376              	.LVL888:
 11377              	.L1141:
 757:src/keys.c    **** 	    }
 11378              		.loc 1 757 15 view .LVU3540
 11379              	.LBE683:
 11380              	.LBE1156:
 11381              	.LBB1157:
 11382              	.LBB1033:
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11383              		.loc 1 981 4 is_stmt 1 view .LVU3541
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11384              		.loc 1 981 7 is_stmt 0 view .LVU3542
 11385 1bf8 BAF5704F 		cmp	r10, #61440
 11386 1bfc 06D1     		bne	.L787
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11387              		.loc 1 981 18 view .LVU3543
 11388 1bfe 584B     		ldr	r3, .L1163
 11389 1c00 1B68     		ldr	r3, [r3]
 11390 1c02 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11391              		.loc 1 981 8 view .LVU3544
 11392 1c06 DA07     		lsls	r2, r3, #31
 11393 1c08 3EF5DDAD 		bmi	.L1060
 11394              	.LVL889:
 11395              	.L787:
 982:src/keys.c    **** 			}
 11396              		.loc 1 982 5 is_stmt 1 view .LVU3545
 11397              	.LBB1023:
 11398              	.LBI1023:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11399              		.loc 1 501 13 view .LVU3546
 11400              	.LBB1024:
 502:src/keys.c    **** 		return;
 11401              		.loc 1 502 2 view .LVU3547
 502:src/keys.c    **** 		return;
 11402              		.loc 1 502 6 is_stmt 0 view .LVU3548
 11403 1c0c FFF7FEFF 		bl	is_bad_cmdline
 11404              	.LVL890:
 502:src/keys.c    **** 		return;
ARM GAS  /tmp/ccQmaUTi.s 			page 315


 11405              		.loc 1 502 5 view .LVU3549
 11406 1c10 0446     		mov	r4, r0
 11407 1c12 0028     		cmp	r0, #0
 11408 1c14 7EF4D7AD 		bne	.L1060
 11409 1c18 5FFA8BF0 		uxtb	r0, fp
 11410 1c1c FFF7FEFF 		bl	init_arg.part.0
 11411              	.LVL891:
 11412              	.LBE1024:
 11413              	.LBE1023:
 11414              	.LBE1033:
 11415              	.LBE1157:
 11416              	.LBE1224:
 11417              	.LBE1281:
2929:src/keys.c    ****   if (was_paused && Pause == 0) {
 11418              		.loc 1 2929 7 view .LVU3550
 11419 1c20 2746     		mov	r7, r4
 11420              	.LBB1282:
 11421              	.LBB1225:
 11422              	.LBB1158:
 11423              	.LBB1034:
 984:src/keys.c    **** 		}
 11424              		.loc 1 984 11 view .LVU3551
 11425 1c22 4FF0330B 		mov	fp, #51
 11426              	.LVL892:
 984:src/keys.c    **** 		}
 11427              		.loc 1 984 11 view .LVU3552
 11428 1c26 FEF73FBA 		b	.L565
 11429              	.LVL893:
 11430              	.L629:
 984:src/keys.c    **** 		}
 11431              		.loc 1 984 11 view .LVU3553
 11432              	.LBE1034:
 11433              	.LBE1158:
 11434              	.LBB1159:
 11435              	.LBB863:
1911:src/keys.c    **** 		// Special 1
 11436              		.loc 1 1911 7 is_stmt 1 view .LVU3554
1911:src/keys.c    **** 		// Special 1
 11437              		.loc 1 1911 10 is_stmt 0 view .LVU3555
 11438 1c2a 0128     		cmp	r0, #1
 11439 1c2c 7FF42CA8 		bne	.L631
1913:src/keys.c    **** 	}
 11440              		.loc 1 1913 3 is_stmt 1 view .LVU3556
1913:src/keys.c    **** 	}
 11441              		.loc 1 1913 18 is_stmt 0 view .LVU3557
 11442 1c30 BEF1000F 		cmp	lr, #0
 11443 1c34 14BF     		ite	ne
 11444 1c36 2723     		movne	r3, #39
 11445 1c38 1E23     		moveq	r3, #30
1913:src/keys.c    **** 	}
 11446              		.loc 1 1913 47 view .LVU3558
 11447 1c3a 9B44     		add	fp, fp, r3
 11448              	.LVL894:
1913:src/keys.c    **** 	}
 11449              		.loc 1 1913 47 view .LVU3559
 11450 1c3c FEF7A8BC 		b	.L594
 11451              	.LVL895:
ARM GAS  /tmp/ccQmaUTi.s 			page 316


 11452              	.L746:
1913:src/keys.c    **** 	}
 11453              		.loc 1 1913 47 view .LVU3560
 11454              	.LBE863:
 11455              	.LBE1159:
 11456              	.LBB1160:
 11457              	.LBB790:
1428:src/keys.c    **** 			return STATE_BACKSPACE;
 11458              		.loc 1 1428 3 is_stmt 1 view .LVU3561
1428:src/keys.c    **** 			return STATE_BACKSPACE;
 11459              		.loc 1 1428 6 is_stmt 0 view .LVU3562
 11460 1c40 0028     		cmp	r0, #0
 11461 1c42 3EF4E1AC 		beq	.L752
 11462              	.L753:
1430:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11463              		.loc 1 1430 3 is_stmt 1 view .LVU3563
1430:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11464              		.loc 1 1430 6 is_stmt 0 view .LVU3564
 11465 1c46 0328     		cmp	r0, #3
 11466 1c48 7FF490AB 		bne	.L740
 11467              	.LVL896:
1430:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11468              		.loc 1 1430 6 view .LVU3565
 11469              	.LBE790:
 11470              	.LBE1160:
 11471              	.LBE1225:
 11472              	.LBE1282:
3122:src/keys.c    **** 	NonProgrammable = 0;
 11473              		.loc 1 3122 7 is_stmt 1 view .LVU3566
3122:src/keys.c    **** 	NonProgrammable = 0;
 11474              		.loc 1 3122 10 is_stmt 0 view .LVU3567
 11475 1c4c 5A06     		lsls	r2, r3, #25
 11476              	.LVL897:
3122:src/keys.c    **** 	NonProgrammable = 0;
 11477              		.loc 1 3122 10 view .LVU3568
 11478 1c4e 1CD5     		bpl	.L889
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11479              		.loc 1 3123 2 is_stmt 1 view .LVU3569
3123:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11480              		.loc 1 3123 18 is_stmt 0 view .LVU3570
 11481 1c50 444B     		ldr	r3, .L1163+4
 11482 1c52 0022     		movs	r2, #0
 11483 1c54 1A60     		str	r2, [r3]
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11484              		.loc 1 3124 2 is_stmt 1 view .LVU3571
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11485              		.loc 1 3124 32 is_stmt 0 view .LVU3572
 11486 1c56 4FF4BA70 		mov	r0, #372
 11487              	.LVL898:
3124:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11488              		.loc 1 3124 32 view .LVU3573
 11489 1c5a FEF73FBC 		b	.L832
 11490              	.LVL899:
 11491              	.L1142:
 11492              	.LBB1283:
 11493              	.LBB1226:
 11494              	.LBB1161:
ARM GAS  /tmp/ccQmaUTi.s 			page 317


 11495              	.LBB1035:
 914:src/keys.c    **** 	    State2.dot = op;
 11496              		.loc 1 914 6 is_stmt 1 view .LVU3574
 915:src/keys.c    **** 	    // State2.cmplx = 0;
 11497              		.loc 1 915 6 view .LVU3575
 914:src/keys.c    **** 	    State2.dot = op;
 11498              		.loc 1 914 17 is_stmt 0 view .LVU3576
 11499 1c5e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 11500 1c62 0BF00103 		and	r3, fp, #1
 11501              	.LVL900:
 914:src/keys.c    **** 	    State2.dot = op;
 11502              		.loc 1 914 17 view .LVU3577
 11503 1c66 9B01     		lsls	r3, r3, #6
 11504 1c68 43F02003 		orr	r3, r3, #32
 11505 1c6c 22F06002 		bic	r2, r2, #96
 11506 1c70 1343     		orrs	r3, r3, r2
 11507 1c72 88F81530 		strb	r3, [r8, #21]
 917:src/keys.c    **** 	  }
 11508              		.loc 1 917 6 is_stmt 1 view .LVU3578
 917:src/keys.c    **** 	  }
 11509              		.loc 1 917 13 is_stmt 0 view .LVU3579
 11510 1c76 4FF0330B 		mov	fp, #51
 11511              	.LVL901:
 917:src/keys.c    **** 	  }
 11512              		.loc 1 917 13 view .LVU3580
 11513 1c7a FEF715BA 		b	.L565
 11514              	.LVL902:
 11515              	.L882:
 917:src/keys.c    **** 	  }
 11516              		.loc 1 917 13 view .LVU3581
 11517              	.LBE1035:
 11518              	.LBE1161:
 11519              	.LBB1162:
 11520              	.LBB791:
1469:src/keys.c    **** 		break;
 11521              		.loc 1 1469 11 view .LVU3582
 11522 1c7e 40F23B1B 		movw	fp, #315
 11523 1c82 A7E7     		b	.L831
 11524              	.LVL903:
 11525              	.L883:
1469:src/keys.c    **** 		break;
 11526              		.loc 1 1469 11 view .LVU3583
 11527              	.LBE791:
 11528              	.LBE1162:
 11529              	.LBB1163:
 11530              	.LBB1036:
 953:src/keys.c    **** 	  }
 11531              		.loc 1 953 13 view .LVU3584
 11532 1c84 4FF0120B 		mov	fp, #18
 11533 1c88 8EE7     		b	.L833
 11534              	.LVL904:
 11535              	.L889:
 953:src/keys.c    **** 	  }
 11536              		.loc 1 953 13 view .LVU3585
 11537              	.LBE1036:
 11538              	.LBE1163:
 11539              	.LBB1164:
ARM GAS  /tmp/ccQmaUTi.s 			page 318


 11540              	.LBB792:
1431:src/keys.c    **** 		break;
 11541              		.loc 1 1431 11 view .LVU3586
 11542 1c8a 4FF4BA7B 		mov	fp, #372
 11543 1c8e A1E7     		b	.L831
 11544              	.LVL905:
 11545              	.L1136:
1431:src/keys.c    **** 		break;
 11546              		.loc 1 1431 11 view .LVU3587
 11547              	.LBE792:
 11548              	.LBE1164:
 11549              	.LBB1165:
 11550              	.LBB1082:
1078:src/keys.c    **** 			set_pc(0);
 11551              		.loc 1 1078 43 view .LVU3588
 11552 1c90 B3F8EE37 		ldrh	r3, [r3, #2030]
 11553 1c94 012B     		cmp	r3, #1
 11554 1c96 7FF4B9AB 		bne	.L792
1079:src/keys.c    **** 		break;
 11555              		.loc 1 1079 4 is_stmt 1 view .LVU3589
 11556 1c9a FFF7FEFF 		bl	set_pc
 11557              	.LVL906:
 11558 1c9e FFF7B5BB 		b	.L792
 11559              	.LVL907:
 11560              	.L1106:
1079:src/keys.c    **** 		break;
 11561              		.loc 1 1079 4 is_stmt 0 view .LVU3590
 11562              	.LBE1082:
 11563              	.LBE1165:
 11564              	.LBB1166:
 11565              	.LBB735:
 11566              	.LBB729:
 11567              	.LBB720:
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 11568              		.loc 1 437 8 is_stmt 1 view .LVU3591
 438:src/keys.c    **** 	}
 11569              		.loc 1 438 10 is_stmt 0 view .LVU3592
 11570 1ca2 0229     		cmp	r1, #2
 11571 1ca4 08BF     		it	eq
 11572 1ca6 0521     		moveq	r1, #5
 11573              	.LVL908:
 438:src/keys.c    **** 	}
 11574              		.loc 1 438 10 view .LVU3593
 11575 1ca8 FEF742BC 		b	.L679
 11576              	.LVL909:
 11577              	.L886:
 438:src/keys.c    **** 	}
 11578              		.loc 1 438 10 view .LVU3594
 11579              	.LBE720:
 11580              	.LBE729:
 11581              	.LBE735:
 11582              	.LBE1166:
 11583              	.LBB1167:
 11584              	.LBB684:
 749:src/keys.c    **** 	    }
 11585              		.loc 1 749 15 view .LVU3595
 11586 1cac 4FF0110B 		mov	fp, #17
ARM GAS  /tmp/ccQmaUTi.s 			page 319


 11587 1cb0 7AE7     		b	.L833
 11588              	.LVL910:
 11589              	.L888:
 733:src/keys.c    **** 	    }
 11590              		.loc 1 733 15 view .LVU3596
 11591 1cb2 4FF00F0B 		mov	fp, #15
 11592 1cb6 77E7     		b	.L833
 11593              	.LVL911:
 11594              	.L1145:
 733:src/keys.c    **** 	    }
 11595              		.loc 1 733 15 view .LVU3597
 11596              	.LBE684:
 11597              	.LBE1167:
 11598              	.LBB1168:
 11599              	.LBB793:
1418:src/keys.c    **** 			State2.numdigit = 0;
 11600              		.loc 1 1418 4 is_stmt 1 view .LVU3598
1418:src/keys.c    **** 			State2.numdigit = 0;
 11601              		.loc 1 1418 17 is_stmt 0 view .LVU3599
 11602 1cb8 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1419:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11603              		.loc 1 1419 20 view .LVU3600
 11604 1cbc 88F80B20 		strb	r2, [r8, #11]
1418:src/keys.c    **** 			State2.numdigit = 0;
 11605              		.loc 1 1418 17 view .LVU3601
 11606 1cc0 43F00803 		orr	r3, r3, #8
1420:src/keys.c    **** 			return STATE_UNFINISHED;
 11607              		.loc 1 1420 12 view .LVU3602
 11608 1cc4 0A22     		movs	r2, #10
1418:src/keys.c    **** 			State2.numdigit = 0;
 11609              		.loc 1 1418 17 view .LVU3603
 11610 1cc6 88F81530 		strb	r3, [r8, #21]
1419:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11611              		.loc 1 1419 4 is_stmt 1 view .LVU3604
1420:src/keys.c    **** 			return STATE_UNFINISHED;
 11612              		.loc 1 1420 4 view .LVU3605
1420:src/keys.c    **** 			return STATE_UNFINISHED;
 11613              		.loc 1 1420 12 is_stmt 0 view .LVU3606
 11614 1cca 88F81F20 		strb	r2, [r8, #31]
1421:src/keys.c    **** 		}
 11615              		.loc 1 1421 4 is_stmt 1 view .LVU3607
1421:src/keys.c    **** 		}
 11616              		.loc 1 1421 11 is_stmt 0 view .LVU3608
 11617 1cce 4FF0330B 		mov	fp, #51
 11618 1cd2 FEF7E9B9 		b	.L565
 11619              	.LVL912:
 11620              	.L1144:
1421:src/keys.c    **** 		}
 11621              		.loc 1 1421 11 view .LVU3609
 11622              	.LBE793:
 11623              	.LBE1168:
 11624              	.LBB1169:
 11625              	.LBB994:
2547:src/keys.c    **** 		State2.digval = pc;
 11626              		.loc 1 2547 4 is_stmt 1 view .LVU3610
2547:src/keys.c    **** 		State2.digval = pc;
 11627              		.loc 1 2547 9 is_stmt 0 view .LVU3611
ARM GAS  /tmp/ccQmaUTi.s 			page 320


 11628 1cd6 2046     		mov	r0, r4
 11629 1cd8 0121     		movs	r1, #1
 11630 1cda FFF7FEFF 		bl	advance_to_next_label
 11631              	.LVL913:
 11632 1cde 0446     		mov	r4, r0
 11633              	.LVL914:
2547:src/keys.c    **** 		State2.digval = pc;
 11634              		.loc 1 2547 9 view .LVU3612
 11635 1ce0 D6E6     		b	.L689
 11636              	.LVL915:
 11637              	.L1143:
2547:src/keys.c    **** 		State2.digval = pc;
 11638              		.loc 1 2547 9 view .LVU3613
 11639              	.LBE994:
 11640              	.LBE1169:
 11641              	.LBB1170:
 11642              	.LBB1037:
 933:src/keys.c    **** 		}
 11643              		.loc 1 933 4 is_stmt 1 view .LVU3614
 933:src/keys.c    **** 		}
 11644              		.loc 1 933 34 is_stmt 0 view .LVU3615
 11645 1ce2 214B     		ldr	r3, .L1163+8
 11646              	.LVL916:
 933:src/keys.c    **** 		}
 11647              		.loc 1 933 11 view .LVU3616
 11648 1ce4 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11649 1ce8 FFF7FEFF 		bl	check_f_key
 11650              	.LVL917:
 933:src/keys.c    **** 		}
 11651              		.loc 1 933 11 view .LVU3617
 11652 1cec 8346     		mov	fp, r0
 11653              	.LVL918:
 933:src/keys.c    **** 		}
 11654              		.loc 1 933 11 view .LVU3618
 11655 1cee FEF74FBC 		b	.L594
 11656              	.LVL919:
 11657              	.L723:
 933:src/keys.c    **** 		}
 11658              		.loc 1 933 11 view .LVU3619
 11659              	.LBE1037:
 11660              	.LBE1170:
 11661              	.LBB1171:
 11662              	.LBB826:
2700:src/keys.c    **** 		goto reset_window;
 11663              		.loc 1 2700 4 is_stmt 1 view .LVU3620
2700:src/keys.c    **** 		goto reset_window;
 11664              		.loc 1 2700 24 is_stmt 0 view .LVU3621
 11665 1cf2 09F1FF39 		add	r9, r9, #-1
 11666              	.LVL920:
2700:src/keys.c    **** 		goto reset_window;
 11667              		.loc 1 2700 18 view .LVU3622
 11668 1cf6 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11669 1cfa FEF75EBD 		b	.L715
 11670              	.LVL921:
 11671              	.L1109:
2696:src/keys.c    **** 			--State2.digval;
 11672              		.loc 1 2696 5 is_stmt 1 view .LVU3623
ARM GAS  /tmp/ccQmaUTi.s 			page 321


2696:src/keys.c    **** 			--State2.digval;
 11673              		.loc 1 2696 21 is_stmt 0 view .LVU3624
 11674 1cfe FFF7FEFF 		bl	global_regs
 11675              	.LVL922:
2696:src/keys.c    **** 			--State2.digval;
 11676              		.loc 1 2696 19 view .LVU3625
 11677 1d02 A8F80800 		strh	r0, [r8, #8]	@ movhi
 11678 1d06 FEF753BD 		b	.L724
 11679              	.LVL923:
 11680              	.L726:
2710:src/keys.c    **** 		goto reset_window;
 11681              		.loc 1 2710 4 is_stmt 1 view .LVU3626
2710:src/keys.c    **** 		goto reset_window;
 11682              		.loc 1 2710 18 is_stmt 0 view .LVU3627
 11683 1d0a 0023     		movs	r3, #0
 11684 1d0c A8F80830 		strh	r3, [r8, #8]	@ movhi
 11685 1d10 FEF753BD 		b	.L715
 11686              	.LVL924:
 11687              	.L1135:
2727:src/keys.c    **** 			goto reset_window;
 11688              		.loc 1 2727 4 is_stmt 1 view .LVU3628
2727:src/keys.c    **** 			goto reset_window;
 11689              		.loc 1 2727 25 is_stmt 0 view .LVU3629
 11690 1d14 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11691 1d18 43F00403 		orr	r3, r3, #4
 11692 1d1c 88F81630 		strb	r3, [r8, #22]
2728:src/keys.c    **** 		}
 11693              		.loc 1 2728 4 is_stmt 1 view .LVU3630
 11694 1d20 FEF74BBD 		b	.L715
 11695              	.LVL925:
 11696              	.L765:
2728:src/keys.c    **** 		}
 11697              		.loc 1 2728 4 is_stmt 0 view .LVU3631
 11698 1d24 0093     		str	r3, [sp]
 11699              	.LBE826:
 11700              	.LBE1171:
 11701              	.LBB1172:
 11702              	.LBB1120:
1177:src/keys.c    **** 			break;
 11703              		.loc 1 1177 4 is_stmt 1 view .LVU3632
 11704              	.LVL926:
 11705              	.LBB1113:
 11706              	.LBI1113:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11707              		.loc 1 92 20 view .LVU3633
 11708              	.LBB1114:
  93:src/keys.c    **** 	State2.shifts = shift;
 11709              		.loc 1 93 2 view .LVU3634
 11710              	.LBB1115:
 11711              	.LBI1115:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11712              		.loc 1 84 13 view .LVU3635
 11713              	.LBB1116:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11714              		.loc 1 85 2 view .LVU3636
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11715              		.loc 1 85 18 is_stmt 0 view .LVU3637
ARM GAS  /tmp/ccQmaUTi.s 			page 322


 11716 1d26 FFF7FEFF 		bl	shift_down
 11717              	.LVL927:
  86:src/keys.c    **** }
 11718              		.loc 1 86 2 is_stmt 1 view .LVU3638
 11719              	.LBE1116:
 11720              	.LBE1115:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11721              		.loc 1 94 2 view .LVU3639
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11722              		.loc 1 94 16 is_stmt 0 view .LVU3640
 11723 1d2a 009B     		ldr	r3, [sp]
 11724 1d2c 88F81030 		strb	r3, [r8, #16]
  95:src/keys.c    **** 	return r;
 11725              		.loc 1 95 2 is_stmt 1 view .LVU3641
  95:src/keys.c    **** 	return r;
 11726              		.loc 1 95 19 is_stmt 0 view .LVU3642
 11727 1d30 88F80DA0 		strb	r10, [r8, #13]
  96:src/keys.c    **** }
 11728              		.loc 1 96 2 is_stmt 1 view .LVU3643
  96:src/keys.c    **** }
 11729              		.loc 1 96 9 is_stmt 0 view .LVU3644
 11730 1d34 FEF72CBC 		b	.L594
 11731              	.LVL928:
 11732              	.L764:
  96:src/keys.c    **** }
 11733              		.loc 1 96 9 view .LVU3645
 11734              	.LBE1114:
 11735              	.LBE1113:
1191:src/keys.c    **** 			break;
 11736              		.loc 1 1191 4 is_stmt 1 view .LVU3646
 11737 1d38 FFF7FEFF 		bl	init_state
 11738              	.LVL929:
1192:src/keys.c    **** 
 11739              		.loc 1 1192 4 view .LVU3647
 11740 1d3c FEF728BC 		b	.L594
 11741              	.LVL930:
 11742              	.L1140:
1192:src/keys.c    **** 
 11743              		.loc 1 1192 4 is_stmt 0 view .LVU3648
 11744              	.LBE1120:
 11745              	.LBE1172:
 11746              	.LBB1173:
 11747              	.LBB1038:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11748              		.loc 1 972 4 is_stmt 1 view .LVU3649
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11749              		.loc 1 972 26 is_stmt 0 view .LVU3650
 11750 1d40 591E     		subs	r1, r3, #1
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11751              		.loc 1 972 17 view .LVU3651
 11752 1d42 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11753              		.loc 1 972 26 view .LVU3652
 11754 1d46 4B42     		rsbs	r3, r1, #0
 11755 1d48 4B41     		adcs	r3, r3, r1
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11756              		.loc 1 972 17 view .LVU3653
ARM GAS  /tmp/ccQmaUTi.s 			page 323


 11757 1d4a 63F3C712 		bfi	r2, r3, #7, #1
 11758 1d4e 88F81720 		strb	r2, [r8, #23]
 973:src/keys.c    **** 		}
 11759              		.loc 1 973 4 is_stmt 1 view .LVU3654
 973:src/keys.c    **** 		}
 11760              		.loc 1 973 11 is_stmt 0 view .LVU3655
 11761 1d52 4FF0330B 		mov	fp, #51
 11762              	.LVL931:
 973:src/keys.c    **** 		}
 11763              		.loc 1 973 11 view .LVU3656
 11764 1d56 FEF7A7B9 		b	.L565
 11765              	.LVL932:
 11766              	.L884:
 958:src/keys.c    **** 	  }
 11767              		.loc 1 958 13 view .LVU3657
 11768 1d5a 4FF0130B 		mov	fp, #19
 11769 1d5e 23E7     		b	.L833
 11770              	.L1164:
 11771              		.align	2
 11772              	.L1163:
 11773 1d60 00000000 		.word	main_ram
 11774 1d64 00000000 		.word	NonProgrammable
 11775 1d68 00000000 		.word	.LANCHOR20
 11776              	.LBE1038:
 11777              	.LBE1173:
 11778              	.LBE1226:
 11779              	.LBE1283:
 11780              		.cfi_endproc
 11781              	.LFE58:
 11783              		.section	.text.process_keycode_with_shift,"ax",%progbits
 11784              		.align	1
 11785              		.p2align 2,,3
 11786              		.global	process_keycode_with_shift
 11787              		.syntax unified
 11788              		.thumb
 11789              		.thumb_func
 11790              		.fpu fpv4-sp-d16
 11792              	process_keycode_with_shift:
 11793              	.LFB57:
2907:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11794              		.loc 1 2907 61 is_stmt 1 view -0
 11795              		.cfi_startproc
 11796              		@ args = 0, pretend = 0, frame = 8
 11797              		@ frame_needed = 0, uses_anonymous_args = 0
 11798 0000 30B5     		push	{r4, r5, lr}
 11799              		.cfi_def_cfa_offset 12
 11800              		.cfi_offset 4, -12
 11801              		.cfi_offset 5, -8
 11802              		.cfi_offset 14, -4
 11803 0002 83B0     		sub	sp, sp, #12
 11804              		.cfi_def_cfa_offset 24
2907:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11805              		.loc 1 2907 61 is_stmt 0 view .LVU3659
 11806 0004 02AB     		add	r3, sp, #8
 11807 0006 03E90300 		stmdb	r3, {r0, r1}
 11808 000a 019D     		ldr	r5, [sp, #4]
 11809 000c 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
ARM GAS  /tmp/ccQmaUTi.s 			page 324


 11810              	.LVL933:
2908:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11811              		.loc 1 2908 4 is_stmt 1 view .LVU3660
2908:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11812              		.loc 1 2908 7 is_stmt 0 view .LVU3661
 11813 0010 002D     		cmp	r5, #0
 11814 0012 05DB     		blt	.L1166
2908:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11815              		.loc 1 2908 29 is_stmt 1 discriminator 1 view .LVU3662
 11816              	.LVL934:
 11817              	.LBB1284:
 11818              	.LBI1284:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11819              		.loc 1 92 20 discriminator 1 view .LVU3663
 11820              	.LBB1285:
  93:src/keys.c    **** 	State2.shifts = shift;
 11821              		.loc 1 93 2 discriminator 1 view .LVU3664
 11822              	.LBB1286:
 11823              	.LBI1286:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11824              		.loc 1 84 13 discriminator 1 view .LVU3665
 11825              	.LBB1287:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11826              		.loc 1 85 2 discriminator 1 view .LVU3666
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11827              		.loc 1 85 18 is_stmt 0 discriminator 1 view .LVU3667
 11828 0014 FFF7FEFF 		bl	shift_down
 11829              	.LVL935:
  86:src/keys.c    **** }
 11830              		.loc 1 86 2 is_stmt 1 discriminator 1 view .LVU3668
 11831              	.LBE1287:
 11832              	.LBE1286:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11833              		.loc 1 94 2 discriminator 1 view .LVU3669
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11834              		.loc 1 94 16 is_stmt 0 discriminator 1 view .LVU3670
 11835 0018 164B     		ldr	r3, .L1173
  95:src/keys.c    **** 	return r;
 11836              		.loc 1 95 19 discriminator 1 view .LVU3671
 11837 001a 0022     		movs	r2, #0
 11838              	.LBE1285:
 11839              	.LBE1284:
2908:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11840              		.loc 1 2908 29 discriminator 1 view .LVU3672
 11841 001c 1D74     		strb	r5, [r3, #16]
 11842              	.LBB1289:
 11843              	.LBB1288:
  95:src/keys.c    **** 	return r;
 11844              		.loc 1 95 2 is_stmt 1 discriminator 1 view .LVU3673
  95:src/keys.c    **** 	return r;
 11845              		.loc 1 95 19 is_stmt 0 discriminator 1 view .LVU3674
 11846 001e 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 11847              		.loc 1 96 2 is_stmt 1 discriminator 1 view .LVU3675
 11848              	.LVL936:
 11849              	.L1166:
  96:src/keys.c    **** }
ARM GAS  /tmp/ccQmaUTi.s 			page 325


 11850              		.loc 1 96 2 is_stmt 0 discriminator 1 view .LVU3676
 11851              	.LBE1288:
 11852              	.LBE1289:
2909:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 11853              		.loc 1 2909 4 is_stmt 1 view .LVU3677
2909:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 11854              		.loc 1 2909 7 is_stmt 0 view .LVU3678
 11855 0020 2E2C     		cmp	r4, #46
 11856 0022 21D0     		beq	.L1165
2910:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 11857              		.loc 1 2910 4 is_stmt 1 view .LVU3679
2910:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 11858              		.loc 1 2910 7 is_stmt 0 view .LVU3680
 11859 0024 332C     		cmp	r4, #51
 11860 0026 05D0     		beq	.L1171
2919:src/keys.c    ****  }
 11861              		.loc 1 2919 4 is_stmt 1 view .LVU3681
 11862 0028 2046     		mov	r0, r4
2920:src/keys.c    ****  
 11863              		.loc 1 2920 2 is_stmt 0 view .LVU3682
 11864 002a 03B0     		add	sp, sp, #12
 11865              		.cfi_remember_state
 11866              		.cfi_def_cfa_offset 12
 11867              		@ sp needed
 11868 002c BDE83040 		pop	{r4, r5, lr}
 11869              		.cfi_restore 14
 11870              		.cfi_restore 5
 11871              		.cfi_restore 4
 11872              		.cfi_def_cfa_offset 0
 11873              	.LVL937:
2919:src/keys.c    ****  }
 11874              		.loc 1 2919 4 view .LVU3683
 11875 0030 FFF7FEBF 		b	process_keycode
 11876              	.LVL938:
 11877              	.L1171:
 11878              		.cfi_restore_state
2911:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11879              		.loc 1 2911 6 is_stmt 1 view .LVU3684
 11880 0034 104B     		ldr	r3, .L1173+4
 11881 0036 41F23010 		movw	r0, #4400
 11882 003a 9847     		blx	r3
 11883              	.LVL939:
2911:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11884              		.loc 1 2911 31 view .LVU3685
 11885 003c 0A20     		movs	r0, #10
 11886 003e 0F4B     		ldr	r3, .L1173+8
 11887 0040 9847     		blx	r3
 11888              	.LVL940:
2911:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11889              		.loc 1 2911 46 view .LVU3686
 11890 0042 0F4B     		ldr	r3, .L1173+12
 11891 0044 9847     		blx	r3
 11892              	.LVL941:
2912:src/keys.c    ****        // Was error just wait for confirmation
 11893              		.loc 1 2912 6 view .LVU3687
2912:src/keys.c    ****        // Was error just wait for confirmation
 11894              		.loc 1 2912 11 is_stmt 0 view .LVU3688
ARM GAS  /tmp/ccQmaUTi.s 			page 326


 11895 0046 0F4B     		ldr	r3, .L1173+16
 11896 0048 0120     		movs	r0, #1
 11897 004a 9847     		blx	r3
 11898              	.LVL942:
2912:src/keys.c    ****        // Was error just wait for confirmation
 11899              		.loc 1 2912 9 view .LVU3689
 11900 004c 0228     		cmp	r0, #2
 11901 004e 0DD0     		beq	.L1172
 11902              	.L1169:
2916:src/keys.c    ****      return;
 11903              		.loc 1 2916 6 is_stmt 1 view .LVU3690
 11904 0050 094B     		ldr	r3, .L1173+4
 11905 0052 42F26020 		movw	r0, #8800
 11906 0056 9847     		blx	r3
 11907              	.LVL943:
2916:src/keys.c    ****      return;
 11908              		.loc 1 2916 31 view .LVU3691
 11909 0058 084B     		ldr	r3, .L1173+8
 11910 005a 0A20     		movs	r0, #10
 11911 005c 9847     		blx	r3
 11912              	.LVL944:
2916:src/keys.c    ****      return;
 11913              		.loc 1 2916 46 view .LVU3692
 11914 005e 084B     		ldr	r3, .L1173+12
2920:src/keys.c    ****  
 11915              		.loc 1 2920 2 is_stmt 0 view .LVU3693
 11916 0060 03B0     		add	sp, sp, #12
 11917              		.cfi_remember_state
 11918              		.cfi_def_cfa_offset 12
 11919              		@ sp needed
 11920 0062 BDE83040 		pop	{r4, r5, lr}
 11921              		.cfi_restore 14
 11922              		.cfi_restore 5
 11923              		.cfi_restore 4
 11924              		.cfi_def_cfa_offset 0
 11925              	.LVL945:
2916:src/keys.c    ****      return;
 11926              		.loc 1 2916 46 view .LVU3694
 11927 0066 1847     		bx	r3	@ indirect register sibling call
 11928              	.LVL946:
 11929              	.L1165:
 11930              		.cfi_restore_state
2920:src/keys.c    ****  
 11931              		.loc 1 2920 2 view .LVU3695
 11932 0068 03B0     		add	sp, sp, #12
 11933              		.cfi_remember_state
 11934              		.cfi_def_cfa_offset 12
 11935              		@ sp needed
 11936 006a 30BD     		pop	{r4, r5, pc}
 11937              	.LVL947:
 11938              	.L1172:
 11939              		.cfi_restore_state
2914:src/keys.c    ****      }
 11940              		.loc 1 2914 8 is_stmt 1 view .LVU3696
 11941 006c 064B     		ldr	r3, .L1173+20
 11942 006e 9847     		blx	r3
 11943              	.LVL948:
ARM GAS  /tmp/ccQmaUTi.s 			page 327


 11944 0070 EEE7     		b	.L1169
 11945              	.L1174:
 11946 0072 00BF     		.align	2
 11947              	.L1173:
 11948 0074 00000000 		.word	StateWhileOn
 11949 0078 F5020008 		.word	134218485
 11950 007c 05040008 		.word	134218757
 11951 0080 F9020008 		.word	134218489
 11952 0084 79030008 		.word	134218617
 11953 0088 99030008 		.word	134218649
 11954              		.cfi_endproc
 11955              	.LFE57:
 11957              		.comm	NonProgrammable,4,4
 11958              		.comm	GoFast,4,4
 11959              		.comm	OpCodeDisplayPending,4,4
 11960              		.comm	OpCode,4,4
 11961              		.comm	WasDataEntry,4,4
 11962              		.section	.bss.was_paused.9650,"aw",%nobits
 11963              		.align	2
 11964              		.set	.LANCHOR12,. + 0
 11967              	was_paused.9650:
 11968 0000 00000000 		.space	4
 11969              		.section	.rodata.alpha_arrows,"a"
 11970              		.align	2
 11973              	alpha_arrows:
 11974 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 11974      03049F5E 
 11974      7F
 11975              		.section	.rodata.alpha_catalogue,"a"
 11976              		.align	2
 11979              	alpha_catalogue:
 11980 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 11980      9EAE0AA2 
 11980      7EB5AE6B 
 11980      AAEEBC
 11981 000f 284AB0   		.ascii	"(J\260"
 11982              		.section	.rodata.alpha_compares,"a"
 11983              		.align	2
 11986              	alpha_compares:
 11987 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 11987      0A3E5B5D 
 11987      7B7D
 11988              		.section	.rodata.alpha_letters,"a"
 11989              		.align	2
 11990              		.set	.LANCHOR3,. + 0
 11993              	alpha_letters:
 11994 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 11994      88C4C5C6 
 11994      C784C8C9 
 11994      CA
 11995 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 11995      CECFD0D1 
 11995      D2D3D415 
 11995      D5
 11996 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 11996      DADBDC01 
 11996      1902DD1A 
ARM GAS  /tmp/ccQmaUTi.s 			page 328


 11996      DE
 11997 0027 DF       		.ascii	"\337"
 11998              		.section	.rodata.alpha_letters_lower,"a"
 11999              		.align	2
 12000              		.set	.LANCHOR4,. + 0
 12003              	alpha_letters_lower:
 12004 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 12004      89E4E5E6 
 12004      E785E8E9 
 12004      EA
 12005 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 12005      EEEFF0F1 
 12005      F2F3F416 
 12005      F5
 12006 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 12006      FAFBFC01 
 12006      1902FD1A 
 12006      FE
 12007 0027 FF       		.ascii	"\377"
 12008              		.section	.rodata.alpha_subscripts,"a"
 12009              		.align	2
 12012              	alpha_subscripts:
 12013 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 12013      9A80D798 
 12013      BB1486BC 
 12013      F7
 12014 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 12014      BF818B9C 
 12014      8C999D90 
 12014      9B
 12015              		.section	.rodata.alpha_symbols,"a"
 12016              		.align	2
 12019              	alpha_symbols:
 12020 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 12020      222A405F 
 12020      7E25240C 
 12020      1E1F8EAE 
 12020      926023
 12021              		.section	.rodata.alphamap.9182,"a"
 12022              		.align	2
 12023              		.set	.LANCHOR9,. + 0
 12026              	alphamap.9182:
 12027 0000 41004100 		.ascii	"A\000A\000a\240"
 12027      61A0
 12028 0006 42004200 		.ascii	"B\000B\000b\241"
 12028      62A1
 12029 000c 43008200 		.ascii	"C\000\202\000c\242"
 12029      63A2
 12030 0012 44008300 		.ascii	"D\000\203\000d\243"
 12030      64A3
 12031 0018 450D4500 		.ascii	"E\015E\000e\244"
 12031      65A4
 12032 001e 46009400 		.ascii	"F\000\224\000f\264"
 12032      66B4
 12033 0024 47008200 		.ascii	"G\000\202\000g\242"
 12033      67A2
 12034 002a 48005800 		.ascii	"H\000X\000h\265"
ARM GAS  /tmp/ccQmaUTi.s 			page 329


 12034      68B5
 12035 0030 49004900 		.ascii	"I\000I\000i\250"
 12035      69A8
 12036 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 12036      6A00
 12037 003c 4B004B00 		.ascii	"K\000K\000k\251"
 12037      6BA9
 12038 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 12038      6CAA
 12039 0048 00004800 		.ascii	"\000\000H\000\000\246"
 12039      00A6
 12040 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 12040      6DAB
 12041 0054 4E084E95 		.ascii	"N\010N\225n\254"
 12041      6EAC
 12042 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 12042      6FB7
 12043 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 12043      0000
 12044 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 12044      0000
 12045 006c 50378F26 		.ascii	"P7\217&p\257"
 12045      70AF
 12046 0072 5138007C 		.ascii	"Q8\000|q\000"
 12046      7100
 12047 0078 5239520B 		.ascii	"R9R\013r\260"
 12047      72B0
 12048 007e 532F915C 		.ascii	"S/\221\\s\261"
 12048      73B1
 12049 0084 00000021 		.ascii	"\000\000\000!\000\000"
 12049      0000
 12050 008a 54345400 		.ascii	"T4T\000t\262"
 12050      74B2
 12051 0090 55350000 		.ascii	"U5\000\000u\000"
 12051      7500
 12052 0096 56360000 		.ascii	"V6\000\000v\000"
 12052      7600
 12053 009c 571C0000 		.ascii	"W\034\000\000w\000"
 12053      7700
 12054 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 12054      0000
 12055 00a8 58318D00 		.ascii	"X1\215\000x\255"
 12055      78AD
 12056 00ae 59325900 		.ascii	"Y2Y\000y\263"
 12056      79B3
 12057 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 12057      7AA5
 12058 00ba 2D282900 		.ascii	"-()\000\000\000"
 12058      0000
 12059 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 12059      0000
 12060 00c6 3A308720 		.ascii	":0\207 ;\247"
 12060      3BA7
 12061 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 12061      2EB6
 12062 00d2 3F002100 		.ascii	"?\000!\000\000\000"
 12062      0000
ARM GAS  /tmp/ccQmaUTi.s 			page 330


 12063 00d8 202B3D00 		.ascii	" +=\000\000\000"
 12063      0000
 12064 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 12064      0000
 12065              		.section	.rodata.amap.9173,"a"
 12066              		.align	2
 12067              		.set	.LANCHOR10,. + 0
 12070              	amap.9173:
 12071 0000 04       		.byte	4
 12072 0001 000D00   		.ascii	"\000\015\000"
 12073 0004 05       		.byte	5
 12074 0005 000E09   		.ascii	"\000\016\011"
 12075 0008 08       		.byte	8
 12076 0009 00000F   		.ascii	"\000\000\017"
 12077 000c 1F       		.byte	31
 12078 000d 00000C   		.ascii	"\000\000\014"
 12079 0010 21       		.byte	33
 12080 0011 00000A   		.ascii	"\000\000\012"
 12081 0014 26       		.byte	38
 12082 0015 00000B   		.ascii	"\000\000\013"
 12083              		.section	.rodata.catalogue,"a"
 12084              		.align	2
 12087              	catalogue:
 12088 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 12088      C15F57E3 
 12088      D8A23B58 
 12088      16BC7D44 
 12088      71010974 
 12089 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 12089      4F569D21 
 12089      489136D5 
 12089      B6695A66 
 12089      4B0E6F17 
 12090 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 12090      69256099 
 12090      76599460 
 12090      1AC6ECC3 
 12090      6B5B144B 
 12091 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
 12091      023ED1A3 
 12091      0B0F28DB 
 12091      2611B30D 
 12091      57
 12092 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 12092      D0942DAE 
 12092      2B1B75FC 
 12092      A027AB82 
 12092      A89F
 12093 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 12093      BAAEEBCA 
 12093      D8A12AD9 
 12093      94919D
 12094 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
 12094      B05F1007 
 12094      15A26FD6 
 12094      D5A9A1
 12095              		.section	.rodata.catalogue_sizes.9448,"a"
ARM GAS  /tmp/ccQmaUTi.s 			page 331


 12096              		.align	2
 12097              		.set	.LANCHOR2,. + 0
 12100              	catalogue_sizes.9448:
 12101 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
 12101      363C437E 
 12101      25340E13 
 12101      0A09281A 
 12101      4C4C580E 
 12102              		.section	.rodata.catalogues.9456,"a"
 12103              		.align	2
 12104              		.set	.LANCHOR6,. + 0
 12107              	catalogues.9456:
 12108 0000 00000000 		.word	0
 12109 0004 00000000 		.word	catalogue
 12110 0008 00000000 		.word	cplx_catalogue
 12111 000c 00000000 		.word	stats_catalogue
 12112 0010 00000000 		.word	prob_catalogue
 12113 0014 00000000 		.word	int_catalogue
 12114 0018 00000000 		.word	prog_catalogue
 12115 001c 00000000 		.word	program_xfcn
 12116 0020 00000000 		.word	test_catalogue
 12117 0024 00000000 		.word	mode_catalogue
 12118 0028 00000000 		.word	alpha_catalogue
 12119 002c 00000000 		.word	alpha_symbols
 12120 0030 00000000 		.word	alpha_compares
 12121 0034 00000000 		.word	alpha_arrows
 12122 0038 00000000 		.word	alpha_letters
 12123 003c 00000000 		.word	alpha_subscripts
 12124 0040 00000000 		.word	0
 12125 0044 00000000 		.word	0
 12126 0048 00000000 		.word	0
 12127 004c 00000000 		.word	sums_catalogue
 12128 0050 00000000 		.word	matrix_catalogue
 12129              		.section	.rodata.cmap.9172,"a"
 12130              		.align	2
 12131              		.set	.LANCHOR11,. + 0
 12134              	cmap.9172:
 12135 0000 04       		.byte	4
 12136 0001 120012   		.ascii	"\022\000\022"
 12137 0004 05       		.byte	5
 12138 0005 090909   		.ascii	"\011\011\011"
 12139 0008 06       		.byte	6
 12140 0009 151515   		.ascii	"\025\025\025"
 12141 000c 0C       		.byte	12
 12142 000d 100011   		.ascii	"\020\000\021"
 12143 0010 19       		.byte	25
 12144 0011 040004   		.ascii	"\004\000\004"
 12145 0014 1A       		.byte	26
 12146 0015 030003   		.ascii	"\003\000\003"
 12147 0018 1B       		.byte	27
 12148 0019 130013   		.ascii	"\023\000\023"
 12149 001c 1C       		.byte	28
 12150 001d 140014   		.ascii	"\024\000\024"
 12151 0020 1E       		.byte	30
 12152 0021 171717   		.ascii	"\027\027\027"
 12153 0024 1F       		.byte	31
 12154 0025 080808   		.ascii	"\010\010\010"
ARM GAS  /tmp/ccQmaUTi.s 			page 332


 12155 0028 20       		.byte	32
 12156 0029 060606   		.ascii	"\006\006\006"
 12157 002c 21       		.byte	33
 12158 002d 010502   		.ascii	"\001\005\002"
 12159              		.section	.rodata.conv_catalogue,"a"
 12160              		.align	2
 12161              		.set	.LANCHOR5,. + 0
 12164              	conv_catalogue:
 12165 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 12165      2B2DDD37 
 12165      27393133 
 12165      111605DC 
 12165      DE19
 12166 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 12166      0D0F8D08 
 12166      8F0A2A2C 
 12166      47434517 
 12166      3F30
 12167 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 12167      02062622 
 12167      20282435 
 12167      2F012310 
 12167      0C0E2112 
 12168 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 12168      1E292E09 
 12168      36383E3A 
 12168      3C4025DF 
 12168      3D8B8E03 
 12169 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 12169      4A484642 
 12169      441F
 12170              		.section	.rodata.conv_mapping.9495,"a"
 12171              		.align	2
 12172              		.set	.LANCHOR8,. + 0
 12175              	conv_mapping.9495:
 12176 0000 8502     		.short	645
 12177 0002 8402     		.short	644
 12178 0004 8602     		.short	646
 12179 0006 8702     		.short	647
 12180 0008 8202     		.short	642
 12181 000a 8302     		.short	643
 12182 000c 3202     		.short	562
 12183 000e 3302     		.short	563
 12184 0010 3402     		.short	564
 12185 0012 3502     		.short	565
 12186 0014 3602     		.short	566
 12187 0016 3702     		.short	567
 12188              		.section	.rodata.cplx_catalogue,"a"
 12189              		.align	2
 12192              	cplx_catalogue:
 12193 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 12193      013BCEE1 
 12193      0DDA785F 
 12193      57DA6676 
 12193      66E7E5CF 
 12194 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
 12194      A2EB09B5 
ARM GAS  /tmp/ccQmaUTi.s 			page 333


 12194      F87500
 12195              		.section	.rodata.disp.9310,"a"
 12196              		.align	2
 12197              		.set	.LANCHOR15,. + 0
 12200              	disp.9310:
 12201 0000 03       		.byte	3
 12202 0001 02       		.byte	2
 12203 0002 05       		.byte	5
 12204 0003 04       		.byte	4
 12205              		.section	.rodata.int_catalogue,"a"
 12206              		.align	2
 12209              	int_catalogue:
 12210 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 12210      F53D9BE2 
 12210      59BD10AF 
 12210      6434F569 
 12210      D926A094 
 12211 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 12211      965C9946 
 12211      B1716ECC 
 12211      36B495BB 
 12211      6EF3DE
 12212 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 12212      A0FBBC6F 
 12212      2C3D840D 
 12212      4CA42DAE 
 12212      2B1B7AE0 
 12213 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
 12213      E6BAAEEB 
 12213      CAD8AB49 
 12213      100719
 12214 004a C7       		.ascii	"\307"
 12215              		.section	.rodata.linear_key_map.9143,"a"
 12216              		.align	2
 12217              		.set	.LANCHOR1,. + 0
 12220              	linear_key_map.9143:
 12221 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 12221      04050607 
 12221      08090A0B 
 12221      0C
 12222 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 12222      00111213 
 12222      14150016 
 12222      17
 12223 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 12223      1B1C1D1E 
 12223      1F002021 
 12223      22232425 
 12223      25252525 
 12224 002e 25       		.ascii	"%"
 12225              		.section	.rodata.linear_key_map.9147,"a"
 12226              		.align	2
 12227              		.set	.LANCHOR18,. + 0
 12230              	linear_key_map.9147:
 12231 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 12231      04050607 
 12231      08222222 
ARM GAS  /tmp/ccQmaUTi.s 			page 334


 12231      090A0B
 12232 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 12232      0F101112 
 12232      00131415 
 12232      16
 12233 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 12233      1A1B1C00 
 12233      1D1E1F20 
 12233      21222222 
 12234 002c 040522   		.ascii	"\004\005\""
 12235              		.section	.rodata.map.9159,"a"
 12236              		.align	2
 12237              		.set	.LANCHOR0,. + 0
 12240              	map.9159:
 12241 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 12241      FF7F7F7F 
 12241      6D6E6F6C 
 12241      FFFFFFFF 
 12242 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 12242      097F7FE7 
 12242      05067F7F 
 12242      E4
 12243 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\177"
 12243      00F07F7F 
 12243      7F
 12244              		.section	.rodata.matrix_catalogue,"a"
 12245              		.align	2
 12248              	matrix_catalogue:
 12249 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 12249      D835DC23 
 12249      6D856E58 
 12249      66E1C16E 
 12249      98A631C3 
 12250 0017 1C       		.ascii	"\034"
 12251              		.section	.rodata.mode_catalogue,"a"
 12252              		.align	2
 12255              	mode_catalogue:
 12256 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 12256      8BBEC663 
 12256      A8E91F88 
 12256      01FC7CB8 
 12257 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 12257      2449C26C 
 12257      62194932 
 12257      489A1930 
 12257      821083
 12258 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 12258      87320A63 
 12258      10C7324A 
 12258      7314C623 
 12258      8CE0E039 
 12259 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 12259      BB0F33C8 
 12259      99
 12260              		.section	.rodata.op_map.9226,"a"
 12261              		.align	2
 12262              		.set	.LANCHOR22,. + 0
ARM GAS  /tmp/ccQmaUTi.s 			page 335


 12265              	op_map.9226:
 12266 0000 1500     		.short	21
 12267 0002 0B02     		.short	523
 12268 0004 0003     		.short	768
 12269 0006 0A02     		.short	522
 12270 0008 1300     		.short	19
 12271 000a 1400     		.short	20
 12272 000c 0300     		.short	3
 12273 000e 0A00     		.short	10
 12274 0010 0701     		.short	263
 12275 0012 0000     		.short	0
 12276 0014 6531     		.short	12645
 12277 0016 0300     		.short	3
 12278 0018 0200     		.short	2
 12279 001a 0100     		.short	1
 12280 001c 4400     		.short	68
 12281 001e 0C00     		.short	12
 12282 0020 0D00     		.short	13
 12283 0022 0E00     		.short	14
 12284 0024 0403     		.short	772
 12285 0026 2F00     		.short	47
 12286 0028 0900     		.short	9
 12287 002a 0A00     		.short	10
 12288 002c 0B00     		.short	11
 12289 002e 0303     		.short	771
 12290 0030 2E00     		.short	46
 12291 0032 0600     		.short	6
 12292 0034 0700     		.short	7
 12293 0036 0800     		.short	8
 12294 0038 0203     		.short	770
 12295 003a 3300     		.short	51
 12296 003c 0500     		.short	5
 12297 003e 0400     		.short	4
 12298 0040 3B01     		.short	315
 12299 0042 0103     		.short	769
 12300 0044 0001     		.short	256
 12301              		.section	.rodata.op_map.9249,"a"
 12302              		.align	2
 12303              		.set	.LANCHOR19,. + 0
 12306              	op_map.9249:
 12307 0000 0100     		.short	1
 12308 0002 0000     		.short	0
 12309 0004 20F2     		.short	-3552
 12310 0006 23F2     		.short	-3549
 12311 0008 21F2     		.short	-3551
 12312 000a 24F2     		.short	-3548
 12313 000c 22F2     		.short	-3550
 12314 000e 25F2     		.short	-3547
 12315 0010 47F1     		.short	-3769
 12316 0012 46F1     		.short	-3770
 12317 0014 4E01     		.short	334
 12318 0016 4D01     		.short	333
 12319 0018 5C01     		.short	348
 12320 001a 35F1     		.short	-3787
 12321 001c 5B01     		.short	347
 12322 001e 36F1     		.short	-3786
 12323 0020 3301     		.short	307
ARM GAS  /tmp/ccQmaUTi.s 			page 336


 12324 0022 37F1     		.short	-3785
 12325 0024 3300     		.short	51
 12326 0026 0C01     		.short	268
 12327 0028 2B00     		.short	43
 12328 002a 2C00     		.short	44
 12329 002c 028B     		.short	-29950
 12330 002e 088B     		.short	-29944
 12331 0030 0A8B     		.short	-29942
 12332 0032 108B     		.short	-29936
 12333 0034 4301     		.short	323
 12334 0036 3D01     		.short	317
 12335 0038 0902     		.short	521
 12336 003a 0802     		.short	520
 12337 003c 1002     		.short	528
 12338 003e 0D02     		.short	525
 12339 0040 0F02     		.short	527
 12340 0042 0E02     		.short	526
 12341 0044 0003     		.short	768
 12342 0046 0803     		.short	776
 12343 0048 0BF2     		.short	-3573
 12344 004a 1603     		.short	790
 12345 004c 1203     		.short	786
 12346 004e 1303     		.short	787
 12347 0050 3DF2     		.short	-3523
 12348 0052 3EF2     		.short	-3522
 12349 0054 24F1     		.short	-3804
 12350 0056 1EF1     		.short	-3810
 12351 0058 75F2     		.short	-3467
 12352 005a 27F1     		.short	-3801
 12353 005c 0A02     		.short	522
 12354 005e 1602     		.short	534
 12355 0060 5100     		.short	81
 12356 0062 5200     		.short	82
 12357 0064 0000     		.short	0
 12358 0066 0100     		.short	1
 12359 0068 48F0     		.short	-4024
 12360 006a 4BF0     		.short	-4021
 12361 006c 47F0     		.short	-4025
 12362 006e 46F0     		.short	-4026
 12363 0070 77F2     		.short	-3465
 12364 0072 78F2     		.short	-3464
 12365 0074 3300     		.short	51
 12366 0076 3300     		.short	51
 12367 0078 0502     		.short	517
 12368 007a 0602     		.short	518
 12369 007c 0402     		.short	516
 12370 007e 0002     		.short	512
 12371 0080 4200     		.short	66
 12372 0082 3801     		.short	312
 12373 0084 3A00     		.short	58
 12374 0086 3B00     		.short	59
 12375 0088 0001     		.short	256
 12376 008a 0001     		.short	256
 12377              		.section	.rodata.op_map.9272,"a"
 12378              		.align	2
 12379              		.set	.LANCHOR21,. + 0
 12382              	op_map.9272:
ARM GAS  /tmp/ccQmaUTi.s 			page 337


 12383 0000 4C80     		.short	-32692
 12384 0002 4D80     		.short	-32691
 12385 0004 4E80     		.short	-32690
 12386 0006 4F80     		.short	-32689
 12387 0008 3300     		.short	51
 12388 000a 3300     		.short	51
 12389 000c 3300     		.short	51
 12390 000e 2180     		.short	-32735
 12391 0010 0801     		.short	264
 12392 0012 8780     		.short	-32633
 12393 0014 1180     		.short	-32751
 12394 0016 7C02     		.short	636
 12395 0018 5560     		.short	24661
 12396 001a 3F01     		.short	319
 12397 001c 4580     		.short	-32699
 12398 001e 1C03     		.short	796
 12399 0020 1D03     		.short	797
 12400 0022 1E03     		.short	798
 12401 0024 0603     		.short	774
 12402 0026 2F02     		.short	559
 12403 0028 3300     		.short	51
 12404 002a 3300     		.short	51
 12405 002c 3300     		.short	51
 12406 002e 3300     		.short	51
 12407 0030 3300     		.short	51
 12408 0032 3300     		.short	51
 12409 0034 3300     		.short	51
 12410 0036 3300     		.short	51
 12411 0038 1640     		.short	16406
 12412 003a 0201     		.short	258
 12413 003c 6D80     		.short	-32659
 12414 003e 5001     		.short	336
 12415 0040 3300     		.short	51
 12416 0042 1540     		.short	16405
 12417 0044 0001     		.short	256
 12418              		.section	.rodata.op_map.9282,"a"
 12419              		.align	2
 12420              		.set	.LANCHOR17,. + 0
 12423              	op_map.9282:
 12424 0000 0100     		.short	1
 12425 0002 0100     		.short	1
 12426 0004 0000     		.short	0
 12427 0006 0000     		.short	0
 12428 0008 0B05     		.short	1291
 12429 000a 2005     		.short	1312
 12430 000c 2305     		.short	1315
 12431 000e 3300     		.short	51
 12432 0010 0006     		.short	1536
 12433 0012 2105     		.short	1313
 12434 0014 2405     		.short	1316
 12435 0016 3300     		.short	51
 12436 0018 0A05     		.short	1290
 12437 001a 2205     		.short	1314
 12438 001c 2505     		.short	1317
 12439 001e 3300     		.short	51
 12440 0020 3300     		.short	51
 12441 0022 4701     		.short	327
ARM GAS  /tmp/ccQmaUTi.s 			page 338


 12442 0024 4601     		.short	326
 12443 0026 3300     		.short	51
 12444 0028 3300     		.short	51
 12445 002a 3300     		.short	51
 12446 002c 3300     		.short	51
 12447 002e 3300     		.short	51
 12448 0030 15FF     		.short	-235
 12449 0032 3300     		.short	51
 12450 0034 3300     		.short	51
 12451 0036 3300     		.short	51
 12452 0038 1AFF     		.short	-230
 12453 003a 3300     		.short	51
 12454 003c 3300     		.short	51
 12455 003e 8CFF     		.short	-116
 12456 0040 0901     		.short	265
 12457 0042 3300     		.short	51
 12458 0044 3300     		.short	51
 12459 0046 0A01     		.short	266
 12460 0048 0B01     		.short	267
 12461 004a 3300     		.short	51
 12462 004c 0D01     		.short	269
 12463 004e 0D01     		.short	269
 12464 0050 663F     		.short	16230
 12465 0052 3300     		.short	51
 12466 0054 3300     		.short	51
 12467 0056 1FFF     		.short	-225
 12468 0058 3805     		.short	1336
 12469 005a 3300     		.short	51
 12470 005c 3300     		.short	51
 12471 005e 3905     		.short	1337
 12472 0060 5521     		.short	8533
 12473 0062 3300     		.short	51
 12474 0064 3300     		.short	51
 12475 0066 5521     		.short	8533
 12476 0068 3300     		.short	51
 12477 006a 3300     		.short	51
 12478 006c 3300     		.short	51
 12479 006e 3300     		.short	51
 12480 0070 3300     		.short	51
 12481 0072 0905     		.short	1289
 12482 0074 0805     		.short	1288
 12483 0076 3300     		.short	51
 12484 0078 07A8     		.short	-22521
 12485 007a 1005     		.short	1296
 12486 007c 0D05     		.short	1293
 12487 007e 3300     		.short	51
 12488 0080 08A8     		.short	-22520
 12489 0082 0F05     		.short	1295
 12490 0084 0E05     		.short	1294
 12491 0086 3300     		.short	51
 12492 0088 09A8     		.short	-22519
 12493 008a 0006     		.short	1536
 12494 008c 0806     		.short	1544
 12495 008e 3300     		.short	51
 12496 0090 0406     		.short	1540
 12497 0092 0B05     		.short	1291
 12498 0094 1606     		.short	1558
ARM GAS  /tmp/ccQmaUTi.s 			page 339


 12499 0096 3300     		.short	51
 12500 0098 3300     		.short	51
 12501 009a 1206     		.short	1554
 12502 009c 1306     		.short	1555
 12503 009e 2F05     		.short	1327
 12504 00a0 04A8     		.short	-22524
 12505 00a2 3300     		.short	51
 12506 00a4 3300     		.short	51
 12507 00a6 3300     		.short	51
 12508 00a8 05A8     		.short	-22523
 12509 00aa 3300     		.short	51
 12510 00ac 3300     		.short	51
 12511 00ae 3300     		.short	51
 12512 00b0 06A8     		.short	-22522
 12513 00b2 3300     		.short	51
 12514 00b4 3300     		.short	51
 12515 00b6 3300     		.short	51
 12516 00b8 0306     		.short	1539
 12517 00ba 0A05     		.short	1290
 12518 00bc 1605     		.short	1302
 12519 00be 1605     		.short	1302
 12520 00c0 3300     		.short	51
 12521 00c2 3300     		.short	51
 12522 00c4 3300     		.short	51
 12523 00c6 3300     		.short	51
 12524 00c8 01A8     		.short	-22527
 12525 00ca 0000     		.short	0
 12526 00cc 0100     		.short	1
 12527 00ce 3300     		.short	51
 12528 00d0 02A8     		.short	-22526
 12529 00d2 3300     		.short	51
 12530 00d4 3300     		.short	51
 12531 00d6 3300     		.short	51
 12532 00d8 03A8     		.short	-22525
 12533 00da 3300     		.short	51
 12534 00dc 3300     		.short	51
 12535 00de 3300     		.short	51
 12536 00e0 0206     		.short	1538
 12537 00e2 3300     		.short	51
 12538 00e4 3300     		.short	51
 12539 00e6 3300     		.short	51
 12540 00e8 3300     		.short	51
 12541 00ea 3300     		.short	51
 12542 00ec 3300     		.short	51
 12543 00ee 0201     		.short	258
 12544 00f0 00A8     		.short	-22528
 12545 00f2 0505     		.short	1285
 12546 00f4 0605     		.short	1286
 12547 00f6 3300     		.short	51
 12548 00f8 B801     		.short	440
 12549 00fa 0405     		.short	1284
 12550 00fc 0005     		.short	1280
 12551 00fe 3300     		.short	51
 12552 0100 3300     		.short	51
 12553 0102 3300     		.short	51
 12554 0104 3300     		.short	51
 12555 0106 3300     		.short	51
ARM GAS  /tmp/ccQmaUTi.s 			page 340


 12556 0108 0106     		.short	1537
 12557 010a 3300     		.short	51
 12558 010c 3300     		.short	51
 12559 010e 3300     		.short	51
 12560 0110 0001     		.short	256
 12561 0112 0001     		.short	256
 12562 0114 0001     		.short	256
 12563 0116 0001     		.short	256
 12564              		.section	.rodata.op_map.9294,"a"
 12565              		.align	2
 12566              		.set	.LANCHOR13,. + 0
 12569              	op_map.9294:
 12570 0000 2A27     		.ascii	"*'"
 12571 0002 2B28     		.ascii	"+("
 12572 0004 2C29     		.ascii	",)"
 12573              		.section	.rodata.op_map.9309,"a"
 12574              		.align	2
 12575              		.set	.LANCHOR14,. + 0
 12578              	op_map.9309:
 12579 0000 1A02     		.short	538
 12580 0002 7B02     		.short	635
 12581 0004 1B02     		.short	539
 12582 0006 7A02     		.short	634
 12583 0008 1C02     		.short	540
 12584 000a 3300     		.short	51
 12585              		.section	.rodata.op_map2.9250,"a"
 12586              		.align	2
 12587              		.set	.LANCHOR20,. + 0
 12590              	op_map2.9250:
 12591 0000 3300     		.short	51
 12592 0002 3300     		.short	51
 12593 0004 0003     		.short	768
 12594 0006 0A02     		.short	522
 12595              		.section	.rodata.opcode_breaks,"a"
 12596              		.align	2
 12597              		.set	.LANCHOR7,. + 0
 12600              	opcode_breaks:
 12601 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 12601      0C992F
 12602              		.section	.rodata.prob_catalogue,"a"
 12603              		.align	2
 12606              	prob_catalogue:
 12607 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 12607      44561575 
 12607      9D595013 
 12607      F57D414E 
 12607      55D4E93B 
 12608 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 12608      15955355 
 12608      55459956 
 12608      53D4E591 
 12608      50525485 
 12609 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 12609      85474D95 
 12609      C4DD384F 
 12609      53C5793E 
 12609      569304D1 
ARM GAS  /tmp/ccQmaUTi.s 			page 341


 12610 0043 B0       		.ascii	"\260"
 12611              		.section	.rodata.prog_catalogue,"a"
 12612              		.align	2
 12615              	prog_catalogue:
 12616 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 12616      791D4781 
 12616      C8742A31 
 12616      9B4042B3 
 12616      2CE1BA92 
 12617 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
 12617      DA332D1B 
 12617      36CFC28E 
 12617      2390E738 
 12617      CE8C
 12618 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 12618      B0D0DC39 
 12618      47039B09 
 12618      ACCDF1D8 
 12618      CD
 12619 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 12619      B22C0E1B 
 12619      18D20DEB 
 12619      2302A4
 12620 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 12620      CBA8AA3C 
 12620      00AE2B6F 
 12620      FC58
 12621              		.section	.rodata.program_xfcn,"a"
 12622              		.align	2
 12625              	program_xfcn:
 12626 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 12626      F33057D5 
 12626      FAF53D8A 
 12626      23B5816B 
 12626      DBE259BD 
 12627 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 12627      425D12E4 
 12627      BD8341AF 
 12627      6434F569 
 12627      D21489
 12628 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
 12628      95A664B0 
 12628      E6F1756A 
 12628      0946D105 
 12628      7019A4
 12629 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 12629      A65D965C 
 12629      994601AC 
 12629      5C5BB30D 
 12629      AD
 12630 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 12630      95BB6EF3 
 12630      DEEEBC30 
 12630      5BD301C0 
 12630      8683
 12631 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 12631      2BCB0F28 
ARM GAS  /tmp/ccQmaUTi.s 			page 342


 12631      DB2611B3 
 12631      0D573329 
 12631      0841D0
 12632 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 12632      1B75FCA0 
 12632      27AB82A8 
 12632      9FADEB5A 
 12632      E6
 12633 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
 12633      D8A12AD9 
 12633      94919D67 
 12633      99B671
 12634 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 12634      19C5689B 
 12634      F5B56A68 
 12634      5C70
 12635              		.section	.rodata.smap.9174,"a"
 12636              		.align	2
 12637              		.set	.LANCHOR16,. + 0
 12640              	smap.9174:
 12641 0000 00010002 		.ascii	"\000\001\000\002"
 12642              		.section	.rodata.stats_catalogue,"a"
 12643              		.align	2
 12646              	stats_catalogue:
 12647 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 12647      5D17C971 
 12647      58611685 
 12647      95A05417 
 12647      85
 12648 0011 514C575A 		.ascii	"QLWZ\200"
 12648      80
 12649              		.section	.rodata.sums_catalogue,"a"
 12650              		.align	2
 12653              	sums_catalogue:
 12654 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 12654      4A1384C1 
 12654      20451104 
 12654      F11C4911 
 12654      8500
 12655              		.section	.rodata.test_catalogue,"a"
 12656              		.align	2
 12659              	test_catalogue:
 12660 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 12660      EB2FCBDB 
 12660      96E9BAEE 
 12660      A2F2E4B9 
 12661 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 12661      2EEFEB4C 
 12661      9D368B82 
 12661      F8BA350B 
 12662 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 12662      2C1354D6 
 12662      AFEC3B08 
 12662      B73C40
 12663              		.text
 12664              	.Letext0:
 12665              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
ARM GAS  /tmp/ccQmaUTi.s 			page 343


 12666              		.file 3 "dmcp/dmcp.h"
 12667              		.file 4 "src/decNumber/decContext.h"
 12668              		.file 5 "src/decNumber/decNumber.h"
 12669              		.file 6 "src/decNumber/decimal64.h"
 12670              		.file 7 "src/decNumber/decimal128.h"
 12671              		.file 8 "src/xeq.h"
 12672              		.file 9 "src/data.h"
 12673              		.file 10 "src/keys.h"
 12674              		.file 11 "src/display.h"
 12675              		.file 12 "src/consts.h"
 12676              		.file 13 "src/storage.h"
 12677              		.file 14 "src/stats.h"
 12678              		.file 15 "src/catalogues.h"
 12679              		.file 16 "src/lcd.h"
 12680              		.file 17 "src/int.h"
ARM GAS  /tmp/ccQmaUTi.s 			page 344


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccQmaUTi.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccQmaUTi.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccQmaUTi.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccQmaUTi.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccQmaUTi.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccQmaUTi.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccQmaUTi.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccQmaUTi.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccQmaUTi.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccQmaUTi.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccQmaUTi.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccQmaUTi.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccQmaUTi.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccQmaUTi.s:696    .text.init_cat:00000000000000ec $d
     /tmp/ccQmaUTi.s:702    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccQmaUTi.s:709    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccQmaUTi.s:794    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccQmaUTi.s:799    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccQmaUTi.s:806    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccQmaUTi.s:860    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccQmaUTi.s:867    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccQmaUTi.s:874    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccQmaUTi.s:916    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccQmaUTi.s:921    .text.reset_arg:0000000000000000 $t
     /tmp/ccQmaUTi.s:928    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccQmaUTi.s:972    .text.reset_arg:0000000000000018 $d
     /tmp/ccQmaUTi.s:977    .text.arg_eval:0000000000000000 $t
     /tmp/ccQmaUTi.s:984    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccQmaUTi.s:1106   .text.arg_eval:0000000000000074 $d
     /tmp/ccQmaUTi.s:1113   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccQmaUTi.s:1120   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccQmaUTi.s:1178   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccQmaUTi.s:1183   .text.arg_digit:0000000000000000 $t
     /tmp/ccQmaUTi.s:1190   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccQmaUTi.s:1415   .text.arg_digit:00000000000000c8 $d
     /tmp/ccQmaUTi.s:1423   .text.intltr:0000000000000000 $t
     /tmp/ccQmaUTi.s:1430   .text.intltr:0000000000000000 intltr
     /tmp/ccQmaUTi.s:1493   .text.intltr:0000000000000030 $d
     /tmp/ccQmaUTi.s:1499   .text.set_window:0000000000000000 $t
     /tmp/ccQmaUTi.s:1506   .text.set_window:0000000000000000 set_window
     /tmp/ccQmaUTi.s:1653   .text.set_window:000000000000008c $d
     /tmp/ccQmaUTi.s:1660   .text.arg_storcl:0000000000000000 $t
     /tmp/ccQmaUTi.s:1667   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccQmaUTi.s:1783   .text.arg_storcl:0000000000000040 $d
     /tmp/ccQmaUTi.s:1788   .text.process_arg:0000000000000000 $t
     /tmp/ccQmaUTi.s:1795   .text.process_arg:0000000000000000 process_arg
     /tmp/ccQmaUTi.s:2016   .text.process_arg:000000000000009c $d
     /tmp/ccQmaUTi.s:2063   .text.process_arg:00000000000000f8 $t
     /tmp/ccQmaUTi.s:2096   .text.process_arg:000000000000011e $d
     /tmp/ccQmaUTi.s:2540   .text.process_arg:00000000000002b8 $d
     /tmp/ccQmaUTi.s:2552   .text.process_arg:00000000000002cc $t
     /tmp/ccQmaUTi.s:2925   .text.process_arg:0000000000000474 $d
     /tmp/ccQmaUTi.s:2930   .text.cur_shift:0000000000000000 $t
     /tmp/ccQmaUTi.s:2938   .text.cur_shift:0000000000000000 cur_shift
ARM GAS  /tmp/ccQmaUTi.s 			page 345


     /tmp/ccQmaUTi.s:2966   .text.cur_shift:0000000000000010 $d
     /tmp/ccQmaUTi.s:2971   .text.reset_shift:0000000000000000 $t
     /tmp/ccQmaUTi.s:2979   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccQmaUTi.s:3040   .text.reset_shift:0000000000000014 $d
     /tmp/ccQmaUTi.s:3045   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccQmaUTi.s:3053   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccQmaUTi.s:3081   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccQmaUTi.s:3086   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccQmaUTi.s:3094   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccQmaUTi.s:3152   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccQmaUTi.s:3157   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccQmaUTi.s:3165   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccQmaUTi.s:3201   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccQmaUTi.s:3207   .text.init_state:0000000000000000 $t
     /tmp/ccQmaUTi.s:3215   .text.init_state:0000000000000000 init_state
     /tmp/ccQmaUTi.s:3321   .text.init_state:000000000000005c $d
     /tmp/ccQmaUTi.s:3327   .text.soft_init_state:0000000000000000 $t
     /tmp/ccQmaUTi.s:3335   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccQmaUTi.s:3430   .text.soft_init_state:0000000000000048 $d
     /tmp/ccQmaUTi.s:3436   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccQmaUTi.s:3444   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccQmaUTi.s:3465   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccQmaUTi.s:3471   .text.current_catalogue:0000000000000000 $t
     /tmp/ccQmaUTi.s:3479   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccQmaUTi.s:3735   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccQmaUTi.s:3745   .text.process_catalogue:0000000000000000 $t
     /tmp/ccQmaUTi.s:3752   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccQmaUTi.s:4084   .text.process_catalogue:0000000000000100 $d
     /tmp/ccQmaUTi.s:4116   .text.process_catalogue:0000000000000120 $t
     /tmp/ccQmaUTi.s:4624   .text.process_catalogue:00000000000002dc $d
     /tmp/ccQmaUTi.s:4645   .text.process_catalogue:00000000000002fc $t
     /tmp/ccQmaUTi.s:4675   .text.find_pos:0000000000000000 $t
     /tmp/ccQmaUTi.s:4683   .text.find_pos:0000000000000000 find_pos
     /tmp/ccQmaUTi.s:4856   .text.find_pos:0000000000000080 $d
     /tmp/ccQmaUTi.s:4862   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccQmaUTi.s:4870   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccQmaUTi.s:4902   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccQmaUTi.s:4908   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccQmaUTi.s:4918   .text.process_keycode:0000000000000000 $t
     /tmp/ccQmaUTi.s:4926   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccQmaUTi.s:5544   .text.process_keycode:00000000000002a8 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccQmaUTi.s:5563   .text.process_keycode:00000000000002e8 $t
     /tmp/ccQmaUTi.s:5680   .text.process_keycode:0000000000000362 $d
     /tmp/ccQmaUTi.s:5727   .text.process_keycode:00000000000003be $t
     /tmp/ccQmaUTi.s:6251   .text.process_keycode:00000000000005a0 $d
     /tmp/ccQmaUTi.s:6260   .text.process_keycode:00000000000005c4 $t
     /tmp/ccQmaUTi.s:6350   .text.process_keycode:0000000000000620 $d
     /tmp/ccQmaUTi.s:6373   .text.process_keycode:0000000000000664 $t
     /tmp/ccQmaUTi.s:6452   .text.process_keycode:00000000000006c8 $d
     /tmp/ccQmaUTi.s:6482   .text.process_keycode:00000000000006ec $d
     /tmp/ccQmaUTi.s:6526   .text.process_keycode:0000000000000798 $t
     /tmp/ccQmaUTi.s:6830   .text.process_keycode:00000000000008b0 $d
     /tmp/ccQmaUTi.s:6839   .text.process_keycode:00000000000008d4 $t
ARM GAS  /tmp/ccQmaUTi.s 			page 346


     /tmp/ccQmaUTi.s:6935   .text.process_keycode:0000000000000930 $d
     /tmp/ccQmaUTi.s:6965   .text.process_keycode:0000000000000998 $d
     /tmp/ccQmaUTi.s:6971   .text.process_keycode:00000000000009a8 $t
     /tmp/ccQmaUTi.s:7007   .text.process_keycode:00000000000009dc $d
     /tmp/ccQmaUTi.s:7011   .text.process_keycode:00000000000009ec $t
     /tmp/ccQmaUTi.s:8028   .text.process_keycode:0000000000000d84 $d
     /tmp/ccQmaUTi.s:8043   .text.process_keycode:0000000000000da8 $t
     /tmp/ccQmaUTi.s:8396   .text.process_keycode:0000000000000ecc $d
     /tmp/ccQmaUTi.s:8431   .text.process_keycode:0000000000000f58 $t
     /tmp/ccQmaUTi.s:8666   .text.process_keycode:0000000000001040 $d
     /tmp/ccQmaUTi.s:8686   .text.process_keycode:0000000000001090 $t
     /tmp/ccQmaUTi.s:8738   .text.process_keycode:00000000000010d4 $d
     /tmp/ccQmaUTi.s:8767   .text.process_keycode:00000000000010e8 $t
     /tmp/ccQmaUTi.s:8899   .text.process_keycode:0000000000001154 $d
     /tmp/ccQmaUTi.s:8917   .text.process_keycode:000000000000119c $t
     /tmp/ccQmaUTi.s:9332   .text.process_keycode:00000000000012e4 $d
     /tmp/ccQmaUTi.s:9366   .text.process_keycode:000000000000136c $t
     /tmp/ccQmaUTi.s:9645   .text.process_keycode:0000000000001460 $d
     /tmp/ccQmaUTi.s:9661   .text.process_keycode:0000000000001478 $t
     /tmp/ccQmaUTi.s:9701   .text.process_keycode:000000000000149c $d
     /tmp/ccQmaUTi.s:9736   .text.process_keycode:0000000000001524 $t
     /tmp/ccQmaUTi.s:10078  .text.process_keycode:000000000000160e $d
     /tmp/ccQmaUTi.s:10383  .text.process_keycode:000000000000175c $d
     /tmp/ccQmaUTi.s:10399  .text.process_keycode:000000000000177c $t
     /tmp/ccQmaUTi.s:10938  .text.process_keycode:00000000000019c4 $d
     /tmp/ccQmaUTi.s:10980  .text.process_keycode:0000000000001a68 $t
     /tmp/ccQmaUTi.s:11373  .text.process_keycode:0000000000001bec $d
     /tmp/ccQmaUTi.s:11385  .text.process_keycode:0000000000001bf8 $t
     /tmp/ccQmaUTi.s:11773  .text.process_keycode:0000000000001d60 $d
     /tmp/ccQmaUTi.s:11784  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccQmaUTi.s:11792  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccQmaUTi.s:11948  .text.process_keycode_with_shift:0000000000000074 $d
     /tmp/ccQmaUTi.s:11963  .bss.was_paused.9650:0000000000000000 $d
     /tmp/ccQmaUTi.s:11967  .bss.was_paused.9650:0000000000000000 was_paused.9650
     /tmp/ccQmaUTi.s:11970  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccQmaUTi.s:11973  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccQmaUTi.s:11976  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:11979  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccQmaUTi.s:11983  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccQmaUTi.s:11986  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccQmaUTi.s:11989  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccQmaUTi.s:11993  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccQmaUTi.s:11999  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccQmaUTi.s:12003  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccQmaUTi.s:12009  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccQmaUTi.s:12012  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccQmaUTi.s:12016  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccQmaUTi.s:12019  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccQmaUTi.s:12022  .rodata.alphamap.9182:0000000000000000 $d
     /tmp/ccQmaUTi.s:12026  .rodata.alphamap.9182:0000000000000000 alphamap.9182
     /tmp/ccQmaUTi.s:12066  .rodata.amap.9173:0000000000000000 $d
     /tmp/ccQmaUTi.s:12070  .rodata.amap.9173:0000000000000000 amap.9173
     /tmp/ccQmaUTi.s:12084  .rodata.catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12087  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccQmaUTi.s:12096  .rodata.catalogue_sizes.9448:0000000000000000 $d
     /tmp/ccQmaUTi.s:12100  .rodata.catalogue_sizes.9448:0000000000000000 catalogue_sizes.9448
     /tmp/ccQmaUTi.s:12103  .rodata.catalogues.9456:0000000000000000 $d
ARM GAS  /tmp/ccQmaUTi.s 			page 347


     /tmp/ccQmaUTi.s:12107  .rodata.catalogues.9456:0000000000000000 catalogues.9456
     /tmp/ccQmaUTi.s:12192  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccQmaUTi.s:12646  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccQmaUTi.s:12606  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccQmaUTi.s:12209  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccQmaUTi.s:12615  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccQmaUTi.s:12625  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccQmaUTi.s:12659  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccQmaUTi.s:12255  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccQmaUTi.s:12653  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccQmaUTi.s:12248  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccQmaUTi.s:12130  .rodata.cmap.9172:0000000000000000 $d
     /tmp/ccQmaUTi.s:12134  .rodata.cmap.9172:0000000000000000 cmap.9172
     /tmp/ccQmaUTi.s:12160  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12164  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccQmaUTi.s:12171  .rodata.conv_mapping.9495:0000000000000000 $d
     /tmp/ccQmaUTi.s:12175  .rodata.conv_mapping.9495:0000000000000000 conv_mapping.9495
     /tmp/ccQmaUTi.s:12189  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12196  .rodata.disp.9310:0000000000000000 $d
     /tmp/ccQmaUTi.s:12200  .rodata.disp.9310:0000000000000000 disp.9310
     /tmp/ccQmaUTi.s:12206  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12216  .rodata.linear_key_map.9143:0000000000000000 $d
     /tmp/ccQmaUTi.s:12220  .rodata.linear_key_map.9143:0000000000000000 linear_key_map.9143
     /tmp/ccQmaUTi.s:12226  .rodata.linear_key_map.9147:0000000000000000 $d
     /tmp/ccQmaUTi.s:12230  .rodata.linear_key_map.9147:0000000000000000 linear_key_map.9147
     /tmp/ccQmaUTi.s:12236  .rodata.map.9159:0000000000000000 $d
     /tmp/ccQmaUTi.s:12240  .rodata.map.9159:0000000000000000 map.9159
     /tmp/ccQmaUTi.s:12245  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12252  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12261  .rodata.op_map.9226:0000000000000000 $d
     /tmp/ccQmaUTi.s:12265  .rodata.op_map.9226:0000000000000000 op_map.9226
     /tmp/ccQmaUTi.s:12302  .rodata.op_map.9249:0000000000000000 $d
     /tmp/ccQmaUTi.s:12306  .rodata.op_map.9249:0000000000000000 op_map.9249
     /tmp/ccQmaUTi.s:12378  .rodata.op_map.9272:0000000000000000 $d
     /tmp/ccQmaUTi.s:12382  .rodata.op_map.9272:0000000000000000 op_map.9272
     /tmp/ccQmaUTi.s:12419  .rodata.op_map.9282:0000000000000000 $d
     /tmp/ccQmaUTi.s:12423  .rodata.op_map.9282:0000000000000000 op_map.9282
     /tmp/ccQmaUTi.s:12565  .rodata.op_map.9294:0000000000000000 $d
     /tmp/ccQmaUTi.s:12569  .rodata.op_map.9294:0000000000000000 op_map.9294
     /tmp/ccQmaUTi.s:12574  .rodata.op_map.9309:0000000000000000 $d
     /tmp/ccQmaUTi.s:12578  .rodata.op_map.9309:0000000000000000 op_map.9309
     /tmp/ccQmaUTi.s:12586  .rodata.op_map2.9250:0000000000000000 $d
     /tmp/ccQmaUTi.s:12590  .rodata.op_map2.9250:0000000000000000 op_map2.9250
     /tmp/ccQmaUTi.s:12596  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccQmaUTi.s:12600  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccQmaUTi.s:12603  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12612  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12622  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccQmaUTi.s:12636  .rodata.smap.9174:0000000000000000 $d
     /tmp/ccQmaUTi.s:12640  .rodata.smap.9174:0000000000000000 smap.9174
     /tmp/ccQmaUTi.s:12643  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12650  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:12656  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccQmaUTi.s:2100   .text.process_arg:0000000000000121 $d
     /tmp/ccQmaUTi.s:2100   .text.process_arg:0000000000000122 $t
     /tmp/ccQmaUTi.s:6471   .text.process_keycode:00000000000006db $d
     /tmp/ccQmaUTi.s:6471   .text.process_keycode:00000000000006dc $t
ARM GAS  /tmp/ccQmaUTi.s 			page 348


     /tmp/ccQmaUTi.s:10119  .text.process_keycode:0000000000001637 $d
     /tmp/ccQmaUTi.s:10119  .text.process_keycode:0000000000001638 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
local_regs_rarg
num_arg_digits
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
xeq_xrom
is_key_pressed
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
set_running_off
clr_dot
finish_RPN
xeq_sst_bst
message
delprog
set_menu
display_current_menu
stoprog
prt
scopy_char
TraceBuffer
clpall
ARM GAS  /tmp/ccQmaUTi.s 			page 349


clrprog
reset
clrall
set_pc
find_char
set_last_menu
find_user_pc
cmdgtocommon
global_regs
local_regs
alen
